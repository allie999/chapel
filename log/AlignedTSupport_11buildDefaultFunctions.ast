AST dump for AlignedTSupport after pass buildDefaultFunctions.
Module use list: 

{
  function chpl__init_AlignedTSupport[416079]() : void[4] "insert line file info" "module init"
  {
    (513431 return _void[55])
  }
  function =[781182](ref arg _arg1[781184]:aligned_t[88362], arg _arg2[781185]:aligned_t[88362]) : _unknown[51] "assignop" "compiler generated" "inline" "last resort"
  {
    (781188 '=' _arg1[781184] _arg2[781185])
    (781193 return _void[55])
  }
  type aligned_t[88362]
  function castableToAlignedT[88369](arg t[88367]:_any[178](?)) param : _unknown[51]
  {
    unknown ret[513373] "RVV" "param" "temp"
    unknown tmp[422396] "maybe param" "temp"
    (422407 'move' tmp[422396](88374 call isIntegralType t[88367]))
    unknown call_tmp[631990] "expr temp" "maybe param" "maybe type" "temp"
    (631993 'move' call_tmp[631990](422409 call _cond_invalid tmp[422396]))
    if call_tmp[631990]
    {
      (422412 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[560988] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[560989] "maybe param" "temp"
    unknown call_tmp[631995] "expr temp" "maybe param" "maybe type" "temp"
    (631998 'move' call_tmp[631995](422397 call isTrue tmp[422396]))
    (560994 'move' tmp[560989](560992 call _cond_test call_tmp[631995]))
    if tmp[560989]
    {
      (560999 'move' tmp[560988](560996 '_paramFoldLogical' tmp[560989] 1))
    }
    {
      unknown tmp[561001] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[632000] "expr temp" "maybe param" "maybe type" "temp"
      (632003 'move' call_tmp[632000](88378 call isBoolType t[88367]))
      (561003 'move' tmp[561001](422401 call isTrue call_tmp[632000]))
      (561008 'move' tmp[560988](561005 '_paramFoldLogical' tmp[560989] tmp[561001]))
    }
    (513378 'move' ret[513373](513377 'deref' tmp[560988]))
    (513375 return ret[513373])
  }
  function _cast[88392](arg t[88389]:aligned_t[88362], arg x[88395]:integral[199](?)) : _unknown[51] "inline"
  {
    unknown ret[513382] "RVV" "temp"
    unknown call_tmp[632005] "expr temp" "maybe param" "maybe type" "temp"
    (632008 'move' call_tmp[632005](88402 'cast' t[88389] x[88395]))
    (513387 'move' ret[513382](513386 'deref' call_tmp[632005]))
    (513384 return ret[513382])
  }
  function _cast[88414](arg t[88411]:aligned_t[88362], arg x[88417]:bool[10]) : _unknown[51] "inline"
  {
    unknown ret[513391] "RVV" "temp"
    unknown call_tmp[632010] "expr temp" "maybe param" "maybe type" "temp"
    (632013 'move' call_tmp[632010](88424 'cast' t[88411] x[88417]))
    (513396 'move' ret[513391](513395 'deref' call_tmp[632010]))
    (513393 return ret[513391])
  }
  function _cast[88436](arg t[88433]:chpl_anybool[181](?), arg x[88439]:aligned_t[88362]) : _unknown[51] "inline"
  {
    unknown ret[513400] "RVV" "temp"
    unknown call_tmp[632015] "expr temp" "maybe param" "maybe type" "temp"
    (632018 'move' call_tmp[632015](88446 'cast' t[88433] x[88439]))
    (513405 'move' ret[513400](513404 'deref' call_tmp[632015]))
    (513402 return ret[513400])
  }
  function _cast[88458](arg t[88455]:integral[199](?), arg x[88461]:aligned_t[88362]) : _unknown[51] "inline"
  {
    unknown ret[513409] "RVV" "temp"
    unknown call_tmp[632020] "expr temp" "maybe param" "maybe type" "temp"
    (632023 'move' call_tmp[632020](88468 'cast' t[88455] x[88461]))
    (513414 'move' ret[513409](513413 'deref' call_tmp[632020]))
    (513411 return ret[513409])
  }
  function defaultOfAlignedT[88478](arg t[88476]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[513418] "RVV" "temp"
    const defaultValue[88481] "dead at end of block" "const" "insert auto destroy"
    (541775 'default init var' defaultValue[88481] t[88476])
    (88484 'end of statement')
    unknown call_tmp[632025] "expr temp" "maybe param" "maybe type" "temp"
    (632028 'move' call_tmp[632025](88488 call _cast aligned_t[88362] defaultValue[88481]))
    (513423 'move' ret[513418](513422 'deref' call_tmp[632025]))
    gotoReturn _end_defaultOfAlignedT[513416] _end_defaultOfAlignedT[513416]
    (477207 'end of statement' defaultValue[88481])
    label _end_defaultOfAlignedT[513416]
    (513420 return ret[513418])
  }
  function aligned_t[88362].writeThis[88499](arg _mt[88504]:_MT[238], arg this[88501]:aligned_t[88362] :
  aligned_t[88362], arg f[88497]:_any[178](?)) : _unknown[51] throws "method" "no return value for void"
  {
    unknown call_tmp[632030] "expr temp" "maybe param" "maybe type" "temp"
    (632033 'move' call_tmp[632030](88514 call uint(64)[115] 64))
    unknown call_tmp[632035] "maybe param" "maybe type" "temp"
    (632038 'move' call_tmp[632035](88515 call _cast call_tmp[632030] this[88501]))
    unknown call_tmp[632040] "maybe param" "maybe type" "temp"
    (632043 'move' call_tmp[632040](88509 call uint(64)[115] 64))
    unknown tmp[88517] "dead at end of block" "insert auto destroy"
    (541777 'init var' tmp[88517] call_tmp[632035] call_tmp[632040])
    (88520 'end of statement')
    (88524 call <~> f[88497] tmp[88517])
    (477209 'end of statement' tmp[88517])
    (513427 return _void[55])
  }
  function aligned_t[88362].readThis[88534](arg _mt[88539]:_MT[238], arg this[88536]:aligned_t[88362] :
  aligned_t[88362], arg f[88532]:_any[178](?)) : _unknown[51] throws "method" "no return value for void"
  {
    unknown tmp[88545] "dead at end of block" "insert auto destroy"
    unknown call_tmp[632045] "expr temp" "maybe param" "maybe type" "temp"
    (632048 'move' call_tmp[632045](88544 call uint(64)[115] 64))
    (541779 'default init var' tmp[88545] call_tmp[632045])
    (88548 'end of statement')
    (88552 call <~> f[88532] tmp[88545])
    (477211 'end of statement' tmp[88545])
    unknown call_tmp[632050] "expr temp" "maybe param" "maybe type" "temp"
    (632053 'move' call_tmp[632050](88558 call _cast aligned_t[88362] tmp[88545]))
    (88560 call = this[88536] call_tmp[632050])
    (477213 'end of statement' tmp[88545])
    (513429 return _void[55])
  }
}