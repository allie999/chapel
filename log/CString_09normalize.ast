AST dump for CString after pass normalize.
Module use list: ChapelStandard SysCTypes 

{
  function chpl__init_CString[415912]() : void[4] "insert line file info" "module init"
  {
    (501802 return _void[55])
  }
  function chpl__initCopy[21695](arg x[21692]:c_string[19]) : _unknown[51] "init copy fn" "inline"
  {
    unknown ret[501535] "RVV" "temp"
    (501541 'move' ret[501535](501540 'coerce' x[21692] c_string[19]))
    (501537 return ret[501535])
  }
  { scopeless type
    c_string[19]
  }
  function chpl__autoCopy[21711](arg x[21708]:c_string[19]) : _unknown[51] "auto copy fn" "inline"
  {
    unknown ret[501545] "RVV" "temp"
    (501551 'move' ret[501545](501550 'coerce' x[21708] c_string[19]))
    (501547 return ret[501545])
  }
  { scopeless type
    c_string[19]
  }
  function ==[21727](arg s0[21724]:c_string[19], arg s1[21730]:c_string[19]) : _unknown[51] "inline"
  {
    unknown ret[501555] "RVV" "temp"
    unknown call_tmp[595158] "expr temp" "maybe param" "maybe type" "temp"
    (595161 'move' call_tmp[595158](21753 'string_compare' s0[21724] s1[21730]))
    unknown call_tmp[595163] "expr temp" "maybe param" "maybe type" "temp"
    (595166 'move' call_tmp[595163](21755 call == call_tmp[595158] 0))
    (501560 'move' ret[501555](501559 'deref' call_tmp[595163]))
    (501557 return ret[501555])
  }
  function !=[21768](arg s0[21765]:c_string[19], arg s1[21771]:c_string[19]) : _unknown[51] "inline"
  {
    unknown ret[501564] "RVV" "temp"
    unknown call_tmp[595168] "expr temp" "maybe param" "maybe type" "temp"
    (595171 'move' call_tmp[595168](21778 'string_compare' s0[21765] s1[21771]))
    unknown call_tmp[595173] "expr temp" "maybe param" "maybe type" "temp"
    (595176 'move' call_tmp[595173](21780 call != call_tmp[595168] 0))
    (501569 'move' ret[501564](501568 'deref' call_tmp[595173]))
    (501566 return ret[501564])
  }
  function <=[21793](arg a[21790]:c_string[19], arg b[21796]:c_string[19]) : _unknown[51] "inline"
  {
    unknown ret[501573] "RVV" "temp"
    unknown call_tmp[595178] "expr temp" "maybe param" "maybe type" "temp"
    (595181 'move' call_tmp[595178](21803 'string_compare' a[21790] b[21796]))
    unknown call_tmp[595183] "expr temp" "maybe param" "maybe type" "temp"
    (595186 'move' call_tmp[595183](21805 call <= call_tmp[595178] 0))
    (501578 'move' ret[501573](501577 'deref' call_tmp[595183]))
    (501575 return ret[501573])
  }
  function >=[21818](arg a[21815]:c_string[19], arg b[21821]:c_string[19]) : _unknown[51] "inline"
  {
    unknown ret[501582] "RVV" "temp"
    unknown call_tmp[595188] "expr temp" "maybe param" "maybe type" "temp"
    (595191 'move' call_tmp[595188](21828 'string_compare' a[21815] b[21821]))
    unknown call_tmp[595193] "expr temp" "maybe param" "maybe type" "temp"
    (595196 'move' call_tmp[595193](21830 call >= call_tmp[595188] 0))
    (501587 'move' ret[501582](501586 'deref' call_tmp[595193]))
    (501584 return ret[501582])
  }
  function <[21843](arg a[21840]:c_string[19], arg b[21846]:c_string[19]) : _unknown[51] "inline"
  {
    unknown ret[501591] "RVV" "temp"
    unknown call_tmp[595198] "expr temp" "maybe param" "maybe type" "temp"
    (595201 'move' call_tmp[595198](21853 'string_compare' a[21840] b[21846]))
    unknown call_tmp[595203] "expr temp" "maybe param" "maybe type" "temp"
    (595206 'move' call_tmp[595203](21855 call < call_tmp[595198] 0))
    (501596 'move' ret[501591](501595 'deref' call_tmp[595203]))
    (501593 return ret[501591])
  }
  function >[21868](arg a[21865]:c_string[19], arg b[21871]:c_string[19]) : _unknown[51] "inline"
  {
    unknown ret[501600] "RVV" "temp"
    unknown call_tmp[595208] "expr temp" "maybe param" "maybe type" "temp"
    (595211 'move' call_tmp[595208](21878 'string_compare' a[21865] b[21871]))
    unknown call_tmp[595213] "expr temp" "maybe param" "maybe type" "temp"
    (595216 'move' call_tmp[595213](21880 call > call_tmp[595208] 0))
    (501605 'move' ret[501600](501604 'deref' call_tmp[595213]))
    (501602 return ret[501600])
  }
  function =[21893](ref arg a[21890]:c_string[19], arg b[21896]:c_string[19]) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (21903 '=' a[21890] b[21896])
    (501607 return _void[55])
  }
  function =[21914](ref arg a[21911]:c_string[19], arg b[21917]:_nilType[42]) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    unknown call_tmp[595218] "expr temp" "maybe param" "maybe type" "temp"
    (595221 'move' call_tmp[595218](368844 call c_nil[204951]))
    unknown call_tmp[595223] "expr temp" "maybe param" "maybe type" "temp"
    (595226 'move' call_tmp[595223](21923 call _cast c_string[19] call_tmp[595218]))
    (21925 call = a[21911] call_tmp[595223])
    (501609 return _void[55])
  }
  function =[21937](ref arg a[21934]:c_string[19], arg b[21940]:string[26]) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    unknown call_tmp[595230] "expr temp" "maybe param" "maybe type" "temp"
    (595233 'move' call_tmp[595230](21953 call(21949 call (partial) c_str _mt[243] b[21940])))
    (21954 '=' a[21934] call_tmp[595230])
    (501611 return _void[55])
  }
  function _cast[21965](arg t[21962]:c_string[19], arg x[21968]:_nilType[42]) : _unknown[51] "inline"
  {
    unknown ret[501615] "RVV" "temp"
    unknown call_tmp[595235] "expr temp" "maybe param" "maybe type" "temp"
    (595238 'move' call_tmp[595235](21975 'cast' t[21962] x[21968]))
    (501620 'move' ret[501615](501619 'deref' call_tmp[595235]))
    (501617 return ret[501615])
  }
  function _cast[21987](arg t[21984]:c_void_ptr[149], arg x[21990]:c_string[19]) : _unknown[51] "inline"
  {
    unknown ret[501624] "RVV" "temp"
    unknown call_tmp[595240] "expr temp" "maybe param" "maybe type" "temp"
    (595243 'move' call_tmp[595240](21997 'cast' t[21984] x[21990]))
    (501629 'move' ret[501624](501628 'deref' call_tmp[595240]))
    (501626 return ret[501624])
  }
  function _cast[22009](arg t[22006]:c_string[19], arg x[22012]:c_void_ptr[149]) : _unknown[51] "inline"
  {
    unknown ret[501633] "RVV" "temp"
    unknown call_tmp[595245] "expr temp" "maybe param" "maybe type" "temp"
    (595248 'move' call_tmp[595245](22019 'cast' t[22006] x[22012]))
    (501638 'move' ret[501633](501637 'deref' call_tmp[595245]))
    (501635 return ret[501633])
  }
  function _cast[22031](arg t[22028]:c_ptr[205045](?), arg x[22034]:c_string[19]) : _unknown[51] "inline"
  {
    unknown ret[501642] "RVV" "temp"
    unknown call_tmp[595250] "expr temp" "maybe param" "maybe type" "temp"
    (595253 'move' call_tmp[595250](22072 'cast' t[22028] x[22034]))
    (501647 'move' ret[501642](501646 'deref' call_tmp[595250]))
    (501644 return ret[501642])
  }
  where {
    unknown tmp[416946] "maybe param" "temp"
    unknown tmp[416967] "maybe param" "temp"
    unknown call_tmp[595257] "expr temp" "maybe param" "maybe type" "temp"
    (595260 'move' call_tmp[595257](22038 call eltType _mt[243] t[22028]))
    (416978 'move' tmp[416967](22042 call == call_tmp[595257] c_char[20591]))
    unknown call_tmp[595262] "expr temp" "maybe param" "maybe type" "temp"
    (595265 'move' call_tmp[595262](416980 call _cond_invalid tmp[416967]))
    if call_tmp[595262]
    {
      (416983 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[552330] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[552331] "maybe param" "temp"
    unknown call_tmp[595267] "expr temp" "maybe param" "maybe type" "temp"
    (595270 'move' call_tmp[595267](416968 call isTrue tmp[416967]))
    (552336 'move' tmp[552331](552334 call _cond_test call_tmp[595267]))
    if tmp[552331]
    {
      (552341 'move' tmp[552330](552338 '_paramFoldLogical' tmp[552331] 1))
    }
    {
      unknown tmp[552343] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[595274] "expr temp" "maybe param" "maybe type" "temp"
      (595277 'move' call_tmp[595274](22045 call eltType _mt[243] t[22028]))
      unknown call_tmp[595279] "expr temp" "maybe param" "maybe type" "temp"
      (595282 'move' call_tmp[595279](22051 call int(64)[13] 8))
      unknown call_tmp[595284] "expr temp" "maybe param" "maybe type" "temp"
      (595287 'move' call_tmp[595284](22052 call == call_tmp[595274] call_tmp[595279]))
      (552345 'move' tmp[552343](416972 call isTrue call_tmp[595284]))
      (552350 'move' tmp[552330](552347 '_paramFoldLogical' tmp[552331] tmp[552343]))
    }
    (416957 'move' tmp[416946] tmp[552330])
    unknown call_tmp[595289] "expr temp" "maybe param" "maybe type" "temp"
    (595292 'move' call_tmp[595289](416959 call _cond_invalid tmp[416946]))
    if call_tmp[595289]
    {
      (416962 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[552357] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[552358] "maybe param" "temp"
    unknown call_tmp[595294] "expr temp" "maybe param" "maybe type" "temp"
    (595297 'move' call_tmp[595294](416947 call isTrue tmp[416946]))
    (552363 'move' tmp[552358](552361 call _cond_test call_tmp[595294]))
    if tmp[552358]
    {
      (552368 'move' tmp[552357](552365 '_paramFoldLogical' tmp[552358] 1))
    }
    {
      unknown tmp[552370] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[595301] "expr temp" "maybe param" "maybe type" "temp"
      (595304 'move' call_tmp[595301](22057 call eltType _mt[243] t[22028]))
      unknown call_tmp[595306] "expr temp" "maybe param" "maybe type" "temp"
      (595309 'move' call_tmp[595306](22063 call uint(64)[115] 8))
      unknown call_tmp[595311] "expr temp" "maybe param" "maybe type" "temp"
      (595314 'move' call_tmp[595311](22064 call == call_tmp[595301] call_tmp[595306]))
      (552372 'move' tmp[552370](416951 call isTrue call_tmp[595311]))
      (552377 'move' tmp[552357](552374 '_paramFoldLogical' tmp[552358] tmp[552370]))
    }
    (748160 call chpl_statementLevelSymbol tmp[552357])
  }
  function _cast[22085](arg t[22082]:c_string[19], arg x[22088]:c_ptr[205045](?)) : _unknown[51] "inline"
  {
    unknown ret[501651] "RVV" "temp"
    unknown call_tmp[595316] "expr temp" "maybe param" "maybe type" "temp"
    (595319 'move' call_tmp[595316](22126 'cast' t[22082] x[22088]))
    (501656 'move' ret[501651](501655 'deref' call_tmp[595316]))
    (501653 return ret[501651])
  }
  where {
    unknown tmp[416988] "maybe param" "temp"
    unknown tmp[417009] "maybe param" "temp"
    unknown call_tmp[595323] "expr temp" "maybe param" "maybe type" "temp"
    (595326 'move' call_tmp[595323](22092 call eltType _mt[243] x[22088]))
    (417020 'move' tmp[417009](22096 call == call_tmp[595323] c_char[20591]))
    unknown call_tmp[595328] "expr temp" "maybe param" "maybe type" "temp"
    (595331 'move' call_tmp[595328](417022 call _cond_invalid tmp[417009]))
    if call_tmp[595328]
    {
      (417025 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[552384] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[552385] "maybe param" "temp"
    unknown call_tmp[595333] "expr temp" "maybe param" "maybe type" "temp"
    (595336 'move' call_tmp[595333](417010 call isTrue tmp[417009]))
    (552390 'move' tmp[552385](552388 call _cond_test call_tmp[595333]))
    if tmp[552385]
    {
      (552395 'move' tmp[552384](552392 '_paramFoldLogical' tmp[552385] 1))
    }
    {
      unknown tmp[552397] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[595340] "expr temp" "maybe param" "maybe type" "temp"
      (595343 'move' call_tmp[595340](22099 call eltType _mt[243] x[22088]))
      unknown call_tmp[595345] "expr temp" "maybe param" "maybe type" "temp"
      (595348 'move' call_tmp[595345](22105 call int(64)[13] 8))
      unknown call_tmp[595350] "expr temp" "maybe param" "maybe type" "temp"
      (595353 'move' call_tmp[595350](22106 call == call_tmp[595340] call_tmp[595345]))
      (552399 'move' tmp[552397](417014 call isTrue call_tmp[595350]))
      (552404 'move' tmp[552384](552401 '_paramFoldLogical' tmp[552385] tmp[552397]))
    }
    (416999 'move' tmp[416988] tmp[552384])
    unknown call_tmp[595355] "expr temp" "maybe param" "maybe type" "temp"
    (595358 'move' call_tmp[595355](417001 call _cond_invalid tmp[416988]))
    if call_tmp[595355]
    {
      (417004 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[552411] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[552412] "maybe param" "temp"
    unknown call_tmp[595360] "expr temp" "maybe param" "maybe type" "temp"
    (595363 'move' call_tmp[595360](416989 call isTrue tmp[416988]))
    (552417 'move' tmp[552412](552415 call _cond_test call_tmp[595360]))
    if tmp[552412]
    {
      (552422 'move' tmp[552411](552419 '_paramFoldLogical' tmp[552412] 1))
    }
    {
      unknown tmp[552424] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[595367] "expr temp" "maybe param" "maybe type" "temp"
      (595370 'move' call_tmp[595367](22111 call eltType _mt[243] x[22088]))
      unknown call_tmp[595372] "expr temp" "maybe param" "maybe type" "temp"
      (595375 'move' call_tmp[595372](22117 call uint(64)[115] 8))
      unknown call_tmp[595377] "expr temp" "maybe param" "maybe type" "temp"
      (595380 'move' call_tmp[595377](22118 call == call_tmp[595367] call_tmp[595372]))
      (552426 'move' tmp[552424](416993 call isTrue call_tmp[595377]))
      (552431 'move' tmp[552411](552428 '_paramFoldLogical' tmp[552412] tmp[552424]))
    }
    (748162 call chpl_statementLevelSymbol tmp[552411])
  }
  function _cast[22139](arg t[22136]:chpl_anybool[181](?), arg x[22142]:c_string[19]) : _unknown[51] throws "inline"
  {
    unknown ret[501660] "RVV" "temp"
    unknown chplString[22146] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[540075] "maybe param" "maybe type" "temp"
    (540084 'move' type_tmp[540075](540083 call string[26]))
    (540077 'init var split decl' chplString[22146] type_tmp[540075])
    (22149 'end of statement')
    Try!
    {
      {
        unknown call_tmp[595382] "maybe param" "maybe type" "temp"
        (595385 'move' call_tmp[595382](22155 call createStringWithNewBuffer x[22142]))
        (540086 'init var split init' chplString[22146] call_tmp[595382] type_tmp[540075])
        (472793 'end of statement' chplString[22146])
      }
    }
    unknown call_tmp[595389] "expr temp" "maybe param" "maybe type" "temp"
    (595392 'move' call_tmp[595389](22170 call(22166 call (partial) strip _mt[243] chplString[22146])))
    unknown call_tmp[595394] "expr temp" "maybe param" "maybe type" "temp"
    (595397 'move' call_tmp[595394](22172 call _cast t[22136] call_tmp[595389]))
    (501665 'move' ret[501660](501664 'deref' call_tmp[595394]))
    gotoReturn _end__cast[501658] _end__cast[501658]
    (472795 'end of statement' chplString[22146])
    label _end__cast[501658]
    (501662 return ret[501660])
  }
  function _cast[22185](arg t[22182]:integral[199](?), arg x[22188]:c_string[19]) : _unknown[51] throws "inline"
  {
    unknown ret[501671] "RVV" "temp"
    unknown chplString[22192] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[540089] "maybe param" "maybe type" "temp"
    (540098 'move' type_tmp[540089](540097 call string[26]))
    (540091 'init var split decl' chplString[22192] type_tmp[540089])
    (22195 'end of statement')
    Try!
    {
      {
        unknown call_tmp[595399] "maybe param" "maybe type" "temp"
        (595402 'move' call_tmp[595399](22201 call createStringWithNewBuffer x[22188]))
        (540100 'init var split init' chplString[22192] call_tmp[595399] type_tmp[540089])
        (472797 'end of statement' chplString[22192])
      }
    }
    unknown call_tmp[595406] "expr temp" "maybe param" "maybe type" "temp"
    (595409 'move' call_tmp[595406](22214 call(22210 call (partial) strip _mt[243] chplString[22192])))
    unknown call_tmp[595411] "expr temp" "maybe param" "maybe type" "temp"
    (595414 'move' call_tmp[595411](22216 call _cast t[22182] call_tmp[595406]))
    (501676 'move' ret[501671](501675 'deref' call_tmp[595411]))
    gotoReturn _end__cast[501669] _end__cast[501669]
    (472799 'end of statement' chplString[22192])
    label _end__cast[501669]
    (501673 return ret[501671])
  }
  function _cast[22229](arg t[22226]:chpl_anyreal[193](?), arg x[22232]:c_string[19]) : _unknown[51] throws "inline"
  {
    unknown ret[501682] "RVV" "temp"
    unknown chplString[22236] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[540103] "maybe param" "maybe type" "temp"
    (540112 'move' type_tmp[540103](540111 call string[26]))
    (540105 'init var split decl' chplString[22236] type_tmp[540103])
    (22239 'end of statement')
    Try!
    {
      {
        unknown call_tmp[595416] "maybe param" "maybe type" "temp"
        (595419 'move' call_tmp[595416](22245 call createStringWithNewBuffer x[22232]))
        (540114 'init var split init' chplString[22236] call_tmp[595416] type_tmp[540103])
        (472801 'end of statement' chplString[22236])
      }
    }
    unknown call_tmp[595423] "expr temp" "maybe param" "maybe type" "temp"
    (595426 'move' call_tmp[595423](22258 call(22254 call (partial) strip _mt[243] chplString[22236])))
    unknown call_tmp[595428] "expr temp" "maybe param" "maybe type" "temp"
    (595431 'move' call_tmp[595428](22260 call _cast t[22226] call_tmp[595423]))
    (501687 'move' ret[501682](501686 'deref' call_tmp[595428]))
    gotoReturn _end__cast[501680] _end__cast[501680]
    (472803 'end of statement' chplString[22236])
    label _end__cast[501680]
    (501684 return ret[501682])
  }
  function _cast[22273](arg t[22270]:chpl_anyimag[190](?), arg x[22276]:c_string[19]) : _unknown[51] throws "inline"
  {
    unknown ret[501693] "RVV" "temp"
    unknown chplString[22280] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[540117] "maybe param" "maybe type" "temp"
    (540126 'move' type_tmp[540117](540125 call string[26]))
    (540119 'init var split decl' chplString[22280] type_tmp[540117])
    (22283 'end of statement')
    Try!
    {
      {
        unknown call_tmp[595433] "maybe param" "maybe type" "temp"
        (595436 'move' call_tmp[595433](22289 call createStringWithNewBuffer x[22276]))
        (540128 'init var split init' chplString[22280] call_tmp[595433] type_tmp[540117])
        (472805 'end of statement' chplString[22280])
      }
    }
    unknown call_tmp[595440] "expr temp" "maybe param" "maybe type" "temp"
    (595443 'move' call_tmp[595440](22302 call(22298 call (partial) strip _mt[243] chplString[22280])))
    unknown call_tmp[595445] "expr temp" "maybe param" "maybe type" "temp"
    (595448 'move' call_tmp[595445](22304 call _cast t[22270] call_tmp[595440]))
    (501698 'move' ret[501693](501697 'deref' call_tmp[595445]))
    gotoReturn _end__cast[501691] _end__cast[501691]
    (472807 'end of statement' chplString[22280])
    label _end__cast[501691]
    (501695 return ret[501693])
  }
  function _cast[22317](arg t[22314]:chpl_anycomplex[184](?), arg x[22320]:c_string[19]) : _unknown[51] throws "inline"
  {
    unknown ret[501704] "RVV" "temp"
    unknown chplString[22324] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[540131] "maybe param" "maybe type" "temp"
    (540140 'move' type_tmp[540131](540139 call string[26]))
    (540133 'init var split decl' chplString[22324] type_tmp[540131])
    (22327 'end of statement')
    Try!
    {
      {
        unknown call_tmp[595450] "maybe param" "maybe type" "temp"
        (595453 'move' call_tmp[595450](22333 call createStringWithNewBuffer x[22320]))
        (540142 'init var split init' chplString[22324] call_tmp[595450] type_tmp[540131])
        (472809 'end of statement' chplString[22324])
      }
    }
    unknown call_tmp[595457] "expr temp" "maybe param" "maybe type" "temp"
    (595460 'move' call_tmp[595457](22346 call(22342 call (partial) strip _mt[243] chplString[22324])))
    unknown call_tmp[595462] "expr temp" "maybe param" "maybe type" "temp"
    (595465 'move' call_tmp[595462](22348 call _cast t[22314] call_tmp[595457]))
    (501709 'move' ret[501704](501708 'deref' call_tmp[595462]))
    gotoReturn _end__cast[501702] _end__cast[501702]
    (472811 'end of statement' chplString[22324])
    label _end__cast[501702]
    (501706 return ret[501704])
  }
  function c_string[19].size[22358](arg _mt[22363]:_MT[238], arg this[22360]:c_string[19] :
  c_string[19]) : _unknown[51] "inline" "method" "no parens"
  {
    unknown ret[501715] "RVV" "temp"
    unknown call_tmp[595467] "expr temp" "maybe param" "maybe type" "temp"
    (595470 'move' call_tmp[595467](22384 'string_length_bytes' this[22360]))
    (501720 'move' ret[501715](501719 'deref' call_tmp[595467]))
    (501717 return ret[501715])
  }
  function c_string[19].length[22393](arg _mt[22398]:_MT[238], arg this[22395]:c_string[19] :
  c_string[19]) : _unknown[51] "inline" "method" "no parens"
  {
    unknown ret[501724] "RVV" "temp"
    unknown call_tmp[595472] "expr temp" "maybe param" "maybe type" "temp"
    (595475 'move' call_tmp[595472](22435 call + "'c_string.length' is deprecated - " "please use 'c_string.size' instead"))
    (22438 call compilerWarning call_tmp[595472])
    (472814 'end of statement')
    unknown call_tmp[595479] "expr temp" "maybe param" "maybe type" "temp"
    (595482 'move' call_tmp[595479](22442 call size _mt[243] this[22395]))
    (501729 'move' ret[501724](501728 'deref' call_tmp[595479]))
    (501726 return ret[501724])
  }
  function c_string[19].substring[22456](arg _mt[22461]:_MT[238], arg this[22458]:c_string[19] :
  c_string[19], arg i[22453]:int(64)[13]) : _unknown[51] "inline" "method"
  {
    unknown ret[501733] "RVV" "temp"
    unknown call_tmp[595484] "expr temp" "maybe param" "maybe type" "temp"
    (595487 'move' call_tmp[595484](22483 'string_index' this[22458] i[22453]))
    (501738 'move' ret[501733](501737 'deref' call_tmp[595484]))
    (501735 return ret[501733])
  }
  function c_string[19].substring[22499](arg _mt[22504]:_MT[238], arg this[22501]:c_string[19] :
  c_string[19], arg r[22496]:range[64316](?)) : _unknown[51] "inline" "method"
  {
    unknown ret[501742] "RVV" "temp"
    unknown call_tmp[595491] "expr temp" "maybe param" "maybe type" "temp"
    (595494 'move' call_tmp[595491](22509 call size _mt[243] this[22501]))
    unknown call_tmp[595496] "expr temp" "maybe param" "maybe type" "temp"
    (595499 'move' call_tmp[595496](22512 call chpl_build_bounded_range 1 call_tmp[595491]))
    unknown call_tmp[595501] "maybe param" "maybe type" "temp"
    (595504 'move' call_tmp[595501](22515 call r[22496] call_tmp[595496]))
    unknown r2[22516] "dead at end of block" "insert auto destroy"
    (540145 'init var' r2[22516] call_tmp[595501])
    (22519 'end of statement')
    unknown call_tmp[595508] "maybe param" "maybe type" "temp"
    (595511 'move' call_tmp[595508](22525 call alignedLow _mt[243] r2[22516]))
    unknown lo[22528] "dead at end of block" "insert auto destroy"
    (540147 'init var' lo[22528] call_tmp[595508] int(64)[13])
    unknown call_tmp[595515] "maybe param" "maybe type" "temp"
    (595518 'move' call_tmp[595515](22535 call alignedHigh _mt[243] r2[22516]))
    unknown hi[22538] "dead at end of block" "insert auto destroy"
    (540149 'init var' hi[22538] call_tmp[595515] int(64)[13])
    (22541 'end of statement' r2[22516] r2[22516])
    unknown call_tmp[595522] "expr temp" "maybe param" "maybe type" "temp"
    (595525 'move' call_tmp[595522](22566 call stride _mt[243] r2[22516]))
    unknown call_tmp[595527] "expr temp" "maybe param" "maybe type" "temp"
    (595530 'move' call_tmp[595527](22569 'string_select' this[22501] lo[22528] hi[22538] call_tmp[595522]))
    (501747 'move' ret[501742](501746 'deref' call_tmp[595527]))
    gotoReturn _end_substring[501740] _end_substring[501740]
    (472819 'end of statement' lo[22528] hi[22538] r2[22516])
    label _end_substring[501740]
    (501744 return ret[501742])
  }
  function c_string[19].length[22577](arg _mt[22582]:_MT[238], param arg this[22579]:c_string[19] :
  c_string[19]) param : _unknown[51] "inline" "last resort" "method" "no parens"
  {
    unknown ret[501753] "RVV" "param" "temp"
    unknown call_tmp[595532] "expr temp" "maybe param" "maybe type" "temp"
    (595535 'move' call_tmp[595532](22587 call + "'c_string.length' is deprecated - " "please use 'c_string.size' instead"))
    (22590 call compilerWarning call_tmp[595532])
    (472823 'end of statement')
    unknown call_tmp[595537] "expr temp" "maybe param" "maybe type" "temp"
    (595540 'move' call_tmp[595537](22596 'string_length_bytes' this[22579]))
    (501758 'move' ret[501753](501757 'deref' call_tmp[595537]))
    (501755 return ret[501753])
  }
  function c_string[19].size[22604](arg _mt[22609]:_MT[238], param arg this[22606]:c_string[19] :
  c_string[19]) param : _unknown[51] "inline" "last resort" "method" "no parens"
  {
    unknown ret[501762] "RVV" "param" "temp"
    unknown call_tmp[595542] "expr temp" "maybe param" "maybe type" "temp"
    (595545 'move' call_tmp[595542](22614 'string_length_bytes' this[22606]))
    (501767 'move' ret[501762](501766 'deref' call_tmp[595542]))
    (501764 return ret[501762])
  }
  function _string_contains[22626](param arg a[22623]:c_string[19], param arg b[22629]:c_string[19]) param : _unknown[51] "inline" "last resort"
  {
    unknown ret[501771] "RVV" "param" "temp"
    unknown call_tmp[595547] "expr temp" "maybe param" "maybe type" "temp"
    (595550 'move' call_tmp[595547](22652 'string_contains' a[22623] b[22629]))
    (501776 'move' ret[501771](501775 'deref' call_tmp[595547]))
    (501773 return ret[501771])
  }
  function c_string[19].indexOf[22665](arg _mt[22670]:_MT[238], arg this[22667]:c_string[19] :
  c_string[19], arg substring[22662]:c_string[19]) : _unknown[51] "inline" "method"
  {
    unknown ret[501780] "RVV" "temp"
    unknown call_tmp[595552] "expr temp" "maybe param" "maybe type" "temp"
    (595555 'move' call_tmp[595552](22677 call string_index_of this[22667] substring[22662]))
    (501786 'move' ret[501780](501785 'coerce' call_tmp[595552] int(64)[13]))
    (501782 return ret[501780])
  }
  { scopeless type
    int(64)[13]
  }
  function string_index_of[22690](arg haystack[22687]:c_string[19], arg needle[22693]:c_string[19]) : _unknown[51] "extern" "local args" "no fn body" "fn synchronization free" "no return value for void"
  {
    unknown ret[501790] "RVV" "temp"
    (501792 return ret[501790])
  }
  { scopeless type
    int(64)[13]
  }
  function chpl_free_c_string[22706](ref arg cs[22703]:c_string[19]) : _unknown[51] "inline" "no return value for void"
  {
    function chpl_rt_free_c_string[22714](ref arg cs[22711]:c_string[19]) : void[4] "extern" "insert line file info" "local args" "no fn body" "fn synchronization free" "no return value for void"
    {
      (501794 return _void[55])
    }
    unknown call_tmp[595557] "expr temp" "maybe param" "maybe type" "temp"
    (595560 'move' call_tmp[595557](368918 call c_nil[204951]))
    unknown call_tmp[595562] "expr temp" "maybe param" "maybe type" "temp"
    (595565 'move' call_tmp[595562](22722 call _cast c_string[19] call_tmp[595557]))
    unknown call_tmp[595567] "expr temp" "maybe param" "maybe type" "temp"
    (595570 'move' call_tmp[595567](22724 call != cs[22703] call_tmp[595562]))
    unknown call_tmp[595572] "expr temp" "maybe param" "maybe type" "temp"
    (595575 'move' call_tmp[595572](22731 call _cond_test call_tmp[595567]))
    if call_tmp[595572]
    {
      (22729 call chpl_rt_free_c_string cs[22703])
    }
    (501796 return _void[55])
  }
  function c_string[19].writeThis[22743](arg _mt[22748]:_MT[238], arg this[22745]:c_string[19] :
  c_string[19], arg x[22741]:_any[178](?)) : _unknown[51] throws "method" "no return value for void"
  {
    (22771 call compilerError "Cannot write a c_string, cast to a string first.")
    (501798 return _void[55])
  }
  function c_string[19].readThis[22781](arg _mt[22786]:_MT[238], arg this[22783]:c_string[19] :
  c_string[19], arg x[22779]:_any[178](?)) : _unknown[51] throws "method" "no return value for void"
  {
    (22807 call compilerError "Cannot read a c_string, use string.")
    (501800 return _void[55])
  }
  (354999 'used modules list'(21685 'use' ChapelStandard[20264])(21687 'use' SysCTypes[20940]))
}