AST dump for ShellSort after pass flattenClasses.
Module use list: ChapelStandard Sort 

{
  function shellSort[273560](arg Data[273557] :
  (273555 call chpl__buildArrayRuntimeType unknown Dom[273550] unknown eltType[273553]), arg comparator[273565] :
  unknown rec[273562] =
  defaultComparator[267998], arg start[273573] =
  (273570 call . Dom[273550] c"alignedLow"), arg end[273580] =
  (273577 call . Dom[273550] c"alignedHigh")) : _unknown[51] "no return value for void"
  {
    (273587 call chpl_check_comparator comparator[273565] eltType[273553])
    if(273618 call _cond_test(273595 call !=(273591 call . Dom[273550] c"rank") 1))
    {
      (273616 call compilerError "shellSort() requires 1-D array")
    }
    if(273648 call _cond_test(273624 call . Dom[273550] c"stridable"))
    {
      (273646 call compilerError "shellSort() requires an array over a non-stridable domain")
    }
    unknown n[273660](273658 call -(273655 call + 1 end[273580]) start[273573])
    (273663 'end of statement')
    unknown js[273664] int(64)[13]
    unknown hs[273668](273672 'typeof' js[273664])
    (273673 'end of statement')
    unknown v[273674](273678 call . Data[273557] c"eltType")
    unknown tmp[273681](273685 'typeof' v[273674])
    (273686 'end of statement')
    const incs[273704] "const"(273702 call _build_tuple 701 301 132 57 23 10 4 1)
    (273707 'end of statement')
    {
      unknown _indexOfInterest[273882] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[273883] "expr temp" "temp"
      (273892 'move' _iterator[273883](273890 call _getIterator incs[273704]))
      Defer
      {
        {
          (273908 call _freeIterator _iterator[273883])
        }
      }
      { scopeless type
        (273897 'move' _indexOfInterest[273882](273894 call iteratorIndex _iterator[273883]))
      }
      ForLoop[273884]
      {
        unknown h[273901] "index var" "insert auto destroy"
        (273903 'move' h[273901] _indexOfInterest[273882])
        {
          (273715 call = hs[273668](273713 call + h[273901] start[273573]))
          {
            unknown _indexOfInterest[273844] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[273845] "expr temp" "temp"
            (273854 'move' _iterator[273845](273852 call _getIterator(273859 call chpl_direct_range_iter hs[273668] end[273580] 1)))
            Defer
            {
              {
                (273875 call _freeIterator _iterator[273845])
              }
            }
            { scopeless type
              (273864 'move' _indexOfInterest[273844](273861 call iteratorIndex _iterator[273845]))
            }
            ForLoop[273846]
            {
              unknown is[273868] "index var" "insert auto destroy"
              (273870 'move' is[273868] _indexOfInterest[273844])
              {
                (273729 call = v[273674](273728 call Data[273557] is[273868]))
                (273735 call = js[273664] is[273868])
                {
                  unknown tmp[273779] "temp"
                  (273833 'move' tmp[273779](273813 call _cond_test(273815 call &&(273817 call >= js[273664] hs[273668])(273821 call <(273823 call chpl_compare v[273674](273826 call Data[273557](273828 call - js[273664] h[273901])) comparator[273565]) 0))))
                  WhileDo[273784]
                  {
                    {
                      (273770 call =(273762 call Data[273557] js[273664])(273769 call Data[273557](273766 call - js[273664] h[273901])))
                      (273776 call -= js[273664] h[273901])
                    }
                    label _continueLabel[273782]
                    (273808 'move' tmp[273779](273788 call _cond_test(273790 call &&(273792 call >= js[273664] hs[273668])(273796 call <(273798 call chpl_compare v[273674](273801 call Data[273557](273803 call - js[273664] h[273901])) comparator[273565]) 0))))
                    tmp[273779]
                  }
                  label _breakLabel[273783]
                }
                (273841 call =(273839 call Data[273557] js[273664]) v[273674])
              }
              label _continueLabel[273849]
              _indexOfInterest[273844]
              _iterator[273845]
            }
            label _breakLabel[273850]
          }
        }
        label _continueLabel[273887]
        _indexOfInterest[273882]
        _iterator[273883]
      }
      label _breakLabel[273888]
    }
  }
  (355401 'used modules list'(353076 'use' ChapelStandard[20267])(273545 'use' Sort[267989]))
}