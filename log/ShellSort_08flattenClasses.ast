AST dump for ShellSort after pass flattenClasses.
Module use list: ChapelStandard Sort 

{
  function shellSort[273454](arg Data[273451] :
  (273449 call chpl__buildArrayRuntimeType unknown Dom[273444] unknown eltType[273447]), arg comparator[273459] :
  unknown rec[273456] =
  defaultComparator[267894], arg start[273467] =
  (273464 call . Dom[273444] c"alignedLow"), arg end[273474] =
  (273471 call . Dom[273444] c"alignedHigh")) : _unknown[51] "no return value for void"
  {
    (273481 call chpl_check_comparator comparator[273459] eltType[273447])
    if(273512 call _cond_test(273489 call !=(273485 call . Dom[273444] c"rank") 1))
    {
      (273510 call compilerError "shellSort() requires 1-D array")
    }
    if(273542 call _cond_test(273518 call . Dom[273444] c"stridable"))
    {
      (273540 call compilerError "shellSort() requires an array over a non-stridable domain")
    }
    unknown n[273554](273552 call -(273549 call + 1 end[273474]) start[273467])
    (273557 'end of statement')
    unknown js[273558] int(64)[13]
    unknown hs[273562](273566 'typeof' js[273558])
    (273567 'end of statement')
    unknown v[273568](273572 call . Data[273451] c"eltType")
    unknown tmp[273575](273579 'typeof' v[273568])
    (273580 'end of statement')
    const incs[273598] "const"(273596 call _build_tuple 701 301 132 57 23 10 4 1)
    (273601 'end of statement')
    {
      unknown _indexOfInterest[273776] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[273777] "expr temp" "temp"
      (273786 'move' _iterator[273777](273784 call _getIterator incs[273598]))
      Defer
      {
        {
          (273802 call _freeIterator _iterator[273777])
        }
      }
      { scopeless type
        (273791 'move' _indexOfInterest[273776](273788 call iteratorIndex _iterator[273777]))
      }
      ForLoop[273778]
      {
        unknown h[273795] "index var" "insert auto destroy"
        (273797 'move' h[273795] _indexOfInterest[273776])
        {
          (273609 call = hs[273562](273607 call + h[273795] start[273467]))
          {
            unknown _indexOfInterest[273738] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[273739] "expr temp" "temp"
            (273748 'move' _iterator[273739](273746 call _getIterator(273753 call chpl_direct_range_iter hs[273562] end[273474] 1)))
            Defer
            {
              {
                (273769 call _freeIterator _iterator[273739])
              }
            }
            { scopeless type
              (273758 'move' _indexOfInterest[273738](273755 call iteratorIndex _iterator[273739]))
            }
            ForLoop[273740]
            {
              unknown is[273762] "index var" "insert auto destroy"
              (273764 'move' is[273762] _indexOfInterest[273738])
              {
                (273623 call = v[273568](273622 call Data[273451] is[273762]))
                (273629 call = js[273558] is[273762])
                {
                  unknown tmp[273673] "temp"
                  (273727 'move' tmp[273673](273707 call _cond_test(273709 call &&(273711 call >= js[273558] hs[273562])(273715 call <(273717 call chpl_compare v[273568](273720 call Data[273451](273722 call - js[273558] h[273795])) comparator[273459]) 0))))
                  WhileDo[273678]
                  {
                    {
                      (273664 call =(273656 call Data[273451] js[273558])(273663 call Data[273451](273660 call - js[273558] h[273795])))
                      (273670 call -= js[273558] h[273795])
                    }
                    label _continueLabel[273676]
                    (273702 'move' tmp[273673](273682 call _cond_test(273684 call &&(273686 call >= js[273558] hs[273562])(273690 call <(273692 call chpl_compare v[273568](273695 call Data[273451](273697 call - js[273558] h[273795])) comparator[273459]) 0))))
                    tmp[273673]
                  }
                  label _breakLabel[273677]
                }
                (273735 call =(273733 call Data[273451] js[273558]) v[273568])
              }
              label _continueLabel[273743]
              _indexOfInterest[273738]
              _iterator[273739]
            }
            label _breakLabel[273744]
          }
        }
        label _continueLabel[273781]
        _indexOfInterest[273776]
        _iterator[273777]
      }
      label _breakLabel[273782]
    }
  }
  (355415 'used modules list'(353091 'use' ChapelStandard[20264])(273439 'use' Sort[267885]))
}