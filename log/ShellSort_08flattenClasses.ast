AST dump for ShellSort after pass flattenClasses.
Module use list: ChapelStandard Sort 

{
  function shellSort[273449](arg Data[273446] :
  (273444 call chpl__buildArrayRuntimeType unknown Dom[273439] unknown eltType[273442]), arg comparator[273454] :
  unknown rec[273451] =
  defaultComparator[267889], arg start[273462] =
  (273459 call . Dom[273439] c"alignedLow"), arg end[273469] =
  (273466 call . Dom[273439] c"alignedHigh")) : _unknown[51] "no return value for void"
  {
    (273476 call chpl_check_comparator comparator[273454] eltType[273442])
    if(273507 call _cond_test(273484 call !=(273480 call . Dom[273439] c"rank") 1))
    {
      (273505 call compilerError "shellSort() requires 1-D array")
    }
    if(273537 call _cond_test(273513 call . Dom[273439] c"stridable"))
    {
      (273535 call compilerError "shellSort() requires an array over a non-stridable domain")
    }
    unknown n[273549](273547 call -(273544 call + 1 end[273469]) start[273462])
    (273552 'end of statement')
    unknown js[273553] int(64)[13]
    unknown hs[273557](273561 'typeof' js[273553])
    (273562 'end of statement')
    unknown v[273563](273567 call . Data[273446] c"eltType")
    unknown tmp[273570](273574 'typeof' v[273563])
    (273575 'end of statement')
    const incs[273593] "const"(273591 call _build_tuple 701 301 132 57 23 10 4 1)
    (273596 'end of statement')
    {
      unknown _indexOfInterest[273771] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[273772] "expr temp" "temp"
      (273781 'move' _iterator[273772](273779 call _getIterator incs[273593]))
      Defer
      {
        {
          (273797 call _freeIterator _iterator[273772])
        }
      }
      { scopeless type
        (273786 'move' _indexOfInterest[273771](273783 call iteratorIndex _iterator[273772]))
      }
      ForLoop[273773]
      {
        unknown h[273790] "index var" "insert auto destroy"
        (273792 'move' h[273790] _indexOfInterest[273771])
        {
          (273604 call = hs[273557](273602 call + h[273790] start[273462]))
          {
            unknown _indexOfInterest[273733] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[273734] "expr temp" "temp"
            (273743 'move' _iterator[273734](273741 call _getIterator(273748 call chpl_direct_range_iter hs[273557] end[273469] 1)))
            Defer
            {
              {
                (273764 call _freeIterator _iterator[273734])
              }
            }
            { scopeless type
              (273753 'move' _indexOfInterest[273733](273750 call iteratorIndex _iterator[273734]))
            }
            ForLoop[273735]
            {
              unknown is[273757] "index var" "insert auto destroy"
              (273759 'move' is[273757] _indexOfInterest[273733])
              {
                (273618 call = v[273563](273617 call Data[273446] is[273757]))
                (273624 call = js[273553] is[273757])
                {
                  unknown tmp[273668] "temp"
                  (273722 'move' tmp[273668](273702 call _cond_test(273704 call &&(273706 call >= js[273553] hs[273557])(273710 call <(273712 call chpl_compare v[273563](273715 call Data[273446](273717 call - js[273553] h[273790])) comparator[273454]) 0))))
                  WhileDo[273673]
                  {
                    {
                      (273659 call =(273651 call Data[273446] js[273553])(273658 call Data[273446](273655 call - js[273553] h[273790])))
                      (273665 call -= js[273553] h[273790])
                    }
                    label _continueLabel[273671]
                    (273697 'move' tmp[273668](273677 call _cond_test(273679 call &&(273681 call >= js[273553] hs[273557])(273685 call <(273687 call chpl_compare v[273563](273690 call Data[273446](273692 call - js[273553] h[273790])) comparator[273454]) 0))))
                    tmp[273668]
                  }
                  label _breakLabel[273672]
                }
                (273730 call =(273728 call Data[273446] js[273553]) v[273563])
              }
              label _continueLabel[273738]
              _indexOfInterest[273733]
              _iterator[273734]
            }
            label _breakLabel[273739]
          }
        }
        label _continueLabel[273776]
        _indexOfInterest[273771]
        _iterator[273772]
      }
      label _breakLabel[273777]
    }
  }
  (355270 'used modules list'(352946 'use' ChapelStandard[20264])(273434 'use' Sort[267880]))
}