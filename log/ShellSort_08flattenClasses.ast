AST dump for ShellSort after pass flattenClasses.
Module use list: ChapelStandard Sort 

{
  function shellSort[273627](arg Data[273624] :
  (273622 call chpl__buildArrayRuntimeType unknown Dom[273617] unknown eltType[273620]), arg comparator[273632] :
  unknown rec[273629] =
  defaultComparator[268065], arg start[273640] =
  (273637 call . Dom[273617] c"alignedLow"), arg end[273647] =
  (273644 call . Dom[273617] c"alignedHigh")) : _unknown[51] "no return value for void"
  {
    (273654 call chpl_check_comparator comparator[273632] eltType[273620])
    if(273685 call _cond_test(273662 call !=(273658 call . Dom[273617] c"rank") 1))
    {
      (273683 call compilerError "shellSort() requires 1-D array")
    }
    if(273715 call _cond_test(273691 call . Dom[273617] c"stridable"))
    {
      (273713 call compilerError "shellSort() requires an array over a non-stridable domain")
    }
    unknown n[273727](273725 call -(273722 call + 1 end[273647]) start[273640])
    (273730 'end of statement')
    unknown js[273731] int(64)[13]
    unknown hs[273735](273739 'typeof' js[273731])
    (273740 'end of statement')
    unknown v[273741](273745 call . Data[273624] c"eltType")
    unknown tmp[273748](273752 'typeof' v[273741])
    (273753 'end of statement')
    const incs[273771] "const"(273769 call _build_tuple 701 301 132 57 23 10 4 1)
    (273774 'end of statement')
    {
      unknown _indexOfInterest[273949] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[273950] "expr temp" "temp"
      (273959 'move' _iterator[273950](273957 call _getIterator incs[273771]))
      Defer
      {
        {
          (273975 call _freeIterator _iterator[273950])
        }
      }
      { scopeless type
        (273964 'move' _indexOfInterest[273949](273961 call iteratorIndex _iterator[273950]))
      }
      ForLoop[273951]
      {
        unknown h[273968] "index var" "insert auto destroy"
        (273970 'move' h[273968] _indexOfInterest[273949])
        {
          (273782 call = hs[273735](273780 call + h[273968] start[273640]))
          {
            unknown _indexOfInterest[273911] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[273912] "expr temp" "temp"
            (273921 'move' _iterator[273912](273919 call _getIterator(273926 call chpl_direct_range_iter hs[273735] end[273647] 1)))
            Defer
            {
              {
                (273942 call _freeIterator _iterator[273912])
              }
            }
            { scopeless type
              (273931 'move' _indexOfInterest[273911](273928 call iteratorIndex _iterator[273912]))
            }
            ForLoop[273913]
            {
              unknown is[273935] "index var" "insert auto destroy"
              (273937 'move' is[273935] _indexOfInterest[273911])
              {
                (273796 call = v[273741](273795 call Data[273624] is[273935]))
                (273802 call = js[273731] is[273935])
                {
                  unknown tmp[273846] "temp"
                  (273900 'move' tmp[273846](273880 call _cond_test(273882 call &&(273884 call >= js[273731] hs[273735])(273888 call <(273890 call chpl_compare v[273741](273893 call Data[273624](273895 call - js[273731] h[273968])) comparator[273632]) 0))))
                  WhileDo[273851]
                  {
                    {
                      (273837 call =(273829 call Data[273624] js[273731])(273836 call Data[273624](273833 call - js[273731] h[273968])))
                      (273843 call -= js[273731] h[273968])
                    }
                    label _continueLabel[273849]
                    (273875 'move' tmp[273846](273855 call _cond_test(273857 call &&(273859 call >= js[273731] hs[273735])(273863 call <(273865 call chpl_compare v[273741](273868 call Data[273624](273870 call - js[273731] h[273968])) comparator[273632]) 0))))
                    tmp[273846]
                  }
                  label _breakLabel[273850]
                }
                (273908 call =(273906 call Data[273624] js[273731]) v[273741])
              }
              label _continueLabel[273916]
              _indexOfInterest[273911]
              _iterator[273912]
            }
            label _breakLabel[273917]
          }
        }
        label _continueLabel[273954]
        _indexOfInterest[273949]
        _iterator[273950]
      }
      label _breakLabel[273955]
    }
  }
  (355469 'used modules list'(353143 'use' ChapelStandard[20267])(273612 'use' Sort[268056]))
}