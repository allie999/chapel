AST dump for LocaleModelHelpSetup after pass expandExternArrayCalls.
Module use list: 

{
  (208128 'use' ChapelLocale)
  (208132 'use' DefaultRectangular)
  (208135 'use' ChapelNumLocales)
  (208138 'use' ChapelEnv)
  (208141 'use' Sys)
  (208144 'use' SysCTypes)
  { scopeless
    unknown debugLocaleModel[208147] "config" "param" 0
    (208150 'end of statement')
  }
  { scopeless
    unknown chpl_nodeID[208152] "extern" chpl_nodeID_t
    (208155 'end of statement')
  }
  type chpl_root_locale_accum[208344] unknown nPUsPhysAcc[208160](208158 call chpl__atomicType int[13]) unknown nPUsPhysAll[208167](208165 call chpl__atomicType int[13]) unknown nPUsLogAcc[208174](208172 call chpl__atomicType int[13]) unknown nPUsLogAll[208181](208179 call chpl__atomicType int[13]) unknown maxTaskPar[208188](208186 call chpl__atomicType int[13]) function chpl_root_locale_accum[208344].accum[208198](arg _mt[208348]:_MT[238], arg this[208346]:chpl_root_locale_accum[208344], arg loc[208195] :
  locale[28]) : _unknown[51] "method" "primary method"
  {
    (208211 call(208201 call . nPUsPhysAcc c"add")(208207 call . loc c"nPUsPhysAcc"))
    (208225 call(208215 call . nPUsPhysAll c"add")(208221 call . loc c"nPUsPhysAll"))
    (208238 call(208228 call . nPUsLogAcc c"add")(208234 call . loc c"nPUsLogAcc"))
    (208251 call(208241 call . nPUsLogAll c"add")(208247 call . loc c"nPUsLogAll"))
    (208262 call(208254 call . maxTaskPar c"add")(208258 call . loc c"maxTaskPar"))
  } function chpl_root_locale_accum[208344].setRootLocaleValues[208273](arg _mt[208352]:_MT[238], arg this[208350]:chpl_root_locale_accum[208344], arg dst[208270] :
  (208269 'to borrowed class from unknown' RootLocale)) : _unknown[51] "method" "primary method"
  {
    (208285 call =(208276 call . dst c"nPUsPhysAcc")(208284 call(208280 call . nPUsPhysAcc c"read")))
    (208299 call =(208290 call . dst c"nPUsPhysAll")(208298 call(208294 call . nPUsPhysAll c"read")))
    (208312 call =(208303 call . dst c"nPUsLogAcc")(208311 call(208307 call . nPUsLogAcc c"read")))
    (208325 call =(208316 call . dst c"nPUsLogAll")(208324 call(208320 call . nPUsLogAll c"read")))
    (208338 call =(208329 call . dst c"maxTaskPar")(208337 call(208333 call . maxTaskPar c"read")))
  }
  function helpSetupRootLocaleFlat[208362](arg dst[208359] :
  (208358 'to borrowed class from unknown' RootLocale)) : _unknown[51]
  {
    { scopeless
      unknown root_accum[208365] chpl_root_locale_accum
      (208368 'end of statement')
    }
    Forall {
      induction variables:
        
        unknown locIdx[208427] "index var" "insert auto destroy"
      iterated expressions:
        (208378 call(208374 call . dst c"chpl_initOnLocales"))
      shadow variables:
        root_accum[208380] 'ref' intent
          init block
          {
          }
          deinit block
          {
          }
      other variables
        forall body
      {
        { scopeless
          const node[208400] "const"(208385 'new'(208399 call locale[28](208389 'new'(_chpl_manager = unmanaged[220](?))(208397 call LocaleModel(208391 'new'(208395 call locale[28] dst))))))
          (208403 'end of statement')
        }
        (208413 call =(208411 call(208406 call . dst c"myLocales") locIdx) node)
        (208424 call(208419 call . root_accum c"accum") node)
      }
    }
    (208438 call(208433 call . root_accum c"setRootLocaleValues") dst)
  }
  function helpSetupRootLocaleNUMA[208449](arg dst[208446] :
  (208445 'to borrowed class from unknown' RootLocale)) : _unknown[51]
  {
    { scopeless
      unknown root_accum[208452] chpl_root_locale_accum
      (208455 'end of statement')
    }
    Forall {
      induction variables:
        
        unknown locIdx[208515] "index var" "insert auto destroy"
      iterated expressions:
        (208463 call(208459 call . dst c"chpl_initOnLocales"))
      shadow variables:
        root_accum[208465] 'ref' intent
          init block
          {
          }
          deinit block
          {
          }
      other variables
        forall body
      {
        (208473 call chpl_task_setSubloc c_sublocid_any)
        { scopeless
          const node[208491] "const"(208476 'new'(208490 call locale[28](208480 'new'(_chpl_manager = unmanaged[220](?))(208488 call LocaleModel(208482 'new'(208486 call locale[28] dst))))))
          (208494 'end of statement')
        }
        (208503 call =(208501 call(208496 call . dst c"myLocales") locIdx) node)
        (208512 call(208507 call . root_accum c"accum") node)
      }
    }
    (208524 call(208519 call . root_accum c"setRootLocaleValues") dst)
  }
  function helpSetupRootLocaleAPU[208535](arg dst[208532] :
  (208531 'to borrowed class from unknown' RootLocale)) : _unknown[51]
  {
    { scopeless
      unknown root_accum[208538] chpl_root_locale_accum
      (208541 'end of statement')
    }
    Forall {
      induction variables:
        
        unknown locIdx[208601] "index var" "insert auto destroy"
      iterated expressions:
        (208549 call(208545 call . dst c"chpl_initOnLocales"))
      shadow variables:
        root_accum[208551] 'ref' intent
          init block
          {
          }
          deinit block
          {
          }
      other variables
        forall body
      {
        (208559 call chpl_task_setSubloc c_sublocid_any)
        { scopeless
          const node[208577] "const"(208562 'new'(208576 call locale[28](208566 'new'(_chpl_manager = unmanaged[220](?))(208574 call LocaleModel(208568 'new'(208572 call locale[28] dst))))))
          (208580 'end of statement')
        }
        (208589 call =(208587 call(208582 call . dst c"myLocales") locIdx) node)
        (208598 call(208593 call . root_accum c"accum") node)
      }
    }
    (208610 call(208605 call . root_accum c"setRootLocaleValues") dst)
    (208618 call(208613 call . here c"runningTaskCntSet") 0)
  }
  function localSpawn[208624]() : _unknown[51] "inline" "private"
  {
    if(208729 call _cond_test(208644 call == CHPL_COMM "gasnet"))
    {
      { scopeless
        unknown spawnfn[208647] c_string
        (208650 'end of statement')
      }
      if(208724 call _cond_test(208690 call &&(208682 call &&(208670 call == CHPL_COMM_SUBSTRATE "udp")(208680 call ==(208678 call sys_getenv c"GASNET_SPAWNFN" spawnfn) 1))(208688 call == spawnfn c"L")))
      {
        (208693 return 1)
      }
      {
        { scopeless
          if(208720 call _cond_test(208714 call == CHPL_COMM_SUBSTRATE "smp"))
          {
            (208717 return 1)
          }
        }
      }
    }
    (208735 return 0)
  }
  function getNodeName[208741]() : _unknown[51] "inline" "private"
  {
    function chpl_nodeName[208745]() : _unknown[51] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      c_string
    }
    { scopeless
      unknown _node_name[208753] string[26]
      (208756 'end of statement')
    }
    Try!
    {
      {
        (208764 call = _node_name(208763 call createStringWithNewBuffer(208761 call chpl_nodeName)))
      }
    }
    { scopeless
      const _node_id[208778] "const"(208776 call _cast string[26](208773 call _cast int[13] chpl_nodeID))
      (208781 'end of statement')
    }
    (208796 return(208793 IfExpr (208784 call localSpawn) then
    { scopeless
      (208790 call +(208787 call + _node_name "-") _node_id)
    } else
    { scopeless
      _node_name
    } ))
  }
  function helpSetupLocaleFlat[208807](arg dst[208804] :
  (208803 'to borrowed class from unknown' LocaleModel), out arg local_name[208810] :
  string[26]) : _unknown[51]
  {
    (208817 call = local_name(208816 call getNodeName))
    function chpl_task_getCallStackSize[208823]() : _unknown[51] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      size_t
    }
    (208836 call =(208830 call . dst c"callStackSize")(208835 call chpl_task_getCallStackSize))
    function chpl_topo_getNumCPUsPhysical[208845](arg accessible_only[208842] :
    bool[10]) : _unknown[51] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      c_int
    }
    (208859 call =(208852 call . dst c"nPUsPhysAcc")(208858 call chpl_topo_getNumCPUsPhysical 1))
    (208870 call =(208863 call . dst c"nPUsPhysAll")(208869 call chpl_topo_getNumCPUsPhysical 0))
    function chpl_topo_getNumCPUsLogical[208879](arg accessible_only[208876] :
    bool[10]) : _unknown[51] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      c_int
    }
    (208893 call =(208886 call . dst c"nPUsLogAcc")(208892 call chpl_topo_getNumCPUsLogical 1))
    (208904 call =(208897 call . dst c"nPUsLogAll")(208903 call chpl_topo_getNumCPUsLogical 0))
    function chpl_task_getMaxPar[208909]() : _unknown[51] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      (208914 call uint[115] 32)
    }
    (208925 call =(208919 call . dst c"maxTaskPar")(208924 call chpl_task_getMaxPar))
  }
  function helpSetupLocaleNUMA[208937](arg dst[208934] :
  (208933 'to borrowed class from unknown' LocaleModel), out arg local_name[208940] :
  string[26], arg numSublocales[208943]:_any[178](?), arg NumaDomain[208945]:_any[178](?)) : _unknown[51]
  {
    (208951 call helpSetupLocaleFlat dst local_name)
    function chpl_task_getMaxPar[208956]() : _unknown[51] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      (208961 call uint[115] 32)
    }
    if(209183 call _cond_test(208967 call >= numSublocales 1))
    {
      { scopeless
        const nPUsPhysAccPerSubloc[208976] "const"(208974 call /(208970 call . dst c"nPUsPhysAcc") numSublocales)
        (208979 'end of statement')
      }
      { scopeless
        const nPUsPhysAllPerSubloc[208988] "const"(208986 call /(208982 call . dst c"nPUsPhysAll") numSublocales)
        (208991 'end of statement')
      }
      { scopeless
        const nPUsLogAccPerSubloc[208999] "const"(208997 call /(208993 call . dst c"nPUsLogAcc") numSublocales)
        (209002 'end of statement')
      }
      { scopeless
        const nPUsLogAllPerSubloc[209010] "const"(209008 call /(209004 call . dst c"nPUsLogAll") numSublocales)
        (209013 'end of statement')
      }
      { scopeless
        const maxTaskParPerSubloc[209020] "const"(209018 call /(209016 call chpl_task_getMaxPar) numSublocales)
        (209023 'end of statement')
      }
      { scopeless
        const origSubloc[209027] "const"(209026 call chpl_task_getRequestedSubloc)
        (209030 'end of statement')
      }
      {
        unknown _indexOfInterest[209144] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[209145] "expr temp" "temp"
        (209154 'move' _iterator[209145](209152 call _getIterator(209035 call . dst c"childSpace")))
        Defer
        {
          {
            (209171 call _freeIterator _iterator[209145])
          }
        }
        { scopeless type
          (209160 'move' _indexOfInterest[209144](209157 call iteratorIndex _iterator[209145]))
        }
        ForLoop[209146]
        {
          unknown i[209164] "index var" "insert auto destroy"
          (209166 'move' i[209164] _indexOfInterest[209144])
          {
            (209044 call chpl_task_setSubloc(209041 call _cast chpl_sublocID_t i))
            (209071 call =(209055 call(209050 call . dst c"childLocales") i)(209058 'new'(_chpl_manager = unmanaged[220](?))(209070 call NumaDomain(209062 call _cast chpl_sublocID_t i)(209065 'new'(209069 call locale[28] dst)))))
            (209085 call =(209081 call .(209080 call(209075 call . dst c"childLocales") i) c"nPUsPhysAcc") nPUsPhysAccPerSubloc)
            (209099 call =(209095 call .(209094 call(209089 call . dst c"childLocales") i) c"nPUsPhysAll") nPUsPhysAllPerSubloc)
            (209113 call =(209109 call .(209108 call(209103 call . dst c"childLocales") i) c"nPUsLogAcc") nPUsLogAccPerSubloc)
            (209127 call =(209123 call .(209122 call(209117 call . dst c"childLocales") i) c"nPUsLogAll") nPUsLogAllPerSubloc)
            (209141 call =(209137 call .(209136 call(209131 call . dst c"childLocales") i) c"maxTaskPar") maxTaskParPerSubloc)
          }
          label _continueLabel[209149]
          _indexOfInterest[209144]
          _iterator[209145]
        }
        label _breakLabel[209150]
      }
      (209181 call chpl_task_setSubloc origSubloc)
    }
  }
  function helpSetupLocaleAPU[209196](arg dst[209193] :
  (209192 'to borrowed class from unknown' LocaleModel), out arg local_name[209199] :
  string[26], out arg numSublocales[209202]:_any[178](?), arg CPULocale[209204]:_any[178](?), arg GPULocale[209206]:_any[178](?)) : _unknown[51]
  {
    (209212 call helpSetupLocaleFlat dst local_name)
    function chpl_task_getMaxPar[209217]() : _unknown[51] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      (209222 call uint[115] 32)
    }
    (209228 call = numSublocales 2)
    { scopeless
      const origSubloc[209234] "const"(209233 call chpl_task_getRequestedSubloc)
      (209237 'end of statement')
    }
    (209244 call chpl_task_setSubloc(209241 call _cast chpl_sublocID_t 0))
    (209263 call =(209249 call . dst c"CPU")(209254 'new'(_chpl_manager = unmanaged[220](?))(209262 call CPULocale(209258 call _cast chpl_sublocID_t 0) dst)))
    (209272 call chpl_task_setSubloc(209269 call _cast chpl_sublocID_t 1))
    (209277 call chpl_task_setSubloc origSubloc)
  }
}