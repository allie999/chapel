AST dump for LocaleModelHelpSetup after pass expandExternArrayCalls.
Module use list: 

{
  (208183 'use' ChapelLocale)
  (208187 'use' DefaultRectangular)
  (208190 'use' ChapelNumLocales)
  (208193 'use' ChapelEnv)
  (208196 'use' Sys)
  (208199 'use' SysCTypes)
  { scopeless
    unknown debugLocaleModel[208202] "config" "param" 0
    (208205 'end of statement')
  }
  { scopeless
    unknown chpl_nodeID[208207] "extern" chpl_nodeID_t
    (208210 'end of statement')
  }
  type chpl_root_locale_accum[208399] unknown nPUsPhysAcc[208215](208213 call chpl__atomicType int[13]) unknown nPUsPhysAll[208222](208220 call chpl__atomicType int[13]) unknown nPUsLogAcc[208229](208227 call chpl__atomicType int[13]) unknown nPUsLogAll[208236](208234 call chpl__atomicType int[13]) unknown maxTaskPar[208243](208241 call chpl__atomicType int[13]) function chpl_root_locale_accum[208399].accum[208253](arg _mt[208403]:_MT[238], arg this[208401]:chpl_root_locale_accum[208399], arg loc[208250] :
  locale[28]) : _unknown[51] "method" "primary method"
  {
    (208266 call(208256 call . nPUsPhysAcc c"add")(208262 call . loc c"nPUsPhysAcc"))
    (208280 call(208270 call . nPUsPhysAll c"add")(208276 call . loc c"nPUsPhysAll"))
    (208293 call(208283 call . nPUsLogAcc c"add")(208289 call . loc c"nPUsLogAcc"))
    (208306 call(208296 call . nPUsLogAll c"add")(208302 call . loc c"nPUsLogAll"))
    (208317 call(208309 call . maxTaskPar c"add")(208313 call . loc c"maxTaskPar"))
  } function chpl_root_locale_accum[208399].setRootLocaleValues[208328](arg _mt[208407]:_MT[238], arg this[208405]:chpl_root_locale_accum[208399], arg dst[208325] :
  (208324 'to borrowed class from unknown' RootLocale)) : _unknown[51] "method" "primary method"
  {
    (208340 call =(208331 call . dst c"nPUsPhysAcc")(208339 call(208335 call . nPUsPhysAcc c"read")))
    (208354 call =(208345 call . dst c"nPUsPhysAll")(208353 call(208349 call . nPUsPhysAll c"read")))
    (208367 call =(208358 call . dst c"nPUsLogAcc")(208366 call(208362 call . nPUsLogAcc c"read")))
    (208380 call =(208371 call . dst c"nPUsLogAll")(208379 call(208375 call . nPUsLogAll c"read")))
    (208393 call =(208384 call . dst c"maxTaskPar")(208392 call(208388 call . maxTaskPar c"read")))
  }
  function helpSetupRootLocaleFlat[208417](arg dst[208414] :
  (208413 'to borrowed class from unknown' RootLocale)) : _unknown[51]
  {
    { scopeless
      unknown root_accum[208420] chpl_root_locale_accum
      (208423 'end of statement')
    }
    Forall {
      induction variables:
        
        unknown locIdx[208482] "index var" "insert auto destroy"
      iterated expressions:
        (208433 call(208429 call . dst c"chpl_initOnLocales"))
      shadow variables:
        root_accum[208435] 'ref' intent
          init block
          {
          }
          deinit block
          {
          }
      other variables
        forall body
      {
        { scopeless
          const node[208455] "const"(208440 'new'(208454 call locale[28](208444 'new'(_chpl_manager = unmanaged[220](?))(208452 call LocaleModel(208446 'new'(208450 call locale[28] dst))))))
          (208458 'end of statement')
        }
        (208468 call =(208466 call(208461 call . dst c"myLocales") locIdx) node)
        (208479 call(208474 call . root_accum c"accum") node)
      }
    }
    (208494 call(208489 call . root_accum c"setRootLocaleValues") dst)
  }
  function helpSetupRootLocaleNUMA[208505](arg dst[208502] :
  (208501 'to borrowed class from unknown' RootLocale)) : _unknown[51]
  {
    { scopeless
      unknown root_accum[208508] chpl_root_locale_accum
      (208511 'end of statement')
    }
    Forall {
      induction variables:
        
        unknown locIdx[208571] "index var" "insert auto destroy"
      iterated expressions:
        (208519 call(208515 call . dst c"chpl_initOnLocales"))
      shadow variables:
        root_accum[208521] 'ref' intent
          init block
          {
          }
          deinit block
          {
          }
      other variables
        forall body
      {
        (208529 call chpl_task_setSubloc c_sublocid_any)
        { scopeless
          const node[208547] "const"(208532 'new'(208546 call locale[28](208536 'new'(_chpl_manager = unmanaged[220](?))(208544 call LocaleModel(208538 'new'(208542 call locale[28] dst))))))
          (208550 'end of statement')
        }
        (208559 call =(208557 call(208552 call . dst c"myLocales") locIdx) node)
        (208568 call(208563 call . root_accum c"accum") node)
      }
    }
    (208581 call(208576 call . root_accum c"setRootLocaleValues") dst)
  }
  function helpSetupRootLocaleAPU[208592](arg dst[208589] :
  (208588 'to borrowed class from unknown' RootLocale)) : _unknown[51]
  {
    { scopeless
      unknown root_accum[208595] chpl_root_locale_accum
      (208598 'end of statement')
    }
    Forall {
      induction variables:
        
        unknown locIdx[208658] "index var" "insert auto destroy"
      iterated expressions:
        (208606 call(208602 call . dst c"chpl_initOnLocales"))
      shadow variables:
        root_accum[208608] 'ref' intent
          init block
          {
          }
          deinit block
          {
          }
      other variables
        forall body
      {
        (208616 call chpl_task_setSubloc c_sublocid_any)
        { scopeless
          const node[208634] "const"(208619 'new'(208633 call locale[28](208623 'new'(_chpl_manager = unmanaged[220](?))(208631 call LocaleModel(208625 'new'(208629 call locale[28] dst))))))
          (208637 'end of statement')
        }
        (208646 call =(208644 call(208639 call . dst c"myLocales") locIdx) node)
        (208655 call(208650 call . root_accum c"accum") node)
      }
    }
    (208668 call(208663 call . root_accum c"setRootLocaleValues") dst)
    (208676 call(208671 call . here c"runningTaskCntSet") 0)
  }
  function localSpawn[208682]() : _unknown[51] "inline" "private"
  {
    if(208787 call _cond_test(208702 call == CHPL_COMM "gasnet"))
    {
      { scopeless
        unknown spawnfn[208705] c_string
        (208708 'end of statement')
      }
      if(208782 call _cond_test(208748 call &&(208740 call &&(208728 call == CHPL_COMM_SUBSTRATE "udp")(208738 call ==(208736 call sys_getenv c"GASNET_SPAWNFN" spawnfn) 1))(208746 call == spawnfn c"L")))
      {
        (208751 return 1)
      }
      {
        { scopeless
          if(208778 call _cond_test(208772 call == CHPL_COMM_SUBSTRATE "smp"))
          {
            (208775 return 1)
          }
        }
      }
    }
    (208793 return 0)
  }
  function getNodeName[208799]() : _unknown[51] "inline" "private"
  {
    function chpl_nodeName[208803]() : _unknown[51] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      c_string
    }
    { scopeless
      unknown _node_name[208811] string[26]
      (208814 'end of statement')
    }
    Try!
    {
      {
        (208822 call = _node_name(208821 call createStringWithNewBuffer(208819 call chpl_nodeName)))
      }
    }
    { scopeless
      const _node_id[208836] "const"(208834 call _cast string[26](208831 call _cast int[13] chpl_nodeID))
      (208839 'end of statement')
    }
    (208854 return(208851 IfExpr (208842 call localSpawn) then
    { scopeless
      (208848 call +(208845 call + _node_name "-") _node_id)
    } else
    { scopeless
      _node_name
    } ))
  }
  function helpSetupLocaleFlat[208865](arg dst[208862] :
  (208861 'to borrowed class from unknown' LocaleModel), out arg local_name[208868] :
  string[26]) : _unknown[51]
  {
    (208875 call = local_name(208874 call getNodeName))
    function chpl_task_getCallStackSize[208881]() : _unknown[51] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      size_t
    }
    (208894 call =(208888 call . dst c"callStackSize")(208893 call chpl_task_getCallStackSize))
    function chpl_topo_getNumCPUsPhysical[208903](arg accessible_only[208900] :
    bool[10]) : _unknown[51] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      c_int
    }
    (208917 call =(208910 call . dst c"nPUsPhysAcc")(208916 call chpl_topo_getNumCPUsPhysical 1))
    (208928 call =(208921 call . dst c"nPUsPhysAll")(208927 call chpl_topo_getNumCPUsPhysical 0))
    function chpl_topo_getNumCPUsLogical[208937](arg accessible_only[208934] :
    bool[10]) : _unknown[51] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      c_int
    }
    (208951 call =(208944 call . dst c"nPUsLogAcc")(208950 call chpl_topo_getNumCPUsLogical 1))
    (208962 call =(208955 call . dst c"nPUsLogAll")(208961 call chpl_topo_getNumCPUsLogical 0))
    function chpl_task_getMaxPar[208967]() : _unknown[51] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      (208972 call uint[115] 32)
    }
    (208983 call =(208977 call . dst c"maxTaskPar")(208982 call chpl_task_getMaxPar))
  }
  function helpSetupLocaleNUMA[208995](arg dst[208992] :
  (208991 'to borrowed class from unknown' LocaleModel), out arg local_name[208998] :
  string[26], arg numSublocales[209001]:_any[178](?), arg NumaDomain[209003]:_any[178](?)) : _unknown[51]
  {
    (209009 call helpSetupLocaleFlat dst local_name)
    function chpl_task_getMaxPar[209014]() : _unknown[51] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      (209019 call uint[115] 32)
    }
    if(209241 call _cond_test(209025 call >= numSublocales 1))
    {
      { scopeless
        const nPUsPhysAccPerSubloc[209034] "const"(209032 call /(209028 call . dst c"nPUsPhysAcc") numSublocales)
        (209037 'end of statement')
      }
      { scopeless
        const nPUsPhysAllPerSubloc[209046] "const"(209044 call /(209040 call . dst c"nPUsPhysAll") numSublocales)
        (209049 'end of statement')
      }
      { scopeless
        const nPUsLogAccPerSubloc[209057] "const"(209055 call /(209051 call . dst c"nPUsLogAcc") numSublocales)
        (209060 'end of statement')
      }
      { scopeless
        const nPUsLogAllPerSubloc[209068] "const"(209066 call /(209062 call . dst c"nPUsLogAll") numSublocales)
        (209071 'end of statement')
      }
      { scopeless
        const maxTaskParPerSubloc[209078] "const"(209076 call /(209074 call chpl_task_getMaxPar) numSublocales)
        (209081 'end of statement')
      }
      { scopeless
        const origSubloc[209085] "const"(209084 call chpl_task_getRequestedSubloc)
        (209088 'end of statement')
      }
      {
        unknown _indexOfInterest[209202] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[209203] "expr temp" "temp"
        (209212 'move' _iterator[209203](209210 call _getIterator(209093 call . dst c"childSpace")))
        Defer
        {
          {
            (209229 call _freeIterator _iterator[209203])
          }
        }
        { scopeless type
          (209218 'move' _indexOfInterest[209202](209215 call iteratorIndex _iterator[209203]))
        }
        ForLoop[209204]
        {
          unknown i[209222] "index var" "insert auto destroy"
          (209224 'move' i[209222] _indexOfInterest[209202])
          {
            (209102 call chpl_task_setSubloc(209099 call _cast chpl_sublocID_t i))
            (209129 call =(209113 call(209108 call . dst c"childLocales") i)(209116 'new'(_chpl_manager = unmanaged[220](?))(209128 call NumaDomain(209120 call _cast chpl_sublocID_t i)(209123 'new'(209127 call locale[28] dst)))))
            (209143 call =(209139 call .(209138 call(209133 call . dst c"childLocales") i) c"nPUsPhysAcc") nPUsPhysAccPerSubloc)
            (209157 call =(209153 call .(209152 call(209147 call . dst c"childLocales") i) c"nPUsPhysAll") nPUsPhysAllPerSubloc)
            (209171 call =(209167 call .(209166 call(209161 call . dst c"childLocales") i) c"nPUsLogAcc") nPUsLogAccPerSubloc)
            (209185 call =(209181 call .(209180 call(209175 call . dst c"childLocales") i) c"nPUsLogAll") nPUsLogAllPerSubloc)
            (209199 call =(209195 call .(209194 call(209189 call . dst c"childLocales") i) c"maxTaskPar") maxTaskParPerSubloc)
          }
          label _continueLabel[209207]
          _indexOfInterest[209202]
          _iterator[209203]
        }
        label _breakLabel[209208]
      }
      (209239 call chpl_task_setSubloc origSubloc)
    }
  }
  function helpSetupLocaleAPU[209254](arg dst[209251] :
  (209250 'to borrowed class from unknown' LocaleModel), out arg local_name[209257] :
  string[26], out arg numSublocales[209260]:_any[178](?), arg CPULocale[209262]:_any[178](?), arg GPULocale[209264]:_any[178](?)) : _unknown[51]
  {
    (209270 call helpSetupLocaleFlat dst local_name)
    function chpl_task_getMaxPar[209275]() : _unknown[51] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      (209280 call uint[115] 32)
    }
    (209286 call = numSublocales 2)
    { scopeless
      const origSubloc[209292] "const"(209291 call chpl_task_getRequestedSubloc)
      (209295 'end of statement')
    }
    (209302 call chpl_task_setSubloc(209299 call _cast chpl_sublocID_t 0))
    (209321 call =(209307 call . dst c"CPU")(209312 'new'(_chpl_manager = unmanaged[220](?))(209320 call CPULocale(209316 call _cast chpl_sublocID_t 0) dst)))
    (209330 call chpl_task_setSubloc(209327 call _cast chpl_sublocID_t 1))
    (209335 call chpl_task_setSubloc origSubloc)
  }
}