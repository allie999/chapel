AST dump for LocaleModelHelpSetup after pass expandExternArrayCalls.
Module use list: 

{
  (208140 'use' ChapelLocale)
  (208144 'use' DefaultRectangular)
  (208147 'use' ChapelNumLocales)
  (208150 'use' ChapelEnv)
  (208153 'use' Sys)
  (208156 'use' SysCTypes)
  { scopeless
    unknown debugLocaleModel[208159] "config" "param" 0
    (208162 'end of statement')
  }
  { scopeless
    unknown chpl_nodeID[208164] "extern" chpl_nodeID_t
    (208167 'end of statement')
  }
  type chpl_root_locale_accum[208356] unknown nPUsPhysAcc[208172](208170 call chpl__atomicType int[13]) unknown nPUsPhysAll[208179](208177 call chpl__atomicType int[13]) unknown nPUsLogAcc[208186](208184 call chpl__atomicType int[13]) unknown nPUsLogAll[208193](208191 call chpl__atomicType int[13]) unknown maxTaskPar[208200](208198 call chpl__atomicType int[13]) function chpl_root_locale_accum[208356].accum[208210](arg _mt[208360]:_MT[238], arg this[208358]:chpl_root_locale_accum[208356], arg loc[208207] :
  locale[28]) : _unknown[51] "method" "primary method"
  {
    (208223 call(208213 call . nPUsPhysAcc c"add")(208219 call . loc c"nPUsPhysAcc"))
    (208237 call(208227 call . nPUsPhysAll c"add")(208233 call . loc c"nPUsPhysAll"))
    (208250 call(208240 call . nPUsLogAcc c"add")(208246 call . loc c"nPUsLogAcc"))
    (208263 call(208253 call . nPUsLogAll c"add")(208259 call . loc c"nPUsLogAll"))
    (208274 call(208266 call . maxTaskPar c"add")(208270 call . loc c"maxTaskPar"))
  } function chpl_root_locale_accum[208356].setRootLocaleValues[208285](arg _mt[208364]:_MT[238], arg this[208362]:chpl_root_locale_accum[208356], arg dst[208282] :
  (208281 'to borrowed class from unknown' RootLocale)) : _unknown[51] "method" "primary method"
  {
    (208297 call =(208288 call . dst c"nPUsPhysAcc")(208296 call(208292 call . nPUsPhysAcc c"read")))
    (208311 call =(208302 call . dst c"nPUsPhysAll")(208310 call(208306 call . nPUsPhysAll c"read")))
    (208324 call =(208315 call . dst c"nPUsLogAcc")(208323 call(208319 call . nPUsLogAcc c"read")))
    (208337 call =(208328 call . dst c"nPUsLogAll")(208336 call(208332 call . nPUsLogAll c"read")))
    (208350 call =(208341 call . dst c"maxTaskPar")(208349 call(208345 call . maxTaskPar c"read")))
  }
  function helpSetupRootLocaleFlat[208374](arg dst[208371] :
  (208370 'to borrowed class from unknown' RootLocale)) : _unknown[51]
  {
    { scopeless
      unknown root_accum[208377] chpl_root_locale_accum
      (208380 'end of statement')
    }
    Forall {
      induction variables:
        
        unknown locIdx[208439] "index var" "insert auto destroy"
      iterated expressions:
        (208390 call(208386 call . dst c"chpl_initOnLocales"))
      shadow variables:
        root_accum[208392] 'ref' intent
          init block
          {
          }
          deinit block
          {
          }
      other variables
        forall body
      {
        { scopeless
          const node[208412] "const"(208397 'new'(208411 call locale[28](208401 'new'(_chpl_manager = unmanaged[220](?))(208409 call LocaleModel(208403 'new'(208407 call locale[28] dst))))))
          (208415 'end of statement')
        }
        (208425 call =(208423 call(208418 call . dst c"myLocales") locIdx) node)
        (208436 call(208431 call . root_accum c"accum") node)
      }
    }
    (208450 call(208445 call . root_accum c"setRootLocaleValues") dst)
  }
  function helpSetupRootLocaleNUMA[208461](arg dst[208458] :
  (208457 'to borrowed class from unknown' RootLocale)) : _unknown[51]
  {
    { scopeless
      unknown root_accum[208464] chpl_root_locale_accum
      (208467 'end of statement')
    }
    Forall {
      induction variables:
        
        unknown locIdx[208527] "index var" "insert auto destroy"
      iterated expressions:
        (208475 call(208471 call . dst c"chpl_initOnLocales"))
      shadow variables:
        root_accum[208477] 'ref' intent
          init block
          {
          }
          deinit block
          {
          }
      other variables
        forall body
      {
        (208485 call chpl_task_setSubloc c_sublocid_any)
        { scopeless
          const node[208503] "const"(208488 'new'(208502 call locale[28](208492 'new'(_chpl_manager = unmanaged[220](?))(208500 call LocaleModel(208494 'new'(208498 call locale[28] dst))))))
          (208506 'end of statement')
        }
        (208515 call =(208513 call(208508 call . dst c"myLocales") locIdx) node)
        (208524 call(208519 call . root_accum c"accum") node)
      }
    }
    (208536 call(208531 call . root_accum c"setRootLocaleValues") dst)
  }
  function helpSetupRootLocaleAPU[208547](arg dst[208544] :
  (208543 'to borrowed class from unknown' RootLocale)) : _unknown[51]
  {
    { scopeless
      unknown root_accum[208550] chpl_root_locale_accum
      (208553 'end of statement')
    }
    Forall {
      induction variables:
        
        unknown locIdx[208613] "index var" "insert auto destroy"
      iterated expressions:
        (208561 call(208557 call . dst c"chpl_initOnLocales"))
      shadow variables:
        root_accum[208563] 'ref' intent
          init block
          {
          }
          deinit block
          {
          }
      other variables
        forall body
      {
        (208571 call chpl_task_setSubloc c_sublocid_any)
        { scopeless
          const node[208589] "const"(208574 'new'(208588 call locale[28](208578 'new'(_chpl_manager = unmanaged[220](?))(208586 call LocaleModel(208580 'new'(208584 call locale[28] dst))))))
          (208592 'end of statement')
        }
        (208601 call =(208599 call(208594 call . dst c"myLocales") locIdx) node)
        (208610 call(208605 call . root_accum c"accum") node)
      }
    }
    (208622 call(208617 call . root_accum c"setRootLocaleValues") dst)
    (208630 call(208625 call . here c"runningTaskCntSet") 0)
  }
  function localSpawn[208636]() : _unknown[51] "inline" "private"
  {
    if(208741 call _cond_test(208656 call == CHPL_COMM "gasnet"))
    {
      { scopeless
        unknown spawnfn[208659] c_string
        (208662 'end of statement')
      }
      if(208736 call _cond_test(208702 call &&(208694 call &&(208682 call == CHPL_COMM_SUBSTRATE "udp")(208692 call ==(208690 call sys_getenv c"GASNET_SPAWNFN" spawnfn) 1))(208700 call == spawnfn c"L")))
      {
        (208705 return 1)
      }
      {
        { scopeless
          if(208732 call _cond_test(208726 call == CHPL_COMM_SUBSTRATE "smp"))
          {
            (208729 return 1)
          }
        }
      }
    }
    (208747 return 0)
  }
  function getNodeName[208753]() : _unknown[51] "inline" "private"
  {
    function chpl_nodeName[208757]() : _unknown[51] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      c_string
    }
    { scopeless
      unknown _node_name[208765] string[26]
      (208768 'end of statement')
    }
    Try!
    {
      {
        (208776 call = _node_name(208775 call createStringWithNewBuffer(208773 call chpl_nodeName)))
      }
    }
    { scopeless
      const _node_id[208790] "const"(208788 call _cast string[26](208785 call _cast int[13] chpl_nodeID))
      (208793 'end of statement')
    }
    (208808 return(208805 IfExpr (208796 call localSpawn) then
    { scopeless
      (208802 call +(208799 call + _node_name "-") _node_id)
    } else
    { scopeless
      _node_name
    } ))
  }
  function helpSetupLocaleFlat[208819](arg dst[208816] :
  (208815 'to borrowed class from unknown' LocaleModel), out arg local_name[208822] :
  string[26]) : _unknown[51]
  {
    (208829 call = local_name(208828 call getNodeName))
    function chpl_task_getCallStackSize[208835]() : _unknown[51] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      size_t
    }
    (208848 call =(208842 call . dst c"callStackSize")(208847 call chpl_task_getCallStackSize))
    function chpl_topo_getNumCPUsPhysical[208857](arg accessible_only[208854] :
    bool[10]) : _unknown[51] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      c_int
    }
    (208871 call =(208864 call . dst c"nPUsPhysAcc")(208870 call chpl_topo_getNumCPUsPhysical 1))
    (208882 call =(208875 call . dst c"nPUsPhysAll")(208881 call chpl_topo_getNumCPUsPhysical 0))
    function chpl_topo_getNumCPUsLogical[208891](arg accessible_only[208888] :
    bool[10]) : _unknown[51] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      c_int
    }
    (208905 call =(208898 call . dst c"nPUsLogAcc")(208904 call chpl_topo_getNumCPUsLogical 1))
    (208916 call =(208909 call . dst c"nPUsLogAll")(208915 call chpl_topo_getNumCPUsLogical 0))
    function chpl_task_getMaxPar[208921]() : _unknown[51] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      (208926 call uint[115] 32)
    }
    (208937 call =(208931 call . dst c"maxTaskPar")(208936 call chpl_task_getMaxPar))
  }
  function helpSetupLocaleNUMA[208949](arg dst[208946] :
  (208945 'to borrowed class from unknown' LocaleModel), out arg local_name[208952] :
  string[26], arg numSublocales[208955]:_any[178](?), arg NumaDomain[208957]:_any[178](?)) : _unknown[51]
  {
    (208963 call helpSetupLocaleFlat dst local_name)
    function chpl_task_getMaxPar[208968]() : _unknown[51] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      (208973 call uint[115] 32)
    }
    if(209195 call _cond_test(208979 call >= numSublocales 1))
    {
      { scopeless
        const nPUsPhysAccPerSubloc[208988] "const"(208986 call /(208982 call . dst c"nPUsPhysAcc") numSublocales)
        (208991 'end of statement')
      }
      { scopeless
        const nPUsPhysAllPerSubloc[209000] "const"(208998 call /(208994 call . dst c"nPUsPhysAll") numSublocales)
        (209003 'end of statement')
      }
      { scopeless
        const nPUsLogAccPerSubloc[209011] "const"(209009 call /(209005 call . dst c"nPUsLogAcc") numSublocales)
        (209014 'end of statement')
      }
      { scopeless
        const nPUsLogAllPerSubloc[209022] "const"(209020 call /(209016 call . dst c"nPUsLogAll") numSublocales)
        (209025 'end of statement')
      }
      { scopeless
        const maxTaskParPerSubloc[209032] "const"(209030 call /(209028 call chpl_task_getMaxPar) numSublocales)
        (209035 'end of statement')
      }
      { scopeless
        const origSubloc[209039] "const"(209038 call chpl_task_getRequestedSubloc)
        (209042 'end of statement')
      }
      {
        unknown _indexOfInterest[209156] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[209157] "expr temp" "temp"
        (209166 'move' _iterator[209157](209164 call _getIterator(209047 call . dst c"childSpace")))
        Defer
        {
          {
            (209183 call _freeIterator _iterator[209157])
          }
        }
        { scopeless type
          (209172 'move' _indexOfInterest[209156](209169 call iteratorIndex _iterator[209157]))
        }
        ForLoop[209158]
        {
          unknown i[209176] "index var" "insert auto destroy"
          (209178 'move' i[209176] _indexOfInterest[209156])
          {
            (209056 call chpl_task_setSubloc(209053 call _cast chpl_sublocID_t i))
            (209083 call =(209067 call(209062 call . dst c"childLocales") i)(209070 'new'(_chpl_manager = unmanaged[220](?))(209082 call NumaDomain(209074 call _cast chpl_sublocID_t i)(209077 'new'(209081 call locale[28] dst)))))
            (209097 call =(209093 call .(209092 call(209087 call . dst c"childLocales") i) c"nPUsPhysAcc") nPUsPhysAccPerSubloc)
            (209111 call =(209107 call .(209106 call(209101 call . dst c"childLocales") i) c"nPUsPhysAll") nPUsPhysAllPerSubloc)
            (209125 call =(209121 call .(209120 call(209115 call . dst c"childLocales") i) c"nPUsLogAcc") nPUsLogAccPerSubloc)
            (209139 call =(209135 call .(209134 call(209129 call . dst c"childLocales") i) c"nPUsLogAll") nPUsLogAllPerSubloc)
            (209153 call =(209149 call .(209148 call(209143 call . dst c"childLocales") i) c"maxTaskPar") maxTaskParPerSubloc)
          }
          label _continueLabel[209161]
          _indexOfInterest[209156]
          _iterator[209157]
        }
        label _breakLabel[209162]
      }
      (209193 call chpl_task_setSubloc origSubloc)
    }
  }
  function helpSetupLocaleAPU[209208](arg dst[209205] :
  (209204 'to borrowed class from unknown' LocaleModel), out arg local_name[209211] :
  string[26], out arg numSublocales[209214]:_any[178](?), arg CPULocale[209216]:_any[178](?), arg GPULocale[209218]:_any[178](?)) : _unknown[51]
  {
    (209224 call helpSetupLocaleFlat dst local_name)
    function chpl_task_getMaxPar[209229]() : _unknown[51] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      (209234 call uint[115] 32)
    }
    (209240 call = numSublocales 2)
    { scopeless
      const origSubloc[209246] "const"(209245 call chpl_task_getRequestedSubloc)
      (209249 'end of statement')
    }
    (209256 call chpl_task_setSubloc(209253 call _cast chpl_sublocID_t 0))
    (209275 call =(209261 call . dst c"CPU")(209266 'new'(_chpl_manager = unmanaged[220](?))(209274 call CPULocale(209270 call _cast chpl_sublocID_t 0) dst)))
    (209284 call chpl_task_setSubloc(209281 call _cast chpl_sublocID_t 1))
    (209289 call chpl_task_setSubloc origSubloc)
  }
}