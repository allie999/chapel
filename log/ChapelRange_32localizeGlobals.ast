AST dump for ChapelRange after pass localizeGlobals.
Module use list: ChapelBase SysBasic HaltWrappers Math DSIUtil 

{
  function chpl__init_ChapelRange[416067]() : void[4] "insert line file info" "module init" "resolved"
  {
    (512245 return _void[55])
  }
  type BoundedRangeType[64216] def bounded[64208]:BoundedRangeType[64216] def boundedLow[64210]:BoundedRangeType[64216] def boundedHigh[64212]:BoundedRangeType[64216] def boundedNone[64214]:BoundedRangeType[64216]
  type range(byteIndex,bounded,false)[1025981] val _low[1025943]:int(64)[13] val _high[1025948]:int(64)[13]
  type range(byteIndex,boundedLow,false)[1143592] val _low[1143554]:int(64)[13] val _high[1143559]:int(64)[13]
  type range(byteIndex,boundedHigh,false)[1185108] val _low[1185070]:int(64)[13] val _high[1185075]:int(64)[13]
  type range(int(64),bounded,false)[1027003] val _low[1026965]:int(64)[13] val _high[1026970]:int(64)[13]
  type range(int(64),bounded,true)[1570523] val _low[1570485]:int(64)[13] val _high[1570490]:int(64)[13] val _stride[1570495]:int(64)[13] val _alignment[1570505]:int(64)[13] val _aligned[1570515]:bool[10]
  type range(int(64),boundedLow,false)[1087754] val _low[1087716]:int(64)[13] val _high[1087721]:int(64)[13]
  type range(int(64),boundedHigh,false)[1187618] val _low[1187580]:int(64)[13] val _high[1187585]:int(64)[13]
  function range(int(64),bounded,false)[1027003].init[1026226](ref arg this[1026232]:range(int(64),bounded,false)[1027003], const in arg _low[1026253]:int(64)[13], const in arg _high[1026262]:int(64)[13], const in arg _stride[1026270]:int(64)[13], const in arg _alignment[1026279]:int(64)[13], const in arg _aligned[1026283]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1026524 '.=' this[1026232] _low[1026965] _low[1026253])
    (1026556 '.=' this[1026232] _high[1026970] _high[1026262])
    const-val call_tmp[2232936]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2232938 'move' call_tmp[2232936](2232940 '==' _stride[1026270] 1))
    (1026839 call assert[210432] call_tmp[2232936])
    (1026842 return _void[55])
  }
  function range(byteIndex,bounded,false)[1025981].init[1028897](ref arg this[1028903]:range(byteIndex,bounded,false)[1025981], const  ref arg _low[1028924]:byteIndex[28173], const  ref arg _high[1028933]:byteIndex[28173], const in arg _stride[1028941]:int(64)[13], const  ref arg _alignment[1028950]:byteIndex[28173], const in arg _aligned[1028954]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[2385988]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2385990 'move' ret[2385988](2385992 '.v' _low[1028924] _bindex[28094]))
    (1029032 '.=' this[1028903] _low[1025943] ret[2385988])
    val ret[2385998]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2386000 'move' ret[2385998](2386002 '.v' _high[1028933] _bindex[28094]))
    (1029064 '.=' this[1028903] _high[1025948] ret[2385998])
    const-val call_tmp[2232951]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2232953 'move' call_tmp[2232951](2232955 '==' _stride[1028941] 1))
    (1029347 call assert[210432] call_tmp[2232951])
    (1029350 return _void[55])
  }
  function range(byteIndex,bounded,false)[1025981].init[1046095](ref arg this[1046101]:range(byteIndex,bounded,false)[1025981], const  ref arg _low[1046122]:byteIndex[28173], const  ref arg _high[1046131]:byteIndex[28173], const in arg _stride[1046139]:int(64)[13], const  ref arg _alignment[1046148]:byteIndex[28173], const in arg _aligned[1046152]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val ret[2386024]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2386026 'move' ret[2386024](2386028 '.v' _low[1046122] _bindex[28094]))
    (1046782 '.=' this[1046101] _low[1025943] ret[2386024])
    val ret[2386034]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2386036 'move' ret[2386034](2386038 '.v' _high[1046131] _bindex[28094]))
    (1046814 '.=' this[1046101] _high[1025948] ret[2386034])
    const-val call_tmp[2233036]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2233038 'move' call_tmp[2233036](2233040 '==' _stride[1046139] 1))
    (1047097 call assert[210432] call_tmp[2233036])
    (1047100 return _void[55])
  }
  function range(int(64),bounded,false)[1027003].init[1086095](ref arg this[1086101]:range(int(64),bounded,false)[1027003], const in arg _low[1086122]:int(64)[13], const in arg _high[1086131]:int(64)[13], const in arg _stride[1086139]:int(64)[13], const in arg _alignment[1086148]:int(64)[13], const in arg _aligned[1086152]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1086285 '.=' this[1086101] _low[1026965] _low[1086122])
    (1086317 '.=' this[1086101] _high[1026970] _high[1086131])
    const-val call_tmp[2233051]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2233053 'move' call_tmp[2233051](2233055 '==' _stride[1086139] 1))
    (1086600 call assert[210432] call_tmp[2233051])
    (1086603 return _void[55])
  }
  function range(int(64),boundedLow,false)[1087754].init[1087201](ref arg this[1087207]:range(int(64),boundedLow,false)[1087754], const in arg _low[1087228]:int(64)[13], const in arg _high[1087237]:int(64)[13], const in arg _stride[1087245]:int(64)[13], const in arg _alignment[1087254]:int(64)[13], const in arg _aligned[1087258]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1087327 '.=' this[1087207] _low[1087716] _low[1087228])
    (1087359 '.=' this[1087207] _high[1087721] _high[1087237])
    const-val call_tmp[2233066]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2233068 'move' call_tmp[2233066](2233070 '==' _stride[1087245] 1))
    (1087642 call assert[210432] call_tmp[2233066])
    (1087645 return _void[55])
  }
  function range(int(64),boundedLow,false)[1087754].init[1130442](ref arg this[1130448]:range(int(64),boundedLow,false)[1087754], const in arg _low[1130469]:int(64)[13], const in arg _high[1130478]:int(64)[13], const in arg _stride[1130486]:int(64)[13], const in arg _alignment[1130495]:int(64)[13], const in arg _aligned[1130499]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1130632 '.=' this[1130448] _low[1087716] _low[1130469])
    (1130664 '.=' this[1130448] _high[1087721] _high[1130478])
    const-val call_tmp[2233141]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2233143 'move' call_tmp[2233141](2233145 '==' _stride[1130486] 1))
    (1130947 call assert[210432] call_tmp[2233141])
    (1130950 return _void[55])
  }
  function range(byteIndex,boundedLow,false)[1143592].init[1143039](ref arg this[1143045]:range(byteIndex,boundedLow,false)[1143592], const  ref arg _low[1143066]:byteIndex[28173], const  ref arg _high[1143075]:byteIndex[28173], const in arg _stride[1143083]:int(64)[13], const  ref arg _alignment[1143092]:byteIndex[28173], const in arg _aligned[1143096]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[2386044]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2386046 'move' ret[2386044](2386048 '.v' _low[1143066] _bindex[28094]))
    (1143165 '.=' this[1143045] _low[1143554] ret[2386044])
    val ret[2386054]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2386056 'move' ret[2386054](2386058 '.v' _high[1143075] _bindex[28094]))
    (1143197 '.=' this[1143045] _high[1143559] ret[2386054])
    const-val call_tmp[2233196]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2233198 'move' call_tmp[2233196](2233200 '==' _stride[1143083] 1))
    (1143480 call assert[210432] call_tmp[2233196])
    (1143483 return _void[55])
  }
  function range(byteIndex,boundedLow,false)[1143592].init[1148906](ref arg this[1148912]:range(byteIndex,boundedLow,false)[1143592], const  ref arg _low[1148933]:byteIndex[28173], const  ref arg _high[1148942]:byteIndex[28173], const in arg _stride[1148950]:int(64)[13], const  ref arg _alignment[1148959]:byteIndex[28173], const in arg _aligned[1148963]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val ret[2386080]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2386082 'move' ret[2386080](2386084 '.v' _low[1148933] _bindex[28094]))
    (1149096 '.=' this[1148912] _low[1143554] ret[2386080])
    val ret[2386090]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2386092 'move' ret[2386090](2386094 '.v' _high[1148942] _bindex[28094]))
    (1149128 '.=' this[1148912] _high[1143559] ret[2386090])
    const-val call_tmp[2233211]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2233213 'move' call_tmp[2233211](2233215 '==' _stride[1148950] 1))
    (1149411 call assert[210432] call_tmp[2233211])
    (1149414 return _void[55])
  }
  function range(byteIndex,boundedHigh,false)[1185108].init[1184555](ref arg this[1184561]:range(byteIndex,boundedHigh,false)[1185108], const  ref arg _low[1184582]:byteIndex[28173], const  ref arg _high[1184591]:byteIndex[28173], const in arg _stride[1184599]:int(64)[13], const  ref arg _alignment[1184608]:byteIndex[28173], const in arg _aligned[1184612]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[2386116]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2386118 'move' ret[2386116](2386120 '.v' _low[1184582] _bindex[28094]))
    (1184681 '.=' this[1184561] _low[1185070] ret[2386116])
    val ret[2386126]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2386128 'move' ret[2386126](2386130 '.v' _high[1184591] _bindex[28094]))
    (1184713 '.=' this[1184561] _high[1185075] ret[2386126])
    const-val call_tmp[2233271]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2233273 'move' call_tmp[2233271](2233275 '==' _stride[1184599] 1))
    (1184996 call assert[210432] call_tmp[2233271])
    (1184999 return _void[55])
  }
  function range(int(64),boundedHigh,false)[1187618].init[1188902](ref arg this[1188908]:range(int(64),boundedHigh,false)[1187618], const in arg _low[1188929]:int(64)[13], const in arg _high[1188938]:int(64)[13], const in arg _stride[1188946]:int(64)[13], const in arg _alignment[1188955]:int(64)[13], const in arg _aligned[1188959]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1189028 '.=' this[1188908] _low[1187580] _low[1188929])
    (1189060 '.=' this[1188908] _high[1187585] _high[1188938])
    const-val call_tmp[2233286]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2233288 'move' call_tmp[2233286](2233290 '==' _stride[1188946] 1))
    (1189343 call assert[210432] call_tmp[2233286])
    (1189346 return _void[55])
  }
  function range(byteIndex,boundedHigh,false)[1185108].init[1193113](ref arg this[1193119]:range(byteIndex,boundedHigh,false)[1185108], const  ref arg _low[1193140]:byteIndex[28173], const  ref arg _high[1193149]:byteIndex[28173], const in arg _stride[1193157]:int(64)[13], const  ref arg _alignment[1193166]:byteIndex[28173], const in arg _aligned[1193170]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val ret[2386152]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2386154 'move' ret[2386152](2386156 '.v' _low[1193140] _bindex[28094]))
    (1193303 '.=' this[1193119] _low[1185070] ret[2386152])
    val ret[2386162]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2386164 'move' ret[2386162](2386166 '.v' _high[1193149] _bindex[28094]))
    (1193335 '.=' this[1193119] _high[1185075] ret[2386162])
    const-val call_tmp[2233316]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2233318 'move' call_tmp[2233316](2233320 '==' _stride[1193157] 1))
    (1193618 call assert[210432] call_tmp[2233316])
    (1193621 return _void[55])
  }
  function range(int(64),bounded,true)[1570523].init[1569962](ref arg this[1569968]:range(int(64),bounded,true)[1570523], const in arg _low[1569989]:int(64)[13], const in arg _high[1569998]:int(64)[13], const in arg _stride[1570006]:int(64)[13], const in arg _alignment[1570015]:int(64)[13], const in arg _aligned[1570019]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1570148 '.=' this[1569968] _low[1570485] _low[1569989])
    (1570180 '.=' this[1569968] _high[1570490] _high[1569998])
    (1570234 '.=' this[1569968] _stride[1570495] 0)
    (1570288 '.=' this[1569968] _alignment[1570505] 0)
    (1570328 '.=' this[1569968] _aligned[1570515] 0)
    (2572365 '.=' this[1569968] _stride[1570495] _stride[1570006])
    (2572371 '.=' this[1569968] _alignment[1570505] _alignment[1570015])
    (2572377 '.=' this[1569968] _aligned[1570515] _aligned[1570019])
    (1570466 return _void[55])
  }
  function range(int(64),bounded,false)[1027003].init[1091453](ref arg this[1091459]:range(int(64),bounded,false)[1027003], const in arg _low[1091480]:int(64)[13], const in arg _high[1091489]:int(64)[13], const in arg _stride[1091491]:int(64)[13], const in arg _aligned[1091495]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1092125 '.=' this[1091459] _low[1026965] _low[1091480])
    (1092157 '.=' this[1091459] _high[1026970] _high[1091489])
    (1092323 return _void[55])
  }
  function range(int(64),bounded,false)[1027003].init[1094664](ref arg this[1094670]:range(int(64),bounded,false)[1027003], const in arg _low[1094691]:int(64)[13], const in arg _high[1094700]:int(64)[13]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1095264 '.=' this[1094670] _low[1026965] _low[1094691])
    (1095296 '.=' this[1094670] _high[1026970] _high[1094700])
    (1095462 return _void[55])
  }
  function range(byteIndex,bounded,false)[1025981].init=[1044724](ref arg this[1044730]:range(byteIndex,bounded,false)[1025981], const in arg other[1044732]:range(byteIndex,bounded,false)[1025981]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1045291]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1045589]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1045593 'move' coerce_tmp[1045589](2566543 '.v' other[1044732] _low[1025943]))
    const-val ret[2239461]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2239463]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2239466 call init[28100] cpi[2239463])
    (2239468 '.=' cpi[2239463] _bindex[28094] coerce_tmp[1045589])
    (2239472 'move' ret[2239461] cpi[2239463])
    (1893813 'move' call_tmp[1045291] ret[2239461])
    const-val call_tmp[1045307]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1045597]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1045601 'move' coerce_tmp[1045597](2566551 '.v' other[1044732] _high[1025948]))
    const-val ret[2239487]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2239489]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2239492 call init[28100] cpi[2239489])
    (2239494 '.=' cpi[2239489] _bindex[28094] coerce_tmp[1045597])
    (2239498 'move' ret[2239487] cpi[2239489])
    (1893819 'move' call_tmp[1045307] ret[2239487])
    const-val call_tmp[1045315]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1908874]:byteIndex[28173] "temp"
    (1045320 call alignment[1045624] other[1044732] ret_tmp[1908874])
    (1908877 'move' call_tmp[1045315] ret_tmp[1908874])
    val ret[2386014]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2386016 'move' ret[2386014](2386018 '.v' call_tmp[1045315] _bindex[28094]))
    const-val call_tmp[1045330]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret[2239513]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2239515]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2239518 call init[28100] cpi[2239515])
    (2239520 '.=' cpi[2239515] _bindex[28094] ret[2386014])
    (2239524 'move' ret[2239513] cpi[2239515])
    (1893825 'move' call_tmp[1045330] ret[2239513])
    (1045350 call init[1046095] this[1044730] call_tmp[1045291] call_tmp[1045307] 1 call_tmp[1045330] 1)
    (1045365 return _void[55])
  }
  function range(int(64),bounded,false)[1027003].init=[1085220](ref arg this[1085226]:range(int(64),bounded,false)[1027003], const in arg other[1085228]:range(int(64),bounded,false)[1027003]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val coerce_tmp[1086075]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1086079 'move' coerce_tmp[1086075](2566871 '.v' other[1085228] _low[1026965]))
    const-val coerce_tmp[1086083]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1086087 'move' coerce_tmp[1086083](2566878 '.v' other[1085228] _high[1026970]))
    const-val call_tmp[1085811]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1085813 'move' call_tmp[1085811](1085816 call alignment[1034440] other[1085228]))
    (1085846 call init[1086095] this[1085226] coerce_tmp[1086075] coerce_tmp[1086083] 1 call_tmp[1085811] 1)
    (1085861 return _void[55])
  }
  function range(int(64),boundedLow,false)[1087754].init=[1129366](ref arg this[1129372]:range(int(64),boundedLow,false)[1087754], const in arg other[1129374]:range(int(64),boundedLow,false)[1087754]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val coerce_tmp[1130422]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1130426 'move' coerce_tmp[1130422](2567640 '.v' other[1129374] _low[1087716]))
    const-val coerce_tmp[1130430]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1130434 'move' coerce_tmp[1130430](2567647 '.v' other[1129374] _high[1087721]))
    const-val call_tmp[1129957]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1129959 'move' call_tmp[1129957](1129962 call alignment[1128309] other[1129374]))
    (1129992 call init[1130442] this[1129372] coerce_tmp[1130422] coerce_tmp[1130430] 1 call_tmp[1129957] 1)
    (1130007 return _void[55])
  }
  function range(byteIndex,boundedLow,false)[1143592].init=[1147537](ref arg this[1147543]:range(byteIndex,boundedLow,false)[1143592], const in arg other[1147545]:range(byteIndex,boundedLow,false)[1143592]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1148104]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1148392]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1148396 'move' coerce_tmp[1148392](2567775 '.v' other[1147545] _low[1143554]))
    const-val ret[2239627]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2239629]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2239632 call init[28100] cpi[2239629])
    (2239634 '.=' cpi[2239629] _bindex[28094] coerce_tmp[1148392])
    (2239638 'move' ret[2239627] cpi[2239629])
    (1893849 'move' call_tmp[1148104] ret[2239627])
    const-val call_tmp[1148120]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1148400]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1148404 'move' coerce_tmp[1148400](2567783 '.v' other[1147545] _high[1143559]))
    const-val ret[2239653]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2239655]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2239658 call init[28100] cpi[2239655])
    (2239660 '.=' cpi[2239655] _bindex[28094] coerce_tmp[1148400])
    (2239664 'move' ret[2239653] cpi[2239655])
    (1893855 'move' call_tmp[1148120] ret[2239653])
    const-val call_tmp[1148128]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1910536]:byteIndex[28173] "temp"
    (1148133 call alignment[1148427] other[1147545] ret_tmp[1910536])
    (1910539 'move' call_tmp[1148128] ret_tmp[1910536])
    val ret[2386070]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2386072 'move' ret[2386070](2386074 '.v' call_tmp[1148128] _bindex[28094]))
    const-val call_tmp[1148143]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret[2239679]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2239681]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2239684 call init[28100] cpi[2239681])
    (2239686 '.=' cpi[2239681] _bindex[28094] ret[2386070])
    (2239690 'move' ret[2239679] cpi[2239681])
    (1893861 'move' call_tmp[1148143] ret[2239679])
    (1148163 call init[1148906] this[1147543] call_tmp[1148104] call_tmp[1148120] 1 call_tmp[1148143] 1)
    (1148178 return _void[55])
  }
  function range(byteIndex,boundedHigh,false)[1185108].init=[1191742](ref arg this[1191748]:range(byteIndex,boundedHigh,false)[1185108], const in arg other[1191750]:range(byteIndex,boundedHigh,false)[1185108]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1192309]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1192597]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1192601 'move' coerce_tmp[1192597](2568116 '.v' other[1191750] _low[1185070]))
    const-val ret[2239793]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2239795]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2239798 call init[28100] cpi[2239795])
    (2239800 '.=' cpi[2239795] _bindex[28094] coerce_tmp[1192597])
    (2239804 'move' ret[2239793] cpi[2239795])
    (1893885 'move' call_tmp[1192309] ret[2239793])
    const-val call_tmp[1192325]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1192605]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1192609 'move' coerce_tmp[1192605](2568124 '.v' other[1191750] _high[1185075]))
    const-val ret[2239819]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2239821]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2239824 call init[28100] cpi[2239821])
    (2239826 '.=' cpi[2239821] _bindex[28094] coerce_tmp[1192605])
    (2239830 'move' ret[2239819] cpi[2239821])
    (1893891 'move' call_tmp[1192325] ret[2239819])
    const-val call_tmp[1192333]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1910858]:byteIndex[28173] "temp"
    (1192338 call alignment[1192850] other[1191750] ret_tmp[1910858])
    (1910861 'move' call_tmp[1192333] ret_tmp[1910858])
    val ret[2386142]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2386144 'move' ret[2386142](2386146 '.v' call_tmp[1192333] _bindex[28094]))
    const-val call_tmp[1192348]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret[2239845]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2239847]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2239850 call init[28100] cpi[2239847])
    (2239852 '.=' cpi[2239847] _bindex[28094] ret[2386142])
    (2239856 'move' ret[2239845] cpi[2239847])
    (1893897 'move' call_tmp[1192348] ret[2239845])
    (1192368 call init[1193113] this[1191748] call_tmp[1192309] call_tmp[1192325] 1 call_tmp[1192348] 0)
    (1192383 return _void[55])
  }
  function chpl_build_bounded_range[455253](const in arg low[455260]:int(64)[13], const in arg high[455266]:int(64)[13], ref arg _retArg[1907700]:range(int(64),bounded,false)[1027003]) : void[4] "fn returns via _retArg" "resolved" "fn synchronization free"
  {
    const-val call_tmp[616933]:range(int(64),bounded,false)[1027003] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1026214]:range(int(64),bounded,false)[1027003] "dead after last mention" "delay instantiation" "temp"
    (1026217 call init[1026226] initTemp[1026214] low[455260] high[455266] 1 0 0)
    (616936 'move' call_tmp[616933] initTemp[1026214])
    (1907702 '=' _retArg[1907700] call_tmp[616933])
    (1907704 return _void[55])
  }
  function chpl_build_low_bounded_range[1087147](const in arg low[1087149]:int(64)[13], ref arg _retArg[1909576]:range(int(64),boundedLow,false)[1087754]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[1087172]:range(int(64),boundedLow,false)[1087754] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1087190]:range(int(64),boundedLow,false)[1087754] "dead after last mention" "delay instantiation" "temp"
    (1087193 call init[1087201] initTemp[1087190] low[1087149] 0 1 0 0)
    (1087174 'move' call_tmp[1087172] initTemp[1087190])
    (1909578 '=' _retArg[1909576] call_tmp[1087172])
    (1909580 return _void[55])
  }
  function range(int(64),bounded,false)[1027003].alignment[1034440](const in arg this[1034446]:range(int(64),bounded,false)[1027003]) : int(64)[13] "instantiated generic" "invisible fn" "method" "no doc" "no parens" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[2385618]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2385620 'move' coerce_tmp[2385618](2385622 '.v' this[1034446] _low[1026965]))
    (1034568 return coerce_tmp[2385618])
  }
  function range(byteIndex,bounded,false)[1025981].alignment[1045624](const in arg this[1045630]:range(byteIndex,bounded,false)[1025981], ref arg _retArg[1908880]:byteIndex[28173]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "no parens" "resolved"
  {
    const-val coerce_tmp[2386402]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2386404 'move' coerce_tmp[2386402](2386406 '.v' this[1045630] _low[1025943]))
    const-val ret[2386409]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2386411]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2386414 call init[28100] cpi[2386411])
    (2386416 '.=' cpi[2386411] _bindex[28094] coerce_tmp[2386402])
    (2386420 'move' ret[2386409] cpi[2386411])
    (1908882 '=' _retArg[1908880] ret[2386409])
    (1908884 return _void[55])
  }
  function range(int(64),boundedLow,false)[1087754].alignment[1128309](const in arg this[1128315]:range(int(64),boundedLow,false)[1087754]) : int(64)[13] "instantiated generic" "invisible fn" "method" "no doc" "no parens" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[2396324]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2396326 'move' coerce_tmp[2396324](2396328 '.v' this[1128315] _low[1087716]))
    (1128437 return coerce_tmp[2396324])
  }
  function range(byteIndex,boundedLow,false)[1143592].alignment[1148427](const in arg this[1148433]:range(byteIndex,boundedLow,false)[1143592], ref arg _retArg[1910548]:byteIndex[28173]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "no parens" "resolved"
  {
    const-val coerce_tmp[2397016]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2397018 'move' coerce_tmp[2397016](2397020 '.v' this[1148433] _low[1143554]))
    const-val ret[2397023]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2397025]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2397028 call init[28100] cpi[2397025])
    (2397030 '.=' cpi[2397025] _bindex[28094] coerce_tmp[2397016])
    (2397034 'move' ret[2397023] cpi[2397025])
    (1910550 '=' _retArg[1910548] ret[2397023])
    (1910552 return _void[55])
  }
  function range(int(64),boundedHigh,false)[1187618].alignment[1190783](const in arg this[1190789]:range(int(64),boundedHigh,false)[1187618]) : int(64)[13] "instantiated generic" "invisible fn" "method" "no doc" "no parens" "resolved" "fn synchronization free"
  {
    (1190813 return 0)
  }
  function range(byteIndex,boundedHigh,false)[1185108].alignment[1192850](const in arg this[1192856]:range(byteIndex,boundedHigh,false)[1185108], ref arg _retArg[1910870]:byteIndex[28173]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "no parens" "resolved"
  {
    const-val ret[2400752]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2400754]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2400757 call init[28100] cpi[2400754])
    (2400759 '.=' cpi[2400754] _bindex[28094] 0)
    (2400763 'move' ret[2400752] cpi[2400754])
    (1910872 '=' _retArg[1910870] ret[2400752])
    (1910874 return _void[55])
  }
  function range(int(64),bounded,false)[1027003].size[1035978](const in arg this[1035984]:range(int(64),bounded,false)[1027003]) : int(64)[13] "instantiated generic" "invisible fn" "method" "no parens" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_71[2577622]:string[26] "temp"
    (2577623 'move' "Attempt to divide by zero" "Attempt to divide by zero")
    val ret[1035991]:int(64)[13] "dead after last mention" "RVV" "temp"
    val ret[2386992]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2386994 'move' ret[2386992](2386996 '.v' this[1035984] _high[1026970]))
    val ret[2387024]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2387026 'move' ret[2387024](2387028 '.v' this[1035984] _low[1026965]))
    const-val call_tmp[2240253]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2240255 'move' call_tmp[2240253](2240257 '>' ret[2387024] ret[2386992]))
    if call_tmp[2240253]
    {
      (1036096 'move' ret[1035991] 0)
      gotoReturn _end_size[1036200] _end_size[1036200]
    }
    const-val call_tmp[2243567]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2243569 'move' call_tmp[2243567](2243571 '-' ret[2386992] ret[2387024]))
    const-val call_tmp[2335013]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2335015 'move' call_tmp[2335013](2335017 '==' 1 0))
    if call_tmp[2335013]
    {
      (2335023 call halt[154111] "Attempt to divide by zero")
    }
    const-val call_tmp[2335026]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2335028 'move' call_tmp[2335026](2335030 '/' call_tmp[2243567] 1))
    const-val call_tmp[2236110]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2236112 'move' call_tmp[2236110](2236114 '+' call_tmp[2335026] 1))
    (1037156 'move' ret[1035991] call_tmp[2236110])
    label _end_size[1036200]
    (1036202 return ret[1035991])
  }
  function range(int(64),bounded,true)[1570523].isAmbiguous[1572580](const in arg this[1572586]:range(int(64),bounded,true)[1570523]) : bool[10] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    val ret[2510972]:bool[10] "dead after last mention" "RVV" "temp"
    (2510974 'move' ret[2510972](2510976 '.v' this[1572586] _aligned[1570515]))
    const-val call_tmp[2228877]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228879 'move' call_tmp[2228877](2228881 '!' ret[2510972]))
    val tmp[1572631]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2228877]
    {
      val ret[2509888]:int(64)[13] "dead after last mention" "RVV" "temp"
      (2509890 'move' ret[2509888](2509892 '.v' this[1572586] _stride[1570495]))
      const-val call_tmp[2241033]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2241035 'move' call_tmp[2241033](2241037 '>' ret[2509888] 1))
      val tmp[1572678]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if call_tmp[2241033]
      {
        (1572696 'move' tmp[1572678] 1)
      }
      {
        val ret[2509898]:int(64)[13] "dead after last mention" "RVV" "temp"
        (2509900 'move' ret[2509898](2509902 '.v' this[1572586] _stride[1570495]))
        const-val call_tmp[2510982]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2510984 'move' call_tmp[2510982](2510986 '<' ret[2509898] -1))
        (1572732 'move' tmp[1572678] call_tmp[2510982])
      }
      (1572745 'move' tmp[1572631] tmp[1572678])
    }
    {
      (1572751 'move' tmp[1572631] 0)
    }
    (1572761 return tmp[1572631])
  }
  function ==[1042101](const in arg r1[1042103]:range(int(64),bounded,false)[1027003], const in arg r2[1042105]:range(int(64),bounded,false)[1027003]) : bool[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1042130]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1042239]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1042241 'move' call_tmp[1042239](1042244 call size[1035978] r1[1042103]))
    const-val call_tmp[1042252]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1042254 'move' call_tmp[1042252](1042257 call size[1035978] r2[1042105]))
    const-val call_tmp[2229696]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2229698 'move' call_tmp[2229696](2229700 '!=' call_tmp[1042239] call_tmp[1042252]))
    if call_tmp[2229696]
    {
      (1042283 'move' ret[1042130] 0)
      gotoReturn _end_==[1042600] _end_==[1042600]
    }
    const-val call_tmp[2233006]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2233008 'move' call_tmp[2233006](2233010 '==' call_tmp[1042239] 0))
    if call_tmp[2233006]
    {
      (1042308 'move' ret[1042130] 1)
      gotoReturn _end_==[1042600] _end_==[1042600]
    }
    val ret[2387167]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2387169 'move' ret[2387167](2387171 '.v' r1[1042103] _low[1026965]))
    val ret[2387177]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2387179 'move' ret[2387177](2387181 '.v' r2[1042105] _low[1026965]))
    const-val call_tmp[2229706]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2229708 'move' call_tmp[2229706](2229710 '!=' ret[2387167] ret[2387177]))
    if call_tmp[2229706]
    {
      (1042349 'move' ret[1042130] 0)
      gotoReturn _end_==[1042600] _end_==[1042600]
    }
    const-val call_tmp[2233021]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2233023 'move' call_tmp[2233021](2233025 '==' call_tmp[1042239] 1))
    if call_tmp[2233021]
    {
      (1042374 'move' ret[1042130] 1)
      gotoReturn _end_==[1042600] _end_==[1042600]
    }
    (1042423 'move' ret[1042130] 1)
    label _end_==[1042600]
    (1042602 return ret[1042130])
  }
  function !=[1842744](const in arg r1[1842746]:range(int(64),bounded,false)[1027003], const in arg r2[1842748]:range(int(64),bounded,false)[1027003]) : bool[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[1842760]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1842762 'move' call_tmp[1842760](1842765 call ==[1042101] r1[1842746] r2[1842748]))
    const-val call_tmp[2229039]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2229041 'move' call_tmp[2229039](2229043 '!' call_tmp[1842760]))
    (1842779 return call_tmp[2229039])
  }
  function range(int(64),bounded,false)[1027003].safeCast[1297206](const in arg this[1297212]:range(int(64),bounded,false)[1027003], ref arg _retArg[1913358]:range(int(64),bounded,false)[1027003]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1297216]:range(int(64),bounded,false)[1027003] "dead after last mention" "RVV" "temp"
    val tmp[1297241]:range(int(64),bounded,false)[1027003] "dead at end of block" "insert auto destroy"
    (1297615 call init[1026226] tmp[1297241] 1 0 1 0 0)
    const-val coerce_tmp[1297593]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1297597 'move' coerce_tmp[1297593](2569201 '.v' this[1297212] _low[1026965]))
    (2569194 '.=' tmp[1297241] _low[1026965] coerce_tmp[1297593])
    const-val coerce_tmp[1297605]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1297609 'move' coerce_tmp[1297605](2569215 '.v' this[1297212] _high[1026970]))
    (2569208 '.=' tmp[1297241] _high[1026970] coerce_tmp[1297605])
    (1297547 'move' ret[1297216] tmp[1297241])
    label _end_safeCast[1297555]
    (1913360 '=' _retArg[1913358] ret[1297216])
    (1913362 return _void[55])
  }
  function _cast[1027751](const in arg r[1027755]:range(int(64),bounded,false)[1027003], ref arg _retArg[1908522]:range(byteIndex,bounded,false)[1025981]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved"
  {
    const-val ret[1027757]:range(byteIndex,bounded,false)[1025981] "dead after last mention" "RVV" "temp"
    val tmp[1027767]:range(byteIndex,bounded,false)[1025981] "dead at end of block" "insert auto destroy"
    const-val default_arg__low[1029940]:byteIndex[28173] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret[2386195]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2386197]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2386200 call init[28100] cpi[2386197])
    (2386202 '.=' cpi[2386197] _bindex[28094] 1)
    (2386206 'move' ret[2386195] cpi[2386197])
    (1908531 'move' default_arg__low[1029940] ret[2386195])
    const-val default_arg__high[1029992]:byteIndex[28173] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret[2386222]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2386224]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2386227 call init[28100] cpi[2386224])
    (2386229 '.=' cpi[2386224] _bindex[28094] 0)
    (2386233 'move' ret[2386222] cpi[2386224])
    (1908543 'move' default_arg__high[1029992] ret[2386222])
    const-val default_arg__alignment[1030065]:byteIndex[28173] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret[2386255]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2386257]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2386260 call init[28100] cpi[2386257])
    (2386262 '.=' cpi[2386257] _bindex[28094] 0)
    (2386266 'move' ret[2386255] cpi[2386257])
    (1908555 'move' default_arg__alignment[1030065] ret[2386255])
    (1028888 call init[1028897] tmp[1027767] default_arg__low[1029940] default_arg__high[1029992] 1 default_arg__alignment[1030065] 0)
    const-val coerce_tmp[2385598]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2385600 'move' coerce_tmp[2385598](2385602 '.v' r[1027755] _low[1026965]))
    (2566364 '.=' tmp[1027767] _low[1025943] coerce_tmp[2385598])
    const-val coerce_tmp[2385858]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2385860 'move' coerce_tmp[2385858](2385862 '.v' r[1027755] _high[1026970]))
    (2566371 '.=' tmp[1027767] _high[1025948] coerce_tmp[2385858])
    (1028026 'move' ret[1027757] tmp[1027767])
    label _end__cast[1028034]
    (1908524 '=' _retArg[1908522] ret[1027757])
    (1908526 return _void[55])
  }
  function _cast[1032672](const in arg r[1032676]:range(byteIndex,bounded,false)[1025981], ref arg _retArg[1908630]:range(int(64),bounded,false)[1027003]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1032678]:range(int(64),bounded,false)[1027003] "dead after last mention" "RVV" "temp"
    val tmp[1032688]:range(int(64),bounded,false)[1027003] "dead at end of block" "insert auto destroy"
    (1033232 call init[1026226] tmp[1032688] 1 0 1 0 0)
    const-val call_tmp[1032885]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2386369]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2386371 'move' coerce_tmp[2386369](2386373 '.v' r[1032676] _low[1025943]))
    const-val ret[2386376]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2386378]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2386381 call init[28100] cpi[2386378])
    (2386383 '.=' cpi[2386378] _bindex[28094] coerce_tmp[2386369])
    (2386387 'move' ret[2386376] cpi[2386378])
    (1908639 'move' call_tmp[1032885] ret[2386376])
    val ret[2239888]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2239890 'move' ret[2239888](2239892 '.v' call_tmp[1032885] _bindex[28094]))
    (2566449 '.=' tmp[1032688] _low[1026965] ret[2239888])
    const-val call_tmp[1032924]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2386477]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2386479 'move' coerce_tmp[2386477](2386481 '.v' r[1032676] _high[1025948]))
    const-val ret[2386484]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2386486]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2386489 call init[28100] cpi[2386486])
    (2386491 '.=' cpi[2386486] _bindex[28094] coerce_tmp[2386477])
    (2386495 'move' ret[2386484] cpi[2386486])
    (1908681 'move' call_tmp[1032924] ret[2386484])
    val ret[2239904]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2239906 'move' ret[2239904](2239908 '.v' call_tmp[1032924] _bindex[28094]))
    (2566458 '.=' tmp[1032688] _high[1026970] ret[2239904])
    (1032947 'move' ret[1032678] tmp[1032688])
    label _end__cast[1032955]
    (1908632 '=' _retArg[1908630] ret[1032678])
    (1908634 return _void[55])
  }
  function _cast[1146002](const in arg r[1146006]:range(byteIndex,boundedLow,false)[1143592], ref arg _retArg[1910448]:range(int(64),boundedLow,false)[1087754]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1146008]:range(int(64),boundedLow,false)[1087754] "dead after last mention" "RVV" "temp"
    val tmp[1146018]:range(int(64),boundedLow,false)[1087754] "dead at end of block" "insert auto destroy"
    (1146522 call init[1087201] tmp[1146018] 1 0 1 0 0)
    const-val call_tmp[1146215]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2396983]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2396985 'move' coerce_tmp[2396983](2396987 '.v' r[1146006] _low[1143554]))
    const-val ret[2396990]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2396992]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2396995 call init[28100] cpi[2396992])
    (2396997 '.=' cpi[2396992] _bindex[28094] coerce_tmp[2396983])
    (2397001 'move' ret[2396990] cpi[2396992])
    (1910457 'move' call_tmp[1146215] ret[2396990])
    val ret[2239970]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2239972 'move' ret[2239970](2239974 '.v' call_tmp[1146215] _bindex[28094]))
    (2567737 '.=' tmp[1146018] _low[1087716] ret[2239970])
    const-val call_tmp[1146254]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2397127]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2397129 'move' coerce_tmp[2397127](2397131 '.v' r[1146006] _high[1143559]))
    const-val ret[2397134]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2397136]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2397139 call init[28100] cpi[2397136])
    (2397141 '.=' cpi[2397136] _bindex[28094] coerce_tmp[2397127])
    (2397145 'move' ret[2397134] cpi[2397136])
    (1910499 'move' call_tmp[1146254] ret[2397134])
    val ret[2239986]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2239988 'move' ret[2239986](2239990 '.v' call_tmp[1146254] _bindex[28094]))
    (2567746 '.=' tmp[1146018] _high[1087721] ret[2239986])
    (1146277 'move' ret[1146008] tmp[1146018])
    label _end__cast[1146285]
    (1910450 '=' _retArg[1910448] ret[1146008])
    (1910452 return _void[55])
  }
  function _cast[1187820](const in arg r[1187824]:range(byteIndex,boundedHigh,false)[1185108], ref arg _retArg[1910770]:range(int(64),boundedHigh,false)[1187618]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1187826]:range(int(64),boundedHigh,false)[1187618] "dead after last mention" "RVV" "temp"
    val tmp[1187836]:range(int(64),boundedHigh,false)[1187618] "dead at end of block" "insert auto destroy"
    (1188893 call init[1188902] tmp[1187836] 1 0 1 0 0)
    const-val call_tmp[1188033]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2400787]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2400789 'move' coerce_tmp[2400787](2400791 '.v' r[1187824] _low[1185070]))
    const-val ret[2400794]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2400796]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2400799 call init[28100] cpi[2400796])
    (2400801 '.=' cpi[2400796] _bindex[28094] coerce_tmp[2400787])
    (2400805 'move' ret[2400794] cpi[2400796])
    (1910779 'move' call_tmp[1188033] ret[2400794])
    val ret[2240012]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2240014 'move' ret[2240012](2240016 '.v' call_tmp[1188033] _bindex[28094]))
    (2568078 '.=' tmp[1187836] _low[1187580] ret[2240012])
    const-val call_tmp[1188072]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2400917]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2400919 'move' coerce_tmp[2400917](2400921 '.v' r[1187824] _high[1185075]))
    const-val ret[2400924]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2400926]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2400929 call init[28100] cpi[2400926])
    (2400931 '.=' cpi[2400926] _bindex[28094] coerce_tmp[2400917])
    (2400935 'move' ret[2400924] cpi[2400926])
    (1910815 'move' call_tmp[1188072] ret[2400924])
    val ret[2240028]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2240030 'move' ret[2240028](2240032 '.v' call_tmp[1188072] _bindex[28094]))
    (2568087 '.=' tmp[1187836] _high[1187585] ret[2240028])
    (1188095 'move' ret[1187826] tmp[1187836])
    label _end__cast[1188103]
    (1910772 '=' _retArg[1910770] ret[1187826])
    (1910774 return _void[55])
  }
  function range(int(64),bounded,false)[1027003].orderToIndex[1104229](const in arg this[1104235]:range(int(64),bounded,false)[1027003], const in arg ord[1104237]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val local__str_literal_923[2578046]:string[26] "temp"
    (2578047 'move' " that is larger than the range's number of indices " " that is larger than the range's number of indices ")
    const-val local__str_literal_921[2578040]:string[26] "temp"
    (2578041 'move' "invoking orderToIndex on an integer " "invoking orderToIndex on an integer ")
    const-val local__str_literal_919[2578034]:string[26] "temp"
    (2578035 'move' "invoking orderToIndex on a negative integer: " "invoking orderToIndex on a negative integer: ")
    const-val local__str_literal_915[2578028]:string[26] "temp"
    (2578029 'move' "invoking orderToIndex on a range that has no first index" "invoking orderToIndex on a range that has no first index")
    val ret[2395435]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2395437 'move' ret[2395435](2395439 '.v' this[1104235] _low[1026965]))
    val ret[2395442]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2395444 'move' ret[2395442](2395446 '.v' this[1104235] _high[1026970]))
    const-val call_tmp[2395449]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2395451 'move' call_tmp[2395449](2395453 '>' ret[2395435] ret[2395442]))
    val tmp[2395456]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2395449]
    {
      (2395460 'move' tmp[2395456] 0)
    }
    {
      (2395464 'move' tmp[2395456] 1)
    }
    const-val call_tmp[2228382]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228384 'move' call_tmp[2228382](2228386 '!' tmp[2395456]))
    if call_tmp[2228382]
    {
      (1104293 call boundsCheckHalt[210254] "invoking orderToIndex on a range that has no first index")
    }
    const-val call_tmp[2230568]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2230570 'move' call_tmp[2230568](2230572 '<' ord[1104237] 0))
    if call_tmp[2230568]
    {
      const-val call_tmp[1104343]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1909018]:string[26] "temp"
      (1104348 call _cast[1063342] ord[1104237] ret_tmp[1909018])
      (1909021 'move' call_tmp[1104343] ret_tmp[1909018])
      const-val call_tmp[1104351]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1905806]:string[26] "temp"
      (1104356 call +[38345] "invoking orderToIndex on a negative integer: " call_tmp[1104343] ret_tmp[1905806])
      (1905809 'move' call_tmp[1104351] ret_tmp[1905806])
      (1104360 call boundsCheckHalt[210254] call_tmp[1104351])
      ref i_x[2247557]:string[26] "temp"
      (2247561 'move' i_x[2247557](2247559 'set reference' call_tmp[1104351]))
      (2247565 call deinit[30834] i_x[2247557])
      ref i_x[2247569]:string[26] "temp"
      (2247573 'move' i_x[2247569](2247571 'set reference' call_tmp[1104343]))
      (2247577 call deinit[30834] i_x[2247569])
    }
    const-val call_tmp[1104405]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1104407 'move' call_tmp[1104405](1104410 call size[1035978] this[1104235]))
    const-val call_tmp[2245405]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2245407 'move' call_tmp[2245405](2245409 '>=' ord[1104237] call_tmp[1104405]))
    if call_tmp[2245405]
    {
      const-val call_tmp[1104449]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1909024]:string[26] "temp"
      (1104454 call _cast[1063342] ord[1104237] ret_tmp[1909024])
      (1909027 'move' call_tmp[1104449] ret_tmp[1909024])
      const-val call_tmp[1104457]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1905812]:string[26] "temp"
      (1104462 call +[38345] "invoking orderToIndex on an integer " call_tmp[1104449] ret_tmp[1905812])
      (1905815 'move' call_tmp[1104457] ret_tmp[1905812])
      const-val call_tmp[1104465]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1905818]:string[26] "temp"
      (1104470 call +[38345] call_tmp[1104457] " that is larger than the range's number of indices " ret_tmp[1905818])
      (1905821 'move' call_tmp[1104465] ret_tmp[1905818])
      const-val call_tmp[1104473]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1104475 'move' call_tmp[1104473](1104478 call size[1035978] this[1104235]))
      const-val call_tmp[1104481]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1909030]:string[26] "temp"
      (1104486 call _cast[1063342] call_tmp[1104473] ret_tmp[1909030])
      (1909033 'move' call_tmp[1104481] ret_tmp[1909030])
      const-val call_tmp[1104489]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1905824]:string[26] "temp"
      (1104494 call +[38345] call_tmp[1104465] call_tmp[1104481] ret_tmp[1905824])
      (1905827 'move' call_tmp[1104489] ret_tmp[1905824])
      (1104498 call boundsCheckHalt[210254] call_tmp[1104489])
      ref i_x[2247581]:string[26] "temp"
      (2247585 'move' i_x[2247581](2247583 'set reference' call_tmp[1104489]))
      (2247589 call deinit[30834] i_x[2247581])
      ref i_x[2247593]:string[26] "temp"
      (2247597 'move' i_x[2247593](2247595 'set reference' call_tmp[1104481]))
      (2247601 call deinit[30834] i_x[2247593])
      ref i_x[2247605]:string[26] "temp"
      (2247609 'move' i_x[2247605](2247607 'set reference' call_tmp[1104465]))
      (2247613 call deinit[30834] i_x[2247605])
      ref i_x[2247617]:string[26] "temp"
      (2247621 'move' i_x[2247617](2247619 'set reference' call_tmp[1104457]))
      (2247625 call deinit[30834] i_x[2247617])
      ref i_x[2247629]:string[26] "temp"
      (2247633 'move' i_x[2247629](2247631 'set reference' call_tmp[1104449]))
      (2247637 call deinit[30834] i_x[2247629])
    }
    val ret[2387155]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2387157 'move' ret[2387155](2387159 '.v' this[1104235] _low[1026965]))
    const-val call_tmp[1104520]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1104522 'move' call_tmp[1104520](1104525 call chpl__addRangeStrides[1105216] ret[2387155] 1 ord[1104237]))
    (1104552 return call_tmp[1104520])
  }
  function chpl_by_help[1569245](const in arg r[1569247]:range(int(64),bounded,false)[1027003], const in arg step[1569249]:int(64)[13], ref arg _retArg[1916925]:range(int(64),bounded,true)[1570523]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[2385768]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2385770 'move' coerce_tmp[2385768](2385772 '.v' r[1569247] _low[1026965]))
    const-val coerce_tmp[2385948]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2385950 'move' coerce_tmp[2385948](2385952 '.v' r[1569247] _high[1026970]))
    const-val call_tmp[2411979]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2411981 'move' call_tmp[2411979](2411983 '*' 1 step[1569249]))
    const-val call_tmp[2240988]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2240990 'move' call_tmp[2240988](2240992 '>' call_tmp[2411979] 0))
    val tmp_x0[2547175]:bool[10] "temp"
    val tmp_x1[2547177]:int(64)[13] "temp"
    if call_tmp[2240988]
    {
      val ret[2395354]:int(64)[13] "dead after last mention" "RVV" "temp"
      (2395356 'move' ret[2395354](2395358 '.v' r[1569247] _low[1026965]))
      (2547183 'move' tmp_x0[2547175] 1)
      (2547188 'move' tmp_x1[2547177] ret[2395354])
    }
    {
      const-val call_tmp[2230728]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2230730 'move' call_tmp[2230728](2230732 '<' call_tmp[2411979] 0))
      val tmp_x0[2547217]:bool[10] "temp"
      val tmp_x1[2547219]:int(64)[13] "temp"
      if call_tmp[2230728]
      {
        val ret[2395384]:int(64)[13] "dead after last mention" "RVV" "temp"
        (2395386 'move' ret[2395384](2395388 '.v' r[1569247] _high[1026970]))
        (2547225 'move' tmp_x0[2547217] 1)
        (2547230 'move' tmp_x1[2547219] ret[2395384])
      }
      {
        (2547235 'move' tmp_x0[2547217] 0)
        (2547240 'move' tmp_x1[2547219] 0)
      }
      (2547193 'move' tmp_x0[2547175] tmp_x0[2547217])
      (2547198 'move' tmp_x1[2547177] tmp_x1[2547219])
    }
    (1569749 'noop')
    (1569767 'noop')
    (1569779 'noop')
    const-val call_tmp[1569797]:range(int(64),bounded,true)[1570523] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1569947]:range(int(64),bounded,true)[1570523] "dead after last mention" "delay instantiation" "temp"
    (1569950 call init[1569962] initTemp[1569947] coerce_tmp[2385768] coerce_tmp[2385948] call_tmp[2411979] tmp_x1[2547177] tmp_x0[2547175])
    (1569799 'move' call_tmp[1569797] initTemp[1569947])
    label _end_chpl_by_help[1569823]
    (1916927 '=' _retArg[1916925] call_tmp[1569797])
    (1916929 return _void[55])
  }
  function range(int(64),bounded,false)[1027003].this[1037637](const in arg this[1037643]:range(int(64),bounded,false)[1027003], const in arg other[1037645]:range(int(64),bounded,false)[1027003], ref arg _retArg[1908720]:range(int(64),bounded,false)[1027003]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[1040127]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1040131 'move' coerce_tmp[1040127](2566482 '.v' this[1037643] _low[1026965]))
    (1038236 'noop')
    const-val coerce_tmp[1040140]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1040144 'move' coerce_tmp[1040140](2566492 '.v' this[1037643] _high[1026970]))
    (1038290 'noop')
    const-val coerce_tmp[1040157]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1040161 'move' coerce_tmp[1040157](2566502 '.v' other[1037645] _low[1026965]))
    (1038365 'noop')
    const-val coerce_tmp[1040170]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1040174 'move' coerce_tmp[1040170](2566512 '.v' other[1037645] _high[1026970]))
    (1038419 'noop')
    const-val ret_tmp[1908726]:2*int(64)[1040245] "temp"
    (2551749 '.=' ret_tmp[1908726] x0[1040241] 1)
    (2551753 '.=' ret_tmp[1908726] x1[1040243] 0)
    (1038606 'noop')
    (1038618 'noop')
    val tmp[2315751]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2315753]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2315755 'move' call_tmp[2315753](2315757 '>' coerce_tmp[1040127] coerce_tmp[1040157]))
    if call_tmp[2315753]
    {
      (2315762 'move' tmp[2315751] coerce_tmp[1040127])
    }
    {
      (2315766 'move' tmp[2315751] coerce_tmp[1040157])
    }
    val newlo[1039270]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1039272 'move' newlo[1039270] tmp[2315751])
    val tmp[2270707]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2270709]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2270711 'move' call_tmp[2270709](2270713 '<' coerce_tmp[1040140] coerce_tmp[1040170]))
    if call_tmp[2270709]
    {
      (2270718 'move' tmp[2270707] coerce_tmp[1040140])
    }
    {
      (2270722 'move' tmp[2270707] coerce_tmp[1040170])
    }
    val newhi[1039300]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1039302 'move' newhi[1039300] tmp[2270707])
    (2576338 'noop')
    const-val call_tmp[2228355]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228357 'move' call_tmp[2228355](2228359 '!' 0))
    val tmp[1039350]:bool[10] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2228355]
    {
      (1039441 'move' tmp[1039350] 1)
    }
    {
      (1039447 'move' tmp[1039350] 0)
    }
    const-val call_tmp[1039523]:range(int(64),bounded,false)[1027003] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1042017]:range(int(64),bounded,false)[1027003] "dead at end of block" "delay instantiation" "temp"
    (1042020 call init[1026226] initTemp[1042017] newlo[1039270] newhi[1039300] 1 0 tmp[1039350])
    (1039525 'move' call_tmp[1039523] initTemp[1042017])
    label _end_this[1040104]
    (1908722 '=' _retArg[1908720] call_tmp[1039523])
    (1908724 return _void[55])
  }
  function range(int(64),boundedLow,false)[1087754].this[1139158](const in arg this[1139164]:range(int(64),boundedLow,false)[1087754], const in arg other[1139166]:range(int(64),bounded,false)[1027003], ref arg _retArg[1910296]:range(int(64),bounded,false)[1027003]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[1141648]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1141652 'move' coerce_tmp[1141648](2567669 '.v' this[1139164] _low[1087716]))
    (1139757 'noop')
    const-val coerce_tmp[1141661]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1141665 'move' coerce_tmp[1141661](2567679 '.v' other[1139166] _high[1026970]))
    (1139811 'noop')
    const-val coerce_tmp[1141678]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1141682 'move' coerce_tmp[1141678](2567689 '.v' other[1139166] _low[1026965]))
    (1139886 'noop')
    const-val coerce_tmp[1141691]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1141695 'move' coerce_tmp[1141691](2567699 '.v' other[1139166] _high[1026970]))
    (1139940 'noop')
    const-val ret_tmp[1908744]:2*int(64)[1040245] "temp"
    (2551763 '.=' ret_tmp[1908744] x0[1040241] 1)
    (2551767 '.=' ret_tmp[1908744] x1[1040243] 0)
    (1140127 'noop')
    (1140139 'noop')
    val tmp[2315773]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2315775]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2315777 'move' call_tmp[2315775](2315779 '>' coerce_tmp[1141648] coerce_tmp[1141678]))
    if call_tmp[2315775]
    {
      (2315784 'move' tmp[2315773] coerce_tmp[1141648])
    }
    {
      (2315788 'move' tmp[2315773] coerce_tmp[1141678])
    }
    val newlo[1140791]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1140793 'move' newlo[1140791] tmp[2315773])
    val tmp[2270729]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2270731]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2270733 'move' call_tmp[2270731](2270735 '<' coerce_tmp[1141661] coerce_tmp[1141691]))
    if call_tmp[2270731]
    {
      (2270740 'move' tmp[2270729] coerce_tmp[1141661])
    }
    {
      (2270744 'move' tmp[2270729] coerce_tmp[1141691])
    }
    val newhi[1140821]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1140823 'move' newhi[1140821] tmp[2270729])
    (2576339 'noop')
    const-val call_tmp[2228409]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228411 'move' call_tmp[2228409](2228413 '!' 0))
    val tmp[1140871]:bool[10] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2228409]
    {
      (1140962 'move' tmp[1140871] 1)
    }
    {
      (1140968 'move' tmp[1140871] 0)
    }
    const-val call_tmp[1141044]:range(int(64),bounded,false)[1027003] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1142132]:range(int(64),bounded,false)[1027003] "dead at end of block" "delay instantiation" "temp"
    (1142135 call init[1026226] initTemp[1142132] newlo[1140791] newhi[1140821] 1 0 tmp[1140871])
    (1141046 'move' call_tmp[1141044] initTemp[1142132])
    label _end_this[1141625]
    (1910298 '=' _retArg[1910296] call_tmp[1141044])
    (1910300 return _void[55])
  }
  function range(int(64),boundedHigh,false)[1187618].this[1200538](const in arg this[1200544]:range(int(64),boundedHigh,false)[1187618], const in arg other[1200546]:range(int(64),bounded,false)[1027003], ref arg _retArg[1910894]:range(int(64),bounded,false)[1027003]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[1203028]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1203032 'move' coerce_tmp[1203028](2568152 '.v' other[1200546] _low[1026965]))
    (1201137 'noop')
    const-val coerce_tmp[1203041]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1203045 'move' coerce_tmp[1203041](2568162 '.v' this[1200544] _high[1187585]))
    (1201191 'noop')
    const-val coerce_tmp[1203058]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1203062 'move' coerce_tmp[1203058](2568172 '.v' other[1200546] _low[1026965]))
    (1201266 'noop')
    const-val coerce_tmp[1203071]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1203075 'move' coerce_tmp[1203071](2568182 '.v' other[1200546] _high[1026970]))
    (1201320 'noop')
    const-val ret_tmp[1908750]:2*int(64)[1040245] "temp"
    (2551777 '.=' ret_tmp[1908750] x0[1040241] 1)
    (2551781 '.=' ret_tmp[1908750] x1[1040243] 0)
    (1201507 'noop')
    (1201519 'noop')
    val tmp[2315795]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2315797]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2315799 'move' call_tmp[2315797](2315801 '>' coerce_tmp[1203028] coerce_tmp[1203058]))
    if call_tmp[2315797]
    {
      (2315806 'move' tmp[2315795] coerce_tmp[1203028])
    }
    {
      (2315810 'move' tmp[2315795] coerce_tmp[1203058])
    }
    val newlo[1202171]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1202173 'move' newlo[1202171] tmp[2315795])
    val tmp[2270751]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2270753]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2270755 'move' call_tmp[2270753](2270757 '<' coerce_tmp[1203041] coerce_tmp[1203071]))
    if call_tmp[2270753]
    {
      (2270762 'move' tmp[2270751] coerce_tmp[1203041])
    }
    {
      (2270766 'move' tmp[2270751] coerce_tmp[1203071])
    }
    val newhi[1202201]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1202203 'move' newhi[1202201] tmp[2270751])
    (2576340 'noop')
    const-val call_tmp[2228436]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228438 'move' call_tmp[2228436](2228440 '!' 0))
    val tmp[1202251]:bool[10] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2228436]
    {
      (1202342 'move' tmp[1202251] 1)
    }
    {
      (1202348 'move' tmp[1202251] 0)
    }
    const-val call_tmp[1202424]:range(int(64),bounded,false)[1027003] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1203739]:range(int(64),bounded,false)[1027003] "dead at end of block" "delay instantiation" "temp"
    (1203742 call init[1026226] initTemp[1203739] newlo[1202171] newhi[1202201] 1 0 tmp[1202251])
    (1202426 'move' call_tmp[1202424] initTemp[1203739])
    label _end_this[1203005]
    (1910896 '=' _retArg[1910894] call_tmp[1202424])
    (1910898 return _void[55])
  }
  function chpl_count_help[1088505](const in arg r[1088507]:range(int(64),boundedLow,false)[1087754], const in arg count[1088509]:int(64)[13], ref arg _retArg[1909690]:range(int(64),bounded,false)[1027003]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_978[2578016]:string[26] "temp"
    (2578017 'move' "With a negative count, the range must have a last index." "With a negative count, the range must have a last index.")
    val ret[1088511]:range(int(64),bounded,false)[1027003] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2233081]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2233083 'move' call_tmp[2233081](2233085 '==' count[1088509] 0))
    if call_tmp[2233081]
    {
      const-val coerce_tmp[1090902]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1090906 'move' coerce_tmp[1090902](2566893 '.v' r[1088507] _low[1087716]))
      const-val call_tmp[1088809]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1088811 'move' call_tmp[1088809](1088814 call absSameType[1091031] 1))
      const-val coerce_tmp[1091135]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1091139 'move' coerce_tmp[1091135](2566900 '.v' r[1088507] _low[1087716]))
      const-val call_tmp[2243577]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2243579 'move' call_tmp[2243577](2243581 '-' coerce_tmp[1091135] call_tmp[1088809]))
      const-val call_tmp[1088872]:range(int(64),bounded,false)[1027003] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[1091430]:range(int(64),bounded,false)[1027003] "dead after last mention" "delay instantiation" "temp"
      (1091433 call init[1091453] initTemp[1091430] coerce_tmp[1090902] call_tmp[2243577] 1 1)
      (1088874 'move' call_tmp[1088872] initTemp[1091430])
      (1088894 'move' ret[1088511] call_tmp[1088872])
      gotoReturn _end_chpl_count_help[1090477] _end_chpl_count_help[1090477]
    }
    (2394949 'noop')
    const-val call_tmp[2228373]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228375 'move' call_tmp[2228373](2228377 '!' 0))
    val tmp[1089317]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2228373]
    {
      const-val call_tmp[2230508]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2230510 'move' call_tmp[2230508](2230512 '<' count[1088509] 0))
      (1089350 'move' tmp[1089317] call_tmp[2230508])
    }
    {
      (1089356 'move' tmp[1089317] 0)
    }
    if tmp[1089317]
    {
      (1089372 call boundsCheckHalt[210254] "With a negative count, the range must have a last index.")
    }
    const-val call_tmp[2394956]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2394958 'move' call_tmp[2394956](2394960 '*' count[1088509] 1))
    val tmp[1089879]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2240268]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2240270 'move' call_tmp[2240268](2240272 '>' call_tmp[2394956] 0))
    if call_tmp[2240268]
    {
      (1095506 'move' tmp[1089879](2566907 '.v' r[1088507] _low[1087716]))
    }
    {
      const-val tmp[1089912]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[2236140]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2236142 'move' call_tmp[2236140](2236144 '+' call_tmp[2394956] 1))
      const-val coerce_tmp[1094509]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1094513 'move' coerce_tmp[1094509](2566917 '.v' r[1088507] _high[1087721]))
      (1089946 'move' tmp[1089912](1089949 call chpl__add[1093561] coerce_tmp[1094509] call_tmp[2236140]))
      (1089953 'move' tmp[1089879] tmp[1089912])
    }
    val tmp[1089966]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2230538]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2230540 'move' call_tmp[2230538](2230542 '<' call_tmp[2394956] 0))
    if call_tmp[2230538]
    {
      (1095508 'move' tmp[1089966](2566924 '.v' r[1088507] _high[1087721]))
    }
    {
      const-val tmp[1089999]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[2261104]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2261106 'move' call_tmp[2261104](2261108 '-' call_tmp[2394956] 1))
      const-val coerce_tmp[1094562]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1094566 'move' coerce_tmp[1094562](2566934 '.v' r[1088507] _low[1087716]))
      (1090033 'move' tmp[1089999](1090036 call chpl__add[1093561] coerce_tmp[1094562] call_tmp[2261104]))
      (1090040 'move' tmp[1089966] tmp[1089999])
    }
    const-val call_tmp[1090445]:range(int(64),bounded,false)[1027003] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1094641]:range(int(64),bounded,false)[1027003] "dead after last mention" "delay instantiation" "temp"
    (1094644 call init[1094664] initTemp[1094641] tmp[1089879] tmp[1089966])
    (1090447 'move' call_tmp[1090445] initTemp[1094641])
    (1090467 'move' ret[1088511] call_tmp[1090445])
    label _end_chpl_count_help[1090477]
    (1909692 '=' _retArg[1909690] ret[1088511])
    (1909694 return _void[55])
  }
  function #[1088114](const in arg r[1088116]:range(int(64),boundedLow,false)[1087754], const in arg count[1088129]:int(64)[13], ref arg _retArg[1909678]:range(int(64),bounded,false)[1027003]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[1088360]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1909684]:range(int(64),bounded,false)[1027003] "temp"
    (1088365 call chpl_count_help[1088505] r[1088116] count[1088129] ret_tmp[1909684])
    (1909687 'move' call_tmp[1088360] ret_tmp[1909684])
    (1909680 '=' _retArg[1909678] call_tmp[1088360])
    (1909682 return _void[55])
  }
  function chpl_checkIfRangeIterWillOverflow[976539](const in arg low[976543]:int(32)[95], const in arg high[976545]:int(32)[95], const in arg stride[976547]:int(64)[13], const in arg first[976553]:int(32)[95], const in arg last[976559]:int(32)[95], const in arg shouldHalt[976565]:bool[10]) : bool[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_992[2577390]:string[26] "temp"
    (2577391 'move' "Iteration over a bounded range may be incorrect due to overflow." "Iteration over a bounded range may be incorrect due to overflow.")
    val ret[976567]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2334194]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2334196 'move' call_tmp[2334194](2334198 '>' low[976543] high[976545]))
    if call_tmp[2334194]
    {
      (976598 'move' ret[976567] 0)
      gotoReturn _end_chpl_checkIfRangeIterWillOverflow[977079] _end_chpl_checkIfRangeIterWillOverflow[977079]
    }
    val willOverFlow[976605]:bool[10] "dead at end of block" "insert auto destroy"
    (976607 'move' willOverFlow[976605] 0)
    const-val coerce_tmp[977187]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (977193 'move' coerce_tmp[977187](977189 'cast' int(32)[95] 0))
    const-val call_tmp[2334204]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2334206 'move' call_tmp[2334204](2334208 '>' last[976559] coerce_tmp[977187]))
    val tmp[976648]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2334204]
    {
      const-val call_tmp[2240213]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2240215 'move' call_tmp[2240213](2240217 '>' stride[976547] 0))
      (976681 'move' tmp[976648] call_tmp[2240213])
    }
    {
      (976687 'move' tmp[976648] 0)
    }
    if tmp[976648]
    {
      const-val call_tmp[2334463]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2334465 'move' call_tmp[2334463](2334467 '-' 2147483647 last[976559]))
      const-val coerce_tmp[977347]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (977353 'move' coerce_tmp[977347](977349 'cast' int(64)[13] call_tmp[2334463]))
      const-val call_tmp[2240223]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2240225 'move' call_tmp[2240223](2240227 '>' stride[976547] coerce_tmp[977347]))
      if call_tmp[2240223]
      {
        (2251400 '=' willOverFlow[976605] 1)
      }
    }
    {
      const-val coerce_tmp[977357]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (977363 'move' coerce_tmp[977357](977359 'cast' int(32)[95] 0))
      const-val call_tmp[2334124]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2334126 'move' call_tmp[2334124](2334128 '<' last[976559] coerce_tmp[977357]))
      val tmp[976763]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if call_tmp[2334124]
      {
        const-val call_tmp[2230488]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2230490 'move' call_tmp[2230488](2230492 '<' stride[976547] 0))
        (976796 'move' tmp[976763] call_tmp[2230488])
      }
      {
        (976802 'move' tmp[976763] 0)
      }
      if tmp[976763]
      {
        const-val call_tmp[2334478]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
        (2334480 'move' call_tmp[2334478](2334482 '-' -2147483648 last[976559]))
        const-val coerce_tmp[977975]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (977981 'move' coerce_tmp[977975](977977 'cast' int(64)[13] call_tmp[2334478]))
        const-val call_tmp[2244688]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2244690 'move' call_tmp[2244688](2244692 '<' stride[976547] coerce_tmp[977975]))
        if call_tmp[2244688]
        {
          (2251417 '=' willOverFlow[976605] 1)
        }
      }
    }
    val tmp[977017]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if willOverFlow[976605]
    {
      (977042 'move' tmp[977017] shouldHalt[976565])
    }
    {
      (977048 'move' tmp[977017] 0)
    }
    if tmp[977017]
    {
      (977066 call boundsCheckHalt[210254] "Iteration over a bounded range may be incorrect due to overflow.")
    }
    (977071 'move' ret[976567] willOverFlow[976605])
    label _end_chpl_checkIfRangeIterWillOverflow[977079]
    (977081 return ret[976567])
  }
  function chpl_checkIfRangeIterWillOverflow[1096265](const in arg low[1096269]:int(64)[13], const in arg high[1096271]:int(64)[13], const in arg stride[1096273]:int(64)[13], const in arg first[1096279]:int(64)[13], const in arg last[1096285]:int(64)[13], const in arg shouldHalt[1096291]:bool[10]) : bool[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_992[2578022]:string[26] "temp"
    (2578023 'move' "Iteration over a bounded range may be incorrect due to overflow." "Iteration over a bounded range may be incorrect due to overflow.")
    val ret[1096293]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2240318]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2240320 'move' call_tmp[2240318](2240322 '>' low[1096269] high[1096271]))
    if call_tmp[2240318]
    {
      (1096324 'move' ret[1096293] 0)
      gotoReturn _end_chpl_checkIfRangeIterWillOverflow[1096805] _end_chpl_checkIfRangeIterWillOverflow[1096805]
    }
    val willOverFlow[1096331]:bool[10] "dead at end of block" "insert auto destroy"
    (1096333 'move' willOverFlow[1096331] 0)
    const-val call_tmp[2240333]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2240335 'move' call_tmp[2240333](2240337 '>' last[1096285] 0))
    val tmp[1096374]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2240333]
    {
      const-val call_tmp[2240348]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2240350 'move' call_tmp[2240348](2240352 '>' stride[1096273] 0))
      (1096407 'move' tmp[1096374] call_tmp[2240348])
    }
    {
      (1096413 'move' tmp[1096374] 0)
    }
    if tmp[1096374]
    {
      const-val call_tmp[2342742]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2342744 'move' call_tmp[2342742](2342746 '-' 9223372036854775807 last[1096285]))
      const-val call_tmp[2240358]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2240360 'move' call_tmp[2240358](2240362 '>' stride[1096273] call_tmp[2342742]))
      if call_tmp[2240358]
      {
        (2251473 '=' willOverFlow[1096331] 1)
      }
    }
    {
      const-val call_tmp[2230548]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2230550 'move' call_tmp[2230548](2230552 '<' last[1096285] 0))
      val tmp[1096489]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if call_tmp[2230548]
      {
        const-val call_tmp[2230558]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2230560 'move' call_tmp[2230558](2230562 '<' stride[1096273] 0))
        (1096522 'move' tmp[1096489] call_tmp[2230558])
      }
      {
        (1096528 'move' tmp[1096489] 0)
      }
      if tmp[1096489]
      {
        const-val call_tmp[2342712]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2342714 'move' call_tmp[2342712](2342716 '-' -9223372036854775808 last[1096285]))
        const-val call_tmp[2244778]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2244780 'move' call_tmp[2244778](2244782 '<' stride[1096273] call_tmp[2342712]))
        if call_tmp[2244778]
        {
          (2251490 '=' willOverFlow[1096331] 1)
        }
      }
    }
    val tmp[1096743]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if willOverFlow[1096331]
    {
      (1096768 'move' tmp[1096743] shouldHalt[1096291])
    }
    {
      (1096774 'move' tmp[1096743] 0)
    }
    if tmp[1096743]
    {
      (1096792 call boundsCheckHalt[210254] "Iteration over a bounded range may be incorrect due to overflow.")
    }
    (1096797 'move' ret[1096293] willOverFlow[1096331])
    label _end_chpl_checkIfRangeIterWillOverflow[1096805]
    (1096807 return ret[1096293])
  }
  function range(int(64),bounded,false)[1027003].checkIfIterWillOverflow[1096003](const in arg this[1096009]:range(int(64),bounded,false)[1027003], const in arg shouldHalt[1096015]:bool[10]) : bool[10] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    val ret[2387143]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2387145 'move' ret[2387143](2387147 '.v' this[1096009] _low[1026965]))
    val ret[2395108]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2395110 'move' ret[2395108](2395112 '.v' this[1096009] _high[1026970]))
    const-val call_tmp[1096073]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1096809]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1096813 'move' coerce_tmp[1096809](2566943 '.v' this[1096009] _low[1026965]))
    const-val coerce_tmp[1096815]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1096819 'move' coerce_tmp[1096815](2566950 '.v' this[1096009] _high[1026970]))
    (1096075 'move' call_tmp[1096073](1096078 call chpl_checkIfRangeIterWillOverflow[1096265] coerce_tmp[1096809] coerce_tmp[1096815] 1 ret[2387143] ret[2395108] shouldHalt[1096015]))
    (1096090 return call_tmp[1096073])
  }
  function range(int(64),bounded,true)[1570523].checkIfIterWillOverflow[1571479](const in arg this[1571485]:range(int(64),bounded,true)[1570523], const in arg shouldHalt[1571491]:bool[10]) : bool[10] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    val ret[2509848]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2509850 'move' ret[2509848](2509852 '.v' this[1571485] _stride[1570495]))
    val tmp[2510222]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val coerce_tmp[2510224]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2510226 'move' coerce_tmp[2510224](2510228 '.v' this[1571485] _stride[1570495]))
    const-val call_tmp[2510231]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2510233 'move' call_tmp[2510231](2510235 '>' coerce_tmp[2510224] 0))
    if call_tmp[2510231]
    {
      val ret[2510240]:int(64)[13] "dead after last mention" "RVV" "temp"
      (2510242 'move' ret[2510240](2510244 '.v' this[1571485] _stride[1570495]))
      const-val call_tmp[2510247]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2510249]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2510251 'move' coerce_tmp[2510249](2510253 '.v' this[1571485] _alignment[1570505]))
      const-val coerce_tmp[2510256]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2510258 'move' coerce_tmp[2510256](2510260 '.v' this[1571485] _low[1570485]))
      (2510263 'move' call_tmp[2510247](2510266 call chpl__diffMod[1572034] coerce_tmp[2510249] coerce_tmp[2510256] ret[2510240]))
      const-val coerce_tmp[2510270]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2510272 'move' coerce_tmp[2510270](2510274 '.v' this[1571485] _low[1570485]))
      const-val call_tmp[2510277]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2510279 'move' call_tmp[2510277](2510281 '+' coerce_tmp[2510270] call_tmp[2510247]))
      (2510284 'move' tmp[2510222] call_tmp[2510277])
    }
    {
      val ret[2510288]:int(64)[13] "dead after last mention" "RVV" "temp"
      (2510290 'move' ret[2510288](2510292 '.v' this[1571485] _stride[1570495]))
      const-val call_tmp[2510295]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2510297]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2510299 'move' coerce_tmp[2510297](2510301 '.v' this[1571485] _high[1570490]))
      const-val coerce_tmp[2510304]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2510306 'move' coerce_tmp[2510304](2510308 '.v' this[1571485] _alignment[1570505]))
      (2510311 'move' call_tmp[2510295](2510314 call chpl__diffMod[1572034] coerce_tmp[2510297] coerce_tmp[2510304] ret[2510288]))
      const-val coerce_tmp[2510318]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2510320 'move' coerce_tmp[2510318](2510322 '.v' this[1571485] _high[1570490]))
      const-val call_tmp[2510325]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2510327 'move' call_tmp[2510325](2510329 '-' coerce_tmp[2510318] call_tmp[2510295]))
      (2510332 'move' tmp[2510222] call_tmp[2510325])
    }
    val tmp[2510594]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    val ret[2510596]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2510598 'move' ret[2510596](2510600 '.v' this[1571485] _stride[1570495]))
    const-val call_tmp[2510603]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2510605 'move' call_tmp[2510603](2510607 '>' ret[2510596] 0))
    if call_tmp[2510603]
    {
      val ret[2510612]:int(64)[13] "dead after last mention" "RVV" "temp"
      (2510614 'move' ret[2510612](2510616 '.v' this[1571485] _stride[1570495]))
      const-val call_tmp[2510619]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2510621]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2510623 'move' coerce_tmp[2510621](2510625 '.v' this[1571485] _high[1570490]))
      const-val coerce_tmp[2510628]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2510630 'move' coerce_tmp[2510628](2510632 '.v' this[1571485] _alignment[1570505]))
      (2510635 'move' call_tmp[2510619](2510638 call chpl__diffMod[1572034] coerce_tmp[2510621] coerce_tmp[2510628] ret[2510612]))
      const-val coerce_tmp[2510642]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2510644 'move' coerce_tmp[2510642](2510646 '.v' this[1571485] _high[1570490]))
      const-val call_tmp[2510649]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2510651 'move' call_tmp[2510649](2510653 '-' coerce_tmp[2510642] call_tmp[2510619]))
      (2510656 'move' tmp[2510594] call_tmp[2510649])
    }
    {
      val ret[2510660]:int(64)[13] "dead after last mention" "RVV" "temp"
      (2510662 'move' ret[2510660](2510664 '.v' this[1571485] _stride[1570495]))
      const-val call_tmp[2510667]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2510669]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2510671 'move' coerce_tmp[2510669](2510673 '.v' this[1571485] _alignment[1570505]))
      const-val coerce_tmp[2510676]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2510678 'move' coerce_tmp[2510676](2510680 '.v' this[1571485] _low[1570485]))
      (2510683 'move' call_tmp[2510667](2510686 call chpl__diffMod[1572034] coerce_tmp[2510669] coerce_tmp[2510676] ret[2510660]))
      const-val coerce_tmp[2510690]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2510692 'move' coerce_tmp[2510690](2510694 '.v' this[1571485] _low[1570485]))
      const-val call_tmp[2510697]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2510699 'move' call_tmp[2510697](2510701 '+' coerce_tmp[2510690] call_tmp[2510667]))
      (2510704 'move' tmp[2510594] call_tmp[2510697])
    }
    const-val call_tmp[1571549]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1572538]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1572542 'move' coerce_tmp[1572538](2572386 '.v' this[1571485] _low[1570485]))
    const-val coerce_tmp[1572544]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1572548 'move' coerce_tmp[1572544](2572393 '.v' this[1571485] _high[1570490]))
    (1571551 'move' call_tmp[1571549](1571554 call chpl_checkIfRangeIterWillOverflow[1096265] coerce_tmp[1572538] coerce_tmp[1572544] ret[2509848] tmp[2510222] tmp[2510594] shouldHalt[1571491]))
    (1571566 return call_tmp[1571549])
  }
  type _ic_chpl_direct_range_iter[1230573] val super[1230574]:object[22] "super class" val more[1230576]:int(64)[13] const-val F0_low[2116764]:int(64)[13] const-val F1_high[2116768]:int(64)[13] val F2__iterator[2116772]:_ic_chpl_direct_param_stride_range_iter[1103475] val F3_i[2116774]:int(64)[13] const-val F4_low[2116776]:int(64)[13] val value[2116778]:int(64)[13]
  type _ir_chpl_direct_range_iter[1230579] const-val F0_low[2116766]:int(64)[13] const-val F1_high[2116770]:int(64)[13]
  type _ic_chpl_direct_range_iter[1447793] val super[1447794]:object[22] "super class" val more[1447796]:int(64)[13] const-val F0_low[2144853]:int(64)[13] const-val F1_high[2144857]:int(64)[13] val F2__iterator[2144861]:_ic_chpl_direct_param_stride_range_iter[1447539] val F3_i[2144863]:int(64)[13] const-val F4_high[2144865]:int(64)[13] val value[2144867]:int(64)[13]
  type _ir_chpl_direct_range_iter[1447799] const-val F0_low[2144855]:int(64)[13] const-val F1_high[2144859]:int(64)[13]
  type _ic_chpl_direct_counted_range_iter[1103979] val super[1103980]:object[22] "super class" val more[1103982]:int(64)[13] const-val F0_low[2107536]:int(64)[13] const-val F1_count[2107540]:int(64)[13] val F2__iterator[2107544]:_ic_chpl_direct_counted_range_iter_helper[1103729] const F3_tmp[2107546]:2*int(64)[1040245] val F4__iterator[2107548]:_ic_chpl_direct_param_stride_range_iter[1103475] val F5_i[2107550]:int(64)[13] const-val F6_low[2107552]:int(64)[13] val value[2107554]:int(64)[13]
  type _ir_chpl_direct_counted_range_iter[1103985] const-val F0_low[2107538]:int(64)[13] const-val F1_count[2107542]:int(64)[13]
  type _ic_chpl_direct_counted_range_iter[978500] val super[978501]:object[22] "super class" val more[978503]:int(64)[13] const-val F0_low[2105687]:int(32)[95] const-val F1_count[2105691]:int(32)[95] val F2__iterator[2105695]:_ic_chpl_direct_counted_range_iter_helper[978250] const F3_tmp[2105697]:2*int(32)[971867] val F4__iterator[2105699]:_ic_chpl_direct_param_stride_range_iter[977996] val F5_i[2105701]:int(32)[95] const-val F6_low[2105703]:int(32)[95] val value[2105705]:int(32)[95]
  type _ir_chpl_direct_counted_range_iter[978506] const-val F0_low[2105689]:int(32)[95] const-val F1_count[2105693]:int(32)[95]
  type _ic_chpl_direct_counted_range_iter[1407350] val super[1407351]:object[22] "super class" val more[1407353]:int(64)[13] const-val F0_low[2109342]:int(64)[13] const-val F1_count[2109346]:uint(64)[115] val F2__iterator[2109350]:_ic_chpl_direct_counted_range_iter_helper[1407100] const F3_tmp[2109352]:2*int(64)[1040245] val F4__iterator[2109354]:_ic_chpl_direct_param_stride_range_iter[1103475] val F5_i[2109356]:int(64)[13] const-val F6_low[2109358]:int(64)[13] val value[2109360]:int(64)[13]
  type _ir_chpl_direct_counted_range_iter[1407356] const-val F0_low[2109344]:int(64)[13] const-val F1_count[2109348]:uint(64)[115]
  type _ic_chpl_direct_counted_range_iter_helper[978250] val super[978251]:object[22] "super class" val more[978253]:int(64)[13] const-val F0_low[2111028]:int(32)[95] const-val F1_count[2111032]:int(32)[95] const F2_tmp[2111036]:2*int(32)[971867] val F3__iterator[2111038]:_ic_chpl_direct_param_stride_range_iter[977996] val F4_i[2111040]:int(32)[95] const-val F5_low[2111042]:int(32)[95] val value[2111044]:int(32)[95]
  type _ir_chpl_direct_counted_range_iter_helper[978256] const-val F0_low[2111030]:int(32)[95] const-val F1_count[2111034]:int(32)[95]
  type _ic_chpl_direct_counted_range_iter_helper[1103729] val super[1103730]:object[22] "super class" val more[1103732]:int(64)[13] const-val F0_low[2113694]:int(64)[13] const-val F1_count[2113698]:int(64)[13] const F2_tmp[2113702]:2*int(64)[1040245] val F3__iterator[2113704]:_ic_chpl_direct_param_stride_range_iter[1103475] val F4_i[2113706]:int(64)[13] const-val F5_low[2113708]:int(64)[13] val value[2113710]:int(64)[13]
  type _ir_chpl_direct_counted_range_iter_helper[1103735] const-val F0_low[2113696]:int(64)[13] const-val F1_count[2113700]:int(64)[13]
  type _ic_chpl_direct_counted_range_iter_helper[1407100] val super[1407101]:object[22] "super class" val more[1407103]:int(64)[13] const-val F0_low[2143447]:int(64)[13] const-val F1_count[2143451]:uint(64)[115] const F2_tmp[2143455]:2*int(64)[1040245] val F3__iterator[2143457]:_ic_chpl_direct_param_stride_range_iter[1103475] val F4_i[2143459]:int(64)[13] const-val F5_low[2143461]:int(64)[13] val value[2143463]:int(64)[13]
  type _ir_chpl_direct_counted_range_iter_helper[1407106] const-val F0_low[2143449]:int(64)[13] const-val F1_count[2143453]:uint(64)[115]
  type _ic_chpl_direct_pos_stride_range_iter[1303186] val super[1303187]:object[22] "super class" val more[1303189]:int(64)[13] const-val F0_low[2126220]:int(64)[13] const-val F1_high[2126224]:int(64)[13] const-val F2_stride[2126228]:int(64)[13] val value[2126232]:int(64)[13]
  type _ir_chpl_direct_pos_stride_range_iter[1303192] const-val F0_low[2126222]:int(64)[13] const-val F1_high[2126226]:int(64)[13] const-val F2_stride[2126230]:int(64)[13]
  type _ic_chpl_direct_param_stride_range_iter[977996] val super[977997]:object[22] "super class" val more[977999]:int(64)[13] const-val F0_low[2112569]:int(32)[95] const-val F1_high[2112573]:int(32)[95] val value[2112577]:int(32)[95]
  type _ir_chpl_direct_param_stride_range_iter[978002] const-val F0_low[2112571]:int(32)[95] const-val F1_high[2112575]:int(32)[95]
  type _ic_chpl_direct_param_stride_range_iter[1103475] val super[1103476]:object[22] "super class" val more[1103478]:int(64)[13] const-val F0_low[2115192]:int(64)[13] const-val F1_high[2115196]:int(64)[13] val value[2115200]:int(64)[13]
  type _ir_chpl_direct_param_stride_range_iter[1103481] const-val F0_low[2115194]:int(64)[13] const-val F1_high[2115198]:int(64)[13]
  type _ic_chpl_direct_param_stride_range_iter[1447539] val super[1447540]:object[22] "super class" val more[1447542]:int(64)[13] const-val F0_low[2145725]:int(64)[13] const-val F1_high[2145729]:int(64)[13] val value[2145733]:int(64)[13]
  type _ir_chpl_direct_param_stride_range_iter[1447545] const-val F0_low[2145727]:int(64)[13] const-val F1_high[2145731]:int(64)[13]
  type _ic_these_range_int64_t_bounded_T[1573197] val super[1573198]:object[22] "super class" val more[1573200]:int(64)[13] const-val F0_this[2167399]:range(int(64),bounded,true)[1570523] val F1_i[2167403]:int(64)[13] const F2_end[2167405]:int(64)[13] const F3_start[2167407]:int(64)[13] val value[2167409]:int(64)[13]
  type _ir_these_range_int64_t_bounded_T[1573203] const-val F0_this[2167401]:range(int(64),bounded,true)[1570523]
  function _ic_these_range_int64_t_bounded_F[1096892].advance[1096918](const in arg this[1096920]:_ic_these_range_int64_t_bounded_F[1096892]) : void[4] "auto ii" "method" "resolved"
  {
    const-val more[2113562]:int(64)[13]
    (2113590 'move' more[2113562](2113587 '.v' this[1096920] more[1096895]))
    const-val tmp[2113565]:bool[10] "temp"
    (2113572 'move' tmp[2113565](2113569 '==' more[2113562] 2))
    if tmp[2113565]
    {
      gotoIterResume _jump_2[2113554] _jump_2[2113554]
    }
    const-val tmp[2113577]:bool[10] "temp"
    (2113582 'move' tmp[2113577](2113579 '==' more[2113562] -2))
    if tmp[2113577]
    {
      gotoIterResume _jump_break_2[2113556] _jump_break_2[2113556]
    }
    const-val tmp[2113083]:range(int(64),bounded,false)[1027003] "temp"
    (2113088 'move' tmp[2113083](2113085 '.v' this[1096920] F0_this[2113071]))
    (1095819 call checkIfIterWillOverflow[1096003] tmp[2113083] 1)
    (2113092 '.=' this[1096920] F1_i[2113075] 0)
    ref tmp[2113096]:range(int(64),bounded,false)[1027003] "temp"
    (2113101 'move' tmp[2113096](2113098 '.' this[1096920] F0_this[2113071]))
    val tmp[2113103]:int(64)[13] "temp"
    (1096869 'move' tmp[2113103](2566960 '.v' tmp[2113096] _low[1026965]))
    (2113105 '.=' this[1096920] F3_coerce_tmp[2113079] tmp[2113103])
    (1095845 'noop')
    ref tmp[2113116]:range(int(64),bounded,false)[1027003] "temp"
    (2113121 'move' tmp[2113116](2113118 '.' this[1096920] F0_this[2113071]))
    const-val coerce_tmp[1096875]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1096879 'move' coerce_tmp[1096875](2566966 '.v' tmp[2113116] _high[1026970]))
    (2113125 '.=' this[1096920] F2_end[2113077] coerce_tmp[1096875])
    (1095859 'noop')
    CForLoop[1095863]
    {
      const-val tmp[2113142]:int(64)[13] "temp"
      (2113147 'move' tmp[2113142](2113144 '.v' this[1096920] F1_i[2113075]))
      (2113131 '.=' this[1096920] value[2113081] tmp[2113142])
      (2113548 '.=' this[1096920] more[1096895] 2)
      gotoIterEnd _end[2113546] _end[2113546]
      label _jump_break_2[2113556]
      gotoReturn _endthese[1889519] _endthese[1889519]
      label _jump_2[2113554]
      {
        const-val tmp[2113162]:int(64)[13] "temp"
        (2113167 'move' tmp[2113162](2113164 '.v' this[1096920] F3_coerce_tmp[2113079]))
        (2113158 '.=' this[1096920] F1_i[2113075] tmp[2113162])
      }
      {
        val tmp[2113169]:int(64)[13] "temp"
        (2113174 'move' tmp[2113169](2113171 '.v' this[1096920] F1_i[2113075]))
        const tmp[2113176]:int(64)[13] "temp"
        (2113181 'move' tmp[2113176](2113178 '.v' this[1096920] F2_end[2113077]))
        (1095872 '<=' tmp[2113169] tmp[2113176])
      }
      {
        val tmp[2113183]:int(64)[13] "temp"
        (2113188 'move' tmp[2113183](2113185 '.v' this[1096920] F1_i[2113075]))
        (1095903 '+=' tmp[2113183] 1)
        (2113190 '.=' this[1096920] F1_i[2113075] tmp[2113183])
      }
    }
    label _endthese[1889519]
    (2113558 '.=' this[1096920] more[1096895] 0)
    label _end[2113546]
    (2113593 return _void[55])
  }
  type _ic_these_range_int64_t_bounded_F[1096892] val super[1096893]:object[22] "super class" val more[1096895]:int(64)[13] const-val F0_this[2113071]:range(int(64),bounded,false)[1027003] val F1_i[2113075]:int(64)[13] const F2_end[2113077]:int(64)[13] val F3_coerce_tmp[2113079]:int(64)[13] val value[2113081]:int(64)[13]
  type _ir_these_range_int64_t_bounded_F[1096898] const-val F0_this[2113073]:range(int(64),bounded,false)[1027003]
  function _cast[1054547](const in arg x[1054551]:range(byteIndex,bounded,false)[1025981], ref arg _retArg[1908892]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_1075[2577646]:string[26] "temp"
    (2577647 'move' ".." "..")
    const-val ret[1054553]:string[26] "dead after last mention" "RVV" "temp"
    val ret[1054561]:string[26] "dead at end of block" "insert auto destroy"
    (1084897 call init[30763] ret[1054561])
    const-val call_tmp[1054585]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2386435]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2386437 'move' coerce_tmp[2386435](2386439 '.v' x[1054551] _low[1025943]))
    const-val ret[2386442]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2386444]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2386447 call init[28100] cpi[2386444])
    (2386449 '.=' cpi[2386444] _bindex[28094] coerce_tmp[2386435])
    (2386453 'move' ret[2386442] cpi[2386444])
    (1908651 'move' call_tmp[1054585] ret[2386442])
    const-val call_tmp[1054593]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1908898]:string[26] "temp"
    (1054598 call _cast[1054830] call_tmp[1054585] ret_tmp[1908898])
    (1908901 'move' call_tmp[1054593] ret_tmp[1908898])
    (1054602 call +=[38800] ret[1054561] call_tmp[1054593])
    ref i_x[2247221]:string[26] "temp"
    (2247225 'move' i_x[2247221](2247223 'set reference' call_tmp[1054593]))
    (2247229 call deinit[30834] i_x[2247221])
    (1054609 call +=[38800] ret[1054561] "..")
    const-val call_tmp[1054632]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2386510]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2386512 'move' coerce_tmp[2386510](2386514 '.v' x[1054551] _high[1025948]))
    const-val ret[2386517]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2386519]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2386522 call init[28100] cpi[2386519])
    (2386524 '.=' cpi[2386519] _bindex[28094] coerce_tmp[2386510])
    (2386528 'move' ret[2386517] cpi[2386519])
    (1908687 'move' call_tmp[1054632] ret[2386517])
    const-val call_tmp[1054640]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1908904]:string[26] "temp"
    (1054645 call _cast[1054830] call_tmp[1054632] ret_tmp[1908904])
    (1908907 'move' call_tmp[1054640] ret_tmp[1908904])
    (1054649 call +=[38800] ret[1054561] call_tmp[1054640])
    ref i_x[2247233]:string[26] "temp"
    (2247237 'move' i_x[2247233](2247235 'set reference' call_tmp[1054640]))
    (2247241 call deinit[30834] i_x[2247233])
    const-val alignCheckRange[1054711]:range(byteIndex,bounded,false)[1025981] "dead at end of block" "insert auto destroy"
    (1054713 'move' alignCheckRange[1054711] x[1054551])
    (1054721 call normalizeAlignment[1083795] alignCheckRange[1054711])
    (1054803 'move' ret[1054553] ret[1054561])
    label _end__cast[1054811]
    (1908894 '=' _retArg[1908892] ret[1054553])
    (1908896 return _void[55])
  }
  function _cast[1119626](const in arg x[1119630]:range(int(64),bounded,false)[1027003], ref arg _retArg[1909990]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_1075[2578137]:string[26] "temp"
    (2578138 'move' ".." "..")
    const-val ret[1119632]:string[26] "dead after last mention" "RVV" "temp"
    val ret[1119640]:string[26] "dead at end of block" "insert auto destroy"
    (1120933 call init[30763] ret[1119640])
    const-val coerce_tmp[2385628]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2385630 'move' coerce_tmp[2385628](2385632 '.v' x[1119630] _low[1026965]))
    const-val call_tmp[1119672]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1909042]:string[26] "temp"
    (1119677 call _cast[1063342] coerce_tmp[2385628] ret_tmp[1909042])
    (1909045 'move' call_tmp[1119672] ret_tmp[1909042])
    (1119681 call +=[38800] ret[1119640] call_tmp[1119672])
    ref i_x[2247725]:string[26] "temp"
    (2247729 'move' i_x[2247725](2247727 'set reference' call_tmp[1119672]))
    (2247733 call deinit[30834] i_x[2247725])
    (1119688 call +=[38800] ret[1119640] "..")
    const-val coerce_tmp[2385878]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2385880 'move' coerce_tmp[2385878](2385882 '.v' x[1119630] _high[1026970]))
    const-val call_tmp[1119719]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1909048]:string[26] "temp"
    (1119724 call _cast[1063342] coerce_tmp[2385878] ret_tmp[1909048])
    (1909051 'move' call_tmp[1119719] ret_tmp[1909048])
    (1119728 call +=[38800] ret[1119640] call_tmp[1119719])
    ref i_x[2247737]:string[26] "temp"
    (2247741 'move' i_x[2247737](2247739 'set reference' call_tmp[1119719]))
    (2247745 call deinit[30834] i_x[2247737])
    const-val alignCheckRange[1119790]:range(int(64),bounded,false)[1027003] "dead at end of block" "insert auto destroy"
    (1119792 'move' alignCheckRange[1119790] x[1119630])
    (1119800 call normalizeAlignment[1119929] alignCheckRange[1119790])
    (1119882 'move' ret[1119632] ret[1119640])
    label _end__cast[1119890]
    (1909992 '=' _retArg[1909990] ret[1119632])
    (1909994 return _void[55])
  }
  function _cast[1136149](const in arg x[1136153]:range(int(64),boundedLow,false)[1087754], ref arg _retArg[1910278]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_1079[2578200]:string[26] "temp"
    (2578201 'move' " align " " align ")
    const-val local__str_literal_1075[2578194]:string[26] "temp"
    (2578195 'move' ".." "..")
    const-val ret[1136155]:string[26] "dead after last mention" "RVV" "temp"
    val ret[1136163]:string[26] "dead at end of block" "insert auto destroy"
    (1138987 call init[30763] ret[1136163])
    const-val coerce_tmp[2396334]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2396336 'move' coerce_tmp[2396334](2396338 '.v' x[1136153] _low[1087716]))
    const-val call_tmp[1136195]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1909060]:string[26] "temp"
    (1136200 call _cast[1063342] coerce_tmp[2396334] ret_tmp[1909060])
    (1909063 'move' call_tmp[1136195] ret_tmp[1909060])
    (1136204 call +=[38800] ret[1136163] call_tmp[1136195])
    ref i_x[2247797]:string[26] "temp"
    (2247801 'move' i_x[2247797](2247799 'set reference' call_tmp[1136195]))
    (2247805 call deinit[30834] i_x[2247797])
    (1136211 call +=[38800] ret[1136163] "..")
    const-val alignCheckRange[1136313]:range(int(64),boundedLow,false)[1087754] "dead at end of block" "insert auto destroy"
    (1136315 'move' alignCheckRange[1136313] x[1136153])
    (1136323 call normalizeAlignment[1136449] alignCheckRange[1136313])
    val ret[2396710]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2396712 'move' ret[2396710](2396714 '.v' alignCheckRange[1136313] _low[1087716]))
    const-val coerce_tmp[2396717]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2396719 'move' coerce_tmp[2396717](2396721 '.v' alignCheckRange[1136313] _low[1087716]))
    const-val call_tmp[2396724]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2396726 'move' call_tmp[2396724](2396728 '==' ret[2396710] coerce_tmp[2396717]))
    const-val call_tmp[2228400]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228402 'move' call_tmp[2228400](2228404 '!' call_tmp[2396724]))
    if call_tmp[2228400]
    {
      const-val call_tmp[1136351]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1136353 'move' call_tmp[1136351](1136356 call alignment[1128309] x[1136153]))
      const-val call_tmp[1136374]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1136376 'move' call_tmp[1136374](1136379 call chpl__mod[1137605] call_tmp[1136351] 1))
      const-val call_tmp[1136382]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1909066]:string[26] "temp"
      (1136387 call _cast[1063342] call_tmp[1136374] ret_tmp[1909066])
      (1909069 'move' call_tmp[1136382] ret_tmp[1909066])
      const-val call_tmp[1136390]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1905842]:string[26] "temp"
      (1136395 call +[38345] " align " call_tmp[1136382] ret_tmp[1905842])
      (1905845 'move' call_tmp[1136390] ret_tmp[1905842])
      (1136399 call +=[38800] ret[1136163] call_tmp[1136390])
      ref i_x[2247809]:string[26] "temp"
      (2247813 'move' i_x[2247809](2247811 'set reference' call_tmp[1136390]))
      (2247817 call deinit[30834] i_x[2247809])
      ref i_x[2247821]:string[26] "temp"
      (2247825 'move' i_x[2247821](2247823 'set reference' call_tmp[1136382]))
      (2247829 call deinit[30834] i_x[2247821])
    }
    (1136405 'move' ret[1136155] ret[1136163])
    label _end__cast[1136413]
    (1910280 '=' _retArg[1910278] ret[1136155])
    (1910282 return _void[55])
  }
  function _cast[1154613](const in arg x[1154617]:range(byteIndex,boundedLow,false)[1143592], ref arg _retArg[1910560]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_1079[2578248]:string[26] "temp"
    (2578249 'move' " align " " align ")
    const-val local__str_literal_1075[2578242]:string[26] "temp"
    (2578243 'move' ".." "..")
    const-val ret[1154619]:string[26] "dead after last mention" "RVV" "temp"
    val ret[1154627]:string[26] "dead at end of block" "insert auto destroy"
    (1156308 call init[30763] ret[1154627])
    const-val call_tmp[1154651]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2397049]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2397051 'move' coerce_tmp[2397049](2397053 '.v' x[1154617] _low[1143554]))
    const-val ret[2397056]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2397058]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2397061 call init[28100] cpi[2397058])
    (2397063 '.=' cpi[2397058] _bindex[28094] coerce_tmp[2397049])
    (2397067 'move' ret[2397056] cpi[2397058])
    (1910469 'move' call_tmp[1154651] ret[2397056])
    const-val call_tmp[1154659]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1908910]:string[26] "temp"
    (1154664 call _cast[1054830] call_tmp[1154651] ret_tmp[1908910])
    (1908913 'move' call_tmp[1154659] ret_tmp[1908910])
    (1154668 call +=[38800] ret[1154627] call_tmp[1154659])
    ref i_x[2247881]:string[26] "temp"
    (2247885 'move' i_x[2247881](2247883 'set reference' call_tmp[1154659]))
    (2247889 call deinit[30834] i_x[2247881])
    (1154675 call +=[38800] ret[1154627] "..")
    const-val alignCheckRange[1154777]:range(byteIndex,boundedLow,false)[1143592] "dead at end of block" "insert auto destroy"
    (1154779 'move' alignCheckRange[1154777] x[1154617])
    (1154787 call normalizeAlignment[1155148] alignCheckRange[1154777])
    val ret[2397220]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2397222 'move' ret[2397220](2397224 '.v' alignCheckRange[1154777] _low[1143554]))
    const-val coerce_tmp[2397227]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2397229 'move' coerce_tmp[2397227](2397231 '.v' alignCheckRange[1154777] _low[1143554]))
    const-val call_tmp[2397234]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2397236 'move' call_tmp[2397234](2397238 '==' ret[2397220] coerce_tmp[2397227]))
    const-val call_tmp[2228427]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228429 'move' call_tmp[2228427](2228431 '!' call_tmp[2397234]))
    if call_tmp[2228427]
    {
      const-val call_tmp[1154815]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1910542]:byteIndex[28173] "temp"
      (1154820 call alignment[1148427] x[1154617] ret_tmp[1910542])
      (1910545 'move' call_tmp[1154815] ret_tmp[1910542])
      val ret[2386106]:int(64)[13] "dead after last mention" "RVV" "temp"
      (2386108 'move' ret[2386106](2386110 '.v' call_tmp[1154815] _bindex[28094]))
      const-val call_tmp[1154838]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1154840 'move' call_tmp[1154838](1154843 call chpl__mod[1137605] ret[2386106] 1))
      const-val call_tmp[1154846]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1909078]:string[26] "temp"
      (1154851 call _cast[1063342] call_tmp[1154838] ret_tmp[1909078])
      (1909081 'move' call_tmp[1154846] ret_tmp[1909078])
      const-val call_tmp[1154854]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1905854]:string[26] "temp"
      (1154859 call +[38345] " align " call_tmp[1154846] ret_tmp[1905854])
      (1905857 'move' call_tmp[1154854] ret_tmp[1905854])
      (1154863 call +=[38800] ret[1154627] call_tmp[1154854])
      ref i_x[2247893]:string[26] "temp"
      (2247897 'move' i_x[2247893](2247895 'set reference' call_tmp[1154854]))
      (2247901 call deinit[30834] i_x[2247893])
      ref i_x[2247905]:string[26] "temp"
      (2247909 'move' i_x[2247905](2247907 'set reference' call_tmp[1154846]))
      (2247913 call deinit[30834] i_x[2247905])
    }
    (1154869 'move' ret[1154619] ret[1154627])
    label _end__cast[1154877]
    (1910562 '=' _retArg[1910560] ret[1154619])
    (1910564 return _void[55])
  }
  function _cast[1198820](const in arg x[1198824]:range(byteIndex,boundedHigh,false)[1185108], ref arg _retArg[1910882]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_1079[2578478]:string[26] "temp"
    (2578479 'move' " align " " align ")
    const-val local__str_literal_1075[2578472]:string[26] "temp"
    (2578473 'move' ".." "..")
    const-val ret[1198826]:string[26] "dead after last mention" "RVV" "temp"
    val ret[1198834]:string[26] "dead at end of block" "insert auto destroy"
    (1200367 call init[30763] ret[1198834])
    (1198882 call +=[38800] ret[1198834] "..")
    const-val call_tmp[1198905]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2400950]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2400952 'move' coerce_tmp[2400950](2400954 '.v' x[1198824] _high[1185075]))
    const-val ret[2400957]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2400959]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2400962 call init[28100] cpi[2400959])
    (2400964 '.=' cpi[2400959] _bindex[28094] coerce_tmp[2400950])
    (2400968 'move' ret[2400957] cpi[2400959])
    (1910821 'move' call_tmp[1198905] ret[2400957])
    const-val call_tmp[1198913]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1908916]:string[26] "temp"
    (1198918 call _cast[1054830] call_tmp[1198905] ret_tmp[1908916])
    (1908919 'move' call_tmp[1198913] ret_tmp[1908916])
    (1198922 call +=[38800] ret[1198834] call_tmp[1198913])
    ref i_x[2248277]:string[26] "temp"
    (2248281 'move' i_x[2248277](2248279 'set reference' call_tmp[1198913]))
    (2248285 call deinit[30834] i_x[2248277])
    const-val alignCheckRange[1198984]:range(byteIndex,boundedHigh,false)[1185108] "dead at end of block" "insert auto destroy"
    (1198986 'move' alignCheckRange[1198984] x[1198824])
    (1198994 call normalizeAlignment[1199355] alignCheckRange[1198984])
    const-val call_tmp[1199022]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1910864]:byteIndex[28173] "temp"
    (1199027 call alignment[1192850] x[1198824] ret_tmp[1910864])
    (1910867 'move' call_tmp[1199022] ret_tmp[1910864])
    val ret[2386178]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2386180 'move' ret[2386178](2386182 '.v' call_tmp[1199022] _bindex[28094]))
    const-val call_tmp[1199045]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1199047 'move' call_tmp[1199045](1199050 call chpl__mod[1137605] ret[2386178] 1))
    const-val call_tmp[1199053]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1909090]:string[26] "temp"
    (1199058 call _cast[1063342] call_tmp[1199045] ret_tmp[1909090])
    (1909093 'move' call_tmp[1199053] ret_tmp[1909090])
    const-val call_tmp[1199061]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905902]:string[26] "temp"
    (1199066 call +[38345] " align " call_tmp[1199053] ret_tmp[1905902])
    (1905905 'move' call_tmp[1199061] ret_tmp[1905902])
    (1199070 call +=[38800] ret[1198834] call_tmp[1199061])
    ref i_x[2248289]:string[26] "temp"
    (2248293 'move' i_x[2248289](2248291 'set reference' call_tmp[1199061]))
    (2248297 call deinit[30834] i_x[2248289])
    ref i_x[2248301]:string[26] "temp"
    (2248305 'move' i_x[2248301](2248303 'set reference' call_tmp[1199053]))
    (2248309 call deinit[30834] i_x[2248301])
    (1199076 'move' ret[1198826] ret[1198834])
    label _end__cast[1199084]
    (1910884 '=' _retArg[1910882] ret[1198826])
    (1910886 return _void[55])
  }
  function range(byteIndex,bounded,false)[1025981].normalizeAlignment[1083795](ref arg this[1083801]:range(byteIndex,bounded,false)[1025981]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    (1084081 return _void[55])
  }
  function range(int(64),bounded,false)[1027003].normalizeAlignment[1119929](ref arg this[1119935]:range(int(64),bounded,false)[1027003]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    (1120215 return _void[55])
  }
  function range(int(64),boundedLow,false)[1087754].normalizeAlignment[1136449](ref arg this[1136455]:range(int(64),boundedLow,false)[1087754]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    (1136735 return _void[55])
  }
  function range(byteIndex,boundedLow,false)[1143592].normalizeAlignment[1155148](ref arg this[1155154]:range(byteIndex,boundedLow,false)[1143592]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    (1155434 return _void[55])
  }
  function range(byteIndex,boundedHigh,false)[1185108].normalizeAlignment[1199355](ref arg this[1199361]:range(byteIndex,boundedHigh,false)[1185108]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    (1199641 return _void[55])
  }
  function chpl__mod[1137605](const in arg dividend[1137607]:int(64)[13], const in arg modulus[1137609]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_76[2578206]:string[26] "temp"
    (2578207 'move' "Attempt to compute a modulus by zero" "Attempt to compute a modulus by zero")
    val ret[1137611]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[2335796]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2335798]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2335800 'move' call_tmp[2335798](2335802 '<' modulus[1137609] 0))
    if call_tmp[2335798]
    {
      const-val call_tmp[2335807]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2335809 'move' call_tmp[2335807](2335811 'u-' modulus[1137609]))
      (2335813 'move' tmp[2335796] call_tmp[2335807])
    }
    {
      (2335817 'move' tmp[2335796] modulus[1137609])
    }
    const-val call_tmp[2335234]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2335236 'move' call_tmp[2335234](2335238 '==' tmp[2335796] 0))
    if call_tmp[2335234]
    {
      (2335244 call halt[154111] "Attempt to compute a modulus by zero")
    }
    const-val call_tmp[2335247]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2335249 'move' call_tmp[2335247](2335251 '%' dividend[1137607] tmp[2335796]))
    val tmp[1137658]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1137660 'move' tmp[1137658] call_tmp[2335247])
    const-val call_tmp[2230588]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2230590 'move' call_tmp[2230588](2230592 '<' call_tmp[2335247] 0))
    if call_tmp[2230588]
    {
      ref i_lhs[2295635]:int(64)[13] "temp"
      (2295639 'move' i_lhs[2295635](2295637 'set reference' tmp[1137658]))
      (2295642 '+=' i_lhs[2295635] tmp[2335796])
    }
    (1137707 'move' ret[1137611] tmp[1137658])
    label _end_chpl__mod[1137715]
    (1137717 return ret[1137611])
  }
  function chpl__diffMod[1572034](const in arg minuend[1572036]:int(64)[13], const in arg subtrahend[1572038]:int(64)[13], const in arg modulus[1572040]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val tmp[2335824]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2335826]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2335828 'move' call_tmp[2335826](2335830 '<' modulus[1572040] 0))
    if call_tmp[2335826]
    {
      const-val call_tmp[2335835]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2335837 'move' call_tmp[2335835](2335839 'u-' modulus[1572040]))
      (2335841 'move' tmp[2335824] call_tmp[2335835])
    }
    {
      (2335845 'move' tmp[2335824] modulus[1572040])
    }
    const-val call_tmp[1572119]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1572121 'move' call_tmp[1572119](1572124 call chpl__mod[1137605] minuend[1572036] tmp[2335824]))
    const-val call_tmp[1572133]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1572135 'move' call_tmp[1572133](1572138 call chpl__mod[1137605] subtrahend[1572038] tmp[2335824]))
    val tmp[1572149]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2244898]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2244900 'move' call_tmp[2244898](2244902 '<' call_tmp[1572119] call_tmp[1572133]))
    if call_tmp[2244898]
    {
      const-val call_tmp[2243707]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2243709 'move' call_tmp[2243707](2243711 '-' call_tmp[1572133] call_tmp[1572119]))
      const-val call_tmp[2243717]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2243719 'move' call_tmp[2243717](2243721 '-' tmp[2335824] call_tmp[2243707]))
      (1572184 'move' tmp[1572149] call_tmp[2243717])
    }
    {
      const-val call_tmp[2243727]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2243729 'move' call_tmp[2243727](2243731 '-' call_tmp[1572119] call_tmp[1572133]))
      (1572198 'move' tmp[1572149] call_tmp[2243727])
    }
    label _end_chpl__diffMod[1572225]
    (1572227 return tmp[1572149])
  }
  function chpl__add[1093561](const in arg a[1093563]:int(64)[13], const in arg b[1093568]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1093572]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2240283]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2240285 'move' call_tmp[2240283](2240287 '>' a[1093563] 0))
    val tmp[1093638]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2240283]
    {
      const-val call_tmp[2240298]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2240300 'move' call_tmp[2240298](2240302 '>' b[1093568] 0))
      (1093671 'move' tmp[1093638] call_tmp[2240298])
    }
    {
      (1093677 'move' tmp[1093638] 0)
    }
    val tmp[1093699]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[1093638]
    {
      const-val call_tmp[2342732]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2342734 'move' call_tmp[2342732](2342736 '-' 9223372036854775807 a[1093563]))
      const-val call_tmp[2240308]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2240310 'move' call_tmp[2240308](2240312 '>' b[1093568] call_tmp[2342732]))
      (1093753 'move' tmp[1093699] call_tmp[2240308])
    }
    {
      (1093759 'move' tmp[1093699] 0)
    }
    if tmp[1093699]
    {
      (1093781 'move' ret[1093572] 9223372036854775807)
      gotoReturn _end_chpl__add[1094505] _end_chpl__add[1094505]
    }
    const-val call_tmp[2230518]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2230520 'move' call_tmp[2230518](2230522 '<' a[1093563] 0))
    val tmp[1093811]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2230518]
    {
      const-val call_tmp[2230528]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2230530 'move' call_tmp[2230528](2230532 '<' b[1093568] 0))
      (1093844 'move' tmp[1093811] call_tmp[2230528])
    }
    {
      (1093850 'move' tmp[1093811] 0)
    }
    val tmp[1093872]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[1093811]
    {
      const-val call_tmp[2342702]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2342704 'move' call_tmp[2342702](2342706 '-' -9223372036854775808 a[1093563]))
      const-val call_tmp[2244768]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2244770 'move' call_tmp[2244768](2244772 '<' b[1093568] call_tmp[2342702]))
      (1093926 'move' tmp[1093872] call_tmp[2244768])
    }
    {
      (1093932 'move' tmp[1093872] 0)
    }
    if tmp[1093872]
    {
      (1093954 'move' ret[1093572] -9223372036854775808)
      gotoReturn _end_chpl__add[1094505] _end_chpl__add[1094505]
    }
    const-val call_tmp[2242166]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2242168 'move' call_tmp[2242166](2242170 '+' a[1093563] b[1093568]))
    (1094501 'move' ret[1093572] call_tmp[2242166])
    label _end_chpl__add[1094505]
    (1094507 return ret[1093572])
  }
  function chpl__addRangeStrides[1105216](const in arg start[1105218]:int(64)[13], const in arg stride[1105220]:int(64)[13], const in arg count[1105222]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[1105686]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1105688 'move' call_tmp[1105686](1105691 call mul[1105724] stride[1105220] count[1105222]))
    const-val call_tmp[1105694]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1105696 'move' call_tmp[1105694](1105699 call add[1106111] start[1105218] call_tmp[1105686]))
    (1105721 return call_tmp[1105694])
  }
  function absSameType[1091031](const in arg str[1091033]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    label _end_absSameType[1091121]
    (1091123 return 1)
  }
  function mul[1105724](const in arg a[1105726]:int(64)[13], const in arg b[1105728]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[2334888]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2334890 'move' call_tmp[2334888](2334892 '*' a[1105726] b[1105728]))
    (1105821 return call_tmp[2334888])
  }
  function add[1106111](const in arg a[1106113]:int(64)[13], const in arg b[1106115]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[2242356]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2242358 'move' call_tmp[2242356](2242360 '+' a[1106113] b[1106115]))
    (1106208 return call_tmp[2242356])
  }
}