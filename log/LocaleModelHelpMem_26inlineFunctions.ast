AST dump for LocaleModelHelpMem after pass inlineFunctions.
Module use list: ChapelStandard SysCTypes 

{
  function chpl__init_LocaleModelHelpMem[416096]() : void[4] "insert line file info" "module init" "resolved"
  {
    (524195 return _void[55])
  }
  function chpl_memhook_md_num[187773]() : int(16)[90] "extern" "local args" "no fn body" "private" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[524082]:int(16)[90] "RVV" "temp"
    (524084 return ret[524082])
  }
  function chpl_here_alloc[187788](const in arg size[187785]:int(64)[13], const in arg md[187791]:int(16)[90]) : c_void_ptr[149] "allocator" "always propagate line file info" "locale model alloc" "resolved" "fn synchronization free"
  {
    val ret[524094]:c_void_ptr[149] "dead after last mention" "RVV" "temp"
    const-val call_tmp[690733]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2217441]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2217443 'move' call_tmp[2217441](2217445 '<' size[187785] 0))
    if call_tmp[2217441]
    {
      (2217451 call safeCastCheckHalt[210235] "casting int(64) less than 0 to uint(64)")
    }
    const-val call_tmp[2217454]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2217456 'move' call_tmp[2217454](2217458 'cast' uint(64)[115] size[187785]))
    (690736 'move' call_tmp[690733] call_tmp[2217454])
    const-val call_tmp[690738]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (690741 'move' call_tmp[690738](187824 call chpl_memhook_md_num[187773]))
    const-val call_tmp[690743]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2278977]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2278979 'move' call_tmp[2278977](2278981 '+' md[187791] call_tmp[690738]))
    (690746 'move' call_tmp[690743] call_tmp[2278977])
    const-val call_tmp[690748]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (690751 'move' call_tmp[690748](187827 call chpl_mem_alloc[187801] call_tmp[690733] call_tmp[690743]))
    (981867 'move' ret[524094] call_tmp[690748])
    (524096 return ret[524094])
  }
  function chpl_here_alloc[1080551](const in arg size[1080553]:uint(64)[115], const in arg md[1080557]:int(16)[90]) : c_void_ptr[149] "allocator" "always propagate line file info" "instantiated generic" "invisible fn" "llvm return noalias" "resolved"
  {
    val ret[1080561]:c_void_ptr[149] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1080587]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (1080589 'move' call_tmp[1080587] size[1080553])
    const-val call_tmp[1080597]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (1080599 'move' call_tmp[1080597](1080602 call chpl_memhook_md_num[187773]))
    const-val call_tmp[1080603]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2278987]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2278989 'move' call_tmp[2278987](2278991 '+' md[1080557] call_tmp[1080597]))
    (1080605 'move' call_tmp[1080603] call_tmp[2278987])
    const-val call_tmp[1080611]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (1080613 'move' call_tmp[1080611](1080616 call chpl_mem_alloc[1080569] call_tmp[1080587] call_tmp[1080603]))
    (1080632 'move' ret[1080561] call_tmp[1080611])
    (1080624 return ret[1080561])
  }
  function chpl_here_calloc[1238580](const in arg size[1238582]:uint(64)[115], const in arg number[1238584]:int(64)[13], const in arg md[1238588]:int(16)[90]) : c_void_ptr[149] "allocator" "always propagate line file info" "instantiated generic" "invisible fn" "llvm return noalias" "resolved"
  {
    val ret[1238592]:c_void_ptr[149] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1238624]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2217648]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2217650 'move' call_tmp[2217648](2217652 '<' number[1238584] 0))
    if call_tmp[2217648]
    {
      (2217658 call safeCastCheckHalt[210235] "casting int(64) less than 0 to uint(64)")
    }
    const-val call_tmp[2217661]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2217663 'move' call_tmp[2217661](2217665 'cast' uint(64)[115] number[1238584]))
    (1238626 'move' call_tmp[1238624] call_tmp[2217661])
    const-val call_tmp[1238634]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (1238636 'move' call_tmp[1238634] size[1238582])
    const-val call_tmp[1238644]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (1238646 'move' call_tmp[1238644](1238649 call chpl_memhook_md_num[187773]))
    const-val call_tmp[1238650]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2278997]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2278999 'move' call_tmp[2278997](2279001 '+' md[1238588] call_tmp[1238644]))
    (1238652 'move' call_tmp[1238650] call_tmp[2278997])
    const-val call_tmp[1238658]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (1238660 'move' call_tmp[1238658](1238663 call chpl_mem_calloc[1238602] call_tmp[1238624] call_tmp[1238634] call_tmp[1238650]))
    (1238681 'move' ret[1238592] call_tmp[1238658])
    (1238672 return ret[1238592])
  }
  function chpl_here_realloc[970162](const in arg ptr[970164]:c_void_ptr[149], const in arg size[970166]:int(64)[13], const in arg md[970170]:int(16)[90]) : c_void_ptr[149] "allocator" "always propagate line file info" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[970174]:c_void_ptr[149] "dead after last mention" "RVV" "temp"
    const-val call_tmp[970202]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2217510]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2217512 'move' call_tmp[2217510](2217514 '<' size[970166] 0))
    if call_tmp[2217510]
    {
      (2217520 call safeCastCheckHalt[210235] "casting int(64) less than 0 to uint(64)")
    }
    const-val call_tmp[2217523]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2217525 'move' call_tmp[2217523](2217527 'cast' uint(64)[115] size[970166]))
    (970204 'move' call_tmp[970202] call_tmp[2217523])
    const-val call_tmp[970212]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (970214 'move' call_tmp[970212](970217 call chpl_memhook_md_num[187773]))
    const-val call_tmp[970218]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2278967]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2278969 'move' call_tmp[2278967](2278971 '+' md[970170] call_tmp[970212]))
    (970220 'move' call_tmp[970218] call_tmp[2278967])
    const-val call_tmp[970226]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (970228 'move' call_tmp[970226](970231 call chpl_mem_realloc[970182] ptr[970164] call_tmp[970202] call_tmp[970218]))
    (970256 'move' ret[970174] call_tmp[970226])
    (970240 return ret[970174])
  }
  function chpl_here_good_alloc_size[949760](const in arg min_size[949762]:int(64)[13]) : int(64)[13] "always propagate line file info" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[949767]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[949789]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2217464]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2217466 'move' call_tmp[2217464](2217468 '<' min_size[949762] 0))
    if call_tmp[2217464]
    {
      (2217474 call safeCastCheckHalt[210235] "casting int(64) less than 0 to uint(64)")
    }
    const-val call_tmp[2217477]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2217479 'move' call_tmp[2217477](2217481 'cast' uint(64)[115] min_size[949762]))
    (949791 'move' call_tmp[949789] call_tmp[2217477])
    const-val call_tmp[949799]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (949801 'move' call_tmp[949799](949804 call chpl_mem_good_alloc_size[949775] call_tmp[949789]))
    val call_tmp[949806]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[949812]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2285514]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2285516 'move' call_tmp[2285514](2285518 '>' call_tmp[949799] 9223372036854775807))
    if call_tmp[2285514]
    {
      (2285524 call safeCastCheckHalt[210235] "casting uint(64) with a value greater than the maximum of int(64) to int(64)")
    }
    const-val call_tmp[2285527]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2285529 'move' call_tmp[2285527](2285531 'cast' int(64)[13] call_tmp[949799]))
    (949814 'move' call_tmp[949812] call_tmp[2285527])
    val call_tmp[949822]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (953737 'move' ret[949767] call_tmp[949812])
    (949833 return ret[949767])
  }
  function chpl_here_free[188127](const in arg ptr[188124]:c_void_ptr[149]) : void[4] "always propagate line file info" "locale model free" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[524191]:void[4] "dead after last mention" "RVV" "temp"
    (188146 call chpl_mem_free[188136] ptr[188124])
    (524193 return ret[524191])
  }
  function chpl_mem_alloc[187801](const in arg size[187798]:uint(64)[115], const in arg md[187804]:int(16)[90]) : c_void_ptr[149] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[524088]:c_void_ptr[149] "RVV" "temp"
    (524090 return ret[524088])
  }
  function chpl_mem_free[188136](const in arg ptr[188133]:c_void_ptr[149]) : void[4] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[524185]:void[4] "RVV" "temp"
    (524187 return ret[524185])
  }
  function chpl_mem_good_alloc_size[949775](const in arg min_size[949779]:uint(64)[115]) : uint(64)[115] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[949782]:uint(64)[115] "RVV" "temp"
    (949784 return ret[949782])
  }
  function chpl_mem_realloc[970182](const in arg ptr[970184]:c_void_ptr[149], const in arg size[970188]:uint(64)[115], const in arg md[970192]:int(16)[90]) : c_void_ptr[149] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[970195]:c_void_ptr[149] "RVV" "temp"
    (970197 return ret[970195])
  }
  function chpl_mem_alloc[1080569](const in arg size[1080573]:uint(64)[115], const in arg md[1080577]:int(16)[90]) : c_void_ptr[149] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1080580]:c_void_ptr[149] "RVV" "temp"
    (1080582 return ret[1080580])
  }
  function chpl_mem_calloc[1238602](const in arg number[1238606]:uint(64)[115], const in arg size[1238610]:uint(64)[115], const in arg md[1238614]:int(16)[90]) : c_void_ptr[149] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1238617]:c_void_ptr[149] "RVV" "temp"
    (1238619 return ret[1238617])
  }
}