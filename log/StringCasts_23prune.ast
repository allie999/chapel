AST dump for StringCasts after pass prune.
Module use list: ChapelStandard SysCTypes NVStringFactory 

{
  function chpl__init_StringCasts[416084]() : void[4] "insert line file info" "module init" "resolved"
  {
    (523948 return _void[55])
  }
  function _cast[1205845](const  ref arg x[1205849]:string[26], ref arg error_out[1846183]:Error[167984]) : bool[10] throws "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[1838911]:bool[10] "temp"
    val ret[1205851]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1205859]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1863308]:string[26] "temp"
    (1205867 call strip[36095] x[1205849] " \t\r\n" 1 1 ret_tmp[1863308])
    (1863311 'move' call_tmp[1205859] ret_tmp[1863308])
    const-val str[1205868]:string[26] "dead at end of block" "insert auto destroy"
    (1205870 'move' str[1205868] call_tmp[1205859])
    const-val call_tmp[1205874]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1205876 'move' call_tmp[1205874](1205882 call isEmpty[35064] str[1205868]))
    const-val call_tmp[1205883]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1205885 'move' call_tmp[1205883] call_tmp[1205874])
    if call_tmp[1205883]
    {
      const-val call_tmp[1205892]:owned IllegalArgumentError[1064619] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      val new_temp[1206062]:IllegalArgumentError[168246] "dead after last mention" "temp"
      (1206064 'move' new_temp[1206062](1206049 call _new[1064168] "bad cast from empty string to bool"))
      const-val initTemp[1206071]:owned IllegalArgumentError[1064619] "dead after last mention" "delay instantiation" "temp"
      (1206074 call init[1064270] initTemp[1206071] new_temp[1206062])
      (1205894 'move' call_tmp[1205892] initTemp[1206071])
      val call_tmp[1205901]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1206088]:owned Error[966519] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1866940]:owned Error[966519] "temp"
      (1206090 call _cast[1064791] call_tmp[1205892] ret_tmp[1866940])
      (1866943 'move' coerce_tmp[1206088] ret_tmp[1866940])
      const-val _formal_tmp_in_err[1206267]:owned Error[966519] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1206271 'move' _formal_tmp_in_err[1206267] coerce_tmp[1206088])
      (1205903 'move' call_tmp[1205901](1205906 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1206267]))
      {
        val castedError[1846186]:Error[167984] "temp"
        (1846192 'move' castedError[1846186] call_tmp[1205901])
        (1846194 '=' error_out[1846183] castedError[1846186])
        (1881959 call chpl__autoDestroy[1562275] str[1205868])
        gotoErrorHandlingReturn _end__cast[1206000] _end__cast[1206000]
      }
    }
    {
      const-val call_tmp[1205911]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1205913 'move' call_tmp[1205911](1205916 call ==[38823] str[1205868] "true"))
      const-val call_tmp[1205919]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1205921 'move' call_tmp[1205919] call_tmp[1205911])
      if call_tmp[1205919]
      {
        (1205928 'move' ret[1205851] 1)
        (1881962 call chpl__autoDestroy[1562275] str[1205868])
        gotoReturn _end__cast[1206000] _end__cast[1206000]
      }
      {
        const-val call_tmp[1205935]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1205937 'move' call_tmp[1205935](1205940 call ==[38823] str[1205868] "false"))
        const-val call_tmp[1205943]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1205945 'move' call_tmp[1205943] call_tmp[1205935])
        if call_tmp[1205943]
        {
          (1205952 'move' ret[1205851] 0)
          (1881965 call chpl__autoDestroy[1562275] str[1205868])
          gotoReturn _end__cast[1206000] _end__cast[1206000]
        }
        {
          const-val call_tmp[1205959]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1863688]:string[26] "temp"
          (1205964 call +[38345] "bad cast from string '" x[1205849] ret_tmp[1863688])
          (1863691 'move' call_tmp[1205959] ret_tmp[1863688])
          const-val call_tmp[1205967]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1863694]:string[26] "temp"
          (1205972 call +[38345] call_tmp[1205959] "' to bool" ret_tmp[1863694])
          (1863697 'move' call_tmp[1205967] ret_tmp[1863694])
          const-val call_tmp[1205975]:owned IllegalArgumentError[1064619] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
          val new_temp[1208060]:IllegalArgumentError[168246] "dead after last mention" "temp"
          (1208062 'move' new_temp[1208060](1208047 call _new[1064168] call_tmp[1205967]))
          const-val initTemp[1208069]:owned IllegalArgumentError[1064619] "dead after last mention" "delay instantiation" "temp"
          (1208072 call init[1064270] initTemp[1208069] new_temp[1208060])
          (1205977 'move' call_tmp[1205975] initTemp[1208069])
          val call_tmp[1205984]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1208086]:owned Error[966519] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
          const-val ret_tmp[1866946]:owned Error[966519] "temp"
          (1208088 call _cast[1064791] call_tmp[1205975] ret_tmp[1866946])
          (1866949 'move' coerce_tmp[1208086] ret_tmp[1866946])
          const-val _formal_tmp_in_err[1208265]:owned Error[966519] "dead after last mention" "expr temp" "no auto destroy" "temp"
          (1208269 'move' _formal_tmp_in_err[1208265] coerce_tmp[1208086])
          (1205986 'move' call_tmp[1205984](1205989 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1208265]))
          {
            val castedError[1846199]:Error[167984] "temp"
            (1846205 'move' castedError[1846199] call_tmp[1205984])
            (1846207 '=' error_out[1846183] castedError[1846199])
            (1881968 call chpl__autoDestroy[1562275] call_tmp[1205967])
            (1881971 call chpl__autoDestroy[1562275] call_tmp[1205959])
            (1881974 call chpl__autoDestroy[1562275] str[1205868])
            gotoErrorHandlingReturn _end__cast[1206000] _end__cast[1206000]
          }
          (1881978 call chpl__autoDestroy[1562275] call_tmp[1205967])
          (1881981 call chpl__autoDestroy[1562275] call_tmp[1205959])
        }
      }
    }
    (1205996 'move' ret[1205851] 0)
    (1881984 call chpl__autoDestroy[1562275] str[1205868])
    label _end__cast[1206000]
    (1206002 return ret[1205851])
  }
  function _cast[1063214](const in arg x[1063218]:int(64)[13], ref arg _retArg[1866892]:_ref(string)[938000]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[1838824]:string[26] "temp"
    const-val ret[1063220]:string[26] "dead after last mention" "RVV" "temp"
    val isErr[1063266]:bool[10] "dead at end of block" "insert auto destroy"
    (1065587 'move' isErr[1063266] 0)
    val call_tmp[1063272]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1063279]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1063281 'move' call_tmp[1063279] x[1063218])
    val call_tmp[1063287]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1063300]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1063313]:c_string[19] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1064062]:uint(32)[110] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1064068 'move' coerce_tmp[1064062](1064064 'cast' uint(32)[110] 8))
    (1063315 'move' call_tmp[1063313](1063318 call integral_to_c_string[1063228] call_tmp[1063279] coerce_tmp[1064062] 1 isErr[1063266]))
    const-val csc[1063323]:c_string[19] "dead at end of block" "insert auto destroy"
    (1063325 'move' csc[1063323](1064071 call chpl__initCopy[21698] call_tmp[1063313]))
    const-val call_tmp[1063329]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1063331 'move' call_tmp[1063329] isErr[1063266])
    if call_tmp[1063329]
    {
      {
        val error[1844391]:Error[167984] "error variable" "temp"
        (1844406 'move' error[1844391] nil[44])
        const-val call_tmp[1063339]:owned IllegalArgumentError[1064619] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
        val new_temp[1064220]:IllegalArgumentError[168246] "dead after last mention" "temp"
        (1064222 'move' new_temp[1064220](1064113 call _new[1064168] "Unexpected case in integral_to_c_string"))
        const-val initTemp[1064251]:owned IllegalArgumentError[1064619] "dead after last mention" "delay instantiation" "temp"
        (1064254 call init[1064270] initTemp[1064251] new_temp[1064220])
        (1063341 'move' call_tmp[1063339] initTemp[1064251])
        val call_tmp[1063348]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1064733]:owned Error[966519] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
        const-val ret_tmp[1866898]:owned Error[966519] "temp"
        (1064735 call _cast[1064791] call_tmp[1063339] ret_tmp[1866898])
        (1866901 'move' coerce_tmp[1064733] ret_tmp[1866898])
        const-val _formal_tmp_in_err[1065563]:owned Error[966519] "dead after last mention" "expr temp" "no auto destroy" "temp"
        (1065567 'move' _formal_tmp_in_err[1065563] coerce_tmp[1064733])
        (1063350 'move' call_tmp[1063348](1063353 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1065563]))
        {
          val castedError[1844394]:Error[167984] "temp"
          (1844400 'move' castedError[1844394] call_tmp[1063348])
          (1844402 'move' error[1844391] castedError[1844394])
          gotoErrorHandling handler[1844392] handler[1844392]
        }
        label handler[1844392]
        const-val shouldHandleError[1844415]:bool[10] "temp"
        val errorExists[2170772]:bool[10] "temp"
        (2170777 'move' errorExists[2170772](2170774 '!=' error[1844391] nil[44]))
        (1844419 'move' shouldHandleError[1844415] errorExists[2170772])
        if shouldHandleError[1844415]
        {
          (1844412 call chpl_uncaught_error[170289] error[1844391])
        }
      }
    }
    const-val call_tmp[1063359]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    (1063361 'move' call_tmp[1063359](1063364 call strlen[1063254] csc[1063323]))
    const-val call_tmp[1063366]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1063368 'move' call_tmp[1063366](1063374 call safeCast[949838] call_tmp[1063359]))
    const-val len[1063376]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1063378 'move' len[1063376] call_tmp[1063366])
    val call_tmp[1063384]:uint(8)[100] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1063391]:c_ptr(uint(8))[937484] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1063398]:c_ptr(uint(8))[937484] "dead after last mention" "expr temp" "maybe param" "temp"
    (1063400 'move' call_tmp[1063398](1063403 call _cast[39395] csc[1063323]))
    const-val call_tmp[1063406]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1063408 'move' call_tmp[1063406](1063411 call +[949727] len[1063376]))
    const-val call_tmp[1063414]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1862744]:string[26] "temp"
    (1063419 call chpl_createStringWithOwnedBufferNV[30676] call_tmp[1063398] len[1063376] call_tmp[1063406] len[1063376] ret_tmp[1862744])
    (1862747 'move' call_tmp[1063414] ret_tmp[1862744])
    (1063428 'move' ret[1063220] call_tmp[1063414])
    gotoReturn _end__cast[1063439] _end__cast[1063439]
    label _end__cast[1063439]
    (1866894 '=' _retArg[1866892] ret[1063220])
    (1866896 return _void[55])
  }
  function _cast[1071980](const in arg x[1071984]:uint(8)[100], ref arg _retArg[1867032]:_ref(string)[938000]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[1838834]:string[26] "temp"
    const-val ret[1071986]:string[26] "dead after last mention" "RVV" "temp"
    val isErr[1072032]:bool[10] "dead at end of block" "insert auto destroy"
    (1073533 'move' isErr[1072032] 0)
    val call_tmp[1072038]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1072045]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1072047 'move' call_tmp[1072045](1072050 'cast' int(64)[13] x[1071984]))
    val call_tmp[1072053]:uint(8)[100] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1072066]:uint(8)[100] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1072079]:c_string[19] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1073275]:uint(32)[110] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1073281 'move' coerce_tmp[1073275](1073277 'cast' uint(32)[110] 1))
    (1072081 'move' call_tmp[1072079](1072084 call integral_to_c_string[1071994] call_tmp[1072045] coerce_tmp[1073275] 0 isErr[1072032]))
    const-val csc[1072089]:c_string[19] "dead at end of block" "insert auto destroy"
    (1072091 'move' csc[1072089](1073284 call chpl__initCopy[21698] call_tmp[1072079]))
    const-val call_tmp[1072095]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1072097 'move' call_tmp[1072095] isErr[1072032])
    if call_tmp[1072095]
    {
      {
        val error[1844895]:Error[167984] "error variable" "temp"
        (1844910 'move' error[1844895] nil[44])
        const-val call_tmp[1072105]:owned IllegalArgumentError[1064619] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
        val new_temp[1073304]:IllegalArgumentError[168246] "dead after last mention" "temp"
        (1073306 'move' new_temp[1073304](1073291 call _new[1064168] "Unexpected case in integral_to_c_string"))
        const-val initTemp[1073313]:owned IllegalArgumentError[1064619] "dead after last mention" "delay instantiation" "temp"
        (1073316 call init[1064270] initTemp[1073313] new_temp[1073304])
        (1072107 'move' call_tmp[1072105] initTemp[1073313])
        val call_tmp[1072114]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1073330]:owned Error[966519] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
        const-val ret_tmp[1866904]:owned Error[966519] "temp"
        (1073332 call _cast[1064791] call_tmp[1072105] ret_tmp[1866904])
        (1866907 'move' coerce_tmp[1073330] ret_tmp[1866904])
        const-val _formal_tmp_in_err[1073509]:owned Error[966519] "dead after last mention" "expr temp" "no auto destroy" "temp"
        (1073513 'move' _formal_tmp_in_err[1073509] coerce_tmp[1073330])
        (1072116 'move' call_tmp[1072114](1072119 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1073509]))
        {
          val castedError[1844898]:Error[167984] "temp"
          (1844904 'move' castedError[1844898] call_tmp[1072114])
          (1844906 'move' error[1844895] castedError[1844898])
          gotoErrorHandling handler[1844896] handler[1844896]
        }
        label handler[1844896]
        const-val shouldHandleError[1844919]:bool[10] "temp"
        val errorExists[2171004]:bool[10] "temp"
        (2171009 'move' errorExists[2171004](2171006 '!=' error[1844895] nil[44]))
        (1844923 'move' shouldHandleError[1844919] errorExists[2171004])
        if shouldHandleError[1844919]
        {
          (1844916 call chpl_uncaught_error[170289] error[1844895])
        }
      }
    }
    const-val call_tmp[1072125]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    (1072127 'move' call_tmp[1072125](1072130 call strlen[1072020] csc[1072089]))
    const-val call_tmp[1072132]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1072134 'move' call_tmp[1072132](1072140 call safeCast[949838] call_tmp[1072125]))
    const-val len[1072142]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1072144 'move' len[1072142] call_tmp[1072132])
    val call_tmp[1072150]:uint(8)[100] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1072157]:c_ptr(uint(8))[937484] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1072164]:c_ptr(uint(8))[937484] "dead after last mention" "expr temp" "maybe param" "temp"
    (1072166 'move' call_tmp[1072164](1072169 call _cast[39395] csc[1072089]))
    const-val call_tmp[1072172]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1072174 'move' call_tmp[1072172](1072177 call +[949727] len[1072142]))
    const-val call_tmp[1072180]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1862750]:string[26] "temp"
    (1072185 call chpl_createStringWithOwnedBufferNV[30676] call_tmp[1072164] len[1072142] call_tmp[1072172] len[1072142] ret_tmp[1862750])
    (1862753 'move' call_tmp[1072180] ret_tmp[1862750])
    (1072194 'move' ret[1071986] call_tmp[1072180])
    gotoReturn _end__cast[1072205] _end__cast[1072205]
    label _end__cast[1072205]
    (1867034 '=' _retArg[1867032] ret[1071986])
    (1867036 return _void[55])
  }
  function _cast[1268526](const in arg x[1268530]:uint(64)[115], ref arg _retArg[1870688]:_ref(string)[938000]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[1839047]:string[26] "temp"
    const-val ret[1268532]:string[26] "dead after last mention" "RVV" "temp"
    val isErr[1268578]:bool[10] "dead at end of block" "insert auto destroy"
    (1269498 'move' isErr[1268578] 0)
    val call_tmp[1268584]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1268591]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1268593 'move' call_tmp[1268591](1268596 call _cast[953604] x[1268530]))
    val call_tmp[1268599]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1268612]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1268625]:c_string[19] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1269240]:uint(32)[110] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1269246 'move' coerce_tmp[1269240](1269242 'cast' uint(32)[110] 8))
    (1268627 'move' call_tmp[1268625](1268630 call integral_to_c_string[1268540] call_tmp[1268591] coerce_tmp[1269240] 0 isErr[1268578]))
    const-val csc[1268635]:c_string[19] "dead at end of block" "insert auto destroy"
    (1268637 'move' csc[1268635](1269249 call chpl__initCopy[21698] call_tmp[1268625]))
    const-val call_tmp[1268641]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1268643 'move' call_tmp[1268641] isErr[1268578])
    if call_tmp[1268641]
    {
      {
        val error[1846293]:Error[167984] "error variable" "temp"
        (1846308 'move' error[1846293] nil[44])
        const-val call_tmp[1268651]:owned IllegalArgumentError[1064619] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
        val new_temp[1269269]:IllegalArgumentError[168246] "dead after last mention" "temp"
        (1269271 'move' new_temp[1269269](1269256 call _new[1064168] "Unexpected case in integral_to_c_string"))
        const-val initTemp[1269278]:owned IllegalArgumentError[1064619] "dead after last mention" "delay instantiation" "temp"
        (1269281 call init[1064270] initTemp[1269278] new_temp[1269269])
        (1268653 'move' call_tmp[1268651] initTemp[1269278])
        val call_tmp[1268660]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1269295]:owned Error[966519] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
        const-val ret_tmp[1866952]:owned Error[966519] "temp"
        (1269297 call _cast[1064791] call_tmp[1268651] ret_tmp[1866952])
        (1866955 'move' coerce_tmp[1269295] ret_tmp[1866952])
        const-val _formal_tmp_in_err[1269474]:owned Error[966519] "dead after last mention" "expr temp" "no auto destroy" "temp"
        (1269478 'move' _formal_tmp_in_err[1269474] coerce_tmp[1269295])
        (1268662 'move' call_tmp[1268660](1268665 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1269474]))
        {
          val castedError[1846296]:Error[167984] "temp"
          (1846302 'move' castedError[1846296] call_tmp[1268660])
          (1846304 'move' error[1846293] castedError[1846296])
          gotoErrorHandling handler[1846294] handler[1846294]
        }
        label handler[1846294]
        const-val shouldHandleError[1846317]:bool[10] "temp"
        val errorExists[2171724]:bool[10] "temp"
        (2171729 'move' errorExists[2171724](2171726 '!=' error[1846293] nil[44]))
        (1846321 'move' shouldHandleError[1846317] errorExists[2171724])
        if shouldHandleError[1846317]
        {
          (1846314 call chpl_uncaught_error[170289] error[1846293])
        }
      }
    }
    const-val call_tmp[1268671]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    (1268673 'move' call_tmp[1268671](1268676 call strlen[1268566] csc[1268635]))
    const-val call_tmp[1268678]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1268680 'move' call_tmp[1268678](1268686 call safeCast[949838] call_tmp[1268671]))
    const-val len[1268688]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1268690 'move' len[1268688] call_tmp[1268678])
    val call_tmp[1268696]:uint(8)[100] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1268703]:c_ptr(uint(8))[937484] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1268710]:c_ptr(uint(8))[937484] "dead after last mention" "expr temp" "maybe param" "temp"
    (1268712 'move' call_tmp[1268710](1268715 call _cast[39395] csc[1268635]))
    const-val call_tmp[1268718]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1268720 'move' call_tmp[1268718](1268723 call +[949727] len[1268688]))
    const-val call_tmp[1268726]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1862786]:string[26] "temp"
    (1268731 call chpl_createStringWithOwnedBufferNV[30676] call_tmp[1268710] len[1268688] call_tmp[1268718] len[1268688] ret_tmp[1862786])
    (1862789 'move' call_tmp[1268726] ret_tmp[1862786])
    (1268740 'move' ret[1268532] call_tmp[1268726])
    gotoReturn _end__cast[1268751] _end__cast[1268751]
    label _end__cast[1268751]
    (1870690 '=' _retArg[1870688] ret[1268532])
    (1870692 return _void[55])
  }
  function _cast[1024630](const  ref arg x[1024634]:string[26], ref arg error_out[1843910]:Error[167984]) : int(64)[13] throws "inline" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[1838790]:int(64)[13] "temp"
    val ret[1024636]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val retVal[1024772]:int(64)[13] "dead at end of block" "insert auto destroy" "split inited"
    val isErr[1024778]:bool[10] "dead at end of block" "insert auto destroy"
    (1205535 'move' isErr[1024778] 0)
    const-val call_tmp[1024784]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1863046]:string[26] "temp"
    (1024792 call localize[32889] x[1024634] ret_tmp[1863046])
    (1863049 'move' call_tmp[1024784] ret_tmp[1863046])
    val localX[1024793]:string[26] "dead at end of block" "insert auto destroy"
    (1024795 'move' localX[1024793] call_tmp[1024784])
    const-val call_tmp[1024799]:byteIndex[28173] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val default_arg_region[1030100]:range(byteIndex,bounded,false)[1025853] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret_tmp[1866288]:range(byteIndex,bounded,false)[1025853] "temp"
    (1030102 call find_default_region[1030059] localX[1024793] ret_tmp[1866288])
    (1866291 'move' default_arg_region[1030100] ret_tmp[1866288])
    const-val ret_tmp[1866216]:byteIndex[28173] "temp"
    (1024807 call find[1025648] localX[1024793] "_" default_arg_region[1030100] ret_tmp[1866216])
    (1866219 'move' call_tmp[1024799] ret_tmp[1866216])
    const-val call_tmp[1024816]:bool[10] "dead at end of block" "maybe param" "temp"
    (1024818 'move' call_tmp[1024816](1024821 call !=[29619] call_tmp[1024799] -1))
    const-val hasUnderscores[1024824]:bool[10] "dead at end of block" "const" "insert auto destroy"
    (1024826 'move' hasUnderscores[1024824] call_tmp[1024816])
    const-val call_tmp[1024831]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1024833 'move' call_tmp[1024831] hasUnderscores[1024824])
    if call_tmp[1024831]
    {
      const-val call_tmp[1024840]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1863302]:string[26] "temp"
      (1024848 call strip[36095] localX[1024793] " \t\r\n" 1 1 ret_tmp[1863302])
      (1863305 'move' call_tmp[1024840] ret_tmp[1863302])
      (1024850 call =[38272] localX[1024793] call_tmp[1024840])
      (1877609 call chpl__autoDestroy[1562275] call_tmp[1024840])
      val numElements[1024856]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1205538 'move' numElements[1024856] 0)
      {
        val _indexOfInterest[1024863]:string[26] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1024865]:_ic_split__ref_string[1156565] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[1024867]:_ir_split__ref_string[1156571] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1863286]:_ir_split__ref_string[1156571] "temp"
        (1024875 call split[35486] localX[1024793] -1 ret_tmp[1863286])
        (1863289 'move' call_tmp[1024867] ret_tmp[1863286])
        (1024876 'move' _iterator[1024865](1024879 call _getIterator[1156580] call_tmp[1024867]))
        {
          val ret[1945001]:_ir_split__ref_string[1156571] "dead after last mention" "RVV" "temp"
          const-val call_tmp[1945003]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          ref this[1948188]:_ref(string)[938000] "temp"
          (1948193 'move' this[1948188](1948190 '.v' _iterator[1024865] F0_this[2049002]))
          (1945005 'move' call_tmp[1945003](1945008 call isASCII[31049] this[1948188]))
          const-val call_tmp[1945010]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1945012 'move' call_tmp[1945010] call_tmp[1945003])
          if call_tmp[1945003]
          {
            val _indexOfInterest[1945017]:string[26] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1945019]:_ic_doSplitWSNoEnc[1124536] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[1945021]:_ir_doSplitWSNoEnc[1124542] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[1945023]:_ir_doSplitWSNoEnc[1124542] "temp"
            ref this[1948195]:_ref(string)[938000] "temp"
            (1948200 'move' this[1948195](1948197 '.v' _iterator[1024865] F0_this[2049002]))
            const-val maxsplit[1948202]:int(64)[13] "temp"
            (1948207 'move' maxsplit[1948202](1948204 '.v' _iterator[1024865] F1_maxsplit[2049006]))
            (1945026 call doSplitWSNoEnc[1124517] this[1948195] maxsplit[1948202] ret_tmp[1945023])
            (1945030 'move' call_tmp[1945021] ret_tmp[1945023])
            (1945033 'move' _iterator[1945019](1945036 call _getIterator[1124551] call_tmp[1945021]))
            {
              val ret[1945039]:_ir_doSplitWSNoEnc[1124542] "dead at end of block" "RVV" "temp"
              val call_tmp[1945041]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[1945043]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              ref x[1945045]:_ref(string)[938000] "temp"
              (1945047 'move' x[1945045](1945049 '.v' _iterator[1945019] F0_x[2066264]))
              (1945052 'move' call_tmp[1945043](1945055 call isEmpty[35064] x[1945045]))
              const-val call_tmp[1945057]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1945059 'move' call_tmp[1945057](1945062 call ![7494] call_tmp[1945043]))
              const-val call_tmp[1945064]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1945066 'move' call_tmp[1945064] call_tmp[1945057])
              if call_tmp[1945057]
              {
                const-val call_tmp[1945071]:string[26] "dead at end of block" "maybe param" "temp"
                const-val ret_tmp[1945073]:string[26] "temp"
                ref x[1945075]:_ref(string)[938000] "temp"
                (1945077 'move' x[1945075](1945079 '.v' _iterator[1945019] F0_x[2066264]))
                (1945083 call localize[32889] x[1945075] ret_tmp[1945073])
                (1945086 'move' call_tmp[1945071] ret_tmp[1945073])
                val call_tmp[1945089]:string[26] "dead after last mention" "maybe param" "temp" "type variable"
                const localx[1945091]:string[26] "dead at end of block" "const" "insert auto destroy"
                (1945093 'move' localx[1945091] call_tmp[1945071])
                val done[1945096]:bool[10] "dead at end of block" "insert auto destroy"
                (1945098 'move' done[1945096] 0)
                val yieldChunk[1945101]:bool[10] "dead at end of block" "insert auto destroy"
                (1945103 'move' yieldChunk[1945101] 0)
                val chunk[1945106]:string[26] "dead at end of block" "insert auto destroy"
                val call_tmp[1945108]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1945111 call init[30763] chunk[1945106])
                const-val call_tmp[1945113]:bool[10] "dead at end of block" "maybe param" "temp"
                const-val maxsplit[1945115]:int(64)[13] "temp"
                (1945117 'move' maxsplit[1945115](1945119 '.v' _iterator[1945019] F1_maxsplit[2066268]))
                (1945122 'move' call_tmp[1945113](1945125 call ==[435671] maxsplit[1945115] 0))
                const-val noSplits[1945128]:bool[10] "dead at end of block" "const" "insert auto destroy"
                (1945130 'move' noSplits[1945128] call_tmp[1945113])
                const-val call_tmp[1945133]:bool[10] "dead at end of block" "maybe param" "temp"
                const-val maxsplit[1945135]:int(64)[13] "temp"
                (1945137 'move' maxsplit[1945135](1945139 '.v' _iterator[1945019] F1_maxsplit[2066268]))
                (1945142 'move' call_tmp[1945133](1945145 call >[437715] maxsplit[1945135] 0))
                const-val limitSplits[1945148]:bool[10] "dead at end of block" "const" "insert auto destroy"
                (1945150 'move' limitSplits[1945148] call_tmp[1945133])
                val splitCount[1945153]:int(64)[13] "dead at end of block" "insert auto destroy"
                (1945155 'move' splitCount[1945153] 0)
                ref call_tmp[1945158]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1945160 'move' call_tmp[1945158](1945163 call buffLen[757947] localx[1945091]))
                const-val call_tmp[1945165]:int(64)[13] "dead at end of block" "maybe param" "temp"
                const-val coerce_tmp[1945167]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1945169 'move' coerce_tmp[1945167](1945171 'deref' call_tmp[1945158]))
                (1945173 'move' call_tmp[1945165](1945176 call -[1125499] coerce_tmp[1945167]))
                const-val iEnd[1945178]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                (1945180 'move' iEnd[1945178] call_tmp[1945165])
                val inChunk[1945183]:bool[10] "dead at end of block" "insert auto destroy"
                (1945185 'move' inChunk[1945183] 0)
                val chunkStart[1945188]:int(64)[13] "dead at end of block" "insert auto destroy"
                (1945190 'move' chunkStart[1945188] 0)
                const-val _iterator[1945195]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108627] "dead at end of block" "expr temp" "insert auto destroy" "temp"
                const-val call_tmp[1945197]:range(int(64),bounded,false)[1026875] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1945199]:range(int(64),bounded,false)[1026875] "temp"
                ref x[1945201]:_ref(string)[938000] "temp"
                (1945203 'move' x[1945201](1945205 '.v' _iterator[1945019] F0_x[2066264]))
                (1945209 call indices[32788] x[1945201] ret_tmp[1945199])
                (1945212 'move' call_tmp[1945197] ret_tmp[1945199])
                val call_tmp[1945215]:_ic_these_range_int64_t_bounded_F[1096764] "dead at end of block" "expr temp" "maybe param" "temp"
                (1945217 'move' call_tmp[1945215](1945220 call _getIterator[1095381] call_tmp[1945197]))
                const-val call_tmp[1945222]:_ir_chpl_bytes__ref_string[1108323] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[1945224]:_ir_chpl_bytes__ref_string[1108323] "temp"
                (1945227 call chpl_bytes[33577] localx[1945091] ret_tmp[1945224])
                (1945230 'move' call_tmp[1945222] ret_tmp[1945224])
                val call_tmp[1945233]:_ic_chpl_bytes__ref_string[1108317] "dead at end of block" "expr temp" "maybe param" "temp"
                (1945235 'move' call_tmp[1945233](1945238 call _getIterator[1108332] call_tmp[1945222]))
                const-val ret_tmp[1945240]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108627] "temp"
                (1945243 call _build_tuple[1108585] call_tmp[1945215] call_tmp[1945233] ret_tmp[1945240])
                (1945247 'move' _iterator[1945195] ret_tmp[1945240])
                val _iterator[2014107]:_ic_these_range_int64_t_bounded_F[1096764] "temp"
                (2014113 'move' _iterator[2014107](2014110 '.v' _iterator[1945195] x0[1108623]))
                val _iterator[2014120]:_ic_chpl_bytes__ref_string[1108317] "temp"
                (2014126 'move' _iterator[2014120](2014123 '.v' _iterator[1945195] x1[1108625]))
                {
                  (2014135 call zip1[1096799] _iterator[2014107])
                }
                {
                  (2014170 call zip1[1108352] _iterator[2014120])
                }
                const-val isFinished[2014196]:bool[10] "temp"
                val hasMore[2014195]:bool[10] "temp"
                CForLoop[2014243]
                {
                  val _indexOfInterest[2014244]:(int(64),uint(8))[1111101] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                  {
                    (2014248 call zip2[1108361] _iterator[2014120])
                  }
                  {
                    const-val retTmp[2014251]:int(64)[13] "temp"
                    (2014253 'move' retTmp[2014251](2014256 call hasMore[1108388] _iterator[2014120]))
                    (2014258 'move' hasMore[2014195](2014260 'cast' bool[10] retTmp[2014251]))
                  }
                  (2014263 'move' isFinished[2014196](2014265 '!' hasMore[2014195]))
                  if isFinished[2014196]
                  {
                    (2014269 'chpl_error' c"zippered iterations have non-equal lengths")
                  }
                  {
                    (2014273 'move' _index[2014288](2014276 call getValue[1108397] _iterator[2014120]))
                  }
                  {
                    (2014280 call zip2[1096808] _iterator[2014107])
                  }
                  {
                    (2014283 'move' _index[2014294](2014286 call getValue[1096844] _iterator[2014107]))
                  }
                  val _index[2014288]:uint(8)[100] "temp"
                  (2014290 '.=' _indexOfInterest[2014244] x1[1111099] _index[2014288])
                  val _index[2014294]:int(64)[13] "temp"
                  (2014296 '.=' _indexOfInterest[2014244] x0[1111097] _index[2014294])
                  1
                  const-val i[2014301]:int(64)[13] "const" "index var" "insert auto destroy"
                  (2014303 'move' i[2014301](2014305 '.v' _indexOfInterest[2014244] x0[1111097]))
                  const-val c[2014308]:uint(8)[100] "const" "index var" "insert auto destroy"
                  (2014310 'move' c[2014308](2014312 '.v' _indexOfInterest[2014244] x1[1111099]))
                  const-val call_tmp[2014315]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2014317 'move' call_tmp[2014315] noSplits[1945128])
                  if noSplits[1945128]
                  {
                    (2014323 call =[435217] done[1945096] 1)
                    const-val call_tmp[2014326]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2014328 'move' call_tmp[2014326](2014331 call isSpace[36843] localx[1945091]))
                    const-val call_tmp[2014333]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2014335 'move' call_tmp[2014333](2014338 call ![7494] call_tmp[2014326]))
                    const-val call_tmp[2014340]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2014342 'move' call_tmp[2014340] call_tmp[2014333])
                    if call_tmp[2014333]
                    {
                      (2014348 call =[38272] chunk[1945106] localx[1945091])
                      (2014352 call =[435217] yieldChunk[1945101] 1)
                    }
                  }
                  {
                    const-val call_tmp[2014357]:bool[10] "dead at end of block" "maybe param" "temp"
                    (2014359 'move' call_tmp[2014357](2014362 call byte_isWhitespace[181655] c[2014308]))
                    const-val cSpace[2014364]:bool[10] "dead at end of block" "insert auto destroy"
                    (2014366 'move' cSpace[2014364] call_tmp[2014357])
                    const-val tmp[2014369]:bool[10] "dead after last mention" "maybe param" "temp"
                    (2014371 'move' tmp[2014369] inChunk[1945183])
                    val tmp[2014374]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                    const-val tmp[2014376]:bool[10] "dead after last mention" "maybe param" "temp"
                    const-val call_tmp[2014378]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2014380 'move' call_tmp[2014378] inChunk[1945183])
                    (2014383 'move' tmp[2014376] inChunk[1945183])
                    if inChunk[1945183]
                    {
                      (2014388 'move' tmp[2014374] 1)
                    }
                    {
                      const-val tmp[2014392]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                      (2014394 'move' tmp[2014392] cSpace[2014364])
                      (2014397 'move' tmp[2014374] cSpace[2014364])
                    }
                    const-val call_tmp[2014401]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2014403 'move' call_tmp[2014401](2014406 call ![7494] tmp[2014374]))
                    const-val call_tmp[2014408]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2014410 'move' call_tmp[2014408] call_tmp[2014401])
                    if call_tmp[2014401]
                    {
                      (2014416 call =[435370] chunkStart[1945188] i[2014301])
                      (2014420 call =[435217] inChunk[1945183] 1)
                      const-val call_tmp[2014423]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (2014425 'move' call_tmp[2014423](2014428 call >[437715] i[2014301] iEnd[1945178]))
                      const-val call_tmp[2014431]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (2014433 'move' call_tmp[2014431] call_tmp[2014423])
                      if call_tmp[2014423]
                      {
                        const-val call_tmp[2014438]:range(int(64),boundedLow,false)[1087626] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val ret_tmp[2014440]:range(int(64),boundedLow,false)[1087626] "temp"
                        (2014443 call chpl_build_low_bounded_range[1087019] chunkStart[1945188] ret_tmp[2014440])
                        (2014446 'move' call_tmp[2014438] ret_tmp[2014440])
                        const-val call_tmp[2014449]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val ret_tmp[2014451]:string[26] "temp"
                        (2014454 call this[1125623] localx[1945091] call_tmp[2014438] ret_tmp[2014451])
                        (2014458 'move' call_tmp[2014449] ret_tmp[2014451])
                        (2014462 call =[38272] chunk[1945106] call_tmp[2014449])
                        (2014466 call chpl__autoDestroy[1562275] call_tmp[2014449])
                        (2014469 call chpl__autoDestroy[1641507] call_tmp[2014438])
                        (2014472 call =[435217] yieldChunk[1945101] 1)
                        (2014476 call =[435217] done[1945096] 1)
                      }
                    }
                    {
                      const-val call_tmp[2014481]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (2014483 'move' call_tmp[2014481] inChunk[1945183])
                      if call_tmp[2014481]
                      {
                        const-val call_tmp[2014488]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (2014490 'move' call_tmp[2014488] cSpace[2014364])
                        if cSpace[2014364]
                        {
                          (2014496 call +=[451358] splitCount[1945153] 1)
                          const-val tmp[2014499]:bool[10] "dead after last mention" "maybe param" "temp"
                          (2014501 'move' tmp[2014499] limitSplits[1945148])
                          val tmp[2014504]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                          const-val tmp[2014506]:bool[10] "dead after last mention" "maybe param" "temp"
                          const-val call_tmp[2014508]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (2014510 'move' call_tmp[2014508] limitSplits[1945148])
                          (2014513 'move' tmp[2014506] limitSplits[1945148])
                          if limitSplits[1945148]
                          {
                            const-val tmp[2014518]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                            const-val call_tmp[2014520]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val maxsplit[2014522]:int(64)[13] "temp"
                            (2014524 'move' maxsplit[2014522](2014526 '.v' _iterator[1945019] F1_maxsplit[2066268]))
                            (2014529 'move' call_tmp[2014520](2014532 call >[437715] splitCount[1945153] maxsplit[2014522]))
                            (2014535 'move' tmp[2014518] call_tmp[2014520])
                            (2014538 'move' tmp[2014504] call_tmp[2014520])
                          }
                          {
                            (2014542 'move' tmp[2014504] 0)
                          }
                          const-val call_tmp[2014546]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (2014548 'move' call_tmp[2014546] tmp[2014504])
                          if tmp[2014504]
                          {
                            const-val call_tmp[2014553]:range(int(64),boundedLow,false)[1087626] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[2014555]:range(int(64),boundedLow,false)[1087626] "temp"
                            (2014558 call chpl_build_low_bounded_range[1087019] chunkStart[1945188] ret_tmp[2014555])
                            (2014561 'move' call_tmp[2014553] ret_tmp[2014555])
                            const-val call_tmp[2014564]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[2014566]:string[26] "temp"
                            (2014569 call this[1125623] localx[1945091] call_tmp[2014553] ret_tmp[2014566])
                            (2014573 'move' call_tmp[2014564] ret_tmp[2014566])
                            (2014577 call =[38272] chunk[1945106] call_tmp[2014564])
                            (2014581 call chpl__autoDestroy[1562275] call_tmp[2014564])
                            (2014584 call chpl__autoDestroy[1641507] call_tmp[2014553])
                            (2014587 call =[435217] yieldChunk[1945101] 1)
                            (2014591 call =[435217] done[1945096] 1)
                          }
                          {
                            const-val call_tmp[2014595]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                            (2014597 'move' call_tmp[2014595](2014600 call -[962287] i[2014301]))
                            const-val call_tmp[2014602]:range(int(64),bounded,false)[1026875] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[2014604]:range(int(64),bounded,false)[1026875] "temp"
                            (2014607 call chpl_build_bounded_range[455180] chunkStart[1945188] call_tmp[2014595] ret_tmp[2014604])
                            (2014611 'move' call_tmp[2014602] ret_tmp[2014604])
                            const-val call_tmp[2014614]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[2014616]:string[26] "temp"
                            (2014619 call this[1111427] localx[1945091] call_tmp[2014602] ret_tmp[2014616])
                            (2014623 'move' call_tmp[2014614] ret_tmp[2014616])
                            (2014627 call =[38272] chunk[1945106] call_tmp[2014614])
                            (2014631 call chpl__autoDestroy[1562275] call_tmp[2014614])
                            (2014634 call chpl__autoDestroy[1383553] call_tmp[2014602])
                            (2014637 call =[435217] yieldChunk[1945101] 1)
                            (2014641 call =[435217] inChunk[1945183] 0)
                          }
                        }
                        {
                          const-val call_tmp[2014646]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (2014648 'move' call_tmp[2014646](2014651 call >[437715] i[2014301] iEnd[1945178]))
                          const-val call_tmp[2014654]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (2014656 'move' call_tmp[2014654] call_tmp[2014646])
                          if call_tmp[2014646]
                          {
                            const-val call_tmp[2014661]:range(int(64),boundedLow,false)[1087626] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[2014663]:range(int(64),boundedLow,false)[1087626] "temp"
                            (2014666 call chpl_build_low_bounded_range[1087019] chunkStart[1945188] ret_tmp[2014663])
                            (2014669 'move' call_tmp[2014661] ret_tmp[2014663])
                            const-val call_tmp[2014672]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[2014674]:string[26] "temp"
                            (2014677 call this[1125623] localx[1945091] call_tmp[2014661] ret_tmp[2014674])
                            (2014681 'move' call_tmp[2014672] ret_tmp[2014674])
                            (2014685 call =[38272] chunk[1945106] call_tmp[2014672])
                            (2014689 call chpl__autoDestroy[1562275] call_tmp[2014672])
                            (2014692 call chpl__autoDestroy[1641507] call_tmp[2014661])
                            (2014695 call =[435217] yieldChunk[1945101] 1)
                            (2014699 call =[435217] done[1945096] 1)
                          }
                        }
                      }
                    }
                  }
                  const-val call_tmp[2014707]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2014709 'move' call_tmp[2014707] yieldChunk[1945101])
                  if call_tmp[2014707]
                  {
                    const-val yret[2014714]:string[26] "dead after last mention" "YVV" "temp"
                    val call_tmp[2014716]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    const-val _yield_expr_tmp_[2014718]:string[26] "temp"
                    (2014720 'move' _yield_expr_tmp_[2014718](2014723 call chpl__initCopy[981409] chunk[1945106]))
                    (2014725 'move' yret[2014714] _yield_expr_tmp_[2014718])
                    const-val _yieldedIndex[2014728]:string[26] "temp"
                    (2014730 'move' _yieldedIndex[2014728] _yield_expr_tmp_[2014718])
                    {
                      const-val s[2014734]:string[26] "const" "index var" "insert auto destroy"
                      (2014736 'move' s[2014734] _yieldedIndex[2014728])
                      const-val yret[2014739]:string[26] "dead after last mention" "YVV" "temp"
                      const-val _yield_expr_tmp_[2014741]:string[26] "temp"
                      (2014743 'move' _yield_expr_tmp_[2014741](2014746 call chpl__initCopy[981409] s[2014734]))
                      (2014748 'move' yret[2014739] _yield_expr_tmp_[2014741])
                      const-val _yieldedIndex[2014751]:string[26] "temp"
                      (2014753 'move' _yieldedIndex[2014751] _yield_expr_tmp_[2014741])
                      {
                        const-val chpl__elidedIdx[2014757]:string[26] "const" "index var" "insert auto destroy"
                        (2014759 'move' chpl__elidedIdx[2014757] _yieldedIndex[2014751])
                        {
                          (2014764 call +=[451358] numElements[1024856] 1)
                          const-val call_tmp[2014767]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (2014769 'move' call_tmp[2014767](2014772 call >[437715] numElements[1024856] 1))
                          const-val call_tmp[2014775]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (2014777 'move' call_tmp[2014775] call_tmp[2014767])
                          if call_tmp[2014775]
                          {
                            (2014783 call chpl__autoDestroy[1562275] chpl__elidedIdx[2014757])
                            ref moreRef1[2014890]:_ref(int(64))[936633] "temp"
                            (2014892 'move' moreRef1[2014890](2014894 '.' _iterator[2014107] more[1096767]))
                            const-val moreVal1[2014897]:int(64)[13] "const" "temp"
                            (2014899 '=' moreVal1[2014897] moreRef1[2014890])
                            const-val moreValNeg1[2014902]:int(64)[13] "const" "temp"
                            (2014904 'move' moreValNeg1[2014902](2014906 'u-' moreVal1[2014897]))
                            (2014908 '=' moreRef1[2014890] moreValNeg1[2014902])
                            (2014912 call advance[1096790] _iterator[2014107])
                            ref moreRef2[2014914]:_ref(int(64))[936633] "temp"
                            (2014916 'move' moreRef2[2014914](2014918 '.' _iterator[2014120] more[1108320]))
                            const-val moreVal2[2014921]:int(64)[13] "const" "temp"
                            (2014923 '=' moreVal2[2014921] moreRef2[2014914])
                            const-val moreValNeg2[2014926]:int(64)[13] "const" "temp"
                            (2014928 'move' moreValNeg2[2014926](2014930 'u-' moreVal2[2014921]))
                            (2014932 '=' moreRef2[2014914] moreValNeg2[2014926])
                            (2014936 call advance[1108343] _iterator[2014120])
                            (2014786 call _freeIterator[1108785] _iterator[1945195])
                            (2014789 call chpl__autoDestroy[1642180] _iterator[1945195])
                            (2014792 call chpl__autoDestroy[1383553] call_tmp[1945197])
                            (2014795 call chpl__autoDestroy[1562275] chunk[1945106])
                            (2014798 call chpl__autoDestroy[1562275] localx[1945091])
                            (2014801 call chpl__autoDestroy[1562275] s[2014734])
                            (2014804 call _freeIterator[1142636] _iterator[1945019])
                            break _breakLabel[1024932] _breakLabel[1024932]
                          }
                        }
                        label _continueLabel[2014809]
                        (2014812 call chpl__autoDestroy[1562275] chpl__elidedIdx[2014757])
                      }
                      (2014815 call chpl__autoDestroy[1562275] s[2014734])
                    }
                    (2014818 call =[435217] yieldChunk[1945101] 0)
                  }
                  const-val call_tmp[2014822]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2014824 'move' call_tmp[2014822] done[1945096])
                  if call_tmp[2014822]
                  {
                    ref moreRef1[2014939]:_ref(int(64))[936633] "temp"
                    (2014941 'move' moreRef1[2014939](2014943 '.' _iterator[2014107] more[1096767]))
                    const-val moreVal1[2014946]:int(64)[13] "const" "temp"
                    (2014948 '=' moreVal1[2014946] moreRef1[2014939])
                    const-val moreValNeg1[2014951]:int(64)[13] "const" "temp"
                    (2014953 'move' moreValNeg1[2014951](2014955 'u-' moreVal1[2014946]))
                    (2014957 '=' moreRef1[2014939] moreValNeg1[2014951])
                    (2014961 call advance[1096790] _iterator[2014107])
                    ref moreRef2[2014963]:_ref(int(64))[936633] "temp"
                    (2014965 'move' moreRef2[2014963](2014967 '.' _iterator[2014120] more[1108320]))
                    const-val moreVal2[2014970]:int(64)[13] "const" "temp"
                    (2014972 '=' moreVal2[2014970] moreRef2[2014963])
                    const-val moreValNeg2[2014975]:int(64)[13] "const" "temp"
                    (2014977 'move' moreValNeg2[2014975](2014979 'u-' moreVal2[2014970]))
                    (2014981 '=' moreRef2[2014963] moreValNeg2[2014975])
                    (2014985 call advance[1108343] _iterator[2014120])
                    break _breakLabel[1945750] _breakLabel[1945750]
                  }
                  {
                    (2014834 call zip3[1096817] _iterator[2014107])
                  }
                  {
                    (2014838 call zip3[1108370] _iterator[2014120])
                  }
                  {
                    {
                      (2014145 call init[1096853] _iterator[2014107])
                    }
                    {
                      (2014180 call init[1108406] _iterator[2014120])
                    }
                  }
                  {
                    (2014161 call hasMore[1096835] _iterator[2014107])
                  }
                  {
                    {
                      (2014149 call incr[1096862] _iterator[2014107])
                    }
                    {
                      (2014184 call incr[1108415] _iterator[2014120])
                    }
                  }
                }
                {
                  const-val retTmp[2014230]:int(64)[13] "temp"
                  (2014232 'move' retTmp[2014230](2014227 call hasMore[1108388] _iterator[2014120]))
                  (2014237 'move' hasMore[2014195](2014234 'cast' bool[10] retTmp[2014230]))
                }
                if hasMore[2014195]
                {
                  (2014222 'chpl_error' c"zippered iterations have non-equal lengths")
                }
                {
                  (2014192 call zip4[1108379] _iterator[2014120])
                }
                {
                  (2014157 call zip4[1096826] _iterator[2014107])
                }
                label _breakLabel[1945750]
                (1945753 call _freeIterator[1108785] _iterator[1945195])
                (1945756 call chpl__autoDestroy[1642180] _iterator[1945195])
                (1945759 call chpl__autoDestroy[1383553] call_tmp[1945197])
                (1945762 call chpl__autoDestroy[1562275] chunk[1945106])
                (1945765 call chpl__autoDestroy[1562275] localx[1945091])
              }
              label _enddoSplitWSNoEnc[1945768]
            }
            (1945771 call _freeIterator[1142636] _iterator[1945019])
          }
          {
            const-val call_tmp[1945774]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            ref this[1948209]:_ref(string)[938000] "temp"
            (1948214 'move' this[1948209](1948211 '.v' _iterator[1024865] F0_this[2049002]))
            (1945776 'move' call_tmp[1945774](1945779 call isEmpty[35064] this[1948209]))
            const-val call_tmp[1945781]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1945783 'move' call_tmp[1945781](1945786 call ![7494] call_tmp[1945774]))
            const-val call_tmp[1945788]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1945790 'move' call_tmp[1945788] call_tmp[1945781])
            if call_tmp[1945781]
            {
              const-val call_tmp[1945795]:string[26] "dead at end of block" "maybe param" "temp"
              const-val ret_tmp[1945797]:string[26] "temp"
              ref this[1948216]:_ref(string)[938000] "temp"
              (1948221 'move' this[1948216](1948218 '.v' _iterator[1024865] F0_this[2049002]))
              (1945800 call localize[32889] this[1948216] ret_tmp[1945797])
              (1945803 'move' call_tmp[1945795] ret_tmp[1945797])
              const localThis[1945806]:string[26] "dead at end of block" "const" "insert auto destroy"
              (1945808 'move' localThis[1945806] call_tmp[1945795])
              val done[1945811]:bool[10] "dead at end of block" "insert auto destroy"
              (1945813 'move' done[1945811] 0)
              val yieldChunk[1945816]:bool[10] "dead at end of block" "insert auto destroy"
              (1945818 'move' yieldChunk[1945816] 0)
              val chunk[1945821]:string[26] "dead at end of block" "insert auto destroy"
              (1945824 call init[30763] chunk[1945821])
              const-val call_tmp[1945826]:bool[10] "dead at end of block" "maybe param" "temp"
              const-val maxsplit[1948223]:int(64)[13] "temp"
              (1948228 'move' maxsplit[1948223](1948225 '.v' _iterator[1024865] F1_maxsplit[2049006]))
              (1945828 'move' call_tmp[1945826](1945831 call ==[435671] maxsplit[1948223] 0))
              const-val noSplits[1945834]:bool[10] "dead at end of block" "const" "insert auto destroy"
              (1945836 'move' noSplits[1945834] call_tmp[1945826])
              const-val call_tmp[1945839]:bool[10] "dead at end of block" "maybe param" "temp"
              const-val maxsplit[1948230]:int(64)[13] "temp"
              (1948235 'move' maxsplit[1948230](1948232 '.v' _iterator[1024865] F1_maxsplit[2049006]))
              (1945841 'move' call_tmp[1945839](1945844 call >[437715] maxsplit[1948230] 0))
              const-val limitSplits[1945847]:bool[10] "dead at end of block" "const" "insert auto destroy"
              (1945849 'move' limitSplits[1945847] call_tmp[1945839])
              val splitCount[1945852]:int(64)[13] "dead at end of block" "insert auto destroy"
              (1945854 'move' splitCount[1945852] 0)
              ref call_tmp[1945857]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
              (1945859 'move' call_tmp[1945857](1945862 call buffLen[757947] localThis[1945806]))
              const-val call_tmp[1945864]:int(64)[13] "dead at end of block" "insert auto destroy" "maybe param" "temp"
              const-val coerce_tmp[1945866]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1945868 'move' coerce_tmp[1945866](1945870 'deref' call_tmp[1945857]))
              (1945872 'move' call_tmp[1945864](1945875 call -[1125499] coerce_tmp[1945866]))
              const-val iEnd[1945877]:byteIndex[28173] "dead at end of block" "const" "insert auto destroy"
              (1945880 call init=[28148] iEnd[1945877] call_tmp[1945864])
              val inChunk[1945883]:bool[10] "dead at end of block" "insert auto destroy"
              (1945885 'move' inChunk[1945883] 0)
              val chunkStart[1945888]:byteIndex[28173] "dead at end of block" "insert auto destroy"
              (1945891 call init[28100] chunkStart[1945888])
              val _indexOfInterest[1945893]:(int(32),byteIndex,int(64))[1122203] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[1945895]:_ic__cpIndexLen__ref_string[1122446] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[1945897]:_ir__cpIndexLen__ref_string[1122452] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val default_arg_start[1945899]:byteIndex[28173] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
              const-val ret_tmp[1945901]:byteIndex[28173] "temp"
              (1945904 call _cpIndexLen_default_start[1122092] localThis[1945806] ret_tmp[1945901])
              (1945907 'move' default_arg_start[1945899] ret_tmp[1945901])
              const-val ret_tmp[1945910]:_ir__cpIndexLen__ref_string[1122452] "temp"
              (1945913 call _cpIndexLen[31109] localThis[1945806] default_arg_start[1945899] ret_tmp[1945910])
              (1945917 'move' call_tmp[1945897] ret_tmp[1945910])
              (1945920 'move' _iterator[1945895](1945923 call _getIterator[1122461] call_tmp[1945897]))
              {
                val ret[1945926]:_ir__cpIndexLen__ref_string[1122452] "dead after last mention" "RVV" "temp"
                const-val call_tmp[1945928]:string[26] "dead at end of block" "maybe param" "temp"
                const-val ret_tmp[1945930]:string[26] "temp"
                ref this[1945932]:_ref(string)[938000] "temp"
                (1945934 'move' this[1945932](1945936 '.v' _iterator[1945895] F0_this[2044776]))
                (1945940 call localize[32889] this[1945932] ret_tmp[1945930])
                (1945943 'move' call_tmp[1945928] ret_tmp[1945930])
                val localThis[1945946]:string[26] "dead at end of block" "insert auto destroy"
                (1945948 'move' localThis[1945946] call_tmp[1945928])
                const-val call_tmp[1945951]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1945953 'move' call_tmp[1945951](1945956 call isASCII[31049] localThis[1945946]))
                const-val call_tmp[1945958]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1945960 'move' call_tmp[1945958] call_tmp[1945951])
                if call_tmp[1945951]
                {
                  const-val _iterator[1945965]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108627] "dead at end of block" "expr temp" "insert auto destroy" "temp"
                  const-val call_tmp[1945967]:range(int(64),bounded,false)[1026875] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
                  const-val ret_tmp[1945969]:range(int(64),bounded,false)[1026875] "temp"
                  ref this[1945971]:_ref(string)[938000] "temp"
                  (1945973 'move' this[1945971](1945975 '.v' _iterator[1945895] F0_this[2044776]))
                  (1945979 call byteIndices[31068] this[1945971] ret_tmp[1945969])
                  (1945982 'move' call_tmp[1945967] ret_tmp[1945969])
                  val call_tmp[1945985]:_ic_these_range_int64_t_bounded_F[1096764] "dead at end of block" "expr temp" "maybe param" "temp"
                  (1945987 'move' call_tmp[1945985](1945990 call _getIterator[1095381] call_tmp[1945967]))
                  const-val call_tmp[1945992]:_ir_chpl_bytes__ref_string[1108323] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val ret_tmp[1945994]:_ir_chpl_bytes__ref_string[1108323] "temp"
                  ref this[1945996]:_ref(string)[938000] "temp"
                  (1945998 'move' this[1945996](1946000 '.v' _iterator[1945895] F0_this[2044776]))
                  (1946004 call chpl_bytes[33577] this[1945996] ret_tmp[1945994])
                  (1946007 'move' call_tmp[1945992] ret_tmp[1945994])
                  val call_tmp[1946010]:_ic_chpl_bytes__ref_string[1108317] "dead at end of block" "expr temp" "maybe param" "temp"
                  (1946012 'move' call_tmp[1946010](1946015 call _getIterator[1108332] call_tmp[1945992]))
                  const-val ret_tmp[1946017]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108627] "temp"
                  (1946020 call _build_tuple[1108585] call_tmp[1945985] call_tmp[1946010] ret_tmp[1946017])
                  (1946024 'move' _iterator[1945965] ret_tmp[1946017])
                  val _iterator[1946027]:_ic_these_range_int64_t_bounded_F[1096764] "temp"
                  (1946029 'move' _iterator[1946027](1946031 '.v' _iterator[1945965] x0[1108623]))
                  val _iterator[1946034]:_ic_chpl_bytes__ref_string[1108317] "temp"
                  (1946036 'move' _iterator[1946034](1946038 '.v' _iterator[1945965] x1[1108625]))
                  {
                    (1946043 call zip1[1096799] _iterator[1946027])
                  }
                  {
                    (1946047 call zip1[1108352] _iterator[1946034])
                  }
                  const-val isFinished[1946049]:bool[10] "temp"
                  val hasMore[1946051]:bool[10] "temp"
                  CForLoop[1946053]
                  {
                    val _indexOfInterest[1946076]:(int(64),uint(8))[1111101] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    {
                      (1946080 call zip2[1108361] _iterator[1946034])
                    }
                    {
                      const-val retTmp[1946083]:int(64)[13] "temp"
                      (1946085 'move' retTmp[1946083](1946088 call hasMore[1108388] _iterator[1946034]))
                      (1946090 'move' hasMore[1946051](1946092 'cast' bool[10] retTmp[1946083]))
                    }
                    (1946095 'move' isFinished[1946049](1946097 '!' hasMore[1946051]))
                    if isFinished[1946049]
                    {
                      (1946101 'chpl_error' c"zippered iterations have non-equal lengths")
                    }
                    {
                      (1946105 'move' _index[1946120](1946108 call getValue[1108397] _iterator[1946034]))
                    }
                    {
                      (1946112 call zip2[1096808] _iterator[1946027])
                    }
                    {
                      (1946115 'move' _index[1946126](1946118 call getValue[1096844] _iterator[1946027]))
                    }
                    val _index[1946120]:uint(8)[100] "temp"
                    (1946122 '.=' _indexOfInterest[1946076] x1[1111099] _index[1946120])
                    val _index[1946126]:int(64)[13] "temp"
                    (1946128 '.=' _indexOfInterest[1946076] x0[1111097] _index[1946126])
                    1
                    const-val i[1946133]:int(64)[13] "const" "index var" "insert auto destroy"
                    (1946135 'move' i[1946133](1946137 '.v' _indexOfInterest[1946076] x0[1111097]))
                    const-val b[1946140]:uint(8)[100] "const" "index var" "insert auto destroy"
                    (1946142 'move' b[1946140](1946144 '.v' _indexOfInterest[1946076] x1[1111099]))
                    const-val yret[1946147]:(int(32),byteIndex,int(64))[1122203] "dead after last mention" "YVV" "temp"
                    val call_tmp[1946149]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    const-val call_tmp[1946151]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1946153 'move' call_tmp[1946151](1946155 'cast' int(32)[95] b[1946140]))
                    const-val call_tmp[1946158]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1946160]:byteIndex[28173] "temp"
                    (1946163 call _cast[39486] i[1946133] ret_tmp[1946160])
                    (1946166 'move' call_tmp[1946158] ret_tmp[1946160])
                    const-val call_tmp[1946169]:(int(32),byteIndex,int(64))[1122203] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1946171]:(int(32),byteIndex,int(64))[1122203] "temp"
                    (1946174 call _build_tuple[1122153] call_tmp[1946151] call_tmp[1946158] 1 ret_tmp[1946171])
                    (1946179 'move' call_tmp[1946169] ret_tmp[1946171])
                    (1946182 'move' yret[1946147] call_tmp[1946169])
                    const-val _yieldedIndex[1946185]:(int(32),byteIndex,int(64))[1122203] "temp"
                    (1946187 'move' _yieldedIndex[1946185] call_tmp[1946169])
                    {
                      1
                      const-val c[1946192]:int(32)[95] "const" "index var" "insert auto destroy"
                      (1946194 'move' c[1946192](1946196 '.v' _yieldedIndex[1946185] x0[1122197]))
                      ref i[1946199]:_ref(byteIndex)[948820] "index var" "insert auto destroy"
                      (1946201 'move' i[1946199](1946203 '.v' _yieldedIndex[1946185] x1[1122199]))
                      const-val nBytes[1946206]:int(64)[13] "const" "index var" "insert auto destroy"
                      (1946208 'move' nBytes[1946206](1946210 '.v' _yieldedIndex[1946185] x2[1122201]))
                      const-val call_tmp[1946213]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1946215 'move' call_tmp[1946213] noSplits[1945834])
                      if noSplits[1945834]
                      {
                        (1946221 call =[435217] done[1945811] 1)
                        const-val call_tmp[1946224]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1946226 'move' call_tmp[1946224](1946229 call isSpace[36843] localThis[1945806]))
                        const-val call_tmp[1946231]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1946233 'move' call_tmp[1946231](1946236 call ![7494] call_tmp[1946224]))
                        const-val call_tmp[1946238]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1946240 'move' call_tmp[1946238] call_tmp[1946231])
                        if call_tmp[1946231]
                        {
                          (1946246 call =[38272] chunk[1945821] localThis[1945806])
                          (1946250 call =[435217] yieldChunk[1945816] 1)
                        }
                      }
                      {
                        const-val call_tmp[1946255]:bool[10] "dead at end of block" "maybe param" "temp"
                        (1946257 'move' call_tmp[1946255](1946260 call codepoint_isWhitespace[39156] c[1946192]))
                        const-val cSpace[1946262]:bool[10] "dead at end of block" "insert auto destroy"
                        (1946264 'move' cSpace[1946262] call_tmp[1946255])
                        const-val tmp[1946267]:bool[10] "dead after last mention" "maybe param" "temp"
                        (1946269 'move' tmp[1946267] inChunk[1945883])
                        val tmp[1946272]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                        const-val tmp[1946274]:bool[10] "dead after last mention" "maybe param" "temp"
                        const-val call_tmp[1946276]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1946278 'move' call_tmp[1946276] inChunk[1945883])
                        (1946281 'move' tmp[1946274] inChunk[1945883])
                        if inChunk[1945883]
                        {
                          (1946286 'move' tmp[1946272] 1)
                        }
                        {
                          const-val tmp[1946290]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                          (1946292 'move' tmp[1946290] cSpace[1946262])
                          (1946295 'move' tmp[1946272] cSpace[1946262])
                        }
                        const-val call_tmp[1946299]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1946301 'move' call_tmp[1946299](1946304 call ![7494] tmp[1946272]))
                        const-val call_tmp[1946306]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1946308 'move' call_tmp[1946306] call_tmp[1946299])
                        if call_tmp[1946299]
                        {
                          (1946314 call =[38194] chunkStart[1945888] i[1946199])
                          (1946318 call =[435217] inChunk[1945883] 1)
                          const-val call_tmp[1946321]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                          const-val ret_tmp[1946323]:byteIndex[28173] "temp"
                          (1946326 call -[28857] i[1946199] 1 ret_tmp[1946323])
                          (1946330 'move' call_tmp[1946321] ret_tmp[1946323])
                          const-val call_tmp[1946333]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                          const-val ret_tmp[1946335]:byteIndex[28173] "temp"
                          (1946338 call +[28725] call_tmp[1946321] nBytes[1946206] ret_tmp[1946335])
                          (1946342 'move' call_tmp[1946333] ret_tmp[1946335])
                          const-val call_tmp[1946345]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (1946347 'move' call_tmp[1946345](1946350 call >[28575] call_tmp[1946333] iEnd[1945877]))
                          const-val call_tmp[1946353]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (1946355 'move' call_tmp[1946353] call_tmp[1946345])
                          if call_tmp[1946345]
                          {
                            const-val call_tmp[1946360]:range(byteIndex,boundedLow,false)[1143464] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[1946362]:range(byteIndex,boundedLow,false)[1143464] "temp"
                            (1946365 call chpl_build_low_bounded_range[1142771] chunkStart[1945888] ret_tmp[1946362])
                            (1946368 'move' call_tmp[1946360] ret_tmp[1946362])
                            const-val call_tmp[1946371]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[1946373]:string[26] "temp"
                            (1946376 call this[1143784] localThis[1945806] call_tmp[1946360] ret_tmp[1946373])
                            (1946380 'move' call_tmp[1946371] ret_tmp[1946373])
                            (1946384 call =[38272] chunk[1945821] call_tmp[1946371])
                            (1946388 call chpl__autoDestroy[1562275] call_tmp[1946371])
                            (1946391 call chpl__autoDestroy[1643589] call_tmp[1946360])
                            (1946394 call =[435217] yieldChunk[1945816] 1)
                            (1946398 call =[435217] done[1945811] 1)
                          }
                          (1946403 call chpl__autoDestroy[1562538] call_tmp[1946333])
                          (1946406 call chpl__autoDestroy[1562538] call_tmp[1946321])
                        }
                        {
                          const-val call_tmp[1946409]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (1946411 'move' call_tmp[1946409] inChunk[1945883])
                          if call_tmp[1946409]
                          {
                            const-val call_tmp[1946416]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (1946418 'move' call_tmp[1946416] cSpace[1946262])
                            if cSpace[1946262]
                            {
                              (1946424 call +=[451358] splitCount[1945852] 1)
                              const-val tmp[1946427]:bool[10] "dead after last mention" "maybe param" "temp"
                              (1946429 'move' tmp[1946427] limitSplits[1945847])
                              val tmp[1946432]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                              const-val tmp[1946434]:bool[10] "dead after last mention" "maybe param" "temp"
                              const-val call_tmp[1946436]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1946438 'move' call_tmp[1946436] limitSplits[1945847])
                              (1946441 'move' tmp[1946434] limitSplits[1945847])
                              if limitSplits[1945847]
                              {
                                const-val tmp[1946446]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                                const-val call_tmp[1946448]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val maxsplit[1948237]:int(64)[13] "temp"
                                (1948242 'move' maxsplit[1948237](1948239 '.v' _iterator[1024865] F1_maxsplit[2049006]))
                                (1946450 'move' call_tmp[1946448](1946453 call >[437715] splitCount[1945852] maxsplit[1948237]))
                                (1946456 'move' tmp[1946446] call_tmp[1946448])
                                (1946459 'move' tmp[1946432] call_tmp[1946448])
                              }
                              {
                                (1946463 'move' tmp[1946432] 0)
                              }
                              const-val call_tmp[1946467]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1946469 'move' call_tmp[1946467] tmp[1946432])
                              if tmp[1946432]
                              {
                                const-val call_tmp[1946474]:range(byteIndex,boundedLow,false)[1143464] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[1946476]:range(byteIndex,boundedLow,false)[1143464] "temp"
                                (1946479 call chpl_build_low_bounded_range[1142771] chunkStart[1945888] ret_tmp[1946476])
                                (1946482 'move' call_tmp[1946474] ret_tmp[1946476])
                                const-val call_tmp[1946485]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[1946487]:string[26] "temp"
                                (1946490 call this[1143784] localThis[1945806] call_tmp[1946474] ret_tmp[1946487])
                                (1946494 'move' call_tmp[1946485] ret_tmp[1946487])
                                (1946498 call =[38272] chunk[1945821] call_tmp[1946485])
                                (1946502 call chpl__autoDestroy[1562275] call_tmp[1946485])
                                (1946505 call chpl__autoDestroy[1643589] call_tmp[1946474])
                                (1946508 call =[435217] yieldChunk[1945816] 1)
                                (1946512 call =[435217] done[1945811] 1)
                              }
                              {
                                const-val call_tmp[1946516]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[1946518]:byteIndex[28173] "temp"
                                (1946521 call -[28857] i[1946199] 1 ret_tmp[1946518])
                                (1946525 'move' call_tmp[1946516] ret_tmp[1946518])
                                const-val call_tmp[1946528]:range(byteIndex,bounded,false)[1025853] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[1946530]:range(byteIndex,bounded,false)[1025853] "temp"
                                (1946533 call chpl_build_bounded_range[1123315] chunkStart[1945888] call_tmp[1946516] ret_tmp[1946530])
                                (1946537 'move' call_tmp[1946528] ret_tmp[1946530])
                                const-val call_tmp[1946540]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[1946542]:string[26] "temp"
                                (1946545 call this[1123561] localThis[1945806] call_tmp[1946528] ret_tmp[1946542])
                                (1946549 'move' call_tmp[1946540] ret_tmp[1946542])
                                (1946553 call =[38272] chunk[1945821] call_tmp[1946540])
                                (1946557 call chpl__autoDestroy[1562275] call_tmp[1946540])
                                (1946560 call chpl__autoDestroy[1635105] call_tmp[1946528])
                                (1946563 call chpl__autoDestroy[1562538] call_tmp[1946516])
                                (1946566 call =[435217] yieldChunk[1945816] 1)
                                (1946570 call =[435217] inChunk[1945883] 0)
                              }
                            }
                            {
                              const-val call_tmp[1946575]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              const-val ret_tmp[1946577]:byteIndex[28173] "temp"
                              (1946580 call -[28857] i[1946199] 1 ret_tmp[1946577])
                              (1946584 'move' call_tmp[1946575] ret_tmp[1946577])
                              const-val call_tmp[1946587]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              const-val ret_tmp[1946589]:byteIndex[28173] "temp"
                              (1946592 call +[28725] call_tmp[1946575] nBytes[1946206] ret_tmp[1946589])
                              (1946596 'move' call_tmp[1946587] ret_tmp[1946589])
                              const-val call_tmp[1946599]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1946601 'move' call_tmp[1946599](1946604 call >[28575] call_tmp[1946587] iEnd[1945877]))
                              const-val call_tmp[1946607]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1946609 'move' call_tmp[1946607] call_tmp[1946599])
                              if call_tmp[1946599]
                              {
                                const-val call_tmp[1946614]:range(byteIndex,boundedLow,false)[1143464] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[1946616]:range(byteIndex,boundedLow,false)[1143464] "temp"
                                (1946619 call chpl_build_low_bounded_range[1142771] chunkStart[1945888] ret_tmp[1946616])
                                (1946622 'move' call_tmp[1946614] ret_tmp[1946616])
                                const-val call_tmp[1946625]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[1946627]:string[26] "temp"
                                (1946630 call this[1143784] localThis[1945806] call_tmp[1946614] ret_tmp[1946627])
                                (1946634 'move' call_tmp[1946625] ret_tmp[1946627])
                                (1946638 call =[38272] chunk[1945821] call_tmp[1946625])
                                (1946642 call chpl__autoDestroy[1562275] call_tmp[1946625])
                                (1946645 call chpl__autoDestroy[1643589] call_tmp[1946614])
                                (1946648 call =[435217] yieldChunk[1945816] 1)
                                (1946652 call =[435217] done[1945811] 1)
                              }
                              (1946657 call chpl__autoDestroy[1562538] call_tmp[1946587])
                              (1946660 call chpl__autoDestroy[1562538] call_tmp[1946575])
                            }
                          }
                        }
                      }
                      const-val call_tmp[1946666]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1946668 'move' call_tmp[1946666] yieldChunk[1945816])
                      if call_tmp[1946666]
                      {
                        const-val yret[1946673]:string[26] "dead after last mention" "YVV" "temp"
                        const-val _yield_expr_tmp_[1946675]:string[26] "temp"
                        (1946677 'move' _yield_expr_tmp_[1946675](1946680 call chpl__initCopy[981409] chunk[1945821]))
                        (1946682 'move' yret[1946673] _yield_expr_tmp_[1946675])
                        const-val _yieldedIndex[1947996]:string[26] "temp"
                        (1948117 'move' _yieldedIndex[1947996] _yield_expr_tmp_[1946675])
                        {
                          const-val chpl__elidedIdx[1947998]:string[26] "const" "index var" "insert auto destroy"
                          (1948000 'move' chpl__elidedIdx[1947998] _yieldedIndex[1947996])
                          {
                            (1948005 call +=[451358] numElements[1024856] 1)
                            const-val call_tmp[1948008]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (1948010 'move' call_tmp[1948008](1948013 call >[437715] numElements[1024856] 1))
                            const-val call_tmp[1948016]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (1948018 'move' call_tmp[1948016] call_tmp[1948008])
                            if call_tmp[1948016]
                            {
                              (1948024 call chpl__autoDestroy[1562275] chpl__elidedIdx[1947998])
                              ref moreRef1[1948035]:_ref(int(64))[936633] "temp"
                              (1948037 'move' moreRef1[1948035](1948039 '.' _iterator[1946027] more[1096767]))
                              const-val moreVal1[1948042]:int(64)[13] "const" "temp"
                              (1948044 '=' moreVal1[1948042] moreRef1[1948035])
                              const-val moreValNeg1[1948047]:int(64)[13] "const" "temp"
                              (1948049 'move' moreValNeg1[1948047](1948051 'u-' moreVal1[1948042]))
                              (1948053 '=' moreRef1[1948035] moreValNeg1[1948047])
                              (1948057 call advance[1096790] _iterator[1946027])
                              ref moreRef2[1948059]:_ref(int(64))[936633] "temp"
                              (1948061 'move' moreRef2[1948059](1948063 '.' _iterator[1946034] more[1108320]))
                              const-val moreVal2[1948066]:int(64)[13] "const" "temp"
                              (1948068 '=' moreVal2[1948066] moreRef2[1948059])
                              const-val moreValNeg2[1948071]:int(64)[13] "const" "temp"
                              (1948073 'move' moreValNeg2[1948071](1948075 'u-' moreVal2[1948066]))
                              (1948077 '=' moreRef2[1948059] moreValNeg2[1948071])
                              (1948081 call advance[1108343] _iterator[1946034])
                              (1948084 call chpl__autoDestroy[1562538] call_tmp[1946158])
                              (1948087 call _freeIterator[1108785] _iterator[1945965])
                              (1948090 call chpl__autoDestroy[1642180] _iterator[1945965])
                              (1948093 call chpl__autoDestroy[1383553] call_tmp[1945967])
                              (1948096 call chpl__autoDestroy[1562275] localThis[1945946])
                              (1948099 call _freeIterator[1122634] _iterator[1945895])
                              (1948102 call chpl__autoDestroy[1562538] default_arg_start[1945899])
                              (1948105 call chpl__autoDestroy[1562538] chunkStart[1945888])
                              (1948108 call chpl__autoDestroy[1562538] iEnd[1945877])
                              (1948111 call chpl__autoDestroy[1562275] chunk[1945821])
                              (1948114 call chpl__autoDestroy[1562275] localThis[1945806])
                              break _breakLabel[1024932] _breakLabel[1024932]
                            }
                          }
                          label _continueLabel[1948029]
                          (1948032 call chpl__autoDestroy[1562275] chpl__elidedIdx[1947998])
                        }
                        (1946774 call =[435217] yieldChunk[1945816] 0)
                      }
                      const-val call_tmp[1946778]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1946780 'move' call_tmp[1946778] done[1945811])
                      if call_tmp[1946778]
                      {
                        ref moreRef1[1946785]:_ref(int(64))[936633] "temp"
                        (1946787 'move' moreRef1[1946785](1946789 '.' _iterator[1946027] more[1096767]))
                        const-val moreVal1[1946792]:int(64)[13] "const" "temp"
                        (1946794 '=' moreVal1[1946792] moreRef1[1946785])
                        const-val moreValNeg1[1946797]:int(64)[13] "const" "temp"
                        (1946799 'move' moreValNeg1[1946797](1946801 'u-' moreVal1[1946792]))
                        (1946803 '=' moreRef1[1946785] moreValNeg1[1946797])
                        (1946807 call advance[1096790] _iterator[1946027])
                        ref moreRef2[1946809]:_ref(int(64))[936633] "temp"
                        (1946811 'move' moreRef2[1946809](1946813 '.' _iterator[1946034] more[1108320]))
                        const-val moreVal2[1946816]:int(64)[13] "const" "temp"
                        (1946818 '=' moreVal2[1946816] moreRef2[1946809])
                        const-val moreValNeg2[1946821]:int(64)[13] "const" "temp"
                        (1946823 'move' moreValNeg2[1946821](1946825 'u-' moreVal2[1946816]))
                        (1946827 '=' moreRef2[1946809] moreValNeg2[1946821])
                        (1946831 call advance[1108343] _iterator[1946034])
                        (1946834 call chpl__autoDestroy[1562538] call_tmp[1946158])
                        (1946837 call _freeIterator[1108785] _iterator[1945965])
                        (1946840 call chpl__autoDestroy[1642180] _iterator[1945965])
                        (1946843 call chpl__autoDestroy[1383553] call_tmp[1945967])
                        (1946846 call chpl__autoDestroy[1562275] localThis[1945946])
                        break _breakLabel[1947907] _breakLabel[1947907]
                      }
                    }
                    (1946852 call chpl__autoDestroy[1562538] call_tmp[1946158])
                    {
                      (1946856 call zip3[1096817] _iterator[1946027])
                    }
                    {
                      (1946860 call zip3[1108370] _iterator[1946034])
                    }
                    {
                      {
                        (1946057 call init[1096853] _iterator[1946027])
                      }
                      {
                        (1946061 call init[1108406] _iterator[1946034])
                      }
                    }
                    {
                      (1946065 call hasMore[1096835] _iterator[1946027])
                    }
                    {
                      {
                        (1946070 call incr[1096862] _iterator[1946027])
                      }
                      {
                        (1946074 call incr[1108415] _iterator[1946034])
                      }
                    }
                  }
                  {
                    const-val retTmp[1946863]:int(64)[13] "temp"
                    (1946865 'move' retTmp[1946863](1946868 call hasMore[1108388] _iterator[1946034]))
                    (1946870 'move' hasMore[1946051](1946872 'cast' bool[10] retTmp[1946863]))
                  }
                  if hasMore[1946051]
                  {
                    (1946877 'chpl_error' c"zippered iterations have non-equal lengths")
                  }
                  {
                    (1946882 call zip4[1108379] _iterator[1946034])
                  }
                  {
                    (1946886 call zip4[1096826] _iterator[1946027])
                  }
                  (1946889 call _freeIterator[1108785] _iterator[1945965])
                  (1946892 call chpl__autoDestroy[1642180] _iterator[1945965])
                  (1946895 call chpl__autoDestroy[1383553] call_tmp[1945967])
                }
                {
                  const-val call_tmp[1946898]:int(64)[13] "dead at end of block" "maybe param" "temp"
                  ref start[1946900]:_ref(byteIndex)[948820] "temp"
                  (1946902 'move' start[1946900](1946904 '.v' _iterator[1945895] F1_start[2044780]))
                  (1946907 'move' call_tmp[1946898](1946910 call _cast[39465] start[1946900]))
                  val i[1946912]:int(64)[13] "dead at end of block" "insert auto destroy"
                  (1946914 'move' i[1946912] call_tmp[1946898])
                  const-val call_tmp[1946917]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1946919 'move' call_tmp[1946917](1946922 call >[437715] call_tmp[1946898] 0))
                  const-val call_tmp[1946925]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1946927 'move' call_tmp[1946925] call_tmp[1946917])
                  if call_tmp[1946917]
                  {
                    val tmp[1946932]:bool[10] "dead after last mention" "temp"
                    const-val tmp[1946934]:bool[10] "dead after last mention" "maybe param" "temp"
                    ref call_tmp[1946936]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                    (1946938 'move' call_tmp[1946936](1946941 call buffLen[757947] localThis[1945946]))
                    const-val coerce_tmp[1946943]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1946945 'move' coerce_tmp[1946943](1946947 'deref' call_tmp[1946936]))
                    (1946949 'move' tmp[1946934](1946952 call <[437495] i[1946912] coerce_tmp[1946943]))
                    val tmp[1946955]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                    const-val tmp[1946957]:bool[10] "dead after last mention" "maybe param" "temp"
                    const-val call_tmp[1946959]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1946961 'move' call_tmp[1946959] tmp[1946934])
                    (1946964 'move' tmp[1946957] tmp[1946934])
                    if tmp[1946934]
                    {
                      const-val tmp[1946969]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                      ref call_tmp[1946971]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
                      ref _this_tmp_[1946973]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "temp"
                      (1946975 'move' _this_tmp_[1946973](1946978 call buff[758025] localThis[1945946]))
                      val coerce_tmp[1946980]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (1946982 'move' coerce_tmp[1946980](1946984 'deref' _this_tmp_[1946973]))
                      (1946986 'move' call_tmp[1946971](1946989 call this[954152] coerce_tmp[1946980] i[1946912]))
                      const-val call_tmp[1946992]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val coerce_tmp[1946994]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (1946996 'move' coerce_tmp[1946994](1946998 'deref' call_tmp[1946971]))
                      (1947000 'move' call_tmp[1946992](1947003 call isInitialByte[181574] coerce_tmp[1946994]))
                      const-val call_tmp[1947005]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1947007 'move' call_tmp[1947005](1947010 call ![7494] call_tmp[1946992]))
                      (1947012 'move' tmp[1946969] call_tmp[1947005])
                      (1947015 'move' tmp[1946955] call_tmp[1947005])
                    }
                    {
                      (1947019 'move' tmp[1946955] 0)
                    }
                    (1947023 'move' tmp[1946932] tmp[1946955])
                    WhileDo[1947026]
                    {
                      (1947029 call +=[451358] i[1946912] 1)
                      const-val tmp[1947032]:bool[10] "dead after last mention" "maybe param" "temp"
                      ref call_tmp[1947034]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                      (1947036 'move' call_tmp[1947034](1947039 call buffLen[757947] localThis[1945946]))
                      const-val coerce_tmp[1947041]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (1947043 'move' coerce_tmp[1947041](1947045 'deref' call_tmp[1947034]))
                      (1947047 'move' tmp[1947032](1947050 call <[437495] i[1946912] coerce_tmp[1947041]))
                      val tmp[1947053]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                      const-val tmp[1947055]:bool[10] "dead after last mention" "maybe param" "temp"
                      const-val call_tmp[1947057]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1947059 'move' call_tmp[1947057] tmp[1947032])
                      (1947062 'move' tmp[1947055] tmp[1947032])
                      if tmp[1947032]
                      {
                        const-val tmp[1947067]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                        ref call_tmp[1947069]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
                        ref _this_tmp_[1947071]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "temp"
                        (1947073 'move' _this_tmp_[1947071](1947076 call buff[758025] localThis[1945946]))
                        val coerce_tmp[1947078]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (1947080 'move' coerce_tmp[1947078](1947082 'deref' _this_tmp_[1947071]))
                        (1947084 'move' call_tmp[1947069](1947087 call this[954152] coerce_tmp[1947078] i[1946912]))
                        const-val call_tmp[1947090]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val coerce_tmp[1947092]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (1947094 'move' coerce_tmp[1947092](1947096 'deref' call_tmp[1947069]))
                        (1947098 'move' call_tmp[1947090](1947101 call isInitialByte[181574] coerce_tmp[1947092]))
                        const-val call_tmp[1947103]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1947105 'move' call_tmp[1947103](1947108 call ![7494] call_tmp[1947090]))
                        (1947110 'move' tmp[1947067] call_tmp[1947103])
                        (1947113 'move' tmp[1947053] call_tmp[1947103])
                      }
                      {
                        (1947117 'move' tmp[1947053] 0)
                      }
                      (1947121 'move' tmp[1946932] tmp[1947053])
                      tmp[1946932]
                    }
                  }
                  val tmp[1947125]:bool[10] "dead after last mention" "temp"
                  ref call_tmp[1947127]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                  (1947129 'move' call_tmp[1947127](1947132 call buffLen[757947] localThis[1945946]))
                  const-val call_tmp[1947134]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1947136]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1947138 'move' coerce_tmp[1947136](1947140 'deref' call_tmp[1947127]))
                  (1947142 'move' call_tmp[1947134](1947145 call <[437495] i[1946912] coerce_tmp[1947136]))
                  (1947148 'move' tmp[1947125] call_tmp[1947134])
                  WhileDo[1947151]
                  {
                    ref call_tmp[1947153]:_ref(c_ptr(uint(8)))[937493] "dead at end of block" "maybe param" "temp"
                    (1947155 'move' call_tmp[1947153](1947158 call buff[758025] localThis[1945946]))
                    ref call_tmp[1947160]:_ref(int(64))[936633] "dead at end of block" "maybe param" "temp"
                    (1947162 'move' call_tmp[1947160](1947165 call buffLen[757947] localThis[1945946]))
                    const-val call_tmp[1947167]:(syserr,int(32),int(32))[964681] "dead at end of block" "maybe param" "temp"
                    val coerce_tmp[1947169]:c_ptr(uint(8))[937484] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (1947171 'move' coerce_tmp[1947169](1947173 'deref' call_tmp[1947153]))
                    const-val coerce_tmp[1947175]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (1947177 'move' coerce_tmp[1947175](1947179 'deref' call_tmp[1947160]))
                    const-val ret_tmp[1947181]:(syserr,int(32),int(32))[964681] "temp"
                    (1947184 call decodeHelp[174452] coerce_tmp[1947169] coerce_tmp[1947175] i[1946912] 1 ret_tmp[1947181])
                    (1947190 'move' call_tmp[1947167] ret_tmp[1947181])
                    const-val tmp[1947193]:(syserr,int(32),int(32))[964681] "dead at end of block" "const" "insert auto destroy" "temp"
                    (1947195 'move' tmp[1947193] call_tmp[1947167])
                    1
                    ref call_tmp[1947199]:_ref(syserr)[948893] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (1947201 'move' call_tmp[1947199](1947203 '.' tmp[1947193] x0[964675]))
                    const-val decodeRet[1947206]:syserr[223605] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[1947208]:syserr[223605] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (1947210 'move' coerce_tmp[1947208](1947212 'deref' call_tmp[1947199]))
                    (1947214 'move' decodeRet[1947206](1947217 call chpl__initCopy[964546] coerce_tmp[1947208]))
                    ref call_tmp[1947219]:_ref(int(32))[936687] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (1947221 'move' call_tmp[1947219](1947223 '.' tmp[1947193] x1[964677]))
                    const-val cp[1947226]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[1947228]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (1947230 'move' coerce_tmp[1947228](1947232 'deref' call_tmp[1947219]))
                    (1947234 'move' cp[1947226](1947237 call chpl__initCopy[964818] coerce_tmp[1947228]))
                    ref call_tmp[1947239]:_ref(int(32))[936687] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (1947241 'move' call_tmp[1947239](1947243 '.' tmp[1947193] x2[964679]))
                    const-val nBytes[1947246]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[1947248]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (1947250 'move' coerce_tmp[1947248](1947252 'deref' call_tmp[1947239]))
                    (1947254 'move' nBytes[1947246](1947257 call chpl__initCopy[964818] coerce_tmp[1947248]))
                    const-val yret[1947259]:(int(32),byteIndex,int(64))[1122203] "dead after last mention" "YVV" "temp"
                    val call_tmp[1947261]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    const-val call_tmp[1947263]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1947265 'move' call_tmp[1947263] cp[1947226])
                    const-val call_tmp[1947268]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1947270]:byteIndex[28173] "temp"
                    (1947273 call _cast[39486] i[1946912] ret_tmp[1947270])
                    (1947276 'move' call_tmp[1947268] ret_tmp[1947270])
                    const-val call_tmp[1947279]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1947281 'move' call_tmp[1947279](1947283 'cast' int(64)[13] nBytes[1947246]))
                    const-val call_tmp[1947286]:(int(32),byteIndex,int(64))[1122203] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1947288]:(int(32),byteIndex,int(64))[1122203] "temp"
                    (1947291 call _build_tuple[1122153] cp[1947226] call_tmp[1947268] call_tmp[1947279] ret_tmp[1947288])
                    (1947296 'move' call_tmp[1947286] ret_tmp[1947288])
                    (1947299 'move' yret[1947259] call_tmp[1947286])
                    const-val _yieldedIndex[1947302]:(int(32),byteIndex,int(64))[1122203] "temp"
                    (1947304 'move' _yieldedIndex[1947302] call_tmp[1947286])
                    {
                      1
                      const-val c[1947309]:int(32)[95] "const" "index var" "insert auto destroy"
                      (1947311 'move' c[1947309](1947313 '.v' _yieldedIndex[1947302] x0[1122197]))
                      ref i[1947316]:_ref(byteIndex)[948820] "index var" "insert auto destroy"
                      (1947318 'move' i[1947316](1947320 '.v' _yieldedIndex[1947302] x1[1122199]))
                      const-val nBytes[1947323]:int(64)[13] "const" "index var" "insert auto destroy"
                      (1947325 'move' nBytes[1947323](1947327 '.v' _yieldedIndex[1947302] x2[1122201]))
                      const-val call_tmp[1947330]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1947332 'move' call_tmp[1947330] noSplits[1945834])
                      if noSplits[1945834]
                      {
                        (1947338 call =[435217] done[1945811] 1)
                        const-val call_tmp[1947341]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1947343 'move' call_tmp[1947341](1947346 call isSpace[36843] localThis[1945806]))
                        const-val call_tmp[1947348]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1947350 'move' call_tmp[1947348](1947353 call ![7494] call_tmp[1947341]))
                        const-val call_tmp[1947355]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1947357 'move' call_tmp[1947355] call_tmp[1947348])
                        if call_tmp[1947348]
                        {
                          (1947363 call =[38272] chunk[1945821] localThis[1945806])
                          (1947367 call =[435217] yieldChunk[1945816] 1)
                        }
                      }
                      {
                        const-val call_tmp[1947372]:bool[10] "dead at end of block" "maybe param" "temp"
                        (1947374 'move' call_tmp[1947372](1947377 call codepoint_isWhitespace[39156] c[1947309]))
                        const-val cSpace[1947379]:bool[10] "dead at end of block" "insert auto destroy"
                        (1947381 'move' cSpace[1947379] call_tmp[1947372])
                        const-val tmp[1947384]:bool[10] "dead after last mention" "maybe param" "temp"
                        (1947386 'move' tmp[1947384] inChunk[1945883])
                        val tmp[1947389]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                        const-val tmp[1947391]:bool[10] "dead after last mention" "maybe param" "temp"
                        const-val call_tmp[1947393]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1947395 'move' call_tmp[1947393] inChunk[1945883])
                        (1947398 'move' tmp[1947391] inChunk[1945883])
                        if inChunk[1945883]
                        {
                          (1947403 'move' tmp[1947389] 1)
                        }
                        {
                          const-val tmp[1947407]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                          (1947409 'move' tmp[1947407] cSpace[1947379])
                          (1947412 'move' tmp[1947389] cSpace[1947379])
                        }
                        const-val call_tmp[1947416]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1947418 'move' call_tmp[1947416](1947421 call ![7494] tmp[1947389]))
                        const-val call_tmp[1947423]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1947425 'move' call_tmp[1947423] call_tmp[1947416])
                        if call_tmp[1947416]
                        {
                          (1947431 call =[38194] chunkStart[1945888] i[1947316])
                          (1947435 call =[435217] inChunk[1945883] 1)
                          const-val call_tmp[1947438]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                          const-val ret_tmp[1947440]:byteIndex[28173] "temp"
                          (1947443 call -[28857] i[1947316] 1 ret_tmp[1947440])
                          (1947447 'move' call_tmp[1947438] ret_tmp[1947440])
                          const-val call_tmp[1947450]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                          const-val ret_tmp[1947452]:byteIndex[28173] "temp"
                          (1947455 call +[28725] call_tmp[1947438] nBytes[1947323] ret_tmp[1947452])
                          (1947459 'move' call_tmp[1947450] ret_tmp[1947452])
                          const-val call_tmp[1947462]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (1947464 'move' call_tmp[1947462](1947467 call >[28575] call_tmp[1947450] iEnd[1945877]))
                          const-val call_tmp[1947470]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (1947472 'move' call_tmp[1947470] call_tmp[1947462])
                          if call_tmp[1947462]
                          {
                            const-val call_tmp[1947477]:range(byteIndex,boundedLow,false)[1143464] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[1947479]:range(byteIndex,boundedLow,false)[1143464] "temp"
                            (1947482 call chpl_build_low_bounded_range[1142771] chunkStart[1945888] ret_tmp[1947479])
                            (1947485 'move' call_tmp[1947477] ret_tmp[1947479])
                            const-val call_tmp[1947488]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[1947490]:string[26] "temp"
                            (1947493 call this[1143784] localThis[1945806] call_tmp[1947477] ret_tmp[1947490])
                            (1947497 'move' call_tmp[1947488] ret_tmp[1947490])
                            (1947501 call =[38272] chunk[1945821] call_tmp[1947488])
                            (1947505 call chpl__autoDestroy[1562275] call_tmp[1947488])
                            (1947508 call chpl__autoDestroy[1643589] call_tmp[1947477])
                            (1947511 call =[435217] yieldChunk[1945816] 1)
                            (1947515 call =[435217] done[1945811] 1)
                          }
                          (1947520 call chpl__autoDestroy[1562538] call_tmp[1947450])
                          (1947523 call chpl__autoDestroy[1562538] call_tmp[1947438])
                        }
                        {
                          const-val call_tmp[1947526]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (1947528 'move' call_tmp[1947526] inChunk[1945883])
                          if call_tmp[1947526]
                          {
                            const-val call_tmp[1947533]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (1947535 'move' call_tmp[1947533] cSpace[1947379])
                            if cSpace[1947379]
                            {
                              (1947541 call +=[451358] splitCount[1945852] 1)
                              const-val tmp[1947544]:bool[10] "dead after last mention" "maybe param" "temp"
                              (1947546 'move' tmp[1947544] limitSplits[1945847])
                              val tmp[1947549]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                              const-val tmp[1947551]:bool[10] "dead after last mention" "maybe param" "temp"
                              const-val call_tmp[1947553]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1947555 'move' call_tmp[1947553] limitSplits[1945847])
                              (1947558 'move' tmp[1947551] limitSplits[1945847])
                              if limitSplits[1945847]
                              {
                                const-val tmp[1947563]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                                const-val call_tmp[1947565]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val maxsplit[1948244]:int(64)[13] "temp"
                                (1948249 'move' maxsplit[1948244](1948246 '.v' _iterator[1024865] F1_maxsplit[2049006]))
                                (1947567 'move' call_tmp[1947565](1947570 call >[437715] splitCount[1945852] maxsplit[1948244]))
                                (1947573 'move' tmp[1947563] call_tmp[1947565])
                                (1947576 'move' tmp[1947549] call_tmp[1947565])
                              }
                              {
                                (1947580 'move' tmp[1947549] 0)
                              }
                              const-val call_tmp[1947584]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1947586 'move' call_tmp[1947584] tmp[1947549])
                              if tmp[1947549]
                              {
                                const-val call_tmp[1947591]:range(byteIndex,boundedLow,false)[1143464] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[1947593]:range(byteIndex,boundedLow,false)[1143464] "temp"
                                (1947596 call chpl_build_low_bounded_range[1142771] chunkStart[1945888] ret_tmp[1947593])
                                (1947599 'move' call_tmp[1947591] ret_tmp[1947593])
                                const-val call_tmp[1947602]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[1947604]:string[26] "temp"
                                (1947607 call this[1143784] localThis[1945806] call_tmp[1947591] ret_tmp[1947604])
                                (1947611 'move' call_tmp[1947602] ret_tmp[1947604])
                                (1947615 call =[38272] chunk[1945821] call_tmp[1947602])
                                (1947619 call chpl__autoDestroy[1562275] call_tmp[1947602])
                                (1947622 call chpl__autoDestroy[1643589] call_tmp[1947591])
                                (1947625 call =[435217] yieldChunk[1945816] 1)
                                (1947629 call =[435217] done[1945811] 1)
                              }
                              {
                                const-val call_tmp[1947633]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[1947635]:byteIndex[28173] "temp"
                                (1947638 call -[28857] i[1947316] 1 ret_tmp[1947635])
                                (1947642 'move' call_tmp[1947633] ret_tmp[1947635])
                                const-val call_tmp[1947645]:range(byteIndex,bounded,false)[1025853] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[1947647]:range(byteIndex,bounded,false)[1025853] "temp"
                                (1947650 call chpl_build_bounded_range[1123315] chunkStart[1945888] call_tmp[1947633] ret_tmp[1947647])
                                (1947654 'move' call_tmp[1947645] ret_tmp[1947647])
                                const-val call_tmp[1947657]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[1947659]:string[26] "temp"
                                (1947662 call this[1123561] localThis[1945806] call_tmp[1947645] ret_tmp[1947659])
                                (1947666 'move' call_tmp[1947657] ret_tmp[1947659])
                                (1947670 call =[38272] chunk[1945821] call_tmp[1947657])
                                (1947674 call chpl__autoDestroy[1562275] call_tmp[1947657])
                                (1947677 call chpl__autoDestroy[1635105] call_tmp[1947645])
                                (1947680 call chpl__autoDestroy[1562538] call_tmp[1947633])
                                (1947683 call =[435217] yieldChunk[1945816] 1)
                                (1947687 call =[435217] inChunk[1945883] 0)
                              }
                            }
                            {
                              const-val call_tmp[1947692]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              const-val ret_tmp[1947694]:byteIndex[28173] "temp"
                              (1947697 call -[28857] i[1947316] 1 ret_tmp[1947694])
                              (1947701 'move' call_tmp[1947692] ret_tmp[1947694])
                              const-val call_tmp[1947704]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              const-val ret_tmp[1947706]:byteIndex[28173] "temp"
                              (1947709 call +[28725] call_tmp[1947692] nBytes[1947323] ret_tmp[1947706])
                              (1947713 'move' call_tmp[1947704] ret_tmp[1947706])
                              const-val call_tmp[1947716]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1947718 'move' call_tmp[1947716](1947721 call >[28575] call_tmp[1947704] iEnd[1945877]))
                              const-val call_tmp[1947724]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1947726 'move' call_tmp[1947724] call_tmp[1947716])
                              if call_tmp[1947716]
                              {
                                const-val call_tmp[1947731]:range(byteIndex,boundedLow,false)[1143464] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[1947733]:range(byteIndex,boundedLow,false)[1143464] "temp"
                                (1947736 call chpl_build_low_bounded_range[1142771] chunkStart[1945888] ret_tmp[1947733])
                                (1947739 'move' call_tmp[1947731] ret_tmp[1947733])
                                const-val call_tmp[1947742]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[1947744]:string[26] "temp"
                                (1947747 call this[1143784] localThis[1945806] call_tmp[1947731] ret_tmp[1947744])
                                (1947751 'move' call_tmp[1947742] ret_tmp[1947744])
                                (1947755 call =[38272] chunk[1945821] call_tmp[1947742])
                                (1947759 call chpl__autoDestroy[1562275] call_tmp[1947742])
                                (1947762 call chpl__autoDestroy[1643589] call_tmp[1947731])
                                (1947765 call =[435217] yieldChunk[1945816] 1)
                                (1947769 call =[435217] done[1945811] 1)
                              }
                              (1947774 call chpl__autoDestroy[1562538] call_tmp[1947704])
                              (1947777 call chpl__autoDestroy[1562538] call_tmp[1947692])
                            }
                          }
                        }
                      }
                      const-val call_tmp[1947783]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1947785 'move' call_tmp[1947783] yieldChunk[1945816])
                      if call_tmp[1947783]
                      {
                        const-val yret[1947790]:string[26] "dead after last mention" "YVV" "temp"
                        const-val _yield_expr_tmp_[1947792]:string[26] "temp"
                        (1947794 'move' _yield_expr_tmp_[1947792](1947797 call chpl__initCopy[981409] chunk[1945821]))
                        (1947799 'move' yret[1947790] _yield_expr_tmp_[1947792])
                        const-val _yieldedIndex[1948119]:string[26] "temp"
                        (1948186 'move' _yieldedIndex[1948119] _yield_expr_tmp_[1947792])
                        {
                          const-val chpl__elidedIdx[1948121]:string[26] "const" "index var" "insert auto destroy"
                          (1948123 'move' chpl__elidedIdx[1948121] _yieldedIndex[1948119])
                          {
                            (1948128 call +=[451358] numElements[1024856] 1)
                            const-val call_tmp[1948131]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (1948133 'move' call_tmp[1948131](1948136 call >[437715] numElements[1024856] 1))
                            const-val call_tmp[1948139]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (1948141 'move' call_tmp[1948139] call_tmp[1948131])
                            if call_tmp[1948139]
                            {
                              (1948147 call chpl__autoDestroy[1562275] chpl__elidedIdx[1948121])
                              (1948159 call chpl__autoDestroy[1562538] call_tmp[1947268])
                              (1948162 call chpl__autoDestroy[1566178] tmp[1947193])
                              (1948165 call chpl__autoDestroy[1562275] localThis[1945946])
                              (1948168 call _freeIterator[1122634] _iterator[1945895])
                              (1948171 call chpl__autoDestroy[1562538] default_arg_start[1945899])
                              (1948174 call chpl__autoDestroy[1562538] chunkStart[1945888])
                              (1948177 call chpl__autoDestroy[1562538] iEnd[1945877])
                              (1948180 call chpl__autoDestroy[1562275] chunk[1945821])
                              (1948183 call chpl__autoDestroy[1562275] localThis[1945806])
                              break _breakLabel[1024932] _breakLabel[1024932]
                            }
                          }
                          label _continueLabel[1948152]
                          (1948155 call chpl__autoDestroy[1562275] chpl__elidedIdx[1948121])
                        }
                        (1947837 call =[435217] yieldChunk[1945816] 0)
                      }
                      const-val call_tmp[1947841]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1947843 'move' call_tmp[1947841] done[1945811])
                      if call_tmp[1947841]
                      {
                        (1947849 call chpl__autoDestroy[1562538] call_tmp[1947268])
                        (1947852 call chpl__autoDestroy[1566178] tmp[1947193])
                        (1947855 call chpl__autoDestroy[1562275] localThis[1945946])
                        break _breakLabel[1947907] _breakLabel[1947907]
                      }
                    }
                    (1947861 call chpl__autoDestroy[1562538] call_tmp[1947268])
                    const-val coerce_tmp[1947863]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1947865 'move' coerce_tmp[1947863](1947867 'cast' int(64)[13] nBytes[1947246]))
                    (1947871 call +=[451358] i[1946912] coerce_tmp[1947863])
                    (1947875 call chpl__autoDestroy[1566178] tmp[1947193])
                    ref call_tmp[1947877]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                    (1947879 'move' call_tmp[1947877](1947882 call buffLen[757947] localThis[1945946]))
                    const-val call_tmp[1947884]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1947886]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1947888 'move' coerce_tmp[1947886](1947890 'deref' call_tmp[1947877]))
                    (1947892 'move' call_tmp[1947884](1947895 call <[437495] i[1946912] coerce_tmp[1947886]))
                    (1947898 'move' tmp[1947125] call_tmp[1947884])
                    tmp[1947125]
                  }
                }
                (1947903 call chpl__autoDestroy[1562275] localThis[1945946])
                label _end_cpIndexLen[1947905]
              }
              label _breakLabel[1947907]
              (1947910 call _freeIterator[1122634] _iterator[1945895])
              (1947913 call chpl__autoDestroy[1562538] default_arg_start[1945899])
              (1947916 call chpl__autoDestroy[1562538] chunkStart[1945888])
              (1947919 call chpl__autoDestroy[1562538] iEnd[1945877])
              (1947922 call chpl__autoDestroy[1562275] chunk[1945821])
              (1947925 call chpl__autoDestroy[1562275] localThis[1945806])
            }
          }
          label _endsplit[1947929]
        }
        label _breakLabel[1024932]
        (1877622 call _freeIterator[1156753] _iterator[1024865])
      }
      const-val call_tmp[1024934]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1024936 'move' call_tmp[1024934](1024939 call >[437715] numElements[1024856] 1))
      const-val call_tmp[1024942]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1024944 'move' call_tmp[1024942] call_tmp[1024934])
      if call_tmp[1024942]
      {
        const-val call_tmp[1024951]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1863508]:string[26] "temp"
        (1024956 call +[38345] "bad cast from string '" x[1024634] ret_tmp[1863508])
        (1863511 'move' call_tmp[1024951] ret_tmp[1863508])
        const-val call_tmp[1024959]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1863514]:string[26] "temp"
        (1024964 call +[38345] call_tmp[1024951] "' to " ret_tmp[1863514])
        (1863517 'move' call_tmp[1024959] ret_tmp[1863514])
        const-val call_tmp[1024975]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1863520]:string[26] "temp"
        (1024980 call +[38345] call_tmp[1024959] "int(64)" ret_tmp[1863520])
        (1863523 'move' call_tmp[1024975] ret_tmp[1863520])
        const-val call_tmp[1024983]:owned IllegalArgumentError[1064619] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
        val new_temp[1156842]:IllegalArgumentError[168246] "dead after last mention" "temp"
        (1156844 'move' new_temp[1156842](1156829 call _new[1064168] call_tmp[1024975]))
        const-val initTemp[1156851]:owned IllegalArgumentError[1064619] "dead after last mention" "delay instantiation" "temp"
        (1156854 call init[1064270] initTemp[1156851] new_temp[1156842])
        (1024985 'move' call_tmp[1024983] initTemp[1156851])
        val call_tmp[1024992]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1156868]:owned Error[966519] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
        const-val ret_tmp[1866922]:owned Error[966519] "temp"
        (1156870 call _cast[1064791] call_tmp[1024983] ret_tmp[1866922])
        (1866925 'move' coerce_tmp[1156868] ret_tmp[1866922])
        const-val _formal_tmp_in_err[1157047]:owned Error[966519] "dead after last mention" "expr temp" "no auto destroy" "temp"
        (1157051 'move' _formal_tmp_in_err[1157047] coerce_tmp[1156868])
        (1024994 'move' call_tmp[1024992](1024997 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1157047]))
        {
          val castedError[1843913]:Error[167984] "temp"
          (1843919 'move' castedError[1843913] call_tmp[1024992])
          (1843921 '=' error_out[1843910] castedError[1843913])
          (1877624 call chpl__autoDestroy[1562275] call_tmp[1024975])
          (1877627 call chpl__autoDestroy[1562275] call_tmp[1024959])
          (1877630 call chpl__autoDestroy[1562275] call_tmp[1024951])
          (1877633 call chpl__autoDestroy[1562538] call_tmp[1024799])
          (1877636 call chpl__autoDestroy[1635105] default_arg_region[1030100])
          (1877639 call chpl__autoDestroy[1562275] localX[1024793])
          gotoErrorHandlingReturn _end__cast[1025640] _end__cast[1025640]
        }
        (1877643 call chpl__autoDestroy[1562275] call_tmp[1024975])
        (1877646 call chpl__autoDestroy[1562275] call_tmp[1024959])
        (1877649 call chpl__autoDestroy[1562275] call_tmp[1024951])
      }
      const-val call_tmp[1025002]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1025004 'move' call_tmp[1025002](1025007 call size[32772] localX[1024793]))
      const-val call_tmp[1025010]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1025012 'move' call_tmp[1025010](1025015 call >=[1157057] call_tmp[1025002]))
      const-val call_tmp[1025018]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1025020 'move' call_tmp[1025018] call_tmp[1025010])
      if call_tmp[1025018]
      {
        const-val call_tmp[1025027]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1863222]:string[26] "temp"
        (1025032 call this[34663] localX[1024793] 0 ret_tmp[1863222])
        (1863225 'move' call_tmp[1025027] ret_tmp[1863222])
        const-val call_tmp[1025034]:range(int(64),boundedLow,false)[1087626] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1867162]:range(int(64),boundedLow,false)[1087626] "temp"
        (1025039 call chpl_build_low_bounded_range[1087019] 1 ret_tmp[1867162])
        (1867165 'move' call_tmp[1025034] ret_tmp[1867162])
        const-val call_tmp[1025041]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1867846]:string[26] "temp"
        (1025046 call this[1125623] localX[1024793] call_tmp[1025034] ret_tmp[1867846])
        (1867849 'move' call_tmp[1025041] ret_tmp[1867846])
        const-val call_tmp[1025048]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1863268]:string[26] "temp"
        (1025056 call replace[35366] call_tmp[1025041] "_" "" -1 ret_tmp[1863268])
        (1863271 'move' call_tmp[1025048] ret_tmp[1863268])
        const-val call_tmp[1025059]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1863526]:string[26] "temp"
        (1025064 call +[38345] call_tmp[1025027] call_tmp[1025048] ret_tmp[1863526])
        (1863529 'move' call_tmp[1025059] ret_tmp[1863526])
        (1025068 call =[38272] localX[1024793] call_tmp[1025059])
        (1877653 call chpl__autoDestroy[1562275] call_tmp[1025059])
        (1877656 call chpl__autoDestroy[1562275] call_tmp[1025048])
        (1877659 call chpl__autoDestroy[1562275] call_tmp[1025041])
        (1877662 call chpl__autoDestroy[1641507] call_tmp[1025034])
        (1877665 call chpl__autoDestroy[1562275] call_tmp[1025027])
      }
    }
    const-val call_tmp[1025077]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1025079 'move' call_tmp[1025077](1025085 call isEmpty[35064] localX[1024793]))
    const-val call_tmp[1025086]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1025088 'move' call_tmp[1025086] call_tmp[1025077])
    if call_tmp[1025086]
    {
      const-val call_tmp[1025111]:owned IllegalArgumentError[1064619] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      val new_temp[1203916]:IllegalArgumentError[168246] "dead after last mention" "temp"
      (1203918 'move' new_temp[1203916](1203903 call _new[1064168] "bad cast from empty string to int(64)"))
      const-val initTemp[1203925]:owned IllegalArgumentError[1064619] "dead after last mention" "delay instantiation" "temp"
      (1203928 call init[1064270] initTemp[1203925] new_temp[1203916])
      (1025113 'move' call_tmp[1025111] initTemp[1203925])
      val call_tmp[1025120]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1203942]:owned Error[966519] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1866928]:owned Error[966519] "temp"
      (1203944 call _cast[1064791] call_tmp[1025111] ret_tmp[1866928])
      (1866931 'move' coerce_tmp[1203942] ret_tmp[1866928])
      const-val _formal_tmp_in_err[1204121]:owned Error[966519] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1204125 'move' _formal_tmp_in_err[1204121] coerce_tmp[1203942])
      (1025122 'move' call_tmp[1025120](1025125 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1204121]))
      {
        val castedError[1843926]:Error[167984] "temp"
        (1843932 'move' castedError[1843926] call_tmp[1025120])
        (1843934 '=' error_out[1843910] castedError[1843926])
        (1877669 call chpl__autoDestroy[1562538] call_tmp[1024799])
        (1877672 call chpl__autoDestroy[1635105] default_arg_region[1030100])
        (1877675 call chpl__autoDestroy[1562275] localX[1024793])
        gotoErrorHandlingReturn _end__cast[1025640] _end__cast[1025640]
      }
    }
    {
      {
        {
          {
            {
              {
                const-val call_tmp[1025300]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
                (1025302 'move' call_tmp[1025300](1025308 call c_str[32935] localX[1024793]))
                const-val call_tmp[1025309]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                (1025311 'move' call_tmp[1025309](1025314 call c_string_to_int64_t[1024692] call_tmp[1025300] isErr[1024778]))
                (1205531 'move' retVal[1024772] call_tmp[1025309])
              }
            }
          }
        }
      }
    }
    const-val call_tmp[1025572]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1025574 'move' call_tmp[1025572] isErr[1024778])
    if call_tmp[1025572]
    {
      const-val call_tmp[1025581]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1863532]:string[26] "temp"
      (1025586 call +[38345] "bad cast from string '" x[1024634] ret_tmp[1863532])
      (1863535 'move' call_tmp[1025581] ret_tmp[1863532])
      const-val call_tmp[1025589]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1863538]:string[26] "temp"
      (1025594 call +[38345] call_tmp[1025581] "' to " ret_tmp[1863538])
      (1863541 'move' call_tmp[1025589] ret_tmp[1863538])
      const-val call_tmp[1025605]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1863544]:string[26] "temp"
      (1025610 call +[38345] call_tmp[1025589] "int(64)" ret_tmp[1863544])
      (1863547 'move' call_tmp[1025605] ret_tmp[1863544])
      const-val call_tmp[1025613]:owned IllegalArgumentError[1064619] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      val new_temp[1205317]:IllegalArgumentError[168246] "dead after last mention" "temp"
      (1205319 'move' new_temp[1205317](1205304 call _new[1064168] call_tmp[1025605]))
      const-val initTemp[1205326]:owned IllegalArgumentError[1064619] "dead after last mention" "delay instantiation" "temp"
      (1205329 call init[1064270] initTemp[1205326] new_temp[1205317])
      (1025615 'move' call_tmp[1025613] initTemp[1205326])
      val call_tmp[1025622]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1205343]:owned Error[966519] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1866934]:owned Error[966519] "temp"
      (1205345 call _cast[1064791] call_tmp[1025613] ret_tmp[1866934])
      (1866937 'move' coerce_tmp[1205343] ret_tmp[1866934])
      const-val _formal_tmp_in_err[1205522]:owned Error[966519] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1205526 'move' _formal_tmp_in_err[1205522] coerce_tmp[1205343])
      (1025624 'move' call_tmp[1025622](1025627 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1205522]))
      {
        val castedError[1843939]:Error[167984] "temp"
        (1843945 'move' castedError[1843939] call_tmp[1025622])
        (1843947 '=' error_out[1843910] castedError[1843939])
        (1877678 call chpl__autoDestroy[1562275] call_tmp[1025605])
        (1877681 call chpl__autoDestroy[1562275] call_tmp[1025589])
        (1877684 call chpl__autoDestroy[1562275] call_tmp[1025581])
        (1877687 call chpl__autoDestroy[1562538] call_tmp[1024799])
        (1877690 call chpl__autoDestroy[1635105] default_arg_region[1030100])
        (1877693 call chpl__autoDestroy[1562275] localX[1024793])
        gotoErrorHandlingReturn _end__cast[1025640] _end__cast[1025640]
      }
      (1877697 call chpl__autoDestroy[1562275] call_tmp[1025605])
      (1877700 call chpl__autoDestroy[1562275] call_tmp[1025589])
      (1877703 call chpl__autoDestroy[1562275] call_tmp[1025581])
    }
    (1025632 'move' ret[1024636] retVal[1024772])
    (1877706 call chpl__autoDestroy[1562538] call_tmp[1024799])
    (1877709 call chpl__autoDestroy[1635105] default_arg_region[1030100])
    (1877712 call chpl__autoDestroy[1562275] localX[1024793])
    gotoReturn _end__cast[1025640] _end__cast[1025640]
    label _end__cast[1025640]
    (1025642 return ret[1024636])
  }
  function _cast[1354358](const  ref arg x[1354362]:string[26], ref arg error_out[1846561]:Error[167984]) : uint(64)[115] throws "inline" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[1839133]:uint(64)[115] "temp"
    val ret[1354364]:uint(64)[115] "dead after last mention" "RVV" "temp"
    const-val retVal[1354500]:uint(64)[115] "dead at end of block" "insert auto destroy" "split inited"
    val isErr[1354506]:bool[10] "dead at end of block" "insert auto destroy"
    (1356374 'move' isErr[1354506] 0)
    const-val call_tmp[1354512]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1863130]:string[26] "temp"
    (1354520 call localize[32889] x[1354362] ret_tmp[1863130])
    (1863133 'move' call_tmp[1354512] ret_tmp[1863130])
    val localX[1354521]:string[26] "dead at end of block" "insert auto destroy"
    (1354523 'move' localX[1354521] call_tmp[1354512])
    const-val call_tmp[1354527]:byteIndex[28173] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val default_arg_region[1355381]:range(byteIndex,bounded,false)[1025853] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret_tmp[1866294]:range(byteIndex,bounded,false)[1025853] "temp"
    (1355383 call find_default_region[1030059] localX[1354521] ret_tmp[1866294])
    (1866297 'move' default_arg_region[1355381] ret_tmp[1866294])
    const-val ret_tmp[1866222]:byteIndex[28173] "temp"
    (1354535 call find[1025648] localX[1354521] "_" default_arg_region[1355381] ret_tmp[1866222])
    (1866225 'move' call_tmp[1354527] ret_tmp[1866222])
    const-val call_tmp[1354544]:bool[10] "dead at end of block" "maybe param" "temp"
    (1354546 'move' call_tmp[1354544](1354549 call !=[29619] call_tmp[1354527] -1))
    const-val hasUnderscores[1354552]:bool[10] "dead at end of block" "const" "insert auto destroy"
    (1354554 'move' hasUnderscores[1354552] call_tmp[1354544])
    const-val call_tmp[1354559]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1354561 'move' call_tmp[1354559] hasUnderscores[1354552])
    if call_tmp[1354559]
    {
      const-val call_tmp[1354568]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1863314]:string[26] "temp"
      (1354576 call strip[36095] localX[1354521] " \t\r\n" 1 1 ret_tmp[1863314])
      (1863317 'move' call_tmp[1354568] ret_tmp[1863314])
      (1354578 call =[38272] localX[1354521] call_tmp[1354568])
      (1882889 call chpl__autoDestroy[1562275] call_tmp[1354568])
      val numElements[1354584]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1356377 'move' numElements[1354584] 0)
      {
        val _indexOfInterest[1354591]:string[26] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1354593]:_ic_split__ref_string[1156565] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[1354595]:_ir_split__ref_string[1156571] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1863292]:_ir_split__ref_string[1156571] "temp"
        (1354603 call split[35486] localX[1354521] -1 ret_tmp[1863292])
        (1863295 'move' call_tmp[1354595] ret_tmp[1863292])
        (1354604 'move' _iterator[1354593](1354607 call _getIterator[1156580] call_tmp[1354595]))
        {
          val ret[1957034]:_ir_split__ref_string[1156571] "dead after last mention" "RVV" "temp"
          const-val call_tmp[1957036]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          ref this[1960221]:_ref(string)[938000] "temp"
          (1960226 'move' this[1960221](1960223 '.v' _iterator[1354593] F0_this[2049002]))
          (1957038 'move' call_tmp[1957036](1957041 call isASCII[31049] this[1960221]))
          const-val call_tmp[1957043]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1957045 'move' call_tmp[1957043] call_tmp[1957036])
          if call_tmp[1957036]
          {
            val _indexOfInterest[1957050]:string[26] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1957052]:_ic_doSplitWSNoEnc[1124536] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[1957054]:_ir_doSplitWSNoEnc[1124542] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[1957056]:_ir_doSplitWSNoEnc[1124542] "temp"
            ref this[1960228]:_ref(string)[938000] "temp"
            (1960233 'move' this[1960228](1960230 '.v' _iterator[1354593] F0_this[2049002]))
            const-val maxsplit[1960235]:int(64)[13] "temp"
            (1960240 'move' maxsplit[1960235](1960237 '.v' _iterator[1354593] F1_maxsplit[2049006]))
            (1957059 call doSplitWSNoEnc[1124517] this[1960228] maxsplit[1960235] ret_tmp[1957056])
            (1957063 'move' call_tmp[1957054] ret_tmp[1957056])
            (1957066 'move' _iterator[1957052](1957069 call _getIterator[1124551] call_tmp[1957054]))
            {
              val ret[1957072]:_ir_doSplitWSNoEnc[1124542] "dead at end of block" "RVV" "temp"
              val call_tmp[1957074]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[1957076]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              ref x[1957078]:_ref(string)[938000] "temp"
              (1957080 'move' x[1957078](1957082 '.v' _iterator[1957052] F0_x[2066264]))
              (1957085 'move' call_tmp[1957076](1957088 call isEmpty[35064] x[1957078]))
              const-val call_tmp[1957090]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1957092 'move' call_tmp[1957090](1957095 call ![7494] call_tmp[1957076]))
              const-val call_tmp[1957097]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1957099 'move' call_tmp[1957097] call_tmp[1957090])
              if call_tmp[1957090]
              {
                const-val call_tmp[1957104]:string[26] "dead at end of block" "maybe param" "temp"
                const-val ret_tmp[1957106]:string[26] "temp"
                ref x[1957108]:_ref(string)[938000] "temp"
                (1957110 'move' x[1957108](1957112 '.v' _iterator[1957052] F0_x[2066264]))
                (1957116 call localize[32889] x[1957108] ret_tmp[1957106])
                (1957119 'move' call_tmp[1957104] ret_tmp[1957106])
                val call_tmp[1957122]:string[26] "dead after last mention" "maybe param" "temp" "type variable"
                const localx[1957124]:string[26] "dead at end of block" "const" "insert auto destroy"
                (1957126 'move' localx[1957124] call_tmp[1957104])
                val done[1957129]:bool[10] "dead at end of block" "insert auto destroy"
                (1957131 'move' done[1957129] 0)
                val yieldChunk[1957134]:bool[10] "dead at end of block" "insert auto destroy"
                (1957136 'move' yieldChunk[1957134] 0)
                val chunk[1957139]:string[26] "dead at end of block" "insert auto destroy"
                val call_tmp[1957141]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1957144 call init[30763] chunk[1957139])
                const-val call_tmp[1957146]:bool[10] "dead at end of block" "maybe param" "temp"
                const-val maxsplit[1957148]:int(64)[13] "temp"
                (1957150 'move' maxsplit[1957148](1957152 '.v' _iterator[1957052] F1_maxsplit[2066268]))
                (1957155 'move' call_tmp[1957146](1957158 call ==[435671] maxsplit[1957148] 0))
                const-val noSplits[1957161]:bool[10] "dead at end of block" "const" "insert auto destroy"
                (1957163 'move' noSplits[1957161] call_tmp[1957146])
                const-val call_tmp[1957166]:bool[10] "dead at end of block" "maybe param" "temp"
                const-val maxsplit[1957168]:int(64)[13] "temp"
                (1957170 'move' maxsplit[1957168](1957172 '.v' _iterator[1957052] F1_maxsplit[2066268]))
                (1957175 'move' call_tmp[1957166](1957178 call >[437715] maxsplit[1957168] 0))
                const-val limitSplits[1957181]:bool[10] "dead at end of block" "const" "insert auto destroy"
                (1957183 'move' limitSplits[1957181] call_tmp[1957166])
                val splitCount[1957186]:int(64)[13] "dead at end of block" "insert auto destroy"
                (1957188 'move' splitCount[1957186] 0)
                ref call_tmp[1957191]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1957193 'move' call_tmp[1957191](1957196 call buffLen[757947] localx[1957124]))
                const-val call_tmp[1957198]:int(64)[13] "dead at end of block" "maybe param" "temp"
                const-val coerce_tmp[1957200]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1957202 'move' coerce_tmp[1957200](1957204 'deref' call_tmp[1957191]))
                (1957206 'move' call_tmp[1957198](1957209 call -[1125499] coerce_tmp[1957200]))
                const-val iEnd[1957211]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                (1957213 'move' iEnd[1957211] call_tmp[1957198])
                val inChunk[1957216]:bool[10] "dead at end of block" "insert auto destroy"
                (1957218 'move' inChunk[1957216] 0)
                val chunkStart[1957221]:int(64)[13] "dead at end of block" "insert auto destroy"
                (1957223 'move' chunkStart[1957221] 0)
                const-val _iterator[1957228]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108627] "dead at end of block" "expr temp" "insert auto destroy" "temp"
                const-val call_tmp[1957230]:range(int(64),bounded,false)[1026875] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1957232]:range(int(64),bounded,false)[1026875] "temp"
                ref x[1957234]:_ref(string)[938000] "temp"
                (1957236 'move' x[1957234](1957238 '.v' _iterator[1957052] F0_x[2066264]))
                (1957242 call indices[32788] x[1957234] ret_tmp[1957232])
                (1957245 'move' call_tmp[1957230] ret_tmp[1957232])
                val call_tmp[1957248]:_ic_these_range_int64_t_bounded_F[1096764] "dead at end of block" "expr temp" "maybe param" "temp"
                (1957250 'move' call_tmp[1957248](1957253 call _getIterator[1095381] call_tmp[1957230]))
                const-val call_tmp[1957255]:_ir_chpl_bytes__ref_string[1108323] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[1957257]:_ir_chpl_bytes__ref_string[1108323] "temp"
                (1957260 call chpl_bytes[33577] localx[1957124] ret_tmp[1957257])
                (1957263 'move' call_tmp[1957255] ret_tmp[1957257])
                val call_tmp[1957266]:_ic_chpl_bytes__ref_string[1108317] "dead at end of block" "expr temp" "maybe param" "temp"
                (1957268 'move' call_tmp[1957266](1957271 call _getIterator[1108332] call_tmp[1957255]))
                const-val ret_tmp[1957273]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108627] "temp"
                (1957276 call _build_tuple[1108585] call_tmp[1957248] call_tmp[1957266] ret_tmp[1957273])
                (1957280 'move' _iterator[1957228] ret_tmp[1957273])
                val _iterator[2025009]:_ic_these_range_int64_t_bounded_F[1096764] "temp"
                (2025015 'move' _iterator[2025009](2025012 '.v' _iterator[1957228] x0[1108623]))
                val _iterator[2025022]:_ic_chpl_bytes__ref_string[1108317] "temp"
                (2025028 'move' _iterator[2025022](2025025 '.v' _iterator[1957228] x1[1108625]))
                {
                  (2025037 call zip1[1096799] _iterator[2025009])
                }
                {
                  (2025072 call zip1[1108352] _iterator[2025022])
                }
                const-val isFinished[2025098]:bool[10] "temp"
                val hasMore[2025097]:bool[10] "temp"
                CForLoop[2025145]
                {
                  val _indexOfInterest[2025146]:(int(64),uint(8))[1111101] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                  {
                    (2025150 call zip2[1108361] _iterator[2025022])
                  }
                  {
                    const-val retTmp[2025153]:int(64)[13] "temp"
                    (2025155 'move' retTmp[2025153](2025158 call hasMore[1108388] _iterator[2025022]))
                    (2025160 'move' hasMore[2025097](2025162 'cast' bool[10] retTmp[2025153]))
                  }
                  (2025165 'move' isFinished[2025098](2025167 '!' hasMore[2025097]))
                  if isFinished[2025098]
                  {
                    (2025171 'chpl_error' c"zippered iterations have non-equal lengths")
                  }
                  {
                    (2025175 'move' _index[2025190](2025178 call getValue[1108397] _iterator[2025022]))
                  }
                  {
                    (2025182 call zip2[1096808] _iterator[2025009])
                  }
                  {
                    (2025185 'move' _index[2025196](2025188 call getValue[1096844] _iterator[2025009]))
                  }
                  val _index[2025190]:uint(8)[100] "temp"
                  (2025192 '.=' _indexOfInterest[2025146] x1[1111099] _index[2025190])
                  val _index[2025196]:int(64)[13] "temp"
                  (2025198 '.=' _indexOfInterest[2025146] x0[1111097] _index[2025196])
                  1
                  const-val i[2025203]:int(64)[13] "const" "index var" "insert auto destroy"
                  (2025205 'move' i[2025203](2025207 '.v' _indexOfInterest[2025146] x0[1111097]))
                  const-val c[2025210]:uint(8)[100] "const" "index var" "insert auto destroy"
                  (2025212 'move' c[2025210](2025214 '.v' _indexOfInterest[2025146] x1[1111099]))
                  const-val call_tmp[2025217]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2025219 'move' call_tmp[2025217] noSplits[1957161])
                  if noSplits[1957161]
                  {
                    (2025225 call =[435217] done[1957129] 1)
                    const-val call_tmp[2025228]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2025230 'move' call_tmp[2025228](2025233 call isSpace[36843] localx[1957124]))
                    const-val call_tmp[2025235]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2025237 'move' call_tmp[2025235](2025240 call ![7494] call_tmp[2025228]))
                    const-val call_tmp[2025242]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2025244 'move' call_tmp[2025242] call_tmp[2025235])
                    if call_tmp[2025235]
                    {
                      (2025250 call =[38272] chunk[1957139] localx[1957124])
                      (2025254 call =[435217] yieldChunk[1957134] 1)
                    }
                  }
                  {
                    const-val call_tmp[2025259]:bool[10] "dead at end of block" "maybe param" "temp"
                    (2025261 'move' call_tmp[2025259](2025264 call byte_isWhitespace[181655] c[2025210]))
                    const-val cSpace[2025266]:bool[10] "dead at end of block" "insert auto destroy"
                    (2025268 'move' cSpace[2025266] call_tmp[2025259])
                    const-val tmp[2025271]:bool[10] "dead after last mention" "maybe param" "temp"
                    (2025273 'move' tmp[2025271] inChunk[1957216])
                    val tmp[2025276]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                    const-val tmp[2025278]:bool[10] "dead after last mention" "maybe param" "temp"
                    const-val call_tmp[2025280]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2025282 'move' call_tmp[2025280] inChunk[1957216])
                    (2025285 'move' tmp[2025278] inChunk[1957216])
                    if inChunk[1957216]
                    {
                      (2025290 'move' tmp[2025276] 1)
                    }
                    {
                      const-val tmp[2025294]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                      (2025296 'move' tmp[2025294] cSpace[2025266])
                      (2025299 'move' tmp[2025276] cSpace[2025266])
                    }
                    const-val call_tmp[2025303]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2025305 'move' call_tmp[2025303](2025308 call ![7494] tmp[2025276]))
                    const-val call_tmp[2025310]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2025312 'move' call_tmp[2025310] call_tmp[2025303])
                    if call_tmp[2025303]
                    {
                      (2025318 call =[435370] chunkStart[1957221] i[2025203])
                      (2025322 call =[435217] inChunk[1957216] 1)
                      const-val call_tmp[2025325]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (2025327 'move' call_tmp[2025325](2025330 call >[437715] i[2025203] iEnd[1957211]))
                      const-val call_tmp[2025333]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (2025335 'move' call_tmp[2025333] call_tmp[2025325])
                      if call_tmp[2025325]
                      {
                        const-val call_tmp[2025340]:range(int(64),boundedLow,false)[1087626] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val ret_tmp[2025342]:range(int(64),boundedLow,false)[1087626] "temp"
                        (2025345 call chpl_build_low_bounded_range[1087019] chunkStart[1957221] ret_tmp[2025342])
                        (2025348 'move' call_tmp[2025340] ret_tmp[2025342])
                        const-val call_tmp[2025351]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val ret_tmp[2025353]:string[26] "temp"
                        (2025356 call this[1125623] localx[1957124] call_tmp[2025340] ret_tmp[2025353])
                        (2025360 'move' call_tmp[2025351] ret_tmp[2025353])
                        (2025364 call =[38272] chunk[1957139] call_tmp[2025351])
                        (2025368 call chpl__autoDestroy[1562275] call_tmp[2025351])
                        (2025371 call chpl__autoDestroy[1641507] call_tmp[2025340])
                        (2025374 call =[435217] yieldChunk[1957134] 1)
                        (2025378 call =[435217] done[1957129] 1)
                      }
                    }
                    {
                      const-val call_tmp[2025383]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (2025385 'move' call_tmp[2025383] inChunk[1957216])
                      if call_tmp[2025383]
                      {
                        const-val call_tmp[2025390]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (2025392 'move' call_tmp[2025390] cSpace[2025266])
                        if cSpace[2025266]
                        {
                          (2025398 call +=[451358] splitCount[1957186] 1)
                          const-val tmp[2025401]:bool[10] "dead after last mention" "maybe param" "temp"
                          (2025403 'move' tmp[2025401] limitSplits[1957181])
                          val tmp[2025406]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                          const-val tmp[2025408]:bool[10] "dead after last mention" "maybe param" "temp"
                          const-val call_tmp[2025410]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (2025412 'move' call_tmp[2025410] limitSplits[1957181])
                          (2025415 'move' tmp[2025408] limitSplits[1957181])
                          if limitSplits[1957181]
                          {
                            const-val tmp[2025420]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                            const-val call_tmp[2025422]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val maxsplit[2025424]:int(64)[13] "temp"
                            (2025426 'move' maxsplit[2025424](2025428 '.v' _iterator[1957052] F1_maxsplit[2066268]))
                            (2025431 'move' call_tmp[2025422](2025434 call >[437715] splitCount[1957186] maxsplit[2025424]))
                            (2025437 'move' tmp[2025420] call_tmp[2025422])
                            (2025440 'move' tmp[2025406] call_tmp[2025422])
                          }
                          {
                            (2025444 'move' tmp[2025406] 0)
                          }
                          const-val call_tmp[2025448]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (2025450 'move' call_tmp[2025448] tmp[2025406])
                          if tmp[2025406]
                          {
                            const-val call_tmp[2025455]:range(int(64),boundedLow,false)[1087626] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[2025457]:range(int(64),boundedLow,false)[1087626] "temp"
                            (2025460 call chpl_build_low_bounded_range[1087019] chunkStart[1957221] ret_tmp[2025457])
                            (2025463 'move' call_tmp[2025455] ret_tmp[2025457])
                            const-val call_tmp[2025466]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[2025468]:string[26] "temp"
                            (2025471 call this[1125623] localx[1957124] call_tmp[2025455] ret_tmp[2025468])
                            (2025475 'move' call_tmp[2025466] ret_tmp[2025468])
                            (2025479 call =[38272] chunk[1957139] call_tmp[2025466])
                            (2025483 call chpl__autoDestroy[1562275] call_tmp[2025466])
                            (2025486 call chpl__autoDestroy[1641507] call_tmp[2025455])
                            (2025489 call =[435217] yieldChunk[1957134] 1)
                            (2025493 call =[435217] done[1957129] 1)
                          }
                          {
                            const-val call_tmp[2025497]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                            (2025499 'move' call_tmp[2025497](2025502 call -[962287] i[2025203]))
                            const-val call_tmp[2025504]:range(int(64),bounded,false)[1026875] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[2025506]:range(int(64),bounded,false)[1026875] "temp"
                            (2025509 call chpl_build_bounded_range[455180] chunkStart[1957221] call_tmp[2025497] ret_tmp[2025506])
                            (2025513 'move' call_tmp[2025504] ret_tmp[2025506])
                            const-val call_tmp[2025516]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[2025518]:string[26] "temp"
                            (2025521 call this[1111427] localx[1957124] call_tmp[2025504] ret_tmp[2025518])
                            (2025525 'move' call_tmp[2025516] ret_tmp[2025518])
                            (2025529 call =[38272] chunk[1957139] call_tmp[2025516])
                            (2025533 call chpl__autoDestroy[1562275] call_tmp[2025516])
                            (2025536 call chpl__autoDestroy[1383553] call_tmp[2025504])
                            (2025539 call =[435217] yieldChunk[1957134] 1)
                            (2025543 call =[435217] inChunk[1957216] 0)
                          }
                        }
                        {
                          const-val call_tmp[2025548]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (2025550 'move' call_tmp[2025548](2025553 call >[437715] i[2025203] iEnd[1957211]))
                          const-val call_tmp[2025556]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (2025558 'move' call_tmp[2025556] call_tmp[2025548])
                          if call_tmp[2025548]
                          {
                            const-val call_tmp[2025563]:range(int(64),boundedLow,false)[1087626] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[2025565]:range(int(64),boundedLow,false)[1087626] "temp"
                            (2025568 call chpl_build_low_bounded_range[1087019] chunkStart[1957221] ret_tmp[2025565])
                            (2025571 'move' call_tmp[2025563] ret_tmp[2025565])
                            const-val call_tmp[2025574]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[2025576]:string[26] "temp"
                            (2025579 call this[1125623] localx[1957124] call_tmp[2025563] ret_tmp[2025576])
                            (2025583 'move' call_tmp[2025574] ret_tmp[2025576])
                            (2025587 call =[38272] chunk[1957139] call_tmp[2025574])
                            (2025591 call chpl__autoDestroy[1562275] call_tmp[2025574])
                            (2025594 call chpl__autoDestroy[1641507] call_tmp[2025563])
                            (2025597 call =[435217] yieldChunk[1957134] 1)
                            (2025601 call =[435217] done[1957129] 1)
                          }
                        }
                      }
                    }
                  }
                  const-val call_tmp[2025609]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2025611 'move' call_tmp[2025609] yieldChunk[1957134])
                  if call_tmp[2025609]
                  {
                    const-val yret[2025616]:string[26] "dead after last mention" "YVV" "temp"
                    val call_tmp[2025618]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    const-val _yield_expr_tmp_[2025620]:string[26] "temp"
                    (2025622 'move' _yield_expr_tmp_[2025620](2025625 call chpl__initCopy[981409] chunk[1957139]))
                    (2025627 'move' yret[2025616] _yield_expr_tmp_[2025620])
                    const-val _yieldedIndex[2025630]:string[26] "temp"
                    (2025632 'move' _yieldedIndex[2025630] _yield_expr_tmp_[2025620])
                    {
                      const-val s[2025636]:string[26] "const" "index var" "insert auto destroy"
                      (2025638 'move' s[2025636] _yieldedIndex[2025630])
                      const-val yret[2025641]:string[26] "dead after last mention" "YVV" "temp"
                      const-val _yield_expr_tmp_[2025643]:string[26] "temp"
                      (2025645 'move' _yield_expr_tmp_[2025643](2025648 call chpl__initCopy[981409] s[2025636]))
                      (2025650 'move' yret[2025641] _yield_expr_tmp_[2025643])
                      const-val _yieldedIndex[2025653]:string[26] "temp"
                      (2025655 'move' _yieldedIndex[2025653] _yield_expr_tmp_[2025643])
                      {
                        const-val chpl__elidedIdx[2025659]:string[26] "const" "index var" "insert auto destroy"
                        (2025661 'move' chpl__elidedIdx[2025659] _yieldedIndex[2025653])
                        {
                          (2025666 call +=[451358] numElements[1354584] 1)
                          const-val call_tmp[2025669]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (2025671 'move' call_tmp[2025669](2025674 call >[437715] numElements[1354584] 1))
                          const-val call_tmp[2025677]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (2025679 'move' call_tmp[2025677] call_tmp[2025669])
                          if call_tmp[2025677]
                          {
                            (2025685 call chpl__autoDestroy[1562275] chpl__elidedIdx[2025659])
                            ref moreRef1[2025792]:_ref(int(64))[936633] "temp"
                            (2025794 'move' moreRef1[2025792](2025796 '.' _iterator[2025009] more[1096767]))
                            const-val moreVal1[2025799]:int(64)[13] "const" "temp"
                            (2025801 '=' moreVal1[2025799] moreRef1[2025792])
                            const-val moreValNeg1[2025804]:int(64)[13] "const" "temp"
                            (2025806 'move' moreValNeg1[2025804](2025808 'u-' moreVal1[2025799]))
                            (2025810 '=' moreRef1[2025792] moreValNeg1[2025804])
                            (2025814 call advance[1096790] _iterator[2025009])
                            ref moreRef2[2025816]:_ref(int(64))[936633] "temp"
                            (2025818 'move' moreRef2[2025816](2025820 '.' _iterator[2025022] more[1108320]))
                            const-val moreVal2[2025823]:int(64)[13] "const" "temp"
                            (2025825 '=' moreVal2[2025823] moreRef2[2025816])
                            const-val moreValNeg2[2025828]:int(64)[13] "const" "temp"
                            (2025830 'move' moreValNeg2[2025828](2025832 'u-' moreVal2[2025823]))
                            (2025834 '=' moreRef2[2025816] moreValNeg2[2025828])
                            (2025838 call advance[1108343] _iterator[2025022])
                            (2025688 call _freeIterator[1108785] _iterator[1957228])
                            (2025691 call chpl__autoDestroy[1642180] _iterator[1957228])
                            (2025694 call chpl__autoDestroy[1383553] call_tmp[1957230])
                            (2025697 call chpl__autoDestroy[1562275] chunk[1957139])
                            (2025700 call chpl__autoDestroy[1562275] localx[1957124])
                            (2025703 call chpl__autoDestroy[1562275] s[2025636])
                            (2025706 call _freeIterator[1142636] _iterator[1957052])
                            break _breakLabel[1354660] _breakLabel[1354660]
                          }
                        }
                        label _continueLabel[2025711]
                        (2025714 call chpl__autoDestroy[1562275] chpl__elidedIdx[2025659])
                      }
                      (2025717 call chpl__autoDestroy[1562275] s[2025636])
                    }
                    (2025720 call =[435217] yieldChunk[1957134] 0)
                  }
                  const-val call_tmp[2025724]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2025726 'move' call_tmp[2025724] done[1957129])
                  if call_tmp[2025724]
                  {
                    ref moreRef1[2025841]:_ref(int(64))[936633] "temp"
                    (2025843 'move' moreRef1[2025841](2025845 '.' _iterator[2025009] more[1096767]))
                    const-val moreVal1[2025848]:int(64)[13] "const" "temp"
                    (2025850 '=' moreVal1[2025848] moreRef1[2025841])
                    const-val moreValNeg1[2025853]:int(64)[13] "const" "temp"
                    (2025855 'move' moreValNeg1[2025853](2025857 'u-' moreVal1[2025848]))
                    (2025859 '=' moreRef1[2025841] moreValNeg1[2025853])
                    (2025863 call advance[1096790] _iterator[2025009])
                    ref moreRef2[2025865]:_ref(int(64))[936633] "temp"
                    (2025867 'move' moreRef2[2025865](2025869 '.' _iterator[2025022] more[1108320]))
                    const-val moreVal2[2025872]:int(64)[13] "const" "temp"
                    (2025874 '=' moreVal2[2025872] moreRef2[2025865])
                    const-val moreValNeg2[2025877]:int(64)[13] "const" "temp"
                    (2025879 'move' moreValNeg2[2025877](2025881 'u-' moreVal2[2025872]))
                    (2025883 '=' moreRef2[2025865] moreValNeg2[2025877])
                    (2025887 call advance[1108343] _iterator[2025022])
                    break _breakLabel[1957783] _breakLabel[1957783]
                  }
                  {
                    (2025736 call zip3[1096817] _iterator[2025009])
                  }
                  {
                    (2025740 call zip3[1108370] _iterator[2025022])
                  }
                  {
                    {
                      (2025047 call init[1096853] _iterator[2025009])
                    }
                    {
                      (2025082 call init[1108406] _iterator[2025022])
                    }
                  }
                  {
                    (2025063 call hasMore[1096835] _iterator[2025009])
                  }
                  {
                    {
                      (2025051 call incr[1096862] _iterator[2025009])
                    }
                    {
                      (2025086 call incr[1108415] _iterator[2025022])
                    }
                  }
                }
                {
                  const-val retTmp[2025132]:int(64)[13] "temp"
                  (2025134 'move' retTmp[2025132](2025129 call hasMore[1108388] _iterator[2025022]))
                  (2025139 'move' hasMore[2025097](2025136 'cast' bool[10] retTmp[2025132]))
                }
                if hasMore[2025097]
                {
                  (2025124 'chpl_error' c"zippered iterations have non-equal lengths")
                }
                {
                  (2025094 call zip4[1108379] _iterator[2025022])
                }
                {
                  (2025059 call zip4[1096826] _iterator[2025009])
                }
                label _breakLabel[1957783]
                (1957786 call _freeIterator[1108785] _iterator[1957228])
                (1957789 call chpl__autoDestroy[1642180] _iterator[1957228])
                (1957792 call chpl__autoDestroy[1383553] call_tmp[1957230])
                (1957795 call chpl__autoDestroy[1562275] chunk[1957139])
                (1957798 call chpl__autoDestroy[1562275] localx[1957124])
              }
              label _enddoSplitWSNoEnc[1957801]
            }
            (1957804 call _freeIterator[1142636] _iterator[1957052])
          }
          {
            const-val call_tmp[1957807]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            ref this[1960242]:_ref(string)[938000] "temp"
            (1960247 'move' this[1960242](1960244 '.v' _iterator[1354593] F0_this[2049002]))
            (1957809 'move' call_tmp[1957807](1957812 call isEmpty[35064] this[1960242]))
            const-val call_tmp[1957814]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1957816 'move' call_tmp[1957814](1957819 call ![7494] call_tmp[1957807]))
            const-val call_tmp[1957821]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1957823 'move' call_tmp[1957821] call_tmp[1957814])
            if call_tmp[1957814]
            {
              const-val call_tmp[1957828]:string[26] "dead at end of block" "maybe param" "temp"
              const-val ret_tmp[1957830]:string[26] "temp"
              ref this[1960249]:_ref(string)[938000] "temp"
              (1960254 'move' this[1960249](1960251 '.v' _iterator[1354593] F0_this[2049002]))
              (1957833 call localize[32889] this[1960249] ret_tmp[1957830])
              (1957836 'move' call_tmp[1957828] ret_tmp[1957830])
              const localThis[1957839]:string[26] "dead at end of block" "const" "insert auto destroy"
              (1957841 'move' localThis[1957839] call_tmp[1957828])
              val done[1957844]:bool[10] "dead at end of block" "insert auto destroy"
              (1957846 'move' done[1957844] 0)
              val yieldChunk[1957849]:bool[10] "dead at end of block" "insert auto destroy"
              (1957851 'move' yieldChunk[1957849] 0)
              val chunk[1957854]:string[26] "dead at end of block" "insert auto destroy"
              (1957857 call init[30763] chunk[1957854])
              const-val call_tmp[1957859]:bool[10] "dead at end of block" "maybe param" "temp"
              const-val maxsplit[1960256]:int(64)[13] "temp"
              (1960261 'move' maxsplit[1960256](1960258 '.v' _iterator[1354593] F1_maxsplit[2049006]))
              (1957861 'move' call_tmp[1957859](1957864 call ==[435671] maxsplit[1960256] 0))
              const-val noSplits[1957867]:bool[10] "dead at end of block" "const" "insert auto destroy"
              (1957869 'move' noSplits[1957867] call_tmp[1957859])
              const-val call_tmp[1957872]:bool[10] "dead at end of block" "maybe param" "temp"
              const-val maxsplit[1960263]:int(64)[13] "temp"
              (1960268 'move' maxsplit[1960263](1960265 '.v' _iterator[1354593] F1_maxsplit[2049006]))
              (1957874 'move' call_tmp[1957872](1957877 call >[437715] maxsplit[1960263] 0))
              const-val limitSplits[1957880]:bool[10] "dead at end of block" "const" "insert auto destroy"
              (1957882 'move' limitSplits[1957880] call_tmp[1957872])
              val splitCount[1957885]:int(64)[13] "dead at end of block" "insert auto destroy"
              (1957887 'move' splitCount[1957885] 0)
              ref call_tmp[1957890]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
              (1957892 'move' call_tmp[1957890](1957895 call buffLen[757947] localThis[1957839]))
              const-val call_tmp[1957897]:int(64)[13] "dead at end of block" "insert auto destroy" "maybe param" "temp"
              const-val coerce_tmp[1957899]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1957901 'move' coerce_tmp[1957899](1957903 'deref' call_tmp[1957890]))
              (1957905 'move' call_tmp[1957897](1957908 call -[1125499] coerce_tmp[1957899]))
              const-val iEnd[1957910]:byteIndex[28173] "dead at end of block" "const" "insert auto destroy"
              (1957913 call init=[28148] iEnd[1957910] call_tmp[1957897])
              val inChunk[1957916]:bool[10] "dead at end of block" "insert auto destroy"
              (1957918 'move' inChunk[1957916] 0)
              val chunkStart[1957921]:byteIndex[28173] "dead at end of block" "insert auto destroy"
              (1957924 call init[28100] chunkStart[1957921])
              val _indexOfInterest[1957926]:(int(32),byteIndex,int(64))[1122203] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[1957928]:_ic__cpIndexLen__ref_string[1122446] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[1957930]:_ir__cpIndexLen__ref_string[1122452] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val default_arg_start[1957932]:byteIndex[28173] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
              const-val ret_tmp[1957934]:byteIndex[28173] "temp"
              (1957937 call _cpIndexLen_default_start[1122092] localThis[1957839] ret_tmp[1957934])
              (1957940 'move' default_arg_start[1957932] ret_tmp[1957934])
              const-val ret_tmp[1957943]:_ir__cpIndexLen__ref_string[1122452] "temp"
              (1957946 call _cpIndexLen[31109] localThis[1957839] default_arg_start[1957932] ret_tmp[1957943])
              (1957950 'move' call_tmp[1957930] ret_tmp[1957943])
              (1957953 'move' _iterator[1957928](1957956 call _getIterator[1122461] call_tmp[1957930]))
              {
                val ret[1957959]:_ir__cpIndexLen__ref_string[1122452] "dead after last mention" "RVV" "temp"
                const-val call_tmp[1957961]:string[26] "dead at end of block" "maybe param" "temp"
                const-val ret_tmp[1957963]:string[26] "temp"
                ref this[1957965]:_ref(string)[938000] "temp"
                (1957967 'move' this[1957965](1957969 '.v' _iterator[1957928] F0_this[2044776]))
                (1957973 call localize[32889] this[1957965] ret_tmp[1957963])
                (1957976 'move' call_tmp[1957961] ret_tmp[1957963])
                val localThis[1957979]:string[26] "dead at end of block" "insert auto destroy"
                (1957981 'move' localThis[1957979] call_tmp[1957961])
                const-val call_tmp[1957984]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1957986 'move' call_tmp[1957984](1957989 call isASCII[31049] localThis[1957979]))
                const-val call_tmp[1957991]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1957993 'move' call_tmp[1957991] call_tmp[1957984])
                if call_tmp[1957984]
                {
                  const-val _iterator[1957998]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108627] "dead at end of block" "expr temp" "insert auto destroy" "temp"
                  const-val call_tmp[1958000]:range(int(64),bounded,false)[1026875] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
                  const-val ret_tmp[1958002]:range(int(64),bounded,false)[1026875] "temp"
                  ref this[1958004]:_ref(string)[938000] "temp"
                  (1958006 'move' this[1958004](1958008 '.v' _iterator[1957928] F0_this[2044776]))
                  (1958012 call byteIndices[31068] this[1958004] ret_tmp[1958002])
                  (1958015 'move' call_tmp[1958000] ret_tmp[1958002])
                  val call_tmp[1958018]:_ic_these_range_int64_t_bounded_F[1096764] "dead at end of block" "expr temp" "maybe param" "temp"
                  (1958020 'move' call_tmp[1958018](1958023 call _getIterator[1095381] call_tmp[1958000]))
                  const-val call_tmp[1958025]:_ir_chpl_bytes__ref_string[1108323] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val ret_tmp[1958027]:_ir_chpl_bytes__ref_string[1108323] "temp"
                  ref this[1958029]:_ref(string)[938000] "temp"
                  (1958031 'move' this[1958029](1958033 '.v' _iterator[1957928] F0_this[2044776]))
                  (1958037 call chpl_bytes[33577] this[1958029] ret_tmp[1958027])
                  (1958040 'move' call_tmp[1958025] ret_tmp[1958027])
                  val call_tmp[1958043]:_ic_chpl_bytes__ref_string[1108317] "dead at end of block" "expr temp" "maybe param" "temp"
                  (1958045 'move' call_tmp[1958043](1958048 call _getIterator[1108332] call_tmp[1958025]))
                  const-val ret_tmp[1958050]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108627] "temp"
                  (1958053 call _build_tuple[1108585] call_tmp[1958018] call_tmp[1958043] ret_tmp[1958050])
                  (1958057 'move' _iterator[1957998] ret_tmp[1958050])
                  val _iterator[1958060]:_ic_these_range_int64_t_bounded_F[1096764] "temp"
                  (1958062 'move' _iterator[1958060](1958064 '.v' _iterator[1957998] x0[1108623]))
                  val _iterator[1958067]:_ic_chpl_bytes__ref_string[1108317] "temp"
                  (1958069 'move' _iterator[1958067](1958071 '.v' _iterator[1957998] x1[1108625]))
                  {
                    (1958076 call zip1[1096799] _iterator[1958060])
                  }
                  {
                    (1958080 call zip1[1108352] _iterator[1958067])
                  }
                  const-val isFinished[1958082]:bool[10] "temp"
                  val hasMore[1958084]:bool[10] "temp"
                  CForLoop[1958086]
                  {
                    val _indexOfInterest[1958109]:(int(64),uint(8))[1111101] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    {
                      (1958113 call zip2[1108361] _iterator[1958067])
                    }
                    {
                      const-val retTmp[1958116]:int(64)[13] "temp"
                      (1958118 'move' retTmp[1958116](1958121 call hasMore[1108388] _iterator[1958067]))
                      (1958123 'move' hasMore[1958084](1958125 'cast' bool[10] retTmp[1958116]))
                    }
                    (1958128 'move' isFinished[1958082](1958130 '!' hasMore[1958084]))
                    if isFinished[1958082]
                    {
                      (1958134 'chpl_error' c"zippered iterations have non-equal lengths")
                    }
                    {
                      (1958138 'move' _index[1958153](1958141 call getValue[1108397] _iterator[1958067]))
                    }
                    {
                      (1958145 call zip2[1096808] _iterator[1958060])
                    }
                    {
                      (1958148 'move' _index[1958159](1958151 call getValue[1096844] _iterator[1958060]))
                    }
                    val _index[1958153]:uint(8)[100] "temp"
                    (1958155 '.=' _indexOfInterest[1958109] x1[1111099] _index[1958153])
                    val _index[1958159]:int(64)[13] "temp"
                    (1958161 '.=' _indexOfInterest[1958109] x0[1111097] _index[1958159])
                    1
                    const-val i[1958166]:int(64)[13] "const" "index var" "insert auto destroy"
                    (1958168 'move' i[1958166](1958170 '.v' _indexOfInterest[1958109] x0[1111097]))
                    const-val b[1958173]:uint(8)[100] "const" "index var" "insert auto destroy"
                    (1958175 'move' b[1958173](1958177 '.v' _indexOfInterest[1958109] x1[1111099]))
                    const-val yret[1958180]:(int(32),byteIndex,int(64))[1122203] "dead after last mention" "YVV" "temp"
                    val call_tmp[1958182]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    const-val call_tmp[1958184]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1958186 'move' call_tmp[1958184](1958188 'cast' int(32)[95] b[1958173]))
                    const-val call_tmp[1958191]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1958193]:byteIndex[28173] "temp"
                    (1958196 call _cast[39486] i[1958166] ret_tmp[1958193])
                    (1958199 'move' call_tmp[1958191] ret_tmp[1958193])
                    const-val call_tmp[1958202]:(int(32),byteIndex,int(64))[1122203] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1958204]:(int(32),byteIndex,int(64))[1122203] "temp"
                    (1958207 call _build_tuple[1122153] call_tmp[1958184] call_tmp[1958191] 1 ret_tmp[1958204])
                    (1958212 'move' call_tmp[1958202] ret_tmp[1958204])
                    (1958215 'move' yret[1958180] call_tmp[1958202])
                    const-val _yieldedIndex[1958218]:(int(32),byteIndex,int(64))[1122203] "temp"
                    (1958220 'move' _yieldedIndex[1958218] call_tmp[1958202])
                    {
                      1
                      const-val c[1958225]:int(32)[95] "const" "index var" "insert auto destroy"
                      (1958227 'move' c[1958225](1958229 '.v' _yieldedIndex[1958218] x0[1122197]))
                      ref i[1958232]:_ref(byteIndex)[948820] "index var" "insert auto destroy"
                      (1958234 'move' i[1958232](1958236 '.v' _yieldedIndex[1958218] x1[1122199]))
                      const-val nBytes[1958239]:int(64)[13] "const" "index var" "insert auto destroy"
                      (1958241 'move' nBytes[1958239](1958243 '.v' _yieldedIndex[1958218] x2[1122201]))
                      const-val call_tmp[1958246]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1958248 'move' call_tmp[1958246] noSplits[1957867])
                      if noSplits[1957867]
                      {
                        (1958254 call =[435217] done[1957844] 1)
                        const-val call_tmp[1958257]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1958259 'move' call_tmp[1958257](1958262 call isSpace[36843] localThis[1957839]))
                        const-val call_tmp[1958264]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1958266 'move' call_tmp[1958264](1958269 call ![7494] call_tmp[1958257]))
                        const-val call_tmp[1958271]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1958273 'move' call_tmp[1958271] call_tmp[1958264])
                        if call_tmp[1958264]
                        {
                          (1958279 call =[38272] chunk[1957854] localThis[1957839])
                          (1958283 call =[435217] yieldChunk[1957849] 1)
                        }
                      }
                      {
                        const-val call_tmp[1958288]:bool[10] "dead at end of block" "maybe param" "temp"
                        (1958290 'move' call_tmp[1958288](1958293 call codepoint_isWhitespace[39156] c[1958225]))
                        const-val cSpace[1958295]:bool[10] "dead at end of block" "insert auto destroy"
                        (1958297 'move' cSpace[1958295] call_tmp[1958288])
                        const-val tmp[1958300]:bool[10] "dead after last mention" "maybe param" "temp"
                        (1958302 'move' tmp[1958300] inChunk[1957916])
                        val tmp[1958305]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                        const-val tmp[1958307]:bool[10] "dead after last mention" "maybe param" "temp"
                        const-val call_tmp[1958309]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1958311 'move' call_tmp[1958309] inChunk[1957916])
                        (1958314 'move' tmp[1958307] inChunk[1957916])
                        if inChunk[1957916]
                        {
                          (1958319 'move' tmp[1958305] 1)
                        }
                        {
                          const-val tmp[1958323]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                          (1958325 'move' tmp[1958323] cSpace[1958295])
                          (1958328 'move' tmp[1958305] cSpace[1958295])
                        }
                        const-val call_tmp[1958332]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1958334 'move' call_tmp[1958332](1958337 call ![7494] tmp[1958305]))
                        const-val call_tmp[1958339]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1958341 'move' call_tmp[1958339] call_tmp[1958332])
                        if call_tmp[1958332]
                        {
                          (1958347 call =[38194] chunkStart[1957921] i[1958232])
                          (1958351 call =[435217] inChunk[1957916] 1)
                          const-val call_tmp[1958354]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                          const-val ret_tmp[1958356]:byteIndex[28173] "temp"
                          (1958359 call -[28857] i[1958232] 1 ret_tmp[1958356])
                          (1958363 'move' call_tmp[1958354] ret_tmp[1958356])
                          const-val call_tmp[1958366]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                          const-val ret_tmp[1958368]:byteIndex[28173] "temp"
                          (1958371 call +[28725] call_tmp[1958354] nBytes[1958239] ret_tmp[1958368])
                          (1958375 'move' call_tmp[1958366] ret_tmp[1958368])
                          const-val call_tmp[1958378]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (1958380 'move' call_tmp[1958378](1958383 call >[28575] call_tmp[1958366] iEnd[1957910]))
                          const-val call_tmp[1958386]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (1958388 'move' call_tmp[1958386] call_tmp[1958378])
                          if call_tmp[1958378]
                          {
                            const-val call_tmp[1958393]:range(byteIndex,boundedLow,false)[1143464] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[1958395]:range(byteIndex,boundedLow,false)[1143464] "temp"
                            (1958398 call chpl_build_low_bounded_range[1142771] chunkStart[1957921] ret_tmp[1958395])
                            (1958401 'move' call_tmp[1958393] ret_tmp[1958395])
                            const-val call_tmp[1958404]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[1958406]:string[26] "temp"
                            (1958409 call this[1143784] localThis[1957839] call_tmp[1958393] ret_tmp[1958406])
                            (1958413 'move' call_tmp[1958404] ret_tmp[1958406])
                            (1958417 call =[38272] chunk[1957854] call_tmp[1958404])
                            (1958421 call chpl__autoDestroy[1562275] call_tmp[1958404])
                            (1958424 call chpl__autoDestroy[1643589] call_tmp[1958393])
                            (1958427 call =[435217] yieldChunk[1957849] 1)
                            (1958431 call =[435217] done[1957844] 1)
                          }
                          (1958436 call chpl__autoDestroy[1562538] call_tmp[1958366])
                          (1958439 call chpl__autoDestroy[1562538] call_tmp[1958354])
                        }
                        {
                          const-val call_tmp[1958442]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (1958444 'move' call_tmp[1958442] inChunk[1957916])
                          if call_tmp[1958442]
                          {
                            const-val call_tmp[1958449]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (1958451 'move' call_tmp[1958449] cSpace[1958295])
                            if cSpace[1958295]
                            {
                              (1958457 call +=[451358] splitCount[1957885] 1)
                              const-val tmp[1958460]:bool[10] "dead after last mention" "maybe param" "temp"
                              (1958462 'move' tmp[1958460] limitSplits[1957880])
                              val tmp[1958465]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                              const-val tmp[1958467]:bool[10] "dead after last mention" "maybe param" "temp"
                              const-val call_tmp[1958469]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1958471 'move' call_tmp[1958469] limitSplits[1957880])
                              (1958474 'move' tmp[1958467] limitSplits[1957880])
                              if limitSplits[1957880]
                              {
                                const-val tmp[1958479]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                                const-val call_tmp[1958481]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val maxsplit[1960270]:int(64)[13] "temp"
                                (1960275 'move' maxsplit[1960270](1960272 '.v' _iterator[1354593] F1_maxsplit[2049006]))
                                (1958483 'move' call_tmp[1958481](1958486 call >[437715] splitCount[1957885] maxsplit[1960270]))
                                (1958489 'move' tmp[1958479] call_tmp[1958481])
                                (1958492 'move' tmp[1958465] call_tmp[1958481])
                              }
                              {
                                (1958496 'move' tmp[1958465] 0)
                              }
                              const-val call_tmp[1958500]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1958502 'move' call_tmp[1958500] tmp[1958465])
                              if tmp[1958465]
                              {
                                const-val call_tmp[1958507]:range(byteIndex,boundedLow,false)[1143464] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[1958509]:range(byteIndex,boundedLow,false)[1143464] "temp"
                                (1958512 call chpl_build_low_bounded_range[1142771] chunkStart[1957921] ret_tmp[1958509])
                                (1958515 'move' call_tmp[1958507] ret_tmp[1958509])
                                const-val call_tmp[1958518]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[1958520]:string[26] "temp"
                                (1958523 call this[1143784] localThis[1957839] call_tmp[1958507] ret_tmp[1958520])
                                (1958527 'move' call_tmp[1958518] ret_tmp[1958520])
                                (1958531 call =[38272] chunk[1957854] call_tmp[1958518])
                                (1958535 call chpl__autoDestroy[1562275] call_tmp[1958518])
                                (1958538 call chpl__autoDestroy[1643589] call_tmp[1958507])
                                (1958541 call =[435217] yieldChunk[1957849] 1)
                                (1958545 call =[435217] done[1957844] 1)
                              }
                              {
                                const-val call_tmp[1958549]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[1958551]:byteIndex[28173] "temp"
                                (1958554 call -[28857] i[1958232] 1 ret_tmp[1958551])
                                (1958558 'move' call_tmp[1958549] ret_tmp[1958551])
                                const-val call_tmp[1958561]:range(byteIndex,bounded,false)[1025853] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[1958563]:range(byteIndex,bounded,false)[1025853] "temp"
                                (1958566 call chpl_build_bounded_range[1123315] chunkStart[1957921] call_tmp[1958549] ret_tmp[1958563])
                                (1958570 'move' call_tmp[1958561] ret_tmp[1958563])
                                const-val call_tmp[1958573]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[1958575]:string[26] "temp"
                                (1958578 call this[1123561] localThis[1957839] call_tmp[1958561] ret_tmp[1958575])
                                (1958582 'move' call_tmp[1958573] ret_tmp[1958575])
                                (1958586 call =[38272] chunk[1957854] call_tmp[1958573])
                                (1958590 call chpl__autoDestroy[1562275] call_tmp[1958573])
                                (1958593 call chpl__autoDestroy[1635105] call_tmp[1958561])
                                (1958596 call chpl__autoDestroy[1562538] call_tmp[1958549])
                                (1958599 call =[435217] yieldChunk[1957849] 1)
                                (1958603 call =[435217] inChunk[1957916] 0)
                              }
                            }
                            {
                              const-val call_tmp[1958608]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              const-val ret_tmp[1958610]:byteIndex[28173] "temp"
                              (1958613 call -[28857] i[1958232] 1 ret_tmp[1958610])
                              (1958617 'move' call_tmp[1958608] ret_tmp[1958610])
                              const-val call_tmp[1958620]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              const-val ret_tmp[1958622]:byteIndex[28173] "temp"
                              (1958625 call +[28725] call_tmp[1958608] nBytes[1958239] ret_tmp[1958622])
                              (1958629 'move' call_tmp[1958620] ret_tmp[1958622])
                              const-val call_tmp[1958632]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1958634 'move' call_tmp[1958632](1958637 call >[28575] call_tmp[1958620] iEnd[1957910]))
                              const-val call_tmp[1958640]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1958642 'move' call_tmp[1958640] call_tmp[1958632])
                              if call_tmp[1958632]
                              {
                                const-val call_tmp[1958647]:range(byteIndex,boundedLow,false)[1143464] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[1958649]:range(byteIndex,boundedLow,false)[1143464] "temp"
                                (1958652 call chpl_build_low_bounded_range[1142771] chunkStart[1957921] ret_tmp[1958649])
                                (1958655 'move' call_tmp[1958647] ret_tmp[1958649])
                                const-val call_tmp[1958658]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[1958660]:string[26] "temp"
                                (1958663 call this[1143784] localThis[1957839] call_tmp[1958647] ret_tmp[1958660])
                                (1958667 'move' call_tmp[1958658] ret_tmp[1958660])
                                (1958671 call =[38272] chunk[1957854] call_tmp[1958658])
                                (1958675 call chpl__autoDestroy[1562275] call_tmp[1958658])
                                (1958678 call chpl__autoDestroy[1643589] call_tmp[1958647])
                                (1958681 call =[435217] yieldChunk[1957849] 1)
                                (1958685 call =[435217] done[1957844] 1)
                              }
                              (1958690 call chpl__autoDestroy[1562538] call_tmp[1958620])
                              (1958693 call chpl__autoDestroy[1562538] call_tmp[1958608])
                            }
                          }
                        }
                      }
                      const-val call_tmp[1958699]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1958701 'move' call_tmp[1958699] yieldChunk[1957849])
                      if call_tmp[1958699]
                      {
                        const-val yret[1958706]:string[26] "dead after last mention" "YVV" "temp"
                        const-val _yield_expr_tmp_[1958708]:string[26] "temp"
                        (1958710 'move' _yield_expr_tmp_[1958708](1958713 call chpl__initCopy[981409] chunk[1957854]))
                        (1958715 'move' yret[1958706] _yield_expr_tmp_[1958708])
                        const-val _yieldedIndex[1960029]:string[26] "temp"
                        (1960150 'move' _yieldedIndex[1960029] _yield_expr_tmp_[1958708])
                        {
                          const-val chpl__elidedIdx[1960031]:string[26] "const" "index var" "insert auto destroy"
                          (1960033 'move' chpl__elidedIdx[1960031] _yieldedIndex[1960029])
                          {
                            (1960038 call +=[451358] numElements[1354584] 1)
                            const-val call_tmp[1960041]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (1960043 'move' call_tmp[1960041](1960046 call >[437715] numElements[1354584] 1))
                            const-val call_tmp[1960049]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (1960051 'move' call_tmp[1960049] call_tmp[1960041])
                            if call_tmp[1960049]
                            {
                              (1960057 call chpl__autoDestroy[1562275] chpl__elidedIdx[1960031])
                              ref moreRef1[1960068]:_ref(int(64))[936633] "temp"
                              (1960070 'move' moreRef1[1960068](1960072 '.' _iterator[1958060] more[1096767]))
                              const-val moreVal1[1960075]:int(64)[13] "const" "temp"
                              (1960077 '=' moreVal1[1960075] moreRef1[1960068])
                              const-val moreValNeg1[1960080]:int(64)[13] "const" "temp"
                              (1960082 'move' moreValNeg1[1960080](1960084 'u-' moreVal1[1960075]))
                              (1960086 '=' moreRef1[1960068] moreValNeg1[1960080])
                              (1960090 call advance[1096790] _iterator[1958060])
                              ref moreRef2[1960092]:_ref(int(64))[936633] "temp"
                              (1960094 'move' moreRef2[1960092](1960096 '.' _iterator[1958067] more[1108320]))
                              const-val moreVal2[1960099]:int(64)[13] "const" "temp"
                              (1960101 '=' moreVal2[1960099] moreRef2[1960092])
                              const-val moreValNeg2[1960104]:int(64)[13] "const" "temp"
                              (1960106 'move' moreValNeg2[1960104](1960108 'u-' moreVal2[1960099]))
                              (1960110 '=' moreRef2[1960092] moreValNeg2[1960104])
                              (1960114 call advance[1108343] _iterator[1958067])
                              (1960117 call chpl__autoDestroy[1562538] call_tmp[1958191])
                              (1960120 call _freeIterator[1108785] _iterator[1957998])
                              (1960123 call chpl__autoDestroy[1642180] _iterator[1957998])
                              (1960126 call chpl__autoDestroy[1383553] call_tmp[1958000])
                              (1960129 call chpl__autoDestroy[1562275] localThis[1957979])
                              (1960132 call _freeIterator[1122634] _iterator[1957928])
                              (1960135 call chpl__autoDestroy[1562538] default_arg_start[1957932])
                              (1960138 call chpl__autoDestroy[1562538] chunkStart[1957921])
                              (1960141 call chpl__autoDestroy[1562538] iEnd[1957910])
                              (1960144 call chpl__autoDestroy[1562275] chunk[1957854])
                              (1960147 call chpl__autoDestroy[1562275] localThis[1957839])
                              break _breakLabel[1354660] _breakLabel[1354660]
                            }
                          }
                          label _continueLabel[1960062]
                          (1960065 call chpl__autoDestroy[1562275] chpl__elidedIdx[1960031])
                        }
                        (1958807 call =[435217] yieldChunk[1957849] 0)
                      }
                      const-val call_tmp[1958811]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1958813 'move' call_tmp[1958811] done[1957844])
                      if call_tmp[1958811]
                      {
                        ref moreRef1[1958818]:_ref(int(64))[936633] "temp"
                        (1958820 'move' moreRef1[1958818](1958822 '.' _iterator[1958060] more[1096767]))
                        const-val moreVal1[1958825]:int(64)[13] "const" "temp"
                        (1958827 '=' moreVal1[1958825] moreRef1[1958818])
                        const-val moreValNeg1[1958830]:int(64)[13] "const" "temp"
                        (1958832 'move' moreValNeg1[1958830](1958834 'u-' moreVal1[1958825]))
                        (1958836 '=' moreRef1[1958818] moreValNeg1[1958830])
                        (1958840 call advance[1096790] _iterator[1958060])
                        ref moreRef2[1958842]:_ref(int(64))[936633] "temp"
                        (1958844 'move' moreRef2[1958842](1958846 '.' _iterator[1958067] more[1108320]))
                        const-val moreVal2[1958849]:int(64)[13] "const" "temp"
                        (1958851 '=' moreVal2[1958849] moreRef2[1958842])
                        const-val moreValNeg2[1958854]:int(64)[13] "const" "temp"
                        (1958856 'move' moreValNeg2[1958854](1958858 'u-' moreVal2[1958849]))
                        (1958860 '=' moreRef2[1958842] moreValNeg2[1958854])
                        (1958864 call advance[1108343] _iterator[1958067])
                        (1958867 call chpl__autoDestroy[1562538] call_tmp[1958191])
                        (1958870 call _freeIterator[1108785] _iterator[1957998])
                        (1958873 call chpl__autoDestroy[1642180] _iterator[1957998])
                        (1958876 call chpl__autoDestroy[1383553] call_tmp[1958000])
                        (1958879 call chpl__autoDestroy[1562275] localThis[1957979])
                        break _breakLabel[1959940] _breakLabel[1959940]
                      }
                    }
                    (1958885 call chpl__autoDestroy[1562538] call_tmp[1958191])
                    {
                      (1958889 call zip3[1096817] _iterator[1958060])
                    }
                    {
                      (1958893 call zip3[1108370] _iterator[1958067])
                    }
                    {
                      {
                        (1958090 call init[1096853] _iterator[1958060])
                      }
                      {
                        (1958094 call init[1108406] _iterator[1958067])
                      }
                    }
                    {
                      (1958098 call hasMore[1096835] _iterator[1958060])
                    }
                    {
                      {
                        (1958103 call incr[1096862] _iterator[1958060])
                      }
                      {
                        (1958107 call incr[1108415] _iterator[1958067])
                      }
                    }
                  }
                  {
                    const-val retTmp[1958896]:int(64)[13] "temp"
                    (1958898 'move' retTmp[1958896](1958901 call hasMore[1108388] _iterator[1958067]))
                    (1958903 'move' hasMore[1958084](1958905 'cast' bool[10] retTmp[1958896]))
                  }
                  if hasMore[1958084]
                  {
                    (1958910 'chpl_error' c"zippered iterations have non-equal lengths")
                  }
                  {
                    (1958915 call zip4[1108379] _iterator[1958067])
                  }
                  {
                    (1958919 call zip4[1096826] _iterator[1958060])
                  }
                  (1958922 call _freeIterator[1108785] _iterator[1957998])
                  (1958925 call chpl__autoDestroy[1642180] _iterator[1957998])
                  (1958928 call chpl__autoDestroy[1383553] call_tmp[1958000])
                }
                {
                  const-val call_tmp[1958931]:int(64)[13] "dead at end of block" "maybe param" "temp"
                  ref start[1958933]:_ref(byteIndex)[948820] "temp"
                  (1958935 'move' start[1958933](1958937 '.v' _iterator[1957928] F1_start[2044780]))
                  (1958940 'move' call_tmp[1958931](1958943 call _cast[39465] start[1958933]))
                  val i[1958945]:int(64)[13] "dead at end of block" "insert auto destroy"
                  (1958947 'move' i[1958945] call_tmp[1958931])
                  const-val call_tmp[1958950]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1958952 'move' call_tmp[1958950](1958955 call >[437715] call_tmp[1958931] 0))
                  const-val call_tmp[1958958]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1958960 'move' call_tmp[1958958] call_tmp[1958950])
                  if call_tmp[1958950]
                  {
                    val tmp[1958965]:bool[10] "dead after last mention" "temp"
                    const-val tmp[1958967]:bool[10] "dead after last mention" "maybe param" "temp"
                    ref call_tmp[1958969]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                    (1958971 'move' call_tmp[1958969](1958974 call buffLen[757947] localThis[1957979]))
                    const-val coerce_tmp[1958976]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1958978 'move' coerce_tmp[1958976](1958980 'deref' call_tmp[1958969]))
                    (1958982 'move' tmp[1958967](1958985 call <[437495] i[1958945] coerce_tmp[1958976]))
                    val tmp[1958988]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                    const-val tmp[1958990]:bool[10] "dead after last mention" "maybe param" "temp"
                    const-val call_tmp[1958992]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1958994 'move' call_tmp[1958992] tmp[1958967])
                    (1958997 'move' tmp[1958990] tmp[1958967])
                    if tmp[1958967]
                    {
                      const-val tmp[1959002]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                      ref call_tmp[1959004]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
                      ref _this_tmp_[1959006]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "temp"
                      (1959008 'move' _this_tmp_[1959006](1959011 call buff[758025] localThis[1957979]))
                      val coerce_tmp[1959013]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (1959015 'move' coerce_tmp[1959013](1959017 'deref' _this_tmp_[1959006]))
                      (1959019 'move' call_tmp[1959004](1959022 call this[954152] coerce_tmp[1959013] i[1958945]))
                      const-val call_tmp[1959025]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val coerce_tmp[1959027]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (1959029 'move' coerce_tmp[1959027](1959031 'deref' call_tmp[1959004]))
                      (1959033 'move' call_tmp[1959025](1959036 call isInitialByte[181574] coerce_tmp[1959027]))
                      const-val call_tmp[1959038]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1959040 'move' call_tmp[1959038](1959043 call ![7494] call_tmp[1959025]))
                      (1959045 'move' tmp[1959002] call_tmp[1959038])
                      (1959048 'move' tmp[1958988] call_tmp[1959038])
                    }
                    {
                      (1959052 'move' tmp[1958988] 0)
                    }
                    (1959056 'move' tmp[1958965] tmp[1958988])
                    WhileDo[1959059]
                    {
                      (1959062 call +=[451358] i[1958945] 1)
                      const-val tmp[1959065]:bool[10] "dead after last mention" "maybe param" "temp"
                      ref call_tmp[1959067]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                      (1959069 'move' call_tmp[1959067](1959072 call buffLen[757947] localThis[1957979]))
                      const-val coerce_tmp[1959074]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (1959076 'move' coerce_tmp[1959074](1959078 'deref' call_tmp[1959067]))
                      (1959080 'move' tmp[1959065](1959083 call <[437495] i[1958945] coerce_tmp[1959074]))
                      val tmp[1959086]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                      const-val tmp[1959088]:bool[10] "dead after last mention" "maybe param" "temp"
                      const-val call_tmp[1959090]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1959092 'move' call_tmp[1959090] tmp[1959065])
                      (1959095 'move' tmp[1959088] tmp[1959065])
                      if tmp[1959065]
                      {
                        const-val tmp[1959100]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                        ref call_tmp[1959102]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
                        ref _this_tmp_[1959104]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "temp"
                        (1959106 'move' _this_tmp_[1959104](1959109 call buff[758025] localThis[1957979]))
                        val coerce_tmp[1959111]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (1959113 'move' coerce_tmp[1959111](1959115 'deref' _this_tmp_[1959104]))
                        (1959117 'move' call_tmp[1959102](1959120 call this[954152] coerce_tmp[1959111] i[1958945]))
                        const-val call_tmp[1959123]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val coerce_tmp[1959125]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (1959127 'move' coerce_tmp[1959125](1959129 'deref' call_tmp[1959102]))
                        (1959131 'move' call_tmp[1959123](1959134 call isInitialByte[181574] coerce_tmp[1959125]))
                        const-val call_tmp[1959136]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1959138 'move' call_tmp[1959136](1959141 call ![7494] call_tmp[1959123]))
                        (1959143 'move' tmp[1959100] call_tmp[1959136])
                        (1959146 'move' tmp[1959086] call_tmp[1959136])
                      }
                      {
                        (1959150 'move' tmp[1959086] 0)
                      }
                      (1959154 'move' tmp[1958965] tmp[1959086])
                      tmp[1958965]
                    }
                  }
                  val tmp[1959158]:bool[10] "dead after last mention" "temp"
                  ref call_tmp[1959160]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                  (1959162 'move' call_tmp[1959160](1959165 call buffLen[757947] localThis[1957979]))
                  const-val call_tmp[1959167]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1959169]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1959171 'move' coerce_tmp[1959169](1959173 'deref' call_tmp[1959160]))
                  (1959175 'move' call_tmp[1959167](1959178 call <[437495] i[1958945] coerce_tmp[1959169]))
                  (1959181 'move' tmp[1959158] call_tmp[1959167])
                  WhileDo[1959184]
                  {
                    ref call_tmp[1959186]:_ref(c_ptr(uint(8)))[937493] "dead at end of block" "maybe param" "temp"
                    (1959188 'move' call_tmp[1959186](1959191 call buff[758025] localThis[1957979]))
                    ref call_tmp[1959193]:_ref(int(64))[936633] "dead at end of block" "maybe param" "temp"
                    (1959195 'move' call_tmp[1959193](1959198 call buffLen[757947] localThis[1957979]))
                    const-val call_tmp[1959200]:(syserr,int(32),int(32))[964681] "dead at end of block" "maybe param" "temp"
                    val coerce_tmp[1959202]:c_ptr(uint(8))[937484] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (1959204 'move' coerce_tmp[1959202](1959206 'deref' call_tmp[1959186]))
                    const-val coerce_tmp[1959208]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (1959210 'move' coerce_tmp[1959208](1959212 'deref' call_tmp[1959193]))
                    const-val ret_tmp[1959214]:(syserr,int(32),int(32))[964681] "temp"
                    (1959217 call decodeHelp[174452] coerce_tmp[1959202] coerce_tmp[1959208] i[1958945] 1 ret_tmp[1959214])
                    (1959223 'move' call_tmp[1959200] ret_tmp[1959214])
                    const-val tmp[1959226]:(syserr,int(32),int(32))[964681] "dead at end of block" "const" "insert auto destroy" "temp"
                    (1959228 'move' tmp[1959226] call_tmp[1959200])
                    1
                    ref call_tmp[1959232]:_ref(syserr)[948893] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (1959234 'move' call_tmp[1959232](1959236 '.' tmp[1959226] x0[964675]))
                    const-val decodeRet[1959239]:syserr[223605] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[1959241]:syserr[223605] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (1959243 'move' coerce_tmp[1959241](1959245 'deref' call_tmp[1959232]))
                    (1959247 'move' decodeRet[1959239](1959250 call chpl__initCopy[964546] coerce_tmp[1959241]))
                    ref call_tmp[1959252]:_ref(int(32))[936687] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (1959254 'move' call_tmp[1959252](1959256 '.' tmp[1959226] x1[964677]))
                    const-val cp[1959259]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[1959261]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (1959263 'move' coerce_tmp[1959261](1959265 'deref' call_tmp[1959252]))
                    (1959267 'move' cp[1959259](1959270 call chpl__initCopy[964818] coerce_tmp[1959261]))
                    ref call_tmp[1959272]:_ref(int(32))[936687] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (1959274 'move' call_tmp[1959272](1959276 '.' tmp[1959226] x2[964679]))
                    const-val nBytes[1959279]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[1959281]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (1959283 'move' coerce_tmp[1959281](1959285 'deref' call_tmp[1959272]))
                    (1959287 'move' nBytes[1959279](1959290 call chpl__initCopy[964818] coerce_tmp[1959281]))
                    const-val yret[1959292]:(int(32),byteIndex,int(64))[1122203] "dead after last mention" "YVV" "temp"
                    val call_tmp[1959294]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    const-val call_tmp[1959296]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1959298 'move' call_tmp[1959296] cp[1959259])
                    const-val call_tmp[1959301]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1959303]:byteIndex[28173] "temp"
                    (1959306 call _cast[39486] i[1958945] ret_tmp[1959303])
                    (1959309 'move' call_tmp[1959301] ret_tmp[1959303])
                    const-val call_tmp[1959312]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1959314 'move' call_tmp[1959312](1959316 'cast' int(64)[13] nBytes[1959279]))
                    const-val call_tmp[1959319]:(int(32),byteIndex,int(64))[1122203] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1959321]:(int(32),byteIndex,int(64))[1122203] "temp"
                    (1959324 call _build_tuple[1122153] cp[1959259] call_tmp[1959301] call_tmp[1959312] ret_tmp[1959321])
                    (1959329 'move' call_tmp[1959319] ret_tmp[1959321])
                    (1959332 'move' yret[1959292] call_tmp[1959319])
                    const-val _yieldedIndex[1959335]:(int(32),byteIndex,int(64))[1122203] "temp"
                    (1959337 'move' _yieldedIndex[1959335] call_tmp[1959319])
                    {
                      1
                      const-val c[1959342]:int(32)[95] "const" "index var" "insert auto destroy"
                      (1959344 'move' c[1959342](1959346 '.v' _yieldedIndex[1959335] x0[1122197]))
                      ref i[1959349]:_ref(byteIndex)[948820] "index var" "insert auto destroy"
                      (1959351 'move' i[1959349](1959353 '.v' _yieldedIndex[1959335] x1[1122199]))
                      const-val nBytes[1959356]:int(64)[13] "const" "index var" "insert auto destroy"
                      (1959358 'move' nBytes[1959356](1959360 '.v' _yieldedIndex[1959335] x2[1122201]))
                      const-val call_tmp[1959363]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1959365 'move' call_tmp[1959363] noSplits[1957867])
                      if noSplits[1957867]
                      {
                        (1959371 call =[435217] done[1957844] 1)
                        const-val call_tmp[1959374]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1959376 'move' call_tmp[1959374](1959379 call isSpace[36843] localThis[1957839]))
                        const-val call_tmp[1959381]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1959383 'move' call_tmp[1959381](1959386 call ![7494] call_tmp[1959374]))
                        const-val call_tmp[1959388]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1959390 'move' call_tmp[1959388] call_tmp[1959381])
                        if call_tmp[1959381]
                        {
                          (1959396 call =[38272] chunk[1957854] localThis[1957839])
                          (1959400 call =[435217] yieldChunk[1957849] 1)
                        }
                      }
                      {
                        const-val call_tmp[1959405]:bool[10] "dead at end of block" "maybe param" "temp"
                        (1959407 'move' call_tmp[1959405](1959410 call codepoint_isWhitespace[39156] c[1959342]))
                        const-val cSpace[1959412]:bool[10] "dead at end of block" "insert auto destroy"
                        (1959414 'move' cSpace[1959412] call_tmp[1959405])
                        const-val tmp[1959417]:bool[10] "dead after last mention" "maybe param" "temp"
                        (1959419 'move' tmp[1959417] inChunk[1957916])
                        val tmp[1959422]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                        const-val tmp[1959424]:bool[10] "dead after last mention" "maybe param" "temp"
                        const-val call_tmp[1959426]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1959428 'move' call_tmp[1959426] inChunk[1957916])
                        (1959431 'move' tmp[1959424] inChunk[1957916])
                        if inChunk[1957916]
                        {
                          (1959436 'move' tmp[1959422] 1)
                        }
                        {
                          const-val tmp[1959440]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                          (1959442 'move' tmp[1959440] cSpace[1959412])
                          (1959445 'move' tmp[1959422] cSpace[1959412])
                        }
                        const-val call_tmp[1959449]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1959451 'move' call_tmp[1959449](1959454 call ![7494] tmp[1959422]))
                        const-val call_tmp[1959456]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1959458 'move' call_tmp[1959456] call_tmp[1959449])
                        if call_tmp[1959449]
                        {
                          (1959464 call =[38194] chunkStart[1957921] i[1959349])
                          (1959468 call =[435217] inChunk[1957916] 1)
                          const-val call_tmp[1959471]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                          const-val ret_tmp[1959473]:byteIndex[28173] "temp"
                          (1959476 call -[28857] i[1959349] 1 ret_tmp[1959473])
                          (1959480 'move' call_tmp[1959471] ret_tmp[1959473])
                          const-val call_tmp[1959483]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                          const-val ret_tmp[1959485]:byteIndex[28173] "temp"
                          (1959488 call +[28725] call_tmp[1959471] nBytes[1959356] ret_tmp[1959485])
                          (1959492 'move' call_tmp[1959483] ret_tmp[1959485])
                          const-val call_tmp[1959495]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (1959497 'move' call_tmp[1959495](1959500 call >[28575] call_tmp[1959483] iEnd[1957910]))
                          const-val call_tmp[1959503]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (1959505 'move' call_tmp[1959503] call_tmp[1959495])
                          if call_tmp[1959495]
                          {
                            const-val call_tmp[1959510]:range(byteIndex,boundedLow,false)[1143464] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[1959512]:range(byteIndex,boundedLow,false)[1143464] "temp"
                            (1959515 call chpl_build_low_bounded_range[1142771] chunkStart[1957921] ret_tmp[1959512])
                            (1959518 'move' call_tmp[1959510] ret_tmp[1959512])
                            const-val call_tmp[1959521]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[1959523]:string[26] "temp"
                            (1959526 call this[1143784] localThis[1957839] call_tmp[1959510] ret_tmp[1959523])
                            (1959530 'move' call_tmp[1959521] ret_tmp[1959523])
                            (1959534 call =[38272] chunk[1957854] call_tmp[1959521])
                            (1959538 call chpl__autoDestroy[1562275] call_tmp[1959521])
                            (1959541 call chpl__autoDestroy[1643589] call_tmp[1959510])
                            (1959544 call =[435217] yieldChunk[1957849] 1)
                            (1959548 call =[435217] done[1957844] 1)
                          }
                          (1959553 call chpl__autoDestroy[1562538] call_tmp[1959483])
                          (1959556 call chpl__autoDestroy[1562538] call_tmp[1959471])
                        }
                        {
                          const-val call_tmp[1959559]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (1959561 'move' call_tmp[1959559] inChunk[1957916])
                          if call_tmp[1959559]
                          {
                            const-val call_tmp[1959566]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (1959568 'move' call_tmp[1959566] cSpace[1959412])
                            if cSpace[1959412]
                            {
                              (1959574 call +=[451358] splitCount[1957885] 1)
                              const-val tmp[1959577]:bool[10] "dead after last mention" "maybe param" "temp"
                              (1959579 'move' tmp[1959577] limitSplits[1957880])
                              val tmp[1959582]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                              const-val tmp[1959584]:bool[10] "dead after last mention" "maybe param" "temp"
                              const-val call_tmp[1959586]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1959588 'move' call_tmp[1959586] limitSplits[1957880])
                              (1959591 'move' tmp[1959584] limitSplits[1957880])
                              if limitSplits[1957880]
                              {
                                const-val tmp[1959596]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                                const-val call_tmp[1959598]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val maxsplit[1960277]:int(64)[13] "temp"
                                (1960282 'move' maxsplit[1960277](1960279 '.v' _iterator[1354593] F1_maxsplit[2049006]))
                                (1959600 'move' call_tmp[1959598](1959603 call >[437715] splitCount[1957885] maxsplit[1960277]))
                                (1959606 'move' tmp[1959596] call_tmp[1959598])
                                (1959609 'move' tmp[1959582] call_tmp[1959598])
                              }
                              {
                                (1959613 'move' tmp[1959582] 0)
                              }
                              const-val call_tmp[1959617]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1959619 'move' call_tmp[1959617] tmp[1959582])
                              if tmp[1959582]
                              {
                                const-val call_tmp[1959624]:range(byteIndex,boundedLow,false)[1143464] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[1959626]:range(byteIndex,boundedLow,false)[1143464] "temp"
                                (1959629 call chpl_build_low_bounded_range[1142771] chunkStart[1957921] ret_tmp[1959626])
                                (1959632 'move' call_tmp[1959624] ret_tmp[1959626])
                                const-val call_tmp[1959635]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[1959637]:string[26] "temp"
                                (1959640 call this[1143784] localThis[1957839] call_tmp[1959624] ret_tmp[1959637])
                                (1959644 'move' call_tmp[1959635] ret_tmp[1959637])
                                (1959648 call =[38272] chunk[1957854] call_tmp[1959635])
                                (1959652 call chpl__autoDestroy[1562275] call_tmp[1959635])
                                (1959655 call chpl__autoDestroy[1643589] call_tmp[1959624])
                                (1959658 call =[435217] yieldChunk[1957849] 1)
                                (1959662 call =[435217] done[1957844] 1)
                              }
                              {
                                const-val call_tmp[1959666]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[1959668]:byteIndex[28173] "temp"
                                (1959671 call -[28857] i[1959349] 1 ret_tmp[1959668])
                                (1959675 'move' call_tmp[1959666] ret_tmp[1959668])
                                const-val call_tmp[1959678]:range(byteIndex,bounded,false)[1025853] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[1959680]:range(byteIndex,bounded,false)[1025853] "temp"
                                (1959683 call chpl_build_bounded_range[1123315] chunkStart[1957921] call_tmp[1959666] ret_tmp[1959680])
                                (1959687 'move' call_tmp[1959678] ret_tmp[1959680])
                                const-val call_tmp[1959690]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[1959692]:string[26] "temp"
                                (1959695 call this[1123561] localThis[1957839] call_tmp[1959678] ret_tmp[1959692])
                                (1959699 'move' call_tmp[1959690] ret_tmp[1959692])
                                (1959703 call =[38272] chunk[1957854] call_tmp[1959690])
                                (1959707 call chpl__autoDestroy[1562275] call_tmp[1959690])
                                (1959710 call chpl__autoDestroy[1635105] call_tmp[1959678])
                                (1959713 call chpl__autoDestroy[1562538] call_tmp[1959666])
                                (1959716 call =[435217] yieldChunk[1957849] 1)
                                (1959720 call =[435217] inChunk[1957916] 0)
                              }
                            }
                            {
                              const-val call_tmp[1959725]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              const-val ret_tmp[1959727]:byteIndex[28173] "temp"
                              (1959730 call -[28857] i[1959349] 1 ret_tmp[1959727])
                              (1959734 'move' call_tmp[1959725] ret_tmp[1959727])
                              const-val call_tmp[1959737]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              const-val ret_tmp[1959739]:byteIndex[28173] "temp"
                              (1959742 call +[28725] call_tmp[1959725] nBytes[1959356] ret_tmp[1959739])
                              (1959746 'move' call_tmp[1959737] ret_tmp[1959739])
                              const-val call_tmp[1959749]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1959751 'move' call_tmp[1959749](1959754 call >[28575] call_tmp[1959737] iEnd[1957910]))
                              const-val call_tmp[1959757]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1959759 'move' call_tmp[1959757] call_tmp[1959749])
                              if call_tmp[1959749]
                              {
                                const-val call_tmp[1959764]:range(byteIndex,boundedLow,false)[1143464] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[1959766]:range(byteIndex,boundedLow,false)[1143464] "temp"
                                (1959769 call chpl_build_low_bounded_range[1142771] chunkStart[1957921] ret_tmp[1959766])
                                (1959772 'move' call_tmp[1959764] ret_tmp[1959766])
                                const-val call_tmp[1959775]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[1959777]:string[26] "temp"
                                (1959780 call this[1143784] localThis[1957839] call_tmp[1959764] ret_tmp[1959777])
                                (1959784 'move' call_tmp[1959775] ret_tmp[1959777])
                                (1959788 call =[38272] chunk[1957854] call_tmp[1959775])
                                (1959792 call chpl__autoDestroy[1562275] call_tmp[1959775])
                                (1959795 call chpl__autoDestroy[1643589] call_tmp[1959764])
                                (1959798 call =[435217] yieldChunk[1957849] 1)
                                (1959802 call =[435217] done[1957844] 1)
                              }
                              (1959807 call chpl__autoDestroy[1562538] call_tmp[1959737])
                              (1959810 call chpl__autoDestroy[1562538] call_tmp[1959725])
                            }
                          }
                        }
                      }
                      const-val call_tmp[1959816]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1959818 'move' call_tmp[1959816] yieldChunk[1957849])
                      if call_tmp[1959816]
                      {
                        const-val yret[1959823]:string[26] "dead after last mention" "YVV" "temp"
                        const-val _yield_expr_tmp_[1959825]:string[26] "temp"
                        (1959827 'move' _yield_expr_tmp_[1959825](1959830 call chpl__initCopy[981409] chunk[1957854]))
                        (1959832 'move' yret[1959823] _yield_expr_tmp_[1959825])
                        const-val _yieldedIndex[1960152]:string[26] "temp"
                        (1960219 'move' _yieldedIndex[1960152] _yield_expr_tmp_[1959825])
                        {
                          const-val chpl__elidedIdx[1960154]:string[26] "const" "index var" "insert auto destroy"
                          (1960156 'move' chpl__elidedIdx[1960154] _yieldedIndex[1960152])
                          {
                            (1960161 call +=[451358] numElements[1354584] 1)
                            const-val call_tmp[1960164]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (1960166 'move' call_tmp[1960164](1960169 call >[437715] numElements[1354584] 1))
                            const-val call_tmp[1960172]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (1960174 'move' call_tmp[1960172] call_tmp[1960164])
                            if call_tmp[1960172]
                            {
                              (1960180 call chpl__autoDestroy[1562275] chpl__elidedIdx[1960154])
                              (1960192 call chpl__autoDestroy[1562538] call_tmp[1959301])
                              (1960195 call chpl__autoDestroy[1566178] tmp[1959226])
                              (1960198 call chpl__autoDestroy[1562275] localThis[1957979])
                              (1960201 call _freeIterator[1122634] _iterator[1957928])
                              (1960204 call chpl__autoDestroy[1562538] default_arg_start[1957932])
                              (1960207 call chpl__autoDestroy[1562538] chunkStart[1957921])
                              (1960210 call chpl__autoDestroy[1562538] iEnd[1957910])
                              (1960213 call chpl__autoDestroy[1562275] chunk[1957854])
                              (1960216 call chpl__autoDestroy[1562275] localThis[1957839])
                              break _breakLabel[1354660] _breakLabel[1354660]
                            }
                          }
                          label _continueLabel[1960185]
                          (1960188 call chpl__autoDestroy[1562275] chpl__elidedIdx[1960154])
                        }
                        (1959870 call =[435217] yieldChunk[1957849] 0)
                      }
                      const-val call_tmp[1959874]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1959876 'move' call_tmp[1959874] done[1957844])
                      if call_tmp[1959874]
                      {
                        (1959882 call chpl__autoDestroy[1562538] call_tmp[1959301])
                        (1959885 call chpl__autoDestroy[1566178] tmp[1959226])
                        (1959888 call chpl__autoDestroy[1562275] localThis[1957979])
                        break _breakLabel[1959940] _breakLabel[1959940]
                      }
                    }
                    (1959894 call chpl__autoDestroy[1562538] call_tmp[1959301])
                    const-val coerce_tmp[1959896]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1959898 'move' coerce_tmp[1959896](1959900 'cast' int(64)[13] nBytes[1959279]))
                    (1959904 call +=[451358] i[1958945] coerce_tmp[1959896])
                    (1959908 call chpl__autoDestroy[1566178] tmp[1959226])
                    ref call_tmp[1959910]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                    (1959912 'move' call_tmp[1959910](1959915 call buffLen[757947] localThis[1957979]))
                    const-val call_tmp[1959917]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1959919]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1959921 'move' coerce_tmp[1959919](1959923 'deref' call_tmp[1959910]))
                    (1959925 'move' call_tmp[1959917](1959928 call <[437495] i[1958945] coerce_tmp[1959919]))
                    (1959931 'move' tmp[1959158] call_tmp[1959917])
                    tmp[1959158]
                  }
                }
                (1959936 call chpl__autoDestroy[1562275] localThis[1957979])
                label _end_cpIndexLen[1959938]
              }
              label _breakLabel[1959940]
              (1959943 call _freeIterator[1122634] _iterator[1957928])
              (1959946 call chpl__autoDestroy[1562538] default_arg_start[1957932])
              (1959949 call chpl__autoDestroy[1562538] chunkStart[1957921])
              (1959952 call chpl__autoDestroy[1562538] iEnd[1957910])
              (1959955 call chpl__autoDestroy[1562275] chunk[1957854])
              (1959958 call chpl__autoDestroy[1562275] localThis[1957839])
            }
          }
          label _endsplit[1959962]
        }
        label _breakLabel[1354660]
        (1882902 call _freeIterator[1156753] _iterator[1354593])
      }
      const-val call_tmp[1354662]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1354664 'move' call_tmp[1354662](1354667 call >[437715] numElements[1354584] 1))
      const-val call_tmp[1354670]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1354672 'move' call_tmp[1354670] call_tmp[1354662])
      if call_tmp[1354670]
      {
        const-val call_tmp[1354679]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1863808]:string[26] "temp"
        (1354684 call +[38345] "bad cast from string '" x[1354362] ret_tmp[1863808])
        (1863811 'move' call_tmp[1354679] ret_tmp[1863808])
        const-val call_tmp[1354687]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1863814]:string[26] "temp"
        (1354692 call +[38345] call_tmp[1354679] "' to " ret_tmp[1863814])
        (1863817 'move' call_tmp[1354687] ret_tmp[1863814])
        const-val call_tmp[1354703]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1863820]:string[26] "temp"
        (1354708 call +[38345] call_tmp[1354687] "uint(64)" ret_tmp[1863820])
        (1863823 'move' call_tmp[1354703] ret_tmp[1863820])
        const-val call_tmp[1354711]:owned IllegalArgumentError[1064619] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
        val new_temp[1355477]:IllegalArgumentError[168246] "dead after last mention" "temp"
        (1355479 'move' new_temp[1355477](1355464 call _new[1064168] call_tmp[1354703]))
        const-val initTemp[1355486]:owned IllegalArgumentError[1064619] "dead after last mention" "delay instantiation" "temp"
        (1355489 call init[1064270] initTemp[1355486] new_temp[1355477])
        (1354713 'move' call_tmp[1354711] initTemp[1355486])
        val call_tmp[1354720]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1355503]:owned Error[966519] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
        const-val ret_tmp[1866958]:owned Error[966519] "temp"
        (1355505 call _cast[1064791] call_tmp[1354711] ret_tmp[1866958])
        (1866961 'move' coerce_tmp[1355503] ret_tmp[1866958])
        const-val _formal_tmp_in_err[1355682]:owned Error[966519] "dead after last mention" "expr temp" "no auto destroy" "temp"
        (1355686 'move' _formal_tmp_in_err[1355682] coerce_tmp[1355503])
        (1354722 'move' call_tmp[1354720](1354725 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1355682]))
        {
          val castedError[1846564]:Error[167984] "temp"
          (1846570 'move' castedError[1846564] call_tmp[1354720])
          (1846572 '=' error_out[1846561] castedError[1846564])
          (1882904 call chpl__autoDestroy[1562275] call_tmp[1354703])
          (1882907 call chpl__autoDestroy[1562275] call_tmp[1354687])
          (1882910 call chpl__autoDestroy[1562275] call_tmp[1354679])
          (1882913 call chpl__autoDestroy[1562538] call_tmp[1354527])
          (1882916 call chpl__autoDestroy[1635105] default_arg_region[1355381])
          (1882919 call chpl__autoDestroy[1562275] localX[1354521])
          gotoErrorHandlingReturn _end__cast[1355368] _end__cast[1355368]
        }
        (1882923 call chpl__autoDestroy[1562275] call_tmp[1354703])
        (1882926 call chpl__autoDestroy[1562275] call_tmp[1354687])
        (1882929 call chpl__autoDestroy[1562275] call_tmp[1354679])
      }
      const-val call_tmp[1354730]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1354732 'move' call_tmp[1354730](1354735 call size[32772] localX[1354521]))
      const-val call_tmp[1354738]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1354740 'move' call_tmp[1354738](1354743 call >=[1157057] call_tmp[1354730]))
      const-val call_tmp[1354746]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1354748 'move' call_tmp[1354746] call_tmp[1354738])
      if call_tmp[1354746]
      {
        const-val call_tmp[1354755]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1863228]:string[26] "temp"
        (1354760 call this[34663] localX[1354521] 0 ret_tmp[1863228])
        (1863231 'move' call_tmp[1354755] ret_tmp[1863228])
        const-val call_tmp[1354762]:range(int(64),boundedLow,false)[1087626] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1867252]:range(int(64),boundedLow,false)[1087626] "temp"
        (1354767 call chpl_build_low_bounded_range[1087019] 1 ret_tmp[1867252])
        (1867255 'move' call_tmp[1354762] ret_tmp[1867252])
        const-val call_tmp[1354769]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1867870]:string[26] "temp"
        (1354774 call this[1125623] localX[1354521] call_tmp[1354762] ret_tmp[1867870])
        (1867873 'move' call_tmp[1354769] ret_tmp[1867870])
        const-val call_tmp[1354776]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1863274]:string[26] "temp"
        (1354784 call replace[35366] call_tmp[1354769] "_" "" -1 ret_tmp[1863274])
        (1863277 'move' call_tmp[1354776] ret_tmp[1863274])
        const-val call_tmp[1354787]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1863826]:string[26] "temp"
        (1354792 call +[38345] call_tmp[1354755] call_tmp[1354776] ret_tmp[1863826])
        (1863829 'move' call_tmp[1354787] ret_tmp[1863826])
        (1354796 call =[38272] localX[1354521] call_tmp[1354787])
        (1882933 call chpl__autoDestroy[1562275] call_tmp[1354787])
        (1882936 call chpl__autoDestroy[1562275] call_tmp[1354776])
        (1882939 call chpl__autoDestroy[1562275] call_tmp[1354769])
        (1882942 call chpl__autoDestroy[1641507] call_tmp[1354762])
        (1882945 call chpl__autoDestroy[1562275] call_tmp[1354755])
      }
    }
    const-val call_tmp[1354805]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1354807 'move' call_tmp[1354805](1354813 call isEmpty[35064] localX[1354521]))
    const-val call_tmp[1354814]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1354816 'move' call_tmp[1354814] call_tmp[1354805])
    if call_tmp[1354814]
    {
      const-val call_tmp[1354839]:owned IllegalArgumentError[1064619] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      val new_temp[1355787]:IllegalArgumentError[168246] "dead after last mention" "temp"
      (1355789 'move' new_temp[1355787](1355774 call _new[1064168] "bad cast from empty string to uint(64)"))
      const-val initTemp[1355796]:owned IllegalArgumentError[1064619] "dead after last mention" "delay instantiation" "temp"
      (1355799 call init[1064270] initTemp[1355796] new_temp[1355787])
      (1354841 'move' call_tmp[1354839] initTemp[1355796])
      val call_tmp[1354848]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1355813]:owned Error[966519] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1866964]:owned Error[966519] "temp"
      (1355815 call _cast[1064791] call_tmp[1354839] ret_tmp[1866964])
      (1866967 'move' coerce_tmp[1355813] ret_tmp[1866964])
      const-val _formal_tmp_in_err[1355992]:owned Error[966519] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1355996 'move' _formal_tmp_in_err[1355992] coerce_tmp[1355813])
      (1354850 'move' call_tmp[1354848](1354853 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1355992]))
      {
        val castedError[1846577]:Error[167984] "temp"
        (1846583 'move' castedError[1846577] call_tmp[1354848])
        (1846585 '=' error_out[1846561] castedError[1846577])
        (1882949 call chpl__autoDestroy[1562538] call_tmp[1354527])
        (1882952 call chpl__autoDestroy[1635105] default_arg_region[1355381])
        (1882955 call chpl__autoDestroy[1562275] localX[1354521])
        gotoErrorHandlingReturn _end__cast[1355368] _end__cast[1355368]
      }
    }
    {
      {
        {
          {
            {
              {
                const-val call_tmp[1355241]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
                (1355243 'move' call_tmp[1355241](1355249 call c_str[32935] localX[1354521]))
                const-val call_tmp[1355250]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                (1355252 'move' call_tmp[1355250](1355255 call c_string_to_uint64_t[1354484] call_tmp[1355241] isErr[1354506]))
                (1356370 'move' retVal[1354500] call_tmp[1355250])
              }
            }
          }
        }
      }
    }
    const-val call_tmp[1355300]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1355302 'move' call_tmp[1355300] isErr[1354506])
    if call_tmp[1355300]
    {
      const-val call_tmp[1355309]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1863832]:string[26] "temp"
      (1355314 call +[38345] "bad cast from string '" x[1354362] ret_tmp[1863832])
      (1863835 'move' call_tmp[1355309] ret_tmp[1863832])
      const-val call_tmp[1355317]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1863838]:string[26] "temp"
      (1355322 call +[38345] call_tmp[1355309] "' to " ret_tmp[1863838])
      (1863841 'move' call_tmp[1355317] ret_tmp[1863838])
      const-val call_tmp[1355333]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1863844]:string[26] "temp"
      (1355338 call +[38345] call_tmp[1355317] "uint(64)" ret_tmp[1863844])
      (1863847 'move' call_tmp[1355333] ret_tmp[1863844])
      const-val call_tmp[1355341]:owned IllegalArgumentError[1064619] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      val new_temp[1356156]:IllegalArgumentError[168246] "dead after last mention" "temp"
      (1356158 'move' new_temp[1356156](1356143 call _new[1064168] call_tmp[1355333]))
      const-val initTemp[1356165]:owned IllegalArgumentError[1064619] "dead after last mention" "delay instantiation" "temp"
      (1356168 call init[1064270] initTemp[1356165] new_temp[1356156])
      (1355343 'move' call_tmp[1355341] initTemp[1356165])
      val call_tmp[1355350]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1356182]:owned Error[966519] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1866970]:owned Error[966519] "temp"
      (1356184 call _cast[1064791] call_tmp[1355341] ret_tmp[1866970])
      (1866973 'move' coerce_tmp[1356182] ret_tmp[1866970])
      const-val _formal_tmp_in_err[1356361]:owned Error[966519] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1356365 'move' _formal_tmp_in_err[1356361] coerce_tmp[1356182])
      (1355352 'move' call_tmp[1355350](1355355 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1356361]))
      {
        val castedError[1846590]:Error[167984] "temp"
        (1846596 'move' castedError[1846590] call_tmp[1355350])
        (1846598 '=' error_out[1846561] castedError[1846590])
        (1882958 call chpl__autoDestroy[1562275] call_tmp[1355333])
        (1882961 call chpl__autoDestroy[1562275] call_tmp[1355317])
        (1882964 call chpl__autoDestroy[1562275] call_tmp[1355309])
        (1882967 call chpl__autoDestroy[1562538] call_tmp[1354527])
        (1882970 call chpl__autoDestroy[1635105] default_arg_region[1355381])
        (1882973 call chpl__autoDestroy[1562275] localX[1354521])
        gotoErrorHandlingReturn _end__cast[1355368] _end__cast[1355368]
      }
      (1882977 call chpl__autoDestroy[1562275] call_tmp[1355333])
      (1882980 call chpl__autoDestroy[1562275] call_tmp[1355317])
      (1882983 call chpl__autoDestroy[1562275] call_tmp[1355309])
    }
    (1355360 'move' ret[1354364] retVal[1354500])
    (1882986 call chpl__autoDestroy[1562538] call_tmp[1354527])
    (1882989 call chpl__autoDestroy[1635105] default_arg_region[1355381])
    (1882992 call chpl__autoDestroy[1562275] localX[1354521])
    gotoReturn _end__cast[1355368] _end__cast[1355368]
    label _end__cast[1355368]
    (1355370 return ret[1354364])
  }
  function c_string_to_int64_t[1024692](const in arg x[1024694]:c_string[19], ref arg err[1024696]:_ref(bool)[937260]) : int(64)[13] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1024699]:int(64)[13] "RVV" "temp"
    (1024701 return ret[1024699])
  }
  function integral_to_c_string[1063228](const in arg x[1063234]:int(64)[13], const in arg size[1063240]:uint(32)[110], const in arg isSigned[1063242]:bool[10], ref arg err[1063244]:_ref(bool)[937260]) : c_string[19] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1063247]:c_string[19] "RVV" "temp"
    (1063249 return ret[1063247])
  }
  function strlen[1063254](const in arg str[1063256]:c_string[19]) : uint(64)[115] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1063259]:uint(64)[115] "RVV" "temp"
    (1063261 return ret[1063259])
  }
  function integral_to_c_string[1071994](const in arg x[1072000]:int(64)[13], const in arg size[1072006]:uint(32)[110], const in arg isSigned[1072008]:bool[10], ref arg err[1072010]:_ref(bool)[937260]) : c_string[19] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1072013]:c_string[19] "RVV" "temp"
    (1072015 return ret[1072013])
  }
  function strlen[1072020](const in arg str[1072022]:c_string[19]) : uint(64)[115] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1072025]:uint(64)[115] "RVV" "temp"
    (1072027 return ret[1072025])
  }
  function integral_to_c_string[1268540](const in arg x[1268546]:int(64)[13], const in arg size[1268552]:uint(32)[110], const in arg isSigned[1268554]:bool[10], ref arg err[1268556]:_ref(bool)[937260]) : c_string[19] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1268559]:c_string[19] "RVV" "temp"
    (1268561 return ret[1268559])
  }
  function strlen[1268566](const in arg str[1268568]:c_string[19]) : uint(64)[115] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1268571]:uint(64)[115] "RVV" "temp"
    (1268573 return ret[1268571])
  }
  function c_string_to_uint64_t[1354484](const in arg x[1354486]:c_string[19], ref arg err[1354488]:_ref(bool)[937260]) : uint(64)[115] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1354491]:uint(64)[115] "RVV" "temp"
    (1354493 return ret[1354491])
  }
}