AST dump for ChapelBase after pass readExternC.
Module use list: 

{
  { scopeless
    unknown rootLocaleInitialized[310] "locale private" "no doc" 0 bool[10]
    (313 'end of statement')
  }
  (316 'use' ChapelStandard)
  { scopeless
    (320 'use' ChapelEnv)
    (322 'use' SysCTypes)
  }
  { scopeless
    unknown enablePostfixBangChecks[324] "config" "param" 0
    (327 'end of statement')
  }
  function chpl_config_has_value[334](arg name[331] :
  c_string, arg module_name[337] :
  c_string) : _unknown[51] "extern" "local args" "no fn body"
  {
  }
  { scopeless type
    bool[10]
  }
  function chpl_config_get_value[350](arg name[347] :
  c_string, arg module_name[353] :
  c_string) : _unknown[51] "extern" "local args" "no fn body"
  {
  }
  { scopeless type
    c_string
  }
  { scopeless
    unknown defaultLowBound[361] "config" "param" 0
    (364 'end of statement')
  }
  { scopeless
    unknown CHPL_CACHE_REMOTE[367] "config" "param" 0 bool[10]
    (370 'end of statement')
  }
  { scopeless
    unknown chpl_stringMinAllocSize[372] "config" "param" 0
    (375 'end of statement')
  }
  { scopeless
    unknown warnMaximalRange[377] "config" "param" 0
    (380 'end of statement')
  }
  function _throwOpError[387](param arg op[384] :
  string[26]) : _unknown[51]
  {
    (437 call compilerError "illegal use of '" op "' on operands of type uint(64) and signed integer")
  }
  type object[22]
  type iterKind[453] def leader[447]:iterKind[453] def follower[449]:iterKind[453] def standalone[451]:iterKind[453]
  {
  }
  function =[467](ref arg a[464] :
  (463 call bool[10] ?[260]), arg b[470] :
  bool[10]) : _unknown[51] "assignop" "inline"
  {
    (495 '=' a b)
  }
  function =[510](ref arg a[507] :
  (506 call int[13] unknown w[503]), arg b[516] :
  (515 call int[13] w)) : _unknown[51] "assignop" "inline"
  {
    (523 '=' a b)
  }
  function =[538](ref arg a[535] :
  (534 call uint[115] unknown w[531]), arg b[544] :
  (543 call uint[115] w)) : _unknown[51] "assignop" "inline"
  {
    (551 '=' a b)
  }
  function =[566](ref arg a[563] :
  (562 call real[16] unknown w[559]), arg b[572] :
  (571 call real[16] w)) : _unknown[51] "assignop" "inline"
  {
    (579 '=' a b)
  }
  function =[594](ref arg a[591] :
  (590 call imag[130] unknown w[587]), arg b[600] :
  (599 call imag[130] w)) : _unknown[51] "assignop" "inline"
  {
    (607 '=' a b)
  }
  function =[622](ref arg a[619] :
  (618 call complex[140] unknown w[615]), arg b[628] :
  (627 call complex[140] w)) : _unknown[51] "assignop" "inline"
  {
    (635 '=' a b)
  }
  function =[646](ref arg a[643] :
  opaque, arg b[649] :
  opaque) : _unknown[51] "assignop" "inline"
  {
    (656 '=' a b)
  }
  function =[667](ref arg a[664] :
  enum[187](?), arg b[670] :
  enum[187](?)) : _unknown[51] "assignop" "inline"
  {
    (683 '=' a b)
  }
  where {
    (677 call ==(674 'typeof' a)(676 'typeof' b))
  }
  function =[696](ref arg a[693] :
  (692 'to borrowed class from unknown' class[232](?)), arg b[700] :
  (699 'typeof' a)) : _unknown[51] "assignop" "inline" "last resort"
  {
    (713 '=' a b)
  }
  where {
    (707 call <=(704 'typeof' b)(706 'typeof' a))
  }
  function =[727](ref arg a[724] :
  (723 'to borrowed class from unknown'(722 'to nilable class from type' class[232](?))), arg b[731] :
  (730 'typeof' a)) : _unknown[51] "assignop" "inline" "last resort"
  {
    (744 '=' a b)
  }
  where {
    (738 call <=(735 'typeof' b)(737 'typeof' a))
  }
  function =[757](ref arg a[754] :
  (753 'to unmanaged class from unknown' class[232](?)), arg b[761] :
  (760 'typeof' a)) : _unknown[51] "assignop" "inline" "last resort"
  {
    (774 '=' a b)
  }
  where {
    (768 call <=(765 'typeof' b)(767 'typeof' a))
  }
  function =[788](ref arg a[785] :
  (784 'to unmanaged class from unknown'(783 'to nilable class from type' class[232](?))), arg b[792] :
  (791 'typeof' a)) : _unknown[51] "assignop" "inline" "last resort"
  {
    (805 '=' a b)
  }
  where {
    (799 call <=(796 'typeof' b)(798 'typeof' a))
  }
  function =[817](ref arg a[814] :
  nothing[7], arg b[821] :
  unknown t[819]) : _unknown[51] "assignop" "inline"
  {
    (849 call compilerError "a nothing variable cannot be assigned")
  }
  where {
    (826 call != t nothing[7])
  }
  function =[862](ref arg a[859] :
  unknown t[857], arg b[865] :
  nothing[7]) : _unknown[51] "assignop" "inline"
  {
    (893 call compilerError "cannot assign none to a variable of non-nothing type")
  }
  where {
    (870 call != t nothing[7])
  }
  function =[905](ref arg a[902] :
  nothing[7], arg b[908] :
  nothing[7]) param : _unknown[51] "assignop" "inline"
  {
  }
  function ==[920](arg a[917] :
  _nilType, arg b[923] :
  _nilType) param : _unknown[51] "inline"
  {
    { scopeless
      (927 return 1)
    }
  }
  function ==[938](arg a[935] :
  bool[10], arg b[941] :
  bool[10]) : _unknown[51] "inline"
  {
    { scopeless
      (967 return(966 '==' a b))
    }
  }
  function ==[982](arg a[979] :
  (978 call int[13] unknown w[975]), arg b[988] :
  (987 call int[13] w)) : _unknown[51] "inline"
  {
    { scopeless
      (996 return(995 '==' a b))
    }
  }
  function ==[1011](arg a[1008] :
  (1007 call uint[115] unknown w[1004]), arg b[1017] :
  (1016 call uint[115] w)) : _unknown[51] "inline"
  {
    { scopeless
      (1025 return(1024 '==' a b))
    }
  }
  function ==[1040](arg a[1037] :
  (1036 call real[16] unknown w[1033]), arg b[1046] :
  (1045 call real[16] w)) : _unknown[51] "inline"
  {
    { scopeless
      (1054 return(1053 '==' a b))
    }
  }
  function ==[1069](arg a[1066] :
  (1065 call imag[130] unknown w[1062]), arg b[1075] :
  (1074 call imag[130] w)) : _unknown[51] "inline"
  {
    { scopeless
      (1083 return(1082 '==' a b))
    }
  }
  function ==[1098](arg a[1095] :
  (1094 call complex[140] unknown w[1091]), arg b[1104] :
  (1103 call complex[140] w)) : _unknown[51] "inline"
  {
    { scopeless
      (1133 return(1131 call &&(1117 call ==(1110 call . a c"re")(1114 call . b c"re"))(1129 call ==(1122 call . a c"im")(1126 call . b c"im"))))
    }
  }
  function ==[1146](arg a[1143] :
  (1142 'to borrowed class from unknown'(1141 'to nilable class from type' object)), arg b[1151] :
  (1150 'to borrowed class from unknown'(1149 'to nilable class from type' object))) : _unknown[51] "inline"
  {
    { scopeless
      (1177 return(1176 'ptr_eq' a b))
    }
  }
  function ==[1188](arg a[1185] :
  enum[187](?), arg b[1191] :
  enum[187](?)) : _unknown[51] "inline"
  {
    (1205 return(1204 '==' a b))
  }
  where {
    (1198 call ==(1195 'typeof' a)(1197 'typeof' b))
  }
  function ==[1217](arg a[1214] :
  enum[187](?), arg b[1220] :
  enum[187](?)) : _unknown[51] "inline" "last resort"
  {
    (1250 call compilerError "Comparisons between mixed enumerated types not supported by default")
    (1254 return 0)
  }
  where {
    (1227 call !=(1224 'typeof' a)(1226 'typeof' b))
  }
  function !=[1265](arg a[1262] :
  _nilType, arg b[1268] :
  _nilType) param : _unknown[51] "inline"
  {
    { scopeless
      (1272 return 0)
    }
  }
  function !=[1283](arg a[1280] :
  bool[10], arg b[1286] :
  bool[10]) : _unknown[51] "inline"
  {
    { scopeless
      (1310 return(1309 '!=' a b))
    }
  }
  function !=[1325](arg a[1322] :
  (1321 call int[13] unknown w[1318]), arg b[1331] :
  (1330 call int[13] w)) : _unknown[51] "inline"
  {
    { scopeless
      (1339 return(1338 '!=' a b))
    }
  }
  function !=[1354](arg a[1351] :
  (1350 call uint[115] unknown w[1347]), arg b[1360] :
  (1359 call uint[115] w)) : _unknown[51] "inline"
  {
    { scopeless
      (1368 return(1367 '!=' a b))
    }
  }
  function !=[1383](arg a[1380] :
  (1379 call real[16] unknown w[1376]), arg b[1389] :
  (1388 call real[16] w)) : _unknown[51] "inline"
  {
    { scopeless
      (1397 return(1396 '!=' a b))
    }
  }
  function !=[1412](arg a[1409] :
  (1408 call imag[130] unknown w[1405]), arg b[1418] :
  (1417 call imag[130] w)) : _unknown[51] "inline"
  {
    { scopeless
      (1426 return(1425 '!=' a b))
    }
  }
  function !=[1441](arg a[1438] :
  (1437 call complex[140] unknown w[1434]), arg b[1447] :
  (1446 call complex[140] w)) : _unknown[51] "inline"
  {
    { scopeless
      (1472 return(1470 call ||(1458 call !=(1451 call . a c"re")(1455 call . b c"re"))(1468 call !=(1461 call . a c"im")(1465 call . b c"im"))))
    }
  }
  function !=[1485](arg a[1482] :
  (1481 'to borrowed class from unknown'(1480 'to nilable class from type' object)), arg b[1490] :
  (1489 'to borrowed class from unknown'(1488 'to nilable class from type' object))) : _unknown[51] "inline"
  {
    { scopeless
      (1516 return(1515 'ptr_neq' a b))
    }
  }
  function !=[1527](arg a[1524] :
  enum[187](?), arg b[1530] :
  enum[187](?)) : _unknown[51] "inline"
  {
    (1544 return(1543 '!=' a b))
  }
  where {
    (1537 call ==(1534 'typeof' a)(1536 'typeof' b))
  }
  function !=[1556](arg a[1553] :
  enum[187](?), arg b[1559] :
  enum[187](?)) : _unknown[51] "inline" "last resort"
  {
    (1571 call compilerError "Comparisons between mixed enumerated types not supported by default")
    (1575 return 1)
  }
  where {
    (1566 call !=(1563 'typeof' a)(1565 'typeof' b))
  }
  function ==[1586](param arg a[1583] :
  bool[10], param arg b[1589] :
  bool[10]) param : _unknown[51] "inline"
  {
    { scopeless
      (1597 return(1596 '==' a b))
    }
  }
  function ==[1612](param arg a[1609] :
  (1608 call int[13] unknown w[1605]), param arg b[1618] :
  (1617 call int[13] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (1626 return(1625 '==' a b))
    }
  }
  function ==[1641](param arg a[1638] :
  (1637 call uint[115] unknown w[1634]), param arg b[1647] :
  (1646 call uint[115] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (1655 return(1654 '==' a b))
    }
  }
  function ==[1666](param arg a[1663] :
  enum[187](?), param arg b[1669] :
  enum[187](?)) param : _unknown[51] "inline"
  {
    { scopeless
      (1683 return(1682 '==' a b))
    }
  }
  where {
    (1676 call ==(1673 'typeof' a)(1675 'typeof' b))
  }
  function ==[1699](param arg a[1696] :
  (1695 call real[16] unknown w[1692]), param arg b[1705] :
  (1704 call real[16] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (1713 return(1712 '==' a b))
    }
  }
  function ==[1728](param arg a[1725] :
  (1724 call imag[130] unknown w[1721]), param arg b[1734] :
  (1733 call imag[130] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (1742 return(1741 '==' a b))
    }
  }
  function ==[1757](param arg a[1754] :
  (1753 call complex[140] unknown w[1750]), param arg b[1763] :
  (1762 call complex[140] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (1771 return(1770 '==' a b))
    }
  }
  function ==[1782](arg a[1779] :
  nothing[7], arg b[1785] :
  nothing[7]) param : _unknown[51] "inline"
  {
    { scopeless
      (1789 return 1)
    }
  }
  function !=[1800](param arg a[1797] :
  bool[10], param arg b[1803] :
  bool[10]) param : _unknown[51] "inline"
  {
    { scopeless
      (1811 return(1810 '!=' a b))
    }
  }
  function !=[1826](param arg a[1823] :
  (1822 call int[13] unknown w[1819]), param arg b[1832] :
  (1831 call int[13] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (1840 return(1839 '!=' a b))
    }
  }
  function !=[1855](param arg a[1852] :
  (1851 call uint[115] unknown w[1848]), param arg b[1861] :
  (1860 call uint[115] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (1869 return(1868 '!=' a b))
    }
  }
  function !=[1880](param arg a[1877] :
  enum[187](?), param arg b[1883] :
  enum[187](?)) param : _unknown[51] "inline"
  {
    { scopeless
      (1903 return(1902 '!='(1897 call chpl__enumToOrder a)(1901 call chpl__enumToOrder b)))
    }
  }
  where {
    (1890 call ==(1887 'typeof' a)(1889 'typeof' b))
  }
  function !=[1919](param arg a[1916] :
  (1915 call real[16] unknown w[1912]), param arg b[1925] :
  (1924 call real[16] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (1933 return(1932 '!=' a b))
    }
  }
  function !=[1948](param arg a[1945] :
  (1944 call imag[130] unknown w[1941]), param arg b[1954] :
  (1953 call imag[130] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (1962 return(1961 '!=' a b))
    }
  }
  function !=[1977](param arg a[1974] :
  (1973 call complex[140] unknown w[1970]), param arg b[1983] :
  (1982 call complex[140] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (1991 return(1990 '!=' a b))
    }
  }
  function !=[2002](arg a[1999] :
  nothing[7], arg b[2005] :
  nothing[7]) param : _unknown[51] "inline"
  {
    { scopeless
      (2009 return 0)
    }
  }
  function <=[2024](arg a[2021] :
  (2020 call int[13] unknown w[2017]), arg b[2030] :
  (2029 call int[13] w)) : _unknown[51] "inline"
  {
    { scopeless
      (2054 return(2053 '<=' a b))
    }
  }
  function <=[2069](arg a[2066] :
  (2065 call uint[115] unknown w[2062]), arg b[2075] :
  (2074 call uint[115] w)) : _unknown[51] "inline"
  {
    { scopeless
      (2083 return(2082 '<=' a b))
    }
  }
  function <=[2098](arg a[2095] :
  (2094 call real[16] unknown w[2091]), arg b[2104] :
  (2103 call real[16] w)) : _unknown[51] "inline"
  {
    { scopeless
      (2112 return(2111 '<=' a b))
    }
  }
  function <=[2123](arg a[2120] :
  enum[187](?), arg b[2126] :
  enum[187](?)) : _unknown[51]
  {
    (2146 return(2145 '<='(2140 call chpl__enumToOrder a)(2144 call chpl__enumToOrder b)))
  }
  where {
    (2133 call ==(2130 'typeof' a)(2132 'typeof' b))
  }
  function <=[2158](arg a[2155] :
  enum[187](?), arg b[2161] :
  enum[187](?)) : _unknown[51] "inline" "last resort"
  {
    (2173 call compilerError "Comparisons between mixed enumerated types not supported by default")
    (2177 return 0)
  }
  where {
    (2168 call !=(2165 'typeof' a)(2167 'typeof' b))
  }
  function >=[2192](arg a[2189] :
  (2188 call int[13] unknown w[2185]), arg b[2198] :
  (2197 call int[13] w)) : _unknown[51] "inline"
  {
    { scopeless
      (2222 return(2221 '>=' a b))
    }
  }
  function >=[2237](arg a[2234] :
  (2233 call uint[115] unknown w[2230]), arg b[2243] :
  (2242 call uint[115] w)) : _unknown[51] "inline"
  {
    { scopeless
      (2251 return(2250 '>=' a b))
    }
  }
  function >=[2266](arg a[2263] :
  (2262 call real[16] unknown w[2259]), arg b[2272] :
  (2271 call real[16] w)) : _unknown[51] "inline"
  {
    { scopeless
      (2280 return(2279 '>=' a b))
    }
  }
  function >=[2291](arg a[2288] :
  enum[187](?), arg b[2294] :
  enum[187](?)) : _unknown[51]
  {
    (2314 return(2313 '>='(2308 call chpl__enumToOrder a)(2312 call chpl__enumToOrder b)))
  }
  where {
    (2301 call ==(2298 'typeof' a)(2300 'typeof' b))
  }
  function >=[2326](arg a[2323] :
  enum[187](?), arg b[2329] :
  enum[187](?)) : _unknown[51] "inline" "last resort"
  {
    (2341 call compilerError "Comparisons between mixed enumerated types not supported by default")
    (2345 return 0)
  }
  where {
    (2336 call !=(2333 'typeof' a)(2335 'typeof' b))
  }
  function <[2360](arg a[2357] :
  (2356 call int[13] unknown w[2353]), arg b[2366] :
  (2365 call int[13] w)) : _unknown[51] "inline"
  {
    { scopeless
      (2390 return(2389 '<' a b))
    }
  }
  function <[2405](arg a[2402] :
  (2401 call uint[115] unknown w[2398]), arg b[2411] :
  (2410 call uint[115] w)) : _unknown[51] "inline"
  {
    { scopeless
      (2419 return(2418 '<' a b))
    }
  }
  function <[2434](arg a[2431] :
  (2430 call real[16] unknown w[2427]), arg b[2440] :
  (2439 call real[16] w)) : _unknown[51] "inline"
  {
    { scopeless
      (2448 return(2447 '<' a b))
    }
  }
  function <[2459](arg a[2456] :
  enum[187](?), arg b[2462] :
  enum[187](?)) : _unknown[51]
  {
    (2482 return(2481 '<'(2476 call chpl__enumToOrder a)(2480 call chpl__enumToOrder b)))
  }
  where {
    (2469 call ==(2466 'typeof' a)(2468 'typeof' b))
  }
  function <[2494](arg a[2491] :
  enum[187](?), arg b[2497] :
  enum[187](?)) : _unknown[51] "inline" "last resort"
  {
    (2509 call compilerError "Comparisons between mixed enumerated types not supported by default")
    (2513 return 0)
  }
  where {
    (2504 call !=(2501 'typeof' a)(2503 'typeof' b))
  }
  function >[2528](arg a[2525] :
  (2524 call int[13] unknown w[2521]), arg b[2534] :
  (2533 call int[13] w)) : _unknown[51] "inline"
  {
    { scopeless
      (2558 return(2557 '>' a b))
    }
  }
  function >[2573](arg a[2570] :
  (2569 call uint[115] unknown w[2566]), arg b[2579] :
  (2578 call uint[115] w)) : _unknown[51] "inline"
  {
    { scopeless
      (2587 return(2586 '>' a b))
    }
  }
  function >[2602](arg a[2599] :
  (2598 call real[16] unknown w[2595]), arg b[2608] :
  (2607 call real[16] w)) : _unknown[51] "inline"
  {
    { scopeless
      (2616 return(2615 '>' a b))
    }
  }
  function >[2627](arg a[2624] :
  enum[187](?), arg b[2630] :
  enum[187](?)) : _unknown[51]
  {
    (2650 return(2649 '>'(2644 call chpl__enumToOrder a)(2648 call chpl__enumToOrder b)))
  }
  where {
    (2637 call ==(2634 'typeof' a)(2636 'typeof' b))
  }
  function >[2662](arg a[2659] :
  enum[187](?), arg b[2665] :
  enum[187](?)) : _unknown[51] "inline" "last resort"
  {
    (2677 call compilerError "Comparisons between mixed enumerated types not supported by default")
    (2681 return 0)
  }
  where {
    (2672 call !=(2669 'typeof' a)(2671 'typeof' b))
  }
  function <=[2696](param arg a[2693] :
  (2692 call int[13] unknown w[2689]), param arg b[2702] :
  (2701 call int[13] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (2710 return(2709 '<=' a b))
    }
  }
  function <=[2725](param arg a[2722] :
  (2721 call uint[115] unknown w[2718]), param arg b[2731] :
  (2730 call uint[115] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (2739 return(2738 '<=' a b))
    }
  }
  function <=[2750](param arg a[2747] :
  enum[187](?), param arg b[2753] :
  enum[187](?)) param : _unknown[51] "inline"
  {
    { scopeless
      (2773 return(2772 '<='(2767 call chpl__enumToOrder a)(2771 call chpl__enumToOrder b)))
    }
  }
  where {
    (2760 call ==(2757 'typeof' a)(2759 'typeof' b))
  }
  function <=[2789](param arg a[2786] :
  (2785 call real[16] unknown w[2782]), param arg b[2795] :
  (2794 call real[16] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (2803 return(2802 '<=' a b))
    }
  }
  function >=[2818](param arg a[2815] :
  (2814 call int[13] unknown w[2811]), param arg b[2824] :
  (2823 call int[13] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (2832 return(2831 '>=' a b))
    }
  }
  function >=[2847](param arg a[2844] :
  (2843 call uint[115] unknown w[2840]), param arg b[2853] :
  (2852 call uint[115] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (2861 return(2860 '>=' a b))
    }
  }
  function >=[2872](param arg a[2869] :
  enum[187](?), param arg b[2875] :
  enum[187](?)) param : _unknown[51] "inline"
  {
    { scopeless
      (2895 return(2894 '>='(2889 call chpl__enumToOrder a)(2893 call chpl__enumToOrder b)))
    }
  }
  where {
    (2882 call ==(2879 'typeof' a)(2881 'typeof' b))
  }
  function >=[2911](param arg a[2908] :
  (2907 call real[16] unknown w[2904]), param arg b[2917] :
  (2916 call real[16] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (2925 return(2924 '>=' a b))
    }
  }
  function <[2940](param arg a[2937] :
  (2936 call int[13] unknown w[2933]), param arg b[2946] :
  (2945 call int[13] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (2954 return(2953 '<' a b))
    }
  }
  function <[2969](param arg a[2966] :
  (2965 call uint[115] unknown w[2962]), param arg b[2975] :
  (2974 call uint[115] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (2983 return(2982 '<' a b))
    }
  }
  function <[2994](param arg a[2991] :
  enum[187](?), param arg b[2997] :
  enum[187](?)) param : _unknown[51] "inline"
  {
    { scopeless
      (3017 return(3016 '<'(3011 call chpl__enumToOrder a)(3015 call chpl__enumToOrder b)))
    }
  }
  where {
    (3004 call ==(3001 'typeof' a)(3003 'typeof' b))
  }
  function <[3033](param arg a[3030] :
  (3029 call real[16] unknown w[3026]), param arg b[3039] :
  (3038 call real[16] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (3047 return(3046 '<' a b))
    }
  }
  function >[3062](param arg a[3059] :
  (3058 call int[13] unknown w[3055]), param arg b[3068] :
  (3067 call int[13] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (3076 return(3075 '>' a b))
    }
  }
  function >[3091](param arg a[3088] :
  (3087 call uint[115] unknown w[3084]), param arg b[3097] :
  (3096 call uint[115] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (3105 return(3104 '>' a b))
    }
  }
  function >[3116](param arg a[3113] :
  enum[187](?), param arg b[3119] :
  enum[187](?)) param : _unknown[51] "inline"
  {
    { scopeless
      (3139 return(3138 '>'(3133 call chpl__enumToOrder a)(3137 call chpl__enumToOrder b)))
    }
  }
  where {
    (3126 call ==(3123 'typeof' a)(3125 'typeof' b))
  }
  function >[3155](param arg a[3152] :
  (3151 call real[16] unknown w[3148]), param arg b[3161] :
  (3160 call real[16] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (3169 return(3168 '>' a b))
    }
  }
  function +[3184](arg a[3181] :
  (3180 call int[13] unknown w[3177])) : _unknown[51] "inline"
  {
    { scopeless
      (3187 return a)
    }
  }
  function +[3202](arg a[3199] :
  (3198 call uint[115] unknown w[3195])) : _unknown[51] "inline"
  {
    { scopeless
      (3205 return a)
    }
  }
  function +[3220](arg a[3217] :
  (3216 call real[16] unknown w[3213])) : _unknown[51] "inline"
  {
    { scopeless
      (3223 return a)
    }
  }
  function +[3238](arg a[3235] :
  (3234 call imag[130] unknown w[3231])) : _unknown[51] "inline"
  {
    { scopeless
      (3241 return a)
    }
  }
  function +[3256](arg a[3253] :
  (3252 call complex[140] unknown w[3249])) : _unknown[51] "inline"
  {
    { scopeless
      (3259 return a)
    }
  }
  function -[3274](arg a[3271] :
  (3270 call int[13] unknown w[3267])) : _unknown[51] "inline"
  {
    { scopeless
      (3296 return(3295 'u-' a))
    }
  }
  function -[3312](arg a[3309] :
  (3308 call uint[115] 64)) : _unknown[51] "inline"
  {
    (3340 call compilerError "illegal use of '-' on operand of type "(3338 call _cast string[26](3336 'typeof' a)))
  }
  function -[3355](arg a[3352] :
  (3351 call real[16] unknown w[3348])) : _unknown[51] "inline"
  {
    { scopeless
      (3361 return(3360 'u-' a))
    }
  }
  function -[3376](arg a[3373] :
  (3372 call imag[130] unknown w[3369])) : _unknown[51] "inline"
  {
    { scopeless
      (3382 return(3381 'u-' a))
    }
  }
  function -[3397](arg a[3394] :
  (3393 call complex[140] unknown w[3390])) : _unknown[51] "inline"
  {
    { scopeless
      (3403 return(3402 'u-' a))
    }
  }
  function +[3418](param arg a[3415] :
  (3414 call int[13] unknown w[3411])) param : _unknown[51] "inline"
  {
    { scopeless
      (3421 return a)
    }
  }
  function +[3436](param arg a[3433] :
  (3432 call uint[115] unknown w[3429])) param : _unknown[51] "inline"
  {
    { scopeless
      (3439 return a)
    }
  }
  function +[3454](param arg a[3451] :
  (3450 call real[16] unknown w[3447])) param : _unknown[51] "inline"
  {
    { scopeless
      (3457 return a)
    }
  }
  function +[3472](param arg a[3469] :
  (3468 call imag[130] unknown w[3465])) param : _unknown[51] "inline"
  {
    { scopeless
      (3475 return a)
    }
  }
  function +[3490](param arg a[3487] :
  (3486 call complex[140] unknown w[3483])) param : _unknown[51] "inline"
  {
    { scopeless
      (3493 return a)
    }
  }
  function -[3508](param arg a[3505] :
  (3504 call int[13] unknown w[3501])) param : _unknown[51] "inline"
  {
    { scopeless
      (3514 return(3513 'u-' a))
    }
  }
  function -[3529](param arg a[3526] :
  (3525 call uint[115] unknown w[3522])) param : _unknown[51] "inline"
  {
    if(3562 call _cond_test(3539 call <(3536 call _cast(3535 call int[13] w) a) 0))
    {
      { scopeless
        (3549 call compilerError "illegal use of '-' on operand of type "(3547 call _cast string[26](3545 'typeof' a)))
      }
    }
    {
      { scopeless
        (3560 return(3558 call -(3556 call _cast(3555 call int[13] w) a)))
      }
    }
  }
  function -[3581](param arg a[3578] :
  (3577 call real[16] unknown w[3574])) param : _unknown[51] "inline"
  {
    { scopeless
      (3587 return(3586 'u-' a))
    }
  }
  function -[3602](param arg a[3599] :
  (3598 call imag[130] unknown w[3595])) param : _unknown[51] "inline"
  {
    { scopeless
      (3608 return(3607 'u-' a))
    }
  }
  function -[3623](param arg a[3620] :
  (3619 call complex[140] unknown w[3616])) param : _unknown[51] "inline"
  {
    { scopeless
      (3629 return(3628 'u-' a))
    }
  }
  function +[3644](arg a[3641] :
  (3640 call int[13] unknown w[3637]), arg b[3650] :
  (3649 call int[13] w)) : _unknown[51] "inline"
  {
    { scopeless
      (3674 return(3673 '+' a b))
    }
  }
  function +[3689](arg a[3686] :
  (3685 call uint[115] unknown w[3682]), arg b[3695] :
  (3694 call uint[115] w)) : _unknown[51] "inline"
  {
    { scopeless
      (3703 return(3702 '+' a b))
    }
  }
  function +[3718](arg a[3715] :
  (3714 call real[16] unknown w[3711]), arg b[3724] :
  (3723 call real[16] w)) : _unknown[51] "inline"
  {
    { scopeless
      (3732 return(3731 '+' a b))
    }
  }
  function +[3747](arg a[3744] :
  (3743 call imag[130] unknown w[3740]), arg b[3753] :
  (3752 call imag[130] w)) : _unknown[51] "inline"
  {
    { scopeless
      (3761 return(3760 '+' a b))
    }
  }
  function +[3776](arg a[3773] :
  (3772 call complex[140] unknown w[3769]), arg b[3782] :
  (3781 call complex[140] w)) : _unknown[51] "inline"
  {
    { scopeless
      (3790 return(3789 '+' a b))
    }
  }
  function +[3805](arg a[3802] :
  (3801 call real[16] unknown w[3798]), arg b[3811] :
  (3810 call imag[130] w)) : _unknown[51] "inline"
  {
    { scopeless
      (3831 return(3829 call _cast(3828 call complex[140](3825 call * w 2))(3820 call _build_tuple a(3818 call _i2r b))))
    }
  }
  function +[3846](arg a[3843] :
  (3842 call imag[130] unknown w[3839]), arg b[3852] :
  (3851 call real[16] w)) : _unknown[51] "inline"
  {
    { scopeless
      (3872 return(3870 call _cast(3869 call complex[140](3866 call * w 2))(3861 call _build_tuple b(3859 call _i2r a))))
    }
  }
  function +[3887](arg a[3884] :
  (3883 call real[16] unknown w[3880]), arg b[3896] :
  (3895 call complex[140](3892 call * w 2))) : _unknown[51] "inline"
  {
    { scopeless
      (3922 return(3920 call _cast(3919 call complex[140](3916 call * w 2))(3911 call _build_tuple(3904 call + a(3901 call . b c"re"))(3907 call . b c"im"))))
    }
  }
  function +[3937](arg a[3934] :
  (3933 call complex[140] unknown w[3930]), arg b[3946] :
  (3945 call real[16](3942 call / w 2))) : _unknown[51] "inline"
  {
    { scopeless
      (3969 return(3967 call _cast(3966 call complex[140] w)(3961 call _build_tuple(3954 call +(3950 call . a c"re") b)(3957 call . a c"im"))))
    }
  }
  function +[3984](arg a[3981] :
  (3980 call imag[130] unknown w[3977]), arg b[3993] :
  (3992 call complex[140](3989 call * w 2))) : _unknown[51] "inline"
  {
    { scopeless
      (4022 return(4020 call _cast(4019 call complex[140](4016 call * w 2))(4011 call _build_tuple(3997 call . b c"re")(4008 call +(4003 call _i2r a)(4005 call . b c"im")))))
    }
  }
  function +[4037](arg a[4034] :
  (4033 call complex[140] unknown w[4030]), arg b[4046] :
  (4045 call imag[130](4042 call / w 2))) : _unknown[51] "inline"
  {
    { scopeless
      (4072 return(4070 call _cast(4069 call complex[140] w)(4064 call _build_tuple(4050 call . a c"re")(4061 call +(4054 call . a c"im")(4060 call _i2r b)))))
    }
  }
  function -[4087](arg a[4084] :
  (4083 call int[13] unknown w[4080]), arg b[4093] :
  (4092 call int[13] w)) : _unknown[51] "inline"
  {
    { scopeless
      (4117 return(4116 '-' a b))
    }
  }
  function -[4132](arg a[4129] :
  (4128 call uint[115] unknown w[4125]), arg b[4138] :
  (4137 call uint[115] w)) : _unknown[51] "inline"
  {
    { scopeless
      (4146 return(4145 '-' a b))
    }
  }
  function -[4161](arg a[4158] :
  (4157 call real[16] unknown w[4154]), arg b[4167] :
  (4166 call real[16] w)) : _unknown[51] "inline"
  {
    { scopeless
      (4175 return(4174 '-' a b))
    }
  }
  function -[4190](arg a[4187] :
  (4186 call imag[130] unknown w[4183]), arg b[4196] :
  (4195 call imag[130] w)) : _unknown[51] "inline"
  {
    { scopeless
      (4204 return(4203 '-' a b))
    }
  }
  function -[4219](arg a[4216] :
  (4215 call complex[140] unknown w[4212]), arg b[4225] :
  (4224 call complex[140] w)) : _unknown[51] "inline"
  {
    { scopeless
      (4233 return(4232 '-' a b))
    }
  }
  function -[4248](arg a[4245] :
  (4244 call real[16] unknown w[4241]), arg b[4254] :
  (4253 call imag[130] w)) : _unknown[51] "inline"
  {
    { scopeless
      (4276 return(4274 call _cast(4273 call complex[140](4270 call * w 2))(4265 call _build_tuple a(4262 call -(4261 call _i2r b)))))
    }
  }
  function -[4291](arg a[4288] :
  (4287 call imag[130] unknown w[4284]), arg b[4297] :
  (4296 call real[16] w)) : _unknown[51] "inline"
  {
    { scopeless
      (4319 return(4317 call _cast(4316 call complex[140](4313 call * w 2))(4308 call _build_tuple(4301 call - b)(4306 call _i2r a))))
    }
  }
  function -[4334](arg a[4331] :
  (4330 call real[16] unknown w[4327]), arg b[4343] :
  (4342 call complex[140](4339 call * w 2))) : _unknown[51] "inline"
  {
    { scopeless
      (4371 return(4369 call _cast(4368 call complex[140](4365 call * w 2))(4360 call _build_tuple(4351 call - a(4348 call . b c"re"))(4357 call -(4354 call . b c"im")))))
    }
  }
  function -[4386](arg a[4383] :
  (4382 call complex[140] unknown w[4379]), arg b[4395] :
  (4394 call real[16](4391 call / w 2))) : _unknown[51] "inline"
  {
    { scopeless
      (4418 return(4416 call _cast(4415 call complex[140] w)(4410 call _build_tuple(4403 call -(4399 call . a c"re") b)(4406 call . a c"im"))))
    }
  }
  function -[4433](arg a[4430] :
  (4429 call imag[130] unknown w[4426]), arg b[4442] :
  (4441 call complex[140](4438 call * w 2))) : _unknown[51] "inline"
  {
    { scopeless
      (4473 return(4471 call _cast(4470 call complex[140](4467 call * w 2))(4462 call _build_tuple(4449 call -(4446 call . b c"re"))(4459 call -(4454 call _i2r a)(4456 call . b c"im")))))
    }
  }
  function -[4488](arg a[4485] :
  (4484 call complex[140] unknown w[4481]), arg b[4497] :
  (4496 call imag[130](4493 call / w 2))) : _unknown[51] "inline"
  {
    { scopeless
      (4523 return(4521 call _cast(4520 call complex[140] w)(4515 call _build_tuple(4501 call . a c"re")(4512 call -(4505 call . a c"im")(4511 call _i2r b)))))
    }
  }
  function +[4538](param arg a[4535] :
  (4534 call int[13] unknown w[4531]), param arg b[4544] :
  (4543 call int[13] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (4552 return(4551 '+' a b))
    }
  }
  function +[4567](param arg a[4564] :
  (4563 call uint[115] unknown w[4560]), param arg b[4573] :
  (4572 call uint[115] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (4581 return(4580 '+' a b))
    }
  }
  function +[4596](param arg a[4593] :
  (4592 call real[16] unknown w[4589]), param arg b[4602] :
  (4601 call real[16] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (4610 return(4609 '+' a b))
    }
  }
  function +[4625](param arg a[4622] :
  (4621 call imag[130] unknown w[4618]), param arg b[4631] :
  (4630 call imag[130] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (4639 return(4638 '+' a b))
    }
  }
  function +[4654](param arg a[4651] :
  (4650 call complex[140] unknown w[4647]), param arg b[4660] :
  (4659 call complex[140] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (4668 return(4667 '+' a b))
    }
  }
  function -[4683](param arg a[4680] :
  (4679 call int[13] unknown w[4676]), param arg b[4689] :
  (4688 call int[13] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (4697 return(4696 '-' a b))
    }
  }
  function -[4712](param arg a[4709] :
  (4708 call uint[115] unknown w[4705]), param arg b[4718] :
  (4717 call uint[115] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (4726 return(4725 '-' a b))
    }
  }
  function -[4741](param arg a[4738] :
  (4737 call real[16] unknown w[4734]), param arg b[4747] :
  (4746 call real[16] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (4755 return(4754 '-' a b))
    }
  }
  function -[4770](param arg a[4767] :
  (4766 call imag[130] unknown w[4763]), param arg b[4776] :
  (4775 call imag[130] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (4784 return(4783 '-' a b))
    }
  }
  function -[4799](param arg a[4796] :
  (4795 call complex[140] unknown w[4792]), param arg b[4805] :
  (4804 call complex[140] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (4813 return(4812 '-' a b))
    }
  }
  function *[4828](arg a[4825] :
  (4824 call int[13] unknown w[4821]), arg b[4834] :
  (4833 call int[13] w)) : _unknown[51] "inline"
  {
    { scopeless
      (4858 return(4857 '*' a b))
    }
  }
  function *[4873](arg a[4870] :
  (4869 call uint[115] unknown w[4866]), arg b[4879] :
  (4878 call uint[115] w)) : _unknown[51] "inline"
  {
    { scopeless
      (4887 return(4886 '*' a b))
    }
  }
  function *[4902](arg a[4899] :
  (4898 call real[16] unknown w[4895]), arg b[4908] :
  (4907 call real[16] w)) : _unknown[51] "inline"
  {
    { scopeless
      (4916 return(4915 '*' a b))
    }
  }
  function *[4931](arg a[4928] :
  (4927 call imag[130] unknown w[4924]), arg b[4937] :
  (4936 call imag[130] w)) : _unknown[51] "inline"
  {
    { scopeless
      (4950 return(4949 call _i2r(4947 '*'(4944 call - a) b)))
    }
  }
  function *[4965](arg a[4962] :
  (4961 call complex[140] unknown w[4958]), arg b[4971] :
  (4970 call complex[140] w)) : _unknown[51] "inline"
  {
    { scopeless
      (4979 return(4978 '*' a b))
    }
  }
  function *[4994](arg a[4991] :
  (4990 call real[16] unknown w[4987]), arg b[5000] :
  (4999 call imag[130] w)) : _unknown[51] "inline"
  {
    { scopeless
      (5013 return(5012 call _r2i(5009 call * a(5008 call _i2r b))))
    }
  }
  function *[5028](arg a[5025] :
  (5024 call imag[130] unknown w[5021]), arg b[5034] :
  (5033 call real[16] w)) : _unknown[51] "inline"
  {
    { scopeless
      (5047 return(5046 call _r2i(5043 call *(5041 call _i2r a) b)))
    }
  }
  function *[5062](arg a[5059] :
  (5058 call real[16] unknown w[5055]), arg b[5071] :
  (5070 call complex[140](5067 call * w 2))) : _unknown[51] "inline"
  {
    { scopeless
      (5100 return(5098 call _cast(5097 call complex[140](5094 call * w 2))(5089 call _build_tuple(5079 call * a(5076 call . b c"re"))(5086 call * a(5083 call . b c"im")))))
    }
  }
  function *[5115](arg a[5112] :
  (5111 call complex[140] unknown w[5108]), arg b[5124] :
  (5123 call real[16](5120 call / w 2))) : _unknown[51] "inline"
  {
    { scopeless
      (5150 return(5148 call _cast(5147 call complex[140] w)(5142 call _build_tuple(5132 call *(5128 call . a c"re") b)(5139 call *(5135 call . a c"im") b))))
    }
  }
  function *[5165](arg a[5162] :
  (5161 call imag[130] unknown w[5158]), arg b[5174] :
  (5173 call complex[140](5170 call * w 2))) : _unknown[51] "inline"
  {
    { scopeless
      (5211 return(5209 call _cast(5208 call complex[140](5205 call * w 2))(5200 call _build_tuple(5187 call -(5185 call *(5180 call _i2r a)(5182 call . b c"im")))(5197 call *(5192 call _i2r a)(5194 call . b c"re")))))
    }
  }
  function *[5226](arg a[5223] :
  (5222 call complex[140] unknown w[5219]), arg b[5235] :
  (5234 call imag[130](5231 call / w 2))) : _unknown[51] "inline"
  {
    { scopeless
      (5269 return(5267 call _cast(5266 call complex[140] w)(5261 call _build_tuple(5248 call -(5246 call *(5239 call . a c"im")(5245 call _i2r b)))(5258 call *(5251 call . a c"re")(5257 call _i2r b)))))
    }
  }
  function /[5284](arg a[5281] :
  (5280 call int[13] unknown w[5277]), arg b[5290] :
  (5289 call int[13] w)) : _unknown[51] "inline"
  {
    if(5326 call _cond_test chpl_checkDivByZero)
    {
      { scopeless
        if(5321 call _cond_test(5296 call == b 0))
        {
          { scopeless
            (5319 call halt "Attempt to divide by zero")
          }
        }
      }
    }
    (5353 return(5352 '/' a b))
  }
  function /[5367](arg a[5364] :
  (5363 call uint[115] unknown w[5360]), arg b[5373] :
  (5372 call uint[115] w)) : _unknown[51] "inline"
  {
    if(5391 call _cond_test chpl_checkDivByZero)
    {
      { scopeless
        if(5386 call _cond_test(5379 call == b 0))
        {
          { scopeless
            (5384 call halt "Attempt to divide by zero")
          }
        }
      }
    }
    (5402 return(5401 '/' a b))
  }
  function /[5416](arg a[5413] :
  (5412 call real[16] unknown w[5409]), arg b[5422] :
  (5421 call real[16] w)) : _unknown[51] "inline"
  {
    { scopeless
      (5430 return(5429 '/' a b))
    }
  }
  function /[5445](arg a[5442] :
  (5441 call imag[130] unknown w[5438]), arg b[5451] :
  (5450 call imag[130] w)) : _unknown[51] "inline"
  {
    { scopeless
      (5462 return(5461 call _i2r(5459 '/' a b)))
    }
  }
  function /[5477](arg a[5474] :
  (5473 call complex[140] unknown w[5470]), arg b[5483] :
  (5482 call complex[140] w)) : _unknown[51] "inline"
  {
    { scopeless
      (5491 return(5490 '/' a b))
    }
  }
  function /[5506](arg a[5503] :
  (5502 call real[16] unknown w[5499]), arg b[5512] :
  (5511 call imag[130] w)) : _unknown[51] "inline"
  {
    { scopeless
      (5527 return(5526 call _r2i(5523 call -(5521 call / a(5520 call _i2r b)))))
    }
  }
  function /[5542](arg a[5539] :
  (5538 call imag[130] unknown w[5535]), arg b[5548] :
  (5547 call real[16] w)) : _unknown[51] "inline"
  {
    { scopeless
      (5561 return(5560 call _r2i(5557 call /(5555 call _i2r a) b)))
    }
  }
  function /[5576](arg a[5573] :
  (5572 call real[16] unknown w[5569]), arg b[5585] :
  (5584 call complex[140](5581 call * w 2))) : _unknown[51] "inline"
  {
    { scopeless
      const d[5592] "const"(5591 call abs b)
      (5595 'end of statement')
    }
    (5637 return(5635 call _cast(5634 call complex[140](5631 call * w 2))(5626 call _build_tuple(5608 call *(5599 call / a d)(5606 call /(5602 call . b c"re") d))(5623 call *(5614 call -(5612 call / a d))(5621 call /(5617 call . b c"im") d)))))
  }
  function /[5651](arg a[5648] :
  (5647 call complex[140] unknown w[5644]), arg b[5660] :
  (5659 call real[16](5656 call / w 2))) : _unknown[51] "inline"
  {
    { scopeless
      (5686 return(5684 call _cast(5683 call complex[140] w)(5678 call _build_tuple(5668 call /(5664 call . a c"re") b)(5675 call /(5671 call . a c"im") b))))
    }
  }
  function /[5701](arg a[5698] :
  (5697 call imag[130] unknown w[5694]), arg b[5710] :
  (5709 call complex[140](5706 call * w 2))) : _unknown[51] "inline"
  {
    { scopeless
      const d[5717] "const"(5716 call abs b)
      (5720 'end of statement')
    }
    (5766 return(5764 call _cast(5763 call complex[140](5760 call * w 2))(5755 call _build_tuple(5736 call *(5727 call /(5725 call _i2r a) d)(5734 call /(5730 call . b c"im") d))(5752 call *(5743 call /(5741 call _i2r a) d)(5750 call /(5746 call . b c"re") d)))))
  }
  function /[5780](arg a[5777] :
  (5776 call complex[140] unknown w[5773]), arg b[5789] :
  (5788 call imag[130](5785 call / w 2))) : _unknown[51] "inline"
  {
    { scopeless
      (5823 return(5821 call _cast(5820 call complex[140] w)(5815 call _build_tuple(5800 call /(5793 call . a c"im")(5799 call _i2r b))(5812 call -(5810 call /(5803 call . a c"re")(5809 call _i2r b))))))
    }
  }
  function *[5838](param arg a[5835] :
  (5834 call int[13] unknown w[5831]), param arg b[5844] :
  (5843 call int[13] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (5852 return(5851 '*' a b))
    }
  }
  function *[5867](param arg a[5864] :
  (5863 call uint[115] unknown w[5860]), param arg b[5873] :
  (5872 call uint[115] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (5881 return(5880 '*' a b))
    }
  }
  function *[5896](param arg a[5893] :
  (5892 call real[16] unknown w[5889]), param arg b[5902] :
  (5901 call real[16] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (5910 return(5909 '*' a b))
    }
  }
  function *[5925](param arg a[5922] :
  (5921 call imag[130] unknown w[5918]), param arg b[5931] :
  (5930 call imag[130] w)) param : _unknown[51] "inline"
  {
    (5947 return(5945 call _cast(5944 call real[16] w)(5940 '*'(5937 call - a) b)))
  }
  function *[5962](param arg a[5959] :
  (5958 call real[16] unknown w[5955]), param arg b[5968] :
  (5967 call imag[130] w)) param : _unknown[51] "inline"
  {
    (5988 return(5986 call _cast(5985 call imag[130] w)(5981 '*' a(5979 call _cast(5978 call real[16] w) b))))
  }
  function *[6003](param arg a[6000] :
  (5999 call imag[130] unknown w[5996]), param arg b[6009] :
  (6008 call real[16] w)) param : _unknown[51] "inline"
  {
    (6029 return(6027 call _cast(6026 call imag[130] w)(6022 '*'(6019 call _cast(6018 call real[16] w) a) b)))
  }
  function /[6044](param arg a[6041] :
  (6040 call int[13] unknown w[6037]), param arg b[6050] :
  (6049 call int[13] w)) param : _unknown[51] "inline"
  {
    if(6062 call _cond_test(6055 call == b 0))
    {
      { scopeless
        (6060 call compilerError "Attempt to divide by zero")
      }
    }
    (6073 return(6072 '/' a b))
  }
  function /[6087](param arg a[6084] :
  (6083 call uint[115] unknown w[6080]), param arg b[6093] :
  (6092 call uint[115] w)) param : _unknown[51] "inline"
  {
    if(6105 call _cond_test(6098 call == b 0))
    {
      { scopeless
        (6103 call compilerError "Attempt to divide by zero")
      }
    }
    (6116 return(6115 '/' a b))
  }
  function /[6130](param arg a[6127] :
  (6126 call real[16] unknown w[6123]), param arg b[6136] :
  (6135 call real[16] w)) param : _unknown[51] "inline"
  {
    (6144 return(6143 '/' a b))
  }
  function /[6159](param arg a[6156] :
  (6155 call imag[130] unknown w[6152]), param arg b[6165] :
  (6164 call imag[130] w)) param : _unknown[51] "inline"
  {
    (6179 return(6177 call _cast(6176 call real[16] w)(6172 '/' a b)))
  }
  function /[6194](param arg a[6191] :
  (6190 call real[16] unknown w[6187]), param arg b[6200] :
  (6199 call imag[130] w)) param : _unknown[51] "inline"
  {
    (6222 return(6220 call _cast(6219 call imag[130] w)(6215 '/'(6206 call - a)(6213 call _cast(6212 call real[16] w) b))))
  }
  function /[6237](param arg a[6234] :
  (6233 call imag[130] unknown w[6230]), param arg b[6243] :
  (6242 call real[16] w)) param : _unknown[51] "inline"
  {
    (6263 return(6261 call _cast(6260 call imag[130] w)(6256 '/'(6253 call _cast(6252 call real[16] w) a) b)))
  }
  function %[6278](arg a[6275] :
  (6274 call int[13] unknown w[6271]), arg b[6284] :
  (6283 call int[13] w)) : _unknown[51] "inline"
  {
    if(6320 call _cond_test chpl_checkDivByZero)
    {
      { scopeless
        if(6315 call _cond_test(6290 call == b 0))
        {
          { scopeless
            (6313 call halt "Attempt to compute a modulus by zero")
          }
        }
      }
    }
    (6347 return(6346 '%' a b))
  }
  function %[6361](arg a[6358] :
  (6357 call uint[115] unknown w[6354]), arg b[6367] :
  (6366 call uint[115] w)) : _unknown[51] "inline"
  {
    if(6385 call _cond_test chpl_checkDivByZero)
    {
      { scopeless
        if(6380 call _cond_test(6373 call == b 0))
        {
          { scopeless
            (6378 call halt "Attempt to compute a modulus by zero")
          }
        }
      }
    }
    (6396 return(6395 '%' a b))
  }
  function %[6410](param arg a[6407] :
  (6406 call int[13] unknown w[6403]), param arg b[6416] :
  (6415 call int[13] w)) param : _unknown[51] "inline"
  {
    if(6428 call _cond_test(6421 call == b 0))
    {
      { scopeless
        (6426 call compilerError "Attempt to compute a modulus by zero")
      }
    }
    (6439 return(6438 '%' a b))
  }
  function %[6453](param arg a[6450] :
  (6449 call uint[115] unknown w[6446]), param arg b[6459] :
  (6458 call uint[115] w)) param : _unknown[51] "inline"
  {
    if(6471 call _cond_test(6464 call == b 0))
    {
      { scopeless
        (6469 call compilerError "Attempt to compute a modulus by zero")
      }
    }
    (6482 return(6481 '%' a b))
  }
  function _intExpHelp[6492](arg a[6489] :
  integral, arg b[6494]:_any[178](?)) : _unknown[51] "inline"
  {
    if(6611 call _cond_test(6511 call &&(6506 call isIntType(6504 'typeof' b))(6509 call < b 0)))
    {
      { scopeless
        if(6605 call _cond_test(6515 call == a 0))
        {
          { scopeless
            (6559 call halt "cannot compute " a " ** " b)
          }
        }
        {
          { scopeless
            if(6599 call _cond_test(6563 call == a 1))
            {
              { scopeless
                (6566 return 1)
              }
            }
            {
              { scopeless
                if(6593 call _cond_test(6572 call == a(6570 call - 1)))
                {
                  { scopeless
                    (6588 return(6585 IfExpr (6579 call ==(6576 call % b 2) 0) then
                    { scopeless
                      1
                    } else
                    { scopeless
                      (6583 call - 1)
                    } ))
                  }
                }
                {
                  { scopeless
                    (6591 return 0)
                  }
                }
              }
            }
          }
        }
      }
    }
    { scopeless
      unknown i[6618] b
      unknown y[6624] 1(6622 'typeof' a)
      unknown z[6628] a
      (6631 'end of statement')
    }
    {
      unknown tmp[6664] "temp"
      (6688 'move' tmp[6664](6683 call _cond_test(6685 call != i 0)))
      WhileDo[6669]
      {
        {
          if(6648 call _cond_test(6641 call ==(6638 call % i 2) 1))
          {
            { scopeless
              (6645 call *= y z)
            }
          }
          (6656 call *= z z)
          (6661 call /= i 2)
        }
        label _continueLabel[6667]
        (6678 'move' tmp[6664](6673 call _cond_test(6675 call != i 0)))
        tmp[6664]
      }
      label _breakLabel[6668]
    }
    (6692 return y)
  }
  where {
    (6500 call ==(6497 'typeof' a)(6499 'typeof' b))
  }
  function **[6707](arg a[6704] :
  (6703 call int[13] unknown w[6700]), arg b[6713] :
  (6712 call int[13] w)) : _unknown[51] "inline"
  {
    { scopeless
      (6721 return(6720 call _intExpHelp a b))
    }
  }
  function **[6736](arg a[6733] :
  (6732 call uint[115] unknown w[6729]), arg b[6742] :
  (6741 call uint[115] w)) : _unknown[51] "inline"
  {
    { scopeless
      (6750 return(6749 call _intExpHelp a b))
    }
  }
  function **[6765](arg a[6762] :
  (6761 call real[16] unknown w[6758]), arg b[6771] :
  (6770 call real[16] w)) : _unknown[51] "inline"
  {
    { scopeless
      (6795 return(6794 '**' a b))
    }
  }
  function **[6810](arg a[6807] :
  (6806 call complex[140] unknown w[6803]), arg b[6816] :
  (6815 call complex[140] w)) : _unknown[51] "inline"
  {
    if(6895 call _cond_test(6827 call ==(6820 'typeof' a)(6826 call complex[140] 128)))
    {
      function cpow[6838](arg x[6835] :
      (6834 call complex[140] 128), arg y[6844] :
      (6843 call complex[140] 128)) : _unknown[51] "extern" "local args" "no fn body" "fn synchronization free"
      {
      }
      { scopeless type
        (6850 call complex[140] 128)
      }
      (6860 return(6859 call cpow a b))
    }
    {
      function cpowf[6871](arg x[6868] :
      (6867 call complex[140] 64), arg y[6877] :
      (6876 call complex[140] 64)) : _unknown[51] "extern" "local args" "no fn body" "fn synchronization free"
      {
      }
      { scopeless type
        (6883 call complex[140] 64)
      }
      (6893 return(6892 call cpowf a b))
    }
  }
  function **[6912](param arg a[6909] :
  (6908 call int[13] unknown w[6905]), param arg b[6918] :
  (6917 call int[13] w)) param : _unknown[51]
  {
    { scopeless
      (6926 return(6925 '**' a b))
    }
  }
  function **[6941](param arg a[6938] :
  (6937 call uint[115] unknown w[6934]), param arg b[6947] :
  (6946 call uint[115] w)) param : _unknown[51]
  {
    { scopeless
      (6955 return(6954 '**' a b))
    }
  }
  function _expHelp[6964](arg a[6962]:_any[178](?), param arg b[6967] :
  integral) : _unknown[51] "inline"
  {
    if(7168 call _cond_test(6972 call == b 0))
    {
      (6979 return(6977 call _cast(6976 'typeof' a) 1))
    }
    {
      { scopeless
        if(7163 call _cond_test(6984 call == b 1))
        {
          (6987 return a)
        }
        {
          { scopeless
            if(7158 call _cond_test(6992 call == b 2))
            {
              (6998 return(6996 call * a a))
            }
            {
              { scopeless
                if(7153 call _cond_test(7005 call == b 3))
                {
                  (7014 return(7012 call *(7009 call * a a) a))
                }
                {
                  { scopeless
                    if(7148 call _cond_test(7019 call == b 4))
                    {
                      { scopeless
                        const t[7025] "const"(7023 call * a a)
                        (7028 'end of statement')
                      }
                      (7034 return(7032 call * t t))
                    }
                    {
                      { scopeless
                        if(7143 call _cond_test(7040 call == b 5))
                        {
                          { scopeless
                            const t[7046] "const"(7044 call * a a)
                            (7049 'end of statement')
                          }
                          (7058 return(7056 call *(7053 call * t t) a))
                        }
                        {
                          { scopeless
                            if(7138 call _cond_test(7062 call == b 6))
                            {
                              { scopeless
                                const t[7068] "const"(7066 call * a a)
                                (7071 'end of statement')
                              }
                              (7080 return(7078 call *(7075 call * t t) t))
                            }
                            {
                              { scopeless
                                if(7133 call _cond_test(7086 call == b 8))
                                {
                                  { scopeless
                                    const t[7092] "const"(7090 call * a a)
                                    const u[7099] "const"(7097 call * t t)
                                    (7102 'end of statement')
                                  }
                                  (7108 return(7106 call * u u))
                                }
                                {
                                  { scopeless
                                    (7131 call compilerError "unexpected case in exponentiation optimization")
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  function _expBaseHelp[7182](param arg a[7179] :
  int[13], arg b[7184]:_any[178](?)) : _unknown[51] "inline"
  {
    if(7201 call _cond_test(7192 call == b 0))
    {
      { scopeless
        (7199 return(7197 call _cast(7196 'typeof' a) 1))
      }
    }
    if(7227 call _cond_test(7209 call < b 0))
    {
      { scopeless
        if(7221 call _cond_test(7213 call == a 1))
        {
          { scopeless
            (7216 return 1)
          }
        }
        {
          { scopeless
            (7219 return 0)
          }
        }
      }
    }
    { scopeless
      unknown c[7233] 0
      (7236 'end of statement')
    }
    { scopeless
      unknown x[7239] a int[13]
      (7242 'end of statement')
    }
    {
      unknown tmp[7261] "temp"
      (7285 'move' tmp[7261](7280 call _cond_test(7282 call > x 1)))
      WhileDo[7266]
      {
        {
          (7249 call += c 1)
          (7258 call = x(7256 call >> x 1))
        }
        label _continueLabel[7264]
        (7275 'move' tmp[7261](7270 call _cond_test(7272 call > x 1)))
        tmp[7261]
      }
      label _breakLabel[7265]
    }
    { scopeless
      unknown exp[7295](7293 call * c(7291 call - b 1))
      (7298 'end of statement')
    }
    (7303 return(7301 call << a exp))
  }
  where {
    (7189 call _basePowerTwo a)
  }
  function _canOptimizeExp[7314](param arg b[7311] :
  integral) param : _unknown[51]
  {
    { scopeless
      (7332 return(7330 call &&(7324 call &&(7318 call >= b 0)(7322 call <= b 8))(7328 call != b 7)))
    }
  }
  function _basePowerTwo[7343](param arg a[7340] :
  integral) param : _unknown[51]
  {
    { scopeless
      (7363 return(7361 call &&(7347 call > a 0)(7359 call ==(7356 call & a(7354 call +(7351 call ~ a) 1)) a)))
    }
  }
  function **[7378](arg a[7375] :
  (7374 call int[13] unknown w[7371]), param arg b[7381] :
  integral) : _unknown[51] "inline"
  {
    { scopeless
      (7393 return(7392 call _expHelp a b))
    }
  }
  where {
    (7387 call _canOptimizeExp b)
  }
  function **[7409](arg a[7406] :
  (7405 call uint[115] unknown w[7402]), param arg b[7412] :
  integral) : _unknown[51] "inline"
  {
    { scopeless
      (7424 return(7423 call _expHelp a b))
    }
  }
  where {
    (7418 call _canOptimizeExp b)
  }
  function **[7440](arg a[7437] :
  (7436 call real[16] unknown w[7433]), param arg b[7443] :
  integral) : _unknown[51] "inline"
  {
    { scopeless
      (7455 return(7454 call _expHelp a b))
    }
  }
  where {
    (7449 call _canOptimizeExp b)
  }
  function **[7467](param arg a[7464] :
  integral, arg b[7470] :
  int[13]) : _unknown[51] "inline"
  {
    { scopeless
      (7482 return(7481 call _expBaseHelp a b))
    }
  }
  where {
    (7476 call _basePowerTwo a)
  }
  function ![7494](arg a[7491] :
  bool[10]) : _unknown[51] "inline"
  {
    { scopeless
      (7516 return(7515 '!' a))
    }
  }
  function ![7531](arg a[7528] :
  (7527 call int[13] unknown w[7524])) : _unknown[51] "inline"
  {
    { scopeless
      (7537 return(7535 call == a 0))
    }
  }
  function ![7552](arg a[7549] :
  (7548 call uint[115] unknown w[7545])) : _unknown[51] "inline"
  {
    { scopeless
      (7558 return(7556 call == a 0))
    }
  }
  function isTrue[7569](arg a[7566] :
  bool[10]) : _unknown[51] "inline"
  {
    { scopeless
      (7572 return a)
    }
  }
  function isTrue[7583](param arg a[7580] :
  bool[10]) param : _unknown[51] "inline"
  {
    { scopeless
      (7586 return a)
    }
  }
  function isTrue[7597](arg a[7594] :
  integral) : _unknown[51]
  {
    (7620 call compilerError "short-circuiting logical operators not supported on integers")
  }
  function ![7631](param arg a[7628] :
  bool[10]) param : _unknown[51] "inline"
  {
    { scopeless
      (7637 return(7636 '!' a))
    }
  }
  function ![7652](param arg a[7649] :
  (7648 call int[13] unknown w[7645])) param : _unknown[51] "inline"
  {
    { scopeless
      (7658 return(7656 call == a 0))
    }
  }
  function ![7673](param arg a[7670] :
  (7669 call uint[115] unknown w[7666])) param : _unknown[51] "inline"
  {
    { scopeless
      (7679 return(7677 call == a 0))
    }
  }
  function ~[7694](arg a[7691] :
  (7690 call int[13] unknown w[7687])) : _unknown[51] "inline"
  {
    { scopeless
      (7716 return(7715 'u~' a))
    }
  }
  function ~[7731](arg a[7728] :
  (7727 call uint[115] unknown w[7724])) : _unknown[51] "inline"
  {
    { scopeless
      (7737 return(7736 'u~' a))
    }
  }
  function ~[7748](arg a[7745] :
  bool[10]) : _unknown[51] "inline"
  {
    (7769 call compilerError "~ is not supported on operands of boolean type")
  }
  function &[7780](arg a[7777] :
  bool[10], arg b[7783] :
  bool[10]) : _unknown[51] "inline"
  {
    { scopeless
      (7807 return(7806 '&' a b))
    }
  }
  function &[7822](arg a[7819] :
  (7818 call int[13] unknown w[7815]), arg b[7828] :
  (7827 call int[13] w)) : _unknown[51] "inline"
  {
    { scopeless
      (7836 return(7835 '&' a b))
    }
  }
  function &[7851](arg a[7848] :
  (7847 call uint[115] unknown w[7844]), arg b[7857] :
  (7856 call uint[115] w)) : _unknown[51] "inline"
  {
    { scopeless
      (7865 return(7864 '&' a b))
    }
  }
  function &[7880](arg a[7877] :
  (7876 call uint[115] unknown w[7873]), arg b[7886] :
  (7885 call int[13] w)) : _unknown[51] "inline"
  {
    { scopeless
      (7900 return(7899 '&' a(7897 call _cast(7896 call uint[115] w) b)))
    }
  }
  function &[7915](arg a[7912] :
  (7911 call int[13] unknown w[7908]), arg b[7921] :
  (7920 call uint[115] w)) : _unknown[51] "inline"
  {
    { scopeless
      (7935 return(7934 '&'(7931 call _cast(7930 call uint[115] w) a) b))
    }
  }
  function |[7946](arg a[7943] :
  bool[10], arg b[7949] :
  bool[10]) : _unknown[51] "inline"
  {
    { scopeless
      (7973 return(7972 '|' a b))
    }
  }
  function |[7988](arg a[7985] :
  (7984 call int[13] unknown w[7981]), arg b[7994] :
  (7993 call int[13] w)) : _unknown[51] "inline"
  {
    { scopeless
      (8002 return(8001 '|' a b))
    }
  }
  function |[8017](arg a[8014] :
  (8013 call uint[115] unknown w[8010]), arg b[8023] :
  (8022 call uint[115] w)) : _unknown[51] "inline"
  {
    { scopeless
      (8031 return(8030 '|' a b))
    }
  }
  function |[8046](arg a[8043] :
  (8042 call uint[115] unknown w[8039]), arg b[8052] :
  (8051 call int[13] w)) : _unknown[51] "inline"
  {
    { scopeless
      (8066 return(8065 '|' a(8063 call _cast(8062 call uint[115] w) b)))
    }
  }
  function |[8081](arg a[8078] :
  (8077 call int[13] unknown w[8074]), arg b[8087] :
  (8086 call uint[115] w)) : _unknown[51] "inline"
  {
    { scopeless
      (8101 return(8100 '|'(8097 call _cast(8096 call uint[115] w) a) b))
    }
  }
  function ^[8112](arg a[8109] :
  bool[10], arg b[8115] :
  bool[10]) : _unknown[51] "inline"
  {
    { scopeless
      (8139 return(8138 '^' a b))
    }
  }
  function ^[8154](arg a[8151] :
  (8150 call int[13] unknown w[8147]), arg b[8160] :
  (8159 call int[13] w)) : _unknown[51] "inline"
  {
    { scopeless
      (8168 return(8167 '^' a b))
    }
  }
  function ^[8183](arg a[8180] :
  (8179 call uint[115] unknown w[8176]), arg b[8189] :
  (8188 call uint[115] w)) : _unknown[51] "inline"
  {
    { scopeless
      (8197 return(8196 '^' a b))
    }
  }
  function ^[8212](arg a[8209] :
  (8208 call uint[115] unknown w[8205]), arg b[8218] :
  (8217 call int[13] w)) : _unknown[51] "inline"
  {
    { scopeless
      (8232 return(8231 '^' a(8229 call _cast(8228 call uint[115] w) b)))
    }
  }
  function ^[8247](arg a[8244] :
  (8243 call int[13] unknown w[8240]), arg b[8253] :
  (8252 call uint[115] w)) : _unknown[51] "inline"
  {
    { scopeless
      (8267 return(8266 '^'(8263 call _cast(8262 call uint[115] w) a) b))
    }
  }
  function ~[8278](param arg a[8275] :
  bool[10]) : _unknown[51] "inline"
  {
    (8283 call compilerError "~ is not supported on operands of boolean type")
  }
  function ~[8298](param arg a[8295] :
  (8294 call int[13] unknown w[8291])) param : _unknown[51] "inline"
  {
    { scopeless
      (8304 return(8303 'u~' a))
    }
  }
  function ~[8319](param arg a[8316] :
  (8315 call uint[115] unknown w[8312])) param : _unknown[51] "inline"
  {
    { scopeless
      (8325 return(8324 'u~' a))
    }
  }
  function &[8336](param arg a[8333] :
  bool[10], param arg b[8339] :
  bool[10]) param : _unknown[51] "inline"
  {
    { scopeless
      (8347 return(8346 '&' a b))
    }
  }
  function &[8362](param arg a[8359] :
  (8358 call int[13] unknown w[8355]), param arg b[8368] :
  (8367 call int[13] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (8376 return(8375 '&' a b))
    }
  }
  function &[8391](param arg a[8388] :
  (8387 call uint[115] unknown w[8384]), param arg b[8397] :
  (8396 call uint[115] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (8405 return(8404 '&' a b))
    }
  }
  function &[8420](param arg a[8417] :
  (8416 call uint[115] unknown w[8413]), param arg b[8426] :
  (8425 call int[13] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (8440 return(8439 '&' a(8437 call _cast(8436 call uint[115] w) b)))
    }
  }
  function &[8455](param arg a[8452] :
  (8451 call int[13] unknown w[8448]), param arg b[8461] :
  (8460 call uint[115] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (8475 return(8474 '&'(8471 call _cast(8470 call uint[115] w) a) b))
    }
  }
  function |[8486](param arg a[8483] :
  bool[10], param arg b[8489] :
  bool[10]) param : _unknown[51] "inline"
  {
    { scopeless
      (8497 return(8496 '|' a b))
    }
  }
  function |[8512](param arg a[8509] :
  (8508 call int[13] unknown w[8505]), param arg b[8518] :
  (8517 call int[13] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (8526 return(8525 '|' a b))
    }
  }
  function |[8541](param arg a[8538] :
  (8537 call uint[115] unknown w[8534]), param arg b[8547] :
  (8546 call uint[115] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (8555 return(8554 '|' a b))
    }
  }
  function |[8570](param arg a[8567] :
  (8566 call uint[115] unknown w[8563]), param arg b[8576] :
  (8575 call int[13] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (8590 return(8589 '|' a(8587 call _cast(8586 call uint[115] w) b)))
    }
  }
  function |[8605](param arg a[8602] :
  (8601 call int[13] unknown w[8598]), param arg b[8611] :
  (8610 call uint[115] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (8625 return(8624 '|'(8621 call _cast(8620 call uint[115] w) a) b))
    }
  }
  function ^[8636](param arg a[8633] :
  bool[10], param arg b[8639] :
  bool[10]) param : _unknown[51] "inline"
  {
    { scopeless
      (8647 return(8646 '^' a b))
    }
  }
  function ^[8662](param arg a[8659] :
  (8658 call int[13] unknown w[8655]), param arg b[8668] :
  (8667 call int[13] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (8676 return(8675 '^' a b))
    }
  }
  function ^[8691](param arg a[8688] :
  (8687 call uint[115] unknown w[8684]), param arg b[8697] :
  (8696 call uint[115] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (8705 return(8704 '^' a b))
    }
  }
  function ^[8720](param arg a[8717] :
  (8716 call uint[115] unknown w[8713]), param arg b[8726] :
  (8725 call int[13] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (8740 return(8739 '^' a(8737 call _cast(8736 call uint[115] w) b)))
    }
  }
  function ^[8755](param arg a[8752] :
  (8751 call int[13] unknown w[8748]), param arg b[8761] :
  (8760 call uint[115] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (8775 return(8774 '^'(8771 call _cast(8770 call uint[115] w) a) b))
    }
  }
  function bitshiftChecks[8784](arg a[8782]:_any[178](?), arg b[8787] :
  integral) : _unknown[51] "inline"
  {
    (8791 'use' HaltWrappers)
    if(8985 call _cond_test(8796 call < b 0))
    {
      { scopeless
        unknown msg[8892](8890 call +(8871 call +(8865 call +(8844 call +(8838 call +(8819 call + "Cannot bitshift "(8817 call _cast string[26] a)) " by ")(8842 call _cast string[26] b)) " because ")(8869 call _cast string[26] b)) " is less than 0")
        (8895 'end of statement')
      }
      (8905 call(8900 call . HaltWrappers c"boundsCheckHalt") msg)
    }
    {
      { scopeless
        if(8981 call _cond_test(8913 call >= b(8912 call numBits(8910 'typeof' a))))
        {
          { scopeless
            unknown msg[8968](8966 call +(8959 call +(8938 call +(8932 call +(8929 call +(8923 call +(8920 call + "Cannot bitshift "(8918 call _cast string[26] a)) " by ")(8927 call _cast string[26] b)) " because ")(8936 call _cast string[26] b)) " is >= the bitwidth of ")(8964 call _cast string[26](8962 'typeof' a)))
            (8971 'end of statement')
          }
          (8979 call(8974 call . HaltWrappers c"boundsCheckHalt") msg)
        }
      }
    }
  }
  function bitshiftChecks[8996](param arg a[8994]:_any[178](?), param arg b[8999] :
  integral) : _unknown[51] "inline"
  {
    if(9101 call _cond_test(9004 call < b 0))
    {
      { scopeless
        unknown msg[9034] "param"(9032 call +(9029 call +(9023 call +(9020 call +(9014 call +(9011 call + "Cannot bitshift "(9009 call _cast string[26] a)) " by ")(9018 call _cast string[26] b)) " because ")(9027 call _cast string[26] b)) " is less than 0")
        (9037 'end of statement')
      }
      (9042 call compilerError msg)
    }
    {
      { scopeless
        if(9097 call _cond_test(9050 call >= b(9049 call numBits(9047 'typeof' a))))
        {
          { scopeless
            unknown msg[9087] "param"(9085 call +(9078 call +(9075 call +(9069 call +(9066 call +(9060 call +(9057 call + "Cannot bitshift "(9055 call _cast string[26] a)) " by ")(9064 call _cast string[26] b)) " because ")(9073 call _cast string[26] b)) " is >= the bitwidth of ")(9083 call _cast string[26](9081 'typeof' a)))
            (9090 'end of statement')
          }
          (9095 call compilerError msg)
        }
      }
    }
  }
  function <<[9119](arg a[9116] :
  (9115 call int[13] unknown w[9112]), arg b[9122] :
  integral) : _unknown[51] "inline"
  {
    if(9132 call _cond_test boundsChecking)
    {
      { scopeless
        (9130 call bitshiftChecks a b)
      }
    }
    (9171 return(9169 call _cast(9168 call int[13] w)(9164 '<<'(9161 call _cast(9160 call uint[115] w) a) b)))
  }
  function <<[9185](arg a[9182] :
  (9181 call uint[115] unknown w[9178]), arg b[9188] :
  integral) : _unknown[51] "inline"
  {
    if(9198 call _cond_test boundsChecking)
    {
      { scopeless
        (9196 call bitshiftChecks a b)
      }
    }
    (9209 return(9208 '<<' a b))
  }
  function >>[9223](arg a[9220] :
  (9219 call int[13] unknown w[9216]), arg b[9226] :
  integral) : _unknown[51] "inline"
  {
    if(9236 call _cond_test boundsChecking)
    {
      { scopeless
        (9234 call bitshiftChecks a b)
      }
    }
    (9263 return(9262 '>>' a b))
  }
  function >>[9277](arg a[9274] :
  (9273 call uint[115] unknown w[9270]), arg b[9280] :
  integral) : _unknown[51] "inline"
  {
    if(9290 call _cond_test boundsChecking)
    {
      { scopeless
        (9288 call bitshiftChecks a b)
      }
    }
    (9301 return(9300 '>>' a b))
  }
  function <<[9315](param arg a[9312] :
  (9311 call int[13] unknown w[9308]), param arg b[9318] :
  integral) param : _unknown[51] "inline"
  {
    if(9328 call _cond_test boundsChecking)
    {
      { scopeless
        (9326 call bitshiftChecks a b)
      }
    }
    (9351 return(9349 call _cast(9348 call int[13] w)(9344 '<<'(9341 call _cast(9340 call uint[115] w) a) b)))
  }
  function <<[9365](param arg a[9362] :
  (9361 call uint[115] unknown w[9358]), param arg b[9368] :
  integral) param : _unknown[51] "inline"
  {
    if(9378 call _cond_test boundsChecking)
    {
      { scopeless
        (9376 call bitshiftChecks a b)
      }
    }
    (9389 return(9388 '<<' a b))
  }
  function >>[9403](param arg a[9400] :
  (9399 call int[13] unknown w[9396]), param arg b[9406] :
  integral) param : _unknown[51] "inline"
  {
    if(9416 call _cond_test boundsChecking)
    {
      { scopeless
        (9414 call bitshiftChecks a b)
      }
    }
    (9427 return(9426 '>>' a b))
  }
  function >>[9441](param arg a[9438] :
  (9437 call uint[115] unknown w[9434]), param arg b[9444] :
  integral) param : _unknown[51] "inline"
  {
    if(9454 call _cond_test boundsChecking)
    {
      { scopeless
        (9452 call bitshiftChecks a b)
      }
    }
    (9465 return(9464 '>>' a b))
  }
  function checkNotNil[9477](arg x[9474] :
  (9473 'to borrowed class from unknown'(9472 'to nilable class from type' class[232](?)))) : _unknown[51] "always propagate line file info" "inline" "private"
  {
    (9480 'import' HaltWrappers)
    if(9525 call _cond_test(9485 call || chpl_checkNilDereferences enablePostfixBangChecks))
    {
      if(9520 call _cond_test(9489 call == x nil[44]))
      {
        (9517 call(9494 call . HaltWrappers c"nilCheckHalt") "argument to ! is nil")
      }
    }
  }
  function postfix![9537](arg t[9534] :
  class[232](?)) type : _unknown[51] "inline"
  {
    (9560 call compilerWarning "applying the postfix-! operator to a type is deprecated; instead use a cast to 'class' or 'borrowed class', e.g. 'MyType :borr)
    (9570 return(9569 call _to_borrowed(9567 call _to_nonnil t)))
  }
  function postfix![9581](arg t[9578] :
  (9577 'to nilable class from type' class[232](?))) type : _unknown[51] "inline"
  {
    (9586 call compilerWarning "applying the postfix-! operator to a type is deprecated; instead use a cast to 'class' or 'borrowed class', e.g. 'MyType :borr)
    (9596 return(9595 call _to_borrowed(9593 call _to_nonnil t)))
  }
  function postfix![9607](arg x[9604] :
  (9603 'to unmanaged class from unknown' class[232](?))) : _unknown[51] "inline"
  {
    (9613 return(9612 call _to_nonnil x))
  }
  function postfix![9625](arg x[9622] :
  (9621 'to borrowed class from unknown' class[232](?))) : _unknown[51] "inline"
  {
    (9631 return(9630 call _to_nonnil x))
  }
  function postfix![9644](arg x[9641] :
  (9640 'to unmanaged class from unknown'(9639 'to nilable class from type' class[232](?)))) : _unknown[51] "always propagate line file info" "inline"
  {
    (9652 call checkNotNil(9650 call _to_borrowed x))
    (9659 return(9658 call _to_nonnil x))
  }
  function postfix![9671](arg x[9668] :
  (9667 'to borrowed class from unknown'(9666 'to nilable class from type' class[232](?)))) : _unknown[51] "always propagate line file info" "inline"
  {
    (9676 call checkNotNil x)
    (9683 return(9682 call _to_nonnil x))
  }
  function postfix![9691](arg x[9689]:_any[178](?)) : _unknown[51] "last resort"
  {
    (9714 call compilerError "postfix ! can only apply to classes")
  }
  function chpl_statementLevelSymbol[9723](arg a[9721]:_any[178](?)) : _unknown[51] "inline"
  {
  }
  function chpl_statementLevelSymbol[9734](arg a[9731] :
  _syncvar) : _unknown[51] "inline"
  {
    (9743 call(9739 call . a c"readFE"))
  }
  function chpl_statementLevelSymbol[9754](arg a[9751] :
  _singlevar) : _unknown[51] "inline"
  {
    (9763 call(9759 call . a c"readFF"))
  }
  function chpl_statementLevelSymbol[9774](arg ir[9771] :
  _iteratorRecord) : _unknown[51] "inline"
  {
    function _ir_copy_recursive[9780](arg ir[9778]:_any[178](?)) : _unknown[51] "iterator fn"
    {
      {
        unknown _indexOfInterest[9790] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[9791] "expr temp" "temp"
        (9800 'move' _iterator[9791](9798 call _getIterator ir))
        Defer
        {
          {
            (9816 call _freeIterator _iterator[9791])
          }
        }
        { scopeless type
          (9805 'move' _indexOfInterest[9790](9802 call iteratorIndex _iterator[9791]))
        }
        ForLoop[9792]
        {
          unknown e[9809] "index var" "insert auto destroy"
          (9811 'move' e[9809] _indexOfInterest[9790])
          { scopeless
            (9788 yield(9787 call chpl__initCopy e))
          }
          label _continueLabel[9795]
          _indexOfInterest[9790]
          _iterator[9791]
        }
        label _breakLabel[9796]
      }
    }
    { scopeless
      unknown irc[9831] "no copy"(9830 call _ir_copy_recursive ir)
      (9834 'end of statement')
    }
    {
      unknown _indexOfInterest[9838] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[9839] "expr temp" "temp"
      (9848 'move' _iterator[9839](9846 call _getIterator irc))
      Defer
      {
        {
          (9864 call _freeIterator _iterator[9839])
        }
      }
      { scopeless type
        (9853 'move' _indexOfInterest[9838](9850 call iteratorIndex _iterator[9839]))
      }
      ForLoop[9840]
      {
        unknown e[9857] "index var" "insert auto destroy"
        (9859 'move' e[9857] _indexOfInterest[9838])
        {
        }
        label _continueLabel[9843]
        _indexOfInterest[9838]
        _iterator[9839]
      }
      label _breakLabel[9844]
    }
  }
  function _cond_test[9881](arg x[9878] :
  (9877 'to borrowed class from unknown'(9876 'to nilable class from type' object))) : _unknown[51] "inline"
  {
    { scopeless
      (9887 return(9885 call != x nil[44]))
    }
  }
  function _cond_test[9898](arg x[9895] :
  bool[10]) : _unknown[51] "inline"
  {
    { scopeless
      (9901 return x)
    }
  }
  function _cond_test[9912](arg x[9909] :
  int[13]) : _unknown[51] "inline"
  {
    { scopeless
      (9918 return(9916 call != x 0))
    }
  }
  function _cond_test[9929](arg x[9926] :
  uint[115]) : _unknown[51] "inline"
  {
    { scopeless
      (9935 return(9933 call != x 0))
    }
  }
  function _cond_test[9946](param arg x[9943] :
  bool[10]) param : _unknown[51] "inline"
  {
    { scopeless
      (9949 return x)
    }
  }
  function _cond_test[9960](param arg x[9957] :
  integral) param : _unknown[51] "inline"
  {
    { scopeless
      (9970 return(9968 call != x(9966 call _cast(9965 'typeof' x) 0)))
    }
  }
  function _cond_test[9979](arg x[9977]:_any[178](?)) : _unknown[51] "inline"
  {
    if(10080 call _cond_test(9986 call !(9984 call <=(9982 'typeof' x) _iteratorRecord)))
    {
      { scopeless
        (10031 call compilerError "type '"(10010 call _cast string[26](10008 'typeof' x)) "' used in if or while condition")
      }
    }
    {
      { scopeless
        (10078 call compilerError "iterator or promoted expression "(10057 call _cast string[26](10055 'typeof' x)) " used in if or while condition")
      }
    }
  }
  function _cond_invalid[10097](arg x[10094] :
  (10093 'to borrowed class from unknown'(10092 'to nilable class from type' object))) param : _unknown[51]
  {
    { scopeless
      (10100 return 0)
    }
  }
  function _cond_invalid[10111](arg x[10108] :
  bool[10]) param : _unknown[51]
  {
    { scopeless
      (10114 return 0)
    }
  }
  function _cond_invalid[10125](arg x[10122] :
  int[13]) param : _unknown[51]
  {
    { scopeless
      (10128 return 0)
    }
  }
  function _cond_invalid[10139](arg x[10136] :
  uint[115]) param : _unknown[51]
  {
    { scopeless
      (10142 return 0)
    }
  }
  function _cond_invalid[10151](arg x[10149]:_any[178](?)) param : _unknown[51]
  {
    { scopeless
      (10154 return 1)
    }
  }
  function isNonnegative[10168](arg i[10165] :
  (10164 call int[13] ?[260])) : _unknown[51] "inline"
  {
    { scopeless
      (10174 return(10172 call >= i 0))
    }
  }
  function isNonnegative[10188](arg i[10185] :
  (10184 call uint[115] ?[260])) param : _unknown[51] "inline"
  {
    { scopeless
      (10191 return 1)
    }
  }
  function isNonnegative[10200](param arg i[10198]:_any[178](?)) param : _unknown[51] "inline"
  {
    { scopeless
      (10206 return(10204 call >= i 0))
    }
  }
  function _unknown[51].re[10214](arg _mt[10219]:_MT[238], ref arg this[10216] :
  chpl_anycomplex) ref : _unknown[51] "inline" "method" "no parens"
  {
    (10241 return(10240 'complex_get_real' this))
  }
  function _unknown[51].re[10249](arg _mt[10254]:_MT[238], arg this[10251] :
  chpl_anycomplex) : _unknown[51] "inline" "method" "no parens"
  {
    if(10314 call _cond_test(10262 call ==(10257 'typeof' this)(10261 call complex[140] 128)))
    {
      function creal[10273](arg x[10270] :
      (10269 call complex[140] 128)) : _unknown[51] "extern" "local args" "no fn body" "fn synchronization free"
      {
      }
      { scopeless type
        (10278 call real[16] 64)
      }
      (10287 return(10286 call creal this))
    }
    {
      function crealf[10298](arg x[10295] :
      (10294 call complex[140] 64)) : _unknown[51] "extern" "local args" "no fn body" "fn synchronization free"
      {
      }
      { scopeless type
        (10303 call real[16] 32)
      }
      (10312 return(10311 call crealf this))
    }
  }
  function _unknown[51].im[10324](arg _mt[10329]:_MT[238], ref arg this[10326] :
  chpl_anycomplex) ref : _unknown[51] "inline" "method" "no parens"
  {
    (10351 return(10350 'complex_get_imag' this))
  }
  function _unknown[51].im[10359](arg _mt[10364]:_MT[238], arg this[10361] :
  chpl_anycomplex) : _unknown[51] "inline" "method" "no parens"
  {
    if(10424 call _cond_test(10372 call ==(10367 'typeof' this)(10371 call complex[140] 128)))
    {
      function cimag[10383](arg x[10380] :
      (10379 call complex[140] 128)) : _unknown[51] "extern" "local args" "no fn body" "fn synchronization free"
      {
      }
      { scopeless type
        (10388 call real[16] 64)
      }
      (10397 return(10396 call cimag this))
    }
    {
      function cimagf[10408](arg x[10405] :
      (10404 call complex[140] 64)) : _unknown[51] "extern" "local args" "no fn body" "fn synchronization free"
      {
      }
      { scopeless type
        (10413 call real[16] 32)
      }
      (10422 return(10421 call cimagf this))
    }
  }
  function _i2r[10441](arg a[10438] :
  (10437 call imag[130] unknown w[10434])) : _unknown[51] "inline"
  {
    { scopeless
      (10467 return(10466 'cast'(10464 call real[16] w) a))
    }
  }
  function _r2i[10482](arg a[10479] :
  (10478 call real[16] unknown w[10475])) : _unknown[51] "inline"
  {
    { scopeless
      (10492 return(10491 'cast'(10489 call imag[130] w) a))
    }
  }
  function min[10507](arg x[10504] :
  (10503 call int[13] unknown w[10500]), arg y[10513] :
  (10512 call int[13] w)) : _unknown[51] "inline"
  {
    { scopeless
      (10525 return(10522 IfExpr (10518 call < x y) then
      { scopeless
        x
      } else
      { scopeless
        y
      } ))
    }
  }
  function max[10540](arg x[10537] :
  (10536 call int[13] unknown w[10533]), arg y[10546] :
  (10545 call int[13] w)) : _unknown[51] "inline"
  {
    { scopeless
      (10558 return(10555 IfExpr (10551 call > x y) then
      { scopeless
        x
      } else
      { scopeless
        y
      } ))
    }
  }
  function min[10573](arg x[10570] :
  (10569 call uint[115] unknown w[10566]), arg y[10579] :
  (10578 call uint[115] w)) : _unknown[51] "inline"
  {
    { scopeless
      (10591 return(10588 IfExpr (10584 call < x y) then
      { scopeless
        x
      } else
      { scopeless
        y
      } ))
    }
  }
  function max[10606](arg x[10603] :
  (10602 call uint[115] unknown w[10599]), arg y[10612] :
  (10611 call uint[115] w)) : _unknown[51] "inline"
  {
    { scopeless
      (10624 return(10621 IfExpr (10617 call > x y) then
      { scopeless
        x
      } else
      { scopeless
        y
      } ))
    }
  }
  function min[10639](arg x[10636] :
  (10635 call real[16] unknown w[10632]), arg y[10645] :
  (10644 call real[16] w)) : _unknown[51] "inline"
  {
    { scopeless
      (10663 return(10660 IfExpr (10656 call |(10650 call < x y)(10655 call isnan x)) then
      { scopeless
        x
      } else
      { scopeless
        y
      } ))
    }
  }
  function max[10678](arg x[10675] :
  (10674 call real[16] unknown w[10671]), arg y[10684] :
  (10683 call real[16] w)) : _unknown[51] "inline"
  {
    { scopeless
      (10702 return(10699 IfExpr (10695 call |(10689 call > x y)(10694 call isnan x)) then
      { scopeless
        x
      } else
      { scopeless
        y
      } ))
    }
  }
  function min[10711](arg x[10709]:_any[178](?), arg y[10713]:_any[178](?)) : _unknown[51] "inline"
  {
    { scopeless
      (10724 return(10721 IfExpr (10717 call < x y) then
      { scopeless
        x
      } else
      { scopeless
        y
      } ))
    }
  }
  function max[10733](arg x[10731]:_any[178](?), arg y[10735]:_any[178](?)) : _unknown[51] "inline"
  {
    { scopeless
      (10746 return(10743 IfExpr (10739 call > x y) then
      { scopeless
        x
      } else
      { scopeless
        y
      } ))
    }
  }
  function min[10755](arg x[10753]:_any[178](?), arg y[10757]:_any[178](?), arg z[10761]:_any[178](?) ...) : _unknown[51] "inline"
  {
    { scopeless
      (10774 return(10773 call min(10769 call min x y)(10772 'expand_tuple' z)))
    }
  }
  function max[10783](arg x[10781]:_any[178](?), arg y[10785]:_any[178](?), arg z[10789]:_any[178](?) ...) : _unknown[51] "inline"
  {
    { scopeless
      (10802 return(10801 call max(10797 call max x y)(10800 'expand_tuple' z)))
    }
  }
  function min[10817](param arg x[10814] :
  (10813 call int[13] unknown w[10810]), param arg y[10823] :
  (10822 call int[13] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (10835 return(10832 IfExpr (10828 call < x y) then
      { scopeless
        x
      } else
      { scopeless
        y
      } ))
    }
  }
  function max[10850](param arg x[10847] :
  (10846 call int[13] unknown w[10843]), param arg y[10856] :
  (10855 call int[13] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (10868 return(10865 IfExpr (10861 call > x y) then
      { scopeless
        x
      } else
      { scopeless
        y
      } ))
    }
  }
  function min[10883](param arg x[10880] :
  (10879 call uint[115] unknown w[10876]), param arg y[10889] :
  (10888 call uint[115] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (10901 return(10898 IfExpr (10894 call < x y) then
      { scopeless
        x
      } else
      { scopeless
        y
      } ))
    }
  }
  function max[10916](param arg x[10913] :
  (10912 call uint[115] unknown w[10909]), param arg y[10922] :
  (10921 call uint[115] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (10934 return(10931 IfExpr (10927 call > x y) then
      { scopeless
        x
      } else
      { scopeless
        y
      } ))
    }
  }
  function min[10949](param arg x[10946] :
  (10945 call real[16] unknown w[10942]), param arg y[10955] :
  (10954 call real[16] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (10967 return(10964 IfExpr (10960 call < x y) then
      { scopeless
        x
      } else
      { scopeless
        y
      } ))
    }
  }
  function max[10982](param arg x[10979] :
  (10978 call real[16] unknown w[10975]), param arg y[10988] :
  (10987 call real[16] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (11000 return(10997 IfExpr (10993 call > x y) then
      { scopeless
        x
      } else
      { scopeless
        y
      } ))
    }
  }
  function min[11015](param arg x[11012] :
  (11011 call imag[130] unknown w[11008]), param arg y[11021] :
  (11020 call imag[130] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (11033 return(11030 IfExpr (11026 call < x y) then
      { scopeless
        x
      } else
      { scopeless
        y
      } ))
    }
  }
  function max[11048](param arg x[11045] :
  (11044 call imag[130] unknown w[11041]), param arg y[11054] :
  (11053 call imag[130] w)) param : _unknown[51] "inline"
  {
    { scopeless
      (11066 return(11063 IfExpr (11059 call > x y) then
      { scopeless
        x
      } else
      { scopeless
        y
      } ))
    }
  }
  function min[11075](arg x[11073]:_any[178](?), arg y[11077]:_any[178](?)) : _unknown[51] "inline"
  {
    (11110 call compilerError "min() and max() are not supported for atomic arguments - apply read() to those arguments first")
  }
  where {
    (11087 call ||(11082 call isAtomic x)(11086 call isAtomic y))
  }
  function max[11120](arg x[11118]:_any[178](?), arg y[11122]:_any[178](?)) : _unknown[51] "inline"
  {
    (11137 call compilerError "min() and max() are not supported for atomic arguments - apply read() to those arguments first")
  }
  where {
    (11132 call ||(11127 call isAtomic x)(11131 call isAtomic y))
  }
  type ArrayInit[11152] def heuristicInit[11144]:ArrayInit[11152] def noInit[11146]:ArrayInit[11152] def serialInit[11148]:ArrayInit[11152] def parallelInit[11150]:ArrayInit[11152]
  {
  }
  { scopeless
    unknown chpl_defaultArrayInitMethod[11163] "config" "param"(11160 call . ArrayInit c"heuristicInit")
    (11166 'end of statement')
  }
  { scopeless
    unknown chpl_arrayInitMethodRuntimeSelectable[11168] "config" "param" 0
    (11171 'end of statement')
  }
  { scopeless
    unknown chpl_arrayInitMethod[11173] "private" chpl_defaultArrayInitMethod
    (11176 'end of statement')
  }
  function chpl_setArrayInitMethod[11183](arg initMethod[11180] :
  ArrayInit) : _unknown[51] "inline"
  {
    if(11232 call _cond_test(11187 call == chpl_arrayInitMethodRuntimeSelectable 0))
    {
      (11229 call compilerWarning "must set 'chpl_arrayInitMethodRuntimeSelectable' for " "'chpl_setArrayInitMethod' to have any effect")
    }
    { scopeless
      const oldInit[11238] "const" chpl_arrayInitMethod
      (11241 'end of statement')
    }
    (11244 call = chpl_arrayInitMethod initMethod)
    (11248 return oldInit)
  }
  function chpl_getArrayInitMethod[11254]() : _unknown[51] "inline"
  {
    if(11268 call _cond_test(11258 call == chpl_arrayInitMethodRuntimeSelectable 0))
    {
      (11261 return chpl_defaultArrayInitMethod)
    }
    {
      (11265 return chpl_arrayInitMethod)
    }
  }
  function init_elts_method[11279](arg s[11277]:_any[178](?), arg t[11281]:_any[178](?)) : _unknown[51]
  {
    { scopeless
      unknown initMethod[11286](11285 call chpl_getArrayInitMethod)
      (11289 'end of statement')
    }
    if(11424 call _cond_test(11293 call == s 0))
    {
      (11302 call = initMethod(11299 call . ArrayInit c"noInit"))
    }
    {
      { scopeless
        if(11419 call _cond_test(11307 call ! rootLocaleInitialized))
        {
          (11316 call = initMethod(11313 call . ArrayInit c"serialInit"))
        }
        {
          { scopeless
            if(11415 call _cond_test(11325 call == initMethod(11322 call . ArrayInit c"heuristicInit")))
            {
              { scopeless
                const elemsizeInBytes[11350] "const"(11347 IfExpr (11330 call isNumericType t) then
                { scopeless
                  (11334 call numBytes t)
                } else
                { scopeless
                  (11346 call(11341 call .(11338 call c_sizeof t) c"safeCast") int[13])
                } )
                (11353 'end of statement')
              }
              { scopeless
                const arrsizeInBytes[11365] "const"(11363 call *(11361 call(11356 call . s c"safeCast") int[13]) elemsizeInBytes)
                (11368 'end of statement')
              }
              { scopeless
                unknown heuristicThresh[11378] "param"(11376 call *(11373 call * 2 1024) 1024)
                (11381 'end of statement')
              }
              { scopeless
                const heuristicWantsPar[11386] "const"(11384 call > arrsizeInBytes heuristicThresh)
                (11389 'end of statement')
              }
              if(11411 call _cond_test heuristicWantsPar)
              {
                (11398 call = initMethod(11395 call . ArrayInit c"parallelInit"))
              }
              {
                (11407 call = initMethod(11404 call . ArrayInit c"serialInit"))
              }
            }
          }
        }
      }
    }
    (11430 return initMethod)
  }
  function init_elts[11438](arg x[11436]:_any[178](?), arg s[11440]:_any[178](?), arg t[11442]:_any[178](?), arg lo[11449] =
  (11447 call _cast(11446 'typeof' s) 0)) : _unknown[51]
  {
    { scopeless
      unknown initMethod[11458](11457 call init_elts_method s t)
      (11461 'end of statement')
    }
    {
      unknown tmp[11622] "expr temp" "maybe param" "maybe type" "temp"
      (11624 'move' tmp[11622] initMethod)
      if(11629 call _cond_test(11626 call == tmp[11622](11466 call . ArrayInit c"noInit")))
      {
        (11470 return)
      }
      {
        if(11635 call _cond_test(11632 call == tmp[11622](11476 call . ArrayInit c"serialInit")))
        {
          {
            unknown _indexOfInterest[11517] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[11518] "expr temp" "temp"
            (11527 'move' _iterator[11518](11525 call _getIterator(11535 call chpl_direct_range_iter lo(11532 call - s 1) 1)))
            Defer
            {
              {
                (11551 call _freeIterator _iterator[11518])
              }
            }
            { scopeless type
              (11540 'move' _indexOfInterest[11517](11537 call iteratorIndex _iterator[11518]))
            }
            ForLoop[11519]
            {
              unknown i[11544] "index var" "insert auto destroy"
              (11546 'move' i[11544] _indexOfInterest[11517])
              {
                { scopeless
                  unknown y[11489] "no auto destroy" "unsafe" t
                  (11492 'end of statement')
                }
                (11515 'array_set_first' x i y)
              }
              label _continueLabel[11522]
              _indexOfInterest[11517]
              _iterator[11518]
            }
            label _breakLabel[11523]
          }
        }
        {
          if(11642 call _cond_test(11639 call == tmp[11622](11562 call . ArrayInit c"parallelInit")))
          {
            Forall {
              induction variables:
                
                unknown i[11588] "index var" "insert auto destroy"
              iterated expressions:
                (11572 call chpl_build_bounded_range lo(11570 call - s 1))
              shadow variables:
              other variables
                forall body
              {
                { scopeless
                  unknown y[11575] "no auto destroy" "unsafe" t
                  (11578 'end of statement')
                }
                (11585 'array_set_first' x i y)
              }
            }
          }
          {
            (11616 call halt "ArrayInit.heuristicInit should have been made concrete")
          }
        }
      }
    }
  }
  { scopeless type
    void[4]
  }
  unknown chpl_mem_descInt_t[11654] "extern" "no doc" "type variable"(11653 call int[13] 16)
  type _ddata[11696](?) unknown eltType[11658] "type variable" function _ddata[11696](?).this[11667](arg _mt[11700]:_MT[238], arg this[11698]:_ddata[11696](?), arg i[11664] :
  integral) ref : _unknown[51] "inline" "method" "primary method"
  {
    (11690 return(11689 'array_get' this i))
  }
  function chpl_isDdata[11709](arg t[11706] :
  _ddata) param : _unknown[51]
  {
    { scopeless
      (11712 return 1)
    }
  }
  function chpl_isDdata[11721](arg t[11719]:_any[178](?)) param : _unknown[51]
  {
    { scopeless
      (11724 return 0)
    }
  }
  function =[11739](ref arg a[11736] :
  (11735 call _ddata unknown t[11732]), arg b[11745] :
  (11744 call _ddata t)) : _unknown[51] "assignop" "inline"
  {
    (11752 '=' a b)
  }
  function _ddata_shift[11761](arg eltType[11759]:_any[178](?), arg data[11767] :
  (11766 call _ddata eltType), arg shift[11771] :
  integral) : _unknown[51] "inline"
  {
    { scopeless
      unknown ret[11778](11777 call _ddata eltType)
      (11781 'end of statement')
    }
    (11806 'shift_base_pointer' ret data shift)
    (11809 return ret)
  }
  function _ddata_sizeof_element[11819](arg t[11816] :
  _ddata) : _unknown[51] "inline"
  {
    (11845 return(11843 call _cast size_t(11841 'sizeof_ddata_element' t)))
  }
  { scopeless type
    size_t
  }
  function _ddata_sizeof_element[11857](arg x[11854] :
  _ddata) : _unknown[51] "inline"
  {
    (11865 return(11864 call _ddata_sizeof_element(11862 'typeof' x)))
  }
  { scopeless type
    size_t
  }
  function _ddata_allocate_noinit[11875](arg eltType[11873]:_any[178](?), arg size[11878] :
  integral, out arg callPostAlloc[11882] :
  bool[10], arg subloc[11886] =
  c_sublocid_none) : _unknown[51] "llvm return noalias"
  {
    function chpl_mem_array_alloc[11895](arg nmemb[11892] :
    size_t, arg eltSize[11898] :
    size_t, arg subloc[11902] :
    chpl_sublocID_t, ref arg callPostAlloc[11906] :
    bool[10]) : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "fn synchronization free"
    {
    }
    { scopeless type
      c_void_ptr
    }
    { scopeless
      unknown ret[11918](11917 call _ddata eltType)
      (11921 'end of statement')
    }
    (11940 call = ret(11938 call _cast(11937 'typeof' ret)(11935 call chpl_mem_array_alloc(11926 call _cast size_t size)(11932 call _ddata_sizeof_element ret) subloc callPostAlloc)))
    (11944 return ret)
  }
  function _ddata_allocate_postalloc[11954](arg data[11951] :
  _ddata, arg size[11957] :
  integral) : _unknown[51] "inline"
  {
    function chpl_mem_array_postAlloc[11966](arg data[11963] :
    c_void_ptr, arg nmemb[11969] :
    size_t, arg eltSize[11973] :
    size_t) : void[4] "extern" "insert line file info" "local args" "no fn body" "fn synchronization free"
    {
    }
    (11993 call chpl_mem_array_postAlloc(11982 call _cast c_void_ptr data)(11987 call _cast size_t size)(11992 call _ddata_sizeof_element data))
  }
  function _ddata_allocate[12001](arg eltType[11999]:_any[178](?), arg size[12004] :
  integral, arg subloc[12008] =
  c_sublocid_none, param arg initElts[12013] :
  bool[10] =
  1) : _unknown[51] "inline"
  {
    { scopeless
      unknown callPostAlloc[12018] bool[10]
      (12021 'end of statement')
    }
    { scopeless
      unknown ret[12027](12026 call _ddata eltType)
      (12030 'end of statement')
    }
    (12039 call = ret(12038 call _ddata_allocate_noinit eltType size callPostAlloc subloc))
    if(12050 call _cond_test initElts)
    {
      { scopeless
        (12048 call init_elts ret size eltType)
      }
    }
    if(12063 call _cond_test callPostAlloc)
    {
      (12060 call _ddata_allocate_postalloc ret size)
    }
    (12068 return ret)
  }
  function _ddata_reallocate[12076](arg oldDdata[12074]:_any[178](?), arg eltType[12078]:_any[178](?), arg oldSize[12081] :
  integral, arg newSize[12085] :
  integral, arg subloc[12089] =
  c_sublocid_none) : _unknown[51] "inline"
  {
    function chpl_mem_array_realloc[12098](arg ptr[12095] :
    c_void_ptr, arg oldNmemb[12101] :
    size_t, arg newNmemb[12105] :
    size_t, arg eltSize[12109] :
    size_t, arg subloc[12113] :
    chpl_sublocID_t, ref arg callPostAlloc[12117] :
    bool[10]) : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "fn synchronization free"
    {
    }
    { scopeless type
      c_void_ptr
    }
    { scopeless
      unknown callPostAlloc[12126] bool[10]
      (12129 'end of statement')
    }
    { scopeless
      unknown needsDestroy[12172] "param"(12171 'needs auto destroy'(12170 'deref'(12169 call oldDdata 0)))
      (12175 'end of statement')
    }
    if(12272 call _cond_test(12181 call && needsDestroy(12179 call > oldSize newSize)))
    {
      if(12267 call _cond_test(12186 call _deinitElementsIsParallel eltType))
      {
        Forall {
          induction variables:
            
            unknown i[12204] "index var" "insert auto destroy"
          iterated expressions:
            (12193 call chpl_build_bounded_range newSize(12191 call - oldSize 1))
          shadow variables:
          other variables
            forall body
          {
            (12201 call chpl__autoDestroy(12199 call oldDdata i))
          }
        }
      }
      {
        {
          unknown _indexOfInterest[12225] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[12226] "expr temp" "temp"
          (12235 'move' _iterator[12226](12233 call _getIterator(12243 call chpl_direct_range_iter newSize(12240 call - oldSize 1) 1)))
          Defer
          {
            {
              (12259 call _freeIterator _iterator[12226])
            }
          }
          { scopeless type
            (12248 'move' _indexOfInterest[12225](12245 call iteratorIndex _iterator[12226]))
          }
          ForLoop[12227]
          {
            unknown i[12252] "index var" "insert auto destroy"
            (12254 'move' i[12252] _indexOfInterest[12225])
            { scopeless
              (12223 call chpl__autoDestroy(12221 call oldDdata i))
            }
            label _continueLabel[12230]
            _indexOfInterest[12225]
            _iterator[12226]
          }
          label _breakLabel[12231]
        }
      }
    }
    { scopeless
      const newDdata[12307] "const"(12305 call _cast(12304 'typeof' oldDdata)(12302 call chpl_mem_array_realloc(12279 call _cast c_void_ptr oldDdata)(12288 call(12283 call . oldSize c"safeCast") size_t)(12295 call(12290 call . newSize c"safeCast") size_t)(12299 call _ddata_sizeof_element oldDdata) subloc callPostAlloc))
      (12310 'end of statement')
    }
    (12318 call init_elts newDdata newSize eltType(lo = oldSize))
    if(12378 call _cond_test callPostAlloc)
    {
      function chpl_mem_array_postRealloc[12327](arg oldData[12324] :
      c_void_ptr, arg oldNmemb[12330] :
      size_t, arg newData[12334] :
      c_void_ptr, arg newNmemb[12338] :
      size_t, arg eltSize[12342] :
      size_t) : void[4] "extern" "insert line file info" "local args" "no fn body" "fn synchronization free"
      {
      }
      (12376 call chpl_mem_array_postRealloc(12351 call _cast c_void_ptr oldDdata)(12360 call(12355 call . oldSize c"safeCast") size_t)(12363 call _cast c_void_ptr newDdata)(12371 call(12366 call . newSize c"safeCast") size_t)(12375 call _ddata_sizeof_element oldDdata))
    }
    (12383 return newDdata)
  }
  function _ddata_free[12393](arg data[12390] :
  _ddata, arg size[12396] :
  integral) : _unknown[51] "inline"
  {
    function chpl_mem_array_free[12405](arg data[12402] :
    c_void_ptr, arg nmemb[12408] :
    size_t, arg eltSize[12412] :
    size_t) : void[4] "extern" "insert line file info" "local args" "no fn body" "fn synchronization free"
    {
    }
    (12432 call chpl_mem_array_free(12421 call _cast c_void_ptr data)(12426 call _cast size_t size)(12431 call _ddata_sizeof_element data))
  }
  function ==[12442](arg a[12439] :
  _ddata, arg b[12445] :
  _ddata) : _unknown[51] "inline"
  {
    (12471 return(12470 'ptr_eq' a b))
  }
  where {
    (12464 call ==(12456 call _to_borrowed(12452 call . a c"eltType"))(12463 call _to_borrowed(12459 call . b c"eltType")))
  }
  function ==[12483](arg a[12480] :
  _ddata, arg b[12486] :
  _nilType) : _unknown[51] "inline"
  {
    (12494 return(12493 'ptr_eq' a nil[44]))
  }
  function ==[12505](arg a[12502] :
  _nilType, arg b[12508] :
  _ddata) : _unknown[51] "inline"
  {
    (12516 return(12515 'ptr_eq' nil[44] b))
  }
  function !=[12527](arg a[12524] :
  _ddata, arg b[12530] :
  _ddata) : _unknown[51] "inline"
  {
    (12548 return(12547 'ptr_neq' a b))
  }
  where {
    (12541 call ==(12534 call . a c"eltType")(12538 call . b c"eltType"))
  }
  function !=[12560](arg a[12557] :
  _ddata, arg b[12563] :
  _nilType) : _unknown[51] "inline"
  {
    (12571 return(12570 'ptr_neq' a nil[44]))
  }
  function !=[12582](arg a[12579] :
  _nilType, arg b[12585] :
  _ddata) : _unknown[51] "inline"
  {
    (12593 return(12592 'ptr_neq' nil[44] b))
  }
  function _cond_test[12604](arg x[12601] :
  _ddata) : _unknown[51] "inline"
  {
    { scopeless
      (12610 return(12608 call != x nil[44]))
    }
  }
  type _ref[12621](?) unknown _val[12616]
  function chpl_rt_reset_task_spawn[12626]() : _unknown[51] "inline"
  {
    function chpl_task_reset_spawn_order[12630]() : void[4] "extern" "local args" "no fn body" "fn synchronization free"
    {
    }
    (12637 call chpl_task_reset_spawn_order)
  }
  function chpl_resetTaskSpawn[12645](arg numTasks[12643]:_any[178](?)) : _unknown[51]
  {
    { scopeless
      const dptpl[12661] "const"(12658 IfExpr (12649 call == dataParTasksPerLocale 0) then
      { scopeless
        (12654 call . here c"maxTaskPar")
      } else
      { scopeless
        dataParTasksPerLocale
      } )
      (12664 'end of statement')
    }
    if(12674 call _cond_test(12668 call >= numTasks dptpl))
    {
      { scopeless
        (12672 call chpl_rt_reset_task_spawn)
      }
    }
  }
  { scopeless
    unknown useAtomicTaskCnt[12701] "config" "param"(12699 call != CHPL_NETWORK_ATOMICS "none")
    (12704 'end of statement')
  }
  type _EndCountBase[12717] unknown errors[12707] chpl_TaskErrors unknown taskList[12712] c_void_ptr
  type _EndCount[12771](?) unknown iType[12723] "type variable" unknown taskType[12726] "type variable" unknown i[12730] iType unknown taskCnt[12735] taskType function _EndCount[12771](?).init[12743](arg _mt[12775]:_MT[238], arg this[12773]:_EndCount[12771](?), arg iType[12741]:_any[178](?), arg taskType[12745]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    (12754 call =(12750 call . this c"iType") iType)
    (12765 call =(12761 call . this c"taskType") taskType)
  } _EndCountBase
  function _endCountAlloc[12784](param arg forceLocalTypes[12781] :
  bool[10]) : _unknown[51] "dont disable remote value forwarding" "inline"
  {
    unknown taskCntType[12799] "type variable"(12796 IfExpr (12790 call &&(12787 call ! forceLocalTypes) useAtomicTaskCnt) then
    { scopeless
      (12793 call chpl__atomicType int[13])
    } else
    { scopeless
      int[13]
    } )
    if(12836 call _cond_test forceLocalTypes)
    {
      (12817 return(12806 'new'(_chpl_manager = unmanaged[220](?))(12816 call _EndCount(iType =(12811 call chpl__processorAtomicType int[13]))(taskType = taskCntType))))
    }
    {
      (12833 return(12822 'new'(_chpl_manager = unmanaged[220](?))(12832 call _EndCount(iType =(12827 call chpl__atomicType int[13]))(taskType = taskCntType))))
    }
  }
  unknown _remoteEndCountType[12847] "type variable"(12846 'typeof'(12845 call _endCountAlloc 0))
  function _endCountFree[12856](arg e[12853] :
  _EndCount) : _unknown[51] "dont disable remote value forwarding" "inline"
  {
    (12863 call chpl__delete(12861 call _to_unmanaged e))
  }
  function _upEndCount[12875](arg e[12872] :
  _EndCount, param arg countRunningTasks[12878] =
  1) : _unknown[51] "dont disable remote value forwarding" "no remote memory fence" "task spawn impl fn"
  {
    if(12972 call _cond_test(12889 call isAtomic(12885 call . e c"taskCnt")))
    {
      (12909 call(12898 call .(12893 call . e c"i") c"add") 1(12906 call . memoryOrder c"release"))
      (12925 call(12916 call .(12913 call . e c"taskCnt") c"add") 1(12922 call . memoryOrder c"release"))
    }
    {
      (12933 call chpl_rmem_consist_fence(12929 call . memoryOrder c"release"))
      { scopeless
        const tmp[12964] "const" "temp"
        (12966 'move' tmp[12964](12962 'deref'(12961 '_wide_get_locale' e)))
        {
          {
            (12950 call(12941 call .(12938 call . e c"i") c"add") 1(12947 call . memoryOrder c"release"))
            (12958 call +=(12954 call . e c"taskCnt") 1)
          }
          (12969 'on block' 0 tmp[12964])
        }
      }
    }
    if(12989 call _cond_test countRunningTasks)
    {
      (12986 call(12981 call . here c"runningTaskCntAdd") 1)
    }
  }
  function _upEndCount[13001](arg e[12998] :
  _EndCount, param arg countRunningTasks[13004] =
  1, arg numTasks[13007]:_any[178](?)) : _unknown[51] "dont disable remote value forwarding" "no remote memory fence" "task spawn impl fn"
  {
    (13025 call(13013 call .(13010 call . e c"i") c"add")(13018 call _cast int[13] numTasks)(13022 call . memoryOrder c"release"))
    if(13055 call _cond_test countRunningTasks)
    {
      (13041 call(13030 call . here c"runningTaskCntAdd")(13038 call -(13035 call _cast int[13] numTasks) 1))
    }
    {
      (13052 call(13047 call . here c"runningTaskCntSub") 1)
    }
  }
  function chpl_comm_task_end[13063]() : _unknown[51] "extern" "local args" "no fn body" "task complete impl fn"
  {
  }
  { scopeless type
    void[4]
  }
  function chpl_after_forall_fence[13071]() : _unknown[51] "task complete impl fn"
  {
    (13075 call chpl_comm_task_end)
  }
  function _downEndCount[13086](arg e[13083] :
  _EndCount, arg err[13091] :
  (13090 'to unmanaged class from unknown'(13089 'to nilable class from type' Error))) : _unknown[51] "dont disable remote value forwarding" "down end count fn" "task complete impl fn"
  {
    (13098 call chpl_save_task_error e err)
    (13103 call chpl_comm_task_end)
    (13120 call(13111 call .(13106 call . e c"i") c"sub") 1(13117 call . memoryOrder c"release"))
  }
  function _waitEndCount[13130](arg e[13127] :
  _EndCount, param arg countRunningTasks[13133] =
  1) : _unknown[51] throws "dont disable remote value forwarding" "task join impl fn" "unchecked throws"
  {
    (13142 call(13137 call . here c"runningTaskCntSub") 1)
    (13153 call chpl_taskListExecute(13149 call . e c"taskList"))
    (13172 call(13161 call .(13156 call . e c"i") c"waitFor") 0(13169 call . memoryOrder c"acquire"))
    if(13225 call _cond_test countRunningTasks)
    {
      { scopeless
        const taskDec[13200] "const"(13197 IfExpr (13181 call isAtomic(13177 call . e c"taskCnt")) then
        { scopeless
          (13192 call(13188 call .(13183 call . e c"taskCnt") c"read"))
        } else
        { scopeless
          (13194 call . e c"taskCnt")
        } )
        (13203 'end of statement')
      }
      (13214 call(13206 call . here c"runningTaskCntSub")(13211 call - taskDec 1))
    }
    {
      (13222 call(13217 call . here c"runningTaskCntAdd") 1)
    }
    if(13256 call _cond_test(13242 call !(13241 call(13237 call .(13232 call . e c"errors") c"empty"))))
    {
      { scopeless
        (13254 'throw'(13246 'new'(_chpl_manager = _owned[30](?))(13253 call TaskErrors(13249 call . e c"errors"))))
      }
    }
  }
  function _waitEndCount[13269](arg e[13266] :
  _EndCount, param arg countRunningTasks[13272] =
  1, arg numTasks[13275]:_any[178](?)) : _unknown[51] throws "dont disable remote value forwarding" "task join impl fn" "unchecked throws"
  {
    (13283 call chpl_taskListExecute(13279 call . e c"taskList"))
    (13299 call(13290 call .(13287 call . e c"i") c"waitFor") 0(13296 call . memoryOrder c"acquire"))
    if(13326 call _cond_test countRunningTasks)
    {
      (13314 call(13303 call . here c"runningTaskCntSub")(13311 call -(13308 call _cast int[13] numTasks) 1))
    }
    {
      (13323 call(13318 call . here c"runningTaskCntAdd") 1)
    }
    if(13353 call _cond_test(13339 call !(13338 call(13334 call .(13331 call . e c"errors") c"empty"))))
    {
      { scopeless
        (13351 'throw'(13343 'new'(_chpl_manager = _owned[30](?))(13350 call TaskErrors(13346 call . e c"errors"))))
      }
    }
  }
  function _upDynamicEndCount[13366](param arg countRunningTasks[13363] =
  1) : _unknown[51] "task spawn impl fn"
  {
    { scopeless
      unknown e[13389](13388 'get dynamic end count')
      (13392 'end of statement')
    }
    (13398 call _upEndCount e countRunningTasks)
  }
  function _downDynamicEndCount[13410](arg err[13407] :
  (13406 'to unmanaged class from unknown'(13405 'to nilable class from type' Error))) : _unknown[51] "dont disable remote value forwarding" "down end count fn" "task complete impl fn"
  {
    { scopeless
      unknown e[13415](13414 'get dynamic end count')
      (13418 'end of statement')
    }
    (13424 call _downEndCount e err)
  }
  function chpl_waitDynamicEndCount[13434](param arg countRunningTasks[13431] =
  1) : _unknown[51] throws "task join impl fn" "unchecked throws"
  {
    { scopeless
      unknown e[13439](13438 'get dynamic end count')
      (13442 'end of statement')
    }
    (13448 call _waitEndCount e countRunningTasks)
    if(13473 call _cond_test(13459 call !(13458 call(13454 call .(13451 call . e c"errors") c"empty"))))
    {
      { scopeless
        (13471 'throw'(13463 'new'(_chpl_manager = _owned[30](?))(13470 call TaskErrors(13466 call . e c"errors"))))
      }
    }
  }
  function _do_command_line_cast[13484](arg t[13482]:_any[178](?), arg x[13487] :
  c_string) : _unknown[51] throws
  {
    if(13517 call _cond_test(13493 call isSyncType t))
    {
      { scopeless
        (13515 call compilerError "config variables of sync type are not supported")
      }
    }
    if(13548 call _cond_test(13526 call isSingleType t))
    {
      { scopeless
        (13546 call compilerError "config variables of single type are not supported")
      }
    }
    if(13578 call _cond_test(13556 call isAtomicType t))
    {
      { scopeless
        (13576 call compilerError "config variables of atomic type are not supported")
      }
    }
    { scopeless
      unknown str[13584] string[26]
      (13587 'end of statement')
    }
    Try!
    {
      {
        (13593 call = str(13592 call createStringWithNewBuffer x))
      }
    }
    if(13615 call _cond_test(13602 call == t string[26]))
    {
      (13605 return str)
    }
    {
      (13612 return(13610 call _cast t str))
    }
  }
  function _command_line_cast[13627](param arg s[13624] :
  c_string, arg t[13629]:_any[178](?), arg x[13632] :
  c_string) : _unknown[51] "command line setting"
  {
    Try!
    {
      {
        (13640 return(13639 call _do_command_line_cast t x))
      }
    }
  }
  function chpl_typeSupportsPrimitiveCast[13653](arg t[13651]:_any[178](?)) param : _unknown[51] "inline"
  {
    { scopeless
      (13671 return(13669 call ||(13663 call ||(13658 call isBoolType t)(13662 call isIntegralType t))(13668 call isRealType t)))
    }
  }
  function _cast[13682](arg t[13679] :
  chpl_anybool, arg x[13685] :
  chpl_anybool) : _unknown[51] "inline"
  {
    { scopeless
      (13693 return(13692 'cast' t x))
    }
  }
  function _cast[13704](arg t[13701] :
  integral, arg x[13707] :
  chpl_anybool) : _unknown[51] "inline"
  {
    { scopeless
      (13715 return(13714 'cast' t x))
    }
  }
  function _cast[13726](arg t[13723] :
  chpl_anyreal, arg x[13729] :
  chpl_anybool) : _unknown[51] "inline"
  {
    { scopeless
      (13737 return(13736 'cast' t x))
    }
  }
  function _cast[13748](arg t[13745] :
  chpl_anybool, arg x[13751] :
  integral) : _unknown[51] "inline"
  {
    { scopeless
      (13759 return(13758 'cast' t x))
    }
  }
  function _cast[13770](arg t[13767] :
  integral, arg x[13773] :
  integral) : _unknown[51] "inline"
  {
    { scopeless
      (13781 return(13780 'cast' t x))
    }
  }
  function _cast[13792](arg t[13789] :
  chpl_anyreal, arg x[13795] :
  integral) : _unknown[51] "inline"
  {
    { scopeless
      (13803 return(13802 'cast' t x))
    }
  }
  function _cast[13814](arg t[13811] :
  chpl_anybool, arg x[13817] :
  chpl_anyreal) : _unknown[51] "inline"
  {
    { scopeless
      (13825 return(13824 'cast' t x))
    }
  }
  function _cast[13836](arg t[13833] :
  integral, arg x[13839] :
  chpl_anyreal) : _unknown[51] "inline"
  {
    { scopeless
      (13847 return(13846 'cast' t x))
    }
  }
  function _cast[13858](arg t[13855] :
  chpl_anyreal, arg x[13861] :
  chpl_anyreal) : _unknown[51] "inline"
  {
    { scopeless
      (13869 return(13868 'cast' t x))
    }
  }
  function _cast[13880](arg t[13877] :
  chpl_anybool, arg x[13883] :
  enum[187](?)) : _unknown[51] throws "inline"
  {
    if(13909 call _cond_test chpl_warnUnstable)
    {
      (13906 call compilerWarning "enum-to-bool casts are likely to be deprecated in the future")
    }
    (13921 return(13919 call _cast bool[10](13916 call _cast int[13] x)))
  }
  function _cast[13931](arg t[13928] :
  enum[187](?), arg x[13934] :
  enum[187](?)) : _unknown[51] "inline"
  {
    { scopeless
      (13943 return x)
    }
  }
  where {
    (13940 call ==(13938 'typeof' x) t)
  }
  function _cast[13955](arg t[13952] :
  chpl_anyreal, arg x[13958] :
  enum[187](?)) : _unknown[51] throws "inline"
  {
    if(13986 call _cond_test chpl_warnUnstable)
    {
      (13983 call compilerWarning "enum-to-float casts are likely to be deprecated in the future")
    }
    (13998 return(13996 call _cast real[16](13993 call _cast int[13] x)))
  }
  function _cast[14009](arg t[14006] :
  (14005 'to unmanaged class from unknown' class[232](?)), arg x[14012] :
  _nilType) : _unknown[51] "inline"
  {
    (14042 call compilerError(14039 call + "cannot cast nil to "(14037 call _cast string[26] t)))
  }
  function _cast[14054](arg t[14051] :
  (14050 'to borrowed class from unknown' class[232](?)), arg x[14057] :
  _nilType) : _unknown[51] "inline"
  {
    (14069 call compilerError(14066 call + "cannot cast nil to "(14064 call _cast string[26] t)))
  }
  function _cast[14082](arg t[14079] :
  (14078 'to unmanaged class from unknown'(14077 'to nilable class from type' class[232](?))), arg x[14087] :
  (14086 'to borrowed class from unknown'(14085 'to nilable class from type' class[232](?)))) : _unknown[51] "inline"
  {
    (14104 return(14103 'cast' t x))
  }
  where {
    (14098 call isSubtype(14095 call _to_unmanaged(14093 'typeof' x)) t)
  }
  function _cast[14118](arg t[14115] :
  (14114 'to unmanaged class from unknown'(14113 'to nilable class from type' class[232](?))), arg x[14122] :
  (14121 'to borrowed class from unknown' class[232](?))) : _unknown[51] "inline"
  {
    (14142 return(14141 'cast' t x))
  }
  where {
    (14136 call isSubtype(14133 call _to_nonnil(14131 call _to_unmanaged(14129 'typeof' x))) t)
  }
  function _cast[14155](arg t[14152] :
  (14151 'to unmanaged class from unknown' class[232](?)), arg x[14159] :
  (14158 'to borrowed class from unknown' class[232](?))) : _unknown[51] "inline"
  {
    (14176 return(14175 'cast' t x))
  }
  where {
    (14170 call isSubtype(14167 call _to_unmanaged(14165 'typeof' x)) t)
  }
  function _cast[14189](arg t[14186] :
  (14185 'to borrowed class from unknown' class[232](?)), arg x[14194] :
  (14193 'to unmanaged class from unknown'(14192 'to nilable class from type' class[232](?)))) : _unknown[51] throws "inline"
  {
    if(14219 call _cond_test(14208 call == x nil[44]))
    {
      (14216 'throw'(14212 'new'(_chpl_manager = _owned[30](?))(14215 call NilClassError)))
    }
    (14229 return(14228 'cast' t x))
  }
  where {
    (14205 call isSubtype(14202 call _to_nonnil(14200 'typeof' x)) t)
  }
  function _cast[14241](arg t[14238] :
  (14237 'to borrowed class from unknown' class[232](?)), arg x[14246] :
  (14245 'to borrowed class from unknown'(14244 'to nilable class from type' class[232](?)))) : _unknown[51] throws "inline"
  {
    if(14271 call _cond_test(14260 call == x nil[44]))
    {
      (14268 'throw'(14264 'new'(_chpl_manager = _owned[30](?))(14267 call NilClassError)))
    }
    (14281 return(14280 'cast' t x))
  }
  where {
    (14257 call isSubtype(14254 call _to_nonnil(14252 'typeof' x)) t)
  }
  function _cast[14293](arg t[14290] :
  (14289 'to unmanaged class from unknown' class[232](?)), arg x[14298] :
  (14297 'to borrowed class from unknown'(14296 'to nilable class from type' class[232](?)))) : _unknown[51] throws "inline"
  {
    if(14326 call _cond_test(14315 call == x nil[44]))
    {
      (14323 'throw'(14319 'new'(_chpl_manager = _owned[30](?))(14322 call NilClassError)))
    }
    (14336 return(14335 'cast' t x))
  }
  where {
    (14312 call isSubtype(14309 call _to_nonnil(14307 call _to_unmanaged(14305 'typeof' x))) t)
  }
  function _cast[14348](arg t[14345] :
  (14344 'to borrowed class from unknown' class[232](?)), arg x[14353] :
  (14352 'to borrowed class from unknown'(14351 'to nilable class from type' class[232](?)))) : _unknown[51] throws "inline"
  {
    if(14378 call _cond_test(14367 call == x nil[44]))
    {
      (14375 'throw'(14371 'new'(_chpl_manager = _owned[30](?))(14374 call NilClassError)))
    }
    { scopeless
      unknown tmp[14406](14405 'dynamic_cast' t x)
      (14409 'end of statement')
    }
    if(14423 call _cond_test(14412 call == tmp nil[44]))
    {
      (14420 'throw'(14416 'new'(_chpl_manager = _owned[30](?))(14419 call ClassCastError)))
    }
    (14434 return(14433 call _to_nonnil(14431 call _to_borrowed tmp)))
  }
  where {
    (14364 call isProperSubtype t(14363 call _to_nonnil(14361 'typeof' x)))
  }
  function _cast[14447](arg t[14444] :
  (14443 'to borrowed class from unknown'(14442 'to nilable class from type' class[232](?))), arg x[14452] :
  (14451 'to borrowed class from unknown'(14450 'to nilable class from type' class[232](?)))) : _unknown[51] "inline"
  {
    if(14469 call _cond_test(14463 call == x nil[44]))
    {
      (14466 return nil[44])
    }
    { scopeless
      unknown tmp[14479](14478 'dynamic_cast' t x)
      (14482 'end of statement')
    }
    (14490 return(14489 call _to_nilable(14487 call _to_borrowed tmp)))
  }
  where {
    (14460 call isProperSubtype t(14459 'typeof' x))
  }
  function _cast[14502](arg t[14499] :
  (14498 'to unmanaged class from unknown' class[232](?)), arg x[14507] :
  (14506 'to borrowed class from unknown'(14505 'to nilable class from type' class[232](?)))) : _unknown[51] throws "inline"
  {
    if(14535 call _cond_test(14524 call == x nil[44]))
    {
      (14532 'throw'(14528 'new'(_chpl_manager = _owned[30](?))(14531 call NilClassError)))
    }
    { scopeless
      unknown tmp[14545](14544 'dynamic_cast' t x)
      (14548 'end of statement')
    }
    if(14562 call _cond_test(14551 call == tmp nil[44]))
    {
      (14559 'throw'(14555 'new'(_chpl_manager = _owned[30](?))(14558 call ClassCastError)))
    }
    (14573 return(14572 call _to_nonnil(14570 call _to_unmanaged tmp)))
  }
  where {
    (14521 call isProperSubtype t(14520 call _to_nonnil(14518 call _to_unmanaged(14516 'typeof' x))))
  }
  function _cast[14586](arg t[14583] :
  (14582 'to unmanaged class from unknown'(14581 'to nilable class from type' class[232](?))), arg x[14591] :
  (14590 'to borrowed class from unknown'(14589 'to nilable class from type' class[232](?)))) : _unknown[51] "inline"
  {
    if(14611 call _cond_test(14605 call == x nil[44]))
    {
      (14608 return nil[44])
    }
    { scopeless
      unknown tmp[14621](14620 'dynamic_cast' t x)
      (14624 'end of statement')
    }
    (14632 return(14631 call _to_nilable(14629 call _to_unmanaged tmp)))
  }
  where {
    (14602 call isProperSubtype t(14601 call _to_unmanaged(14599 'typeof' x)))
  }
  function _cast[14645](arg t[14642] :
  (14641 'to unmanaged class from unknown'(14640 'to nilable class from type' class[232](?))), arg x[14649] :
  (14648 'to borrowed class from unknown' class[232](?))) : _unknown[51] "inline"
  {
    if(14672 call _cond_test(14666 call == x nil[44]))
    {
      (14669 return nil[44])
    }
    { scopeless
      unknown tmp[14682](14681 'dynamic_cast' t x)
      (14685 'end of statement')
    }
    (14693 return(14692 call _to_nilable(14690 call _to_unmanaged tmp)))
  }
  where {
    (14663 call isProperSubtype(14659 call _to_nonnil(14657 call _to_borrowed t))(14662 'typeof' x))
  }
  function _cast[14704](arg t[14701] :
  chpl_anycomplex, arg x[14707] :
  bool[10]) : _unknown[51] "inline"
  {
    { scopeless
      (14718 return(14716 call _cast t(14713 call _build_tuple x 0)))
    }
  }
  function _cast[14729](arg t[14726] :
  chpl_anycomplex, arg x[14732] :
  integral) : _unknown[51] "inline"
  {
    { scopeless
      (14743 return(14741 call _cast t(14738 call _build_tuple x 0)))
    }
  }
  function _cast[14754](arg t[14751] :
  chpl_anycomplex, arg x[14757] :
  chpl_anyreal) : _unknown[51] "inline"
  {
    { scopeless
      (14768 return(14766 call _cast t(14763 call _build_tuple x 0)))
    }
  }
  function _cast[14779](arg t[14776] :
  chpl_anycomplex, arg x[14782] :
  chpl_anyimag) : _unknown[51] "inline"
  {
    { scopeless
      (14796 return(14794 call _cast t(14791 call _build_tuple 0(14789 call _i2r x))))
    }
  }
  function _cast[14807](arg t[14804] :
  chpl_anycomplex, arg x[14810] :
  chpl_anycomplex) : _unknown[51] "inline"
  {
    { scopeless
      (14827 return(14825 call _cast t(14822 call _build_tuple(14814 call . x c"re")(14818 call . x c"im"))))
    }
  }
  function _cast[14838](arg t[14835] :
  chpl_anycomplex, arg x[14841] :
  enum[187](?)) : _unknown[51] throws "inline"
  {
    { scopeless
      (14855 return(14853 call _cast t(14850 call _build_tuple(14846 call _cast real[16] x) 0)))
    }
  }
  function _cast[14866](arg t[14863] :
  chpl_anyimag, arg x[14869] :
  bool[10]) : _unknown[51] "inline"
  {
    { scopeless
      (14886 return(14883 IfExpr  x then
      { scopeless
        (14877 call _cast t 1.0i)
      } else
      { scopeless
        (14881 call _cast t 0.0i)
      } ))
    }
  }
  function _cast[14897](arg t[14894] :
  chpl_anyimag, arg x[14900] :
  integral) : _unknown[51] "inline"
  {
    { scopeless
      (14908 return(14907 'cast' t x))
    }
  }
  function _cast[14919](arg t[14916] :
  chpl_anyimag, arg x[14922] :
  chpl_anyreal) : _unknown[51] "inline"
  {
    { scopeless
      (14930 return(14929 'cast' t x))
    }
  }
  function _cast[14941](arg t[14938] :
  chpl_anyimag, arg x[14944] :
  chpl_anyimag) : _unknown[51] "inline"
  {
    { scopeless
      (14952 return(14951 'cast' t x))
    }
  }
  function _cast[14963](arg t[14960] :
  chpl_anyimag, arg x[14966] :
  chpl_anycomplex) : _unknown[51] "inline"
  {
    { scopeless
      (14977 return(14976 'cast' t(14973 call . x c"im")))
    }
  }
  function _cast[14988](arg t[14985] :
  chpl_anyimag, arg x[14991] :
  enum[187](?)) : _unknown[51] throws "inline"
  {
    { scopeless
      (15001 return(14999 call _cast imag[130](14996 call _cast real[16] x)))
    }
  }
  function _cast[15012](arg t[15009] :
  chpl_anyreal, arg x[15015] :
  chpl_anycomplex) : _unknown[51] "inline"
  {
    { scopeless
      unknown y[15019] t
      (15022 'end of statement')
    }
    (15032 call = y(15030 call _cast t(15026 call . x c"re")))
    (15036 return y)
  }
  function _cast[15046](arg t[15043] :
  integral, arg x[15049] :
  chpl_anycomplex) : _unknown[51] "inline"
  {
    { scopeless
      unknown y[15053] t
      (15056 'end of statement')
    }
    (15066 call = y(15064 call _cast t(15060 call . x c"re")))
    (15070 return y)
  }
  function _cast[15080](arg t[15077] :
  chpl_anyreal, arg x[15083] :
  chpl_anyimag) : _unknown[51] "inline"
  {
    { scopeless
      (15091 return(15090 'cast' t x))
    }
  }
  function _cast[15102](arg t[15099] :
  integral, arg x[15105] :
  chpl_anyimag) : _unknown[51] "inline"
  {
    { scopeless
      (15113 return(15112 'cast' t x))
    }
  }
  function _cast[15124](arg t[15121] :
  chpl_anybool, arg x[15127] :
  chpl_anyimag) : _unknown[51] "inline"
  {
    { scopeless
      (15139 return(15136 IfExpr (15132 call != x 0.0i) then
      { scopeless
        1
      } else
      { scopeless
        0
      } ))
    }
  }
  function chpl__initCopy[15148](arg t[15146]:_any[178](?)) type : _unknown[51] "init copy fn" "inline"
  {
    (15169 call compilerError "illegal assignment of type to value")
    (15173 return t)
  }
  function chpl__initCopy[15183](arg x[15180] :
  _tuple) : _unknown[51] "compiler generated" "init copy fn" "inline" "last resort"
  {
  }
  function chpl__initCopy[15192](const arg x[15190]:_any[178](?)) : _unknown[51] "compiler generated" "init copy fn" "inline" "last resort" "suppress lvalue error"
  {
    (15195 return x)
  }
  function chpl__autoCopy[15206](arg x[15203] :
  _tuple) : _unknown[51] "auto copy fn" "compiler generated" "inline" "last resort"
  {
  }
  function chpl__unref[15217](arg x[15214] :
  _tuple) : _unknown[51] "compiler generated" "inline" "last resort" "unref fn"
  {
  }
  function chpl__autoCopy[15228](arg ir[15225] :
  _iteratorRecord) : _unknown[51] "auto copy fn" "compiler generated" "inline"
  {
    (15231 return ir)
  }
  function chpl__autoCopy[15240](const arg x[15238]:_any[178](?)) : _unknown[51] "auto copy fn" "compiler generated" "inline" "last resort" "suppress lvalue error"
  {
    { scopeless
      (15246 return(15245 call chpl__initCopy x))
    }
  }
  function chpl__unalias[15255](arg x[15253]:_any[178](?)) : _unknown[51] "compiler generated" "inline" "last resort" "unalias fn"
  {
    { scopeless
      unknown ret[15258] "no copy" x
      (15261 'end of statement')
    }
    (15264 return ret)
  }
  function chpl__unalias[15274](arg x[15271] :
  _iteratorClass) : _unknown[51] "inline" "unalias fn"
  {
    { scopeless
      unknown ret[15277] "no copy" x
      (15280 'end of statement')
    }
    (15283 return ret)
  }
  function chpl__unalias[15293](const  ref arg x[15290] :
  _iteratorRecord) : _unknown[51] "inline" "unalias fn"
  {
    { scopeless
      unknown ret[15296] "no copy" x
      (15299 'end of statement')
    }
    (15302 return ret)
  }
  function chpl__autoDestroy[15312](arg x[15309] :
  object) : _unknown[51] "auto destroy fn" "compiler generated" "inline" "last resort"
  {
  }
  function chpl__autoDestroy[15321](arg t[15319]:_any[178](?)) : _unknown[51] "auto destroy fn" "compiler generated" "inline" "last resort"
  {
  }
  function chpl__autoDestroy[15333](arg x[15330] :
  unknown t[15328]) : _unknown[51] "auto destroy fn" "compiler generated" "inline" "last resort"
  {
    (15354 'call destructor' x)
  }
  function chpl__autoDestroy[15365](arg ir[15362] :
  _iteratorRecord) : _unknown[51] "auto destroy fn" "inline"
  {
  }
  function chpl__autoDestroy[15376](arg x[15373] :
  _distribution) : _unknown[51] "auto destroy fn" "dont disable remote value forwarding" "removable auto destroy"
  {
    (15381 'call destructor' x)
  }
  function chpl__autoDestroy[15392](arg x[15389] :
  _domain) : _unknown[51] "auto destroy fn" "dont disable remote value forwarding" "removable auto destroy"
  {
    (15397 'call destructor' x)
  }
  function chpl__autoDestroy[15410](arg x[15407] :
  (15404 call chpl__buildArrayRuntimeType nil[44])) : _unknown[51] "auto destroy fn" "dont disable remote value forwarding" "removable auto destroy"
  {
    (15415 'call destructor' x)
  }
  function chpl__delete[15424](arg arg[15422]:_any[178](?)) : _unknown[51] "inline" "no borrow convert"
  {
    if(15454 call _cond_test(15430 call chpl_isDdata(15428 'typeof' arg)))
    {
      { scopeless
        (15452 call compilerError "cannot delete data class")
      }
    }
    if(15486 call _cond_test(15463 call ==(15461 'typeof' arg) _nilType))
    {
      { scopeless
        (15484 call compilerError "should not delete 'nil'")
      }
    }
    if(15518 call _cond_test(15496 call isSubtype(15493 'typeof' arg) _owned))
    {
      { scopeless
        (15516 call compilerError "'delete' is not allowed on an owned class type")
      }
    }
    if(15550 call _cond_test(15528 call isSubtype(15525 'typeof' arg) _shared))
    {
      { scopeless
        (15548 call compilerError "'delete' is not allowed on a shared class type")
      }
    }
    if(15582 call _cond_test(15558 call isRecord arg))
    {
      { scopeless
        (15580 call compilerError "'delete' is not allowed on records")
      }
    }
    if(15625 call _cond_test(15595 call !(15594 call isCoercible(15589 'typeof' arg)(15593 'to borrowed class from unknown'(15592 'to nilable class from type' class[232](?))))))
    {
      { scopeless
        (15623 call compilerError "'delete' is not allowed on non-class type "(15621 call _cast string[26](15619 'typeof' arg)))
      }
    }
    if(15661 call _cond_test(15638 call !(15637 call isCoercible(15632 'typeof' arg)(15636 'to unmanaged class from unknown'(15635 'to nilable class from type' class[232](?))))))
    {
      { scopeless
        (15659 call compilerError "'delete' can only be applied to unmanaged classes")
      }
    }
    if(15720 call _cond_test(15668 call != arg nil[44]))
    {
      (15679 call(15675 call .(15671 call postfix! arg) c"deinit"))
      { scopeless
        const tmp[15712] "const" "temp"
        (15714 'move' tmp[15712](15710 'deref'(15709 '_wide_get_locale' arg)))
        {
          { scopeless
            (15707 call chpl_here_free(15705 '_wide_get_addr' arg))
          }
          (15717 'on block' 0 tmp[15712])
        }
      }
    }
  }
  function chpl__delete[15734](arg arr[15731] :
  (15728 call chpl__buildArrayRuntimeType nil[44])) : _unknown[51]
  {
    Forall {
      induction variables:
        
        unknown a[15744] "index var" "insert auto destroy"
      iterated expressions:
        arr
      shadow variables:
      other variables
        forall body
      {
        (15741 call chpl__delete a)
      }
    }
  }
  function chpl__delete[15755](arg arg[15753]:_any[178](?), arg args[15758]:_any[178](?) ...) : _unknown[51] "inline"
  {
    (15764 call chpl__delete arg)
    {
      unknown i[15787] 0
      unknown tmp[15788] "maybe param" "temp"
      (15800 'move' tmp[15788](15798 call chpl_compute_low_param_loop_bound 0(15775 call -(15771 call . args c"size") 1)))
      unknown tmp[15789] "maybe param" "temp"
      (15813 'move' tmp[15789](15811 call chpl_compute_high_param_loop_bound 0(15805 call -(15807 call . args c"size") 1)))
      unknown tmp[15790] "maybe param" "temp"
      (15816 'move' tmp[15790] 1)
      ParamForLoop[15818]
      { i[15787] tmp[15788] tmp[15789] tmp[15790]
        { scopeless
          (15785 call chpl__delete(15783 call args i))
        }
      }
      label _unused_continueLabel[15792]
      label _breakLabel[15791]
    }
  }
  function =[15835](ref arg a[15832] :
  c_void_ptr, arg b[15838] :
  c_void_ptr) : _unknown[51] "assignop" "inline"
  {
    (15845 '=' a b)
  }
  function ==[15856](arg a[15853] :
  c_void_ptr, arg b[15859] :
  c_void_ptr) : _unknown[51] "inline"
  {
    (15867 return(15866 'ptr_eq' a b))
  }
  function !=[15878](arg a[15875] :
  c_void_ptr, arg b[15881] :
  c_void_ptr) : _unknown[51] "inline"
  {
    (15889 return(15888 'ptr_neq' a b))
  }
  function func[15896]() type : _unknown[51] "inline"
  {
    (15918 return(15917 'create fn type' void[4]))
  }
  function func[15927](arg rettype[15925]:_any[178](?)) type : _unknown[51] "inline"
  {
    (15933 return(15932 'create fn type' rettype))
  }
  function func[15945](arg t[15942]:_any[178](?) ..., arg rettype[15947]:_any[178](?)) type : _unknown[51] "inline"
  {
    (15955 return(15954 'create fn type'(15952 'expand_tuple' t) rettype))
  }
  function isIterator[15966](arg ic[15963] :
  _iteratorClass) param : _unknown[51]
  {
    { scopeless
      (15969 return 1)
    }
  }
  function isIterator[15980](arg ir[15977] :
  _iteratorRecord) param : _unknown[51]
  {
    { scopeless
      (15983 return 1)
    }
  }
  function isIterator[15992](arg not_an_iterator[15990]:_any[178](?)) param : _unknown[51]
  {
    { scopeless
      (15995 return 0)
    }
  }
  function +=[16010](ref arg lhs[16007] :
  (16006 call int[13] unknown w[16003]), arg rhs[16016] :
  (16015 call int[13] w)) : _unknown[51] "assignop" "inline"
  {
    (16039 '+=' lhs rhs)
  }
  function +=[16054](ref arg lhs[16051] :
  (16050 call uint[115] unknown w[16047]), arg rhs[16060] :
  (16059 call uint[115] w)) : _unknown[51] "assignop" "inline"
  {
    (16067 '+=' lhs rhs)
  }
  function +=[16082](ref arg lhs[16079] :
  (16078 call real[16] unknown w[16075]), arg rhs[16088] :
  (16087 call real[16] w)) : _unknown[51] "assignop" "inline"
  {
    (16095 '+=' lhs rhs)
  }
  function +=[16110](ref arg lhs[16107] :
  (16106 call imag[130] unknown w[16103]), arg rhs[16116] :
  (16115 call imag[130] w)) : _unknown[51] "assignop" "inline"
  {
    (16123 '+=' lhs rhs)
  }
  function +=[16132](ref arg lhs[16130]:_any[178](?), arg rhs[16134]:_any[178](?)) : _unknown[51] "assignop" "inline"
  {
    (16141 call = lhs(16139 call + lhs rhs))
  }
  function -=[16157](ref arg lhs[16154] :
  (16153 call int[13] unknown w[16150]), arg rhs[16163] :
  (16162 call int[13] w)) : _unknown[51] "assignop" "inline"
  {
    (16186 '-=' lhs rhs)
  }
  function -=[16201](ref arg lhs[16198] :
  (16197 call uint[115] unknown w[16194]), arg rhs[16207] :
  (16206 call uint[115] w)) : _unknown[51] "assignop" "inline"
  {
    (16214 '-=' lhs rhs)
  }
  function -=[16229](ref arg lhs[16226] :
  (16225 call real[16] unknown w[16222]), arg rhs[16235] :
  (16234 call real[16] w)) : _unknown[51] "assignop" "inline"
  {
    (16242 '-=' lhs rhs)
  }
  function -=[16257](ref arg lhs[16254] :
  (16253 call imag[130] unknown w[16250]), arg rhs[16263] :
  (16262 call imag[130] w)) : _unknown[51] "assignop" "inline"
  {
    (16270 '-=' lhs rhs)
  }
  function -=[16279](ref arg lhs[16277]:_any[178](?), arg rhs[16281]:_any[178](?)) : _unknown[51] "assignop" "inline"
  {
    (16288 call = lhs(16286 call - lhs rhs))
  }
  function *=[16304](ref arg lhs[16301] :
  (16300 call int[13] unknown w[16297]), arg rhs[16310] :
  (16309 call int[13] w)) : _unknown[51] "assignop" "inline"
  {
    (16333 '*=' lhs rhs)
  }
  function *=[16348](ref arg lhs[16345] :
  (16344 call uint[115] unknown w[16341]), arg rhs[16354] :
  (16353 call uint[115] w)) : _unknown[51] "assignop" "inline"
  {
    (16361 '*=' lhs rhs)
  }
  function *=[16376](ref arg lhs[16373] :
  (16372 call real[16] unknown w[16369]), arg rhs[16382] :
  (16381 call real[16] w)) : _unknown[51] "assignop" "inline"
  {
    (16389 '*=' lhs rhs)
  }
  function *=[16398](ref arg lhs[16396]:_any[178](?), arg rhs[16400]:_any[178](?)) : _unknown[51] "assignop" "inline"
  {
    (16407 call = lhs(16405 call * lhs rhs))
  }
  function /=[16423](ref arg lhs[16420] :
  (16419 call int[13] unknown w[16416]), arg rhs[16429] :
  (16428 call int[13] w)) : _unknown[51] "assignop" "inline"
  {
    if(16447 call _cond_test chpl_checkDivByZero)
    {
      { scopeless
        if(16442 call _cond_test(16435 call == rhs 0))
        {
          { scopeless
            (16440 call halt "Attempt to divide by zero")
          }
        }
      }
    }
    (16473 '/=' lhs rhs)
  }
  function /=[16487](ref arg lhs[16484] :
  (16483 call uint[115] unknown w[16480]), arg rhs[16493] :
  (16492 call uint[115] w)) : _unknown[51] "assignop" "inline"
  {
    if(16511 call _cond_test chpl_checkDivByZero)
    {
      { scopeless
        if(16506 call _cond_test(16499 call == rhs 0))
        {
          { scopeless
            (16504 call halt "Attempt to divide by zero")
          }
        }
      }
    }
    (16521 '/=' lhs rhs)
  }
  function /=[16535](ref arg lhs[16532] :
  (16531 call real[16] unknown w[16528]), arg rhs[16541] :
  (16540 call real[16] w)) : _unknown[51] "assignop" "inline"
  {
    (16548 '/=' lhs rhs)
  }
  function /=[16557](ref arg lhs[16555]:_any[178](?), arg rhs[16559]:_any[178](?)) : _unknown[51] "assignop" "inline"
  {
    (16566 call = lhs(16564 call / lhs rhs))
  }
  function %=[16582](ref arg lhs[16579] :
  (16578 call int[13] unknown w[16575]), arg rhs[16588] :
  (16587 call int[13] w)) : _unknown[51] "assignop" "inline"
  {
    if(16606 call _cond_test chpl_checkDivByZero)
    {
      { scopeless
        if(16601 call _cond_test(16594 call == rhs 0))
        {
          { scopeless
            (16599 call halt "Attempt to compute a modulus by zero")
          }
        }
      }
    }
    (16632 '%=' lhs rhs)
  }
  function %=[16646](ref arg lhs[16643] :
  (16642 call uint[115] unknown w[16639]), arg rhs[16652] :
  (16651 call uint[115] w)) : _unknown[51] "assignop" "inline"
  {
    if(16670 call _cond_test chpl_checkDivByZero)
    {
      { scopeless
        if(16665 call _cond_test(16658 call == rhs 0))
        {
          { scopeless
            (16663 call halt "Attempt to compute a modulus by zero")
          }
        }
      }
    }
    (16680 '%=' lhs rhs)
  }
  function %=[16694](ref arg lhs[16691] :
  (16690 call real[16] unknown w[16687]), arg rhs[16700] :
  (16699 call real[16] w)) : _unknown[51] "assignop" "inline"
  {
    (16707 '%=' lhs rhs)
  }
  function %=[16716](ref arg lhs[16714]:_any[178](?), arg rhs[16718]:_any[178](?)) : _unknown[51] "assignop" "inline"
  {
    (16725 call = lhs(16723 call % lhs rhs))
  }
  function **=[16735](ref arg lhs[16733]:_any[178](?), arg rhs[16737]:_any[178](?)) : _unknown[51] "assignop" "inline"
  {
    (16744 call = lhs(16742 call ** lhs rhs))
  }
  function &=[16760](ref arg lhs[16757] :
  (16756 call int[13] unknown w[16753]), arg rhs[16766] :
  (16765 call int[13] w)) : _unknown[51] "assignop" "inline"
  {
    (16789 '&=' lhs rhs)
  }
  function &=[16804](ref arg lhs[16801] :
  (16800 call uint[115] unknown w[16797]), arg rhs[16810] :
  (16809 call uint[115] w)) : _unknown[51] "assignop" "inline"
  {
    (16817 '&=' lhs rhs)
  }
  function &=[16826](ref arg lhs[16824]:_any[178](?), arg rhs[16828]:_any[178](?)) : _unknown[51] "assignop" "inline"
  {
    (16835 call = lhs(16833 call & lhs rhs))
  }
  function |=[16851](ref arg lhs[16848] :
  (16847 call int[13] unknown w[16844]), arg rhs[16857] :
  (16856 call int[13] w)) : _unknown[51] "assignop" "inline"
  {
    (16880 '|=' lhs rhs)
  }
  function |=[16895](ref arg lhs[16892] :
  (16891 call uint[115] unknown w[16888]), arg rhs[16901] :
  (16900 call uint[115] w)) : _unknown[51] "assignop" "inline"
  {
    (16908 '|=' lhs rhs)
  }
  function |=[16917](ref arg lhs[16915]:_any[178](?), arg rhs[16919]:_any[178](?)) : _unknown[51] "assignop" "inline"
  {
    (16926 call = lhs(16924 call | lhs rhs))
  }
  function ^=[16942](ref arg lhs[16939] :
  (16938 call int[13] unknown w[16935]), arg rhs[16948] :
  (16947 call int[13] w)) : _unknown[51] "assignop" "inline"
  {
    (16971 '^=' lhs rhs)
  }
  function ^=[16986](ref arg lhs[16983] :
  (16982 call uint[115] unknown w[16979]), arg rhs[16992] :
  (16991 call uint[115] w)) : _unknown[51] "assignop" "inline"
  {
    (16999 '^=' lhs rhs)
  }
  function ^=[17008](ref arg lhs[17006]:_any[178](?), arg rhs[17010]:_any[178](?)) : _unknown[51] "assignop" "inline"
  {
    (17017 call = lhs(17015 call ^ lhs rhs))
  }
  function >>=[17033](ref arg lhs[17030] :
  (17029 call int[13] unknown w[17026]), arg rhs[17039] :
  (17038 call int[13] w)) : _unknown[51] "assignop" "inline"
  {
    (17062 '>>=' lhs rhs)
  }
  function >>=[17077](ref arg lhs[17074] :
  (17073 call uint[115] unknown w[17070]), arg rhs[17083] :
  (17082 call uint[115] w)) : _unknown[51] "assignop" "inline"
  {
    (17090 '>>=' lhs rhs)
  }
  function >>=[17099](ref arg lhs[17097]:_any[178](?), arg rhs[17101]:_any[178](?)) : _unknown[51] "assignop" "inline"
  {
    (17108 call = lhs(17106 call >> lhs rhs))
  }
  function <<=[17124](ref arg lhs[17121] :
  (17120 call int[13] unknown w[17117]), arg rhs[17130] :
  (17129 call int[13] w)) : _unknown[51] "assignop" "inline"
  {
    (17153 '<<=' lhs rhs)
  }
  function <<=[17168](ref arg lhs[17165] :
  (17164 call uint[115] unknown w[17161]), arg rhs[17174] :
  (17173 call uint[115] w)) : _unknown[51] "assignop" "inline"
  {
    (17181 '<<=' lhs rhs)
  }
  function <<=[17190](ref arg lhs[17188]:_any[178](?), arg rhs[17192]:_any[178](?)) : _unknown[51] "assignop" "inline"
  {
    (17199 call = lhs(17197 call << lhs rhs))
  }
  function +=[17211](ref arg D[17208] :
  _domain, arg idx[17213]:_any[178](?)) : _unknown[51] "assignop" "inline"
  {
    (17221 call(17216 call . D c"add") idx)
  }
  function -=[17232](ref arg D[17229] :
  _domain, arg idx[17234]:_any[178](?)) : _unknown[51] "assignop" "inline"
  {
    (17244 call(17239 call . D c"remove") idx)
  }
  function +=[17255](ref arg D[17252] :
  _domain, param arg idx[17257]:_any[178](?)) : _unknown[51] "assignop" "inline"
  {
    (17265 call(17260 call . D c"add") idx)
  }
  function -=[17276](ref arg D[17273] :
  _domain, param arg idx[17278]:_any[178](?)) : _unknown[51] "assignop" "inline"
  {
    (17286 call(17281 call . D c"remove") idx)
  }
  function <=>[17295](ref arg lhs[17293]:_any[178](?), ref arg rhs[17297]:_any[178](?)) : _unknown[51] "inline" "ignore transfer errors"
  {
    { scopeless
      unknown tmp[17300] lhs
      (17303 'end of statement')
    }
    (17307 call = lhs rhs)
    (17312 call = rhs tmp)
  }
  function +[17326](arg a[17323] :
  (17322 call uint[115] 64), arg b[17332] :
  (17331 call int[13] 64)) : _unknown[51] "inline"
  {
    (17338 call _throwOpError "+")
  }
  function +[17352](arg a[17349] :
  (17348 call int[13] 64), arg b[17358] :
  (17357 call uint[115] 64)) : _unknown[51] "inline"
  {
    (17364 call _throwOpError "+")
  }
  function +[17378](arg a[17375] :
  (17374 call uint[115] 64), param arg b[17384] :
  (17383 call uint[115] 64)) : _unknown[51] "inline"
  {
    (17392 return(17391 '+' a b))
  }
  function +[17406](param arg a[17403] :
  (17402 call uint[115] 64), arg b[17412] :
  (17411 call uint[115] 64)) : _unknown[51] "inline"
  {
    (17420 return(17419 '+' a b))
  }
  function +[17434](arg a[17431] :
  (17430 call int[13] 64), param arg b[17440] :
  (17439 call int[13] 64)) : _unknown[51] "inline"
  {
    (17448 return(17447 '+' a b))
  }
  function +[17462](param arg a[17459] :
  (17458 call int[13] 64), arg b[17468] :
  (17467 call int[13] 64)) : _unknown[51] "inline"
  {
    (17476 return(17475 '+' a b))
  }
  function -[17490](arg a[17487] :
  (17486 call uint[115] 64), arg b[17496] :
  (17495 call int[13] 64)) : _unknown[51] "inline"
  {
    (17502 call _throwOpError "-")
  }
  function -[17516](arg a[17513] :
  (17512 call int[13] 64), arg b[17522] :
  (17521 call uint[115] 64)) : _unknown[51] "inline"
  {
    (17528 call _throwOpError "-")
  }
  function -[17542](arg a[17539] :
  (17538 call uint[115] 64), param arg b[17548] :
  (17547 call uint[115] 64)) : _unknown[51] "inline"
  {
    (17556 return(17555 '-' a b))
  }
  function -[17570](param arg a[17567] :
  (17566 call uint[115] 64), arg b[17576] :
  (17575 call uint[115] 64)) : _unknown[51] "inline"
  {
    (17584 return(17583 '-' a b))
  }
  function -[17598](arg a[17595] :
  (17594 call int[13] 64), param arg b[17604] :
  (17603 call int[13] 64)) : _unknown[51] "inline"
  {
    (17612 return(17611 '-' a b))
  }
  function -[17626](param arg a[17623] :
  (17622 call int[13] 64), arg b[17632] :
  (17631 call int[13] 64)) : _unknown[51] "inline"
  {
    (17640 return(17639 '-' a b))
  }
  function *[17654](arg a[17651] :
  (17650 call uint[115] 64), arg b[17660] :
  (17659 call int[13] 64)) : _unknown[51] "inline"
  {
    (17666 call _throwOpError "*")
  }
  function *[17680](arg a[17677] :
  (17676 call int[13] 64), arg b[17686] :
  (17685 call uint[115] 64)) : _unknown[51] "inline"
  {
    (17692 call _throwOpError "*")
  }
  function *[17706](arg a[17703] :
  (17702 call uint[115] 64), param arg b[17712] :
  (17711 call uint[115] 64)) : _unknown[51] "inline"
  {
    (17720 return(17719 '*' a b))
  }
  function *[17734](param arg a[17731] :
  (17730 call uint[115] 64), arg b[17740] :
  (17739 call uint[115] 64)) : _unknown[51] "inline"
  {
    (17748 return(17747 '*' a b))
  }
  function *[17762](arg a[17759] :
  (17758 call int[13] 64), param arg b[17768] :
  (17767 call int[13] 64)) : _unknown[51] "inline"
  {
    (17776 return(17775 '*' a b))
  }
  function *[17790](param arg a[17787] :
  (17786 call int[13] 64), arg b[17796] :
  (17795 call int[13] 64)) : _unknown[51] "inline"
  {
    (17804 return(17803 '*' a b))
  }
  function /[17818](arg a[17815] :
  (17814 call uint[115] 64), arg b[17824] :
  (17823 call int[13] 64)) : _unknown[51] "inline"
  {
    (17830 call _throwOpError "/")
  }
  function /[17844](arg a[17841] :
  (17840 call int[13] 64), arg b[17850] :
  (17849 call uint[115] 64)) : _unknown[51] "inline"
  {
    (17856 call _throwOpError "/")
  }
  function /[17870](arg a[17867] :
  (17866 call int[13] 64), param arg b[17876] :
  (17875 call int[13] 64)) : _unknown[51] "inline"
  {
    if(17888 call _cond_test(17881 call == b 0))
    {
      { scopeless
        (17886 call compilerError "Attempt to divide by zero")
      }
    }
    (17899 return(17898 '/' a b))
  }
  function /[17912](arg a[17909] :
  (17908 call uint[115] 64), param arg b[17918] :
  (17917 call uint[115] 64)) : _unknown[51] "inline"
  {
    if(17930 call _cond_test(17923 call == b 0))
    {
      { scopeless
        (17928 call compilerError "Attempt to divide by zero")
      }
    }
    (17941 return(17940 '/' a b))
  }
  function /[17954](param arg a[17951] :
  (17950 call uint[115] 64), arg b[17960] :
  (17959 call uint[115] 64)) : _unknown[51] "inline"
  {
    if(17978 call _cond_test chpl_checkDivByZero)
    {
      { scopeless
        if(17973 call _cond_test(17966 call == b 0))
        {
          { scopeless
            (17971 call halt "Attempt to divide by zero")
          }
        }
      }
    }
    (17989 return(17988 '/' a b))
  }
  function /[18002](param arg a[17999] :
  (17998 call int[13] 64), arg b[18008] :
  (18007 call int[13] 64)) : _unknown[51] "inline"
  {
    if(18026 call _cond_test chpl_checkDivByZero)
    {
      { scopeless
        if(18021 call _cond_test(18014 call == b 0))
        {
          { scopeless
            (18019 call halt "Attempt to divide by zero")
          }
        }
      }
    }
    (18037 return(18036 '/' a b))
  }
  function **[18050](arg a[18047] :
  (18046 call uint[115] 64), arg b[18056] :
  (18055 call int[13] 64)) : _unknown[51] "inline"
  {
    (18062 call _throwOpError "**")
  }
  function **[18076](arg a[18073] :
  (18072 call int[13] 64), arg b[18082] :
  (18081 call uint[115] 64)) : _unknown[51] "inline"
  {
    (18088 call _throwOpError "**")
  }
  function **[18102](arg a[18099] :
  (18098 call uint[115] 64), param arg b[18108] :
  (18107 call uint[115] 64)) : _unknown[51] "inline"
  {
    (18116 return(18115 '**' a b))
  }
  function **[18130](param arg a[18127] :
  (18126 call uint[115] 64), arg b[18136] :
  (18135 call uint[115] 64)) : _unknown[51] "inline"
  {
    (18144 return(18143 '**' a b))
  }
  function **[18158](arg a[18155] :
  (18154 call int[13] 64), param arg b[18164] :
  (18163 call int[13] 64)) : _unknown[51] "inline"
  {
    (18172 return(18171 '**' a b))
  }
  function **[18186](param arg a[18183] :
  (18182 call int[13] 64), arg b[18192] :
  (18191 call int[13] 64)) : _unknown[51] "inline"
  {
    (18200 return(18199 '**' a b))
  }
  function %[18214](arg a[18211] :
  (18210 call uint[115] 64), arg b[18220] :
  (18219 call int[13] 64)) : _unknown[51] "inline"
  {
    (18226 call _throwOpError "%")
  }
  function %[18240](arg a[18237] :
  (18236 call int[13] 64), arg b[18246] :
  (18245 call uint[115] 64)) : _unknown[51] "inline"
  {
    (18252 call _throwOpError "%")
  }
  function %[18266](arg a[18263] :
  (18262 call uint[115] 64), param arg b[18272] :
  (18271 call uint[115] 64)) : _unknown[51] "inline"
  {
    if(18284 call _cond_test(18277 call == b 0))
    {
      { scopeless
        (18282 call compilerError "Attempt to compute a modulus by zero")
      }
    }
    (18295 return(18294 '%' a b))
  }
  function %[18308](param arg a[18305] :
  (18304 call uint[115] 64), arg b[18314] :
  (18313 call uint[115] 64)) : _unknown[51] "inline"
  {
    if(18332 call _cond_test chpl_checkDivByZero)
    {
      { scopeless
        if(18327 call _cond_test(18320 call == b 0))
        {
          { scopeless
            (18325 call halt "Attempt to compute a modulus by zero")
          }
        }
      }
    }
    (18343 return(18342 '%' a b))
  }
  function %[18356](arg a[18353] :
  (18352 call int[13] 64), param arg b[18362] :
  (18361 call int[13] 64)) : _unknown[51] "inline"
  {
    if(18374 call _cond_test(18367 call == b 0))
    {
      { scopeless
        (18372 call compilerError "Attempt to compute a modulus by zero")
      }
    }
    (18385 return(18384 '%' a b))
  }
  function %[18398](param arg a[18395] :
  (18394 call int[13] 64), arg b[18404] :
  (18403 call int[13] 64)) : _unknown[51] "inline"
  {
    if(18422 call _cond_test chpl_checkDivByZero)
    {
      { scopeless
        if(18417 call _cond_test(18410 call == b 0))
        {
          { scopeless
            (18415 call halt "Attempt to compute a modulus by zero")
          }
        }
      }
    }
    (18433 return(18432 '%' a b))
  }
  function ==[18446](arg a[18443] :
  (18442 call uint[115] 64), arg b[18452] :
  (18451 call int[13] 64)) : _unknown[51] "inline"
  {
    (18473 return(18471 call &&(18459 call !(18457 call < b 0))(18469 call == a(18467 call _cast(18466 call uint[115] 64) b))))
  }
  function ==[18487](arg a[18484] :
  (18483 call int[13] 64), arg b[18493] :
  (18492 call uint[115] 64)) : _unknown[51] "inline"
  {
    (18514 return(18512 call &&(18500 call !(18498 call < a 0))(18510 call ==(18507 call _cast(18506 call uint[115] 64) a) b)))
  }
  function !=[18528](arg a[18525] :
  (18524 call uint[115] 64), arg b[18534] :
  (18533 call int[13] 64)) : _unknown[51] "inline"
  {
    (18553 return(18551 call ||(18539 call < b 0)(18549 call != a(18547 call _cast(18546 call uint[115] 64) b))))
  }
  function !=[18567](arg a[18564] :
  (18563 call int[13] 64), arg b[18573] :
  (18572 call uint[115] 64)) : _unknown[51] "inline"
  {
    (18592 return(18590 call ||(18578 call < a 0)(18588 call !=(18585 call _cast(18584 call uint[115] 64) a) b)))
  }
  function >[18606](arg a[18603] :
  (18602 call uint[115] 64), arg b[18612] :
  (18611 call int[13] 64)) : _unknown[51] "inline"
  {
    (18631 return(18629 call ||(18617 call < b 0)(18627 call > a(18625 call _cast(18624 call uint[115] 64) b))))
  }
  function >[18645](arg a[18642] :
  (18641 call int[13] 64), arg b[18651] :
  (18650 call uint[115] 64)) : _unknown[51] "inline"
  {
    (18672 return(18670 call &&(18658 call !(18656 call < a 0))(18668 call >(18665 call _cast(18664 call uint[115] 64) a) b)))
  }
  function >[18686](param arg a[18683] :
  (18682 call uint[115] 64), arg b[18692] :
  (18691 call uint[115] 64)) param : _unknown[51] "inline"
  {
    (18700 return 0)
  }
  where {
    (18697 call == a 0)
  }
  function >[18715](param arg a[18712] :
  (18711 call uint[115] 64), arg b[18721] :
  (18720 call uint[115] 64)) : _unknown[51] "inline"
  {
    (18729 return(18728 '>' a b))
  }
  function >[18743](param arg a[18740] :
  (18739 call int[13] 64), arg b[18749] :
  (18748 call int[13] 64)) : _unknown[51] "inline"
  {
    (18757 return(18756 '>' a b))
  }
  function <[18771](arg a[18768] :
  (18767 call uint[115] 64), arg b[18777] :
  (18776 call int[13] 64)) : _unknown[51] "inline"
  {
    (18798 return(18796 call &&(18784 call !(18782 call < b 0))(18794 call < a(18792 call _cast(18791 call uint[115] 64) b))))
  }
  function <[18812](arg a[18809] :
  (18808 call int[13] 64), arg b[18818] :
  (18817 call uint[115] 64)) : _unknown[51] "inline"
  {
    (18837 return(18835 call ||(18823 call < a 0)(18833 call <(18830 call _cast(18829 call uint[115] 64) a) b)))
  }
  function <[18851](arg a[18848] :
  (18847 call uint[115] 64), param arg b[18857] :
  (18856 call uint[115] 64)) param : _unknown[51] "inline"
  {
    (18865 return 0)
  }
  where {
    (18862 call == b 0)
  }
  function <[18880](arg a[18877] :
  (18876 call uint[115] 64), param arg b[18886] :
  (18885 call uint[115] 64)) : _unknown[51] "inline"
  {
    (18894 return(18893 '<' a b))
  }
  function <[18908](arg a[18905] :
  (18904 call int[13] 64), param arg b[18914] :
  (18913 call int[13] 64)) : _unknown[51] "inline"
  {
    (18922 return(18921 '<' a b))
  }
  function >=[18936](arg a[18933] :
  (18932 call uint[115] 64), arg b[18942] :
  (18941 call int[13] 64)) : _unknown[51] "inline"
  {
    (18961 return(18959 call ||(18947 call < b 0)(18957 call >= a(18955 call _cast(18954 call uint[115] 64) b))))
  }
  function >=[18975](arg a[18972] :
  (18971 call int[13] 64), arg b[18981] :
  (18980 call uint[115] 64)) : _unknown[51] "inline"
  {
    (19002 return(19000 call &&(18988 call !(18986 call < a 0))(18998 call >=(18995 call _cast(18994 call uint[115] 64) a) b)))
  }
  function >=[19016](arg a[19013] :
  (19012 call uint[115] 64), param arg b[19022] :
  (19021 call uint[115] 64)) param : _unknown[51] "inline"
  {
    (19030 return 1)
  }
  where {
    (19027 call == b 0)
  }
  function >=[19045](arg a[19042] :
  (19041 call uint[115] 64), param arg b[19051] :
  (19050 call uint[115] 64)) : _unknown[51] "inline"
  {
    (19059 return(19058 '>=' a b))
  }
  function >=[19073](arg a[19070] :
  (19069 call int[13] 64), param arg b[19079] :
  (19078 call int[13] 64)) : _unknown[51] "inline"
  {
    (19087 return(19086 '>=' a b))
  }
  function <=[19101](arg a[19098] :
  (19097 call uint[115] 64), arg b[19107] :
  (19106 call int[13] 64)) : _unknown[51] "inline"
  {
    (19128 return(19126 call &&(19114 call !(19112 call < b 0))(19124 call <= a(19122 call _cast(19121 call uint[115] 64) b))))
  }
  function <=[19142](arg a[19139] :
  (19138 call int[13] 64), arg b[19148] :
  (19147 call uint[115] 64)) : _unknown[51] "inline"
  {
    (19167 return(19165 call ||(19153 call < a 0)(19163 call <=(19160 call _cast(19159 call uint[115] 64) a) b)))
  }
  function <=[19181](param arg a[19178] :
  (19177 call uint[115] 64), arg b[19187] :
  (19186 call uint[115] 64)) param : _unknown[51] "inline"
  {
    (19195 return 1)
  }
  where {
    (19192 call == a 0)
  }
  function <=[19210](param arg a[19207] :
  (19206 call uint[115] 64), arg b[19216] :
  (19215 call uint[115] 64)) : _unknown[51] "inline"
  {
    (19224 return(19223 '<=' a b))
  }
  function <=[19238](param arg a[19235] :
  (19234 call int[13] 64), arg b[19244] :
  (19243 call int[13] 64)) : _unknown[51] "inline"
  {
    (19252 return(19251 '<=' a b))
  }
  function isGenericType[19261](arg t[19259]:_any[178](?)) param : _unknown[51]
  {
    { scopeless
      (19283 return(19282 'is generic type' t))
    }
  }
  function isClassType[19292](arg t[19290]:_any[178](?)) param : _unknown[51]
  {
    { scopeless
      (19316 return(19315 'is class type' t))
    }
  }
  function isNilableClassType[19325](arg t[19323]:_any[178](?)) param : _unknown[51]
  {
    { scopeless
      (19347 return(19346 'is nilable class type' t))
    }
  }
  function isNonNilableClassType[19356](arg t[19354]:_any[178](?)) param : _unknown[51]
  {
    { scopeless
      (19378 return(19377 'is non nilable class type' t))
    }
  }
  function isBorrowedOrUnmanagedClassType[19389](arg t[19386] :
  unmanaged[220](?)) param : _unknown[51]
  {
    { scopeless
      (19392 return 1)
    }
  }
  function isBorrowedOrUnmanagedClassType[19403](arg t[19400] :
  borrowed[211](?)) param : _unknown[51]
  {
    { scopeless
      (19406 return 1)
    }
  }
  function isBorrowedOrUnmanagedClassType[19415](arg t[19413]:_any[178](?)) param : _unknown[51]
  {
    { scopeless
      (19418 return 0)
    }
  }
  function chpl_legacyClasses[19425]() param : _unknown[51] "no parens"
  {
    (19448 call compilerWarning "'chpl_legacyClasses' is deprecated and will be removed in the next release; it is now always false")
    (19452 return 0)
  }
  function isRecordType[19460](arg t[19458]:_any[178](?)) param : _unknown[51]
  {
    if(19552 call _cond_test(19483 call ==(19481 'is record type' t) 0))
    {
      { scopeless
        (19486 return 0)
      }
    }
    {
      { scopeless
        if(19546 call _cond_test(19538 call ||(19532 call ||(19526 call ||(19520 call ||(19514 call ||(19508 call ||(19502 call ||(19496 call ||(19491 call isDmapType t)(19495 call isDomainType t))(19501 call isArrayType t))(19507 call isRangeType t))(19513 call isTupleType t))(19519 call isSyncType t))(19525 call isSingleType t))(19531 call isStringType t))(19537 call isAtomicType t)))
        {
          { scopeless
            (19541 return 0)
          }
        }
        {
          { scopeless
            (19544 return 1)
          }
        }
      }
    }
  }
  function isUnionType[19565](arg t[19563]:_any[178](?)) param : _unknown[51]
  {
    { scopeless
      (19587 return(19586 'is union type' t))
    }
  }
  function isAtomicType[19596](arg t[19594]:_any[178](?)) param : _unknown[51]
  {
    { scopeless
      (19618 return(19617 'is atomic type' t))
    }
  }
  function isRefIterType[19627](arg t[19625]:_any[178](?)) param : _unknown[51]
  {
    { scopeless
      (19649 return(19648 'is ref iter type' t))
    }
  }
  { scopeless
    const QIO_STYLE_ELEMENT_STRING[19655] "const" "extern" int[13]
    (19658 'end of statement')
  }
  { scopeless
    const QIO_STYLE_ELEMENT_COMPLEX[19660] "const" "extern" int[13]
    (19663 'end of statement')
  }
  { scopeless
    const QIO_STYLE_ELEMENT_ARRAY[19665] "const" "extern" int[13]
    (19668 'end of statement')
  }
  { scopeless
    const QIO_STYLE_ELEMENT_AGGREGATE[19670] "const" "extern" int[13]
    (19673 'end of statement')
  }
  { scopeless
    const QIO_STYLE_ELEMENT_TUPLE[19675] "const" "extern" int[13]
    (19678 'end of statement')
  }
  { scopeless
    const QIO_STYLE_ELEMENT_BYTE_ORDER[19680] "const" "extern" int[13]
    (19683 'end of statement')
  }
  { scopeless
    const QIO_STYLE_ELEMENT_IS_NATIVE_BYTE_ORDER[19685] "const" "extern" int[13]
    (19688 'end of statement')
  }
  { scopeless
    const QIO_STYLE_ELEMENT_SKIP_UNKNOWN_FIELDS[19690] "const" "extern" int[13]
    (19693 'end of statement')
  }
  { scopeless
    const QIO_ARRAY_FORMAT_SPACE[19695] "const" "extern" int[13]
    (19698 'end of statement')
  }
  { scopeless
    const QIO_ARRAY_FORMAT_CHPL[19700] "const" "extern" int[13]
    (19703 'end of statement')
  }
  { scopeless
    const QIO_ARRAY_FORMAT_JSON[19705] "const" "extern" int[13]
    (19708 'end of statement')
  }
  { scopeless
    const QIO_AGGREGATE_FORMAT_BRACES[19710] "const" "extern" int[13]
    (19713 'end of statement')
  }
  { scopeless
    const QIO_AGGREGATE_FORMAT_CHPL[19715] "const" "extern" int[13]
    (19718 'end of statement')
  }
  { scopeless
    const QIO_AGGREGATE_FORMAT_JSON[19720] "const" "extern" int[13]
    (19723 'end of statement')
  }
  { scopeless
    const QIO_TUPLE_FORMAT_CHPL[19725] "const" "extern" int[13]
    (19728 'end of statement')
  }
  { scopeless
    const QIO_TUPLE_FORMAT_SPACE[19730] "const" "extern" int[13]
    (19733 'end of statement')
  }
  { scopeless
    const QIO_TUPLE_FORMAT_JSON[19735] "const" "extern" int[13]
    (19738 'end of statement')
  }
  type chpl_ModuleDeinit[19827] const moduleName[19741] "const" c_string const deinitFun[19746] "const" c_fn_ptr const prevModule[19753] "const"(19752 'to unmanaged class from unknown'(19751 'to nilable class from type' chpl_ModuleDeinit)) function chpl_ModuleDeinit[19827].writeThis[19761](arg _mt[19831]:_MT[238], arg this[19829]:chpl_ModuleDeinit[19827], arg ch[19759]:_any[178](?)) : _unknown[51] throws "method" "primary method"
  {
    Try
    {
      {
        (19791 call(19766 call . ch c"writef") "chpl_ModuleDeinit(%s)"(19790 call createStringWithNewBuffer moduleName))
      }
    }
    Catch e : DecodeError
    {
      (19817 call halt "Module name is not valid string!")
    }
  }
  { scopeless
    unknown chpl_moduleDeinitFuns[19840](19838 call _cast(19837 'to unmanaged class from unknown'(19836 'to nilable class from type' chpl_ModuleDeinit)) nil[44])
    (19843 'end of statement')
  }
  function chpl_checkLegalTypeFieldAccessor[19848](arg thisArg[19846]:_any[178](?), arg fieldType[19850]:_any[178](?), param arg fieldName[19852]:_any[178](?)) type : _unknown[51] "inline"
  {
    if(19931 call _cond_test(19869 call &&(19858 call isNilableClassType(19856 'typeof' thisArg))(19867 call ||(19862 call isDomainType fieldType)(19866 call isArrayType fieldType))))
    {
      { scopeless
        (19929 call compilerError "accessing the runtime-type field " fieldName " of a nilable class. Consider applying postfix-! operator" " to the class before accessing this field.")
      }
    }
    (19938 return fieldType)
  }
  function chpl_checkLegalTypeFieldAccessor[19946](arg thisArg[19944]:_any[178](?), arg fieldType[19948]:_any[178](?), param arg fieldName[19950]:_any[178](?)) type : _unknown[51] "inline"
  {
    if(19987 call _cond_test(19960 call ||(19955 call isDomainType fieldType)(19959 call isArrayType fieldType)))
    {
      { scopeless
        (19985 call compilerError "accessing the runtime-type field " fieldName " of a class type is currently unsupported")
      }
    }
    (19994 return fieldType)
  }
  function _to_unmanaged[20002](arg t[20000]:_any[178](?)) type : _unknown[51]
  {
    unknown rt[20024] "type variable"(20023 'to unmanaged class' t)
    (20029 return rt)
  }
  function _to_unmanaged[20037](arg arg[20035]:_any[178](?)) : _unknown[51] "inline"
  {
    { scopeless
      unknown ret[20043](20042 'to unmanaged class' arg)
      (20046 'end of statement')
    }
    (20049 return ret)
  }
  function _to_borrowed[20057](arg t[20055]:_any[178](?)) type : _unknown[51]
  {
    unknown rt[20081] "type variable"(20080 'to borrowed class' t)
    (20086 return rt)
  }
  function _to_borrowed[20094](arg arg[20092]:_any[178](?)) : _unknown[51] "inline"
  {
    { scopeless
      unknown ret[20100](20099 'to borrowed class' arg)
      (20103 'end of statement')
    }
    (20106 return ret)
  }
  function _to_nonnil[20114](arg t[20112]:_any[178](?)) type : _unknown[51]
  {
    unknown rt[20136] "type variable"(20135 'to non nilable class' t)
    (20141 return rt)
  }
  function _to_nonnil[20149](arg arg[20147]:_any[178](?)) : _unknown[51] "inline"
  {
    { scopeless
      unknown ret[20155](20154 'to non nilable class' arg)
      (20158 'end of statement')
    }
    (20161 return ret)
  }
  function _to_nilable[20169](arg t[20167]:_any[178](?)) type : _unknown[51]
  {
    unknown rt[20191] "type variable"(20190 'to nilable class' t)
    (20196 return rt)
  }
  function _to_nilable[20204](arg arg[20202]:_any[178](?)) : _unknown[51] "inline"
  {
    { scopeless
      unknown ret[20210](20209 'to nilable class' arg)
      (20213 'end of statement')
    }
    (20216 return ret)
  }
  function _removed_cast[20224](in arg x[20222]:_any[178](?)) : _unknown[51] "inline" "no borrow convert"
  {
    (20227 return x)
  }
  function enumerated[20234]() type : _unknown[51] "no parens"
  {
    (20255 call compilerWarning "'enumerated' is deprecated - please use 'enum' instead")
    (20259 return enum[187](?))
  }
  (353030 'used modules list'(353028 'use' _root[2]))
}