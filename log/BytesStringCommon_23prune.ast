AST dump for BytesStringCommon after pass prune.
Module use list: ChapelStandard SysCTypes ByteBufferHelpers NVStringFactory SysBasic Bytes String 

{
  type _class_localson_fn[2153224] val _runtime_hdr[2153225]:chpl_comm_on_bundle_t[209359] val _0_tmp[2153227]:chpl_localeID_t[209352] val _1_needle_data[2153229]:__serializeHelper[28089] ref _2_x[2153231]:string[26] val _3_region[2153233]:range(byteIndex,boundedLow,false)[1143464] ref _4_ret[2153235]:int(64)[13]
  type _class_localson_fn[2150610] val _runtime_hdr[2150611]:chpl_comm_on_bundle_t[209359] val _0_tmp[2150613]:chpl_localeID_t[209352] val _1_needle_data[2150615]:__serializeHelper[28089] ref _2_x[2150617]:string[26] val _3_region[2150619]:range(byteIndex,bounded,false)[1025853] ref _4_ret[2150621]:int(64)[13]
  type _class_localson_fn[2149925] val _runtime_hdr[2149926]:chpl_comm_on_bundle_t[209359] val _0_tmp[2149928]:chpl_localeID_t[209352] ref _1_lhs[2149930]:string[26] ref _2_rhs[2149932]:string[26]
  type _class_localson_fn[2149157] val _runtime_hdr[2149158]:chpl_comm_on_bundle_t[209359] val _0_tmp[2149160]:chpl_localeID_t[209352] ref _1_lhs[2149162]:string[26] ref _2_rhs[2149164]:string[26]
  type _class_localson_fn[2148291] val _runtime_hdr[2148292]:chpl_comm_on_bundle_t[209359] val _0_tmp[2148294]:chpl_localeID_t[209352] ref _1_x[2148296]:string[26] ref _2_ret[2148298]:int(64)[13]
  function chpl__init_BytesStringCommon[416078]() : void[4] "insert line file info" "module init" "resolved"
  {
    {
    }
    (523448 return _void[55])
  }
  type decodePolicy[173702] def strict[173692]:decodePolicy[173702] def replace[173694]:decodePolicy[173702] def drop[173696]:decodePolicy[173702] def escape[173698]:decodePolicy[173702] def ignore[173700]:decodePolicy[173702]
  type encodePolicy[173710] def unescape[173706]:encodePolicy[173710] def pass[173708]:encodePolicy[173710]
  function getCStr[957345](const  ref arg x[957347]:_ref(string)[938000]) : c_string[19] "inline" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[957351]:c_string[19] "dead after last mention" "RVV" "temp"
    val call_tmp[957359]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val tmp[957416]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[957434]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    ref call_tmp[957436]:_ref(int(32))[936687] "dead after last mention" "maybe param" "reference to a const" "temp"
    (957438 'move' call_tmp[957436](957441 call locale_id[758103] x[957347]))
    const-val call_tmp[957444]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[957792]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (957796 'move' coerce_tmp[957792](957794 'deref' call_tmp[957436]))
    (957446 'move' call_tmp[957444](957449 call !=[436033] coerce_tmp[957792] chpl_nodeID[208207]))
    (957452 'move' tmp[957434] call_tmp[957444])
    (957457 'move' tmp[957416] tmp[957434])
    const-val call_tmp[957469]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (957471 'move' call_tmp[957469] tmp[957416])
    if call_tmp[957469]
    {
      val call_tmp[957478]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (957501 call halt[154111] "Cannot call .c_str() on a remote string")
    }
    ref call_tmp[957504]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "reference to a const" "temp"
    (957506 'move' call_tmp[957504](957509 call buff[758025] x[957347]))
    const-val call_tmp[957512]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[958118]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (958122 'move' coerce_tmp[958118](958120 'deref' call_tmp[957504]))
    (957514 'move' call_tmp[957512](957517 call _cast[957370] coerce_tmp[958118]))
    (958127 'move' ret[957351] call_tmp[957512])
    (957525 return ret[957351])
  }
  function decodeByteBuffer[173938](const in arg buff[173935]:c_ptr(uint(8))[937484], const in arg length[173941]:int(64)[13], const in arg policy[173945]:decodePolicy[173702], ref arg error_out[1842637]:Error[167984], ref arg _retArg[1864860]:_ref(string)[938000]) : void[4] throws "fn returns via _retArg" "resolved"
  {
    val ret[522809]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[682275]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (682278 'move' call_tmp[682275](173988 call ==[435671] length[173941] 0))
    const-val call_tmp[682280]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (682283 'move' call_tmp[682280] call_tmp[682275])
    if call_tmp[682280]
    {
      (522814 'move' ret[522809](1864864 call chpl__initCopy[981409] ""))
      gotoReturn _end_decodeByteBuffer[522807] _end_decodeByteBuffer[522807]
    }
    const-val call_tmp[682285]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (682288 'move' call_tmp[682285](174022 call +[949727] length[173941]))
    const-val call_tmp[682290]:(c_ptr(uint(8)),int(64))[955269] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1865580]:(c_ptr(uint(8)),int(64))[955269] "temp"
    (174025 call bufferAlloc[955079] call_tmp[682285] ret_tmp[1865580])
    (1865583 'move' call_tmp[682290] ret_tmp[1865580])
    const-val tmp[174026]:(c_ptr(uint(8)),int(64))[955269] "dead at end of block" "insert auto destroy" "temp"
    (544931 'move' tmp[174026] call_tmp[682290])
    1
    ref call_tmp[682295]:_ref(c_ptr(uint(8)))[937493] "dead at end of block" "maybe param" "temp"
    (682298 'move' call_tmp[682295](964406 '.' tmp[174026] x0[955265]))
    val newBuff[174014]:c_ptr(uint(8))[937484] "dead at end of block" "insert auto destroy"
    val coerce_tmp[964411]:c_ptr(uint(8))[937484] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (964415 'move' coerce_tmp[964411](964413 'deref' call_tmp[682295]))
    (1877120 '=' newBuff[174014] coerce_tmp[964411])
    (544933 'noop')
    ref call_tmp[682300]:_ref(int(64))[936633] "dead at end of block" "maybe param" "temp"
    (682303 'move' call_tmp[682300](964420 '.' tmp[174026] x1[955267]))
    val allocSize[174016]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[964425]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (964429 'move' coerce_tmp[964425](964427 'deref' call_tmp[682300]))
    (1877123 '=' allocSize[174016] coerce_tmp[964425])
    (544935 'noop')
    val hasEscapes[174040]:bool[10] "dead at end of block" "insert auto destroy"
    (544937 'move' hasEscapes[174040] 0)
    val numCodepoints[174045]:int(64)[13] "dead at end of block" "insert auto destroy"
    (544939 'move' numCodepoints[174045] 0)
    val expectedSize[174050]:int(64)[13] "dead at end of block" "insert auto destroy"
    (544941 'move' expectedSize[174050] allocSize[174016])
    val thisIdx[174055]:int(64)[13] "dead at end of block" "insert auto destroy"
    (544943 'move' thisIdx[174055] 0)
    val decodedIdx[174060]:int(64)[13] "dead at end of block" "insert auto destroy"
    (544945 'move' decodedIdx[174060] 0)
    {
      val tmp[174375]:bool[10] "dead after last mention" "temp"
      const-val call_tmp[682305]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (682308 'move' call_tmp[682305](174396 call <[437495] thisIdx[174055] length[173941]))
      (174399 'move' tmp[174375] call_tmp[682305])
      WhileDo[174380] hazard
      {
        {
          const-val call_tmp[682310]:(syserr,int(32),int(32))[964681] "dead at end of block" "maybe param" "temp"
          const-val ret_tmp[1864880]:(syserr,int(32),int(32))[964681] "temp"
          (174082 call decodeHelp[174452] buff[173935] length[173941] thisIdx[174055] 0 ret_tmp[1864880])
          (1864883 'move' call_tmp[682310] ret_tmp[1864880])
          const-val tmp[174083]:(syserr,int(32),int(32))[964681] "dead at end of block" "const" "insert auto destroy" "temp"
          (544947 'move' tmp[174083] call_tmp[682310])
          1
          ref call_tmp[682315]:_ref(syserr)[948893] "dead at end of block" "maybe param" "reference to a const" "temp"
          (682318 'move' call_tmp[682315](965443 '.' tmp[174083] x0[964675]))
          const-val decodeRet[174068]:syserr[223605] "dead at end of block" "const" "insert auto destroy"
          const-val coerce_tmp[965448]:syserr[223605] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
          (965452 'move' coerce_tmp[965448](965450 'deref' call_tmp[682315]))
          (1877126 '=' decodeRet[174068] coerce_tmp[965448])
          (544949 'noop')
          ref call_tmp[682320]:_ref(int(32))[936687] "dead at end of block" "maybe param" "reference to a const" "temp"
          (682323 'move' call_tmp[682320](965457 '.' tmp[174083] x1[964677]))
          const-val cp[174070]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
          const-val coerce_tmp[965462]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
          (965466 'move' coerce_tmp[965462](965464 'deref' call_tmp[682320]))
          (1877129 '=' cp[174070] coerce_tmp[965462])
          (544951 'noop')
          ref call_tmp[682325]:_ref(int(32))[936687] "dead at end of block" "maybe param" "reference to a const" "temp"
          (682328 'move' call_tmp[682325](965471 '.' tmp[174083] x2[964679]))
          const-val nBytes[174072]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
          const-val coerce_tmp[965476]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
          (965480 'move' coerce_tmp[965476](965478 'deref' call_tmp[682325]))
          (1877132 '=' nBytes[174072] coerce_tmp[965476])
          (544953 'noop')
          val call_tmp[682330]:c_ptr(uint(8))[937484] "dead at end of block" "maybe param" "temp"
          (682333 'move' call_tmp[682330](174102 call +[956062] buff[173935] thisIdx[174055]))
          val buffToDecode[174104]:c_ptr(uint(8))[937484] "dead at end of block" "insert auto destroy"
          (544955 'move' buffToDecode[174104](965484 call chpl__initCopy[954091] call_tmp[682330]))
          (174110 call +=[451358] numCodepoints[174045] 1)
          const-val call_tmp[682335]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (682338 'move' call_tmp[682335](174115 call !=[223901] decodeRet[174068] 0))
          const-val call_tmp[682340]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (682343 'move' call_tmp[682340] call_tmp[682335])
          if call_tmp[682340]
          {
            const-val call_tmp[682345]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (682348 'move' call_tmp[682345](174122 call ==[965531] policy[173945] strict[173692]))
            const-val call_tmp[682350]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (682353 'move' call_tmp[682350] call_tmp[682345])
            if call_tmp[682350]
            {
              (174127 call bufferFree[172958] newBuff[174014])
              const-val call_tmp[682355]:owned DecodeError[966342] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
              val new_temp[965752]:DecodeError[168140] "dead after last mention" "temp"
              (965754 'move' new_temp[965752](965628 call _new[965703]))
              const-val initTemp[965783]:owned DecodeError[966342] "dead after last mention" "delay instantiation" "temp"
              (965786 call init[965802] initTemp[965783] new_temp[965752])
              (682358 'move' call_tmp[682355] initTemp[965783])
              val call_tmp[682360]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[966546]:owned Error[966519] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
              const-val ret_tmp[1865708]:owned Error[966519] "temp"
              (966548 call _cast[966604] call_tmp[682355] ret_tmp[1865708])
              (1865711 'move' coerce_tmp[966546] ret_tmp[1865708])
              const-val _formal_tmp_in_err[968567]:owned Error[966519] "dead after last mention" "expr temp" "no auto destroy" "temp"
              (968571 'move' _formal_tmp_in_err[968567] coerce_tmp[966546])
              (682363 'move' call_tmp[682360](468110 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[968567]))
              {
                val castedError[1842640]:Error[167984] "temp"
                (1842646 'move' castedError[1842640] call_tmp[682360])
                (1842648 '=' error_out[1842637] castedError[1842640])
                (1877135 call chpl__autoDestroy[1566178] tmp[174083])
                (1877138 call chpl__autoDestroy[1565916] tmp[174026])
                gotoErrorHandlingReturn _end_decodeByteBuffer[522807] _end_decodeByteBuffer[522807]
              }
            }
            {
              const-val nInvalidBytes[174150]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
              val tmp[570967]:int(32)[95] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
              const-val tmp[570968]:bool[10] "dead after last mention" "maybe param" "temp"
              const-val call_tmp[682365]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[969838]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (969844 'move' coerce_tmp[969838](969840 'cast' int(32)[95] 1))
              (682368 'move' call_tmp[682365](174140 call ==[435649] nBytes[174072] coerce_tmp[969838]))
              (570973 'move' tmp[570968] call_tmp[682365])
              if tmp[570968]
              {
                (570978 'move' tmp[570967] nBytes[174072])
              }
              {
                const-val tmp[570980]:int(32)[95] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
                const-val coerce_tmp[969847]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (969853 'move' coerce_tmp[969847](969849 'cast' int(32)[95] 1))
                (570982 'move' tmp[570980](174145 call -[440437] nBytes[174072] coerce_tmp[969847]))
                (570987 'move' tmp[570967] tmp[570980])
              }
              (544957 'move' nInvalidBytes[174150] tmp[570967])
              const-val coerce_tmp[969867]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (969873 'move' coerce_tmp[969867](969869 'cast' int(64)[13] nInvalidBytes[174150]))
              (174157 call +=[451358] thisIdx[174055] coerce_tmp[969867])
              const-val call_tmp[682370]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (682373 'move' call_tmp[682370](174165 call ==[965531] policy[173945] replace[173694]))
              const-val call_tmp[682375]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (682378 'move' call_tmp[682375] call_tmp[682370])
              if call_tmp[682375]
              {
                val call_tmp[682380]:int(32)[95] "dead after last mention" "maybe param" "temp" "type variable"
                const-val call_tmp[682385]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[970138]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (970144 'move' coerce_tmp[970138](970140 'cast' int(32)[95] 3))
                (682388 'move' call_tmp[682385](174182 call -[440437] coerce_tmp[970138] nInvalidBytes[174150]))
                const-val coerce_tmp[970147]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (970153 'move' coerce_tmp[970147](970149 'cast' int(64)[13] call_tmp[682385]))
                (174184 call +=[451358] expectedSize[174050] coerce_tmp[970147])
                const-val tmp[492563]:(c_ptr(uint(8)),int(64))[955269] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                ref tmp[492588]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "temp"
                (492591 'move' tmp[492588](492589 'addr of' newBuff[174014]))
                ref tmp[492599]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                (492602 'move' tmp[492599](492600 'addr of' allocSize[174016]))
                const-val ret_tmp[1864758]:(c_ptr(uint(8)),int(64))[955269] "temp"
                (174197 call bufferEnsureSize[172784] newBuff[174014] allocSize[174016] expectedSize[174050] ret_tmp[1864758])
                (1864761 'move' tmp[492563] ret_tmp[1864758])
                { scopeless
                }
                ref call_tmp[682407]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "temp"
                (682410 'move' call_tmp[682407](970530 '.' tmp[492563] x0[955265]))
                val coerce_tmp[970533]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (970537 'move' coerce_tmp[970533](970535 'deref' call_tmp[682407]))
                (492593 call =[954274] tmp[492588] coerce_tmp[970533])
                ref call_tmp[682412]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                (682415 'move' call_tmp[682412](970542 '.' tmp[492563] x1[955267]))
                const-val coerce_tmp[970545]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (970549 'move' coerce_tmp[970545](970547 'deref' call_tmp[682412]))
                (492604 call =[435370] tmp[492599] coerce_tmp[970545])
                (1877141 call chpl__autoDestroy[1565916] tmp[492563])
                val call_tmp[682417]:c_ptr(uint(8))[937484] "dead after last mention" "expr temp" "maybe param" "temp"
                (682420 'move' call_tmp[682417](174204 call +[956062] newBuff[174014] decodedIdx[174060]))
                const-val coerce_tmp[970561]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (970567 'move' coerce_tmp[970561](970563 'cast' c_void_ptr[149] call_tmp[682417]))
                const-val _return_tmp_[1834598]:syserr[223605] "dead after last mention" "temp"
                (1834600 'move' _return_tmp_[1834598](174208 call qio_encode_char_buf[173958] coerce_tmp[970561] 65533))
                (174212 call +=[451358] decodedIdx[174060] 3)
              }
              {
                const-val call_tmp[682422]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (682425 'move' call_tmp[682422](174222 call ==[965531] policy[173945] escape[173698]))
                const-val call_tmp[682427]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (682430 'move' call_tmp[682427] call_tmp[682422])
                if call_tmp[682427]
                {
                  (174226 call =[435217] hasEscapes[174040] 1)
                  const-val call_tmp[682432]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[970825]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (970831 'move' coerce_tmp[970825](970827 'cast' int(32)[95] 2))
                  (682435 'move' call_tmp[682432](174233 call *[441849] coerce_tmp[970825] nInvalidBytes[174150]))
                  const-val coerce_tmp[970834]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (970840 'move' coerce_tmp[970834](970836 'cast' int(64)[13] call_tmp[682432]))
                  (174235 call +=[451358] expectedSize[174050] coerce_tmp[970834])
                  const-val tmp[492607]:(c_ptr(uint(8)),int(64))[955269] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  ref tmp[492632]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "temp"
                  (492635 'move' tmp[492632](492633 'addr of' newBuff[174014]))
                  ref tmp[492643]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                  (492646 'move' tmp[492643](492644 'addr of' allocSize[174016]))
                  const-val ret_tmp[1864764]:(c_ptr(uint(8)),int(64))[955269] "temp"
                  (174248 call bufferEnsureSize[172784] newBuff[174014] allocSize[174016] expectedSize[174050] ret_tmp[1864764])
                  (1864767 'move' tmp[492607] ret_tmp[1864764])
                  { scopeless
                  }
                  ref call_tmp[682454]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "temp"
                  (682457 'move' call_tmp[682454](970852 '.' tmp[492607] x0[955265]))
                  val coerce_tmp[970855]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (970859 'move' coerce_tmp[970855](970857 'deref' call_tmp[682454]))
                  (492637 call =[954274] tmp[492632] coerce_tmp[970855])
                  ref call_tmp[682459]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                  (682462 'move' call_tmp[682459](970864 '.' tmp[492607] x1[955267]))
                  const-val coerce_tmp[970867]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (970871 'move' coerce_tmp[970867](970869 'deref' call_tmp[682459]))
                  (492648 call =[435370] tmp[492643] coerce_tmp[970867])
                  (1877145 call chpl__autoDestroy[1565916] tmp[492607])
                  {
                    val _indexOfInterest[174286]:int(32)[95] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[174287]:_ic_chpl_direct_counted_range_iter[978372] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[682464]:_ir_chpl_direct_counted_range_iter[978378] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[970940]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (970946 'move' coerce_tmp[970940](970942 'cast' int(32)[95] 0))
                    const-val ret_tmp[1865430]:_ir_chpl_direct_counted_range_iter[978378] "temp"
                    (174303 call chpl_direct_counted_range_iter[457983] coerce_tmp[970940] nInvalidBytes[174150] ret_tmp[1865430])
                    (1865433 'move' call_tmp[682464] ret_tmp[1865430])
                    (174296 'move' _iterator[174287](174294 call _getIterator[978387] call_tmp[682464]))
                    {
                      val ret[1943624]:_ir_chpl_direct_counted_range_iter[978378] "dead after last mention" "RVV" "temp"
                      val _indexOfInterest[1943626]:int(32)[95] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1943628]:_ic_chpl_direct_counted_range_iter_helper[978122] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1943630]:_ir_chpl_direct_counted_range_iter_helper[978128] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1943632]:_ir_chpl_direct_counted_range_iter_helper[978128] "temp"
                      const-val low[1943790]:int(32)[95] "temp"
                      (1943795 'move' low[1943790](1943792 '.v' _iterator[174287] F0_low[2056257]))
                      const-val count[1943797]:int(32)[95] "temp"
                      (1943802 'move' count[1943797](1943799 '.v' _iterator[174287] F1_count[2056261]))
                      (1943635 call chpl_direct_counted_range_iter_helper[970949] low[1943790] count[1943797] ret_tmp[1943632])
                      (1943639 'move' call_tmp[1943630] ret_tmp[1943632])
                      (1943642 'move' _iterator[1943628](1943645 call _getIterator[978137] call_tmp[1943630]))
                      {
                        val ret[2012612]:_ir_chpl_direct_counted_range_iter_helper[978128] "dead after last mention" "RVV" "temp"
                        val call_tmp[2012614]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                        const-val tmp[2012616]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val tmp[2012618]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                        const-val call_tmp[2012620]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val coerce_tmp[2012622]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (2012624 'move' coerce_tmp[2012622](2012626 'cast' int(32)[95] 0))
                        const-val count[2013108]:int(32)[95] "temp"
                        (2013113 'move' count[2013108](2013110 '.v' _iterator[1943628] F1_count[2061602]))
                        (2012629 'move' call_tmp[2012620](2012632 call <[437473] count[2013108] coerce_tmp[2012622]))
                        (2012635 'move' tmp[2012618] call_tmp[2012620])
                        (2012638 'move' tmp[2012616] call_tmp[2012620])
                        const-val call_tmp[2012641]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (2012643 'move' call_tmp[2012641] call_tmp[2012620])
                        if call_tmp[2012620]
                        {
                          (2012649 call boundsCheckHalt[210187] "With a negative count, the range must have a last index.")
                        }
                        const-val tmp[2012652]:2*int(32)[971739] "dead at end of block" "const" "insert auto destroy" "temp"
                        val tmp[2012654]:2*int(32)[971739] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                        const-val tmp[2012656]:bool[10] "dead after last mention" "maybe param" "temp"
                        const-val call_tmp[2012658]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val coerce_tmp[2012660]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (2012662 'move' coerce_tmp[2012660](2012664 'cast' int(32)[95] 0))
                        const-val count[2013115]:int(32)[95] "temp"
                        (2013120 'move' count[2013115](2013117 '.v' _iterator[1943628] F1_count[2061602]))
                        (2012667 'move' call_tmp[2012658](2012670 call ==[435649] count[2013115] coerce_tmp[2012660]))
                        (2012673 'move' tmp[2012656] call_tmp[2012658])
                        if call_tmp[2012658]
                        {
                          const-val tmp[2012678]:2*int(32)[971739] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                          val call_tmp[2012680]:int(32)[95] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[2012682]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val low[2013122]:int(32)[95] "temp"
                          (2013127 'move' low[2013122](2013124 '.v' _iterator[1943628] F0_low[2061598]))
                          (2012684 'move' call_tmp[2012682](2012687 call _cast[971603] low[2013122]))
                          const-val call_tmp[2012689]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[2012691]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                          (2012693 'move' coerce_tmp[2012691](2012695 'cast' uint(64)[115] 1))
                          (2012698 'move' call_tmp[2012689](2012701 call -[962254] call_tmp[2012682]))
                          const-val call_tmp[2012703]:int(32)[95] "dead at end of block" "expr temp" "maybe param" "temp"
                          (2012705 'move' call_tmp[2012703](2012708 call _cast[971666] call_tmp[2012689]))
                          const-val ret_tmp[2012710]:2*int(32)[971739] "temp"
                          const-val low[2013129]:int(32)[95] "temp"
                          (2013134 'move' low[2013129](2013131 '.v' _iterator[1943628] F0_low[2061598]))
                          (2012713 call _build_tuple[971697] low[2013129] call_tmp[2012703] ret_tmp[2012710])
                          (2012717 'move' tmp[2012678] ret_tmp[2012710])
                          (2012720 'move' tmp[2012654] tmp[2012678])
                        }
                        {
                          const-val tmp[2012724]:2*int(32)[971739] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                          val call_tmp[2012726]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[2012728]:int(32)[95] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val count[2013136]:int(32)[95] "temp"
                          (2013141 'move' count[2013136](2013138 '.v' _iterator[1943628] F1_count[2061602]))
                          (2012730 'move' call_tmp[2012728] count[2013136])
                          const-val call_tmp[2012733]:int(32)[95] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[2012735]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                          (2012737 'move' coerce_tmp[2012735](2012739 'cast' int(32)[95] 1))
                          const-val count[2013143]:int(32)[95] "temp"
                          (2013148 'move' count[2013143](2013145 '.v' _iterator[1943628] F1_count[2061602]))
                          (2012742 'move' call_tmp[2012733](2012745 call -[440437] count[2013143] coerce_tmp[2012735]))
                          const-val call_tmp[2012748]:int(32)[95] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val low[2013150]:int(32)[95] "temp"
                          (2013155 'move' low[2013150](2013152 '.v' _iterator[1943628] F0_low[2061598]))
                          (2012750 'move' call_tmp[2012748](2012753 call +[439657] low[2013150] call_tmp[2012733]))
                          const-val ret_tmp[2012756]:2*int(32)[971739] "temp"
                          const-val low[2013157]:int(32)[95] "temp"
                          (2013162 'move' low[2013157](2013159 '.v' _iterator[1943628] F0_low[2061598]))
                          (2012759 call _build_tuple[971697] low[2013157] call_tmp[2012748] ret_tmp[2012756])
                          (2012763 'move' tmp[2012724] ret_tmp[2012756])
                          (2012766 'move' tmp[2012654] tmp[2012724])
                        }
                        (2012770 '=' tmp[2012652] tmp[2012654])
                        (2012773 'noop')
                        1
                        ref call_tmp[2012775]:_ref(int(32))[936687] "dead at end of block" "maybe param" "reference to a const" "temp"
                        (2012777 'move' call_tmp[2012775](2012779 '.' tmp[2012652] x0[971735]))
                        const-val start[2012782]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                        const-val coerce_tmp[2012784]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                        (2012786 'move' coerce_tmp[2012784](2012788 'deref' call_tmp[2012775]))
                        (2012790 '=' start[2012782] coerce_tmp[2012784])
                        (2012793 'noop')
                        ref call_tmp[2012794]:_ref(int(32))[936687] "dead at end of block" "maybe param" "reference to a const" "temp"
                        (2012796 'move' call_tmp[2012794](2012798 '.' tmp[2012652] x1[971737]))
                        const-val end[2012801]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                        const-val coerce_tmp[2012803]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                        (2012805 'move' coerce_tmp[2012803](2012807 'deref' call_tmp[2012794]))
                        (2012809 '=' end[2012801] coerce_tmp[2012803])
                        (2012812 'noop')
                        val _indexOfInterest[2012813]:int(32)[95] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[2012815]:_ic_chpl_direct_param_stride_range_iter[977868] "dead at end of block" "expr temp" "temp"
                        const-val call_tmp[2012817]:_ir_chpl_direct_param_stride_range_iter[977874] "dead at end of block" "expr temp" "maybe param" "temp"
                        const-val ret_tmp[2012819]:_ir_chpl_direct_param_stride_range_iter[977874] "temp"
                        (2012822 call chpl_direct_param_stride_range_iter[972160] coerce_tmp[2012784] coerce_tmp[2012803] ret_tmp[2012819])
                        (2012826 'move' call_tmp[2012817] ret_tmp[2012819])
                        (2012829 'move' _iterator[2012815](2012832 call _getIterator[977883] call_tmp[2012817]))
                        {
                          val ret[2012835]:_ir_chpl_direct_param_stride_range_iter[977874] "dead after last mention" "RVV" "temp"
                          val call_tmp[2012837]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (2012840 call chpl_range_check_stride[972480])
                          val i[2012841]:int(32)[95] "dead at end of block" "insert auto destroy"
                          val call_tmp[2012843]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (2012845 'move' i[2012841] 0)
                          val call_tmp[2012848]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val default_arg_first[2012850]:int(32)[95] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val low[2012852]:int(32)[95] "temp"
                          (2012854 'move' low[2012852](2012856 '.v' _iterator[2012815] F0_low[2063139]))
                          (2012859 'move' default_arg_first[2012850](2012862 call chpl_checkIfRangeIterWillOverflow_default_first[976963] low[2012852]))
                          const-val default_arg_last[2012864]:int(32)[95] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val high[2012866]:int(32)[95] "temp"
                          (2012868 'move' high[2012866](2012870 '.v' _iterator[2012815] F1_high[2063143]))
                          (2012873 'move' default_arg_last[2012864](2012876 call chpl_checkIfRangeIterWillOverflow_default_last[976991] high[2012866]))
                          const-val _return_tmp_[2012878]:bool[10] "dead after last mention" "temp"
                          const-val low[2012880]:int(32)[95] "temp"
                          (2012882 'move' low[2012880](2012884 '.v' _iterator[2012815] F0_low[2063139]))
                          const-val high[2012887]:int(32)[95] "temp"
                          (2012889 'move' high[2012887](2012891 '.v' _iterator[2012815] F1_high[2063143]))
                          (2012894 'move' _return_tmp_[2012878](2012897 call chpl_checkIfRangeIterWillOverflow[976411] low[2012880] high[2012887] 1 default_arg_first[2012850] default_arg_last[2012864] 1))
                          CForLoop[2012904]
                          {
                            const-val yret[2012933]:int(32)[95] "dead after last mention" "YVV" "temp"
                            (2012935 'move' yret[2012933] i[2012841])
                            const-val _yieldedIndex[2012938]:int(32)[95] "temp"
                            (2012940 'move' _yieldedIndex[2012938] i[2012841])
                            {
                              const-val i[2012944]:int(32)[95] "const" "index var" "insert auto destroy"
                              (2012946 'move' i[2012944] _yieldedIndex[2012938])
                              const-val yret[2012949]:int(32)[95] "dead after last mention" "YVV" "temp"
                              (2012951 'move' yret[2012949] _yieldedIndex[2012938])
                              const-val _yieldedIndex[2012979]:int(32)[95] "temp"
                              (2013106 'move' _yieldedIndex[2012979] _yieldedIndex[2012938])
                              {
                                const-val i[2012981]:int(32)[95] "const" "index var" "insert auto destroy"
                                (2012983 'move' i[2012981] _yieldedIndex[2012979])
                                const-val yret[2012986]:int(32)[95] "dead after last mention" "YVV" "temp"
                                (2012988 'move' yret[2012986] _yieldedIndex[2012979])
                                const-val _yieldedIndex[2012991]:int(32)[95] "temp"
                                (2012993 'move' _yieldedIndex[2012991] _yieldedIndex[2012979])
                                {
                                  const-val i[2012997]:int(32)[95] "const" "index var" "insert auto destroy"
                                  (2012999 'move' i[2012997] _yieldedIndex[2012991])
                                  {
                                    val call_tmp[2013003]:c_ptr(uint(8))[937484] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (2013005 'move' call_tmp[2013003](2013008 call +[956062] newBuff[174014] decodedIdx[174060]))
                                    const-val call_tmp[2013011]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                    const-val coerce_tmp[2013013]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (2013015 'move' coerce_tmp[2013013](2013017 'cast' int(64)[13] nInvalidBytes[174150]))
                                    (2013020 'move' call_tmp[2013011](2013023 call -[440459] thisIdx[174055] coerce_tmp[2013013]))
                                    const-val call_tmp[2013026]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                    const-val coerce_tmp[2013028]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (2013030 'move' coerce_tmp[2013028](2013032 'cast' int(64)[13] i[2012997]))
                                    (2013035 'move' call_tmp[2013026](2013038 call +[439679] call_tmp[2013011] coerce_tmp[2013028]))
                                    ref call_tmp[2013041]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
                                    (2013043 'move' call_tmp[2013041](2013046 call this[954152] buff[173935] call_tmp[2013026]))
                                    const-val call_tmp[2013049]:uint(16)[105] "dead after last mention" "expr temp" "maybe param" "temp"
                                    const-val coerce_tmp[2013051]:uint(16)[105] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (2013053 'move' coerce_tmp[2013051](2013055 'cast' uint(16)[105] 56320))
                                    const-val coerce_tmp[2013058]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (2013060 'move' coerce_tmp[2013058](2013062 'deref' call_tmp[2013041]))
                                    const-val coerce_tmp[2013064]:uint(16)[105] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (2013066 'move' coerce_tmp[2013064](2013068 'cast' uint(16)[105] coerce_tmp[2013058]))
                                    (2013071 'move' call_tmp[2013049](2013074 call +[439723] coerce_tmp[2013051] coerce_tmp[2013064]))
                                    const-val coerce_tmp[2013077]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (2013079 'move' coerce_tmp[2013077](2013081 'cast' c_void_ptr[149] call_tmp[2013003]))
                                    const-val coerce_tmp[2013084]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (2013086 'move' coerce_tmp[2013084](2013088 'cast' int(32)[95] call_tmp[2013049]))
                                    const-val _return_tmp_[2013091]:syserr[223605] "dead after last mention" "temp"
                                    (2013093 'move' _return_tmp_[2013091](2013096 call qio_encode_char_buf[173958] coerce_tmp[2013077] coerce_tmp[2013084]))
                                    (2013100 call +=[451358] decodedIdx[174060] 3)
                                  }
                                  label _continueLabel[2013103]
                                }
                              }
                            }
                            {
                              const-val low[2012906]:int(32)[95] "temp"
                              (2012908 'move' low[2012906](2012910 '.v' _iterator[2012815] F0_low[2063139]))
                              (2012913 '=' i[2012841] low[2012906])
                            }
                            {
                              const-val high[2012917]:int(32)[95] "temp"
                              (2012919 'move' high[2012917](2012921 '.v' _iterator[2012815] F1_high[2063143]))
                              (2012924 '<=' i[2012841] high[2012917])
                            }
                            {
                              val call_tmp[2012928]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              (2012930 '+=' i[2012841] 1)
                            }
                          }
                          label _endchpl_direct_param_stride_range_iter[2012967]
                        }
                        (2012970 call _freeIterator[978056] _iterator[2012815])
                        (2012973 call chpl__autoDestroy[1570437] tmp[2012652])
                        label _endchpl_direct_counted_range_iter_helper[2012975]
                      }
                      (1943671 call _freeIterator[978306] _iterator[1943628])
                      label _endchpl_direct_counted_range_iter[1943673]
                    }
                    label _breakLabel[174292]
                    (1877151 call _freeIterator[978556] _iterator[174287])
                  }
                  const-val call_tmp[682494]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[978882]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (978888 'move' coerce_tmp[978882](978884 'cast' int(32)[95] 1))
                  (682497 'move' call_tmp[682494](174329 call -[440437] nInvalidBytes[174150] coerce_tmp[978882]))
                  const-val coerce_tmp[978891]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (978897 'move' coerce_tmp[978891](978893 'cast' int(64)[13] call_tmp[682494]))
                  (174331 call +=[451358] numCodepoints[174045] coerce_tmp[978891])
                }
              }
            }
          }
          {
            const-val coerce_tmp[978905]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (978911 'move' coerce_tmp[978905](978907 'cast' int(64)[13] nBytes[174072]))
            (174358 call bufferMemcpyLocal[173122] newBuff[174014] buffToDecode[174104] coerce_tmp[978905] decodedIdx[174060] 0)
            const-val coerce_tmp[978923]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (978929 'move' coerce_tmp[978923](978925 'cast' int(64)[13] nBytes[174072]))
            (174363 call +=[451358] thisIdx[174055] coerce_tmp[978923])
            const-val coerce_tmp[978932]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (978938 'move' coerce_tmp[978932](978934 'cast' int(64)[13] nBytes[174072]))
            (174368 call +=[451358] decodedIdx[174060] coerce_tmp[978932])
          }
          (1877155 call chpl__autoDestroy[1566178] tmp[174083])
        }
        label _continueLabel[174378]
        const-val call_tmp[682499]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (682502 'move' call_tmp[682499](174386 call <[437495] thisIdx[174055] length[173941]))
        (174389 'move' tmp[174375] call_tmp[682499])
        tmp[174375]
      }
      label _breakLabel[174379]
    }
    ref call_tmp[682504]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
    (682507 'move' call_tmp[682504](174405 call this[954152] newBuff[174014] decodedIdx[174060]))
    const-val coerce_tmp[978945]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (978951 'move' coerce_tmp[978945](978947 'cast' uint(8)[100] 0))
    (174407 call =[435391] call_tmp[682504] coerce_tmp[978945])
    const-val call_tmp[682509]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1862738]:string[26] "temp"
    (174420 call chpl_createStringWithOwnedBufferNV[30676] newBuff[174014] decodedIdx[174060] allocSize[174016] numCodepoints[174045] ret_tmp[1862738])
    (1862741 'move' call_tmp[682509] ret_tmp[1862738])
    val ret[174421]:string[26] "dead at end of block" "insert auto destroy"
    (544961 'move' ret[174421] call_tmp[682509])
    ref call_tmp[682516]:_ref(bool)[937260] "dead after last mention" "maybe param" "temp"
    (682519 'move' call_tmp[682516](174428 call hasEscapes[758077] ret[174421]))
    (174432 call =[435217] call_tmp[682516] hasEscapes[174040])
    (522819 'move' ret[522809] ret[174421])
    (1877158 call chpl__autoDestroy[1565916] tmp[174026])
    gotoReturn _end_decodeByteBuffer[522807] _end_decodeByteBuffer[522807]
    label _end_decodeByteBuffer[522807]
    (1864862 '=' _retArg[1864860] ret[522809])
    (1864866 return _void[55])
  }
  function decodeHelp[174452](const in arg buff[174449]:c_ptr(uint(8))[937484], const in arg buffLen[174455]:int(64)[13], const in arg offset[174459]:int(64)[13], const in arg allowEsc[174463]:bool[10], ref arg _retArg[1864886]:_ref((syserr,int(32),int(32)))[964788]) : void[4] "fn returns via _retArg" "resolved" "fn synchronization free"
  {
    const-val ret[522837]:(syserr,int(32),int(32))[964681] "dead after last mention" "RVV" "temp"
    val chr[174528]:int(32)[95] "dead at end of block" "insert auto destroy"
    val call_tmp[682526]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (964841 'move' chr[174528] 0)
    val nBytes[174533]:int(32)[95] "dead at end of block" "insert auto destroy"
    (964844 'move' nBytes[174533] 0)
    const-val call_tmp[682531]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (682534 'move' call_tmp[682531](174539 call _cast[964446] offset[174459]))
    const-val start[174541]:int(32)[95] "dead at end of block" "insert auto destroy"
    (544967 'move' start[174541] call_tmp[682531])
    val call_tmp[682536]:c_ptr(uint(8))[937484] "dead at end of block" "expr temp" "maybe param" "temp"
    (682539 'move' call_tmp[682536](174547 call +[964477] buff[174449] start[174541]))
    const-val call_tmp[682541]:c_string[19] "dead at end of block" "maybe param" "temp"
    (682544 'move' call_tmp[682541](174550 call _cast[957867] call_tmp[682536]))
    const-val multibytes[174552]:c_string[19] "dead at end of block" "insert auto destroy"
    (544969 'move' multibytes[174552](964525 call chpl__initCopy[21698] call_tmp[682541]))
    const-val call_tmp[682546]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[964531]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (964537 'move' coerce_tmp[964531](964533 'cast' int(64)[13] start[174541]))
    (682549 'move' call_tmp[682546](174558 call -[440459] buffLen[174455] coerce_tmp[964531]))
    const-val call_tmp[682551]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (682554 'move' call_tmp[682551] call_tmp[682546])
    const-val maxbytes[174563]:int(64)[13] "dead at end of block" "insert auto destroy"
    (544971 'move' maxbytes[174563] call_tmp[682551])
    val decodeRet[174568]:syserr[223605] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[544973]:syserr[223605] "dead after last mention" "maybe param" "temp" "type variable"
    const-val call_tmp[682556]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (682559 'move' call_tmp[682556] allowEsc[174463])
    if call_tmp[682556]
    {
      const-val call_tmp[682561]:syserr[223605] "dead at end of block" "maybe param" "temp"
      (682564 'move' call_tmp[682561](174580 call qio_decode_char_buf_esc[174506] chr[174528] nBytes[174533] multibytes[174552] maxbytes[174563]))
      (544981 'move' decodeRet[174568](964544 call chpl__initCopy[964546] call_tmp[682561]))
    }
    {
      const-val call_tmp[682566]:syserr[223605] "dead at end of block" "maybe param" "temp"
      (682569 'move' call_tmp[682566](174591 call qio_decode_char_buf[174479] chr[174528] nBytes[174533] multibytes[174552] maxbytes[174563]))
      (544984 'move' decodeRet[174568](964567 call chpl__initCopy[964546] call_tmp[682566]))
    }
    const-val call_tmp[682571]:(syserr,int(32),int(32))[964681] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1865684]:(syserr,int(32),int(32))[964681] "temp"
    (174605 call _build_tuple[964631] decodeRet[174568] chr[174528] nBytes[174533] ret_tmp[1865684])
    (1865687 'move' call_tmp[682571] ret_tmp[1865684])
    (522842 'move' ret[522837] call_tmp[682571])
    gotoReturn _end_decodeHelp[522835] _end_decodeHelp[522835]
    label _end_decodeHelp[522835]
    (1864888 '=' _retArg[1864886] ret[522837])
    (1864890 return _void[55])
  }
  function initWithBorrowedBuffer[948935](ref arg x[948937]:_ref(string)[938000], const  ref arg other[948942]:string[26]) : void[4] "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[948948]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[948959]:_ref(bool)[937260] "dead after last mention" "maybe param" "temp"
    (948961 'move' call_tmp[948959](948964 call isOwned[758051] x[948937]))
    (948968 call =[435217] call_tmp[948959] 0)
    val call_tmp[948972]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      ref call_tmp[948995]:_ref(bool)[937260] "dead after last mention" "maybe param" "temp"
      (948997 'move' call_tmp[948995](949000 call hasEscapes[758077] x[948937]))
      ref call_tmp[949003]:_ref(bool)[937260] "dead after last mention" "maybe param" "reference to a const" "temp"
      (949005 'move' call_tmp[949003](949008 call hasEscapes[758077] other[948942]))
      const-val coerce_tmp[949643]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (949647 'move' coerce_tmp[949643](949645 'deref' call_tmp[949003]))
      (949012 call =[435217] call_tmp[948995] coerce_tmp[949643])
    }
    ref call_tmp[949016]:_ref(int(32))[936687] "dead at end of block" "maybe param" "reference to a const" "temp"
    (949018 'move' call_tmp[949016](949021 call locale_id[758103] other[948942]))
    const-val call_tmp[949024]:bool[10] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[949651]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (949655 'move' coerce_tmp[949651](949653 'deref' call_tmp[949016]))
    (949026 'move' call_tmp[949024](949029 call !=[436033] coerce_tmp[949651] chpl_nodeID[208207]))
    const-val otherRemote[949032]:bool[10] "dead at end of block" "const" "insert auto destroy"
    (949034 'move' otherRemote[949032] call_tmp[949024])
    const-val call_tmp[949038]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (949040 'move' call_tmp[949038](949043 call numBytes[32810] other[948942]))
    const-val otherLen[949046]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (949048 'move' otherLen[949046] call_tmp[949038])
    const-val call_tmp[949052]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (949054 'move' call_tmp[949052](949057 call >[437715] otherLen[949046] 0))
    const-val call_tmp[949060]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (949062 'move' call_tmp[949060] call_tmp[949052])
    if call_tmp[949060]
    {
      ref call_tmp[949069]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
      (949071 'move' call_tmp[949069](949074 call buffLen[757947] x[948937]))
      (949078 call =[435370] call_tmp[949069] otherLen[949046])
      const-val call_tmp[949083]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (949085 'move' call_tmp[949083] otherRemote[949032])
      if call_tmp[949083]
      {
        ref call_tmp[949092]:_ref(bool)[937260] "dead after last mention" "maybe param" "temp"
        (949094 'move' call_tmp[949092](949097 call isOwned[758051] x[948937]))
        (949101 call =[435217] call_tmp[949092] 1)
        ref call_tmp[949105]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "temp"
        (949107 'move' call_tmp[949105](949110 call buff[758025] x[948937]))
        ref call_tmp[949113]:_ref(int(32))[936687] "dead after last mention" "maybe param" "reference to a const" "temp"
        (949115 'move' call_tmp[949113](949118 call locale_id[758103] other[948942]))
        ref call_tmp[949121]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "reference to a const" "temp"
        (949123 'move' call_tmp[949121](949126 call buff[758025] other[948942]))
        val call_tmp[949129]:c_ptr(uint(8))[937484] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[949706]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (949710 'move' coerce_tmp[949706](949708 'deref' call_tmp[949113]))
        const-val coerce_tmp[949712]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (949718 'move' coerce_tmp[949712](949714 'cast' int(64)[13] coerce_tmp[949706]))
        val coerce_tmp[949720]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (949724 'move' coerce_tmp[949720](949722 'deref' call_tmp[949121]))
        (949131 'move' call_tmp[949129](949134 call bufferCopyRemote[172830] coerce_tmp[949712] coerce_tmp[949720] otherLen[949046]))
        (949139 call =[954274] call_tmp[949105] call_tmp[949129])
        ref call_tmp[949144]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
        (949146 'move' call_tmp[949144](949149 call buffLen[757947] x[948937]))
        const-val call_tmp[949152]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (949154 'move' call_tmp[949152](949157 call +[949727] otherLen[949046]))
        (949161 call =[435370] call_tmp[949144] call_tmp[949152])
        val call_tmp[949166]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          ref call_tmp[949189]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
          (949191 'move' call_tmp[949189](949194 call cachedNumCodepoints[757999] x[948937]))
          ref call_tmp[949197]:_ref(int(64))[936633] "dead after last mention" "maybe param" "reference to a const" "temp"
          (949199 'move' call_tmp[949197](949202 call cachedNumCodepoints[757999] other[948942]))
          const-val coerce_tmp[954309]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (954313 'move' coerce_tmp[954309](954311 'deref' call_tmp[949197]))
          (949206 call =[435370] call_tmp[949189] coerce_tmp[954309])
        }
      }
      {
        ref call_tmp[949211]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "temp"
        (949213 'move' call_tmp[949211](949216 call buff[758025] x[948937]))
        ref call_tmp[949219]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "reference to a const" "temp"
        (949221 'move' call_tmp[949219](949224 call buff[758025] other[948942]))
        val coerce_tmp[954318]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (954322 'move' coerce_tmp[954318](954320 'deref' call_tmp[949219]))
        (949228 call =[954274] call_tmp[949211] coerce_tmp[954318])
        ref call_tmp[949232]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
        (949234 'move' call_tmp[949232](949237 call buffSize[757973] x[948937]))
        ref call_tmp[949240]:_ref(int(64))[936633] "dead after last mention" "maybe param" "reference to a const" "temp"
        (949242 'move' call_tmp[949240](949245 call buffSize[757973] other[948942]))
        const-val coerce_tmp[954327]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (954331 'move' coerce_tmp[954327](954329 'deref' call_tmp[949240]))
        (949249 call =[435370] call_tmp[949232] coerce_tmp[954327])
        val call_tmp[949253]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          ref call_tmp[949276]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
          (949278 'move' call_tmp[949276](949281 call cachedNumCodepoints[757999] x[948937]))
          ref call_tmp[949284]:_ref(int(64))[936633] "dead after last mention" "maybe param" "reference to a const" "temp"
          (949286 'move' call_tmp[949284](949289 call cachedNumCodepoints[757999] other[948942]))
          const-val coerce_tmp[954339]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (954343 'move' coerce_tmp[954339](954341 'deref' call_tmp[949284]))
          (949293 call =[435370] call_tmp[949276] coerce_tmp[954339])
        }
      }
    }
    (949299 return _void[55])
  }
  function initWithBorrowedBuffer[1789399](ref arg x[1789401]:_ref(string)[938000], const in arg other[1789405]:c_ptr(uint(8))[937484], const in arg length[1789407]:int(64)[13], const in arg size[1789409]:int(64)[13]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val call_tmp[1789415]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[1789426]:_ref(bool)[937260] "dead after last mention" "maybe param" "temp"
    (1789428 'move' call_tmp[1789426](1789431 call isOwned[758051] x[1789401]))
    (1789435 call =[435217] call_tmp[1789426] 0)
    ref call_tmp[1789439]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "temp"
    (1789441 'move' call_tmp[1789439](1789444 call buff[758025] x[1789401]))
    (1789448 call =[954274] call_tmp[1789439] other[1789405])
    ref call_tmp[1789452]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
    (1789454 'move' call_tmp[1789452](1789457 call buffSize[757973] x[1789401]))
    (1789461 call =[435370] call_tmp[1789452] size[1789409])
    ref call_tmp[1789465]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
    (1789467 'move' call_tmp[1789465](1789470 call buffLen[757947] x[1789401]))
    (1789474 call =[435370] call_tmp[1789465] length[1789407])
    (1789477 return _void[55])
  }
  function initWithBorrowedBuffer[1789512](ref arg x[1789514]:_ref(bytes)[938048], const in arg other[1789518]:c_ptr(uint(8))[937484], const in arg length[1789520]:int(64)[13], const in arg size[1789522]:int(64)[13]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val call_tmp[1789528]:bytes[24] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[1789539]:_ref(bool)[937260] "dead after last mention" "maybe param" "temp"
    (1789541 'move' call_tmp[1789539](1789544 call isOwned[752946] x[1789514]))
    (1789548 call =[435217] call_tmp[1789539] 0)
    ref call_tmp[1789552]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "temp"
    (1789554 'move' call_tmp[1789552](1789557 call buff[752920] x[1789514]))
    (1789561 call =[954274] call_tmp[1789552] other[1789518])
    ref call_tmp[1789565]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
    (1789567 'move' call_tmp[1789565](1789570 call buffSize[752894] x[1789514]))
    (1789574 call =[435370] call_tmp[1789565] size[1789522])
    ref call_tmp[1789578]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
    (1789580 'move' call_tmp[1789578](1789583 call buffLen[752868] x[1789514]))
    (1789587 call =[435370] call_tmp[1789578] length[1789520])
    (1789590 return _void[55])
  }
  function initWithOwnedBuffer[978956](ref arg x[978958]:_ref(string)[938000], const in arg other[978962]:c_ptr(uint(8))[937484], const in arg length[978964]:int(64)[13], const in arg size[978966]:int(64)[13]) : void[4] "inline" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[978972]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[978983]:_ref(bool)[937260] "dead after last mention" "maybe param" "temp"
    (978985 'move' call_tmp[978983](978988 call isOwned[758051] x[978958]))
    (978992 call =[435217] call_tmp[978983] 1)
    ref call_tmp[978996]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "temp"
    (978998 'move' call_tmp[978996](979001 call buff[758025] x[978958]))
    (979005 call =[954274] call_tmp[978996] other[978962])
    ref call_tmp[979009]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
    (979011 'move' call_tmp[979009](979014 call buffSize[757973] x[978958]))
    (979018 call =[435370] call_tmp[979009] size[978966])
    ref call_tmp[979022]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
    (979024 'move' call_tmp[979022](979027 call buffLen[757947] x[978958]))
    (979031 call =[435370] call_tmp[979022] length[978964])
    (979034 return _void[55])
  }
  function initWithNewBuffer[954390](ref arg x[954392]:_ref(string)[938000], const  ref arg other[954397]:string[26]) : void[4] "inline" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[954403]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[954414]:_ref(int(32))[936687] "dead at end of block" "maybe param" "reference to a const" "temp"
    (954416 'move' call_tmp[954414](954419 call locale_id[758103] other[954397]))
    const-val call_tmp[954422]:bool[10] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[954883]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (954887 'move' coerce_tmp[954883](954885 'deref' call_tmp[954414]))
    (954424 'move' call_tmp[954422](954427 call !=[436033] coerce_tmp[954883] chpl_nodeID[208207]))
    const-val otherRemote[954430]:bool[10] "dead at end of block" "const" "insert auto destroy"
    (954432 'move' otherRemote[954430] call_tmp[954422])
    const-val call_tmp[954436]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (954438 'move' call_tmp[954436](954441 call numBytes[32810] other[954397]))
    const-val otherLen[954444]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (954446 'move' otherLen[954444] call_tmp[954436])
    ref call_tmp[954450]:_ref(bool)[937260] "dead after last mention" "maybe param" "temp"
    (954452 'move' call_tmp[954450](954455 call isOwned[758051] x[954392]))
    (954459 call =[435217] call_tmp[954450] 1)
    val call_tmp[954463]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      ref call_tmp[954486]:_ref(bool)[937260] "dead after last mention" "maybe param" "temp"
      (954488 'move' call_tmp[954486](954491 call hasEscapes[758077] x[954392]))
      ref call_tmp[954494]:_ref(bool)[937260] "dead after last mention" "maybe param" "reference to a const" "temp"
      (954496 'move' call_tmp[954494](954499 call hasEscapes[758077] other[954397]))
      const-val coerce_tmp[954898]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (954902 'move' coerce_tmp[954898](954900 'deref' call_tmp[954494]))
      (954503 call =[435217] call_tmp[954486] coerce_tmp[954898])
    }
    val call_tmp[954507]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      ref call_tmp[954530]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
      (954532 'move' call_tmp[954530](954535 call cachedNumCodepoints[757999] x[954392]))
      ref call_tmp[954538]:_ref(int(64))[936633] "dead after last mention" "maybe param" "reference to a const" "temp"
      (954540 'move' call_tmp[954538](954543 call cachedNumCodepoints[757999] other[954397]))
      const-val coerce_tmp[954910]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (954914 'move' coerce_tmp[954910](954912 'deref' call_tmp[954538]))
      (954547 call =[435370] call_tmp[954530] coerce_tmp[954910])
    }
    const-val call_tmp[954551]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (954553 'move' call_tmp[954551](954556 call >[437715] otherLen[954444] 0))
    const-val call_tmp[954559]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (954561 'move' call_tmp[954559] call_tmp[954551])
    if call_tmp[954559]
    {
      ref call_tmp[954568]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
      (954570 'move' call_tmp[954568](954573 call buffLen[757947] x[954392]))
      (954577 call =[435370] call_tmp[954568] otherLen[954444])
      const-val tmp[954602]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val tmp[954620]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (954622 'move' tmp[954620] otherRemote[954430])
      (954627 'move' tmp[954602] tmp[954620])
      const-val call_tmp[954639]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (954641 'move' call_tmp[954639] tmp[954602])
      if call_tmp[954639]
      {
        ref call_tmp[954648]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "temp"
        (954650 'move' call_tmp[954648](954653 call buff[758025] x[954392]))
        ref call_tmp[954656]:_ref(int(32))[936687] "dead after last mention" "maybe param" "reference to a const" "temp"
        (954658 'move' call_tmp[954656](954661 call locale_id[758103] other[954397]))
        ref call_tmp[954664]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "reference to a const" "temp"
        (954666 'move' call_tmp[954664](954669 call buff[758025] other[954397]))
        val call_tmp[954672]:c_ptr(uint(8))[937484] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[955045]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (955049 'move' coerce_tmp[955045](955047 'deref' call_tmp[954656]))
        const-val coerce_tmp[955051]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (955057 'move' coerce_tmp[955051](955053 'cast' int(64)[13] coerce_tmp[955045]))
        val coerce_tmp[955059]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (955063 'move' coerce_tmp[955059](955061 'deref' call_tmp[954664]))
        (954674 'move' call_tmp[954672](954677 call bufferCopyRemote[172830] coerce_tmp[955051] coerce_tmp[955059] otherLen[954444]))
        (954682 call =[954274] call_tmp[954648] call_tmp[954672])
        ref call_tmp[954687]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
        (954689 'move' call_tmp[954687](954692 call buffSize[757973] x[954392]))
        const-val call_tmp[954695]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (954697 'move' call_tmp[954695](954700 call +[949727] otherLen[954444]))
        (954704 call =[435370] call_tmp[954687] call_tmp[954695])
      }
      {
        ref call_tmp[954710]:_ref(c_ptr(uint(8)))[937493] "dead at end of block" "maybe param" "reference to a const" "temp"
        (954712 'move' call_tmp[954710](954715 call buff[758025] other[954397]))
        const-val call_tmp[954718]:(c_ptr(uint(8)),int(64))[955269] "dead at end of block" "maybe param" "temp"
        val coerce_tmp[955071]:c_ptr(uint(8))[937484] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (955075 'move' coerce_tmp[955071](955073 'deref' call_tmp[954710]))
        const-val ret_tmp[1864782]:(c_ptr(uint(8)),int(64))[955269] "temp"
        (954723 call bufferCopyLocal[172893] coerce_tmp[955071] otherLen[954444] ret_tmp[1864782])
        (1864785 'move' call_tmp[954718] ret_tmp[1864782])
        const-val tmp[954726]:(c_ptr(uint(8)),int(64))[955269] "dead at end of block" "const" "insert auto destroy" "temp"
        (954728 'move' tmp[954726] call_tmp[954718])
        1
        ref call_tmp[954736]:_ref(c_ptr(uint(8)))[937493] "dead at end of block" "maybe param" "reference to a const" "temp"
        (954738 'move' call_tmp[954736](957273 '.' tmp[954726] x0[955265]))
        const buff[954743]:c_ptr(uint(8))[937484] "dead at end of block" "const" "insert auto destroy"
        val coerce_tmp[957278]:c_ptr(uint(8))[937484] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (957282 'move' coerce_tmp[957278](957280 'deref' call_tmp[954736]))
        (954745 'move' buff[954743](957276 call chpl__initCopy[954091] coerce_tmp[957278]))
        ref call_tmp[954748]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
        (954750 'move' call_tmp[954748](957287 '.' tmp[954726] x1[955267]))
        const-val allocSize[954755]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[957292]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (957296 'move' coerce_tmp[957292](957294 'deref' call_tmp[954748]))
        (954757 'move' allocSize[954755](957290 call chpl__initCopy[955393] coerce_tmp[957292]))
        ref call_tmp[954761]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "temp"
        (954763 'move' call_tmp[954761](954766 call buff[758025] x[954392]))
        (954770 call =[954274] call_tmp[954761] buff[954743])
        ref call_tmp[954775]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
        (954777 'move' call_tmp[954775](954780 call buffLen[757947] x[954392]))
        ref call_tmp[954783]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
        ref _this_tmp_[957303]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "temp"
        (957305 'move' _this_tmp_[957303](954788 call buff[758025] x[954392]))
        val coerce_tmp[957310]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (957314 'move' coerce_tmp[957310](957312 'deref' _this_tmp_[957303]))
        const-val coerce_tmp[957316]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (957320 'move' coerce_tmp[957316](957318 'deref' call_tmp[954775]))
        (954785 'move' call_tmp[954783](954791 call this[954152] coerce_tmp[957310] coerce_tmp[957316]))
        const-val coerce_tmp[957323]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (957329 'move' coerce_tmp[957323](957325 'cast' uint(8)[100] 0))
        (954794 call =[435391] call_tmp[954783] coerce_tmp[957323])
        ref call_tmp[954798]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
        (954800 'move' call_tmp[954798](954803 call buffSize[757973] x[954392]))
        (954807 call =[435370] call_tmp[954798] allocSize[954755])
        (1877409 call chpl__autoDestroy[1565916] tmp[954726])
      }
    }
    (954814 return _void[55])
  }
  function initWithNewBuffer[1826661](ref arg x[1826663]:_ref(string)[938000], const in arg other[1826667]:c_ptr(uint(8))[937484], const in arg length[1826669]:int(64)[13], const in arg size[1826671]:int(64)[13]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val call_tmp[1826677]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val otherLen[1826688]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1826690 'move' otherLen[1826688] length[1826669])
    ref call_tmp[1826694]:_ref(bool)[937260] "dead after last mention" "maybe param" "temp"
    (1826696 'move' call_tmp[1826694](1826699 call isOwned[758051] x[1826663]))
    (1826703 call =[435217] call_tmp[1826694] 1)
    const-val call_tmp[1826707]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1826709 'move' call_tmp[1826707](1826712 call >[437715] otherLen[1826688] 0))
    const-val call_tmp[1826715]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1826717 'move' call_tmp[1826715] call_tmp[1826707])
    if call_tmp[1826715]
    {
      val call_tmp[1826724]:c_ptr(uint(8))[937484] "dead at end of block" "expr temp" "maybe param" "temp"
      (1826726 'move' call_tmp[1826724] other[1826667])
      const-val call_tmp[1826732]:(c_ptr(uint(8)),int(64))[955269] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1864794]:(c_ptr(uint(8)),int(64))[955269] "temp"
      (1826737 call bufferCopyLocal[172893] call_tmp[1826724] otherLen[1826688] ret_tmp[1864794])
      (1864797 'move' call_tmp[1826732] ret_tmp[1864794])
      const-val tmp[1826740]:(c_ptr(uint(8)),int(64))[955269] "dead at end of block" "const" "insert auto destroy" "temp"
      (1826742 'move' tmp[1826740] call_tmp[1826732])
      1
      ref call_tmp[1826750]:_ref(c_ptr(uint(8)))[937493] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1826752 'move' call_tmp[1826750](1826858 '.' tmp[1826740] x0[955265]))
      const buff[1826757]:c_ptr(uint(8))[937484] "dead at end of block" "const" "insert auto destroy"
      val coerce_tmp[1826863]:c_ptr(uint(8))[937484] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1826867 'move' coerce_tmp[1826863](1826865 'deref' call_tmp[1826750]))
      (1826759 'move' buff[1826757](1826861 call chpl__initCopy[954091] coerce_tmp[1826863]))
      ref call_tmp[1826762]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1826764 'move' call_tmp[1826762](1826872 '.' tmp[1826740] x1[955267]))
      const-val allocSize[1826769]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1826877]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1826881 'move' coerce_tmp[1826877](1826879 'deref' call_tmp[1826762]))
      (1826771 'move' allocSize[1826769](1826875 call chpl__initCopy[955393] coerce_tmp[1826877]))
      ref call_tmp[1826775]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "temp"
      (1826777 'move' call_tmp[1826775](1826780 call buff[758025] x[1826663]))
      (1826784 call =[954274] call_tmp[1826775] buff[1826757])
      ref call_tmp[1826789]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
      (1826791 'move' call_tmp[1826789](1826794 call buffLen[757947] x[1826663]))
      (1826798 call =[435370] call_tmp[1826789] otherLen[1826688])
      ref call_tmp[1826803]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
      (1826805 'move' call_tmp[1826803](1826808 call buffLen[757947] x[1826663]))
      ref call_tmp[1826811]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
      ref _this_tmp_[1826890]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "temp"
      (1826892 'move' _this_tmp_[1826890](1826816 call buff[758025] x[1826663]))
      val coerce_tmp[1826897]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1826901 'move' coerce_tmp[1826897](1826899 'deref' _this_tmp_[1826890]))
      const-val coerce_tmp[1826903]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1826907 'move' coerce_tmp[1826903](1826905 'deref' call_tmp[1826803]))
      (1826813 'move' call_tmp[1826811](1826819 call this[954152] coerce_tmp[1826897] coerce_tmp[1826903]))
      const-val coerce_tmp[1826910]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1826916 'move' coerce_tmp[1826910](1826912 'cast' uint(8)[100] 0))
      (1826822 call =[435391] call_tmp[1826811] coerce_tmp[1826910])
      ref call_tmp[1826826]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
      (1826828 'move' call_tmp[1826826](1826831 call buffSize[757973] x[1826663]))
      (1826835 call =[435370] call_tmp[1826826] allocSize[1826769])
      (1887063 call chpl__autoDestroy[1565916] tmp[1826740])
    }
    (1826841 return _void[55])
  }
  function getView[1031215](const  ref arg x[1031217]:_ref(string)[938000], const in arg r[1031219]:range(byteIndex,bounded,false)[1025853], ref arg _retArg[1866324]:_ref((range(int(64),bounded,false),int(64)))[1086547]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val ret[1031221]:(range(int(64),bounded,false),int(64))[1084985] "dead after last mention" "RVV" "temp"
    val call_tmp[1031231]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1031244]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1031587]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1031638]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      const-val call_tmp[1031674]:(range(int(64),bounded,false),int(64))[1084985] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1866330]:(range(int(64),bounded,false),int(64))[1084985] "temp"
      (1031679 call simpleCaseHelper[1031335] r[1031219] x[1031217] ret_tmp[1866330])
      (1866333 'move' call_tmp[1031674] ret_tmp[1866330])
      (1031680 'move' ret[1031221] call_tmp[1031674])
      gotoReturn _end_getView[1032446] _end_getView[1032446]
    }
    label _end_getView[1032446]
    (1866326 '=' _retArg[1866324] ret[1031221])
    (1866328 return _void[55])
  }
  function getView[1112208](const  ref arg x[1112210]:_ref(string)[938000], const in arg r[1112212]:range(int(64),bounded,false)[1026875], ref arg _retArg[1867608]:_ref((range(int(64),bounded,false),int(64)))[1086547]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1112214]:(range(int(64),bounded,false),int(64))[1084985] "dead after last mention" "RVV" "temp"
    val call_tmp[1112224]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1112237]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1112580]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1112631]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1112682]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val tmp[1112707]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val tmp[1112725]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1112727]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1112729 'move' call_tmp[1112727](1112735 call isASCII[31049] x[1112210]))
      (1112736 'move' tmp[1112725] call_tmp[1112727])
      (1112741 'move' tmp[1112707] tmp[1112725])
      const-val call_tmp[1112753]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1112755 'move' call_tmp[1112753] tmp[1112707])
      if call_tmp[1112753]
      {
        const-val call_tmp[1112762]:(range(int(64),bounded,false),int(64))[1084985] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1867614]:(range(int(64),bounded,false),int(64))[1084985] "temp"
        (1112767 call simpleCaseHelper[1112328] r[1112212] x[1112210] ret_tmp[1867614])
        (1867617 'move' call_tmp[1112762] ret_tmp[1867614])
        (1112768 'move' ret[1112214] call_tmp[1112762])
        gotoReturn _end_getView[1113439] _end_getView[1113439]
      }
      {
        const-val call_tmp[1112796]:range(int(64),bounded,false)[1026875] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1862956]:range(int(64),bounded,false)[1026875] "temp"
        (1112801 call indices[32788] x[1112210] ret_tmp[1862956])
        (1862959 'move' call_tmp[1112796] ret_tmp[1862956])
        const-val call_tmp[1112804]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1112806 'move' call_tmp[1112804](1112809 call ==[1041973] r[1112212] call_tmp[1112796]))
        const-val call_tmp[1112812]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1112814 'move' call_tmp[1112812] call_tmp[1112804])
        if call_tmp[1112812]
        {
          const-val call_tmp[1112821]:range(int(64),bounded,false)[1026875] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1862852]:range(int(64),bounded,false)[1026875] "temp"
          (1112826 call byteIndices[31068] x[1112210] ret_tmp[1862852])
          (1862855 'move' call_tmp[1112821] ret_tmp[1862852])
          ref call_tmp[1112829]:_ref(int(64))[936633] "dead after last mention" "maybe param" "reference to a const" "temp"
          (1112831 'move' call_tmp[1112829](1112834 call cachedNumCodepoints[757999] x[1112210]))
          const-val call_tmp[1112837]:(range(int(64),bounded,false),int(64))[1084985] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val coerce_tmp[1120987]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1120991 'move' coerce_tmp[1120987](1120989 'deref' call_tmp[1112829]))
          const-val ret_tmp[1867102]:(range(int(64),bounded,false),int(64))[1084985] "temp"
          (1112842 call _build_tuple[1084943] call_tmp[1112821] coerce_tmp[1120987] ret_tmp[1867102])
          (1867105 'move' call_tmp[1112837] ret_tmp[1867102])
          (1112845 'move' ret[1112214] call_tmp[1112837])
          (1879232 call chpl__autoDestroy[1383553] call_tmp[1112821])
          (1879235 call chpl__autoDestroy[1383553] call_tmp[1112796])
          gotoReturn _end_getView[1113439] _end_getView[1113439]
        }
        (1879238 call chpl__autoDestroy[1383553] call_tmp[1112796])
        val call_tmp[1112868]:range(int(64),bounded,false)[1026875] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1112877]:range(int(64),bounded,false)[1026875] "dead at end of block" "maybe param" "temp"
        const-val _formal_tmp_in_x[1121005]:range(int(64),bounded,false)[1026875] "dead at end of block" "expr temp" "no auto destroy" "temp"
        (1121009 'move' _formal_tmp_in_x[1121005](1121006 call chpl__initCopy[1085067] r[1112212]))
        const-val ret_tmp[1867632]:range(int(64),bounded,false)[1026875] "temp"
        (1121002 call _removed_cast[1113484] _formal_tmp_in_x[1121005] ret_tmp[1867632])
        (1867635 'move' call_tmp[1112877] ret_tmp[1867632])
        const-val intR[1112885]:range(int(64),bounded,false)[1026875] "dead at end of block" "const" "insert auto destroy"
        (1112887 'move' intR[1112885] call_tmp[1112877])
        {
          const-val call_tmp[1112900]:range(int(64),bounded,false)[1026875] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1862962]:range(int(64),bounded,false)[1026875] "temp"
          (1112905 call indices[32788] x[1112210] ret_tmp[1862962])
          (1862965 'move' call_tmp[1112900] ret_tmp[1862962])
          const-val call_tmp[1112908]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1112910 'move' call_tmp[1112908](1112916 call boundsCheck[1033435] call_tmp[1112900] intR[1112885]))
          const-val call_tmp[1112918]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1112920 'move' call_tmp[1112918](1112923 call ![7494] call_tmp[1112908]))
          const-val call_tmp[1112925]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1112927 'move' call_tmp[1112925] call_tmp[1112918])
          if call_tmp[1112925]
          {
            const-val call_tmp[1112934]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (1112936 'move' call_tmp[1112934](1112939 call size[32772] x[1112210]))
            (1112943 call halt[1113521] "range " r[1112212] " out of bounds for string with length " call_tmp[1112934])
          }
          (1879242 call chpl__autoDestroy[1383553] call_tmp[1112900])
        }
        val cpCount[1112950]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1112952 'move' cpCount[1112950] 0)
        const-val cpIdxLow[1112978]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val tmp[1112980]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[1112998]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1113000]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1113002 'move' call_tmp[1113000](1113005 call alignedLow[1104922] intR[1112885]))
        const-val call_tmp[1113008]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1113010 'move' call_tmp[1113008] call_tmp[1113000])
        const-val call_tmp[1113016]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1113018 'move' call_tmp[1113016](1113021 call >=[980037] call_tmp[1113008]))
        (1113024 'move' tmp[1112998] call_tmp[1113016])
        (1113029 'move' tmp[1112980] tmp[1112998])
        val tmp[1113041]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
        const-val tmp[1113043]:bool[10] "dead after last mention" "maybe param" "temp"
        (1113045 'move' tmp[1113043] tmp[1112980])
        if tmp[1113043]
        {
          const-val tmp[1113052]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
          const-val call_tmp[1113054]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
          (1113056 'move' call_tmp[1113054](1113059 call alignedLow[1104922] intR[1112885]))
          (1113062 'move' tmp[1113052] call_tmp[1113054])
          (1113068 'move' tmp[1113041] tmp[1113052])
        }
        {
          (1113074 'move' tmp[1113041] 0)
        }
        (1113080 'move' cpIdxLow[1112978] tmp[1113041])
        const-val cpIdxHigh[1113084]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val tmp[1113086]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[1113106]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1113108]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1113110 'move' call_tmp[1113108](1113113 call alignedHigh[1104986] intR[1112885]))
        (1113116 'move' tmp[1113106] call_tmp[1113108])
        (1113122 'move' tmp[1113086] tmp[1113106])
        (1113150 'move' cpIdxHigh[1113084] tmp[1113086])
        ref call_tmp[1113154]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1113156 'move' call_tmp[1113154](1113159 call buffLen[757947] x[1112210]))
        val byteLow[1113162]:int(64)[13] "dead at end of block" "insert auto destroy"
        const-val coerce_tmp[1121043]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (1121047 'move' coerce_tmp[1121043](1121045 'deref' call_tmp[1113154]))
        (1879229 '=' byteLow[1113162] coerce_tmp[1121043])
        (1113164 'noop')
        ref call_tmp[1113168]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1113170 'move' call_tmp[1113168](1113173 call buffLen[757947] x[1112210]))
        const-val call_tmp[1113176]:int(64)[13] "dead at end of block" "maybe param" "temp"
        const-val coerce_tmp[1121051]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1121055 'move' coerce_tmp[1121051](1121053 'deref' call_tmp[1113168]))
        (1113178 'move' call_tmp[1113176](1113181 call -[962287] coerce_tmp[1121051]))
        val byteHigh[1113184]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1113186 'move' byteHigh[1113184] call_tmp[1113176])
        const-val call_tmp[1113194]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1113196 'move' call_tmp[1113194](1113199 call >=[980037] cpIdxHigh[1113084]))
        const-val call_tmp[1113202]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1113204 'move' call_tmp[1113202] call_tmp[1113194])
        if call_tmp[1113202]
        {
          {
            val _indexOfInterest[1113212]:(byteIndex,int(64))[1121294] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1113214]:_ic__indexLen__ref_string[1121366] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[1113216]:_ir__indexLen__ref_string[1121372] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val default_arg_start[1121090]:byteIndex[28173] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
            const-val ret_tmp[1867690]:byteIndex[28173] "temp"
            (1121092 call _indexLen_default_start[1121064] x[1112210] ret_tmp[1867690])
            (1867693 'move' default_arg_start[1121090] ret_tmp[1867690])
            const-val ret_tmp[1862928]:_ir__indexLen__ref_string[1121372] "temp"
            (1113224 call _indexLen[31454] x[1112210] default_arg_start[1121090] ret_tmp[1862928])
            (1862931 'move' call_tmp[1113216] ret_tmp[1862928])
            (1113225 'move' _iterator[1113214](1113228 call _getIterator[1121381] call_tmp[1113216]))
            {
              val ret[1949782]:_ir__indexLen__ref_string[1121372] "dead after last mention" "RVV" "temp"
              const-val call_tmp[1949784]:string[26] "dead at end of block" "maybe param" "temp"
              const-val ret_tmp[1949786]:string[26] "temp"
              ref this[1950444]:_ref(string)[938000] "temp"
              (1950449 'move' this[1950444](1950446 '.v' _iterator[1113214] F0_this[2045679]))
              (1949789 call localize[32889] this[1950444] ret_tmp[1949786])
              (1949792 'move' call_tmp[1949784] ret_tmp[1949786])
              val localThis[1949795]:string[26] "dead at end of block" "insert auto destroy"
              (1949797 'move' localThis[1949795] call_tmp[1949784])
              const-val call_tmp[1949800]:int(64)[13] "dead at end of block" "maybe param" "temp"
              ref start[1950451]:_ref(byteIndex)[948820] "temp"
              (1950456 'move' start[1950451](1950453 '.v' _iterator[1113214] F1_start[2045683]))
              (1949802 'move' call_tmp[1949800](1949805 call _cast[39465] start[1950451]))
              val i[1949807]:int(64)[13] "dead at end of block" "insert auto destroy"
              (1949809 'move' i[1949807] call_tmp[1949800])
              const-val call_tmp[1949812]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1949814 'move' call_tmp[1949812](1949817 call >[437715] call_tmp[1949800] 0))
              const-val call_tmp[1949820]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1949822 'move' call_tmp[1949820] call_tmp[1949812])
              if call_tmp[1949812]
              {
                val tmp[1949827]:bool[10] "dead after last mention" "temp"
                const-val tmp[1949829]:bool[10] "dead after last mention" "maybe param" "temp"
                ref call_tmp[1949831]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                (1949833 'move' call_tmp[1949831](1949836 call buffLen[757947] localThis[1949795]))
                const-val coerce_tmp[1949838]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1949840 'move' coerce_tmp[1949838](1949842 'deref' call_tmp[1949831]))
                (1949844 'move' tmp[1949829](1949847 call <[437495] i[1949807] coerce_tmp[1949838]))
                val tmp[1949850]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[1949852]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1949854]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1949856 'move' call_tmp[1949854] tmp[1949829])
                (1949859 'move' tmp[1949852] tmp[1949829])
                if tmp[1949829]
                {
                  const-val tmp[1949864]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  ref call_tmp[1949866]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[1949868]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "temp"
                  (1949870 'move' _this_tmp_[1949868](1949873 call buff[758025] localThis[1949795]))
                  val coerce_tmp[1949875]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1949877 'move' coerce_tmp[1949875](1949879 'deref' _this_tmp_[1949868]))
                  (1949881 'move' call_tmp[1949866](1949884 call this[954152] coerce_tmp[1949875] i[1949807]))
                  const-val call_tmp[1949887]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1949889]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1949891 'move' coerce_tmp[1949889](1949893 'deref' call_tmp[1949866]))
                  (1949895 'move' call_tmp[1949887](1949898 call isInitialByte[181574] coerce_tmp[1949889]))
                  const-val call_tmp[1949900]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1949902 'move' call_tmp[1949900](1949905 call ![7494] call_tmp[1949887]))
                  (1949907 'move' tmp[1949864] call_tmp[1949900])
                  (1949910 'move' tmp[1949850] call_tmp[1949900])
                }
                {
                  (1949914 'move' tmp[1949850] 0)
                }
                (1949918 'move' tmp[1949827] tmp[1949850])
                WhileDo[1949921]
                {
                  (1949924 call +=[451358] i[1949807] 1)
                  const-val tmp[1949927]:bool[10] "dead after last mention" "maybe param" "temp"
                  ref call_tmp[1949929]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                  (1949931 'move' call_tmp[1949929](1949934 call buffLen[757947] localThis[1949795]))
                  const-val coerce_tmp[1949936]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1949938 'move' coerce_tmp[1949936](1949940 'deref' call_tmp[1949929]))
                  (1949942 'move' tmp[1949927](1949945 call <[437495] i[1949807] coerce_tmp[1949936]))
                  val tmp[1949948]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                  const-val tmp[1949950]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[1949952]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1949954 'move' call_tmp[1949952] tmp[1949927])
                  (1949957 'move' tmp[1949950] tmp[1949927])
                  if tmp[1949927]
                  {
                    const-val tmp[1949962]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    ref call_tmp[1949964]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
                    ref _this_tmp_[1949966]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "temp"
                    (1949968 'move' _this_tmp_[1949966](1949971 call buff[758025] localThis[1949795]))
                    val coerce_tmp[1949973]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1949975 'move' coerce_tmp[1949973](1949977 'deref' _this_tmp_[1949966]))
                    (1949979 'move' call_tmp[1949964](1949982 call this[954152] coerce_tmp[1949973] i[1949807]))
                    const-val call_tmp[1949985]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1949987]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1949989 'move' coerce_tmp[1949987](1949991 'deref' call_tmp[1949964]))
                    (1949993 'move' call_tmp[1949985](1949996 call isInitialByte[181574] coerce_tmp[1949987]))
                    const-val call_tmp[1949998]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1950000 'move' call_tmp[1949998](1950003 call ![7494] call_tmp[1949985]))
                    (1950005 'move' tmp[1949962] call_tmp[1949998])
                    (1950008 'move' tmp[1949948] call_tmp[1949998])
                  }
                  {
                    (1950012 'move' tmp[1949948] 0)
                  }
                  (1950016 'move' tmp[1949827] tmp[1949948])
                  tmp[1949827]
                }
              }
              val tmp[1950020]:bool[10] "dead after last mention" "temp"
              ref call_tmp[1950022]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
              (1950024 'move' call_tmp[1950022](1950027 call buffLen[757947] localThis[1949795]))
              const-val call_tmp[1950029]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1950031]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1950033 'move' coerce_tmp[1950031](1950035 'deref' call_tmp[1950022]))
              (1950037 'move' call_tmp[1950029](1950040 call <[437495] i[1949807] coerce_tmp[1950031]))
              (1950043 'move' tmp[1950020] call_tmp[1950029])
              WhileDo[1950046]
              {
                const-val call_tmp[1950048]:int(64)[13] "dead at end of block" "maybe param" "temp"
                (1950050 'move' call_tmp[1950048](1950053 call +[949727] i[1949807]))
                val j[1950055]:int(64)[13] "dead at end of block" "insert auto destroy"
                (1950057 'move' j[1950055] call_tmp[1950048])
                val tmp[1950060]:bool[10] "dead after last mention" "temp"
                const-val tmp[1950062]:bool[10] "dead after last mention" "maybe param" "temp"
                ref call_tmp[1950064]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                (1950066 'move' call_tmp[1950064](1950069 call buffLen[757947] localThis[1949795]))
                const-val coerce_tmp[1950071]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1950073 'move' coerce_tmp[1950071](1950075 'deref' call_tmp[1950064]))
                (1950077 'move' tmp[1950062](1950080 call <[437495] call_tmp[1950048] coerce_tmp[1950071]))
                val tmp[1950083]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[1950085]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1950087]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1950089 'move' call_tmp[1950087] tmp[1950062])
                (1950092 'move' tmp[1950085] tmp[1950062])
                if tmp[1950062]
                {
                  const-val tmp[1950097]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  ref call_tmp[1950099]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[1950101]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "temp"
                  (1950103 'move' _this_tmp_[1950101](1950106 call buff[758025] localThis[1949795]))
                  val coerce_tmp[1950108]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1950110 'move' coerce_tmp[1950108](1950112 'deref' _this_tmp_[1950101]))
                  (1950114 'move' call_tmp[1950099](1950117 call this[954152] coerce_tmp[1950108] j[1950055]))
                  const-val call_tmp[1950120]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1950122]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1950124 'move' coerce_tmp[1950122](1950126 'deref' call_tmp[1950099]))
                  (1950128 'move' call_tmp[1950120](1950131 call isInitialByte[181574] coerce_tmp[1950122]))
                  const-val call_tmp[1950133]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1950135 'move' call_tmp[1950133](1950138 call ![7494] call_tmp[1950120]))
                  (1950140 'move' tmp[1950097] call_tmp[1950133])
                  (1950143 'move' tmp[1950083] call_tmp[1950133])
                }
                {
                  (1950147 'move' tmp[1950083] 0)
                }
                (1950151 'move' tmp[1950060] tmp[1950083])
                WhileDo[1950154]
                {
                  (1950157 call +=[451358] j[1950055] 1)
                  const-val tmp[1950160]:bool[10] "dead after last mention" "maybe param" "temp"
                  ref call_tmp[1950162]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                  (1950164 'move' call_tmp[1950162](1950167 call buffLen[757947] localThis[1949795]))
                  const-val coerce_tmp[1950169]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1950171 'move' coerce_tmp[1950169](1950173 'deref' call_tmp[1950162]))
                  (1950175 'move' tmp[1950160](1950178 call <[437495] j[1950055] coerce_tmp[1950169]))
                  val tmp[1950181]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                  const-val tmp[1950183]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[1950185]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1950187 'move' call_tmp[1950185] tmp[1950160])
                  (1950190 'move' tmp[1950183] tmp[1950160])
                  if tmp[1950160]
                  {
                    const-val tmp[1950195]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    ref call_tmp[1950197]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
                    ref _this_tmp_[1950199]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "temp"
                    (1950201 'move' _this_tmp_[1950199](1950204 call buff[758025] localThis[1949795]))
                    val coerce_tmp[1950206]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1950208 'move' coerce_tmp[1950206](1950210 'deref' _this_tmp_[1950199]))
                    (1950212 'move' call_tmp[1950197](1950215 call this[954152] coerce_tmp[1950206] j[1950055]))
                    const-val call_tmp[1950218]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1950220]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1950222 'move' coerce_tmp[1950220](1950224 'deref' call_tmp[1950197]))
                    (1950226 'move' call_tmp[1950218](1950229 call isInitialByte[181574] coerce_tmp[1950220]))
                    const-val call_tmp[1950231]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1950233 'move' call_tmp[1950231](1950236 call ![7494] call_tmp[1950218]))
                    (1950238 'move' tmp[1950195] call_tmp[1950231])
                    (1950241 'move' tmp[1950181] call_tmp[1950231])
                  }
                  {
                    (1950245 'move' tmp[1950181] 0)
                  }
                  (1950249 'move' tmp[1950060] tmp[1950181])
                  tmp[1950060]
                }
                const-val yret[1950252]:(byteIndex,int(64))[1121294] "dead after last mention" "YVV" "temp"
                const-val call_tmp[1950254]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1950256]:byteIndex[28173] "temp"
                (1950259 call _cast[39486] i[1949807] ret_tmp[1950256])
                (1950262 'move' call_tmp[1950254] ret_tmp[1950256])
                const-val call_tmp[1950265]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (1950267 'move' call_tmp[1950265](1950270 call -[440459] j[1950055] i[1949807]))
                const-val call_tmp[1950273]:(byteIndex,int(64))[1121294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1950275]:(byteIndex,int(64))[1121294] "temp"
                (1950278 call _build_tuple[1121252] call_tmp[1950254] call_tmp[1950265] ret_tmp[1950275])
                (1950282 'move' call_tmp[1950273] ret_tmp[1950275])
                (1950285 'move' yret[1950252] call_tmp[1950273])
                const-val _yieldedIndex[1950339]:(byteIndex,int(64))[1121294] "temp"
                (1950442 'move' _yieldedIndex[1950339] call_tmp[1950273])
                {
                  1
                  ref i[1950342]:_ref(byteIndex)[948820] "index var" "insert auto destroy"
                  (1950344 'move' i[1950342](1950346 '.v' _yieldedIndex[1950339] x0[1121290]))
                  const-val nBytes[1950349]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1950351 'move' nBytes[1950349](1950353 '.v' _yieldedIndex[1950339] x1[1121292]))
                  {
                    const-val call_tmp[1950357]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1950359 'move' call_tmp[1950357](1950362 call ==[435671] cpCount[1112950] cpIdxLow[1112978]))
                    const-val call_tmp[1950365]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1950367 'move' call_tmp[1950365] call_tmp[1950357])
                    if call_tmp[1950365]
                    {
                      const-val call_tmp[1950372]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1950374 'move' call_tmp[1950372](1950377 call _cast[39465] i[1950342]))
                      (1950380 call =[435370] byteLow[1113162] call_tmp[1950372])
                    }
                    const-val call_tmp[1950384]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1950386 'move' call_tmp[1950384](1950389 call ==[435671] cpCount[1112950] cpIdxHigh[1113084]))
                    const-val call_tmp[1950392]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1950394 'move' call_tmp[1950392] call_tmp[1950384])
                    if call_tmp[1950392]
                    {
                      const-val call_tmp[1950399]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1950401 'move' call_tmp[1950399](1950404 call _cast[39465] i[1950342]))
                      const-val call_tmp[1950406]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1950408 'move' call_tmp[1950406](1950411 call +[439679] call_tmp[1950399] nBytes[1950349]))
                      const-val call_tmp[1950414]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1950416 'move' call_tmp[1950414](1950419 call -[962287] call_tmp[1950406]))
                      (1950422 call =[435370] byteHigh[1113184] call_tmp[1950414])
                      (1950436 call chpl__autoDestroy[1562538] call_tmp[1950254])
                      (1950439 call chpl__autoDestroy[1562275] localThis[1949795])
                      break _breakLabel[1113391] _breakLabel[1113391]
                    }
                    (1950429 call +=[451358] cpCount[1112950] 1)
                  }
                  label _continueLabel[1950432]
                }
                (1950302 call chpl__autoDestroy[1562538] call_tmp[1950254])
                (1950305 call =[435370] i[1949807] j[1950055])
                ref call_tmp[1950308]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                (1950310 'move' call_tmp[1950308](1950313 call buffLen[757947] localThis[1949795]))
                const-val call_tmp[1950315]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1950317]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1950319 'move' coerce_tmp[1950317](1950321 'deref' call_tmp[1950308]))
                (1950323 'move' call_tmp[1950315](1950326 call <[437495] i[1949807] coerce_tmp[1950317]))
                (1950329 'move' tmp[1950020] call_tmp[1950315])
                tmp[1950020]
              }
              (1950333 call chpl__autoDestroy[1562275] localThis[1949795])
              label _end_indexLen[1950335]
            }
            label _breakLabel[1113391]
            (1879248 call _freeIterator[1121554] _iterator[1113214])
            (1879250 call chpl__autoDestroy[1562538] default_arg_start[1121090])
          }
        }
        const-val call_tmp[1113394]:range(int(64),bounded,false)[1026875] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1865148]:range(int(64),bounded,false)[1026875] "temp"
        (1113399 call chpl_build_bounded_range[455180] byteLow[1113162] byteHigh[1113184] ret_tmp[1865148])
        (1865151 'move' call_tmp[1113394] ret_tmp[1865148])
        const-val call_tmp[1113402]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1113404 'move' call_tmp[1113402](1113407 call -[440459] cpIdxHigh[1113084] cpIdxLow[1112978]))
        const-val call_tmp[1113410]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1113412 'move' call_tmp[1113410](1113415 call +[949727] call_tmp[1113402]))
        const-val call_tmp[1113418]:(range(int(64),bounded,false),int(64))[1084985] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1867108]:(range(int(64),bounded,false),int(64))[1084985] "temp"
        (1113423 call _build_tuple[1084943] call_tmp[1113394] call_tmp[1113410] ret_tmp[1867108])
        (1867111 'move' call_tmp[1113418] ret_tmp[1867108])
        (1113426 'move' ret[1112214] call_tmp[1113418])
        (1879253 call chpl__autoDestroy[1383553] call_tmp[1113394])
        (1879256 call chpl__autoDestroy[1383553] intR[1112885])
        gotoReturn _end_getView[1113439] _end_getView[1113439]
      }
    }
    label _end_getView[1113439]
    (1867610 '=' _retArg[1867608] ret[1112214])
    (1867612 return _void[55])
  }
  function getView[1126341](const  ref arg x[1126343]:_ref(string)[938000], const in arg r[1126345]:range(int(64),boundedLow,false)[1087626], ref arg _retArg[1867902]:_ref((range(int(64),bounded,false),int(64)))[1086547]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1126347]:(range(int(64),bounded,false),int(64))[1084985] "dead after last mention" "RVV" "temp"
    val call_tmp[1126357]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1126370]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1126713]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1126764]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1126815]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val tmp[1126840]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val tmp[1126858]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1126860]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1126862 'move' call_tmp[1126860](1126868 call isASCII[31049] x[1126343]))
      (1126869 'move' tmp[1126858] call_tmp[1126860])
      (1126874 'move' tmp[1126840] tmp[1126858])
      const-val call_tmp[1126886]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1126888 'move' call_tmp[1126886] tmp[1126840])
      if call_tmp[1126886]
      {
        const-val call_tmp[1126895]:(range(int(64),bounded,false),int(64))[1084985] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1867908]:(range(int(64),bounded,false),int(64))[1084985] "temp"
        (1126900 call simpleCaseHelper[1126461] r[1126345] x[1126343] ret_tmp[1867908])
        (1867911 'move' call_tmp[1126895] ret_tmp[1867908])
        (1126901 'move' ret[1126347] call_tmp[1126895])
        gotoReturn _end_getView[1127572] _end_getView[1127572]
      }
      {
        const-val call_tmp[1126929]:range(int(64),bounded,false)[1026875] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1862974]:range(int(64),bounded,false)[1026875] "temp"
        (1126934 call indices[32788] x[1126343] ret_tmp[1862974])
        (1862977 'move' call_tmp[1126929] ret_tmp[1862974])
        (1879443 call chpl__autoDestroy[1383553] call_tmp[1126929])
        val call_tmp[1127001]:range(int(64),boundedLow,false)[1087626] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1127010]:range(int(64),boundedLow,false)[1087626] "dead at end of block" "maybe param" "temp"
        const-val _formal_tmp_in_x[1142229]:range(int(64),boundedLow,false)[1087626] "dead at end of block" "expr temp" "no auto destroy" "temp"
        (1142233 'move' _formal_tmp_in_x[1142229](1142230 call chpl__initCopy[1129213] r[1126345]))
        const-val ret_tmp[1867926]:range(int(64),boundedLow,false)[1087626] "temp"
        (1142226 call _removed_cast[1127617] _formal_tmp_in_x[1142229] ret_tmp[1867926])
        (1867929 'move' call_tmp[1127010] ret_tmp[1867926])
        const-val intR[1127018]:range(int(64),boundedLow,false)[1087626] "dead at end of block" "const" "insert auto destroy"
        (1127020 'move' intR[1127018] call_tmp[1127010])
        {
          const-val call_tmp[1127033]:range(int(64),bounded,false)[1026875] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1862980]:range(int(64),bounded,false)[1026875] "temp"
          (1127038 call indices[32788] x[1126343] ret_tmp[1862980])
          (1862983 'move' call_tmp[1127033] ret_tmp[1862980])
          const-val call_tmp[1127041]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1127043 'move' call_tmp[1127041](1127049 call boundsCheck[1127682] call_tmp[1127033] intR[1127018]))
          const-val call_tmp[1127051]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1127053 'move' call_tmp[1127051](1127056 call ![7494] call_tmp[1127041]))
          const-val call_tmp[1127058]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1127060 'move' call_tmp[1127058] call_tmp[1127051])
          if call_tmp[1127058]
          {
            const-val call_tmp[1127067]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (1127069 'move' call_tmp[1127067](1127072 call size[32772] x[1126343]))
            (1127076 call halt[1128345] "range " r[1126345] " out of bounds for string with length " call_tmp[1127067])
          }
          (1879447 call chpl__autoDestroy[1383553] call_tmp[1127033])
        }
        val cpCount[1127083]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1127085 'move' cpCount[1127083] 0)
        const-val cpIdxLow[1127111]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val tmp[1127113]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[1127131]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1127133]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1127135 'move' call_tmp[1127133](1127138 call alignedLow[1142253] intR[1127018]))
        const-val call_tmp[1127141]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1127143 'move' call_tmp[1127141] call_tmp[1127133])
        const-val call_tmp[1127149]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1127151 'move' call_tmp[1127149](1127154 call >=[980037] call_tmp[1127141]))
        (1127157 'move' tmp[1127131] call_tmp[1127149])
        (1127162 'move' tmp[1127113] tmp[1127131])
        val tmp[1127174]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
        const-val tmp[1127176]:bool[10] "dead after last mention" "maybe param" "temp"
        (1127178 'move' tmp[1127176] tmp[1127113])
        if tmp[1127176]
        {
          const-val tmp[1127185]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
          const-val call_tmp[1127187]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
          (1127189 'move' call_tmp[1127187](1127192 call alignedLow[1142253] intR[1127018]))
          (1127195 'move' tmp[1127185] call_tmp[1127187])
          (1127201 'move' tmp[1127174] tmp[1127185])
        }
        {
          (1127207 'move' tmp[1127174] 0)
        }
        (1127213 'move' cpIdxLow[1127111] tmp[1127174])
        const-val cpIdxHigh[1127217]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val tmp[1127219]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[1127261]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
        ref call_tmp[1127263]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1127265 'move' call_tmp[1127263](1127268 call buffLen[757947] x[1126343]))
        const-val coerce_tmp[1142326]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1142330 'move' coerce_tmp[1142326](1142328 'deref' call_tmp[1127263]))
        (1127271 'move' tmp[1127261](1127274 call -[962287] coerce_tmp[1142326]))
        (1127277 'move' tmp[1127219] tmp[1127261])
        (1127283 'move' cpIdxHigh[1127217] tmp[1127219])
        ref call_tmp[1127287]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1127289 'move' call_tmp[1127287](1127292 call buffLen[757947] x[1126343]))
        val byteLow[1127295]:int(64)[13] "dead at end of block" "insert auto destroy"
        const-val coerce_tmp[1142336]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (1142340 'move' coerce_tmp[1142336](1142338 'deref' call_tmp[1127287]))
        (1879440 '=' byteLow[1127295] coerce_tmp[1142336])
        (1127297 'noop')
        ref call_tmp[1127301]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1127303 'move' call_tmp[1127301](1127306 call buffLen[757947] x[1126343]))
        const-val call_tmp[1127309]:int(64)[13] "dead at end of block" "maybe param" "temp"
        const-val coerce_tmp[1142344]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1142348 'move' coerce_tmp[1142344](1142346 'deref' call_tmp[1127301]))
        (1127311 'move' call_tmp[1127309](1127314 call -[962287] coerce_tmp[1142344]))
        val byteHigh[1127317]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1127319 'move' byteHigh[1127317] call_tmp[1127309])
        const-val call_tmp[1127327]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1127329 'move' call_tmp[1127327](1127332 call >=[980037] cpIdxHigh[1127217]))
        const-val call_tmp[1127335]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1127337 'move' call_tmp[1127335] call_tmp[1127327])
        if call_tmp[1127335]
        {
          {
            val _indexOfInterest[1127345]:(byteIndex,int(64))[1121294] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1127347]:_ic__indexLen__ref_string[1121366] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[1127349]:_ir__indexLen__ref_string[1121372] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val default_arg_start[1142356]:byteIndex[28173] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
            const-val ret_tmp[1867696]:byteIndex[28173] "temp"
            (1142358 call _indexLen_default_start[1121064] x[1126343] ret_tmp[1867696])
            (1867699 'move' default_arg_start[1142356] ret_tmp[1867696])
            const-val ret_tmp[1862934]:_ir__indexLen__ref_string[1121372] "temp"
            (1127357 call _indexLen[31454] x[1126343] default_arg_start[1142356] ret_tmp[1862934])
            (1862937 'move' call_tmp[1127349] ret_tmp[1862934])
            (1127358 'move' _iterator[1127347](1127361 call _getIterator[1121381] call_tmp[1127349]))
            {
              val ret[1951267]:_ir__indexLen__ref_string[1121372] "dead after last mention" "RVV" "temp"
              const-val call_tmp[1951269]:string[26] "dead at end of block" "maybe param" "temp"
              const-val ret_tmp[1951271]:string[26] "temp"
              ref this[1951939]:_ref(string)[938000] "temp"
              (1951944 'move' this[1951939](1951941 '.v' _iterator[1127347] F0_this[2045679]))
              (1951274 call localize[32889] this[1951939] ret_tmp[1951271])
              (1951277 'move' call_tmp[1951269] ret_tmp[1951271])
              val localThis[1951280]:string[26] "dead at end of block" "insert auto destroy"
              (1951282 'move' localThis[1951280] call_tmp[1951269])
              const-val call_tmp[1951285]:int(64)[13] "dead at end of block" "maybe param" "temp"
              ref start[1951946]:_ref(byteIndex)[948820] "temp"
              (1951951 'move' start[1951946](1951948 '.v' _iterator[1127347] F1_start[2045683]))
              (1951287 'move' call_tmp[1951285](1951290 call _cast[39465] start[1951946]))
              val i[1951292]:int(64)[13] "dead at end of block" "insert auto destroy"
              (1951294 'move' i[1951292] call_tmp[1951285])
              const-val call_tmp[1951297]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1951299 'move' call_tmp[1951297](1951302 call >[437715] call_tmp[1951285] 0))
              const-val call_tmp[1951305]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1951307 'move' call_tmp[1951305] call_tmp[1951297])
              if call_tmp[1951297]
              {
                val tmp[1951312]:bool[10] "dead after last mention" "temp"
                const-val tmp[1951314]:bool[10] "dead after last mention" "maybe param" "temp"
                ref call_tmp[1951316]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                (1951318 'move' call_tmp[1951316](1951321 call buffLen[757947] localThis[1951280]))
                const-val coerce_tmp[1951323]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1951325 'move' coerce_tmp[1951323](1951327 'deref' call_tmp[1951316]))
                (1951329 'move' tmp[1951314](1951332 call <[437495] i[1951292] coerce_tmp[1951323]))
                val tmp[1951335]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[1951337]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1951339]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1951341 'move' call_tmp[1951339] tmp[1951314])
                (1951344 'move' tmp[1951337] tmp[1951314])
                if tmp[1951314]
                {
                  const-val tmp[1951349]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  ref call_tmp[1951351]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[1951353]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "temp"
                  (1951355 'move' _this_tmp_[1951353](1951358 call buff[758025] localThis[1951280]))
                  val coerce_tmp[1951360]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1951362 'move' coerce_tmp[1951360](1951364 'deref' _this_tmp_[1951353]))
                  (1951366 'move' call_tmp[1951351](1951369 call this[954152] coerce_tmp[1951360] i[1951292]))
                  const-val call_tmp[1951372]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1951374]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1951376 'move' coerce_tmp[1951374](1951378 'deref' call_tmp[1951351]))
                  (1951380 'move' call_tmp[1951372](1951383 call isInitialByte[181574] coerce_tmp[1951374]))
                  const-val call_tmp[1951385]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1951387 'move' call_tmp[1951385](1951390 call ![7494] call_tmp[1951372]))
                  (1951392 'move' tmp[1951349] call_tmp[1951385])
                  (1951395 'move' tmp[1951335] call_tmp[1951385])
                }
                {
                  (1951399 'move' tmp[1951335] 0)
                }
                (1951403 'move' tmp[1951312] tmp[1951335])
                WhileDo[1951406]
                {
                  (1951409 call +=[451358] i[1951292] 1)
                  const-val tmp[1951412]:bool[10] "dead after last mention" "maybe param" "temp"
                  ref call_tmp[1951414]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                  (1951416 'move' call_tmp[1951414](1951419 call buffLen[757947] localThis[1951280]))
                  const-val coerce_tmp[1951421]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1951423 'move' coerce_tmp[1951421](1951425 'deref' call_tmp[1951414]))
                  (1951427 'move' tmp[1951412](1951430 call <[437495] i[1951292] coerce_tmp[1951421]))
                  val tmp[1951433]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                  const-val tmp[1951435]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[1951437]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1951439 'move' call_tmp[1951437] tmp[1951412])
                  (1951442 'move' tmp[1951435] tmp[1951412])
                  if tmp[1951412]
                  {
                    const-val tmp[1951447]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    ref call_tmp[1951449]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
                    ref _this_tmp_[1951451]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "temp"
                    (1951453 'move' _this_tmp_[1951451](1951456 call buff[758025] localThis[1951280]))
                    val coerce_tmp[1951458]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1951460 'move' coerce_tmp[1951458](1951462 'deref' _this_tmp_[1951451]))
                    (1951464 'move' call_tmp[1951449](1951467 call this[954152] coerce_tmp[1951458] i[1951292]))
                    const-val call_tmp[1951470]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1951472]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1951474 'move' coerce_tmp[1951472](1951476 'deref' call_tmp[1951449]))
                    (1951478 'move' call_tmp[1951470](1951481 call isInitialByte[181574] coerce_tmp[1951472]))
                    const-val call_tmp[1951483]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1951485 'move' call_tmp[1951483](1951488 call ![7494] call_tmp[1951470]))
                    (1951490 'move' tmp[1951447] call_tmp[1951483])
                    (1951493 'move' tmp[1951433] call_tmp[1951483])
                  }
                  {
                    (1951497 'move' tmp[1951433] 0)
                  }
                  (1951501 'move' tmp[1951312] tmp[1951433])
                  tmp[1951312]
                }
              }
              val tmp[1951505]:bool[10] "dead after last mention" "temp"
              ref call_tmp[1951507]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
              (1951509 'move' call_tmp[1951507](1951512 call buffLen[757947] localThis[1951280]))
              const-val call_tmp[1951514]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1951516]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1951518 'move' coerce_tmp[1951516](1951520 'deref' call_tmp[1951507]))
              (1951522 'move' call_tmp[1951514](1951525 call <[437495] i[1951292] coerce_tmp[1951516]))
              (1951528 'move' tmp[1951505] call_tmp[1951514])
              WhileDo[1951531]
              {
                const-val call_tmp[1951533]:int(64)[13] "dead at end of block" "maybe param" "temp"
                (1951535 'move' call_tmp[1951533](1951538 call +[949727] i[1951292]))
                val j[1951540]:int(64)[13] "dead at end of block" "insert auto destroy"
                (1951542 'move' j[1951540] call_tmp[1951533])
                val tmp[1951545]:bool[10] "dead after last mention" "temp"
                const-val tmp[1951547]:bool[10] "dead after last mention" "maybe param" "temp"
                ref call_tmp[1951549]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                (1951551 'move' call_tmp[1951549](1951554 call buffLen[757947] localThis[1951280]))
                const-val coerce_tmp[1951556]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1951558 'move' coerce_tmp[1951556](1951560 'deref' call_tmp[1951549]))
                (1951562 'move' tmp[1951547](1951565 call <[437495] call_tmp[1951533] coerce_tmp[1951556]))
                val tmp[1951568]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[1951570]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1951572]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1951574 'move' call_tmp[1951572] tmp[1951547])
                (1951577 'move' tmp[1951570] tmp[1951547])
                if tmp[1951547]
                {
                  const-val tmp[1951582]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  ref call_tmp[1951584]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[1951586]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "temp"
                  (1951588 'move' _this_tmp_[1951586](1951591 call buff[758025] localThis[1951280]))
                  val coerce_tmp[1951593]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1951595 'move' coerce_tmp[1951593](1951597 'deref' _this_tmp_[1951586]))
                  (1951599 'move' call_tmp[1951584](1951602 call this[954152] coerce_tmp[1951593] j[1951540]))
                  const-val call_tmp[1951605]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1951607]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1951609 'move' coerce_tmp[1951607](1951611 'deref' call_tmp[1951584]))
                  (1951613 'move' call_tmp[1951605](1951616 call isInitialByte[181574] coerce_tmp[1951607]))
                  const-val call_tmp[1951618]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1951620 'move' call_tmp[1951618](1951623 call ![7494] call_tmp[1951605]))
                  (1951625 'move' tmp[1951582] call_tmp[1951618])
                  (1951628 'move' tmp[1951568] call_tmp[1951618])
                }
                {
                  (1951632 'move' tmp[1951568] 0)
                }
                (1951636 'move' tmp[1951545] tmp[1951568])
                WhileDo[1951639]
                {
                  (1951642 call +=[451358] j[1951540] 1)
                  const-val tmp[1951645]:bool[10] "dead after last mention" "maybe param" "temp"
                  ref call_tmp[1951647]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                  (1951649 'move' call_tmp[1951647](1951652 call buffLen[757947] localThis[1951280]))
                  const-val coerce_tmp[1951654]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1951656 'move' coerce_tmp[1951654](1951658 'deref' call_tmp[1951647]))
                  (1951660 'move' tmp[1951645](1951663 call <[437495] j[1951540] coerce_tmp[1951654]))
                  val tmp[1951666]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                  const-val tmp[1951668]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[1951670]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1951672 'move' call_tmp[1951670] tmp[1951645])
                  (1951675 'move' tmp[1951668] tmp[1951645])
                  if tmp[1951645]
                  {
                    const-val tmp[1951680]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    ref call_tmp[1951682]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
                    ref _this_tmp_[1951684]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "temp"
                    (1951686 'move' _this_tmp_[1951684](1951689 call buff[758025] localThis[1951280]))
                    val coerce_tmp[1951691]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1951693 'move' coerce_tmp[1951691](1951695 'deref' _this_tmp_[1951684]))
                    (1951697 'move' call_tmp[1951682](1951700 call this[954152] coerce_tmp[1951691] j[1951540]))
                    const-val call_tmp[1951703]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1951705]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1951707 'move' coerce_tmp[1951705](1951709 'deref' call_tmp[1951682]))
                    (1951711 'move' call_tmp[1951703](1951714 call isInitialByte[181574] coerce_tmp[1951705]))
                    const-val call_tmp[1951716]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1951718 'move' call_tmp[1951716](1951721 call ![7494] call_tmp[1951703]))
                    (1951723 'move' tmp[1951680] call_tmp[1951716])
                    (1951726 'move' tmp[1951666] call_tmp[1951716])
                  }
                  {
                    (1951730 'move' tmp[1951666] 0)
                  }
                  (1951734 'move' tmp[1951545] tmp[1951666])
                  tmp[1951545]
                }
                const-val yret[1951737]:(byteIndex,int(64))[1121294] "dead after last mention" "YVV" "temp"
                const-val call_tmp[1951739]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1951741]:byteIndex[28173] "temp"
                (1951744 call _cast[39486] i[1951292] ret_tmp[1951741])
                (1951747 'move' call_tmp[1951739] ret_tmp[1951741])
                const-val call_tmp[1951750]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (1951752 'move' call_tmp[1951750](1951755 call -[440459] j[1951540] i[1951292]))
                const-val call_tmp[1951758]:(byteIndex,int(64))[1121294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1951760]:(byteIndex,int(64))[1121294] "temp"
                (1951763 call _build_tuple[1121252] call_tmp[1951739] call_tmp[1951750] ret_tmp[1951760])
                (1951767 'move' call_tmp[1951758] ret_tmp[1951760])
                (1951770 'move' yret[1951737] call_tmp[1951758])
                const-val _yieldedIndex[1951824]:(byteIndex,int(64))[1121294] "temp"
                (1951937 'move' _yieldedIndex[1951824] call_tmp[1951758])
                {
                  1
                  ref i[1951827]:_ref(byteIndex)[948820] "index var" "insert auto destroy"
                  (1951829 'move' i[1951827](1951831 '.v' _yieldedIndex[1951824] x0[1121290]))
                  const-val nBytes[1951834]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1951836 'move' nBytes[1951834](1951838 '.v' _yieldedIndex[1951824] x1[1121292]))
                  {
                    const-val call_tmp[1951842]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1951844 'move' call_tmp[1951842](1951847 call ==[435671] cpCount[1127083] cpIdxLow[1127111]))
                    const-val call_tmp[1951850]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1951852 'move' call_tmp[1951850] call_tmp[1951842])
                    if call_tmp[1951850]
                    {
                      const-val call_tmp[1951857]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1951859 'move' call_tmp[1951857](1951862 call _cast[39465] i[1951827]))
                      (1951865 call =[435370] byteLow[1127295] call_tmp[1951857])
                      {
                        (1951924 call chpl__autoDestroy[1562538] call_tmp[1951739])
                        (1951927 call chpl__autoDestroy[1562275] localThis[1951280])
                        break _breakLabel[1127524] _breakLabel[1127524]
                      }
                    }
                    const-val call_tmp[1951872]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1951874 'move' call_tmp[1951872](1951877 call ==[435671] cpCount[1127083] cpIdxHigh[1127217]))
                    const-val call_tmp[1951880]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1951882 'move' call_tmp[1951880] call_tmp[1951872])
                    if call_tmp[1951880]
                    {
                      const-val call_tmp[1951887]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1951889 'move' call_tmp[1951887](1951892 call _cast[39465] i[1951827]))
                      const-val call_tmp[1951894]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1951896 'move' call_tmp[1951894](1951899 call +[439679] call_tmp[1951887] nBytes[1951834]))
                      const-val call_tmp[1951902]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1951904 'move' call_tmp[1951902](1951907 call -[962287] call_tmp[1951894]))
                      (1951910 call =[435370] byteHigh[1127317] call_tmp[1951902])
                      (1951931 call chpl__autoDestroy[1562538] call_tmp[1951739])
                      (1951934 call chpl__autoDestroy[1562275] localThis[1951280])
                      break _breakLabel[1127524] _breakLabel[1127524]
                    }
                    (1951917 call +=[451358] cpCount[1127083] 1)
                  }
                  label _continueLabel[1951920]
                }
                (1951787 call chpl__autoDestroy[1562538] call_tmp[1951739])
                (1951790 call =[435370] i[1951292] j[1951540])
                ref call_tmp[1951793]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                (1951795 'move' call_tmp[1951793](1951798 call buffLen[757947] localThis[1951280]))
                const-val call_tmp[1951800]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1951802]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1951804 'move' coerce_tmp[1951802](1951806 'deref' call_tmp[1951793]))
                (1951808 'move' call_tmp[1951800](1951811 call <[437495] i[1951292] coerce_tmp[1951802]))
                (1951814 'move' tmp[1951505] call_tmp[1951800])
                tmp[1951505]
              }
              (1951818 call chpl__autoDestroy[1562275] localThis[1951280])
              label _end_indexLen[1951820]
            }
            label _breakLabel[1127524]
            (1879453 call _freeIterator[1121554] _iterator[1127347])
            (1879455 call chpl__autoDestroy[1562538] default_arg_start[1142356])
          }
        }
        const-val call_tmp[1127527]:range(int(64),bounded,false)[1026875] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1865160]:range(int(64),bounded,false)[1026875] "temp"
        (1127532 call chpl_build_bounded_range[455180] byteLow[1127295] byteHigh[1127317] ret_tmp[1865160])
        (1865163 'move' call_tmp[1127527] ret_tmp[1865160])
        const-val call_tmp[1127535]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1127537 'move' call_tmp[1127535](1127540 call -[440459] cpIdxHigh[1127217] cpIdxLow[1127111]))
        const-val call_tmp[1127543]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1127545 'move' call_tmp[1127543](1127548 call +[949727] call_tmp[1127535]))
        const-val call_tmp[1127551]:(range(int(64),bounded,false),int(64))[1084985] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1867120]:(range(int(64),bounded,false),int(64))[1084985] "temp"
        (1127556 call _build_tuple[1084943] call_tmp[1127527] call_tmp[1127543] ret_tmp[1867120])
        (1867123 'move' call_tmp[1127551] ret_tmp[1867120])
        (1127559 'move' ret[1126347] call_tmp[1127551])
        (1879458 call chpl__autoDestroy[1383553] call_tmp[1127527])
        (1879461 call chpl__autoDestroy[1641507] intR[1127018])
        gotoReturn _end_getView[1127572] _end_getView[1127572]
      }
    }
    label _end_getView[1127572]
    (1867904 '=' _retArg[1867902] ret[1126347])
    (1867906 return _void[55])
  }
  function getView[1144502](const  ref arg x[1144504]:_ref(string)[938000], const in arg r[1144506]:range(byteIndex,boundedLow,false)[1143464], ref arg _retArg[1868118]:_ref((range(int(64),bounded,false),int(64)))[1086547]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val ret[1144508]:(range(int(64),bounded,false),int(64))[1084985] "dead after last mention" "RVV" "temp"
    val call_tmp[1144518]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1144531]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1144874]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1144925]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      const-val call_tmp[1144961]:(range(int(64),bounded,false),int(64))[1084985] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1868124]:(range(int(64),bounded,false),int(64))[1084985] "temp"
      (1144966 call simpleCaseHelper[1144622] r[1144506] x[1144504] ret_tmp[1868124])
      (1868127 'move' call_tmp[1144961] ret_tmp[1868124])
      (1144967 'move' ret[1144508] call_tmp[1144961])
      gotoReturn _end_getView[1145733] _end_getView[1145733]
    }
    label _end_getView[1145733]
    (1868120 '=' _retArg[1868118] ret[1144508])
    (1868122 return _void[55])
  }
  function getView[1186018](const  ref arg x[1186020]:_ref(string)[938000], const in arg r[1186022]:range(byteIndex,boundedHigh,false)[1184980], ref arg _retArg[1868440]:_ref((range(int(64),bounded,false),int(64)))[1086547]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val ret[1186024]:(range(int(64),bounded,false),int(64))[1084985] "dead after last mention" "RVV" "temp"
    val call_tmp[1186034]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1186047]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1186390]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1186441]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      const-val call_tmp[1186477]:(range(int(64),bounded,false),int(64))[1084985] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1868446]:(range(int(64),bounded,false),int(64))[1084985] "temp"
      (1186482 call simpleCaseHelper[1186138] r[1186022] x[1186020] ret_tmp[1868446])
      (1868449 'move' call_tmp[1186477] ret_tmp[1868446])
      (1186483 'move' ret[1186024] call_tmp[1186477])
      gotoReturn _end_getView[1187249] _end_getView[1187249]
    }
    label _end_getView[1187249]
    (1868442 '=' _retArg[1868440] ret[1186024])
    (1868444 return _void[55])
  }
  function getSlice[1111463](const  ref arg x[1111465]:_ref(string)[938000], const in arg r[1111467]:range(int(64),bounded,false)[1026875], ref arg _retArg[1867594]:_ref(string)[938000]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1111469]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[1111479]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1111490]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1111492 'move' call_tmp[1111490](1111498 call isEmpty[35064] x[1111465]))
    const-val call_tmp[1111499]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1111501 'move' call_tmp[1111499] call_tmp[1111490])
    if call_tmp[1111499]
    {
      const-val ret[1111508]:string[26] "dead at end of block" "insert auto destroy"
      val call_tmp[1111510]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1122018 call init[30763] ret[1111508])
      (1111520 'move' ret[1111469] ret[1111508])
      gotoReturn _end_getSlice[1112136] _end_getSlice[1112136]
    }
    const-val call_tmp[1111529]:(range(int(64),bounded,false),int(64))[1084985] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1867602]:(range(int(64),bounded,false),int(64))[1084985] "temp"
    (1111534 call getView[1112208] x[1111465] r[1111467] ret_tmp[1867602])
    (1867605 'move' call_tmp[1111529] ret_tmp[1867602])
    const-val tmp[1111537]:(range(int(64),bounded,false),int(64))[1084985] "dead at end of block" "const" "insert auto destroy" "temp"
    (1111539 'move' tmp[1111537] call_tmp[1111529])
    1
    ref call_tmp[1111547]:_ref(range(int(64),bounded,false))[1026919] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1111549 'move' call_tmp[1111547](1121849 '.' tmp[1111537] x0[1084981]))
    const-val r2[1111554]:range(int(64),bounded,false)[1026875] "dead at end of block" "const" "insert auto destroy"
    (1111556 'move' r2[1111554](1867598 call chpl__initCopy[1085067] call_tmp[1111547]))
    ref call_tmp[1111559]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1111561 'move' call_tmp[1111559](1121855 '.' tmp[1111537] x1[1084983]))
    const-val numChars[1111566]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1121860]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1121864 'move' coerce_tmp[1121860](1121862 'deref' call_tmp[1111559]))
    (1879196 '=' numChars[1111566] coerce_tmp[1121860])
    (1111568 'noop')
    const-val call_tmp[1111572]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1111574 'move' call_tmp[1111572](1111577 call size[1035850] r2[1111554]))
    const-val call_tmp[1111580]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1111582 'move' call_tmp[1111580](1111585 call <=[437055] call_tmp[1111572] 0))
    const-val call_tmp[1111588]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1111590 'move' call_tmp[1111588] call_tmp[1111580])
    if call_tmp[1111588]
    {
      const-val ret[1111597]:string[26] "dead at end of block" "insert auto destroy"
      val call_tmp[1111599]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1122023 call init[30763] ret[1111597])
      (1111609 'move' ret[1111469] ret[1111597])
      (1879205 call chpl__autoDestroy[1383553] r2[1111554])
      (1879208 call chpl__autoDestroy[1641462] tmp[1111537])
      gotoReturn _end_getSlice[1112136] _end_getSlice[1112136]
    }
    val buff[1111618]:c_ptr(uint(8))[937484] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1111620]:c_ptr(uint(8))[937484] "dead after last mention" "maybe param" "temp" "type variable"
    const-val buffSize[1111629]:int(64)[13] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1111631]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    const-val call_tmp[1111640]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1111642 'move' call_tmp[1111640](1111645 call high[1028680] r2[1111554]))
    const-val call_tmp[1111648]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1111650 'move' call_tmp[1111648](1111653 call low[1028472] r2[1111554]))
    const-val call_tmp[1111656]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1111658 'move' call_tmp[1111656](1111661 call -[440459] call_tmp[1111640] call_tmp[1111648]))
    const-val call_tmp[1111664]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1111666 'move' call_tmp[1111664](1111669 call +[949727] call_tmp[1111656]))
    const-val copyLen[1111672]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1111674 'move' copyLen[1111672] call_tmp[1111664])
    ref call_tmp[1111678]:_ref(c_ptr(uint(8)))[937493] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1111680 'move' call_tmp[1111678](1111683 call buff[758025] x[1111465]))
    const-val call_tmp[1111686]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1111688 'move' call_tmp[1111686](1111691 call low[1028472] r2[1111554]))
    ref call_tmp[1111694]:_ref(int(32))[936687] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1111696 'move' call_tmp[1111694](1111699 call locale_id[758103] x[1111465]))
    const-val call_tmp[1111702]:(c_ptr(uint(8)),int(64))[955269] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1121879]:c_ptr(uint(8))[937484] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1121883 'move' coerce_tmp[1121879](1121881 'deref' call_tmp[1111678]))
    const-val coerce_tmp[1121885]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1121889 'move' coerce_tmp[1121885](1121887 'deref' call_tmp[1111694]))
    const-val ret_tmp[1864818]:(c_ptr(uint(8)),int(64))[955269] "temp"
    (1111707 call bufferCopy[172974] coerce_tmp[1121879] call_tmp[1111686] copyLen[1111672] coerce_tmp[1121885] ret_tmp[1864818])
    (1864821 'move' call_tmp[1111702] ret_tmp[1864818])
    const-val tmp[1111716]:(c_ptr(uint(8)),int(64))[955269] "dead at end of block" "insert auto destroy" "temp"
    (1111718 'move' tmp[1111716] call_tmp[1111702])
    1
    ref call_tmp[1111726]:_ref(c_ptr(uint(8)))[937493] "dead at end of block" "maybe param" "temp"
    (1111728 'move' call_tmp[1111726](1121923 '.' tmp[1111716] x0[955265]))
    val copyBuf[1111733]:c_ptr(uint(8))[937484] "dead at end of block" "insert auto destroy"
    val coerce_tmp[1121928]:c_ptr(uint(8))[937484] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1121932 'move' coerce_tmp[1121928](1121930 'deref' call_tmp[1111726]))
    (1879199 '=' copyBuf[1111733] coerce_tmp[1121928])
    (1111735 'noop')
    ref call_tmp[1111738]:_ref(int(64))[936633] "dead at end of block" "maybe param" "temp"
    (1111740 'move' call_tmp[1111738](1121937 '.' tmp[1111716] x1[955267]))
    const-val copySize[1111745]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[1121942]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1121946 'move' coerce_tmp[1121942](1121944 'deref' call_tmp[1111738]))
    (1879202 '=' copySize[1111745] coerce_tmp[1121942])
    (1111747 'noop')
    {
      (1111776 'move' buff[1111618](1121975 call chpl__initCopy[954091] copyBuf[1111733]))
      (1111783 'move' buffSize[1111629] copySize[1111745])
    }
    const-val call_tmp[1111985]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1111987 'move' call_tmp[1111985](1111990 call size[1035850] r2[1111554]))
    const-val buffLen[1111993]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1111995 'move' buffLen[1111993] call_tmp[1111985])
    ref call_tmp[1112002]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
    (1112004 'move' call_tmp[1112002](1112007 call this[954152] buff[1111618] buffLen[1111993]))
    const-val coerce_tmp[1121982]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1121988 'move' coerce_tmp[1121982](1121984 'cast' uint(8)[100] 0))
    (1112010 call =[435391] call_tmp[1112002] coerce_tmp[1121982])
    val call_tmp[1112016]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val numCodepoints[1112039]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1112041 'move' numCodepoints[1112039] numChars[1111566])
      const-val call_tmp[1112053]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1112055 'move' call_tmp[1112053](1112058 call ==[435671] numCodepoints[1112039] -1))
      const-val call_tmp[1112061]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1112063 'move' call_tmp[1112061] call_tmp[1112053])
      if call_tmp[1112061]
      {
        const-val call_tmp[1112070]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1112072 'move' call_tmp[1112070](1112075 call countNumCodepoints[181436] buff[1111618] buffLen[1111993]))
        (1112079 call =[435370] numCodepoints[1112039] call_tmp[1112070])
      }
      const-val call_tmp[1112087]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1862756]:string[26] "temp"
      (1112092 call chpl_createStringWithOwnedBufferNV[30676] buff[1111618] buffLen[1111993] buffSize[1111629] numCodepoints[1112039] ret_tmp[1862756])
      (1862759 'move' call_tmp[1112087] ret_tmp[1862756])
      (1112101 'move' ret[1111469] call_tmp[1112087])
      (1879211 call chpl__autoDestroy[1565916] tmp[1111716])
      (1879214 call chpl__autoDestroy[1383553] r2[1111554])
      (1879217 call chpl__autoDestroy[1641462] tmp[1111537])
      gotoReturn _end_getSlice[1112136] _end_getSlice[1112136]
    }
    (1879220 call chpl__autoDestroy[1565916] tmp[1111716])
    (1879223 call chpl__autoDestroy[1383553] r2[1111554])
    (1879226 call chpl__autoDestroy[1641462] tmp[1111537])
    label _end_getSlice[1112136]
    (1867596 '=' _retArg[1867594] ret[1111469])
    (1867600 return _void[55])
  }
  function getSlice[1123597](const  ref arg x[1123599]:_ref(string)[938000], const in arg r[1123601]:range(byteIndex,bounded,false)[1025853], ref arg _retArg[1867828]:_ref(string)[938000]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1123603]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[1123613]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1123624]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1123626 'move' call_tmp[1123624](1123632 call isEmpty[35064] x[1123599]))
    const-val call_tmp[1123633]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1123635 'move' call_tmp[1123633] call_tmp[1123624])
    if call_tmp[1123633]
    {
      const-val ret[1123642]:string[26] "dead at end of block" "insert auto destroy"
      val call_tmp[1123644]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1124432 call init[30763] ret[1123642])
      (1123654 'move' ret[1123603] ret[1123642])
      gotoReturn _end_getSlice[1124270] _end_getSlice[1124270]
    }
    const-val call_tmp[1123663]:(range(int(64),bounded,false),int(64))[1084985] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1866318]:(range(int(64),bounded,false),int(64))[1084985] "temp"
    (1123668 call getView[1031215] x[1123599] r[1123601] ret_tmp[1866318])
    (1866321 'move' call_tmp[1123663] ret_tmp[1866318])
    const-val tmp[1123671]:(range(int(64),bounded,false),int(64))[1084985] "dead at end of block" "const" "insert auto destroy" "temp"
    (1123673 'move' tmp[1123671] call_tmp[1123663])
    1
    ref call_tmp[1123681]:_ref(range(int(64),bounded,false))[1026919] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1123683 'move' call_tmp[1123681](1124287 '.' tmp[1123671] x0[1084981]))
    const-val r2[1123688]:range(int(64),bounded,false)[1026875] "dead at end of block" "const" "insert auto destroy"
    (1123690 'move' r2[1123688](1867832 call chpl__initCopy[1085067] call_tmp[1123681]))
    ref call_tmp[1123693]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1123695 'move' call_tmp[1123693](1124293 '.' tmp[1123671] x1[1084983]))
    const-val numChars[1123700]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1124298]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1124302 'move' coerce_tmp[1124298](1124300 'deref' call_tmp[1123693]))
    (1879312 '=' numChars[1123700] coerce_tmp[1124298])
    (1123702 'noop')
    const-val call_tmp[1123706]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1123708 'move' call_tmp[1123706](1123711 call size[1035850] r2[1123688]))
    const-val call_tmp[1123714]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1123716 'move' call_tmp[1123714](1123719 call <=[437055] call_tmp[1123706] 0))
    const-val call_tmp[1123722]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1123724 'move' call_tmp[1123722] call_tmp[1123714])
    if call_tmp[1123722]
    {
      const-val ret[1123731]:string[26] "dead at end of block" "insert auto destroy"
      val call_tmp[1123733]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1124437 call init[30763] ret[1123731])
      (1123743 'move' ret[1123603] ret[1123731])
      (1879321 call chpl__autoDestroy[1383553] r2[1123688])
      (1879324 call chpl__autoDestroy[1641462] tmp[1123671])
      gotoReturn _end_getSlice[1124270] _end_getSlice[1124270]
    }
    val buff[1123752]:c_ptr(uint(8))[937484] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1123754]:c_ptr(uint(8))[937484] "dead after last mention" "maybe param" "temp" "type variable"
    const-val buffSize[1123763]:int(64)[13] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1123765]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    const-val call_tmp[1123774]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1123776 'move' call_tmp[1123774](1123779 call high[1028680] r2[1123688]))
    const-val call_tmp[1123782]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1123784 'move' call_tmp[1123782](1123787 call low[1028472] r2[1123688]))
    const-val call_tmp[1123790]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1123792 'move' call_tmp[1123790](1123795 call -[440459] call_tmp[1123774] call_tmp[1123782]))
    const-val call_tmp[1123798]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1123800 'move' call_tmp[1123798](1123803 call +[949727] call_tmp[1123790]))
    const-val copyLen[1123806]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1123808 'move' copyLen[1123806] call_tmp[1123798])
    ref call_tmp[1123812]:_ref(c_ptr(uint(8)))[937493] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1123814 'move' call_tmp[1123812](1123817 call buff[758025] x[1123599]))
    const-val call_tmp[1123820]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1123822 'move' call_tmp[1123820](1123825 call low[1028472] r2[1123688]))
    ref call_tmp[1123828]:_ref(int(32))[936687] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1123830 'move' call_tmp[1123828](1123833 call locale_id[758103] x[1123599]))
    const-val call_tmp[1123836]:(c_ptr(uint(8)),int(64))[955269] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1124317]:c_ptr(uint(8))[937484] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1124321 'move' coerce_tmp[1124317](1124319 'deref' call_tmp[1123812]))
    const-val coerce_tmp[1124323]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1124327 'move' coerce_tmp[1124323](1124325 'deref' call_tmp[1123828]))
    const-val ret_tmp[1864824]:(c_ptr(uint(8)),int(64))[955269] "temp"
    (1123841 call bufferCopy[172974] coerce_tmp[1124317] call_tmp[1123820] copyLen[1123806] coerce_tmp[1124323] ret_tmp[1864824])
    (1864827 'move' call_tmp[1123836] ret_tmp[1864824])
    const-val tmp[1123850]:(c_ptr(uint(8)),int(64))[955269] "dead at end of block" "insert auto destroy" "temp"
    (1123852 'move' tmp[1123850] call_tmp[1123836])
    1
    ref call_tmp[1123860]:_ref(c_ptr(uint(8)))[937493] "dead at end of block" "maybe param" "temp"
    (1123862 'move' call_tmp[1123860](1124337 '.' tmp[1123850] x0[955265]))
    val copyBuf[1123867]:c_ptr(uint(8))[937484] "dead at end of block" "insert auto destroy"
    val coerce_tmp[1124342]:c_ptr(uint(8))[937484] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1124346 'move' coerce_tmp[1124342](1124344 'deref' call_tmp[1123860]))
    (1879315 '=' copyBuf[1123867] coerce_tmp[1124342])
    (1123869 'noop')
    ref call_tmp[1123872]:_ref(int(64))[936633] "dead at end of block" "maybe param" "temp"
    (1123874 'move' call_tmp[1123872](1124351 '.' tmp[1123850] x1[955267]))
    const-val copySize[1123879]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[1124356]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1124360 'move' coerce_tmp[1124356](1124358 'deref' call_tmp[1123872]))
    (1879318 '=' copySize[1123879] coerce_tmp[1124356])
    (1123881 'noop')
    {
      (1123910 'move' buff[1123752](1124389 call chpl__initCopy[954091] copyBuf[1123867]))
      (1123917 'move' buffSize[1123763] copySize[1123879])
    }
    const-val call_tmp[1124119]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1124121 'move' call_tmp[1124119](1124124 call size[1035850] r2[1123688]))
    const-val buffLen[1124127]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1124129 'move' buffLen[1124127] call_tmp[1124119])
    ref call_tmp[1124136]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
    (1124138 'move' call_tmp[1124136](1124141 call this[954152] buff[1123752] buffLen[1124127]))
    const-val coerce_tmp[1124396]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1124402 'move' coerce_tmp[1124396](1124398 'cast' uint(8)[100] 0))
    (1124144 call =[435391] call_tmp[1124136] coerce_tmp[1124396])
    val call_tmp[1124150]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val numCodepoints[1124173]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1124175 'move' numCodepoints[1124173] numChars[1123700])
      const-val call_tmp[1124187]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1124189 'move' call_tmp[1124187](1124192 call ==[435671] numCodepoints[1124173] -1))
      const-val call_tmp[1124195]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1124197 'move' call_tmp[1124195] call_tmp[1124187])
      if call_tmp[1124195]
      {
        const-val call_tmp[1124204]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1124206 'move' call_tmp[1124204](1124209 call countNumCodepoints[181436] buff[1123752] buffLen[1124127]))
        (1124213 call =[435370] numCodepoints[1124173] call_tmp[1124204])
      }
      const-val call_tmp[1124221]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1862762]:string[26] "temp"
      (1124226 call chpl_createStringWithOwnedBufferNV[30676] buff[1123752] buffLen[1124127] buffSize[1123763] numCodepoints[1124173] ret_tmp[1862762])
      (1862765 'move' call_tmp[1124221] ret_tmp[1862762])
      (1124235 'move' ret[1123603] call_tmp[1124221])
      (1879327 call chpl__autoDestroy[1565916] tmp[1123850])
      (1879330 call chpl__autoDestroy[1383553] r2[1123688])
      (1879333 call chpl__autoDestroy[1641462] tmp[1123671])
      gotoReturn _end_getSlice[1124270] _end_getSlice[1124270]
    }
    (1879336 call chpl__autoDestroy[1565916] tmp[1123850])
    (1879339 call chpl__autoDestroy[1383553] r2[1123688])
    (1879342 call chpl__autoDestroy[1641462] tmp[1123671])
    label _end_getSlice[1124270]
    (1867830 '=' _retArg[1867828] ret[1123603])
    (1867834 return _void[55])
  }
  function getSlice[1125659](const  ref arg x[1125661]:_ref(string)[938000], const in arg r[1125663]:range(int(64),boundedLow,false)[1087626], ref arg _retArg[1867888]:_ref(string)[938000]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1125665]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[1125675]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1125686]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1125688 'move' call_tmp[1125686](1125694 call isEmpty[35064] x[1125661]))
    const-val call_tmp[1125695]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1125697 'move' call_tmp[1125695] call_tmp[1125686])
    if call_tmp[1125695]
    {
      const-val ret[1125704]:string[26] "dead at end of block" "insert auto destroy"
      val call_tmp[1125706]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1142552 call init[30763] ret[1125704])
      (1125716 'move' ret[1125665] ret[1125704])
      gotoReturn _end_getSlice[1126332] _end_getSlice[1126332]
    }
    const-val call_tmp[1125725]:(range(int(64),bounded,false),int(64))[1084985] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1867896]:(range(int(64),bounded,false),int(64))[1084985] "temp"
    (1125730 call getView[1126341] x[1125661] r[1125663] ret_tmp[1867896])
    (1867899 'move' call_tmp[1125725] ret_tmp[1867896])
    const-val tmp[1125733]:(range(int(64),bounded,false),int(64))[1084985] "dead at end of block" "const" "insert auto destroy" "temp"
    (1125735 'move' tmp[1125733] call_tmp[1125725])
    1
    ref call_tmp[1125743]:_ref(range(int(64),bounded,false))[1026919] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1125745 'move' call_tmp[1125743](1142407 '.' tmp[1125733] x0[1084981]))
    const-val r2[1125750]:range(int(64),bounded,false)[1026875] "dead at end of block" "const" "insert auto destroy"
    (1125752 'move' r2[1125750](1867892 call chpl__initCopy[1085067] call_tmp[1125743]))
    ref call_tmp[1125755]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1125757 'move' call_tmp[1125755](1142413 '.' tmp[1125733] x1[1084983]))
    const-val numChars[1125762]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1142418]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1142422 'move' coerce_tmp[1142418](1142420 'deref' call_tmp[1125755]))
    (1879407 '=' numChars[1125762] coerce_tmp[1142418])
    (1125764 'noop')
    const-val call_tmp[1125768]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1125770 'move' call_tmp[1125768](1125773 call size[1035850] r2[1125750]))
    const-val call_tmp[1125776]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1125778 'move' call_tmp[1125776](1125781 call <=[437055] call_tmp[1125768] 0))
    const-val call_tmp[1125784]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1125786 'move' call_tmp[1125784] call_tmp[1125776])
    if call_tmp[1125784]
    {
      const-val ret[1125793]:string[26] "dead at end of block" "insert auto destroy"
      val call_tmp[1125795]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1142557 call init[30763] ret[1125793])
      (1125805 'move' ret[1125665] ret[1125793])
      (1879416 call chpl__autoDestroy[1383553] r2[1125750])
      (1879419 call chpl__autoDestroy[1641462] tmp[1125733])
      gotoReturn _end_getSlice[1126332] _end_getSlice[1126332]
    }
    val buff[1125814]:c_ptr(uint(8))[937484] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1125816]:c_ptr(uint(8))[937484] "dead after last mention" "maybe param" "temp" "type variable"
    const-val buffSize[1125825]:int(64)[13] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1125827]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    const-val call_tmp[1125836]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1125838 'move' call_tmp[1125836](1125841 call high[1028680] r2[1125750]))
    const-val call_tmp[1125844]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1125846 'move' call_tmp[1125844](1125849 call low[1028472] r2[1125750]))
    const-val call_tmp[1125852]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1125854 'move' call_tmp[1125852](1125857 call -[440459] call_tmp[1125836] call_tmp[1125844]))
    const-val call_tmp[1125860]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1125862 'move' call_tmp[1125860](1125865 call +[949727] call_tmp[1125852]))
    const-val copyLen[1125868]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1125870 'move' copyLen[1125868] call_tmp[1125860])
    ref call_tmp[1125874]:_ref(c_ptr(uint(8)))[937493] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1125876 'move' call_tmp[1125874](1125879 call buff[758025] x[1125661]))
    const-val call_tmp[1125882]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1125884 'move' call_tmp[1125882](1125887 call low[1028472] r2[1125750]))
    ref call_tmp[1125890]:_ref(int(32))[936687] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1125892 'move' call_tmp[1125890](1125895 call locale_id[758103] x[1125661]))
    const-val call_tmp[1125898]:(c_ptr(uint(8)),int(64))[955269] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1142437]:c_ptr(uint(8))[937484] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1142441 'move' coerce_tmp[1142437](1142439 'deref' call_tmp[1125874]))
    const-val coerce_tmp[1142443]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1142447 'move' coerce_tmp[1142443](1142445 'deref' call_tmp[1125890]))
    const-val ret_tmp[1864830]:(c_ptr(uint(8)),int(64))[955269] "temp"
    (1125903 call bufferCopy[172974] coerce_tmp[1142437] call_tmp[1125882] copyLen[1125868] coerce_tmp[1142443] ret_tmp[1864830])
    (1864833 'move' call_tmp[1125898] ret_tmp[1864830])
    const-val tmp[1125912]:(c_ptr(uint(8)),int(64))[955269] "dead at end of block" "insert auto destroy" "temp"
    (1125914 'move' tmp[1125912] call_tmp[1125898])
    1
    ref call_tmp[1125922]:_ref(c_ptr(uint(8)))[937493] "dead at end of block" "maybe param" "temp"
    (1125924 'move' call_tmp[1125922](1142457 '.' tmp[1125912] x0[955265]))
    val copyBuf[1125929]:c_ptr(uint(8))[937484] "dead at end of block" "insert auto destroy"
    val coerce_tmp[1142462]:c_ptr(uint(8))[937484] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1142466 'move' coerce_tmp[1142462](1142464 'deref' call_tmp[1125922]))
    (1879410 '=' copyBuf[1125929] coerce_tmp[1142462])
    (1125931 'noop')
    ref call_tmp[1125934]:_ref(int(64))[936633] "dead at end of block" "maybe param" "temp"
    (1125936 'move' call_tmp[1125934](1142471 '.' tmp[1125912] x1[955267]))
    const-val copySize[1125941]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[1142476]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1142480 'move' coerce_tmp[1142476](1142478 'deref' call_tmp[1125934]))
    (1879413 '=' copySize[1125941] coerce_tmp[1142476])
    (1125943 'noop')
    {
      (1125972 'move' buff[1125814](1142509 call chpl__initCopy[954091] copyBuf[1125929]))
      (1125979 'move' buffSize[1125825] copySize[1125941])
    }
    const-val call_tmp[1126181]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1126183 'move' call_tmp[1126181](1126186 call size[1035850] r2[1125750]))
    const-val buffLen[1126189]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1126191 'move' buffLen[1126189] call_tmp[1126181])
    ref call_tmp[1126198]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
    (1126200 'move' call_tmp[1126198](1126203 call this[954152] buff[1125814] buffLen[1126189]))
    const-val coerce_tmp[1142516]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1142522 'move' coerce_tmp[1142516](1142518 'cast' uint(8)[100] 0))
    (1126206 call =[435391] call_tmp[1126198] coerce_tmp[1142516])
    val call_tmp[1126212]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val numCodepoints[1126235]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1126237 'move' numCodepoints[1126235] numChars[1125762])
      const-val call_tmp[1126249]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1126251 'move' call_tmp[1126249](1126254 call ==[435671] numCodepoints[1126235] -1))
      const-val call_tmp[1126257]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1126259 'move' call_tmp[1126257] call_tmp[1126249])
      if call_tmp[1126257]
      {
        const-val call_tmp[1126266]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1126268 'move' call_tmp[1126266](1126271 call countNumCodepoints[181436] buff[1125814] buffLen[1126189]))
        (1126275 call =[435370] numCodepoints[1126235] call_tmp[1126266])
      }
      const-val call_tmp[1126283]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1862768]:string[26] "temp"
      (1126288 call chpl_createStringWithOwnedBufferNV[30676] buff[1125814] buffLen[1126189] buffSize[1125825] numCodepoints[1126235] ret_tmp[1862768])
      (1862771 'move' call_tmp[1126283] ret_tmp[1862768])
      (1126297 'move' ret[1125665] call_tmp[1126283])
      (1879422 call chpl__autoDestroy[1565916] tmp[1125912])
      (1879425 call chpl__autoDestroy[1383553] r2[1125750])
      (1879428 call chpl__autoDestroy[1641462] tmp[1125733])
      gotoReturn _end_getSlice[1126332] _end_getSlice[1126332]
    }
    (1879431 call chpl__autoDestroy[1565916] tmp[1125912])
    (1879434 call chpl__autoDestroy[1383553] r2[1125750])
    (1879437 call chpl__autoDestroy[1641462] tmp[1125733])
    label _end_getSlice[1126332]
    (1867890 '=' _retArg[1867888] ret[1125665])
    (1867894 return _void[55])
  }
  function getSlice[1143820](const  ref arg x[1143822]:_ref(string)[938000], const in arg r[1143824]:range(byteIndex,boundedLow,false)[1143464], ref arg _retArg[1868092]:_ref(string)[938000]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1143826]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[1143836]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1143847]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1143849 'move' call_tmp[1143847](1143855 call isEmpty[35064] x[1143822]))
    const-val call_tmp[1143856]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1143858 'move' call_tmp[1143856] call_tmp[1143847])
    if call_tmp[1143856]
    {
      const-val ret[1143865]:string[26] "dead at end of block" "insert auto destroy"
      val call_tmp[1143867]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1156507 call init[30763] ret[1143865])
      (1143877 'move' ret[1143826] ret[1143865])
      gotoReturn _end_getSlice[1144493] _end_getSlice[1144493]
    }
    const-val call_tmp[1143886]:(range(int(64),bounded,false),int(64))[1084985] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1868100]:(range(int(64),bounded,false),int(64))[1084985] "temp"
    (1143891 call getView[1144502] x[1143822] r[1143824] ret_tmp[1868100])
    (1868103 'move' call_tmp[1143886] ret_tmp[1868100])
    const-val tmp[1143894]:(range(int(64),bounded,false),int(64))[1084985] "dead at end of block" "const" "insert auto destroy" "temp"
    (1143896 'move' tmp[1143894] call_tmp[1143886])
    1
    ref call_tmp[1143904]:_ref(range(int(64),bounded,false))[1026919] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1143906 'move' call_tmp[1143904](1156362 '.' tmp[1143894] x0[1084981]))
    const-val r2[1143911]:range(int(64),bounded,false)[1026875] "dead at end of block" "const" "insert auto destroy"
    (1143913 'move' r2[1143911](1868096 call chpl__initCopy[1085067] call_tmp[1143904]))
    ref call_tmp[1143916]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1143918 'move' call_tmp[1143916](1156368 '.' tmp[1143894] x1[1084983]))
    const-val numChars[1143923]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1156373]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1156377 'move' coerce_tmp[1156373](1156375 'deref' call_tmp[1143916]))
    (1879547 '=' numChars[1143923] coerce_tmp[1156373])
    (1143925 'noop')
    const-val call_tmp[1143929]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1143931 'move' call_tmp[1143929](1143934 call size[1035850] r2[1143911]))
    const-val call_tmp[1143937]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1143939 'move' call_tmp[1143937](1143942 call <=[437055] call_tmp[1143929] 0))
    const-val call_tmp[1143945]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1143947 'move' call_tmp[1143945] call_tmp[1143937])
    if call_tmp[1143945]
    {
      const-val ret[1143954]:string[26] "dead at end of block" "insert auto destroy"
      val call_tmp[1143956]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1156512 call init[30763] ret[1143954])
      (1143966 'move' ret[1143826] ret[1143954])
      (1879556 call chpl__autoDestroy[1383553] r2[1143911])
      (1879559 call chpl__autoDestroy[1641462] tmp[1143894])
      gotoReturn _end_getSlice[1144493] _end_getSlice[1144493]
    }
    val buff[1143975]:c_ptr(uint(8))[937484] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1143977]:c_ptr(uint(8))[937484] "dead after last mention" "maybe param" "temp" "type variable"
    const-val buffSize[1143986]:int(64)[13] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1143988]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    const-val call_tmp[1143997]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1143999 'move' call_tmp[1143997](1144002 call high[1028680] r2[1143911]))
    const-val call_tmp[1144005]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1144007 'move' call_tmp[1144005](1144010 call low[1028472] r2[1143911]))
    const-val call_tmp[1144013]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1144015 'move' call_tmp[1144013](1144018 call -[440459] call_tmp[1143997] call_tmp[1144005]))
    const-val call_tmp[1144021]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1144023 'move' call_tmp[1144021](1144026 call +[949727] call_tmp[1144013]))
    const-val copyLen[1144029]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1144031 'move' copyLen[1144029] call_tmp[1144021])
    ref call_tmp[1144035]:_ref(c_ptr(uint(8)))[937493] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1144037 'move' call_tmp[1144035](1144040 call buff[758025] x[1143822]))
    const-val call_tmp[1144043]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1144045 'move' call_tmp[1144043](1144048 call low[1028472] r2[1143911]))
    ref call_tmp[1144051]:_ref(int(32))[936687] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1144053 'move' call_tmp[1144051](1144056 call locale_id[758103] x[1143822]))
    const-val call_tmp[1144059]:(c_ptr(uint(8)),int(64))[955269] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1156392]:c_ptr(uint(8))[937484] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1156396 'move' coerce_tmp[1156392](1156394 'deref' call_tmp[1144035]))
    const-val coerce_tmp[1156398]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1156402 'move' coerce_tmp[1156398](1156400 'deref' call_tmp[1144051]))
    const-val ret_tmp[1864836]:(c_ptr(uint(8)),int(64))[955269] "temp"
    (1144064 call bufferCopy[172974] coerce_tmp[1156392] call_tmp[1144043] copyLen[1144029] coerce_tmp[1156398] ret_tmp[1864836])
    (1864839 'move' call_tmp[1144059] ret_tmp[1864836])
    const-val tmp[1144073]:(c_ptr(uint(8)),int(64))[955269] "dead at end of block" "insert auto destroy" "temp"
    (1144075 'move' tmp[1144073] call_tmp[1144059])
    1
    ref call_tmp[1144083]:_ref(c_ptr(uint(8)))[937493] "dead at end of block" "maybe param" "temp"
    (1144085 'move' call_tmp[1144083](1156412 '.' tmp[1144073] x0[955265]))
    val copyBuf[1144090]:c_ptr(uint(8))[937484] "dead at end of block" "insert auto destroy"
    val coerce_tmp[1156417]:c_ptr(uint(8))[937484] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1156421 'move' coerce_tmp[1156417](1156419 'deref' call_tmp[1144083]))
    (1879550 '=' copyBuf[1144090] coerce_tmp[1156417])
    (1144092 'noop')
    ref call_tmp[1144095]:_ref(int(64))[936633] "dead at end of block" "maybe param" "temp"
    (1144097 'move' call_tmp[1144095](1156426 '.' tmp[1144073] x1[955267]))
    const-val copySize[1144102]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[1156431]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1156435 'move' coerce_tmp[1156431](1156433 'deref' call_tmp[1144095]))
    (1879553 '=' copySize[1144102] coerce_tmp[1156431])
    (1144104 'noop')
    {
      (1144133 'move' buff[1143975](1156464 call chpl__initCopy[954091] copyBuf[1144090]))
      (1144140 'move' buffSize[1143986] copySize[1144102])
    }
    const-val call_tmp[1144342]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1144344 'move' call_tmp[1144342](1144347 call size[1035850] r2[1143911]))
    const-val buffLen[1144350]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1144352 'move' buffLen[1144350] call_tmp[1144342])
    ref call_tmp[1144359]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
    (1144361 'move' call_tmp[1144359](1144364 call this[954152] buff[1143975] buffLen[1144350]))
    const-val coerce_tmp[1156471]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1156477 'move' coerce_tmp[1156471](1156473 'cast' uint(8)[100] 0))
    (1144367 call =[435391] call_tmp[1144359] coerce_tmp[1156471])
    val call_tmp[1144373]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val numCodepoints[1144396]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1144398 'move' numCodepoints[1144396] numChars[1143923])
      const-val call_tmp[1144410]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1144412 'move' call_tmp[1144410](1144415 call ==[435671] numCodepoints[1144396] -1))
      const-val call_tmp[1144418]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1144420 'move' call_tmp[1144418] call_tmp[1144410])
      if call_tmp[1144418]
      {
        const-val call_tmp[1144427]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1144429 'move' call_tmp[1144427](1144432 call countNumCodepoints[181436] buff[1143975] buffLen[1144350]))
        (1144436 call =[435370] numCodepoints[1144396] call_tmp[1144427])
      }
      const-val call_tmp[1144444]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1862774]:string[26] "temp"
      (1144449 call chpl_createStringWithOwnedBufferNV[30676] buff[1143975] buffLen[1144350] buffSize[1143986] numCodepoints[1144396] ret_tmp[1862774])
      (1862777 'move' call_tmp[1144444] ret_tmp[1862774])
      (1144458 'move' ret[1143826] call_tmp[1144444])
      (1879562 call chpl__autoDestroy[1565916] tmp[1144073])
      (1879565 call chpl__autoDestroy[1383553] r2[1143911])
      (1879568 call chpl__autoDestroy[1641462] tmp[1143894])
      gotoReturn _end_getSlice[1144493] _end_getSlice[1144493]
    }
    (1879571 call chpl__autoDestroy[1565916] tmp[1144073])
    (1879574 call chpl__autoDestroy[1383553] r2[1143911])
    (1879577 call chpl__autoDestroy[1641462] tmp[1143894])
    label _end_getSlice[1144493]
    (1868094 '=' _retArg[1868092] ret[1143826])
    (1868098 return _void[55])
  }
  function getSlice[1185336](const  ref arg x[1185338]:_ref(string)[938000], const in arg r[1185340]:range(byteIndex,boundedHigh,false)[1184980], ref arg _retArg[1868426]:_ref(string)[938000]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1185342]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[1185352]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1185363]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1185365 'move' call_tmp[1185363](1185371 call isEmpty[35064] x[1185338]))
    const-val call_tmp[1185372]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1185374 'move' call_tmp[1185372] call_tmp[1185363])
    if call_tmp[1185372]
    {
      const-val ret[1185381]:string[26] "dead at end of block" "insert auto destroy"
      val call_tmp[1185383]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1203810 call init[30763] ret[1185381])
      (1185393 'move' ret[1185342] ret[1185381])
      gotoReturn _end_getSlice[1186009] _end_getSlice[1186009]
    }
    const-val call_tmp[1185402]:(range(int(64),bounded,false),int(64))[1084985] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1868434]:(range(int(64),bounded,false),int(64))[1084985] "temp"
    (1185407 call getView[1186018] x[1185338] r[1185340] ret_tmp[1868434])
    (1868437 'move' call_tmp[1185402] ret_tmp[1868434])
    const-val tmp[1185410]:(range(int(64),bounded,false),int(64))[1084985] "dead at end of block" "const" "insert auto destroy" "temp"
    (1185412 'move' tmp[1185410] call_tmp[1185402])
    1
    ref call_tmp[1185420]:_ref(range(int(64),bounded,false))[1026919] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1185422 'move' call_tmp[1185420](1203665 '.' tmp[1185410] x0[1084981]))
    const-val r2[1185427]:range(int(64),bounded,false)[1026875] "dead at end of block" "const" "insert auto destroy"
    (1185429 'move' r2[1185427](1868430 call chpl__initCopy[1085067] call_tmp[1185420]))
    ref call_tmp[1185432]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1185434 'move' call_tmp[1185432](1203671 '.' tmp[1185410] x1[1084983]))
    const-val numChars[1185439]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1203676]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1203680 'move' coerce_tmp[1203676](1203678 'deref' call_tmp[1185432]))
    (1881816 '=' numChars[1185439] coerce_tmp[1203676])
    (1185441 'noop')
    const-val call_tmp[1185445]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1185447 'move' call_tmp[1185445](1185450 call size[1035850] r2[1185427]))
    const-val call_tmp[1185453]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1185455 'move' call_tmp[1185453](1185458 call <=[437055] call_tmp[1185445] 0))
    const-val call_tmp[1185461]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1185463 'move' call_tmp[1185461] call_tmp[1185453])
    if call_tmp[1185461]
    {
      const-val ret[1185470]:string[26] "dead at end of block" "insert auto destroy"
      val call_tmp[1185472]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1203815 call init[30763] ret[1185470])
      (1185482 'move' ret[1185342] ret[1185470])
      (1881825 call chpl__autoDestroy[1383553] r2[1185427])
      (1881828 call chpl__autoDestroy[1641462] tmp[1185410])
      gotoReturn _end_getSlice[1186009] _end_getSlice[1186009]
    }
    val buff[1185491]:c_ptr(uint(8))[937484] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1185493]:c_ptr(uint(8))[937484] "dead after last mention" "maybe param" "temp" "type variable"
    const-val buffSize[1185502]:int(64)[13] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1185504]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    const-val call_tmp[1185513]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1185515 'move' call_tmp[1185513](1185518 call high[1028680] r2[1185427]))
    const-val call_tmp[1185521]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1185523 'move' call_tmp[1185521](1185526 call low[1028472] r2[1185427]))
    const-val call_tmp[1185529]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1185531 'move' call_tmp[1185529](1185534 call -[440459] call_tmp[1185513] call_tmp[1185521]))
    const-val call_tmp[1185537]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1185539 'move' call_tmp[1185537](1185542 call +[949727] call_tmp[1185529]))
    const-val copyLen[1185545]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1185547 'move' copyLen[1185545] call_tmp[1185537])
    ref call_tmp[1185551]:_ref(c_ptr(uint(8)))[937493] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1185553 'move' call_tmp[1185551](1185556 call buff[758025] x[1185338]))
    const-val call_tmp[1185559]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1185561 'move' call_tmp[1185559](1185564 call low[1028472] r2[1185427]))
    ref call_tmp[1185567]:_ref(int(32))[936687] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1185569 'move' call_tmp[1185567](1185572 call locale_id[758103] x[1185338]))
    const-val call_tmp[1185575]:(c_ptr(uint(8)),int(64))[955269] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1203695]:c_ptr(uint(8))[937484] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1203699 'move' coerce_tmp[1203695](1203697 'deref' call_tmp[1185551]))
    const-val coerce_tmp[1203701]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1203705 'move' coerce_tmp[1203701](1203703 'deref' call_tmp[1185567]))
    const-val ret_tmp[1864842]:(c_ptr(uint(8)),int(64))[955269] "temp"
    (1185580 call bufferCopy[172974] coerce_tmp[1203695] call_tmp[1185559] copyLen[1185545] coerce_tmp[1203701] ret_tmp[1864842])
    (1864845 'move' call_tmp[1185575] ret_tmp[1864842])
    const-val tmp[1185589]:(c_ptr(uint(8)),int(64))[955269] "dead at end of block" "insert auto destroy" "temp"
    (1185591 'move' tmp[1185589] call_tmp[1185575])
    1
    ref call_tmp[1185599]:_ref(c_ptr(uint(8)))[937493] "dead at end of block" "maybe param" "temp"
    (1185601 'move' call_tmp[1185599](1203715 '.' tmp[1185589] x0[955265]))
    val copyBuf[1185606]:c_ptr(uint(8))[937484] "dead at end of block" "insert auto destroy"
    val coerce_tmp[1203720]:c_ptr(uint(8))[937484] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1203724 'move' coerce_tmp[1203720](1203722 'deref' call_tmp[1185599]))
    (1881819 '=' copyBuf[1185606] coerce_tmp[1203720])
    (1185608 'noop')
    ref call_tmp[1185611]:_ref(int(64))[936633] "dead at end of block" "maybe param" "temp"
    (1185613 'move' call_tmp[1185611](1203729 '.' tmp[1185589] x1[955267]))
    const-val copySize[1185618]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[1203734]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1203738 'move' coerce_tmp[1203734](1203736 'deref' call_tmp[1185611]))
    (1881822 '=' copySize[1185618] coerce_tmp[1203734])
    (1185620 'noop')
    {
      (1185649 'move' buff[1185491](1203767 call chpl__initCopy[954091] copyBuf[1185606]))
      (1185656 'move' buffSize[1185502] copySize[1185618])
    }
    const-val call_tmp[1185858]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1185860 'move' call_tmp[1185858](1185863 call size[1035850] r2[1185427]))
    const-val buffLen[1185866]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1185868 'move' buffLen[1185866] call_tmp[1185858])
    ref call_tmp[1185875]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
    (1185877 'move' call_tmp[1185875](1185880 call this[954152] buff[1185491] buffLen[1185866]))
    const-val coerce_tmp[1203774]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1203780 'move' coerce_tmp[1203774](1203776 'cast' uint(8)[100] 0))
    (1185883 call =[435391] call_tmp[1185875] coerce_tmp[1203774])
    val call_tmp[1185889]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val numCodepoints[1185912]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1185914 'move' numCodepoints[1185912] numChars[1185439])
      const-val call_tmp[1185926]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1185928 'move' call_tmp[1185926](1185931 call ==[435671] numCodepoints[1185912] -1))
      const-val call_tmp[1185934]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1185936 'move' call_tmp[1185934] call_tmp[1185926])
      if call_tmp[1185934]
      {
        const-val call_tmp[1185943]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1185945 'move' call_tmp[1185943](1185948 call countNumCodepoints[181436] buff[1185491] buffLen[1185866]))
        (1185952 call =[435370] numCodepoints[1185912] call_tmp[1185943])
      }
      const-val call_tmp[1185960]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1862780]:string[26] "temp"
      (1185965 call chpl_createStringWithOwnedBufferNV[30676] buff[1185491] buffLen[1185866] buffSize[1185502] numCodepoints[1185912] ret_tmp[1862780])
      (1862783 'move' call_tmp[1185960] ret_tmp[1862780])
      (1185974 'move' ret[1185342] call_tmp[1185960])
      (1881831 call chpl__autoDestroy[1565916] tmp[1185589])
      (1881834 call chpl__autoDestroy[1383553] r2[1185427])
      (1881837 call chpl__autoDestroy[1641462] tmp[1185410])
      gotoReturn _end_getSlice[1186009] _end_getSlice[1186009]
    }
    (1881840 call chpl__autoDestroy[1565916] tmp[1185589])
    (1881843 call chpl__autoDestroy[1383553] r2[1185427])
    (1881846 call chpl__autoDestroy[1641462] tmp[1185410])
    label _end_getSlice[1186009]
    (1868428 '=' _retArg[1868426] ret[1185342])
    (1868432 return _void[55])
  }
  function doReplace[1181075](const  ref arg x[1181077]:_ref(string)[938000], const  ref arg needle[1181082]:string[26], const  ref arg replacement[1181087]:string[26], const in arg count[1181093]:int(64)[13], ref arg _retArg[1868354]:_ref(string)[938000]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1181098]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[1181106]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1181117]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val _idxt[1181123]:byteIndex[28173] "dead at end of block" "insert auto destroy" "type variable"
    val call_tmp[1181128]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1181139]:string[26] "dead after last mention" "maybe param" "temp" "type variable"
    val result[1181145]:string[26] "dead at end of block" "insert auto destroy"
    (1181147 call init=[30774] result[1181145] x[1181077])
    val found[1181152]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1181154 'move' found[1181152] 0)
    val startIdx[1181159]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (1181161 call init=[28148] startIdx[1181159] 0)
    const-val call_tmp[1181166]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1863106]:string[26] "temp"
    (1181174 call localize[32889] needle[1181082] ret_tmp[1863106])
    (1863109 'move' call_tmp[1181166] ret_tmp[1863106])
    val call_tmp[1181175]:string[26] "dead after last mention" "maybe param" "temp" "type variable"
    const-val localNeedle[1181181]:string[26] "dead at end of block" "const" "insert auto destroy"
    (1181183 'move' localNeedle[1181181] call_tmp[1181166])
    const-val call_tmp[1181188]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1863112]:string[26] "temp"
    (1181196 call localize[32889] replacement[1181087] ret_tmp[1863112])
    (1863115 'move' call_tmp[1181188] ret_tmp[1863112])
    val call_tmp[1181197]:string[26] "dead after last mention" "maybe param" "temp" "type variable"
    const-val localReplacement[1181203]:string[26] "dead at end of block" "const" "insert auto destroy"
    (1181205 'move' localReplacement[1181203] call_tmp[1181188])
    {
      val tmp[1181212]:bool[10] "dead after last mention" "temp"
      const-val tmp[1181214]:bool[10] "dead after last mention" "maybe param" "temp"
      (1181216 'move' tmp[1181214](1181219 call <[948459] count[1181093]))
      val tmp[1181235]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1181237]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1181239]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1181241 'move' call_tmp[1181239] tmp[1181214])
      (1181246 'move' tmp[1181237] call_tmp[1181239])
      if tmp[1181237]
      {
        (1181253 'move' tmp[1181235] 1)
      }
      {
        const-val tmp[1181259]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1181261]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1181263 'move' call_tmp[1181261](1181266 call <[437495] found[1181152] count[1181093]))
        (1181269 'move' tmp[1181259] call_tmp[1181261])
        (1181274 'move' tmp[1181235] tmp[1181259])
      }
      (1181280 'move' tmp[1181212] tmp[1181235])
      WhileDo[1181285] hazard
      {
        {
          const-val call_tmp[1181288]:range(byteIndex,boundedLow,false)[1143464] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1868014]:range(byteIndex,boundedLow,false)[1143464] "temp"
          (1181293 call chpl_build_low_bounded_range[1142771] startIdx[1181159] ret_tmp[1868014])
          (1868017 'move' call_tmp[1181288] ret_tmp[1868014])
          const-val call_tmp[1181295]:byteIndex[28173] "dead at end of block" "maybe param" "temp"
          const-val ret_tmp[1868360]:byteIndex[28173] "temp"
          (1181303 call find[1181707] result[1181145] localNeedle[1181181] call_tmp[1181288] ret_tmp[1868360])
          (1868363 'move' call_tmp[1181295] ret_tmp[1868360])
          const-val idx[1181306]:byteIndex[28173] "dead at end of block" "const" "insert auto destroy"
          (1181308 'move' idx[1181306] call_tmp[1181295])
          const-val call_tmp[1181322]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1181324 'move' call_tmp[1181322](1181327 call ==[29469] idx[1181306] -1))
          const-val call_tmp[1181330]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1181332 'move' call_tmp[1181330] call_tmp[1181322])
          if call_tmp[1181330]
          {
            (1881701 call chpl__autoDestroy[1562538] idx[1181306])
            (1881704 call chpl__autoDestroy[1643589] call_tmp[1181288])
            break _breakLabel[1181525] _breakLabel[1181525]
          }
          (1181343 call +=[451358] found[1181152] 1)
          const-val call_tmp[1181348]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1851782]:byteIndex[28173] "temp"
          (1181353 call -[28857] idx[1181306] 1 ret_tmp[1851782])
          (1851785 'move' call_tmp[1181348] ret_tmp[1851782])
          const-val call_tmp[1181356]:range(byteIndex,boundedHigh,false)[1184980] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1868372]:range(byteIndex,boundedHigh,false)[1184980] "temp"
          (1181361 call chpl_build_high_bounded_range[1184287] call_tmp[1181348] ret_tmp[1868372])
          (1868375 'move' call_tmp[1181356] ret_tmp[1868372])
          const-val call_tmp[1181363]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1868408]:string[26] "temp"
          (1181368 call this[1185300] result[1181145] call_tmp[1181356] ret_tmp[1868408])
          (1868411 'move' call_tmp[1181363] ret_tmp[1868408])
          const-val call_tmp[1181370]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1863664]:string[26] "temp"
          (1181375 call +[38345] call_tmp[1181363] localReplacement[1181203] ret_tmp[1863664])
          (1863667 'move' call_tmp[1181370] ret_tmp[1863664])
          const-val call_tmp[1181378]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (1181380 'move' call_tmp[1181378](1181383 call numBytes[32810] localNeedle[1181181]))
          const-val call_tmp[1181386]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1851740]:byteIndex[28173] "temp"
          (1181391 call +[28725] idx[1181306] call_tmp[1181378] ret_tmp[1851740])
          (1851743 'move' call_tmp[1181386] ret_tmp[1851740])
          const-val call_tmp[1181394]:range(byteIndex,boundedLow,false)[1143464] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1868020]:range(byteIndex,boundedLow,false)[1143464] "temp"
          (1181399 call chpl_build_low_bounded_range[1142771] call_tmp[1181386] ret_tmp[1868020])
          (1868023 'move' call_tmp[1181394] ret_tmp[1868020])
          const-val call_tmp[1181401]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1868074]:string[26] "temp"
          (1181406 call this[1143784] result[1181145] call_tmp[1181394] ret_tmp[1868074])
          (1868077 'move' call_tmp[1181401] ret_tmp[1868074])
          const-val call_tmp[1181408]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1863670]:string[26] "temp"
          (1181413 call +[38345] call_tmp[1181370] call_tmp[1181401] ret_tmp[1863670])
          (1863673 'move' call_tmp[1181408] ret_tmp[1863670])
          (1181417 call =[38272] result[1181145] call_tmp[1181408])
          (1881728 call chpl__autoDestroy[1562275] call_tmp[1181408])
          (1881725 call chpl__autoDestroy[1562275] call_tmp[1181401])
          (1881722 call chpl__autoDestroy[1643589] call_tmp[1181394])
          (1881719 call chpl__autoDestroy[1562538] call_tmp[1181386])
          (1881716 call chpl__autoDestroy[1562275] call_tmp[1181370])
          (1881713 call chpl__autoDestroy[1562275] call_tmp[1181363])
          (1881710 call chpl__autoDestroy[1644646] call_tmp[1181356])
          (1881707 call chpl__autoDestroy[1562538] call_tmp[1181348])
          const-val call_tmp[1181428]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (1181430 'move' call_tmp[1181428](1181433 call numBytes[32810] localReplacement[1181203]))
          const-val call_tmp[1181436]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1851746]:byteIndex[28173] "temp"
          (1181441 call +[28725] idx[1181306] call_tmp[1181428] ret_tmp[1851746])
          (1851749 'move' call_tmp[1181436] ret_tmp[1851746])
          (1181445 call =[38194] startIdx[1181159] call_tmp[1181436])
          (1881732 call chpl__autoDestroy[1562538] call_tmp[1181436])
          (1881735 call chpl__autoDestroy[1562538] idx[1181306])
          (1881738 call chpl__autoDestroy[1643589] call_tmp[1181288])
        }
        label _continueLabel[1181452]
        const-val tmp[1181454]:bool[10] "dead after last mention" "maybe param" "temp"
        (1181456 'move' tmp[1181454](1181459 call <[948459] count[1181093]))
        val tmp[1181475]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        const-val tmp[1181477]:bool[10] "dead after last mention" "maybe param" "temp"
        const-val call_tmp[1181479]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1181481 'move' call_tmp[1181479] tmp[1181454])
        (1181486 'move' tmp[1181477] call_tmp[1181479])
        if tmp[1181477]
        {
          (1181493 'move' tmp[1181475] 1)
        }
        {
          const-val tmp[1181499]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
          const-val call_tmp[1181501]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1181503 'move' call_tmp[1181501](1181506 call <[437495] found[1181152] count[1181093]))
          (1181509 'move' tmp[1181499] call_tmp[1181501])
          (1181514 'move' tmp[1181475] tmp[1181499])
        }
        (1181520 'move' tmp[1181212] tmp[1181475])
        tmp[1181212]
      }
      label _breakLabel[1181525]
    }
    val call_tmp[1181527]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1203841 'move' ret[1181098] result[1181145])
    (1881741 call chpl__autoDestroy[1562275] localReplacement[1181203])
    (1881744 call chpl__autoDestroy[1562275] localNeedle[1181181])
    (1881747 call chpl__autoDestroy[1562538] startIdx[1181159])
    gotoReturn _end_doReplace[1181542] _end_doReplace[1181542]
    label _end_doReplace[1181542]
    (1868356 '=' _retArg[1868354] ret[1181098])
    (1868358 return _void[55])
  }
  function doSplitWSNoEnc[1124517](const  ref arg x[1124519]:_ref(string)[938000], const in arg maxsplit[1124525]:int(64)[13], ref arg _retArg[1867842]:_ref(_ir_doSplitWSNoEnc)[1124653]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "resolved" "no return value for void"
  {
    val _ir[2067292]:_ir_doSplitWSNoEnc[1124542] "temp"
    (2067294 '.=' _ir[2067292] F0_x[2066266] x[1124519])
    (2067298 '.=' _ir[2067292] F1_maxsplit[2066270] maxsplit[1124525])
    (2067302 '=' _retArg[1867842] _ir[2067292])
    (2067305 return _void[55])
  }
  type _ic_doSplitWSNoEnc[1124536] val super[1124537]:object[22] "super class" val more[1124539]:int(64)[13] ref F0_x[2066264]:_ref(string)[938000] const-val F1_maxsplit[2066268]:int(64)[13] const F2_localx[2066272]:string[26] val F3_done[2066274]:bool[10] val F4_yieldChunk[2066276]:bool[10] const-val F5_chunk[2066278]:string[26] const F6_noSplits[2066280]:bool[10] const F7_limitSplits[2066282]:bool[10] val F8_splitCount[2066284]:int(64)[13] const F9_iEnd[2066286]:int(64)[13] val F10_inChunk[2066288]:bool[10] val F11_chunkStart[2066290]:int(64)[13] val F12__iterator[2066292]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108627] val F13_call_tmp[2066294]:range(int(64),bounded,false)[1026875] val F14__iterator[2066296]:_ic_these_range_int64_t_bounded_F[1096764] val F15__iterator[2066298]:_ic_chpl_bytes__ref_string[1108317] val F16__indexOfInterest[2066300]:(int(64),uint(8))[1111101] const-val F17_ret_tmp[2066302]:range(int(64),boundedLow,false)[1087626] const-val F18_ret_tmp[2066304]:string[26] const-val F19_ret_tmp[2066306]:range(int(64),boundedLow,false)[1087626] const-val F20_ret_tmp[2066308]:string[26] const-val F21_ret_tmp[2066310]:range(int(64),bounded,false)[1026875] const-val F22_ret_tmp[2066312]:string[26] const-val F23_ret_tmp[2066314]:range(int(64),boundedLow,false)[1087626] const-val F24_ret_tmp[2066316]:string[26] val value[2066318]:string[26]
  type _ir_doSplitWSNoEnc[1124542] ref F0_x[2066266]:_ref(string)[938000] const-val F1_maxsplit[2066270]:int(64)[13]
  function _getIterator[1124551](const  ref arg ir[1124553]:_ir_doSplitWSNoEnc[1124542]) : _ic_doSplitWSNoEnc[1124536] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[1124660]:_ic_doSplitWSNoEnc[1124536] "dead after last mention" "RVV" "temp"
    val _ic_[1124543]:_ic_doSplitWSNoEnc[1124536] "dead after last mention" "temp"
    const-val call_tmp[1124667]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1124670 'move' call_tmp[1124667](1124682 'sizeof_bundle' _ic_doSplitWSNoEnc[1124536]))
    const-val cast_tmp[1124685]:c_void_ptr[149] "dead after last mention" "temp"
    (1124687 'move' cast_tmp[1124685](1124548 call chpl_here_alloc[187788] call_tmp[1124667] 35))
    (1124556 'move' _ic_[1124543](1124689 'cast' _ic_doSplitWSNoEnc[1124536] cast_tmp[1124685]))
    (1124558 'setcid' _ic_[1124543])
    (1124665 'move' ret[1124660] _ic_[1124543])
    (2067308 '.=' ret[1124660] more[1124539] 1)
    ref tmp[2067312]:_ref(string)[938000] "temp"
    (2067317 'move' tmp[2067312](2067313 '.v' ir[1124553] F0_x[2066266]))
    (2067319 '.=' ret[1124660] F0_x[2066264] tmp[2067312])
    const-val tmp[2067323]:int(64)[13] "temp"
    (2067328 'move' tmp[2067323](2067324 '.v' ir[1124553] F1_maxsplit[2066270]))
    (2067330 '.=' ret[1124660] F1_maxsplit[2066268] tmp[2067323])
    (1124662 return ret[1124660])
  }
  function doSearchNoEnc[1030114](const  ref arg x[1030116]:_ref(string)[938000], const  ref arg needle[1030121]:string[26], const in arg region[1030123]:range(byteIndex,bounded,false)[1025853]) : int(64)[13] "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1030131]:int(64)[13] "dead after last mention" "RVV" "temp"
    val call_tmp[1030143]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val ret[1030161]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1030163 'move' ret[1030161] -1)
    const-val tmp[1030168]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1030170]:_ref(int(32))[936687] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1030172 'move' call_tmp[1030170](1030175 call locale_id[758103] x[1030116]))
    const-val call_tmp[1030178]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1031044]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1031048 'move' coerce_tmp[1031044](1031046 'deref' call_tmp[1030170]))
    (1030180 'move' call_tmp[1030178](1030183 call chpl_buildLocaleID[209470] coerce_tmp[1031044] c_sublocid_any[89878]))
    const-val call_tmp[1030186]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (1030188 'move' call_tmp[1030186](1030190 'chpl_on_locale_num' call_tmp[1030178]))
    (1030192 'move' tmp[1030168] call_tmp[1030186])
    val needle_data[2145449]:__serializeHelper[28089] "temp"
    (2145451 call chpl__serialize[30886] needle[1030121] needle_data[2145449])
    val isdirect[2150591]:bool[10] "temp"
    (2150596 'move' isdirect[2150591](2150593 call chpl_doDirectExecuteOn[187469] tmp[1030168]))
    if isdirect[2150591]
    {
      (2150600 call on_fn[1030199] needle_data[2145449] x[1030116] region[1030123] ret[1030161])
    }
    {
      val _args_foron_fn[2150624]:_class_localson_fn[2150610] "temp"
      (2150628 'move' _args_foron_fn[2150624](2150626 'stack allocate class' _class_localson_fn[2150610]))
      (2150630 '.=' _args_foron_fn[2150624] _0_tmp[2150613] tmp[1030168])
      (2150634 '.=' _args_foron_fn[2150624] _1_needle_data[2150615] needle_data[2145449])
      ref tmp[2150638]:string[26] "temp"
      (2150642 'move' tmp[2150638](2150640 'set reference' x[1030116]))
      (2150644 '.=' _args_foron_fn[2150624] _2_x[2150617] tmp[2150638])
      (2150648 '.=' _args_foron_fn[2150624] _3_region[2150619] region[1030123])
      ref tmp[2150652]:int(64)[13] "temp"
      (2150656 'move' tmp[2150652](2150654 'set reference' ret[1030161]))
      (2150658 '.=' _args_foron_fn[2150624] _4_ret[2150621] tmp[2150652])
      val _args_vforon_fn[2150662]:c_void_ptr[149] "temp"
      (2150666 'move' _args_vforon_fn[2150662](2150664 'cast_to_void_star' _args_foron_fn[2150624]))
      val _args_sizeon_fn[2150668]:int(64)[13] "temp"
      (2150672 'move' _args_sizeon_fn[2150668](2150670 'sizeof_bundle' _class_localson_fn[2150610]))
      on(2150728 call wrapon_fn[2150674] tmp[1030168] _args_vforon_fn[2150662] _args_sizeon_fn[2150668] _args_foron_fn[2150624])
    }
    {
    }
    (1030931 'move' ret[1030131] ret[1030161])
    gotoReturn _end_doSearchNoEnc[1030939] _end_doSearchNoEnc[1030939]
    label _end_doSearchNoEnc[1030939]
    (1030941 return ret[1030131])
  }
  function doSearchNoEnc[1181827](const  ref arg x[1181829]:_ref(string)[938000], const  ref arg needle[1181834]:string[26], const in arg region[1181836]:range(byteIndex,boundedLow,false)[1143464]) : int(64)[13] "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1181844]:int(64)[13] "dead after last mention" "RVV" "temp"
    val call_tmp[1181856]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val ret[1181874]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1181876 'move' ret[1181874] -1)
    const-val tmp[1181881]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1181883]:_ref(int(32))[936687] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1181885 'move' call_tmp[1181883](1181888 call locale_id[758103] x[1181829]))
    const-val call_tmp[1181891]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1182694]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1182698 'move' coerce_tmp[1182694](1182696 'deref' call_tmp[1181883]))
    (1181893 'move' call_tmp[1181891](1181896 call chpl_buildLocaleID[209470] coerce_tmp[1182694] c_sublocid_any[89878]))
    const-val call_tmp[1181899]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (1181901 'move' call_tmp[1181899](1181903 'chpl_on_locale_num' call_tmp[1181891]))
    (1181905 'move' tmp[1181881] call_tmp[1181899])
    val needle_data[2145988]:__serializeHelper[28089] "temp"
    (2145990 call chpl__serialize[30886] needle[1181834] needle_data[2145988])
    val isdirect[2153205]:bool[10] "temp"
    (2153210 'move' isdirect[2153205](2153207 call chpl_doDirectExecuteOn[187469] tmp[1181881]))
    if isdirect[2153205]
    {
      (2153214 call on_fn[1181912] needle_data[2145988] x[1181829] region[1181836] ret[1181874])
    }
    {
      val _args_foron_fn[2153238]:_class_localson_fn[2153224] "temp"
      (2153242 'move' _args_foron_fn[2153238](2153240 'stack allocate class' _class_localson_fn[2153224]))
      (2153244 '.=' _args_foron_fn[2153238] _0_tmp[2153227] tmp[1181881])
      (2153248 '.=' _args_foron_fn[2153238] _1_needle_data[2153229] needle_data[2145988])
      ref tmp[2153252]:string[26] "temp"
      (2153256 'move' tmp[2153252](2153254 'set reference' x[1181829]))
      (2153258 '.=' _args_foron_fn[2153238] _2_x[2153231] tmp[2153252])
      (2153262 '.=' _args_foron_fn[2153238] _3_region[2153233] region[1181836])
      ref tmp[2153266]:int(64)[13] "temp"
      (2153270 'move' tmp[2153266](2153268 'set reference' ret[1181874]))
      (2153272 '.=' _args_foron_fn[2153238] _4_ret[2153235] tmp[2153266])
      val _args_vforon_fn[2153276]:c_void_ptr[149] "temp"
      (2153280 'move' _args_vforon_fn[2153276](2153278 'cast_to_void_star' _args_foron_fn[2153238]))
      val _args_sizeon_fn[2153282]:int(64)[13] "temp"
      (2153286 'move' _args_sizeon_fn[2153282](2153284 'sizeof_bundle' _class_localson_fn[2153224]))
      on(2153342 call wrapon_fn[2153288] tmp[1181881] _args_vforon_fn[2153276] _args_sizeon_fn[2153282] _args_foron_fn[2153238])
    }
    {
    }
    (1182644 'move' ret[1181844] ret[1181874])
    gotoReturn _end_doSearchNoEnc[1182652] _end_doSearchNoEnc[1182652]
    label _end_doSearchNoEnc[1182652]
    (1182654 return ret[1181844])
  }
  function doAppend[979131](ref arg lhs[979133]:_ref(string)[938000], const  ref arg rhs[979138]:_ref(string)[938000]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val call_tmp[979144]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[979155]:_ref(int(64))[936633] "dead after last mention" "maybe param" "reference to a const" "temp"
    (979157 'move' call_tmp[979155](979160 call buffLen[757947] rhs[979138]))
    const-val call_tmp[979163]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[979772]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (979776 'move' coerce_tmp[979772](979774 'deref' call_tmp[979155]))
    (979165 'move' call_tmp[979163](979168 call ==[435671] coerce_tmp[979772] 0))
    const-val call_tmp[979171]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (979173 'move' call_tmp[979171] call_tmp[979163])
    if call_tmp[979171]
    {
      gotoReturn _end_doAppend[979701] _end_doAppend[979701]
    }
    const-val tmp[979183]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[979185]:_ref(int(32))[936687] "dead after last mention" "maybe param" "temp"
    (979187 'move' call_tmp[979185](979190 call locale_id[758103] lhs[979133]))
    const-val call_tmp[979193]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[979780]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (979784 'move' coerce_tmp[979780](979782 'deref' call_tmp[979185]))
    (979195 'move' call_tmp[979193](979198 call chpl_buildLocaleID[209470] coerce_tmp[979780] c_sublocid_any[89878]))
    const-val call_tmp[979201]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (979203 'move' call_tmp[979201](979205 'chpl_on_locale_num' call_tmp[979193]))
    (979207 'move' tmp[979183] call_tmp[979201])
    val isdirect[2149140]:bool[10] "temp"
    (2149145 'move' isdirect[2149140](2149142 call chpl_doDirectExecuteOn[187469] tmp[979183]))
    if isdirect[2149140]
    {
      (2149149 call on_fn[979214] lhs[979133] rhs[979138])
    }
    {
      val _args_foron_fn[2149167]:_class_localson_fn[2149157] "temp"
      (2149171 'move' _args_foron_fn[2149167](2149169 'stack allocate class' _class_localson_fn[2149157]))
      (2149173 '.=' _args_foron_fn[2149167] _0_tmp[2149160] tmp[979183])
      ref tmp[2149177]:string[26] "temp"
      (2149181 'move' tmp[2149177](2149179 'set reference' lhs[979133]))
      (2149183 '.=' _args_foron_fn[2149167] _1_lhs[2149162] tmp[2149177])
      ref tmp[2149187]:string[26] "temp"
      (2149191 'move' tmp[2149187](2149189 'set reference' rhs[979138]))
      (2149193 '.=' _args_foron_fn[2149167] _2_rhs[2149164] tmp[2149187])
      val _args_vforon_fn[2149197]:c_void_ptr[149] "temp"
      (2149201 'move' _args_vforon_fn[2149197](2149199 'cast_to_void_star' _args_foron_fn[2149167]))
      val _args_sizeon_fn[2149203]:int(64)[13] "temp"
      (2149207 'move' _args_sizeon_fn[2149203](2149205 'sizeof_bundle' _class_localson_fn[2149157]))
      on(2149247 call wrapon_fn[2149209] tmp[979183] _args_vforon_fn[2149197] _args_sizeon_fn[2149203] _args_foron_fn[2149167])
    }
    {
    }
    label _end_doAppend[979701]
    (979703 return _void[55])
  }
  function reinitWithNewBuffer[1019969](ref arg lhs[1019971]:_ref(string)[938000], const in arg buff[1019975]:c_ptr(uint(8))[937484], const in arg buffLen[1019977]:int(64)[13], const in arg buffSize[1019979]:int(64)[13], const in arg numCodepoints[1019983]:int(64)[13]) : void[4] "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val tmp[1019989]:bool[10] "dead after last mention" "maybe param" "temp"
    (1019991 'move' tmp[1019989](1019997 call isEmpty[35064] lhs[1019971]))
    val tmp[1020011]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1020013]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1020015]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1020017 'move' call_tmp[1020015] tmp[1019989])
    (1020022 'move' tmp[1020013] call_tmp[1020015])
    if tmp[1020013]
    {
      const-val tmp[1020029]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1020031]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1020033 'move' call_tmp[1020031](1020036 call ==[1020606] buff[1019975] nil[44]))
      (1020039 'move' tmp[1020029] call_tmp[1020031])
      (1020044 'move' tmp[1020011] tmp[1020029])
    }
    {
      (1020050 'move' tmp[1020011] 0)
    }
    const-val call_tmp[1020056]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1020058 'move' call_tmp[1020056] tmp[1020011])
    if call_tmp[1020056]
    {
      gotoReturn _end_reinitWithNewBuffer[1020568] _end_reinitWithNewBuffer[1020568]
    }
    const-val call_tmp[1020068]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1020070 'move' call_tmp[1020068](1020073 call !=[436055] buffLen[1019977] 0))
    const-val call_tmp[1020076]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1020078 'move' call_tmp[1020076] call_tmp[1020068])
    if call_tmp[1020076]
    {
      const-val tmp[1020085]:bool[10] "dead after last mention" "maybe param" "temp"
      ref call_tmp[1020087]:_ref(bool)[937260] "dead after last mention" "maybe param" "temp"
      (1020089 'move' call_tmp[1020087](1020092 call isOwned[758051] lhs[1019971]))
      const-val coerce_tmp[1020636]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1020640 'move' coerce_tmp[1020636](1020638 'deref' call_tmp[1020087]))
      (1020095 'move' tmp[1020085](1020098 call ![7494] coerce_tmp[1020636]))
      val tmp[1020113]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1020115]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1020117]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1020119 'move' call_tmp[1020117] tmp[1020085])
      (1020124 'move' tmp[1020115] call_tmp[1020117])
      if tmp[1020115]
      {
        (1020131 'move' tmp[1020113] 1)
      }
      {
        const-val tmp[1020137]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1020139]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1020141 'move' call_tmp[1020139](1020144 call +[949727] buffLen[1019977]))
        ref call_tmp[1020147]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
        (1020149 'move' call_tmp[1020147](1020152 call buffSize[757973] lhs[1019971]))
        const-val call_tmp[1020155]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1020648]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1020652 'move' coerce_tmp[1020648](1020650 'deref' call_tmp[1020147]))
        (1020157 'move' call_tmp[1020155](1020160 call >[437715] call_tmp[1020139] coerce_tmp[1020648]))
        (1020163 'move' tmp[1020137] call_tmp[1020155])
        (1020168 'move' tmp[1020113] tmp[1020137])
      }
      const-val call_tmp[1020174]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1020176 'move' call_tmp[1020174] tmp[1020113])
      if call_tmp[1020174]
      {
        ref tmp[1020183]:_ref(bool)[937260] "dead after last mention" "maybe param" "temp"
        (1020185 'move' tmp[1020183](1020188 call isOwned[758051] lhs[1019971]))
        val tmp[1020204]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        const-val tmp[1020206]:bool[10] "dead after last mention" "maybe param" "temp"
        const-val call_tmp[1020208]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val tmp[1020659]:bool[10] "dead after last mention" "const" "temp"
        (1020661 'move' tmp[1020659](1020663 'deref' tmp[1020183]))
        (1020210 'move' call_tmp[1020208] tmp[1020659])
        (1020215 'move' tmp[1020206] call_tmp[1020208])
        if tmp[1020206]
        {
          const-val tmp[1020222]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
          const-val call_tmp[1020224]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1020226 'move' call_tmp[1020224](1020232 call isEmpty[35064] lhs[1019971]))
          const-val call_tmp[1020233]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1020235 'move' call_tmp[1020233](1020238 call ![7494] call_tmp[1020224]))
          (1020240 'move' tmp[1020222] call_tmp[1020233])
          (1020245 'move' tmp[1020204] tmp[1020222])
        }
        {
          (1020251 'move' tmp[1020204] 0)
        }
        const-val call_tmp[1020257]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1020259 'move' call_tmp[1020257] tmp[1020204])
        if call_tmp[1020257]
        {
          ref call_tmp[1020266]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "temp"
          (1020268 'move' call_tmp[1020266](1020271 call buff[758025] lhs[1019971]))
          val coerce_tmp[1020668]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1020672 'move' coerce_tmp[1020668](1020670 'deref' call_tmp[1020266]))
          (1020275 call bufferFree[172958] coerce_tmp[1020668])
        }
        const-val call_tmp[1020278]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1020280 'move' call_tmp[1020278](1020283 call +[949727] buffLen[1019977]))
        const-val call_tmp[1020286]:(c_ptr(uint(8)),int(64))[955269] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1865598]:(c_ptr(uint(8)),int(64))[955269] "temp"
        (1020291 call bufferAlloc[955079] call_tmp[1020278] ret_tmp[1865598])
        (1865601 'move' call_tmp[1020286] ret_tmp[1865598])
        const-val tmp[1020293]:(c_ptr(uint(8)),int(64))[955269] "dead at end of block" "const" "insert auto destroy" "temp"
        (1020295 'move' tmp[1020293] call_tmp[1020286])
        1
        ref call_tmp[1020303]:_ref(c_ptr(uint(8)))[937493] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1020305 'move' call_tmp[1020303](1020684 '.' tmp[1020293] x0[955265]))
        const buff[1020310]:c_ptr(uint(8))[937484] "dead at end of block" "const" "insert auto destroy"
        val coerce_tmp[1020689]:c_ptr(uint(8))[937484] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1020693 'move' coerce_tmp[1020689](1020691 'deref' call_tmp[1020303]))
        (1020312 'move' buff[1020310](1020687 call chpl__initCopy[954091] coerce_tmp[1020689]))
        ref call_tmp[1020315]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1020317 'move' call_tmp[1020315](1020698 '.' tmp[1020293] x1[955267]))
        const-val allocSize[1020322]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[1020703]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1020707 'move' coerce_tmp[1020703](1020705 'deref' call_tmp[1020315]))
        (1020324 'move' allocSize[1020322](1020701 call chpl__initCopy[955393] coerce_tmp[1020703]))
        ref call_tmp[1020328]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "temp"
        (1020330 'move' call_tmp[1020328](1020333 call buff[758025] lhs[1019971]))
        (1020337 call =[954274] call_tmp[1020328] buff[1020310])
        ref call_tmp[1020342]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
        (1020344 'move' call_tmp[1020342](1020347 call buffSize[757973] lhs[1019971]))
        (1020351 call =[435370] call_tmp[1020342] allocSize[1020322])
        ref call_tmp[1020356]:_ref(bool)[937260] "dead after last mention" "maybe param" "temp"
        (1020358 'move' call_tmp[1020356](1020361 call isOwned[758051] lhs[1019971]))
        (1020365 call =[435217] call_tmp[1020356] 1)
        (1877578 call chpl__autoDestroy[1565916] tmp[1020293])
      }
      ref call_tmp[1020369]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "temp"
      (1020371 'move' call_tmp[1020369](1020374 call buff[758025] lhs[1019971]))
      val coerce_tmp[1020767]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1020771 'move' coerce_tmp[1020767](1020769 'deref' call_tmp[1020369]))
      (1020378 call bufferMemmoveLocal[1020717] coerce_tmp[1020767] buff[1019975] buffLen[1019977] 0 0)
      ref call_tmp[1020383]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
      ref _this_tmp_[1020893]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "temp"
      (1020895 'move' _this_tmp_[1020893](1020388 call buff[758025] lhs[1019971]))
      val coerce_tmp[1020900]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1020904 'move' coerce_tmp[1020900](1020902 'deref' _this_tmp_[1020893]))
      (1020385 'move' call_tmp[1020383](1020391 call this[954152] coerce_tmp[1020900] buffLen[1019977]))
      const-val coerce_tmp[1020907]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1020913 'move' coerce_tmp[1020907](1020909 'cast' uint(8)[100] 0))
      (1020394 call =[435391] call_tmp[1020383] coerce_tmp[1020907])
    }
    {
      ref tmp[1020398]:_ref(bool)[937260] "dead after last mention" "maybe param" "temp"
      (1020400 'move' tmp[1020398](1020403 call isOwned[758051] lhs[1019971]))
      val tmp[1020419]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1020421]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1020423]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val tmp[1020920]:bool[10] "dead after last mention" "const" "temp"
      (1020922 'move' tmp[1020920](1020924 'deref' tmp[1020398]))
      (1020425 'move' call_tmp[1020423] tmp[1020920])
      (1020430 'move' tmp[1020421] call_tmp[1020423])
      if tmp[1020421]
      {
        const-val tmp[1020437]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1020439]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1020441 'move' call_tmp[1020439](1020447 call isEmpty[35064] lhs[1019971]))
        const-val call_tmp[1020448]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1020450 'move' call_tmp[1020448](1020453 call ![7494] call_tmp[1020439]))
        (1020455 'move' tmp[1020437] call_tmp[1020448])
        (1020460 'move' tmp[1020419] tmp[1020437])
      }
      {
        (1020466 'move' tmp[1020419] 0)
      }
      const-val call_tmp[1020472]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1020474 'move' call_tmp[1020472] tmp[1020419])
      if call_tmp[1020472]
      {
        ref call_tmp[1020481]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "temp"
        (1020483 'move' call_tmp[1020481](1020486 call buff[758025] lhs[1019971]))
        val coerce_tmp[1020929]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1020933 'move' coerce_tmp[1020929](1020931 'deref' call_tmp[1020481]))
        (1020490 call bufferFree[172958] coerce_tmp[1020929])
      }
      ref call_tmp[1020493]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
      (1020495 'move' call_tmp[1020493](1020498 call buffSize[757973] lhs[1019971]))
      (1020502 call =[435370] call_tmp[1020493] 0)
      ref call_tmp[1020506]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "temp"
      (1020508 'move' call_tmp[1020506](1020511 call buff[758025] lhs[1019971]))
      (1020515 call =[954285] call_tmp[1020506] nil[44])
    }
    ref call_tmp[1020519]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
    (1020521 'move' call_tmp[1020519](1020524 call buffLen[757947] lhs[1019971]))
    (1020528 call =[435370] call_tmp[1020519] buffLen[1019977])
    val call_tmp[1020532]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      ref call_tmp[1020555]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
      (1020557 'move' call_tmp[1020555](1020560 call cachedNumCodepoints[757999] lhs[1019971]))
      (1020564 call =[435370] call_tmp[1020555] numCodepoints[1019983])
    }
    label _end_reinitWithNewBuffer[1020568]
    (1020570 return _void[55])
  }
  function reinitWithOwnedBuffer[1021016](ref arg lhs[1021018]:_ref(string)[938000], const in arg buff[1021022]:c_ptr(uint(8))[937484], const in arg buffLen[1021024]:int(64)[13], const in arg buffSize[1021026]:int(64)[13], const in arg numCodepoints[1021030]:int(64)[13]) : void[4] "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val tmp[1021036]:bool[10] "dead after last mention" "maybe param" "temp"
    (1021038 'move' tmp[1021036](1021044 call isEmpty[35064] lhs[1021018]))
    val tmp[1021058]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1021060]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1021062]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1021064 'move' call_tmp[1021062] tmp[1021036])
    (1021069 'move' tmp[1021060] call_tmp[1021062])
    if tmp[1021060]
    {
      const-val tmp[1021076]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1021078]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1021080 'move' call_tmp[1021078](1021083 call ==[1020606] buff[1021022] nil[44]))
      (1021086 'move' tmp[1021076] call_tmp[1021078])
      (1021091 'move' tmp[1021058] tmp[1021076])
    }
    {
      (1021097 'move' tmp[1021058] 0)
    }
    const-val call_tmp[1021103]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1021105 'move' call_tmp[1021103] tmp[1021058])
    if call_tmp[1021103]
    {
      gotoReturn _end_reinitWithOwnedBuffer[1021436] _end_reinitWithOwnedBuffer[1021436]
    }
    const-val call_tmp[1021115]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1021117 'move' call_tmp[1021115](1021120 call !=[436055] buffLen[1021024] 0))
    const-val call_tmp[1021123]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1021125 'move' call_tmp[1021123] call_tmp[1021115])
    if call_tmp[1021123]
    {
      ref tmp[1021132]:_ref(bool)[937260] "dead after last mention" "maybe param" "temp"
      (1021134 'move' tmp[1021132](1021137 call isOwned[758051] lhs[1021018]))
      val tmp[1021153]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1021155]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1021157]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val tmp[1021457]:bool[10] "dead after last mention" "const" "temp"
      (1021459 'move' tmp[1021457](1021461 'deref' tmp[1021132]))
      (1021159 'move' call_tmp[1021157] tmp[1021457])
      (1021164 'move' tmp[1021155] call_tmp[1021157])
      if tmp[1021155]
      {
        const-val tmp[1021171]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1021173]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1021175 'move' call_tmp[1021173](1021181 call isEmpty[35064] lhs[1021018]))
        const-val call_tmp[1021182]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1021184 'move' call_tmp[1021182](1021187 call ![7494] call_tmp[1021173]))
        (1021189 'move' tmp[1021171] call_tmp[1021182])
        (1021194 'move' tmp[1021153] tmp[1021171])
      }
      {
        (1021200 'move' tmp[1021153] 0)
      }
      const-val call_tmp[1021206]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1021208 'move' call_tmp[1021206] tmp[1021153])
      if call_tmp[1021206]
      {
        ref call_tmp[1021215]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "temp"
        (1021217 'move' call_tmp[1021215](1021220 call buff[758025] lhs[1021018]))
        val coerce_tmp[1021466]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1021470 'move' coerce_tmp[1021466](1021468 'deref' call_tmp[1021215]))
        (1021224 call bufferFree[172958] coerce_tmp[1021466])
      }
      ref call_tmp[1021227]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "temp"
      (1021229 'move' call_tmp[1021227](1021232 call buff[758025] lhs[1021018]))
      (1021236 call =[954274] call_tmp[1021227] buff[1021022])
      ref call_tmp[1021240]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
      (1021242 'move' call_tmp[1021240](1021245 call buffSize[757973] lhs[1021018]))
      (1021249 call =[435370] call_tmp[1021240] buffSize[1021026])
    }
    {
      ref tmp[1021253]:_ref(bool)[937260] "dead after last mention" "maybe param" "temp"
      (1021255 'move' tmp[1021253](1021258 call isOwned[758051] lhs[1021018]))
      val tmp[1021274]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1021276]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1021278]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val tmp[1021481]:bool[10] "dead after last mention" "const" "temp"
      (1021483 'move' tmp[1021481](1021485 'deref' tmp[1021253]))
      (1021280 'move' call_tmp[1021278] tmp[1021481])
      (1021285 'move' tmp[1021276] call_tmp[1021278])
      if tmp[1021276]
      {
        const-val tmp[1021292]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1021294]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1021296 'move' call_tmp[1021294](1021302 call isEmpty[35064] lhs[1021018]))
        const-val call_tmp[1021303]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1021305 'move' call_tmp[1021303](1021308 call ![7494] call_tmp[1021294]))
        (1021310 'move' tmp[1021292] call_tmp[1021303])
        (1021315 'move' tmp[1021274] tmp[1021292])
      }
      {
        (1021321 'move' tmp[1021274] 0)
      }
      const-val call_tmp[1021327]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1021329 'move' call_tmp[1021327] tmp[1021274])
      if call_tmp[1021327]
      {
        ref call_tmp[1021336]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "temp"
        (1021338 'move' call_tmp[1021336](1021341 call buff[758025] lhs[1021018]))
        val coerce_tmp[1021490]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1021494 'move' coerce_tmp[1021490](1021492 'deref' call_tmp[1021336]))
        (1021345 call bufferFree[172958] coerce_tmp[1021490])
      }
      ref call_tmp[1021348]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "temp"
      (1021350 'move' call_tmp[1021348](1021353 call buff[758025] lhs[1021018]))
      (1021357 call =[954274] call_tmp[1021348] buff[1021022])
      ref call_tmp[1021361]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
      (1021363 'move' call_tmp[1021361](1021366 call buffSize[757973] lhs[1021018]))
      (1021370 call =[435370] call_tmp[1021361] 0)
    }
    ref call_tmp[1021374]:_ref(bool)[937260] "dead after last mention" "maybe param" "temp"
    (1021376 'move' call_tmp[1021374](1021379 call isOwned[758051] lhs[1021018]))
    (1021383 call =[435217] call_tmp[1021374] 1)
    ref call_tmp[1021387]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
    (1021389 'move' call_tmp[1021387](1021392 call buffLen[757947] lhs[1021018]))
    (1021396 call =[435370] call_tmp[1021387] buffLen[1021024])
    val call_tmp[1021400]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      ref call_tmp[1021423]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
      (1021425 'move' call_tmp[1021423](1021428 call cachedNumCodepoints[757999] lhs[1021018]))
      (1021432 call =[435370] call_tmp[1021423] numCodepoints[1021030])
    }
    label _end_reinitWithOwnedBuffer[1021436]
    (1021438 return _void[55])
  }
  function doAssign[1019229](ref arg lhs[1019231]:_ref(string)[938000], const  ref arg rhs[1019236]:string[26]) : void[4] "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[1019242]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val tmp[1019604]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1019628]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    ref call_tmp[1019630]:_ref(int(32))[936687] "dead after last mention" "maybe param" "temp"
    (1019632 'move' call_tmp[1019630](1019635 call locale_id[758103] lhs[1019231]))
    const-val call_tmp[1019638]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1019791]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1019795 'move' coerce_tmp[1019791](1019793 'deref' call_tmp[1019630]))
    (1019640 'move' call_tmp[1019638](1019643 call ==[435649] coerce_tmp[1019791] chpl_nodeID[208207]))
    (1019646 'move' tmp[1019628] call_tmp[1019638])
    (1019651 'move' tmp[1019604] tmp[1019628])
    const-val call_tmp[1019657]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1019659 'move' call_tmp[1019657] tmp[1019604])
    if call_tmp[1019657]
    {
      (1019667 call helpMe[1019253] lhs[1019231] rhs[1019236])
    }
    {
      const-val tmp[1019671]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
      ref call_tmp[1019673]:_ref(int(32))[936687] "dead after last mention" "maybe param" "temp"
      (1019675 'move' call_tmp[1019673](1019678 call locale_id[758103] lhs[1019231]))
      const-val call_tmp[1019681]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val coerce_tmp[1021515]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1021519 'move' coerce_tmp[1021515](1021517 'deref' call_tmp[1019673]))
      (1019683 'move' call_tmp[1019681](1019686 call chpl_buildLocaleID[209470] coerce_tmp[1021515] c_sublocid_any[89878]))
      const-val call_tmp[1019689]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      (1019691 'move' call_tmp[1019689](1019693 'chpl_on_locale_num' call_tmp[1019681]))
      (1019695 'move' tmp[1019671] call_tmp[1019689])
      val isdirect[2149908]:bool[10] "temp"
      (2149913 'move' isdirect[2149908](2149910 call chpl_doDirectExecuteOn[187469] tmp[1019671]))
      if isdirect[2149908]
      {
        (2149917 call on_fn[1019702] lhs[1019231] rhs[1019236])
      }
      {
        val _args_foron_fn[2149935]:_class_localson_fn[2149925] "temp"
        (2149939 'move' _args_foron_fn[2149935](2149937 'stack allocate class' _class_localson_fn[2149925]))
        (2149941 '.=' _args_foron_fn[2149935] _0_tmp[2149928] tmp[1019671])
        ref tmp[2149945]:string[26] "temp"
        (2149949 'move' tmp[2149945](2149947 'set reference' lhs[1019231]))
        (2149951 '.=' _args_foron_fn[2149935] _1_lhs[2149930] tmp[2149945])
        ref tmp[2149955]:string[26] "temp"
        (2149959 'move' tmp[2149955](2149957 'set reference' rhs[1019236]))
        (2149961 '.=' _args_foron_fn[2149935] _2_rhs[2149932] tmp[2149955])
        val _args_vforon_fn[2149965]:c_void_ptr[149] "temp"
        (2149969 'move' _args_vforon_fn[2149965](2149967 'cast_to_void_star' _args_foron_fn[2149935]))
        val _args_sizeon_fn[2149971]:int(64)[13] "temp"
        (2149975 'move' _args_sizeon_fn[2149971](2149973 'sizeof_bundle' _class_localson_fn[2149925]))
        on(2150015 call wrapon_fn[2149977] tmp[1019671] _args_vforon_fn[2149965] _args_sizeon_fn[2149971] _args_foron_fn[2149935])
      }
      {
      }
    }
    (1019717 return _void[55])
  }
  function doConcat[980924](const  ref arg s0[980926]:string[26], const  ref arg s1[980931]:string[26], ref arg _retArg[1865782]:_ref(string)[938000]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[980936]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[980944]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[980955]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
    (980957 'move' call_tmp[980955](980960 call buffLen[757947] s0[980926]))
    const-val s0len[980963]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[981373]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (981377 'move' coerce_tmp[981373](981375 'deref' call_tmp[980955]))
    (1877486 '=' s0len[980963] coerce_tmp[981373])
    (980965 'noop')
    const-val call_tmp[980969]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (980971 'move' call_tmp[980969](980974 call ==[435671] s0len[980963] 0))
    const-val call_tmp[980977]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (980979 'move' call_tmp[980977] call_tmp[980969])
    if call_tmp[980977]
    {
      val call_tmp[980986]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[980992]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val _formal_tmp_in_x[981402]:string[26] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (981406 'move' _formal_tmp_in_x[981402](981403 call chpl__initCopy[981409] s1[980931]))
      const-val ret_tmp[1865790]:string[26] "temp"
      (981381 call _removed_cast[981384] _formal_tmp_in_x[981402] ret_tmp[1865790])
      (1865793 'move' call_tmp[980992] ret_tmp[1865790])
      val call_tmp[981000]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (981642 'move' ret[980936] call_tmp[980992])
      gotoReturn _end_doConcat[981300] _end_doConcat[981300]
    }
    ref call_tmp[981014]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
    (981016 'move' call_tmp[981014](981019 call buffLen[757947] s1[980931]))
    const-val s1len[981022]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[981458]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (981462 'move' coerce_tmp[981458](981460 'deref' call_tmp[981014]))
    (1877489 '=' s1len[981022] coerce_tmp[981458])
    (981024 'noop')
    const-val call_tmp[981028]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (981030 'move' call_tmp[981028](981033 call ==[435671] s1len[981022] 0))
    const-val call_tmp[981036]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (981038 'move' call_tmp[981036] call_tmp[981028])
    if call_tmp[981036]
    {
      val call_tmp[981045]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (981645 'move' ret[980936](1865786 call chpl__initCopy[981409] s0[980926]))
      gotoReturn _end_doConcat[981300] _end_doConcat[981300]
    }
    const-val call_tmp[981059]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (981061 'move' call_tmp[981059](981064 call +[439679] s0len[980963] s1len[981022]))
    const-val buffLen[981067]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (981069 'move' buffLen[981067] call_tmp[981059])
    const-val call_tmp[981073]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (981075 'move' call_tmp[981073](981078 call +[949727] buffLen[981067]))
    const-val call_tmp[981081]:(c_ptr(uint(8)),int(64))[955269] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1865592]:(c_ptr(uint(8)),int(64))[955269] "temp"
    (981086 call bufferAlloc[955079] call_tmp[981073] ret_tmp[1865592])
    (1865595 'move' call_tmp[981081] ret_tmp[1865592])
    const-val tmp[981088]:(c_ptr(uint(8)),int(64))[955269] "dead at end of block" "insert auto destroy" "temp"
    (981090 'move' tmp[981088] call_tmp[981081])
    1
    ref call_tmp[981098]:_ref(c_ptr(uint(8)))[937493] "dead at end of block" "maybe param" "temp"
    (981100 'move' call_tmp[981098](981476 '.' tmp[981088] x0[955265]))
    val buff[981105]:c_ptr(uint(8))[937484] "dead at end of block" "insert auto destroy"
    val coerce_tmp[981481]:c_ptr(uint(8))[937484] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (981485 'move' coerce_tmp[981481](981483 'deref' call_tmp[981098]))
    (1877492 '=' buff[981105] coerce_tmp[981481])
    (981107 'noop')
    ref call_tmp[981110]:_ref(int(64))[936633] "dead at end of block" "maybe param" "temp"
    (981112 'move' call_tmp[981110](981490 '.' tmp[981088] x1[955267]))
    const-val buffSize[981117]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[981495]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (981499 'move' coerce_tmp[981495](981497 'deref' call_tmp[981110]))
    (1877495 '=' buffSize[981117] coerce_tmp[981495])
    (981119 'noop')
    ref call_tmp[981123]:_ref(int(32))[936687] "dead after last mention" "maybe param" "reference to a const" "temp"
    (981125 'move' call_tmp[981123](981128 call locale_id[758103] s0[980926]))
    ref call_tmp[981131]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "reference to a const" "temp"
    (981133 'move' call_tmp[981131](981136 call buff[758025] s0[980926]))
    const-val coerce_tmp[981510]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (981514 'move' coerce_tmp[981510](981512 'deref' call_tmp[981123]))
    const-val coerce_tmp[981516]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (981522 'move' coerce_tmp[981516](981518 'cast' int(64)[13] coerce_tmp[981510]))
    val coerce_tmp[981524]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (981528 'move' coerce_tmp[981524](981526 'deref' call_tmp[981131]))
    (981140 call bufferMemcpy[173042] buff[981105] coerce_tmp[981516] coerce_tmp[981524] s0len[980963] 0 0)
    ref call_tmp[981152]:_ref(int(32))[936687] "dead after last mention" "maybe param" "reference to a const" "temp"
    (981154 'move' call_tmp[981152](981157 call locale_id[758103] s1[980931]))
    ref call_tmp[981160]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "reference to a const" "temp"
    (981162 'move' call_tmp[981160](981165 call buff[758025] s1[980931]))
    const-val coerce_tmp[981575]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (981579 'move' coerce_tmp[981575](981577 'deref' call_tmp[981152]))
    const-val coerce_tmp[981581]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (981587 'move' coerce_tmp[981581](981583 'cast' int(64)[13] coerce_tmp[981575]))
    val coerce_tmp[981589]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (981593 'move' coerce_tmp[981589](981591 'deref' call_tmp[981160]))
    (981169 call bufferMemcpy[173042] buff[981105] coerce_tmp[981581] coerce_tmp[981589] s1len[981022] s0len[980963] 0)
    ref call_tmp[981184]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
    (981186 'move' call_tmp[981184](981189 call this[954152] buff[981105] buffLen[981067]))
    const-val coerce_tmp[981608]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (981614 'move' coerce_tmp[981608](981610 'cast' uint(8)[100] 0))
    (981192 call =[435391] call_tmp[981184] coerce_tmp[981608])
    val ret[981198]:string[26] "dead at end of block" "insert auto destroy"
    val call_tmp[981200]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (981650 call init[30763] ret[981198])
    val call_tmp[981212]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      ref call_tmp[981235]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
      (981237 'move' call_tmp[981235](981240 call cachedNumCodepoints[757999] ret[981198]))
      ref call_tmp[981243]:_ref(int(64))[936633] "dead after last mention" "maybe param" "reference to a const" "temp"
      (981245 'move' call_tmp[981243](981248 call cachedNumCodepoints[757999] s0[980926]))
      ref call_tmp[981251]:_ref(int(64))[936633] "dead after last mention" "maybe param" "reference to a const" "temp"
      (981253 'move' call_tmp[981251](981256 call cachedNumCodepoints[757999] s1[980931]))
      const-val call_tmp[981259]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[981626]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (981630 'move' coerce_tmp[981626](981628 'deref' call_tmp[981243]))
      const-val coerce_tmp[981632]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (981636 'move' coerce_tmp[981632](981634 'deref' call_tmp[981251]))
      (981261 'move' call_tmp[981259](981264 call +[439679] coerce_tmp[981626] coerce_tmp[981632]))
      (981268 call =[435370] call_tmp[981235] call_tmp[981259])
    }
    (981275 call initWithOwnedBuffer[978956] ret[981198] buff[981105] buffLen[981067] buffSize[981117])
    val call_tmp[981285]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (981648 'move' ret[980936] ret[981198])
    (1877498 call chpl__autoDestroy[1565916] tmp[981088])
    gotoReturn _end_doConcat[981300] _end_doConcat[981300]
    label _end_doConcat[981300]
    (1865784 '=' _retArg[1865782] ret[980936])
    (1865788 return _void[55])
  }
  function doStripNoEnc[1107695](const  ref arg x[1107697]:_ref(string)[938000], const  ref arg chars[1107702]:string[26], const in arg leading[1107704]:bool[10], const in arg trailing[1107706]:bool[10], ref arg _retArg[1867448]:_ref(string)[938000]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1107711]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1107719]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1107721 'move' call_tmp[1107719](1107727 call isEmpty[35064] x[1107697]))
    const-val call_tmp[1107728]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1107730 'move' call_tmp[1107728] call_tmp[1107719])
    if call_tmp[1107728]
    {
      val call_tmp[1107741]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1107774]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1107780 'move' ret[1107711](1867452 call chpl__initCopy[981409] ""))
      gotoReturn _end_doStripNoEnc[1108288] _end_doStripNoEnc[1108288]
    }
    const-val call_tmp[1107788]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1107790 'move' call_tmp[1107788](1107796 call isEmpty[35064] chars[1107702]))
    const-val call_tmp[1107797]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1107799 'move' call_tmp[1107797] call_tmp[1107788])
    if call_tmp[1107797]
    {
      val call_tmp[1107806]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1122034 'move' ret[1107711](1122032 call chpl__autoCopy[1122036] x[1107697]))
      gotoReturn _end_doStripNoEnc[1108288] _end_doStripNoEnc[1108288]
    }
    const-val call_tmp[1107820]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1863064]:string[26] "temp"
    (1107828 call localize[32889] x[1107697] ret_tmp[1863064])
    (1863067 'move' call_tmp[1107820] ret_tmp[1863064])
    val call_tmp[1107829]:string[26] "dead after last mention" "maybe param" "temp" "type variable"
    const localX[1107835]:string[26] "dead at end of block" "const" "insert auto destroy"
    (1107837 'move' localX[1107835] call_tmp[1107820])
    const-val call_tmp[1107842]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1863070]:string[26] "temp"
    (1107850 call localize[32889] chars[1107702] ret_tmp[1863070])
    (1863073 'move' call_tmp[1107842] ret_tmp[1863070])
    val call_tmp[1107851]:string[26] "dead after last mention" "maybe param" "temp" "type variable"
    const-val localChars[1107857]:string[26] "dead at end of block" "const" "insert auto destroy"
    (1107859 'move' localChars[1107857] call_tmp[1107842])
    val start[1107864]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1107866 'move' start[1107864] 0)
    ref call_tmp[1107871]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1107873 'move' call_tmp[1107871](1107876 call buffLen[757947] localX[1107835]))
    const-val call_tmp[1107879]:int(64)[13] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1108303]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1108307 'move' coerce_tmp[1108303](1108305 'deref' call_tmp[1107871]))
    (1107881 'move' call_tmp[1107879](1107884 call -[962287] coerce_tmp[1108303]))
    val end[1107887]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1107889 'move' end[1107887] call_tmp[1107879])
    const-val call_tmp[1107895]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1107897 'move' call_tmp[1107895] leading[1107704])
    if call_tmp[1107895]
    {
      {
        const-val _iterator[1107907]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108627] "dead at end of block" "expr temp" "insert auto destroy" "temp"
        const-val call_tmp[1107909]:range(int(64),bounded,false)[1026875] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1862944]:range(int(64),bounded,false)[1026875] "temp"
        (1107914 call indices[32788] x[1107697] ret_tmp[1862944])
        (1862947 'move' call_tmp[1107909] ret_tmp[1862944])
        val call_tmp[1107917]:_ic_these_range_int64_t_bounded_F[1096764] "dead at end of block" "expr temp" "maybe param" "temp"
        (1107919 'move' call_tmp[1107917](1107922 call _getIterator[1095381] call_tmp[1107909]))
        const-val call_tmp[1107924]:_ir_chpl_bytes__ref_string[1108323] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1863154]:_ir_chpl_bytes__ref_string[1108323] "temp"
        (1107932 call chpl_bytes[33577] localX[1107835] ret_tmp[1863154])
        (1863157 'move' call_tmp[1107924] ret_tmp[1863154])
        val call_tmp[1107933]:_ic_chpl_bytes__ref_string[1108317] "dead at end of block" "expr temp" "maybe param" "temp"
        (1107935 'move' call_tmp[1107933](1107938 call _getIterator[1108332] call_tmp[1107924]))
        const-val ret_tmp[1867462]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108627] "temp"
        (1107943 call _build_tuple[1108585] call_tmp[1107917] call_tmp[1107933] ret_tmp[1867462])
        (1867465 'move' _iterator[1107907] ret_tmp[1867462])
        val _iterator[1949061]:_ic_these_range_int64_t_bounded_F[1096764] "temp"
        (1949067 'move' _iterator[1949061](1949064 '.v' _iterator[1107907] x0[1108623]))
        val _iterator[1949074]:_ic_chpl_bytes__ref_string[1108317] "temp"
        (1949080 'move' _iterator[1949074](1949077 '.v' _iterator[1107907] x1[1108625]))
        {
          (1949089 call zip1[1096799] _iterator[1949061])
        }
        {
          (1949124 call zip1[1108352] _iterator[1949074])
        }
        const-val isFinished[1949150]:bool[10] "temp"
        val hasMore[1949149]:bool[10] "temp"
        CForLoop[1949197]
        {
          val _indexOfInterest[1949198]:(int(64),uint(8))[1111101] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          {
            (1949202 call zip2[1108361] _iterator[1949074])
          }
          {
            const-val retTmp[1949205]:int(64)[13] "temp"
            (1949207 'move' retTmp[1949205](1949210 call hasMore[1108388] _iterator[1949074]))
            (1949212 'move' hasMore[1949149](1949214 'cast' bool[10] retTmp[1949205]))
          }
          (1949217 'move' isFinished[1949150](1949219 '!' hasMore[1949149]))
          if isFinished[1949150]
          {
            (1949223 'chpl_error' c"zippered iterations have non-equal lengths")
          }
          {
            (1949227 'move' _index[1949242](1949230 call getValue[1108397] _iterator[1949074]))
          }
          {
            (1949234 call zip2[1096808] _iterator[1949061])
          }
          {
            (1949237 'move' _index[1949248](1949240 call getValue[1096844] _iterator[1949061]))
          }
          val _index[1949242]:uint(8)[100] "temp"
          (1949244 '.=' _indexOfInterest[1949198] x1[1111099] _index[1949242])
          val _index[1949248]:int(64)[13] "temp"
          (1949250 '.=' _indexOfInterest[1949198] x0[1111097] _index[1949248])
          1
          const-val i[1949255]:int(64)[13] "const" "index var" "insert auto destroy"
          (1949257 'move' i[1949255](1949259 '.v' _indexOfInterest[1949198] x0[1111097]))
          const-val xChar[1949262]:uint(8)[100] "const" "index var" "insert auto destroy"
          (1949264 'move' xChar[1949262](1949266 '.v' _indexOfInterest[1949198] x1[1111099]))
          {
            {
              val _indexOfInterest[1949271]:uint(8)[100] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[1949273]:_ic_chpl_bytes__ref_string[1108317] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[1949275]:_ir_chpl_bytes__ref_string[1108323] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[1949277]:_ir_chpl_bytes__ref_string[1108323] "temp"
              (1949280 call chpl_bytes[33577] localChars[1107857] ret_tmp[1949277])
              (1949283 'move' call_tmp[1949275] ret_tmp[1949277])
              (1949286 'move' _iterator[1949273](1949289 call _getIterator[1108332] call_tmp[1949275]))
              {
                val ret[2016218]:_ir_chpl_bytes__ref_string[1108323] "dead at end of block" "RVV" "temp"
                const-val call_tmp[2016220]:string[26] "dead at end of block" "maybe param" "temp"
                const-val ret_tmp[2016222]:string[26] "temp"
                ref this[2016846]:_ref(string)[938000] "temp"
                (2016851 'move' this[2016846](2016848 '.v' _iterator[1949273] F0_this[2046128]))
                (2016225 call localize[32889] this[2016846] ret_tmp[2016222])
                (2016228 'move' call_tmp[2016220] ret_tmp[2016222])
                val localThis[2016231]:string[26] "dead at end of block" "insert auto destroy"
                (2016233 'move' localThis[2016231] call_tmp[2016220])
                val _indexOfInterest[2016236]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[2016238]:_ic_chpl_direct_counted_range_iter[1103851] "dead at end of block" "expr temp" "temp"
                ref call_tmp[2016240]:_ref(int(64))[936633] "dead at end of block" "maybe param" "temp"
                (2016242 'move' call_tmp[2016240](2016245 call buffLen[757947] localThis[2016231]))
                const-val call_tmp[2016247]:_ir_chpl_direct_counted_range_iter[1103857] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[2016249]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2016251 'move' coerce_tmp[2016249](2016253 'deref' call_tmp[2016240]))
                const-val ret_tmp[2016255]:_ir_chpl_direct_counted_range_iter[1103857] "temp"
                (2016258 call chpl_direct_counted_range_iter[458039] 0 coerce_tmp[2016249] ret_tmp[2016255])
                (2016262 'move' call_tmp[2016247] ret_tmp[2016255])
                (2016265 'move' _iterator[2016238](2016268 call _getIterator[1103866] call_tmp[2016247]))
                val ret[2016270]:_ir_chpl_direct_counted_range_iter[1103857] "dead after last mention" "RVV" "temp"
                val _indexOfInterest[2016272]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[2016274]:_ic_chpl_direct_counted_range_iter_helper[1103601] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[2016276]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[2016278]:_ir_chpl_direct_counted_range_iter_helper[1103607] "temp"
                const-val low[2016280]:int(64)[13] "temp"
                (2016282 'move' low[2016280](2016284 '.v' _iterator[2016238] F0_low[2058106]))
                const-val count[2016287]:int(64)[13] "temp"
                (2016289 'move' count[2016287](2016291 '.v' _iterator[2016238] F1_count[2058110]))
                (2016295 call chpl_direct_counted_range_iter_helper[1102159] low[2016280] count[2016287] ret_tmp[2016278])
                (2016299 'move' call_tmp[2016276] ret_tmp[2016278])
                (2016302 'move' _iterator[2016274](2016305 call _getIterator[1103616] call_tmp[2016276]))
                val ret[2016307]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead after last mention" "RVV" "temp"
                val call_tmp[2016309]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val tmp[2016311]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val tmp[2016313]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                const-val call_tmp[2016315]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[2016317]:int(64)[13] "temp"
                (2016319 'move' count[2016317](2016321 '.v' _iterator[2016274] F1_count[2064268]))
                (2016324 'move' call_tmp[2016315](2016327 call <[948459] count[2016317]))
                (2016329 'move' tmp[2016313] call_tmp[2016315])
                (2016332 'move' tmp[2016311] call_tmp[2016315])
                const-val call_tmp[2016335]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2016337 'move' call_tmp[2016335] call_tmp[2016315])
                if call_tmp[2016315]
                {
                  (2016343 call boundsCheckHalt[210187] "With a negative count, the range must have a last index.")
                }
                const-val tmp[2016346]:2*int(64)[1040117] "dead at end of block" "const" "insert auto destroy" "temp"
                val tmp[2016348]:2*int(64)[1040117] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                const-val tmp[2016350]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[2016352]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[2016354]:int(64)[13] "temp"
                (2016356 'move' count[2016354](2016358 '.v' _iterator[2016274] F1_count[2064268]))
                (2016361 'move' call_tmp[2016352](2016364 call ==[435671] count[2016354] 0))
                (2016367 'move' tmp[2016350] call_tmp[2016352])
                if call_tmp[2016352]
                {
                  const-val tmp[2016372]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[2016374]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[2016376]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[2016378]:int(64)[13] "temp"
                  (2016380 'move' low[2016378](2016382 '.v' _iterator[2016274] F0_low[2064264]))
                  (2016385 'move' call_tmp[2016376](2016388 call _cast[956095] low[2016378]))
                  const-val call_tmp[2016390]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[2016392]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                  (2016394 'move' coerce_tmp[2016392](2016396 'cast' uint(64)[115] 1))
                  (2016399 'move' call_tmp[2016390](2016402 call -[962254] call_tmp[2016376]))
                  const-val call_tmp[2016404]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  (2016406 'move' call_tmp[2016404](2016409 call _cast[953604] call_tmp[2016390]))
                  const-val ret_tmp[2016411]:2*int(64)[1040117] "temp"
                  const-val low[2016413]:int(64)[13] "temp"
                  (2016415 'move' low[2016413](2016417 '.v' _iterator[2016274] F0_low[2064264]))
                  (2016421 call _build_tuple[1040075] low[2016413] call_tmp[2016404] ret_tmp[2016411])
                  (2016425 'move' tmp[2016372] ret_tmp[2016411])
                  (2016428 'move' tmp[2016348] tmp[2016372])
                }
                {
                  const-val tmp[2016432]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[2016434]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[2016436]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[2016438]:int(64)[13] "temp"
                  (2016440 'move' count[2016438](2016442 '.v' _iterator[2016274] F1_count[2064268]))
                  (2016445 'move' call_tmp[2016436] count[2016438])
                  const-val call_tmp[2016448]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[2016450]:int(64)[13] "temp"
                  (2016452 'move' count[2016450](2016454 '.v' _iterator[2016274] F1_count[2064268]))
                  (2016457 'move' call_tmp[2016448](2016460 call -[962287] count[2016450]))
                  const-val call_tmp[2016462]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[2016464]:int(64)[13] "temp"
                  (2016466 'move' low[2016464](2016468 '.v' _iterator[2016274] F0_low[2064264]))
                  (2016471 'move' call_tmp[2016462](2016474 call +[439679] low[2016464] call_tmp[2016448]))
                  const-val ret_tmp[2016477]:2*int(64)[1040117] "temp"
                  const-val low[2016479]:int(64)[13] "temp"
                  (2016481 'move' low[2016479](2016483 '.v' _iterator[2016274] F0_low[2064264]))
                  (2016487 call _build_tuple[1040075] low[2016479] call_tmp[2016462] ret_tmp[2016477])
                  (2016491 'move' tmp[2016432] ret_tmp[2016477])
                  (2016494 'move' tmp[2016348] tmp[2016432])
                }
                (2016498 '=' tmp[2016346] tmp[2016348])
                (2016501 'noop')
                1
                ref call_tmp[2016503]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
                (2016505 'move' call_tmp[2016503](2016507 '.' tmp[2016346] x0[1040113]))
                const-val start[2016510]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[2016512]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (2016514 'move' coerce_tmp[2016512](2016516 'deref' call_tmp[2016503]))
                (2016518 '=' start[2016510] coerce_tmp[2016512])
                (2016521 'noop')
                ref call_tmp[2016522]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
                (2016524 'move' call_tmp[2016522](2016526 '.' tmp[2016346] x1[1040115]))
                const-val end[2016529]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[2016531]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (2016533 'move' coerce_tmp[2016531](2016535 'deref' call_tmp[2016522]))
                (2016537 '=' end[2016529] coerce_tmp[2016531])
                (2016540 'noop')
                val _indexOfInterest[2016541]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[2016543]:_ic_chpl_direct_param_stride_range_iter[1103347] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[2016545]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[2016547]:_ir_chpl_direct_param_stride_range_iter[1103353] "temp"
                (2016550 call chpl_direct_param_stride_range_iter[1102585] coerce_tmp[2016512] coerce_tmp[2016531] ret_tmp[2016547])
                (2016554 'move' call_tmp[2016545] ret_tmp[2016547])
                (2016557 'move' _iterator[2016543](2016560 call _getIterator[1103362] call_tmp[2016545]))
                val ret[2016562]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead after last mention" "RVV" "temp"
                val call_tmp[2016564]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (2016567 call chpl_range_check_stride[1102905])
                val i[2016568]:int(64)[13] "dead at end of block" "insert auto destroy"
                val call_tmp[2016570]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (2016572 'move' i[2016568] 0)
                val call_tmp[2016575]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val default_arg_first[2016577]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val low[2016579]:int(64)[13] "temp"
                (2016581 'move' low[2016579](2016583 '.v' _iterator[2016543] F0_low[2065762]))
                (2016586 'move' default_arg_first[2016577](2016589 call chpl_checkIfRangeIterWillOverflow_default_first[1103259] low[2016579]))
                const-val default_arg_last[2016591]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val high[2016593]:int(64)[13] "temp"
                (2016595 'move' high[2016593](2016597 '.v' _iterator[2016543] F1_high[2065766]))
                (2016600 'move' default_arg_last[2016591](2016603 call chpl_checkIfRangeIterWillOverflow_default_last[1103287] high[2016593]))
                const-val _return_tmp_[2016605]:bool[10] "dead after last mention" "temp"
                const-val low[2016607]:int(64)[13] "temp"
                (2016609 'move' low[2016607](2016611 '.v' _iterator[2016543] F0_low[2065762]))
                const-val high[2016614]:int(64)[13] "temp"
                (2016616 'move' high[2016614](2016618 '.v' _iterator[2016543] F1_high[2065766]))
                (2016621 'move' _return_tmp_[2016605](2016624 call chpl_checkIfRangeIterWillOverflow[1096137] low[2016607] high[2016614] 1 default_arg_first[2016577] default_arg_last[2016591] 1))
                CForLoop[2016631]
                {
                  const-val yret[2016660]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (2016662 'move' yret[2016660] i[2016568])
                  const-val _yieldedIndex[2016665]:int(64)[13] "temp"
                  (2016667 'move' _yieldedIndex[2016665] i[2016568])
                  const-val i[2016670]:int(64)[13] "const" "index var" "insert auto destroy"
                  (2016672 'move' i[2016670] _yieldedIndex[2016665])
                  const-val yret[2016675]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (2016677 'move' yret[2016675] _yieldedIndex[2016665])
                  const-val _yieldedIndex[2016680]:int(64)[13] "temp"
                  (2016682 'move' _yieldedIndex[2016680] _yieldedIndex[2016665])
                  const-val i[2016685]:int(64)[13] "const" "index var" "insert auto destroy"
                  (2016687 'move' i[2016685] _yieldedIndex[2016680])
                  const-val yret[2016690]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (2016692 'move' yret[2016690] _yieldedIndex[2016680])
                  const-val _yieldedIndex[2016695]:int(64)[13] "temp"
                  (2016697 'move' _yieldedIndex[2016695] _yieldedIndex[2016680])
                  const-val i[2016700]:int(64)[13] "const" "index var" "insert auto destroy"
                  (2016702 'move' i[2016700] _yieldedIndex[2016695])
                  const-val yret[2016705]:uint(8)[100] "dead after last mention" "YVV" "temp"
                  ref call_tmp[2016707]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[2016709]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "temp"
                  (2016711 'move' _this_tmp_[2016709](2016714 call buff[758025] localThis[2016231]))
                  val coerce_tmp[2016716]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (2016718 'move' coerce_tmp[2016716](2016720 'deref' _this_tmp_[2016709]))
                  (2016722 'move' call_tmp[2016707](2016725 call this[954152] coerce_tmp[2016716] _yieldedIndex[2016695]))
                  const-val coerce_tmp[2016728]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                  (2016730 'move' coerce_tmp[2016728](2016732 'deref' call_tmp[2016707]))
                  (2016734 '=' yret[2016705] coerce_tmp[2016728])
                  (2016737 'noop')
                  const-val _yieldedIndex[2016785]:uint(8)[100] "temp"
                  (2016844 'move' _yieldedIndex[2016785] coerce_tmp[2016728])
                  {
                    const-val removeChar[2016787]:uint(8)[100] "const" "index var" "insert auto destroy"
                    (2016789 'move' removeChar[2016787] _yieldedIndex[2016785])
                    {
                      const-val call_tmp[2016793]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (2016795 'move' call_tmp[2016793](2016798 call ==[435693] xChar[1949262] removeChar[2016787]))
                      const-val call_tmp[2016801]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (2016803 'move' call_tmp[2016801] call_tmp[2016793])
                      if call_tmp[2016801]
                      {
                        const-val call_tmp[2016808]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                        (2016810 'move' call_tmp[2016808](2016813 call +[949727] i[1949255]))
                        (2016816 call =[435370] start[1107864] call_tmp[2016808])
                        (2016829 call _freeIterator[1103535] _iterator[2016543])
                        (2016832 call chpl__autoDestroy[1635435] tmp[2016346])
                        (2016835 call _freeIterator[1103785] _iterator[2016274])
                        (2016838 call _freeIterator[1104035] _iterator[2016238])
                        (2016841 call chpl__autoDestroy[1562275] localThis[2016231])
                        (2016820 call _freeIterator[1109630] _iterator[1949273])
                        continue _continueLabel[1949341] _continueLabel[1949341]
                      }
                    }
                    label _continueLabel[2016825]
                  }
                  {
                    const-val low[2016633]:int(64)[13] "temp"
                    (2016635 'move' low[2016633](2016637 '.v' _iterator[2016543] F0_low[2065762]))
                    (2016640 '=' i[2016568] low[2016633])
                  }
                  {
                    const-val high[2016644]:int(64)[13] "temp"
                    (2016646 'move' high[2016644](2016648 '.v' _iterator[2016543] F1_high[2065766]))
                    (2016651 '<=' i[2016568] high[2016644])
                  }
                  {
                    val call_tmp[2016655]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    (2016657 '+=' i[2016568] 1)
                  }
                }
                label _endchpl_direct_param_stride_range_iter[2016760]
                (2016763 call _freeIterator[1103535] _iterator[2016543])
                (2016766 call chpl__autoDestroy[1635435] tmp[2016346])
                label _endchpl_direct_counted_range_iter_helper[2016768]
                (2016771 call _freeIterator[1103785] _iterator[2016274])
                label _endchpl_direct_counted_range_iter[2016773]
                (2016776 call _freeIterator[1104035] _iterator[2016238])
                (2016779 call chpl__autoDestroy[1562275] localThis[2016231])
                label _endchpl_bytes[2016781]
              }
              label _breakLabel[1949334]
              (1949337 call _freeIterator[1109630] _iterator[1949273])
            }
            ref moreRef1[1949401]:_ref(int(64))[936633] "temp"
            (1949403 'move' moreRef1[1949401](1949405 '.' _iterator[1949061] more[1096767]))
            const-val moreVal1[1949408]:int(64)[13] "const" "temp"
            (1949410 '=' moreVal1[1949408] moreRef1[1949401])
            const-val moreValNeg1[1949413]:int(64)[13] "const" "temp"
            (1949415 'move' moreValNeg1[1949413](1949417 'u-' moreVal1[1949408]))
            (1949419 '=' moreRef1[1949401] moreValNeg1[1949413])
            (1949423 call advance[1096790] _iterator[1949061])
            ref moreRef2[1949425]:_ref(int(64))[936633] "temp"
            (1949427 'move' moreRef2[1949425](1949429 '.' _iterator[1949074] more[1108320]))
            const-val moreVal2[1949432]:int(64)[13] "const" "temp"
            (1949434 '=' moreVal2[1949432] moreRef2[1949425])
            const-val moreValNeg2[1949437]:int(64)[13] "const" "temp"
            (1949439 'move' moreValNeg2[1949437](1949441 'u-' moreVal2[1949432]))
            (1949443 '=' moreRef2[1949425] moreValNeg2[1949437])
            (1949447 call advance[1108343] _iterator[1949074])
            break _breakLabel[1108071] _breakLabel[1108071]
          }
          label _continueLabel[1949341]
          {
            (1949345 call zip3[1096817] _iterator[1949061])
          }
          {
            (1949349 call zip3[1108370] _iterator[1949074])
          }
          {
            {
              (1949099 call init[1096853] _iterator[1949061])
            }
            {
              (1949134 call init[1108406] _iterator[1949074])
            }
          }
          {
            (1949115 call hasMore[1096835] _iterator[1949061])
          }
          {
            {
              (1949103 call incr[1096862] _iterator[1949061])
            }
            {
              (1949138 call incr[1108415] _iterator[1949074])
            }
          }
        }
        {
          const-val retTmp[1949184]:int(64)[13] "temp"
          (1949186 'move' retTmp[1949184](1949181 call hasMore[1108388] _iterator[1949074]))
          (1949191 'move' hasMore[1949149](1949188 'cast' bool[10] retTmp[1949184]))
        }
        if hasMore[1949149]
        {
          (1949176 'chpl_error' c"zippered iterations have non-equal lengths")
        }
        {
          (1949146 call zip4[1108379] _iterator[1949074])
        }
        {
          (1949111 call zip4[1096826] _iterator[1949061])
        }
        label _breakLabel[1108071]
        (1879156 call _freeIterator[1108785] _iterator[1107907])
        (1879158 call chpl__autoDestroy[1642180] _iterator[1107907])
        (1879161 call chpl__autoDestroy[1383553] call_tmp[1107909])
      }
    }
    const-val call_tmp[1108074]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1108076 'move' call_tmp[1108074] trailing[1107706])
    if call_tmp[1108074]
    {
      (1108091 call =[435370] end[1107887] -1)
      {
        const-val _iterator[1108099]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108627] "dead at end of block" "expr temp" "insert auto destroy" "temp"
        const-val call_tmp[1108101]:range(int(64),bounded,false)[1026875] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1862950]:range(int(64),bounded,false)[1026875] "temp"
        (1108106 call indices[32788] x[1107697] ret_tmp[1862950])
        (1862953 'move' call_tmp[1108101] ret_tmp[1862950])
        val call_tmp[1108109]:_ic_these_range_int64_t_bounded_F[1096764] "dead at end of block" "expr temp" "maybe param" "temp"
        (1108111 'move' call_tmp[1108109](1108114 call _getIterator[1095381] call_tmp[1108101]))
        const-val call_tmp[1108116]:_ir_chpl_bytes__ref_string[1108323] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1863166]:_ir_chpl_bytes__ref_string[1108323] "temp"
        (1108124 call chpl_bytes[33577] localX[1107835] ret_tmp[1863166])
        (1863169 'move' call_tmp[1108116] ret_tmp[1863166])
        val call_tmp[1108125]:_ic_chpl_bytes__ref_string[1108317] "dead at end of block" "expr temp" "maybe param" "temp"
        (1108127 'move' call_tmp[1108125](1108130 call _getIterator[1108332] call_tmp[1108116]))
        const-val ret_tmp[1867468]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108627] "temp"
        (1108135 call _build_tuple[1108585] call_tmp[1108109] call_tmp[1108125] ret_tmp[1867468])
        (1867471 'move' _iterator[1108099] ret_tmp[1867468])
        val _iterator[1949451]:_ic_these_range_int64_t_bounded_F[1096764] "temp"
        (1949457 'move' _iterator[1949451](1949454 '.v' _iterator[1108099] x0[1108623]))
        val _iterator[1949464]:_ic_chpl_bytes__ref_string[1108317] "temp"
        (1949470 'move' _iterator[1949464](1949467 '.v' _iterator[1108099] x1[1108625]))
        {
          (1949479 call zip1[1096799] _iterator[1949451])
        }
        {
          (1949514 call zip1[1108352] _iterator[1949464])
        }
        const-val isFinished[1949540]:bool[10] "temp"
        val hasMore[1949539]:bool[10] "temp"
        CForLoop[1949587]
        {
          val _indexOfInterest[1949588]:(int(64),uint(8))[1111101] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          {
            (1949592 call zip2[1108361] _iterator[1949464])
          }
          {
            const-val retTmp[1949595]:int(64)[13] "temp"
            (1949597 'move' retTmp[1949595](1949600 call hasMore[1108388] _iterator[1949464]))
            (1949602 'move' hasMore[1949539](1949604 'cast' bool[10] retTmp[1949595]))
          }
          (1949607 'move' isFinished[1949540](1949609 '!' hasMore[1949539]))
          if isFinished[1949540]
          {
            (1949613 'chpl_error' c"zippered iterations have non-equal lengths")
          }
          {
            (1949617 'move' _index[1949632](1949620 call getValue[1108397] _iterator[1949464]))
          }
          {
            (1949624 call zip2[1096808] _iterator[1949451])
          }
          {
            (1949627 'move' _index[1949638](1949630 call getValue[1096844] _iterator[1949451]))
          }
          val _index[1949632]:uint(8)[100] "temp"
          (1949634 '.=' _indexOfInterest[1949588] x1[1111099] _index[1949632])
          val _index[1949638]:int(64)[13] "temp"
          (1949640 '.=' _indexOfInterest[1949588] x0[1111097] _index[1949638])
          1
          const-val i[1949645]:int(64)[13] "const" "index var" "insert auto destroy"
          (1949647 'move' i[1949645](1949649 '.v' _indexOfInterest[1949588] x0[1111097]))
          const-val xChar[1949652]:uint(8)[100] "const" "index var" "insert auto destroy"
          (1949654 'move' xChar[1949652](1949656 '.v' _indexOfInterest[1949588] x1[1111099]))
          {
            {
              val _indexOfInterest[1949661]:uint(8)[100] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[1949663]:_ic_chpl_bytes__ref_string[1108317] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[1949665]:_ir_chpl_bytes__ref_string[1108323] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[1949667]:_ir_chpl_bytes__ref_string[1108323] "temp"
              (1949670 call chpl_bytes[33577] localChars[1107857] ret_tmp[1949667])
              (1949673 'move' call_tmp[1949665] ret_tmp[1949667])
              (1949676 'move' _iterator[1949663](1949679 call _getIterator[1108332] call_tmp[1949665]))
              {
                val ret[2016854]:_ir_chpl_bytes__ref_string[1108323] "dead at end of block" "RVV" "temp"
                const-val call_tmp[2016856]:string[26] "dead at end of block" "maybe param" "temp"
                const-val ret_tmp[2016858]:string[26] "temp"
                ref this[2017471]:_ref(string)[938000] "temp"
                (2017476 'move' this[2017471](2017473 '.v' _iterator[1949663] F0_this[2046128]))
                (2016861 call localize[32889] this[2017471] ret_tmp[2016858])
                (2016864 'move' call_tmp[2016856] ret_tmp[2016858])
                val localThis[2016867]:string[26] "dead at end of block" "insert auto destroy"
                (2016869 'move' localThis[2016867] call_tmp[2016856])
                val _indexOfInterest[2016872]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[2016874]:_ic_chpl_direct_counted_range_iter[1103851] "dead at end of block" "expr temp" "temp"
                ref call_tmp[2016876]:_ref(int(64))[936633] "dead at end of block" "maybe param" "temp"
                (2016878 'move' call_tmp[2016876](2016881 call buffLen[757947] localThis[2016867]))
                const-val call_tmp[2016883]:_ir_chpl_direct_counted_range_iter[1103857] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[2016885]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2016887 'move' coerce_tmp[2016885](2016889 'deref' call_tmp[2016876]))
                const-val ret_tmp[2016891]:_ir_chpl_direct_counted_range_iter[1103857] "temp"
                (2016894 call chpl_direct_counted_range_iter[458039] 0 coerce_tmp[2016885] ret_tmp[2016891])
                (2016898 'move' call_tmp[2016883] ret_tmp[2016891])
                (2016901 'move' _iterator[2016874](2016904 call _getIterator[1103866] call_tmp[2016883]))
                val ret[2016906]:_ir_chpl_direct_counted_range_iter[1103857] "dead after last mention" "RVV" "temp"
                val _indexOfInterest[2016908]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[2016910]:_ic_chpl_direct_counted_range_iter_helper[1103601] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[2016912]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[2016914]:_ir_chpl_direct_counted_range_iter_helper[1103607] "temp"
                const-val low[2016916]:int(64)[13] "temp"
                (2016918 'move' low[2016916](2016920 '.v' _iterator[2016874] F0_low[2058106]))
                const-val count[2016923]:int(64)[13] "temp"
                (2016925 'move' count[2016923](2016927 '.v' _iterator[2016874] F1_count[2058110]))
                (2016931 call chpl_direct_counted_range_iter_helper[1102159] low[2016916] count[2016923] ret_tmp[2016914])
                (2016935 'move' call_tmp[2016912] ret_tmp[2016914])
                (2016938 'move' _iterator[2016910](2016941 call _getIterator[1103616] call_tmp[2016912]))
                val ret[2016943]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead after last mention" "RVV" "temp"
                val call_tmp[2016945]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val tmp[2016947]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val tmp[2016949]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                const-val call_tmp[2016951]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[2016953]:int(64)[13] "temp"
                (2016955 'move' count[2016953](2016957 '.v' _iterator[2016910] F1_count[2064268]))
                (2016960 'move' call_tmp[2016951](2016963 call <[948459] count[2016953]))
                (2016965 'move' tmp[2016949] call_tmp[2016951])
                (2016968 'move' tmp[2016947] call_tmp[2016951])
                const-val call_tmp[2016971]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2016973 'move' call_tmp[2016971] call_tmp[2016951])
                if call_tmp[2016951]
                {
                  (2016979 call boundsCheckHalt[210187] "With a negative count, the range must have a last index.")
                }
                const-val tmp[2016982]:2*int(64)[1040117] "dead at end of block" "const" "insert auto destroy" "temp"
                val tmp[2016984]:2*int(64)[1040117] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                const-val tmp[2016986]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[2016988]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[2016990]:int(64)[13] "temp"
                (2016992 'move' count[2016990](2016994 '.v' _iterator[2016910] F1_count[2064268]))
                (2016997 'move' call_tmp[2016988](2017000 call ==[435671] count[2016990] 0))
                (2017003 'move' tmp[2016986] call_tmp[2016988])
                if call_tmp[2016988]
                {
                  const-val tmp[2017008]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[2017010]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[2017012]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[2017014]:int(64)[13] "temp"
                  (2017016 'move' low[2017014](2017018 '.v' _iterator[2016910] F0_low[2064264]))
                  (2017021 'move' call_tmp[2017012](2017024 call _cast[956095] low[2017014]))
                  const-val call_tmp[2017026]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[2017028]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                  (2017030 'move' coerce_tmp[2017028](2017032 'cast' uint(64)[115] 1))
                  (2017035 'move' call_tmp[2017026](2017038 call -[962254] call_tmp[2017012]))
                  const-val call_tmp[2017040]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  (2017042 'move' call_tmp[2017040](2017045 call _cast[953604] call_tmp[2017026]))
                  const-val ret_tmp[2017047]:2*int(64)[1040117] "temp"
                  const-val low[2017049]:int(64)[13] "temp"
                  (2017051 'move' low[2017049](2017053 '.v' _iterator[2016910] F0_low[2064264]))
                  (2017057 call _build_tuple[1040075] low[2017049] call_tmp[2017040] ret_tmp[2017047])
                  (2017061 'move' tmp[2017008] ret_tmp[2017047])
                  (2017064 'move' tmp[2016984] tmp[2017008])
                }
                {
                  const-val tmp[2017068]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[2017070]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[2017072]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[2017074]:int(64)[13] "temp"
                  (2017076 'move' count[2017074](2017078 '.v' _iterator[2016910] F1_count[2064268]))
                  (2017081 'move' call_tmp[2017072] count[2017074])
                  const-val call_tmp[2017084]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[2017086]:int(64)[13] "temp"
                  (2017088 'move' count[2017086](2017090 '.v' _iterator[2016910] F1_count[2064268]))
                  (2017093 'move' call_tmp[2017084](2017096 call -[962287] count[2017086]))
                  const-val call_tmp[2017098]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[2017100]:int(64)[13] "temp"
                  (2017102 'move' low[2017100](2017104 '.v' _iterator[2016910] F0_low[2064264]))
                  (2017107 'move' call_tmp[2017098](2017110 call +[439679] low[2017100] call_tmp[2017084]))
                  const-val ret_tmp[2017113]:2*int(64)[1040117] "temp"
                  const-val low[2017115]:int(64)[13] "temp"
                  (2017117 'move' low[2017115](2017119 '.v' _iterator[2016910] F0_low[2064264]))
                  (2017123 call _build_tuple[1040075] low[2017115] call_tmp[2017098] ret_tmp[2017113])
                  (2017127 'move' tmp[2017068] ret_tmp[2017113])
                  (2017130 'move' tmp[2016984] tmp[2017068])
                }
                (2017134 '=' tmp[2016982] tmp[2016984])
                (2017137 'noop')
                1
                ref call_tmp[2017139]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
                (2017141 'move' call_tmp[2017139](2017143 '.' tmp[2016982] x0[1040113]))
                const-val start[2017146]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[2017148]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (2017150 'move' coerce_tmp[2017148](2017152 'deref' call_tmp[2017139]))
                (2017154 '=' start[2017146] coerce_tmp[2017148])
                (2017157 'noop')
                ref call_tmp[2017158]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
                (2017160 'move' call_tmp[2017158](2017162 '.' tmp[2016982] x1[1040115]))
                const-val end[2017165]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[2017167]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (2017169 'move' coerce_tmp[2017167](2017171 'deref' call_tmp[2017158]))
                (2017173 '=' end[2017165] coerce_tmp[2017167])
                (2017176 'noop')
                val _indexOfInterest[2017177]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[2017179]:_ic_chpl_direct_param_stride_range_iter[1103347] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[2017181]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[2017183]:_ir_chpl_direct_param_stride_range_iter[1103353] "temp"
                (2017186 call chpl_direct_param_stride_range_iter[1102585] coerce_tmp[2017148] coerce_tmp[2017167] ret_tmp[2017183])
                (2017190 'move' call_tmp[2017181] ret_tmp[2017183])
                (2017193 'move' _iterator[2017179](2017196 call _getIterator[1103362] call_tmp[2017181]))
                val ret[2017198]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead after last mention" "RVV" "temp"
                val call_tmp[2017200]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (2017203 call chpl_range_check_stride[1102905])
                val i[2017204]:int(64)[13] "dead at end of block" "insert auto destroy"
                val call_tmp[2017206]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (2017208 'move' i[2017204] 0)
                val call_tmp[2017211]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val default_arg_first[2017213]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val low[2017215]:int(64)[13] "temp"
                (2017217 'move' low[2017215](2017219 '.v' _iterator[2017179] F0_low[2065762]))
                (2017222 'move' default_arg_first[2017213](2017225 call chpl_checkIfRangeIterWillOverflow_default_first[1103259] low[2017215]))
                const-val default_arg_last[2017227]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val high[2017229]:int(64)[13] "temp"
                (2017231 'move' high[2017229](2017233 '.v' _iterator[2017179] F1_high[2065766]))
                (2017236 'move' default_arg_last[2017227](2017239 call chpl_checkIfRangeIterWillOverflow_default_last[1103287] high[2017229]))
                const-val _return_tmp_[2017241]:bool[10] "dead after last mention" "temp"
                const-val low[2017243]:int(64)[13] "temp"
                (2017245 'move' low[2017243](2017247 '.v' _iterator[2017179] F0_low[2065762]))
                const-val high[2017250]:int(64)[13] "temp"
                (2017252 'move' high[2017250](2017254 '.v' _iterator[2017179] F1_high[2065766]))
                (2017257 'move' _return_tmp_[2017241](2017260 call chpl_checkIfRangeIterWillOverflow[1096137] low[2017243] high[2017250] 1 default_arg_first[2017213] default_arg_last[2017227] 1))
                CForLoop[2017267]
                {
                  const-val yret[2017296]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (2017298 'move' yret[2017296] i[2017204])
                  const-val _yieldedIndex[2017301]:int(64)[13] "temp"
                  (2017303 'move' _yieldedIndex[2017301] i[2017204])
                  const-val i[2017306]:int(64)[13] "const" "index var" "insert auto destroy"
                  (2017308 'move' i[2017306] _yieldedIndex[2017301])
                  const-val yret[2017311]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (2017313 'move' yret[2017311] _yieldedIndex[2017301])
                  const-val _yieldedIndex[2017316]:int(64)[13] "temp"
                  (2017318 'move' _yieldedIndex[2017316] _yieldedIndex[2017301])
                  const-val i[2017321]:int(64)[13] "const" "index var" "insert auto destroy"
                  (2017323 'move' i[2017321] _yieldedIndex[2017316])
                  const-val yret[2017326]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (2017328 'move' yret[2017326] _yieldedIndex[2017316])
                  const-val _yieldedIndex[2017331]:int(64)[13] "temp"
                  (2017333 'move' _yieldedIndex[2017331] _yieldedIndex[2017316])
                  const-val i[2017336]:int(64)[13] "const" "index var" "insert auto destroy"
                  (2017338 'move' i[2017336] _yieldedIndex[2017331])
                  const-val yret[2017341]:uint(8)[100] "dead after last mention" "YVV" "temp"
                  ref call_tmp[2017343]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[2017345]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "temp"
                  (2017347 'move' _this_tmp_[2017345](2017350 call buff[758025] localThis[2016867]))
                  val coerce_tmp[2017352]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (2017354 'move' coerce_tmp[2017352](2017356 'deref' _this_tmp_[2017345]))
                  (2017358 'move' call_tmp[2017343](2017361 call this[954152] coerce_tmp[2017352] _yieldedIndex[2017331]))
                  const-val coerce_tmp[2017364]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                  (2017366 'move' coerce_tmp[2017364](2017368 'deref' call_tmp[2017343]))
                  (2017370 '=' yret[2017341] coerce_tmp[2017364])
                  (2017373 'noop')
                  const-val _yieldedIndex[2017421]:uint(8)[100] "temp"
                  (2017469 'move' _yieldedIndex[2017421] coerce_tmp[2017364])
                  {
                    const-val removeChar[2017423]:uint(8)[100] "const" "index var" "insert auto destroy"
                    (2017425 'move' removeChar[2017423] _yieldedIndex[2017421])
                    {
                      const-val call_tmp[2017429]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (2017431 'move' call_tmp[2017429](2017434 call ==[435693] xChar[1949652] removeChar[2017423]))
                      const-val call_tmp[2017437]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (2017439 'move' call_tmp[2017437] call_tmp[2017429])
                      if call_tmp[2017437]
                      {
                        (2017454 call _freeIterator[1103535] _iterator[2017179])
                        (2017457 call chpl__autoDestroy[1635435] tmp[2016982])
                        (2017460 call _freeIterator[1103785] _iterator[2016910])
                        (2017463 call _freeIterator[1104035] _iterator[2016874])
                        (2017466 call chpl__autoDestroy[1562275] localThis[2016867])
                        (2017445 call _freeIterator[1109630] _iterator[1949663])
                        continue _continueLabel[1949722] _continueLabel[1949722]
                      }
                    }
                    label _continueLabel[2017450]
                  }
                  {
                    const-val low[2017269]:int(64)[13] "temp"
                    (2017271 'move' low[2017269](2017273 '.v' _iterator[2017179] F0_low[2065762]))
                    (2017276 '=' i[2017204] low[2017269])
                  }
                  {
                    const-val high[2017280]:int(64)[13] "temp"
                    (2017282 'move' high[2017280](2017284 '.v' _iterator[2017179] F1_high[2065766]))
                    (2017287 '<=' i[2017204] high[2017280])
                  }
                  {
                    val call_tmp[2017291]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    (2017293 '+=' i[2017204] 1)
                  }
                }
                label _endchpl_direct_param_stride_range_iter[2017396]
                (2017399 call _freeIterator[1103535] _iterator[2017179])
                (2017402 call chpl__autoDestroy[1635435] tmp[2016982])
                label _endchpl_direct_counted_range_iter_helper[2017404]
                (2017407 call _freeIterator[1103785] _iterator[2016910])
                label _endchpl_direct_counted_range_iter[2017409]
                (2017412 call _freeIterator[1104035] _iterator[2016874])
                (2017415 call chpl__autoDestroy[1562275] localThis[2016867])
                label _endchpl_bytes[2017417]
              }
              label _breakLabel[1949713]
              (1949716 call _freeIterator[1109630] _iterator[1949663])
            }
            (1949719 call =[435370] end[1107887] i[1949645])
          }
          label _continueLabel[1949722]
          {
            (1949726 call zip3[1096817] _iterator[1949451])
          }
          {
            (1949730 call zip3[1108370] _iterator[1949464])
          }
          {
            {
              (1949489 call init[1096853] _iterator[1949451])
            }
            {
              (1949524 call init[1108406] _iterator[1949464])
            }
          }
          {
            (1949505 call hasMore[1096835] _iterator[1949451])
          }
          {
            {
              (1949493 call incr[1096862] _iterator[1949451])
            }
            {
              (1949528 call incr[1108415] _iterator[1949464])
            }
          }
        }
        {
          const-val retTmp[1949574]:int(64)[13] "temp"
          (1949576 'move' retTmp[1949574](1949571 call hasMore[1108388] _iterator[1949464]))
          (1949581 'move' hasMore[1949539](1949578 'cast' bool[10] retTmp[1949574]))
        }
        if hasMore[1949539]
        {
          (1949566 'chpl_error' c"zippered iterations have non-equal lengths")
        }
        {
          (1949536 call zip4[1108379] _iterator[1949464])
        }
        {
          (1949501 call zip4[1096826] _iterator[1949451])
        }
        label _breakLabel[1108253]
        (1879176 call _freeIterator[1108785] _iterator[1108099])
        (1879178 call chpl__autoDestroy[1642180] _iterator[1108099])
        (1879181 call chpl__autoDestroy[1383553] call_tmp[1108101])
      }
    }
    const-val call_tmp[1108256]:range(int(64),bounded,false)[1026875] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1865142]:range(int(64),bounded,false)[1026875] "temp"
    (1108261 call chpl_build_bounded_range[455180] start[1107864] end[1107887] ret_tmp[1865142])
    (1865145 'move' call_tmp[1108256] ret_tmp[1865142])
    const-val call_tmp[1108264]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1867570]:string[26] "temp"
    (1108269 call this[1111427] localX[1107835] call_tmp[1108256] ret_tmp[1867570])
    (1867573 'move' call_tmp[1108264] ret_tmp[1867570])
    val call_tmp[1108271]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1122064 'move' ret[1107711] call_tmp[1108264])
    (1879184 call chpl__autoDestroy[1383553] call_tmp[1108256])
    (1879187 call chpl__autoDestroy[1562275] localChars[1107857])
    (1879190 call chpl__autoDestroy[1562275] localX[1107835])
    gotoReturn _end_doStripNoEnc[1108288] _end_doStripNoEnc[1108288]
    label _end_doStripNoEnc[1108288]
    (1867450 '=' _retArg[1867448] ret[1107711])
    (1867454 return _void[55])
  }
  function doEq[1206277](const  ref arg a[1206279]:string[26], const  ref arg b[1206281]:string[26]) : bool[10] "inline" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1206283]:bool[10] "dead after last mention" "RVV" "temp"
    val call_tmp[1206293]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1206304]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[1206315]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1206317 'move' call_tmp[1206315](1206320 call buff[758025] a[1206279]))
    ref call_tmp[1206323]:_ref(int(64))[936633] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1206325 'move' call_tmp[1206323](1206328 call buffLen[757947] a[1206279]))
    ref call_tmp[1206331]:_ref(int(32))[936687] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1206333 'move' call_tmp[1206331](1206336 call locale_id[758103] a[1206279]))
    ref call_tmp[1206339]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1206341 'move' call_tmp[1206339](1206344 call buff[758025] b[1206281]))
    ref call_tmp[1206347]:_ref(int(64))[936633] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1206349 'move' call_tmp[1206347](1206352 call buffLen[757947] b[1206281]))
    ref call_tmp[1206355]:_ref(int(32))[936687] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1206357 'move' call_tmp[1206355](1206360 call locale_id[758103] b[1206281]))
    const-val call_tmp[1206363]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1206463]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1206467 'move' coerce_tmp[1206463](1206465 'deref' call_tmp[1206315]))
    const-val coerce_tmp[1206469]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1206473 'move' coerce_tmp[1206469](1206471 'deref' call_tmp[1206323]))
    const-val coerce_tmp[1206475]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1206479 'move' coerce_tmp[1206475](1206477 'deref' call_tmp[1206331]))
    val coerce_tmp[1206481]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1206485 'move' coerce_tmp[1206481](1206483 'deref' call_tmp[1206339]))
    const-val coerce_tmp[1206487]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1206491 'move' coerce_tmp[1206487](1206489 'deref' call_tmp[1206347]))
    const-val coerce_tmp[1206493]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1206497 'move' coerce_tmp[1206493](1206495 'deref' call_tmp[1206355]))
    (1206365 'move' call_tmp[1206363](1206368 call _strcmp[173484] coerce_tmp[1206463] coerce_tmp[1206469] coerce_tmp[1206475] coerce_tmp[1206481] coerce_tmp[1206487] coerce_tmp[1206493]))
    const-val call_tmp[1206375]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1206377 'move' call_tmp[1206375](1206380 call ==[435671] call_tmp[1206363] 0))
    (1206383 'move' ret[1206283] call_tmp[1206375])
    (1206387 return ret[1206283])
  }
  function doLessThan[1799843](const  ref arg a[1799845]:string[26], const  ref arg b[1799847]:string[26]) : bool[10] "inline" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1799849]:bool[10] "dead after last mention" "RVV" "temp"
    val call_tmp[1799859]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1799870]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[1799881]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1799883 'move' call_tmp[1799881](1799886 call buff[758025] a[1799845]))
    ref call_tmp[1799889]:_ref(int(64))[936633] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1799891 'move' call_tmp[1799889](1799894 call buffLen[757947] a[1799845]))
    ref call_tmp[1799897]:_ref(int(32))[936687] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1799899 'move' call_tmp[1799897](1799902 call locale_id[758103] a[1799845]))
    ref call_tmp[1799905]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1799907 'move' call_tmp[1799905](1799910 call buff[758025] b[1799847]))
    ref call_tmp[1799913]:_ref(int(64))[936633] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1799915 'move' call_tmp[1799913](1799918 call buffLen[757947] b[1799847]))
    ref call_tmp[1799921]:_ref(int(32))[936687] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1799923 'move' call_tmp[1799921](1799926 call locale_id[758103] b[1799847]))
    const-val call_tmp[1799929]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1799966]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1799970 'move' coerce_tmp[1799966](1799968 'deref' call_tmp[1799881]))
    const-val coerce_tmp[1799972]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1799976 'move' coerce_tmp[1799972](1799974 'deref' call_tmp[1799889]))
    const-val coerce_tmp[1799978]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1799982 'move' coerce_tmp[1799978](1799980 'deref' call_tmp[1799897]))
    val coerce_tmp[1799984]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1799988 'move' coerce_tmp[1799984](1799986 'deref' call_tmp[1799905]))
    const-val coerce_tmp[1799990]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1799994 'move' coerce_tmp[1799990](1799992 'deref' call_tmp[1799913]))
    const-val coerce_tmp[1799996]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1800000 'move' coerce_tmp[1799996](1799998 'deref' call_tmp[1799921]))
    (1799931 'move' call_tmp[1799929](1799934 call _strcmp[173484] coerce_tmp[1799966] coerce_tmp[1799972] coerce_tmp[1799978] coerce_tmp[1799984] coerce_tmp[1799990] coerce_tmp[1799996]))
    const-val call_tmp[1799941]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1799943 'move' call_tmp[1799941](1799946 call <[948459] call_tmp[1799929]))
    (1799949 'move' ret[1799849] call_tmp[1799941])
    (1799953 return ret[1799849])
  }
  function doGreaterThan[1800015](const  ref arg a[1800017]:string[26], const  ref arg b[1800019]:string[26]) : bool[10] "inline" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1800021]:bool[10] "dead after last mention" "RVV" "temp"
    val call_tmp[1800031]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1800042]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[1800053]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1800055 'move' call_tmp[1800053](1800058 call buff[758025] a[1800017]))
    ref call_tmp[1800061]:_ref(int(64))[936633] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1800063 'move' call_tmp[1800061](1800066 call buffLen[757947] a[1800017]))
    ref call_tmp[1800069]:_ref(int(32))[936687] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1800071 'move' call_tmp[1800069](1800074 call locale_id[758103] a[1800017]))
    ref call_tmp[1800077]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1800079 'move' call_tmp[1800077](1800082 call buff[758025] b[1800019]))
    ref call_tmp[1800085]:_ref(int(64))[936633] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1800087 'move' call_tmp[1800085](1800090 call buffLen[757947] b[1800019]))
    ref call_tmp[1800093]:_ref(int(32))[936687] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1800095 'move' call_tmp[1800093](1800098 call locale_id[758103] b[1800019]))
    const-val call_tmp[1800101]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1800138]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1800142 'move' coerce_tmp[1800138](1800140 'deref' call_tmp[1800053]))
    const-val coerce_tmp[1800144]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1800148 'move' coerce_tmp[1800144](1800146 'deref' call_tmp[1800061]))
    const-val coerce_tmp[1800150]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1800154 'move' coerce_tmp[1800150](1800152 'deref' call_tmp[1800069]))
    val coerce_tmp[1800156]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1800160 'move' coerce_tmp[1800156](1800158 'deref' call_tmp[1800077]))
    const-val coerce_tmp[1800162]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1800166 'move' coerce_tmp[1800162](1800164 'deref' call_tmp[1800085]))
    const-val coerce_tmp[1800168]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1800172 'move' coerce_tmp[1800168](1800170 'deref' call_tmp[1800093]))
    (1800103 'move' call_tmp[1800101](1800106 call _strcmp[173484] coerce_tmp[1800138] coerce_tmp[1800144] coerce_tmp[1800150] coerce_tmp[1800156] coerce_tmp[1800162] coerce_tmp[1800168]))
    const-val call_tmp[1800113]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1800115 'move' call_tmp[1800113](1800118 call >[437715] call_tmp[1800101] 0))
    (1800121 'move' ret[1800021] call_tmp[1800113])
    (1800125 return ret[1800021])
  }
  function countNumCodepoints[181380](const  ref arg x[181377]:string[26]) : int(64)[13] "resolved" "fn synchronization free"
  {
    val ret[523258]:int(64)[13] "dead after last mention" "RVV" "temp"
    val ret[181383]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1019965 'move' ret[181383] 0)
    const-val tmp[181417]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[687444]:_ref(int(32))[936687] "dead after last mention" "maybe param" "reference to a const" "temp"
    (687447 'move' call_tmp[687444](181392 call locale_id[758103] x[181377]))
    const-val call_tmp[687449]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1019835]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1019839 'move' coerce_tmp[1019835](1019837 'deref' call_tmp[687444]))
    (687452 'move' call_tmp[687449](181397 call chpl_buildLocaleID[209470] coerce_tmp[1019835] c_sublocid_any[89878]))
    const-val call_tmp[687454]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (687457 'move' call_tmp[687454](181398 'chpl_on_locale_num' call_tmp[687449]))
    (181419 'move' tmp[181417] call_tmp[687454])
    val isdirect[2148274]:bool[10] "temp"
    (2148279 'move' isdirect[2148274](2148276 call chpl_doDirectExecuteOn[187469] tmp[181417]))
    if isdirect[2148274]
    {
      (2148283 call on_fn[935525] x[181377] ret[181383])
    }
    {
      val _args_foron_fn[2148301]:_class_localson_fn[2148291] "temp"
      (2148305 'move' _args_foron_fn[2148301](2148303 'stack allocate class' _class_localson_fn[2148291]))
      (2148307 '.=' _args_foron_fn[2148301] _0_tmp[2148294] tmp[181417])
      ref tmp[2148311]:string[26] "temp"
      (2148315 'move' tmp[2148311](2148313 'set reference' x[181377]))
      (2148317 '.=' _args_foron_fn[2148301] _1_x[2148296] tmp[2148311])
      ref tmp[2148321]:int(64)[13] "temp"
      (2148325 'move' tmp[2148321](2148323 'set reference' ret[181383]))
      (2148327 '.=' _args_foron_fn[2148301] _2_ret[2148298] tmp[2148321])
      val _args_vforon_fn[2148331]:c_void_ptr[149] "temp"
      (2148335 'move' _args_vforon_fn[2148331](2148333 'cast_to_void_star' _args_foron_fn[2148301]))
      val _args_sizeon_fn[2148337]:int(64)[13] "temp"
      (2148341 'move' _args_sizeon_fn[2148337](2148339 'sizeof_bundle' _class_localson_fn[2148291]))
      on(2148381 call wrapon_fn[2148343] tmp[181417] _args_vforon_fn[2148331] _args_sizeon_fn[2148337] _args_foron_fn[2148301])
    }
    {
    }
    (523263 'move' ret[523258] ret[181383])
    gotoReturn _end_countNumCodepoints[523256] _end_countNumCodepoints[523256]
    label _end_countNumCodepoints[523256]
    (523260 return ret[523258])
  }
  function countNumCodepoints[181436](const in arg buff[181433]:c_ptr(uint(8))[937484], const in arg buffLen[181439]:int(64)[13]) : int(64)[13] "resolved" "fn synchronization free"
  {
    val ret[523269]:int(64)[13] "dead after last mention" "RVV" "temp"
    val n[181443]:int(64)[13] "dead at end of block" "insert auto destroy"
    (545292 'move' n[181443] 0)
    val i[181449]:int(64)[13] "dead at end of block" "insert auto destroy"
    (545294 'move' i[181449] 0)
    {
      val tmp[181533]:bool[10] "dead after last mention" "temp"
      const-val call_tmp[687478]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (687481 'move' call_tmp[687478](181554 call <[437495] i[181449] buffLen[181439]))
      (181557 'move' tmp[181533] call_tmp[687478])
      WhileDo[181538]
      {
        {
          (181459 call +=[451358] i[181449] 1)
          {
            val tmp[181483]:bool[10] "dead after last mention" "temp"
            const-val tmp[429337]:bool[10] "dead after last mention" "maybe param" "temp"
            (429348 'move' tmp[429337](181515 call <[437495] i[181449] buffLen[181439]))
            val tmp[571835]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            const-val tmp[571836]:bool[10] "dead after last mention" "maybe param" "temp"
            const-val call_tmp[687488]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (687491 'move' call_tmp[687488] tmp[429337])
            (571841 'move' tmp[571836] call_tmp[687488])
            if tmp[571836]
            {
              const-val tmp[571843]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
              ref call_tmp[687493]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
              (687496 'move' call_tmp[687493](181523 call this[954152] buff[181433] i[181449]))
              const-val call_tmp[687498]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1019868]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1019872 'move' coerce_tmp[1019868](1019870 'deref' call_tmp[687493]))
              (687501 'move' call_tmp[687498](181521 call isInitialByte[181574] coerce_tmp[1019868]))
              const-val call_tmp[687503]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (687506 'move' call_tmp[687503](181519 call ![7494] call_tmp[687498]))
              (571845 'move' tmp[571843] call_tmp[687503])
              (571850 'move' tmp[571835] tmp[571843])
            }
            {
              (571855 'move' tmp[571835] 0)
            }
            (181525 'move' tmp[181483] tmp[571835])
            WhileDo[181488]
            {
              (181480 call +=[451358] i[181449] 1)
              label _continueLabel[181486]
              const-val tmp[429316]:bool[10] "dead after last mention" "maybe param" "temp"
              (429327 'move' tmp[429316](181496 call <[437495] i[181449] buffLen[181439]))
              val tmp[571862]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              const-val tmp[571863]:bool[10] "dead after last mention" "maybe param" "temp"
              const-val call_tmp[687513]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (687516 'move' call_tmp[687513] tmp[429316])
              (571868 'move' tmp[571863] call_tmp[687513])
              if tmp[571863]
              {
                const-val tmp[571870]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                ref call_tmp[687518]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
                (687521 'move' call_tmp[687518](181504 call this[954152] buff[181433] i[181449]))
                const-val call_tmp[687523]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1019953]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1019957 'move' coerce_tmp[1019953](1019955 'deref' call_tmp[687518]))
                (687526 'move' call_tmp[687523](181502 call isInitialByte[181574] coerce_tmp[1019953]))
                const-val call_tmp[687528]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (687531 'move' call_tmp[687528](181500 call ![7494] call_tmp[687523]))
                (571872 'move' tmp[571870] call_tmp[687528])
                (571877 'move' tmp[571862] tmp[571870])
              }
              {
                (571882 'move' tmp[571862] 0)
              }
              (181506 'move' tmp[181483] tmp[571862])
              tmp[181483]
            }
            label _breakLabel[181487]
          }
          (181530 call +=[451358] n[181443] 1)
        }
        label _continueLabel[181536]
        const-val call_tmp[687533]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (687536 'move' call_tmp[687533](181544 call <[437495] i[181449] buffLen[181439]))
        (181547 'move' tmp[181533] call_tmp[687533])
        tmp[181533]
      }
      label _breakLabel[181537]
    }
    (523274 'move' ret[523269] n[181443])
    gotoReturn _end_countNumCodepoints[523267] _end_countNumCodepoints[523267]
    label _end_countNumCodepoints[523267]
    (523271 return ret[523269])
  }
  function isInitialByte[181574](const in arg b[181571]:uint(8)[100]) : bool[10] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val ret[523280]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[687538]:uint(8)[100] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1019923]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1019929 'move' coerce_tmp[1019923](1019925 'cast' uint(8)[100] 192))
    (687541 'move' call_tmp[687538](181581 call &[446375] b[181571] coerce_tmp[1019923]))
    const-val call_tmp[687543]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1019932]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1019938 'move' coerce_tmp[1019932](1019934 'cast' uint(8)[100] 128))
    (687546 'move' call_tmp[687543](181584 call !=[436077] call_tmp[687538] coerce_tmp[1019932]))
    (1019942 'move' ret[523280] call_tmp[687543])
    (523282 return ret[523280])
  }
  function byte_isWhitespace[181655](const in arg c[181652]:uint(8)[100]) : bool[10] "inline" "resolved" "fn synchronization free"
  {
    val ret[523312]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[687563]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (687566 'move' call_tmp[687563](181674 'cast' int(32)[95] c[181652]))
    const-val call_tmp[687568]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (687571 'move' call_tmp[687568](181677 call isspace[181664] call_tmp[687563]))
    const-val call_tmp[687573]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1125601]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1125607 'move' coerce_tmp[1125601](1125603 'cast' int(32)[95] 0))
    (687576 'move' call_tmp[687573](181679 call !=[436033] call_tmp[687568] coerce_tmp[1125601]))
    (1125611 'move' ret[523312] call_tmp[687573])
    (523314 return ret[523312])
  }
  function qio_encode_char_buf[173958](const in arg dst[173955]:c_void_ptr[149], const in arg chr[173964]:int(32)[95]) : syserr[223605] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[522797]:syserr[223605] "RVV" "temp"
    (522799 return ret[522797])
  }
  function qio_decode_char_buf[174479](ref arg chr[174476]:_ref(int(32))[936687], ref arg nBytes[174482]:_ref(int(32))[936687], const in arg buf[174486]:c_string[19], const in arg buflen[174490]:int(64)[13]) : syserr[223605] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[522825]:syserr[223605] "RVV" "temp"
    (522827 return ret[522825])
  }
  function qio_decode_char_buf_esc[174506](ref arg chr[174503]:_ref(int(32))[936687], ref arg nBytes[174509]:_ref(int(32))[936687], const in arg buf[174513]:c_string[19], const in arg buffLen[174517]:int(64)[13]) : syserr[223605] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[522831]:syserr[223605] "RVV" "temp"
    (522833 return ret[522831])
  }
  function isspace[181664](const in arg c[181661]:int(32)[95]) : int(32)[95] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[523306]:int(32)[95] "RVV" "temp"
    (523308 return ret[523306])
  }
  function on_fn[935525](const  ref arg x[1841198]:_ref(string)[938000], ref arg ret[1841200]:_ref(int(64))[936633]) : void[4] "on" "resolved" "fn synchronization free"
  {
    {
      ref call_tmp[687461]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "reference to a const" "temp"
      (687464 'move' call_tmp[687461](181402 call buff[758025] x[1841198]))
      ref call_tmp[687468]:_ref(int(64))[936633] "dead after last mention" "maybe param" "reference to a const" "temp"
      (687471 'move' call_tmp[687468](181407 call buffLen[757947] x[1841198]))
      const-val call_tmp[687473]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1019845]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1019849 'move' coerce_tmp[1019845](1019847 'deref' call_tmp[687461]))
      const-val coerce_tmp[1019851]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1019855 'move' coerce_tmp[1019851](1019853 'deref' call_tmp[687468]))
      (687476 'move' call_tmp[687473](181410 call countNumCodepoints[181436] coerce_tmp[1019845] coerce_tmp[1019851]))
      (181411 call =[435370] ret[1841200] call_tmp[687473])
    }
    (935532 return _void[55])
  }
  function _cast[957370](const in arg b[957376]:c_ptr(uint(8))[937484]) : c_string[19] "inline" "resolved"
  {
    val _formal_type_tmp_[1838640]:c_string[19] "temp"
    val ret[957379]:c_string[19] "dead after last mention" "RVV" "temp"
    const-val call_tmp[957381]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (957383 'move' call_tmp[957381](957385 'cast' c_string[19] b[957376]))
    (957388 'move' ret[957379] call_tmp[957381])
    (957392 return ret[957379])
  }
  function on_fn[979214](ref arg lhs[1841226]:_ref(string)[938000], const  ref arg rhs[1841228]:_ref(string)[938000]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[979220]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
      (979222 'move' call_tmp[979220](979225 call buffLen[757947] lhs[1841226]))
      ref call_tmp[979228]:_ref(int(64))[936633] "dead after last mention" "maybe param" "reference to a const" "temp"
      (979230 'move' call_tmp[979228](979233 call buffLen[757947] rhs[1841228]))
      const-val call_tmp[979236]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[980017]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (980021 'move' coerce_tmp[980017](980019 'deref' call_tmp[979220]))
      const-val coerce_tmp[980023]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (980027 'move' coerce_tmp[980023](980025 'deref' call_tmp[979228]))
      (979238 'move' call_tmp[979236](979241 call safeAdd[979790] coerce_tmp[980017] coerce_tmp[980023]))
      const-val call_tmp[979244]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (979246 'move' call_tmp[979244](979249 call ![7494] call_tmp[979236]))
      const-val call_tmp[979251]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (979253 'move' call_tmp[979251] call_tmp[979244])
      if call_tmp[979251]
      {
        (979261 call halt[154111] "Buffer overflow allocating string copy data")
      }
      ref call_tmp[979264]:_ref(int(64))[936633] "dead at end of block" "maybe param" "temp"
      (979266 'move' call_tmp[979264](979269 call buffLen[757947] lhs[1841226]))
      ref call_tmp[979272]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
      (979274 'move' call_tmp[979272](979277 call buffLen[757947] rhs[1841228]))
      const-val call_tmp[979280]:int(64)[13] "dead at end of block" "maybe param" "temp"
      const-val coerce_tmp[980521]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (980525 'move' coerce_tmp[980521](980523 'deref' call_tmp[979264]))
      const-val coerce_tmp[980527]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (980531 'move' coerce_tmp[980527](980529 'deref' call_tmp[979272]))
      (979282 'move' call_tmp[979280](979285 call +[439679] coerce_tmp[980521] coerce_tmp[980527]))
      const-val newLength[979288]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      (979290 'move' newLength[979288] call_tmp[979280])
      ref call_tmp[979294]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
      (979296 'move' call_tmp[979294](979299 call buffSize[757973] lhs[1841226]))
      const-val call_tmp[979302]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[980535]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (980539 'move' coerce_tmp[980535](980537 'deref' call_tmp[979294]))
      (979304 'move' call_tmp[979302](979307 call <=[437055] coerce_tmp[980535] newLength[979288]))
      const-val call_tmp[979310]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (979312 'move' call_tmp[979310] call_tmp[979302])
      if call_tmp[979310]
      {
        const-val call_tmp[979319]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (979321 'move' call_tmp[979319](979324 call +[949727] newLength[979288]))
        ref call_tmp[979327]:_ref(int(64))[936633] "dead at end of block" "maybe param" "temp"
        (979329 'move' call_tmp[979327](979332 call buffLen[757947] lhs[1841226]))
        const-val call_tmp[979335]:real(64)[16] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[980544]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (980548 'move' coerce_tmp[980544](980546 'deref' call_tmp[979327]))
        const-val coerce_tmp[980550]:real(64)[16] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (980556 'move' coerce_tmp[980550](980552 'cast' real(64)[16] coerce_tmp[980544]))
        (979337 'move' call_tmp[979335](979340 call *[442003] coerce_tmp[980550] 1.5))
        const-val call_tmp[979343]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (979345 'move' call_tmp[979343](979348 call _cast[980559] call_tmp[979335]))
        const-val call_tmp[979351]:int(64)[13] "dead at end of block" "maybe param" "temp"
        (979353 'move' call_tmp[979351](979356 call max[450151] call_tmp[979319] call_tmp[979343]))
        const-val requestedSize[979359]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        (979361 'move' requestedSize[979359] call_tmp[979351])
        ref call_tmp[979366]:_ref(bool)[937260] "dead after last mention" "maybe param" "temp"
        (979368 'move' call_tmp[979366](979371 call isOwned[758051] lhs[1841226]))
        const-val call_tmp[979374]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val tmp[980592]:bool[10] "dead after last mention" "const" "temp"
        (980594 'move' tmp[980592](980596 'deref' call_tmp[979366]))
        (979376 'move' call_tmp[979374] tmp[980592])
        if call_tmp[979374]
        {
          ref call_tmp[979383]:_ref(c_ptr(uint(8)))[937493] "dead at end of block" "maybe param" "temp"
          (979385 'move' call_tmp[979383](979388 call buff[758025] lhs[1841226]))
          const-val call_tmp[979391]:(c_ptr(uint(8)),int(64))[955269] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[980599]:c_ptr(uint(8))[937484] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (980603 'move' coerce_tmp[980599](980601 'deref' call_tmp[979383]))
          const-val ret_tmp[1864746]:(c_ptr(uint(8)),int(64))[955269] "temp"
          (979396 call bufferRealloc[172738] coerce_tmp[980599] requestedSize[979359] ret_tmp[1864746])
          (1864749 'move' call_tmp[979391] ret_tmp[1864746])
          const-val tmp[979399]:(c_ptr(uint(8)),int(64))[955269] "dead at end of block" "insert auto destroy" "temp"
          (979401 'move' tmp[979399] call_tmp[979391])
          1
          ref call_tmp[979409]:_ref(c_ptr(uint(8)))[937493] "dead at end of block" "maybe param" "temp"
          (979411 'move' call_tmp[979409](980613 '.' tmp[979399] x0[955265]))
          val newBuff[979416]:c_ptr(uint(8))[937484] "dead at end of block" "insert auto destroy"
          val coerce_tmp[980618]:c_ptr(uint(8))[937484] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (980622 'move' coerce_tmp[980618](980620 'deref' call_tmp[979409]))
          (979418 'move' newBuff[979416](980616 call chpl__initCopy[954091] coerce_tmp[980618]))
          ref call_tmp[979421]:_ref(int(64))[936633] "dead at end of block" "maybe param" "temp"
          (979423 'move' call_tmp[979421](980627 '.' tmp[979399] x1[955267]))
          const-val allocSize[979428]:int(64)[13] "dead at end of block" "insert auto destroy"
          const-val coerce_tmp[980632]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (980636 'move' coerce_tmp[980632](980634 'deref' call_tmp[979421]))
          (979430 'move' allocSize[979428](980630 call chpl__initCopy[955393] coerce_tmp[980632]))
          ref call_tmp[979434]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "temp"
          (979436 'move' call_tmp[979434](979439 call buff[758025] lhs[1841226]))
          (979443 call =[954274] call_tmp[979434] newBuff[979416])
          ref call_tmp[979448]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
          (979450 'move' call_tmp[979448](979453 call buffSize[757973] lhs[1841226]))
          (979457 call =[435370] call_tmp[979448] allocSize[979428])
          (1877479 call chpl__autoDestroy[1565916] tmp[979399])
        }
        {
          const-val call_tmp[979463]:(c_ptr(uint(8)),int(64))[955269] "dead at end of block" "maybe param" "temp"
          const-val ret_tmp[1865586]:(c_ptr(uint(8)),int(64))[955269] "temp"
          (979468 call bufferAlloc[955079] requestedSize[979359] ret_tmp[1865586])
          (1865589 'move' call_tmp[979463] ret_tmp[1865586])
          const-val tmp[979470]:(c_ptr(uint(8)),int(64))[955269] "dead at end of block" "insert auto destroy" "temp"
          (979472 'move' tmp[979470] call_tmp[979463])
          1
          ref call_tmp[979480]:_ref(c_ptr(uint(8)))[937493] "dead at end of block" "maybe param" "temp"
          (979482 'move' call_tmp[979480](980651 '.' tmp[979470] x0[955265]))
          val newBuff[979487]:c_ptr(uint(8))[937484] "dead at end of block" "insert auto destroy"
          val coerce_tmp[980656]:c_ptr(uint(8))[937484] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (980660 'move' coerce_tmp[980656](980658 'deref' call_tmp[979480]))
          (979489 'move' newBuff[979487](980654 call chpl__initCopy[954091] coerce_tmp[980656]))
          ref call_tmp[979492]:_ref(int(64))[936633] "dead at end of block" "maybe param" "temp"
          (979494 'move' call_tmp[979492](980665 '.' tmp[979470] x1[955267]))
          const-val allocSize[979499]:int(64)[13] "dead at end of block" "insert auto destroy"
          const-val coerce_tmp[980670]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (980674 'move' coerce_tmp[980670](980672 'deref' call_tmp[979492]))
          (979501 'move' allocSize[979499](980668 call chpl__initCopy[955393] coerce_tmp[980670]))
          ref call_tmp[979505]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "temp"
          (979507 'move' call_tmp[979505](979510 call buff[758025] lhs[1841226]))
          ref call_tmp[979513]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
          (979515 'move' call_tmp[979513](979518 call buffLen[757947] lhs[1841226]))
          val coerce_tmp[980684]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (980688 'move' coerce_tmp[980684](980686 'deref' call_tmp[979505]))
          const-val coerce_tmp[980690]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (980694 'move' coerce_tmp[980690](980692 'deref' call_tmp[979513]))
          (979522 call bufferMemcpyLocal[173122] newBuff[979487] coerce_tmp[980684] coerce_tmp[980690] 0 0)
          ref call_tmp[979530]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "temp"
          (979532 'move' call_tmp[979530](979535 call buff[758025] lhs[1841226]))
          (979539 call =[954274] call_tmp[979530] newBuff[979487])
          ref call_tmp[979544]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
          (979546 'move' call_tmp[979544](979549 call buffSize[757973] lhs[1841226]))
          (979553 call =[435370] call_tmp[979544] allocSize[979499])
          ref call_tmp[979558]:_ref(bool)[937260] "dead after last mention" "maybe param" "temp"
          (979560 'move' call_tmp[979558](979563 call isOwned[758051] lhs[1841226]))
          (979567 call =[435217] call_tmp[979558] 1)
          (1877483 call chpl__autoDestroy[1565916] tmp[979470])
        }
      }
      ref call_tmp[979572]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "temp"
      (979574 'move' call_tmp[979572](979577 call buff[758025] lhs[1841226]))
      ref call_tmp[979580]:_ref(int(32))[936687] "dead after last mention" "maybe param" "reference to a const" "temp"
      (979582 'move' call_tmp[979580](979585 call locale_id[758103] rhs[1841228]))
      ref call_tmp[979588]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "reference to a const" "temp"
      (979590 'move' call_tmp[979588](979593 call buff[758025] rhs[1841228]))
      ref call_tmp[979596]:_ref(int(64))[936633] "dead after last mention" "maybe param" "reference to a const" "temp"
      (979598 'move' call_tmp[979596](979601 call buffLen[757947] rhs[1841228]))
      ref call_tmp[979604]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
      (979606 'move' call_tmp[979604](979609 call buffLen[757947] lhs[1841226]))
      val coerce_tmp[980733]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (980737 'move' coerce_tmp[980733](980735 'deref' call_tmp[979572]))
      const-val coerce_tmp[980739]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (980743 'move' coerce_tmp[980739](980741 'deref' call_tmp[979580]))
      const-val coerce_tmp[980745]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (980751 'move' coerce_tmp[980745](980747 'cast' int(64)[13] coerce_tmp[980739]))
      val coerce_tmp[980753]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (980757 'move' coerce_tmp[980753](980755 'deref' call_tmp[979588]))
      const-val coerce_tmp[980759]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (980763 'move' coerce_tmp[980759](980761 'deref' call_tmp[979596]))
      const-val coerce_tmp[980765]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (980769 'move' coerce_tmp[980765](980767 'deref' call_tmp[979604]))
      (979613 call bufferMemcpy[173042] coerce_tmp[980733] coerce_tmp[980745] coerce_tmp[980753] coerce_tmp[980759] coerce_tmp[980765] 0)
      ref call_tmp[979623]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
      (979625 'move' call_tmp[979623](979628 call buffLen[757947] lhs[1841226]))
      (979632 call =[435370] call_tmp[979623] newLength[979288])
      ref call_tmp[979637]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
      ref _this_tmp_[980885]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "temp"
      (980887 'move' _this_tmp_[980885](979642 call buff[758025] lhs[1841226]))
      val coerce_tmp[980892]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (980896 'move' coerce_tmp[980892](980894 'deref' _this_tmp_[980885]))
      (979639 'move' call_tmp[979637](979645 call this[954152] coerce_tmp[980892] newLength[979288]))
      const-val coerce_tmp[980899]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (980905 'move' coerce_tmp[980899](980901 'cast' uint(8)[100] 0))
      (979648 call =[435391] call_tmp[979637] coerce_tmp[980899])
      val call_tmp[979653]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        ref call_tmp[979676]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
        (979678 'move' call_tmp[979676](979681 call cachedNumCodepoints[757999] lhs[1841226]))
        ref call_tmp[979684]:_ref(int(64))[936633] "dead after last mention" "maybe param" "reference to a const" "temp"
        (979686 'move' call_tmp[979684](979689 call cachedNumCodepoints[757999] rhs[1841228]))
        const-val coerce_tmp[980913]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (980917 'move' coerce_tmp[980913](980915 'deref' call_tmp[979684]))
        (979693 call +=[451358] call_tmp[979676] coerce_tmp[980913])
      }
    }
    (979697 return _void[55])
  }
  function helpMe[1019253](ref arg lhs[1019258]:_ref(string)[938000], const  ref arg rhs[1019263]:string[26]) : void[4] "inline" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val tmp[1019284]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1019308]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    ref call_tmp[1019310]:_ref(int(32))[936687] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1019312 'move' call_tmp[1019310](1019315 call locale_id[758103] rhs[1019263]))
    const-val call_tmp[1019318]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1019805]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1019809 'move' coerce_tmp[1019805](1019807 'deref' call_tmp[1019310]))
    (1019320 'move' call_tmp[1019318](1019323 call ==[435649] coerce_tmp[1019805] chpl_nodeID[208207]))
    (1019326 'move' tmp[1019308] call_tmp[1019318])
    (1019331 'move' tmp[1019284] tmp[1019308])
    const-val call_tmp[1019337]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1019339 'move' call_tmp[1019337] tmp[1019284])
    if call_tmp[1019337]
    {
      val call_tmp[1019346]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        ref call_tmp[1019369]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1019371 'move' call_tmp[1019369](1019374 call buff[758025] rhs[1019263]))
        ref call_tmp[1019377]:_ref(int(64))[936633] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1019379 'move' call_tmp[1019377](1019382 call buffLen[757947] rhs[1019263]))
        ref call_tmp[1019385]:_ref(int(64))[936633] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1019387 'move' call_tmp[1019385](1019390 call buffSize[757973] rhs[1019263]))
        const-val call_tmp[1019393]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1019395 'move' call_tmp[1019393](1019398 call numCodepoints[32826] rhs[1019263]))
        val coerce_tmp[1020572]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1020576 'move' coerce_tmp[1020572](1020574 'deref' call_tmp[1019369]))
        const-val coerce_tmp[1020578]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1020582 'move' coerce_tmp[1020578](1020580 'deref' call_tmp[1019377]))
        const-val coerce_tmp[1020584]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1020588 'move' coerce_tmp[1020584](1020586 'deref' call_tmp[1019385]))
        (1019402 call reinitWithNewBuffer[1019969] lhs[1019258] coerce_tmp[1020572] coerce_tmp[1020578] coerce_tmp[1020584] call_tmp[1019393])
      }
    }
    {
      ref call_tmp[1019441]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1019443 'move' call_tmp[1019441](1019446 call buffLen[757947] rhs[1019263]))
      const-val len[1019449]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1020961]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1020965 'move' coerce_tmp[1020961](1020963 'deref' call_tmp[1019441]))
      (1019451 'move' len[1019449](1020959 call chpl__initCopy[955393] coerce_tmp[1020961]))
      val remote_buf[1019455]:c_ptr(uint(8))[937484] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1020968]:c_ptr(uint(8))[937484] "dead at end of block" "temp"
      (1020971 'move' init_coerce_tmp[1020968](1021510 'cast' c_ptr(uint(8))[937484] nil[44]))
      (1019457 'move' remote_buf[1019455] init_coerce_tmp[1020968])
      const-val call_tmp[1019462]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1019464 'move' call_tmp[1019462](1019467 call !=[436055] len[1019449] 0))
      const-val call_tmp[1019470]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1019472 'move' call_tmp[1019470] call_tmp[1019462])
      if call_tmp[1019470]
      {
        ref call_tmp[1019479]:_ref(int(32))[936687] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1019481 'move' call_tmp[1019479](1019484 call locale_id[758103] rhs[1019263]))
        ref call_tmp[1019487]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1019489 'move' call_tmp[1019487](1019492 call buff[758025] rhs[1019263]))
        val call_tmp[1019495]:c_ptr(uint(8))[937484] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1020977]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1020981 'move' coerce_tmp[1020977](1020979 'deref' call_tmp[1019479]))
        const-val coerce_tmp[1020983]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1020989 'move' coerce_tmp[1020983](1020985 'cast' int(64)[13] coerce_tmp[1020977]))
        val coerce_tmp[1020991]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1020995 'move' coerce_tmp[1020991](1020993 'deref' call_tmp[1019487]))
        (1019497 'move' call_tmp[1019495](1019500 call bufferCopyRemote[172830] coerce_tmp[1020983] coerce_tmp[1020991] len[1019449]))
        (1019505 call =[954274] remote_buf[1019455] call_tmp[1019495])
      }
      val call_tmp[1019512]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        const-val call_tmp[1019535]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1019537 'move' call_tmp[1019535](1019540 call +[949727] len[1019449]))
        ref call_tmp[1019543]:_ref(int(64))[936633] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1019545 'move' call_tmp[1019543](1019548 call cachedNumCodepoints[757999] rhs[1019263]))
        const-val coerce_tmp[1021440]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1021444 'move' coerce_tmp[1021440](1021442 'deref' call_tmp[1019543]))
        (1019552 call reinitWithOwnedBuffer[1021016] lhs[1019258] remote_buf[1019455] len[1019449] call_tmp[1019535] coerce_tmp[1021440])
      }
    }
    (1019583 return _void[55])
  }
  function on_fn[1019702](ref arg lhs[1841264]:_ref(string)[938000], const  ref arg rhs[1841266]:_ref(string)[938000]) : void[4] "on" "resolved" "fn synchronization free"
  {
    {
      (1019709 call helpMe[1019253] lhs[1841264] rhs[1841266])
    }
    (1019712 return _void[55])
  }
  function on_fn[1030199](const in arg needle[1841300]:__serializeHelper[28089], const  ref arg x[1841302]:_ref(string)[938000], const in arg region[1841304]:range(byteIndex,bounded,false)[1025853], ref arg ret[1841306]:_ref(int(64))[936633]) : void[4] "on" "resolved"
  {
    val needle[2145456]:string[26] "temp"
    ref needle[2145457]:string[26] "temp"
    ref tmp[2145463]:string[26] "temp"
    (2145467 'move' tmp[2145463](2145465 'set reference' needle[2145456]))
    (2145460 call chpl__deserialize[1826353] needle[1841300] tmp[2145463])
    (2145472 'move' needle[2145457](2145470 'set reference' needle[2145456]))
    {
      val localRet[1030212]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1030214 'move' localRet[1030212] -2)
      ref call_tmp[1030219]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1030221 'move' call_tmp[1030219](1030224 call buffLen[757947] needle[2145457]))
      const-val nLen[1030227]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1031208]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1031212 'move' coerce_tmp[1031208](1031210 'deref' call_tmp[1030219]))
      (1877727 '=' nLen[1030227] coerce_tmp[1031208])
      (1030229 'noop')
      const-val call_tmp[1030233]:(range(int(64),bounded,false),int(64))[1084985] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1866306]:(range(int(64),bounded,false),int(64))[1084985] "temp"
      (1030238 call getView[1031215] x[1841302] region[1841304] ret_tmp[1866306])
      (1866309 'move' call_tmp[1030233] ret_tmp[1866306])
      const-val tmp[1030241]:(range(int(64),bounded,false),int(64))[1084985] "dead at end of block" "const" "insert auto destroy" "temp"
      (1030243 'move' tmp[1030241] call_tmp[1030233])
      1
      ref call_tmp[1030251]:_ref(range(int(64),bounded,false))[1026919] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1030253 'move' call_tmp[1030251](1086862 '.' tmp[1030241] x0[1084981]))
      const-val view[1030258]:range(int(64),bounded,false)[1026875] "dead at end of block" "const" "insert auto destroy"
      (1030260 'move' view[1030258](1086865 'deref' call_tmp[1030251]))
      const-val call_tmp[1030264]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (1030266 'move' call_tmp[1030264](1030269 call size[1035850] view[1030258]))
      const-val xLen[1030272]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      (1030274 'move' xLen[1030272] call_tmp[1030264])
      {
        const-val call_tmp[1030322]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1030324 'move' call_tmp[1030322](1030327 call ==[435671] nLen[1030227] 0))
        const-val call_tmp[1030330]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1030332 'move' call_tmp[1030330] call_tmp[1030322])
        if call_tmp[1030330]
        {
          {
            (1030356 call =[435370] localRet[1030212] -1)
          }
        }
      }
      const-val call_tmp[1030411]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1030413 'move' call_tmp[1030411](1030416 call >[437715] nLen[1030227] xLen[1030272]))
      const-val call_tmp[1030419]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1030421 'move' call_tmp[1030419] call_tmp[1030411])
      if call_tmp[1030419]
      {
        (1030436 call =[435370] localRet[1030212] -1)
      }
      const-val call_tmp[1030449]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1030451 'move' call_tmp[1030449](1030454 call ==[435671] localRet[1030212] -2))
      const-val call_tmp[1030457]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1030459 'move' call_tmp[1030457] call_tmp[1030449])
      if call_tmp[1030457]
      {
        (1030474 call =[435370] localRet[1030212] -1)
        const-val call_tmp[1030479]:string[26] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1863052]:string[26] "temp"
        (1030487 call localize[32889] needle[2145457] ret_tmp[1863052])
        (1863055 'move' call_tmp[1030479] ret_tmp[1863052])
        const localNeedle[1030488]:string[26] "dead at end of block" "const" "insert auto destroy"
        (1030490 'move' localNeedle[1030488] call_tmp[1030479])
        ref call_tmp[1030494]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1030496 'move' call_tmp[1030494](1030499 call buffLen[757947] localNeedle[1030488]))
        const-val needleLen[1030502]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[1086911]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1086915 'move' coerce_tmp[1086911](1086913 'deref' call_tmp[1030494]))
        (1030504 'move' needleLen[1030502](1086909 call chpl__initCopy[955393] coerce_tmp[1086911]))
        const-val call_tmp[1030508]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1030510 'move' call_tmp[1030508](1030513 call -[440459] xLen[1030272] nLen[1030227]))
        const-val call_tmp[1030516]:int(64)[13] "dead at end of block" "maybe param" "temp"
        (1030518 'move' call_tmp[1030516](1030521 call +[949727] call_tmp[1030508]))
        const-val numPossible[1030524]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        (1030526 'move' numPossible[1030524] call_tmp[1030516])
        const-val searchSpace[1030530]:range(int(64),bounded,false)[1026875] "dead at end of block" "const" "insert auto destroy"
        const-val tmp[1030532]:range(int(64),bounded,false)[1026875] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val tmp[1030543]:range(int(64),bounded,false)[1026875] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1030545]:range(int(64),boundedLow,false)[1087626] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1867168]:range(int(64),boundedLow,false)[1087626] "temp"
        (1030550 call chpl_build_low_bounded_range[1087019] 0 ret_tmp[1867168])
        (1867171 'move' call_tmp[1030545] ret_tmp[1867168])
        const-val ret_tmp[1867288]:range(int(64),bounded,false)[1026875] "temp"
        (1030555 call #[1087986] call_tmp[1030545] numPossible[1030524] ret_tmp[1867288])
        (1867291 'move' tmp[1030543] ret_tmp[1867288])
        (1030558 'move' tmp[1030532] tmp[1030543])
        (1030600 'move' searchSpace[1030530] tmp[1030532])
        {
          val _indexOfInterest[1030610]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1030612]:_ic_these_range_int64_t_bounded_F[1096764] "dead at end of block" "expr temp" "temp"
          (1030614 'move' _iterator[1030612](1030617 call _getIterator[1095381] searchSpace[1030530]))
          {
            val ret[1948252]:_ir_these_range_int64_t_bounded_F[1096770] "dead after last mention" "RVV" "temp"
            const-val _return_tmp_[1948254]:bool[10] "dead after last mention" "temp"
            const-val this[1948555]:range(int(64),bounded,false)[1026875] "temp"
            (1948560 'move' this[1948555](1948557 '.v' _iterator[1030612] F0_this[2063641]))
            (1948256 'move' _return_tmp_[1948254](1948259 call checkIfIterWillOverflow[1095875] this[1948555] 1))
            val i[1948262]:int(64)[13] "dead at end of block" "insert auto destroy"
            val call_tmp[1948264]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (1948266 'move' i[1948262] 0)
            ref call_tmp[1948269]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[1948562]:range(int(64),bounded,false)[1026875] "temp"
            (1948567 'move' this[1948562](1948564 '.v' _iterator[1030612] F0_this[2063641]))
            (1948271 'move' call_tmp[1948269](1948274 call _low[1028513] this[1948562]))
            const-val start[1948276]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1948278]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1948280 'move' coerce_tmp[1948278](1948282 'deref' call_tmp[1948269]))
            (1948284 '=' start[1948276] coerce_tmp[1948278])
            (1948287 'noop')
            ref call_tmp[1948288]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[1948569]:range(int(64),bounded,false)[1026875] "temp"
            (1948574 'move' this[1948569](1948571 '.v' _iterator[1030612] F0_this[2063641]))
            (1948290 'move' call_tmp[1948288](1948293 call _high[1028721] this[1948569]))
            const end[1948295]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1948297]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1948299 'move' coerce_tmp[1948297](1948301 'deref' call_tmp[1948288]))
            (1948303 '=' end[1948295] coerce_tmp[1948297])
            (1948306 'noop')
            CForLoop[1948307] hazard
            {
              const-val yret[1948322]:int(64)[13] "dead after last mention" "YVV" "temp"
              const-val call_tmp[1948324]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val this[1948576]:range(int(64),bounded,false)[1026875] "temp"
              (1948581 'move' this[1948576](1948578 '.v' _iterator[1030612] F0_this[2063641]))
              (1948326 'move' call_tmp[1948324](1948329 call chpl_intToIdx[1028541] this[1948576] i[1948262]))
              (1948332 'move' yret[1948322] call_tmp[1948324])
              const-val _yieldedIndex[1948346]:int(64)[13] "temp"
              (1948553 'move' _yieldedIndex[1948346] call_tmp[1948324])
              {
                const-val i[1948348]:int(64)[13] "const" "index var" "insert auto destroy"
                (1948350 'move' i[1948348] _yieldedIndex[1948346])
                {
                  {
                    val _indexOfInterest[1948355]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[1948357]:_ic_chpl_direct_counted_range_iter[1103851] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[1948359]:_ir_chpl_direct_counted_range_iter[1103857] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[1948361]:_ir_chpl_direct_counted_range_iter[1103857] "temp"
                    (1948364 call chpl_direct_counted_range_iter[458039] 0 nLen[1030227] ret_tmp[1948361])
                    (1948368 'move' call_tmp[1948359] ret_tmp[1948361])
                    (1948371 'move' _iterator[1948357](1948374 call _getIterator[1103866] call_tmp[1948359]))
                    {
                      val ret[2014988]:_ir_chpl_direct_counted_range_iter[1103857] "dead after last mention" "RVV" "temp"
                      val _indexOfInterest[2014990]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[2014992]:_ic_chpl_direct_counted_range_iter_helper[1103601] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[2014994]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[2014996]:_ir_chpl_direct_counted_range_iter_helper[1103607] "temp"
                      const-val low[2015588]:int(64)[13] "temp"
                      (2015593 'move' low[2015588](2015590 '.v' _iterator[1948357] F0_low[2058106]))
                      const-val count[2015595]:int(64)[13] "temp"
                      (2015600 'move' count[2015595](2015597 '.v' _iterator[1948357] F1_count[2058110]))
                      (2014999 call chpl_direct_counted_range_iter_helper[1102159] low[2015588] count[2015595] ret_tmp[2014996])
                      (2015003 'move' call_tmp[2014994] ret_tmp[2014996])
                      (2015006 'move' _iterator[2014992](2015009 call _getIterator[1103616] call_tmp[2014994]))
                      {
                        val ret[2015012]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead after last mention" "RVV" "temp"
                        val call_tmp[2015014]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                        const-val tmp[2015016]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val tmp[2015018]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                        const-val call_tmp[2015020]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[2015022]:int(64)[13] "temp"
                        (2015024 'move' count[2015022](2015026 '.v' _iterator[2014992] F1_count[2064268]))
                        (2015029 'move' call_tmp[2015020](2015032 call <[948459] count[2015022]))
                        (2015034 'move' tmp[2015018] call_tmp[2015020])
                        (2015037 'move' tmp[2015016] call_tmp[2015020])
                        const-val call_tmp[2015040]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (2015042 'move' call_tmp[2015040] call_tmp[2015020])
                        if call_tmp[2015020]
                        {
                          (2015048 call boundsCheckHalt[210187] "With a negative count, the range must have a last index.")
                        }
                        const-val tmp[2015051]:2*int(64)[1040117] "dead at end of block" "const" "insert auto destroy" "temp"
                        val tmp[2015053]:2*int(64)[1040117] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                        const-val tmp[2015055]:bool[10] "dead after last mention" "maybe param" "temp"
                        const-val call_tmp[2015057]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[2015059]:int(64)[13] "temp"
                        (2015061 'move' count[2015059](2015063 '.v' _iterator[2014992] F1_count[2064268]))
                        (2015066 'move' call_tmp[2015057](2015069 call ==[435671] count[2015059] 0))
                        (2015072 'move' tmp[2015055] call_tmp[2015057])
                        if call_tmp[2015057]
                        {
                          const-val tmp[2015077]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                          val call_tmp[2015079]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[2015081]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val low[2015083]:int(64)[13] "temp"
                          (2015085 'move' low[2015083](2015087 '.v' _iterator[2014992] F0_low[2064264]))
                          (2015090 'move' call_tmp[2015081](2015093 call _cast[956095] low[2015083]))
                          const-val call_tmp[2015095]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[2015097]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                          (2015099 'move' coerce_tmp[2015097](2015101 'cast' uint(64)[115] 1))
                          (2015104 'move' call_tmp[2015095](2015107 call -[962254] call_tmp[2015081]))
                          const-val call_tmp[2015109]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          (2015111 'move' call_tmp[2015109](2015114 call _cast[953604] call_tmp[2015095]))
                          const-val ret_tmp[2015116]:2*int(64)[1040117] "temp"
                          const-val low[2015118]:int(64)[13] "temp"
                          (2015120 'move' low[2015118](2015122 '.v' _iterator[2014992] F0_low[2064264]))
                          (2015126 call _build_tuple[1040075] low[2015118] call_tmp[2015109] ret_tmp[2015116])
                          (2015130 'move' tmp[2015077] ret_tmp[2015116])
                          (2015133 'move' tmp[2015053] tmp[2015077])
                        }
                        {
                          const-val tmp[2015137]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                          val call_tmp[2015139]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[2015141]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val count[2015143]:int(64)[13] "temp"
                          (2015145 'move' count[2015143](2015147 '.v' _iterator[2014992] F1_count[2064268]))
                          (2015150 'move' call_tmp[2015141] count[2015143])
                          const-val call_tmp[2015153]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val count[2015155]:int(64)[13] "temp"
                          (2015157 'move' count[2015155](2015159 '.v' _iterator[2014992] F1_count[2064268]))
                          (2015162 'move' call_tmp[2015153](2015165 call -[962287] count[2015155]))
                          const-val call_tmp[2015167]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val low[2015169]:int(64)[13] "temp"
                          (2015171 'move' low[2015169](2015173 '.v' _iterator[2014992] F0_low[2064264]))
                          (2015176 'move' call_tmp[2015167](2015179 call +[439679] low[2015169] call_tmp[2015153]))
                          const-val ret_tmp[2015182]:2*int(64)[1040117] "temp"
                          const-val low[2015184]:int(64)[13] "temp"
                          (2015186 'move' low[2015184](2015188 '.v' _iterator[2014992] F0_low[2064264]))
                          (2015192 call _build_tuple[1040075] low[2015184] call_tmp[2015167] ret_tmp[2015182])
                          (2015196 'move' tmp[2015137] ret_tmp[2015182])
                          (2015199 'move' tmp[2015053] tmp[2015137])
                        }
                        (2015203 '=' tmp[2015051] tmp[2015053])
                        (2015206 'noop')
                        1
                        ref call_tmp[2015208]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
                        (2015210 'move' call_tmp[2015208](2015212 '.' tmp[2015051] x0[1040113]))
                        const-val start[2015215]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                        const-val coerce_tmp[2015217]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                        (2015219 'move' coerce_tmp[2015217](2015221 'deref' call_tmp[2015208]))
                        (2015223 '=' start[2015215] coerce_tmp[2015217])
                        (2015226 'noop')
                        ref call_tmp[2015227]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
                        (2015229 'move' call_tmp[2015227](2015231 '.' tmp[2015051] x1[1040115]))
                        const-val end[2015234]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                        const-val coerce_tmp[2015236]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                        (2015238 'move' coerce_tmp[2015236](2015240 'deref' call_tmp[2015227]))
                        (2015242 '=' end[2015234] coerce_tmp[2015236])
                        (2015245 'noop')
                        val _indexOfInterest[2015246]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[2015248]:_ic_chpl_direct_param_stride_range_iter[1103347] "dead at end of block" "expr temp" "temp"
                        const-val call_tmp[2015250]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead at end of block" "expr temp" "maybe param" "temp"
                        const-val ret_tmp[2015252]:_ir_chpl_direct_param_stride_range_iter[1103353] "temp"
                        (2015255 call chpl_direct_param_stride_range_iter[1102585] coerce_tmp[2015217] coerce_tmp[2015236] ret_tmp[2015252])
                        (2015259 'move' call_tmp[2015250] ret_tmp[2015252])
                        (2015262 'move' _iterator[2015248](2015265 call _getIterator[1103362] call_tmp[2015250]))
                        {
                          val ret[2015268]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead after last mention" "RVV" "temp"
                          val call_tmp[2015270]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (2015273 call chpl_range_check_stride[1102905])
                          val i[2015274]:int(64)[13] "dead at end of block" "insert auto destroy"
                          val call_tmp[2015276]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (2015278 'move' i[2015274] 0)
                          val call_tmp[2015281]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val default_arg_first[2015283]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val low[2015285]:int(64)[13] "temp"
                          (2015287 'move' low[2015285](2015289 '.v' _iterator[2015248] F0_low[2065762]))
                          (2015292 'move' default_arg_first[2015283](2015295 call chpl_checkIfRangeIterWillOverflow_default_first[1103259] low[2015285]))
                          const-val default_arg_last[2015297]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val high[2015299]:int(64)[13] "temp"
                          (2015301 'move' high[2015299](2015303 '.v' _iterator[2015248] F1_high[2065766]))
                          (2015306 'move' default_arg_last[2015297](2015309 call chpl_checkIfRangeIterWillOverflow_default_last[1103287] high[2015299]))
                          const-val _return_tmp_[2015311]:bool[10] "dead after last mention" "temp"
                          const-val low[2015313]:int(64)[13] "temp"
                          (2015315 'move' low[2015313](2015317 '.v' _iterator[2015248] F0_low[2065762]))
                          const-val high[2015320]:int(64)[13] "temp"
                          (2015322 'move' high[2015320](2015324 '.v' _iterator[2015248] F1_high[2065766]))
                          (2015327 'move' _return_tmp_[2015311](2015330 call chpl_checkIfRangeIterWillOverflow[1096137] low[2015313] high[2015320] 1 default_arg_first[2015283] default_arg_last[2015297] 1))
                          CForLoop[2015337]
                          {
                            const-val yret[2015366]:int(64)[13] "dead after last mention" "YVV" "temp"
                            (2015368 'move' yret[2015366] i[2015274])
                            const-val _yieldedIndex[2015371]:int(64)[13] "temp"
                            (2015373 'move' _yieldedIndex[2015371] i[2015274])
                            {
                              const-val i[2015377]:int(64)[13] "const" "index var" "insert auto destroy"
                              (2015379 'move' i[2015377] _yieldedIndex[2015371])
                              const-val yret[2015382]:int(64)[13] "dead after last mention" "YVV" "temp"
                              (2015384 'move' yret[2015382] _yieldedIndex[2015371])
                              const-val _yieldedIndex[2015387]:int(64)[13] "temp"
                              (2015389 'move' _yieldedIndex[2015387] _yieldedIndex[2015371])
                              {
                                const-val i[2015393]:int(64)[13] "const" "index var" "insert auto destroy"
                                (2015395 'move' i[2015393] _yieldedIndex[2015387])
                                const-val yret[2015398]:int(64)[13] "dead after last mention" "YVV" "temp"
                                (2015400 'move' yret[2015398] _yieldedIndex[2015387])
                                const-val _yieldedIndex[2015436]:int(64)[13] "temp"
                                (2015586 'move' _yieldedIndex[2015436] _yieldedIndex[2015387])
                                {
                                  const-val j[2015438]:int(64)[13] "const" "index var" "insert auto destroy"
                                  (2015440 'move' j[2015438] _yieldedIndex[2015436])
                                  {
                                    const-val call_tmp[2015444]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                    (2015446 'move' call_tmp[2015444](2015449 call +[439679] i[1948348] j[2015438]))
                                    const-val call_tmp[2015452]:int(64)[13] "dead at end of block" "maybe param" "temp"
                                    (2015454 'move' call_tmp[2015452](2015457 call orderToIndex[1104101] view[1030258] call_tmp[2015444]))
                                    const-val idx[2015460]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                    (2015462 'move' idx[2015460] call_tmp[2015452])
                                    ref call_tmp[2015465]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
                                    ref _this_tmp_[2015467]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "reference to a const" "temp"
                                    (2015469 'move' _this_tmp_[2015467](2015472 call buff[758025] x[1841302]))
                                    val coerce_tmp[2015474]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (2015476 'move' coerce_tmp[2015474](2015478 'deref' _this_tmp_[2015467]))
                                    (2015480 'move' call_tmp[2015465](2015483 call this[954152] coerce_tmp[2015474] idx[2015460]))
                                    ref call_tmp[2015486]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
                                    ref _this_tmp_[2015488]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "reference to a const" "temp"
                                    (2015490 'move' _this_tmp_[2015488](2015493 call buff[758025] localNeedle[1030488]))
                                    val coerce_tmp[2015495]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (2015497 'move' coerce_tmp[2015495](2015499 'deref' _this_tmp_[2015488]))
                                    (2015501 'move' call_tmp[2015486](2015504 call this[954152] coerce_tmp[2015495] j[2015438]))
                                    const-val call_tmp[2015507]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    const-val coerce_tmp[2015509]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (2015511 'move' coerce_tmp[2015509](2015513 'deref' call_tmp[2015465]))
                                    const-val coerce_tmp[2015515]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (2015517 'move' coerce_tmp[2015515](2015519 'deref' call_tmp[2015486]))
                                    (2015521 'move' call_tmp[2015507](2015524 call !=[436077] coerce_tmp[2015509] coerce_tmp[2015515]))
                                    const-val call_tmp[2015527]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (2015529 'move' call_tmp[2015527] call_tmp[2015507])
                                    if call_tmp[2015527]
                                    {
                                      (2015577 call _freeIterator[1103535] _iterator[2015248])
                                      (2015580 call chpl__autoDestroy[1635435] tmp[2015051])
                                      (2015583 call _freeIterator[1103785] _iterator[2014992])
                                      break _breakLabel[1948516] _breakLabel[1948516]
                                    }
                                    const-val call_tmp[2015537]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (2015539 'move' call_tmp[2015537](2015542 call -[962287] nLen[1030227]))
                                    const-val call_tmp[2015544]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (2015546 'move' call_tmp[2015544](2015549 call ==[435671] j[2015438] call_tmp[2015537]))
                                    const-val call_tmp[2015552]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (2015554 'move' call_tmp[2015552] call_tmp[2015544])
                                    if call_tmp[2015552]
                                    {
                                      {
                                        const-val call_tmp[2015560]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                        (2015562 'move' call_tmp[2015560](2015565 call orderToIndex[1104101] view[1030258] i[1948348]))
                                        (2015569 call =[435370] localRet[1030212] call_tmp[2015560])
                                      }
                                    }
                                  }
                                  label _continueLabel[2015573]
                                }
                              }
                            }
                            {
                              const-val low[2015339]:int(64)[13] "temp"
                              (2015341 'move' low[2015339](2015343 '.v' _iterator[2015248] F0_low[2065762]))
                              (2015346 '=' i[2015274] low[2015339])
                            }
                            {
                              const-val high[2015350]:int(64)[13] "temp"
                              (2015352 'move' high[2015350](2015354 '.v' _iterator[2015248] F1_high[2065766]))
                              (2015357 '<=' i[2015274] high[2015350])
                            }
                            {
                              val call_tmp[2015361]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              (2015363 '+=' i[2015274] 1)
                            }
                          }
                          label _endchpl_direct_param_stride_range_iter[2015419]
                        }
                        (2015422 call _freeIterator[1103535] _iterator[2015248])
                        (2015425 call chpl__autoDestroy[1635435] tmp[2015051])
                        label _endchpl_direct_counted_range_iter_helper[2015427]
                      }
                      (2015430 call _freeIterator[1103785] _iterator[2014992])
                      label _endchpl_direct_counted_range_iter[2015432]
                    }
                    label _breakLabel[1948516]
                    (1948519 call _freeIterator[1104035] _iterator[1948357])
                  }
                  const-val tmp[1948521]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  const-val tmp[1948523]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  const-val call_tmp[1948525]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1948527 'move' call_tmp[1948525](1948530 call !=[436055] localRet[1030212] -1))
                  (1948533 'move' tmp[1948523] call_tmp[1948525])
                  (1948536 'move' tmp[1948521] tmp[1948523])
                  const-val call_tmp[1948539]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1948541 'move' call_tmp[1948539] tmp[1948521])
                  if call_tmp[1948539]
                  {
                    break _breakLabel[1030901] _breakLabel[1030901]
                  }
                }
                label _continueLabel[1948549]
              }
              {
                (1948309 '=' i[1948262] coerce_tmp[1948278])
              }
              {
                (1948313 '<=' i[1948262] end[1948295])
              }
              {
                val call_tmp[1948317]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1948319 '+=' i[1948262] 1)
              }
            }
            label _endthese[1948342]
          }
          label _breakLabel[1030901]
          (1877738 call _freeIterator[1102067] _iterator[1030612])
        }
        (1877741 call chpl__autoDestroy[1383553] searchSpace[1030530])
        (1877744 call chpl__autoDestroy[1641507] call_tmp[1030545])
        (1877747 call chpl__autoDestroy[1562275] localNeedle[1030488])
      }
      (1030921 call =[435370] ret[1841306] localRet[1030212])
      (1877751 call chpl__autoDestroy[1383553] view[1030258])
      (1877754 call chpl__autoDestroy[1641462] tmp[1030241])
    }
    (2145474 call chpl__autoDestroy[1562462] needle[1841300])
    (2145477 call chpl__autoDestroy[1562275] needle[2145456])
    (1030927 return _void[55])
  }
  function simpleCaseHelper[1031335](const in arg r[1841308]:range(byteIndex,bounded,false)[1025853], const  ref arg x[1841310]:_ref(string)[938000], ref arg _retArg[1866336]:_ref((range(int(64),bounded,false),int(64)))[1086547]) : void[4] "fn returns via _retArg" "resolved" "fn synchronization free"
  {
    const-val ret[1031338]:(range(int(64),bounded,false),int(64))[1084985] "dead after last mention" "RVV" "temp"
    val call_tmp[1031356]:range(int(64),bounded,false)[1026875] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1031365]:range(int(64),bounded,false)[1026875] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1866342]:range(int(64),bounded,false)[1026875] "temp"
    (1031370 call _cast[1032544] r[1841308] ret_tmp[1866342])
    (1866345 'move' call_tmp[1031365] ret_tmp[1866342])
    const-val intR[1031373]:range(int(64),bounded,false)[1026875] "dead at end of block" "const" "insert auto destroy"
    (1031375 'move' intR[1031373] call_tmp[1031365])
    {
      const-val call_tmp[1031388]:range(int(64),bounded,false)[1026875] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1862828]:range(int(64),bounded,false)[1026875] "temp"
      (1031393 call byteIndices[31068] x[1841310] ret_tmp[1862828])
      (1862831 'move' call_tmp[1031388] ret_tmp[1862828])
      const-val call_tmp[1031396]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1031398 'move' call_tmp[1031396](1031404 call boundsCheck[1033435] call_tmp[1031388] intR[1031373]))
      const-val call_tmp[1031406]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1031408 'move' call_tmp[1031406](1031411 call ![7494] call_tmp[1031396]))
      const-val call_tmp[1031413]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1031415 'move' call_tmp[1031413] call_tmp[1031406])
      if call_tmp[1031413]
      {
        val call_tmp[1031422]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1031452]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1031454 'move' call_tmp[1031452](1031457 call numBytes[32810] x[1841310]))
        (1031461 call halt[1043017] "range " r[1841308] " out of bounds for string with length " call_tmp[1031452])
      }
      (1877758 call chpl__autoDestroy[1383553] call_tmp[1031388])
    }
    val call_tmp[1031468]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      const-val call_tmp[1031493]:range(int(64),bounded,false)[1026875] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1862834]:range(int(64),bounded,false)[1026875] "temp"
      (1031498 call byteIndices[31068] x[1841310] ret_tmp[1862834])
      (1862837 'move' call_tmp[1031493] ret_tmp[1862834])
      const-val call_tmp[1031501]:range(int(64),bounded,false)[1026875] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1866414]:range(int(64),bounded,false)[1026875] "temp"
      (1031506 call this[1037509] intR[1031373] call_tmp[1031493] ret_tmp[1866414])
      (1866417 'move' call_tmp[1031501] ret_tmp[1866414])
      const-val call_tmp[1031515]:(range(int(64),bounded,false),int(64))[1084985] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1867090]:(range(int(64),bounded,false),int(64))[1084985] "temp"
      (1031520 call _build_tuple[1084943] call_tmp[1031501] -1 ret_tmp[1867090])
      (1867093 'move' call_tmp[1031515] ret_tmp[1867090])
      (1031523 'move' ret[1031338] call_tmp[1031515])
      (1877761 call chpl__autoDestroy[1383553] call_tmp[1031501])
      (1877764 call chpl__autoDestroy[1383553] call_tmp[1031493])
      (1877767 call chpl__autoDestroy[1383553] intR[1031373])
      gotoReturn _end_simpleCaseHelper[1031580] _end_simpleCaseHelper[1031580]
    }
    (1877770 call chpl__autoDestroy[1383553] intR[1031373])
    label _end_simpleCaseHelper[1031580]
    (1866338 '=' _retArg[1866336] ret[1031338])
    (1866340 return _void[55])
  }
  function simpleCaseHelper[1112328](const in arg r[1841426]:range(int(64),bounded,false)[1026875], const  ref arg x[1841428]:_ref(string)[938000], ref arg _retArg[1867620]:_ref((range(int(64),bounded,false),int(64)))[1086547]) : void[4] "fn returns via _retArg" "resolved" "fn synchronization free"
  {
    const-val ret[1112331]:(range(int(64),bounded,false),int(64))[1084985] "dead after last mention" "RVV" "temp"
    val call_tmp[1112349]:range(int(64),bounded,false)[1026875] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1112358]:range(int(64),bounded,false)[1026875] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1867626]:range(int(64),bounded,false)[1026875] "temp"
    (1113481 call _removed_cast[1113484] r[1841426] ret_tmp[1867626])
    (1867629 'move' call_tmp[1112358] ret_tmp[1867626])
    const-val intR[1112366]:range(int(64),bounded,false)[1026875] "dead at end of block" "const" "insert auto destroy"
    (1112368 'move' intR[1112366] call_tmp[1112358])
    {
      const-val call_tmp[1112381]:range(int(64),bounded,false)[1026875] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1862840]:range(int(64),bounded,false)[1026875] "temp"
      (1112386 call byteIndices[31068] x[1841428] ret_tmp[1862840])
      (1862843 'move' call_tmp[1112381] ret_tmp[1862840])
      const-val call_tmp[1112389]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1112391 'move' call_tmp[1112389](1112397 call boundsCheck[1033435] call_tmp[1112381] intR[1112366]))
      const-val call_tmp[1112399]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1112401 'move' call_tmp[1112399](1112404 call ![7494] call_tmp[1112389]))
      const-val call_tmp[1112406]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1112408 'move' call_tmp[1112406] call_tmp[1112399])
      if call_tmp[1112406]
      {
        val call_tmp[1112415]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1112445]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1112447 'move' call_tmp[1112445](1112450 call numBytes[32810] x[1841428]))
        (1112454 call halt[1113521] "range " r[1841426] " out of bounds for string with length " call_tmp[1112445])
      }
      (1879260 call chpl__autoDestroy[1383553] call_tmp[1112381])
    }
    val call_tmp[1112461]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      const-val call_tmp[1112525]:range(int(64),bounded,false)[1026875] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1862846]:range(int(64),bounded,false)[1026875] "temp"
      (1112530 call byteIndices[31068] x[1841428] ret_tmp[1862846])
      (1862849 'move' call_tmp[1112525] ret_tmp[1862846])
      const-val call_tmp[1112533]:range(int(64),bounded,false)[1026875] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1866426]:range(int(64),bounded,false)[1026875] "temp"
      (1112538 call this[1037509] intR[1112366] call_tmp[1112525] ret_tmp[1866426])
      (1866429 'move' call_tmp[1112533] ret_tmp[1866426])
      const-val retRange[1112540]:range(int(64),bounded,false)[1026875] "dead at end of block" "const" "insert auto destroy"
      (1112542 'move' retRange[1112540] call_tmp[1112533])
      const-val call_tmp[1112547]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1112549 'move' call_tmp[1112547](1112552 call size[1035850] retRange[1112540]))
      const-val call_tmp[1112555]:(range(int(64),bounded,false),int(64))[1084985] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1867096]:(range(int(64),bounded,false),int(64))[1084985] "temp"
      (1112560 call _build_tuple[1084943] retRange[1112540] call_tmp[1112547] ret_tmp[1867096])
      (1867099 'move' call_tmp[1112555] ret_tmp[1867096])
      (1112563 'move' ret[1112331] call_tmp[1112555])
      (1879263 call chpl__autoDestroy[1383553] retRange[1112540])
      (1879266 call chpl__autoDestroy[1383553] call_tmp[1112525])
      (1879269 call chpl__autoDestroy[1383553] intR[1112366])
      gotoReturn _end_simpleCaseHelper[1112573] _end_simpleCaseHelper[1112573]
    }
    (1879272 call chpl__autoDestroy[1383553] intR[1112366])
    label _end_simpleCaseHelper[1112573]
    (1867622 '=' _retArg[1867620] ret[1112331])
    (1867624 return _void[55])
  }
  function simpleCaseHelper[1126461](const in arg r[1841430]:range(int(64),boundedLow,false)[1087626], const  ref arg x[1841432]:_ref(string)[938000], ref arg _retArg[1867914]:_ref((range(int(64),bounded,false),int(64)))[1086547]) : void[4] "fn returns via _retArg" "resolved" "fn synchronization free"
  {
    const-val ret[1126464]:(range(int(64),bounded,false),int(64))[1084985] "dead after last mention" "RVV" "temp"
    val call_tmp[1126482]:range(int(64),boundedLow,false)[1087626] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1126491]:range(int(64),boundedLow,false)[1087626] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1867920]:range(int(64),boundedLow,false)[1087626] "temp"
    (1127614 call _removed_cast[1127617] r[1841430] ret_tmp[1867920])
    (1867923 'move' call_tmp[1126491] ret_tmp[1867920])
    const-val intR[1126499]:range(int(64),boundedLow,false)[1087626] "dead at end of block" "const" "insert auto destroy"
    (1126501 'move' intR[1126499] call_tmp[1126491])
    {
      const-val call_tmp[1126514]:range(int(64),bounded,false)[1026875] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1862858]:range(int(64),bounded,false)[1026875] "temp"
      (1126519 call byteIndices[31068] x[1841432] ret_tmp[1862858])
      (1862861 'move' call_tmp[1126514] ret_tmp[1862858])
      const-val call_tmp[1126522]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1126524 'move' call_tmp[1126522](1126530 call boundsCheck[1127682] call_tmp[1126514] intR[1126499]))
      const-val call_tmp[1126532]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1126534 'move' call_tmp[1126532](1126537 call ![7494] call_tmp[1126522]))
      const-val call_tmp[1126539]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1126541 'move' call_tmp[1126539] call_tmp[1126532])
      if call_tmp[1126539]
      {
        val call_tmp[1126548]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1126578]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1126580 'move' call_tmp[1126578](1126583 call numBytes[32810] x[1841432]))
        (1126587 call halt[1128345] "range " r[1841430] " out of bounds for string with length " call_tmp[1126578])
      }
      (1879465 call chpl__autoDestroy[1383553] call_tmp[1126514])
    }
    val call_tmp[1126594]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      const-val call_tmp[1126658]:range(int(64),bounded,false)[1026875] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1862864]:range(int(64),bounded,false)[1026875] "temp"
      (1126663 call byteIndices[31068] x[1841432] ret_tmp[1862864])
      (1862867 'move' call_tmp[1126658] ret_tmp[1862864])
      const-val call_tmp[1126666]:range(int(64),bounded,false)[1026875] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1867978]:range(int(64),bounded,false)[1026875] "temp"
      (1126671 call this[1139030] intR[1126499] call_tmp[1126658] ret_tmp[1867978])
      (1867981 'move' call_tmp[1126666] ret_tmp[1867978])
      const-val retRange[1126673]:range(int(64),bounded,false)[1026875] "dead at end of block" "const" "insert auto destroy"
      (1126675 'move' retRange[1126673] call_tmp[1126666])
      const-val call_tmp[1126680]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1126682 'move' call_tmp[1126680](1126685 call size[1035850] retRange[1126673]))
      const-val call_tmp[1126688]:(range(int(64),bounded,false),int(64))[1084985] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1867114]:(range(int(64),bounded,false),int(64))[1084985] "temp"
      (1126693 call _build_tuple[1084943] retRange[1126673] call_tmp[1126680] ret_tmp[1867114])
      (1867117 'move' call_tmp[1126688] ret_tmp[1867114])
      (1126696 'move' ret[1126464] call_tmp[1126688])
      (1879468 call chpl__autoDestroy[1383553] retRange[1126673])
      (1879471 call chpl__autoDestroy[1383553] call_tmp[1126658])
      (1879474 call chpl__autoDestroy[1641507] intR[1126499])
      gotoReturn _end_simpleCaseHelper[1126706] _end_simpleCaseHelper[1126706]
    }
    (1879477 call chpl__autoDestroy[1641507] intR[1126499])
    label _end_simpleCaseHelper[1126706]
    (1867916 '=' _retArg[1867914] ret[1126464])
    (1867918 return _void[55])
  }
  function simpleCaseHelper[1144622](const in arg r[1841434]:range(byteIndex,boundedLow,false)[1143464], const  ref arg x[1841436]:_ref(string)[938000], ref arg _retArg[1868130]:_ref((range(int(64),bounded,false),int(64)))[1086547]) : void[4] "fn returns via _retArg" "resolved" "fn synchronization free"
  {
    const-val ret[1144625]:(range(int(64),bounded,false),int(64))[1084985] "dead after last mention" "RVV" "temp"
    val call_tmp[1144643]:range(int(64),boundedLow,false)[1087626] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1144652]:range(int(64),boundedLow,false)[1087626] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1868136]:range(int(64),boundedLow,false)[1087626] "temp"
    (1144657 call _cast[1145874] r[1841434] ret_tmp[1868136])
    (1868139 'move' call_tmp[1144652] ret_tmp[1868136])
    const-val intR[1144660]:range(int(64),boundedLow,false)[1087626] "dead at end of block" "const" "insert auto destroy"
    (1144662 'move' intR[1144660] call_tmp[1144652])
    {
      const-val call_tmp[1144675]:range(int(64),bounded,false)[1026875] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1862870]:range(int(64),bounded,false)[1026875] "temp"
      (1144680 call byteIndices[31068] x[1841436] ret_tmp[1862870])
      (1862873 'move' call_tmp[1144675] ret_tmp[1862870])
      const-val call_tmp[1144683]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1144685 'move' call_tmp[1144683](1144691 call boundsCheck[1127682] call_tmp[1144675] intR[1144660]))
      const-val call_tmp[1144693]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1144695 'move' call_tmp[1144693](1144698 call ![7494] call_tmp[1144683]))
      const-val call_tmp[1144700]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1144702 'move' call_tmp[1144700] call_tmp[1144693])
      if call_tmp[1144700]
      {
        val call_tmp[1144709]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1144739]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1144741 'move' call_tmp[1144739](1144744 call numBytes[32810] x[1841436]))
        (1144748 call halt[1146516] "range " r[1841434] " out of bounds for string with length " call_tmp[1144739])
      }
      (1879581 call chpl__autoDestroy[1383553] call_tmp[1144675])
    }
    val call_tmp[1144755]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      const-val call_tmp[1144780]:range(int(64),bounded,false)[1026875] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1862876]:range(int(64),bounded,false)[1026875] "temp"
      (1144785 call byteIndices[31068] x[1841436] ret_tmp[1862876])
      (1862879 'move' call_tmp[1144780] ret_tmp[1862876])
      const-val call_tmp[1144788]:range(int(64),bounded,false)[1026875] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1867984]:range(int(64),bounded,false)[1026875] "temp"
      (1144793 call this[1139030] intR[1144660] call_tmp[1144780] ret_tmp[1867984])
      (1867987 'move' call_tmp[1144788] ret_tmp[1867984])
      const-val call_tmp[1144802]:(range(int(64),bounded,false),int(64))[1084985] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1867126]:(range(int(64),bounded,false),int(64))[1084985] "temp"
      (1144807 call _build_tuple[1084943] call_tmp[1144788] -1 ret_tmp[1867126])
      (1867129 'move' call_tmp[1144802] ret_tmp[1867126])
      (1144810 'move' ret[1144625] call_tmp[1144802])
      (1879584 call chpl__autoDestroy[1383553] call_tmp[1144788])
      (1879587 call chpl__autoDestroy[1383553] call_tmp[1144780])
      (1879590 call chpl__autoDestroy[1641507] intR[1144660])
      gotoReturn _end_simpleCaseHelper[1144867] _end_simpleCaseHelper[1144867]
    }
    (1879593 call chpl__autoDestroy[1641507] intR[1144660])
    label _end_simpleCaseHelper[1144867]
    (1868132 '=' _retArg[1868130] ret[1144625])
    (1868134 return _void[55])
  }
  function on_fn[1181912](const in arg needle[1841450]:__serializeHelper[28089], const  ref arg x[1841452]:_ref(string)[938000], const in arg region[1841454]:range(byteIndex,boundedLow,false)[1143464], ref arg ret[1841456]:_ref(int(64))[936633]) : void[4] "on" "resolved"
  {
    val needle[2145995]:string[26] "temp"
    ref needle[2145996]:string[26] "temp"
    ref tmp[2146002]:string[26] "temp"
    (2146006 'move' tmp[2146002](2146004 'set reference' needle[2145995]))
    (2145999 call chpl__deserialize[1826353] needle[1841450] tmp[2146002])
    (2146011 'move' needle[2145996](2146009 'set reference' needle[2145995]))
    {
      val localRet[1181925]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1181927 'move' localRet[1181925] -2)
      ref call_tmp[1181932]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1181934 'move' call_tmp[1181932](1181937 call buffLen[757947] needle[2145996]))
      const-val nLen[1181940]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1182707]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1182711 'move' coerce_tmp[1182707](1182709 'deref' call_tmp[1181932]))
      (1881750 '=' nLen[1181940] coerce_tmp[1182707])
      (1181942 'noop')
      const-val call_tmp[1181946]:(range(int(64),bounded,false),int(64))[1084985] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1868106]:(range(int(64),bounded,false),int(64))[1084985] "temp"
      (1181951 call getView[1144502] x[1841452] region[1841454] ret_tmp[1868106])
      (1868109 'move' call_tmp[1181946] ret_tmp[1868106])
      const-val tmp[1181954]:(range(int(64),bounded,false),int(64))[1084985] "dead at end of block" "const" "insert auto destroy" "temp"
      (1181956 'move' tmp[1181954] call_tmp[1181946])
      1
      ref call_tmp[1181964]:_ref(range(int(64),bounded,false))[1026919] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1181966 'move' call_tmp[1181964](1182722 '.' tmp[1181954] x0[1084981]))
      const-val view[1181971]:range(int(64),bounded,false)[1026875] "dead at end of block" "const" "insert auto destroy"
      (1181973 'move' view[1181971](1182725 'deref' call_tmp[1181964]))
      const-val call_tmp[1181977]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (1181979 'move' call_tmp[1181977](1181982 call size[1035850] view[1181971]))
      const-val xLen[1181985]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      (1181987 'move' xLen[1181985] call_tmp[1181977])
      {
        const-val call_tmp[1182035]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1182037 'move' call_tmp[1182035](1182040 call ==[435671] nLen[1181940] 0))
        const-val call_tmp[1182043]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1182045 'move' call_tmp[1182043] call_tmp[1182035])
        if call_tmp[1182043]
        {
          {
            (1182069 call =[435370] localRet[1181925] -1)
          }
        }
      }
      const-val call_tmp[1182124]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1182126 'move' call_tmp[1182124](1182129 call >[437715] nLen[1181940] xLen[1181985]))
      const-val call_tmp[1182132]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1182134 'move' call_tmp[1182132] call_tmp[1182124])
      if call_tmp[1182132]
      {
        (1182149 call =[435370] localRet[1181925] -1)
      }
      const-val call_tmp[1182162]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1182164 'move' call_tmp[1182162](1182167 call ==[435671] localRet[1181925] -2))
      const-val call_tmp[1182170]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1182172 'move' call_tmp[1182170] call_tmp[1182162])
      if call_tmp[1182170]
      {
        (1182187 call =[435370] localRet[1181925] -1)
        const-val call_tmp[1182192]:string[26] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1863118]:string[26] "temp"
        (1182200 call localize[32889] needle[2145996] ret_tmp[1863118])
        (1863121 'move' call_tmp[1182192] ret_tmp[1863118])
        const localNeedle[1182201]:string[26] "dead at end of block" "const" "insert auto destroy"
        (1182203 'move' localNeedle[1182201] call_tmp[1182192])
        ref call_tmp[1182207]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1182209 'move' call_tmp[1182207](1182212 call buffLen[757947] localNeedle[1182201]))
        const-val needleLen[1182215]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[1182771]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1182775 'move' coerce_tmp[1182771](1182773 'deref' call_tmp[1182207]))
        (1182217 'move' needleLen[1182215](1182769 call chpl__initCopy[955393] coerce_tmp[1182771]))
        const-val call_tmp[1182221]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1182223 'move' call_tmp[1182221](1182226 call -[440459] xLen[1181985] nLen[1181940]))
        const-val call_tmp[1182229]:int(64)[13] "dead at end of block" "maybe param" "temp"
        (1182231 'move' call_tmp[1182229](1182234 call +[949727] call_tmp[1182221]))
        const-val numPossible[1182237]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        (1182239 'move' numPossible[1182237] call_tmp[1182229])
        const-val searchSpace[1182243]:range(int(64),bounded,false)[1026875] "dead at end of block" "const" "insert auto destroy"
        const-val tmp[1182245]:range(int(64),bounded,false)[1026875] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val tmp[1182256]:range(int(64),bounded,false)[1026875] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1182258]:range(int(64),boundedLow,false)[1087626] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1867204]:range(int(64),boundedLow,false)[1087626] "temp"
        (1182263 call chpl_build_low_bounded_range[1087019] 0 ret_tmp[1867204])
        (1867207 'move' call_tmp[1182258] ret_tmp[1867204])
        const-val ret_tmp[1867306]:range(int(64),bounded,false)[1026875] "temp"
        (1182268 call #[1087986] call_tmp[1182258] numPossible[1182237] ret_tmp[1867306])
        (1867309 'move' tmp[1182256] ret_tmp[1867306])
        (1182271 'move' tmp[1182245] tmp[1182256])
        (1182313 'move' searchSpace[1182243] tmp[1182245])
        {
          val _indexOfInterest[1182323]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1182325]:_ic_these_range_int64_t_bounded_F[1096764] "dead at end of block" "expr temp" "temp"
          (1182327 'move' _iterator[1182325](1182330 call _getIterator[1095381] searchSpace[1182243]))
          {
            val ret[1951954]:_ir_these_range_int64_t_bounded_F[1096770] "dead after last mention" "RVV" "temp"
            const-val _return_tmp_[1951956]:bool[10] "dead after last mention" "temp"
            const-val this[1952257]:range(int(64),bounded,false)[1026875] "temp"
            (1952262 'move' this[1952257](1952259 '.v' _iterator[1182325] F0_this[2063641]))
            (1951958 'move' _return_tmp_[1951956](1951961 call checkIfIterWillOverflow[1095875] this[1952257] 1))
            val i[1951964]:int(64)[13] "dead at end of block" "insert auto destroy"
            val call_tmp[1951966]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (1951968 'move' i[1951964] 0)
            ref call_tmp[1951971]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[1952264]:range(int(64),bounded,false)[1026875] "temp"
            (1952269 'move' this[1952264](1952266 '.v' _iterator[1182325] F0_this[2063641]))
            (1951973 'move' call_tmp[1951971](1951976 call _low[1028513] this[1952264]))
            const-val start[1951978]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1951980]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1951982 'move' coerce_tmp[1951980](1951984 'deref' call_tmp[1951971]))
            (1951986 '=' start[1951978] coerce_tmp[1951980])
            (1951989 'noop')
            ref call_tmp[1951990]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[1952271]:range(int(64),bounded,false)[1026875] "temp"
            (1952276 'move' this[1952271](1952273 '.v' _iterator[1182325] F0_this[2063641]))
            (1951992 'move' call_tmp[1951990](1951995 call _high[1028721] this[1952271]))
            const end[1951997]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1951999]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1952001 'move' coerce_tmp[1951999](1952003 'deref' call_tmp[1951990]))
            (1952005 '=' end[1951997] coerce_tmp[1951999])
            (1952008 'noop')
            CForLoop[1952009] hazard
            {
              const-val yret[1952024]:int(64)[13] "dead after last mention" "YVV" "temp"
              const-val call_tmp[1952026]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val this[1952278]:range(int(64),bounded,false)[1026875] "temp"
              (1952283 'move' this[1952278](1952280 '.v' _iterator[1182325] F0_this[2063641]))
              (1952028 'move' call_tmp[1952026](1952031 call chpl_intToIdx[1028541] this[1952278] i[1951964]))
              (1952034 'move' yret[1952024] call_tmp[1952026])
              const-val _yieldedIndex[1952048]:int(64)[13] "temp"
              (1952255 'move' _yieldedIndex[1952048] call_tmp[1952026])
              {
                const-val i[1952050]:int(64)[13] "const" "index var" "insert auto destroy"
                (1952052 'move' i[1952050] _yieldedIndex[1952048])
                {
                  {
                    val _indexOfInterest[1952057]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[1952059]:_ic_chpl_direct_counted_range_iter[1103851] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[1952061]:_ir_chpl_direct_counted_range_iter[1103857] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[1952063]:_ir_chpl_direct_counted_range_iter[1103857] "temp"
                    (1952066 call chpl_direct_counted_range_iter[458039] 0 nLen[1181940] ret_tmp[1952063])
                    (1952070 'move' call_tmp[1952061] ret_tmp[1952063])
                    (1952073 'move' _iterator[1952059](1952076 call _getIterator[1103866] call_tmp[1952061]))
                    {
                      val ret[2017479]:_ir_chpl_direct_counted_range_iter[1103857] "dead after last mention" "RVV" "temp"
                      val _indexOfInterest[2017481]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[2017483]:_ic_chpl_direct_counted_range_iter_helper[1103601] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[2017485]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[2017487]:_ir_chpl_direct_counted_range_iter_helper[1103607] "temp"
                      const-val low[2018079]:int(64)[13] "temp"
                      (2018084 'move' low[2018079](2018081 '.v' _iterator[1952059] F0_low[2058106]))
                      const-val count[2018086]:int(64)[13] "temp"
                      (2018091 'move' count[2018086](2018088 '.v' _iterator[1952059] F1_count[2058110]))
                      (2017490 call chpl_direct_counted_range_iter_helper[1102159] low[2018079] count[2018086] ret_tmp[2017487])
                      (2017494 'move' call_tmp[2017485] ret_tmp[2017487])
                      (2017497 'move' _iterator[2017483](2017500 call _getIterator[1103616] call_tmp[2017485]))
                      {
                        val ret[2017503]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead after last mention" "RVV" "temp"
                        val call_tmp[2017505]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                        const-val tmp[2017507]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val tmp[2017509]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                        const-val call_tmp[2017511]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[2017513]:int(64)[13] "temp"
                        (2017515 'move' count[2017513](2017517 '.v' _iterator[2017483] F1_count[2064268]))
                        (2017520 'move' call_tmp[2017511](2017523 call <[948459] count[2017513]))
                        (2017525 'move' tmp[2017509] call_tmp[2017511])
                        (2017528 'move' tmp[2017507] call_tmp[2017511])
                        const-val call_tmp[2017531]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (2017533 'move' call_tmp[2017531] call_tmp[2017511])
                        if call_tmp[2017511]
                        {
                          (2017539 call boundsCheckHalt[210187] "With a negative count, the range must have a last index.")
                        }
                        const-val tmp[2017542]:2*int(64)[1040117] "dead at end of block" "const" "insert auto destroy" "temp"
                        val tmp[2017544]:2*int(64)[1040117] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                        const-val tmp[2017546]:bool[10] "dead after last mention" "maybe param" "temp"
                        const-val call_tmp[2017548]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[2017550]:int(64)[13] "temp"
                        (2017552 'move' count[2017550](2017554 '.v' _iterator[2017483] F1_count[2064268]))
                        (2017557 'move' call_tmp[2017548](2017560 call ==[435671] count[2017550] 0))
                        (2017563 'move' tmp[2017546] call_tmp[2017548])
                        if call_tmp[2017548]
                        {
                          const-val tmp[2017568]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                          val call_tmp[2017570]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[2017572]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val low[2017574]:int(64)[13] "temp"
                          (2017576 'move' low[2017574](2017578 '.v' _iterator[2017483] F0_low[2064264]))
                          (2017581 'move' call_tmp[2017572](2017584 call _cast[956095] low[2017574]))
                          const-val call_tmp[2017586]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[2017588]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                          (2017590 'move' coerce_tmp[2017588](2017592 'cast' uint(64)[115] 1))
                          (2017595 'move' call_tmp[2017586](2017598 call -[962254] call_tmp[2017572]))
                          const-val call_tmp[2017600]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          (2017602 'move' call_tmp[2017600](2017605 call _cast[953604] call_tmp[2017586]))
                          const-val ret_tmp[2017607]:2*int(64)[1040117] "temp"
                          const-val low[2017609]:int(64)[13] "temp"
                          (2017611 'move' low[2017609](2017613 '.v' _iterator[2017483] F0_low[2064264]))
                          (2017617 call _build_tuple[1040075] low[2017609] call_tmp[2017600] ret_tmp[2017607])
                          (2017621 'move' tmp[2017568] ret_tmp[2017607])
                          (2017624 'move' tmp[2017544] tmp[2017568])
                        }
                        {
                          const-val tmp[2017628]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                          val call_tmp[2017630]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[2017632]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val count[2017634]:int(64)[13] "temp"
                          (2017636 'move' count[2017634](2017638 '.v' _iterator[2017483] F1_count[2064268]))
                          (2017641 'move' call_tmp[2017632] count[2017634])
                          const-val call_tmp[2017644]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val count[2017646]:int(64)[13] "temp"
                          (2017648 'move' count[2017646](2017650 '.v' _iterator[2017483] F1_count[2064268]))
                          (2017653 'move' call_tmp[2017644](2017656 call -[962287] count[2017646]))
                          const-val call_tmp[2017658]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val low[2017660]:int(64)[13] "temp"
                          (2017662 'move' low[2017660](2017664 '.v' _iterator[2017483] F0_low[2064264]))
                          (2017667 'move' call_tmp[2017658](2017670 call +[439679] low[2017660] call_tmp[2017644]))
                          const-val ret_tmp[2017673]:2*int(64)[1040117] "temp"
                          const-val low[2017675]:int(64)[13] "temp"
                          (2017677 'move' low[2017675](2017679 '.v' _iterator[2017483] F0_low[2064264]))
                          (2017683 call _build_tuple[1040075] low[2017675] call_tmp[2017658] ret_tmp[2017673])
                          (2017687 'move' tmp[2017628] ret_tmp[2017673])
                          (2017690 'move' tmp[2017544] tmp[2017628])
                        }
                        (2017694 '=' tmp[2017542] tmp[2017544])
                        (2017697 'noop')
                        1
                        ref call_tmp[2017699]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
                        (2017701 'move' call_tmp[2017699](2017703 '.' tmp[2017542] x0[1040113]))
                        const-val start[2017706]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                        const-val coerce_tmp[2017708]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                        (2017710 'move' coerce_tmp[2017708](2017712 'deref' call_tmp[2017699]))
                        (2017714 '=' start[2017706] coerce_tmp[2017708])
                        (2017717 'noop')
                        ref call_tmp[2017718]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
                        (2017720 'move' call_tmp[2017718](2017722 '.' tmp[2017542] x1[1040115]))
                        const-val end[2017725]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                        const-val coerce_tmp[2017727]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                        (2017729 'move' coerce_tmp[2017727](2017731 'deref' call_tmp[2017718]))
                        (2017733 '=' end[2017725] coerce_tmp[2017727])
                        (2017736 'noop')
                        val _indexOfInterest[2017737]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[2017739]:_ic_chpl_direct_param_stride_range_iter[1103347] "dead at end of block" "expr temp" "temp"
                        const-val call_tmp[2017741]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead at end of block" "expr temp" "maybe param" "temp"
                        const-val ret_tmp[2017743]:_ir_chpl_direct_param_stride_range_iter[1103353] "temp"
                        (2017746 call chpl_direct_param_stride_range_iter[1102585] coerce_tmp[2017708] coerce_tmp[2017727] ret_tmp[2017743])
                        (2017750 'move' call_tmp[2017741] ret_tmp[2017743])
                        (2017753 'move' _iterator[2017739](2017756 call _getIterator[1103362] call_tmp[2017741]))
                        {
                          val ret[2017759]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead after last mention" "RVV" "temp"
                          val call_tmp[2017761]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (2017764 call chpl_range_check_stride[1102905])
                          val i[2017765]:int(64)[13] "dead at end of block" "insert auto destroy"
                          val call_tmp[2017767]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (2017769 'move' i[2017765] 0)
                          val call_tmp[2017772]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val default_arg_first[2017774]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val low[2017776]:int(64)[13] "temp"
                          (2017778 'move' low[2017776](2017780 '.v' _iterator[2017739] F0_low[2065762]))
                          (2017783 'move' default_arg_first[2017774](2017786 call chpl_checkIfRangeIterWillOverflow_default_first[1103259] low[2017776]))
                          const-val default_arg_last[2017788]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val high[2017790]:int(64)[13] "temp"
                          (2017792 'move' high[2017790](2017794 '.v' _iterator[2017739] F1_high[2065766]))
                          (2017797 'move' default_arg_last[2017788](2017800 call chpl_checkIfRangeIterWillOverflow_default_last[1103287] high[2017790]))
                          const-val _return_tmp_[2017802]:bool[10] "dead after last mention" "temp"
                          const-val low[2017804]:int(64)[13] "temp"
                          (2017806 'move' low[2017804](2017808 '.v' _iterator[2017739] F0_low[2065762]))
                          const-val high[2017811]:int(64)[13] "temp"
                          (2017813 'move' high[2017811](2017815 '.v' _iterator[2017739] F1_high[2065766]))
                          (2017818 'move' _return_tmp_[2017802](2017821 call chpl_checkIfRangeIterWillOverflow[1096137] low[2017804] high[2017811] 1 default_arg_first[2017774] default_arg_last[2017788] 1))
                          CForLoop[2017828]
                          {
                            const-val yret[2017857]:int(64)[13] "dead after last mention" "YVV" "temp"
                            (2017859 'move' yret[2017857] i[2017765])
                            const-val _yieldedIndex[2017862]:int(64)[13] "temp"
                            (2017864 'move' _yieldedIndex[2017862] i[2017765])
                            {
                              const-val i[2017868]:int(64)[13] "const" "index var" "insert auto destroy"
                              (2017870 'move' i[2017868] _yieldedIndex[2017862])
                              const-val yret[2017873]:int(64)[13] "dead after last mention" "YVV" "temp"
                              (2017875 'move' yret[2017873] _yieldedIndex[2017862])
                              const-val _yieldedIndex[2017878]:int(64)[13] "temp"
                              (2017880 'move' _yieldedIndex[2017878] _yieldedIndex[2017862])
                              {
                                const-val i[2017884]:int(64)[13] "const" "index var" "insert auto destroy"
                                (2017886 'move' i[2017884] _yieldedIndex[2017878])
                                const-val yret[2017889]:int(64)[13] "dead after last mention" "YVV" "temp"
                                (2017891 'move' yret[2017889] _yieldedIndex[2017878])
                                const-val _yieldedIndex[2017927]:int(64)[13] "temp"
                                (2018077 'move' _yieldedIndex[2017927] _yieldedIndex[2017878])
                                {
                                  const-val j[2017929]:int(64)[13] "const" "index var" "insert auto destroy"
                                  (2017931 'move' j[2017929] _yieldedIndex[2017927])
                                  {
                                    const-val call_tmp[2017935]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                    (2017937 'move' call_tmp[2017935](2017940 call +[439679] i[1952050] j[2017929]))
                                    const-val call_tmp[2017943]:int(64)[13] "dead at end of block" "maybe param" "temp"
                                    (2017945 'move' call_tmp[2017943](2017948 call orderToIndex[1104101] view[1181971] call_tmp[2017935]))
                                    const-val idx[2017951]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                    (2017953 'move' idx[2017951] call_tmp[2017943])
                                    ref call_tmp[2017956]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
                                    ref _this_tmp_[2017958]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "reference to a const" "temp"
                                    (2017960 'move' _this_tmp_[2017958](2017963 call buff[758025] x[1841452]))
                                    val coerce_tmp[2017965]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (2017967 'move' coerce_tmp[2017965](2017969 'deref' _this_tmp_[2017958]))
                                    (2017971 'move' call_tmp[2017956](2017974 call this[954152] coerce_tmp[2017965] idx[2017951]))
                                    ref call_tmp[2017977]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
                                    ref _this_tmp_[2017979]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "reference to a const" "temp"
                                    (2017981 'move' _this_tmp_[2017979](2017984 call buff[758025] localNeedle[1182201]))
                                    val coerce_tmp[2017986]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (2017988 'move' coerce_tmp[2017986](2017990 'deref' _this_tmp_[2017979]))
                                    (2017992 'move' call_tmp[2017977](2017995 call this[954152] coerce_tmp[2017986] j[2017929]))
                                    const-val call_tmp[2017998]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    const-val coerce_tmp[2018000]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (2018002 'move' coerce_tmp[2018000](2018004 'deref' call_tmp[2017956]))
                                    const-val coerce_tmp[2018006]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (2018008 'move' coerce_tmp[2018006](2018010 'deref' call_tmp[2017977]))
                                    (2018012 'move' call_tmp[2017998](2018015 call !=[436077] coerce_tmp[2018000] coerce_tmp[2018006]))
                                    const-val call_tmp[2018018]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (2018020 'move' call_tmp[2018018] call_tmp[2017998])
                                    if call_tmp[2018018]
                                    {
                                      (2018068 call _freeIterator[1103535] _iterator[2017739])
                                      (2018071 call chpl__autoDestroy[1635435] tmp[2017542])
                                      (2018074 call _freeIterator[1103785] _iterator[2017483])
                                      break _breakLabel[1952218] _breakLabel[1952218]
                                    }
                                    const-val call_tmp[2018028]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (2018030 'move' call_tmp[2018028](2018033 call -[962287] nLen[1181940]))
                                    const-val call_tmp[2018035]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (2018037 'move' call_tmp[2018035](2018040 call ==[435671] j[2017929] call_tmp[2018028]))
                                    const-val call_tmp[2018043]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (2018045 'move' call_tmp[2018043] call_tmp[2018035])
                                    if call_tmp[2018043]
                                    {
                                      {
                                        const-val call_tmp[2018051]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                        (2018053 'move' call_tmp[2018051](2018056 call orderToIndex[1104101] view[1181971] i[1952050]))
                                        (2018060 call =[435370] localRet[1181925] call_tmp[2018051])
                                      }
                                    }
                                  }
                                  label _continueLabel[2018064]
                                }
                              }
                            }
                            {
                              const-val low[2017830]:int(64)[13] "temp"
                              (2017832 'move' low[2017830](2017834 '.v' _iterator[2017739] F0_low[2065762]))
                              (2017837 '=' i[2017765] low[2017830])
                            }
                            {
                              const-val high[2017841]:int(64)[13] "temp"
                              (2017843 'move' high[2017841](2017845 '.v' _iterator[2017739] F1_high[2065766]))
                              (2017848 '<=' i[2017765] high[2017841])
                            }
                            {
                              val call_tmp[2017852]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              (2017854 '+=' i[2017765] 1)
                            }
                          }
                          label _endchpl_direct_param_stride_range_iter[2017910]
                        }
                        (2017913 call _freeIterator[1103535] _iterator[2017739])
                        (2017916 call chpl__autoDestroy[1635435] tmp[2017542])
                        label _endchpl_direct_counted_range_iter_helper[2017918]
                      }
                      (2017921 call _freeIterator[1103785] _iterator[2017483])
                      label _endchpl_direct_counted_range_iter[2017923]
                    }
                    label _breakLabel[1952218]
                    (1952221 call _freeIterator[1104035] _iterator[1952059])
                  }
                  const-val tmp[1952223]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  const-val tmp[1952225]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  const-val call_tmp[1952227]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1952229 'move' call_tmp[1952227](1952232 call !=[436055] localRet[1181925] -1))
                  (1952235 'move' tmp[1952225] call_tmp[1952227])
                  (1952238 'move' tmp[1952223] tmp[1952225])
                  const-val call_tmp[1952241]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1952243 'move' call_tmp[1952241] tmp[1952223])
                  if call_tmp[1952241]
                  {
                    break _breakLabel[1182614] _breakLabel[1182614]
                  }
                }
                label _continueLabel[1952251]
              }
              {
                (1952011 '=' i[1951964] coerce_tmp[1951980])
              }
              {
                (1952015 '<=' i[1951964] end[1951997])
              }
              {
                val call_tmp[1952019]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1952021 '+=' i[1951964] 1)
              }
            }
            label _endthese[1952044]
          }
          label _breakLabel[1182614]
          (1881761 call _freeIterator[1102067] _iterator[1182325])
        }
        (1881764 call chpl__autoDestroy[1383553] searchSpace[1182243])
        (1881767 call chpl__autoDestroy[1641507] call_tmp[1182258])
        (1881770 call chpl__autoDestroy[1562275] localNeedle[1182201])
      }
      (1182634 call =[435370] ret[1841456] localRet[1181925])
      (1881774 call chpl__autoDestroy[1383553] view[1181971])
      (1881777 call chpl__autoDestroy[1641462] tmp[1181954])
    }
    (2146013 call chpl__autoDestroy[1562462] needle[1841450])
    (2146016 call chpl__autoDestroy[1562275] needle[2145995])
    (1182640 return _void[55])
  }
  function simpleCaseHelper[1186138](const in arg r[1841466]:range(byteIndex,boundedHigh,false)[1184980], const  ref arg x[1841468]:_ref(string)[938000], ref arg _retArg[1868452]:_ref((range(int(64),bounded,false),int(64)))[1086547]) : void[4] "fn returns via _retArg" "resolved" "fn synchronization free"
  {
    const-val ret[1186141]:(range(int(64),bounded,false),int(64))[1084985] "dead after last mention" "RVV" "temp"
    val call_tmp[1186159]:range(int(64),boundedHigh,false)[1187490] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1186168]:range(int(64),boundedHigh,false)[1187490] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1868458]:range(int(64),boundedHigh,false)[1187490] "temp"
    (1186173 call _cast[1187692] r[1841466] ret_tmp[1868458])
    (1868461 'move' call_tmp[1186168] ret_tmp[1868458])
    const-val intR[1186176]:range(int(64),boundedHigh,false)[1187490] "dead at end of block" "const" "insert auto destroy"
    (1186178 'move' intR[1186176] call_tmp[1186168])
    {
      const-val call_tmp[1186191]:range(int(64),bounded,false)[1026875] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1862882]:range(int(64),bounded,false)[1026875] "temp"
      (1186196 call byteIndices[31068] x[1841468] ret_tmp[1862882])
      (1862885 'move' call_tmp[1186191] ret_tmp[1862882])
      const-val call_tmp[1186199]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1186201 'move' call_tmp[1186199](1186207 call boundsCheck[1189599] call_tmp[1186191] intR[1186176]))
      const-val call_tmp[1186209]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1186211 'move' call_tmp[1186209](1186214 call ![7494] call_tmp[1186199]))
      const-val call_tmp[1186216]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1186218 'move' call_tmp[1186216] call_tmp[1186209])
      if call_tmp[1186216]
      {
        val call_tmp[1186225]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1186255]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1186257 'move' call_tmp[1186255](1186260 call numBytes[32810] x[1841468]))
        (1186264 call halt[1190721] "range " r[1841466] " out of bounds for string with length " call_tmp[1186255])
      }
      (1881850 call chpl__autoDestroy[1383553] call_tmp[1186191])
    }
    val call_tmp[1186271]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      const-val call_tmp[1186296]:range(int(64),bounded,false)[1026875] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1862888]:range(int(64),bounded,false)[1026875] "temp"
      (1186301 call byteIndices[31068] x[1841468] ret_tmp[1862888])
      (1862891 'move' call_tmp[1186296] ret_tmp[1862888])
      const-val call_tmp[1186304]:range(int(64),bounded,false)[1026875] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1868582]:range(int(64),bounded,false)[1026875] "temp"
      (1186309 call this[1200410] intR[1186176] call_tmp[1186296] ret_tmp[1868582])
      (1868585 'move' call_tmp[1186304] ret_tmp[1868582])
      const-val call_tmp[1186318]:(range(int(64),bounded,false),int(64))[1084985] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1867132]:(range(int(64),bounded,false),int(64))[1084985] "temp"
      (1186323 call _build_tuple[1084943] call_tmp[1186304] -1 ret_tmp[1867132])
      (1867135 'move' call_tmp[1186318] ret_tmp[1867132])
      (1186326 'move' ret[1186141] call_tmp[1186318])
      (1881853 call chpl__autoDestroy[1383553] call_tmp[1186304])
      (1881856 call chpl__autoDestroy[1383553] call_tmp[1186296])
      (1881859 call chpl__autoDestroy[1646163] intR[1186176])
      gotoReturn _end_simpleCaseHelper[1186383] _end_simpleCaseHelper[1186383]
    }
    (1881862 call chpl__autoDestroy[1646163] intR[1186176])
    label _end_simpleCaseHelper[1186383]
    (1868454 '=' _retArg[1868452] ret[1186141])
    (1868456 return _void[55])
  }
  function wrapon_fn[2148343](const in arg dummy_locale_arg[2148345]:chpl_localeID_t[209352], in arg buf[2148347]:c_void_ptr[149], in arg buf_size[2148349]:int(64)[13], in arg c[2148351]:_class_localson_fn[2148291]) : void[4] "on block"
  {
    val _0_tmp[2148356]:chpl_localeID_t[209352] "temp"
    (2148361 'move' _0_tmp[2148356](2148358 '.v' c[2148351] _0_tmp[2148294]))
    ref _1_x[2148363]:string[26] "temp"
    (2148368 'move' _1_x[2148363](2148365 '.v' c[2148351] _1_x[2148296]))
    ref _2_ret[2148371]:int(64)[13] "temp"
    (2148376 'move' _2_ret[2148371](2148373 '.v' c[2148351] _2_ret[2148298]))
    (2148354 call on_fn[935525] _1_x[2148363] _2_ret[2148371])
    (2148379 return _void[55])
  }
  function wrapon_fn[2149209](const in arg dummy_locale_arg[2149211]:chpl_localeID_t[209352], in arg buf[2149213]:c_void_ptr[149], in arg buf_size[2149215]:int(64)[13], in arg c[2149217]:_class_localson_fn[2149157]) : void[4] "on block"
  {
    val _0_tmp[2149222]:chpl_localeID_t[209352] "temp"
    (2149227 'move' _0_tmp[2149222](2149224 '.v' c[2149217] _0_tmp[2149160]))
    ref _1_lhs[2149229]:string[26] "temp"
    (2149234 'move' _1_lhs[2149229](2149231 '.v' c[2149217] _1_lhs[2149162]))
    ref _2_rhs[2149237]:string[26] "temp"
    (2149242 'move' _2_rhs[2149237](2149239 '.v' c[2149217] _2_rhs[2149164]))
    (2149220 call on_fn[979214] _1_lhs[2149229] _2_rhs[2149237])
    (2149245 return _void[55])
  }
  function wrapon_fn[2149977](const in arg dummy_locale_arg[2149979]:chpl_localeID_t[209352], in arg buf[2149981]:c_void_ptr[149], in arg buf_size[2149983]:int(64)[13], in arg c[2149985]:_class_localson_fn[2149925]) : void[4] "on block"
  {
    val _0_tmp[2149990]:chpl_localeID_t[209352] "temp"
    (2149995 'move' _0_tmp[2149990](2149992 '.v' c[2149985] _0_tmp[2149928]))
    ref _1_lhs[2149997]:string[26] "temp"
    (2150002 'move' _1_lhs[2149997](2149999 '.v' c[2149985] _1_lhs[2149930]))
    ref _2_rhs[2150005]:string[26] "temp"
    (2150010 'move' _2_rhs[2150005](2150007 '.v' c[2149985] _2_rhs[2149932]))
    (2149988 call on_fn[1019702] _1_lhs[2149997] _2_rhs[2150005])
    (2150013 return _void[55])
  }
  function wrapon_fn[2150674](const in arg dummy_locale_arg[2150676]:chpl_localeID_t[209352], in arg buf[2150678]:c_void_ptr[149], in arg buf_size[2150680]:int(64)[13], in arg c[2150682]:_class_localson_fn[2150610]) : void[4] "on block"
  {
    val _0_tmp[2150687]:chpl_localeID_t[209352] "temp"
    (2150692 'move' _0_tmp[2150687](2150689 '.v' c[2150682] _0_tmp[2150613]))
    val _1_needle_data[2150694]:__serializeHelper[28089] "temp"
    (2150699 'move' _1_needle_data[2150694](2150696 '.v' c[2150682] _1_needle_data[2150615]))
    ref _2_x[2150702]:string[26] "temp"
    (2150707 'move' _2_x[2150702](2150704 '.v' c[2150682] _2_x[2150617]))
    val _3_region[2150710]:range(byteIndex,bounded,false)[1025853] "temp"
    (2150715 'move' _3_region[2150710](2150712 '.v' c[2150682] _3_region[2150619]))
    ref _4_ret[2150718]:int(64)[13] "temp"
    (2150723 'move' _4_ret[2150718](2150720 '.v' c[2150682] _4_ret[2150621]))
    (2150685 call on_fn[1030199] _1_needle_data[2150694] _2_x[2150702] _3_region[2150710] _4_ret[2150718])
    (2150726 return _void[55])
  }
  function wrapon_fn[2153288](const in arg dummy_locale_arg[2153290]:chpl_localeID_t[209352], in arg buf[2153292]:c_void_ptr[149], in arg buf_size[2153294]:int(64)[13], in arg c[2153296]:_class_localson_fn[2153224]) : void[4] "on block"
  {
    val _0_tmp[2153301]:chpl_localeID_t[209352] "temp"
    (2153306 'move' _0_tmp[2153301](2153303 '.v' c[2153296] _0_tmp[2153227]))
    val _1_needle_data[2153308]:__serializeHelper[28089] "temp"
    (2153313 'move' _1_needle_data[2153308](2153310 '.v' c[2153296] _1_needle_data[2153229]))
    ref _2_x[2153316]:string[26] "temp"
    (2153321 'move' _2_x[2153316](2153318 '.v' c[2153296] _2_x[2153231]))
    val _3_region[2153324]:range(byteIndex,boundedLow,false)[1143464] "temp"
    (2153329 'move' _3_region[2153324](2153326 '.v' c[2153296] _3_region[2153233]))
    ref _4_ret[2153332]:int(64)[13] "temp"
    (2153337 'move' _4_ret[2153332](2153334 '.v' c[2153296] _4_ret[2153235]))
    (2153299 call on_fn[1181912] _1_needle_data[2153308] _2_x[2153316] _3_region[2153324] _4_ret[2153332])
    (2153340 return _void[55])
  }
}