AST dump for ChapelDistribution after pass buildDefaultFunctions.
Module use list: ChapelArray ChapelRange ChapelLocks ChapelHashtable Sort 

{
  function chpl__init_ChapelDistribution[415984]() : void[4] "insert line file info" "module init"
  {
    (520399 return _void[55])
  }
  function BaseDist[145926].deinit[145456](arg _mt[145930]:_MT[238], arg this[145928]:BaseDist[145926]) : _unknown[51] "destructor" "method" "primary method" "no return value for void"
  {
    (519675 return _void[55])
  }
  function BaseDist[145926].remove[145463](arg _mt[145934]:_MT[238], arg this[145932]:BaseDist[145926]) : _unknown[51] "dont disable remote value forwarding" "method" "primary method"
  {
    unknown ret[519679] "RVV" "temp"
    unknown free_dist[145469] "dead at end of block" "insert auto destroy"
    (543517 'init var' free_dist[145469] 0)
    (145472 'end of statement')
    unknown call_tmp[667401] "expr temp" "maybe param" "maybe type" "temp"
    (667404 'move' call_tmp[667401](145476 call(385372 call (partial) dsiTrackDomains _mt[243] this[145932])))
    unknown call_tmp[667406] "expr temp" "maybe param" "maybe type" "temp"
    (667409 'move' call_tmp[667406](145549 call _cond_test call_tmp[667401]))
    if call_tmp[667406]
    {
      const tmp[145534] "const" "temp"
      unknown call_tmp[667411] "expr temp" "maybe param" "maybe type" "temp"
      (667414 'move' call_tmp[667411](145531 '_wide_get_locale' this[145932]))
      (145536 'move' tmp[145534](145532 'deref' call_tmp[667411]))
      {
        {
          unknown call_tmp[667416] "maybe param" "maybe type" "temp"
          (667419 'move' call_tmp[667416](145479 call - 1))
          unknown dom_count[145481] "dead at end of block" "insert auto destroy"
          (543519 'init var' dom_count[145481] call_tmp[667416])
          (145484 'end of statement')
          {
            {
              unknown call_tmp[667423] "expr temp" "maybe param" "maybe type" "temp"
              (667426 'move' call_tmp[667423](360449 call _domsLock _mt[243] this[145932]))
              (145491 call(145487 call (partial) lock _mt[243] call_tmp[667423]))
              (481326 'end of statement')
              unknown call_tmp[667432] "expr temp" "maybe param" "maybe type" "temp"
              (667435 'move' call_tmp[667432](385380 call _free_when_no_doms _mt[243] this[145932]))
              (145496 call = call_tmp[667432] 1)
              (481327 'end of statement')
              unknown call_tmp[667439] "expr temp" "maybe param" "maybe type" "temp"
              (667442 'move' call_tmp[667439](360454 call _doms _mt[243] this[145932]))
              unknown call_tmp[667446] "expr temp" "maybe param" "maybe type" "temp"
              (667449 'move' call_tmp[667446](145501 call size _mt[243] call_tmp[667439]))
              (145504 call = dom_count[145481] call_tmp[667446])
              (481328 'end of statement' dom_count[145481])
              unknown call_tmp[667453] "expr temp" "maybe param" "maybe type" "temp"
              (667456 'move' call_tmp[667453](360459 call _domsLock _mt[243] this[145932]))
              (145512 call(145508 call (partial) unlock _mt[243] call_tmp[667453]))
            }
            (145516 'local block')
          }
          unknown call_tmp[667460] "expr temp" "maybe param" "maybe type" "temp"
          (667463 'move' call_tmp[667460](145519 call == dom_count[145481] 0))
          unknown call_tmp[667465] "expr temp" "maybe param" "maybe type" "temp"
          (667468 'move' call_tmp[667465](145526 call _cond_test call_tmp[667460]))
          if call_tmp[667465]
          {
            (145523 call = free_dist[145469] 1)
            (481331 'end of statement' free_dist[145469])
          }
        }
        (145539 'on block' 0 tmp[145534])
      }
    }
    {
      (145545 call = free_dist[145469] 1)
      (481333 'end of statement' free_dist[145469])
    }
    unknown call_tmp[667470] "expr temp" "maybe param" "maybe type" "temp"
    (667473 'move' call_tmp[667470](145563 call _cond_test free_dist[145469]))
    if call_tmp[667470]
    {
      unknown call_tmp[667475] "expr temp" "maybe param" "maybe type" "temp"
      (667478 'move' call_tmp[667475](145557 call _to_unmanaged this[145932]))
      (519685 'move' ret[519679](519684 'coerce' call_tmp[667475] unmanaged BaseDist?[415459]))
      gotoReturn _end_remove[519677] _end_remove[519677]
    }
    {
      (519691 'move' ret[519679](519690 'coerce' nil[44] unmanaged BaseDist?[415459]))
      gotoReturn _end_remove[519677] _end_remove[519677]
    }
    label _end_remove[519677]
    (519681 return ret[519679])
  }
  { scopeless type
    unmanaged BaseDist?[415459]
  }
  function BaseDist[145926].remove_dom[145579](arg _mt[145938]:_MT[238], arg this[145936]:BaseDist[145926], arg x[145576]:unmanaged BaseDom[415405]) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ret[519697] "RVV" "temp"
    unknown call_tmp[667480] "maybe param" "maybe type" "temp"
    (667483 'move' call_tmp[667480](145583 call - 1))
    unknown count[145585] "dead at end of block" "insert auto destroy"
    (543521 'init var' count[145585] call_tmp[667480])
    (145588 'end of statement')
    const tmp[145654] "const" "temp"
    unknown call_tmp[667485] "expr temp" "maybe param" "maybe type" "temp"
    (667488 'move' call_tmp[667485](145651 '_wide_get_locale' this[145936]))
    (145656 'move' tmp[145654](145652 'deref' call_tmp[667485]))
    {
      {
        unknown call_tmp[667490] "maybe param" "maybe type" "temp"
        (667493 'move' call_tmp[667490](145592 call - 1))
        unknown cnt[145594] "dead at end of block" "insert auto destroy"
        (543523 'init var' cnt[145594] call_tmp[667490])
        (145597 'end of statement')
        {
          {
            unknown call_tmp[667497] "expr temp" "maybe param" "maybe type" "temp"
            (667500 'move' call_tmp[667497](360464 call _domsLock _mt[243] this[145936]))
            (145604 call(145600 call (partial) lock _mt[243] call_tmp[667497]))
            (481337 'end of statement')
            unknown call_tmp[667506] "expr temp" "maybe param" "maybe type" "temp"
            (667509 'move' call_tmp[667506](360469 call _doms _mt[243] this[145936]))
            (145613 call(145608 call (partial) remove _mt[243] call_tmp[667506]) x[145576])
            (481338 'end of statement')
            unknown call_tmp[667515] "expr temp" "maybe param" "maybe type" "temp"
            (667518 'move' call_tmp[667515](360474 call _doms _mt[243] this[145936]))
            unknown call_tmp[667522] "expr temp" "maybe param" "maybe type" "temp"
            (667525 'move' call_tmp[667522](145617 call size _mt[243] call_tmp[667515]))
            (145620 call = cnt[145594] call_tmp[667522])
            (481339 'end of statement' cnt[145594])
            unknown call_tmp[667529] "expr temp" "maybe param" "maybe type" "temp"
            (667532 'move' call_tmp[667529](385395 call _free_when_no_doms _mt[243] this[145936]))
            unknown call_tmp[667534] "expr temp" "maybe param" "maybe type" "temp"
            (667537 'move' call_tmp[667534](145624 call ! call_tmp[667529]))
            unknown call_tmp[667539] "expr temp" "maybe param" "maybe type" "temp"
            (667542 'move' call_tmp[667539](145631 call _cond_test call_tmp[667534]))
            if call_tmp[667539]
            {
              (145628 call += cnt[145594] 1)
              (481341 'end of statement' cnt[145594])
            }
            unknown call_tmp[667546] "expr temp" "maybe param" "maybe type" "temp"
            (667549 'move' call_tmp[667546](360479 call _domsLock _mt[243] this[145936]))
            (145641 call(145637 call (partial) unlock _mt[243] call_tmp[667546]))
          }
          (145645 'local block')
        }
        (145648 call = count[145585] cnt[145594])
        (481344 'end of statement' count[145585] cnt[145594])
      }
      (145659 'on block' 0 tmp[145654])
    }
    unknown call_tmp[667553] "expr temp" "maybe param" "maybe type" "temp"
    (667556 'move' call_tmp[667553](145664 call == count[145585] 0))
    (519703 'move' ret[519697](519702 'coerce' call_tmp[667553] bool[10]))
    gotoReturn _end_remove_dom[519695] _end_remove_dom[519695]
    (481347 'end of statement' count[145585])
    label _end_remove_dom[519695]
    (519699 return ret[519697])
  }
  { scopeless type
    bool[10]
  }
  function BaseDist[145926].add_dom[145678](arg _mt[145942]:_MT[238], arg this[145940]:BaseDist[145926], arg x[145675]:unmanaged BaseDom[415405]) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {
    const tmp[145707] "const" "temp"
    unknown call_tmp[667558] "expr temp" "maybe param" "maybe type" "temp"
    (667561 'move' call_tmp[667558](145704 '_wide_get_locale' this[145940]))
    (145709 'move' tmp[145707](145705 'deref' call_tmp[667558]))
    {
      {
        unknown call_tmp[667565] "expr temp" "maybe param" "maybe type" "temp"
        (667568 'move' call_tmp[667565](360484 call _domsLock _mt[243] this[145940]))
        (145686 call(145682 call (partial) lock _mt[243] call_tmp[667565]))
        (481349 'end of statement')
        unknown call_tmp[667574] "expr temp" "maybe param" "maybe type" "temp"
        (667577 'move' call_tmp[667574](360489 call _doms _mt[243] this[145940]))
        (145695 call(145690 call (partial) add _mt[243] call_tmp[667574]) x[145675])
        (481350 'end of statement')
        unknown call_tmp[667583] "expr temp" "maybe param" "maybe type" "temp"
        (667586 'move' call_tmp[667583](360494 call _domsLock _mt[243] this[145940]))
        (145702 call(145698 call (partial) unlock _mt[243] call_tmp[667583]))
      }
      (145712 'on block' 0 tmp[145707])
    }
    (519707 return _void[55])
  }
  function BaseDist[145926].dsiNewRectangularDom[145724](arg _mt[145946]:_MT[238], arg this[145944]:BaseDist[145926], param arg rank[145721]:int(64)[13], arg idxType[145726]:_any[178](?), param arg stridable[145729]:bool[10], arg inds[145732]:_any[178](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (145753 call compilerError "rectangular domains not supported by this distribution")
    (519709 return _void[55])
  }
  function BaseDist[145926].dsiNewAssociativeDom[145762](arg _mt[145950]:_MT[238], arg this[145948]:BaseDist[145926], arg idxType[145760]:_any[178](?), param arg parSafe[145765]:bool[10]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (145787 call compilerError "associative domains not supported by this distribution")
    (519711 return _void[55])
  }
  function BaseDist[145926].dsiNewSparseDom[145798](arg _mt[145954]:_MT[238], arg this[145952]:BaseDist[145926], param arg rank[145795]:int(64)[13], arg idxType[145800]:_any[178](?), arg dom[145803]:_domain[125902](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (145825 call compilerError "sparse domains not supported by this distribution")
    (519713 return _void[55])
  }
  function BaseDist[145926].dsiSupportsPrivatization[145832](arg _mt[145958]:_MT[238], arg this[145956]:BaseDist[145926]) param : _unknown[51] "method" "primary method"
  {
    unknown ret[519717] "RVV" "param" "temp"
    (519722 'move' ret[519717](519721 'deref' 0))
    (519719 return ret[519717])
  }
  function BaseDist[145926].dsiRequiresPrivatization[145842](arg _mt[145962]:_MT[238], arg this[145960]:BaseDist[145926]) param : _unknown[51] "method" "primary method"
  {
    unknown ret[519726] "RVV" "param" "temp"
    (519731 'move' ret[519726](519730 'deref' 0))
    (519728 return ret[519726])
  }
  function BaseDist[145926].dsiDestroyDist[145852](arg _mt[145966]:_MT[238], arg this[145964]:BaseDist[145926]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (519733 return _void[55])
  }
  function BaseDist[145926].dsiDisplayRepresentation[145859](arg _mt[145970]:_MT[238], arg this[145968]:BaseDist[145926]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (145880 call writeln "<no way to display representation>")
    (519735 return _void[55])
  }
  function BaseDist[145926].trackDomains[145887](arg _mt[145974]:_MT[238], arg this[145972]:BaseDist[145926]) param : _unknown[51] "method" "primary method"
  {
    unknown ret[519739] "RVV" "param" "temp"
    (519744 'move' ret[519739](519743 'deref' 1))
    (519741 return ret[519739])
  }
  function BaseDist[145926].dsiTrackDomains[145897](arg _mt[145978]:_MT[238], arg this[145976]:BaseDist[145926]) : _unknown[51] "method" "primary method"
  {
    unknown ret[519748] "RVV" "temp"
    (519753 'move' ret[519748](519752 'deref' 1))
    (519750 return ret[519748])
  }
  function BaseDist[145926].singleton[145907](arg _mt[145982]:_MT[238], arg this[145980]:BaseDist[145926]) param : _unknown[51] "method" "primary method"
  {
    unknown ret[519757] "RVV" "param" "temp"
    (519762 'move' ret[519757](519761 'deref' 0))
    (519759 return ret[519757])
  }
  function BaseDist[145926].dsiIsLayout[145917](arg _mt[145986]:_MT[238], arg this[145984]:BaseDist[145926]) param : _unknown[51] "method" "primary method"
  {
    unknown ret[519766] "RVV" "param" "temp"
    (519771 'move' ret[519766](519770 'deref' 0))
    (519768 return ret[519766])
  }
  function BaseDist[145926].init[786789](arg _mt[786791]:_MT[238], arg this[786792]:BaseDist[145926], in arg _doms[786803] :
  (786806 call chpl__simpleSet[204907](?) unmanaged BaseDom[415405]) =
  _typeDefaultT[250], in arg _domsLock[786818]:chpl_LocalSpinlock[187386] =
  _typeDefaultT[250], in arg _free_when_no_doms[786831]:bool[10] =
  _typeDefaultT[250], in arg pid[786844]:int(64)[13] :
  int(64)[13] =
  nullPid[113712]) : void[4] "compiler generated" "inline" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown super_tmp[786861] "temporary of super field" "temp"
    (786863 'move' super_tmp[786861](786860 '.v' this[786792] c"super"))
    (786802 call(786800 call (partial) init _mt[243] super_tmp[786861]))
    (786896 'end of statement')
    unknown tmp[786866] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[786901] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[786913] "expr temp" "maybe param" "maybe type" "temp"
      (786916 'move' call_tmp[786913](786868 '.v' this[786792] c"super"))
      (786905 'move' call_type_tmp[786901](786871 'typeof' call_tmp[786913]))
    }
    (786872 'move' tmp[786866] call_type_tmp[786901])
    unknown call_tmp[786918] "maybe param" "maybe type" "temp"
    (786921 'move' call_tmp[786918](786877 'cast' tmp[786866] this[786792]))
    unknown chpl__thisAsParent[786874] "dead at end of block" "insert auto destroy" "temp"
    (786909 'init var' chpl__thisAsParent[786874] call_tmp[786918] tmp[786866])
    (786880 'setcid' chpl__thisAsParent[786874])
    (786882 'init field' this[786792] c"_doms" _doms[786803])
    (786897 'end of statement')
    (786885 'init field' this[786792] c"_domsLock" _domsLock[786818])
    (786888 'init field' this[786792] c"_free_when_no_doms" _free_when_no_doms[786831])
    (786898 'end of statement')
    (786891 'init field' this[786792] c"pid" pid[786844])
    (786899 'end of statement')
    (786894 'setcid' this[786792])
    (786907 return _void[55])
  }
  function BaseDist[145926].super[801201](arg _mt[801203]:_MT[238], arg this[801205]:BaseDist[145926]) : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[801215] "RVV" "temp"
    unknown call_tmp[801222] "expr temp" "maybe param" "maybe type" "temp"
    (801225 'move' call_tmp[801222](801209 '.v' this[801205] c"super"))
    (801220 'move' ret[801215](801219 'deref' call_tmp[801222]))
    (801217 return ret[801215])
  }
  function BaseDist[145926]._doms[801227](arg _mt[801229]:_MT[238], arg this[801231]:BaseDist[145926]) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[801241] "RVV" "temp"
    unknown call_tmp[801248] "expr temp" "maybe param" "maybe type" "temp"
    (801251 'move' call_tmp[801248](801235 '.' this[801231] c"_doms"))
    (801246 'move' ret[801241](801245 'addr of' call_tmp[801248]))
    (801243 return ret[801241])
  }
  function BaseDist[145926]._domsLock[801253](arg _mt[801255]:_MT[238], arg this[801257]:BaseDist[145926]) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[801267] "RVV" "temp"
    unknown call_tmp[801274] "expr temp" "maybe param" "maybe type" "temp"
    (801277 'move' call_tmp[801274](801261 '.' this[801257] c"_domsLock"))
    (801272 'move' ret[801267](801271 'addr of' call_tmp[801274]))
    (801269 return ret[801267])
  }
  function BaseDist[145926]._free_when_no_doms[801279](arg _mt[801281]:_MT[238], arg this[801283]:BaseDist[145926]) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[801293] "RVV" "temp"
    unknown call_tmp[801300] "expr temp" "maybe param" "maybe type" "temp"
    (801303 'move' call_tmp[801300](801287 '.' this[801283] c"_free_when_no_doms"))
    (801298 'move' ret[801293](801297 'addr of' call_tmp[801300]))
    (801295 return ret[801293])
  }
  function BaseDist[145926].pid[801305](arg _mt[801307]:_MT[238], arg this[801309]:BaseDist[145926]) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[801319] "RVV" "temp"
    unknown call_tmp[801326] "expr temp" "maybe param" "maybe type" "temp"
    (801329 'move' call_tmp[801326](801313 '.' this[801309] c"pid"))
    (801324 'move' ret[801319](801323 'addr of' call_tmp[801326]))
    (801321 return ret[801319])
  }
  function BaseDist[145926].writeThis[801331](arg _mt[801335]:_MT[238], arg this[801333]:BaseDist[145926], arg f[801334]:_any[178](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (801340 call writeThisDefaultImpl f[801334] this[801333])
    (801345 return _void[55])
  }
  function BaseDist[145926].readThis[801347](arg _mt[801351]:_MT[238], arg this[801349]:BaseDist[145926], arg f[801350]:_any[178](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (801355 call readThisDefaultImpl f[801350] this[801349])
    (801361 return _void[55])
  }
  type BaseDist[145926] val super[355652]:object[22] "super class" unknown _doms[145434](145433 call chpl__simpleSet[204907](?) unmanaged BaseDom[415405]) val _domsLock[145439]:chpl_LocalSpinlock[187386] chpl_LocalSpinlock[187386] val _free_when_no_doms[145444]:bool[10] bool[10] val pid[145450]:int(64)[13] nullPid[113712] int(64)[13]
  type unmanaged BaseDist[415468]
  type unmanaged BaseDist?[415459]
  type BaseDist?[415456](?)
  type BaseDist[382338](?)
  function BaseDom[146725].init[146022](arg _mt[146729]:_MT[238], arg this[146727]:BaseDom[146725]) : void[4] "inline" "method" "primary method" "no return value for void"
  {
    unknown super_tmp[461687] "temporary of super field" "temp"
    (461695 'move' super_tmp[461687](461688 '.v' this[146727] c"super"))
    (461691 call init _mt[243] super_tmp[461687])
    (481362 'end of statement')
    unknown tmp[461622] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[492315] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[667590] "expr temp" "maybe param" "maybe type" "temp"
      (667593 'move' call_tmp[667590](461624 '.v' this[146727] c"super"))
      (492319 'move' call_type_tmp[492315](461627 'typeof' call_tmp[667590]))
    }
    (461628 'move' tmp[461622] call_type_tmp[492315])
    unknown call_tmp[667595] "maybe param" "maybe type" "temp"
    (667598 'move' call_tmp[667595](461633 'cast' tmp[461622] this[146727]))
    unknown chpl__thisAsParent[461630] "dead at end of block" "insert auto destroy" "temp"
    (543525 'init var' chpl__thisAsParent[461630] call_tmp[667595] tmp[461622])
    (461636 'setcid' chpl__thisAsParent[461630])
    (481363 'end of statement')
    unknown tmp[461639] "temp"
    unknown call_tmp[667600] "expr temp" "maybe param" "maybe type" "temp"
    (667603 'move' call_tmp[667600](461642 call chpl__simpleSet[204907](?) unmanaged BaseArr[415453]))
    (461644 'default init var' tmp[461639] call_tmp[667600])
    (461646 '.=' this[146727] c"_arrs" tmp[461639])
    (481364 'end of statement')
    val tmp[461650]:int(64)[13] "temp"
    (461653 'default init var' tmp[461650] int(64)[13])
    (461655 '.=' this[146727] c"_arrs_containing_dom" tmp[461650])
    (481365 'end of statement')
    val tmp[461659]:chpl_LocalSpinlock[187386] "temp"
    (461662 'default init var' tmp[461659] chpl_LocalSpinlock[187386])
    (461664 '.=' this[146727] c"_arrsLock" tmp[461659])
    (481366 'end of statement')
    val tmp[461668]:bool[10] "temp"
    (461671 'default init var' tmp[461668] bool[10])
    (461673 '.=' this[146727] c"_free_when_no_arrs" tmp[461668])
    (481367 'end of statement')
    unknown tmp[461678] "temp"
    (461681 'init var' tmp[461678] nullPid[113712] int(64)[13])
    (461683 'init field' this[146727] c"pid" tmp[461678])
    (481368 'end of statement')
    (461698 'setcid' this[146727])
    (519773 return _void[55])
  }
  function BaseDom[146725].deinit[146029](arg _mt[146733]:_MT[238], arg this[146731]:BaseDom[146725]) : _unknown[51] "destructor" "method" "primary method" "no return value for void"
  {
    (519775 return _void[55])
  }
  function BaseDom[146725].dsiMyDist[146036](arg _mt[146737]:_MT[238], arg this[146735]:BaseDom[146725]) : _unknown[51] "method" "primary method"
  {
    unknown ret[519779] "RVV" "temp"
    (146059 call halt "internal error: dsiMyDist is not implemented")
    (481370 'end of statement')
    unknown ret[146064] "dead at end of block" "insert auto destroy" "unsafe"
    (543527 'default init var' ret[146064] unmanaged BaseDist[415468])
    (146067 'end of statement')
    (519785 'move' ret[519779](519784 'coerce' ret[146064] unmanaged BaseDist[415468]))
    gotoReturn _end_dsiMyDist[519777] _end_dsiMyDist[519777]
    (481371 'end of statement' ret[146064])
    label _end_dsiMyDist[519777]
    (519781 return ret[519779])
  }
  { scopeless type
    unmanaged BaseDist[415468]
  }
  function BaseDom[146725].remove[146076](arg _mt[146741]:_MT[238], arg this[146739]:BaseDom[146725]) : _unknown[51] "dont disable remote value forwarding" "method" "primary method"
  {
    unknown ret[519791] "RVV" "temp"
    unknown call_tmp[667607] "expr temp" "maybe param" "maybe type" "temp"
    (667610 'move' call_tmp[667607](146090 call(385418 call (partial) dsiMyDist _mt[243] this[146739])))
    unknown call_tmp[667614] "expr temp" "maybe param" "maybe type" "temp"
    (667617 'move' call_tmp[667614](146097 call(146093 call (partial) dsiTrackDomains _mt[243] call_tmp[667607])))
    unknown call_tmp[667621] "expr temp" "maybe param" "maybe type" "temp"
    (667624 'move' call_tmp[667621](146100 call(385424 call (partial) dsiLinksDistribution _mt[243] this[146739])))
    unknown call_tmp[667626] "expr temp" "maybe param" "maybe type" "temp"
    (667629 'move' call_tmp[667626](146101 call == call_tmp[667614] call_tmp[667621]))
    (146104 call assert call_tmp[667626])
    (481373 'end of statement')
    unknown ret_dom[146111] "dead at end of block" "insert auto destroy"
    (543529 'init var' ret_dom[146111] nil[44] unmanaged BaseDom?[415465])
    (146114 'end of statement')
    unknown ret_dist[146119] "dead at end of block" "insert auto destroy"
    (543531 'init var' ret_dist[146119] nil[44] unmanaged BaseDist?[415459])
    (146122 'end of statement')
    unknown call_tmp[667633] "maybe param" "maybe type" "temp"
    (667636 'move' call_tmp[667633](146125 call(385430 call (partial) dsiMyDist _mt[243] this[146739])))
    unknown dist[146126] "dead at end of block" "insert auto destroy"
    (543533 'init var' dist[146126] call_tmp[667633])
    (146129 'end of statement')
    unknown free_dom[146131] "dead at end of block" "insert auto destroy"
    (543535 'init var' free_dom[146131] 0)
    (146134 'end of statement')
    unknown remove_dist[146136] "dead at end of block" "insert auto destroy"
    (543537 'init var' remove_dist[146136] 0)
    (146139 'end of statement')
    const tmp[146224] "const" "temp"
    unknown call_tmp[667638] "expr temp" "maybe param" "maybe type" "temp"
    (667641 'move' call_tmp[667638](146221 '_wide_get_locale' this[146739]))
    (146226 'move' tmp[146224](146222 'deref' call_tmp[667638]))
    {
      {
        unknown arr_count[146142] "dead at end of block" "insert auto destroy"
        (543539 'init var' arr_count[146142] 0)
        (146145 'end of statement')
        {
          {
            unknown call_tmp[667645] "expr temp" "maybe param" "maybe type" "temp"
            (667648 'move' call_tmp[667645](360501 call _arrsLock _mt[243] this[146739]))
            (146152 call(146148 call (partial) lock _mt[243] call_tmp[667645]))
            (481374 'end of statement')
            unknown call_tmp[667654] "expr temp" "maybe param" "maybe type" "temp"
            (667657 'move' call_tmp[667654](360506 call _arrs _mt[243] this[146739]))
            unknown call_tmp[667661] "expr temp" "maybe param" "maybe type" "temp"
            (667664 'move' call_tmp[667661](146157 call size _mt[243] call_tmp[667654]))
            (146160 call = arr_count[146142] call_tmp[667661])
            (481375 'end of statement' arr_count[146142])
            unknown call_tmp[667668] "expr temp" "maybe param" "maybe type" "temp"
            (667671 'move' call_tmp[667668](385440 call _arrs_containing_dom _mt[243] this[146739]))
            (146165 call += arr_count[146142] call_tmp[667668])
            (481377 'end of statement' arr_count[146142])
            unknown call_tmp[667675] "expr temp" "maybe param" "maybe type" "temp"
            (667678 'move' call_tmp[667675](385445 call _free_when_no_arrs _mt[243] this[146739]))
            (146170 call = call_tmp[667675] 1)
            (481379 'end of statement')
            unknown call_tmp[667682] "expr temp" "maybe param" "maybe type" "temp"
            (667685 'move' call_tmp[667682](360511 call _arrsLock _mt[243] this[146739]))
            (146178 call(146174 call (partial) unlock _mt[243] call_tmp[667682]))
          }
          (146182 'local block')
        }
        unknown call_tmp[667689] "expr temp" "maybe param" "maybe type" "temp"
        (667692 'move' call_tmp[667689](146185 call == arr_count[146142] 0))
        unknown call_tmp[667694] "expr temp" "maybe param" "maybe type" "temp"
        (667697 'move' call_tmp[667694](146217 call _cond_test call_tmp[667689]))
        if call_tmp[667694]
        {
          (146189 call = free_dom[146131] 1)
          (481381 'end of statement' free_dom[146131])
          unknown call_tmp[667701] "expr temp" "maybe param" "maybe type" "temp"
          (667704 'move' call_tmp[667701](146195 call(385451 call (partial) dsiLinksDistribution _mt[243] this[146739])))
          unknown call_tmp[667706] "expr temp" "maybe param" "maybe type" "temp"
          (667709 'move' call_tmp[667706](146213 call _cond_test call_tmp[667701]))
          if call_tmp[667706]
          {
            unknown call_tmp[667713] "expr temp" "maybe param" "maybe type" "temp"
            (667716 'move' call_tmp[667713](146206 call _to_unmanaged this[146739]))
            unknown call_tmp[667718] "expr temp" "maybe param" "maybe type" "temp"
            (667721 'move' call_tmp[667718](146208 call(146200 call (partial) remove_dom _mt[243] dist[146126]) call_tmp[667713]))
            (146209 call = remove_dist[146136] call_tmp[667718])
            (481383 'end of statement' remove_dist[146136] dist[146126])
          }
        }
      }
      (146229 'on block' 0 tmp[146224])
    }
    unknown call_tmp[667723] "expr temp" "maybe param" "maybe type" "temp"
    (667726 'move' call_tmp[667723](146241 call _cond_test free_dom[146131]))
    if call_tmp[667723]
    {
      unknown call_tmp[667728] "expr temp" "maybe param" "maybe type" "temp"
      (667731 'move' call_tmp[667728](146237 call _to_unmanaged this[146739]))
      (146238 call = ret_dom[146111] call_tmp[667728])
      (481386 'end of statement' ret_dom[146111])
    }
    unknown call_tmp[667733] "expr temp" "maybe param" "maybe type" "temp"
    (667736 'move' call_tmp[667733](146252 call _cond_test remove_dist[146136]))
    if call_tmp[667733]
    {
      (146249 call = ret_dist[146119] dist[146126])
      (481388 'end of statement' ret_dist[146119] dist[146126])
    }
    unknown call_tmp[667738] "expr temp" "maybe param" "maybe type" "temp"
    (667741 'move' call_tmp[667738](146260 call _build_tuple ret_dom[146111] ret_dist[146119]))
    unknown call_tmp[667743] "expr temp" "maybe param" "maybe type" "temp"
    (667746 'move' call_tmp[667743](519796 call _build_tuple unmanaged BaseDom?[415465] unmanaged BaseDist?[415459]))
    (519800 'move' ret[519791](519799 'coerce' call_tmp[667738] call_tmp[667743]))
    gotoReturn _end_remove[519789] _end_remove[519789]
    (481391 'end of statement' ret_dom[146111] ret_dist[146119])
    label _end_remove[519789]
    (519793 return ret[519791])
  }
  { scopeless type
    (146085 call _build_tuple unmanaged BaseDom?[415465] unmanaged BaseDist?[415459])
  }
  function BaseDom[146725].remove_arr[146274](arg _mt[146745]:_MT[238], arg this[146743]:BaseDom[146725], arg x[146271]:unmanaged BaseArr[415453], param arg rmFromList[146277] :
  1 =
  1) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ret[519806] "RVV" "temp"
    unknown call_tmp[667748] "maybe param" "maybe type" "temp"
    (667751 'move' call_tmp[667748](146282 call - 1))
    unknown count[146284] "dead at end of block" "insert auto destroy"
    (543541 'init var' count[146284] call_tmp[667748])
    (146287 'end of statement')
    const tmp[146370] "const" "temp"
    unknown call_tmp[667753] "expr temp" "maybe param" "maybe type" "temp"
    (667756 'move' call_tmp[667753](146367 '_wide_get_locale' this[146743]))
    (146372 'move' tmp[146370](146368 'deref' call_tmp[667753]))
    {
      {
        unknown call_tmp[667758] "maybe param" "maybe type" "temp"
        (667761 'move' call_tmp[667758](146291 call - 1))
        unknown cnt[146293] "dead at end of block" "insert auto destroy"
        (543543 'init var' cnt[146293] call_tmp[667758])
        (146296 'end of statement')
        {
          {
            unknown call_tmp[667765] "expr temp" "maybe param" "maybe type" "temp"
            (667768 'move' call_tmp[667765](360517 call _arrsLock _mt[243] this[146743]))
            (146303 call(146299 call (partial) lock _mt[243] call_tmp[667765]))
            (481394 'end of statement')
            unknown call_tmp[667772] "expr temp" "maybe param" "maybe type" "temp"
            (667775 'move' call_tmp[667772](146320 call _cond_test rmFromList[146277]))
            if call_tmp[667772]
            {
              unknown call_tmp[667779] "expr temp" "maybe param" "maybe type" "temp"
              (667782 'move' call_tmp[667779](360522 call _arrs _mt[243] this[146743]))
              (146313 call(146308 call (partial) remove _mt[243] call_tmp[667779]) x[146271])
            }
            {
              unknown call_tmp[667788] "expr temp" "maybe param" "maybe type" "temp"
              (667791 'move' call_tmp[667788](385470 call _arrs_containing_dom _mt[243] this[146743]))
              (146317 call -= call_tmp[667788] 1)
            }
            unknown call_tmp[667795] "expr temp" "maybe param" "maybe type" "temp"
            (667798 'move' call_tmp[667795](360527 call _arrs _mt[243] this[146743]))
            unknown call_tmp[667802] "expr temp" "maybe param" "maybe type" "temp"
            (667805 'move' call_tmp[667802](146328 call size _mt[243] call_tmp[667795]))
            (146331 call = cnt[146293] call_tmp[667802])
            (481397 'end of statement' cnt[146293])
            unknown call_tmp[667809] "expr temp" "maybe param" "maybe type" "temp"
            (667812 'move' call_tmp[667809](385477 call _arrs_containing_dom _mt[243] this[146743]))
            (146336 call += cnt[146293] call_tmp[667809])
            (481399 'end of statement' cnt[146293])
            unknown call_tmp[667816] "expr temp" "maybe param" "maybe type" "temp"
            (667819 'move' call_tmp[667816](385482 call _free_when_no_arrs _mt[243] this[146743]))
            unknown call_tmp[667821] "expr temp" "maybe param" "maybe type" "temp"
            (667824 'move' call_tmp[667821](146340 call ! call_tmp[667816]))
            unknown call_tmp[667826] "expr temp" "maybe param" "maybe type" "temp"
            (667829 'move' call_tmp[667826](146347 call _cond_test call_tmp[667821]))
            if call_tmp[667826]
            {
              (146344 call += cnt[146293] 1)
              (481401 'end of statement' cnt[146293])
            }
            unknown call_tmp[667833] "expr temp" "maybe param" "maybe type" "temp"
            (667836 'move' call_tmp[667833](360532 call _arrsLock _mt[243] this[146743]))
            (146357 call(146353 call (partial) unlock _mt[243] call_tmp[667833]))
          }
          (146361 'local block')
        }
        (146364 call = count[146284] cnt[146293])
        (481404 'end of statement' count[146284] cnt[146293])
      }
      (146375 'on block' 0 tmp[146370])
    }
    unknown call_tmp[667840] "expr temp" "maybe param" "maybe type" "temp"
    (667843 'move' call_tmp[667840](146380 call == count[146284] 0))
    (519812 'move' ret[519806](519811 'coerce' call_tmp[667840] bool[10]))
    gotoReturn _end_remove_arr[519804] _end_remove_arr[519804]
    (481407 'end of statement' count[146284])
    label _end_remove_arr[519804]
    (519808 return ret[519806])
  }
  { scopeless type
    bool[10]
  }
  function BaseDom[146725].add_arr[146394](arg _mt[146749]:_MT[238], arg this[146747]:BaseDom[146725], arg x[146391]:unmanaged BaseArr[415453], param arg locking[146397] :
  1 =
  1, param arg addToList[146401] :
  1 =
  1) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {
    const tmp[146455] "const" "temp"
    unknown call_tmp[667845] "expr temp" "maybe param" "maybe type" "temp"
    (667848 'move' call_tmp[667845](146452 '_wide_get_locale' this[146747]))
    (146457 'move' tmp[146455](146453 'deref' call_tmp[667845]))
    {
      {
        unknown call_tmp[667850] "expr temp" "maybe param" "maybe type" "temp"
        (667853 'move' call_tmp[667850](146413 call _cond_test locking[146397]))
        if call_tmp[667850]
        {
          unknown call_tmp[667857] "expr temp" "maybe param" "maybe type" "temp"
          (667860 'move' call_tmp[667857](360537 call _arrsLock _mt[243] this[146747]))
          (146411 call(146407 call (partial) lock _mt[243] call_tmp[667857]))
        }
        unknown call_tmp[667864] "expr temp" "maybe param" "maybe type" "temp"
        (667867 'move' call_tmp[667864](146433 call _cond_test addToList[146401]))
        if call_tmp[667864]
        {
          unknown call_tmp[667871] "expr temp" "maybe param" "maybe type" "temp"
          (667874 'move' call_tmp[667871](360542 call _arrs _mt[243] this[146747]))
          (146426 call(146421 call (partial) add _mt[243] call_tmp[667871]) x[146391])
        }
        {
          unknown call_tmp[667880] "expr temp" "maybe param" "maybe type" "temp"
          (667883 'move' call_tmp[667880](385496 call _arrs_containing_dom _mt[243] this[146747]))
          (146430 call += call_tmp[667880] 1)
        }
        unknown call_tmp[667885] "expr temp" "maybe param" "maybe type" "temp"
        (667888 'move' call_tmp[667885](146447 call _cond_test locking[146397]))
        if call_tmp[667885]
        {
          unknown call_tmp[667892] "expr temp" "maybe param" "maybe type" "temp"
          (667895 'move' call_tmp[667892](360547 call _arrsLock _mt[243] this[146747]))
          (146445 call(146441 call (partial) unlock _mt[243] call_tmp[667892]))
        }
      }
      (146460 'on block' 0 tmp[146455])
    }
    (519816 return _void[55])
  }
  function BaseDom[146725].remove_containing_arr[146473](arg _mt[146753]:_MT[238], arg this[146751]:BaseDom[146725], arg x[146470]:unmanaged BaseArr[415453]) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ret[519820] "RVV" "temp"
    unknown call_tmp[667899] "maybe param" "maybe type" "temp"
    (667902 'move' call_tmp[667899](146476 call - 1))
    unknown count[146478] "dead at end of block" "insert auto destroy"
    (543545 'init var' count[146478] call_tmp[667899])
    (146481 'end of statement')
    const tmp[146545] "const" "temp"
    unknown call_tmp[667904] "expr temp" "maybe param" "maybe type" "temp"
    (667907 'move' call_tmp[667904](146542 '_wide_get_locale' this[146751]))
    (146547 'move' tmp[146545](146543 'deref' call_tmp[667904]))
    {
      {
        unknown call_tmp[667909] "maybe param" "maybe type" "temp"
        (667912 'move' call_tmp[667909](146485 call - 1))
        unknown cnt[146487] "dead at end of block" "insert auto destroy"
        (543547 'init var' cnt[146487] call_tmp[667909])
        (146490 'end of statement')
        unknown call_tmp[667916] "expr temp" "maybe param" "maybe type" "temp"
        (667919 'move' call_tmp[667916](360552 call _arrsLock _mt[243] this[146751]))
        (146497 call(146493 call (partial) lock _mt[243] call_tmp[667916]))
        (481413 'end of statement')
        unknown call_tmp[667925] "expr temp" "maybe param" "maybe type" "temp"
        (667928 'move' call_tmp[667925](385504 call _arrs_containing_dom _mt[243] this[146751]))
        (146501 call -= call_tmp[667925] 1)
        (481414 'end of statement')
        unknown call_tmp[667932] "expr temp" "maybe param" "maybe type" "temp"
        (667935 'move' call_tmp[667932](360557 call _arrs _mt[243] this[146751]))
        unknown call_tmp[667939] "expr temp" "maybe param" "maybe type" "temp"
        (667942 'move' call_tmp[667939](146506 call size _mt[243] call_tmp[667932]))
        (146509 call = cnt[146487] call_tmp[667939])
        (481415 'end of statement' cnt[146487])
        unknown call_tmp[667946] "expr temp" "maybe param" "maybe type" "temp"
        (667949 'move' call_tmp[667946](385511 call _arrs_containing_dom _mt[243] this[146751]))
        (146514 call += cnt[146487] call_tmp[667946])
        (481417 'end of statement' cnt[146487])
        unknown call_tmp[667953] "expr temp" "maybe param" "maybe type" "temp"
        (667956 'move' call_tmp[667953](385516 call _free_when_no_arrs _mt[243] this[146751]))
        unknown call_tmp[667958] "expr temp" "maybe param" "maybe type" "temp"
        (667961 'move' call_tmp[667958](146518 call ! call_tmp[667953]))
        unknown call_tmp[667963] "expr temp" "maybe param" "maybe type" "temp"
        (667966 'move' call_tmp[667963](146525 call _cond_test call_tmp[667958]))
        if call_tmp[667963]
        {
          (146522 call += cnt[146487] 1)
          (481419 'end of statement' cnt[146487])
        }
        unknown call_tmp[667970] "expr temp" "maybe param" "maybe type" "temp"
        (667973 'move' call_tmp[667970](360562 call _arrsLock _mt[243] this[146751]))
        (146535 call(146531 call (partial) unlock _mt[243] call_tmp[667970]))
        (481421 'end of statement')
        (146539 call = count[146478] cnt[146487])
        (481422 'end of statement' count[146478] cnt[146487])
      }
      (146550 'on block' 0 tmp[146545])
    }
    unknown call_tmp[667977] "expr temp" "maybe param" "maybe type" "temp"
    (667980 'move' call_tmp[667977](146555 call == count[146478] 0))
    (519825 'move' ret[519820](519824 'deref' call_tmp[667977]))
    gotoReturn _end_remove_containing_arr[519818] _end_remove_containing_arr[519818]
    (481425 'end of statement' count[146478])
    label _end_remove_containing_arr[519818]
    (519822 return ret[519820])
  }
  function BaseDom[146725].add_containing_arr[146568](arg _mt[146757]:_MT[238], arg this[146755]:BaseDom[146725], arg x[146565]:unmanaged BaseArr[415453]) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {
    const tmp[146594] "const" "temp"
    unknown call_tmp[667982] "expr temp" "maybe param" "maybe type" "temp"
    (667985 'move' call_tmp[667982](146591 '_wide_get_locale' this[146755]))
    (146596 'move' tmp[146594](146592 'deref' call_tmp[667982]))
    {
      {
        unknown call_tmp[667989] "expr temp" "maybe param" "maybe type" "temp"
        (667992 'move' call_tmp[667989](360567 call _arrsLock _mt[243] this[146755]))
        (146576 call(146572 call (partial) lock _mt[243] call_tmp[667989]))
        (481427 'end of statement')
        unknown call_tmp[667998] "expr temp" "maybe param" "maybe type" "temp"
        (668001 'move' call_tmp[667998](385527 call _arrs_containing_dom _mt[243] this[146755]))
        (146581 call += call_tmp[667998] 1)
        (481428 'end of statement')
        unknown call_tmp[668005] "expr temp" "maybe param" "maybe type" "temp"
        (668008 'move' call_tmp[668005](360572 call _arrsLock _mt[243] this[146755]))
        (146589 call(146585 call (partial) unlock _mt[243] call_tmp[668005]))
      }
      (146599 'on block' 0 tmp[146594])
    }
    (519829 return _void[55])
  }
  function BaseDom[146725].dsiSupportsPrivatization[146607](arg _mt[146761]:_MT[238], arg this[146759]:BaseDom[146725]) param : _unknown[51] "method" "primary method"
  {
    unknown ret[519833] "RVV" "param" "temp"
    (519838 'move' ret[519833](519837 'deref' 0))
    (519835 return ret[519833])
  }
  function BaseDom[146725].dsiRequiresPrivatization[146617](arg _mt[146765]:_MT[238], arg this[146763]:BaseDom[146725]) param : _unknown[51] "method" "primary method"
  {
    unknown ret[519842] "RVV" "param" "temp"
    (519847 'move' ret[519842](519846 'deref' 0))
    (519844 return ret[519842])
  }
  function BaseDom[146725].linksDistribution[146627](arg _mt[146769]:_MT[238], arg this[146767]:BaseDom[146725]) param : _unknown[51] "method" "primary method"
  {
    unknown ret[519851] "RVV" "param" "temp"
    (519856 'move' ret[519851](519855 'deref' 1))
    (519853 return ret[519851])
  }
  function BaseDom[146725].dsiLinksDistribution[146637](arg _mt[146773]:_MT[238], arg this[146771]:BaseDom[146725]) : _unknown[51] "method" "primary method"
  {
    unknown ret[519860] "RVV" "temp"
    (519865 'move' ret[519860](519864 'deref' 1))
    (519862 return ret[519860])
  }
  function BaseDom[146725].dsiDestroyDom[146647](arg _mt[146777]:_MT[238], arg this[146775]:BaseDom[146725]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (519867 return _void[55])
  }
  function BaseDom[146725].dsiDisplayRepresentation[146654](arg _mt[146781]:_MT[238], arg this[146779]:BaseDom[146725]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (146659 call writeln "<no way to display representation>")
    (519869 return _void[55])
  }
  function BaseDom[146725].dsiSupportsAutoLocalAccess[146666](arg _mt[146785]:_MT[238], arg this[146783]:BaseDom[146725]) param : _unknown[51] "method" "primary method"
  {
    unknown ret[519873] "RVV" "param" "temp"
    (519878 'move' ret[519873](519877 'deref' 0))
    (519875 return ret[519873])
  }
  function BaseDom[415300](?).isDefaultRectangular[146676](arg _mt[146789]:_MT[238], arg this[146787]:BaseDom[415300](?)) param : _unknown[51] "method" "primary method"
  {
    unknown ret[519882] "RVV" "param" "temp"
    (519887 'move' ret[519882](519886 'deref' 0))
    (519884 return ret[519882])
  }
  function BaseDom[146725].isDefaultRectangular[146686](arg _mt[146793]:_MT[238], arg this[146791]:BaseDom[146725]) param : _unknown[51] "method" "primary method"
  {
    unknown ret[519891] "RVV" "param" "temp"
    (519896 'move' ret[519891](519895 'deref' 0))
    (519893 return ret[519891])
  }
  function BaseDom[146725].isSliceDomainView[146696](arg _mt[146797]:_MT[238], arg this[146795]:BaseDom[146725]) param : _unknown[51] "method" "primary method"
  {
    unknown ret[519900] "RVV" "param" "temp"
    (519905 'move' ret[519900](519904 'deref' 0))
    (519902 return ret[519900])
  }
  function BaseDom[146725].isRankChangeDomainView[146706](arg _mt[146801]:_MT[238], arg this[146799]:BaseDom[146725]) param : _unknown[51] "method" "primary method"
  {
    unknown ret[519909] "RVV" "param" "temp"
    (519914 'move' ret[519909](519913 'deref' 0))
    (519911 return ret[519909])
  }
  function BaseDom[146725].isReindexDomainView[146716](arg _mt[146805]:_MT[238], arg this[146803]:BaseDom[146725]) param : _unknown[51] "method" "primary method"
  {
    unknown ret[519918] "RVV" "param" "temp"
    (519923 'move' ret[519918](519922 'deref' 0))
    (519920 return ret[519918])
  }
  function BaseDom[146725].super[801363](arg _mt[801365]:_MT[238], arg this[801367]:BaseDom[146725]) : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[801377] "RVV" "temp"
    unknown call_tmp[801384] "expr temp" "maybe param" "maybe type" "temp"
    (801387 'move' call_tmp[801384](801371 '.v' this[801367] c"super"))
    (801382 'move' ret[801377](801381 'deref' call_tmp[801384]))
    (801379 return ret[801377])
  }
  function BaseDom[146725]._arrs[801389](arg _mt[801391]:_MT[238], arg this[801393]:BaseDom[146725]) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[801403] "RVV" "temp"
    unknown call_tmp[801410] "expr temp" "maybe param" "maybe type" "temp"
    (801413 'move' call_tmp[801410](801397 '.' this[801393] c"_arrs"))
    (801408 'move' ret[801403](801407 'addr of' call_tmp[801410]))
    (801405 return ret[801403])
  }
  function BaseDom[146725]._arrs_containing_dom[801415](arg _mt[801417]:_MT[238], arg this[801419]:BaseDom[146725]) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[801429] "RVV" "temp"
    unknown call_tmp[801436] "expr temp" "maybe param" "maybe type" "temp"
    (801439 'move' call_tmp[801436](801423 '.' this[801419] c"_arrs_containing_dom"))
    (801434 'move' ret[801429](801433 'addr of' call_tmp[801436]))
    (801431 return ret[801429])
  }
  function BaseDom[146725]._arrsLock[801441](arg _mt[801443]:_MT[238], arg this[801445]:BaseDom[146725]) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[801455] "RVV" "temp"
    unknown call_tmp[801462] "expr temp" "maybe param" "maybe type" "temp"
    (801465 'move' call_tmp[801462](801449 '.' this[801445] c"_arrsLock"))
    (801460 'move' ret[801455](801459 'addr of' call_tmp[801462]))
    (801457 return ret[801455])
  }
  function BaseDom[146725]._free_when_no_arrs[801467](arg _mt[801469]:_MT[238], arg this[801471]:BaseDom[146725]) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[801481] "RVV" "temp"
    unknown call_tmp[801488] "expr temp" "maybe param" "maybe type" "temp"
    (801491 'move' call_tmp[801488](801475 '.' this[801471] c"_free_when_no_arrs"))
    (801486 'move' ret[801481](801485 'addr of' call_tmp[801488]))
    (801483 return ret[801481])
  }
  function BaseDom[146725].pid[801493](arg _mt[801495]:_MT[238], arg this[801497]:BaseDom[146725]) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[801507] "RVV" "temp"
    unknown call_tmp[801514] "expr temp" "maybe param" "maybe type" "temp"
    (801517 'move' call_tmp[801514](801501 '.' this[801497] c"pid"))
    (801512 'move' ret[801507](801511 'addr of' call_tmp[801514]))
    (801509 return ret[801507])
  }
  function BaseDom[146725].writeThis[801519](arg _mt[801523]:_MT[238], arg this[801521]:BaseDom[146725], arg f[801522]:_any[178](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (801528 call writeThisDefaultImpl f[801522] this[801521])
    (801533 return _void[55])
  }
  function BaseDom[146725].readThis[801535](arg _mt[801539]:_MT[238], arg this[801537]:BaseDom[146725], arg f[801538]:_any[178](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (801543 call readThisDefaultImpl f[801538] this[801537])
    (801549 return _void[55])
  }
  type BaseDom[146725] val super[355656]:object[22] "super class" unknown _arrs[145995](145994 call chpl__simpleSet[204907](?) unmanaged BaseArr[415453]) val _arrs_containing_dom[146000]:int(64)[13] int(64)[13] val _arrsLock[146005]:chpl_LocalSpinlock[187386] chpl_LocalSpinlock[187386] val _free_when_no_arrs[146010]:bool[10] bool[10] val pid[146016]:int(64)[13] nullPid[113712] int(64)[13]
  type unmanaged BaseDom?[415465]
  type BaseDom?[415462](?)
  type unmanaged BaseDom[415405]
  type BaseDom[415300](?)
  type BaseDom[372743](?)
  function BaseRectangularDom[146893](?).getBaseArrType[146826](arg _mt[146897]:_MT[238], arg this[146895]:BaseRectangularDom[146893](?)) type : _unknown[51] "method" "primary method"
  {
    unknown ret[519927] "RVV" "temp" "type variable"
    unknown call_tmp[668014] "expr temp" "maybe param" "maybe type" "temp"
    (668017 'move' call_tmp[668014](385536 call rank _mt[243] this[146895]))
    unknown call_tmp[668021] "expr temp" "maybe param" "maybe type" "temp"
    (668024 'move' call_tmp[668021](385541 call idxType _mt[243] this[146895]))
    unknown call_tmp[668028] "expr temp" "maybe param" "maybe type" "temp"
    (668031 'move' call_tmp[668028](385546 call stridable _mt[243] this[146895]))
    unknown call_tmp[668033] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (668036 'move' call_tmp[668033](747893 'new' BaseArrOverRectangularDom[385531](?)(rank = call_tmp[668014])(idxType = call_tmp[668021])(stridable = call_tmp[668028])(_chpl_manager = unmanaged[220](?))))
    unknown tmp[146840] "dead at end of block" "insert auto destroy"
    (543549 'init var' tmp[146840] call_tmp[668033])
    (146843 'end of statement')
    unknown call_tmp[668038] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (668041 'move' call_tmp[668038](146846 'typeof' tmp[146840]))
    (519932 'move' ret[519927](519931 'deref' call_tmp[668038]))
    gotoReturn _end_getBaseArrType[519925] _end_getBaseArrType[519925]
    (481441 'end of statement' tmp[146840])
    label _end_getBaseArrType[519925]
    (519929 return ret[519927])
  }
  function BaseRectangularDom[146893](?).deinit[146853](arg _mt[146901]:_MT[238], arg this[146899]:BaseRectangularDom[146893](?)) : _unknown[51] "destructor" "method" "primary method" "no return value for void"
  {
    (519936 return _void[55])
  }
  function BaseRectangularDom[146893](?).dsiAdd[146862](arg _mt[146905]:_MT[238], arg this[146903]:BaseRectangularDom[146893](?), in arg x[146860]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[519940] "RVV" "temp"
    (146867 call compilerError "Cannot add indices to a rectangular domain")
    (481443 'end of statement')
    (519945 'move' ret[519940](519944 'deref' 0))
    (519942 return ret[519940])
  }
  function BaseRectangularDom[146893](?).dsiRemove[146879](arg _mt[146909]:_MT[238], arg this[146907]:BaseRectangularDom[146893](?), arg x[146877]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[519949] "RVV" "temp"
    (146884 call compilerError "Cannot remove indices from a rectangular domain")
    (481445 'end of statement')
    (519954 'move' ret[519949](519953 'deref' 0))
    (519951 return ret[519949])
  }
  function BaseRectangularDom[146893](?).super[801551](arg _mt[801553]:_MT[238], arg this[801555]:BaseRectangularDom[146893](?)) : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[801565] "RVV" "temp"
    unknown call_tmp[801572] "expr temp" "maybe param" "maybe type" "temp"
    (801575 'move' call_tmp[801572](801559 '.v' this[801555] c"super"))
    (801570 'move' ret[801565](801569 'deref' call_tmp[801572]))
    (801567 return ret[801565])
  }
  function BaseRectangularDom[801582](?).rank[801577](arg _mt[801579]:_MT[238], arg this[801584]:BaseRectangularDom[801582](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[801615] "RVV" "param" "temp"
    unknown borrowOfThis[801586]
    (801607 'end of statement')
    (801588 'move' borrowOfThis[801586](801591 call _cast _borrowedNonNilable[214](?) this[801584]))
    (801608 'end of statement' borrowOfThis[801586])
    unknown call_tmp[801629] "expr temp" "maybe param" "maybe type" "temp"
    (801632 'move' call_tmp[801629](801597 'is bound' borrowOfThis[801586] c"rank"))
    if call_tmp[801629]
    {
      unknown call_tmp[801634] "expr temp" "maybe param" "maybe type" "temp"
      (801637 'move' call_tmp[801634](801596 '.' borrowOfThis[801586] c"rank"))
      (801620 'move' ret[801615](801619 'deref' call_tmp[801634]))
      gotoReturn _end_rank[801613] _end_rank[801613]
      (801610 'end of statement' borrowOfThis[801586])
    }
    {
      (801625 'move' ret[801615](801624 'deref' ?[260]))
      gotoReturn _end_rank[801613] _end_rank[801613]
    }
    label _end_rank[801613]
    (801617 return ret[801615])
  }
  function BaseRectangularDom[801582](?).rank[801639](arg _mt[801641]:_MT[238], arg this[801643]:BaseRectangularDom[801582](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[801674] "RVV" "param" "temp"
    unknown borrowOfThis[801645] "type variable"
    (801666 'end of statement')
    (801647 'move' borrowOfThis[801645](801650 call _cast _borrowedNonNilable[214](?) this[801643]))
    (801667 'end of statement' borrowOfThis[801645])
    unknown call_tmp[801688] "expr temp" "maybe param" "maybe type" "temp"
    (801691 'move' call_tmp[801688](801656 'is bound' borrowOfThis[801645] c"rank"))
    if call_tmp[801688]
    {
      unknown call_tmp[801693] "expr temp" "maybe param" "maybe type" "temp"
      (801696 'move' call_tmp[801693](801655 '.' borrowOfThis[801645] c"rank"))
      (801679 'move' ret[801674](801678 'deref' call_tmp[801693]))
      gotoReturn _end_rank[801672] _end_rank[801672]
      (801669 'end of statement' borrowOfThis[801645])
    }
    {
      (801684 'move' ret[801674](801683 'deref' ?[260]))
      gotoReturn _end_rank[801672] _end_rank[801672]
    }
    label _end_rank[801672]
    (801676 return ret[801674])
  }
  function BaseRectangularDom[801582](?).idxType[801698](arg _mt[801700]:_MT[238], arg this[801702]:BaseRectangularDom[801582](?)) type : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[801737] "RVV" "temp" "type variable"
    unknown borrowOfThis[801704]
    (801729 'end of statement')
    (801706 'move' borrowOfThis[801704](801709 call _cast _borrowedNonNilable[214](?) this[801702]))
    (801730 'end of statement' borrowOfThis[801704])
    unknown call_tmp[801751] "expr temp" "maybe param" "maybe type" "temp"
    (801754 'move' call_tmp[801751](801719 'is bound' borrowOfThis[801704] c"idxType"))
    if call_tmp[801751]
    {
      unknown call_tmp[801756] "expr temp" "maybe param" "maybe type" "temp"
      (801759 'move' call_tmp[801756](801714 '.v' borrowOfThis[801704] c"idxType"))
      unknown call_tmp[801761] "expr temp" "maybe param" "maybe type" "temp"
      (801764 'move' call_tmp[801761](801715 call chpl_checkLegalTypeFieldAccessor this[801702] call_tmp[801756] "idxType"))
      (801742 'move' ret[801737](801741 'deref' call_tmp[801761]))
      gotoReturn _end_idxType[801735] _end_idxType[801735]
      (801732 'end of statement' borrowOfThis[801704])
    }
    {
      (801747 'move' ret[801737](801746 'deref' _uninstantiated[258]))
      gotoReturn _end_idxType[801735] _end_idxType[801735]
    }
    label _end_idxType[801735]
    (801739 return ret[801737])
  }
  function BaseRectangularDom[801582](?).idxType[801766](arg _mt[801768]:_MT[238], arg this[801770]:BaseRectangularDom[801582](?)) type : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[801805] "RVV" "temp" "type variable"
    unknown borrowOfThis[801772] "type variable"
    (801797 'end of statement')
    (801774 'move' borrowOfThis[801772](801777 call _cast _borrowedNonNilable[214](?) this[801770]))
    (801798 'end of statement' borrowOfThis[801772])
    unknown call_tmp[801819] "expr temp" "maybe param" "maybe type" "temp"
    (801822 'move' call_tmp[801819](801787 'is bound' borrowOfThis[801772] c"idxType"))
    if call_tmp[801819]
    {
      unknown call_tmp[801824] "expr temp" "maybe param" "maybe type" "temp"
      (801827 'move' call_tmp[801824](801782 '.v' borrowOfThis[801772] c"idxType"))
      unknown call_tmp[801829] "expr temp" "maybe param" "maybe type" "temp"
      (801832 'move' call_tmp[801829](801783 call chpl_checkLegalTypeFieldAccessor this[801770] call_tmp[801824] "idxType"))
      (801810 'move' ret[801805](801809 'deref' call_tmp[801829]))
      gotoReturn _end_idxType[801803] _end_idxType[801803]
      (801800 'end of statement' borrowOfThis[801772])
    }
    {
      (801815 'move' ret[801805](801814 'deref' _uninstantiated[258]))
      gotoReturn _end_idxType[801803] _end_idxType[801803]
    }
    label _end_idxType[801803]
    (801807 return ret[801805])
  }
  function BaseRectangularDom[801582](?).stridable[801834](arg _mt[801836]:_MT[238], arg this[801838]:BaseRectangularDom[801582](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[801869] "RVV" "param" "temp"
    unknown borrowOfThis[801840]
    (801861 'end of statement')
    (801842 'move' borrowOfThis[801840](801845 call _cast _borrowedNonNilable[214](?) this[801838]))
    (801862 'end of statement' borrowOfThis[801840])
    unknown call_tmp[801883] "expr temp" "maybe param" "maybe type" "temp"
    (801886 'move' call_tmp[801883](801851 'is bound' borrowOfThis[801840] c"stridable"))
    if call_tmp[801883]
    {
      unknown call_tmp[801888] "expr temp" "maybe param" "maybe type" "temp"
      (801891 'move' call_tmp[801888](801850 '.' borrowOfThis[801840] c"stridable"))
      (801874 'move' ret[801869](801873 'deref' call_tmp[801888]))
      gotoReturn _end_stridable[801867] _end_stridable[801867]
      (801864 'end of statement' borrowOfThis[801840])
    }
    {
      (801879 'move' ret[801869](801878 'deref' ?[260]))
      gotoReturn _end_stridable[801867] _end_stridable[801867]
    }
    label _end_stridable[801867]
    (801871 return ret[801869])
  }
  function BaseRectangularDom[801582](?).stridable[801893](arg _mt[801895]:_MT[238], arg this[801897]:BaseRectangularDom[801582](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[801928] "RVV" "param" "temp"
    unknown borrowOfThis[801899] "type variable"
    (801920 'end of statement')
    (801901 'move' borrowOfThis[801899](801904 call _cast _borrowedNonNilable[214](?) this[801897]))
    (801921 'end of statement' borrowOfThis[801899])
    unknown call_tmp[801942] "expr temp" "maybe param" "maybe type" "temp"
    (801945 'move' call_tmp[801942](801910 'is bound' borrowOfThis[801899] c"stridable"))
    if call_tmp[801942]
    {
      unknown call_tmp[801947] "expr temp" "maybe param" "maybe type" "temp"
      (801950 'move' call_tmp[801947](801909 '.' borrowOfThis[801899] c"stridable"))
      (801933 'move' ret[801928](801932 'deref' call_tmp[801947]))
      gotoReturn _end_stridable[801926] _end_stridable[801926]
      (801923 'end of statement' borrowOfThis[801899])
    }
    {
      (801938 'move' ret[801928](801937 'deref' ?[260]))
      gotoReturn _end_stridable[801926] _end_stridable[801926]
    }
    label _end_stridable[801926]
    (801930 return ret[801928])
  }
  function BaseRectangularDom[146893](?).init[801952](arg _mt[801954]:_MT[238], arg this[801955]:BaseRectangularDom[146893](?), param arg rank[801966]:int(64)[13], arg idxType[801978]:_any[178](?), param arg stridable[801987]:bool[10]) : void[4] "compiler generated" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown super_tmp[802001] "temporary of super field" "temp"
    (802003 'move' super_tmp[802001](802000 '.v' this[801955] c"super"))
    (801965 call(801963 call (partial) init _mt[243] super_tmp[802001]))
    (802039 'end of statement')
    unknown tmp[802006] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[802043] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[802055] "expr temp" "maybe param" "maybe type" "temp"
      (802058 'move' call_tmp[802055](802008 '.v' this[801955] c"super"))
      (802047 'move' call_type_tmp[802043](802011 'typeof' call_tmp[802055]))
    }
    (802012 'move' tmp[802006] call_type_tmp[802043])
    unknown call_tmp[802060] "maybe param" "maybe type" "temp"
    (802063 'move' call_tmp[802060](802017 'cast' tmp[802006] this[801955]))
    unknown chpl__thisAsParent[802014] "dead at end of block" "insert auto destroy" "temp"
    (802051 'init var' chpl__thisAsParent[802014] call_tmp[802060] tmp[802006])
    (802020 'setcid' chpl__thisAsParent[802014])
    unknown call_tmp[802065] "expr temp" "maybe param" "maybe type" "temp"
    (802068 'move' call_tmp[802065](802023 call _cast int(64)[13] rank[801966]))
    (802025 'init field' this[801955] c"rank" call_tmp[802065])
    (802040 'end of statement')
    (802028 'init field' this[801955] c"idxType" idxType[801978])
    unknown call_tmp[802070] "expr temp" "maybe param" "maybe type" "temp"
    (802073 'move' call_tmp[802070](802032 call _cast bool[10] stridable[801987]))
    (802034 'init field' this[801955] c"stridable" call_tmp[802070])
    (802041 'end of statement')
    (802037 'setcid' this[801955])
    (802049 return _void[55])
  }
  function BaseRectangularDom[146893](?).writeThis[802075](arg _mt[802079]:_MT[238], arg this[802077]:BaseRectangularDom[146893](?), arg f[802078]:_any[178](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (802084 call writeThisDefaultImpl f[802078] this[802077])
    (802089 return _void[55])
  }
  function BaseRectangularDom[146893](?).readThis[802091](arg _mt[802095]:_MT[238], arg this[802093]:BaseRectangularDom[146893](?), arg f[802094]:_any[178](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (802099 call readThisDefaultImpl f[802094] this[802093])
    (802105 return _void[55])
  }
  type BaseRectangularDom[146893](?) val super[355658]:BaseDom[146725] "super class" unknown rank[146812] "param" int(64)[13] unknown idxType[146816] "type variable" unknown stridable[146820] "param" bool[10]
  type BaseRectangularDom[801582](?)
  type BaseRectangularDom[382243](?)
  function BaseSparseDomImpl[147961](?).deinit[146928](arg _mt[147965]:_MT[238], arg this[147963]:BaseSparseDomImpl[147961](?)) : _unknown[51] "destructor" "method" "primary method" "no return value for void"
  {
    (519956 return _void[55])
  }
  function BaseSparseDomImpl[147961](?).dsiBulkAdd[146946](arg _mt[147969]:_MT[238], arg this[147967]:BaseSparseDomImpl[147961](?), arg inds[146943]:_array[133588](?), arg dataSorted[146949] :
  0 =
  0, arg isUnique[146953] :
  0 =
  0, arg preserveInds[146957] :
  1 =
  1, arg addOn[146961] :
  nilLocale[89939] =
  nilLocale[89939]) : _unknown[51] "compiler added where" "method" "primary method" "method overrides"
  {
    unknown ret[519960] "RVV" "temp"
    unknown tmp[427089] "maybe param" "temp"
    (427100 'move' tmp[427089](146965 call ! dataSorted[146949]))
    unknown call_tmp[668043] "expr temp" "maybe param" "maybe type" "temp"
    (668046 'move' call_tmp[668043](427102 call _cond_invalid tmp[427089]))
    if call_tmp[668043]
    {
      (427105 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[568497] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[568498] "maybe param" "temp"
    unknown call_tmp[668048] "expr temp" "maybe param" "maybe type" "temp"
    (668051 'move' call_tmp[668048](427090 call isTrue tmp[427089]))
    (568503 'move' tmp[568498](568501 call _cond_test call_tmp[668048]))
    if tmp[568498]
    {
      unknown tmp[568505] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (568507 'move' tmp[568505](427093 call isTrue preserveInds[146957]))
      (568512 'move' tmp[568497](568509 '_paramFoldLogical' tmp[568498] tmp[568505]))
    }
    {
      (568517 'move' tmp[568497](568514 '_paramFoldLogical' tmp[568498] 0))
    }
    unknown call_tmp[668053] "expr temp" "maybe param" "maybe type" "temp"
    (668056 'move' call_tmp[668053](146995 call _cond_test tmp[568497]))
    if call_tmp[668053]
    {
      unknown _inds[146971] "dead at end of block" "insert auto destroy"
      (543551 'init var' _inds[146971] inds[146943])
      (146974 'end of statement')
      unknown call_tmp[668060] "expr temp" "maybe param" "maybe type" "temp"
      (668063 'move' call_tmp[668060](146982 call(385567 call (partial) bulkAdd_help _mt[243] this[147967]) _inds[146971] dataSorted[146949] isUnique[146953] addOn[146961]))
      (519965 'move' ret[519960](519964 'deref' call_tmp[668060]))
      gotoReturn _end_dsiBulkAdd[519958] _end_dsiBulkAdd[519958]
      (481448 'end of statement' _inds[146971])
    }
    {
      unknown call_tmp[668067] "expr temp" "maybe param" "maybe type" "temp"
      (668070 'move' call_tmp[668067](146991 call(385575 call (partial) bulkAdd_help _mt[243] this[147967]) inds[146943] dataSorted[146949] isUnique[146953] addOn[146961]))
      (519970 'move' ret[519960](519969 'deref' call_tmp[668067]))
      gotoReturn _end_dsiBulkAdd[519958] _end_dsiBulkAdd[519958]
    }
    label _end_dsiBulkAdd[519958]
    (519962 return ret[519960])
  }
  where {
    unknown call_tmp[668074] "expr temp" "maybe param" "maybe type" "temp"
    (668077 'move' call_tmp[668074](385552 call rank _mt[243] this[147967]))
    unknown call_tmp[668081] "expr temp" "maybe param" "maybe type" "temp"
    (668084 'move' call_tmp[668081](385557 call idxType _mt[243] this[147967]))
    unknown call_tmp[668086] "expr temp" "maybe param" "maybe type" "temp"
    (668089 'move' call_tmp[668086](146938 call chpl__buildIndexType call_tmp[668074] call_tmp[668081]))
    unknown call_tmp[668093] "expr temp" "maybe param" "maybe type" "temp"
    (668096 'move' call_tmp[668093](461706 call eltType _mt[243] inds[146943]))
    unknown call_tmp[668098] "expr temp" "maybe param" "maybe type" "temp"
    (668101 'move' call_tmp[668098](461710 call == call_tmp[668086] call_tmp[668093]))
    (461704 call & 1 call_tmp[668098])
  }
  function BaseSparseDomImpl[147961](?).bulkAdd_help[147017](arg _mt[147973]:_MT[238], arg this[147971]:BaseSparseDomImpl[147961](?), arg inds[147014]:_array[133588](?), arg dataSorted[147020] :
  0 =
  0, arg isUnique[147024] :
  0 =
  0, arg addOn[147028] :
  nilLocale[89939] =
  nilLocale[89939]) : _unknown[51] "compiler added where" "method" "primary method"
  {
    unknown ret[519976] "RVV" "temp"
    (147050 call halt "Helper function called on the BaseSparseDomImpl")
    (481451 'end of statement')
    unknown call_tmp[668103] "expr temp" "maybe param" "maybe type" "temp"
    (668106 'move' call_tmp[668103](147054 call - 1))
    (519981 'move' ret[519976](519980 'deref' call_tmp[668103]))
    (519978 return ret[519976])
  }
  where {
    unknown call_tmp[668110] "expr temp" "maybe param" "maybe type" "temp"
    (668113 'move' call_tmp[668110](385584 call rank _mt[243] this[147971]))
    unknown call_tmp[668117] "expr temp" "maybe param" "maybe type" "temp"
    (668120 'move' call_tmp[668117](385589 call idxType _mt[243] this[147971]))
    unknown call_tmp[668122] "expr temp" "maybe param" "maybe type" "temp"
    (668125 'move' call_tmp[668122](147010 call chpl__buildIndexType call_tmp[668110] call_tmp[668117]))
    unknown call_tmp[668129] "expr temp" "maybe param" "maybe type" "temp"
    (668132 'move' call_tmp[668129](461718 call eltType _mt[243] inds[147014]))
    unknown call_tmp[668134] "expr temp" "maybe param" "maybe type" "temp"
    (668137 'move' call_tmp[668134](461722 call == call_tmp[668122] call_tmp[668129]))
    (461716 call & 1 call_tmp[668134])
  }
  function BaseSparseDomImpl[147961](?)._grow[147066](arg _mt[147977]:_MT[238], arg this[147975]:BaseSparseDomImpl[147961](?), arg size[147063]:int(64)[13], arg factor[147069] :
  arrayAsVecGrowthFactor[113749] =
  arrayAsVecGrowthFactor[113749]) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[668141] "expr temp" "maybe param" "maybe type" "temp"
    (668144 'move' call_tmp[668141](360577 call nnzDom _mt[243] this[147975]))
    unknown call_tmp[668148] "maybe param" "maybe type" "temp"
    (668151 'move' call_tmp[668148](147073 call size _mt[243] call_tmp[668141]))
    const oldNNZDomSize[147076] "dead at end of block" "const" "insert auto destroy"
    (543553 'init var' oldNNZDomSize[147076] call_tmp[668148])
    (147079 'end of statement')
    unknown call_tmp[668153] "expr temp" "maybe param" "maybe type" "temp"
    (668156 'move' call_tmp[668153](147083 call > size[147063] oldNNZDomSize[147076]))
    unknown call_tmp[668158] "expr temp" "maybe param" "maybe type" "temp"
    (668161 'move' call_tmp[668158](147118 call _cond_test call_tmp[668153]))
    if call_tmp[668158]
    {
      const _newNNZDomSize[147100] "dead at end of block" "const" "insert auto destroy"
      unknown tmp[568524] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[568525] "maybe param" "temp"
      (568530 'move' tmp[568525](568528 call _cond_test oldNNZDomSize[147076]))
      if tmp[568525]
      {
        unknown tmp[568532] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[668163] "expr temp" "maybe param" "maybe type" "temp"
        (668166 'move' call_tmp[668163](147089 call * factor[147069] oldNNZDomSize[147076]))
        unknown call_tmp[668168] "expr temp" "maybe param" "maybe type" "temp"
        (668171 'move' call_tmp[668168](147092 call ceil call_tmp[668163]))
        (568534 'move' tmp[568532](147094 call _cast int(64)[13] call_tmp[668168]))
        (568539 'move' tmp[568524](568536 '_paramFoldLogical' tmp[568525] tmp[568532]))
      }
      {
        (568544 'move' tmp[568524](568541 '_paramFoldLogical' tmp[568525] 1))
      }
      (543555 'init var' _newNNZDomSize[147100] tmp[568524])
      (147103 'end of statement' oldNNZDomSize[147076] oldNNZDomSize[147076])
      unknown call_tmp[668175] "expr temp" "maybe param" "maybe type" "temp"
      (668178 'move' call_tmp[668175](385601 call nnzDom _mt[243] this[147975]))
      unknown call_tmp[668180] "expr temp" "maybe param" "maybe type" "temp"
      (668183 'move' call_tmp[668180](147107 call chpl_build_low_bounded_range 1))
      unknown call_tmp[668185] "expr temp" "maybe param" "maybe type" "temp"
      (668188 'move' call_tmp[668185](147110 call # call_tmp[668180] _newNNZDomSize[147100]))
      unknown call_tmp[668190] "expr temp" "maybe param" "maybe type" "temp"
      (668193 'move' call_tmp[668190](147113 call chpl__buildDomainExpr call_tmp[668185]))
      (147115 call = call_tmp[668175] call_tmp[668190])
      (481455 'end of statement' _newNNZDomSize[147100])
    }
    (519983 return _void[55])
  }
  function BaseSparseDomImpl[147961](?)._shrink[147130](arg _mt[147981]:_MT[238], arg this[147979]:BaseSparseDomImpl[147961](?), arg size[147127]:int(64)[13], arg factor[147133] :
  arrayAsVecGrowthFactor[113749] =
  arrayAsVecGrowthFactor[113749]) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[668195] "expr temp" "maybe param" "maybe type" "temp"
    (668198 'move' call_tmp[668195](147138 call == size[147127] 0))
    unknown call_tmp[668200] "expr temp" "maybe param" "maybe type" "temp"
    (668203 'move' call_tmp[668200](147204 call _cond_test call_tmp[668195]))
    if call_tmp[668200]
    {
      unknown call_tmp[668207] "expr temp" "maybe param" "maybe type" "temp"
      (668210 'move' call_tmp[668207](385609 call nnzDom _mt[243] this[147979]))
      unknown call_tmp[668212] "expr temp" "maybe param" "maybe type" "temp"
      (668215 'move' call_tmp[668212](147143 call chpl_build_bounded_range 1 0))
      unknown call_tmp[668217] "expr temp" "maybe param" "maybe type" "temp"
      (668220 'move' call_tmp[668217](147146 call chpl__buildDomainExpr call_tmp[668212]))
      (147148 call = call_tmp[668207] call_tmp[668217])
    }
    {
      unknown call_tmp[668224] "expr temp" "maybe param" "maybe type" "temp"
      (668227 'move' call_tmp[668224](360582 call nnzDom _mt[243] this[147979]))
      unknown call_tmp[668231] "expr temp" "maybe param" "maybe type" "temp"
      (668234 'move' call_tmp[668231](147153 call size _mt[243] call_tmp[668224]))
      unknown call_tmp[668236] "expr temp" "maybe param" "maybe type" "temp"
      (668239 'move' call_tmp[668236](147158 call ** factor[147133] 2))
      unknown call_tmp[668241] "expr temp" "maybe param" "maybe type" "temp"
      (668244 'move' call_tmp[668241](147160 call / call_tmp[668231] call_tmp[668236]))
      unknown call_tmp[668246] "maybe param" "maybe type" "temp"
      (668249 'move' call_tmp[668246](147163 call _cast int(64)[13] call_tmp[668241]))
      const shrinkThreshold[147165] "dead at end of block" "const" "insert auto destroy"
      (543557 'init var' shrinkThreshold[147165] call_tmp[668246])
      (147168 'end of statement')
      unknown call_tmp[668251] "expr temp" "maybe param" "maybe type" "temp"
      (668254 'move' call_tmp[668251](147172 call < size[147127] shrinkThreshold[147165]))
      unknown call_tmp[668256] "expr temp" "maybe param" "maybe type" "temp"
      (668259 'move' call_tmp[668256](147200 call _cond_test call_tmp[668251]))
      if call_tmp[668256]
      {
        unknown call_tmp[668263] "expr temp" "maybe param" "maybe type" "temp"
        (668266 'move' call_tmp[668263](360587 call nnzDom _mt[243] this[147979]))
        unknown call_tmp[668270] "expr temp" "maybe param" "maybe type" "temp"
        (668273 'move' call_tmp[668270](147175 call size _mt[243] call_tmp[668263]))
        unknown call_tmp[668275] "expr temp" "maybe param" "maybe type" "temp"
        (668278 'move' call_tmp[668275](147179 call / call_tmp[668270] factor[147133]))
        unknown call_tmp[668280] "maybe param" "maybe type" "temp"
        (668283 'move' call_tmp[668280](147182 call _cast int(64)[13] call_tmp[668275]))
        const _newNNZDomSize[147184] "dead at end of block" "const" "insert auto destroy"
        (543559 'init var' _newNNZDomSize[147184] call_tmp[668280])
        (147187 'end of statement')
        unknown call_tmp[668287] "expr temp" "maybe param" "maybe type" "temp"
        (668290 'move' call_tmp[668287](385618 call nnzDom _mt[243] this[147979]))
        unknown call_tmp[668292] "expr temp" "maybe param" "maybe type" "temp"
        (668295 'move' call_tmp[668292](147192 call chpl_build_bounded_range 1 _newNNZDomSize[147184]))
        unknown call_tmp[668297] "expr temp" "maybe param" "maybe type" "temp"
        (668300 'move' call_tmp[668297](147195 call chpl__buildDomainExpr call_tmp[668292]))
        (147197 call = call_tmp[668287] call_tmp[668297])
        (481458 'end of statement' _newNNZDomSize[147184])
      }
    }
    (519985 return _void[55])
  }
  function BaseSparseDomImpl[147961](?)._bulkGrow[147213](arg _mt[147985]:_MT[238], arg this[147983]:BaseSparseDomImpl[147961](?)) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[668304] "maybe param" "maybe type" "temp"
    (668307 'move' call_tmp[668304](147217 call(385625 call (partial) getNNZ _mt[243] this[147983])))
    const nnz[147218] "dead at end of block" "const" "insert auto destroy"
    (543561 'init var' nnz[147218] call_tmp[668304])
    (147221 'end of statement')
    unknown call_tmp[668311] "expr temp" "maybe param" "maybe type" "temp"
    (668314 'move' call_tmp[668311](360592 call nnzDom _mt[243] this[147983]))
    unknown call_tmp[668318] "expr temp" "maybe param" "maybe type" "temp"
    (668321 'move' call_tmp[668318](147225 call size _mt[243] call_tmp[668311]))
    unknown call_tmp[668323] "expr temp" "maybe param" "maybe type" "temp"
    (668326 'move' call_tmp[668323](147228 call > nnz[147218] call_tmp[668318]))
    unknown call_tmp[668328] "expr temp" "maybe param" "maybe type" "temp"
    (668331 'move' call_tmp[668328](147261 call _cond_test call_tmp[668323]))
    if call_tmp[668328]
    {
      unknown call_tmp[668333] "expr temp" "maybe param" "maybe type" "temp"
      (668336 'move' call_tmp[668333](147234 call log2 nnz[147218]))
      unknown call_tmp[668338] "expr temp" "maybe param" "maybe type" "temp"
      (668341 'move' call_tmp[668338](147238 call + call_tmp[668333] 1.0))
      unknown call_tmp[668343] "expr temp" "maybe param" "maybe type" "temp"
      (668346 'move' call_tmp[668343](147241 call exp2 call_tmp[668338]))
      unknown call_tmp[668348] "maybe param" "maybe type" "temp"
      (668351 'move' call_tmp[668348](147243 call _cast int(64)[13] call_tmp[668343]))
      const _newNNZDomSize[147245] "dead at end of block" "const" "insert auto destroy"
      (543563 'init var' _newNNZDomSize[147245] call_tmp[668348])
      (147248 'end of statement' nnz[147218])
      unknown call_tmp[668355] "expr temp" "maybe param" "maybe type" "temp"
      (668358 'move' call_tmp[668355](385632 call nnzDom _mt[243] this[147983]))
      unknown call_tmp[668360] "expr temp" "maybe param" "maybe type" "temp"
      (668363 'move' call_tmp[668360](147253 call chpl_build_bounded_range 1 _newNNZDomSize[147245]))
      unknown call_tmp[668365] "expr temp" "maybe param" "maybe type" "temp"
      (668368 'move' call_tmp[668365](147256 call chpl__buildDomainExpr call_tmp[668360]))
      (147258 call = call_tmp[668355] call_tmp[668365])
      (481461 'end of statement' _newNNZDomSize[147245])
    }
    (519987 return _void[55])
  }
  function BaseSparseDomImpl[147961](?)._countDuplicates[147271](arg _mt[147989]:_MT[238], arg this[147987]:BaseSparseDomImpl[147961](?), arg arr[147269]:_any[178](?)) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ret[519991] "RVV" "temp"
    unknown call_tmp[668370] "maybe param" "maybe type" "temp"
    (668373 'move' call_tmp[668370](147278 call - 1))
    unknown dupCount[147280] "dead at end of block" "insert auto destroy"
    (543565 'init var' dupCount[147280] call_tmp[668370])
    (147283 'end of statement')
    unknown call_tmp[668377] "expr temp" "maybe param" "maybe type" "temp"
    (668380 'move' call_tmp[668377](147287 call _dom _mt[243] arr[147269]))
    unknown call_tmp[668384] "expr temp" "maybe param" "maybe type" "temp"
    (668387 'move' call_tmp[668384](147290 call low _mt[243] call_tmp[668377]))
    unknown call_tmp[668389] "maybe param" "maybe type" "temp"
    (668392 'move' call_tmp[668389](147294 call arr[147269] call_tmp[668384]))
    unknown prev[147295] "dead at end of block" "insert auto destroy"
    (543567 'init var' prev[147295] call_tmp[668389])
    (147298 'end of statement')
    {
      unknown _indexOfInterest[147324] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[147325] "expr temp" "temp"
      (147334 'move' _iterator[147325](147332 call _getIterator arr[147269]))
      Defer
      {
        {
          (147350 call _freeIterator _iterator[147325])
        }
      }
      { scopeless type
        (147339 'move' _indexOfInterest[147324](147336 call iteratorIndex _iterator[147325]))
      }
      ForLoop[147326]
      {
        unknown a[147343] "index var" "insert auto destroy"
        (481464 'end of statement')
        (147345 'move' a[147343] _indexOfInterest[147324])
        (481465 'end of statement' a[147343])
        {
          unknown call_tmp[668394] "expr temp" "maybe param" "maybe type" "temp"
          (668397 'move' call_tmp[668394](147303 call == a[147343] prev[147295]))
          unknown call_tmp[668399] "expr temp" "maybe param" "maybe type" "temp"
          (668402 'move' call_tmp[668399](147315 call _cond_test call_tmp[668394]))
          if call_tmp[668399]
          {
            (147307 call += dupCount[147280] 1)
            (481467 'end of statement' dupCount[147280])
          }
          {
            (147312 call = prev[147295] a[147343])
            (481469 'end of statement' prev[147295] a[147343])
          }
          {
          }
        }
        label _continueLabel[147329]
        _indexOfInterest[147324]
        _iterator[147325]
      }
      label _breakLabel[147330]
    }
    (519996 'move' ret[519991](519995 'deref' dupCount[147280]))
    gotoReturn _end__countDuplicates[519989] _end__countDuplicates[519989]
    (481472 'end of statement' dupCount[147280])
    label _end__countDuplicates[519989]
    (519993 return ret[519991])
  }
  where {
    (147276 call isArray arr[147269])
  }
  function BaseSparseDomImpl[147961](?).bulkAdd_prepareInds[147367](arg _mt[147993]:_MT[238], arg this[147991]:BaseSparseDomImpl[147961](?), arg inds[147365]:_any[178](?), arg dataSorted[147369]:_any[178](?), arg isUnique[147371]:_any[178](?), arg cmp[147373]:_any[178](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[668404] "expr temp" "maybe param" "maybe type" "temp"
    (668407 'move' call_tmp[668404](147380 call ! dataSorted[147369]))
    unknown call_tmp[668409] "expr temp" "maybe param" "maybe type" "temp"
    (668412 'move' call_tmp[668409](147389 call _cond_test call_tmp[668404]))
    if call_tmp[668409]
    {
      (147387 call sort inds[147365](comparator = cmp[147373]))
    }
    unknown call_tmp[668414] "expr temp" "maybe param" "maybe type" "temp"
    (668417 'move' call_tmp[668414](147603 call _cond_test 1))
    if call_tmp[668414]
    {
      unknown tmp[427110] "maybe param" "temp"
      (427121 'move' tmp[427110] dataSorted[147369])
      unknown call_tmp[668419] "expr temp" "maybe param" "maybe type" "temp"
      (668422 'move' call_tmp[668419](427123 call _cond_invalid tmp[427110]))
      if call_tmp[668419]
      {
        (427126 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[568551] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[568552] "maybe param" "temp"
      unknown call_tmp[668424] "expr temp" "maybe param" "maybe type" "temp"
      (668427 'move' call_tmp[668424](427111 call isTrue tmp[427110]))
      (568557 'move' tmp[568552](568555 call _cond_test call_tmp[668424]))
      if tmp[568552]
      {
        unknown tmp[568559] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[668429] "expr temp" "maybe param" "maybe type" "temp"
        (668432 'move' call_tmp[668429](147401 call isSorted inds[147365](comparator = cmp[147373])))
        unknown call_tmp[668434] "expr temp" "maybe param" "maybe type" "temp"
        (668437 'move' call_tmp[668434](147402 call ! call_tmp[668429]))
        (568561 'move' tmp[568559](427114 call isTrue call_tmp[668434]))
        (568566 'move' tmp[568551](568563 '_paramFoldLogical' tmp[568552] tmp[568559]))
      }
      {
        (568571 'move' tmp[568551](568568 '_paramFoldLogical' tmp[568552] 0))
      }
      unknown call_tmp[668439] "expr temp" "maybe param" "maybe type" "temp"
      (668442 'move' call_tmp[668439](147429 call _cond_test tmp[568551]))
      if call_tmp[668439]
      {
        (147427 call halt "bulkAdd: Data not sorted, call the function with \n              dataSorted=false")
      }
      unknown call_tmp[668444] "expr temp" "maybe param" "maybe type" "temp"
      (668447 'move' call_tmp[668444](147559 call _cond_test isUnique[147371]))
      if call_tmp[668444]
      {
        unknown call_tmp[668451] "expr temp" "maybe param" "maybe type" "temp"
        (668454 'move' call_tmp[668451](147437 call _dom _mt[243] inds[147365]))
        unknown call_tmp[668458] "maybe param" "maybe type" "temp"
        (668461 'move' call_tmp[668458](147440 call low _mt[243] call_tmp[668451]))
        const indsStart[147443] "dead at end of block" "const" "insert auto destroy"
        (543569 'init var' indsStart[147443] call_tmp[668458])
        (147446 'end of statement')
        unknown call_tmp[668465] "expr temp" "maybe param" "maybe type" "temp"
        (668468 'move' call_tmp[668465](147449 call _dom _mt[243] inds[147365]))
        unknown call_tmp[668472] "maybe param" "maybe type" "temp"
        (668475 'move' call_tmp[668472](147452 call high _mt[243] call_tmp[668465]))
        const indsEnd[147455] "dead at end of block" "const" "insert auto destroy"
        (543571 'init var' indsEnd[147455] call_tmp[668472])
        (147458 'end of statement')
        unknown call_tmp[668477] "maybe param" "maybe type" "temp"
        (668480 'move' call_tmp[668477](147462 call inds[147365] indsStart[147443]))
        unknown lastInd[147463] "dead at end of block" "insert auto destroy"
        (543573 'init var' lastInd[147463] call_tmp[668477])
        (147466 'end of statement' indsStart[147443])
        {
          unknown _indexOfInterest[147518] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[147519] "expr temp" "temp"
          unknown call_tmp[668482] "expr temp" "maybe param" "maybe type" "temp"
          (668485 'move' call_tmp[668482](147532 call + indsStart[147443] 1))
          unknown call_tmp[668487] "expr temp" "maybe param" "maybe type" "temp"
          (668490 'move' call_tmp[668487](147536 call chpl_direct_range_iter call_tmp[668482] indsEnd[147455] 1))
          (147528 'move' _iterator[147519](147526 call _getIterator call_tmp[668487]))
          Defer
          {
            {
              (147552 call _freeIterator _iterator[147519])
            }
          }
          { scopeless type
            (147541 'move' _indexOfInterest[147518](147538 call iteratorIndex _iterator[147519]))
          }
          ForLoop[147520]
          {
            unknown i[147545] "index var" "insert auto destroy"
            (481479 'end of statement')
            (147547 'move' i[147545] _indexOfInterest[147518])
            (481480 'end of statement' i[147545])
            {
              unknown call_tmp[668492] "expr temp" "maybe param" "maybe type" "temp"
              (668495 'move' call_tmp[668492](147478 call inds[147365] i[147545]))
              unknown call_tmp[668497] "expr temp" "maybe param" "maybe type" "temp"
              (668500 'move' call_tmp[668497](147480 call == call_tmp[668492] lastInd[147463]))
              unknown call_tmp[668502] "expr temp" "maybe param" "maybe type" "temp"
              (668505 'move' call_tmp[668502](147511 call _cond_test call_tmp[668497]))
              if call_tmp[668502]
              {
                (147501 call halt "bulkAdd: There are duplicates, call the function \n                  with isUnique=false")
              }
              {
                unknown call_tmp[668507] "expr temp" "maybe param" "maybe type" "temp"
                (668510 'move' call_tmp[668507](147507 call inds[147365] i[147545]))
                (147508 call = lastInd[147463] call_tmp[668507])
                (481483 'end of statement' lastInd[147463] i[147545])
              }
            }
            label _continueLabel[147523]
            _indexOfInterest[147518]
            _iterator[147519]
          }
          label _breakLabel[147524]
        }
      }
      {
        unknown _indexOfInterest[147570] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[147571] "expr temp" "temp"
        (147580 'move' _iterator[147571](147578 call _getIterator inds[147365]))
        Defer
        {
          {
            (147596 call _freeIterator _iterator[147571])
          }
        }
        { scopeless type
          (147585 'move' _indexOfInterest[147570](147582 call iteratorIndex _iterator[147571]))
        }
        ForLoop[147572]
        {
          unknown i[147589] "index var" "insert auto destroy"
          (481487 'end of statement')
          (147591 'move' i[147589] _indexOfInterest[147570])
          (481488 'end of statement' i[147589])
          (147568 call(385665 call (partial) boundsCheck _mt[243] this[147991]) i[147589])
          (481490 'end of statement' i[147589])
          label _continueLabel[147575]
          _indexOfInterest[147570]
          _iterator[147571]
        }
        label _breakLabel[147576]
      }
    }
    (520000 return _void[55])
    (355131 'used modules list'(147376 'use' Sort[267968]))
  }
  function BaseSparseDomImpl[147961](?).__getActualInsertPts[147613](arg _mt[147997]:_MT[238], arg this[147995]:BaseSparseDomImpl[147961](?), arg d[147611]:_any[178](?), arg inds[147615]:_any[178](?), arg isUnique[147617]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[520004] "RVV" "temp"
    unknown indivInsertPts[147629] "dead at end of block" "insert auto destroy"
    unknown call_tmp[668516] "expr temp" "maybe param" "maybe type" "temp"
    (668519 'move' call_tmp[668516](147620 call _dom _mt[243] inds[147615]))
    unknown call_tmp[668521] "expr temp" "maybe param" "maybe type" "temp"
    (668524 'move' call_tmp[668521](147625 call chpl__ensureDomainExpr call_tmp[668516]))
    unknown call_tmp[668526] "expr temp" "maybe param" "maybe type" "temp"
    (668529 'move' call_tmp[668526](147627 call chpl__buildArrayRuntimeType call_tmp[668521] int(64)[13]))
    (543575 'default init var' indivInsertPts[147629] call_tmp[668526])
    (147632 'end of statement')
    unknown actualInsertPts[147644] "dead at end of block" "insert auto destroy"
    unknown call_tmp[668533] "expr temp" "maybe param" "maybe type" "temp"
    (668536 'move' call_tmp[668533](147635 call _dom _mt[243] inds[147615]))
    unknown call_tmp[668538] "expr temp" "maybe param" "maybe type" "temp"
    (668541 'move' call_tmp[668538](147640 call chpl__ensureDomainExpr call_tmp[668533]))
    unknown call_tmp[668543] "expr temp" "maybe param" "maybe type" "temp"
    (668546 'move' call_tmp[668543](147642 call chpl__buildArrayRuntimeType call_tmp[668538] int(64)[13]))
    (543577 'default init var' actualInsertPts[147644] call_tmp[668543])
    (147647 'end of statement')
    unknown call_tmp[668548] "expr temp" "maybe param" "maybe type" "temp"
    (668551 'move' call_tmp[668548](147649 call ! isUnique[147617]))
    unknown call_tmp[668553] "expr temp" "maybe param" "maybe type" "temp"
    (668556 'move' call_tmp[668553](147753 call _cond_test call_tmp[668548]))
    if call_tmp[668553]
    {
      unknown call_tmp[668560] "expr temp" "maybe param" "maybe type" "temp"
      (668563 'move' call_tmp[668560](147653 call _dom _mt[243] inds[147615]))
      unknown call_tmp[668567] "expr temp" "maybe param" "maybe type" "temp"
      (668570 'move' call_tmp[668567](147656 call low _mt[243] call_tmp[668560]))
      unknown call_tmp[668572] "expr temp" "maybe param" "maybe type" "temp"
      (668575 'move' call_tmp[668572](147660 call inds[147615] call_tmp[668567]))
      unknown call_tmp[668577] "maybe param" "maybe type" "temp"
      (668580 'move' call_tmp[668577](147662 call + call_tmp[668572] 1))
      unknown lastInd[147664] "dead at end of block" "insert auto destroy"
      (543579 'init var' lastInd[147664] call_tmp[668577])
      (147667 'end of statement')
      {
        unknown _indexOfInterest[147701] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[147702] "expr temp" "temp"
        unknown call_tmp[668582] "expr temp" "maybe param" "maybe type" "temp"
        (668585 'move' call_tmp[668582](147711 call _getIterator inds[147615]))
        unknown call_tmp[668587] "expr temp" "maybe param" "maybe type" "temp"
        (668590 'move' call_tmp[668587](147714 call _getIterator indivInsertPts[147629]))
        (147716 'move' _iterator[147702](147677 call _build_tuple call_tmp[668582] call_tmp[668587]))
        Defer
        {
          {
            (147746 call _freeIterator _iterator[147702])
          }
        }
        { scopeless type
          (147721 'move' _indexOfInterest[147701](147718 call iteratorIndex _iterator[147702]))
        }
        ForLoop[147703]
        {
          (147726 call _check_tuple_var_decl _indexOfInterest[147701] 2)
          (481493 'end of statement')
          unknown i[147732] "index var" "insert auto destroy"
          (481494 'end of statement')
          (147734 'move' i[147732](147730 call _indexOfInterest[147701] 0))
          (481495 'end of statement' i[147732])
          unknown p[147739] "index var" "insert auto destroy"
          (481497 'end of statement')
          (147741 'move' p[147739](147737 call _indexOfInterest[147701] 1))
          (481498 'end of statement' p[147739])
          {
            unknown call_tmp[668592] "expr temp" "maybe param" "maybe type" "temp"
            (668595 'move' call_tmp[668592](147680 call == i[147732] lastInd[147664]))
            unknown call_tmp[668597] "expr temp" "maybe param" "maybe type" "temp"
            (668600 'move' call_tmp[668597](147694 call _cond_test call_tmp[668592]))
            if call_tmp[668597]
            {
              unknown call_tmp[668602] "expr temp" "maybe param" "maybe type" "temp"
              (668605 'move' call_tmp[668602](147684 call - 1))
              (147686 call = p[147739] call_tmp[668602])
              (481500 'end of statement' p[147739])
            }
            {
              (147691 call = lastInd[147664] i[147732])
              (481502 'end of statement' lastInd[147664] i[147732])
            }
          }
          label _continueLabel[147706]
          _indexOfInterest[147701]
          _iterator[147702]
        }
        label _breakLabel[147707]
      }
    }
    Forall {
      induction variables:
        
        unknown i[147821] "index var" "insert auto destroy"
        
        unknown p[147823] "index var" "insert auto destroy"
      iterated expressions:
        inds[147615]
        indivInsertPts[147629]
      shadow variables:
      other variables
        forall body
      {
        unknown tmp[427131] "maybe param" "temp"
        (427142 'move' tmp[427131] isUnique[147617])
        unknown call_tmp[668607] "expr temp" "maybe param" "maybe type" "temp"
        (668610 'move' call_tmp[668607](427144 call _cond_invalid tmp[427131]))
        if call_tmp[668607]
        {
          (427147 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[568578] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[568579] "maybe param" "temp"
        unknown call_tmp[668612] "expr temp" "maybe param" "maybe type" "temp"
        (668615 'move' call_tmp[668612](427132 call isTrue tmp[427131]))
        (568584 'move' tmp[568579](568582 call _cond_test call_tmp[668612]))
        if tmp[568579]
        {
          (568589 'move' tmp[568578](568586 '_paramFoldLogical' tmp[568579] 1))
        }
        {
          unknown tmp[568591] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[668617] "expr temp" "maybe param" "maybe type" "temp"
          (668620 'move' call_tmp[668617](147769 call - 1))
          unknown call_tmp[668622] "expr temp" "maybe param" "maybe type" "temp"
          (668625 'move' call_tmp[668622](147771 call != p[147823] call_tmp[668617]))
          (568593 'move' tmp[568591](427136 call isTrue call_tmp[668622]))
          (568598 'move' tmp[568578](568595 '_paramFoldLogical' tmp[568579] tmp[568591]))
        }
        unknown call_tmp[668627] "expr temp" "maybe param" "maybe type" "temp"
        (668630 'move' call_tmp[668627](147815 call _cond_test tmp[568578]))
        if call_tmp[668627]
        {
          unknown call_tmp[668634] "maybe param" "maybe type" "temp"
          (668637 'move' call_tmp[668634](147788 call(147783 call (partial) find _mt[243] d[147611]) i[147821]))
          const tmp[147789] "dead at end of block" "const" "insert auto destroy" "temp"
          (543581 'init var' tmp[147789] call_tmp[668634])
          (147796 call _check_tuple_var_decl tmp[147789] 2)
          (481506 'end of statement')
          unknown call_tmp[668639] "maybe param" "maybe type" "temp"
          (668642 'move' call_tmp[668639](147790 call tmp[147789] 0))
          const found[147775] "dead at end of block" "const" "insert auto destroy"
          (543583 'init var' found[147775] call_tmp[668639])
          unknown call_tmp[668644] "maybe param" "maybe type" "temp"
          (668647 'move' call_tmp[668644](147793 call tmp[147789] 1))
          const insertPt[147777] "dead at end of block" "const" "insert auto destroy"
          (543585 'init var' insertPt[147777] call_tmp[668644])
          (147801 'end of statement')
          unknown tmp[568605] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[568606] "maybe param" "temp"
          (568611 'move' tmp[568606](568609 call _cond_test found[147775]))
          if tmp[568606]
          {
            unknown tmp[568613] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            (568615 'move' tmp[568613](147806 call - 1))
            (568620 'move' tmp[568605](568617 '_paramFoldLogical' tmp[568606] tmp[568613]))
          }
          {
            (568625 'move' tmp[568605](568622 '_paramFoldLogical' tmp[568606] insertPt[147777]))
          }
          (147812 call = p[147823] tmp[568605])
          (481507 'end of statement' p[147823] found[147775] insertPt[147777])
        }
      }
    }
    unknown actualAddCnt[147827] "dead at end of block" "insert auto destroy"
    (543587 'init var' actualAddCnt[147827] 0)
    (147830 'end of statement')
    {
      unknown _indexOfInterest[147871] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[147872] "expr temp" "temp"
      unknown call_tmp[668649] "expr temp" "maybe param" "maybe type" "temp"
      (668652 'move' call_tmp[668649](147881 call _getIterator indivInsertPts[147629]))
      unknown call_tmp[668654] "expr temp" "maybe param" "maybe type" "temp"
      (668657 'move' call_tmp[668654](147884 call _getIterator actualInsertPts[147644]))
      (147886 'move' _iterator[147872](147839 call _build_tuple call_tmp[668649] call_tmp[668654]))
      Defer
      {
        {
          (147916 call _freeIterator _iterator[147872])
        }
      }
      { scopeless type
        (147891 'move' _indexOfInterest[147871](147888 call iteratorIndex _iterator[147872]))
      }
      ForLoop[147873]
      {
        (147896 call _check_tuple_var_decl _indexOfInterest[147871] 2)
        (481512 'end of statement')
        unknown ip[147902] "index var" "insert auto destroy"
        (481513 'end of statement')
        (147904 'move' ip[147902](147900 call _indexOfInterest[147871] 0))
        (481514 'end of statement' ip[147902])
        unknown ap[147909] "index var" "insert auto destroy"
        (481516 'end of statement')
        (147911 'move' ap[147909](147907 call _indexOfInterest[147871] 1))
        (481517 'end of statement' ap[147909])
        {
          unknown call_tmp[668659] "expr temp" "maybe param" "maybe type" "temp"
          (668662 'move' call_tmp[668659](147842 call - 1))
          unknown call_tmp[668664] "expr temp" "maybe param" "maybe type" "temp"
          (668667 'move' call_tmp[668664](147844 call != ip[147902] call_tmp[668659]))
          unknown call_tmp[668669] "expr temp" "maybe param" "maybe type" "temp"
          (668672 'move' call_tmp[668669](147865 call _cond_test call_tmp[668664]))
          if call_tmp[668669]
          {
            unknown call_tmp[668674] "expr temp" "maybe param" "maybe type" "temp"
            (668677 'move' call_tmp[668674](147849 call + ip[147902] actualAddCnt[147827]))
            (147851 call = ap[147909] call_tmp[668674])
            (481519 'end of statement' ap[147909] ip[147902] actualAddCnt[147827])
            (147857 call += actualAddCnt[147827] 1)
            (481523 'end of statement' actualAddCnt[147827])
          }
          {
            (147862 call = ap[147909] ip[147902])
            (481525 'end of statement' ap[147909] ip[147902])
          }
        }
        label _continueLabel[147876]
        _indexOfInterest[147871]
        _iterator[147872]
      }
      label _breakLabel[147877]
    }
    unknown call_tmp[668679] "expr temp" "maybe param" "maybe type" "temp"
    (668682 'move' call_tmp[668679](147926 call _build_tuple actualInsertPts[147644] actualAddCnt[147827]))
    (520009 'move' ret[520004](520008 'deref' call_tmp[668679]))
    gotoReturn _end___getActualInsertPts[520002] _end___getActualInsertPts[520002]
    (481528 'end of statement' actualInsertPts[147644] actualAddCnt[147827])
    label _end___getActualInsertPts[520002]
    (520006 return ret[520004])
  }
  function BaseSparseDomImpl[147961](?).dsiClear[147934](arg _mt[148001]:_MT[238], arg this[147999]:BaseSparseDomImpl[147961](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (147955 call halt "not implemented")
    (520013 return _void[55])
  }
  function BaseSparseDomImpl[147961](?).super[802107](arg _mt[802109]:_MT[238], arg this[802111]:BaseSparseDomImpl[147961](?)) : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[802121] "RVV" "temp"
    unknown call_tmp[802128] "expr temp" "maybe param" "maybe type" "temp"
    (802131 'move' call_tmp[802128](802115 '.v' this[802111] c"super"))
    (802126 'move' ret[802121](802125 'deref' call_tmp[802128]))
    (802123 return ret[802121])
  }
  function BaseSparseDomImpl[147961](?).nnzDom[802133](arg _mt[802135]:_MT[238], arg this[802137]:BaseSparseDomImpl[147961](?)) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[802147] "RVV" "temp"
    unknown call_tmp[802154] "expr temp" "maybe param" "maybe type" "temp"
    (802157 'move' call_tmp[802154](802141 '.' this[802137] c"nnzDom"))
    (802152 'move' ret[802147](802151 'addr of' call_tmp[802154]))
    (802149 return ret[802147])
  }
  function BaseSparseDomImpl[147961](?).init[802159](arg _mt[802161]:_MT[238], arg this[802162]:BaseSparseDomImpl[147961](?), param arg rank[802285]:int(64)[13], arg idxType[802288]:_any[178](?), in arg parentDom[802291]:_any[178](?), in arg nnzDom[802294] :
  unknown call_tmp[802358] "expr temp" "maybe param" "maybe type" "temp" =
  unknown call_tmp[802363] "expr temp" "maybe param" "maybe type" "temp") : void[4] "compiler generated" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown super_tmp[802319] "temporary of super field" "temp"
    (802321 'move' super_tmp[802319](802318 '.v' this[802162] c"super"))
    (802172 call(802170 call (partial) init _mt[243] super_tmp[802319]) rank[802285] idxType[802288] parentDom[802291])
    (802345 'end of statement')
    unknown tmp[802324] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[802348] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[802370] "expr temp" "maybe param" "maybe type" "temp"
      (802373 'move' call_tmp[802370](802326 '.v' this[802162] c"super"))
      (802352 'move' call_type_tmp[802348](802329 'typeof' call_tmp[802370]))
    }
    (802330 'move' tmp[802324] call_type_tmp[802348])
    unknown call_tmp[802375] "maybe param" "maybe type" "temp"
    (802378 'move' call_tmp[802375](802335 'cast' tmp[802324] this[802162]))
    unknown chpl__thisAsParent[802332] "dead at end of block" "insert auto destroy" "temp"
    (802356 'init var' chpl__thisAsParent[802332] call_tmp[802375] tmp[802324])
    (802338 'setcid' chpl__thisAsParent[802332])
    (802340 '.=' this[802162] c"nnzDom" nnzDom[802294])
    (802346 'end of statement')
    (802343 'setcid' this[802162])
    (802354 return _void[55])
  }
  function BaseSparseDomImpl[147961](?).writeThis[802380](arg _mt[802384]:_MT[238], arg this[802382]:BaseSparseDomImpl[147961](?), arg f[802383]:_any[178](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (802389 call writeThisDefaultImpl f[802383] this[802382])
    (802394 return _void[55])
  }
  function BaseSparseDomImpl[147961](?).readThis[802396](arg _mt[802400]:_MT[238], arg this[802398]:BaseSparseDomImpl[147961](?), arg f[802399]:_any[178](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (802404 call readThisDefaultImpl f[802399] this[802398])
    (802410 return _void[55])
  }
  type BaseSparseDomImpl[147961](?) val super[355674]:BaseSparseDom[148665](?) "delay instantiation" "super class" unknown nnzDom[146922](146920 call chpl__buildDomainExpr(146917 call chpl_build_bounded_range 1 0))
  function SparseIndexBuffer[148188](?).init[148059](arg _mt[148192]:_MT[238], ref arg this[148190]:SparseIndexBuffer[148188](?), arg size[148057]:_any[178](?), param arg rank[148062]:int(64)[13], arg obj[148065]:_any[178](?)) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[668684] "expr temp" "maybe param" "maybe type" "temp"
    (668687 'move' call_tmp[668684](461725 call _cast int(64)[13] rank[148062]))
    (461727 'init field' this[148190] c"rank" call_tmp[668684])
    (481532 'end of statement')
    unknown tmp[461730] "temp"
    (461733 'init var' tmp[461730] obj[148065] BaseSparseDom[382253](?))
    (461735 'init field' this[148190] c"obj" tmp[461730])
    (481533 'end of statement')
    unknown tmp[461751] "temp" "type variable"
    unknown tmp[568632] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[568633] "maybe param" "temp"
    unknown call_tmp[668689] "expr temp" "maybe param" "maybe type" "temp"
    (668692 'move' call_tmp[668689](461759 '.v' this[148190] c"rank"))
    unknown call_tmp[668694] "expr temp" "maybe param" "maybe type" "temp"
    (668697 'move' call_tmp[668694](461740 call == call_tmp[668689] 1))
    (568638 'move' tmp[568633](568636 call _cond_test call_tmp[668694]))
    if tmp[568633]
    {
      (568643 'move' tmp[568632](568640 '_paramFoldLogical' tmp[568633] int(64)[13]))
    }
    {
      unknown tmp[568645] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[668699] "expr temp" "maybe param" "maybe type" "temp"
      (668702 'move' call_tmp[668699](461762 '.v' this[148190] c"rank"))
      (568647 'move' tmp[568645](461747 call * call_tmp[668699] int(64)[13]))
      (568652 'move' tmp[568632](568649 '_paramFoldLogical' tmp[568633] tmp[568645]))
    }
    (461753 'move' tmp[461751] tmp[568632])
    (461755 'init field' this[148190] c"idxType" tmp[461751])
    (481534 'end of statement')
    unknown call_tmp[668704] "expr temp" "maybe param" "maybe type" "temp"
    (668707 'move' call_tmp[668704](148086 call chpl_build_low_bounded_range 0))
    unknown call_tmp[668709] "expr temp" "maybe param" "maybe type" "temp"
    (668712 'move' call_tmp[668709](148089 call # call_tmp[668704] size[148057]))
    unknown call_tmp[668714] "maybe param" "maybe type" "temp"
    (668717 'move' call_tmp[668714](148092 call chpl__buildDomainExpr call_tmp[668709]))
    unknown tmp[461765] "temp"
    (461767 'init var' tmp[461765] call_tmp[668714])
    (461769 '.=' this[148190] c"bufDom" tmp[461765])
    (481535 'end of statement')
    unknown tmp[461774] "temp"
    unknown call_tmp[668719] "expr temp" "maybe param" "maybe type" "temp"
    (668722 'move' call_tmp[668719](461788 '.' this[148190] c"bufDom"))
    unknown call_tmp[668724] "expr temp" "maybe param" "maybe type" "temp"
    (668727 'move' call_tmp[668724](461779 call chpl__ensureDomainExpr call_tmp[668719]))
    unknown call_tmp[668729] "expr temp" "maybe param" "maybe type" "temp"
    (668732 'move' call_tmp[668729](461791 '.v' this[148190] c"idxType"))
    unknown call_tmp[668734] "expr temp" "maybe param" "maybe type" "temp"
    (668737 'move' call_tmp[668734](461777 call chpl__buildArrayRuntimeType call_tmp[668724] call_tmp[668729]))
    (461782 'default init var' tmp[461774] call_tmp[668734])
    (461784 '.=' this[148190] c"buf" tmp[461774])
    (481536 'end of statement')
    unknown tmp[461795] "temp"
    (461797 'init var' tmp[461795] 0)
    (461799 '.=' this[148190] c"cur" tmp[461795])
    (481537 'end of statement')
    (520015 return _void[55])
  }
  function SparseIndexBuffer[148188](?).deinit[148101](arg _mt[148196]:_MT[238], arg this[148194]:SparseIndexBuffer[148188](?)) : _unknown[51] "destructor" "method" "primary method" "no return value for void"
  {
    (148105 call(385716 call (partial) commit _mt[243] this[148194]))
    (520017 return _void[55])
  }
  function SparseIndexBuffer[148188](?).add[148116](arg _mt[148200]:_MT[238], arg this[148198]:SparseIndexBuffer[148188](?), arg idx[148113] :
  (385721 call idxType _mt[243] this[148198])) : _unknown[51] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[668747] "expr temp" "maybe param" "maybe type" "temp"
    (668750 'move' call_tmp[668747](385733 call cur _mt[243] this[148198]))
    unknown call_tmp[668752] "expr temp" "maybe param" "maybe type" "temp"
    (668755 'move' call_tmp[668752](148121 call(385726 call (partial) buf _mt[243] this[148198]) call_tmp[668747]))
    (148123 call = call_tmp[668752] idx[148113])
    (481539 'end of statement')
    unknown call_tmp[668759] "expr temp" "maybe param" "maybe type" "temp"
    (668762 'move' call_tmp[668759](385739 call cur _mt[243] this[148198]))
    (148129 call += call_tmp[668759] 1)
    (481540 'end of statement')
    unknown call_tmp[668766] "expr temp" "maybe param" "maybe type" "temp"
    (668769 'move' call_tmp[668766](385744 call cur _mt[243] this[148198]))
    unknown call_tmp[668773] "expr temp" "maybe param" "maybe type" "temp"
    (668776 'move' call_tmp[668773](360608 call buf _mt[243] this[148198]))
    unknown call_tmp[668780] "expr temp" "maybe param" "maybe type" "temp"
    (668783 'move' call_tmp[668780](148134 call size _mt[243] call_tmp[668773]))
    unknown call_tmp[668785] "expr temp" "maybe param" "maybe type" "temp"
    (668788 'move' call_tmp[668785](148137 call == call_tmp[668766] call_tmp[668780]))
    unknown call_tmp[668790] "expr temp" "maybe param" "maybe type" "temp"
    (668793 'move' call_tmp[668790](148143 call _cond_test call_tmp[668785]))
    if call_tmp[668790]
    {
      (148141 call(385748 call (partial) commit _mt[243] this[148198]))
    }
    (520019 return _void[55])
  }
  function SparseIndexBuffer[148188](?).commit[148152](arg _mt[148204]:_MT[238], arg this[148202]:SparseIndexBuffer[148188](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[668799] "expr temp" "maybe param" "maybe type" "temp"
    (668802 'move' call_tmp[668799](385753 call cur _mt[243] this[148202]))
    unknown call_tmp[668804] "expr temp" "maybe param" "maybe type" "temp"
    (668807 'move' call_tmp[668804](148156 call >= call_tmp[668799] 1))
    unknown call_tmp[668809] "expr temp" "maybe param" "maybe type" "temp"
    (668812 'move' call_tmp[668809](148174 call _cond_test call_tmp[668804]))
    if call_tmp[668809]
    {
      unknown call_tmp[668816] "expr temp" "maybe param" "maybe type" "temp"
      (668819 'move' call_tmp[668816](360613 call obj _mt[243] this[148202]))
      unknown call_tmp[668827] "expr temp" "maybe param" "maybe type" "temp"
      (668830 'move' call_tmp[668827](385763 call cur _mt[243] this[148202]))
      unknown call_tmp[668832] "expr temp" "maybe param" "maybe type" "temp"
      (668835 'move' call_tmp[668832](148165 call - call_tmp[668827] 1))
      unknown call_tmp[668837] "expr temp" "maybe param" "maybe type" "temp"
      (668840 'move' call_tmp[668837](148167 call chpl_build_high_bounded_range call_tmp[668832]))
      unknown call_tmp[668842] "expr temp" "maybe param" "maybe type" "temp"
      (668845 'move' call_tmp[668842](148170 call(385758 call (partial) buf _mt[243] this[148202]) call_tmp[668837]))
      (148172 call(148159 call (partial) dsiBulkAdd _mt[243] call_tmp[668816]) call_tmp[668842])
    }
    unknown call_tmp[668849] "expr temp" "maybe param" "maybe type" "temp"
    (668852 'move' call_tmp[668849](385768 call cur _mt[243] this[148202]))
    (148182 call = call_tmp[668849] 0)
    (520021 return _void[55])
  }
  function SparseIndexBuffer[148188](?).rank[802412](arg _mt[802414]:_MT[238], arg this[802416]:SparseIndexBuffer[148188](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[802435] "RVV" "param" "temp"
    unknown call_tmp[802449] "expr temp" "maybe param" "maybe type" "temp"
    (802452 'move' call_tmp[802449](802421 'is bound' this[802416] c"rank"))
    if call_tmp[802449]
    {
      unknown call_tmp[802454] "expr temp" "maybe param" "maybe type" "temp"
      (802457 'move' call_tmp[802454](802420 '.' this[802416] c"rank"))
      (802440 'move' ret[802435](802439 'deref' call_tmp[802454]))
      gotoReturn _end_rank[802433] _end_rank[802433]
    }
    {
      (802445 'move' ret[802435](802444 'deref' ?[260]))
      gotoReturn _end_rank[802433] _end_rank[802433]
    }
    label _end_rank[802433]
    (802437 return ret[802435])
  }
  function SparseIndexBuffer[148188](?).rank[802459](arg _mt[802461]:_MT[238], arg this[802463]:SparseIndexBuffer[148188](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[802482] "RVV" "param" "temp"
    unknown call_tmp[802496] "expr temp" "maybe param" "maybe type" "temp"
    (802499 'move' call_tmp[802496](802468 'is bound' this[802463] c"rank"))
    if call_tmp[802496]
    {
      unknown call_tmp[802501] "expr temp" "maybe param" "maybe type" "temp"
      (802504 'move' call_tmp[802501](802467 '.' this[802463] c"rank"))
      (802487 'move' ret[802482](802486 'deref' call_tmp[802501]))
      gotoReturn _end_rank[802480] _end_rank[802480]
    }
    {
      (802492 'move' ret[802482](802491 'deref' ?[260]))
      gotoReturn _end_rank[802480] _end_rank[802480]
    }
    label _end_rank[802480]
    (802484 return ret[802482])
  }
  function SparseIndexBuffer[148188](?).obj[802506](arg _mt[802508]:_MT[238], ref arg this[802510]:SparseIndexBuffer[148188](?)) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[802520] "RVV" "temp"
    unknown call_tmp[802527] "expr temp" "maybe param" "maybe type" "temp"
    (802530 'move' call_tmp[802527](802514 '.' this[802510] c"obj"))
    (802525 'move' ret[802520](802524 'addr of' call_tmp[802527]))
    (802522 return ret[802520])
  }
  function SparseIndexBuffer[148188](?).idxType[802532](arg _mt[802534]:_MT[238], arg this[802536]:SparseIndexBuffer[148188](?)) type : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[802555] "RVV" "temp" "type variable"
    unknown call_tmp[802569] "expr temp" "maybe param" "maybe type" "temp"
    (802572 'move' call_tmp[802569](802541 'is bound' this[802536] c"idxType"))
    if call_tmp[802569]
    {
      unknown call_tmp[802574] "expr temp" "maybe param" "maybe type" "temp"
      (802577 'move' call_tmp[802574](802540 '.v' this[802536] c"idxType"))
      (802560 'move' ret[802555](802559 'deref' call_tmp[802574]))
      gotoReturn _end_idxType[802553] _end_idxType[802553]
    }
    {
      (802565 'move' ret[802555](802564 'deref' _uninstantiated[258]))
      gotoReturn _end_idxType[802553] _end_idxType[802553]
    }
    label _end_idxType[802553]
    (802557 return ret[802555])
  }
  function SparseIndexBuffer[148188](?).idxType[802579](arg _mt[802581]:_MT[238], arg this[802583]:SparseIndexBuffer[148188](?)) type : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[802602] "RVV" "temp" "type variable"
    unknown call_tmp[802616] "expr temp" "maybe param" "maybe type" "temp"
    (802619 'move' call_tmp[802616](802588 'is bound' this[802583] c"idxType"))
    if call_tmp[802616]
    {
      unknown call_tmp[802621] "expr temp" "maybe param" "maybe type" "temp"
      (802624 'move' call_tmp[802621](802587 '.v' this[802583] c"idxType"))
      (802607 'move' ret[802602](802606 'deref' call_tmp[802621]))
      gotoReturn _end_idxType[802600] _end_idxType[802600]
    }
    {
      (802612 'move' ret[802602](802611 'deref' _uninstantiated[258]))
      gotoReturn _end_idxType[802600] _end_idxType[802600]
    }
    label _end_idxType[802600]
    (802604 return ret[802602])
  }
  function SparseIndexBuffer[148188](?).bufDom[802626](arg _mt[802628]:_MT[238], ref arg this[802630]:SparseIndexBuffer[148188](?)) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[802640] "RVV" "temp"
    unknown call_tmp[802647] "expr temp" "maybe param" "maybe type" "temp"
    (802650 'move' call_tmp[802647](802634 '.' this[802630] c"bufDom"))
    (802645 'move' ret[802640](802644 'addr of' call_tmp[802647]))
    (802642 return ret[802640])
  }
  function SparseIndexBuffer[148188](?).buf[802652](arg _mt[802654]:_MT[238], ref arg this[802656]:SparseIndexBuffer[148188](?)) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[802666] "RVV" "temp"
    unknown call_tmp[802673] "expr temp" "maybe param" "maybe type" "temp"
    (802676 'move' call_tmp[802673](802660 '.' this[802656] c"buf"))
    (802671 'move' ret[802666](802670 'addr of' call_tmp[802673]))
    (802668 return ret[802666])
  }
  function SparseIndexBuffer[148188](?).cur[802678](arg _mt[802680]:_MT[238], ref arg this[802682]:SparseIndexBuffer[148188](?)) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[802692] "RVV" "temp"
    unknown call_tmp[802699] "expr temp" "maybe param" "maybe type" "temp"
    (802702 'move' call_tmp[802699](802686 '.' this[802682] c"cur"))
    (802697 'move' ret[802692](802696 'addr of' call_tmp[802699]))
    (802694 return ret[802692])
  }
  function SparseIndexBuffer[148188](?).init=[802704](arg _mt[802707]:_MT[238], ref arg this[802708]:SparseIndexBuffer[148188](?), arg other[802711] :
  (802710 'typeof' this[802708])) : void[4] "compiler generated" "copy initializer" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown call_tmp[802845] "expr temp" "maybe param" "maybe type" "temp"
    (802848 'move' call_tmp[802845](802720 call rank _mt[243] other[802711]))
    unknown call_tmp[802850] "expr temp" "maybe param" "maybe type" "temp"
    (802853 'move' call_tmp[802850](802777 call _cast int(64)[13] call_tmp[802845]))
    (802779 'init field' this[802708] c"rank" call_tmp[802850])
    (802835 'end of statement')
    unknown call_tmp[802857] "maybe param" "maybe type" "temp"
    (802860 'move' call_tmp[802857](802730 call obj _mt[243] other[802711]))
    unknown tmp[802782] "temp"
    (802785 'init var' tmp[802782] call_tmp[802857] BaseSparseDom[382253](?))
    (802787 'init field' this[802708] c"obj" tmp[802782])
    (802836 'end of statement')
    unknown tmp[802791] "temp" "type variable"
    (802793 'move' tmp[802791](802740 call idxType _mt[243] other[802711]))
    (802795 'init field' this[802708] c"idxType" tmp[802791])
    (802837 'end of statement')
    unknown call_tmp[802866] "maybe param" "maybe type" "temp"
    (802869 'move' call_tmp[802866](802750 call bufDom _mt[243] other[802711]))
    unknown tmp[802799] "temp"
    (802801 'init var' tmp[802799] call_tmp[802866])
    (802803 '.=' this[802708] c"bufDom" tmp[802799])
    (802838 'end of statement')
    unknown call_tmp[802873] "maybe param" "maybe type" "temp"
    (802876 'move' call_tmp[802873](802760 call buf _mt[243] other[802711]))
    unknown call_tmp[802878] "expr temp" "maybe param" "maybe type" "temp"
    (802881 'move' call_tmp[802878](802821 '.' this[802708] c"bufDom"))
    unknown call_tmp[802883] "expr temp" "maybe param" "maybe type" "temp"
    (802886 'move' call_tmp[802883](802812 call chpl__ensureDomainExpr call_tmp[802878]))
    unknown call_tmp[802888] "expr temp" "maybe param" "maybe type" "temp"
    (802891 'move' call_tmp[802888](802824 '.v' this[802708] c"idxType"))
    unknown call_tmp[802893] "maybe param" "maybe type" "temp"
    (802896 'move' call_tmp[802893](802810 call chpl__buildArrayRuntimeType call_tmp[802883] call_tmp[802888]))
    unknown tmp[802807] "temp"
    (802815 'init var' tmp[802807] call_tmp[802873] call_tmp[802893])
    (802817 'init field' this[802708] c"buf" tmp[802807])
    (802839 'end of statement')
    unknown call_tmp[802900] "maybe param" "maybe type" "temp"
    (802903 'move' call_tmp[802900](802770 call cur _mt[243] other[802711]))
    unknown tmp[802827] "temp"
    (802829 'init var' tmp[802827] call_tmp[802900])
    (802831 '.=' this[802708] c"cur" tmp[802827])
    (802840 'end of statement')
    (802841 return _void[55])
  }
  function SparseIndexBuffer[148188](?).writeThis[802905](arg _mt[802909]:_MT[238], arg this[802907]:SparseIndexBuffer[148188](?), arg f[802908]:_any[178](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (802914 call writeThisDefaultImpl f[802908] this[802907])
    (802919 return _void[55])
  }
  function SparseIndexBuffer[148188](?).readThis[802921](arg _mt[802925]:_MT[238], arg this[802923]:SparseIndexBuffer[148188](?), arg f[802924]:_any[178](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (802929 call readThisDefaultImpl f[802924] this[802923])
    (802935 return _void[55])
  }
  function chpl_fields_are_comparable[802949](arg _arg1[802951]:SparseIndexBuffer[148188](?), arg _arg2[802952]:SparseIndexBuffer[148188](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[803011]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[803018] "expr temp" "maybe param" "maybe type" "temp"
    (803021 'move' call_tmp[803018](802955 call rank _mt[243] _arg1[802951]))
    unknown call_tmp[803023] "expr temp" "maybe param" "maybe type" "temp"
    (803026 'move' call_tmp[803023](802959 call rank _mt[243] _arg2[802952]))
    unknown call_tmp[803028] "expr temp" "maybe param" "maybe type" "temp"
    (803031 'move' call_tmp[803028](802963 'call resolves' c"==" call_tmp[803018] call_tmp[803023]))
    unknown call_tmp[803033] "expr temp" "maybe param" "maybe type" "temp"
    (803036 'move' call_tmp[803033](802965 call obj _mt[243] _arg1[802951]))
    unknown call_tmp[803038] "expr temp" "maybe param" "maybe type" "temp"
    (803041 'move' call_tmp[803038](802969 call obj _mt[243] _arg2[802952]))
    unknown call_tmp[803043] "expr temp" "maybe param" "maybe type" "temp"
    (803046 'move' call_tmp[803043](802973 'call resolves' c"==" call_tmp[803033] call_tmp[803038]))
    unknown call_tmp[803048] "expr temp" "maybe param" "maybe type" "temp"
    (803051 'move' call_tmp[803048](802975 call bufDom _mt[243] _arg1[802951]))
    unknown call_tmp[803053] "expr temp" "maybe param" "maybe type" "temp"
    (803056 'move' call_tmp[803053](802979 call bufDom _mt[243] _arg2[802952]))
    unknown call_tmp[803058] "expr temp" "maybe param" "maybe type" "temp"
    (803061 'move' call_tmp[803058](802983 'call resolves' c"==" call_tmp[803048] call_tmp[803053]))
    unknown call_tmp[803063] "expr temp" "maybe param" "maybe type" "temp"
    (803066 'move' call_tmp[803063](802985 call buf _mt[243] _arg1[802951]))
    unknown call_tmp[803068] "expr temp" "maybe param" "maybe type" "temp"
    (803071 'move' call_tmp[803068](802989 call buf _mt[243] _arg2[802952]))
    unknown call_tmp[803073] "expr temp" "maybe param" "maybe type" "temp"
    (803076 'move' call_tmp[803073](802993 'call resolves' c"==" call_tmp[803063] call_tmp[803068]))
    unknown call_tmp[803078] "expr temp" "maybe param" "maybe type" "temp"
    (803081 'move' call_tmp[803078](802995 call cur _mt[243] _arg1[802951]))
    unknown call_tmp[803083] "expr temp" "maybe param" "maybe type" "temp"
    (803086 'move' call_tmp[803083](802999 call cur _mt[243] _arg2[802952]))
    unknown call_tmp[803088] "expr temp" "maybe param" "maybe type" "temp"
    (803091 'move' call_tmp[803088](803003 'call resolves' c"==" call_tmp[803078] call_tmp[803083]))
    unknown call_tmp[803093] "expr temp" "maybe param" "maybe type" "temp"
    (803096 'move' call_tmp[803093](803005 '&' call_tmp[803028] call_tmp[803043] call_tmp[803058] call_tmp[803073] call_tmp[803088]))
    (803016 'move' ret[803011](803015 'deref' call_tmp[803093]))
    (803013 return ret[803011])
  }
  function ==[802937](arg _arg1[802939]:SparseIndexBuffer[148188](?), arg _arg2[802940]:SparseIndexBuffer[148188](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[803185]:bool[10] "RVV" "temp"
    unknown call_tmp[803217] "expr temp" "maybe param" "maybe type" "temp"
    (803220 'move' call_tmp[803217](803104 call rank _mt[243] _arg1[802939]))
    unknown call_tmp[803222] "expr temp" "maybe param" "maybe type" "temp"
    (803225 'move' call_tmp[803222](803108 call rank _mt[243] _arg2[802940]))
    unknown call_tmp[803227] "expr temp" "maybe param" "maybe type" "temp"
    (803230 'move' call_tmp[803227](803112 call != call_tmp[803217] call_tmp[803222]))
    if call_tmp[803227]
    {
      (803190 'move' ret[803185](803189 'deref' 0))
      gotoReturn _end_==[803183] _end_==[803183]
    }
    unknown call_tmp[803232] "expr temp" "maybe param" "maybe type" "temp"
    (803235 'move' call_tmp[803232](803118 call obj _mt[243] _arg1[802939]))
    unknown call_tmp[803237] "expr temp" "maybe param" "maybe type" "temp"
    (803240 'move' call_tmp[803237](803122 call obj _mt[243] _arg2[802940]))
    unknown call_tmp[803242] "expr temp" "maybe param" "maybe type" "temp"
    (803245 'move' call_tmp[803242](803126 call != call_tmp[803232] call_tmp[803237]))
    if call_tmp[803242]
    {
      (803195 'move' ret[803185](803194 'deref' 0))
      gotoReturn _end_==[803183] _end_==[803183]
    }
    unknown call_tmp[803247] "expr temp" "maybe param" "maybe type" "temp"
    (803250 'move' call_tmp[803247](803132 call bufDom _mt[243] _arg1[802939]))
    unknown call_tmp[803252] "expr temp" "maybe param" "maybe type" "temp"
    (803255 'move' call_tmp[803252](803136 call bufDom _mt[243] _arg2[802940]))
    unknown call_tmp[803257] "expr temp" "maybe param" "maybe type" "temp"
    (803260 'move' call_tmp[803257](803140 call != call_tmp[803247] call_tmp[803252]))
    if call_tmp[803257]
    {
      (803200 'move' ret[803185](803199 'deref' 0))
      gotoReturn _end_==[803183] _end_==[803183]
    }
    unknown call_tmp[803262] "expr temp" "maybe param" "maybe type" "temp"
    (803265 'move' call_tmp[803262](803146 call buf _mt[243] _arg1[802939]))
    unknown call_tmp[803267] "expr temp" "maybe param" "maybe type" "temp"
    (803270 'move' call_tmp[803267](803150 call buf _mt[243] _arg2[802940]))
    unknown call_tmp[803272] "expr temp" "maybe param" "maybe type" "temp"
    (803275 'move' call_tmp[803272](803154 call != call_tmp[803262] call_tmp[803267]))
    if call_tmp[803272]
    {
      (803205 'move' ret[803185](803204 'deref' 0))
      gotoReturn _end_==[803183] _end_==[803183]
    }
    unknown call_tmp[803277] "expr temp" "maybe param" "maybe type" "temp"
    (803280 'move' call_tmp[803277](803160 call cur _mt[243] _arg1[802939]))
    unknown call_tmp[803282] "expr temp" "maybe param" "maybe type" "temp"
    (803285 'move' call_tmp[803282](803164 call cur _mt[243] _arg2[802940]))
    unknown call_tmp[803287] "expr temp" "maybe param" "maybe type" "temp"
    (803290 'move' call_tmp[803287](803168 call != call_tmp[803277] call_tmp[803282]))
    if call_tmp[803287]
    {
      (803210 'move' ret[803185](803209 'deref' 0))
      gotoReturn _end_==[803183] _end_==[803183]
    }
    (803215 'move' ret[803185](803214 'deref' 1))
    label _end_==[803183]
    (803187 return ret[803185])
  }
  where {
    unknown call_tmp[803292] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (803295 'move' call_tmp[803292](802943 'typeof' _arg1[802939]))
    unknown call_tmp[803297] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (803300 'move' call_tmp[803297](802945 'typeof' _arg2[802940]))
    unknown call_tmp[803302] "expr temp" "maybe param" "maybe type" "temp"
    (803305 'move' call_tmp[803302](802947 call == call_tmp[803292] call_tmp[803297]))
    unknown call_tmp[803307] "expr temp" "maybe param" "maybe type" "temp"
    (803310 'move' call_tmp[803307](803098 call chpl_fields_are_comparable[802949] _arg1[802939] _arg2[802940]))
    (803102 '&' call_tmp[803302] call_tmp[803307])
  }
  function chpl_fields_are_comparable[803324](arg _arg1[803326]:SparseIndexBuffer[148188](?), arg _arg2[803327]:SparseIndexBuffer[148188](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[803386]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[803393] "expr temp" "maybe param" "maybe type" "temp"
    (803396 'move' call_tmp[803393](803330 call rank _mt[243] _arg1[803326]))
    unknown call_tmp[803398] "expr temp" "maybe param" "maybe type" "temp"
    (803401 'move' call_tmp[803398](803334 call rank _mt[243] _arg2[803327]))
    unknown call_tmp[803403] "expr temp" "maybe param" "maybe type" "temp"
    (803406 'move' call_tmp[803403](803338 'call resolves' c"!=" call_tmp[803393] call_tmp[803398]))
    unknown call_tmp[803408] "expr temp" "maybe param" "maybe type" "temp"
    (803411 'move' call_tmp[803408](803340 call obj _mt[243] _arg1[803326]))
    unknown call_tmp[803413] "expr temp" "maybe param" "maybe type" "temp"
    (803416 'move' call_tmp[803413](803344 call obj _mt[243] _arg2[803327]))
    unknown call_tmp[803418] "expr temp" "maybe param" "maybe type" "temp"
    (803421 'move' call_tmp[803418](803348 'call resolves' c"!=" call_tmp[803408] call_tmp[803413]))
    unknown call_tmp[803423] "expr temp" "maybe param" "maybe type" "temp"
    (803426 'move' call_tmp[803423](803350 call bufDom _mt[243] _arg1[803326]))
    unknown call_tmp[803428] "expr temp" "maybe param" "maybe type" "temp"
    (803431 'move' call_tmp[803428](803354 call bufDom _mt[243] _arg2[803327]))
    unknown call_tmp[803433] "expr temp" "maybe param" "maybe type" "temp"
    (803436 'move' call_tmp[803433](803358 'call resolves' c"!=" call_tmp[803423] call_tmp[803428]))
    unknown call_tmp[803438] "expr temp" "maybe param" "maybe type" "temp"
    (803441 'move' call_tmp[803438](803360 call buf _mt[243] _arg1[803326]))
    unknown call_tmp[803443] "expr temp" "maybe param" "maybe type" "temp"
    (803446 'move' call_tmp[803443](803364 call buf _mt[243] _arg2[803327]))
    unknown call_tmp[803448] "expr temp" "maybe param" "maybe type" "temp"
    (803451 'move' call_tmp[803448](803368 'call resolves' c"!=" call_tmp[803438] call_tmp[803443]))
    unknown call_tmp[803453] "expr temp" "maybe param" "maybe type" "temp"
    (803456 'move' call_tmp[803453](803370 call cur _mt[243] _arg1[803326]))
    unknown call_tmp[803458] "expr temp" "maybe param" "maybe type" "temp"
    (803461 'move' call_tmp[803458](803374 call cur _mt[243] _arg2[803327]))
    unknown call_tmp[803463] "expr temp" "maybe param" "maybe type" "temp"
    (803466 'move' call_tmp[803463](803378 'call resolves' c"!=" call_tmp[803453] call_tmp[803458]))
    unknown call_tmp[803468] "expr temp" "maybe param" "maybe type" "temp"
    (803471 'move' call_tmp[803468](803380 '&' call_tmp[803403] call_tmp[803418] call_tmp[803433] call_tmp[803448] call_tmp[803463]))
    (803391 'move' ret[803386](803390 'deref' call_tmp[803468]))
    (803388 return ret[803386])
  }
  function !=[803312](arg _arg1[803314]:SparseIndexBuffer[148188](?), arg _arg2[803315]:SparseIndexBuffer[148188](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[803560]:bool[10] "RVV" "temp"
    unknown call_tmp[803592] "expr temp" "maybe param" "maybe type" "temp"
    (803595 'move' call_tmp[803592](803479 call rank _mt[243] _arg1[803314]))
    unknown call_tmp[803597] "expr temp" "maybe param" "maybe type" "temp"
    (803600 'move' call_tmp[803597](803483 call rank _mt[243] _arg2[803315]))
    unknown call_tmp[803602] "expr temp" "maybe param" "maybe type" "temp"
    (803605 'move' call_tmp[803602](803487 call != call_tmp[803592] call_tmp[803597]))
    if call_tmp[803602]
    {
      (803565 'move' ret[803560](803564 'deref' 1))
      gotoReturn _end_!=[803558] _end_!=[803558]
    }
    unknown call_tmp[803607] "expr temp" "maybe param" "maybe type" "temp"
    (803610 'move' call_tmp[803607](803493 call obj _mt[243] _arg1[803314]))
    unknown call_tmp[803612] "expr temp" "maybe param" "maybe type" "temp"
    (803615 'move' call_tmp[803612](803497 call obj _mt[243] _arg2[803315]))
    unknown call_tmp[803617] "expr temp" "maybe param" "maybe type" "temp"
    (803620 'move' call_tmp[803617](803501 call != call_tmp[803607] call_tmp[803612]))
    if call_tmp[803617]
    {
      (803570 'move' ret[803560](803569 'deref' 1))
      gotoReturn _end_!=[803558] _end_!=[803558]
    }
    unknown call_tmp[803622] "expr temp" "maybe param" "maybe type" "temp"
    (803625 'move' call_tmp[803622](803507 call bufDom _mt[243] _arg1[803314]))
    unknown call_tmp[803627] "expr temp" "maybe param" "maybe type" "temp"
    (803630 'move' call_tmp[803627](803511 call bufDom _mt[243] _arg2[803315]))
    unknown call_tmp[803632] "expr temp" "maybe param" "maybe type" "temp"
    (803635 'move' call_tmp[803632](803515 call != call_tmp[803622] call_tmp[803627]))
    if call_tmp[803632]
    {
      (803575 'move' ret[803560](803574 'deref' 1))
      gotoReturn _end_!=[803558] _end_!=[803558]
    }
    unknown call_tmp[803637] "expr temp" "maybe param" "maybe type" "temp"
    (803640 'move' call_tmp[803637](803521 call buf _mt[243] _arg1[803314]))
    unknown call_tmp[803642] "expr temp" "maybe param" "maybe type" "temp"
    (803645 'move' call_tmp[803642](803525 call buf _mt[243] _arg2[803315]))
    unknown call_tmp[803647] "expr temp" "maybe param" "maybe type" "temp"
    (803650 'move' call_tmp[803647](803529 call != call_tmp[803637] call_tmp[803642]))
    if call_tmp[803647]
    {
      (803580 'move' ret[803560](803579 'deref' 1))
      gotoReturn _end_!=[803558] _end_!=[803558]
    }
    unknown call_tmp[803652] "expr temp" "maybe param" "maybe type" "temp"
    (803655 'move' call_tmp[803652](803535 call cur _mt[243] _arg1[803314]))
    unknown call_tmp[803657] "expr temp" "maybe param" "maybe type" "temp"
    (803660 'move' call_tmp[803657](803539 call cur _mt[243] _arg2[803315]))
    unknown call_tmp[803662] "expr temp" "maybe param" "maybe type" "temp"
    (803665 'move' call_tmp[803662](803543 call != call_tmp[803652] call_tmp[803657]))
    if call_tmp[803662]
    {
      (803585 'move' ret[803560](803584 'deref' 1))
      gotoReturn _end_!=[803558] _end_!=[803558]
    }
    (803590 'move' ret[803560](803589 'deref' 0))
    label _end_!=[803558]
    (803562 return ret[803560])
  }
  where {
    unknown call_tmp[803667] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (803670 'move' call_tmp[803667](803318 'typeof' _arg1[803314]))
    unknown call_tmp[803672] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (803675 'move' call_tmp[803672](803320 'typeof' _arg2[803315]))
    unknown call_tmp[803677] "expr temp" "maybe param" "maybe type" "temp"
    (803680 'move' call_tmp[803677](803322 call == call_tmp[803667] call_tmp[803672]))
    unknown call_tmp[803682] "expr temp" "maybe param" "maybe type" "temp"
    (803685 'move' call_tmp[803682](803473 call chpl_fields_are_comparable[803324] _arg1[803314] _arg2[803315]))
    (803477 '&' call_tmp[803677] call_tmp[803682])
  }
  function chpl_fields_are_comparable[803699](arg _arg1[803701]:SparseIndexBuffer[148188](?), arg _arg2[803702]:SparseIndexBuffer[148188](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[803761]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[803768] "expr temp" "maybe param" "maybe type" "temp"
    (803771 'move' call_tmp[803768](803705 call rank _mt[243] _arg1[803701]))
    unknown call_tmp[803773] "expr temp" "maybe param" "maybe type" "temp"
    (803776 'move' call_tmp[803773](803709 call rank _mt[243] _arg2[803702]))
    unknown call_tmp[803778] "expr temp" "maybe param" "maybe type" "temp"
    (803781 'move' call_tmp[803778](803713 'call resolves' c"<" call_tmp[803768] call_tmp[803773]))
    unknown call_tmp[803783] "expr temp" "maybe param" "maybe type" "temp"
    (803786 'move' call_tmp[803783](803715 call obj _mt[243] _arg1[803701]))
    unknown call_tmp[803788] "expr temp" "maybe param" "maybe type" "temp"
    (803791 'move' call_tmp[803788](803719 call obj _mt[243] _arg2[803702]))
    unknown call_tmp[803793] "expr temp" "maybe param" "maybe type" "temp"
    (803796 'move' call_tmp[803793](803723 'call resolves' c"<" call_tmp[803783] call_tmp[803788]))
    unknown call_tmp[803798] "expr temp" "maybe param" "maybe type" "temp"
    (803801 'move' call_tmp[803798](803725 call bufDom _mt[243] _arg1[803701]))
    unknown call_tmp[803803] "expr temp" "maybe param" "maybe type" "temp"
    (803806 'move' call_tmp[803803](803729 call bufDom _mt[243] _arg2[803702]))
    unknown call_tmp[803808] "expr temp" "maybe param" "maybe type" "temp"
    (803811 'move' call_tmp[803808](803733 'call resolves' c"<" call_tmp[803798] call_tmp[803803]))
    unknown call_tmp[803813] "expr temp" "maybe param" "maybe type" "temp"
    (803816 'move' call_tmp[803813](803735 call buf _mt[243] _arg1[803701]))
    unknown call_tmp[803818] "expr temp" "maybe param" "maybe type" "temp"
    (803821 'move' call_tmp[803818](803739 call buf _mt[243] _arg2[803702]))
    unknown call_tmp[803823] "expr temp" "maybe param" "maybe type" "temp"
    (803826 'move' call_tmp[803823](803743 'call resolves' c"<" call_tmp[803813] call_tmp[803818]))
    unknown call_tmp[803828] "expr temp" "maybe param" "maybe type" "temp"
    (803831 'move' call_tmp[803828](803745 call cur _mt[243] _arg1[803701]))
    unknown call_tmp[803833] "expr temp" "maybe param" "maybe type" "temp"
    (803836 'move' call_tmp[803833](803749 call cur _mt[243] _arg2[803702]))
    unknown call_tmp[803838] "expr temp" "maybe param" "maybe type" "temp"
    (803841 'move' call_tmp[803838](803753 'call resolves' c"<" call_tmp[803828] call_tmp[803833]))
    unknown call_tmp[803843] "expr temp" "maybe param" "maybe type" "temp"
    (803846 'move' call_tmp[803843](803755 '&' call_tmp[803778] call_tmp[803793] call_tmp[803808] call_tmp[803823] call_tmp[803838]))
    (803766 'move' ret[803761](803765 'deref' call_tmp[803843]))
    (803763 return ret[803761])
  }
  function <[803687](arg _arg1[803689]:SparseIndexBuffer[148188](?), arg _arg2[803690]:SparseIndexBuffer[148188](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[804010]:bool[10] "RVV" "temp"
    unknown call_tmp[804067] "expr temp" "maybe param" "maybe type" "temp"
    (804070 'move' call_tmp[804067](803854 call rank _mt[243] _arg1[803689]))
    unknown call_tmp[804072] "expr temp" "maybe param" "maybe type" "temp"
    (804075 'move' call_tmp[804072](803858 call rank _mt[243] _arg2[803690]))
    unknown call_tmp[804077] "expr temp" "maybe param" "maybe type" "temp"
    (804080 'move' call_tmp[804077](803862 call < call_tmp[804067] call_tmp[804072]))
    if call_tmp[804077]
    {
      (804015 'move' ret[804010](804014 'deref' 1))
      gotoReturn _end_<[804008] _end_<[804008]
    }
    unknown call_tmp[804082] "expr temp" "maybe param" "maybe type" "temp"
    (804085 'move' call_tmp[804082](803868 call rank _mt[243] _arg1[803689]))
    unknown call_tmp[804087] "expr temp" "maybe param" "maybe type" "temp"
    (804090 'move' call_tmp[804087](803872 call rank _mt[243] _arg2[803690]))
    unknown call_tmp[804092] "expr temp" "maybe param" "maybe type" "temp"
    (804095 'move' call_tmp[804092](803876 call > call_tmp[804082] call_tmp[804087]))
    if call_tmp[804092]
    {
      (804020 'move' ret[804010](804019 'deref' 0))
      gotoReturn _end_<[804008] _end_<[804008]
    }
    unknown call_tmp[804097] "expr temp" "maybe param" "maybe type" "temp"
    (804100 'move' call_tmp[804097](803882 call obj _mt[243] _arg1[803689]))
    unknown call_tmp[804102] "expr temp" "maybe param" "maybe type" "temp"
    (804105 'move' call_tmp[804102](803886 call obj _mt[243] _arg2[803690]))
    unknown call_tmp[804107] "expr temp" "maybe param" "maybe type" "temp"
    (804110 'move' call_tmp[804107](803890 call < call_tmp[804097] call_tmp[804102]))
    if call_tmp[804107]
    {
      (804025 'move' ret[804010](804024 'deref' 1))
      gotoReturn _end_<[804008] _end_<[804008]
    }
    unknown call_tmp[804112] "expr temp" "maybe param" "maybe type" "temp"
    (804115 'move' call_tmp[804112](803896 call obj _mt[243] _arg1[803689]))
    unknown call_tmp[804117] "expr temp" "maybe param" "maybe type" "temp"
    (804120 'move' call_tmp[804117](803900 call obj _mt[243] _arg2[803690]))
    unknown call_tmp[804122] "expr temp" "maybe param" "maybe type" "temp"
    (804125 'move' call_tmp[804122](803904 call > call_tmp[804112] call_tmp[804117]))
    if call_tmp[804122]
    {
      (804030 'move' ret[804010](804029 'deref' 0))
      gotoReturn _end_<[804008] _end_<[804008]
    }
    unknown call_tmp[804127] "expr temp" "maybe param" "maybe type" "temp"
    (804130 'move' call_tmp[804127](803910 call bufDom _mt[243] _arg1[803689]))
    unknown call_tmp[804132] "expr temp" "maybe param" "maybe type" "temp"
    (804135 'move' call_tmp[804132](803914 call bufDom _mt[243] _arg2[803690]))
    unknown call_tmp[804137] "expr temp" "maybe param" "maybe type" "temp"
    (804140 'move' call_tmp[804137](803918 call < call_tmp[804127] call_tmp[804132]))
    if call_tmp[804137]
    {
      (804035 'move' ret[804010](804034 'deref' 1))
      gotoReturn _end_<[804008] _end_<[804008]
    }
    unknown call_tmp[804142] "expr temp" "maybe param" "maybe type" "temp"
    (804145 'move' call_tmp[804142](803924 call bufDom _mt[243] _arg1[803689]))
    unknown call_tmp[804147] "expr temp" "maybe param" "maybe type" "temp"
    (804150 'move' call_tmp[804147](803928 call bufDom _mt[243] _arg2[803690]))
    unknown call_tmp[804152] "expr temp" "maybe param" "maybe type" "temp"
    (804155 'move' call_tmp[804152](803932 call > call_tmp[804142] call_tmp[804147]))
    if call_tmp[804152]
    {
      (804040 'move' ret[804010](804039 'deref' 0))
      gotoReturn _end_<[804008] _end_<[804008]
    }
    unknown call_tmp[804157] "expr temp" "maybe param" "maybe type" "temp"
    (804160 'move' call_tmp[804157](803938 call buf _mt[243] _arg1[803689]))
    unknown call_tmp[804162] "expr temp" "maybe param" "maybe type" "temp"
    (804165 'move' call_tmp[804162](803942 call buf _mt[243] _arg2[803690]))
    unknown call_tmp[804167] "expr temp" "maybe param" "maybe type" "temp"
    (804170 'move' call_tmp[804167](803946 call < call_tmp[804157] call_tmp[804162]))
    if call_tmp[804167]
    {
      (804045 'move' ret[804010](804044 'deref' 1))
      gotoReturn _end_<[804008] _end_<[804008]
    }
    unknown call_tmp[804172] "expr temp" "maybe param" "maybe type" "temp"
    (804175 'move' call_tmp[804172](803952 call buf _mt[243] _arg1[803689]))
    unknown call_tmp[804177] "expr temp" "maybe param" "maybe type" "temp"
    (804180 'move' call_tmp[804177](803956 call buf _mt[243] _arg2[803690]))
    unknown call_tmp[804182] "expr temp" "maybe param" "maybe type" "temp"
    (804185 'move' call_tmp[804182](803960 call > call_tmp[804172] call_tmp[804177]))
    if call_tmp[804182]
    {
      (804050 'move' ret[804010](804049 'deref' 0))
      gotoReturn _end_<[804008] _end_<[804008]
    }
    unknown call_tmp[804187] "expr temp" "maybe param" "maybe type" "temp"
    (804190 'move' call_tmp[804187](803966 call cur _mt[243] _arg1[803689]))
    unknown call_tmp[804192] "expr temp" "maybe param" "maybe type" "temp"
    (804195 'move' call_tmp[804192](803970 call cur _mt[243] _arg2[803690]))
    unknown call_tmp[804197] "expr temp" "maybe param" "maybe type" "temp"
    (804200 'move' call_tmp[804197](803974 call < call_tmp[804187] call_tmp[804192]))
    if call_tmp[804197]
    {
      (804055 'move' ret[804010](804054 'deref' 1))
      gotoReturn _end_<[804008] _end_<[804008]
    }
    unknown call_tmp[804202] "expr temp" "maybe param" "maybe type" "temp"
    (804205 'move' call_tmp[804202](803980 call cur _mt[243] _arg1[803689]))
    unknown call_tmp[804207] "expr temp" "maybe param" "maybe type" "temp"
    (804210 'move' call_tmp[804207](803984 call cur _mt[243] _arg2[803690]))
    unknown call_tmp[804212] "expr temp" "maybe param" "maybe type" "temp"
    (804215 'move' call_tmp[804212](803988 call > call_tmp[804202] call_tmp[804207]))
    if call_tmp[804212]
    {
      (804060 'move' ret[804010](804059 'deref' 0))
      gotoReturn _end_<[804008] _end_<[804008]
    }
    (804065 'move' ret[804010](804064 'deref' 0))
    label _end_<[804008]
    (804012 return ret[804010])
  }
  where {
    unknown call_tmp[804217] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (804220 'move' call_tmp[804217](803693 'typeof' _arg1[803689]))
    unknown call_tmp[804222] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (804225 'move' call_tmp[804222](803695 'typeof' _arg2[803690]))
    unknown call_tmp[804227] "expr temp" "maybe param" "maybe type" "temp"
    (804230 'move' call_tmp[804227](803697 call == call_tmp[804217] call_tmp[804222]))
    unknown call_tmp[804232] "expr temp" "maybe param" "maybe type" "temp"
    (804235 'move' call_tmp[804232](803848 call chpl_fields_are_comparable[803699] _arg1[803689] _arg2[803690]))
    (803852 '&' call_tmp[804227] call_tmp[804232])
  }
  function chpl_fields_are_comparable[804249](arg _arg1[804251]:SparseIndexBuffer[148188](?), arg _arg2[804252]:SparseIndexBuffer[148188](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[804311]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[804318] "expr temp" "maybe param" "maybe type" "temp"
    (804321 'move' call_tmp[804318](804255 call rank _mt[243] _arg1[804251]))
    unknown call_tmp[804323] "expr temp" "maybe param" "maybe type" "temp"
    (804326 'move' call_tmp[804323](804259 call rank _mt[243] _arg2[804252]))
    unknown call_tmp[804328] "expr temp" "maybe param" "maybe type" "temp"
    (804331 'move' call_tmp[804328](804263 'call resolves' c"<=" call_tmp[804318] call_tmp[804323]))
    unknown call_tmp[804333] "expr temp" "maybe param" "maybe type" "temp"
    (804336 'move' call_tmp[804333](804265 call obj _mt[243] _arg1[804251]))
    unknown call_tmp[804338] "expr temp" "maybe param" "maybe type" "temp"
    (804341 'move' call_tmp[804338](804269 call obj _mt[243] _arg2[804252]))
    unknown call_tmp[804343] "expr temp" "maybe param" "maybe type" "temp"
    (804346 'move' call_tmp[804343](804273 'call resolves' c"<=" call_tmp[804333] call_tmp[804338]))
    unknown call_tmp[804348] "expr temp" "maybe param" "maybe type" "temp"
    (804351 'move' call_tmp[804348](804275 call bufDom _mt[243] _arg1[804251]))
    unknown call_tmp[804353] "expr temp" "maybe param" "maybe type" "temp"
    (804356 'move' call_tmp[804353](804279 call bufDom _mt[243] _arg2[804252]))
    unknown call_tmp[804358] "expr temp" "maybe param" "maybe type" "temp"
    (804361 'move' call_tmp[804358](804283 'call resolves' c"<=" call_tmp[804348] call_tmp[804353]))
    unknown call_tmp[804363] "expr temp" "maybe param" "maybe type" "temp"
    (804366 'move' call_tmp[804363](804285 call buf _mt[243] _arg1[804251]))
    unknown call_tmp[804368] "expr temp" "maybe param" "maybe type" "temp"
    (804371 'move' call_tmp[804368](804289 call buf _mt[243] _arg2[804252]))
    unknown call_tmp[804373] "expr temp" "maybe param" "maybe type" "temp"
    (804376 'move' call_tmp[804373](804293 'call resolves' c"<=" call_tmp[804363] call_tmp[804368]))
    unknown call_tmp[804378] "expr temp" "maybe param" "maybe type" "temp"
    (804381 'move' call_tmp[804378](804295 call cur _mt[243] _arg1[804251]))
    unknown call_tmp[804383] "expr temp" "maybe param" "maybe type" "temp"
    (804386 'move' call_tmp[804383](804299 call cur _mt[243] _arg2[804252]))
    unknown call_tmp[804388] "expr temp" "maybe param" "maybe type" "temp"
    (804391 'move' call_tmp[804388](804303 'call resolves' c"<=" call_tmp[804378] call_tmp[804383]))
    unknown call_tmp[804393] "expr temp" "maybe param" "maybe type" "temp"
    (804396 'move' call_tmp[804393](804305 '&' call_tmp[804328] call_tmp[804343] call_tmp[804358] call_tmp[804373] call_tmp[804388]))
    (804316 'move' ret[804311](804315 'deref' call_tmp[804393]))
    (804313 return ret[804311])
  }
  function <=[804237](arg _arg1[804239]:SparseIndexBuffer[148188](?), arg _arg2[804240]:SparseIndexBuffer[148188](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[804560]:bool[10] "RVV" "temp"
    unknown call_tmp[804617] "expr temp" "maybe param" "maybe type" "temp"
    (804620 'move' call_tmp[804617](804404 call rank _mt[243] _arg1[804239]))
    unknown call_tmp[804622] "expr temp" "maybe param" "maybe type" "temp"
    (804625 'move' call_tmp[804622](804408 call rank _mt[243] _arg2[804240]))
    unknown call_tmp[804627] "expr temp" "maybe param" "maybe type" "temp"
    (804630 'move' call_tmp[804627](804412 call < call_tmp[804617] call_tmp[804622]))
    if call_tmp[804627]
    {
      (804565 'move' ret[804560](804564 'deref' 1))
      gotoReturn _end_<=[804558] _end_<=[804558]
    }
    unknown call_tmp[804632] "expr temp" "maybe param" "maybe type" "temp"
    (804635 'move' call_tmp[804632](804418 call rank _mt[243] _arg1[804239]))
    unknown call_tmp[804637] "expr temp" "maybe param" "maybe type" "temp"
    (804640 'move' call_tmp[804637](804422 call rank _mt[243] _arg2[804240]))
    unknown call_tmp[804642] "expr temp" "maybe param" "maybe type" "temp"
    (804645 'move' call_tmp[804642](804426 call > call_tmp[804632] call_tmp[804637]))
    if call_tmp[804642]
    {
      (804570 'move' ret[804560](804569 'deref' 0))
      gotoReturn _end_<=[804558] _end_<=[804558]
    }
    unknown call_tmp[804647] "expr temp" "maybe param" "maybe type" "temp"
    (804650 'move' call_tmp[804647](804432 call obj _mt[243] _arg1[804239]))
    unknown call_tmp[804652] "expr temp" "maybe param" "maybe type" "temp"
    (804655 'move' call_tmp[804652](804436 call obj _mt[243] _arg2[804240]))
    unknown call_tmp[804657] "expr temp" "maybe param" "maybe type" "temp"
    (804660 'move' call_tmp[804657](804440 call < call_tmp[804647] call_tmp[804652]))
    if call_tmp[804657]
    {
      (804575 'move' ret[804560](804574 'deref' 1))
      gotoReturn _end_<=[804558] _end_<=[804558]
    }
    unknown call_tmp[804662] "expr temp" "maybe param" "maybe type" "temp"
    (804665 'move' call_tmp[804662](804446 call obj _mt[243] _arg1[804239]))
    unknown call_tmp[804667] "expr temp" "maybe param" "maybe type" "temp"
    (804670 'move' call_tmp[804667](804450 call obj _mt[243] _arg2[804240]))
    unknown call_tmp[804672] "expr temp" "maybe param" "maybe type" "temp"
    (804675 'move' call_tmp[804672](804454 call > call_tmp[804662] call_tmp[804667]))
    if call_tmp[804672]
    {
      (804580 'move' ret[804560](804579 'deref' 0))
      gotoReturn _end_<=[804558] _end_<=[804558]
    }
    unknown call_tmp[804677] "expr temp" "maybe param" "maybe type" "temp"
    (804680 'move' call_tmp[804677](804460 call bufDom _mt[243] _arg1[804239]))
    unknown call_tmp[804682] "expr temp" "maybe param" "maybe type" "temp"
    (804685 'move' call_tmp[804682](804464 call bufDom _mt[243] _arg2[804240]))
    unknown call_tmp[804687] "expr temp" "maybe param" "maybe type" "temp"
    (804690 'move' call_tmp[804687](804468 call < call_tmp[804677] call_tmp[804682]))
    if call_tmp[804687]
    {
      (804585 'move' ret[804560](804584 'deref' 1))
      gotoReturn _end_<=[804558] _end_<=[804558]
    }
    unknown call_tmp[804692] "expr temp" "maybe param" "maybe type" "temp"
    (804695 'move' call_tmp[804692](804474 call bufDom _mt[243] _arg1[804239]))
    unknown call_tmp[804697] "expr temp" "maybe param" "maybe type" "temp"
    (804700 'move' call_tmp[804697](804478 call bufDom _mt[243] _arg2[804240]))
    unknown call_tmp[804702] "expr temp" "maybe param" "maybe type" "temp"
    (804705 'move' call_tmp[804702](804482 call > call_tmp[804692] call_tmp[804697]))
    if call_tmp[804702]
    {
      (804590 'move' ret[804560](804589 'deref' 0))
      gotoReturn _end_<=[804558] _end_<=[804558]
    }
    unknown call_tmp[804707] "expr temp" "maybe param" "maybe type" "temp"
    (804710 'move' call_tmp[804707](804488 call buf _mt[243] _arg1[804239]))
    unknown call_tmp[804712] "expr temp" "maybe param" "maybe type" "temp"
    (804715 'move' call_tmp[804712](804492 call buf _mt[243] _arg2[804240]))
    unknown call_tmp[804717] "expr temp" "maybe param" "maybe type" "temp"
    (804720 'move' call_tmp[804717](804496 call < call_tmp[804707] call_tmp[804712]))
    if call_tmp[804717]
    {
      (804595 'move' ret[804560](804594 'deref' 1))
      gotoReturn _end_<=[804558] _end_<=[804558]
    }
    unknown call_tmp[804722] "expr temp" "maybe param" "maybe type" "temp"
    (804725 'move' call_tmp[804722](804502 call buf _mt[243] _arg1[804239]))
    unknown call_tmp[804727] "expr temp" "maybe param" "maybe type" "temp"
    (804730 'move' call_tmp[804727](804506 call buf _mt[243] _arg2[804240]))
    unknown call_tmp[804732] "expr temp" "maybe param" "maybe type" "temp"
    (804735 'move' call_tmp[804732](804510 call > call_tmp[804722] call_tmp[804727]))
    if call_tmp[804732]
    {
      (804600 'move' ret[804560](804599 'deref' 0))
      gotoReturn _end_<=[804558] _end_<=[804558]
    }
    unknown call_tmp[804737] "expr temp" "maybe param" "maybe type" "temp"
    (804740 'move' call_tmp[804737](804516 call cur _mt[243] _arg1[804239]))
    unknown call_tmp[804742] "expr temp" "maybe param" "maybe type" "temp"
    (804745 'move' call_tmp[804742](804520 call cur _mt[243] _arg2[804240]))
    unknown call_tmp[804747] "expr temp" "maybe param" "maybe type" "temp"
    (804750 'move' call_tmp[804747](804524 call < call_tmp[804737] call_tmp[804742]))
    if call_tmp[804747]
    {
      (804605 'move' ret[804560](804604 'deref' 1))
      gotoReturn _end_<=[804558] _end_<=[804558]
    }
    unknown call_tmp[804752] "expr temp" "maybe param" "maybe type" "temp"
    (804755 'move' call_tmp[804752](804530 call cur _mt[243] _arg1[804239]))
    unknown call_tmp[804757] "expr temp" "maybe param" "maybe type" "temp"
    (804760 'move' call_tmp[804757](804534 call cur _mt[243] _arg2[804240]))
    unknown call_tmp[804762] "expr temp" "maybe param" "maybe type" "temp"
    (804765 'move' call_tmp[804762](804538 call > call_tmp[804752] call_tmp[804757]))
    if call_tmp[804762]
    {
      (804610 'move' ret[804560](804609 'deref' 0))
      gotoReturn _end_<=[804558] _end_<=[804558]
    }
    (804615 'move' ret[804560](804614 'deref' 1))
    label _end_<=[804558]
    (804562 return ret[804560])
  }
  where {
    unknown call_tmp[804767] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (804770 'move' call_tmp[804767](804243 'typeof' _arg1[804239]))
    unknown call_tmp[804772] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (804775 'move' call_tmp[804772](804245 'typeof' _arg2[804240]))
    unknown call_tmp[804777] "expr temp" "maybe param" "maybe type" "temp"
    (804780 'move' call_tmp[804777](804247 call == call_tmp[804767] call_tmp[804772]))
    unknown call_tmp[804782] "expr temp" "maybe param" "maybe type" "temp"
    (804785 'move' call_tmp[804782](804398 call chpl_fields_are_comparable[804249] _arg1[804239] _arg2[804240]))
    (804402 '&' call_tmp[804777] call_tmp[804782])
  }
  function chpl_fields_are_comparable[804799](arg _arg1[804801]:SparseIndexBuffer[148188](?), arg _arg2[804802]:SparseIndexBuffer[148188](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[804861]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[804868] "expr temp" "maybe param" "maybe type" "temp"
    (804871 'move' call_tmp[804868](804805 call rank _mt[243] _arg1[804801]))
    unknown call_tmp[804873] "expr temp" "maybe param" "maybe type" "temp"
    (804876 'move' call_tmp[804873](804809 call rank _mt[243] _arg2[804802]))
    unknown call_tmp[804878] "expr temp" "maybe param" "maybe type" "temp"
    (804881 'move' call_tmp[804878](804813 'call resolves' c">" call_tmp[804868] call_tmp[804873]))
    unknown call_tmp[804883] "expr temp" "maybe param" "maybe type" "temp"
    (804886 'move' call_tmp[804883](804815 call obj _mt[243] _arg1[804801]))
    unknown call_tmp[804888] "expr temp" "maybe param" "maybe type" "temp"
    (804891 'move' call_tmp[804888](804819 call obj _mt[243] _arg2[804802]))
    unknown call_tmp[804893] "expr temp" "maybe param" "maybe type" "temp"
    (804896 'move' call_tmp[804893](804823 'call resolves' c">" call_tmp[804883] call_tmp[804888]))
    unknown call_tmp[804898] "expr temp" "maybe param" "maybe type" "temp"
    (804901 'move' call_tmp[804898](804825 call bufDom _mt[243] _arg1[804801]))
    unknown call_tmp[804903] "expr temp" "maybe param" "maybe type" "temp"
    (804906 'move' call_tmp[804903](804829 call bufDom _mt[243] _arg2[804802]))
    unknown call_tmp[804908] "expr temp" "maybe param" "maybe type" "temp"
    (804911 'move' call_tmp[804908](804833 'call resolves' c">" call_tmp[804898] call_tmp[804903]))
    unknown call_tmp[804913] "expr temp" "maybe param" "maybe type" "temp"
    (804916 'move' call_tmp[804913](804835 call buf _mt[243] _arg1[804801]))
    unknown call_tmp[804918] "expr temp" "maybe param" "maybe type" "temp"
    (804921 'move' call_tmp[804918](804839 call buf _mt[243] _arg2[804802]))
    unknown call_tmp[804923] "expr temp" "maybe param" "maybe type" "temp"
    (804926 'move' call_tmp[804923](804843 'call resolves' c">" call_tmp[804913] call_tmp[804918]))
    unknown call_tmp[804928] "expr temp" "maybe param" "maybe type" "temp"
    (804931 'move' call_tmp[804928](804845 call cur _mt[243] _arg1[804801]))
    unknown call_tmp[804933] "expr temp" "maybe param" "maybe type" "temp"
    (804936 'move' call_tmp[804933](804849 call cur _mt[243] _arg2[804802]))
    unknown call_tmp[804938] "expr temp" "maybe param" "maybe type" "temp"
    (804941 'move' call_tmp[804938](804853 'call resolves' c">" call_tmp[804928] call_tmp[804933]))
    unknown call_tmp[804943] "expr temp" "maybe param" "maybe type" "temp"
    (804946 'move' call_tmp[804943](804855 '&' call_tmp[804878] call_tmp[804893] call_tmp[804908] call_tmp[804923] call_tmp[804938]))
    (804866 'move' ret[804861](804865 'deref' call_tmp[804943]))
    (804863 return ret[804861])
  }
  function >[804787](arg _arg1[804789]:SparseIndexBuffer[148188](?), arg _arg2[804790]:SparseIndexBuffer[148188](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[805110]:bool[10] "RVV" "temp"
    unknown call_tmp[805167] "expr temp" "maybe param" "maybe type" "temp"
    (805170 'move' call_tmp[805167](804954 call rank _mt[243] _arg1[804789]))
    unknown call_tmp[805172] "expr temp" "maybe param" "maybe type" "temp"
    (805175 'move' call_tmp[805172](804958 call rank _mt[243] _arg2[804790]))
    unknown call_tmp[805177] "expr temp" "maybe param" "maybe type" "temp"
    (805180 'move' call_tmp[805177](804962 call > call_tmp[805167] call_tmp[805172]))
    if call_tmp[805177]
    {
      (805115 'move' ret[805110](805114 'deref' 1))
      gotoReturn _end_>[805108] _end_>[805108]
    }
    unknown call_tmp[805182] "expr temp" "maybe param" "maybe type" "temp"
    (805185 'move' call_tmp[805182](804968 call rank _mt[243] _arg1[804789]))
    unknown call_tmp[805187] "expr temp" "maybe param" "maybe type" "temp"
    (805190 'move' call_tmp[805187](804972 call rank _mt[243] _arg2[804790]))
    unknown call_tmp[805192] "expr temp" "maybe param" "maybe type" "temp"
    (805195 'move' call_tmp[805192](804976 call < call_tmp[805182] call_tmp[805187]))
    if call_tmp[805192]
    {
      (805120 'move' ret[805110](805119 'deref' 0))
      gotoReturn _end_>[805108] _end_>[805108]
    }
    unknown call_tmp[805197] "expr temp" "maybe param" "maybe type" "temp"
    (805200 'move' call_tmp[805197](804982 call obj _mt[243] _arg1[804789]))
    unknown call_tmp[805202] "expr temp" "maybe param" "maybe type" "temp"
    (805205 'move' call_tmp[805202](804986 call obj _mt[243] _arg2[804790]))
    unknown call_tmp[805207] "expr temp" "maybe param" "maybe type" "temp"
    (805210 'move' call_tmp[805207](804990 call > call_tmp[805197] call_tmp[805202]))
    if call_tmp[805207]
    {
      (805125 'move' ret[805110](805124 'deref' 1))
      gotoReturn _end_>[805108] _end_>[805108]
    }
    unknown call_tmp[805212] "expr temp" "maybe param" "maybe type" "temp"
    (805215 'move' call_tmp[805212](804996 call obj _mt[243] _arg1[804789]))
    unknown call_tmp[805217] "expr temp" "maybe param" "maybe type" "temp"
    (805220 'move' call_tmp[805217](805000 call obj _mt[243] _arg2[804790]))
    unknown call_tmp[805222] "expr temp" "maybe param" "maybe type" "temp"
    (805225 'move' call_tmp[805222](805004 call < call_tmp[805212] call_tmp[805217]))
    if call_tmp[805222]
    {
      (805130 'move' ret[805110](805129 'deref' 0))
      gotoReturn _end_>[805108] _end_>[805108]
    }
    unknown call_tmp[805227] "expr temp" "maybe param" "maybe type" "temp"
    (805230 'move' call_tmp[805227](805010 call bufDom _mt[243] _arg1[804789]))
    unknown call_tmp[805232] "expr temp" "maybe param" "maybe type" "temp"
    (805235 'move' call_tmp[805232](805014 call bufDom _mt[243] _arg2[804790]))
    unknown call_tmp[805237] "expr temp" "maybe param" "maybe type" "temp"
    (805240 'move' call_tmp[805237](805018 call > call_tmp[805227] call_tmp[805232]))
    if call_tmp[805237]
    {
      (805135 'move' ret[805110](805134 'deref' 1))
      gotoReturn _end_>[805108] _end_>[805108]
    }
    unknown call_tmp[805242] "expr temp" "maybe param" "maybe type" "temp"
    (805245 'move' call_tmp[805242](805024 call bufDom _mt[243] _arg1[804789]))
    unknown call_tmp[805247] "expr temp" "maybe param" "maybe type" "temp"
    (805250 'move' call_tmp[805247](805028 call bufDom _mt[243] _arg2[804790]))
    unknown call_tmp[805252] "expr temp" "maybe param" "maybe type" "temp"
    (805255 'move' call_tmp[805252](805032 call < call_tmp[805242] call_tmp[805247]))
    if call_tmp[805252]
    {
      (805140 'move' ret[805110](805139 'deref' 0))
      gotoReturn _end_>[805108] _end_>[805108]
    }
    unknown call_tmp[805257] "expr temp" "maybe param" "maybe type" "temp"
    (805260 'move' call_tmp[805257](805038 call buf _mt[243] _arg1[804789]))
    unknown call_tmp[805262] "expr temp" "maybe param" "maybe type" "temp"
    (805265 'move' call_tmp[805262](805042 call buf _mt[243] _arg2[804790]))
    unknown call_tmp[805267] "expr temp" "maybe param" "maybe type" "temp"
    (805270 'move' call_tmp[805267](805046 call > call_tmp[805257] call_tmp[805262]))
    if call_tmp[805267]
    {
      (805145 'move' ret[805110](805144 'deref' 1))
      gotoReturn _end_>[805108] _end_>[805108]
    }
    unknown call_tmp[805272] "expr temp" "maybe param" "maybe type" "temp"
    (805275 'move' call_tmp[805272](805052 call buf _mt[243] _arg1[804789]))
    unknown call_tmp[805277] "expr temp" "maybe param" "maybe type" "temp"
    (805280 'move' call_tmp[805277](805056 call buf _mt[243] _arg2[804790]))
    unknown call_tmp[805282] "expr temp" "maybe param" "maybe type" "temp"
    (805285 'move' call_tmp[805282](805060 call < call_tmp[805272] call_tmp[805277]))
    if call_tmp[805282]
    {
      (805150 'move' ret[805110](805149 'deref' 0))
      gotoReturn _end_>[805108] _end_>[805108]
    }
    unknown call_tmp[805287] "expr temp" "maybe param" "maybe type" "temp"
    (805290 'move' call_tmp[805287](805066 call cur _mt[243] _arg1[804789]))
    unknown call_tmp[805292] "expr temp" "maybe param" "maybe type" "temp"
    (805295 'move' call_tmp[805292](805070 call cur _mt[243] _arg2[804790]))
    unknown call_tmp[805297] "expr temp" "maybe param" "maybe type" "temp"
    (805300 'move' call_tmp[805297](805074 call > call_tmp[805287] call_tmp[805292]))
    if call_tmp[805297]
    {
      (805155 'move' ret[805110](805154 'deref' 1))
      gotoReturn _end_>[805108] _end_>[805108]
    }
    unknown call_tmp[805302] "expr temp" "maybe param" "maybe type" "temp"
    (805305 'move' call_tmp[805302](805080 call cur _mt[243] _arg1[804789]))
    unknown call_tmp[805307] "expr temp" "maybe param" "maybe type" "temp"
    (805310 'move' call_tmp[805307](805084 call cur _mt[243] _arg2[804790]))
    unknown call_tmp[805312] "expr temp" "maybe param" "maybe type" "temp"
    (805315 'move' call_tmp[805312](805088 call < call_tmp[805302] call_tmp[805307]))
    if call_tmp[805312]
    {
      (805160 'move' ret[805110](805159 'deref' 0))
      gotoReturn _end_>[805108] _end_>[805108]
    }
    (805165 'move' ret[805110](805164 'deref' 0))
    label _end_>[805108]
    (805112 return ret[805110])
  }
  where {
    unknown call_tmp[805317] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (805320 'move' call_tmp[805317](804793 'typeof' _arg1[804789]))
    unknown call_tmp[805322] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (805325 'move' call_tmp[805322](804795 'typeof' _arg2[804790]))
    unknown call_tmp[805327] "expr temp" "maybe param" "maybe type" "temp"
    (805330 'move' call_tmp[805327](804797 call == call_tmp[805317] call_tmp[805322]))
    unknown call_tmp[805332] "expr temp" "maybe param" "maybe type" "temp"
    (805335 'move' call_tmp[805332](804948 call chpl_fields_are_comparable[804799] _arg1[804789] _arg2[804790]))
    (804952 '&' call_tmp[805327] call_tmp[805332])
  }
  function chpl_fields_are_comparable[805349](arg _arg1[805351]:SparseIndexBuffer[148188](?), arg _arg2[805352]:SparseIndexBuffer[148188](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[805411]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[805418] "expr temp" "maybe param" "maybe type" "temp"
    (805421 'move' call_tmp[805418](805355 call rank _mt[243] _arg1[805351]))
    unknown call_tmp[805423] "expr temp" "maybe param" "maybe type" "temp"
    (805426 'move' call_tmp[805423](805359 call rank _mt[243] _arg2[805352]))
    unknown call_tmp[805428] "expr temp" "maybe param" "maybe type" "temp"
    (805431 'move' call_tmp[805428](805363 'call resolves' c">=" call_tmp[805418] call_tmp[805423]))
    unknown call_tmp[805433] "expr temp" "maybe param" "maybe type" "temp"
    (805436 'move' call_tmp[805433](805365 call obj _mt[243] _arg1[805351]))
    unknown call_tmp[805438] "expr temp" "maybe param" "maybe type" "temp"
    (805441 'move' call_tmp[805438](805369 call obj _mt[243] _arg2[805352]))
    unknown call_tmp[805443] "expr temp" "maybe param" "maybe type" "temp"
    (805446 'move' call_tmp[805443](805373 'call resolves' c">=" call_tmp[805433] call_tmp[805438]))
    unknown call_tmp[805448] "expr temp" "maybe param" "maybe type" "temp"
    (805451 'move' call_tmp[805448](805375 call bufDom _mt[243] _arg1[805351]))
    unknown call_tmp[805453] "expr temp" "maybe param" "maybe type" "temp"
    (805456 'move' call_tmp[805453](805379 call bufDom _mt[243] _arg2[805352]))
    unknown call_tmp[805458] "expr temp" "maybe param" "maybe type" "temp"
    (805461 'move' call_tmp[805458](805383 'call resolves' c">=" call_tmp[805448] call_tmp[805453]))
    unknown call_tmp[805463] "expr temp" "maybe param" "maybe type" "temp"
    (805466 'move' call_tmp[805463](805385 call buf _mt[243] _arg1[805351]))
    unknown call_tmp[805468] "expr temp" "maybe param" "maybe type" "temp"
    (805471 'move' call_tmp[805468](805389 call buf _mt[243] _arg2[805352]))
    unknown call_tmp[805473] "expr temp" "maybe param" "maybe type" "temp"
    (805476 'move' call_tmp[805473](805393 'call resolves' c">=" call_tmp[805463] call_tmp[805468]))
    unknown call_tmp[805478] "expr temp" "maybe param" "maybe type" "temp"
    (805481 'move' call_tmp[805478](805395 call cur _mt[243] _arg1[805351]))
    unknown call_tmp[805483] "expr temp" "maybe param" "maybe type" "temp"
    (805486 'move' call_tmp[805483](805399 call cur _mt[243] _arg2[805352]))
    unknown call_tmp[805488] "expr temp" "maybe param" "maybe type" "temp"
    (805491 'move' call_tmp[805488](805403 'call resolves' c">=" call_tmp[805478] call_tmp[805483]))
    unknown call_tmp[805493] "expr temp" "maybe param" "maybe type" "temp"
    (805496 'move' call_tmp[805493](805405 '&' call_tmp[805428] call_tmp[805443] call_tmp[805458] call_tmp[805473] call_tmp[805488]))
    (805416 'move' ret[805411](805415 'deref' call_tmp[805493]))
    (805413 return ret[805411])
  }
  function >=[805337](arg _arg1[805339]:SparseIndexBuffer[148188](?), arg _arg2[805340]:SparseIndexBuffer[148188](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[805660]:bool[10] "RVV" "temp"
    unknown call_tmp[805717] "expr temp" "maybe param" "maybe type" "temp"
    (805720 'move' call_tmp[805717](805504 call rank _mt[243] _arg1[805339]))
    unknown call_tmp[805722] "expr temp" "maybe param" "maybe type" "temp"
    (805725 'move' call_tmp[805722](805508 call rank _mt[243] _arg2[805340]))
    unknown call_tmp[805727] "expr temp" "maybe param" "maybe type" "temp"
    (805730 'move' call_tmp[805727](805512 call > call_tmp[805717] call_tmp[805722]))
    if call_tmp[805727]
    {
      (805665 'move' ret[805660](805664 'deref' 1))
      gotoReturn _end_>=[805658] _end_>=[805658]
    }
    unknown call_tmp[805732] "expr temp" "maybe param" "maybe type" "temp"
    (805735 'move' call_tmp[805732](805518 call rank _mt[243] _arg1[805339]))
    unknown call_tmp[805737] "expr temp" "maybe param" "maybe type" "temp"
    (805740 'move' call_tmp[805737](805522 call rank _mt[243] _arg2[805340]))
    unknown call_tmp[805742] "expr temp" "maybe param" "maybe type" "temp"
    (805745 'move' call_tmp[805742](805526 call < call_tmp[805732] call_tmp[805737]))
    if call_tmp[805742]
    {
      (805670 'move' ret[805660](805669 'deref' 0))
      gotoReturn _end_>=[805658] _end_>=[805658]
    }
    unknown call_tmp[805747] "expr temp" "maybe param" "maybe type" "temp"
    (805750 'move' call_tmp[805747](805532 call obj _mt[243] _arg1[805339]))
    unknown call_tmp[805752] "expr temp" "maybe param" "maybe type" "temp"
    (805755 'move' call_tmp[805752](805536 call obj _mt[243] _arg2[805340]))
    unknown call_tmp[805757] "expr temp" "maybe param" "maybe type" "temp"
    (805760 'move' call_tmp[805757](805540 call > call_tmp[805747] call_tmp[805752]))
    if call_tmp[805757]
    {
      (805675 'move' ret[805660](805674 'deref' 1))
      gotoReturn _end_>=[805658] _end_>=[805658]
    }
    unknown call_tmp[805762] "expr temp" "maybe param" "maybe type" "temp"
    (805765 'move' call_tmp[805762](805546 call obj _mt[243] _arg1[805339]))
    unknown call_tmp[805767] "expr temp" "maybe param" "maybe type" "temp"
    (805770 'move' call_tmp[805767](805550 call obj _mt[243] _arg2[805340]))
    unknown call_tmp[805772] "expr temp" "maybe param" "maybe type" "temp"
    (805775 'move' call_tmp[805772](805554 call < call_tmp[805762] call_tmp[805767]))
    if call_tmp[805772]
    {
      (805680 'move' ret[805660](805679 'deref' 0))
      gotoReturn _end_>=[805658] _end_>=[805658]
    }
    unknown call_tmp[805777] "expr temp" "maybe param" "maybe type" "temp"
    (805780 'move' call_tmp[805777](805560 call bufDom _mt[243] _arg1[805339]))
    unknown call_tmp[805782] "expr temp" "maybe param" "maybe type" "temp"
    (805785 'move' call_tmp[805782](805564 call bufDom _mt[243] _arg2[805340]))
    unknown call_tmp[805787] "expr temp" "maybe param" "maybe type" "temp"
    (805790 'move' call_tmp[805787](805568 call > call_tmp[805777] call_tmp[805782]))
    if call_tmp[805787]
    {
      (805685 'move' ret[805660](805684 'deref' 1))
      gotoReturn _end_>=[805658] _end_>=[805658]
    }
    unknown call_tmp[805792] "expr temp" "maybe param" "maybe type" "temp"
    (805795 'move' call_tmp[805792](805574 call bufDom _mt[243] _arg1[805339]))
    unknown call_tmp[805797] "expr temp" "maybe param" "maybe type" "temp"
    (805800 'move' call_tmp[805797](805578 call bufDom _mt[243] _arg2[805340]))
    unknown call_tmp[805802] "expr temp" "maybe param" "maybe type" "temp"
    (805805 'move' call_tmp[805802](805582 call < call_tmp[805792] call_tmp[805797]))
    if call_tmp[805802]
    {
      (805690 'move' ret[805660](805689 'deref' 0))
      gotoReturn _end_>=[805658] _end_>=[805658]
    }
    unknown call_tmp[805807] "expr temp" "maybe param" "maybe type" "temp"
    (805810 'move' call_tmp[805807](805588 call buf _mt[243] _arg1[805339]))
    unknown call_tmp[805812] "expr temp" "maybe param" "maybe type" "temp"
    (805815 'move' call_tmp[805812](805592 call buf _mt[243] _arg2[805340]))
    unknown call_tmp[805817] "expr temp" "maybe param" "maybe type" "temp"
    (805820 'move' call_tmp[805817](805596 call > call_tmp[805807] call_tmp[805812]))
    if call_tmp[805817]
    {
      (805695 'move' ret[805660](805694 'deref' 1))
      gotoReturn _end_>=[805658] _end_>=[805658]
    }
    unknown call_tmp[805822] "expr temp" "maybe param" "maybe type" "temp"
    (805825 'move' call_tmp[805822](805602 call buf _mt[243] _arg1[805339]))
    unknown call_tmp[805827] "expr temp" "maybe param" "maybe type" "temp"
    (805830 'move' call_tmp[805827](805606 call buf _mt[243] _arg2[805340]))
    unknown call_tmp[805832] "expr temp" "maybe param" "maybe type" "temp"
    (805835 'move' call_tmp[805832](805610 call < call_tmp[805822] call_tmp[805827]))
    if call_tmp[805832]
    {
      (805700 'move' ret[805660](805699 'deref' 0))
      gotoReturn _end_>=[805658] _end_>=[805658]
    }
    unknown call_tmp[805837] "expr temp" "maybe param" "maybe type" "temp"
    (805840 'move' call_tmp[805837](805616 call cur _mt[243] _arg1[805339]))
    unknown call_tmp[805842] "expr temp" "maybe param" "maybe type" "temp"
    (805845 'move' call_tmp[805842](805620 call cur _mt[243] _arg2[805340]))
    unknown call_tmp[805847] "expr temp" "maybe param" "maybe type" "temp"
    (805850 'move' call_tmp[805847](805624 call > call_tmp[805837] call_tmp[805842]))
    if call_tmp[805847]
    {
      (805705 'move' ret[805660](805704 'deref' 1))
      gotoReturn _end_>=[805658] _end_>=[805658]
    }
    unknown call_tmp[805852] "expr temp" "maybe param" "maybe type" "temp"
    (805855 'move' call_tmp[805852](805630 call cur _mt[243] _arg1[805339]))
    unknown call_tmp[805857] "expr temp" "maybe param" "maybe type" "temp"
    (805860 'move' call_tmp[805857](805634 call cur _mt[243] _arg2[805340]))
    unknown call_tmp[805862] "expr temp" "maybe param" "maybe type" "temp"
    (805865 'move' call_tmp[805862](805638 call < call_tmp[805852] call_tmp[805857]))
    if call_tmp[805862]
    {
      (805710 'move' ret[805660](805709 'deref' 0))
      gotoReturn _end_>=[805658] _end_>=[805658]
    }
    (805715 'move' ret[805660](805714 'deref' 1))
    label _end_>=[805658]
    (805662 return ret[805660])
  }
  where {
    unknown call_tmp[805867] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (805870 'move' call_tmp[805867](805343 'typeof' _arg1[805339]))
    unknown call_tmp[805872] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (805875 'move' call_tmp[805872](805345 'typeof' _arg2[805340]))
    unknown call_tmp[805877] "expr temp" "maybe param" "maybe type" "temp"
    (805880 'move' call_tmp[805877](805347 call == call_tmp[805867] call_tmp[805872]))
    unknown call_tmp[805882] "expr temp" "maybe param" "maybe type" "temp"
    (805885 'move' call_tmp[805882](805498 call chpl_fields_are_comparable[805349] _arg1[805339] _arg2[805340]))
    (805502 '&' call_tmp[805877] call_tmp[805882])
  }
  function =[805887](ref arg _arg1[805889]:SparseIndexBuffer[148188](?), const?  ref arg _arg2[805890]:SparseIndexBuffer[148188](?)) : void[4] "assignop" "compiler generated" "last resort"
  {
    unknown call_tmp[805949] "expr temp" "maybe param" "maybe type" "temp"
    (805952 'move' call_tmp[805949](805900 call obj _mt[243] _arg1[805889]))
    unknown call_tmp[805956] "expr temp" "maybe param" "maybe type" "temp"
    (805959 'move' call_tmp[805956](805904 call obj _mt[243] _arg2[805890]))
    (805908 call = call_tmp[805949] call_tmp[805956])
    (805941 'end of statement')
    unknown call_tmp[805963] "expr temp" "maybe param" "maybe type" "temp"
    (805966 'move' call_tmp[805963](805910 call bufDom _mt[243] _arg1[805889]))
    unknown call_tmp[805970] "expr temp" "maybe param" "maybe type" "temp"
    (805973 'move' call_tmp[805970](805914 call bufDom _mt[243] _arg2[805890]))
    (805918 call = call_tmp[805963] call_tmp[805970])
    (805942 'end of statement')
    unknown call_tmp[805977] "expr temp" "maybe param" "maybe type" "temp"
    (805980 'move' call_tmp[805977](805920 call buf _mt[243] _arg1[805889]))
    unknown call_tmp[805984] "expr temp" "maybe param" "maybe type" "temp"
    (805987 'move' call_tmp[805984](805924 call buf _mt[243] _arg2[805890]))
    (805928 call = call_tmp[805977] call_tmp[805984])
    (805943 'end of statement')
    unknown call_tmp[805991] "expr temp" "maybe param" "maybe type" "temp"
    (805994 'move' call_tmp[805991](805930 call cur _mt[243] _arg1[805889]))
    unknown call_tmp[805998] "expr temp" "maybe param" "maybe type" "temp"
    (806001 'move' call_tmp[805998](805934 call cur _mt[243] _arg2[805890]))
    (805938 call = call_tmp[805991] call_tmp[805998])
    (805945 return _void[55])
  }
  where {
    unknown call_tmp[806003] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (806006 'move' call_tmp[806003](805893 'typeof' _arg1[805889]))
    unknown call_tmp[806008] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (806011 'move' call_tmp[806008](805895 'typeof' _arg2[805890]))
    (805897 call == call_tmp[806003] call_tmp[806008])
  }
  function chpl__defaultHash[806013](arg r[806015]:SparseIndexBuffer[148188](?)) : _unknown[51] "compiler generated" "last resort"
  {
    unknown ret[806073] "RVV" "temp"
    unknown call_tmp[806080] "expr temp" "maybe param" "maybe type" "temp"
    (806083 'move' call_tmp[806080](806059 call cur _mt[243] r[806015]))
    unknown call_tmp[806085] "expr temp" "maybe param" "maybe type" "temp"
    (806088 'move' call_tmp[806085](806063 call chpl__defaultHash call_tmp[806080]))
    unknown call_tmp[806090] "expr temp" "maybe param" "maybe type" "temp"
    (806093 'move' call_tmp[806090](806050 call buf _mt[243] r[806015]))
    unknown call_tmp[806095] "expr temp" "maybe param" "maybe type" "temp"
    (806098 'move' call_tmp[806095](806054 call chpl__defaultHash call_tmp[806090]))
    unknown call_tmp[806100] "expr temp" "maybe param" "maybe type" "temp"
    (806103 'move' call_tmp[806100](806041 call bufDom _mt[243] r[806015]))
    unknown call_tmp[806105] "expr temp" "maybe param" "maybe type" "temp"
    (806108 'move' call_tmp[806105](806045 call chpl__defaultHash call_tmp[806100]))
    unknown call_tmp[806110] "expr temp" "maybe param" "maybe type" "temp"
    (806113 'move' call_tmp[806110](806032 call idxType _mt[243] r[806015]))
    unknown call_tmp[806115] "expr temp" "maybe param" "maybe type" "temp"
    (806118 'move' call_tmp[806115](806036 call chpl__defaultHash call_tmp[806110]))
    unknown call_tmp[806120] "expr temp" "maybe param" "maybe type" "temp"
    (806123 'move' call_tmp[806120](806023 call obj _mt[243] r[806015]))
    unknown call_tmp[806125] "expr temp" "maybe param" "maybe type" "temp"
    (806128 'move' call_tmp[806125](806027 call chpl__defaultHash call_tmp[806120]))
    unknown call_tmp[806130] "expr temp" "maybe param" "maybe type" "temp"
    (806133 'move' call_tmp[806130](806017 call rank _mt[243] r[806015]))
    unknown call_tmp[806135] "expr temp" "maybe param" "maybe type" "temp"
    (806138 'move' call_tmp[806135](806021 call chpl__defaultHash call_tmp[806130]))
    unknown call_tmp[806140] "expr temp" "maybe param" "maybe type" "temp"
    (806143 'move' call_tmp[806140](806029 call chpl__defaultHashCombine call_tmp[806125] call_tmp[806135] 2))
    unknown call_tmp[806145] "expr temp" "maybe param" "maybe type" "temp"
    (806148 'move' call_tmp[806145](806038 call chpl__defaultHashCombine call_tmp[806115] call_tmp[806140] 3))
    unknown call_tmp[806150] "expr temp" "maybe param" "maybe type" "temp"
    (806153 'move' call_tmp[806150](806047 call chpl__defaultHashCombine call_tmp[806105] call_tmp[806145] 4))
    unknown call_tmp[806155] "expr temp" "maybe param" "maybe type" "temp"
    (806158 'move' call_tmp[806155](806056 call chpl__defaultHashCombine call_tmp[806095] call_tmp[806150] 5))
    unknown call_tmp[806160] "expr temp" "maybe param" "maybe type" "temp"
    (806163 'move' call_tmp[806160](806065 call chpl__defaultHashCombine call_tmp[806085] call_tmp[806155] 6))
    (806078 'move' ret[806073](806077 'deref' call_tmp[806160]))
    (806075 return ret[806073])
  }
  type SparseIndexBuffer[148188](?) unknown rank[148006] "param" int(64)[13] val obj[148011]:BaseSparseDom[382253](?) BaseSparseDom[382253](?) unknown idxType[148027] "type variable"(148024 IfExpr (148017 call == rank[148006] 1) then
  { scopeless
    int(64)[13]
  } else
  { scopeless
    (148022 call * rank[148006] int(64)[13])
  } ) unknown bufDom[148035](148033 call chpl__buildDomainRuntimeType defaultDist[94050] 1) unknown buf[148046](148044 call chpl__buildArrayRuntimeType(148042 call chpl__ensureDomainExpr bufDom[148035]) idxType[148027]) val cur[148051]:int(64)[13] 0
  function BaseSparseDom[148665](?).getNNZ[148224](arg _mt[148669]:_MT[238], arg this[148667]:BaseSparseDom[148665](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    unknown ret[520025] "RVV" "temp"
    (148246 call halt "nnz queried on base class")
    (520027 return ret[520025])
  }
  { scopeless type
    int(64)[13]
  }
  function BaseSparseDom[148665](?).deinit[148254](arg _mt[148673]:_MT[238], arg this[148671]:BaseSparseDom[148665](?)) : _unknown[51] "destructor" "method" "primary method" "no return value for void"
  {
    (520029 return _void[55])
  }
  function BaseSparseDom[148665](?).dsiClear[148261](arg _mt[148677]:_MT[238], arg this[148675]:BaseSparseDom[148665](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (148282 call halt "clear not implemented for this distribution - BaseSparseDom")
    (520031 return _void[55])
  }
  function BaseSparseDom[148665](?).dsiBulkAdd[148300](arg _mt[148681]:_MT[238], arg this[148679]:BaseSparseDom[148665](?), arg inds[148297]:_array[133588](?), arg dataSorted[148303] :
  0 =
  0, arg isUnique[148307] :
  0 =
  0, arg preserveInds[148311] :
  1 =
  1, arg addOn[148315] :
  nilLocale[89939] =
  nilLocale[89939]) : _unknown[51] "compiler added where" "method" "primary method"
  {
    unknown ret[520035] "RVV" "temp"
    (148338 call halt "Bulk addition is not supported by this sparse domain")
    (481546 'end of statement')
    (520041 'move' ret[520035](520040 'coerce' 0 int(64)[13]))
    (520037 return ret[520035])
  }
  where {
    unknown call_tmp[668856] "expr temp" "maybe param" "maybe type" "temp"
    (668859 'move' call_tmp[668856](385773 call rank _mt[243] this[148679]))
    unknown call_tmp[668863] "expr temp" "maybe param" "maybe type" "temp"
    (668866 'move' call_tmp[668863](385778 call idxType _mt[243] this[148679]))
    unknown call_tmp[668868] "expr temp" "maybe param" "maybe type" "temp"
    (668871 'move' call_tmp[668868](148292 call chpl__buildIndexType call_tmp[668856] call_tmp[668863]))
    unknown call_tmp[668875] "expr temp" "maybe param" "maybe type" "temp"
    (668878 'move' call_tmp[668875](461809 call eltType _mt[243] inds[148297]))
    unknown call_tmp[668880] "expr temp" "maybe param" "maybe type" "temp"
    (668883 'move' call_tmp[668880](461813 call == call_tmp[668868] call_tmp[668875]))
    (461807 call & 1 call_tmp[668880])
  }
  { scopeless type
    int(64)[13]
  }
  function BaseSparseDom[148665](?).boundsCheck[148357](arg _mt[148685]:_MT[238], arg this[148683]:BaseSparseDom[148665](?), arg ind[148354] :
  unknown call_tmp[668887] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "method" "primary method" "no return value for void"
  {
    unknown ret[520045] "RVV" "temp"
    unknown call_tmp[668899] "expr temp" "maybe param" "maybe type" "temp"
    (668902 'move' call_tmp[668899](148416 call _cond_test 1))
    if call_tmp[668899]
    {
      unknown call_tmp[668906] "expr temp" "maybe param" "maybe type" "temp"
      (668909 'move' call_tmp[668906](360618 call parentDom _mt[243] this[148683]))
      unknown call_tmp[668913] "expr temp" "maybe param" "maybe type" "temp"
      (668916 'move' call_tmp[668913](148367 call(148362 call (partial) contains _mt[243] call_tmp[668906]) ind[148354]))
      unknown call_tmp[668918] "expr temp" "maybe param" "maybe type" "temp"
      (668921 'move' call_tmp[668918](148368 call ! call_tmp[668913]))
      unknown call_tmp[668923] "expr temp" "maybe param" "maybe type" "temp"
      (668926 'move' call_tmp[668923](148411 call _cond_test call_tmp[668918]))
      if call_tmp[668923]
      {
        unknown call_tmp[668930] "expr temp" "maybe param" "maybe type" "temp"
        (668933 'move' call_tmp[668930](385797 call parentDom _mt[243] this[148683]))
        (148409 call halt "Sparse domain/array index out of bounds: " ind[148354] " (expected to be within " call_tmp[668930] ")")
      }
    }
    (520047 return ret[520045])
  }
  { scopeless type
    void[4]
  }
  function BaseSparseDom[148665](?).dsiDim[148431](arg _mt[148689]:_MT[238], arg this[148687]:BaseSparseDom[148665](?), arg d[148428]:int(64)[13]) : _unknown[51] "method" "primary method"
  {
    unknown ret[520051] "RVV" "temp"
    unknown call_tmp[668937] "expr temp" "maybe param" "maybe type" "temp"
    (668940 'move' call_tmp[668937](360623 call parentDom _mt[243] this[148687]))
    unknown call_tmp[668944] "expr temp" "maybe param" "maybe type" "temp"
    (668947 'move' call_tmp[668944](148439 call(148434 call (partial) dim _mt[243] call_tmp[668937]) d[148428]))
    (520056 'move' ret[520051](520055 'deref' call_tmp[668944]))
    (520053 return ret[520051])
  }
  function BaseSparseDom[148665](?).dsiDims[148447](arg _mt[148693]:_MT[238], arg this[148691]:BaseSparseDom[148665](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[520060] "RVV" "temp"
    unknown call_tmp[668951] "expr temp" "maybe param" "maybe type" "temp"
    (668954 'move' call_tmp[668951](360628 call parentDom _mt[243] this[148691]))
    unknown call_tmp[668958] "expr temp" "maybe param" "maybe type" "temp"
    (668961 'move' call_tmp[668958](148454 call(148450 call (partial) dims _mt[243] call_tmp[668951])))
    (520065 'move' ret[520060](520064 'deref' call_tmp[668958]))
    (520062 return ret[520060])
  }
  function BaseSparseDom[148665](?).dsiNumIndices[148462](arg _mt[148697]:_MT[238], arg this[148695]:BaseSparseDom[148665](?)) : _unknown[51] "method" "primary method" "no parens"
  {
    unknown ret[520069] "RVV" "temp"
    unknown call_tmp[668965] "expr temp" "maybe param" "maybe type" "temp"
    (668968 'move' call_tmp[668965](148466 call(385802 call (partial) getNNZ _mt[243] this[148695])))
    (520074 'move' ret[520069](520073 'deref' call_tmp[668965]))
    (520071 return ret[520069])
  }
  function BaseSparseDom[148665](?).dsiSize[148474](arg _mt[148701]:_MT[238], arg this[148699]:BaseSparseDom[148665](?)) : _unknown[51] "method" "primary method" "no parens"
  {
    unknown ret[520078] "RVV" "temp"
    unknown call_tmp[668972] "expr temp" "maybe param" "maybe type" "temp"
    (668975 'move' call_tmp[668972](148478 call(385806 call (partial) getNNZ _mt[243] this[148699])))
    (520083 'move' ret[520078](520082 'deref' call_tmp[668972]))
    (520080 return ret[520078])
  }
  function BaseSparseDom[148665](?).dsiLow[148486](arg _mt[148705]:_MT[238], arg this[148703]:BaseSparseDom[148665](?)) : _unknown[51] "method" "primary method" "no parens"
  {
    unknown ret[520087] "RVV" "temp"
    unknown call_tmp[668979] "expr temp" "maybe param" "maybe type" "temp"
    (668982 'move' call_tmp[668979](360633 call parentDom _mt[243] this[148703]))
    unknown call_tmp[668986] "expr temp" "maybe param" "maybe type" "temp"
    (668989 'move' call_tmp[668986](148489 call low _mt[243] call_tmp[668979]))
    (520092 'move' ret[520087](520091 'deref' call_tmp[668986]))
    (520089 return ret[520087])
  }
  function BaseSparseDom[148665](?).dsiHigh[148499](arg _mt[148709]:_MT[238], arg this[148707]:BaseSparseDom[148665](?)) : _unknown[51] "method" "primary method" "no parens"
  {
    unknown ret[520096] "RVV" "temp"
    unknown call_tmp[668993] "expr temp" "maybe param" "maybe type" "temp"
    (668996 'move' call_tmp[668993](360638 call parentDom _mt[243] this[148707]))
    unknown call_tmp[669000] "expr temp" "maybe param" "maybe type" "temp"
    (669003 'move' call_tmp[669000](148502 call high _mt[243] call_tmp[668993]))
    (520101 'move' ret[520096](520100 'deref' call_tmp[669000]))
    (520098 return ret[520096])
  }
  function BaseSparseDom[148665](?).dsiStride[148512](arg _mt[148713]:_MT[238], arg this[148711]:BaseSparseDom[148665](?)) : _unknown[51] "method" "primary method" "no parens"
  {
    unknown ret[520105] "RVV" "temp"
    unknown call_tmp[669007] "expr temp" "maybe param" "maybe type" "temp"
    (669010 'move' call_tmp[669007](360643 call parentDom _mt[243] this[148711]))
    unknown call_tmp[669014] "expr temp" "maybe param" "maybe type" "temp"
    (669017 'move' call_tmp[669014](148515 call stride _mt[243] call_tmp[669007]))
    (520110 'move' ret[520105](520109 'deref' call_tmp[669014]))
    (520107 return ret[520105])
  }
  function BaseSparseDom[148665](?).dsiAlignment[148525](arg _mt[148717]:_MT[238], arg this[148715]:BaseSparseDom[148665](?)) : _unknown[51] "method" "primary method" "no parens"
  {
    unknown ret[520114] "RVV" "temp"
    unknown call_tmp[669021] "expr temp" "maybe param" "maybe type" "temp"
    (669024 'move' call_tmp[669021](360648 call parentDom _mt[243] this[148715]))
    unknown call_tmp[669028] "expr temp" "maybe param" "maybe type" "temp"
    (669031 'move' call_tmp[669028](148528 call alignment _mt[243] call_tmp[669021]))
    (520119 'move' ret[520114](520118 'deref' call_tmp[669028]))
    (520116 return ret[520114])
  }
  function BaseSparseDom[148665](?).dsiFirst[148538](arg _mt[148721]:_MT[238], arg this[148719]:BaseSparseDom[148665](?)) : _unknown[51] "method" "primary method" "no parens"
  {
    unknown ret[520123] "RVV" "temp"
    (148559 call halt "dsiFirst is not implemented")
    (481557 'end of statement')
    const _tmp[148566] "dead at end of block" "const" "insert auto destroy"
    unknown call_tmp[669035] "expr temp" "maybe param" "maybe type" "temp"
    (669038 'move' call_tmp[669035](385811 call rank _mt[243] this[148719]))
    unknown call_tmp[669042] "expr temp" "maybe param" "maybe type" "temp"
    (669045 'move' call_tmp[669042](385816 call idxType _mt[243] this[148719]))
    unknown call_tmp[669047] "expr temp" "maybe param" "maybe type" "temp"
    (669050 'move' call_tmp[669047](148564 call * call_tmp[669035] call_tmp[669042]))
    (543589 'default init var' _tmp[148566] call_tmp[669047])
    (148569 'end of statement')
    (520128 'move' ret[520123](520127 'deref' _tmp[148566]))
    gotoReturn _end_dsiFirst[520121] _end_dsiFirst[520121]
    (481558 'end of statement' _tmp[148566])
    label _end_dsiFirst[520121]
    (520125 return ret[520123])
  }
  function BaseSparseDom[148665](?).dsiLast[148577](arg _mt[148725]:_MT[238], arg this[148723]:BaseSparseDom[148665](?)) : _unknown[51] "method" "primary method" "no parens"
  {
    unknown ret[520134] "RVV" "temp"
    (148598 call halt "dsiLast not implemented")
    (481560 'end of statement')
    const _tmp[148605] "dead at end of block" "const" "insert auto destroy"
    unknown call_tmp[669054] "expr temp" "maybe param" "maybe type" "temp"
    (669057 'move' call_tmp[669054](385822 call rank _mt[243] this[148723]))
    unknown call_tmp[669061] "expr temp" "maybe param" "maybe type" "temp"
    (669064 'move' call_tmp[669061](385827 call idxType _mt[243] this[148723]))
    unknown call_tmp[669066] "expr temp" "maybe param" "maybe type" "temp"
    (669069 'move' call_tmp[669066](148603 call * call_tmp[669054] call_tmp[669061]))
    (543591 'default init var' _tmp[148605] call_tmp[669066])
    (148608 'end of statement')
    (520139 'move' ret[520134](520138 'deref' _tmp[148605]))
    gotoReturn _end_dsiLast[520132] _end_dsiLast[520132]
    (481561 'end of statement' _tmp[148605])
    label _end_dsiLast[520132]
    (520136 return ret[520134])
  }
  function BaseSparseDom[148665](?).dsiAlignedLow[148616](arg _mt[148729]:_MT[238], arg this[148727]:BaseSparseDom[148665](?)) : _unknown[51] "method" "primary method" "no parens"
  {
    unknown ret[520145] "RVV" "temp"
    unknown call_tmp[669073] "expr temp" "maybe param" "maybe type" "temp"
    (669076 'move' call_tmp[669073](360653 call parentDom _mt[243] this[148727]))
    unknown call_tmp[669080] "expr temp" "maybe param" "maybe type" "temp"
    (669083 'move' call_tmp[669080](148619 call alignedLow _mt[243] call_tmp[669073]))
    (520150 'move' ret[520145](520149 'deref' call_tmp[669080]))
    (520147 return ret[520145])
  }
  function BaseSparseDom[148665](?).dsiAlignedHigh[148629](arg _mt[148733]:_MT[238], arg this[148731]:BaseSparseDom[148665](?)) : _unknown[51] "method" "primary method" "no parens"
  {
    unknown ret[520154] "RVV" "temp"
    unknown call_tmp[669087] "expr temp" "maybe param" "maybe type" "temp"
    (669090 'move' call_tmp[669087](360658 call parentDom _mt[243] this[148731]))
    unknown call_tmp[669094] "expr temp" "maybe param" "maybe type" "temp"
    (669097 'move' call_tmp[669094](148632 call alignedHigh _mt[243] call_tmp[669087]))
    (520159 'move' ret[520154](520158 'deref' call_tmp[669094]))
    (520156 return ret[520154])
  }
  function BaseSparseDom[148665](?).dsiMakeIndexBuffer[148644](arg _mt[148737]:_MT[238], arg this[148735]:BaseSparseDom[148665](?), arg size[148642]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[520163] "RVV" "temp"
    unknown call_tmp[669101] "expr temp" "maybe param" "maybe type" "temp"
    (669104 'move' call_tmp[669101](148649 call rank _mt[243] this[148735]))
    unknown call_tmp[669106] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (669109 'move' call_tmp[669106](747894 'new' SparseIndexBuffer[148188](?)(rank = call_tmp[669101])(obj = this[148735])(size = size[148642])))
    (520168 'move' ret[520163](520167 'deref' call_tmp[669106]))
    (520165 return ret[520163])
  }
  function BaseSparseDom[148665](?).init[802173](arg _mt[802175]:_MT[238], arg this[802176]:BaseSparseDom[148665](?), param arg rank[802187]:int(64)[13], arg idxType[802199]:_any[178](?), in arg parentDom[802208]:_any[178](?)) : void[4] "compiler generated" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown super_tmp[802219] "temporary of super field" "temp"
    (802221 'move' super_tmp[802219](802218 '.v' this[802176] c"super"))
    (802186 call(802184 call (partial) init _mt[243] super_tmp[802219]))
    (802254 'end of statement')
    unknown tmp[802224] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[802258] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[802270] "expr temp" "maybe param" "maybe type" "temp"
      (802273 'move' call_tmp[802270](802226 '.v' this[802176] c"super"))
      (802262 'move' call_type_tmp[802258](802229 'typeof' call_tmp[802270]))
    }
    (802230 'move' tmp[802224] call_type_tmp[802258])
    unknown call_tmp[802275] "maybe param" "maybe type" "temp"
    (802278 'move' call_tmp[802275](802235 'cast' tmp[802224] this[802176]))
    unknown chpl__thisAsParent[802232] "dead at end of block" "insert auto destroy" "temp"
    (802266 'init var' chpl__thisAsParent[802232] call_tmp[802275] tmp[802224])
    (802238 'setcid' chpl__thisAsParent[802232])
    unknown call_tmp[802280] "expr temp" "maybe param" "maybe type" "temp"
    (802283 'move' call_tmp[802280](802241 call _cast int(64)[13] rank[802187]))
    (802243 'init field' this[802176] c"rank" call_tmp[802280])
    (802255 'end of statement')
    (802246 'init field' this[802176] c"idxType" idxType[802199])
    (802249 'init field' this[802176] c"parentDom" parentDom[802208])
    (802256 'end of statement')
    (802252 'setcid' this[802176])
    (802264 return _void[55])
  }
  function BaseSparseDom[148665](?).super[806165](arg _mt[806167]:_MT[238], arg this[806169]:BaseSparseDom[148665](?)) : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[806179] "RVV" "temp"
    unknown call_tmp[806186] "expr temp" "maybe param" "maybe type" "temp"
    (806189 'move' call_tmp[806186](806173 '.v' this[806169] c"super"))
    (806184 'move' ret[806179](806183 'deref' call_tmp[806186]))
    (806181 return ret[806179])
  }
  function BaseSparseDom[806196](?).rank[806191](arg _mt[806193]:_MT[238], arg this[806198]:BaseSparseDom[806196](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[806229] "RVV" "param" "temp"
    unknown borrowOfThis[806200]
    (806221 'end of statement')
    (806202 'move' borrowOfThis[806200](806205 call _cast _borrowedNonNilable[214](?) this[806198]))
    (806222 'end of statement' borrowOfThis[806200])
    unknown call_tmp[806243] "expr temp" "maybe param" "maybe type" "temp"
    (806246 'move' call_tmp[806243](806211 'is bound' borrowOfThis[806200] c"rank"))
    if call_tmp[806243]
    {
      unknown call_tmp[806248] "expr temp" "maybe param" "maybe type" "temp"
      (806251 'move' call_tmp[806248](806210 '.' borrowOfThis[806200] c"rank"))
      (806234 'move' ret[806229](806233 'deref' call_tmp[806248]))
      gotoReturn _end_rank[806227] _end_rank[806227]
      (806224 'end of statement' borrowOfThis[806200])
    }
    {
      (806239 'move' ret[806229](806238 'deref' ?[260]))
      gotoReturn _end_rank[806227] _end_rank[806227]
    }
    label _end_rank[806227]
    (806231 return ret[806229])
  }
  function BaseSparseDom[806196](?).rank[806253](arg _mt[806255]:_MT[238], arg this[806257]:BaseSparseDom[806196](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[806288] "RVV" "param" "temp"
    unknown borrowOfThis[806259] "type variable"
    (806280 'end of statement')
    (806261 'move' borrowOfThis[806259](806264 call _cast _borrowedNonNilable[214](?) this[806257]))
    (806281 'end of statement' borrowOfThis[806259])
    unknown call_tmp[806302] "expr temp" "maybe param" "maybe type" "temp"
    (806305 'move' call_tmp[806302](806270 'is bound' borrowOfThis[806259] c"rank"))
    if call_tmp[806302]
    {
      unknown call_tmp[806307] "expr temp" "maybe param" "maybe type" "temp"
      (806310 'move' call_tmp[806307](806269 '.' borrowOfThis[806259] c"rank"))
      (806293 'move' ret[806288](806292 'deref' call_tmp[806307]))
      gotoReturn _end_rank[806286] _end_rank[806286]
      (806283 'end of statement' borrowOfThis[806259])
    }
    {
      (806298 'move' ret[806288](806297 'deref' ?[260]))
      gotoReturn _end_rank[806286] _end_rank[806286]
    }
    label _end_rank[806286]
    (806290 return ret[806288])
  }
  function BaseSparseDom[806196](?).idxType[806312](arg _mt[806314]:_MT[238], arg this[806316]:BaseSparseDom[806196](?)) type : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[806351] "RVV" "temp" "type variable"
    unknown borrowOfThis[806318]
    (806343 'end of statement')
    (806320 'move' borrowOfThis[806318](806323 call _cast _borrowedNonNilable[214](?) this[806316]))
    (806344 'end of statement' borrowOfThis[806318])
    unknown call_tmp[806365] "expr temp" "maybe param" "maybe type" "temp"
    (806368 'move' call_tmp[806365](806333 'is bound' borrowOfThis[806318] c"idxType"))
    if call_tmp[806365]
    {
      unknown call_tmp[806370] "expr temp" "maybe param" "maybe type" "temp"
      (806373 'move' call_tmp[806370](806328 '.v' borrowOfThis[806318] c"idxType"))
      unknown call_tmp[806375] "expr temp" "maybe param" "maybe type" "temp"
      (806378 'move' call_tmp[806375](806329 call chpl_checkLegalTypeFieldAccessor this[806316] call_tmp[806370] "idxType"))
      (806356 'move' ret[806351](806355 'deref' call_tmp[806375]))
      gotoReturn _end_idxType[806349] _end_idxType[806349]
      (806346 'end of statement' borrowOfThis[806318])
    }
    {
      (806361 'move' ret[806351](806360 'deref' _uninstantiated[258]))
      gotoReturn _end_idxType[806349] _end_idxType[806349]
    }
    label _end_idxType[806349]
    (806353 return ret[806351])
  }
  function BaseSparseDom[806196](?).idxType[806380](arg _mt[806382]:_MT[238], arg this[806384]:BaseSparseDom[806196](?)) type : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[806419] "RVV" "temp" "type variable"
    unknown borrowOfThis[806386] "type variable"
    (806411 'end of statement')
    (806388 'move' borrowOfThis[806386](806391 call _cast _borrowedNonNilable[214](?) this[806384]))
    (806412 'end of statement' borrowOfThis[806386])
    unknown call_tmp[806433] "expr temp" "maybe param" "maybe type" "temp"
    (806436 'move' call_tmp[806433](806401 'is bound' borrowOfThis[806386] c"idxType"))
    if call_tmp[806433]
    {
      unknown call_tmp[806438] "expr temp" "maybe param" "maybe type" "temp"
      (806441 'move' call_tmp[806438](806396 '.v' borrowOfThis[806386] c"idxType"))
      unknown call_tmp[806443] "expr temp" "maybe param" "maybe type" "temp"
      (806446 'move' call_tmp[806443](806397 call chpl_checkLegalTypeFieldAccessor this[806384] call_tmp[806438] "idxType"))
      (806424 'move' ret[806419](806423 'deref' call_tmp[806443]))
      gotoReturn _end_idxType[806417] _end_idxType[806417]
      (806414 'end of statement' borrowOfThis[806386])
    }
    {
      (806429 'move' ret[806419](806428 'deref' _uninstantiated[258]))
      gotoReturn _end_idxType[806417] _end_idxType[806417]
    }
    label _end_idxType[806417]
    (806421 return ret[806419])
  }
  function BaseSparseDom[148665](?).parentDom[806448](arg _mt[806450]:_MT[238], arg this[806452]:BaseSparseDom[148665](?)) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[806462] "RVV" "temp"
    unknown call_tmp[806469] "expr temp" "maybe param" "maybe type" "temp"
    (806472 'move' call_tmp[806469](806456 '.' this[806452] c"parentDom"))
    (806467 'move' ret[806462](806466 'addr of' call_tmp[806469]))
    (806464 return ret[806462])
  }
  function BaseSparseDom[148665](?).writeThis[806474](arg _mt[806478]:_MT[238], arg this[806476]:BaseSparseDom[148665](?), arg f[806477]:_any[178](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (806483 call writeThisDefaultImpl f[806477] this[806476])
    (806488 return _void[55])
  }
  function BaseSparseDom[148665](?).readThis[806490](arg _mt[806494]:_MT[238], arg this[806492]:BaseSparseDom[148665](?), arg f[806493]:_any[178](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (806498 call readThisDefaultImpl f[806493] this[806492])
    (806504 return _void[55])
  }
  type BaseSparseDom[148665](?) val super[355672]:BaseDom[146725] "super class" unknown rank[148211] "param" int(64)[13] unknown idxType[148215] "type variable" unknown parentDom[148218]
  type BaseSparseDom[806196](?)
  type BaseSparseDom[382253](?)
  function BaseAssociativeDom[148812].deinit[148745](arg _mt[148816]:_MT[238], arg this[148814]:BaseAssociativeDom[148812]) : _unknown[51] "destructor" "method" "primary method" "no return value for void"
  {
    (520170 return _void[55])
  }
  function BaseAssociativeDom[148812].dsiClear[148752](arg _mt[148820]:_MT[238], arg this[148818]:BaseAssociativeDom[148812]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (148773 call halt "clear not implemented for this distribution")
    (520172 return _void[55])
  }
  function BaseAssociativeDom[148812].dsiAdd[148782](arg _mt[148824]:_MT[238], arg this[148822]:BaseAssociativeDom[148812], in arg idx[148780]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[520176] "RVV" "temp"
    (148803 call compilerError "Index addition is not supported by this domain")
    (481567 'end of statement')
    (520181 'move' ret[520176](520180 'deref' 0))
    (520178 return ret[520176])
  }
  function BaseAssociativeDom[148812].super[806506](arg _mt[806508]:_MT[238], arg this[806510]:BaseAssociativeDom[148812]) : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[806520] "RVV" "temp"
    unknown call_tmp[806527] "expr temp" "maybe param" "maybe type" "temp"
    (806530 'move' call_tmp[806527](806514 '.v' this[806510] c"super"))
    (806525 'move' ret[806520](806524 'deref' call_tmp[806527]))
    (806522 return ret[806520])
  }
  function BaseAssociativeDom[148812].init[806532](arg _mt[806534]:_MT[238], arg this[806535]:BaseAssociativeDom[148812]) : void[4] "compiler generated" "inline" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown super_tmp[806548] "temporary of super field" "temp"
    (806550 'move' super_tmp[806548](806547 '.v' this[806535] c"super"))
    (806545 call(806543 call (partial) init _mt[243] super_tmp[806548]))
    (806571 'end of statement')
    unknown tmp[806553] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[806574] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[806586] "expr temp" "maybe param" "maybe type" "temp"
      (806589 'move' call_tmp[806586](806555 '.v' this[806535] c"super"))
      (806578 'move' call_type_tmp[806574](806558 'typeof' call_tmp[806586]))
    }
    (806559 'move' tmp[806553] call_type_tmp[806574])
    unknown call_tmp[806591] "maybe param" "maybe type" "temp"
    (806594 'move' call_tmp[806591](806564 'cast' tmp[806553] this[806535]))
    unknown chpl__thisAsParent[806561] "dead at end of block" "insert auto destroy" "temp"
    (806582 'init var' chpl__thisAsParent[806561] call_tmp[806591] tmp[806553])
    (806567 'setcid' chpl__thisAsParent[806561])
    (806572 'end of statement')
    (806569 'setcid' this[806535])
    (806580 return _void[55])
  }
  function BaseAssociativeDom[148812].writeThis[806596](arg _mt[806600]:_MT[238], arg this[806598]:BaseAssociativeDom[148812], arg f[806599]:_any[178](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (806605 call writeThisDefaultImpl f[806599] this[806598])
    (806610 return _void[55])
  }
  function BaseAssociativeDom[148812].readThis[806612](arg _mt[806616]:_MT[238], arg this[806614]:BaseAssociativeDom[148812], arg f[806615]:_any[178](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (806620 call readThisDefaultImpl f[806615] this[806614])
    (806626 return _void[55])
  }
  type BaseAssociativeDom[148812] val super[355676]:BaseDom[146725] "super class"
  type BaseAssociativeDom[382248](?)
  function BaseArr[149541].chpl__rvfMe[148842](arg _mt[149545]:_MT[238], arg this[149543]:BaseArr[149541]) param : _unknown[51] "method" "primary method"
  {
    unknown ret[520185] "RVV" "param" "temp"
    (520190 'move' ret[520185](520189 'deref' 0))
    (520187 return ret[520185])
  }
  function BaseArr[149541].isSliceArrayView[148852](arg _mt[149549]:_MT[238], arg this[149547]:BaseArr[149541]) param : _unknown[51] "method" "primary method"
  {
    unknown ret[520194] "RVV" "param" "temp"
    (520199 'move' ret[520194](520198 'deref' 0))
    (520196 return ret[520194])
  }
  function BaseArr[149541].isRankChangeArrayView[148862](arg _mt[149553]:_MT[238], arg this[149551]:BaseArr[149541]) param : _unknown[51] "method" "primary method"
  {
    unknown ret[520203] "RVV" "param" "temp"
    (520208 'move' ret[520203](520207 'deref' 0))
    (520205 return ret[520203])
  }
  function BaseArr[149541].isReindexArrayView[148872](arg _mt[149557]:_MT[238], arg this[149555]:BaseArr[149541]) param : _unknown[51] "method" "primary method"
  {
    unknown ret[520212] "RVV" "param" "temp"
    (520217 'move' ret[520212](520216 'deref' 0))
    (520214 return ret[520212])
  }
  function BaseArr[149541].deinit[148882](arg _mt[149561]:_MT[238], arg this[149559]:BaseArr[149541]) : _unknown[51] "destructor" "method" "primary method" "no return value for void"
  {
    (520219 return _void[55])
  }
  function BaseArr[149541].dsiStaticFastFollowCheck[148891](arg _mt[149565]:_MT[238], arg this[149563]:BaseArr[149541], arg leadType[148889]:_any[178](?)) param : _unknown[51] "method" "primary method"
  {
    unknown ret[520223] "RVV" "param" "temp"
    (520228 'move' ret[520223](520227 'deref' 0))
    (520225 return ret[520223])
  }
  function BaseArr[149541].dsiGetBaseDom[148901](arg _mt[149569]:_MT[238], arg this[149567]:BaseArr[149541]) : _unknown[51] "method" "primary method"
  {
    unknown ret[520232] "RVV" "temp"
    (148924 call halt "internal error: dsiGetBaseDom is not implemented")
    (481574 'end of statement')
    unknown ret[148929] "dead at end of block" "insert auto destroy" "unsafe"
    (543593 'default init var' ret[148929] unmanaged BaseDom[415405])
    (148932 'end of statement')
    (520238 'move' ret[520232](520237 'coerce' ret[148929] unmanaged BaseDom[415405]))
    gotoReturn _end_dsiGetBaseDom[520230] _end_dsiGetBaseDom[520230]
    (481575 'end of statement' ret[148929])
    label _end_dsiGetBaseDom[520230]
    (520234 return ret[520232])
  }
  { scopeless type
    unmanaged BaseDom[415405]
  }
  function BaseArr[149541].remove[148945](arg _mt[149573]:_MT[238], arg this[149571]:BaseArr[149541], param arg rmFromList[148942]:bool[10]) : _unknown[51] "dont disable remote value forwarding" "method" "primary method"
  {
    unknown ret[520244] "RVV" "temp"
    unknown ret_arr[148948] "dead at end of block" "insert auto destroy"
    (543595 'init var' ret_arr[148948] this[149571])
    (148951 'end of statement')
    unknown ret_dom[148957] "dead at end of block" "insert auto destroy"
    (543597 'init var' ret_dom[148957] nil[44] unmanaged BaseDom?[415465])
    (148960 'end of statement')
    unknown rm_dom[148962] "dead at end of block" "insert auto destroy"
    (543599 'init var' rm_dom[148962] 0)
    (148965 'end of statement')
    unknown call_tmp[669113] "maybe param" "maybe type" "temp"
    (669116 'move' call_tmp[669113](148968 call(385843 call (partial) dsiGetBaseDom _mt[243] this[149571])))
    unknown dom[148969] "dead at end of block" "insert auto destroy"
    (543601 'init var' dom[148969] call_tmp[669113])
    (148972 'end of statement')
    unknown call_tmp[669120] "expr temp" "maybe param" "maybe type" "temp"
    (669123 'move' call_tmp[669120](148983 call _to_unmanaged this[149571]))
    unknown call_tmp[669125] "expr temp" "maybe param" "maybe type" "temp"
    (669128 'move' call_tmp[669125](148986 call(148977 call (partial) remove_arr _mt[243] dom[148969]) call_tmp[669120] rmFromList[148942]))
    (148987 call = rm_dom[148962] call_tmp[669125])
    (481577 'end of statement' rm_dom[148962] dom[148969])
    unknown call_tmp[669130] "expr temp" "maybe param" "maybe type" "temp"
    (669133 'move' call_tmp[669130](148996 call _cond_test rm_dom[148962]))
    if call_tmp[669130]
    {
      (148993 call = ret_dom[148957] dom[148969])
      (481580 'end of statement' ret_dom[148957] dom[148969])
    }
    unknown call_tmp[669135] "expr temp" "maybe param" "maybe type" "temp"
    (669138 'move' call_tmp[669135](149004 call _build_tuple ret_arr[148948] ret_dom[148957]))
    (520249 'move' ret[520244](520248 'deref' call_tmp[669135]))
    gotoReturn _end_remove[520242] _end_remove[520242]
    (481583 'end of statement' ret_arr[148948] ret_dom[148957])
    label _end_remove[520242]
    (520246 return ret[520244])
  }
  function BaseArr[149541].dsiElementInitializationComplete[149012](arg _mt[149577]:_MT[238], arg this[149575]:BaseArr[149541]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (149033 call halt "dsiElementInitializationComplete must be defined")
    (520253 return _void[55])
  }
  function BaseArr[149541].dsiElementDeinitializationComplete[149040](arg _mt[149581]:_MT[238], arg this[149579]:BaseArr[149541]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (149061 call halt "dsiElementDeinitializationComplete must be defined")
    (520255 return _void[55])
  }
  function BaseArr[149541].dsiDestroyArr[149072](arg _mt[149585]:_MT[238], arg this[149583]:BaseArr[149541], arg deinitElts[149069]:bool[10]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (149093 call halt "dsiDestroyArr must be defined")
    (520257 return _void[55])
  }
  function BaseArr[149541].dsiReallocate[149104](arg _mt[149589]:_MT[238], arg this[149587]:BaseArr[149541], arg d[149101]:_domain[125902](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (149125 call halt "reallocating not supported for this array type")
    (520259 return _void[55])
  }
  function BaseArr[149541].dsiPostReallocate[149132](arg _mt[149593]:_MT[238], arg this[149591]:BaseArr[149541]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (520261 return _void[55])
  }
  function BaseArr[149541]._purge[149143](arg _mt[149597]:_MT[238], arg this[149595]:BaseArr[149541], arg ind[149140]:int(64)[13]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (149164 call halt "purging not supported for this array type")
    (520263 return _void[55])
  }
  function BaseArr[149541]._resize[149175](arg _mt[149601]:_MT[238], arg this[149599]:BaseArr[149541], arg length[149172]:int(64)[13], arg old_map[149177]:_any[178](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (149198 call halt "resizing not supported for this array type")
    (520265 return _void[55])
  }
  function BaseArr[149541].sparseShiftArray[149207](arg _mt[149605]:_MT[238], arg this[149603]:BaseArr[149541], arg shiftrange[149205]:_any[178](?), arg initrange[149209]:_any[178](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (149230 call halt "sparseGrowDomain not supported for non-sparse arrays")
    (520267 return _void[55])
  }
  function BaseArr[149541].sparseShiftArrayBack[149239](arg _mt[149609]:_MT[238], arg this[149607]:BaseArr[149541], arg shiftrange[149237]:_any[178](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (149260 call halt "sparseShiftArrayBack not supported for non-sparse arrays")
    (520269 return _void[55])
  }
  function BaseArr[149541].sparseBulkShiftArray[149269](arg _mt[149613]:_MT[238], arg this[149611]:BaseArr[149541], arg shiftMap[149267]:_any[178](?), arg oldnnz[149271]:_any[178](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (149292 call halt "sparseBulkShiftArray not supported for non-sparse arrays")
    (520271 return _void[55])
  }
  function BaseArr[149541]._defaultInitSlot[149303](arg _mt[149617]:_MT[238], arg this[149615]:BaseArr[149541], arg slot[149300]:int(64)[13]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (149324 call halt "_defaultInitSlot() not supported for non-associative arrays")
    (520273 return _void[55])
  }
  function BaseArr[149541]._deinitSlot[149335](arg _mt[149621]:_MT[238], arg this[149619]:BaseArr[149541], arg slot[149332]:int(64)[13]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (149356 call halt "_deinitSlot() not supported for non-associative arrays")
    (520275 return _void[55])
  }
  function BaseArr[149541]._startRehash[149367](arg _mt[149625]:_MT[238], arg this[149623]:BaseArr[149541], arg newSize[149364]:int(64)[13]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (149388 call halt "_startRehash() not supported for non-associative arrays")
    (520277 return _void[55])
  }
  function BaseArr[149541]._finishRehash[149399](arg _mt[149629]:_MT[238], arg this[149627]:BaseArr[149541], arg oldSize[149396]:int(64)[13]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (149420 call halt "_finishRehash() not supported for non-associative arrays")
    (520279 return _void[55])
  }
  function BaseArr[149541]._moveElementDuringRehash[149431](arg _mt[149633]:_MT[238], arg this[149631]:BaseArr[149541], arg oldslot[149428]:int(64)[13], arg newslot[149434]:int(64)[13]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (149456 call halt "_moveElementDuringRehash() not supported for non-associative arrays")
    (520281 return _void[55])
  }
  function BaseArr[149541].dsiSupportsAlignedFollower[149463](arg _mt[149637]:_MT[238], arg this[149635]:BaseArr[149541]) param : _unknown[51] "method" "primary method"
  {
    unknown ret[520285] "RVV" "param" "temp"
    (520290 'move' ret[520285](520289 'deref' 0))
    (520287 return ret[520285])
  }
  function BaseArr[149541].dsiSupportsPrivatization[149473](arg _mt[149641]:_MT[238], arg this[149639]:BaseArr[149541]) param : _unknown[51] "method" "primary method"
  {
    unknown ret[520294] "RVV" "param" "temp"
    (520299 'move' ret[520294](520298 'deref' 0))
    (520296 return ret[520294])
  }
  function BaseArr[149541].dsiRequiresPrivatization[149483](arg _mt[149645]:_MT[238], arg this[149643]:BaseArr[149541]) param : _unknown[51] "method" "primary method"
  {
    unknown ret[520303] "RVV" "param" "temp"
    (520308 'move' ret[520303](520307 'deref' 0))
    (520305 return ret[520303])
  }
  function BaseArr[149541].dsiDisplayRepresentation[149493](arg _mt[149649]:_MT[238], arg this[149647]:BaseArr[149541]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (149498 call writeln "<no way to display representation>")
    (520310 return _void[55])
  }
  function BaseArr[415303](?).isDefaultRectangular[149505](arg _mt[149653]:_MT[238], arg this[149651]:BaseArr[415303](?)) param : _unknown[51] "method" "primary method"
  {
    unknown ret[520314] "RVV" "param" "temp"
    (520319 'move' ret[520314](520318 'deref' 0))
    (520316 return ret[520314])
  }
  function BaseArr[149541].isDefaultRectangular[149515](arg _mt[149657]:_MT[238], arg this[149655]:BaseArr[149541]) param : _unknown[51] "method" "primary method"
  {
    unknown ret[520323] "RVV" "param" "temp"
    (520328 'move' ret[520323](520327 'deref' 0))
    (520325 return ret[520323])
  }
  function BaseArr[149541].doiCanBulkTransferRankChange[149525](arg _mt[149661]:_MT[238], arg this[149659]:BaseArr[149541]) param : _unknown[51] "method" "primary method"
  {
    unknown ret[520332] "RVV" "param" "temp"
    (520337 'move' ret[520332](520336 'deref' 0))
    (520334 return ret[520332])
  }
  function BaseArr[149541].decEltCountsIfNeeded[149535](arg _mt[149665]:_MT[238], arg this[149663]:BaseArr[149541]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (520339 return _void[55])
  }
  function BaseArr[149541].super[806628](arg _mt[806630]:_MT[238], arg this[806632]:BaseArr[149541]) : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[806642] "RVV" "temp"
    unknown call_tmp[806649] "expr temp" "maybe param" "maybe type" "temp"
    (806652 'move' call_tmp[806649](806636 '.v' this[806632] c"super"))
    (806647 'move' ret[806642](806646 'deref' call_tmp[806649]))
    (806644 return ret[806642])
  }
  function BaseArr[149541].pid[806654](arg _mt[806656]:_MT[238], arg this[806658]:BaseArr[149541]) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[806668] "RVV" "temp"
    unknown call_tmp[806675] "expr temp" "maybe param" "maybe type" "temp"
    (806678 'move' call_tmp[806675](806662 '.' this[806658] c"pid"))
    (806673 'move' ret[806668](806672 'addr of' call_tmp[806675]))
    (806670 return ret[806668])
  }
  function BaseArr[149541]._decEltRefCounts[806680](arg _mt[806682]:_MT[238], arg this[806684]:BaseArr[149541]) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[806694] "RVV" "temp"
    unknown call_tmp[806701] "expr temp" "maybe param" "maybe type" "temp"
    (806704 'move' call_tmp[806701](806688 '.' this[806684] c"_decEltRefCounts"))
    (806699 'move' ret[806694](806698 'addr of' call_tmp[806701]))
    (806696 return ret[806694])
  }
  function BaseArr[149541].init[806706](arg _mt[806708]:_MT[238], arg this[806709]:BaseArr[149541], in arg pid[806720]:int(64)[13] :
  int(64)[13] =
  nullPid[113712], in arg _decEltRefCounts[806735]:bool[10] :
  bool[10] =
  0) : void[4] "compiler generated" "inline" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown super_tmp[806752] "temporary of super field" "temp"
    (806754 'move' super_tmp[806752](806751 '.v' this[806709] c"super"))
    (806719 call(806717 call (partial) init _mt[243] super_tmp[806752]))
    (806781 'end of statement')
    unknown tmp[806757] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[806785] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[806797] "expr temp" "maybe param" "maybe type" "temp"
      (806800 'move' call_tmp[806797](806759 '.v' this[806709] c"super"))
      (806789 'move' call_type_tmp[806785](806762 'typeof' call_tmp[806797]))
    }
    (806763 'move' tmp[806757] call_type_tmp[806785])
    unknown call_tmp[806802] "maybe param" "maybe type" "temp"
    (806805 'move' call_tmp[806802](806768 'cast' tmp[806757] this[806709]))
    unknown chpl__thisAsParent[806765] "dead at end of block" "insert auto destroy" "temp"
    (806793 'init var' chpl__thisAsParent[806765] call_tmp[806802] tmp[806757])
    (806771 'setcid' chpl__thisAsParent[806765])
    (806773 'init field' this[806709] c"pid" pid[806720])
    (806782 'end of statement')
    (806776 'init field' this[806709] c"_decEltRefCounts" _decEltRefCounts[806735])
    (806783 'end of statement')
    (806779 'setcid' this[806709])
    (806791 return _void[55])
  }
  type BaseArr[149541] val super[355664]:object[22] "super class" val pid[148830]:int(64)[13] nullPid[113712] int(64)[13] val _decEltRefCounts[148836]:bool[10] 0 bool[10]
  type unmanaged BaseArr?[415486]
  type BaseArr?[415483](?)
  type unmanaged BaseArr[415453]
  type BaseArr[415303](?)
  type BaseArr[382320](?)
  function AbsBaseArr[149697](?).decEltCountsIfNeeded[149676](arg _mt[149701]:_MT[238], arg this[149699]:AbsBaseArr[149697](?)) : _unknown[51] "method" "primary method" "method overrides" "no return value for void"
  {
    unknown call_tmp[669142] "expr temp" "maybe param" "maybe type" "temp"
    (669145 'move' call_tmp[669142](385857 call _decEltRefCounts _mt[243] this[149699]))
    unknown call_tmp[669147] "expr temp" "maybe param" "maybe type" "temp"
    (669150 'move' call_tmp[669147](149689 call _cond_test call_tmp[669142]))
    if call_tmp[669147]
    {
      unknown call_tmp[669152] "expr temp" "maybe param" "maybe type" "temp"
      (669155 'move' call_tmp[669152](149683 call _to_unmanaged this[149699]))
      unknown call_tmp[669159] "expr temp" "maybe param" "maybe type" "temp"
      (669162 'move' call_tmp[669159](385863 call eltType _mt[243] this[149699]))
      (149686 call chpl_decRefCountsForDomainsInArrayEltTypes call_tmp[669152] call_tmp[669159])
    }
    (520341 return _void[55])
  }
  function AbsBaseArr[149697](?).super[806807](arg _mt[806809]:_MT[238], arg this[806811]:AbsBaseArr[149697](?)) : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[806821] "RVV" "temp"
    unknown call_tmp[806828] "expr temp" "maybe param" "maybe type" "temp"
    (806831 'move' call_tmp[806828](806815 '.v' this[806811] c"super"))
    (806826 'move' ret[806821](806825 'deref' call_tmp[806828]))
    (806823 return ret[806821])
  }
  function AbsBaseArr[806838](?).eltType[806833](arg _mt[806835]:_MT[238], arg this[806840]:AbsBaseArr[806838](?)) type : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[806875] "RVV" "temp" "type variable"
    unknown borrowOfThis[806842]
    (806867 'end of statement')
    (806844 'move' borrowOfThis[806842](806847 call _cast _borrowedNonNilable[214](?) this[806840]))
    (806868 'end of statement' borrowOfThis[806842])
    unknown call_tmp[806889] "expr temp" "maybe param" "maybe type" "temp"
    (806892 'move' call_tmp[806889](806857 'is bound' borrowOfThis[806842] c"eltType"))
    if call_tmp[806889]
    {
      unknown call_tmp[806894] "expr temp" "maybe param" "maybe type" "temp"
      (806897 'move' call_tmp[806894](806852 '.v' borrowOfThis[806842] c"eltType"))
      unknown call_tmp[806899] "expr temp" "maybe param" "maybe type" "temp"
      (806902 'move' call_tmp[806899](806853 call chpl_checkLegalTypeFieldAccessor this[806840] call_tmp[806894] "eltType"))
      (806880 'move' ret[806875](806879 'deref' call_tmp[806899]))
      gotoReturn _end_eltType[806873] _end_eltType[806873]
      (806870 'end of statement' borrowOfThis[806842])
    }
    {
      (806885 'move' ret[806875](806884 'deref' _uninstantiated[258]))
      gotoReturn _end_eltType[806873] _end_eltType[806873]
    }
    label _end_eltType[806873]
    (806877 return ret[806875])
  }
  function AbsBaseArr[806838](?).eltType[806904](arg _mt[806906]:_MT[238], arg this[806908]:AbsBaseArr[806838](?)) type : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[806943] "RVV" "temp" "type variable"
    unknown borrowOfThis[806910] "type variable"
    (806935 'end of statement')
    (806912 'move' borrowOfThis[806910](806915 call _cast _borrowedNonNilable[214](?) this[806908]))
    (806936 'end of statement' borrowOfThis[806910])
    unknown call_tmp[806957] "expr temp" "maybe param" "maybe type" "temp"
    (806960 'move' call_tmp[806957](806925 'is bound' borrowOfThis[806910] c"eltType"))
    if call_tmp[806957]
    {
      unknown call_tmp[806962] "expr temp" "maybe param" "maybe type" "temp"
      (806965 'move' call_tmp[806962](806920 '.v' borrowOfThis[806910] c"eltType"))
      unknown call_tmp[806967] "expr temp" "maybe param" "maybe type" "temp"
      (806970 'move' call_tmp[806967](806921 call chpl_checkLegalTypeFieldAccessor this[806908] call_tmp[806962] "eltType"))
      (806948 'move' ret[806943](806947 'deref' call_tmp[806967]))
      gotoReturn _end_eltType[806941] _end_eltType[806941]
      (806938 'end of statement' borrowOfThis[806910])
    }
    {
      (806953 'move' ret[806943](806952 'deref' _uninstantiated[258]))
      gotoReturn _end_eltType[806941] _end_eltType[806941]
    }
    label _end_eltType[806941]
    (806945 return ret[806943])
  }
  function AbsBaseArr[149697](?).init[806972](arg _mt[806974]:_MT[238], arg this[806975]:AbsBaseArr[149697](?), in arg pid[806990]:int(64)[13] :
  int(64)[13] =
  nullPid[113712], in arg _decEltRefCounts[806997]:bool[10] :
  bool[10] =
  0, arg eltType[807000]:_any[178](?)) : void[4] "compiler generated" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown super_tmp[807011] "temporary of super field" "temp"
    (807013 'move' super_tmp[807011](807010 '.v' this[806975] c"super"))
    (806985 call(806983 call (partial) init _mt[243] super_tmp[807011]) pid[806990] _decEltRefCounts[806997])
    (807037 'end of statement')
    unknown tmp[807016] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[807040] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[807052] "expr temp" "maybe param" "maybe type" "temp"
      (807055 'move' call_tmp[807052](807018 '.v' this[806975] c"super"))
      (807044 'move' call_type_tmp[807040](807021 'typeof' call_tmp[807052]))
    }
    (807022 'move' tmp[807016] call_type_tmp[807040])
    unknown call_tmp[807057] "maybe param" "maybe type" "temp"
    (807060 'move' call_tmp[807057](807027 'cast' tmp[807016] this[806975]))
    unknown chpl__thisAsParent[807024] "dead at end of block" "insert auto destroy" "temp"
    (807048 'init var' chpl__thisAsParent[807024] call_tmp[807057] tmp[807016])
    (807030 'setcid' chpl__thisAsParent[807024])
    (807032 'init field' this[806975] c"eltType" eltType[807000])
    (807038 'end of statement')
    (807035 'setcid' this[806975])
    (807046 return _void[55])
  }
  function AbsBaseArr[149697](?).deinit[807062](arg _mt[807064]:_MT[238], arg this[807066]:AbsBaseArr[149697](?)) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (807074 return _void[55])
  }
  type AbsBaseArr[149697](?) val super[355678]:BaseArr[149541] "super class" unknown eltType[149671] "type variable"
  type AbsBaseArr[806838](?)
  function BaseArrOverRectangularDom[149762](?).dsiReallocate[149737](arg _mt[149766]:_MT[238], arg this[149764]:BaseArrOverRectangularDom[149762](?), arg bounds[149734] :
  unknown call_tmp[669166] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "method" "primary method" "no return value for void"
  {
    (149742 call halt "reallocating not supported for this array type")
    (520343 return _void[55])
  }
  function BaseArrOverRectangularDom[149762](?).dsiPostReallocate[149749](arg _mt[149770]:_MT[238], arg this[149768]:BaseArrOverRectangularDom[149762](?)) : _unknown[51] "method" "primary method" "method overrides" "no return value for void"
  {
    (520345 return _void[55])
  }
  function BaseArrOverRectangularDom[149762](?).deinit[149756](arg _mt[149774]:_MT[238], arg this[149772]:BaseArrOverRectangularDom[149762](?)) : _unknown[51] "destructor" "method" "primary method" "no return value for void"
  {
    (520347 return _void[55])
  }
  function BaseArrOverRectangularDom[149762](?).super[807076](arg _mt[807078]:_MT[238], arg this[807080]:BaseArrOverRectangularDom[149762](?)) : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[807090] "RVV" "temp"
    unknown call_tmp[807097] "expr temp" "maybe param" "maybe type" "temp"
    (807100 'move' call_tmp[807097](807084 '.v' this[807080] c"super"))
    (807095 'move' ret[807090](807094 'deref' call_tmp[807097]))
    (807092 return ret[807090])
  }
  function BaseArrOverRectangularDom[807107](?).rank[807102](arg _mt[807104]:_MT[238], arg this[807109]:BaseArrOverRectangularDom[807107](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[807140] "RVV" "param" "temp"
    unknown borrowOfThis[807111]
    (807132 'end of statement')
    (807113 'move' borrowOfThis[807111](807116 call _cast _borrowedNonNilable[214](?) this[807109]))
    (807133 'end of statement' borrowOfThis[807111])
    unknown call_tmp[807154] "expr temp" "maybe param" "maybe type" "temp"
    (807157 'move' call_tmp[807154](807122 'is bound' borrowOfThis[807111] c"rank"))
    if call_tmp[807154]
    {
      unknown call_tmp[807159] "expr temp" "maybe param" "maybe type" "temp"
      (807162 'move' call_tmp[807159](807121 '.' borrowOfThis[807111] c"rank"))
      (807145 'move' ret[807140](807144 'deref' call_tmp[807159]))
      gotoReturn _end_rank[807138] _end_rank[807138]
      (807135 'end of statement' borrowOfThis[807111])
    }
    {
      (807150 'move' ret[807140](807149 'deref' ?[260]))
      gotoReturn _end_rank[807138] _end_rank[807138]
    }
    label _end_rank[807138]
    (807142 return ret[807140])
  }
  function BaseArrOverRectangularDom[807107](?).rank[807164](arg _mt[807166]:_MT[238], arg this[807168]:BaseArrOverRectangularDom[807107](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[807199] "RVV" "param" "temp"
    unknown borrowOfThis[807170] "type variable"
    (807191 'end of statement')
    (807172 'move' borrowOfThis[807170](807175 call _cast _borrowedNonNilable[214](?) this[807168]))
    (807192 'end of statement' borrowOfThis[807170])
    unknown call_tmp[807213] "expr temp" "maybe param" "maybe type" "temp"
    (807216 'move' call_tmp[807213](807181 'is bound' borrowOfThis[807170] c"rank"))
    if call_tmp[807213]
    {
      unknown call_tmp[807218] "expr temp" "maybe param" "maybe type" "temp"
      (807221 'move' call_tmp[807218](807180 '.' borrowOfThis[807170] c"rank"))
      (807204 'move' ret[807199](807203 'deref' call_tmp[807218]))
      gotoReturn _end_rank[807197] _end_rank[807197]
      (807194 'end of statement' borrowOfThis[807170])
    }
    {
      (807209 'move' ret[807199](807208 'deref' ?[260]))
      gotoReturn _end_rank[807197] _end_rank[807197]
    }
    label _end_rank[807197]
    (807201 return ret[807199])
  }
  function BaseArrOverRectangularDom[807107](?).idxType[807223](arg _mt[807225]:_MT[238], arg this[807227]:BaseArrOverRectangularDom[807107](?)) type : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[807262] "RVV" "temp" "type variable"
    unknown borrowOfThis[807229]
    (807254 'end of statement')
    (807231 'move' borrowOfThis[807229](807234 call _cast _borrowedNonNilable[214](?) this[807227]))
    (807255 'end of statement' borrowOfThis[807229])
    unknown call_tmp[807276] "expr temp" "maybe param" "maybe type" "temp"
    (807279 'move' call_tmp[807276](807244 'is bound' borrowOfThis[807229] c"idxType"))
    if call_tmp[807276]
    {
      unknown call_tmp[807281] "expr temp" "maybe param" "maybe type" "temp"
      (807284 'move' call_tmp[807281](807239 '.v' borrowOfThis[807229] c"idxType"))
      unknown call_tmp[807286] "expr temp" "maybe param" "maybe type" "temp"
      (807289 'move' call_tmp[807286](807240 call chpl_checkLegalTypeFieldAccessor this[807227] call_tmp[807281] "idxType"))
      (807267 'move' ret[807262](807266 'deref' call_tmp[807286]))
      gotoReturn _end_idxType[807260] _end_idxType[807260]
      (807257 'end of statement' borrowOfThis[807229])
    }
    {
      (807272 'move' ret[807262](807271 'deref' _uninstantiated[258]))
      gotoReturn _end_idxType[807260] _end_idxType[807260]
    }
    label _end_idxType[807260]
    (807264 return ret[807262])
  }
  function BaseArrOverRectangularDom[807107](?).idxType[807291](arg _mt[807293]:_MT[238], arg this[807295]:BaseArrOverRectangularDom[807107](?)) type : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[807330] "RVV" "temp" "type variable"
    unknown borrowOfThis[807297] "type variable"
    (807322 'end of statement')
    (807299 'move' borrowOfThis[807297](807302 call _cast _borrowedNonNilable[214](?) this[807295]))
    (807323 'end of statement' borrowOfThis[807297])
    unknown call_tmp[807344] "expr temp" "maybe param" "maybe type" "temp"
    (807347 'move' call_tmp[807344](807312 'is bound' borrowOfThis[807297] c"idxType"))
    if call_tmp[807344]
    {
      unknown call_tmp[807349] "expr temp" "maybe param" "maybe type" "temp"
      (807352 'move' call_tmp[807349](807307 '.v' borrowOfThis[807297] c"idxType"))
      unknown call_tmp[807354] "expr temp" "maybe param" "maybe type" "temp"
      (807357 'move' call_tmp[807354](807308 call chpl_checkLegalTypeFieldAccessor this[807295] call_tmp[807349] "idxType"))
      (807335 'move' ret[807330](807334 'deref' call_tmp[807354]))
      gotoReturn _end_idxType[807328] _end_idxType[807328]
      (807325 'end of statement' borrowOfThis[807297])
    }
    {
      (807340 'move' ret[807330](807339 'deref' _uninstantiated[258]))
      gotoReturn _end_idxType[807328] _end_idxType[807328]
    }
    label _end_idxType[807328]
    (807332 return ret[807330])
  }
  function BaseArrOverRectangularDom[807107](?).stridable[807359](arg _mt[807361]:_MT[238], arg this[807363]:BaseArrOverRectangularDom[807107](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[807394] "RVV" "param" "temp"
    unknown borrowOfThis[807365]
    (807386 'end of statement')
    (807367 'move' borrowOfThis[807365](807370 call _cast _borrowedNonNilable[214](?) this[807363]))
    (807387 'end of statement' borrowOfThis[807365])
    unknown call_tmp[807408] "expr temp" "maybe param" "maybe type" "temp"
    (807411 'move' call_tmp[807408](807376 'is bound' borrowOfThis[807365] c"stridable"))
    if call_tmp[807408]
    {
      unknown call_tmp[807413] "expr temp" "maybe param" "maybe type" "temp"
      (807416 'move' call_tmp[807413](807375 '.' borrowOfThis[807365] c"stridable"))
      (807399 'move' ret[807394](807398 'deref' call_tmp[807413]))
      gotoReturn _end_stridable[807392] _end_stridable[807392]
      (807389 'end of statement' borrowOfThis[807365])
    }
    {
      (807404 'move' ret[807394](807403 'deref' ?[260]))
      gotoReturn _end_stridable[807392] _end_stridable[807392]
    }
    label _end_stridable[807392]
    (807396 return ret[807394])
  }
  function BaseArrOverRectangularDom[807107](?).stridable[807418](arg _mt[807420]:_MT[238], arg this[807422]:BaseArrOverRectangularDom[807107](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[807453] "RVV" "param" "temp"
    unknown borrowOfThis[807424] "type variable"
    (807445 'end of statement')
    (807426 'move' borrowOfThis[807424](807429 call _cast _borrowedNonNilable[214](?) this[807422]))
    (807446 'end of statement' borrowOfThis[807424])
    unknown call_tmp[807467] "expr temp" "maybe param" "maybe type" "temp"
    (807470 'move' call_tmp[807467](807435 'is bound' borrowOfThis[807424] c"stridable"))
    if call_tmp[807467]
    {
      unknown call_tmp[807472] "expr temp" "maybe param" "maybe type" "temp"
      (807475 'move' call_tmp[807472](807434 '.' borrowOfThis[807424] c"stridable"))
      (807458 'move' ret[807453](807457 'deref' call_tmp[807472]))
      gotoReturn _end_stridable[807451] _end_stridable[807451]
      (807448 'end of statement' borrowOfThis[807424])
    }
    {
      (807463 'move' ret[807453](807462 'deref' ?[260]))
      gotoReturn _end_stridable[807451] _end_stridable[807451]
    }
    label _end_stridable[807451]
    (807455 return ret[807453])
  }
  function BaseArrOverRectangularDom[149762](?).init[807477](arg _mt[807479]:_MT[238], arg this[807480]:BaseArrOverRectangularDom[149762](?), in arg pid[807495]:int(64)[13] :
  int(64)[13] =
  nullPid[113712], in arg _decEltRefCounts[807502]:bool[10] :
  bool[10] =
  0, param arg rank[807505]:int(64)[13], arg idxType[807517]:_any[178](?), param arg stridable[807526]:bool[10]) : void[4] "compiler generated" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown super_tmp[807540] "temporary of super field" "temp"
    (807542 'move' super_tmp[807540](807539 '.v' this[807480] c"super"))
    (807490 call(807488 call (partial) init _mt[243] super_tmp[807540]) pid[807495] _decEltRefCounts[807502])
    (807578 'end of statement')
    unknown tmp[807545] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[807582] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[807594] "expr temp" "maybe param" "maybe type" "temp"
      (807597 'move' call_tmp[807594](807547 '.v' this[807480] c"super"))
      (807586 'move' call_type_tmp[807582](807550 'typeof' call_tmp[807594]))
    }
    (807551 'move' tmp[807545] call_type_tmp[807582])
    unknown call_tmp[807599] "maybe param" "maybe type" "temp"
    (807602 'move' call_tmp[807599](807556 'cast' tmp[807545] this[807480]))
    unknown chpl__thisAsParent[807553] "dead at end of block" "insert auto destroy" "temp"
    (807590 'init var' chpl__thisAsParent[807553] call_tmp[807599] tmp[807545])
    (807559 'setcid' chpl__thisAsParent[807553])
    unknown call_tmp[807604] "expr temp" "maybe param" "maybe type" "temp"
    (807607 'move' call_tmp[807604](807562 call _cast int(64)[13] rank[807505]))
    (807564 'init field' this[807480] c"rank" call_tmp[807604])
    (807579 'end of statement')
    (807567 'init field' this[807480] c"idxType" idxType[807517])
    unknown call_tmp[807609] "expr temp" "maybe param" "maybe type" "temp"
    (807612 'move' call_tmp[807609](807571 call _cast bool[10] stridable[807526]))
    (807573 'init field' this[807480] c"stridable" call_tmp[807609])
    (807580 'end of statement')
    (807576 'setcid' this[807480])
    (807588 return _void[55])
  }
  type BaseArrOverRectangularDom[149762](?) val super[355666]:BaseArr[149541] "super class" unknown rank[149708] "param" int(64)[13] unknown idxType[149712] "type variable" unknown stridable[149716] "param" bool[10]
  type BaseArrOverRectangularDom[807107](?)
  type BaseArrOverRectangularDom[385531](?)
  function BaseRectangularArr[149813](?).deinit[149785](arg _mt[149817]:_MT[238], arg this[149815]:BaseRectangularArr[149813](?)) : _unknown[51] "destructor" "method" "primary method" "no return value for void"
  {
    (520349 return _void[55])
  }
  function BaseRectangularArr[149813](?).decEltCountsIfNeeded[149792](arg _mt[149821]:_MT[238], arg this[149819]:BaseRectangularArr[149813](?)) : _unknown[51] "method" "primary method" "method overrides" "no return value for void"
  {
    unknown call_tmp[669192] "expr temp" "maybe param" "maybe type" "temp"
    (669195 'move' call_tmp[669192](385884 call _decEltRefCounts _mt[243] this[149819]))
    unknown call_tmp[669197] "expr temp" "maybe param" "maybe type" "temp"
    (669200 'move' call_tmp[669197](149805 call _cond_test call_tmp[669192]))
    if call_tmp[669197]
    {
      unknown call_tmp[669202] "expr temp" "maybe param" "maybe type" "temp"
      (669205 'move' call_tmp[669202](149799 call _to_unmanaged this[149819]))
      unknown call_tmp[669209] "expr temp" "maybe param" "maybe type" "temp"
      (669212 'move' call_tmp[669209](385890 call eltType _mt[243] this[149819]))
      (149802 call chpl_decRefCountsForDomainsInArrayEltTypes call_tmp[669202] call_tmp[669209])
    }
    (520351 return _void[55])
  }
  function BaseRectangularArr[149813](?).super[807614](arg _mt[807616]:_MT[238], arg this[807618]:BaseRectangularArr[149813](?)) : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[807628] "RVV" "temp"
    unknown call_tmp[807635] "expr temp" "maybe param" "maybe type" "temp"
    (807638 'move' call_tmp[807635](807622 '.v' this[807618] c"super"))
    (807633 'move' ret[807628](807632 'deref' call_tmp[807635]))
    (807630 return ret[807628])
  }
  function BaseRectangularArr[807645](?).eltType[807640](arg _mt[807642]:_MT[238], arg this[807647]:BaseRectangularArr[807645](?)) type : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[807682] "RVV" "temp" "type variable"
    unknown borrowOfThis[807649]
    (807674 'end of statement')
    (807651 'move' borrowOfThis[807649](807654 call _cast _borrowedNonNilable[214](?) this[807647]))
    (807675 'end of statement' borrowOfThis[807649])
    unknown call_tmp[807696] "expr temp" "maybe param" "maybe type" "temp"
    (807699 'move' call_tmp[807696](807664 'is bound' borrowOfThis[807649] c"eltType"))
    if call_tmp[807696]
    {
      unknown call_tmp[807701] "expr temp" "maybe param" "maybe type" "temp"
      (807704 'move' call_tmp[807701](807659 '.v' borrowOfThis[807649] c"eltType"))
      unknown call_tmp[807706] "expr temp" "maybe param" "maybe type" "temp"
      (807709 'move' call_tmp[807706](807660 call chpl_checkLegalTypeFieldAccessor this[807647] call_tmp[807701] "eltType"))
      (807687 'move' ret[807682](807686 'deref' call_tmp[807706]))
      gotoReturn _end_eltType[807680] _end_eltType[807680]
      (807677 'end of statement' borrowOfThis[807649])
    }
    {
      (807692 'move' ret[807682](807691 'deref' _uninstantiated[258]))
      gotoReturn _end_eltType[807680] _end_eltType[807680]
    }
    label _end_eltType[807680]
    (807684 return ret[807682])
  }
  function BaseRectangularArr[807645](?).eltType[807711](arg _mt[807713]:_MT[238], arg this[807715]:BaseRectangularArr[807645](?)) type : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[807750] "RVV" "temp" "type variable"
    unknown borrowOfThis[807717] "type variable"
    (807742 'end of statement')
    (807719 'move' borrowOfThis[807717](807722 call _cast _borrowedNonNilable[214](?) this[807715]))
    (807743 'end of statement' borrowOfThis[807717])
    unknown call_tmp[807764] "expr temp" "maybe param" "maybe type" "temp"
    (807767 'move' call_tmp[807764](807732 'is bound' borrowOfThis[807717] c"eltType"))
    if call_tmp[807764]
    {
      unknown call_tmp[807769] "expr temp" "maybe param" "maybe type" "temp"
      (807772 'move' call_tmp[807769](807727 '.v' borrowOfThis[807717] c"eltType"))
      unknown call_tmp[807774] "expr temp" "maybe param" "maybe type" "temp"
      (807777 'move' call_tmp[807774](807728 call chpl_checkLegalTypeFieldAccessor this[807715] call_tmp[807769] "eltType"))
      (807755 'move' ret[807750](807754 'deref' call_tmp[807774]))
      gotoReturn _end_eltType[807748] _end_eltType[807748]
      (807745 'end of statement' borrowOfThis[807717])
    }
    {
      (807760 'move' ret[807750](807759 'deref' _uninstantiated[258]))
      gotoReturn _end_eltType[807748] _end_eltType[807748]
    }
    label _end_eltType[807748]
    (807752 return ret[807750])
  }
  function BaseRectangularArr[149813](?).init[807779](arg _mt[807781]:_MT[238], arg this[807782]:BaseRectangularArr[149813](?), in arg pid[807797]:int(64)[13] :
  int(64)[13] =
  nullPid[113712], in arg _decEltRefCounts[807804]:bool[10] :
  bool[10] =
  0, param arg rank[807807]:int(64)[13], arg idxType[807810]:_any[178](?), param arg stridable[807813]:bool[10], arg eltType[807816]:_any[178](?)) : void[4] "compiler generated" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown super_tmp[807827] "temporary of super field" "temp"
    (807829 'move' super_tmp[807827](807826 '.v' this[807782] c"super"))
    (807792 call(807790 call (partial) init _mt[243] super_tmp[807827]) pid[807797] _decEltRefCounts[807804] rank[807807] idxType[807810] stridable[807813])
    (807853 'end of statement')
    unknown tmp[807832] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[807856] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[807868] "expr temp" "maybe param" "maybe type" "temp"
      (807871 'move' call_tmp[807868](807834 '.v' this[807782] c"super"))
      (807860 'move' call_type_tmp[807856](807837 'typeof' call_tmp[807868]))
    }
    (807838 'move' tmp[807832] call_type_tmp[807856])
    unknown call_tmp[807873] "maybe param" "maybe type" "temp"
    (807876 'move' call_tmp[807873](807843 'cast' tmp[807832] this[807782]))
    unknown chpl__thisAsParent[807840] "dead at end of block" "insert auto destroy" "temp"
    (807864 'init var' chpl__thisAsParent[807840] call_tmp[807873] tmp[807832])
    (807846 'setcid' chpl__thisAsParent[807840])
    (807848 'init field' this[807782] c"eltType" eltType[807816])
    (807854 'end of statement')
    (807851 'setcid' this[807782])
    (807862 return _void[55])
  }
  type BaseRectangularArr[149813](?) val super[355668]:BaseArrOverRectangularDom[149762](?) "delay instantiation" "super class" unknown eltType[149780] "type variable"
  type BaseRectangularArr[807645](?)
  function BaseSparseArr[149857](?).dsiGetBaseDom[149841](arg _mt[149861]:_MT[238], arg this[149859]:BaseSparseArr[149857](?)) : _unknown[51] "method" "primary method" "method overrides"
  {
    unknown ret[520355] "RVV" "temp"
    unknown call_tmp[669216] "expr temp" "maybe param" "maybe type" "temp"
    (669219 'move' call_tmp[669216](385895 call dom _mt[243] this[149859]))
    (520360 'move' ret[520355](520359 'deref' call_tmp[669216]))
    (520357 return ret[520355])
  }
  function BaseSparseArr[149857](?).deinit[149851](arg _mt[149865]:_MT[238], arg this[149863]:BaseSparseArr[149857](?)) : _unknown[51] "destructor" "method" "primary method" "no return value for void"
  {
    (520362 return _void[55])
  }
  function BaseSparseArr[149857](?).super[807878](arg _mt[807880]:_MT[238], arg this[807882]:BaseSparseArr[149857](?)) : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[807892] "RVV" "temp"
    unknown call_tmp[807899] "expr temp" "maybe param" "maybe type" "temp"
    (807902 'move' call_tmp[807899](807886 '.v' this[807882] c"super"))
    (807897 'move' ret[807892](807896 'deref' call_tmp[807899]))
    (807894 return ret[807892])
  }
  function BaseSparseArr[807909](?).rank[807904](arg _mt[807906]:_MT[238], arg this[807911]:BaseSparseArr[807909](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[807942] "RVV" "param" "temp"
    unknown borrowOfThis[807913]
    (807934 'end of statement')
    (807915 'move' borrowOfThis[807913](807918 call _cast _borrowedNonNilable[214](?) this[807911]))
    (807935 'end of statement' borrowOfThis[807913])
    unknown call_tmp[807956] "expr temp" "maybe param" "maybe type" "temp"
    (807959 'move' call_tmp[807956](807924 'is bound' borrowOfThis[807913] c"rank"))
    if call_tmp[807956]
    {
      unknown call_tmp[807961] "expr temp" "maybe param" "maybe type" "temp"
      (807964 'move' call_tmp[807961](807923 '.' borrowOfThis[807913] c"rank"))
      (807947 'move' ret[807942](807946 'deref' call_tmp[807961]))
      gotoReturn _end_rank[807940] _end_rank[807940]
      (807937 'end of statement' borrowOfThis[807913])
    }
    {
      (807952 'move' ret[807942](807951 'deref' ?[260]))
      gotoReturn _end_rank[807940] _end_rank[807940]
    }
    label _end_rank[807940]
    (807944 return ret[807942])
  }
  function BaseSparseArr[807909](?).rank[807966](arg _mt[807968]:_MT[238], arg this[807970]:BaseSparseArr[807909](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[808001] "RVV" "param" "temp"
    unknown borrowOfThis[807972] "type variable"
    (807993 'end of statement')
    (807974 'move' borrowOfThis[807972](807977 call _cast _borrowedNonNilable[214](?) this[807970]))
    (807994 'end of statement' borrowOfThis[807972])
    unknown call_tmp[808015] "expr temp" "maybe param" "maybe type" "temp"
    (808018 'move' call_tmp[808015](807983 'is bound' borrowOfThis[807972] c"rank"))
    if call_tmp[808015]
    {
      unknown call_tmp[808020] "expr temp" "maybe param" "maybe type" "temp"
      (808023 'move' call_tmp[808020](807982 '.' borrowOfThis[807972] c"rank"))
      (808006 'move' ret[808001](808005 'deref' call_tmp[808020]))
      gotoReturn _end_rank[807999] _end_rank[807999]
      (807996 'end of statement' borrowOfThis[807972])
    }
    {
      (808011 'move' ret[808001](808010 'deref' ?[260]))
      gotoReturn _end_rank[807999] _end_rank[807999]
    }
    label _end_rank[807999]
    (808003 return ret[808001])
  }
  function BaseSparseArr[807909](?).idxType[808025](arg _mt[808027]:_MT[238], arg this[808029]:BaseSparseArr[807909](?)) type : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[808064] "RVV" "temp" "type variable"
    unknown borrowOfThis[808031]
    (808056 'end of statement')
    (808033 'move' borrowOfThis[808031](808036 call _cast _borrowedNonNilable[214](?) this[808029]))
    (808057 'end of statement' borrowOfThis[808031])
    unknown call_tmp[808078] "expr temp" "maybe param" "maybe type" "temp"
    (808081 'move' call_tmp[808078](808046 'is bound' borrowOfThis[808031] c"idxType"))
    if call_tmp[808078]
    {
      unknown call_tmp[808083] "expr temp" "maybe param" "maybe type" "temp"
      (808086 'move' call_tmp[808083](808041 '.v' borrowOfThis[808031] c"idxType"))
      unknown call_tmp[808088] "expr temp" "maybe param" "maybe type" "temp"
      (808091 'move' call_tmp[808088](808042 call chpl_checkLegalTypeFieldAccessor this[808029] call_tmp[808083] "idxType"))
      (808069 'move' ret[808064](808068 'deref' call_tmp[808088]))
      gotoReturn _end_idxType[808062] _end_idxType[808062]
      (808059 'end of statement' borrowOfThis[808031])
    }
    {
      (808074 'move' ret[808064](808073 'deref' _uninstantiated[258]))
      gotoReturn _end_idxType[808062] _end_idxType[808062]
    }
    label _end_idxType[808062]
    (808066 return ret[808064])
  }
  function BaseSparseArr[807909](?).idxType[808093](arg _mt[808095]:_MT[238], arg this[808097]:BaseSparseArr[807909](?)) type : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[808132] "RVV" "temp" "type variable"
    unknown borrowOfThis[808099] "type variable"
    (808124 'end of statement')
    (808101 'move' borrowOfThis[808099](808104 call _cast _borrowedNonNilable[214](?) this[808097]))
    (808125 'end of statement' borrowOfThis[808099])
    unknown call_tmp[808146] "expr temp" "maybe param" "maybe type" "temp"
    (808149 'move' call_tmp[808146](808114 'is bound' borrowOfThis[808099] c"idxType"))
    if call_tmp[808146]
    {
      unknown call_tmp[808151] "expr temp" "maybe param" "maybe type" "temp"
      (808154 'move' call_tmp[808151](808109 '.v' borrowOfThis[808099] c"idxType"))
      unknown call_tmp[808156] "expr temp" "maybe param" "maybe type" "temp"
      (808159 'move' call_tmp[808156](808110 call chpl_checkLegalTypeFieldAccessor this[808097] call_tmp[808151] "idxType"))
      (808137 'move' ret[808132](808136 'deref' call_tmp[808156]))
      gotoReturn _end_idxType[808130] _end_idxType[808130]
      (808127 'end of statement' borrowOfThis[808099])
    }
    {
      (808142 'move' ret[808132](808141 'deref' _uninstantiated[258]))
      gotoReturn _end_idxType[808130] _end_idxType[808130]
    }
    label _end_idxType[808130]
    (808134 return ret[808132])
  }
  function BaseSparseArr[149857](?).dom[808161](arg _mt[808163]:_MT[238], arg this[808165]:BaseSparseArr[149857](?)) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[808175] "RVV" "temp"
    unknown call_tmp[808182] "expr temp" "maybe param" "maybe type" "temp"
    (808185 'move' call_tmp[808182](808169 '.' this[808165] c"dom"))
    (808180 'move' ret[808175](808179 'addr of' call_tmp[808182]))
    (808177 return ret[808175])
  }
  function BaseSparseArr[149857](?).init[808187](arg _mt[808189]:_MT[238], arg this[808190]:BaseSparseArr[149857](?), in arg pid[808205]:int(64)[13] :
  int(64)[13] =
  nullPid[113712], in arg _decEltRefCounts[808212]:bool[10] :
  bool[10] =
  0, arg eltType[808215]:_any[178](?), param arg rank[808218]:int(64)[13], arg idxType[808230]:_any[178](?), in arg dom[808239]:_any[178](?)) : void[4] "compiler generated" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown super_tmp[808250] "temporary of super field" "temp"
    (808252 'move' super_tmp[808250](808249 '.v' this[808190] c"super"))
    (808200 call(808198 call (partial) init _mt[243] super_tmp[808250]) pid[808205] _decEltRefCounts[808212] eltType[808215])
    (808285 'end of statement')
    unknown tmp[808255] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[808289] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[808301] "expr temp" "maybe param" "maybe type" "temp"
      (808304 'move' call_tmp[808301](808257 '.v' this[808190] c"super"))
      (808293 'move' call_type_tmp[808289](808260 'typeof' call_tmp[808301]))
    }
    (808261 'move' tmp[808255] call_type_tmp[808289])
    unknown call_tmp[808306] "maybe param" "maybe type" "temp"
    (808309 'move' call_tmp[808306](808266 'cast' tmp[808255] this[808190]))
    unknown chpl__thisAsParent[808263] "dead at end of block" "insert auto destroy" "temp"
    (808297 'init var' chpl__thisAsParent[808263] call_tmp[808306] tmp[808255])
    (808269 'setcid' chpl__thisAsParent[808263])
    unknown call_tmp[808311] "expr temp" "maybe param" "maybe type" "temp"
    (808314 'move' call_tmp[808311](808272 call _cast int(64)[13] rank[808218]))
    (808274 'init field' this[808190] c"rank" call_tmp[808311])
    (808286 'end of statement')
    (808277 'init field' this[808190] c"idxType" idxType[808230])
    (808280 'init field' this[808190] c"dom" dom[808239])
    (808287 'end of statement')
    (808283 'setcid' this[808190])
    (808295 return _void[55])
  }
  type BaseSparseArr[149857](?) val super[355680]:AbsBaseArr[149697](?) "delay instantiation" "super class" unknown rank[149828] "param" int(64)[13] unknown idxType[149832] "type variable" unknown dom[149835]
  type BaseSparseArr[807909](?)
  function BaseSparseArrImpl[150527](?).init[149891](arg _mt[150531]:_MT[238], arg this[150529]:BaseSparseArrImpl[150527](?), arg eltType[149889]:_any[178](?), param arg rank[149894]:int(64)[13], arg idxType[149897]:_any[178](?), arg dom[149899]:_any[178](?), param arg initElts[149902]:bool[10]) : void[4] "method" "primary method" "no return value for void"
  {
    unknown super_tmp[461816] "temporary of super field" "temp"
    (461818 'move' super_tmp[461816](461815 '.v' this[150529] c"super"))
    (149918 call(149906 call (partial) init _mt[243] super_tmp[461816])(eltType = eltType[149889])(rank = rank[149894])(idxType = idxType[149897])(dom = dom[149899]))
    (481611 'end of statement')
    unknown tmp[461821] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[492321] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[669223] "expr temp" "maybe param" "maybe type" "temp"
      (669226 'move' call_tmp[669223](461823 '.v' this[150529] c"super"))
      (492325 'move' call_type_tmp[492321](461826 'typeof' call_tmp[669223]))
    }
    (461827 'move' tmp[461821] call_type_tmp[492321])
    unknown call_tmp[669228] "maybe param" "maybe type" "temp"
    (669231 'move' call_tmp[669228](461832 'cast' tmp[461821] this[150529]))
    unknown chpl__thisAsParent[461829] "dead at end of block" "insert auto destroy" "temp"
    (543603 'init var' chpl__thisAsParent[461829] call_tmp[669228] tmp[461821])
    (461835 'setcid' chpl__thisAsParent[461829])
    (481612 'end of statement')
    unknown call_tmp[669233] "expr temp" "maybe param" "maybe type" "temp"
    (669236 'move' call_tmp[669233](149926 '.' this[150529] c"dom"))
    unknown call_tmp[669240] "expr temp" "maybe param" "maybe type" "temp"
    (669243 'move' call_tmp[669240](149929 call nnzDom _mt[243] call_tmp[669233]))
    unknown call_tmp[669247] "maybe param" "maybe type" "temp"
    (669250 'move' call_tmp[669247](149939 call(149932 call (partial) buildArray _mt[243] call_tmp[669240]) eltType[149889](initElts = initElts[149902])))
    unknown call_tmp[669252] "expr temp" "maybe param" "maybe type" "temp"
    (669255 'move' call_tmp[669252](461854 '.' this[150529] c"dom"))
    unknown call_tmp[669259] "expr temp" "maybe param" "maybe type" "temp"
    (669262 'move' call_tmp[669259](461844 call nnzDom _mt[243] call_tmp[669252]))
    unknown call_tmp[669264] "expr temp" "maybe param" "maybe type" "temp"
    (669267 'move' call_tmp[669264](461842 call chpl__ensureDomainExpr call_tmp[669259]))
    unknown call_tmp[669269] "expr temp" "maybe param" "maybe type" "temp"
    (669272 'move' call_tmp[669269](461857 '.v' this[150529] c"eltType"))
    unknown call_tmp[669274] "maybe param" "maybe type" "temp"
    (669277 'move' call_tmp[669274](461840 call chpl__buildArrayRuntimeType call_tmp[669264] call_tmp[669269]))
    unknown tmp[461837] "temp"
    (461848 'init var' tmp[461837] call_tmp[669247] call_tmp[669274])
    (461850 'init field' this[150529] c"data" tmp[461837])
    (481613 'end of statement')
    unknown tmp[461861] "temp"
    unknown call_tmp[669279] "expr temp" "maybe param" "maybe type" "temp"
    (669282 'move' call_tmp[669279](461870 '.v' this[150529] c"eltType"))
    (461864 'default init var' tmp[461861] call_tmp[669279])
    (461866 '.=' this[150529] c"irv" tmp[461861])
    (481614 'end of statement')
    (461873 'setcid' this[150529])
    (520364 return _void[55])
  }
  function BaseSparseArrImpl[150527](?).deinit[149947](arg _mt[150535]:_MT[238], arg this[150533]:BaseSparseArrImpl[150527](?)) : _unknown[51] "destructor" "method" "primary method" "no return value for void"
  {
    (520366 return _void[55])
  }
  function BaseSparseArrImpl[150527](?).dsiElementInitializationComplete[149954](arg _mt[150539]:_MT[238], arg this[150537]:BaseSparseArrImpl[150527](?)) : _unknown[51] "method" "primary method" "method overrides" "no return value for void"
  {
    unknown call_tmp[669286] "expr temp" "maybe param" "maybe type" "temp"
    (669289 'move' call_tmp[669286](360674 call data _mt[243] this[150537]))
    (149961 call(149957 call (partial) dsiElementInitializationComplete _mt[243] call_tmp[669286]))
    (520368 return _void[55])
  }
  function BaseSparseArrImpl[150527](?).dsiElementDeinitializationComplete[149968](arg _mt[150543]:_MT[238], arg this[150541]:BaseSparseArrImpl[150527](?)) : _unknown[51] "method" "primary method" "method overrides" "no return value for void"
  {
    unknown call_tmp[669295] "expr temp" "maybe param" "maybe type" "temp"
    (669298 'move' call_tmp[669295](360679 call data _mt[243] this[150541]))
    (149975 call(149971 call (partial) dsiElementDeinitializationComplete _mt[243] call_tmp[669295]))
    (520370 return _void[55])
  }
  function BaseSparseArrImpl[150527](?).dsiDestroyArr[149986](arg _mt[150547]:_MT[238], arg this[150545]:BaseSparseArrImpl[150527](?), arg deinitElts[149983]:bool[10]) : _unknown[51] "method" "primary method" "method overrides" "no return value for void"
  {
    unknown call_tmp[669302] "expr temp" "maybe param" "maybe type" "temp"
    (669305 'move' call_tmp[669302](149994 call _cond_test deinitElts[149983]))
    if call_tmp[669302]
    {
      unknown call_tmp[669309] "expr temp" "maybe param" "maybe type" "temp"
      (669312 'move' call_tmp[669309](385908 call data _mt[243] this[150545]))
      (149992 call _deinitElements call_tmp[669309])
    }
    (520372 return _void[55])
  }
  function BaseSparseArrImpl[150527](?).IRV[150009](arg _mt[150551]:_MT[238], arg this[150549]:BaseSparseArrImpl[150527](?)) ref : _unknown[51] "method" "primary method" "no parens"
  {
    unknown ret[520376] "RVV" "temp"
    unknown call_tmp[669316] "expr temp" "maybe param" "maybe type" "temp"
    (669319 'move' call_tmp[669316](385916 call irv _mt[243] this[150549]))
    (520381 'move' ret[520376](520380 'addr of' call_tmp[669316]))
    (520378 return ret[520376])
  }
  function BaseSparseArrImpl[150527](?).sparseBulkShiftArray[150021](arg _mt[150555]:_MT[238], arg this[150553]:BaseSparseArrImpl[150527](?), arg shiftMap[150019]:_any[178](?), arg oldnnz[150023]:_any[178](?)) : _unknown[51] "method" "primary method" "method overrides" "no return value for void"
  {
    unknown newIdx[150026] "dead at end of block" "insert auto destroy"
    (543605 'default init var' newIdx[150026] int(64)[13])
    (150029 'end of statement')
    unknown prevNewIdx[150032] "dead at end of block" "insert auto destroy"
    (543607 'init var' prevNewIdx[150032] 1)
    (150035 'end of statement')
    unknown call_tmp[669323] "expr temp" "maybe param" "maybe type" "temp"
    (669326 'move' call_tmp[669323](150038 call _dom _mt[243] shiftMap[150019]))
    unknown call_tmp[669330] "expr temp" "maybe param" "maybe type" "temp"
    (669333 'move' call_tmp[669330](150041 call high _mt[243] call_tmp[669323]))
    unknown call_tmp[669335] "expr temp" "maybe param" "maybe type" "temp"
    (669338 'move' call_tmp[669335](150045 call + call_tmp[669330] 1))
    unknown call_tmp[669342] "expr temp" "maybe param" "maybe type" "temp"
    (669345 'move' call_tmp[669342](360685 call dom _mt[243] this[150553]))
    unknown call_tmp[669349] "expr temp" "maybe param" "maybe type" "temp"
    (669352 'move' call_tmp[669349](150048 call nnzDom _mt[243] call_tmp[669342]))
    unknown call_tmp[669356] "expr temp" "maybe param" "maybe type" "temp"
    (669359 'move' call_tmp[669356](150051 call high _mt[243] call_tmp[669349]))
    unknown call_tmp[669361] "expr temp" "maybe param" "maybe type" "temp"
    (669364 'move' call_tmp[669361](150054 call chpl_build_bounded_range call_tmp[669335] call_tmp[669356]))
    Forall {
      induction variables:
        
        unknown i[150065] "index var" "insert auto destroy"
      iterated expressions:
        call_tmp[669361]
      shadow variables:
      other variables
        forall body
      {
        unknown call_tmp[669368] "expr temp" "maybe param" "maybe type" "temp"
        (669371 'move' call_tmp[669368](150059 call(385921 call (partial) data _mt[243] this[150553]) i[150065]))
        unknown call_tmp[669375] "expr temp" "maybe param" "maybe type" "temp"
        (669378 'move' call_tmp[669375](385927 call irv _mt[243] this[150553]))
        (150061 call = call_tmp[669368] call_tmp[669375])
        (481620 'end of statement' i[150065])
      }
    }
    {
      unknown _indexOfInterest[150187] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[150188] "expr temp" "temp"
      unknown call_tmp[669380] "expr temp" "maybe param" "maybe type" "temp"
      (669383 'move' call_tmp[669380](150212 call - 1))
      unknown call_tmp[669385] "expr temp" "maybe param" "maybe type" "temp"
      (669388 'move' call_tmp[669385](150216 call chpl_direct_range_iter 1 oldnnz[150023] call_tmp[669380]))
      unknown call_tmp[669390] "expr temp" "maybe param" "maybe type" "temp"
      (669393 'move' call_tmp[669390](150205 call _getIterator call_tmp[669385]))
      unknown call_tmp[669397] "expr temp" "maybe param" "maybe type" "temp"
      (669400 'move' call_tmp[669397](150223 call _dom _mt[243] shiftMap[150019]))
      unknown call_tmp[669404] "expr temp" "maybe param" "maybe type" "temp"
      (669407 'move' call_tmp[669404](150227 call(150221 call (partial) dim _mt[243] call_tmp[669397]) 0))
      unknown call_tmp[669409] "expr temp" "maybe param" "maybe type" "temp"
      (669412 'move' call_tmp[669409](150230 call - 1))
      unknown call_tmp[669414] "expr temp" "maybe param" "maybe type" "temp"
      (669417 'move' call_tmp[669414](150219 call chpl_by call_tmp[669404] call_tmp[669409]))
      unknown call_tmp[669419] "expr temp" "maybe param" "maybe type" "temp"
      (669422 'move' call_tmp[669419](150232 call _getIterator call_tmp[669414]))
      (150246 'move' _iterator[150188](150098 call _build_tuple call_tmp[669390] call_tmp[669419]))
      Defer
      {
        {
          (150276 call _freeIterator _iterator[150188])
        }
      }
      { scopeless type
        (150251 'move' _indexOfInterest[150187](150248 call iteratorIndex _iterator[150188]))
      }
      ForLoop[150189]
      {
        (150256 call _check_tuple_var_decl _indexOfInterest[150187] 2)
        (481623 'end of statement')
        unknown i[150262] "index var" "insert auto destroy"
        (481624 'end of statement')
        (150264 'move' i[150262](150260 call _indexOfInterest[150187] 0))
        (481625 'end of statement' i[150262])
        unknown _newIdx[150269] "index var" "insert auto destroy"
        (481627 'end of statement')
        (150271 'move' _newIdx[150269](150267 call _indexOfInterest[150187] 1))
        (481628 'end of statement' _newIdx[150269])
        {
          unknown call_tmp[669424] "expr temp" "maybe param" "maybe type" "temp"
          (669427 'move' call_tmp[669424](150103 call shiftMap[150019] _newIdx[150269]))
          (150104 call = newIdx[150026] call_tmp[669424])
          (481630 'end of statement' newIdx[150026] _newIdx[150269])
          unknown call_tmp[669431] "expr temp" "maybe param" "maybe type" "temp"
          (669434 'move' call_tmp[669431](150111 call(385935 call (partial) data _mt[243] this[150553]) newIdx[150026]))
          unknown call_tmp[669438] "expr temp" "maybe param" "maybe type" "temp"
          (669441 'move' call_tmp[669438](150115 call(385941 call (partial) data _mt[243] this[150553]) i[150262]))
          (150116 call = call_tmp[669431] call_tmp[669438])
          (481633 'end of statement' newIdx[150026] i[150262])
          {
            unknown _indexOfInterest[150138] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[150139] "expr temp" "temp"
            unknown call_tmp[669443] "expr temp" "maybe param" "maybe type" "temp"
            (669446 'move' call_tmp[669443](150152 call + newIdx[150026] 1))
            unknown call_tmp[669448] "expr temp" "maybe param" "maybe type" "temp"
            (669451 'move' call_tmp[669448](150156 call - prevNewIdx[150032] 1))
            unknown call_tmp[669453] "expr temp" "maybe param" "maybe type" "temp"
            (669456 'move' call_tmp[669453](150159 call chpl_direct_range_iter call_tmp[669443] call_tmp[669448] 1))
            (150148 'move' _iterator[150139](150146 call _getIterator call_tmp[669453]))
            Defer
            {
              {
                (150175 call _freeIterator _iterator[150139])
              }
            }
            { scopeless type
              (150164 'move' _indexOfInterest[150138](150161 call iteratorIndex _iterator[150139]))
            }
            ForLoop[150140]
            {
              unknown emptyIndex[150168] "index var" "insert auto destroy"
              (481637 'end of statement')
              (150170 'move' emptyIndex[150168] _indexOfInterest[150138])
              (481638 'end of statement' emptyIndex[150168])
              unknown call_tmp[669460] "expr temp" "maybe param" "maybe type" "temp"
              (669463 'move' call_tmp[669460](150133 call(385947 call (partial) data _mt[243] this[150553]) emptyIndex[150168]))
              unknown call_tmp[669467] "expr temp" "maybe param" "maybe type" "temp"
              (669470 'move' call_tmp[669467](385953 call irv _mt[243] this[150553]))
              (150135 call = call_tmp[669460] call_tmp[669467])
              (481640 'end of statement' emptyIndex[150168])
              label _continueLabel[150143]
              _indexOfInterest[150138]
              _iterator[150139]
            }
            label _breakLabel[150144]
          }
          (150184 call = prevNewIdx[150032] newIdx[150026])
          (481642 'end of statement' prevNewIdx[150032] newIdx[150026])
        }
        label _continueLabel[150192]
        _indexOfInterest[150187]
        _iterator[150188]
      }
      label _breakLabel[150193]
    }
    {
      unknown _indexOfInterest[150299] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[150300] "expr temp" "temp"
      unknown call_tmp[669472] "expr temp" "maybe param" "maybe type" "temp"
      (669475 'move' call_tmp[669472](150314 call - prevNewIdx[150032] 1))
      unknown call_tmp[669477] "expr temp" "maybe param" "maybe type" "temp"
      (669480 'move' call_tmp[669477](150317 call chpl_direct_range_iter 1 call_tmp[669472] 1))
      (150309 'move' _iterator[150300](150307 call _getIterator call_tmp[669477]))
      Defer
      {
        {
          (150333 call _freeIterator _iterator[150300])
        }
      }
      { scopeless type
        (150322 'move' _indexOfInterest[150299](150319 call iteratorIndex _iterator[150300]))
      }
      ForLoop[150301]
      {
        unknown i[150326] "index var" "insert auto destroy"
        (481646 'end of statement')
        (150328 'move' i[150326] _indexOfInterest[150299])
        (481647 'end of statement' i[150326])
        unknown call_tmp[669484] "expr temp" "maybe param" "maybe type" "temp"
        (669487 'move' call_tmp[669484](150294 call(385963 call (partial) data _mt[243] this[150553]) i[150326]))
        unknown call_tmp[669491] "expr temp" "maybe param" "maybe type" "temp"
        (669494 'move' call_tmp[669491](385969 call irv _mt[243] this[150553]))
        (150296 call = call_tmp[669484] call_tmp[669491])
        (481649 'end of statement' i[150326])
        label _continueLabel[150304]
        _indexOfInterest[150299]
        _iterator[150300]
      }
      label _breakLabel[150305]
    }
    (520383 return _void[55])
  }
  function BaseSparseArrImpl[150527](?).sparseShiftArray[150346](arg _mt[150559]:_MT[238], arg this[150557]:BaseSparseArrImpl[150527](?), arg shiftrange[150344]:_any[178](?), arg initrange[150348]:_any[178](?)) : _unknown[51] "method" "primary method" "method overrides" "no return value for void"
  {
    {
      unknown _indexOfInterest[150361] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[150362] "expr temp" "temp"
      (150371 'move' _iterator[150362](150369 call _getIterator initrange[150348]))
      Defer
      {
        {
          (150387 call _freeIterator _iterator[150362])
        }
      }
      { scopeless type
        (150376 'move' _indexOfInterest[150361](150373 call iteratorIndex _iterator[150362]))
      }
      ForLoop[150363]
      {
        unknown i[150380] "index var" "insert auto destroy"
        (481652 'end of statement')
        (150382 'move' i[150380] _indexOfInterest[150361])
        (481653 'end of statement' i[150380])
        {
          unknown call_tmp[669498] "expr temp" "maybe param" "maybe type" "temp"
          (669501 'move' call_tmp[669498](150355 call(385976 call (partial) data _mt[243] this[150557]) i[150380]))
          unknown call_tmp[669505] "expr temp" "maybe param" "maybe type" "temp"
          (669508 'move' call_tmp[669505](385982 call irv _mt[243] this[150557]))
          (150357 call = call_tmp[669498] call_tmp[669505])
          (481655 'end of statement' i[150380])
        }
        label _continueLabel[150366]
        _indexOfInterest[150361]
        _iterator[150362]
      }
      label _breakLabel[150367]
    }
    {
      unknown _indexOfInterest[150417] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[150418] "expr temp" "temp"
      unknown call_tmp[669510] "expr temp" "maybe param" "maybe type" "temp"
      (669513 'move' call_tmp[669510](150398 call - 1))
      unknown call_tmp[669515] "expr temp" "maybe param" "maybe type" "temp"
      (669518 'move' call_tmp[669515](150400 call chpl_by shiftrange[150344] call_tmp[669510]))
      (150427 'move' _iterator[150418](150425 call _getIterator call_tmp[669515]))
      Defer
      {
        {
          (150447 call _freeIterator _iterator[150418])
        }
      }
      { scopeless type
        (150436 'move' _indexOfInterest[150417](150433 call iteratorIndex _iterator[150418]))
      }
      ForLoop[150419]
      {
        unknown i[150440] "index var" "insert auto destroy"
        (481658 'end of statement')
        (150442 'move' i[150440] _indexOfInterest[150417])
        (481659 'end of statement' i[150440])
        {
          unknown call_tmp[669522] "expr temp" "maybe param" "maybe type" "temp"
          (669525 'move' call_tmp[669522](150405 call + i[150440] 1))
          unknown call_tmp[669527] "expr temp" "maybe param" "maybe type" "temp"
          (669530 'move' call_tmp[669527](150408 call(385988 call (partial) data _mt[243] this[150557]) call_tmp[669522]))
          unknown call_tmp[669534] "expr temp" "maybe param" "maybe type" "temp"
          (669537 'move' call_tmp[669534](150412 call(385994 call (partial) data _mt[243] this[150557]) i[150440]))
          (150413 call = call_tmp[669527] call_tmp[669534])
          (481661 'end of statement' i[150440] i[150440])
        }
        label _continueLabel[150422]
        _indexOfInterest[150417]
        _iterator[150418]
      }
      label _breakLabel[150423]
    }
    unknown call_tmp[669543] "expr temp" "maybe param" "maybe type" "temp"
    (669546 'move' call_tmp[669543](150456 call low _mt[243] shiftrange[150344]))
    unknown call_tmp[669548] "expr temp" "maybe param" "maybe type" "temp"
    (669551 'move' call_tmp[669548](150460 call(386000 call (partial) data _mt[243] this[150557]) call_tmp[669543]))
    unknown call_tmp[669555] "expr temp" "maybe param" "maybe type" "temp"
    (669558 'move' call_tmp[669555](386005 call irv _mt[243] this[150557]))
    (150462 call = call_tmp[669548] call_tmp[669555])
    (520385 return _void[55])
  }
  function BaseSparseArrImpl[150527](?).sparseShiftArrayBack[150471](arg _mt[150563]:_MT[238], arg this[150561]:BaseSparseArrImpl[150527](?), arg shiftrange[150469]:_any[178](?)) : _unknown[51] "method" "primary method" "method overrides" "no return value for void"
  {
    {
      unknown _indexOfInterest[150490] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[150491] "expr temp" "temp"
      (150500 'move' _iterator[150491](150498 call _getIterator shiftrange[150469]))
      Defer
      {
        {
          (150516 call _freeIterator _iterator[150491])
        }
      }
      { scopeless type
        (150505 'move' _indexOfInterest[150490](150502 call iteratorIndex _iterator[150491]))
      }
      ForLoop[150492]
      {
        unknown i[150509] "index var" "insert auto destroy"
        (481666 'end of statement')
        (150511 'move' i[150509] _indexOfInterest[150490])
        (481667 'end of statement' i[150509])
        {
          unknown call_tmp[669562] "expr temp" "maybe param" "maybe type" "temp"
          (669565 'move' call_tmp[669562](150478 call(386011 call (partial) data _mt[243] this[150561]) i[150509]))
          unknown call_tmp[669569] "expr temp" "maybe param" "maybe type" "temp"
          (669572 'move' call_tmp[669569](150482 call + i[150509] 1))
          unknown call_tmp[669574] "expr temp" "maybe param" "maybe type" "temp"
          (669577 'move' call_tmp[669574](150485 call(386017 call (partial) data _mt[243] this[150561]) call_tmp[669569]))
          (150486 call = call_tmp[669562] call_tmp[669574])
          (481669 'end of statement' i[150509] i[150509])
        }
        label _continueLabel[150495]
        _indexOfInterest[150490]
        _iterator[150491]
      }
      label _breakLabel[150496]
    }
    (520387 return _void[55])
  }
  function BaseSparseArrImpl[150527](?).super[808316](arg _mt[808318]:_MT[238], arg this[808320]:BaseSparseArrImpl[150527](?)) : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[808330] "RVV" "temp"
    unknown call_tmp[808337] "expr temp" "maybe param" "maybe type" "temp"
    (808340 'move' call_tmp[808337](808324 '.v' this[808320] c"super"))
    (808335 'move' ret[808330](808334 'deref' call_tmp[808337]))
    (808332 return ret[808330])
  }
  function BaseSparseArrImpl[150527](?).data[808342](arg _mt[808344]:_MT[238], arg this[808346]:BaseSparseArrImpl[150527](?)) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[808356] "RVV" "temp"
    unknown call_tmp[808363] "expr temp" "maybe param" "maybe type" "temp"
    (808366 'move' call_tmp[808363](808350 '.' this[808346] c"data"))
    (808361 'move' ret[808356](808360 'addr of' call_tmp[808363]))
    (808358 return ret[808356])
  }
  function BaseSparseArrImpl[150527](?).irv[808368](arg _mt[808370]:_MT[238], arg this[808372]:BaseSparseArrImpl[150527](?)) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[808382] "RVV" "temp"
    unknown call_tmp[808389] "expr temp" "maybe param" "maybe type" "temp"
    (808392 'move' call_tmp[808389](808376 '.' this[808372] c"irv"))
    (808387 'move' ret[808382](808386 'addr of' call_tmp[808389]))
    (808384 return ret[808382])
  }
  type BaseSparseArrImpl[150527](?) val super[355682]:BaseSparseArr[149857](?) "delay instantiation" "super class" unknown data[149883] "local field" "unsafe"(149881 call chpl__buildArrayRuntimeType(149879 call chpl__ensureDomainExpr(149874 call nnzDom _mt[243] dom[149835])) eltType[149671]) unknown irv[150003] eltType[149671]
  function _delete_dist[150573](arg dist[150570]:unmanaged BaseDist[415468], arg privatized[150576]:bool[10]) : _unknown[51] "no return value for void"
  {
    (150586 call(150582 call (partial) dsiDestroyDist _mt[243] dist[150570]))
    (481672 'end of statement')
    unknown tmp[427152] "maybe param" "temp"
    (427163 'move' tmp[427152] 1)
    unknown call_tmp[669583] "expr temp" "maybe param" "maybe type" "temp"
    (669586 'move' call_tmp[669583](427165 call _cond_invalid tmp[427152]))
    if call_tmp[669583]
    {
      (427168 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[568659] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[568660] "maybe param" "temp"
    unknown call_tmp[669588] "expr temp" "maybe param" "maybe type" "temp"
    (669591 'move' call_tmp[669588](427153 call isTrue tmp[427152]))
    (568665 'move' tmp[568660](568663 call _cond_test call_tmp[669588]))
    if tmp[568660]
    {
      unknown tmp[568667] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (568669 'move' tmp[568667](427156 call isTrue privatized[150576]))
      (568674 'move' tmp[568659](568671 '_paramFoldLogical' tmp[568660] tmp[568667]))
    }
    {
      (568679 'move' tmp[568659](568676 '_paramFoldLogical' tmp[568660] 0))
    }
    unknown call_tmp[669593] "expr temp" "maybe param" "maybe type" "temp"
    (669596 'move' call_tmp[669593](150603 call _cond_test tmp[568659]))
    if call_tmp[669593]
    {
      unknown call_tmp[669600] "expr temp" "maybe param" "maybe type" "temp"
      (669603 'move' call_tmp[669600](150595 call pid _mt[243] dist[150570]))
      (150600 call _freePrivatizedClass call_tmp[669600] dist[150570])
    }
    (150609 call chpl__delete dist[150570])
    (520389 return _void[55])
  }
  function _delete_dom[150618](arg dom[150616]:_any[178](?), arg privatized[150621]:bool[10]) : _unknown[51] "no return value for void"
  {
    (150631 call(150627 call (partial) dsiDestroyDom _mt[243] dom[150616]))
    (481676 'end of statement')
    unknown tmp[427173] "maybe param" "temp"
    (427184 'move' tmp[427173] 1)
    unknown call_tmp[669607] "expr temp" "maybe param" "maybe type" "temp"
    (669610 'move' call_tmp[669607](427186 call _cond_invalid tmp[427173]))
    if call_tmp[669607]
    {
      (427189 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[568686] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[568687] "maybe param" "temp"
    unknown call_tmp[669612] "expr temp" "maybe param" "maybe type" "temp"
    (669615 'move' call_tmp[669612](427174 call isTrue tmp[427173]))
    (568692 'move' tmp[568687](568690 call _cond_test call_tmp[669612]))
    if tmp[568687]
    {
      unknown tmp[568694] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (568696 'move' tmp[568694](427177 call isTrue privatized[150621]))
      (568701 'move' tmp[568686](568698 '_paramFoldLogical' tmp[568687] tmp[568694]))
    }
    {
      (568706 'move' tmp[568686](568703 '_paramFoldLogical' tmp[568687] 0))
    }
    unknown call_tmp[669617] "expr temp" "maybe param" "maybe type" "temp"
    (669620 'move' call_tmp[669617](150648 call _cond_test tmp[568686]))
    if call_tmp[669617]
    {
      unknown call_tmp[669624] "expr temp" "maybe param" "maybe type" "temp"
      (669627 'move' call_tmp[669624](150640 call pid _mt[243] dom[150616]))
      (150645 call _freePrivatizedClass call_tmp[669624] dom[150616])
    }
    (150654 call chpl__delete dom[150616])
    (520391 return _void[55])
  }
  function _delete_arr[150666](arg arr[150663]:unmanaged BaseArr[415453], param arg privatized[150669]:bool[10], arg deinitElts[150673] :
  1 =
  1) : _unknown[51] "no return value for void"
  {
    (150685 call(150679 call (partial) dsiDestroyArr _mt[243] arr[150663])(deinitElts = deinitElts[150673]))
    (481680 'end of statement')
    (150695 call(150691 call (partial) decEltCountsIfNeeded _mt[243] arr[150663]))
    (481681 'end of statement')
    unknown tmp[427194] "maybe param" "temp"
    (427205 'move' tmp[427194] 1)
    unknown call_tmp[669633] "expr temp" "maybe param" "maybe type" "temp"
    (669636 'move' call_tmp[669633](427207 call _cond_invalid tmp[427194]))
    if call_tmp[669633]
    {
      (427210 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[568713] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[568714] "maybe param" "temp"
    unknown call_tmp[669638] "expr temp" "maybe param" "maybe type" "temp"
    (669641 'move' call_tmp[669638](427195 call isTrue tmp[427194]))
    (568719 'move' tmp[568714](568717 call _cond_test call_tmp[669638]))
    if tmp[568714]
    {
      unknown tmp[568721] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (568723 'move' tmp[568721](427198 call isTrue privatized[150669]))
      (568728 'move' tmp[568713](568725 '_paramFoldLogical' tmp[568714] tmp[568721]))
    }
    {
      (568733 'move' tmp[568713](568730 '_paramFoldLogical' tmp[568714] 0))
    }
    unknown call_tmp[669643] "expr temp" "maybe param" "maybe type" "temp"
    (669646 'move' call_tmp[669643](150711 call _cond_test tmp[568713]))
    if call_tmp[669643]
    {
      unknown call_tmp[669650] "expr temp" "maybe param" "maybe type" "temp"
      (669653 'move' call_tmp[669650](150703 call pid _mt[243] arr[150663]))
      (150708 call _freePrivatizedClass call_tmp[669650] arr[150663])
    }
    (150717 call chpl__delete arr[150663])
    (520393 return _void[55])
  }
  function chpl_assignDomainWithGetSetIndices[150729](arg lhs[150726]:_any[178](?), arg rhs[150732]:_domain[125902](?)) : _unknown[51] "no return value for void"
  {
    unknown arrType[150751] "dead at end of block" "insert auto destroy" "type variable"(150750 call(150746 call (partial) getBaseArrType _mt[243] lhs[150726]))
    (543614 'move' arrType[150751](543613 call(543610 call (partial) getBaseArrType _mt[243] lhs[150726])))
    unknown call_tmp[669661] "maybe param" "maybe type" "temp"
    (669664 'move' call_tmp[669661](150756 call rank _mt[243] lhs[150726]))
    unknown rank[150759] "dead at end of block" "param"
    (543616 'init var' rank[150759] call_tmp[669661])
    (150762 'end of statement')
    unknown idxType[150767] "dead at end of block" "insert auto destroy" "type variable"(150764 call idxType _mt[243] lhs[150726])
    (543622 'move' idxType[150767](543619 call idxType _mt[243] lhs[150726]))
    unknown call_tmp[669672] "maybe param" "maybe type" "temp"
    (669675 'move' call_tmp[669672](150771 call stridable _mt[243] lhs[150726]))
    unknown stridable[150774] "dead at end of block" "param"
    (543624 'init var' stridable[150774] call_tmp[669672])
    (150777 'end of statement')
    {
      unknown _indexOfInterest[150977] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[150978] "expr temp" "temp"
      unknown call_tmp[669679] "expr temp" "maybe param" "maybe type" "temp"
      (669682 'move' call_tmp[669679](150780 call _arrs _mt[243] lhs[150726]))
      (150987 'move' _iterator[150978](150985 call _getIterator call_tmp[669679]))
      Defer
      {
        {
          (151004 call _freeIterator _iterator[150978])
        }
      }
      { scopeless type
        (150993 'move' _indexOfInterest[150977](150990 call iteratorIndex _iterator[150978]))
      }
      ForLoop[150979]
      {
        unknown e[150997] "index var" "insert auto destroy"
        (481686 'end of statement')
        (150999 'move' e[150997] _indexOfInterest[150977])
        (481687 'end of statement' e[150997])
        {
          const tmp[150968] "const" "temp"
          unknown call_tmp[669684] "expr temp" "maybe param" "maybe type" "temp"
          (669687 'move' call_tmp[669684](150965 '_wide_get_locale' e[150997]))
          (150970 'move' tmp[150968](150966 'deref' call_tmp[669684]))
          {
            {
              unknown call_tmp[669689] "expr temp" "maybe param" "maybe type" "temp"
              (669692 'move' call_tmp[669689](150786 'to nilable class from type' arrType[150751]))
              unknown call_tmp[669694] "maybe param" "maybe type" "temp"
              (669697 'move' call_tmp[669694](150787 call _cast call_tmp[669689] e[150997]))
              unknown eCastQ[150789] "dead at end of block" "insert auto destroy"
              (543626 'init var' eCastQ[150789] call_tmp[669694])
              (150792 'end of statement')
              unknown call_tmp[669699] "expr temp" "maybe param" "maybe type" "temp"
              (669702 'move' call_tmp[669699](150796 call == eCastQ[150789] nil[44]))
              unknown call_tmp[669704] "expr temp" "maybe param" "maybe type" "temp"
              (669707 'move' call_tmp[669704](150844 call _cond_test call_tmp[669699]))
              if call_tmp[669704]
              {
                unknown call_tmp[669709] "expr temp" "maybe param" "maybe type" "temp" "type variable"
                (669712 'move' call_tmp[669709](461875 'typeof' lhs[150726]))
                unknown call_tmp[669714] "expr temp" "maybe param" "maybe type" "temp"
                (669717 'move' call_tmp[669714](150819 call _cast string[26] call_tmp[669709]))
                unknown call_tmp[669719] "expr temp" "maybe param" "maybe type" "temp"
                (669722 'move' call_tmp[669719](150840 call _cast string[26] arrType[150751]))
                (150842 call halt "internal error: " call_tmp[669714] " contains an bad array type " call_tmp[669719])
                (481691 'end of statement' arrType[150751])
              }
              unknown call_tmp[669724] "maybe param" "maybe type" "temp"
              (669727 'move' call_tmp[669724](150850 call postfix! eCastQ[150789]))
              unknown eCast[150852] "dead at end of block" "insert auto destroy"
              (543628 'init var' eCast[150852] call_tmp[669724])
              (150855 'end of statement')
              unknown call_tmp[669731] "maybe param" "maybe type" "temp"
              (669734 'move' call_tmp[669731](150861 call(150857 call (partial) getIndices _mt[243] rhs[150732])))
              unknown inds[150862] "dead at end of block" "insert auto destroy"
              (543630 'init var' inds[150862] call_tmp[669731])
              (150865 'end of statement')
              unknown tmp[150878] "dead at end of block" "insert auto destroy"
              unknown call_tmp[669736] "expr temp" "maybe param" "maybe type" "temp"
              (669739 'move' call_tmp[669736](150875 call range[64316](?) idxType[150767] bounded[64205] stridable[150774]))
              unknown call_tmp[669741] "expr temp" "maybe param" "maybe type" "temp"
              (669744 'move' call_tmp[669741](150876 call * rank[150759] call_tmp[669736]))
              (543632 'default init var' tmp[150878] call_tmp[669741])
              (150881 'end of statement' arrType[150751] e[150997] eCastQ[150789] idxType[150767])
              {
                unknown i[150920] "dead at end of block" "insert auto destroy"
                (543634 'init var' i[150920] 0)
                (481695 'end of statement')
                unknown tmp[150921] "maybe param" "temp"
                unknown call_tmp[669746] "expr temp" "maybe param" "maybe type" "temp"
                (669749 'move' call_tmp[669746](150885 call - rank[150759] 1))
                (150933 'move' tmp[150921](150931 call chpl_compute_low_param_loop_bound 0 call_tmp[669746]))
                unknown tmp[150922] "maybe param" "temp"
                unknown call_tmp[669751] "expr temp" "maybe param" "maybe type" "temp"
                (669754 'move' call_tmp[669751](150938 call - rank[150759] 1))
                (150943 'move' tmp[150922](150941 call chpl_compute_high_param_loop_bound 0 call_tmp[669751]))
                unknown tmp[150923] "maybe param" "temp"
                (150946 'move' tmp[150923] 1)
                ParamForLoop[150948]
                { i[150920] tmp[150921] tmp[150922] tmp[150923]
                  {
                    unknown call_tmp[669756] "maybe param" "maybe type" "temp"
                    (669759 'move' call_tmp[669756](150892 call inds[150862] i[150920]))
                    unknown from[150893] "dead at end of block" "insert auto destroy"
                    (543636 'init var' from[150893] call_tmp[669756])
                    (150896 'end of statement' inds[150862] i[150920])
                    unknown call_tmp[669761] "expr temp" "maybe param" "maybe type" "temp"
                    (669764 'move' call_tmp[669761](150901 call tmp[150878] i[150920]))
                    unknown call_tmp[669768] "expr temp" "maybe param" "maybe type" "temp"
                    (669771 'move' call_tmp[669768](150914 call range[64316](?) idxType[150767] bounded[64205] stridable[150774]))
                    unknown call_tmp[669773] "expr temp" "maybe param" "maybe type" "temp"
                    (669776 'move' call_tmp[669773](150916 call(150903 call (partial) safeCast _mt[243] from[150893]) call_tmp[669768]))
                    (150917 call = call_tmp[669761] call_tmp[669773])
                    (481698 'end of statement' tmp[150878] i[150920] from[150893] idxType[150767])
                  }
                }
                label _unused_continueLabel[150925]
                label _breakLabel[150924]
              }
              (150963 call(150958 call (partial) dsiReallocate _mt[243] eCast[150852]) tmp[150878])
              (481703 'end of statement' eCast[150852] tmp[150878])
            }
            (150973 'on block' 0 tmp[150968])
          }
        }
        label _continueLabel[150982]
        _indexOfInterest[150977]
        _iterator[150978]
      }
      label _breakLabel[150983]
    }
    unknown call_tmp[669784] "expr temp" "maybe param" "maybe type" "temp"
    (669787 'move' call_tmp[669784](151020 call(151016 call (partial) getIndices _mt[243] rhs[150732])))
    (151022 call(151012 call (partial) dsiSetIndices _mt[243] lhs[150726]) call_tmp[669784])
    (481706 'end of statement')
    {
      unknown _indexOfInterest[151065] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[151066] "expr temp" "temp"
      unknown call_tmp[669791] "expr temp" "maybe param" "maybe type" "temp"
      (669794 'move' call_tmp[669791](151026 call _arrs _mt[243] lhs[150726]))
      (151075 'move' _iterator[151066](151073 call _getIterator call_tmp[669791]))
      Defer
      {
        {
          (151092 call _freeIterator _iterator[151066])
        }
      }
      { scopeless type
        (151081 'move' _indexOfInterest[151065](151078 call iteratorIndex _iterator[151066]))
      }
      ForLoop[151067]
      {
        unknown e[151085] "index var" "insert auto destroy"
        (481708 'end of statement')
        (151087 'move' e[151085] _indexOfInterest[151065])
        (481709 'end of statement' e[151085])
        {
          unknown call_tmp[669796] "expr temp" "maybe param" "maybe type" "temp"
          (669799 'move' call_tmp[669796](151031 'to nilable class from type' arrType[150751]))
          unknown call_tmp[669801] "maybe param" "maybe type" "temp"
          (669804 'move' call_tmp[669801](151032 call _cast call_tmp[669796] e[151085]))
          unknown eCastQ[151034] "dead at end of block" "insert auto destroy"
          (543638 'init var' eCastQ[151034] call_tmp[669801])
          (151037 'end of statement')
          unknown call_tmp[669806] "maybe param" "maybe type" "temp"
          (669809 'move' call_tmp[669806](151040 call postfix! eCastQ[151034]))
          unknown eCast[151042] "dead at end of block" "insert auto destroy"
          (543640 'init var' eCast[151042] call_tmp[669806])
          (151045 'end of statement' arrType[150751] e[151085] eCastQ[151034])
          const tmp[151057] "const" "temp"
          unknown call_tmp[669811] "expr temp" "maybe param" "maybe type" "temp"
          (669814 'move' call_tmp[669811](151054 '_wide_get_locale' e[151085]))
          (151059 'move' tmp[151057](151055 'deref' call_tmp[669811]))
          {
            (151052 call(151048 call (partial) dsiPostReallocate _mt[243] eCast[151042]))
            (481714 'end of statement' eCast[151042])
            (151062 'on block' 0 tmp[151057])
          }
        }
        label _continueLabel[151070]
        _indexOfInterest[151065]
        _iterator[151066]
      }
      label _breakLabel[151071]
    }
    unknown call_tmp[669820] "expr temp" "maybe param" "maybe type" "temp"
    (669823 'move' call_tmp[669820](151104 call(151100 call (partial) dsiSupportsPrivatization _mt[243] lhs[150726])))
    unknown call_tmp[669825] "expr temp" "maybe param" "maybe type" "temp"
    (669828 'move' call_tmp[669825](151111 call _cond_test call_tmp[669820]))
    if call_tmp[669825]
    {
      (151108 call _reprivatize lhs[150726])
    }
    (520395 return _void[55])
  }
  where {
    unknown call_tmp[669830] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (669833 'move' call_tmp[669830](461877 'typeof' lhs[150726]))
    unknown call_tmp[669835] "expr temp" "maybe param" "maybe type" "temp"
    (669838 'move' call_tmp[669835](150739 call _to_borrowed call_tmp[669830]))
    (354331 'is_subtype' BaseRectangularDom[382243](?) call_tmp[669835])
  }
  function chpl_assignDomainWithIndsIterSafeForRemoving[151125](arg lhs[151122]:_any[178](?), arg rhs[151128]:_domain[125902](?)) : _unknown[51] "no return value for void"
  {
    {
      unknown _indexOfInterest[151181] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[151182] "expr temp" "temp"
      unknown call_tmp[669842] "expr temp" "maybe param" "maybe type" "temp"
      (669845 'move' call_tmp[669842](151157 call(151153 call (partial) dsiIndsIterSafeForRemoving _mt[243] lhs[151122])))
      (151191 'move' _iterator[151182](151189 call _getIterator call_tmp[669842]))
      Defer
      {
        {
          (151208 call _freeIterator _iterator[151182])
        }
      }
      { scopeless type
        (151197 'move' _indexOfInterest[151181](151194 call iteratorIndex _iterator[151182]))
      }
      ForLoop[151183]
      {
        unknown i[151201] "index var" "insert auto destroy"
        (481718 'end of statement')
        (151203 'move' i[151201] _indexOfInterest[151181])
        (481719 'end of statement' i[151201])
        {
          unknown call_tmp[669849] "expr temp" "maybe param" "maybe type" "temp"
          (669852 'move' call_tmp[669849](151164 call(151159 call (partial) contains _mt[243] rhs[151128]) i[151201]))
          unknown call_tmp[669854] "expr temp" "maybe param" "maybe type" "temp"
          (669857 'move' call_tmp[669854](151165 call ! call_tmp[669849]))
          unknown call_tmp[669859] "expr temp" "maybe param" "maybe type" "temp"
          (669862 'move' call_tmp[669859](151176 call _cond_test call_tmp[669854]))
          if call_tmp[669859]
          {
            (151173 call(151168 call (partial) dsiRemove _mt[243] lhs[151122]) i[151201])
            (481721 'end of statement' i[151201])
          }
        }
        label _continueLabel[151186]
        _indexOfInterest[151181]
        _iterator[151182]
      }
      label _breakLabel[151187]
    }
    {
      unknown _indexOfInterest[151241] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[151242] "expr temp" "temp"
      (151251 'move' _iterator[151242](151249 call _getIterator rhs[151128]))
      Defer
      {
        {
          (151267 call _freeIterator _iterator[151242])
        }
      }
      { scopeless type
        (151256 'move' _indexOfInterest[151241](151253 call iteratorIndex _iterator[151242]))
      }
      ForLoop[151243]
      {
        unknown i[151260] "index var" "insert auto destroy"
        (481724 'end of statement')
        (151262 'move' i[151260] _indexOfInterest[151241])
        (481725 'end of statement' i[151260])
        {
          unknown call_tmp[669868] "expr temp" "maybe param" "maybe type" "temp"
          (669871 'move' call_tmp[669868](151224 call(151219 call (partial) dsiMember _mt[243] lhs[151122]) i[151260]))
          unknown call_tmp[669873] "expr temp" "maybe param" "maybe type" "temp"
          (669876 'move' call_tmp[669873](151225 call ! call_tmp[669868]))
          unknown call_tmp[669878] "expr temp" "maybe param" "maybe type" "temp"
          (669881 'move' call_tmp[669878](151236 call _cond_test call_tmp[669873]))
          if call_tmp[669878]
          {
            (151233 call(151228 call (partial) dsiAdd _mt[243] lhs[151122]) i[151260])
            (481727 'end of statement' i[151260])
          }
        }
        label _continueLabel[151246]
        _indexOfInterest[151241]
        _iterator[151242]
      }
      label _breakLabel[151247]
    }
    (520397 return _void[55])
  }
  where {
    unknown tmp[427215] "maybe param" "temp"
    unknown call_tmp[669885] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (669888 'move' call_tmp[669885](461879 'typeof' lhs[151122]))
    unknown call_tmp[669890] "expr temp" "maybe param" "maybe type" "temp"
    (669893 'move' call_tmp[669890](151135 call _to_borrowed call_tmp[669885]))
    (427226 'move' tmp[427215](354332 'is_subtype' BaseSparseDom[382253](?) call_tmp[669890]))
    unknown call_tmp[669895] "expr temp" "maybe param" "maybe type" "temp"
    (669898 'move' call_tmp[669895](427228 call _cond_invalid tmp[427215]))
    if call_tmp[669895]
    {
      (427231 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[568740] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[568741] "maybe param" "temp"
    unknown call_tmp[669900] "expr temp" "maybe param" "maybe type" "temp"
    (669903 'move' call_tmp[669900](427216 call isTrue tmp[427215]))
    (568746 'move' tmp[568741](568744 call _cond_test call_tmp[669900]))
    if tmp[568741]
    {
      (568751 'move' tmp[568740](568748 '_paramFoldLogical' tmp[568741] 1))
    }
    {
      unknown tmp[568753] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[669905] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (669908 'move' call_tmp[669905](461881 'typeof' lhs[151122]))
      unknown call_tmp[669910] "expr temp" "maybe param" "maybe type" "temp"
      (669913 'move' call_tmp[669910](151143 call _to_borrowed call_tmp[669905]))
      unknown call_tmp[669915] "expr temp" "maybe param" "maybe type" "temp"
      (669918 'move' call_tmp[669915](354333 'is_subtype' BaseAssociativeDom[382248](?) call_tmp[669910]))
      (568755 'move' tmp[568753](427220 call isTrue call_tmp[669915]))
      (568760 'move' tmp[568740](568757 '_paramFoldLogical' tmp[568741] tmp[568753]))
    }
    (748332 call chpl_statementLevelSymbol tmp[568740])
  }
  (355126 'used modules list'(145418 'use' ChapelArray[113672])(145420 'use' ChapelRange[64180])(145423 'use' ChapelLocks[187256])(145426 'use' ChapelHashtable[200393]))
}