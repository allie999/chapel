AST dump for ChapelSerializedBroadcast after pass parallel.
Module use list: ChapelLocale CPtr 

{
  type _class_localson_fn[2215696] val _runtime_hdr[2215697]:chpl_comm_on_bundle_t[209359] val _0_tmp[2215699]:chpl_localeID_t[209352] val _1_root[2215701]:int(64)[13] val _2_id[2215703]:int(64)[13] ref _3_globalType[2215705]:_RuntimeTypeInfo[1253862] val _4__coforallCount[2215707]:_EndCount(AtomicT(int(64)),int(64))[945532]
  type _class_localson_fn[2215559] val _runtime_hdr[2215560]:chpl_comm_on_bundle_t[209359] val _0_tmp[2215562]:chpl_localeID_t[209352] val _1_root[2215564]:int(64)[13] val _2_localeZeroGlobal_data[2215566]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1871345] val _3_rvfDerefTmp[2215568]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1871345] val _4_id[2215570]:int(64)[13] val _5__coforallCount[2215572]:_EndCount(AtomicT(int(64)),int(64))[945532]
  type _class_localson_fn[2215430] val _runtime_hdr[2215431]:chpl_comm_on_bundle_t[209359] val _0_tmp[2215433]:chpl_localeID_t[209352] val _1_root[2215435]:int(64)[13] val _2_id[2215437]:int(64)[13] ref _3_globalType[2215439]:string[26] val _4__coforallCount[2215441]:_EndCount(AtomicT(int(64)),int(64))[945532]
  type _class_localson_fn[2215287] val _runtime_hdr[2215288]:chpl_comm_on_bundle_t[209359] val _0_tmp[2215290]:chpl_localeID_t[209352] val _1_root[2215292]:int(64)[13] ref _2_localeZeroGlobal[2215294]:string[26] val _3_rvfDerefTmp[2215296]:__serializeHelper[28089] val _4_id[2215298]:int(64)[13] val _5__coforallCount[2215300]:_EndCount(AtomicT(int(64)),int(64))[945532]
  function chpl__init_ChapelSerializedBroadcast[416139]() : void[4] "insert line file info" "module init" "resolved"
  {
    (522543 return _void[55])
  }
  function chpl_get_global_serialize_table[171479](const in arg idx[171476]:int(64)[13]) : c_void_ptr[149] "extern" "local args" "no fn body" "resolved" "no return value for void"
  {
    val ret[522535]:c_void_ptr[149] "RVV" "temp"
    (522537 return ret[522535])
  }
  function chpl__broadcastGlobal[1867794](const  ref arg localeZeroGlobal[1867796]:_ref(string)[938128], const in arg id[1867798]:int(64)[13]) : void[4] "serialized broadcast function" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    {
      const-val call_tmp[1867885]:__serializeHelper[28089] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1905018]:__serializeHelper[28089] "temp"
      (1867893 call chpl__serialize[30886] localeZeroGlobal[1867796] ret_tmp[1905018])
      (1905021 'move' call_tmp[1867885] ret_tmp[1905018])
      const-val data[1867894]:__serializeHelper[28089] "dead at end of block" "const" "insert auto destroy"
      (1867896 'move' data[1867894] call_tmp[1867885])
      const-val call_tmp[1867900]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1906646]:locale[28] "temp"
      (1867905 call here[90438] ret_tmp[1906646])
      (1906649 'move' call_tmp[1867900] ret_tmp[1906646])
      const-val call_tmp[1867906]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (1867908 'move' call_tmp[1867906](1867911 call id[90521] call_tmp[1867900]))
      const-val root[1867914]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      (1867916 'move' root[1867914] call_tmp[1867906])
      {
        ref tmpIter[1867921]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287226] "dead at end of block" "maybe ref" "no copy" "reference to a const" "temp"
        (1867923 'move' tmpIter[1867921] Locales[113662])
        {
          const _coforallCount[1868054]:_EndCount(AtomicT(int(64)),int(64))[945532] "dead after last mention" "concurrently accessed" "const" "end count" "temp"
          (1868056 'move' _coforallCount[1868054](1868059 call _endCountAlloc[939007]))
          const-val numTasks[1868061]:int(64)[13] "dead at end of block" "temp"
          (1868063 'move' numTasks[1868061](1868066 call size[1702574] tmpIter[1867921]))
          (1868070 call _upEndCount[1325561] _coforallCount[1868054] numTasks[1868061])
          ref _indexOfInterest[1868075]:_ref(locale)[949033] "dead at end of block" "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1868077]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304480] "dead at end of block" "expr temp" "temp"
          (1868079 'move' _iterator[1868077](1868082 call _getIterator[1298298] tmpIter[1867921]))
          {
            val ret[2029595]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304486] "dead after last mention" "RVV" "temp"
            ref _indexOfInterest[2029597]:_ref(locale)[949033] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[2029599]:_ic_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303875] "dead at end of block" "expr temp" "temp"
            val call_tmp[2029601]:[domain(1,int(64),false)] locale[1256675] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val this[2029792]:[domain(1,int(64),false)] locale[1287200] "temp"
            (2029797 'move' this[2029792](2029794 '.v' _iterator[1868077] F0_this[2120671]))
            (2029603 'move' call_tmp[2029601](2029606 call _value[1287255] this[2029792]))
            const-val call_tmp[2029608]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303881] "dead at end of block" "maybe param" "temp"
            val coerce_tmp[2029610]:[domain(1,int(64),false)] locale[1256675] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (2029612 'move' coerce_tmp[2029610] call_tmp[2029601])
            const-val default_arg_tasksPerLocale[2029615]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
            (2029617 'move' default_arg_tasksPerLocale[2029615](2029620 call these_default_tasksPerLocale[1298568] call_tmp[2029601]))
            const-val default_arg_ignoreRunning[2029622]:bool[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
            (2029624 'move' default_arg_ignoreRunning[2029622](2029627 call these_default_ignoreRunning[1298599] coerce_tmp[2029610]))
            const-val default_arg_minIndicesPerTask[2029629]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
            (2029631 'move' default_arg_minIndicesPerTask[2029629](2029634 call these_default_minIndicesPerTask[1298630] coerce_tmp[2029610]))
            const-val ret_tmp[2029636]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303881] "temp"
            (2029639 call these[1298452] coerce_tmp[2029610] default_arg_tasksPerLocale[2029615] default_arg_ignoreRunning[2029622] default_arg_minIndicesPerTask[2029629] ret_tmp[2029636])
            (2029645 'move' call_tmp[2029608] ret_tmp[2029636])
            (2029648 'move' _iterator[2029599](2029651 call _getIterator[1303890] call_tmp[2029608]))
            {
              val ret[2029654]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303881] "dead after last mention" "RVV" "temp"
              ref _indexOfInterest[2029656]:_ref(locale)[949033] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[2029658]:_ic_chpl__serialViewIter[1303625] "dead at end of block" "expr temp" "temp"
              ref call_tmp[2029660]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
              const-val this[2029662]:[domain(1,int(64),false)] locale[1256675] "temp"
              (2029664 'move' this[2029662](2029666 '.v' _iterator[2029599] F0_this[2122779]))
              (2029669 'move' call_tmp[2029660](2029672 call dom[1258208] this[2029662]))
              const-val call_tmp[2029674]:_ir_chpl__serialViewIter[1303631] "dead at end of block" "maybe param" "temp"
              val coerce_tmp[2029676]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2029678 'move' coerce_tmp[2029676](2029680 'deref' call_tmp[2029660]))
              const-val ret_tmp[2029682]:_ir_chpl__serialViewIter[1303631] "temp"
              const-val this[2029684]:[domain(1,int(64),false)] locale[1256675] "temp"
              (2029686 'move' this[2029684](2029688 '.v' _iterator[2029599] F0_this[2122779]))
              (2029692 call chpl__serialViewIter[1298664] this[2029684] coerce_tmp[2029676] ret_tmp[2029682])
              (2029696 'move' call_tmp[2029674] ret_tmp[2029682])
              (2029699 'move' _iterator[2029658](2029702 call _getIterator[1303640] call_tmp[2029674]))
              {
                val ret[2088389]:_ir_chpl__serialViewIter[1303631] "dead after last mention" "RVV" "temp"
                val info[2088391]:[domain(1,int(64),false)] locale[1256675] "dead at end of block" "insert auto destroy"
                val tmp[2088393]:[domain(1,int(64),false)] locale[1256675] "dead at end of block" "expr temp" "insert auto destroy" "maybe copy elided" "maybe param" "temp"
                val tmp[2088395]:[domain(1,int(64),false)] locale[1256675] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val arr[2088816]:[domain(1,int(64),false)] locale[1256675] "temp"
                (2088821 'move' arr[2088816](2088818 '.v' _iterator[2029658] F0_arr[2124684]))
                (2088397 'move' tmp[2088395] arr[2088816])
                const-val arr[2088823]:[domain(1,int(64),false)] locale[1256675] "temp"
                (2088828 'move' arr[2088823](2088825 '.v' _iterator[2029658] F0_arr[2124684]))
                (2088400 'move' tmp[2088393] arr[2088823])
                const-val arr[2088830]:[domain(1,int(64),false)] locale[1256675] "temp"
                (2088835 'move' arr[2088830](2088832 '.v' _iterator[2029658] F0_arr[2124684]))
                (2088403 '=' info[2088391] arr[2088830])
                (2088406 'noop')
                const-val call_tmp[2088407]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                val coerce_tmp[2088409]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                const-val viewDom[2088837]:domain(1,int(64),false)[1251123] "temp"
                (2088842 'move' viewDom[2088837](2088839 '.v' _iterator[2029658] F1_viewDom[2124688]))
                (2088411 'move' coerce_tmp[2088409] viewDom[2088837])
                const-val viewDom[2088844]:domain(1,int(64),false)[1251123] "temp"
                (2088849 'move' viewDom[2088844](2088846 '.v' _iterator[2029658] F1_viewDom[2124688]))
                (2088414 'move' call_tmp[2088407](2088417 call dsiLow[1300625] viewDom[2088844]))
                const-val call_tmp[2088419]:int(64)[13] "dead at end of block" "maybe param" "temp"
                const-val arr[2088851]:[domain(1,int(64),false)] locale[1256675] "temp"
                (2088856 'move' arr[2088851](2088853 '.v' _iterator[2029658] F0_arr[2124684]))
                (2088421 'move' call_tmp[2088419](2088424 call getDataIndex[1300884] arr[2088851] call_tmp[2088407]))
                const-val first[2088427]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                (2088429 'move' first[2088427] call_tmp[2088419])
                const-val call_tmp[2088432]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                val coerce_tmp[2088434]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                const-val viewDom[2088858]:domain(1,int(64),false)[1251123] "temp"
                (2088863 'move' viewDom[2088858](2088860 '.v' _iterator[2029658] F1_viewDom[2124688]))
                (2088436 'move' coerce_tmp[2088434] viewDom[2088858])
                (2088439 'move' call_tmp[2088432](2088442 call dsiLow[1300625] coerce_tmp[2088434]))
                const-val call_tmp[2088444]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                (2088446 'move' call_tmp[2088444](2088449 call chpl__idxToInt[1027105] call_tmp[2088432]))
                const-val call_tmp[2088451]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                (2088453 'move' call_tmp[2088451](2088456 call +[949855] call_tmp[2088444]))
                const-val call_tmp[2088458]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                val coerce_tmp[2088460]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                const-val viewDom[2088865]:domain(1,int(64),false)[1251123] "temp"
                (2088870 'move' viewDom[2088865](2088867 '.v' _iterator[2029658] F1_viewDom[2124688]))
                (2088462 'move' coerce_tmp[2088460] viewDom[2088865])
                (2088465 'move' call_tmp[2088458](2088468 call chpl_intToIdx[1302054] coerce_tmp[2088460] call_tmp[2088451]))
                const-val call_tmp[2088471]:int(64)[13] "dead at end of block" "maybe param" "temp"
                (2088473 'move' call_tmp[2088471](2088476 call getDataIndex[1300884] info[2088391] call_tmp[2088458]))
                const-val second[2088479]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                (2088481 'move' second[2088479] call_tmp[2088471])
                const-val call_tmp[2088484]:int(64)[13] "dead at end of block" "maybe param" "temp"
                (2088486 'move' call_tmp[2088484](2088489 call -[440532] call_tmp[2088471] call_tmp[2088419]))
                const-val step[2088492]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                (2088494 'move' step[2088492] call_tmp[2088484])
                const-val call_tmp[2088497]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                val coerce_tmp[2088499]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                const-val viewDom[2088872]:domain(1,int(64),false)[1251123] "temp"
                (2088877 'move' viewDom[2088872](2088874 '.v' _iterator[2029658] F1_viewDom[2124688]))
                (2088501 'move' coerce_tmp[2088499] viewDom[2088872])
                (2088504 'move' call_tmp[2088497](2088507 call dsiNumIndices[1263823] coerce_tmp[2088499]))
                const-val call_tmp[2088509]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                (2088511 'move' call_tmp[2088509](2088514 call -[962415] call_tmp[2088497]))
                const-val call_tmp[2088516]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                (2088518 'move' call_tmp[2088516](2088521 call *[441944] call_tmp[2088509] call_tmp[2088484]))
                const-val call_tmp[2088524]:int(64)[13] "dead at end of block" "maybe param" "temp"
                (2088526 'move' call_tmp[2088524](2088529 call +[439752] call_tmp[2088419] call_tmp[2088516]))
                const-val last[2088532]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                (2088534 'move' last[2088532] call_tmp[2088524])
                val _indexOfInterest[2088537]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[2088539]:_ic_chpl_direct_pos_stride_range_iter[1303186] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[2088541]:_ir_chpl_direct_pos_stride_range_iter[1303192] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[2088543]:_ir_chpl_direct_pos_stride_range_iter[1303192] "temp"
                (2088546 call chpl_direct_pos_stride_range_iter[1302141] call_tmp[2088419] call_tmp[2088524] call_tmp[2088484] ret_tmp[2088543])
                (2088551 'move' call_tmp[2088541] ret_tmp[2088543])
                (2088554 'move' _iterator[2088539](2088557 call _getIterator[1303201] call_tmp[2088541]))
                {
                  val ret[2088560]:_ir_chpl_direct_pos_stride_range_iter[1303192] "dead after last mention" "RVV" "temp"
                  val call_tmp[2088562]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val stride[2088564]:int(64)[13] "temp"
                  (2088566 'move' stride[2088564](2088568 '.v' _iterator[2088539] F2_stride[2126228]))
                  (2088572 call chpl_range_check_stride[1103022] stride[2088564])
                  val call_tmp[2088574]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val default_arg_first[2088576]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val low[2088578]:int(64)[13] "temp"
                  (2088580 'move' low[2088578](2088582 '.v' _iterator[2088539] F0_low[2126220]))
                  (2088585 'move' default_arg_first[2088576](2088588 call chpl_checkIfRangeIterWillOverflow_default_first[1103387] low[2088578]))
                  const-val default_arg_last[2088590]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val high[2088592]:int(64)[13] "temp"
                  (2088594 'move' high[2088592](2088596 '.v' _iterator[2088539] F1_high[2126224]))
                  (2088599 'move' default_arg_last[2088590](2088602 call chpl_checkIfRangeIterWillOverflow_default_last[1103415] high[2088592]))
                  const-val _return_tmp_[2088604]:bool[10] "dead after last mention" "temp"
                  const-val low[2088606]:int(64)[13] "temp"
                  (2088608 'move' low[2088606](2088610 '.v' _iterator[2088539] F0_low[2126220]))
                  const-val high[2088613]:int(64)[13] "temp"
                  (2088615 'move' high[2088613](2088617 '.v' _iterator[2088539] F1_high[2126224]))
                  const-val stride[2088620]:int(64)[13] "temp"
                  (2088622 'move' stride[2088620](2088624 '.v' _iterator[2088539] F2_stride[2126228]))
                  (2088627 'move' _return_tmp_[2088604](2088630 call chpl_checkIfRangeIterWillOverflow[1096265] low[2088606] high[2088613] stride[2088620] default_arg_first[2088576] default_arg_last[2088590] 1))
                  val i[2088637]:int(64)[13] "dead at end of block" "insert auto destroy"
                  val call_tmp[2088639]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (2088641 'move' i[2088637] 0)
                  CForLoop[2088644] hazard
                  {
                    const-val yret[2088692]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (2088694 'move' yret[2088692] i[2088637])
                    const-val _yieldedIndex[2088697]:int(64)[13] "temp"
                    (2088699 'move' _yieldedIndex[2088697] i[2088637])
                    {
                      const-val i[2088703]:int(64)[13] "const" "index var" "insert auto destroy"
                      (2088705 'move' i[2088703] _yieldedIndex[2088697])
                      ref yret[2088708]:_ref(locale)[949033] "dead after last mention" "YVV" "temp"
                      ref call_tmp[2088710]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
                      ref _this_tmp_[2088712]:_ref(_ddata(locale))[1255592] "dead after last mention" "temp"
                      (2088714 'move' _this_tmp_[2088712](2088717 call theData[1303439] info[2088391]))
                      val coerce_tmp[2088719]:_ddata(locale)[1255583] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (2088721 'move' coerce_tmp[2088719](2088723 'deref' _this_tmp_[2088712]))
                      (2088725 'move' call_tmp[2088710](2088728 call this[1303586] coerce_tmp[2088719] _yieldedIndex[2088697]))
                      ref _yieldedIndex[2088753]:_ref(locale)[949033] "temp"
                      (2088731 'move' _yieldedIndex[2088753] call_tmp[2088710])
                      {
                        ref elem[2088755]:_ref(locale)[949033] "index var" "insert auto destroy"
                        (2088757 'move' elem[2088755] _yieldedIndex[2088753])
                        ref yret[2088760]:_ref(locale)[949033] "dead after last mention" "YVV" "temp"
                        ref _yieldedIndex[2088762]:_ref(locale)[949033] "temp"
                        (2088764 'move' _yieldedIndex[2088762] elem[2088755])
                        {
                          ref i[2088768]:_ref(locale)[949033] "index var" "insert auto destroy"
                          (2088770 'move' i[2088768] _yieldedIndex[2088762])
                          ref yret[2088773]:_ref(locale)[949033] "dead after last mention" "YVV" "temp"
                          ref _yieldedIndex[2088775]:_ref(locale)[949033] "coforall index var" "temp"
                          (2088777 'move' _yieldedIndex[2088775] i[2088768])
                          {
                            ref loc[2088781]:_ref(locale)[949033] "coforall index var" "index var" "insert auto destroy"
                            (2088783 'move' loc[2088781] _yieldedIndex[2088775])
                            const-val tmp[2088786]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
                            const-val call_tmp[2088788]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
                            val _locale_tmp_[2088790]:BaseLocale[91204] "dead after last mention" "temp"
                            (2088792 'move' _locale_tmp_[2088790](2088795 call _value[89984] loc[2088781]))
                            (2088797 'move' call_tmp[2088788](2088799 '_wide_get_locale' _locale_tmp_[2088790]))
                            (2088801 'move' tmp[2088786] call_tmp[2088788])
                            val rvfDerefTmp[2197250]:__serializeHelper[28089] "temp"
                            (2197253 'move' rvfDerefTmp[2197250] data[1867894])
                            val _args_foron_fn[2215303]:_class_localson_fn[2215287] "temp"
                            (2215307 'move' _args_foron_fn[2215303](2215305 'stack allocate class' _class_localson_fn[2215287]))
                            (2215309 '.=' _args_foron_fn[2215303] _0_tmp[2215290] tmp[2088786])
                            (2215313 '.=' _args_foron_fn[2215303] _1_root[2215292] root[1867914])
                            ref tmp[2215317]:string[26] "temp"
                            (2215321 'move' tmp[2215317](2215319 'set reference' localeZeroGlobal[1867796]))
                            (2215323 '.=' _args_foron_fn[2215303] _2_localeZeroGlobal[2215294] tmp[2215317])
                            (2215327 '.=' _args_foron_fn[2215303] _3_rvfDerefTmp[2215296] rvfDerefTmp[2197250])
                            (2215331 '.=' _args_foron_fn[2215303] _4_id[2215298] id[1867798])
                            (2215335 '.=' _args_foron_fn[2215303] _5__coforallCount[2215300] _coforallCount[1868054])
                            val _args_vforon_fn[2215339]:c_void_ptr[149] "temp"
                            (2215343 'move' _args_vforon_fn[2215339](2215341 'cast_to_void_star' _args_foron_fn[2215303]))
                            val _args_sizeon_fn[2215345]:int(64)[13] "temp"
                            (2215349 'move' _args_sizeon_fn[2215345](2215347 'sizeof_bundle' _class_localson_fn[2215287]))
                            on(2215424 call wrapon_fn[2215351] tmp[2088786] _args_vforon_fn[2215339] _args_sizeon_fn[2215345] _args_foron_fn[2215303])
                            {
                            }
                            label _continueLabel[2088813]
                          }
                        }
                      }
                    }
                    {
                      const-val low[2088646]:int(64)[13] "temp"
                      (2088648 'move' low[2088646](2088650 '.v' _iterator[2088539] F0_low[2126220]))
                      (2088653 '=' i[2088637] low[2088646])
                    }
                    {
                      const-val high[2088657]:int(64)[13] "temp"
                      (2088659 'move' high[2088657](2088661 '.v' _iterator[2088539] F1_high[2126224]))
                      (2088664 '<=' i[2088637] high[2088657])
                    }
                    {
                      val call_tmp[2088668]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      const-val call_tmp[2088670]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val stride[2088672]:int(64)[13] "temp"
                      (2088674 'move' stride[2088672](2088676 '.v' _iterator[2088539] F2_stride[2126228]))
                      (2088679 'move' call_tmp[2088670] stride[2088672])
                      const-val stride[2088682]:int(64)[13] "temp"
                      (2088684 'move' stride[2088682](2088686 '.v' _iterator[2088539] F2_stride[2126228]))
                      (2088689 '+=' i[2088637] stride[2088682])
                    }
                  }
                  label _endchpl_direct_pos_stride_range_iter[2088744]
                }
                (2088747 call _freeIterator[1303374] _iterator[2088539])
                label _endchpl__serialViewIter[2088749]
              }
              (2029744 call _freeIterator[1303809] _iterator[2029658])
              label _endthese[2029746]
            }
            (2029749 call _freeIterator[1304414] _iterator[2029599])
            label _endthese[2029751]
          }
          label _breakLabel[1868260]
          val error[1889362]:Error[167984] "error variable" "temp"
          (1889364 'move' error[1889362] nil[44])
          (1868268 call _waitEndCount[1350268] _coforallCount[1868054] numTasks[1868061] error[1889362])
          val errorExists[2224608]:bool[10] "temp"
          (2224613 'move' errorExists[2224608](2224610 '!=' error[1889362] nil[44]))
          if errorExists[2224608]
          {
            (1889367 call chpl_propagate_error[170518] error[1889362])
          }
          (1930096 call _endCountFree[1234049] _coforallCount[1868054])
          (1930100 call _freeIterator[1305165] _iterator[1868077])
        }
      }
      (1930103 call chpl__autoDestroy[1601737] call_tmp[1867900])
      (1930106 call chpl__autoDestroy[1601860] data[1867894])
    }
    (1868483 return _void[55])
  }
  function chpl__broadcastGlobal[1872060](const  ref arg localeZeroGlobal[1872062]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812], const in arg id[1872064]:int(64)[13]) : void[4] "serialized broadcast function" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    {
      const-val call_tmp[1872151]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1871345] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1918890]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1871345] "temp"
      (1872159 call chpl__serialize[1871042] localeZeroGlobal[1872062] ret_tmp[1918890])
      (1918893 'move' call_tmp[1872151] ret_tmp[1918890])
      const-val data[1872160]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1871345] "dead at end of block" "const" "insert auto destroy"
      (1872162 'move' data[1872160] call_tmp[1872151])
      const-val call_tmp[1872166]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1906670]:locale[28] "temp"
      (1872171 call here[90438] ret_tmp[1906670])
      (1906673 'move' call_tmp[1872166] ret_tmp[1906670])
      const-val call_tmp[1872172]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (1872174 'move' call_tmp[1872172](1872177 call id[90521] call_tmp[1872166]))
      const-val root[1872180]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      (1872182 'move' root[1872180] call_tmp[1872172])
      {
        ref tmpIter[1872187]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287226] "dead at end of block" "maybe ref" "no copy" "reference to a const" "temp"
        (1872189 'move' tmpIter[1872187] Locales[113662])
        {
          const _coforallCount[1872320]:_EndCount(AtomicT(int(64)),int(64))[945532] "dead after last mention" "concurrently accessed" "const" "end count" "temp"
          (1872322 'move' _coforallCount[1872320](1872325 call _endCountAlloc[939007]))
          const-val numTasks[1872327]:int(64)[13] "dead at end of block" "temp"
          (1872329 'move' numTasks[1872327](1872332 call size[1702574] tmpIter[1872187]))
          (1872336 call _upEndCount[1325561] _coforallCount[1872320] numTasks[1872327])
          ref _indexOfInterest[1872341]:_ref(locale)[949033] "dead at end of block" "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1872343]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304480] "dead at end of block" "expr temp" "temp"
          (1872345 'move' _iterator[1872343](1872348 call _getIterator[1298298] tmpIter[1872187]))
          {
            val ret[2030004]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304486] "dead after last mention" "RVV" "temp"
            ref _indexOfInterest[2030006]:_ref(locale)[949033] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[2030008]:_ic_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303875] "dead at end of block" "expr temp" "temp"
            val call_tmp[2030010]:[domain(1,int(64),false)] locale[1256675] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val this[2030201]:[domain(1,int(64),false)] locale[1287200] "temp"
            (2030206 'move' this[2030201](2030203 '.v' _iterator[1872343] F0_this[2120671]))
            (2030012 'move' call_tmp[2030010](2030015 call _value[1287255] this[2030201]))
            const-val call_tmp[2030017]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303881] "dead at end of block" "maybe param" "temp"
            val coerce_tmp[2030019]:[domain(1,int(64),false)] locale[1256675] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (2030021 'move' coerce_tmp[2030019] call_tmp[2030010])
            const-val default_arg_tasksPerLocale[2030024]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
            (2030026 'move' default_arg_tasksPerLocale[2030024](2030029 call these_default_tasksPerLocale[1298568] call_tmp[2030010]))
            const-val default_arg_ignoreRunning[2030031]:bool[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
            (2030033 'move' default_arg_ignoreRunning[2030031](2030036 call these_default_ignoreRunning[1298599] coerce_tmp[2030019]))
            const-val default_arg_minIndicesPerTask[2030038]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
            (2030040 'move' default_arg_minIndicesPerTask[2030038](2030043 call these_default_minIndicesPerTask[1298630] coerce_tmp[2030019]))
            const-val ret_tmp[2030045]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303881] "temp"
            (2030048 call these[1298452] coerce_tmp[2030019] default_arg_tasksPerLocale[2030024] default_arg_ignoreRunning[2030031] default_arg_minIndicesPerTask[2030038] ret_tmp[2030045])
            (2030054 'move' call_tmp[2030017] ret_tmp[2030045])
            (2030057 'move' _iterator[2030008](2030060 call _getIterator[1303890] call_tmp[2030017]))
            {
              val ret[2030063]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303881] "dead after last mention" "RVV" "temp"
              ref _indexOfInterest[2030065]:_ref(locale)[949033] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[2030067]:_ic_chpl__serialViewIter[1303625] "dead at end of block" "expr temp" "temp"
              ref call_tmp[2030069]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
              const-val this[2030071]:[domain(1,int(64),false)] locale[1256675] "temp"
              (2030073 'move' this[2030071](2030075 '.v' _iterator[2030008] F0_this[2122779]))
              (2030078 'move' call_tmp[2030069](2030081 call dom[1258208] this[2030071]))
              const-val call_tmp[2030083]:_ir_chpl__serialViewIter[1303631] "dead at end of block" "maybe param" "temp"
              val coerce_tmp[2030085]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2030087 'move' coerce_tmp[2030085](2030089 'deref' call_tmp[2030069]))
              const-val ret_tmp[2030091]:_ir_chpl__serialViewIter[1303631] "temp"
              const-val this[2030093]:[domain(1,int(64),false)] locale[1256675] "temp"
              (2030095 'move' this[2030093](2030097 '.v' _iterator[2030008] F0_this[2122779]))
              (2030101 call chpl__serialViewIter[1298664] this[2030093] coerce_tmp[2030085] ret_tmp[2030091])
              (2030105 'move' call_tmp[2030083] ret_tmp[2030091])
              (2030108 'move' _iterator[2030067](2030111 call _getIterator[1303640] call_tmp[2030083]))
              {
                val ret[2089370]:_ir_chpl__serialViewIter[1303631] "dead after last mention" "RVV" "temp"
                val info[2089372]:[domain(1,int(64),false)] locale[1256675] "dead at end of block" "insert auto destroy"
                val tmp[2089374]:[domain(1,int(64),false)] locale[1256675] "dead at end of block" "expr temp" "insert auto destroy" "maybe copy elided" "maybe param" "temp"
                val tmp[2089376]:[domain(1,int(64),false)] locale[1256675] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val arr[2089797]:[domain(1,int(64),false)] locale[1256675] "temp"
                (2089802 'move' arr[2089797](2089799 '.v' _iterator[2030067] F0_arr[2124684]))
                (2089378 'move' tmp[2089376] arr[2089797])
                const-val arr[2089804]:[domain(1,int(64),false)] locale[1256675] "temp"
                (2089809 'move' arr[2089804](2089806 '.v' _iterator[2030067] F0_arr[2124684]))
                (2089381 'move' tmp[2089374] arr[2089804])
                const-val arr[2089811]:[domain(1,int(64),false)] locale[1256675] "temp"
                (2089816 'move' arr[2089811](2089813 '.v' _iterator[2030067] F0_arr[2124684]))
                (2089384 '=' info[2089372] arr[2089811])
                (2089387 'noop')
                const-val call_tmp[2089388]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                val coerce_tmp[2089390]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                const-val viewDom[2089818]:domain(1,int(64),false)[1251123] "temp"
                (2089823 'move' viewDom[2089818](2089820 '.v' _iterator[2030067] F1_viewDom[2124688]))
                (2089392 'move' coerce_tmp[2089390] viewDom[2089818])
                const-val viewDom[2089825]:domain(1,int(64),false)[1251123] "temp"
                (2089830 'move' viewDom[2089825](2089827 '.v' _iterator[2030067] F1_viewDom[2124688]))
                (2089395 'move' call_tmp[2089388](2089398 call dsiLow[1300625] viewDom[2089825]))
                const-val call_tmp[2089400]:int(64)[13] "dead at end of block" "maybe param" "temp"
                const-val arr[2089832]:[domain(1,int(64),false)] locale[1256675] "temp"
                (2089837 'move' arr[2089832](2089834 '.v' _iterator[2030067] F0_arr[2124684]))
                (2089402 'move' call_tmp[2089400](2089405 call getDataIndex[1300884] arr[2089832] call_tmp[2089388]))
                const-val first[2089408]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                (2089410 'move' first[2089408] call_tmp[2089400])
                const-val call_tmp[2089413]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                val coerce_tmp[2089415]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                const-val viewDom[2089839]:domain(1,int(64),false)[1251123] "temp"
                (2089844 'move' viewDom[2089839](2089841 '.v' _iterator[2030067] F1_viewDom[2124688]))
                (2089417 'move' coerce_tmp[2089415] viewDom[2089839])
                (2089420 'move' call_tmp[2089413](2089423 call dsiLow[1300625] coerce_tmp[2089415]))
                const-val call_tmp[2089425]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                (2089427 'move' call_tmp[2089425](2089430 call chpl__idxToInt[1027105] call_tmp[2089413]))
                const-val call_tmp[2089432]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                (2089434 'move' call_tmp[2089432](2089437 call +[949855] call_tmp[2089425]))
                const-val call_tmp[2089439]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                val coerce_tmp[2089441]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                const-val viewDom[2089846]:domain(1,int(64),false)[1251123] "temp"
                (2089851 'move' viewDom[2089846](2089848 '.v' _iterator[2030067] F1_viewDom[2124688]))
                (2089443 'move' coerce_tmp[2089441] viewDom[2089846])
                (2089446 'move' call_tmp[2089439](2089449 call chpl_intToIdx[1302054] coerce_tmp[2089441] call_tmp[2089432]))
                const-val call_tmp[2089452]:int(64)[13] "dead at end of block" "maybe param" "temp"
                (2089454 'move' call_tmp[2089452](2089457 call getDataIndex[1300884] info[2089372] call_tmp[2089439]))
                const-val second[2089460]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                (2089462 'move' second[2089460] call_tmp[2089452])
                const-val call_tmp[2089465]:int(64)[13] "dead at end of block" "maybe param" "temp"
                (2089467 'move' call_tmp[2089465](2089470 call -[440532] call_tmp[2089452] call_tmp[2089400]))
                const-val step[2089473]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                (2089475 'move' step[2089473] call_tmp[2089465])
                const-val call_tmp[2089478]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                val coerce_tmp[2089480]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                const-val viewDom[2089853]:domain(1,int(64),false)[1251123] "temp"
                (2089858 'move' viewDom[2089853](2089855 '.v' _iterator[2030067] F1_viewDom[2124688]))
                (2089482 'move' coerce_tmp[2089480] viewDom[2089853])
                (2089485 'move' call_tmp[2089478](2089488 call dsiNumIndices[1263823] coerce_tmp[2089480]))
                const-val call_tmp[2089490]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                (2089492 'move' call_tmp[2089490](2089495 call -[962415] call_tmp[2089478]))
                const-val call_tmp[2089497]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                (2089499 'move' call_tmp[2089497](2089502 call *[441944] call_tmp[2089490] call_tmp[2089465]))
                const-val call_tmp[2089505]:int(64)[13] "dead at end of block" "maybe param" "temp"
                (2089507 'move' call_tmp[2089505](2089510 call +[439752] call_tmp[2089400] call_tmp[2089497]))
                const-val last[2089513]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                (2089515 'move' last[2089513] call_tmp[2089505])
                val _indexOfInterest[2089518]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[2089520]:_ic_chpl_direct_pos_stride_range_iter[1303186] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[2089522]:_ir_chpl_direct_pos_stride_range_iter[1303192] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[2089524]:_ir_chpl_direct_pos_stride_range_iter[1303192] "temp"
                (2089527 call chpl_direct_pos_stride_range_iter[1302141] call_tmp[2089400] call_tmp[2089505] call_tmp[2089465] ret_tmp[2089524])
                (2089532 'move' call_tmp[2089522] ret_tmp[2089524])
                (2089535 'move' _iterator[2089520](2089538 call _getIterator[1303201] call_tmp[2089522]))
                {
                  val ret[2089541]:_ir_chpl_direct_pos_stride_range_iter[1303192] "dead after last mention" "RVV" "temp"
                  val call_tmp[2089543]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val stride[2089545]:int(64)[13] "temp"
                  (2089547 'move' stride[2089545](2089549 '.v' _iterator[2089520] F2_stride[2126228]))
                  (2089553 call chpl_range_check_stride[1103022] stride[2089545])
                  val call_tmp[2089555]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val default_arg_first[2089557]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val low[2089559]:int(64)[13] "temp"
                  (2089561 'move' low[2089559](2089563 '.v' _iterator[2089520] F0_low[2126220]))
                  (2089566 'move' default_arg_first[2089557](2089569 call chpl_checkIfRangeIterWillOverflow_default_first[1103387] low[2089559]))
                  const-val default_arg_last[2089571]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val high[2089573]:int(64)[13] "temp"
                  (2089575 'move' high[2089573](2089577 '.v' _iterator[2089520] F1_high[2126224]))
                  (2089580 'move' default_arg_last[2089571](2089583 call chpl_checkIfRangeIterWillOverflow_default_last[1103415] high[2089573]))
                  const-val _return_tmp_[2089585]:bool[10] "dead after last mention" "temp"
                  const-val low[2089587]:int(64)[13] "temp"
                  (2089589 'move' low[2089587](2089591 '.v' _iterator[2089520] F0_low[2126220]))
                  const-val high[2089594]:int(64)[13] "temp"
                  (2089596 'move' high[2089594](2089598 '.v' _iterator[2089520] F1_high[2126224]))
                  const-val stride[2089601]:int(64)[13] "temp"
                  (2089603 'move' stride[2089601](2089605 '.v' _iterator[2089520] F2_stride[2126228]))
                  (2089608 'move' _return_tmp_[2089585](2089611 call chpl_checkIfRangeIterWillOverflow[1096265] low[2089587] high[2089594] stride[2089601] default_arg_first[2089557] default_arg_last[2089571] 1))
                  val i[2089618]:int(64)[13] "dead at end of block" "insert auto destroy"
                  val call_tmp[2089620]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (2089622 'move' i[2089618] 0)
                  CForLoop[2089625] hazard
                  {
                    const-val yret[2089673]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (2089675 'move' yret[2089673] i[2089618])
                    const-val _yieldedIndex[2089678]:int(64)[13] "temp"
                    (2089680 'move' _yieldedIndex[2089678] i[2089618])
                    {
                      const-val i[2089684]:int(64)[13] "const" "index var" "insert auto destroy"
                      (2089686 'move' i[2089684] _yieldedIndex[2089678])
                      ref yret[2089689]:_ref(locale)[949033] "dead after last mention" "YVV" "temp"
                      ref call_tmp[2089691]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
                      ref _this_tmp_[2089693]:_ref(_ddata(locale))[1255592] "dead after last mention" "temp"
                      (2089695 'move' _this_tmp_[2089693](2089698 call theData[1303439] info[2089372]))
                      val coerce_tmp[2089700]:_ddata(locale)[1255583] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (2089702 'move' coerce_tmp[2089700](2089704 'deref' _this_tmp_[2089693]))
                      (2089706 'move' call_tmp[2089691](2089709 call this[1303586] coerce_tmp[2089700] _yieldedIndex[2089678]))
                      ref _yieldedIndex[2089734]:_ref(locale)[949033] "temp"
                      (2089712 'move' _yieldedIndex[2089734] call_tmp[2089691])
                      {
                        ref elem[2089736]:_ref(locale)[949033] "index var" "insert auto destroy"
                        (2089738 'move' elem[2089736] _yieldedIndex[2089734])
                        ref yret[2089741]:_ref(locale)[949033] "dead after last mention" "YVV" "temp"
                        ref _yieldedIndex[2089743]:_ref(locale)[949033] "temp"
                        (2089745 'move' _yieldedIndex[2089743] elem[2089736])
                        {
                          ref i[2089749]:_ref(locale)[949033] "index var" "insert auto destroy"
                          (2089751 'move' i[2089749] _yieldedIndex[2089743])
                          ref yret[2089754]:_ref(locale)[949033] "dead after last mention" "YVV" "temp"
                          ref _yieldedIndex[2089756]:_ref(locale)[949033] "coforall index var" "temp"
                          (2089758 'move' _yieldedIndex[2089756] i[2089749])
                          {
                            ref loc[2089762]:_ref(locale)[949033] "coforall index var" "index var" "insert auto destroy"
                            (2089764 'move' loc[2089762] _yieldedIndex[2089756])
                            const-val tmp[2089767]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
                            const-val call_tmp[2089769]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
                            val _locale_tmp_[2089771]:BaseLocale[91204] "dead after last mention" "temp"
                            (2089773 'move' _locale_tmp_[2089771](2089776 call _value[89984] loc[2089762]))
                            (2089778 'move' call_tmp[2089769](2089780 '_wide_get_locale' _locale_tmp_[2089771]))
                            (2089782 'move' tmp[2089767] call_tmp[2089769])
                            val localeZeroGlobal_data[2197262]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1871345] "temp"
                            (2197264 call chpl__serialize[1871042] localeZeroGlobal[1872062] localeZeroGlobal_data[2197262])
                            val rvfDerefTmp[2197296]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1871345] "temp"
                            (2197299 'move' rvfDerefTmp[2197296] data[1872160])
                            val _args_foron_fn[2215575]:_class_localson_fn[2215559] "temp"
                            (2215579 'move' _args_foron_fn[2215575](2215577 'stack allocate class' _class_localson_fn[2215559]))
                            (2215581 '.=' _args_foron_fn[2215575] _0_tmp[2215562] tmp[2089767])
                            (2215585 '.=' _args_foron_fn[2215575] _1_root[2215564] root[1872180])
                            (2215589 '.=' _args_foron_fn[2215575] _2_localeZeroGlobal_data[2215566] localeZeroGlobal_data[2197262])
                            (2215593 '.=' _args_foron_fn[2215575] _3_rvfDerefTmp[2215568] rvfDerefTmp[2197296])
                            (2215597 '.=' _args_foron_fn[2215575] _4_id[2215570] id[1872064])
                            (2215601 '.=' _args_foron_fn[2215575] _5__coforallCount[2215572] _coforallCount[1872320])
                            val _args_vforon_fn[2215605]:c_void_ptr[149] "temp"
                            (2215609 'move' _args_vforon_fn[2215605](2215607 'cast_to_void_star' _args_foron_fn[2215575]))
                            val _args_sizeon_fn[2215611]:int(64)[13] "temp"
                            (2215615 'move' _args_sizeon_fn[2215611](2215613 'sizeof_bundle' _class_localson_fn[2215559]))
                            on(2215690 call wrapon_fn[2215617] tmp[2089767] _args_vforon_fn[2215605] _args_sizeon_fn[2215611] _args_foron_fn[2215575])
                            {
                            }
                            label _continueLabel[2089794]
                          }
                        }
                      }
                    }
                    {
                      const-val low[2089627]:int(64)[13] "temp"
                      (2089629 'move' low[2089627](2089631 '.v' _iterator[2089520] F0_low[2126220]))
                      (2089634 '=' i[2089618] low[2089627])
                    }
                    {
                      const-val high[2089638]:int(64)[13] "temp"
                      (2089640 'move' high[2089638](2089642 '.v' _iterator[2089520] F1_high[2126224]))
                      (2089645 '<=' i[2089618] high[2089638])
                    }
                    {
                      val call_tmp[2089649]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      const-val call_tmp[2089651]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val stride[2089653]:int(64)[13] "temp"
                      (2089655 'move' stride[2089653](2089657 '.v' _iterator[2089520] F2_stride[2126228]))
                      (2089660 'move' call_tmp[2089651] stride[2089653])
                      const-val stride[2089663]:int(64)[13] "temp"
                      (2089665 'move' stride[2089663](2089667 '.v' _iterator[2089520] F2_stride[2126228]))
                      (2089670 '+=' i[2089618] stride[2089663])
                    }
                  }
                  label _endchpl_direct_pos_stride_range_iter[2089725]
                }
                (2089728 call _freeIterator[1303374] _iterator[2089520])
                label _endchpl__serialViewIter[2089730]
              }
              (2030153 call _freeIterator[1303809] _iterator[2030067])
              label _endthese[2030155]
            }
            (2030158 call _freeIterator[1304414] _iterator[2030008])
            label _endthese[2030160]
          }
          label _breakLabel[1872526]
          val error[1889388]:Error[167984] "error variable" "temp"
          (1889390 'move' error[1889388] nil[44])
          (1872534 call _waitEndCount[1350268] _coforallCount[1872320] numTasks[1872327] error[1889388])
          val errorExists[2224624]:bool[10] "temp"
          (2224629 'move' errorExists[2224624](2224626 '!=' error[1889388] nil[44]))
          if errorExists[2224624]
          {
            (1889393 call chpl_propagate_error[170518] error[1889388])
          }
          (1930132 call _endCountFree[1234049] _coforallCount[1872320])
          (1930136 call _freeIterator[1305165] _iterator[1872343])
        }
      }
      (1930139 call chpl__autoDestroy[1601737] call_tmp[1872166])
      (1930142 call chpl__autoDestroy[1871799] data[1872160])
    }
    (1872749 return _void[55])
  }
  function chpl__destroyBroadcastedGlobal[1868491](ref arg localeZeroGlobal[1868493]:_ref(string)[938128], const in arg id[1868495]:int(64)[13]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val globalType[1868505]:string[26] "dead at end of block" "insert auto destroy" "type variable"
    const-val call_tmp[1868513]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1906658]:locale[28] "temp"
    (1868518 call here[90438] ret_tmp[1906658])
    (1906661 'move' call_tmp[1868513] ret_tmp[1906658])
    const-val call_tmp[1868519]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1868521 'move' call_tmp[1868519](1868524 call id[90521] call_tmp[1868513]))
    const-val root[1868527]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1868529 'move' root[1868527] call_tmp[1868519])
    {
      ref tmpIter[1868534]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287226] "dead at end of block" "maybe ref" "no copy" "reference to a const" "temp"
      (1868536 'move' tmpIter[1868534] Locales[113662])
      {
        const _coforallCount[1868667]:_EndCount(AtomicT(int(64)),int(64))[945532] "dead after last mention" "concurrently accessed" "const" "end count" "temp"
        (1868669 'move' _coforallCount[1868667](1868672 call _endCountAlloc[939007]))
        const-val numTasks[1868674]:int(64)[13] "dead at end of block" "temp"
        (1868676 'move' numTasks[1868674](1868679 call size[1702574] tmpIter[1868534]))
        (1868683 call _upEndCount[1325561] _coforallCount[1868667] numTasks[1868674])
        ref _indexOfInterest[1868688]:_ref(locale)[949033] "dead at end of block" "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1868690]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304480] "dead at end of block" "expr temp" "temp"
        (1868692 'move' _iterator[1868690](1868695 call _getIterator[1298298] tmpIter[1868534]))
        {
          val ret[2029800]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304486] "dead after last mention" "RVV" "temp"
          ref _indexOfInterest[2029802]:_ref(locale)[949033] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[2029804]:_ic_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303875] "dead at end of block" "expr temp" "temp"
          val call_tmp[2029806]:[domain(1,int(64),false)] locale[1256675] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val this[2029996]:[domain(1,int(64),false)] locale[1287200] "temp"
          (2030001 'move' this[2029996](2029998 '.v' _iterator[1868690] F0_this[2120671]))
          (2029808 'move' call_tmp[2029806](2029811 call _value[1287255] this[2029996]))
          const-val call_tmp[2029813]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303881] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[2029815]:[domain(1,int(64),false)] locale[1256675] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2029817 'move' coerce_tmp[2029815] call_tmp[2029806])
          const-val default_arg_tasksPerLocale[2029820]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
          (2029822 'move' default_arg_tasksPerLocale[2029820](2029825 call these_default_tasksPerLocale[1298568] call_tmp[2029806]))
          const-val default_arg_ignoreRunning[2029827]:bool[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
          (2029829 'move' default_arg_ignoreRunning[2029827](2029832 call these_default_ignoreRunning[1298599] coerce_tmp[2029815]))
          const-val default_arg_minIndicesPerTask[2029834]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
          (2029836 'move' default_arg_minIndicesPerTask[2029834](2029839 call these_default_minIndicesPerTask[1298630] coerce_tmp[2029815]))
          const-val ret_tmp[2029841]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303881] "temp"
          (2029844 call these[1298452] coerce_tmp[2029815] default_arg_tasksPerLocale[2029820] default_arg_ignoreRunning[2029827] default_arg_minIndicesPerTask[2029834] ret_tmp[2029841])
          (2029850 'move' call_tmp[2029813] ret_tmp[2029841])
          (2029853 'move' _iterator[2029804](2029856 call _getIterator[1303890] call_tmp[2029813]))
          {
            val ret[2029859]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303881] "dead after last mention" "RVV" "temp"
            ref _indexOfInterest[2029861]:_ref(locale)[949033] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[2029863]:_ic_chpl__serialViewIter[1303625] "dead at end of block" "expr temp" "temp"
            ref call_tmp[2029865]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
            const-val this[2029867]:[domain(1,int(64),false)] locale[1256675] "temp"
            (2029869 'move' this[2029867](2029871 '.v' _iterator[2029804] F0_this[2122779]))
            (2029874 'move' call_tmp[2029865](2029877 call dom[1258208] this[2029867]))
            const-val call_tmp[2029879]:_ir_chpl__serialViewIter[1303631] "dead at end of block" "maybe param" "temp"
            val coerce_tmp[2029881]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (2029883 'move' coerce_tmp[2029881](2029885 'deref' call_tmp[2029865]))
            const-val ret_tmp[2029887]:_ir_chpl__serialViewIter[1303631] "temp"
            const-val this[2029889]:[domain(1,int(64),false)] locale[1256675] "temp"
            (2029891 'move' this[2029889](2029893 '.v' _iterator[2029804] F0_this[2122779]))
            (2029897 call chpl__serialViewIter[1298664] this[2029889] coerce_tmp[2029881] ret_tmp[2029887])
            (2029901 'move' call_tmp[2029879] ret_tmp[2029887])
            (2029904 'move' _iterator[2029863](2029907 call _getIterator[1303640] call_tmp[2029879]))
            {
              val ret[2088880]:_ir_chpl__serialViewIter[1303631] "dead after last mention" "RVV" "temp"
              val info[2088882]:[domain(1,int(64),false)] locale[1256675] "dead at end of block" "insert auto destroy"
              val tmp[2088884]:[domain(1,int(64),false)] locale[1256675] "dead at end of block" "expr temp" "insert auto destroy" "maybe copy elided" "maybe param" "temp"
              val tmp[2088886]:[domain(1,int(64),false)] locale[1256675] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val arr[2089306]:[domain(1,int(64),false)] locale[1256675] "temp"
              (2089311 'move' arr[2089306](2089308 '.v' _iterator[2029863] F0_arr[2124684]))
              (2088888 'move' tmp[2088886] arr[2089306])
              const-val arr[2089313]:[domain(1,int(64),false)] locale[1256675] "temp"
              (2089318 'move' arr[2089313](2089315 '.v' _iterator[2029863] F0_arr[2124684]))
              (2088891 'move' tmp[2088884] arr[2089313])
              const-val arr[2089320]:[domain(1,int(64),false)] locale[1256675] "temp"
              (2089325 'move' arr[2089320](2089322 '.v' _iterator[2029863] F0_arr[2124684]))
              (2088894 '=' info[2088882] arr[2089320])
              (2088897 'noop')
              const-val call_tmp[2088898]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              val coerce_tmp[2088900]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              const-val viewDom[2089327]:domain(1,int(64),false)[1251123] "temp"
              (2089332 'move' viewDom[2089327](2089329 '.v' _iterator[2029863] F1_viewDom[2124688]))
              (2088902 'move' coerce_tmp[2088900] viewDom[2089327])
              const-val viewDom[2089334]:domain(1,int(64),false)[1251123] "temp"
              (2089339 'move' viewDom[2089334](2089336 '.v' _iterator[2029863] F1_viewDom[2124688]))
              (2088905 'move' call_tmp[2088898](2088908 call dsiLow[1300625] viewDom[2089334]))
              const-val call_tmp[2088910]:int(64)[13] "dead at end of block" "maybe param" "temp"
              const-val arr[2089341]:[domain(1,int(64),false)] locale[1256675] "temp"
              (2089346 'move' arr[2089341](2089343 '.v' _iterator[2029863] F0_arr[2124684]))
              (2088912 'move' call_tmp[2088910](2088915 call getDataIndex[1300884] arr[2089341] call_tmp[2088898]))
              const-val first[2088918]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              (2088920 'move' first[2088918] call_tmp[2088910])
              const-val call_tmp[2088923]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              val coerce_tmp[2088925]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              const-val viewDom[2089348]:domain(1,int(64),false)[1251123] "temp"
              (2089353 'move' viewDom[2089348](2089350 '.v' _iterator[2029863] F1_viewDom[2124688]))
              (2088927 'move' coerce_tmp[2088925] viewDom[2089348])
              (2088930 'move' call_tmp[2088923](2088933 call dsiLow[1300625] coerce_tmp[2088925]))
              const-val call_tmp[2088935]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              (2088937 'move' call_tmp[2088935](2088940 call chpl__idxToInt[1027105] call_tmp[2088923]))
              const-val call_tmp[2088942]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              (2088944 'move' call_tmp[2088942](2088947 call +[949855] call_tmp[2088935]))
              const-val call_tmp[2088949]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              val coerce_tmp[2088951]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              const-val viewDom[2089355]:domain(1,int(64),false)[1251123] "temp"
              (2089360 'move' viewDom[2089355](2089357 '.v' _iterator[2029863] F1_viewDom[2124688]))
              (2088953 'move' coerce_tmp[2088951] viewDom[2089355])
              (2088956 'move' call_tmp[2088949](2088959 call chpl_intToIdx[1302054] coerce_tmp[2088951] call_tmp[2088942]))
              const-val call_tmp[2088962]:int(64)[13] "dead at end of block" "maybe param" "temp"
              (2088964 'move' call_tmp[2088962](2088967 call getDataIndex[1300884] info[2088882] call_tmp[2088949]))
              const-val second[2088970]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              (2088972 'move' second[2088970] call_tmp[2088962])
              const-val call_tmp[2088975]:int(64)[13] "dead at end of block" "maybe param" "temp"
              (2088977 'move' call_tmp[2088975](2088980 call -[440532] call_tmp[2088962] call_tmp[2088910]))
              const-val step[2088983]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              (2088985 'move' step[2088983] call_tmp[2088975])
              const-val call_tmp[2088988]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              val coerce_tmp[2088990]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              const-val viewDom[2089362]:domain(1,int(64),false)[1251123] "temp"
              (2089367 'move' viewDom[2089362](2089364 '.v' _iterator[2029863] F1_viewDom[2124688]))
              (2088992 'move' coerce_tmp[2088990] viewDom[2089362])
              (2088995 'move' call_tmp[2088988](2088998 call dsiNumIndices[1263823] coerce_tmp[2088990]))
              const-val call_tmp[2089000]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              (2089002 'move' call_tmp[2089000](2089005 call -[962415] call_tmp[2088988]))
              const-val call_tmp[2089007]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              (2089009 'move' call_tmp[2089007](2089012 call *[441944] call_tmp[2089000] call_tmp[2088975]))
              const-val call_tmp[2089015]:int(64)[13] "dead at end of block" "maybe param" "temp"
              (2089017 'move' call_tmp[2089015](2089020 call +[439752] call_tmp[2088910] call_tmp[2089007]))
              const-val last[2089023]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              (2089025 'move' last[2089023] call_tmp[2089015])
              val _indexOfInterest[2089028]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[2089030]:_ic_chpl_direct_pos_stride_range_iter[1303186] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[2089032]:_ir_chpl_direct_pos_stride_range_iter[1303192] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[2089034]:_ir_chpl_direct_pos_stride_range_iter[1303192] "temp"
              (2089037 call chpl_direct_pos_stride_range_iter[1302141] call_tmp[2088910] call_tmp[2089015] call_tmp[2088975] ret_tmp[2089034])
              (2089042 'move' call_tmp[2089032] ret_tmp[2089034])
              (2089045 'move' _iterator[2089030](2089048 call _getIterator[1303201] call_tmp[2089032]))
              {
                val ret[2089051]:_ir_chpl_direct_pos_stride_range_iter[1303192] "dead after last mention" "RVV" "temp"
                val call_tmp[2089053]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val stride[2089055]:int(64)[13] "temp"
                (2089057 'move' stride[2089055](2089059 '.v' _iterator[2089030] F2_stride[2126228]))
                (2089063 call chpl_range_check_stride[1103022] stride[2089055])
                val call_tmp[2089065]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val default_arg_first[2089067]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val low[2089069]:int(64)[13] "temp"
                (2089071 'move' low[2089069](2089073 '.v' _iterator[2089030] F0_low[2126220]))
                (2089076 'move' default_arg_first[2089067](2089079 call chpl_checkIfRangeIterWillOverflow_default_first[1103387] low[2089069]))
                const-val default_arg_last[2089081]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val high[2089083]:int(64)[13] "temp"
                (2089085 'move' high[2089083](2089087 '.v' _iterator[2089030] F1_high[2126224]))
                (2089090 'move' default_arg_last[2089081](2089093 call chpl_checkIfRangeIterWillOverflow_default_last[1103415] high[2089083]))
                const-val _return_tmp_[2089095]:bool[10] "dead after last mention" "temp"
                const-val low[2089097]:int(64)[13] "temp"
                (2089099 'move' low[2089097](2089101 '.v' _iterator[2089030] F0_low[2126220]))
                const-val high[2089104]:int(64)[13] "temp"
                (2089106 'move' high[2089104](2089108 '.v' _iterator[2089030] F1_high[2126224]))
                const-val stride[2089111]:int(64)[13] "temp"
                (2089113 'move' stride[2089111](2089115 '.v' _iterator[2089030] F2_stride[2126228]))
                (2089118 'move' _return_tmp_[2089095](2089121 call chpl_checkIfRangeIterWillOverflow[1096265] low[2089097] high[2089104] stride[2089111] default_arg_first[2089067] default_arg_last[2089081] 1))
                val i[2089128]:int(64)[13] "dead at end of block" "insert auto destroy"
                val call_tmp[2089130]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (2089132 'move' i[2089128] 0)
                CForLoop[2089135] hazard
                {
                  const-val yret[2089183]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (2089185 'move' yret[2089183] i[2089128])
                  const-val _yieldedIndex[2089188]:int(64)[13] "temp"
                  (2089190 'move' _yieldedIndex[2089188] i[2089128])
                  {
                    const-val i[2089194]:int(64)[13] "const" "index var" "insert auto destroy"
                    (2089196 'move' i[2089194] _yieldedIndex[2089188])
                    ref yret[2089199]:_ref(locale)[949033] "dead after last mention" "YVV" "temp"
                    ref call_tmp[2089201]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
                    ref _this_tmp_[2089203]:_ref(_ddata(locale))[1255592] "dead after last mention" "temp"
                    (2089205 'move' _this_tmp_[2089203](2089208 call theData[1303439] info[2088882]))
                    val coerce_tmp[2089210]:_ddata(locale)[1255583] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (2089212 'move' coerce_tmp[2089210](2089214 'deref' _this_tmp_[2089203]))
                    (2089216 'move' call_tmp[2089201](2089219 call this[1303586] coerce_tmp[2089210] _yieldedIndex[2089188]))
                    ref _yieldedIndex[2089244]:_ref(locale)[949033] "temp"
                    (2089222 'move' _yieldedIndex[2089244] call_tmp[2089201])
                    {
                      ref elem[2089246]:_ref(locale)[949033] "index var" "insert auto destroy"
                      (2089248 'move' elem[2089246] _yieldedIndex[2089244])
                      ref yret[2089251]:_ref(locale)[949033] "dead after last mention" "YVV" "temp"
                      ref _yieldedIndex[2089253]:_ref(locale)[949033] "temp"
                      (2089255 'move' _yieldedIndex[2089253] elem[2089246])
                      {
                        ref i[2089259]:_ref(locale)[949033] "index var" "insert auto destroy"
                        (2089261 'move' i[2089259] _yieldedIndex[2089253])
                        ref yret[2089264]:_ref(locale)[949033] "dead after last mention" "YVV" "temp"
                        ref _yieldedIndex[2089266]:_ref(locale)[949033] "coforall index var" "temp"
                        (2089268 'move' _yieldedIndex[2089266] i[2089259])
                        {
                          ref loc[2089272]:_ref(locale)[949033] "coforall index var" "index var" "insert auto destroy"
                          (2089274 'move' loc[2089272] _yieldedIndex[2089266])
                          const-val tmp[2089277]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
                          const-val call_tmp[2089279]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
                          val _locale_tmp_[2089281]:BaseLocale[91204] "dead after last mention" "temp"
                          (2089283 'move' _locale_tmp_[2089281](2089286 call _value[89984] loc[2089272]))
                          (2089288 'move' call_tmp[2089279](2089290 '_wide_get_locale' _locale_tmp_[2089281]))
                          (2089292 'move' tmp[2089277] call_tmp[2089279])
                          val _args_foron_fn[2215444]:_class_localson_fn[2215430] "temp"
                          (2215448 'move' _args_foron_fn[2215444](2215446 'stack allocate class' _class_localson_fn[2215430]))
                          (2215450 '.=' _args_foron_fn[2215444] _0_tmp[2215433] tmp[2089277])
                          (2215454 '.=' _args_foron_fn[2215444] _1_root[2215435] root[1868527])
                          (2215458 '.=' _args_foron_fn[2215444] _2_id[2215437] id[1868495])
                          ref tmp[2215462]:string[26] "temp"
                          (2215466 'move' tmp[2215462](2215464 'set reference' globalType[1868505]))
                          (2215468 '.=' _args_foron_fn[2215444] _3_globalType[2215439] tmp[2215462])
                          (2215472 '.=' _args_foron_fn[2215444] _4__coforallCount[2215441] _coforallCount[1868667])
                          val _args_vforon_fn[2215476]:c_void_ptr[149] "temp"
                          (2215480 'move' _args_vforon_fn[2215476](2215478 'cast_to_void_star' _args_foron_fn[2215444]))
                          val _args_sizeon_fn[2215482]:int(64)[13] "temp"
                          (2215486 'move' _args_sizeon_fn[2215482](2215484 'sizeof_bundle' _class_localson_fn[2215430]))
                          on(2215553 call wrapon_fn[2215488] tmp[2089277] _args_vforon_fn[2215476] _args_sizeon_fn[2215482] _args_foron_fn[2215444])
                          {
                          }
                          label _continueLabel[2089303]
                        }
                      }
                    }
                  }
                  {
                    const-val low[2089137]:int(64)[13] "temp"
                    (2089139 'move' low[2089137](2089141 '.v' _iterator[2089030] F0_low[2126220]))
                    (2089144 '=' i[2089128] low[2089137])
                  }
                  {
                    const-val high[2089148]:int(64)[13] "temp"
                    (2089150 'move' high[2089148](2089152 '.v' _iterator[2089030] F1_high[2126224]))
                    (2089155 '<=' i[2089128] high[2089148])
                  }
                  {
                    val call_tmp[2089159]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    const-val call_tmp[2089161]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val stride[2089163]:int(64)[13] "temp"
                    (2089165 'move' stride[2089163](2089167 '.v' _iterator[2089030] F2_stride[2126228]))
                    (2089170 'move' call_tmp[2089161] stride[2089163])
                    const-val stride[2089173]:int(64)[13] "temp"
                    (2089175 'move' stride[2089173](2089177 '.v' _iterator[2089030] F2_stride[2126228]))
                    (2089180 '+=' i[2089128] stride[2089173])
                  }
                }
                label _endchpl_direct_pos_stride_range_iter[2089235]
              }
              (2089238 call _freeIterator[1303374] _iterator[2089030])
              label _endchpl__serialViewIter[2089240]
            }
            (2029949 call _freeIterator[1303809] _iterator[2029863])
            label _endthese[2029951]
          }
          (2029954 call _freeIterator[1304414] _iterator[2029804])
          label _endthese[2029956]
        }
        label _breakLabel[1868845]
        val error[1889375]:Error[167984] "error variable" "temp"
        (1889377 'move' error[1889375] nil[44])
        (1868853 call _waitEndCount[1350268] _coforallCount[1868667] numTasks[1868674] error[1889375])
        val errorExists[2224616]:bool[10] "temp"
        (2224621 'move' errorExists[2224616](2224618 '!=' error[1889375] nil[44]))
        if errorExists[2224616]
        {
          (1889380 call chpl_propagate_error[170518] error[1889375])
        }
        (1930116 call _endCountFree[1234049] _coforallCount[1868667])
        (1930120 call _freeIterator[1305165] _iterator[1868690])
      }
    }
    (1930122 call chpl__autoDestroy[1601737] call_tmp[1868513])
    (1869039 return _void[55])
  }
  function chpl__destroyBroadcastedGlobal[1872757](const  ref arg localeZeroGlobal[1872759]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812], const in arg id[1872761]:int(64)[13]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val globalType[1872771]:_RuntimeTypeInfo[1253862] "dead at end of block" "insert auto destroy"
    (1872775 'move' globalType[1872771](1873522 call chpl__convertValueToRuntimeType[1600392] localeZeroGlobal[1872759]))
    const-val call_tmp[1872779]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1906682]:locale[28] "temp"
    (1872784 call here[90438] ret_tmp[1906682])
    (1906685 'move' call_tmp[1872779] ret_tmp[1906682])
    const-val call_tmp[1872785]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1872787 'move' call_tmp[1872785](1872790 call id[90521] call_tmp[1872779]))
    const-val root[1872793]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1872795 'move' root[1872793] call_tmp[1872785])
    {
      ref tmpIter[1872800]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287226] "dead at end of block" "maybe ref" "no copy" "reference to a const" "temp"
      (1872802 'move' tmpIter[1872800] Locales[113662])
      {
        const _coforallCount[1872933]:_EndCount(AtomicT(int(64)),int(64))[945532] "dead after last mention" "concurrently accessed" "const" "end count" "temp"
        (1872935 'move' _coforallCount[1872933](1872938 call _endCountAlloc[939007]))
        const-val numTasks[1872940]:int(64)[13] "dead at end of block" "temp"
        (1872942 'move' numTasks[1872940](1872945 call size[1702574] tmpIter[1872800]))
        (1872949 call _upEndCount[1325561] _coforallCount[1872933] numTasks[1872940])
        ref _indexOfInterest[1872954]:_ref(locale)[949033] "dead at end of block" "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1872956]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304480] "dead at end of block" "expr temp" "temp"
        (1872958 'move' _iterator[1872956](1872961 call _getIterator[1298298] tmpIter[1872800]))
        {
          val ret[2030209]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304486] "dead after last mention" "RVV" "temp"
          ref _indexOfInterest[2030211]:_ref(locale)[949033] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[2030213]:_ic_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303875] "dead at end of block" "expr temp" "temp"
          val call_tmp[2030215]:[domain(1,int(64),false)] locale[1256675] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val this[2030405]:[domain(1,int(64),false)] locale[1287200] "temp"
          (2030410 'move' this[2030405](2030407 '.v' _iterator[1872956] F0_this[2120671]))
          (2030217 'move' call_tmp[2030215](2030220 call _value[1287255] this[2030405]))
          const-val call_tmp[2030222]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303881] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[2030224]:[domain(1,int(64),false)] locale[1256675] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2030226 'move' coerce_tmp[2030224] call_tmp[2030215])
          const-val default_arg_tasksPerLocale[2030229]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
          (2030231 'move' default_arg_tasksPerLocale[2030229](2030234 call these_default_tasksPerLocale[1298568] call_tmp[2030215]))
          const-val default_arg_ignoreRunning[2030236]:bool[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
          (2030238 'move' default_arg_ignoreRunning[2030236](2030241 call these_default_ignoreRunning[1298599] coerce_tmp[2030224]))
          const-val default_arg_minIndicesPerTask[2030243]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
          (2030245 'move' default_arg_minIndicesPerTask[2030243](2030248 call these_default_minIndicesPerTask[1298630] coerce_tmp[2030224]))
          const-val ret_tmp[2030250]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303881] "temp"
          (2030253 call these[1298452] coerce_tmp[2030224] default_arg_tasksPerLocale[2030229] default_arg_ignoreRunning[2030236] default_arg_minIndicesPerTask[2030243] ret_tmp[2030250])
          (2030259 'move' call_tmp[2030222] ret_tmp[2030250])
          (2030262 'move' _iterator[2030213](2030265 call _getIterator[1303890] call_tmp[2030222]))
          {
            val ret[2030268]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303881] "dead after last mention" "RVV" "temp"
            ref _indexOfInterest[2030270]:_ref(locale)[949033] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[2030272]:_ic_chpl__serialViewIter[1303625] "dead at end of block" "expr temp" "temp"
            ref call_tmp[2030274]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
            const-val this[2030276]:[domain(1,int(64),false)] locale[1256675] "temp"
            (2030278 'move' this[2030276](2030280 '.v' _iterator[2030213] F0_this[2122779]))
            (2030283 'move' call_tmp[2030274](2030286 call dom[1258208] this[2030276]))
            const-val call_tmp[2030288]:_ir_chpl__serialViewIter[1303631] "dead at end of block" "maybe param" "temp"
            val coerce_tmp[2030290]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (2030292 'move' coerce_tmp[2030290](2030294 'deref' call_tmp[2030274]))
            const-val ret_tmp[2030296]:_ir_chpl__serialViewIter[1303631] "temp"
            const-val this[2030298]:[domain(1,int(64),false)] locale[1256675] "temp"
            (2030300 'move' this[2030298](2030302 '.v' _iterator[2030213] F0_this[2122779]))
            (2030306 call chpl__serialViewIter[1298664] this[2030298] coerce_tmp[2030290] ret_tmp[2030296])
            (2030310 'move' call_tmp[2030288] ret_tmp[2030296])
            (2030313 'move' _iterator[2030272](2030316 call _getIterator[1303640] call_tmp[2030288]))
            {
              val ret[2089861]:_ir_chpl__serialViewIter[1303631] "dead after last mention" "RVV" "temp"
              val info[2089863]:[domain(1,int(64),false)] locale[1256675] "dead at end of block" "insert auto destroy"
              val tmp[2089865]:[domain(1,int(64),false)] locale[1256675] "dead at end of block" "expr temp" "insert auto destroy" "maybe copy elided" "maybe param" "temp"
              val tmp[2089867]:[domain(1,int(64),false)] locale[1256675] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val arr[2090287]:[domain(1,int(64),false)] locale[1256675] "temp"
              (2090292 'move' arr[2090287](2090289 '.v' _iterator[2030272] F0_arr[2124684]))
              (2089869 'move' tmp[2089867] arr[2090287])
              const-val arr[2090294]:[domain(1,int(64),false)] locale[1256675] "temp"
              (2090299 'move' arr[2090294](2090296 '.v' _iterator[2030272] F0_arr[2124684]))
              (2089872 'move' tmp[2089865] arr[2090294])
              const-val arr[2090301]:[domain(1,int(64),false)] locale[1256675] "temp"
              (2090306 'move' arr[2090301](2090303 '.v' _iterator[2030272] F0_arr[2124684]))
              (2089875 '=' info[2089863] arr[2090301])
              (2089878 'noop')
              const-val call_tmp[2089879]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              val coerce_tmp[2089881]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              const-val viewDom[2090308]:domain(1,int(64),false)[1251123] "temp"
              (2090313 'move' viewDom[2090308](2090310 '.v' _iterator[2030272] F1_viewDom[2124688]))
              (2089883 'move' coerce_tmp[2089881] viewDom[2090308])
              const-val viewDom[2090315]:domain(1,int(64),false)[1251123] "temp"
              (2090320 'move' viewDom[2090315](2090317 '.v' _iterator[2030272] F1_viewDom[2124688]))
              (2089886 'move' call_tmp[2089879](2089889 call dsiLow[1300625] viewDom[2090315]))
              const-val call_tmp[2089891]:int(64)[13] "dead at end of block" "maybe param" "temp"
              const-val arr[2090322]:[domain(1,int(64),false)] locale[1256675] "temp"
              (2090327 'move' arr[2090322](2090324 '.v' _iterator[2030272] F0_arr[2124684]))
              (2089893 'move' call_tmp[2089891](2089896 call getDataIndex[1300884] arr[2090322] call_tmp[2089879]))
              const-val first[2089899]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              (2089901 'move' first[2089899] call_tmp[2089891])
              const-val call_tmp[2089904]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              val coerce_tmp[2089906]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              const-val viewDom[2090329]:domain(1,int(64),false)[1251123] "temp"
              (2090334 'move' viewDom[2090329](2090331 '.v' _iterator[2030272] F1_viewDom[2124688]))
              (2089908 'move' coerce_tmp[2089906] viewDom[2090329])
              (2089911 'move' call_tmp[2089904](2089914 call dsiLow[1300625] coerce_tmp[2089906]))
              const-val call_tmp[2089916]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              (2089918 'move' call_tmp[2089916](2089921 call chpl__idxToInt[1027105] call_tmp[2089904]))
              const-val call_tmp[2089923]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              (2089925 'move' call_tmp[2089923](2089928 call +[949855] call_tmp[2089916]))
              const-val call_tmp[2089930]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              val coerce_tmp[2089932]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              const-val viewDom[2090336]:domain(1,int(64),false)[1251123] "temp"
              (2090341 'move' viewDom[2090336](2090338 '.v' _iterator[2030272] F1_viewDom[2124688]))
              (2089934 'move' coerce_tmp[2089932] viewDom[2090336])
              (2089937 'move' call_tmp[2089930](2089940 call chpl_intToIdx[1302054] coerce_tmp[2089932] call_tmp[2089923]))
              const-val call_tmp[2089943]:int(64)[13] "dead at end of block" "maybe param" "temp"
              (2089945 'move' call_tmp[2089943](2089948 call getDataIndex[1300884] info[2089863] call_tmp[2089930]))
              const-val second[2089951]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              (2089953 'move' second[2089951] call_tmp[2089943])
              const-val call_tmp[2089956]:int(64)[13] "dead at end of block" "maybe param" "temp"
              (2089958 'move' call_tmp[2089956](2089961 call -[440532] call_tmp[2089943] call_tmp[2089891]))
              const-val step[2089964]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              (2089966 'move' step[2089964] call_tmp[2089956])
              const-val call_tmp[2089969]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              val coerce_tmp[2089971]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              const-val viewDom[2090343]:domain(1,int(64),false)[1251123] "temp"
              (2090348 'move' viewDom[2090343](2090345 '.v' _iterator[2030272] F1_viewDom[2124688]))
              (2089973 'move' coerce_tmp[2089971] viewDom[2090343])
              (2089976 'move' call_tmp[2089969](2089979 call dsiNumIndices[1263823] coerce_tmp[2089971]))
              const-val call_tmp[2089981]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              (2089983 'move' call_tmp[2089981](2089986 call -[962415] call_tmp[2089969]))
              const-val call_tmp[2089988]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              (2089990 'move' call_tmp[2089988](2089993 call *[441944] call_tmp[2089981] call_tmp[2089956]))
              const-val call_tmp[2089996]:int(64)[13] "dead at end of block" "maybe param" "temp"
              (2089998 'move' call_tmp[2089996](2090001 call +[439752] call_tmp[2089891] call_tmp[2089988]))
              const-val last[2090004]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              (2090006 'move' last[2090004] call_tmp[2089996])
              val _indexOfInterest[2090009]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[2090011]:_ic_chpl_direct_pos_stride_range_iter[1303186] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[2090013]:_ir_chpl_direct_pos_stride_range_iter[1303192] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[2090015]:_ir_chpl_direct_pos_stride_range_iter[1303192] "temp"
              (2090018 call chpl_direct_pos_stride_range_iter[1302141] call_tmp[2089891] call_tmp[2089996] call_tmp[2089956] ret_tmp[2090015])
              (2090023 'move' call_tmp[2090013] ret_tmp[2090015])
              (2090026 'move' _iterator[2090011](2090029 call _getIterator[1303201] call_tmp[2090013]))
              {
                val ret[2090032]:_ir_chpl_direct_pos_stride_range_iter[1303192] "dead after last mention" "RVV" "temp"
                val call_tmp[2090034]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val stride[2090036]:int(64)[13] "temp"
                (2090038 'move' stride[2090036](2090040 '.v' _iterator[2090011] F2_stride[2126228]))
                (2090044 call chpl_range_check_stride[1103022] stride[2090036])
                val call_tmp[2090046]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val default_arg_first[2090048]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val low[2090050]:int(64)[13] "temp"
                (2090052 'move' low[2090050](2090054 '.v' _iterator[2090011] F0_low[2126220]))
                (2090057 'move' default_arg_first[2090048](2090060 call chpl_checkIfRangeIterWillOverflow_default_first[1103387] low[2090050]))
                const-val default_arg_last[2090062]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val high[2090064]:int(64)[13] "temp"
                (2090066 'move' high[2090064](2090068 '.v' _iterator[2090011] F1_high[2126224]))
                (2090071 'move' default_arg_last[2090062](2090074 call chpl_checkIfRangeIterWillOverflow_default_last[1103415] high[2090064]))
                const-val _return_tmp_[2090076]:bool[10] "dead after last mention" "temp"
                const-val low[2090078]:int(64)[13] "temp"
                (2090080 'move' low[2090078](2090082 '.v' _iterator[2090011] F0_low[2126220]))
                const-val high[2090085]:int(64)[13] "temp"
                (2090087 'move' high[2090085](2090089 '.v' _iterator[2090011] F1_high[2126224]))
                const-val stride[2090092]:int(64)[13] "temp"
                (2090094 'move' stride[2090092](2090096 '.v' _iterator[2090011] F2_stride[2126228]))
                (2090099 'move' _return_tmp_[2090076](2090102 call chpl_checkIfRangeIterWillOverflow[1096265] low[2090078] high[2090085] stride[2090092] default_arg_first[2090048] default_arg_last[2090062] 1))
                val i[2090109]:int(64)[13] "dead at end of block" "insert auto destroy"
                val call_tmp[2090111]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (2090113 'move' i[2090109] 0)
                CForLoop[2090116] hazard
                {
                  const-val yret[2090164]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (2090166 'move' yret[2090164] i[2090109])
                  const-val _yieldedIndex[2090169]:int(64)[13] "temp"
                  (2090171 'move' _yieldedIndex[2090169] i[2090109])
                  {
                    const-val i[2090175]:int(64)[13] "const" "index var" "insert auto destroy"
                    (2090177 'move' i[2090175] _yieldedIndex[2090169])
                    ref yret[2090180]:_ref(locale)[949033] "dead after last mention" "YVV" "temp"
                    ref call_tmp[2090182]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
                    ref _this_tmp_[2090184]:_ref(_ddata(locale))[1255592] "dead after last mention" "temp"
                    (2090186 'move' _this_tmp_[2090184](2090189 call theData[1303439] info[2089863]))
                    val coerce_tmp[2090191]:_ddata(locale)[1255583] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (2090193 'move' coerce_tmp[2090191](2090195 'deref' _this_tmp_[2090184]))
                    (2090197 'move' call_tmp[2090182](2090200 call this[1303586] coerce_tmp[2090191] _yieldedIndex[2090169]))
                    ref _yieldedIndex[2090225]:_ref(locale)[949033] "temp"
                    (2090203 'move' _yieldedIndex[2090225] call_tmp[2090182])
                    {
                      ref elem[2090227]:_ref(locale)[949033] "index var" "insert auto destroy"
                      (2090229 'move' elem[2090227] _yieldedIndex[2090225])
                      ref yret[2090232]:_ref(locale)[949033] "dead after last mention" "YVV" "temp"
                      ref _yieldedIndex[2090234]:_ref(locale)[949033] "temp"
                      (2090236 'move' _yieldedIndex[2090234] elem[2090227])
                      {
                        ref i[2090240]:_ref(locale)[949033] "index var" "insert auto destroy"
                        (2090242 'move' i[2090240] _yieldedIndex[2090234])
                        ref yret[2090245]:_ref(locale)[949033] "dead after last mention" "YVV" "temp"
                        ref _yieldedIndex[2090247]:_ref(locale)[949033] "coforall index var" "temp"
                        (2090249 'move' _yieldedIndex[2090247] i[2090240])
                        {
                          ref loc[2090253]:_ref(locale)[949033] "coforall index var" "index var" "insert auto destroy"
                          (2090255 'move' loc[2090253] _yieldedIndex[2090247])
                          const-val tmp[2090258]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
                          const-val call_tmp[2090260]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
                          val _locale_tmp_[2090262]:BaseLocale[91204] "dead after last mention" "temp"
                          (2090264 'move' _locale_tmp_[2090262](2090267 call _value[89984] loc[2090253]))
                          (2090269 'move' call_tmp[2090260](2090271 '_wide_get_locale' _locale_tmp_[2090262]))
                          (2090273 'move' tmp[2090258] call_tmp[2090260])
                          val _args_foron_fn[2215710]:_class_localson_fn[2215696] "temp"
                          (2215714 'move' _args_foron_fn[2215710](2215712 'stack allocate class' _class_localson_fn[2215696]))
                          (2215716 '.=' _args_foron_fn[2215710] _0_tmp[2215699] tmp[2090258])
                          (2215720 '.=' _args_foron_fn[2215710] _1_root[2215701] root[1872793])
                          (2215724 '.=' _args_foron_fn[2215710] _2_id[2215703] id[1872761])
                          ref tmp[2215728]:_RuntimeTypeInfo[1253862] "temp"
                          (2215732 'move' tmp[2215728](2215730 'set reference' globalType[1872771]))
                          (2215734 '.=' _args_foron_fn[2215710] _3_globalType[2215705] tmp[2215728])
                          (2215738 '.=' _args_foron_fn[2215710] _4__coforallCount[2215707] _coforallCount[1872933])
                          val _args_vforon_fn[2215742]:c_void_ptr[149] "temp"
                          (2215746 'move' _args_vforon_fn[2215742](2215744 'cast_to_void_star' _args_foron_fn[2215710]))
                          val _args_sizeon_fn[2215748]:int(64)[13] "temp"
                          (2215752 'move' _args_sizeon_fn[2215748](2215750 'sizeof_bundle' _class_localson_fn[2215696]))
                          on(2215819 call wrapon_fn[2215754] tmp[2090258] _args_vforon_fn[2215742] _args_sizeon_fn[2215748] _args_foron_fn[2215710])
                          {
                          }
                          label _continueLabel[2090284]
                        }
                      }
                    }
                  }
                  {
                    const-val low[2090118]:int(64)[13] "temp"
                    (2090120 'move' low[2090118](2090122 '.v' _iterator[2090011] F0_low[2126220]))
                    (2090125 '=' i[2090109] low[2090118])
                  }
                  {
                    const-val high[2090129]:int(64)[13] "temp"
                    (2090131 'move' high[2090129](2090133 '.v' _iterator[2090011] F1_high[2126224]))
                    (2090136 '<=' i[2090109] high[2090129])
                  }
                  {
                    val call_tmp[2090140]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    const-val call_tmp[2090142]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val stride[2090144]:int(64)[13] "temp"
                    (2090146 'move' stride[2090144](2090148 '.v' _iterator[2090011] F2_stride[2126228]))
                    (2090151 'move' call_tmp[2090142] stride[2090144])
                    const-val stride[2090154]:int(64)[13] "temp"
                    (2090156 'move' stride[2090154](2090158 '.v' _iterator[2090011] F2_stride[2126228]))
                    (2090161 '+=' i[2090109] stride[2090154])
                  }
                }
                label _endchpl_direct_pos_stride_range_iter[2090216]
              }
              (2090219 call _freeIterator[1303374] _iterator[2090011])
              label _endchpl__serialViewIter[2090221]
            }
            (2030358 call _freeIterator[1303809] _iterator[2030272])
            label _endthese[2030360]
          }
          (2030363 call _freeIterator[1304414] _iterator[2030213])
          label _endthese[2030365]
        }
        label _breakLabel[1873111]
        val error[1889401]:Error[167984] "error variable" "temp"
        (1889403 'move' error[1889401] nil[44])
        (1873119 call _waitEndCount[1350268] _coforallCount[1872933] numTasks[1872940] error[1889401])
        val errorExists[2224632]:bool[10] "temp"
        (2224637 'move' errorExists[2224632](2224634 '!=' error[1889401] nil[44]))
        if errorExists[2224632]
        {
          (1889406 call chpl_propagate_error[170518] error[1889401])
        }
        (1930152 call _endCountFree[1234049] _coforallCount[1872933])
        (1930156 call _freeIterator[1305165] _iterator[1872956])
      }
    }
    (1930158 call chpl__autoDestroy[1601737] call_tmp[1872779])
    (1873305 return _void[55])
  }
  function on_fn[1868125](const in arg root[1868129]:int(64)[13], const  ref arg localeZeroGlobal[1868131]:_ref(string)[938128], const in arg data[1868133]:__serializeHelper[28089], const in arg id[1868135]:int(64)[13], const in arg _coforallCount[1882954]:_EndCount(AtomicT(int(64)),int(64))[945532]) : void[4] "cobegin or coforall" "non blocking" "on" "resolved"
  {
    {
      const-val call_tmp[1868139]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1906652]:locale[28] "temp"
      (1868144 call here[90438] ret_tmp[1906652])
      (1906655 'move' call_tmp[1868139] ret_tmp[1906652])
      const-val call_tmp[1868145]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1868147 'move' call_tmp[1868145](1868150 call id[90521] call_tmp[1868139]))
      const-val call_tmp[1868153]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1868155 'move' call_tmp[1868153](1868158 call !=[436128] call_tmp[1868145] root[1868129]))
      const-val call_tmp[1868161]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1868163 'move' call_tmp[1868161] call_tmp[1868153])
      if call_tmp[1868161]
      {
        val call_tmp[1868170]:string[26] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1868176]:string[26] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1918878]:string[26] "temp"
        val rvfRerefTmp[2197256]:__serializeHelper[28089] "temp"
        (2197259 'move' rvfRerefTmp[2197256] data[1868133])
        (1868184 call chpl__deserialize[1867128] rvfRerefTmp[2197256] ret_tmp[1918878])
        (1918881 'move' call_tmp[1868176] ret_tmp[1918878])
        const-val temp[1868186]:string[26] "dead at end of block" "no auto destroy" "no copy"
        (1868188 'move' temp[1868186] call_tmp[1868176])
        const-val call_tmp[1868192]:c_void_ptr[149] "dead at end of block" "maybe param" "temp"
        (1868194 'move' call_tmp[1868192](1868197 call chpl_get_global_serialize_table[171479] id[1868135]))
        const-val destVoidPtr[1868199]:c_void_ptr[149] "dead at end of block" "const" "insert auto destroy"
        (1868201 'move' destVoidPtr[1868199](1869162 call chpl__initCopy[945431] call_tmp[1868192]))
        val call_tmp[1868205]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[1868211]:c_ptr(string)[1869168] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[1868218]:c_ptr(string)[1869168] "dead at end of block" "maybe param" "temp"
        (1868220 'move' call_tmp[1868218](1868223 call _cast[1869188] destVoidPtr[1868199]))
        const dest[1868226]:c_ptr(string)[1869168] "dead at end of block" "const" "insert auto destroy"
        (1868228 'move' dest[1868226](1869217 call chpl__initCopy[1869219] call_tmp[1868218]))
        ref call_tmp[1868234]:_ref(string)[938128] "dead after last mention" "maybe param" "temp"
        (1868236 'move' call_tmp[1868234](1868242 call deref[1869238] dest[1868226]))
        (1868243 '=' call_tmp[1868234] temp[1868186])
      }
      (1930110 call chpl__autoDestroy[1601737] call_tmp[1868139])
    }
    (1868254 return _void[55])
  }
  function on_fn[1868736](const in arg root[1868740]:int(64)[13], const in arg id[1868742]:int(64)[13], const  ref arg globalType[1882956]:_ref(string)[938128], const in arg _coforallCount[1882958]:_EndCount(AtomicT(int(64)),int(64))[945532]) : void[4] "cobegin or coforall" "non blocking" "on" "resolved"
  {
    {
      const-val call_tmp[1868746]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1906664]:locale[28] "temp"
      (1868751 call here[90438] ret_tmp[1906664])
      (1906667 'move' call_tmp[1868746] ret_tmp[1906664])
      const-val call_tmp[1868752]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1868754 'move' call_tmp[1868752](1868757 call id[90521] call_tmp[1868746]))
      const-val call_tmp[1868760]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1868762 'move' call_tmp[1868760](1868765 call !=[436128] call_tmp[1868752] root[1868740]))
      const-val call_tmp[1868768]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1868770 'move' call_tmp[1868768] call_tmp[1868760])
      if call_tmp[1868768]
      {
        const-val call_tmp[1868777]:c_void_ptr[149] "dead at end of block" "maybe param" "temp"
        (1868779 'move' call_tmp[1868777](1868782 call chpl_get_global_serialize_table[171479] id[1868742]))
        const-val voidPtr[1868784]:c_void_ptr[149] "dead at end of block" "const" "insert auto destroy"
        (1868786 'move' voidPtr[1868784](1869314 call chpl__initCopy[945431] call_tmp[1868777]))
        val call_tmp[1868790]:c_ptr(string)[1869168] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[1868797]:c_ptr(string)[1869168] "dead at end of block" "maybe param" "temp"
        (1868799 'move' call_tmp[1868797](1868802 call _cast[1869188] voidPtr[1868784]))
        val ptr[1868805]:c_ptr(string)[1869168] "dead at end of block" "insert auto destroy"
        (1868807 'move' ptr[1868805](1869326 call chpl__initCopy[1869219] call_tmp[1868797]))
        ref call_tmp[1868811]:_ref(string)[938128] "dead at end of block" "maybe param" "temp"
        (1868813 'move' call_tmp[1868811](1868819 call deref[1869238] ptr[1868805]))
        ref temp[1868820]:_ref(string)[938128] "dead at end of block" "no auto destroy" "no copy"
        (1868822 'move' temp[1868820] call_tmp[1868811])
        (1868830 call chpl__autoDestroy[1601673] temp[1868820])
      }
      (1930126 call chpl__autoDestroy[1601737] call_tmp[1868746])
    }
    (1868839 return _void[55])
  }
  function on_fn[1872391](const in arg root[1872395]:int(64)[13], const in arg localeZeroGlobal[1872397]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1871345], const in arg data[1872399]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1871345], const in arg id[1872401]:int(64)[13], const in arg _coforallCount[1882960]:_EndCount(AtomicT(int(64)),int(64))[945532]) : void[4] "cobegin or coforall" "non blocking" "on" "resolved"
  {
    val localeZeroGlobal[2197269]:domain(1,int(64),false)[1252786] "temp"
    ref localeZeroGlobal[2197270]:domain(1,int(64),false)[1252786] "temp"
    val ds_info[2197276]:_RuntimeTypeInfo[1253862]
    ref tmp[2197279]:domain(1,int(64),false)[1252786] "temp"
    (2197283 'move' tmp[2197279](2197281 'set reference' localeZeroGlobal[2197269]))
    (2197273 call chpl__deserialize[1871880] ds_info[2197276] localeZeroGlobal[1872397] tmp[2197279])
    (2197288 'move' localeZeroGlobal[2197270](2197286 'set reference' localeZeroGlobal[2197269]))
    {
      const-val call_tmp[1872405]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1906676]:locale[28] "temp"
      (1872410 call here[90438] ret_tmp[1906676])
      (1906679 'move' call_tmp[1872405] ret_tmp[1906676])
      const-val call_tmp[1872411]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1872413 'move' call_tmp[1872411](1872416 call id[90521] call_tmp[1872405]))
      const-val call_tmp[1872419]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1872421 'move' call_tmp[1872419](1872424 call !=[436128] call_tmp[1872411] root[1872395]))
      const-val call_tmp[1872427]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1872429 'move' call_tmp[1872427] call_tmp[1872419])
      if call_tmp[1872427]
      {
        const-val call_tmp[1872436]:_RuntimeTypeInfo[1253862] "dead at end of block" "expr temp" "maybe param" "temp"
        (1872438 'move' call_tmp[1872436](1873407 call chpl__convertValueToRuntimeType[1600392] localeZeroGlobal[2197270]))
        const-val call_tmp[1872442]:domain(1,int(64),false)[1252786] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1918914]:domain(1,int(64),false)[1252786] "temp"
        val rvfRerefTmp[2197302]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1871345] "temp"
        (2197305 'move' rvfRerefTmp[2197302] data[1872399])
        (1872450 call chpl__deserialize[1871880] call_tmp[1872436] rvfRerefTmp[2197302] ret_tmp[1918914])
        (1918917 'move' call_tmp[1872442] ret_tmp[1918914])
        const-val temp[1872452]:domain(1,int(64),false)[1252786] "dead at end of block" "no auto destroy" "no copy"
        (1872454 'move' temp[1872452] call_tmp[1872442])
        const-val call_tmp[1872458]:c_void_ptr[149] "dead at end of block" "maybe param" "temp"
        (1872460 'move' call_tmp[1872458](1872463 call chpl_get_global_serialize_table[171479] id[1872401]))
        const-val destVoidPtr[1872465]:c_void_ptr[149] "dead at end of block" "const" "insert auto destroy"
        (1872467 'move' destVoidPtr[1872465](1873412 call chpl__initCopy[945431] call_tmp[1872458]))
        const-val call_tmp[1872471]:_RuntimeTypeInfo[1253862] "dead after last mention" "expr temp" "maybe param" "temp"
        (1872473 'move' call_tmp[1872471](1873415 call chpl__convertValueToRuntimeType[1600392] localeZeroGlobal[2197270]))
        val call_tmp[1872477]:c_ptr(domain(1,int(64),false))[1873421] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[1872484]:c_ptr(domain(1,int(64),false))[1873421] "dead at end of block" "maybe param" "temp"
        (1872486 'move' call_tmp[1872484](1872489 call _cast[1873441] destVoidPtr[1872465]))
        const dest[1872492]:c_ptr(domain(1,int(64),false))[1873421] "dead at end of block" "const" "insert auto destroy"
        (1872494 'move' dest[1872492](1873470 call chpl__initCopy[1873472] call_tmp[1872484]))
        ref call_tmp[1872500]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812] "dead after last mention" "maybe param" "temp"
        (1872502 'move' call_tmp[1872500](1872508 call deref[1873491] dest[1872492]))
        (1872509 '=' call_tmp[1872500] temp[1872452])
      }
      (1930146 call chpl__autoDestroy[1601737] call_tmp[1872405])
    }
    (2197290 call chpl__autoDestroy[1871799] localeZeroGlobal[1872397])
    (2197293 call chpl__autoDestroy[1697012] localeZeroGlobal[2197269])
    (1872520 return _void[55])
  }
  function on_fn[1873002](const in arg root[1873006]:int(64)[13], const in arg id[1873008]:int(64)[13], const  ref arg globalType[1882962]:_ref(_RuntimeTypeInfo)[1253879], const in arg _coforallCount[1882964]:_EndCount(AtomicT(int(64)),int(64))[945532]) : void[4] "cobegin or coforall" "non blocking" "on" "resolved"
  {
    {
      const-val call_tmp[1873012]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1906688]:locale[28] "temp"
      (1873017 call here[90438] ret_tmp[1906688])
      (1906691 'move' call_tmp[1873012] ret_tmp[1906688])
      const-val call_tmp[1873018]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1873020 'move' call_tmp[1873018](1873023 call id[90521] call_tmp[1873012]))
      const-val call_tmp[1873026]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1873028 'move' call_tmp[1873026](1873031 call !=[436128] call_tmp[1873018] root[1873006]))
      const-val call_tmp[1873034]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1873036 'move' call_tmp[1873034] call_tmp[1873026])
      if call_tmp[1873034]
      {
        const-val call_tmp[1873043]:c_void_ptr[149] "dead at end of block" "maybe param" "temp"
        (1873045 'move' call_tmp[1873043](1873048 call chpl_get_global_serialize_table[171479] id[1873008]))
        const-val voidPtr[1873050]:c_void_ptr[149] "dead at end of block" "const" "insert auto destroy"
        (1873052 'move' voidPtr[1873050](1873570 call chpl__initCopy[945431] call_tmp[1873043]))
        val call_tmp[1873056]:c_ptr(domain(1,int(64),false))[1873421] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[1873063]:c_ptr(domain(1,int(64),false))[1873421] "dead at end of block" "maybe param" "temp"
        (1873065 'move' call_tmp[1873063](1873068 call _cast[1873441] voidPtr[1873050]))
        val ptr[1873071]:c_ptr(domain(1,int(64),false))[1873421] "dead at end of block" "insert auto destroy"
        (1873073 'move' ptr[1873071](1873582 call chpl__initCopy[1873472] call_tmp[1873063]))
        ref call_tmp[1873077]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812] "dead at end of block" "maybe param" "temp"
        (1873079 'move' call_tmp[1873077](1873085 call deref[1873491] ptr[1873071]))
        ref temp[1873086]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812] "dead at end of block" "no auto destroy" "no copy"
        (1873088 'move' temp[1873086] call_tmp[1873077])
        (1873096 call chpl__autoDestroy[1697012] temp[1873086])
      }
      (1930162 call chpl__autoDestroy[1601737] call_tmp[1873012])
    }
    (1873105 return _void[55])
  }
  function wrapon_fn[2215351](const in arg dummy_locale_arg[2215353]:chpl_localeID_t[209352], in arg buf[2215355]:c_void_ptr[149], in arg buf_size[2215357]:int(64)[13], in arg c[2215359]:_class_localson_fn[2215287]) : void[4] "cobegin or coforall block" "non blocking" "on block"
  {
    val _0_tmp[2215364]:chpl_localeID_t[209352] "temp"
    (2215369 'move' _0_tmp[2215364](2215366 '.v' c[2215359] _0_tmp[2215290]))
    val _1_root[2215371]:int(64)[13] "temp"
    (2215376 'move' _1_root[2215371](2215373 '.v' c[2215359] _1_root[2215292]))
    ref _2_localeZeroGlobal[2215379]:string[26] "temp"
    (2215384 'move' _2_localeZeroGlobal[2215379](2215381 '.v' c[2215359] _2_localeZeroGlobal[2215294]))
    val _3_rvfDerefTmp[2215387]:__serializeHelper[28089] "temp"
    (2215392 'move' _3_rvfDerefTmp[2215387](2215389 '.v' c[2215359] _3_rvfDerefTmp[2215296]))
    val _4_id[2215395]:int(64)[13] "temp"
    (2215400 'move' _4_id[2215395](2215397 '.v' c[2215359] _4_id[2215298]))
    val _5__coforallCount[2215403]:_EndCount(AtomicT(int(64)),int(64))[945532] "temp"
    (2215408 'move' _5__coforallCount[2215403](2215405 '.v' c[2215359] _5__coforallCount[2215300]))
    (2215362 call on_fn[1868125] _1_root[2215371] _2_localeZeroGlobal[2215379] _3_rvfDerefTmp[2215387] _4_id[2215395] _5__coforallCount[2215403])
    val endcount[2215411]:_EndCount(AtomicT(int(64)),int(64))[945532] "temp"
    (2215416 'move' endcount[2215411](2215413 '.v' c[2215359] _5__coforallCount[2215300]))
    (2215418 call _downEndCount[1230826] endcount[2215411] nil[44])
    (2215422 return _void[55])
  }
  function wrapon_fn[2215488](const in arg dummy_locale_arg[2215490]:chpl_localeID_t[209352], in arg buf[2215492]:c_void_ptr[149], in arg buf_size[2215494]:int(64)[13], in arg c[2215496]:_class_localson_fn[2215430]) : void[4] "cobegin or coforall block" "non blocking" "on block"
  {
    val _0_tmp[2215501]:chpl_localeID_t[209352] "temp"
    (2215506 'move' _0_tmp[2215501](2215503 '.v' c[2215496] _0_tmp[2215433]))
    val _1_root[2215508]:int(64)[13] "temp"
    (2215513 'move' _1_root[2215508](2215510 '.v' c[2215496] _1_root[2215435]))
    val _2_id[2215516]:int(64)[13] "temp"
    (2215521 'move' _2_id[2215516](2215518 '.v' c[2215496] _2_id[2215437]))
    ref _3_globalType[2215524]:string[26] "temp"
    (2215529 'move' _3_globalType[2215524](2215526 '.v' c[2215496] _3_globalType[2215439]))
    val _4__coforallCount[2215532]:_EndCount(AtomicT(int(64)),int(64))[945532] "temp"
    (2215537 'move' _4__coforallCount[2215532](2215534 '.v' c[2215496] _4__coforallCount[2215441]))
    (2215499 call on_fn[1868736] _1_root[2215508] _2_id[2215516] _3_globalType[2215524] _4__coforallCount[2215532])
    val endcount[2215540]:_EndCount(AtomicT(int(64)),int(64))[945532] "temp"
    (2215545 'move' endcount[2215540](2215542 '.v' c[2215496] _4__coforallCount[2215441]))
    (2215547 call _downEndCount[1230826] endcount[2215540] nil[44])
    (2215551 return _void[55])
  }
  function wrapon_fn[2215617](const in arg dummy_locale_arg[2215619]:chpl_localeID_t[209352], in arg buf[2215621]:c_void_ptr[149], in arg buf_size[2215623]:int(64)[13], in arg c[2215625]:_class_localson_fn[2215559]) : void[4] "cobegin or coforall block" "non blocking" "on block"
  {
    val _0_tmp[2215630]:chpl_localeID_t[209352] "temp"
    (2215635 'move' _0_tmp[2215630](2215632 '.v' c[2215625] _0_tmp[2215562]))
    val _1_root[2215637]:int(64)[13] "temp"
    (2215642 'move' _1_root[2215637](2215639 '.v' c[2215625] _1_root[2215564]))
    val _2_localeZeroGlobal_data[2215645]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1871345] "temp"
    (2215650 'move' _2_localeZeroGlobal_data[2215645](2215647 '.v' c[2215625] _2_localeZeroGlobal_data[2215566]))
    val _3_rvfDerefTmp[2215653]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1871345] "temp"
    (2215658 'move' _3_rvfDerefTmp[2215653](2215655 '.v' c[2215625] _3_rvfDerefTmp[2215568]))
    val _4_id[2215661]:int(64)[13] "temp"
    (2215666 'move' _4_id[2215661](2215663 '.v' c[2215625] _4_id[2215570]))
    val _5__coforallCount[2215669]:_EndCount(AtomicT(int(64)),int(64))[945532] "temp"
    (2215674 'move' _5__coforallCount[2215669](2215671 '.v' c[2215625] _5__coforallCount[2215572]))
    (2215628 call on_fn[1872391] _1_root[2215637] _2_localeZeroGlobal_data[2215645] _3_rvfDerefTmp[2215653] _4_id[2215661] _5__coforallCount[2215669])
    val endcount[2215677]:_EndCount(AtomicT(int(64)),int(64))[945532] "temp"
    (2215682 'move' endcount[2215677](2215679 '.v' c[2215625] _5__coforallCount[2215572]))
    (2215684 call _downEndCount[1230826] endcount[2215677] nil[44])
    (2215688 return _void[55])
  }
  function wrapon_fn[2215754](const in arg dummy_locale_arg[2215756]:chpl_localeID_t[209352], in arg buf[2215758]:c_void_ptr[149], in arg buf_size[2215760]:int(64)[13], in arg c[2215762]:_class_localson_fn[2215696]) : void[4] "cobegin or coforall block" "non blocking" "on block"
  {
    val _0_tmp[2215767]:chpl_localeID_t[209352] "temp"
    (2215772 'move' _0_tmp[2215767](2215769 '.v' c[2215762] _0_tmp[2215699]))
    val _1_root[2215774]:int(64)[13] "temp"
    (2215779 'move' _1_root[2215774](2215776 '.v' c[2215762] _1_root[2215701]))
    val _2_id[2215782]:int(64)[13] "temp"
    (2215787 'move' _2_id[2215782](2215784 '.v' c[2215762] _2_id[2215703]))
    ref _3_globalType[2215790]:_RuntimeTypeInfo[1253862] "temp"
    (2215795 'move' _3_globalType[2215790](2215792 '.v' c[2215762] _3_globalType[2215705]))
    val _4__coforallCount[2215798]:_EndCount(AtomicT(int(64)),int(64))[945532] "temp"
    (2215803 'move' _4__coforallCount[2215798](2215800 '.v' c[2215762] _4__coforallCount[2215707]))
    (2215765 call on_fn[1873002] _1_root[2215774] _2_id[2215782] _3_globalType[2215790] _4__coforallCount[2215798])
    val endcount[2215806]:_EndCount(AtomicT(int(64)),int(64))[945532] "temp"
    (2215811 'move' endcount[2215806](2215808 '.v' c[2215762] _4__coforallCount[2215707]))
    (2215813 call _downEndCount[1230826] endcount[2215806] nil[44])
    (2215817 return _void[55])
  }
}