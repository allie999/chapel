AST dump for ChapelSerializedBroadcast after pass parallel.
Module use list: ChapelLocale CPtr 

{
  type _class_localson_fn[2164130] val _runtime_hdr[2164131]:chpl_comm_on_bundle_t[209359] val _0_tmp[2164133]:chpl_localeID_t[209352] val _1_root[2164135]:int(64)[13] val _2_id[2164137]:int(64)[13] ref _3_globalType[2164139]:_RuntimeTypeInfo[1253734] val _4__coforallCount[2164141]:_EndCount(AtomicT(int(64)),int(64))[945404]
  type _class_localson_fn[2163993] val _runtime_hdr[2163994]:chpl_comm_on_bundle_t[209359] val _0_tmp[2163996]:chpl_localeID_t[209352] val _1_root[2163998]:int(64)[13] val _2_localeZeroGlobal_data[2164000]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1830570] val _3_rvfDerefTmp[2164002]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1830570] val _4_id[2164004]:int(64)[13] val _5__coforallCount[2164006]:_EndCount(AtomicT(int(64)),int(64))[945404]
  type _class_localson_fn[2163864] val _runtime_hdr[2163865]:chpl_comm_on_bundle_t[209359] val _0_tmp[2163867]:chpl_localeID_t[209352] val _1_root[2163869]:int(64)[13] val _2_id[2163871]:int(64)[13] ref _3_globalType[2163873]:string[26] val _4__coforallCount[2163875]:_EndCount(AtomicT(int(64)),int(64))[945404]
  type _class_localson_fn[2163721] val _runtime_hdr[2163722]:chpl_comm_on_bundle_t[209359] val _0_tmp[2163724]:chpl_localeID_t[209352] val _1_root[2163726]:int(64)[13] ref _2_localeZeroGlobal[2163728]:string[26] val _3_rvfDerefTmp[2163730]:__serializeHelper[28089] val _4_id[2163732]:int(64)[13] val _5__coforallCount[2163734]:_EndCount(AtomicT(int(64)),int(64))[945404]
  function chpl__init_ChapelSerializedBroadcast[416066]() : void[4] "insert line file info" "module init" "resolved"
  {
    (522465 return _void[55])
  }
  function chpl_get_global_serialize_table[171479](const in arg idx[171476]:int(64)[13]) : c_void_ptr[149] "extern" "local args" "no fn body" "resolved" "no return value for void"
  {
    val ret[522457]:c_void_ptr[149] "RVV" "temp"
    (522459 return ret[522457])
  }
  function chpl__broadcastGlobal[1827019](const  ref arg localeZeroGlobal[1827021]:_ref(string)[938000], const in arg id[1827023]:int(64)[13]) : void[4] "serialized broadcast function" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    {
      const-val call_tmp[1827110]:__serializeHelper[28089] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1862804]:__serializeHelper[28089] "temp"
      (1827118 call chpl__serialize[30886] localeZeroGlobal[1827021] ret_tmp[1862804])
      (1862807 'move' call_tmp[1827110] ret_tmp[1862804])
      const-val data[1827119]:__serializeHelper[28089] "dead at end of block" "const" "insert auto destroy"
      (1827121 'move' data[1827119] call_tmp[1827110])
      const-val call_tmp[1827125]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1864384]:locale[28] "temp"
      (1827130 call here[90438] ret_tmp[1864384])
      (1864387 'move' call_tmp[1827125] ret_tmp[1864384])
      const-val call_tmp[1827131]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (1827133 'move' call_tmp[1827131](1827136 call id[90521] call_tmp[1827125]))
      const-val root[1827139]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      (1827141 'move' root[1827139] call_tmp[1827131])
      {
        ref tmpIter[1827146]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287098] "dead at end of block" "maybe ref" "no copy" "reference to a const" "temp"
        (1827148 'move' tmpIter[1827146] Locales[113662])
        {
          const _coforallCount[1827279]:_EndCount(AtomicT(int(64)),int(64))[945404] "dead after last mention" "concurrently accessed" "const" "end count" "temp"
          (1827281 'move' _coforallCount[1827279](1827284 call _endCountAlloc[938879]))
          const-val numTasks[1827286]:int(64)[13] "dead at end of block" "temp"
          (1827288 'move' numTasks[1827286](1827291 call size[1663206] tmpIter[1827146]))
          (1827295 call _upEndCount[1325433] _coforallCount[1827279] numTasks[1827286])
          ref _indexOfInterest[1827300]:_ref(locale)[948905] "dead at end of block" "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1827302]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304352] "dead at end of block" "expr temp" "temp"
          (1827304 'move' _iterator[1827302](1827307 call _getIterator[1298170] tmpIter[1827146]))
          {
            val ret[1981526]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304358] "dead after last mention" "RVV" "temp"
            ref _indexOfInterest[1981528]:_ref(locale)[948905] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1981530]:_ic_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303747] "dead at end of block" "expr temp" "temp"
            val call_tmp[1981532]:[domain(1,int(64),false)] locale[1256547] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val this[1981723]:[domain(1,int(64),false)] locale[1287072] "temp"
            (1981728 'move' this[1981723](1981725 '.v' _iterator[1827302] F0_this[2071241]))
            (1981534 'move' call_tmp[1981532](1981537 call _value[1287127] this[1981723]))
            const-val call_tmp[1981539]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303753] "dead at end of block" "maybe param" "temp"
            val coerce_tmp[1981541]:[domain(1,int(64),false)] locale[1256547] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (1981543 'move' coerce_tmp[1981541] call_tmp[1981532])
            const-val default_arg_tasksPerLocale[1981546]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
            (1981548 'move' default_arg_tasksPerLocale[1981546](1981551 call these_default_tasksPerLocale[1298440] call_tmp[1981532]))
            const-val default_arg_ignoreRunning[1981553]:bool[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
            (1981555 'move' default_arg_ignoreRunning[1981553](1981558 call these_default_ignoreRunning[1298471] coerce_tmp[1981541]))
            const-val default_arg_minIndicesPerTask[1981560]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
            (1981562 'move' default_arg_minIndicesPerTask[1981560](1981565 call these_default_minIndicesPerTask[1298502] coerce_tmp[1981541]))
            const-val ret_tmp[1981567]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303753] "temp"
            (1981570 call these[1298324] coerce_tmp[1981541] default_arg_tasksPerLocale[1981546] default_arg_ignoreRunning[1981553] default_arg_minIndicesPerTask[1981560] ret_tmp[1981567])
            (1981576 'move' call_tmp[1981539] ret_tmp[1981567])
            (1981579 'move' _iterator[1981530](1981582 call _getIterator[1303762] call_tmp[1981539]))
            {
              val ret[1981585]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303753] "dead after last mention" "RVV" "temp"
              ref _indexOfInterest[1981587]:_ref(locale)[948905] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[1981589]:_ic_chpl__serialViewIter[1303497] "dead at end of block" "expr temp" "temp"
              ref call_tmp[1981591]:_ref(domain(1,int(64),false))[1251010] "dead at end of block" "maybe param" "temp"
              const-val this[1981593]:[domain(1,int(64),false)] locale[1256547] "temp"
              (1981595 'move' this[1981593](1981597 '.v' _iterator[1981530] F0_this[2073349]))
              (1981600 'move' call_tmp[1981591](1981603 call dom[1258080] this[1981593]))
              const-val call_tmp[1981605]:_ir_chpl__serialViewIter[1303503] "dead at end of block" "maybe param" "temp"
              val coerce_tmp[1981607]:domain(1,int(64),false)[1250995] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1981609 'move' coerce_tmp[1981607](1981611 'deref' call_tmp[1981591]))
              const-val ret_tmp[1981613]:_ir_chpl__serialViewIter[1303503] "temp"
              const-val this[1981615]:[domain(1,int(64),false)] locale[1256547] "temp"
              (1981617 'move' this[1981615](1981619 '.v' _iterator[1981530] F0_this[2073349]))
              (1981623 call chpl__serialViewIter[1298536] this[1981615] coerce_tmp[1981607] ret_tmp[1981613])
              (1981627 'move' call_tmp[1981605] ret_tmp[1981613])
              (1981630 'move' _iterator[1981589](1981633 call _getIterator[1303512] call_tmp[1981605]))
              {
                val ret[2038959]:_ir_chpl__serialViewIter[1303503] "dead after last mention" "RVV" "temp"
                val info[2038961]:[domain(1,int(64),false)] locale[1256547] "dead at end of block" "insert auto destroy"
                val tmp[2038963]:[domain(1,int(64),false)] locale[1256547] "dead at end of block" "expr temp" "insert auto destroy" "maybe copy elided" "maybe param" "temp"
                val tmp[2038965]:[domain(1,int(64),false)] locale[1256547] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val arr[2039386]:[domain(1,int(64),false)] locale[1256547] "temp"
                (2039391 'move' arr[2039386](2039388 '.v' _iterator[1981589] F0_arr[2075254]))
                (2038967 'move' tmp[2038965] arr[2039386])
                const-val arr[2039393]:[domain(1,int(64),false)] locale[1256547] "temp"
                (2039398 'move' arr[2039393](2039395 '.v' _iterator[1981589] F0_arr[2075254]))
                (2038970 'move' tmp[2038963] arr[2039393])
                const-val arr[2039400]:[domain(1,int(64),false)] locale[1256547] "temp"
                (2039405 'move' arr[2039400](2039402 '.v' _iterator[1981589] F0_arr[2075254]))
                (2038973 '=' info[2038961] arr[2039400])
                (2038976 'noop')
                const-val call_tmp[2038977]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                val coerce_tmp[2038979]:domain(1,int(64),false)[1250995] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                const-val viewDom[2039407]:domain(1,int(64),false)[1250995] "temp"
                (2039412 'move' viewDom[2039407](2039409 '.v' _iterator[1981589] F1_viewDom[2075258]))
                (2038981 'move' coerce_tmp[2038979] viewDom[2039407])
                const-val viewDom[2039414]:domain(1,int(64),false)[1250995] "temp"
                (2039419 'move' viewDom[2039414](2039416 '.v' _iterator[1981589] F1_viewDom[2075258]))
                (2038984 'move' call_tmp[2038977](2038987 call dsiLow[1300497] viewDom[2039414]))
                const-val call_tmp[2038989]:int(64)[13] "dead at end of block" "maybe param" "temp"
                const-val arr[2039421]:[domain(1,int(64),false)] locale[1256547] "temp"
                (2039426 'move' arr[2039421](2039423 '.v' _iterator[1981589] F0_arr[2075254]))
                (2038991 'move' call_tmp[2038989](2038994 call getDataIndex[1300756] arr[2039421] call_tmp[2038977]))
                const-val first[2038997]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                (2038999 'move' first[2038997] call_tmp[2038989])
                const-val call_tmp[2039002]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                val coerce_tmp[2039004]:domain(1,int(64),false)[1250995] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                const-val viewDom[2039428]:domain(1,int(64),false)[1250995] "temp"
                (2039433 'move' viewDom[2039428](2039430 '.v' _iterator[1981589] F1_viewDom[2075258]))
                (2039006 'move' coerce_tmp[2039004] viewDom[2039428])
                (2039009 'move' call_tmp[2039002](2039012 call dsiLow[1300497] coerce_tmp[2039004]))
                const-val call_tmp[2039014]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                (2039016 'move' call_tmp[2039014](2039019 call chpl__idxToInt[1026977] call_tmp[2039002]))
                const-val call_tmp[2039021]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                (2039023 'move' call_tmp[2039021](2039026 call +[949727] call_tmp[2039014]))
                const-val call_tmp[2039028]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                val coerce_tmp[2039030]:domain(1,int(64),false)[1250995] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                const-val viewDom[2039435]:domain(1,int(64),false)[1250995] "temp"
                (2039440 'move' viewDom[2039435](2039437 '.v' _iterator[1981589] F1_viewDom[2075258]))
                (2039032 'move' coerce_tmp[2039030] viewDom[2039435])
                (2039035 'move' call_tmp[2039028](2039038 call chpl_intToIdx[1301926] coerce_tmp[2039030] call_tmp[2039021]))
                const-val call_tmp[2039041]:int(64)[13] "dead at end of block" "maybe param" "temp"
                (2039043 'move' call_tmp[2039041](2039046 call getDataIndex[1300756] info[2038961] call_tmp[2039028]))
                const-val second[2039049]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                (2039051 'move' second[2039049] call_tmp[2039041])
                const-val call_tmp[2039054]:int(64)[13] "dead at end of block" "maybe param" "temp"
                (2039056 'move' call_tmp[2039054](2039059 call -[440459] call_tmp[2039041] call_tmp[2038989]))
                const-val step[2039062]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                (2039064 'move' step[2039062] call_tmp[2039054])
                const-val call_tmp[2039067]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                val coerce_tmp[2039069]:domain(1,int(64),false)[1250995] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                const-val viewDom[2039442]:domain(1,int(64),false)[1250995] "temp"
                (2039447 'move' viewDom[2039442](2039444 '.v' _iterator[1981589] F1_viewDom[2075258]))
                (2039071 'move' coerce_tmp[2039069] viewDom[2039442])
                (2039074 'move' call_tmp[2039067](2039077 call dsiNumIndices[1263695] coerce_tmp[2039069]))
                const-val call_tmp[2039079]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                (2039081 'move' call_tmp[2039079](2039084 call -[962287] call_tmp[2039067]))
                const-val call_tmp[2039086]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                (2039088 'move' call_tmp[2039086](2039091 call *[441871] call_tmp[2039079] call_tmp[2039054]))
                const-val call_tmp[2039094]:int(64)[13] "dead at end of block" "maybe param" "temp"
                (2039096 'move' call_tmp[2039094](2039099 call +[439679] call_tmp[2038989] call_tmp[2039086]))
                const-val last[2039102]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                (2039104 'move' last[2039102] call_tmp[2039094])
                val _indexOfInterest[2039107]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[2039109]:_ic_chpl_direct_pos_stride_range_iter[1303058] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[2039111]:_ir_chpl_direct_pos_stride_range_iter[1303064] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[2039113]:_ir_chpl_direct_pos_stride_range_iter[1303064] "temp"
                (2039116 call chpl_direct_pos_stride_range_iter[1302013] call_tmp[2038989] call_tmp[2039094] call_tmp[2039054] ret_tmp[2039113])
                (2039121 'move' call_tmp[2039111] ret_tmp[2039113])
                (2039124 'move' _iterator[2039109](2039127 call _getIterator[1303073] call_tmp[2039111]))
                {
                  val ret[2039130]:_ir_chpl_direct_pos_stride_range_iter[1303064] "dead after last mention" "RVV" "temp"
                  val call_tmp[2039132]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val stride[2039134]:int(64)[13] "temp"
                  (2039136 'move' stride[2039134](2039138 '.v' _iterator[2039109] F2_stride[2076798]))
                  (2039142 call chpl_range_check_stride[1102894] stride[2039134])
                  val call_tmp[2039144]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val default_arg_first[2039146]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val low[2039148]:int(64)[13] "temp"
                  (2039150 'move' low[2039148](2039152 '.v' _iterator[2039109] F0_low[2076790]))
                  (2039155 'move' default_arg_first[2039146](2039158 call chpl_checkIfRangeIterWillOverflow_default_first[1103259] low[2039148]))
                  const-val default_arg_last[2039160]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val high[2039162]:int(64)[13] "temp"
                  (2039164 'move' high[2039162](2039166 '.v' _iterator[2039109] F1_high[2076794]))
                  (2039169 'move' default_arg_last[2039160](2039172 call chpl_checkIfRangeIterWillOverflow_default_last[1103287] high[2039162]))
                  const-val _return_tmp_[2039174]:bool[10] "dead after last mention" "temp"
                  const-val low[2039176]:int(64)[13] "temp"
                  (2039178 'move' low[2039176](2039180 '.v' _iterator[2039109] F0_low[2076790]))
                  const-val high[2039183]:int(64)[13] "temp"
                  (2039185 'move' high[2039183](2039187 '.v' _iterator[2039109] F1_high[2076794]))
                  const-val stride[2039190]:int(64)[13] "temp"
                  (2039192 'move' stride[2039190](2039194 '.v' _iterator[2039109] F2_stride[2076798]))
                  (2039197 'move' _return_tmp_[2039174](2039200 call chpl_checkIfRangeIterWillOverflow[1096137] low[2039176] high[2039183] stride[2039190] default_arg_first[2039146] default_arg_last[2039160] 1))
                  val i[2039207]:int(64)[13] "dead at end of block" "insert auto destroy"
                  val call_tmp[2039209]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (2039211 'move' i[2039207] 0)
                  CForLoop[2039214] hazard
                  {
                    const-val yret[2039262]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (2039264 'move' yret[2039262] i[2039207])
                    const-val _yieldedIndex[2039267]:int(64)[13] "temp"
                    (2039269 'move' _yieldedIndex[2039267] i[2039207])
                    {
                      const-val i[2039273]:int(64)[13] "const" "index var" "insert auto destroy"
                      (2039275 'move' i[2039273] _yieldedIndex[2039267])
                      ref yret[2039278]:_ref(locale)[948905] "dead after last mention" "YVV" "temp"
                      ref call_tmp[2039280]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
                      ref _this_tmp_[2039282]:_ref(_ddata(locale))[1255464] "dead after last mention" "temp"
                      (2039284 'move' _this_tmp_[2039282](2039287 call theData[1303311] info[2038961]))
                      val coerce_tmp[2039289]:_ddata(locale)[1255455] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (2039291 'move' coerce_tmp[2039289](2039293 'deref' _this_tmp_[2039282]))
                      (2039295 'move' call_tmp[2039280](2039298 call this[1303458] coerce_tmp[2039289] _yieldedIndex[2039267]))
                      ref _yieldedIndex[2039323]:_ref(locale)[948905] "temp"
                      (2039301 'move' _yieldedIndex[2039323] call_tmp[2039280])
                      {
                        ref elem[2039325]:_ref(locale)[948905] "index var" "insert auto destroy"
                        (2039327 'move' elem[2039325] _yieldedIndex[2039323])
                        ref yret[2039330]:_ref(locale)[948905] "dead after last mention" "YVV" "temp"
                        ref _yieldedIndex[2039332]:_ref(locale)[948905] "temp"
                        (2039334 'move' _yieldedIndex[2039332] elem[2039325])
                        {
                          ref i[2039338]:_ref(locale)[948905] "index var" "insert auto destroy"
                          (2039340 'move' i[2039338] _yieldedIndex[2039332])
                          ref yret[2039343]:_ref(locale)[948905] "dead after last mention" "YVV" "temp"
                          ref _yieldedIndex[2039345]:_ref(locale)[948905] "coforall index var" "temp"
                          (2039347 'move' _yieldedIndex[2039345] i[2039338])
                          {
                            ref loc[2039351]:_ref(locale)[948905] "coforall index var" "index var" "insert auto destroy"
                            (2039353 'move' loc[2039351] _yieldedIndex[2039345])
                            const-val tmp[2039356]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
                            const-val call_tmp[2039358]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
                            val _locale_tmp_[2039360]:BaseLocale[91204] "dead after last mention" "temp"
                            (2039362 'move' _locale_tmp_[2039360](2039365 call _value[89984] loc[2039351]))
                            (2039367 'move' call_tmp[2039358](2039369 '_wide_get_locale' _locale_tmp_[2039360]))
                            (2039371 'move' tmp[2039356] call_tmp[2039358])
                            val rvfDerefTmp[2146705]:__serializeHelper[28089] "temp"
                            (2146708 'move' rvfDerefTmp[2146705] data[1827119])
                            val _args_foron_fn[2163737]:_class_localson_fn[2163721] "temp"
                            (2163741 'move' _args_foron_fn[2163737](2163739 'stack allocate class' _class_localson_fn[2163721]))
                            (2163743 '.=' _args_foron_fn[2163737] _0_tmp[2163724] tmp[2039356])
                            (2163747 '.=' _args_foron_fn[2163737] _1_root[2163726] root[1827139])
                            ref tmp[2163751]:string[26] "temp"
                            (2163755 'move' tmp[2163751](2163753 'set reference' localeZeroGlobal[1827021]))
                            (2163757 '.=' _args_foron_fn[2163737] _2_localeZeroGlobal[2163728] tmp[2163751])
                            (2163761 '.=' _args_foron_fn[2163737] _3_rvfDerefTmp[2163730] rvfDerefTmp[2146705])
                            (2163765 '.=' _args_foron_fn[2163737] _4_id[2163732] id[1827023])
                            (2163769 '.=' _args_foron_fn[2163737] _5__coforallCount[2163734] _coforallCount[1827279])
                            val _args_vforon_fn[2163773]:c_void_ptr[149] "temp"
                            (2163777 'move' _args_vforon_fn[2163773](2163775 'cast_to_void_star' _args_foron_fn[2163737]))
                            val _args_sizeon_fn[2163779]:int(64)[13] "temp"
                            (2163783 'move' _args_sizeon_fn[2163779](2163781 'sizeof_bundle' _class_localson_fn[2163721]))
                            on(2163858 call wrapon_fn[2163785] tmp[2039356] _args_vforon_fn[2163773] _args_sizeon_fn[2163779] _args_foron_fn[2163737])
                            {
                            }
                            label _continueLabel[2039383]
                          }
                        }
                      }
                    }
                    {
                      const-val low[2039216]:int(64)[13] "temp"
                      (2039218 'move' low[2039216](2039220 '.v' _iterator[2039109] F0_low[2076790]))
                      (2039223 '=' i[2039207] low[2039216])
                    }
                    {
                      const-val high[2039227]:int(64)[13] "temp"
                      (2039229 'move' high[2039227](2039231 '.v' _iterator[2039109] F1_high[2076794]))
                      (2039234 '<=' i[2039207] high[2039227])
                    }
                    {
                      val call_tmp[2039238]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      const-val call_tmp[2039240]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val stride[2039242]:int(64)[13] "temp"
                      (2039244 'move' stride[2039242](2039246 '.v' _iterator[2039109] F2_stride[2076798]))
                      (2039249 'move' call_tmp[2039240] stride[2039242])
                      const-val stride[2039252]:int(64)[13] "temp"
                      (2039254 'move' stride[2039252](2039256 '.v' _iterator[2039109] F2_stride[2076798]))
                      (2039259 '+=' i[2039207] stride[2039252])
                    }
                  }
                  label _endchpl_direct_pos_stride_range_iter[2039314]
                }
                (2039317 call _freeIterator[1303246] _iterator[2039109])
                label _endchpl__serialViewIter[2039319]
              }
              (1981675 call _freeIterator[1303681] _iterator[1981589])
              label _endthese[1981677]
            }
            (1981680 call _freeIterator[1304286] _iterator[1981530])
            label _endthese[1981682]
          }
          label _breakLabel[1827485]
          val error[1847245]:Error[167984] "error variable" "temp"
          (1847247 'move' error[1847245] nil[44])
          (1827493 call _waitEndCount[1350140] _coforallCount[1827279] numTasks[1827286] error[1847245])
          val errorExists[2172180]:bool[10] "temp"
          (2172185 'move' errorExists[2172180](2172182 '!=' error[1847245] nil[44]))
          if errorExists[2172180]
          {
            (1847250 call chpl_propagate_error[170518] error[1847245])
          }
          (1887069 call _endCountFree[1233921] _coforallCount[1827279])
          (1887073 call _freeIterator[1305037] _iterator[1827302])
        }
      }
      (1887076 call chpl__autoDestroy[1562339] call_tmp[1827125])
      (1887079 call chpl__autoDestroy[1562462] data[1827119])
    }
    (1827708 return _void[55])
  }
  function chpl__broadcastGlobal[1831285](const  ref arg localeZeroGlobal[1831287]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252684], const in arg id[1831289]:int(64)[13]) : void[4] "serialized broadcast function" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    {
      const-val call_tmp[1831376]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1830570] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1876308]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1830570] "temp"
      (1831384 call chpl__serialize[1830267] localeZeroGlobal[1831287] ret_tmp[1876308])
      (1876311 'move' call_tmp[1831376] ret_tmp[1876308])
      const-val data[1831385]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1830570] "dead at end of block" "const" "insert auto destroy"
      (1831387 'move' data[1831385] call_tmp[1831376])
      const-val call_tmp[1831391]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1864408]:locale[28] "temp"
      (1831396 call here[90438] ret_tmp[1864408])
      (1864411 'move' call_tmp[1831391] ret_tmp[1864408])
      const-val call_tmp[1831397]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (1831399 'move' call_tmp[1831397](1831402 call id[90521] call_tmp[1831391]))
      const-val root[1831405]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      (1831407 'move' root[1831405] call_tmp[1831397])
      {
        ref tmpIter[1831412]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287098] "dead at end of block" "maybe ref" "no copy" "reference to a const" "temp"
        (1831414 'move' tmpIter[1831412] Locales[113662])
        {
          const _coforallCount[1831545]:_EndCount(AtomicT(int(64)),int(64))[945404] "dead after last mention" "concurrently accessed" "const" "end count" "temp"
          (1831547 'move' _coforallCount[1831545](1831550 call _endCountAlloc[938879]))
          const-val numTasks[1831552]:int(64)[13] "dead at end of block" "temp"
          (1831554 'move' numTasks[1831552](1831557 call size[1663206] tmpIter[1831412]))
          (1831561 call _upEndCount[1325433] _coforallCount[1831545] numTasks[1831552])
          ref _indexOfInterest[1831566]:_ref(locale)[948905] "dead at end of block" "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1831568]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304352] "dead at end of block" "expr temp" "temp"
          (1831570 'move' _iterator[1831568](1831573 call _getIterator[1298170] tmpIter[1831412]))
          {
            val ret[1981935]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304358] "dead after last mention" "RVV" "temp"
            ref _indexOfInterest[1981937]:_ref(locale)[948905] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1981939]:_ic_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303747] "dead at end of block" "expr temp" "temp"
            val call_tmp[1981941]:[domain(1,int(64),false)] locale[1256547] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val this[1982132]:[domain(1,int(64),false)] locale[1287072] "temp"
            (1982137 'move' this[1982132](1982134 '.v' _iterator[1831568] F0_this[2071241]))
            (1981943 'move' call_tmp[1981941](1981946 call _value[1287127] this[1982132]))
            const-val call_tmp[1981948]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303753] "dead at end of block" "maybe param" "temp"
            val coerce_tmp[1981950]:[domain(1,int(64),false)] locale[1256547] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (1981952 'move' coerce_tmp[1981950] call_tmp[1981941])
            const-val default_arg_tasksPerLocale[1981955]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
            (1981957 'move' default_arg_tasksPerLocale[1981955](1981960 call these_default_tasksPerLocale[1298440] call_tmp[1981941]))
            const-val default_arg_ignoreRunning[1981962]:bool[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
            (1981964 'move' default_arg_ignoreRunning[1981962](1981967 call these_default_ignoreRunning[1298471] coerce_tmp[1981950]))
            const-val default_arg_minIndicesPerTask[1981969]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
            (1981971 'move' default_arg_minIndicesPerTask[1981969](1981974 call these_default_minIndicesPerTask[1298502] coerce_tmp[1981950]))
            const-val ret_tmp[1981976]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303753] "temp"
            (1981979 call these[1298324] coerce_tmp[1981950] default_arg_tasksPerLocale[1981955] default_arg_ignoreRunning[1981962] default_arg_minIndicesPerTask[1981969] ret_tmp[1981976])
            (1981985 'move' call_tmp[1981948] ret_tmp[1981976])
            (1981988 'move' _iterator[1981939](1981991 call _getIterator[1303762] call_tmp[1981948]))
            {
              val ret[1981994]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303753] "dead after last mention" "RVV" "temp"
              ref _indexOfInterest[1981996]:_ref(locale)[948905] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[1981998]:_ic_chpl__serialViewIter[1303497] "dead at end of block" "expr temp" "temp"
              ref call_tmp[1982000]:_ref(domain(1,int(64),false))[1251010] "dead at end of block" "maybe param" "temp"
              const-val this[1982002]:[domain(1,int(64),false)] locale[1256547] "temp"
              (1982004 'move' this[1982002](1982006 '.v' _iterator[1981939] F0_this[2073349]))
              (1982009 'move' call_tmp[1982000](1982012 call dom[1258080] this[1982002]))
              const-val call_tmp[1982014]:_ir_chpl__serialViewIter[1303503] "dead at end of block" "maybe param" "temp"
              val coerce_tmp[1982016]:domain(1,int(64),false)[1250995] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1982018 'move' coerce_tmp[1982016](1982020 'deref' call_tmp[1982000]))
              const-val ret_tmp[1982022]:_ir_chpl__serialViewIter[1303503] "temp"
              const-val this[1982024]:[domain(1,int(64),false)] locale[1256547] "temp"
              (1982026 'move' this[1982024](1982028 '.v' _iterator[1981939] F0_this[2073349]))
              (1982032 call chpl__serialViewIter[1298536] this[1982024] coerce_tmp[1982016] ret_tmp[1982022])
              (1982036 'move' call_tmp[1982014] ret_tmp[1982022])
              (1982039 'move' _iterator[1981998](1982042 call _getIterator[1303512] call_tmp[1982014]))
              {
                val ret[2039940]:_ir_chpl__serialViewIter[1303503] "dead after last mention" "RVV" "temp"
                val info[2039942]:[domain(1,int(64),false)] locale[1256547] "dead at end of block" "insert auto destroy"
                val tmp[2039944]:[domain(1,int(64),false)] locale[1256547] "dead at end of block" "expr temp" "insert auto destroy" "maybe copy elided" "maybe param" "temp"
                val tmp[2039946]:[domain(1,int(64),false)] locale[1256547] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val arr[2040367]:[domain(1,int(64),false)] locale[1256547] "temp"
                (2040372 'move' arr[2040367](2040369 '.v' _iterator[1981998] F0_arr[2075254]))
                (2039948 'move' tmp[2039946] arr[2040367])
                const-val arr[2040374]:[domain(1,int(64),false)] locale[1256547] "temp"
                (2040379 'move' arr[2040374](2040376 '.v' _iterator[1981998] F0_arr[2075254]))
                (2039951 'move' tmp[2039944] arr[2040374])
                const-val arr[2040381]:[domain(1,int(64),false)] locale[1256547] "temp"
                (2040386 'move' arr[2040381](2040383 '.v' _iterator[1981998] F0_arr[2075254]))
                (2039954 '=' info[2039942] arr[2040381])
                (2039957 'noop')
                const-val call_tmp[2039958]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                val coerce_tmp[2039960]:domain(1,int(64),false)[1250995] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                const-val viewDom[2040388]:domain(1,int(64),false)[1250995] "temp"
                (2040393 'move' viewDom[2040388](2040390 '.v' _iterator[1981998] F1_viewDom[2075258]))
                (2039962 'move' coerce_tmp[2039960] viewDom[2040388])
                const-val viewDom[2040395]:domain(1,int(64),false)[1250995] "temp"
                (2040400 'move' viewDom[2040395](2040397 '.v' _iterator[1981998] F1_viewDom[2075258]))
                (2039965 'move' call_tmp[2039958](2039968 call dsiLow[1300497] viewDom[2040395]))
                const-val call_tmp[2039970]:int(64)[13] "dead at end of block" "maybe param" "temp"
                const-val arr[2040402]:[domain(1,int(64),false)] locale[1256547] "temp"
                (2040407 'move' arr[2040402](2040404 '.v' _iterator[1981998] F0_arr[2075254]))
                (2039972 'move' call_tmp[2039970](2039975 call getDataIndex[1300756] arr[2040402] call_tmp[2039958]))
                const-val first[2039978]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                (2039980 'move' first[2039978] call_tmp[2039970])
                const-val call_tmp[2039983]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                val coerce_tmp[2039985]:domain(1,int(64),false)[1250995] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                const-val viewDom[2040409]:domain(1,int(64),false)[1250995] "temp"
                (2040414 'move' viewDom[2040409](2040411 '.v' _iterator[1981998] F1_viewDom[2075258]))
                (2039987 'move' coerce_tmp[2039985] viewDom[2040409])
                (2039990 'move' call_tmp[2039983](2039993 call dsiLow[1300497] coerce_tmp[2039985]))
                const-val call_tmp[2039995]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                (2039997 'move' call_tmp[2039995](2040000 call chpl__idxToInt[1026977] call_tmp[2039983]))
                const-val call_tmp[2040002]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                (2040004 'move' call_tmp[2040002](2040007 call +[949727] call_tmp[2039995]))
                const-val call_tmp[2040009]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                val coerce_tmp[2040011]:domain(1,int(64),false)[1250995] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                const-val viewDom[2040416]:domain(1,int(64),false)[1250995] "temp"
                (2040421 'move' viewDom[2040416](2040418 '.v' _iterator[1981998] F1_viewDom[2075258]))
                (2040013 'move' coerce_tmp[2040011] viewDom[2040416])
                (2040016 'move' call_tmp[2040009](2040019 call chpl_intToIdx[1301926] coerce_tmp[2040011] call_tmp[2040002]))
                const-val call_tmp[2040022]:int(64)[13] "dead at end of block" "maybe param" "temp"
                (2040024 'move' call_tmp[2040022](2040027 call getDataIndex[1300756] info[2039942] call_tmp[2040009]))
                const-val second[2040030]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                (2040032 'move' second[2040030] call_tmp[2040022])
                const-val call_tmp[2040035]:int(64)[13] "dead at end of block" "maybe param" "temp"
                (2040037 'move' call_tmp[2040035](2040040 call -[440459] call_tmp[2040022] call_tmp[2039970]))
                const-val step[2040043]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                (2040045 'move' step[2040043] call_tmp[2040035])
                const-val call_tmp[2040048]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                val coerce_tmp[2040050]:domain(1,int(64),false)[1250995] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                const-val viewDom[2040423]:domain(1,int(64),false)[1250995] "temp"
                (2040428 'move' viewDom[2040423](2040425 '.v' _iterator[1981998] F1_viewDom[2075258]))
                (2040052 'move' coerce_tmp[2040050] viewDom[2040423])
                (2040055 'move' call_tmp[2040048](2040058 call dsiNumIndices[1263695] coerce_tmp[2040050]))
                const-val call_tmp[2040060]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                (2040062 'move' call_tmp[2040060](2040065 call -[962287] call_tmp[2040048]))
                const-val call_tmp[2040067]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                (2040069 'move' call_tmp[2040067](2040072 call *[441871] call_tmp[2040060] call_tmp[2040035]))
                const-val call_tmp[2040075]:int(64)[13] "dead at end of block" "maybe param" "temp"
                (2040077 'move' call_tmp[2040075](2040080 call +[439679] call_tmp[2039970] call_tmp[2040067]))
                const-val last[2040083]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                (2040085 'move' last[2040083] call_tmp[2040075])
                val _indexOfInterest[2040088]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[2040090]:_ic_chpl_direct_pos_stride_range_iter[1303058] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[2040092]:_ir_chpl_direct_pos_stride_range_iter[1303064] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[2040094]:_ir_chpl_direct_pos_stride_range_iter[1303064] "temp"
                (2040097 call chpl_direct_pos_stride_range_iter[1302013] call_tmp[2039970] call_tmp[2040075] call_tmp[2040035] ret_tmp[2040094])
                (2040102 'move' call_tmp[2040092] ret_tmp[2040094])
                (2040105 'move' _iterator[2040090](2040108 call _getIterator[1303073] call_tmp[2040092]))
                {
                  val ret[2040111]:_ir_chpl_direct_pos_stride_range_iter[1303064] "dead after last mention" "RVV" "temp"
                  val call_tmp[2040113]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val stride[2040115]:int(64)[13] "temp"
                  (2040117 'move' stride[2040115](2040119 '.v' _iterator[2040090] F2_stride[2076798]))
                  (2040123 call chpl_range_check_stride[1102894] stride[2040115])
                  val call_tmp[2040125]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val default_arg_first[2040127]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val low[2040129]:int(64)[13] "temp"
                  (2040131 'move' low[2040129](2040133 '.v' _iterator[2040090] F0_low[2076790]))
                  (2040136 'move' default_arg_first[2040127](2040139 call chpl_checkIfRangeIterWillOverflow_default_first[1103259] low[2040129]))
                  const-val default_arg_last[2040141]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val high[2040143]:int(64)[13] "temp"
                  (2040145 'move' high[2040143](2040147 '.v' _iterator[2040090] F1_high[2076794]))
                  (2040150 'move' default_arg_last[2040141](2040153 call chpl_checkIfRangeIterWillOverflow_default_last[1103287] high[2040143]))
                  const-val _return_tmp_[2040155]:bool[10] "dead after last mention" "temp"
                  const-val low[2040157]:int(64)[13] "temp"
                  (2040159 'move' low[2040157](2040161 '.v' _iterator[2040090] F0_low[2076790]))
                  const-val high[2040164]:int(64)[13] "temp"
                  (2040166 'move' high[2040164](2040168 '.v' _iterator[2040090] F1_high[2076794]))
                  const-val stride[2040171]:int(64)[13] "temp"
                  (2040173 'move' stride[2040171](2040175 '.v' _iterator[2040090] F2_stride[2076798]))
                  (2040178 'move' _return_tmp_[2040155](2040181 call chpl_checkIfRangeIterWillOverflow[1096137] low[2040157] high[2040164] stride[2040171] default_arg_first[2040127] default_arg_last[2040141] 1))
                  val i[2040188]:int(64)[13] "dead at end of block" "insert auto destroy"
                  val call_tmp[2040190]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (2040192 'move' i[2040188] 0)
                  CForLoop[2040195] hazard
                  {
                    const-val yret[2040243]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (2040245 'move' yret[2040243] i[2040188])
                    const-val _yieldedIndex[2040248]:int(64)[13] "temp"
                    (2040250 'move' _yieldedIndex[2040248] i[2040188])
                    {
                      const-val i[2040254]:int(64)[13] "const" "index var" "insert auto destroy"
                      (2040256 'move' i[2040254] _yieldedIndex[2040248])
                      ref yret[2040259]:_ref(locale)[948905] "dead after last mention" "YVV" "temp"
                      ref call_tmp[2040261]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
                      ref _this_tmp_[2040263]:_ref(_ddata(locale))[1255464] "dead after last mention" "temp"
                      (2040265 'move' _this_tmp_[2040263](2040268 call theData[1303311] info[2039942]))
                      val coerce_tmp[2040270]:_ddata(locale)[1255455] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (2040272 'move' coerce_tmp[2040270](2040274 'deref' _this_tmp_[2040263]))
                      (2040276 'move' call_tmp[2040261](2040279 call this[1303458] coerce_tmp[2040270] _yieldedIndex[2040248]))
                      ref _yieldedIndex[2040304]:_ref(locale)[948905] "temp"
                      (2040282 'move' _yieldedIndex[2040304] call_tmp[2040261])
                      {
                        ref elem[2040306]:_ref(locale)[948905] "index var" "insert auto destroy"
                        (2040308 'move' elem[2040306] _yieldedIndex[2040304])
                        ref yret[2040311]:_ref(locale)[948905] "dead after last mention" "YVV" "temp"
                        ref _yieldedIndex[2040313]:_ref(locale)[948905] "temp"
                        (2040315 'move' _yieldedIndex[2040313] elem[2040306])
                        {
                          ref i[2040319]:_ref(locale)[948905] "index var" "insert auto destroy"
                          (2040321 'move' i[2040319] _yieldedIndex[2040313])
                          ref yret[2040324]:_ref(locale)[948905] "dead after last mention" "YVV" "temp"
                          ref _yieldedIndex[2040326]:_ref(locale)[948905] "coforall index var" "temp"
                          (2040328 'move' _yieldedIndex[2040326] i[2040319])
                          {
                            ref loc[2040332]:_ref(locale)[948905] "coforall index var" "index var" "insert auto destroy"
                            (2040334 'move' loc[2040332] _yieldedIndex[2040326])
                            const-val tmp[2040337]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
                            const-val call_tmp[2040339]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
                            val _locale_tmp_[2040341]:BaseLocale[91204] "dead after last mention" "temp"
                            (2040343 'move' _locale_tmp_[2040341](2040346 call _value[89984] loc[2040332]))
                            (2040348 'move' call_tmp[2040339](2040350 '_wide_get_locale' _locale_tmp_[2040341]))
                            (2040352 'move' tmp[2040337] call_tmp[2040339])
                            val localeZeroGlobal_data[2146717]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1830570] "temp"
                            (2146719 call chpl__serialize[1830267] localeZeroGlobal[1831287] localeZeroGlobal_data[2146717])
                            val rvfDerefTmp[2146751]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1830570] "temp"
                            (2146754 'move' rvfDerefTmp[2146751] data[1831385])
                            val _args_foron_fn[2164009]:_class_localson_fn[2163993] "temp"
                            (2164013 'move' _args_foron_fn[2164009](2164011 'stack allocate class' _class_localson_fn[2163993]))
                            (2164015 '.=' _args_foron_fn[2164009] _0_tmp[2163996] tmp[2040337])
                            (2164019 '.=' _args_foron_fn[2164009] _1_root[2163998] root[1831405])
                            (2164023 '.=' _args_foron_fn[2164009] _2_localeZeroGlobal_data[2164000] localeZeroGlobal_data[2146717])
                            (2164027 '.=' _args_foron_fn[2164009] _3_rvfDerefTmp[2164002] rvfDerefTmp[2146751])
                            (2164031 '.=' _args_foron_fn[2164009] _4_id[2164004] id[1831289])
                            (2164035 '.=' _args_foron_fn[2164009] _5__coforallCount[2164006] _coforallCount[1831545])
                            val _args_vforon_fn[2164039]:c_void_ptr[149] "temp"
                            (2164043 'move' _args_vforon_fn[2164039](2164041 'cast_to_void_star' _args_foron_fn[2164009]))
                            val _args_sizeon_fn[2164045]:int(64)[13] "temp"
                            (2164049 'move' _args_sizeon_fn[2164045](2164047 'sizeof_bundle' _class_localson_fn[2163993]))
                            on(2164124 call wrapon_fn[2164051] tmp[2040337] _args_vforon_fn[2164039] _args_sizeon_fn[2164045] _args_foron_fn[2164009])
                            {
                            }
                            label _continueLabel[2040364]
                          }
                        }
                      }
                    }
                    {
                      const-val low[2040197]:int(64)[13] "temp"
                      (2040199 'move' low[2040197](2040201 '.v' _iterator[2040090] F0_low[2076790]))
                      (2040204 '=' i[2040188] low[2040197])
                    }
                    {
                      const-val high[2040208]:int(64)[13] "temp"
                      (2040210 'move' high[2040208](2040212 '.v' _iterator[2040090] F1_high[2076794]))
                      (2040215 '<=' i[2040188] high[2040208])
                    }
                    {
                      val call_tmp[2040219]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      const-val call_tmp[2040221]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val stride[2040223]:int(64)[13] "temp"
                      (2040225 'move' stride[2040223](2040227 '.v' _iterator[2040090] F2_stride[2076798]))
                      (2040230 'move' call_tmp[2040221] stride[2040223])
                      const-val stride[2040233]:int(64)[13] "temp"
                      (2040235 'move' stride[2040233](2040237 '.v' _iterator[2040090] F2_stride[2076798]))
                      (2040240 '+=' i[2040188] stride[2040233])
                    }
                  }
                  label _endchpl_direct_pos_stride_range_iter[2040295]
                }
                (2040298 call _freeIterator[1303246] _iterator[2040090])
                label _endchpl__serialViewIter[2040300]
              }
              (1982084 call _freeIterator[1303681] _iterator[1981998])
              label _endthese[1982086]
            }
            (1982089 call _freeIterator[1304286] _iterator[1981939])
            label _endthese[1982091]
          }
          label _breakLabel[1831751]
          val error[1847271]:Error[167984] "error variable" "temp"
          (1847273 'move' error[1847271] nil[44])
          (1831759 call _waitEndCount[1350140] _coforallCount[1831545] numTasks[1831552] error[1847271])
          val errorExists[2172196]:bool[10] "temp"
          (2172201 'move' errorExists[2172196](2172198 '!=' error[1847271] nil[44]))
          if errorExists[2172196]
          {
            (1847276 call chpl_propagate_error[170518] error[1847271])
          }
          (1887105 call _endCountFree[1233921] _coforallCount[1831545])
          (1887109 call _freeIterator[1305037] _iterator[1831568])
        }
      }
      (1887112 call chpl__autoDestroy[1562339] call_tmp[1831391])
      (1887115 call chpl__autoDestroy[1831024] data[1831385])
    }
    (1831974 return _void[55])
  }
  function chpl__destroyBroadcastedGlobal[1827716](ref arg localeZeroGlobal[1827718]:_ref(string)[938000], const in arg id[1827720]:int(64)[13]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val globalType[1827730]:string[26] "dead at end of block" "insert auto destroy" "type variable"
    const-val call_tmp[1827738]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1864396]:locale[28] "temp"
    (1827743 call here[90438] ret_tmp[1864396])
    (1864399 'move' call_tmp[1827738] ret_tmp[1864396])
    const-val call_tmp[1827744]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1827746 'move' call_tmp[1827744](1827749 call id[90521] call_tmp[1827738]))
    const-val root[1827752]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1827754 'move' root[1827752] call_tmp[1827744])
    {
      ref tmpIter[1827759]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287098] "dead at end of block" "maybe ref" "no copy" "reference to a const" "temp"
      (1827761 'move' tmpIter[1827759] Locales[113662])
      {
        const _coforallCount[1827892]:_EndCount(AtomicT(int(64)),int(64))[945404] "dead after last mention" "concurrently accessed" "const" "end count" "temp"
        (1827894 'move' _coforallCount[1827892](1827897 call _endCountAlloc[938879]))
        const-val numTasks[1827899]:int(64)[13] "dead at end of block" "temp"
        (1827901 'move' numTasks[1827899](1827904 call size[1663206] tmpIter[1827759]))
        (1827908 call _upEndCount[1325433] _coforallCount[1827892] numTasks[1827899])
        ref _indexOfInterest[1827913]:_ref(locale)[948905] "dead at end of block" "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1827915]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304352] "dead at end of block" "expr temp" "temp"
        (1827917 'move' _iterator[1827915](1827920 call _getIterator[1298170] tmpIter[1827759]))
        {
          val ret[1981731]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304358] "dead after last mention" "RVV" "temp"
          ref _indexOfInterest[1981733]:_ref(locale)[948905] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1981735]:_ic_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303747] "dead at end of block" "expr temp" "temp"
          val call_tmp[1981737]:[domain(1,int(64),false)] locale[1256547] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val this[1981927]:[domain(1,int(64),false)] locale[1287072] "temp"
          (1981932 'move' this[1981927](1981929 '.v' _iterator[1827915] F0_this[2071241]))
          (1981739 'move' call_tmp[1981737](1981742 call _value[1287127] this[1981927]))
          const-val call_tmp[1981744]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303753] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[1981746]:[domain(1,int(64),false)] locale[1256547] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1981748 'move' coerce_tmp[1981746] call_tmp[1981737])
          const-val default_arg_tasksPerLocale[1981751]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
          (1981753 'move' default_arg_tasksPerLocale[1981751](1981756 call these_default_tasksPerLocale[1298440] call_tmp[1981737]))
          const-val default_arg_ignoreRunning[1981758]:bool[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
          (1981760 'move' default_arg_ignoreRunning[1981758](1981763 call these_default_ignoreRunning[1298471] coerce_tmp[1981746]))
          const-val default_arg_minIndicesPerTask[1981765]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
          (1981767 'move' default_arg_minIndicesPerTask[1981765](1981770 call these_default_minIndicesPerTask[1298502] coerce_tmp[1981746]))
          const-val ret_tmp[1981772]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303753] "temp"
          (1981775 call these[1298324] coerce_tmp[1981746] default_arg_tasksPerLocale[1981751] default_arg_ignoreRunning[1981758] default_arg_minIndicesPerTask[1981765] ret_tmp[1981772])
          (1981781 'move' call_tmp[1981744] ret_tmp[1981772])
          (1981784 'move' _iterator[1981735](1981787 call _getIterator[1303762] call_tmp[1981744]))
          {
            val ret[1981790]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303753] "dead after last mention" "RVV" "temp"
            ref _indexOfInterest[1981792]:_ref(locale)[948905] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1981794]:_ic_chpl__serialViewIter[1303497] "dead at end of block" "expr temp" "temp"
            ref call_tmp[1981796]:_ref(domain(1,int(64),false))[1251010] "dead at end of block" "maybe param" "temp"
            const-val this[1981798]:[domain(1,int(64),false)] locale[1256547] "temp"
            (1981800 'move' this[1981798](1981802 '.v' _iterator[1981735] F0_this[2073349]))
            (1981805 'move' call_tmp[1981796](1981808 call dom[1258080] this[1981798]))
            const-val call_tmp[1981810]:_ir_chpl__serialViewIter[1303503] "dead at end of block" "maybe param" "temp"
            val coerce_tmp[1981812]:domain(1,int(64),false)[1250995] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (1981814 'move' coerce_tmp[1981812](1981816 'deref' call_tmp[1981796]))
            const-val ret_tmp[1981818]:_ir_chpl__serialViewIter[1303503] "temp"
            const-val this[1981820]:[domain(1,int(64),false)] locale[1256547] "temp"
            (1981822 'move' this[1981820](1981824 '.v' _iterator[1981735] F0_this[2073349]))
            (1981828 call chpl__serialViewIter[1298536] this[1981820] coerce_tmp[1981812] ret_tmp[1981818])
            (1981832 'move' call_tmp[1981810] ret_tmp[1981818])
            (1981835 'move' _iterator[1981794](1981838 call _getIterator[1303512] call_tmp[1981810]))
            {
              val ret[2039450]:_ir_chpl__serialViewIter[1303503] "dead after last mention" "RVV" "temp"
              val info[2039452]:[domain(1,int(64),false)] locale[1256547] "dead at end of block" "insert auto destroy"
              val tmp[2039454]:[domain(1,int(64),false)] locale[1256547] "dead at end of block" "expr temp" "insert auto destroy" "maybe copy elided" "maybe param" "temp"
              val tmp[2039456]:[domain(1,int(64),false)] locale[1256547] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val arr[2039876]:[domain(1,int(64),false)] locale[1256547] "temp"
              (2039881 'move' arr[2039876](2039878 '.v' _iterator[1981794] F0_arr[2075254]))
              (2039458 'move' tmp[2039456] arr[2039876])
              const-val arr[2039883]:[domain(1,int(64),false)] locale[1256547] "temp"
              (2039888 'move' arr[2039883](2039885 '.v' _iterator[1981794] F0_arr[2075254]))
              (2039461 'move' tmp[2039454] arr[2039883])
              const-val arr[2039890]:[domain(1,int(64),false)] locale[1256547] "temp"
              (2039895 'move' arr[2039890](2039892 '.v' _iterator[1981794] F0_arr[2075254]))
              (2039464 '=' info[2039452] arr[2039890])
              (2039467 'noop')
              const-val call_tmp[2039468]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              val coerce_tmp[2039470]:domain(1,int(64),false)[1250995] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              const-val viewDom[2039897]:domain(1,int(64),false)[1250995] "temp"
              (2039902 'move' viewDom[2039897](2039899 '.v' _iterator[1981794] F1_viewDom[2075258]))
              (2039472 'move' coerce_tmp[2039470] viewDom[2039897])
              const-val viewDom[2039904]:domain(1,int(64),false)[1250995] "temp"
              (2039909 'move' viewDom[2039904](2039906 '.v' _iterator[1981794] F1_viewDom[2075258]))
              (2039475 'move' call_tmp[2039468](2039478 call dsiLow[1300497] viewDom[2039904]))
              const-val call_tmp[2039480]:int(64)[13] "dead at end of block" "maybe param" "temp"
              const-val arr[2039911]:[domain(1,int(64),false)] locale[1256547] "temp"
              (2039916 'move' arr[2039911](2039913 '.v' _iterator[1981794] F0_arr[2075254]))
              (2039482 'move' call_tmp[2039480](2039485 call getDataIndex[1300756] arr[2039911] call_tmp[2039468]))
              const-val first[2039488]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              (2039490 'move' first[2039488] call_tmp[2039480])
              const-val call_tmp[2039493]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              val coerce_tmp[2039495]:domain(1,int(64),false)[1250995] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              const-val viewDom[2039918]:domain(1,int(64),false)[1250995] "temp"
              (2039923 'move' viewDom[2039918](2039920 '.v' _iterator[1981794] F1_viewDom[2075258]))
              (2039497 'move' coerce_tmp[2039495] viewDom[2039918])
              (2039500 'move' call_tmp[2039493](2039503 call dsiLow[1300497] coerce_tmp[2039495]))
              const-val call_tmp[2039505]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              (2039507 'move' call_tmp[2039505](2039510 call chpl__idxToInt[1026977] call_tmp[2039493]))
              const-val call_tmp[2039512]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              (2039514 'move' call_tmp[2039512](2039517 call +[949727] call_tmp[2039505]))
              const-val call_tmp[2039519]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              val coerce_tmp[2039521]:domain(1,int(64),false)[1250995] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              const-val viewDom[2039925]:domain(1,int(64),false)[1250995] "temp"
              (2039930 'move' viewDom[2039925](2039927 '.v' _iterator[1981794] F1_viewDom[2075258]))
              (2039523 'move' coerce_tmp[2039521] viewDom[2039925])
              (2039526 'move' call_tmp[2039519](2039529 call chpl_intToIdx[1301926] coerce_tmp[2039521] call_tmp[2039512]))
              const-val call_tmp[2039532]:int(64)[13] "dead at end of block" "maybe param" "temp"
              (2039534 'move' call_tmp[2039532](2039537 call getDataIndex[1300756] info[2039452] call_tmp[2039519]))
              const-val second[2039540]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              (2039542 'move' second[2039540] call_tmp[2039532])
              const-val call_tmp[2039545]:int(64)[13] "dead at end of block" "maybe param" "temp"
              (2039547 'move' call_tmp[2039545](2039550 call -[440459] call_tmp[2039532] call_tmp[2039480]))
              const-val step[2039553]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              (2039555 'move' step[2039553] call_tmp[2039545])
              const-val call_tmp[2039558]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              val coerce_tmp[2039560]:domain(1,int(64),false)[1250995] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              const-val viewDom[2039932]:domain(1,int(64),false)[1250995] "temp"
              (2039937 'move' viewDom[2039932](2039934 '.v' _iterator[1981794] F1_viewDom[2075258]))
              (2039562 'move' coerce_tmp[2039560] viewDom[2039932])
              (2039565 'move' call_tmp[2039558](2039568 call dsiNumIndices[1263695] coerce_tmp[2039560]))
              const-val call_tmp[2039570]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              (2039572 'move' call_tmp[2039570](2039575 call -[962287] call_tmp[2039558]))
              const-val call_tmp[2039577]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              (2039579 'move' call_tmp[2039577](2039582 call *[441871] call_tmp[2039570] call_tmp[2039545]))
              const-val call_tmp[2039585]:int(64)[13] "dead at end of block" "maybe param" "temp"
              (2039587 'move' call_tmp[2039585](2039590 call +[439679] call_tmp[2039480] call_tmp[2039577]))
              const-val last[2039593]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              (2039595 'move' last[2039593] call_tmp[2039585])
              val _indexOfInterest[2039598]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[2039600]:_ic_chpl_direct_pos_stride_range_iter[1303058] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[2039602]:_ir_chpl_direct_pos_stride_range_iter[1303064] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[2039604]:_ir_chpl_direct_pos_stride_range_iter[1303064] "temp"
              (2039607 call chpl_direct_pos_stride_range_iter[1302013] call_tmp[2039480] call_tmp[2039585] call_tmp[2039545] ret_tmp[2039604])
              (2039612 'move' call_tmp[2039602] ret_tmp[2039604])
              (2039615 'move' _iterator[2039600](2039618 call _getIterator[1303073] call_tmp[2039602]))
              {
                val ret[2039621]:_ir_chpl_direct_pos_stride_range_iter[1303064] "dead after last mention" "RVV" "temp"
                val call_tmp[2039623]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val stride[2039625]:int(64)[13] "temp"
                (2039627 'move' stride[2039625](2039629 '.v' _iterator[2039600] F2_stride[2076798]))
                (2039633 call chpl_range_check_stride[1102894] stride[2039625])
                val call_tmp[2039635]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val default_arg_first[2039637]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val low[2039639]:int(64)[13] "temp"
                (2039641 'move' low[2039639](2039643 '.v' _iterator[2039600] F0_low[2076790]))
                (2039646 'move' default_arg_first[2039637](2039649 call chpl_checkIfRangeIterWillOverflow_default_first[1103259] low[2039639]))
                const-val default_arg_last[2039651]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val high[2039653]:int(64)[13] "temp"
                (2039655 'move' high[2039653](2039657 '.v' _iterator[2039600] F1_high[2076794]))
                (2039660 'move' default_arg_last[2039651](2039663 call chpl_checkIfRangeIterWillOverflow_default_last[1103287] high[2039653]))
                const-val _return_tmp_[2039665]:bool[10] "dead after last mention" "temp"
                const-val low[2039667]:int(64)[13] "temp"
                (2039669 'move' low[2039667](2039671 '.v' _iterator[2039600] F0_low[2076790]))
                const-val high[2039674]:int(64)[13] "temp"
                (2039676 'move' high[2039674](2039678 '.v' _iterator[2039600] F1_high[2076794]))
                const-val stride[2039681]:int(64)[13] "temp"
                (2039683 'move' stride[2039681](2039685 '.v' _iterator[2039600] F2_stride[2076798]))
                (2039688 'move' _return_tmp_[2039665](2039691 call chpl_checkIfRangeIterWillOverflow[1096137] low[2039667] high[2039674] stride[2039681] default_arg_first[2039637] default_arg_last[2039651] 1))
                val i[2039698]:int(64)[13] "dead at end of block" "insert auto destroy"
                val call_tmp[2039700]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (2039702 'move' i[2039698] 0)
                CForLoop[2039705] hazard
                {
                  const-val yret[2039753]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (2039755 'move' yret[2039753] i[2039698])
                  const-val _yieldedIndex[2039758]:int(64)[13] "temp"
                  (2039760 'move' _yieldedIndex[2039758] i[2039698])
                  {
                    const-val i[2039764]:int(64)[13] "const" "index var" "insert auto destroy"
                    (2039766 'move' i[2039764] _yieldedIndex[2039758])
                    ref yret[2039769]:_ref(locale)[948905] "dead after last mention" "YVV" "temp"
                    ref call_tmp[2039771]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
                    ref _this_tmp_[2039773]:_ref(_ddata(locale))[1255464] "dead after last mention" "temp"
                    (2039775 'move' _this_tmp_[2039773](2039778 call theData[1303311] info[2039452]))
                    val coerce_tmp[2039780]:_ddata(locale)[1255455] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (2039782 'move' coerce_tmp[2039780](2039784 'deref' _this_tmp_[2039773]))
                    (2039786 'move' call_tmp[2039771](2039789 call this[1303458] coerce_tmp[2039780] _yieldedIndex[2039758]))
                    ref _yieldedIndex[2039814]:_ref(locale)[948905] "temp"
                    (2039792 'move' _yieldedIndex[2039814] call_tmp[2039771])
                    {
                      ref elem[2039816]:_ref(locale)[948905] "index var" "insert auto destroy"
                      (2039818 'move' elem[2039816] _yieldedIndex[2039814])
                      ref yret[2039821]:_ref(locale)[948905] "dead after last mention" "YVV" "temp"
                      ref _yieldedIndex[2039823]:_ref(locale)[948905] "temp"
                      (2039825 'move' _yieldedIndex[2039823] elem[2039816])
                      {
                        ref i[2039829]:_ref(locale)[948905] "index var" "insert auto destroy"
                        (2039831 'move' i[2039829] _yieldedIndex[2039823])
                        ref yret[2039834]:_ref(locale)[948905] "dead after last mention" "YVV" "temp"
                        ref _yieldedIndex[2039836]:_ref(locale)[948905] "coforall index var" "temp"
                        (2039838 'move' _yieldedIndex[2039836] i[2039829])
                        {
                          ref loc[2039842]:_ref(locale)[948905] "coforall index var" "index var" "insert auto destroy"
                          (2039844 'move' loc[2039842] _yieldedIndex[2039836])
                          const-val tmp[2039847]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
                          const-val call_tmp[2039849]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
                          val _locale_tmp_[2039851]:BaseLocale[91204] "dead after last mention" "temp"
                          (2039853 'move' _locale_tmp_[2039851](2039856 call _value[89984] loc[2039842]))
                          (2039858 'move' call_tmp[2039849](2039860 '_wide_get_locale' _locale_tmp_[2039851]))
                          (2039862 'move' tmp[2039847] call_tmp[2039849])
                          val _args_foron_fn[2163878]:_class_localson_fn[2163864] "temp"
                          (2163882 'move' _args_foron_fn[2163878](2163880 'stack allocate class' _class_localson_fn[2163864]))
                          (2163884 '.=' _args_foron_fn[2163878] _0_tmp[2163867] tmp[2039847])
                          (2163888 '.=' _args_foron_fn[2163878] _1_root[2163869] root[1827752])
                          (2163892 '.=' _args_foron_fn[2163878] _2_id[2163871] id[1827720])
                          ref tmp[2163896]:string[26] "temp"
                          (2163900 'move' tmp[2163896](2163898 'set reference' globalType[1827730]))
                          (2163902 '.=' _args_foron_fn[2163878] _3_globalType[2163873] tmp[2163896])
                          (2163906 '.=' _args_foron_fn[2163878] _4__coforallCount[2163875] _coforallCount[1827892])
                          val _args_vforon_fn[2163910]:c_void_ptr[149] "temp"
                          (2163914 'move' _args_vforon_fn[2163910](2163912 'cast_to_void_star' _args_foron_fn[2163878]))
                          val _args_sizeon_fn[2163916]:int(64)[13] "temp"
                          (2163920 'move' _args_sizeon_fn[2163916](2163918 'sizeof_bundle' _class_localson_fn[2163864]))
                          on(2163987 call wrapon_fn[2163922] tmp[2039847] _args_vforon_fn[2163910] _args_sizeon_fn[2163916] _args_foron_fn[2163878])
                          {
                          }
                          label _continueLabel[2039873]
                        }
                      }
                    }
                  }
                  {
                    const-val low[2039707]:int(64)[13] "temp"
                    (2039709 'move' low[2039707](2039711 '.v' _iterator[2039600] F0_low[2076790]))
                    (2039714 '=' i[2039698] low[2039707])
                  }
                  {
                    const-val high[2039718]:int(64)[13] "temp"
                    (2039720 'move' high[2039718](2039722 '.v' _iterator[2039600] F1_high[2076794]))
                    (2039725 '<=' i[2039698] high[2039718])
                  }
                  {
                    val call_tmp[2039729]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    const-val call_tmp[2039731]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val stride[2039733]:int(64)[13] "temp"
                    (2039735 'move' stride[2039733](2039737 '.v' _iterator[2039600] F2_stride[2076798]))
                    (2039740 'move' call_tmp[2039731] stride[2039733])
                    const-val stride[2039743]:int(64)[13] "temp"
                    (2039745 'move' stride[2039743](2039747 '.v' _iterator[2039600] F2_stride[2076798]))
                    (2039750 '+=' i[2039698] stride[2039743])
                  }
                }
                label _endchpl_direct_pos_stride_range_iter[2039805]
              }
              (2039808 call _freeIterator[1303246] _iterator[2039600])
              label _endchpl__serialViewIter[2039810]
            }
            (1981880 call _freeIterator[1303681] _iterator[1981794])
            label _endthese[1981882]
          }
          (1981885 call _freeIterator[1304286] _iterator[1981735])
          label _endthese[1981887]
        }
        label _breakLabel[1828070]
        val error[1847258]:Error[167984] "error variable" "temp"
        (1847260 'move' error[1847258] nil[44])
        (1828078 call _waitEndCount[1350140] _coforallCount[1827892] numTasks[1827899] error[1847258])
        val errorExists[2172188]:bool[10] "temp"
        (2172193 'move' errorExists[2172188](2172190 '!=' error[1847258] nil[44]))
        if errorExists[2172188]
        {
          (1847263 call chpl_propagate_error[170518] error[1847258])
        }
        (1887089 call _endCountFree[1233921] _coforallCount[1827892])
        (1887093 call _freeIterator[1305037] _iterator[1827915])
      }
    }
    (1887095 call chpl__autoDestroy[1562339] call_tmp[1827738])
    (1828264 return _void[55])
  }
  function chpl__destroyBroadcastedGlobal[1831982](const  ref arg localeZeroGlobal[1831984]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252684], const in arg id[1831986]:int(64)[13]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val globalType[1831996]:_RuntimeTypeInfo[1253734] "dead at end of block" "insert auto destroy"
    (1832000 'move' globalType[1831996](1832747 call chpl__convertValueToRuntimeType[1560947] localeZeroGlobal[1831984]))
    const-val call_tmp[1832004]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1864420]:locale[28] "temp"
    (1832009 call here[90438] ret_tmp[1864420])
    (1864423 'move' call_tmp[1832004] ret_tmp[1864420])
    const-val call_tmp[1832010]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1832012 'move' call_tmp[1832010](1832015 call id[90521] call_tmp[1832004]))
    const-val root[1832018]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1832020 'move' root[1832018] call_tmp[1832010])
    {
      ref tmpIter[1832025]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287098] "dead at end of block" "maybe ref" "no copy" "reference to a const" "temp"
      (1832027 'move' tmpIter[1832025] Locales[113662])
      {
        const _coforallCount[1832158]:_EndCount(AtomicT(int(64)),int(64))[945404] "dead after last mention" "concurrently accessed" "const" "end count" "temp"
        (1832160 'move' _coforallCount[1832158](1832163 call _endCountAlloc[938879]))
        const-val numTasks[1832165]:int(64)[13] "dead at end of block" "temp"
        (1832167 'move' numTasks[1832165](1832170 call size[1663206] tmpIter[1832025]))
        (1832174 call _upEndCount[1325433] _coforallCount[1832158] numTasks[1832165])
        ref _indexOfInterest[1832179]:_ref(locale)[948905] "dead at end of block" "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1832181]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304352] "dead at end of block" "expr temp" "temp"
        (1832183 'move' _iterator[1832181](1832186 call _getIterator[1298170] tmpIter[1832025]))
        {
          val ret[1982140]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304358] "dead after last mention" "RVV" "temp"
          ref _indexOfInterest[1982142]:_ref(locale)[948905] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1982144]:_ic_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303747] "dead at end of block" "expr temp" "temp"
          val call_tmp[1982146]:[domain(1,int(64),false)] locale[1256547] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val this[1982336]:[domain(1,int(64),false)] locale[1287072] "temp"
          (1982341 'move' this[1982336](1982338 '.v' _iterator[1832181] F0_this[2071241]))
          (1982148 'move' call_tmp[1982146](1982151 call _value[1287127] this[1982336]))
          const-val call_tmp[1982153]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303753] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[1982155]:[domain(1,int(64),false)] locale[1256547] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1982157 'move' coerce_tmp[1982155] call_tmp[1982146])
          const-val default_arg_tasksPerLocale[1982160]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
          (1982162 'move' default_arg_tasksPerLocale[1982160](1982165 call these_default_tasksPerLocale[1298440] call_tmp[1982146]))
          const-val default_arg_ignoreRunning[1982167]:bool[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
          (1982169 'move' default_arg_ignoreRunning[1982167](1982172 call these_default_ignoreRunning[1298471] coerce_tmp[1982155]))
          const-val default_arg_minIndicesPerTask[1982174]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
          (1982176 'move' default_arg_minIndicesPerTask[1982174](1982179 call these_default_minIndicesPerTask[1298502] coerce_tmp[1982155]))
          const-val ret_tmp[1982181]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303753] "temp"
          (1982184 call these[1298324] coerce_tmp[1982155] default_arg_tasksPerLocale[1982160] default_arg_ignoreRunning[1982167] default_arg_minIndicesPerTask[1982174] ret_tmp[1982181])
          (1982190 'move' call_tmp[1982153] ret_tmp[1982181])
          (1982193 'move' _iterator[1982144](1982196 call _getIterator[1303762] call_tmp[1982153]))
          {
            val ret[1982199]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303753] "dead after last mention" "RVV" "temp"
            ref _indexOfInterest[1982201]:_ref(locale)[948905] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1982203]:_ic_chpl__serialViewIter[1303497] "dead at end of block" "expr temp" "temp"
            ref call_tmp[1982205]:_ref(domain(1,int(64),false))[1251010] "dead at end of block" "maybe param" "temp"
            const-val this[1982207]:[domain(1,int(64),false)] locale[1256547] "temp"
            (1982209 'move' this[1982207](1982211 '.v' _iterator[1982144] F0_this[2073349]))
            (1982214 'move' call_tmp[1982205](1982217 call dom[1258080] this[1982207]))
            const-val call_tmp[1982219]:_ir_chpl__serialViewIter[1303503] "dead at end of block" "maybe param" "temp"
            val coerce_tmp[1982221]:domain(1,int(64),false)[1250995] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (1982223 'move' coerce_tmp[1982221](1982225 'deref' call_tmp[1982205]))
            const-val ret_tmp[1982227]:_ir_chpl__serialViewIter[1303503] "temp"
            const-val this[1982229]:[domain(1,int(64),false)] locale[1256547] "temp"
            (1982231 'move' this[1982229](1982233 '.v' _iterator[1982144] F0_this[2073349]))
            (1982237 call chpl__serialViewIter[1298536] this[1982229] coerce_tmp[1982221] ret_tmp[1982227])
            (1982241 'move' call_tmp[1982219] ret_tmp[1982227])
            (1982244 'move' _iterator[1982203](1982247 call _getIterator[1303512] call_tmp[1982219]))
            {
              val ret[2040431]:_ir_chpl__serialViewIter[1303503] "dead after last mention" "RVV" "temp"
              val info[2040433]:[domain(1,int(64),false)] locale[1256547] "dead at end of block" "insert auto destroy"
              val tmp[2040435]:[domain(1,int(64),false)] locale[1256547] "dead at end of block" "expr temp" "insert auto destroy" "maybe copy elided" "maybe param" "temp"
              val tmp[2040437]:[domain(1,int(64),false)] locale[1256547] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val arr[2040857]:[domain(1,int(64),false)] locale[1256547] "temp"
              (2040862 'move' arr[2040857](2040859 '.v' _iterator[1982203] F0_arr[2075254]))
              (2040439 'move' tmp[2040437] arr[2040857])
              const-val arr[2040864]:[domain(1,int(64),false)] locale[1256547] "temp"
              (2040869 'move' arr[2040864](2040866 '.v' _iterator[1982203] F0_arr[2075254]))
              (2040442 'move' tmp[2040435] arr[2040864])
              const-val arr[2040871]:[domain(1,int(64),false)] locale[1256547] "temp"
              (2040876 'move' arr[2040871](2040873 '.v' _iterator[1982203] F0_arr[2075254]))
              (2040445 '=' info[2040433] arr[2040871])
              (2040448 'noop')
              const-val call_tmp[2040449]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              val coerce_tmp[2040451]:domain(1,int(64),false)[1250995] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              const-val viewDom[2040878]:domain(1,int(64),false)[1250995] "temp"
              (2040883 'move' viewDom[2040878](2040880 '.v' _iterator[1982203] F1_viewDom[2075258]))
              (2040453 'move' coerce_tmp[2040451] viewDom[2040878])
              const-val viewDom[2040885]:domain(1,int(64),false)[1250995] "temp"
              (2040890 'move' viewDom[2040885](2040887 '.v' _iterator[1982203] F1_viewDom[2075258]))
              (2040456 'move' call_tmp[2040449](2040459 call dsiLow[1300497] viewDom[2040885]))
              const-val call_tmp[2040461]:int(64)[13] "dead at end of block" "maybe param" "temp"
              const-val arr[2040892]:[domain(1,int(64),false)] locale[1256547] "temp"
              (2040897 'move' arr[2040892](2040894 '.v' _iterator[1982203] F0_arr[2075254]))
              (2040463 'move' call_tmp[2040461](2040466 call getDataIndex[1300756] arr[2040892] call_tmp[2040449]))
              const-val first[2040469]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              (2040471 'move' first[2040469] call_tmp[2040461])
              const-val call_tmp[2040474]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              val coerce_tmp[2040476]:domain(1,int(64),false)[1250995] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              const-val viewDom[2040899]:domain(1,int(64),false)[1250995] "temp"
              (2040904 'move' viewDom[2040899](2040901 '.v' _iterator[1982203] F1_viewDom[2075258]))
              (2040478 'move' coerce_tmp[2040476] viewDom[2040899])
              (2040481 'move' call_tmp[2040474](2040484 call dsiLow[1300497] coerce_tmp[2040476]))
              const-val call_tmp[2040486]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              (2040488 'move' call_tmp[2040486](2040491 call chpl__idxToInt[1026977] call_tmp[2040474]))
              const-val call_tmp[2040493]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              (2040495 'move' call_tmp[2040493](2040498 call +[949727] call_tmp[2040486]))
              const-val call_tmp[2040500]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              val coerce_tmp[2040502]:domain(1,int(64),false)[1250995] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              const-val viewDom[2040906]:domain(1,int(64),false)[1250995] "temp"
              (2040911 'move' viewDom[2040906](2040908 '.v' _iterator[1982203] F1_viewDom[2075258]))
              (2040504 'move' coerce_tmp[2040502] viewDom[2040906])
              (2040507 'move' call_tmp[2040500](2040510 call chpl_intToIdx[1301926] coerce_tmp[2040502] call_tmp[2040493]))
              const-val call_tmp[2040513]:int(64)[13] "dead at end of block" "maybe param" "temp"
              (2040515 'move' call_tmp[2040513](2040518 call getDataIndex[1300756] info[2040433] call_tmp[2040500]))
              const-val second[2040521]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              (2040523 'move' second[2040521] call_tmp[2040513])
              const-val call_tmp[2040526]:int(64)[13] "dead at end of block" "maybe param" "temp"
              (2040528 'move' call_tmp[2040526](2040531 call -[440459] call_tmp[2040513] call_tmp[2040461]))
              const-val step[2040534]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              (2040536 'move' step[2040534] call_tmp[2040526])
              const-val call_tmp[2040539]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              val coerce_tmp[2040541]:domain(1,int(64),false)[1250995] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              const-val viewDom[2040913]:domain(1,int(64),false)[1250995] "temp"
              (2040918 'move' viewDom[2040913](2040915 '.v' _iterator[1982203] F1_viewDom[2075258]))
              (2040543 'move' coerce_tmp[2040541] viewDom[2040913])
              (2040546 'move' call_tmp[2040539](2040549 call dsiNumIndices[1263695] coerce_tmp[2040541]))
              const-val call_tmp[2040551]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              (2040553 'move' call_tmp[2040551](2040556 call -[962287] call_tmp[2040539]))
              const-val call_tmp[2040558]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              (2040560 'move' call_tmp[2040558](2040563 call *[441871] call_tmp[2040551] call_tmp[2040526]))
              const-val call_tmp[2040566]:int(64)[13] "dead at end of block" "maybe param" "temp"
              (2040568 'move' call_tmp[2040566](2040571 call +[439679] call_tmp[2040461] call_tmp[2040558]))
              const-val last[2040574]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              (2040576 'move' last[2040574] call_tmp[2040566])
              val _indexOfInterest[2040579]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[2040581]:_ic_chpl_direct_pos_stride_range_iter[1303058] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[2040583]:_ir_chpl_direct_pos_stride_range_iter[1303064] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[2040585]:_ir_chpl_direct_pos_stride_range_iter[1303064] "temp"
              (2040588 call chpl_direct_pos_stride_range_iter[1302013] call_tmp[2040461] call_tmp[2040566] call_tmp[2040526] ret_tmp[2040585])
              (2040593 'move' call_tmp[2040583] ret_tmp[2040585])
              (2040596 'move' _iterator[2040581](2040599 call _getIterator[1303073] call_tmp[2040583]))
              {
                val ret[2040602]:_ir_chpl_direct_pos_stride_range_iter[1303064] "dead after last mention" "RVV" "temp"
                val call_tmp[2040604]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val stride[2040606]:int(64)[13] "temp"
                (2040608 'move' stride[2040606](2040610 '.v' _iterator[2040581] F2_stride[2076798]))
                (2040614 call chpl_range_check_stride[1102894] stride[2040606])
                val call_tmp[2040616]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val default_arg_first[2040618]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val low[2040620]:int(64)[13] "temp"
                (2040622 'move' low[2040620](2040624 '.v' _iterator[2040581] F0_low[2076790]))
                (2040627 'move' default_arg_first[2040618](2040630 call chpl_checkIfRangeIterWillOverflow_default_first[1103259] low[2040620]))
                const-val default_arg_last[2040632]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val high[2040634]:int(64)[13] "temp"
                (2040636 'move' high[2040634](2040638 '.v' _iterator[2040581] F1_high[2076794]))
                (2040641 'move' default_arg_last[2040632](2040644 call chpl_checkIfRangeIterWillOverflow_default_last[1103287] high[2040634]))
                const-val _return_tmp_[2040646]:bool[10] "dead after last mention" "temp"
                const-val low[2040648]:int(64)[13] "temp"
                (2040650 'move' low[2040648](2040652 '.v' _iterator[2040581] F0_low[2076790]))
                const-val high[2040655]:int(64)[13] "temp"
                (2040657 'move' high[2040655](2040659 '.v' _iterator[2040581] F1_high[2076794]))
                const-val stride[2040662]:int(64)[13] "temp"
                (2040664 'move' stride[2040662](2040666 '.v' _iterator[2040581] F2_stride[2076798]))
                (2040669 'move' _return_tmp_[2040646](2040672 call chpl_checkIfRangeIterWillOverflow[1096137] low[2040648] high[2040655] stride[2040662] default_arg_first[2040618] default_arg_last[2040632] 1))
                val i[2040679]:int(64)[13] "dead at end of block" "insert auto destroy"
                val call_tmp[2040681]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (2040683 'move' i[2040679] 0)
                CForLoop[2040686] hazard
                {
                  const-val yret[2040734]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (2040736 'move' yret[2040734] i[2040679])
                  const-val _yieldedIndex[2040739]:int(64)[13] "temp"
                  (2040741 'move' _yieldedIndex[2040739] i[2040679])
                  {
                    const-val i[2040745]:int(64)[13] "const" "index var" "insert auto destroy"
                    (2040747 'move' i[2040745] _yieldedIndex[2040739])
                    ref yret[2040750]:_ref(locale)[948905] "dead after last mention" "YVV" "temp"
                    ref call_tmp[2040752]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
                    ref _this_tmp_[2040754]:_ref(_ddata(locale))[1255464] "dead after last mention" "temp"
                    (2040756 'move' _this_tmp_[2040754](2040759 call theData[1303311] info[2040433]))
                    val coerce_tmp[2040761]:_ddata(locale)[1255455] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (2040763 'move' coerce_tmp[2040761](2040765 'deref' _this_tmp_[2040754]))
                    (2040767 'move' call_tmp[2040752](2040770 call this[1303458] coerce_tmp[2040761] _yieldedIndex[2040739]))
                    ref _yieldedIndex[2040795]:_ref(locale)[948905] "temp"
                    (2040773 'move' _yieldedIndex[2040795] call_tmp[2040752])
                    {
                      ref elem[2040797]:_ref(locale)[948905] "index var" "insert auto destroy"
                      (2040799 'move' elem[2040797] _yieldedIndex[2040795])
                      ref yret[2040802]:_ref(locale)[948905] "dead after last mention" "YVV" "temp"
                      ref _yieldedIndex[2040804]:_ref(locale)[948905] "temp"
                      (2040806 'move' _yieldedIndex[2040804] elem[2040797])
                      {
                        ref i[2040810]:_ref(locale)[948905] "index var" "insert auto destroy"
                        (2040812 'move' i[2040810] _yieldedIndex[2040804])
                        ref yret[2040815]:_ref(locale)[948905] "dead after last mention" "YVV" "temp"
                        ref _yieldedIndex[2040817]:_ref(locale)[948905] "coforall index var" "temp"
                        (2040819 'move' _yieldedIndex[2040817] i[2040810])
                        {
                          ref loc[2040823]:_ref(locale)[948905] "coforall index var" "index var" "insert auto destroy"
                          (2040825 'move' loc[2040823] _yieldedIndex[2040817])
                          const-val tmp[2040828]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
                          const-val call_tmp[2040830]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
                          val _locale_tmp_[2040832]:BaseLocale[91204] "dead after last mention" "temp"
                          (2040834 'move' _locale_tmp_[2040832](2040837 call _value[89984] loc[2040823]))
                          (2040839 'move' call_tmp[2040830](2040841 '_wide_get_locale' _locale_tmp_[2040832]))
                          (2040843 'move' tmp[2040828] call_tmp[2040830])
                          val _args_foron_fn[2164144]:_class_localson_fn[2164130] "temp"
                          (2164148 'move' _args_foron_fn[2164144](2164146 'stack allocate class' _class_localson_fn[2164130]))
                          (2164150 '.=' _args_foron_fn[2164144] _0_tmp[2164133] tmp[2040828])
                          (2164154 '.=' _args_foron_fn[2164144] _1_root[2164135] root[1832018])
                          (2164158 '.=' _args_foron_fn[2164144] _2_id[2164137] id[1831986])
                          ref tmp[2164162]:_RuntimeTypeInfo[1253734] "temp"
                          (2164166 'move' tmp[2164162](2164164 'set reference' globalType[1831996]))
                          (2164168 '.=' _args_foron_fn[2164144] _3_globalType[2164139] tmp[2164162])
                          (2164172 '.=' _args_foron_fn[2164144] _4__coforallCount[2164141] _coforallCount[1832158])
                          val _args_vforon_fn[2164176]:c_void_ptr[149] "temp"
                          (2164180 'move' _args_vforon_fn[2164176](2164178 'cast_to_void_star' _args_foron_fn[2164144]))
                          val _args_sizeon_fn[2164182]:int(64)[13] "temp"
                          (2164186 'move' _args_sizeon_fn[2164182](2164184 'sizeof_bundle' _class_localson_fn[2164130]))
                          on(2164253 call wrapon_fn[2164188] tmp[2040828] _args_vforon_fn[2164176] _args_sizeon_fn[2164182] _args_foron_fn[2164144])
                          {
                          }
                          label _continueLabel[2040854]
                        }
                      }
                    }
                  }
                  {
                    const-val low[2040688]:int(64)[13] "temp"
                    (2040690 'move' low[2040688](2040692 '.v' _iterator[2040581] F0_low[2076790]))
                    (2040695 '=' i[2040679] low[2040688])
                  }
                  {
                    const-val high[2040699]:int(64)[13] "temp"
                    (2040701 'move' high[2040699](2040703 '.v' _iterator[2040581] F1_high[2076794]))
                    (2040706 '<=' i[2040679] high[2040699])
                  }
                  {
                    val call_tmp[2040710]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    const-val call_tmp[2040712]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val stride[2040714]:int(64)[13] "temp"
                    (2040716 'move' stride[2040714](2040718 '.v' _iterator[2040581] F2_stride[2076798]))
                    (2040721 'move' call_tmp[2040712] stride[2040714])
                    const-val stride[2040724]:int(64)[13] "temp"
                    (2040726 'move' stride[2040724](2040728 '.v' _iterator[2040581] F2_stride[2076798]))
                    (2040731 '+=' i[2040679] stride[2040724])
                  }
                }
                label _endchpl_direct_pos_stride_range_iter[2040786]
              }
              (2040789 call _freeIterator[1303246] _iterator[2040581])
              label _endchpl__serialViewIter[2040791]
            }
            (1982289 call _freeIterator[1303681] _iterator[1982203])
            label _endthese[1982291]
          }
          (1982294 call _freeIterator[1304286] _iterator[1982144])
          label _endthese[1982296]
        }
        label _breakLabel[1832336]
        val error[1847284]:Error[167984] "error variable" "temp"
        (1847286 'move' error[1847284] nil[44])
        (1832344 call _waitEndCount[1350140] _coforallCount[1832158] numTasks[1832165] error[1847284])
        val errorExists[2172204]:bool[10] "temp"
        (2172209 'move' errorExists[2172204](2172206 '!=' error[1847284] nil[44]))
        if errorExists[2172204]
        {
          (1847289 call chpl_propagate_error[170518] error[1847284])
        }
        (1887125 call _endCountFree[1233921] _coforallCount[1832158])
        (1887129 call _freeIterator[1305037] _iterator[1832181])
      }
    }
    (1887131 call chpl__autoDestroy[1562339] call_tmp[1832004])
    (1832530 return _void[55])
  }
  function on_fn[1827350](const in arg root[1827354]:int(64)[13], const  ref arg localeZeroGlobal[1827356]:_ref(string)[938000], const in arg data[1827358]:__serializeHelper[28089], const in arg id[1827360]:int(64)[13], const in arg _coforallCount[1841930]:_EndCount(AtomicT(int(64)),int(64))[945404]) : void[4] "cobegin or coforall" "non blocking" "on" "resolved"
  {
    {
      const-val call_tmp[1827364]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1864390]:locale[28] "temp"
      (1827369 call here[90438] ret_tmp[1864390])
      (1864393 'move' call_tmp[1827364] ret_tmp[1864390])
      const-val call_tmp[1827370]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1827372 'move' call_tmp[1827370](1827375 call id[90521] call_tmp[1827364]))
      const-val call_tmp[1827378]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1827380 'move' call_tmp[1827378](1827383 call !=[436055] call_tmp[1827370] root[1827354]))
      const-val call_tmp[1827386]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1827388 'move' call_tmp[1827386] call_tmp[1827378])
      if call_tmp[1827386]
      {
        val call_tmp[1827395]:string[26] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1827401]:string[26] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1876296]:string[26] "temp"
        val rvfRerefTmp[2146711]:__serializeHelper[28089] "temp"
        (2146714 'move' rvfRerefTmp[2146711] data[1827358])
        (1827409 call chpl__deserialize[1826353] rvfRerefTmp[2146711] ret_tmp[1876296])
        (1876299 'move' call_tmp[1827401] ret_tmp[1876296])
        const-val temp[1827411]:string[26] "dead at end of block" "no auto destroy" "no copy"
        (1827413 'move' temp[1827411] call_tmp[1827401])
        const-val call_tmp[1827417]:c_void_ptr[149] "dead at end of block" "maybe param" "temp"
        (1827419 'move' call_tmp[1827417](1827422 call chpl_get_global_serialize_table[171479] id[1827360]))
        const-val destVoidPtr[1827424]:c_void_ptr[149] "dead at end of block" "const" "insert auto destroy"
        (1827426 'move' destVoidPtr[1827424](1828387 call chpl__initCopy[945303] call_tmp[1827417]))
        val call_tmp[1827430]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[1827436]:c_ptr(string)[1828393] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[1827443]:c_ptr(string)[1828393] "dead at end of block" "maybe param" "temp"
        (1827445 'move' call_tmp[1827443](1827448 call _cast[1828413] destVoidPtr[1827424]))
        const dest[1827451]:c_ptr(string)[1828393] "dead at end of block" "const" "insert auto destroy"
        (1827453 'move' dest[1827451](1828442 call chpl__initCopy[1828444] call_tmp[1827443]))
        ref call_tmp[1827459]:_ref(string)[938000] "dead after last mention" "maybe param" "temp"
        (1827461 'move' call_tmp[1827459](1827467 call deref[1828463] dest[1827451]))
        (1827468 '=' call_tmp[1827459] temp[1827411])
      }
      (1887083 call chpl__autoDestroy[1562339] call_tmp[1827364])
    }
    (1827479 return _void[55])
  }
  function on_fn[1827961](const in arg root[1827965]:int(64)[13], const in arg id[1827967]:int(64)[13], const  ref arg globalType[1841932]:_ref(string)[938000], const in arg _coforallCount[1841934]:_EndCount(AtomicT(int(64)),int(64))[945404]) : void[4] "cobegin or coforall" "non blocking" "on" "resolved"
  {
    {
      const-val call_tmp[1827971]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1864402]:locale[28] "temp"
      (1827976 call here[90438] ret_tmp[1864402])
      (1864405 'move' call_tmp[1827971] ret_tmp[1864402])
      const-val call_tmp[1827977]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1827979 'move' call_tmp[1827977](1827982 call id[90521] call_tmp[1827971]))
      const-val call_tmp[1827985]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1827987 'move' call_tmp[1827985](1827990 call !=[436055] call_tmp[1827977] root[1827965]))
      const-val call_tmp[1827993]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1827995 'move' call_tmp[1827993] call_tmp[1827985])
      if call_tmp[1827993]
      {
        const-val call_tmp[1828002]:c_void_ptr[149] "dead at end of block" "maybe param" "temp"
        (1828004 'move' call_tmp[1828002](1828007 call chpl_get_global_serialize_table[171479] id[1827967]))
        const-val voidPtr[1828009]:c_void_ptr[149] "dead at end of block" "const" "insert auto destroy"
        (1828011 'move' voidPtr[1828009](1828539 call chpl__initCopy[945303] call_tmp[1828002]))
        val call_tmp[1828015]:c_ptr(string)[1828393] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[1828022]:c_ptr(string)[1828393] "dead at end of block" "maybe param" "temp"
        (1828024 'move' call_tmp[1828022](1828027 call _cast[1828413] voidPtr[1828009]))
        val ptr[1828030]:c_ptr(string)[1828393] "dead at end of block" "insert auto destroy"
        (1828032 'move' ptr[1828030](1828551 call chpl__initCopy[1828444] call_tmp[1828022]))
        ref call_tmp[1828036]:_ref(string)[938000] "dead at end of block" "maybe param" "temp"
        (1828038 'move' call_tmp[1828036](1828044 call deref[1828463] ptr[1828030]))
        ref temp[1828045]:_ref(string)[938000] "dead at end of block" "no auto destroy" "no copy"
        (1828047 'move' temp[1828045] call_tmp[1828036])
        (1828055 call chpl__autoDestroy[1562275] temp[1828045])
      }
      (1887099 call chpl__autoDestroy[1562339] call_tmp[1827971])
    }
    (1828064 return _void[55])
  }
  function on_fn[1831616](const in arg root[1831620]:int(64)[13], const in arg localeZeroGlobal[1831622]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1830570], const in arg data[1831624]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1830570], const in arg id[1831626]:int(64)[13], const in arg _coforallCount[1841936]:_EndCount(AtomicT(int(64)),int(64))[945404]) : void[4] "cobegin or coforall" "non blocking" "on" "resolved"
  {
    val localeZeroGlobal[2146724]:domain(1,int(64),false)[1252658] "temp"
    ref localeZeroGlobal[2146725]:domain(1,int(64),false)[1252658] "temp"
    val ds_info[2146731]:_RuntimeTypeInfo[1253734]
    ref tmp[2146734]:domain(1,int(64),false)[1252658] "temp"
    (2146738 'move' tmp[2146734](2146736 'set reference' localeZeroGlobal[2146724]))
    (2146728 call chpl__deserialize[1831105] ds_info[2146731] localeZeroGlobal[1831622] tmp[2146734])
    (2146743 'move' localeZeroGlobal[2146725](2146741 'set reference' localeZeroGlobal[2146724]))
    {
      const-val call_tmp[1831630]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1864414]:locale[28] "temp"
      (1831635 call here[90438] ret_tmp[1864414])
      (1864417 'move' call_tmp[1831630] ret_tmp[1864414])
      const-val call_tmp[1831636]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1831638 'move' call_tmp[1831636](1831641 call id[90521] call_tmp[1831630]))
      const-val call_tmp[1831644]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1831646 'move' call_tmp[1831644](1831649 call !=[436055] call_tmp[1831636] root[1831620]))
      const-val call_tmp[1831652]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1831654 'move' call_tmp[1831652] call_tmp[1831644])
      if call_tmp[1831652]
      {
        const-val call_tmp[1831661]:_RuntimeTypeInfo[1253734] "dead at end of block" "expr temp" "maybe param" "temp"
        (1831663 'move' call_tmp[1831661](1832632 call chpl__convertValueToRuntimeType[1560947] localeZeroGlobal[2146725]))
        const-val call_tmp[1831667]:domain(1,int(64),false)[1252658] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1876332]:domain(1,int(64),false)[1252658] "temp"
        val rvfRerefTmp[2146757]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1830570] "temp"
        (2146760 'move' rvfRerefTmp[2146757] data[1831624])
        (1831675 call chpl__deserialize[1831105] call_tmp[1831661] rvfRerefTmp[2146757] ret_tmp[1876332])
        (1876335 'move' call_tmp[1831667] ret_tmp[1876332])
        const-val temp[1831677]:domain(1,int(64),false)[1252658] "dead at end of block" "no auto destroy" "no copy"
        (1831679 'move' temp[1831677] call_tmp[1831667])
        const-val call_tmp[1831683]:c_void_ptr[149] "dead at end of block" "maybe param" "temp"
        (1831685 'move' call_tmp[1831683](1831688 call chpl_get_global_serialize_table[171479] id[1831626]))
        const-val destVoidPtr[1831690]:c_void_ptr[149] "dead at end of block" "const" "insert auto destroy"
        (1831692 'move' destVoidPtr[1831690](1832637 call chpl__initCopy[945303] call_tmp[1831683]))
        const-val call_tmp[1831696]:_RuntimeTypeInfo[1253734] "dead after last mention" "expr temp" "maybe param" "temp"
        (1831698 'move' call_tmp[1831696](1832640 call chpl__convertValueToRuntimeType[1560947] localeZeroGlobal[2146725]))
        val call_tmp[1831702]:c_ptr(domain(1,int(64),false))[1832646] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[1831709]:c_ptr(domain(1,int(64),false))[1832646] "dead at end of block" "maybe param" "temp"
        (1831711 'move' call_tmp[1831709](1831714 call _cast[1832666] destVoidPtr[1831690]))
        const dest[1831717]:c_ptr(domain(1,int(64),false))[1832646] "dead at end of block" "const" "insert auto destroy"
        (1831719 'move' dest[1831717](1832695 call chpl__initCopy[1832697] call_tmp[1831709]))
        ref call_tmp[1831725]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252684] "dead after last mention" "maybe param" "temp"
        (1831727 'move' call_tmp[1831725](1831733 call deref[1832716] dest[1831717]))
        (1831734 '=' call_tmp[1831725] temp[1831677])
      }
      (1887119 call chpl__autoDestroy[1562339] call_tmp[1831630])
    }
    (2146745 call chpl__autoDestroy[1831024] localeZeroGlobal[1831622])
    (2146748 call chpl__autoDestroy[1657644] localeZeroGlobal[2146724])
    (1831745 return _void[55])
  }
  function on_fn[1832227](const in arg root[1832231]:int(64)[13], const in arg id[1832233]:int(64)[13], const  ref arg globalType[1841938]:_ref(_RuntimeTypeInfo)[1253751], const in arg _coforallCount[1841940]:_EndCount(AtomicT(int(64)),int(64))[945404]) : void[4] "cobegin or coforall" "non blocking" "on" "resolved"
  {
    {
      const-val call_tmp[1832237]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1864426]:locale[28] "temp"
      (1832242 call here[90438] ret_tmp[1864426])
      (1864429 'move' call_tmp[1832237] ret_tmp[1864426])
      const-val call_tmp[1832243]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1832245 'move' call_tmp[1832243](1832248 call id[90521] call_tmp[1832237]))
      const-val call_tmp[1832251]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1832253 'move' call_tmp[1832251](1832256 call !=[436055] call_tmp[1832243] root[1832231]))
      const-val call_tmp[1832259]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1832261 'move' call_tmp[1832259] call_tmp[1832251])
      if call_tmp[1832259]
      {
        const-val call_tmp[1832268]:c_void_ptr[149] "dead at end of block" "maybe param" "temp"
        (1832270 'move' call_tmp[1832268](1832273 call chpl_get_global_serialize_table[171479] id[1832233]))
        const-val voidPtr[1832275]:c_void_ptr[149] "dead at end of block" "const" "insert auto destroy"
        (1832277 'move' voidPtr[1832275](1832795 call chpl__initCopy[945303] call_tmp[1832268]))
        val call_tmp[1832281]:c_ptr(domain(1,int(64),false))[1832646] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[1832288]:c_ptr(domain(1,int(64),false))[1832646] "dead at end of block" "maybe param" "temp"
        (1832290 'move' call_tmp[1832288](1832293 call _cast[1832666] voidPtr[1832275]))
        val ptr[1832296]:c_ptr(domain(1,int(64),false))[1832646] "dead at end of block" "insert auto destroy"
        (1832298 'move' ptr[1832296](1832807 call chpl__initCopy[1832697] call_tmp[1832288]))
        ref call_tmp[1832302]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252684] "dead at end of block" "maybe param" "temp"
        (1832304 'move' call_tmp[1832302](1832310 call deref[1832716] ptr[1832296]))
        ref temp[1832311]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252684] "dead at end of block" "no auto destroy" "no copy"
        (1832313 'move' temp[1832311] call_tmp[1832302])
        (1832321 call chpl__autoDestroy[1657644] temp[1832311])
      }
      (1887135 call chpl__autoDestroy[1562339] call_tmp[1832237])
    }
    (1832330 return _void[55])
  }
  function wrapon_fn[2163785](const in arg dummy_locale_arg[2163787]:chpl_localeID_t[209352], in arg buf[2163789]:c_void_ptr[149], in arg buf_size[2163791]:int(64)[13], in arg c[2163793]:_class_localson_fn[2163721]) : void[4] "cobegin or coforall block" "non blocking" "on block"
  {
    val _0_tmp[2163798]:chpl_localeID_t[209352] "temp"
    (2163803 'move' _0_tmp[2163798](2163800 '.v' c[2163793] _0_tmp[2163724]))
    val _1_root[2163805]:int(64)[13] "temp"
    (2163810 'move' _1_root[2163805](2163807 '.v' c[2163793] _1_root[2163726]))
    ref _2_localeZeroGlobal[2163813]:string[26] "temp"
    (2163818 'move' _2_localeZeroGlobal[2163813](2163815 '.v' c[2163793] _2_localeZeroGlobal[2163728]))
    val _3_rvfDerefTmp[2163821]:__serializeHelper[28089] "temp"
    (2163826 'move' _3_rvfDerefTmp[2163821](2163823 '.v' c[2163793] _3_rvfDerefTmp[2163730]))
    val _4_id[2163829]:int(64)[13] "temp"
    (2163834 'move' _4_id[2163829](2163831 '.v' c[2163793] _4_id[2163732]))
    val _5__coforallCount[2163837]:_EndCount(AtomicT(int(64)),int(64))[945404] "temp"
    (2163842 'move' _5__coforallCount[2163837](2163839 '.v' c[2163793] _5__coforallCount[2163734]))
    (2163796 call on_fn[1827350] _1_root[2163805] _2_localeZeroGlobal[2163813] _3_rvfDerefTmp[2163821] _4_id[2163829] _5__coforallCount[2163837])
    val endcount[2163845]:_EndCount(AtomicT(int(64)),int(64))[945404] "temp"
    (2163850 'move' endcount[2163845](2163847 '.v' c[2163793] _5__coforallCount[2163734]))
    (2163852 call _downEndCount[1230698] endcount[2163845] nil[44])
    (2163856 return _void[55])
  }
  function wrapon_fn[2163922](const in arg dummy_locale_arg[2163924]:chpl_localeID_t[209352], in arg buf[2163926]:c_void_ptr[149], in arg buf_size[2163928]:int(64)[13], in arg c[2163930]:_class_localson_fn[2163864]) : void[4] "cobegin or coforall block" "non blocking" "on block"
  {
    val _0_tmp[2163935]:chpl_localeID_t[209352] "temp"
    (2163940 'move' _0_tmp[2163935](2163937 '.v' c[2163930] _0_tmp[2163867]))
    val _1_root[2163942]:int(64)[13] "temp"
    (2163947 'move' _1_root[2163942](2163944 '.v' c[2163930] _1_root[2163869]))
    val _2_id[2163950]:int(64)[13] "temp"
    (2163955 'move' _2_id[2163950](2163952 '.v' c[2163930] _2_id[2163871]))
    ref _3_globalType[2163958]:string[26] "temp"
    (2163963 'move' _3_globalType[2163958](2163960 '.v' c[2163930] _3_globalType[2163873]))
    val _4__coforallCount[2163966]:_EndCount(AtomicT(int(64)),int(64))[945404] "temp"
    (2163971 'move' _4__coforallCount[2163966](2163968 '.v' c[2163930] _4__coforallCount[2163875]))
    (2163933 call on_fn[1827961] _1_root[2163942] _2_id[2163950] _3_globalType[2163958] _4__coforallCount[2163966])
    val endcount[2163974]:_EndCount(AtomicT(int(64)),int(64))[945404] "temp"
    (2163979 'move' endcount[2163974](2163976 '.v' c[2163930] _4__coforallCount[2163875]))
    (2163981 call _downEndCount[1230698] endcount[2163974] nil[44])
    (2163985 return _void[55])
  }
  function wrapon_fn[2164051](const in arg dummy_locale_arg[2164053]:chpl_localeID_t[209352], in arg buf[2164055]:c_void_ptr[149], in arg buf_size[2164057]:int(64)[13], in arg c[2164059]:_class_localson_fn[2163993]) : void[4] "cobegin or coforall block" "non blocking" "on block"
  {
    val _0_tmp[2164064]:chpl_localeID_t[209352] "temp"
    (2164069 'move' _0_tmp[2164064](2164066 '.v' c[2164059] _0_tmp[2163996]))
    val _1_root[2164071]:int(64)[13] "temp"
    (2164076 'move' _1_root[2164071](2164073 '.v' c[2164059] _1_root[2163998]))
    val _2_localeZeroGlobal_data[2164079]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1830570] "temp"
    (2164084 'move' _2_localeZeroGlobal_data[2164079](2164081 '.v' c[2164059] _2_localeZeroGlobal_data[2164000]))
    val _3_rvfDerefTmp[2164087]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1830570] "temp"
    (2164092 'move' _3_rvfDerefTmp[2164087](2164089 '.v' c[2164059] _3_rvfDerefTmp[2164002]))
    val _4_id[2164095]:int(64)[13] "temp"
    (2164100 'move' _4_id[2164095](2164097 '.v' c[2164059] _4_id[2164004]))
    val _5__coforallCount[2164103]:_EndCount(AtomicT(int(64)),int(64))[945404] "temp"
    (2164108 'move' _5__coforallCount[2164103](2164105 '.v' c[2164059] _5__coforallCount[2164006]))
    (2164062 call on_fn[1831616] _1_root[2164071] _2_localeZeroGlobal_data[2164079] _3_rvfDerefTmp[2164087] _4_id[2164095] _5__coforallCount[2164103])
    val endcount[2164111]:_EndCount(AtomicT(int(64)),int(64))[945404] "temp"
    (2164116 'move' endcount[2164111](2164113 '.v' c[2164059] _5__coforallCount[2164006]))
    (2164118 call _downEndCount[1230698] endcount[2164111] nil[44])
    (2164122 return _void[55])
  }
  function wrapon_fn[2164188](const in arg dummy_locale_arg[2164190]:chpl_localeID_t[209352], in arg buf[2164192]:c_void_ptr[149], in arg buf_size[2164194]:int(64)[13], in arg c[2164196]:_class_localson_fn[2164130]) : void[4] "cobegin or coforall block" "non blocking" "on block"
  {
    val _0_tmp[2164201]:chpl_localeID_t[209352] "temp"
    (2164206 'move' _0_tmp[2164201](2164203 '.v' c[2164196] _0_tmp[2164133]))
    val _1_root[2164208]:int(64)[13] "temp"
    (2164213 'move' _1_root[2164208](2164210 '.v' c[2164196] _1_root[2164135]))
    val _2_id[2164216]:int(64)[13] "temp"
    (2164221 'move' _2_id[2164216](2164218 '.v' c[2164196] _2_id[2164137]))
    ref _3_globalType[2164224]:_RuntimeTypeInfo[1253734] "temp"
    (2164229 'move' _3_globalType[2164224](2164226 '.v' c[2164196] _3_globalType[2164139]))
    val _4__coforallCount[2164232]:_EndCount(AtomicT(int(64)),int(64))[945404] "temp"
    (2164237 'move' _4__coforallCount[2164232](2164234 '.v' c[2164196] _4__coforallCount[2164141]))
    (2164199 call on_fn[1832227] _1_root[2164208] _2_id[2164216] _3_globalType[2164224] _4__coforallCount[2164232])
    val endcount[2164240]:_EndCount(AtomicT(int(64)),int(64))[945404] "temp"
    (2164245 'move' endcount[2164240](2164242 '.v' c[2164196] _4__coforallCount[2164141]))
    (2164247 call _downEndCount[1230698] endcount[2164240] nil[44])
    (2164251 return _void[55])
  }
}