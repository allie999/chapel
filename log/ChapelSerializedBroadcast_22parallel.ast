AST dump for ChapelSerializedBroadcast after pass parallel.
Module use list: ChapelLocale CPtr 

{
  type _class_localson_fn[2102507] val _runtime_hdr[2102508]:chpl_comm_on_bundle_t[209301] val _0_tmp[2102510]:chpl_localeID_t[209294] val _1_root[2102512]:int(64)[13] val _2_id[2102514]:int(64)[13] ref _3_globalType[2102516]:_RuntimeTypeInfo[1253673] val _4__coforallCount[2102518]:_EndCount(AtomicT(int(64)),int(64))[945343]
  type _class_localson_fn[2102370] val _runtime_hdr[2102371]:chpl_comm_on_bundle_t[209301] val _0_tmp[2102373]:chpl_localeID_t[209294] val _1_root[2102375]:int(64)[13] val _2_localeZeroGlobal_data[2102377]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1796639] val _3_rvfDerefTmp[2102379]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1796639] val _4_id[2102381]:int(64)[13] val _5__coforallCount[2102383]:_EndCount(AtomicT(int(64)),int(64))[945343]
  type _class_localson_fn[2102241] val _runtime_hdr[2102242]:chpl_comm_on_bundle_t[209301] val _0_tmp[2102244]:chpl_localeID_t[209294] val _1_root[2102246]:int(64)[13] val _2_id[2102248]:int(64)[13] ref _3_globalType[2102250]:string[26] val _4__coforallCount[2102252]:_EndCount(AtomicT(int(64)),int(64))[945343]
  type _class_localson_fn[2102098] val _runtime_hdr[2102099]:chpl_comm_on_bundle_t[209301] val _0_tmp[2102101]:chpl_localeID_t[209294] val _1_root[2102103]:int(64)[13] ref _2_localeZeroGlobal[2102105]:string[26] val _3_rvfDerefTmp[2102107]:__serializeHelper[28086] val _4_id[2102109]:int(64)[13] val _5__coforallCount[2102111]:_EndCount(AtomicT(int(64)),int(64))[945343]
  function chpl__init_ChapelSerializedBroadcast[416023]() : void[4] "insert line file info" "module init" "resolved"
  {
    (522419 return _void[55])
  }
  function chpl_get_global_serialize_table[171433](const in arg idx[171430]:int(64)[13]) : c_void_ptr[149] "extern" "local args" "no fn body" "resolved" "no return value for void"
  {
    val ret[522411]:c_void_ptr[149] "RVV" "temp"
    (522413 return ret[522411])
  }
  function chpl__broadcastGlobal[1793088](const  ref arg localeZeroGlobal[1793090]:_ref(string)[937939], const in arg id[1793092]:int(64)[13]) : void[4] "serialized broadcast function" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    {
      const-val call_tmp[1793179]:__serializeHelper[28086] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1829249]:__serializeHelper[28086] "temp"
      (1793187 call chpl__serialize[30883] localeZeroGlobal[1793090] ret_tmp[1829249])
      (1829252 'move' call_tmp[1793179] ret_tmp[1829249])
      const-val data[1793188]:__serializeHelper[28086] "dead at end of block" "const" "insert auto destroy"
      (1793190 'move' data[1793188] call_tmp[1793179])
      const-val call_tmp[1793194]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1830841]:locale[28] "temp"
      (1793199 call here[90435] ret_tmp[1830841])
      (1830844 'move' call_tmp[1793194] ret_tmp[1830841])
      const-val call_tmp[1793200]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (1793202 'move' call_tmp[1793200](1793205 call id[90518] call_tmp[1793194]))
      const-val root[1793208]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      (1793210 'move' root[1793208] call_tmp[1793200])
      {
        ref tmpIter[1793215]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287037] "dead at end of block" "maybe ref" "no copy" "reference to a const" "temp"
        (1793217 'move' tmpIter[1793215] Locales[113656])
        {
          const _coforallCount[1793348]:_EndCount(AtomicT(int(64)),int(64))[945343] "dead after last mention" "concurrently accessed" "const" "end count" "temp"
          (1793350 'move' _coforallCount[1793348](1793353 call _endCountAlloc[938818]))
          const-val numTasks[1793355]:int(64)[13] "dead at end of block" "temp"
          (1793357 'move' numTasks[1793355](1793360 call size[1562443] tmpIter[1793215]))
          (1793364 call _upEndCount[1325372] _coforallCount[1793348] numTasks[1793355])
          ref _indexOfInterest[1793369]:_ref(locale)[948844] "dead at end of block" "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1793371]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304291] "dead at end of block" "expr temp" "temp"
          (1793373 'move' _iterator[1793371](1793376 call _getIterator[1298109] tmpIter[1793215]))
          {
            val ret[1940020]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304297] "dead after last mention" "RVV" "temp"
            ref _indexOfInterest[1940022]:_ref(locale)[948844] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1940024]:_ic_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303686] "dead at end of block" "expr temp" "temp"
            val call_tmp[1940026]:[domain(1,int(64),false)] locale[1256486] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val this[1940217]:[domain(1,int(64),false)] locale[1287011] "temp"
            (1940222 'move' this[1940217](1940219 '.v' _iterator[1793371] F0_this[2021880]))
            (1940028 'move' call_tmp[1940026](1940031 call _value[1287066] this[1940217]))
            const-val call_tmp[1940033]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303692] "dead at end of block" "maybe param" "temp"
            val coerce_tmp[1940035]:[domain(1,int(64),false)] locale[1256486] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (1940037 'move' coerce_tmp[1940035] call_tmp[1940026])
            const-val default_arg_tasksPerLocale[1940040]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
            (1940042 'move' default_arg_tasksPerLocale[1940040](1940045 call these_default_tasksPerLocale[1298379] call_tmp[1940026]))
            const-val default_arg_ignoreRunning[1940047]:bool[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
            (1940049 'move' default_arg_ignoreRunning[1940047](1940052 call these_default_ignoreRunning[1298410] coerce_tmp[1940035]))
            const-val default_arg_minIndicesPerTask[1940054]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
            (1940056 'move' default_arg_minIndicesPerTask[1940054](1940059 call these_default_minIndicesPerTask[1298441] coerce_tmp[1940035]))
            const-val ret_tmp[1940061]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303692] "temp"
            (1940064 call these[1298263] coerce_tmp[1940035] default_arg_tasksPerLocale[1940040] default_arg_ignoreRunning[1940047] default_arg_minIndicesPerTask[1940054] ret_tmp[1940061])
            (1940070 'move' call_tmp[1940033] ret_tmp[1940061])
            (1940073 'move' _iterator[1940024](1940076 call _getIterator[1303701] call_tmp[1940033]))
            {
              val ret[1940079]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303692] "dead after last mention" "RVV" "temp"
              ref _indexOfInterest[1940081]:_ref(locale)[948844] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[1940083]:_ic_chpl__serialViewIter[1303436] "dead at end of block" "expr temp" "temp"
              ref call_tmp[1940085]:_ref(domain(1,int(64),false))[1250949] "dead at end of block" "maybe param" "temp"
              const-val this[1940087]:[domain(1,int(64),false)] locale[1256486] "temp"
              (1940089 'move' this[1940087](1940091 '.v' _iterator[1940024] F0_this[2023988]))
              (1940094 'move' call_tmp[1940085](1940097 call dom[1258019] this[1940087]))
              const-val call_tmp[1940099]:_ir_chpl__serialViewIter[1303442] "dead at end of block" "maybe param" "temp"
              val coerce_tmp[1940101]:domain(1,int(64),false)[1250934] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1940103 'move' coerce_tmp[1940101](1940105 'deref' call_tmp[1940085]))
              const-val ret_tmp[1940107]:_ir_chpl__serialViewIter[1303442] "temp"
              const-val this[1940109]:[domain(1,int(64),false)] locale[1256486] "temp"
              (1940111 'move' this[1940109](1940113 '.v' _iterator[1940024] F0_this[2023988]))
              (1940117 call chpl__serialViewIter[1298475] this[1940109] coerce_tmp[1940101] ret_tmp[1940107])
              (1940121 'move' call_tmp[1940099] ret_tmp[1940107])
              (1940124 'move' _iterator[1940083](1940127 call _getIterator[1303451] call_tmp[1940099]))
              {
                val ret[1991739]:_ir_chpl__serialViewIter[1303442] "dead after last mention" "RVV" "temp"
                val info[1991741]:[domain(1,int(64),false)] locale[1256486] "dead at end of block" "insert auto destroy"
                val tmp[1991743]:[domain(1,int(64),false)] locale[1256486] "dead at end of block" "expr temp" "insert auto destroy" "maybe copy elided" "maybe param" "temp"
                val tmp[1991745]:[domain(1,int(64),false)] locale[1256486] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val arr[1992166]:[domain(1,int(64),false)] locale[1256486] "temp"
                (1992171 'move' arr[1992166](1992168 '.v' _iterator[1940083] F0_arr[2025893]))
                (1991747 'move' tmp[1991745] arr[1992166])
                const-val arr[1992173]:[domain(1,int(64),false)] locale[1256486] "temp"
                (1992178 'move' arr[1992173](1992175 '.v' _iterator[1940083] F0_arr[2025893]))
                (1991750 'move' tmp[1991743] arr[1992173])
                const-val arr[1992180]:[domain(1,int(64),false)] locale[1256486] "temp"
                (1992185 'move' arr[1992180](1992182 '.v' _iterator[1940083] F0_arr[2025893]))
                (1991753 '=' info[1991741] arr[1992180])
                (1991756 'noop')
                const-val call_tmp[1991757]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                val coerce_tmp[1991759]:domain(1,int(64),false)[1250934] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                const-val viewDom[1992187]:domain(1,int(64),false)[1250934] "temp"
                (1992192 'move' viewDom[1992187](1992189 '.v' _iterator[1940083] F1_viewDom[2025897]))
                (1991761 'move' coerce_tmp[1991759] viewDom[1992187])
                const-val viewDom[1992194]:domain(1,int(64),false)[1250934] "temp"
                (1992199 'move' viewDom[1992194](1992196 '.v' _iterator[1940083] F1_viewDom[2025897]))
                (1991764 'move' call_tmp[1991757](1991767 call dsiLow[1300436] viewDom[1992194]))
                const-val call_tmp[1991769]:int(64)[13] "dead at end of block" "maybe param" "temp"
                const-val arr[1992201]:[domain(1,int(64),false)] locale[1256486] "temp"
                (1992206 'move' arr[1992201](1992203 '.v' _iterator[1940083] F0_arr[2025893]))
                (1991771 'move' call_tmp[1991769](1991774 call getDataIndex[1300695] arr[1992201] call_tmp[1991757]))
                const-val first[1991777]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                (1991779 'move' first[1991777] call_tmp[1991769])
                const-val call_tmp[1991782]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                val coerce_tmp[1991784]:domain(1,int(64),false)[1250934] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                const-val viewDom[1992208]:domain(1,int(64),false)[1250934] "temp"
                (1992213 'move' viewDom[1992208](1992210 '.v' _iterator[1940083] F1_viewDom[2025897]))
                (1991786 'move' coerce_tmp[1991784] viewDom[1992208])
                (1991789 'move' call_tmp[1991782](1991792 call dsiLow[1300436] coerce_tmp[1991784]))
                const-val call_tmp[1991794]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                (1991796 'move' call_tmp[1991794](1991799 call chpl__idxToInt[1026916] call_tmp[1991782]))
                const-val call_tmp[1991801]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                (1991803 'move' call_tmp[1991801](1991806 call +[949666] call_tmp[1991794]))
                const-val call_tmp[1991808]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                val coerce_tmp[1991810]:domain(1,int(64),false)[1250934] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                const-val viewDom[1992215]:domain(1,int(64),false)[1250934] "temp"
                (1992220 'move' viewDom[1992215](1992217 '.v' _iterator[1940083] F1_viewDom[2025897]))
                (1991812 'move' coerce_tmp[1991810] viewDom[1992215])
                (1991815 'move' call_tmp[1991808](1991818 call chpl_intToIdx[1301865] coerce_tmp[1991810] call_tmp[1991801]))
                const-val call_tmp[1991821]:int(64)[13] "dead at end of block" "maybe param" "temp"
                (1991823 'move' call_tmp[1991821](1991826 call getDataIndex[1300695] info[1991741] call_tmp[1991808]))
                const-val second[1991829]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                (1991831 'move' second[1991829] call_tmp[1991821])
                const-val call_tmp[1991834]:int(64)[13] "dead at end of block" "maybe param" "temp"
                (1991836 'move' call_tmp[1991834](1991839 call -[440416] call_tmp[1991821] call_tmp[1991769]))
                const-val step[1991842]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                (1991844 'move' step[1991842] call_tmp[1991834])
                const-val call_tmp[1991847]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                val coerce_tmp[1991849]:domain(1,int(64),false)[1250934] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                const-val viewDom[1992222]:domain(1,int(64),false)[1250934] "temp"
                (1992227 'move' viewDom[1992222](1992224 '.v' _iterator[1940083] F1_viewDom[2025897]))
                (1991851 'move' coerce_tmp[1991849] viewDom[1992222])
                (1991854 'move' call_tmp[1991847](1991857 call dsiNumIndices[1263634] coerce_tmp[1991849]))
                const-val call_tmp[1991859]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                (1991861 'move' call_tmp[1991859](1991864 call -[962226] call_tmp[1991847]))
                const-val call_tmp[1991866]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                (1991868 'move' call_tmp[1991866](1991871 call *[441828] call_tmp[1991859] call_tmp[1991834]))
                const-val call_tmp[1991874]:int(64)[13] "dead at end of block" "maybe param" "temp"
                (1991876 'move' call_tmp[1991874](1991879 call +[439636] call_tmp[1991769] call_tmp[1991866]))
                const-val last[1991882]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                (1991884 'move' last[1991882] call_tmp[1991874])
                val _indexOfInterest[1991887]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1991889]:_ic_chpl_direct_pos_stride_range_iter[1302997] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[1991891]:_ir_chpl_direct_pos_stride_range_iter[1303003] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[1991893]:_ir_chpl_direct_pos_stride_range_iter[1303003] "temp"
                (1991896 call chpl_direct_pos_stride_range_iter[1301952] call_tmp[1991769] call_tmp[1991874] call_tmp[1991834] ret_tmp[1991893])
                (1991901 'move' call_tmp[1991891] ret_tmp[1991893])
                (1991904 'move' _iterator[1991889](1991907 call _getIterator[1303012] call_tmp[1991891]))
                {
                  val ret[1991910]:_ir_chpl_direct_pos_stride_range_iter[1303003] "dead after last mention" "RVV" "temp"
                  val call_tmp[1991912]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val stride[1991914]:int(64)[13] "temp"
                  (1991916 'move' stride[1991914](1991918 '.v' _iterator[1991889] F2_stride[2027437]))
                  (1991922 call chpl_range_check_stride[1102833] stride[1991914])
                  val call_tmp[1991924]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val default_arg_first[1991926]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val low[1991928]:int(64)[13] "temp"
                  (1991930 'move' low[1991928](1991932 '.v' _iterator[1991889] F0_low[2027429]))
                  (1991935 'move' default_arg_first[1991926](1991938 call chpl_checkIfRangeIterWillOverflow_default_first[1103198] low[1991928]))
                  const-val default_arg_last[1991940]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val high[1991942]:int(64)[13] "temp"
                  (1991944 'move' high[1991942](1991946 '.v' _iterator[1991889] F1_high[2027433]))
                  (1991949 'move' default_arg_last[1991940](1991952 call chpl_checkIfRangeIterWillOverflow_default_last[1103226] high[1991942]))
                  const-val _return_tmp_[1991954]:bool[10] "dead after last mention" "temp"
                  const-val low[1991956]:int(64)[13] "temp"
                  (1991958 'move' low[1991956](1991960 '.v' _iterator[1991889] F0_low[2027429]))
                  const-val high[1991963]:int(64)[13] "temp"
                  (1991965 'move' high[1991963](1991967 '.v' _iterator[1991889] F1_high[2027433]))
                  const-val stride[1991970]:int(64)[13] "temp"
                  (1991972 'move' stride[1991970](1991974 '.v' _iterator[1991889] F2_stride[2027437]))
                  (1991977 'move' _return_tmp_[1991954](1991980 call chpl_checkIfRangeIterWillOverflow[1096076] low[1991956] high[1991963] stride[1991970] default_arg_first[1991926] default_arg_last[1991940] 1))
                  val i[1991987]:int(64)[13] "dead at end of block" "insert auto destroy"
                  val call_tmp[1991989]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (1991991 'move' i[1991987] 0)
                  CForLoop[1991994] hazard
                  {
                    const-val yret[1992042]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (1992044 'move' yret[1992042] i[1991987])
                    const-val _yieldedIndex[1992047]:int(64)[13] "temp"
                    (1992049 'move' _yieldedIndex[1992047] i[1991987])
                    {
                      const-val i[1992053]:int(64)[13] "const" "index var" "insert auto destroy"
                      (1992055 'move' i[1992053] _yieldedIndex[1992047])
                      ref yret[1992058]:_ref(locale)[948844] "dead after last mention" "YVV" "temp"
                      ref call_tmp[1992060]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
                      ref _this_tmp_[1992062]:_ref(_ddata(locale))[1255403] "dead after last mention" "temp"
                      (1992064 'move' _this_tmp_[1992062](1992067 call theData[1303250] info[1991741]))
                      val coerce_tmp[1992069]:_ddata(locale)[1255394] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (1992071 'move' coerce_tmp[1992069](1992073 'deref' _this_tmp_[1992062]))
                      (1992075 'move' call_tmp[1992060](1992078 call this[1303397] coerce_tmp[1992069] _yieldedIndex[1992047]))
                      ref _yieldedIndex[1992103]:_ref(locale)[948844] "temp"
                      (1992081 'move' _yieldedIndex[1992103] call_tmp[1992060])
                      {
                        ref elem[1992105]:_ref(locale)[948844] "index var" "insert auto destroy"
                        (1992107 'move' elem[1992105] _yieldedIndex[1992103])
                        ref yret[1992110]:_ref(locale)[948844] "dead after last mention" "YVV" "temp"
                        ref _yieldedIndex[1992112]:_ref(locale)[948844] "temp"
                        (1992114 'move' _yieldedIndex[1992112] elem[1992105])
                        {
                          ref i[1992118]:_ref(locale)[948844] "index var" "insert auto destroy"
                          (1992120 'move' i[1992118] _yieldedIndex[1992112])
                          ref yret[1992123]:_ref(locale)[948844] "dead after last mention" "YVV" "temp"
                          ref _yieldedIndex[1992125]:_ref(locale)[948844] "coforall index var" "temp"
                          (1992127 'move' _yieldedIndex[1992125] i[1992118])
                          {
                            ref loc[1992131]:_ref(locale)[948844] "coforall index var" "index var" "insert auto destroy"
                            (1992133 'move' loc[1992131] _yieldedIndex[1992125])
                            const-val tmp[1992136]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
                            const-val call_tmp[1992138]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
                            val _locale_tmp_[1992140]:BaseLocale[91201] "dead after last mention" "temp"
                            (1992142 'move' _locale_tmp_[1992140](1992145 call _value[89981] loc[1992131]))
                            (1992147 'move' call_tmp[1992138](1992149 '_wide_get_locale' _locale_tmp_[1992140]))
                            (1992151 'move' tmp[1992136] call_tmp[1992138])
                            val rvfDerefTmp[2084923]:__serializeHelper[28086] "temp"
                            (2084926 'move' rvfDerefTmp[2084923] data[1793188])
                            val _args_foron_fn[2102114]:_class_localson_fn[2102098] "temp"
                            (2102118 'move' _args_foron_fn[2102114](2102116 'stack allocate class' _class_localson_fn[2102098]))
                            (2102120 '.=' _args_foron_fn[2102114] _0_tmp[2102101] tmp[1992136])
                            (2102124 '.=' _args_foron_fn[2102114] _1_root[2102103] root[1793208])
                            ref tmp[2102128]:string[26] "temp"
                            (2102132 'move' tmp[2102128](2102130 'set reference' localeZeroGlobal[1793090]))
                            (2102134 '.=' _args_foron_fn[2102114] _2_localeZeroGlobal[2102105] tmp[2102128])
                            (2102138 '.=' _args_foron_fn[2102114] _3_rvfDerefTmp[2102107] rvfDerefTmp[2084923])
                            (2102142 '.=' _args_foron_fn[2102114] _4_id[2102109] id[1793092])
                            (2102146 '.=' _args_foron_fn[2102114] _5__coforallCount[2102111] _coforallCount[1793348])
                            val _args_vforon_fn[2102150]:c_void_ptr[149] "temp"
                            (2102154 'move' _args_vforon_fn[2102150](2102152 'cast_to_void_star' _args_foron_fn[2102114]))
                            val _args_sizeon_fn[2102156]:int(64)[13] "temp"
                            (2102160 'move' _args_sizeon_fn[2102156](2102158 'sizeof_bundle' _class_localson_fn[2102098]))
                            on(2102235 call wrapon_fn[2102162] tmp[1992136] _args_vforon_fn[2102150] _args_sizeon_fn[2102156] _args_foron_fn[2102114])
                            {
                            }
                            label _continueLabel[1992163]
                          }
                        }
                      }
                    }
                    {
                      const-val low[1991996]:int(64)[13] "temp"
                      (1991998 'move' low[1991996](1992000 '.v' _iterator[1991889] F0_low[2027429]))
                      (1992003 '=' i[1991987] low[1991996])
                    }
                    {
                      const-val high[1992007]:int(64)[13] "temp"
                      (1992009 'move' high[1992007](1992011 '.v' _iterator[1991889] F1_high[2027433]))
                      (1992014 '<=' i[1991987] high[1992007])
                    }
                    {
                      val call_tmp[1992018]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      const-val call_tmp[1992020]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val stride[1992022]:int(64)[13] "temp"
                      (1992024 'move' stride[1992022](1992026 '.v' _iterator[1991889] F2_stride[2027437]))
                      (1992029 'move' call_tmp[1992020] stride[1992022])
                      const-val stride[1992032]:int(64)[13] "temp"
                      (1992034 'move' stride[1992032](1992036 '.v' _iterator[1991889] F2_stride[2027437]))
                      (1992039 '+=' i[1991987] stride[1992032])
                    }
                  }
                  label _endchpl_direct_pos_stride_range_iter[1992094]
                }
                (1992097 call _freeIterator[1303185] _iterator[1991889])
                label _endchpl__serialViewIter[1992099]
              }
              (1940169 call _freeIterator[1303620] _iterator[1940083])
              label _endthese[1940171]
            }
            (1940174 call _freeIterator[1304225] _iterator[1940024])
            label _endthese[1940176]
          }
          label _breakLabel[1793554]
          val error[1813828]:Error[167938] "error variable" "temp"
          (1813830 'move' error[1813828] nil[44])
          (1793562 call _waitEndCount[1350079] _coforallCount[1793348] numTasks[1793355] error[1813828])
          val errorExists[2110680]:bool[10] "temp"
          (2110685 'move' errorExists[2110680](2110682 '!=' error[1813828] nil[44]))
          if errorExists[2110680]
          {
            (1813833 call chpl_propagate_error[170472] error[1813828])
          }
          (1851985 call _endCountFree[1233860] _coforallCount[1793348])
          (1851989 call _freeIterator[1304976] _iterator[1793371])
        }
      }
      (1851992 call chpl__autoDestroy[1461594] call_tmp[1793194])
      (1851995 call chpl__autoDestroy[1461717] data[1793188])
    }
    (1793777 return _void[55])
  }
  function chpl__broadcastGlobal[1797354](const  ref arg localeZeroGlobal[1797356]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252623], const in arg id[1797358]:int(64)[13]) : void[4] "serialized broadcast function" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    {
      const-val call_tmp[1797445]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1796639] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1841565]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1796639] "temp"
      (1797453 call chpl__serialize[1796336] localeZeroGlobal[1797356] ret_tmp[1841565])
      (1841568 'move' call_tmp[1797445] ret_tmp[1841565])
      const-val data[1797454]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1796639] "dead at end of block" "const" "insert auto destroy"
      (1797456 'move' data[1797454] call_tmp[1797445])
      const-val call_tmp[1797460]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1830865]:locale[28] "temp"
      (1797465 call here[90435] ret_tmp[1830865])
      (1830868 'move' call_tmp[1797460] ret_tmp[1830865])
      const-val call_tmp[1797466]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (1797468 'move' call_tmp[1797466](1797471 call id[90518] call_tmp[1797460]))
      const-val root[1797474]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      (1797476 'move' root[1797474] call_tmp[1797466])
      {
        ref tmpIter[1797481]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287037] "dead at end of block" "maybe ref" "no copy" "reference to a const" "temp"
        (1797483 'move' tmpIter[1797481] Locales[113656])
        {
          const _coforallCount[1797614]:_EndCount(AtomicT(int(64)),int(64))[945343] "dead after last mention" "concurrently accessed" "const" "end count" "temp"
          (1797616 'move' _coforallCount[1797614](1797619 call _endCountAlloc[938818]))
          const-val numTasks[1797621]:int(64)[13] "dead at end of block" "temp"
          (1797623 'move' numTasks[1797621](1797626 call size[1562443] tmpIter[1797481]))
          (1797630 call _upEndCount[1325372] _coforallCount[1797614] numTasks[1797621])
          ref _indexOfInterest[1797635]:_ref(locale)[948844] "dead at end of block" "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1797637]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304291] "dead at end of block" "expr temp" "temp"
          (1797639 'move' _iterator[1797637](1797642 call _getIterator[1298109] tmpIter[1797481]))
          {
            val ret[1940429]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304297] "dead after last mention" "RVV" "temp"
            ref _indexOfInterest[1940431]:_ref(locale)[948844] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1940433]:_ic_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303686] "dead at end of block" "expr temp" "temp"
            val call_tmp[1940435]:[domain(1,int(64),false)] locale[1256486] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val this[1940626]:[domain(1,int(64),false)] locale[1287011] "temp"
            (1940631 'move' this[1940626](1940628 '.v' _iterator[1797637] F0_this[2021880]))
            (1940437 'move' call_tmp[1940435](1940440 call _value[1287066] this[1940626]))
            const-val call_tmp[1940442]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303692] "dead at end of block" "maybe param" "temp"
            val coerce_tmp[1940444]:[domain(1,int(64),false)] locale[1256486] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (1940446 'move' coerce_tmp[1940444] call_tmp[1940435])
            const-val default_arg_tasksPerLocale[1940449]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
            (1940451 'move' default_arg_tasksPerLocale[1940449](1940454 call these_default_tasksPerLocale[1298379] call_tmp[1940435]))
            const-val default_arg_ignoreRunning[1940456]:bool[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
            (1940458 'move' default_arg_ignoreRunning[1940456](1940461 call these_default_ignoreRunning[1298410] coerce_tmp[1940444]))
            const-val default_arg_minIndicesPerTask[1940463]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
            (1940465 'move' default_arg_minIndicesPerTask[1940463](1940468 call these_default_minIndicesPerTask[1298441] coerce_tmp[1940444]))
            const-val ret_tmp[1940470]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303692] "temp"
            (1940473 call these[1298263] coerce_tmp[1940444] default_arg_tasksPerLocale[1940449] default_arg_ignoreRunning[1940456] default_arg_minIndicesPerTask[1940463] ret_tmp[1940470])
            (1940479 'move' call_tmp[1940442] ret_tmp[1940470])
            (1940482 'move' _iterator[1940433](1940485 call _getIterator[1303701] call_tmp[1940442]))
            {
              val ret[1940488]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303692] "dead after last mention" "RVV" "temp"
              ref _indexOfInterest[1940490]:_ref(locale)[948844] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[1940492]:_ic_chpl__serialViewIter[1303436] "dead at end of block" "expr temp" "temp"
              ref call_tmp[1940494]:_ref(domain(1,int(64),false))[1250949] "dead at end of block" "maybe param" "temp"
              const-val this[1940496]:[domain(1,int(64),false)] locale[1256486] "temp"
              (1940498 'move' this[1940496](1940500 '.v' _iterator[1940433] F0_this[2023988]))
              (1940503 'move' call_tmp[1940494](1940506 call dom[1258019] this[1940496]))
              const-val call_tmp[1940508]:_ir_chpl__serialViewIter[1303442] "dead at end of block" "maybe param" "temp"
              val coerce_tmp[1940510]:domain(1,int(64),false)[1250934] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1940512 'move' coerce_tmp[1940510](1940514 'deref' call_tmp[1940494]))
              const-val ret_tmp[1940516]:_ir_chpl__serialViewIter[1303442] "temp"
              const-val this[1940518]:[domain(1,int(64),false)] locale[1256486] "temp"
              (1940520 'move' this[1940518](1940522 '.v' _iterator[1940433] F0_this[2023988]))
              (1940526 call chpl__serialViewIter[1298475] this[1940518] coerce_tmp[1940510] ret_tmp[1940516])
              (1940530 'move' call_tmp[1940508] ret_tmp[1940516])
              (1940533 'move' _iterator[1940492](1940536 call _getIterator[1303451] call_tmp[1940508]))
              {
                val ret[1992720]:_ir_chpl__serialViewIter[1303442] "dead after last mention" "RVV" "temp"
                val info[1992722]:[domain(1,int(64),false)] locale[1256486] "dead at end of block" "insert auto destroy"
                val tmp[1992724]:[domain(1,int(64),false)] locale[1256486] "dead at end of block" "expr temp" "insert auto destroy" "maybe copy elided" "maybe param" "temp"
                val tmp[1992726]:[domain(1,int(64),false)] locale[1256486] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val arr[1993147]:[domain(1,int(64),false)] locale[1256486] "temp"
                (1993152 'move' arr[1993147](1993149 '.v' _iterator[1940492] F0_arr[2025893]))
                (1992728 'move' tmp[1992726] arr[1993147])
                const-val arr[1993154]:[domain(1,int(64),false)] locale[1256486] "temp"
                (1993159 'move' arr[1993154](1993156 '.v' _iterator[1940492] F0_arr[2025893]))
                (1992731 'move' tmp[1992724] arr[1993154])
                const-val arr[1993161]:[domain(1,int(64),false)] locale[1256486] "temp"
                (1993166 'move' arr[1993161](1993163 '.v' _iterator[1940492] F0_arr[2025893]))
                (1992734 '=' info[1992722] arr[1993161])
                (1992737 'noop')
                const-val call_tmp[1992738]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                val coerce_tmp[1992740]:domain(1,int(64),false)[1250934] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                const-val viewDom[1993168]:domain(1,int(64),false)[1250934] "temp"
                (1993173 'move' viewDom[1993168](1993170 '.v' _iterator[1940492] F1_viewDom[2025897]))
                (1992742 'move' coerce_tmp[1992740] viewDom[1993168])
                const-val viewDom[1993175]:domain(1,int(64),false)[1250934] "temp"
                (1993180 'move' viewDom[1993175](1993177 '.v' _iterator[1940492] F1_viewDom[2025897]))
                (1992745 'move' call_tmp[1992738](1992748 call dsiLow[1300436] viewDom[1993175]))
                const-val call_tmp[1992750]:int(64)[13] "dead at end of block" "maybe param" "temp"
                const-val arr[1993182]:[domain(1,int(64),false)] locale[1256486] "temp"
                (1993187 'move' arr[1993182](1993184 '.v' _iterator[1940492] F0_arr[2025893]))
                (1992752 'move' call_tmp[1992750](1992755 call getDataIndex[1300695] arr[1993182] call_tmp[1992738]))
                const-val first[1992758]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                (1992760 'move' first[1992758] call_tmp[1992750])
                const-val call_tmp[1992763]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                val coerce_tmp[1992765]:domain(1,int(64),false)[1250934] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                const-val viewDom[1993189]:domain(1,int(64),false)[1250934] "temp"
                (1993194 'move' viewDom[1993189](1993191 '.v' _iterator[1940492] F1_viewDom[2025897]))
                (1992767 'move' coerce_tmp[1992765] viewDom[1993189])
                (1992770 'move' call_tmp[1992763](1992773 call dsiLow[1300436] coerce_tmp[1992765]))
                const-val call_tmp[1992775]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                (1992777 'move' call_tmp[1992775](1992780 call chpl__idxToInt[1026916] call_tmp[1992763]))
                const-val call_tmp[1992782]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                (1992784 'move' call_tmp[1992782](1992787 call +[949666] call_tmp[1992775]))
                const-val call_tmp[1992789]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                val coerce_tmp[1992791]:domain(1,int(64),false)[1250934] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                const-val viewDom[1993196]:domain(1,int(64),false)[1250934] "temp"
                (1993201 'move' viewDom[1993196](1993198 '.v' _iterator[1940492] F1_viewDom[2025897]))
                (1992793 'move' coerce_tmp[1992791] viewDom[1993196])
                (1992796 'move' call_tmp[1992789](1992799 call chpl_intToIdx[1301865] coerce_tmp[1992791] call_tmp[1992782]))
                const-val call_tmp[1992802]:int(64)[13] "dead at end of block" "maybe param" "temp"
                (1992804 'move' call_tmp[1992802](1992807 call getDataIndex[1300695] info[1992722] call_tmp[1992789]))
                const-val second[1992810]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                (1992812 'move' second[1992810] call_tmp[1992802])
                const-val call_tmp[1992815]:int(64)[13] "dead at end of block" "maybe param" "temp"
                (1992817 'move' call_tmp[1992815](1992820 call -[440416] call_tmp[1992802] call_tmp[1992750]))
                const-val step[1992823]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                (1992825 'move' step[1992823] call_tmp[1992815])
                const-val call_tmp[1992828]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                val coerce_tmp[1992830]:domain(1,int(64),false)[1250934] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                const-val viewDom[1993203]:domain(1,int(64),false)[1250934] "temp"
                (1993208 'move' viewDom[1993203](1993205 '.v' _iterator[1940492] F1_viewDom[2025897]))
                (1992832 'move' coerce_tmp[1992830] viewDom[1993203])
                (1992835 'move' call_tmp[1992828](1992838 call dsiNumIndices[1263634] coerce_tmp[1992830]))
                const-val call_tmp[1992840]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                (1992842 'move' call_tmp[1992840](1992845 call -[962226] call_tmp[1992828]))
                const-val call_tmp[1992847]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                (1992849 'move' call_tmp[1992847](1992852 call *[441828] call_tmp[1992840] call_tmp[1992815]))
                const-val call_tmp[1992855]:int(64)[13] "dead at end of block" "maybe param" "temp"
                (1992857 'move' call_tmp[1992855](1992860 call +[439636] call_tmp[1992750] call_tmp[1992847]))
                const-val last[1992863]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                (1992865 'move' last[1992863] call_tmp[1992855])
                val _indexOfInterest[1992868]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1992870]:_ic_chpl_direct_pos_stride_range_iter[1302997] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[1992872]:_ir_chpl_direct_pos_stride_range_iter[1303003] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[1992874]:_ir_chpl_direct_pos_stride_range_iter[1303003] "temp"
                (1992877 call chpl_direct_pos_stride_range_iter[1301952] call_tmp[1992750] call_tmp[1992855] call_tmp[1992815] ret_tmp[1992874])
                (1992882 'move' call_tmp[1992872] ret_tmp[1992874])
                (1992885 'move' _iterator[1992870](1992888 call _getIterator[1303012] call_tmp[1992872]))
                {
                  val ret[1992891]:_ir_chpl_direct_pos_stride_range_iter[1303003] "dead after last mention" "RVV" "temp"
                  val call_tmp[1992893]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val stride[1992895]:int(64)[13] "temp"
                  (1992897 'move' stride[1992895](1992899 '.v' _iterator[1992870] F2_stride[2027437]))
                  (1992903 call chpl_range_check_stride[1102833] stride[1992895])
                  val call_tmp[1992905]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val default_arg_first[1992907]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val low[1992909]:int(64)[13] "temp"
                  (1992911 'move' low[1992909](1992913 '.v' _iterator[1992870] F0_low[2027429]))
                  (1992916 'move' default_arg_first[1992907](1992919 call chpl_checkIfRangeIterWillOverflow_default_first[1103198] low[1992909]))
                  const-val default_arg_last[1992921]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val high[1992923]:int(64)[13] "temp"
                  (1992925 'move' high[1992923](1992927 '.v' _iterator[1992870] F1_high[2027433]))
                  (1992930 'move' default_arg_last[1992921](1992933 call chpl_checkIfRangeIterWillOverflow_default_last[1103226] high[1992923]))
                  const-val _return_tmp_[1992935]:bool[10] "dead after last mention" "temp"
                  const-val low[1992937]:int(64)[13] "temp"
                  (1992939 'move' low[1992937](1992941 '.v' _iterator[1992870] F0_low[2027429]))
                  const-val high[1992944]:int(64)[13] "temp"
                  (1992946 'move' high[1992944](1992948 '.v' _iterator[1992870] F1_high[2027433]))
                  const-val stride[1992951]:int(64)[13] "temp"
                  (1992953 'move' stride[1992951](1992955 '.v' _iterator[1992870] F2_stride[2027437]))
                  (1992958 'move' _return_tmp_[1992935](1992961 call chpl_checkIfRangeIterWillOverflow[1096076] low[1992937] high[1992944] stride[1992951] default_arg_first[1992907] default_arg_last[1992921] 1))
                  val i[1992968]:int(64)[13] "dead at end of block" "insert auto destroy"
                  val call_tmp[1992970]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (1992972 'move' i[1992968] 0)
                  CForLoop[1992975] hazard
                  {
                    const-val yret[1993023]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (1993025 'move' yret[1993023] i[1992968])
                    const-val _yieldedIndex[1993028]:int(64)[13] "temp"
                    (1993030 'move' _yieldedIndex[1993028] i[1992968])
                    {
                      const-val i[1993034]:int(64)[13] "const" "index var" "insert auto destroy"
                      (1993036 'move' i[1993034] _yieldedIndex[1993028])
                      ref yret[1993039]:_ref(locale)[948844] "dead after last mention" "YVV" "temp"
                      ref call_tmp[1993041]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
                      ref _this_tmp_[1993043]:_ref(_ddata(locale))[1255403] "dead after last mention" "temp"
                      (1993045 'move' _this_tmp_[1993043](1993048 call theData[1303250] info[1992722]))
                      val coerce_tmp[1993050]:_ddata(locale)[1255394] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (1993052 'move' coerce_tmp[1993050](1993054 'deref' _this_tmp_[1993043]))
                      (1993056 'move' call_tmp[1993041](1993059 call this[1303397] coerce_tmp[1993050] _yieldedIndex[1993028]))
                      ref _yieldedIndex[1993084]:_ref(locale)[948844] "temp"
                      (1993062 'move' _yieldedIndex[1993084] call_tmp[1993041])
                      {
                        ref elem[1993086]:_ref(locale)[948844] "index var" "insert auto destroy"
                        (1993088 'move' elem[1993086] _yieldedIndex[1993084])
                        ref yret[1993091]:_ref(locale)[948844] "dead after last mention" "YVV" "temp"
                        ref _yieldedIndex[1993093]:_ref(locale)[948844] "temp"
                        (1993095 'move' _yieldedIndex[1993093] elem[1993086])
                        {
                          ref i[1993099]:_ref(locale)[948844] "index var" "insert auto destroy"
                          (1993101 'move' i[1993099] _yieldedIndex[1993093])
                          ref yret[1993104]:_ref(locale)[948844] "dead after last mention" "YVV" "temp"
                          ref _yieldedIndex[1993106]:_ref(locale)[948844] "coforall index var" "temp"
                          (1993108 'move' _yieldedIndex[1993106] i[1993099])
                          {
                            ref loc[1993112]:_ref(locale)[948844] "coforall index var" "index var" "insert auto destroy"
                            (1993114 'move' loc[1993112] _yieldedIndex[1993106])
                            const-val tmp[1993117]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
                            const-val call_tmp[1993119]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
                            val _locale_tmp_[1993121]:BaseLocale[91201] "dead after last mention" "temp"
                            (1993123 'move' _locale_tmp_[1993121](1993126 call _value[89981] loc[1993112]))
                            (1993128 'move' call_tmp[1993119](1993130 '_wide_get_locale' _locale_tmp_[1993121]))
                            (1993132 'move' tmp[1993117] call_tmp[1993119])
                            val localeZeroGlobal_data[2084935]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1796639] "temp"
                            (2084937 call chpl__serialize[1796336] localeZeroGlobal[1797356] localeZeroGlobal_data[2084935])
                            val rvfDerefTmp[2084969]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1796639] "temp"
                            (2084972 'move' rvfDerefTmp[2084969] data[1797454])
                            val _args_foron_fn[2102386]:_class_localson_fn[2102370] "temp"
                            (2102390 'move' _args_foron_fn[2102386](2102388 'stack allocate class' _class_localson_fn[2102370]))
                            (2102392 '.=' _args_foron_fn[2102386] _0_tmp[2102373] tmp[1993117])
                            (2102396 '.=' _args_foron_fn[2102386] _1_root[2102375] root[1797474])
                            (2102400 '.=' _args_foron_fn[2102386] _2_localeZeroGlobal_data[2102377] localeZeroGlobal_data[2084935])
                            (2102404 '.=' _args_foron_fn[2102386] _3_rvfDerefTmp[2102379] rvfDerefTmp[2084969])
                            (2102408 '.=' _args_foron_fn[2102386] _4_id[2102381] id[1797358])
                            (2102412 '.=' _args_foron_fn[2102386] _5__coforallCount[2102383] _coforallCount[1797614])
                            val _args_vforon_fn[2102416]:c_void_ptr[149] "temp"
                            (2102420 'move' _args_vforon_fn[2102416](2102418 'cast_to_void_star' _args_foron_fn[2102386]))
                            val _args_sizeon_fn[2102422]:int(64)[13] "temp"
                            (2102426 'move' _args_sizeon_fn[2102422](2102424 'sizeof_bundle' _class_localson_fn[2102370]))
                            on(2102501 call wrapon_fn[2102428] tmp[1993117] _args_vforon_fn[2102416] _args_sizeon_fn[2102422] _args_foron_fn[2102386])
                            {
                            }
                            label _continueLabel[1993144]
                          }
                        }
                      }
                    }
                    {
                      const-val low[1992977]:int(64)[13] "temp"
                      (1992979 'move' low[1992977](1992981 '.v' _iterator[1992870] F0_low[2027429]))
                      (1992984 '=' i[1992968] low[1992977])
                    }
                    {
                      const-val high[1992988]:int(64)[13] "temp"
                      (1992990 'move' high[1992988](1992992 '.v' _iterator[1992870] F1_high[2027433]))
                      (1992995 '<=' i[1992968] high[1992988])
                    }
                    {
                      val call_tmp[1992999]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      const-val call_tmp[1993001]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val stride[1993003]:int(64)[13] "temp"
                      (1993005 'move' stride[1993003](1993007 '.v' _iterator[1992870] F2_stride[2027437]))
                      (1993010 'move' call_tmp[1993001] stride[1993003])
                      const-val stride[1993013]:int(64)[13] "temp"
                      (1993015 'move' stride[1993013](1993017 '.v' _iterator[1992870] F2_stride[2027437]))
                      (1993020 '+=' i[1992968] stride[1993013])
                    }
                  }
                  label _endchpl_direct_pos_stride_range_iter[1993075]
                }
                (1993078 call _freeIterator[1303185] _iterator[1992870])
                label _endchpl__serialViewIter[1993080]
              }
              (1940578 call _freeIterator[1303620] _iterator[1940492])
              label _endthese[1940580]
            }
            (1940583 call _freeIterator[1304225] _iterator[1940433])
            label _endthese[1940585]
          }
          label _breakLabel[1797820]
          val error[1813854]:Error[167938] "error variable" "temp"
          (1813856 'move' error[1813854] nil[44])
          (1797828 call _waitEndCount[1350079] _coforallCount[1797614] numTasks[1797621] error[1813854])
          val errorExists[2110696]:bool[10] "temp"
          (2110701 'move' errorExists[2110696](2110698 '!=' error[1813854] nil[44]))
          if errorExists[2110696]
          {
            (1813859 call chpl_propagate_error[170472] error[1813854])
          }
          (1852021 call _endCountFree[1233860] _coforallCount[1797614])
          (1852025 call _freeIterator[1304976] _iterator[1797637])
        }
      }
      (1852028 call chpl__autoDestroy[1461594] call_tmp[1797460])
      (1852031 call chpl__autoDestroy[1797093] data[1797454])
    }
    (1798043 return _void[55])
  }
  function chpl__destroyBroadcastedGlobal[1793785](ref arg localeZeroGlobal[1793787]:_ref(string)[937939], const in arg id[1793789]:int(64)[13]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val globalType[1793799]:string[26] "dead at end of block" "insert auto destroy" "type variable"
    const-val call_tmp[1793807]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1830853]:locale[28] "temp"
    (1793812 call here[90435] ret_tmp[1830853])
    (1830856 'move' call_tmp[1793807] ret_tmp[1830853])
    const-val call_tmp[1793813]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1793815 'move' call_tmp[1793813](1793818 call id[90518] call_tmp[1793807]))
    const-val root[1793821]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1793823 'move' root[1793821] call_tmp[1793813])
    {
      ref tmpIter[1793828]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287037] "dead at end of block" "maybe ref" "no copy" "reference to a const" "temp"
      (1793830 'move' tmpIter[1793828] Locales[113656])
      {
        const _coforallCount[1793961]:_EndCount(AtomicT(int(64)),int(64))[945343] "dead after last mention" "concurrently accessed" "const" "end count" "temp"
        (1793963 'move' _coforallCount[1793961](1793966 call _endCountAlloc[938818]))
        const-val numTasks[1793968]:int(64)[13] "dead at end of block" "temp"
        (1793970 'move' numTasks[1793968](1793973 call size[1562443] tmpIter[1793828]))
        (1793977 call _upEndCount[1325372] _coforallCount[1793961] numTasks[1793968])
        ref _indexOfInterest[1793982]:_ref(locale)[948844] "dead at end of block" "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1793984]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304291] "dead at end of block" "expr temp" "temp"
        (1793986 'move' _iterator[1793984](1793989 call _getIterator[1298109] tmpIter[1793828]))
        {
          val ret[1940225]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304297] "dead after last mention" "RVV" "temp"
          ref _indexOfInterest[1940227]:_ref(locale)[948844] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1940229]:_ic_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303686] "dead at end of block" "expr temp" "temp"
          val call_tmp[1940231]:[domain(1,int(64),false)] locale[1256486] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val this[1940421]:[domain(1,int(64),false)] locale[1287011] "temp"
          (1940426 'move' this[1940421](1940423 '.v' _iterator[1793984] F0_this[2021880]))
          (1940233 'move' call_tmp[1940231](1940236 call _value[1287066] this[1940421]))
          const-val call_tmp[1940238]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303692] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[1940240]:[domain(1,int(64),false)] locale[1256486] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1940242 'move' coerce_tmp[1940240] call_tmp[1940231])
          const-val default_arg_tasksPerLocale[1940245]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
          (1940247 'move' default_arg_tasksPerLocale[1940245](1940250 call these_default_tasksPerLocale[1298379] call_tmp[1940231]))
          const-val default_arg_ignoreRunning[1940252]:bool[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
          (1940254 'move' default_arg_ignoreRunning[1940252](1940257 call these_default_ignoreRunning[1298410] coerce_tmp[1940240]))
          const-val default_arg_minIndicesPerTask[1940259]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
          (1940261 'move' default_arg_minIndicesPerTask[1940259](1940264 call these_default_minIndicesPerTask[1298441] coerce_tmp[1940240]))
          const-val ret_tmp[1940266]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303692] "temp"
          (1940269 call these[1298263] coerce_tmp[1940240] default_arg_tasksPerLocale[1940245] default_arg_ignoreRunning[1940252] default_arg_minIndicesPerTask[1940259] ret_tmp[1940266])
          (1940275 'move' call_tmp[1940238] ret_tmp[1940266])
          (1940278 'move' _iterator[1940229](1940281 call _getIterator[1303701] call_tmp[1940238]))
          {
            val ret[1940284]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303692] "dead after last mention" "RVV" "temp"
            ref _indexOfInterest[1940286]:_ref(locale)[948844] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1940288]:_ic_chpl__serialViewIter[1303436] "dead at end of block" "expr temp" "temp"
            ref call_tmp[1940290]:_ref(domain(1,int(64),false))[1250949] "dead at end of block" "maybe param" "temp"
            const-val this[1940292]:[domain(1,int(64),false)] locale[1256486] "temp"
            (1940294 'move' this[1940292](1940296 '.v' _iterator[1940229] F0_this[2023988]))
            (1940299 'move' call_tmp[1940290](1940302 call dom[1258019] this[1940292]))
            const-val call_tmp[1940304]:_ir_chpl__serialViewIter[1303442] "dead at end of block" "maybe param" "temp"
            val coerce_tmp[1940306]:domain(1,int(64),false)[1250934] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (1940308 'move' coerce_tmp[1940306](1940310 'deref' call_tmp[1940290]))
            const-val ret_tmp[1940312]:_ir_chpl__serialViewIter[1303442] "temp"
            const-val this[1940314]:[domain(1,int(64),false)] locale[1256486] "temp"
            (1940316 'move' this[1940314](1940318 '.v' _iterator[1940229] F0_this[2023988]))
            (1940322 call chpl__serialViewIter[1298475] this[1940314] coerce_tmp[1940306] ret_tmp[1940312])
            (1940326 'move' call_tmp[1940304] ret_tmp[1940312])
            (1940329 'move' _iterator[1940288](1940332 call _getIterator[1303451] call_tmp[1940304]))
            {
              val ret[1992230]:_ir_chpl__serialViewIter[1303442] "dead after last mention" "RVV" "temp"
              val info[1992232]:[domain(1,int(64),false)] locale[1256486] "dead at end of block" "insert auto destroy"
              val tmp[1992234]:[domain(1,int(64),false)] locale[1256486] "dead at end of block" "expr temp" "insert auto destroy" "maybe copy elided" "maybe param" "temp"
              val tmp[1992236]:[domain(1,int(64),false)] locale[1256486] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val arr[1992656]:[domain(1,int(64),false)] locale[1256486] "temp"
              (1992661 'move' arr[1992656](1992658 '.v' _iterator[1940288] F0_arr[2025893]))
              (1992238 'move' tmp[1992236] arr[1992656])
              const-val arr[1992663]:[domain(1,int(64),false)] locale[1256486] "temp"
              (1992668 'move' arr[1992663](1992665 '.v' _iterator[1940288] F0_arr[2025893]))
              (1992241 'move' tmp[1992234] arr[1992663])
              const-val arr[1992670]:[domain(1,int(64),false)] locale[1256486] "temp"
              (1992675 'move' arr[1992670](1992672 '.v' _iterator[1940288] F0_arr[2025893]))
              (1992244 '=' info[1992232] arr[1992670])
              (1992247 'noop')
              const-val call_tmp[1992248]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              val coerce_tmp[1992250]:domain(1,int(64),false)[1250934] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              const-val viewDom[1992677]:domain(1,int(64),false)[1250934] "temp"
              (1992682 'move' viewDom[1992677](1992679 '.v' _iterator[1940288] F1_viewDom[2025897]))
              (1992252 'move' coerce_tmp[1992250] viewDom[1992677])
              const-val viewDom[1992684]:domain(1,int(64),false)[1250934] "temp"
              (1992689 'move' viewDom[1992684](1992686 '.v' _iterator[1940288] F1_viewDom[2025897]))
              (1992255 'move' call_tmp[1992248](1992258 call dsiLow[1300436] viewDom[1992684]))
              const-val call_tmp[1992260]:int(64)[13] "dead at end of block" "maybe param" "temp"
              const-val arr[1992691]:[domain(1,int(64),false)] locale[1256486] "temp"
              (1992696 'move' arr[1992691](1992693 '.v' _iterator[1940288] F0_arr[2025893]))
              (1992262 'move' call_tmp[1992260](1992265 call getDataIndex[1300695] arr[1992691] call_tmp[1992248]))
              const-val first[1992268]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              (1992270 'move' first[1992268] call_tmp[1992260])
              const-val call_tmp[1992273]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              val coerce_tmp[1992275]:domain(1,int(64),false)[1250934] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              const-val viewDom[1992698]:domain(1,int(64),false)[1250934] "temp"
              (1992703 'move' viewDom[1992698](1992700 '.v' _iterator[1940288] F1_viewDom[2025897]))
              (1992277 'move' coerce_tmp[1992275] viewDom[1992698])
              (1992280 'move' call_tmp[1992273](1992283 call dsiLow[1300436] coerce_tmp[1992275]))
              const-val call_tmp[1992285]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              (1992287 'move' call_tmp[1992285](1992290 call chpl__idxToInt[1026916] call_tmp[1992273]))
              const-val call_tmp[1992292]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              (1992294 'move' call_tmp[1992292](1992297 call +[949666] call_tmp[1992285]))
              const-val call_tmp[1992299]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              val coerce_tmp[1992301]:domain(1,int(64),false)[1250934] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              const-val viewDom[1992705]:domain(1,int(64),false)[1250934] "temp"
              (1992710 'move' viewDom[1992705](1992707 '.v' _iterator[1940288] F1_viewDom[2025897]))
              (1992303 'move' coerce_tmp[1992301] viewDom[1992705])
              (1992306 'move' call_tmp[1992299](1992309 call chpl_intToIdx[1301865] coerce_tmp[1992301] call_tmp[1992292]))
              const-val call_tmp[1992312]:int(64)[13] "dead at end of block" "maybe param" "temp"
              (1992314 'move' call_tmp[1992312](1992317 call getDataIndex[1300695] info[1992232] call_tmp[1992299]))
              const-val second[1992320]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              (1992322 'move' second[1992320] call_tmp[1992312])
              const-val call_tmp[1992325]:int(64)[13] "dead at end of block" "maybe param" "temp"
              (1992327 'move' call_tmp[1992325](1992330 call -[440416] call_tmp[1992312] call_tmp[1992260]))
              const-val step[1992333]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              (1992335 'move' step[1992333] call_tmp[1992325])
              const-val call_tmp[1992338]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              val coerce_tmp[1992340]:domain(1,int(64),false)[1250934] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              const-val viewDom[1992712]:domain(1,int(64),false)[1250934] "temp"
              (1992717 'move' viewDom[1992712](1992714 '.v' _iterator[1940288] F1_viewDom[2025897]))
              (1992342 'move' coerce_tmp[1992340] viewDom[1992712])
              (1992345 'move' call_tmp[1992338](1992348 call dsiNumIndices[1263634] coerce_tmp[1992340]))
              const-val call_tmp[1992350]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              (1992352 'move' call_tmp[1992350](1992355 call -[962226] call_tmp[1992338]))
              const-val call_tmp[1992357]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              (1992359 'move' call_tmp[1992357](1992362 call *[441828] call_tmp[1992350] call_tmp[1992325]))
              const-val call_tmp[1992365]:int(64)[13] "dead at end of block" "maybe param" "temp"
              (1992367 'move' call_tmp[1992365](1992370 call +[439636] call_tmp[1992260] call_tmp[1992357]))
              const-val last[1992373]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              (1992375 'move' last[1992373] call_tmp[1992365])
              val _indexOfInterest[1992378]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[1992380]:_ic_chpl_direct_pos_stride_range_iter[1302997] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[1992382]:_ir_chpl_direct_pos_stride_range_iter[1303003] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[1992384]:_ir_chpl_direct_pos_stride_range_iter[1303003] "temp"
              (1992387 call chpl_direct_pos_stride_range_iter[1301952] call_tmp[1992260] call_tmp[1992365] call_tmp[1992325] ret_tmp[1992384])
              (1992392 'move' call_tmp[1992382] ret_tmp[1992384])
              (1992395 'move' _iterator[1992380](1992398 call _getIterator[1303012] call_tmp[1992382]))
              {
                val ret[1992401]:_ir_chpl_direct_pos_stride_range_iter[1303003] "dead after last mention" "RVV" "temp"
                val call_tmp[1992403]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val stride[1992405]:int(64)[13] "temp"
                (1992407 'move' stride[1992405](1992409 '.v' _iterator[1992380] F2_stride[2027437]))
                (1992413 call chpl_range_check_stride[1102833] stride[1992405])
                val call_tmp[1992415]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val default_arg_first[1992417]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val low[1992419]:int(64)[13] "temp"
                (1992421 'move' low[1992419](1992423 '.v' _iterator[1992380] F0_low[2027429]))
                (1992426 'move' default_arg_first[1992417](1992429 call chpl_checkIfRangeIterWillOverflow_default_first[1103198] low[1992419]))
                const-val default_arg_last[1992431]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val high[1992433]:int(64)[13] "temp"
                (1992435 'move' high[1992433](1992437 '.v' _iterator[1992380] F1_high[2027433]))
                (1992440 'move' default_arg_last[1992431](1992443 call chpl_checkIfRangeIterWillOverflow_default_last[1103226] high[1992433]))
                const-val _return_tmp_[1992445]:bool[10] "dead after last mention" "temp"
                const-val low[1992447]:int(64)[13] "temp"
                (1992449 'move' low[1992447](1992451 '.v' _iterator[1992380] F0_low[2027429]))
                const-val high[1992454]:int(64)[13] "temp"
                (1992456 'move' high[1992454](1992458 '.v' _iterator[1992380] F1_high[2027433]))
                const-val stride[1992461]:int(64)[13] "temp"
                (1992463 'move' stride[1992461](1992465 '.v' _iterator[1992380] F2_stride[2027437]))
                (1992468 'move' _return_tmp_[1992445](1992471 call chpl_checkIfRangeIterWillOverflow[1096076] low[1992447] high[1992454] stride[1992461] default_arg_first[1992417] default_arg_last[1992431] 1))
                val i[1992478]:int(64)[13] "dead at end of block" "insert auto destroy"
                val call_tmp[1992480]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1992482 'move' i[1992478] 0)
                CForLoop[1992485] hazard
                {
                  const-val yret[1992533]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (1992535 'move' yret[1992533] i[1992478])
                  const-val _yieldedIndex[1992538]:int(64)[13] "temp"
                  (1992540 'move' _yieldedIndex[1992538] i[1992478])
                  {
                    const-val i[1992544]:int(64)[13] "const" "index var" "insert auto destroy"
                    (1992546 'move' i[1992544] _yieldedIndex[1992538])
                    ref yret[1992549]:_ref(locale)[948844] "dead after last mention" "YVV" "temp"
                    ref call_tmp[1992551]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
                    ref _this_tmp_[1992553]:_ref(_ddata(locale))[1255403] "dead after last mention" "temp"
                    (1992555 'move' _this_tmp_[1992553](1992558 call theData[1303250] info[1992232]))
                    val coerce_tmp[1992560]:_ddata(locale)[1255394] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1992562 'move' coerce_tmp[1992560](1992564 'deref' _this_tmp_[1992553]))
                    (1992566 'move' call_tmp[1992551](1992569 call this[1303397] coerce_tmp[1992560] _yieldedIndex[1992538]))
                    ref _yieldedIndex[1992594]:_ref(locale)[948844] "temp"
                    (1992572 'move' _yieldedIndex[1992594] call_tmp[1992551])
                    {
                      ref elem[1992596]:_ref(locale)[948844] "index var" "insert auto destroy"
                      (1992598 'move' elem[1992596] _yieldedIndex[1992594])
                      ref yret[1992601]:_ref(locale)[948844] "dead after last mention" "YVV" "temp"
                      ref _yieldedIndex[1992603]:_ref(locale)[948844] "temp"
                      (1992605 'move' _yieldedIndex[1992603] elem[1992596])
                      {
                        ref i[1992609]:_ref(locale)[948844] "index var" "insert auto destroy"
                        (1992611 'move' i[1992609] _yieldedIndex[1992603])
                        ref yret[1992614]:_ref(locale)[948844] "dead after last mention" "YVV" "temp"
                        ref _yieldedIndex[1992616]:_ref(locale)[948844] "coforall index var" "temp"
                        (1992618 'move' _yieldedIndex[1992616] i[1992609])
                        {
                          ref loc[1992622]:_ref(locale)[948844] "coforall index var" "index var" "insert auto destroy"
                          (1992624 'move' loc[1992622] _yieldedIndex[1992616])
                          const-val tmp[1992627]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
                          const-val call_tmp[1992629]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
                          val _locale_tmp_[1992631]:BaseLocale[91201] "dead after last mention" "temp"
                          (1992633 'move' _locale_tmp_[1992631](1992636 call _value[89981] loc[1992622]))
                          (1992638 'move' call_tmp[1992629](1992640 '_wide_get_locale' _locale_tmp_[1992631]))
                          (1992642 'move' tmp[1992627] call_tmp[1992629])
                          val _args_foron_fn[2102255]:_class_localson_fn[2102241] "temp"
                          (2102259 'move' _args_foron_fn[2102255](2102257 'stack allocate class' _class_localson_fn[2102241]))
                          (2102261 '.=' _args_foron_fn[2102255] _0_tmp[2102244] tmp[1992627])
                          (2102265 '.=' _args_foron_fn[2102255] _1_root[2102246] root[1793821])
                          (2102269 '.=' _args_foron_fn[2102255] _2_id[2102248] id[1793789])
                          ref tmp[2102273]:string[26] "temp"
                          (2102277 'move' tmp[2102273](2102275 'set reference' globalType[1793799]))
                          (2102279 '.=' _args_foron_fn[2102255] _3_globalType[2102250] tmp[2102273])
                          (2102283 '.=' _args_foron_fn[2102255] _4__coforallCount[2102252] _coforallCount[1793961])
                          val _args_vforon_fn[2102287]:c_void_ptr[149] "temp"
                          (2102291 'move' _args_vforon_fn[2102287](2102289 'cast_to_void_star' _args_foron_fn[2102255]))
                          val _args_sizeon_fn[2102293]:int(64)[13] "temp"
                          (2102297 'move' _args_sizeon_fn[2102293](2102295 'sizeof_bundle' _class_localson_fn[2102241]))
                          on(2102364 call wrapon_fn[2102299] tmp[1992627] _args_vforon_fn[2102287] _args_sizeon_fn[2102293] _args_foron_fn[2102255])
                          {
                          }
                          label _continueLabel[1992653]
                        }
                      }
                    }
                  }
                  {
                    const-val low[1992487]:int(64)[13] "temp"
                    (1992489 'move' low[1992487](1992491 '.v' _iterator[1992380] F0_low[2027429]))
                    (1992494 '=' i[1992478] low[1992487])
                  }
                  {
                    const-val high[1992498]:int(64)[13] "temp"
                    (1992500 'move' high[1992498](1992502 '.v' _iterator[1992380] F1_high[2027433]))
                    (1992505 '<=' i[1992478] high[1992498])
                  }
                  {
                    val call_tmp[1992509]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    const-val call_tmp[1992511]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val stride[1992513]:int(64)[13] "temp"
                    (1992515 'move' stride[1992513](1992517 '.v' _iterator[1992380] F2_stride[2027437]))
                    (1992520 'move' call_tmp[1992511] stride[1992513])
                    const-val stride[1992523]:int(64)[13] "temp"
                    (1992525 'move' stride[1992523](1992527 '.v' _iterator[1992380] F2_stride[2027437]))
                    (1992530 '+=' i[1992478] stride[1992523])
                  }
                }
                label _endchpl_direct_pos_stride_range_iter[1992585]
              }
              (1992588 call _freeIterator[1303185] _iterator[1992380])
              label _endchpl__serialViewIter[1992590]
            }
            (1940374 call _freeIterator[1303620] _iterator[1940288])
            label _endthese[1940376]
          }
          (1940379 call _freeIterator[1304225] _iterator[1940229])
          label _endthese[1940381]
        }
        label _breakLabel[1794139]
        val error[1813841]:Error[167938] "error variable" "temp"
        (1813843 'move' error[1813841] nil[44])
        (1794147 call _waitEndCount[1350079] _coforallCount[1793961] numTasks[1793968] error[1813841])
        val errorExists[2110688]:bool[10] "temp"
        (2110693 'move' errorExists[2110688](2110690 '!=' error[1813841] nil[44]))
        if errorExists[2110688]
        {
          (1813846 call chpl_propagate_error[170472] error[1813841])
        }
        (1852005 call _endCountFree[1233860] _coforallCount[1793961])
        (1852009 call _freeIterator[1304976] _iterator[1793984])
      }
    }
    (1852011 call chpl__autoDestroy[1461594] call_tmp[1793807])
    (1794333 return _void[55])
  }
  function chpl__destroyBroadcastedGlobal[1798051](const  ref arg localeZeroGlobal[1798053]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252623], const in arg id[1798055]:int(64)[13]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val globalType[1798065]:_RuntimeTypeInfo[1253673] "dead at end of block" "insert auto destroy"
    (1798069 'move' globalType[1798065](1798816 call chpl__convertValueToRuntimeType[1460263] localeZeroGlobal[1798053]))
    const-val call_tmp[1798073]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1830877]:locale[28] "temp"
    (1798078 call here[90435] ret_tmp[1830877])
    (1830880 'move' call_tmp[1798073] ret_tmp[1830877])
    const-val call_tmp[1798079]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1798081 'move' call_tmp[1798079](1798084 call id[90518] call_tmp[1798073]))
    const-val root[1798087]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1798089 'move' root[1798087] call_tmp[1798079])
    {
      ref tmpIter[1798094]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287037] "dead at end of block" "maybe ref" "no copy" "reference to a const" "temp"
      (1798096 'move' tmpIter[1798094] Locales[113656])
      {
        const _coforallCount[1798227]:_EndCount(AtomicT(int(64)),int(64))[945343] "dead after last mention" "concurrently accessed" "const" "end count" "temp"
        (1798229 'move' _coforallCount[1798227](1798232 call _endCountAlloc[938818]))
        const-val numTasks[1798234]:int(64)[13] "dead at end of block" "temp"
        (1798236 'move' numTasks[1798234](1798239 call size[1562443] tmpIter[1798094]))
        (1798243 call _upEndCount[1325372] _coforallCount[1798227] numTasks[1798234])
        ref _indexOfInterest[1798248]:_ref(locale)[948844] "dead at end of block" "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1798250]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304291] "dead at end of block" "expr temp" "temp"
        (1798252 'move' _iterator[1798250](1798255 call _getIterator[1298109] tmpIter[1798094]))
        {
          val ret[1940634]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304297] "dead after last mention" "RVV" "temp"
          ref _indexOfInterest[1940636]:_ref(locale)[948844] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1940638]:_ic_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303686] "dead at end of block" "expr temp" "temp"
          val call_tmp[1940640]:[domain(1,int(64),false)] locale[1256486] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val this[1940830]:[domain(1,int(64),false)] locale[1287011] "temp"
          (1940835 'move' this[1940830](1940832 '.v' _iterator[1798250] F0_this[2021880]))
          (1940642 'move' call_tmp[1940640](1940645 call _value[1287066] this[1940830]))
          const-val call_tmp[1940647]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303692] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[1940649]:[domain(1,int(64),false)] locale[1256486] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1940651 'move' coerce_tmp[1940649] call_tmp[1940640])
          const-val default_arg_tasksPerLocale[1940654]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
          (1940656 'move' default_arg_tasksPerLocale[1940654](1940659 call these_default_tasksPerLocale[1298379] call_tmp[1940640]))
          const-val default_arg_ignoreRunning[1940661]:bool[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
          (1940663 'move' default_arg_ignoreRunning[1940661](1940666 call these_default_ignoreRunning[1298410] coerce_tmp[1940649]))
          const-val default_arg_minIndicesPerTask[1940668]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
          (1940670 'move' default_arg_minIndicesPerTask[1940668](1940673 call these_default_minIndicesPerTask[1298441] coerce_tmp[1940649]))
          const-val ret_tmp[1940675]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303692] "temp"
          (1940678 call these[1298263] coerce_tmp[1940649] default_arg_tasksPerLocale[1940654] default_arg_ignoreRunning[1940661] default_arg_minIndicesPerTask[1940668] ret_tmp[1940675])
          (1940684 'move' call_tmp[1940647] ret_tmp[1940675])
          (1940687 'move' _iterator[1940638](1940690 call _getIterator[1303701] call_tmp[1940647]))
          {
            val ret[1940693]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303692] "dead after last mention" "RVV" "temp"
            ref _indexOfInterest[1940695]:_ref(locale)[948844] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1940697]:_ic_chpl__serialViewIter[1303436] "dead at end of block" "expr temp" "temp"
            ref call_tmp[1940699]:_ref(domain(1,int(64),false))[1250949] "dead at end of block" "maybe param" "temp"
            const-val this[1940701]:[domain(1,int(64),false)] locale[1256486] "temp"
            (1940703 'move' this[1940701](1940705 '.v' _iterator[1940638] F0_this[2023988]))
            (1940708 'move' call_tmp[1940699](1940711 call dom[1258019] this[1940701]))
            const-val call_tmp[1940713]:_ir_chpl__serialViewIter[1303442] "dead at end of block" "maybe param" "temp"
            val coerce_tmp[1940715]:domain(1,int(64),false)[1250934] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (1940717 'move' coerce_tmp[1940715](1940719 'deref' call_tmp[1940699]))
            const-val ret_tmp[1940721]:_ir_chpl__serialViewIter[1303442] "temp"
            const-val this[1940723]:[domain(1,int(64),false)] locale[1256486] "temp"
            (1940725 'move' this[1940723](1940727 '.v' _iterator[1940638] F0_this[2023988]))
            (1940731 call chpl__serialViewIter[1298475] this[1940723] coerce_tmp[1940715] ret_tmp[1940721])
            (1940735 'move' call_tmp[1940713] ret_tmp[1940721])
            (1940738 'move' _iterator[1940697](1940741 call _getIterator[1303451] call_tmp[1940713]))
            {
              val ret[1993211]:_ir_chpl__serialViewIter[1303442] "dead after last mention" "RVV" "temp"
              val info[1993213]:[domain(1,int(64),false)] locale[1256486] "dead at end of block" "insert auto destroy"
              val tmp[1993215]:[domain(1,int(64),false)] locale[1256486] "dead at end of block" "expr temp" "insert auto destroy" "maybe copy elided" "maybe param" "temp"
              val tmp[1993217]:[domain(1,int(64),false)] locale[1256486] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val arr[1993637]:[domain(1,int(64),false)] locale[1256486] "temp"
              (1993642 'move' arr[1993637](1993639 '.v' _iterator[1940697] F0_arr[2025893]))
              (1993219 'move' tmp[1993217] arr[1993637])
              const-val arr[1993644]:[domain(1,int(64),false)] locale[1256486] "temp"
              (1993649 'move' arr[1993644](1993646 '.v' _iterator[1940697] F0_arr[2025893]))
              (1993222 'move' tmp[1993215] arr[1993644])
              const-val arr[1993651]:[domain(1,int(64),false)] locale[1256486] "temp"
              (1993656 'move' arr[1993651](1993653 '.v' _iterator[1940697] F0_arr[2025893]))
              (1993225 '=' info[1993213] arr[1993651])
              (1993228 'noop')
              const-val call_tmp[1993229]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              val coerce_tmp[1993231]:domain(1,int(64),false)[1250934] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              const-val viewDom[1993658]:domain(1,int(64),false)[1250934] "temp"
              (1993663 'move' viewDom[1993658](1993660 '.v' _iterator[1940697] F1_viewDom[2025897]))
              (1993233 'move' coerce_tmp[1993231] viewDom[1993658])
              const-val viewDom[1993665]:domain(1,int(64),false)[1250934] "temp"
              (1993670 'move' viewDom[1993665](1993667 '.v' _iterator[1940697] F1_viewDom[2025897]))
              (1993236 'move' call_tmp[1993229](1993239 call dsiLow[1300436] viewDom[1993665]))
              const-val call_tmp[1993241]:int(64)[13] "dead at end of block" "maybe param" "temp"
              const-val arr[1993672]:[domain(1,int(64),false)] locale[1256486] "temp"
              (1993677 'move' arr[1993672](1993674 '.v' _iterator[1940697] F0_arr[2025893]))
              (1993243 'move' call_tmp[1993241](1993246 call getDataIndex[1300695] arr[1993672] call_tmp[1993229]))
              const-val first[1993249]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              (1993251 'move' first[1993249] call_tmp[1993241])
              const-val call_tmp[1993254]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              val coerce_tmp[1993256]:domain(1,int(64),false)[1250934] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              const-val viewDom[1993679]:domain(1,int(64),false)[1250934] "temp"
              (1993684 'move' viewDom[1993679](1993681 '.v' _iterator[1940697] F1_viewDom[2025897]))
              (1993258 'move' coerce_tmp[1993256] viewDom[1993679])
              (1993261 'move' call_tmp[1993254](1993264 call dsiLow[1300436] coerce_tmp[1993256]))
              const-val call_tmp[1993266]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              (1993268 'move' call_tmp[1993266](1993271 call chpl__idxToInt[1026916] call_tmp[1993254]))
              const-val call_tmp[1993273]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              (1993275 'move' call_tmp[1993273](1993278 call +[949666] call_tmp[1993266]))
              const-val call_tmp[1993280]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              val coerce_tmp[1993282]:domain(1,int(64),false)[1250934] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              const-val viewDom[1993686]:domain(1,int(64),false)[1250934] "temp"
              (1993691 'move' viewDom[1993686](1993688 '.v' _iterator[1940697] F1_viewDom[2025897]))
              (1993284 'move' coerce_tmp[1993282] viewDom[1993686])
              (1993287 'move' call_tmp[1993280](1993290 call chpl_intToIdx[1301865] coerce_tmp[1993282] call_tmp[1993273]))
              const-val call_tmp[1993293]:int(64)[13] "dead at end of block" "maybe param" "temp"
              (1993295 'move' call_tmp[1993293](1993298 call getDataIndex[1300695] info[1993213] call_tmp[1993280]))
              const-val second[1993301]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              (1993303 'move' second[1993301] call_tmp[1993293])
              const-val call_tmp[1993306]:int(64)[13] "dead at end of block" "maybe param" "temp"
              (1993308 'move' call_tmp[1993306](1993311 call -[440416] call_tmp[1993293] call_tmp[1993241]))
              const-val step[1993314]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              (1993316 'move' step[1993314] call_tmp[1993306])
              const-val call_tmp[1993319]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              val coerce_tmp[1993321]:domain(1,int(64),false)[1250934] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              const-val viewDom[1993693]:domain(1,int(64),false)[1250934] "temp"
              (1993698 'move' viewDom[1993693](1993695 '.v' _iterator[1940697] F1_viewDom[2025897]))
              (1993323 'move' coerce_tmp[1993321] viewDom[1993693])
              (1993326 'move' call_tmp[1993319](1993329 call dsiNumIndices[1263634] coerce_tmp[1993321]))
              const-val call_tmp[1993331]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              (1993333 'move' call_tmp[1993331](1993336 call -[962226] call_tmp[1993319]))
              const-val call_tmp[1993338]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              (1993340 'move' call_tmp[1993338](1993343 call *[441828] call_tmp[1993331] call_tmp[1993306]))
              const-val call_tmp[1993346]:int(64)[13] "dead at end of block" "maybe param" "temp"
              (1993348 'move' call_tmp[1993346](1993351 call +[439636] call_tmp[1993241] call_tmp[1993338]))
              const-val last[1993354]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              (1993356 'move' last[1993354] call_tmp[1993346])
              val _indexOfInterest[1993359]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[1993361]:_ic_chpl_direct_pos_stride_range_iter[1302997] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[1993363]:_ir_chpl_direct_pos_stride_range_iter[1303003] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[1993365]:_ir_chpl_direct_pos_stride_range_iter[1303003] "temp"
              (1993368 call chpl_direct_pos_stride_range_iter[1301952] call_tmp[1993241] call_tmp[1993346] call_tmp[1993306] ret_tmp[1993365])
              (1993373 'move' call_tmp[1993363] ret_tmp[1993365])
              (1993376 'move' _iterator[1993361](1993379 call _getIterator[1303012] call_tmp[1993363]))
              {
                val ret[1993382]:_ir_chpl_direct_pos_stride_range_iter[1303003] "dead after last mention" "RVV" "temp"
                val call_tmp[1993384]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val stride[1993386]:int(64)[13] "temp"
                (1993388 'move' stride[1993386](1993390 '.v' _iterator[1993361] F2_stride[2027437]))
                (1993394 call chpl_range_check_stride[1102833] stride[1993386])
                val call_tmp[1993396]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val default_arg_first[1993398]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val low[1993400]:int(64)[13] "temp"
                (1993402 'move' low[1993400](1993404 '.v' _iterator[1993361] F0_low[2027429]))
                (1993407 'move' default_arg_first[1993398](1993410 call chpl_checkIfRangeIterWillOverflow_default_first[1103198] low[1993400]))
                const-val default_arg_last[1993412]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val high[1993414]:int(64)[13] "temp"
                (1993416 'move' high[1993414](1993418 '.v' _iterator[1993361] F1_high[2027433]))
                (1993421 'move' default_arg_last[1993412](1993424 call chpl_checkIfRangeIterWillOverflow_default_last[1103226] high[1993414]))
                const-val _return_tmp_[1993426]:bool[10] "dead after last mention" "temp"
                const-val low[1993428]:int(64)[13] "temp"
                (1993430 'move' low[1993428](1993432 '.v' _iterator[1993361] F0_low[2027429]))
                const-val high[1993435]:int(64)[13] "temp"
                (1993437 'move' high[1993435](1993439 '.v' _iterator[1993361] F1_high[2027433]))
                const-val stride[1993442]:int(64)[13] "temp"
                (1993444 'move' stride[1993442](1993446 '.v' _iterator[1993361] F2_stride[2027437]))
                (1993449 'move' _return_tmp_[1993426](1993452 call chpl_checkIfRangeIterWillOverflow[1096076] low[1993428] high[1993435] stride[1993442] default_arg_first[1993398] default_arg_last[1993412] 1))
                val i[1993459]:int(64)[13] "dead at end of block" "insert auto destroy"
                val call_tmp[1993461]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1993463 'move' i[1993459] 0)
                CForLoop[1993466] hazard
                {
                  const-val yret[1993514]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (1993516 'move' yret[1993514] i[1993459])
                  const-val _yieldedIndex[1993519]:int(64)[13] "temp"
                  (1993521 'move' _yieldedIndex[1993519] i[1993459])
                  {
                    const-val i[1993525]:int(64)[13] "const" "index var" "insert auto destroy"
                    (1993527 'move' i[1993525] _yieldedIndex[1993519])
                    ref yret[1993530]:_ref(locale)[948844] "dead after last mention" "YVV" "temp"
                    ref call_tmp[1993532]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
                    ref _this_tmp_[1993534]:_ref(_ddata(locale))[1255403] "dead after last mention" "temp"
                    (1993536 'move' _this_tmp_[1993534](1993539 call theData[1303250] info[1993213]))
                    val coerce_tmp[1993541]:_ddata(locale)[1255394] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1993543 'move' coerce_tmp[1993541](1993545 'deref' _this_tmp_[1993534]))
                    (1993547 'move' call_tmp[1993532](1993550 call this[1303397] coerce_tmp[1993541] _yieldedIndex[1993519]))
                    ref _yieldedIndex[1993575]:_ref(locale)[948844] "temp"
                    (1993553 'move' _yieldedIndex[1993575] call_tmp[1993532])
                    {
                      ref elem[1993577]:_ref(locale)[948844] "index var" "insert auto destroy"
                      (1993579 'move' elem[1993577] _yieldedIndex[1993575])
                      ref yret[1993582]:_ref(locale)[948844] "dead after last mention" "YVV" "temp"
                      ref _yieldedIndex[1993584]:_ref(locale)[948844] "temp"
                      (1993586 'move' _yieldedIndex[1993584] elem[1993577])
                      {
                        ref i[1993590]:_ref(locale)[948844] "index var" "insert auto destroy"
                        (1993592 'move' i[1993590] _yieldedIndex[1993584])
                        ref yret[1993595]:_ref(locale)[948844] "dead after last mention" "YVV" "temp"
                        ref _yieldedIndex[1993597]:_ref(locale)[948844] "coforall index var" "temp"
                        (1993599 'move' _yieldedIndex[1993597] i[1993590])
                        {
                          ref loc[1993603]:_ref(locale)[948844] "coforall index var" "index var" "insert auto destroy"
                          (1993605 'move' loc[1993603] _yieldedIndex[1993597])
                          const-val tmp[1993608]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
                          const-val call_tmp[1993610]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
                          val _locale_tmp_[1993612]:BaseLocale[91201] "dead after last mention" "temp"
                          (1993614 'move' _locale_tmp_[1993612](1993617 call _value[89981] loc[1993603]))
                          (1993619 'move' call_tmp[1993610](1993621 '_wide_get_locale' _locale_tmp_[1993612]))
                          (1993623 'move' tmp[1993608] call_tmp[1993610])
                          val _args_foron_fn[2102521]:_class_localson_fn[2102507] "temp"
                          (2102525 'move' _args_foron_fn[2102521](2102523 'stack allocate class' _class_localson_fn[2102507]))
                          (2102527 '.=' _args_foron_fn[2102521] _0_tmp[2102510] tmp[1993608])
                          (2102531 '.=' _args_foron_fn[2102521] _1_root[2102512] root[1798087])
                          (2102535 '.=' _args_foron_fn[2102521] _2_id[2102514] id[1798055])
                          ref tmp[2102539]:_RuntimeTypeInfo[1253673] "temp"
                          (2102543 'move' tmp[2102539](2102541 'set reference' globalType[1798065]))
                          (2102545 '.=' _args_foron_fn[2102521] _3_globalType[2102516] tmp[2102539])
                          (2102549 '.=' _args_foron_fn[2102521] _4__coforallCount[2102518] _coforallCount[1798227])
                          val _args_vforon_fn[2102553]:c_void_ptr[149] "temp"
                          (2102557 'move' _args_vforon_fn[2102553](2102555 'cast_to_void_star' _args_foron_fn[2102521]))
                          val _args_sizeon_fn[2102559]:int(64)[13] "temp"
                          (2102563 'move' _args_sizeon_fn[2102559](2102561 'sizeof_bundle' _class_localson_fn[2102507]))
                          on(2102630 call wrapon_fn[2102565] tmp[1993608] _args_vforon_fn[2102553] _args_sizeon_fn[2102559] _args_foron_fn[2102521])
                          {
                          }
                          label _continueLabel[1993634]
                        }
                      }
                    }
                  }
                  {
                    const-val low[1993468]:int(64)[13] "temp"
                    (1993470 'move' low[1993468](1993472 '.v' _iterator[1993361] F0_low[2027429]))
                    (1993475 '=' i[1993459] low[1993468])
                  }
                  {
                    const-val high[1993479]:int(64)[13] "temp"
                    (1993481 'move' high[1993479](1993483 '.v' _iterator[1993361] F1_high[2027433]))
                    (1993486 '<=' i[1993459] high[1993479])
                  }
                  {
                    val call_tmp[1993490]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    const-val call_tmp[1993492]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val stride[1993494]:int(64)[13] "temp"
                    (1993496 'move' stride[1993494](1993498 '.v' _iterator[1993361] F2_stride[2027437]))
                    (1993501 'move' call_tmp[1993492] stride[1993494])
                    const-val stride[1993504]:int(64)[13] "temp"
                    (1993506 'move' stride[1993504](1993508 '.v' _iterator[1993361] F2_stride[2027437]))
                    (1993511 '+=' i[1993459] stride[1993504])
                  }
                }
                label _endchpl_direct_pos_stride_range_iter[1993566]
              }
              (1993569 call _freeIterator[1303185] _iterator[1993361])
              label _endchpl__serialViewIter[1993571]
            }
            (1940783 call _freeIterator[1303620] _iterator[1940697])
            label _endthese[1940785]
          }
          (1940788 call _freeIterator[1304225] _iterator[1940638])
          label _endthese[1940790]
        }
        label _breakLabel[1798405]
        val error[1813867]:Error[167938] "error variable" "temp"
        (1813869 'move' error[1813867] nil[44])
        (1798413 call _waitEndCount[1350079] _coforallCount[1798227] numTasks[1798234] error[1813867])
        val errorExists[2110704]:bool[10] "temp"
        (2110709 'move' errorExists[2110704](2110706 '!=' error[1813867] nil[44]))
        if errorExists[2110704]
        {
          (1813872 call chpl_propagate_error[170472] error[1813867])
        }
        (1852041 call _endCountFree[1233860] _coforallCount[1798227])
        (1852045 call _freeIterator[1304976] _iterator[1798250])
      }
    }
    (1852047 call chpl__autoDestroy[1461594] call_tmp[1798073])
    (1798599 return _void[55])
  }
  function on_fn[1793419](const in arg root[1793423]:int(64)[13], const  ref arg localeZeroGlobal[1793425]:_ref(string)[937939], const in arg data[1793427]:__serializeHelper[28086], const in arg id[1793429]:int(64)[13], const in arg _coforallCount[1807606]:_EndCount(AtomicT(int(64)),int(64))[945343]) : void[4] "cobegin or coforall" "non blocking" "on" "resolved"
  {
    {
      const-val call_tmp[1793433]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1830847]:locale[28] "temp"
      (1793438 call here[90435] ret_tmp[1830847])
      (1830850 'move' call_tmp[1793433] ret_tmp[1830847])
      const-val call_tmp[1793439]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1793441 'move' call_tmp[1793439](1793444 call id[90518] call_tmp[1793433]))
      const-val call_tmp[1793447]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1793449 'move' call_tmp[1793447](1793452 call !=[436012] call_tmp[1793439] root[1793423]))
      const-val call_tmp[1793455]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1793457 'move' call_tmp[1793455] call_tmp[1793447])
      if call_tmp[1793455]
      {
        val call_tmp[1793464]:string[26] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1793470]:string[26] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1841553]:string[26] "temp"
        val rvfRerefTmp[2084929]:__serializeHelper[28086] "temp"
        (2084932 'move' rvfRerefTmp[2084929] data[1793427])
        (1793478 call chpl__deserialize[1792422] rvfRerefTmp[2084929] ret_tmp[1841553])
        (1841556 'move' call_tmp[1793470] ret_tmp[1841553])
        const-val temp[1793480]:string[26] "dead at end of block" "no auto destroy" "no copy"
        (1793482 'move' temp[1793480] call_tmp[1793470])
        const-val call_tmp[1793486]:c_void_ptr[149] "dead at end of block" "maybe param" "temp"
        (1793488 'move' call_tmp[1793486](1793491 call chpl_get_global_serialize_table[171433] id[1793429]))
        const-val destVoidPtr[1793493]:c_void_ptr[149] "dead at end of block" "const" "insert auto destroy"
        (1793495 'move' destVoidPtr[1793493](1794456 call chpl__initCopy[945242] call_tmp[1793486]))
        val call_tmp[1793499]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[1793505]:c_ptr(string)[1794462] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[1793512]:c_ptr(string)[1794462] "dead at end of block" "maybe param" "temp"
        (1793514 'move' call_tmp[1793512](1793517 call _cast[1794482] destVoidPtr[1793493]))
        const dest[1793520]:c_ptr(string)[1794462] "dead at end of block" "const" "insert auto destroy"
        (1793522 'move' dest[1793520](1794511 call chpl__initCopy[1794513] call_tmp[1793512]))
        ref call_tmp[1793528]:_ref(string)[937939] "dead after last mention" "maybe param" "temp"
        (1793530 'move' call_tmp[1793528](1793536 call deref[1794532] dest[1793520]))
        (1793537 '=' call_tmp[1793528] temp[1793480])
      }
      (1851999 call chpl__autoDestroy[1461594] call_tmp[1793433])
    }
    (1793548 return _void[55])
  }
  function on_fn[1794030](const in arg root[1794034]:int(64)[13], const in arg id[1794036]:int(64)[13], const  ref arg globalType[1807608]:_ref(string)[937939], const in arg _coforallCount[1807610]:_EndCount(AtomicT(int(64)),int(64))[945343]) : void[4] "cobegin or coforall" "non blocking" "on" "resolved"
  {
    {
      const-val call_tmp[1794040]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1830859]:locale[28] "temp"
      (1794045 call here[90435] ret_tmp[1830859])
      (1830862 'move' call_tmp[1794040] ret_tmp[1830859])
      const-val call_tmp[1794046]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1794048 'move' call_tmp[1794046](1794051 call id[90518] call_tmp[1794040]))
      const-val call_tmp[1794054]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1794056 'move' call_tmp[1794054](1794059 call !=[436012] call_tmp[1794046] root[1794034]))
      const-val call_tmp[1794062]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1794064 'move' call_tmp[1794062] call_tmp[1794054])
      if call_tmp[1794062]
      {
        const-val call_tmp[1794071]:c_void_ptr[149] "dead at end of block" "maybe param" "temp"
        (1794073 'move' call_tmp[1794071](1794076 call chpl_get_global_serialize_table[171433] id[1794036]))
        const-val voidPtr[1794078]:c_void_ptr[149] "dead at end of block" "const" "insert auto destroy"
        (1794080 'move' voidPtr[1794078](1794608 call chpl__initCopy[945242] call_tmp[1794071]))
        val call_tmp[1794084]:c_ptr(string)[1794462] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[1794091]:c_ptr(string)[1794462] "dead at end of block" "maybe param" "temp"
        (1794093 'move' call_tmp[1794091](1794096 call _cast[1794482] voidPtr[1794078]))
        val ptr[1794099]:c_ptr(string)[1794462] "dead at end of block" "insert auto destroy"
        (1794101 'move' ptr[1794099](1794620 call chpl__initCopy[1794513] call_tmp[1794091]))
        ref call_tmp[1794105]:_ref(string)[937939] "dead at end of block" "maybe param" "temp"
        (1794107 'move' call_tmp[1794105](1794113 call deref[1794532] ptr[1794099]))
        ref temp[1794114]:_ref(string)[937939] "dead at end of block" "no auto destroy" "no copy"
        (1794116 'move' temp[1794114] call_tmp[1794105])
        (1794124 call chpl__autoDestroy[1461530] temp[1794114])
      }
      (1852015 call chpl__autoDestroy[1461594] call_tmp[1794040])
    }
    (1794133 return _void[55])
  }
  function on_fn[1797685](const in arg root[1797689]:int(64)[13], const in arg localeZeroGlobal[1797691]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1796639], const in arg data[1797693]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1796639], const in arg id[1797695]:int(64)[13], const in arg _coforallCount[1807612]:_EndCount(AtomicT(int(64)),int(64))[945343]) : void[4] "cobegin or coforall" "non blocking" "on" "resolved"
  {
    val localeZeroGlobal[2084942]:domain(1,int(64),false)[1252597] "temp"
    ref localeZeroGlobal[2084943]:domain(1,int(64),false)[1252597] "temp"
    val ds_info[2084949]:_RuntimeTypeInfo[1253673]
    ref tmp[2084952]:domain(1,int(64),false)[1252597] "temp"
    (2084956 'move' tmp[2084952](2084954 'set reference' localeZeroGlobal[2084942]))
    (2084946 call chpl__deserialize[1797174] ds_info[2084949] localeZeroGlobal[1797691] tmp[2084952])
    (2084961 'move' localeZeroGlobal[2084943](2084959 'set reference' localeZeroGlobal[2084942]))
    {
      const-val call_tmp[1797699]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1830871]:locale[28] "temp"
      (1797704 call here[90435] ret_tmp[1830871])
      (1830874 'move' call_tmp[1797699] ret_tmp[1830871])
      const-val call_tmp[1797705]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1797707 'move' call_tmp[1797705](1797710 call id[90518] call_tmp[1797699]))
      const-val call_tmp[1797713]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1797715 'move' call_tmp[1797713](1797718 call !=[436012] call_tmp[1797705] root[1797689]))
      const-val call_tmp[1797721]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1797723 'move' call_tmp[1797721] call_tmp[1797713])
      if call_tmp[1797721]
      {
        const-val call_tmp[1797730]:_RuntimeTypeInfo[1253673] "dead at end of block" "expr temp" "maybe param" "temp"
        (1797732 'move' call_tmp[1797730](1798701 call chpl__convertValueToRuntimeType[1460263] localeZeroGlobal[2084943]))
        const-val call_tmp[1797736]:domain(1,int(64),false)[1252597] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1841589]:domain(1,int(64),false)[1252597] "temp"
        val rvfRerefTmp[2084975]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1796639] "temp"
        (2084978 'move' rvfRerefTmp[2084975] data[1797693])
        (1797744 call chpl__deserialize[1797174] call_tmp[1797730] rvfRerefTmp[2084975] ret_tmp[1841589])
        (1841592 'move' call_tmp[1797736] ret_tmp[1841589])
        const-val temp[1797746]:domain(1,int(64),false)[1252597] "dead at end of block" "no auto destroy" "no copy"
        (1797748 'move' temp[1797746] call_tmp[1797736])
        const-val call_tmp[1797752]:c_void_ptr[149] "dead at end of block" "maybe param" "temp"
        (1797754 'move' call_tmp[1797752](1797757 call chpl_get_global_serialize_table[171433] id[1797695]))
        const-val destVoidPtr[1797759]:c_void_ptr[149] "dead at end of block" "const" "insert auto destroy"
        (1797761 'move' destVoidPtr[1797759](1798706 call chpl__initCopy[945242] call_tmp[1797752]))
        const-val call_tmp[1797765]:_RuntimeTypeInfo[1253673] "dead after last mention" "expr temp" "maybe param" "temp"
        (1797767 'move' call_tmp[1797765](1798709 call chpl__convertValueToRuntimeType[1460263] localeZeroGlobal[2084943]))
        val call_tmp[1797771]:c_ptr(domain(1,int(64),false))[1798715] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[1797778]:c_ptr(domain(1,int(64),false))[1798715] "dead at end of block" "maybe param" "temp"
        (1797780 'move' call_tmp[1797778](1797783 call _cast[1798735] destVoidPtr[1797759]))
        const dest[1797786]:c_ptr(domain(1,int(64),false))[1798715] "dead at end of block" "const" "insert auto destroy"
        (1797788 'move' dest[1797786](1798764 call chpl__initCopy[1798766] call_tmp[1797778]))
        ref call_tmp[1797794]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252623] "dead after last mention" "maybe param" "temp"
        (1797796 'move' call_tmp[1797794](1797802 call deref[1798785] dest[1797786]))
        (1797803 '=' call_tmp[1797794] temp[1797746])
      }
      (1852035 call chpl__autoDestroy[1461594] call_tmp[1797699])
    }
    (2084963 call chpl__autoDestroy[1797093] localeZeroGlobal[1797691])
    (2084966 call chpl__autoDestroy[1556881] localeZeroGlobal[2084942])
    (1797814 return _void[55])
  }
  function on_fn[1798296](const in arg root[1798300]:int(64)[13], const in arg id[1798302]:int(64)[13], const  ref arg globalType[1807614]:_ref(_RuntimeTypeInfo)[1253690], const in arg _coforallCount[1807616]:_EndCount(AtomicT(int(64)),int(64))[945343]) : void[4] "cobegin or coforall" "non blocking" "on" "resolved"
  {
    {
      const-val call_tmp[1798306]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1830883]:locale[28] "temp"
      (1798311 call here[90435] ret_tmp[1830883])
      (1830886 'move' call_tmp[1798306] ret_tmp[1830883])
      const-val call_tmp[1798312]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1798314 'move' call_tmp[1798312](1798317 call id[90518] call_tmp[1798306]))
      const-val call_tmp[1798320]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1798322 'move' call_tmp[1798320](1798325 call !=[436012] call_tmp[1798312] root[1798300]))
      const-val call_tmp[1798328]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1798330 'move' call_tmp[1798328] call_tmp[1798320])
      if call_tmp[1798328]
      {
        const-val call_tmp[1798337]:c_void_ptr[149] "dead at end of block" "maybe param" "temp"
        (1798339 'move' call_tmp[1798337](1798342 call chpl_get_global_serialize_table[171433] id[1798302]))
        const-val voidPtr[1798344]:c_void_ptr[149] "dead at end of block" "const" "insert auto destroy"
        (1798346 'move' voidPtr[1798344](1798864 call chpl__initCopy[945242] call_tmp[1798337]))
        val call_tmp[1798350]:c_ptr(domain(1,int(64),false))[1798715] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[1798357]:c_ptr(domain(1,int(64),false))[1798715] "dead at end of block" "maybe param" "temp"
        (1798359 'move' call_tmp[1798357](1798362 call _cast[1798735] voidPtr[1798344]))
        val ptr[1798365]:c_ptr(domain(1,int(64),false))[1798715] "dead at end of block" "insert auto destroy"
        (1798367 'move' ptr[1798365](1798876 call chpl__initCopy[1798766] call_tmp[1798357]))
        ref call_tmp[1798371]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252623] "dead at end of block" "maybe param" "temp"
        (1798373 'move' call_tmp[1798371](1798379 call deref[1798785] ptr[1798365]))
        ref temp[1798380]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252623] "dead at end of block" "no auto destroy" "no copy"
        (1798382 'move' temp[1798380] call_tmp[1798371])
        (1798390 call chpl__autoDestroy[1556881] temp[1798380])
      }
      (1852051 call chpl__autoDestroy[1461594] call_tmp[1798306])
    }
    (1798399 return _void[55])
  }
  function wrapon_fn[2102162](const in arg dummy_locale_arg[2102164]:chpl_localeID_t[209294], in arg buf[2102166]:c_void_ptr[149], in arg buf_size[2102168]:int(64)[13], in arg c[2102170]:_class_localson_fn[2102098]) : void[4] "cobegin or coforall block" "non blocking" "on block"
  {
    val _0_tmp[2102175]:chpl_localeID_t[209294] "temp"
    (2102180 'move' _0_tmp[2102175](2102177 '.v' c[2102170] _0_tmp[2102101]))
    val _1_root[2102182]:int(64)[13] "temp"
    (2102187 'move' _1_root[2102182](2102184 '.v' c[2102170] _1_root[2102103]))
    ref _2_localeZeroGlobal[2102190]:string[26] "temp"
    (2102195 'move' _2_localeZeroGlobal[2102190](2102192 '.v' c[2102170] _2_localeZeroGlobal[2102105]))
    val _3_rvfDerefTmp[2102198]:__serializeHelper[28086] "temp"
    (2102203 'move' _3_rvfDerefTmp[2102198](2102200 '.v' c[2102170] _3_rvfDerefTmp[2102107]))
    val _4_id[2102206]:int(64)[13] "temp"
    (2102211 'move' _4_id[2102206](2102208 '.v' c[2102170] _4_id[2102109]))
    val _5__coforallCount[2102214]:_EndCount(AtomicT(int(64)),int(64))[945343] "temp"
    (2102219 'move' _5__coforallCount[2102214](2102216 '.v' c[2102170] _5__coforallCount[2102111]))
    (2102173 call on_fn[1793419] _1_root[2102182] _2_localeZeroGlobal[2102190] _3_rvfDerefTmp[2102198] _4_id[2102206] _5__coforallCount[2102214])
    val endcount[2102222]:_EndCount(AtomicT(int(64)),int(64))[945343] "temp"
    (2102227 'move' endcount[2102222](2102224 '.v' c[2102170] _5__coforallCount[2102111]))
    (2102229 call _downEndCount[1230637] endcount[2102222] nil[44])
    (2102233 return _void[55])
  }
  function wrapon_fn[2102299](const in arg dummy_locale_arg[2102301]:chpl_localeID_t[209294], in arg buf[2102303]:c_void_ptr[149], in arg buf_size[2102305]:int(64)[13], in arg c[2102307]:_class_localson_fn[2102241]) : void[4] "cobegin or coforall block" "non blocking" "on block"
  {
    val _0_tmp[2102312]:chpl_localeID_t[209294] "temp"
    (2102317 'move' _0_tmp[2102312](2102314 '.v' c[2102307] _0_tmp[2102244]))
    val _1_root[2102319]:int(64)[13] "temp"
    (2102324 'move' _1_root[2102319](2102321 '.v' c[2102307] _1_root[2102246]))
    val _2_id[2102327]:int(64)[13] "temp"
    (2102332 'move' _2_id[2102327](2102329 '.v' c[2102307] _2_id[2102248]))
    ref _3_globalType[2102335]:string[26] "temp"
    (2102340 'move' _3_globalType[2102335](2102337 '.v' c[2102307] _3_globalType[2102250]))
    val _4__coforallCount[2102343]:_EndCount(AtomicT(int(64)),int(64))[945343] "temp"
    (2102348 'move' _4__coforallCount[2102343](2102345 '.v' c[2102307] _4__coforallCount[2102252]))
    (2102310 call on_fn[1794030] _1_root[2102319] _2_id[2102327] _3_globalType[2102335] _4__coforallCount[2102343])
    val endcount[2102351]:_EndCount(AtomicT(int(64)),int(64))[945343] "temp"
    (2102356 'move' endcount[2102351](2102353 '.v' c[2102307] _4__coforallCount[2102252]))
    (2102358 call _downEndCount[1230637] endcount[2102351] nil[44])
    (2102362 return _void[55])
  }
  function wrapon_fn[2102428](const in arg dummy_locale_arg[2102430]:chpl_localeID_t[209294], in arg buf[2102432]:c_void_ptr[149], in arg buf_size[2102434]:int(64)[13], in arg c[2102436]:_class_localson_fn[2102370]) : void[4] "cobegin or coforall block" "non blocking" "on block"
  {
    val _0_tmp[2102441]:chpl_localeID_t[209294] "temp"
    (2102446 'move' _0_tmp[2102441](2102443 '.v' c[2102436] _0_tmp[2102373]))
    val _1_root[2102448]:int(64)[13] "temp"
    (2102453 'move' _1_root[2102448](2102450 '.v' c[2102436] _1_root[2102375]))
    val _2_localeZeroGlobal_data[2102456]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1796639] "temp"
    (2102461 'move' _2_localeZeroGlobal_data[2102456](2102458 '.v' c[2102436] _2_localeZeroGlobal_data[2102377]))
    val _3_rvfDerefTmp[2102464]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1796639] "temp"
    (2102469 'move' _3_rvfDerefTmp[2102464](2102466 '.v' c[2102436] _3_rvfDerefTmp[2102379]))
    val _4_id[2102472]:int(64)[13] "temp"
    (2102477 'move' _4_id[2102472](2102474 '.v' c[2102436] _4_id[2102381]))
    val _5__coforallCount[2102480]:_EndCount(AtomicT(int(64)),int(64))[945343] "temp"
    (2102485 'move' _5__coforallCount[2102480](2102482 '.v' c[2102436] _5__coforallCount[2102383]))
    (2102439 call on_fn[1797685] _1_root[2102448] _2_localeZeroGlobal_data[2102456] _3_rvfDerefTmp[2102464] _4_id[2102472] _5__coforallCount[2102480])
    val endcount[2102488]:_EndCount(AtomicT(int(64)),int(64))[945343] "temp"
    (2102493 'move' endcount[2102488](2102490 '.v' c[2102436] _5__coforallCount[2102383]))
    (2102495 call _downEndCount[1230637] endcount[2102488] nil[44])
    (2102499 return _void[55])
  }
  function wrapon_fn[2102565](const in arg dummy_locale_arg[2102567]:chpl_localeID_t[209294], in arg buf[2102569]:c_void_ptr[149], in arg buf_size[2102571]:int(64)[13], in arg c[2102573]:_class_localson_fn[2102507]) : void[4] "cobegin or coforall block" "non blocking" "on block"
  {
    val _0_tmp[2102578]:chpl_localeID_t[209294] "temp"
    (2102583 'move' _0_tmp[2102578](2102580 '.v' c[2102573] _0_tmp[2102510]))
    val _1_root[2102585]:int(64)[13] "temp"
    (2102590 'move' _1_root[2102585](2102587 '.v' c[2102573] _1_root[2102512]))
    val _2_id[2102593]:int(64)[13] "temp"
    (2102598 'move' _2_id[2102593](2102595 '.v' c[2102573] _2_id[2102514]))
    ref _3_globalType[2102601]:_RuntimeTypeInfo[1253673] "temp"
    (2102606 'move' _3_globalType[2102601](2102603 '.v' c[2102573] _3_globalType[2102516]))
    val _4__coforallCount[2102609]:_EndCount(AtomicT(int(64)),int(64))[945343] "temp"
    (2102614 'move' _4__coforallCount[2102609](2102611 '.v' c[2102573] _4__coforallCount[2102518]))
    (2102576 call on_fn[1798296] _1_root[2102585] _2_id[2102593] _3_globalType[2102601] _4__coforallCount[2102609])
    val endcount[2102617]:_EndCount(AtomicT(int(64)),int(64))[945343] "temp"
    (2102622 'move' endcount[2102617](2102619 '.v' c[2102573] _4__coforallCount[2102518]))
    (2102624 call _downEndCount[1230637] endcount[2102617] nil[44])
    (2102628 return _void[55])
  }
}