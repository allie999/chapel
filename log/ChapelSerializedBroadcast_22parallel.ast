AST dump for ChapelSerializedBroadcast after pass parallel.
Module use list: ChapelLocale CPtr 

{
  type _class_localson_fn[2067232] val _runtime_hdr[2067233]:chpl_comm_on_bundle_t[209359] val _0_tmp[2067235]:chpl_localeID_t[209352] val _1_root[2067237]:int(64)[13] val _2_id[2067239]:int(64)[13] ref _3_globalType[2067241]:_RuntimeTypeInfo[1253692] val _4__coforallCount[2067243]:_EndCount(AtomicT(int(64)),int(64))[945362]
  type _class_localson_fn[2067095] val _runtime_hdr[2067096]:chpl_comm_on_bundle_t[209359] val _0_tmp[2067098]:chpl_localeID_t[209352] val _1_root[2067100]:int(64)[13] val _2_localeZeroGlobal_data[2067102]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1771125] val _3_rvfDerefTmp[2067104]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1771125] val _4_id[2067106]:int(64)[13] val _5__coforallCount[2067108]:_EndCount(AtomicT(int(64)),int(64))[945362]
  type _class_localson_fn[2066966] val _runtime_hdr[2066967]:chpl_comm_on_bundle_t[209359] val _0_tmp[2066969]:chpl_localeID_t[209352] val _1_root[2066971]:int(64)[13] val _2_id[2066973]:int(64)[13] ref _3_globalType[2066975]:string[26] val _4__coforallCount[2066977]:_EndCount(AtomicT(int(64)),int(64))[945362]
  type _class_localson_fn[2066823] val _runtime_hdr[2066824]:chpl_comm_on_bundle_t[209359] val _0_tmp[2066826]:chpl_localeID_t[209352] val _1_root[2066828]:int(64)[13] ref _2_localeZeroGlobal[2066830]:string[26] val _3_rvfDerefTmp[2066832]:__serializeHelper[28089] val _4_id[2066834]:int(64)[13] val _5__coforallCount[2066836]:_EndCount(AtomicT(int(64)),int(64))[945362]
  function chpl__init_ChapelSerializedBroadcast[416061]() : void[4] "insert line file info" "module init" "resolved"
  {
    (522460 return _void[55])
  }
  function chpl_get_global_serialize_table[171479](const in arg idx[171476]:int(64)[13]) : c_void_ptr[149] "extern" "local args" "no fn body" "resolved" "no return value for void"
  {
    val ret[522452]:c_void_ptr[149] "RVV" "temp"
    (522454 return ret[522452])
  }
  function chpl__broadcastGlobal[1767574](const  ref arg localeZeroGlobal[1767576]:_ref(string)[937958], const in arg id[1767578]:int(64)[13]) : void[4] "serialized broadcast function" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    {
      const-val call_tmp[1767665]:__serializeHelper[28089] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1802646]:__serializeHelper[28089] "temp"
      (1767673 call chpl__serialize[30886] localeZeroGlobal[1767576] ret_tmp[1802646])
      (1802649 'move' call_tmp[1767665] ret_tmp[1802646])
      const-val data[1767674]:__serializeHelper[28089] "dead at end of block" "const" "insert auto destroy"
      (1767676 'move' data[1767674] call_tmp[1767665])
      const-val call_tmp[1767680]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1804196]:locale[28] "temp"
      (1767685 call here[90438] ret_tmp[1804196])
      (1804199 'move' call_tmp[1767680] ret_tmp[1804196])
      const-val call_tmp[1767686]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (1767688 'move' call_tmp[1767686](1767691 call id[90521] call_tmp[1767680]))
      const-val root[1767694]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      (1767696 'move' root[1767694] call_tmp[1767686])
      {
        ref tmpIter[1767701]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287056] "dead at end of block" "maybe ref" "no copy" "reference to a const" "temp"
        (1767703 'move' tmpIter[1767701] Locales[113662])
        {
          const _coforallCount[1767834]:_EndCount(AtomicT(int(64)),int(64))[945362] "dead after last mention" "concurrently accessed" "const" "end count" "temp"
          (1767836 'move' _coforallCount[1767834](1767839 call _endCountAlloc[938837]))
          const-val numTasks[1767841]:int(64)[13] "dead at end of block" "temp"
          (1767843 'move' numTasks[1767841](1767846 call size[1536263] tmpIter[1767701]))
          (1767850 call _upEndCount[1325391] _coforallCount[1767834] numTasks[1767841])
          ref _indexOfInterest[1767855]:_ref(locale)[948863] "dead at end of block" "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1767857]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304310] "dead at end of block" "expr temp" "temp"
          (1767859 'move' _iterator[1767857](1767862 call _getIterator[1298128] tmpIter[1767701]))
          {
            val ret[1907817]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304316] "dead after last mention" "RVV" "temp"
            ref _indexOfInterest[1907819]:_ref(locale)[948863] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1907821]:_ic_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303705] "dead at end of block" "expr temp" "temp"
            val call_tmp[1907823]:[domain(1,int(64),false)] locale[1256505] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val this[1908014]:[domain(1,int(64),false)] locale[1287030] "temp"
            (1908019 'move' this[1908014](1908016 '.v' _iterator[1767857] F0_this[1988349]))
            (1907825 'move' call_tmp[1907823](1907828 call _value[1287085] this[1908014]))
            const-val call_tmp[1907830]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303711] "dead at end of block" "maybe param" "temp"
            val coerce_tmp[1907832]:[domain(1,int(64),false)] locale[1256505] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (1907834 'move' coerce_tmp[1907832] call_tmp[1907823])
            const-val default_arg_tasksPerLocale[1907837]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
            (1907839 'move' default_arg_tasksPerLocale[1907837](1907842 call these_default_tasksPerLocale[1298398] call_tmp[1907823]))
            const-val default_arg_ignoreRunning[1907844]:bool[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
            (1907846 'move' default_arg_ignoreRunning[1907844](1907849 call these_default_ignoreRunning[1298429] coerce_tmp[1907832]))
            const-val default_arg_minIndicesPerTask[1907851]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
            (1907853 'move' default_arg_minIndicesPerTask[1907851](1907856 call these_default_minIndicesPerTask[1298460] coerce_tmp[1907832]))
            const-val ret_tmp[1907858]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303711] "temp"
            (1907861 call these[1298282] coerce_tmp[1907832] default_arg_tasksPerLocale[1907837] default_arg_ignoreRunning[1907844] default_arg_minIndicesPerTask[1907851] ret_tmp[1907858])
            (1907867 'move' call_tmp[1907830] ret_tmp[1907858])
            (1907870 'move' _iterator[1907821](1907873 call _getIterator[1303720] call_tmp[1907830]))
            {
              val ret[1907876]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303711] "dead after last mention" "RVV" "temp"
              ref _indexOfInterest[1907878]:_ref(locale)[948863] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[1907880]:_ic_chpl__serialViewIter[1303455] "dead at end of block" "expr temp" "temp"
              ref call_tmp[1907882]:_ref(domain(1,int(64),false))[1250968] "dead at end of block" "maybe param" "temp"
              const-val this[1907884]:[domain(1,int(64),false)] locale[1256505] "temp"
              (1907886 'move' this[1907884](1907888 '.v' _iterator[1907821] F0_this[1990457]))
              (1907891 'move' call_tmp[1907882](1907894 call dom[1258038] this[1907884]))
              const-val call_tmp[1907896]:_ir_chpl__serialViewIter[1303461] "dead at end of block" "maybe param" "temp"
              val coerce_tmp[1907898]:domain(1,int(64),false)[1250953] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1907900 'move' coerce_tmp[1907898](1907902 'deref' call_tmp[1907882]))
              const-val ret_tmp[1907904]:_ir_chpl__serialViewIter[1303461] "temp"
              const-val this[1907906]:[domain(1,int(64),false)] locale[1256505] "temp"
              (1907908 'move' this[1907906](1907910 '.v' _iterator[1907821] F0_this[1990457]))
              (1907914 call chpl__serialViewIter[1298494] this[1907906] coerce_tmp[1907898] ret_tmp[1907904])
              (1907918 'move' call_tmp[1907896] ret_tmp[1907904])
              (1907921 'move' _iterator[1907880](1907924 call _getIterator[1303470] call_tmp[1907896]))
              {
                val ret[1958208]:_ir_chpl__serialViewIter[1303461] "dead after last mention" "RVV" "temp"
                val info[1958210]:[domain(1,int(64),false)] locale[1256505] "dead at end of block" "insert auto destroy"
                val tmp[1958212]:[domain(1,int(64),false)] locale[1256505] "dead at end of block" "expr temp" "insert auto destroy" "maybe copy elided" "maybe param" "temp"
                val tmp[1958214]:[domain(1,int(64),false)] locale[1256505] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val arr[1958635]:[domain(1,int(64),false)] locale[1256505] "temp"
                (1958640 'move' arr[1958635](1958637 '.v' _iterator[1907880] F0_arr[1992362]))
                (1958216 'move' tmp[1958214] arr[1958635])
                const-val arr[1958642]:[domain(1,int(64),false)] locale[1256505] "temp"
                (1958647 'move' arr[1958642](1958644 '.v' _iterator[1907880] F0_arr[1992362]))
                (1958219 'move' tmp[1958212] arr[1958642])
                const-val arr[1958649]:[domain(1,int(64),false)] locale[1256505] "temp"
                (1958654 'move' arr[1958649](1958651 '.v' _iterator[1907880] F0_arr[1992362]))
                (1958222 '=' info[1958210] arr[1958649])
                (1958225 'noop')
                const-val call_tmp[1958226]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                val coerce_tmp[1958228]:domain(1,int(64),false)[1250953] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                const-val viewDom[1958656]:domain(1,int(64),false)[1250953] "temp"
                (1958661 'move' viewDom[1958656](1958658 '.v' _iterator[1907880] F1_viewDom[1992366]))
                (1958230 'move' coerce_tmp[1958228] viewDom[1958656])
                const-val viewDom[1958663]:domain(1,int(64),false)[1250953] "temp"
                (1958668 'move' viewDom[1958663](1958665 '.v' _iterator[1907880] F1_viewDom[1992366]))
                (1958233 'move' call_tmp[1958226](1958236 call dsiLow[1300455] viewDom[1958663]))
                const-val call_tmp[1958238]:int(64)[13] "dead at end of block" "maybe param" "temp"
                const-val arr[1958670]:[domain(1,int(64),false)] locale[1256505] "temp"
                (1958675 'move' arr[1958670](1958672 '.v' _iterator[1907880] F0_arr[1992362]))
                (1958240 'move' call_tmp[1958238](1958243 call getDataIndex[1300714] arr[1958670] call_tmp[1958226]))
                const-val first[1958246]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                (1958248 'move' first[1958246] call_tmp[1958238])
                const-val call_tmp[1958251]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                val coerce_tmp[1958253]:domain(1,int(64),false)[1250953] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                const-val viewDom[1958677]:domain(1,int(64),false)[1250953] "temp"
                (1958682 'move' viewDom[1958677](1958679 '.v' _iterator[1907880] F1_viewDom[1992366]))
                (1958255 'move' coerce_tmp[1958253] viewDom[1958677])
                (1958258 'move' call_tmp[1958251](1958261 call dsiLow[1300455] coerce_tmp[1958253]))
                const-val call_tmp[1958263]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                (1958265 'move' call_tmp[1958263](1958268 call chpl__idxToInt[1026935] call_tmp[1958251]))
                const-val call_tmp[1958270]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                (1958272 'move' call_tmp[1958270](1958275 call +[949685] call_tmp[1958263]))
                const-val call_tmp[1958277]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                val coerce_tmp[1958279]:domain(1,int(64),false)[1250953] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                const-val viewDom[1958684]:domain(1,int(64),false)[1250953] "temp"
                (1958689 'move' viewDom[1958684](1958686 '.v' _iterator[1907880] F1_viewDom[1992366]))
                (1958281 'move' coerce_tmp[1958279] viewDom[1958684])
                (1958284 'move' call_tmp[1958277](1958287 call chpl_intToIdx[1301884] coerce_tmp[1958279] call_tmp[1958270]))
                const-val call_tmp[1958290]:int(64)[13] "dead at end of block" "maybe param" "temp"
                (1958292 'move' call_tmp[1958290](1958295 call getDataIndex[1300714] info[1958210] call_tmp[1958277]))
                const-val second[1958298]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                (1958300 'move' second[1958298] call_tmp[1958290])
                const-val call_tmp[1958303]:int(64)[13] "dead at end of block" "maybe param" "temp"
                (1958305 'move' call_tmp[1958303](1958308 call -[440454] call_tmp[1958290] call_tmp[1958238]))
                const-val step[1958311]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                (1958313 'move' step[1958311] call_tmp[1958303])
                const-val call_tmp[1958316]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                val coerce_tmp[1958318]:domain(1,int(64),false)[1250953] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                const-val viewDom[1958691]:domain(1,int(64),false)[1250953] "temp"
                (1958696 'move' viewDom[1958691](1958693 '.v' _iterator[1907880] F1_viewDom[1992366]))
                (1958320 'move' coerce_tmp[1958318] viewDom[1958691])
                (1958323 'move' call_tmp[1958316](1958326 call dsiNumIndices[1263653] coerce_tmp[1958318]))
                const-val call_tmp[1958328]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                (1958330 'move' call_tmp[1958328](1958333 call -[962245] call_tmp[1958316]))
                const-val call_tmp[1958335]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                (1958337 'move' call_tmp[1958335](1958340 call *[441866] call_tmp[1958328] call_tmp[1958303]))
                const-val call_tmp[1958343]:int(64)[13] "dead at end of block" "maybe param" "temp"
                (1958345 'move' call_tmp[1958343](1958348 call +[439674] call_tmp[1958238] call_tmp[1958335]))
                const-val last[1958351]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                (1958353 'move' last[1958351] call_tmp[1958343])
                val _indexOfInterest[1958356]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1958358]:_ic_chpl_direct_pos_stride_range_iter[1303016] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[1958360]:_ir_chpl_direct_pos_stride_range_iter[1303022] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[1958362]:_ir_chpl_direct_pos_stride_range_iter[1303022] "temp"
                (1958365 call chpl_direct_pos_stride_range_iter[1301971] call_tmp[1958238] call_tmp[1958343] call_tmp[1958303] ret_tmp[1958362])
                (1958370 'move' call_tmp[1958360] ret_tmp[1958362])
                (1958373 'move' _iterator[1958358](1958376 call _getIterator[1303031] call_tmp[1958360]))
                {
                  val ret[1958379]:_ir_chpl_direct_pos_stride_range_iter[1303022] "dead after last mention" "RVV" "temp"
                  val call_tmp[1958381]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val stride[1958383]:int(64)[13] "temp"
                  (1958385 'move' stride[1958383](1958387 '.v' _iterator[1958358] F2_stride[1993906]))
                  (1958391 call chpl_range_check_stride[1102852] stride[1958383])
                  val call_tmp[1958393]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val default_arg_first[1958395]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val low[1958397]:int(64)[13] "temp"
                  (1958399 'move' low[1958397](1958401 '.v' _iterator[1958358] F0_low[1993898]))
                  (1958404 'move' default_arg_first[1958395](1958407 call chpl_checkIfRangeIterWillOverflow_default_first[1103217] low[1958397]))
                  const-val default_arg_last[1958409]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val high[1958411]:int(64)[13] "temp"
                  (1958413 'move' high[1958411](1958415 '.v' _iterator[1958358] F1_high[1993902]))
                  (1958418 'move' default_arg_last[1958409](1958421 call chpl_checkIfRangeIterWillOverflow_default_last[1103245] high[1958411]))
                  const-val _return_tmp_[1958423]:bool[10] "dead after last mention" "temp"
                  const-val low[1958425]:int(64)[13] "temp"
                  (1958427 'move' low[1958425](1958429 '.v' _iterator[1958358] F0_low[1993898]))
                  const-val high[1958432]:int(64)[13] "temp"
                  (1958434 'move' high[1958432](1958436 '.v' _iterator[1958358] F1_high[1993902]))
                  const-val stride[1958439]:int(64)[13] "temp"
                  (1958441 'move' stride[1958439](1958443 '.v' _iterator[1958358] F2_stride[1993906]))
                  (1958446 'move' _return_tmp_[1958423](1958449 call chpl_checkIfRangeIterWillOverflow[1096095] low[1958425] high[1958432] stride[1958439] default_arg_first[1958395] default_arg_last[1958409] 1))
                  val i[1958456]:int(64)[13] "dead at end of block" "insert auto destroy"
                  val call_tmp[1958458]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (1958460 'move' i[1958456] 0)
                  CForLoop[1958463] hazard
                  {
                    const-val yret[1958511]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (1958513 'move' yret[1958511] i[1958456])
                    const-val _yieldedIndex[1958516]:int(64)[13] "temp"
                    (1958518 'move' _yieldedIndex[1958516] i[1958456])
                    {
                      const-val i[1958522]:int(64)[13] "const" "index var" "insert auto destroy"
                      (1958524 'move' i[1958522] _yieldedIndex[1958516])
                      ref yret[1958527]:_ref(locale)[948863] "dead after last mention" "YVV" "temp"
                      ref call_tmp[1958529]:_ref(locale)[948863] "dead after last mention" "maybe param" "temp"
                      ref _this_tmp_[1958531]:_ref(_ddata(locale))[1255422] "dead after last mention" "temp"
                      (1958533 'move' _this_tmp_[1958531](1958536 call theData[1303269] info[1958210]))
                      val coerce_tmp[1958538]:_ddata(locale)[1255413] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (1958540 'move' coerce_tmp[1958538](1958542 'deref' _this_tmp_[1958531]))
                      (1958544 'move' call_tmp[1958529](1958547 call this[1303416] coerce_tmp[1958538] _yieldedIndex[1958516]))
                      ref _yieldedIndex[1958572]:_ref(locale)[948863] "temp"
                      (1958550 'move' _yieldedIndex[1958572] call_tmp[1958529])
                      {
                        ref elem[1958574]:_ref(locale)[948863] "index var" "insert auto destroy"
                        (1958576 'move' elem[1958574] _yieldedIndex[1958572])
                        ref yret[1958579]:_ref(locale)[948863] "dead after last mention" "YVV" "temp"
                        ref _yieldedIndex[1958581]:_ref(locale)[948863] "temp"
                        (1958583 'move' _yieldedIndex[1958581] elem[1958574])
                        {
                          ref i[1958587]:_ref(locale)[948863] "index var" "insert auto destroy"
                          (1958589 'move' i[1958587] _yieldedIndex[1958581])
                          ref yret[1958592]:_ref(locale)[948863] "dead after last mention" "YVV" "temp"
                          ref _yieldedIndex[1958594]:_ref(locale)[948863] "coforall index var" "temp"
                          (1958596 'move' _yieldedIndex[1958594] i[1958587])
                          {
                            ref loc[1958600]:_ref(locale)[948863] "coforall index var" "index var" "insert auto destroy"
                            (1958602 'move' loc[1958600] _yieldedIndex[1958594])
                            const-val tmp[1958605]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
                            const-val call_tmp[1958607]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
                            val _locale_tmp_[1958609]:BaseLocale[91204] "dead after last mention" "temp"
                            (1958611 'move' _locale_tmp_[1958609](1958614 call _value[89984] loc[1958600]))
                            (1958616 'move' call_tmp[1958607](1958618 '_wide_get_locale' _locale_tmp_[1958609]))
                            (1958620 'move' tmp[1958605] call_tmp[1958607])
                            val rvfDerefTmp[2050343]:__serializeHelper[28089] "temp"
                            (2050346 'move' rvfDerefTmp[2050343] data[1767674])
                            val _args_foron_fn[2066839]:_class_localson_fn[2066823] "temp"
                            (2066843 'move' _args_foron_fn[2066839](2066841 'stack allocate class' _class_localson_fn[2066823]))
                            (2066845 '.=' _args_foron_fn[2066839] _0_tmp[2066826] tmp[1958605])
                            (2066849 '.=' _args_foron_fn[2066839] _1_root[2066828] root[1767694])
                            ref tmp[2066853]:string[26] "temp"
                            (2066857 'move' tmp[2066853](2066855 'set reference' localeZeroGlobal[1767576]))
                            (2066859 '.=' _args_foron_fn[2066839] _2_localeZeroGlobal[2066830] tmp[2066853])
                            (2066863 '.=' _args_foron_fn[2066839] _3_rvfDerefTmp[2066832] rvfDerefTmp[2050343])
                            (2066867 '.=' _args_foron_fn[2066839] _4_id[2066834] id[1767578])
                            (2066871 '.=' _args_foron_fn[2066839] _5__coforallCount[2066836] _coforallCount[1767834])
                            val _args_vforon_fn[2066875]:c_void_ptr[149] "temp"
                            (2066879 'move' _args_vforon_fn[2066875](2066877 'cast_to_void_star' _args_foron_fn[2066839]))
                            val _args_sizeon_fn[2066881]:int(64)[13] "temp"
                            (2066885 'move' _args_sizeon_fn[2066881](2066883 'sizeof_bundle' _class_localson_fn[2066823]))
                            on(2066960 call wrapon_fn[2066887] tmp[1958605] _args_vforon_fn[2066875] _args_sizeon_fn[2066881] _args_foron_fn[2066839])
                            {
                            }
                            label _continueLabel[1958632]
                          }
                        }
                      }
                    }
                    {
                      const-val low[1958465]:int(64)[13] "temp"
                      (1958467 'move' low[1958465](1958469 '.v' _iterator[1958358] F0_low[1993898]))
                      (1958472 '=' i[1958456] low[1958465])
                    }
                    {
                      const-val high[1958476]:int(64)[13] "temp"
                      (1958478 'move' high[1958476](1958480 '.v' _iterator[1958358] F1_high[1993902]))
                      (1958483 '<=' i[1958456] high[1958476])
                    }
                    {
                      val call_tmp[1958487]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      const-val call_tmp[1958489]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val stride[1958491]:int(64)[13] "temp"
                      (1958493 'move' stride[1958491](1958495 '.v' _iterator[1958358] F2_stride[1993906]))
                      (1958498 'move' call_tmp[1958489] stride[1958491])
                      const-val stride[1958501]:int(64)[13] "temp"
                      (1958503 'move' stride[1958501](1958505 '.v' _iterator[1958358] F2_stride[1993906]))
                      (1958508 '+=' i[1958456] stride[1958501])
                    }
                  }
                  label _endchpl_direct_pos_stride_range_iter[1958563]
                }
                (1958566 call _freeIterator[1303204] _iterator[1958358])
                label _endchpl__serialViewIter[1958568]
              }
              (1907966 call _freeIterator[1303639] _iterator[1907880])
              label _endthese[1907968]
            }
            (1907971 call _freeIterator[1304244] _iterator[1907821])
            label _endthese[1907973]
          }
          label _breakLabel[1768040]
          val error[1787276]:Error[167984] "error variable" "temp"
          (1787278 'move' error[1787276] nil[44])
          (1768048 call _waitEndCount[1350098] _coforallCount[1767834] numTasks[1767841] error[1787276])
          val errorExists[2074641]:bool[10] "temp"
          (2074646 'move' errorExists[2074641](2074643 '!=' error[1787276] nil[44]))
          if errorExists[2074641]
          {
            (1787281 call chpl_propagate_error[170518] error[1787276])
          }
          (1824766 call _endCountFree[1233879] _coforallCount[1767834])
          (1824770 call _freeIterator[1304995] _iterator[1767857])
        }
      }
      (1824773 call chpl__autoDestroy[1435384] call_tmp[1767680])
      (1824776 call chpl__autoDestroy[1435507] data[1767674])
    }
    (1768263 return _void[55])
  }
  function chpl__broadcastGlobal[1771840](const  ref arg localeZeroGlobal[1771842]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642], const in arg id[1771844]:int(64)[13]) : void[4] "serialized broadcast function" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    {
      const-val call_tmp[1771931]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1771125] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1814714]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1771125] "temp"
      (1771939 call chpl__serialize[1770822] localeZeroGlobal[1771842] ret_tmp[1814714])
      (1814717 'move' call_tmp[1771931] ret_tmp[1814714])
      const-val data[1771940]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1771125] "dead at end of block" "const" "insert auto destroy"
      (1771942 'move' data[1771940] call_tmp[1771931])
      const-val call_tmp[1771946]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1804220]:locale[28] "temp"
      (1771951 call here[90438] ret_tmp[1804220])
      (1804223 'move' call_tmp[1771946] ret_tmp[1804220])
      const-val call_tmp[1771952]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (1771954 'move' call_tmp[1771952](1771957 call id[90521] call_tmp[1771946]))
      const-val root[1771960]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      (1771962 'move' root[1771960] call_tmp[1771952])
      {
        ref tmpIter[1771967]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287056] "dead at end of block" "maybe ref" "no copy" "reference to a const" "temp"
        (1771969 'move' tmpIter[1771967] Locales[113662])
        {
          const _coforallCount[1772100]:_EndCount(AtomicT(int(64)),int(64))[945362] "dead after last mention" "concurrently accessed" "const" "end count" "temp"
          (1772102 'move' _coforallCount[1772100](1772105 call _endCountAlloc[938837]))
          const-val numTasks[1772107]:int(64)[13] "dead at end of block" "temp"
          (1772109 'move' numTasks[1772107](1772112 call size[1536263] tmpIter[1771967]))
          (1772116 call _upEndCount[1325391] _coforallCount[1772100] numTasks[1772107])
          ref _indexOfInterest[1772121]:_ref(locale)[948863] "dead at end of block" "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1772123]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304310] "dead at end of block" "expr temp" "temp"
          (1772125 'move' _iterator[1772123](1772128 call _getIterator[1298128] tmpIter[1771967]))
          {
            val ret[1908226]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304316] "dead after last mention" "RVV" "temp"
            ref _indexOfInterest[1908228]:_ref(locale)[948863] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1908230]:_ic_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303705] "dead at end of block" "expr temp" "temp"
            val call_tmp[1908232]:[domain(1,int(64),false)] locale[1256505] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val this[1908423]:[domain(1,int(64),false)] locale[1287030] "temp"
            (1908428 'move' this[1908423](1908425 '.v' _iterator[1772123] F0_this[1988349]))
            (1908234 'move' call_tmp[1908232](1908237 call _value[1287085] this[1908423]))
            const-val call_tmp[1908239]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303711] "dead at end of block" "maybe param" "temp"
            val coerce_tmp[1908241]:[domain(1,int(64),false)] locale[1256505] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (1908243 'move' coerce_tmp[1908241] call_tmp[1908232])
            const-val default_arg_tasksPerLocale[1908246]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
            (1908248 'move' default_arg_tasksPerLocale[1908246](1908251 call these_default_tasksPerLocale[1298398] call_tmp[1908232]))
            const-val default_arg_ignoreRunning[1908253]:bool[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
            (1908255 'move' default_arg_ignoreRunning[1908253](1908258 call these_default_ignoreRunning[1298429] coerce_tmp[1908241]))
            const-val default_arg_minIndicesPerTask[1908260]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
            (1908262 'move' default_arg_minIndicesPerTask[1908260](1908265 call these_default_minIndicesPerTask[1298460] coerce_tmp[1908241]))
            const-val ret_tmp[1908267]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303711] "temp"
            (1908270 call these[1298282] coerce_tmp[1908241] default_arg_tasksPerLocale[1908246] default_arg_ignoreRunning[1908253] default_arg_minIndicesPerTask[1908260] ret_tmp[1908267])
            (1908276 'move' call_tmp[1908239] ret_tmp[1908267])
            (1908279 'move' _iterator[1908230](1908282 call _getIterator[1303720] call_tmp[1908239]))
            {
              val ret[1908285]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303711] "dead after last mention" "RVV" "temp"
              ref _indexOfInterest[1908287]:_ref(locale)[948863] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[1908289]:_ic_chpl__serialViewIter[1303455] "dead at end of block" "expr temp" "temp"
              ref call_tmp[1908291]:_ref(domain(1,int(64),false))[1250968] "dead at end of block" "maybe param" "temp"
              const-val this[1908293]:[domain(1,int(64),false)] locale[1256505] "temp"
              (1908295 'move' this[1908293](1908297 '.v' _iterator[1908230] F0_this[1990457]))
              (1908300 'move' call_tmp[1908291](1908303 call dom[1258038] this[1908293]))
              const-val call_tmp[1908305]:_ir_chpl__serialViewIter[1303461] "dead at end of block" "maybe param" "temp"
              val coerce_tmp[1908307]:domain(1,int(64),false)[1250953] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1908309 'move' coerce_tmp[1908307](1908311 'deref' call_tmp[1908291]))
              const-val ret_tmp[1908313]:_ir_chpl__serialViewIter[1303461] "temp"
              const-val this[1908315]:[domain(1,int(64),false)] locale[1256505] "temp"
              (1908317 'move' this[1908315](1908319 '.v' _iterator[1908230] F0_this[1990457]))
              (1908323 call chpl__serialViewIter[1298494] this[1908315] coerce_tmp[1908307] ret_tmp[1908313])
              (1908327 'move' call_tmp[1908305] ret_tmp[1908313])
              (1908330 'move' _iterator[1908289](1908333 call _getIterator[1303470] call_tmp[1908305]))
              {
                val ret[1959189]:_ir_chpl__serialViewIter[1303461] "dead after last mention" "RVV" "temp"
                val info[1959191]:[domain(1,int(64),false)] locale[1256505] "dead at end of block" "insert auto destroy"
                val tmp[1959193]:[domain(1,int(64),false)] locale[1256505] "dead at end of block" "expr temp" "insert auto destroy" "maybe copy elided" "maybe param" "temp"
                val tmp[1959195]:[domain(1,int(64),false)] locale[1256505] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val arr[1959616]:[domain(1,int(64),false)] locale[1256505] "temp"
                (1959621 'move' arr[1959616](1959618 '.v' _iterator[1908289] F0_arr[1992362]))
                (1959197 'move' tmp[1959195] arr[1959616])
                const-val arr[1959623]:[domain(1,int(64),false)] locale[1256505] "temp"
                (1959628 'move' arr[1959623](1959625 '.v' _iterator[1908289] F0_arr[1992362]))
                (1959200 'move' tmp[1959193] arr[1959623])
                const-val arr[1959630]:[domain(1,int(64),false)] locale[1256505] "temp"
                (1959635 'move' arr[1959630](1959632 '.v' _iterator[1908289] F0_arr[1992362]))
                (1959203 '=' info[1959191] arr[1959630])
                (1959206 'noop')
                const-val call_tmp[1959207]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                val coerce_tmp[1959209]:domain(1,int(64),false)[1250953] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                const-val viewDom[1959637]:domain(1,int(64),false)[1250953] "temp"
                (1959642 'move' viewDom[1959637](1959639 '.v' _iterator[1908289] F1_viewDom[1992366]))
                (1959211 'move' coerce_tmp[1959209] viewDom[1959637])
                const-val viewDom[1959644]:domain(1,int(64),false)[1250953] "temp"
                (1959649 'move' viewDom[1959644](1959646 '.v' _iterator[1908289] F1_viewDom[1992366]))
                (1959214 'move' call_tmp[1959207](1959217 call dsiLow[1300455] viewDom[1959644]))
                const-val call_tmp[1959219]:int(64)[13] "dead at end of block" "maybe param" "temp"
                const-val arr[1959651]:[domain(1,int(64),false)] locale[1256505] "temp"
                (1959656 'move' arr[1959651](1959653 '.v' _iterator[1908289] F0_arr[1992362]))
                (1959221 'move' call_tmp[1959219](1959224 call getDataIndex[1300714] arr[1959651] call_tmp[1959207]))
                const-val first[1959227]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                (1959229 'move' first[1959227] call_tmp[1959219])
                const-val call_tmp[1959232]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                val coerce_tmp[1959234]:domain(1,int(64),false)[1250953] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                const-val viewDom[1959658]:domain(1,int(64),false)[1250953] "temp"
                (1959663 'move' viewDom[1959658](1959660 '.v' _iterator[1908289] F1_viewDom[1992366]))
                (1959236 'move' coerce_tmp[1959234] viewDom[1959658])
                (1959239 'move' call_tmp[1959232](1959242 call dsiLow[1300455] coerce_tmp[1959234]))
                const-val call_tmp[1959244]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                (1959246 'move' call_tmp[1959244](1959249 call chpl__idxToInt[1026935] call_tmp[1959232]))
                const-val call_tmp[1959251]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                (1959253 'move' call_tmp[1959251](1959256 call +[949685] call_tmp[1959244]))
                const-val call_tmp[1959258]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                val coerce_tmp[1959260]:domain(1,int(64),false)[1250953] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                const-val viewDom[1959665]:domain(1,int(64),false)[1250953] "temp"
                (1959670 'move' viewDom[1959665](1959667 '.v' _iterator[1908289] F1_viewDom[1992366]))
                (1959262 'move' coerce_tmp[1959260] viewDom[1959665])
                (1959265 'move' call_tmp[1959258](1959268 call chpl_intToIdx[1301884] coerce_tmp[1959260] call_tmp[1959251]))
                const-val call_tmp[1959271]:int(64)[13] "dead at end of block" "maybe param" "temp"
                (1959273 'move' call_tmp[1959271](1959276 call getDataIndex[1300714] info[1959191] call_tmp[1959258]))
                const-val second[1959279]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                (1959281 'move' second[1959279] call_tmp[1959271])
                const-val call_tmp[1959284]:int(64)[13] "dead at end of block" "maybe param" "temp"
                (1959286 'move' call_tmp[1959284](1959289 call -[440454] call_tmp[1959271] call_tmp[1959219]))
                const-val step[1959292]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                (1959294 'move' step[1959292] call_tmp[1959284])
                const-val call_tmp[1959297]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                val coerce_tmp[1959299]:domain(1,int(64),false)[1250953] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                const-val viewDom[1959672]:domain(1,int(64),false)[1250953] "temp"
                (1959677 'move' viewDom[1959672](1959674 '.v' _iterator[1908289] F1_viewDom[1992366]))
                (1959301 'move' coerce_tmp[1959299] viewDom[1959672])
                (1959304 'move' call_tmp[1959297](1959307 call dsiNumIndices[1263653] coerce_tmp[1959299]))
                const-val call_tmp[1959309]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                (1959311 'move' call_tmp[1959309](1959314 call -[962245] call_tmp[1959297]))
                const-val call_tmp[1959316]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                (1959318 'move' call_tmp[1959316](1959321 call *[441866] call_tmp[1959309] call_tmp[1959284]))
                const-val call_tmp[1959324]:int(64)[13] "dead at end of block" "maybe param" "temp"
                (1959326 'move' call_tmp[1959324](1959329 call +[439674] call_tmp[1959219] call_tmp[1959316]))
                const-val last[1959332]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                (1959334 'move' last[1959332] call_tmp[1959324])
                val _indexOfInterest[1959337]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1959339]:_ic_chpl_direct_pos_stride_range_iter[1303016] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[1959341]:_ir_chpl_direct_pos_stride_range_iter[1303022] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[1959343]:_ir_chpl_direct_pos_stride_range_iter[1303022] "temp"
                (1959346 call chpl_direct_pos_stride_range_iter[1301971] call_tmp[1959219] call_tmp[1959324] call_tmp[1959284] ret_tmp[1959343])
                (1959351 'move' call_tmp[1959341] ret_tmp[1959343])
                (1959354 'move' _iterator[1959339](1959357 call _getIterator[1303031] call_tmp[1959341]))
                {
                  val ret[1959360]:_ir_chpl_direct_pos_stride_range_iter[1303022] "dead after last mention" "RVV" "temp"
                  val call_tmp[1959362]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val stride[1959364]:int(64)[13] "temp"
                  (1959366 'move' stride[1959364](1959368 '.v' _iterator[1959339] F2_stride[1993906]))
                  (1959372 call chpl_range_check_stride[1102852] stride[1959364])
                  val call_tmp[1959374]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val default_arg_first[1959376]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val low[1959378]:int(64)[13] "temp"
                  (1959380 'move' low[1959378](1959382 '.v' _iterator[1959339] F0_low[1993898]))
                  (1959385 'move' default_arg_first[1959376](1959388 call chpl_checkIfRangeIterWillOverflow_default_first[1103217] low[1959378]))
                  const-val default_arg_last[1959390]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val high[1959392]:int(64)[13] "temp"
                  (1959394 'move' high[1959392](1959396 '.v' _iterator[1959339] F1_high[1993902]))
                  (1959399 'move' default_arg_last[1959390](1959402 call chpl_checkIfRangeIterWillOverflow_default_last[1103245] high[1959392]))
                  const-val _return_tmp_[1959404]:bool[10] "dead after last mention" "temp"
                  const-val low[1959406]:int(64)[13] "temp"
                  (1959408 'move' low[1959406](1959410 '.v' _iterator[1959339] F0_low[1993898]))
                  const-val high[1959413]:int(64)[13] "temp"
                  (1959415 'move' high[1959413](1959417 '.v' _iterator[1959339] F1_high[1993902]))
                  const-val stride[1959420]:int(64)[13] "temp"
                  (1959422 'move' stride[1959420](1959424 '.v' _iterator[1959339] F2_stride[1993906]))
                  (1959427 'move' _return_tmp_[1959404](1959430 call chpl_checkIfRangeIterWillOverflow[1096095] low[1959406] high[1959413] stride[1959420] default_arg_first[1959376] default_arg_last[1959390] 1))
                  val i[1959437]:int(64)[13] "dead at end of block" "insert auto destroy"
                  val call_tmp[1959439]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (1959441 'move' i[1959437] 0)
                  CForLoop[1959444] hazard
                  {
                    const-val yret[1959492]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (1959494 'move' yret[1959492] i[1959437])
                    const-val _yieldedIndex[1959497]:int(64)[13] "temp"
                    (1959499 'move' _yieldedIndex[1959497] i[1959437])
                    {
                      const-val i[1959503]:int(64)[13] "const" "index var" "insert auto destroy"
                      (1959505 'move' i[1959503] _yieldedIndex[1959497])
                      ref yret[1959508]:_ref(locale)[948863] "dead after last mention" "YVV" "temp"
                      ref call_tmp[1959510]:_ref(locale)[948863] "dead after last mention" "maybe param" "temp"
                      ref _this_tmp_[1959512]:_ref(_ddata(locale))[1255422] "dead after last mention" "temp"
                      (1959514 'move' _this_tmp_[1959512](1959517 call theData[1303269] info[1959191]))
                      val coerce_tmp[1959519]:_ddata(locale)[1255413] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (1959521 'move' coerce_tmp[1959519](1959523 'deref' _this_tmp_[1959512]))
                      (1959525 'move' call_tmp[1959510](1959528 call this[1303416] coerce_tmp[1959519] _yieldedIndex[1959497]))
                      ref _yieldedIndex[1959553]:_ref(locale)[948863] "temp"
                      (1959531 'move' _yieldedIndex[1959553] call_tmp[1959510])
                      {
                        ref elem[1959555]:_ref(locale)[948863] "index var" "insert auto destroy"
                        (1959557 'move' elem[1959555] _yieldedIndex[1959553])
                        ref yret[1959560]:_ref(locale)[948863] "dead after last mention" "YVV" "temp"
                        ref _yieldedIndex[1959562]:_ref(locale)[948863] "temp"
                        (1959564 'move' _yieldedIndex[1959562] elem[1959555])
                        {
                          ref i[1959568]:_ref(locale)[948863] "index var" "insert auto destroy"
                          (1959570 'move' i[1959568] _yieldedIndex[1959562])
                          ref yret[1959573]:_ref(locale)[948863] "dead after last mention" "YVV" "temp"
                          ref _yieldedIndex[1959575]:_ref(locale)[948863] "coforall index var" "temp"
                          (1959577 'move' _yieldedIndex[1959575] i[1959568])
                          {
                            ref loc[1959581]:_ref(locale)[948863] "coforall index var" "index var" "insert auto destroy"
                            (1959583 'move' loc[1959581] _yieldedIndex[1959575])
                            const-val tmp[1959586]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
                            const-val call_tmp[1959588]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
                            val _locale_tmp_[1959590]:BaseLocale[91204] "dead after last mention" "temp"
                            (1959592 'move' _locale_tmp_[1959590](1959595 call _value[89984] loc[1959581]))
                            (1959597 'move' call_tmp[1959588](1959599 '_wide_get_locale' _locale_tmp_[1959590]))
                            (1959601 'move' tmp[1959586] call_tmp[1959588])
                            val localeZeroGlobal_data[2050355]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1771125] "temp"
                            (2050357 call chpl__serialize[1770822] localeZeroGlobal[1771842] localeZeroGlobal_data[2050355])
                            val rvfDerefTmp[2050389]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1771125] "temp"
                            (2050392 'move' rvfDerefTmp[2050389] data[1771940])
                            val _args_foron_fn[2067111]:_class_localson_fn[2067095] "temp"
                            (2067115 'move' _args_foron_fn[2067111](2067113 'stack allocate class' _class_localson_fn[2067095]))
                            (2067117 '.=' _args_foron_fn[2067111] _0_tmp[2067098] tmp[1959586])
                            (2067121 '.=' _args_foron_fn[2067111] _1_root[2067100] root[1771960])
                            (2067125 '.=' _args_foron_fn[2067111] _2_localeZeroGlobal_data[2067102] localeZeroGlobal_data[2050355])
                            (2067129 '.=' _args_foron_fn[2067111] _3_rvfDerefTmp[2067104] rvfDerefTmp[2050389])
                            (2067133 '.=' _args_foron_fn[2067111] _4_id[2067106] id[1771844])
                            (2067137 '.=' _args_foron_fn[2067111] _5__coforallCount[2067108] _coforallCount[1772100])
                            val _args_vforon_fn[2067141]:c_void_ptr[149] "temp"
                            (2067145 'move' _args_vforon_fn[2067141](2067143 'cast_to_void_star' _args_foron_fn[2067111]))
                            val _args_sizeon_fn[2067147]:int(64)[13] "temp"
                            (2067151 'move' _args_sizeon_fn[2067147](2067149 'sizeof_bundle' _class_localson_fn[2067095]))
                            on(2067226 call wrapon_fn[2067153] tmp[1959586] _args_vforon_fn[2067141] _args_sizeon_fn[2067147] _args_foron_fn[2067111])
                            {
                            }
                            label _continueLabel[1959613]
                          }
                        }
                      }
                    }
                    {
                      const-val low[1959446]:int(64)[13] "temp"
                      (1959448 'move' low[1959446](1959450 '.v' _iterator[1959339] F0_low[1993898]))
                      (1959453 '=' i[1959437] low[1959446])
                    }
                    {
                      const-val high[1959457]:int(64)[13] "temp"
                      (1959459 'move' high[1959457](1959461 '.v' _iterator[1959339] F1_high[1993902]))
                      (1959464 '<=' i[1959437] high[1959457])
                    }
                    {
                      val call_tmp[1959468]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      const-val call_tmp[1959470]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val stride[1959472]:int(64)[13] "temp"
                      (1959474 'move' stride[1959472](1959476 '.v' _iterator[1959339] F2_stride[1993906]))
                      (1959479 'move' call_tmp[1959470] stride[1959472])
                      const-val stride[1959482]:int(64)[13] "temp"
                      (1959484 'move' stride[1959482](1959486 '.v' _iterator[1959339] F2_stride[1993906]))
                      (1959489 '+=' i[1959437] stride[1959482])
                    }
                  }
                  label _endchpl_direct_pos_stride_range_iter[1959544]
                }
                (1959547 call _freeIterator[1303204] _iterator[1959339])
                label _endchpl__serialViewIter[1959549]
              }
              (1908375 call _freeIterator[1303639] _iterator[1908289])
              label _endthese[1908377]
            }
            (1908380 call _freeIterator[1304244] _iterator[1908230])
            label _endthese[1908382]
          }
          label _breakLabel[1772306]
          val error[1787302]:Error[167984] "error variable" "temp"
          (1787304 'move' error[1787302] nil[44])
          (1772314 call _waitEndCount[1350098] _coforallCount[1772100] numTasks[1772107] error[1787302])
          val errorExists[2074657]:bool[10] "temp"
          (2074662 'move' errorExists[2074657](2074659 '!=' error[1787302] nil[44]))
          if errorExists[2074657]
          {
            (1787307 call chpl_propagate_error[170518] error[1787302])
          }
          (1824802 call _endCountFree[1233879] _coforallCount[1772100])
          (1824806 call _freeIterator[1304995] _iterator[1772123])
        }
      }
      (1824809 call chpl__autoDestroy[1435384] call_tmp[1771946])
      (1824812 call chpl__autoDestroy[1771579] data[1771940])
    }
    (1772529 return _void[55])
  }
  function chpl__destroyBroadcastedGlobal[1768271](ref arg localeZeroGlobal[1768273]:_ref(string)[937958], const in arg id[1768275]:int(64)[13]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val globalType[1768285]:string[26] "dead at end of block" "insert auto destroy" "type variable"
    const-val call_tmp[1768293]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1804208]:locale[28] "temp"
    (1768298 call here[90438] ret_tmp[1804208])
    (1804211 'move' call_tmp[1768293] ret_tmp[1804208])
    const-val call_tmp[1768299]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1768301 'move' call_tmp[1768299](1768304 call id[90521] call_tmp[1768293]))
    const-val root[1768307]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1768309 'move' root[1768307] call_tmp[1768299])
    {
      ref tmpIter[1768314]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287056] "dead at end of block" "maybe ref" "no copy" "reference to a const" "temp"
      (1768316 'move' tmpIter[1768314] Locales[113662])
      {
        const _coforallCount[1768447]:_EndCount(AtomicT(int(64)),int(64))[945362] "dead after last mention" "concurrently accessed" "const" "end count" "temp"
        (1768449 'move' _coforallCount[1768447](1768452 call _endCountAlloc[938837]))
        const-val numTasks[1768454]:int(64)[13] "dead at end of block" "temp"
        (1768456 'move' numTasks[1768454](1768459 call size[1536263] tmpIter[1768314]))
        (1768463 call _upEndCount[1325391] _coforallCount[1768447] numTasks[1768454])
        ref _indexOfInterest[1768468]:_ref(locale)[948863] "dead at end of block" "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1768470]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304310] "dead at end of block" "expr temp" "temp"
        (1768472 'move' _iterator[1768470](1768475 call _getIterator[1298128] tmpIter[1768314]))
        {
          val ret[1908022]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304316] "dead after last mention" "RVV" "temp"
          ref _indexOfInterest[1908024]:_ref(locale)[948863] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1908026]:_ic_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303705] "dead at end of block" "expr temp" "temp"
          val call_tmp[1908028]:[domain(1,int(64),false)] locale[1256505] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val this[1908218]:[domain(1,int(64),false)] locale[1287030] "temp"
          (1908223 'move' this[1908218](1908220 '.v' _iterator[1768470] F0_this[1988349]))
          (1908030 'move' call_tmp[1908028](1908033 call _value[1287085] this[1908218]))
          const-val call_tmp[1908035]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303711] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[1908037]:[domain(1,int(64),false)] locale[1256505] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1908039 'move' coerce_tmp[1908037] call_tmp[1908028])
          const-val default_arg_tasksPerLocale[1908042]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
          (1908044 'move' default_arg_tasksPerLocale[1908042](1908047 call these_default_tasksPerLocale[1298398] call_tmp[1908028]))
          const-val default_arg_ignoreRunning[1908049]:bool[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
          (1908051 'move' default_arg_ignoreRunning[1908049](1908054 call these_default_ignoreRunning[1298429] coerce_tmp[1908037]))
          const-val default_arg_minIndicesPerTask[1908056]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
          (1908058 'move' default_arg_minIndicesPerTask[1908056](1908061 call these_default_minIndicesPerTask[1298460] coerce_tmp[1908037]))
          const-val ret_tmp[1908063]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303711] "temp"
          (1908066 call these[1298282] coerce_tmp[1908037] default_arg_tasksPerLocale[1908042] default_arg_ignoreRunning[1908049] default_arg_minIndicesPerTask[1908056] ret_tmp[1908063])
          (1908072 'move' call_tmp[1908035] ret_tmp[1908063])
          (1908075 'move' _iterator[1908026](1908078 call _getIterator[1303720] call_tmp[1908035]))
          {
            val ret[1908081]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303711] "dead after last mention" "RVV" "temp"
            ref _indexOfInterest[1908083]:_ref(locale)[948863] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1908085]:_ic_chpl__serialViewIter[1303455] "dead at end of block" "expr temp" "temp"
            ref call_tmp[1908087]:_ref(domain(1,int(64),false))[1250968] "dead at end of block" "maybe param" "temp"
            const-val this[1908089]:[domain(1,int(64),false)] locale[1256505] "temp"
            (1908091 'move' this[1908089](1908093 '.v' _iterator[1908026] F0_this[1990457]))
            (1908096 'move' call_tmp[1908087](1908099 call dom[1258038] this[1908089]))
            const-val call_tmp[1908101]:_ir_chpl__serialViewIter[1303461] "dead at end of block" "maybe param" "temp"
            val coerce_tmp[1908103]:domain(1,int(64),false)[1250953] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (1908105 'move' coerce_tmp[1908103](1908107 'deref' call_tmp[1908087]))
            const-val ret_tmp[1908109]:_ir_chpl__serialViewIter[1303461] "temp"
            const-val this[1908111]:[domain(1,int(64),false)] locale[1256505] "temp"
            (1908113 'move' this[1908111](1908115 '.v' _iterator[1908026] F0_this[1990457]))
            (1908119 call chpl__serialViewIter[1298494] this[1908111] coerce_tmp[1908103] ret_tmp[1908109])
            (1908123 'move' call_tmp[1908101] ret_tmp[1908109])
            (1908126 'move' _iterator[1908085](1908129 call _getIterator[1303470] call_tmp[1908101]))
            {
              val ret[1958699]:_ir_chpl__serialViewIter[1303461] "dead after last mention" "RVV" "temp"
              val info[1958701]:[domain(1,int(64),false)] locale[1256505] "dead at end of block" "insert auto destroy"
              val tmp[1958703]:[domain(1,int(64),false)] locale[1256505] "dead at end of block" "expr temp" "insert auto destroy" "maybe copy elided" "maybe param" "temp"
              val tmp[1958705]:[domain(1,int(64),false)] locale[1256505] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val arr[1959125]:[domain(1,int(64),false)] locale[1256505] "temp"
              (1959130 'move' arr[1959125](1959127 '.v' _iterator[1908085] F0_arr[1992362]))
              (1958707 'move' tmp[1958705] arr[1959125])
              const-val arr[1959132]:[domain(1,int(64),false)] locale[1256505] "temp"
              (1959137 'move' arr[1959132](1959134 '.v' _iterator[1908085] F0_arr[1992362]))
              (1958710 'move' tmp[1958703] arr[1959132])
              const-val arr[1959139]:[domain(1,int(64),false)] locale[1256505] "temp"
              (1959144 'move' arr[1959139](1959141 '.v' _iterator[1908085] F0_arr[1992362]))
              (1958713 '=' info[1958701] arr[1959139])
              (1958716 'noop')
              const-val call_tmp[1958717]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              val coerce_tmp[1958719]:domain(1,int(64),false)[1250953] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              const-val viewDom[1959146]:domain(1,int(64),false)[1250953] "temp"
              (1959151 'move' viewDom[1959146](1959148 '.v' _iterator[1908085] F1_viewDom[1992366]))
              (1958721 'move' coerce_tmp[1958719] viewDom[1959146])
              const-val viewDom[1959153]:domain(1,int(64),false)[1250953] "temp"
              (1959158 'move' viewDom[1959153](1959155 '.v' _iterator[1908085] F1_viewDom[1992366]))
              (1958724 'move' call_tmp[1958717](1958727 call dsiLow[1300455] viewDom[1959153]))
              const-val call_tmp[1958729]:int(64)[13] "dead at end of block" "maybe param" "temp"
              const-val arr[1959160]:[domain(1,int(64),false)] locale[1256505] "temp"
              (1959165 'move' arr[1959160](1959162 '.v' _iterator[1908085] F0_arr[1992362]))
              (1958731 'move' call_tmp[1958729](1958734 call getDataIndex[1300714] arr[1959160] call_tmp[1958717]))
              const-val first[1958737]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              (1958739 'move' first[1958737] call_tmp[1958729])
              const-val call_tmp[1958742]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              val coerce_tmp[1958744]:domain(1,int(64),false)[1250953] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              const-val viewDom[1959167]:domain(1,int(64),false)[1250953] "temp"
              (1959172 'move' viewDom[1959167](1959169 '.v' _iterator[1908085] F1_viewDom[1992366]))
              (1958746 'move' coerce_tmp[1958744] viewDom[1959167])
              (1958749 'move' call_tmp[1958742](1958752 call dsiLow[1300455] coerce_tmp[1958744]))
              const-val call_tmp[1958754]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              (1958756 'move' call_tmp[1958754](1958759 call chpl__idxToInt[1026935] call_tmp[1958742]))
              const-val call_tmp[1958761]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              (1958763 'move' call_tmp[1958761](1958766 call +[949685] call_tmp[1958754]))
              const-val call_tmp[1958768]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              val coerce_tmp[1958770]:domain(1,int(64),false)[1250953] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              const-val viewDom[1959174]:domain(1,int(64),false)[1250953] "temp"
              (1959179 'move' viewDom[1959174](1959176 '.v' _iterator[1908085] F1_viewDom[1992366]))
              (1958772 'move' coerce_tmp[1958770] viewDom[1959174])
              (1958775 'move' call_tmp[1958768](1958778 call chpl_intToIdx[1301884] coerce_tmp[1958770] call_tmp[1958761]))
              const-val call_tmp[1958781]:int(64)[13] "dead at end of block" "maybe param" "temp"
              (1958783 'move' call_tmp[1958781](1958786 call getDataIndex[1300714] info[1958701] call_tmp[1958768]))
              const-val second[1958789]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              (1958791 'move' second[1958789] call_tmp[1958781])
              const-val call_tmp[1958794]:int(64)[13] "dead at end of block" "maybe param" "temp"
              (1958796 'move' call_tmp[1958794](1958799 call -[440454] call_tmp[1958781] call_tmp[1958729]))
              const-val step[1958802]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              (1958804 'move' step[1958802] call_tmp[1958794])
              const-val call_tmp[1958807]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              val coerce_tmp[1958809]:domain(1,int(64),false)[1250953] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              const-val viewDom[1959181]:domain(1,int(64),false)[1250953] "temp"
              (1959186 'move' viewDom[1959181](1959183 '.v' _iterator[1908085] F1_viewDom[1992366]))
              (1958811 'move' coerce_tmp[1958809] viewDom[1959181])
              (1958814 'move' call_tmp[1958807](1958817 call dsiNumIndices[1263653] coerce_tmp[1958809]))
              const-val call_tmp[1958819]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              (1958821 'move' call_tmp[1958819](1958824 call -[962245] call_tmp[1958807]))
              const-val call_tmp[1958826]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              (1958828 'move' call_tmp[1958826](1958831 call *[441866] call_tmp[1958819] call_tmp[1958794]))
              const-val call_tmp[1958834]:int(64)[13] "dead at end of block" "maybe param" "temp"
              (1958836 'move' call_tmp[1958834](1958839 call +[439674] call_tmp[1958729] call_tmp[1958826]))
              const-val last[1958842]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              (1958844 'move' last[1958842] call_tmp[1958834])
              val _indexOfInterest[1958847]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[1958849]:_ic_chpl_direct_pos_stride_range_iter[1303016] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[1958851]:_ir_chpl_direct_pos_stride_range_iter[1303022] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[1958853]:_ir_chpl_direct_pos_stride_range_iter[1303022] "temp"
              (1958856 call chpl_direct_pos_stride_range_iter[1301971] call_tmp[1958729] call_tmp[1958834] call_tmp[1958794] ret_tmp[1958853])
              (1958861 'move' call_tmp[1958851] ret_tmp[1958853])
              (1958864 'move' _iterator[1958849](1958867 call _getIterator[1303031] call_tmp[1958851]))
              {
                val ret[1958870]:_ir_chpl_direct_pos_stride_range_iter[1303022] "dead after last mention" "RVV" "temp"
                val call_tmp[1958872]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val stride[1958874]:int(64)[13] "temp"
                (1958876 'move' stride[1958874](1958878 '.v' _iterator[1958849] F2_stride[1993906]))
                (1958882 call chpl_range_check_stride[1102852] stride[1958874])
                val call_tmp[1958884]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val default_arg_first[1958886]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val low[1958888]:int(64)[13] "temp"
                (1958890 'move' low[1958888](1958892 '.v' _iterator[1958849] F0_low[1993898]))
                (1958895 'move' default_arg_first[1958886](1958898 call chpl_checkIfRangeIterWillOverflow_default_first[1103217] low[1958888]))
                const-val default_arg_last[1958900]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val high[1958902]:int(64)[13] "temp"
                (1958904 'move' high[1958902](1958906 '.v' _iterator[1958849] F1_high[1993902]))
                (1958909 'move' default_arg_last[1958900](1958912 call chpl_checkIfRangeIterWillOverflow_default_last[1103245] high[1958902]))
                const-val _return_tmp_[1958914]:bool[10] "dead after last mention" "temp"
                const-val low[1958916]:int(64)[13] "temp"
                (1958918 'move' low[1958916](1958920 '.v' _iterator[1958849] F0_low[1993898]))
                const-val high[1958923]:int(64)[13] "temp"
                (1958925 'move' high[1958923](1958927 '.v' _iterator[1958849] F1_high[1993902]))
                const-val stride[1958930]:int(64)[13] "temp"
                (1958932 'move' stride[1958930](1958934 '.v' _iterator[1958849] F2_stride[1993906]))
                (1958937 'move' _return_tmp_[1958914](1958940 call chpl_checkIfRangeIterWillOverflow[1096095] low[1958916] high[1958923] stride[1958930] default_arg_first[1958886] default_arg_last[1958900] 1))
                val i[1958947]:int(64)[13] "dead at end of block" "insert auto destroy"
                val call_tmp[1958949]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1958951 'move' i[1958947] 0)
                CForLoop[1958954] hazard
                {
                  const-val yret[1959002]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (1959004 'move' yret[1959002] i[1958947])
                  const-val _yieldedIndex[1959007]:int(64)[13] "temp"
                  (1959009 'move' _yieldedIndex[1959007] i[1958947])
                  {
                    const-val i[1959013]:int(64)[13] "const" "index var" "insert auto destroy"
                    (1959015 'move' i[1959013] _yieldedIndex[1959007])
                    ref yret[1959018]:_ref(locale)[948863] "dead after last mention" "YVV" "temp"
                    ref call_tmp[1959020]:_ref(locale)[948863] "dead after last mention" "maybe param" "temp"
                    ref _this_tmp_[1959022]:_ref(_ddata(locale))[1255422] "dead after last mention" "temp"
                    (1959024 'move' _this_tmp_[1959022](1959027 call theData[1303269] info[1958701]))
                    val coerce_tmp[1959029]:_ddata(locale)[1255413] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1959031 'move' coerce_tmp[1959029](1959033 'deref' _this_tmp_[1959022]))
                    (1959035 'move' call_tmp[1959020](1959038 call this[1303416] coerce_tmp[1959029] _yieldedIndex[1959007]))
                    ref _yieldedIndex[1959063]:_ref(locale)[948863] "temp"
                    (1959041 'move' _yieldedIndex[1959063] call_tmp[1959020])
                    {
                      ref elem[1959065]:_ref(locale)[948863] "index var" "insert auto destroy"
                      (1959067 'move' elem[1959065] _yieldedIndex[1959063])
                      ref yret[1959070]:_ref(locale)[948863] "dead after last mention" "YVV" "temp"
                      ref _yieldedIndex[1959072]:_ref(locale)[948863] "temp"
                      (1959074 'move' _yieldedIndex[1959072] elem[1959065])
                      {
                        ref i[1959078]:_ref(locale)[948863] "index var" "insert auto destroy"
                        (1959080 'move' i[1959078] _yieldedIndex[1959072])
                        ref yret[1959083]:_ref(locale)[948863] "dead after last mention" "YVV" "temp"
                        ref _yieldedIndex[1959085]:_ref(locale)[948863] "coforall index var" "temp"
                        (1959087 'move' _yieldedIndex[1959085] i[1959078])
                        {
                          ref loc[1959091]:_ref(locale)[948863] "coforall index var" "index var" "insert auto destroy"
                          (1959093 'move' loc[1959091] _yieldedIndex[1959085])
                          const-val tmp[1959096]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
                          const-val call_tmp[1959098]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
                          val _locale_tmp_[1959100]:BaseLocale[91204] "dead after last mention" "temp"
                          (1959102 'move' _locale_tmp_[1959100](1959105 call _value[89984] loc[1959091]))
                          (1959107 'move' call_tmp[1959098](1959109 '_wide_get_locale' _locale_tmp_[1959100]))
                          (1959111 'move' tmp[1959096] call_tmp[1959098])
                          val _args_foron_fn[2066980]:_class_localson_fn[2066966] "temp"
                          (2066984 'move' _args_foron_fn[2066980](2066982 'stack allocate class' _class_localson_fn[2066966]))
                          (2066986 '.=' _args_foron_fn[2066980] _0_tmp[2066969] tmp[1959096])
                          (2066990 '.=' _args_foron_fn[2066980] _1_root[2066971] root[1768307])
                          (2066994 '.=' _args_foron_fn[2066980] _2_id[2066973] id[1768275])
                          ref tmp[2066998]:string[26] "temp"
                          (2067002 'move' tmp[2066998](2067000 'set reference' globalType[1768285]))
                          (2067004 '.=' _args_foron_fn[2066980] _3_globalType[2066975] tmp[2066998])
                          (2067008 '.=' _args_foron_fn[2066980] _4__coforallCount[2066977] _coforallCount[1768447])
                          val _args_vforon_fn[2067012]:c_void_ptr[149] "temp"
                          (2067016 'move' _args_vforon_fn[2067012](2067014 'cast_to_void_star' _args_foron_fn[2066980]))
                          val _args_sizeon_fn[2067018]:int(64)[13] "temp"
                          (2067022 'move' _args_sizeon_fn[2067018](2067020 'sizeof_bundle' _class_localson_fn[2066966]))
                          on(2067089 call wrapon_fn[2067024] tmp[1959096] _args_vforon_fn[2067012] _args_sizeon_fn[2067018] _args_foron_fn[2066980])
                          {
                          }
                          label _continueLabel[1959122]
                        }
                      }
                    }
                  }
                  {
                    const-val low[1958956]:int(64)[13] "temp"
                    (1958958 'move' low[1958956](1958960 '.v' _iterator[1958849] F0_low[1993898]))
                    (1958963 '=' i[1958947] low[1958956])
                  }
                  {
                    const-val high[1958967]:int(64)[13] "temp"
                    (1958969 'move' high[1958967](1958971 '.v' _iterator[1958849] F1_high[1993902]))
                    (1958974 '<=' i[1958947] high[1958967])
                  }
                  {
                    val call_tmp[1958978]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    const-val call_tmp[1958980]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val stride[1958982]:int(64)[13] "temp"
                    (1958984 'move' stride[1958982](1958986 '.v' _iterator[1958849] F2_stride[1993906]))
                    (1958989 'move' call_tmp[1958980] stride[1958982])
                    const-val stride[1958992]:int(64)[13] "temp"
                    (1958994 'move' stride[1958992](1958996 '.v' _iterator[1958849] F2_stride[1993906]))
                    (1958999 '+=' i[1958947] stride[1958992])
                  }
                }
                label _endchpl_direct_pos_stride_range_iter[1959054]
              }
              (1959057 call _freeIterator[1303204] _iterator[1958849])
              label _endchpl__serialViewIter[1959059]
            }
            (1908171 call _freeIterator[1303639] _iterator[1908085])
            label _endthese[1908173]
          }
          (1908176 call _freeIterator[1304244] _iterator[1908026])
          label _endthese[1908178]
        }
        label _breakLabel[1768625]
        val error[1787289]:Error[167984] "error variable" "temp"
        (1787291 'move' error[1787289] nil[44])
        (1768633 call _waitEndCount[1350098] _coforallCount[1768447] numTasks[1768454] error[1787289])
        val errorExists[2074649]:bool[10] "temp"
        (2074654 'move' errorExists[2074649](2074651 '!=' error[1787289] nil[44]))
        if errorExists[2074649]
        {
          (1787294 call chpl_propagate_error[170518] error[1787289])
        }
        (1824786 call _endCountFree[1233879] _coforallCount[1768447])
        (1824790 call _freeIterator[1304995] _iterator[1768470])
      }
    }
    (1824792 call chpl__autoDestroy[1435384] call_tmp[1768293])
    (1768819 return _void[55])
  }
  function chpl__destroyBroadcastedGlobal[1772537](const  ref arg localeZeroGlobal[1772539]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642], const in arg id[1772541]:int(64)[13]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val globalType[1772551]:_RuntimeTypeInfo[1253692] "dead at end of block" "insert auto destroy"
    (1772555 'move' globalType[1772551](1773302 call chpl__convertValueToRuntimeType[1434007] localeZeroGlobal[1772539]))
    const-val call_tmp[1772559]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1804232]:locale[28] "temp"
    (1772564 call here[90438] ret_tmp[1804232])
    (1804235 'move' call_tmp[1772559] ret_tmp[1804232])
    const-val call_tmp[1772565]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1772567 'move' call_tmp[1772565](1772570 call id[90521] call_tmp[1772559]))
    const-val root[1772573]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1772575 'move' root[1772573] call_tmp[1772565])
    {
      ref tmpIter[1772580]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287056] "dead at end of block" "maybe ref" "no copy" "reference to a const" "temp"
      (1772582 'move' tmpIter[1772580] Locales[113662])
      {
        const _coforallCount[1772713]:_EndCount(AtomicT(int(64)),int(64))[945362] "dead after last mention" "concurrently accessed" "const" "end count" "temp"
        (1772715 'move' _coforallCount[1772713](1772718 call _endCountAlloc[938837]))
        const-val numTasks[1772720]:int(64)[13] "dead at end of block" "temp"
        (1772722 'move' numTasks[1772720](1772725 call size[1536263] tmpIter[1772580]))
        (1772729 call _upEndCount[1325391] _coforallCount[1772713] numTasks[1772720])
        ref _indexOfInterest[1772734]:_ref(locale)[948863] "dead at end of block" "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1772736]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304310] "dead at end of block" "expr temp" "temp"
        (1772738 'move' _iterator[1772736](1772741 call _getIterator[1298128] tmpIter[1772580]))
        {
          val ret[1908431]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304316] "dead after last mention" "RVV" "temp"
          ref _indexOfInterest[1908433]:_ref(locale)[948863] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1908435]:_ic_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303705] "dead at end of block" "expr temp" "temp"
          val call_tmp[1908437]:[domain(1,int(64),false)] locale[1256505] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val this[1908627]:[domain(1,int(64),false)] locale[1287030] "temp"
          (1908632 'move' this[1908627](1908629 '.v' _iterator[1772736] F0_this[1988349]))
          (1908439 'move' call_tmp[1908437](1908442 call _value[1287085] this[1908627]))
          const-val call_tmp[1908444]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303711] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[1908446]:[domain(1,int(64),false)] locale[1256505] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1908448 'move' coerce_tmp[1908446] call_tmp[1908437])
          const-val default_arg_tasksPerLocale[1908451]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
          (1908453 'move' default_arg_tasksPerLocale[1908451](1908456 call these_default_tasksPerLocale[1298398] call_tmp[1908437]))
          const-val default_arg_ignoreRunning[1908458]:bool[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
          (1908460 'move' default_arg_ignoreRunning[1908458](1908463 call these_default_ignoreRunning[1298429] coerce_tmp[1908446]))
          const-val default_arg_minIndicesPerTask[1908465]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
          (1908467 'move' default_arg_minIndicesPerTask[1908465](1908470 call these_default_minIndicesPerTask[1298460] coerce_tmp[1908446]))
          const-val ret_tmp[1908472]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303711] "temp"
          (1908475 call these[1298282] coerce_tmp[1908446] default_arg_tasksPerLocale[1908451] default_arg_ignoreRunning[1908458] default_arg_minIndicesPerTask[1908465] ret_tmp[1908472])
          (1908481 'move' call_tmp[1908444] ret_tmp[1908472])
          (1908484 'move' _iterator[1908435](1908487 call _getIterator[1303720] call_tmp[1908444]))
          {
            val ret[1908490]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303711] "dead after last mention" "RVV" "temp"
            ref _indexOfInterest[1908492]:_ref(locale)[948863] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1908494]:_ic_chpl__serialViewIter[1303455] "dead at end of block" "expr temp" "temp"
            ref call_tmp[1908496]:_ref(domain(1,int(64),false))[1250968] "dead at end of block" "maybe param" "temp"
            const-val this[1908498]:[domain(1,int(64),false)] locale[1256505] "temp"
            (1908500 'move' this[1908498](1908502 '.v' _iterator[1908435] F0_this[1990457]))
            (1908505 'move' call_tmp[1908496](1908508 call dom[1258038] this[1908498]))
            const-val call_tmp[1908510]:_ir_chpl__serialViewIter[1303461] "dead at end of block" "maybe param" "temp"
            val coerce_tmp[1908512]:domain(1,int(64),false)[1250953] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (1908514 'move' coerce_tmp[1908512](1908516 'deref' call_tmp[1908496]))
            const-val ret_tmp[1908518]:_ir_chpl__serialViewIter[1303461] "temp"
            const-val this[1908520]:[domain(1,int(64),false)] locale[1256505] "temp"
            (1908522 'move' this[1908520](1908524 '.v' _iterator[1908435] F0_this[1990457]))
            (1908528 call chpl__serialViewIter[1298494] this[1908520] coerce_tmp[1908512] ret_tmp[1908518])
            (1908532 'move' call_tmp[1908510] ret_tmp[1908518])
            (1908535 'move' _iterator[1908494](1908538 call _getIterator[1303470] call_tmp[1908510]))
            {
              val ret[1959680]:_ir_chpl__serialViewIter[1303461] "dead after last mention" "RVV" "temp"
              val info[1959682]:[domain(1,int(64),false)] locale[1256505] "dead at end of block" "insert auto destroy"
              val tmp[1959684]:[domain(1,int(64),false)] locale[1256505] "dead at end of block" "expr temp" "insert auto destroy" "maybe copy elided" "maybe param" "temp"
              val tmp[1959686]:[domain(1,int(64),false)] locale[1256505] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val arr[1960106]:[domain(1,int(64),false)] locale[1256505] "temp"
              (1960111 'move' arr[1960106](1960108 '.v' _iterator[1908494] F0_arr[1992362]))
              (1959688 'move' tmp[1959686] arr[1960106])
              const-val arr[1960113]:[domain(1,int(64),false)] locale[1256505] "temp"
              (1960118 'move' arr[1960113](1960115 '.v' _iterator[1908494] F0_arr[1992362]))
              (1959691 'move' tmp[1959684] arr[1960113])
              const-val arr[1960120]:[domain(1,int(64),false)] locale[1256505] "temp"
              (1960125 'move' arr[1960120](1960122 '.v' _iterator[1908494] F0_arr[1992362]))
              (1959694 '=' info[1959682] arr[1960120])
              (1959697 'noop')
              const-val call_tmp[1959698]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              val coerce_tmp[1959700]:domain(1,int(64),false)[1250953] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              const-val viewDom[1960127]:domain(1,int(64),false)[1250953] "temp"
              (1960132 'move' viewDom[1960127](1960129 '.v' _iterator[1908494] F1_viewDom[1992366]))
              (1959702 'move' coerce_tmp[1959700] viewDom[1960127])
              const-val viewDom[1960134]:domain(1,int(64),false)[1250953] "temp"
              (1960139 'move' viewDom[1960134](1960136 '.v' _iterator[1908494] F1_viewDom[1992366]))
              (1959705 'move' call_tmp[1959698](1959708 call dsiLow[1300455] viewDom[1960134]))
              const-val call_tmp[1959710]:int(64)[13] "dead at end of block" "maybe param" "temp"
              const-val arr[1960141]:[domain(1,int(64),false)] locale[1256505] "temp"
              (1960146 'move' arr[1960141](1960143 '.v' _iterator[1908494] F0_arr[1992362]))
              (1959712 'move' call_tmp[1959710](1959715 call getDataIndex[1300714] arr[1960141] call_tmp[1959698]))
              const-val first[1959718]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              (1959720 'move' first[1959718] call_tmp[1959710])
              const-val call_tmp[1959723]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              val coerce_tmp[1959725]:domain(1,int(64),false)[1250953] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              const-val viewDom[1960148]:domain(1,int(64),false)[1250953] "temp"
              (1960153 'move' viewDom[1960148](1960150 '.v' _iterator[1908494] F1_viewDom[1992366]))
              (1959727 'move' coerce_tmp[1959725] viewDom[1960148])
              (1959730 'move' call_tmp[1959723](1959733 call dsiLow[1300455] coerce_tmp[1959725]))
              const-val call_tmp[1959735]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              (1959737 'move' call_tmp[1959735](1959740 call chpl__idxToInt[1026935] call_tmp[1959723]))
              const-val call_tmp[1959742]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              (1959744 'move' call_tmp[1959742](1959747 call +[949685] call_tmp[1959735]))
              const-val call_tmp[1959749]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              val coerce_tmp[1959751]:domain(1,int(64),false)[1250953] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              const-val viewDom[1960155]:domain(1,int(64),false)[1250953] "temp"
              (1960160 'move' viewDom[1960155](1960157 '.v' _iterator[1908494] F1_viewDom[1992366]))
              (1959753 'move' coerce_tmp[1959751] viewDom[1960155])
              (1959756 'move' call_tmp[1959749](1959759 call chpl_intToIdx[1301884] coerce_tmp[1959751] call_tmp[1959742]))
              const-val call_tmp[1959762]:int(64)[13] "dead at end of block" "maybe param" "temp"
              (1959764 'move' call_tmp[1959762](1959767 call getDataIndex[1300714] info[1959682] call_tmp[1959749]))
              const-val second[1959770]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              (1959772 'move' second[1959770] call_tmp[1959762])
              const-val call_tmp[1959775]:int(64)[13] "dead at end of block" "maybe param" "temp"
              (1959777 'move' call_tmp[1959775](1959780 call -[440454] call_tmp[1959762] call_tmp[1959710]))
              const-val step[1959783]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              (1959785 'move' step[1959783] call_tmp[1959775])
              const-val call_tmp[1959788]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              val coerce_tmp[1959790]:domain(1,int(64),false)[1250953] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              const-val viewDom[1960162]:domain(1,int(64),false)[1250953] "temp"
              (1960167 'move' viewDom[1960162](1960164 '.v' _iterator[1908494] F1_viewDom[1992366]))
              (1959792 'move' coerce_tmp[1959790] viewDom[1960162])
              (1959795 'move' call_tmp[1959788](1959798 call dsiNumIndices[1263653] coerce_tmp[1959790]))
              const-val call_tmp[1959800]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              (1959802 'move' call_tmp[1959800](1959805 call -[962245] call_tmp[1959788]))
              const-val call_tmp[1959807]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              (1959809 'move' call_tmp[1959807](1959812 call *[441866] call_tmp[1959800] call_tmp[1959775]))
              const-val call_tmp[1959815]:int(64)[13] "dead at end of block" "maybe param" "temp"
              (1959817 'move' call_tmp[1959815](1959820 call +[439674] call_tmp[1959710] call_tmp[1959807]))
              const-val last[1959823]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              (1959825 'move' last[1959823] call_tmp[1959815])
              val _indexOfInterest[1959828]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[1959830]:_ic_chpl_direct_pos_stride_range_iter[1303016] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[1959832]:_ir_chpl_direct_pos_stride_range_iter[1303022] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[1959834]:_ir_chpl_direct_pos_stride_range_iter[1303022] "temp"
              (1959837 call chpl_direct_pos_stride_range_iter[1301971] call_tmp[1959710] call_tmp[1959815] call_tmp[1959775] ret_tmp[1959834])
              (1959842 'move' call_tmp[1959832] ret_tmp[1959834])
              (1959845 'move' _iterator[1959830](1959848 call _getIterator[1303031] call_tmp[1959832]))
              {
                val ret[1959851]:_ir_chpl_direct_pos_stride_range_iter[1303022] "dead after last mention" "RVV" "temp"
                val call_tmp[1959853]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val stride[1959855]:int(64)[13] "temp"
                (1959857 'move' stride[1959855](1959859 '.v' _iterator[1959830] F2_stride[1993906]))
                (1959863 call chpl_range_check_stride[1102852] stride[1959855])
                val call_tmp[1959865]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val default_arg_first[1959867]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val low[1959869]:int(64)[13] "temp"
                (1959871 'move' low[1959869](1959873 '.v' _iterator[1959830] F0_low[1993898]))
                (1959876 'move' default_arg_first[1959867](1959879 call chpl_checkIfRangeIterWillOverflow_default_first[1103217] low[1959869]))
                const-val default_arg_last[1959881]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val high[1959883]:int(64)[13] "temp"
                (1959885 'move' high[1959883](1959887 '.v' _iterator[1959830] F1_high[1993902]))
                (1959890 'move' default_arg_last[1959881](1959893 call chpl_checkIfRangeIterWillOverflow_default_last[1103245] high[1959883]))
                const-val _return_tmp_[1959895]:bool[10] "dead after last mention" "temp"
                const-val low[1959897]:int(64)[13] "temp"
                (1959899 'move' low[1959897](1959901 '.v' _iterator[1959830] F0_low[1993898]))
                const-val high[1959904]:int(64)[13] "temp"
                (1959906 'move' high[1959904](1959908 '.v' _iterator[1959830] F1_high[1993902]))
                const-val stride[1959911]:int(64)[13] "temp"
                (1959913 'move' stride[1959911](1959915 '.v' _iterator[1959830] F2_stride[1993906]))
                (1959918 'move' _return_tmp_[1959895](1959921 call chpl_checkIfRangeIterWillOverflow[1096095] low[1959897] high[1959904] stride[1959911] default_arg_first[1959867] default_arg_last[1959881] 1))
                val i[1959928]:int(64)[13] "dead at end of block" "insert auto destroy"
                val call_tmp[1959930]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1959932 'move' i[1959928] 0)
                CForLoop[1959935] hazard
                {
                  const-val yret[1959983]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (1959985 'move' yret[1959983] i[1959928])
                  const-val _yieldedIndex[1959988]:int(64)[13] "temp"
                  (1959990 'move' _yieldedIndex[1959988] i[1959928])
                  {
                    const-val i[1959994]:int(64)[13] "const" "index var" "insert auto destroy"
                    (1959996 'move' i[1959994] _yieldedIndex[1959988])
                    ref yret[1959999]:_ref(locale)[948863] "dead after last mention" "YVV" "temp"
                    ref call_tmp[1960001]:_ref(locale)[948863] "dead after last mention" "maybe param" "temp"
                    ref _this_tmp_[1960003]:_ref(_ddata(locale))[1255422] "dead after last mention" "temp"
                    (1960005 'move' _this_tmp_[1960003](1960008 call theData[1303269] info[1959682]))
                    val coerce_tmp[1960010]:_ddata(locale)[1255413] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1960012 'move' coerce_tmp[1960010](1960014 'deref' _this_tmp_[1960003]))
                    (1960016 'move' call_tmp[1960001](1960019 call this[1303416] coerce_tmp[1960010] _yieldedIndex[1959988]))
                    ref _yieldedIndex[1960044]:_ref(locale)[948863] "temp"
                    (1960022 'move' _yieldedIndex[1960044] call_tmp[1960001])
                    {
                      ref elem[1960046]:_ref(locale)[948863] "index var" "insert auto destroy"
                      (1960048 'move' elem[1960046] _yieldedIndex[1960044])
                      ref yret[1960051]:_ref(locale)[948863] "dead after last mention" "YVV" "temp"
                      ref _yieldedIndex[1960053]:_ref(locale)[948863] "temp"
                      (1960055 'move' _yieldedIndex[1960053] elem[1960046])
                      {
                        ref i[1960059]:_ref(locale)[948863] "index var" "insert auto destroy"
                        (1960061 'move' i[1960059] _yieldedIndex[1960053])
                        ref yret[1960064]:_ref(locale)[948863] "dead after last mention" "YVV" "temp"
                        ref _yieldedIndex[1960066]:_ref(locale)[948863] "coforall index var" "temp"
                        (1960068 'move' _yieldedIndex[1960066] i[1960059])
                        {
                          ref loc[1960072]:_ref(locale)[948863] "coforall index var" "index var" "insert auto destroy"
                          (1960074 'move' loc[1960072] _yieldedIndex[1960066])
                          const-val tmp[1960077]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
                          const-val call_tmp[1960079]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
                          val _locale_tmp_[1960081]:BaseLocale[91204] "dead after last mention" "temp"
                          (1960083 'move' _locale_tmp_[1960081](1960086 call _value[89984] loc[1960072]))
                          (1960088 'move' call_tmp[1960079](1960090 '_wide_get_locale' _locale_tmp_[1960081]))
                          (1960092 'move' tmp[1960077] call_tmp[1960079])
                          val _args_foron_fn[2067246]:_class_localson_fn[2067232] "temp"
                          (2067250 'move' _args_foron_fn[2067246](2067248 'stack allocate class' _class_localson_fn[2067232]))
                          (2067252 '.=' _args_foron_fn[2067246] _0_tmp[2067235] tmp[1960077])
                          (2067256 '.=' _args_foron_fn[2067246] _1_root[2067237] root[1772573])
                          (2067260 '.=' _args_foron_fn[2067246] _2_id[2067239] id[1772541])
                          ref tmp[2067264]:_RuntimeTypeInfo[1253692] "temp"
                          (2067268 'move' tmp[2067264](2067266 'set reference' globalType[1772551]))
                          (2067270 '.=' _args_foron_fn[2067246] _3_globalType[2067241] tmp[2067264])
                          (2067274 '.=' _args_foron_fn[2067246] _4__coforallCount[2067243] _coforallCount[1772713])
                          val _args_vforon_fn[2067278]:c_void_ptr[149] "temp"
                          (2067282 'move' _args_vforon_fn[2067278](2067280 'cast_to_void_star' _args_foron_fn[2067246]))
                          val _args_sizeon_fn[2067284]:int(64)[13] "temp"
                          (2067288 'move' _args_sizeon_fn[2067284](2067286 'sizeof_bundle' _class_localson_fn[2067232]))
                          on(2067355 call wrapon_fn[2067290] tmp[1960077] _args_vforon_fn[2067278] _args_sizeon_fn[2067284] _args_foron_fn[2067246])
                          {
                          }
                          label _continueLabel[1960103]
                        }
                      }
                    }
                  }
                  {
                    const-val low[1959937]:int(64)[13] "temp"
                    (1959939 'move' low[1959937](1959941 '.v' _iterator[1959830] F0_low[1993898]))
                    (1959944 '=' i[1959928] low[1959937])
                  }
                  {
                    const-val high[1959948]:int(64)[13] "temp"
                    (1959950 'move' high[1959948](1959952 '.v' _iterator[1959830] F1_high[1993902]))
                    (1959955 '<=' i[1959928] high[1959948])
                  }
                  {
                    val call_tmp[1959959]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    const-val call_tmp[1959961]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val stride[1959963]:int(64)[13] "temp"
                    (1959965 'move' stride[1959963](1959967 '.v' _iterator[1959830] F2_stride[1993906]))
                    (1959970 'move' call_tmp[1959961] stride[1959963])
                    const-val stride[1959973]:int(64)[13] "temp"
                    (1959975 'move' stride[1959973](1959977 '.v' _iterator[1959830] F2_stride[1993906]))
                    (1959980 '+=' i[1959928] stride[1959973])
                  }
                }
                label _endchpl_direct_pos_stride_range_iter[1960035]
              }
              (1960038 call _freeIterator[1303204] _iterator[1959830])
              label _endchpl__serialViewIter[1960040]
            }
            (1908580 call _freeIterator[1303639] _iterator[1908494])
            label _endthese[1908582]
          }
          (1908585 call _freeIterator[1304244] _iterator[1908435])
          label _endthese[1908587]
        }
        label _breakLabel[1772891]
        val error[1787315]:Error[167984] "error variable" "temp"
        (1787317 'move' error[1787315] nil[44])
        (1772899 call _waitEndCount[1350098] _coforallCount[1772713] numTasks[1772720] error[1787315])
        val errorExists[2074665]:bool[10] "temp"
        (2074670 'move' errorExists[2074665](2074667 '!=' error[1787315] nil[44]))
        if errorExists[2074665]
        {
          (1787320 call chpl_propagate_error[170518] error[1787315])
        }
        (1824822 call _endCountFree[1233879] _coforallCount[1772713])
        (1824826 call _freeIterator[1304995] _iterator[1772736])
      }
    }
    (1824828 call chpl__autoDestroy[1435384] call_tmp[1772559])
    (1773085 return _void[55])
  }
  function on_fn[1767905](const in arg root[1767909]:int(64)[13], const  ref arg localeZeroGlobal[1767911]:_ref(string)[937958], const in arg data[1767913]:__serializeHelper[28089], const in arg id[1767915]:int(64)[13], const in arg _coforallCount[1781913]:_EndCount(AtomicT(int(64)),int(64))[945362]) : void[4] "cobegin or coforall" "non blocking" "on" "resolved"
  {
    {
      const-val call_tmp[1767919]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1804202]:locale[28] "temp"
      (1767924 call here[90438] ret_tmp[1804202])
      (1804205 'move' call_tmp[1767919] ret_tmp[1804202])
      const-val call_tmp[1767925]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1767927 'move' call_tmp[1767925](1767930 call id[90521] call_tmp[1767919]))
      const-val call_tmp[1767933]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1767935 'move' call_tmp[1767933](1767938 call !=[436050] call_tmp[1767925] root[1767909]))
      const-val call_tmp[1767941]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1767943 'move' call_tmp[1767941] call_tmp[1767933])
      if call_tmp[1767941]
      {
        val call_tmp[1767950]:string[26] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1767956]:string[26] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1814702]:string[26] "temp"
        val rvfRerefTmp[2050349]:__serializeHelper[28089] "temp"
        (2050352 'move' rvfRerefTmp[2050349] data[1767913])
        (1767964 call chpl__deserialize[1766908] rvfRerefTmp[2050349] ret_tmp[1814702])
        (1814705 'move' call_tmp[1767956] ret_tmp[1814702])
        const-val temp[1767966]:string[26] "dead at end of block" "no auto destroy" "no copy"
        (1767968 'move' temp[1767966] call_tmp[1767956])
        const-val call_tmp[1767972]:c_void_ptr[149] "dead at end of block" "maybe param" "temp"
        (1767974 'move' call_tmp[1767972](1767977 call chpl_get_global_serialize_table[171479] id[1767915]))
        const-val destVoidPtr[1767979]:c_void_ptr[149] "dead at end of block" "const" "insert auto destroy"
        (1767981 'move' destVoidPtr[1767979](1768942 call chpl__initCopy[945261] call_tmp[1767972]))
        val call_tmp[1767985]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[1767991]:c_ptr(string)[1768948] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[1767998]:c_ptr(string)[1768948] "dead at end of block" "maybe param" "temp"
        (1768000 'move' call_tmp[1767998](1768003 call _cast[1768968] destVoidPtr[1767979]))
        const dest[1768006]:c_ptr(string)[1768948] "dead at end of block" "const" "insert auto destroy"
        (1768008 'move' dest[1768006](1768997 call chpl__initCopy[1768999] call_tmp[1767998]))
        ref call_tmp[1768014]:_ref(string)[937958] "dead after last mention" "maybe param" "temp"
        (1768016 'move' call_tmp[1768014](1768022 call deref[1769018] dest[1768006]))
        (1768023 '=' call_tmp[1768014] temp[1767966])
      }
      (1824780 call chpl__autoDestroy[1435384] call_tmp[1767919])
    }
    (1768034 return _void[55])
  }
  function on_fn[1768516](const in arg root[1768520]:int(64)[13], const in arg id[1768522]:int(64)[13], const  ref arg globalType[1781915]:_ref(string)[937958], const in arg _coforallCount[1781917]:_EndCount(AtomicT(int(64)),int(64))[945362]) : void[4] "cobegin or coforall" "non blocking" "on" "resolved"
  {
    {
      const-val call_tmp[1768526]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1804214]:locale[28] "temp"
      (1768531 call here[90438] ret_tmp[1804214])
      (1804217 'move' call_tmp[1768526] ret_tmp[1804214])
      const-val call_tmp[1768532]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1768534 'move' call_tmp[1768532](1768537 call id[90521] call_tmp[1768526]))
      const-val call_tmp[1768540]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1768542 'move' call_tmp[1768540](1768545 call !=[436050] call_tmp[1768532] root[1768520]))
      const-val call_tmp[1768548]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1768550 'move' call_tmp[1768548] call_tmp[1768540])
      if call_tmp[1768548]
      {
        const-val call_tmp[1768557]:c_void_ptr[149] "dead at end of block" "maybe param" "temp"
        (1768559 'move' call_tmp[1768557](1768562 call chpl_get_global_serialize_table[171479] id[1768522]))
        const-val voidPtr[1768564]:c_void_ptr[149] "dead at end of block" "const" "insert auto destroy"
        (1768566 'move' voidPtr[1768564](1769094 call chpl__initCopy[945261] call_tmp[1768557]))
        val call_tmp[1768570]:c_ptr(string)[1768948] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[1768577]:c_ptr(string)[1768948] "dead at end of block" "maybe param" "temp"
        (1768579 'move' call_tmp[1768577](1768582 call _cast[1768968] voidPtr[1768564]))
        val ptr[1768585]:c_ptr(string)[1768948] "dead at end of block" "insert auto destroy"
        (1768587 'move' ptr[1768585](1769106 call chpl__initCopy[1768999] call_tmp[1768577]))
        ref call_tmp[1768591]:_ref(string)[937958] "dead at end of block" "maybe param" "temp"
        (1768593 'move' call_tmp[1768591](1768599 call deref[1769018] ptr[1768585]))
        ref temp[1768600]:_ref(string)[937958] "dead at end of block" "no auto destroy" "no copy"
        (1768602 'move' temp[1768600] call_tmp[1768591])
        (1768610 call chpl__autoDestroy[1435320] temp[1768600])
      }
      (1824796 call chpl__autoDestroy[1435384] call_tmp[1768526])
    }
    (1768619 return _void[55])
  }
  function on_fn[1772171](const in arg root[1772175]:int(64)[13], const in arg localeZeroGlobal[1772177]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1771125], const in arg data[1772179]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1771125], const in arg id[1772181]:int(64)[13], const in arg _coforallCount[1781919]:_EndCount(AtomicT(int(64)),int(64))[945362]) : void[4] "cobegin or coforall" "non blocking" "on" "resolved"
  {
    val localeZeroGlobal[2050362]:domain(1,int(64),false)[1252616] "temp"
    ref localeZeroGlobal[2050363]:domain(1,int(64),false)[1252616] "temp"
    val ds_info[2050369]:_RuntimeTypeInfo[1253692]
    ref tmp[2050372]:domain(1,int(64),false)[1252616] "temp"
    (2050376 'move' tmp[2050372](2050374 'set reference' localeZeroGlobal[2050362]))
    (2050366 call chpl__deserialize[1771660] ds_info[2050369] localeZeroGlobal[1772177] tmp[2050372])
    (2050381 'move' localeZeroGlobal[2050363](2050379 'set reference' localeZeroGlobal[2050362]))
    {
      const-val call_tmp[1772185]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1804226]:locale[28] "temp"
      (1772190 call here[90438] ret_tmp[1804226])
      (1804229 'move' call_tmp[1772185] ret_tmp[1804226])
      const-val call_tmp[1772191]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1772193 'move' call_tmp[1772191](1772196 call id[90521] call_tmp[1772185]))
      const-val call_tmp[1772199]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1772201 'move' call_tmp[1772199](1772204 call !=[436050] call_tmp[1772191] root[1772175]))
      const-val call_tmp[1772207]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1772209 'move' call_tmp[1772207] call_tmp[1772199])
      if call_tmp[1772207]
      {
        const-val call_tmp[1772216]:_RuntimeTypeInfo[1253692] "dead at end of block" "expr temp" "maybe param" "temp"
        (1772218 'move' call_tmp[1772216](1773187 call chpl__convertValueToRuntimeType[1434007] localeZeroGlobal[2050363]))
        const-val call_tmp[1772222]:domain(1,int(64),false)[1252616] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1814738]:domain(1,int(64),false)[1252616] "temp"
        val rvfRerefTmp[2050395]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1771125] "temp"
        (2050398 'move' rvfRerefTmp[2050395] data[1772179])
        (1772230 call chpl__deserialize[1771660] call_tmp[1772216] rvfRerefTmp[2050395] ret_tmp[1814738])
        (1814741 'move' call_tmp[1772222] ret_tmp[1814738])
        const-val temp[1772232]:domain(1,int(64),false)[1252616] "dead at end of block" "no auto destroy" "no copy"
        (1772234 'move' temp[1772232] call_tmp[1772222])
        const-val call_tmp[1772238]:c_void_ptr[149] "dead at end of block" "maybe param" "temp"
        (1772240 'move' call_tmp[1772238](1772243 call chpl_get_global_serialize_table[171479] id[1772181]))
        const-val destVoidPtr[1772245]:c_void_ptr[149] "dead at end of block" "const" "insert auto destroy"
        (1772247 'move' destVoidPtr[1772245](1773192 call chpl__initCopy[945261] call_tmp[1772238]))
        const-val call_tmp[1772251]:_RuntimeTypeInfo[1253692] "dead after last mention" "expr temp" "maybe param" "temp"
        (1772253 'move' call_tmp[1772251](1773195 call chpl__convertValueToRuntimeType[1434007] localeZeroGlobal[2050363]))
        val call_tmp[1772257]:c_ptr(domain(1,int(64),false))[1773201] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[1772264]:c_ptr(domain(1,int(64),false))[1773201] "dead at end of block" "maybe param" "temp"
        (1772266 'move' call_tmp[1772264](1772269 call _cast[1773221] destVoidPtr[1772245]))
        const dest[1772272]:c_ptr(domain(1,int(64),false))[1773201] "dead at end of block" "const" "insert auto destroy"
        (1772274 'move' dest[1772272](1773250 call chpl__initCopy[1773252] call_tmp[1772264]))
        ref call_tmp[1772280]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642] "dead after last mention" "maybe param" "temp"
        (1772282 'move' call_tmp[1772280](1772288 call deref[1773271] dest[1772272]))
        (1772289 '=' call_tmp[1772280] temp[1772232])
      }
      (1824816 call chpl__autoDestroy[1435384] call_tmp[1772185])
    }
    (2050383 call chpl__autoDestroy[1771579] localeZeroGlobal[1772177])
    (2050386 call chpl__autoDestroy[1530701] localeZeroGlobal[2050362])
    (1772300 return _void[55])
  }
  function on_fn[1772782](const in arg root[1772786]:int(64)[13], const in arg id[1772788]:int(64)[13], const  ref arg globalType[1781921]:_ref(_RuntimeTypeInfo)[1253709], const in arg _coforallCount[1781923]:_EndCount(AtomicT(int(64)),int(64))[945362]) : void[4] "cobegin or coforall" "non blocking" "on" "resolved"
  {
    {
      const-val call_tmp[1772792]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1804238]:locale[28] "temp"
      (1772797 call here[90438] ret_tmp[1804238])
      (1804241 'move' call_tmp[1772792] ret_tmp[1804238])
      const-val call_tmp[1772798]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1772800 'move' call_tmp[1772798](1772803 call id[90521] call_tmp[1772792]))
      const-val call_tmp[1772806]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1772808 'move' call_tmp[1772806](1772811 call !=[436050] call_tmp[1772798] root[1772786]))
      const-val call_tmp[1772814]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1772816 'move' call_tmp[1772814] call_tmp[1772806])
      if call_tmp[1772814]
      {
        const-val call_tmp[1772823]:c_void_ptr[149] "dead at end of block" "maybe param" "temp"
        (1772825 'move' call_tmp[1772823](1772828 call chpl_get_global_serialize_table[171479] id[1772788]))
        const-val voidPtr[1772830]:c_void_ptr[149] "dead at end of block" "const" "insert auto destroy"
        (1772832 'move' voidPtr[1772830](1773350 call chpl__initCopy[945261] call_tmp[1772823]))
        val call_tmp[1772836]:c_ptr(domain(1,int(64),false))[1773201] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[1772843]:c_ptr(domain(1,int(64),false))[1773201] "dead at end of block" "maybe param" "temp"
        (1772845 'move' call_tmp[1772843](1772848 call _cast[1773221] voidPtr[1772830]))
        val ptr[1772851]:c_ptr(domain(1,int(64),false))[1773201] "dead at end of block" "insert auto destroy"
        (1772853 'move' ptr[1772851](1773362 call chpl__initCopy[1773252] call_tmp[1772843]))
        ref call_tmp[1772857]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642] "dead at end of block" "maybe param" "temp"
        (1772859 'move' call_tmp[1772857](1772865 call deref[1773271] ptr[1772851]))
        ref temp[1772866]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642] "dead at end of block" "no auto destroy" "no copy"
        (1772868 'move' temp[1772866] call_tmp[1772857])
        (1772876 call chpl__autoDestroy[1530701] temp[1772866])
      }
      (1824832 call chpl__autoDestroy[1435384] call_tmp[1772792])
    }
    (1772885 return _void[55])
  }
  function wrapon_fn[2066887](const in arg dummy_locale_arg[2066889]:chpl_localeID_t[209352], in arg buf[2066891]:c_void_ptr[149], in arg buf_size[2066893]:int(64)[13], in arg c[2066895]:_class_localson_fn[2066823]) : void[4] "cobegin or coforall block" "non blocking" "on block"
  {
    val _0_tmp[2066900]:chpl_localeID_t[209352] "temp"
    (2066905 'move' _0_tmp[2066900](2066902 '.v' c[2066895] _0_tmp[2066826]))
    val _1_root[2066907]:int(64)[13] "temp"
    (2066912 'move' _1_root[2066907](2066909 '.v' c[2066895] _1_root[2066828]))
    ref _2_localeZeroGlobal[2066915]:string[26] "temp"
    (2066920 'move' _2_localeZeroGlobal[2066915](2066917 '.v' c[2066895] _2_localeZeroGlobal[2066830]))
    val _3_rvfDerefTmp[2066923]:__serializeHelper[28089] "temp"
    (2066928 'move' _3_rvfDerefTmp[2066923](2066925 '.v' c[2066895] _3_rvfDerefTmp[2066832]))
    val _4_id[2066931]:int(64)[13] "temp"
    (2066936 'move' _4_id[2066931](2066933 '.v' c[2066895] _4_id[2066834]))
    val _5__coforallCount[2066939]:_EndCount(AtomicT(int(64)),int(64))[945362] "temp"
    (2066944 'move' _5__coforallCount[2066939](2066941 '.v' c[2066895] _5__coforallCount[2066836]))
    (2066898 call on_fn[1767905] _1_root[2066907] _2_localeZeroGlobal[2066915] _3_rvfDerefTmp[2066923] _4_id[2066931] _5__coforallCount[2066939])
    val endcount[2066947]:_EndCount(AtomicT(int(64)),int(64))[945362] "temp"
    (2066952 'move' endcount[2066947](2066949 '.v' c[2066895] _5__coforallCount[2066836]))
    (2066954 call _downEndCount[1230656] endcount[2066947] nil[44])
    (2066958 return _void[55])
  }
  function wrapon_fn[2067024](const in arg dummy_locale_arg[2067026]:chpl_localeID_t[209352], in arg buf[2067028]:c_void_ptr[149], in arg buf_size[2067030]:int(64)[13], in arg c[2067032]:_class_localson_fn[2066966]) : void[4] "cobegin or coforall block" "non blocking" "on block"
  {
    val _0_tmp[2067037]:chpl_localeID_t[209352] "temp"
    (2067042 'move' _0_tmp[2067037](2067039 '.v' c[2067032] _0_tmp[2066969]))
    val _1_root[2067044]:int(64)[13] "temp"
    (2067049 'move' _1_root[2067044](2067046 '.v' c[2067032] _1_root[2066971]))
    val _2_id[2067052]:int(64)[13] "temp"
    (2067057 'move' _2_id[2067052](2067054 '.v' c[2067032] _2_id[2066973]))
    ref _3_globalType[2067060]:string[26] "temp"
    (2067065 'move' _3_globalType[2067060](2067062 '.v' c[2067032] _3_globalType[2066975]))
    val _4__coforallCount[2067068]:_EndCount(AtomicT(int(64)),int(64))[945362] "temp"
    (2067073 'move' _4__coforallCount[2067068](2067070 '.v' c[2067032] _4__coforallCount[2066977]))
    (2067035 call on_fn[1768516] _1_root[2067044] _2_id[2067052] _3_globalType[2067060] _4__coforallCount[2067068])
    val endcount[2067076]:_EndCount(AtomicT(int(64)),int(64))[945362] "temp"
    (2067081 'move' endcount[2067076](2067078 '.v' c[2067032] _4__coforallCount[2066977]))
    (2067083 call _downEndCount[1230656] endcount[2067076] nil[44])
    (2067087 return _void[55])
  }
  function wrapon_fn[2067153](const in arg dummy_locale_arg[2067155]:chpl_localeID_t[209352], in arg buf[2067157]:c_void_ptr[149], in arg buf_size[2067159]:int(64)[13], in arg c[2067161]:_class_localson_fn[2067095]) : void[4] "cobegin or coforall block" "non blocking" "on block"
  {
    val _0_tmp[2067166]:chpl_localeID_t[209352] "temp"
    (2067171 'move' _0_tmp[2067166](2067168 '.v' c[2067161] _0_tmp[2067098]))
    val _1_root[2067173]:int(64)[13] "temp"
    (2067178 'move' _1_root[2067173](2067175 '.v' c[2067161] _1_root[2067100]))
    val _2_localeZeroGlobal_data[2067181]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1771125] "temp"
    (2067186 'move' _2_localeZeroGlobal_data[2067181](2067183 '.v' c[2067161] _2_localeZeroGlobal_data[2067102]))
    val _3_rvfDerefTmp[2067189]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1771125] "temp"
    (2067194 'move' _3_rvfDerefTmp[2067189](2067191 '.v' c[2067161] _3_rvfDerefTmp[2067104]))
    val _4_id[2067197]:int(64)[13] "temp"
    (2067202 'move' _4_id[2067197](2067199 '.v' c[2067161] _4_id[2067106]))
    val _5__coforallCount[2067205]:_EndCount(AtomicT(int(64)),int(64))[945362] "temp"
    (2067210 'move' _5__coforallCount[2067205](2067207 '.v' c[2067161] _5__coforallCount[2067108]))
    (2067164 call on_fn[1772171] _1_root[2067173] _2_localeZeroGlobal_data[2067181] _3_rvfDerefTmp[2067189] _4_id[2067197] _5__coforallCount[2067205])
    val endcount[2067213]:_EndCount(AtomicT(int(64)),int(64))[945362] "temp"
    (2067218 'move' endcount[2067213](2067215 '.v' c[2067161] _5__coforallCount[2067108]))
    (2067220 call _downEndCount[1230656] endcount[2067213] nil[44])
    (2067224 return _void[55])
  }
  function wrapon_fn[2067290](const in arg dummy_locale_arg[2067292]:chpl_localeID_t[209352], in arg buf[2067294]:c_void_ptr[149], in arg buf_size[2067296]:int(64)[13], in arg c[2067298]:_class_localson_fn[2067232]) : void[4] "cobegin or coforall block" "non blocking" "on block"
  {
    val _0_tmp[2067303]:chpl_localeID_t[209352] "temp"
    (2067308 'move' _0_tmp[2067303](2067305 '.v' c[2067298] _0_tmp[2067235]))
    val _1_root[2067310]:int(64)[13] "temp"
    (2067315 'move' _1_root[2067310](2067312 '.v' c[2067298] _1_root[2067237]))
    val _2_id[2067318]:int(64)[13] "temp"
    (2067323 'move' _2_id[2067318](2067320 '.v' c[2067298] _2_id[2067239]))
    ref _3_globalType[2067326]:_RuntimeTypeInfo[1253692] "temp"
    (2067331 'move' _3_globalType[2067326](2067328 '.v' c[2067298] _3_globalType[2067241]))
    val _4__coforallCount[2067334]:_EndCount(AtomicT(int(64)),int(64))[945362] "temp"
    (2067339 'move' _4__coforallCount[2067334](2067336 '.v' c[2067298] _4__coforallCount[2067243]))
    (2067301 call on_fn[1772782] _1_root[2067310] _2_id[2067318] _3_globalType[2067326] _4__coforallCount[2067334])
    val endcount[2067342]:_EndCount(AtomicT(int(64)),int(64))[945362] "temp"
    (2067347 'move' endcount[2067342](2067344 '.v' c[2067298] _4__coforallCount[2067243]))
    (2067349 call _downEndCount[1230656] endcount[2067342] nil[44])
    (2067353 return _void[55])
  }
}