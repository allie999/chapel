AST dump for ChapelThreads after pass addInitCalls.
Module use list: 

{
  function chpl__init_ChapelThreads[416061]() : void[4] "insert line file info" "module init" "resolved"
  {
    if chpl__init_ChapelThreads_p[2655340]
    {
      goto _exit_chpl__init_ChapelThreads[2655377] _exit_chpl__init_ChapelThreads[2655377]
    }
    val modFormatStr[2655348]:c_string[19] "temp"
    val modStr[2655349]:c_string[19] "temp"
    ref refIndentLevel[2655363]:int(32)[95] "temp"
    (2655356 'move' modFormatStr[2655348] c"%*s\n")
    (2655358 'move' modStr[2655349] c"ChapelThreads")
    (2655361 call printModuleInit[20429] modFormatStr[2655348] modStr[2655349] 13)
    (2655367 'move' refIndentLevel[2655363](2655366 'addr of' moduleInitLevel[20419]))
    (2655370 '+=' refIndentLevel[2655363] 1)
    (2655346 'move' chpl__init_ChapelThreads_p[2655340] 1)
    (611363 'move' call_tmp[611360](56179 call chpl_task_getenvNumThreadsPerLocale[56166]))
    (982218 'move' init_coerce_tmp[982215](982221 'cast' int(64)[13] call_tmp[611360]))
    (540923 'move' numThreadsPerLocale[56180] init_coerce_tmp[982215])
    (2197334 '_private_broadcast' numThreadsPerLocale[56180])
    (2655373 '-=' refIndentLevel[2655363] 1)
    label _endchpl__init_ChapelThreads[2655379]
    label _exit_chpl__init_ChapelThreads[2655377]
    (508096 return _void[55])
  }
  function chpl_task_getenvNumThreadsPerLocale[56166]() : int(32)[95] "extern" "local args" "no fn body" "resolved" "no return value for void"
  {
    val ret[508092]:int(32)[95] "RVV" "temp"
    (508094 return ret[508092])
  }
  const-val numThreadsPerLocale[56180]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
  const-val call_tmp[611360]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
  const-val init_coerce_tmp[982215]:int(64)[13] "dead at end of block" "temp"
}