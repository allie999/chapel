AST dump for CPtr after pass flattenClasses.
Module use list: ChapelStandard SysBasic SysError SysCTypes HaltWrappers IO Reflection 

{
  function c_nil[205006]() : _unknown[51] "inline" "no parens"
  {
    (205014 return(205013 'cast' c_void_ptr[149] nil[44]))
  }
  { scopeless type
    c_void_ptr[149]
  }
  function is_c_nil[205024](arg x[205022]:_any[178](?)) : _unknown[51] "inline"
  {
    (205035 return(205033 call ==(205031 'cast' c_void_ptr[149] x[205022])(393605 call c_nil[205006])))
  }
  { scopeless type
    bool[10]
  }
  function c_ptr[205100](?).this[205051](arg _mt[205104]:_MT[238], arg this[205102]:c_ptr[205100](?), arg i[205048] :
  integral[199](?)) ref : _unknown[51] "inline" "method" "primary method"
  {
    (205058 return(205057 'array_get' this[205102] i[205048]))
  }
  function c_ptr[205100](?).deref[205065](arg _mt[205108]:_MT[238], arg this[205106]:c_ptr[205100](?)) ref : _unknown[51] "inline" "method" "primary method"
  {
    (205072 return(205071 'array_get' this[205106] 0))
  }
  function c_ptr[205100](?).writeThis[205081](arg _mt[205112]:_MT[238], arg this[205110]:c_ptr[205100](?), arg ch[205079]:_any[178](?)) : _unknown[51] throws "inline" "method" "primary method" "no return value for void"
  {
    (205094 call(205089 call .(205085 call _cast c_void_ptr[149] this[205110]) c"writeThis") ch[205079])
  }
  type c_ptr[205100](?) unknown eltType[205042] "type variable"
  function c_array[205840](?).init[205130](arg _mt[205844]:_MT[238], arg this[205842]:c_array[205840](?), arg eltType[205128]:_any[178](?), param arg size[205132]:_any[178](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (205139 call =(205135 call . this[205842] c"eltType") eltType[205128])
    (205148 call =(205144 call . this[205842] c"size") size[205132])
    (205156 call(205152 call . this[205842] c"complete"))
    unknown i[205159] 0
    (205162 'end of statement')
    {
      unknown tmp[205193] "temp"
      (205217 'move' tmp[205193](205212 call _cond_test(205214 call < i[205159] size[205132])))
      WhileDo[205198]
      {
        {
          unknown default[205168] "no auto destroy" eltType[205128]
          (205171 'end of statement')
          unknown eltRef[205178] "ref var"(205177 'array_get' this[205842] i[205159])
          (205181 'end of statement')
          (205186 '=' eltRef[205178] default[205168])
          (205190 call += i[205159] 1)
        }
        label _continueLabel[205196]
        (205207 'move' tmp[205193](205202 call _cond_test(205204 call < i[205159] size[205132])))
        tmp[205193]
      }
      label _breakLabel[205197]
    }
  }
  function c_array[205840](?).deinit[205224](arg _mt[205848]:_MT[238], arg this[205846]:c_array[205840](?)) : _unknown[51] "destructor" "method" "primary method" "no return value for void"
  {
    unknown i[205227] 0
    (205230 'end of statement')
    {
      unknown tmp[205251] "temp"
      (205275 'move' tmp[205251](205270 call _cond_test(205272 call < i[205227](393638 call . this[205846] c"size"))))
      WhileDo[205256]
      {
        {
          (205243 call chpl__autoDestroy(205241 'array_get' this[205846] i[205227]))
          (205248 call += i[205227] 1)
        }
        label _continueLabel[205254]
        (205265 'move' tmp[205251](205260 call _cond_test(205262 call < i[205227](393632 call . this[205846] c"size"))))
        tmp[205251]
      }
      label _breakLabel[205255]
    }
  }
  function c_array[205840](?).this[205286](arg _mt[205852]:_MT[238], ref arg this[205850]:c_array[205840](?), arg i[205283] :
  integral[199](?)) ref : _unknown[51] "inline" "method" "primary method"
  {
    if(205366 call _cond_test 1)
    {
      if(205361 call _cond_test(205298 call ||(205292 call < i[205283] 0)(205296 call >= i[205283](393652 call . this[205850] c"size"))))
      {
        (205359 call boundsCheckHalt module=[255] HaltWrappers[210016](205356 call +(205353 call +(205344 call +(205325 call + "c array index out of bounds "(205323 call _cast string[26] i[205283])) "(indices are 0..")(205351 call _cast string[26](205348 call -(393658 call . this[205850] c"size") 1))) ")"))
        (362947 'referenced modules list' HaltWrappers[210016])
      }
    }
    (205377 return(205376 'array_get' this[205850] i[205283]))
  }
  { scopeless type
    (393644 call . this[205850] c"eltType")
  }
  function c_array[205840](?).this[205388](arg _mt[205856]:_MT[238], const  ref arg this[205854]:c_array[205840](?), arg i[205385] :
  integral[199](?)) const ref : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    if(205436 call _cond_test 1)
    {
      if(205431 call _cond_test(205400 call ||(205394 call < i[205385] 0)(205398 call >= i[205385](393674 call . this[205854] c"size"))))
      {
        (205429 call boundsCheckHalt module=[255] HaltWrappers[210016](205426 call +(205423 call +(205414 call +(205411 call + "c array index out of bounds "(205409 call _cast string[26] i[205385])) "(indices are 0..")(205421 call _cast string[26](205418 call -(393680 call . this[205854] c"size") 1))) ")"))
        (362953 'referenced modules list' HaltWrappers[210016])
      }
    }
    (205447 return(205446 'array_get' this[205854] i[205385]))
  }
  { scopeless type
    (393666 call . this[205854] c"eltType")
  }
  function c_array[205840](?).this[205458](arg _mt[205860]:_MT[238], ref arg this[205858]:c_array[205840](?), param arg i[205455] :
  integral[199](?)) ref : _unknown[51] "inline" "method" "primary method"
  {
    if(205497 call _cond_test(205469 call ||(205463 call < i[205455] 0)(205467 call >= i[205455](393695 call . this[205858] c"size"))))
    {
      (205495 call compilerError(205492 call +(205489 call +(205480 call +(205477 call + "c array index out of bounds "(205475 call _cast string[26] i[205455])) "(indices are 0..")(205487 call _cast string[26](205484 call -(393701 call . this[205858] c"size") 1))) ")"))
    }
    (205508 return(205507 'array_get' this[205858] i[205455]))
  }
  { scopeless type
    (393688 call . this[205858] c"eltType")
  }
  function c_array[205840](?).this[205519](arg _mt[205864]:_MT[238], const  ref arg this[205862]:c_array[205840](?), param arg i[205516] :
  integral[199](?)) const ref : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    if(205558 call _cond_test(205530 call ||(205524 call < i[205516] 0)(205528 call >= i[205516](393716 call . this[205862] c"size"))))
    {
      (205556 call compilerError(205553 call +(205550 call +(205541 call +(205538 call + "c array index out of bounds "(205536 call _cast string[26] i[205516])) "(indices are 0..")(205548 call _cast string[26](205545 call -(393722 call . this[205862] c"size") 1))) ")"))
    }
    (205569 return(205568 'array_get' this[205862] i[205516]))
  }
  { scopeless type
    (393709 call . this[205862] c"eltType")
  }
  function c_array[205840](?).writeThis[205578](arg _mt[205868]:_MT[238], arg this[205866]:c_array[205840](?), arg ch[205576]:_any[178](?)) : _unknown[51] throws "method" "primary method" "no return value for void"
  {
    (205586 call <~> ch[205576](205581 'new'(205585 call ioLiteral[238772] "[")))
    unknown first[205591] 1
    (205594 'end of statement')
    {
      unknown _indexOfInterest[205632] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[205633] "expr temp" "temp"
      (205642 'move' _iterator[205633](205640 call _getIterator(205649 call chpl_direct_counted_range_iter 0(393742 call . this[205866] c"size"))))
      Defer
      {
        {
          (205665 call _freeIterator _iterator[205633])
        }
      }
      { scopeless type
        (205654 'move' _indexOfInterest[205632](205651 call iteratorIndex _iterator[205633]))
      }
      ForLoop[205634]
      {
        unknown i[205658] "index var" "insert auto destroy"
        (205660 'move' i[205658] _indexOfInterest[205632])
        {
          (205607 call <~> ch[205576](205606 call this[205866] i[205658]))
          if(205627 call _cond_test(205616 call != i[205658](205614 call -(393735 call . this[205866] c"size") 1)))
          {
            (205624 call <~> ch[205576](205619 'new'(205623 call ioLiteral[238772] ", ")))
          }
        }
        label _continueLabel[205637]
        _indexOfInterest[205632]
        _iterator[205633]
      }
      label _breakLabel[205638]
    }
    (205678 call <~> ch[205576](205673 'new'(205677 call ioLiteral[238772] "]")))
  }
  function c_array[205840](?).length[205685](arg _mt[205872]:_MT[238], arg this[205870]:c_array[205840](?)) : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    (205725 call compilerWarning(205722 call + "'c_array.length' is deprecated - " "please use 'c_array.size' instead"))
    (205729 return(393749 call . this[205870] c"size"))
  }
  function c_array[205840](?).init=[205739](arg _mt[205876]:_MT[238], arg this[205874]:c_array[205840](?), arg other[205736] :
  c_array[205840](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (205749 call =(205742 call . this[205874] c"eltType")(205746 call . other[205736] c"eltType"))
    (205761 call =(205754 call . this[205874] c"size")(205758 call . other[205736] c"size"))
    (205769 call(205765 call . this[205874] c"complete"))
    {
      unknown _indexOfInterest[205797] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[205798] "expr temp" "temp"
      (205807 'move' _iterator[205798](205805 call _getIterator(205814 call chpl_direct_counted_range_iter 0(393765 call . this[205874] c"size"))))
      Defer
      {
        {
          (205830 call _freeIterator _iterator[205798])
        }
      }
      { scopeless type
        (205819 'move' _indexOfInterest[205797](205816 call iteratorIndex _iterator[205798]))
      }
      ForLoop[205799]
      {
        unknown i[205823] "index var" "insert auto destroy"
        (205825 'move' i[205823] _indexOfInterest[205797])
        {
          unknown value[205783] "no auto destroy"(205782 call other[205736] i[205823])(393755 call . this[205874] c"eltType")
          (205786 'end of statement')
          (205795 '='(205793 call this[205874] i[205823]) value[205783])
        }
        label _continueLabel[205802]
        _indexOfInterest[205797]
        _iterator[205798]
      }
      label _breakLabel[205803]
    }
  }
  type c_array[205840](?) unknown eltType[205119] "type variable" unknown size[205122] "param"
  function =[205885](ref arg lhs[205882] :
  c_array[205840](?), arg rhs[205888] :
  c_array[205840](?)) : _unknown[51] "assignop" "no return value for void"
  {
    if(205922 call _cond_test(205899 call !=(205892 call . lhs[205882] c"eltType")(205896 call . rhs[205888] c"eltType")))
    {
      (205920 call compilerError "element type mismatch in c_array assignment")
    }
    if(205959 call _cond_test(205936 call !=(205929 call . lhs[205882] c"size")(205933 call . rhs[205888] c"size")))
    {
      (205957 call compilerError "size mismatch in c_array assignment")
    }
    {
      unknown _indexOfInterest[205986] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[205987] "expr temp" "temp"
      (205996 'move' _iterator[205987](205994 call _getIterator(206006 call chpl_direct_counted_range_iter 0(206002 call . lhs[205882] c"size"))))
      Defer
      {
        {
          (206022 call _freeIterator _iterator[205987])
        }
      }
      { scopeless type
        (206011 'move' _indexOfInterest[205986](206008 call iteratorIndex _iterator[205987]))
      }
      ForLoop[205988]
      {
        unknown i[206015] "index var" "insert auto destroy"
        (206017 'move' i[206015] _indexOfInterest[205986])
        {
          (205982 call =(205977 call lhs[205882] i[206015])(205981 call rhs[205888] i[206015]))
        }
        label _continueLabel[205991]
        _indexOfInterest[205986]
        _iterator[205987]
      }
      label _breakLabel[205992]
    }
  }
  function =[206037](ref arg lhs[206034] :
  c_ptr[205100](?), ref arg rhs[206040] :
  c_array[205840](?)) : _unknown[51] "assignop" "no return value for void"
  {
    (206061 call = lhs[206034](206060 call c_ptrTo(206058 call rhs[206040] 0)))
  }
  where {
    (206051 call ==(206044 call . lhs[206034] c"eltType")(206048 call . rhs[206040] c"eltType"))
  }
  function c_void_ptr[149].writeThis[206073](arg _mt[206078]:_MT[238], arg this[206075]:c_void_ptr[149] :
  c_void_ptr[149], arg ch[206071]:_any[178](?)) : _unknown[51] throws "inline" "method" "no doc" "no return value for void"
  {
    (206106 call(206081 call . ch[206071] c"writef") "0x%xu"(206104 call _cast c_uintptr[20636] this[206075]))
  }
  function =[206117](ref arg a[206114] :
  c_ptr[205100](?), arg b[206120] :
  c_ptr[205100](?)) : _unknown[51] "assignop" "inline" "no doc" "no return value for void"
  {
    (206127 '=' a[206114] b[206120])
  }
  function =[206138](ref arg a[206135] :
  c_ptr[205100](?), arg b[206141] :
  c_void_ptr[149]) : _unknown[51] "assignop" "inline" "no doc" "no return value for void"
  {
    (206148 '=' a[206135] b[206141])
  }
  function _cast[206159](arg t[206156] :
  c_void_ptr[149], arg x[206162] :
  c_fn_ptr[152]) : _unknown[51] "inline" "no doc"
  {
    (206170 return(206169 'cast' c_void_ptr[149] x[206162]))
  }
  function _cast[206181](arg t[206178] :
  c_ptr[205100](?), arg x[206184] :
  c_ptr[205100](?)) : _unknown[51] "inline" "no doc"
  {
    (206192 return(206191 'cast' t[206178] x[206184]))
  }
  function _cast[206207](arg t[206204] :
  (206203 call c_ptr[205100](?) unknown e[206200]), ref arg x[206210] :
  c_array[205840](?)) : _unknown[51] "inline" "no doc"
  {
    (206227 return(206226 call c_ptrTo(206224 call x[206210] 0)))
  }
  where {
    (206218 call ==(206214 call . x[206210] c"eltType") e[206200])
  }
  function _cast[206239](arg t[206236] :
  c_void_ptr[149], ref arg x[206242] :
  c_array[205840](?)) : _unknown[51] "inline" "no doc"
  {
    (206255 return(206253 call _cast c_void_ptr[149](206251 call c_ptrTo(206249 call x[206242] 0))))
  }
  function _cast[206266](arg t[206263] :
  c_void_ptr[149], arg x[206269] :
  c_ptr[205100](?)) : _unknown[51] "inline" "no doc"
  {
    (206277 return(206276 'cast' t[206263] x[206269]))
  }
  function _cast[206288](arg t[206285] :
  c_ptr[205100](?), arg x[206291] :
  c_void_ptr[149]) : _unknown[51] "inline" "no doc"
  {
    (206299 return(206298 'cast' t[206285] x[206291]))
  }
  function _cast[206310](arg t[206307] :
  string[26], arg x[206313] :
  c_void_ptr[149]) : _unknown[51] "inline" "no doc"
  {
    Try!
    {
      {
        (206339 return(206338 call createStringWithOwnedBuffer(206336 'ref to string' x[206313])))
      }
    }
  }
  function _cast[206354](arg t[206351] :
  string[26], arg x[206357] :
  c_ptr[205100](?)) : _unknown[51] "inline" "no doc"
  {
    Try!
    {
      {
        (206367 return(206366 call createStringWithOwnedBuffer(206364 'ref to string' x[206357])))
      }
    }
  }
  function _cast[206382](arg t[206379] :
  _anyManagementAnyNilable[229](?), arg x[206385] :
  c_void_ptr[149]) : _unknown[51] "inline" "last resort" "no doc"
  {
    if(206529 call _cond_test(206396 call ||(206391 call isUnmanagedClass t[206379])(206395 call isBorrowedClass t[206379])))
    {
      (206442 call compilerWarning(206439 call +(206420 call + "cast from c_void_ptr to "(206418 call _cast string[26] t[206379])) " is deprecated"))
      (206492 call compilerWarning(206489 call +(206470 call + "cast to "(206468 call _cast string[26](206466 call _to_nilable t[206379]))) " instead"))
      (206499 return(206498 'cast' t[206379] x[206385]))
    }
    {
      (206526 call compilerWarning(206523 call + "invalid cast from c_void_ptr to managed type "(206521 call _cast string[26] t[206379])))
    }
  }
  function _cast[206544](arg t[206541] :
  _unmanagedNilable[226](?), arg x[206547] :
  c_void_ptr[149]) : _unknown[51] "inline" "no doc"
  {
    (206555 return(206554 'cast' t[206541] x[206547]))
  }
  function _cast[206568](arg t[206565] :
  _borrowedNilable[217](?), arg x[206571] :
  c_void_ptr[149]) : _unknown[51] "inline" "no doc"
  {
    (206579 return(206578 'cast' t[206565] x[206571]))
  }
  function _cast[206590](arg t[206587] :
  c_void_ptr[149], arg x[206593] :
  borrowed[211](?)) : _unknown[51] "inline" "no doc"
  {
    (206601 return(206600 'cast' t[206587] x[206593]))
  }
  function _cast[206612](arg t[206609] :
  c_void_ptr[149], arg x[206615] :
  unmanaged[220](?)) : _unknown[51] "inline" "no doc"
  {
    (206623 return(206622 'cast' t[206609] x[206615]))
  }
  function _cast[206634](arg t[206631] :
  _ddata[11696](?), arg x[206637] :
  c_ptr[205100](?)) : _unknown[51] "inline" "no doc"
  {
    (206655 return(206654 'cast' t[206631] x[206637]))
  }
  where {
    (206648 call ==(206641 call . t[206631] c"eltType")(206645 call . x[206637] c"eltType"))
  }
  function _cast[206667](arg t[206664] :
  _ddata[11696](?), arg x[206670] :
  c_void_ptr[149]) : _unknown[51] "inline" "no doc"
  {
    (206678 return(206677 'cast' t[206664] x[206670]))
  }
  function _cast[206689](arg t[206686] :
  c_void_ptr[149], arg x[206692] :
  _ddata[11696](?)) : _unknown[51] "inline" "no doc"
  {
    (206700 return(206699 'cast' t[206686] x[206692]))
  }
  function _cast[206711](arg t[206708] :
  c_intptr[20629], arg x[206714] :
  c_void_ptr[149]) : _unknown[51] "inline" "no doc"
  {
    (206722 return(206721 'cast' t[206708] x[206714]))
  }
  function _cast[206733](arg t[206730] :
  c_uintptr[20636], arg x[206736] :
  c_void_ptr[149]) : _unknown[51] "inline" "no doc"
  {
    (206744 return(206743 'cast' t[206730] x[206736]))
  }
  function _cast[206758](arg t[206755] :
  (206754 call int(64)[13] 64), arg x[206761] :
  c_void_ptr[149]) : _unknown[51] "inline" "no doc"
  {
    (206776 return(206775 'cast' t[206755] x[206761]))
  }
  where {
    (206769 call != c_uintptr[20636](206768 call int(64)[13] 64))
  }
  function _cast[206791](arg t[206788] :
  (206787 call uint(64)[115] 64), arg x[206794] :
  c_void_ptr[149]) : _unknown[51] "inline" "no doc"
  {
    (206809 return(206808 'cast' t[206788] x[206794]))
  }
  where {
    (206802 call != c_uintptr[20636](206801 call uint(64)[115] 64))
  }
  function _cast[206821](arg t[206818] :
  c_intptr[20629], arg x[206824] :
  c_ptr[205100](?)) : _unknown[51] "inline" "no doc"
  {
    (206832 return(206831 'cast' t[206818] x[206824]))
  }
  function _cast[206843](arg t[206840] :
  c_uintptr[20636], arg x[206846] :
  c_ptr[205100](?)) : _unknown[51] "inline" "no doc"
  {
    (206854 return(206853 'cast' t[206840] x[206846]))
  }
  function _cast[206868](arg t[206865] :
  (206864 call int(64)[13] 64), arg x[206871] :
  c_ptr[205100](?)) : _unknown[51] "inline" "no doc"
  {
    (206886 return(206885 'cast' t[206865] x[206871]))
  }
  where {
    (206879 call != c_intptr[20629](206878 call int(64)[13] 64))
  }
  function _cast[206901](arg t[206898] :
  (206897 call uint(64)[115] 64), arg x[206904] :
  c_ptr[205100](?)) : _unknown[51] "inline" "no doc"
  {
    (206919 return(206918 'cast' t[206898] x[206904]))
  }
  where {
    (206912 call != c_uintptr[20636](206911 call int(64)[13] 64))
  }
  function =[206931](ref arg a[206928] :
  c_fn_ptr[152], arg b[206934] :
  c_fn_ptr[152]) : _unknown[51] "assignop" "inline" "no doc" "no return value for void"
  {
    (206941 '=' a[206928] b[206934])
  }
  function ==[206952](arg a[206949] :
  c_ptr[205100](?), arg b[206955] :
  c_ptr[205100](?)) : _unknown[51] "inline" "no doc"
  {
    (206973 return(206972 'ptr_eq' a[206949] b[206955]))
  }
  where {
    (206966 call ==(206959 call . a[206949] c"eltType")(206963 call . b[206955] c"eltType"))
  }
  function ==[206985](arg a[206982] :
  c_ptr[205100](?), arg b[206988] :
  c_void_ptr[149]) : _unknown[51] "inline" "no doc"
  {
    (206996 return(206995 'ptr_eq' a[206982] b[206988]))
  }
  function ==[207007](arg a[207004] :
  c_void_ptr[149], arg b[207010] :
  c_ptr[205100](?)) : _unknown[51] "inline" "no doc"
  {
    (207018 return(207017 'ptr_eq' a[207004] b[207010]))
  }
  function !=[207029](arg a[207026] :
  c_ptr[205100](?), arg b[207032] :
  c_ptr[205100](?)) : _unknown[51] "inline" "no doc"
  {
    (207050 return(207049 'ptr_neq' a[207026] b[207032]))
  }
  where {
    (207043 call ==(207036 call . a[207026] c"eltType")(207040 call . b[207032] c"eltType"))
  }
  function !=[207062](arg a[207059] :
  c_ptr[205100](?), arg b[207065] :
  c_void_ptr[149]) : _unknown[51] "inline" "no doc"
  {
    (207073 return(207072 'ptr_neq' a[207059] b[207065]))
  }
  function !=[207084](arg a[207081] :
  c_void_ptr[149], arg b[207087] :
  c_ptr[205100](?)) : _unknown[51] "inline" "no doc"
  {
    (207095 return(207094 'ptr_neq' a[207081] b[207087]))
  }
  function _cond_test[207106](arg x[207103] :
  c_ptr[205100](?)) : _unknown[51] "inline" "no doc"
  {
    (207112 return(207110 call != x[207103](393911 call c_nil[205006])))
  }
  function ![207123](arg x[207120] :
  c_ptr[205100](?)) : _unknown[51] "inline" "no doc"
  {
    (207129 return(207127 call == x[207120](393915 call c_nil[205006])))
  }
  function +[207140](arg a[207137] :
  c_ptr[205100](?), arg b[207143] :
  integral[199](?)) : _unknown[51] "inline" "no doc"
  {
    (207151 return(207150 '+' a[207137] b[207143]))
  }
  function -[207162](arg a[207159] :
  c_ptr[205100](?), arg b[207165] :
  integral[199](?)) : _unknown[51] "inline" "no doc"
  {
    (207173 return(207172 '-' a[207159] b[207165]))
  }
  function -[207188](arg a[207185] :
  (207184 call c_ptr[205100](?) unknown t[207181]), arg b[207194] :
  (207193 call c_ptr[205100](?) t[207181])) : _unknown[51] "inline" "no doc"
  {
    (207213 return(207212 call c_pointer_diff a[207185] b[207194](207210 call _cast c_ptrdiff[20643](207208 call c_sizeof(207204 call . a[207185] c"eltType")))))
  }
  { scopeless type
    c_ptrdiff[20643]
  }
  function c_pointer_return[207226](ref arg x[207223] :
  unknown t[207221]) : _unknown[51] "extern" "local args" "no fn body" "no doc" "fn synchronization free" "no return value for void"
  {
  }
  { scopeless type
    (207231 call c_ptr[205100](?) t[207221])
  }
  function c_pointer_diff[207241](arg a[207238] :
  c_void_ptr[149], arg b[207244] :
  c_void_ptr[149], arg eltSize[207248] :
  c_ptrdiff[20643]) : _unknown[51] "extern" "local args" "no fn body" "no doc" "fn synchronization free" "no return value for void"
  {
  }
  { scopeless type
    c_ptrdiff[20643]
  }
  function c_ptrTo[207263](arg arr[207260] :
  (207257 call chpl__buildArrayRuntimeType nil[44])) : _unknown[51] "inline"
  {
    (207282 return(207281 call c_pointer_return(207279 call arr[207260](207275 call .(207272 call . arr[207260] c"_dom") c"low"))))
  }
  where {
    (207268 call isRectangularArr arr[207260])
  }
  function c_ptrTo[207295](ref arg x[207292] :
  unknown t[207290]) : _unknown[51] "inline"
  {
    if(207327 call _cond_test(207304 call isArrayType t[207290]))
    {
      (207325 call compilerError "c_ptrTo unsupported array type" 2)
    }
    if(207359 call _cond_test(207336 call isDomainType t[207290]))
    {
      (207357 call compilerError "c_ptrTo domain type not supported" 2)
    }
    (207368 return(207367 call c_pointer_return x[207292]))
  }
  { scopeless type
    (207300 call c_ptr[205100](?) t[207290])
  }
  function c_ptrTo[207379](arg x[207376] :
  c_fn_ptr[152]) : _unknown[51] "inline" "no doc"
  {
    (207382 return x[207376])
  }
  function c_fn_ptr[152].this[207390](arg _mt[207395]:_MT[238], arg this[207392]:c_fn_ptr[152] :
  c_fn_ptr[152]) : _unknown[51] "method" "no doc" "no return value for void"
  {
    (207416 call compilerError "Can't call a C function pointer within Chapel")
  }
  function c_fn_ptr[152].this[207428](arg _mt[207433]:_MT[238], arg this[207430]:c_fn_ptr[152] :
  c_fn_ptr[152], arg args[207425]:_any[178](?) ...) : _unknown[51] "method" "no doc" "no return value for void"
  {
    (207438 call compilerError "Can't call a C function pointer within Chapel")
  }
  function offset_ARRAY_ELEMENTS[207445]() : _unknown[51] "no parens" "private"
  {
    const CHPL_RT_MD_ARRAY_ELEMENTS[207448] "const" "extern" chpl_mem_descInt_t[11654]
    (207451 'end of statement')
    function chpl_memhook_md_num[207455]() : _unknown[51] "extern" "local args" "no fn body" "fn synchronization free" "no return value for void"
    {
    }
    { scopeless type
      chpl_mem_descInt_t[11654]
    }
    (207467 return(207465 call - CHPL_RT_MD_ARRAY_ELEMENTS[207448](207464 call chpl_memhook_md_num)))
  }
  function c_sizeof[207475](arg x[207473]:_any[178](?)) : _unknown[51] "inline"
  {
    function sizeof[207482](arg x[207480]:_any[178](?)) : _unknown[51] "extern" "local args" "no fn body" "fn synchronization free" "no return value for void"
    {
    }
    { scopeless type
      size_t[20657]
    }
    (207493 return(207492 call sizeof x[207473]))
  }
  { scopeless type
    size_t[20657]
  }
  function c_offsetof[207502](arg t[207500]:_any[178](?), param arg fieldname[207505] :
  string[26]) : _unknown[51]
  {
    unknown x[207518] "no auto destroy" "no init" t[207500]
    (207521 'end of statement')
    (207542 return(207540 call -(207531 call _cast size_t[20657](207529 call c_ptrTo(207527 call getFieldRef x[207518] fieldname[207505])))(207538 call _cast size_t[20657](207536 call c_ptrTo x[207518]))))
    (355301 'used modules list'(207514 'use' Reflection[224901]))
  }
  where {
    (207512 call isRecordType t[207500])
  }
  { scopeless type
    size_t[20657]
  }
  function c_offsetof[207552](arg t[207550]:_any[178](?), param arg fieldname[207555] :
  string[26]) : _unknown[51] "no doc" "no return value for void"
  {
    (207583 call compilerError "Cannot call c_offsetof on type that is not a record")
  }
  where {
    (207562 call !(207561 call isRecordType t[207550]))
  }
  function c_calloc[207593](arg eltType[207591]:_any[178](?), arg size[207596] :
  integral[199](?)) : _unknown[51] "inline"
  {
    const alloc_size[207616] "const"(207614 call *(207609 call(207604 call . size[207596] c"safeCast") size_t[20657])(207613 call c_sizeof eltType[207591]))
    (207619 'end of statement')
    (207633 return(207631 call _cast(207630 call c_ptr[205100](?) eltType[207591])(207626 call chpl_here_calloc alloc_size[207616] 1(393968 call offset_ARRAY_ELEMENTS[207445]))))
  }
  { scopeless type
    (207602 call c_ptr[205100](?) eltType[207591])
  }
  function c_malloc[207642](arg eltType[207640]:_any[178](?), arg size[207645] :
  integral[199](?)) : _unknown[51] "inline"
  {
    const alloc_size[207665] "const"(207663 call *(207658 call(207653 call . size[207645] c"safeCast") size_t[20657])(207662 call c_sizeof eltType[207640]))
    (207668 'end of statement')
    (207681 return(207679 call _cast(207678 call c_ptr[205100](?) eltType[207640])(207674 call chpl_here_alloc alloc_size[207665](393978 call offset_ARRAY_ELEMENTS[207445]))))
  }
  { scopeless type
    (207651 call c_ptr[205100](?) eltType[207640])
  }
  function c_aligned_alloc[207690](arg eltType[207688]:_any[178](?), arg alignment[207693] :
  integral[199](?), arg size[207697] :
  integral[199](?)) : _unknown[51] "inline"
  {
    if(207856 call _cond_test 1)
    {
      unknown one[207707] 1 size_t[20657]
      (207710 'end of statement')
      unknown aln[207719](207718 call(207713 call . alignment[207693] c"safeCast") size_t[20657])
      (207722 'end of statement')
      if(207748 call _cond_test(207725 call == aln[207719] 0))
      {
        (207746 call halt "c_aligned_alloc called with alignment of 0")
      }
      unknown p[207757](207756 call log2 aln[207719])
      (207760 'end of statement')
      if(207773 call _cond_test(207766 call <(207763 call << one[207707] p[207757]) aln[207719]))
      {
        (207770 call += p[207757] 1)
      }
      (207787 call assert(207784 call <= aln[207719](207782 call << one[207707] p[207757])))
      if(207818 call _cond_test(207794 call != aln[207719](207792 call << one[207707] p[207757])))
      {
        (207816 call halt "c_aligned_alloc called with non-power-of-2 alignment " aln[207719])
      }
      if(207851 call _cond_test(207828 call < alignment[207693](207827 call c_sizeof c_void_ptr[149])))
      {
        (207849 call halt "c_aligned_alloc called with alignment smaller than pointer size")
      }
    }
    const alloc_size[207874] "const"(207872 call *(207867 call(207862 call . size[207697] c"safeCast") size_t[20657])(207871 call c_sizeof eltType[207688]))
    (207877 'end of statement')
    (207896 return(207894 call _cast(207893 call c_ptr[205100](?) eltType[207688])(207889 call chpl_here_aligned_alloc(207885 call(207880 call . alignment[207693] c"safeCast") size_t[20657]) alloc_size[207874](394008 call offset_ARRAY_ELEMENTS[207445]))))
  }
  { scopeless type
    (207703 call c_ptr[205100](?) eltType[207688])
  }
  function c_free[207907](arg data[207904] :
  c_void_ptr[149]) : _unknown[51] "inline" "no return value for void"
  {
    (207912 call chpl_here_free data[207904])
  }
  function isAnyCPtr[207923](arg t[207920] :
  c_ptr[205100](?)) param : _unknown[51]
  {
    (207926 return 1)
  }
  function isAnyCPtr[207937](arg t[207934] :
  c_void_ptr[149]) param : _unknown[51] "no doc"
  {
    (207940 return 1)
  }
  function isAnyCPtr[207949](arg t[207947]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (207952 return 0)
  }
  function c_memmove[207963](arg dest[207960] :
  c_void_ptr[149], const arg src[207966] :
  c_void_ptr[149], arg n[207970] :
  integral[199](?)) : _unknown[51] "inline" "fn synchronization free" "no return value for void"
  {
    function memmove[207979](arg dest[207976] :
    c_void_ptr[149], const arg src[207982] :
    c_void_ptr[149], arg n[207986] :
    size_t[20657]) : void[4] "extern" "local args" "no fn body" "fn synchronization free" "no return value for void"
    {
    }
    (208003 call memmove dest[207960] src[207966](208002 call(207997 call . n[207970] c"safeCast") size_t[20657]))
  }
  function c_memcpy[208013](arg dest[208010] :
  c_void_ptr[149], const arg src[208016] :
  c_void_ptr[149], arg n[208020] :
  integral[199](?)) : _unknown[51] "inline" "fn synchronization free" "no return value for void"
  {
    function memcpy[208029](arg dest[208026] :
    c_void_ptr[149], const arg src[208032] :
    c_void_ptr[149], arg n[208036] :
    size_t[20657]) : void[4] "extern" "local args" "no fn body" "fn synchronization free" "no return value for void"
    {
    }
    (208053 call memcpy dest[208010] src[208016](208052 call(208047 call . n[208020] c"safeCast") size_t[20657]))
  }
  function c_memcmp[208063](const arg s1[208060] :
  c_void_ptr[149], const arg s2[208066] :
  c_void_ptr[149], arg n[208070] :
  integral[199](?)) : _unknown[51] "inline" "fn synchronization free"
  {
    function memcmp[208079](const arg s1[208076] :
    c_void_ptr[149], const arg s2[208082] :
    c_void_ptr[149], arg n[208086] :
    size_t[20657]) : _unknown[51] "extern" "local args" "no fn body" "fn synchronization free" "no return value for void"
    {
    }
    { scopeless type
      c_int[20552]
    }
    (208112 return(208111 call(208106 call .(208105 call memcmp s1[208060] s2[208066](208104 call(208099 call . n[208070] c"safeCast") size_t[20657])) c"safeCast") int(64)[13]))
  }
  function c_memset[208122](arg s[208119] :
  c_void_ptr[149], arg c[208125] :
  integral[199](?), arg n[208129] :
  integral[199](?)) : _unknown[51] "inline" "fn synchronization free"
  {
    function memset[208138](arg s[208135] :
    c_void_ptr[149], arg c[208141] :
    c_int[20552], arg n[208145] :
    size_t[20657]) : _unknown[51] "extern" "local args" "no fn body" "fn synchronization free" "no return value for void"
    {
    }
    { scopeless type
      c_void_ptr[149]
    }
    (208170 call memset s[208119](208162 call(208157 call . c[208125] c"safeCast") c_int[20552])(208169 call(208164 call . n[208129] c"safeCast") size_t[20657]))
    (208173 return s[208119])
  }
  (355294 'used modules list'(204991 'use' ChapelStandard[20267])(204997 'use' SysBasic[223535])(204999 'use' SysError[264250])(205000 'use' SysCTypes[20943])(205002 'import' HaltWrappers[210016])(205116 'use' IO[230910]))
}