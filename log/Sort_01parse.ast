AST dump for Sort after pass parse.
Module use list: 

{
  (353127 'use' ChapelStandard)
  (268058 'use' List)
  (268062 'use' Reflection)
  { scopeless
    const defaultComparator[268065] "const" DefaultComparator
    (268068 'end of statement')
  }
  { scopeless
    const reverseComparator[268073] "const"(268072 call ReverseComparator DefaultComparator)
    (268076 'end of statement')
  }
  function compareByPart[268084](arg a[268081] :
  unknown t[268079], arg b[268087] :
  t, arg comparator[268092] :
  unknown rec[268090]) : _unknown[51] "inline" "private"
  {
    { scopeless
      unknown curPart[268096] 0
      (268099 'end of statement')
    }
    {
      unknown tmp[268209] "temp"
      (268227 'move' tmp[268209](268225 call _cond_test 1))
      WhileDo[268214]
      {
        {
          { scopeless
            unknown tmp[268117] "temp"(268116 call(268110 call . comparator c"keyPart") a curPart)
            (268124 call _check_tuple_var_decl tmp[268117] 2)
            unknown aSection[268102](268118 call tmp[268117] 0)
            unknown aPart[268104](268121 call tmp[268117] 1)
            (268129 'end of statement')
          }
          { scopeless
            unknown tmp[268144] "temp"(268143 call(268137 call . comparator c"keyPart") b curPart)
            (268151 call _check_tuple_var_decl tmp[268144] 2)
            unknown bSection[268131](268145 call tmp[268144] 0)
            unknown bPart[268133](268148 call tmp[268144] 1)
            (268156 'end of statement')
          }
          if(268174 call _cond_test(268165 call ||(268159 call != aSection 0)(268163 call != bSection 0)))
          {
            (268171 return(268169 call - aSection bSection))
          }
          if(268188 call _cond_test(268180 call < aPart bPart))
          {
            (268185 return(268183 call - 1))
          }
          if(268200 call _cond_test(268194 call > aPart bPart))
          {
            (268197 return 1)
          }
          (268206 call += curPart 1)
        }
        label _continueLabel[268212]
        (268220 'move' tmp[268209](268218 call _cond_test 1))
        tmp[268209]
      }
      label _breakLabel[268213]
    }
    (268231 return 1)
  }
  function chpl_compare[268242](arg a[268239] :
  unknown t[268237], arg b[268245] :
  t, arg comparator[268250] :
  unknown rec[268248]) : _unknown[51] "inline" "no doc"
  {
    if(268417 call _cond_test(268272 call canResolveMethod comparator "key" a))
    {
      (268295 return(268294 call(268276 call . defaultComparator c"compare")(268285 call(268280 call . comparator c"key") a)(268293 call(268288 call . comparator c"key") b)))
    }
    {
      { scopeless
        if(268412 call _cond_test(268318 call canResolveMethod comparator "compare" a b))
        {
          (268327 return(268326 call(268320 call . comparator c"compare") a b))
        }
        {
          { scopeless
            if(268408 call _cond_test(268350 call canResolveMethod comparator "keyPart" a 0))
            {
              (268357 return(268356 call compareByPart a b comparator))
            }
            {
              (268405 call compilerError(268402 call +(268383 call + "The comparator "(268381 call _cast string[26](268379 'typeof' comparator))) " requires a 'key(a)', 'compare(a, b)', or 'keyPart(a, i)' method"))
            }
          }
        }
      }
    }
  }
  function chpl_check_comparator[268429](arg comparator[268427]:_any[178](?), arg eltType[268431]:_any[178](?)) param : _unknown[51] "no doc" "unsafe"
  {
    { scopeless
      const data[268434] "const" eltType
      (268437 'end of statement')
    }
    { scopeless
      unknown errorDepth[268440] "param" 2
      (268443 'end of statement')
    }
    if(268975 call _cond_test(268447 call ==(268445 'typeof' comparator) DefaultComparator))
    {
    }
    {
      { scopeless
        if(268970 call _cond_test(268455 call canResolveMethod comparator "key" data))
        {
          { scopeless
            const keydata[268463] "const"(268462 call(268457 call . comparator c"key") data)
            (268466 'end of statement')
          }
          unknown keytype[268470] "type variable"(268469 'typeof' keydata)
          if(268531 call _cond_test(268479 call !(268478 call canResolve "<" keydata keydata)))
          {
            { scopeless
              (268529 call compilerError(errorDepth = errorDepth) "The key method in "(268505 call _cast string[26](268503 'typeof' comparator)) " must return an object that supports the '<' function when used with "(268526 call _cast string[26] eltType) " elements")
            }
          }
          if(268572 call _cond_test(268542 call canResolveMethod comparator "compare" data data))
          {
            (268569 call compilerError(errorDepth = errorDepth)(268550 call _cast string[26](268548 'typeof' comparator)) " contains both a key method and a compare method")
          }
          if(268612 call _cond_test(268582 call canResolveMethod comparator "keyPart" data 0))
          {
            (268609 call compilerError(errorDepth = errorDepth)(268590 call _cast string[26](268588 'typeof' comparator)) " contains both a key method and a keyPart method")
          }
        }
        {
          { scopeless
            if(268965 call _cond_test(268622 call canResolveMethod comparator "compare" data data))
            {
              unknown comparetype[268632] "type variable"(268631 'typeof'(268630 call(268624 call . comparator c"compare") data data))
              if(268692 call _cond_test(268640 call !(268639 call isNumericType comparetype)))
              {
                { scopeless
                  (268690 call compilerError(errorDepth = errorDepth) "The compare method in "(268666 call _cast string[26](268664 'typeof' comparator)) " must return a numeric type when used with "(268687 call _cast string[26] eltType) " elements")
                }
              }
            }
            {
              { scopeless
                if(268961 call _cond_test(268703 call canResolveMethod comparator "keyPart" data 0))
                {
                  { scopeless
                    unknown idx[268706] 0 int[13]
                    (268709 'end of statement')
                  }
                  unknown partType[268720] "type variable"(268719 'typeof'(268718 call(268712 call . comparator c"keyPart") data idx))
                  if(268779 call _cond_test(268727 call !(268726 call isTupleType partType)))
                  {
                    { scopeless
                      (268777 call compilerError(errorDepth = errorDepth) "The keyPart method in "(268753 call _cast string[26](268751 'typeof' comparator)) " must return a tuple when used with "(268774 call _cast string[26] eltType) " elements")
                    }
                  }
                  { scopeless
                    unknown tmp[268785] partType
                    (268788 'end of statement')
                  }
                  { scopeless
                    unknown expectInt[268793](268792 call tmp 0)
                    (268796 'end of statement')
                  }
                  { scopeless
                    unknown expectIntUint[268801](268800 call tmp 1)
                    (268804 'end of statement')
                  }
                  if(268846 call _cond_test(268810 call !(268809 call isInt(268807 'typeof' expectInt))))
                  {
                    { scopeless
                      (268844 call compilerError(errorDepth = errorDepth) "The keyPart method in "(268820 call _cast string[26](268818 'typeof' comparator)) " must return a tuple with element 0 of type int(\?) when used with "(268841 call _cast string[26] eltType) " elements")
                    }
                  }
                  if(268897 call _cond_test(268861 call !(268859 call ||(268854 call isInt expectIntUint)(268858 call isUint expectIntUint))))
                  {
                    { scopeless
                      (268895 call compilerError(errorDepth = errorDepth) "The keyPart method in "(268871 call _cast string[26](268869 'typeof' comparator)) " must return a tuple with element 1 of type  int(\?) or uint(\?) when used with "(268892 call _cast string[26] eltType) " elements")
                    }
                  }
                }
                {
                  (268958 call compilerError(errorDepth = errorDepth)(268956 call +(268950 call +(268931 call +(268912 call + "The comparator "(268910 call _cast string[26](268908 'typeof' comparator))) " requires a 'key(a)', 'compare(a, b)', or 'keyPart(a, i)' method ") " for element type ")(268954 call _cast string[26] eltType)))
                }
              }
            }
          }
        }
      }
    }
    (268981 return 1)
  }
  function radixSortOk[268997](arg Data[268994] :
  (268992 call chpl__buildArrayRuntimeType unknown Dom[268987] unknown eltType[268990]), arg comparator[268999]:_any[178](?)) param : _unknown[51] "private" "unsafe"
  {
    if(269074 call _cond_test(269005 call !(269002 call . Dom c"stridable")))
    {
      { scopeless
        unknown tmp[269015](269014 'typeof'(269013 call Data(269009 call . Dom c"alignedLow")))
        (269018 'end of statement')
      }
      if(269069 call _cond_test(269026 call canResolveMethod comparator "keyPart" tmp 0))
      {
        (269028 return 1)
      }
      {
        { scopeless
          if(269065 call _cond_test(269036 call canResolveMethod comparator "key" tmp))
          {
            { scopeless
              unknown key[269045](269044 'typeof'(269043 call(269038 call . comparator c"key") tmp))
              (269048 'end of statement')
            }
            if(269060 call _cond_test(269056 call canResolveMethod defaultComparator "keyPart" key 0))
            {
              { scopeless
                (269058 return 1)
              }
            }
          }
        }
      }
    }
    (269080 return 0)
  }
  function sort[269096](arg Data[269093] :
  (269091 call chpl__buildArrayRuntimeType unknown Dom[269086] unknown eltType[269089]), arg comparator[269101] :
  unknown rec[269098] =
  defaultComparator) : _unknown[51]
  {
    (269109 call chpl_check_comparator comparator eltType)
    if(269124 call _cond_test(269120 call >=(269113 call . Dom c"low")(269117 call . Dom c"high")))
    {
      { scopeless
        (269122 return)
      }
    }
    if(269160 call _cond_test(269133 call radixSortOk Data comparator))
    {
      (269144 call(269137 call . MSBRadixSort c"msbRadixSort") Data(comparator = comparator))
    }
    {
      (269157 call(269150 call . QuickSort c"quickSort") Data(comparator = comparator))
    }
  }
  function sort[269178](arg Data[269175] :
  (269173 call chpl__buildArrayRuntimeType unknown Dom[269168] unknown eltType[269171]), arg comparator[269183] :
  unknown rec[269180] =
  defaultComparator) : _unknown[51] "no doc"
  {
    (269213 call compilerError "sort() requires 1-D array")
  }
  where {
    (269192 call !=(269188 call . Dom c"rank") 1)
  }
  function isSorted[269231](arg Data[269228] :
  (269226 call chpl__buildArrayRuntimeType unknown Dom[269221] unknown eltType[269224]), arg comparator[269236] :
  unknown rec[269233] =
  defaultComparator) : _unknown[51]
  {
    (269245 call chpl_check_comparator comparator eltType)
    { scopeless
      const stride[269263] "const"(269260 IfExpr (269249 call . Dom c"stridable") then
      { scopeless
        (269258 call abs(269254 call . Dom c"stride"))
      } else
      { scopeless
        1
      } )
      (269266 'end of statement')
    }
    { scopeless
      unknown sorted[269268] 1
      (269271 'end of statement')
    }
    Forall {
      induction variables:
        
        unknown element[269331] "index var" "insert auto destroy"
        
        unknown i[269333] "index var" "insert auto destroy"
      iterated expressions:
        Data
        Dom
      shadow variables:
        sorted[269283] 'reduce' intent
          init block
          {
          }
          deinit block
          {
          }
      other variables
        forall body
      {
        if(269325 call _cond_test(269294 call > i(269291 call . Dom c"alignedLow")))
        {
          {
            unknown tmp[269313] "temp"
            (269316 'move' tmp[269313](269315 'addr of' sorted))
            (269321 call = tmp[269313](269318 call && tmp[269313](269310 call <=(269308 call chpl_compare(269304 call Data(269301 call - i stride)) element comparator) 0)))
          }
        }
      }
    }
    (269338 return sorted)
  }
  { scopeless type
    bool[10]
  }
  function isSorted[269355](arg Data[269352] :
  (269350 call chpl__buildArrayRuntimeType unknown Dom[269345] unknown eltType[269348]), arg comparator[269360] :
  unknown rec[269357] =
  defaultComparator) : _unknown[51] "no doc"
  {
    (269390 call compilerError "isSorted() requires 1-D array")
  }
  where {
    (269369 call !=(269365 call . Dom c"rank") 1)
  }
  function sorted[269400](arg x[269398]:_any[178](?), arg comparator[269405] :
  unknown rec[269402] =
  defaultComparator) : _unknown[51] "iterator fn"
  {
    { scopeless
      unknown y[269410] x
      (269413 'end of statement')
    }
    if(269442 call _cond_test(269419 call !(269418 call isArrayValue y)))
    {
      { scopeless
        (269440 call compilerError "Sort.sorted called on non-iterable")
      }
    }
    (269452 call sort y(comparator = comparator))
    {
      unknown _indexOfInterest[269459] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[269460] "expr temp" "temp"
      (269469 'move' _iterator[269460](269467 call _getIterator y))
      Defer
      {
        {
          (269485 call _freeIterator _iterator[269460])
        }
      }
      { scopeless type
        (269474 'move' _indexOfInterest[269459](269471 call iteratorIndex _iterator[269460]))
      }
      ForLoop[269461]
      {
        unknown i[269478] "index var" "insert auto destroy"
        (269480 'move' i[269478] _indexOfInterest[269459])
        { scopeless
          (269457 yield i)
        }
        label _continueLabel[269464]
        _indexOfInterest[269459]
        _iterator[269460]
      }
      label _breakLabel[269465]
    }
  }
  def module BubbleSort[269494]  
  def module HeapSort[269727]  
  def module InsertionSort[270181]  
  def module BinaryInsertionSort[270784]  
  def module MergeSort[271284]  
  def module QuickSort[272128]  
  def module SelectionSort[273369]  
  def module ShellSort[273610]  
  def module SampleSortHelp[273986]  
  def module RadixSortHelp[276164]  
  def module ShallowCopy[277471]  
  def module SequentialInPlacePartitioning[278186]  
  def module TwoArrayPartitioning[279284]  
  def module TwoArrayRadixSort[287678]  
  def module TwoArraySampleSort[287875]  
  def module InPlacePartitioning[288079]  
  def module MSBRadixSort[288083]  
  type DefaultComparator[290633] function DefaultComparator[290633].compare[289996](arg _mt[290637]:_MT[238], arg this[290635]:DefaultComparator[290633], arg a[289994]:_any[178](?), arg b[289998]:_any[178](?)) : _unknown[51] "inline" "method" "primary method"
  {
    if(290026 call _cond_test(290002 call < a b))
    {
      (290007 return(290005 call - 1))
    }
    {
      { scopeless
        if(290021 call _cond_test(290012 call < b a))
        {
          (290015 return 1)
        }
        {
          { scopeless
            (290019 return 0)
          }
        }
      }
    }
  } function DefaultComparator[290633].keyPart[290040](arg _mt[290641]:_MT[238], arg this[290639]:DefaultComparator[290633], arg x[290037] :
  integral, arg i[290043] :
  int[13]) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      unknown section[290082](290079 IfExpr (290061 call > i 0) then
      { scopeless
        (290070 call -(290068 call _cast(290067 call int[13] 8) 1))
      } else
      { scopeless
        (290077 call _cast(290076 call int[13] 8) 0)
      } )(290058 call int[13] 8)
      (290085 'end of statement')
    }
    (290092 return(290090 call _build_tuple section x))
  }
  { scopeless type
    (290053 call _build_tuple(290049 call int[13] 8)(290051 'typeof' x))
  } function DefaultComparator[290633].keyPart[290103](arg _mt[290645]:_MT[238], arg this[290643]:DefaultComparator[290633], arg x[290100] :
  chpl_anyreal, arg i[290106] :
  int[13]) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      unknown section[290151](290148 IfExpr (290130 call > i 0) then
      { scopeless
        (290139 call -(290137 call _cast(290136 call int[13] 8) 1))
      } else
      { scopeless
        (290146 call _cast(290145 call int[13] 8) 0)
      } )(290127 call int[13] 8)
      (290154 'end of statement')
    }
    { scopeless
      unknown nbits[290161] "param"(290160 call numBits(290158 'typeof' x))
      (290164 'end of statement')
    }
    { scopeless
      unknown src[290166] x
      (290169 'end of statement')
    }
    { scopeless
      unknown dst[290174](290173 call uint[115] nbits)
      (290177 'end of statement')
    }
    (290193 call c_memcpy(290182 call c_ptrTo dst)(290187 call c_ptrTo src)(290192 call c_sizeof(290190 'typeof' src)))
    if(290237 call _cond_test(290203 call ==(290200 call >> dst(290198 call - nbits 1)) 1))
    {
      (290209 call = dst(290207 call ~ dst))
    }
    {
      { scopeless
        const one[290218] "const" 1(290216 call uint[115] nbits)
        (290221 'end of statement')
      }
      (290234 call = dst(290232 call ^ dst(290230 call << one(290228 call - nbits 1))))
    }
    (290246 return(290244 call _build_tuple section dst))
  }
  { scopeless type
    (290122 call _build_tuple(290112 call int[13] 8)(290120 call uint[115](290118 call numBits(290116 'typeof' x))))
  } function DefaultComparator[290633].keyPart[290257](arg _mt[290649]:_MT[238], arg this[290647]:DefaultComparator[290633], arg x[290254] :
  chpl_anyimag, arg i[290260] :
  int[13]) : _unknown[51] "inline" "method" "primary method"
  {
    (290293 return(290292 call keyPart(290288 call _cast(290287 call real[16](290285 call numBits(290283 'typeof' x))) x) i))
  }
  { scopeless type
    (290276 call _build_tuple(290266 call int[13] 8)(290274 call uint[115](290272 call numBits(290270 'typeof' x))))
  } function DefaultComparator[290633].keyPart[290305](arg _mt[290653]:_MT[238], arg this[290651]:DefaultComparator[290633], arg x[290302] :
  _tuple, arg i[290308] :
  int[13]) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      const tmp[290367] "const" "temp"(290366 call(290357 call . this c"keyPart")(290363 call x i) 1)
      (290371 call _check_tuple_var_decl tmp[290367] 2)
      const part[290353] "const"(290368 call tmp[290367] 1)
      (290376 'end of statement')
    }
    if(290405 call _cond_test(290383 call >= i(290380 call . x c"size")))
    {
      { scopeless
        (290396 return(290394 call _build_tuple(290386 call - 1)(290391 call _cast(290390 'typeof' part) 0)))
      }
    }
    {
      { scopeless
        (290403 return(290401 call _build_tuple 0 part))
      }
    }
  }
  where {
    (290349 call &&(290314 call isHomogeneousTuple x)(290347 call ||(290338 call ||(290329 call ||(290321 call isInt(290319 call x 0))(290328 call isUint(290326 call x 0)))(290337 call isReal(290335 call x 0)))(290346 call isImag(290344 call x 0))))
  } function DefaultComparator[290633].keyPart[290420](arg _mt[290657]:_MT[238], arg this[290655]:DefaultComparator[290633], arg x[290417] :
  string[26], arg i[290423] :
  int[13]) : _unknown[51] "inline" "method" "primary method"
  {
    if(290452 call _cond_test boundsChecking)
    {
      { scopeless
        (290450 call assert(290447 call ==(290440 call . x c"locale_id")(290444 call . here c"id")))
      }
    }
    { scopeless
      unknown ptr[290473](290471 call _cast(290470 call c_ptr(290468 call uint[115] 8))(290463 call(290459 call . x c"c_str")))
      (290476 'end of statement')
    }
    { scopeless
      unknown len[290481](290478 call . x c"numBytes")
      (290484 'end of statement')
    }
    { scopeless
      unknown section[290508](290505 IfExpr (290487 call < i len) then
      { scopeless
        (290494 call _cast(290493 call int[13] 8) 0)
      } else
      { scopeless
        (290503 call -(290501 call _cast(290500 call int[13] 8) 1))
      } )
      (290511 'end of statement')
    }
    { scopeless
      unknown part[290530](290527 IfExpr (290514 call < i len) then
      { scopeless
        (290519 call ptr i)
      } else
      { scopeless
        (290525 call _cast(290524 call uint[115] 8) 0)
      } )
      (290533 'end of statement')
    }
    (290539 return(290537 call _build_tuple section part))
  }
  { scopeless type
    (290435 call _build_tuple(290429 call int[13] 8)(290433 call uint[115] 8))
  } function DefaultComparator[290633].keyPart[290550](arg _mt[290661]:_MT[238], arg this[290659]:DefaultComparator[290633], arg x[290547] :
  c_string, arg i[290553] :
  int[13]) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      unknown ptr[290577](290575 call _cast(290574 call c_ptr(290572 call uint[115] 8)) x)
      (290580 'end of statement')
    }
    { scopeless
      unknown byte[290586](290585 call ptr i)
      (290589 'end of statement')
    }
    { scopeless
      unknown section[290613](290610 IfExpr (290592 call != byte 0) then
      { scopeless
        (290599 call _cast(290598 call int[13] 8) 0)
      } else
      { scopeless
        (290608 call -(290606 call _cast(290605 call int[13] 8) 1))
      } )
      (290616 'end of statement')
    }
    { scopeless
      unknown part[290618] byte
      (290621 'end of statement')
    }
    (290627 return(290625 call _build_tuple section part))
  }
  { scopeless type
    (290565 call _build_tuple(290559 call int[13] 8)(290563 call uint[115] 8))
  }
  type ReverseComparator[291270](?) unknown comparator[290665] function ReverseComparator[291270](?).init[290671](arg _mt[291274]:_MT[238], arg this[291272]:ReverseComparator[291270](?)) : _unknown[51] "method" "primary method"
  {
    (290680 call =(290676 call . this c"comparator") defaultComparator)
  } function ReverseComparator[291270](?).init[290690](arg _mt[291278]:_MT[238], arg this[291276]:ReverseComparator[291270](?), arg comparator[290688]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    (290697 call =(290693 call . this c"comparator") comparator)
  } function ReverseComparator[291270](?).init=[290712](arg _mt[291282]:_MT[238], arg this[291280]:ReverseComparator[291270](?), arg revcomp[290709] :
  (290708 call ReverseComparator ?[260])) : _unknown[51] "method" "primary method" "no doc"
  {
    (290722 call =(290715 call . this c"comparator")(290719 call . revcomp c"comparator"))
  } function ReverseComparator[291270](?).typeIsBitReversible[290732](arg _mt[291286]:_MT[238], arg this[291284]:ReverseComparator[291270](?), arg t[290730]:_any[178](?)) param : _unknown[51] "method" "primary method" "no doc"
  {
    if(290754 call _cond_test(290737 call isHomogeneousTupleType t))
    {
      { scopeless
        unknown tmp[290739] t
        (290742 'end of statement')
      }
      (290752 return(290751 call typeIsBitReversible(290749 'typeof'(290748 call tmp 0))))
    }
    if(290766 call _cond_test(290762 call isUintType t))
    {
      { scopeless
        (290764 return 1)
      }
    }
    if(290778 call _cond_test(290774 call isIntType t))
    {
      { scopeless
        (290776 return 1)
      }
    }
    (290784 return 0)
  } function ReverseComparator[291270](?).typeIsNegateReversible[290792](arg _mt[291290]:_MT[238], arg this[291288]:ReverseComparator[291270](?), arg t[290790]:_any[178](?)) param : _unknown[51] "method" "primary method" "no doc"
  {
    if(290814 call _cond_test(290797 call isHomogeneousTupleType t))
    {
      { scopeless
        unknown tmp[290799] t
        (290802 'end of statement')
      }
      (290812 return(290811 call typeIsNegateReversible(290809 'typeof'(290808 call tmp 0))))
    }
    if(290832 call _cond_test(290827 call ||(290822 call isIntType t)(290826 call isUintType t)))
    {
      { scopeless
        (290830 return 0)
      }
    }
    if(290844 call _cond_test(290840 call isNumericType t))
    {
      { scopeless
        (290842 return 1)
      }
    }
    (290850 return 0)
  } function ReverseComparator[291270](?).hasKeyPart[290858](arg _mt[291294]:_MT[238], arg this[291292]:ReverseComparator[291270](?), arg a[290856]:_any[178](?)) param : _unknown[51] "method" "primary method" "no doc"
  {
    (290870 return(290869 call canResolveMethod(290862 call . this c"comparator") "keyPart" a 0))
  } function ReverseComparator[291270](?).hasKeyPartFromKey[290879](arg _mt[291298]:_MT[238], arg this[291296]:ReverseComparator[291270](?), arg a[290877]:_any[178](?)) param : _unknown[51] "method" "primary method" "no doc"
  {
    if(290912 call _cond_test(290889 call canResolveMethod(290883 call . this c"comparator") "key" a))
    {
      { scopeless
        unknown key[290898](290897 'typeof'(290896 call(290891 call . comparator c"key") a))
        (290901 'end of statement')
      }
      (290910 return(290909 call canResolveMethod defaultComparator "keyPart" key 0))
    }
    (290918 return 0)
  } function ReverseComparator[291270](?).hasCompare[290926](arg _mt[291302]:_MT[238], arg this[291300]:ReverseComparator[291270](?), arg a[290924]:_any[178](?), arg b[290928]:_any[178](?)) param : _unknown[51] "method" "primary method" "no doc"
  {
    (290940 return(290939 call canResolveMethod(290932 call . this c"comparator") "compare" a b))
  } function ReverseComparator[291270](?).hasCompareFromKey[290949](arg _mt[291306]:_MT[238], arg this[291304]:ReverseComparator[291270](?), arg a[290947]:_any[178](?)) param : _unknown[51] "method" "primary method" "no doc"
  {
    if(290982 call _cond_test(290959 call canResolveMethod(290953 call . this c"comparator") "key" a))
    {
      { scopeless
        unknown key[290968](290967 'typeof'(290966 call(290961 call . comparator c"key") a))
        (290971 'end of statement')
      }
      (290980 return(290979 call canResolveMethod defaultComparator "compare" key key))
    }
    (290988 return 0)
  } function ReverseComparator[291270](?).getKeyPart[290996](arg _mt[291310]:_MT[238], arg this[291308]:ReverseComparator[291270](?), arg cmp[290994]:_any[178](?), arg a[290998]:_any[178](?), arg i[291000]:_any[178](?)) : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    { scopeless
      unknown tmp[291015] "temp"(291014 call(291008 call . cmp c"keyPart") a i)
      (291022 call _check_tuple_var_decl tmp[291015] 2)
      unknown section[291002](291016 call tmp[291015] 0)
      unknown part[291004](291019 call tmp[291015] 1)
      (291027 'end of statement')
    }
    if(291089 call _cond_test(291033 call typeIsBitReversible(291031 'typeof' part)))
    {
      (291043 return(291041 call _build_tuple(291035 call - section)(291038 call ~ part)))
    }
    {
      { scopeless
        if(291085 call _cond_test(291050 call typeIsNegateReversible(291048 'typeof' part)))
        {
          (291060 return(291058 call _build_tuple(291052 call - section)(291055 call - part)))
        }
        {
          (291082 call compilerError "keyPart must return int or uint")
        }
      }
    }
  } function ReverseComparator[291270](?).keyPart[291100](arg _mt[291314]:_MT[238], arg this[291312]:ReverseComparator[291270](?), arg a[291098]:_any[178](?), arg i[291102]:_any[178](?)) : _unknown[51] "inline" "method" "primary method"
  {
    (291122 call chpl_check_comparator(291116 call . this c"comparator")(291121 'typeof' a))
    if(291159 call _cond_test(291128 call hasKeyPartFromKey a))
    {
      (291144 return(291143 call getKeyPart defaultComparator(291141 call(291136 call .(291133 call . this c"comparator") c"key") a) i))
    }
    {
      (291156 return(291155 call getKeyPart(291149 call . this c"comparator") a i))
    }
  }
  where {
    (291112 call ||(291107 call hasKeyPart a)(291111 call hasKeyPartFromKey a))
  } function ReverseComparator[291270](?).doCompare[291170](arg _mt[291318]:_MT[238], arg this[291316]:ReverseComparator[291270](?), arg cmp[291168]:_any[178](?), arg a[291172]:_any[178](?), arg b[291174]:_any[178](?)) : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    (291184 return(291183 call(291177 call . cmp c"compare") b a))
  } function ReverseComparator[291270](?).compare[291193](arg _mt[291322]:_MT[238], arg this[291320]:ReverseComparator[291270](?), arg a[291191]:_any[178](?), arg b[291195]:_any[178](?)) : _unknown[51] "inline" "method" "primary method"
  {
    (291216 call chpl_check_comparator(291210 call . this c"comparator")(291215 'typeof' a))
    if(291262 call _cond_test(291222 call hasCompareFromKey a))
    {
      (291247 return(291246 call doCompare defaultComparator(291235 call(291230 call .(291227 call . this c"comparator") c"key") a)(291245 call(291240 call .(291237 call . this c"comparator") c"key") b)))
    }
    {
      (291259 return(291258 call doCompare(291252 call . this c"comparator") a b))
    }
  }
  where {
    (291206 call ||(291201 call hasCompare a b)(291205 call hasCompareFromKey a))
  }
}