AST dump for Sort after pass parse.
Module use list: 

{
  (353018 'use' ChapelStandard)
  (267970 'use' List)
  (267974 'use' Reflection)
  { scopeless
    const defaultComparator[267977] "const" DefaultComparator
    (267980 'end of statement')
  }
  { scopeless
    const reverseComparator[267985] "const"(267984 call ReverseComparator DefaultComparator)
    (267988 'end of statement')
  }
  function compareByPart[267996](arg a[267993] :
  unknown t[267991], arg b[267999] :
  t, arg comparator[268004] :
  unknown rec[268002]) : _unknown[51] "inline" "private"
  {
    { scopeless
      unknown curPart[268008] 0
      (268011 'end of statement')
    }
    {
      unknown tmp[268121] "temp"
      (268139 'move' tmp[268121](268137 call _cond_test 1))
      WhileDo[268126]
      {
        {
          { scopeless
            unknown tmp[268029] "temp"(268028 call(268022 call . comparator c"keyPart") a curPart)
            (268036 call _check_tuple_var_decl tmp[268029] 2)
            unknown aSection[268014](268030 call tmp[268029] 0)
            unknown aPart[268016](268033 call tmp[268029] 1)
            (268041 'end of statement')
          }
          { scopeless
            unknown tmp[268056] "temp"(268055 call(268049 call . comparator c"keyPart") b curPart)
            (268063 call _check_tuple_var_decl tmp[268056] 2)
            unknown bSection[268043](268057 call tmp[268056] 0)
            unknown bPart[268045](268060 call tmp[268056] 1)
            (268068 'end of statement')
          }
          if(268086 call _cond_test(268077 call ||(268071 call != aSection 0)(268075 call != bSection 0)))
          {
            (268083 return(268081 call - aSection bSection))
          }
          if(268100 call _cond_test(268092 call < aPart bPart))
          {
            (268097 return(268095 call - 1))
          }
          if(268112 call _cond_test(268106 call > aPart bPart))
          {
            (268109 return 1)
          }
          (268118 call += curPart 1)
        }
        label _continueLabel[268124]
        (268132 'move' tmp[268121](268130 call _cond_test 1))
        tmp[268121]
      }
      label _breakLabel[268125]
    }
    (268143 return 1)
  }
  function chpl_compare[268154](arg a[268151] :
  unknown t[268149], arg b[268157] :
  t, arg comparator[268162] :
  unknown rec[268160]) : _unknown[51] "inline" "no doc"
  {
    if(268329 call _cond_test(268184 call canResolveMethod comparator "key" a))
    {
      (268207 return(268206 call(268188 call . defaultComparator c"compare")(268197 call(268192 call . comparator c"key") a)(268205 call(268200 call . comparator c"key") b)))
    }
    {
      { scopeless
        if(268324 call _cond_test(268230 call canResolveMethod comparator "compare" a b))
        {
          (268239 return(268238 call(268232 call . comparator c"compare") a b))
        }
        {
          { scopeless
            if(268320 call _cond_test(268262 call canResolveMethod comparator "keyPart" a 0))
            {
              (268269 return(268268 call compareByPart a b comparator))
            }
            {
              (268317 call compilerError(268314 call +(268295 call + "The comparator "(268293 call _cast string[26](268291 'typeof' comparator))) " requires a 'key(a)', 'compare(a, b)', or 'keyPart(a, i)' method"))
            }
          }
        }
      }
    }
  }
  function chpl_check_comparator[268341](arg comparator[268339]:_any[178](?), arg eltType[268343]:_any[178](?)) param : _unknown[51] "no doc" "unsafe"
  {
    { scopeless
      const data[268346] "const" eltType
      (268349 'end of statement')
    }
    { scopeless
      unknown errorDepth[268352] "param" 2
      (268355 'end of statement')
    }
    if(268887 call _cond_test(268359 call ==(268357 'typeof' comparator) DefaultComparator))
    {
    }
    {
      { scopeless
        if(268882 call _cond_test(268367 call canResolveMethod comparator "key" data))
        {
          { scopeless
            const keydata[268375] "const"(268374 call(268369 call . comparator c"key") data)
            (268378 'end of statement')
          }
          unknown keytype[268382] "type variable"(268381 'typeof' keydata)
          if(268443 call _cond_test(268391 call !(268390 call canResolve "<" keydata keydata)))
          {
            { scopeless
              (268441 call compilerError(errorDepth = errorDepth) "The key method in "(268417 call _cast string[26](268415 'typeof' comparator)) " must return an object that supports the '<' function when used with "(268438 call _cast string[26] eltType) " elements")
            }
          }
          if(268484 call _cond_test(268454 call canResolveMethod comparator "compare" data data))
          {
            (268481 call compilerError(errorDepth = errorDepth)(268462 call _cast string[26](268460 'typeof' comparator)) " contains both a key method and a compare method")
          }
          if(268524 call _cond_test(268494 call canResolveMethod comparator "keyPart" data 0))
          {
            (268521 call compilerError(errorDepth = errorDepth)(268502 call _cast string[26](268500 'typeof' comparator)) " contains both a key method and a keyPart method")
          }
        }
        {
          { scopeless
            if(268877 call _cond_test(268534 call canResolveMethod comparator "compare" data data))
            {
              unknown comparetype[268544] "type variable"(268543 'typeof'(268542 call(268536 call . comparator c"compare") data data))
              if(268604 call _cond_test(268552 call !(268551 call isNumericType comparetype)))
              {
                { scopeless
                  (268602 call compilerError(errorDepth = errorDepth) "The compare method in "(268578 call _cast string[26](268576 'typeof' comparator)) " must return a numeric type when used with "(268599 call _cast string[26] eltType) " elements")
                }
              }
            }
            {
              { scopeless
                if(268873 call _cond_test(268615 call canResolveMethod comparator "keyPart" data 0))
                {
                  { scopeless
                    unknown idx[268618] 0 int[13]
                    (268621 'end of statement')
                  }
                  unknown partType[268632] "type variable"(268631 'typeof'(268630 call(268624 call . comparator c"keyPart") data idx))
                  if(268691 call _cond_test(268639 call !(268638 call isTupleType partType)))
                  {
                    { scopeless
                      (268689 call compilerError(errorDepth = errorDepth) "The keyPart method in "(268665 call _cast string[26](268663 'typeof' comparator)) " must return a tuple when used with "(268686 call _cast string[26] eltType) " elements")
                    }
                  }
                  { scopeless
                    unknown tmp[268697] partType
                    (268700 'end of statement')
                  }
                  { scopeless
                    unknown expectInt[268705](268704 call tmp 0)
                    (268708 'end of statement')
                  }
                  { scopeless
                    unknown expectIntUint[268713](268712 call tmp 1)
                    (268716 'end of statement')
                  }
                  if(268758 call _cond_test(268722 call !(268721 call isInt(268719 'typeof' expectInt))))
                  {
                    { scopeless
                      (268756 call compilerError(errorDepth = errorDepth) "The keyPart method in "(268732 call _cast string[26](268730 'typeof' comparator)) " must return a tuple with element 0 of type int(\?) when used with "(268753 call _cast string[26] eltType) " elements")
                    }
                  }
                  if(268809 call _cond_test(268773 call !(268771 call ||(268766 call isInt expectIntUint)(268770 call isUint expectIntUint))))
                  {
                    { scopeless
                      (268807 call compilerError(errorDepth = errorDepth) "The keyPart method in "(268783 call _cast string[26](268781 'typeof' comparator)) " must return a tuple with element 1 of type  int(\?) or uint(\?) when used with "(268804 call _cast string[26] eltType) " elements")
                    }
                  }
                }
                {
                  (268870 call compilerError(errorDepth = errorDepth)(268868 call +(268862 call +(268843 call +(268824 call + "The comparator "(268822 call _cast string[26](268820 'typeof' comparator))) " requires a 'key(a)', 'compare(a, b)', or 'keyPart(a, i)' method ") " for element type ")(268866 call _cast string[26] eltType)))
                }
              }
            }
          }
        }
      }
    }
    (268893 return 1)
  }
  function radixSortOk[268909](arg Data[268906] :
  (268904 call chpl__buildArrayRuntimeType unknown Dom[268899] unknown eltType[268902]), arg comparator[268911]:_any[178](?)) param : _unknown[51] "private" "unsafe"
  {
    if(268986 call _cond_test(268917 call !(268914 call . Dom c"stridable")))
    {
      { scopeless
        unknown tmp[268927](268926 'typeof'(268925 call Data(268921 call . Dom c"alignedLow")))
        (268930 'end of statement')
      }
      if(268981 call _cond_test(268938 call canResolveMethod comparator "keyPart" tmp 0))
      {
        (268940 return 1)
      }
      {
        { scopeless
          if(268977 call _cond_test(268948 call canResolveMethod comparator "key" tmp))
          {
            { scopeless
              unknown key[268957](268956 'typeof'(268955 call(268950 call . comparator c"key") tmp))
              (268960 'end of statement')
            }
            if(268972 call _cond_test(268968 call canResolveMethod defaultComparator "keyPart" key 0))
            {
              { scopeless
                (268970 return 1)
              }
            }
          }
        }
      }
    }
    (268992 return 0)
  }
  function sort[269008](arg Data[269005] :
  (269003 call chpl__buildArrayRuntimeType unknown Dom[268998] unknown eltType[269001]), arg comparator[269013] :
  unknown rec[269010] =
  defaultComparator) : _unknown[51]
  {
    (269021 call chpl_check_comparator comparator eltType)
    if(269036 call _cond_test(269032 call >=(269025 call . Dom c"low")(269029 call . Dom c"high")))
    {
      { scopeless
        (269034 return)
      }
    }
    if(269072 call _cond_test(269045 call radixSortOk Data comparator))
    {
      (269056 call(269049 call . MSBRadixSort c"msbRadixSort") Data(comparator = comparator))
    }
    {
      (269069 call(269062 call . QuickSort c"quickSort") Data(comparator = comparator))
    }
  }
  function sort[269090](arg Data[269087] :
  (269085 call chpl__buildArrayRuntimeType unknown Dom[269080] unknown eltType[269083]), arg comparator[269095] :
  unknown rec[269092] =
  defaultComparator) : _unknown[51] "no doc"
  {
    (269125 call compilerError "sort() requires 1-D array")
  }
  where {
    (269104 call !=(269100 call . Dom c"rank") 1)
  }
  function isSorted[269143](arg Data[269140] :
  (269138 call chpl__buildArrayRuntimeType unknown Dom[269133] unknown eltType[269136]), arg comparator[269148] :
  unknown rec[269145] =
  defaultComparator) : _unknown[51]
  {
    (269157 call chpl_check_comparator comparator eltType)
    { scopeless
      const stride[269175] "const"(269172 IfExpr (269161 call . Dom c"stridable") then
      { scopeless
        (269170 call abs(269166 call . Dom c"stride"))
      } else
      { scopeless
        1
      } )
      (269178 'end of statement')
    }
    { scopeless
      unknown sorted[269180] 1
      (269183 'end of statement')
    }
    Forall {
      induction variables:
        
        unknown element[269243] "index var" "insert auto destroy"
        
        unknown i[269245] "index var" "insert auto destroy"
      iterated expressions:
        Data
        Dom
      shadow variables:
        sorted[269195] 'reduce' intent
          init block
          {
          }
          deinit block
          {
          }
      other variables
        forall body
      {
        if(269237 call _cond_test(269206 call > i(269203 call . Dom c"alignedLow")))
        {
          {
            unknown tmp[269225] "temp"
            (269228 'move' tmp[269225](269227 'addr of' sorted))
            (269233 call = tmp[269225](269230 call && tmp[269225](269222 call <=(269220 call chpl_compare(269216 call Data(269213 call - i stride)) element comparator) 0)))
          }
        }
      }
    }
    (269249 return sorted)
  }
  { scopeless type
    bool[10]
  }
  function isSorted[269266](arg Data[269263] :
  (269261 call chpl__buildArrayRuntimeType unknown Dom[269256] unknown eltType[269259]), arg comparator[269271] :
  unknown rec[269268] =
  defaultComparator) : _unknown[51] "no doc"
  {
    (269301 call compilerError "isSorted() requires 1-D array")
  }
  where {
    (269280 call !=(269276 call . Dom c"rank") 1)
  }
  function sorted[269311](arg x[269309]:_any[178](?), arg comparator[269316] :
  unknown rec[269313] =
  defaultComparator) : _unknown[51] "iterator fn"
  {
    { scopeless
      unknown y[269321] x
      (269324 'end of statement')
    }
    if(269353 call _cond_test(269330 call !(269329 call isArrayValue y)))
    {
      { scopeless
        (269351 call compilerError "Sort.sorted called on non-iterable")
      }
    }
    (269363 call sort y(comparator = comparator))
    {
      unknown _indexOfInterest[269370] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[269371] "expr temp" "temp"
      (269380 'move' _iterator[269371](269378 call _getIterator y))
      Defer
      {
        {
          (269396 call _freeIterator _iterator[269371])
        }
      }
      { scopeless type
        (269385 'move' _indexOfInterest[269370](269382 call iteratorIndex _iterator[269371]))
      }
      ForLoop[269372]
      {
        unknown i[269389] "index var" "insert auto destroy"
        (269391 'move' i[269389] _indexOfInterest[269370])
        { scopeless
          (269368 yield i)
        }
        label _continueLabel[269375]
        _indexOfInterest[269370]
        _iterator[269371]
      }
      label _breakLabel[269376]
    }
  }
  def module BubbleSort[269405]  
  def module HeapSort[269638]  
  def module InsertionSort[270092]  
  def module BinaryInsertionSort[270695]  
  def module MergeSort[271195]  
  def module QuickSort[272039]  
  def module SelectionSort[273279]  
  def module ShellSort[273520]  
  def module SampleSortHelp[273896]  
  def module RadixSortHelp[276074]  
  def module ShallowCopy[277381]  
  def module SequentialInPlacePartitioning[278096]  
  def module TwoArrayPartitioning[279194]  
  def module TwoArrayRadixSort[287584]  
  def module TwoArraySampleSort[287781]  
  def module InPlacePartitioning[287985]  
  def module MSBRadixSort[287989]  
  type DefaultComparator[290537] function DefaultComparator[290537].compare[289900](arg _mt[290541]:_MT[238], arg this[290539]:DefaultComparator[290537], arg a[289898]:_any[178](?), arg b[289902]:_any[178](?)) : _unknown[51] "inline" "method" "primary method"
  {
    if(289930 call _cond_test(289906 call < a b))
    {
      (289911 return(289909 call - 1))
    }
    {
      { scopeless
        if(289925 call _cond_test(289916 call < b a))
        {
          (289919 return 1)
        }
        {
          { scopeless
            (289923 return 0)
          }
        }
      }
    }
  } function DefaultComparator[290537].keyPart[289944](arg _mt[290545]:_MT[238], arg this[290543]:DefaultComparator[290537], arg x[289941] :
  integral, arg i[289947] :
  int[13]) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      unknown section[289986](289983 IfExpr (289965 call > i 0) then
      { scopeless
        (289974 call -(289972 call _cast(289971 call int[13] 8) 1))
      } else
      { scopeless
        (289981 call _cast(289980 call int[13] 8) 0)
      } )(289962 call int[13] 8)
      (289989 'end of statement')
    }
    (289996 return(289994 call _build_tuple section x))
  }
  { scopeless type
    (289957 call _build_tuple(289953 call int[13] 8)(289955 'typeof' x))
  } function DefaultComparator[290537].keyPart[290007](arg _mt[290549]:_MT[238], arg this[290547]:DefaultComparator[290537], arg x[290004] :
  chpl_anyreal, arg i[290010] :
  int[13]) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      unknown section[290055](290052 IfExpr (290034 call > i 0) then
      { scopeless
        (290043 call -(290041 call _cast(290040 call int[13] 8) 1))
      } else
      { scopeless
        (290050 call _cast(290049 call int[13] 8) 0)
      } )(290031 call int[13] 8)
      (290058 'end of statement')
    }
    { scopeless
      unknown nbits[290065] "param"(290064 call numBits(290062 'typeof' x))
      (290068 'end of statement')
    }
    { scopeless
      unknown src[290070] x
      (290073 'end of statement')
    }
    { scopeless
      unknown dst[290078](290077 call uint[115] nbits)
      (290081 'end of statement')
    }
    (290097 call c_memcpy(290086 call c_ptrTo dst)(290091 call c_ptrTo src)(290096 call c_sizeof(290094 'typeof' src)))
    if(290141 call _cond_test(290107 call ==(290104 call >> dst(290102 call - nbits 1)) 1))
    {
      (290113 call = dst(290111 call ~ dst))
    }
    {
      { scopeless
        const one[290122] "const" 1(290120 call uint[115] nbits)
        (290125 'end of statement')
      }
      (290138 call = dst(290136 call ^ dst(290134 call << one(290132 call - nbits 1))))
    }
    (290150 return(290148 call _build_tuple section dst))
  }
  { scopeless type
    (290026 call _build_tuple(290016 call int[13] 8)(290024 call uint[115](290022 call numBits(290020 'typeof' x))))
  } function DefaultComparator[290537].keyPart[290161](arg _mt[290553]:_MT[238], arg this[290551]:DefaultComparator[290537], arg x[290158] :
  chpl_anyimag, arg i[290164] :
  int[13]) : _unknown[51] "inline" "method" "primary method"
  {
    (290197 return(290196 call keyPart(290192 call _cast(290191 call real[16](290189 call numBits(290187 'typeof' x))) x) i))
  }
  { scopeless type
    (290180 call _build_tuple(290170 call int[13] 8)(290178 call uint[115](290176 call numBits(290174 'typeof' x))))
  } function DefaultComparator[290537].keyPart[290209](arg _mt[290557]:_MT[238], arg this[290555]:DefaultComparator[290537], arg x[290206] :
  _tuple, arg i[290212] :
  int[13]) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      const tmp[290271] "const" "temp"(290270 call(290261 call . this c"keyPart")(290267 call x i) 1)
      (290275 call _check_tuple_var_decl tmp[290271] 2)
      const part[290257] "const"(290272 call tmp[290271] 1)
      (290280 'end of statement')
    }
    if(290309 call _cond_test(290287 call >= i(290284 call . x c"size")))
    {
      { scopeless
        (290300 return(290298 call _build_tuple(290290 call - 1)(290295 call _cast(290294 'typeof' part) 0)))
      }
    }
    {
      { scopeless
        (290307 return(290305 call _build_tuple 0 part))
      }
    }
  }
  where {
    (290253 call &&(290218 call isHomogeneousTuple x)(290251 call ||(290242 call ||(290233 call ||(290225 call isInt(290223 call x 0))(290232 call isUint(290230 call x 0)))(290241 call isReal(290239 call x 0)))(290250 call isImag(290248 call x 0))))
  } function DefaultComparator[290537].keyPart[290324](arg _mt[290561]:_MT[238], arg this[290559]:DefaultComparator[290537], arg x[290321] :
  string[26], arg i[290327] :
  int[13]) : _unknown[51] "inline" "method" "primary method"
  {
    if(290356 call _cond_test boundsChecking)
    {
      { scopeless
        (290354 call assert(290351 call ==(290344 call . x c"locale_id")(290348 call . here c"id")))
      }
    }
    { scopeless
      unknown ptr[290377](290375 call _cast(290374 call c_ptr(290372 call uint[115] 8))(290367 call(290363 call . x c"c_str")))
      (290380 'end of statement')
    }
    { scopeless
      unknown len[290385](290382 call . x c"numBytes")
      (290388 'end of statement')
    }
    { scopeless
      unknown section[290412](290409 IfExpr (290391 call < i len) then
      { scopeless
        (290398 call _cast(290397 call int[13] 8) 0)
      } else
      { scopeless
        (290407 call -(290405 call _cast(290404 call int[13] 8) 1))
      } )
      (290415 'end of statement')
    }
    { scopeless
      unknown part[290434](290431 IfExpr (290418 call < i len) then
      { scopeless
        (290423 call ptr i)
      } else
      { scopeless
        (290429 call _cast(290428 call uint[115] 8) 0)
      } )
      (290437 'end of statement')
    }
    (290443 return(290441 call _build_tuple section part))
  }
  { scopeless type
    (290339 call _build_tuple(290333 call int[13] 8)(290337 call uint[115] 8))
  } function DefaultComparator[290537].keyPart[290454](arg _mt[290565]:_MT[238], arg this[290563]:DefaultComparator[290537], arg x[290451] :
  c_string, arg i[290457] :
  int[13]) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      unknown ptr[290481](290479 call _cast(290478 call c_ptr(290476 call uint[115] 8)) x)
      (290484 'end of statement')
    }
    { scopeless
      unknown byte[290490](290489 call ptr i)
      (290493 'end of statement')
    }
    { scopeless
      unknown section[290517](290514 IfExpr (290496 call != byte 0) then
      { scopeless
        (290503 call _cast(290502 call int[13] 8) 0)
      } else
      { scopeless
        (290512 call -(290510 call _cast(290509 call int[13] 8) 1))
      } )
      (290520 'end of statement')
    }
    { scopeless
      unknown part[290522] byte
      (290525 'end of statement')
    }
    (290531 return(290529 call _build_tuple section part))
  }
  { scopeless type
    (290469 call _build_tuple(290463 call int[13] 8)(290467 call uint[115] 8))
  }
  type ReverseComparator[291174](?) unknown comparator[290569] function ReverseComparator[291174](?).init[290575](arg _mt[291178]:_MT[238], arg this[291176]:ReverseComparator[291174](?)) : _unknown[51] "method" "primary method"
  {
    (290584 call =(290580 call . this c"comparator") defaultComparator)
  } function ReverseComparator[291174](?).init[290594](arg _mt[291182]:_MT[238], arg this[291180]:ReverseComparator[291174](?), arg comparator[290592]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    (290601 call =(290597 call . this c"comparator") comparator)
  } function ReverseComparator[291174](?).init=[290616](arg _mt[291186]:_MT[238], arg this[291184]:ReverseComparator[291174](?), arg revcomp[290613] :
  (290612 call ReverseComparator ?[260])) : _unknown[51] "method" "primary method" "no doc"
  {
    (290626 call =(290619 call . this c"comparator")(290623 call . revcomp c"comparator"))
  } function ReverseComparator[291174](?).typeIsBitReversible[290636](arg _mt[291190]:_MT[238], arg this[291188]:ReverseComparator[291174](?), arg t[290634]:_any[178](?)) param : _unknown[51] "method" "primary method" "no doc"
  {
    if(290658 call _cond_test(290641 call isHomogeneousTupleType t))
    {
      { scopeless
        unknown tmp[290643] t
        (290646 'end of statement')
      }
      (290656 return(290655 call typeIsBitReversible(290653 'typeof'(290652 call tmp 0))))
    }
    if(290670 call _cond_test(290666 call isUintType t))
    {
      { scopeless
        (290668 return 1)
      }
    }
    if(290682 call _cond_test(290678 call isIntType t))
    {
      { scopeless
        (290680 return 1)
      }
    }
    (290688 return 0)
  } function ReverseComparator[291174](?).typeIsNegateReversible[290696](arg _mt[291194]:_MT[238], arg this[291192]:ReverseComparator[291174](?), arg t[290694]:_any[178](?)) param : _unknown[51] "method" "primary method" "no doc"
  {
    if(290718 call _cond_test(290701 call isHomogeneousTupleType t))
    {
      { scopeless
        unknown tmp[290703] t
        (290706 'end of statement')
      }
      (290716 return(290715 call typeIsNegateReversible(290713 'typeof'(290712 call tmp 0))))
    }
    if(290736 call _cond_test(290731 call ||(290726 call isIntType t)(290730 call isUintType t)))
    {
      { scopeless
        (290734 return 0)
      }
    }
    if(290748 call _cond_test(290744 call isNumericType t))
    {
      { scopeless
        (290746 return 1)
      }
    }
    (290754 return 0)
  } function ReverseComparator[291174](?).hasKeyPart[290762](arg _mt[291198]:_MT[238], arg this[291196]:ReverseComparator[291174](?), arg a[290760]:_any[178](?)) param : _unknown[51] "method" "primary method" "no doc"
  {
    (290774 return(290773 call canResolveMethod(290766 call . this c"comparator") "keyPart" a 0))
  } function ReverseComparator[291174](?).hasKeyPartFromKey[290783](arg _mt[291202]:_MT[238], arg this[291200]:ReverseComparator[291174](?), arg a[290781]:_any[178](?)) param : _unknown[51] "method" "primary method" "no doc"
  {
    if(290816 call _cond_test(290793 call canResolveMethod(290787 call . this c"comparator") "key" a))
    {
      { scopeless
        unknown key[290802](290801 'typeof'(290800 call(290795 call . comparator c"key") a))
        (290805 'end of statement')
      }
      (290814 return(290813 call canResolveMethod defaultComparator "keyPart" key 0))
    }
    (290822 return 0)
  } function ReverseComparator[291174](?).hasCompare[290830](arg _mt[291206]:_MT[238], arg this[291204]:ReverseComparator[291174](?), arg a[290828]:_any[178](?), arg b[290832]:_any[178](?)) param : _unknown[51] "method" "primary method" "no doc"
  {
    (290844 return(290843 call canResolveMethod(290836 call . this c"comparator") "compare" a b))
  } function ReverseComparator[291174](?).hasCompareFromKey[290853](arg _mt[291210]:_MT[238], arg this[291208]:ReverseComparator[291174](?), arg a[290851]:_any[178](?)) param : _unknown[51] "method" "primary method" "no doc"
  {
    if(290886 call _cond_test(290863 call canResolveMethod(290857 call . this c"comparator") "key" a))
    {
      { scopeless
        unknown key[290872](290871 'typeof'(290870 call(290865 call . comparator c"key") a))
        (290875 'end of statement')
      }
      (290884 return(290883 call canResolveMethod defaultComparator "compare" key key))
    }
    (290892 return 0)
  } function ReverseComparator[291174](?).getKeyPart[290900](arg _mt[291214]:_MT[238], arg this[291212]:ReverseComparator[291174](?), arg cmp[290898]:_any[178](?), arg a[290902]:_any[178](?), arg i[290904]:_any[178](?)) : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    { scopeless
      unknown tmp[290919] "temp"(290918 call(290912 call . cmp c"keyPart") a i)
      (290926 call _check_tuple_var_decl tmp[290919] 2)
      unknown section[290906](290920 call tmp[290919] 0)
      unknown part[290908](290923 call tmp[290919] 1)
      (290931 'end of statement')
    }
    if(290993 call _cond_test(290937 call typeIsBitReversible(290935 'typeof' part)))
    {
      (290947 return(290945 call _build_tuple(290939 call - section)(290942 call ~ part)))
    }
    {
      { scopeless
        if(290989 call _cond_test(290954 call typeIsNegateReversible(290952 'typeof' part)))
        {
          (290964 return(290962 call _build_tuple(290956 call - section)(290959 call - part)))
        }
        {
          (290986 call compilerError "keyPart must return int or uint")
        }
      }
    }
  } function ReverseComparator[291174](?).keyPart[291004](arg _mt[291218]:_MT[238], arg this[291216]:ReverseComparator[291174](?), arg a[291002]:_any[178](?), arg i[291006]:_any[178](?)) : _unknown[51] "inline" "method" "primary method"
  {
    (291026 call chpl_check_comparator(291020 call . this c"comparator")(291025 'typeof' a))
    if(291063 call _cond_test(291032 call hasKeyPartFromKey a))
    {
      (291048 return(291047 call getKeyPart defaultComparator(291045 call(291040 call .(291037 call . this c"comparator") c"key") a) i))
    }
    {
      (291060 return(291059 call getKeyPart(291053 call . this c"comparator") a i))
    }
  }
  where {
    (291016 call ||(291011 call hasKeyPart a)(291015 call hasKeyPartFromKey a))
  } function ReverseComparator[291174](?).doCompare[291074](arg _mt[291222]:_MT[238], arg this[291220]:ReverseComparator[291174](?), arg cmp[291072]:_any[178](?), arg a[291076]:_any[178](?), arg b[291078]:_any[178](?)) : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    (291088 return(291087 call(291081 call . cmp c"compare") b a))
  } function ReverseComparator[291174](?).compare[291097](arg _mt[291226]:_MT[238], arg this[291224]:ReverseComparator[291174](?), arg a[291095]:_any[178](?), arg b[291099]:_any[178](?)) : _unknown[51] "inline" "method" "primary method"
  {
    (291120 call chpl_check_comparator(291114 call . this c"comparator")(291119 'typeof' a))
    if(291166 call _cond_test(291126 call hasCompareFromKey a))
    {
      (291151 return(291150 call doCompare defaultComparator(291139 call(291134 call .(291131 call . this c"comparator") c"key") a)(291149 call(291144 call .(291141 call . this c"comparator") c"key") b)))
    }
    {
      (291163 return(291162 call doCompare(291156 call . this c"comparator") a b))
    }
  }
  where {
    (291110 call ||(291105 call hasCompare a b)(291109 call hasCompareFromKey a))
  }
}