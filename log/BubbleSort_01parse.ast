AST dump for BubbleSort after pass parse.
Module use list: 

{
  (353062 'use' ChapelStandard)
  (269432 'import' Sort.{defaultComparator, chpl_check_comparator, chpl_compare})
  function bubbleSort[269447](arg Data[269444] :
  (269442 call chpl__buildArrayRuntimeType unknown Dom[269437] unknown eltType[269440]), arg comparator[269452] :
  unknown rec[269449] =
  defaultComparator) : _unknown[51]
  {
    (269460 call chpl_check_comparator comparator eltType)
    if(269492 call _cond_test(269468 call !=(269464 call . Dom c"rank") 1))
    {
      (269489 call compilerError "bubbleSort() requires 1-D array")
    }
    { scopeless
      const low[269500] "const"(269497 call . Dom c"alignedLow")
      const high[269507] "const"(269504 call . Dom c"alignedHigh")
      const stride[269517] "const"(269516 call abs(269512 call . Dom c"stride"))
      (269520 'end of statement')
    }
    { scopeless
      unknown swapped[269522] 1
      (269525 'end of statement')
    }
    {
      unknown tmp[269635] "temp"
      (269653 'move' tmp[269635](269651 call _cond_test swapped))
      WhileDo[269640]
      {
        {
          (269529 call = swapped 0)
          {
            unknown _indexOfInterest[269587] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[269588] "expr temp" "temp"
            (269597 'move' _iterator[269588](269595 call _getIterator(269612 call chpl_direct_range_iter low(269609 call - high stride) stride)))
            Defer
            {
              {
                (269628 call _freeIterator _iterator[269588])
              }
            }
            { scopeless type
              (269617 'move' _indexOfInterest[269587](269614 call iteratorIndex _iterator[269588]))
            }
            ForLoop[269589]
            {
              unknown i[269621] "index var" "insert auto destroy"
              (269623 'move' i[269621] _indexOfInterest[269587])
              {
                if(269582 call _cond_test(269560 call >(269558 call chpl_compare(269548 call Data i)(269556 call Data(269553 call + i stride)) comparator) 0))
                {
                  (269573 call <=>(269565 call Data i)(269572 call Data(269569 call + i stride)))
                  (269579 call = swapped 1)
                }
              }
              label _continueLabel[269592]
              _indexOfInterest[269587]
              _iterator[269588]
            }
            label _breakLabel[269593]
          }
        }
        label _continueLabel[269638]
        (269646 'move' tmp[269635](269644 call _cond_test swapped))
        tmp[269635]
      }
      label _breakLabel[269639]
    }
  }
}