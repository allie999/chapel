AST dump for ChapelSerializedBroadcast after pass flattenClasses.
Module use list: ChapelLocale CPtr 

{
  unknown chpl__enableSerializedGlobals[171469] "config" "param" 1
  (171472 'end of statement')
  function chpl_get_global_serialize_table[171479](arg idx[171476] :
  int(64)[13]) : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
  {
  }
  { scopeless type
    c_void_ptr[149]
  }
  function chpl__broadcastGlobal[171492](ref arg localeZeroGlobal[171489] :
  unknown T[171487], arg id[171495] :
  int(64)[13]) : _unknown[51] "no return value for void"
  {
    if(171833 call _cond_test(171507 call &&(171502 call isArray localeZeroGlobal[171489])(171506 call chpl__isArrayView localeZeroGlobal[171489])))
    {
      (171528 call halt "internal error: can't broadcast module-scope arrays yet")
    }
    {
      const data[171537] "const"(171536 call(171532 call . localeZeroGlobal[171489] c"chpl__serialize"))
      (171540 'end of statement')
      const root[171546] "const"(171543 call .(361544 call here[90438]) c"id")
      (171549 'end of statement')
      {
        unknown tmpIter[171620] "expr temp" "maybe ref" "no copy" "temp"
        (171623 'move' tmpIter[171620] Locales[113662])
        unknown isRngDomArr[171814] "maybe param" "temp"
        (171829 'move' isRngDomArr[171814](171827 call ||(171816 call isBoundedRange tmpIter[171620])(171825 call ||(171819 call isDomain tmpIter[171620])(171822 call isArray tmpIter[171620]))))
        if isRngDomArr[171814]
        {
          const _coforallCount[171686] "const" "end count" "temp"
          (171751 'move' _coforallCount[171686](171748 call _endCountAlloc 0))
          unknown numTasks[171687] "temp"
          (171735 'move' numTasks[171687](171731 call . tmpIter[171620] c"size"))
          (171726 call _upEndCount _coforallCount[171686] 0 numTasks[171687])
          unknown _indexOfInterest[171693] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[171694] "expr temp" "temp"
          (171703 'move' _iterator[171694](171701 call _getIterator tmpIter[171620]))
          Defer
          {
            {
              (171719 call _freeIterator _iterator[171694])
            }
          }
          { scopeless type
            (171708 'move' _indexOfInterest[171693](171705 call iteratorIndex _iterator[171694]))
          }
          ForLoop[171695]
          {
            unknown loc[171712] "coforall index var" "index var" "insert auto destroy"
            (171714 'move' loc[171712] _indexOfInterest[171693])
            const tmp[171626] "const" "temp"
            (171628 'move' tmp[171626](171630 'deref'(171631 '_wide_get_locale' loc[171712])))
            {
              {
                if(171639 call _cond_test(171641 call !=(171643 call .(361549 call here[90438]) c"id") root[171546]))
                {
                  unknown temp[171649] "no auto destroy" "no copy"(171655 call(171651 call .(171652 'typeof' localeZeroGlobal[171489]) c"chpl__deserialize") data[171537])
                  (171658 'end of statement')
                  const destVoidPtr[171660] "const"(171662 call chpl_get_global_serialize_table id[171495])
                  (171665 'end of statement')
                  const dest[171667] "const"(171669 call _cast(171671 call c_ptr[205100](?)(171672 'typeof' localeZeroGlobal[171489])) destVoidPtr[171660])
                  (171676 'end of statement')
                  (171677 '='(171682 call(171679 call . dest[171667] c"deref")) temp[171649])
                }
              }
              (171688 call _downEndCount _coforallCount[171686] nil[44])
              (171634 'coforall on block' 0 tmp[171626])
            }
            label _continueLabel[171698]
            _indexOfInterest[171693]
            _iterator[171694]
          }
          label _breakLabel[171699]
          Defer
          {
            {
              (171738 call _endCountFree _coforallCount[171686])
            }
          }
          (171743 call _waitEndCount _coforallCount[171686] 0 numTasks[171687])
        }
        {
          const _coforallCount[171755] "const" "end count" "temp"
          (171811 'move' _coforallCount[171755](171808 call _endCountAlloc 0))
          unknown _indexOfInterest[171762] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[171763] "expr temp" "temp"
          (171772 'move' _iterator[171763](171770 call _getIterator tmpIter[171620]))
          Defer
          {
            {
              (171788 call _freeIterator _iterator[171763])
            }
          }
          { scopeless type
            (171777 'move' _indexOfInterest[171762](171774 call iteratorIndex _iterator[171763]))
          }
          ForLoop[171764]
          {
            unknown loc[171781] "coforall index var" "index var" "insert auto destroy"
            (171783 'move' loc[171781] _indexOfInterest[171762])
            (171795 call _upEndCount _coforallCount[171755] 0)
            const tmp[171612] "const" "temp"
            (171614 'move' tmp[171612](171610 'deref'(171609 '_wide_get_locale' loc[171781])))
            {
              {
                if(171604 call _cond_test(171558 call !=(171554 call .(361546 call here[90438]) c"id") root[171546]))
                {
                  unknown temp[171568] "no auto destroy" "no copy"(171567 call(171562 call .(171561 'typeof' localeZeroGlobal[171489]) c"chpl__deserialize") data[171537])
                  (171571 'end of statement')
                  const destVoidPtr[171577] "const"(171576 call chpl_get_global_serialize_table id[171495])
                  (171580 'end of statement')
                  const dest[171589] "const"(171587 call _cast(171586 call c_ptr[205100](?)(171584 'typeof' localeZeroGlobal[171489])) destVoidPtr[171577])
                  (171592 'end of statement')
                  (171602 '='(171600 call(171596 call . dest[171589] c"deref")) temp[171568])
                }
              }
              (171757 call _downEndCount _coforallCount[171755] nil[44])
              (171617 'coforall on block' 0 tmp[171612])
            }
            label _continueLabel[171767]
            _indexOfInterest[171762]
            _iterator[171763]
          }
          label _breakLabel[171768]
          Defer
          {
            {
              (171799 call _endCountFree _coforallCount[171755])
            }
          }
          (171804 call _waitEndCount _coforallCount[171755] 0)
        }
      }
    }
  }
  where {
    chpl__enableSerializedGlobals[171469]
  }
  function chpl__destroyBroadcastedGlobal[171845](ref arg localeZeroGlobal[171843]:_any[178](?), arg id[171848] :
  int(64)[13]) : _unknown[51] "no return value for void"
  {
    unknown globalType[171854] "type variable"(171853 'typeof' localeZeroGlobal[171843])
    const root[171862] "const"(171859 call .(361552 call here[90438]) c"id")
    (171865 'end of statement')
    {
      unknown tmpIter[171927] "expr temp" "maybe ref" "no copy" "temp"
      (171930 'move' tmpIter[171927] Locales[113662])
      unknown isRngDomArr[172114] "maybe param" "temp"
      (172129 'move' isRngDomArr[172114](172127 call ||(172116 call isBoundedRange tmpIter[171927])(172125 call ||(172119 call isDomain tmpIter[171927])(172122 call isArray tmpIter[171927]))))
      if isRngDomArr[172114]
      {
        const _coforallCount[171986] "const" "end count" "temp"
        (172051 'move' _coforallCount[171986](172048 call _endCountAlloc 0))
        unknown numTasks[171987] "temp"
        (172035 'move' numTasks[171987](172031 call . tmpIter[171927] c"size"))
        (172026 call _upEndCount _coforallCount[171986] 0 numTasks[171987])
        unknown _indexOfInterest[171993] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[171994] "expr temp" "temp"
        (172003 'move' _iterator[171994](172001 call _getIterator tmpIter[171927]))
        Defer
        {
          {
            (172019 call _freeIterator _iterator[171994])
          }
        }
        { scopeless type
          (172008 'move' _indexOfInterest[171993](172005 call iteratorIndex _iterator[171994]))
        }
        ForLoop[171995]
        {
          unknown loc[172012] "coforall index var" "index var" "insert auto destroy"
          (172014 'move' loc[172012] _indexOfInterest[171993])
          const tmp[171933] "const" "temp"
          (171935 'move' tmp[171933](171937 'deref'(171938 '_wide_get_locale' loc[172012])))
          {
            {
              if(171946 call _cond_test(171948 call !=(171950 call .(361557 call here[90438]) c"id") root[171862]))
              {
                const voidPtr[171956] "const"(171958 call chpl_get_global_serialize_table id[171848])
                (171961 'end of statement')
                unknown ptr[171963](171965 call _cast(171967 call c_ptr[205100](?) globalType[171854]) voidPtr[171956])
                (171971 'end of statement')
                unknown temp[171973] "no auto destroy" "no copy"(171978 call(171975 call . ptr[171963] c"deref"))
                (171980 'end of statement')
                (171982 call chpl__autoDestroy temp[171973])
              }
            }
            (171988 call _downEndCount _coforallCount[171986] nil[44])
            (171941 'coforall on block' 0 tmp[171933])
          }
          label _continueLabel[171998]
          _indexOfInterest[171993]
          _iterator[171994]
        }
        label _breakLabel[171999]
        Defer
        {
          {
            (172038 call _endCountFree _coforallCount[171986])
          }
        }
        (172043 call _waitEndCount _coforallCount[171986] 0 numTasks[171987])
      }
      {
        const _coforallCount[172055] "const" "end count" "temp"
        (172111 'move' _coforallCount[172055](172108 call _endCountAlloc 0))
        unknown _indexOfInterest[172062] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[172063] "expr temp" "temp"
        (172072 'move' _iterator[172063](172070 call _getIterator tmpIter[171927]))
        Defer
        {
          {
            (172088 call _freeIterator _iterator[172063])
          }
        }
        { scopeless type
          (172077 'move' _indexOfInterest[172062](172074 call iteratorIndex _iterator[172063]))
        }
        ForLoop[172064]
        {
          unknown loc[172081] "coforall index var" "index var" "insert auto destroy"
          (172083 'move' loc[172081] _indexOfInterest[172062])
          (172095 call _upEndCount _coforallCount[172055] 0)
          const tmp[171919] "const" "temp"
          (171921 'move' tmp[171919](171917 'deref'(171916 '_wide_get_locale' loc[172081])))
          {
            {
              if(171911 call _cond_test(171874 call !=(171870 call .(361554 call here[90438]) c"id") root[171862]))
              {
                const voidPtr[171880] "const"(171879 call chpl_get_global_serialize_table id[171848])
                (171883 'end of statement')
                unknown ptr[171892](171890 call _cast(171889 call c_ptr[205100](?) globalType[171854]) voidPtr[171880])
                (171895 'end of statement')
                unknown temp[171902] "no auto destroy" "no copy"(171901 call(171897 call . ptr[171892] c"deref"))
                (171905 'end of statement')
                (171909 call chpl__autoDestroy temp[171902])
              }
            }
            (172057 call _downEndCount _coforallCount[172055] nil[44])
            (171924 'coforall on block' 0 tmp[171919])
          }
          label _continueLabel[172067]
          _indexOfInterest[172062]
          _iterator[172063]
        }
        label _breakLabel[172068]
        Defer
        {
          {
            (172099 call _endCountFree _coforallCount[172055])
          }
        }
        (172104 call _waitEndCount _coforallCount[172055] 0)
      }
    }
  }
  where {
    chpl__enableSerializedGlobals[171469]
  }
  (355293 'used modules list'(171462 'use' ChapelLocale[89847])(171466 'use' CPtr[204989]))
}