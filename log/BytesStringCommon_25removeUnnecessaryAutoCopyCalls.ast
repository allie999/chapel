AST dump for BytesStringCommon after pass removeUnnecessaryAutoCopyCalls.
Module use list: ChapelStandard SysCTypes ByteBufferHelpers NVStringFactory SysBasic Bytes String 

{
  type _class_localson_fn[2091427] val _runtime_hdr[2091428]:chpl_comm_on_bundle_t[209301] val _0_tmp[2091430]:chpl_localeID_t[209294] val _1_needle_data[2091432]:__serializeHelper[28086] ref _2_x[2091434]:string[26] val _3_region[2091436]:range(byteIndex,boundedLow,false)[1143403] ref _4_ret[2091438]:int(64)[13]
  type _class_localson_fn[2088813] val _runtime_hdr[2088814]:chpl_comm_on_bundle_t[209301] val _0_tmp[2088816]:chpl_localeID_t[209294] val _1_needle_data[2088818]:__serializeHelper[28086] ref _2_x[2088820]:string[26] val _3_region[2088822]:range(byteIndex,bounded,false)[1025792] ref _4_ret[2088824]:int(64)[13]
  type _class_localson_fn[2088128] val _runtime_hdr[2088129]:chpl_comm_on_bundle_t[209301] val _0_tmp[2088131]:chpl_localeID_t[209294] ref _1_lhs[2088133]:string[26] ref _2_rhs[2088135]:string[26]
  type _class_localson_fn[2087360] val _runtime_hdr[2087361]:chpl_comm_on_bundle_t[209301] val _0_tmp[2087363]:chpl_localeID_t[209294] ref _1_lhs[2087365]:string[26] ref _2_rhs[2087367]:string[26]
  type _class_localson_fn[2086509] val _runtime_hdr[2086510]:chpl_comm_on_bundle_t[209301] val _0_tmp[2086512]:chpl_localeID_t[209294] ref _1_x[2086514]:string[26] ref _2_ret[2086516]:int(64)[13]
  function chpl__init_BytesStringCommon[416035]() : void[4] "insert line file info" "module init" "resolved"
  {
    {
    }
    (523402 return _void[55])
  }
  type decodePolicy[173656] def strict[173646]:decodePolicy[173656] def replace[173648]:decodePolicy[173656] def drop[173650]:decodePolicy[173656] def escape[173652]:decodePolicy[173656] def ignore[173654]:decodePolicy[173656]
  type encodePolicy[173664] def unescape[173660]:encodePolicy[173664] def pass[173662]:encodePolicy[173664]
  function getCStr[957284](const  ref arg x[957286]:_ref(string)[937939]) : c_string[19] "inline" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[957290]:c_string[19] "dead after last mention" "RVV" "temp"
    val call_tmp[957298]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val tmp[957355]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[957373]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    ref call_tmp[957375]:_ref(int(32))[936626] "dead after last mention" "maybe param" "reference to a const" "temp"
    (957377 'move' call_tmp[957375](957380 call locale_id[758042] x[957286]))
    const-val call_tmp[957383]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[957731]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (957735 'move' coerce_tmp[957731](957733 'deref' call_tmp[957375]))
    (957385 'move' call_tmp[957383](957388 call !=[435990] coerce_tmp[957731] chpl_nodeID[208152]))
    (957391 'move' tmp[957373] call_tmp[957383])
    (957396 'move' tmp[957355] tmp[957373])
    const-val call_tmp[957408]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (957410 'move' call_tmp[957408] tmp[957355])
    if call_tmp[957408]
    {
      val call_tmp[957417]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (957440 call halt[154067] "Cannot call .c_str() on a remote string")
    }
    ref call_tmp[957443]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "reference to a const" "temp"
    (957445 'move' call_tmp[957443](957448 call buff[757964] x[957286]))
    const-val call_tmp[957451]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[958057]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (958061 'move' coerce_tmp[958057](958059 'deref' call_tmp[957443]))
    (957453 'move' call_tmp[957451](957456 call _cast[957309] coerce_tmp[958057]))
    (958066 'move' ret[957290] call_tmp[957451])
    (957464 return ret[957290])
  }
  function decodeByteBuffer[173892](const in arg buff[173889]:c_ptr(uint(8))[937423], const in arg length[173895]:int(64)[13], const in arg policy[173899]:decodePolicy[173656], ref arg error_out[1808206]:Error[167938], ref arg _retArg[1831299]:_ref(string)[937939]) : void[4] throws "fn returns via _retArg" "resolved"
  {
    val ret[522763]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[682220]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (682223 'move' call_tmp[682220](173942 call ==[435628] length[173895] 0))
    const-val call_tmp[682225]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (682228 'move' call_tmp[682225] call_tmp[682220])
    if call_tmp[682225]
    {
      (522768 'move' ret[522763](1831303 call chpl__initCopy[981348] ""))
      gotoReturn _end_decodeByteBuffer[522761] _end_decodeByteBuffer[522761]
    }
    const-val call_tmp[682230]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (682233 'move' call_tmp[682230](173976 call +[949666] length[173895]))
    const-val call_tmp[682235]:(c_ptr(uint(8)),int(64))[955208] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1831963]:(c_ptr(uint(8)),int(64))[955208] "temp"
    (173979 call bufferAlloc[955018] call_tmp[682230] ret_tmp[1831963])
    (1831966 'move' call_tmp[682235] ret_tmp[1831963])
    const-val tmp[173980]:(c_ptr(uint(8)),int(64))[955208] "dead at end of block" "insert auto destroy" "temp"
    (544876 'move' tmp[173980] call_tmp[682235])
    1
    ref call_tmp[682240]:_ref(c_ptr(uint(8)))[937432] "dead at end of block" "maybe param" "temp"
    (682243 'move' call_tmp[682240](964345 '.' tmp[173980] x0[955204]))
    val newBuff[173968]:c_ptr(uint(8))[937423] "dead at end of block" "insert auto destroy"
    val coerce_tmp[964350]:c_ptr(uint(8))[937423] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (964354 'move' coerce_tmp[964350](964352 'deref' call_tmp[682240]))
    (1842350 '=' newBuff[173968] coerce_tmp[964350])
    (544878 'noop')
    ref call_tmp[682245]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
    (682248 'move' call_tmp[682245](964359 '.' tmp[173980] x1[955206]))
    val allocSize[173970]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[964364]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (964368 'move' coerce_tmp[964364](964366 'deref' call_tmp[682245]))
    (1842353 '=' allocSize[173970] coerce_tmp[964364])
    (544880 'noop')
    val hasEscapes[173994]:bool[10] "dead at end of block" "insert auto destroy"
    (544882 'move' hasEscapes[173994] 0)
    val numCodepoints[173999]:int(64)[13] "dead at end of block" "insert auto destroy"
    (544884 'move' numCodepoints[173999] 0)
    val expectedSize[174004]:int(64)[13] "dead at end of block" "insert auto destroy"
    (544886 'move' expectedSize[174004] allocSize[173970])
    val thisIdx[174009]:int(64)[13] "dead at end of block" "insert auto destroy"
    (544888 'move' thisIdx[174009] 0)
    val decodedIdx[174014]:int(64)[13] "dead at end of block" "insert auto destroy"
    (544890 'move' decodedIdx[174014] 0)
    {
      val tmp[174329]:bool[10] "dead after last mention" "temp"
      const-val call_tmp[682250]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (682253 'move' call_tmp[682250](174350 call <[437452] thisIdx[174009] length[173895]))
      (174353 'move' tmp[174329] call_tmp[682250])
      WhileDo[174334] hazard
      {
        {
          const-val call_tmp[682255]:(syserr,int(32),int(32))[964620] "dead at end of block" "maybe param" "temp"
          const-val ret_tmp[1831319]:(syserr,int(32),int(32))[964620] "temp"
          (174036 call decodeHelp[174406] buff[173889] length[173895] thisIdx[174009] 0 ret_tmp[1831319])
          (1831322 'move' call_tmp[682255] ret_tmp[1831319])
          const-val tmp[174037]:(syserr,int(32),int(32))[964620] "dead at end of block" "const" "insert auto destroy" "temp"
          (544892 'move' tmp[174037] call_tmp[682255])
          1
          ref call_tmp[682260]:_ref(syserr)[948832] "dead at end of block" "maybe param" "reference to a const" "temp"
          (682263 'move' call_tmp[682260](965382 '.' tmp[174037] x0[964614]))
          const-val decodeRet[174022]:syserr[223584] "dead at end of block" "const" "insert auto destroy"
          const-val coerce_tmp[965387]:syserr[223584] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
          (965391 'move' coerce_tmp[965387](965389 'deref' call_tmp[682260]))
          (1842356 '=' decodeRet[174022] coerce_tmp[965387])
          (544894 'noop')
          ref call_tmp[682265]:_ref(int(32))[936626] "dead at end of block" "maybe param" "reference to a const" "temp"
          (682268 'move' call_tmp[682265](965396 '.' tmp[174037] x1[964616]))
          const-val cp[174024]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
          const-val coerce_tmp[965401]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
          (965405 'move' coerce_tmp[965401](965403 'deref' call_tmp[682265]))
          (1842359 '=' cp[174024] coerce_tmp[965401])
          (544896 'noop')
          ref call_tmp[682270]:_ref(int(32))[936626] "dead at end of block" "maybe param" "reference to a const" "temp"
          (682273 'move' call_tmp[682270](965410 '.' tmp[174037] x2[964618]))
          const-val nBytes[174026]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
          const-val coerce_tmp[965415]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
          (965419 'move' coerce_tmp[965415](965417 'deref' call_tmp[682270]))
          (1842362 '=' nBytes[174026] coerce_tmp[965415])
          (544898 'noop')
          val call_tmp[682275]:c_ptr(uint(8))[937423] "dead at end of block" "maybe param" "temp"
          (682278 'move' call_tmp[682275](174056 call +[956001] buff[173889] thisIdx[174009]))
          val buffToDecode[174058]:c_ptr(uint(8))[937423] "dead at end of block" "insert auto destroy"
          (544900 'move' buffToDecode[174058] call_tmp[682275])
          (174064 call +=[451315] numCodepoints[173999] 1)
          const-val call_tmp[682280]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (682283 'move' call_tmp[682280](174069 call !=[223880] decodeRet[174022] 0))
          const-val call_tmp[682285]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (682288 'move' call_tmp[682285] call_tmp[682280])
          if call_tmp[682285]
          {
            const-val call_tmp[682290]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (682293 'move' call_tmp[682290](174076 call ==[965470] policy[173899] strict[173646]))
            const-val call_tmp[682295]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (682298 'move' call_tmp[682295] call_tmp[682290])
            if call_tmp[682295]
            {
              (174081 call bufferFree[172912] newBuff[173968])
              const-val call_tmp[682300]:owned DecodeError[966281] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
              val new_temp[965691]:DecodeError[168094] "dead after last mention" "temp"
              (965693 'move' new_temp[965691](965567 call _new[965642]))
              const-val initTemp[965722]:owned DecodeError[966281] "dead after last mention" "delay instantiation" "temp"
              (965725 call init[965741] initTemp[965722] new_temp[965691])
              (682303 'move' call_tmp[682300] initTemp[965722])
              val call_tmp[682305]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[966485]:owned Error[966458] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
              const-val ret_tmp[1832091]:owned Error[966458] "temp"
              (966487 call _cast[966543] call_tmp[682300] ret_tmp[1832091])
              (1832094 'move' coerce_tmp[966485] ret_tmp[1832091])
              const-val _formal_tmp_in_err[968506]:owned Error[966458] "dead after last mention" "expr temp" "no auto destroy" "temp"
              (968510 'move' _formal_tmp_in_err[968506] coerce_tmp[966485])
              (682308 'move' call_tmp[682305](468067 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[968506]))
              {
                val castedError[1808209]:Error[167938] "temp"
                (1808215 'move' castedError[1808209] call_tmp[682305])
                (1808217 '=' error_out[1808206] castedError[1808209])
                (1842365 call chpl__autoDestroy[1465403] tmp[174037])
                (1842368 call chpl__autoDestroy[1465141] tmp[173980])
                gotoErrorHandlingReturn _end_decodeByteBuffer[522761] _end_decodeByteBuffer[522761]
              }
            }
            {
              const-val nInvalidBytes[174104]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
              val tmp[570912]:int(32)[95] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
              const-val tmp[570913]:bool[10] "dead after last mention" "maybe param" "temp"
              const-val call_tmp[682310]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[969777]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (969783 'move' coerce_tmp[969777](969779 'cast' int(32)[95] 1))
              (682313 'move' call_tmp[682310](174094 call ==[435606] nBytes[174026] coerce_tmp[969777]))
              (570918 'move' tmp[570913] call_tmp[682310])
              if tmp[570913]
              {
                (570923 'move' tmp[570912] nBytes[174026])
              }
              {
                const-val tmp[570925]:int(32)[95] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
                const-val coerce_tmp[969786]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (969792 'move' coerce_tmp[969786](969788 'cast' int(32)[95] 1))
                (570927 'move' tmp[570925](174099 call -[440394] nBytes[174026] coerce_tmp[969786]))
                (570932 'move' tmp[570912] tmp[570925])
              }
              (544902 'move' nInvalidBytes[174104] tmp[570912])
              const-val coerce_tmp[969806]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (969812 'move' coerce_tmp[969806](969808 'cast' int(64)[13] nInvalidBytes[174104]))
              (174111 call +=[451315] thisIdx[174009] coerce_tmp[969806])
              const-val call_tmp[682315]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (682318 'move' call_tmp[682315](174119 call ==[965470] policy[173899] replace[173648]))
              const-val call_tmp[682320]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (682323 'move' call_tmp[682320] call_tmp[682315])
              if call_tmp[682320]
              {
                val call_tmp[682325]:int(32)[95] "dead after last mention" "maybe param" "temp" "type variable"
                const-val call_tmp[682330]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[970077]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (970083 'move' coerce_tmp[970077](970079 'cast' int(32)[95] 3))
                (682333 'move' call_tmp[682330](174136 call -[440394] coerce_tmp[970077] nInvalidBytes[174104]))
                const-val coerce_tmp[970086]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (970092 'move' coerce_tmp[970086](970088 'cast' int(64)[13] call_tmp[682330]))
                (174138 call +=[451315] expectedSize[174004] coerce_tmp[970086])
                const-val tmp[492517]:(c_ptr(uint(8)),int(64))[955208] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                ref tmp[492542]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "temp"
                (492545 'move' tmp[492542](492543 'addr of' newBuff[173968]))
                ref tmp[492553]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
                (492556 'move' tmp[492553](492554 'addr of' allocSize[173970]))
                const-val ret_tmp[1831197]:(c_ptr(uint(8)),int(64))[955208] "temp"
                (174151 call bufferEnsureSize[172738] newBuff[173968] allocSize[173970] expectedSize[174004] ret_tmp[1831197])
                (1831200 'move' tmp[492517] ret_tmp[1831197])
                { scopeless
                }
                ref call_tmp[682352]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "temp"
                (682355 'move' call_tmp[682352](970469 '.' tmp[492517] x0[955204]))
                val coerce_tmp[970472]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (970476 'move' coerce_tmp[970472](970474 'deref' call_tmp[682352]))
                (492547 call =[954213] tmp[492542] coerce_tmp[970472])
                ref call_tmp[682357]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
                (682360 'move' call_tmp[682357](970481 '.' tmp[492517] x1[955206]))
                const-val coerce_tmp[970484]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (970488 'move' coerce_tmp[970484](970486 'deref' call_tmp[682357]))
                (492558 call =[435327] tmp[492553] coerce_tmp[970484])
                (1842371 call chpl__autoDestroy[1465141] tmp[492517])
                val call_tmp[682362]:c_ptr(uint(8))[937423] "dead after last mention" "expr temp" "maybe param" "temp"
                (682365 'move' call_tmp[682362](174158 call +[956001] newBuff[173968] decodedIdx[174014]))
                const-val coerce_tmp[970500]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (970506 'move' coerce_tmp[970500](970502 'cast' c_void_ptr[149] call_tmp[682362]))
                const-val _return_tmp_[1800508]:syserr[223584] "dead after last mention" "temp"
                (1800510 'move' _return_tmp_[1800508](174162 call qio_encode_char_buf[173912] coerce_tmp[970500] 65533))
                (174166 call +=[451315] decodedIdx[174014] 3)
              }
              {
                const-val call_tmp[682367]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (682370 'move' call_tmp[682367](174176 call ==[965470] policy[173899] escape[173652]))
                const-val call_tmp[682372]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (682375 'move' call_tmp[682372] call_tmp[682367])
                if call_tmp[682372]
                {
                  (174180 call =[435174] hasEscapes[173994] 1)
                  const-val call_tmp[682377]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[970764]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (970770 'move' coerce_tmp[970764](970766 'cast' int(32)[95] 2))
                  (682380 'move' call_tmp[682377](174187 call *[441806] coerce_tmp[970764] nInvalidBytes[174104]))
                  const-val coerce_tmp[970773]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (970779 'move' coerce_tmp[970773](970775 'cast' int(64)[13] call_tmp[682377]))
                  (174189 call +=[451315] expectedSize[174004] coerce_tmp[970773])
                  const-val tmp[492561]:(c_ptr(uint(8)),int(64))[955208] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  ref tmp[492586]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "temp"
                  (492589 'move' tmp[492586](492587 'addr of' newBuff[173968]))
                  ref tmp[492597]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
                  (492600 'move' tmp[492597](492598 'addr of' allocSize[173970]))
                  const-val ret_tmp[1831203]:(c_ptr(uint(8)),int(64))[955208] "temp"
                  (174202 call bufferEnsureSize[172738] newBuff[173968] allocSize[173970] expectedSize[174004] ret_tmp[1831203])
                  (1831206 'move' tmp[492561] ret_tmp[1831203])
                  { scopeless
                  }
                  ref call_tmp[682399]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "temp"
                  (682402 'move' call_tmp[682399](970791 '.' tmp[492561] x0[955204]))
                  val coerce_tmp[970794]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (970798 'move' coerce_tmp[970794](970796 'deref' call_tmp[682399]))
                  (492591 call =[954213] tmp[492586] coerce_tmp[970794])
                  ref call_tmp[682404]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
                  (682407 'move' call_tmp[682404](970803 '.' tmp[492561] x1[955206]))
                  const-val coerce_tmp[970806]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (970810 'move' coerce_tmp[970806](970808 'deref' call_tmp[682404]))
                  (492602 call =[435327] tmp[492597] coerce_tmp[970806])
                  (1842375 call chpl__autoDestroy[1465141] tmp[492561])
                  {
                    val _indexOfInterest[174240]:int(32)[95] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[174241]:_ic_chpl_direct_counted_range_iter[978311] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[682409]:_ir_chpl_direct_counted_range_iter[978317] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[970879]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (970885 'move' coerce_tmp[970879](970881 'cast' int(32)[95] 0))
                    const-val ret_tmp[1831829]:_ir_chpl_direct_counted_range_iter[978317] "temp"
                    (174257 call chpl_direct_counted_range_iter[457940] coerce_tmp[970879] nInvalidBytes[174104] ret_tmp[1831829])
                    (1831832 'move' call_tmp[682409] ret_tmp[1831829])
                    (174250 'move' _iterator[174241](174248 call _getIterator[978326] call_tmp[682409]))
                    {
                      val ret[1907143]:_ir_chpl_direct_counted_range_iter[978317] "dead after last mention" "RVV" "temp"
                      val _indexOfInterest[1907145]:int(32)[95] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1907147]:_ic_chpl_direct_counted_range_iter_helper[978061] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1907149]:_ir_chpl_direct_counted_range_iter_helper[978067] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1907151]:_ir_chpl_direct_counted_range_iter_helper[978067] "temp"
                      const-val low[1907309]:int(32)[95] "temp"
                      (1907314 'move' low[1907309](1907311 '.v' _iterator[174241] F0_low[2008582]))
                      const-val count[1907316]:int(32)[95] "temp"
                      (1907321 'move' count[1907316](1907318 '.v' _iterator[174241] F1_count[2008586]))
                      (1907154 call chpl_direct_counted_range_iter_helper[970888] low[1907309] count[1907316] ret_tmp[1907151])
                      (1907158 'move' call_tmp[1907149] ret_tmp[1907151])
                      (1907161 'move' _iterator[1907147](1907164 call _getIterator[978076] call_tmp[1907149]))
                      {
                        val ret[1969712]:_ir_chpl_direct_counted_range_iter_helper[978067] "dead after last mention" "RVV" "temp"
                        val call_tmp[1969714]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                        const-val tmp[1969716]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val tmp[1969718]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                        const-val call_tmp[1969720]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val coerce_tmp[1969722]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (1969724 'move' coerce_tmp[1969722](1969726 'cast' int(32)[95] 0))
                        const-val count[1970208]:int(32)[95] "temp"
                        (1970213 'move' count[1970208](1970210 '.v' _iterator[1907147] F1_count[2012241]))
                        (1969729 'move' call_tmp[1969720](1969732 call <[437430] count[1970208] coerce_tmp[1969722]))
                        (1969735 'move' tmp[1969718] call_tmp[1969720])
                        (1969738 'move' tmp[1969716] call_tmp[1969720])
                        const-val call_tmp[1969741]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1969743 'move' call_tmp[1969741] call_tmp[1969720])
                        if call_tmp[1969720]
                        {
                          (1969749 call boundsCheckHalt[210167] "With a negative count, the range must have a last index.")
                        }
                        const-val tmp[1969752]:2*int(32)[971678] "dead at end of block" "const" "insert auto destroy" "temp"
                        val tmp[1969754]:2*int(32)[971678] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                        const-val tmp[1969756]:bool[10] "dead after last mention" "maybe param" "temp"
                        const-val call_tmp[1969758]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val coerce_tmp[1969760]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (1969762 'move' coerce_tmp[1969760](1969764 'cast' int(32)[95] 0))
                        const-val count[1970215]:int(32)[95] "temp"
                        (1970220 'move' count[1970215](1970217 '.v' _iterator[1907147] F1_count[2012241]))
                        (1969767 'move' call_tmp[1969758](1969770 call ==[435606] count[1970215] coerce_tmp[1969760]))
                        (1969773 'move' tmp[1969756] call_tmp[1969758])
                        if call_tmp[1969758]
                        {
                          const-val tmp[1969778]:2*int(32)[971678] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                          val call_tmp[1969780]:int(32)[95] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[1969782]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val low[1970222]:int(32)[95] "temp"
                          (1970227 'move' low[1970222](1970224 '.v' _iterator[1907147] F0_low[2012237]))
                          (1969784 'move' call_tmp[1969782](1969787 call _cast[971542] low[1970222]))
                          const-val call_tmp[1969789]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[1969791]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                          (1969793 'move' coerce_tmp[1969791](1969795 'cast' uint(64)[115] 1))
                          (1969798 'move' call_tmp[1969789](1969801 call -[962193] call_tmp[1969782]))
                          const-val call_tmp[1969803]:int(32)[95] "dead at end of block" "expr temp" "maybe param" "temp"
                          (1969805 'move' call_tmp[1969803](1969808 call _cast[971605] call_tmp[1969789]))
                          const-val ret_tmp[1969810]:2*int(32)[971678] "temp"
                          const-val low[1970229]:int(32)[95] "temp"
                          (1970234 'move' low[1970229](1970231 '.v' _iterator[1907147] F0_low[2012237]))
                          (1969813 call _build_tuple[971636] low[1970229] call_tmp[1969803] ret_tmp[1969810])
                          (1969817 'move' tmp[1969778] ret_tmp[1969810])
                          (1969820 'move' tmp[1969754] tmp[1969778])
                        }
                        {
                          const-val tmp[1969824]:2*int(32)[971678] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                          val call_tmp[1969826]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[1969828]:int(32)[95] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val count[1970236]:int(32)[95] "temp"
                          (1970241 'move' count[1970236](1970238 '.v' _iterator[1907147] F1_count[2012241]))
                          (1969830 'move' call_tmp[1969828] count[1970236])
                          const-val call_tmp[1969833]:int(32)[95] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[1969835]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                          (1969837 'move' coerce_tmp[1969835](1969839 'cast' int(32)[95] 1))
                          const-val count[1970243]:int(32)[95] "temp"
                          (1970248 'move' count[1970243](1970245 '.v' _iterator[1907147] F1_count[2012241]))
                          (1969842 'move' call_tmp[1969833](1969845 call -[440394] count[1970243] coerce_tmp[1969835]))
                          const-val call_tmp[1969848]:int(32)[95] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val low[1970250]:int(32)[95] "temp"
                          (1970255 'move' low[1970250](1970252 '.v' _iterator[1907147] F0_low[2012237]))
                          (1969850 'move' call_tmp[1969848](1969853 call +[439614] low[1970250] call_tmp[1969833]))
                          const-val ret_tmp[1969856]:2*int(32)[971678] "temp"
                          const-val low[1970257]:int(32)[95] "temp"
                          (1970262 'move' low[1970257](1970259 '.v' _iterator[1907147] F0_low[2012237]))
                          (1969859 call _build_tuple[971636] low[1970257] call_tmp[1969848] ret_tmp[1969856])
                          (1969863 'move' tmp[1969824] ret_tmp[1969856])
                          (1969866 'move' tmp[1969754] tmp[1969824])
                        }
                        (1969870 '=' tmp[1969752] tmp[1969754])
                        (1969873 'noop')
                        1
                        ref call_tmp[1969875]:_ref(int(32))[936626] "dead at end of block" "maybe param" "reference to a const" "temp"
                        (1969877 'move' call_tmp[1969875](1969879 '.' tmp[1969752] x0[971674]))
                        const-val start[1969882]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                        const-val coerce_tmp[1969884]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                        (1969886 'move' coerce_tmp[1969884](1969888 'deref' call_tmp[1969875]))
                        (1969890 '=' start[1969882] coerce_tmp[1969884])
                        (1969893 'noop')
                        ref call_tmp[1969894]:_ref(int(32))[936626] "dead at end of block" "maybe param" "reference to a const" "temp"
                        (1969896 'move' call_tmp[1969894](1969898 '.' tmp[1969752] x1[971676]))
                        const-val end[1969901]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                        const-val coerce_tmp[1969903]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                        (1969905 'move' coerce_tmp[1969903](1969907 'deref' call_tmp[1969894]))
                        (1969909 '=' end[1969901] coerce_tmp[1969903])
                        (1969912 'noop')
                        val _indexOfInterest[1969913]:int(32)[95] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[1969915]:_ic_chpl_direct_param_stride_range_iter[977807] "dead at end of block" "expr temp" "temp"
                        const-val call_tmp[1969917]:_ir_chpl_direct_param_stride_range_iter[977813] "dead at end of block" "expr temp" "maybe param" "temp"
                        const-val ret_tmp[1969919]:_ir_chpl_direct_param_stride_range_iter[977813] "temp"
                        (1969922 call chpl_direct_param_stride_range_iter[972099] coerce_tmp[1969884] coerce_tmp[1969903] ret_tmp[1969919])
                        (1969926 'move' call_tmp[1969917] ret_tmp[1969919])
                        (1969929 'move' _iterator[1969915](1969932 call _getIterator[977822] call_tmp[1969917]))
                        {
                          val ret[1969935]:_ir_chpl_direct_param_stride_range_iter[977813] "dead after last mention" "RVV" "temp"
                          val call_tmp[1969937]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (1969940 call chpl_range_check_stride[972419])
                          val i[1969941]:int(32)[95] "dead at end of block" "insert auto destroy"
                          val call_tmp[1969943]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (1969945 'move' i[1969941] 0)
                          val call_tmp[1969948]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val default_arg_first[1969950]:int(32)[95] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val low[1969952]:int(32)[95] "temp"
                          (1969954 'move' low[1969952](1969956 '.v' _iterator[1969915] F0_low[2013778]))
                          (1969959 'move' default_arg_first[1969950](1969962 call chpl_checkIfRangeIterWillOverflow_default_first[976902] low[1969952]))
                          const-val default_arg_last[1969964]:int(32)[95] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val high[1969966]:int(32)[95] "temp"
                          (1969968 'move' high[1969966](1969970 '.v' _iterator[1969915] F1_high[2013782]))
                          (1969973 'move' default_arg_last[1969964](1969976 call chpl_checkIfRangeIterWillOverflow_default_last[976930] high[1969966]))
                          const-val _return_tmp_[1969978]:bool[10] "dead after last mention" "temp"
                          const-val low[1969980]:int(32)[95] "temp"
                          (1969982 'move' low[1969980](1969984 '.v' _iterator[1969915] F0_low[2013778]))
                          const-val high[1969987]:int(32)[95] "temp"
                          (1969989 'move' high[1969987](1969991 '.v' _iterator[1969915] F1_high[2013782]))
                          (1969994 'move' _return_tmp_[1969978](1969997 call chpl_checkIfRangeIterWillOverflow[976350] low[1969980] high[1969987] 1 default_arg_first[1969950] default_arg_last[1969964] 1))
                          CForLoop[1970004]
                          {
                            const-val yret[1970033]:int(32)[95] "dead after last mention" "YVV" "temp"
                            (1970035 'move' yret[1970033] i[1969941])
                            const-val _yieldedIndex[1970038]:int(32)[95] "temp"
                            (1970040 'move' _yieldedIndex[1970038] i[1969941])
                            {
                              const-val i[1970044]:int(32)[95] "const" "index var" "insert auto destroy"
                              (1970046 'move' i[1970044] _yieldedIndex[1970038])
                              const-val yret[1970049]:int(32)[95] "dead after last mention" "YVV" "temp"
                              (1970051 'move' yret[1970049] _yieldedIndex[1970038])
                              const-val _yieldedIndex[1970079]:int(32)[95] "temp"
                              (1970206 'move' _yieldedIndex[1970079] _yieldedIndex[1970038])
                              {
                                const-val i[1970081]:int(32)[95] "const" "index var" "insert auto destroy"
                                (1970083 'move' i[1970081] _yieldedIndex[1970079])
                                const-val yret[1970086]:int(32)[95] "dead after last mention" "YVV" "temp"
                                (1970088 'move' yret[1970086] _yieldedIndex[1970079])
                                const-val _yieldedIndex[1970091]:int(32)[95] "temp"
                                (1970093 'move' _yieldedIndex[1970091] _yieldedIndex[1970079])
                                {
                                  const-val i[1970097]:int(32)[95] "const" "index var" "insert auto destroy"
                                  (1970099 'move' i[1970097] _yieldedIndex[1970091])
                                  {
                                    val call_tmp[1970103]:c_ptr(uint(8))[937423] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1970105 'move' call_tmp[1970103](1970108 call +[956001] newBuff[173968] decodedIdx[174014]))
                                    const-val call_tmp[1970111]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                    const-val coerce_tmp[1970113]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1970115 'move' coerce_tmp[1970113](1970117 'cast' int(64)[13] nInvalidBytes[174104]))
                                    (1970120 'move' call_tmp[1970111](1970123 call -[440416] thisIdx[174009] coerce_tmp[1970113]))
                                    const-val call_tmp[1970126]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                    const-val coerce_tmp[1970128]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1970130 'move' coerce_tmp[1970128](1970132 'cast' int(64)[13] i[1970097]))
                                    (1970135 'move' call_tmp[1970126](1970138 call +[439636] call_tmp[1970111] coerce_tmp[1970128]))
                                    ref call_tmp[1970141]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
                                    (1970143 'move' call_tmp[1970141](1970146 call this[954091] buff[173889] call_tmp[1970126]))
                                    const-val call_tmp[1970149]:uint(16)[105] "dead after last mention" "expr temp" "maybe param" "temp"
                                    const-val coerce_tmp[1970151]:uint(16)[105] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1970153 'move' coerce_tmp[1970151](1970155 'cast' uint(16)[105] 56320))
                                    const-val coerce_tmp[1970158]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1970160 'move' coerce_tmp[1970158](1970162 'deref' call_tmp[1970141]))
                                    const-val coerce_tmp[1970164]:uint(16)[105] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1970166 'move' coerce_tmp[1970164](1970168 'cast' uint(16)[105] coerce_tmp[1970158]))
                                    (1970171 'move' call_tmp[1970149](1970174 call +[439680] coerce_tmp[1970151] coerce_tmp[1970164]))
                                    const-val coerce_tmp[1970177]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1970179 'move' coerce_tmp[1970177](1970181 'cast' c_void_ptr[149] call_tmp[1970103]))
                                    const-val coerce_tmp[1970184]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1970186 'move' coerce_tmp[1970184](1970188 'cast' int(32)[95] call_tmp[1970149]))
                                    const-val _return_tmp_[1970191]:syserr[223584] "dead after last mention" "temp"
                                    (1970193 'move' _return_tmp_[1970191](1970196 call qio_encode_char_buf[173912] coerce_tmp[1970177] coerce_tmp[1970184]))
                                    (1970200 call +=[451315] decodedIdx[174014] 3)
                                  }
                                  label _continueLabel[1970203]
                                }
                              }
                            }
                            {
                              const-val low[1970006]:int(32)[95] "temp"
                              (1970008 'move' low[1970006](1970010 '.v' _iterator[1969915] F0_low[2013778]))
                              (1970013 '=' i[1969941] low[1970006])
                            }
                            {
                              const-val high[1970017]:int(32)[95] "temp"
                              (1970019 'move' high[1970017](1970021 '.v' _iterator[1969915] F1_high[2013782]))
                              (1970024 '<=' i[1969941] high[1970017])
                            }
                            {
                              val call_tmp[1970028]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              (1970030 '+=' i[1969941] 1)
                            }
                          }
                          label _endchpl_direct_param_stride_range_iter[1970067]
                        }
                        (1970070 call _freeIterator[977995] _iterator[1969915])
                        (1970073 call chpl__autoDestroy[1469662] tmp[1969752])
                        label _endchpl_direct_counted_range_iter_helper[1970075]
                      }
                      (1907190 call _freeIterator[978245] _iterator[1907147])
                      label _endchpl_direct_counted_range_iter[1907192]
                    }
                    label _breakLabel[174246]
                    (1842381 call _freeIterator[978495] _iterator[174241])
                  }
                  const-val call_tmp[682439]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[978821]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (978827 'move' coerce_tmp[978821](978823 'cast' int(32)[95] 1))
                  (682442 'move' call_tmp[682439](174283 call -[440394] nInvalidBytes[174104] coerce_tmp[978821]))
                  const-val coerce_tmp[978830]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (978836 'move' coerce_tmp[978830](978832 'cast' int(64)[13] call_tmp[682439]))
                  (174285 call +=[451315] numCodepoints[173999] coerce_tmp[978830])
                }
              }
            }
          }
          {
            const-val coerce_tmp[978844]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (978850 'move' coerce_tmp[978844](978846 'cast' int(64)[13] nBytes[174026]))
            (174312 call bufferMemcpyLocal[173076] newBuff[173968] buffToDecode[174058] coerce_tmp[978844] decodedIdx[174014] 0)
            const-val coerce_tmp[978862]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (978868 'move' coerce_tmp[978862](978864 'cast' int(64)[13] nBytes[174026]))
            (174317 call +=[451315] thisIdx[174009] coerce_tmp[978862])
            const-val coerce_tmp[978871]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (978877 'move' coerce_tmp[978871](978873 'cast' int(64)[13] nBytes[174026]))
            (174322 call +=[451315] decodedIdx[174014] coerce_tmp[978871])
          }
          (1842385 call chpl__autoDestroy[1465403] tmp[174037])
        }
        label _continueLabel[174332]
        const-val call_tmp[682444]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (682447 'move' call_tmp[682444](174340 call <[437452] thisIdx[174009] length[173895]))
        (174343 'move' tmp[174329] call_tmp[682444])
        tmp[174329]
      }
      label _breakLabel[174333]
    }
    ref call_tmp[682449]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
    (682452 'move' call_tmp[682449](174359 call this[954091] newBuff[173968] decodedIdx[174014]))
    const-val coerce_tmp[978884]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (978890 'move' coerce_tmp[978884](978886 'cast' uint(8)[100] 0))
    (174361 call =[435348] call_tmp[682449] coerce_tmp[978884])
    const-val call_tmp[682454]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1829183]:string[26] "temp"
    (174374 call chpl_createStringWithOwnedBufferNV[30673] newBuff[173968] decodedIdx[174014] allocSize[173970] numCodepoints[173999] ret_tmp[1829183])
    (1829186 'move' call_tmp[682454] ret_tmp[1829183])
    val ret[174375]:string[26] "dead at end of block" "insert auto destroy"
    (544906 'move' ret[174375] call_tmp[682454])
    ref call_tmp[682461]:_ref(bool)[937199] "dead after last mention" "maybe param" "temp"
    (682464 'move' call_tmp[682461](174382 call hasEscapes[758016] ret[174375]))
    (174386 call =[435174] call_tmp[682461] hasEscapes[173994])
    (522773 'move' ret[522763] ret[174375])
    (1842388 call chpl__autoDestroy[1465141] tmp[173980])
    gotoReturn _end_decodeByteBuffer[522761] _end_decodeByteBuffer[522761]
    label _end_decodeByteBuffer[522761]
    (1831301 '=' _retArg[1831299] ret[522763])
    (1831305 return _void[55])
  }
  function decodeHelp[174406](const in arg buff[174403]:c_ptr(uint(8))[937423], const in arg buffLen[174409]:int(64)[13], const in arg offset[174413]:int(64)[13], const in arg allowEsc[174417]:bool[10], ref arg _retArg[1831325]:_ref((syserr,int(32),int(32)))[964727]) : void[4] "fn returns via _retArg" "resolved" "fn synchronization free"
  {
    const-val ret[522791]:(syserr,int(32),int(32))[964620] "dead after last mention" "RVV" "temp"
    val chr[174482]:int(32)[95] "dead at end of block" "insert auto destroy"
    val call_tmp[682471]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (964780 'move' chr[174482] 0)
    val nBytes[174487]:int(32)[95] "dead at end of block" "insert auto destroy"
    (964783 'move' nBytes[174487] 0)
    const-val call_tmp[682476]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (682479 'move' call_tmp[682476](174493 call _cast[964385] offset[174413]))
    const-val start[174495]:int(32)[95] "dead at end of block" "insert auto destroy"
    (544912 'move' start[174495] call_tmp[682476])
    val call_tmp[682481]:c_ptr(uint(8))[937423] "dead at end of block" "expr temp" "maybe param" "temp"
    (682484 'move' call_tmp[682481](174501 call +[964416] buff[174403] start[174495]))
    const-val call_tmp[682486]:c_string[19] "dead at end of block" "maybe param" "temp"
    (682489 'move' call_tmp[682486](174504 call _cast[957806] call_tmp[682481]))
    const-val multibytes[174506]:c_string[19] "dead at end of block" "insert auto destroy"
    (544914 'move' multibytes[174506] call_tmp[682486])
    const-val call_tmp[682491]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[964470]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (964476 'move' coerce_tmp[964470](964472 'cast' int(64)[13] start[174495]))
    (682494 'move' call_tmp[682491](174512 call -[440416] buffLen[174409] coerce_tmp[964470]))
    const-val call_tmp[682496]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (682499 'move' call_tmp[682496] call_tmp[682491])
    const-val maxbytes[174517]:int(64)[13] "dead at end of block" "insert auto destroy"
    (544916 'move' maxbytes[174517] call_tmp[682496])
    val decodeRet[174522]:syserr[223584] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[544918]:syserr[223584] "dead after last mention" "maybe param" "temp" "type variable"
    const-val call_tmp[682501]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (682504 'move' call_tmp[682501] allowEsc[174417])
    if call_tmp[682501]
    {
      const-val call_tmp[682506]:syserr[223584] "dead at end of block" "maybe param" "temp"
      (682509 'move' call_tmp[682506](174534 call qio_decode_char_buf_esc[174460] chr[174482] nBytes[174487] multibytes[174506] maxbytes[174517]))
      (544926 'move' decodeRet[174522] call_tmp[682506])
    }
    {
      const-val call_tmp[682511]:syserr[223584] "dead at end of block" "maybe param" "temp"
      (682514 'move' call_tmp[682511](174545 call qio_decode_char_buf[174433] chr[174482] nBytes[174487] multibytes[174506] maxbytes[174517]))
      (544929 'move' decodeRet[174522] call_tmp[682511])
    }
    const-val call_tmp[682516]:(syserr,int(32),int(32))[964620] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1832067]:(syserr,int(32),int(32))[964620] "temp"
    (174559 call _build_tuple[964570] decodeRet[174522] chr[174482] nBytes[174487] ret_tmp[1832067])
    (1832070 'move' call_tmp[682516] ret_tmp[1832067])
    (522796 'move' ret[522791] call_tmp[682516])
    gotoReturn _end_decodeHelp[522789] _end_decodeHelp[522789]
    label _end_decodeHelp[522789]
    (1831327 '=' _retArg[1831325] ret[522791])
    (1831329 return _void[55])
  }
  function initWithBorrowedBuffer[948874](ref arg x[948876]:_ref(string)[937939], const  ref arg other[948881]:string[26]) : void[4] "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[948887]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[948898]:_ref(bool)[937199] "dead after last mention" "maybe param" "temp"
    (948900 'move' call_tmp[948898](948903 call isOwned[757990] x[948876]))
    (948907 call =[435174] call_tmp[948898] 0)
    val call_tmp[948911]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      ref call_tmp[948934]:_ref(bool)[937199] "dead after last mention" "maybe param" "temp"
      (948936 'move' call_tmp[948934](948939 call hasEscapes[758016] x[948876]))
      ref call_tmp[948942]:_ref(bool)[937199] "dead after last mention" "maybe param" "reference to a const" "temp"
      (948944 'move' call_tmp[948942](948947 call hasEscapes[758016] other[948881]))
      const-val coerce_tmp[949582]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (949586 'move' coerce_tmp[949582](949584 'deref' call_tmp[948942]))
      (948951 call =[435174] call_tmp[948934] coerce_tmp[949582])
    }
    ref call_tmp[948955]:_ref(int(32))[936626] "dead at end of block" "maybe param" "reference to a const" "temp"
    (948957 'move' call_tmp[948955](948960 call locale_id[758042] other[948881]))
    const-val call_tmp[948963]:bool[10] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[949590]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (949594 'move' coerce_tmp[949590](949592 'deref' call_tmp[948955]))
    (948965 'move' call_tmp[948963](948968 call !=[435990] coerce_tmp[949590] chpl_nodeID[208152]))
    const-val otherRemote[948971]:bool[10] "dead at end of block" "const" "insert auto destroy"
    (948973 'move' otherRemote[948971] call_tmp[948963])
    const-val call_tmp[948977]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (948979 'move' call_tmp[948977](948982 call numBytes[32807] other[948881]))
    const-val otherLen[948985]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (948987 'move' otherLen[948985] call_tmp[948977])
    const-val call_tmp[948991]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (948993 'move' call_tmp[948991](948996 call >[437672] otherLen[948985] 0))
    const-val call_tmp[948999]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (949001 'move' call_tmp[948999] call_tmp[948991])
    if call_tmp[948999]
    {
      ref call_tmp[949008]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
      (949010 'move' call_tmp[949008](949013 call buffLen[757886] x[948876]))
      (949017 call =[435327] call_tmp[949008] otherLen[948985])
      const-val call_tmp[949022]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (949024 'move' call_tmp[949022] otherRemote[948971])
      if call_tmp[949022]
      {
        ref call_tmp[949031]:_ref(bool)[937199] "dead after last mention" "maybe param" "temp"
        (949033 'move' call_tmp[949031](949036 call isOwned[757990] x[948876]))
        (949040 call =[435174] call_tmp[949031] 1)
        ref call_tmp[949044]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "temp"
        (949046 'move' call_tmp[949044](949049 call buff[757964] x[948876]))
        ref call_tmp[949052]:_ref(int(32))[936626] "dead after last mention" "maybe param" "reference to a const" "temp"
        (949054 'move' call_tmp[949052](949057 call locale_id[758042] other[948881]))
        ref call_tmp[949060]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "reference to a const" "temp"
        (949062 'move' call_tmp[949060](949065 call buff[757964] other[948881]))
        val call_tmp[949068]:c_ptr(uint(8))[937423] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[949645]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (949649 'move' coerce_tmp[949645](949647 'deref' call_tmp[949052]))
        const-val coerce_tmp[949651]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (949657 'move' coerce_tmp[949651](949653 'cast' int(64)[13] coerce_tmp[949645]))
        val coerce_tmp[949659]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (949663 'move' coerce_tmp[949659](949661 'deref' call_tmp[949060]))
        (949070 'move' call_tmp[949068](949073 call bufferCopyRemote[172784] coerce_tmp[949651] coerce_tmp[949659] otherLen[948985]))
        (949078 call =[954213] call_tmp[949044] call_tmp[949068])
        ref call_tmp[949083]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
        (949085 'move' call_tmp[949083](949088 call buffLen[757886] x[948876]))
        const-val call_tmp[949091]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (949093 'move' call_tmp[949091](949096 call +[949666] otherLen[948985]))
        (949100 call =[435327] call_tmp[949083] call_tmp[949091])
        val call_tmp[949105]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          ref call_tmp[949128]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
          (949130 'move' call_tmp[949128](949133 call cachedNumCodepoints[757938] x[948876]))
          ref call_tmp[949136]:_ref(int(64))[936572] "dead after last mention" "maybe param" "reference to a const" "temp"
          (949138 'move' call_tmp[949136](949141 call cachedNumCodepoints[757938] other[948881]))
          const-val coerce_tmp[954248]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (954252 'move' coerce_tmp[954248](954250 'deref' call_tmp[949136]))
          (949145 call =[435327] call_tmp[949128] coerce_tmp[954248])
        }
      }
      {
        ref call_tmp[949150]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "temp"
        (949152 'move' call_tmp[949150](949155 call buff[757964] x[948876]))
        ref call_tmp[949158]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "reference to a const" "temp"
        (949160 'move' call_tmp[949158](949163 call buff[757964] other[948881]))
        val coerce_tmp[954257]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (954261 'move' coerce_tmp[954257](954259 'deref' call_tmp[949158]))
        (949167 call =[954213] call_tmp[949150] coerce_tmp[954257])
        ref call_tmp[949171]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
        (949173 'move' call_tmp[949171](949176 call buffSize[757912] x[948876]))
        ref call_tmp[949179]:_ref(int(64))[936572] "dead after last mention" "maybe param" "reference to a const" "temp"
        (949181 'move' call_tmp[949179](949184 call buffSize[757912] other[948881]))
        const-val coerce_tmp[954266]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (954270 'move' coerce_tmp[954266](954268 'deref' call_tmp[949179]))
        (949188 call =[435327] call_tmp[949171] coerce_tmp[954266])
        val call_tmp[949192]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          ref call_tmp[949215]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
          (949217 'move' call_tmp[949215](949220 call cachedNumCodepoints[757938] x[948876]))
          ref call_tmp[949223]:_ref(int(64))[936572] "dead after last mention" "maybe param" "reference to a const" "temp"
          (949225 'move' call_tmp[949223](949228 call cachedNumCodepoints[757938] other[948881]))
          const-val coerce_tmp[954278]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (954282 'move' coerce_tmp[954278](954280 'deref' call_tmp[949223]))
          (949232 call =[435327] call_tmp[949215] coerce_tmp[954278])
        }
      }
    }
    (949238 return _void[55])
  }
  function initWithBorrowedBuffer[1760310](ref arg x[1760312]:_ref(string)[937939], const in arg other[1760316]:c_ptr(uint(8))[937423], const in arg length[1760318]:int(64)[13], const in arg size[1760320]:int(64)[13]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val call_tmp[1760326]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[1760337]:_ref(bool)[937199] "dead after last mention" "maybe param" "temp"
    (1760339 'move' call_tmp[1760337](1760342 call isOwned[757990] x[1760312]))
    (1760346 call =[435174] call_tmp[1760337] 0)
    ref call_tmp[1760350]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "temp"
    (1760352 'move' call_tmp[1760350](1760355 call buff[757964] x[1760312]))
    (1760359 call =[954213] call_tmp[1760350] other[1760316])
    ref call_tmp[1760363]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
    (1760365 'move' call_tmp[1760363](1760368 call buffSize[757912] x[1760312]))
    (1760372 call =[435327] call_tmp[1760363] size[1760320])
    ref call_tmp[1760376]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
    (1760378 'move' call_tmp[1760376](1760381 call buffLen[757886] x[1760312]))
    (1760385 call =[435327] call_tmp[1760376] length[1760318])
    (1760388 return _void[55])
  }
  function initWithBorrowedBuffer[1760423](ref arg x[1760425]:_ref(bytes)[937987], const in arg other[1760429]:c_ptr(uint(8))[937423], const in arg length[1760431]:int(64)[13], const in arg size[1760433]:int(64)[13]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val call_tmp[1760439]:bytes[24] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[1760450]:_ref(bool)[937199] "dead after last mention" "maybe param" "temp"
    (1760452 'move' call_tmp[1760450](1760455 call isOwned[752885] x[1760425]))
    (1760459 call =[435174] call_tmp[1760450] 0)
    ref call_tmp[1760463]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "temp"
    (1760465 'move' call_tmp[1760463](1760468 call buff[752859] x[1760425]))
    (1760472 call =[954213] call_tmp[1760463] other[1760429])
    ref call_tmp[1760476]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
    (1760478 'move' call_tmp[1760476](1760481 call buffSize[752833] x[1760425]))
    (1760485 call =[435327] call_tmp[1760476] size[1760433])
    ref call_tmp[1760489]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
    (1760491 'move' call_tmp[1760489](1760494 call buffLen[752807] x[1760425]))
    (1760498 call =[435327] call_tmp[1760489] length[1760431])
    (1760501 return _void[55])
  }
  function initWithOwnedBuffer[978895](ref arg x[978897]:_ref(string)[937939], const in arg other[978901]:c_ptr(uint(8))[937423], const in arg length[978903]:int(64)[13], const in arg size[978905]:int(64)[13]) : void[4] "inline" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[978911]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[978922]:_ref(bool)[937199] "dead after last mention" "maybe param" "temp"
    (978924 'move' call_tmp[978922](978927 call isOwned[757990] x[978897]))
    (978931 call =[435174] call_tmp[978922] 1)
    ref call_tmp[978935]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "temp"
    (978937 'move' call_tmp[978935](978940 call buff[757964] x[978897]))
    (978944 call =[954213] call_tmp[978935] other[978901])
    ref call_tmp[978948]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
    (978950 'move' call_tmp[978948](978953 call buffSize[757912] x[978897]))
    (978957 call =[435327] call_tmp[978948] size[978905])
    ref call_tmp[978961]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
    (978963 'move' call_tmp[978961](978966 call buffLen[757886] x[978897]))
    (978970 call =[435327] call_tmp[978961] length[978903])
    (978973 return _void[55])
  }
  function initWithNewBuffer[954329](ref arg x[954331]:_ref(string)[937939], const  ref arg other[954336]:string[26]) : void[4] "inline" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[954342]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[954353]:_ref(int(32))[936626] "dead at end of block" "maybe param" "reference to a const" "temp"
    (954355 'move' call_tmp[954353](954358 call locale_id[758042] other[954336]))
    const-val call_tmp[954361]:bool[10] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[954822]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (954826 'move' coerce_tmp[954822](954824 'deref' call_tmp[954353]))
    (954363 'move' call_tmp[954361](954366 call !=[435990] coerce_tmp[954822] chpl_nodeID[208152]))
    const-val otherRemote[954369]:bool[10] "dead at end of block" "const" "insert auto destroy"
    (954371 'move' otherRemote[954369] call_tmp[954361])
    const-val call_tmp[954375]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (954377 'move' call_tmp[954375](954380 call numBytes[32807] other[954336]))
    const-val otherLen[954383]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (954385 'move' otherLen[954383] call_tmp[954375])
    ref call_tmp[954389]:_ref(bool)[937199] "dead after last mention" "maybe param" "temp"
    (954391 'move' call_tmp[954389](954394 call isOwned[757990] x[954331]))
    (954398 call =[435174] call_tmp[954389] 1)
    val call_tmp[954402]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      ref call_tmp[954425]:_ref(bool)[937199] "dead after last mention" "maybe param" "temp"
      (954427 'move' call_tmp[954425](954430 call hasEscapes[758016] x[954331]))
      ref call_tmp[954433]:_ref(bool)[937199] "dead after last mention" "maybe param" "reference to a const" "temp"
      (954435 'move' call_tmp[954433](954438 call hasEscapes[758016] other[954336]))
      const-val coerce_tmp[954837]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (954841 'move' coerce_tmp[954837](954839 'deref' call_tmp[954433]))
      (954442 call =[435174] call_tmp[954425] coerce_tmp[954837])
    }
    val call_tmp[954446]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      ref call_tmp[954469]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
      (954471 'move' call_tmp[954469](954474 call cachedNumCodepoints[757938] x[954331]))
      ref call_tmp[954477]:_ref(int(64))[936572] "dead after last mention" "maybe param" "reference to a const" "temp"
      (954479 'move' call_tmp[954477](954482 call cachedNumCodepoints[757938] other[954336]))
      const-val coerce_tmp[954849]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (954853 'move' coerce_tmp[954849](954851 'deref' call_tmp[954477]))
      (954486 call =[435327] call_tmp[954469] coerce_tmp[954849])
    }
    const-val call_tmp[954490]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (954492 'move' call_tmp[954490](954495 call >[437672] otherLen[954383] 0))
    const-val call_tmp[954498]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (954500 'move' call_tmp[954498] call_tmp[954490])
    if call_tmp[954498]
    {
      ref call_tmp[954507]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
      (954509 'move' call_tmp[954507](954512 call buffLen[757886] x[954331]))
      (954516 call =[435327] call_tmp[954507] otherLen[954383])
      const-val tmp[954541]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val tmp[954559]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (954561 'move' tmp[954559] otherRemote[954369])
      (954566 'move' tmp[954541] tmp[954559])
      const-val call_tmp[954578]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (954580 'move' call_tmp[954578] tmp[954541])
      if call_tmp[954578]
      {
        ref call_tmp[954587]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "temp"
        (954589 'move' call_tmp[954587](954592 call buff[757964] x[954331]))
        ref call_tmp[954595]:_ref(int(32))[936626] "dead after last mention" "maybe param" "reference to a const" "temp"
        (954597 'move' call_tmp[954595](954600 call locale_id[758042] other[954336]))
        ref call_tmp[954603]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "reference to a const" "temp"
        (954605 'move' call_tmp[954603](954608 call buff[757964] other[954336]))
        val call_tmp[954611]:c_ptr(uint(8))[937423] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[954984]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (954988 'move' coerce_tmp[954984](954986 'deref' call_tmp[954595]))
        const-val coerce_tmp[954990]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (954996 'move' coerce_tmp[954990](954992 'cast' int(64)[13] coerce_tmp[954984]))
        val coerce_tmp[954998]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (955002 'move' coerce_tmp[954998](955000 'deref' call_tmp[954603]))
        (954613 'move' call_tmp[954611](954616 call bufferCopyRemote[172784] coerce_tmp[954990] coerce_tmp[954998] otherLen[954383]))
        (954621 call =[954213] call_tmp[954587] call_tmp[954611])
        ref call_tmp[954626]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
        (954628 'move' call_tmp[954626](954631 call buffSize[757912] x[954331]))
        const-val call_tmp[954634]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (954636 'move' call_tmp[954634](954639 call +[949666] otherLen[954383]))
        (954643 call =[435327] call_tmp[954626] call_tmp[954634])
      }
      {
        ref call_tmp[954649]:_ref(c_ptr(uint(8)))[937432] "dead at end of block" "maybe param" "reference to a const" "temp"
        (954651 'move' call_tmp[954649](954654 call buff[757964] other[954336]))
        const-val call_tmp[954657]:(c_ptr(uint(8)),int(64))[955208] "dead at end of block" "maybe param" "temp"
        val coerce_tmp[955010]:c_ptr(uint(8))[937423] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (955014 'move' coerce_tmp[955010](955012 'deref' call_tmp[954649]))
        const-val ret_tmp[1831221]:(c_ptr(uint(8)),int(64))[955208] "temp"
        (954662 call bufferCopyLocal[172847] coerce_tmp[955010] otherLen[954383] ret_tmp[1831221])
        (1831224 'move' call_tmp[954657] ret_tmp[1831221])
        const-val tmp[954665]:(c_ptr(uint(8)),int(64))[955208] "dead at end of block" "const" "insert auto destroy" "temp"
        (954667 'move' tmp[954665] call_tmp[954657])
        1
        ref call_tmp[954675]:_ref(c_ptr(uint(8)))[937432] "dead at end of block" "maybe param" "reference to a const" "temp"
        (954677 'move' call_tmp[954675](957212 '.' tmp[954665] x0[955204]))
        const buff[954682]:c_ptr(uint(8))[937423] "dead at end of block" "const" "insert auto destroy"
        val coerce_tmp[957217]:c_ptr(uint(8))[937423] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (957221 'move' coerce_tmp[957217](957219 'deref' call_tmp[954675]))
        (954684 'move' buff[954682] coerce_tmp[957217])
        ref call_tmp[954687]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
        (954689 'move' call_tmp[954687](957226 '.' tmp[954665] x1[955206]))
        const-val allocSize[954694]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[957231]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (957235 'move' coerce_tmp[957231](957233 'deref' call_tmp[954687]))
        (954696 'move' allocSize[954694] coerce_tmp[957231])
        ref call_tmp[954700]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "temp"
        (954702 'move' call_tmp[954700](954705 call buff[757964] x[954331]))
        (954709 call =[954213] call_tmp[954700] buff[954682])
        ref call_tmp[954714]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
        (954716 'move' call_tmp[954714](954719 call buffLen[757886] x[954331]))
        ref call_tmp[954722]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
        ref _this_tmp_[957242]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "temp"
        (957244 'move' _this_tmp_[957242](954727 call buff[757964] x[954331]))
        val coerce_tmp[957249]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (957253 'move' coerce_tmp[957249](957251 'deref' _this_tmp_[957242]))
        const-val coerce_tmp[957255]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (957259 'move' coerce_tmp[957255](957257 'deref' call_tmp[954714]))
        (954724 'move' call_tmp[954722](954730 call this[954091] coerce_tmp[957249] coerce_tmp[957255]))
        const-val coerce_tmp[957262]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (957268 'move' coerce_tmp[957262](957264 'cast' uint(8)[100] 0))
        (954733 call =[435348] call_tmp[954722] coerce_tmp[957262])
        ref call_tmp[954737]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
        (954739 'move' call_tmp[954737](954742 call buffSize[757912] x[954331]))
        (954746 call =[435327] call_tmp[954737] allocSize[954694])
        (1842633 call chpl__autoDestroy[1465141] tmp[954665])
      }
    }
    (954753 return _void[55])
  }
  function initWithNewBuffer[1792730](ref arg x[1792732]:_ref(string)[937939], const in arg other[1792736]:c_ptr(uint(8))[937423], const in arg length[1792738]:int(64)[13], const in arg size[1792740]:int(64)[13]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val call_tmp[1792746]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val otherLen[1792757]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1792759 'move' otherLen[1792757] length[1792738])
    ref call_tmp[1792763]:_ref(bool)[937199] "dead after last mention" "maybe param" "temp"
    (1792765 'move' call_tmp[1792763](1792768 call isOwned[757990] x[1792732]))
    (1792772 call =[435174] call_tmp[1792763] 1)
    const-val call_tmp[1792776]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1792778 'move' call_tmp[1792776](1792781 call >[437672] otherLen[1792757] 0))
    const-val call_tmp[1792784]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1792786 'move' call_tmp[1792784] call_tmp[1792776])
    if call_tmp[1792784]
    {
      val call_tmp[1792793]:c_ptr(uint(8))[937423] "dead at end of block" "expr temp" "maybe param" "temp"
      (1792795 'move' call_tmp[1792793] other[1792736])
      const-val call_tmp[1792801]:(c_ptr(uint(8)),int(64))[955208] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1831233]:(c_ptr(uint(8)),int(64))[955208] "temp"
      (1792806 call bufferCopyLocal[172847] call_tmp[1792793] otherLen[1792757] ret_tmp[1831233])
      (1831236 'move' call_tmp[1792801] ret_tmp[1831233])
      const-val tmp[1792809]:(c_ptr(uint(8)),int(64))[955208] "dead at end of block" "const" "insert auto destroy" "temp"
      (1792811 'move' tmp[1792809] call_tmp[1792801])
      1
      ref call_tmp[1792819]:_ref(c_ptr(uint(8)))[937432] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1792821 'move' call_tmp[1792819](1792927 '.' tmp[1792809] x0[955204]))
      const buff[1792826]:c_ptr(uint(8))[937423] "dead at end of block" "const" "insert auto destroy"
      val coerce_tmp[1792932]:c_ptr(uint(8))[937423] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1792936 'move' coerce_tmp[1792932](1792934 'deref' call_tmp[1792819]))
      (1792828 'move' buff[1792826] coerce_tmp[1792932])
      ref call_tmp[1792831]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1792833 'move' call_tmp[1792831](1792941 '.' tmp[1792809] x1[955206]))
      const-val allocSize[1792838]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1792946]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1792950 'move' coerce_tmp[1792946](1792948 'deref' call_tmp[1792831]))
      (1792840 'move' allocSize[1792838] coerce_tmp[1792946])
      ref call_tmp[1792844]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "temp"
      (1792846 'move' call_tmp[1792844](1792849 call buff[757964] x[1792732]))
      (1792853 call =[954213] call_tmp[1792844] buff[1792826])
      ref call_tmp[1792858]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
      (1792860 'move' call_tmp[1792858](1792863 call buffLen[757886] x[1792732]))
      (1792867 call =[435327] call_tmp[1792858] otherLen[1792757])
      ref call_tmp[1792872]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
      (1792874 'move' call_tmp[1792872](1792877 call buffLen[757886] x[1792732]))
      ref call_tmp[1792880]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
      ref _this_tmp_[1792959]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "temp"
      (1792961 'move' _this_tmp_[1792959](1792885 call buff[757964] x[1792732]))
      val coerce_tmp[1792966]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1792970 'move' coerce_tmp[1792966](1792968 'deref' _this_tmp_[1792959]))
      const-val coerce_tmp[1792972]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1792976 'move' coerce_tmp[1792972](1792974 'deref' call_tmp[1792872]))
      (1792882 'move' call_tmp[1792880](1792888 call this[954091] coerce_tmp[1792966] coerce_tmp[1792972]))
      const-val coerce_tmp[1792979]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1792985 'move' coerce_tmp[1792979](1792981 'cast' uint(8)[100] 0))
      (1792891 call =[435348] call_tmp[1792880] coerce_tmp[1792979])
      ref call_tmp[1792895]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
      (1792897 'move' call_tmp[1792895](1792900 call buffSize[757912] x[1792732]))
      (1792904 call =[435327] call_tmp[1792895] allocSize[1792838])
      (1851979 call chpl__autoDestroy[1465141] tmp[1792809])
    }
    (1792910 return _void[55])
  }
  function getView[1031154](const  ref arg x[1031156]:_ref(string)[937939], const in arg r[1031158]:range(byteIndex,bounded,false)[1025792], ref arg _retArg[1832707]:_ref((range(int(64),bounded,false),int(64)))[1086486]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val ret[1031160]:(range(int(64),bounded,false),int(64))[1084924] "dead after last mention" "RVV" "temp"
    val call_tmp[1031170]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1031183]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1031526]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1031577]:byteIndex[28170] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      const-val call_tmp[1031613]:(range(int(64),bounded,false),int(64))[1084924] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1832713]:(range(int(64),bounded,false),int(64))[1084924] "temp"
      (1031618 call simpleCaseHelper[1031274] r[1031158] x[1031156] ret_tmp[1832713])
      (1832716 'move' call_tmp[1031613] ret_tmp[1832713])
      (1031619 'move' ret[1031160] call_tmp[1031613])
      gotoReturn _end_getView[1032385] _end_getView[1032385]
    }
    label _end_getView[1032385]
    (1832709 '=' _retArg[1832707] ret[1031160])
    (1832711 return _void[55])
  }
  function getView[1112147](const  ref arg x[1112149]:_ref(string)[937939], const in arg r[1112151]:range(int(64),bounded,false)[1026814], ref arg _retArg[1833948]:_ref((range(int(64),bounded,false),int(64)))[1086486]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1112153]:(range(int(64),bounded,false),int(64))[1084924] "dead after last mention" "RVV" "temp"
    val call_tmp[1112163]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1112176]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1112519]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1112570]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1112621]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val tmp[1112646]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val tmp[1112664]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1112666]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1112668 'move' call_tmp[1112666](1112674 call isASCII[31046] x[1112149]))
      (1112675 'move' tmp[1112664] call_tmp[1112666])
      (1112680 'move' tmp[1112646] tmp[1112664])
      const-val call_tmp[1112692]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1112694 'move' call_tmp[1112692] tmp[1112646])
      if call_tmp[1112692]
      {
        const-val call_tmp[1112701]:(range(int(64),bounded,false),int(64))[1084924] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1833954]:(range(int(64),bounded,false),int(64))[1084924] "temp"
        (1112706 call simpleCaseHelper[1112267] r[1112151] x[1112149] ret_tmp[1833954])
        (1833957 'move' call_tmp[1112701] ret_tmp[1833954])
        (1112707 'move' ret[1112153] call_tmp[1112701])
        gotoReturn _end_getView[1113378] _end_getView[1113378]
      }
      {
        const-val call_tmp[1112735]:range(int(64),bounded,false)[1026814] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1829401]:range(int(64),bounded,false)[1026814] "temp"
        (1112740 call indices[32785] x[1112149] ret_tmp[1829401])
        (1829404 'move' call_tmp[1112735] ret_tmp[1829401])
        const-val call_tmp[1112743]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1112745 'move' call_tmp[1112743](1112748 call ==[1041912] r[1112151] call_tmp[1112735]))
        const-val call_tmp[1112751]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1112753 'move' call_tmp[1112751] call_tmp[1112743])
        if call_tmp[1112751]
        {
          const-val call_tmp[1112760]:range(int(64),bounded,false)[1026814] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1829297]:range(int(64),bounded,false)[1026814] "temp"
          (1112765 call byteIndices[31065] x[1112149] ret_tmp[1829297])
          (1829300 'move' call_tmp[1112760] ret_tmp[1829297])
          ref call_tmp[1112768]:_ref(int(64))[936572] "dead after last mention" "maybe param" "reference to a const" "temp"
          (1112770 'move' call_tmp[1112768](1112773 call cachedNumCodepoints[757938] x[1112149]))
          const-val call_tmp[1112776]:(range(int(64),bounded,false),int(64))[1084924] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val coerce_tmp[1120926]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1120930 'move' coerce_tmp[1120926](1120928 'deref' call_tmp[1112768]))
          const-val ret_tmp[1833461]:(range(int(64),bounded,false),int(64))[1084924] "temp"
          (1112781 call _build_tuple[1084882] call_tmp[1112760] coerce_tmp[1120926] ret_tmp[1833461])
          (1833464 'move' call_tmp[1112776] ret_tmp[1833461])
          (1112784 'move' ret[1112153] call_tmp[1112776])
          (1844456 call chpl__autoDestroy[1534375] call_tmp[1112760])
          (1844459 call chpl__autoDestroy[1534375] call_tmp[1112735])
          gotoReturn _end_getView[1113378] _end_getView[1113378]
        }
        (1844462 call chpl__autoDestroy[1534375] call_tmp[1112735])
        val call_tmp[1112807]:range(int(64),bounded,false)[1026814] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1112816]:range(int(64),bounded,false)[1026814] "dead at end of block" "maybe param" "temp"
        const-val _formal_tmp_in_x[1120944]:range(int(64),bounded,false)[1026814] "dead at end of block" "expr temp" "no auto destroy" "temp"
        (1120948 'move' _formal_tmp_in_x[1120944] r[1112151])
        const-val ret_tmp[1833972]:range(int(64),bounded,false)[1026814] "temp"
        (1120941 call _removed_cast[1113423] _formal_tmp_in_x[1120944] ret_tmp[1833972])
        (1833975 'move' call_tmp[1112816] ret_tmp[1833972])
        const-val intR[1112824]:range(int(64),bounded,false)[1026814] "dead at end of block" "const" "insert auto destroy"
        (1112826 'move' intR[1112824] call_tmp[1112816])
        {
          const-val call_tmp[1112839]:range(int(64),bounded,false)[1026814] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1829407]:range(int(64),bounded,false)[1026814] "temp"
          (1112844 call indices[32785] x[1112149] ret_tmp[1829407])
          (1829410 'move' call_tmp[1112839] ret_tmp[1829407])
          const-val call_tmp[1112847]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1112849 'move' call_tmp[1112847](1112855 call boundsCheck[1033374] call_tmp[1112839] intR[1112824]))
          const-val call_tmp[1112857]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1112859 'move' call_tmp[1112857](1112862 call ![7494] call_tmp[1112847]))
          const-val call_tmp[1112864]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1112866 'move' call_tmp[1112864] call_tmp[1112857])
          if call_tmp[1112864]
          {
            const-val call_tmp[1112873]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (1112875 'move' call_tmp[1112873](1112878 call size[32769] x[1112149]))
            (1112882 call halt[1113460] "range " r[1112151] " out of bounds for string with length " call_tmp[1112873])
          }
          (1844466 call chpl__autoDestroy[1534375] call_tmp[1112839])
        }
        val cpCount[1112889]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1112891 'move' cpCount[1112889] 0)
        const-val cpIdxLow[1112917]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val tmp[1112919]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[1112937]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1112939]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1112941 'move' call_tmp[1112939](1112944 call alignedLow[1104861] intR[1112824]))
        const-val call_tmp[1112947]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1112949 'move' call_tmp[1112947] call_tmp[1112939])
        const-val call_tmp[1112955]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1112957 'move' call_tmp[1112955](1112960 call >=[979976] call_tmp[1112947]))
        (1112963 'move' tmp[1112937] call_tmp[1112955])
        (1112968 'move' tmp[1112919] tmp[1112937])
        val tmp[1112980]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
        const-val tmp[1112982]:bool[10] "dead after last mention" "maybe param" "temp"
        (1112984 'move' tmp[1112982] tmp[1112919])
        if tmp[1112982]
        {
          const-val tmp[1112991]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
          const-val call_tmp[1112993]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
          (1112995 'move' call_tmp[1112993](1112998 call alignedLow[1104861] intR[1112824]))
          (1113001 'move' tmp[1112991] call_tmp[1112993])
          (1113007 'move' tmp[1112980] tmp[1112991])
        }
        {
          (1113013 'move' tmp[1112980] 0)
        }
        (1113019 'move' cpIdxLow[1112917] tmp[1112980])
        const-val cpIdxHigh[1113023]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val tmp[1113025]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[1113045]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1113047]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1113049 'move' call_tmp[1113047](1113052 call alignedHigh[1104925] intR[1112824]))
        (1113055 'move' tmp[1113045] call_tmp[1113047])
        (1113061 'move' tmp[1113025] tmp[1113045])
        (1113089 'move' cpIdxHigh[1113023] tmp[1113025])
        ref call_tmp[1113093]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1113095 'move' call_tmp[1113093](1113098 call buffLen[757886] x[1112149]))
        val byteLow[1113101]:int(64)[13] "dead at end of block" "insert auto destroy"
        const-val coerce_tmp[1120982]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (1120986 'move' coerce_tmp[1120982](1120984 'deref' call_tmp[1113093]))
        (1844453 '=' byteLow[1113101] coerce_tmp[1120982])
        (1113103 'noop')
        ref call_tmp[1113107]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1113109 'move' call_tmp[1113107](1113112 call buffLen[757886] x[1112149]))
        const-val call_tmp[1113115]:int(64)[13] "dead at end of block" "maybe param" "temp"
        const-val coerce_tmp[1120990]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1120994 'move' coerce_tmp[1120990](1120992 'deref' call_tmp[1113107]))
        (1113117 'move' call_tmp[1113115](1113120 call -[962226] coerce_tmp[1120990]))
        val byteHigh[1113123]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1113125 'move' byteHigh[1113123] call_tmp[1113115])
        const-val call_tmp[1113133]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1113135 'move' call_tmp[1113133](1113138 call >=[979976] cpIdxHigh[1113023]))
        const-val call_tmp[1113141]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1113143 'move' call_tmp[1113141] call_tmp[1113133])
        if call_tmp[1113141]
        {
          {
            val _indexOfInterest[1113151]:(byteIndex,int(64))[1121233] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1113153]:_ic__indexLen__ref_string[1121305] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[1113155]:_ir__indexLen__ref_string[1121311] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val default_arg_start[1121029]:byteIndex[28170] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
            const-val ret_tmp[1834030]:byteIndex[28170] "temp"
            (1121031 call _indexLen_default_start[1121003] x[1112149] ret_tmp[1834030])
            (1834033 'move' default_arg_start[1121029] ret_tmp[1834030])
            const-val ret_tmp[1829373]:_ir__indexLen__ref_string[1121311] "temp"
            (1113163 call _indexLen[31451] x[1112149] default_arg_start[1121029] ret_tmp[1829373])
            (1829376 'move' call_tmp[1113155] ret_tmp[1829373])
            (1113164 'move' _iterator[1113153](1113167 call _getIterator[1121320] call_tmp[1113155]))
            {
              val ret[1913017]:_ir__indexLen__ref_string[1121311] "dead after last mention" "RVV" "temp"
              const-val call_tmp[1913019]:string[26] "dead at end of block" "maybe param" "temp"
              const-val ret_tmp[1913021]:string[26] "temp"
              ref this[1913679]:_ref(string)[937939] "temp"
              (1913684 'move' this[1913679](1913681 '.v' _iterator[1113153] F0_this[1998004]))
              (1913024 call localize[32886] this[1913679] ret_tmp[1913021])
              (1913027 'move' call_tmp[1913019] ret_tmp[1913021])
              val localThis[1913030]:string[26] "dead at end of block" "insert auto destroy"
              (1913032 'move' localThis[1913030] call_tmp[1913019])
              const-val call_tmp[1913035]:int(64)[13] "dead at end of block" "maybe param" "temp"
              ref start[1913686]:_ref(byteIndex)[948759] "temp"
              (1913691 'move' start[1913686](1913688 '.v' _iterator[1113153] F1_start[1998008]))
              (1913037 'move' call_tmp[1913035](1913040 call _cast[39462] start[1913686]))
              val i[1913042]:int(64)[13] "dead at end of block" "insert auto destroy"
              (1913044 'move' i[1913042] call_tmp[1913035])
              const-val call_tmp[1913047]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1913049 'move' call_tmp[1913047](1913052 call >[437672] call_tmp[1913035] 0))
              const-val call_tmp[1913055]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1913057 'move' call_tmp[1913055] call_tmp[1913047])
              if call_tmp[1913047]
              {
                val tmp[1913062]:bool[10] "dead after last mention" "temp"
                const-val tmp[1913064]:bool[10] "dead after last mention" "maybe param" "temp"
                ref call_tmp[1913066]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
                (1913068 'move' call_tmp[1913066](1913071 call buffLen[757886] localThis[1913030]))
                const-val coerce_tmp[1913073]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1913075 'move' coerce_tmp[1913073](1913077 'deref' call_tmp[1913066]))
                (1913079 'move' tmp[1913064](1913082 call <[437452] i[1913042] coerce_tmp[1913073]))
                val tmp[1913085]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[1913087]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1913089]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1913091 'move' call_tmp[1913089] tmp[1913064])
                (1913094 'move' tmp[1913087] tmp[1913064])
                if tmp[1913064]
                {
                  const-val tmp[1913099]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  ref call_tmp[1913101]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[1913103]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "temp"
                  (1913105 'move' _this_tmp_[1913103](1913108 call buff[757964] localThis[1913030]))
                  val coerce_tmp[1913110]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1913112 'move' coerce_tmp[1913110](1913114 'deref' _this_tmp_[1913103]))
                  (1913116 'move' call_tmp[1913101](1913119 call this[954091] coerce_tmp[1913110] i[1913042]))
                  const-val call_tmp[1913122]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1913124]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1913126 'move' coerce_tmp[1913124](1913128 'deref' call_tmp[1913101]))
                  (1913130 'move' call_tmp[1913122](1913133 call isInitialByte[181528] coerce_tmp[1913124]))
                  const-val call_tmp[1913135]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1913137 'move' call_tmp[1913135](1913140 call ![7494] call_tmp[1913122]))
                  (1913142 'move' tmp[1913099] call_tmp[1913135])
                  (1913145 'move' tmp[1913085] call_tmp[1913135])
                }
                {
                  (1913149 'move' tmp[1913085] 0)
                }
                (1913153 'move' tmp[1913062] tmp[1913085])
                WhileDo[1913156]
                {
                  (1913159 call +=[451315] i[1913042] 1)
                  const-val tmp[1913162]:bool[10] "dead after last mention" "maybe param" "temp"
                  ref call_tmp[1913164]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
                  (1913166 'move' call_tmp[1913164](1913169 call buffLen[757886] localThis[1913030]))
                  const-val coerce_tmp[1913171]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1913173 'move' coerce_tmp[1913171](1913175 'deref' call_tmp[1913164]))
                  (1913177 'move' tmp[1913162](1913180 call <[437452] i[1913042] coerce_tmp[1913171]))
                  val tmp[1913183]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                  const-val tmp[1913185]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[1913187]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1913189 'move' call_tmp[1913187] tmp[1913162])
                  (1913192 'move' tmp[1913185] tmp[1913162])
                  if tmp[1913162]
                  {
                    const-val tmp[1913197]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    ref call_tmp[1913199]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
                    ref _this_tmp_[1913201]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "temp"
                    (1913203 'move' _this_tmp_[1913201](1913206 call buff[757964] localThis[1913030]))
                    val coerce_tmp[1913208]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1913210 'move' coerce_tmp[1913208](1913212 'deref' _this_tmp_[1913201]))
                    (1913214 'move' call_tmp[1913199](1913217 call this[954091] coerce_tmp[1913208] i[1913042]))
                    const-val call_tmp[1913220]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1913222]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1913224 'move' coerce_tmp[1913222](1913226 'deref' call_tmp[1913199]))
                    (1913228 'move' call_tmp[1913220](1913231 call isInitialByte[181528] coerce_tmp[1913222]))
                    const-val call_tmp[1913233]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1913235 'move' call_tmp[1913233](1913238 call ![7494] call_tmp[1913220]))
                    (1913240 'move' tmp[1913197] call_tmp[1913233])
                    (1913243 'move' tmp[1913183] call_tmp[1913233])
                  }
                  {
                    (1913247 'move' tmp[1913183] 0)
                  }
                  (1913251 'move' tmp[1913062] tmp[1913183])
                  tmp[1913062]
                }
              }
              val tmp[1913255]:bool[10] "dead after last mention" "temp"
              ref call_tmp[1913257]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
              (1913259 'move' call_tmp[1913257](1913262 call buffLen[757886] localThis[1913030]))
              const-val call_tmp[1913264]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1913266]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1913268 'move' coerce_tmp[1913266](1913270 'deref' call_tmp[1913257]))
              (1913272 'move' call_tmp[1913264](1913275 call <[437452] i[1913042] coerce_tmp[1913266]))
              (1913278 'move' tmp[1913255] call_tmp[1913264])
              WhileDo[1913281]
              {
                const-val call_tmp[1913283]:int(64)[13] "dead at end of block" "maybe param" "temp"
                (1913285 'move' call_tmp[1913283](1913288 call +[949666] i[1913042]))
                val j[1913290]:int(64)[13] "dead at end of block" "insert auto destroy"
                (1913292 'move' j[1913290] call_tmp[1913283])
                val tmp[1913295]:bool[10] "dead after last mention" "temp"
                const-val tmp[1913297]:bool[10] "dead after last mention" "maybe param" "temp"
                ref call_tmp[1913299]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
                (1913301 'move' call_tmp[1913299](1913304 call buffLen[757886] localThis[1913030]))
                const-val coerce_tmp[1913306]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1913308 'move' coerce_tmp[1913306](1913310 'deref' call_tmp[1913299]))
                (1913312 'move' tmp[1913297](1913315 call <[437452] call_tmp[1913283] coerce_tmp[1913306]))
                val tmp[1913318]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[1913320]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1913322]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1913324 'move' call_tmp[1913322] tmp[1913297])
                (1913327 'move' tmp[1913320] tmp[1913297])
                if tmp[1913297]
                {
                  const-val tmp[1913332]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  ref call_tmp[1913334]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[1913336]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "temp"
                  (1913338 'move' _this_tmp_[1913336](1913341 call buff[757964] localThis[1913030]))
                  val coerce_tmp[1913343]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1913345 'move' coerce_tmp[1913343](1913347 'deref' _this_tmp_[1913336]))
                  (1913349 'move' call_tmp[1913334](1913352 call this[954091] coerce_tmp[1913343] j[1913290]))
                  const-val call_tmp[1913355]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1913357]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1913359 'move' coerce_tmp[1913357](1913361 'deref' call_tmp[1913334]))
                  (1913363 'move' call_tmp[1913355](1913366 call isInitialByte[181528] coerce_tmp[1913357]))
                  const-val call_tmp[1913368]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1913370 'move' call_tmp[1913368](1913373 call ![7494] call_tmp[1913355]))
                  (1913375 'move' tmp[1913332] call_tmp[1913368])
                  (1913378 'move' tmp[1913318] call_tmp[1913368])
                }
                {
                  (1913382 'move' tmp[1913318] 0)
                }
                (1913386 'move' tmp[1913295] tmp[1913318])
                WhileDo[1913389]
                {
                  (1913392 call +=[451315] j[1913290] 1)
                  const-val tmp[1913395]:bool[10] "dead after last mention" "maybe param" "temp"
                  ref call_tmp[1913397]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
                  (1913399 'move' call_tmp[1913397](1913402 call buffLen[757886] localThis[1913030]))
                  const-val coerce_tmp[1913404]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1913406 'move' coerce_tmp[1913404](1913408 'deref' call_tmp[1913397]))
                  (1913410 'move' tmp[1913395](1913413 call <[437452] j[1913290] coerce_tmp[1913404]))
                  val tmp[1913416]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                  const-val tmp[1913418]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[1913420]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1913422 'move' call_tmp[1913420] tmp[1913395])
                  (1913425 'move' tmp[1913418] tmp[1913395])
                  if tmp[1913395]
                  {
                    const-val tmp[1913430]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    ref call_tmp[1913432]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
                    ref _this_tmp_[1913434]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "temp"
                    (1913436 'move' _this_tmp_[1913434](1913439 call buff[757964] localThis[1913030]))
                    val coerce_tmp[1913441]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1913443 'move' coerce_tmp[1913441](1913445 'deref' _this_tmp_[1913434]))
                    (1913447 'move' call_tmp[1913432](1913450 call this[954091] coerce_tmp[1913441] j[1913290]))
                    const-val call_tmp[1913453]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1913455]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1913457 'move' coerce_tmp[1913455](1913459 'deref' call_tmp[1913432]))
                    (1913461 'move' call_tmp[1913453](1913464 call isInitialByte[181528] coerce_tmp[1913455]))
                    const-val call_tmp[1913466]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1913468 'move' call_tmp[1913466](1913471 call ![7494] call_tmp[1913453]))
                    (1913473 'move' tmp[1913430] call_tmp[1913466])
                    (1913476 'move' tmp[1913416] call_tmp[1913466])
                  }
                  {
                    (1913480 'move' tmp[1913416] 0)
                  }
                  (1913484 'move' tmp[1913295] tmp[1913416])
                  tmp[1913295]
                }
                const-val yret[1913487]:(byteIndex,int(64))[1121233] "dead after last mention" "YVV" "temp"
                const-val call_tmp[1913489]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1913491]:byteIndex[28170] "temp"
                (1913494 call _cast[39483] i[1913042] ret_tmp[1913491])
                (1913497 'move' call_tmp[1913489] ret_tmp[1913491])
                const-val call_tmp[1913500]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (1913502 'move' call_tmp[1913500](1913505 call -[440416] j[1913290] i[1913042]))
                const-val call_tmp[1913508]:(byteIndex,int(64))[1121233] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1913510]:(byteIndex,int(64))[1121233] "temp"
                (1913513 call _build_tuple[1121191] call_tmp[1913489] call_tmp[1913500] ret_tmp[1913510])
                (1913517 'move' call_tmp[1913508] ret_tmp[1913510])
                (1913520 'move' yret[1913487] call_tmp[1913508])
                const-val _yieldedIndex[1913574]:(byteIndex,int(64))[1121233] "temp"
                (1913677 'move' _yieldedIndex[1913574] call_tmp[1913508])
                {
                  1
                  ref i[1913577]:_ref(byteIndex)[948759] "index var" "insert auto destroy"
                  (1913579 'move' i[1913577](1913581 '.v' _yieldedIndex[1913574] x0[1121229]))
                  const-val nBytes[1913584]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1913586 'move' nBytes[1913584](1913588 '.v' _yieldedIndex[1913574] x1[1121231]))
                  {
                    const-val call_tmp[1913592]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1913594 'move' call_tmp[1913592](1913597 call ==[435628] cpCount[1112889] cpIdxLow[1112917]))
                    const-val call_tmp[1913600]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1913602 'move' call_tmp[1913600] call_tmp[1913592])
                    if call_tmp[1913600]
                    {
                      const-val call_tmp[1913607]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1913609 'move' call_tmp[1913607](1913612 call _cast[39462] i[1913577]))
                      (1913615 call =[435327] byteLow[1113101] call_tmp[1913607])
                    }
                    const-val call_tmp[1913619]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1913621 'move' call_tmp[1913619](1913624 call ==[435628] cpCount[1112889] cpIdxHigh[1113023]))
                    const-val call_tmp[1913627]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1913629 'move' call_tmp[1913627] call_tmp[1913619])
                    if call_tmp[1913627]
                    {
                      const-val call_tmp[1913634]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1913636 'move' call_tmp[1913634](1913639 call _cast[39462] i[1913577]))
                      const-val call_tmp[1913641]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1913643 'move' call_tmp[1913641](1913646 call +[439636] call_tmp[1913634] nBytes[1913584]))
                      const-val call_tmp[1913649]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1913651 'move' call_tmp[1913649](1913654 call -[962226] call_tmp[1913641]))
                      (1913657 call =[435327] byteHigh[1113123] call_tmp[1913649])
                      (1913671 call chpl__autoDestroy[1461793] call_tmp[1913489])
                      (1913674 call chpl__autoDestroy[1461530] localThis[1913030])
                      break _breakLabel[1113330] _breakLabel[1113330]
                    }
                    (1913664 call +=[451315] cpCount[1112889] 1)
                  }
                  label _continueLabel[1913667]
                }
                (1913537 call chpl__autoDestroy[1461793] call_tmp[1913489])
                (1913540 call =[435327] i[1913042] j[1913290])
                ref call_tmp[1913543]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
                (1913545 'move' call_tmp[1913543](1913548 call buffLen[757886] localThis[1913030]))
                const-val call_tmp[1913550]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1913552]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1913554 'move' coerce_tmp[1913552](1913556 'deref' call_tmp[1913543]))
                (1913558 'move' call_tmp[1913550](1913561 call <[437452] i[1913042] coerce_tmp[1913552]))
                (1913564 'move' tmp[1913255] call_tmp[1913550])
                tmp[1913255]
              }
              (1913568 call chpl__autoDestroy[1461530] localThis[1913030])
              label _end_indexLen[1913570]
            }
            label _breakLabel[1113330]
            (1844472 call _freeIterator[1121493] _iterator[1113153])
            (1844474 call chpl__autoDestroy[1461793] default_arg_start[1121029])
          }
        }
        const-val call_tmp[1113333]:range(int(64),bounded,false)[1026814] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1831601]:range(int(64),bounded,false)[1026814] "temp"
        (1113338 call chpl_build_bounded_range[455137] byteLow[1113101] byteHigh[1113123] ret_tmp[1831601])
        (1831604 'move' call_tmp[1113333] ret_tmp[1831601])
        const-val call_tmp[1113341]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1113343 'move' call_tmp[1113341](1113346 call -[440416] cpIdxHigh[1113023] cpIdxLow[1112917]))
        const-val call_tmp[1113349]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1113351 'move' call_tmp[1113349](1113354 call +[949666] call_tmp[1113341]))
        const-val call_tmp[1113357]:(range(int(64),bounded,false),int(64))[1084924] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1833467]:(range(int(64),bounded,false),int(64))[1084924] "temp"
        (1113362 call _build_tuple[1084882] call_tmp[1113333] call_tmp[1113349] ret_tmp[1833467])
        (1833470 'move' call_tmp[1113357] ret_tmp[1833467])
        (1113365 'move' ret[1112153] call_tmp[1113357])
        (1844477 call chpl__autoDestroy[1534375] call_tmp[1113333])
        (1844480 call chpl__autoDestroy[1534375] intR[1112824])
        gotoReturn _end_getView[1113378] _end_getView[1113378]
      }
    }
    label _end_getView[1113378]
    (1833950 '=' _retArg[1833948] ret[1112153])
    (1833952 return _void[55])
  }
  function getView[1126280](const  ref arg x[1126282]:_ref(string)[937939], const in arg r[1126284]:range(int(64),boundedLow,false)[1087565], ref arg _retArg[1834242]:_ref((range(int(64),bounded,false),int(64)))[1086486]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1126286]:(range(int(64),bounded,false),int(64))[1084924] "dead after last mention" "RVV" "temp"
    val call_tmp[1126296]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1126309]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1126652]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1126703]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1126754]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val tmp[1126779]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val tmp[1126797]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1126799]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1126801 'move' call_tmp[1126799](1126807 call isASCII[31046] x[1126282]))
      (1126808 'move' tmp[1126797] call_tmp[1126799])
      (1126813 'move' tmp[1126779] tmp[1126797])
      const-val call_tmp[1126825]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1126827 'move' call_tmp[1126825] tmp[1126779])
      if call_tmp[1126825]
      {
        const-val call_tmp[1126834]:(range(int(64),bounded,false),int(64))[1084924] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1834248]:(range(int(64),bounded,false),int(64))[1084924] "temp"
        (1126839 call simpleCaseHelper[1126400] r[1126284] x[1126282] ret_tmp[1834248])
        (1834251 'move' call_tmp[1126834] ret_tmp[1834248])
        (1126840 'move' ret[1126286] call_tmp[1126834])
        gotoReturn _end_getView[1127511] _end_getView[1127511]
      }
      {
        const-val call_tmp[1126868]:range(int(64),bounded,false)[1026814] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1829419]:range(int(64),bounded,false)[1026814] "temp"
        (1126873 call indices[32785] x[1126282] ret_tmp[1829419])
        (1829422 'move' call_tmp[1126868] ret_tmp[1829419])
        (1844667 call chpl__autoDestroy[1534375] call_tmp[1126868])
        val call_tmp[1126940]:range(int(64),boundedLow,false)[1087565] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1126949]:range(int(64),boundedLow,false)[1087565] "dead at end of block" "maybe param" "temp"
        const-val _formal_tmp_in_x[1142168]:range(int(64),boundedLow,false)[1087565] "dead at end of block" "expr temp" "no auto destroy" "temp"
        (1142172 'move' _formal_tmp_in_x[1142168] r[1126284])
        const-val ret_tmp[1834266]:range(int(64),boundedLow,false)[1087565] "temp"
        (1142165 call _removed_cast[1127556] _formal_tmp_in_x[1142168] ret_tmp[1834266])
        (1834269 'move' call_tmp[1126949] ret_tmp[1834266])
        const-val intR[1126957]:range(int(64),boundedLow,false)[1087565] "dead at end of block" "const" "insert auto destroy"
        (1126959 'move' intR[1126957] call_tmp[1126949])
        {
          const-val call_tmp[1126972]:range(int(64),bounded,false)[1026814] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1829425]:range(int(64),bounded,false)[1026814] "temp"
          (1126977 call indices[32785] x[1126282] ret_tmp[1829425])
          (1829428 'move' call_tmp[1126972] ret_tmp[1829425])
          const-val call_tmp[1126980]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1126982 'move' call_tmp[1126980](1126988 call boundsCheck[1127621] call_tmp[1126972] intR[1126957]))
          const-val call_tmp[1126990]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1126992 'move' call_tmp[1126990](1126995 call ![7494] call_tmp[1126980]))
          const-val call_tmp[1126997]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1126999 'move' call_tmp[1126997] call_tmp[1126990])
          if call_tmp[1126997]
          {
            const-val call_tmp[1127006]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (1127008 'move' call_tmp[1127006](1127011 call size[32769] x[1126282]))
            (1127015 call halt[1128284] "range " r[1126284] " out of bounds for string with length " call_tmp[1127006])
          }
          (1844671 call chpl__autoDestroy[1534375] call_tmp[1126972])
        }
        val cpCount[1127022]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1127024 'move' cpCount[1127022] 0)
        const-val cpIdxLow[1127050]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val tmp[1127052]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[1127070]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1127072]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1127074 'move' call_tmp[1127072](1127077 call alignedLow[1142192] intR[1126957]))
        const-val call_tmp[1127080]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1127082 'move' call_tmp[1127080] call_tmp[1127072])
        const-val call_tmp[1127088]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1127090 'move' call_tmp[1127088](1127093 call >=[979976] call_tmp[1127080]))
        (1127096 'move' tmp[1127070] call_tmp[1127088])
        (1127101 'move' tmp[1127052] tmp[1127070])
        val tmp[1127113]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
        const-val tmp[1127115]:bool[10] "dead after last mention" "maybe param" "temp"
        (1127117 'move' tmp[1127115] tmp[1127052])
        if tmp[1127115]
        {
          const-val tmp[1127124]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
          const-val call_tmp[1127126]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
          (1127128 'move' call_tmp[1127126](1127131 call alignedLow[1142192] intR[1126957]))
          (1127134 'move' tmp[1127124] call_tmp[1127126])
          (1127140 'move' tmp[1127113] tmp[1127124])
        }
        {
          (1127146 'move' tmp[1127113] 0)
        }
        (1127152 'move' cpIdxLow[1127050] tmp[1127113])
        const-val cpIdxHigh[1127156]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val tmp[1127158]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[1127200]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
        ref call_tmp[1127202]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1127204 'move' call_tmp[1127202](1127207 call buffLen[757886] x[1126282]))
        const-val coerce_tmp[1142265]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1142269 'move' coerce_tmp[1142265](1142267 'deref' call_tmp[1127202]))
        (1127210 'move' tmp[1127200](1127213 call -[962226] coerce_tmp[1142265]))
        (1127216 'move' tmp[1127158] tmp[1127200])
        (1127222 'move' cpIdxHigh[1127156] tmp[1127158])
        ref call_tmp[1127226]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1127228 'move' call_tmp[1127226](1127231 call buffLen[757886] x[1126282]))
        val byteLow[1127234]:int(64)[13] "dead at end of block" "insert auto destroy"
        const-val coerce_tmp[1142275]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (1142279 'move' coerce_tmp[1142275](1142277 'deref' call_tmp[1127226]))
        (1844664 '=' byteLow[1127234] coerce_tmp[1142275])
        (1127236 'noop')
        ref call_tmp[1127240]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1127242 'move' call_tmp[1127240](1127245 call buffLen[757886] x[1126282]))
        const-val call_tmp[1127248]:int(64)[13] "dead at end of block" "maybe param" "temp"
        const-val coerce_tmp[1142283]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1142287 'move' coerce_tmp[1142283](1142285 'deref' call_tmp[1127240]))
        (1127250 'move' call_tmp[1127248](1127253 call -[962226] coerce_tmp[1142283]))
        val byteHigh[1127256]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1127258 'move' byteHigh[1127256] call_tmp[1127248])
        const-val call_tmp[1127266]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1127268 'move' call_tmp[1127266](1127271 call >=[979976] cpIdxHigh[1127156]))
        const-val call_tmp[1127274]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1127276 'move' call_tmp[1127274] call_tmp[1127266])
        if call_tmp[1127274]
        {
          {
            val _indexOfInterest[1127284]:(byteIndex,int(64))[1121233] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1127286]:_ic__indexLen__ref_string[1121305] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[1127288]:_ir__indexLen__ref_string[1121311] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val default_arg_start[1142295]:byteIndex[28170] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
            const-val ret_tmp[1834036]:byteIndex[28170] "temp"
            (1142297 call _indexLen_default_start[1121003] x[1126282] ret_tmp[1834036])
            (1834039 'move' default_arg_start[1142295] ret_tmp[1834036])
            const-val ret_tmp[1829379]:_ir__indexLen__ref_string[1121311] "temp"
            (1127296 call _indexLen[31451] x[1126282] default_arg_start[1142295] ret_tmp[1829379])
            (1829382 'move' call_tmp[1127288] ret_tmp[1829379])
            (1127297 'move' _iterator[1127286](1127300 call _getIterator[1121320] call_tmp[1127288]))
            {
              val ret[1914502]:_ir__indexLen__ref_string[1121311] "dead after last mention" "RVV" "temp"
              const-val call_tmp[1914504]:string[26] "dead at end of block" "maybe param" "temp"
              const-val ret_tmp[1914506]:string[26] "temp"
              ref this[1915174]:_ref(string)[937939] "temp"
              (1915179 'move' this[1915174](1915176 '.v' _iterator[1127286] F0_this[1998004]))
              (1914509 call localize[32886] this[1915174] ret_tmp[1914506])
              (1914512 'move' call_tmp[1914504] ret_tmp[1914506])
              val localThis[1914515]:string[26] "dead at end of block" "insert auto destroy"
              (1914517 'move' localThis[1914515] call_tmp[1914504])
              const-val call_tmp[1914520]:int(64)[13] "dead at end of block" "maybe param" "temp"
              ref start[1915181]:_ref(byteIndex)[948759] "temp"
              (1915186 'move' start[1915181](1915183 '.v' _iterator[1127286] F1_start[1998008]))
              (1914522 'move' call_tmp[1914520](1914525 call _cast[39462] start[1915181]))
              val i[1914527]:int(64)[13] "dead at end of block" "insert auto destroy"
              (1914529 'move' i[1914527] call_tmp[1914520])
              const-val call_tmp[1914532]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1914534 'move' call_tmp[1914532](1914537 call >[437672] call_tmp[1914520] 0))
              const-val call_tmp[1914540]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1914542 'move' call_tmp[1914540] call_tmp[1914532])
              if call_tmp[1914532]
              {
                val tmp[1914547]:bool[10] "dead after last mention" "temp"
                const-val tmp[1914549]:bool[10] "dead after last mention" "maybe param" "temp"
                ref call_tmp[1914551]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
                (1914553 'move' call_tmp[1914551](1914556 call buffLen[757886] localThis[1914515]))
                const-val coerce_tmp[1914558]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1914560 'move' coerce_tmp[1914558](1914562 'deref' call_tmp[1914551]))
                (1914564 'move' tmp[1914549](1914567 call <[437452] i[1914527] coerce_tmp[1914558]))
                val tmp[1914570]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[1914572]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1914574]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1914576 'move' call_tmp[1914574] tmp[1914549])
                (1914579 'move' tmp[1914572] tmp[1914549])
                if tmp[1914549]
                {
                  const-val tmp[1914584]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  ref call_tmp[1914586]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[1914588]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "temp"
                  (1914590 'move' _this_tmp_[1914588](1914593 call buff[757964] localThis[1914515]))
                  val coerce_tmp[1914595]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1914597 'move' coerce_tmp[1914595](1914599 'deref' _this_tmp_[1914588]))
                  (1914601 'move' call_tmp[1914586](1914604 call this[954091] coerce_tmp[1914595] i[1914527]))
                  const-val call_tmp[1914607]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1914609]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1914611 'move' coerce_tmp[1914609](1914613 'deref' call_tmp[1914586]))
                  (1914615 'move' call_tmp[1914607](1914618 call isInitialByte[181528] coerce_tmp[1914609]))
                  const-val call_tmp[1914620]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1914622 'move' call_tmp[1914620](1914625 call ![7494] call_tmp[1914607]))
                  (1914627 'move' tmp[1914584] call_tmp[1914620])
                  (1914630 'move' tmp[1914570] call_tmp[1914620])
                }
                {
                  (1914634 'move' tmp[1914570] 0)
                }
                (1914638 'move' tmp[1914547] tmp[1914570])
                WhileDo[1914641]
                {
                  (1914644 call +=[451315] i[1914527] 1)
                  const-val tmp[1914647]:bool[10] "dead after last mention" "maybe param" "temp"
                  ref call_tmp[1914649]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
                  (1914651 'move' call_tmp[1914649](1914654 call buffLen[757886] localThis[1914515]))
                  const-val coerce_tmp[1914656]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1914658 'move' coerce_tmp[1914656](1914660 'deref' call_tmp[1914649]))
                  (1914662 'move' tmp[1914647](1914665 call <[437452] i[1914527] coerce_tmp[1914656]))
                  val tmp[1914668]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                  const-val tmp[1914670]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[1914672]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1914674 'move' call_tmp[1914672] tmp[1914647])
                  (1914677 'move' tmp[1914670] tmp[1914647])
                  if tmp[1914647]
                  {
                    const-val tmp[1914682]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    ref call_tmp[1914684]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
                    ref _this_tmp_[1914686]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "temp"
                    (1914688 'move' _this_tmp_[1914686](1914691 call buff[757964] localThis[1914515]))
                    val coerce_tmp[1914693]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1914695 'move' coerce_tmp[1914693](1914697 'deref' _this_tmp_[1914686]))
                    (1914699 'move' call_tmp[1914684](1914702 call this[954091] coerce_tmp[1914693] i[1914527]))
                    const-val call_tmp[1914705]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1914707]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1914709 'move' coerce_tmp[1914707](1914711 'deref' call_tmp[1914684]))
                    (1914713 'move' call_tmp[1914705](1914716 call isInitialByte[181528] coerce_tmp[1914707]))
                    const-val call_tmp[1914718]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1914720 'move' call_tmp[1914718](1914723 call ![7494] call_tmp[1914705]))
                    (1914725 'move' tmp[1914682] call_tmp[1914718])
                    (1914728 'move' tmp[1914668] call_tmp[1914718])
                  }
                  {
                    (1914732 'move' tmp[1914668] 0)
                  }
                  (1914736 'move' tmp[1914547] tmp[1914668])
                  tmp[1914547]
                }
              }
              val tmp[1914740]:bool[10] "dead after last mention" "temp"
              ref call_tmp[1914742]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
              (1914744 'move' call_tmp[1914742](1914747 call buffLen[757886] localThis[1914515]))
              const-val call_tmp[1914749]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1914751]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1914753 'move' coerce_tmp[1914751](1914755 'deref' call_tmp[1914742]))
              (1914757 'move' call_tmp[1914749](1914760 call <[437452] i[1914527] coerce_tmp[1914751]))
              (1914763 'move' tmp[1914740] call_tmp[1914749])
              WhileDo[1914766]
              {
                const-val call_tmp[1914768]:int(64)[13] "dead at end of block" "maybe param" "temp"
                (1914770 'move' call_tmp[1914768](1914773 call +[949666] i[1914527]))
                val j[1914775]:int(64)[13] "dead at end of block" "insert auto destroy"
                (1914777 'move' j[1914775] call_tmp[1914768])
                val tmp[1914780]:bool[10] "dead after last mention" "temp"
                const-val tmp[1914782]:bool[10] "dead after last mention" "maybe param" "temp"
                ref call_tmp[1914784]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
                (1914786 'move' call_tmp[1914784](1914789 call buffLen[757886] localThis[1914515]))
                const-val coerce_tmp[1914791]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1914793 'move' coerce_tmp[1914791](1914795 'deref' call_tmp[1914784]))
                (1914797 'move' tmp[1914782](1914800 call <[437452] call_tmp[1914768] coerce_tmp[1914791]))
                val tmp[1914803]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[1914805]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1914807]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1914809 'move' call_tmp[1914807] tmp[1914782])
                (1914812 'move' tmp[1914805] tmp[1914782])
                if tmp[1914782]
                {
                  const-val tmp[1914817]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  ref call_tmp[1914819]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[1914821]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "temp"
                  (1914823 'move' _this_tmp_[1914821](1914826 call buff[757964] localThis[1914515]))
                  val coerce_tmp[1914828]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1914830 'move' coerce_tmp[1914828](1914832 'deref' _this_tmp_[1914821]))
                  (1914834 'move' call_tmp[1914819](1914837 call this[954091] coerce_tmp[1914828] j[1914775]))
                  const-val call_tmp[1914840]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1914842]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1914844 'move' coerce_tmp[1914842](1914846 'deref' call_tmp[1914819]))
                  (1914848 'move' call_tmp[1914840](1914851 call isInitialByte[181528] coerce_tmp[1914842]))
                  const-val call_tmp[1914853]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1914855 'move' call_tmp[1914853](1914858 call ![7494] call_tmp[1914840]))
                  (1914860 'move' tmp[1914817] call_tmp[1914853])
                  (1914863 'move' tmp[1914803] call_tmp[1914853])
                }
                {
                  (1914867 'move' tmp[1914803] 0)
                }
                (1914871 'move' tmp[1914780] tmp[1914803])
                WhileDo[1914874]
                {
                  (1914877 call +=[451315] j[1914775] 1)
                  const-val tmp[1914880]:bool[10] "dead after last mention" "maybe param" "temp"
                  ref call_tmp[1914882]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
                  (1914884 'move' call_tmp[1914882](1914887 call buffLen[757886] localThis[1914515]))
                  const-val coerce_tmp[1914889]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1914891 'move' coerce_tmp[1914889](1914893 'deref' call_tmp[1914882]))
                  (1914895 'move' tmp[1914880](1914898 call <[437452] j[1914775] coerce_tmp[1914889]))
                  val tmp[1914901]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                  const-val tmp[1914903]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[1914905]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1914907 'move' call_tmp[1914905] tmp[1914880])
                  (1914910 'move' tmp[1914903] tmp[1914880])
                  if tmp[1914880]
                  {
                    const-val tmp[1914915]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    ref call_tmp[1914917]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
                    ref _this_tmp_[1914919]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "temp"
                    (1914921 'move' _this_tmp_[1914919](1914924 call buff[757964] localThis[1914515]))
                    val coerce_tmp[1914926]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1914928 'move' coerce_tmp[1914926](1914930 'deref' _this_tmp_[1914919]))
                    (1914932 'move' call_tmp[1914917](1914935 call this[954091] coerce_tmp[1914926] j[1914775]))
                    const-val call_tmp[1914938]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1914940]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1914942 'move' coerce_tmp[1914940](1914944 'deref' call_tmp[1914917]))
                    (1914946 'move' call_tmp[1914938](1914949 call isInitialByte[181528] coerce_tmp[1914940]))
                    const-val call_tmp[1914951]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1914953 'move' call_tmp[1914951](1914956 call ![7494] call_tmp[1914938]))
                    (1914958 'move' tmp[1914915] call_tmp[1914951])
                    (1914961 'move' tmp[1914901] call_tmp[1914951])
                  }
                  {
                    (1914965 'move' tmp[1914901] 0)
                  }
                  (1914969 'move' tmp[1914780] tmp[1914901])
                  tmp[1914780]
                }
                const-val yret[1914972]:(byteIndex,int(64))[1121233] "dead after last mention" "YVV" "temp"
                const-val call_tmp[1914974]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1914976]:byteIndex[28170] "temp"
                (1914979 call _cast[39483] i[1914527] ret_tmp[1914976])
                (1914982 'move' call_tmp[1914974] ret_tmp[1914976])
                const-val call_tmp[1914985]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (1914987 'move' call_tmp[1914985](1914990 call -[440416] j[1914775] i[1914527]))
                const-val call_tmp[1914993]:(byteIndex,int(64))[1121233] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1914995]:(byteIndex,int(64))[1121233] "temp"
                (1914998 call _build_tuple[1121191] call_tmp[1914974] call_tmp[1914985] ret_tmp[1914995])
                (1915002 'move' call_tmp[1914993] ret_tmp[1914995])
                (1915005 'move' yret[1914972] call_tmp[1914993])
                const-val _yieldedIndex[1915059]:(byteIndex,int(64))[1121233] "temp"
                (1915172 'move' _yieldedIndex[1915059] call_tmp[1914993])
                {
                  1
                  ref i[1915062]:_ref(byteIndex)[948759] "index var" "insert auto destroy"
                  (1915064 'move' i[1915062](1915066 '.v' _yieldedIndex[1915059] x0[1121229]))
                  const-val nBytes[1915069]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1915071 'move' nBytes[1915069](1915073 '.v' _yieldedIndex[1915059] x1[1121231]))
                  {
                    const-val call_tmp[1915077]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1915079 'move' call_tmp[1915077](1915082 call ==[435628] cpCount[1127022] cpIdxLow[1127050]))
                    const-val call_tmp[1915085]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1915087 'move' call_tmp[1915085] call_tmp[1915077])
                    if call_tmp[1915085]
                    {
                      const-val call_tmp[1915092]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1915094 'move' call_tmp[1915092](1915097 call _cast[39462] i[1915062]))
                      (1915100 call =[435327] byteLow[1127234] call_tmp[1915092])
                      {
                        (1915159 call chpl__autoDestroy[1461793] call_tmp[1914974])
                        (1915162 call chpl__autoDestroy[1461530] localThis[1914515])
                        break _breakLabel[1127463] _breakLabel[1127463]
                      }
                    }
                    const-val call_tmp[1915107]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1915109 'move' call_tmp[1915107](1915112 call ==[435628] cpCount[1127022] cpIdxHigh[1127156]))
                    const-val call_tmp[1915115]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1915117 'move' call_tmp[1915115] call_tmp[1915107])
                    if call_tmp[1915115]
                    {
                      const-val call_tmp[1915122]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1915124 'move' call_tmp[1915122](1915127 call _cast[39462] i[1915062]))
                      const-val call_tmp[1915129]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1915131 'move' call_tmp[1915129](1915134 call +[439636] call_tmp[1915122] nBytes[1915069]))
                      const-val call_tmp[1915137]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1915139 'move' call_tmp[1915137](1915142 call -[962226] call_tmp[1915129]))
                      (1915145 call =[435327] byteHigh[1127256] call_tmp[1915137])
                      (1915166 call chpl__autoDestroy[1461793] call_tmp[1914974])
                      (1915169 call chpl__autoDestroy[1461530] localThis[1914515])
                      break _breakLabel[1127463] _breakLabel[1127463]
                    }
                    (1915152 call +=[451315] cpCount[1127022] 1)
                  }
                  label _continueLabel[1915155]
                }
                (1915022 call chpl__autoDestroy[1461793] call_tmp[1914974])
                (1915025 call =[435327] i[1914527] j[1914775])
                ref call_tmp[1915028]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
                (1915030 'move' call_tmp[1915028](1915033 call buffLen[757886] localThis[1914515]))
                const-val call_tmp[1915035]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1915037]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1915039 'move' coerce_tmp[1915037](1915041 'deref' call_tmp[1915028]))
                (1915043 'move' call_tmp[1915035](1915046 call <[437452] i[1914527] coerce_tmp[1915037]))
                (1915049 'move' tmp[1914740] call_tmp[1915035])
                tmp[1914740]
              }
              (1915053 call chpl__autoDestroy[1461530] localThis[1914515])
              label _end_indexLen[1915055]
            }
            label _breakLabel[1127463]
            (1844677 call _freeIterator[1121493] _iterator[1127286])
            (1844679 call chpl__autoDestroy[1461793] default_arg_start[1142295])
          }
        }
        const-val call_tmp[1127466]:range(int(64),bounded,false)[1026814] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1831613]:range(int(64),bounded,false)[1026814] "temp"
        (1127471 call chpl_build_bounded_range[455137] byteLow[1127234] byteHigh[1127256] ret_tmp[1831613])
        (1831616 'move' call_tmp[1127466] ret_tmp[1831613])
        const-val call_tmp[1127474]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1127476 'move' call_tmp[1127474](1127479 call -[440416] cpIdxHigh[1127156] cpIdxLow[1127050]))
        const-val call_tmp[1127482]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1127484 'move' call_tmp[1127482](1127487 call +[949666] call_tmp[1127474]))
        const-val call_tmp[1127490]:(range(int(64),bounded,false),int(64))[1084924] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1833479]:(range(int(64),bounded,false),int(64))[1084924] "temp"
        (1127495 call _build_tuple[1084882] call_tmp[1127466] call_tmp[1127482] ret_tmp[1833479])
        (1833482 'move' call_tmp[1127490] ret_tmp[1833479])
        (1127498 'move' ret[1126286] call_tmp[1127490])
        (1844682 call chpl__autoDestroy[1534375] call_tmp[1127466])
        (1844685 call chpl__autoDestroy[1540744] intR[1126957])
        gotoReturn _end_getView[1127511] _end_getView[1127511]
      }
    }
    label _end_getView[1127511]
    (1834244 '=' _retArg[1834242] ret[1126286])
    (1834246 return _void[55])
  }
  function getView[1144441](const  ref arg x[1144443]:_ref(string)[937939], const in arg r[1144445]:range(byteIndex,boundedLow,false)[1143403], ref arg _retArg[1834458]:_ref((range(int(64),bounded,false),int(64)))[1086486]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val ret[1144447]:(range(int(64),bounded,false),int(64))[1084924] "dead after last mention" "RVV" "temp"
    val call_tmp[1144457]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1144470]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1144813]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1144864]:byteIndex[28170] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      const-val call_tmp[1144900]:(range(int(64),bounded,false),int(64))[1084924] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1834464]:(range(int(64),bounded,false),int(64))[1084924] "temp"
      (1144905 call simpleCaseHelper[1144561] r[1144445] x[1144443] ret_tmp[1834464])
      (1834467 'move' call_tmp[1144900] ret_tmp[1834464])
      (1144906 'move' ret[1144447] call_tmp[1144900])
      gotoReturn _end_getView[1145672] _end_getView[1145672]
    }
    label _end_getView[1145672]
    (1834460 '=' _retArg[1834458] ret[1144447])
    (1834462 return _void[55])
  }
  function getView[1185957](const  ref arg x[1185959]:_ref(string)[937939], const in arg r[1185961]:range(byteIndex,boundedHigh,false)[1184919], ref arg _retArg[1834780]:_ref((range(int(64),bounded,false),int(64)))[1086486]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val ret[1185963]:(range(int(64),bounded,false),int(64))[1084924] "dead after last mention" "RVV" "temp"
    val call_tmp[1185973]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1185986]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1186329]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1186380]:byteIndex[28170] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      const-val call_tmp[1186416]:(range(int(64),bounded,false),int(64))[1084924] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1834786]:(range(int(64),bounded,false),int(64))[1084924] "temp"
      (1186421 call simpleCaseHelper[1186077] r[1185961] x[1185959] ret_tmp[1834786])
      (1834789 'move' call_tmp[1186416] ret_tmp[1834786])
      (1186422 'move' ret[1185963] call_tmp[1186416])
      gotoReturn _end_getView[1187188] _end_getView[1187188]
    }
    label _end_getView[1187188]
    (1834782 '=' _retArg[1834780] ret[1185963])
    (1834784 return _void[55])
  }
  function getSlice[1111402](const  ref arg x[1111404]:_ref(string)[937939], const in arg r[1111406]:range(int(64),bounded,false)[1026814], ref arg _retArg[1833934]:_ref(string)[937939]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1111408]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[1111418]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1111429]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1111431 'move' call_tmp[1111429](1111437 call isEmpty[35061] x[1111404]))
    const-val call_tmp[1111438]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1111440 'move' call_tmp[1111438] call_tmp[1111429])
    if call_tmp[1111438]
    {
      const-val ret[1111447]:string[26] "dead at end of block" "insert auto destroy"
      val call_tmp[1111449]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1121957 call init[30760] ret[1111447])
      (1111459 'move' ret[1111408] ret[1111447])
      gotoReturn _end_getSlice[1112075] _end_getSlice[1112075]
    }
    const-val call_tmp[1111468]:(range(int(64),bounded,false),int(64))[1084924] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1833942]:(range(int(64),bounded,false),int(64))[1084924] "temp"
    (1111473 call getView[1112147] x[1111404] r[1111406] ret_tmp[1833942])
    (1833945 'move' call_tmp[1111468] ret_tmp[1833942])
    const-val tmp[1111476]:(range(int(64),bounded,false),int(64))[1084924] "dead at end of block" "const" "insert auto destroy" "temp"
    (1111478 'move' tmp[1111476] call_tmp[1111468])
    1
    ref call_tmp[1111486]:_ref(range(int(64),bounded,false))[1026858] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1111488 'move' call_tmp[1111486](1121788 '.' tmp[1111476] x0[1084920]))
    const-val r2[1111493]:range(int(64),bounded,false)[1026814] "dead at end of block" "const" "insert auto destroy"
    (1111495 'move' r2[1111493] call_tmp[1111486])
    ref call_tmp[1111498]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1111500 'move' call_tmp[1111498](1121794 '.' tmp[1111476] x1[1084922]))
    const-val numChars[1111505]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1121799]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1121803 'move' coerce_tmp[1121799](1121801 'deref' call_tmp[1111498]))
    (1844420 '=' numChars[1111505] coerce_tmp[1121799])
    (1111507 'noop')
    const-val call_tmp[1111511]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1111513 'move' call_tmp[1111511](1111516 call size[1035789] r2[1111493]))
    const-val call_tmp[1111519]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1111521 'move' call_tmp[1111519](1111524 call <=[437012] call_tmp[1111511] 0))
    const-val call_tmp[1111527]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1111529 'move' call_tmp[1111527] call_tmp[1111519])
    if call_tmp[1111527]
    {
      const-val ret[1111536]:string[26] "dead at end of block" "insert auto destroy"
      val call_tmp[1111538]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1121962 call init[30760] ret[1111536])
      (1111548 'move' ret[1111408] ret[1111536])
      (1844429 call chpl__autoDestroy[1534375] r2[1111493])
      (1844432 call chpl__autoDestroy[1540699] tmp[1111476])
      gotoReturn _end_getSlice[1112075] _end_getSlice[1112075]
    }
    val buff[1111557]:c_ptr(uint(8))[937423] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1111559]:c_ptr(uint(8))[937423] "dead after last mention" "maybe param" "temp" "type variable"
    const-val buffSize[1111568]:int(64)[13] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1111570]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    const-val call_tmp[1111579]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1111581 'move' call_tmp[1111579](1111584 call high[1028619] r2[1111493]))
    const-val call_tmp[1111587]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1111589 'move' call_tmp[1111587](1111592 call low[1028411] r2[1111493]))
    const-val call_tmp[1111595]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1111597 'move' call_tmp[1111595](1111600 call -[440416] call_tmp[1111579] call_tmp[1111587]))
    const-val call_tmp[1111603]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1111605 'move' call_tmp[1111603](1111608 call +[949666] call_tmp[1111595]))
    const-val copyLen[1111611]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1111613 'move' copyLen[1111611] call_tmp[1111603])
    ref call_tmp[1111617]:_ref(c_ptr(uint(8)))[937432] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1111619 'move' call_tmp[1111617](1111622 call buff[757964] x[1111404]))
    const-val call_tmp[1111625]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1111627 'move' call_tmp[1111625](1111630 call low[1028411] r2[1111493]))
    ref call_tmp[1111633]:_ref(int(32))[936626] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1111635 'move' call_tmp[1111633](1111638 call locale_id[758042] x[1111404]))
    const-val call_tmp[1111641]:(c_ptr(uint(8)),int(64))[955208] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1121818]:c_ptr(uint(8))[937423] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1121822 'move' coerce_tmp[1121818](1121820 'deref' call_tmp[1111617]))
    const-val coerce_tmp[1121824]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1121828 'move' coerce_tmp[1121824](1121826 'deref' call_tmp[1111633]))
    const-val ret_tmp[1831257]:(c_ptr(uint(8)),int(64))[955208] "temp"
    (1111646 call bufferCopy[172928] coerce_tmp[1121818] call_tmp[1111625] copyLen[1111611] coerce_tmp[1121824] ret_tmp[1831257])
    (1831260 'move' call_tmp[1111641] ret_tmp[1831257])
    const-val tmp[1111655]:(c_ptr(uint(8)),int(64))[955208] "dead at end of block" "insert auto destroy" "temp"
    (1111657 'move' tmp[1111655] call_tmp[1111641])
    1
    ref call_tmp[1111665]:_ref(c_ptr(uint(8)))[937432] "dead at end of block" "maybe param" "temp"
    (1111667 'move' call_tmp[1111665](1121862 '.' tmp[1111655] x0[955204]))
    val copyBuf[1111672]:c_ptr(uint(8))[937423] "dead at end of block" "insert auto destroy"
    val coerce_tmp[1121867]:c_ptr(uint(8))[937423] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1121871 'move' coerce_tmp[1121867](1121869 'deref' call_tmp[1111665]))
    (1844423 '=' copyBuf[1111672] coerce_tmp[1121867])
    (1111674 'noop')
    ref call_tmp[1111677]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
    (1111679 'move' call_tmp[1111677](1121876 '.' tmp[1111655] x1[955206]))
    const-val copySize[1111684]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[1121881]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1121885 'move' coerce_tmp[1121881](1121883 'deref' call_tmp[1111677]))
    (1844426 '=' copySize[1111684] coerce_tmp[1121881])
    (1111686 'noop')
    {
      (1111715 'move' buff[1111557] copyBuf[1111672])
      (1111722 'move' buffSize[1111568] copySize[1111684])
    }
    const-val call_tmp[1111924]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1111926 'move' call_tmp[1111924](1111929 call size[1035789] r2[1111493]))
    const-val buffLen[1111932]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1111934 'move' buffLen[1111932] call_tmp[1111924])
    ref call_tmp[1111941]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
    (1111943 'move' call_tmp[1111941](1111946 call this[954091] buff[1111557] buffLen[1111932]))
    const-val coerce_tmp[1121921]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1121927 'move' coerce_tmp[1121921](1121923 'cast' uint(8)[100] 0))
    (1111949 call =[435348] call_tmp[1111941] coerce_tmp[1121921])
    val call_tmp[1111955]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val numCodepoints[1111978]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1111980 'move' numCodepoints[1111978] numChars[1111505])
      const-val call_tmp[1111992]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1111994 'move' call_tmp[1111992](1111997 call ==[435628] numCodepoints[1111978] -1))
      const-val call_tmp[1112000]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1112002 'move' call_tmp[1112000] call_tmp[1111992])
      if call_tmp[1112000]
      {
        const-val call_tmp[1112009]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1112011 'move' call_tmp[1112009](1112014 call countNumCodepoints[181390] buff[1111557] buffLen[1111932]))
        (1112018 call =[435327] numCodepoints[1111978] call_tmp[1112009])
      }
      const-val call_tmp[1112026]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1829201]:string[26] "temp"
      (1112031 call chpl_createStringWithOwnedBufferNV[30673] buff[1111557] buffLen[1111932] buffSize[1111568] numCodepoints[1111978] ret_tmp[1829201])
      (1829204 'move' call_tmp[1112026] ret_tmp[1829201])
      (1112040 'move' ret[1111408] call_tmp[1112026])
      (1844435 call chpl__autoDestroy[1465141] tmp[1111655])
      (1844438 call chpl__autoDestroy[1534375] r2[1111493])
      (1844441 call chpl__autoDestroy[1540699] tmp[1111476])
      gotoReturn _end_getSlice[1112075] _end_getSlice[1112075]
    }
    (1844444 call chpl__autoDestroy[1465141] tmp[1111655])
    (1844447 call chpl__autoDestroy[1534375] r2[1111493])
    (1844450 call chpl__autoDestroy[1540699] tmp[1111476])
    label _end_getSlice[1112075]
    (1833936 '=' _retArg[1833934] ret[1111408])
    (1833940 return _void[55])
  }
  function getSlice[1123536](const  ref arg x[1123538]:_ref(string)[937939], const in arg r[1123540]:range(byteIndex,bounded,false)[1025792], ref arg _retArg[1834168]:_ref(string)[937939]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1123542]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[1123552]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1123563]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1123565 'move' call_tmp[1123563](1123571 call isEmpty[35061] x[1123538]))
    const-val call_tmp[1123572]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1123574 'move' call_tmp[1123572] call_tmp[1123563])
    if call_tmp[1123572]
    {
      const-val ret[1123581]:string[26] "dead at end of block" "insert auto destroy"
      val call_tmp[1123583]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1124371 call init[30760] ret[1123581])
      (1123593 'move' ret[1123542] ret[1123581])
      gotoReturn _end_getSlice[1124209] _end_getSlice[1124209]
    }
    const-val call_tmp[1123602]:(range(int(64),bounded,false),int(64))[1084924] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1832701]:(range(int(64),bounded,false),int(64))[1084924] "temp"
    (1123607 call getView[1031154] x[1123538] r[1123540] ret_tmp[1832701])
    (1832704 'move' call_tmp[1123602] ret_tmp[1832701])
    const-val tmp[1123610]:(range(int(64),bounded,false),int(64))[1084924] "dead at end of block" "const" "insert auto destroy" "temp"
    (1123612 'move' tmp[1123610] call_tmp[1123602])
    1
    ref call_tmp[1123620]:_ref(range(int(64),bounded,false))[1026858] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1123622 'move' call_tmp[1123620](1124226 '.' tmp[1123610] x0[1084920]))
    const-val r2[1123627]:range(int(64),bounded,false)[1026814] "dead at end of block" "const" "insert auto destroy"
    (1123629 'move' r2[1123627] call_tmp[1123620])
    ref call_tmp[1123632]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1123634 'move' call_tmp[1123632](1124232 '.' tmp[1123610] x1[1084922]))
    const-val numChars[1123639]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1124237]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1124241 'move' coerce_tmp[1124237](1124239 'deref' call_tmp[1123632]))
    (1844536 '=' numChars[1123639] coerce_tmp[1124237])
    (1123641 'noop')
    const-val call_tmp[1123645]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1123647 'move' call_tmp[1123645](1123650 call size[1035789] r2[1123627]))
    const-val call_tmp[1123653]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1123655 'move' call_tmp[1123653](1123658 call <=[437012] call_tmp[1123645] 0))
    const-val call_tmp[1123661]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1123663 'move' call_tmp[1123661] call_tmp[1123653])
    if call_tmp[1123661]
    {
      const-val ret[1123670]:string[26] "dead at end of block" "insert auto destroy"
      val call_tmp[1123672]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1124376 call init[30760] ret[1123670])
      (1123682 'move' ret[1123542] ret[1123670])
      (1844545 call chpl__autoDestroy[1534375] r2[1123627])
      (1844548 call chpl__autoDestroy[1540699] tmp[1123610])
      gotoReturn _end_getSlice[1124209] _end_getSlice[1124209]
    }
    val buff[1123691]:c_ptr(uint(8))[937423] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1123693]:c_ptr(uint(8))[937423] "dead after last mention" "maybe param" "temp" "type variable"
    const-val buffSize[1123702]:int(64)[13] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1123704]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    const-val call_tmp[1123713]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1123715 'move' call_tmp[1123713](1123718 call high[1028619] r2[1123627]))
    const-val call_tmp[1123721]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1123723 'move' call_tmp[1123721](1123726 call low[1028411] r2[1123627]))
    const-val call_tmp[1123729]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1123731 'move' call_tmp[1123729](1123734 call -[440416] call_tmp[1123713] call_tmp[1123721]))
    const-val call_tmp[1123737]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1123739 'move' call_tmp[1123737](1123742 call +[949666] call_tmp[1123729]))
    const-val copyLen[1123745]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1123747 'move' copyLen[1123745] call_tmp[1123737])
    ref call_tmp[1123751]:_ref(c_ptr(uint(8)))[937432] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1123753 'move' call_tmp[1123751](1123756 call buff[757964] x[1123538]))
    const-val call_tmp[1123759]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1123761 'move' call_tmp[1123759](1123764 call low[1028411] r2[1123627]))
    ref call_tmp[1123767]:_ref(int(32))[936626] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1123769 'move' call_tmp[1123767](1123772 call locale_id[758042] x[1123538]))
    const-val call_tmp[1123775]:(c_ptr(uint(8)),int(64))[955208] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1124256]:c_ptr(uint(8))[937423] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1124260 'move' coerce_tmp[1124256](1124258 'deref' call_tmp[1123751]))
    const-val coerce_tmp[1124262]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1124266 'move' coerce_tmp[1124262](1124264 'deref' call_tmp[1123767]))
    const-val ret_tmp[1831263]:(c_ptr(uint(8)),int(64))[955208] "temp"
    (1123780 call bufferCopy[172928] coerce_tmp[1124256] call_tmp[1123759] copyLen[1123745] coerce_tmp[1124262] ret_tmp[1831263])
    (1831266 'move' call_tmp[1123775] ret_tmp[1831263])
    const-val tmp[1123789]:(c_ptr(uint(8)),int(64))[955208] "dead at end of block" "insert auto destroy" "temp"
    (1123791 'move' tmp[1123789] call_tmp[1123775])
    1
    ref call_tmp[1123799]:_ref(c_ptr(uint(8)))[937432] "dead at end of block" "maybe param" "temp"
    (1123801 'move' call_tmp[1123799](1124276 '.' tmp[1123789] x0[955204]))
    val copyBuf[1123806]:c_ptr(uint(8))[937423] "dead at end of block" "insert auto destroy"
    val coerce_tmp[1124281]:c_ptr(uint(8))[937423] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1124285 'move' coerce_tmp[1124281](1124283 'deref' call_tmp[1123799]))
    (1844539 '=' copyBuf[1123806] coerce_tmp[1124281])
    (1123808 'noop')
    ref call_tmp[1123811]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
    (1123813 'move' call_tmp[1123811](1124290 '.' tmp[1123789] x1[955206]))
    const-val copySize[1123818]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[1124295]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1124299 'move' coerce_tmp[1124295](1124297 'deref' call_tmp[1123811]))
    (1844542 '=' copySize[1123818] coerce_tmp[1124295])
    (1123820 'noop')
    {
      (1123849 'move' buff[1123691] copyBuf[1123806])
      (1123856 'move' buffSize[1123702] copySize[1123818])
    }
    const-val call_tmp[1124058]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1124060 'move' call_tmp[1124058](1124063 call size[1035789] r2[1123627]))
    const-val buffLen[1124066]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1124068 'move' buffLen[1124066] call_tmp[1124058])
    ref call_tmp[1124075]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
    (1124077 'move' call_tmp[1124075](1124080 call this[954091] buff[1123691] buffLen[1124066]))
    const-val coerce_tmp[1124335]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1124341 'move' coerce_tmp[1124335](1124337 'cast' uint(8)[100] 0))
    (1124083 call =[435348] call_tmp[1124075] coerce_tmp[1124335])
    val call_tmp[1124089]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val numCodepoints[1124112]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1124114 'move' numCodepoints[1124112] numChars[1123639])
      const-val call_tmp[1124126]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1124128 'move' call_tmp[1124126](1124131 call ==[435628] numCodepoints[1124112] -1))
      const-val call_tmp[1124134]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1124136 'move' call_tmp[1124134] call_tmp[1124126])
      if call_tmp[1124134]
      {
        const-val call_tmp[1124143]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1124145 'move' call_tmp[1124143](1124148 call countNumCodepoints[181390] buff[1123691] buffLen[1124066]))
        (1124152 call =[435327] numCodepoints[1124112] call_tmp[1124143])
      }
      const-val call_tmp[1124160]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1829207]:string[26] "temp"
      (1124165 call chpl_createStringWithOwnedBufferNV[30673] buff[1123691] buffLen[1124066] buffSize[1123702] numCodepoints[1124112] ret_tmp[1829207])
      (1829210 'move' call_tmp[1124160] ret_tmp[1829207])
      (1124174 'move' ret[1123542] call_tmp[1124160])
      (1844551 call chpl__autoDestroy[1465141] tmp[1123789])
      (1844554 call chpl__autoDestroy[1534375] r2[1123627])
      (1844557 call chpl__autoDestroy[1540699] tmp[1123610])
      gotoReturn _end_getSlice[1124209] _end_getSlice[1124209]
    }
    (1844560 call chpl__autoDestroy[1465141] tmp[1123789])
    (1844563 call chpl__autoDestroy[1534375] r2[1123627])
    (1844566 call chpl__autoDestroy[1540699] tmp[1123610])
    label _end_getSlice[1124209]
    (1834170 '=' _retArg[1834168] ret[1123542])
    (1834174 return _void[55])
  }
  function getSlice[1125598](const  ref arg x[1125600]:_ref(string)[937939], const in arg r[1125602]:range(int(64),boundedLow,false)[1087565], ref arg _retArg[1834228]:_ref(string)[937939]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1125604]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[1125614]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1125625]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1125627 'move' call_tmp[1125625](1125633 call isEmpty[35061] x[1125600]))
    const-val call_tmp[1125634]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1125636 'move' call_tmp[1125634] call_tmp[1125625])
    if call_tmp[1125634]
    {
      const-val ret[1125643]:string[26] "dead at end of block" "insert auto destroy"
      val call_tmp[1125645]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1142491 call init[30760] ret[1125643])
      (1125655 'move' ret[1125604] ret[1125643])
      gotoReturn _end_getSlice[1126271] _end_getSlice[1126271]
    }
    const-val call_tmp[1125664]:(range(int(64),bounded,false),int(64))[1084924] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1834236]:(range(int(64),bounded,false),int(64))[1084924] "temp"
    (1125669 call getView[1126280] x[1125600] r[1125602] ret_tmp[1834236])
    (1834239 'move' call_tmp[1125664] ret_tmp[1834236])
    const-val tmp[1125672]:(range(int(64),bounded,false),int(64))[1084924] "dead at end of block" "const" "insert auto destroy" "temp"
    (1125674 'move' tmp[1125672] call_tmp[1125664])
    1
    ref call_tmp[1125682]:_ref(range(int(64),bounded,false))[1026858] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1125684 'move' call_tmp[1125682](1142346 '.' tmp[1125672] x0[1084920]))
    const-val r2[1125689]:range(int(64),bounded,false)[1026814] "dead at end of block" "const" "insert auto destroy"
    (1125691 'move' r2[1125689] call_tmp[1125682])
    ref call_tmp[1125694]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1125696 'move' call_tmp[1125694](1142352 '.' tmp[1125672] x1[1084922]))
    const-val numChars[1125701]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1142357]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1142361 'move' coerce_tmp[1142357](1142359 'deref' call_tmp[1125694]))
    (1844631 '=' numChars[1125701] coerce_tmp[1142357])
    (1125703 'noop')
    const-val call_tmp[1125707]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1125709 'move' call_tmp[1125707](1125712 call size[1035789] r2[1125689]))
    const-val call_tmp[1125715]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1125717 'move' call_tmp[1125715](1125720 call <=[437012] call_tmp[1125707] 0))
    const-val call_tmp[1125723]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1125725 'move' call_tmp[1125723] call_tmp[1125715])
    if call_tmp[1125723]
    {
      const-val ret[1125732]:string[26] "dead at end of block" "insert auto destroy"
      val call_tmp[1125734]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1142496 call init[30760] ret[1125732])
      (1125744 'move' ret[1125604] ret[1125732])
      (1844640 call chpl__autoDestroy[1534375] r2[1125689])
      (1844643 call chpl__autoDestroy[1540699] tmp[1125672])
      gotoReturn _end_getSlice[1126271] _end_getSlice[1126271]
    }
    val buff[1125753]:c_ptr(uint(8))[937423] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1125755]:c_ptr(uint(8))[937423] "dead after last mention" "maybe param" "temp" "type variable"
    const-val buffSize[1125764]:int(64)[13] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1125766]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    const-val call_tmp[1125775]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1125777 'move' call_tmp[1125775](1125780 call high[1028619] r2[1125689]))
    const-val call_tmp[1125783]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1125785 'move' call_tmp[1125783](1125788 call low[1028411] r2[1125689]))
    const-val call_tmp[1125791]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1125793 'move' call_tmp[1125791](1125796 call -[440416] call_tmp[1125775] call_tmp[1125783]))
    const-val call_tmp[1125799]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1125801 'move' call_tmp[1125799](1125804 call +[949666] call_tmp[1125791]))
    const-val copyLen[1125807]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1125809 'move' copyLen[1125807] call_tmp[1125799])
    ref call_tmp[1125813]:_ref(c_ptr(uint(8)))[937432] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1125815 'move' call_tmp[1125813](1125818 call buff[757964] x[1125600]))
    const-val call_tmp[1125821]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1125823 'move' call_tmp[1125821](1125826 call low[1028411] r2[1125689]))
    ref call_tmp[1125829]:_ref(int(32))[936626] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1125831 'move' call_tmp[1125829](1125834 call locale_id[758042] x[1125600]))
    const-val call_tmp[1125837]:(c_ptr(uint(8)),int(64))[955208] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1142376]:c_ptr(uint(8))[937423] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1142380 'move' coerce_tmp[1142376](1142378 'deref' call_tmp[1125813]))
    const-val coerce_tmp[1142382]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1142386 'move' coerce_tmp[1142382](1142384 'deref' call_tmp[1125829]))
    const-val ret_tmp[1831269]:(c_ptr(uint(8)),int(64))[955208] "temp"
    (1125842 call bufferCopy[172928] coerce_tmp[1142376] call_tmp[1125821] copyLen[1125807] coerce_tmp[1142382] ret_tmp[1831269])
    (1831272 'move' call_tmp[1125837] ret_tmp[1831269])
    const-val tmp[1125851]:(c_ptr(uint(8)),int(64))[955208] "dead at end of block" "insert auto destroy" "temp"
    (1125853 'move' tmp[1125851] call_tmp[1125837])
    1
    ref call_tmp[1125861]:_ref(c_ptr(uint(8)))[937432] "dead at end of block" "maybe param" "temp"
    (1125863 'move' call_tmp[1125861](1142396 '.' tmp[1125851] x0[955204]))
    val copyBuf[1125868]:c_ptr(uint(8))[937423] "dead at end of block" "insert auto destroy"
    val coerce_tmp[1142401]:c_ptr(uint(8))[937423] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1142405 'move' coerce_tmp[1142401](1142403 'deref' call_tmp[1125861]))
    (1844634 '=' copyBuf[1125868] coerce_tmp[1142401])
    (1125870 'noop')
    ref call_tmp[1125873]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
    (1125875 'move' call_tmp[1125873](1142410 '.' tmp[1125851] x1[955206]))
    const-val copySize[1125880]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[1142415]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1142419 'move' coerce_tmp[1142415](1142417 'deref' call_tmp[1125873]))
    (1844637 '=' copySize[1125880] coerce_tmp[1142415])
    (1125882 'noop')
    {
      (1125911 'move' buff[1125753] copyBuf[1125868])
      (1125918 'move' buffSize[1125764] copySize[1125880])
    }
    const-val call_tmp[1126120]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1126122 'move' call_tmp[1126120](1126125 call size[1035789] r2[1125689]))
    const-val buffLen[1126128]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1126130 'move' buffLen[1126128] call_tmp[1126120])
    ref call_tmp[1126137]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
    (1126139 'move' call_tmp[1126137](1126142 call this[954091] buff[1125753] buffLen[1126128]))
    const-val coerce_tmp[1142455]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1142461 'move' coerce_tmp[1142455](1142457 'cast' uint(8)[100] 0))
    (1126145 call =[435348] call_tmp[1126137] coerce_tmp[1142455])
    val call_tmp[1126151]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val numCodepoints[1126174]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1126176 'move' numCodepoints[1126174] numChars[1125701])
      const-val call_tmp[1126188]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1126190 'move' call_tmp[1126188](1126193 call ==[435628] numCodepoints[1126174] -1))
      const-val call_tmp[1126196]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1126198 'move' call_tmp[1126196] call_tmp[1126188])
      if call_tmp[1126196]
      {
        const-val call_tmp[1126205]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1126207 'move' call_tmp[1126205](1126210 call countNumCodepoints[181390] buff[1125753] buffLen[1126128]))
        (1126214 call =[435327] numCodepoints[1126174] call_tmp[1126205])
      }
      const-val call_tmp[1126222]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1829213]:string[26] "temp"
      (1126227 call chpl_createStringWithOwnedBufferNV[30673] buff[1125753] buffLen[1126128] buffSize[1125764] numCodepoints[1126174] ret_tmp[1829213])
      (1829216 'move' call_tmp[1126222] ret_tmp[1829213])
      (1126236 'move' ret[1125604] call_tmp[1126222])
      (1844646 call chpl__autoDestroy[1465141] tmp[1125851])
      (1844649 call chpl__autoDestroy[1534375] r2[1125689])
      (1844652 call chpl__autoDestroy[1540699] tmp[1125672])
      gotoReturn _end_getSlice[1126271] _end_getSlice[1126271]
    }
    (1844655 call chpl__autoDestroy[1465141] tmp[1125851])
    (1844658 call chpl__autoDestroy[1534375] r2[1125689])
    (1844661 call chpl__autoDestroy[1540699] tmp[1125672])
    label _end_getSlice[1126271]
    (1834230 '=' _retArg[1834228] ret[1125604])
    (1834234 return _void[55])
  }
  function getSlice[1143759](const  ref arg x[1143761]:_ref(string)[937939], const in arg r[1143763]:range(byteIndex,boundedLow,false)[1143403], ref arg _retArg[1834432]:_ref(string)[937939]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1143765]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[1143775]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1143786]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1143788 'move' call_tmp[1143786](1143794 call isEmpty[35061] x[1143761]))
    const-val call_tmp[1143795]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1143797 'move' call_tmp[1143795] call_tmp[1143786])
    if call_tmp[1143795]
    {
      const-val ret[1143804]:string[26] "dead at end of block" "insert auto destroy"
      val call_tmp[1143806]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1156446 call init[30760] ret[1143804])
      (1143816 'move' ret[1143765] ret[1143804])
      gotoReturn _end_getSlice[1144432] _end_getSlice[1144432]
    }
    const-val call_tmp[1143825]:(range(int(64),bounded,false),int(64))[1084924] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1834440]:(range(int(64),bounded,false),int(64))[1084924] "temp"
    (1143830 call getView[1144441] x[1143761] r[1143763] ret_tmp[1834440])
    (1834443 'move' call_tmp[1143825] ret_tmp[1834440])
    const-val tmp[1143833]:(range(int(64),bounded,false),int(64))[1084924] "dead at end of block" "const" "insert auto destroy" "temp"
    (1143835 'move' tmp[1143833] call_tmp[1143825])
    1
    ref call_tmp[1143843]:_ref(range(int(64),bounded,false))[1026858] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1143845 'move' call_tmp[1143843](1156301 '.' tmp[1143833] x0[1084920]))
    const-val r2[1143850]:range(int(64),bounded,false)[1026814] "dead at end of block" "const" "insert auto destroy"
    (1143852 'move' r2[1143850] call_tmp[1143843])
    ref call_tmp[1143855]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1143857 'move' call_tmp[1143855](1156307 '.' tmp[1143833] x1[1084922]))
    const-val numChars[1143862]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1156312]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1156316 'move' coerce_tmp[1156312](1156314 'deref' call_tmp[1143855]))
    (1844771 '=' numChars[1143862] coerce_tmp[1156312])
    (1143864 'noop')
    const-val call_tmp[1143868]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1143870 'move' call_tmp[1143868](1143873 call size[1035789] r2[1143850]))
    const-val call_tmp[1143876]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1143878 'move' call_tmp[1143876](1143881 call <=[437012] call_tmp[1143868] 0))
    const-val call_tmp[1143884]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1143886 'move' call_tmp[1143884] call_tmp[1143876])
    if call_tmp[1143884]
    {
      const-val ret[1143893]:string[26] "dead at end of block" "insert auto destroy"
      val call_tmp[1143895]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1156451 call init[30760] ret[1143893])
      (1143905 'move' ret[1143765] ret[1143893])
      (1844780 call chpl__autoDestroy[1534375] r2[1143850])
      (1844783 call chpl__autoDestroy[1540699] tmp[1143833])
      gotoReturn _end_getSlice[1144432] _end_getSlice[1144432]
    }
    val buff[1143914]:c_ptr(uint(8))[937423] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1143916]:c_ptr(uint(8))[937423] "dead after last mention" "maybe param" "temp" "type variable"
    const-val buffSize[1143925]:int(64)[13] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1143927]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    const-val call_tmp[1143936]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1143938 'move' call_tmp[1143936](1143941 call high[1028619] r2[1143850]))
    const-val call_tmp[1143944]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1143946 'move' call_tmp[1143944](1143949 call low[1028411] r2[1143850]))
    const-val call_tmp[1143952]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1143954 'move' call_tmp[1143952](1143957 call -[440416] call_tmp[1143936] call_tmp[1143944]))
    const-val call_tmp[1143960]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1143962 'move' call_tmp[1143960](1143965 call +[949666] call_tmp[1143952]))
    const-val copyLen[1143968]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1143970 'move' copyLen[1143968] call_tmp[1143960])
    ref call_tmp[1143974]:_ref(c_ptr(uint(8)))[937432] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1143976 'move' call_tmp[1143974](1143979 call buff[757964] x[1143761]))
    const-val call_tmp[1143982]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1143984 'move' call_tmp[1143982](1143987 call low[1028411] r2[1143850]))
    ref call_tmp[1143990]:_ref(int(32))[936626] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1143992 'move' call_tmp[1143990](1143995 call locale_id[758042] x[1143761]))
    const-val call_tmp[1143998]:(c_ptr(uint(8)),int(64))[955208] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1156331]:c_ptr(uint(8))[937423] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1156335 'move' coerce_tmp[1156331](1156333 'deref' call_tmp[1143974]))
    const-val coerce_tmp[1156337]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1156341 'move' coerce_tmp[1156337](1156339 'deref' call_tmp[1143990]))
    const-val ret_tmp[1831275]:(c_ptr(uint(8)),int(64))[955208] "temp"
    (1144003 call bufferCopy[172928] coerce_tmp[1156331] call_tmp[1143982] copyLen[1143968] coerce_tmp[1156337] ret_tmp[1831275])
    (1831278 'move' call_tmp[1143998] ret_tmp[1831275])
    const-val tmp[1144012]:(c_ptr(uint(8)),int(64))[955208] "dead at end of block" "insert auto destroy" "temp"
    (1144014 'move' tmp[1144012] call_tmp[1143998])
    1
    ref call_tmp[1144022]:_ref(c_ptr(uint(8)))[937432] "dead at end of block" "maybe param" "temp"
    (1144024 'move' call_tmp[1144022](1156351 '.' tmp[1144012] x0[955204]))
    val copyBuf[1144029]:c_ptr(uint(8))[937423] "dead at end of block" "insert auto destroy"
    val coerce_tmp[1156356]:c_ptr(uint(8))[937423] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1156360 'move' coerce_tmp[1156356](1156358 'deref' call_tmp[1144022]))
    (1844774 '=' copyBuf[1144029] coerce_tmp[1156356])
    (1144031 'noop')
    ref call_tmp[1144034]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
    (1144036 'move' call_tmp[1144034](1156365 '.' tmp[1144012] x1[955206]))
    const-val copySize[1144041]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[1156370]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1156374 'move' coerce_tmp[1156370](1156372 'deref' call_tmp[1144034]))
    (1844777 '=' copySize[1144041] coerce_tmp[1156370])
    (1144043 'noop')
    {
      (1144072 'move' buff[1143914] copyBuf[1144029])
      (1144079 'move' buffSize[1143925] copySize[1144041])
    }
    const-val call_tmp[1144281]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1144283 'move' call_tmp[1144281](1144286 call size[1035789] r2[1143850]))
    const-val buffLen[1144289]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1144291 'move' buffLen[1144289] call_tmp[1144281])
    ref call_tmp[1144298]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
    (1144300 'move' call_tmp[1144298](1144303 call this[954091] buff[1143914] buffLen[1144289]))
    const-val coerce_tmp[1156410]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1156416 'move' coerce_tmp[1156410](1156412 'cast' uint(8)[100] 0))
    (1144306 call =[435348] call_tmp[1144298] coerce_tmp[1156410])
    val call_tmp[1144312]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val numCodepoints[1144335]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1144337 'move' numCodepoints[1144335] numChars[1143862])
      const-val call_tmp[1144349]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1144351 'move' call_tmp[1144349](1144354 call ==[435628] numCodepoints[1144335] -1))
      const-val call_tmp[1144357]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1144359 'move' call_tmp[1144357] call_tmp[1144349])
      if call_tmp[1144357]
      {
        const-val call_tmp[1144366]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1144368 'move' call_tmp[1144366](1144371 call countNumCodepoints[181390] buff[1143914] buffLen[1144289]))
        (1144375 call =[435327] numCodepoints[1144335] call_tmp[1144366])
      }
      const-val call_tmp[1144383]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1829219]:string[26] "temp"
      (1144388 call chpl_createStringWithOwnedBufferNV[30673] buff[1143914] buffLen[1144289] buffSize[1143925] numCodepoints[1144335] ret_tmp[1829219])
      (1829222 'move' call_tmp[1144383] ret_tmp[1829219])
      (1144397 'move' ret[1143765] call_tmp[1144383])
      (1844786 call chpl__autoDestroy[1465141] tmp[1144012])
      (1844789 call chpl__autoDestroy[1534375] r2[1143850])
      (1844792 call chpl__autoDestroy[1540699] tmp[1143833])
      gotoReturn _end_getSlice[1144432] _end_getSlice[1144432]
    }
    (1844795 call chpl__autoDestroy[1465141] tmp[1144012])
    (1844798 call chpl__autoDestroy[1534375] r2[1143850])
    (1844801 call chpl__autoDestroy[1540699] tmp[1143833])
    label _end_getSlice[1144432]
    (1834434 '=' _retArg[1834432] ret[1143765])
    (1834438 return _void[55])
  }
  function getSlice[1185275](const  ref arg x[1185277]:_ref(string)[937939], const in arg r[1185279]:range(byteIndex,boundedHigh,false)[1184919], ref arg _retArg[1834766]:_ref(string)[937939]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1185281]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[1185291]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1185302]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1185304 'move' call_tmp[1185302](1185310 call isEmpty[35061] x[1185277]))
    const-val call_tmp[1185311]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1185313 'move' call_tmp[1185311] call_tmp[1185302])
    if call_tmp[1185311]
    {
      const-val ret[1185320]:string[26] "dead at end of block" "insert auto destroy"
      val call_tmp[1185322]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1203749 call init[30760] ret[1185320])
      (1185332 'move' ret[1185281] ret[1185320])
      gotoReturn _end_getSlice[1185948] _end_getSlice[1185948]
    }
    const-val call_tmp[1185341]:(range(int(64),bounded,false),int(64))[1084924] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1834774]:(range(int(64),bounded,false),int(64))[1084924] "temp"
    (1185346 call getView[1185957] x[1185277] r[1185279] ret_tmp[1834774])
    (1834777 'move' call_tmp[1185341] ret_tmp[1834774])
    const-val tmp[1185349]:(range(int(64),bounded,false),int(64))[1084924] "dead at end of block" "const" "insert auto destroy" "temp"
    (1185351 'move' tmp[1185349] call_tmp[1185341])
    1
    ref call_tmp[1185359]:_ref(range(int(64),bounded,false))[1026858] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1185361 'move' call_tmp[1185359](1203604 '.' tmp[1185349] x0[1084920]))
    const-val r2[1185366]:range(int(64),bounded,false)[1026814] "dead at end of block" "const" "insert auto destroy"
    (1185368 'move' r2[1185366] call_tmp[1185359])
    ref call_tmp[1185371]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1185373 'move' call_tmp[1185371](1203610 '.' tmp[1185349] x1[1084922]))
    const-val numChars[1185378]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1203615]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1203619 'move' coerce_tmp[1203615](1203617 'deref' call_tmp[1185371]))
    (1847040 '=' numChars[1185378] coerce_tmp[1203615])
    (1185380 'noop')
    const-val call_tmp[1185384]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1185386 'move' call_tmp[1185384](1185389 call size[1035789] r2[1185366]))
    const-val call_tmp[1185392]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1185394 'move' call_tmp[1185392](1185397 call <=[437012] call_tmp[1185384] 0))
    const-val call_tmp[1185400]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1185402 'move' call_tmp[1185400] call_tmp[1185392])
    if call_tmp[1185400]
    {
      const-val ret[1185409]:string[26] "dead at end of block" "insert auto destroy"
      val call_tmp[1185411]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1203754 call init[30760] ret[1185409])
      (1185421 'move' ret[1185281] ret[1185409])
      (1847049 call chpl__autoDestroy[1534375] r2[1185366])
      (1847052 call chpl__autoDestroy[1540699] tmp[1185349])
      gotoReturn _end_getSlice[1185948] _end_getSlice[1185948]
    }
    val buff[1185430]:c_ptr(uint(8))[937423] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1185432]:c_ptr(uint(8))[937423] "dead after last mention" "maybe param" "temp" "type variable"
    const-val buffSize[1185441]:int(64)[13] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1185443]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    const-val call_tmp[1185452]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1185454 'move' call_tmp[1185452](1185457 call high[1028619] r2[1185366]))
    const-val call_tmp[1185460]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1185462 'move' call_tmp[1185460](1185465 call low[1028411] r2[1185366]))
    const-val call_tmp[1185468]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1185470 'move' call_tmp[1185468](1185473 call -[440416] call_tmp[1185452] call_tmp[1185460]))
    const-val call_tmp[1185476]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1185478 'move' call_tmp[1185476](1185481 call +[949666] call_tmp[1185468]))
    const-val copyLen[1185484]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1185486 'move' copyLen[1185484] call_tmp[1185476])
    ref call_tmp[1185490]:_ref(c_ptr(uint(8)))[937432] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1185492 'move' call_tmp[1185490](1185495 call buff[757964] x[1185277]))
    const-val call_tmp[1185498]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1185500 'move' call_tmp[1185498](1185503 call low[1028411] r2[1185366]))
    ref call_tmp[1185506]:_ref(int(32))[936626] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1185508 'move' call_tmp[1185506](1185511 call locale_id[758042] x[1185277]))
    const-val call_tmp[1185514]:(c_ptr(uint(8)),int(64))[955208] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1203634]:c_ptr(uint(8))[937423] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1203638 'move' coerce_tmp[1203634](1203636 'deref' call_tmp[1185490]))
    const-val coerce_tmp[1203640]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1203644 'move' coerce_tmp[1203640](1203642 'deref' call_tmp[1185506]))
    const-val ret_tmp[1831281]:(c_ptr(uint(8)),int(64))[955208] "temp"
    (1185519 call bufferCopy[172928] coerce_tmp[1203634] call_tmp[1185498] copyLen[1185484] coerce_tmp[1203640] ret_tmp[1831281])
    (1831284 'move' call_tmp[1185514] ret_tmp[1831281])
    const-val tmp[1185528]:(c_ptr(uint(8)),int(64))[955208] "dead at end of block" "insert auto destroy" "temp"
    (1185530 'move' tmp[1185528] call_tmp[1185514])
    1
    ref call_tmp[1185538]:_ref(c_ptr(uint(8)))[937432] "dead at end of block" "maybe param" "temp"
    (1185540 'move' call_tmp[1185538](1203654 '.' tmp[1185528] x0[955204]))
    val copyBuf[1185545]:c_ptr(uint(8))[937423] "dead at end of block" "insert auto destroy"
    val coerce_tmp[1203659]:c_ptr(uint(8))[937423] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1203663 'move' coerce_tmp[1203659](1203661 'deref' call_tmp[1185538]))
    (1847043 '=' copyBuf[1185545] coerce_tmp[1203659])
    (1185547 'noop')
    ref call_tmp[1185550]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
    (1185552 'move' call_tmp[1185550](1203668 '.' tmp[1185528] x1[955206]))
    const-val copySize[1185557]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[1203673]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1203677 'move' coerce_tmp[1203673](1203675 'deref' call_tmp[1185550]))
    (1847046 '=' copySize[1185557] coerce_tmp[1203673])
    (1185559 'noop')
    {
      (1185588 'move' buff[1185430] copyBuf[1185545])
      (1185595 'move' buffSize[1185441] copySize[1185557])
    }
    const-val call_tmp[1185797]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1185799 'move' call_tmp[1185797](1185802 call size[1035789] r2[1185366]))
    const-val buffLen[1185805]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1185807 'move' buffLen[1185805] call_tmp[1185797])
    ref call_tmp[1185814]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
    (1185816 'move' call_tmp[1185814](1185819 call this[954091] buff[1185430] buffLen[1185805]))
    const-val coerce_tmp[1203713]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1203719 'move' coerce_tmp[1203713](1203715 'cast' uint(8)[100] 0))
    (1185822 call =[435348] call_tmp[1185814] coerce_tmp[1203713])
    val call_tmp[1185828]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val numCodepoints[1185851]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1185853 'move' numCodepoints[1185851] numChars[1185378])
      const-val call_tmp[1185865]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1185867 'move' call_tmp[1185865](1185870 call ==[435628] numCodepoints[1185851] -1))
      const-val call_tmp[1185873]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1185875 'move' call_tmp[1185873] call_tmp[1185865])
      if call_tmp[1185873]
      {
        const-val call_tmp[1185882]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1185884 'move' call_tmp[1185882](1185887 call countNumCodepoints[181390] buff[1185430] buffLen[1185805]))
        (1185891 call =[435327] numCodepoints[1185851] call_tmp[1185882])
      }
      const-val call_tmp[1185899]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1829225]:string[26] "temp"
      (1185904 call chpl_createStringWithOwnedBufferNV[30673] buff[1185430] buffLen[1185805] buffSize[1185441] numCodepoints[1185851] ret_tmp[1829225])
      (1829228 'move' call_tmp[1185899] ret_tmp[1829225])
      (1185913 'move' ret[1185281] call_tmp[1185899])
      (1847055 call chpl__autoDestroy[1465141] tmp[1185528])
      (1847058 call chpl__autoDestroy[1534375] r2[1185366])
      (1847061 call chpl__autoDestroy[1540699] tmp[1185349])
      gotoReturn _end_getSlice[1185948] _end_getSlice[1185948]
    }
    (1847064 call chpl__autoDestroy[1465141] tmp[1185528])
    (1847067 call chpl__autoDestroy[1534375] r2[1185366])
    (1847070 call chpl__autoDestroy[1540699] tmp[1185349])
    label _end_getSlice[1185948]
    (1834768 '=' _retArg[1834766] ret[1185281])
    (1834772 return _void[55])
  }
  function doReplace[1181014](const  ref arg x[1181016]:_ref(string)[937939], const  ref arg needle[1181021]:string[26], const  ref arg replacement[1181026]:string[26], const in arg count[1181032]:int(64)[13], ref arg _retArg[1834694]:_ref(string)[937939]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1181037]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[1181045]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1181056]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val _idxt[1181062]:byteIndex[28170] "dead at end of block" "insert auto destroy" "type variable"
    val call_tmp[1181067]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1181078]:string[26] "dead after last mention" "maybe param" "temp" "type variable"
    val result[1181084]:string[26] "dead at end of block" "insert auto destroy"
    (1181086 call init=[30771] result[1181084] x[1181016])
    val found[1181091]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1181093 'move' found[1181091] 0)
    val startIdx[1181098]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (1181100 call init=[28145] startIdx[1181098] 0)
    const-val call_tmp[1181105]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1829551]:string[26] "temp"
    (1181113 call localize[32886] needle[1181021] ret_tmp[1829551])
    (1829554 'move' call_tmp[1181105] ret_tmp[1829551])
    val call_tmp[1181114]:string[26] "dead after last mention" "maybe param" "temp" "type variable"
    const-val localNeedle[1181120]:string[26] "dead at end of block" "const" "insert auto destroy"
    (1181122 'move' localNeedle[1181120] call_tmp[1181105])
    const-val call_tmp[1181127]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1829557]:string[26] "temp"
    (1181135 call localize[32886] replacement[1181026] ret_tmp[1829557])
    (1829560 'move' call_tmp[1181127] ret_tmp[1829557])
    val call_tmp[1181136]:string[26] "dead after last mention" "maybe param" "temp" "type variable"
    const-val localReplacement[1181142]:string[26] "dead at end of block" "const" "insert auto destroy"
    (1181144 'move' localReplacement[1181142] call_tmp[1181127])
    {
      val tmp[1181151]:bool[10] "dead after last mention" "temp"
      const-val tmp[1181153]:bool[10] "dead after last mention" "maybe param" "temp"
      (1181155 'move' tmp[1181153](1181158 call <[948398] count[1181032]))
      val tmp[1181174]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1181176]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1181178]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1181180 'move' call_tmp[1181178] tmp[1181153])
      (1181185 'move' tmp[1181176] call_tmp[1181178])
      if tmp[1181176]
      {
        (1181192 'move' tmp[1181174] 1)
      }
      {
        const-val tmp[1181198]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1181200]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1181202 'move' call_tmp[1181200](1181205 call <[437452] found[1181091] count[1181032]))
        (1181208 'move' tmp[1181198] call_tmp[1181200])
        (1181213 'move' tmp[1181174] tmp[1181198])
      }
      (1181219 'move' tmp[1181151] tmp[1181174])
      WhileDo[1181224] hazard
      {
        {
          const-val call_tmp[1181227]:range(byteIndex,boundedLow,false)[1143403] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1834354]:range(byteIndex,boundedLow,false)[1143403] "temp"
          (1181232 call chpl_build_low_bounded_range[1142710] startIdx[1181098] ret_tmp[1834354])
          (1834357 'move' call_tmp[1181227] ret_tmp[1834354])
          const-val call_tmp[1181234]:byteIndex[28170] "dead at end of block" "maybe param" "temp"
          const-val ret_tmp[1834700]:byteIndex[28170] "temp"
          (1181242 call find[1181646] result[1181084] localNeedle[1181120] call_tmp[1181227] ret_tmp[1834700])
          (1834703 'move' call_tmp[1181234] ret_tmp[1834700])
          const-val idx[1181245]:byteIndex[28170] "dead at end of block" "const" "insert auto destroy"
          (1181247 'move' idx[1181245] call_tmp[1181234])
          const-val call_tmp[1181261]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1181263 'move' call_tmp[1181261](1181266 call ==[29466] idx[1181245] -1))
          const-val call_tmp[1181269]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1181271 'move' call_tmp[1181269] call_tmp[1181261])
          if call_tmp[1181269]
          {
            (1846925 call chpl__autoDestroy[1461793] idx[1181245])
            (1846928 call chpl__autoDestroy[1542826] call_tmp[1181227])
            break _breakLabel[1181464] _breakLabel[1181464]
          }
          (1181282 call +=[451315] found[1181091] 1)
          const-val call_tmp[1181287]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1818209]:byteIndex[28170] "temp"
          (1181292 call -[28854] idx[1181245] 1 ret_tmp[1818209])
          (1818212 'move' call_tmp[1181287] ret_tmp[1818209])
          const-val call_tmp[1181295]:range(byteIndex,boundedHigh,false)[1184919] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1834712]:range(byteIndex,boundedHigh,false)[1184919] "temp"
          (1181300 call chpl_build_high_bounded_range[1184226] call_tmp[1181287] ret_tmp[1834712])
          (1834715 'move' call_tmp[1181295] ret_tmp[1834712])
          const-val call_tmp[1181302]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1834748]:string[26] "temp"
          (1181307 call this[1185239] result[1181084] call_tmp[1181295] ret_tmp[1834748])
          (1834751 'move' call_tmp[1181302] ret_tmp[1834748])
          const-val call_tmp[1181309]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1830115]:string[26] "temp"
          (1181314 call +[38342] call_tmp[1181302] localReplacement[1181142] ret_tmp[1830115])
          (1830118 'move' call_tmp[1181309] ret_tmp[1830115])
          const-val call_tmp[1181317]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (1181319 'move' call_tmp[1181317](1181322 call numBytes[32807] localNeedle[1181120]))
          const-val call_tmp[1181325]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1818167]:byteIndex[28170] "temp"
          (1181330 call +[28722] idx[1181245] call_tmp[1181317] ret_tmp[1818167])
          (1818170 'move' call_tmp[1181325] ret_tmp[1818167])
          const-val call_tmp[1181333]:range(byteIndex,boundedLow,false)[1143403] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1834360]:range(byteIndex,boundedLow,false)[1143403] "temp"
          (1181338 call chpl_build_low_bounded_range[1142710] call_tmp[1181325] ret_tmp[1834360])
          (1834363 'move' call_tmp[1181333] ret_tmp[1834360])
          const-val call_tmp[1181340]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1834414]:string[26] "temp"
          (1181345 call this[1143723] result[1181084] call_tmp[1181333] ret_tmp[1834414])
          (1834417 'move' call_tmp[1181340] ret_tmp[1834414])
          const-val call_tmp[1181347]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1830121]:string[26] "temp"
          (1181352 call +[38342] call_tmp[1181309] call_tmp[1181340] ret_tmp[1830121])
          (1830124 'move' call_tmp[1181347] ret_tmp[1830121])
          (1181356 call =[38269] result[1181084] call_tmp[1181347])
          (1846952 call chpl__autoDestroy[1461530] call_tmp[1181347])
          (1846949 call chpl__autoDestroy[1461530] call_tmp[1181340])
          (1846946 call chpl__autoDestroy[1542826] call_tmp[1181333])
          (1846943 call chpl__autoDestroy[1461793] call_tmp[1181325])
          (1846940 call chpl__autoDestroy[1461530] call_tmp[1181309])
          (1846937 call chpl__autoDestroy[1461530] call_tmp[1181302])
          (1846934 call chpl__autoDestroy[1543883] call_tmp[1181295])
          (1846931 call chpl__autoDestroy[1461793] call_tmp[1181287])
          const-val call_tmp[1181367]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (1181369 'move' call_tmp[1181367](1181372 call numBytes[32807] localReplacement[1181142]))
          const-val call_tmp[1181375]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1818173]:byteIndex[28170] "temp"
          (1181380 call +[28722] idx[1181245] call_tmp[1181367] ret_tmp[1818173])
          (1818176 'move' call_tmp[1181375] ret_tmp[1818173])
          (1181384 call =[38191] startIdx[1181098] call_tmp[1181375])
          (1846956 call chpl__autoDestroy[1461793] call_tmp[1181375])
          (1846959 call chpl__autoDestroy[1461793] idx[1181245])
          (1846962 call chpl__autoDestroy[1542826] call_tmp[1181227])
        }
        label _continueLabel[1181391]
        const-val tmp[1181393]:bool[10] "dead after last mention" "maybe param" "temp"
        (1181395 'move' tmp[1181393](1181398 call <[948398] count[1181032]))
        val tmp[1181414]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        const-val tmp[1181416]:bool[10] "dead after last mention" "maybe param" "temp"
        const-val call_tmp[1181418]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1181420 'move' call_tmp[1181418] tmp[1181393])
        (1181425 'move' tmp[1181416] call_tmp[1181418])
        if tmp[1181416]
        {
          (1181432 'move' tmp[1181414] 1)
        }
        {
          const-val tmp[1181438]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
          const-val call_tmp[1181440]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1181442 'move' call_tmp[1181440](1181445 call <[437452] found[1181091] count[1181032]))
          (1181448 'move' tmp[1181438] call_tmp[1181440])
          (1181453 'move' tmp[1181414] tmp[1181438])
        }
        (1181459 'move' tmp[1181151] tmp[1181414])
        tmp[1181151]
      }
      label _breakLabel[1181464]
    }
    val call_tmp[1181466]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1203780 'move' ret[1181037] result[1181084])
    (1846965 call chpl__autoDestroy[1461530] localReplacement[1181142])
    (1846968 call chpl__autoDestroy[1461530] localNeedle[1181120])
    (1846971 call chpl__autoDestroy[1461793] startIdx[1181098])
    gotoReturn _end_doReplace[1181481] _end_doReplace[1181481]
    label _end_doReplace[1181481]
    (1834696 '=' _retArg[1834694] ret[1181037])
    (1834698 return _void[55])
  }
  function doSplitWSNoEnc[1124456](const  ref arg x[1124458]:_ref(string)[937939], const in arg maxsplit[1124464]:int(64)[13], ref arg _retArg[1834182]:_ref(_ir_doSplitWSNoEnc)[1124592]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "resolved" "no return value for void"
  {
    val _ir[2017931]:_ir_doSplitWSNoEnc[1124481] "temp"
    (2017933 '.=' _ir[2017931] F0_x[2016905] x[1124458])
    (2017937 '.=' _ir[2017931] F1_maxsplit[2016909] maxsplit[1124464])
    (2017941 '=' _retArg[1834182] _ir[2017931])
    (2017944 return _void[55])
  }
  type _ic_doSplitWSNoEnc[1124475] val super[1124476]:object[22] "super class" val more[1124478]:int(64)[13] ref F0_x[2016903]:_ref(string)[937939] const-val F1_maxsplit[2016907]:int(64)[13] const F2_localx[2016911]:string[26] val F3_done[2016913]:bool[10] val F4_yieldChunk[2016915]:bool[10] const-val F5_chunk[2016917]:string[26] const F6_noSplits[2016919]:bool[10] const F7_limitSplits[2016921]:bool[10] val F8_splitCount[2016923]:int(64)[13] const F9_iEnd[2016925]:int(64)[13] val F10_inChunk[2016927]:bool[10] val F11_chunkStart[2016929]:int(64)[13] val F12__iterator[2016931]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108566] val F13_call_tmp[2016933]:range(int(64),bounded,false)[1026814] val F14__iterator[2016935]:_ic_these_range_int64_t_bounded_F[1096703] val F15__iterator[2016937]:_ic_chpl_bytes__ref_string[1108256] val F16__indexOfInterest[2016939]:(int(64),uint(8))[1111040] const-val F17_ret_tmp[2016941]:range(int(64),boundedLow,false)[1087565] const-val F18_ret_tmp[2016943]:string[26] const-val F19_ret_tmp[2016945]:range(int(64),boundedLow,false)[1087565] const-val F20_ret_tmp[2016947]:string[26] const-val F21_ret_tmp[2016949]:range(int(64),bounded,false)[1026814] const-val F22_ret_tmp[2016951]:string[26] const-val F23_ret_tmp[2016953]:range(int(64),boundedLow,false)[1087565] const-val F24_ret_tmp[2016955]:string[26] val value[2016957]:string[26]
  type _ir_doSplitWSNoEnc[1124481] ref F0_x[2016905]:_ref(string)[937939] const-val F1_maxsplit[2016909]:int(64)[13]
  function _getIterator[1124490](const  ref arg ir[1124492]:_ir_doSplitWSNoEnc[1124481]) : _ic_doSplitWSNoEnc[1124475] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[1124599]:_ic_doSplitWSNoEnc[1124475] "dead after last mention" "RVV" "temp"
    val _ic_[1124482]:_ic_doSplitWSNoEnc[1124475] "dead after last mention" "temp"
    const-val call_tmp[1124606]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1124609 'move' call_tmp[1124606](1124621 'sizeof_bundle' _ic_doSplitWSNoEnc[1124475]))
    const-val cast_tmp[1124624]:c_void_ptr[149] "dead after last mention" "temp"
    (1124626 'move' cast_tmp[1124624](1124487 call chpl_here_alloc[187742] call_tmp[1124606] 35))
    (1124495 'move' _ic_[1124482](1124628 'cast' _ic_doSplitWSNoEnc[1124475] cast_tmp[1124624]))
    (1124497 'setcid' _ic_[1124482])
    (1124604 'move' ret[1124599] _ic_[1124482])
    (2017947 '.=' ret[1124599] more[1124478] 1)
    ref tmp[2017951]:_ref(string)[937939] "temp"
    (2017956 'move' tmp[2017951](2017952 '.v' ir[1124492] F0_x[2016905]))
    (2017958 '.=' ret[1124599] F0_x[2016903] tmp[2017951])
    const-val tmp[2017962]:int(64)[13] "temp"
    (2017967 'move' tmp[2017962](2017963 '.v' ir[1124492] F1_maxsplit[2016909]))
    (2017969 '.=' ret[1124599] F1_maxsplit[2016907] tmp[2017962])
    (1124601 return ret[1124599])
  }
  function doSearchNoEnc[1030053](const  ref arg x[1030055]:_ref(string)[937939], const  ref arg needle[1030060]:string[26], const in arg region[1030062]:range(byteIndex,bounded,false)[1025792]) : int(64)[13] "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1030070]:int(64)[13] "dead after last mention" "RVV" "temp"
    val call_tmp[1030082]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val ret[1030100]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1030102 'move' ret[1030100] -1)
    const-val tmp[1030107]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1030109]:_ref(int(32))[936626] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1030111 'move' call_tmp[1030109](1030114 call locale_id[758042] x[1030055]))
    const-val call_tmp[1030117]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1030983]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1030987 'move' coerce_tmp[1030983](1030985 'deref' call_tmp[1030109]))
    (1030119 'move' call_tmp[1030117](1030122 call chpl_buildLocaleID[209412] coerce_tmp[1030983] c_sublocid_any[89875]))
    const-val call_tmp[1030125]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    (1030127 'move' call_tmp[1030125](1030129 'chpl_on_locale_num' call_tmp[1030117]))
    (1030131 'move' tmp[1030107] call_tmp[1030125])
    val needle_data[2083630]:__serializeHelper[28086] "temp"
    (2083632 call chpl__serialize[30883] needle[1030060] needle_data[2083630])
    val isdirect[2088794]:bool[10] "temp"
    (2088799 'move' isdirect[2088794](2088796 call chpl_doDirectExecuteOn[187423] tmp[1030107]))
    if isdirect[2088794]
    {
      (2088803 call on_fn[1030138] needle_data[2083630] x[1030055] region[1030062] ret[1030100])
    }
    {
      val _args_foron_fn[2088827]:_class_localson_fn[2088813] "temp"
      (2088831 'move' _args_foron_fn[2088827](2088829 'stack allocate class' _class_localson_fn[2088813]))
      (2088833 '.=' _args_foron_fn[2088827] _0_tmp[2088816] tmp[1030107])
      (2088837 '.=' _args_foron_fn[2088827] _1_needle_data[2088818] needle_data[2083630])
      ref tmp[2088841]:string[26] "temp"
      (2088845 'move' tmp[2088841](2088843 'set reference' x[1030055]))
      (2088847 '.=' _args_foron_fn[2088827] _2_x[2088820] tmp[2088841])
      (2088851 '.=' _args_foron_fn[2088827] _3_region[2088822] region[1030062])
      ref tmp[2088855]:int(64)[13] "temp"
      (2088859 'move' tmp[2088855](2088857 'set reference' ret[1030100]))
      (2088861 '.=' _args_foron_fn[2088827] _4_ret[2088824] tmp[2088855])
      val _args_vforon_fn[2088865]:c_void_ptr[149] "temp"
      (2088869 'move' _args_vforon_fn[2088865](2088867 'cast_to_void_star' _args_foron_fn[2088827]))
      val _args_sizeon_fn[2088871]:int(64)[13] "temp"
      (2088875 'move' _args_sizeon_fn[2088871](2088873 'sizeof_bundle' _class_localson_fn[2088813]))
      on(2088931 call wrapon_fn[2088877] tmp[1030107] _args_vforon_fn[2088865] _args_sizeon_fn[2088871] _args_foron_fn[2088827])
    }
    {
    }
    (1030870 'move' ret[1030070] ret[1030100])
    gotoReturn _end_doSearchNoEnc[1030878] _end_doSearchNoEnc[1030878]
    label _end_doSearchNoEnc[1030878]
    (1030880 return ret[1030070])
  }
  function doSearchNoEnc[1181766](const  ref arg x[1181768]:_ref(string)[937939], const  ref arg needle[1181773]:string[26], const in arg region[1181775]:range(byteIndex,boundedLow,false)[1143403]) : int(64)[13] "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1181783]:int(64)[13] "dead after last mention" "RVV" "temp"
    val call_tmp[1181795]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val ret[1181813]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1181815 'move' ret[1181813] -1)
    const-val tmp[1181820]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1181822]:_ref(int(32))[936626] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1181824 'move' call_tmp[1181822](1181827 call locale_id[758042] x[1181768]))
    const-val call_tmp[1181830]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1182633]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1182637 'move' coerce_tmp[1182633](1182635 'deref' call_tmp[1181822]))
    (1181832 'move' call_tmp[1181830](1181835 call chpl_buildLocaleID[209412] coerce_tmp[1182633] c_sublocid_any[89875]))
    const-val call_tmp[1181838]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    (1181840 'move' call_tmp[1181838](1181842 'chpl_on_locale_num' call_tmp[1181830]))
    (1181844 'move' tmp[1181820] call_tmp[1181838])
    val needle_data[2084169]:__serializeHelper[28086] "temp"
    (2084171 call chpl__serialize[30883] needle[1181773] needle_data[2084169])
    val isdirect[2091408]:bool[10] "temp"
    (2091413 'move' isdirect[2091408](2091410 call chpl_doDirectExecuteOn[187423] tmp[1181820]))
    if isdirect[2091408]
    {
      (2091417 call on_fn[1181851] needle_data[2084169] x[1181768] region[1181775] ret[1181813])
    }
    {
      val _args_foron_fn[2091441]:_class_localson_fn[2091427] "temp"
      (2091445 'move' _args_foron_fn[2091441](2091443 'stack allocate class' _class_localson_fn[2091427]))
      (2091447 '.=' _args_foron_fn[2091441] _0_tmp[2091430] tmp[1181820])
      (2091451 '.=' _args_foron_fn[2091441] _1_needle_data[2091432] needle_data[2084169])
      ref tmp[2091455]:string[26] "temp"
      (2091459 'move' tmp[2091455](2091457 'set reference' x[1181768]))
      (2091461 '.=' _args_foron_fn[2091441] _2_x[2091434] tmp[2091455])
      (2091465 '.=' _args_foron_fn[2091441] _3_region[2091436] region[1181775])
      ref tmp[2091469]:int(64)[13] "temp"
      (2091473 'move' tmp[2091469](2091471 'set reference' ret[1181813]))
      (2091475 '.=' _args_foron_fn[2091441] _4_ret[2091438] tmp[2091469])
      val _args_vforon_fn[2091479]:c_void_ptr[149] "temp"
      (2091483 'move' _args_vforon_fn[2091479](2091481 'cast_to_void_star' _args_foron_fn[2091441]))
      val _args_sizeon_fn[2091485]:int(64)[13] "temp"
      (2091489 'move' _args_sizeon_fn[2091485](2091487 'sizeof_bundle' _class_localson_fn[2091427]))
      on(2091545 call wrapon_fn[2091491] tmp[1181820] _args_vforon_fn[2091479] _args_sizeon_fn[2091485] _args_foron_fn[2091441])
    }
    {
    }
    (1182583 'move' ret[1181783] ret[1181813])
    gotoReturn _end_doSearchNoEnc[1182591] _end_doSearchNoEnc[1182591]
    label _end_doSearchNoEnc[1182591]
    (1182593 return ret[1181783])
  }
  function doAppend[979070](ref arg lhs[979072]:_ref(string)[937939], const  ref arg rhs[979077]:_ref(string)[937939]) : void[4] "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[979083]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[979094]:_ref(int(64))[936572] "dead after last mention" "maybe param" "reference to a const" "temp"
    (979096 'move' call_tmp[979094](979099 call buffLen[757886] rhs[979077]))
    const-val call_tmp[979102]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[979711]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (979715 'move' coerce_tmp[979711](979713 'deref' call_tmp[979094]))
    (979104 'move' call_tmp[979102](979107 call ==[435628] coerce_tmp[979711] 0))
    const-val call_tmp[979110]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (979112 'move' call_tmp[979110] call_tmp[979102])
    if call_tmp[979110]
    {
      gotoReturn _end_doAppend[979640] _end_doAppend[979640]
    }
    const-val tmp[979122]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[979124]:_ref(int(32))[936626] "dead after last mention" "maybe param" "temp"
    (979126 'move' call_tmp[979124](979129 call locale_id[758042] lhs[979072]))
    const-val call_tmp[979132]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[979719]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (979723 'move' coerce_tmp[979719](979721 'deref' call_tmp[979124]))
    (979134 'move' call_tmp[979132](979137 call chpl_buildLocaleID[209412] coerce_tmp[979719] c_sublocid_any[89875]))
    const-val call_tmp[979140]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    (979142 'move' call_tmp[979140](979144 'chpl_on_locale_num' call_tmp[979132]))
    (979146 'move' tmp[979122] call_tmp[979140])
    val isdirect[2087343]:bool[10] "temp"
    (2087348 'move' isdirect[2087343](2087345 call chpl_doDirectExecuteOn[187423] tmp[979122]))
    if isdirect[2087343]
    {
      (2087352 call on_fn[979153] lhs[979072] rhs[979077])
    }
    {
      val _args_foron_fn[2087370]:_class_localson_fn[2087360] "temp"
      (2087374 'move' _args_foron_fn[2087370](2087372 'stack allocate class' _class_localson_fn[2087360]))
      (2087376 '.=' _args_foron_fn[2087370] _0_tmp[2087363] tmp[979122])
      ref tmp[2087380]:string[26] "temp"
      (2087384 'move' tmp[2087380](2087382 'set reference' lhs[979072]))
      (2087386 '.=' _args_foron_fn[2087370] _1_lhs[2087365] tmp[2087380])
      ref tmp[2087390]:string[26] "temp"
      (2087394 'move' tmp[2087390](2087392 'set reference' rhs[979077]))
      (2087396 '.=' _args_foron_fn[2087370] _2_rhs[2087367] tmp[2087390])
      val _args_vforon_fn[2087400]:c_void_ptr[149] "temp"
      (2087404 'move' _args_vforon_fn[2087400](2087402 'cast_to_void_star' _args_foron_fn[2087370]))
      val _args_sizeon_fn[2087406]:int(64)[13] "temp"
      (2087410 'move' _args_sizeon_fn[2087406](2087408 'sizeof_bundle' _class_localson_fn[2087360]))
      on(2087450 call wrapon_fn[2087412] tmp[979122] _args_vforon_fn[2087400] _args_sizeon_fn[2087406] _args_foron_fn[2087370])
    }
    {
    }
    label _end_doAppend[979640]
    (979642 return _void[55])
  }
  function reinitWithNewBuffer[1019908](ref arg lhs[1019910]:_ref(string)[937939], const in arg buff[1019914]:c_ptr(uint(8))[937423], const in arg buffLen[1019916]:int(64)[13], const in arg buffSize[1019918]:int(64)[13], const in arg numCodepoints[1019922]:int(64)[13]) : void[4] "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val tmp[1019928]:bool[10] "dead after last mention" "maybe param" "temp"
    (1019930 'move' tmp[1019928](1019936 call isEmpty[35061] lhs[1019910]))
    val tmp[1019950]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1019952]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1019954]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1019956 'move' call_tmp[1019954] tmp[1019928])
    (1019961 'move' tmp[1019952] call_tmp[1019954])
    if tmp[1019952]
    {
      const-val tmp[1019968]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1019970]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1019972 'move' call_tmp[1019970](1019975 call ==[1020545] buff[1019914] nil[44]))
      (1019978 'move' tmp[1019968] call_tmp[1019970])
      (1019983 'move' tmp[1019950] tmp[1019968])
    }
    {
      (1019989 'move' tmp[1019950] 0)
    }
    const-val call_tmp[1019995]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1019997 'move' call_tmp[1019995] tmp[1019950])
    if call_tmp[1019995]
    {
      gotoReturn _end_reinitWithNewBuffer[1020507] _end_reinitWithNewBuffer[1020507]
    }
    const-val call_tmp[1020007]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1020009 'move' call_tmp[1020007](1020012 call !=[436012] buffLen[1019916] 0))
    const-val call_tmp[1020015]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1020017 'move' call_tmp[1020015] call_tmp[1020007])
    if call_tmp[1020015]
    {
      const-val tmp[1020024]:bool[10] "dead after last mention" "maybe param" "temp"
      ref call_tmp[1020026]:_ref(bool)[937199] "dead after last mention" "maybe param" "temp"
      (1020028 'move' call_tmp[1020026](1020031 call isOwned[757990] lhs[1019910]))
      const-val coerce_tmp[1020575]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1020579 'move' coerce_tmp[1020575](1020577 'deref' call_tmp[1020026]))
      (1020034 'move' tmp[1020024](1020037 call ![7494] coerce_tmp[1020575]))
      val tmp[1020052]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1020054]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1020056]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1020058 'move' call_tmp[1020056] tmp[1020024])
      (1020063 'move' tmp[1020054] call_tmp[1020056])
      if tmp[1020054]
      {
        (1020070 'move' tmp[1020052] 1)
      }
      {
        const-val tmp[1020076]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1020078]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1020080 'move' call_tmp[1020078](1020083 call +[949666] buffLen[1019916]))
        ref call_tmp[1020086]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
        (1020088 'move' call_tmp[1020086](1020091 call buffSize[757912] lhs[1019910]))
        const-val call_tmp[1020094]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1020587]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1020591 'move' coerce_tmp[1020587](1020589 'deref' call_tmp[1020086]))
        (1020096 'move' call_tmp[1020094](1020099 call >[437672] call_tmp[1020078] coerce_tmp[1020587]))
        (1020102 'move' tmp[1020076] call_tmp[1020094])
        (1020107 'move' tmp[1020052] tmp[1020076])
      }
      const-val call_tmp[1020113]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1020115 'move' call_tmp[1020113] tmp[1020052])
      if call_tmp[1020113]
      {
        ref tmp[1020122]:_ref(bool)[937199] "dead after last mention" "maybe param" "temp"
        (1020124 'move' tmp[1020122](1020127 call isOwned[757990] lhs[1019910]))
        val tmp[1020143]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        const-val tmp[1020145]:bool[10] "dead after last mention" "maybe param" "temp"
        const-val call_tmp[1020147]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val tmp[1020598]:bool[10] "dead after last mention" "const" "temp"
        (1020600 'move' tmp[1020598](1020602 'deref' tmp[1020122]))
        (1020149 'move' call_tmp[1020147] tmp[1020598])
        (1020154 'move' tmp[1020145] call_tmp[1020147])
        if tmp[1020145]
        {
          const-val tmp[1020161]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
          const-val call_tmp[1020163]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1020165 'move' call_tmp[1020163](1020171 call isEmpty[35061] lhs[1019910]))
          const-val call_tmp[1020172]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1020174 'move' call_tmp[1020172](1020177 call ![7494] call_tmp[1020163]))
          (1020179 'move' tmp[1020161] call_tmp[1020172])
          (1020184 'move' tmp[1020143] tmp[1020161])
        }
        {
          (1020190 'move' tmp[1020143] 0)
        }
        const-val call_tmp[1020196]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1020198 'move' call_tmp[1020196] tmp[1020143])
        if call_tmp[1020196]
        {
          ref call_tmp[1020205]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "temp"
          (1020207 'move' call_tmp[1020205](1020210 call buff[757964] lhs[1019910]))
          val coerce_tmp[1020607]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1020611 'move' coerce_tmp[1020607](1020609 'deref' call_tmp[1020205]))
          (1020214 call bufferFree[172912] coerce_tmp[1020607])
        }
        const-val call_tmp[1020217]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1020219 'move' call_tmp[1020217](1020222 call +[949666] buffLen[1019916]))
        const-val call_tmp[1020225]:(c_ptr(uint(8)),int(64))[955208] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1831981]:(c_ptr(uint(8)),int(64))[955208] "temp"
        (1020230 call bufferAlloc[955018] call_tmp[1020217] ret_tmp[1831981])
        (1831984 'move' call_tmp[1020225] ret_tmp[1831981])
        const-val tmp[1020232]:(c_ptr(uint(8)),int(64))[955208] "dead at end of block" "const" "insert auto destroy" "temp"
        (1020234 'move' tmp[1020232] call_tmp[1020225])
        1
        ref call_tmp[1020242]:_ref(c_ptr(uint(8)))[937432] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1020244 'move' call_tmp[1020242](1020623 '.' tmp[1020232] x0[955204]))
        const buff[1020249]:c_ptr(uint(8))[937423] "dead at end of block" "const" "insert auto destroy"
        val coerce_tmp[1020628]:c_ptr(uint(8))[937423] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1020632 'move' coerce_tmp[1020628](1020630 'deref' call_tmp[1020242]))
        (1020251 'move' buff[1020249] coerce_tmp[1020628])
        ref call_tmp[1020254]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1020256 'move' call_tmp[1020254](1020637 '.' tmp[1020232] x1[955206]))
        const-val allocSize[1020261]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[1020642]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1020646 'move' coerce_tmp[1020642](1020644 'deref' call_tmp[1020254]))
        (1020263 'move' allocSize[1020261] coerce_tmp[1020642])
        ref call_tmp[1020267]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "temp"
        (1020269 'move' call_tmp[1020267](1020272 call buff[757964] lhs[1019910]))
        (1020276 call =[954213] call_tmp[1020267] buff[1020249])
        ref call_tmp[1020281]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
        (1020283 'move' call_tmp[1020281](1020286 call buffSize[757912] lhs[1019910]))
        (1020290 call =[435327] call_tmp[1020281] allocSize[1020261])
        ref call_tmp[1020295]:_ref(bool)[937199] "dead after last mention" "maybe param" "temp"
        (1020297 'move' call_tmp[1020295](1020300 call isOwned[757990] lhs[1019910]))
        (1020304 call =[435174] call_tmp[1020295] 1)
        (1842802 call chpl__autoDestroy[1465141] tmp[1020232])
      }
      ref call_tmp[1020308]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "temp"
      (1020310 'move' call_tmp[1020308](1020313 call buff[757964] lhs[1019910]))
      val coerce_tmp[1020706]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1020710 'move' coerce_tmp[1020706](1020708 'deref' call_tmp[1020308]))
      (1020317 call bufferMemmoveLocal[1020656] coerce_tmp[1020706] buff[1019914] buffLen[1019916] 0 0)
      ref call_tmp[1020322]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
      ref _this_tmp_[1020832]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "temp"
      (1020834 'move' _this_tmp_[1020832](1020327 call buff[757964] lhs[1019910]))
      val coerce_tmp[1020839]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1020843 'move' coerce_tmp[1020839](1020841 'deref' _this_tmp_[1020832]))
      (1020324 'move' call_tmp[1020322](1020330 call this[954091] coerce_tmp[1020839] buffLen[1019916]))
      const-val coerce_tmp[1020846]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1020852 'move' coerce_tmp[1020846](1020848 'cast' uint(8)[100] 0))
      (1020333 call =[435348] call_tmp[1020322] coerce_tmp[1020846])
    }
    {
      ref tmp[1020337]:_ref(bool)[937199] "dead after last mention" "maybe param" "temp"
      (1020339 'move' tmp[1020337](1020342 call isOwned[757990] lhs[1019910]))
      val tmp[1020358]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1020360]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1020362]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val tmp[1020859]:bool[10] "dead after last mention" "const" "temp"
      (1020861 'move' tmp[1020859](1020863 'deref' tmp[1020337]))
      (1020364 'move' call_tmp[1020362] tmp[1020859])
      (1020369 'move' tmp[1020360] call_tmp[1020362])
      if tmp[1020360]
      {
        const-val tmp[1020376]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1020378]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1020380 'move' call_tmp[1020378](1020386 call isEmpty[35061] lhs[1019910]))
        const-val call_tmp[1020387]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1020389 'move' call_tmp[1020387](1020392 call ![7494] call_tmp[1020378]))
        (1020394 'move' tmp[1020376] call_tmp[1020387])
        (1020399 'move' tmp[1020358] tmp[1020376])
      }
      {
        (1020405 'move' tmp[1020358] 0)
      }
      const-val call_tmp[1020411]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1020413 'move' call_tmp[1020411] tmp[1020358])
      if call_tmp[1020411]
      {
        ref call_tmp[1020420]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "temp"
        (1020422 'move' call_tmp[1020420](1020425 call buff[757964] lhs[1019910]))
        val coerce_tmp[1020868]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1020872 'move' coerce_tmp[1020868](1020870 'deref' call_tmp[1020420]))
        (1020429 call bufferFree[172912] coerce_tmp[1020868])
      }
      ref call_tmp[1020432]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
      (1020434 'move' call_tmp[1020432](1020437 call buffSize[757912] lhs[1019910]))
      (1020441 call =[435327] call_tmp[1020432] 0)
      ref call_tmp[1020445]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "temp"
      (1020447 'move' call_tmp[1020445](1020450 call buff[757964] lhs[1019910]))
      (1020454 call =[954224] call_tmp[1020445] nil[44])
    }
    ref call_tmp[1020458]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
    (1020460 'move' call_tmp[1020458](1020463 call buffLen[757886] lhs[1019910]))
    (1020467 call =[435327] call_tmp[1020458] buffLen[1019916])
    val call_tmp[1020471]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      ref call_tmp[1020494]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
      (1020496 'move' call_tmp[1020494](1020499 call cachedNumCodepoints[757938] lhs[1019910]))
      (1020503 call =[435327] call_tmp[1020494] numCodepoints[1019922])
    }
    label _end_reinitWithNewBuffer[1020507]
    (1020509 return _void[55])
  }
  function reinitWithOwnedBuffer[1020955](ref arg lhs[1020957]:_ref(string)[937939], const in arg buff[1020961]:c_ptr(uint(8))[937423], const in arg buffLen[1020963]:int(64)[13], const in arg buffSize[1020965]:int(64)[13], const in arg numCodepoints[1020969]:int(64)[13]) : void[4] "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val tmp[1020975]:bool[10] "dead after last mention" "maybe param" "temp"
    (1020977 'move' tmp[1020975](1020983 call isEmpty[35061] lhs[1020957]))
    val tmp[1020997]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1020999]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1021001]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1021003 'move' call_tmp[1021001] tmp[1020975])
    (1021008 'move' tmp[1020999] call_tmp[1021001])
    if tmp[1020999]
    {
      const-val tmp[1021015]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1021017]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1021019 'move' call_tmp[1021017](1021022 call ==[1020545] buff[1020961] nil[44]))
      (1021025 'move' tmp[1021015] call_tmp[1021017])
      (1021030 'move' tmp[1020997] tmp[1021015])
    }
    {
      (1021036 'move' tmp[1020997] 0)
    }
    const-val call_tmp[1021042]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1021044 'move' call_tmp[1021042] tmp[1020997])
    if call_tmp[1021042]
    {
      gotoReturn _end_reinitWithOwnedBuffer[1021375] _end_reinitWithOwnedBuffer[1021375]
    }
    const-val call_tmp[1021054]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1021056 'move' call_tmp[1021054](1021059 call !=[436012] buffLen[1020963] 0))
    const-val call_tmp[1021062]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1021064 'move' call_tmp[1021062] call_tmp[1021054])
    if call_tmp[1021062]
    {
      ref tmp[1021071]:_ref(bool)[937199] "dead after last mention" "maybe param" "temp"
      (1021073 'move' tmp[1021071](1021076 call isOwned[757990] lhs[1020957]))
      val tmp[1021092]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1021094]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1021096]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val tmp[1021396]:bool[10] "dead after last mention" "const" "temp"
      (1021398 'move' tmp[1021396](1021400 'deref' tmp[1021071]))
      (1021098 'move' call_tmp[1021096] tmp[1021396])
      (1021103 'move' tmp[1021094] call_tmp[1021096])
      if tmp[1021094]
      {
        const-val tmp[1021110]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1021112]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1021114 'move' call_tmp[1021112](1021120 call isEmpty[35061] lhs[1020957]))
        const-val call_tmp[1021121]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1021123 'move' call_tmp[1021121](1021126 call ![7494] call_tmp[1021112]))
        (1021128 'move' tmp[1021110] call_tmp[1021121])
        (1021133 'move' tmp[1021092] tmp[1021110])
      }
      {
        (1021139 'move' tmp[1021092] 0)
      }
      const-val call_tmp[1021145]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1021147 'move' call_tmp[1021145] tmp[1021092])
      if call_tmp[1021145]
      {
        ref call_tmp[1021154]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "temp"
        (1021156 'move' call_tmp[1021154](1021159 call buff[757964] lhs[1020957]))
        val coerce_tmp[1021405]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1021409 'move' coerce_tmp[1021405](1021407 'deref' call_tmp[1021154]))
        (1021163 call bufferFree[172912] coerce_tmp[1021405])
      }
      ref call_tmp[1021166]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "temp"
      (1021168 'move' call_tmp[1021166](1021171 call buff[757964] lhs[1020957]))
      (1021175 call =[954213] call_tmp[1021166] buff[1020961])
      ref call_tmp[1021179]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
      (1021181 'move' call_tmp[1021179](1021184 call buffSize[757912] lhs[1020957]))
      (1021188 call =[435327] call_tmp[1021179] buffSize[1020965])
    }
    {
      ref tmp[1021192]:_ref(bool)[937199] "dead after last mention" "maybe param" "temp"
      (1021194 'move' tmp[1021192](1021197 call isOwned[757990] lhs[1020957]))
      val tmp[1021213]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1021215]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1021217]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val tmp[1021420]:bool[10] "dead after last mention" "const" "temp"
      (1021422 'move' tmp[1021420](1021424 'deref' tmp[1021192]))
      (1021219 'move' call_tmp[1021217] tmp[1021420])
      (1021224 'move' tmp[1021215] call_tmp[1021217])
      if tmp[1021215]
      {
        const-val tmp[1021231]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1021233]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1021235 'move' call_tmp[1021233](1021241 call isEmpty[35061] lhs[1020957]))
        const-val call_tmp[1021242]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1021244 'move' call_tmp[1021242](1021247 call ![7494] call_tmp[1021233]))
        (1021249 'move' tmp[1021231] call_tmp[1021242])
        (1021254 'move' tmp[1021213] tmp[1021231])
      }
      {
        (1021260 'move' tmp[1021213] 0)
      }
      const-val call_tmp[1021266]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1021268 'move' call_tmp[1021266] tmp[1021213])
      if call_tmp[1021266]
      {
        ref call_tmp[1021275]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "temp"
        (1021277 'move' call_tmp[1021275](1021280 call buff[757964] lhs[1020957]))
        val coerce_tmp[1021429]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1021433 'move' coerce_tmp[1021429](1021431 'deref' call_tmp[1021275]))
        (1021284 call bufferFree[172912] coerce_tmp[1021429])
      }
      ref call_tmp[1021287]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "temp"
      (1021289 'move' call_tmp[1021287](1021292 call buff[757964] lhs[1020957]))
      (1021296 call =[954213] call_tmp[1021287] buff[1020961])
      ref call_tmp[1021300]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
      (1021302 'move' call_tmp[1021300](1021305 call buffSize[757912] lhs[1020957]))
      (1021309 call =[435327] call_tmp[1021300] 0)
    }
    ref call_tmp[1021313]:_ref(bool)[937199] "dead after last mention" "maybe param" "temp"
    (1021315 'move' call_tmp[1021313](1021318 call isOwned[757990] lhs[1020957]))
    (1021322 call =[435174] call_tmp[1021313] 1)
    ref call_tmp[1021326]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
    (1021328 'move' call_tmp[1021326](1021331 call buffLen[757886] lhs[1020957]))
    (1021335 call =[435327] call_tmp[1021326] buffLen[1020963])
    val call_tmp[1021339]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      ref call_tmp[1021362]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
      (1021364 'move' call_tmp[1021362](1021367 call cachedNumCodepoints[757938] lhs[1020957]))
      (1021371 call =[435327] call_tmp[1021362] numCodepoints[1020969])
    }
    label _end_reinitWithOwnedBuffer[1021375]
    (1021377 return _void[55])
  }
  function doAssign[1019168](ref arg lhs[1019170]:_ref(string)[937939], const  ref arg rhs[1019175]:string[26]) : void[4] "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[1019181]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val tmp[1019543]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1019567]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    ref call_tmp[1019569]:_ref(int(32))[936626] "dead after last mention" "maybe param" "temp"
    (1019571 'move' call_tmp[1019569](1019574 call locale_id[758042] lhs[1019170]))
    const-val call_tmp[1019577]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1019730]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1019734 'move' coerce_tmp[1019730](1019732 'deref' call_tmp[1019569]))
    (1019579 'move' call_tmp[1019577](1019582 call ==[435606] coerce_tmp[1019730] chpl_nodeID[208152]))
    (1019585 'move' tmp[1019567] call_tmp[1019577])
    (1019590 'move' tmp[1019543] tmp[1019567])
    const-val call_tmp[1019596]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1019598 'move' call_tmp[1019596] tmp[1019543])
    if call_tmp[1019596]
    {
      (1019606 call helpMe[1019192] lhs[1019170] rhs[1019175])
    }
    {
      const-val tmp[1019610]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
      ref call_tmp[1019612]:_ref(int(32))[936626] "dead after last mention" "maybe param" "temp"
      (1019614 'move' call_tmp[1019612](1019617 call locale_id[758042] lhs[1019170]))
      const-val call_tmp[1019620]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val coerce_tmp[1021454]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1021458 'move' coerce_tmp[1021454](1021456 'deref' call_tmp[1019612]))
      (1019622 'move' call_tmp[1019620](1019625 call chpl_buildLocaleID[209412] coerce_tmp[1021454] c_sublocid_any[89875]))
      const-val call_tmp[1019628]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
      (1019630 'move' call_tmp[1019628](1019632 'chpl_on_locale_num' call_tmp[1019620]))
      (1019634 'move' tmp[1019610] call_tmp[1019628])
      val isdirect[2088111]:bool[10] "temp"
      (2088116 'move' isdirect[2088111](2088113 call chpl_doDirectExecuteOn[187423] tmp[1019610]))
      if isdirect[2088111]
      {
        (2088120 call on_fn[1019641] lhs[1019170] rhs[1019175])
      }
      {
        val _args_foron_fn[2088138]:_class_localson_fn[2088128] "temp"
        (2088142 'move' _args_foron_fn[2088138](2088140 'stack allocate class' _class_localson_fn[2088128]))
        (2088144 '.=' _args_foron_fn[2088138] _0_tmp[2088131] tmp[1019610])
        ref tmp[2088148]:string[26] "temp"
        (2088152 'move' tmp[2088148](2088150 'set reference' lhs[1019170]))
        (2088154 '.=' _args_foron_fn[2088138] _1_lhs[2088133] tmp[2088148])
        ref tmp[2088158]:string[26] "temp"
        (2088162 'move' tmp[2088158](2088160 'set reference' rhs[1019175]))
        (2088164 '.=' _args_foron_fn[2088138] _2_rhs[2088135] tmp[2088158])
        val _args_vforon_fn[2088168]:c_void_ptr[149] "temp"
        (2088172 'move' _args_vforon_fn[2088168](2088170 'cast_to_void_star' _args_foron_fn[2088138]))
        val _args_sizeon_fn[2088174]:int(64)[13] "temp"
        (2088178 'move' _args_sizeon_fn[2088174](2088176 'sizeof_bundle' _class_localson_fn[2088128]))
        on(2088218 call wrapon_fn[2088180] tmp[1019610] _args_vforon_fn[2088168] _args_sizeon_fn[2088174] _args_foron_fn[2088138])
      }
      {
      }
    }
    (1019656 return _void[55])
  }
  function doConcat[980863](const  ref arg s0[980865]:string[26], const  ref arg s1[980870]:string[26], ref arg _retArg[1832165]:_ref(string)[937939]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[980875]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[980883]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[980894]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
    (980896 'move' call_tmp[980894](980899 call buffLen[757886] s0[980865]))
    const-val s0len[980902]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[981312]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (981316 'move' coerce_tmp[981312](981314 'deref' call_tmp[980894]))
    (1842710 '=' s0len[980902] coerce_tmp[981312])
    (980904 'noop')
    const-val call_tmp[980908]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (980910 'move' call_tmp[980908](980913 call ==[435628] s0len[980902] 0))
    const-val call_tmp[980916]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (980918 'move' call_tmp[980916] call_tmp[980908])
    if call_tmp[980916]
    {
      val call_tmp[980925]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[980931]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val _formal_tmp_in_x[981341]:string[26] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (981345 'move' _formal_tmp_in_x[981341](981342 call chpl__initCopy[981348] s1[980870]))
      const-val ret_tmp[1832173]:string[26] "temp"
      (981320 call _removed_cast[981323] _formal_tmp_in_x[981341] ret_tmp[1832173])
      (1832176 'move' call_tmp[980931] ret_tmp[1832173])
      val call_tmp[980939]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (981581 'move' ret[980875] call_tmp[980931])
      gotoReturn _end_doConcat[981239] _end_doConcat[981239]
    }
    ref call_tmp[980953]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
    (980955 'move' call_tmp[980953](980958 call buffLen[757886] s1[980870]))
    const-val s1len[980961]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[981397]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (981401 'move' coerce_tmp[981397](981399 'deref' call_tmp[980953]))
    (1842713 '=' s1len[980961] coerce_tmp[981397])
    (980963 'noop')
    const-val call_tmp[980967]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (980969 'move' call_tmp[980967](980972 call ==[435628] s1len[980961] 0))
    const-val call_tmp[980975]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (980977 'move' call_tmp[980975] call_tmp[980967])
    if call_tmp[980975]
    {
      val call_tmp[980984]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (981584 'move' ret[980875](1832169 call chpl__initCopy[981348] s0[980865]))
      gotoReturn _end_doConcat[981239] _end_doConcat[981239]
    }
    const-val call_tmp[980998]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (981000 'move' call_tmp[980998](981003 call +[439636] s0len[980902] s1len[980961]))
    const-val buffLen[981006]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (981008 'move' buffLen[981006] call_tmp[980998])
    const-val call_tmp[981012]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (981014 'move' call_tmp[981012](981017 call +[949666] buffLen[981006]))
    const-val call_tmp[981020]:(c_ptr(uint(8)),int(64))[955208] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1831975]:(c_ptr(uint(8)),int(64))[955208] "temp"
    (981025 call bufferAlloc[955018] call_tmp[981012] ret_tmp[1831975])
    (1831978 'move' call_tmp[981020] ret_tmp[1831975])
    const-val tmp[981027]:(c_ptr(uint(8)),int(64))[955208] "dead at end of block" "insert auto destroy" "temp"
    (981029 'move' tmp[981027] call_tmp[981020])
    1
    ref call_tmp[981037]:_ref(c_ptr(uint(8)))[937432] "dead at end of block" "maybe param" "temp"
    (981039 'move' call_tmp[981037](981415 '.' tmp[981027] x0[955204]))
    val buff[981044]:c_ptr(uint(8))[937423] "dead at end of block" "insert auto destroy"
    val coerce_tmp[981420]:c_ptr(uint(8))[937423] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (981424 'move' coerce_tmp[981420](981422 'deref' call_tmp[981037]))
    (1842716 '=' buff[981044] coerce_tmp[981420])
    (981046 'noop')
    ref call_tmp[981049]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
    (981051 'move' call_tmp[981049](981429 '.' tmp[981027] x1[955206]))
    const-val buffSize[981056]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[981434]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (981438 'move' coerce_tmp[981434](981436 'deref' call_tmp[981049]))
    (1842719 '=' buffSize[981056] coerce_tmp[981434])
    (981058 'noop')
    ref call_tmp[981062]:_ref(int(32))[936626] "dead after last mention" "maybe param" "reference to a const" "temp"
    (981064 'move' call_tmp[981062](981067 call locale_id[758042] s0[980865]))
    ref call_tmp[981070]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "reference to a const" "temp"
    (981072 'move' call_tmp[981070](981075 call buff[757964] s0[980865]))
    const-val coerce_tmp[981449]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (981453 'move' coerce_tmp[981449](981451 'deref' call_tmp[981062]))
    const-val coerce_tmp[981455]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (981461 'move' coerce_tmp[981455](981457 'cast' int(64)[13] coerce_tmp[981449]))
    val coerce_tmp[981463]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (981467 'move' coerce_tmp[981463](981465 'deref' call_tmp[981070]))
    (981079 call bufferMemcpy[172996] buff[981044] coerce_tmp[981455] coerce_tmp[981463] s0len[980902] 0 0)
    ref call_tmp[981091]:_ref(int(32))[936626] "dead after last mention" "maybe param" "reference to a const" "temp"
    (981093 'move' call_tmp[981091](981096 call locale_id[758042] s1[980870]))
    ref call_tmp[981099]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "reference to a const" "temp"
    (981101 'move' call_tmp[981099](981104 call buff[757964] s1[980870]))
    const-val coerce_tmp[981514]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (981518 'move' coerce_tmp[981514](981516 'deref' call_tmp[981091]))
    const-val coerce_tmp[981520]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (981526 'move' coerce_tmp[981520](981522 'cast' int(64)[13] coerce_tmp[981514]))
    val coerce_tmp[981528]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (981532 'move' coerce_tmp[981528](981530 'deref' call_tmp[981099]))
    (981108 call bufferMemcpy[172996] buff[981044] coerce_tmp[981520] coerce_tmp[981528] s1len[980961] s0len[980902] 0)
    ref call_tmp[981123]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
    (981125 'move' call_tmp[981123](981128 call this[954091] buff[981044] buffLen[981006]))
    const-val coerce_tmp[981547]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (981553 'move' coerce_tmp[981547](981549 'cast' uint(8)[100] 0))
    (981131 call =[435348] call_tmp[981123] coerce_tmp[981547])
    val ret[981137]:string[26] "dead at end of block" "insert auto destroy"
    val call_tmp[981139]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (981589 call init[30760] ret[981137])
    val call_tmp[981151]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      ref call_tmp[981174]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
      (981176 'move' call_tmp[981174](981179 call cachedNumCodepoints[757938] ret[981137]))
      ref call_tmp[981182]:_ref(int(64))[936572] "dead after last mention" "maybe param" "reference to a const" "temp"
      (981184 'move' call_tmp[981182](981187 call cachedNumCodepoints[757938] s0[980865]))
      ref call_tmp[981190]:_ref(int(64))[936572] "dead after last mention" "maybe param" "reference to a const" "temp"
      (981192 'move' call_tmp[981190](981195 call cachedNumCodepoints[757938] s1[980870]))
      const-val call_tmp[981198]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[981565]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (981569 'move' coerce_tmp[981565](981567 'deref' call_tmp[981182]))
      const-val coerce_tmp[981571]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (981575 'move' coerce_tmp[981571](981573 'deref' call_tmp[981190]))
      (981200 'move' call_tmp[981198](981203 call +[439636] coerce_tmp[981565] coerce_tmp[981571]))
      (981207 call =[435327] call_tmp[981174] call_tmp[981198])
    }
    (981214 call initWithOwnedBuffer[978895] ret[981137] buff[981044] buffLen[981006] buffSize[981056])
    val call_tmp[981224]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (981587 'move' ret[980875] ret[981137])
    (1842722 call chpl__autoDestroy[1465141] tmp[981027])
    gotoReturn _end_doConcat[981239] _end_doConcat[981239]
    label _end_doConcat[981239]
    (1832167 '=' _retArg[1832165] ret[980875])
    (1832171 return _void[55])
  }
  function doStripNoEnc[1107634](const  ref arg x[1107636]:_ref(string)[937939], const  ref arg chars[1107641]:string[26], const in arg leading[1107643]:bool[10], const in arg trailing[1107645]:bool[10], ref arg _retArg[1833788]:_ref(string)[937939]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1107650]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1107658]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1107660 'move' call_tmp[1107658](1107666 call isEmpty[35061] x[1107636]))
    const-val call_tmp[1107667]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1107669 'move' call_tmp[1107667] call_tmp[1107658])
    if call_tmp[1107667]
    {
      val call_tmp[1107680]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1107713]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1107719 'move' ret[1107650](1833792 call chpl__initCopy[981348] ""))
      gotoReturn _end_doStripNoEnc[1108227] _end_doStripNoEnc[1108227]
    }
    const-val call_tmp[1107727]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1107729 'move' call_tmp[1107727](1107735 call isEmpty[35061] chars[1107641]))
    const-val call_tmp[1107736]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1107738 'move' call_tmp[1107736] call_tmp[1107727])
    if call_tmp[1107736]
    {
      val call_tmp[1107745]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1121973 'move' ret[1107650](1121971 call chpl__autoCopy[1121975] x[1107636]))
      gotoReturn _end_doStripNoEnc[1108227] _end_doStripNoEnc[1108227]
    }
    const-val call_tmp[1107759]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1829509]:string[26] "temp"
    (1107767 call localize[32886] x[1107636] ret_tmp[1829509])
    (1829512 'move' call_tmp[1107759] ret_tmp[1829509])
    val call_tmp[1107768]:string[26] "dead after last mention" "maybe param" "temp" "type variable"
    const localX[1107774]:string[26] "dead at end of block" "const" "insert auto destroy"
    (1107776 'move' localX[1107774] call_tmp[1107759])
    const-val call_tmp[1107781]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1829515]:string[26] "temp"
    (1107789 call localize[32886] chars[1107641] ret_tmp[1829515])
    (1829518 'move' call_tmp[1107781] ret_tmp[1829515])
    val call_tmp[1107790]:string[26] "dead after last mention" "maybe param" "temp" "type variable"
    const-val localChars[1107796]:string[26] "dead at end of block" "const" "insert auto destroy"
    (1107798 'move' localChars[1107796] call_tmp[1107781])
    val start[1107803]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1107805 'move' start[1107803] 0)
    ref call_tmp[1107810]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1107812 'move' call_tmp[1107810](1107815 call buffLen[757886] localX[1107774]))
    const-val call_tmp[1107818]:int(64)[13] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1108242]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1108246 'move' coerce_tmp[1108242](1108244 'deref' call_tmp[1107810]))
    (1107820 'move' call_tmp[1107818](1107823 call -[962226] coerce_tmp[1108242]))
    val end[1107826]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1107828 'move' end[1107826] call_tmp[1107818])
    const-val call_tmp[1107834]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1107836 'move' call_tmp[1107834] leading[1107643])
    if call_tmp[1107834]
    {
      {
        const-val _iterator[1107846]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108566] "dead at end of block" "expr temp" "insert auto destroy" "temp"
        const-val call_tmp[1107848]:range(int(64),bounded,false)[1026814] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1829389]:range(int(64),bounded,false)[1026814] "temp"
        (1107853 call indices[32785] x[1107636] ret_tmp[1829389])
        (1829392 'move' call_tmp[1107848] ret_tmp[1829389])
        val call_tmp[1107856]:_ic_these_range_int64_t_bounded_F[1096703] "dead at end of block" "expr temp" "maybe param" "temp"
        (1107858 'move' call_tmp[1107856](1107861 call _getIterator[1095320] call_tmp[1107848]))
        const-val call_tmp[1107863]:_ir_chpl_bytes__ref_string[1108262] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1829605]:_ir_chpl_bytes__ref_string[1108262] "temp"
        (1107871 call chpl_bytes[33574] localX[1107774] ret_tmp[1829605])
        (1829608 'move' call_tmp[1107863] ret_tmp[1829605])
        val call_tmp[1107872]:_ic_chpl_bytes__ref_string[1108256] "dead at end of block" "expr temp" "maybe param" "temp"
        (1107874 'move' call_tmp[1107872](1107877 call _getIterator[1108271] call_tmp[1107863]))
        const-val ret_tmp[1833802]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108566] "temp"
        (1107882 call _build_tuple[1108524] call_tmp[1107856] call_tmp[1107872] ret_tmp[1833802])
        (1833805 'move' _iterator[1107846] ret_tmp[1833802])
        val _iterator[1912296]:_ic_these_range_int64_t_bounded_F[1096703] "temp"
        (1912302 'move' _iterator[1912296](1912299 '.v' _iterator[1107846] x0[1108562]))
        val _iterator[1912309]:_ic_chpl_bytes__ref_string[1108256] "temp"
        (1912315 'move' _iterator[1912309](1912312 '.v' _iterator[1107846] x1[1108564]))
        {
          (1912324 call zip1[1096738] _iterator[1912296])
        }
        {
          (1912359 call zip1[1108291] _iterator[1912309])
        }
        const-val isFinished[1912385]:bool[10] "temp"
        val hasMore[1912384]:bool[10] "temp"
        CForLoop[1912432]
        {
          val _indexOfInterest[1912433]:(int(64),uint(8))[1111040] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          {
            (1912437 call zip2[1108300] _iterator[1912309])
          }
          {
            const-val retTmp[1912440]:int(64)[13] "temp"
            (1912442 'move' retTmp[1912440](1912445 call hasMore[1108327] _iterator[1912309]))
            (1912447 'move' hasMore[1912384](1912449 'cast' bool[10] retTmp[1912440]))
          }
          (1912452 'move' isFinished[1912385](1912454 '!' hasMore[1912384]))
          if isFinished[1912385]
          {
            (1912458 'chpl_error' c"zippered iterations have non-equal lengths")
          }
          {
            (1912462 'move' _index[1912477](1912465 call getValue[1108336] _iterator[1912309]))
          }
          {
            (1912469 call zip2[1096747] _iterator[1912296])
          }
          {
            (1912472 'move' _index[1912483](1912475 call getValue[1096783] _iterator[1912296]))
          }
          val _index[1912477]:uint(8)[100] "temp"
          (1912479 '.=' _indexOfInterest[1912433] x1[1111038] _index[1912477])
          val _index[1912483]:int(64)[13] "temp"
          (1912485 '.=' _indexOfInterest[1912433] x0[1111036] _index[1912483])
          1
          const-val i[1912490]:int(64)[13] "const" "index var" "insert auto destroy"
          (1912492 'move' i[1912490](1912494 '.v' _indexOfInterest[1912433] x0[1111036]))
          const-val xChar[1912497]:uint(8)[100] "const" "index var" "insert auto destroy"
          (1912499 'move' xChar[1912497](1912501 '.v' _indexOfInterest[1912433] x1[1111038]))
          {
            {
              val _indexOfInterest[1912506]:uint(8)[100] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[1912508]:_ic_chpl_bytes__ref_string[1108256] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[1912510]:_ir_chpl_bytes__ref_string[1108262] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[1912512]:_ir_chpl_bytes__ref_string[1108262] "temp"
              (1912515 call chpl_bytes[33574] localChars[1107796] ret_tmp[1912512])
              (1912518 'move' call_tmp[1912510] ret_tmp[1912512])
              (1912521 'move' _iterator[1912508](1912524 call _getIterator[1108271] call_tmp[1912510]))
              {
                val ret[1973155]:_ir_chpl_bytes__ref_string[1108262] "dead at end of block" "RVV" "temp"
                const-val call_tmp[1973157]:string[26] "dead at end of block" "maybe param" "temp"
                const-val ret_tmp[1973159]:string[26] "temp"
                ref this[1973783]:_ref(string)[937939] "temp"
                (1973788 'move' this[1973783](1973785 '.v' _iterator[1912508] F0_this[1998453]))
                (1973162 call localize[32886] this[1973783] ret_tmp[1973159])
                (1973165 'move' call_tmp[1973157] ret_tmp[1973159])
                val localThis[1973168]:string[26] "dead at end of block" "insert auto destroy"
                (1973170 'move' localThis[1973168] call_tmp[1973157])
                val _indexOfInterest[1973173]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1973175]:_ic_chpl_direct_counted_range_iter[1103790] "dead at end of block" "expr temp" "temp"
                ref call_tmp[1973177]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
                (1973179 'move' call_tmp[1973177](1973182 call buffLen[757886] localThis[1973168]))
                const-val call_tmp[1973184]:_ir_chpl_direct_counted_range_iter[1103796] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1973186]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1973188 'move' coerce_tmp[1973186](1973190 'deref' call_tmp[1973177]))
                const-val ret_tmp[1973192]:_ir_chpl_direct_counted_range_iter[1103796] "temp"
                (1973195 call chpl_direct_counted_range_iter[457996] 0 coerce_tmp[1973186] ret_tmp[1973192])
                (1973199 'move' call_tmp[1973184] ret_tmp[1973192])
                (1973202 'move' _iterator[1973175](1973205 call _getIterator[1103805] call_tmp[1973184]))
                val ret[1973207]:_ir_chpl_direct_counted_range_iter[1103796] "dead after last mention" "RVV" "temp"
                val _indexOfInterest[1973209]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1973211]:_ic_chpl_direct_counted_range_iter_helper[1103540] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[1973213]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[1973215]:_ir_chpl_direct_counted_range_iter_helper[1103546] "temp"
                const-val low[1973217]:int(64)[13] "temp"
                (1973219 'move' low[1973217](1973221 '.v' _iterator[1973175] F0_low[2010431]))
                const-val count[1973224]:int(64)[13] "temp"
                (1973226 'move' count[1973224](1973228 '.v' _iterator[1973175] F1_count[2010435]))
                (1973232 call chpl_direct_counted_range_iter_helper[1102098] low[1973217] count[1973224] ret_tmp[1973215])
                (1973236 'move' call_tmp[1973213] ret_tmp[1973215])
                (1973239 'move' _iterator[1973211](1973242 call _getIterator[1103555] call_tmp[1973213]))
                val ret[1973244]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead after last mention" "RVV" "temp"
                val call_tmp[1973246]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val tmp[1973248]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val tmp[1973250]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                const-val call_tmp[1973252]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[1973254]:int(64)[13] "temp"
                (1973256 'move' count[1973254](1973258 '.v' _iterator[1973211] F1_count[2014907]))
                (1973261 'move' call_tmp[1973252](1973264 call <[948398] count[1973254]))
                (1973266 'move' tmp[1973250] call_tmp[1973252])
                (1973269 'move' tmp[1973248] call_tmp[1973252])
                const-val call_tmp[1973272]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1973274 'move' call_tmp[1973272] call_tmp[1973252])
                if call_tmp[1973252]
                {
                  (1973280 call boundsCheckHalt[210167] "With a negative count, the range must have a last index.")
                }
                const-val tmp[1973283]:2*int(64)[1040056] "dead at end of block" "const" "insert auto destroy" "temp"
                val tmp[1973285]:2*int(64)[1040056] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                const-val tmp[1973287]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1973289]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[1973291]:int(64)[13] "temp"
                (1973293 'move' count[1973291](1973295 '.v' _iterator[1973211] F1_count[2014907]))
                (1973298 'move' call_tmp[1973289](1973301 call ==[435628] count[1973291] 0))
                (1973304 'move' tmp[1973287] call_tmp[1973289])
                if call_tmp[1973289]
                {
                  const-val tmp[1973309]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[1973311]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[1973313]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[1973315]:int(64)[13] "temp"
                  (1973317 'move' low[1973315](1973319 '.v' _iterator[1973211] F0_low[2014903]))
                  (1973322 'move' call_tmp[1973313](1973325 call _cast[956034] low[1973315]))
                  const-val call_tmp[1973327]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1973329]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                  (1973331 'move' coerce_tmp[1973329](1973333 'cast' uint(64)[115] 1))
                  (1973336 'move' call_tmp[1973327](1973339 call -[962193] call_tmp[1973313]))
                  const-val call_tmp[1973341]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  (1973343 'move' call_tmp[1973341](1973346 call _cast[953543] call_tmp[1973327]))
                  const-val ret_tmp[1973348]:2*int(64)[1040056] "temp"
                  const-val low[1973350]:int(64)[13] "temp"
                  (1973352 'move' low[1973350](1973354 '.v' _iterator[1973211] F0_low[2014903]))
                  (1973358 call _build_tuple[1040014] low[1973350] call_tmp[1973341] ret_tmp[1973348])
                  (1973362 'move' tmp[1973309] ret_tmp[1973348])
                  (1973365 'move' tmp[1973285] tmp[1973309])
                }
                {
                  const-val tmp[1973369]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[1973371]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[1973373]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[1973375]:int(64)[13] "temp"
                  (1973377 'move' count[1973375](1973379 '.v' _iterator[1973211] F1_count[2014907]))
                  (1973382 'move' call_tmp[1973373] count[1973375])
                  const-val call_tmp[1973385]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[1973387]:int(64)[13] "temp"
                  (1973389 'move' count[1973387](1973391 '.v' _iterator[1973211] F1_count[2014907]))
                  (1973394 'move' call_tmp[1973385](1973397 call -[962226] count[1973387]))
                  const-val call_tmp[1973399]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[1973401]:int(64)[13] "temp"
                  (1973403 'move' low[1973401](1973405 '.v' _iterator[1973211] F0_low[2014903]))
                  (1973408 'move' call_tmp[1973399](1973411 call +[439636] low[1973401] call_tmp[1973385]))
                  const-val ret_tmp[1973414]:2*int(64)[1040056] "temp"
                  const-val low[1973416]:int(64)[13] "temp"
                  (1973418 'move' low[1973416](1973420 '.v' _iterator[1973211] F0_low[2014903]))
                  (1973424 call _build_tuple[1040014] low[1973416] call_tmp[1973399] ret_tmp[1973414])
                  (1973428 'move' tmp[1973369] ret_tmp[1973414])
                  (1973431 'move' tmp[1973285] tmp[1973369])
                }
                (1973435 '=' tmp[1973283] tmp[1973285])
                (1973438 'noop')
                1
                ref call_tmp[1973440]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1973442 'move' call_tmp[1973440](1973444 '.' tmp[1973283] x0[1040052]))
                const-val start[1973447]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1973449]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (1973451 'move' coerce_tmp[1973449](1973453 'deref' call_tmp[1973440]))
                (1973455 '=' start[1973447] coerce_tmp[1973449])
                (1973458 'noop')
                ref call_tmp[1973459]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1973461 'move' call_tmp[1973459](1973463 '.' tmp[1973283] x1[1040054]))
                const-val end[1973466]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1973468]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (1973470 'move' coerce_tmp[1973468](1973472 'deref' call_tmp[1973459]))
                (1973474 '=' end[1973466] coerce_tmp[1973468])
                (1973477 'noop')
                val _indexOfInterest[1973478]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1973480]:_ic_chpl_direct_param_stride_range_iter[1103286] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[1973482]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[1973484]:_ir_chpl_direct_param_stride_range_iter[1103292] "temp"
                (1973487 call chpl_direct_param_stride_range_iter[1102524] coerce_tmp[1973449] coerce_tmp[1973468] ret_tmp[1973484])
                (1973491 'move' call_tmp[1973482] ret_tmp[1973484])
                (1973494 'move' _iterator[1973480](1973497 call _getIterator[1103301] call_tmp[1973482]))
                val ret[1973499]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead after last mention" "RVV" "temp"
                val call_tmp[1973501]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1973504 call chpl_range_check_stride[1102844])
                val i[1973505]:int(64)[13] "dead at end of block" "insert auto destroy"
                val call_tmp[1973507]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1973509 'move' i[1973505] 0)
                val call_tmp[1973512]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val default_arg_first[1973514]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val low[1973516]:int(64)[13] "temp"
                (1973518 'move' low[1973516](1973520 '.v' _iterator[1973480] F0_low[2016401]))
                (1973523 'move' default_arg_first[1973514](1973526 call chpl_checkIfRangeIterWillOverflow_default_first[1103198] low[1973516]))
                const-val default_arg_last[1973528]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val high[1973530]:int(64)[13] "temp"
                (1973532 'move' high[1973530](1973534 '.v' _iterator[1973480] F1_high[2016405]))
                (1973537 'move' default_arg_last[1973528](1973540 call chpl_checkIfRangeIterWillOverflow_default_last[1103226] high[1973530]))
                const-val _return_tmp_[1973542]:bool[10] "dead after last mention" "temp"
                const-val low[1973544]:int(64)[13] "temp"
                (1973546 'move' low[1973544](1973548 '.v' _iterator[1973480] F0_low[2016401]))
                const-val high[1973551]:int(64)[13] "temp"
                (1973553 'move' high[1973551](1973555 '.v' _iterator[1973480] F1_high[2016405]))
                (1973558 'move' _return_tmp_[1973542](1973561 call chpl_checkIfRangeIterWillOverflow[1096076] low[1973544] high[1973551] 1 default_arg_first[1973514] default_arg_last[1973528] 1))
                CForLoop[1973568]
                {
                  const-val yret[1973597]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (1973599 'move' yret[1973597] i[1973505])
                  const-val _yieldedIndex[1973602]:int(64)[13] "temp"
                  (1973604 'move' _yieldedIndex[1973602] i[1973505])
                  const-val i[1973607]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1973609 'move' i[1973607] _yieldedIndex[1973602])
                  const-val yret[1973612]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (1973614 'move' yret[1973612] _yieldedIndex[1973602])
                  const-val _yieldedIndex[1973617]:int(64)[13] "temp"
                  (1973619 'move' _yieldedIndex[1973617] _yieldedIndex[1973602])
                  const-val i[1973622]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1973624 'move' i[1973622] _yieldedIndex[1973617])
                  const-val yret[1973627]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (1973629 'move' yret[1973627] _yieldedIndex[1973617])
                  const-val _yieldedIndex[1973632]:int(64)[13] "temp"
                  (1973634 'move' _yieldedIndex[1973632] _yieldedIndex[1973617])
                  const-val i[1973637]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1973639 'move' i[1973637] _yieldedIndex[1973632])
                  const-val yret[1973642]:uint(8)[100] "dead after last mention" "YVV" "temp"
                  ref call_tmp[1973644]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[1973646]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "temp"
                  (1973648 'move' _this_tmp_[1973646](1973651 call buff[757964] localThis[1973168]))
                  val coerce_tmp[1973653]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1973655 'move' coerce_tmp[1973653](1973657 'deref' _this_tmp_[1973646]))
                  (1973659 'move' call_tmp[1973644](1973662 call this[954091] coerce_tmp[1973653] _yieldedIndex[1973632]))
                  const-val coerce_tmp[1973665]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                  (1973667 'move' coerce_tmp[1973665](1973669 'deref' call_tmp[1973644]))
                  (1973671 '=' yret[1973642] coerce_tmp[1973665])
                  (1973674 'noop')
                  const-val _yieldedIndex[1973722]:uint(8)[100] "temp"
                  (1973781 'move' _yieldedIndex[1973722] coerce_tmp[1973665])
                  {
                    const-val removeChar[1973724]:uint(8)[100] "const" "index var" "insert auto destroy"
                    (1973726 'move' removeChar[1973724] _yieldedIndex[1973722])
                    {
                      const-val call_tmp[1973730]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1973732 'move' call_tmp[1973730](1973735 call ==[435650] xChar[1912497] removeChar[1973724]))
                      const-val call_tmp[1973738]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1973740 'move' call_tmp[1973738] call_tmp[1973730])
                      if call_tmp[1973738]
                      {
                        const-val call_tmp[1973745]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1973747 'move' call_tmp[1973745](1973750 call +[949666] i[1912490]))
                        (1973753 call =[435327] start[1107803] call_tmp[1973745])
                        (1973766 call _freeIterator[1103474] _iterator[1973480])
                        (1973769 call chpl__autoDestroy[1534672] tmp[1973283])
                        (1973772 call _freeIterator[1103724] _iterator[1973211])
                        (1973775 call _freeIterator[1103974] _iterator[1973175])
                        (1973778 call chpl__autoDestroy[1461530] localThis[1973168])
                        (1973757 call _freeIterator[1109569] _iterator[1912508])
                        continue _continueLabel[1912576] _continueLabel[1912576]
                      }
                    }
                    label _continueLabel[1973762]
                  }
                  {
                    const-val low[1973570]:int(64)[13] "temp"
                    (1973572 'move' low[1973570](1973574 '.v' _iterator[1973480] F0_low[2016401]))
                    (1973577 '=' i[1973505] low[1973570])
                  }
                  {
                    const-val high[1973581]:int(64)[13] "temp"
                    (1973583 'move' high[1973581](1973585 '.v' _iterator[1973480] F1_high[2016405]))
                    (1973588 '<=' i[1973505] high[1973581])
                  }
                  {
                    val call_tmp[1973592]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    (1973594 '+=' i[1973505] 1)
                  }
                }
                label _endchpl_direct_param_stride_range_iter[1973697]
                (1973700 call _freeIterator[1103474] _iterator[1973480])
                (1973703 call chpl__autoDestroy[1534672] tmp[1973283])
                label _endchpl_direct_counted_range_iter_helper[1973705]
                (1973708 call _freeIterator[1103724] _iterator[1973211])
                label _endchpl_direct_counted_range_iter[1973710]
                (1973713 call _freeIterator[1103974] _iterator[1973175])
                (1973716 call chpl__autoDestroy[1461530] localThis[1973168])
                label _endchpl_bytes[1973718]
              }
              label _breakLabel[1912569]
              (1912572 call _freeIterator[1109569] _iterator[1912508])
            }
            ref moreRef1[1912636]:_ref(int(64))[936572] "temp"
            (1912638 'move' moreRef1[1912636](1912640 '.' _iterator[1912296] more[1096706]))
            const-val moreVal1[1912643]:int(64)[13] "const" "temp"
            (1912645 '=' moreVal1[1912643] moreRef1[1912636])
            const-val moreValNeg1[1912648]:int(64)[13] "const" "temp"
            (1912650 'move' moreValNeg1[1912648](1912652 'u-' moreVal1[1912643]))
            (1912654 '=' moreRef1[1912636] moreValNeg1[1912648])
            (1912658 call advance[1096729] _iterator[1912296])
            ref moreRef2[1912660]:_ref(int(64))[936572] "temp"
            (1912662 'move' moreRef2[1912660](1912664 '.' _iterator[1912309] more[1108259]))
            const-val moreVal2[1912667]:int(64)[13] "const" "temp"
            (1912669 '=' moreVal2[1912667] moreRef2[1912660])
            const-val moreValNeg2[1912672]:int(64)[13] "const" "temp"
            (1912674 'move' moreValNeg2[1912672](1912676 'u-' moreVal2[1912667]))
            (1912678 '=' moreRef2[1912660] moreValNeg2[1912672])
            (1912682 call advance[1108282] _iterator[1912309])
            break _breakLabel[1108010] _breakLabel[1108010]
          }
          label _continueLabel[1912576]
          {
            (1912580 call zip3[1096756] _iterator[1912296])
          }
          {
            (1912584 call zip3[1108309] _iterator[1912309])
          }
          {
            {
              (1912334 call init[1096792] _iterator[1912296])
            }
            {
              (1912369 call init[1108345] _iterator[1912309])
            }
          }
          {
            (1912350 call hasMore[1096774] _iterator[1912296])
          }
          {
            {
              (1912338 call incr[1096801] _iterator[1912296])
            }
            {
              (1912373 call incr[1108354] _iterator[1912309])
            }
          }
        }
        {
          const-val retTmp[1912419]:int(64)[13] "temp"
          (1912421 'move' retTmp[1912419](1912416 call hasMore[1108327] _iterator[1912309]))
          (1912426 'move' hasMore[1912384](1912423 'cast' bool[10] retTmp[1912419]))
        }
        if hasMore[1912384]
        {
          (1912411 'chpl_error' c"zippered iterations have non-equal lengths")
        }
        {
          (1912381 call zip4[1108318] _iterator[1912309])
        }
        {
          (1912346 call zip4[1096765] _iterator[1912296])
        }
        label _breakLabel[1108010]
        (1844380 call _freeIterator[1108724] _iterator[1107846])
        (1844382 call chpl__autoDestroy[1541417] _iterator[1107846])
        (1844385 call chpl__autoDestroy[1534375] call_tmp[1107848])
      }
    }
    const-val call_tmp[1108013]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1108015 'move' call_tmp[1108013] trailing[1107645])
    if call_tmp[1108013]
    {
      (1108030 call =[435327] end[1107826] -1)
      {
        const-val _iterator[1108038]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108566] "dead at end of block" "expr temp" "insert auto destroy" "temp"
        const-val call_tmp[1108040]:range(int(64),bounded,false)[1026814] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1829395]:range(int(64),bounded,false)[1026814] "temp"
        (1108045 call indices[32785] x[1107636] ret_tmp[1829395])
        (1829398 'move' call_tmp[1108040] ret_tmp[1829395])
        val call_tmp[1108048]:_ic_these_range_int64_t_bounded_F[1096703] "dead at end of block" "expr temp" "maybe param" "temp"
        (1108050 'move' call_tmp[1108048](1108053 call _getIterator[1095320] call_tmp[1108040]))
        const-val call_tmp[1108055]:_ir_chpl_bytes__ref_string[1108262] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1829617]:_ir_chpl_bytes__ref_string[1108262] "temp"
        (1108063 call chpl_bytes[33574] localX[1107774] ret_tmp[1829617])
        (1829620 'move' call_tmp[1108055] ret_tmp[1829617])
        val call_tmp[1108064]:_ic_chpl_bytes__ref_string[1108256] "dead at end of block" "expr temp" "maybe param" "temp"
        (1108066 'move' call_tmp[1108064](1108069 call _getIterator[1108271] call_tmp[1108055]))
        const-val ret_tmp[1833808]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108566] "temp"
        (1108074 call _build_tuple[1108524] call_tmp[1108048] call_tmp[1108064] ret_tmp[1833808])
        (1833811 'move' _iterator[1108038] ret_tmp[1833808])
        val _iterator[1912686]:_ic_these_range_int64_t_bounded_F[1096703] "temp"
        (1912692 'move' _iterator[1912686](1912689 '.v' _iterator[1108038] x0[1108562]))
        val _iterator[1912699]:_ic_chpl_bytes__ref_string[1108256] "temp"
        (1912705 'move' _iterator[1912699](1912702 '.v' _iterator[1108038] x1[1108564]))
        {
          (1912714 call zip1[1096738] _iterator[1912686])
        }
        {
          (1912749 call zip1[1108291] _iterator[1912699])
        }
        const-val isFinished[1912775]:bool[10] "temp"
        val hasMore[1912774]:bool[10] "temp"
        CForLoop[1912822]
        {
          val _indexOfInterest[1912823]:(int(64),uint(8))[1111040] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          {
            (1912827 call zip2[1108300] _iterator[1912699])
          }
          {
            const-val retTmp[1912830]:int(64)[13] "temp"
            (1912832 'move' retTmp[1912830](1912835 call hasMore[1108327] _iterator[1912699]))
            (1912837 'move' hasMore[1912774](1912839 'cast' bool[10] retTmp[1912830]))
          }
          (1912842 'move' isFinished[1912775](1912844 '!' hasMore[1912774]))
          if isFinished[1912775]
          {
            (1912848 'chpl_error' c"zippered iterations have non-equal lengths")
          }
          {
            (1912852 'move' _index[1912867](1912855 call getValue[1108336] _iterator[1912699]))
          }
          {
            (1912859 call zip2[1096747] _iterator[1912686])
          }
          {
            (1912862 'move' _index[1912873](1912865 call getValue[1096783] _iterator[1912686]))
          }
          val _index[1912867]:uint(8)[100] "temp"
          (1912869 '.=' _indexOfInterest[1912823] x1[1111038] _index[1912867])
          val _index[1912873]:int(64)[13] "temp"
          (1912875 '.=' _indexOfInterest[1912823] x0[1111036] _index[1912873])
          1
          const-val i[1912880]:int(64)[13] "const" "index var" "insert auto destroy"
          (1912882 'move' i[1912880](1912884 '.v' _indexOfInterest[1912823] x0[1111036]))
          const-val xChar[1912887]:uint(8)[100] "const" "index var" "insert auto destroy"
          (1912889 'move' xChar[1912887](1912891 '.v' _indexOfInterest[1912823] x1[1111038]))
          {
            {
              val _indexOfInterest[1912896]:uint(8)[100] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[1912898]:_ic_chpl_bytes__ref_string[1108256] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[1912900]:_ir_chpl_bytes__ref_string[1108262] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[1912902]:_ir_chpl_bytes__ref_string[1108262] "temp"
              (1912905 call chpl_bytes[33574] localChars[1107796] ret_tmp[1912902])
              (1912908 'move' call_tmp[1912900] ret_tmp[1912902])
              (1912911 'move' _iterator[1912898](1912914 call _getIterator[1108271] call_tmp[1912900]))
              {
                val ret[1973791]:_ir_chpl_bytes__ref_string[1108262] "dead at end of block" "RVV" "temp"
                const-val call_tmp[1973793]:string[26] "dead at end of block" "maybe param" "temp"
                const-val ret_tmp[1973795]:string[26] "temp"
                ref this[1974408]:_ref(string)[937939] "temp"
                (1974413 'move' this[1974408](1974410 '.v' _iterator[1912898] F0_this[1998453]))
                (1973798 call localize[32886] this[1974408] ret_tmp[1973795])
                (1973801 'move' call_tmp[1973793] ret_tmp[1973795])
                val localThis[1973804]:string[26] "dead at end of block" "insert auto destroy"
                (1973806 'move' localThis[1973804] call_tmp[1973793])
                val _indexOfInterest[1973809]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1973811]:_ic_chpl_direct_counted_range_iter[1103790] "dead at end of block" "expr temp" "temp"
                ref call_tmp[1973813]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
                (1973815 'move' call_tmp[1973813](1973818 call buffLen[757886] localThis[1973804]))
                const-val call_tmp[1973820]:_ir_chpl_direct_counted_range_iter[1103796] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1973822]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1973824 'move' coerce_tmp[1973822](1973826 'deref' call_tmp[1973813]))
                const-val ret_tmp[1973828]:_ir_chpl_direct_counted_range_iter[1103796] "temp"
                (1973831 call chpl_direct_counted_range_iter[457996] 0 coerce_tmp[1973822] ret_tmp[1973828])
                (1973835 'move' call_tmp[1973820] ret_tmp[1973828])
                (1973838 'move' _iterator[1973811](1973841 call _getIterator[1103805] call_tmp[1973820]))
                val ret[1973843]:_ir_chpl_direct_counted_range_iter[1103796] "dead after last mention" "RVV" "temp"
                val _indexOfInterest[1973845]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1973847]:_ic_chpl_direct_counted_range_iter_helper[1103540] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[1973849]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[1973851]:_ir_chpl_direct_counted_range_iter_helper[1103546] "temp"
                const-val low[1973853]:int(64)[13] "temp"
                (1973855 'move' low[1973853](1973857 '.v' _iterator[1973811] F0_low[2010431]))
                const-val count[1973860]:int(64)[13] "temp"
                (1973862 'move' count[1973860](1973864 '.v' _iterator[1973811] F1_count[2010435]))
                (1973868 call chpl_direct_counted_range_iter_helper[1102098] low[1973853] count[1973860] ret_tmp[1973851])
                (1973872 'move' call_tmp[1973849] ret_tmp[1973851])
                (1973875 'move' _iterator[1973847](1973878 call _getIterator[1103555] call_tmp[1973849]))
                val ret[1973880]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead after last mention" "RVV" "temp"
                val call_tmp[1973882]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val tmp[1973884]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val tmp[1973886]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                const-val call_tmp[1973888]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[1973890]:int(64)[13] "temp"
                (1973892 'move' count[1973890](1973894 '.v' _iterator[1973847] F1_count[2014907]))
                (1973897 'move' call_tmp[1973888](1973900 call <[948398] count[1973890]))
                (1973902 'move' tmp[1973886] call_tmp[1973888])
                (1973905 'move' tmp[1973884] call_tmp[1973888])
                const-val call_tmp[1973908]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1973910 'move' call_tmp[1973908] call_tmp[1973888])
                if call_tmp[1973888]
                {
                  (1973916 call boundsCheckHalt[210167] "With a negative count, the range must have a last index.")
                }
                const-val tmp[1973919]:2*int(64)[1040056] "dead at end of block" "const" "insert auto destroy" "temp"
                val tmp[1973921]:2*int(64)[1040056] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                const-val tmp[1973923]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1973925]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[1973927]:int(64)[13] "temp"
                (1973929 'move' count[1973927](1973931 '.v' _iterator[1973847] F1_count[2014907]))
                (1973934 'move' call_tmp[1973925](1973937 call ==[435628] count[1973927] 0))
                (1973940 'move' tmp[1973923] call_tmp[1973925])
                if call_tmp[1973925]
                {
                  const-val tmp[1973945]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[1973947]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[1973949]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[1973951]:int(64)[13] "temp"
                  (1973953 'move' low[1973951](1973955 '.v' _iterator[1973847] F0_low[2014903]))
                  (1973958 'move' call_tmp[1973949](1973961 call _cast[956034] low[1973951]))
                  const-val call_tmp[1973963]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1973965]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                  (1973967 'move' coerce_tmp[1973965](1973969 'cast' uint(64)[115] 1))
                  (1973972 'move' call_tmp[1973963](1973975 call -[962193] call_tmp[1973949]))
                  const-val call_tmp[1973977]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  (1973979 'move' call_tmp[1973977](1973982 call _cast[953543] call_tmp[1973963]))
                  const-val ret_tmp[1973984]:2*int(64)[1040056] "temp"
                  const-val low[1973986]:int(64)[13] "temp"
                  (1973988 'move' low[1973986](1973990 '.v' _iterator[1973847] F0_low[2014903]))
                  (1973994 call _build_tuple[1040014] low[1973986] call_tmp[1973977] ret_tmp[1973984])
                  (1973998 'move' tmp[1973945] ret_tmp[1973984])
                  (1974001 'move' tmp[1973921] tmp[1973945])
                }
                {
                  const-val tmp[1974005]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[1974007]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[1974009]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[1974011]:int(64)[13] "temp"
                  (1974013 'move' count[1974011](1974015 '.v' _iterator[1973847] F1_count[2014907]))
                  (1974018 'move' call_tmp[1974009] count[1974011])
                  const-val call_tmp[1974021]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[1974023]:int(64)[13] "temp"
                  (1974025 'move' count[1974023](1974027 '.v' _iterator[1973847] F1_count[2014907]))
                  (1974030 'move' call_tmp[1974021](1974033 call -[962226] count[1974023]))
                  const-val call_tmp[1974035]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[1974037]:int(64)[13] "temp"
                  (1974039 'move' low[1974037](1974041 '.v' _iterator[1973847] F0_low[2014903]))
                  (1974044 'move' call_tmp[1974035](1974047 call +[439636] low[1974037] call_tmp[1974021]))
                  const-val ret_tmp[1974050]:2*int(64)[1040056] "temp"
                  const-val low[1974052]:int(64)[13] "temp"
                  (1974054 'move' low[1974052](1974056 '.v' _iterator[1973847] F0_low[2014903]))
                  (1974060 call _build_tuple[1040014] low[1974052] call_tmp[1974035] ret_tmp[1974050])
                  (1974064 'move' tmp[1974005] ret_tmp[1974050])
                  (1974067 'move' tmp[1973921] tmp[1974005])
                }
                (1974071 '=' tmp[1973919] tmp[1973921])
                (1974074 'noop')
                1
                ref call_tmp[1974076]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1974078 'move' call_tmp[1974076](1974080 '.' tmp[1973919] x0[1040052]))
                const-val start[1974083]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1974085]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (1974087 'move' coerce_tmp[1974085](1974089 'deref' call_tmp[1974076]))
                (1974091 '=' start[1974083] coerce_tmp[1974085])
                (1974094 'noop')
                ref call_tmp[1974095]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1974097 'move' call_tmp[1974095](1974099 '.' tmp[1973919] x1[1040054]))
                const-val end[1974102]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1974104]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (1974106 'move' coerce_tmp[1974104](1974108 'deref' call_tmp[1974095]))
                (1974110 '=' end[1974102] coerce_tmp[1974104])
                (1974113 'noop')
                val _indexOfInterest[1974114]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1974116]:_ic_chpl_direct_param_stride_range_iter[1103286] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[1974118]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[1974120]:_ir_chpl_direct_param_stride_range_iter[1103292] "temp"
                (1974123 call chpl_direct_param_stride_range_iter[1102524] coerce_tmp[1974085] coerce_tmp[1974104] ret_tmp[1974120])
                (1974127 'move' call_tmp[1974118] ret_tmp[1974120])
                (1974130 'move' _iterator[1974116](1974133 call _getIterator[1103301] call_tmp[1974118]))
                val ret[1974135]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead after last mention" "RVV" "temp"
                val call_tmp[1974137]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1974140 call chpl_range_check_stride[1102844])
                val i[1974141]:int(64)[13] "dead at end of block" "insert auto destroy"
                val call_tmp[1974143]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1974145 'move' i[1974141] 0)
                val call_tmp[1974148]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val default_arg_first[1974150]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val low[1974152]:int(64)[13] "temp"
                (1974154 'move' low[1974152](1974156 '.v' _iterator[1974116] F0_low[2016401]))
                (1974159 'move' default_arg_first[1974150](1974162 call chpl_checkIfRangeIterWillOverflow_default_first[1103198] low[1974152]))
                const-val default_arg_last[1974164]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val high[1974166]:int(64)[13] "temp"
                (1974168 'move' high[1974166](1974170 '.v' _iterator[1974116] F1_high[2016405]))
                (1974173 'move' default_arg_last[1974164](1974176 call chpl_checkIfRangeIterWillOverflow_default_last[1103226] high[1974166]))
                const-val _return_tmp_[1974178]:bool[10] "dead after last mention" "temp"
                const-val low[1974180]:int(64)[13] "temp"
                (1974182 'move' low[1974180](1974184 '.v' _iterator[1974116] F0_low[2016401]))
                const-val high[1974187]:int(64)[13] "temp"
                (1974189 'move' high[1974187](1974191 '.v' _iterator[1974116] F1_high[2016405]))
                (1974194 'move' _return_tmp_[1974178](1974197 call chpl_checkIfRangeIterWillOverflow[1096076] low[1974180] high[1974187] 1 default_arg_first[1974150] default_arg_last[1974164] 1))
                CForLoop[1974204]
                {
                  const-val yret[1974233]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (1974235 'move' yret[1974233] i[1974141])
                  const-val _yieldedIndex[1974238]:int(64)[13] "temp"
                  (1974240 'move' _yieldedIndex[1974238] i[1974141])
                  const-val i[1974243]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1974245 'move' i[1974243] _yieldedIndex[1974238])
                  const-val yret[1974248]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (1974250 'move' yret[1974248] _yieldedIndex[1974238])
                  const-val _yieldedIndex[1974253]:int(64)[13] "temp"
                  (1974255 'move' _yieldedIndex[1974253] _yieldedIndex[1974238])
                  const-val i[1974258]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1974260 'move' i[1974258] _yieldedIndex[1974253])
                  const-val yret[1974263]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (1974265 'move' yret[1974263] _yieldedIndex[1974253])
                  const-val _yieldedIndex[1974268]:int(64)[13] "temp"
                  (1974270 'move' _yieldedIndex[1974268] _yieldedIndex[1974253])
                  const-val i[1974273]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1974275 'move' i[1974273] _yieldedIndex[1974268])
                  const-val yret[1974278]:uint(8)[100] "dead after last mention" "YVV" "temp"
                  ref call_tmp[1974280]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[1974282]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "temp"
                  (1974284 'move' _this_tmp_[1974282](1974287 call buff[757964] localThis[1973804]))
                  val coerce_tmp[1974289]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1974291 'move' coerce_tmp[1974289](1974293 'deref' _this_tmp_[1974282]))
                  (1974295 'move' call_tmp[1974280](1974298 call this[954091] coerce_tmp[1974289] _yieldedIndex[1974268]))
                  const-val coerce_tmp[1974301]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                  (1974303 'move' coerce_tmp[1974301](1974305 'deref' call_tmp[1974280]))
                  (1974307 '=' yret[1974278] coerce_tmp[1974301])
                  (1974310 'noop')
                  const-val _yieldedIndex[1974358]:uint(8)[100] "temp"
                  (1974406 'move' _yieldedIndex[1974358] coerce_tmp[1974301])
                  {
                    const-val removeChar[1974360]:uint(8)[100] "const" "index var" "insert auto destroy"
                    (1974362 'move' removeChar[1974360] _yieldedIndex[1974358])
                    {
                      const-val call_tmp[1974366]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1974368 'move' call_tmp[1974366](1974371 call ==[435650] xChar[1912887] removeChar[1974360]))
                      const-val call_tmp[1974374]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1974376 'move' call_tmp[1974374] call_tmp[1974366])
                      if call_tmp[1974374]
                      {
                        (1974391 call _freeIterator[1103474] _iterator[1974116])
                        (1974394 call chpl__autoDestroy[1534672] tmp[1973919])
                        (1974397 call _freeIterator[1103724] _iterator[1973847])
                        (1974400 call _freeIterator[1103974] _iterator[1973811])
                        (1974403 call chpl__autoDestroy[1461530] localThis[1973804])
                        (1974382 call _freeIterator[1109569] _iterator[1912898])
                        continue _continueLabel[1912957] _continueLabel[1912957]
                      }
                    }
                    label _continueLabel[1974387]
                  }
                  {
                    const-val low[1974206]:int(64)[13] "temp"
                    (1974208 'move' low[1974206](1974210 '.v' _iterator[1974116] F0_low[2016401]))
                    (1974213 '=' i[1974141] low[1974206])
                  }
                  {
                    const-val high[1974217]:int(64)[13] "temp"
                    (1974219 'move' high[1974217](1974221 '.v' _iterator[1974116] F1_high[2016405]))
                    (1974224 '<=' i[1974141] high[1974217])
                  }
                  {
                    val call_tmp[1974228]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    (1974230 '+=' i[1974141] 1)
                  }
                }
                label _endchpl_direct_param_stride_range_iter[1974333]
                (1974336 call _freeIterator[1103474] _iterator[1974116])
                (1974339 call chpl__autoDestroy[1534672] tmp[1973919])
                label _endchpl_direct_counted_range_iter_helper[1974341]
                (1974344 call _freeIterator[1103724] _iterator[1973847])
                label _endchpl_direct_counted_range_iter[1974346]
                (1974349 call _freeIterator[1103974] _iterator[1973811])
                (1974352 call chpl__autoDestroy[1461530] localThis[1973804])
                label _endchpl_bytes[1974354]
              }
              label _breakLabel[1912948]
              (1912951 call _freeIterator[1109569] _iterator[1912898])
            }
            (1912954 call =[435327] end[1107826] i[1912880])
          }
          label _continueLabel[1912957]
          {
            (1912961 call zip3[1096756] _iterator[1912686])
          }
          {
            (1912965 call zip3[1108309] _iterator[1912699])
          }
          {
            {
              (1912724 call init[1096792] _iterator[1912686])
            }
            {
              (1912759 call init[1108345] _iterator[1912699])
            }
          }
          {
            (1912740 call hasMore[1096774] _iterator[1912686])
          }
          {
            {
              (1912728 call incr[1096801] _iterator[1912686])
            }
            {
              (1912763 call incr[1108354] _iterator[1912699])
            }
          }
        }
        {
          const-val retTmp[1912809]:int(64)[13] "temp"
          (1912811 'move' retTmp[1912809](1912806 call hasMore[1108327] _iterator[1912699]))
          (1912816 'move' hasMore[1912774](1912813 'cast' bool[10] retTmp[1912809]))
        }
        if hasMore[1912774]
        {
          (1912801 'chpl_error' c"zippered iterations have non-equal lengths")
        }
        {
          (1912771 call zip4[1108318] _iterator[1912699])
        }
        {
          (1912736 call zip4[1096765] _iterator[1912686])
        }
        label _breakLabel[1108192]
        (1844400 call _freeIterator[1108724] _iterator[1108038])
        (1844402 call chpl__autoDestroy[1541417] _iterator[1108038])
        (1844405 call chpl__autoDestroy[1534375] call_tmp[1108040])
      }
    }
    const-val call_tmp[1108195]:range(int(64),bounded,false)[1026814] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1831595]:range(int(64),bounded,false)[1026814] "temp"
    (1108200 call chpl_build_bounded_range[455137] start[1107803] end[1107826] ret_tmp[1831595])
    (1831598 'move' call_tmp[1108195] ret_tmp[1831595])
    const-val call_tmp[1108203]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1833910]:string[26] "temp"
    (1108208 call this[1111366] localX[1107774] call_tmp[1108195] ret_tmp[1833910])
    (1833913 'move' call_tmp[1108203] ret_tmp[1833910])
    val call_tmp[1108210]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1122003 'move' ret[1107650] call_tmp[1108203])
    (1844408 call chpl__autoDestroy[1534375] call_tmp[1108195])
    (1844411 call chpl__autoDestroy[1461530] localChars[1107796])
    (1844414 call chpl__autoDestroy[1461530] localX[1107774])
    gotoReturn _end_doStripNoEnc[1108227] _end_doStripNoEnc[1108227]
    label _end_doStripNoEnc[1108227]
    (1833790 '=' _retArg[1833788] ret[1107650])
    (1833794 return _void[55])
  }
  function doEq[1206216](const  ref arg a[1206218]:string[26], const  ref arg b[1206220]:string[26]) : bool[10] "inline" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1206222]:bool[10] "dead after last mention" "RVV" "temp"
    val call_tmp[1206232]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1206243]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[1206254]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1206256 'move' call_tmp[1206254](1206259 call buff[757964] a[1206218]))
    ref call_tmp[1206262]:_ref(int(64))[936572] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1206264 'move' call_tmp[1206262](1206267 call buffLen[757886] a[1206218]))
    ref call_tmp[1206270]:_ref(int(32))[936626] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1206272 'move' call_tmp[1206270](1206275 call locale_id[758042] a[1206218]))
    ref call_tmp[1206278]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1206280 'move' call_tmp[1206278](1206283 call buff[757964] b[1206220]))
    ref call_tmp[1206286]:_ref(int(64))[936572] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1206288 'move' call_tmp[1206286](1206291 call buffLen[757886] b[1206220]))
    ref call_tmp[1206294]:_ref(int(32))[936626] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1206296 'move' call_tmp[1206294](1206299 call locale_id[758042] b[1206220]))
    const-val call_tmp[1206302]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1206402]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1206406 'move' coerce_tmp[1206402](1206404 'deref' call_tmp[1206254]))
    const-val coerce_tmp[1206408]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1206412 'move' coerce_tmp[1206408](1206410 'deref' call_tmp[1206262]))
    const-val coerce_tmp[1206414]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1206418 'move' coerce_tmp[1206414](1206416 'deref' call_tmp[1206270]))
    val coerce_tmp[1206420]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1206424 'move' coerce_tmp[1206420](1206422 'deref' call_tmp[1206278]))
    const-val coerce_tmp[1206426]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1206430 'move' coerce_tmp[1206426](1206428 'deref' call_tmp[1206286]))
    const-val coerce_tmp[1206432]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1206436 'move' coerce_tmp[1206432](1206434 'deref' call_tmp[1206294]))
    (1206304 'move' call_tmp[1206302](1206307 call _strcmp[173438] coerce_tmp[1206402] coerce_tmp[1206408] coerce_tmp[1206414] coerce_tmp[1206420] coerce_tmp[1206426] coerce_tmp[1206432]))
    const-val call_tmp[1206314]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1206316 'move' call_tmp[1206314](1206319 call ==[435628] call_tmp[1206302] 0))
    (1206322 'move' ret[1206222] call_tmp[1206314])
    (1206326 return ret[1206222])
  }
  function doLessThan[1769634](const  ref arg a[1769636]:string[26], const  ref arg b[1769638]:string[26]) : bool[10] "inline" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1769640]:bool[10] "dead after last mention" "RVV" "temp"
    val call_tmp[1769650]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1769661]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[1769672]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1769674 'move' call_tmp[1769672](1769677 call buff[757964] a[1769636]))
    ref call_tmp[1769680]:_ref(int(64))[936572] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1769682 'move' call_tmp[1769680](1769685 call buffLen[757886] a[1769636]))
    ref call_tmp[1769688]:_ref(int(32))[936626] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1769690 'move' call_tmp[1769688](1769693 call locale_id[758042] a[1769636]))
    ref call_tmp[1769696]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1769698 'move' call_tmp[1769696](1769701 call buff[757964] b[1769638]))
    ref call_tmp[1769704]:_ref(int(64))[936572] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1769706 'move' call_tmp[1769704](1769709 call buffLen[757886] b[1769638]))
    ref call_tmp[1769712]:_ref(int(32))[936626] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1769714 'move' call_tmp[1769712](1769717 call locale_id[758042] b[1769638]))
    const-val call_tmp[1769720]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1769757]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1769761 'move' coerce_tmp[1769757](1769759 'deref' call_tmp[1769672]))
    const-val coerce_tmp[1769763]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1769767 'move' coerce_tmp[1769763](1769765 'deref' call_tmp[1769680]))
    const-val coerce_tmp[1769769]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1769773 'move' coerce_tmp[1769769](1769771 'deref' call_tmp[1769688]))
    val coerce_tmp[1769775]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1769779 'move' coerce_tmp[1769775](1769777 'deref' call_tmp[1769696]))
    const-val coerce_tmp[1769781]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1769785 'move' coerce_tmp[1769781](1769783 'deref' call_tmp[1769704]))
    const-val coerce_tmp[1769787]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1769791 'move' coerce_tmp[1769787](1769789 'deref' call_tmp[1769712]))
    (1769722 'move' call_tmp[1769720](1769725 call _strcmp[173438] coerce_tmp[1769757] coerce_tmp[1769763] coerce_tmp[1769769] coerce_tmp[1769775] coerce_tmp[1769781] coerce_tmp[1769787]))
    const-val call_tmp[1769732]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1769734 'move' call_tmp[1769732](1769737 call <[948398] call_tmp[1769720]))
    (1769740 'move' ret[1769640] call_tmp[1769732])
    (1769744 return ret[1769640])
  }
  function doGreaterThan[1769806](const  ref arg a[1769808]:string[26], const  ref arg b[1769810]:string[26]) : bool[10] "inline" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1769812]:bool[10] "dead after last mention" "RVV" "temp"
    val call_tmp[1769822]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1769833]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[1769844]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1769846 'move' call_tmp[1769844](1769849 call buff[757964] a[1769808]))
    ref call_tmp[1769852]:_ref(int(64))[936572] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1769854 'move' call_tmp[1769852](1769857 call buffLen[757886] a[1769808]))
    ref call_tmp[1769860]:_ref(int(32))[936626] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1769862 'move' call_tmp[1769860](1769865 call locale_id[758042] a[1769808]))
    ref call_tmp[1769868]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1769870 'move' call_tmp[1769868](1769873 call buff[757964] b[1769810]))
    ref call_tmp[1769876]:_ref(int(64))[936572] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1769878 'move' call_tmp[1769876](1769881 call buffLen[757886] b[1769810]))
    ref call_tmp[1769884]:_ref(int(32))[936626] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1769886 'move' call_tmp[1769884](1769889 call locale_id[758042] b[1769810]))
    const-val call_tmp[1769892]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1769929]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1769933 'move' coerce_tmp[1769929](1769931 'deref' call_tmp[1769844]))
    const-val coerce_tmp[1769935]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1769939 'move' coerce_tmp[1769935](1769937 'deref' call_tmp[1769852]))
    const-val coerce_tmp[1769941]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1769945 'move' coerce_tmp[1769941](1769943 'deref' call_tmp[1769860]))
    val coerce_tmp[1769947]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1769951 'move' coerce_tmp[1769947](1769949 'deref' call_tmp[1769868]))
    const-val coerce_tmp[1769953]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1769957 'move' coerce_tmp[1769953](1769955 'deref' call_tmp[1769876]))
    const-val coerce_tmp[1769959]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1769963 'move' coerce_tmp[1769959](1769961 'deref' call_tmp[1769884]))
    (1769894 'move' call_tmp[1769892](1769897 call _strcmp[173438] coerce_tmp[1769929] coerce_tmp[1769935] coerce_tmp[1769941] coerce_tmp[1769947] coerce_tmp[1769953] coerce_tmp[1769959]))
    const-val call_tmp[1769904]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1769906 'move' call_tmp[1769904](1769909 call >[437672] call_tmp[1769892] 0))
    (1769912 'move' ret[1769812] call_tmp[1769904])
    (1769916 return ret[1769812])
  }
  function countNumCodepoints[181334](const  ref arg x[181331]:string[26]) : int(64)[13] "resolved" "fn synchronization free"
  {
    val ret[523212]:int(64)[13] "dead after last mention" "RVV" "temp"
    val ret[181337]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1019904 'move' ret[181337] 0)
    const-val tmp[181371]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[687389]:_ref(int(32))[936626] "dead after last mention" "maybe param" "reference to a const" "temp"
    (687392 'move' call_tmp[687389](181346 call locale_id[758042] x[181331]))
    const-val call_tmp[687394]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1019774]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1019778 'move' coerce_tmp[1019774](1019776 'deref' call_tmp[687389]))
    (687397 'move' call_tmp[687394](181351 call chpl_buildLocaleID[209412] coerce_tmp[1019774] c_sublocid_any[89875]))
    const-val call_tmp[687399]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    (687402 'move' call_tmp[687399](181352 'chpl_on_locale_num' call_tmp[687394]))
    (181373 'move' tmp[181371] call_tmp[687399])
    val isdirect[2086492]:bool[10] "temp"
    (2086497 'move' isdirect[2086492](2086494 call chpl_doDirectExecuteOn[187423] tmp[181371]))
    if isdirect[2086492]
    {
      (2086501 call on_fn[935464] x[181331] ret[181337])
    }
    {
      val _args_foron_fn[2086519]:_class_localson_fn[2086509] "temp"
      (2086523 'move' _args_foron_fn[2086519](2086521 'stack allocate class' _class_localson_fn[2086509]))
      (2086525 '.=' _args_foron_fn[2086519] _0_tmp[2086512] tmp[181371])
      ref tmp[2086529]:string[26] "temp"
      (2086533 'move' tmp[2086529](2086531 'set reference' x[181331]))
      (2086535 '.=' _args_foron_fn[2086519] _1_x[2086514] tmp[2086529])
      ref tmp[2086539]:int(64)[13] "temp"
      (2086543 'move' tmp[2086539](2086541 'set reference' ret[181337]))
      (2086545 '.=' _args_foron_fn[2086519] _2_ret[2086516] tmp[2086539])
      val _args_vforon_fn[2086549]:c_void_ptr[149] "temp"
      (2086553 'move' _args_vforon_fn[2086549](2086551 'cast_to_void_star' _args_foron_fn[2086519]))
      val _args_sizeon_fn[2086555]:int(64)[13] "temp"
      (2086559 'move' _args_sizeon_fn[2086555](2086557 'sizeof_bundle' _class_localson_fn[2086509]))
      on(2086599 call wrapon_fn[2086561] tmp[181371] _args_vforon_fn[2086549] _args_sizeon_fn[2086555] _args_foron_fn[2086519])
    }
    {
    }
    (523217 'move' ret[523212] ret[181337])
    gotoReturn _end_countNumCodepoints[523210] _end_countNumCodepoints[523210]
    label _end_countNumCodepoints[523210]
    (523214 return ret[523212])
  }
  function countNumCodepoints[181390](const in arg buff[181387]:c_ptr(uint(8))[937423], const in arg buffLen[181393]:int(64)[13]) : int(64)[13] "resolved" "fn synchronization free"
  {
    val ret[523223]:int(64)[13] "dead after last mention" "RVV" "temp"
    val n[181397]:int(64)[13] "dead at end of block" "insert auto destroy"
    (545237 'move' n[181397] 0)
    val i[181403]:int(64)[13] "dead at end of block" "insert auto destroy"
    (545239 'move' i[181403] 0)
    {
      val tmp[181487]:bool[10] "dead after last mention" "temp"
      const-val call_tmp[687423]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (687426 'move' call_tmp[687423](181508 call <[437452] i[181403] buffLen[181393]))
      (181511 'move' tmp[181487] call_tmp[687423])
      WhileDo[181492]
      {
        {
          (181413 call +=[451315] i[181403] 1)
          {
            val tmp[181437]:bool[10] "dead after last mention" "temp"
            const-val tmp[429294]:bool[10] "dead after last mention" "maybe param" "temp"
            (429305 'move' tmp[429294](181469 call <[437452] i[181403] buffLen[181393]))
            val tmp[571780]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            const-val tmp[571781]:bool[10] "dead after last mention" "maybe param" "temp"
            const-val call_tmp[687433]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (687436 'move' call_tmp[687433] tmp[429294])
            (571786 'move' tmp[571781] call_tmp[687433])
            if tmp[571781]
            {
              const-val tmp[571788]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
              ref call_tmp[687438]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
              (687441 'move' call_tmp[687438](181477 call this[954091] buff[181387] i[181403]))
              const-val call_tmp[687443]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1019807]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1019811 'move' coerce_tmp[1019807](1019809 'deref' call_tmp[687438]))
              (687446 'move' call_tmp[687443](181475 call isInitialByte[181528] coerce_tmp[1019807]))
              const-val call_tmp[687448]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (687451 'move' call_tmp[687448](181473 call ![7494] call_tmp[687443]))
              (571790 'move' tmp[571788] call_tmp[687448])
              (571795 'move' tmp[571780] tmp[571788])
            }
            {
              (571800 'move' tmp[571780] 0)
            }
            (181479 'move' tmp[181437] tmp[571780])
            WhileDo[181442]
            {
              (181434 call +=[451315] i[181403] 1)
              label _continueLabel[181440]
              const-val tmp[429273]:bool[10] "dead after last mention" "maybe param" "temp"
              (429284 'move' tmp[429273](181450 call <[437452] i[181403] buffLen[181393]))
              val tmp[571807]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              const-val tmp[571808]:bool[10] "dead after last mention" "maybe param" "temp"
              const-val call_tmp[687458]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (687461 'move' call_tmp[687458] tmp[429273])
              (571813 'move' tmp[571808] call_tmp[687458])
              if tmp[571808]
              {
                const-val tmp[571815]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                ref call_tmp[687463]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
                (687466 'move' call_tmp[687463](181458 call this[954091] buff[181387] i[181403]))
                const-val call_tmp[687468]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1019892]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1019896 'move' coerce_tmp[1019892](1019894 'deref' call_tmp[687463]))
                (687471 'move' call_tmp[687468](181456 call isInitialByte[181528] coerce_tmp[1019892]))
                const-val call_tmp[687473]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (687476 'move' call_tmp[687473](181454 call ![7494] call_tmp[687468]))
                (571817 'move' tmp[571815] call_tmp[687473])
                (571822 'move' tmp[571807] tmp[571815])
              }
              {
                (571827 'move' tmp[571807] 0)
              }
              (181460 'move' tmp[181437] tmp[571807])
              tmp[181437]
            }
            label _breakLabel[181441]
          }
          (181484 call +=[451315] n[181397] 1)
        }
        label _continueLabel[181490]
        const-val call_tmp[687478]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (687481 'move' call_tmp[687478](181498 call <[437452] i[181403] buffLen[181393]))
        (181501 'move' tmp[181487] call_tmp[687478])
        tmp[181487]
      }
      label _breakLabel[181491]
    }
    (523228 'move' ret[523223] n[181397])
    gotoReturn _end_countNumCodepoints[523221] _end_countNumCodepoints[523221]
    label _end_countNumCodepoints[523221]
    (523225 return ret[523223])
  }
  function isInitialByte[181528](const in arg b[181525]:uint(8)[100]) : bool[10] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val ret[523234]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[687483]:uint(8)[100] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1019862]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1019868 'move' coerce_tmp[1019862](1019864 'cast' uint(8)[100] 192))
    (687486 'move' call_tmp[687483](181535 call &[446332] b[181525] coerce_tmp[1019862]))
    const-val call_tmp[687488]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1019871]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1019877 'move' coerce_tmp[1019871](1019873 'cast' uint(8)[100] 128))
    (687491 'move' call_tmp[687488](181538 call !=[436034] call_tmp[687483] coerce_tmp[1019871]))
    (1019881 'move' ret[523234] call_tmp[687488])
    (523236 return ret[523234])
  }
  function byte_isWhitespace[181609](const in arg c[181606]:uint(8)[100]) : bool[10] "inline" "resolved" "fn synchronization free"
  {
    val ret[523266]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[687508]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (687511 'move' call_tmp[687508](181628 'cast' int(32)[95] c[181606]))
    const-val call_tmp[687513]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (687516 'move' call_tmp[687513](181631 call isspace[181618] call_tmp[687508]))
    const-val call_tmp[687518]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1125540]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1125546 'move' coerce_tmp[1125540](1125542 'cast' int(32)[95] 0))
    (687521 'move' call_tmp[687518](181633 call !=[435990] call_tmp[687513] coerce_tmp[1125540]))
    (1125550 'move' ret[523266] call_tmp[687518])
    (523268 return ret[523266])
  }
  function qio_encode_char_buf[173912](const in arg dst[173909]:c_void_ptr[149], const in arg chr[173918]:int(32)[95]) : syserr[223584] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[522751]:syserr[223584] "RVV" "temp"
    (522753 return ret[522751])
  }
  function qio_decode_char_buf[174433](ref arg chr[174430]:_ref(int(32))[936626], ref arg nBytes[174436]:_ref(int(32))[936626], const in arg buf[174440]:c_string[19], const in arg buflen[174444]:int(64)[13]) : syserr[223584] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[522779]:syserr[223584] "RVV" "temp"
    (522781 return ret[522779])
  }
  function qio_decode_char_buf_esc[174460](ref arg chr[174457]:_ref(int(32))[936626], ref arg nBytes[174463]:_ref(int(32))[936626], const in arg buf[174467]:c_string[19], const in arg buffLen[174471]:int(64)[13]) : syserr[223584] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[522785]:syserr[223584] "RVV" "temp"
    (522787 return ret[522785])
  }
  function isspace[181618](const in arg c[181615]:int(32)[95]) : int(32)[95] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[523260]:int(32)[95] "RVV" "temp"
    (523262 return ret[523260])
  }
  function on_fn[935464](const  ref arg x[1806904]:_ref(string)[937939], ref arg ret[1806906]:_ref(int(64))[936572]) : void[4] "on" "resolved" "fn synchronization free"
  {
    {
      ref call_tmp[687406]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "reference to a const" "temp"
      (687409 'move' call_tmp[687406](181356 call buff[757964] x[1806904]))
      ref call_tmp[687413]:_ref(int(64))[936572] "dead after last mention" "maybe param" "reference to a const" "temp"
      (687416 'move' call_tmp[687413](181361 call buffLen[757886] x[1806904]))
      const-val call_tmp[687418]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1019784]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1019788 'move' coerce_tmp[1019784](1019786 'deref' call_tmp[687406]))
      const-val coerce_tmp[1019790]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1019794 'move' coerce_tmp[1019790](1019792 'deref' call_tmp[687413]))
      (687421 'move' call_tmp[687418](181364 call countNumCodepoints[181390] coerce_tmp[1019784] coerce_tmp[1019790]))
      (181365 call =[435327] ret[1806906] call_tmp[687418])
    }
    (935471 return _void[55])
  }
  function _cast[957309](const in arg b[957315]:c_ptr(uint(8))[937423]) : c_string[19] "inline" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1804506]:c_string[19] "temp"
    val ret[957318]:c_string[19] "dead after last mention" "RVV" "temp"
    const-val call_tmp[957320]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (957322 'move' call_tmp[957320](957324 'cast' c_string[19] b[957315]))
    (957327 'move' ret[957318] call_tmp[957320])
    (957331 return ret[957318])
  }
  function on_fn[979153](ref arg lhs[1806930]:_ref(string)[937939], const  ref arg rhs[1806932]:_ref(string)[937939]) : void[4] "on" "resolved" "fn synchronization free"
  {
    {
      ref call_tmp[979159]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
      (979161 'move' call_tmp[979159](979164 call buffLen[757886] lhs[1806930]))
      ref call_tmp[979167]:_ref(int(64))[936572] "dead after last mention" "maybe param" "reference to a const" "temp"
      (979169 'move' call_tmp[979167](979172 call buffLen[757886] rhs[1806932]))
      const-val call_tmp[979175]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[979956]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (979960 'move' coerce_tmp[979956](979958 'deref' call_tmp[979159]))
      const-val coerce_tmp[979962]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (979966 'move' coerce_tmp[979962](979964 'deref' call_tmp[979167]))
      (979177 'move' call_tmp[979175](979180 call safeAdd[979729] coerce_tmp[979956] coerce_tmp[979962]))
      const-val call_tmp[979183]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (979185 'move' call_tmp[979183](979188 call ![7494] call_tmp[979175]))
      const-val call_tmp[979190]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (979192 'move' call_tmp[979190] call_tmp[979183])
      if call_tmp[979190]
      {
        (979200 call halt[154067] "Buffer overflow allocating string copy data")
      }
      ref call_tmp[979203]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
      (979205 'move' call_tmp[979203](979208 call buffLen[757886] lhs[1806930]))
      ref call_tmp[979211]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
      (979213 'move' call_tmp[979211](979216 call buffLen[757886] rhs[1806932]))
      const-val call_tmp[979219]:int(64)[13] "dead at end of block" "maybe param" "temp"
      const-val coerce_tmp[980460]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (980464 'move' coerce_tmp[980460](980462 'deref' call_tmp[979203]))
      const-val coerce_tmp[980466]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (980470 'move' coerce_tmp[980466](980468 'deref' call_tmp[979211]))
      (979221 'move' call_tmp[979219](979224 call +[439636] coerce_tmp[980460] coerce_tmp[980466]))
      const-val newLength[979227]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      (979229 'move' newLength[979227] call_tmp[979219])
      ref call_tmp[979233]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
      (979235 'move' call_tmp[979233](979238 call buffSize[757912] lhs[1806930]))
      const-val call_tmp[979241]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[980474]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (980478 'move' coerce_tmp[980474](980476 'deref' call_tmp[979233]))
      (979243 'move' call_tmp[979241](979246 call <=[437012] coerce_tmp[980474] newLength[979227]))
      const-val call_tmp[979249]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (979251 'move' call_tmp[979249] call_tmp[979241])
      if call_tmp[979249]
      {
        const-val call_tmp[979258]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (979260 'move' call_tmp[979258](979263 call +[949666] newLength[979227]))
        ref call_tmp[979266]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
        (979268 'move' call_tmp[979266](979271 call buffLen[757886] lhs[1806930]))
        const-val call_tmp[979274]:real(64)[16] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[980483]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (980487 'move' coerce_tmp[980483](980485 'deref' call_tmp[979266]))
        const-val coerce_tmp[980489]:real(64)[16] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (980495 'move' coerce_tmp[980489](980491 'cast' real(64)[16] coerce_tmp[980483]))
        (979276 'move' call_tmp[979274](979279 call *[441960] coerce_tmp[980489] 1.5))
        const-val call_tmp[979282]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (979284 'move' call_tmp[979282](979287 call _cast[980498] call_tmp[979274]))
        const-val call_tmp[979290]:int(64)[13] "dead at end of block" "maybe param" "temp"
        (979292 'move' call_tmp[979290](979295 call max[450108] call_tmp[979258] call_tmp[979282]))
        const-val requestedSize[979298]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        (979300 'move' requestedSize[979298] call_tmp[979290])
        ref call_tmp[979305]:_ref(bool)[937199] "dead after last mention" "maybe param" "temp"
        (979307 'move' call_tmp[979305](979310 call isOwned[757990] lhs[1806930]))
        const-val call_tmp[979313]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val tmp[980531]:bool[10] "dead after last mention" "const" "temp"
        (980533 'move' tmp[980531](980535 'deref' call_tmp[979305]))
        (979315 'move' call_tmp[979313] tmp[980531])
        if call_tmp[979313]
        {
          ref call_tmp[979322]:_ref(c_ptr(uint(8)))[937432] "dead at end of block" "maybe param" "temp"
          (979324 'move' call_tmp[979322](979327 call buff[757964] lhs[1806930]))
          const-val call_tmp[979330]:(c_ptr(uint(8)),int(64))[955208] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[980538]:c_ptr(uint(8))[937423] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (980542 'move' coerce_tmp[980538](980540 'deref' call_tmp[979322]))
          const-val ret_tmp[1831185]:(c_ptr(uint(8)),int(64))[955208] "temp"
          (979335 call bufferRealloc[172692] coerce_tmp[980538] requestedSize[979298] ret_tmp[1831185])
          (1831188 'move' call_tmp[979330] ret_tmp[1831185])
          const-val tmp[979338]:(c_ptr(uint(8)),int(64))[955208] "dead at end of block" "insert auto destroy" "temp"
          (979340 'move' tmp[979338] call_tmp[979330])
          1
          ref call_tmp[979348]:_ref(c_ptr(uint(8)))[937432] "dead at end of block" "maybe param" "temp"
          (979350 'move' call_tmp[979348](980552 '.' tmp[979338] x0[955204]))
          val newBuff[979355]:c_ptr(uint(8))[937423] "dead at end of block" "insert auto destroy"
          val coerce_tmp[980557]:c_ptr(uint(8))[937423] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (980561 'move' coerce_tmp[980557](980559 'deref' call_tmp[979348]))
          (979357 'move' newBuff[979355] coerce_tmp[980557])
          ref call_tmp[979360]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
          (979362 'move' call_tmp[979360](980566 '.' tmp[979338] x1[955206]))
          const-val allocSize[979367]:int(64)[13] "dead at end of block" "insert auto destroy"
          const-val coerce_tmp[980571]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (980575 'move' coerce_tmp[980571](980573 'deref' call_tmp[979360]))
          (979369 'move' allocSize[979367] coerce_tmp[980571])
          ref call_tmp[979373]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "temp"
          (979375 'move' call_tmp[979373](979378 call buff[757964] lhs[1806930]))
          (979382 call =[954213] call_tmp[979373] newBuff[979355])
          ref call_tmp[979387]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
          (979389 'move' call_tmp[979387](979392 call buffSize[757912] lhs[1806930]))
          (979396 call =[435327] call_tmp[979387] allocSize[979367])
          (1842703 call chpl__autoDestroy[1465141] tmp[979338])
        }
        {
          const-val call_tmp[979402]:(c_ptr(uint(8)),int(64))[955208] "dead at end of block" "maybe param" "temp"
          const-val ret_tmp[1831969]:(c_ptr(uint(8)),int(64))[955208] "temp"
          (979407 call bufferAlloc[955018] requestedSize[979298] ret_tmp[1831969])
          (1831972 'move' call_tmp[979402] ret_tmp[1831969])
          const-val tmp[979409]:(c_ptr(uint(8)),int(64))[955208] "dead at end of block" "insert auto destroy" "temp"
          (979411 'move' tmp[979409] call_tmp[979402])
          1
          ref call_tmp[979419]:_ref(c_ptr(uint(8)))[937432] "dead at end of block" "maybe param" "temp"
          (979421 'move' call_tmp[979419](980590 '.' tmp[979409] x0[955204]))
          val newBuff[979426]:c_ptr(uint(8))[937423] "dead at end of block" "insert auto destroy"
          val coerce_tmp[980595]:c_ptr(uint(8))[937423] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (980599 'move' coerce_tmp[980595](980597 'deref' call_tmp[979419]))
          (979428 'move' newBuff[979426] coerce_tmp[980595])
          ref call_tmp[979431]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
          (979433 'move' call_tmp[979431](980604 '.' tmp[979409] x1[955206]))
          const-val allocSize[979438]:int(64)[13] "dead at end of block" "insert auto destroy"
          const-val coerce_tmp[980609]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (980613 'move' coerce_tmp[980609](980611 'deref' call_tmp[979431]))
          (979440 'move' allocSize[979438] coerce_tmp[980609])
          ref call_tmp[979444]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "temp"
          (979446 'move' call_tmp[979444](979449 call buff[757964] lhs[1806930]))
          ref call_tmp[979452]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
          (979454 'move' call_tmp[979452](979457 call buffLen[757886] lhs[1806930]))
          val coerce_tmp[980623]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (980627 'move' coerce_tmp[980623](980625 'deref' call_tmp[979444]))
          const-val coerce_tmp[980629]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (980633 'move' coerce_tmp[980629](980631 'deref' call_tmp[979452]))
          (979461 call bufferMemcpyLocal[173076] newBuff[979426] coerce_tmp[980623] coerce_tmp[980629] 0 0)
          ref call_tmp[979469]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "temp"
          (979471 'move' call_tmp[979469](979474 call buff[757964] lhs[1806930]))
          (979478 call =[954213] call_tmp[979469] newBuff[979426])
          ref call_tmp[979483]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
          (979485 'move' call_tmp[979483](979488 call buffSize[757912] lhs[1806930]))
          (979492 call =[435327] call_tmp[979483] allocSize[979438])
          ref call_tmp[979497]:_ref(bool)[937199] "dead after last mention" "maybe param" "temp"
          (979499 'move' call_tmp[979497](979502 call isOwned[757990] lhs[1806930]))
          (979506 call =[435174] call_tmp[979497] 1)
          (1842707 call chpl__autoDestroy[1465141] tmp[979409])
        }
      }
      ref call_tmp[979511]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "temp"
      (979513 'move' call_tmp[979511](979516 call buff[757964] lhs[1806930]))
      ref call_tmp[979519]:_ref(int(32))[936626] "dead after last mention" "maybe param" "reference to a const" "temp"
      (979521 'move' call_tmp[979519](979524 call locale_id[758042] rhs[1806932]))
      ref call_tmp[979527]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "reference to a const" "temp"
      (979529 'move' call_tmp[979527](979532 call buff[757964] rhs[1806932]))
      ref call_tmp[979535]:_ref(int(64))[936572] "dead after last mention" "maybe param" "reference to a const" "temp"
      (979537 'move' call_tmp[979535](979540 call buffLen[757886] rhs[1806932]))
      ref call_tmp[979543]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
      (979545 'move' call_tmp[979543](979548 call buffLen[757886] lhs[1806930]))
      val coerce_tmp[980672]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (980676 'move' coerce_tmp[980672](980674 'deref' call_tmp[979511]))
      const-val coerce_tmp[980678]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (980682 'move' coerce_tmp[980678](980680 'deref' call_tmp[979519]))
      const-val coerce_tmp[980684]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (980690 'move' coerce_tmp[980684](980686 'cast' int(64)[13] coerce_tmp[980678]))
      val coerce_tmp[980692]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (980696 'move' coerce_tmp[980692](980694 'deref' call_tmp[979527]))
      const-val coerce_tmp[980698]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (980702 'move' coerce_tmp[980698](980700 'deref' call_tmp[979535]))
      const-val coerce_tmp[980704]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (980708 'move' coerce_tmp[980704](980706 'deref' call_tmp[979543]))
      (979552 call bufferMemcpy[172996] coerce_tmp[980672] coerce_tmp[980684] coerce_tmp[980692] coerce_tmp[980698] coerce_tmp[980704] 0)
      ref call_tmp[979562]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
      (979564 'move' call_tmp[979562](979567 call buffLen[757886] lhs[1806930]))
      (979571 call =[435327] call_tmp[979562] newLength[979227])
      ref call_tmp[979576]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
      ref _this_tmp_[980824]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "temp"
      (980826 'move' _this_tmp_[980824](979581 call buff[757964] lhs[1806930]))
      val coerce_tmp[980831]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (980835 'move' coerce_tmp[980831](980833 'deref' _this_tmp_[980824]))
      (979578 'move' call_tmp[979576](979584 call this[954091] coerce_tmp[980831] newLength[979227]))
      const-val coerce_tmp[980838]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (980844 'move' coerce_tmp[980838](980840 'cast' uint(8)[100] 0))
      (979587 call =[435348] call_tmp[979576] coerce_tmp[980838])
      val call_tmp[979592]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        ref call_tmp[979615]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
        (979617 'move' call_tmp[979615](979620 call cachedNumCodepoints[757938] lhs[1806930]))
        ref call_tmp[979623]:_ref(int(64))[936572] "dead after last mention" "maybe param" "reference to a const" "temp"
        (979625 'move' call_tmp[979623](979628 call cachedNumCodepoints[757938] rhs[1806932]))
        const-val coerce_tmp[980852]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (980856 'move' coerce_tmp[980852](980854 'deref' call_tmp[979623]))
        (979632 call +=[451315] call_tmp[979615] coerce_tmp[980852])
      }
    }
    (979636 return _void[55])
  }
  function helpMe[1019192](ref arg lhs[1019197]:_ref(string)[937939], const  ref arg rhs[1019202]:string[26]) : void[4] "inline" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val tmp[1019223]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1019247]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    ref call_tmp[1019249]:_ref(int(32))[936626] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1019251 'move' call_tmp[1019249](1019254 call locale_id[758042] rhs[1019202]))
    const-val call_tmp[1019257]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1019744]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1019748 'move' coerce_tmp[1019744](1019746 'deref' call_tmp[1019249]))
    (1019259 'move' call_tmp[1019257](1019262 call ==[435606] coerce_tmp[1019744] chpl_nodeID[208152]))
    (1019265 'move' tmp[1019247] call_tmp[1019257])
    (1019270 'move' tmp[1019223] tmp[1019247])
    const-val call_tmp[1019276]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1019278 'move' call_tmp[1019276] tmp[1019223])
    if call_tmp[1019276]
    {
      val call_tmp[1019285]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        ref call_tmp[1019308]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1019310 'move' call_tmp[1019308](1019313 call buff[757964] rhs[1019202]))
        ref call_tmp[1019316]:_ref(int(64))[936572] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1019318 'move' call_tmp[1019316](1019321 call buffLen[757886] rhs[1019202]))
        ref call_tmp[1019324]:_ref(int(64))[936572] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1019326 'move' call_tmp[1019324](1019329 call buffSize[757912] rhs[1019202]))
        const-val call_tmp[1019332]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1019334 'move' call_tmp[1019332](1019337 call numCodepoints[32823] rhs[1019202]))
        val coerce_tmp[1020511]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1020515 'move' coerce_tmp[1020511](1020513 'deref' call_tmp[1019308]))
        const-val coerce_tmp[1020517]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1020521 'move' coerce_tmp[1020517](1020519 'deref' call_tmp[1019316]))
        const-val coerce_tmp[1020523]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1020527 'move' coerce_tmp[1020523](1020525 'deref' call_tmp[1019324]))
        (1019341 call reinitWithNewBuffer[1019908] lhs[1019197] coerce_tmp[1020511] coerce_tmp[1020517] coerce_tmp[1020523] call_tmp[1019332])
      }
    }
    {
      ref call_tmp[1019380]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1019382 'move' call_tmp[1019380](1019385 call buffLen[757886] rhs[1019202]))
      const-val len[1019388]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1020900]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1020904 'move' coerce_tmp[1020900](1020902 'deref' call_tmp[1019380]))
      (1019390 'move' len[1019388] coerce_tmp[1020900])
      val remote_buf[1019394]:c_ptr(uint(8))[937423] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1020907]:c_ptr(uint(8))[937423] "dead at end of block" "temp"
      (1020910 'move' init_coerce_tmp[1020907](1021449 'cast' c_ptr(uint(8))[937423] nil[44]))
      (1019396 'move' remote_buf[1019394] init_coerce_tmp[1020907])
      const-val call_tmp[1019401]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1019403 'move' call_tmp[1019401](1019406 call !=[436012] len[1019388] 0))
      const-val call_tmp[1019409]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1019411 'move' call_tmp[1019409] call_tmp[1019401])
      if call_tmp[1019409]
      {
        ref call_tmp[1019418]:_ref(int(32))[936626] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1019420 'move' call_tmp[1019418](1019423 call locale_id[758042] rhs[1019202]))
        ref call_tmp[1019426]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1019428 'move' call_tmp[1019426](1019431 call buff[757964] rhs[1019202]))
        val call_tmp[1019434]:c_ptr(uint(8))[937423] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1020916]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1020920 'move' coerce_tmp[1020916](1020918 'deref' call_tmp[1019418]))
        const-val coerce_tmp[1020922]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1020928 'move' coerce_tmp[1020922](1020924 'cast' int(64)[13] coerce_tmp[1020916]))
        val coerce_tmp[1020930]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1020934 'move' coerce_tmp[1020930](1020932 'deref' call_tmp[1019426]))
        (1019436 'move' call_tmp[1019434](1019439 call bufferCopyRemote[172784] coerce_tmp[1020922] coerce_tmp[1020930] len[1019388]))
        (1019444 call =[954213] remote_buf[1019394] call_tmp[1019434])
      }
      val call_tmp[1019451]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        const-val call_tmp[1019474]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1019476 'move' call_tmp[1019474](1019479 call +[949666] len[1019388]))
        ref call_tmp[1019482]:_ref(int(64))[936572] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1019484 'move' call_tmp[1019482](1019487 call cachedNumCodepoints[757938] rhs[1019202]))
        const-val coerce_tmp[1021379]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1021383 'move' coerce_tmp[1021379](1021381 'deref' call_tmp[1019482]))
        (1019491 call reinitWithOwnedBuffer[1020955] lhs[1019197] remote_buf[1019394] len[1019388] call_tmp[1019474] coerce_tmp[1021379])
      }
    }
    (1019522 return _void[55])
  }
  function on_fn[1019641](ref arg lhs[1806968]:_ref(string)[937939], const  ref arg rhs[1806970]:_ref(string)[937939]) : void[4] "on" "resolved" "fn synchronization free"
  {
    {
      (1019648 call helpMe[1019192] lhs[1806968] rhs[1806970])
    }
    (1019651 return _void[55])
  }
  function on_fn[1030138](const in arg needle[1807004]:__serializeHelper[28086], const  ref arg x[1807006]:_ref(string)[937939], const in arg region[1807008]:range(byteIndex,bounded,false)[1025792], ref arg ret[1807010]:_ref(int(64))[936572]) : void[4] "on" "resolved"
  {
    val needle[2083637]:string[26] "temp"
    ref needle[2083638]:string[26] "temp"
    ref tmp[2083644]:string[26] "temp"
    (2083648 'move' tmp[2083644](2083646 'set reference' needle[2083637]))
    (2083641 call chpl__deserialize[1792422] needle[1807004] tmp[2083644])
    (2083653 'move' needle[2083638](2083651 'set reference' needle[2083637]))
    {
      val localRet[1030151]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1030153 'move' localRet[1030151] -2)
      ref call_tmp[1030158]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1030160 'move' call_tmp[1030158](1030163 call buffLen[757886] needle[2083638]))
      const-val nLen[1030166]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1031147]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1031151 'move' coerce_tmp[1031147](1031149 'deref' call_tmp[1030158]))
      (1842951 '=' nLen[1030166] coerce_tmp[1031147])
      (1030168 'noop')
      const-val call_tmp[1030172]:(range(int(64),bounded,false),int(64))[1084924] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1832689]:(range(int(64),bounded,false),int(64))[1084924] "temp"
      (1030177 call getView[1031154] x[1807006] region[1807008] ret_tmp[1832689])
      (1832692 'move' call_tmp[1030172] ret_tmp[1832689])
      const-val tmp[1030180]:(range(int(64),bounded,false),int(64))[1084924] "dead at end of block" "const" "insert auto destroy" "temp"
      (1030182 'move' tmp[1030180] call_tmp[1030172])
      1
      ref call_tmp[1030190]:_ref(range(int(64),bounded,false))[1026858] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1030192 'move' call_tmp[1030190](1086801 '.' tmp[1030180] x0[1084920]))
      const-val view[1030197]:range(int(64),bounded,false)[1026814] "dead at end of block" "const" "insert auto destroy"
      (1030199 'move' view[1030197](1086804 'deref' call_tmp[1030190]))
      const-val call_tmp[1030203]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (1030205 'move' call_tmp[1030203](1030208 call size[1035789] view[1030197]))
      const-val xLen[1030211]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      (1030213 'move' xLen[1030211] call_tmp[1030203])
      {
        const-val call_tmp[1030261]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1030263 'move' call_tmp[1030261](1030266 call ==[435628] nLen[1030166] 0))
        const-val call_tmp[1030269]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1030271 'move' call_tmp[1030269] call_tmp[1030261])
        if call_tmp[1030269]
        {
          {
            (1030295 call =[435327] localRet[1030151] -1)
          }
        }
      }
      const-val call_tmp[1030350]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1030352 'move' call_tmp[1030350](1030355 call >[437672] nLen[1030166] xLen[1030211]))
      const-val call_tmp[1030358]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1030360 'move' call_tmp[1030358] call_tmp[1030350])
      if call_tmp[1030358]
      {
        (1030375 call =[435327] localRet[1030151] -1)
      }
      const-val call_tmp[1030388]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1030390 'move' call_tmp[1030388](1030393 call ==[435628] localRet[1030151] -2))
      const-val call_tmp[1030396]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1030398 'move' call_tmp[1030396] call_tmp[1030388])
      if call_tmp[1030396]
      {
        (1030413 call =[435327] localRet[1030151] -1)
        const-val call_tmp[1030418]:string[26] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1829497]:string[26] "temp"
        (1030426 call localize[32886] needle[2083638] ret_tmp[1829497])
        (1829500 'move' call_tmp[1030418] ret_tmp[1829497])
        const localNeedle[1030427]:string[26] "dead at end of block" "const" "insert auto destroy"
        (1030429 'move' localNeedle[1030427] call_tmp[1030418])
        ref call_tmp[1030433]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1030435 'move' call_tmp[1030433](1030438 call buffLen[757886] localNeedle[1030427]))
        const-val needleLen[1030441]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[1086850]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1086854 'move' coerce_tmp[1086850](1086852 'deref' call_tmp[1030433]))
        (1030443 'move' needleLen[1030441] coerce_tmp[1086850])
        const-val call_tmp[1030447]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1030449 'move' call_tmp[1030447](1030452 call -[440416] xLen[1030211] nLen[1030166]))
        const-val call_tmp[1030455]:int(64)[13] "dead at end of block" "maybe param" "temp"
        (1030457 'move' call_tmp[1030455](1030460 call +[949666] call_tmp[1030447]))
        const-val numPossible[1030463]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        (1030465 'move' numPossible[1030463] call_tmp[1030455])
        const-val searchSpace[1030469]:range(int(64),bounded,false)[1026814] "dead at end of block" "const" "insert auto destroy"
        const-val tmp[1030471]:range(int(64),bounded,false)[1026814] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val tmp[1030482]:range(int(64),bounded,false)[1026814] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1030484]:range(int(64),boundedLow,false)[1087565] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1833527]:range(int(64),boundedLow,false)[1087565] "temp"
        (1030489 call chpl_build_low_bounded_range[1086958] 0 ret_tmp[1833527])
        (1833530 'move' call_tmp[1030484] ret_tmp[1833527])
        const-val ret_tmp[1833641]:range(int(64),bounded,false)[1026814] "temp"
        (1030494 call #[1087925] call_tmp[1030484] numPossible[1030463] ret_tmp[1833641])
        (1833644 'move' tmp[1030482] ret_tmp[1833641])
        (1030497 'move' tmp[1030471] tmp[1030482])
        (1030539 'move' searchSpace[1030469] tmp[1030471])
        {
          val _indexOfInterest[1030549]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1030551]:_ic_these_range_int64_t_bounded_F[1096703] "dead at end of block" "expr temp" "temp"
          (1030553 'move' _iterator[1030551](1030556 call _getIterator[1095320] searchSpace[1030469]))
          {
            val ret[1911487]:_ir_these_range_int64_t_bounded_F[1096709] "dead after last mention" "RVV" "temp"
            const-val _return_tmp_[1911489]:bool[10] "dead after last mention" "temp"
            const-val this[1911790]:range(int(64),bounded,false)[1026814] "temp"
            (1911795 'move' this[1911790](1911792 '.v' _iterator[1030551] F0_this[2014280]))
            (1911491 'move' _return_tmp_[1911489](1911494 call checkIfIterWillOverflow[1095814] this[1911790] 1))
            val i[1911497]:int(64)[13] "dead at end of block" "insert auto destroy"
            val call_tmp[1911499]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (1911501 'move' i[1911497] 0)
            ref call_tmp[1911504]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[1911797]:range(int(64),bounded,false)[1026814] "temp"
            (1911802 'move' this[1911797](1911799 '.v' _iterator[1030551] F0_this[2014280]))
            (1911506 'move' call_tmp[1911504](1911509 call _low[1028452] this[1911797]))
            const-val start[1911511]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1911513]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1911515 'move' coerce_tmp[1911513](1911517 'deref' call_tmp[1911504]))
            (1911519 '=' start[1911511] coerce_tmp[1911513])
            (1911522 'noop')
            ref call_tmp[1911523]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[1911804]:range(int(64),bounded,false)[1026814] "temp"
            (1911809 'move' this[1911804](1911806 '.v' _iterator[1030551] F0_this[2014280]))
            (1911525 'move' call_tmp[1911523](1911528 call _high[1028660] this[1911804]))
            const end[1911530]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1911532]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1911534 'move' coerce_tmp[1911532](1911536 'deref' call_tmp[1911523]))
            (1911538 '=' end[1911530] coerce_tmp[1911532])
            (1911541 'noop')
            CForLoop[1911542] hazard
            {
              const-val yret[1911557]:int(64)[13] "dead after last mention" "YVV" "temp"
              const-val call_tmp[1911559]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val this[1911811]:range(int(64),bounded,false)[1026814] "temp"
              (1911816 'move' this[1911811](1911813 '.v' _iterator[1030551] F0_this[2014280]))
              (1911561 'move' call_tmp[1911559](1911564 call chpl_intToIdx[1028480] this[1911811] i[1911497]))
              (1911567 'move' yret[1911557] call_tmp[1911559])
              const-val _yieldedIndex[1911581]:int(64)[13] "temp"
              (1911788 'move' _yieldedIndex[1911581] call_tmp[1911559])
              {
                const-val i[1911583]:int(64)[13] "const" "index var" "insert auto destroy"
                (1911585 'move' i[1911583] _yieldedIndex[1911581])
                {
                  {
                    val _indexOfInterest[1911590]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[1911592]:_ic_chpl_direct_counted_range_iter[1103790] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[1911594]:_ir_chpl_direct_counted_range_iter[1103796] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[1911596]:_ir_chpl_direct_counted_range_iter[1103796] "temp"
                    (1911599 call chpl_direct_counted_range_iter[457996] 0 nLen[1030166] ret_tmp[1911596])
                    (1911603 'move' call_tmp[1911594] ret_tmp[1911596])
                    (1911606 'move' _iterator[1911592](1911609 call _getIterator[1103805] call_tmp[1911594]))
                    {
                      val ret[1971925]:_ir_chpl_direct_counted_range_iter[1103796] "dead after last mention" "RVV" "temp"
                      val _indexOfInterest[1971927]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1971929]:_ic_chpl_direct_counted_range_iter_helper[1103540] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1971931]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1971933]:_ir_chpl_direct_counted_range_iter_helper[1103546] "temp"
                      const-val low[1972525]:int(64)[13] "temp"
                      (1972530 'move' low[1972525](1972527 '.v' _iterator[1911592] F0_low[2010431]))
                      const-val count[1972532]:int(64)[13] "temp"
                      (1972537 'move' count[1972532](1972534 '.v' _iterator[1911592] F1_count[2010435]))
                      (1971936 call chpl_direct_counted_range_iter_helper[1102098] low[1972525] count[1972532] ret_tmp[1971933])
                      (1971940 'move' call_tmp[1971931] ret_tmp[1971933])
                      (1971943 'move' _iterator[1971929](1971946 call _getIterator[1103555] call_tmp[1971931]))
                      {
                        val ret[1971949]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead after last mention" "RVV" "temp"
                        val call_tmp[1971951]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                        const-val tmp[1971953]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val tmp[1971955]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                        const-val call_tmp[1971957]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[1971959]:int(64)[13] "temp"
                        (1971961 'move' count[1971959](1971963 '.v' _iterator[1971929] F1_count[2014907]))
                        (1971966 'move' call_tmp[1971957](1971969 call <[948398] count[1971959]))
                        (1971971 'move' tmp[1971955] call_tmp[1971957])
                        (1971974 'move' tmp[1971953] call_tmp[1971957])
                        const-val call_tmp[1971977]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1971979 'move' call_tmp[1971977] call_tmp[1971957])
                        if call_tmp[1971957]
                        {
                          (1971985 call boundsCheckHalt[210167] "With a negative count, the range must have a last index.")
                        }
                        const-val tmp[1971988]:2*int(64)[1040056] "dead at end of block" "const" "insert auto destroy" "temp"
                        val tmp[1971990]:2*int(64)[1040056] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                        const-val tmp[1971992]:bool[10] "dead after last mention" "maybe param" "temp"
                        const-val call_tmp[1971994]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[1971996]:int(64)[13] "temp"
                        (1971998 'move' count[1971996](1972000 '.v' _iterator[1971929] F1_count[2014907]))
                        (1972003 'move' call_tmp[1971994](1972006 call ==[435628] count[1971996] 0))
                        (1972009 'move' tmp[1971992] call_tmp[1971994])
                        if call_tmp[1971994]
                        {
                          const-val tmp[1972014]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                          val call_tmp[1972016]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[1972018]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val low[1972020]:int(64)[13] "temp"
                          (1972022 'move' low[1972020](1972024 '.v' _iterator[1971929] F0_low[2014903]))
                          (1972027 'move' call_tmp[1972018](1972030 call _cast[956034] low[1972020]))
                          const-val call_tmp[1972032]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[1972034]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                          (1972036 'move' coerce_tmp[1972034](1972038 'cast' uint(64)[115] 1))
                          (1972041 'move' call_tmp[1972032](1972044 call -[962193] call_tmp[1972018]))
                          const-val call_tmp[1972046]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          (1972048 'move' call_tmp[1972046](1972051 call _cast[953543] call_tmp[1972032]))
                          const-val ret_tmp[1972053]:2*int(64)[1040056] "temp"
                          const-val low[1972055]:int(64)[13] "temp"
                          (1972057 'move' low[1972055](1972059 '.v' _iterator[1971929] F0_low[2014903]))
                          (1972063 call _build_tuple[1040014] low[1972055] call_tmp[1972046] ret_tmp[1972053])
                          (1972067 'move' tmp[1972014] ret_tmp[1972053])
                          (1972070 'move' tmp[1971990] tmp[1972014])
                        }
                        {
                          const-val tmp[1972074]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                          val call_tmp[1972076]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[1972078]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val count[1972080]:int(64)[13] "temp"
                          (1972082 'move' count[1972080](1972084 '.v' _iterator[1971929] F1_count[2014907]))
                          (1972087 'move' call_tmp[1972078] count[1972080])
                          const-val call_tmp[1972090]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val count[1972092]:int(64)[13] "temp"
                          (1972094 'move' count[1972092](1972096 '.v' _iterator[1971929] F1_count[2014907]))
                          (1972099 'move' call_tmp[1972090](1972102 call -[962226] count[1972092]))
                          const-val call_tmp[1972104]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val low[1972106]:int(64)[13] "temp"
                          (1972108 'move' low[1972106](1972110 '.v' _iterator[1971929] F0_low[2014903]))
                          (1972113 'move' call_tmp[1972104](1972116 call +[439636] low[1972106] call_tmp[1972090]))
                          const-val ret_tmp[1972119]:2*int(64)[1040056] "temp"
                          const-val low[1972121]:int(64)[13] "temp"
                          (1972123 'move' low[1972121](1972125 '.v' _iterator[1971929] F0_low[2014903]))
                          (1972129 call _build_tuple[1040014] low[1972121] call_tmp[1972104] ret_tmp[1972119])
                          (1972133 'move' tmp[1972074] ret_tmp[1972119])
                          (1972136 'move' tmp[1971990] tmp[1972074])
                        }
                        (1972140 '=' tmp[1971988] tmp[1971990])
                        (1972143 'noop')
                        1
                        ref call_tmp[1972145]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
                        (1972147 'move' call_tmp[1972145](1972149 '.' tmp[1971988] x0[1040052]))
                        const-val start[1972152]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                        const-val coerce_tmp[1972154]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                        (1972156 'move' coerce_tmp[1972154](1972158 'deref' call_tmp[1972145]))
                        (1972160 '=' start[1972152] coerce_tmp[1972154])
                        (1972163 'noop')
                        ref call_tmp[1972164]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
                        (1972166 'move' call_tmp[1972164](1972168 '.' tmp[1971988] x1[1040054]))
                        const-val end[1972171]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                        const-val coerce_tmp[1972173]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                        (1972175 'move' coerce_tmp[1972173](1972177 'deref' call_tmp[1972164]))
                        (1972179 '=' end[1972171] coerce_tmp[1972173])
                        (1972182 'noop')
                        val _indexOfInterest[1972183]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[1972185]:_ic_chpl_direct_param_stride_range_iter[1103286] "dead at end of block" "expr temp" "temp"
                        const-val call_tmp[1972187]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead at end of block" "expr temp" "maybe param" "temp"
                        const-val ret_tmp[1972189]:_ir_chpl_direct_param_stride_range_iter[1103292] "temp"
                        (1972192 call chpl_direct_param_stride_range_iter[1102524] coerce_tmp[1972154] coerce_tmp[1972173] ret_tmp[1972189])
                        (1972196 'move' call_tmp[1972187] ret_tmp[1972189])
                        (1972199 'move' _iterator[1972185](1972202 call _getIterator[1103301] call_tmp[1972187]))
                        {
                          val ret[1972205]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead after last mention" "RVV" "temp"
                          val call_tmp[1972207]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (1972210 call chpl_range_check_stride[1102844])
                          val i[1972211]:int(64)[13] "dead at end of block" "insert auto destroy"
                          val call_tmp[1972213]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (1972215 'move' i[1972211] 0)
                          val call_tmp[1972218]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val default_arg_first[1972220]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val low[1972222]:int(64)[13] "temp"
                          (1972224 'move' low[1972222](1972226 '.v' _iterator[1972185] F0_low[2016401]))
                          (1972229 'move' default_arg_first[1972220](1972232 call chpl_checkIfRangeIterWillOverflow_default_first[1103198] low[1972222]))
                          const-val default_arg_last[1972234]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val high[1972236]:int(64)[13] "temp"
                          (1972238 'move' high[1972236](1972240 '.v' _iterator[1972185] F1_high[2016405]))
                          (1972243 'move' default_arg_last[1972234](1972246 call chpl_checkIfRangeIterWillOverflow_default_last[1103226] high[1972236]))
                          const-val _return_tmp_[1972248]:bool[10] "dead after last mention" "temp"
                          const-val low[1972250]:int(64)[13] "temp"
                          (1972252 'move' low[1972250](1972254 '.v' _iterator[1972185] F0_low[2016401]))
                          const-val high[1972257]:int(64)[13] "temp"
                          (1972259 'move' high[1972257](1972261 '.v' _iterator[1972185] F1_high[2016405]))
                          (1972264 'move' _return_tmp_[1972248](1972267 call chpl_checkIfRangeIterWillOverflow[1096076] low[1972250] high[1972257] 1 default_arg_first[1972220] default_arg_last[1972234] 1))
                          CForLoop[1972274]
                          {
                            const-val yret[1972303]:int(64)[13] "dead after last mention" "YVV" "temp"
                            (1972305 'move' yret[1972303] i[1972211])
                            const-val _yieldedIndex[1972308]:int(64)[13] "temp"
                            (1972310 'move' _yieldedIndex[1972308] i[1972211])
                            {
                              const-val i[1972314]:int(64)[13] "const" "index var" "insert auto destroy"
                              (1972316 'move' i[1972314] _yieldedIndex[1972308])
                              const-val yret[1972319]:int(64)[13] "dead after last mention" "YVV" "temp"
                              (1972321 'move' yret[1972319] _yieldedIndex[1972308])
                              const-val _yieldedIndex[1972324]:int(64)[13] "temp"
                              (1972326 'move' _yieldedIndex[1972324] _yieldedIndex[1972308])
                              {
                                const-val i[1972330]:int(64)[13] "const" "index var" "insert auto destroy"
                                (1972332 'move' i[1972330] _yieldedIndex[1972324])
                                const-val yret[1972335]:int(64)[13] "dead after last mention" "YVV" "temp"
                                (1972337 'move' yret[1972335] _yieldedIndex[1972324])
                                const-val _yieldedIndex[1972373]:int(64)[13] "temp"
                                (1972523 'move' _yieldedIndex[1972373] _yieldedIndex[1972324])
                                {
                                  const-val j[1972375]:int(64)[13] "const" "index var" "insert auto destroy"
                                  (1972377 'move' j[1972375] _yieldedIndex[1972373])
                                  {
                                    const-val call_tmp[1972381]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                    (1972383 'move' call_tmp[1972381](1972386 call +[439636] i[1911583] j[1972375]))
                                    const-val call_tmp[1972389]:int(64)[13] "dead at end of block" "maybe param" "temp"
                                    (1972391 'move' call_tmp[1972389](1972394 call orderToIndex[1104040] view[1030197] call_tmp[1972381]))
                                    const-val idx[1972397]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                    (1972399 'move' idx[1972397] call_tmp[1972389])
                                    ref call_tmp[1972402]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
                                    ref _this_tmp_[1972404]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "reference to a const" "temp"
                                    (1972406 'move' _this_tmp_[1972404](1972409 call buff[757964] x[1807006]))
                                    val coerce_tmp[1972411]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1972413 'move' coerce_tmp[1972411](1972415 'deref' _this_tmp_[1972404]))
                                    (1972417 'move' call_tmp[1972402](1972420 call this[954091] coerce_tmp[1972411] idx[1972397]))
                                    ref call_tmp[1972423]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
                                    ref _this_tmp_[1972425]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "reference to a const" "temp"
                                    (1972427 'move' _this_tmp_[1972425](1972430 call buff[757964] localNeedle[1030427]))
                                    val coerce_tmp[1972432]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1972434 'move' coerce_tmp[1972432](1972436 'deref' _this_tmp_[1972425]))
                                    (1972438 'move' call_tmp[1972423](1972441 call this[954091] coerce_tmp[1972432] j[1972375]))
                                    const-val call_tmp[1972444]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    const-val coerce_tmp[1972446]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1972448 'move' coerce_tmp[1972446](1972450 'deref' call_tmp[1972402]))
                                    const-val coerce_tmp[1972452]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1972454 'move' coerce_tmp[1972452](1972456 'deref' call_tmp[1972423]))
                                    (1972458 'move' call_tmp[1972444](1972461 call !=[436034] coerce_tmp[1972446] coerce_tmp[1972452]))
                                    const-val call_tmp[1972464]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1972466 'move' call_tmp[1972464] call_tmp[1972444])
                                    if call_tmp[1972464]
                                    {
                                      (1972514 call _freeIterator[1103474] _iterator[1972185])
                                      (1972517 call chpl__autoDestroy[1534672] tmp[1971988])
                                      (1972520 call _freeIterator[1103724] _iterator[1971929])
                                      break _breakLabel[1911751] _breakLabel[1911751]
                                    }
                                    const-val call_tmp[1972474]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1972476 'move' call_tmp[1972474](1972479 call -[962226] nLen[1030166]))
                                    const-val call_tmp[1972481]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1972483 'move' call_tmp[1972481](1972486 call ==[435628] j[1972375] call_tmp[1972474]))
                                    const-val call_tmp[1972489]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1972491 'move' call_tmp[1972489] call_tmp[1972481])
                                    if call_tmp[1972489]
                                    {
                                      {
                                        const-val call_tmp[1972497]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                        (1972499 'move' call_tmp[1972497](1972502 call orderToIndex[1104040] view[1030197] i[1911583]))
                                        (1972506 call =[435327] localRet[1030151] call_tmp[1972497])
                                      }
                                    }
                                  }
                                  label _continueLabel[1972510]
                                }
                              }
                            }
                            {
                              const-val low[1972276]:int(64)[13] "temp"
                              (1972278 'move' low[1972276](1972280 '.v' _iterator[1972185] F0_low[2016401]))
                              (1972283 '=' i[1972211] low[1972276])
                            }
                            {
                              const-val high[1972287]:int(64)[13] "temp"
                              (1972289 'move' high[1972287](1972291 '.v' _iterator[1972185] F1_high[2016405]))
                              (1972294 '<=' i[1972211] high[1972287])
                            }
                            {
                              val call_tmp[1972298]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              (1972300 '+=' i[1972211] 1)
                            }
                          }
                          label _endchpl_direct_param_stride_range_iter[1972356]
                        }
                        (1972359 call _freeIterator[1103474] _iterator[1972185])
                        (1972362 call chpl__autoDestroy[1534672] tmp[1971988])
                        label _endchpl_direct_counted_range_iter_helper[1972364]
                      }
                      (1972367 call _freeIterator[1103724] _iterator[1971929])
                      label _endchpl_direct_counted_range_iter[1972369]
                    }
                    label _breakLabel[1911751]
                    (1911754 call _freeIterator[1103974] _iterator[1911592])
                  }
                  const-val tmp[1911756]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  const-val tmp[1911758]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  const-val call_tmp[1911760]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1911762 'move' call_tmp[1911760](1911765 call !=[436012] localRet[1030151] -1))
                  (1911768 'move' tmp[1911758] call_tmp[1911760])
                  (1911771 'move' tmp[1911756] tmp[1911758])
                  const-val call_tmp[1911774]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1911776 'move' call_tmp[1911774] tmp[1911756])
                  if call_tmp[1911774]
                  {
                    break _breakLabel[1030840] _breakLabel[1030840]
                  }
                }
                label _continueLabel[1911784]
              }
              {
                (1911544 '=' i[1911497] coerce_tmp[1911513])
              }
              {
                (1911548 '<=' i[1911497] end[1911530])
              }
              {
                val call_tmp[1911552]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1911554 '+=' i[1911497] 1)
              }
            }
            label _endthese[1911577]
          }
          label _breakLabel[1030840]
          (1842962 call _freeIterator[1102006] _iterator[1030551])
        }
        (1842965 call chpl__autoDestroy[1534375] searchSpace[1030469])
        (1842968 call chpl__autoDestroy[1540744] call_tmp[1030484])
        (1842971 call chpl__autoDestroy[1461530] localNeedle[1030427])
      }
      (1030860 call =[435327] ret[1807010] localRet[1030151])
      (1842975 call chpl__autoDestroy[1534375] view[1030197])
      (1842978 call chpl__autoDestroy[1540699] tmp[1030180])
    }
    (2083655 call chpl__autoDestroy[1461717] needle[1807004])
    (2083658 call chpl__autoDestroy[1461530] needle[2083637])
    (1030866 return _void[55])
  }
  function simpleCaseHelper[1031274](const in arg r[1807012]:range(byteIndex,bounded,false)[1025792], const  ref arg x[1807014]:_ref(string)[937939], ref arg _retArg[1832719]:_ref((range(int(64),bounded,false),int(64)))[1086486]) : void[4] "fn returns via _retArg" "resolved" "fn synchronization free"
  {
    const-val ret[1031277]:(range(int(64),bounded,false),int(64))[1084924] "dead after last mention" "RVV" "temp"
    val call_tmp[1031295]:range(int(64),bounded,false)[1026814] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1031304]:range(int(64),bounded,false)[1026814] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1832725]:range(int(64),bounded,false)[1026814] "temp"
    (1031309 call _cast[1032483] r[1807012] ret_tmp[1832725])
    (1832728 'move' call_tmp[1031304] ret_tmp[1832725])
    const-val intR[1031312]:range(int(64),bounded,false)[1026814] "dead at end of block" "const" "insert auto destroy"
    (1031314 'move' intR[1031312] call_tmp[1031304])
    {
      const-val call_tmp[1031327]:range(int(64),bounded,false)[1026814] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1829273]:range(int(64),bounded,false)[1026814] "temp"
      (1031332 call byteIndices[31065] x[1807014] ret_tmp[1829273])
      (1829276 'move' call_tmp[1031327] ret_tmp[1829273])
      const-val call_tmp[1031335]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1031337 'move' call_tmp[1031335](1031343 call boundsCheck[1033374] call_tmp[1031327] intR[1031312]))
      const-val call_tmp[1031345]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1031347 'move' call_tmp[1031345](1031350 call ![7494] call_tmp[1031335]))
      const-val call_tmp[1031352]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1031354 'move' call_tmp[1031352] call_tmp[1031345])
      if call_tmp[1031352]
      {
        val call_tmp[1031361]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1031391]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1031393 'move' call_tmp[1031391](1031396 call numBytes[32807] x[1807014]))
        (1031400 call halt[1042956] "range " r[1807012] " out of bounds for string with length " call_tmp[1031391])
      }
      (1842982 call chpl__autoDestroy[1534375] call_tmp[1031327])
    }
    val call_tmp[1031407]:byteIndex[28170] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      const-val call_tmp[1031432]:range(int(64),bounded,false)[1026814] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1829279]:range(int(64),bounded,false)[1026814] "temp"
      (1031437 call byteIndices[31065] x[1807014] ret_tmp[1829279])
      (1829282 'move' call_tmp[1031432] ret_tmp[1829279])
      const-val call_tmp[1031440]:range(int(64),bounded,false)[1026814] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1832797]:range(int(64),bounded,false)[1026814] "temp"
      (1031445 call this[1037448] intR[1031312] call_tmp[1031432] ret_tmp[1832797])
      (1832800 'move' call_tmp[1031440] ret_tmp[1832797])
      const-val call_tmp[1031454]:(range(int(64),bounded,false),int(64))[1084924] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1833449]:(range(int(64),bounded,false),int(64))[1084924] "temp"
      (1031459 call _build_tuple[1084882] call_tmp[1031440] -1 ret_tmp[1833449])
      (1833452 'move' call_tmp[1031454] ret_tmp[1833449])
      (1031462 'move' ret[1031277] call_tmp[1031454])
      (1842985 call chpl__autoDestroy[1534375] call_tmp[1031440])
      (1842988 call chpl__autoDestroy[1534375] call_tmp[1031432])
      (1842991 call chpl__autoDestroy[1534375] intR[1031312])
      gotoReturn _end_simpleCaseHelper[1031519] _end_simpleCaseHelper[1031519]
    }
    (1842994 call chpl__autoDestroy[1534375] intR[1031312])
    label _end_simpleCaseHelper[1031519]
    (1832721 '=' _retArg[1832719] ret[1031277])
    (1832723 return _void[55])
  }
  function simpleCaseHelper[1112267](const in arg r[1807130]:range(int(64),bounded,false)[1026814], const  ref arg x[1807132]:_ref(string)[937939], ref arg _retArg[1833960]:_ref((range(int(64),bounded,false),int(64)))[1086486]) : void[4] "fn returns via _retArg" "resolved" "fn synchronization free"
  {
    const-val ret[1112270]:(range(int(64),bounded,false),int(64))[1084924] "dead after last mention" "RVV" "temp"
    val call_tmp[1112288]:range(int(64),bounded,false)[1026814] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1112297]:range(int(64),bounded,false)[1026814] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1833966]:range(int(64),bounded,false)[1026814] "temp"
    (1113420 call _removed_cast[1113423] r[1807130] ret_tmp[1833966])
    (1833969 'move' call_tmp[1112297] ret_tmp[1833966])
    const-val intR[1112305]:range(int(64),bounded,false)[1026814] "dead at end of block" "const" "insert auto destroy"
    (1112307 'move' intR[1112305] call_tmp[1112297])
    {
      const-val call_tmp[1112320]:range(int(64),bounded,false)[1026814] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1829285]:range(int(64),bounded,false)[1026814] "temp"
      (1112325 call byteIndices[31065] x[1807132] ret_tmp[1829285])
      (1829288 'move' call_tmp[1112320] ret_tmp[1829285])
      const-val call_tmp[1112328]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1112330 'move' call_tmp[1112328](1112336 call boundsCheck[1033374] call_tmp[1112320] intR[1112305]))
      const-val call_tmp[1112338]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1112340 'move' call_tmp[1112338](1112343 call ![7494] call_tmp[1112328]))
      const-val call_tmp[1112345]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1112347 'move' call_tmp[1112345] call_tmp[1112338])
      if call_tmp[1112345]
      {
        val call_tmp[1112354]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1112384]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1112386 'move' call_tmp[1112384](1112389 call numBytes[32807] x[1807132]))
        (1112393 call halt[1113460] "range " r[1807130] " out of bounds for string with length " call_tmp[1112384])
      }
      (1844484 call chpl__autoDestroy[1534375] call_tmp[1112320])
    }
    val call_tmp[1112400]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      const-val call_tmp[1112464]:range(int(64),bounded,false)[1026814] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1829291]:range(int(64),bounded,false)[1026814] "temp"
      (1112469 call byteIndices[31065] x[1807132] ret_tmp[1829291])
      (1829294 'move' call_tmp[1112464] ret_tmp[1829291])
      const-val call_tmp[1112472]:range(int(64),bounded,false)[1026814] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1832809]:range(int(64),bounded,false)[1026814] "temp"
      (1112477 call this[1037448] intR[1112305] call_tmp[1112464] ret_tmp[1832809])
      (1832812 'move' call_tmp[1112472] ret_tmp[1832809])
      const-val retRange[1112479]:range(int(64),bounded,false)[1026814] "dead at end of block" "const" "insert auto destroy"
      (1112481 'move' retRange[1112479] call_tmp[1112472])
      const-val call_tmp[1112486]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1112488 'move' call_tmp[1112486](1112491 call size[1035789] retRange[1112479]))
      const-val call_tmp[1112494]:(range(int(64),bounded,false),int(64))[1084924] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1833455]:(range(int(64),bounded,false),int(64))[1084924] "temp"
      (1112499 call _build_tuple[1084882] retRange[1112479] call_tmp[1112486] ret_tmp[1833455])
      (1833458 'move' call_tmp[1112494] ret_tmp[1833455])
      (1112502 'move' ret[1112270] call_tmp[1112494])
      (1844487 call chpl__autoDestroy[1534375] retRange[1112479])
      (1844490 call chpl__autoDestroy[1534375] call_tmp[1112464])
      (1844493 call chpl__autoDestroy[1534375] intR[1112305])
      gotoReturn _end_simpleCaseHelper[1112512] _end_simpleCaseHelper[1112512]
    }
    (1844496 call chpl__autoDestroy[1534375] intR[1112305])
    label _end_simpleCaseHelper[1112512]
    (1833962 '=' _retArg[1833960] ret[1112270])
    (1833964 return _void[55])
  }
  function simpleCaseHelper[1126400](const in arg r[1807134]:range(int(64),boundedLow,false)[1087565], const  ref arg x[1807136]:_ref(string)[937939], ref arg _retArg[1834254]:_ref((range(int(64),bounded,false),int(64)))[1086486]) : void[4] "fn returns via _retArg" "resolved" "fn synchronization free"
  {
    const-val ret[1126403]:(range(int(64),bounded,false),int(64))[1084924] "dead after last mention" "RVV" "temp"
    val call_tmp[1126421]:range(int(64),boundedLow,false)[1087565] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1126430]:range(int(64),boundedLow,false)[1087565] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1834260]:range(int(64),boundedLow,false)[1087565] "temp"
    (1127553 call _removed_cast[1127556] r[1807134] ret_tmp[1834260])
    (1834263 'move' call_tmp[1126430] ret_tmp[1834260])
    const-val intR[1126438]:range(int(64),boundedLow,false)[1087565] "dead at end of block" "const" "insert auto destroy"
    (1126440 'move' intR[1126438] call_tmp[1126430])
    {
      const-val call_tmp[1126453]:range(int(64),bounded,false)[1026814] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1829303]:range(int(64),bounded,false)[1026814] "temp"
      (1126458 call byteIndices[31065] x[1807136] ret_tmp[1829303])
      (1829306 'move' call_tmp[1126453] ret_tmp[1829303])
      const-val call_tmp[1126461]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1126463 'move' call_tmp[1126461](1126469 call boundsCheck[1127621] call_tmp[1126453] intR[1126438]))
      const-val call_tmp[1126471]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1126473 'move' call_tmp[1126471](1126476 call ![7494] call_tmp[1126461]))
      const-val call_tmp[1126478]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1126480 'move' call_tmp[1126478] call_tmp[1126471])
      if call_tmp[1126478]
      {
        val call_tmp[1126487]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1126517]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1126519 'move' call_tmp[1126517](1126522 call numBytes[32807] x[1807136]))
        (1126526 call halt[1128284] "range " r[1807134] " out of bounds for string with length " call_tmp[1126517])
      }
      (1844689 call chpl__autoDestroy[1534375] call_tmp[1126453])
    }
    val call_tmp[1126533]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      const-val call_tmp[1126597]:range(int(64),bounded,false)[1026814] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1829309]:range(int(64),bounded,false)[1026814] "temp"
      (1126602 call byteIndices[31065] x[1807136] ret_tmp[1829309])
      (1829312 'move' call_tmp[1126597] ret_tmp[1829309])
      const-val call_tmp[1126605]:range(int(64),bounded,false)[1026814] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1834318]:range(int(64),bounded,false)[1026814] "temp"
      (1126610 call this[1138969] intR[1126438] call_tmp[1126597] ret_tmp[1834318])
      (1834321 'move' call_tmp[1126605] ret_tmp[1834318])
      const-val retRange[1126612]:range(int(64),bounded,false)[1026814] "dead at end of block" "const" "insert auto destroy"
      (1126614 'move' retRange[1126612] call_tmp[1126605])
      const-val call_tmp[1126619]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1126621 'move' call_tmp[1126619](1126624 call size[1035789] retRange[1126612]))
      const-val call_tmp[1126627]:(range(int(64),bounded,false),int(64))[1084924] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1833473]:(range(int(64),bounded,false),int(64))[1084924] "temp"
      (1126632 call _build_tuple[1084882] retRange[1126612] call_tmp[1126619] ret_tmp[1833473])
      (1833476 'move' call_tmp[1126627] ret_tmp[1833473])
      (1126635 'move' ret[1126403] call_tmp[1126627])
      (1844692 call chpl__autoDestroy[1534375] retRange[1126612])
      (1844695 call chpl__autoDestroy[1534375] call_tmp[1126597])
      (1844698 call chpl__autoDestroy[1540744] intR[1126438])
      gotoReturn _end_simpleCaseHelper[1126645] _end_simpleCaseHelper[1126645]
    }
    (1844701 call chpl__autoDestroy[1540744] intR[1126438])
    label _end_simpleCaseHelper[1126645]
    (1834256 '=' _retArg[1834254] ret[1126403])
    (1834258 return _void[55])
  }
  function simpleCaseHelper[1144561](const in arg r[1807138]:range(byteIndex,boundedLow,false)[1143403], const  ref arg x[1807140]:_ref(string)[937939], ref arg _retArg[1834470]:_ref((range(int(64),bounded,false),int(64)))[1086486]) : void[4] "fn returns via _retArg" "resolved" "fn synchronization free"
  {
    const-val ret[1144564]:(range(int(64),bounded,false),int(64))[1084924] "dead after last mention" "RVV" "temp"
    val call_tmp[1144582]:range(int(64),boundedLow,false)[1087565] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1144591]:range(int(64),boundedLow,false)[1087565] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1834476]:range(int(64),boundedLow,false)[1087565] "temp"
    (1144596 call _cast[1145813] r[1807138] ret_tmp[1834476])
    (1834479 'move' call_tmp[1144591] ret_tmp[1834476])
    const-val intR[1144599]:range(int(64),boundedLow,false)[1087565] "dead at end of block" "const" "insert auto destroy"
    (1144601 'move' intR[1144599] call_tmp[1144591])
    {
      const-val call_tmp[1144614]:range(int(64),bounded,false)[1026814] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1829315]:range(int(64),bounded,false)[1026814] "temp"
      (1144619 call byteIndices[31065] x[1807140] ret_tmp[1829315])
      (1829318 'move' call_tmp[1144614] ret_tmp[1829315])
      const-val call_tmp[1144622]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1144624 'move' call_tmp[1144622](1144630 call boundsCheck[1127621] call_tmp[1144614] intR[1144599]))
      const-val call_tmp[1144632]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1144634 'move' call_tmp[1144632](1144637 call ![7494] call_tmp[1144622]))
      const-val call_tmp[1144639]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1144641 'move' call_tmp[1144639] call_tmp[1144632])
      if call_tmp[1144639]
      {
        val call_tmp[1144648]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1144678]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1144680 'move' call_tmp[1144678](1144683 call numBytes[32807] x[1807140]))
        (1144687 call halt[1146455] "range " r[1807138] " out of bounds for string with length " call_tmp[1144678])
      }
      (1844805 call chpl__autoDestroy[1534375] call_tmp[1144614])
    }
    val call_tmp[1144694]:byteIndex[28170] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      const-val call_tmp[1144719]:range(int(64),bounded,false)[1026814] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1829321]:range(int(64),bounded,false)[1026814] "temp"
      (1144724 call byteIndices[31065] x[1807140] ret_tmp[1829321])
      (1829324 'move' call_tmp[1144719] ret_tmp[1829321])
      const-val call_tmp[1144727]:range(int(64),bounded,false)[1026814] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1834324]:range(int(64),bounded,false)[1026814] "temp"
      (1144732 call this[1138969] intR[1144599] call_tmp[1144719] ret_tmp[1834324])
      (1834327 'move' call_tmp[1144727] ret_tmp[1834324])
      const-val call_tmp[1144741]:(range(int(64),bounded,false),int(64))[1084924] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1833485]:(range(int(64),bounded,false),int(64))[1084924] "temp"
      (1144746 call _build_tuple[1084882] call_tmp[1144727] -1 ret_tmp[1833485])
      (1833488 'move' call_tmp[1144741] ret_tmp[1833485])
      (1144749 'move' ret[1144564] call_tmp[1144741])
      (1844808 call chpl__autoDestroy[1534375] call_tmp[1144727])
      (1844811 call chpl__autoDestroy[1534375] call_tmp[1144719])
      (1844814 call chpl__autoDestroy[1540744] intR[1144599])
      gotoReturn _end_simpleCaseHelper[1144806] _end_simpleCaseHelper[1144806]
    }
    (1844817 call chpl__autoDestroy[1540744] intR[1144599])
    label _end_simpleCaseHelper[1144806]
    (1834472 '=' _retArg[1834470] ret[1144564])
    (1834474 return _void[55])
  }
  function on_fn[1181851](const in arg needle[1807154]:__serializeHelper[28086], const  ref arg x[1807156]:_ref(string)[937939], const in arg region[1807158]:range(byteIndex,boundedLow,false)[1143403], ref arg ret[1807160]:_ref(int(64))[936572]) : void[4] "on" "resolved"
  {
    val needle[2084176]:string[26] "temp"
    ref needle[2084177]:string[26] "temp"
    ref tmp[2084183]:string[26] "temp"
    (2084187 'move' tmp[2084183](2084185 'set reference' needle[2084176]))
    (2084180 call chpl__deserialize[1792422] needle[1807154] tmp[2084183])
    (2084192 'move' needle[2084177](2084190 'set reference' needle[2084176]))
    {
      val localRet[1181864]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1181866 'move' localRet[1181864] -2)
      ref call_tmp[1181871]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1181873 'move' call_tmp[1181871](1181876 call buffLen[757886] needle[2084177]))
      const-val nLen[1181879]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1182646]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1182650 'move' coerce_tmp[1182646](1182648 'deref' call_tmp[1181871]))
      (1846974 '=' nLen[1181879] coerce_tmp[1182646])
      (1181881 'noop')
      const-val call_tmp[1181885]:(range(int(64),bounded,false),int(64))[1084924] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1834446]:(range(int(64),bounded,false),int(64))[1084924] "temp"
      (1181890 call getView[1144441] x[1807156] region[1807158] ret_tmp[1834446])
      (1834449 'move' call_tmp[1181885] ret_tmp[1834446])
      const-val tmp[1181893]:(range(int(64),bounded,false),int(64))[1084924] "dead at end of block" "const" "insert auto destroy" "temp"
      (1181895 'move' tmp[1181893] call_tmp[1181885])
      1
      ref call_tmp[1181903]:_ref(range(int(64),bounded,false))[1026858] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1181905 'move' call_tmp[1181903](1182661 '.' tmp[1181893] x0[1084920]))
      const-val view[1181910]:range(int(64),bounded,false)[1026814] "dead at end of block" "const" "insert auto destroy"
      (1181912 'move' view[1181910](1182664 'deref' call_tmp[1181903]))
      const-val call_tmp[1181916]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (1181918 'move' call_tmp[1181916](1181921 call size[1035789] view[1181910]))
      const-val xLen[1181924]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      (1181926 'move' xLen[1181924] call_tmp[1181916])
      {
        const-val call_tmp[1181974]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1181976 'move' call_tmp[1181974](1181979 call ==[435628] nLen[1181879] 0))
        const-val call_tmp[1181982]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1181984 'move' call_tmp[1181982] call_tmp[1181974])
        if call_tmp[1181982]
        {
          {
            (1182008 call =[435327] localRet[1181864] -1)
          }
        }
      }
      const-val call_tmp[1182063]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1182065 'move' call_tmp[1182063](1182068 call >[437672] nLen[1181879] xLen[1181924]))
      const-val call_tmp[1182071]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1182073 'move' call_tmp[1182071] call_tmp[1182063])
      if call_tmp[1182071]
      {
        (1182088 call =[435327] localRet[1181864] -1)
      }
      const-val call_tmp[1182101]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1182103 'move' call_tmp[1182101](1182106 call ==[435628] localRet[1181864] -2))
      const-val call_tmp[1182109]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1182111 'move' call_tmp[1182109] call_tmp[1182101])
      if call_tmp[1182109]
      {
        (1182126 call =[435327] localRet[1181864] -1)
        const-val call_tmp[1182131]:string[26] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1829563]:string[26] "temp"
        (1182139 call localize[32886] needle[2084177] ret_tmp[1829563])
        (1829566 'move' call_tmp[1182131] ret_tmp[1829563])
        const localNeedle[1182140]:string[26] "dead at end of block" "const" "insert auto destroy"
        (1182142 'move' localNeedle[1182140] call_tmp[1182131])
        ref call_tmp[1182146]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1182148 'move' call_tmp[1182146](1182151 call buffLen[757886] localNeedle[1182140]))
        const-val needleLen[1182154]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[1182710]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1182714 'move' coerce_tmp[1182710](1182712 'deref' call_tmp[1182146]))
        (1182156 'move' needleLen[1182154] coerce_tmp[1182710])
        const-val call_tmp[1182160]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1182162 'move' call_tmp[1182160](1182165 call -[440416] xLen[1181924] nLen[1181879]))
        const-val call_tmp[1182168]:int(64)[13] "dead at end of block" "maybe param" "temp"
        (1182170 'move' call_tmp[1182168](1182173 call +[949666] call_tmp[1182160]))
        const-val numPossible[1182176]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        (1182178 'move' numPossible[1182176] call_tmp[1182168])
        const-val searchSpace[1182182]:range(int(64),bounded,false)[1026814] "dead at end of block" "const" "insert auto destroy"
        const-val tmp[1182184]:range(int(64),bounded,false)[1026814] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val tmp[1182195]:range(int(64),bounded,false)[1026814] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1182197]:range(int(64),boundedLow,false)[1087565] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1833563]:range(int(64),boundedLow,false)[1087565] "temp"
        (1182202 call chpl_build_low_bounded_range[1086958] 0 ret_tmp[1833563])
        (1833566 'move' call_tmp[1182197] ret_tmp[1833563])
        const-val ret_tmp[1833659]:range(int(64),bounded,false)[1026814] "temp"
        (1182207 call #[1087925] call_tmp[1182197] numPossible[1182176] ret_tmp[1833659])
        (1833662 'move' tmp[1182195] ret_tmp[1833659])
        (1182210 'move' tmp[1182184] tmp[1182195])
        (1182252 'move' searchSpace[1182182] tmp[1182184])
        {
          val _indexOfInterest[1182262]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1182264]:_ic_these_range_int64_t_bounded_F[1096703] "dead at end of block" "expr temp" "temp"
          (1182266 'move' _iterator[1182264](1182269 call _getIterator[1095320] searchSpace[1182182]))
          {
            val ret[1915189]:_ir_these_range_int64_t_bounded_F[1096709] "dead after last mention" "RVV" "temp"
            const-val _return_tmp_[1915191]:bool[10] "dead after last mention" "temp"
            const-val this[1915492]:range(int(64),bounded,false)[1026814] "temp"
            (1915497 'move' this[1915492](1915494 '.v' _iterator[1182264] F0_this[2014280]))
            (1915193 'move' _return_tmp_[1915191](1915196 call checkIfIterWillOverflow[1095814] this[1915492] 1))
            val i[1915199]:int(64)[13] "dead at end of block" "insert auto destroy"
            val call_tmp[1915201]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (1915203 'move' i[1915199] 0)
            ref call_tmp[1915206]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[1915499]:range(int(64),bounded,false)[1026814] "temp"
            (1915504 'move' this[1915499](1915501 '.v' _iterator[1182264] F0_this[2014280]))
            (1915208 'move' call_tmp[1915206](1915211 call _low[1028452] this[1915499]))
            const-val start[1915213]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1915215]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1915217 'move' coerce_tmp[1915215](1915219 'deref' call_tmp[1915206]))
            (1915221 '=' start[1915213] coerce_tmp[1915215])
            (1915224 'noop')
            ref call_tmp[1915225]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[1915506]:range(int(64),bounded,false)[1026814] "temp"
            (1915511 'move' this[1915506](1915508 '.v' _iterator[1182264] F0_this[2014280]))
            (1915227 'move' call_tmp[1915225](1915230 call _high[1028660] this[1915506]))
            const end[1915232]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1915234]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1915236 'move' coerce_tmp[1915234](1915238 'deref' call_tmp[1915225]))
            (1915240 '=' end[1915232] coerce_tmp[1915234])
            (1915243 'noop')
            CForLoop[1915244] hazard
            {
              const-val yret[1915259]:int(64)[13] "dead after last mention" "YVV" "temp"
              const-val call_tmp[1915261]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val this[1915513]:range(int(64),bounded,false)[1026814] "temp"
              (1915518 'move' this[1915513](1915515 '.v' _iterator[1182264] F0_this[2014280]))
              (1915263 'move' call_tmp[1915261](1915266 call chpl_intToIdx[1028480] this[1915513] i[1915199]))
              (1915269 'move' yret[1915259] call_tmp[1915261])
              const-val _yieldedIndex[1915283]:int(64)[13] "temp"
              (1915490 'move' _yieldedIndex[1915283] call_tmp[1915261])
              {
                const-val i[1915285]:int(64)[13] "const" "index var" "insert auto destroy"
                (1915287 'move' i[1915285] _yieldedIndex[1915283])
                {
                  {
                    val _indexOfInterest[1915292]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[1915294]:_ic_chpl_direct_counted_range_iter[1103790] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[1915296]:_ir_chpl_direct_counted_range_iter[1103796] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[1915298]:_ir_chpl_direct_counted_range_iter[1103796] "temp"
                    (1915301 call chpl_direct_counted_range_iter[457996] 0 nLen[1181879] ret_tmp[1915298])
                    (1915305 'move' call_tmp[1915296] ret_tmp[1915298])
                    (1915308 'move' _iterator[1915294](1915311 call _getIterator[1103805] call_tmp[1915296]))
                    {
                      val ret[1974416]:_ir_chpl_direct_counted_range_iter[1103796] "dead after last mention" "RVV" "temp"
                      val _indexOfInterest[1974418]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1974420]:_ic_chpl_direct_counted_range_iter_helper[1103540] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1974422]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1974424]:_ir_chpl_direct_counted_range_iter_helper[1103546] "temp"
                      const-val low[1975016]:int(64)[13] "temp"
                      (1975021 'move' low[1975016](1975018 '.v' _iterator[1915294] F0_low[2010431]))
                      const-val count[1975023]:int(64)[13] "temp"
                      (1975028 'move' count[1975023](1975025 '.v' _iterator[1915294] F1_count[2010435]))
                      (1974427 call chpl_direct_counted_range_iter_helper[1102098] low[1975016] count[1975023] ret_tmp[1974424])
                      (1974431 'move' call_tmp[1974422] ret_tmp[1974424])
                      (1974434 'move' _iterator[1974420](1974437 call _getIterator[1103555] call_tmp[1974422]))
                      {
                        val ret[1974440]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead after last mention" "RVV" "temp"
                        val call_tmp[1974442]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                        const-val tmp[1974444]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val tmp[1974446]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                        const-val call_tmp[1974448]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[1974450]:int(64)[13] "temp"
                        (1974452 'move' count[1974450](1974454 '.v' _iterator[1974420] F1_count[2014907]))
                        (1974457 'move' call_tmp[1974448](1974460 call <[948398] count[1974450]))
                        (1974462 'move' tmp[1974446] call_tmp[1974448])
                        (1974465 'move' tmp[1974444] call_tmp[1974448])
                        const-val call_tmp[1974468]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1974470 'move' call_tmp[1974468] call_tmp[1974448])
                        if call_tmp[1974448]
                        {
                          (1974476 call boundsCheckHalt[210167] "With a negative count, the range must have a last index.")
                        }
                        const-val tmp[1974479]:2*int(64)[1040056] "dead at end of block" "const" "insert auto destroy" "temp"
                        val tmp[1974481]:2*int(64)[1040056] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                        const-val tmp[1974483]:bool[10] "dead after last mention" "maybe param" "temp"
                        const-val call_tmp[1974485]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[1974487]:int(64)[13] "temp"
                        (1974489 'move' count[1974487](1974491 '.v' _iterator[1974420] F1_count[2014907]))
                        (1974494 'move' call_tmp[1974485](1974497 call ==[435628] count[1974487] 0))
                        (1974500 'move' tmp[1974483] call_tmp[1974485])
                        if call_tmp[1974485]
                        {
                          const-val tmp[1974505]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                          val call_tmp[1974507]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[1974509]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val low[1974511]:int(64)[13] "temp"
                          (1974513 'move' low[1974511](1974515 '.v' _iterator[1974420] F0_low[2014903]))
                          (1974518 'move' call_tmp[1974509](1974521 call _cast[956034] low[1974511]))
                          const-val call_tmp[1974523]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[1974525]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                          (1974527 'move' coerce_tmp[1974525](1974529 'cast' uint(64)[115] 1))
                          (1974532 'move' call_tmp[1974523](1974535 call -[962193] call_tmp[1974509]))
                          const-val call_tmp[1974537]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          (1974539 'move' call_tmp[1974537](1974542 call _cast[953543] call_tmp[1974523]))
                          const-val ret_tmp[1974544]:2*int(64)[1040056] "temp"
                          const-val low[1974546]:int(64)[13] "temp"
                          (1974548 'move' low[1974546](1974550 '.v' _iterator[1974420] F0_low[2014903]))
                          (1974554 call _build_tuple[1040014] low[1974546] call_tmp[1974537] ret_tmp[1974544])
                          (1974558 'move' tmp[1974505] ret_tmp[1974544])
                          (1974561 'move' tmp[1974481] tmp[1974505])
                        }
                        {
                          const-val tmp[1974565]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                          val call_tmp[1974567]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[1974569]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val count[1974571]:int(64)[13] "temp"
                          (1974573 'move' count[1974571](1974575 '.v' _iterator[1974420] F1_count[2014907]))
                          (1974578 'move' call_tmp[1974569] count[1974571])
                          const-val call_tmp[1974581]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val count[1974583]:int(64)[13] "temp"
                          (1974585 'move' count[1974583](1974587 '.v' _iterator[1974420] F1_count[2014907]))
                          (1974590 'move' call_tmp[1974581](1974593 call -[962226] count[1974583]))
                          const-val call_tmp[1974595]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val low[1974597]:int(64)[13] "temp"
                          (1974599 'move' low[1974597](1974601 '.v' _iterator[1974420] F0_low[2014903]))
                          (1974604 'move' call_tmp[1974595](1974607 call +[439636] low[1974597] call_tmp[1974581]))
                          const-val ret_tmp[1974610]:2*int(64)[1040056] "temp"
                          const-val low[1974612]:int(64)[13] "temp"
                          (1974614 'move' low[1974612](1974616 '.v' _iterator[1974420] F0_low[2014903]))
                          (1974620 call _build_tuple[1040014] low[1974612] call_tmp[1974595] ret_tmp[1974610])
                          (1974624 'move' tmp[1974565] ret_tmp[1974610])
                          (1974627 'move' tmp[1974481] tmp[1974565])
                        }
                        (1974631 '=' tmp[1974479] tmp[1974481])
                        (1974634 'noop')
                        1
                        ref call_tmp[1974636]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
                        (1974638 'move' call_tmp[1974636](1974640 '.' tmp[1974479] x0[1040052]))
                        const-val start[1974643]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                        const-val coerce_tmp[1974645]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                        (1974647 'move' coerce_tmp[1974645](1974649 'deref' call_tmp[1974636]))
                        (1974651 '=' start[1974643] coerce_tmp[1974645])
                        (1974654 'noop')
                        ref call_tmp[1974655]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
                        (1974657 'move' call_tmp[1974655](1974659 '.' tmp[1974479] x1[1040054]))
                        const-val end[1974662]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                        const-val coerce_tmp[1974664]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                        (1974666 'move' coerce_tmp[1974664](1974668 'deref' call_tmp[1974655]))
                        (1974670 '=' end[1974662] coerce_tmp[1974664])
                        (1974673 'noop')
                        val _indexOfInterest[1974674]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[1974676]:_ic_chpl_direct_param_stride_range_iter[1103286] "dead at end of block" "expr temp" "temp"
                        const-val call_tmp[1974678]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead at end of block" "expr temp" "maybe param" "temp"
                        const-val ret_tmp[1974680]:_ir_chpl_direct_param_stride_range_iter[1103292] "temp"
                        (1974683 call chpl_direct_param_stride_range_iter[1102524] coerce_tmp[1974645] coerce_tmp[1974664] ret_tmp[1974680])
                        (1974687 'move' call_tmp[1974678] ret_tmp[1974680])
                        (1974690 'move' _iterator[1974676](1974693 call _getIterator[1103301] call_tmp[1974678]))
                        {
                          val ret[1974696]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead after last mention" "RVV" "temp"
                          val call_tmp[1974698]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (1974701 call chpl_range_check_stride[1102844])
                          val i[1974702]:int(64)[13] "dead at end of block" "insert auto destroy"
                          val call_tmp[1974704]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (1974706 'move' i[1974702] 0)
                          val call_tmp[1974709]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val default_arg_first[1974711]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val low[1974713]:int(64)[13] "temp"
                          (1974715 'move' low[1974713](1974717 '.v' _iterator[1974676] F0_low[2016401]))
                          (1974720 'move' default_arg_first[1974711](1974723 call chpl_checkIfRangeIterWillOverflow_default_first[1103198] low[1974713]))
                          const-val default_arg_last[1974725]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val high[1974727]:int(64)[13] "temp"
                          (1974729 'move' high[1974727](1974731 '.v' _iterator[1974676] F1_high[2016405]))
                          (1974734 'move' default_arg_last[1974725](1974737 call chpl_checkIfRangeIterWillOverflow_default_last[1103226] high[1974727]))
                          const-val _return_tmp_[1974739]:bool[10] "dead after last mention" "temp"
                          const-val low[1974741]:int(64)[13] "temp"
                          (1974743 'move' low[1974741](1974745 '.v' _iterator[1974676] F0_low[2016401]))
                          const-val high[1974748]:int(64)[13] "temp"
                          (1974750 'move' high[1974748](1974752 '.v' _iterator[1974676] F1_high[2016405]))
                          (1974755 'move' _return_tmp_[1974739](1974758 call chpl_checkIfRangeIterWillOverflow[1096076] low[1974741] high[1974748] 1 default_arg_first[1974711] default_arg_last[1974725] 1))
                          CForLoop[1974765]
                          {
                            const-val yret[1974794]:int(64)[13] "dead after last mention" "YVV" "temp"
                            (1974796 'move' yret[1974794] i[1974702])
                            const-val _yieldedIndex[1974799]:int(64)[13] "temp"
                            (1974801 'move' _yieldedIndex[1974799] i[1974702])
                            {
                              const-val i[1974805]:int(64)[13] "const" "index var" "insert auto destroy"
                              (1974807 'move' i[1974805] _yieldedIndex[1974799])
                              const-val yret[1974810]:int(64)[13] "dead after last mention" "YVV" "temp"
                              (1974812 'move' yret[1974810] _yieldedIndex[1974799])
                              const-val _yieldedIndex[1974815]:int(64)[13] "temp"
                              (1974817 'move' _yieldedIndex[1974815] _yieldedIndex[1974799])
                              {
                                const-val i[1974821]:int(64)[13] "const" "index var" "insert auto destroy"
                                (1974823 'move' i[1974821] _yieldedIndex[1974815])
                                const-val yret[1974826]:int(64)[13] "dead after last mention" "YVV" "temp"
                                (1974828 'move' yret[1974826] _yieldedIndex[1974815])
                                const-val _yieldedIndex[1974864]:int(64)[13] "temp"
                                (1975014 'move' _yieldedIndex[1974864] _yieldedIndex[1974815])
                                {
                                  const-val j[1974866]:int(64)[13] "const" "index var" "insert auto destroy"
                                  (1974868 'move' j[1974866] _yieldedIndex[1974864])
                                  {
                                    const-val call_tmp[1974872]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                    (1974874 'move' call_tmp[1974872](1974877 call +[439636] i[1915285] j[1974866]))
                                    const-val call_tmp[1974880]:int(64)[13] "dead at end of block" "maybe param" "temp"
                                    (1974882 'move' call_tmp[1974880](1974885 call orderToIndex[1104040] view[1181910] call_tmp[1974872]))
                                    const-val idx[1974888]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                    (1974890 'move' idx[1974888] call_tmp[1974880])
                                    ref call_tmp[1974893]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
                                    ref _this_tmp_[1974895]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "reference to a const" "temp"
                                    (1974897 'move' _this_tmp_[1974895](1974900 call buff[757964] x[1807156]))
                                    val coerce_tmp[1974902]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1974904 'move' coerce_tmp[1974902](1974906 'deref' _this_tmp_[1974895]))
                                    (1974908 'move' call_tmp[1974893](1974911 call this[954091] coerce_tmp[1974902] idx[1974888]))
                                    ref call_tmp[1974914]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
                                    ref _this_tmp_[1974916]:_ref(c_ptr(uint(8)))[937432] "dead after last mention" "reference to a const" "temp"
                                    (1974918 'move' _this_tmp_[1974916](1974921 call buff[757964] localNeedle[1182140]))
                                    val coerce_tmp[1974923]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1974925 'move' coerce_tmp[1974923](1974927 'deref' _this_tmp_[1974916]))
                                    (1974929 'move' call_tmp[1974914](1974932 call this[954091] coerce_tmp[1974923] j[1974866]))
                                    const-val call_tmp[1974935]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    const-val coerce_tmp[1974937]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1974939 'move' coerce_tmp[1974937](1974941 'deref' call_tmp[1974893]))
                                    const-val coerce_tmp[1974943]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1974945 'move' coerce_tmp[1974943](1974947 'deref' call_tmp[1974914]))
                                    (1974949 'move' call_tmp[1974935](1974952 call !=[436034] coerce_tmp[1974937] coerce_tmp[1974943]))
                                    const-val call_tmp[1974955]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1974957 'move' call_tmp[1974955] call_tmp[1974935])
                                    if call_tmp[1974955]
                                    {
                                      (1975005 call _freeIterator[1103474] _iterator[1974676])
                                      (1975008 call chpl__autoDestroy[1534672] tmp[1974479])
                                      (1975011 call _freeIterator[1103724] _iterator[1974420])
                                      break _breakLabel[1915453] _breakLabel[1915453]
                                    }
                                    const-val call_tmp[1974965]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1974967 'move' call_tmp[1974965](1974970 call -[962226] nLen[1181879]))
                                    const-val call_tmp[1974972]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1974974 'move' call_tmp[1974972](1974977 call ==[435628] j[1974866] call_tmp[1974965]))
                                    const-val call_tmp[1974980]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1974982 'move' call_tmp[1974980] call_tmp[1974972])
                                    if call_tmp[1974980]
                                    {
                                      {
                                        const-val call_tmp[1974988]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                        (1974990 'move' call_tmp[1974988](1974993 call orderToIndex[1104040] view[1181910] i[1915285]))
                                        (1974997 call =[435327] localRet[1181864] call_tmp[1974988])
                                      }
                                    }
                                  }
                                  label _continueLabel[1975001]
                                }
                              }
                            }
                            {
                              const-val low[1974767]:int(64)[13] "temp"
                              (1974769 'move' low[1974767](1974771 '.v' _iterator[1974676] F0_low[2016401]))
                              (1974774 '=' i[1974702] low[1974767])
                            }
                            {
                              const-val high[1974778]:int(64)[13] "temp"
                              (1974780 'move' high[1974778](1974782 '.v' _iterator[1974676] F1_high[2016405]))
                              (1974785 '<=' i[1974702] high[1974778])
                            }
                            {
                              val call_tmp[1974789]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              (1974791 '+=' i[1974702] 1)
                            }
                          }
                          label _endchpl_direct_param_stride_range_iter[1974847]
                        }
                        (1974850 call _freeIterator[1103474] _iterator[1974676])
                        (1974853 call chpl__autoDestroy[1534672] tmp[1974479])
                        label _endchpl_direct_counted_range_iter_helper[1974855]
                      }
                      (1974858 call _freeIterator[1103724] _iterator[1974420])
                      label _endchpl_direct_counted_range_iter[1974860]
                    }
                    label _breakLabel[1915453]
                    (1915456 call _freeIterator[1103974] _iterator[1915294])
                  }
                  const-val tmp[1915458]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  const-val tmp[1915460]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  const-val call_tmp[1915462]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1915464 'move' call_tmp[1915462](1915467 call !=[436012] localRet[1181864] -1))
                  (1915470 'move' tmp[1915460] call_tmp[1915462])
                  (1915473 'move' tmp[1915458] tmp[1915460])
                  const-val call_tmp[1915476]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1915478 'move' call_tmp[1915476] tmp[1915458])
                  if call_tmp[1915476]
                  {
                    break _breakLabel[1182553] _breakLabel[1182553]
                  }
                }
                label _continueLabel[1915486]
              }
              {
                (1915246 '=' i[1915199] coerce_tmp[1915215])
              }
              {
                (1915250 '<=' i[1915199] end[1915232])
              }
              {
                val call_tmp[1915254]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1915256 '+=' i[1915199] 1)
              }
            }
            label _endthese[1915279]
          }
          label _breakLabel[1182553]
          (1846985 call _freeIterator[1102006] _iterator[1182264])
        }
        (1846988 call chpl__autoDestroy[1534375] searchSpace[1182182])
        (1846991 call chpl__autoDestroy[1540744] call_tmp[1182197])
        (1846994 call chpl__autoDestroy[1461530] localNeedle[1182140])
      }
      (1182573 call =[435327] ret[1807160] localRet[1181864])
      (1846998 call chpl__autoDestroy[1534375] view[1181910])
      (1847001 call chpl__autoDestroy[1540699] tmp[1181893])
    }
    (2084194 call chpl__autoDestroy[1461717] needle[1807154])
    (2084197 call chpl__autoDestroy[1461530] needle[2084176])
    (1182579 return _void[55])
  }
  function simpleCaseHelper[1186077](const in arg r[1807170]:range(byteIndex,boundedHigh,false)[1184919], const  ref arg x[1807172]:_ref(string)[937939], ref arg _retArg[1834792]:_ref((range(int(64),bounded,false),int(64)))[1086486]) : void[4] "fn returns via _retArg" "resolved" "fn synchronization free"
  {
    const-val ret[1186080]:(range(int(64),bounded,false),int(64))[1084924] "dead after last mention" "RVV" "temp"
    val call_tmp[1186098]:range(int(64),boundedHigh,false)[1187429] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1186107]:range(int(64),boundedHigh,false)[1187429] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1834798]:range(int(64),boundedHigh,false)[1187429] "temp"
    (1186112 call _cast[1187631] r[1807170] ret_tmp[1834798])
    (1834801 'move' call_tmp[1186107] ret_tmp[1834798])
    const-val intR[1186115]:range(int(64),boundedHigh,false)[1187429] "dead at end of block" "const" "insert auto destroy"
    (1186117 'move' intR[1186115] call_tmp[1186107])
    {
      const-val call_tmp[1186130]:range(int(64),bounded,false)[1026814] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1829327]:range(int(64),bounded,false)[1026814] "temp"
      (1186135 call byteIndices[31065] x[1807172] ret_tmp[1829327])
      (1829330 'move' call_tmp[1186130] ret_tmp[1829327])
      const-val call_tmp[1186138]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1186140 'move' call_tmp[1186138](1186146 call boundsCheck[1189538] call_tmp[1186130] intR[1186115]))
      const-val call_tmp[1186148]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1186150 'move' call_tmp[1186148](1186153 call ![7494] call_tmp[1186138]))
      const-val call_tmp[1186155]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1186157 'move' call_tmp[1186155] call_tmp[1186148])
      if call_tmp[1186155]
      {
        val call_tmp[1186164]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1186194]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1186196 'move' call_tmp[1186194](1186199 call numBytes[32807] x[1807172]))
        (1186203 call halt[1190660] "range " r[1807170] " out of bounds for string with length " call_tmp[1186194])
      }
      (1847074 call chpl__autoDestroy[1534375] call_tmp[1186130])
    }
    val call_tmp[1186210]:byteIndex[28170] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      const-val call_tmp[1186235]:range(int(64),bounded,false)[1026814] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1829333]:range(int(64),bounded,false)[1026814] "temp"
      (1186240 call byteIndices[31065] x[1807172] ret_tmp[1829333])
      (1829336 'move' call_tmp[1186235] ret_tmp[1829333])
      const-val call_tmp[1186243]:range(int(64),bounded,false)[1026814] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1834922]:range(int(64),bounded,false)[1026814] "temp"
      (1186248 call this[1200349] intR[1186115] call_tmp[1186235] ret_tmp[1834922])
      (1834925 'move' call_tmp[1186243] ret_tmp[1834922])
      const-val call_tmp[1186257]:(range(int(64),bounded,false),int(64))[1084924] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1833491]:(range(int(64),bounded,false),int(64))[1084924] "temp"
      (1186262 call _build_tuple[1084882] call_tmp[1186243] -1 ret_tmp[1833491])
      (1833494 'move' call_tmp[1186257] ret_tmp[1833491])
      (1186265 'move' ret[1186080] call_tmp[1186257])
      (1847077 call chpl__autoDestroy[1534375] call_tmp[1186243])
      (1847080 call chpl__autoDestroy[1534375] call_tmp[1186235])
      (1847083 call chpl__autoDestroy[1545400] intR[1186115])
      gotoReturn _end_simpleCaseHelper[1186322] _end_simpleCaseHelper[1186322]
    }
    (1847086 call chpl__autoDestroy[1545400] intR[1186115])
    label _end_simpleCaseHelper[1186322]
    (1834794 '=' _retArg[1834792] ret[1186080])
    (1834796 return _void[55])
  }
  function wrapon_fn[2086561](const in arg dummy_locale_arg[2086563]:chpl_localeID_t[209294], in arg buf[2086565]:c_void_ptr[149], in arg buf_size[2086567]:int(64)[13], in arg c[2086569]:_class_localson_fn[2086509]) : void[4] "on block"
  {
    val _0_tmp[2086574]:chpl_localeID_t[209294] "temp"
    (2086579 'move' _0_tmp[2086574](2086576 '.v' c[2086569] _0_tmp[2086512]))
    ref _1_x[2086581]:string[26] "temp"
    (2086586 'move' _1_x[2086581](2086583 '.v' c[2086569] _1_x[2086514]))
    ref _2_ret[2086589]:int(64)[13] "temp"
    (2086594 'move' _2_ret[2086589](2086591 '.v' c[2086569] _2_ret[2086516]))
    (2086572 call on_fn[935464] _1_x[2086581] _2_ret[2086589])
    (2086597 return _void[55])
  }
  function wrapon_fn[2087412](const in arg dummy_locale_arg[2087414]:chpl_localeID_t[209294], in arg buf[2087416]:c_void_ptr[149], in arg buf_size[2087418]:int(64)[13], in arg c[2087420]:_class_localson_fn[2087360]) : void[4] "on block"
  {
    val _0_tmp[2087425]:chpl_localeID_t[209294] "temp"
    (2087430 'move' _0_tmp[2087425](2087427 '.v' c[2087420] _0_tmp[2087363]))
    ref _1_lhs[2087432]:string[26] "temp"
    (2087437 'move' _1_lhs[2087432](2087434 '.v' c[2087420] _1_lhs[2087365]))
    ref _2_rhs[2087440]:string[26] "temp"
    (2087445 'move' _2_rhs[2087440](2087442 '.v' c[2087420] _2_rhs[2087367]))
    (2087423 call on_fn[979153] _1_lhs[2087432] _2_rhs[2087440])
    (2087448 return _void[55])
  }
  function wrapon_fn[2088180](const in arg dummy_locale_arg[2088182]:chpl_localeID_t[209294], in arg buf[2088184]:c_void_ptr[149], in arg buf_size[2088186]:int(64)[13], in arg c[2088188]:_class_localson_fn[2088128]) : void[4] "on block"
  {
    val _0_tmp[2088193]:chpl_localeID_t[209294] "temp"
    (2088198 'move' _0_tmp[2088193](2088195 '.v' c[2088188] _0_tmp[2088131]))
    ref _1_lhs[2088200]:string[26] "temp"
    (2088205 'move' _1_lhs[2088200](2088202 '.v' c[2088188] _1_lhs[2088133]))
    ref _2_rhs[2088208]:string[26] "temp"
    (2088213 'move' _2_rhs[2088208](2088210 '.v' c[2088188] _2_rhs[2088135]))
    (2088191 call on_fn[1019641] _1_lhs[2088200] _2_rhs[2088208])
    (2088216 return _void[55])
  }
  function wrapon_fn[2088877](const in arg dummy_locale_arg[2088879]:chpl_localeID_t[209294], in arg buf[2088881]:c_void_ptr[149], in arg buf_size[2088883]:int(64)[13], in arg c[2088885]:_class_localson_fn[2088813]) : void[4] "on block"
  {
    val _0_tmp[2088890]:chpl_localeID_t[209294] "temp"
    (2088895 'move' _0_tmp[2088890](2088892 '.v' c[2088885] _0_tmp[2088816]))
    val _1_needle_data[2088897]:__serializeHelper[28086] "temp"
    (2088902 'move' _1_needle_data[2088897](2088899 '.v' c[2088885] _1_needle_data[2088818]))
    ref _2_x[2088905]:string[26] "temp"
    (2088910 'move' _2_x[2088905](2088907 '.v' c[2088885] _2_x[2088820]))
    val _3_region[2088913]:range(byteIndex,bounded,false)[1025792] "temp"
    (2088918 'move' _3_region[2088913](2088915 '.v' c[2088885] _3_region[2088822]))
    ref _4_ret[2088921]:int(64)[13] "temp"
    (2088926 'move' _4_ret[2088921](2088923 '.v' c[2088885] _4_ret[2088824]))
    (2088888 call on_fn[1030138] _1_needle_data[2088897] _2_x[2088905] _3_region[2088913] _4_ret[2088921])
    (2088929 return _void[55])
  }
  function wrapon_fn[2091491](const in arg dummy_locale_arg[2091493]:chpl_localeID_t[209294], in arg buf[2091495]:c_void_ptr[149], in arg buf_size[2091497]:int(64)[13], in arg c[2091499]:_class_localson_fn[2091427]) : void[4] "on block"
  {
    val _0_tmp[2091504]:chpl_localeID_t[209294] "temp"
    (2091509 'move' _0_tmp[2091504](2091506 '.v' c[2091499] _0_tmp[2091430]))
    val _1_needle_data[2091511]:__serializeHelper[28086] "temp"
    (2091516 'move' _1_needle_data[2091511](2091513 '.v' c[2091499] _1_needle_data[2091432]))
    ref _2_x[2091519]:string[26] "temp"
    (2091524 'move' _2_x[2091519](2091521 '.v' c[2091499] _2_x[2091434]))
    val _3_region[2091527]:range(byteIndex,boundedLow,false)[1143403] "temp"
    (2091532 'move' _3_region[2091527](2091529 '.v' c[2091499] _3_region[2091436]))
    ref _4_ret[2091535]:int(64)[13] "temp"
    (2091540 'move' _4_ret[2091535](2091537 '.v' c[2091499] _4_ret[2091438]))
    (2091502 call on_fn[1181851] _1_needle_data[2091511] _2_x[2091519] _3_region[2091527] _4_ret[2091535])
    (2091543 return _void[55])
  }
}