AST dump for BytesStringCommon after pass removeUnnecessaryAutoCopyCalls.
Module use list: ChapelStandard SysCTypes ByteBufferHelpers NVStringFactory SysBasic Bytes String 

{
  type _class_localson_fn[2039929] val _runtime_hdr[2039930]:chpl_comm_on_bundle_t[209301] val _0_tmp[2039932]:chpl_localeID_t[209294] val _1_needle_data[2039934]:__serializeHelper[28086] ref _2_x[2039936]:string[26] val _3_region[2039938]:range(byteIndex,boundedLow,false)[1143314] ref _4_ret[2039940]:int(64)[13]
  type _class_localson_fn[2037315] val _runtime_hdr[2037316]:chpl_comm_on_bundle_t[209301] val _0_tmp[2037318]:chpl_localeID_t[209294] val _1_needle_data[2037320]:__serializeHelper[28086] ref _2_x[2037322]:string[26] val _3_region[2037324]:range(byteIndex,bounded,false)[1025703] ref _4_ret[2037326]:int(64)[13]
  type _class_localson_fn[2036630] val _runtime_hdr[2036631]:chpl_comm_on_bundle_t[209301] val _0_tmp[2036633]:chpl_localeID_t[209294] ref _1_lhs[2036635]:string[26] ref _2_rhs[2036637]:string[26]
  type _class_localson_fn[2035862] val _runtime_hdr[2035863]:chpl_comm_on_bundle_t[209301] val _0_tmp[2035865]:chpl_localeID_t[209294] ref _1_lhs[2035867]:string[26] ref _2_rhs[2035869]:string[26]
  type _class_localson_fn[2035026] val _runtime_hdr[2035027]:chpl_comm_on_bundle_t[209301] val _0_tmp[2035029]:chpl_localeID_t[209294] ref _1_x[2035031]:string[26] ref _2_ret[2035033]:int(64)[13]
  function chpl__init_BytesStringCommon[415946]() : void[4] "insert line file info" "module init" "resolved"
  {
    {
    }
    (523311 return _void[55])
  }
  type decodePolicy[173656] def strict[173646]:decodePolicy[173656] def replace[173648]:decodePolicy[173656] def drop[173650]:decodePolicy[173656] def escape[173652]:decodePolicy[173656] def ignore[173654]:decodePolicy[173656]
  type encodePolicy[173664] def unescape[173660]:encodePolicy[173664] def pass[173662]:encodePolicy[173664]
  function getCStr[957195](const  ref arg x[957197]:_ref(string)[937850]) : c_string[19] "inline" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[957201]:c_string[19] "dead after last mention" "RVV" "temp"
    val call_tmp[957209]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val tmp[957266]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[957284]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    ref call_tmp[957286]:_ref(int(32))[936537] "dead after last mention" "maybe param" "reference to a const" "temp"
    (957288 'move' call_tmp[957286](957291 call locale_id[757953] x[957197]))
    const-val call_tmp[957294]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[957642]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (957646 'move' coerce_tmp[957642](957644 'deref' call_tmp[957286]))
    (957296 'move' call_tmp[957294](957299 call !=[435901] coerce_tmp[957642] chpl_nodeID[208152]))
    (957302 'move' tmp[957284] call_tmp[957294])
    (957307 'move' tmp[957266] tmp[957284])
    const-val call_tmp[957319]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (957321 'move' call_tmp[957319] tmp[957266])
    if call_tmp[957319]
    {
      val call_tmp[957328]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (957351 call halt[154067] "Cannot call .c_str() on a remote string")
    }
    ref call_tmp[957354]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "reference to a const" "temp"
    (957356 'move' call_tmp[957354](957359 call buff[757875] x[957197]))
    const-val call_tmp[957362]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[957968]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (957972 'move' coerce_tmp[957968](957970 'deref' call_tmp[957354]))
    (957364 'move' call_tmp[957362](957367 call _cast[957220] coerce_tmp[957968]))
    (957977 'move' ret[957201] call_tmp[957362])
    (957375 return ret[957201])
  }
  function decodeByteBuffer[173892](const in arg buff[173889]:c_ptr(uint(8))[937334], const in arg length[173895]:int(64)[13], const in arg policy[173899]:decodePolicy[173656], ref arg error_out[1766682]:Error[167938], ref arg _retArg[1788157]:_ref(string)[937850]) : void[4] throws "fn returns via _retArg" "resolved"
  {
    val ret[522672]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[682146]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (682149 'move' call_tmp[682146](173942 call ==[435539] length[173895] 0))
    const-val call_tmp[682151]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (682154 'move' call_tmp[682151] call_tmp[682146])
    if call_tmp[682151]
    {
      (522677 'move' ret[522672](1788161 call chpl__initCopy[981259] ""))
      gotoReturn _end_decodeByteBuffer[522670] _end_decodeByteBuffer[522670]
    }
    const-val call_tmp[682156]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (682159 'move' call_tmp[682156](173976 call +[949577] length[173895]))
    const-val call_tmp[682161]:(c_ptr(uint(8)),int(64))[955119] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1788807]:(c_ptr(uint(8)),int(64))[955119] "temp"
    (173979 call bufferAlloc[954929] call_tmp[682156] ret_tmp[1788807])
    (1788810 'move' call_tmp[682161] ret_tmp[1788807])
    const-val tmp[173980]:(c_ptr(uint(8)),int(64))[955119] "dead at end of block" "insert auto destroy" "temp"
    (544785 'move' tmp[173980] call_tmp[682161])
    1
    ref call_tmp[682166]:_ref(c_ptr(uint(8)))[937343] "dead at end of block" "maybe param" "temp"
    (682169 'move' call_tmp[682166](964256 '.' tmp[173980] x0[955115]))
    val newBuff[173968]:c_ptr(uint(8))[937334] "dead at end of block" "insert auto destroy"
    val coerce_tmp[964261]:c_ptr(uint(8))[937334] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (964265 'move' coerce_tmp[964261](964263 'deref' call_tmp[682166]))
    (1798886 '=' newBuff[173968] coerce_tmp[964261])
    (544787 'noop')
    ref call_tmp[682171]:_ref(int(64))[936483] "dead at end of block" "maybe param" "temp"
    (682174 'move' call_tmp[682171](964270 '.' tmp[173980] x1[955117]))
    val allocSize[173970]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[964275]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (964279 'move' coerce_tmp[964275](964277 'deref' call_tmp[682171]))
    (1798889 '=' allocSize[173970] coerce_tmp[964275])
    (544789 'noop')
    val hasEscapes[173994]:bool[10] "dead at end of block" "insert auto destroy"
    (544791 'move' hasEscapes[173994] 0)
    val numCodepoints[173999]:int(64)[13] "dead at end of block" "insert auto destroy"
    (544793 'move' numCodepoints[173999] 0)
    val expectedSize[174004]:int(64)[13] "dead at end of block" "insert auto destroy"
    (544795 'move' expectedSize[174004] allocSize[173970])
    val thisIdx[174009]:int(64)[13] "dead at end of block" "insert auto destroy"
    (544797 'move' thisIdx[174009] 0)
    val decodedIdx[174014]:int(64)[13] "dead at end of block" "insert auto destroy"
    (544799 'move' decodedIdx[174014] 0)
    {
      val tmp[174329]:bool[10] "dead after last mention" "temp"
      const-val call_tmp[682176]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (682179 'move' call_tmp[682176](174350 call <[437363] thisIdx[174009] length[173895]))
      (174353 'move' tmp[174329] call_tmp[682176])
      WhileDo[174334] hazard
      {
        {
          const-val call_tmp[682181]:(syserr,int(32),int(32))[964531] "dead at end of block" "maybe param" "temp"
          const-val ret_tmp[1788177]:(syserr,int(32),int(32))[964531] "temp"
          (174036 call decodeHelp[174406] buff[173889] length[173895] thisIdx[174009] 0 ret_tmp[1788177])
          (1788180 'move' call_tmp[682181] ret_tmp[1788177])
          const-val tmp[174037]:(syserr,int(32),int(32))[964531] "dead at end of block" "const" "insert auto destroy" "temp"
          (544801 'move' tmp[174037] call_tmp[682181])
          1
          ref call_tmp[682186]:_ref(syserr)[948743] "dead at end of block" "maybe param" "reference to a const" "temp"
          (682189 'move' call_tmp[682186](965293 '.' tmp[174037] x0[964525]))
          const-val decodeRet[174022]:syserr[223496] "dead at end of block" "const" "insert auto destroy"
          const-val coerce_tmp[965298]:syserr[223496] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
          (965302 'move' coerce_tmp[965298](965300 'deref' call_tmp[682186]))
          (1798892 '=' decodeRet[174022] coerce_tmp[965298])
          (544803 'noop')
          ref call_tmp[682191]:_ref(int(32))[936537] "dead at end of block" "maybe param" "reference to a const" "temp"
          (682194 'move' call_tmp[682191](965307 '.' tmp[174037] x1[964527]))
          const-val cp[174024]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
          const-val coerce_tmp[965312]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
          (965316 'move' coerce_tmp[965312](965314 'deref' call_tmp[682191]))
          (1798895 '=' cp[174024] coerce_tmp[965312])
          (544805 'noop')
          ref call_tmp[682196]:_ref(int(32))[936537] "dead at end of block" "maybe param" "reference to a const" "temp"
          (682199 'move' call_tmp[682196](965321 '.' tmp[174037] x2[964529]))
          const-val nBytes[174026]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
          const-val coerce_tmp[965326]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
          (965330 'move' coerce_tmp[965326](965328 'deref' call_tmp[682196]))
          (1798898 '=' nBytes[174026] coerce_tmp[965326])
          (544807 'noop')
          val call_tmp[682201]:c_ptr(uint(8))[937334] "dead at end of block" "maybe param" "temp"
          (682204 'move' call_tmp[682201](174056 call +[955912] buff[173889] thisIdx[174009]))
          val buffToDecode[174058]:c_ptr(uint(8))[937334] "dead at end of block" "insert auto destroy"
          (544809 'move' buffToDecode[174058] call_tmp[682201])
          (174064 call +=[451226] numCodepoints[173999] 1)
          const-val call_tmp[682206]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (682209 'move' call_tmp[682206](174069 call !=[223792] decodeRet[174022] 0))
          const-val call_tmp[682211]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (682214 'move' call_tmp[682211] call_tmp[682206])
          if call_tmp[682211]
          {
            const-val call_tmp[682216]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (682219 'move' call_tmp[682216](174076 call ==[965381] policy[173899] strict[173646]))
            const-val call_tmp[682221]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (682224 'move' call_tmp[682221] call_tmp[682216])
            if call_tmp[682221]
            {
              (174081 call bufferFree[172912] newBuff[173968])
              const-val call_tmp[682226]:owned DecodeError[966192] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
              val new_temp[965602]:DecodeError[168094] "dead after last mention" "temp"
              (965604 'move' new_temp[965602](965478 call _new[965553]))
              const-val initTemp[965633]:owned DecodeError[966192] "dead after last mention" "delay instantiation" "temp"
              (965636 call init[965652] initTemp[965633] new_temp[965602])
              (682229 'move' call_tmp[682226] initTemp[965633])
              val call_tmp[682231]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[966396]:owned Error[966369] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
              const-val ret_tmp[1788935]:owned Error[966369] "temp"
              (966398 call _cast[966454] call_tmp[682226] ret_tmp[1788935])
              (1788938 'move' coerce_tmp[966396] ret_tmp[1788935])
              const-val _formal_tmp_in_err[968417]:owned Error[966369] "dead after last mention" "expr temp" "no auto destroy" "temp"
              (968421 'move' _formal_tmp_in_err[968417] coerce_tmp[966396])
              (682234 'move' call_tmp[682231](467978 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[968417]))
              {
                val castedError[1766685]:Error[167938] "temp"
                (1766691 'move' castedError[1766685] call_tmp[682231])
                (1766693 '=' error_out[1766682] castedError[1766685])
                (1798901 call chpl__autoDestroy[1498323] tmp[174037])
                (1798904 call chpl__autoDestroy[1498061] tmp[173980])
                gotoErrorHandlingReturn _end_decodeByteBuffer[522670] _end_decodeByteBuffer[522670]
              }
            }
            {
              const-val nInvalidBytes[174104]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
              val tmp[570838]:int(32)[95] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
              const-val tmp[570839]:bool[10] "dead after last mention" "maybe param" "temp"
              const-val call_tmp[682236]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[969688]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (969694 'move' coerce_tmp[969688](969690 'cast' int(32)[95] 1))
              (682239 'move' call_tmp[682236](174094 call ==[435517] nBytes[174026] coerce_tmp[969688]))
              (570844 'move' tmp[570839] call_tmp[682236])
              if tmp[570839]
              {
                (570849 'move' tmp[570838] nBytes[174026])
              }
              {
                const-val tmp[570851]:int(32)[95] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
                const-val coerce_tmp[969697]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (969703 'move' coerce_tmp[969697](969699 'cast' int(32)[95] 1))
                (570853 'move' tmp[570851](174099 call -[440305] nBytes[174026] coerce_tmp[969697]))
                (570858 'move' tmp[570838] tmp[570851])
              }
              (544811 'move' nInvalidBytes[174104] tmp[570838])
              const-val coerce_tmp[969717]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (969723 'move' coerce_tmp[969717](969719 'cast' int(64)[13] nInvalidBytes[174104]))
              (174111 call +=[451226] thisIdx[174009] coerce_tmp[969717])
              const-val call_tmp[682241]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (682244 'move' call_tmp[682241](174119 call ==[965381] policy[173899] replace[173648]))
              const-val call_tmp[682246]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (682249 'move' call_tmp[682246] call_tmp[682241])
              if call_tmp[682246]
              {
                val call_tmp[682251]:int(32)[95] "dead after last mention" "maybe param" "temp" "type variable"
                const-val call_tmp[682256]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[969988]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (969994 'move' coerce_tmp[969988](969990 'cast' int(32)[95] 3))
                (682259 'move' call_tmp[682256](174136 call -[440305] coerce_tmp[969988] nInvalidBytes[174104]))
                const-val coerce_tmp[969997]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (970003 'move' coerce_tmp[969997](969999 'cast' int(64)[13] call_tmp[682256]))
                (174138 call +=[451226] expectedSize[174004] coerce_tmp[969997])
                const-val tmp[492426]:(c_ptr(uint(8)),int(64))[955119] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                ref tmp[492451]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "temp"
                (492454 'move' tmp[492451](492452 'addr of' newBuff[173968]))
                ref tmp[492462]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
                (492465 'move' tmp[492462](492463 'addr of' allocSize[173970]))
                const-val ret_tmp[1788055]:(c_ptr(uint(8)),int(64))[955119] "temp"
                (174151 call bufferEnsureSize[172738] newBuff[173968] allocSize[173970] expectedSize[174004] ret_tmp[1788055])
                (1788058 'move' tmp[492426] ret_tmp[1788055])
                { scopeless
                }
                ref call_tmp[682278]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "temp"
                (682281 'move' call_tmp[682278](970380 '.' tmp[492426] x0[955115]))
                val coerce_tmp[970383]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (970387 'move' coerce_tmp[970383](970385 'deref' call_tmp[682278]))
                (492456 call =[954124] tmp[492451] coerce_tmp[970383])
                ref call_tmp[682283]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
                (682286 'move' call_tmp[682283](970392 '.' tmp[492426] x1[955117]))
                const-val coerce_tmp[970395]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (970399 'move' coerce_tmp[970395](970397 'deref' call_tmp[682283]))
                (492467 call =[435238] tmp[492462] coerce_tmp[970395])
                (1798907 call chpl__autoDestroy[1498061] tmp[492426])
                val call_tmp[682288]:c_ptr(uint(8))[937334] "dead after last mention" "expr temp" "maybe param" "temp"
                (682291 'move' call_tmp[682288](174158 call +[955912] newBuff[173968] decodedIdx[174014]))
                const-val coerce_tmp[970411]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (970417 'move' coerce_tmp[970411](970413 'cast' c_void_ptr[149] call_tmp[682288]))
                const-val _return_tmp_[1759213]:syserr[223496] "dead after last mention" "temp"
                (1759215 'move' _return_tmp_[1759213](174162 call qio_encode_char_buf[173912] coerce_tmp[970411] 65533))
                (174166 call +=[451226] decodedIdx[174014] 3)
              }
              {
                const-val call_tmp[682293]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (682296 'move' call_tmp[682293](174176 call ==[965381] policy[173899] escape[173652]))
                const-val call_tmp[682298]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (682301 'move' call_tmp[682298] call_tmp[682293])
                if call_tmp[682298]
                {
                  (174180 call =[435085] hasEscapes[173994] 1)
                  const-val call_tmp[682303]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[970675]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (970681 'move' coerce_tmp[970675](970677 'cast' int(32)[95] 2))
                  (682306 'move' call_tmp[682303](174187 call *[441717] coerce_tmp[970675] nInvalidBytes[174104]))
                  const-val coerce_tmp[970684]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (970690 'move' coerce_tmp[970684](970686 'cast' int(64)[13] call_tmp[682303]))
                  (174189 call +=[451226] expectedSize[174004] coerce_tmp[970684])
                  const-val tmp[492470]:(c_ptr(uint(8)),int(64))[955119] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  ref tmp[492495]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "temp"
                  (492498 'move' tmp[492495](492496 'addr of' newBuff[173968]))
                  ref tmp[492506]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
                  (492509 'move' tmp[492506](492507 'addr of' allocSize[173970]))
                  const-val ret_tmp[1788061]:(c_ptr(uint(8)),int(64))[955119] "temp"
                  (174202 call bufferEnsureSize[172738] newBuff[173968] allocSize[173970] expectedSize[174004] ret_tmp[1788061])
                  (1788064 'move' tmp[492470] ret_tmp[1788061])
                  { scopeless
                  }
                  ref call_tmp[682325]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "temp"
                  (682328 'move' call_tmp[682325](970702 '.' tmp[492470] x0[955115]))
                  val coerce_tmp[970705]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (970709 'move' coerce_tmp[970705](970707 'deref' call_tmp[682325]))
                  (492500 call =[954124] tmp[492495] coerce_tmp[970705])
                  ref call_tmp[682330]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
                  (682333 'move' call_tmp[682330](970714 '.' tmp[492470] x1[955117]))
                  const-val coerce_tmp[970717]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (970721 'move' coerce_tmp[970717](970719 'deref' call_tmp[682330]))
                  (492511 call =[435238] tmp[492506] coerce_tmp[970717])
                  (1798911 call chpl__autoDestroy[1498061] tmp[492470])
                  {
                    val _indexOfInterest[174240]:int(32)[95] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[174241]:_ic_chpl_direct_counted_range_iter[978222] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[682335]:_ir_chpl_direct_counted_range_iter[978228] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[970790]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (970796 'move' coerce_tmp[970790](970792 'cast' int(32)[95] 0))
                    const-val ret_tmp[1788673]:_ir_chpl_direct_counted_range_iter[978228] "temp"
                    (174257 call chpl_direct_counted_range_iter[457851] coerce_tmp[970790] nInvalidBytes[174104] ret_tmp[1788673])
                    (1788676 'move' call_tmp[682335] ret_tmp[1788673])
                    (174250 'move' _iterator[174241](174248 call _getIterator[978237] call_tmp[682335]))
                    {
                      val ret[1859592]:_ir_chpl_direct_counted_range_iter[978228] "dead after last mention" "RVV" "temp"
                      val _indexOfInterest[1859594]:int(32)[95] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1859596]:_ic_chpl_direct_counted_range_iter_helper[977972] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1859598]:_ir_chpl_direct_counted_range_iter_helper[977978] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1859600]:_ir_chpl_direct_counted_range_iter_helper[977978] "temp"
                      const-val low[1859758]:int(32)[95] "temp"
                      (1859763 'move' low[1859758](1859760 '.v' _iterator[174241] F0_low[1958316]))
                      const-val count[1859765]:int(32)[95] "temp"
                      (1859770 'move' count[1859765](1859767 '.v' _iterator[174241] F1_count[1958320]))
                      (1859603 call chpl_direct_counted_range_iter_helper[970799] low[1859758] count[1859765] ret_tmp[1859600])
                      (1859607 'move' call_tmp[1859598] ret_tmp[1859600])
                      (1859610 'move' _iterator[1859596](1859613 call _getIterator[977987] call_tmp[1859598]))
                      {
                        val ret[1919446]:_ir_chpl_direct_counted_range_iter_helper[977978] "dead after last mention" "RVV" "temp"
                        val call_tmp[1919448]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                        const-val tmp[1919450]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val tmp[1919452]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                        const-val call_tmp[1919454]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val coerce_tmp[1919456]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (1919458 'move' coerce_tmp[1919456](1919460 'cast' int(32)[95] 0))
                        const-val count[1919942]:int(32)[95] "temp"
                        (1919947 'move' count[1919942](1919944 '.v' _iterator[1859596] F1_count[1961975]))
                        (1919463 'move' call_tmp[1919454](1919466 call <[437341] count[1919942] coerce_tmp[1919456]))
                        (1919469 'move' tmp[1919452] call_tmp[1919454])
                        (1919472 'move' tmp[1919450] call_tmp[1919454])
                        const-val call_tmp[1919475]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1919477 'move' call_tmp[1919475] call_tmp[1919454])
                        if call_tmp[1919454]
                        {
                          (1919483 call boundsCheckHalt[210079] "With a negative count, the range must have a last index.")
                        }
                        const-val tmp[1919486]:2*int(32)[971589] "dead at end of block" "const" "insert auto destroy" "temp"
                        val tmp[1919488]:2*int(32)[971589] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                        const-val tmp[1919490]:bool[10] "dead after last mention" "maybe param" "temp"
                        const-val call_tmp[1919492]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val coerce_tmp[1919494]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (1919496 'move' coerce_tmp[1919494](1919498 'cast' int(32)[95] 0))
                        const-val count[1919949]:int(32)[95] "temp"
                        (1919954 'move' count[1919949](1919951 '.v' _iterator[1859596] F1_count[1961975]))
                        (1919501 'move' call_tmp[1919492](1919504 call ==[435517] count[1919949] coerce_tmp[1919494]))
                        (1919507 'move' tmp[1919490] call_tmp[1919492])
                        if call_tmp[1919492]
                        {
                          const-val tmp[1919512]:2*int(32)[971589] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                          val call_tmp[1919514]:int(32)[95] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[1919516]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val low[1919956]:int(32)[95] "temp"
                          (1919961 'move' low[1919956](1919958 '.v' _iterator[1859596] F0_low[1961971]))
                          (1919518 'move' call_tmp[1919516](1919521 call _cast[971453] low[1919956]))
                          const-val call_tmp[1919523]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[1919525]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                          (1919527 'move' coerce_tmp[1919525](1919529 'cast' uint(64)[115] 1))
                          (1919532 'move' call_tmp[1919523](1919535 call -[962104] call_tmp[1919516]))
                          const-val call_tmp[1919537]:int(32)[95] "dead at end of block" "expr temp" "maybe param" "temp"
                          (1919539 'move' call_tmp[1919537](1919542 call _cast[971516] call_tmp[1919523]))
                          const-val ret_tmp[1919544]:2*int(32)[971589] "temp"
                          const-val low[1919963]:int(32)[95] "temp"
                          (1919968 'move' low[1919963](1919965 '.v' _iterator[1859596] F0_low[1961971]))
                          (1919547 call _build_tuple[971547] low[1919963] call_tmp[1919537] ret_tmp[1919544])
                          (1919551 'move' tmp[1919512] ret_tmp[1919544])
                          (1919554 'move' tmp[1919488] tmp[1919512])
                        }
                        {
                          const-val tmp[1919558]:2*int(32)[971589] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                          val call_tmp[1919560]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[1919562]:int(32)[95] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val count[1919970]:int(32)[95] "temp"
                          (1919975 'move' count[1919970](1919972 '.v' _iterator[1859596] F1_count[1961975]))
                          (1919564 'move' call_tmp[1919562] count[1919970])
                          const-val call_tmp[1919567]:int(32)[95] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[1919569]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                          (1919571 'move' coerce_tmp[1919569](1919573 'cast' int(32)[95] 1))
                          const-val count[1919977]:int(32)[95] "temp"
                          (1919982 'move' count[1919977](1919979 '.v' _iterator[1859596] F1_count[1961975]))
                          (1919576 'move' call_tmp[1919567](1919579 call -[440305] count[1919977] coerce_tmp[1919569]))
                          const-val call_tmp[1919582]:int(32)[95] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val low[1919984]:int(32)[95] "temp"
                          (1919989 'move' low[1919984](1919986 '.v' _iterator[1859596] F0_low[1961971]))
                          (1919584 'move' call_tmp[1919582](1919587 call +[439525] low[1919984] call_tmp[1919567]))
                          const-val ret_tmp[1919590]:2*int(32)[971589] "temp"
                          const-val low[1919991]:int(32)[95] "temp"
                          (1919996 'move' low[1919991](1919993 '.v' _iterator[1859596] F0_low[1961971]))
                          (1919593 call _build_tuple[971547] low[1919991] call_tmp[1919582] ret_tmp[1919590])
                          (1919597 'move' tmp[1919558] ret_tmp[1919590])
                          (1919600 'move' tmp[1919488] tmp[1919558])
                        }
                        (1919604 '=' tmp[1919486] tmp[1919488])
                        (1919607 'noop')
                        1
                        ref call_tmp[1919609]:_ref(int(32))[936537] "dead at end of block" "maybe param" "reference to a const" "temp"
                        (1919611 'move' call_tmp[1919609](1919613 '.' tmp[1919486] x0[971585]))
                        const-val start[1919616]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                        const-val coerce_tmp[1919618]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                        (1919620 'move' coerce_tmp[1919618](1919622 'deref' call_tmp[1919609]))
                        (1919624 '=' start[1919616] coerce_tmp[1919618])
                        (1919627 'noop')
                        ref call_tmp[1919628]:_ref(int(32))[936537] "dead at end of block" "maybe param" "reference to a const" "temp"
                        (1919630 'move' call_tmp[1919628](1919632 '.' tmp[1919486] x1[971587]))
                        const-val end[1919635]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                        const-val coerce_tmp[1919637]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                        (1919639 'move' coerce_tmp[1919637](1919641 'deref' call_tmp[1919628]))
                        (1919643 '=' end[1919635] coerce_tmp[1919637])
                        (1919646 'noop')
                        val _indexOfInterest[1919647]:int(32)[95] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[1919649]:_ic_chpl_direct_param_stride_range_iter[977718] "dead at end of block" "expr temp" "temp"
                        const-val call_tmp[1919651]:_ir_chpl_direct_param_stride_range_iter[977724] "dead at end of block" "expr temp" "maybe param" "temp"
                        const-val ret_tmp[1919653]:_ir_chpl_direct_param_stride_range_iter[977724] "temp"
                        (1919656 call chpl_direct_param_stride_range_iter[972010] coerce_tmp[1919618] coerce_tmp[1919637] ret_tmp[1919653])
                        (1919660 'move' call_tmp[1919651] ret_tmp[1919653])
                        (1919663 'move' _iterator[1919649](1919666 call _getIterator[977733] call_tmp[1919651]))
                        {
                          val ret[1919669]:_ir_chpl_direct_param_stride_range_iter[977724] "dead after last mention" "RVV" "temp"
                          val call_tmp[1919671]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (1919674 call chpl_range_check_stride[972330])
                          val i[1919675]:int(32)[95] "dead at end of block" "insert auto destroy"
                          val call_tmp[1919677]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (1919679 'move' i[1919675] 0)
                          val call_tmp[1919682]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val default_arg_first[1919684]:int(32)[95] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val low[1919686]:int(32)[95] "temp"
                          (1919688 'move' low[1919686](1919690 '.v' _iterator[1919649] F0_low[1963512]))
                          (1919693 'move' default_arg_first[1919684](1919696 call chpl_checkIfRangeIterWillOverflow_default_first[976813] low[1919686]))
                          const-val default_arg_last[1919698]:int(32)[95] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val high[1919700]:int(32)[95] "temp"
                          (1919702 'move' high[1919700](1919704 '.v' _iterator[1919649] F1_high[1963516]))
                          (1919707 'move' default_arg_last[1919698](1919710 call chpl_checkIfRangeIterWillOverflow_default_last[976841] high[1919700]))
                          const-val _return_tmp_[1919712]:bool[10] "dead after last mention" "temp"
                          const-val low[1919714]:int(32)[95] "temp"
                          (1919716 'move' low[1919714](1919718 '.v' _iterator[1919649] F0_low[1963512]))
                          const-val high[1919721]:int(32)[95] "temp"
                          (1919723 'move' high[1919721](1919725 '.v' _iterator[1919649] F1_high[1963516]))
                          (1919728 'move' _return_tmp_[1919712](1919731 call chpl_checkIfRangeIterWillOverflow[976261] low[1919714] high[1919721] 1 default_arg_first[1919684] default_arg_last[1919698] 1))
                          CForLoop[1919738]
                          {
                            const-val yret[1919767]:int(32)[95] "dead after last mention" "YVV" "temp"
                            (1919769 'move' yret[1919767] i[1919675])
                            const-val _yieldedIndex[1919772]:int(32)[95] "temp"
                            (1919774 'move' _yieldedIndex[1919772] i[1919675])
                            {
                              const-val i[1919778]:int(32)[95] "const" "index var" "insert auto destroy"
                              (1919780 'move' i[1919778] _yieldedIndex[1919772])
                              const-val yret[1919783]:int(32)[95] "dead after last mention" "YVV" "temp"
                              (1919785 'move' yret[1919783] _yieldedIndex[1919772])
                              const-val _yieldedIndex[1919813]:int(32)[95] "temp"
                              (1919940 'move' _yieldedIndex[1919813] _yieldedIndex[1919772])
                              {
                                const-val i[1919815]:int(32)[95] "const" "index var" "insert auto destroy"
                                (1919817 'move' i[1919815] _yieldedIndex[1919813])
                                const-val yret[1919820]:int(32)[95] "dead after last mention" "YVV" "temp"
                                (1919822 'move' yret[1919820] _yieldedIndex[1919813])
                                const-val _yieldedIndex[1919825]:int(32)[95] "temp"
                                (1919827 'move' _yieldedIndex[1919825] _yieldedIndex[1919813])
                                {
                                  const-val i[1919831]:int(32)[95] "const" "index var" "insert auto destroy"
                                  (1919833 'move' i[1919831] _yieldedIndex[1919825])
                                  {
                                    val call_tmp[1919837]:c_ptr(uint(8))[937334] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1919839 'move' call_tmp[1919837](1919842 call +[955912] newBuff[173968] decodedIdx[174014]))
                                    const-val call_tmp[1919845]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                    const-val coerce_tmp[1919847]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1919849 'move' coerce_tmp[1919847](1919851 'cast' int(64)[13] nInvalidBytes[174104]))
                                    (1919854 'move' call_tmp[1919845](1919857 call -[440327] thisIdx[174009] coerce_tmp[1919847]))
                                    const-val call_tmp[1919860]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                    const-val coerce_tmp[1919862]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1919864 'move' coerce_tmp[1919862](1919866 'cast' int(64)[13] i[1919831]))
                                    (1919869 'move' call_tmp[1919860](1919872 call +[439547] call_tmp[1919845] coerce_tmp[1919862]))
                                    ref call_tmp[1919875]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
                                    (1919877 'move' call_tmp[1919875](1919880 call this[954002] buff[173889] call_tmp[1919860]))
                                    const-val call_tmp[1919883]:uint(16)[105] "dead after last mention" "expr temp" "maybe param" "temp"
                                    const-val coerce_tmp[1919885]:uint(16)[105] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1919887 'move' coerce_tmp[1919885](1919889 'cast' uint(16)[105] 56320))
                                    const-val coerce_tmp[1919892]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1919894 'move' coerce_tmp[1919892](1919896 'deref' call_tmp[1919875]))
                                    const-val coerce_tmp[1919898]:uint(16)[105] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1919900 'move' coerce_tmp[1919898](1919902 'cast' uint(16)[105] coerce_tmp[1919892]))
                                    (1919905 'move' call_tmp[1919883](1919908 call +[439591] coerce_tmp[1919885] coerce_tmp[1919898]))
                                    const-val coerce_tmp[1919911]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1919913 'move' coerce_tmp[1919911](1919915 'cast' c_void_ptr[149] call_tmp[1919837]))
                                    const-val coerce_tmp[1919918]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1919920 'move' coerce_tmp[1919918](1919922 'cast' int(32)[95] call_tmp[1919883]))
                                    const-val _return_tmp_[1919925]:syserr[223496] "dead after last mention" "temp"
                                    (1919927 'move' _return_tmp_[1919925](1919930 call qio_encode_char_buf[173912] coerce_tmp[1919911] coerce_tmp[1919918]))
                                    (1919934 call +=[451226] decodedIdx[174014] 3)
                                  }
                                  label _continueLabel[1919937]
                                }
                              }
                            }
                            {
                              const-val low[1919740]:int(32)[95] "temp"
                              (1919742 'move' low[1919740](1919744 '.v' _iterator[1919649] F0_low[1963512]))
                              (1919747 '=' i[1919675] low[1919740])
                            }
                            {
                              const-val high[1919751]:int(32)[95] "temp"
                              (1919753 'move' high[1919751](1919755 '.v' _iterator[1919649] F1_high[1963516]))
                              (1919758 '<=' i[1919675] high[1919751])
                            }
                            {
                              val call_tmp[1919762]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              (1919764 '+=' i[1919675] 1)
                            }
                          }
                          label _endchpl_direct_param_stride_range_iter[1919801]
                        }
                        (1919804 call _freeIterator[977906] _iterator[1919649])
                        (1919807 call chpl__autoDestroy[1502582] tmp[1919486])
                        label _endchpl_direct_counted_range_iter_helper[1919809]
                      }
                      (1859639 call _freeIterator[978156] _iterator[1859596])
                      label _endchpl_direct_counted_range_iter[1859641]
                    }
                    label _breakLabel[174246]
                    (1798917 call _freeIterator[978406] _iterator[174241])
                  }
                  const-val call_tmp[682365]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[978732]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (978738 'move' coerce_tmp[978732](978734 'cast' int(32)[95] 1))
                  (682368 'move' call_tmp[682365](174283 call -[440305] nInvalidBytes[174104] coerce_tmp[978732]))
                  const-val coerce_tmp[978741]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (978747 'move' coerce_tmp[978741](978743 'cast' int(64)[13] call_tmp[682365]))
                  (174285 call +=[451226] numCodepoints[173999] coerce_tmp[978741])
                }
              }
            }
          }
          {
            const-val coerce_tmp[978755]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (978761 'move' coerce_tmp[978755](978757 'cast' int(64)[13] nBytes[174026]))
            (174312 call bufferMemcpyLocal[173076] newBuff[173968] buffToDecode[174058] coerce_tmp[978755] decodedIdx[174014] 0)
            const-val coerce_tmp[978773]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (978779 'move' coerce_tmp[978773](978775 'cast' int(64)[13] nBytes[174026]))
            (174317 call +=[451226] thisIdx[174009] coerce_tmp[978773])
            const-val coerce_tmp[978782]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (978788 'move' coerce_tmp[978782](978784 'cast' int(64)[13] nBytes[174026]))
            (174322 call +=[451226] decodedIdx[174014] coerce_tmp[978782])
          }
          (1798921 call chpl__autoDestroy[1498323] tmp[174037])
        }
        label _continueLabel[174332]
        const-val call_tmp[682370]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (682373 'move' call_tmp[682370](174340 call <[437363] thisIdx[174009] length[173895]))
        (174343 'move' tmp[174329] call_tmp[682370])
        tmp[174329]
      }
      label _breakLabel[174333]
    }
    ref call_tmp[682375]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
    (682378 'move' call_tmp[682375](174359 call this[954002] newBuff[173968] decodedIdx[174014]))
    const-val coerce_tmp[978795]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (978801 'move' coerce_tmp[978795](978797 'cast' uint(8)[100] 0))
    (174361 call =[435259] call_tmp[682375] coerce_tmp[978795])
    const-val call_tmp[682380]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1786107]:string[26] "temp"
    (174374 call chpl_createStringWithOwnedBufferNV[30673] newBuff[173968] decodedIdx[174014] allocSize[173970] numCodepoints[173999] ret_tmp[1786107])
    (1786110 'move' call_tmp[682380] ret_tmp[1786107])
    val ret[174375]:string[26] "dead at end of block" "insert auto destroy"
    (544815 'move' ret[174375] call_tmp[682380])
    ref call_tmp[682387]:_ref(bool)[937110] "dead after last mention" "maybe param" "temp"
    (682390 'move' call_tmp[682387](174382 call hasEscapes[757927] ret[174375]))
    (174386 call =[435085] call_tmp[682387] hasEscapes[173994])
    (522682 'move' ret[522672] ret[174375])
    (1798924 call chpl__autoDestroy[1498061] tmp[173980])
    gotoReturn _end_decodeByteBuffer[522670] _end_decodeByteBuffer[522670]
    label _end_decodeByteBuffer[522670]
    (1788159 '=' _retArg[1788157] ret[522672])
    (1788163 return _void[55])
  }
  function decodeHelp[174406](const in arg buff[174403]:c_ptr(uint(8))[937334], const in arg buffLen[174409]:int(64)[13], const in arg offset[174413]:int(64)[13], const in arg allowEsc[174417]:bool[10], ref arg _retArg[1788183]:_ref((syserr,int(32),int(32)))[964638]) : void[4] "fn returns via _retArg" "resolved" "fn synchronization free"
  {
    const-val ret[522700]:(syserr,int(32),int(32))[964531] "dead after last mention" "RVV" "temp"
    val chr[174482]:int(32)[95] "dead at end of block" "insert auto destroy"
    val call_tmp[682397]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (964691 'move' chr[174482] 0)
    val nBytes[174487]:int(32)[95] "dead at end of block" "insert auto destroy"
    (964694 'move' nBytes[174487] 0)
    const-val call_tmp[682402]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (682405 'move' call_tmp[682402](174493 call _cast[964296] offset[174413]))
    const-val start[174495]:int(32)[95] "dead at end of block" "insert auto destroy"
    (544821 'move' start[174495] call_tmp[682402])
    val call_tmp[682407]:c_ptr(uint(8))[937334] "dead at end of block" "expr temp" "maybe param" "temp"
    (682410 'move' call_tmp[682407](174501 call +[964327] buff[174403] start[174495]))
    const-val call_tmp[682412]:c_string[19] "dead at end of block" "maybe param" "temp"
    (682415 'move' call_tmp[682412](174504 call _cast[957717] call_tmp[682407]))
    const-val multibytes[174506]:c_string[19] "dead at end of block" "insert auto destroy"
    (544823 'move' multibytes[174506] call_tmp[682412])
    const-val call_tmp[682417]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[964381]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (964387 'move' coerce_tmp[964381](964383 'cast' int(64)[13] start[174495]))
    (682420 'move' call_tmp[682417](174512 call -[440327] buffLen[174409] coerce_tmp[964381]))
    const-val call_tmp[682422]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (682425 'move' call_tmp[682422] call_tmp[682417])
    const-val maxbytes[174517]:int(64)[13] "dead at end of block" "insert auto destroy"
    (544825 'move' maxbytes[174517] call_tmp[682422])
    val decodeRet[174522]:syserr[223496] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[544827]:syserr[223496] "dead after last mention" "maybe param" "temp" "type variable"
    const-val call_tmp[682427]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (682430 'move' call_tmp[682427] allowEsc[174417])
    if call_tmp[682427]
    {
      const-val call_tmp[682432]:syserr[223496] "dead at end of block" "maybe param" "temp"
      (682435 'move' call_tmp[682432](174534 call qio_decode_char_buf_esc[174460] chr[174482] nBytes[174487] multibytes[174506] maxbytes[174517]))
      (544835 'move' decodeRet[174522] call_tmp[682432])
    }
    {
      const-val call_tmp[682437]:syserr[223496] "dead at end of block" "maybe param" "temp"
      (682440 'move' call_tmp[682437](174545 call qio_decode_char_buf[174433] chr[174482] nBytes[174487] multibytes[174506] maxbytes[174517]))
      (544838 'move' decodeRet[174522] call_tmp[682437])
    }
    const-val call_tmp[682442]:(syserr,int(32),int(32))[964531] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1788911]:(syserr,int(32),int(32))[964531] "temp"
    (174559 call _build_tuple[964481] decodeRet[174522] chr[174482] nBytes[174487] ret_tmp[1788911])
    (1788914 'move' call_tmp[682442] ret_tmp[1788911])
    (522705 'move' ret[522700] call_tmp[682442])
    gotoReturn _end_decodeHelp[522698] _end_decodeHelp[522698]
    label _end_decodeHelp[522698]
    (1788185 '=' _retArg[1788183] ret[522700])
    (1788187 return _void[55])
  }
  function initWithBorrowedBuffer[948785](ref arg x[948787]:_ref(string)[937850], const  ref arg other[948792]:string[26]) : void[4] "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[948798]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[948809]:_ref(bool)[937110] "dead after last mention" "maybe param" "temp"
    (948811 'move' call_tmp[948809](948814 call isOwned[757901] x[948787]))
    (948818 call =[435085] call_tmp[948809] 0)
    val call_tmp[948822]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      ref call_tmp[948845]:_ref(bool)[937110] "dead after last mention" "maybe param" "temp"
      (948847 'move' call_tmp[948845](948850 call hasEscapes[757927] x[948787]))
      ref call_tmp[948853]:_ref(bool)[937110] "dead after last mention" "maybe param" "reference to a const" "temp"
      (948855 'move' call_tmp[948853](948858 call hasEscapes[757927] other[948792]))
      const-val coerce_tmp[949493]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (949497 'move' coerce_tmp[949493](949495 'deref' call_tmp[948853]))
      (948862 call =[435085] call_tmp[948845] coerce_tmp[949493])
    }
    ref call_tmp[948866]:_ref(int(32))[936537] "dead at end of block" "maybe param" "reference to a const" "temp"
    (948868 'move' call_tmp[948866](948871 call locale_id[757953] other[948792]))
    const-val call_tmp[948874]:bool[10] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[949501]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (949505 'move' coerce_tmp[949501](949503 'deref' call_tmp[948866]))
    (948876 'move' call_tmp[948874](948879 call !=[435901] coerce_tmp[949501] chpl_nodeID[208152]))
    const-val otherRemote[948882]:bool[10] "dead at end of block" "const" "insert auto destroy"
    (948884 'move' otherRemote[948882] call_tmp[948874])
    const-val call_tmp[948888]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (948890 'move' call_tmp[948888](948893 call numBytes[32807] other[948792]))
    const-val otherLen[948896]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (948898 'move' otherLen[948896] call_tmp[948888])
    const-val call_tmp[948902]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (948904 'move' call_tmp[948902](948907 call >[437583] otherLen[948896] 0))
    const-val call_tmp[948910]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (948912 'move' call_tmp[948910] call_tmp[948902])
    if call_tmp[948910]
    {
      ref call_tmp[948919]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
      (948921 'move' call_tmp[948919](948924 call buffLen[757797] x[948787]))
      (948928 call =[435238] call_tmp[948919] otherLen[948896])
      const-val call_tmp[948933]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (948935 'move' call_tmp[948933] otherRemote[948882])
      if call_tmp[948933]
      {
        ref call_tmp[948942]:_ref(bool)[937110] "dead after last mention" "maybe param" "temp"
        (948944 'move' call_tmp[948942](948947 call isOwned[757901] x[948787]))
        (948951 call =[435085] call_tmp[948942] 1)
        ref call_tmp[948955]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "temp"
        (948957 'move' call_tmp[948955](948960 call buff[757875] x[948787]))
        ref call_tmp[948963]:_ref(int(32))[936537] "dead after last mention" "maybe param" "reference to a const" "temp"
        (948965 'move' call_tmp[948963](948968 call locale_id[757953] other[948792]))
        ref call_tmp[948971]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "reference to a const" "temp"
        (948973 'move' call_tmp[948971](948976 call buff[757875] other[948792]))
        val call_tmp[948979]:c_ptr(uint(8))[937334] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[949556]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (949560 'move' coerce_tmp[949556](949558 'deref' call_tmp[948963]))
        const-val coerce_tmp[949562]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (949568 'move' coerce_tmp[949562](949564 'cast' int(64)[13] coerce_tmp[949556]))
        val coerce_tmp[949570]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (949574 'move' coerce_tmp[949570](949572 'deref' call_tmp[948971]))
        (948981 'move' call_tmp[948979](948984 call bufferCopyRemote[172784] coerce_tmp[949562] coerce_tmp[949570] otherLen[948896]))
        (948989 call =[954124] call_tmp[948955] call_tmp[948979])
        ref call_tmp[948994]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
        (948996 'move' call_tmp[948994](948999 call buffLen[757797] x[948787]))
        const-val call_tmp[949002]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (949004 'move' call_tmp[949002](949007 call +[949577] otherLen[948896]))
        (949011 call =[435238] call_tmp[948994] call_tmp[949002])
        val call_tmp[949016]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          ref call_tmp[949039]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
          (949041 'move' call_tmp[949039](949044 call cachedNumCodepoints[757849] x[948787]))
          ref call_tmp[949047]:_ref(int(64))[936483] "dead after last mention" "maybe param" "reference to a const" "temp"
          (949049 'move' call_tmp[949047](949052 call cachedNumCodepoints[757849] other[948792]))
          const-val coerce_tmp[954159]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (954163 'move' coerce_tmp[954159](954161 'deref' call_tmp[949047]))
          (949056 call =[435238] call_tmp[949039] coerce_tmp[954159])
        }
      }
      {
        ref call_tmp[949061]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "temp"
        (949063 'move' call_tmp[949061](949066 call buff[757875] x[948787]))
        ref call_tmp[949069]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "reference to a const" "temp"
        (949071 'move' call_tmp[949069](949074 call buff[757875] other[948792]))
        val coerce_tmp[954168]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (954172 'move' coerce_tmp[954168](954170 'deref' call_tmp[949069]))
        (949078 call =[954124] call_tmp[949061] coerce_tmp[954168])
        ref call_tmp[949082]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
        (949084 'move' call_tmp[949082](949087 call buffSize[757823] x[948787]))
        ref call_tmp[949090]:_ref(int(64))[936483] "dead after last mention" "maybe param" "reference to a const" "temp"
        (949092 'move' call_tmp[949090](949095 call buffSize[757823] other[948792]))
        const-val coerce_tmp[954177]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (954181 'move' coerce_tmp[954177](954179 'deref' call_tmp[949090]))
        (949099 call =[435238] call_tmp[949082] coerce_tmp[954177])
        val call_tmp[949103]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          ref call_tmp[949126]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
          (949128 'move' call_tmp[949126](949131 call cachedNumCodepoints[757849] x[948787]))
          ref call_tmp[949134]:_ref(int(64))[936483] "dead after last mention" "maybe param" "reference to a const" "temp"
          (949136 'move' call_tmp[949134](949139 call cachedNumCodepoints[757849] other[948792]))
          const-val coerce_tmp[954189]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (954193 'move' coerce_tmp[954189](954191 'deref' call_tmp[949134]))
          (949143 call =[435238] call_tmp[949126] coerce_tmp[954189])
        }
      }
    }
    (949149 return _void[55])
  }
  function initWithBorrowedBuffer[1718994](ref arg x[1718996]:_ref(string)[937850], const in arg other[1719000]:c_ptr(uint(8))[937334], const in arg length[1719002]:int(64)[13], const in arg size[1719004]:int(64)[13]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val call_tmp[1719010]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[1719021]:_ref(bool)[937110] "dead after last mention" "maybe param" "temp"
    (1719023 'move' call_tmp[1719021](1719026 call isOwned[757901] x[1718996]))
    (1719030 call =[435085] call_tmp[1719021] 0)
    ref call_tmp[1719034]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "temp"
    (1719036 'move' call_tmp[1719034](1719039 call buff[757875] x[1718996]))
    (1719043 call =[954124] call_tmp[1719034] other[1719000])
    ref call_tmp[1719047]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
    (1719049 'move' call_tmp[1719047](1719052 call buffSize[757823] x[1718996]))
    (1719056 call =[435238] call_tmp[1719047] size[1719004])
    ref call_tmp[1719060]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
    (1719062 'move' call_tmp[1719060](1719065 call buffLen[757797] x[1718996]))
    (1719069 call =[435238] call_tmp[1719060] length[1719002])
    (1719072 return _void[55])
  }
  function initWithBorrowedBuffer[1719107](ref arg x[1719109]:_ref(bytes)[937898], const in arg other[1719113]:c_ptr(uint(8))[937334], const in arg length[1719115]:int(64)[13], const in arg size[1719117]:int(64)[13]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val call_tmp[1719123]:bytes[24] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[1719134]:_ref(bool)[937110] "dead after last mention" "maybe param" "temp"
    (1719136 'move' call_tmp[1719134](1719139 call isOwned[752796] x[1719109]))
    (1719143 call =[435085] call_tmp[1719134] 0)
    ref call_tmp[1719147]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "temp"
    (1719149 'move' call_tmp[1719147](1719152 call buff[752770] x[1719109]))
    (1719156 call =[954124] call_tmp[1719147] other[1719113])
    ref call_tmp[1719160]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
    (1719162 'move' call_tmp[1719160](1719165 call buffSize[752744] x[1719109]))
    (1719169 call =[435238] call_tmp[1719160] size[1719117])
    ref call_tmp[1719173]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
    (1719175 'move' call_tmp[1719173](1719178 call buffLen[752718] x[1719109]))
    (1719182 call =[435238] call_tmp[1719173] length[1719115])
    (1719185 return _void[55])
  }
  function initWithOwnedBuffer[978806](ref arg x[978808]:_ref(string)[937850], const in arg other[978812]:c_ptr(uint(8))[937334], const in arg length[978814]:int(64)[13], const in arg size[978816]:int(64)[13]) : void[4] "inline" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[978822]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[978833]:_ref(bool)[937110] "dead after last mention" "maybe param" "temp"
    (978835 'move' call_tmp[978833](978838 call isOwned[757901] x[978808]))
    (978842 call =[435085] call_tmp[978833] 1)
    ref call_tmp[978846]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "temp"
    (978848 'move' call_tmp[978846](978851 call buff[757875] x[978808]))
    (978855 call =[954124] call_tmp[978846] other[978812])
    ref call_tmp[978859]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
    (978861 'move' call_tmp[978859](978864 call buffSize[757823] x[978808]))
    (978868 call =[435238] call_tmp[978859] size[978816])
    ref call_tmp[978872]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
    (978874 'move' call_tmp[978872](978877 call buffLen[757797] x[978808]))
    (978881 call =[435238] call_tmp[978872] length[978814])
    (978884 return _void[55])
  }
  function initWithNewBuffer[954240](ref arg x[954242]:_ref(string)[937850], const  ref arg other[954247]:string[26]) : void[4] "inline" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[954253]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[954264]:_ref(int(32))[936537] "dead at end of block" "maybe param" "reference to a const" "temp"
    (954266 'move' call_tmp[954264](954269 call locale_id[757953] other[954247]))
    const-val call_tmp[954272]:bool[10] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[954733]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (954737 'move' coerce_tmp[954733](954735 'deref' call_tmp[954264]))
    (954274 'move' call_tmp[954272](954277 call !=[435901] coerce_tmp[954733] chpl_nodeID[208152]))
    const-val otherRemote[954280]:bool[10] "dead at end of block" "const" "insert auto destroy"
    (954282 'move' otherRemote[954280] call_tmp[954272])
    const-val call_tmp[954286]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (954288 'move' call_tmp[954286](954291 call numBytes[32807] other[954247]))
    const-val otherLen[954294]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (954296 'move' otherLen[954294] call_tmp[954286])
    ref call_tmp[954300]:_ref(bool)[937110] "dead after last mention" "maybe param" "temp"
    (954302 'move' call_tmp[954300](954305 call isOwned[757901] x[954242]))
    (954309 call =[435085] call_tmp[954300] 1)
    val call_tmp[954313]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      ref call_tmp[954336]:_ref(bool)[937110] "dead after last mention" "maybe param" "temp"
      (954338 'move' call_tmp[954336](954341 call hasEscapes[757927] x[954242]))
      ref call_tmp[954344]:_ref(bool)[937110] "dead after last mention" "maybe param" "reference to a const" "temp"
      (954346 'move' call_tmp[954344](954349 call hasEscapes[757927] other[954247]))
      const-val coerce_tmp[954748]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (954752 'move' coerce_tmp[954748](954750 'deref' call_tmp[954344]))
      (954353 call =[435085] call_tmp[954336] coerce_tmp[954748])
    }
    val call_tmp[954357]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      ref call_tmp[954380]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
      (954382 'move' call_tmp[954380](954385 call cachedNumCodepoints[757849] x[954242]))
      ref call_tmp[954388]:_ref(int(64))[936483] "dead after last mention" "maybe param" "reference to a const" "temp"
      (954390 'move' call_tmp[954388](954393 call cachedNumCodepoints[757849] other[954247]))
      const-val coerce_tmp[954760]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (954764 'move' coerce_tmp[954760](954762 'deref' call_tmp[954388]))
      (954397 call =[435238] call_tmp[954380] coerce_tmp[954760])
    }
    const-val call_tmp[954401]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (954403 'move' call_tmp[954401](954406 call >[437583] otherLen[954294] 0))
    const-val call_tmp[954409]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (954411 'move' call_tmp[954409] call_tmp[954401])
    if call_tmp[954409]
    {
      ref call_tmp[954418]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
      (954420 'move' call_tmp[954418](954423 call buffLen[757797] x[954242]))
      (954427 call =[435238] call_tmp[954418] otherLen[954294])
      const-val tmp[954452]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val tmp[954470]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (954472 'move' tmp[954470] otherRemote[954280])
      (954477 'move' tmp[954452] tmp[954470])
      const-val call_tmp[954489]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (954491 'move' call_tmp[954489] tmp[954452])
      if call_tmp[954489]
      {
        ref call_tmp[954498]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "temp"
        (954500 'move' call_tmp[954498](954503 call buff[757875] x[954242]))
        ref call_tmp[954506]:_ref(int(32))[936537] "dead after last mention" "maybe param" "reference to a const" "temp"
        (954508 'move' call_tmp[954506](954511 call locale_id[757953] other[954247]))
        ref call_tmp[954514]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "reference to a const" "temp"
        (954516 'move' call_tmp[954514](954519 call buff[757875] other[954247]))
        val call_tmp[954522]:c_ptr(uint(8))[937334] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[954895]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (954899 'move' coerce_tmp[954895](954897 'deref' call_tmp[954506]))
        const-val coerce_tmp[954901]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (954907 'move' coerce_tmp[954901](954903 'cast' int(64)[13] coerce_tmp[954895]))
        val coerce_tmp[954909]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (954913 'move' coerce_tmp[954909](954911 'deref' call_tmp[954514]))
        (954524 'move' call_tmp[954522](954527 call bufferCopyRemote[172784] coerce_tmp[954901] coerce_tmp[954909] otherLen[954294]))
        (954532 call =[954124] call_tmp[954498] call_tmp[954522])
        ref call_tmp[954537]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
        (954539 'move' call_tmp[954537](954542 call buffSize[757823] x[954242]))
        const-val call_tmp[954545]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (954547 'move' call_tmp[954545](954550 call +[949577] otherLen[954294]))
        (954554 call =[435238] call_tmp[954537] call_tmp[954545])
      }
      {
        ref call_tmp[954560]:_ref(c_ptr(uint(8)))[937343] "dead at end of block" "maybe param" "reference to a const" "temp"
        (954562 'move' call_tmp[954560](954565 call buff[757875] other[954247]))
        const-val call_tmp[954568]:(c_ptr(uint(8)),int(64))[955119] "dead at end of block" "maybe param" "temp"
        val coerce_tmp[954921]:c_ptr(uint(8))[937334] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (954925 'move' coerce_tmp[954921](954923 'deref' call_tmp[954560]))
        const-val ret_tmp[1788079]:(c_ptr(uint(8)),int(64))[955119] "temp"
        (954573 call bufferCopyLocal[172847] coerce_tmp[954921] otherLen[954294] ret_tmp[1788079])
        (1788082 'move' call_tmp[954568] ret_tmp[1788079])
        const-val tmp[954576]:(c_ptr(uint(8)),int(64))[955119] "dead at end of block" "const" "insert auto destroy" "temp"
        (954578 'move' tmp[954576] call_tmp[954568])
        1
        ref call_tmp[954586]:_ref(c_ptr(uint(8)))[937343] "dead at end of block" "maybe param" "reference to a const" "temp"
        (954588 'move' call_tmp[954586](957123 '.' tmp[954576] x0[955115]))
        const buff[954593]:c_ptr(uint(8))[937334] "dead at end of block" "const" "insert auto destroy"
        val coerce_tmp[957128]:c_ptr(uint(8))[937334] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (957132 'move' coerce_tmp[957128](957130 'deref' call_tmp[954586]))
        (954595 'move' buff[954593] coerce_tmp[957128])
        ref call_tmp[954598]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
        (954600 'move' call_tmp[954598](957137 '.' tmp[954576] x1[955117]))
        const-val allocSize[954605]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[957142]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (957146 'move' coerce_tmp[957142](957144 'deref' call_tmp[954598]))
        (954607 'move' allocSize[954605] coerce_tmp[957142])
        ref call_tmp[954611]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "temp"
        (954613 'move' call_tmp[954611](954616 call buff[757875] x[954242]))
        (954620 call =[954124] call_tmp[954611] buff[954593])
        ref call_tmp[954625]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
        (954627 'move' call_tmp[954625](954630 call buffLen[757797] x[954242]))
        ref call_tmp[954633]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
        ref _this_tmp_[957153]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "temp"
        (957155 'move' _this_tmp_[957153](954638 call buff[757875] x[954242]))
        val coerce_tmp[957160]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (957164 'move' coerce_tmp[957160](957162 'deref' _this_tmp_[957153]))
        const-val coerce_tmp[957166]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (957170 'move' coerce_tmp[957166](957168 'deref' call_tmp[954625]))
        (954635 'move' call_tmp[954633](954641 call this[954002] coerce_tmp[957160] coerce_tmp[957166]))
        const-val coerce_tmp[957173]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (957179 'move' coerce_tmp[957173](957175 'cast' uint(8)[100] 0))
        (954644 call =[435259] call_tmp[954633] coerce_tmp[957173])
        ref call_tmp[954648]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
        (954650 'move' call_tmp[954648](954653 call buffSize[757823] x[954242]))
        (954657 call =[435238] call_tmp[954648] allocSize[954605])
        (1799171 call chpl__autoDestroy[1498061] tmp[954576])
      }
    }
    (954664 return _void[55])
  }
  function initWithNewBuffer[1751470](ref arg x[1751472]:_ref(string)[937850], const in arg other[1751476]:c_ptr(uint(8))[937334], const in arg length[1751478]:int(64)[13], const in arg size[1751480]:int(64)[13]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val call_tmp[1751486]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val otherLen[1751497]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1751499 'move' otherLen[1751497] length[1751478])
    ref call_tmp[1751503]:_ref(bool)[937110] "dead after last mention" "maybe param" "temp"
    (1751505 'move' call_tmp[1751503](1751508 call isOwned[757901] x[1751472]))
    (1751512 call =[435085] call_tmp[1751503] 1)
    const-val call_tmp[1751516]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1751518 'move' call_tmp[1751516](1751521 call >[437583] otherLen[1751497] 0))
    const-val call_tmp[1751524]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1751526 'move' call_tmp[1751524] call_tmp[1751516])
    if call_tmp[1751524]
    {
      val call_tmp[1751533]:c_ptr(uint(8))[937334] "dead at end of block" "expr temp" "maybe param" "temp"
      (1751535 'move' call_tmp[1751533] other[1751476])
      const-val call_tmp[1751541]:(c_ptr(uint(8)),int(64))[955119] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1788091]:(c_ptr(uint(8)),int(64))[955119] "temp"
      (1751546 call bufferCopyLocal[172847] call_tmp[1751533] otherLen[1751497] ret_tmp[1788091])
      (1788094 'move' call_tmp[1751541] ret_tmp[1788091])
      const-val tmp[1751549]:(c_ptr(uint(8)),int(64))[955119] "dead at end of block" "const" "insert auto destroy" "temp"
      (1751551 'move' tmp[1751549] call_tmp[1751541])
      1
      ref call_tmp[1751559]:_ref(c_ptr(uint(8)))[937343] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1751561 'move' call_tmp[1751559](1751667 '.' tmp[1751549] x0[955115]))
      const buff[1751566]:c_ptr(uint(8))[937334] "dead at end of block" "const" "insert auto destroy"
      val coerce_tmp[1751672]:c_ptr(uint(8))[937334] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1751676 'move' coerce_tmp[1751672](1751674 'deref' call_tmp[1751559]))
      (1751568 'move' buff[1751566] coerce_tmp[1751672])
      ref call_tmp[1751571]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1751573 'move' call_tmp[1751571](1751681 '.' tmp[1751549] x1[955117]))
      const-val allocSize[1751578]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1751686]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1751690 'move' coerce_tmp[1751686](1751688 'deref' call_tmp[1751571]))
      (1751580 'move' allocSize[1751578] coerce_tmp[1751686])
      ref call_tmp[1751584]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "temp"
      (1751586 'move' call_tmp[1751584](1751589 call buff[757875] x[1751472]))
      (1751593 call =[954124] call_tmp[1751584] buff[1751566])
      ref call_tmp[1751598]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
      (1751600 'move' call_tmp[1751598](1751603 call buffLen[757797] x[1751472]))
      (1751607 call =[435238] call_tmp[1751598] otherLen[1751497])
      ref call_tmp[1751612]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
      (1751614 'move' call_tmp[1751612](1751617 call buffLen[757797] x[1751472]))
      ref call_tmp[1751620]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
      ref _this_tmp_[1751699]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "temp"
      (1751701 'move' _this_tmp_[1751699](1751625 call buff[757875] x[1751472]))
      val coerce_tmp[1751706]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1751710 'move' coerce_tmp[1751706](1751708 'deref' _this_tmp_[1751699]))
      const-val coerce_tmp[1751712]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1751716 'move' coerce_tmp[1751712](1751714 'deref' call_tmp[1751612]))
      (1751622 'move' call_tmp[1751620](1751628 call this[954002] coerce_tmp[1751706] coerce_tmp[1751712]))
      const-val coerce_tmp[1751719]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1751725 'move' coerce_tmp[1751719](1751721 'cast' uint(8)[100] 0))
      (1751631 call =[435259] call_tmp[1751620] coerce_tmp[1751719])
      ref call_tmp[1751635]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
      (1751637 'move' call_tmp[1751635](1751640 call buffSize[757823] x[1751472]))
      (1751644 call =[435238] call_tmp[1751635] allocSize[1751578])
      (1808024 call chpl__autoDestroy[1498061] tmp[1751549])
    }
    (1751650 return _void[55])
  }
  function getView[1031065](const  ref arg x[1031067]:_ref(string)[937850], const in arg r[1031069]:range(byteIndex,bounded,false)[1025703], ref arg _retArg[1789539]:_ref((range(int(64),bounded,false),int(64)))[1086397]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val ret[1031071]:(range(int(64),bounded,false),int(64))[1084835] "dead after last mention" "RVV" "temp"
    val call_tmp[1031081]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1031094]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1031437]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1031488]:byteIndex[28170] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      const-val call_tmp[1031524]:(range(int(64),bounded,false),int(64))[1084835] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1789545]:(range(int(64),bounded,false),int(64))[1084835] "temp"
      (1031529 call simpleCaseHelper[1031185] r[1031069] x[1031067] ret_tmp[1789545])
      (1789548 'move' call_tmp[1031524] ret_tmp[1789545])
      (1031530 'move' ret[1031071] call_tmp[1031524])
      gotoReturn _end_getView[1032296] _end_getView[1032296]
    }
    label _end_getView[1032296]
    (1789541 '=' _retArg[1789539] ret[1031071])
    (1789543 return _void[55])
  }
  function getView[1112058](const  ref arg x[1112060]:_ref(string)[937850], const in arg r[1112062]:range(int(64),bounded,false)[1026725], ref arg _retArg[1790768]:_ref((range(int(64),bounded,false),int(64)))[1086397]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1112064]:(range(int(64),bounded,false),int(64))[1084835] "dead after last mention" "RVV" "temp"
    val call_tmp[1112074]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1112087]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1112430]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1112481]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1112532]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val tmp[1112557]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val tmp[1112575]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1112577]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1112579 'move' call_tmp[1112577](1112585 call isASCII[31046] x[1112060]))
      (1112586 'move' tmp[1112575] call_tmp[1112577])
      (1112591 'move' tmp[1112557] tmp[1112575])
      const-val call_tmp[1112603]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1112605 'move' call_tmp[1112603] tmp[1112557])
      if call_tmp[1112603]
      {
        const-val call_tmp[1112612]:(range(int(64),bounded,false),int(64))[1084835] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1790774]:(range(int(64),bounded,false),int(64))[1084835] "temp"
        (1112617 call simpleCaseHelper[1112178] r[1112062] x[1112060] ret_tmp[1790774])
        (1790777 'move' call_tmp[1112612] ret_tmp[1790774])
        (1112618 'move' ret[1112064] call_tmp[1112612])
        gotoReturn _end_getView[1113289] _end_getView[1113289]
      }
      {
        const-val call_tmp[1112646]:range(int(64),bounded,false)[1026725] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1786325]:range(int(64),bounded,false)[1026725] "temp"
        (1112651 call indices[32785] x[1112060] ret_tmp[1786325])
        (1786328 'move' call_tmp[1112646] ret_tmp[1786325])
        const-val call_tmp[1112654]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1112656 'move' call_tmp[1112654](1112659 call ==[1041823] r[1112062] call_tmp[1112646]))
        const-val call_tmp[1112662]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1112664 'move' call_tmp[1112662] call_tmp[1112654])
        if call_tmp[1112662]
        {
          const-val call_tmp[1112671]:range(int(64),bounded,false)[1026725] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1786221]:range(int(64),bounded,false)[1026725] "temp"
          (1112676 call byteIndices[31065] x[1112060] ret_tmp[1786221])
          (1786224 'move' call_tmp[1112671] ret_tmp[1786221])
          ref call_tmp[1112679]:_ref(int(64))[936483] "dead after last mention" "maybe param" "reference to a const" "temp"
          (1112681 'move' call_tmp[1112679](1112684 call cachedNumCodepoints[757849] x[1112060]))
          const-val call_tmp[1112687]:(range(int(64),bounded,false),int(64))[1084835] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val coerce_tmp[1120837]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1120841 'move' coerce_tmp[1120837](1120839 'deref' call_tmp[1112679]))
          const-val ret_tmp[1790281]:(range(int(64),bounded,false),int(64))[1084835] "temp"
          (1112692 call _build_tuple[1084793] call_tmp[1112671] coerce_tmp[1120837] ret_tmp[1790281])
          (1790284 'move' call_tmp[1112687] ret_tmp[1790281])
          (1112695 'move' ret[1112064] call_tmp[1112687])
          (1800994 call chpl__autoDestroy[1567322] call_tmp[1112671])
          (1800997 call chpl__autoDestroy[1567322] call_tmp[1112646])
          gotoReturn _end_getView[1113289] _end_getView[1113289]
        }
        (1801000 call chpl__autoDestroy[1567322] call_tmp[1112646])
        val call_tmp[1112718]:range(int(64),bounded,false)[1026725] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1112727]:range(int(64),bounded,false)[1026725] "dead at end of block" "maybe param" "temp"
        const-val _formal_tmp_in_x[1120855]:range(int(64),bounded,false)[1026725] "dead at end of block" "expr temp" "no auto destroy" "temp"
        (1120859 'move' _formal_tmp_in_x[1120855] r[1112062])
        const-val ret_tmp[1790792]:range(int(64),bounded,false)[1026725] "temp"
        (1120852 call _removed_cast[1113334] _formal_tmp_in_x[1120855] ret_tmp[1790792])
        (1790795 'move' call_tmp[1112727] ret_tmp[1790792])
        const-val intR[1112735]:range(int(64),bounded,false)[1026725] "dead at end of block" "const" "insert auto destroy"
        (1112737 'move' intR[1112735] call_tmp[1112727])
        {
          const-val call_tmp[1112750]:range(int(64),bounded,false)[1026725] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1786331]:range(int(64),bounded,false)[1026725] "temp"
          (1112755 call indices[32785] x[1112060] ret_tmp[1786331])
          (1786334 'move' call_tmp[1112750] ret_tmp[1786331])
          const-val call_tmp[1112758]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1112760 'move' call_tmp[1112758](1112766 call boundsCheck[1033285] call_tmp[1112750] intR[1112735]))
          const-val call_tmp[1112768]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1112770 'move' call_tmp[1112768](1112773 call ![7494] call_tmp[1112758]))
          const-val call_tmp[1112775]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1112777 'move' call_tmp[1112775] call_tmp[1112768])
          if call_tmp[1112775]
          {
            const-val call_tmp[1112784]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (1112786 'move' call_tmp[1112784](1112789 call size[32769] x[1112060]))
            (1112793 call halt[1113371] "range " r[1112062] " out of bounds for string with length " call_tmp[1112784])
          }
          (1801004 call chpl__autoDestroy[1567322] call_tmp[1112750])
        }
        val cpCount[1112800]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1112802 'move' cpCount[1112800] 0)
        const-val cpIdxLow[1112828]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val tmp[1112830]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[1112848]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1112850]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1112852 'move' call_tmp[1112850](1112855 call alignedLow[1104772] intR[1112735]))
        const-val call_tmp[1112858]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1112860 'move' call_tmp[1112858] call_tmp[1112850])
        const-val call_tmp[1112866]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1112868 'move' call_tmp[1112866](1112871 call >=[979887] call_tmp[1112858]))
        (1112874 'move' tmp[1112848] call_tmp[1112866])
        (1112879 'move' tmp[1112830] tmp[1112848])
        val tmp[1112891]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
        const-val tmp[1112893]:bool[10] "dead after last mention" "maybe param" "temp"
        (1112895 'move' tmp[1112893] tmp[1112830])
        if tmp[1112893]
        {
          const-val tmp[1112902]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
          const-val call_tmp[1112904]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
          (1112906 'move' call_tmp[1112904](1112909 call alignedLow[1104772] intR[1112735]))
          (1112912 'move' tmp[1112902] call_tmp[1112904])
          (1112918 'move' tmp[1112891] tmp[1112902])
        }
        {
          (1112924 'move' tmp[1112891] 0)
        }
        (1112930 'move' cpIdxLow[1112828] tmp[1112891])
        const-val cpIdxHigh[1112934]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val tmp[1112936]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[1112956]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1112958]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1112960 'move' call_tmp[1112958](1112963 call alignedHigh[1104836] intR[1112735]))
        (1112966 'move' tmp[1112956] call_tmp[1112958])
        (1112972 'move' tmp[1112936] tmp[1112956])
        (1113000 'move' cpIdxHigh[1112934] tmp[1112936])
        ref call_tmp[1113004]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1113006 'move' call_tmp[1113004](1113009 call buffLen[757797] x[1112060]))
        val byteLow[1113012]:int(64)[13] "dead at end of block" "insert auto destroy"
        const-val coerce_tmp[1120893]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (1120897 'move' coerce_tmp[1120893](1120895 'deref' call_tmp[1113004]))
        (1800991 '=' byteLow[1113012] coerce_tmp[1120893])
        (1113014 'noop')
        ref call_tmp[1113018]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1113020 'move' call_tmp[1113018](1113023 call buffLen[757797] x[1112060]))
        const-val call_tmp[1113026]:int(64)[13] "dead at end of block" "maybe param" "temp"
        const-val coerce_tmp[1120901]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1120905 'move' coerce_tmp[1120901](1120903 'deref' call_tmp[1113018]))
        (1113028 'move' call_tmp[1113026](1113031 call -[962137] coerce_tmp[1120901]))
        val byteHigh[1113034]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1113036 'move' byteHigh[1113034] call_tmp[1113026])
        const-val call_tmp[1113044]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1113046 'move' call_tmp[1113044](1113049 call >=[979887] cpIdxHigh[1112934]))
        const-val call_tmp[1113052]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1113054 'move' call_tmp[1113052] call_tmp[1113044])
        if call_tmp[1113052]
        {
          {
            val _indexOfInterest[1113062]:(byteIndex,int(64))[1121144] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1113064]:_ic__indexLen__ref_string[1121216] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[1113066]:_ir__indexLen__ref_string[1121222] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val default_arg_start[1120940]:byteIndex[28170] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
            const-val ret_tmp[1790850]:byteIndex[28170] "temp"
            (1120942 call _indexLen_default_start[1120914] x[1112060] ret_tmp[1790850])
            (1790853 'move' default_arg_start[1120940] ret_tmp[1790850])
            const-val ret_tmp[1786297]:_ir__indexLen__ref_string[1121222] "temp"
            (1113074 call _indexLen[31451] x[1112060] default_arg_start[1120940] ret_tmp[1786297])
            (1786300 'move' call_tmp[1113066] ret_tmp[1786297])
            (1113075 'move' _iterator[1113064](1113078 call _getIterator[1121231] call_tmp[1113066]))
            {
              val ret[1865466]:_ir__indexLen__ref_string[1121222] "dead after last mention" "RVV" "temp"
              const-val call_tmp[1865468]:string[26] "dead at end of block" "maybe param" "temp"
              const-val ret_tmp[1865470]:string[26] "temp"
              ref this[1866128]:_ref(string)[937850] "temp"
              (1866133 'move' this[1866128](1866130 '.v' _iterator[1113064] F0_this[1947738]))
              (1865473 call localize[32886] this[1866128] ret_tmp[1865470])
              (1865476 'move' call_tmp[1865468] ret_tmp[1865470])
              val localThis[1865479]:string[26] "dead at end of block" "insert auto destroy"
              (1865481 'move' localThis[1865479] call_tmp[1865468])
              const-val call_tmp[1865484]:int(64)[13] "dead at end of block" "maybe param" "temp"
              ref start[1866135]:_ref(byteIndex)[948670] "temp"
              (1866140 'move' start[1866135](1866137 '.v' _iterator[1113064] F1_start[1947742]))
              (1865486 'move' call_tmp[1865484](1865489 call _cast[39462] start[1866135]))
              val i[1865491]:int(64)[13] "dead at end of block" "insert auto destroy"
              (1865493 'move' i[1865491] call_tmp[1865484])
              const-val call_tmp[1865496]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1865498 'move' call_tmp[1865496](1865501 call >[437583] call_tmp[1865484] 0))
              const-val call_tmp[1865504]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1865506 'move' call_tmp[1865504] call_tmp[1865496])
              if call_tmp[1865496]
              {
                val tmp[1865511]:bool[10] "dead after last mention" "temp"
                const-val tmp[1865513]:bool[10] "dead after last mention" "maybe param" "temp"
                ref call_tmp[1865515]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
                (1865517 'move' call_tmp[1865515](1865520 call buffLen[757797] localThis[1865479]))
                const-val coerce_tmp[1865522]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1865524 'move' coerce_tmp[1865522](1865526 'deref' call_tmp[1865515]))
                (1865528 'move' tmp[1865513](1865531 call <[437363] i[1865491] coerce_tmp[1865522]))
                val tmp[1865534]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[1865536]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1865538]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1865540 'move' call_tmp[1865538] tmp[1865513])
                (1865543 'move' tmp[1865536] tmp[1865513])
                if tmp[1865513]
                {
                  const-val tmp[1865548]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  ref call_tmp[1865550]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[1865552]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "temp"
                  (1865554 'move' _this_tmp_[1865552](1865557 call buff[757875] localThis[1865479]))
                  val coerce_tmp[1865559]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1865561 'move' coerce_tmp[1865559](1865563 'deref' _this_tmp_[1865552]))
                  (1865565 'move' call_tmp[1865550](1865568 call this[954002] coerce_tmp[1865559] i[1865491]))
                  const-val call_tmp[1865571]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1865573]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1865575 'move' coerce_tmp[1865573](1865577 'deref' call_tmp[1865550]))
                  (1865579 'move' call_tmp[1865571](1865582 call isInitialByte[181528] coerce_tmp[1865573]))
                  const-val call_tmp[1865584]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1865586 'move' call_tmp[1865584](1865589 call ![7494] call_tmp[1865571]))
                  (1865591 'move' tmp[1865548] call_tmp[1865584])
                  (1865594 'move' tmp[1865534] call_tmp[1865584])
                }
                {
                  (1865598 'move' tmp[1865534] 0)
                }
                (1865602 'move' tmp[1865511] tmp[1865534])
                WhileDo[1865605]
                {
                  (1865608 call +=[451226] i[1865491] 1)
                  const-val tmp[1865611]:bool[10] "dead after last mention" "maybe param" "temp"
                  ref call_tmp[1865613]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
                  (1865615 'move' call_tmp[1865613](1865618 call buffLen[757797] localThis[1865479]))
                  const-val coerce_tmp[1865620]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1865622 'move' coerce_tmp[1865620](1865624 'deref' call_tmp[1865613]))
                  (1865626 'move' tmp[1865611](1865629 call <[437363] i[1865491] coerce_tmp[1865620]))
                  val tmp[1865632]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                  const-val tmp[1865634]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[1865636]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1865638 'move' call_tmp[1865636] tmp[1865611])
                  (1865641 'move' tmp[1865634] tmp[1865611])
                  if tmp[1865611]
                  {
                    const-val tmp[1865646]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    ref call_tmp[1865648]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
                    ref _this_tmp_[1865650]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "temp"
                    (1865652 'move' _this_tmp_[1865650](1865655 call buff[757875] localThis[1865479]))
                    val coerce_tmp[1865657]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1865659 'move' coerce_tmp[1865657](1865661 'deref' _this_tmp_[1865650]))
                    (1865663 'move' call_tmp[1865648](1865666 call this[954002] coerce_tmp[1865657] i[1865491]))
                    const-val call_tmp[1865669]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1865671]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1865673 'move' coerce_tmp[1865671](1865675 'deref' call_tmp[1865648]))
                    (1865677 'move' call_tmp[1865669](1865680 call isInitialByte[181528] coerce_tmp[1865671]))
                    const-val call_tmp[1865682]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1865684 'move' call_tmp[1865682](1865687 call ![7494] call_tmp[1865669]))
                    (1865689 'move' tmp[1865646] call_tmp[1865682])
                    (1865692 'move' tmp[1865632] call_tmp[1865682])
                  }
                  {
                    (1865696 'move' tmp[1865632] 0)
                  }
                  (1865700 'move' tmp[1865511] tmp[1865632])
                  tmp[1865511]
                }
              }
              val tmp[1865704]:bool[10] "dead after last mention" "temp"
              ref call_tmp[1865706]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
              (1865708 'move' call_tmp[1865706](1865711 call buffLen[757797] localThis[1865479]))
              const-val call_tmp[1865713]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1865715]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1865717 'move' coerce_tmp[1865715](1865719 'deref' call_tmp[1865706]))
              (1865721 'move' call_tmp[1865713](1865724 call <[437363] i[1865491] coerce_tmp[1865715]))
              (1865727 'move' tmp[1865704] call_tmp[1865713])
              WhileDo[1865730]
              {
                const-val call_tmp[1865732]:int(64)[13] "dead at end of block" "maybe param" "temp"
                (1865734 'move' call_tmp[1865732](1865737 call +[949577] i[1865491]))
                val j[1865739]:int(64)[13] "dead at end of block" "insert auto destroy"
                (1865741 'move' j[1865739] call_tmp[1865732])
                val tmp[1865744]:bool[10] "dead after last mention" "temp"
                const-val tmp[1865746]:bool[10] "dead after last mention" "maybe param" "temp"
                ref call_tmp[1865748]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
                (1865750 'move' call_tmp[1865748](1865753 call buffLen[757797] localThis[1865479]))
                const-val coerce_tmp[1865755]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1865757 'move' coerce_tmp[1865755](1865759 'deref' call_tmp[1865748]))
                (1865761 'move' tmp[1865746](1865764 call <[437363] call_tmp[1865732] coerce_tmp[1865755]))
                val tmp[1865767]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[1865769]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1865771]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1865773 'move' call_tmp[1865771] tmp[1865746])
                (1865776 'move' tmp[1865769] tmp[1865746])
                if tmp[1865746]
                {
                  const-val tmp[1865781]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  ref call_tmp[1865783]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[1865785]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "temp"
                  (1865787 'move' _this_tmp_[1865785](1865790 call buff[757875] localThis[1865479]))
                  val coerce_tmp[1865792]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1865794 'move' coerce_tmp[1865792](1865796 'deref' _this_tmp_[1865785]))
                  (1865798 'move' call_tmp[1865783](1865801 call this[954002] coerce_tmp[1865792] j[1865739]))
                  const-val call_tmp[1865804]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1865806]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1865808 'move' coerce_tmp[1865806](1865810 'deref' call_tmp[1865783]))
                  (1865812 'move' call_tmp[1865804](1865815 call isInitialByte[181528] coerce_tmp[1865806]))
                  const-val call_tmp[1865817]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1865819 'move' call_tmp[1865817](1865822 call ![7494] call_tmp[1865804]))
                  (1865824 'move' tmp[1865781] call_tmp[1865817])
                  (1865827 'move' tmp[1865767] call_tmp[1865817])
                }
                {
                  (1865831 'move' tmp[1865767] 0)
                }
                (1865835 'move' tmp[1865744] tmp[1865767])
                WhileDo[1865838]
                {
                  (1865841 call +=[451226] j[1865739] 1)
                  const-val tmp[1865844]:bool[10] "dead after last mention" "maybe param" "temp"
                  ref call_tmp[1865846]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
                  (1865848 'move' call_tmp[1865846](1865851 call buffLen[757797] localThis[1865479]))
                  const-val coerce_tmp[1865853]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1865855 'move' coerce_tmp[1865853](1865857 'deref' call_tmp[1865846]))
                  (1865859 'move' tmp[1865844](1865862 call <[437363] j[1865739] coerce_tmp[1865853]))
                  val tmp[1865865]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                  const-val tmp[1865867]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[1865869]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1865871 'move' call_tmp[1865869] tmp[1865844])
                  (1865874 'move' tmp[1865867] tmp[1865844])
                  if tmp[1865844]
                  {
                    const-val tmp[1865879]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    ref call_tmp[1865881]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
                    ref _this_tmp_[1865883]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "temp"
                    (1865885 'move' _this_tmp_[1865883](1865888 call buff[757875] localThis[1865479]))
                    val coerce_tmp[1865890]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1865892 'move' coerce_tmp[1865890](1865894 'deref' _this_tmp_[1865883]))
                    (1865896 'move' call_tmp[1865881](1865899 call this[954002] coerce_tmp[1865890] j[1865739]))
                    const-val call_tmp[1865902]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1865904]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1865906 'move' coerce_tmp[1865904](1865908 'deref' call_tmp[1865881]))
                    (1865910 'move' call_tmp[1865902](1865913 call isInitialByte[181528] coerce_tmp[1865904]))
                    const-val call_tmp[1865915]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1865917 'move' call_tmp[1865915](1865920 call ![7494] call_tmp[1865902]))
                    (1865922 'move' tmp[1865879] call_tmp[1865915])
                    (1865925 'move' tmp[1865865] call_tmp[1865915])
                  }
                  {
                    (1865929 'move' tmp[1865865] 0)
                  }
                  (1865933 'move' tmp[1865744] tmp[1865865])
                  tmp[1865744]
                }
                const-val yret[1865936]:(byteIndex,int(64))[1121144] "dead after last mention" "YVV" "temp"
                const-val call_tmp[1865938]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1865940]:byteIndex[28170] "temp"
                (1865943 call _cast[39483] i[1865491] ret_tmp[1865940])
                (1865946 'move' call_tmp[1865938] ret_tmp[1865940])
                const-val call_tmp[1865949]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (1865951 'move' call_tmp[1865949](1865954 call -[440327] j[1865739] i[1865491]))
                const-val call_tmp[1865957]:(byteIndex,int(64))[1121144] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1865959]:(byteIndex,int(64))[1121144] "temp"
                (1865962 call _build_tuple[1121102] call_tmp[1865938] call_tmp[1865949] ret_tmp[1865959])
                (1865966 'move' call_tmp[1865957] ret_tmp[1865959])
                (1865969 'move' yret[1865936] call_tmp[1865957])
                const-val _yieldedIndex[1866023]:(byteIndex,int(64))[1121144] "temp"
                (1866126 'move' _yieldedIndex[1866023] call_tmp[1865957])
                {
                  1
                  ref i[1866026]:_ref(byteIndex)[948670] "index var" "insert auto destroy"
                  (1866028 'move' i[1866026](1866030 '.v' _yieldedIndex[1866023] x0[1121140]))
                  const-val nBytes[1866033]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1866035 'move' nBytes[1866033](1866037 '.v' _yieldedIndex[1866023] x1[1121142]))
                  {
                    const-val call_tmp[1866041]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1866043 'move' call_tmp[1866041](1866046 call ==[435539] cpCount[1112800] cpIdxLow[1112828]))
                    const-val call_tmp[1866049]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1866051 'move' call_tmp[1866049] call_tmp[1866041])
                    if call_tmp[1866049]
                    {
                      const-val call_tmp[1866056]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1866058 'move' call_tmp[1866056](1866061 call _cast[39462] i[1866026]))
                      (1866064 call =[435238] byteLow[1113012] call_tmp[1866056])
                    }
                    const-val call_tmp[1866068]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1866070 'move' call_tmp[1866068](1866073 call ==[435539] cpCount[1112800] cpIdxHigh[1112934]))
                    const-val call_tmp[1866076]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1866078 'move' call_tmp[1866076] call_tmp[1866068])
                    if call_tmp[1866076]
                    {
                      const-val call_tmp[1866083]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1866085 'move' call_tmp[1866083](1866088 call _cast[39462] i[1866026]))
                      const-val call_tmp[1866090]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1866092 'move' call_tmp[1866090](1866095 call +[439547] call_tmp[1866083] nBytes[1866033]))
                      const-val call_tmp[1866098]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1866100 'move' call_tmp[1866098](1866103 call -[962137] call_tmp[1866090]))
                      (1866106 call =[435238] byteHigh[1113034] call_tmp[1866098])
                      (1866120 call chpl__autoDestroy[1494683] call_tmp[1865938])
                      (1866123 call chpl__autoDestroy[1494420] localThis[1865479])
                      break _breakLabel[1113241] _breakLabel[1113241]
                    }
                    (1866113 call +=[451226] cpCount[1112800] 1)
                  }
                  label _continueLabel[1866116]
                }
                (1865986 call chpl__autoDestroy[1494683] call_tmp[1865938])
                (1865989 call =[435238] i[1865491] j[1865739])
                ref call_tmp[1865992]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
                (1865994 'move' call_tmp[1865992](1865997 call buffLen[757797] localThis[1865479]))
                const-val call_tmp[1865999]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1866001]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1866003 'move' coerce_tmp[1866001](1866005 'deref' call_tmp[1865992]))
                (1866007 'move' call_tmp[1865999](1866010 call <[437363] i[1865491] coerce_tmp[1866001]))
                (1866013 'move' tmp[1865704] call_tmp[1865999])
                tmp[1865704]
              }
              (1866017 call chpl__autoDestroy[1494420] localThis[1865479])
              label _end_indexLen[1866019]
            }
            label _breakLabel[1113241]
            (1801010 call _freeIterator[1121404] _iterator[1113064])
            (1801012 call chpl__autoDestroy[1494683] default_arg_start[1120940])
          }
        }
        const-val call_tmp[1113244]:range(int(64),bounded,false)[1026725] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1788445]:range(int(64),bounded,false)[1026725] "temp"
        (1113249 call chpl_build_bounded_range[455048] byteLow[1113012] byteHigh[1113034] ret_tmp[1788445])
        (1788448 'move' call_tmp[1113244] ret_tmp[1788445])
        const-val call_tmp[1113252]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1113254 'move' call_tmp[1113252](1113257 call -[440327] cpIdxHigh[1112934] cpIdxLow[1112828]))
        const-val call_tmp[1113260]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1113262 'move' call_tmp[1113260](1113265 call +[949577] call_tmp[1113252]))
        const-val call_tmp[1113268]:(range(int(64),bounded,false),int(64))[1084835] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1790287]:(range(int(64),bounded,false),int(64))[1084835] "temp"
        (1113273 call _build_tuple[1084793] call_tmp[1113244] call_tmp[1113260] ret_tmp[1790287])
        (1790290 'move' call_tmp[1113268] ret_tmp[1790287])
        (1113276 'move' ret[1112064] call_tmp[1113268])
        (1801015 call chpl__autoDestroy[1567322] call_tmp[1113244])
        (1801018 call chpl__autoDestroy[1567322] intR[1112735])
        gotoReturn _end_getView[1113289] _end_getView[1113289]
      }
    }
    label _end_getView[1113289]
    (1790770 '=' _retArg[1790768] ret[1112064])
    (1790772 return _void[55])
  }
  function getView[1126191](const  ref arg x[1126193]:_ref(string)[937850], const in arg r[1126195]:range(int(64),boundedLow,false)[1087476], ref arg _retArg[1791062]:_ref((range(int(64),bounded,false),int(64)))[1086397]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1126197]:(range(int(64),bounded,false),int(64))[1084835] "dead after last mention" "RVV" "temp"
    val call_tmp[1126207]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1126220]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1126563]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1126614]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1126665]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val tmp[1126690]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val tmp[1126708]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1126710]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1126712 'move' call_tmp[1126710](1126718 call isASCII[31046] x[1126193]))
      (1126719 'move' tmp[1126708] call_tmp[1126710])
      (1126724 'move' tmp[1126690] tmp[1126708])
      const-val call_tmp[1126736]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1126738 'move' call_tmp[1126736] tmp[1126690])
      if call_tmp[1126736]
      {
        const-val call_tmp[1126745]:(range(int(64),bounded,false),int(64))[1084835] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1791068]:(range(int(64),bounded,false),int(64))[1084835] "temp"
        (1126750 call simpleCaseHelper[1126311] r[1126195] x[1126193] ret_tmp[1791068])
        (1791071 'move' call_tmp[1126745] ret_tmp[1791068])
        (1126751 'move' ret[1126197] call_tmp[1126745])
        gotoReturn _end_getView[1127422] _end_getView[1127422]
      }
      {
        const-val call_tmp[1126779]:range(int(64),bounded,false)[1026725] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1786343]:range(int(64),bounded,false)[1026725] "temp"
        (1126784 call indices[32785] x[1126193] ret_tmp[1786343])
        (1786346 'move' call_tmp[1126779] ret_tmp[1786343])
        (1801205 call chpl__autoDestroy[1567322] call_tmp[1126779])
        val call_tmp[1126851]:range(int(64),boundedLow,false)[1087476] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1126860]:range(int(64),boundedLow,false)[1087476] "dead at end of block" "maybe param" "temp"
        const-val _formal_tmp_in_x[1142079]:range(int(64),boundedLow,false)[1087476] "dead at end of block" "expr temp" "no auto destroy" "temp"
        (1142083 'move' _formal_tmp_in_x[1142079] r[1126195])
        const-val ret_tmp[1791086]:range(int(64),boundedLow,false)[1087476] "temp"
        (1142076 call _removed_cast[1127467] _formal_tmp_in_x[1142079] ret_tmp[1791086])
        (1791089 'move' call_tmp[1126860] ret_tmp[1791086])
        const-val intR[1126868]:range(int(64),boundedLow,false)[1087476] "dead at end of block" "const" "insert auto destroy"
        (1126870 'move' intR[1126868] call_tmp[1126860])
        {
          const-val call_tmp[1126883]:range(int(64),bounded,false)[1026725] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1786349]:range(int(64),bounded,false)[1026725] "temp"
          (1126888 call indices[32785] x[1126193] ret_tmp[1786349])
          (1786352 'move' call_tmp[1126883] ret_tmp[1786349])
          const-val call_tmp[1126891]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1126893 'move' call_tmp[1126891](1126899 call boundsCheck[1127532] call_tmp[1126883] intR[1126868]))
          const-val call_tmp[1126901]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1126903 'move' call_tmp[1126901](1126906 call ![7494] call_tmp[1126891]))
          const-val call_tmp[1126908]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1126910 'move' call_tmp[1126908] call_tmp[1126901])
          if call_tmp[1126908]
          {
            const-val call_tmp[1126917]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (1126919 'move' call_tmp[1126917](1126922 call size[32769] x[1126193]))
            (1126926 call halt[1128195] "range " r[1126195] " out of bounds for string with length " call_tmp[1126917])
          }
          (1801209 call chpl__autoDestroy[1567322] call_tmp[1126883])
        }
        val cpCount[1126933]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1126935 'move' cpCount[1126933] 0)
        const-val cpIdxLow[1126961]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val tmp[1126963]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[1126981]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1126983]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1126985 'move' call_tmp[1126983](1126988 call alignedLow[1142103] intR[1126868]))
        const-val call_tmp[1126991]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1126993 'move' call_tmp[1126991] call_tmp[1126983])
        const-val call_tmp[1126999]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1127001 'move' call_tmp[1126999](1127004 call >=[979887] call_tmp[1126991]))
        (1127007 'move' tmp[1126981] call_tmp[1126999])
        (1127012 'move' tmp[1126963] tmp[1126981])
        val tmp[1127024]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
        const-val tmp[1127026]:bool[10] "dead after last mention" "maybe param" "temp"
        (1127028 'move' tmp[1127026] tmp[1126963])
        if tmp[1127026]
        {
          const-val tmp[1127035]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
          const-val call_tmp[1127037]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
          (1127039 'move' call_tmp[1127037](1127042 call alignedLow[1142103] intR[1126868]))
          (1127045 'move' tmp[1127035] call_tmp[1127037])
          (1127051 'move' tmp[1127024] tmp[1127035])
        }
        {
          (1127057 'move' tmp[1127024] 0)
        }
        (1127063 'move' cpIdxLow[1126961] tmp[1127024])
        const-val cpIdxHigh[1127067]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val tmp[1127069]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[1127111]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
        ref call_tmp[1127113]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1127115 'move' call_tmp[1127113](1127118 call buffLen[757797] x[1126193]))
        const-val coerce_tmp[1142176]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1142180 'move' coerce_tmp[1142176](1142178 'deref' call_tmp[1127113]))
        (1127121 'move' tmp[1127111](1127124 call -[962137] coerce_tmp[1142176]))
        (1127127 'move' tmp[1127069] tmp[1127111])
        (1127133 'move' cpIdxHigh[1127067] tmp[1127069])
        ref call_tmp[1127137]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1127139 'move' call_tmp[1127137](1127142 call buffLen[757797] x[1126193]))
        val byteLow[1127145]:int(64)[13] "dead at end of block" "insert auto destroy"
        const-val coerce_tmp[1142186]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (1142190 'move' coerce_tmp[1142186](1142188 'deref' call_tmp[1127137]))
        (1801202 '=' byteLow[1127145] coerce_tmp[1142186])
        (1127147 'noop')
        ref call_tmp[1127151]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1127153 'move' call_tmp[1127151](1127156 call buffLen[757797] x[1126193]))
        const-val call_tmp[1127159]:int(64)[13] "dead at end of block" "maybe param" "temp"
        const-val coerce_tmp[1142194]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1142198 'move' coerce_tmp[1142194](1142196 'deref' call_tmp[1127151]))
        (1127161 'move' call_tmp[1127159](1127164 call -[962137] coerce_tmp[1142194]))
        val byteHigh[1127167]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1127169 'move' byteHigh[1127167] call_tmp[1127159])
        const-val call_tmp[1127177]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1127179 'move' call_tmp[1127177](1127182 call >=[979887] cpIdxHigh[1127067]))
        const-val call_tmp[1127185]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1127187 'move' call_tmp[1127185] call_tmp[1127177])
        if call_tmp[1127185]
        {
          {
            val _indexOfInterest[1127195]:(byteIndex,int(64))[1121144] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1127197]:_ic__indexLen__ref_string[1121216] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[1127199]:_ir__indexLen__ref_string[1121222] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val default_arg_start[1142206]:byteIndex[28170] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
            const-val ret_tmp[1790856]:byteIndex[28170] "temp"
            (1142208 call _indexLen_default_start[1120914] x[1126193] ret_tmp[1790856])
            (1790859 'move' default_arg_start[1142206] ret_tmp[1790856])
            const-val ret_tmp[1786303]:_ir__indexLen__ref_string[1121222] "temp"
            (1127207 call _indexLen[31451] x[1126193] default_arg_start[1142206] ret_tmp[1786303])
            (1786306 'move' call_tmp[1127199] ret_tmp[1786303])
            (1127208 'move' _iterator[1127197](1127211 call _getIterator[1121231] call_tmp[1127199]))
            {
              val ret[1866951]:_ir__indexLen__ref_string[1121222] "dead after last mention" "RVV" "temp"
              const-val call_tmp[1866953]:string[26] "dead at end of block" "maybe param" "temp"
              const-val ret_tmp[1866955]:string[26] "temp"
              ref this[1867623]:_ref(string)[937850] "temp"
              (1867628 'move' this[1867623](1867625 '.v' _iterator[1127197] F0_this[1947738]))
              (1866958 call localize[32886] this[1867623] ret_tmp[1866955])
              (1866961 'move' call_tmp[1866953] ret_tmp[1866955])
              val localThis[1866964]:string[26] "dead at end of block" "insert auto destroy"
              (1866966 'move' localThis[1866964] call_tmp[1866953])
              const-val call_tmp[1866969]:int(64)[13] "dead at end of block" "maybe param" "temp"
              ref start[1867630]:_ref(byteIndex)[948670] "temp"
              (1867635 'move' start[1867630](1867632 '.v' _iterator[1127197] F1_start[1947742]))
              (1866971 'move' call_tmp[1866969](1866974 call _cast[39462] start[1867630]))
              val i[1866976]:int(64)[13] "dead at end of block" "insert auto destroy"
              (1866978 'move' i[1866976] call_tmp[1866969])
              const-val call_tmp[1866981]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1866983 'move' call_tmp[1866981](1866986 call >[437583] call_tmp[1866969] 0))
              const-val call_tmp[1866989]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1866991 'move' call_tmp[1866989] call_tmp[1866981])
              if call_tmp[1866981]
              {
                val tmp[1866996]:bool[10] "dead after last mention" "temp"
                const-val tmp[1866998]:bool[10] "dead after last mention" "maybe param" "temp"
                ref call_tmp[1867000]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
                (1867002 'move' call_tmp[1867000](1867005 call buffLen[757797] localThis[1866964]))
                const-val coerce_tmp[1867007]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1867009 'move' coerce_tmp[1867007](1867011 'deref' call_tmp[1867000]))
                (1867013 'move' tmp[1866998](1867016 call <[437363] i[1866976] coerce_tmp[1867007]))
                val tmp[1867019]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[1867021]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1867023]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1867025 'move' call_tmp[1867023] tmp[1866998])
                (1867028 'move' tmp[1867021] tmp[1866998])
                if tmp[1866998]
                {
                  const-val tmp[1867033]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  ref call_tmp[1867035]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[1867037]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "temp"
                  (1867039 'move' _this_tmp_[1867037](1867042 call buff[757875] localThis[1866964]))
                  val coerce_tmp[1867044]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1867046 'move' coerce_tmp[1867044](1867048 'deref' _this_tmp_[1867037]))
                  (1867050 'move' call_tmp[1867035](1867053 call this[954002] coerce_tmp[1867044] i[1866976]))
                  const-val call_tmp[1867056]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1867058]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1867060 'move' coerce_tmp[1867058](1867062 'deref' call_tmp[1867035]))
                  (1867064 'move' call_tmp[1867056](1867067 call isInitialByte[181528] coerce_tmp[1867058]))
                  const-val call_tmp[1867069]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1867071 'move' call_tmp[1867069](1867074 call ![7494] call_tmp[1867056]))
                  (1867076 'move' tmp[1867033] call_tmp[1867069])
                  (1867079 'move' tmp[1867019] call_tmp[1867069])
                }
                {
                  (1867083 'move' tmp[1867019] 0)
                }
                (1867087 'move' tmp[1866996] tmp[1867019])
                WhileDo[1867090]
                {
                  (1867093 call +=[451226] i[1866976] 1)
                  const-val tmp[1867096]:bool[10] "dead after last mention" "maybe param" "temp"
                  ref call_tmp[1867098]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
                  (1867100 'move' call_tmp[1867098](1867103 call buffLen[757797] localThis[1866964]))
                  const-val coerce_tmp[1867105]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1867107 'move' coerce_tmp[1867105](1867109 'deref' call_tmp[1867098]))
                  (1867111 'move' tmp[1867096](1867114 call <[437363] i[1866976] coerce_tmp[1867105]))
                  val tmp[1867117]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                  const-val tmp[1867119]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[1867121]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1867123 'move' call_tmp[1867121] tmp[1867096])
                  (1867126 'move' tmp[1867119] tmp[1867096])
                  if tmp[1867096]
                  {
                    const-val tmp[1867131]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    ref call_tmp[1867133]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
                    ref _this_tmp_[1867135]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "temp"
                    (1867137 'move' _this_tmp_[1867135](1867140 call buff[757875] localThis[1866964]))
                    val coerce_tmp[1867142]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1867144 'move' coerce_tmp[1867142](1867146 'deref' _this_tmp_[1867135]))
                    (1867148 'move' call_tmp[1867133](1867151 call this[954002] coerce_tmp[1867142] i[1866976]))
                    const-val call_tmp[1867154]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1867156]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1867158 'move' coerce_tmp[1867156](1867160 'deref' call_tmp[1867133]))
                    (1867162 'move' call_tmp[1867154](1867165 call isInitialByte[181528] coerce_tmp[1867156]))
                    const-val call_tmp[1867167]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1867169 'move' call_tmp[1867167](1867172 call ![7494] call_tmp[1867154]))
                    (1867174 'move' tmp[1867131] call_tmp[1867167])
                    (1867177 'move' tmp[1867117] call_tmp[1867167])
                  }
                  {
                    (1867181 'move' tmp[1867117] 0)
                  }
                  (1867185 'move' tmp[1866996] tmp[1867117])
                  tmp[1866996]
                }
              }
              val tmp[1867189]:bool[10] "dead after last mention" "temp"
              ref call_tmp[1867191]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
              (1867193 'move' call_tmp[1867191](1867196 call buffLen[757797] localThis[1866964]))
              const-val call_tmp[1867198]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1867200]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1867202 'move' coerce_tmp[1867200](1867204 'deref' call_tmp[1867191]))
              (1867206 'move' call_tmp[1867198](1867209 call <[437363] i[1866976] coerce_tmp[1867200]))
              (1867212 'move' tmp[1867189] call_tmp[1867198])
              WhileDo[1867215]
              {
                const-val call_tmp[1867217]:int(64)[13] "dead at end of block" "maybe param" "temp"
                (1867219 'move' call_tmp[1867217](1867222 call +[949577] i[1866976]))
                val j[1867224]:int(64)[13] "dead at end of block" "insert auto destroy"
                (1867226 'move' j[1867224] call_tmp[1867217])
                val tmp[1867229]:bool[10] "dead after last mention" "temp"
                const-val tmp[1867231]:bool[10] "dead after last mention" "maybe param" "temp"
                ref call_tmp[1867233]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
                (1867235 'move' call_tmp[1867233](1867238 call buffLen[757797] localThis[1866964]))
                const-val coerce_tmp[1867240]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1867242 'move' coerce_tmp[1867240](1867244 'deref' call_tmp[1867233]))
                (1867246 'move' tmp[1867231](1867249 call <[437363] call_tmp[1867217] coerce_tmp[1867240]))
                val tmp[1867252]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[1867254]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1867256]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1867258 'move' call_tmp[1867256] tmp[1867231])
                (1867261 'move' tmp[1867254] tmp[1867231])
                if tmp[1867231]
                {
                  const-val tmp[1867266]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  ref call_tmp[1867268]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[1867270]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "temp"
                  (1867272 'move' _this_tmp_[1867270](1867275 call buff[757875] localThis[1866964]))
                  val coerce_tmp[1867277]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1867279 'move' coerce_tmp[1867277](1867281 'deref' _this_tmp_[1867270]))
                  (1867283 'move' call_tmp[1867268](1867286 call this[954002] coerce_tmp[1867277] j[1867224]))
                  const-val call_tmp[1867289]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1867291]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1867293 'move' coerce_tmp[1867291](1867295 'deref' call_tmp[1867268]))
                  (1867297 'move' call_tmp[1867289](1867300 call isInitialByte[181528] coerce_tmp[1867291]))
                  const-val call_tmp[1867302]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1867304 'move' call_tmp[1867302](1867307 call ![7494] call_tmp[1867289]))
                  (1867309 'move' tmp[1867266] call_tmp[1867302])
                  (1867312 'move' tmp[1867252] call_tmp[1867302])
                }
                {
                  (1867316 'move' tmp[1867252] 0)
                }
                (1867320 'move' tmp[1867229] tmp[1867252])
                WhileDo[1867323]
                {
                  (1867326 call +=[451226] j[1867224] 1)
                  const-val tmp[1867329]:bool[10] "dead after last mention" "maybe param" "temp"
                  ref call_tmp[1867331]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
                  (1867333 'move' call_tmp[1867331](1867336 call buffLen[757797] localThis[1866964]))
                  const-val coerce_tmp[1867338]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1867340 'move' coerce_tmp[1867338](1867342 'deref' call_tmp[1867331]))
                  (1867344 'move' tmp[1867329](1867347 call <[437363] j[1867224] coerce_tmp[1867338]))
                  val tmp[1867350]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                  const-val tmp[1867352]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[1867354]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1867356 'move' call_tmp[1867354] tmp[1867329])
                  (1867359 'move' tmp[1867352] tmp[1867329])
                  if tmp[1867329]
                  {
                    const-val tmp[1867364]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    ref call_tmp[1867366]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
                    ref _this_tmp_[1867368]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "temp"
                    (1867370 'move' _this_tmp_[1867368](1867373 call buff[757875] localThis[1866964]))
                    val coerce_tmp[1867375]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1867377 'move' coerce_tmp[1867375](1867379 'deref' _this_tmp_[1867368]))
                    (1867381 'move' call_tmp[1867366](1867384 call this[954002] coerce_tmp[1867375] j[1867224]))
                    const-val call_tmp[1867387]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1867389]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1867391 'move' coerce_tmp[1867389](1867393 'deref' call_tmp[1867366]))
                    (1867395 'move' call_tmp[1867387](1867398 call isInitialByte[181528] coerce_tmp[1867389]))
                    const-val call_tmp[1867400]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1867402 'move' call_tmp[1867400](1867405 call ![7494] call_tmp[1867387]))
                    (1867407 'move' tmp[1867364] call_tmp[1867400])
                    (1867410 'move' tmp[1867350] call_tmp[1867400])
                  }
                  {
                    (1867414 'move' tmp[1867350] 0)
                  }
                  (1867418 'move' tmp[1867229] tmp[1867350])
                  tmp[1867229]
                }
                const-val yret[1867421]:(byteIndex,int(64))[1121144] "dead after last mention" "YVV" "temp"
                const-val call_tmp[1867423]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1867425]:byteIndex[28170] "temp"
                (1867428 call _cast[39483] i[1866976] ret_tmp[1867425])
                (1867431 'move' call_tmp[1867423] ret_tmp[1867425])
                const-val call_tmp[1867434]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (1867436 'move' call_tmp[1867434](1867439 call -[440327] j[1867224] i[1866976]))
                const-val call_tmp[1867442]:(byteIndex,int(64))[1121144] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1867444]:(byteIndex,int(64))[1121144] "temp"
                (1867447 call _build_tuple[1121102] call_tmp[1867423] call_tmp[1867434] ret_tmp[1867444])
                (1867451 'move' call_tmp[1867442] ret_tmp[1867444])
                (1867454 'move' yret[1867421] call_tmp[1867442])
                const-val _yieldedIndex[1867508]:(byteIndex,int(64))[1121144] "temp"
                (1867621 'move' _yieldedIndex[1867508] call_tmp[1867442])
                {
                  1
                  ref i[1867511]:_ref(byteIndex)[948670] "index var" "insert auto destroy"
                  (1867513 'move' i[1867511](1867515 '.v' _yieldedIndex[1867508] x0[1121140]))
                  const-val nBytes[1867518]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1867520 'move' nBytes[1867518](1867522 '.v' _yieldedIndex[1867508] x1[1121142]))
                  {
                    const-val call_tmp[1867526]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1867528 'move' call_tmp[1867526](1867531 call ==[435539] cpCount[1126933] cpIdxLow[1126961]))
                    const-val call_tmp[1867534]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1867536 'move' call_tmp[1867534] call_tmp[1867526])
                    if call_tmp[1867534]
                    {
                      const-val call_tmp[1867541]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1867543 'move' call_tmp[1867541](1867546 call _cast[39462] i[1867511]))
                      (1867549 call =[435238] byteLow[1127145] call_tmp[1867541])
                      {
                        (1867608 call chpl__autoDestroy[1494683] call_tmp[1867423])
                        (1867611 call chpl__autoDestroy[1494420] localThis[1866964])
                        break _breakLabel[1127374] _breakLabel[1127374]
                      }
                    }
                    const-val call_tmp[1867556]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1867558 'move' call_tmp[1867556](1867561 call ==[435539] cpCount[1126933] cpIdxHigh[1127067]))
                    const-val call_tmp[1867564]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1867566 'move' call_tmp[1867564] call_tmp[1867556])
                    if call_tmp[1867564]
                    {
                      const-val call_tmp[1867571]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1867573 'move' call_tmp[1867571](1867576 call _cast[39462] i[1867511]))
                      const-val call_tmp[1867578]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1867580 'move' call_tmp[1867578](1867583 call +[439547] call_tmp[1867571] nBytes[1867518]))
                      const-val call_tmp[1867586]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1867588 'move' call_tmp[1867586](1867591 call -[962137] call_tmp[1867578]))
                      (1867594 call =[435238] byteHigh[1127167] call_tmp[1867586])
                      (1867615 call chpl__autoDestroy[1494683] call_tmp[1867423])
                      (1867618 call chpl__autoDestroy[1494420] localThis[1866964])
                      break _breakLabel[1127374] _breakLabel[1127374]
                    }
                    (1867601 call +=[451226] cpCount[1126933] 1)
                  }
                  label _continueLabel[1867604]
                }
                (1867471 call chpl__autoDestroy[1494683] call_tmp[1867423])
                (1867474 call =[435238] i[1866976] j[1867224])
                ref call_tmp[1867477]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
                (1867479 'move' call_tmp[1867477](1867482 call buffLen[757797] localThis[1866964]))
                const-val call_tmp[1867484]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1867486]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1867488 'move' coerce_tmp[1867486](1867490 'deref' call_tmp[1867477]))
                (1867492 'move' call_tmp[1867484](1867495 call <[437363] i[1866976] coerce_tmp[1867486]))
                (1867498 'move' tmp[1867189] call_tmp[1867484])
                tmp[1867189]
              }
              (1867502 call chpl__autoDestroy[1494420] localThis[1866964])
              label _end_indexLen[1867504]
            }
            label _breakLabel[1127374]
            (1801215 call _freeIterator[1121404] _iterator[1127197])
            (1801217 call chpl__autoDestroy[1494683] default_arg_start[1142206])
          }
        }
        const-val call_tmp[1127377]:range(int(64),bounded,false)[1026725] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1788457]:range(int(64),bounded,false)[1026725] "temp"
        (1127382 call chpl_build_bounded_range[455048] byteLow[1127145] byteHigh[1127167] ret_tmp[1788457])
        (1788460 'move' call_tmp[1127377] ret_tmp[1788457])
        const-val call_tmp[1127385]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1127387 'move' call_tmp[1127385](1127390 call -[440327] cpIdxHigh[1127067] cpIdxLow[1126961]))
        const-val call_tmp[1127393]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1127395 'move' call_tmp[1127393](1127398 call +[949577] call_tmp[1127385]))
        const-val call_tmp[1127401]:(range(int(64),bounded,false),int(64))[1084835] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1790299]:(range(int(64),bounded,false),int(64))[1084835] "temp"
        (1127406 call _build_tuple[1084793] call_tmp[1127377] call_tmp[1127393] ret_tmp[1790299])
        (1790302 'move' call_tmp[1127401] ret_tmp[1790299])
        (1127409 'move' ret[1126197] call_tmp[1127401])
        (1801220 call chpl__autoDestroy[1567322] call_tmp[1127377])
        (1801223 call chpl__autoDestroy[1573691] intR[1126868])
        gotoReturn _end_getView[1127422] _end_getView[1127422]
      }
    }
    label _end_getView[1127422]
    (1791064 '=' _retArg[1791062] ret[1126197])
    (1791066 return _void[55])
  }
  function getView[1144352](const  ref arg x[1144354]:_ref(string)[937850], const in arg r[1144356]:range(byteIndex,boundedLow,false)[1143314], ref arg _retArg[1791278]:_ref((range(int(64),bounded,false),int(64)))[1086397]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val ret[1144358]:(range(int(64),bounded,false),int(64))[1084835] "dead after last mention" "RVV" "temp"
    val call_tmp[1144368]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1144381]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1144724]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1144775]:byteIndex[28170] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      const-val call_tmp[1144811]:(range(int(64),bounded,false),int(64))[1084835] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1791284]:(range(int(64),bounded,false),int(64))[1084835] "temp"
      (1144816 call simpleCaseHelper[1144472] r[1144356] x[1144354] ret_tmp[1791284])
      (1791287 'move' call_tmp[1144811] ret_tmp[1791284])
      (1144817 'move' ret[1144358] call_tmp[1144811])
      gotoReturn _end_getView[1145583] _end_getView[1145583]
    }
    label _end_getView[1145583]
    (1791280 '=' _retArg[1791278] ret[1144358])
    (1791282 return _void[55])
  }
  function getView[1185868](const  ref arg x[1185870]:_ref(string)[937850], const in arg r[1185872]:range(byteIndex,boundedHigh,false)[1184830], ref arg _retArg[1791600]:_ref((range(int(64),bounded,false),int(64)))[1086397]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val ret[1185874]:(range(int(64),bounded,false),int(64))[1084835] "dead after last mention" "RVV" "temp"
    val call_tmp[1185884]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1185897]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1186240]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1186291]:byteIndex[28170] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      const-val call_tmp[1186327]:(range(int(64),bounded,false),int(64))[1084835] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1791606]:(range(int(64),bounded,false),int(64))[1084835] "temp"
      (1186332 call simpleCaseHelper[1185988] r[1185872] x[1185870] ret_tmp[1791606])
      (1791609 'move' call_tmp[1186327] ret_tmp[1791606])
      (1186333 'move' ret[1185874] call_tmp[1186327])
      gotoReturn _end_getView[1187099] _end_getView[1187099]
    }
    label _end_getView[1187099]
    (1791602 '=' _retArg[1791600] ret[1185874])
    (1791604 return _void[55])
  }
  function getSlice[1111313](const  ref arg x[1111315]:_ref(string)[937850], const in arg r[1111317]:range(int(64),bounded,false)[1026725], ref arg _retArg[1790754]:_ref(string)[937850]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1111319]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[1111329]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1111340]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1111342 'move' call_tmp[1111340](1111348 call isEmpty[35061] x[1111315]))
    const-val call_tmp[1111349]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1111351 'move' call_tmp[1111349] call_tmp[1111340])
    if call_tmp[1111349]
    {
      const-val ret[1111358]:string[26] "dead at end of block" "insert auto destroy"
      val call_tmp[1111360]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1121868 call init[30760] ret[1111358])
      (1111370 'move' ret[1111319] ret[1111358])
      gotoReturn _end_getSlice[1111986] _end_getSlice[1111986]
    }
    const-val call_tmp[1111379]:(range(int(64),bounded,false),int(64))[1084835] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1790762]:(range(int(64),bounded,false),int(64))[1084835] "temp"
    (1111384 call getView[1112058] x[1111315] r[1111317] ret_tmp[1790762])
    (1790765 'move' call_tmp[1111379] ret_tmp[1790762])
    const-val tmp[1111387]:(range(int(64),bounded,false),int(64))[1084835] "dead at end of block" "const" "insert auto destroy" "temp"
    (1111389 'move' tmp[1111387] call_tmp[1111379])
    1
    ref call_tmp[1111397]:_ref(range(int(64),bounded,false))[1026769] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1111399 'move' call_tmp[1111397](1121699 '.' tmp[1111387] x0[1084831]))
    const-val r2[1111404]:range(int(64),bounded,false)[1026725] "dead at end of block" "const" "insert auto destroy"
    (1111406 'move' r2[1111404] call_tmp[1111397])
    ref call_tmp[1111409]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1111411 'move' call_tmp[1111409](1121705 '.' tmp[1111387] x1[1084833]))
    const-val numChars[1111416]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1121710]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1121714 'move' coerce_tmp[1121710](1121712 'deref' call_tmp[1111409]))
    (1800958 '=' numChars[1111416] coerce_tmp[1121710])
    (1111418 'noop')
    const-val call_tmp[1111422]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1111424 'move' call_tmp[1111422](1111427 call size[1035700] r2[1111404]))
    const-val call_tmp[1111430]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1111432 'move' call_tmp[1111430](1111435 call <=[436923] call_tmp[1111422] 0))
    const-val call_tmp[1111438]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1111440 'move' call_tmp[1111438] call_tmp[1111430])
    if call_tmp[1111438]
    {
      const-val ret[1111447]:string[26] "dead at end of block" "insert auto destroy"
      val call_tmp[1111449]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1121873 call init[30760] ret[1111447])
      (1111459 'move' ret[1111319] ret[1111447])
      (1800967 call chpl__autoDestroy[1567322] r2[1111404])
      (1800970 call chpl__autoDestroy[1573646] tmp[1111387])
      gotoReturn _end_getSlice[1111986] _end_getSlice[1111986]
    }
    val buff[1111468]:c_ptr(uint(8))[937334] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1111470]:c_ptr(uint(8))[937334] "dead after last mention" "maybe param" "temp" "type variable"
    const-val buffSize[1111479]:int(64)[13] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1111481]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    const-val call_tmp[1111490]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1111492 'move' call_tmp[1111490](1111495 call high[1028530] r2[1111404]))
    const-val call_tmp[1111498]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1111500 'move' call_tmp[1111498](1111503 call low[1028322] r2[1111404]))
    const-val call_tmp[1111506]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1111508 'move' call_tmp[1111506](1111511 call -[440327] call_tmp[1111490] call_tmp[1111498]))
    const-val call_tmp[1111514]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1111516 'move' call_tmp[1111514](1111519 call +[949577] call_tmp[1111506]))
    const-val copyLen[1111522]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1111524 'move' copyLen[1111522] call_tmp[1111514])
    ref call_tmp[1111528]:_ref(c_ptr(uint(8)))[937343] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1111530 'move' call_tmp[1111528](1111533 call buff[757875] x[1111315]))
    const-val call_tmp[1111536]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1111538 'move' call_tmp[1111536](1111541 call low[1028322] r2[1111404]))
    ref call_tmp[1111544]:_ref(int(32))[936537] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1111546 'move' call_tmp[1111544](1111549 call locale_id[757953] x[1111315]))
    const-val call_tmp[1111552]:(c_ptr(uint(8)),int(64))[955119] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1121729]:c_ptr(uint(8))[937334] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1121733 'move' coerce_tmp[1121729](1121731 'deref' call_tmp[1111528]))
    const-val coerce_tmp[1121735]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1121739 'move' coerce_tmp[1121735](1121737 'deref' call_tmp[1111544]))
    const-val ret_tmp[1788115]:(c_ptr(uint(8)),int(64))[955119] "temp"
    (1111557 call bufferCopy[172928] coerce_tmp[1121729] call_tmp[1111536] copyLen[1111522] coerce_tmp[1121735] ret_tmp[1788115])
    (1788118 'move' call_tmp[1111552] ret_tmp[1788115])
    const-val tmp[1111566]:(c_ptr(uint(8)),int(64))[955119] "dead at end of block" "insert auto destroy" "temp"
    (1111568 'move' tmp[1111566] call_tmp[1111552])
    1
    ref call_tmp[1111576]:_ref(c_ptr(uint(8)))[937343] "dead at end of block" "maybe param" "temp"
    (1111578 'move' call_tmp[1111576](1121773 '.' tmp[1111566] x0[955115]))
    val copyBuf[1111583]:c_ptr(uint(8))[937334] "dead at end of block" "insert auto destroy"
    val coerce_tmp[1121778]:c_ptr(uint(8))[937334] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1121782 'move' coerce_tmp[1121778](1121780 'deref' call_tmp[1111576]))
    (1800961 '=' copyBuf[1111583] coerce_tmp[1121778])
    (1111585 'noop')
    ref call_tmp[1111588]:_ref(int(64))[936483] "dead at end of block" "maybe param" "temp"
    (1111590 'move' call_tmp[1111588](1121787 '.' tmp[1111566] x1[955117]))
    const-val copySize[1111595]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[1121792]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1121796 'move' coerce_tmp[1121792](1121794 'deref' call_tmp[1111588]))
    (1800964 '=' copySize[1111595] coerce_tmp[1121792])
    (1111597 'noop')
    {
      (1111626 'move' buff[1111468] copyBuf[1111583])
      (1111633 'move' buffSize[1111479] copySize[1111595])
    }
    const-val call_tmp[1111835]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1111837 'move' call_tmp[1111835](1111840 call size[1035700] r2[1111404]))
    const-val buffLen[1111843]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1111845 'move' buffLen[1111843] call_tmp[1111835])
    ref call_tmp[1111852]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
    (1111854 'move' call_tmp[1111852](1111857 call this[954002] buff[1111468] buffLen[1111843]))
    const-val coerce_tmp[1121832]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1121838 'move' coerce_tmp[1121832](1121834 'cast' uint(8)[100] 0))
    (1111860 call =[435259] call_tmp[1111852] coerce_tmp[1121832])
    val call_tmp[1111866]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val numCodepoints[1111889]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1111891 'move' numCodepoints[1111889] numChars[1111416])
      const-val call_tmp[1111903]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1111905 'move' call_tmp[1111903](1111908 call ==[435539] numCodepoints[1111889] -1))
      const-val call_tmp[1111911]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1111913 'move' call_tmp[1111911] call_tmp[1111903])
      if call_tmp[1111911]
      {
        const-val call_tmp[1111920]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1111922 'move' call_tmp[1111920](1111925 call countNumCodepoints[181390] buff[1111468] buffLen[1111843]))
        (1111929 call =[435238] numCodepoints[1111889] call_tmp[1111920])
      }
      const-val call_tmp[1111937]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1786125]:string[26] "temp"
      (1111942 call chpl_createStringWithOwnedBufferNV[30673] buff[1111468] buffLen[1111843] buffSize[1111479] numCodepoints[1111889] ret_tmp[1786125])
      (1786128 'move' call_tmp[1111937] ret_tmp[1786125])
      (1111951 'move' ret[1111319] call_tmp[1111937])
      (1800973 call chpl__autoDestroy[1498061] tmp[1111566])
      (1800976 call chpl__autoDestroy[1567322] r2[1111404])
      (1800979 call chpl__autoDestroy[1573646] tmp[1111387])
      gotoReturn _end_getSlice[1111986] _end_getSlice[1111986]
    }
    (1800982 call chpl__autoDestroy[1498061] tmp[1111566])
    (1800985 call chpl__autoDestroy[1567322] r2[1111404])
    (1800988 call chpl__autoDestroy[1573646] tmp[1111387])
    label _end_getSlice[1111986]
    (1790756 '=' _retArg[1790754] ret[1111319])
    (1790760 return _void[55])
  }
  function getSlice[1123447](const  ref arg x[1123449]:_ref(string)[937850], const in arg r[1123451]:range(byteIndex,bounded,false)[1025703], ref arg _retArg[1790988]:_ref(string)[937850]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1123453]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[1123463]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1123474]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1123476 'move' call_tmp[1123474](1123482 call isEmpty[35061] x[1123449]))
    const-val call_tmp[1123483]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1123485 'move' call_tmp[1123483] call_tmp[1123474])
    if call_tmp[1123483]
    {
      const-val ret[1123492]:string[26] "dead at end of block" "insert auto destroy"
      val call_tmp[1123494]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1124282 call init[30760] ret[1123492])
      (1123504 'move' ret[1123453] ret[1123492])
      gotoReturn _end_getSlice[1124120] _end_getSlice[1124120]
    }
    const-val call_tmp[1123513]:(range(int(64),bounded,false),int(64))[1084835] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1789533]:(range(int(64),bounded,false),int(64))[1084835] "temp"
    (1123518 call getView[1031065] x[1123449] r[1123451] ret_tmp[1789533])
    (1789536 'move' call_tmp[1123513] ret_tmp[1789533])
    const-val tmp[1123521]:(range(int(64),bounded,false),int(64))[1084835] "dead at end of block" "const" "insert auto destroy" "temp"
    (1123523 'move' tmp[1123521] call_tmp[1123513])
    1
    ref call_tmp[1123531]:_ref(range(int(64),bounded,false))[1026769] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1123533 'move' call_tmp[1123531](1124137 '.' tmp[1123521] x0[1084831]))
    const-val r2[1123538]:range(int(64),bounded,false)[1026725] "dead at end of block" "const" "insert auto destroy"
    (1123540 'move' r2[1123538] call_tmp[1123531])
    ref call_tmp[1123543]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1123545 'move' call_tmp[1123543](1124143 '.' tmp[1123521] x1[1084833]))
    const-val numChars[1123550]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1124148]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1124152 'move' coerce_tmp[1124148](1124150 'deref' call_tmp[1123543]))
    (1801074 '=' numChars[1123550] coerce_tmp[1124148])
    (1123552 'noop')
    const-val call_tmp[1123556]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1123558 'move' call_tmp[1123556](1123561 call size[1035700] r2[1123538]))
    const-val call_tmp[1123564]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1123566 'move' call_tmp[1123564](1123569 call <=[436923] call_tmp[1123556] 0))
    const-val call_tmp[1123572]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1123574 'move' call_tmp[1123572] call_tmp[1123564])
    if call_tmp[1123572]
    {
      const-val ret[1123581]:string[26] "dead at end of block" "insert auto destroy"
      val call_tmp[1123583]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1124287 call init[30760] ret[1123581])
      (1123593 'move' ret[1123453] ret[1123581])
      (1801083 call chpl__autoDestroy[1567322] r2[1123538])
      (1801086 call chpl__autoDestroy[1573646] tmp[1123521])
      gotoReturn _end_getSlice[1124120] _end_getSlice[1124120]
    }
    val buff[1123602]:c_ptr(uint(8))[937334] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1123604]:c_ptr(uint(8))[937334] "dead after last mention" "maybe param" "temp" "type variable"
    const-val buffSize[1123613]:int(64)[13] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1123615]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    const-val call_tmp[1123624]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1123626 'move' call_tmp[1123624](1123629 call high[1028530] r2[1123538]))
    const-val call_tmp[1123632]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1123634 'move' call_tmp[1123632](1123637 call low[1028322] r2[1123538]))
    const-val call_tmp[1123640]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1123642 'move' call_tmp[1123640](1123645 call -[440327] call_tmp[1123624] call_tmp[1123632]))
    const-val call_tmp[1123648]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1123650 'move' call_tmp[1123648](1123653 call +[949577] call_tmp[1123640]))
    const-val copyLen[1123656]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1123658 'move' copyLen[1123656] call_tmp[1123648])
    ref call_tmp[1123662]:_ref(c_ptr(uint(8)))[937343] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1123664 'move' call_tmp[1123662](1123667 call buff[757875] x[1123449]))
    const-val call_tmp[1123670]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1123672 'move' call_tmp[1123670](1123675 call low[1028322] r2[1123538]))
    ref call_tmp[1123678]:_ref(int(32))[936537] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1123680 'move' call_tmp[1123678](1123683 call locale_id[757953] x[1123449]))
    const-val call_tmp[1123686]:(c_ptr(uint(8)),int(64))[955119] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1124167]:c_ptr(uint(8))[937334] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1124171 'move' coerce_tmp[1124167](1124169 'deref' call_tmp[1123662]))
    const-val coerce_tmp[1124173]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1124177 'move' coerce_tmp[1124173](1124175 'deref' call_tmp[1123678]))
    const-val ret_tmp[1788121]:(c_ptr(uint(8)),int(64))[955119] "temp"
    (1123691 call bufferCopy[172928] coerce_tmp[1124167] call_tmp[1123670] copyLen[1123656] coerce_tmp[1124173] ret_tmp[1788121])
    (1788124 'move' call_tmp[1123686] ret_tmp[1788121])
    const-val tmp[1123700]:(c_ptr(uint(8)),int(64))[955119] "dead at end of block" "insert auto destroy" "temp"
    (1123702 'move' tmp[1123700] call_tmp[1123686])
    1
    ref call_tmp[1123710]:_ref(c_ptr(uint(8)))[937343] "dead at end of block" "maybe param" "temp"
    (1123712 'move' call_tmp[1123710](1124187 '.' tmp[1123700] x0[955115]))
    val copyBuf[1123717]:c_ptr(uint(8))[937334] "dead at end of block" "insert auto destroy"
    val coerce_tmp[1124192]:c_ptr(uint(8))[937334] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1124196 'move' coerce_tmp[1124192](1124194 'deref' call_tmp[1123710]))
    (1801077 '=' copyBuf[1123717] coerce_tmp[1124192])
    (1123719 'noop')
    ref call_tmp[1123722]:_ref(int(64))[936483] "dead at end of block" "maybe param" "temp"
    (1123724 'move' call_tmp[1123722](1124201 '.' tmp[1123700] x1[955117]))
    const-val copySize[1123729]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[1124206]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1124210 'move' coerce_tmp[1124206](1124208 'deref' call_tmp[1123722]))
    (1801080 '=' copySize[1123729] coerce_tmp[1124206])
    (1123731 'noop')
    {
      (1123760 'move' buff[1123602] copyBuf[1123717])
      (1123767 'move' buffSize[1123613] copySize[1123729])
    }
    const-val call_tmp[1123969]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1123971 'move' call_tmp[1123969](1123974 call size[1035700] r2[1123538]))
    const-val buffLen[1123977]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1123979 'move' buffLen[1123977] call_tmp[1123969])
    ref call_tmp[1123986]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
    (1123988 'move' call_tmp[1123986](1123991 call this[954002] buff[1123602] buffLen[1123977]))
    const-val coerce_tmp[1124246]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1124252 'move' coerce_tmp[1124246](1124248 'cast' uint(8)[100] 0))
    (1123994 call =[435259] call_tmp[1123986] coerce_tmp[1124246])
    val call_tmp[1124000]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val numCodepoints[1124023]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1124025 'move' numCodepoints[1124023] numChars[1123550])
      const-val call_tmp[1124037]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1124039 'move' call_tmp[1124037](1124042 call ==[435539] numCodepoints[1124023] -1))
      const-val call_tmp[1124045]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1124047 'move' call_tmp[1124045] call_tmp[1124037])
      if call_tmp[1124045]
      {
        const-val call_tmp[1124054]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1124056 'move' call_tmp[1124054](1124059 call countNumCodepoints[181390] buff[1123602] buffLen[1123977]))
        (1124063 call =[435238] numCodepoints[1124023] call_tmp[1124054])
      }
      const-val call_tmp[1124071]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1786131]:string[26] "temp"
      (1124076 call chpl_createStringWithOwnedBufferNV[30673] buff[1123602] buffLen[1123977] buffSize[1123613] numCodepoints[1124023] ret_tmp[1786131])
      (1786134 'move' call_tmp[1124071] ret_tmp[1786131])
      (1124085 'move' ret[1123453] call_tmp[1124071])
      (1801089 call chpl__autoDestroy[1498061] tmp[1123700])
      (1801092 call chpl__autoDestroy[1567322] r2[1123538])
      (1801095 call chpl__autoDestroy[1573646] tmp[1123521])
      gotoReturn _end_getSlice[1124120] _end_getSlice[1124120]
    }
    (1801098 call chpl__autoDestroy[1498061] tmp[1123700])
    (1801101 call chpl__autoDestroy[1567322] r2[1123538])
    (1801104 call chpl__autoDestroy[1573646] tmp[1123521])
    label _end_getSlice[1124120]
    (1790990 '=' _retArg[1790988] ret[1123453])
    (1790994 return _void[55])
  }
  function getSlice[1125509](const  ref arg x[1125511]:_ref(string)[937850], const in arg r[1125513]:range(int(64),boundedLow,false)[1087476], ref arg _retArg[1791048]:_ref(string)[937850]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1125515]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[1125525]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1125536]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1125538 'move' call_tmp[1125536](1125544 call isEmpty[35061] x[1125511]))
    const-val call_tmp[1125545]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1125547 'move' call_tmp[1125545] call_tmp[1125536])
    if call_tmp[1125545]
    {
      const-val ret[1125554]:string[26] "dead at end of block" "insert auto destroy"
      val call_tmp[1125556]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1142402 call init[30760] ret[1125554])
      (1125566 'move' ret[1125515] ret[1125554])
      gotoReturn _end_getSlice[1126182] _end_getSlice[1126182]
    }
    const-val call_tmp[1125575]:(range(int(64),bounded,false),int(64))[1084835] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1791056]:(range(int(64),bounded,false),int(64))[1084835] "temp"
    (1125580 call getView[1126191] x[1125511] r[1125513] ret_tmp[1791056])
    (1791059 'move' call_tmp[1125575] ret_tmp[1791056])
    const-val tmp[1125583]:(range(int(64),bounded,false),int(64))[1084835] "dead at end of block" "const" "insert auto destroy" "temp"
    (1125585 'move' tmp[1125583] call_tmp[1125575])
    1
    ref call_tmp[1125593]:_ref(range(int(64),bounded,false))[1026769] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1125595 'move' call_tmp[1125593](1142257 '.' tmp[1125583] x0[1084831]))
    const-val r2[1125600]:range(int(64),bounded,false)[1026725] "dead at end of block" "const" "insert auto destroy"
    (1125602 'move' r2[1125600] call_tmp[1125593])
    ref call_tmp[1125605]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1125607 'move' call_tmp[1125605](1142263 '.' tmp[1125583] x1[1084833]))
    const-val numChars[1125612]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1142268]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1142272 'move' coerce_tmp[1142268](1142270 'deref' call_tmp[1125605]))
    (1801169 '=' numChars[1125612] coerce_tmp[1142268])
    (1125614 'noop')
    const-val call_tmp[1125618]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1125620 'move' call_tmp[1125618](1125623 call size[1035700] r2[1125600]))
    const-val call_tmp[1125626]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1125628 'move' call_tmp[1125626](1125631 call <=[436923] call_tmp[1125618] 0))
    const-val call_tmp[1125634]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1125636 'move' call_tmp[1125634] call_tmp[1125626])
    if call_tmp[1125634]
    {
      const-val ret[1125643]:string[26] "dead at end of block" "insert auto destroy"
      val call_tmp[1125645]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1142407 call init[30760] ret[1125643])
      (1125655 'move' ret[1125515] ret[1125643])
      (1801178 call chpl__autoDestroy[1567322] r2[1125600])
      (1801181 call chpl__autoDestroy[1573646] tmp[1125583])
      gotoReturn _end_getSlice[1126182] _end_getSlice[1126182]
    }
    val buff[1125664]:c_ptr(uint(8))[937334] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1125666]:c_ptr(uint(8))[937334] "dead after last mention" "maybe param" "temp" "type variable"
    const-val buffSize[1125675]:int(64)[13] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1125677]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    const-val call_tmp[1125686]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1125688 'move' call_tmp[1125686](1125691 call high[1028530] r2[1125600]))
    const-val call_tmp[1125694]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1125696 'move' call_tmp[1125694](1125699 call low[1028322] r2[1125600]))
    const-val call_tmp[1125702]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1125704 'move' call_tmp[1125702](1125707 call -[440327] call_tmp[1125686] call_tmp[1125694]))
    const-val call_tmp[1125710]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1125712 'move' call_tmp[1125710](1125715 call +[949577] call_tmp[1125702]))
    const-val copyLen[1125718]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1125720 'move' copyLen[1125718] call_tmp[1125710])
    ref call_tmp[1125724]:_ref(c_ptr(uint(8)))[937343] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1125726 'move' call_tmp[1125724](1125729 call buff[757875] x[1125511]))
    const-val call_tmp[1125732]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1125734 'move' call_tmp[1125732](1125737 call low[1028322] r2[1125600]))
    ref call_tmp[1125740]:_ref(int(32))[936537] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1125742 'move' call_tmp[1125740](1125745 call locale_id[757953] x[1125511]))
    const-val call_tmp[1125748]:(c_ptr(uint(8)),int(64))[955119] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1142287]:c_ptr(uint(8))[937334] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1142291 'move' coerce_tmp[1142287](1142289 'deref' call_tmp[1125724]))
    const-val coerce_tmp[1142293]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1142297 'move' coerce_tmp[1142293](1142295 'deref' call_tmp[1125740]))
    const-val ret_tmp[1788127]:(c_ptr(uint(8)),int(64))[955119] "temp"
    (1125753 call bufferCopy[172928] coerce_tmp[1142287] call_tmp[1125732] copyLen[1125718] coerce_tmp[1142293] ret_tmp[1788127])
    (1788130 'move' call_tmp[1125748] ret_tmp[1788127])
    const-val tmp[1125762]:(c_ptr(uint(8)),int(64))[955119] "dead at end of block" "insert auto destroy" "temp"
    (1125764 'move' tmp[1125762] call_tmp[1125748])
    1
    ref call_tmp[1125772]:_ref(c_ptr(uint(8)))[937343] "dead at end of block" "maybe param" "temp"
    (1125774 'move' call_tmp[1125772](1142307 '.' tmp[1125762] x0[955115]))
    val copyBuf[1125779]:c_ptr(uint(8))[937334] "dead at end of block" "insert auto destroy"
    val coerce_tmp[1142312]:c_ptr(uint(8))[937334] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1142316 'move' coerce_tmp[1142312](1142314 'deref' call_tmp[1125772]))
    (1801172 '=' copyBuf[1125779] coerce_tmp[1142312])
    (1125781 'noop')
    ref call_tmp[1125784]:_ref(int(64))[936483] "dead at end of block" "maybe param" "temp"
    (1125786 'move' call_tmp[1125784](1142321 '.' tmp[1125762] x1[955117]))
    const-val copySize[1125791]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[1142326]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1142330 'move' coerce_tmp[1142326](1142328 'deref' call_tmp[1125784]))
    (1801175 '=' copySize[1125791] coerce_tmp[1142326])
    (1125793 'noop')
    {
      (1125822 'move' buff[1125664] copyBuf[1125779])
      (1125829 'move' buffSize[1125675] copySize[1125791])
    }
    const-val call_tmp[1126031]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1126033 'move' call_tmp[1126031](1126036 call size[1035700] r2[1125600]))
    const-val buffLen[1126039]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1126041 'move' buffLen[1126039] call_tmp[1126031])
    ref call_tmp[1126048]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
    (1126050 'move' call_tmp[1126048](1126053 call this[954002] buff[1125664] buffLen[1126039]))
    const-val coerce_tmp[1142366]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1142372 'move' coerce_tmp[1142366](1142368 'cast' uint(8)[100] 0))
    (1126056 call =[435259] call_tmp[1126048] coerce_tmp[1142366])
    val call_tmp[1126062]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val numCodepoints[1126085]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1126087 'move' numCodepoints[1126085] numChars[1125612])
      const-val call_tmp[1126099]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1126101 'move' call_tmp[1126099](1126104 call ==[435539] numCodepoints[1126085] -1))
      const-val call_tmp[1126107]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1126109 'move' call_tmp[1126107] call_tmp[1126099])
      if call_tmp[1126107]
      {
        const-val call_tmp[1126116]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1126118 'move' call_tmp[1126116](1126121 call countNumCodepoints[181390] buff[1125664] buffLen[1126039]))
        (1126125 call =[435238] numCodepoints[1126085] call_tmp[1126116])
      }
      const-val call_tmp[1126133]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1786137]:string[26] "temp"
      (1126138 call chpl_createStringWithOwnedBufferNV[30673] buff[1125664] buffLen[1126039] buffSize[1125675] numCodepoints[1126085] ret_tmp[1786137])
      (1786140 'move' call_tmp[1126133] ret_tmp[1786137])
      (1126147 'move' ret[1125515] call_tmp[1126133])
      (1801184 call chpl__autoDestroy[1498061] tmp[1125762])
      (1801187 call chpl__autoDestroy[1567322] r2[1125600])
      (1801190 call chpl__autoDestroy[1573646] tmp[1125583])
      gotoReturn _end_getSlice[1126182] _end_getSlice[1126182]
    }
    (1801193 call chpl__autoDestroy[1498061] tmp[1125762])
    (1801196 call chpl__autoDestroy[1567322] r2[1125600])
    (1801199 call chpl__autoDestroy[1573646] tmp[1125583])
    label _end_getSlice[1126182]
    (1791050 '=' _retArg[1791048] ret[1125515])
    (1791054 return _void[55])
  }
  function getSlice[1143670](const  ref arg x[1143672]:_ref(string)[937850], const in arg r[1143674]:range(byteIndex,boundedLow,false)[1143314], ref arg _retArg[1791252]:_ref(string)[937850]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1143676]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[1143686]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1143697]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1143699 'move' call_tmp[1143697](1143705 call isEmpty[35061] x[1143672]))
    const-val call_tmp[1143706]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1143708 'move' call_tmp[1143706] call_tmp[1143697])
    if call_tmp[1143706]
    {
      const-val ret[1143715]:string[26] "dead at end of block" "insert auto destroy"
      val call_tmp[1143717]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1156357 call init[30760] ret[1143715])
      (1143727 'move' ret[1143676] ret[1143715])
      gotoReturn _end_getSlice[1144343] _end_getSlice[1144343]
    }
    const-val call_tmp[1143736]:(range(int(64),bounded,false),int(64))[1084835] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1791260]:(range(int(64),bounded,false),int(64))[1084835] "temp"
    (1143741 call getView[1144352] x[1143672] r[1143674] ret_tmp[1791260])
    (1791263 'move' call_tmp[1143736] ret_tmp[1791260])
    const-val tmp[1143744]:(range(int(64),bounded,false),int(64))[1084835] "dead at end of block" "const" "insert auto destroy" "temp"
    (1143746 'move' tmp[1143744] call_tmp[1143736])
    1
    ref call_tmp[1143754]:_ref(range(int(64),bounded,false))[1026769] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1143756 'move' call_tmp[1143754](1156212 '.' tmp[1143744] x0[1084831]))
    const-val r2[1143761]:range(int(64),bounded,false)[1026725] "dead at end of block" "const" "insert auto destroy"
    (1143763 'move' r2[1143761] call_tmp[1143754])
    ref call_tmp[1143766]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1143768 'move' call_tmp[1143766](1156218 '.' tmp[1143744] x1[1084833]))
    const-val numChars[1143773]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1156223]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1156227 'move' coerce_tmp[1156223](1156225 'deref' call_tmp[1143766]))
    (1801309 '=' numChars[1143773] coerce_tmp[1156223])
    (1143775 'noop')
    const-val call_tmp[1143779]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1143781 'move' call_tmp[1143779](1143784 call size[1035700] r2[1143761]))
    const-val call_tmp[1143787]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1143789 'move' call_tmp[1143787](1143792 call <=[436923] call_tmp[1143779] 0))
    const-val call_tmp[1143795]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1143797 'move' call_tmp[1143795] call_tmp[1143787])
    if call_tmp[1143795]
    {
      const-val ret[1143804]:string[26] "dead at end of block" "insert auto destroy"
      val call_tmp[1143806]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1156362 call init[30760] ret[1143804])
      (1143816 'move' ret[1143676] ret[1143804])
      (1801318 call chpl__autoDestroy[1567322] r2[1143761])
      (1801321 call chpl__autoDestroy[1573646] tmp[1143744])
      gotoReturn _end_getSlice[1144343] _end_getSlice[1144343]
    }
    val buff[1143825]:c_ptr(uint(8))[937334] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1143827]:c_ptr(uint(8))[937334] "dead after last mention" "maybe param" "temp" "type variable"
    const-val buffSize[1143836]:int(64)[13] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1143838]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    const-val call_tmp[1143847]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1143849 'move' call_tmp[1143847](1143852 call high[1028530] r2[1143761]))
    const-val call_tmp[1143855]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1143857 'move' call_tmp[1143855](1143860 call low[1028322] r2[1143761]))
    const-val call_tmp[1143863]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1143865 'move' call_tmp[1143863](1143868 call -[440327] call_tmp[1143847] call_tmp[1143855]))
    const-val call_tmp[1143871]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1143873 'move' call_tmp[1143871](1143876 call +[949577] call_tmp[1143863]))
    const-val copyLen[1143879]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1143881 'move' copyLen[1143879] call_tmp[1143871])
    ref call_tmp[1143885]:_ref(c_ptr(uint(8)))[937343] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1143887 'move' call_tmp[1143885](1143890 call buff[757875] x[1143672]))
    const-val call_tmp[1143893]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1143895 'move' call_tmp[1143893](1143898 call low[1028322] r2[1143761]))
    ref call_tmp[1143901]:_ref(int(32))[936537] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1143903 'move' call_tmp[1143901](1143906 call locale_id[757953] x[1143672]))
    const-val call_tmp[1143909]:(c_ptr(uint(8)),int(64))[955119] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1156242]:c_ptr(uint(8))[937334] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1156246 'move' coerce_tmp[1156242](1156244 'deref' call_tmp[1143885]))
    const-val coerce_tmp[1156248]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1156252 'move' coerce_tmp[1156248](1156250 'deref' call_tmp[1143901]))
    const-val ret_tmp[1788133]:(c_ptr(uint(8)),int(64))[955119] "temp"
    (1143914 call bufferCopy[172928] coerce_tmp[1156242] call_tmp[1143893] copyLen[1143879] coerce_tmp[1156248] ret_tmp[1788133])
    (1788136 'move' call_tmp[1143909] ret_tmp[1788133])
    const-val tmp[1143923]:(c_ptr(uint(8)),int(64))[955119] "dead at end of block" "insert auto destroy" "temp"
    (1143925 'move' tmp[1143923] call_tmp[1143909])
    1
    ref call_tmp[1143933]:_ref(c_ptr(uint(8)))[937343] "dead at end of block" "maybe param" "temp"
    (1143935 'move' call_tmp[1143933](1156262 '.' tmp[1143923] x0[955115]))
    val copyBuf[1143940]:c_ptr(uint(8))[937334] "dead at end of block" "insert auto destroy"
    val coerce_tmp[1156267]:c_ptr(uint(8))[937334] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1156271 'move' coerce_tmp[1156267](1156269 'deref' call_tmp[1143933]))
    (1801312 '=' copyBuf[1143940] coerce_tmp[1156267])
    (1143942 'noop')
    ref call_tmp[1143945]:_ref(int(64))[936483] "dead at end of block" "maybe param" "temp"
    (1143947 'move' call_tmp[1143945](1156276 '.' tmp[1143923] x1[955117]))
    const-val copySize[1143952]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[1156281]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1156285 'move' coerce_tmp[1156281](1156283 'deref' call_tmp[1143945]))
    (1801315 '=' copySize[1143952] coerce_tmp[1156281])
    (1143954 'noop')
    {
      (1143983 'move' buff[1143825] copyBuf[1143940])
      (1143990 'move' buffSize[1143836] copySize[1143952])
    }
    const-val call_tmp[1144192]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1144194 'move' call_tmp[1144192](1144197 call size[1035700] r2[1143761]))
    const-val buffLen[1144200]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1144202 'move' buffLen[1144200] call_tmp[1144192])
    ref call_tmp[1144209]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
    (1144211 'move' call_tmp[1144209](1144214 call this[954002] buff[1143825] buffLen[1144200]))
    const-val coerce_tmp[1156321]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1156327 'move' coerce_tmp[1156321](1156323 'cast' uint(8)[100] 0))
    (1144217 call =[435259] call_tmp[1144209] coerce_tmp[1156321])
    val call_tmp[1144223]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val numCodepoints[1144246]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1144248 'move' numCodepoints[1144246] numChars[1143773])
      const-val call_tmp[1144260]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1144262 'move' call_tmp[1144260](1144265 call ==[435539] numCodepoints[1144246] -1))
      const-val call_tmp[1144268]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1144270 'move' call_tmp[1144268] call_tmp[1144260])
      if call_tmp[1144268]
      {
        const-val call_tmp[1144277]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1144279 'move' call_tmp[1144277](1144282 call countNumCodepoints[181390] buff[1143825] buffLen[1144200]))
        (1144286 call =[435238] numCodepoints[1144246] call_tmp[1144277])
      }
      const-val call_tmp[1144294]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1786143]:string[26] "temp"
      (1144299 call chpl_createStringWithOwnedBufferNV[30673] buff[1143825] buffLen[1144200] buffSize[1143836] numCodepoints[1144246] ret_tmp[1786143])
      (1786146 'move' call_tmp[1144294] ret_tmp[1786143])
      (1144308 'move' ret[1143676] call_tmp[1144294])
      (1801324 call chpl__autoDestroy[1498061] tmp[1143923])
      (1801327 call chpl__autoDestroy[1567322] r2[1143761])
      (1801330 call chpl__autoDestroy[1573646] tmp[1143744])
      gotoReturn _end_getSlice[1144343] _end_getSlice[1144343]
    }
    (1801333 call chpl__autoDestroy[1498061] tmp[1143923])
    (1801336 call chpl__autoDestroy[1567322] r2[1143761])
    (1801339 call chpl__autoDestroy[1573646] tmp[1143744])
    label _end_getSlice[1144343]
    (1791254 '=' _retArg[1791252] ret[1143676])
    (1791258 return _void[55])
  }
  function getSlice[1185186](const  ref arg x[1185188]:_ref(string)[937850], const in arg r[1185190]:range(byteIndex,boundedHigh,false)[1184830], ref arg _retArg[1791586]:_ref(string)[937850]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1185192]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[1185202]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1185213]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1185215 'move' call_tmp[1185213](1185221 call isEmpty[35061] x[1185188]))
    const-val call_tmp[1185222]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1185224 'move' call_tmp[1185222] call_tmp[1185213])
    if call_tmp[1185222]
    {
      const-val ret[1185231]:string[26] "dead at end of block" "insert auto destroy"
      val call_tmp[1185233]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1203660 call init[30760] ret[1185231])
      (1185243 'move' ret[1185192] ret[1185231])
      gotoReturn _end_getSlice[1185859] _end_getSlice[1185859]
    }
    const-val call_tmp[1185252]:(range(int(64),bounded,false),int(64))[1084835] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1791594]:(range(int(64),bounded,false),int(64))[1084835] "temp"
    (1185257 call getView[1185868] x[1185188] r[1185190] ret_tmp[1791594])
    (1791597 'move' call_tmp[1185252] ret_tmp[1791594])
    const-val tmp[1185260]:(range(int(64),bounded,false),int(64))[1084835] "dead at end of block" "const" "insert auto destroy" "temp"
    (1185262 'move' tmp[1185260] call_tmp[1185252])
    1
    ref call_tmp[1185270]:_ref(range(int(64),bounded,false))[1026769] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1185272 'move' call_tmp[1185270](1203515 '.' tmp[1185260] x0[1084831]))
    const-val r2[1185277]:range(int(64),bounded,false)[1026725] "dead at end of block" "const" "insert auto destroy"
    (1185279 'move' r2[1185277] call_tmp[1185270])
    ref call_tmp[1185282]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1185284 'move' call_tmp[1185282](1203521 '.' tmp[1185260] x1[1084833]))
    const-val numChars[1185289]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1203526]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1203530 'move' coerce_tmp[1203526](1203528 'deref' call_tmp[1185282]))
    (1803578 '=' numChars[1185289] coerce_tmp[1203526])
    (1185291 'noop')
    const-val call_tmp[1185295]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1185297 'move' call_tmp[1185295](1185300 call size[1035700] r2[1185277]))
    const-val call_tmp[1185303]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1185305 'move' call_tmp[1185303](1185308 call <=[436923] call_tmp[1185295] 0))
    const-val call_tmp[1185311]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1185313 'move' call_tmp[1185311] call_tmp[1185303])
    if call_tmp[1185311]
    {
      const-val ret[1185320]:string[26] "dead at end of block" "insert auto destroy"
      val call_tmp[1185322]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1203665 call init[30760] ret[1185320])
      (1185332 'move' ret[1185192] ret[1185320])
      (1803587 call chpl__autoDestroy[1567322] r2[1185277])
      (1803590 call chpl__autoDestroy[1573646] tmp[1185260])
      gotoReturn _end_getSlice[1185859] _end_getSlice[1185859]
    }
    val buff[1185341]:c_ptr(uint(8))[937334] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1185343]:c_ptr(uint(8))[937334] "dead after last mention" "maybe param" "temp" "type variable"
    const-val buffSize[1185352]:int(64)[13] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1185354]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    const-val call_tmp[1185363]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1185365 'move' call_tmp[1185363](1185368 call high[1028530] r2[1185277]))
    const-val call_tmp[1185371]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1185373 'move' call_tmp[1185371](1185376 call low[1028322] r2[1185277]))
    const-val call_tmp[1185379]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1185381 'move' call_tmp[1185379](1185384 call -[440327] call_tmp[1185363] call_tmp[1185371]))
    const-val call_tmp[1185387]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1185389 'move' call_tmp[1185387](1185392 call +[949577] call_tmp[1185379]))
    const-val copyLen[1185395]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1185397 'move' copyLen[1185395] call_tmp[1185387])
    ref call_tmp[1185401]:_ref(c_ptr(uint(8)))[937343] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1185403 'move' call_tmp[1185401](1185406 call buff[757875] x[1185188]))
    const-val call_tmp[1185409]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1185411 'move' call_tmp[1185409](1185414 call low[1028322] r2[1185277]))
    ref call_tmp[1185417]:_ref(int(32))[936537] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1185419 'move' call_tmp[1185417](1185422 call locale_id[757953] x[1185188]))
    const-val call_tmp[1185425]:(c_ptr(uint(8)),int(64))[955119] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1203545]:c_ptr(uint(8))[937334] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1203549 'move' coerce_tmp[1203545](1203547 'deref' call_tmp[1185401]))
    const-val coerce_tmp[1203551]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1203555 'move' coerce_tmp[1203551](1203553 'deref' call_tmp[1185417]))
    const-val ret_tmp[1788139]:(c_ptr(uint(8)),int(64))[955119] "temp"
    (1185430 call bufferCopy[172928] coerce_tmp[1203545] call_tmp[1185409] copyLen[1185395] coerce_tmp[1203551] ret_tmp[1788139])
    (1788142 'move' call_tmp[1185425] ret_tmp[1788139])
    const-val tmp[1185439]:(c_ptr(uint(8)),int(64))[955119] "dead at end of block" "insert auto destroy" "temp"
    (1185441 'move' tmp[1185439] call_tmp[1185425])
    1
    ref call_tmp[1185449]:_ref(c_ptr(uint(8)))[937343] "dead at end of block" "maybe param" "temp"
    (1185451 'move' call_tmp[1185449](1203565 '.' tmp[1185439] x0[955115]))
    val copyBuf[1185456]:c_ptr(uint(8))[937334] "dead at end of block" "insert auto destroy"
    val coerce_tmp[1203570]:c_ptr(uint(8))[937334] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1203574 'move' coerce_tmp[1203570](1203572 'deref' call_tmp[1185449]))
    (1803581 '=' copyBuf[1185456] coerce_tmp[1203570])
    (1185458 'noop')
    ref call_tmp[1185461]:_ref(int(64))[936483] "dead at end of block" "maybe param" "temp"
    (1185463 'move' call_tmp[1185461](1203579 '.' tmp[1185439] x1[955117]))
    const-val copySize[1185468]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[1203584]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1203588 'move' coerce_tmp[1203584](1203586 'deref' call_tmp[1185461]))
    (1803584 '=' copySize[1185468] coerce_tmp[1203584])
    (1185470 'noop')
    {
      (1185499 'move' buff[1185341] copyBuf[1185456])
      (1185506 'move' buffSize[1185352] copySize[1185468])
    }
    const-val call_tmp[1185708]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1185710 'move' call_tmp[1185708](1185713 call size[1035700] r2[1185277]))
    const-val buffLen[1185716]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1185718 'move' buffLen[1185716] call_tmp[1185708])
    ref call_tmp[1185725]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
    (1185727 'move' call_tmp[1185725](1185730 call this[954002] buff[1185341] buffLen[1185716]))
    const-val coerce_tmp[1203624]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1203630 'move' coerce_tmp[1203624](1203626 'cast' uint(8)[100] 0))
    (1185733 call =[435259] call_tmp[1185725] coerce_tmp[1203624])
    val call_tmp[1185739]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val numCodepoints[1185762]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1185764 'move' numCodepoints[1185762] numChars[1185289])
      const-val call_tmp[1185776]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1185778 'move' call_tmp[1185776](1185781 call ==[435539] numCodepoints[1185762] -1))
      const-val call_tmp[1185784]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1185786 'move' call_tmp[1185784] call_tmp[1185776])
      if call_tmp[1185784]
      {
        const-val call_tmp[1185793]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1185795 'move' call_tmp[1185793](1185798 call countNumCodepoints[181390] buff[1185341] buffLen[1185716]))
        (1185802 call =[435238] numCodepoints[1185762] call_tmp[1185793])
      }
      const-val call_tmp[1185810]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1786149]:string[26] "temp"
      (1185815 call chpl_createStringWithOwnedBufferNV[30673] buff[1185341] buffLen[1185716] buffSize[1185352] numCodepoints[1185762] ret_tmp[1786149])
      (1786152 'move' call_tmp[1185810] ret_tmp[1786149])
      (1185824 'move' ret[1185192] call_tmp[1185810])
      (1803593 call chpl__autoDestroy[1498061] tmp[1185439])
      (1803596 call chpl__autoDestroy[1567322] r2[1185277])
      (1803599 call chpl__autoDestroy[1573646] tmp[1185260])
      gotoReturn _end_getSlice[1185859] _end_getSlice[1185859]
    }
    (1803602 call chpl__autoDestroy[1498061] tmp[1185439])
    (1803605 call chpl__autoDestroy[1567322] r2[1185277])
    (1803608 call chpl__autoDestroy[1573646] tmp[1185260])
    label _end_getSlice[1185859]
    (1791588 '=' _retArg[1791586] ret[1185192])
    (1791592 return _void[55])
  }
  function doReplace[1180925](const  ref arg x[1180927]:_ref(string)[937850], const  ref arg needle[1180932]:string[26], const  ref arg replacement[1180937]:string[26], const in arg count[1180943]:int(64)[13], ref arg _retArg[1791514]:_ref(string)[937850]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1180948]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[1180956]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1180967]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val _idxt[1180973]:byteIndex[28170] "dead at end of block" "insert auto destroy" "type variable"
    val call_tmp[1180978]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1180989]:string[26] "dead after last mention" "maybe param" "temp" "type variable"
    val result[1180995]:string[26] "dead at end of block" "insert auto destroy"
    (1180997 call init=[30771] result[1180995] x[1180927])
    val found[1181002]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1181004 'move' found[1181002] 0)
    val startIdx[1181009]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (1181011 call init=[28145] startIdx[1181009] 0)
    const-val call_tmp[1181016]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1786475]:string[26] "temp"
    (1181024 call localize[32886] needle[1180932] ret_tmp[1786475])
    (1786478 'move' call_tmp[1181016] ret_tmp[1786475])
    val call_tmp[1181025]:string[26] "dead after last mention" "maybe param" "temp" "type variable"
    const-val localNeedle[1181031]:string[26] "dead at end of block" "const" "insert auto destroy"
    (1181033 'move' localNeedle[1181031] call_tmp[1181016])
    const-val call_tmp[1181038]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1786481]:string[26] "temp"
    (1181046 call localize[32886] replacement[1180937] ret_tmp[1786481])
    (1786484 'move' call_tmp[1181038] ret_tmp[1786481])
    val call_tmp[1181047]:string[26] "dead after last mention" "maybe param" "temp" "type variable"
    const-val localReplacement[1181053]:string[26] "dead at end of block" "const" "insert auto destroy"
    (1181055 'move' localReplacement[1181053] call_tmp[1181038])
    {
      val tmp[1181062]:bool[10] "dead after last mention" "temp"
      const-val tmp[1181064]:bool[10] "dead after last mention" "maybe param" "temp"
      (1181066 'move' tmp[1181064](1181069 call <[948309] count[1180943]))
      val tmp[1181085]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1181087]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1181089]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1181091 'move' call_tmp[1181089] tmp[1181064])
      (1181096 'move' tmp[1181087] call_tmp[1181089])
      if tmp[1181087]
      {
        (1181103 'move' tmp[1181085] 1)
      }
      {
        const-val tmp[1181109]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1181111]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1181113 'move' call_tmp[1181111](1181116 call <[437363] found[1181002] count[1180943]))
        (1181119 'move' tmp[1181109] call_tmp[1181111])
        (1181124 'move' tmp[1181085] tmp[1181109])
      }
      (1181130 'move' tmp[1181062] tmp[1181085])
      WhileDo[1181135] hazard
      {
        {
          const-val call_tmp[1181138]:range(byteIndex,boundedLow,false)[1143314] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1791174]:range(byteIndex,boundedLow,false)[1143314] "temp"
          (1181143 call chpl_build_low_bounded_range[1142621] startIdx[1181009] ret_tmp[1791174])
          (1791177 'move' call_tmp[1181138] ret_tmp[1791174])
          const-val call_tmp[1181145]:byteIndex[28170] "dead at end of block" "maybe param" "temp"
          const-val ret_tmp[1791520]:byteIndex[28170] "temp"
          (1181153 call find[1181557] result[1180995] localNeedle[1181031] call_tmp[1181138] ret_tmp[1791520])
          (1791523 'move' call_tmp[1181145] ret_tmp[1791520])
          const-val idx[1181156]:byteIndex[28170] "dead at end of block" "const" "insert auto destroy"
          (1181158 'move' idx[1181156] call_tmp[1181145])
          const-val call_tmp[1181172]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1181174 'move' call_tmp[1181172](1181177 call ==[29466] idx[1181156] -1))
          const-val call_tmp[1181180]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1181182 'move' call_tmp[1181180] call_tmp[1181172])
          if call_tmp[1181180]
          {
            (1803463 call chpl__autoDestroy[1494683] idx[1181156])
            (1803466 call chpl__autoDestroy[1575773] call_tmp[1181138])
            break _breakLabel[1181375] _breakLabel[1181375]
          }
          (1181193 call +=[451226] found[1181002] 1)
          const-val call_tmp[1181198]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1775175]:byteIndex[28170] "temp"
          (1181203 call -[28854] idx[1181156] 1 ret_tmp[1775175])
          (1775178 'move' call_tmp[1181198] ret_tmp[1775175])
          const-val call_tmp[1181206]:range(byteIndex,boundedHigh,false)[1184830] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1791532]:range(byteIndex,boundedHigh,false)[1184830] "temp"
          (1181211 call chpl_build_high_bounded_range[1184137] call_tmp[1181198] ret_tmp[1791532])
          (1791535 'move' call_tmp[1181206] ret_tmp[1791532])
          const-val call_tmp[1181213]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1791568]:string[26] "temp"
          (1181218 call this[1185150] result[1180995] call_tmp[1181206] ret_tmp[1791568])
          (1791571 'move' call_tmp[1181213] ret_tmp[1791568])
          const-val call_tmp[1181220]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1787033]:string[26] "temp"
          (1181225 call +[38342] call_tmp[1181213] localReplacement[1181053] ret_tmp[1787033])
          (1787036 'move' call_tmp[1181220] ret_tmp[1787033])
          const-val call_tmp[1181228]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (1181230 'move' call_tmp[1181228](1181233 call numBytes[32807] localNeedle[1181031]))
          const-val call_tmp[1181236]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1775133]:byteIndex[28170] "temp"
          (1181241 call +[28722] idx[1181156] call_tmp[1181228] ret_tmp[1775133])
          (1775136 'move' call_tmp[1181236] ret_tmp[1775133])
          const-val call_tmp[1181244]:range(byteIndex,boundedLow,false)[1143314] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1791180]:range(byteIndex,boundedLow,false)[1143314] "temp"
          (1181249 call chpl_build_low_bounded_range[1142621] call_tmp[1181236] ret_tmp[1791180])
          (1791183 'move' call_tmp[1181244] ret_tmp[1791180])
          const-val call_tmp[1181251]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1791234]:string[26] "temp"
          (1181256 call this[1143634] result[1180995] call_tmp[1181244] ret_tmp[1791234])
          (1791237 'move' call_tmp[1181251] ret_tmp[1791234])
          const-val call_tmp[1181258]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1787039]:string[26] "temp"
          (1181263 call +[38342] call_tmp[1181220] call_tmp[1181251] ret_tmp[1787039])
          (1787042 'move' call_tmp[1181258] ret_tmp[1787039])
          (1181267 call =[38269] result[1180995] call_tmp[1181258])
          (1803490 call chpl__autoDestroy[1494420] call_tmp[1181258])
          (1803487 call chpl__autoDestroy[1494420] call_tmp[1181251])
          (1803484 call chpl__autoDestroy[1575773] call_tmp[1181244])
          (1803481 call chpl__autoDestroy[1494683] call_tmp[1181236])
          (1803478 call chpl__autoDestroy[1494420] call_tmp[1181220])
          (1803475 call chpl__autoDestroy[1494420] call_tmp[1181213])
          (1803472 call chpl__autoDestroy[1576830] call_tmp[1181206])
          (1803469 call chpl__autoDestroy[1494683] call_tmp[1181198])
          const-val call_tmp[1181278]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (1181280 'move' call_tmp[1181278](1181283 call numBytes[32807] localReplacement[1181053]))
          const-val call_tmp[1181286]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1775139]:byteIndex[28170] "temp"
          (1181291 call +[28722] idx[1181156] call_tmp[1181278] ret_tmp[1775139])
          (1775142 'move' call_tmp[1181286] ret_tmp[1775139])
          (1181295 call =[38191] startIdx[1181009] call_tmp[1181286])
          (1803494 call chpl__autoDestroy[1494683] call_tmp[1181286])
          (1803497 call chpl__autoDestroy[1494683] idx[1181156])
          (1803500 call chpl__autoDestroy[1575773] call_tmp[1181138])
        }
        label _continueLabel[1181302]
        const-val tmp[1181304]:bool[10] "dead after last mention" "maybe param" "temp"
        (1181306 'move' tmp[1181304](1181309 call <[948309] count[1180943]))
        val tmp[1181325]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        const-val tmp[1181327]:bool[10] "dead after last mention" "maybe param" "temp"
        const-val call_tmp[1181329]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1181331 'move' call_tmp[1181329] tmp[1181304])
        (1181336 'move' tmp[1181327] call_tmp[1181329])
        if tmp[1181327]
        {
          (1181343 'move' tmp[1181325] 1)
        }
        {
          const-val tmp[1181349]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
          const-val call_tmp[1181351]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1181353 'move' call_tmp[1181351](1181356 call <[437363] found[1181002] count[1180943]))
          (1181359 'move' tmp[1181349] call_tmp[1181351])
          (1181364 'move' tmp[1181325] tmp[1181349])
        }
        (1181370 'move' tmp[1181062] tmp[1181325])
        tmp[1181062]
      }
      label _breakLabel[1181375]
    }
    val call_tmp[1181377]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1203691 'move' ret[1180948] result[1180995])
    (1803503 call chpl__autoDestroy[1494420] localReplacement[1181053])
    (1803506 call chpl__autoDestroy[1494420] localNeedle[1181031])
    (1803509 call chpl__autoDestroy[1494683] startIdx[1181009])
    gotoReturn _end_doReplace[1181392] _end_doReplace[1181392]
    label _end_doReplace[1181392]
    (1791516 '=' _retArg[1791514] ret[1180948])
    (1791518 return _void[55])
  }
  function doSplitWSNoEnc[1124367](const  ref arg x[1124369]:_ref(string)[937850], const in arg maxsplit[1124375]:int(64)[13], ref arg _retArg[1791002]:_ref(_ir_doSplitWSNoEnc)[1124503]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "resolved" "no return value for void"
  {
    val _ir[1967665]:_ir_doSplitWSNoEnc[1124392] "temp"
    (1967667 '.=' _ir[1967665] F0_x[1966639] x[1124369])
    (1967671 '.=' _ir[1967665] F1_maxsplit[1966643] maxsplit[1124375])
    (1967675 '=' _retArg[1791002] _ir[1967665])
    (1967678 return _void[55])
  }
  type _ic_doSplitWSNoEnc[1124386] val super[1124387]:object[22] "super class" val more[1124389]:int(64)[13] ref F0_x[1966637]:_ref(string)[937850] const-val F1_maxsplit[1966641]:int(64)[13] const F2_localx[1966645]:string[26] val F3_done[1966647]:bool[10] val F4_yieldChunk[1966649]:bool[10] const-val F5_chunk[1966651]:string[26] const F6_noSplits[1966653]:bool[10] const F7_limitSplits[1966655]:bool[10] val F8_splitCount[1966657]:int(64)[13] const F9_iEnd[1966659]:int(64)[13] val F10_inChunk[1966661]:bool[10] val F11_chunkStart[1966663]:int(64)[13] val F12__iterator[1966665]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108477] val F13_call_tmp[1966667]:range(int(64),bounded,false)[1026725] val F14__iterator[1966669]:_ic_these_range_int64_t_bounded_F[1096614] val F15__iterator[1966671]:_ic_chpl_bytes__ref_string[1108167] val F16__indexOfInterest[1966673]:(int(64),uint(8))[1110951] const-val F17_ret_tmp[1966675]:range(int(64),boundedLow,false)[1087476] const-val F18_ret_tmp[1966677]:string[26] const-val F19_ret_tmp[1966679]:range(int(64),boundedLow,false)[1087476] const-val F20_ret_tmp[1966681]:string[26] const-val F21_ret_tmp[1966683]:range(int(64),bounded,false)[1026725] const-val F22_ret_tmp[1966685]:string[26] const-val F23_ret_tmp[1966687]:range(int(64),boundedLow,false)[1087476] const-val F24_ret_tmp[1966689]:string[26] val value[1966691]:string[26]
  type _ir_doSplitWSNoEnc[1124392] ref F0_x[1966639]:_ref(string)[937850] const-val F1_maxsplit[1966643]:int(64)[13]
  function _getIterator[1124401](const  ref arg ir[1124403]:_ir_doSplitWSNoEnc[1124392]) : _ic_doSplitWSNoEnc[1124386] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[1124510]:_ic_doSplitWSNoEnc[1124386] "dead after last mention" "RVV" "temp"
    val _ic_[1124393]:_ic_doSplitWSNoEnc[1124386] "dead after last mention" "temp"
    const-val call_tmp[1124517]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1124520 'move' call_tmp[1124517](1124532 'sizeof_bundle' _ic_doSplitWSNoEnc[1124386]))
    const-val cast_tmp[1124535]:c_void_ptr[149] "dead after last mention" "temp"
    (1124537 'move' cast_tmp[1124535](1124398 call chpl_here_alloc[187742] call_tmp[1124517] 35))
    (1124406 'move' _ic_[1124393](1124539 'cast' _ic_doSplitWSNoEnc[1124386] cast_tmp[1124535]))
    (1124408 'setcid' _ic_[1124393])
    (1124515 'move' ret[1124510] _ic_[1124393])
    (1967681 '.=' ret[1124510] more[1124389] 1)
    ref tmp[1967685]:_ref(string)[937850] "temp"
    (1967690 'move' tmp[1967685](1967686 '.v' ir[1124403] F0_x[1966639]))
    (1967692 '.=' ret[1124510] F0_x[1966637] tmp[1967685])
    const-val tmp[1967696]:int(64)[13] "temp"
    (1967701 'move' tmp[1967696](1967697 '.v' ir[1124403] F1_maxsplit[1966643]))
    (1967703 '.=' ret[1124510] F1_maxsplit[1966641] tmp[1967696])
    (1124512 return ret[1124510])
  }
  function doSearchNoEnc[1029964](const  ref arg x[1029966]:_ref(string)[937850], const  ref arg needle[1029971]:string[26], const in arg region[1029973]:range(byteIndex,bounded,false)[1025703]) : int(64)[13] "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1029981]:int(64)[13] "dead after last mention" "RVV" "temp"
    val call_tmp[1029993]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val ret[1030011]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1030013 'move' ret[1030011] -1)
    const-val tmp[1030018]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1030020]:_ref(int(32))[936537] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1030022 'move' call_tmp[1030020](1030025 call locale_id[757953] x[1029966]))
    const-val call_tmp[1030028]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1030894]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1030898 'move' coerce_tmp[1030894](1030896 'deref' call_tmp[1030020]))
    (1030030 'move' call_tmp[1030028](1030033 call chpl_buildLocaleID[209412] coerce_tmp[1030894] c_sublocid_any[89875]))
    const-val call_tmp[1030036]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    (1030038 'move' call_tmp[1030036](1030040 'chpl_on_locale_num' call_tmp[1030028]))
    (1030042 'move' tmp[1030018] call_tmp[1030036])
    val needle_data[2032353]:__serializeHelper[28086] "temp"
    (2032355 call chpl__serialize[30883] needle[1029971] needle_data[2032353])
    val isdirect[2037296]:bool[10] "temp"
    (2037301 'move' isdirect[2037296](2037298 call chpl_doDirectExecuteOn[187423] tmp[1030018]))
    if isdirect[2037296]
    {
      (2037305 call on_fn[1030049] needle_data[2032353] x[1029966] region[1029973] ret[1030011])
    }
    {
      val _args_foron_fn[2037329]:_class_localson_fn[2037315] "temp"
      (2037333 'move' _args_foron_fn[2037329](2037331 'stack allocate class' _class_localson_fn[2037315]))
      (2037335 '.=' _args_foron_fn[2037329] _0_tmp[2037318] tmp[1030018])
      (2037339 '.=' _args_foron_fn[2037329] _1_needle_data[2037320] needle_data[2032353])
      ref tmp[2037343]:string[26] "temp"
      (2037347 'move' tmp[2037343](2037345 'set reference' x[1029966]))
      (2037349 '.=' _args_foron_fn[2037329] _2_x[2037322] tmp[2037343])
      (2037353 '.=' _args_foron_fn[2037329] _3_region[2037324] region[1029973])
      ref tmp[2037357]:int(64)[13] "temp"
      (2037361 'move' tmp[2037357](2037359 'set reference' ret[1030011]))
      (2037363 '.=' _args_foron_fn[2037329] _4_ret[2037326] tmp[2037357])
      val _args_vforon_fn[2037367]:c_void_ptr[149] "temp"
      (2037371 'move' _args_vforon_fn[2037367](2037369 'cast_to_void_star' _args_foron_fn[2037329]))
      val _args_sizeon_fn[2037373]:int(64)[13] "temp"
      (2037377 'move' _args_sizeon_fn[2037373](2037375 'sizeof_bundle' _class_localson_fn[2037315]))
      on(2037433 call wrapon_fn[2037379] tmp[1030018] _args_vforon_fn[2037367] _args_sizeon_fn[2037373] _args_foron_fn[2037329])
    }
    {
    }
    (1030781 'move' ret[1029981] ret[1030011])
    gotoReturn _end_doSearchNoEnc[1030789] _end_doSearchNoEnc[1030789]
    label _end_doSearchNoEnc[1030789]
    (1030791 return ret[1029981])
  }
  function doSearchNoEnc[1181677](const  ref arg x[1181679]:_ref(string)[937850], const  ref arg needle[1181684]:string[26], const in arg region[1181686]:range(byteIndex,boundedLow,false)[1143314]) : int(64)[13] "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1181694]:int(64)[13] "dead after last mention" "RVV" "temp"
    val call_tmp[1181706]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val ret[1181724]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1181726 'move' ret[1181724] -1)
    const-val tmp[1181731]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1181733]:_ref(int(32))[936537] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1181735 'move' call_tmp[1181733](1181738 call locale_id[757953] x[1181679]))
    const-val call_tmp[1181741]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1182544]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1182548 'move' coerce_tmp[1182544](1182546 'deref' call_tmp[1181733]))
    (1181743 'move' call_tmp[1181741](1181746 call chpl_buildLocaleID[209412] coerce_tmp[1182544] c_sublocid_any[89875]))
    const-val call_tmp[1181749]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    (1181751 'move' call_tmp[1181749](1181753 'chpl_on_locale_num' call_tmp[1181741]))
    (1181755 'move' tmp[1181731] call_tmp[1181749])
    val needle_data[2032892]:__serializeHelper[28086] "temp"
    (2032894 call chpl__serialize[30883] needle[1181684] needle_data[2032892])
    val isdirect[2039910]:bool[10] "temp"
    (2039915 'move' isdirect[2039910](2039912 call chpl_doDirectExecuteOn[187423] tmp[1181731]))
    if isdirect[2039910]
    {
      (2039919 call on_fn[1181762] needle_data[2032892] x[1181679] region[1181686] ret[1181724])
    }
    {
      val _args_foron_fn[2039943]:_class_localson_fn[2039929] "temp"
      (2039947 'move' _args_foron_fn[2039943](2039945 'stack allocate class' _class_localson_fn[2039929]))
      (2039949 '.=' _args_foron_fn[2039943] _0_tmp[2039932] tmp[1181731])
      (2039953 '.=' _args_foron_fn[2039943] _1_needle_data[2039934] needle_data[2032892])
      ref tmp[2039957]:string[26] "temp"
      (2039961 'move' tmp[2039957](2039959 'set reference' x[1181679]))
      (2039963 '.=' _args_foron_fn[2039943] _2_x[2039936] tmp[2039957])
      (2039967 '.=' _args_foron_fn[2039943] _3_region[2039938] region[1181686])
      ref tmp[2039971]:int(64)[13] "temp"
      (2039975 'move' tmp[2039971](2039973 'set reference' ret[1181724]))
      (2039977 '.=' _args_foron_fn[2039943] _4_ret[2039940] tmp[2039971])
      val _args_vforon_fn[2039981]:c_void_ptr[149] "temp"
      (2039985 'move' _args_vforon_fn[2039981](2039983 'cast_to_void_star' _args_foron_fn[2039943]))
      val _args_sizeon_fn[2039987]:int(64)[13] "temp"
      (2039991 'move' _args_sizeon_fn[2039987](2039989 'sizeof_bundle' _class_localson_fn[2039929]))
      on(2040047 call wrapon_fn[2039993] tmp[1181731] _args_vforon_fn[2039981] _args_sizeon_fn[2039987] _args_foron_fn[2039943])
    }
    {
    }
    (1182494 'move' ret[1181694] ret[1181724])
    gotoReturn _end_doSearchNoEnc[1182502] _end_doSearchNoEnc[1182502]
    label _end_doSearchNoEnc[1182502]
    (1182504 return ret[1181694])
  }
  function doAppend[978981](ref arg lhs[978983]:_ref(string)[937850], const  ref arg rhs[978988]:_ref(string)[937850]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val call_tmp[978994]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[979005]:_ref(int(64))[936483] "dead after last mention" "maybe param" "reference to a const" "temp"
    (979007 'move' call_tmp[979005](979010 call buffLen[757797] rhs[978988]))
    const-val call_tmp[979013]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[979622]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (979626 'move' coerce_tmp[979622](979624 'deref' call_tmp[979005]))
    (979015 'move' call_tmp[979013](979018 call ==[435539] coerce_tmp[979622] 0))
    const-val call_tmp[979021]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (979023 'move' call_tmp[979021] call_tmp[979013])
    if call_tmp[979021]
    {
      gotoReturn _end_doAppend[979551] _end_doAppend[979551]
    }
    const-val tmp[979033]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[979035]:_ref(int(32))[936537] "dead after last mention" "maybe param" "temp"
    (979037 'move' call_tmp[979035](979040 call locale_id[757953] lhs[978983]))
    const-val call_tmp[979043]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[979630]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (979634 'move' coerce_tmp[979630](979632 'deref' call_tmp[979035]))
    (979045 'move' call_tmp[979043](979048 call chpl_buildLocaleID[209412] coerce_tmp[979630] c_sublocid_any[89875]))
    const-val call_tmp[979051]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    (979053 'move' call_tmp[979051](979055 'chpl_on_locale_num' call_tmp[979043]))
    (979057 'move' tmp[979033] call_tmp[979051])
    val isdirect[2035845]:bool[10] "temp"
    (2035850 'move' isdirect[2035845](2035847 call chpl_doDirectExecuteOn[187423] tmp[979033]))
    if isdirect[2035845]
    {
      (2035854 call on_fn[979064] lhs[978983] rhs[978988])
    }
    {
      val _args_foron_fn[2035872]:_class_localson_fn[2035862] "temp"
      (2035876 'move' _args_foron_fn[2035872](2035874 'stack allocate class' _class_localson_fn[2035862]))
      (2035878 '.=' _args_foron_fn[2035872] _0_tmp[2035865] tmp[979033])
      ref tmp[2035882]:string[26] "temp"
      (2035886 'move' tmp[2035882](2035884 'set reference' lhs[978983]))
      (2035888 '.=' _args_foron_fn[2035872] _1_lhs[2035867] tmp[2035882])
      ref tmp[2035892]:string[26] "temp"
      (2035896 'move' tmp[2035892](2035894 'set reference' rhs[978988]))
      (2035898 '.=' _args_foron_fn[2035872] _2_rhs[2035869] tmp[2035892])
      val _args_vforon_fn[2035902]:c_void_ptr[149] "temp"
      (2035906 'move' _args_vforon_fn[2035902](2035904 'cast_to_void_star' _args_foron_fn[2035872]))
      val _args_sizeon_fn[2035908]:int(64)[13] "temp"
      (2035912 'move' _args_sizeon_fn[2035908](2035910 'sizeof_bundle' _class_localson_fn[2035862]))
      on(2035952 call wrapon_fn[2035914] tmp[979033] _args_vforon_fn[2035902] _args_sizeon_fn[2035908] _args_foron_fn[2035872])
    }
    {
    }
    label _end_doAppend[979551]
    (979553 return _void[55])
  }
  function reinitWithNewBuffer[1019819](ref arg lhs[1019821]:_ref(string)[937850], const in arg buff[1019825]:c_ptr(uint(8))[937334], const in arg buffLen[1019827]:int(64)[13], const in arg buffSize[1019829]:int(64)[13], const in arg numCodepoints[1019833]:int(64)[13]) : void[4] "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val tmp[1019839]:bool[10] "dead after last mention" "maybe param" "temp"
    (1019841 'move' tmp[1019839](1019847 call isEmpty[35061] lhs[1019821]))
    val tmp[1019861]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1019863]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1019865]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1019867 'move' call_tmp[1019865] tmp[1019839])
    (1019872 'move' tmp[1019863] call_tmp[1019865])
    if tmp[1019863]
    {
      const-val tmp[1019879]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1019881]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1019883 'move' call_tmp[1019881](1019886 call ==[1020456] buff[1019825] nil[44]))
      (1019889 'move' tmp[1019879] call_tmp[1019881])
      (1019894 'move' tmp[1019861] tmp[1019879])
    }
    {
      (1019900 'move' tmp[1019861] 0)
    }
    const-val call_tmp[1019906]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1019908 'move' call_tmp[1019906] tmp[1019861])
    if call_tmp[1019906]
    {
      gotoReturn _end_reinitWithNewBuffer[1020418] _end_reinitWithNewBuffer[1020418]
    }
    const-val call_tmp[1019918]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1019920 'move' call_tmp[1019918](1019923 call !=[435923] buffLen[1019827] 0))
    const-val call_tmp[1019926]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1019928 'move' call_tmp[1019926] call_tmp[1019918])
    if call_tmp[1019926]
    {
      const-val tmp[1019935]:bool[10] "dead after last mention" "maybe param" "temp"
      ref call_tmp[1019937]:_ref(bool)[937110] "dead after last mention" "maybe param" "temp"
      (1019939 'move' call_tmp[1019937](1019942 call isOwned[757901] lhs[1019821]))
      const-val coerce_tmp[1020486]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1020490 'move' coerce_tmp[1020486](1020488 'deref' call_tmp[1019937]))
      (1019945 'move' tmp[1019935](1019948 call ![7494] coerce_tmp[1020486]))
      val tmp[1019963]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1019965]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1019967]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1019969 'move' call_tmp[1019967] tmp[1019935])
      (1019974 'move' tmp[1019965] call_tmp[1019967])
      if tmp[1019965]
      {
        (1019981 'move' tmp[1019963] 1)
      }
      {
        const-val tmp[1019987]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1019989]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1019991 'move' call_tmp[1019989](1019994 call +[949577] buffLen[1019827]))
        ref call_tmp[1019997]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
        (1019999 'move' call_tmp[1019997](1020002 call buffSize[757823] lhs[1019821]))
        const-val call_tmp[1020005]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1020498]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1020502 'move' coerce_tmp[1020498](1020500 'deref' call_tmp[1019997]))
        (1020007 'move' call_tmp[1020005](1020010 call >[437583] call_tmp[1019989] coerce_tmp[1020498]))
        (1020013 'move' tmp[1019987] call_tmp[1020005])
        (1020018 'move' tmp[1019963] tmp[1019987])
      }
      const-val call_tmp[1020024]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1020026 'move' call_tmp[1020024] tmp[1019963])
      if call_tmp[1020024]
      {
        ref tmp[1020033]:_ref(bool)[937110] "dead after last mention" "maybe param" "temp"
        (1020035 'move' tmp[1020033](1020038 call isOwned[757901] lhs[1019821]))
        val tmp[1020054]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        const-val tmp[1020056]:bool[10] "dead after last mention" "maybe param" "temp"
        const-val call_tmp[1020058]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val tmp[1020509]:bool[10] "dead after last mention" "const" "temp"
        (1020511 'move' tmp[1020509](1020513 'deref' tmp[1020033]))
        (1020060 'move' call_tmp[1020058] tmp[1020509])
        (1020065 'move' tmp[1020056] call_tmp[1020058])
        if tmp[1020056]
        {
          const-val tmp[1020072]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
          const-val call_tmp[1020074]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1020076 'move' call_tmp[1020074](1020082 call isEmpty[35061] lhs[1019821]))
          const-val call_tmp[1020083]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1020085 'move' call_tmp[1020083](1020088 call ![7494] call_tmp[1020074]))
          (1020090 'move' tmp[1020072] call_tmp[1020083])
          (1020095 'move' tmp[1020054] tmp[1020072])
        }
        {
          (1020101 'move' tmp[1020054] 0)
        }
        const-val call_tmp[1020107]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1020109 'move' call_tmp[1020107] tmp[1020054])
        if call_tmp[1020107]
        {
          ref call_tmp[1020116]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "temp"
          (1020118 'move' call_tmp[1020116](1020121 call buff[757875] lhs[1019821]))
          val coerce_tmp[1020518]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1020522 'move' coerce_tmp[1020518](1020520 'deref' call_tmp[1020116]))
          (1020125 call bufferFree[172912] coerce_tmp[1020518])
        }
        const-val call_tmp[1020128]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1020130 'move' call_tmp[1020128](1020133 call +[949577] buffLen[1019827]))
        const-val call_tmp[1020136]:(c_ptr(uint(8)),int(64))[955119] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1788825]:(c_ptr(uint(8)),int(64))[955119] "temp"
        (1020141 call bufferAlloc[954929] call_tmp[1020128] ret_tmp[1788825])
        (1788828 'move' call_tmp[1020136] ret_tmp[1788825])
        const-val tmp[1020143]:(c_ptr(uint(8)),int(64))[955119] "dead at end of block" "const" "insert auto destroy" "temp"
        (1020145 'move' tmp[1020143] call_tmp[1020136])
        1
        ref call_tmp[1020153]:_ref(c_ptr(uint(8)))[937343] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1020155 'move' call_tmp[1020153](1020534 '.' tmp[1020143] x0[955115]))
        const buff[1020160]:c_ptr(uint(8))[937334] "dead at end of block" "const" "insert auto destroy"
        val coerce_tmp[1020539]:c_ptr(uint(8))[937334] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1020543 'move' coerce_tmp[1020539](1020541 'deref' call_tmp[1020153]))
        (1020162 'move' buff[1020160] coerce_tmp[1020539])
        ref call_tmp[1020165]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1020167 'move' call_tmp[1020165](1020548 '.' tmp[1020143] x1[955117]))
        const-val allocSize[1020172]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[1020553]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1020557 'move' coerce_tmp[1020553](1020555 'deref' call_tmp[1020165]))
        (1020174 'move' allocSize[1020172] coerce_tmp[1020553])
        ref call_tmp[1020178]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "temp"
        (1020180 'move' call_tmp[1020178](1020183 call buff[757875] lhs[1019821]))
        (1020187 call =[954124] call_tmp[1020178] buff[1020160])
        ref call_tmp[1020192]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
        (1020194 'move' call_tmp[1020192](1020197 call buffSize[757823] lhs[1019821]))
        (1020201 call =[435238] call_tmp[1020192] allocSize[1020172])
        ref call_tmp[1020206]:_ref(bool)[937110] "dead after last mention" "maybe param" "temp"
        (1020208 'move' call_tmp[1020206](1020211 call isOwned[757901] lhs[1019821]))
        (1020215 call =[435085] call_tmp[1020206] 1)
        (1799340 call chpl__autoDestroy[1498061] tmp[1020143])
      }
      ref call_tmp[1020219]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "temp"
      (1020221 'move' call_tmp[1020219](1020224 call buff[757875] lhs[1019821]))
      val coerce_tmp[1020617]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1020621 'move' coerce_tmp[1020617](1020619 'deref' call_tmp[1020219]))
      (1020228 call bufferMemmoveLocal[1020567] coerce_tmp[1020617] buff[1019825] buffLen[1019827] 0 0)
      ref call_tmp[1020233]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
      ref _this_tmp_[1020743]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "temp"
      (1020745 'move' _this_tmp_[1020743](1020238 call buff[757875] lhs[1019821]))
      val coerce_tmp[1020750]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1020754 'move' coerce_tmp[1020750](1020752 'deref' _this_tmp_[1020743]))
      (1020235 'move' call_tmp[1020233](1020241 call this[954002] coerce_tmp[1020750] buffLen[1019827]))
      const-val coerce_tmp[1020757]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1020763 'move' coerce_tmp[1020757](1020759 'cast' uint(8)[100] 0))
      (1020244 call =[435259] call_tmp[1020233] coerce_tmp[1020757])
    }
    {
      ref tmp[1020248]:_ref(bool)[937110] "dead after last mention" "maybe param" "temp"
      (1020250 'move' tmp[1020248](1020253 call isOwned[757901] lhs[1019821]))
      val tmp[1020269]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1020271]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1020273]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val tmp[1020770]:bool[10] "dead after last mention" "const" "temp"
      (1020772 'move' tmp[1020770](1020774 'deref' tmp[1020248]))
      (1020275 'move' call_tmp[1020273] tmp[1020770])
      (1020280 'move' tmp[1020271] call_tmp[1020273])
      if tmp[1020271]
      {
        const-val tmp[1020287]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1020289]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1020291 'move' call_tmp[1020289](1020297 call isEmpty[35061] lhs[1019821]))
        const-val call_tmp[1020298]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1020300 'move' call_tmp[1020298](1020303 call ![7494] call_tmp[1020289]))
        (1020305 'move' tmp[1020287] call_tmp[1020298])
        (1020310 'move' tmp[1020269] tmp[1020287])
      }
      {
        (1020316 'move' tmp[1020269] 0)
      }
      const-val call_tmp[1020322]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1020324 'move' call_tmp[1020322] tmp[1020269])
      if call_tmp[1020322]
      {
        ref call_tmp[1020331]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "temp"
        (1020333 'move' call_tmp[1020331](1020336 call buff[757875] lhs[1019821]))
        val coerce_tmp[1020779]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1020783 'move' coerce_tmp[1020779](1020781 'deref' call_tmp[1020331]))
        (1020340 call bufferFree[172912] coerce_tmp[1020779])
      }
      ref call_tmp[1020343]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
      (1020345 'move' call_tmp[1020343](1020348 call buffSize[757823] lhs[1019821]))
      (1020352 call =[435238] call_tmp[1020343] 0)
      ref call_tmp[1020356]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "temp"
      (1020358 'move' call_tmp[1020356](1020361 call buff[757875] lhs[1019821]))
      (1020365 call =[954135] call_tmp[1020356] nil[44])
    }
    ref call_tmp[1020369]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
    (1020371 'move' call_tmp[1020369](1020374 call buffLen[757797] lhs[1019821]))
    (1020378 call =[435238] call_tmp[1020369] buffLen[1019827])
    val call_tmp[1020382]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      ref call_tmp[1020405]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
      (1020407 'move' call_tmp[1020405](1020410 call cachedNumCodepoints[757849] lhs[1019821]))
      (1020414 call =[435238] call_tmp[1020405] numCodepoints[1019833])
    }
    label _end_reinitWithNewBuffer[1020418]
    (1020420 return _void[55])
  }
  function reinitWithOwnedBuffer[1020866](ref arg lhs[1020868]:_ref(string)[937850], const in arg buff[1020872]:c_ptr(uint(8))[937334], const in arg buffLen[1020874]:int(64)[13], const in arg buffSize[1020876]:int(64)[13], const in arg numCodepoints[1020880]:int(64)[13]) : void[4] "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val tmp[1020886]:bool[10] "dead after last mention" "maybe param" "temp"
    (1020888 'move' tmp[1020886](1020894 call isEmpty[35061] lhs[1020868]))
    val tmp[1020908]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1020910]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1020912]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1020914 'move' call_tmp[1020912] tmp[1020886])
    (1020919 'move' tmp[1020910] call_tmp[1020912])
    if tmp[1020910]
    {
      const-val tmp[1020926]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1020928]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1020930 'move' call_tmp[1020928](1020933 call ==[1020456] buff[1020872] nil[44]))
      (1020936 'move' tmp[1020926] call_tmp[1020928])
      (1020941 'move' tmp[1020908] tmp[1020926])
    }
    {
      (1020947 'move' tmp[1020908] 0)
    }
    const-val call_tmp[1020953]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1020955 'move' call_tmp[1020953] tmp[1020908])
    if call_tmp[1020953]
    {
      gotoReturn _end_reinitWithOwnedBuffer[1021286] _end_reinitWithOwnedBuffer[1021286]
    }
    const-val call_tmp[1020965]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1020967 'move' call_tmp[1020965](1020970 call !=[435923] buffLen[1020874] 0))
    const-val call_tmp[1020973]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1020975 'move' call_tmp[1020973] call_tmp[1020965])
    if call_tmp[1020973]
    {
      ref tmp[1020982]:_ref(bool)[937110] "dead after last mention" "maybe param" "temp"
      (1020984 'move' tmp[1020982](1020987 call isOwned[757901] lhs[1020868]))
      val tmp[1021003]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1021005]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1021007]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val tmp[1021307]:bool[10] "dead after last mention" "const" "temp"
      (1021309 'move' tmp[1021307](1021311 'deref' tmp[1020982]))
      (1021009 'move' call_tmp[1021007] tmp[1021307])
      (1021014 'move' tmp[1021005] call_tmp[1021007])
      if tmp[1021005]
      {
        const-val tmp[1021021]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1021023]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1021025 'move' call_tmp[1021023](1021031 call isEmpty[35061] lhs[1020868]))
        const-val call_tmp[1021032]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1021034 'move' call_tmp[1021032](1021037 call ![7494] call_tmp[1021023]))
        (1021039 'move' tmp[1021021] call_tmp[1021032])
        (1021044 'move' tmp[1021003] tmp[1021021])
      }
      {
        (1021050 'move' tmp[1021003] 0)
      }
      const-val call_tmp[1021056]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1021058 'move' call_tmp[1021056] tmp[1021003])
      if call_tmp[1021056]
      {
        ref call_tmp[1021065]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "temp"
        (1021067 'move' call_tmp[1021065](1021070 call buff[757875] lhs[1020868]))
        val coerce_tmp[1021316]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1021320 'move' coerce_tmp[1021316](1021318 'deref' call_tmp[1021065]))
        (1021074 call bufferFree[172912] coerce_tmp[1021316])
      }
      ref call_tmp[1021077]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "temp"
      (1021079 'move' call_tmp[1021077](1021082 call buff[757875] lhs[1020868]))
      (1021086 call =[954124] call_tmp[1021077] buff[1020872])
      ref call_tmp[1021090]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
      (1021092 'move' call_tmp[1021090](1021095 call buffSize[757823] lhs[1020868]))
      (1021099 call =[435238] call_tmp[1021090] buffSize[1020876])
    }
    {
      ref tmp[1021103]:_ref(bool)[937110] "dead after last mention" "maybe param" "temp"
      (1021105 'move' tmp[1021103](1021108 call isOwned[757901] lhs[1020868]))
      val tmp[1021124]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1021126]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1021128]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val tmp[1021331]:bool[10] "dead after last mention" "const" "temp"
      (1021333 'move' tmp[1021331](1021335 'deref' tmp[1021103]))
      (1021130 'move' call_tmp[1021128] tmp[1021331])
      (1021135 'move' tmp[1021126] call_tmp[1021128])
      if tmp[1021126]
      {
        const-val tmp[1021142]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1021144]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1021146 'move' call_tmp[1021144](1021152 call isEmpty[35061] lhs[1020868]))
        const-val call_tmp[1021153]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1021155 'move' call_tmp[1021153](1021158 call ![7494] call_tmp[1021144]))
        (1021160 'move' tmp[1021142] call_tmp[1021153])
        (1021165 'move' tmp[1021124] tmp[1021142])
      }
      {
        (1021171 'move' tmp[1021124] 0)
      }
      const-val call_tmp[1021177]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1021179 'move' call_tmp[1021177] tmp[1021124])
      if call_tmp[1021177]
      {
        ref call_tmp[1021186]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "temp"
        (1021188 'move' call_tmp[1021186](1021191 call buff[757875] lhs[1020868]))
        val coerce_tmp[1021340]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1021344 'move' coerce_tmp[1021340](1021342 'deref' call_tmp[1021186]))
        (1021195 call bufferFree[172912] coerce_tmp[1021340])
      }
      ref call_tmp[1021198]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "temp"
      (1021200 'move' call_tmp[1021198](1021203 call buff[757875] lhs[1020868]))
      (1021207 call =[954124] call_tmp[1021198] buff[1020872])
      ref call_tmp[1021211]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
      (1021213 'move' call_tmp[1021211](1021216 call buffSize[757823] lhs[1020868]))
      (1021220 call =[435238] call_tmp[1021211] 0)
    }
    ref call_tmp[1021224]:_ref(bool)[937110] "dead after last mention" "maybe param" "temp"
    (1021226 'move' call_tmp[1021224](1021229 call isOwned[757901] lhs[1020868]))
    (1021233 call =[435085] call_tmp[1021224] 1)
    ref call_tmp[1021237]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
    (1021239 'move' call_tmp[1021237](1021242 call buffLen[757797] lhs[1020868]))
    (1021246 call =[435238] call_tmp[1021237] buffLen[1020874])
    val call_tmp[1021250]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      ref call_tmp[1021273]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
      (1021275 'move' call_tmp[1021273](1021278 call cachedNumCodepoints[757849] lhs[1020868]))
      (1021282 call =[435238] call_tmp[1021273] numCodepoints[1020880])
    }
    label _end_reinitWithOwnedBuffer[1021286]
    (1021288 return _void[55])
  }
  function doAssign[1019079](ref arg lhs[1019081]:_ref(string)[937850], const  ref arg rhs[1019086]:string[26]) : void[4] "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[1019092]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val tmp[1019454]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1019478]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    ref call_tmp[1019480]:_ref(int(32))[936537] "dead after last mention" "maybe param" "temp"
    (1019482 'move' call_tmp[1019480](1019485 call locale_id[757953] lhs[1019081]))
    const-val call_tmp[1019488]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1019641]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1019645 'move' coerce_tmp[1019641](1019643 'deref' call_tmp[1019480]))
    (1019490 'move' call_tmp[1019488](1019493 call ==[435517] coerce_tmp[1019641] chpl_nodeID[208152]))
    (1019496 'move' tmp[1019478] call_tmp[1019488])
    (1019501 'move' tmp[1019454] tmp[1019478])
    const-val call_tmp[1019507]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1019509 'move' call_tmp[1019507] tmp[1019454])
    if call_tmp[1019507]
    {
      (1019517 call helpMe[1019103] lhs[1019081] rhs[1019086])
    }
    {
      const-val tmp[1019521]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
      ref call_tmp[1019523]:_ref(int(32))[936537] "dead after last mention" "maybe param" "temp"
      (1019525 'move' call_tmp[1019523](1019528 call locale_id[757953] lhs[1019081]))
      const-val call_tmp[1019531]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val coerce_tmp[1021365]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1021369 'move' coerce_tmp[1021365](1021367 'deref' call_tmp[1019523]))
      (1019533 'move' call_tmp[1019531](1019536 call chpl_buildLocaleID[209412] coerce_tmp[1021365] c_sublocid_any[89875]))
      const-val call_tmp[1019539]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
      (1019541 'move' call_tmp[1019539](1019543 'chpl_on_locale_num' call_tmp[1019531]))
      (1019545 'move' tmp[1019521] call_tmp[1019539])
      val isdirect[2036613]:bool[10] "temp"
      (2036618 'move' isdirect[2036613](2036615 call chpl_doDirectExecuteOn[187423] tmp[1019521]))
      if isdirect[2036613]
      {
        (2036622 call on_fn[1019552] lhs[1019081] rhs[1019086])
      }
      {
        val _args_foron_fn[2036640]:_class_localson_fn[2036630] "temp"
        (2036644 'move' _args_foron_fn[2036640](2036642 'stack allocate class' _class_localson_fn[2036630]))
        (2036646 '.=' _args_foron_fn[2036640] _0_tmp[2036633] tmp[1019521])
        ref tmp[2036650]:string[26] "temp"
        (2036654 'move' tmp[2036650](2036652 'set reference' lhs[1019081]))
        (2036656 '.=' _args_foron_fn[2036640] _1_lhs[2036635] tmp[2036650])
        ref tmp[2036660]:string[26] "temp"
        (2036664 'move' tmp[2036660](2036662 'set reference' rhs[1019086]))
        (2036666 '.=' _args_foron_fn[2036640] _2_rhs[2036637] tmp[2036660])
        val _args_vforon_fn[2036670]:c_void_ptr[149] "temp"
        (2036674 'move' _args_vforon_fn[2036670](2036672 'cast_to_void_star' _args_foron_fn[2036640]))
        val _args_sizeon_fn[2036676]:int(64)[13] "temp"
        (2036680 'move' _args_sizeon_fn[2036676](2036678 'sizeof_bundle' _class_localson_fn[2036630]))
        on(2036720 call wrapon_fn[2036682] tmp[1019521] _args_vforon_fn[2036670] _args_sizeon_fn[2036676] _args_foron_fn[2036640])
      }
      {
      }
    }
    (1019567 return _void[55])
  }
  function doConcat[980774](const  ref arg s0[980776]:string[26], const  ref arg s1[980781]:string[26], ref arg _retArg[1789009]:_ref(string)[937850]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[980786]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[980794]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[980805]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
    (980807 'move' call_tmp[980805](980810 call buffLen[757797] s0[980776]))
    const-val s0len[980813]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[981223]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (981227 'move' coerce_tmp[981223](981225 'deref' call_tmp[980805]))
    (1799248 '=' s0len[980813] coerce_tmp[981223])
    (980815 'noop')
    const-val call_tmp[980819]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (980821 'move' call_tmp[980819](980824 call ==[435539] s0len[980813] 0))
    const-val call_tmp[980827]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (980829 'move' call_tmp[980827] call_tmp[980819])
    if call_tmp[980827]
    {
      val call_tmp[980836]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[980842]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val _formal_tmp_in_x[981252]:string[26] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (981256 'move' _formal_tmp_in_x[981252](981253 call chpl__initCopy[981259] s1[980781]))
      const-val ret_tmp[1789017]:string[26] "temp"
      (981231 call _removed_cast[981234] _formal_tmp_in_x[981252] ret_tmp[1789017])
      (1789020 'move' call_tmp[980842] ret_tmp[1789017])
      val call_tmp[980850]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (981492 'move' ret[980786] call_tmp[980842])
      gotoReturn _end_doConcat[981150] _end_doConcat[981150]
    }
    ref call_tmp[980864]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
    (980866 'move' call_tmp[980864](980869 call buffLen[757797] s1[980781]))
    const-val s1len[980872]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[981308]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (981312 'move' coerce_tmp[981308](981310 'deref' call_tmp[980864]))
    (1799251 '=' s1len[980872] coerce_tmp[981308])
    (980874 'noop')
    const-val call_tmp[980878]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (980880 'move' call_tmp[980878](980883 call ==[435539] s1len[980872] 0))
    const-val call_tmp[980886]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (980888 'move' call_tmp[980886] call_tmp[980878])
    if call_tmp[980886]
    {
      val call_tmp[980895]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (981495 'move' ret[980786](1789013 call chpl__initCopy[981259] s0[980776]))
      gotoReturn _end_doConcat[981150] _end_doConcat[981150]
    }
    const-val call_tmp[980909]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (980911 'move' call_tmp[980909](980914 call +[439547] s0len[980813] s1len[980872]))
    const-val buffLen[980917]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (980919 'move' buffLen[980917] call_tmp[980909])
    const-val call_tmp[980923]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (980925 'move' call_tmp[980923](980928 call +[949577] buffLen[980917]))
    const-val call_tmp[980931]:(c_ptr(uint(8)),int(64))[955119] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1788819]:(c_ptr(uint(8)),int(64))[955119] "temp"
    (980936 call bufferAlloc[954929] call_tmp[980923] ret_tmp[1788819])
    (1788822 'move' call_tmp[980931] ret_tmp[1788819])
    const-val tmp[980938]:(c_ptr(uint(8)),int(64))[955119] "dead at end of block" "insert auto destroy" "temp"
    (980940 'move' tmp[980938] call_tmp[980931])
    1
    ref call_tmp[980948]:_ref(c_ptr(uint(8)))[937343] "dead at end of block" "maybe param" "temp"
    (980950 'move' call_tmp[980948](981326 '.' tmp[980938] x0[955115]))
    val buff[980955]:c_ptr(uint(8))[937334] "dead at end of block" "insert auto destroy"
    val coerce_tmp[981331]:c_ptr(uint(8))[937334] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (981335 'move' coerce_tmp[981331](981333 'deref' call_tmp[980948]))
    (1799254 '=' buff[980955] coerce_tmp[981331])
    (980957 'noop')
    ref call_tmp[980960]:_ref(int(64))[936483] "dead at end of block" "maybe param" "temp"
    (980962 'move' call_tmp[980960](981340 '.' tmp[980938] x1[955117]))
    const-val buffSize[980967]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[981345]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (981349 'move' coerce_tmp[981345](981347 'deref' call_tmp[980960]))
    (1799257 '=' buffSize[980967] coerce_tmp[981345])
    (980969 'noop')
    ref call_tmp[980973]:_ref(int(32))[936537] "dead after last mention" "maybe param" "reference to a const" "temp"
    (980975 'move' call_tmp[980973](980978 call locale_id[757953] s0[980776]))
    ref call_tmp[980981]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "reference to a const" "temp"
    (980983 'move' call_tmp[980981](980986 call buff[757875] s0[980776]))
    const-val coerce_tmp[981360]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (981364 'move' coerce_tmp[981360](981362 'deref' call_tmp[980973]))
    const-val coerce_tmp[981366]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (981372 'move' coerce_tmp[981366](981368 'cast' int(64)[13] coerce_tmp[981360]))
    val coerce_tmp[981374]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (981378 'move' coerce_tmp[981374](981376 'deref' call_tmp[980981]))
    (980990 call bufferMemcpy[172996] buff[980955] coerce_tmp[981366] coerce_tmp[981374] s0len[980813] 0 0)
    ref call_tmp[981002]:_ref(int(32))[936537] "dead after last mention" "maybe param" "reference to a const" "temp"
    (981004 'move' call_tmp[981002](981007 call locale_id[757953] s1[980781]))
    ref call_tmp[981010]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "reference to a const" "temp"
    (981012 'move' call_tmp[981010](981015 call buff[757875] s1[980781]))
    const-val coerce_tmp[981425]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (981429 'move' coerce_tmp[981425](981427 'deref' call_tmp[981002]))
    const-val coerce_tmp[981431]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (981437 'move' coerce_tmp[981431](981433 'cast' int(64)[13] coerce_tmp[981425]))
    val coerce_tmp[981439]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (981443 'move' coerce_tmp[981439](981441 'deref' call_tmp[981010]))
    (981019 call bufferMemcpy[172996] buff[980955] coerce_tmp[981431] coerce_tmp[981439] s1len[980872] s0len[980813] 0)
    ref call_tmp[981034]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
    (981036 'move' call_tmp[981034](981039 call this[954002] buff[980955] buffLen[980917]))
    const-val coerce_tmp[981458]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (981464 'move' coerce_tmp[981458](981460 'cast' uint(8)[100] 0))
    (981042 call =[435259] call_tmp[981034] coerce_tmp[981458])
    val ret[981048]:string[26] "dead at end of block" "insert auto destroy"
    val call_tmp[981050]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (981500 call init[30760] ret[981048])
    val call_tmp[981062]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      ref call_tmp[981085]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
      (981087 'move' call_tmp[981085](981090 call cachedNumCodepoints[757849] ret[981048]))
      ref call_tmp[981093]:_ref(int(64))[936483] "dead after last mention" "maybe param" "reference to a const" "temp"
      (981095 'move' call_tmp[981093](981098 call cachedNumCodepoints[757849] s0[980776]))
      ref call_tmp[981101]:_ref(int(64))[936483] "dead after last mention" "maybe param" "reference to a const" "temp"
      (981103 'move' call_tmp[981101](981106 call cachedNumCodepoints[757849] s1[980781]))
      const-val call_tmp[981109]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[981476]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (981480 'move' coerce_tmp[981476](981478 'deref' call_tmp[981093]))
      const-val coerce_tmp[981482]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (981486 'move' coerce_tmp[981482](981484 'deref' call_tmp[981101]))
      (981111 'move' call_tmp[981109](981114 call +[439547] coerce_tmp[981476] coerce_tmp[981482]))
      (981118 call =[435238] call_tmp[981085] call_tmp[981109])
    }
    (981125 call initWithOwnedBuffer[978806] ret[981048] buff[980955] buffLen[980917] buffSize[980967])
    val call_tmp[981135]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (981498 'move' ret[980786] ret[981048])
    (1799260 call chpl__autoDestroy[1498061] tmp[980938])
    gotoReturn _end_doConcat[981150] _end_doConcat[981150]
    label _end_doConcat[981150]
    (1789011 '=' _retArg[1789009] ret[980786])
    (1789015 return _void[55])
  }
  function doStripNoEnc[1107545](const  ref arg x[1107547]:_ref(string)[937850], const  ref arg chars[1107552]:string[26], const in arg leading[1107554]:bool[10], const in arg trailing[1107556]:bool[10], ref arg _retArg[1790608]:_ref(string)[937850]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1107561]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1107569]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1107571 'move' call_tmp[1107569](1107577 call isEmpty[35061] x[1107547]))
    const-val call_tmp[1107578]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1107580 'move' call_tmp[1107578] call_tmp[1107569])
    if call_tmp[1107578]
    {
      val call_tmp[1107591]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1107624]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1107630 'move' ret[1107561](1790612 call chpl__initCopy[981259] ""))
      gotoReturn _end_doStripNoEnc[1108138] _end_doStripNoEnc[1108138]
    }
    const-val call_tmp[1107638]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1107640 'move' call_tmp[1107638](1107646 call isEmpty[35061] chars[1107552]))
    const-val call_tmp[1107647]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1107649 'move' call_tmp[1107647] call_tmp[1107638])
    if call_tmp[1107647]
    {
      val call_tmp[1107656]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1121884 'move' ret[1107561](1121882 call chpl__autoCopy[1121886] x[1107547]))
      gotoReturn _end_doStripNoEnc[1108138] _end_doStripNoEnc[1108138]
    }
    const-val call_tmp[1107670]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1786433]:string[26] "temp"
    (1107678 call localize[32886] x[1107547] ret_tmp[1786433])
    (1786436 'move' call_tmp[1107670] ret_tmp[1786433])
    val call_tmp[1107679]:string[26] "dead after last mention" "maybe param" "temp" "type variable"
    const localX[1107685]:string[26] "dead at end of block" "const" "insert auto destroy"
    (1107687 'move' localX[1107685] call_tmp[1107670])
    const-val call_tmp[1107692]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1786439]:string[26] "temp"
    (1107700 call localize[32886] chars[1107552] ret_tmp[1786439])
    (1786442 'move' call_tmp[1107692] ret_tmp[1786439])
    val call_tmp[1107701]:string[26] "dead after last mention" "maybe param" "temp" "type variable"
    const-val localChars[1107707]:string[26] "dead at end of block" "const" "insert auto destroy"
    (1107709 'move' localChars[1107707] call_tmp[1107692])
    val start[1107714]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1107716 'move' start[1107714] 0)
    ref call_tmp[1107721]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1107723 'move' call_tmp[1107721](1107726 call buffLen[757797] localX[1107685]))
    const-val call_tmp[1107729]:int(64)[13] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1108153]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1108157 'move' coerce_tmp[1108153](1108155 'deref' call_tmp[1107721]))
    (1107731 'move' call_tmp[1107729](1107734 call -[962137] coerce_tmp[1108153]))
    val end[1107737]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1107739 'move' end[1107737] call_tmp[1107729])
    const-val call_tmp[1107745]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1107747 'move' call_tmp[1107745] leading[1107554])
    if call_tmp[1107745]
    {
      {
        const-val _iterator[1107757]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108477] "dead at end of block" "expr temp" "insert auto destroy" "temp"
        const-val call_tmp[1107759]:range(int(64),bounded,false)[1026725] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1786313]:range(int(64),bounded,false)[1026725] "temp"
        (1107764 call indices[32785] x[1107547] ret_tmp[1786313])
        (1786316 'move' call_tmp[1107759] ret_tmp[1786313])
        val call_tmp[1107767]:_ic_these_range_int64_t_bounded_F[1096614] "dead at end of block" "expr temp" "maybe param" "temp"
        (1107769 'move' call_tmp[1107767](1107772 call _getIterator[1095231] call_tmp[1107759]))
        const-val call_tmp[1107774]:_ir_chpl_bytes__ref_string[1108173] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1786523]:_ir_chpl_bytes__ref_string[1108173] "temp"
        (1107782 call chpl_bytes[33574] localX[1107685] ret_tmp[1786523])
        (1786526 'move' call_tmp[1107774] ret_tmp[1786523])
        val call_tmp[1107783]:_ic_chpl_bytes__ref_string[1108167] "dead at end of block" "expr temp" "maybe param" "temp"
        (1107785 'move' call_tmp[1107783](1107788 call _getIterator[1108182] call_tmp[1107774]))
        const-val ret_tmp[1790622]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108477] "temp"
        (1107793 call _build_tuple[1108435] call_tmp[1107767] call_tmp[1107783] ret_tmp[1790622])
        (1790625 'move' _iterator[1107757] ret_tmp[1790622])
        val _iterator[1864745]:_ic_these_range_int64_t_bounded_F[1096614] "temp"
        (1864751 'move' _iterator[1864745](1864748 '.v' _iterator[1107757] x0[1108473]))
        val _iterator[1864758]:_ic_chpl_bytes__ref_string[1108167] "temp"
        (1864764 'move' _iterator[1864758](1864761 '.v' _iterator[1107757] x1[1108475]))
        {
          (1864773 call zip1[1096649] _iterator[1864745])
        }
        {
          (1864808 call zip1[1108202] _iterator[1864758])
        }
        const-val isFinished[1864834]:bool[10] "temp"
        val hasMore[1864833]:bool[10] "temp"
        CForLoop[1864881]
        {
          val _indexOfInterest[1864882]:(int(64),uint(8))[1110951] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          {
            (1864886 call zip2[1108211] _iterator[1864758])
          }
          {
            const-val retTmp[1864889]:int(64)[13] "temp"
            (1864891 'move' retTmp[1864889](1864894 call hasMore[1108238] _iterator[1864758]))
            (1864896 'move' hasMore[1864833](1864898 'cast' bool[10] retTmp[1864889]))
          }
          (1864901 'move' isFinished[1864834](1864903 '!' hasMore[1864833]))
          if isFinished[1864834]
          {
            (1864907 'chpl_error' c"zippered iterations have non-equal lengths")
          }
          {
            (1864911 'move' _index[1864926](1864914 call getValue[1108247] _iterator[1864758]))
          }
          {
            (1864918 call zip2[1096658] _iterator[1864745])
          }
          {
            (1864921 'move' _index[1864932](1864924 call getValue[1096694] _iterator[1864745]))
          }
          val _index[1864926]:uint(8)[100] "temp"
          (1864928 '.=' _indexOfInterest[1864882] x1[1110949] _index[1864926])
          val _index[1864932]:int(64)[13] "temp"
          (1864934 '.=' _indexOfInterest[1864882] x0[1110947] _index[1864932])
          1
          const-val i[1864939]:int(64)[13] "const" "index var" "insert auto destroy"
          (1864941 'move' i[1864939](1864943 '.v' _indexOfInterest[1864882] x0[1110947]))
          const-val xChar[1864946]:uint(8)[100] "const" "index var" "insert auto destroy"
          (1864948 'move' xChar[1864946](1864950 '.v' _indexOfInterest[1864882] x1[1110949]))
          {
            {
              val _indexOfInterest[1864955]:uint(8)[100] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[1864957]:_ic_chpl_bytes__ref_string[1108167] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[1864959]:_ir_chpl_bytes__ref_string[1108173] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[1864961]:_ir_chpl_bytes__ref_string[1108173] "temp"
              (1864964 call chpl_bytes[33574] localChars[1107707] ret_tmp[1864961])
              (1864967 'move' call_tmp[1864959] ret_tmp[1864961])
              (1864970 'move' _iterator[1864957](1864973 call _getIterator[1108182] call_tmp[1864959]))
              {
                val ret[1922889]:_ir_chpl_bytes__ref_string[1108173] "dead at end of block" "RVV" "temp"
                const-val call_tmp[1922891]:string[26] "dead at end of block" "maybe param" "temp"
                const-val ret_tmp[1922893]:string[26] "temp"
                ref this[1923517]:_ref(string)[937850] "temp"
                (1923522 'move' this[1923517](1923519 '.v' _iterator[1864957] F0_this[1948187]))
                (1922896 call localize[32886] this[1923517] ret_tmp[1922893])
                (1922899 'move' call_tmp[1922891] ret_tmp[1922893])
                val localThis[1922902]:string[26] "dead at end of block" "insert auto destroy"
                (1922904 'move' localThis[1922902] call_tmp[1922891])
                val _indexOfInterest[1922907]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1922909]:_ic_chpl_direct_counted_range_iter[1103701] "dead at end of block" "expr temp" "temp"
                ref call_tmp[1922911]:_ref(int(64))[936483] "dead at end of block" "maybe param" "temp"
                (1922913 'move' call_tmp[1922911](1922916 call buffLen[757797] localThis[1922902]))
                const-val call_tmp[1922918]:_ir_chpl_direct_counted_range_iter[1103707] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1922920]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1922922 'move' coerce_tmp[1922920](1922924 'deref' call_tmp[1922911]))
                const-val ret_tmp[1922926]:_ir_chpl_direct_counted_range_iter[1103707] "temp"
                (1922929 call chpl_direct_counted_range_iter[457907] 0 coerce_tmp[1922920] ret_tmp[1922926])
                (1922933 'move' call_tmp[1922918] ret_tmp[1922926])
                (1922936 'move' _iterator[1922909](1922939 call _getIterator[1103716] call_tmp[1922918]))
                val ret[1922941]:_ir_chpl_direct_counted_range_iter[1103707] "dead after last mention" "RVV" "temp"
                val _indexOfInterest[1922943]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1922945]:_ic_chpl_direct_counted_range_iter_helper[1103451] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[1922947]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[1922949]:_ir_chpl_direct_counted_range_iter_helper[1103457] "temp"
                const-val low[1922951]:int(64)[13] "temp"
                (1922953 'move' low[1922951](1922955 '.v' _iterator[1922909] F0_low[1960165]))
                const-val count[1922958]:int(64)[13] "temp"
                (1922960 'move' count[1922958](1922962 '.v' _iterator[1922909] F1_count[1960169]))
                (1922966 call chpl_direct_counted_range_iter_helper[1102009] low[1922951] count[1922958] ret_tmp[1922949])
                (1922970 'move' call_tmp[1922947] ret_tmp[1922949])
                (1922973 'move' _iterator[1922945](1922976 call _getIterator[1103466] call_tmp[1922947]))
                val ret[1922978]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead after last mention" "RVV" "temp"
                val call_tmp[1922980]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val tmp[1922982]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val tmp[1922984]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                const-val call_tmp[1922986]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[1922988]:int(64)[13] "temp"
                (1922990 'move' count[1922988](1922992 '.v' _iterator[1922945] F1_count[1964641]))
                (1922995 'move' call_tmp[1922986](1922998 call <[948309] count[1922988]))
                (1923000 'move' tmp[1922984] call_tmp[1922986])
                (1923003 'move' tmp[1922982] call_tmp[1922986])
                const-val call_tmp[1923006]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1923008 'move' call_tmp[1923006] call_tmp[1922986])
                if call_tmp[1922986]
                {
                  (1923014 call boundsCheckHalt[210079] "With a negative count, the range must have a last index.")
                }
                const-val tmp[1923017]:2*int(64)[1039967] "dead at end of block" "const" "insert auto destroy" "temp"
                val tmp[1923019]:2*int(64)[1039967] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                const-val tmp[1923021]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1923023]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[1923025]:int(64)[13] "temp"
                (1923027 'move' count[1923025](1923029 '.v' _iterator[1922945] F1_count[1964641]))
                (1923032 'move' call_tmp[1923023](1923035 call ==[435539] count[1923025] 0))
                (1923038 'move' tmp[1923021] call_tmp[1923023])
                if call_tmp[1923023]
                {
                  const-val tmp[1923043]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[1923045]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[1923047]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[1923049]:int(64)[13] "temp"
                  (1923051 'move' low[1923049](1923053 '.v' _iterator[1922945] F0_low[1964637]))
                  (1923056 'move' call_tmp[1923047](1923059 call _cast[955945] low[1923049]))
                  const-val call_tmp[1923061]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1923063]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                  (1923065 'move' coerce_tmp[1923063](1923067 'cast' uint(64)[115] 1))
                  (1923070 'move' call_tmp[1923061](1923073 call -[962104] call_tmp[1923047]))
                  const-val call_tmp[1923075]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  (1923077 'move' call_tmp[1923075](1923080 call _cast[953454] call_tmp[1923061]))
                  const-val ret_tmp[1923082]:2*int(64)[1039967] "temp"
                  const-val low[1923084]:int(64)[13] "temp"
                  (1923086 'move' low[1923084](1923088 '.v' _iterator[1922945] F0_low[1964637]))
                  (1923092 call _build_tuple[1039925] low[1923084] call_tmp[1923075] ret_tmp[1923082])
                  (1923096 'move' tmp[1923043] ret_tmp[1923082])
                  (1923099 'move' tmp[1923019] tmp[1923043])
                }
                {
                  const-val tmp[1923103]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[1923105]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[1923107]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[1923109]:int(64)[13] "temp"
                  (1923111 'move' count[1923109](1923113 '.v' _iterator[1922945] F1_count[1964641]))
                  (1923116 'move' call_tmp[1923107] count[1923109])
                  const-val call_tmp[1923119]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[1923121]:int(64)[13] "temp"
                  (1923123 'move' count[1923121](1923125 '.v' _iterator[1922945] F1_count[1964641]))
                  (1923128 'move' call_tmp[1923119](1923131 call -[962137] count[1923121]))
                  const-val call_tmp[1923133]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[1923135]:int(64)[13] "temp"
                  (1923137 'move' low[1923135](1923139 '.v' _iterator[1922945] F0_low[1964637]))
                  (1923142 'move' call_tmp[1923133](1923145 call +[439547] low[1923135] call_tmp[1923119]))
                  const-val ret_tmp[1923148]:2*int(64)[1039967] "temp"
                  const-val low[1923150]:int(64)[13] "temp"
                  (1923152 'move' low[1923150](1923154 '.v' _iterator[1922945] F0_low[1964637]))
                  (1923158 call _build_tuple[1039925] low[1923150] call_tmp[1923133] ret_tmp[1923148])
                  (1923162 'move' tmp[1923103] ret_tmp[1923148])
                  (1923165 'move' tmp[1923019] tmp[1923103])
                }
                (1923169 '=' tmp[1923017] tmp[1923019])
                (1923172 'noop')
                1
                ref call_tmp[1923174]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1923176 'move' call_tmp[1923174](1923178 '.' tmp[1923017] x0[1039963]))
                const-val start[1923181]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1923183]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (1923185 'move' coerce_tmp[1923183](1923187 'deref' call_tmp[1923174]))
                (1923189 '=' start[1923181] coerce_tmp[1923183])
                (1923192 'noop')
                ref call_tmp[1923193]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1923195 'move' call_tmp[1923193](1923197 '.' tmp[1923017] x1[1039965]))
                const-val end[1923200]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1923202]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (1923204 'move' coerce_tmp[1923202](1923206 'deref' call_tmp[1923193]))
                (1923208 '=' end[1923200] coerce_tmp[1923202])
                (1923211 'noop')
                val _indexOfInterest[1923212]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1923214]:_ic_chpl_direct_param_stride_range_iter[1103197] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[1923216]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[1923218]:_ir_chpl_direct_param_stride_range_iter[1103203] "temp"
                (1923221 call chpl_direct_param_stride_range_iter[1102435] coerce_tmp[1923183] coerce_tmp[1923202] ret_tmp[1923218])
                (1923225 'move' call_tmp[1923216] ret_tmp[1923218])
                (1923228 'move' _iterator[1923214](1923231 call _getIterator[1103212] call_tmp[1923216]))
                val ret[1923233]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead after last mention" "RVV" "temp"
                val call_tmp[1923235]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1923238 call chpl_range_check_stride[1102755])
                val i[1923239]:int(64)[13] "dead at end of block" "insert auto destroy"
                val call_tmp[1923241]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1923243 'move' i[1923239] 0)
                val call_tmp[1923246]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val default_arg_first[1923248]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val low[1923250]:int(64)[13] "temp"
                (1923252 'move' low[1923250](1923254 '.v' _iterator[1923214] F0_low[1966135]))
                (1923257 'move' default_arg_first[1923248](1923260 call chpl_checkIfRangeIterWillOverflow_default_first[1103109] low[1923250]))
                const-val default_arg_last[1923262]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val high[1923264]:int(64)[13] "temp"
                (1923266 'move' high[1923264](1923268 '.v' _iterator[1923214] F1_high[1966139]))
                (1923271 'move' default_arg_last[1923262](1923274 call chpl_checkIfRangeIterWillOverflow_default_last[1103137] high[1923264]))
                const-val _return_tmp_[1923276]:bool[10] "dead after last mention" "temp"
                const-val low[1923278]:int(64)[13] "temp"
                (1923280 'move' low[1923278](1923282 '.v' _iterator[1923214] F0_low[1966135]))
                const-val high[1923285]:int(64)[13] "temp"
                (1923287 'move' high[1923285](1923289 '.v' _iterator[1923214] F1_high[1966139]))
                (1923292 'move' _return_tmp_[1923276](1923295 call chpl_checkIfRangeIterWillOverflow[1095987] low[1923278] high[1923285] 1 default_arg_first[1923248] default_arg_last[1923262] 1))
                CForLoop[1923302]
                {
                  const-val yret[1923331]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (1923333 'move' yret[1923331] i[1923239])
                  const-val _yieldedIndex[1923336]:int(64)[13] "temp"
                  (1923338 'move' _yieldedIndex[1923336] i[1923239])
                  const-val i[1923341]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1923343 'move' i[1923341] _yieldedIndex[1923336])
                  const-val yret[1923346]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (1923348 'move' yret[1923346] _yieldedIndex[1923336])
                  const-val _yieldedIndex[1923351]:int(64)[13] "temp"
                  (1923353 'move' _yieldedIndex[1923351] _yieldedIndex[1923336])
                  const-val i[1923356]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1923358 'move' i[1923356] _yieldedIndex[1923351])
                  const-val yret[1923361]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (1923363 'move' yret[1923361] _yieldedIndex[1923351])
                  const-val _yieldedIndex[1923366]:int(64)[13] "temp"
                  (1923368 'move' _yieldedIndex[1923366] _yieldedIndex[1923351])
                  const-val i[1923371]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1923373 'move' i[1923371] _yieldedIndex[1923366])
                  const-val yret[1923376]:uint(8)[100] "dead after last mention" "YVV" "temp"
                  ref call_tmp[1923378]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[1923380]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "temp"
                  (1923382 'move' _this_tmp_[1923380](1923385 call buff[757875] localThis[1922902]))
                  val coerce_tmp[1923387]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1923389 'move' coerce_tmp[1923387](1923391 'deref' _this_tmp_[1923380]))
                  (1923393 'move' call_tmp[1923378](1923396 call this[954002] coerce_tmp[1923387] _yieldedIndex[1923366]))
                  const-val coerce_tmp[1923399]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                  (1923401 'move' coerce_tmp[1923399](1923403 'deref' call_tmp[1923378]))
                  (1923405 '=' yret[1923376] coerce_tmp[1923399])
                  (1923408 'noop')
                  const-val _yieldedIndex[1923456]:uint(8)[100] "temp"
                  (1923515 'move' _yieldedIndex[1923456] coerce_tmp[1923399])
                  {
                    const-val removeChar[1923458]:uint(8)[100] "const" "index var" "insert auto destroy"
                    (1923460 'move' removeChar[1923458] _yieldedIndex[1923456])
                    {
                      const-val call_tmp[1923464]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1923466 'move' call_tmp[1923464](1923469 call ==[435561] xChar[1864946] removeChar[1923458]))
                      const-val call_tmp[1923472]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1923474 'move' call_tmp[1923472] call_tmp[1923464])
                      if call_tmp[1923472]
                      {
                        const-val call_tmp[1923479]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1923481 'move' call_tmp[1923479](1923484 call +[949577] i[1864939]))
                        (1923487 call =[435238] start[1107714] call_tmp[1923479])
                        (1923500 call _freeIterator[1103385] _iterator[1923214])
                        (1923503 call chpl__autoDestroy[1567619] tmp[1923017])
                        (1923506 call _freeIterator[1103635] _iterator[1922945])
                        (1923509 call _freeIterator[1103885] _iterator[1922909])
                        (1923512 call chpl__autoDestroy[1494420] localThis[1922902])
                        (1923491 call _freeIterator[1109480] _iterator[1864957])
                        continue _continueLabel[1865025] _continueLabel[1865025]
                      }
                    }
                    label _continueLabel[1923496]
                  }
                  {
                    const-val low[1923304]:int(64)[13] "temp"
                    (1923306 'move' low[1923304](1923308 '.v' _iterator[1923214] F0_low[1966135]))
                    (1923311 '=' i[1923239] low[1923304])
                  }
                  {
                    const-val high[1923315]:int(64)[13] "temp"
                    (1923317 'move' high[1923315](1923319 '.v' _iterator[1923214] F1_high[1966139]))
                    (1923322 '<=' i[1923239] high[1923315])
                  }
                  {
                    val call_tmp[1923326]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    (1923328 '+=' i[1923239] 1)
                  }
                }
                label _endchpl_direct_param_stride_range_iter[1923431]
                (1923434 call _freeIterator[1103385] _iterator[1923214])
                (1923437 call chpl__autoDestroy[1567619] tmp[1923017])
                label _endchpl_direct_counted_range_iter_helper[1923439]
                (1923442 call _freeIterator[1103635] _iterator[1922945])
                label _endchpl_direct_counted_range_iter[1923444]
                (1923447 call _freeIterator[1103885] _iterator[1922909])
                (1923450 call chpl__autoDestroy[1494420] localThis[1922902])
                label _endchpl_bytes[1923452]
              }
              label _breakLabel[1865018]
              (1865021 call _freeIterator[1109480] _iterator[1864957])
            }
            ref moreRef1[1865085]:_ref(int(64))[936483] "temp"
            (1865087 'move' moreRef1[1865085](1865089 '.' _iterator[1864745] more[1096617]))
            const-val moreVal1[1865092]:int(64)[13] "const" "temp"
            (1865094 '=' moreVal1[1865092] moreRef1[1865085])
            const-val moreValNeg1[1865097]:int(64)[13] "const" "temp"
            (1865099 'move' moreValNeg1[1865097](1865101 'u-' moreVal1[1865092]))
            (1865103 '=' moreRef1[1865085] moreValNeg1[1865097])
            (1865107 call advance[1096640] _iterator[1864745])
            ref moreRef2[1865109]:_ref(int(64))[936483] "temp"
            (1865111 'move' moreRef2[1865109](1865113 '.' _iterator[1864758] more[1108170]))
            const-val moreVal2[1865116]:int(64)[13] "const" "temp"
            (1865118 '=' moreVal2[1865116] moreRef2[1865109])
            const-val moreValNeg2[1865121]:int(64)[13] "const" "temp"
            (1865123 'move' moreValNeg2[1865121](1865125 'u-' moreVal2[1865116]))
            (1865127 '=' moreRef2[1865109] moreValNeg2[1865121])
            (1865131 call advance[1108193] _iterator[1864758])
            break _breakLabel[1107921] _breakLabel[1107921]
          }
          label _continueLabel[1865025]
          {
            (1865029 call zip3[1096667] _iterator[1864745])
          }
          {
            (1865033 call zip3[1108220] _iterator[1864758])
          }
          {
            {
              (1864783 call init[1096703] _iterator[1864745])
            }
            {
              (1864818 call init[1108256] _iterator[1864758])
            }
          }
          {
            (1864799 call hasMore[1096685] _iterator[1864745])
          }
          {
            {
              (1864787 call incr[1096712] _iterator[1864745])
            }
            {
              (1864822 call incr[1108265] _iterator[1864758])
            }
          }
        }
        {
          const-val retTmp[1864868]:int(64)[13] "temp"
          (1864870 'move' retTmp[1864868](1864865 call hasMore[1108238] _iterator[1864758]))
          (1864875 'move' hasMore[1864833](1864872 'cast' bool[10] retTmp[1864868]))
        }
        if hasMore[1864833]
        {
          (1864860 'chpl_error' c"zippered iterations have non-equal lengths")
        }
        {
          (1864830 call zip4[1108229] _iterator[1864758])
        }
        {
          (1864795 call zip4[1096676] _iterator[1864745])
        }
        label _breakLabel[1107921]
        (1800918 call _freeIterator[1108635] _iterator[1107757])
        (1800920 call chpl__autoDestroy[1574364] _iterator[1107757])
        (1800923 call chpl__autoDestroy[1567322] call_tmp[1107759])
      }
    }
    const-val call_tmp[1107924]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1107926 'move' call_tmp[1107924] trailing[1107556])
    if call_tmp[1107924]
    {
      (1107941 call =[435238] end[1107737] -1)
      {
        const-val _iterator[1107949]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108477] "dead at end of block" "expr temp" "insert auto destroy" "temp"
        const-val call_tmp[1107951]:range(int(64),bounded,false)[1026725] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1786319]:range(int(64),bounded,false)[1026725] "temp"
        (1107956 call indices[32785] x[1107547] ret_tmp[1786319])
        (1786322 'move' call_tmp[1107951] ret_tmp[1786319])
        val call_tmp[1107959]:_ic_these_range_int64_t_bounded_F[1096614] "dead at end of block" "expr temp" "maybe param" "temp"
        (1107961 'move' call_tmp[1107959](1107964 call _getIterator[1095231] call_tmp[1107951]))
        const-val call_tmp[1107966]:_ir_chpl_bytes__ref_string[1108173] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1786535]:_ir_chpl_bytes__ref_string[1108173] "temp"
        (1107974 call chpl_bytes[33574] localX[1107685] ret_tmp[1786535])
        (1786538 'move' call_tmp[1107966] ret_tmp[1786535])
        val call_tmp[1107975]:_ic_chpl_bytes__ref_string[1108167] "dead at end of block" "expr temp" "maybe param" "temp"
        (1107977 'move' call_tmp[1107975](1107980 call _getIterator[1108182] call_tmp[1107966]))
        const-val ret_tmp[1790628]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108477] "temp"
        (1107985 call _build_tuple[1108435] call_tmp[1107959] call_tmp[1107975] ret_tmp[1790628])
        (1790631 'move' _iterator[1107949] ret_tmp[1790628])
        val _iterator[1865135]:_ic_these_range_int64_t_bounded_F[1096614] "temp"
        (1865141 'move' _iterator[1865135](1865138 '.v' _iterator[1107949] x0[1108473]))
        val _iterator[1865148]:_ic_chpl_bytes__ref_string[1108167] "temp"
        (1865154 'move' _iterator[1865148](1865151 '.v' _iterator[1107949] x1[1108475]))
        {
          (1865163 call zip1[1096649] _iterator[1865135])
        }
        {
          (1865198 call zip1[1108202] _iterator[1865148])
        }
        const-val isFinished[1865224]:bool[10] "temp"
        val hasMore[1865223]:bool[10] "temp"
        CForLoop[1865271]
        {
          val _indexOfInterest[1865272]:(int(64),uint(8))[1110951] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          {
            (1865276 call zip2[1108211] _iterator[1865148])
          }
          {
            const-val retTmp[1865279]:int(64)[13] "temp"
            (1865281 'move' retTmp[1865279](1865284 call hasMore[1108238] _iterator[1865148]))
            (1865286 'move' hasMore[1865223](1865288 'cast' bool[10] retTmp[1865279]))
          }
          (1865291 'move' isFinished[1865224](1865293 '!' hasMore[1865223]))
          if isFinished[1865224]
          {
            (1865297 'chpl_error' c"zippered iterations have non-equal lengths")
          }
          {
            (1865301 'move' _index[1865316](1865304 call getValue[1108247] _iterator[1865148]))
          }
          {
            (1865308 call zip2[1096658] _iterator[1865135])
          }
          {
            (1865311 'move' _index[1865322](1865314 call getValue[1096694] _iterator[1865135]))
          }
          val _index[1865316]:uint(8)[100] "temp"
          (1865318 '.=' _indexOfInterest[1865272] x1[1110949] _index[1865316])
          val _index[1865322]:int(64)[13] "temp"
          (1865324 '.=' _indexOfInterest[1865272] x0[1110947] _index[1865322])
          1
          const-val i[1865329]:int(64)[13] "const" "index var" "insert auto destroy"
          (1865331 'move' i[1865329](1865333 '.v' _indexOfInterest[1865272] x0[1110947]))
          const-val xChar[1865336]:uint(8)[100] "const" "index var" "insert auto destroy"
          (1865338 'move' xChar[1865336](1865340 '.v' _indexOfInterest[1865272] x1[1110949]))
          {
            {
              val _indexOfInterest[1865345]:uint(8)[100] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[1865347]:_ic_chpl_bytes__ref_string[1108167] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[1865349]:_ir_chpl_bytes__ref_string[1108173] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[1865351]:_ir_chpl_bytes__ref_string[1108173] "temp"
              (1865354 call chpl_bytes[33574] localChars[1107707] ret_tmp[1865351])
              (1865357 'move' call_tmp[1865349] ret_tmp[1865351])
              (1865360 'move' _iterator[1865347](1865363 call _getIterator[1108182] call_tmp[1865349]))
              {
                val ret[1923525]:_ir_chpl_bytes__ref_string[1108173] "dead at end of block" "RVV" "temp"
                const-val call_tmp[1923527]:string[26] "dead at end of block" "maybe param" "temp"
                const-val ret_tmp[1923529]:string[26] "temp"
                ref this[1924142]:_ref(string)[937850] "temp"
                (1924147 'move' this[1924142](1924144 '.v' _iterator[1865347] F0_this[1948187]))
                (1923532 call localize[32886] this[1924142] ret_tmp[1923529])
                (1923535 'move' call_tmp[1923527] ret_tmp[1923529])
                val localThis[1923538]:string[26] "dead at end of block" "insert auto destroy"
                (1923540 'move' localThis[1923538] call_tmp[1923527])
                val _indexOfInterest[1923543]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1923545]:_ic_chpl_direct_counted_range_iter[1103701] "dead at end of block" "expr temp" "temp"
                ref call_tmp[1923547]:_ref(int(64))[936483] "dead at end of block" "maybe param" "temp"
                (1923549 'move' call_tmp[1923547](1923552 call buffLen[757797] localThis[1923538]))
                const-val call_tmp[1923554]:_ir_chpl_direct_counted_range_iter[1103707] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1923556]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1923558 'move' coerce_tmp[1923556](1923560 'deref' call_tmp[1923547]))
                const-val ret_tmp[1923562]:_ir_chpl_direct_counted_range_iter[1103707] "temp"
                (1923565 call chpl_direct_counted_range_iter[457907] 0 coerce_tmp[1923556] ret_tmp[1923562])
                (1923569 'move' call_tmp[1923554] ret_tmp[1923562])
                (1923572 'move' _iterator[1923545](1923575 call _getIterator[1103716] call_tmp[1923554]))
                val ret[1923577]:_ir_chpl_direct_counted_range_iter[1103707] "dead after last mention" "RVV" "temp"
                val _indexOfInterest[1923579]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1923581]:_ic_chpl_direct_counted_range_iter_helper[1103451] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[1923583]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[1923585]:_ir_chpl_direct_counted_range_iter_helper[1103457] "temp"
                const-val low[1923587]:int(64)[13] "temp"
                (1923589 'move' low[1923587](1923591 '.v' _iterator[1923545] F0_low[1960165]))
                const-val count[1923594]:int(64)[13] "temp"
                (1923596 'move' count[1923594](1923598 '.v' _iterator[1923545] F1_count[1960169]))
                (1923602 call chpl_direct_counted_range_iter_helper[1102009] low[1923587] count[1923594] ret_tmp[1923585])
                (1923606 'move' call_tmp[1923583] ret_tmp[1923585])
                (1923609 'move' _iterator[1923581](1923612 call _getIterator[1103466] call_tmp[1923583]))
                val ret[1923614]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead after last mention" "RVV" "temp"
                val call_tmp[1923616]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val tmp[1923618]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val tmp[1923620]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                const-val call_tmp[1923622]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[1923624]:int(64)[13] "temp"
                (1923626 'move' count[1923624](1923628 '.v' _iterator[1923581] F1_count[1964641]))
                (1923631 'move' call_tmp[1923622](1923634 call <[948309] count[1923624]))
                (1923636 'move' tmp[1923620] call_tmp[1923622])
                (1923639 'move' tmp[1923618] call_tmp[1923622])
                const-val call_tmp[1923642]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1923644 'move' call_tmp[1923642] call_tmp[1923622])
                if call_tmp[1923622]
                {
                  (1923650 call boundsCheckHalt[210079] "With a negative count, the range must have a last index.")
                }
                const-val tmp[1923653]:2*int(64)[1039967] "dead at end of block" "const" "insert auto destroy" "temp"
                val tmp[1923655]:2*int(64)[1039967] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                const-val tmp[1923657]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1923659]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[1923661]:int(64)[13] "temp"
                (1923663 'move' count[1923661](1923665 '.v' _iterator[1923581] F1_count[1964641]))
                (1923668 'move' call_tmp[1923659](1923671 call ==[435539] count[1923661] 0))
                (1923674 'move' tmp[1923657] call_tmp[1923659])
                if call_tmp[1923659]
                {
                  const-val tmp[1923679]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[1923681]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[1923683]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[1923685]:int(64)[13] "temp"
                  (1923687 'move' low[1923685](1923689 '.v' _iterator[1923581] F0_low[1964637]))
                  (1923692 'move' call_tmp[1923683](1923695 call _cast[955945] low[1923685]))
                  const-val call_tmp[1923697]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1923699]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                  (1923701 'move' coerce_tmp[1923699](1923703 'cast' uint(64)[115] 1))
                  (1923706 'move' call_tmp[1923697](1923709 call -[962104] call_tmp[1923683]))
                  const-val call_tmp[1923711]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  (1923713 'move' call_tmp[1923711](1923716 call _cast[953454] call_tmp[1923697]))
                  const-val ret_tmp[1923718]:2*int(64)[1039967] "temp"
                  const-val low[1923720]:int(64)[13] "temp"
                  (1923722 'move' low[1923720](1923724 '.v' _iterator[1923581] F0_low[1964637]))
                  (1923728 call _build_tuple[1039925] low[1923720] call_tmp[1923711] ret_tmp[1923718])
                  (1923732 'move' tmp[1923679] ret_tmp[1923718])
                  (1923735 'move' tmp[1923655] tmp[1923679])
                }
                {
                  const-val tmp[1923739]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[1923741]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[1923743]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[1923745]:int(64)[13] "temp"
                  (1923747 'move' count[1923745](1923749 '.v' _iterator[1923581] F1_count[1964641]))
                  (1923752 'move' call_tmp[1923743] count[1923745])
                  const-val call_tmp[1923755]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[1923757]:int(64)[13] "temp"
                  (1923759 'move' count[1923757](1923761 '.v' _iterator[1923581] F1_count[1964641]))
                  (1923764 'move' call_tmp[1923755](1923767 call -[962137] count[1923757]))
                  const-val call_tmp[1923769]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[1923771]:int(64)[13] "temp"
                  (1923773 'move' low[1923771](1923775 '.v' _iterator[1923581] F0_low[1964637]))
                  (1923778 'move' call_tmp[1923769](1923781 call +[439547] low[1923771] call_tmp[1923755]))
                  const-val ret_tmp[1923784]:2*int(64)[1039967] "temp"
                  const-val low[1923786]:int(64)[13] "temp"
                  (1923788 'move' low[1923786](1923790 '.v' _iterator[1923581] F0_low[1964637]))
                  (1923794 call _build_tuple[1039925] low[1923786] call_tmp[1923769] ret_tmp[1923784])
                  (1923798 'move' tmp[1923739] ret_tmp[1923784])
                  (1923801 'move' tmp[1923655] tmp[1923739])
                }
                (1923805 '=' tmp[1923653] tmp[1923655])
                (1923808 'noop')
                1
                ref call_tmp[1923810]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1923812 'move' call_tmp[1923810](1923814 '.' tmp[1923653] x0[1039963]))
                const-val start[1923817]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1923819]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (1923821 'move' coerce_tmp[1923819](1923823 'deref' call_tmp[1923810]))
                (1923825 '=' start[1923817] coerce_tmp[1923819])
                (1923828 'noop')
                ref call_tmp[1923829]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1923831 'move' call_tmp[1923829](1923833 '.' tmp[1923653] x1[1039965]))
                const-val end[1923836]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1923838]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (1923840 'move' coerce_tmp[1923838](1923842 'deref' call_tmp[1923829]))
                (1923844 '=' end[1923836] coerce_tmp[1923838])
                (1923847 'noop')
                val _indexOfInterest[1923848]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1923850]:_ic_chpl_direct_param_stride_range_iter[1103197] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[1923852]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[1923854]:_ir_chpl_direct_param_stride_range_iter[1103203] "temp"
                (1923857 call chpl_direct_param_stride_range_iter[1102435] coerce_tmp[1923819] coerce_tmp[1923838] ret_tmp[1923854])
                (1923861 'move' call_tmp[1923852] ret_tmp[1923854])
                (1923864 'move' _iterator[1923850](1923867 call _getIterator[1103212] call_tmp[1923852]))
                val ret[1923869]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead after last mention" "RVV" "temp"
                val call_tmp[1923871]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1923874 call chpl_range_check_stride[1102755])
                val i[1923875]:int(64)[13] "dead at end of block" "insert auto destroy"
                val call_tmp[1923877]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1923879 'move' i[1923875] 0)
                val call_tmp[1923882]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val default_arg_first[1923884]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val low[1923886]:int(64)[13] "temp"
                (1923888 'move' low[1923886](1923890 '.v' _iterator[1923850] F0_low[1966135]))
                (1923893 'move' default_arg_first[1923884](1923896 call chpl_checkIfRangeIterWillOverflow_default_first[1103109] low[1923886]))
                const-val default_arg_last[1923898]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val high[1923900]:int(64)[13] "temp"
                (1923902 'move' high[1923900](1923904 '.v' _iterator[1923850] F1_high[1966139]))
                (1923907 'move' default_arg_last[1923898](1923910 call chpl_checkIfRangeIterWillOverflow_default_last[1103137] high[1923900]))
                const-val _return_tmp_[1923912]:bool[10] "dead after last mention" "temp"
                const-val low[1923914]:int(64)[13] "temp"
                (1923916 'move' low[1923914](1923918 '.v' _iterator[1923850] F0_low[1966135]))
                const-val high[1923921]:int(64)[13] "temp"
                (1923923 'move' high[1923921](1923925 '.v' _iterator[1923850] F1_high[1966139]))
                (1923928 'move' _return_tmp_[1923912](1923931 call chpl_checkIfRangeIterWillOverflow[1095987] low[1923914] high[1923921] 1 default_arg_first[1923884] default_arg_last[1923898] 1))
                CForLoop[1923938]
                {
                  const-val yret[1923967]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (1923969 'move' yret[1923967] i[1923875])
                  const-val _yieldedIndex[1923972]:int(64)[13] "temp"
                  (1923974 'move' _yieldedIndex[1923972] i[1923875])
                  const-val i[1923977]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1923979 'move' i[1923977] _yieldedIndex[1923972])
                  const-val yret[1923982]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (1923984 'move' yret[1923982] _yieldedIndex[1923972])
                  const-val _yieldedIndex[1923987]:int(64)[13] "temp"
                  (1923989 'move' _yieldedIndex[1923987] _yieldedIndex[1923972])
                  const-val i[1923992]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1923994 'move' i[1923992] _yieldedIndex[1923987])
                  const-val yret[1923997]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (1923999 'move' yret[1923997] _yieldedIndex[1923987])
                  const-val _yieldedIndex[1924002]:int(64)[13] "temp"
                  (1924004 'move' _yieldedIndex[1924002] _yieldedIndex[1923987])
                  const-val i[1924007]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1924009 'move' i[1924007] _yieldedIndex[1924002])
                  const-val yret[1924012]:uint(8)[100] "dead after last mention" "YVV" "temp"
                  ref call_tmp[1924014]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[1924016]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "temp"
                  (1924018 'move' _this_tmp_[1924016](1924021 call buff[757875] localThis[1923538]))
                  val coerce_tmp[1924023]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1924025 'move' coerce_tmp[1924023](1924027 'deref' _this_tmp_[1924016]))
                  (1924029 'move' call_tmp[1924014](1924032 call this[954002] coerce_tmp[1924023] _yieldedIndex[1924002]))
                  const-val coerce_tmp[1924035]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                  (1924037 'move' coerce_tmp[1924035](1924039 'deref' call_tmp[1924014]))
                  (1924041 '=' yret[1924012] coerce_tmp[1924035])
                  (1924044 'noop')
                  const-val _yieldedIndex[1924092]:uint(8)[100] "temp"
                  (1924140 'move' _yieldedIndex[1924092] coerce_tmp[1924035])
                  {
                    const-val removeChar[1924094]:uint(8)[100] "const" "index var" "insert auto destroy"
                    (1924096 'move' removeChar[1924094] _yieldedIndex[1924092])
                    {
                      const-val call_tmp[1924100]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1924102 'move' call_tmp[1924100](1924105 call ==[435561] xChar[1865336] removeChar[1924094]))
                      const-val call_tmp[1924108]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1924110 'move' call_tmp[1924108] call_tmp[1924100])
                      if call_tmp[1924108]
                      {
                        (1924125 call _freeIterator[1103385] _iterator[1923850])
                        (1924128 call chpl__autoDestroy[1567619] tmp[1923653])
                        (1924131 call _freeIterator[1103635] _iterator[1923581])
                        (1924134 call _freeIterator[1103885] _iterator[1923545])
                        (1924137 call chpl__autoDestroy[1494420] localThis[1923538])
                        (1924116 call _freeIterator[1109480] _iterator[1865347])
                        continue _continueLabel[1865406] _continueLabel[1865406]
                      }
                    }
                    label _continueLabel[1924121]
                  }
                  {
                    const-val low[1923940]:int(64)[13] "temp"
                    (1923942 'move' low[1923940](1923944 '.v' _iterator[1923850] F0_low[1966135]))
                    (1923947 '=' i[1923875] low[1923940])
                  }
                  {
                    const-val high[1923951]:int(64)[13] "temp"
                    (1923953 'move' high[1923951](1923955 '.v' _iterator[1923850] F1_high[1966139]))
                    (1923958 '<=' i[1923875] high[1923951])
                  }
                  {
                    val call_tmp[1923962]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    (1923964 '+=' i[1923875] 1)
                  }
                }
                label _endchpl_direct_param_stride_range_iter[1924067]
                (1924070 call _freeIterator[1103385] _iterator[1923850])
                (1924073 call chpl__autoDestroy[1567619] tmp[1923653])
                label _endchpl_direct_counted_range_iter_helper[1924075]
                (1924078 call _freeIterator[1103635] _iterator[1923581])
                label _endchpl_direct_counted_range_iter[1924080]
                (1924083 call _freeIterator[1103885] _iterator[1923545])
                (1924086 call chpl__autoDestroy[1494420] localThis[1923538])
                label _endchpl_bytes[1924088]
              }
              label _breakLabel[1865397]
              (1865400 call _freeIterator[1109480] _iterator[1865347])
            }
            (1865403 call =[435238] end[1107737] i[1865329])
          }
          label _continueLabel[1865406]
          {
            (1865410 call zip3[1096667] _iterator[1865135])
          }
          {
            (1865414 call zip3[1108220] _iterator[1865148])
          }
          {
            {
              (1865173 call init[1096703] _iterator[1865135])
            }
            {
              (1865208 call init[1108256] _iterator[1865148])
            }
          }
          {
            (1865189 call hasMore[1096685] _iterator[1865135])
          }
          {
            {
              (1865177 call incr[1096712] _iterator[1865135])
            }
            {
              (1865212 call incr[1108265] _iterator[1865148])
            }
          }
        }
        {
          const-val retTmp[1865258]:int(64)[13] "temp"
          (1865260 'move' retTmp[1865258](1865255 call hasMore[1108238] _iterator[1865148]))
          (1865265 'move' hasMore[1865223](1865262 'cast' bool[10] retTmp[1865258]))
        }
        if hasMore[1865223]
        {
          (1865250 'chpl_error' c"zippered iterations have non-equal lengths")
        }
        {
          (1865220 call zip4[1108229] _iterator[1865148])
        }
        {
          (1865185 call zip4[1096676] _iterator[1865135])
        }
        label _breakLabel[1108103]
        (1800938 call _freeIterator[1108635] _iterator[1107949])
        (1800940 call chpl__autoDestroy[1574364] _iterator[1107949])
        (1800943 call chpl__autoDestroy[1567322] call_tmp[1107951])
      }
    }
    const-val call_tmp[1108106]:range(int(64),bounded,false)[1026725] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1788439]:range(int(64),bounded,false)[1026725] "temp"
    (1108111 call chpl_build_bounded_range[455048] start[1107714] end[1107737] ret_tmp[1788439])
    (1788442 'move' call_tmp[1108106] ret_tmp[1788439])
    const-val call_tmp[1108114]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1790730]:string[26] "temp"
    (1108119 call this[1111277] localX[1107685] call_tmp[1108106] ret_tmp[1790730])
    (1790733 'move' call_tmp[1108114] ret_tmp[1790730])
    val call_tmp[1108121]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1121914 'move' ret[1107561] call_tmp[1108114])
    (1800946 call chpl__autoDestroy[1567322] call_tmp[1108106])
    (1800949 call chpl__autoDestroy[1494420] localChars[1107707])
    (1800952 call chpl__autoDestroy[1494420] localX[1107685])
    gotoReturn _end_doStripNoEnc[1108138] _end_doStripNoEnc[1108138]
    label _end_doStripNoEnc[1108138]
    (1790610 '=' _retArg[1790608] ret[1107561])
    (1790614 return _void[55])
  }
  function doEq[1206127](const  ref arg a[1206129]:string[26], const  ref arg b[1206131]:string[26]) : bool[10] "inline" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1206133]:bool[10] "dead after last mention" "RVV" "temp"
    val call_tmp[1206143]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1206154]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[1206165]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1206167 'move' call_tmp[1206165](1206170 call buff[757875] a[1206129]))
    ref call_tmp[1206173]:_ref(int(64))[936483] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1206175 'move' call_tmp[1206173](1206178 call buffLen[757797] a[1206129]))
    ref call_tmp[1206181]:_ref(int(32))[936537] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1206183 'move' call_tmp[1206181](1206186 call locale_id[757953] a[1206129]))
    ref call_tmp[1206189]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1206191 'move' call_tmp[1206189](1206194 call buff[757875] b[1206131]))
    ref call_tmp[1206197]:_ref(int(64))[936483] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1206199 'move' call_tmp[1206197](1206202 call buffLen[757797] b[1206131]))
    ref call_tmp[1206205]:_ref(int(32))[936537] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1206207 'move' call_tmp[1206205](1206210 call locale_id[757953] b[1206131]))
    const-val call_tmp[1206213]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1206313]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1206317 'move' coerce_tmp[1206313](1206315 'deref' call_tmp[1206165]))
    const-val coerce_tmp[1206319]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1206323 'move' coerce_tmp[1206319](1206321 'deref' call_tmp[1206173]))
    const-val coerce_tmp[1206325]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1206329 'move' coerce_tmp[1206325](1206327 'deref' call_tmp[1206181]))
    val coerce_tmp[1206331]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1206335 'move' coerce_tmp[1206331](1206333 'deref' call_tmp[1206189]))
    const-val coerce_tmp[1206337]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1206341 'move' coerce_tmp[1206337](1206339 'deref' call_tmp[1206197]))
    const-val coerce_tmp[1206343]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1206347 'move' coerce_tmp[1206343](1206345 'deref' call_tmp[1206205]))
    (1206215 'move' call_tmp[1206213](1206218 call _strcmp[173438] coerce_tmp[1206313] coerce_tmp[1206319] coerce_tmp[1206325] coerce_tmp[1206331] coerce_tmp[1206337] coerce_tmp[1206343]))
    const-val call_tmp[1206225]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1206227 'move' call_tmp[1206225](1206230 call ==[435539] call_tmp[1206213] 0))
    (1206233 'move' ret[1206133] call_tmp[1206225])
    (1206237 return ret[1206133])
  }
  function doLessThan[1728318](const  ref arg a[1728320]:string[26], const  ref arg b[1728322]:string[26]) : bool[10] "inline" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1728324]:bool[10] "dead after last mention" "RVV" "temp"
    val call_tmp[1728334]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1728345]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[1728356]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1728358 'move' call_tmp[1728356](1728361 call buff[757875] a[1728320]))
    ref call_tmp[1728364]:_ref(int(64))[936483] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1728366 'move' call_tmp[1728364](1728369 call buffLen[757797] a[1728320]))
    ref call_tmp[1728372]:_ref(int(32))[936537] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1728374 'move' call_tmp[1728372](1728377 call locale_id[757953] a[1728320]))
    ref call_tmp[1728380]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1728382 'move' call_tmp[1728380](1728385 call buff[757875] b[1728322]))
    ref call_tmp[1728388]:_ref(int(64))[936483] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1728390 'move' call_tmp[1728388](1728393 call buffLen[757797] b[1728322]))
    ref call_tmp[1728396]:_ref(int(32))[936537] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1728398 'move' call_tmp[1728396](1728401 call locale_id[757953] b[1728322]))
    const-val call_tmp[1728404]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1728441]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1728445 'move' coerce_tmp[1728441](1728443 'deref' call_tmp[1728356]))
    const-val coerce_tmp[1728447]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1728451 'move' coerce_tmp[1728447](1728449 'deref' call_tmp[1728364]))
    const-val coerce_tmp[1728453]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1728457 'move' coerce_tmp[1728453](1728455 'deref' call_tmp[1728372]))
    val coerce_tmp[1728459]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1728463 'move' coerce_tmp[1728459](1728461 'deref' call_tmp[1728380]))
    const-val coerce_tmp[1728465]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1728469 'move' coerce_tmp[1728465](1728467 'deref' call_tmp[1728388]))
    const-val coerce_tmp[1728471]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1728475 'move' coerce_tmp[1728471](1728473 'deref' call_tmp[1728396]))
    (1728406 'move' call_tmp[1728404](1728409 call _strcmp[173438] coerce_tmp[1728441] coerce_tmp[1728447] coerce_tmp[1728453] coerce_tmp[1728459] coerce_tmp[1728465] coerce_tmp[1728471]))
    const-val call_tmp[1728416]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1728418 'move' call_tmp[1728416](1728421 call <[948309] call_tmp[1728404]))
    (1728424 'move' ret[1728324] call_tmp[1728416])
    (1728428 return ret[1728324])
  }
  function doGreaterThan[1728490](const  ref arg a[1728492]:string[26], const  ref arg b[1728494]:string[26]) : bool[10] "inline" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1728496]:bool[10] "dead after last mention" "RVV" "temp"
    val call_tmp[1728506]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1728517]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[1728528]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1728530 'move' call_tmp[1728528](1728533 call buff[757875] a[1728492]))
    ref call_tmp[1728536]:_ref(int(64))[936483] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1728538 'move' call_tmp[1728536](1728541 call buffLen[757797] a[1728492]))
    ref call_tmp[1728544]:_ref(int(32))[936537] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1728546 'move' call_tmp[1728544](1728549 call locale_id[757953] a[1728492]))
    ref call_tmp[1728552]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1728554 'move' call_tmp[1728552](1728557 call buff[757875] b[1728494]))
    ref call_tmp[1728560]:_ref(int(64))[936483] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1728562 'move' call_tmp[1728560](1728565 call buffLen[757797] b[1728494]))
    ref call_tmp[1728568]:_ref(int(32))[936537] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1728570 'move' call_tmp[1728568](1728573 call locale_id[757953] b[1728494]))
    const-val call_tmp[1728576]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1728613]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1728617 'move' coerce_tmp[1728613](1728615 'deref' call_tmp[1728528]))
    const-val coerce_tmp[1728619]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1728623 'move' coerce_tmp[1728619](1728621 'deref' call_tmp[1728536]))
    const-val coerce_tmp[1728625]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1728629 'move' coerce_tmp[1728625](1728627 'deref' call_tmp[1728544]))
    val coerce_tmp[1728631]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1728635 'move' coerce_tmp[1728631](1728633 'deref' call_tmp[1728552]))
    const-val coerce_tmp[1728637]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1728641 'move' coerce_tmp[1728637](1728639 'deref' call_tmp[1728560]))
    const-val coerce_tmp[1728643]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1728647 'move' coerce_tmp[1728643](1728645 'deref' call_tmp[1728568]))
    (1728578 'move' call_tmp[1728576](1728581 call _strcmp[173438] coerce_tmp[1728613] coerce_tmp[1728619] coerce_tmp[1728625] coerce_tmp[1728631] coerce_tmp[1728637] coerce_tmp[1728643]))
    const-val call_tmp[1728588]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1728590 'move' call_tmp[1728588](1728593 call >[437583] call_tmp[1728576] 0))
    (1728596 'move' ret[1728496] call_tmp[1728588])
    (1728600 return ret[1728496])
  }
  function countNumCodepoints[181334](const  ref arg x[181331]:string[26]) : int(64)[13] "resolved" "fn synchronization free"
  {
    val ret[523121]:int(64)[13] "dead after last mention" "RVV" "temp"
    val ret[181337]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1019815 'move' ret[181337] 0)
    const-val tmp[181371]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[687315]:_ref(int(32))[936537] "dead after last mention" "maybe param" "reference to a const" "temp"
    (687318 'move' call_tmp[687315](181346 call locale_id[757953] x[181331]))
    const-val call_tmp[687320]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1019685]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1019689 'move' coerce_tmp[1019685](1019687 'deref' call_tmp[687315]))
    (687323 'move' call_tmp[687320](181351 call chpl_buildLocaleID[209412] coerce_tmp[1019685] c_sublocid_any[89875]))
    const-val call_tmp[687325]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    (687328 'move' call_tmp[687325](181352 'chpl_on_locale_num' call_tmp[687320]))
    (181373 'move' tmp[181371] call_tmp[687325])
    val isdirect[2035009]:bool[10] "temp"
    (2035014 'move' isdirect[2035009](2035011 call chpl_doDirectExecuteOn[187423] tmp[181371]))
    if isdirect[2035009]
    {
      (2035018 call on_fn[935375] x[181331] ret[181337])
    }
    {
      val _args_foron_fn[2035036]:_class_localson_fn[2035026] "temp"
      (2035040 'move' _args_foron_fn[2035036](2035038 'stack allocate class' _class_localson_fn[2035026]))
      (2035042 '.=' _args_foron_fn[2035036] _0_tmp[2035029] tmp[181371])
      ref tmp[2035046]:string[26] "temp"
      (2035050 'move' tmp[2035046](2035048 'set reference' x[181331]))
      (2035052 '.=' _args_foron_fn[2035036] _1_x[2035031] tmp[2035046])
      ref tmp[2035056]:int(64)[13] "temp"
      (2035060 'move' tmp[2035056](2035058 'set reference' ret[181337]))
      (2035062 '.=' _args_foron_fn[2035036] _2_ret[2035033] tmp[2035056])
      val _args_vforon_fn[2035066]:c_void_ptr[149] "temp"
      (2035070 'move' _args_vforon_fn[2035066](2035068 'cast_to_void_star' _args_foron_fn[2035036]))
      val _args_sizeon_fn[2035072]:int(64)[13] "temp"
      (2035076 'move' _args_sizeon_fn[2035072](2035074 'sizeof_bundle' _class_localson_fn[2035026]))
      on(2035116 call wrapon_fn[2035078] tmp[181371] _args_vforon_fn[2035066] _args_sizeon_fn[2035072] _args_foron_fn[2035036])
    }
    {
    }
    (523126 'move' ret[523121] ret[181337])
    gotoReturn _end_countNumCodepoints[523119] _end_countNumCodepoints[523119]
    label _end_countNumCodepoints[523119]
    (523123 return ret[523121])
  }
  function countNumCodepoints[181390](const in arg buff[181387]:c_ptr(uint(8))[937334], const in arg buffLen[181393]:int(64)[13]) : int(64)[13] "resolved" "fn synchronization free"
  {
    val ret[523132]:int(64)[13] "dead after last mention" "RVV" "temp"
    val n[181397]:int(64)[13] "dead at end of block" "insert auto destroy"
    (545146 'move' n[181397] 0)
    val i[181403]:int(64)[13] "dead at end of block" "insert auto destroy"
    (545148 'move' i[181403] 0)
    {
      val tmp[181487]:bool[10] "dead after last mention" "temp"
      const-val call_tmp[687349]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (687352 'move' call_tmp[687349](181508 call <[437363] i[181403] buffLen[181393]))
      (181511 'move' tmp[181487] call_tmp[687349])
      WhileDo[181492]
      {
        {
          (181413 call +=[451226] i[181403] 1)
          {
            val tmp[181437]:bool[10] "dead after last mention" "temp"
            const-val tmp[429205]:bool[10] "dead after last mention" "maybe param" "temp"
            (429216 'move' tmp[429205](181469 call <[437363] i[181403] buffLen[181393]))
            val tmp[571706]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            const-val tmp[571707]:bool[10] "dead after last mention" "maybe param" "temp"
            const-val call_tmp[687359]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (687362 'move' call_tmp[687359] tmp[429205])
            (571712 'move' tmp[571707] call_tmp[687359])
            if tmp[571707]
            {
              const-val tmp[571714]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
              ref call_tmp[687364]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
              (687367 'move' call_tmp[687364](181477 call this[954002] buff[181387] i[181403]))
              const-val call_tmp[687369]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1019718]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1019722 'move' coerce_tmp[1019718](1019720 'deref' call_tmp[687364]))
              (687372 'move' call_tmp[687369](181475 call isInitialByte[181528] coerce_tmp[1019718]))
              const-val call_tmp[687374]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (687377 'move' call_tmp[687374](181473 call ![7494] call_tmp[687369]))
              (571716 'move' tmp[571714] call_tmp[687374])
              (571721 'move' tmp[571706] tmp[571714])
            }
            {
              (571726 'move' tmp[571706] 0)
            }
            (181479 'move' tmp[181437] tmp[571706])
            WhileDo[181442]
            {
              (181434 call +=[451226] i[181403] 1)
              label _continueLabel[181440]
              const-val tmp[429184]:bool[10] "dead after last mention" "maybe param" "temp"
              (429195 'move' tmp[429184](181450 call <[437363] i[181403] buffLen[181393]))
              val tmp[571733]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              const-val tmp[571734]:bool[10] "dead after last mention" "maybe param" "temp"
              const-val call_tmp[687384]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (687387 'move' call_tmp[687384] tmp[429184])
              (571739 'move' tmp[571734] call_tmp[687384])
              if tmp[571734]
              {
                const-val tmp[571741]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                ref call_tmp[687389]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
                (687392 'move' call_tmp[687389](181458 call this[954002] buff[181387] i[181403]))
                const-val call_tmp[687394]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1019803]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1019807 'move' coerce_tmp[1019803](1019805 'deref' call_tmp[687389]))
                (687397 'move' call_tmp[687394](181456 call isInitialByte[181528] coerce_tmp[1019803]))
                const-val call_tmp[687399]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (687402 'move' call_tmp[687399](181454 call ![7494] call_tmp[687394]))
                (571743 'move' tmp[571741] call_tmp[687399])
                (571748 'move' tmp[571733] tmp[571741])
              }
              {
                (571753 'move' tmp[571733] 0)
              }
              (181460 'move' tmp[181437] tmp[571733])
              tmp[181437]
            }
            label _breakLabel[181441]
          }
          (181484 call +=[451226] n[181397] 1)
        }
        label _continueLabel[181490]
        const-val call_tmp[687404]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (687407 'move' call_tmp[687404](181498 call <[437363] i[181403] buffLen[181393]))
        (181501 'move' tmp[181487] call_tmp[687404])
        tmp[181487]
      }
      label _breakLabel[181491]
    }
    (523137 'move' ret[523132] n[181397])
    gotoReturn _end_countNumCodepoints[523130] _end_countNumCodepoints[523130]
    label _end_countNumCodepoints[523130]
    (523134 return ret[523132])
  }
  function isInitialByte[181528](const in arg b[181525]:uint(8)[100]) : bool[10] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val ret[523143]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[687409]:uint(8)[100] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1019773]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1019779 'move' coerce_tmp[1019773](1019775 'cast' uint(8)[100] 192))
    (687412 'move' call_tmp[687409](181535 call &[446243] b[181525] coerce_tmp[1019773]))
    const-val call_tmp[687414]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1019782]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1019788 'move' coerce_tmp[1019782](1019784 'cast' uint(8)[100] 128))
    (687417 'move' call_tmp[687414](181538 call !=[435945] call_tmp[687409] coerce_tmp[1019782]))
    (1019792 'move' ret[523143] call_tmp[687414])
    (523145 return ret[523143])
  }
  function byte_isWhitespace[181609](const in arg c[181606]:uint(8)[100]) : bool[10] "inline" "resolved" "fn synchronization free"
  {
    val ret[523175]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[687434]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (687437 'move' call_tmp[687434](181628 'cast' int(32)[95] c[181606]))
    const-val call_tmp[687439]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (687442 'move' call_tmp[687439](181631 call isspace[181618] call_tmp[687434]))
    const-val call_tmp[687444]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1125451]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1125457 'move' coerce_tmp[1125451](1125453 'cast' int(32)[95] 0))
    (687447 'move' call_tmp[687444](181633 call !=[435901] call_tmp[687439] coerce_tmp[1125451]))
    (1125461 'move' ret[523175] call_tmp[687444])
    (523177 return ret[523175])
  }
  function qio_encode_char_buf[173912](const in arg dst[173909]:c_void_ptr[149], const in arg chr[173918]:int(32)[95]) : syserr[223496] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[522660]:syserr[223496] "RVV" "temp"
    (522662 return ret[522660])
  }
  function qio_decode_char_buf[174433](ref arg chr[174430]:_ref(int(32))[936537], ref arg nBytes[174436]:_ref(int(32))[936537], const in arg buf[174440]:c_string[19], const in arg buflen[174444]:int(64)[13]) : syserr[223496] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[522688]:syserr[223496] "RVV" "temp"
    (522690 return ret[522688])
  }
  function qio_decode_char_buf_esc[174460](ref arg chr[174457]:_ref(int(32))[936537], ref arg nBytes[174463]:_ref(int(32))[936537], const in arg buf[174467]:c_string[19], const in arg buffLen[174471]:int(64)[13]) : syserr[223496] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[522694]:syserr[223496] "RVV" "temp"
    (522696 return ret[522694])
  }
  function isspace[181618](const in arg c[181615]:int(32)[95]) : int(32)[95] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[523169]:int(32)[95] "RVV" "temp"
    (523171 return ret[523169])
  }
  function on_fn[935375](const  ref arg x[1765450]:_ref(string)[937850], ref arg ret[1765452]:_ref(int(64))[936483]) : void[4] "on" "resolved" "fn synchronization free"
  {
    {
      ref call_tmp[687332]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "reference to a const" "temp"
      (687335 'move' call_tmp[687332](181356 call buff[757875] x[1765450]))
      ref call_tmp[687339]:_ref(int(64))[936483] "dead after last mention" "maybe param" "reference to a const" "temp"
      (687342 'move' call_tmp[687339](181361 call buffLen[757797] x[1765450]))
      const-val call_tmp[687344]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1019695]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1019699 'move' coerce_tmp[1019695](1019697 'deref' call_tmp[687332]))
      const-val coerce_tmp[1019701]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1019705 'move' coerce_tmp[1019701](1019703 'deref' call_tmp[687339]))
      (687347 'move' call_tmp[687344](181364 call countNumCodepoints[181390] coerce_tmp[1019695] coerce_tmp[1019701]))
      (181365 call =[435238] ret[1765452] call_tmp[687344])
    }
    (935382 return _void[55])
  }
  function _cast[957220](const in arg b[957226]:c_ptr(uint(8))[937334]) : c_string[19] "inline" "resolved"
  {
    val _formal_type_tmp_[1763107]:c_string[19] "temp"
    val ret[957229]:c_string[19] "dead after last mention" "RVV" "temp"
    const-val call_tmp[957231]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (957233 'move' call_tmp[957231](957235 'cast' c_string[19] b[957226]))
    (957238 'move' ret[957229] call_tmp[957231])
    (957242 return ret[957229])
  }
  function on_fn[979064](ref arg lhs[1765474]:_ref(string)[937850], const  ref arg rhs[1765476]:_ref(string)[937850]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[979070]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
      (979072 'move' call_tmp[979070](979075 call buffLen[757797] lhs[1765474]))
      ref call_tmp[979078]:_ref(int(64))[936483] "dead after last mention" "maybe param" "reference to a const" "temp"
      (979080 'move' call_tmp[979078](979083 call buffLen[757797] rhs[1765476]))
      const-val call_tmp[979086]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[979867]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (979871 'move' coerce_tmp[979867](979869 'deref' call_tmp[979070]))
      const-val coerce_tmp[979873]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (979877 'move' coerce_tmp[979873](979875 'deref' call_tmp[979078]))
      (979088 'move' call_tmp[979086](979091 call safeAdd[979640] coerce_tmp[979867] coerce_tmp[979873]))
      const-val call_tmp[979094]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (979096 'move' call_tmp[979094](979099 call ![7494] call_tmp[979086]))
      const-val call_tmp[979101]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (979103 'move' call_tmp[979101] call_tmp[979094])
      if call_tmp[979101]
      {
        (979111 call halt[154067] "Buffer overflow allocating string copy data")
      }
      ref call_tmp[979114]:_ref(int(64))[936483] "dead at end of block" "maybe param" "temp"
      (979116 'move' call_tmp[979114](979119 call buffLen[757797] lhs[1765474]))
      ref call_tmp[979122]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
      (979124 'move' call_tmp[979122](979127 call buffLen[757797] rhs[1765476]))
      const-val call_tmp[979130]:int(64)[13] "dead at end of block" "maybe param" "temp"
      const-val coerce_tmp[980371]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (980375 'move' coerce_tmp[980371](980373 'deref' call_tmp[979114]))
      const-val coerce_tmp[980377]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (980381 'move' coerce_tmp[980377](980379 'deref' call_tmp[979122]))
      (979132 'move' call_tmp[979130](979135 call +[439547] coerce_tmp[980371] coerce_tmp[980377]))
      const-val newLength[979138]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      (979140 'move' newLength[979138] call_tmp[979130])
      ref call_tmp[979144]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
      (979146 'move' call_tmp[979144](979149 call buffSize[757823] lhs[1765474]))
      const-val call_tmp[979152]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[980385]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (980389 'move' coerce_tmp[980385](980387 'deref' call_tmp[979144]))
      (979154 'move' call_tmp[979152](979157 call <=[436923] coerce_tmp[980385] newLength[979138]))
      const-val call_tmp[979160]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (979162 'move' call_tmp[979160] call_tmp[979152])
      if call_tmp[979160]
      {
        const-val call_tmp[979169]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (979171 'move' call_tmp[979169](979174 call +[949577] newLength[979138]))
        ref call_tmp[979177]:_ref(int(64))[936483] "dead at end of block" "maybe param" "temp"
        (979179 'move' call_tmp[979177](979182 call buffLen[757797] lhs[1765474]))
        const-val call_tmp[979185]:real(64)[16] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[980394]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (980398 'move' coerce_tmp[980394](980396 'deref' call_tmp[979177]))
        const-val coerce_tmp[980400]:real(64)[16] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (980406 'move' coerce_tmp[980400](980402 'cast' real(64)[16] coerce_tmp[980394]))
        (979187 'move' call_tmp[979185](979190 call *[441871] coerce_tmp[980400] 1.5))
        const-val call_tmp[979193]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (979195 'move' call_tmp[979193](979198 call _cast[980409] call_tmp[979185]))
        const-val call_tmp[979201]:int(64)[13] "dead at end of block" "maybe param" "temp"
        (979203 'move' call_tmp[979201](979206 call max[450019] call_tmp[979169] call_tmp[979193]))
        const-val requestedSize[979209]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        (979211 'move' requestedSize[979209] call_tmp[979201])
        ref call_tmp[979216]:_ref(bool)[937110] "dead after last mention" "maybe param" "temp"
        (979218 'move' call_tmp[979216](979221 call isOwned[757901] lhs[1765474]))
        const-val call_tmp[979224]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val tmp[980442]:bool[10] "dead after last mention" "const" "temp"
        (980444 'move' tmp[980442](980446 'deref' call_tmp[979216]))
        (979226 'move' call_tmp[979224] tmp[980442])
        if call_tmp[979224]
        {
          ref call_tmp[979233]:_ref(c_ptr(uint(8)))[937343] "dead at end of block" "maybe param" "temp"
          (979235 'move' call_tmp[979233](979238 call buff[757875] lhs[1765474]))
          const-val call_tmp[979241]:(c_ptr(uint(8)),int(64))[955119] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[980449]:c_ptr(uint(8))[937334] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (980453 'move' coerce_tmp[980449](980451 'deref' call_tmp[979233]))
          const-val ret_tmp[1788043]:(c_ptr(uint(8)),int(64))[955119] "temp"
          (979246 call bufferRealloc[172692] coerce_tmp[980449] requestedSize[979209] ret_tmp[1788043])
          (1788046 'move' call_tmp[979241] ret_tmp[1788043])
          const-val tmp[979249]:(c_ptr(uint(8)),int(64))[955119] "dead at end of block" "insert auto destroy" "temp"
          (979251 'move' tmp[979249] call_tmp[979241])
          1
          ref call_tmp[979259]:_ref(c_ptr(uint(8)))[937343] "dead at end of block" "maybe param" "temp"
          (979261 'move' call_tmp[979259](980463 '.' tmp[979249] x0[955115]))
          val newBuff[979266]:c_ptr(uint(8))[937334] "dead at end of block" "insert auto destroy"
          val coerce_tmp[980468]:c_ptr(uint(8))[937334] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (980472 'move' coerce_tmp[980468](980470 'deref' call_tmp[979259]))
          (979268 'move' newBuff[979266] coerce_tmp[980468])
          ref call_tmp[979271]:_ref(int(64))[936483] "dead at end of block" "maybe param" "temp"
          (979273 'move' call_tmp[979271](980477 '.' tmp[979249] x1[955117]))
          const-val allocSize[979278]:int(64)[13] "dead at end of block" "insert auto destroy"
          const-val coerce_tmp[980482]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (980486 'move' coerce_tmp[980482](980484 'deref' call_tmp[979271]))
          (979280 'move' allocSize[979278] coerce_tmp[980482])
          ref call_tmp[979284]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "temp"
          (979286 'move' call_tmp[979284](979289 call buff[757875] lhs[1765474]))
          (979293 call =[954124] call_tmp[979284] newBuff[979266])
          ref call_tmp[979298]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
          (979300 'move' call_tmp[979298](979303 call buffSize[757823] lhs[1765474]))
          (979307 call =[435238] call_tmp[979298] allocSize[979278])
          (1799241 call chpl__autoDestroy[1498061] tmp[979249])
        }
        {
          const-val call_tmp[979313]:(c_ptr(uint(8)),int(64))[955119] "dead at end of block" "maybe param" "temp"
          const-val ret_tmp[1788813]:(c_ptr(uint(8)),int(64))[955119] "temp"
          (979318 call bufferAlloc[954929] requestedSize[979209] ret_tmp[1788813])
          (1788816 'move' call_tmp[979313] ret_tmp[1788813])
          const-val tmp[979320]:(c_ptr(uint(8)),int(64))[955119] "dead at end of block" "insert auto destroy" "temp"
          (979322 'move' tmp[979320] call_tmp[979313])
          1
          ref call_tmp[979330]:_ref(c_ptr(uint(8)))[937343] "dead at end of block" "maybe param" "temp"
          (979332 'move' call_tmp[979330](980501 '.' tmp[979320] x0[955115]))
          val newBuff[979337]:c_ptr(uint(8))[937334] "dead at end of block" "insert auto destroy"
          val coerce_tmp[980506]:c_ptr(uint(8))[937334] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (980510 'move' coerce_tmp[980506](980508 'deref' call_tmp[979330]))
          (979339 'move' newBuff[979337] coerce_tmp[980506])
          ref call_tmp[979342]:_ref(int(64))[936483] "dead at end of block" "maybe param" "temp"
          (979344 'move' call_tmp[979342](980515 '.' tmp[979320] x1[955117]))
          const-val allocSize[979349]:int(64)[13] "dead at end of block" "insert auto destroy"
          const-val coerce_tmp[980520]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (980524 'move' coerce_tmp[980520](980522 'deref' call_tmp[979342]))
          (979351 'move' allocSize[979349] coerce_tmp[980520])
          ref call_tmp[979355]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "temp"
          (979357 'move' call_tmp[979355](979360 call buff[757875] lhs[1765474]))
          ref call_tmp[979363]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
          (979365 'move' call_tmp[979363](979368 call buffLen[757797] lhs[1765474]))
          val coerce_tmp[980534]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (980538 'move' coerce_tmp[980534](980536 'deref' call_tmp[979355]))
          const-val coerce_tmp[980540]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (980544 'move' coerce_tmp[980540](980542 'deref' call_tmp[979363]))
          (979372 call bufferMemcpyLocal[173076] newBuff[979337] coerce_tmp[980534] coerce_tmp[980540] 0 0)
          ref call_tmp[979380]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "temp"
          (979382 'move' call_tmp[979380](979385 call buff[757875] lhs[1765474]))
          (979389 call =[954124] call_tmp[979380] newBuff[979337])
          ref call_tmp[979394]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
          (979396 'move' call_tmp[979394](979399 call buffSize[757823] lhs[1765474]))
          (979403 call =[435238] call_tmp[979394] allocSize[979349])
          ref call_tmp[979408]:_ref(bool)[937110] "dead after last mention" "maybe param" "temp"
          (979410 'move' call_tmp[979408](979413 call isOwned[757901] lhs[1765474]))
          (979417 call =[435085] call_tmp[979408] 1)
          (1799245 call chpl__autoDestroy[1498061] tmp[979320])
        }
      }
      ref call_tmp[979422]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "temp"
      (979424 'move' call_tmp[979422](979427 call buff[757875] lhs[1765474]))
      ref call_tmp[979430]:_ref(int(32))[936537] "dead after last mention" "maybe param" "reference to a const" "temp"
      (979432 'move' call_tmp[979430](979435 call locale_id[757953] rhs[1765476]))
      ref call_tmp[979438]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "reference to a const" "temp"
      (979440 'move' call_tmp[979438](979443 call buff[757875] rhs[1765476]))
      ref call_tmp[979446]:_ref(int(64))[936483] "dead after last mention" "maybe param" "reference to a const" "temp"
      (979448 'move' call_tmp[979446](979451 call buffLen[757797] rhs[1765476]))
      ref call_tmp[979454]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
      (979456 'move' call_tmp[979454](979459 call buffLen[757797] lhs[1765474]))
      val coerce_tmp[980583]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (980587 'move' coerce_tmp[980583](980585 'deref' call_tmp[979422]))
      const-val coerce_tmp[980589]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (980593 'move' coerce_tmp[980589](980591 'deref' call_tmp[979430]))
      const-val coerce_tmp[980595]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (980601 'move' coerce_tmp[980595](980597 'cast' int(64)[13] coerce_tmp[980589]))
      val coerce_tmp[980603]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (980607 'move' coerce_tmp[980603](980605 'deref' call_tmp[979438]))
      const-val coerce_tmp[980609]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (980613 'move' coerce_tmp[980609](980611 'deref' call_tmp[979446]))
      const-val coerce_tmp[980615]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (980619 'move' coerce_tmp[980615](980617 'deref' call_tmp[979454]))
      (979463 call bufferMemcpy[172996] coerce_tmp[980583] coerce_tmp[980595] coerce_tmp[980603] coerce_tmp[980609] coerce_tmp[980615] 0)
      ref call_tmp[979473]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
      (979475 'move' call_tmp[979473](979478 call buffLen[757797] lhs[1765474]))
      (979482 call =[435238] call_tmp[979473] newLength[979138])
      ref call_tmp[979487]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
      ref _this_tmp_[980735]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "temp"
      (980737 'move' _this_tmp_[980735](979492 call buff[757875] lhs[1765474]))
      val coerce_tmp[980742]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (980746 'move' coerce_tmp[980742](980744 'deref' _this_tmp_[980735]))
      (979489 'move' call_tmp[979487](979495 call this[954002] coerce_tmp[980742] newLength[979138]))
      const-val coerce_tmp[980749]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (980755 'move' coerce_tmp[980749](980751 'cast' uint(8)[100] 0))
      (979498 call =[435259] call_tmp[979487] coerce_tmp[980749])
      val call_tmp[979503]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        ref call_tmp[979526]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
        (979528 'move' call_tmp[979526](979531 call cachedNumCodepoints[757849] lhs[1765474]))
        ref call_tmp[979534]:_ref(int(64))[936483] "dead after last mention" "maybe param" "reference to a const" "temp"
        (979536 'move' call_tmp[979534](979539 call cachedNumCodepoints[757849] rhs[1765476]))
        const-val coerce_tmp[980763]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (980767 'move' coerce_tmp[980763](980765 'deref' call_tmp[979534]))
        (979543 call +=[451226] call_tmp[979526] coerce_tmp[980763])
      }
    }
    (979547 return _void[55])
  }
  function helpMe[1019103](ref arg lhs[1019108]:_ref(string)[937850], const  ref arg rhs[1019113]:string[26]) : void[4] "inline" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val tmp[1019134]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1019158]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    ref call_tmp[1019160]:_ref(int(32))[936537] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1019162 'move' call_tmp[1019160](1019165 call locale_id[757953] rhs[1019113]))
    const-val call_tmp[1019168]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1019655]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1019659 'move' coerce_tmp[1019655](1019657 'deref' call_tmp[1019160]))
    (1019170 'move' call_tmp[1019168](1019173 call ==[435517] coerce_tmp[1019655] chpl_nodeID[208152]))
    (1019176 'move' tmp[1019158] call_tmp[1019168])
    (1019181 'move' tmp[1019134] tmp[1019158])
    const-val call_tmp[1019187]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1019189 'move' call_tmp[1019187] tmp[1019134])
    if call_tmp[1019187]
    {
      val call_tmp[1019196]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        ref call_tmp[1019219]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1019221 'move' call_tmp[1019219](1019224 call buff[757875] rhs[1019113]))
        ref call_tmp[1019227]:_ref(int(64))[936483] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1019229 'move' call_tmp[1019227](1019232 call buffLen[757797] rhs[1019113]))
        ref call_tmp[1019235]:_ref(int(64))[936483] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1019237 'move' call_tmp[1019235](1019240 call buffSize[757823] rhs[1019113]))
        const-val call_tmp[1019243]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1019245 'move' call_tmp[1019243](1019248 call numCodepoints[32823] rhs[1019113]))
        val coerce_tmp[1020422]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1020426 'move' coerce_tmp[1020422](1020424 'deref' call_tmp[1019219]))
        const-val coerce_tmp[1020428]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1020432 'move' coerce_tmp[1020428](1020430 'deref' call_tmp[1019227]))
        const-val coerce_tmp[1020434]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1020438 'move' coerce_tmp[1020434](1020436 'deref' call_tmp[1019235]))
        (1019252 call reinitWithNewBuffer[1019819] lhs[1019108] coerce_tmp[1020422] coerce_tmp[1020428] coerce_tmp[1020434] call_tmp[1019243])
      }
    }
    {
      ref call_tmp[1019291]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1019293 'move' call_tmp[1019291](1019296 call buffLen[757797] rhs[1019113]))
      const-val len[1019299]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1020811]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1020815 'move' coerce_tmp[1020811](1020813 'deref' call_tmp[1019291]))
      (1019301 'move' len[1019299] coerce_tmp[1020811])
      val remote_buf[1019305]:c_ptr(uint(8))[937334] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1020818]:c_ptr(uint(8))[937334] "dead at end of block" "temp"
      (1020821 'move' init_coerce_tmp[1020818](1021360 'cast' c_ptr(uint(8))[937334] nil[44]))
      (1019307 'move' remote_buf[1019305] init_coerce_tmp[1020818])
      const-val call_tmp[1019312]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1019314 'move' call_tmp[1019312](1019317 call !=[435923] len[1019299] 0))
      const-val call_tmp[1019320]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1019322 'move' call_tmp[1019320] call_tmp[1019312])
      if call_tmp[1019320]
      {
        ref call_tmp[1019329]:_ref(int(32))[936537] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1019331 'move' call_tmp[1019329](1019334 call locale_id[757953] rhs[1019113]))
        ref call_tmp[1019337]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1019339 'move' call_tmp[1019337](1019342 call buff[757875] rhs[1019113]))
        val call_tmp[1019345]:c_ptr(uint(8))[937334] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1020827]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1020831 'move' coerce_tmp[1020827](1020829 'deref' call_tmp[1019329]))
        const-val coerce_tmp[1020833]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1020839 'move' coerce_tmp[1020833](1020835 'cast' int(64)[13] coerce_tmp[1020827]))
        val coerce_tmp[1020841]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1020845 'move' coerce_tmp[1020841](1020843 'deref' call_tmp[1019337]))
        (1019347 'move' call_tmp[1019345](1019350 call bufferCopyRemote[172784] coerce_tmp[1020833] coerce_tmp[1020841] len[1019299]))
        (1019355 call =[954124] remote_buf[1019305] call_tmp[1019345])
      }
      val call_tmp[1019362]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        const-val call_tmp[1019385]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1019387 'move' call_tmp[1019385](1019390 call +[949577] len[1019299]))
        ref call_tmp[1019393]:_ref(int(64))[936483] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1019395 'move' call_tmp[1019393](1019398 call cachedNumCodepoints[757849] rhs[1019113]))
        const-val coerce_tmp[1021290]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1021294 'move' coerce_tmp[1021290](1021292 'deref' call_tmp[1019393]))
        (1019402 call reinitWithOwnedBuffer[1020866] lhs[1019108] remote_buf[1019305] len[1019299] call_tmp[1019385] coerce_tmp[1021290])
      }
    }
    (1019433 return _void[55])
  }
  function on_fn[1019552](ref arg lhs[1765512]:_ref(string)[937850], const  ref arg rhs[1765514]:_ref(string)[937850]) : void[4] "on" "resolved" "fn synchronization free"
  {
    {
      (1019559 call helpMe[1019103] lhs[1765512] rhs[1765514])
    }
    (1019562 return _void[55])
  }
  function on_fn[1030049](const in arg needle[1765548]:__serializeHelper[28086], const  ref arg x[1765550]:_ref(string)[937850], const in arg region[1765552]:range(byteIndex,bounded,false)[1025703], ref arg ret[1765554]:_ref(int(64))[936483]) : void[4] "on" "resolved"
  {
    val needle[2032360]:string[26] "temp"
    ref needle[2032361]:string[26] "temp"
    ref tmp[2032367]:string[26] "temp"
    (2032371 'move' tmp[2032367](2032369 'set reference' needle[2032360]))
    (2032364 call chpl__deserialize[1751162] needle[1765548] tmp[2032367])
    (2032376 'move' needle[2032361](2032374 'set reference' needle[2032360]))
    {
      val localRet[1030062]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1030064 'move' localRet[1030062] -2)
      ref call_tmp[1030069]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1030071 'move' call_tmp[1030069](1030074 call buffLen[757797] needle[2032361]))
      const-val nLen[1030077]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1031058]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1031062 'move' coerce_tmp[1031058](1031060 'deref' call_tmp[1030069]))
      (1799489 '=' nLen[1030077] coerce_tmp[1031058])
      (1030079 'noop')
      const-val call_tmp[1030083]:(range(int(64),bounded,false),int(64))[1084835] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1789521]:(range(int(64),bounded,false),int(64))[1084835] "temp"
      (1030088 call getView[1031065] x[1765550] region[1765552] ret_tmp[1789521])
      (1789524 'move' call_tmp[1030083] ret_tmp[1789521])
      const-val tmp[1030091]:(range(int(64),bounded,false),int(64))[1084835] "dead at end of block" "const" "insert auto destroy" "temp"
      (1030093 'move' tmp[1030091] call_tmp[1030083])
      1
      ref call_tmp[1030101]:_ref(range(int(64),bounded,false))[1026769] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1030103 'move' call_tmp[1030101](1086712 '.' tmp[1030091] x0[1084831]))
      const-val view[1030108]:range(int(64),bounded,false)[1026725] "dead at end of block" "const" "insert auto destroy"
      (1030110 'move' view[1030108](1086715 'deref' call_tmp[1030101]))
      const-val call_tmp[1030114]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (1030116 'move' call_tmp[1030114](1030119 call size[1035700] view[1030108]))
      const-val xLen[1030122]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      (1030124 'move' xLen[1030122] call_tmp[1030114])
      {
        const-val call_tmp[1030172]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1030174 'move' call_tmp[1030172](1030177 call ==[435539] nLen[1030077] 0))
        const-val call_tmp[1030180]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1030182 'move' call_tmp[1030180] call_tmp[1030172])
        if call_tmp[1030180]
        {
          {
            (1030206 call =[435238] localRet[1030062] -1)
          }
        }
      }
      const-val call_tmp[1030261]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1030263 'move' call_tmp[1030261](1030266 call >[437583] nLen[1030077] xLen[1030122]))
      const-val call_tmp[1030269]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1030271 'move' call_tmp[1030269] call_tmp[1030261])
      if call_tmp[1030269]
      {
        (1030286 call =[435238] localRet[1030062] -1)
      }
      const-val call_tmp[1030299]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1030301 'move' call_tmp[1030299](1030304 call ==[435539] localRet[1030062] -2))
      const-val call_tmp[1030307]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1030309 'move' call_tmp[1030307] call_tmp[1030299])
      if call_tmp[1030307]
      {
        (1030324 call =[435238] localRet[1030062] -1)
        const-val call_tmp[1030329]:string[26] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1786421]:string[26] "temp"
        (1030337 call localize[32886] needle[2032361] ret_tmp[1786421])
        (1786424 'move' call_tmp[1030329] ret_tmp[1786421])
        const localNeedle[1030338]:string[26] "dead at end of block" "const" "insert auto destroy"
        (1030340 'move' localNeedle[1030338] call_tmp[1030329])
        ref call_tmp[1030344]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1030346 'move' call_tmp[1030344](1030349 call buffLen[757797] localNeedle[1030338]))
        const-val needleLen[1030352]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[1086761]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1086765 'move' coerce_tmp[1086761](1086763 'deref' call_tmp[1030344]))
        (1030354 'move' needleLen[1030352] coerce_tmp[1086761])
        const-val call_tmp[1030358]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1030360 'move' call_tmp[1030358](1030363 call -[440327] xLen[1030122] nLen[1030077]))
        const-val call_tmp[1030366]:int(64)[13] "dead at end of block" "maybe param" "temp"
        (1030368 'move' call_tmp[1030366](1030371 call +[949577] call_tmp[1030358]))
        const-val numPossible[1030374]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        (1030376 'move' numPossible[1030374] call_tmp[1030366])
        const-val searchSpace[1030380]:range(int(64),bounded,false)[1026725] "dead at end of block" "const" "insert auto destroy"
        const-val tmp[1030382]:range(int(64),bounded,false)[1026725] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val tmp[1030393]:range(int(64),bounded,false)[1026725] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1030395]:range(int(64),boundedLow,false)[1087476] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1790347]:range(int(64),boundedLow,false)[1087476] "temp"
        (1030400 call chpl_build_low_bounded_range[1086869] 0 ret_tmp[1790347])
        (1790350 'move' call_tmp[1030395] ret_tmp[1790347])
        const-val ret_tmp[1790461]:range(int(64),bounded,false)[1026725] "temp"
        (1030405 call #[1087836] call_tmp[1030395] numPossible[1030374] ret_tmp[1790461])
        (1790464 'move' tmp[1030393] ret_tmp[1790461])
        (1030408 'move' tmp[1030382] tmp[1030393])
        (1030450 'move' searchSpace[1030380] tmp[1030382])
        {
          val _indexOfInterest[1030460]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1030462]:_ic_these_range_int64_t_bounded_F[1096614] "dead at end of block" "expr temp" "temp"
          (1030464 'move' _iterator[1030462](1030467 call _getIterator[1095231] searchSpace[1030380]))
          {
            val ret[1863936]:_ir_these_range_int64_t_bounded_F[1096620] "dead after last mention" "RVV" "temp"
            const-val _return_tmp_[1863938]:bool[10] "dead after last mention" "temp"
            const-val this[1864239]:range(int(64),bounded,false)[1026725] "temp"
            (1864244 'move' this[1864239](1864241 '.v' _iterator[1030462] F0_this[1964014]))
            (1863940 'move' _return_tmp_[1863938](1863943 call checkIfIterWillOverflow[1095725] this[1864239] 1))
            val i[1863946]:int(64)[13] "dead at end of block" "insert auto destroy"
            val call_tmp[1863948]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (1863950 'move' i[1863946] 0)
            ref call_tmp[1863953]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[1864246]:range(int(64),bounded,false)[1026725] "temp"
            (1864251 'move' this[1864246](1864248 '.v' _iterator[1030462] F0_this[1964014]))
            (1863955 'move' call_tmp[1863953](1863958 call _low[1028363] this[1864246]))
            const-val start[1863960]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1863962]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1863964 'move' coerce_tmp[1863962](1863966 'deref' call_tmp[1863953]))
            (1863968 '=' start[1863960] coerce_tmp[1863962])
            (1863971 'noop')
            ref call_tmp[1863972]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[1864253]:range(int(64),bounded,false)[1026725] "temp"
            (1864258 'move' this[1864253](1864255 '.v' _iterator[1030462] F0_this[1964014]))
            (1863974 'move' call_tmp[1863972](1863977 call _high[1028571] this[1864253]))
            const end[1863979]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1863981]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1863983 'move' coerce_tmp[1863981](1863985 'deref' call_tmp[1863972]))
            (1863987 '=' end[1863979] coerce_tmp[1863981])
            (1863990 'noop')
            CForLoop[1863991] hazard
            {
              const-val yret[1864006]:int(64)[13] "dead after last mention" "YVV" "temp"
              const-val call_tmp[1864008]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val this[1864260]:range(int(64),bounded,false)[1026725] "temp"
              (1864265 'move' this[1864260](1864262 '.v' _iterator[1030462] F0_this[1964014]))
              (1864010 'move' call_tmp[1864008](1864013 call chpl_intToIdx[1028391] this[1864260] i[1863946]))
              (1864016 'move' yret[1864006] call_tmp[1864008])
              const-val _yieldedIndex[1864030]:int(64)[13] "temp"
              (1864237 'move' _yieldedIndex[1864030] call_tmp[1864008])
              {
                const-val i[1864032]:int(64)[13] "const" "index var" "insert auto destroy"
                (1864034 'move' i[1864032] _yieldedIndex[1864030])
                {
                  {
                    val _indexOfInterest[1864039]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[1864041]:_ic_chpl_direct_counted_range_iter[1103701] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[1864043]:_ir_chpl_direct_counted_range_iter[1103707] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[1864045]:_ir_chpl_direct_counted_range_iter[1103707] "temp"
                    (1864048 call chpl_direct_counted_range_iter[457907] 0 nLen[1030077] ret_tmp[1864045])
                    (1864052 'move' call_tmp[1864043] ret_tmp[1864045])
                    (1864055 'move' _iterator[1864041](1864058 call _getIterator[1103716] call_tmp[1864043]))
                    {
                      val ret[1921659]:_ir_chpl_direct_counted_range_iter[1103707] "dead after last mention" "RVV" "temp"
                      val _indexOfInterest[1921661]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1921663]:_ic_chpl_direct_counted_range_iter_helper[1103451] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1921665]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1921667]:_ir_chpl_direct_counted_range_iter_helper[1103457] "temp"
                      const-val low[1922259]:int(64)[13] "temp"
                      (1922264 'move' low[1922259](1922261 '.v' _iterator[1864041] F0_low[1960165]))
                      const-val count[1922266]:int(64)[13] "temp"
                      (1922271 'move' count[1922266](1922268 '.v' _iterator[1864041] F1_count[1960169]))
                      (1921670 call chpl_direct_counted_range_iter_helper[1102009] low[1922259] count[1922266] ret_tmp[1921667])
                      (1921674 'move' call_tmp[1921665] ret_tmp[1921667])
                      (1921677 'move' _iterator[1921663](1921680 call _getIterator[1103466] call_tmp[1921665]))
                      {
                        val ret[1921683]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead after last mention" "RVV" "temp"
                        val call_tmp[1921685]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                        const-val tmp[1921687]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val tmp[1921689]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                        const-val call_tmp[1921691]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[1921693]:int(64)[13] "temp"
                        (1921695 'move' count[1921693](1921697 '.v' _iterator[1921663] F1_count[1964641]))
                        (1921700 'move' call_tmp[1921691](1921703 call <[948309] count[1921693]))
                        (1921705 'move' tmp[1921689] call_tmp[1921691])
                        (1921708 'move' tmp[1921687] call_tmp[1921691])
                        const-val call_tmp[1921711]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1921713 'move' call_tmp[1921711] call_tmp[1921691])
                        if call_tmp[1921691]
                        {
                          (1921719 call boundsCheckHalt[210079] "With a negative count, the range must have a last index.")
                        }
                        const-val tmp[1921722]:2*int(64)[1039967] "dead at end of block" "const" "insert auto destroy" "temp"
                        val tmp[1921724]:2*int(64)[1039967] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                        const-val tmp[1921726]:bool[10] "dead after last mention" "maybe param" "temp"
                        const-val call_tmp[1921728]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[1921730]:int(64)[13] "temp"
                        (1921732 'move' count[1921730](1921734 '.v' _iterator[1921663] F1_count[1964641]))
                        (1921737 'move' call_tmp[1921728](1921740 call ==[435539] count[1921730] 0))
                        (1921743 'move' tmp[1921726] call_tmp[1921728])
                        if call_tmp[1921728]
                        {
                          const-val tmp[1921748]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                          val call_tmp[1921750]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[1921752]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val low[1921754]:int(64)[13] "temp"
                          (1921756 'move' low[1921754](1921758 '.v' _iterator[1921663] F0_low[1964637]))
                          (1921761 'move' call_tmp[1921752](1921764 call _cast[955945] low[1921754]))
                          const-val call_tmp[1921766]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[1921768]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                          (1921770 'move' coerce_tmp[1921768](1921772 'cast' uint(64)[115] 1))
                          (1921775 'move' call_tmp[1921766](1921778 call -[962104] call_tmp[1921752]))
                          const-val call_tmp[1921780]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          (1921782 'move' call_tmp[1921780](1921785 call _cast[953454] call_tmp[1921766]))
                          const-val ret_tmp[1921787]:2*int(64)[1039967] "temp"
                          const-val low[1921789]:int(64)[13] "temp"
                          (1921791 'move' low[1921789](1921793 '.v' _iterator[1921663] F0_low[1964637]))
                          (1921797 call _build_tuple[1039925] low[1921789] call_tmp[1921780] ret_tmp[1921787])
                          (1921801 'move' tmp[1921748] ret_tmp[1921787])
                          (1921804 'move' tmp[1921724] tmp[1921748])
                        }
                        {
                          const-val tmp[1921808]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                          val call_tmp[1921810]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[1921812]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val count[1921814]:int(64)[13] "temp"
                          (1921816 'move' count[1921814](1921818 '.v' _iterator[1921663] F1_count[1964641]))
                          (1921821 'move' call_tmp[1921812] count[1921814])
                          const-val call_tmp[1921824]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val count[1921826]:int(64)[13] "temp"
                          (1921828 'move' count[1921826](1921830 '.v' _iterator[1921663] F1_count[1964641]))
                          (1921833 'move' call_tmp[1921824](1921836 call -[962137] count[1921826]))
                          const-val call_tmp[1921838]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val low[1921840]:int(64)[13] "temp"
                          (1921842 'move' low[1921840](1921844 '.v' _iterator[1921663] F0_low[1964637]))
                          (1921847 'move' call_tmp[1921838](1921850 call +[439547] low[1921840] call_tmp[1921824]))
                          const-val ret_tmp[1921853]:2*int(64)[1039967] "temp"
                          const-val low[1921855]:int(64)[13] "temp"
                          (1921857 'move' low[1921855](1921859 '.v' _iterator[1921663] F0_low[1964637]))
                          (1921863 call _build_tuple[1039925] low[1921855] call_tmp[1921838] ret_tmp[1921853])
                          (1921867 'move' tmp[1921808] ret_tmp[1921853])
                          (1921870 'move' tmp[1921724] tmp[1921808])
                        }
                        (1921874 '=' tmp[1921722] tmp[1921724])
                        (1921877 'noop')
                        1
                        ref call_tmp[1921879]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
                        (1921881 'move' call_tmp[1921879](1921883 '.' tmp[1921722] x0[1039963]))
                        const-val start[1921886]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                        const-val coerce_tmp[1921888]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                        (1921890 'move' coerce_tmp[1921888](1921892 'deref' call_tmp[1921879]))
                        (1921894 '=' start[1921886] coerce_tmp[1921888])
                        (1921897 'noop')
                        ref call_tmp[1921898]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
                        (1921900 'move' call_tmp[1921898](1921902 '.' tmp[1921722] x1[1039965]))
                        const-val end[1921905]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                        const-val coerce_tmp[1921907]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                        (1921909 'move' coerce_tmp[1921907](1921911 'deref' call_tmp[1921898]))
                        (1921913 '=' end[1921905] coerce_tmp[1921907])
                        (1921916 'noop')
                        val _indexOfInterest[1921917]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[1921919]:_ic_chpl_direct_param_stride_range_iter[1103197] "dead at end of block" "expr temp" "temp"
                        const-val call_tmp[1921921]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead at end of block" "expr temp" "maybe param" "temp"
                        const-val ret_tmp[1921923]:_ir_chpl_direct_param_stride_range_iter[1103203] "temp"
                        (1921926 call chpl_direct_param_stride_range_iter[1102435] coerce_tmp[1921888] coerce_tmp[1921907] ret_tmp[1921923])
                        (1921930 'move' call_tmp[1921921] ret_tmp[1921923])
                        (1921933 'move' _iterator[1921919](1921936 call _getIterator[1103212] call_tmp[1921921]))
                        {
                          val ret[1921939]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead after last mention" "RVV" "temp"
                          val call_tmp[1921941]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (1921944 call chpl_range_check_stride[1102755])
                          val i[1921945]:int(64)[13] "dead at end of block" "insert auto destroy"
                          val call_tmp[1921947]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (1921949 'move' i[1921945] 0)
                          val call_tmp[1921952]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val default_arg_first[1921954]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val low[1921956]:int(64)[13] "temp"
                          (1921958 'move' low[1921956](1921960 '.v' _iterator[1921919] F0_low[1966135]))
                          (1921963 'move' default_arg_first[1921954](1921966 call chpl_checkIfRangeIterWillOverflow_default_first[1103109] low[1921956]))
                          const-val default_arg_last[1921968]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val high[1921970]:int(64)[13] "temp"
                          (1921972 'move' high[1921970](1921974 '.v' _iterator[1921919] F1_high[1966139]))
                          (1921977 'move' default_arg_last[1921968](1921980 call chpl_checkIfRangeIterWillOverflow_default_last[1103137] high[1921970]))
                          const-val _return_tmp_[1921982]:bool[10] "dead after last mention" "temp"
                          const-val low[1921984]:int(64)[13] "temp"
                          (1921986 'move' low[1921984](1921988 '.v' _iterator[1921919] F0_low[1966135]))
                          const-val high[1921991]:int(64)[13] "temp"
                          (1921993 'move' high[1921991](1921995 '.v' _iterator[1921919] F1_high[1966139]))
                          (1921998 'move' _return_tmp_[1921982](1922001 call chpl_checkIfRangeIterWillOverflow[1095987] low[1921984] high[1921991] 1 default_arg_first[1921954] default_arg_last[1921968] 1))
                          CForLoop[1922008]
                          {
                            const-val yret[1922037]:int(64)[13] "dead after last mention" "YVV" "temp"
                            (1922039 'move' yret[1922037] i[1921945])
                            const-val _yieldedIndex[1922042]:int(64)[13] "temp"
                            (1922044 'move' _yieldedIndex[1922042] i[1921945])
                            {
                              const-val i[1922048]:int(64)[13] "const" "index var" "insert auto destroy"
                              (1922050 'move' i[1922048] _yieldedIndex[1922042])
                              const-val yret[1922053]:int(64)[13] "dead after last mention" "YVV" "temp"
                              (1922055 'move' yret[1922053] _yieldedIndex[1922042])
                              const-val _yieldedIndex[1922058]:int(64)[13] "temp"
                              (1922060 'move' _yieldedIndex[1922058] _yieldedIndex[1922042])
                              {
                                const-val i[1922064]:int(64)[13] "const" "index var" "insert auto destroy"
                                (1922066 'move' i[1922064] _yieldedIndex[1922058])
                                const-val yret[1922069]:int(64)[13] "dead after last mention" "YVV" "temp"
                                (1922071 'move' yret[1922069] _yieldedIndex[1922058])
                                const-val _yieldedIndex[1922107]:int(64)[13] "temp"
                                (1922257 'move' _yieldedIndex[1922107] _yieldedIndex[1922058])
                                {
                                  const-val j[1922109]:int(64)[13] "const" "index var" "insert auto destroy"
                                  (1922111 'move' j[1922109] _yieldedIndex[1922107])
                                  {
                                    const-val call_tmp[1922115]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                    (1922117 'move' call_tmp[1922115](1922120 call +[439547] i[1864032] j[1922109]))
                                    const-val call_tmp[1922123]:int(64)[13] "dead at end of block" "maybe param" "temp"
                                    (1922125 'move' call_tmp[1922123](1922128 call orderToIndex[1103951] view[1030108] call_tmp[1922115]))
                                    const-val idx[1922131]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                    (1922133 'move' idx[1922131] call_tmp[1922123])
                                    ref call_tmp[1922136]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
                                    ref _this_tmp_[1922138]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "reference to a const" "temp"
                                    (1922140 'move' _this_tmp_[1922138](1922143 call buff[757875] x[1765550]))
                                    val coerce_tmp[1922145]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1922147 'move' coerce_tmp[1922145](1922149 'deref' _this_tmp_[1922138]))
                                    (1922151 'move' call_tmp[1922136](1922154 call this[954002] coerce_tmp[1922145] idx[1922131]))
                                    ref call_tmp[1922157]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
                                    ref _this_tmp_[1922159]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "reference to a const" "temp"
                                    (1922161 'move' _this_tmp_[1922159](1922164 call buff[757875] localNeedle[1030338]))
                                    val coerce_tmp[1922166]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1922168 'move' coerce_tmp[1922166](1922170 'deref' _this_tmp_[1922159]))
                                    (1922172 'move' call_tmp[1922157](1922175 call this[954002] coerce_tmp[1922166] j[1922109]))
                                    const-val call_tmp[1922178]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    const-val coerce_tmp[1922180]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1922182 'move' coerce_tmp[1922180](1922184 'deref' call_tmp[1922136]))
                                    const-val coerce_tmp[1922186]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1922188 'move' coerce_tmp[1922186](1922190 'deref' call_tmp[1922157]))
                                    (1922192 'move' call_tmp[1922178](1922195 call !=[435945] coerce_tmp[1922180] coerce_tmp[1922186]))
                                    const-val call_tmp[1922198]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1922200 'move' call_tmp[1922198] call_tmp[1922178])
                                    if call_tmp[1922198]
                                    {
                                      (1922248 call _freeIterator[1103385] _iterator[1921919])
                                      (1922251 call chpl__autoDestroy[1567619] tmp[1921722])
                                      (1922254 call _freeIterator[1103635] _iterator[1921663])
                                      break _breakLabel[1864200] _breakLabel[1864200]
                                    }
                                    const-val call_tmp[1922208]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1922210 'move' call_tmp[1922208](1922213 call -[962137] nLen[1030077]))
                                    const-val call_tmp[1922215]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1922217 'move' call_tmp[1922215](1922220 call ==[435539] j[1922109] call_tmp[1922208]))
                                    const-val call_tmp[1922223]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1922225 'move' call_tmp[1922223] call_tmp[1922215])
                                    if call_tmp[1922223]
                                    {
                                      {
                                        const-val call_tmp[1922231]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                        (1922233 'move' call_tmp[1922231](1922236 call orderToIndex[1103951] view[1030108] i[1864032]))
                                        (1922240 call =[435238] localRet[1030062] call_tmp[1922231])
                                      }
                                    }
                                  }
                                  label _continueLabel[1922244]
                                }
                              }
                            }
                            {
                              const-val low[1922010]:int(64)[13] "temp"
                              (1922012 'move' low[1922010](1922014 '.v' _iterator[1921919] F0_low[1966135]))
                              (1922017 '=' i[1921945] low[1922010])
                            }
                            {
                              const-val high[1922021]:int(64)[13] "temp"
                              (1922023 'move' high[1922021](1922025 '.v' _iterator[1921919] F1_high[1966139]))
                              (1922028 '<=' i[1921945] high[1922021])
                            }
                            {
                              val call_tmp[1922032]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              (1922034 '+=' i[1921945] 1)
                            }
                          }
                          label _endchpl_direct_param_stride_range_iter[1922090]
                        }
                        (1922093 call _freeIterator[1103385] _iterator[1921919])
                        (1922096 call chpl__autoDestroy[1567619] tmp[1921722])
                        label _endchpl_direct_counted_range_iter_helper[1922098]
                      }
                      (1922101 call _freeIterator[1103635] _iterator[1921663])
                      label _endchpl_direct_counted_range_iter[1922103]
                    }
                    label _breakLabel[1864200]
                    (1864203 call _freeIterator[1103885] _iterator[1864041])
                  }
                  const-val tmp[1864205]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  const-val tmp[1864207]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  const-val call_tmp[1864209]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1864211 'move' call_tmp[1864209](1864214 call !=[435923] localRet[1030062] -1))
                  (1864217 'move' tmp[1864207] call_tmp[1864209])
                  (1864220 'move' tmp[1864205] tmp[1864207])
                  const-val call_tmp[1864223]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1864225 'move' call_tmp[1864223] tmp[1864205])
                  if call_tmp[1864223]
                  {
                    break _breakLabel[1030751] _breakLabel[1030751]
                  }
                }
                label _continueLabel[1864233]
              }
              {
                (1863993 '=' i[1863946] coerce_tmp[1863962])
              }
              {
                (1863997 '<=' i[1863946] end[1863979])
              }
              {
                val call_tmp[1864001]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1864003 '+=' i[1863946] 1)
              }
            }
            label _endthese[1864026]
          }
          label _breakLabel[1030751]
          (1799500 call _freeIterator[1101917] _iterator[1030462])
        }
        (1799503 call chpl__autoDestroy[1567322] searchSpace[1030380])
        (1799506 call chpl__autoDestroy[1573691] call_tmp[1030395])
        (1799509 call chpl__autoDestroy[1494420] localNeedle[1030338])
      }
      (1030771 call =[435238] ret[1765554] localRet[1030062])
      (1799513 call chpl__autoDestroy[1567322] view[1030108])
      (1799516 call chpl__autoDestroy[1573646] tmp[1030091])
    }
    (2032378 call chpl__autoDestroy[1494607] needle[1765548])
    (2032381 call chpl__autoDestroy[1494420] needle[2032360])
    (1030777 return _void[55])
  }
  function simpleCaseHelper[1031185](const in arg r[1765556]:range(byteIndex,bounded,false)[1025703], const  ref arg x[1765558]:_ref(string)[937850], ref arg _retArg[1789551]:_ref((range(int(64),bounded,false),int(64)))[1086397]) : void[4] "fn returns via _retArg" "resolved" "fn synchronization free"
  {
    const-val ret[1031188]:(range(int(64),bounded,false),int(64))[1084835] "dead after last mention" "RVV" "temp"
    val call_tmp[1031206]:range(int(64),bounded,false)[1026725] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1031215]:range(int(64),bounded,false)[1026725] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1789557]:range(int(64),bounded,false)[1026725] "temp"
    (1031220 call _cast[1032394] r[1765556] ret_tmp[1789557])
    (1789560 'move' call_tmp[1031215] ret_tmp[1789557])
    const-val intR[1031223]:range(int(64),bounded,false)[1026725] "dead at end of block" "const" "insert auto destroy"
    (1031225 'move' intR[1031223] call_tmp[1031215])
    {
      const-val call_tmp[1031238]:range(int(64),bounded,false)[1026725] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1786197]:range(int(64),bounded,false)[1026725] "temp"
      (1031243 call byteIndices[31065] x[1765558] ret_tmp[1786197])
      (1786200 'move' call_tmp[1031238] ret_tmp[1786197])
      const-val call_tmp[1031246]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1031248 'move' call_tmp[1031246](1031254 call boundsCheck[1033285] call_tmp[1031238] intR[1031223]))
      const-val call_tmp[1031256]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1031258 'move' call_tmp[1031256](1031261 call ![7494] call_tmp[1031246]))
      const-val call_tmp[1031263]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1031265 'move' call_tmp[1031263] call_tmp[1031256])
      if call_tmp[1031263]
      {
        val call_tmp[1031272]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1031302]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1031304 'move' call_tmp[1031302](1031307 call numBytes[32807] x[1765558]))
        (1031311 call halt[1042867] "range " r[1765556] " out of bounds for string with length " call_tmp[1031302])
      }
      (1799520 call chpl__autoDestroy[1567322] call_tmp[1031238])
    }
    val call_tmp[1031318]:byteIndex[28170] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      const-val call_tmp[1031343]:range(int(64),bounded,false)[1026725] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1786203]:range(int(64),bounded,false)[1026725] "temp"
      (1031348 call byteIndices[31065] x[1765558] ret_tmp[1786203])
      (1786206 'move' call_tmp[1031343] ret_tmp[1786203])
      const-val call_tmp[1031351]:range(int(64),bounded,false)[1026725] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1789629]:range(int(64),bounded,false)[1026725] "temp"
      (1031356 call this[1037359] intR[1031223] call_tmp[1031343] ret_tmp[1789629])
      (1789632 'move' call_tmp[1031351] ret_tmp[1789629])
      const-val call_tmp[1031365]:(range(int(64),bounded,false),int(64))[1084835] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1790269]:(range(int(64),bounded,false),int(64))[1084835] "temp"
      (1031370 call _build_tuple[1084793] call_tmp[1031351] -1 ret_tmp[1790269])
      (1790272 'move' call_tmp[1031365] ret_tmp[1790269])
      (1031373 'move' ret[1031188] call_tmp[1031365])
      (1799523 call chpl__autoDestroy[1567322] call_tmp[1031351])
      (1799526 call chpl__autoDestroy[1567322] call_tmp[1031343])
      (1799529 call chpl__autoDestroy[1567322] intR[1031223])
      gotoReturn _end_simpleCaseHelper[1031430] _end_simpleCaseHelper[1031430]
    }
    (1799532 call chpl__autoDestroy[1567322] intR[1031223])
    label _end_simpleCaseHelper[1031430]
    (1789553 '=' _retArg[1789551] ret[1031188])
    (1789555 return _void[55])
  }
  function simpleCaseHelper[1112178](const in arg r[1765674]:range(int(64),bounded,false)[1026725], const  ref arg x[1765676]:_ref(string)[937850], ref arg _retArg[1790780]:_ref((range(int(64),bounded,false),int(64)))[1086397]) : void[4] "fn returns via _retArg" "resolved" "fn synchronization free"
  {
    const-val ret[1112181]:(range(int(64),bounded,false),int(64))[1084835] "dead after last mention" "RVV" "temp"
    val call_tmp[1112199]:range(int(64),bounded,false)[1026725] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1112208]:range(int(64),bounded,false)[1026725] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1790786]:range(int(64),bounded,false)[1026725] "temp"
    (1113331 call _removed_cast[1113334] r[1765674] ret_tmp[1790786])
    (1790789 'move' call_tmp[1112208] ret_tmp[1790786])
    const-val intR[1112216]:range(int(64),bounded,false)[1026725] "dead at end of block" "const" "insert auto destroy"
    (1112218 'move' intR[1112216] call_tmp[1112208])
    {
      const-val call_tmp[1112231]:range(int(64),bounded,false)[1026725] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1786209]:range(int(64),bounded,false)[1026725] "temp"
      (1112236 call byteIndices[31065] x[1765676] ret_tmp[1786209])
      (1786212 'move' call_tmp[1112231] ret_tmp[1786209])
      const-val call_tmp[1112239]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1112241 'move' call_tmp[1112239](1112247 call boundsCheck[1033285] call_tmp[1112231] intR[1112216]))
      const-val call_tmp[1112249]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1112251 'move' call_tmp[1112249](1112254 call ![7494] call_tmp[1112239]))
      const-val call_tmp[1112256]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1112258 'move' call_tmp[1112256] call_tmp[1112249])
      if call_tmp[1112256]
      {
        val call_tmp[1112265]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1112295]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1112297 'move' call_tmp[1112295](1112300 call numBytes[32807] x[1765676]))
        (1112304 call halt[1113371] "range " r[1765674] " out of bounds for string with length " call_tmp[1112295])
      }
      (1801022 call chpl__autoDestroy[1567322] call_tmp[1112231])
    }
    val call_tmp[1112311]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      const-val call_tmp[1112375]:range(int(64),bounded,false)[1026725] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1786215]:range(int(64),bounded,false)[1026725] "temp"
      (1112380 call byteIndices[31065] x[1765676] ret_tmp[1786215])
      (1786218 'move' call_tmp[1112375] ret_tmp[1786215])
      const-val call_tmp[1112383]:range(int(64),bounded,false)[1026725] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1789641]:range(int(64),bounded,false)[1026725] "temp"
      (1112388 call this[1037359] intR[1112216] call_tmp[1112375] ret_tmp[1789641])
      (1789644 'move' call_tmp[1112383] ret_tmp[1789641])
      const-val retRange[1112390]:range(int(64),bounded,false)[1026725] "dead at end of block" "const" "insert auto destroy"
      (1112392 'move' retRange[1112390] call_tmp[1112383])
      const-val call_tmp[1112397]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1112399 'move' call_tmp[1112397](1112402 call size[1035700] retRange[1112390]))
      const-val call_tmp[1112405]:(range(int(64),bounded,false),int(64))[1084835] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1790275]:(range(int(64),bounded,false),int(64))[1084835] "temp"
      (1112410 call _build_tuple[1084793] retRange[1112390] call_tmp[1112397] ret_tmp[1790275])
      (1790278 'move' call_tmp[1112405] ret_tmp[1790275])
      (1112413 'move' ret[1112181] call_tmp[1112405])
      (1801025 call chpl__autoDestroy[1567322] retRange[1112390])
      (1801028 call chpl__autoDestroy[1567322] call_tmp[1112375])
      (1801031 call chpl__autoDestroy[1567322] intR[1112216])
      gotoReturn _end_simpleCaseHelper[1112423] _end_simpleCaseHelper[1112423]
    }
    (1801034 call chpl__autoDestroy[1567322] intR[1112216])
    label _end_simpleCaseHelper[1112423]
    (1790782 '=' _retArg[1790780] ret[1112181])
    (1790784 return _void[55])
  }
  function simpleCaseHelper[1126311](const in arg r[1765678]:range(int(64),boundedLow,false)[1087476], const  ref arg x[1765680]:_ref(string)[937850], ref arg _retArg[1791074]:_ref((range(int(64),bounded,false),int(64)))[1086397]) : void[4] "fn returns via _retArg" "resolved" "fn synchronization free"
  {
    const-val ret[1126314]:(range(int(64),bounded,false),int(64))[1084835] "dead after last mention" "RVV" "temp"
    val call_tmp[1126332]:range(int(64),boundedLow,false)[1087476] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1126341]:range(int(64),boundedLow,false)[1087476] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1791080]:range(int(64),boundedLow,false)[1087476] "temp"
    (1127464 call _removed_cast[1127467] r[1765678] ret_tmp[1791080])
    (1791083 'move' call_tmp[1126341] ret_tmp[1791080])
    const-val intR[1126349]:range(int(64),boundedLow,false)[1087476] "dead at end of block" "const" "insert auto destroy"
    (1126351 'move' intR[1126349] call_tmp[1126341])
    {
      const-val call_tmp[1126364]:range(int(64),bounded,false)[1026725] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1786227]:range(int(64),bounded,false)[1026725] "temp"
      (1126369 call byteIndices[31065] x[1765680] ret_tmp[1786227])
      (1786230 'move' call_tmp[1126364] ret_tmp[1786227])
      const-val call_tmp[1126372]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1126374 'move' call_tmp[1126372](1126380 call boundsCheck[1127532] call_tmp[1126364] intR[1126349]))
      const-val call_tmp[1126382]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1126384 'move' call_tmp[1126382](1126387 call ![7494] call_tmp[1126372]))
      const-val call_tmp[1126389]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1126391 'move' call_tmp[1126389] call_tmp[1126382])
      if call_tmp[1126389]
      {
        val call_tmp[1126398]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1126428]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1126430 'move' call_tmp[1126428](1126433 call numBytes[32807] x[1765680]))
        (1126437 call halt[1128195] "range " r[1765678] " out of bounds for string with length " call_tmp[1126428])
      }
      (1801227 call chpl__autoDestroy[1567322] call_tmp[1126364])
    }
    val call_tmp[1126444]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      const-val call_tmp[1126508]:range(int(64),bounded,false)[1026725] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1786233]:range(int(64),bounded,false)[1026725] "temp"
      (1126513 call byteIndices[31065] x[1765680] ret_tmp[1786233])
      (1786236 'move' call_tmp[1126508] ret_tmp[1786233])
      const-val call_tmp[1126516]:range(int(64),bounded,false)[1026725] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1791138]:range(int(64),bounded,false)[1026725] "temp"
      (1126521 call this[1138880] intR[1126349] call_tmp[1126508] ret_tmp[1791138])
      (1791141 'move' call_tmp[1126516] ret_tmp[1791138])
      const-val retRange[1126523]:range(int(64),bounded,false)[1026725] "dead at end of block" "const" "insert auto destroy"
      (1126525 'move' retRange[1126523] call_tmp[1126516])
      const-val call_tmp[1126530]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1126532 'move' call_tmp[1126530](1126535 call size[1035700] retRange[1126523]))
      const-val call_tmp[1126538]:(range(int(64),bounded,false),int(64))[1084835] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1790293]:(range(int(64),bounded,false),int(64))[1084835] "temp"
      (1126543 call _build_tuple[1084793] retRange[1126523] call_tmp[1126530] ret_tmp[1790293])
      (1790296 'move' call_tmp[1126538] ret_tmp[1790293])
      (1126546 'move' ret[1126314] call_tmp[1126538])
      (1801230 call chpl__autoDestroy[1567322] retRange[1126523])
      (1801233 call chpl__autoDestroy[1567322] call_tmp[1126508])
      (1801236 call chpl__autoDestroy[1573691] intR[1126349])
      gotoReturn _end_simpleCaseHelper[1126556] _end_simpleCaseHelper[1126556]
    }
    (1801239 call chpl__autoDestroy[1573691] intR[1126349])
    label _end_simpleCaseHelper[1126556]
    (1791076 '=' _retArg[1791074] ret[1126314])
    (1791078 return _void[55])
  }
  function simpleCaseHelper[1144472](const in arg r[1765682]:range(byteIndex,boundedLow,false)[1143314], const  ref arg x[1765684]:_ref(string)[937850], ref arg _retArg[1791290]:_ref((range(int(64),bounded,false),int(64)))[1086397]) : void[4] "fn returns via _retArg" "resolved" "fn synchronization free"
  {
    const-val ret[1144475]:(range(int(64),bounded,false),int(64))[1084835] "dead after last mention" "RVV" "temp"
    val call_tmp[1144493]:range(int(64),boundedLow,false)[1087476] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1144502]:range(int(64),boundedLow,false)[1087476] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1791296]:range(int(64),boundedLow,false)[1087476] "temp"
    (1144507 call _cast[1145724] r[1765682] ret_tmp[1791296])
    (1791299 'move' call_tmp[1144502] ret_tmp[1791296])
    const-val intR[1144510]:range(int(64),boundedLow,false)[1087476] "dead at end of block" "const" "insert auto destroy"
    (1144512 'move' intR[1144510] call_tmp[1144502])
    {
      const-val call_tmp[1144525]:range(int(64),bounded,false)[1026725] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1786239]:range(int(64),bounded,false)[1026725] "temp"
      (1144530 call byteIndices[31065] x[1765684] ret_tmp[1786239])
      (1786242 'move' call_tmp[1144525] ret_tmp[1786239])
      const-val call_tmp[1144533]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1144535 'move' call_tmp[1144533](1144541 call boundsCheck[1127532] call_tmp[1144525] intR[1144510]))
      const-val call_tmp[1144543]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1144545 'move' call_tmp[1144543](1144548 call ![7494] call_tmp[1144533]))
      const-val call_tmp[1144550]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1144552 'move' call_tmp[1144550] call_tmp[1144543])
      if call_tmp[1144550]
      {
        val call_tmp[1144559]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1144589]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1144591 'move' call_tmp[1144589](1144594 call numBytes[32807] x[1765684]))
        (1144598 call halt[1146366] "range " r[1765682] " out of bounds for string with length " call_tmp[1144589])
      }
      (1801343 call chpl__autoDestroy[1567322] call_tmp[1144525])
    }
    val call_tmp[1144605]:byteIndex[28170] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      const-val call_tmp[1144630]:range(int(64),bounded,false)[1026725] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1786245]:range(int(64),bounded,false)[1026725] "temp"
      (1144635 call byteIndices[31065] x[1765684] ret_tmp[1786245])
      (1786248 'move' call_tmp[1144630] ret_tmp[1786245])
      const-val call_tmp[1144638]:range(int(64),bounded,false)[1026725] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1791144]:range(int(64),bounded,false)[1026725] "temp"
      (1144643 call this[1138880] intR[1144510] call_tmp[1144630] ret_tmp[1791144])
      (1791147 'move' call_tmp[1144638] ret_tmp[1791144])
      const-val call_tmp[1144652]:(range(int(64),bounded,false),int(64))[1084835] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1790305]:(range(int(64),bounded,false),int(64))[1084835] "temp"
      (1144657 call _build_tuple[1084793] call_tmp[1144638] -1 ret_tmp[1790305])
      (1790308 'move' call_tmp[1144652] ret_tmp[1790305])
      (1144660 'move' ret[1144475] call_tmp[1144652])
      (1801346 call chpl__autoDestroy[1567322] call_tmp[1144638])
      (1801349 call chpl__autoDestroy[1567322] call_tmp[1144630])
      (1801352 call chpl__autoDestroy[1573691] intR[1144510])
      gotoReturn _end_simpleCaseHelper[1144717] _end_simpleCaseHelper[1144717]
    }
    (1801355 call chpl__autoDestroy[1573691] intR[1144510])
    label _end_simpleCaseHelper[1144717]
    (1791292 '=' _retArg[1791290] ret[1144475])
    (1791294 return _void[55])
  }
  function on_fn[1181762](const in arg needle[1765698]:__serializeHelper[28086], const  ref arg x[1765700]:_ref(string)[937850], const in arg region[1765702]:range(byteIndex,boundedLow,false)[1143314], ref arg ret[1765704]:_ref(int(64))[936483]) : void[4] "on" "resolved"
  {
    val needle[2032899]:string[26] "temp"
    ref needle[2032900]:string[26] "temp"
    ref tmp[2032906]:string[26] "temp"
    (2032910 'move' tmp[2032906](2032908 'set reference' needle[2032899]))
    (2032903 call chpl__deserialize[1751162] needle[1765698] tmp[2032906])
    (2032915 'move' needle[2032900](2032913 'set reference' needle[2032899]))
    {
      val localRet[1181775]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1181777 'move' localRet[1181775] -2)
      ref call_tmp[1181782]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1181784 'move' call_tmp[1181782](1181787 call buffLen[757797] needle[2032900]))
      const-val nLen[1181790]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1182557]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1182561 'move' coerce_tmp[1182557](1182559 'deref' call_tmp[1181782]))
      (1803512 '=' nLen[1181790] coerce_tmp[1182557])
      (1181792 'noop')
      const-val call_tmp[1181796]:(range(int(64),bounded,false),int(64))[1084835] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1791266]:(range(int(64),bounded,false),int(64))[1084835] "temp"
      (1181801 call getView[1144352] x[1765700] region[1765702] ret_tmp[1791266])
      (1791269 'move' call_tmp[1181796] ret_tmp[1791266])
      const-val tmp[1181804]:(range(int(64),bounded,false),int(64))[1084835] "dead at end of block" "const" "insert auto destroy" "temp"
      (1181806 'move' tmp[1181804] call_tmp[1181796])
      1
      ref call_tmp[1181814]:_ref(range(int(64),bounded,false))[1026769] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1181816 'move' call_tmp[1181814](1182572 '.' tmp[1181804] x0[1084831]))
      const-val view[1181821]:range(int(64),bounded,false)[1026725] "dead at end of block" "const" "insert auto destroy"
      (1181823 'move' view[1181821](1182575 'deref' call_tmp[1181814]))
      const-val call_tmp[1181827]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (1181829 'move' call_tmp[1181827](1181832 call size[1035700] view[1181821]))
      const-val xLen[1181835]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      (1181837 'move' xLen[1181835] call_tmp[1181827])
      {
        const-val call_tmp[1181885]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1181887 'move' call_tmp[1181885](1181890 call ==[435539] nLen[1181790] 0))
        const-val call_tmp[1181893]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1181895 'move' call_tmp[1181893] call_tmp[1181885])
        if call_tmp[1181893]
        {
          {
            (1181919 call =[435238] localRet[1181775] -1)
          }
        }
      }
      const-val call_tmp[1181974]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1181976 'move' call_tmp[1181974](1181979 call >[437583] nLen[1181790] xLen[1181835]))
      const-val call_tmp[1181982]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1181984 'move' call_tmp[1181982] call_tmp[1181974])
      if call_tmp[1181982]
      {
        (1181999 call =[435238] localRet[1181775] -1)
      }
      const-val call_tmp[1182012]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1182014 'move' call_tmp[1182012](1182017 call ==[435539] localRet[1181775] -2))
      const-val call_tmp[1182020]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1182022 'move' call_tmp[1182020] call_tmp[1182012])
      if call_tmp[1182020]
      {
        (1182037 call =[435238] localRet[1181775] -1)
        const-val call_tmp[1182042]:string[26] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1786487]:string[26] "temp"
        (1182050 call localize[32886] needle[2032900] ret_tmp[1786487])
        (1786490 'move' call_tmp[1182042] ret_tmp[1786487])
        const localNeedle[1182051]:string[26] "dead at end of block" "const" "insert auto destroy"
        (1182053 'move' localNeedle[1182051] call_tmp[1182042])
        ref call_tmp[1182057]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1182059 'move' call_tmp[1182057](1182062 call buffLen[757797] localNeedle[1182051]))
        const-val needleLen[1182065]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[1182621]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1182625 'move' coerce_tmp[1182621](1182623 'deref' call_tmp[1182057]))
        (1182067 'move' needleLen[1182065] coerce_tmp[1182621])
        const-val call_tmp[1182071]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1182073 'move' call_tmp[1182071](1182076 call -[440327] xLen[1181835] nLen[1181790]))
        const-val call_tmp[1182079]:int(64)[13] "dead at end of block" "maybe param" "temp"
        (1182081 'move' call_tmp[1182079](1182084 call +[949577] call_tmp[1182071]))
        const-val numPossible[1182087]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        (1182089 'move' numPossible[1182087] call_tmp[1182079])
        const-val searchSpace[1182093]:range(int(64),bounded,false)[1026725] "dead at end of block" "const" "insert auto destroy"
        const-val tmp[1182095]:range(int(64),bounded,false)[1026725] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val tmp[1182106]:range(int(64),bounded,false)[1026725] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1182108]:range(int(64),boundedLow,false)[1087476] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1790383]:range(int(64),boundedLow,false)[1087476] "temp"
        (1182113 call chpl_build_low_bounded_range[1086869] 0 ret_tmp[1790383])
        (1790386 'move' call_tmp[1182108] ret_tmp[1790383])
        const-val ret_tmp[1790479]:range(int(64),bounded,false)[1026725] "temp"
        (1182118 call #[1087836] call_tmp[1182108] numPossible[1182087] ret_tmp[1790479])
        (1790482 'move' tmp[1182106] ret_tmp[1790479])
        (1182121 'move' tmp[1182095] tmp[1182106])
        (1182163 'move' searchSpace[1182093] tmp[1182095])
        {
          val _indexOfInterest[1182173]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1182175]:_ic_these_range_int64_t_bounded_F[1096614] "dead at end of block" "expr temp" "temp"
          (1182177 'move' _iterator[1182175](1182180 call _getIterator[1095231] searchSpace[1182093]))
          {
            val ret[1867638]:_ir_these_range_int64_t_bounded_F[1096620] "dead after last mention" "RVV" "temp"
            const-val _return_tmp_[1867640]:bool[10] "dead after last mention" "temp"
            const-val this[1867941]:range(int(64),bounded,false)[1026725] "temp"
            (1867946 'move' this[1867941](1867943 '.v' _iterator[1182175] F0_this[1964014]))
            (1867642 'move' _return_tmp_[1867640](1867645 call checkIfIterWillOverflow[1095725] this[1867941] 1))
            val i[1867648]:int(64)[13] "dead at end of block" "insert auto destroy"
            val call_tmp[1867650]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (1867652 'move' i[1867648] 0)
            ref call_tmp[1867655]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[1867948]:range(int(64),bounded,false)[1026725] "temp"
            (1867953 'move' this[1867948](1867950 '.v' _iterator[1182175] F0_this[1964014]))
            (1867657 'move' call_tmp[1867655](1867660 call _low[1028363] this[1867948]))
            const-val start[1867662]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1867664]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1867666 'move' coerce_tmp[1867664](1867668 'deref' call_tmp[1867655]))
            (1867670 '=' start[1867662] coerce_tmp[1867664])
            (1867673 'noop')
            ref call_tmp[1867674]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[1867955]:range(int(64),bounded,false)[1026725] "temp"
            (1867960 'move' this[1867955](1867957 '.v' _iterator[1182175] F0_this[1964014]))
            (1867676 'move' call_tmp[1867674](1867679 call _high[1028571] this[1867955]))
            const end[1867681]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1867683]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1867685 'move' coerce_tmp[1867683](1867687 'deref' call_tmp[1867674]))
            (1867689 '=' end[1867681] coerce_tmp[1867683])
            (1867692 'noop')
            CForLoop[1867693] hazard
            {
              const-val yret[1867708]:int(64)[13] "dead after last mention" "YVV" "temp"
              const-val call_tmp[1867710]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val this[1867962]:range(int(64),bounded,false)[1026725] "temp"
              (1867967 'move' this[1867962](1867964 '.v' _iterator[1182175] F0_this[1964014]))
              (1867712 'move' call_tmp[1867710](1867715 call chpl_intToIdx[1028391] this[1867962] i[1867648]))
              (1867718 'move' yret[1867708] call_tmp[1867710])
              const-val _yieldedIndex[1867732]:int(64)[13] "temp"
              (1867939 'move' _yieldedIndex[1867732] call_tmp[1867710])
              {
                const-val i[1867734]:int(64)[13] "const" "index var" "insert auto destroy"
                (1867736 'move' i[1867734] _yieldedIndex[1867732])
                {
                  {
                    val _indexOfInterest[1867741]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[1867743]:_ic_chpl_direct_counted_range_iter[1103701] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[1867745]:_ir_chpl_direct_counted_range_iter[1103707] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[1867747]:_ir_chpl_direct_counted_range_iter[1103707] "temp"
                    (1867750 call chpl_direct_counted_range_iter[457907] 0 nLen[1181790] ret_tmp[1867747])
                    (1867754 'move' call_tmp[1867745] ret_tmp[1867747])
                    (1867757 'move' _iterator[1867743](1867760 call _getIterator[1103716] call_tmp[1867745]))
                    {
                      val ret[1924150]:_ir_chpl_direct_counted_range_iter[1103707] "dead after last mention" "RVV" "temp"
                      val _indexOfInterest[1924152]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1924154]:_ic_chpl_direct_counted_range_iter_helper[1103451] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1924156]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1924158]:_ir_chpl_direct_counted_range_iter_helper[1103457] "temp"
                      const-val low[1924750]:int(64)[13] "temp"
                      (1924755 'move' low[1924750](1924752 '.v' _iterator[1867743] F0_low[1960165]))
                      const-val count[1924757]:int(64)[13] "temp"
                      (1924762 'move' count[1924757](1924759 '.v' _iterator[1867743] F1_count[1960169]))
                      (1924161 call chpl_direct_counted_range_iter_helper[1102009] low[1924750] count[1924757] ret_tmp[1924158])
                      (1924165 'move' call_tmp[1924156] ret_tmp[1924158])
                      (1924168 'move' _iterator[1924154](1924171 call _getIterator[1103466] call_tmp[1924156]))
                      {
                        val ret[1924174]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead after last mention" "RVV" "temp"
                        val call_tmp[1924176]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                        const-val tmp[1924178]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val tmp[1924180]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                        const-val call_tmp[1924182]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[1924184]:int(64)[13] "temp"
                        (1924186 'move' count[1924184](1924188 '.v' _iterator[1924154] F1_count[1964641]))
                        (1924191 'move' call_tmp[1924182](1924194 call <[948309] count[1924184]))
                        (1924196 'move' tmp[1924180] call_tmp[1924182])
                        (1924199 'move' tmp[1924178] call_tmp[1924182])
                        const-val call_tmp[1924202]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1924204 'move' call_tmp[1924202] call_tmp[1924182])
                        if call_tmp[1924182]
                        {
                          (1924210 call boundsCheckHalt[210079] "With a negative count, the range must have a last index.")
                        }
                        const-val tmp[1924213]:2*int(64)[1039967] "dead at end of block" "const" "insert auto destroy" "temp"
                        val tmp[1924215]:2*int(64)[1039967] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                        const-val tmp[1924217]:bool[10] "dead after last mention" "maybe param" "temp"
                        const-val call_tmp[1924219]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[1924221]:int(64)[13] "temp"
                        (1924223 'move' count[1924221](1924225 '.v' _iterator[1924154] F1_count[1964641]))
                        (1924228 'move' call_tmp[1924219](1924231 call ==[435539] count[1924221] 0))
                        (1924234 'move' tmp[1924217] call_tmp[1924219])
                        if call_tmp[1924219]
                        {
                          const-val tmp[1924239]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                          val call_tmp[1924241]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[1924243]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val low[1924245]:int(64)[13] "temp"
                          (1924247 'move' low[1924245](1924249 '.v' _iterator[1924154] F0_low[1964637]))
                          (1924252 'move' call_tmp[1924243](1924255 call _cast[955945] low[1924245]))
                          const-val call_tmp[1924257]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[1924259]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                          (1924261 'move' coerce_tmp[1924259](1924263 'cast' uint(64)[115] 1))
                          (1924266 'move' call_tmp[1924257](1924269 call -[962104] call_tmp[1924243]))
                          const-val call_tmp[1924271]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          (1924273 'move' call_tmp[1924271](1924276 call _cast[953454] call_tmp[1924257]))
                          const-val ret_tmp[1924278]:2*int(64)[1039967] "temp"
                          const-val low[1924280]:int(64)[13] "temp"
                          (1924282 'move' low[1924280](1924284 '.v' _iterator[1924154] F0_low[1964637]))
                          (1924288 call _build_tuple[1039925] low[1924280] call_tmp[1924271] ret_tmp[1924278])
                          (1924292 'move' tmp[1924239] ret_tmp[1924278])
                          (1924295 'move' tmp[1924215] tmp[1924239])
                        }
                        {
                          const-val tmp[1924299]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                          val call_tmp[1924301]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[1924303]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val count[1924305]:int(64)[13] "temp"
                          (1924307 'move' count[1924305](1924309 '.v' _iterator[1924154] F1_count[1964641]))
                          (1924312 'move' call_tmp[1924303] count[1924305])
                          const-val call_tmp[1924315]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val count[1924317]:int(64)[13] "temp"
                          (1924319 'move' count[1924317](1924321 '.v' _iterator[1924154] F1_count[1964641]))
                          (1924324 'move' call_tmp[1924315](1924327 call -[962137] count[1924317]))
                          const-val call_tmp[1924329]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val low[1924331]:int(64)[13] "temp"
                          (1924333 'move' low[1924331](1924335 '.v' _iterator[1924154] F0_low[1964637]))
                          (1924338 'move' call_tmp[1924329](1924341 call +[439547] low[1924331] call_tmp[1924315]))
                          const-val ret_tmp[1924344]:2*int(64)[1039967] "temp"
                          const-val low[1924346]:int(64)[13] "temp"
                          (1924348 'move' low[1924346](1924350 '.v' _iterator[1924154] F0_low[1964637]))
                          (1924354 call _build_tuple[1039925] low[1924346] call_tmp[1924329] ret_tmp[1924344])
                          (1924358 'move' tmp[1924299] ret_tmp[1924344])
                          (1924361 'move' tmp[1924215] tmp[1924299])
                        }
                        (1924365 '=' tmp[1924213] tmp[1924215])
                        (1924368 'noop')
                        1
                        ref call_tmp[1924370]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
                        (1924372 'move' call_tmp[1924370](1924374 '.' tmp[1924213] x0[1039963]))
                        const-val start[1924377]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                        const-val coerce_tmp[1924379]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                        (1924381 'move' coerce_tmp[1924379](1924383 'deref' call_tmp[1924370]))
                        (1924385 '=' start[1924377] coerce_tmp[1924379])
                        (1924388 'noop')
                        ref call_tmp[1924389]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
                        (1924391 'move' call_tmp[1924389](1924393 '.' tmp[1924213] x1[1039965]))
                        const-val end[1924396]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                        const-val coerce_tmp[1924398]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                        (1924400 'move' coerce_tmp[1924398](1924402 'deref' call_tmp[1924389]))
                        (1924404 '=' end[1924396] coerce_tmp[1924398])
                        (1924407 'noop')
                        val _indexOfInterest[1924408]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[1924410]:_ic_chpl_direct_param_stride_range_iter[1103197] "dead at end of block" "expr temp" "temp"
                        const-val call_tmp[1924412]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead at end of block" "expr temp" "maybe param" "temp"
                        const-val ret_tmp[1924414]:_ir_chpl_direct_param_stride_range_iter[1103203] "temp"
                        (1924417 call chpl_direct_param_stride_range_iter[1102435] coerce_tmp[1924379] coerce_tmp[1924398] ret_tmp[1924414])
                        (1924421 'move' call_tmp[1924412] ret_tmp[1924414])
                        (1924424 'move' _iterator[1924410](1924427 call _getIterator[1103212] call_tmp[1924412]))
                        {
                          val ret[1924430]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead after last mention" "RVV" "temp"
                          val call_tmp[1924432]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (1924435 call chpl_range_check_stride[1102755])
                          val i[1924436]:int(64)[13] "dead at end of block" "insert auto destroy"
                          val call_tmp[1924438]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (1924440 'move' i[1924436] 0)
                          val call_tmp[1924443]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val default_arg_first[1924445]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val low[1924447]:int(64)[13] "temp"
                          (1924449 'move' low[1924447](1924451 '.v' _iterator[1924410] F0_low[1966135]))
                          (1924454 'move' default_arg_first[1924445](1924457 call chpl_checkIfRangeIterWillOverflow_default_first[1103109] low[1924447]))
                          const-val default_arg_last[1924459]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val high[1924461]:int(64)[13] "temp"
                          (1924463 'move' high[1924461](1924465 '.v' _iterator[1924410] F1_high[1966139]))
                          (1924468 'move' default_arg_last[1924459](1924471 call chpl_checkIfRangeIterWillOverflow_default_last[1103137] high[1924461]))
                          const-val _return_tmp_[1924473]:bool[10] "dead after last mention" "temp"
                          const-val low[1924475]:int(64)[13] "temp"
                          (1924477 'move' low[1924475](1924479 '.v' _iterator[1924410] F0_low[1966135]))
                          const-val high[1924482]:int(64)[13] "temp"
                          (1924484 'move' high[1924482](1924486 '.v' _iterator[1924410] F1_high[1966139]))
                          (1924489 'move' _return_tmp_[1924473](1924492 call chpl_checkIfRangeIterWillOverflow[1095987] low[1924475] high[1924482] 1 default_arg_first[1924445] default_arg_last[1924459] 1))
                          CForLoop[1924499]
                          {
                            const-val yret[1924528]:int(64)[13] "dead after last mention" "YVV" "temp"
                            (1924530 'move' yret[1924528] i[1924436])
                            const-val _yieldedIndex[1924533]:int(64)[13] "temp"
                            (1924535 'move' _yieldedIndex[1924533] i[1924436])
                            {
                              const-val i[1924539]:int(64)[13] "const" "index var" "insert auto destroy"
                              (1924541 'move' i[1924539] _yieldedIndex[1924533])
                              const-val yret[1924544]:int(64)[13] "dead after last mention" "YVV" "temp"
                              (1924546 'move' yret[1924544] _yieldedIndex[1924533])
                              const-val _yieldedIndex[1924549]:int(64)[13] "temp"
                              (1924551 'move' _yieldedIndex[1924549] _yieldedIndex[1924533])
                              {
                                const-val i[1924555]:int(64)[13] "const" "index var" "insert auto destroy"
                                (1924557 'move' i[1924555] _yieldedIndex[1924549])
                                const-val yret[1924560]:int(64)[13] "dead after last mention" "YVV" "temp"
                                (1924562 'move' yret[1924560] _yieldedIndex[1924549])
                                const-val _yieldedIndex[1924598]:int(64)[13] "temp"
                                (1924748 'move' _yieldedIndex[1924598] _yieldedIndex[1924549])
                                {
                                  const-val j[1924600]:int(64)[13] "const" "index var" "insert auto destroy"
                                  (1924602 'move' j[1924600] _yieldedIndex[1924598])
                                  {
                                    const-val call_tmp[1924606]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                    (1924608 'move' call_tmp[1924606](1924611 call +[439547] i[1867734] j[1924600]))
                                    const-val call_tmp[1924614]:int(64)[13] "dead at end of block" "maybe param" "temp"
                                    (1924616 'move' call_tmp[1924614](1924619 call orderToIndex[1103951] view[1181821] call_tmp[1924606]))
                                    const-val idx[1924622]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                    (1924624 'move' idx[1924622] call_tmp[1924614])
                                    ref call_tmp[1924627]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
                                    ref _this_tmp_[1924629]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "reference to a const" "temp"
                                    (1924631 'move' _this_tmp_[1924629](1924634 call buff[757875] x[1765700]))
                                    val coerce_tmp[1924636]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1924638 'move' coerce_tmp[1924636](1924640 'deref' _this_tmp_[1924629]))
                                    (1924642 'move' call_tmp[1924627](1924645 call this[954002] coerce_tmp[1924636] idx[1924622]))
                                    ref call_tmp[1924648]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
                                    ref _this_tmp_[1924650]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "reference to a const" "temp"
                                    (1924652 'move' _this_tmp_[1924650](1924655 call buff[757875] localNeedle[1182051]))
                                    val coerce_tmp[1924657]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1924659 'move' coerce_tmp[1924657](1924661 'deref' _this_tmp_[1924650]))
                                    (1924663 'move' call_tmp[1924648](1924666 call this[954002] coerce_tmp[1924657] j[1924600]))
                                    const-val call_tmp[1924669]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    const-val coerce_tmp[1924671]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1924673 'move' coerce_tmp[1924671](1924675 'deref' call_tmp[1924627]))
                                    const-val coerce_tmp[1924677]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1924679 'move' coerce_tmp[1924677](1924681 'deref' call_tmp[1924648]))
                                    (1924683 'move' call_tmp[1924669](1924686 call !=[435945] coerce_tmp[1924671] coerce_tmp[1924677]))
                                    const-val call_tmp[1924689]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1924691 'move' call_tmp[1924689] call_tmp[1924669])
                                    if call_tmp[1924689]
                                    {
                                      (1924739 call _freeIterator[1103385] _iterator[1924410])
                                      (1924742 call chpl__autoDestroy[1567619] tmp[1924213])
                                      (1924745 call _freeIterator[1103635] _iterator[1924154])
                                      break _breakLabel[1867902] _breakLabel[1867902]
                                    }
                                    const-val call_tmp[1924699]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1924701 'move' call_tmp[1924699](1924704 call -[962137] nLen[1181790]))
                                    const-val call_tmp[1924706]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1924708 'move' call_tmp[1924706](1924711 call ==[435539] j[1924600] call_tmp[1924699]))
                                    const-val call_tmp[1924714]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1924716 'move' call_tmp[1924714] call_tmp[1924706])
                                    if call_tmp[1924714]
                                    {
                                      {
                                        const-val call_tmp[1924722]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                        (1924724 'move' call_tmp[1924722](1924727 call orderToIndex[1103951] view[1181821] i[1867734]))
                                        (1924731 call =[435238] localRet[1181775] call_tmp[1924722])
                                      }
                                    }
                                  }
                                  label _continueLabel[1924735]
                                }
                              }
                            }
                            {
                              const-val low[1924501]:int(64)[13] "temp"
                              (1924503 'move' low[1924501](1924505 '.v' _iterator[1924410] F0_low[1966135]))
                              (1924508 '=' i[1924436] low[1924501])
                            }
                            {
                              const-val high[1924512]:int(64)[13] "temp"
                              (1924514 'move' high[1924512](1924516 '.v' _iterator[1924410] F1_high[1966139]))
                              (1924519 '<=' i[1924436] high[1924512])
                            }
                            {
                              val call_tmp[1924523]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              (1924525 '+=' i[1924436] 1)
                            }
                          }
                          label _endchpl_direct_param_stride_range_iter[1924581]
                        }
                        (1924584 call _freeIterator[1103385] _iterator[1924410])
                        (1924587 call chpl__autoDestroy[1567619] tmp[1924213])
                        label _endchpl_direct_counted_range_iter_helper[1924589]
                      }
                      (1924592 call _freeIterator[1103635] _iterator[1924154])
                      label _endchpl_direct_counted_range_iter[1924594]
                    }
                    label _breakLabel[1867902]
                    (1867905 call _freeIterator[1103885] _iterator[1867743])
                  }
                  const-val tmp[1867907]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  const-val tmp[1867909]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  const-val call_tmp[1867911]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1867913 'move' call_tmp[1867911](1867916 call !=[435923] localRet[1181775] -1))
                  (1867919 'move' tmp[1867909] call_tmp[1867911])
                  (1867922 'move' tmp[1867907] tmp[1867909])
                  const-val call_tmp[1867925]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1867927 'move' call_tmp[1867925] tmp[1867907])
                  if call_tmp[1867925]
                  {
                    break _breakLabel[1182464] _breakLabel[1182464]
                  }
                }
                label _continueLabel[1867935]
              }
              {
                (1867695 '=' i[1867648] coerce_tmp[1867664])
              }
              {
                (1867699 '<=' i[1867648] end[1867681])
              }
              {
                val call_tmp[1867703]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1867705 '+=' i[1867648] 1)
              }
            }
            label _endthese[1867728]
          }
          label _breakLabel[1182464]
          (1803523 call _freeIterator[1101917] _iterator[1182175])
        }
        (1803526 call chpl__autoDestroy[1567322] searchSpace[1182093])
        (1803529 call chpl__autoDestroy[1573691] call_tmp[1182108])
        (1803532 call chpl__autoDestroy[1494420] localNeedle[1182051])
      }
      (1182484 call =[435238] ret[1765704] localRet[1181775])
      (1803536 call chpl__autoDestroy[1567322] view[1181821])
      (1803539 call chpl__autoDestroy[1573646] tmp[1181804])
    }
    (2032917 call chpl__autoDestroy[1494607] needle[1765698])
    (2032920 call chpl__autoDestroy[1494420] needle[2032899])
    (1182490 return _void[55])
  }
  function simpleCaseHelper[1185988](const in arg r[1765714]:range(byteIndex,boundedHigh,false)[1184830], const  ref arg x[1765716]:_ref(string)[937850], ref arg _retArg[1791612]:_ref((range(int(64),bounded,false),int(64)))[1086397]) : void[4] "fn returns via _retArg" "resolved" "fn synchronization free"
  {
    const-val ret[1185991]:(range(int(64),bounded,false),int(64))[1084835] "dead after last mention" "RVV" "temp"
    val call_tmp[1186009]:range(int(64),boundedHigh,false)[1187340] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1186018]:range(int(64),boundedHigh,false)[1187340] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1791618]:range(int(64),boundedHigh,false)[1187340] "temp"
    (1186023 call _cast[1187542] r[1765714] ret_tmp[1791618])
    (1791621 'move' call_tmp[1186018] ret_tmp[1791618])
    const-val intR[1186026]:range(int(64),boundedHigh,false)[1187340] "dead at end of block" "const" "insert auto destroy"
    (1186028 'move' intR[1186026] call_tmp[1186018])
    {
      const-val call_tmp[1186041]:range(int(64),bounded,false)[1026725] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1786251]:range(int(64),bounded,false)[1026725] "temp"
      (1186046 call byteIndices[31065] x[1765716] ret_tmp[1786251])
      (1786254 'move' call_tmp[1186041] ret_tmp[1786251])
      const-val call_tmp[1186049]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1186051 'move' call_tmp[1186049](1186057 call boundsCheck[1189449] call_tmp[1186041] intR[1186026]))
      const-val call_tmp[1186059]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1186061 'move' call_tmp[1186059](1186064 call ![7494] call_tmp[1186049]))
      const-val call_tmp[1186066]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1186068 'move' call_tmp[1186066] call_tmp[1186059])
      if call_tmp[1186066]
      {
        val call_tmp[1186075]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1186105]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1186107 'move' call_tmp[1186105](1186110 call numBytes[32807] x[1765716]))
        (1186114 call halt[1190571] "range " r[1765714] " out of bounds for string with length " call_tmp[1186105])
      }
      (1803612 call chpl__autoDestroy[1567322] call_tmp[1186041])
    }
    val call_tmp[1186121]:byteIndex[28170] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      const-val call_tmp[1186146]:range(int(64),bounded,false)[1026725] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1786257]:range(int(64),bounded,false)[1026725] "temp"
      (1186151 call byteIndices[31065] x[1765716] ret_tmp[1786257])
      (1786260 'move' call_tmp[1186146] ret_tmp[1786257])
      const-val call_tmp[1186154]:range(int(64),bounded,false)[1026725] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1791742]:range(int(64),bounded,false)[1026725] "temp"
      (1186159 call this[1200260] intR[1186026] call_tmp[1186146] ret_tmp[1791742])
      (1791745 'move' call_tmp[1186154] ret_tmp[1791742])
      const-val call_tmp[1186168]:(range(int(64),bounded,false),int(64))[1084835] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1790311]:(range(int(64),bounded,false),int(64))[1084835] "temp"
      (1186173 call _build_tuple[1084793] call_tmp[1186154] -1 ret_tmp[1790311])
      (1790314 'move' call_tmp[1186168] ret_tmp[1790311])
      (1186176 'move' ret[1185991] call_tmp[1186168])
      (1803615 call chpl__autoDestroy[1567322] call_tmp[1186154])
      (1803618 call chpl__autoDestroy[1567322] call_tmp[1186146])
      (1803621 call chpl__autoDestroy[1578347] intR[1186026])
      gotoReturn _end_simpleCaseHelper[1186233] _end_simpleCaseHelper[1186233]
    }
    (1803624 call chpl__autoDestroy[1578347] intR[1186026])
    label _end_simpleCaseHelper[1186233]
    (1791614 '=' _retArg[1791612] ret[1185991])
    (1791616 return _void[55])
  }
  function wrapon_fn[2035078](const in arg dummy_locale_arg[2035080]:chpl_localeID_t[209294], in arg buf[2035082]:c_void_ptr[149], in arg buf_size[2035084]:int(64)[13], in arg c[2035086]:_class_localson_fn[2035026]) : void[4] "on block"
  {
    val _0_tmp[2035091]:chpl_localeID_t[209294] "temp"
    (2035096 'move' _0_tmp[2035091](2035093 '.v' c[2035086] _0_tmp[2035029]))
    ref _1_x[2035098]:string[26] "temp"
    (2035103 'move' _1_x[2035098](2035100 '.v' c[2035086] _1_x[2035031]))
    ref _2_ret[2035106]:int(64)[13] "temp"
    (2035111 'move' _2_ret[2035106](2035108 '.v' c[2035086] _2_ret[2035033]))
    (2035089 call on_fn[935375] _1_x[2035098] _2_ret[2035106])
    (2035114 return _void[55])
  }
  function wrapon_fn[2035914](const in arg dummy_locale_arg[2035916]:chpl_localeID_t[209294], in arg buf[2035918]:c_void_ptr[149], in arg buf_size[2035920]:int(64)[13], in arg c[2035922]:_class_localson_fn[2035862]) : void[4] "on block"
  {
    val _0_tmp[2035927]:chpl_localeID_t[209294] "temp"
    (2035932 'move' _0_tmp[2035927](2035929 '.v' c[2035922] _0_tmp[2035865]))
    ref _1_lhs[2035934]:string[26] "temp"
    (2035939 'move' _1_lhs[2035934](2035936 '.v' c[2035922] _1_lhs[2035867]))
    ref _2_rhs[2035942]:string[26] "temp"
    (2035947 'move' _2_rhs[2035942](2035944 '.v' c[2035922] _2_rhs[2035869]))
    (2035925 call on_fn[979064] _1_lhs[2035934] _2_rhs[2035942])
    (2035950 return _void[55])
  }
  function wrapon_fn[2036682](const in arg dummy_locale_arg[2036684]:chpl_localeID_t[209294], in arg buf[2036686]:c_void_ptr[149], in arg buf_size[2036688]:int(64)[13], in arg c[2036690]:_class_localson_fn[2036630]) : void[4] "on block"
  {
    val _0_tmp[2036695]:chpl_localeID_t[209294] "temp"
    (2036700 'move' _0_tmp[2036695](2036697 '.v' c[2036690] _0_tmp[2036633]))
    ref _1_lhs[2036702]:string[26] "temp"
    (2036707 'move' _1_lhs[2036702](2036704 '.v' c[2036690] _1_lhs[2036635]))
    ref _2_rhs[2036710]:string[26] "temp"
    (2036715 'move' _2_rhs[2036710](2036712 '.v' c[2036690] _2_rhs[2036637]))
    (2036693 call on_fn[1019552] _1_lhs[2036702] _2_rhs[2036710])
    (2036718 return _void[55])
  }
  function wrapon_fn[2037379](const in arg dummy_locale_arg[2037381]:chpl_localeID_t[209294], in arg buf[2037383]:c_void_ptr[149], in arg buf_size[2037385]:int(64)[13], in arg c[2037387]:_class_localson_fn[2037315]) : void[4] "on block"
  {
    val _0_tmp[2037392]:chpl_localeID_t[209294] "temp"
    (2037397 'move' _0_tmp[2037392](2037394 '.v' c[2037387] _0_tmp[2037318]))
    val _1_needle_data[2037399]:__serializeHelper[28086] "temp"
    (2037404 'move' _1_needle_data[2037399](2037401 '.v' c[2037387] _1_needle_data[2037320]))
    ref _2_x[2037407]:string[26] "temp"
    (2037412 'move' _2_x[2037407](2037409 '.v' c[2037387] _2_x[2037322]))
    val _3_region[2037415]:range(byteIndex,bounded,false)[1025703] "temp"
    (2037420 'move' _3_region[2037415](2037417 '.v' c[2037387] _3_region[2037324]))
    ref _4_ret[2037423]:int(64)[13] "temp"
    (2037428 'move' _4_ret[2037423](2037425 '.v' c[2037387] _4_ret[2037326]))
    (2037390 call on_fn[1030049] _1_needle_data[2037399] _2_x[2037407] _3_region[2037415] _4_ret[2037423])
    (2037431 return _void[55])
  }
  function wrapon_fn[2039993](const in arg dummy_locale_arg[2039995]:chpl_localeID_t[209294], in arg buf[2039997]:c_void_ptr[149], in arg buf_size[2039999]:int(64)[13], in arg c[2040001]:_class_localson_fn[2039929]) : void[4] "on block"
  {
    val _0_tmp[2040006]:chpl_localeID_t[209294] "temp"
    (2040011 'move' _0_tmp[2040006](2040008 '.v' c[2040001] _0_tmp[2039932]))
    val _1_needle_data[2040013]:__serializeHelper[28086] "temp"
    (2040018 'move' _1_needle_data[2040013](2040015 '.v' c[2040001] _1_needle_data[2039934]))
    ref _2_x[2040021]:string[26] "temp"
    (2040026 'move' _2_x[2040021](2040023 '.v' c[2040001] _2_x[2039936]))
    val _3_region[2040029]:range(byteIndex,boundedLow,false)[1143314] "temp"
    (2040034 'move' _3_region[2040029](2040031 '.v' c[2040001] _3_region[2039938]))
    ref _4_ret[2040037]:int(64)[13] "temp"
    (2040042 'move' _4_ret[2040037](2040039 '.v' c[2040001] _4_ret[2039940]))
    (2040004 call on_fn[1181762] _1_needle_data[2040013] _2_x[2040021] _3_region[2040029] _4_ret[2040037])
    (2040045 return _void[55])
  }
}