AST dump for StringCasts after pass bulkCopyRecords.
Module use list: ChapelStandard SysCTypes NVStringFactory 

{
  function chpl__init_StringCasts[416157]() : void[4] "insert line file info" "module init" "resolved"
  {
    (524026 return _void[55])
  }
  function _cast[1205973](const  ref arg x[1205977]:string[26], ref arg error_out[1887213]:Error[167984]) : bool[10] throws "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[1879815]:bool[10] "temp"
    val ret[1205979]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1205987]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1905528]:string[26] "temp"
    (1205995 call strip[36095] x[1205977] " \t\r\n" 1 1 ret_tmp[1905528])
    (1905531 'move' call_tmp[1205987] ret_tmp[1905528])
    const-val str[1205996]:string[26] "dead at end of block" "insert auto destroy"
    (1205998 'move' str[1205996] call_tmp[1205987])
    const-val call_tmp[1206002]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1206004 'move' call_tmp[1206002](1206010 call isEmpty[35064] str[1205996]))
    const-val call_tmp[1206011]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1206013 'move' call_tmp[1206011] call_tmp[1206002])
    if call_tmp[1206011]
    {
      const-val call_tmp[1206020]:owned IllegalArgumentError[1064747] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      val new_temp[1206190]:IllegalArgumentError[168246] "dead after last mention" "temp"
      (1206192 'move' new_temp[1206190](1206177 call _new[1064296] "bad cast from empty string to bool"))
      const-val initTemp[1206199]:owned IllegalArgumentError[1064747] "dead after last mention" "delay instantiation" "temp"
      (1206202 call init[1064398] initTemp[1206199] new_temp[1206190])
      (1206022 'move' call_tmp[1206020] initTemp[1206199])
      val call_tmp[1206029]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1206216]:owned Error[966647] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1909222]:owned Error[966647] "temp"
      (1206218 call _cast[1064919] call_tmp[1206020] ret_tmp[1909222])
      (1909225 'move' coerce_tmp[1206216] ret_tmp[1909222])
      const-val _formal_tmp_in_err[1206395]:owned Error[966647] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1206399 'move' _formal_tmp_in_err[1206395] coerce_tmp[1206216])
      (1206031 'move' call_tmp[1206029](1206034 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1206395]))
      {
        val castedError[1887216]:Error[167984] "temp"
        (1887222 'move' castedError[1887216] call_tmp[1206029])
        (1887224 '=' error_out[1887213] castedError[1887216])
        (1924547 call chpl__autoDestroy[1601673] str[1205996])
        gotoErrorHandlingReturn _end__cast[1206128] _end__cast[1206128]
      }
    }
    {
      const-val call_tmp[1206039]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1206041 'move' call_tmp[1206039](1206044 call ==[38823] str[1205996] "true"))
      const-val call_tmp[1206047]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1206049 'move' call_tmp[1206047] call_tmp[1206039])
      if call_tmp[1206047]
      {
        (1206056 'move' ret[1205979] 1)
        (1924550 call chpl__autoDestroy[1601673] str[1205996])
        gotoReturn _end__cast[1206128] _end__cast[1206128]
      }
      {
        const-val call_tmp[1206063]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1206065 'move' call_tmp[1206063](1206068 call ==[38823] str[1205996] "false"))
        const-val call_tmp[1206071]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1206073 'move' call_tmp[1206071] call_tmp[1206063])
        if call_tmp[1206071]
        {
          (1206080 'move' ret[1205979] 0)
          (1924553 call chpl__autoDestroy[1601673] str[1205996])
          gotoReturn _end__cast[1206128] _end__cast[1206128]
        }
        {
          const-val call_tmp[1206087]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1905908]:string[26] "temp"
          (1206092 call +[38345] "bad cast from string '" x[1205977] ret_tmp[1905908])
          (1905911 'move' call_tmp[1206087] ret_tmp[1905908])
          const-val call_tmp[1206095]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1905914]:string[26] "temp"
          (1206100 call +[38345] call_tmp[1206087] "' to bool" ret_tmp[1905914])
          (1905917 'move' call_tmp[1206095] ret_tmp[1905914])
          const-val call_tmp[1206103]:owned IllegalArgumentError[1064747] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
          val new_temp[1208188]:IllegalArgumentError[168246] "dead after last mention" "temp"
          (1208190 'move' new_temp[1208188](1208175 call _new[1064296] call_tmp[1206095]))
          const-val initTemp[1208197]:owned IllegalArgumentError[1064747] "dead after last mention" "delay instantiation" "temp"
          (1208200 call init[1064398] initTemp[1208197] new_temp[1208188])
          (1206105 'move' call_tmp[1206103] initTemp[1208197])
          val call_tmp[1206112]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1208214]:owned Error[966647] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
          const-val ret_tmp[1909228]:owned Error[966647] "temp"
          (1208216 call _cast[1064919] call_tmp[1206103] ret_tmp[1909228])
          (1909231 'move' coerce_tmp[1208214] ret_tmp[1909228])
          const-val _formal_tmp_in_err[1208393]:owned Error[966647] "dead after last mention" "expr temp" "no auto destroy" "temp"
          (1208397 'move' _formal_tmp_in_err[1208393] coerce_tmp[1208214])
          (1206114 'move' call_tmp[1206112](1206117 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1208393]))
          {
            val castedError[1887229]:Error[167984] "temp"
            (1887235 'move' castedError[1887229] call_tmp[1206112])
            (1887237 '=' error_out[1887213] castedError[1887229])
            (1924556 call chpl__autoDestroy[1601673] call_tmp[1206095])
            (1924559 call chpl__autoDestroy[1601673] call_tmp[1206087])
            (1924562 call chpl__autoDestroy[1601673] str[1205996])
            gotoErrorHandlingReturn _end__cast[1206128] _end__cast[1206128]
          }
          (1924566 call chpl__autoDestroy[1601673] call_tmp[1206095])
          (1924569 call chpl__autoDestroy[1601673] call_tmp[1206087])
        }
      }
    }
    (1206124 'move' ret[1205979] 0)
    (1924572 call chpl__autoDestroy[1601673] str[1205996])
    label _end__cast[1206128]
    (1206130 return ret[1205979])
  }
  function _cast[1063342](const in arg x[1063346]:int(64)[13], ref arg _retArg[1909174]:_ref(string)[938128]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[1879728]:string[26] "temp"
    const-val ret[1063348]:string[26] "dead after last mention" "RVV" "temp"
    val isErr[1063394]:bool[10] "dead at end of block" "insert auto destroy"
    (1065715 'move' isErr[1063394] 0)
    val call_tmp[1063400]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1063407]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1063409 'move' call_tmp[1063407] x[1063346])
    val call_tmp[1063415]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1063428]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1063441]:c_string[19] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1064190]:uint(32)[110] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1064196 'move' coerce_tmp[1064190](1064192 'cast' uint(32)[110] 8))
    (1063443 'move' call_tmp[1063441](1063446 call integral_to_c_string[1063356] call_tmp[1063407] coerce_tmp[1064190] 1 isErr[1063394]))
    const-val csc[1063451]:c_string[19] "dead at end of block" "insert auto destroy"
    (1063453 'move' csc[1063451](1064199 call chpl__initCopy[21698] call_tmp[1063441]))
    const-val call_tmp[1063457]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1063459 'move' call_tmp[1063457] isErr[1063394])
    if call_tmp[1063457]
    {
      {
        val error[1885421]:Error[167984] "error variable" "temp"
        (1885436 'move' error[1885421] nil[44])
        const-val call_tmp[1063467]:owned IllegalArgumentError[1064747] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
        val new_temp[1064348]:IllegalArgumentError[168246] "dead after last mention" "temp"
        (1064350 'move' new_temp[1064348](1064241 call _new[1064296] "Unexpected case in integral_to_c_string"))
        const-val initTemp[1064379]:owned IllegalArgumentError[1064747] "dead after last mention" "delay instantiation" "temp"
        (1064382 call init[1064398] initTemp[1064379] new_temp[1064348])
        (1063469 'move' call_tmp[1063467] initTemp[1064379])
        val call_tmp[1063476]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1064861]:owned Error[966647] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
        const-val ret_tmp[1909180]:owned Error[966647] "temp"
        (1064863 call _cast[1064919] call_tmp[1063467] ret_tmp[1909180])
        (1909183 'move' coerce_tmp[1064861] ret_tmp[1909180])
        const-val _formal_tmp_in_err[1065691]:owned Error[966647] "dead after last mention" "expr temp" "no auto destroy" "temp"
        (1065695 'move' _formal_tmp_in_err[1065691] coerce_tmp[1064861])
        (1063478 'move' call_tmp[1063476](1063481 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1065691]))
        {
          val castedError[1885424]:Error[167984] "temp"
          (1885430 'move' castedError[1885424] call_tmp[1063476])
          (1885432 'move' error[1885421] castedError[1885424])
          gotoErrorHandling handler[1885422] handler[1885422]
        }
        label handler[1885422]
        const-val shouldHandleError[1885445]:bool[10] "temp"
        val errorExists[2222712]:bool[10] "temp"
        (2222717 'move' errorExists[2222712](2222714 '!=' error[1885421] nil[44]))
        (1885449 'move' shouldHandleError[1885445] errorExists[2222712])
        if shouldHandleError[1885445]
        {
          (1885442 call chpl_uncaught_error[170289] error[1885421])
        }
      }
    }
    const-val call_tmp[1063487]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    (1063489 'move' call_tmp[1063487](1063492 call strlen[1063382] csc[1063451]))
    const-val call_tmp[1063494]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1063496 'move' call_tmp[1063494](1063502 call safeCast[949966] call_tmp[1063487]))
    const-val len[1063504]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1063506 'move' len[1063504] call_tmp[1063494])
    val call_tmp[1063512]:uint(8)[100] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1063519]:c_ptr(uint(8))[937612] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1063526]:c_ptr(uint(8))[937612] "dead after last mention" "expr temp" "maybe param" "temp"
    (1063528 'move' call_tmp[1063526](1063531 call _cast[39395] csc[1063451]))
    const-val call_tmp[1063534]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1063536 'move' call_tmp[1063534](1063539 call +[949855] len[1063504]))
    const-val call_tmp[1063542]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1904958]:string[26] "temp"
    (1063547 call chpl_createStringWithOwnedBufferNV[30676] call_tmp[1063526] len[1063504] call_tmp[1063534] len[1063504] ret_tmp[1904958])
    (1904961 'move' call_tmp[1063542] ret_tmp[1904958])
    (1063556 'move' ret[1063348] call_tmp[1063542])
    gotoReturn _end__cast[1063567] _end__cast[1063567]
    label _end__cast[1063567]
    (1909176 '=' _retArg[1909174] ret[1063348])
    (1909178 return _void[55])
  }
  function _cast[1072108](const in arg x[1072112]:uint(8)[100], ref arg _retArg[1909326]:_ref(string)[938128]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[1879738]:string[26] "temp"
    const-val ret[1072114]:string[26] "dead after last mention" "RVV" "temp"
    val isErr[1072160]:bool[10] "dead at end of block" "insert auto destroy"
    (1073661 'move' isErr[1072160] 0)
    val call_tmp[1072166]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1072173]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1072175 'move' call_tmp[1072173](1072178 'cast' int(64)[13] x[1072112]))
    val call_tmp[1072181]:uint(8)[100] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1072194]:uint(8)[100] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1072207]:c_string[19] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1073403]:uint(32)[110] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1073409 'move' coerce_tmp[1073403](1073405 'cast' uint(32)[110] 1))
    (1072209 'move' call_tmp[1072207](1072212 call integral_to_c_string[1072122] call_tmp[1072173] coerce_tmp[1073403] 0 isErr[1072160]))
    const-val csc[1072217]:c_string[19] "dead at end of block" "insert auto destroy"
    (1072219 'move' csc[1072217](1073412 call chpl__initCopy[21698] call_tmp[1072207]))
    const-val call_tmp[1072223]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1072225 'move' call_tmp[1072223] isErr[1072160])
    if call_tmp[1072223]
    {
      {
        val error[1885925]:Error[167984] "error variable" "temp"
        (1885940 'move' error[1885925] nil[44])
        const-val call_tmp[1072233]:owned IllegalArgumentError[1064747] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
        val new_temp[1073432]:IllegalArgumentError[168246] "dead after last mention" "temp"
        (1073434 'move' new_temp[1073432](1073419 call _new[1064296] "Unexpected case in integral_to_c_string"))
        const-val initTemp[1073441]:owned IllegalArgumentError[1064747] "dead after last mention" "delay instantiation" "temp"
        (1073444 call init[1064398] initTemp[1073441] new_temp[1073432])
        (1072235 'move' call_tmp[1072233] initTemp[1073441])
        val call_tmp[1072242]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1073458]:owned Error[966647] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
        const-val ret_tmp[1909186]:owned Error[966647] "temp"
        (1073460 call _cast[1064919] call_tmp[1072233] ret_tmp[1909186])
        (1909189 'move' coerce_tmp[1073458] ret_tmp[1909186])
        const-val _formal_tmp_in_err[1073637]:owned Error[966647] "dead after last mention" "expr temp" "no auto destroy" "temp"
        (1073641 'move' _formal_tmp_in_err[1073637] coerce_tmp[1073458])
        (1072244 'move' call_tmp[1072242](1072247 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1073637]))
        {
          val castedError[1885928]:Error[167984] "temp"
          (1885934 'move' castedError[1885928] call_tmp[1072242])
          (1885936 'move' error[1885925] castedError[1885928])
          gotoErrorHandling handler[1885926] handler[1885926]
        }
        label handler[1885926]
        const-val shouldHandleError[1885949]:bool[10] "temp"
        val errorExists[2222944]:bool[10] "temp"
        (2222949 'move' errorExists[2222944](2222946 '!=' error[1885925] nil[44]))
        (1885953 'move' shouldHandleError[1885949] errorExists[2222944])
        if shouldHandleError[1885949]
        {
          (1885946 call chpl_uncaught_error[170289] error[1885925])
        }
      }
    }
    const-val call_tmp[1072253]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    (1072255 'move' call_tmp[1072253](1072258 call strlen[1072148] csc[1072217]))
    const-val call_tmp[1072260]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1072262 'move' call_tmp[1072260](1072268 call safeCast[949966] call_tmp[1072253]))
    const-val len[1072270]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1072272 'move' len[1072270] call_tmp[1072260])
    val call_tmp[1072278]:uint(8)[100] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1072285]:c_ptr(uint(8))[937612] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1072292]:c_ptr(uint(8))[937612] "dead after last mention" "expr temp" "maybe param" "temp"
    (1072294 'move' call_tmp[1072292](1072297 call _cast[39395] csc[1072217]))
    const-val call_tmp[1072300]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1072302 'move' call_tmp[1072300](1072305 call +[949855] len[1072270]))
    const-val call_tmp[1072308]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1904964]:string[26] "temp"
    (1072313 call chpl_createStringWithOwnedBufferNV[30676] call_tmp[1072292] len[1072270] call_tmp[1072300] len[1072270] ret_tmp[1904964])
    (1904967 'move' call_tmp[1072308] ret_tmp[1904964])
    (1072322 'move' ret[1072114] call_tmp[1072308])
    gotoReturn _end__cast[1072333] _end__cast[1072333]
    label _end__cast[1072333]
    (1909328 '=' _retArg[1909326] ret[1072114])
    (1909330 return _void[55])
  }
  function _cast[1268654](const in arg x[1268658]:uint(64)[115], ref arg _retArg[1913042]:_ref(string)[938128]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[1879951]:string[26] "temp"
    const-val ret[1268660]:string[26] "dead after last mention" "RVV" "temp"
    val isErr[1268706]:bool[10] "dead at end of block" "insert auto destroy"
    (1269626 'move' isErr[1268706] 0)
    val call_tmp[1268712]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1268719]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1268721 'move' call_tmp[1268719](1268724 call _cast[953732] x[1268658]))
    val call_tmp[1268727]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1268740]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1268753]:c_string[19] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1269368]:uint(32)[110] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1269374 'move' coerce_tmp[1269368](1269370 'cast' uint(32)[110] 8))
    (1268755 'move' call_tmp[1268753](1268758 call integral_to_c_string[1268668] call_tmp[1268719] coerce_tmp[1269368] 0 isErr[1268706]))
    const-val csc[1268763]:c_string[19] "dead at end of block" "insert auto destroy"
    (1268765 'move' csc[1268763](1269377 call chpl__initCopy[21698] call_tmp[1268753]))
    const-val call_tmp[1268769]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1268771 'move' call_tmp[1268769] isErr[1268706])
    if call_tmp[1268769]
    {
      {
        val error[1887323]:Error[167984] "error variable" "temp"
        (1887338 'move' error[1887323] nil[44])
        const-val call_tmp[1268779]:owned IllegalArgumentError[1064747] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
        val new_temp[1269397]:IllegalArgumentError[168246] "dead after last mention" "temp"
        (1269399 'move' new_temp[1269397](1269384 call _new[1064296] "Unexpected case in integral_to_c_string"))
        const-val initTemp[1269406]:owned IllegalArgumentError[1064747] "dead after last mention" "delay instantiation" "temp"
        (1269409 call init[1064398] initTemp[1269406] new_temp[1269397])
        (1268781 'move' call_tmp[1268779] initTemp[1269406])
        val call_tmp[1268788]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1269423]:owned Error[966647] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
        const-val ret_tmp[1909234]:owned Error[966647] "temp"
        (1269425 call _cast[1064919] call_tmp[1268779] ret_tmp[1909234])
        (1909237 'move' coerce_tmp[1269423] ret_tmp[1909234])
        const-val _formal_tmp_in_err[1269602]:owned Error[966647] "dead after last mention" "expr temp" "no auto destroy" "temp"
        (1269606 'move' _formal_tmp_in_err[1269602] coerce_tmp[1269423])
        (1268790 'move' call_tmp[1268788](1268793 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1269602]))
        {
          val castedError[1887326]:Error[167984] "temp"
          (1887332 'move' castedError[1887326] call_tmp[1268788])
          (1887334 'move' error[1887323] castedError[1887326])
          gotoErrorHandling handler[1887324] handler[1887324]
        }
        label handler[1887324]
        const-val shouldHandleError[1887347]:bool[10] "temp"
        val errorExists[2223664]:bool[10] "temp"
        (2223669 'move' errorExists[2223664](2223666 '!=' error[1887323] nil[44]))
        (1887351 'move' shouldHandleError[1887347] errorExists[2223664])
        if shouldHandleError[1887347]
        {
          (1887344 call chpl_uncaught_error[170289] error[1887323])
        }
      }
    }
    const-val call_tmp[1268799]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    (1268801 'move' call_tmp[1268799](1268804 call strlen[1268694] csc[1268763]))
    const-val call_tmp[1268806]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1268808 'move' call_tmp[1268806](1268814 call safeCast[949966] call_tmp[1268799]))
    const-val len[1268816]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1268818 'move' len[1268816] call_tmp[1268806])
    val call_tmp[1268824]:uint(8)[100] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1268831]:c_ptr(uint(8))[937612] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1268838]:c_ptr(uint(8))[937612] "dead after last mention" "expr temp" "maybe param" "temp"
    (1268840 'move' call_tmp[1268838](1268843 call _cast[39395] csc[1268763]))
    const-val call_tmp[1268846]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1268848 'move' call_tmp[1268846](1268851 call +[949855] len[1268816]))
    const-val call_tmp[1268854]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905000]:string[26] "temp"
    (1268859 call chpl_createStringWithOwnedBufferNV[30676] call_tmp[1268838] len[1268816] call_tmp[1268846] len[1268816] ret_tmp[1905000])
    (1905003 'move' call_tmp[1268854] ret_tmp[1905000])
    (1268868 'move' ret[1268660] call_tmp[1268854])
    gotoReturn _end__cast[1268879] _end__cast[1268879]
    label _end__cast[1268879]
    (1913044 '=' _retArg[1913042] ret[1268660])
    (1913046 return _void[55])
  }
  function _cast[1024758](const  ref arg x[1024762]:string[26], ref arg error_out[1884940]:Error[167984]) : int(64)[13] throws "inline" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[1879694]:int(64)[13] "temp"
    val ret[1024764]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val retVal[1024900]:int(64)[13] "dead at end of block" "insert auto destroy" "split inited"
    val isErr[1024906]:bool[10] "dead at end of block" "insert auto destroy"
    (1205663 'move' isErr[1024906] 0)
    const-val call_tmp[1024912]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1905260]:string[26] "temp"
    (1024920 call localize[32889] x[1024762] ret_tmp[1905260])
    (1905263 'move' call_tmp[1024912] ret_tmp[1905260])
    val localX[1024921]:string[26] "dead at end of block" "insert auto destroy"
    (1024923 'move' localX[1024921] call_tmp[1024912])
    const-val call_tmp[1024927]:byteIndex[28173] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val default_arg_region[1030228]:range(byteIndex,bounded,false)[1025981] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret_tmp[1908570]:range(byteIndex,bounded,false)[1025981] "temp"
    (1030230 call find_default_region[1030187] localX[1024921] ret_tmp[1908570])
    (1908573 'move' default_arg_region[1030228] ret_tmp[1908570])
    const-val ret_tmp[1908498]:byteIndex[28173] "temp"
    (1024935 call find[1025776] localX[1024921] "_" default_arg_region[1030228] ret_tmp[1908498])
    (1908501 'move' call_tmp[1024927] ret_tmp[1908498])
    const-val call_tmp[1024944]:bool[10] "dead at end of block" "maybe param" "temp"
    (1024946 'move' call_tmp[1024944](1024949 call !=[29619] call_tmp[1024927] -1))
    const-val hasUnderscores[1024952]:bool[10] "dead at end of block" "const" "insert auto destroy"
    (1024954 'move' hasUnderscores[1024952] call_tmp[1024944])
    const-val call_tmp[1024959]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1024961 'move' call_tmp[1024959] hasUnderscores[1024952])
    if call_tmp[1024959]
    {
      const-val call_tmp[1024968]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1905522]:string[26] "temp"
      (1024976 call strip[36095] localX[1024921] " \t\r\n" 1 1 ret_tmp[1905522])
      (1905525 'move' call_tmp[1024968] ret_tmp[1905522])
      (1024978 call =[38272] localX[1024921] call_tmp[1024968])
      (1920197 call chpl__autoDestroy[1601673] call_tmp[1024968])
      val numElements[1024984]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1205666 'move' numElements[1024984] 0)
      {
        val _indexOfInterest[1024991]:string[26] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1024993]:_ic_split__ref_string[1156693] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[1024995]:_ir_split__ref_string[1156699] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1905506]:_ir_split__ref_string[1156699] "temp"
        (1025003 call split[35486] localX[1024921] -1 ret_tmp[1905506])
        (1905509 'move' call_tmp[1024995] ret_tmp[1905506])
        (1025004 'move' _iterator[1024993](1025007 call _getIterator[1156708] call_tmp[1024995]))
        {
          val ret[1991683]:_ir_split__ref_string[1156699] "dead after last mention" "RVV" "temp"
          const-val call_tmp[1991685]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          ref this[1994870]:_ref(string)[938128] "temp"
          (1994875 'move' this[1994870](1994872 '.v' _iterator[1024993] F0_this[2098432]))
          (1991687 'move' call_tmp[1991685](1991690 call isASCII[31049] this[1994870]))
          const-val call_tmp[1991692]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1991694 'move' call_tmp[1991692] call_tmp[1991685])
          if call_tmp[1991685]
          {
            val _indexOfInterest[1991699]:string[26] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1991701]:_ic_doSplitWSNoEnc[1124664] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[1991703]:_ir_doSplitWSNoEnc[1124670] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[1991705]:_ir_doSplitWSNoEnc[1124670] "temp"
            ref this[1994877]:_ref(string)[938128] "temp"
            (1994882 'move' this[1994877](1994879 '.v' _iterator[1024993] F0_this[2098432]))
            const-val maxsplit[1994884]:int(64)[13] "temp"
            (1994889 'move' maxsplit[1994884](1994886 '.v' _iterator[1024993] F1_maxsplit[2098436]))
            (1991708 call doSplitWSNoEnc[1124645] this[1994877] maxsplit[1994884] ret_tmp[1991705])
            (1991712 'move' call_tmp[1991703] ret_tmp[1991705])
            (1991715 'move' _iterator[1991701](1991718 call _getIterator[1124679] call_tmp[1991703]))
            {
              val ret[1991721]:_ir_doSplitWSNoEnc[1124670] "dead at end of block" "RVV" "temp"
              val call_tmp[1991723]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[1991725]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              ref x[1991727]:_ref(string)[938128] "temp"
              (1991729 'move' x[1991727](1991731 '.v' _iterator[1991701] F0_x[2115694]))
              (1991734 'move' call_tmp[1991725](1991737 call isEmpty[35064] x[1991727]))
              const-val call_tmp[1991739]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1991741 'move' call_tmp[1991739](1991744 call ![7494] call_tmp[1991725]))
              const-val call_tmp[1991746]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1991748 'move' call_tmp[1991746] call_tmp[1991739])
              if call_tmp[1991739]
              {
                const-val call_tmp[1991753]:string[26] "dead at end of block" "maybe param" "temp"
                const-val ret_tmp[1991755]:string[26] "temp"
                ref x[1991757]:_ref(string)[938128] "temp"
                (1991759 'move' x[1991757](1991761 '.v' _iterator[1991701] F0_x[2115694]))
                (1991765 call localize[32889] x[1991757] ret_tmp[1991755])
                (1991768 'move' call_tmp[1991753] ret_tmp[1991755])
                val call_tmp[1991771]:string[26] "dead after last mention" "maybe param" "temp" "type variable"
                const localx[1991773]:string[26] "dead at end of block" "const" "insert auto destroy"
                (1991775 'move' localx[1991773] call_tmp[1991753])
                val done[1991778]:bool[10] "dead at end of block" "insert auto destroy"
                (1991780 'move' done[1991778] 0)
                val yieldChunk[1991783]:bool[10] "dead at end of block" "insert auto destroy"
                (1991785 'move' yieldChunk[1991783] 0)
                val chunk[1991788]:string[26] "dead at end of block" "insert auto destroy"
                val call_tmp[1991790]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1991793 call init[30763] chunk[1991788])
                const-val call_tmp[1991795]:bool[10] "dead at end of block" "maybe param" "temp"
                const-val maxsplit[1991797]:int(64)[13] "temp"
                (1991799 'move' maxsplit[1991797](1991801 '.v' _iterator[1991701] F1_maxsplit[2115698]))
                (1991804 'move' call_tmp[1991795](1991807 call ==[435744] maxsplit[1991797] 0))
                const-val noSplits[1991810]:bool[10] "dead at end of block" "const" "insert auto destroy"
                (1991812 'move' noSplits[1991810] call_tmp[1991795])
                const-val call_tmp[1991815]:bool[10] "dead at end of block" "maybe param" "temp"
                const-val maxsplit[1991817]:int(64)[13] "temp"
                (1991819 'move' maxsplit[1991817](1991821 '.v' _iterator[1991701] F1_maxsplit[2115698]))
                (1991824 'move' call_tmp[1991815](1991827 call >[437788] maxsplit[1991817] 0))
                const-val limitSplits[1991830]:bool[10] "dead at end of block" "const" "insert auto destroy"
                (1991832 'move' limitSplits[1991830] call_tmp[1991815])
                val splitCount[1991835]:int(64)[13] "dead at end of block" "insert auto destroy"
                (1991837 'move' splitCount[1991835] 0)
                ref call_tmp[1991840]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1991842 'move' call_tmp[1991840](1991845 call buffLen[758075] localx[1991773]))
                const-val call_tmp[1991847]:int(64)[13] "dead at end of block" "maybe param" "temp"
                const-val coerce_tmp[1991849]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1991851 'move' coerce_tmp[1991849](1991853 'deref' call_tmp[1991840]))
                (1991855 'move' call_tmp[1991847](1991858 call -[1125627] coerce_tmp[1991849]))
                const-val iEnd[1991860]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                (1991862 'move' iEnd[1991860] call_tmp[1991847])
                val inChunk[1991865]:bool[10] "dead at end of block" "insert auto destroy"
                (1991867 'move' inChunk[1991865] 0)
                val chunkStart[1991870]:int(64)[13] "dead at end of block" "insert auto destroy"
                (1991872 'move' chunkStart[1991870] 0)
                const-val _iterator[1991877]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108755] "dead at end of block" "expr temp" "insert auto destroy" "temp"
                const-val call_tmp[1991879]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1991881]:range(int(64),bounded,false)[1027003] "temp"
                ref x[1991883]:_ref(string)[938128] "temp"
                (1991885 'move' x[1991883](1991887 '.v' _iterator[1991701] F0_x[2115694]))
                (1991891 call indices[32788] x[1991883] ret_tmp[1991881])
                (1991894 'move' call_tmp[1991879] ret_tmp[1991881])
                val call_tmp[1991897]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "maybe param" "temp"
                (1991899 'move' call_tmp[1991897](1991902 call _getIterator[1095509] call_tmp[1991879]))
                const-val call_tmp[1991904]:_ir_chpl_bytes__ref_string[1108451] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[1991906]:_ir_chpl_bytes__ref_string[1108451] "temp"
                (1991909 call chpl_bytes[33577] localx[1991773] ret_tmp[1991906])
                (1991912 'move' call_tmp[1991904] ret_tmp[1991906])
                val call_tmp[1991915]:_ic_chpl_bytes__ref_string[1108445] "dead at end of block" "expr temp" "maybe param" "temp"
                (1991917 'move' call_tmp[1991915](1991920 call _getIterator[1108460] call_tmp[1991904]))
                const-val ret_tmp[1991922]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108755] "temp"
                (1991925 call _build_tuple[1108713] call_tmp[1991897] call_tmp[1991915] ret_tmp[1991922])
                (1991929 'move' _iterator[1991877] ret_tmp[1991922])
                val _iterator[2063537]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
                (2063543 'move' _iterator[2063537](2063540 '.v' _iterator[1991877] x0[1108751]))
                val _iterator[2063550]:_ic_chpl_bytes__ref_string[1108445] "temp"
                (2063556 'move' _iterator[2063550](2063553 '.v' _iterator[1991877] x1[1108753]))
                {
                  (2063565 call zip1[1096927] _iterator[2063537])
                }
                {
                  (2063600 call zip1[1108480] _iterator[2063550])
                }
                const-val isFinished[2063626]:bool[10] "temp"
                val hasMore[2063625]:bool[10] "temp"
                CForLoop[2063673]
                {
                  val _indexOfInterest[2063674]:(int(64),uint(8))[1111229] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                  {
                    (2063678 call zip2[1108489] _iterator[2063550])
                  }
                  {
                    const-val retTmp[2063681]:int(64)[13] "temp"
                    (2063683 'move' retTmp[2063681](2063686 call hasMore[1108516] _iterator[2063550]))
                    (2063688 'move' hasMore[2063625](2063690 'cast' bool[10] retTmp[2063681]))
                  }
                  (2063693 'move' isFinished[2063626](2063695 '!' hasMore[2063625]))
                  if isFinished[2063626]
                  {
                    (2063699 'chpl_error' c"zippered iterations have non-equal lengths")
                  }
                  {
                    (2063703 'move' _index[2063718](2063706 call getValue[1108525] _iterator[2063550]))
                  }
                  {
                    (2063710 call zip2[1096936] _iterator[2063537])
                  }
                  {
                    (2063713 'move' _index[2063724](2063716 call getValue[1096972] _iterator[2063537]))
                  }
                  val _index[2063718]:uint(8)[100] "temp"
                  (2063720 '.=' _indexOfInterest[2063674] x1[1111227] _index[2063718])
                  val _index[2063724]:int(64)[13] "temp"
                  (2063726 '.=' _indexOfInterest[2063674] x0[1111225] _index[2063724])
                  1
                  const-val i[2063731]:int(64)[13] "const" "index var" "insert auto destroy"
                  (2063733 'move' i[2063731](2063735 '.v' _indexOfInterest[2063674] x0[1111225]))
                  const-val c[2063738]:uint(8)[100] "const" "index var" "insert auto destroy"
                  (2063740 'move' c[2063738](2063742 '.v' _indexOfInterest[2063674] x1[1111227]))
                  const-val call_tmp[2063745]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2063747 'move' call_tmp[2063745] noSplits[1991810])
                  if noSplits[1991810]
                  {
                    (2063753 call =[435290] done[1991778] 1)
                    const-val call_tmp[2063756]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2063758 'move' call_tmp[2063756](2063761 call isSpace[36843] localx[1991773]))
                    const-val call_tmp[2063763]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2063765 'move' call_tmp[2063763](2063768 call ![7494] call_tmp[2063756]))
                    const-val call_tmp[2063770]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2063772 'move' call_tmp[2063770] call_tmp[2063763])
                    if call_tmp[2063763]
                    {
                      (2063778 call =[38272] chunk[1991788] localx[1991773])
                      (2063782 call =[435290] yieldChunk[1991783] 1)
                    }
                  }
                  {
                    const-val call_tmp[2063787]:bool[10] "dead at end of block" "maybe param" "temp"
                    (2063789 'move' call_tmp[2063787](2063792 call byte_isWhitespace[181655] c[2063738]))
                    const-val cSpace[2063794]:bool[10] "dead at end of block" "insert auto destroy"
                    (2063796 'move' cSpace[2063794] call_tmp[2063787])
                    const-val tmp[2063799]:bool[10] "dead after last mention" "maybe param" "temp"
                    (2063801 'move' tmp[2063799] inChunk[1991865])
                    val tmp[2063804]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                    const-val tmp[2063806]:bool[10] "dead after last mention" "maybe param" "temp"
                    const-val call_tmp[2063808]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2063810 'move' call_tmp[2063808] inChunk[1991865])
                    (2063813 'move' tmp[2063806] inChunk[1991865])
                    if inChunk[1991865]
                    {
                      (2063818 'move' tmp[2063804] 1)
                    }
                    {
                      const-val tmp[2063822]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                      (2063824 'move' tmp[2063822] cSpace[2063794])
                      (2063827 'move' tmp[2063804] cSpace[2063794])
                    }
                    const-val call_tmp[2063831]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2063833 'move' call_tmp[2063831](2063836 call ![7494] tmp[2063804]))
                    const-val call_tmp[2063838]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2063840 'move' call_tmp[2063838] call_tmp[2063831])
                    if call_tmp[2063831]
                    {
                      (2063846 call =[435443] chunkStart[1991870] i[2063731])
                      (2063850 call =[435290] inChunk[1991865] 1)
                      const-val call_tmp[2063853]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (2063855 'move' call_tmp[2063853](2063858 call >[437788] i[2063731] iEnd[1991860]))
                      const-val call_tmp[2063861]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (2063863 'move' call_tmp[2063861] call_tmp[2063853])
                      if call_tmp[2063853]
                      {
                        const-val call_tmp[2063868]:range(int(64),boundedLow,false)[1087754] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val ret_tmp[2063870]:range(int(64),boundedLow,false)[1087754] "temp"
                        (2063873 call chpl_build_low_bounded_range[1087147] chunkStart[1991870] ret_tmp[2063870])
                        (2063876 'move' call_tmp[2063868] ret_tmp[2063870])
                        const-val call_tmp[2063879]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val ret_tmp[2063881]:string[26] "temp"
                        (2063884 call this[1125751] localx[1991773] call_tmp[2063868] ret_tmp[2063881])
                        (2063888 'move' call_tmp[2063879] ret_tmp[2063881])
                        (2063892 call =[38272] chunk[1991788] call_tmp[2063879])
                        (2063896 call chpl__autoDestroy[1601673] call_tmp[2063879])
                        (2063899 call chpl__autoDestroy[1680875] call_tmp[2063868])
                        (2063902 call =[435290] yieldChunk[1991783] 1)
                        (2063906 call =[435290] done[1991778] 1)
                      }
                    }
                    {
                      const-val call_tmp[2063911]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (2063913 'move' call_tmp[2063911] inChunk[1991865])
                      if call_tmp[2063911]
                      {
                        const-val call_tmp[2063918]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (2063920 'move' call_tmp[2063918] cSpace[2063794])
                        if cSpace[2063794]
                        {
                          (2063926 call +=[451431] splitCount[1991835] 1)
                          const-val tmp[2063929]:bool[10] "dead after last mention" "maybe param" "temp"
                          (2063931 'move' tmp[2063929] limitSplits[1991830])
                          val tmp[2063934]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                          const-val tmp[2063936]:bool[10] "dead after last mention" "maybe param" "temp"
                          const-val call_tmp[2063938]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (2063940 'move' call_tmp[2063938] limitSplits[1991830])
                          (2063943 'move' tmp[2063936] limitSplits[1991830])
                          if limitSplits[1991830]
                          {
                            const-val tmp[2063948]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                            const-val call_tmp[2063950]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val maxsplit[2063952]:int(64)[13] "temp"
                            (2063954 'move' maxsplit[2063952](2063956 '.v' _iterator[1991701] F1_maxsplit[2115698]))
                            (2063959 'move' call_tmp[2063950](2063962 call >[437788] splitCount[1991835] maxsplit[2063952]))
                            (2063965 'move' tmp[2063948] call_tmp[2063950])
                            (2063968 'move' tmp[2063934] call_tmp[2063950])
                          }
                          {
                            (2063972 'move' tmp[2063934] 0)
                          }
                          const-val call_tmp[2063976]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (2063978 'move' call_tmp[2063976] tmp[2063934])
                          if tmp[2063934]
                          {
                            const-val call_tmp[2063983]:range(int(64),boundedLow,false)[1087754] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[2063985]:range(int(64),boundedLow,false)[1087754] "temp"
                            (2063988 call chpl_build_low_bounded_range[1087147] chunkStart[1991870] ret_tmp[2063985])
                            (2063991 'move' call_tmp[2063983] ret_tmp[2063985])
                            const-val call_tmp[2063994]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[2063996]:string[26] "temp"
                            (2063999 call this[1125751] localx[1991773] call_tmp[2063983] ret_tmp[2063996])
                            (2064003 'move' call_tmp[2063994] ret_tmp[2063996])
                            (2064007 call =[38272] chunk[1991788] call_tmp[2063994])
                            (2064011 call chpl__autoDestroy[1601673] call_tmp[2063994])
                            (2064014 call chpl__autoDestroy[1680875] call_tmp[2063983])
                            (2064017 call =[435290] yieldChunk[1991783] 1)
                            (2064021 call =[435290] done[1991778] 1)
                          }
                          {
                            const-val call_tmp[2064025]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                            (2064027 'move' call_tmp[2064025](2064030 call -[962415] i[2063731]))
                            const-val call_tmp[2064032]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[2064034]:range(int(64),bounded,false)[1027003] "temp"
                            (2064037 call chpl_build_bounded_range[455253] chunkStart[1991870] call_tmp[2064025] ret_tmp[2064034])
                            (2064041 'move' call_tmp[2064032] ret_tmp[2064034])
                            const-val call_tmp[2064044]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[2064046]:string[26] "temp"
                            (2064049 call this[1111555] localx[1991773] call_tmp[2064032] ret_tmp[2064046])
                            (2064053 'move' call_tmp[2064044] ret_tmp[2064046])
                            (2064057 call =[38272] chunk[1991788] call_tmp[2064044])
                            (2064061 call chpl__autoDestroy[1601673] call_tmp[2064044])
                            (2064064 call chpl__autoDestroy[1407763] call_tmp[2064032])
                            (2064067 call =[435290] yieldChunk[1991783] 1)
                            (2064071 call =[435290] inChunk[1991865] 0)
                          }
                        }
                        {
                          const-val call_tmp[2064076]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (2064078 'move' call_tmp[2064076](2064081 call >[437788] i[2063731] iEnd[1991860]))
                          const-val call_tmp[2064084]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (2064086 'move' call_tmp[2064084] call_tmp[2064076])
                          if call_tmp[2064076]
                          {
                            const-val call_tmp[2064091]:range(int(64),boundedLow,false)[1087754] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[2064093]:range(int(64),boundedLow,false)[1087754] "temp"
                            (2064096 call chpl_build_low_bounded_range[1087147] chunkStart[1991870] ret_tmp[2064093])
                            (2064099 'move' call_tmp[2064091] ret_tmp[2064093])
                            const-val call_tmp[2064102]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[2064104]:string[26] "temp"
                            (2064107 call this[1125751] localx[1991773] call_tmp[2064091] ret_tmp[2064104])
                            (2064111 'move' call_tmp[2064102] ret_tmp[2064104])
                            (2064115 call =[38272] chunk[1991788] call_tmp[2064102])
                            (2064119 call chpl__autoDestroy[1601673] call_tmp[2064102])
                            (2064122 call chpl__autoDestroy[1680875] call_tmp[2064091])
                            (2064125 call =[435290] yieldChunk[1991783] 1)
                            (2064129 call =[435290] done[1991778] 1)
                          }
                        }
                      }
                    }
                  }
                  const-val call_tmp[2064137]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2064139 'move' call_tmp[2064137] yieldChunk[1991783])
                  if call_tmp[2064137]
                  {
                    const-val yret[2064144]:string[26] "dead after last mention" "YVV" "temp"
                    val call_tmp[2064146]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    const-val _yield_expr_tmp_[2064148]:string[26] "temp"
                    (2064150 'move' _yield_expr_tmp_[2064148](2064153 call chpl__initCopy[981537] chunk[1991788]))
                    (2064155 'move' yret[2064144] _yield_expr_tmp_[2064148])
                    const-val _yieldedIndex[2064158]:string[26] "temp"
                    (2064160 'move' _yieldedIndex[2064158] _yield_expr_tmp_[2064148])
                    {
                      const-val s[2064164]:string[26] "const" "index var" "insert auto destroy"
                      (2064166 'move' s[2064164] _yieldedIndex[2064158])
                      const-val yret[2064169]:string[26] "dead after last mention" "YVV" "temp"
                      const-val _yield_expr_tmp_[2064171]:string[26] "temp"
                      (2064173 'move' _yield_expr_tmp_[2064171](2064176 call chpl__initCopy[981537] s[2064164]))
                      (2064178 'move' yret[2064169] _yield_expr_tmp_[2064171])
                      const-val _yieldedIndex[2064181]:string[26] "temp"
                      (2064183 'move' _yieldedIndex[2064181] _yield_expr_tmp_[2064171])
                      {
                        const-val chpl__elidedIdx[2064187]:string[26] "const" "index var" "insert auto destroy"
                        (2064189 'move' chpl__elidedIdx[2064187] _yieldedIndex[2064181])
                        {
                          (2064194 call +=[451431] numElements[1024984] 1)
                          const-val call_tmp[2064197]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (2064199 'move' call_tmp[2064197](2064202 call >[437788] numElements[1024984] 1))
                          const-val call_tmp[2064205]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (2064207 'move' call_tmp[2064205] call_tmp[2064197])
                          if call_tmp[2064205]
                          {
                            (2064213 call chpl__autoDestroy[1601673] chpl__elidedIdx[2064187])
                            ref moreRef1[2064320]:_ref(int(64))[936761] "temp"
                            (2064322 'move' moreRef1[2064320](2064324 '.' _iterator[2063537] more[1096895]))
                            const-val moreVal1[2064327]:int(64)[13] "const" "temp"
                            (2064329 '=' moreVal1[2064327] moreRef1[2064320])
                            const-val moreValNeg1[2064332]:int(64)[13] "const" "temp"
                            (2064334 'move' moreValNeg1[2064332](2064336 'u-' moreVal1[2064327]))
                            (2064338 '=' moreRef1[2064320] moreValNeg1[2064332])
                            (2064342 call advance[1096918] _iterator[2063537])
                            ref moreRef2[2064344]:_ref(int(64))[936761] "temp"
                            (2064346 'move' moreRef2[2064344](2064348 '.' _iterator[2063550] more[1108448]))
                            const-val moreVal2[2064351]:int(64)[13] "const" "temp"
                            (2064353 '=' moreVal2[2064351] moreRef2[2064344])
                            const-val moreValNeg2[2064356]:int(64)[13] "const" "temp"
                            (2064358 'move' moreValNeg2[2064356](2064360 'u-' moreVal2[2064351]))
                            (2064362 '=' moreRef2[2064344] moreValNeg2[2064356])
                            (2064366 call advance[1108471] _iterator[2063550])
                            (2064216 call _freeIterator[1108913] _iterator[1991877])
                            (2064219 call chpl__autoDestroy[1681548] _iterator[1991877])
                            (2064222 call chpl__autoDestroy[1407763] call_tmp[1991879])
                            (2064225 call chpl__autoDestroy[1601673] chunk[1991788])
                            (2064228 call chpl__autoDestroy[1601673] localx[1991773])
                            (2064231 call chpl__autoDestroy[1601673] s[2064164])
                            (2064234 call _freeIterator[1142764] _iterator[1991701])
                            break _breakLabel[1025060] _breakLabel[1025060]
                          }
                        }
                        label _continueLabel[2064239]
                        (2064242 call chpl__autoDestroy[1601673] chpl__elidedIdx[2064187])
                      }
                      (2064245 call chpl__autoDestroy[1601673] s[2064164])
                    }
                    (2064248 call =[435290] yieldChunk[1991783] 0)
                  }
                  const-val call_tmp[2064252]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2064254 'move' call_tmp[2064252] done[1991778])
                  if call_tmp[2064252]
                  {
                    ref moreRef1[2064369]:_ref(int(64))[936761] "temp"
                    (2064371 'move' moreRef1[2064369](2064373 '.' _iterator[2063537] more[1096895]))
                    const-val moreVal1[2064376]:int(64)[13] "const" "temp"
                    (2064378 '=' moreVal1[2064376] moreRef1[2064369])
                    const-val moreValNeg1[2064381]:int(64)[13] "const" "temp"
                    (2064383 'move' moreValNeg1[2064381](2064385 'u-' moreVal1[2064376]))
                    (2064387 '=' moreRef1[2064369] moreValNeg1[2064381])
                    (2064391 call advance[1096918] _iterator[2063537])
                    ref moreRef2[2064393]:_ref(int(64))[936761] "temp"
                    (2064395 'move' moreRef2[2064393](2064397 '.' _iterator[2063550] more[1108448]))
                    const-val moreVal2[2064400]:int(64)[13] "const" "temp"
                    (2064402 '=' moreVal2[2064400] moreRef2[2064393])
                    const-val moreValNeg2[2064405]:int(64)[13] "const" "temp"
                    (2064407 'move' moreValNeg2[2064405](2064409 'u-' moreVal2[2064400]))
                    (2064411 '=' moreRef2[2064393] moreValNeg2[2064405])
                    (2064415 call advance[1108471] _iterator[2063550])
                    break _breakLabel[1992432] _breakLabel[1992432]
                  }
                  {
                    (2064264 call zip3[1096945] _iterator[2063537])
                  }
                  {
                    (2064268 call zip3[1108498] _iterator[2063550])
                  }
                  {
                    {
                      (2063575 call init[1096981] _iterator[2063537])
                    }
                    {
                      (2063610 call init[1108534] _iterator[2063550])
                    }
                  }
                  {
                    (2063591 call hasMore[1096963] _iterator[2063537])
                  }
                  {
                    {
                      (2063579 call incr[1096990] _iterator[2063537])
                    }
                    {
                      (2063614 call incr[1108543] _iterator[2063550])
                    }
                  }
                }
                {
                  const-val retTmp[2063660]:int(64)[13] "temp"
                  (2063662 'move' retTmp[2063660](2063657 call hasMore[1108516] _iterator[2063550]))
                  (2063667 'move' hasMore[2063625](2063664 'cast' bool[10] retTmp[2063660]))
                }
                if hasMore[2063625]
                {
                  (2063652 'chpl_error' c"zippered iterations have non-equal lengths")
                }
                {
                  (2063622 call zip4[1108507] _iterator[2063550])
                }
                {
                  (2063587 call zip4[1096954] _iterator[2063537])
                }
                label _breakLabel[1992432]
                (1992435 call _freeIterator[1108913] _iterator[1991877])
                (1992438 call chpl__autoDestroy[1681548] _iterator[1991877])
                (1992441 call chpl__autoDestroy[1407763] call_tmp[1991879])
                (1992444 call chpl__autoDestroy[1601673] chunk[1991788])
                (1992447 call chpl__autoDestroy[1601673] localx[1991773])
              }
              label _enddoSplitWSNoEnc[1992450]
            }
            (1992453 call _freeIterator[1142764] _iterator[1991701])
          }
          {
            const-val call_tmp[1992456]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            ref this[1994891]:_ref(string)[938128] "temp"
            (1994896 'move' this[1994891](1994893 '.v' _iterator[1024993] F0_this[2098432]))
            (1992458 'move' call_tmp[1992456](1992461 call isEmpty[35064] this[1994891]))
            const-val call_tmp[1992463]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1992465 'move' call_tmp[1992463](1992468 call ![7494] call_tmp[1992456]))
            const-val call_tmp[1992470]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1992472 'move' call_tmp[1992470] call_tmp[1992463])
            if call_tmp[1992463]
            {
              const-val call_tmp[1992477]:string[26] "dead at end of block" "maybe param" "temp"
              const-val ret_tmp[1992479]:string[26] "temp"
              ref this[1994898]:_ref(string)[938128] "temp"
              (1994903 'move' this[1994898](1994900 '.v' _iterator[1024993] F0_this[2098432]))
              (1992482 call localize[32889] this[1994898] ret_tmp[1992479])
              (1992485 'move' call_tmp[1992477] ret_tmp[1992479])
              const localThis[1992488]:string[26] "dead at end of block" "const" "insert auto destroy"
              (1992490 'move' localThis[1992488] call_tmp[1992477])
              val done[1992493]:bool[10] "dead at end of block" "insert auto destroy"
              (1992495 'move' done[1992493] 0)
              val yieldChunk[1992498]:bool[10] "dead at end of block" "insert auto destroy"
              (1992500 'move' yieldChunk[1992498] 0)
              val chunk[1992503]:string[26] "dead at end of block" "insert auto destroy"
              (1992506 call init[30763] chunk[1992503])
              const-val call_tmp[1992508]:bool[10] "dead at end of block" "maybe param" "temp"
              const-val maxsplit[1994905]:int(64)[13] "temp"
              (1994910 'move' maxsplit[1994905](1994907 '.v' _iterator[1024993] F1_maxsplit[2098436]))
              (1992510 'move' call_tmp[1992508](1992513 call ==[435744] maxsplit[1994905] 0))
              const-val noSplits[1992516]:bool[10] "dead at end of block" "const" "insert auto destroy"
              (1992518 'move' noSplits[1992516] call_tmp[1992508])
              const-val call_tmp[1992521]:bool[10] "dead at end of block" "maybe param" "temp"
              const-val maxsplit[1994912]:int(64)[13] "temp"
              (1994917 'move' maxsplit[1994912](1994914 '.v' _iterator[1024993] F1_maxsplit[2098436]))
              (1992523 'move' call_tmp[1992521](1992526 call >[437788] maxsplit[1994912] 0))
              const-val limitSplits[1992529]:bool[10] "dead at end of block" "const" "insert auto destroy"
              (1992531 'move' limitSplits[1992529] call_tmp[1992521])
              val splitCount[1992534]:int(64)[13] "dead at end of block" "insert auto destroy"
              (1992536 'move' splitCount[1992534] 0)
              ref call_tmp[1992539]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
              (1992541 'move' call_tmp[1992539](1992544 call buffLen[758075] localThis[1992488]))
              const-val call_tmp[1992546]:int(64)[13] "dead at end of block" "insert auto destroy" "maybe param" "temp"
              const-val coerce_tmp[1992548]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1992550 'move' coerce_tmp[1992548](1992552 'deref' call_tmp[1992539]))
              (1992554 'move' call_tmp[1992546](1992557 call -[1125627] coerce_tmp[1992548]))
              const-val iEnd[1992559]:byteIndex[28173] "dead at end of block" "const" "insert auto destroy"
              (1992562 call init=[28148] iEnd[1992559] call_tmp[1992546])
              val inChunk[1992565]:bool[10] "dead at end of block" "insert auto destroy"
              (1992567 'move' inChunk[1992565] 0)
              val chunkStart[1992570]:byteIndex[28173] "dead at end of block" "insert auto destroy"
              (1992573 call init[28100] chunkStart[1992570])
              val _indexOfInterest[1992575]:(int(32),byteIndex,int(64))[1122331] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[1992577]:_ic__cpIndexLen__ref_string[1122574] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[1992579]:_ir__cpIndexLen__ref_string[1122580] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val default_arg_start[1992581]:byteIndex[28173] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
              const-val ret_tmp[1992583]:byteIndex[28173] "temp"
              (1992586 call _cpIndexLen_default_start[1122220] localThis[1992488] ret_tmp[1992583])
              (1992589 'move' default_arg_start[1992581] ret_tmp[1992583])
              const-val ret_tmp[1992592]:_ir__cpIndexLen__ref_string[1122580] "temp"
              (1992595 call _cpIndexLen[31109] localThis[1992488] default_arg_start[1992581] ret_tmp[1992592])
              (1992599 'move' call_tmp[1992579] ret_tmp[1992592])
              (1992602 'move' _iterator[1992577](1992605 call _getIterator[1122589] call_tmp[1992579]))
              {
                val ret[1992608]:_ir__cpIndexLen__ref_string[1122580] "dead after last mention" "RVV" "temp"
                const-val call_tmp[1992610]:string[26] "dead at end of block" "maybe param" "temp"
                const-val ret_tmp[1992612]:string[26] "temp"
                ref this[1992614]:_ref(string)[938128] "temp"
                (1992616 'move' this[1992614](1992618 '.v' _iterator[1992577] F0_this[2094206]))
                (1992622 call localize[32889] this[1992614] ret_tmp[1992612])
                (1992625 'move' call_tmp[1992610] ret_tmp[1992612])
                val localThis[1992628]:string[26] "dead at end of block" "insert auto destroy"
                (1992630 'move' localThis[1992628] call_tmp[1992610])
                const-val call_tmp[1992633]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1992635 'move' call_tmp[1992633](1992638 call isASCII[31049] localThis[1992628]))
                const-val call_tmp[1992640]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1992642 'move' call_tmp[1992640] call_tmp[1992633])
                if call_tmp[1992633]
                {
                  const-val _iterator[1992647]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108755] "dead at end of block" "expr temp" "insert auto destroy" "temp"
                  const-val call_tmp[1992649]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
                  const-val ret_tmp[1992651]:range(int(64),bounded,false)[1027003] "temp"
                  ref this[1992653]:_ref(string)[938128] "temp"
                  (1992655 'move' this[1992653](1992657 '.v' _iterator[1992577] F0_this[2094206]))
                  (1992661 call byteIndices[31068] this[1992653] ret_tmp[1992651])
                  (1992664 'move' call_tmp[1992649] ret_tmp[1992651])
                  val call_tmp[1992667]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "maybe param" "temp"
                  (1992669 'move' call_tmp[1992667](1992672 call _getIterator[1095509] call_tmp[1992649]))
                  const-val call_tmp[1992674]:_ir_chpl_bytes__ref_string[1108451] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val ret_tmp[1992676]:_ir_chpl_bytes__ref_string[1108451] "temp"
                  ref this[1992678]:_ref(string)[938128] "temp"
                  (1992680 'move' this[1992678](1992682 '.v' _iterator[1992577] F0_this[2094206]))
                  (1992686 call chpl_bytes[33577] this[1992678] ret_tmp[1992676])
                  (1992689 'move' call_tmp[1992674] ret_tmp[1992676])
                  val call_tmp[1992692]:_ic_chpl_bytes__ref_string[1108445] "dead at end of block" "expr temp" "maybe param" "temp"
                  (1992694 'move' call_tmp[1992692](1992697 call _getIterator[1108460] call_tmp[1992674]))
                  const-val ret_tmp[1992699]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108755] "temp"
                  (1992702 call _build_tuple[1108713] call_tmp[1992667] call_tmp[1992692] ret_tmp[1992699])
                  (1992706 'move' _iterator[1992647] ret_tmp[1992699])
                  val _iterator[1992709]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
                  (1992711 'move' _iterator[1992709](1992713 '.v' _iterator[1992647] x0[1108751]))
                  val _iterator[1992716]:_ic_chpl_bytes__ref_string[1108445] "temp"
                  (1992718 'move' _iterator[1992716](1992720 '.v' _iterator[1992647] x1[1108753]))
                  {
                    (1992725 call zip1[1096927] _iterator[1992709])
                  }
                  {
                    (1992729 call zip1[1108480] _iterator[1992716])
                  }
                  const-val isFinished[1992731]:bool[10] "temp"
                  val hasMore[1992733]:bool[10] "temp"
                  CForLoop[1992735]
                  {
                    val _indexOfInterest[1992758]:(int(64),uint(8))[1111229] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    {
                      (1992762 call zip2[1108489] _iterator[1992716])
                    }
                    {
                      const-val retTmp[1992765]:int(64)[13] "temp"
                      (1992767 'move' retTmp[1992765](1992770 call hasMore[1108516] _iterator[1992716]))
                      (1992772 'move' hasMore[1992733](1992774 'cast' bool[10] retTmp[1992765]))
                    }
                    (1992777 'move' isFinished[1992731](1992779 '!' hasMore[1992733]))
                    if isFinished[1992731]
                    {
                      (1992783 'chpl_error' c"zippered iterations have non-equal lengths")
                    }
                    {
                      (1992787 'move' _index[1992802](1992790 call getValue[1108525] _iterator[1992716]))
                    }
                    {
                      (1992794 call zip2[1096936] _iterator[1992709])
                    }
                    {
                      (1992797 'move' _index[1992808](1992800 call getValue[1096972] _iterator[1992709]))
                    }
                    val _index[1992802]:uint(8)[100] "temp"
                    (1992804 '.=' _indexOfInterest[1992758] x1[1111227] _index[1992802])
                    val _index[1992808]:int(64)[13] "temp"
                    (1992810 '.=' _indexOfInterest[1992758] x0[1111225] _index[1992808])
                    1
                    const-val i[1992815]:int(64)[13] "const" "index var" "insert auto destroy"
                    (1992817 'move' i[1992815](1992819 '.v' _indexOfInterest[1992758] x0[1111225]))
                    const-val b[1992822]:uint(8)[100] "const" "index var" "insert auto destroy"
                    (1992824 'move' b[1992822](1992826 '.v' _indexOfInterest[1992758] x1[1111227]))
                    const-val yret[1992829]:(int(32),byteIndex,int(64))[1122331] "dead after last mention" "YVV" "temp"
                    val call_tmp[1992831]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    const-val call_tmp[1992833]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1992835 'move' call_tmp[1992833](1992837 'cast' int(32)[95] b[1992822]))
                    const-val call_tmp[1992840]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1992842]:byteIndex[28173] "temp"
                    (1992845 call _cast[39486] i[1992815] ret_tmp[1992842])
                    (1992848 'move' call_tmp[1992840] ret_tmp[1992842])
                    const-val call_tmp[1992851]:(int(32),byteIndex,int(64))[1122331] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1992853]:(int(32),byteIndex,int(64))[1122331] "temp"
                    (1992856 call _build_tuple[1122281] call_tmp[1992833] call_tmp[1992840] 1 ret_tmp[1992853])
                    (1992861 'move' call_tmp[1992851] ret_tmp[1992853])
                    (1992864 'move' yret[1992829] call_tmp[1992851])
                    const-val _yieldedIndex[1992867]:(int(32),byteIndex,int(64))[1122331] "temp"
                    (1992869 'move' _yieldedIndex[1992867] call_tmp[1992851])
                    {
                      1
                      const-val c[1992874]:int(32)[95] "const" "index var" "insert auto destroy"
                      (1992876 'move' c[1992874](1992878 '.v' _yieldedIndex[1992867] x0[1122325]))
                      ref i[1992881]:_ref(byteIndex)[948948] "index var" "insert auto destroy"
                      (1992883 'move' i[1992881](1992885 '.v' _yieldedIndex[1992867] x1[1122327]))
                      const-val nBytes[1992888]:int(64)[13] "const" "index var" "insert auto destroy"
                      (1992890 'move' nBytes[1992888](1992892 '.v' _yieldedIndex[1992867] x2[1122329]))
                      const-val call_tmp[1992895]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1992897 'move' call_tmp[1992895] noSplits[1992516])
                      if noSplits[1992516]
                      {
                        (1992903 call =[435290] done[1992493] 1)
                        const-val call_tmp[1992906]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1992908 'move' call_tmp[1992906](1992911 call isSpace[36843] localThis[1992488]))
                        const-val call_tmp[1992913]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1992915 'move' call_tmp[1992913](1992918 call ![7494] call_tmp[1992906]))
                        const-val call_tmp[1992920]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1992922 'move' call_tmp[1992920] call_tmp[1992913])
                        if call_tmp[1992913]
                        {
                          (1992928 call =[38272] chunk[1992503] localThis[1992488])
                          (1992932 call =[435290] yieldChunk[1992498] 1)
                        }
                      }
                      {
                        const-val call_tmp[1992937]:bool[10] "dead at end of block" "maybe param" "temp"
                        (1992939 'move' call_tmp[1992937](1992942 call codepoint_isWhitespace[39156] c[1992874]))
                        const-val cSpace[1992944]:bool[10] "dead at end of block" "insert auto destroy"
                        (1992946 'move' cSpace[1992944] call_tmp[1992937])
                        const-val tmp[1992949]:bool[10] "dead after last mention" "maybe param" "temp"
                        (1992951 'move' tmp[1992949] inChunk[1992565])
                        val tmp[1992954]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                        const-val tmp[1992956]:bool[10] "dead after last mention" "maybe param" "temp"
                        const-val call_tmp[1992958]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1992960 'move' call_tmp[1992958] inChunk[1992565])
                        (1992963 'move' tmp[1992956] inChunk[1992565])
                        if inChunk[1992565]
                        {
                          (1992968 'move' tmp[1992954] 1)
                        }
                        {
                          const-val tmp[1992972]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                          (1992974 'move' tmp[1992972] cSpace[1992944])
                          (1992977 'move' tmp[1992954] cSpace[1992944])
                        }
                        const-val call_tmp[1992981]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1992983 'move' call_tmp[1992981](1992986 call ![7494] tmp[1992954]))
                        const-val call_tmp[1992988]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1992990 'move' call_tmp[1992988] call_tmp[1992981])
                        if call_tmp[1992981]
                        {
                          (1992996 call =[38194] chunkStart[1992570] i[1992881])
                          (1993000 call =[435290] inChunk[1992565] 1)
                          const-val call_tmp[1993003]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                          const-val ret_tmp[1993005]:byteIndex[28173] "temp"
                          (1993008 call -[28857] i[1992881] 1 ret_tmp[1993005])
                          (1993012 'move' call_tmp[1993003] ret_tmp[1993005])
                          const-val call_tmp[1993015]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                          const-val ret_tmp[1993017]:byteIndex[28173] "temp"
                          (1993020 call +[28725] call_tmp[1993003] nBytes[1992888] ret_tmp[1993017])
                          (1993024 'move' call_tmp[1993015] ret_tmp[1993017])
                          const-val call_tmp[1993027]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (1993029 'move' call_tmp[1993027](1993032 call >[28575] call_tmp[1993015] iEnd[1992559]))
                          const-val call_tmp[1993035]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (1993037 'move' call_tmp[1993035] call_tmp[1993027])
                          if call_tmp[1993027]
                          {
                            const-val call_tmp[1993042]:range(byteIndex,boundedLow,false)[1143592] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[1993044]:range(byteIndex,boundedLow,false)[1143592] "temp"
                            (1993047 call chpl_build_low_bounded_range[1142899] chunkStart[1992570] ret_tmp[1993044])
                            (1993050 'move' call_tmp[1993042] ret_tmp[1993044])
                            const-val call_tmp[1993053]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[1993055]:string[26] "temp"
                            (1993058 call this[1143912] localThis[1992488] call_tmp[1993042] ret_tmp[1993055])
                            (1993062 'move' call_tmp[1993053] ret_tmp[1993055])
                            (1993066 call =[38272] chunk[1992503] call_tmp[1993053])
                            (1993070 call chpl__autoDestroy[1601673] call_tmp[1993053])
                            (1993073 call chpl__autoDestroy[1682957] call_tmp[1993042])
                            (1993076 call =[435290] yieldChunk[1992498] 1)
                            (1993080 call =[435290] done[1992493] 1)
                          }
                          (1993085 call chpl__autoDestroy[1601936] call_tmp[1993015])
                          (1993088 call chpl__autoDestroy[1601936] call_tmp[1993003])
                        }
                        {
                          const-val call_tmp[1993091]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (1993093 'move' call_tmp[1993091] inChunk[1992565])
                          if call_tmp[1993091]
                          {
                            const-val call_tmp[1993098]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (1993100 'move' call_tmp[1993098] cSpace[1992944])
                            if cSpace[1992944]
                            {
                              (1993106 call +=[451431] splitCount[1992534] 1)
                              const-val tmp[1993109]:bool[10] "dead after last mention" "maybe param" "temp"
                              (1993111 'move' tmp[1993109] limitSplits[1992529])
                              val tmp[1993114]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                              const-val tmp[1993116]:bool[10] "dead after last mention" "maybe param" "temp"
                              const-val call_tmp[1993118]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1993120 'move' call_tmp[1993118] limitSplits[1992529])
                              (1993123 'move' tmp[1993116] limitSplits[1992529])
                              if limitSplits[1992529]
                              {
                                const-val tmp[1993128]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                                const-val call_tmp[1993130]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val maxsplit[1994919]:int(64)[13] "temp"
                                (1994924 'move' maxsplit[1994919](1994921 '.v' _iterator[1024993] F1_maxsplit[2098436]))
                                (1993132 'move' call_tmp[1993130](1993135 call >[437788] splitCount[1992534] maxsplit[1994919]))
                                (1993138 'move' tmp[1993128] call_tmp[1993130])
                                (1993141 'move' tmp[1993114] call_tmp[1993130])
                              }
                              {
                                (1993145 'move' tmp[1993114] 0)
                              }
                              const-val call_tmp[1993149]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1993151 'move' call_tmp[1993149] tmp[1993114])
                              if tmp[1993114]
                              {
                                const-val call_tmp[1993156]:range(byteIndex,boundedLow,false)[1143592] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[1993158]:range(byteIndex,boundedLow,false)[1143592] "temp"
                                (1993161 call chpl_build_low_bounded_range[1142899] chunkStart[1992570] ret_tmp[1993158])
                                (1993164 'move' call_tmp[1993156] ret_tmp[1993158])
                                const-val call_tmp[1993167]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[1993169]:string[26] "temp"
                                (1993172 call this[1143912] localThis[1992488] call_tmp[1993156] ret_tmp[1993169])
                                (1993176 'move' call_tmp[1993167] ret_tmp[1993169])
                                (1993180 call =[38272] chunk[1992503] call_tmp[1993167])
                                (1993184 call chpl__autoDestroy[1601673] call_tmp[1993167])
                                (1993187 call chpl__autoDestroy[1682957] call_tmp[1993156])
                                (1993190 call =[435290] yieldChunk[1992498] 1)
                                (1993194 call =[435290] done[1992493] 1)
                              }
                              {
                                const-val call_tmp[1993198]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[1993200]:byteIndex[28173] "temp"
                                (1993203 call -[28857] i[1992881] 1 ret_tmp[1993200])
                                (1993207 'move' call_tmp[1993198] ret_tmp[1993200])
                                const-val call_tmp[1993210]:range(byteIndex,bounded,false)[1025981] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[1993212]:range(byteIndex,bounded,false)[1025981] "temp"
                                (1993215 call chpl_build_bounded_range[1123443] chunkStart[1992570] call_tmp[1993198] ret_tmp[1993212])
                                (1993219 'move' call_tmp[1993210] ret_tmp[1993212])
                                const-val call_tmp[1993222]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[1993224]:string[26] "temp"
                                (1993227 call this[1123689] localThis[1992488] call_tmp[1993210] ret_tmp[1993224])
                                (1993231 'move' call_tmp[1993222] ret_tmp[1993224])
                                (1993235 call =[38272] chunk[1992503] call_tmp[1993222])
                                (1993239 call chpl__autoDestroy[1601673] call_tmp[1993222])
                                (1993242 call chpl__autoDestroy[1674473] call_tmp[1993210])
                                (1993245 call chpl__autoDestroy[1601936] call_tmp[1993198])
                                (1993248 call =[435290] yieldChunk[1992498] 1)
                                (1993252 call =[435290] inChunk[1992565] 0)
                              }
                            }
                            {
                              const-val call_tmp[1993257]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              const-val ret_tmp[1993259]:byteIndex[28173] "temp"
                              (1993262 call -[28857] i[1992881] 1 ret_tmp[1993259])
                              (1993266 'move' call_tmp[1993257] ret_tmp[1993259])
                              const-val call_tmp[1993269]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              const-val ret_tmp[1993271]:byteIndex[28173] "temp"
                              (1993274 call +[28725] call_tmp[1993257] nBytes[1992888] ret_tmp[1993271])
                              (1993278 'move' call_tmp[1993269] ret_tmp[1993271])
                              const-val call_tmp[1993281]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1993283 'move' call_tmp[1993281](1993286 call >[28575] call_tmp[1993269] iEnd[1992559]))
                              const-val call_tmp[1993289]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1993291 'move' call_tmp[1993289] call_tmp[1993281])
                              if call_tmp[1993281]
                              {
                                const-val call_tmp[1993296]:range(byteIndex,boundedLow,false)[1143592] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[1993298]:range(byteIndex,boundedLow,false)[1143592] "temp"
                                (1993301 call chpl_build_low_bounded_range[1142899] chunkStart[1992570] ret_tmp[1993298])
                                (1993304 'move' call_tmp[1993296] ret_tmp[1993298])
                                const-val call_tmp[1993307]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[1993309]:string[26] "temp"
                                (1993312 call this[1143912] localThis[1992488] call_tmp[1993296] ret_tmp[1993309])
                                (1993316 'move' call_tmp[1993307] ret_tmp[1993309])
                                (1993320 call =[38272] chunk[1992503] call_tmp[1993307])
                                (1993324 call chpl__autoDestroy[1601673] call_tmp[1993307])
                                (1993327 call chpl__autoDestroy[1682957] call_tmp[1993296])
                                (1993330 call =[435290] yieldChunk[1992498] 1)
                                (1993334 call =[435290] done[1992493] 1)
                              }
                              (1993339 call chpl__autoDestroy[1601936] call_tmp[1993269])
                              (1993342 call chpl__autoDestroy[1601936] call_tmp[1993257])
                            }
                          }
                        }
                      }
                      const-val call_tmp[1993348]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1993350 'move' call_tmp[1993348] yieldChunk[1992498])
                      if call_tmp[1993348]
                      {
                        const-val yret[1993355]:string[26] "dead after last mention" "YVV" "temp"
                        const-val _yield_expr_tmp_[1993357]:string[26] "temp"
                        (1993359 'move' _yield_expr_tmp_[1993357](1993362 call chpl__initCopy[981537] chunk[1992503]))
                        (1993364 'move' yret[1993355] _yield_expr_tmp_[1993357])
                        const-val _yieldedIndex[1994678]:string[26] "temp"
                        (1994799 'move' _yieldedIndex[1994678] _yield_expr_tmp_[1993357])
                        {
                          const-val chpl__elidedIdx[1994680]:string[26] "const" "index var" "insert auto destroy"
                          (1994682 'move' chpl__elidedIdx[1994680] _yieldedIndex[1994678])
                          {
                            (1994687 call +=[451431] numElements[1024984] 1)
                            const-val call_tmp[1994690]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (1994692 'move' call_tmp[1994690](1994695 call >[437788] numElements[1024984] 1))
                            const-val call_tmp[1994698]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (1994700 'move' call_tmp[1994698] call_tmp[1994690])
                            if call_tmp[1994698]
                            {
                              (1994706 call chpl__autoDestroy[1601673] chpl__elidedIdx[1994680])
                              ref moreRef1[1994717]:_ref(int(64))[936761] "temp"
                              (1994719 'move' moreRef1[1994717](1994721 '.' _iterator[1992709] more[1096895]))
                              const-val moreVal1[1994724]:int(64)[13] "const" "temp"
                              (1994726 '=' moreVal1[1994724] moreRef1[1994717])
                              const-val moreValNeg1[1994729]:int(64)[13] "const" "temp"
                              (1994731 'move' moreValNeg1[1994729](1994733 'u-' moreVal1[1994724]))
                              (1994735 '=' moreRef1[1994717] moreValNeg1[1994729])
                              (1994739 call advance[1096918] _iterator[1992709])
                              ref moreRef2[1994741]:_ref(int(64))[936761] "temp"
                              (1994743 'move' moreRef2[1994741](1994745 '.' _iterator[1992716] more[1108448]))
                              const-val moreVal2[1994748]:int(64)[13] "const" "temp"
                              (1994750 '=' moreVal2[1994748] moreRef2[1994741])
                              const-val moreValNeg2[1994753]:int(64)[13] "const" "temp"
                              (1994755 'move' moreValNeg2[1994753](1994757 'u-' moreVal2[1994748]))
                              (1994759 '=' moreRef2[1994741] moreValNeg2[1994753])
                              (1994763 call advance[1108471] _iterator[1992716])
                              (1994766 call chpl__autoDestroy[1601936] call_tmp[1992840])
                              (1994769 call _freeIterator[1108913] _iterator[1992647])
                              (1994772 call chpl__autoDestroy[1681548] _iterator[1992647])
                              (1994775 call chpl__autoDestroy[1407763] call_tmp[1992649])
                              (1994778 call chpl__autoDestroy[1601673] localThis[1992628])
                              (1994781 call _freeIterator[1122762] _iterator[1992577])
                              (1994784 call chpl__autoDestroy[1601936] default_arg_start[1992581])
                              (1994787 call chpl__autoDestroy[1601936] chunkStart[1992570])
                              (1994790 call chpl__autoDestroy[1601936] iEnd[1992559])
                              (1994793 call chpl__autoDestroy[1601673] chunk[1992503])
                              (1994796 call chpl__autoDestroy[1601673] localThis[1992488])
                              break _breakLabel[1025060] _breakLabel[1025060]
                            }
                          }
                          label _continueLabel[1994711]
                          (1994714 call chpl__autoDestroy[1601673] chpl__elidedIdx[1994680])
                        }
                        (1993456 call =[435290] yieldChunk[1992498] 0)
                      }
                      const-val call_tmp[1993460]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1993462 'move' call_tmp[1993460] done[1992493])
                      if call_tmp[1993460]
                      {
                        ref moreRef1[1993467]:_ref(int(64))[936761] "temp"
                        (1993469 'move' moreRef1[1993467](1993471 '.' _iterator[1992709] more[1096895]))
                        const-val moreVal1[1993474]:int(64)[13] "const" "temp"
                        (1993476 '=' moreVal1[1993474] moreRef1[1993467])
                        const-val moreValNeg1[1993479]:int(64)[13] "const" "temp"
                        (1993481 'move' moreValNeg1[1993479](1993483 'u-' moreVal1[1993474]))
                        (1993485 '=' moreRef1[1993467] moreValNeg1[1993479])
                        (1993489 call advance[1096918] _iterator[1992709])
                        ref moreRef2[1993491]:_ref(int(64))[936761] "temp"
                        (1993493 'move' moreRef2[1993491](1993495 '.' _iterator[1992716] more[1108448]))
                        const-val moreVal2[1993498]:int(64)[13] "const" "temp"
                        (1993500 '=' moreVal2[1993498] moreRef2[1993491])
                        const-val moreValNeg2[1993503]:int(64)[13] "const" "temp"
                        (1993505 'move' moreValNeg2[1993503](1993507 'u-' moreVal2[1993498]))
                        (1993509 '=' moreRef2[1993491] moreValNeg2[1993503])
                        (1993513 call advance[1108471] _iterator[1992716])
                        (1993516 call chpl__autoDestroy[1601936] call_tmp[1992840])
                        (1993519 call _freeIterator[1108913] _iterator[1992647])
                        (1993522 call chpl__autoDestroy[1681548] _iterator[1992647])
                        (1993525 call chpl__autoDestroy[1407763] call_tmp[1992649])
                        (1993528 call chpl__autoDestroy[1601673] localThis[1992628])
                        break _breakLabel[1994589] _breakLabel[1994589]
                      }
                    }
                    (1993534 call chpl__autoDestroy[1601936] call_tmp[1992840])
                    {
                      (1993538 call zip3[1096945] _iterator[1992709])
                    }
                    {
                      (1993542 call zip3[1108498] _iterator[1992716])
                    }
                    {
                      {
                        (1992739 call init[1096981] _iterator[1992709])
                      }
                      {
                        (1992743 call init[1108534] _iterator[1992716])
                      }
                    }
                    {
                      (1992747 call hasMore[1096963] _iterator[1992709])
                    }
                    {
                      {
                        (1992752 call incr[1096990] _iterator[1992709])
                      }
                      {
                        (1992756 call incr[1108543] _iterator[1992716])
                      }
                    }
                  }
                  {
                    const-val retTmp[1993545]:int(64)[13] "temp"
                    (1993547 'move' retTmp[1993545](1993550 call hasMore[1108516] _iterator[1992716]))
                    (1993552 'move' hasMore[1992733](1993554 'cast' bool[10] retTmp[1993545]))
                  }
                  if hasMore[1992733]
                  {
                    (1993559 'chpl_error' c"zippered iterations have non-equal lengths")
                  }
                  {
                    (1993564 call zip4[1108507] _iterator[1992716])
                  }
                  {
                    (1993568 call zip4[1096954] _iterator[1992709])
                  }
                  (1993571 call _freeIterator[1108913] _iterator[1992647])
                  (1993574 call chpl__autoDestroy[1681548] _iterator[1992647])
                  (1993577 call chpl__autoDestroy[1407763] call_tmp[1992649])
                }
                {
                  const-val call_tmp[1993580]:int(64)[13] "dead at end of block" "maybe param" "temp"
                  ref start[1993582]:_ref(byteIndex)[948948] "temp"
                  (1993584 'move' start[1993582](1993586 '.v' _iterator[1992577] F1_start[2094210]))
                  (1993589 'move' call_tmp[1993580](1993592 call _cast[39465] start[1993582]))
                  val i[1993594]:int(64)[13] "dead at end of block" "insert auto destroy"
                  (1993596 'move' i[1993594] call_tmp[1993580])
                  const-val call_tmp[1993599]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1993601 'move' call_tmp[1993599](1993604 call >[437788] call_tmp[1993580] 0))
                  const-val call_tmp[1993607]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1993609 'move' call_tmp[1993607] call_tmp[1993599])
                  if call_tmp[1993599]
                  {
                    val tmp[1993614]:bool[10] "dead after last mention" "temp"
                    const-val tmp[1993616]:bool[10] "dead after last mention" "maybe param" "temp"
                    ref call_tmp[1993618]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                    (1993620 'move' call_tmp[1993618](1993623 call buffLen[758075] localThis[1992628]))
                    const-val coerce_tmp[1993625]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1993627 'move' coerce_tmp[1993625](1993629 'deref' call_tmp[1993618]))
                    (1993631 'move' tmp[1993616](1993634 call <[437568] i[1993594] coerce_tmp[1993625]))
                    val tmp[1993637]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                    const-val tmp[1993639]:bool[10] "dead after last mention" "maybe param" "temp"
                    const-val call_tmp[1993641]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1993643 'move' call_tmp[1993641] tmp[1993616])
                    (1993646 'move' tmp[1993639] tmp[1993616])
                    if tmp[1993616]
                    {
                      const-val tmp[1993651]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                      ref call_tmp[1993653]:_ref(uint(8))[937097] "dead after last mention" "maybe param" "temp"
                      ref _this_tmp_[1993655]:_ref(c_ptr(uint(8)))[937621] "dead after last mention" "temp"
                      (1993657 'move' _this_tmp_[1993655](1993660 call buff[758153] localThis[1992628]))
                      val coerce_tmp[1993662]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (1993664 'move' coerce_tmp[1993662](1993666 'deref' _this_tmp_[1993655]))
                      (1993668 'move' call_tmp[1993653](1993671 call this[954280] coerce_tmp[1993662] i[1993594]))
                      const-val call_tmp[1993674]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val coerce_tmp[1993676]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (1993678 'move' coerce_tmp[1993676](1993680 'deref' call_tmp[1993653]))
                      (1993682 'move' call_tmp[1993674](1993685 call isInitialByte[181574] coerce_tmp[1993676]))
                      const-val call_tmp[1993687]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1993689 'move' call_tmp[1993687](1993692 call ![7494] call_tmp[1993674]))
                      (1993694 'move' tmp[1993651] call_tmp[1993687])
                      (1993697 'move' tmp[1993637] call_tmp[1993687])
                    }
                    {
                      (1993701 'move' tmp[1993637] 0)
                    }
                    (1993705 'move' tmp[1993614] tmp[1993637])
                    WhileDo[1993708]
                    {
                      (1993711 call +=[451431] i[1993594] 1)
                      const-val tmp[1993714]:bool[10] "dead after last mention" "maybe param" "temp"
                      ref call_tmp[1993716]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                      (1993718 'move' call_tmp[1993716](1993721 call buffLen[758075] localThis[1992628]))
                      const-val coerce_tmp[1993723]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (1993725 'move' coerce_tmp[1993723](1993727 'deref' call_tmp[1993716]))
                      (1993729 'move' tmp[1993714](1993732 call <[437568] i[1993594] coerce_tmp[1993723]))
                      val tmp[1993735]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                      const-val tmp[1993737]:bool[10] "dead after last mention" "maybe param" "temp"
                      const-val call_tmp[1993739]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1993741 'move' call_tmp[1993739] tmp[1993714])
                      (1993744 'move' tmp[1993737] tmp[1993714])
                      if tmp[1993714]
                      {
                        const-val tmp[1993749]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                        ref call_tmp[1993751]:_ref(uint(8))[937097] "dead after last mention" "maybe param" "temp"
                        ref _this_tmp_[1993753]:_ref(c_ptr(uint(8)))[937621] "dead after last mention" "temp"
                        (1993755 'move' _this_tmp_[1993753](1993758 call buff[758153] localThis[1992628]))
                        val coerce_tmp[1993760]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (1993762 'move' coerce_tmp[1993760](1993764 'deref' _this_tmp_[1993753]))
                        (1993766 'move' call_tmp[1993751](1993769 call this[954280] coerce_tmp[1993760] i[1993594]))
                        const-val call_tmp[1993772]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val coerce_tmp[1993774]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (1993776 'move' coerce_tmp[1993774](1993778 'deref' call_tmp[1993751]))
                        (1993780 'move' call_tmp[1993772](1993783 call isInitialByte[181574] coerce_tmp[1993774]))
                        const-val call_tmp[1993785]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1993787 'move' call_tmp[1993785](1993790 call ![7494] call_tmp[1993772]))
                        (1993792 'move' tmp[1993749] call_tmp[1993785])
                        (1993795 'move' tmp[1993735] call_tmp[1993785])
                      }
                      {
                        (1993799 'move' tmp[1993735] 0)
                      }
                      (1993803 'move' tmp[1993614] tmp[1993735])
                      tmp[1993614]
                    }
                  }
                  val tmp[1993807]:bool[10] "dead after last mention" "temp"
                  ref call_tmp[1993809]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                  (1993811 'move' call_tmp[1993809](1993814 call buffLen[758075] localThis[1992628]))
                  const-val call_tmp[1993816]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1993818]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1993820 'move' coerce_tmp[1993818](1993822 'deref' call_tmp[1993809]))
                  (1993824 'move' call_tmp[1993816](1993827 call <[437568] i[1993594] coerce_tmp[1993818]))
                  (1993830 'move' tmp[1993807] call_tmp[1993816])
                  WhileDo[1993833]
                  {
                    ref call_tmp[1993835]:_ref(c_ptr(uint(8)))[937621] "dead at end of block" "maybe param" "temp"
                    (1993837 'move' call_tmp[1993835](1993840 call buff[758153] localThis[1992628]))
                    ref call_tmp[1993842]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
                    (1993844 'move' call_tmp[1993842](1993847 call buffLen[758075] localThis[1992628]))
                    const-val call_tmp[1993849]:(syserr,int(32),int(32))[964809] "dead at end of block" "maybe param" "temp"
                    val coerce_tmp[1993851]:c_ptr(uint(8))[937612] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (1993853 'move' coerce_tmp[1993851](1993855 'deref' call_tmp[1993835]))
                    const-val coerce_tmp[1993857]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (1993859 'move' coerce_tmp[1993857](1993861 'deref' call_tmp[1993842]))
                    const-val ret_tmp[1993863]:(syserr,int(32),int(32))[964809] "temp"
                    (1993866 call decodeHelp[174452] coerce_tmp[1993851] coerce_tmp[1993857] i[1993594] 1 ret_tmp[1993863])
                    (1993872 'move' call_tmp[1993849] ret_tmp[1993863])
                    const-val tmp[1993875]:(syserr,int(32),int(32))[964809] "dead at end of block" "const" "insert auto destroy" "temp"
                    (1993877 'move' tmp[1993875] call_tmp[1993849])
                    1
                    ref call_tmp[1993881]:_ref(syserr)[949021] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (1993883 'move' call_tmp[1993881](1993885 '.' tmp[1993875] x0[964803]))
                    const-val decodeRet[1993888]:syserr[223672] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[1993890]:syserr[223672] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (1993892 'move' coerce_tmp[1993890](1993894 'deref' call_tmp[1993881]))
                    (1993896 'move' decodeRet[1993888](1993899 call chpl__initCopy[964674] coerce_tmp[1993890]))
                    ref call_tmp[1993901]:_ref(int(32))[936815] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (1993903 'move' call_tmp[1993901](1993905 '.' tmp[1993875] x1[964805]))
                    const-val cp[1993908]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[1993910]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (1993912 'move' coerce_tmp[1993910](1993914 'deref' call_tmp[1993901]))
                    (1993916 'move' cp[1993908](1993919 call chpl__initCopy[964946] coerce_tmp[1993910]))
                    ref call_tmp[1993921]:_ref(int(32))[936815] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (1993923 'move' call_tmp[1993921](1993925 '.' tmp[1993875] x2[964807]))
                    const-val nBytes[1993928]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[1993930]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (1993932 'move' coerce_tmp[1993930](1993934 'deref' call_tmp[1993921]))
                    (1993936 'move' nBytes[1993928](1993939 call chpl__initCopy[964946] coerce_tmp[1993930]))
                    const-val yret[1993941]:(int(32),byteIndex,int(64))[1122331] "dead after last mention" "YVV" "temp"
                    val call_tmp[1993943]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    const-val call_tmp[1993945]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1993947 'move' call_tmp[1993945] cp[1993908])
                    const-val call_tmp[1993950]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1993952]:byteIndex[28173] "temp"
                    (1993955 call _cast[39486] i[1993594] ret_tmp[1993952])
                    (1993958 'move' call_tmp[1993950] ret_tmp[1993952])
                    const-val call_tmp[1993961]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1993963 'move' call_tmp[1993961](1993965 'cast' int(64)[13] nBytes[1993928]))
                    const-val call_tmp[1993968]:(int(32),byteIndex,int(64))[1122331] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1993970]:(int(32),byteIndex,int(64))[1122331] "temp"
                    (1993973 call _build_tuple[1122281] cp[1993908] call_tmp[1993950] call_tmp[1993961] ret_tmp[1993970])
                    (1993978 'move' call_tmp[1993968] ret_tmp[1993970])
                    (1993981 'move' yret[1993941] call_tmp[1993968])
                    const-val _yieldedIndex[1993984]:(int(32),byteIndex,int(64))[1122331] "temp"
                    (1993986 'move' _yieldedIndex[1993984] call_tmp[1993968])
                    {
                      1
                      const-val c[1993991]:int(32)[95] "const" "index var" "insert auto destroy"
                      (1993993 'move' c[1993991](1993995 '.v' _yieldedIndex[1993984] x0[1122325]))
                      ref i[1993998]:_ref(byteIndex)[948948] "index var" "insert auto destroy"
                      (1994000 'move' i[1993998](1994002 '.v' _yieldedIndex[1993984] x1[1122327]))
                      const-val nBytes[1994005]:int(64)[13] "const" "index var" "insert auto destroy"
                      (1994007 'move' nBytes[1994005](1994009 '.v' _yieldedIndex[1993984] x2[1122329]))
                      const-val call_tmp[1994012]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1994014 'move' call_tmp[1994012] noSplits[1992516])
                      if noSplits[1992516]
                      {
                        (1994020 call =[435290] done[1992493] 1)
                        const-val call_tmp[1994023]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1994025 'move' call_tmp[1994023](1994028 call isSpace[36843] localThis[1992488]))
                        const-val call_tmp[1994030]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1994032 'move' call_tmp[1994030](1994035 call ![7494] call_tmp[1994023]))
                        const-val call_tmp[1994037]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1994039 'move' call_tmp[1994037] call_tmp[1994030])
                        if call_tmp[1994030]
                        {
                          (1994045 call =[38272] chunk[1992503] localThis[1992488])
                          (1994049 call =[435290] yieldChunk[1992498] 1)
                        }
                      }
                      {
                        const-val call_tmp[1994054]:bool[10] "dead at end of block" "maybe param" "temp"
                        (1994056 'move' call_tmp[1994054](1994059 call codepoint_isWhitespace[39156] c[1993991]))
                        const-val cSpace[1994061]:bool[10] "dead at end of block" "insert auto destroy"
                        (1994063 'move' cSpace[1994061] call_tmp[1994054])
                        const-val tmp[1994066]:bool[10] "dead after last mention" "maybe param" "temp"
                        (1994068 'move' tmp[1994066] inChunk[1992565])
                        val tmp[1994071]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                        const-val tmp[1994073]:bool[10] "dead after last mention" "maybe param" "temp"
                        const-val call_tmp[1994075]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1994077 'move' call_tmp[1994075] inChunk[1992565])
                        (1994080 'move' tmp[1994073] inChunk[1992565])
                        if inChunk[1992565]
                        {
                          (1994085 'move' tmp[1994071] 1)
                        }
                        {
                          const-val tmp[1994089]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                          (1994091 'move' tmp[1994089] cSpace[1994061])
                          (1994094 'move' tmp[1994071] cSpace[1994061])
                        }
                        const-val call_tmp[1994098]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1994100 'move' call_tmp[1994098](1994103 call ![7494] tmp[1994071]))
                        const-val call_tmp[1994105]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1994107 'move' call_tmp[1994105] call_tmp[1994098])
                        if call_tmp[1994098]
                        {
                          (1994113 call =[38194] chunkStart[1992570] i[1993998])
                          (1994117 call =[435290] inChunk[1992565] 1)
                          const-val call_tmp[1994120]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                          const-val ret_tmp[1994122]:byteIndex[28173] "temp"
                          (1994125 call -[28857] i[1993998] 1 ret_tmp[1994122])
                          (1994129 'move' call_tmp[1994120] ret_tmp[1994122])
                          const-val call_tmp[1994132]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                          const-val ret_tmp[1994134]:byteIndex[28173] "temp"
                          (1994137 call +[28725] call_tmp[1994120] nBytes[1994005] ret_tmp[1994134])
                          (1994141 'move' call_tmp[1994132] ret_tmp[1994134])
                          const-val call_tmp[1994144]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (1994146 'move' call_tmp[1994144](1994149 call >[28575] call_tmp[1994132] iEnd[1992559]))
                          const-val call_tmp[1994152]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (1994154 'move' call_tmp[1994152] call_tmp[1994144])
                          if call_tmp[1994144]
                          {
                            const-val call_tmp[1994159]:range(byteIndex,boundedLow,false)[1143592] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[1994161]:range(byteIndex,boundedLow,false)[1143592] "temp"
                            (1994164 call chpl_build_low_bounded_range[1142899] chunkStart[1992570] ret_tmp[1994161])
                            (1994167 'move' call_tmp[1994159] ret_tmp[1994161])
                            const-val call_tmp[1994170]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[1994172]:string[26] "temp"
                            (1994175 call this[1143912] localThis[1992488] call_tmp[1994159] ret_tmp[1994172])
                            (1994179 'move' call_tmp[1994170] ret_tmp[1994172])
                            (1994183 call =[38272] chunk[1992503] call_tmp[1994170])
                            (1994187 call chpl__autoDestroy[1601673] call_tmp[1994170])
                            (1994190 call chpl__autoDestroy[1682957] call_tmp[1994159])
                            (1994193 call =[435290] yieldChunk[1992498] 1)
                            (1994197 call =[435290] done[1992493] 1)
                          }
                          (1994202 call chpl__autoDestroy[1601936] call_tmp[1994132])
                          (1994205 call chpl__autoDestroy[1601936] call_tmp[1994120])
                        }
                        {
                          const-val call_tmp[1994208]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (1994210 'move' call_tmp[1994208] inChunk[1992565])
                          if call_tmp[1994208]
                          {
                            const-val call_tmp[1994215]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (1994217 'move' call_tmp[1994215] cSpace[1994061])
                            if cSpace[1994061]
                            {
                              (1994223 call +=[451431] splitCount[1992534] 1)
                              const-val tmp[1994226]:bool[10] "dead after last mention" "maybe param" "temp"
                              (1994228 'move' tmp[1994226] limitSplits[1992529])
                              val tmp[1994231]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                              const-val tmp[1994233]:bool[10] "dead after last mention" "maybe param" "temp"
                              const-val call_tmp[1994235]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1994237 'move' call_tmp[1994235] limitSplits[1992529])
                              (1994240 'move' tmp[1994233] limitSplits[1992529])
                              if limitSplits[1992529]
                              {
                                const-val tmp[1994245]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                                const-val call_tmp[1994247]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val maxsplit[1994926]:int(64)[13] "temp"
                                (1994931 'move' maxsplit[1994926](1994928 '.v' _iterator[1024993] F1_maxsplit[2098436]))
                                (1994249 'move' call_tmp[1994247](1994252 call >[437788] splitCount[1992534] maxsplit[1994926]))
                                (1994255 'move' tmp[1994245] call_tmp[1994247])
                                (1994258 'move' tmp[1994231] call_tmp[1994247])
                              }
                              {
                                (1994262 'move' tmp[1994231] 0)
                              }
                              const-val call_tmp[1994266]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1994268 'move' call_tmp[1994266] tmp[1994231])
                              if tmp[1994231]
                              {
                                const-val call_tmp[1994273]:range(byteIndex,boundedLow,false)[1143592] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[1994275]:range(byteIndex,boundedLow,false)[1143592] "temp"
                                (1994278 call chpl_build_low_bounded_range[1142899] chunkStart[1992570] ret_tmp[1994275])
                                (1994281 'move' call_tmp[1994273] ret_tmp[1994275])
                                const-val call_tmp[1994284]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[1994286]:string[26] "temp"
                                (1994289 call this[1143912] localThis[1992488] call_tmp[1994273] ret_tmp[1994286])
                                (1994293 'move' call_tmp[1994284] ret_tmp[1994286])
                                (1994297 call =[38272] chunk[1992503] call_tmp[1994284])
                                (1994301 call chpl__autoDestroy[1601673] call_tmp[1994284])
                                (1994304 call chpl__autoDestroy[1682957] call_tmp[1994273])
                                (1994307 call =[435290] yieldChunk[1992498] 1)
                                (1994311 call =[435290] done[1992493] 1)
                              }
                              {
                                const-val call_tmp[1994315]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[1994317]:byteIndex[28173] "temp"
                                (1994320 call -[28857] i[1993998] 1 ret_tmp[1994317])
                                (1994324 'move' call_tmp[1994315] ret_tmp[1994317])
                                const-val call_tmp[1994327]:range(byteIndex,bounded,false)[1025981] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[1994329]:range(byteIndex,bounded,false)[1025981] "temp"
                                (1994332 call chpl_build_bounded_range[1123443] chunkStart[1992570] call_tmp[1994315] ret_tmp[1994329])
                                (1994336 'move' call_tmp[1994327] ret_tmp[1994329])
                                const-val call_tmp[1994339]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[1994341]:string[26] "temp"
                                (1994344 call this[1123689] localThis[1992488] call_tmp[1994327] ret_tmp[1994341])
                                (1994348 'move' call_tmp[1994339] ret_tmp[1994341])
                                (1994352 call =[38272] chunk[1992503] call_tmp[1994339])
                                (1994356 call chpl__autoDestroy[1601673] call_tmp[1994339])
                                (1994359 call chpl__autoDestroy[1674473] call_tmp[1994327])
                                (1994362 call chpl__autoDestroy[1601936] call_tmp[1994315])
                                (1994365 call =[435290] yieldChunk[1992498] 1)
                                (1994369 call =[435290] inChunk[1992565] 0)
                              }
                            }
                            {
                              const-val call_tmp[1994374]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              const-val ret_tmp[1994376]:byteIndex[28173] "temp"
                              (1994379 call -[28857] i[1993998] 1 ret_tmp[1994376])
                              (1994383 'move' call_tmp[1994374] ret_tmp[1994376])
                              const-val call_tmp[1994386]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              const-val ret_tmp[1994388]:byteIndex[28173] "temp"
                              (1994391 call +[28725] call_tmp[1994374] nBytes[1994005] ret_tmp[1994388])
                              (1994395 'move' call_tmp[1994386] ret_tmp[1994388])
                              const-val call_tmp[1994398]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1994400 'move' call_tmp[1994398](1994403 call >[28575] call_tmp[1994386] iEnd[1992559]))
                              const-val call_tmp[1994406]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1994408 'move' call_tmp[1994406] call_tmp[1994398])
                              if call_tmp[1994398]
                              {
                                const-val call_tmp[1994413]:range(byteIndex,boundedLow,false)[1143592] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[1994415]:range(byteIndex,boundedLow,false)[1143592] "temp"
                                (1994418 call chpl_build_low_bounded_range[1142899] chunkStart[1992570] ret_tmp[1994415])
                                (1994421 'move' call_tmp[1994413] ret_tmp[1994415])
                                const-val call_tmp[1994424]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[1994426]:string[26] "temp"
                                (1994429 call this[1143912] localThis[1992488] call_tmp[1994413] ret_tmp[1994426])
                                (1994433 'move' call_tmp[1994424] ret_tmp[1994426])
                                (1994437 call =[38272] chunk[1992503] call_tmp[1994424])
                                (1994441 call chpl__autoDestroy[1601673] call_tmp[1994424])
                                (1994444 call chpl__autoDestroy[1682957] call_tmp[1994413])
                                (1994447 call =[435290] yieldChunk[1992498] 1)
                                (1994451 call =[435290] done[1992493] 1)
                              }
                              (1994456 call chpl__autoDestroy[1601936] call_tmp[1994386])
                              (1994459 call chpl__autoDestroy[1601936] call_tmp[1994374])
                            }
                          }
                        }
                      }
                      const-val call_tmp[1994465]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1994467 'move' call_tmp[1994465] yieldChunk[1992498])
                      if call_tmp[1994465]
                      {
                        const-val yret[1994472]:string[26] "dead after last mention" "YVV" "temp"
                        const-val _yield_expr_tmp_[1994474]:string[26] "temp"
                        (1994476 'move' _yield_expr_tmp_[1994474](1994479 call chpl__initCopy[981537] chunk[1992503]))
                        (1994481 'move' yret[1994472] _yield_expr_tmp_[1994474])
                        const-val _yieldedIndex[1994801]:string[26] "temp"
                        (1994868 'move' _yieldedIndex[1994801] _yield_expr_tmp_[1994474])
                        {
                          const-val chpl__elidedIdx[1994803]:string[26] "const" "index var" "insert auto destroy"
                          (1994805 'move' chpl__elidedIdx[1994803] _yieldedIndex[1994801])
                          {
                            (1994810 call +=[451431] numElements[1024984] 1)
                            const-val call_tmp[1994813]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (1994815 'move' call_tmp[1994813](1994818 call >[437788] numElements[1024984] 1))
                            const-val call_tmp[1994821]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (1994823 'move' call_tmp[1994821] call_tmp[1994813])
                            if call_tmp[1994821]
                            {
                              (1994829 call chpl__autoDestroy[1601673] chpl__elidedIdx[1994803])
                              (1994841 call chpl__autoDestroy[1601936] call_tmp[1993950])
                              (1994844 call chpl__autoDestroy[1605546] tmp[1993875])
                              (1994847 call chpl__autoDestroy[1601673] localThis[1992628])
                              (1994850 call _freeIterator[1122762] _iterator[1992577])
                              (1994853 call chpl__autoDestroy[1601936] default_arg_start[1992581])
                              (1994856 call chpl__autoDestroy[1601936] chunkStart[1992570])
                              (1994859 call chpl__autoDestroy[1601936] iEnd[1992559])
                              (1994862 call chpl__autoDestroy[1601673] chunk[1992503])
                              (1994865 call chpl__autoDestroy[1601673] localThis[1992488])
                              break _breakLabel[1025060] _breakLabel[1025060]
                            }
                          }
                          label _continueLabel[1994834]
                          (1994837 call chpl__autoDestroy[1601673] chpl__elidedIdx[1994803])
                        }
                        (1994519 call =[435290] yieldChunk[1992498] 0)
                      }
                      const-val call_tmp[1994523]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1994525 'move' call_tmp[1994523] done[1992493])
                      if call_tmp[1994523]
                      {
                        (1994531 call chpl__autoDestroy[1601936] call_tmp[1993950])
                        (1994534 call chpl__autoDestroy[1605546] tmp[1993875])
                        (1994537 call chpl__autoDestroy[1601673] localThis[1992628])
                        break _breakLabel[1994589] _breakLabel[1994589]
                      }
                    }
                    (1994543 call chpl__autoDestroy[1601936] call_tmp[1993950])
                    const-val coerce_tmp[1994545]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1994547 'move' coerce_tmp[1994545](1994549 'cast' int(64)[13] nBytes[1993928]))
                    (1994553 call +=[451431] i[1993594] coerce_tmp[1994545])
                    (1994557 call chpl__autoDestroy[1605546] tmp[1993875])
                    ref call_tmp[1994559]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                    (1994561 'move' call_tmp[1994559](1994564 call buffLen[758075] localThis[1992628]))
                    const-val call_tmp[1994566]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1994568]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1994570 'move' coerce_tmp[1994568](1994572 'deref' call_tmp[1994559]))
                    (1994574 'move' call_tmp[1994566](1994577 call <[437568] i[1993594] coerce_tmp[1994568]))
                    (1994580 'move' tmp[1993807] call_tmp[1994566])
                    tmp[1993807]
                  }
                }
                (1994585 call chpl__autoDestroy[1601673] localThis[1992628])
                label _end_cpIndexLen[1994587]
              }
              label _breakLabel[1994589]
              (1994592 call _freeIterator[1122762] _iterator[1992577])
              (1994595 call chpl__autoDestroy[1601936] default_arg_start[1992581])
              (1994598 call chpl__autoDestroy[1601936] chunkStart[1992570])
              (1994601 call chpl__autoDestroy[1601936] iEnd[1992559])
              (1994604 call chpl__autoDestroy[1601673] chunk[1992503])
              (1994607 call chpl__autoDestroy[1601673] localThis[1992488])
            }
          }
          label _endsplit[1994611]
        }
        label _breakLabel[1025060]
        (1920210 call _freeIterator[1156881] _iterator[1024993])
      }
      const-val call_tmp[1025062]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1025064 'move' call_tmp[1025062](1025067 call >[437788] numElements[1024984] 1))
      const-val call_tmp[1025070]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1025072 'move' call_tmp[1025070] call_tmp[1025062])
      if call_tmp[1025070]
      {
        const-val call_tmp[1025079]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1905728]:string[26] "temp"
        (1025084 call +[38345] "bad cast from string '" x[1024762] ret_tmp[1905728])
        (1905731 'move' call_tmp[1025079] ret_tmp[1905728])
        const-val call_tmp[1025087]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1905734]:string[26] "temp"
        (1025092 call +[38345] call_tmp[1025079] "' to " ret_tmp[1905734])
        (1905737 'move' call_tmp[1025087] ret_tmp[1905734])
        const-val call_tmp[1025103]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1905740]:string[26] "temp"
        (1025108 call +[38345] call_tmp[1025087] "int(64)" ret_tmp[1905740])
        (1905743 'move' call_tmp[1025103] ret_tmp[1905740])
        const-val call_tmp[1025111]:owned IllegalArgumentError[1064747] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
        val new_temp[1156970]:IllegalArgumentError[168246] "dead after last mention" "temp"
        (1156972 'move' new_temp[1156970](1156957 call _new[1064296] call_tmp[1025103]))
        const-val initTemp[1156979]:owned IllegalArgumentError[1064747] "dead after last mention" "delay instantiation" "temp"
        (1156982 call init[1064398] initTemp[1156979] new_temp[1156970])
        (1025113 'move' call_tmp[1025111] initTemp[1156979])
        val call_tmp[1025120]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1156996]:owned Error[966647] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
        const-val ret_tmp[1909204]:owned Error[966647] "temp"
        (1156998 call _cast[1064919] call_tmp[1025111] ret_tmp[1909204])
        (1909207 'move' coerce_tmp[1156996] ret_tmp[1909204])
        const-val _formal_tmp_in_err[1157175]:owned Error[966647] "dead after last mention" "expr temp" "no auto destroy" "temp"
        (1157179 'move' _formal_tmp_in_err[1157175] coerce_tmp[1156996])
        (1025122 'move' call_tmp[1025120](1025125 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1157175]))
        {
          val castedError[1884943]:Error[167984] "temp"
          (1884949 'move' castedError[1884943] call_tmp[1025120])
          (1884951 '=' error_out[1884940] castedError[1884943])
          (1920212 call chpl__autoDestroy[1601673] call_tmp[1025103])
          (1920215 call chpl__autoDestroy[1601673] call_tmp[1025087])
          (1920218 call chpl__autoDestroy[1601673] call_tmp[1025079])
          (1920221 call chpl__autoDestroy[1601936] call_tmp[1024927])
          (1920224 call chpl__autoDestroy[1674473] default_arg_region[1030228])
          (1920227 call chpl__autoDestroy[1601673] localX[1024921])
          gotoErrorHandlingReturn _end__cast[1025768] _end__cast[1025768]
        }
        (1920231 call chpl__autoDestroy[1601673] call_tmp[1025103])
        (1920234 call chpl__autoDestroy[1601673] call_tmp[1025087])
        (1920237 call chpl__autoDestroy[1601673] call_tmp[1025079])
      }
      const-val call_tmp[1025130]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1025132 'move' call_tmp[1025130](1025135 call size[32772] localX[1024921]))
      const-val call_tmp[1025138]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1025140 'move' call_tmp[1025138](1025143 call >=[1157185] call_tmp[1025130]))
      const-val call_tmp[1025146]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1025148 'move' call_tmp[1025146] call_tmp[1025138])
      if call_tmp[1025146]
      {
        const-val call_tmp[1025155]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1905442]:string[26] "temp"
        (1025160 call this[34663] localX[1024921] 0 ret_tmp[1905442])
        (1905445 'move' call_tmp[1025155] ret_tmp[1905442])
        const-val call_tmp[1025162]:range(int(64),boundedLow,false)[1087754] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1909456]:range(int(64),boundedLow,false)[1087754] "temp"
        (1025167 call chpl_build_low_bounded_range[1087147] 1 ret_tmp[1909456])
        (1909459 'move' call_tmp[1025162] ret_tmp[1909456])
        const-val call_tmp[1025169]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1910152]:string[26] "temp"
        (1025174 call this[1125751] localX[1024921] call_tmp[1025162] ret_tmp[1910152])
        (1910155 'move' call_tmp[1025169] ret_tmp[1910152])
        const-val call_tmp[1025176]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1905488]:string[26] "temp"
        (1025184 call replace[35366] call_tmp[1025169] "_" "" -1 ret_tmp[1905488])
        (1905491 'move' call_tmp[1025176] ret_tmp[1905488])
        const-val call_tmp[1025187]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1905746]:string[26] "temp"
        (1025192 call +[38345] call_tmp[1025155] call_tmp[1025176] ret_tmp[1905746])
        (1905749 'move' call_tmp[1025187] ret_tmp[1905746])
        (1025196 call =[38272] localX[1024921] call_tmp[1025187])
        (1920241 call chpl__autoDestroy[1601673] call_tmp[1025187])
        (1920244 call chpl__autoDestroy[1601673] call_tmp[1025176])
        (1920247 call chpl__autoDestroy[1601673] call_tmp[1025169])
        (1920250 call chpl__autoDestroy[1680875] call_tmp[1025162])
        (1920253 call chpl__autoDestroy[1601673] call_tmp[1025155])
      }
    }
    const-val call_tmp[1025205]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1025207 'move' call_tmp[1025205](1025213 call isEmpty[35064] localX[1024921]))
    const-val call_tmp[1025214]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1025216 'move' call_tmp[1025214] call_tmp[1025205])
    if call_tmp[1025214]
    {
      const-val call_tmp[1025239]:owned IllegalArgumentError[1064747] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      val new_temp[1204044]:IllegalArgumentError[168246] "dead after last mention" "temp"
      (1204046 'move' new_temp[1204044](1204031 call _new[1064296] "bad cast from empty string to int(64)"))
      const-val initTemp[1204053]:owned IllegalArgumentError[1064747] "dead after last mention" "delay instantiation" "temp"
      (1204056 call init[1064398] initTemp[1204053] new_temp[1204044])
      (1025241 'move' call_tmp[1025239] initTemp[1204053])
      val call_tmp[1025248]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1204070]:owned Error[966647] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1909210]:owned Error[966647] "temp"
      (1204072 call _cast[1064919] call_tmp[1025239] ret_tmp[1909210])
      (1909213 'move' coerce_tmp[1204070] ret_tmp[1909210])
      const-val _formal_tmp_in_err[1204249]:owned Error[966647] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1204253 'move' _formal_tmp_in_err[1204249] coerce_tmp[1204070])
      (1025250 'move' call_tmp[1025248](1025253 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1204249]))
      {
        val castedError[1884956]:Error[167984] "temp"
        (1884962 'move' castedError[1884956] call_tmp[1025248])
        (1884964 '=' error_out[1884940] castedError[1884956])
        (1920257 call chpl__autoDestroy[1601936] call_tmp[1024927])
        (1920260 call chpl__autoDestroy[1674473] default_arg_region[1030228])
        (1920263 call chpl__autoDestroy[1601673] localX[1024921])
        gotoErrorHandlingReturn _end__cast[1025768] _end__cast[1025768]
      }
    }
    {
      {
        {
          {
            {
              {
                const-val call_tmp[1025428]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
                (1025430 'move' call_tmp[1025428](1025436 call c_str[32935] localX[1024921]))
                const-val call_tmp[1025437]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                (1025439 'move' call_tmp[1025437](1025442 call c_string_to_int64_t[1024820] call_tmp[1025428] isErr[1024906]))
                (1205659 'move' retVal[1024900] call_tmp[1025437])
              }
            }
          }
        }
      }
    }
    const-val call_tmp[1025700]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1025702 'move' call_tmp[1025700] isErr[1024906])
    if call_tmp[1025700]
    {
      const-val call_tmp[1025709]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1905752]:string[26] "temp"
      (1025714 call +[38345] "bad cast from string '" x[1024762] ret_tmp[1905752])
      (1905755 'move' call_tmp[1025709] ret_tmp[1905752])
      const-val call_tmp[1025717]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1905758]:string[26] "temp"
      (1025722 call +[38345] call_tmp[1025709] "' to " ret_tmp[1905758])
      (1905761 'move' call_tmp[1025717] ret_tmp[1905758])
      const-val call_tmp[1025733]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1905764]:string[26] "temp"
      (1025738 call +[38345] call_tmp[1025717] "int(64)" ret_tmp[1905764])
      (1905767 'move' call_tmp[1025733] ret_tmp[1905764])
      const-val call_tmp[1025741]:owned IllegalArgumentError[1064747] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      val new_temp[1205445]:IllegalArgumentError[168246] "dead after last mention" "temp"
      (1205447 'move' new_temp[1205445](1205432 call _new[1064296] call_tmp[1025733]))
      const-val initTemp[1205454]:owned IllegalArgumentError[1064747] "dead after last mention" "delay instantiation" "temp"
      (1205457 call init[1064398] initTemp[1205454] new_temp[1205445])
      (1025743 'move' call_tmp[1025741] initTemp[1205454])
      val call_tmp[1025750]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1205471]:owned Error[966647] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1909216]:owned Error[966647] "temp"
      (1205473 call _cast[1064919] call_tmp[1025741] ret_tmp[1909216])
      (1909219 'move' coerce_tmp[1205471] ret_tmp[1909216])
      const-val _formal_tmp_in_err[1205650]:owned Error[966647] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1205654 'move' _formal_tmp_in_err[1205650] coerce_tmp[1205471])
      (1025752 'move' call_tmp[1025750](1025755 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1205650]))
      {
        val castedError[1884969]:Error[167984] "temp"
        (1884975 'move' castedError[1884969] call_tmp[1025750])
        (1884977 '=' error_out[1884940] castedError[1884969])
        (1920266 call chpl__autoDestroy[1601673] call_tmp[1025733])
        (1920269 call chpl__autoDestroy[1601673] call_tmp[1025717])
        (1920272 call chpl__autoDestroy[1601673] call_tmp[1025709])
        (1920275 call chpl__autoDestroy[1601936] call_tmp[1024927])
        (1920278 call chpl__autoDestroy[1674473] default_arg_region[1030228])
        (1920281 call chpl__autoDestroy[1601673] localX[1024921])
        gotoErrorHandlingReturn _end__cast[1025768] _end__cast[1025768]
      }
      (1920285 call chpl__autoDestroy[1601673] call_tmp[1025733])
      (1920288 call chpl__autoDestroy[1601673] call_tmp[1025717])
      (1920291 call chpl__autoDestroy[1601673] call_tmp[1025709])
    }
    (1025760 'move' ret[1024764] retVal[1024900])
    (1920294 call chpl__autoDestroy[1601936] call_tmp[1024927])
    (1920297 call chpl__autoDestroy[1674473] default_arg_region[1030228])
    (1920300 call chpl__autoDestroy[1601673] localX[1024921])
    gotoReturn _end__cast[1025768] _end__cast[1025768]
    label _end__cast[1025768]
    (1025770 return ret[1024764])
  }
  function _cast[1354486](const  ref arg x[1354490]:string[26], ref arg error_out[1887591]:Error[167984]) : uint(64)[115] throws "inline" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[1880037]:uint(64)[115] "temp"
    val ret[1354492]:uint(64)[115] "dead after last mention" "RVV" "temp"
    const-val retVal[1354628]:uint(64)[115] "dead at end of block" "insert auto destroy" "split inited"
    val isErr[1354634]:bool[10] "dead at end of block" "insert auto destroy"
    (1356502 'move' isErr[1354634] 0)
    const-val call_tmp[1354640]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1905344]:string[26] "temp"
    (1354648 call localize[32889] x[1354490] ret_tmp[1905344])
    (1905347 'move' call_tmp[1354640] ret_tmp[1905344])
    val localX[1354649]:string[26] "dead at end of block" "insert auto destroy"
    (1354651 'move' localX[1354649] call_tmp[1354640])
    const-val call_tmp[1354655]:byteIndex[28173] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val default_arg_region[1355509]:range(byteIndex,bounded,false)[1025981] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret_tmp[1908576]:range(byteIndex,bounded,false)[1025981] "temp"
    (1355511 call find_default_region[1030187] localX[1354649] ret_tmp[1908576])
    (1908579 'move' default_arg_region[1355509] ret_tmp[1908576])
    const-val ret_tmp[1908504]:byteIndex[28173] "temp"
    (1354663 call find[1025776] localX[1354649] "_" default_arg_region[1355509] ret_tmp[1908504])
    (1908507 'move' call_tmp[1354655] ret_tmp[1908504])
    const-val call_tmp[1354672]:bool[10] "dead at end of block" "maybe param" "temp"
    (1354674 'move' call_tmp[1354672](1354677 call !=[29619] call_tmp[1354655] -1))
    const-val hasUnderscores[1354680]:bool[10] "dead at end of block" "const" "insert auto destroy"
    (1354682 'move' hasUnderscores[1354680] call_tmp[1354672])
    const-val call_tmp[1354687]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1354689 'move' call_tmp[1354687] hasUnderscores[1354680])
    if call_tmp[1354687]
    {
      const-val call_tmp[1354696]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1905534]:string[26] "temp"
      (1354704 call strip[36095] localX[1354649] " \t\r\n" 1 1 ret_tmp[1905534])
      (1905537 'move' call_tmp[1354696] ret_tmp[1905534])
      (1354706 call =[38272] localX[1354649] call_tmp[1354696])
      (1925477 call chpl__autoDestroy[1601673] call_tmp[1354696])
      val numElements[1354712]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1356505 'move' numElements[1354712] 0)
      {
        val _indexOfInterest[1354719]:string[26] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1354721]:_ic_split__ref_string[1156693] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[1354723]:_ir_split__ref_string[1156699] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1905512]:_ir_split__ref_string[1156699] "temp"
        (1354731 call split[35486] localX[1354649] -1 ret_tmp[1905512])
        (1905515 'move' call_tmp[1354723] ret_tmp[1905512])
        (1354732 'move' _iterator[1354721](1354735 call _getIterator[1156708] call_tmp[1354723]))
        {
          val ret[2003716]:_ir_split__ref_string[1156699] "dead after last mention" "RVV" "temp"
          const-val call_tmp[2003718]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          ref this[2006903]:_ref(string)[938128] "temp"
          (2006908 'move' this[2006903](2006905 '.v' _iterator[1354721] F0_this[2098432]))
          (2003720 'move' call_tmp[2003718](2003723 call isASCII[31049] this[2006903]))
          const-val call_tmp[2003725]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2003727 'move' call_tmp[2003725] call_tmp[2003718])
          if call_tmp[2003718]
          {
            val _indexOfInterest[2003732]:string[26] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[2003734]:_ic_doSplitWSNoEnc[1124664] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[2003736]:_ir_doSplitWSNoEnc[1124670] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[2003738]:_ir_doSplitWSNoEnc[1124670] "temp"
            ref this[2006910]:_ref(string)[938128] "temp"
            (2006915 'move' this[2006910](2006912 '.v' _iterator[1354721] F0_this[2098432]))
            const-val maxsplit[2006917]:int(64)[13] "temp"
            (2006922 'move' maxsplit[2006917](2006919 '.v' _iterator[1354721] F1_maxsplit[2098436]))
            (2003741 call doSplitWSNoEnc[1124645] this[2006910] maxsplit[2006917] ret_tmp[2003738])
            (2003745 'move' call_tmp[2003736] ret_tmp[2003738])
            (2003748 'move' _iterator[2003734](2003751 call _getIterator[1124679] call_tmp[2003736]))
            {
              val ret[2003754]:_ir_doSplitWSNoEnc[1124670] "dead at end of block" "RVV" "temp"
              val call_tmp[2003756]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[2003758]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              ref x[2003760]:_ref(string)[938128] "temp"
              (2003762 'move' x[2003760](2003764 '.v' _iterator[2003734] F0_x[2115694]))
              (2003767 'move' call_tmp[2003758](2003770 call isEmpty[35064] x[2003760]))
              const-val call_tmp[2003772]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2003774 'move' call_tmp[2003772](2003777 call ![7494] call_tmp[2003758]))
              const-val call_tmp[2003779]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2003781 'move' call_tmp[2003779] call_tmp[2003772])
              if call_tmp[2003772]
              {
                const-val call_tmp[2003786]:string[26] "dead at end of block" "maybe param" "temp"
                const-val ret_tmp[2003788]:string[26] "temp"
                ref x[2003790]:_ref(string)[938128] "temp"
                (2003792 'move' x[2003790](2003794 '.v' _iterator[2003734] F0_x[2115694]))
                (2003798 call localize[32889] x[2003790] ret_tmp[2003788])
                (2003801 'move' call_tmp[2003786] ret_tmp[2003788])
                val call_tmp[2003804]:string[26] "dead after last mention" "maybe param" "temp" "type variable"
                const localx[2003806]:string[26] "dead at end of block" "const" "insert auto destroy"
                (2003808 'move' localx[2003806] call_tmp[2003786])
                val done[2003811]:bool[10] "dead at end of block" "insert auto destroy"
                (2003813 'move' done[2003811] 0)
                val yieldChunk[2003816]:bool[10] "dead at end of block" "insert auto destroy"
                (2003818 'move' yieldChunk[2003816] 0)
                val chunk[2003821]:string[26] "dead at end of block" "insert auto destroy"
                val call_tmp[2003823]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (2003826 call init[30763] chunk[2003821])
                const-val call_tmp[2003828]:bool[10] "dead at end of block" "maybe param" "temp"
                const-val maxsplit[2003830]:int(64)[13] "temp"
                (2003832 'move' maxsplit[2003830](2003834 '.v' _iterator[2003734] F1_maxsplit[2115698]))
                (2003837 'move' call_tmp[2003828](2003840 call ==[435744] maxsplit[2003830] 0))
                const-val noSplits[2003843]:bool[10] "dead at end of block" "const" "insert auto destroy"
                (2003845 'move' noSplits[2003843] call_tmp[2003828])
                const-val call_tmp[2003848]:bool[10] "dead at end of block" "maybe param" "temp"
                const-val maxsplit[2003850]:int(64)[13] "temp"
                (2003852 'move' maxsplit[2003850](2003854 '.v' _iterator[2003734] F1_maxsplit[2115698]))
                (2003857 'move' call_tmp[2003848](2003860 call >[437788] maxsplit[2003850] 0))
                const-val limitSplits[2003863]:bool[10] "dead at end of block" "const" "insert auto destroy"
                (2003865 'move' limitSplits[2003863] call_tmp[2003848])
                val splitCount[2003868]:int(64)[13] "dead at end of block" "insert auto destroy"
                (2003870 'move' splitCount[2003868] 0)
                ref call_tmp[2003873]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                (2003875 'move' call_tmp[2003873](2003878 call buffLen[758075] localx[2003806]))
                const-val call_tmp[2003880]:int(64)[13] "dead at end of block" "maybe param" "temp"
                const-val coerce_tmp[2003882]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2003884 'move' coerce_tmp[2003882](2003886 'deref' call_tmp[2003873]))
                (2003888 'move' call_tmp[2003880](2003891 call -[1125627] coerce_tmp[2003882]))
                const-val iEnd[2003893]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                (2003895 'move' iEnd[2003893] call_tmp[2003880])
                val inChunk[2003898]:bool[10] "dead at end of block" "insert auto destroy"
                (2003900 'move' inChunk[2003898] 0)
                val chunkStart[2003903]:int(64)[13] "dead at end of block" "insert auto destroy"
                (2003905 'move' chunkStart[2003903] 0)
                const-val _iterator[2003910]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108755] "dead at end of block" "expr temp" "insert auto destroy" "temp"
                const-val call_tmp[2003912]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[2003914]:range(int(64),bounded,false)[1027003] "temp"
                ref x[2003916]:_ref(string)[938128] "temp"
                (2003918 'move' x[2003916](2003920 '.v' _iterator[2003734] F0_x[2115694]))
                (2003924 call indices[32788] x[2003916] ret_tmp[2003914])
                (2003927 'move' call_tmp[2003912] ret_tmp[2003914])
                val call_tmp[2003930]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "maybe param" "temp"
                (2003932 'move' call_tmp[2003930](2003935 call _getIterator[1095509] call_tmp[2003912]))
                const-val call_tmp[2003937]:_ir_chpl_bytes__ref_string[1108451] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[2003939]:_ir_chpl_bytes__ref_string[1108451] "temp"
                (2003942 call chpl_bytes[33577] localx[2003806] ret_tmp[2003939])
                (2003945 'move' call_tmp[2003937] ret_tmp[2003939])
                val call_tmp[2003948]:_ic_chpl_bytes__ref_string[1108445] "dead at end of block" "expr temp" "maybe param" "temp"
                (2003950 'move' call_tmp[2003948](2003953 call _getIterator[1108460] call_tmp[2003937]))
                const-val ret_tmp[2003955]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108755] "temp"
                (2003958 call _build_tuple[1108713] call_tmp[2003930] call_tmp[2003948] ret_tmp[2003955])
                (2003962 'move' _iterator[2003910] ret_tmp[2003955])
                val _iterator[2074439]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
                (2074445 'move' _iterator[2074439](2074442 '.v' _iterator[2003910] x0[1108751]))
                val _iterator[2074452]:_ic_chpl_bytes__ref_string[1108445] "temp"
                (2074458 'move' _iterator[2074452](2074455 '.v' _iterator[2003910] x1[1108753]))
                {
                  (2074467 call zip1[1096927] _iterator[2074439])
                }
                {
                  (2074502 call zip1[1108480] _iterator[2074452])
                }
                const-val isFinished[2074528]:bool[10] "temp"
                val hasMore[2074527]:bool[10] "temp"
                CForLoop[2074575]
                {
                  val _indexOfInterest[2074576]:(int(64),uint(8))[1111229] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                  {
                    (2074580 call zip2[1108489] _iterator[2074452])
                  }
                  {
                    const-val retTmp[2074583]:int(64)[13] "temp"
                    (2074585 'move' retTmp[2074583](2074588 call hasMore[1108516] _iterator[2074452]))
                    (2074590 'move' hasMore[2074527](2074592 'cast' bool[10] retTmp[2074583]))
                  }
                  (2074595 'move' isFinished[2074528](2074597 '!' hasMore[2074527]))
                  if isFinished[2074528]
                  {
                    (2074601 'chpl_error' c"zippered iterations have non-equal lengths")
                  }
                  {
                    (2074605 'move' _index[2074620](2074608 call getValue[1108525] _iterator[2074452]))
                  }
                  {
                    (2074612 call zip2[1096936] _iterator[2074439])
                  }
                  {
                    (2074615 'move' _index[2074626](2074618 call getValue[1096972] _iterator[2074439]))
                  }
                  val _index[2074620]:uint(8)[100] "temp"
                  (2074622 '.=' _indexOfInterest[2074576] x1[1111227] _index[2074620])
                  val _index[2074626]:int(64)[13] "temp"
                  (2074628 '.=' _indexOfInterest[2074576] x0[1111225] _index[2074626])
                  1
                  const-val i[2074633]:int(64)[13] "const" "index var" "insert auto destroy"
                  (2074635 'move' i[2074633](2074637 '.v' _indexOfInterest[2074576] x0[1111225]))
                  const-val c[2074640]:uint(8)[100] "const" "index var" "insert auto destroy"
                  (2074642 'move' c[2074640](2074644 '.v' _indexOfInterest[2074576] x1[1111227]))
                  const-val call_tmp[2074647]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2074649 'move' call_tmp[2074647] noSplits[2003843])
                  if noSplits[2003843]
                  {
                    (2074655 call =[435290] done[2003811] 1)
                    const-val call_tmp[2074658]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2074660 'move' call_tmp[2074658](2074663 call isSpace[36843] localx[2003806]))
                    const-val call_tmp[2074665]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2074667 'move' call_tmp[2074665](2074670 call ![7494] call_tmp[2074658]))
                    const-val call_tmp[2074672]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2074674 'move' call_tmp[2074672] call_tmp[2074665])
                    if call_tmp[2074665]
                    {
                      (2074680 call =[38272] chunk[2003821] localx[2003806])
                      (2074684 call =[435290] yieldChunk[2003816] 1)
                    }
                  }
                  {
                    const-val call_tmp[2074689]:bool[10] "dead at end of block" "maybe param" "temp"
                    (2074691 'move' call_tmp[2074689](2074694 call byte_isWhitespace[181655] c[2074640]))
                    const-val cSpace[2074696]:bool[10] "dead at end of block" "insert auto destroy"
                    (2074698 'move' cSpace[2074696] call_tmp[2074689])
                    const-val tmp[2074701]:bool[10] "dead after last mention" "maybe param" "temp"
                    (2074703 'move' tmp[2074701] inChunk[2003898])
                    val tmp[2074706]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                    const-val tmp[2074708]:bool[10] "dead after last mention" "maybe param" "temp"
                    const-val call_tmp[2074710]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2074712 'move' call_tmp[2074710] inChunk[2003898])
                    (2074715 'move' tmp[2074708] inChunk[2003898])
                    if inChunk[2003898]
                    {
                      (2074720 'move' tmp[2074706] 1)
                    }
                    {
                      const-val tmp[2074724]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                      (2074726 'move' tmp[2074724] cSpace[2074696])
                      (2074729 'move' tmp[2074706] cSpace[2074696])
                    }
                    const-val call_tmp[2074733]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2074735 'move' call_tmp[2074733](2074738 call ![7494] tmp[2074706]))
                    const-val call_tmp[2074740]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2074742 'move' call_tmp[2074740] call_tmp[2074733])
                    if call_tmp[2074733]
                    {
                      (2074748 call =[435443] chunkStart[2003903] i[2074633])
                      (2074752 call =[435290] inChunk[2003898] 1)
                      const-val call_tmp[2074755]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (2074757 'move' call_tmp[2074755](2074760 call >[437788] i[2074633] iEnd[2003893]))
                      const-val call_tmp[2074763]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (2074765 'move' call_tmp[2074763] call_tmp[2074755])
                      if call_tmp[2074755]
                      {
                        const-val call_tmp[2074770]:range(int(64),boundedLow,false)[1087754] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val ret_tmp[2074772]:range(int(64),boundedLow,false)[1087754] "temp"
                        (2074775 call chpl_build_low_bounded_range[1087147] chunkStart[2003903] ret_tmp[2074772])
                        (2074778 'move' call_tmp[2074770] ret_tmp[2074772])
                        const-val call_tmp[2074781]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val ret_tmp[2074783]:string[26] "temp"
                        (2074786 call this[1125751] localx[2003806] call_tmp[2074770] ret_tmp[2074783])
                        (2074790 'move' call_tmp[2074781] ret_tmp[2074783])
                        (2074794 call =[38272] chunk[2003821] call_tmp[2074781])
                        (2074798 call chpl__autoDestroy[1601673] call_tmp[2074781])
                        (2074801 call chpl__autoDestroy[1680875] call_tmp[2074770])
                        (2074804 call =[435290] yieldChunk[2003816] 1)
                        (2074808 call =[435290] done[2003811] 1)
                      }
                    }
                    {
                      const-val call_tmp[2074813]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (2074815 'move' call_tmp[2074813] inChunk[2003898])
                      if call_tmp[2074813]
                      {
                        const-val call_tmp[2074820]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (2074822 'move' call_tmp[2074820] cSpace[2074696])
                        if cSpace[2074696]
                        {
                          (2074828 call +=[451431] splitCount[2003868] 1)
                          const-val tmp[2074831]:bool[10] "dead after last mention" "maybe param" "temp"
                          (2074833 'move' tmp[2074831] limitSplits[2003863])
                          val tmp[2074836]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                          const-val tmp[2074838]:bool[10] "dead after last mention" "maybe param" "temp"
                          const-val call_tmp[2074840]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (2074842 'move' call_tmp[2074840] limitSplits[2003863])
                          (2074845 'move' tmp[2074838] limitSplits[2003863])
                          if limitSplits[2003863]
                          {
                            const-val tmp[2074850]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                            const-val call_tmp[2074852]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val maxsplit[2074854]:int(64)[13] "temp"
                            (2074856 'move' maxsplit[2074854](2074858 '.v' _iterator[2003734] F1_maxsplit[2115698]))
                            (2074861 'move' call_tmp[2074852](2074864 call >[437788] splitCount[2003868] maxsplit[2074854]))
                            (2074867 'move' tmp[2074850] call_tmp[2074852])
                            (2074870 'move' tmp[2074836] call_tmp[2074852])
                          }
                          {
                            (2074874 'move' tmp[2074836] 0)
                          }
                          const-val call_tmp[2074878]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (2074880 'move' call_tmp[2074878] tmp[2074836])
                          if tmp[2074836]
                          {
                            const-val call_tmp[2074885]:range(int(64),boundedLow,false)[1087754] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[2074887]:range(int(64),boundedLow,false)[1087754] "temp"
                            (2074890 call chpl_build_low_bounded_range[1087147] chunkStart[2003903] ret_tmp[2074887])
                            (2074893 'move' call_tmp[2074885] ret_tmp[2074887])
                            const-val call_tmp[2074896]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[2074898]:string[26] "temp"
                            (2074901 call this[1125751] localx[2003806] call_tmp[2074885] ret_tmp[2074898])
                            (2074905 'move' call_tmp[2074896] ret_tmp[2074898])
                            (2074909 call =[38272] chunk[2003821] call_tmp[2074896])
                            (2074913 call chpl__autoDestroy[1601673] call_tmp[2074896])
                            (2074916 call chpl__autoDestroy[1680875] call_tmp[2074885])
                            (2074919 call =[435290] yieldChunk[2003816] 1)
                            (2074923 call =[435290] done[2003811] 1)
                          }
                          {
                            const-val call_tmp[2074927]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                            (2074929 'move' call_tmp[2074927](2074932 call -[962415] i[2074633]))
                            const-val call_tmp[2074934]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[2074936]:range(int(64),bounded,false)[1027003] "temp"
                            (2074939 call chpl_build_bounded_range[455253] chunkStart[2003903] call_tmp[2074927] ret_tmp[2074936])
                            (2074943 'move' call_tmp[2074934] ret_tmp[2074936])
                            const-val call_tmp[2074946]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[2074948]:string[26] "temp"
                            (2074951 call this[1111555] localx[2003806] call_tmp[2074934] ret_tmp[2074948])
                            (2074955 'move' call_tmp[2074946] ret_tmp[2074948])
                            (2074959 call =[38272] chunk[2003821] call_tmp[2074946])
                            (2074963 call chpl__autoDestroy[1601673] call_tmp[2074946])
                            (2074966 call chpl__autoDestroy[1407763] call_tmp[2074934])
                            (2074969 call =[435290] yieldChunk[2003816] 1)
                            (2074973 call =[435290] inChunk[2003898] 0)
                          }
                        }
                        {
                          const-val call_tmp[2074978]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (2074980 'move' call_tmp[2074978](2074983 call >[437788] i[2074633] iEnd[2003893]))
                          const-val call_tmp[2074986]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (2074988 'move' call_tmp[2074986] call_tmp[2074978])
                          if call_tmp[2074978]
                          {
                            const-val call_tmp[2074993]:range(int(64),boundedLow,false)[1087754] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[2074995]:range(int(64),boundedLow,false)[1087754] "temp"
                            (2074998 call chpl_build_low_bounded_range[1087147] chunkStart[2003903] ret_tmp[2074995])
                            (2075001 'move' call_tmp[2074993] ret_tmp[2074995])
                            const-val call_tmp[2075004]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[2075006]:string[26] "temp"
                            (2075009 call this[1125751] localx[2003806] call_tmp[2074993] ret_tmp[2075006])
                            (2075013 'move' call_tmp[2075004] ret_tmp[2075006])
                            (2075017 call =[38272] chunk[2003821] call_tmp[2075004])
                            (2075021 call chpl__autoDestroy[1601673] call_tmp[2075004])
                            (2075024 call chpl__autoDestroy[1680875] call_tmp[2074993])
                            (2075027 call =[435290] yieldChunk[2003816] 1)
                            (2075031 call =[435290] done[2003811] 1)
                          }
                        }
                      }
                    }
                  }
                  const-val call_tmp[2075039]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2075041 'move' call_tmp[2075039] yieldChunk[2003816])
                  if call_tmp[2075039]
                  {
                    const-val yret[2075046]:string[26] "dead after last mention" "YVV" "temp"
                    val call_tmp[2075048]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    const-val _yield_expr_tmp_[2075050]:string[26] "temp"
                    (2075052 'move' _yield_expr_tmp_[2075050](2075055 call chpl__initCopy[981537] chunk[2003821]))
                    (2075057 'move' yret[2075046] _yield_expr_tmp_[2075050])
                    const-val _yieldedIndex[2075060]:string[26] "temp"
                    (2075062 'move' _yieldedIndex[2075060] _yield_expr_tmp_[2075050])
                    {
                      const-val s[2075066]:string[26] "const" "index var" "insert auto destroy"
                      (2075068 'move' s[2075066] _yieldedIndex[2075060])
                      const-val yret[2075071]:string[26] "dead after last mention" "YVV" "temp"
                      const-val _yield_expr_tmp_[2075073]:string[26] "temp"
                      (2075075 'move' _yield_expr_tmp_[2075073](2075078 call chpl__initCopy[981537] s[2075066]))
                      (2075080 'move' yret[2075071] _yield_expr_tmp_[2075073])
                      const-val _yieldedIndex[2075083]:string[26] "temp"
                      (2075085 'move' _yieldedIndex[2075083] _yield_expr_tmp_[2075073])
                      {
                        const-val chpl__elidedIdx[2075089]:string[26] "const" "index var" "insert auto destroy"
                        (2075091 'move' chpl__elidedIdx[2075089] _yieldedIndex[2075083])
                        {
                          (2075096 call +=[451431] numElements[1354712] 1)
                          const-val call_tmp[2075099]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (2075101 'move' call_tmp[2075099](2075104 call >[437788] numElements[1354712] 1))
                          const-val call_tmp[2075107]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (2075109 'move' call_tmp[2075107] call_tmp[2075099])
                          if call_tmp[2075107]
                          {
                            (2075115 call chpl__autoDestroy[1601673] chpl__elidedIdx[2075089])
                            ref moreRef1[2075222]:_ref(int(64))[936761] "temp"
                            (2075224 'move' moreRef1[2075222](2075226 '.' _iterator[2074439] more[1096895]))
                            const-val moreVal1[2075229]:int(64)[13] "const" "temp"
                            (2075231 '=' moreVal1[2075229] moreRef1[2075222])
                            const-val moreValNeg1[2075234]:int(64)[13] "const" "temp"
                            (2075236 'move' moreValNeg1[2075234](2075238 'u-' moreVal1[2075229]))
                            (2075240 '=' moreRef1[2075222] moreValNeg1[2075234])
                            (2075244 call advance[1096918] _iterator[2074439])
                            ref moreRef2[2075246]:_ref(int(64))[936761] "temp"
                            (2075248 'move' moreRef2[2075246](2075250 '.' _iterator[2074452] more[1108448]))
                            const-val moreVal2[2075253]:int(64)[13] "const" "temp"
                            (2075255 '=' moreVal2[2075253] moreRef2[2075246])
                            const-val moreValNeg2[2075258]:int(64)[13] "const" "temp"
                            (2075260 'move' moreValNeg2[2075258](2075262 'u-' moreVal2[2075253]))
                            (2075264 '=' moreRef2[2075246] moreValNeg2[2075258])
                            (2075268 call advance[1108471] _iterator[2074452])
                            (2075118 call _freeIterator[1108913] _iterator[2003910])
                            (2075121 call chpl__autoDestroy[1681548] _iterator[2003910])
                            (2075124 call chpl__autoDestroy[1407763] call_tmp[2003912])
                            (2075127 call chpl__autoDestroy[1601673] chunk[2003821])
                            (2075130 call chpl__autoDestroy[1601673] localx[2003806])
                            (2075133 call chpl__autoDestroy[1601673] s[2075066])
                            (2075136 call _freeIterator[1142764] _iterator[2003734])
                            break _breakLabel[1354788] _breakLabel[1354788]
                          }
                        }
                        label _continueLabel[2075141]
                        (2075144 call chpl__autoDestroy[1601673] chpl__elidedIdx[2075089])
                      }
                      (2075147 call chpl__autoDestroy[1601673] s[2075066])
                    }
                    (2075150 call =[435290] yieldChunk[2003816] 0)
                  }
                  const-val call_tmp[2075154]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2075156 'move' call_tmp[2075154] done[2003811])
                  if call_tmp[2075154]
                  {
                    ref moreRef1[2075271]:_ref(int(64))[936761] "temp"
                    (2075273 'move' moreRef1[2075271](2075275 '.' _iterator[2074439] more[1096895]))
                    const-val moreVal1[2075278]:int(64)[13] "const" "temp"
                    (2075280 '=' moreVal1[2075278] moreRef1[2075271])
                    const-val moreValNeg1[2075283]:int(64)[13] "const" "temp"
                    (2075285 'move' moreValNeg1[2075283](2075287 'u-' moreVal1[2075278]))
                    (2075289 '=' moreRef1[2075271] moreValNeg1[2075283])
                    (2075293 call advance[1096918] _iterator[2074439])
                    ref moreRef2[2075295]:_ref(int(64))[936761] "temp"
                    (2075297 'move' moreRef2[2075295](2075299 '.' _iterator[2074452] more[1108448]))
                    const-val moreVal2[2075302]:int(64)[13] "const" "temp"
                    (2075304 '=' moreVal2[2075302] moreRef2[2075295])
                    const-val moreValNeg2[2075307]:int(64)[13] "const" "temp"
                    (2075309 'move' moreValNeg2[2075307](2075311 'u-' moreVal2[2075302]))
                    (2075313 '=' moreRef2[2075295] moreValNeg2[2075307])
                    (2075317 call advance[1108471] _iterator[2074452])
                    break _breakLabel[2004465] _breakLabel[2004465]
                  }
                  {
                    (2075166 call zip3[1096945] _iterator[2074439])
                  }
                  {
                    (2075170 call zip3[1108498] _iterator[2074452])
                  }
                  {
                    {
                      (2074477 call init[1096981] _iterator[2074439])
                    }
                    {
                      (2074512 call init[1108534] _iterator[2074452])
                    }
                  }
                  {
                    (2074493 call hasMore[1096963] _iterator[2074439])
                  }
                  {
                    {
                      (2074481 call incr[1096990] _iterator[2074439])
                    }
                    {
                      (2074516 call incr[1108543] _iterator[2074452])
                    }
                  }
                }
                {
                  const-val retTmp[2074562]:int(64)[13] "temp"
                  (2074564 'move' retTmp[2074562](2074559 call hasMore[1108516] _iterator[2074452]))
                  (2074569 'move' hasMore[2074527](2074566 'cast' bool[10] retTmp[2074562]))
                }
                if hasMore[2074527]
                {
                  (2074554 'chpl_error' c"zippered iterations have non-equal lengths")
                }
                {
                  (2074524 call zip4[1108507] _iterator[2074452])
                }
                {
                  (2074489 call zip4[1096954] _iterator[2074439])
                }
                label _breakLabel[2004465]
                (2004468 call _freeIterator[1108913] _iterator[2003910])
                (2004471 call chpl__autoDestroy[1681548] _iterator[2003910])
                (2004474 call chpl__autoDestroy[1407763] call_tmp[2003912])
                (2004477 call chpl__autoDestroy[1601673] chunk[2003821])
                (2004480 call chpl__autoDestroy[1601673] localx[2003806])
              }
              label _enddoSplitWSNoEnc[2004483]
            }
            (2004486 call _freeIterator[1142764] _iterator[2003734])
          }
          {
            const-val call_tmp[2004489]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            ref this[2006924]:_ref(string)[938128] "temp"
            (2006929 'move' this[2006924](2006926 '.v' _iterator[1354721] F0_this[2098432]))
            (2004491 'move' call_tmp[2004489](2004494 call isEmpty[35064] this[2006924]))
            const-val call_tmp[2004496]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2004498 'move' call_tmp[2004496](2004501 call ![7494] call_tmp[2004489]))
            const-val call_tmp[2004503]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2004505 'move' call_tmp[2004503] call_tmp[2004496])
            if call_tmp[2004496]
            {
              const-val call_tmp[2004510]:string[26] "dead at end of block" "maybe param" "temp"
              const-val ret_tmp[2004512]:string[26] "temp"
              ref this[2006931]:_ref(string)[938128] "temp"
              (2006936 'move' this[2006931](2006933 '.v' _iterator[1354721] F0_this[2098432]))
              (2004515 call localize[32889] this[2006931] ret_tmp[2004512])
              (2004518 'move' call_tmp[2004510] ret_tmp[2004512])
              const localThis[2004521]:string[26] "dead at end of block" "const" "insert auto destroy"
              (2004523 'move' localThis[2004521] call_tmp[2004510])
              val done[2004526]:bool[10] "dead at end of block" "insert auto destroy"
              (2004528 'move' done[2004526] 0)
              val yieldChunk[2004531]:bool[10] "dead at end of block" "insert auto destroy"
              (2004533 'move' yieldChunk[2004531] 0)
              val chunk[2004536]:string[26] "dead at end of block" "insert auto destroy"
              (2004539 call init[30763] chunk[2004536])
              const-val call_tmp[2004541]:bool[10] "dead at end of block" "maybe param" "temp"
              const-val maxsplit[2006938]:int(64)[13] "temp"
              (2006943 'move' maxsplit[2006938](2006940 '.v' _iterator[1354721] F1_maxsplit[2098436]))
              (2004543 'move' call_tmp[2004541](2004546 call ==[435744] maxsplit[2006938] 0))
              const-val noSplits[2004549]:bool[10] "dead at end of block" "const" "insert auto destroy"
              (2004551 'move' noSplits[2004549] call_tmp[2004541])
              const-val call_tmp[2004554]:bool[10] "dead at end of block" "maybe param" "temp"
              const-val maxsplit[2006945]:int(64)[13] "temp"
              (2006950 'move' maxsplit[2006945](2006947 '.v' _iterator[1354721] F1_maxsplit[2098436]))
              (2004556 'move' call_tmp[2004554](2004559 call >[437788] maxsplit[2006945] 0))
              const-val limitSplits[2004562]:bool[10] "dead at end of block" "const" "insert auto destroy"
              (2004564 'move' limitSplits[2004562] call_tmp[2004554])
              val splitCount[2004567]:int(64)[13] "dead at end of block" "insert auto destroy"
              (2004569 'move' splitCount[2004567] 0)
              ref call_tmp[2004572]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
              (2004574 'move' call_tmp[2004572](2004577 call buffLen[758075] localThis[2004521]))
              const-val call_tmp[2004579]:int(64)[13] "dead at end of block" "insert auto destroy" "maybe param" "temp"
              const-val coerce_tmp[2004581]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2004583 'move' coerce_tmp[2004581](2004585 'deref' call_tmp[2004572]))
              (2004587 'move' call_tmp[2004579](2004590 call -[1125627] coerce_tmp[2004581]))
              const-val iEnd[2004592]:byteIndex[28173] "dead at end of block" "const" "insert auto destroy"
              (2004595 call init=[28148] iEnd[2004592] call_tmp[2004579])
              val inChunk[2004598]:bool[10] "dead at end of block" "insert auto destroy"
              (2004600 'move' inChunk[2004598] 0)
              val chunkStart[2004603]:byteIndex[28173] "dead at end of block" "insert auto destroy"
              (2004606 call init[28100] chunkStart[2004603])
              val _indexOfInterest[2004608]:(int(32),byteIndex,int(64))[1122331] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[2004610]:_ic__cpIndexLen__ref_string[1122574] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[2004612]:_ir__cpIndexLen__ref_string[1122580] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val default_arg_start[2004614]:byteIndex[28173] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
              const-val ret_tmp[2004616]:byteIndex[28173] "temp"
              (2004619 call _cpIndexLen_default_start[1122220] localThis[2004521] ret_tmp[2004616])
              (2004622 'move' default_arg_start[2004614] ret_tmp[2004616])
              const-val ret_tmp[2004625]:_ir__cpIndexLen__ref_string[1122580] "temp"
              (2004628 call _cpIndexLen[31109] localThis[2004521] default_arg_start[2004614] ret_tmp[2004625])
              (2004632 'move' call_tmp[2004612] ret_tmp[2004625])
              (2004635 'move' _iterator[2004610](2004638 call _getIterator[1122589] call_tmp[2004612]))
              {
                val ret[2004641]:_ir__cpIndexLen__ref_string[1122580] "dead after last mention" "RVV" "temp"
                const-val call_tmp[2004643]:string[26] "dead at end of block" "maybe param" "temp"
                const-val ret_tmp[2004645]:string[26] "temp"
                ref this[2004647]:_ref(string)[938128] "temp"
                (2004649 'move' this[2004647](2004651 '.v' _iterator[2004610] F0_this[2094206]))
                (2004655 call localize[32889] this[2004647] ret_tmp[2004645])
                (2004658 'move' call_tmp[2004643] ret_tmp[2004645])
                val localThis[2004661]:string[26] "dead at end of block" "insert auto destroy"
                (2004663 'move' localThis[2004661] call_tmp[2004643])
                const-val call_tmp[2004666]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2004668 'move' call_tmp[2004666](2004671 call isASCII[31049] localThis[2004661]))
                const-val call_tmp[2004673]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2004675 'move' call_tmp[2004673] call_tmp[2004666])
                if call_tmp[2004666]
                {
                  const-val _iterator[2004680]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108755] "dead at end of block" "expr temp" "insert auto destroy" "temp"
                  const-val call_tmp[2004682]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
                  const-val ret_tmp[2004684]:range(int(64),bounded,false)[1027003] "temp"
                  ref this[2004686]:_ref(string)[938128] "temp"
                  (2004688 'move' this[2004686](2004690 '.v' _iterator[2004610] F0_this[2094206]))
                  (2004694 call byteIndices[31068] this[2004686] ret_tmp[2004684])
                  (2004697 'move' call_tmp[2004682] ret_tmp[2004684])
                  val call_tmp[2004700]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "maybe param" "temp"
                  (2004702 'move' call_tmp[2004700](2004705 call _getIterator[1095509] call_tmp[2004682]))
                  const-val call_tmp[2004707]:_ir_chpl_bytes__ref_string[1108451] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val ret_tmp[2004709]:_ir_chpl_bytes__ref_string[1108451] "temp"
                  ref this[2004711]:_ref(string)[938128] "temp"
                  (2004713 'move' this[2004711](2004715 '.v' _iterator[2004610] F0_this[2094206]))
                  (2004719 call chpl_bytes[33577] this[2004711] ret_tmp[2004709])
                  (2004722 'move' call_tmp[2004707] ret_tmp[2004709])
                  val call_tmp[2004725]:_ic_chpl_bytes__ref_string[1108445] "dead at end of block" "expr temp" "maybe param" "temp"
                  (2004727 'move' call_tmp[2004725](2004730 call _getIterator[1108460] call_tmp[2004707]))
                  const-val ret_tmp[2004732]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108755] "temp"
                  (2004735 call _build_tuple[1108713] call_tmp[2004700] call_tmp[2004725] ret_tmp[2004732])
                  (2004739 'move' _iterator[2004680] ret_tmp[2004732])
                  val _iterator[2004742]:_ic_these_range_int64_t_bounded_F[1096892] "temp"
                  (2004744 'move' _iterator[2004742](2004746 '.v' _iterator[2004680] x0[1108751]))
                  val _iterator[2004749]:_ic_chpl_bytes__ref_string[1108445] "temp"
                  (2004751 'move' _iterator[2004749](2004753 '.v' _iterator[2004680] x1[1108753]))
                  {
                    (2004758 call zip1[1096927] _iterator[2004742])
                  }
                  {
                    (2004762 call zip1[1108480] _iterator[2004749])
                  }
                  const-val isFinished[2004764]:bool[10] "temp"
                  val hasMore[2004766]:bool[10] "temp"
                  CForLoop[2004768]
                  {
                    val _indexOfInterest[2004791]:(int(64),uint(8))[1111229] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    {
                      (2004795 call zip2[1108489] _iterator[2004749])
                    }
                    {
                      const-val retTmp[2004798]:int(64)[13] "temp"
                      (2004800 'move' retTmp[2004798](2004803 call hasMore[1108516] _iterator[2004749]))
                      (2004805 'move' hasMore[2004766](2004807 'cast' bool[10] retTmp[2004798]))
                    }
                    (2004810 'move' isFinished[2004764](2004812 '!' hasMore[2004766]))
                    if isFinished[2004764]
                    {
                      (2004816 'chpl_error' c"zippered iterations have non-equal lengths")
                    }
                    {
                      (2004820 'move' _index[2004835](2004823 call getValue[1108525] _iterator[2004749]))
                    }
                    {
                      (2004827 call zip2[1096936] _iterator[2004742])
                    }
                    {
                      (2004830 'move' _index[2004841](2004833 call getValue[1096972] _iterator[2004742]))
                    }
                    val _index[2004835]:uint(8)[100] "temp"
                    (2004837 '.=' _indexOfInterest[2004791] x1[1111227] _index[2004835])
                    val _index[2004841]:int(64)[13] "temp"
                    (2004843 '.=' _indexOfInterest[2004791] x0[1111225] _index[2004841])
                    1
                    const-val i[2004848]:int(64)[13] "const" "index var" "insert auto destroy"
                    (2004850 'move' i[2004848](2004852 '.v' _indexOfInterest[2004791] x0[1111225]))
                    const-val b[2004855]:uint(8)[100] "const" "index var" "insert auto destroy"
                    (2004857 'move' b[2004855](2004859 '.v' _indexOfInterest[2004791] x1[1111227]))
                    const-val yret[2004862]:(int(32),byteIndex,int(64))[1122331] "dead after last mention" "YVV" "temp"
                    val call_tmp[2004864]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    const-val call_tmp[2004866]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2004868 'move' call_tmp[2004866](2004870 'cast' int(32)[95] b[2004855]))
                    const-val call_tmp[2004873]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[2004875]:byteIndex[28173] "temp"
                    (2004878 call _cast[39486] i[2004848] ret_tmp[2004875])
                    (2004881 'move' call_tmp[2004873] ret_tmp[2004875])
                    const-val call_tmp[2004884]:(int(32),byteIndex,int(64))[1122331] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[2004886]:(int(32),byteIndex,int(64))[1122331] "temp"
                    (2004889 call _build_tuple[1122281] call_tmp[2004866] call_tmp[2004873] 1 ret_tmp[2004886])
                    (2004894 'move' call_tmp[2004884] ret_tmp[2004886])
                    (2004897 'move' yret[2004862] call_tmp[2004884])
                    const-val _yieldedIndex[2004900]:(int(32),byteIndex,int(64))[1122331] "temp"
                    (2004902 'move' _yieldedIndex[2004900] call_tmp[2004884])
                    {
                      1
                      const-val c[2004907]:int(32)[95] "const" "index var" "insert auto destroy"
                      (2004909 'move' c[2004907](2004911 '.v' _yieldedIndex[2004900] x0[1122325]))
                      ref i[2004914]:_ref(byteIndex)[948948] "index var" "insert auto destroy"
                      (2004916 'move' i[2004914](2004918 '.v' _yieldedIndex[2004900] x1[1122327]))
                      const-val nBytes[2004921]:int(64)[13] "const" "index var" "insert auto destroy"
                      (2004923 'move' nBytes[2004921](2004925 '.v' _yieldedIndex[2004900] x2[1122329]))
                      const-val call_tmp[2004928]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (2004930 'move' call_tmp[2004928] noSplits[2004549])
                      if noSplits[2004549]
                      {
                        (2004936 call =[435290] done[2004526] 1)
                        const-val call_tmp[2004939]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (2004941 'move' call_tmp[2004939](2004944 call isSpace[36843] localThis[2004521]))
                        const-val call_tmp[2004946]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (2004948 'move' call_tmp[2004946](2004951 call ![7494] call_tmp[2004939]))
                        const-val call_tmp[2004953]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (2004955 'move' call_tmp[2004953] call_tmp[2004946])
                        if call_tmp[2004946]
                        {
                          (2004961 call =[38272] chunk[2004536] localThis[2004521])
                          (2004965 call =[435290] yieldChunk[2004531] 1)
                        }
                      }
                      {
                        const-val call_tmp[2004970]:bool[10] "dead at end of block" "maybe param" "temp"
                        (2004972 'move' call_tmp[2004970](2004975 call codepoint_isWhitespace[39156] c[2004907]))
                        const-val cSpace[2004977]:bool[10] "dead at end of block" "insert auto destroy"
                        (2004979 'move' cSpace[2004977] call_tmp[2004970])
                        const-val tmp[2004982]:bool[10] "dead after last mention" "maybe param" "temp"
                        (2004984 'move' tmp[2004982] inChunk[2004598])
                        val tmp[2004987]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                        const-val tmp[2004989]:bool[10] "dead after last mention" "maybe param" "temp"
                        const-val call_tmp[2004991]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (2004993 'move' call_tmp[2004991] inChunk[2004598])
                        (2004996 'move' tmp[2004989] inChunk[2004598])
                        if inChunk[2004598]
                        {
                          (2005001 'move' tmp[2004987] 1)
                        }
                        {
                          const-val tmp[2005005]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                          (2005007 'move' tmp[2005005] cSpace[2004977])
                          (2005010 'move' tmp[2004987] cSpace[2004977])
                        }
                        const-val call_tmp[2005014]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (2005016 'move' call_tmp[2005014](2005019 call ![7494] tmp[2004987]))
                        const-val call_tmp[2005021]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (2005023 'move' call_tmp[2005021] call_tmp[2005014])
                        if call_tmp[2005014]
                        {
                          (2005029 call =[38194] chunkStart[2004603] i[2004914])
                          (2005033 call =[435290] inChunk[2004598] 1)
                          const-val call_tmp[2005036]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                          const-val ret_tmp[2005038]:byteIndex[28173] "temp"
                          (2005041 call -[28857] i[2004914] 1 ret_tmp[2005038])
                          (2005045 'move' call_tmp[2005036] ret_tmp[2005038])
                          const-val call_tmp[2005048]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                          const-val ret_tmp[2005050]:byteIndex[28173] "temp"
                          (2005053 call +[28725] call_tmp[2005036] nBytes[2004921] ret_tmp[2005050])
                          (2005057 'move' call_tmp[2005048] ret_tmp[2005050])
                          const-val call_tmp[2005060]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (2005062 'move' call_tmp[2005060](2005065 call >[28575] call_tmp[2005048] iEnd[2004592]))
                          const-val call_tmp[2005068]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (2005070 'move' call_tmp[2005068] call_tmp[2005060])
                          if call_tmp[2005060]
                          {
                            const-val call_tmp[2005075]:range(byteIndex,boundedLow,false)[1143592] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[2005077]:range(byteIndex,boundedLow,false)[1143592] "temp"
                            (2005080 call chpl_build_low_bounded_range[1142899] chunkStart[2004603] ret_tmp[2005077])
                            (2005083 'move' call_tmp[2005075] ret_tmp[2005077])
                            const-val call_tmp[2005086]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[2005088]:string[26] "temp"
                            (2005091 call this[1143912] localThis[2004521] call_tmp[2005075] ret_tmp[2005088])
                            (2005095 'move' call_tmp[2005086] ret_tmp[2005088])
                            (2005099 call =[38272] chunk[2004536] call_tmp[2005086])
                            (2005103 call chpl__autoDestroy[1601673] call_tmp[2005086])
                            (2005106 call chpl__autoDestroy[1682957] call_tmp[2005075])
                            (2005109 call =[435290] yieldChunk[2004531] 1)
                            (2005113 call =[435290] done[2004526] 1)
                          }
                          (2005118 call chpl__autoDestroy[1601936] call_tmp[2005048])
                          (2005121 call chpl__autoDestroy[1601936] call_tmp[2005036])
                        }
                        {
                          const-val call_tmp[2005124]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (2005126 'move' call_tmp[2005124] inChunk[2004598])
                          if call_tmp[2005124]
                          {
                            const-val call_tmp[2005131]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (2005133 'move' call_tmp[2005131] cSpace[2004977])
                            if cSpace[2004977]
                            {
                              (2005139 call +=[451431] splitCount[2004567] 1)
                              const-val tmp[2005142]:bool[10] "dead after last mention" "maybe param" "temp"
                              (2005144 'move' tmp[2005142] limitSplits[2004562])
                              val tmp[2005147]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                              const-val tmp[2005149]:bool[10] "dead after last mention" "maybe param" "temp"
                              const-val call_tmp[2005151]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (2005153 'move' call_tmp[2005151] limitSplits[2004562])
                              (2005156 'move' tmp[2005149] limitSplits[2004562])
                              if limitSplits[2004562]
                              {
                                const-val tmp[2005161]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                                const-val call_tmp[2005163]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val maxsplit[2006952]:int(64)[13] "temp"
                                (2006957 'move' maxsplit[2006952](2006954 '.v' _iterator[1354721] F1_maxsplit[2098436]))
                                (2005165 'move' call_tmp[2005163](2005168 call >[437788] splitCount[2004567] maxsplit[2006952]))
                                (2005171 'move' tmp[2005161] call_tmp[2005163])
                                (2005174 'move' tmp[2005147] call_tmp[2005163])
                              }
                              {
                                (2005178 'move' tmp[2005147] 0)
                              }
                              const-val call_tmp[2005182]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (2005184 'move' call_tmp[2005182] tmp[2005147])
                              if tmp[2005147]
                              {
                                const-val call_tmp[2005189]:range(byteIndex,boundedLow,false)[1143592] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[2005191]:range(byteIndex,boundedLow,false)[1143592] "temp"
                                (2005194 call chpl_build_low_bounded_range[1142899] chunkStart[2004603] ret_tmp[2005191])
                                (2005197 'move' call_tmp[2005189] ret_tmp[2005191])
                                const-val call_tmp[2005200]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[2005202]:string[26] "temp"
                                (2005205 call this[1143912] localThis[2004521] call_tmp[2005189] ret_tmp[2005202])
                                (2005209 'move' call_tmp[2005200] ret_tmp[2005202])
                                (2005213 call =[38272] chunk[2004536] call_tmp[2005200])
                                (2005217 call chpl__autoDestroy[1601673] call_tmp[2005200])
                                (2005220 call chpl__autoDestroy[1682957] call_tmp[2005189])
                                (2005223 call =[435290] yieldChunk[2004531] 1)
                                (2005227 call =[435290] done[2004526] 1)
                              }
                              {
                                const-val call_tmp[2005231]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[2005233]:byteIndex[28173] "temp"
                                (2005236 call -[28857] i[2004914] 1 ret_tmp[2005233])
                                (2005240 'move' call_tmp[2005231] ret_tmp[2005233])
                                const-val call_tmp[2005243]:range(byteIndex,bounded,false)[1025981] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[2005245]:range(byteIndex,bounded,false)[1025981] "temp"
                                (2005248 call chpl_build_bounded_range[1123443] chunkStart[2004603] call_tmp[2005231] ret_tmp[2005245])
                                (2005252 'move' call_tmp[2005243] ret_tmp[2005245])
                                const-val call_tmp[2005255]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[2005257]:string[26] "temp"
                                (2005260 call this[1123689] localThis[2004521] call_tmp[2005243] ret_tmp[2005257])
                                (2005264 'move' call_tmp[2005255] ret_tmp[2005257])
                                (2005268 call =[38272] chunk[2004536] call_tmp[2005255])
                                (2005272 call chpl__autoDestroy[1601673] call_tmp[2005255])
                                (2005275 call chpl__autoDestroy[1674473] call_tmp[2005243])
                                (2005278 call chpl__autoDestroy[1601936] call_tmp[2005231])
                                (2005281 call =[435290] yieldChunk[2004531] 1)
                                (2005285 call =[435290] inChunk[2004598] 0)
                              }
                            }
                            {
                              const-val call_tmp[2005290]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              const-val ret_tmp[2005292]:byteIndex[28173] "temp"
                              (2005295 call -[28857] i[2004914] 1 ret_tmp[2005292])
                              (2005299 'move' call_tmp[2005290] ret_tmp[2005292])
                              const-val call_tmp[2005302]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              const-val ret_tmp[2005304]:byteIndex[28173] "temp"
                              (2005307 call +[28725] call_tmp[2005290] nBytes[2004921] ret_tmp[2005304])
                              (2005311 'move' call_tmp[2005302] ret_tmp[2005304])
                              const-val call_tmp[2005314]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (2005316 'move' call_tmp[2005314](2005319 call >[28575] call_tmp[2005302] iEnd[2004592]))
                              const-val call_tmp[2005322]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (2005324 'move' call_tmp[2005322] call_tmp[2005314])
                              if call_tmp[2005314]
                              {
                                const-val call_tmp[2005329]:range(byteIndex,boundedLow,false)[1143592] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[2005331]:range(byteIndex,boundedLow,false)[1143592] "temp"
                                (2005334 call chpl_build_low_bounded_range[1142899] chunkStart[2004603] ret_tmp[2005331])
                                (2005337 'move' call_tmp[2005329] ret_tmp[2005331])
                                const-val call_tmp[2005340]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[2005342]:string[26] "temp"
                                (2005345 call this[1143912] localThis[2004521] call_tmp[2005329] ret_tmp[2005342])
                                (2005349 'move' call_tmp[2005340] ret_tmp[2005342])
                                (2005353 call =[38272] chunk[2004536] call_tmp[2005340])
                                (2005357 call chpl__autoDestroy[1601673] call_tmp[2005340])
                                (2005360 call chpl__autoDestroy[1682957] call_tmp[2005329])
                                (2005363 call =[435290] yieldChunk[2004531] 1)
                                (2005367 call =[435290] done[2004526] 1)
                              }
                              (2005372 call chpl__autoDestroy[1601936] call_tmp[2005302])
                              (2005375 call chpl__autoDestroy[1601936] call_tmp[2005290])
                            }
                          }
                        }
                      }
                      const-val call_tmp[2005381]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (2005383 'move' call_tmp[2005381] yieldChunk[2004531])
                      if call_tmp[2005381]
                      {
                        const-val yret[2005388]:string[26] "dead after last mention" "YVV" "temp"
                        const-val _yield_expr_tmp_[2005390]:string[26] "temp"
                        (2005392 'move' _yield_expr_tmp_[2005390](2005395 call chpl__initCopy[981537] chunk[2004536]))
                        (2005397 'move' yret[2005388] _yield_expr_tmp_[2005390])
                        const-val _yieldedIndex[2006711]:string[26] "temp"
                        (2006832 'move' _yieldedIndex[2006711] _yield_expr_tmp_[2005390])
                        {
                          const-val chpl__elidedIdx[2006713]:string[26] "const" "index var" "insert auto destroy"
                          (2006715 'move' chpl__elidedIdx[2006713] _yieldedIndex[2006711])
                          {
                            (2006720 call +=[451431] numElements[1354712] 1)
                            const-val call_tmp[2006723]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (2006725 'move' call_tmp[2006723](2006728 call >[437788] numElements[1354712] 1))
                            const-val call_tmp[2006731]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (2006733 'move' call_tmp[2006731] call_tmp[2006723])
                            if call_tmp[2006731]
                            {
                              (2006739 call chpl__autoDestroy[1601673] chpl__elidedIdx[2006713])
                              ref moreRef1[2006750]:_ref(int(64))[936761] "temp"
                              (2006752 'move' moreRef1[2006750](2006754 '.' _iterator[2004742] more[1096895]))
                              const-val moreVal1[2006757]:int(64)[13] "const" "temp"
                              (2006759 '=' moreVal1[2006757] moreRef1[2006750])
                              const-val moreValNeg1[2006762]:int(64)[13] "const" "temp"
                              (2006764 'move' moreValNeg1[2006762](2006766 'u-' moreVal1[2006757]))
                              (2006768 '=' moreRef1[2006750] moreValNeg1[2006762])
                              (2006772 call advance[1096918] _iterator[2004742])
                              ref moreRef2[2006774]:_ref(int(64))[936761] "temp"
                              (2006776 'move' moreRef2[2006774](2006778 '.' _iterator[2004749] more[1108448]))
                              const-val moreVal2[2006781]:int(64)[13] "const" "temp"
                              (2006783 '=' moreVal2[2006781] moreRef2[2006774])
                              const-val moreValNeg2[2006786]:int(64)[13] "const" "temp"
                              (2006788 'move' moreValNeg2[2006786](2006790 'u-' moreVal2[2006781]))
                              (2006792 '=' moreRef2[2006774] moreValNeg2[2006786])
                              (2006796 call advance[1108471] _iterator[2004749])
                              (2006799 call chpl__autoDestroy[1601936] call_tmp[2004873])
                              (2006802 call _freeIterator[1108913] _iterator[2004680])
                              (2006805 call chpl__autoDestroy[1681548] _iterator[2004680])
                              (2006808 call chpl__autoDestroy[1407763] call_tmp[2004682])
                              (2006811 call chpl__autoDestroy[1601673] localThis[2004661])
                              (2006814 call _freeIterator[1122762] _iterator[2004610])
                              (2006817 call chpl__autoDestroy[1601936] default_arg_start[2004614])
                              (2006820 call chpl__autoDestroy[1601936] chunkStart[2004603])
                              (2006823 call chpl__autoDestroy[1601936] iEnd[2004592])
                              (2006826 call chpl__autoDestroy[1601673] chunk[2004536])
                              (2006829 call chpl__autoDestroy[1601673] localThis[2004521])
                              break _breakLabel[1354788] _breakLabel[1354788]
                            }
                          }
                          label _continueLabel[2006744]
                          (2006747 call chpl__autoDestroy[1601673] chpl__elidedIdx[2006713])
                        }
                        (2005489 call =[435290] yieldChunk[2004531] 0)
                      }
                      const-val call_tmp[2005493]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (2005495 'move' call_tmp[2005493] done[2004526])
                      if call_tmp[2005493]
                      {
                        ref moreRef1[2005500]:_ref(int(64))[936761] "temp"
                        (2005502 'move' moreRef1[2005500](2005504 '.' _iterator[2004742] more[1096895]))
                        const-val moreVal1[2005507]:int(64)[13] "const" "temp"
                        (2005509 '=' moreVal1[2005507] moreRef1[2005500])
                        const-val moreValNeg1[2005512]:int(64)[13] "const" "temp"
                        (2005514 'move' moreValNeg1[2005512](2005516 'u-' moreVal1[2005507]))
                        (2005518 '=' moreRef1[2005500] moreValNeg1[2005512])
                        (2005522 call advance[1096918] _iterator[2004742])
                        ref moreRef2[2005524]:_ref(int(64))[936761] "temp"
                        (2005526 'move' moreRef2[2005524](2005528 '.' _iterator[2004749] more[1108448]))
                        const-val moreVal2[2005531]:int(64)[13] "const" "temp"
                        (2005533 '=' moreVal2[2005531] moreRef2[2005524])
                        const-val moreValNeg2[2005536]:int(64)[13] "const" "temp"
                        (2005538 'move' moreValNeg2[2005536](2005540 'u-' moreVal2[2005531]))
                        (2005542 '=' moreRef2[2005524] moreValNeg2[2005536])
                        (2005546 call advance[1108471] _iterator[2004749])
                        (2005549 call chpl__autoDestroy[1601936] call_tmp[2004873])
                        (2005552 call _freeIterator[1108913] _iterator[2004680])
                        (2005555 call chpl__autoDestroy[1681548] _iterator[2004680])
                        (2005558 call chpl__autoDestroy[1407763] call_tmp[2004682])
                        (2005561 call chpl__autoDestroy[1601673] localThis[2004661])
                        break _breakLabel[2006622] _breakLabel[2006622]
                      }
                    }
                    (2005567 call chpl__autoDestroy[1601936] call_tmp[2004873])
                    {
                      (2005571 call zip3[1096945] _iterator[2004742])
                    }
                    {
                      (2005575 call zip3[1108498] _iterator[2004749])
                    }
                    {
                      {
                        (2004772 call init[1096981] _iterator[2004742])
                      }
                      {
                        (2004776 call init[1108534] _iterator[2004749])
                      }
                    }
                    {
                      (2004780 call hasMore[1096963] _iterator[2004742])
                    }
                    {
                      {
                        (2004785 call incr[1096990] _iterator[2004742])
                      }
                      {
                        (2004789 call incr[1108543] _iterator[2004749])
                      }
                    }
                  }
                  {
                    const-val retTmp[2005578]:int(64)[13] "temp"
                    (2005580 'move' retTmp[2005578](2005583 call hasMore[1108516] _iterator[2004749]))
                    (2005585 'move' hasMore[2004766](2005587 'cast' bool[10] retTmp[2005578]))
                  }
                  if hasMore[2004766]
                  {
                    (2005592 'chpl_error' c"zippered iterations have non-equal lengths")
                  }
                  {
                    (2005597 call zip4[1108507] _iterator[2004749])
                  }
                  {
                    (2005601 call zip4[1096954] _iterator[2004742])
                  }
                  (2005604 call _freeIterator[1108913] _iterator[2004680])
                  (2005607 call chpl__autoDestroy[1681548] _iterator[2004680])
                  (2005610 call chpl__autoDestroy[1407763] call_tmp[2004682])
                }
                {
                  const-val call_tmp[2005613]:int(64)[13] "dead at end of block" "maybe param" "temp"
                  ref start[2005615]:_ref(byteIndex)[948948] "temp"
                  (2005617 'move' start[2005615](2005619 '.v' _iterator[2004610] F1_start[2094210]))
                  (2005622 'move' call_tmp[2005613](2005625 call _cast[39465] start[2005615]))
                  val i[2005627]:int(64)[13] "dead at end of block" "insert auto destroy"
                  (2005629 'move' i[2005627] call_tmp[2005613])
                  const-val call_tmp[2005632]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2005634 'move' call_tmp[2005632](2005637 call >[437788] call_tmp[2005613] 0))
                  const-val call_tmp[2005640]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2005642 'move' call_tmp[2005640] call_tmp[2005632])
                  if call_tmp[2005632]
                  {
                    val tmp[2005647]:bool[10] "dead after last mention" "temp"
                    const-val tmp[2005649]:bool[10] "dead after last mention" "maybe param" "temp"
                    ref call_tmp[2005651]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                    (2005653 'move' call_tmp[2005651](2005656 call buffLen[758075] localThis[2004661]))
                    const-val coerce_tmp[2005658]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (2005660 'move' coerce_tmp[2005658](2005662 'deref' call_tmp[2005651]))
                    (2005664 'move' tmp[2005649](2005667 call <[437568] i[2005627] coerce_tmp[2005658]))
                    val tmp[2005670]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                    const-val tmp[2005672]:bool[10] "dead after last mention" "maybe param" "temp"
                    const-val call_tmp[2005674]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2005676 'move' call_tmp[2005674] tmp[2005649])
                    (2005679 'move' tmp[2005672] tmp[2005649])
                    if tmp[2005649]
                    {
                      const-val tmp[2005684]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                      ref call_tmp[2005686]:_ref(uint(8))[937097] "dead after last mention" "maybe param" "temp"
                      ref _this_tmp_[2005688]:_ref(c_ptr(uint(8)))[937621] "dead after last mention" "temp"
                      (2005690 'move' _this_tmp_[2005688](2005693 call buff[758153] localThis[2004661]))
                      val coerce_tmp[2005695]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (2005697 'move' coerce_tmp[2005695](2005699 'deref' _this_tmp_[2005688]))
                      (2005701 'move' call_tmp[2005686](2005704 call this[954280] coerce_tmp[2005695] i[2005627]))
                      const-val call_tmp[2005707]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val coerce_tmp[2005709]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (2005711 'move' coerce_tmp[2005709](2005713 'deref' call_tmp[2005686]))
                      (2005715 'move' call_tmp[2005707](2005718 call isInitialByte[181574] coerce_tmp[2005709]))
                      const-val call_tmp[2005720]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (2005722 'move' call_tmp[2005720](2005725 call ![7494] call_tmp[2005707]))
                      (2005727 'move' tmp[2005684] call_tmp[2005720])
                      (2005730 'move' tmp[2005670] call_tmp[2005720])
                    }
                    {
                      (2005734 'move' tmp[2005670] 0)
                    }
                    (2005738 'move' tmp[2005647] tmp[2005670])
                    WhileDo[2005741]
                    {
                      (2005744 call +=[451431] i[2005627] 1)
                      const-val tmp[2005747]:bool[10] "dead after last mention" "maybe param" "temp"
                      ref call_tmp[2005749]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                      (2005751 'move' call_tmp[2005749](2005754 call buffLen[758075] localThis[2004661]))
                      const-val coerce_tmp[2005756]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (2005758 'move' coerce_tmp[2005756](2005760 'deref' call_tmp[2005749]))
                      (2005762 'move' tmp[2005747](2005765 call <[437568] i[2005627] coerce_tmp[2005756]))
                      val tmp[2005768]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                      const-val tmp[2005770]:bool[10] "dead after last mention" "maybe param" "temp"
                      const-val call_tmp[2005772]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (2005774 'move' call_tmp[2005772] tmp[2005747])
                      (2005777 'move' tmp[2005770] tmp[2005747])
                      if tmp[2005747]
                      {
                        const-val tmp[2005782]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                        ref call_tmp[2005784]:_ref(uint(8))[937097] "dead after last mention" "maybe param" "temp"
                        ref _this_tmp_[2005786]:_ref(c_ptr(uint(8)))[937621] "dead after last mention" "temp"
                        (2005788 'move' _this_tmp_[2005786](2005791 call buff[758153] localThis[2004661]))
                        val coerce_tmp[2005793]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (2005795 'move' coerce_tmp[2005793](2005797 'deref' _this_tmp_[2005786]))
                        (2005799 'move' call_tmp[2005784](2005802 call this[954280] coerce_tmp[2005793] i[2005627]))
                        const-val call_tmp[2005805]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val coerce_tmp[2005807]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (2005809 'move' coerce_tmp[2005807](2005811 'deref' call_tmp[2005784]))
                        (2005813 'move' call_tmp[2005805](2005816 call isInitialByte[181574] coerce_tmp[2005807]))
                        const-val call_tmp[2005818]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (2005820 'move' call_tmp[2005818](2005823 call ![7494] call_tmp[2005805]))
                        (2005825 'move' tmp[2005782] call_tmp[2005818])
                        (2005828 'move' tmp[2005768] call_tmp[2005818])
                      }
                      {
                        (2005832 'move' tmp[2005768] 0)
                      }
                      (2005836 'move' tmp[2005647] tmp[2005768])
                      tmp[2005647]
                    }
                  }
                  val tmp[2005840]:bool[10] "dead after last mention" "temp"
                  ref call_tmp[2005842]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                  (2005844 'move' call_tmp[2005842](2005847 call buffLen[758075] localThis[2004661]))
                  const-val call_tmp[2005849]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[2005851]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (2005853 'move' coerce_tmp[2005851](2005855 'deref' call_tmp[2005842]))
                  (2005857 'move' call_tmp[2005849](2005860 call <[437568] i[2005627] coerce_tmp[2005851]))
                  (2005863 'move' tmp[2005840] call_tmp[2005849])
                  WhileDo[2005866]
                  {
                    ref call_tmp[2005868]:_ref(c_ptr(uint(8)))[937621] "dead at end of block" "maybe param" "temp"
                    (2005870 'move' call_tmp[2005868](2005873 call buff[758153] localThis[2004661]))
                    ref call_tmp[2005875]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
                    (2005877 'move' call_tmp[2005875](2005880 call buffLen[758075] localThis[2004661]))
                    const-val call_tmp[2005882]:(syserr,int(32),int(32))[964809] "dead at end of block" "maybe param" "temp"
                    val coerce_tmp[2005884]:c_ptr(uint(8))[937612] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (2005886 'move' coerce_tmp[2005884](2005888 'deref' call_tmp[2005868]))
                    const-val coerce_tmp[2005890]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (2005892 'move' coerce_tmp[2005890](2005894 'deref' call_tmp[2005875]))
                    const-val ret_tmp[2005896]:(syserr,int(32),int(32))[964809] "temp"
                    (2005899 call decodeHelp[174452] coerce_tmp[2005884] coerce_tmp[2005890] i[2005627] 1 ret_tmp[2005896])
                    (2005905 'move' call_tmp[2005882] ret_tmp[2005896])
                    const-val tmp[2005908]:(syserr,int(32),int(32))[964809] "dead at end of block" "const" "insert auto destroy" "temp"
                    (2005910 'move' tmp[2005908] call_tmp[2005882])
                    1
                    ref call_tmp[2005914]:_ref(syserr)[949021] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (2005916 'move' call_tmp[2005914](2005918 '.' tmp[2005908] x0[964803]))
                    const-val decodeRet[2005921]:syserr[223672] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[2005923]:syserr[223672] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (2005925 'move' coerce_tmp[2005923](2005927 'deref' call_tmp[2005914]))
                    (2005929 'move' decodeRet[2005921](2005932 call chpl__initCopy[964674] coerce_tmp[2005923]))
                    ref call_tmp[2005934]:_ref(int(32))[936815] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (2005936 'move' call_tmp[2005934](2005938 '.' tmp[2005908] x1[964805]))
                    const-val cp[2005941]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[2005943]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (2005945 'move' coerce_tmp[2005943](2005947 'deref' call_tmp[2005934]))
                    (2005949 'move' cp[2005941](2005952 call chpl__initCopy[964946] coerce_tmp[2005943]))
                    ref call_tmp[2005954]:_ref(int(32))[936815] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (2005956 'move' call_tmp[2005954](2005958 '.' tmp[2005908] x2[964807]))
                    const-val nBytes[2005961]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[2005963]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (2005965 'move' coerce_tmp[2005963](2005967 'deref' call_tmp[2005954]))
                    (2005969 'move' nBytes[2005961](2005972 call chpl__initCopy[964946] coerce_tmp[2005963]))
                    const-val yret[2005974]:(int(32),byteIndex,int(64))[1122331] "dead after last mention" "YVV" "temp"
                    val call_tmp[2005976]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    const-val call_tmp[2005978]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2005980 'move' call_tmp[2005978] cp[2005941])
                    const-val call_tmp[2005983]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[2005985]:byteIndex[28173] "temp"
                    (2005988 call _cast[39486] i[2005627] ret_tmp[2005985])
                    (2005991 'move' call_tmp[2005983] ret_tmp[2005985])
                    const-val call_tmp[2005994]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2005996 'move' call_tmp[2005994](2005998 'cast' int(64)[13] nBytes[2005961]))
                    const-val call_tmp[2006001]:(int(32),byteIndex,int(64))[1122331] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[2006003]:(int(32),byteIndex,int(64))[1122331] "temp"
                    (2006006 call _build_tuple[1122281] cp[2005941] call_tmp[2005983] call_tmp[2005994] ret_tmp[2006003])
                    (2006011 'move' call_tmp[2006001] ret_tmp[2006003])
                    (2006014 'move' yret[2005974] call_tmp[2006001])
                    const-val _yieldedIndex[2006017]:(int(32),byteIndex,int(64))[1122331] "temp"
                    (2006019 'move' _yieldedIndex[2006017] call_tmp[2006001])
                    {
                      1
                      const-val c[2006024]:int(32)[95] "const" "index var" "insert auto destroy"
                      (2006026 'move' c[2006024](2006028 '.v' _yieldedIndex[2006017] x0[1122325]))
                      ref i[2006031]:_ref(byteIndex)[948948] "index var" "insert auto destroy"
                      (2006033 'move' i[2006031](2006035 '.v' _yieldedIndex[2006017] x1[1122327]))
                      const-val nBytes[2006038]:int(64)[13] "const" "index var" "insert auto destroy"
                      (2006040 'move' nBytes[2006038](2006042 '.v' _yieldedIndex[2006017] x2[1122329]))
                      const-val call_tmp[2006045]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (2006047 'move' call_tmp[2006045] noSplits[2004549])
                      if noSplits[2004549]
                      {
                        (2006053 call =[435290] done[2004526] 1)
                        const-val call_tmp[2006056]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (2006058 'move' call_tmp[2006056](2006061 call isSpace[36843] localThis[2004521]))
                        const-val call_tmp[2006063]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (2006065 'move' call_tmp[2006063](2006068 call ![7494] call_tmp[2006056]))
                        const-val call_tmp[2006070]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (2006072 'move' call_tmp[2006070] call_tmp[2006063])
                        if call_tmp[2006063]
                        {
                          (2006078 call =[38272] chunk[2004536] localThis[2004521])
                          (2006082 call =[435290] yieldChunk[2004531] 1)
                        }
                      }
                      {
                        const-val call_tmp[2006087]:bool[10] "dead at end of block" "maybe param" "temp"
                        (2006089 'move' call_tmp[2006087](2006092 call codepoint_isWhitespace[39156] c[2006024]))
                        const-val cSpace[2006094]:bool[10] "dead at end of block" "insert auto destroy"
                        (2006096 'move' cSpace[2006094] call_tmp[2006087])
                        const-val tmp[2006099]:bool[10] "dead after last mention" "maybe param" "temp"
                        (2006101 'move' tmp[2006099] inChunk[2004598])
                        val tmp[2006104]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                        const-val tmp[2006106]:bool[10] "dead after last mention" "maybe param" "temp"
                        const-val call_tmp[2006108]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (2006110 'move' call_tmp[2006108] inChunk[2004598])
                        (2006113 'move' tmp[2006106] inChunk[2004598])
                        if inChunk[2004598]
                        {
                          (2006118 'move' tmp[2006104] 1)
                        }
                        {
                          const-val tmp[2006122]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                          (2006124 'move' tmp[2006122] cSpace[2006094])
                          (2006127 'move' tmp[2006104] cSpace[2006094])
                        }
                        const-val call_tmp[2006131]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (2006133 'move' call_tmp[2006131](2006136 call ![7494] tmp[2006104]))
                        const-val call_tmp[2006138]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (2006140 'move' call_tmp[2006138] call_tmp[2006131])
                        if call_tmp[2006131]
                        {
                          (2006146 call =[38194] chunkStart[2004603] i[2006031])
                          (2006150 call =[435290] inChunk[2004598] 1)
                          const-val call_tmp[2006153]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                          const-val ret_tmp[2006155]:byteIndex[28173] "temp"
                          (2006158 call -[28857] i[2006031] 1 ret_tmp[2006155])
                          (2006162 'move' call_tmp[2006153] ret_tmp[2006155])
                          const-val call_tmp[2006165]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                          const-val ret_tmp[2006167]:byteIndex[28173] "temp"
                          (2006170 call +[28725] call_tmp[2006153] nBytes[2006038] ret_tmp[2006167])
                          (2006174 'move' call_tmp[2006165] ret_tmp[2006167])
                          const-val call_tmp[2006177]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (2006179 'move' call_tmp[2006177](2006182 call >[28575] call_tmp[2006165] iEnd[2004592]))
                          const-val call_tmp[2006185]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (2006187 'move' call_tmp[2006185] call_tmp[2006177])
                          if call_tmp[2006177]
                          {
                            const-val call_tmp[2006192]:range(byteIndex,boundedLow,false)[1143592] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[2006194]:range(byteIndex,boundedLow,false)[1143592] "temp"
                            (2006197 call chpl_build_low_bounded_range[1142899] chunkStart[2004603] ret_tmp[2006194])
                            (2006200 'move' call_tmp[2006192] ret_tmp[2006194])
                            const-val call_tmp[2006203]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                            const-val ret_tmp[2006205]:string[26] "temp"
                            (2006208 call this[1143912] localThis[2004521] call_tmp[2006192] ret_tmp[2006205])
                            (2006212 'move' call_tmp[2006203] ret_tmp[2006205])
                            (2006216 call =[38272] chunk[2004536] call_tmp[2006203])
                            (2006220 call chpl__autoDestroy[1601673] call_tmp[2006203])
                            (2006223 call chpl__autoDestroy[1682957] call_tmp[2006192])
                            (2006226 call =[435290] yieldChunk[2004531] 1)
                            (2006230 call =[435290] done[2004526] 1)
                          }
                          (2006235 call chpl__autoDestroy[1601936] call_tmp[2006165])
                          (2006238 call chpl__autoDestroy[1601936] call_tmp[2006153])
                        }
                        {
                          const-val call_tmp[2006241]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (2006243 'move' call_tmp[2006241] inChunk[2004598])
                          if call_tmp[2006241]
                          {
                            const-val call_tmp[2006248]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (2006250 'move' call_tmp[2006248] cSpace[2006094])
                            if cSpace[2006094]
                            {
                              (2006256 call +=[451431] splitCount[2004567] 1)
                              const-val tmp[2006259]:bool[10] "dead after last mention" "maybe param" "temp"
                              (2006261 'move' tmp[2006259] limitSplits[2004562])
                              val tmp[2006264]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                              const-val tmp[2006266]:bool[10] "dead after last mention" "maybe param" "temp"
                              const-val call_tmp[2006268]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (2006270 'move' call_tmp[2006268] limitSplits[2004562])
                              (2006273 'move' tmp[2006266] limitSplits[2004562])
                              if limitSplits[2004562]
                              {
                                const-val tmp[2006278]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                                const-val call_tmp[2006280]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val maxsplit[2006959]:int(64)[13] "temp"
                                (2006964 'move' maxsplit[2006959](2006961 '.v' _iterator[1354721] F1_maxsplit[2098436]))
                                (2006282 'move' call_tmp[2006280](2006285 call >[437788] splitCount[2004567] maxsplit[2006959]))
                                (2006288 'move' tmp[2006278] call_tmp[2006280])
                                (2006291 'move' tmp[2006264] call_tmp[2006280])
                              }
                              {
                                (2006295 'move' tmp[2006264] 0)
                              }
                              const-val call_tmp[2006299]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (2006301 'move' call_tmp[2006299] tmp[2006264])
                              if tmp[2006264]
                              {
                                const-val call_tmp[2006306]:range(byteIndex,boundedLow,false)[1143592] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[2006308]:range(byteIndex,boundedLow,false)[1143592] "temp"
                                (2006311 call chpl_build_low_bounded_range[1142899] chunkStart[2004603] ret_tmp[2006308])
                                (2006314 'move' call_tmp[2006306] ret_tmp[2006308])
                                const-val call_tmp[2006317]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[2006319]:string[26] "temp"
                                (2006322 call this[1143912] localThis[2004521] call_tmp[2006306] ret_tmp[2006319])
                                (2006326 'move' call_tmp[2006317] ret_tmp[2006319])
                                (2006330 call =[38272] chunk[2004536] call_tmp[2006317])
                                (2006334 call chpl__autoDestroy[1601673] call_tmp[2006317])
                                (2006337 call chpl__autoDestroy[1682957] call_tmp[2006306])
                                (2006340 call =[435290] yieldChunk[2004531] 1)
                                (2006344 call =[435290] done[2004526] 1)
                              }
                              {
                                const-val call_tmp[2006348]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[2006350]:byteIndex[28173] "temp"
                                (2006353 call -[28857] i[2006031] 1 ret_tmp[2006350])
                                (2006357 'move' call_tmp[2006348] ret_tmp[2006350])
                                const-val call_tmp[2006360]:range(byteIndex,bounded,false)[1025981] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[2006362]:range(byteIndex,bounded,false)[1025981] "temp"
                                (2006365 call chpl_build_bounded_range[1123443] chunkStart[2004603] call_tmp[2006348] ret_tmp[2006362])
                                (2006369 'move' call_tmp[2006360] ret_tmp[2006362])
                                const-val call_tmp[2006372]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[2006374]:string[26] "temp"
                                (2006377 call this[1123689] localThis[2004521] call_tmp[2006360] ret_tmp[2006374])
                                (2006381 'move' call_tmp[2006372] ret_tmp[2006374])
                                (2006385 call =[38272] chunk[2004536] call_tmp[2006372])
                                (2006389 call chpl__autoDestroy[1601673] call_tmp[2006372])
                                (2006392 call chpl__autoDestroy[1674473] call_tmp[2006360])
                                (2006395 call chpl__autoDestroy[1601936] call_tmp[2006348])
                                (2006398 call =[435290] yieldChunk[2004531] 1)
                                (2006402 call =[435290] inChunk[2004598] 0)
                              }
                            }
                            {
                              const-val call_tmp[2006407]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              const-val ret_tmp[2006409]:byteIndex[28173] "temp"
                              (2006412 call -[28857] i[2006031] 1 ret_tmp[2006409])
                              (2006416 'move' call_tmp[2006407] ret_tmp[2006409])
                              const-val call_tmp[2006419]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              const-val ret_tmp[2006421]:byteIndex[28173] "temp"
                              (2006424 call +[28725] call_tmp[2006407] nBytes[2006038] ret_tmp[2006421])
                              (2006428 'move' call_tmp[2006419] ret_tmp[2006421])
                              const-val call_tmp[2006431]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (2006433 'move' call_tmp[2006431](2006436 call >[28575] call_tmp[2006419] iEnd[2004592]))
                              const-val call_tmp[2006439]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (2006441 'move' call_tmp[2006439] call_tmp[2006431])
                              if call_tmp[2006431]
                              {
                                const-val call_tmp[2006446]:range(byteIndex,boundedLow,false)[1143592] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[2006448]:range(byteIndex,boundedLow,false)[1143592] "temp"
                                (2006451 call chpl_build_low_bounded_range[1142899] chunkStart[2004603] ret_tmp[2006448])
                                (2006454 'move' call_tmp[2006446] ret_tmp[2006448])
                                const-val call_tmp[2006457]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val ret_tmp[2006459]:string[26] "temp"
                                (2006462 call this[1143912] localThis[2004521] call_tmp[2006446] ret_tmp[2006459])
                                (2006466 'move' call_tmp[2006457] ret_tmp[2006459])
                                (2006470 call =[38272] chunk[2004536] call_tmp[2006457])
                                (2006474 call chpl__autoDestroy[1601673] call_tmp[2006457])
                                (2006477 call chpl__autoDestroy[1682957] call_tmp[2006446])
                                (2006480 call =[435290] yieldChunk[2004531] 1)
                                (2006484 call =[435290] done[2004526] 1)
                              }
                              (2006489 call chpl__autoDestroy[1601936] call_tmp[2006419])
                              (2006492 call chpl__autoDestroy[1601936] call_tmp[2006407])
                            }
                          }
                        }
                      }
                      const-val call_tmp[2006498]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (2006500 'move' call_tmp[2006498] yieldChunk[2004531])
                      if call_tmp[2006498]
                      {
                        const-val yret[2006505]:string[26] "dead after last mention" "YVV" "temp"
                        const-val _yield_expr_tmp_[2006507]:string[26] "temp"
                        (2006509 'move' _yield_expr_tmp_[2006507](2006512 call chpl__initCopy[981537] chunk[2004536]))
                        (2006514 'move' yret[2006505] _yield_expr_tmp_[2006507])
                        const-val _yieldedIndex[2006834]:string[26] "temp"
                        (2006901 'move' _yieldedIndex[2006834] _yield_expr_tmp_[2006507])
                        {
                          const-val chpl__elidedIdx[2006836]:string[26] "const" "index var" "insert auto destroy"
                          (2006838 'move' chpl__elidedIdx[2006836] _yieldedIndex[2006834])
                          {
                            (2006843 call +=[451431] numElements[1354712] 1)
                            const-val call_tmp[2006846]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (2006848 'move' call_tmp[2006846](2006851 call >[437788] numElements[1354712] 1))
                            const-val call_tmp[2006854]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (2006856 'move' call_tmp[2006854] call_tmp[2006846])
                            if call_tmp[2006854]
                            {
                              (2006862 call chpl__autoDestroy[1601673] chpl__elidedIdx[2006836])
                              (2006874 call chpl__autoDestroy[1601936] call_tmp[2005983])
                              (2006877 call chpl__autoDestroy[1605546] tmp[2005908])
                              (2006880 call chpl__autoDestroy[1601673] localThis[2004661])
                              (2006883 call _freeIterator[1122762] _iterator[2004610])
                              (2006886 call chpl__autoDestroy[1601936] default_arg_start[2004614])
                              (2006889 call chpl__autoDestroy[1601936] chunkStart[2004603])
                              (2006892 call chpl__autoDestroy[1601936] iEnd[2004592])
                              (2006895 call chpl__autoDestroy[1601673] chunk[2004536])
                              (2006898 call chpl__autoDestroy[1601673] localThis[2004521])
                              break _breakLabel[1354788] _breakLabel[1354788]
                            }
                          }
                          label _continueLabel[2006867]
                          (2006870 call chpl__autoDestroy[1601673] chpl__elidedIdx[2006836])
                        }
                        (2006552 call =[435290] yieldChunk[2004531] 0)
                      }
                      const-val call_tmp[2006556]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (2006558 'move' call_tmp[2006556] done[2004526])
                      if call_tmp[2006556]
                      {
                        (2006564 call chpl__autoDestroy[1601936] call_tmp[2005983])
                        (2006567 call chpl__autoDestroy[1605546] tmp[2005908])
                        (2006570 call chpl__autoDestroy[1601673] localThis[2004661])
                        break _breakLabel[2006622] _breakLabel[2006622]
                      }
                    }
                    (2006576 call chpl__autoDestroy[1601936] call_tmp[2005983])
                    const-val coerce_tmp[2006578]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (2006580 'move' coerce_tmp[2006578](2006582 'cast' int(64)[13] nBytes[2005961]))
                    (2006586 call +=[451431] i[2005627] coerce_tmp[2006578])
                    (2006590 call chpl__autoDestroy[1605546] tmp[2005908])
                    ref call_tmp[2006592]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                    (2006594 'move' call_tmp[2006592](2006597 call buffLen[758075] localThis[2004661]))
                    const-val call_tmp[2006599]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[2006601]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (2006603 'move' coerce_tmp[2006601](2006605 'deref' call_tmp[2006592]))
                    (2006607 'move' call_tmp[2006599](2006610 call <[437568] i[2005627] coerce_tmp[2006601]))
                    (2006613 'move' tmp[2005840] call_tmp[2006599])
                    tmp[2005840]
                  }
                }
                (2006618 call chpl__autoDestroy[1601673] localThis[2004661])
                label _end_cpIndexLen[2006620]
              }
              label _breakLabel[2006622]
              (2006625 call _freeIterator[1122762] _iterator[2004610])
              (2006628 call chpl__autoDestroy[1601936] default_arg_start[2004614])
              (2006631 call chpl__autoDestroy[1601936] chunkStart[2004603])
              (2006634 call chpl__autoDestroy[1601936] iEnd[2004592])
              (2006637 call chpl__autoDestroy[1601673] chunk[2004536])
              (2006640 call chpl__autoDestroy[1601673] localThis[2004521])
            }
          }
          label _endsplit[2006644]
        }
        label _breakLabel[1354788]
        (1925490 call _freeIterator[1156881] _iterator[1354721])
      }
      const-val call_tmp[1354790]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1354792 'move' call_tmp[1354790](1354795 call >[437788] numElements[1354712] 1))
      const-val call_tmp[1354798]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1354800 'move' call_tmp[1354798] call_tmp[1354790])
      if call_tmp[1354798]
      {
        const-val call_tmp[1354807]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1906028]:string[26] "temp"
        (1354812 call +[38345] "bad cast from string '" x[1354490] ret_tmp[1906028])
        (1906031 'move' call_tmp[1354807] ret_tmp[1906028])
        const-val call_tmp[1354815]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1906034]:string[26] "temp"
        (1354820 call +[38345] call_tmp[1354807] "' to " ret_tmp[1906034])
        (1906037 'move' call_tmp[1354815] ret_tmp[1906034])
        const-val call_tmp[1354831]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1906040]:string[26] "temp"
        (1354836 call +[38345] call_tmp[1354815] "uint(64)" ret_tmp[1906040])
        (1906043 'move' call_tmp[1354831] ret_tmp[1906040])
        const-val call_tmp[1354839]:owned IllegalArgumentError[1064747] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
        val new_temp[1355605]:IllegalArgumentError[168246] "dead after last mention" "temp"
        (1355607 'move' new_temp[1355605](1355592 call _new[1064296] call_tmp[1354831]))
        const-val initTemp[1355614]:owned IllegalArgumentError[1064747] "dead after last mention" "delay instantiation" "temp"
        (1355617 call init[1064398] initTemp[1355614] new_temp[1355605])
        (1354841 'move' call_tmp[1354839] initTemp[1355614])
        val call_tmp[1354848]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1355631]:owned Error[966647] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
        const-val ret_tmp[1909240]:owned Error[966647] "temp"
        (1355633 call _cast[1064919] call_tmp[1354839] ret_tmp[1909240])
        (1909243 'move' coerce_tmp[1355631] ret_tmp[1909240])
        const-val _formal_tmp_in_err[1355810]:owned Error[966647] "dead after last mention" "expr temp" "no auto destroy" "temp"
        (1355814 'move' _formal_tmp_in_err[1355810] coerce_tmp[1355631])
        (1354850 'move' call_tmp[1354848](1354853 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1355810]))
        {
          val castedError[1887594]:Error[167984] "temp"
          (1887600 'move' castedError[1887594] call_tmp[1354848])
          (1887602 '=' error_out[1887591] castedError[1887594])
          (1925492 call chpl__autoDestroy[1601673] call_tmp[1354831])
          (1925495 call chpl__autoDestroy[1601673] call_tmp[1354815])
          (1925498 call chpl__autoDestroy[1601673] call_tmp[1354807])
          (1925501 call chpl__autoDestroy[1601936] call_tmp[1354655])
          (1925504 call chpl__autoDestroy[1674473] default_arg_region[1355509])
          (1925507 call chpl__autoDestroy[1601673] localX[1354649])
          gotoErrorHandlingReturn _end__cast[1355496] _end__cast[1355496]
        }
        (1925511 call chpl__autoDestroy[1601673] call_tmp[1354831])
        (1925514 call chpl__autoDestroy[1601673] call_tmp[1354815])
        (1925517 call chpl__autoDestroy[1601673] call_tmp[1354807])
      }
      const-val call_tmp[1354858]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1354860 'move' call_tmp[1354858](1354863 call size[32772] localX[1354649]))
      const-val call_tmp[1354866]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1354868 'move' call_tmp[1354866](1354871 call >=[1157185] call_tmp[1354858]))
      const-val call_tmp[1354874]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1354876 'move' call_tmp[1354874] call_tmp[1354866])
      if call_tmp[1354874]
      {
        const-val call_tmp[1354883]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1905448]:string[26] "temp"
        (1354888 call this[34663] localX[1354649] 0 ret_tmp[1905448])
        (1905451 'move' call_tmp[1354883] ret_tmp[1905448])
        const-val call_tmp[1354890]:range(int(64),boundedLow,false)[1087754] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1909546]:range(int(64),boundedLow,false)[1087754] "temp"
        (1354895 call chpl_build_low_bounded_range[1087147] 1 ret_tmp[1909546])
        (1909549 'move' call_tmp[1354890] ret_tmp[1909546])
        const-val call_tmp[1354897]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1910176]:string[26] "temp"
        (1354902 call this[1125751] localX[1354649] call_tmp[1354890] ret_tmp[1910176])
        (1910179 'move' call_tmp[1354897] ret_tmp[1910176])
        const-val call_tmp[1354904]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1905494]:string[26] "temp"
        (1354912 call replace[35366] call_tmp[1354897] "_" "" -1 ret_tmp[1905494])
        (1905497 'move' call_tmp[1354904] ret_tmp[1905494])
        const-val call_tmp[1354915]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1906046]:string[26] "temp"
        (1354920 call +[38345] call_tmp[1354883] call_tmp[1354904] ret_tmp[1906046])
        (1906049 'move' call_tmp[1354915] ret_tmp[1906046])
        (1354924 call =[38272] localX[1354649] call_tmp[1354915])
        (1925521 call chpl__autoDestroy[1601673] call_tmp[1354915])
        (1925524 call chpl__autoDestroy[1601673] call_tmp[1354904])
        (1925527 call chpl__autoDestroy[1601673] call_tmp[1354897])
        (1925530 call chpl__autoDestroy[1680875] call_tmp[1354890])
        (1925533 call chpl__autoDestroy[1601673] call_tmp[1354883])
      }
    }
    const-val call_tmp[1354933]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1354935 'move' call_tmp[1354933](1354941 call isEmpty[35064] localX[1354649]))
    const-val call_tmp[1354942]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1354944 'move' call_tmp[1354942] call_tmp[1354933])
    if call_tmp[1354942]
    {
      const-val call_tmp[1354967]:owned IllegalArgumentError[1064747] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      val new_temp[1355915]:IllegalArgumentError[168246] "dead after last mention" "temp"
      (1355917 'move' new_temp[1355915](1355902 call _new[1064296] "bad cast from empty string to uint(64)"))
      const-val initTemp[1355924]:owned IllegalArgumentError[1064747] "dead after last mention" "delay instantiation" "temp"
      (1355927 call init[1064398] initTemp[1355924] new_temp[1355915])
      (1354969 'move' call_tmp[1354967] initTemp[1355924])
      val call_tmp[1354976]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1355941]:owned Error[966647] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1909246]:owned Error[966647] "temp"
      (1355943 call _cast[1064919] call_tmp[1354967] ret_tmp[1909246])
      (1909249 'move' coerce_tmp[1355941] ret_tmp[1909246])
      const-val _formal_tmp_in_err[1356120]:owned Error[966647] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1356124 'move' _formal_tmp_in_err[1356120] coerce_tmp[1355941])
      (1354978 'move' call_tmp[1354976](1354981 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1356120]))
      {
        val castedError[1887607]:Error[167984] "temp"
        (1887613 'move' castedError[1887607] call_tmp[1354976])
        (1887615 '=' error_out[1887591] castedError[1887607])
        (1925537 call chpl__autoDestroy[1601936] call_tmp[1354655])
        (1925540 call chpl__autoDestroy[1674473] default_arg_region[1355509])
        (1925543 call chpl__autoDestroy[1601673] localX[1354649])
        gotoErrorHandlingReturn _end__cast[1355496] _end__cast[1355496]
      }
    }
    {
      {
        {
          {
            {
              {
                const-val call_tmp[1355369]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
                (1355371 'move' call_tmp[1355369](1355377 call c_str[32935] localX[1354649]))
                const-val call_tmp[1355378]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                (1355380 'move' call_tmp[1355378](1355383 call c_string_to_uint64_t[1354612] call_tmp[1355369] isErr[1354634]))
                (1356498 'move' retVal[1354628] call_tmp[1355378])
              }
            }
          }
        }
      }
    }
    const-val call_tmp[1355428]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1355430 'move' call_tmp[1355428] isErr[1354634])
    if call_tmp[1355428]
    {
      const-val call_tmp[1355437]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1906052]:string[26] "temp"
      (1355442 call +[38345] "bad cast from string '" x[1354490] ret_tmp[1906052])
      (1906055 'move' call_tmp[1355437] ret_tmp[1906052])
      const-val call_tmp[1355445]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1906058]:string[26] "temp"
      (1355450 call +[38345] call_tmp[1355437] "' to " ret_tmp[1906058])
      (1906061 'move' call_tmp[1355445] ret_tmp[1906058])
      const-val call_tmp[1355461]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1906064]:string[26] "temp"
      (1355466 call +[38345] call_tmp[1355445] "uint(64)" ret_tmp[1906064])
      (1906067 'move' call_tmp[1355461] ret_tmp[1906064])
      const-val call_tmp[1355469]:owned IllegalArgumentError[1064747] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      val new_temp[1356284]:IllegalArgumentError[168246] "dead after last mention" "temp"
      (1356286 'move' new_temp[1356284](1356271 call _new[1064296] call_tmp[1355461]))
      const-val initTemp[1356293]:owned IllegalArgumentError[1064747] "dead after last mention" "delay instantiation" "temp"
      (1356296 call init[1064398] initTemp[1356293] new_temp[1356284])
      (1355471 'move' call_tmp[1355469] initTemp[1356293])
      val call_tmp[1355478]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1356310]:owned Error[966647] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1909252]:owned Error[966647] "temp"
      (1356312 call _cast[1064919] call_tmp[1355469] ret_tmp[1909252])
      (1909255 'move' coerce_tmp[1356310] ret_tmp[1909252])
      const-val _formal_tmp_in_err[1356489]:owned Error[966647] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1356493 'move' _formal_tmp_in_err[1356489] coerce_tmp[1356310])
      (1355480 'move' call_tmp[1355478](1355483 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1356489]))
      {
        val castedError[1887620]:Error[167984] "temp"
        (1887626 'move' castedError[1887620] call_tmp[1355478])
        (1887628 '=' error_out[1887591] castedError[1887620])
        (1925546 call chpl__autoDestroy[1601673] call_tmp[1355461])
        (1925549 call chpl__autoDestroy[1601673] call_tmp[1355445])
        (1925552 call chpl__autoDestroy[1601673] call_tmp[1355437])
        (1925555 call chpl__autoDestroy[1601936] call_tmp[1354655])
        (1925558 call chpl__autoDestroy[1674473] default_arg_region[1355509])
        (1925561 call chpl__autoDestroy[1601673] localX[1354649])
        gotoErrorHandlingReturn _end__cast[1355496] _end__cast[1355496]
      }
      (1925565 call chpl__autoDestroy[1601673] call_tmp[1355461])
      (1925568 call chpl__autoDestroy[1601673] call_tmp[1355445])
      (1925571 call chpl__autoDestroy[1601673] call_tmp[1355437])
    }
    (1355488 'move' ret[1354492] retVal[1354628])
    (1925574 call chpl__autoDestroy[1601936] call_tmp[1354655])
    (1925577 call chpl__autoDestroy[1674473] default_arg_region[1355509])
    (1925580 call chpl__autoDestroy[1601673] localX[1354649])
    gotoReturn _end__cast[1355496] _end__cast[1355496]
    label _end__cast[1355496]
    (1355498 return ret[1354492])
  }
  function c_string_to_int64_t[1024820](const in arg x[1024822]:c_string[19], ref arg err[1024824]:_ref(bool)[937388]) : int(64)[13] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1024827]:int(64)[13] "RVV" "temp"
    (1024829 return ret[1024827])
  }
  function integral_to_c_string[1063356](const in arg x[1063362]:int(64)[13], const in arg size[1063368]:uint(32)[110], const in arg isSigned[1063370]:bool[10], ref arg err[1063372]:_ref(bool)[937388]) : c_string[19] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1063375]:c_string[19] "RVV" "temp"
    (1063377 return ret[1063375])
  }
  function strlen[1063382](const in arg str[1063384]:c_string[19]) : uint(64)[115] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1063387]:uint(64)[115] "RVV" "temp"
    (1063389 return ret[1063387])
  }
  function integral_to_c_string[1072122](const in arg x[1072128]:int(64)[13], const in arg size[1072134]:uint(32)[110], const in arg isSigned[1072136]:bool[10], ref arg err[1072138]:_ref(bool)[937388]) : c_string[19] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1072141]:c_string[19] "RVV" "temp"
    (1072143 return ret[1072141])
  }
  function strlen[1072148](const in arg str[1072150]:c_string[19]) : uint(64)[115] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1072153]:uint(64)[115] "RVV" "temp"
    (1072155 return ret[1072153])
  }
  function integral_to_c_string[1268668](const in arg x[1268674]:int(64)[13], const in arg size[1268680]:uint(32)[110], const in arg isSigned[1268682]:bool[10], ref arg err[1268684]:_ref(bool)[937388]) : c_string[19] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1268687]:c_string[19] "RVV" "temp"
    (1268689 return ret[1268687])
  }
  function strlen[1268694](const in arg str[1268696]:c_string[19]) : uint(64)[115] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1268699]:uint(64)[115] "RVV" "temp"
    (1268701 return ret[1268699])
  }
  function c_string_to_uint64_t[1354612](const in arg x[1354614]:c_string[19], ref arg err[1354616]:_ref(bool)[937388]) : uint(64)[115] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1354619]:uint(64)[115] "RVV" "temp"
    (1354621 return ret[1354619])
  }
}