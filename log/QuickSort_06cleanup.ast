AST dump for QuickSort after pass cleanup.
Module use list: 

{
  (353070 'use' ChapelStandard)
  (272061 'use' Sort)
  (272070 'use'(272067 call . Sort c"ShallowCopy"))
  function partition[272084](arg Data[272081] :
  (272079 call chpl__buildArrayRuntimeType unknown Dom[272074] unknown eltType[272077]), arg lo[272087] :
  int[13], arg pivIdx[272091] :
  int[13], arg hi[272095] :
  int[13], arg comparator[272098]:_any[178](?)) : _unknown[51]
  {
    unknown a[272101] lo
    (272104 'end of statement')
    unknown b[272107] lo
    (272110 'end of statement')
    unknown c[272112] hi
    (272115 'end of statement')
    unknown d[272117] hi
    (272120 'end of statement')
    if(272142 call _cond_test(272123 call != lo pivIdx))
    {
      (272140 call(272128 call . ShallowCopy c"shallowSwap")(272134 call Data lo)(272139 call Data pivIdx))
    }
    (272149 call += a 1)
    (272154 call += b 1)
    unknown piv[272168] "no auto destroy"(272167 call(272159 call . ShallowCopy c"shallowCopyInit")(272165 call Data lo)) eltType
    (272171 'end of statement')
    {
      unknown tmp[272402] "temp"
      (272420 'move' tmp[272402](272418 call _cond_test 1))
      WhileDo[272407]
      {
        {
          {
            unknown tmp[272246] "temp"
            (272270 'move' tmp[272246](272265 call _cond_test(272267 call <= b c)))
            WhileDo[272251]
            {
              {
                unknown cmp[272186](272185 call chpl_compare(272181 call Data b) piv comparator)
                (272189 'end of statement')
                if(272198 call _cond_test(272193 call > cmp 0))
                {
                  break nil[44]
                }
                if(272237 call _cond_test(272205 call == cmp 0))
                {
                  if(272227 call _cond_test(272209 call != a b))
                  {
                    (272224 call(272212 call . ShallowCopy c"shallowSwap")(272218 call Data a)(272223 call Data b))
                  }
                  (272234 call += a 1)
                }
                (272243 call += b 1)
              }
              label _continueLabel[272249]
              (272260 'move' tmp[272246](272255 call _cond_test(272257 call <= b c)))
              tmp[272246]
            }
            label _breakLabel[272250]
          }
          {
            unknown tmp[272338] "temp"
            (272362 'move' tmp[272338](272357 call _cond_test(272359 call >= c b)))
            WhileDo[272343]
            {
              {
                unknown cmp[272287](272286 call chpl_compare(272282 call Data c) piv comparator)
                (272290 'end of statement')
                if(272299 call _cond_test(272294 call < cmp 0))
                {
                  break nil[44]
                }
                if(272329 call _cond_test(272306 call == cmp 0))
                {
                  (272321 call(272309 call . ShallowCopy c"shallowSwap")(272315 call Data d)(272320 call Data c))
                  (272326 call -= d 1)
                }
                (272335 call -= c 1)
              }
              label _continueLabel[272341]
              (272352 'move' tmp[272338](272347 call _cond_test(272349 call >= c b)))
              tmp[272338]
            }
            label _breakLabel[272342]
          }
          if(272372 call _cond_test(272367 call > b c))
          {
            break nil[44]
          }
          (272390 call(272378 call . ShallowCopy c"shallowSwap")(272384 call Data b)(272389 call Data c))
          (272394 call += b 1)
          (272399 call -= c 1)
        }
        label _continueLabel[272405]
        (272413 'move' tmp[272402](272411 call _cond_test 1))
        tmp[272402]
      }
      label _breakLabel[272406]
    }
    (272433 call(272424 call . ShallowCopy c"shallowCopy")(272430 call Data lo) piv)
    unknown s[272435] int[13]
    unknown l[272438](272448 'typeof' s)
    unknown h[272442](272446 'typeof' l)
    (272449 'end of statement')
    (272462 call = s(272461 call min(272454 call - a lo)(272459 call - b a)))
    (272467 call = l lo)
    (272475 call = h(272473 call - b s))
    {
      unknown tmp[272513] "temp"
      (272537 'move' tmp[272513](272532 call _cond_test(272534 call > s 0)))
      WhileDo[272518]
      {
        {
          (272495 call(272483 call . ShallowCopy c"shallowSwap")(272489 call Data l)(272494 call Data h))
          (272500 call += l 1)
          (272505 call += h 1)
          (272510 call -= s 1)
        }
        label _continueLabel[272516]
        (272527 'move' tmp[272513](272522 call _cond_test(272524 call > s 0)))
        tmp[272513]
      }
      label _breakLabel[272517]
    }
    unknown n[272544](272542 call + hi 1)
    (272547 'end of statement')
    (272560 call = s(272559 call min(272552 call - d c)(272557 call - hi d)))
    (272565 call = l b)
    (272573 call = h(272571 call - n s))
    {
      unknown tmp[272611] "temp"
      (272635 'move' tmp[272611](272630 call _cond_test(272632 call > s 0)))
      WhileDo[272616]
      {
        {
          (272593 call(272581 call . ShallowCopy c"shallowSwap")(272587 call Data l)(272592 call Data h))
          (272598 call += l 1)
          (272603 call += h 1)
          (272608 call -= s 1)
        }
        label _continueLabel[272614]
        (272625 'move' tmp[272611](272620 call _cond_test(272622 call > s 0)))
        tmp[272611]
      }
      label _breakLabel[272615]
    }
    unknown eqStart[272645](272643 call +(272640 call - b a) lo)
    (272648 'end of statement')
    unknown eqEnd[272656](272654 call - hi(272652 call - d c))
    (272659 'end of statement')
    (272665 return(272663 call _build_tuple eqStart eqEnd))
  }
  function order3[272681](arg Data[272678] :
  (272676 call chpl__buildArrayRuntimeType unknown Dom[272671] unknown eltType[272674]), arg lo[272684] :
  int[13], arg mid[272688] :
  int[13], arg hi[272692] :
  int[13], arg comparator[272695]:_any[178](?)) : _unknown[51]
  {
    if(272817 call _cond_test(272711 call <(272709 call chpl_compare(272702 call Data lo)(272707 call Data mid) comparator) 0))
    {
      if(272759 call _cond_test(272726 call <(272724 call chpl_compare(272717 call Data hi)(272722 call Data lo) comparator) 0))
      {
        (272729 return lo)
      }
      {
        if(272755 call _cond_test(272745 call <(272743 call chpl_compare(272736 call Data mid)(272741 call Data hi) comparator) 0))
        {
          (272748 return mid)
        }
        {
          (272752 return hi)
        }
      }
    }
    {
      if(272811 call _cond_test(272778 call <(272776 call chpl_compare(272769 call Data lo)(272774 call Data hi) comparator) 0))
      {
        (272781 return lo)
      }
      {
        if(272807 call _cond_test(272797 call <(272795 call chpl_compare(272788 call Data hi)(272793 call Data mid) comparator) 0))
        {
          (272800 return mid)
        }
        {
          (272804 return hi)
        }
      }
    }
  }
  { scopeless type
    int[13]
  }
  function quickSort[272837](arg Data[272834] :
  (272832 call chpl__buildArrayRuntimeType unknown Dom[272827] unknown eltType[272830]), arg minlen[272840] =
  16, arg comparator[272846] :
  unknown rec[272843] =
  defaultComparator) : _unknown[51] "no return value for void"
  {
    (272854 call chpl_check_comparator comparator eltType)
    if(272886 call _cond_test(272862 call !=(272858 call . Dom c"rank") 1))
    {
      (272883 call compilerError "quickSort() requires 1-D array")
    }
    if(272951 call _cond_test(272901 call &&(272891 call . Dom c"stridable")(272899 call !=(272895 call . Dom c"stride") 1)))
    {
      unknown reindexed[272923] "ref var"(272922 call(272906 call . Data c"reindex")(272919 call #(272913 call chpl_build_low_bounded_range(272910 call . Dom c"alignedLow"))(272916 call . Dom c"size")))
      (272926 'end of statement')
      (272940 call assert(272937 call ==(272933 call .(272930 call . reindexed c"_dom") c"stride") 1))
      (272947 call quickSortImpl reindexed minlen comparator)
      (272949 return _void[55])
    }
    (272964 call assert(272961 call ==(272957 call . Dom c"stride") 1))
    (272971 call quickSortImpl Data minlen comparator)
  }
  function quickSortImpl[272987](arg Data[272984] :
  (272982 call chpl__buildArrayRuntimeType unknown Dom[272977] unknown eltType[272980]), arg minlen[272990] =
  16, arg comparator[272996] :
  unknown rec[272993] =
  defaultComparator, arg start[273005] :
  int[13] =
  (273002 call . Dom c"low"), arg end[273014] :
  int[13] =
  (273011 call . Dom c"high")) : _unknown[51] "no return value for void"
  {
    (273022 'import'(273019 call . Sort c"InsertionSort"))
    const lo[273026] "const" start
    const hi[273030] "const" end
    const mid[273046] "const"(273044 call + lo(273042 call /(273039 call +(273036 call - hi lo) 1) 2))
    (273049 'end of statement')
    unknown piv[273051] mid
    (273054 'end of statement')
    if(273090 call _cond_test(273060 call <(273057 call - hi lo) 0))
    {
      (273074 call(273065 call . InsertionSort c"insertionSortMoveElts") Data(comparator = comparator) lo hi)
      (273077 return _void[55])
    }
    {
      if(273086 call _cond_test(273081 call <= hi lo))
      {
        (273083 return _void[55])
      }
    }
    if(273182 call _cond_test(273100 call <(273097 call - hi lo) 100))
    {
      (273111 call = piv(273110 call order3 Data lo mid hi comparator))
    }
    {
      const medLo[273129] "const"(273128 call order3 Data lo(273121 call + lo 1)(273125 call + lo 2) comparator)
      (273132 'end of statement')
      const medMid[273148] "const"(273147 call order3 Data(273139 call - mid 1) mid(273144 call + mid 1) comparator)
      (273151 'end of statement')
      const medHi[273166] "const"(273165 call order3 Data(273157 call - hi 2)(273161 call - hi 1) hi comparator)
      (273169 'end of statement')
      (273179 call = piv(273178 call order3 Data medLo medMid medHi comparator))
    }
    unknown tmp[273199] "temp"(273198 call partition Data lo piv hi comparator)
    (273206 call _check_tuple_var_decl tmp[273199] 2)
    unknown eqStart[273186](273200 call tmp[273199] 0)
    unknown eqEnd[273188](273203 call tmp[273199] 1)
    (273211 'end of statement')
    if(273292 call _cond_test(273219 call <(273214 call - hi lo) 300))
    {
      (273231 call quickSortImpl Data minlen comparator lo(273229 call - eqStart 1))
      (273244 call quickSortImpl Data minlen comparator(273241 call + eqEnd 1) hi)
    }
    {
      Forall {
        induction variables:
          
          unknown i[273287] "index var" "insert auto destroy"
        iterated expressions:
          (273249 call chpl_build_bounded_range 1 2)
        shadow variables:
        other variables
          forall body
        {
          if(273279 call _cond_test(273253 call == i 1))
          {
            (273265 call quickSortImpl Data minlen comparator lo(273263 call - eqStart 1))
          }
          {
            (273277 call quickSortImpl Data minlen comparator(273274 call + eqEnd 1) hi)
          }
        }
      }
    }
  }
}