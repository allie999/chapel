AST dump for LocaleModel after pass prune.
Module use list: LocaleModelHelpFlat LocaleModelHelpMem IO 

{
  type _class_localson_fn[2147531] val _runtime_hdr[2147532]:chpl_comm_on_bundle_t[209359] val _0_tmp[2147534]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2147536]:locale[28]
  function chpl__init_LocaleModel[416012]() : void[4] "insert line file info" "module init" "resolved"
  {
    const-val ret_tmp[1865118]:range(int(64),bounded,false)[1026875] "temp"
    (88779 call chpl_build_bounded_range[455180] 1 0 ret_tmp[1865118])
    (1865121 'move' call_tmp[632033] ret_tmp[1865118])
    const-val ret_tmp[1868918]:domain(1,int(64),false)[1252658] "temp"
    (88782 call chpl__buildDomainExpr[1244729] call_tmp[632033] ret_tmp[1868918])
    (1868921 'move' call_tmp[632038] ret_tmp[1868918])
    const-val call_tmp[632043]:_RuntimeTypeInfo[1253734] "dead at end of block" "maybe param" "temp"
    val default_arg_idxType[1253993]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp" "type variable"
    (632046 'move' call_tmp[632043](88775 call chpl__buildDomainRuntimeType[1246343] defaultDist[94053]))
    const-val ret_tmp[1870836]:domain(1,int(64),false)[1252658] "temp"
    (1287321 call chpl__coerceMove[1287327] call_tmp[632043] call_tmp[632038] ret_tmp[1870836])
    (1870839 'move' init_coerce_tmp[1254029] ret_tmp[1870836])
    (541694 'move' chpl_emptyLocaleSpace[88784] init_coerce_tmp[1254029])
    (2146791 '_private_broadcast' chpl_emptyLocaleSpace[88784])
    (632051 'move' call_tmp[632048](88791 call chpl__ensureDomainExpr[1254035] chpl_emptyLocaleSpace[88784]))
    (632056 'move' call_tmp[632053](88793 call chpl__buildArrayRuntimeType[1254054] call_tmp[632048]))
    (1297745 'move' _runtime_type_tmp_[1297740](1837568 '.v' call_tmp[632053] dom[1287306]))
    const-val ret_tmp[1870992]:[domain(1,int(64),false)] locale[1287072] "temp"
    (1297738 call chpl__convertRuntimeTypeToValue[1297752] _runtime_type_tmp_[1297740] ret_tmp[1870992])
    (1870995 'move' chpl_emptyLocales[88795] ret_tmp[1870992])
    (2146793 '_private_broadcast' chpl_emptyLocales[88795])
    (513668 return _void[55])
  }
  function chpl__deinit_LocaleModel[89794]() : void[4] "resolved" "no return value for void"
  {
    {
      ref _indexOfInterest[89807]:_ref(locale)[948905] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[89808]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304352] "dead at end of block" "expr temp" "temp"
      (89817 'move' _iterator[89808](89815 call _getIterator[1298170] chpl_emptyLocales[88795]))
      {
        val ret[1941062]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304358] "dead after last mention" "RVV" "temp"
        ref _indexOfInterest[1941064]:_ref(locale)[948905] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1941066]:_ic_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303747] "dead at end of block" "expr temp" "temp"
        val call_tmp[1941068]:[domain(1,int(64),false)] locale[1256547] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val this[1941177]:[domain(1,int(64),false)] locale[1287072] "temp"
        (1941182 'move' this[1941177](1941179 '.v' _iterator[89808] F0_this[2071241]))
        (1941070 'move' call_tmp[1941068](1941073 call _value[1287127] this[1941177]))
        const-val call_tmp[1941075]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303753] "dead at end of block" "maybe param" "temp"
        val coerce_tmp[1941077]:[domain(1,int(64),false)] locale[1256547] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1941079 'move' coerce_tmp[1941077] call_tmp[1941068])
        const-val default_arg_tasksPerLocale[1941082]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1941084 'move' default_arg_tasksPerLocale[1941082](1941087 call these_default_tasksPerLocale[1298440] call_tmp[1941068]))
        const-val default_arg_ignoreRunning[1941089]:bool[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1941091 'move' default_arg_ignoreRunning[1941089](1941094 call these_default_ignoreRunning[1298471] coerce_tmp[1941077]))
        const-val default_arg_minIndicesPerTask[1941096]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1941098 'move' default_arg_minIndicesPerTask[1941096](1941101 call these_default_minIndicesPerTask[1298502] coerce_tmp[1941077]))
        const-val ret_tmp[1941103]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303753] "temp"
        (1941106 call these[1298324] coerce_tmp[1941077] default_arg_tasksPerLocale[1941082] default_arg_ignoreRunning[1941089] default_arg_minIndicesPerTask[1941096] ret_tmp[1941103])
        (1941112 'move' call_tmp[1941075] ret_tmp[1941103])
        (1941115 'move' _iterator[1941066](1941118 call _getIterator[1303762] call_tmp[1941075]))
        {
          val ret[2007567]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303753] "dead after last mention" "RVV" "temp"
          ref _indexOfInterest[2007569]:_ref(locale)[948905] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[2007571]:_ic_chpl__serialViewIter[1303497] "dead at end of block" "expr temp" "temp"
          ref call_tmp[2007573]:_ref(domain(1,int(64),false))[1251010] "dead at end of block" "maybe param" "temp"
          const-val this[2007949]:[domain(1,int(64),false)] locale[1256547] "temp"
          (2007954 'move' this[2007949](2007951 '.v' _iterator[1941066] F0_this[2073349]))
          (2007575 'move' call_tmp[2007573](2007578 call dom[1258080] this[2007949]))
          const-val call_tmp[2007580]:_ir_chpl__serialViewIter[1303503] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[2007582]:domain(1,int(64),false)[1250995] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2007584 'move' coerce_tmp[2007582](2007586 'deref' call_tmp[2007573]))
          const-val ret_tmp[2007588]:_ir_chpl__serialViewIter[1303503] "temp"
          const-val this[2007956]:[domain(1,int(64),false)] locale[1256547] "temp"
          (2007961 'move' this[2007956](2007958 '.v' _iterator[1941066] F0_this[2073349]))
          (2007591 call chpl__serialViewIter[1298536] this[2007956] coerce_tmp[2007582] ret_tmp[2007588])
          (2007595 'move' call_tmp[2007580] ret_tmp[2007588])
          (2007598 'move' _iterator[2007571](2007601 call _getIterator[1303512] call_tmp[2007580]))
          {
            val ret[2007604]:_ir_chpl__serialViewIter[1303503] "dead after last mention" "RVV" "temp"
            val info[2007606]:[domain(1,int(64),false)] locale[1256547] "dead at end of block" "insert auto destroy"
            val tmp[2007608]:[domain(1,int(64),false)] locale[1256547] "dead at end of block" "expr temp" "insert auto destroy" "maybe copy elided" "maybe param" "temp"
            val tmp[2007610]:[domain(1,int(64),false)] locale[1256547] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val arr[2007612]:[domain(1,int(64),false)] locale[1256547] "temp"
            (2007614 'move' arr[2007612](2007616 '.v' _iterator[2007571] F0_arr[2075254]))
            (2007619 'move' tmp[2007610] arr[2007612])
            const-val arr[2007622]:[domain(1,int(64),false)] locale[1256547] "temp"
            (2007624 'move' arr[2007622](2007626 '.v' _iterator[2007571] F0_arr[2075254]))
            (2007629 'move' tmp[2007608] arr[2007622])
            const-val arr[2007632]:[domain(1,int(64),false)] locale[1256547] "temp"
            (2007634 'move' arr[2007632](2007636 '.v' _iterator[2007571] F0_arr[2075254]))
            (2007639 '=' info[2007606] arr[2007632])
            (2007642 'noop')
            const-val call_tmp[2007643]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            val coerce_tmp[2007645]:domain(1,int(64),false)[1250995] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            const-val viewDom[2007647]:domain(1,int(64),false)[1250995] "temp"
            (2007649 'move' viewDom[2007647](2007651 '.v' _iterator[2007571] F1_viewDom[2075258]))
            (2007654 'move' coerce_tmp[2007645] viewDom[2007647])
            const-val viewDom[2007657]:domain(1,int(64),false)[1250995] "temp"
            (2007659 'move' viewDom[2007657](2007661 '.v' _iterator[2007571] F1_viewDom[2075258]))
            (2007664 'move' call_tmp[2007643](2007667 call dsiLow[1300497] viewDom[2007657]))
            const-val call_tmp[2007669]:int(64)[13] "dead at end of block" "maybe param" "temp"
            const-val arr[2007671]:[domain(1,int(64),false)] locale[1256547] "temp"
            (2007673 'move' arr[2007671](2007675 '.v' _iterator[2007571] F0_arr[2075254]))
            (2007678 'move' call_tmp[2007669](2007681 call getDataIndex[1300756] arr[2007671] call_tmp[2007643]))
            const-val first[2007684]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            (2007686 'move' first[2007684] call_tmp[2007669])
            const-val call_tmp[2007689]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            val coerce_tmp[2007691]:domain(1,int(64),false)[1250995] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            const-val viewDom[2007693]:domain(1,int(64),false)[1250995] "temp"
            (2007695 'move' viewDom[2007693](2007697 '.v' _iterator[2007571] F1_viewDom[2075258]))
            (2007700 'move' coerce_tmp[2007691] viewDom[2007693])
            (2007703 'move' call_tmp[2007689](2007706 call dsiLow[1300497] coerce_tmp[2007691]))
            const-val call_tmp[2007708]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            (2007710 'move' call_tmp[2007708](2007713 call chpl__idxToInt[1026977] call_tmp[2007689]))
            const-val call_tmp[2007715]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            (2007717 'move' call_tmp[2007715](2007720 call +[949727] call_tmp[2007708]))
            const-val call_tmp[2007722]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            val coerce_tmp[2007724]:domain(1,int(64),false)[1250995] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            const-val viewDom[2007726]:domain(1,int(64),false)[1250995] "temp"
            (2007728 'move' viewDom[2007726](2007730 '.v' _iterator[2007571] F1_viewDom[2075258]))
            (2007733 'move' coerce_tmp[2007724] viewDom[2007726])
            (2007736 'move' call_tmp[2007722](2007739 call chpl_intToIdx[1301926] coerce_tmp[2007724] call_tmp[2007715]))
            const-val call_tmp[2007742]:int(64)[13] "dead at end of block" "maybe param" "temp"
            (2007744 'move' call_tmp[2007742](2007747 call getDataIndex[1300756] info[2007606] call_tmp[2007722]))
            const-val second[2007750]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            (2007752 'move' second[2007750] call_tmp[2007742])
            const-val call_tmp[2007755]:int(64)[13] "dead at end of block" "maybe param" "temp"
            (2007757 'move' call_tmp[2007755](2007760 call -[440459] call_tmp[2007742] call_tmp[2007669]))
            const-val step[2007763]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            (2007765 'move' step[2007763] call_tmp[2007755])
            const-val call_tmp[2007768]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            val coerce_tmp[2007770]:domain(1,int(64),false)[1250995] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            const-val viewDom[2007772]:domain(1,int(64),false)[1250995] "temp"
            (2007774 'move' viewDom[2007772](2007776 '.v' _iterator[2007571] F1_viewDom[2075258]))
            (2007779 'move' coerce_tmp[2007770] viewDom[2007772])
            (2007782 'move' call_tmp[2007768](2007785 call dsiNumIndices[1263695] coerce_tmp[2007770]))
            const-val call_tmp[2007787]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            (2007789 'move' call_tmp[2007787](2007792 call -[962287] call_tmp[2007768]))
            const-val call_tmp[2007794]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            (2007796 'move' call_tmp[2007794](2007799 call *[441871] call_tmp[2007787] call_tmp[2007755]))
            const-val call_tmp[2007802]:int(64)[13] "dead at end of block" "maybe param" "temp"
            (2007804 'move' call_tmp[2007802](2007807 call +[439679] call_tmp[2007669] call_tmp[2007794]))
            const-val last[2007810]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            (2007812 'move' last[2007810] call_tmp[2007802])
            val _indexOfInterest[2007815]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[2007817]:_ic_chpl_direct_pos_stride_range_iter[1303058] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[2007819]:_ir_chpl_direct_pos_stride_range_iter[1303064] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[2007821]:_ir_chpl_direct_pos_stride_range_iter[1303064] "temp"
            (2007824 call chpl_direct_pos_stride_range_iter[1302013] call_tmp[2007669] call_tmp[2007802] call_tmp[2007755] ret_tmp[2007821])
            (2007829 'move' call_tmp[2007819] ret_tmp[2007821])
            (2007832 'move' _iterator[2007817](2007835 call _getIterator[1303073] call_tmp[2007819]))
            {
              val ret[2041574]:_ir_chpl_direct_pos_stride_range_iter[1303064] "dead after last mention" "RVV" "temp"
              val call_tmp[2041576]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val stride[2041741]:int(64)[13] "temp"
              (2041746 'move' stride[2041741](2041743 '.v' _iterator[2007817] F2_stride[2076798]))
              (2041579 call chpl_range_check_stride[1102894] stride[2041741])
              val call_tmp[2041581]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val default_arg_first[2041583]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val low[2041748]:int(64)[13] "temp"
              (2041753 'move' low[2041748](2041750 '.v' _iterator[2007817] F0_low[2076790]))
              (2041585 'move' default_arg_first[2041583](2041588 call chpl_checkIfRangeIterWillOverflow_default_first[1103259] low[2041748]))
              const-val default_arg_last[2041590]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val high[2041755]:int(64)[13] "temp"
              (2041760 'move' high[2041755](2041757 '.v' _iterator[2007817] F1_high[2076794]))
              (2041592 'move' default_arg_last[2041590](2041595 call chpl_checkIfRangeIterWillOverflow_default_last[1103287] high[2041755]))
              const-val _return_tmp_[2041597]:bool[10] "dead after last mention" "temp"
              const-val low[2041762]:int(64)[13] "temp"
              (2041767 'move' low[2041762](2041764 '.v' _iterator[2007817] F0_low[2076790]))
              const-val high[2041769]:int(64)[13] "temp"
              (2041774 'move' high[2041769](2041771 '.v' _iterator[2007817] F1_high[2076794]))
              const-val stride[2041776]:int(64)[13] "temp"
              (2041781 'move' stride[2041776](2041778 '.v' _iterator[2007817] F2_stride[2076798]))
              (2041599 'move' _return_tmp_[2041597](2041602 call chpl_checkIfRangeIterWillOverflow[1096137] low[2041762] high[2041769] stride[2041776] default_arg_first[2041583] default_arg_last[2041590] 1))
              val i[2041609]:int(64)[13] "dead at end of block" "insert auto destroy"
              val call_tmp[2041611]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (2041613 'move' i[2041609] 0)
              CForLoop[2041616] hazard
              {
                const-val yret[2041636]:int(64)[13] "dead after last mention" "YVV" "temp"
                (2041638 'move' yret[2041636] i[2041609])
                const-val _yieldedIndex[2041652]:int(64)[13] "temp"
                (2041739 'move' _yieldedIndex[2041652] i[2041609])
                {
                  const-val i[2041654]:int(64)[13] "const" "index var" "insert auto destroy"
                  (2041656 'move' i[2041654] _yieldedIndex[2041652])
                  ref yret[2041659]:_ref(locale)[948905] "dead after last mention" "YVV" "temp"
                  ref call_tmp[2041661]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[2041663]:_ref(_ddata(locale))[1255464] "dead after last mention" "temp"
                  (2041665 'move' _this_tmp_[2041663](2041668 call theData[1303311] info[2007606]))
                  val coerce_tmp[2041670]:_ddata(locale)[1255455] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (2041672 'move' coerce_tmp[2041670](2041674 'deref' _this_tmp_[2041663]))
                  (2041676 'move' call_tmp[2041661](2041679 call this[1303458] coerce_tmp[2041670] _yieldedIndex[2041652]))
                  ref _yieldedIndex[2041682]:_ref(locale)[948905] "temp"
                  (2041684 'move' _yieldedIndex[2041682] call_tmp[2041661])
                  {
                    ref elem[2041688]:_ref(locale)[948905] "index var" "insert auto destroy"
                    (2041690 'move' elem[2041688] _yieldedIndex[2041682])
                    ref yret[2041693]:_ref(locale)[948905] "dead after last mention" "YVV" "temp"
                    ref _yieldedIndex[2041695]:_ref(locale)[948905] "temp"
                    (2041697 'move' _yieldedIndex[2041695] elem[2041688])
                    {
                      ref i[2041701]:_ref(locale)[948905] "index var" "insert auto destroy"
                      (2041703 'move' i[2041701] _yieldedIndex[2041695])
                      ref yret[2041706]:_ref(locale)[948905] "dead after last mention" "YVV" "temp"
                      ref _yieldedIndex[2041708]:_ref(locale)[948905] "temp"
                      (2041710 'move' _yieldedIndex[2041708] i[2041701])
                      {
                        ref l[2041714]:_ref(locale)[948905] "index var" "insert auto destroy"
                        (2041716 'move' l[2041714] _yieldedIndex[2041708])
                        {
                          ref call_tmp[2041720]:_ref(BaseLocale)[982484] "dead after last mention" "maybe param" "temp"
                          (2041722 'move' call_tmp[2041720](2041725 call _instance[782816] l[2041714]))
                          val coerce_tmp[2041727]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (2041729 'move' coerce_tmp[2041727](2041731 'deref' call_tmp[2041720]))
                          (2041734 call chpl__delete[983352] coerce_tmp[2041727])
                        }
                        label _continueLabel[2041736]
                      }
                    }
                  }
                }
                {
                  const-val low[2041783]:int(64)[13] "temp"
                  (2041788 'move' low[2041783](2041785 '.v' _iterator[2007817] F0_low[2076790]))
                  (2041618 '=' i[2041609] low[2041783])
                }
                {
                  const-val high[2041790]:int(64)[13] "temp"
                  (2041795 'move' high[2041790](2041792 '.v' _iterator[2007817] F1_high[2076794]))
                  (2041622 '<=' i[2041609] high[2041790])
                }
                {
                  val call_tmp[2041626]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[2041628]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val stride[2041797]:int(64)[13] "temp"
                  (2041802 'move' stride[2041797](2041799 '.v' _iterator[2007817] F2_stride[2076798]))
                  (2041630 'move' call_tmp[2041628] stride[2041797])
                  const-val stride[2041804]:int(64)[13] "temp"
                  (2041809 'move' stride[2041804](2041806 '.v' _iterator[2007817] F2_stride[2076798]))
                  (2041633 '+=' i[2041609] stride[2041804])
                }
              }
              label _endchpl_direct_pos_stride_range_iter[2041648]
            }
            (2007898 call _freeIterator[1303246] _iterator[2007817])
            label _endchpl__serialViewIter[2007900]
          }
          (2007903 call _freeIterator[1303681] _iterator[2007571])
          label _endthese[2007905]
        }
        (1941144 call _freeIterator[1304286] _iterator[1941066])
        label _endthese[1941146]
      }
      label _breakLabel[89813]
      (1876855 call _freeIterator[1305037] _iterator[89808])
    }
    label _endchpl__deinit_LocaleModel[1887139]
    (1887147 call chpl__autoDestroy[1383553] call_tmp[632033])
    (1887144 call chpl__autoDestroy[1687721] chpl_emptyLocales[88795])
    (1887141 call chpl__autoDestroy[1657644] chpl_emptyLocaleSpace[88784])
    (513670 return _void[55])
  }
  function chpl_localeModel_sublocToExecutionSubloc[88746](const in arg full_subloc[88743]:int(32)[95]) : int(32)[95] "export" "local args" "resolved"
  {
    val ret[513377]:int(32)[95] "dead after last mention" "RVV" "temp"
    (513382 'move' ret[513377] full_subloc[88743])
    (513379 return ret[513377])
  }
  function chpl_localeModel_sublocMerge[88760](const in arg full_subloc[88757]:int(32)[95], const in arg execution_subloc[88763]:int(32)[95]) : int(32)[95] "export" "local args" "resolved"
  {
    val ret[513386]:int(32)[95] "dead after last mention" "RVV" "temp"
    (513391 'move' ret[513386] execution_subloc[88763])
    (513388 return ret[513386])
  }
  const-val chpl_emptyLocaleSpace[88784]:domain(1,int(64),false)[1252658] "dead at end of block" "const" "insert auto destroy"
  const-val chpl_emptyLocales[88795]:[domain(1,int(64),false)] locale[1287072] "dead at end of block" "const" "insert auto destroy" "unsafe"
  function LocaleModel[89195].init[88871](const in arg this[89201]:LocaleModel[89195], const  ref arg parent_loc[88868]:locale[28]) : void[4] "inline" "method" "primary method" "resolved" "no return value for void"
  {
    const-val call_tmp[632080]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (632083 'move' call_tmp[632080] rootLocaleInitialized[310])
    if call_tmp[632080]
    {
      (88877 call halt[154111] "Cannot create additional LocaleModel instances")
    }
    val super_tmp[460313]:AbstractLocaleModel[91502] "dead after last mention" "temporary of super field" "temp"
    (460315 'move' super_tmp[460313](460312 '.v' this[89201] super[355685]))
    (88891 call init[91481] super_tmp[460313] parent_loc[88868])
    val tmp[460318]:AbstractLocaleModel[91502] "dead after last mention" "temp" "type variable"
    val call_tmp[632092]:AbstractLocaleModel[91502] "dead at end of block" "maybe param" "temp"
    (632095 'move' call_tmp[632092](460329 'cast' AbstractLocaleModel[91502] this[89201]))
    val chpl__thisAsParent[460326]:AbstractLocaleModel[91502] "dead at end of block" "insert auto destroy" "temp"
    (541700 'move' chpl__thisAsParent[460326](1351501 call chpl__initCopy[1351503] call_tmp[632092]))
    (460332 'setcid' chpl__thisAsParent[460326])
    const-val call_tmp[632097]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (632100 'move' call_tmp[632097](88896 'cast' int(64)[13] chpl_nodeID[208207]))
    val tmp[460334]:int(64)[13] "dead after last mention" "temp"
    (460337 'move' tmp[460334] call_tmp[632097])
    (460339 '.=' this[89201] _node_id[88803] tmp[460334])
    val tmp[460343]:string[26] "dead after last mention" "temp"
    (1351868 call init[30763] tmp[460343])
    (460348 '.=' this[89201] local_name[88808] tmp[460343])
    (460353 'setcid' this[89201])
    (88910 call setup[89183] this[89201])
    (513395 return _void[55])
  }
  function LocaleModel[89195].getChildCount[89027](const in arg this[89237]:LocaleModel[89195]) : int(64)[13] "method" "primary method" "method overrides" "resolved" "virtual"
  {
    val ret[513475]:int(64)[13] "dead after last mention" "RVV" "temp"
    (513480 'move' ret[513475] 0)
    (513477 return ret[513475])
  }
  function LocaleModel[89195].getChild[89088](const in arg this[89245]:LocaleModel[89195], const in arg idx[89085]:int(64)[13], ref arg _retArg[1876374]:_ref(locale)[948905]) : void[4] "fn returns via _retArg" "method" "primary method" "method overrides" "resolved" "unsafe" "virtual"
  {
    const-val ret[513498]:locale[28] "dead after last mention" "RVV" "temp"
    (89110 call halt[154111] "requesting a child from a flat LocaleModel locale")
    const-val tmp[89114]:locale[28] "dead at end of block" "insert auto destroy"
    (1789702 call init[90003] tmp[89114])
    (1789700 'move' ret[513498] tmp[89114])
    gotoReturn _end_getChild[513496] _end_getChild[513496]
    label _end_getChild[513496]
    (1876376 '=' _retArg[1876374] ret[513498])
    (1876378 return _void[55])
  }
  function LocaleModel[89195].setup[89183](const in arg this[89257]:LocaleModel[89195]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[632157]:_ref(string)[938000] "dead after last mention" "maybe param" "temp"
    (632160 'move' call_tmp[632157](377749 call local_name[781132] this[89257]))
    val _formal_tmp_out_local_name[1351528]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    (89189 call helpSetupLocaleFlat[208865] this[89257] _formal_tmp_out_local_name[1351528])
    (1351530 call =[38272] call_tmp[632157] _formal_tmp_out_local_name[1351528])
    (1876841 call chpl__autoDestroy[1562275] _formal_tmp_out_local_name[1351528])
    (513531 return _void[55])
  }
  function LocaleModel[89195].local_name[781132](const in arg this[781136]:LocaleModel[89195]) ref : _ref(string)[938000] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[781146]:_ref(string)[938000] "dead after last mention" "RVV" "temp"
    ref call_tmp[781153]:_ref(string)[938000] "dead after last mention" "maybe param" "temp"
    (781156 'move' call_tmp[781153](781140 '.' this[781136] local_name[88808]))
    (781151 'move' ret[781146] call_tmp[781153])
    (781148 return ret[781146])
  }
  function LocaleModel[89195].deinit[781158](const in arg this[781162]:LocaleModel[89195]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[1848142]
    ref _field_destructor_tmp_[1848140]:_ref(string)[938000] "temp"
    (1848147 'move' _field_destructor_tmp_[1848140](1848144 '.' this[781162] local_name[88808]))
    (1848149 call deinit[30834] _field_destructor_tmp_[1848140])
    val _parent_destructor_tmp_[1848152]:AbstractLocaleModel[91502] "temp"
    (1848157 'move' _parent_destructor_tmp_[1848152](1848153 'cast' AbstractLocaleModel[91502] this[781162]))
    (1848159 call deinit[784102] _parent_destructor_tmp_[1848152])
    (781170 return _void[55])
  }
  function _new[1351879](const  ref arg parent_loc[1351888]:locale[28]) : LocaleModel[89195] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val _formal_type_tmp_[1839117]:LocaleModel[89195] "temp"
    val ret[1351921]:LocaleModel[89195] "dead after last mention" "RVV" "temp"
    val initTemp[1351881]:LocaleModel[89195] "dead after last mention" "temp"
    const-val call_tmp[1351928]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1351931 'move' call_tmp[1351928](1351940 'sizeof_bundle' LocaleModel[89195]))
    const-val cast_tmp[1351943]:c_void_ptr[149] "dead after last mention" "temp"
    (1351945 'move' cast_tmp[1351943](1351896 call chpl_here_alloc[187788] call_tmp[1351928] 64))
    (1351899 'move' initTemp[1351881](1351947 'cast' LocaleModel[89195] cast_tmp[1351943]))
    (1351901 'setcid' initTemp[1351881])
    (1351882 call init[88871] initTemp[1351881] parent_loc[1351888])
    val tmp[1351903]:LocaleModel[89195] "dead after last mention" "temp"
    (1351910 'move' tmp[1351903] initTemp[1351881])
    (1351926 'move' ret[1351921] tmp[1351903])
    (1351923 return ret[1351921])
  }
  type LocaleModel[89195] val super[355685]:AbstractLocaleModel[91502] "super class" const-val _node_id[88803]:int(64)[13] "const" val local_name[88808]:string[26]
  function RootLocale[89694].init[89297](const in arg this[89696]:RootLocale[89694]) : void[4] "inline" "method" "primary method" "resolved" "no return value for void"
  {
    val super_tmp[460355]:AbstractRootLocale[92012] "dead after last mention" "temporary of super field" "temp"
    (460357 'move' super_tmp[460355](460354 '.v' this[89696] super[355689]))
    (89305 call init[91544] super_tmp[460355] nilLocale[89942])
    val tmp[460360]:AbstractRootLocale[92012] "dead after last mention" "temp" "type variable"
    val call_tmp[632169]:AbstractRootLocale[92012] "dead at end of block" "maybe param" "temp"
    (632172 'move' call_tmp[632169](460371 'cast' AbstractRootLocale[92012] this[89696]))
    val chpl__thisAsParent[460368]:AbstractRootLocale[92012] "dead at end of block" "insert auto destroy" "temp"
    (541704 'move' chpl__thisAsParent[460368](1305245 call chpl__initCopy[986349] call_tmp[632169]))
    (460374 'setcid' chpl__thisAsParent[460368])
    ref call_tmp[632174]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
    (632177 'move' call_tmp[632174](377758 '.' this[89696] nPUsPhysAcc[90699]))
    (89310 call =[435370] call_tmp[632174] 0)
    ref call_tmp[632179]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
    (632182 'move' call_tmp[632179](377763 '.' this[89696] nPUsPhysAll[90704]))
    (89315 call =[435370] call_tmp[632179] 0)
    ref call_tmp[632184]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
    (632187 'move' call_tmp[632184](377768 '.' this[89696] nPUsLogAcc[90689]))
    (89320 call =[435370] call_tmp[632184] 0)
    ref call_tmp[632189]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
    (632192 'move' call_tmp[632189](377773 '.' this[89696] nPUsLogAll[90694]))
    (89325 call =[435370] call_tmp[632189] 0)
    ref call_tmp[632194]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
    (632197 'move' call_tmp[632194](377778 '.' this[89696] maxTaskPar[90746]))
    (89330 call =[435370] call_tmp[632194] 0)
    const-val call_tmp[632199]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (632202 'move' call_tmp[632199](460383 call -[962287] numLocales[209892]))
    const-val call_tmp[632204]:range(int(64),bounded,false)[1026875] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1865136]:range(int(64),bounded,false)[1026875] "temp"
    (460380 call chpl_build_bounded_range[455180] 0 call_tmp[632199] ret_tmp[1865136])
    (1865139 'move' call_tmp[632204] ret_tmp[1865136])
    const-val call_tmp[632209]:domain(1,int(64),false)[1252658] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[1868924]:domain(1,int(64),false)[1252658] "temp"
    (460378 call chpl__buildDomainExpr[1244729] call_tmp[632204] ret_tmp[1868924])
    (1868927 'move' call_tmp[632209] ret_tmp[1868924])
    const-val call_tmp[632214]:_RuntimeTypeInfo[1253734] "dead after last mention" "maybe param" "temp"
    val default_arg_idxType[1305261]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp" "type variable"
    (632217 'move' call_tmp[632214](460389 call chpl__buildDomainRuntimeType[1246343] defaultDist[94053]))
    val tmp[460386]:domain(1,int(64),false)[1252658] "dead after last mention" "temp"
    const-val init_coerce_tmp[1305279]:domain(1,int(64),false)[1252658] "dead after last mention" "temp"
    const-val ret_tmp[1870842]:domain(1,int(64),false)[1252658] "temp"
    (1305289 call chpl__coerceMove[1287327] call_tmp[632214] call_tmp[632209] ret_tmp[1870842])
    (1870845 'move' init_coerce_tmp[1305279] ret_tmp[1870842])
    (460392 'move' tmp[460386] init_coerce_tmp[1305279])
    (460394 '.=' this[89696] myLocaleSpace[89280] tmp[460386])
    (1876844 call chpl__autoDestroy[1383553] call_tmp[632204])
    val tmp[460398]:[domain(1,int(64),false)] locale[1287072] "dead after last mention" "temp"
    ref call_tmp[632219]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252684] "dead after last mention" "maybe param" "temp"
    (632222 'move' call_tmp[632219](460412 '.' this[89696] myLocaleSpace[89280]))
    ref call_tmp[632224]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252684] "dead after last mention" "maybe param" "temp"
    (632227 'move' call_tmp[632224](460403 call chpl__ensureDomainExpr[1254035] call_tmp[632219]))
    const-val call_tmp[632229]:_RuntimeTypeInfo[1287305] "dead after last mention" "expr temp" "maybe param" "temp"
    (632232 'move' call_tmp[632229](460401 call chpl__buildArrayRuntimeType[1254054] call_tmp[632224]))
    const-val _runtime_type_tmp_[1305298]:domain(1,int(64),false)[1252658] "dead after last mention" "temp"
    (1305303 'move' _runtime_type_tmp_[1305298](1837572 '.v' call_tmp[632229] dom[1287306]))
    const-val ret_tmp[1870998]:[domain(1,int(64),false)] locale[1287072] "temp"
    (1305296 call chpl__convertRuntimeTypeToValue[1297752] _runtime_type_tmp_[1305298] ret_tmp[1870998])
    (1871001 'move' tmp[460398] ret_tmp[1870998])
    (460408 '.=' this[89696] myLocales[89291] tmp[460398])
    (460415 'setcid' this[89696])
    (513533 return _void[55])
  }
  function RootLocale[89694].setup[89337](const in arg this[89700]:RootLocale[89694]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    (89342 call helpSetupRootLocaleFlat[208417] this[89700])
    (513535 return _void[55])
  }
  function RootLocale[89694].getChildCount[89428](const in arg this[89724]:RootLocale[89694]) : int(64)[13] "method" "primary method" "method overrides" "resolved" "virtual"
  {
    val ret[513577]:int(64)[13] "dead after last mention" "RVV" "temp"
    ref call_tmp[632260]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252684] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (632263 'move' call_tmp[632260](89433 call myLocaleSpace[781198] this[89724]))
    const-val call_tmp[632267]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (632270 'move' call_tmp[632267](89436 call size[1411414] call_tmp[632260]))
    (513582 'move' ret[513577] call_tmp[632267])
    (513579 return ret[513577])
  }
  function RootLocale[89694].getChild[89514](const in arg this[89736]:RootLocale[89694], const in arg idx[89511]:int(64)[13], ref arg _retArg[1876358]:_ref(locale)[948905]) : void[4] "fn returns via _retArg" "method" "primary method" "method overrides" "resolved" "virtual"
  {
    const-val ret[513609]:locale[28] "dead after last mention" "RVV" "temp"
    ref call_tmp[632288]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1789708]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287098] "dead after last mention" "temp"
    (1789710 'move' _this_tmp_[1789708](89519 call myLocales[781224] this[89736]))
    (632291 'move' call_tmp[632288](1789716 call this[1347443] _this_tmp_[1789708] idx[89511]))
    (513614 'move' ret[513609](1876362 call chpl__initCopy[1562294] call_tmp[632288]))
    (1876360 '=' _retArg[1876358] ret[513609])
    (1876364 return _void[55])
  }
  function RootLocale[89694].getDefaultLocaleArray[89596](const in arg this[89748]:RootLocale[89694]) const ref : _ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287098] "method" "primary method" "method overrides" "resolved"
  {
    ref ret[513641]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287098] "dead after last mention" "RVV" "temp"
    ref call_tmp[632309]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287098] "dead after last mention" "maybe param" "temp"
    (632312 'move' call_tmp[632309](377800 call myLocales[781224] this[89748]))
    (513646 'move' ret[513641] call_tmp[632309])
    (513643 return ret[513641])
  }
  function RootLocale[89694].localeIDtoLocale[89610](const in arg this[89752]:RootLocale[89694], const  ref arg id[89607]:chpl_localeID_t[209352], ref arg _retArg[1876366]:_ref(locale)[948905]) : void[4] "fn returns via _retArg" "method" "primary method" "method overrides" "resolved" "virtual"
  {
    const-val ret[513650]:locale[28] "dead after last mention" "RVV" "temp"
    const-val call_tmp[632316]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (632319 'move' call_tmp[632316](89616 call chpl_rt_nodeFromLocaleID[209446] id[89607]))
    ref call_tmp[632321]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1789754]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287098] "dead after last mention" "temp"
    (1789756 'move' _this_tmp_[1789754](377806 call myLocales[781224] this[89752]))
    const-val coerce_tmp[1791072]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1791078 'move' coerce_tmp[1791072](1791074 'cast' int(64)[13] call_tmp[632316]))
    const-val coerce_tmp[1791080]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1791086 'move' coerce_tmp[1791080](1791082 'cast' int(64)[13] call_tmp[632316]))
    (632324 'move' call_tmp[632321](1791068 call this[1347443] _this_tmp_[1789754] coerce_tmp[1791080]))
    (513655 'move' ret[513650](1876370 call chpl__initCopy[1562294] call_tmp[632321]))
    (1876368 '=' _retArg[1876366] ret[513650])
    (1876372 return _void[55])
  }
  function RootLocale[89694].deinit[89626](const in arg this[89756]:RootLocale[89694]) : void[4] "destructor" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    {
      ref _indexOfInterest[89657]:_ref(locale)[948905] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[89658]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304352] "dead at end of block" "expr temp" "temp"
      ref call_tmp[632328]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287098] "dead at end of block" "maybe param" "temp"
      (632331 'move' call_tmp[632328](377812 call myLocales[781224] this[89756]))
      (89667 'move' _iterator[89658](89665 call _getIterator[1298170] call_tmp[632328]))
      {
        val ret[1940932]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304358] "dead after last mention" "RVV" "temp"
        ref _indexOfInterest[1940934]:_ref(locale)[948905] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1940936]:_ic_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303747] "dead at end of block" "expr temp" "temp"
        val call_tmp[1940938]:[domain(1,int(64),false)] locale[1256547] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val this[1941054]:[domain(1,int(64),false)] locale[1287072] "temp"
        (1941059 'move' this[1941054](1941056 '.v' _iterator[89658] F0_this[2071241]))
        (1940940 'move' call_tmp[1940938](1940943 call _value[1287127] this[1941054]))
        const-val call_tmp[1940945]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303753] "dead at end of block" "maybe param" "temp"
        val coerce_tmp[1940947]:[domain(1,int(64),false)] locale[1256547] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1940949 'move' coerce_tmp[1940947] call_tmp[1940938])
        const-val default_arg_tasksPerLocale[1940952]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1940954 'move' default_arg_tasksPerLocale[1940952](1940957 call these_default_tasksPerLocale[1298440] call_tmp[1940938]))
        const-val default_arg_ignoreRunning[1940959]:bool[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1940961 'move' default_arg_ignoreRunning[1940959](1940964 call these_default_ignoreRunning[1298471] coerce_tmp[1940947]))
        const-val default_arg_minIndicesPerTask[1940966]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1940968 'move' default_arg_minIndicesPerTask[1940966](1940971 call these_default_minIndicesPerTask[1298502] coerce_tmp[1940947]))
        const-val ret_tmp[1940973]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303753] "temp"
        (1940976 call these[1298324] coerce_tmp[1940947] default_arg_tasksPerLocale[1940952] default_arg_ignoreRunning[1940959] default_arg_minIndicesPerTask[1940966] ret_tmp[1940973])
        (1940982 'move' call_tmp[1940945] ret_tmp[1940973])
        (1940985 'move' _iterator[1940936](1940988 call _getIterator[1303762] call_tmp[1940945]))
        {
          val ret[2007163]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303753] "dead after last mention" "RVV" "temp"
          ref _indexOfInterest[2007165]:_ref(locale)[948905] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[2007167]:_ic_chpl__serialViewIter[1303497] "dead at end of block" "expr temp" "temp"
          ref call_tmp[2007169]:_ref(domain(1,int(64),false))[1251010] "dead at end of block" "maybe param" "temp"
          const-val this[2007552]:[domain(1,int(64),false)] locale[1256547] "temp"
          (2007557 'move' this[2007552](2007554 '.v' _iterator[1940936] F0_this[2073349]))
          (2007171 'move' call_tmp[2007169](2007174 call dom[1258080] this[2007552]))
          const-val call_tmp[2007176]:_ir_chpl__serialViewIter[1303503] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[2007178]:domain(1,int(64),false)[1250995] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2007180 'move' coerce_tmp[2007178](2007182 'deref' call_tmp[2007169]))
          const-val ret_tmp[2007184]:_ir_chpl__serialViewIter[1303503] "temp"
          const-val this[2007559]:[domain(1,int(64),false)] locale[1256547] "temp"
          (2007564 'move' this[2007559](2007561 '.v' _iterator[1940936] F0_this[2073349]))
          (2007187 call chpl__serialViewIter[1298536] this[2007559] coerce_tmp[2007178] ret_tmp[2007184])
          (2007191 'move' call_tmp[2007176] ret_tmp[2007184])
          (2007194 'move' _iterator[2007167](2007197 call _getIterator[1303512] call_tmp[2007176]))
          {
            val ret[2007200]:_ir_chpl__serialViewIter[1303503] "dead after last mention" "RVV" "temp"
            val info[2007202]:[domain(1,int(64),false)] locale[1256547] "dead at end of block" "insert auto destroy"
            val tmp[2007204]:[domain(1,int(64),false)] locale[1256547] "dead at end of block" "expr temp" "insert auto destroy" "maybe copy elided" "maybe param" "temp"
            val tmp[2007206]:[domain(1,int(64),false)] locale[1256547] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val arr[2007208]:[domain(1,int(64),false)] locale[1256547] "temp"
            (2007210 'move' arr[2007208](2007212 '.v' _iterator[2007167] F0_arr[2075254]))
            (2007215 'move' tmp[2007206] arr[2007208])
            const-val arr[2007218]:[domain(1,int(64),false)] locale[1256547] "temp"
            (2007220 'move' arr[2007218](2007222 '.v' _iterator[2007167] F0_arr[2075254]))
            (2007225 'move' tmp[2007204] arr[2007218])
            const-val arr[2007228]:[domain(1,int(64),false)] locale[1256547] "temp"
            (2007230 'move' arr[2007228](2007232 '.v' _iterator[2007167] F0_arr[2075254]))
            (2007235 '=' info[2007202] arr[2007228])
            (2007238 'noop')
            const-val call_tmp[2007239]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            val coerce_tmp[2007241]:domain(1,int(64),false)[1250995] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            const-val viewDom[2007243]:domain(1,int(64),false)[1250995] "temp"
            (2007245 'move' viewDom[2007243](2007247 '.v' _iterator[2007167] F1_viewDom[2075258]))
            (2007250 'move' coerce_tmp[2007241] viewDom[2007243])
            const-val viewDom[2007253]:domain(1,int(64),false)[1250995] "temp"
            (2007255 'move' viewDom[2007253](2007257 '.v' _iterator[2007167] F1_viewDom[2075258]))
            (2007260 'move' call_tmp[2007239](2007263 call dsiLow[1300497] viewDom[2007253]))
            const-val call_tmp[2007265]:int(64)[13] "dead at end of block" "maybe param" "temp"
            const-val arr[2007267]:[domain(1,int(64),false)] locale[1256547] "temp"
            (2007269 'move' arr[2007267](2007271 '.v' _iterator[2007167] F0_arr[2075254]))
            (2007274 'move' call_tmp[2007265](2007277 call getDataIndex[1300756] arr[2007267] call_tmp[2007239]))
            const-val first[2007280]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            (2007282 'move' first[2007280] call_tmp[2007265])
            const-val call_tmp[2007285]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            val coerce_tmp[2007287]:domain(1,int(64),false)[1250995] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            const-val viewDom[2007289]:domain(1,int(64),false)[1250995] "temp"
            (2007291 'move' viewDom[2007289](2007293 '.v' _iterator[2007167] F1_viewDom[2075258]))
            (2007296 'move' coerce_tmp[2007287] viewDom[2007289])
            (2007299 'move' call_tmp[2007285](2007302 call dsiLow[1300497] coerce_tmp[2007287]))
            const-val call_tmp[2007304]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            (2007306 'move' call_tmp[2007304](2007309 call chpl__idxToInt[1026977] call_tmp[2007285]))
            const-val call_tmp[2007311]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            (2007313 'move' call_tmp[2007311](2007316 call +[949727] call_tmp[2007304]))
            const-val call_tmp[2007318]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            val coerce_tmp[2007320]:domain(1,int(64),false)[1250995] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            const-val viewDom[2007322]:domain(1,int(64),false)[1250995] "temp"
            (2007324 'move' viewDom[2007322](2007326 '.v' _iterator[2007167] F1_viewDom[2075258]))
            (2007329 'move' coerce_tmp[2007320] viewDom[2007322])
            (2007332 'move' call_tmp[2007318](2007335 call chpl_intToIdx[1301926] coerce_tmp[2007320] call_tmp[2007311]))
            const-val call_tmp[2007338]:int(64)[13] "dead at end of block" "maybe param" "temp"
            (2007340 'move' call_tmp[2007338](2007343 call getDataIndex[1300756] info[2007202] call_tmp[2007318]))
            const-val second[2007346]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            (2007348 'move' second[2007346] call_tmp[2007338])
            const-val call_tmp[2007351]:int(64)[13] "dead at end of block" "maybe param" "temp"
            (2007353 'move' call_tmp[2007351](2007356 call -[440459] call_tmp[2007338] call_tmp[2007265]))
            const-val step[2007359]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            (2007361 'move' step[2007359] call_tmp[2007351])
            const-val call_tmp[2007364]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            val coerce_tmp[2007366]:domain(1,int(64),false)[1250995] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            const-val viewDom[2007368]:domain(1,int(64),false)[1250995] "temp"
            (2007370 'move' viewDom[2007368](2007372 '.v' _iterator[2007167] F1_viewDom[2075258]))
            (2007375 'move' coerce_tmp[2007366] viewDom[2007368])
            (2007378 'move' call_tmp[2007364](2007381 call dsiNumIndices[1263695] coerce_tmp[2007366]))
            const-val call_tmp[2007383]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            (2007385 'move' call_tmp[2007383](2007388 call -[962287] call_tmp[2007364]))
            const-val call_tmp[2007390]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            (2007392 'move' call_tmp[2007390](2007395 call *[441871] call_tmp[2007383] call_tmp[2007351]))
            const-val call_tmp[2007398]:int(64)[13] "dead at end of block" "maybe param" "temp"
            (2007400 'move' call_tmp[2007398](2007403 call +[439679] call_tmp[2007265] call_tmp[2007390]))
            const-val last[2007406]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            (2007408 'move' last[2007406] call_tmp[2007398])
            val _indexOfInterest[2007411]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[2007413]:_ic_chpl_direct_pos_stride_range_iter[1303058] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[2007415]:_ir_chpl_direct_pos_stride_range_iter[1303064] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[2007417]:_ir_chpl_direct_pos_stride_range_iter[1303064] "temp"
            (2007420 call chpl_direct_pos_stride_range_iter[1302013] call_tmp[2007265] call_tmp[2007398] call_tmp[2007351] ret_tmp[2007417])
            (2007425 'move' call_tmp[2007415] ret_tmp[2007417])
            (2007428 'move' _iterator[2007413](2007431 call _getIterator[1303073] call_tmp[2007415]))
            {
              val ret[2041329]:_ir_chpl_direct_pos_stride_range_iter[1303064] "dead after last mention" "RVV" "temp"
              val call_tmp[2041331]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val stride[2041503]:int(64)[13] "temp"
              (2041508 'move' stride[2041503](2041505 '.v' _iterator[2007413] F2_stride[2076798]))
              (2041334 call chpl_range_check_stride[1102894] stride[2041503])
              val call_tmp[2041336]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val default_arg_first[2041338]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val low[2041510]:int(64)[13] "temp"
              (2041515 'move' low[2041510](2041512 '.v' _iterator[2007413] F0_low[2076790]))
              (2041340 'move' default_arg_first[2041338](2041343 call chpl_checkIfRangeIterWillOverflow_default_first[1103259] low[2041510]))
              const-val default_arg_last[2041345]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val high[2041517]:int(64)[13] "temp"
              (2041522 'move' high[2041517](2041519 '.v' _iterator[2007413] F1_high[2076794]))
              (2041347 'move' default_arg_last[2041345](2041350 call chpl_checkIfRangeIterWillOverflow_default_last[1103287] high[2041517]))
              const-val _return_tmp_[2041352]:bool[10] "dead after last mention" "temp"
              const-val low[2041524]:int(64)[13] "temp"
              (2041529 'move' low[2041524](2041526 '.v' _iterator[2007413] F0_low[2076790]))
              const-val high[2041531]:int(64)[13] "temp"
              (2041536 'move' high[2041531](2041533 '.v' _iterator[2007413] F1_high[2076794]))
              const-val stride[2041538]:int(64)[13] "temp"
              (2041543 'move' stride[2041538](2041540 '.v' _iterator[2007413] F2_stride[2076798]))
              (2041354 'move' _return_tmp_[2041352](2041357 call chpl_checkIfRangeIterWillOverflow[1096137] low[2041524] high[2041531] stride[2041538] default_arg_first[2041338] default_arg_last[2041345] 1))
              val i[2041364]:int(64)[13] "dead at end of block" "insert auto destroy"
              val call_tmp[2041366]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (2041368 'move' i[2041364] 0)
              CForLoop[2041371] hazard
              {
                const-val yret[2041391]:int(64)[13] "dead after last mention" "YVV" "temp"
                (2041393 'move' yret[2041391] i[2041364])
                const-val _yieldedIndex[2041407]:int(64)[13] "temp"
                (2041501 'move' _yieldedIndex[2041407] i[2041364])
                {
                  const-val i[2041409]:int(64)[13] "const" "index var" "insert auto destroy"
                  (2041411 'move' i[2041409] _yieldedIndex[2041407])
                  ref yret[2041414]:_ref(locale)[948905] "dead after last mention" "YVV" "temp"
                  ref call_tmp[2041416]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[2041418]:_ref(_ddata(locale))[1255464] "dead after last mention" "temp"
                  (2041420 'move' _this_tmp_[2041418](2041423 call theData[1303311] info[2007202]))
                  val coerce_tmp[2041425]:_ddata(locale)[1255455] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (2041427 'move' coerce_tmp[2041425](2041429 'deref' _this_tmp_[2041418]))
                  (2041431 'move' call_tmp[2041416](2041434 call this[1303458] coerce_tmp[2041425] _yieldedIndex[2041407]))
                  ref _yieldedIndex[2041437]:_ref(locale)[948905] "temp"
                  (2041439 'move' _yieldedIndex[2041437] call_tmp[2041416])
                  {
                    ref elem[2041443]:_ref(locale)[948905] "index var" "insert auto destroy"
                    (2041445 'move' elem[2041443] _yieldedIndex[2041437])
                    ref yret[2041448]:_ref(locale)[948905] "dead after last mention" "YVV" "temp"
                    ref _yieldedIndex[2041450]:_ref(locale)[948905] "temp"
                    (2041452 'move' _yieldedIndex[2041450] elem[2041443])
                    {
                      ref i[2041456]:_ref(locale)[948905] "index var" "insert auto destroy"
                      (2041458 'move' i[2041456] _yieldedIndex[2041450])
                      ref yret[2041461]:_ref(locale)[948905] "dead after last mention" "YVV" "temp"
                      ref _yieldedIndex[2041463]:_ref(locale)[948905] "temp"
                      (2041465 'move' _yieldedIndex[2041463] i[2041456])
                      {
                        ref loc[2041469]:_ref(locale)[948905] "index var" "insert auto destroy"
                        (2041471 'move' loc[2041469] _yieldedIndex[2041463])
                        {
                          const-val tmp[2041475]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
                          const-val call_tmp[2041477]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
                          val _locale_tmp_[2041479]:BaseLocale[91204] "dead after last mention" "temp"
                          (2041481 'move' _locale_tmp_[2041479](2041484 call _value[89984] loc[2041469]))
                          (2041486 'move' call_tmp[2041477](2041488 '_wide_get_locale' _locale_tmp_[2041479]))
                          (2041490 'move' tmp[2041475] call_tmp[2041477])
                          val rvfDerefTmp[2145171]:locale[28] "temp"
                          (2145175 'move' rvfDerefTmp[2145171](2145173 'deref' loc[2041469]))
                          val isdirect[2147515]:bool[10] "temp"
                          (2147520 'move' isdirect[2147515](2147517 call chpl_doDirectExecuteOn[187469] tmp[2041475]))
                          if isdirect[2147515]
                          {
                            (2147524 call on_fn[934628] rvfDerefTmp[2145171])
                          }
                          {
                            val _args_foron_fn[2147539]:_class_localson_fn[2147531] "temp"
                            (2147543 'move' _args_foron_fn[2147539](2147541 'stack allocate class' _class_localson_fn[2147531]))
                            (2147545 '.=' _args_foron_fn[2147539] _0_tmp[2147534] tmp[2041475])
                            (2147549 '.=' _args_foron_fn[2147539] _1_rvfDerefTmp[2147536] rvfDerefTmp[2145171])
                            val _args_vforon_fn[2147553]:c_void_ptr[149] "temp"
                            (2147557 'move' _args_vforon_fn[2147553](2147555 'cast_to_void_star' _args_foron_fn[2147539]))
                            val _args_sizeon_fn[2147559]:int(64)[13] "temp"
                            (2147563 'move' _args_sizeon_fn[2147559](2147561 'sizeof_bundle' _class_localson_fn[2147531]))
                            on(2147595 call wrapon_fn[2147565] tmp[2041475] _args_vforon_fn[2147553] _args_sizeon_fn[2147559] _args_foron_fn[2147539])
                          }
                          {
                          }
                        }
                        label _continueLabel[2041498]
                      }
                    }
                  }
                }
                {
                  const-val low[2041545]:int(64)[13] "temp"
                  (2041550 'move' low[2041545](2041547 '.v' _iterator[2007413] F0_low[2076790]))
                  (2041373 '=' i[2041364] low[2041545])
                }
                {
                  const-val high[2041552]:int(64)[13] "temp"
                  (2041557 'move' high[2041552](2041554 '.v' _iterator[2007413] F1_high[2076794]))
                  (2041377 '<=' i[2041364] high[2041552])
                }
                {
                  val call_tmp[2041381]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[2041383]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val stride[2041559]:int(64)[13] "temp"
                  (2041564 'move' stride[2041559](2041561 '.v' _iterator[2007413] F2_stride[2076798]))
                  (2041385 'move' call_tmp[2041383] stride[2041559])
                  const-val stride[2041566]:int(64)[13] "temp"
                  (2041571 'move' stride[2041566](2041568 '.v' _iterator[2007413] F2_stride[2076798]))
                  (2041388 '+=' i[2041364] stride[2041566])
                }
              }
              label _endchpl_direct_pos_stride_range_iter[2041403]
            }
            (2007494 call _freeIterator[1303246] _iterator[2007413])
            label _endchpl__serialViewIter[2007496]
          }
          (2007499 call _freeIterator[1303681] _iterator[2007167])
          label _endthese[2007501]
        }
        (1941014 call _freeIterator[1304286] _iterator[1940936])
        label _endthese[1941016]
      }
      label _breakLabel[89663]
      (1876850 call _freeIterator[1305037] _iterator[89658])
    }
    label _enddeinit[1847930]
    const-val _field_destructor_tmp_[1847928]:[domain(1,int(64),false)] locale[1287072] "temp"
    (1847935 'move' _field_destructor_tmp_[1847928](1847932 '.v' this[89756] myLocales[89291]))
    (1847937 call chpl__autoDestroy[1687721] _field_destructor_tmp_[1847928])
    const-val _field_destructor_tmp_[1847940]:domain(1,int(64),false)[1252658] "temp"
    (1847945 'move' _field_destructor_tmp_[1847940](1847942 '.v' this[89756] myLocaleSpace[89280]))
    (1847947 call chpl__autoDestroy[1657644] _field_destructor_tmp_[1847940])
    val _parent_destructor_tmp_[1847950]:AbstractRootLocale[92012] "temp"
    (1847955 'move' _parent_destructor_tmp_[1847950](1847951 'cast' AbstractRootLocale[92012] this[89756]))
    (1847957 call deinit[784174] _parent_destructor_tmp_[1847950])
    (513657 return _void[55])
  }
  function RootLocale[89694].myLocaleSpace[781198](const in arg this[781202]:RootLocale[89694]) const ref : _ref(_domain(unmanaged domain(1,int(64),false)))[1252684] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to a const" "resolved"
  {
    ref ret[781212]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252684] "dead after last mention" "RVV" "temp"
    ref call_tmp[781219]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252684] "dead after last mention" "maybe param" "temp"
    (781222 'move' call_tmp[781219](781206 '.' this[781202] myLocaleSpace[89280]))
    (781217 'move' ret[781212] call_tmp[781219])
    (781214 return ret[781212])
  }
  function RootLocale[89694].myLocales[781224](const in arg this[781228]:RootLocale[89694]) ref : _ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287098] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[781238]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287098] "dead after last mention" "RVV" "temp"
    ref call_tmp[781245]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287098] "dead after last mention" "maybe param" "temp"
    (781248 'move' call_tmp[781245](781232 '.' this[781228] myLocales[89291]))
    (781243 'move' ret[781238] call_tmp[781245])
    (781240 return ret[781238])
  }
  function _new[1305317]() : RootLocale[89694] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val _formal_type_tmp_[1839061]:RootLocale[89694] "temp"
    val ret[1305356]:RootLocale[89694] "dead after last mention" "RVV" "temp"
    val initTemp[1305319]:RootLocale[89694] "dead after last mention" "temp"
    const-val call_tmp[1305363]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1305366 'move' call_tmp[1305363](1305375 'sizeof_bundle' RootLocale[89694]))
    const-val cast_tmp[1305378]:c_void_ptr[149] "dead after last mention" "temp"
    (1305380 'move' cast_tmp[1305378](1305331 call chpl_here_alloc[187788] call_tmp[1305363] 54))
    (1305334 'move' initTemp[1305319](1305382 'cast' RootLocale[89694] cast_tmp[1305378]))
    (1305336 'setcid' initTemp[1305319])
    (1305320 call init[89297] initTemp[1305319])
    val tmp[1305338]:RootLocale[89694] "dead after last mention" "temp"
    (1305345 'move' tmp[1305338] initTemp[1305319])
    (1305361 'move' ret[1305356] tmp[1305338])
    (1305358 return ret[1305356])
  }
  type RootLocale[89694] val super[355689]:AbstractRootLocale[92012] "super class" const myLocaleSpace[89280]:domain(1,int(64),false)[1252658] "const" val myLocales[89291]:[domain(1,int(64),false)] locale[1287072] "unsafe"
  const-val call_tmp[632033]:range(int(64),bounded,false)[1026875] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
  const-val call_tmp[632038]:domain(1,int(64),false)[1252658] "dead at end of block" "maybe param" "temp"
  const-val init_coerce_tmp[1254029]:domain(1,int(64),false)[1252658] "dead at end of block" "temp"
  ref call_tmp[632048]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252684] "dead at end of block" "maybe param" "reference to a const" "temp"
  const-val call_tmp[632053]:_RuntimeTypeInfo[1287305] "dead at end of block" "expr temp" "maybe param" "temp"
  const-val _runtime_type_tmp_[1297740]:domain(1,int(64),false)[1252658] "dead at end of block" "temp"
  function on_fn[934628](const in arg loc[1841166]:locale[28]) : void[4] "on" "resolved"
  {
    {
      (89633 call =[435217] rootLocaleInitialized[310] 0)
      ref call_tmp[632340]:_ref(BaseLocale)[982484] "dead after last mention" "maybe param" "temp"
      ref rvfRerefTmp[2145178]:_ref(locale)[948905] "temp"
      (2145182 'move' rvfRerefTmp[2145178](2145179 'set reference' loc[1841166]))
      (632343 'move' call_tmp[632340](89638 call _instance[782816] rvfRerefTmp[2145178]))
      val coerce_tmp[1305216]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1305220 'move' coerce_tmp[1305216](1305218 'deref' call_tmp[632340]))
      (89642 call chpl__delete[983352] coerce_tmp[1305216])
    }
    (934635 return _void[55])
  }
  function wrapon_fn[2147565](const in arg dummy_locale_arg[2147567]:chpl_localeID_t[209352], in arg buf[2147569]:c_void_ptr[149], in arg buf_size[2147571]:int(64)[13], in arg c[2147573]:_class_localson_fn[2147531]) : void[4] "on block"
  {
    val _0_tmp[2147578]:chpl_localeID_t[209352] "temp"
    (2147583 'move' _0_tmp[2147578](2147580 '.v' c[2147573] _0_tmp[2147534]))
    val _1_rvfDerefTmp[2147585]:locale[28] "temp"
    (2147590 'move' _1_rvfDerefTmp[2147585](2147587 '.v' c[2147573] _1_rvfDerefTmp[2147536]))
    (2147576 call on_fn[934628] _1_rvfDerefTmp[2147585])
    (2147593 return _void[55])
  }
}