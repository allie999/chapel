AST dump for LocaleModel after pass prune.
Module use list: LocaleModelHelpFlat LocaleModelHelpMem IO 

{
  type _class_localson_fn[2198084] val _runtime_hdr[2198085]:chpl_comm_on_bundle_t[209359] val _0_tmp[2198087]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2198089]:locale[28]
  function chpl__init_LocaleModel[416085]() : void[4] "insert line file info" "module init" "resolved"
  {
    const-val ret_tmp[1907394]:range(int(64),bounded,false)[1027003] "temp"
    (88779 call chpl_build_bounded_range[455253] 1 0 ret_tmp[1907394])
    (1907397 'move' call_tmp[632120] ret_tmp[1907394])
    const-val ret_tmp[1911230]:domain(1,int(64),false)[1252786] "temp"
    (88782 call chpl__buildDomainExpr[1244857] call_tmp[632120] ret_tmp[1911230])
    (1911233 'move' call_tmp[632125] ret_tmp[1911230])
    const-val call_tmp[632130]:_RuntimeTypeInfo[1253862] "dead at end of block" "maybe param" "temp"
    val default_arg_idxType[1254121]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp" "type variable"
    (632133 'move' call_tmp[632130](88775 call chpl__buildDomainRuntimeType[1246471] defaultDist[94053]))
    const-val ret_tmp[1913208]:domain(1,int(64),false)[1252786] "temp"
    (1287449 call chpl__coerceMove[1287455] call_tmp[632130] call_tmp[632125] ret_tmp[1913208])
    (1913211 'move' init_coerce_tmp[1254157] ret_tmp[1913208])
    (541781 'move' chpl_emptyLocaleSpace[88784] init_coerce_tmp[1254157])
    (2197336 '_private_broadcast' chpl_emptyLocaleSpace[88784])
    (632138 'move' call_tmp[632135](88791 call chpl__ensureDomainExpr[1254163] chpl_emptyLocaleSpace[88784]))
    (632143 'move' call_tmp[632140](88793 call chpl__buildArrayRuntimeType[1254182] call_tmp[632135]))
    (1297873 'move' _runtime_type_tmp_[1297868](1878439 '.v' call_tmp[632140] dom[1287434]))
    const-val ret_tmp[1913364]:[domain(1,int(64),false)] locale[1287200] "temp"
    (1297866 call chpl__convertRuntimeTypeToValue[1297880] _runtime_type_tmp_[1297868] ret_tmp[1913364])
    (1913367 'move' chpl_emptyLocales[88795] ret_tmp[1913364])
    (2197338 '_private_broadcast' chpl_emptyLocales[88795])
    (513746 return _void[55])
  }
  function chpl__deinit_LocaleModel[89794]() : void[4] "resolved" "no return value for void"
  {
    {
      ref _indexOfInterest[89807]:_ref(locale)[949033] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[89808]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304480] "dead at end of block" "expr temp" "temp"
      (89817 'move' _iterator[89808](89815 call _getIterator[1298298] chpl_emptyLocales[88795]))
      {
        val ret[1987744]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304486] "dead after last mention" "RVV" "temp"
        ref _indexOfInterest[1987746]:_ref(locale)[949033] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1987748]:_ic_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303875] "dead at end of block" "expr temp" "temp"
        val call_tmp[1987750]:[domain(1,int(64),false)] locale[1256675] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val this[1987859]:[domain(1,int(64),false)] locale[1287200] "temp"
        (1987864 'move' this[1987859](1987861 '.v' _iterator[89808] F0_this[2120671]))
        (1987752 'move' call_tmp[1987750](1987755 call _value[1287255] this[1987859]))
        const-val call_tmp[1987757]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303881] "dead at end of block" "maybe param" "temp"
        val coerce_tmp[1987759]:[domain(1,int(64),false)] locale[1256675] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1987761 'move' coerce_tmp[1987759] call_tmp[1987750])
        const-val default_arg_tasksPerLocale[1987764]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1987766 'move' default_arg_tasksPerLocale[1987764](1987769 call these_default_tasksPerLocale[1298568] call_tmp[1987750]))
        const-val default_arg_ignoreRunning[1987771]:bool[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1987773 'move' default_arg_ignoreRunning[1987771](1987776 call these_default_ignoreRunning[1298599] coerce_tmp[1987759]))
        const-val default_arg_minIndicesPerTask[1987778]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1987780 'move' default_arg_minIndicesPerTask[1987778](1987783 call these_default_minIndicesPerTask[1298630] coerce_tmp[1987759]))
        const-val ret_tmp[1987785]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303881] "temp"
        (1987788 call these[1298452] coerce_tmp[1987759] default_arg_tasksPerLocale[1987764] default_arg_ignoreRunning[1987771] default_arg_minIndicesPerTask[1987778] ret_tmp[1987785])
        (1987794 'move' call_tmp[1987757] ret_tmp[1987785])
        (1987797 'move' _iterator[1987748](1987800 call _getIterator[1303890] call_tmp[1987757]))
        {
          val ret[2056997]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303881] "dead after last mention" "RVV" "temp"
          ref _indexOfInterest[2056999]:_ref(locale)[949033] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[2057001]:_ic_chpl__serialViewIter[1303625] "dead at end of block" "expr temp" "temp"
          ref call_tmp[2057003]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
          const-val this[2057379]:[domain(1,int(64),false)] locale[1256675] "temp"
          (2057384 'move' this[2057379](2057381 '.v' _iterator[1987748] F0_this[2122779]))
          (2057005 'move' call_tmp[2057003](2057008 call dom[1258208] this[2057379]))
          const-val call_tmp[2057010]:_ir_chpl__serialViewIter[1303631] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[2057012]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2057014 'move' coerce_tmp[2057012](2057016 'deref' call_tmp[2057003]))
          const-val ret_tmp[2057018]:_ir_chpl__serialViewIter[1303631] "temp"
          const-val this[2057386]:[domain(1,int(64),false)] locale[1256675] "temp"
          (2057391 'move' this[2057386](2057388 '.v' _iterator[1987748] F0_this[2122779]))
          (2057021 call chpl__serialViewIter[1298664] this[2057386] coerce_tmp[2057012] ret_tmp[2057018])
          (2057025 'move' call_tmp[2057010] ret_tmp[2057018])
          (2057028 'move' _iterator[2057001](2057031 call _getIterator[1303640] call_tmp[2057010]))
          {
            val ret[2057034]:_ir_chpl__serialViewIter[1303631] "dead after last mention" "RVV" "temp"
            val info[2057036]:[domain(1,int(64),false)] locale[1256675] "dead at end of block" "insert auto destroy"
            val tmp[2057038]:[domain(1,int(64),false)] locale[1256675] "dead at end of block" "expr temp" "insert auto destroy" "maybe copy elided" "maybe param" "temp"
            val tmp[2057040]:[domain(1,int(64),false)] locale[1256675] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val arr[2057042]:[domain(1,int(64),false)] locale[1256675] "temp"
            (2057044 'move' arr[2057042](2057046 '.v' _iterator[2057001] F0_arr[2124684]))
            (2057049 'move' tmp[2057040] arr[2057042])
            const-val arr[2057052]:[domain(1,int(64),false)] locale[1256675] "temp"
            (2057054 'move' arr[2057052](2057056 '.v' _iterator[2057001] F0_arr[2124684]))
            (2057059 'move' tmp[2057038] arr[2057052])
            const-val arr[2057062]:[domain(1,int(64),false)] locale[1256675] "temp"
            (2057064 'move' arr[2057062](2057066 '.v' _iterator[2057001] F0_arr[2124684]))
            (2057069 '=' info[2057036] arr[2057062])
            (2057072 'noop')
            const-val call_tmp[2057073]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            val coerce_tmp[2057075]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            const-val viewDom[2057077]:domain(1,int(64),false)[1251123] "temp"
            (2057079 'move' viewDom[2057077](2057081 '.v' _iterator[2057001] F1_viewDom[2124688]))
            (2057084 'move' coerce_tmp[2057075] viewDom[2057077])
            const-val viewDom[2057087]:domain(1,int(64),false)[1251123] "temp"
            (2057089 'move' viewDom[2057087](2057091 '.v' _iterator[2057001] F1_viewDom[2124688]))
            (2057094 'move' call_tmp[2057073](2057097 call dsiLow[1300625] viewDom[2057087]))
            const-val call_tmp[2057099]:int(64)[13] "dead at end of block" "maybe param" "temp"
            const-val arr[2057101]:[domain(1,int(64),false)] locale[1256675] "temp"
            (2057103 'move' arr[2057101](2057105 '.v' _iterator[2057001] F0_arr[2124684]))
            (2057108 'move' call_tmp[2057099](2057111 call getDataIndex[1300884] arr[2057101] call_tmp[2057073]))
            const-val first[2057114]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            (2057116 'move' first[2057114] call_tmp[2057099])
            const-val call_tmp[2057119]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            val coerce_tmp[2057121]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            const-val viewDom[2057123]:domain(1,int(64),false)[1251123] "temp"
            (2057125 'move' viewDom[2057123](2057127 '.v' _iterator[2057001] F1_viewDom[2124688]))
            (2057130 'move' coerce_tmp[2057121] viewDom[2057123])
            (2057133 'move' call_tmp[2057119](2057136 call dsiLow[1300625] coerce_tmp[2057121]))
            const-val call_tmp[2057138]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            (2057140 'move' call_tmp[2057138](2057143 call chpl__idxToInt[1027105] call_tmp[2057119]))
            const-val call_tmp[2057145]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            (2057147 'move' call_tmp[2057145](2057150 call +[949855] call_tmp[2057138]))
            const-val call_tmp[2057152]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            val coerce_tmp[2057154]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            const-val viewDom[2057156]:domain(1,int(64),false)[1251123] "temp"
            (2057158 'move' viewDom[2057156](2057160 '.v' _iterator[2057001] F1_viewDom[2124688]))
            (2057163 'move' coerce_tmp[2057154] viewDom[2057156])
            (2057166 'move' call_tmp[2057152](2057169 call chpl_intToIdx[1302054] coerce_tmp[2057154] call_tmp[2057145]))
            const-val call_tmp[2057172]:int(64)[13] "dead at end of block" "maybe param" "temp"
            (2057174 'move' call_tmp[2057172](2057177 call getDataIndex[1300884] info[2057036] call_tmp[2057152]))
            const-val second[2057180]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            (2057182 'move' second[2057180] call_tmp[2057172])
            const-val call_tmp[2057185]:int(64)[13] "dead at end of block" "maybe param" "temp"
            (2057187 'move' call_tmp[2057185](2057190 call -[440532] call_tmp[2057172] call_tmp[2057099]))
            const-val step[2057193]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            (2057195 'move' step[2057193] call_tmp[2057185])
            const-val call_tmp[2057198]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            val coerce_tmp[2057200]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            const-val viewDom[2057202]:domain(1,int(64),false)[1251123] "temp"
            (2057204 'move' viewDom[2057202](2057206 '.v' _iterator[2057001] F1_viewDom[2124688]))
            (2057209 'move' coerce_tmp[2057200] viewDom[2057202])
            (2057212 'move' call_tmp[2057198](2057215 call dsiNumIndices[1263823] coerce_tmp[2057200]))
            const-val call_tmp[2057217]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            (2057219 'move' call_tmp[2057217](2057222 call -[962415] call_tmp[2057198]))
            const-val call_tmp[2057224]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            (2057226 'move' call_tmp[2057224](2057229 call *[441944] call_tmp[2057217] call_tmp[2057185]))
            const-val call_tmp[2057232]:int(64)[13] "dead at end of block" "maybe param" "temp"
            (2057234 'move' call_tmp[2057232](2057237 call +[439752] call_tmp[2057099] call_tmp[2057224]))
            const-val last[2057240]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            (2057242 'move' last[2057240] call_tmp[2057232])
            val _indexOfInterest[2057245]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[2057247]:_ic_chpl_direct_pos_stride_range_iter[1303186] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[2057249]:_ir_chpl_direct_pos_stride_range_iter[1303192] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[2057251]:_ir_chpl_direct_pos_stride_range_iter[1303192] "temp"
            (2057254 call chpl_direct_pos_stride_range_iter[1302141] call_tmp[2057099] call_tmp[2057232] call_tmp[2057185] ret_tmp[2057251])
            (2057259 'move' call_tmp[2057249] ret_tmp[2057251])
            (2057262 'move' _iterator[2057247](2057265 call _getIterator[1303201] call_tmp[2057249]))
            {
              val ret[2091004]:_ir_chpl_direct_pos_stride_range_iter[1303192] "dead after last mention" "RVV" "temp"
              val call_tmp[2091006]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val stride[2091171]:int(64)[13] "temp"
              (2091176 'move' stride[2091171](2091173 '.v' _iterator[2057247] F2_stride[2126228]))
              (2091009 call chpl_range_check_stride[1103022] stride[2091171])
              val call_tmp[2091011]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val default_arg_first[2091013]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val low[2091178]:int(64)[13] "temp"
              (2091183 'move' low[2091178](2091180 '.v' _iterator[2057247] F0_low[2126220]))
              (2091015 'move' default_arg_first[2091013](2091018 call chpl_checkIfRangeIterWillOverflow_default_first[1103387] low[2091178]))
              const-val default_arg_last[2091020]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val high[2091185]:int(64)[13] "temp"
              (2091190 'move' high[2091185](2091187 '.v' _iterator[2057247] F1_high[2126224]))
              (2091022 'move' default_arg_last[2091020](2091025 call chpl_checkIfRangeIterWillOverflow_default_last[1103415] high[2091185]))
              const-val _return_tmp_[2091027]:bool[10] "dead after last mention" "temp"
              const-val low[2091192]:int(64)[13] "temp"
              (2091197 'move' low[2091192](2091194 '.v' _iterator[2057247] F0_low[2126220]))
              const-val high[2091199]:int(64)[13] "temp"
              (2091204 'move' high[2091199](2091201 '.v' _iterator[2057247] F1_high[2126224]))
              const-val stride[2091206]:int(64)[13] "temp"
              (2091211 'move' stride[2091206](2091208 '.v' _iterator[2057247] F2_stride[2126228]))
              (2091029 'move' _return_tmp_[2091027](2091032 call chpl_checkIfRangeIterWillOverflow[1096265] low[2091192] high[2091199] stride[2091206] default_arg_first[2091013] default_arg_last[2091020] 1))
              val i[2091039]:int(64)[13] "dead at end of block" "insert auto destroy"
              val call_tmp[2091041]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (2091043 'move' i[2091039] 0)
              CForLoop[2091046] hazard
              {
                const-val yret[2091066]:int(64)[13] "dead after last mention" "YVV" "temp"
                (2091068 'move' yret[2091066] i[2091039])
                const-val _yieldedIndex[2091082]:int(64)[13] "temp"
                (2091169 'move' _yieldedIndex[2091082] i[2091039])
                {
                  const-val i[2091084]:int(64)[13] "const" "index var" "insert auto destroy"
                  (2091086 'move' i[2091084] _yieldedIndex[2091082])
                  ref yret[2091089]:_ref(locale)[949033] "dead after last mention" "YVV" "temp"
                  ref call_tmp[2091091]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[2091093]:_ref(_ddata(locale))[1255592] "dead after last mention" "temp"
                  (2091095 'move' _this_tmp_[2091093](2091098 call theData[1303439] info[2057036]))
                  val coerce_tmp[2091100]:_ddata(locale)[1255583] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (2091102 'move' coerce_tmp[2091100](2091104 'deref' _this_tmp_[2091093]))
                  (2091106 'move' call_tmp[2091091](2091109 call this[1303586] coerce_tmp[2091100] _yieldedIndex[2091082]))
                  ref _yieldedIndex[2091112]:_ref(locale)[949033] "temp"
                  (2091114 'move' _yieldedIndex[2091112] call_tmp[2091091])
                  {
                    ref elem[2091118]:_ref(locale)[949033] "index var" "insert auto destroy"
                    (2091120 'move' elem[2091118] _yieldedIndex[2091112])
                    ref yret[2091123]:_ref(locale)[949033] "dead after last mention" "YVV" "temp"
                    ref _yieldedIndex[2091125]:_ref(locale)[949033] "temp"
                    (2091127 'move' _yieldedIndex[2091125] elem[2091118])
                    {
                      ref i[2091131]:_ref(locale)[949033] "index var" "insert auto destroy"
                      (2091133 'move' i[2091131] _yieldedIndex[2091125])
                      ref yret[2091136]:_ref(locale)[949033] "dead after last mention" "YVV" "temp"
                      ref _yieldedIndex[2091138]:_ref(locale)[949033] "temp"
                      (2091140 'move' _yieldedIndex[2091138] i[2091131])
                      {
                        ref l[2091144]:_ref(locale)[949033] "index var" "insert auto destroy"
                        (2091146 'move' l[2091144] _yieldedIndex[2091138])
                        {
                          ref call_tmp[2091150]:_ref(BaseLocale)[982612] "dead after last mention" "maybe param" "temp"
                          (2091152 'move' call_tmp[2091150](2091155 call _instance[782944] l[2091144]))
                          val coerce_tmp[2091157]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (2091159 'move' coerce_tmp[2091157](2091161 'deref' call_tmp[2091150]))
                          (2091164 call chpl__delete[983480] coerce_tmp[2091157])
                        }
                        label _continueLabel[2091166]
                      }
                    }
                  }
                }
                {
                  const-val low[2091213]:int(64)[13] "temp"
                  (2091218 'move' low[2091213](2091215 '.v' _iterator[2057247] F0_low[2126220]))
                  (2091048 '=' i[2091039] low[2091213])
                }
                {
                  const-val high[2091220]:int(64)[13] "temp"
                  (2091225 'move' high[2091220](2091222 '.v' _iterator[2057247] F1_high[2126224]))
                  (2091052 '<=' i[2091039] high[2091220])
                }
                {
                  val call_tmp[2091056]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[2091058]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val stride[2091227]:int(64)[13] "temp"
                  (2091232 'move' stride[2091227](2091229 '.v' _iterator[2057247] F2_stride[2126228]))
                  (2091060 'move' call_tmp[2091058] stride[2091227])
                  const-val stride[2091234]:int(64)[13] "temp"
                  (2091239 'move' stride[2091234](2091236 '.v' _iterator[2057247] F2_stride[2126228]))
                  (2091063 '+=' i[2091039] stride[2091234])
                }
              }
              label _endchpl_direct_pos_stride_range_iter[2091078]
            }
            (2057328 call _freeIterator[1303374] _iterator[2057247])
            label _endchpl__serialViewIter[2057330]
          }
          (2057333 call _freeIterator[1303809] _iterator[2057001])
          label _endthese[2057335]
        }
        (1987826 call _freeIterator[1304414] _iterator[1987748])
        label _endthese[1987828]
      }
      label _breakLabel[89813]
      (1919437 call _freeIterator[1305165] _iterator[89808])
    }
    label _endchpl__deinit_LocaleModel[1930166]
    (1930174 call chpl__autoDestroy[1407763] call_tmp[632120])
    (1930171 call chpl__autoDestroy[1727089] chpl_emptyLocales[88795])
    (1930168 call chpl__autoDestroy[1697012] chpl_emptyLocaleSpace[88784])
    (513748 return _void[55])
  }
  function chpl_localeModel_sublocToExecutionSubloc[88746](const in arg full_subloc[88743]:int(32)[95]) : int(32)[95] "export" "local args" "resolved"
  {
    val ret[513455]:int(32)[95] "dead after last mention" "RVV" "temp"
    (513460 'move' ret[513455] full_subloc[88743])
    (513457 return ret[513455])
  }
  function chpl_localeModel_sublocMerge[88760](const in arg full_subloc[88757]:int(32)[95], const in arg execution_subloc[88763]:int(32)[95]) : int(32)[95] "export" "local args" "resolved"
  {
    val ret[513464]:int(32)[95] "dead after last mention" "RVV" "temp"
    (513469 'move' ret[513464] execution_subloc[88763])
    (513466 return ret[513464])
  }
  const-val chpl_emptyLocaleSpace[88784]:domain(1,int(64),false)[1252786] "dead at end of block" "const" "insert auto destroy"
  const-val chpl_emptyLocales[88795]:[domain(1,int(64),false)] locale[1287200] "dead at end of block" "const" "insert auto destroy" "unsafe"
  function LocaleModel[89195].init[88871](const in arg this[89201]:LocaleModel[89195], const  ref arg parent_loc[88868]:locale[28]) : void[4] "inline" "method" "primary method" "resolved" "no return value for void"
  {
    const-val call_tmp[632167]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (632170 'move' call_tmp[632167] rootLocaleInitialized[310])
    if call_tmp[632167]
    {
      (88877 call halt[154111] "Cannot create additional LocaleModel instances")
    }
    val super_tmp[460386]:AbstractLocaleModel[91502] "dead after last mention" "temporary of super field" "temp"
    (460388 'move' super_tmp[460386](460385 '.v' this[89201] super[355753]))
    (88891 call init[91481] super_tmp[460386] parent_loc[88868])
    val tmp[460391]:AbstractLocaleModel[91502] "dead after last mention" "temp" "type variable"
    val call_tmp[632179]:AbstractLocaleModel[91502] "dead at end of block" "maybe param" "temp"
    (632182 'move' call_tmp[632179](460402 'cast' AbstractLocaleModel[91502] this[89201]))
    val chpl__thisAsParent[460399]:AbstractLocaleModel[91502] "dead at end of block" "insert auto destroy" "temp"
    (541787 'move' chpl__thisAsParent[460399](1351629 call chpl__initCopy[1351631] call_tmp[632179]))
    (460405 'setcid' chpl__thisAsParent[460399])
    const-val call_tmp[632184]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (632187 'move' call_tmp[632184](88896 'cast' int(64)[13] chpl_nodeID[208207]))
    val tmp[460407]:int(64)[13] "dead after last mention" "temp"
    (460410 'move' tmp[460407] call_tmp[632184])
    (460412 '.=' this[89201] _node_id[88803] tmp[460407])
    val tmp[460416]:string[26] "dead after last mention" "temp"
    (1351996 call init[30763] tmp[460416])
    (460421 '.=' this[89201] local_name[88808] tmp[460416])
    (460426 'setcid' this[89201])
    (88910 call setup[89183] this[89201])
    (513473 return _void[55])
  }
  function LocaleModel[89195].getChildCount[89027](const in arg this[89237]:LocaleModel[89195]) : int(64)[13] "method" "primary method" "method overrides" "resolved" "virtual"
  {
    val ret[513553]:int(64)[13] "dead after last mention" "RVV" "temp"
    (513558 'move' ret[513553] 0)
    (513555 return ret[513553])
  }
  function LocaleModel[89195].getChild[89088](const in arg this[89245]:LocaleModel[89195], const in arg idx[89085]:int(64)[13], ref arg _retArg[1918956]:_ref(locale)[949033]) : void[4] "fn returns via _retArg" "method" "primary method" "method overrides" "resolved" "unsafe" "virtual"
  {
    const-val ret[513576]:locale[28] "dead after last mention" "RVV" "temp"
    (89110 call halt[154111] "requesting a child from a flat LocaleModel locale")
    const-val tmp[89114]:locale[28] "dead at end of block" "insert auto destroy"
    (1830533 call init[90003] tmp[89114])
    (1830531 'move' ret[513576] tmp[89114])
    gotoReturn _end_getChild[513574] _end_getChild[513574]
    label _end_getChild[513574]
    (1918958 '=' _retArg[1918956] ret[513576])
    (1918960 return _void[55])
  }
  function LocaleModel[89195].setup[89183](const in arg this[89257]:LocaleModel[89195]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[632244]:_ref(string)[938128] "dead after last mention" "maybe param" "temp"
    (632247 'move' call_tmp[632244](377817 call local_name[781260] this[89257]))
    val _formal_tmp_out_local_name[1351656]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    (89189 call helpSetupLocaleFlat[208865] this[89257] _formal_tmp_out_local_name[1351656])
    (1351658 call =[38272] call_tmp[632244] _formal_tmp_out_local_name[1351656])
    (1919423 call chpl__autoDestroy[1601673] _formal_tmp_out_local_name[1351656])
    (513609 return _void[55])
  }
  function LocaleModel[89195].local_name[781260](const in arg this[781264]:LocaleModel[89195]) ref : _ref(string)[938128] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[781274]:_ref(string)[938128] "dead after last mention" "RVV" "temp"
    ref call_tmp[781281]:_ref(string)[938128] "dead after last mention" "maybe param" "temp"
    (781284 'move' call_tmp[781281](781268 '.' this[781264] local_name[88808]))
    (781279 'move' ret[781274] call_tmp[781281])
    (781276 return ret[781274])
  }
  function LocaleModel[89195].deinit[781286](const in arg this[781290]:LocaleModel[89195]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[1890280]
    ref _field_destructor_tmp_[1890278]:_ref(string)[938128] "temp"
    (1890285 'move' _field_destructor_tmp_[1890278](1890282 '.' this[781290] local_name[88808]))
    (1890287 call deinit[30834] _field_destructor_tmp_[1890278])
    val _parent_destructor_tmp_[1890290]:AbstractLocaleModel[91502] "temp"
    (1890295 'move' _parent_destructor_tmp_[1890290](1890291 'cast' AbstractLocaleModel[91502] this[781290]))
    (1890297 call deinit[784230] _parent_destructor_tmp_[1890290])
    (781298 return _void[55])
  }
  function _new[1352007](const  ref arg parent_loc[1352016]:locale[28]) : LocaleModel[89195] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val _formal_type_tmp_[1880021]:LocaleModel[89195] "temp"
    val ret[1352049]:LocaleModel[89195] "dead after last mention" "RVV" "temp"
    val initTemp[1352009]:LocaleModel[89195] "dead after last mention" "temp"
    const-val call_tmp[1352056]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1352059 'move' call_tmp[1352056](1352068 'sizeof_bundle' LocaleModel[89195]))
    const-val cast_tmp[1352071]:c_void_ptr[149] "dead after last mention" "temp"
    (1352073 'move' cast_tmp[1352071](1352024 call chpl_here_alloc[187788] call_tmp[1352056] 64))
    (1352027 'move' initTemp[1352009](1352075 'cast' LocaleModel[89195] cast_tmp[1352071]))
    (1352029 'setcid' initTemp[1352009])
    (1352010 call init[88871] initTemp[1352009] parent_loc[1352016])
    val tmp[1352031]:LocaleModel[89195] "dead after last mention" "temp"
    (1352038 'move' tmp[1352031] initTemp[1352009])
    (1352054 'move' ret[1352049] tmp[1352031])
    (1352051 return ret[1352049])
  }
  type LocaleModel[89195] val super[355753]:AbstractLocaleModel[91502] "super class" const-val _node_id[88803]:int(64)[13] "const" val local_name[88808]:string[26]
  function RootLocale[89694].init[89297](const in arg this[89696]:RootLocale[89694]) : void[4] "inline" "method" "primary method" "resolved" "no return value for void"
  {
    val super_tmp[460428]:AbstractRootLocale[92012] "dead after last mention" "temporary of super field" "temp"
    (460430 'move' super_tmp[460428](460427 '.v' this[89696] super[355757]))
    (89305 call init[91544] super_tmp[460428] nilLocale[89942])
    val tmp[460433]:AbstractRootLocale[92012] "dead after last mention" "temp" "type variable"
    val call_tmp[632256]:AbstractRootLocale[92012] "dead at end of block" "maybe param" "temp"
    (632259 'move' call_tmp[632256](460444 'cast' AbstractRootLocale[92012] this[89696]))
    val chpl__thisAsParent[460441]:AbstractRootLocale[92012] "dead at end of block" "insert auto destroy" "temp"
    (541791 'move' chpl__thisAsParent[460441](1305373 call chpl__initCopy[986477] call_tmp[632256]))
    (460447 'setcid' chpl__thisAsParent[460441])
    ref call_tmp[632261]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (632264 'move' call_tmp[632261](377826 '.' this[89696] nPUsPhysAcc[90699]))
    (89310 call =[435443] call_tmp[632261] 0)
    ref call_tmp[632266]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (632269 'move' call_tmp[632266](377831 '.' this[89696] nPUsPhysAll[90704]))
    (89315 call =[435443] call_tmp[632266] 0)
    ref call_tmp[632271]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (632274 'move' call_tmp[632271](377836 '.' this[89696] nPUsLogAcc[90689]))
    (89320 call =[435443] call_tmp[632271] 0)
    ref call_tmp[632276]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (632279 'move' call_tmp[632276](377841 '.' this[89696] nPUsLogAll[90694]))
    (89325 call =[435443] call_tmp[632276] 0)
    ref call_tmp[632281]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (632284 'move' call_tmp[632281](377846 '.' this[89696] maxTaskPar[90746]))
    (89330 call =[435443] call_tmp[632281] 0)
    const-val call_tmp[632286]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (632289 'move' call_tmp[632286](460456 call -[962415] numLocales[209892]))
    const-val call_tmp[632291]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1907412]:range(int(64),bounded,false)[1027003] "temp"
    (460453 call chpl_build_bounded_range[455253] 0 call_tmp[632286] ret_tmp[1907412])
    (1907415 'move' call_tmp[632291] ret_tmp[1907412])
    const-val call_tmp[632296]:domain(1,int(64),false)[1252786] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[1911236]:domain(1,int(64),false)[1252786] "temp"
    (460451 call chpl__buildDomainExpr[1244857] call_tmp[632291] ret_tmp[1911236])
    (1911239 'move' call_tmp[632296] ret_tmp[1911236])
    const-val call_tmp[632301]:_RuntimeTypeInfo[1253862] "dead after last mention" "maybe param" "temp"
    val default_arg_idxType[1305389]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp" "type variable"
    (632304 'move' call_tmp[632301](460462 call chpl__buildDomainRuntimeType[1246471] defaultDist[94053]))
    val tmp[460459]:domain(1,int(64),false)[1252786] "dead after last mention" "temp"
    const-val init_coerce_tmp[1305407]:domain(1,int(64),false)[1252786] "dead after last mention" "temp"
    const-val ret_tmp[1913214]:domain(1,int(64),false)[1252786] "temp"
    (1305417 call chpl__coerceMove[1287455] call_tmp[632301] call_tmp[632296] ret_tmp[1913214])
    (1913217 'move' init_coerce_tmp[1305407] ret_tmp[1913214])
    (460465 'move' tmp[460459] init_coerce_tmp[1305407])
    (460467 '.=' this[89696] myLocaleSpace[89280] tmp[460459])
    (1919426 call chpl__autoDestroy[1407763] call_tmp[632291])
    val tmp[460471]:[domain(1,int(64),false)] locale[1287200] "dead after last mention" "temp"
    ref call_tmp[632306]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812] "dead after last mention" "maybe param" "temp"
    (632309 'move' call_tmp[632306](460485 '.' this[89696] myLocaleSpace[89280]))
    ref call_tmp[632311]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812] "dead after last mention" "maybe param" "temp"
    (632314 'move' call_tmp[632311](460476 call chpl__ensureDomainExpr[1254163] call_tmp[632306]))
    const-val call_tmp[632316]:_RuntimeTypeInfo[1287433] "dead after last mention" "expr temp" "maybe param" "temp"
    (632319 'move' call_tmp[632316](460474 call chpl__buildArrayRuntimeType[1254182] call_tmp[632311]))
    const-val _runtime_type_tmp_[1305426]:domain(1,int(64),false)[1252786] "dead after last mention" "temp"
    (1305431 'move' _runtime_type_tmp_[1305426](1878443 '.v' call_tmp[632316] dom[1287434]))
    const-val ret_tmp[1913370]:[domain(1,int(64),false)] locale[1287200] "temp"
    (1305424 call chpl__convertRuntimeTypeToValue[1297880] _runtime_type_tmp_[1305426] ret_tmp[1913370])
    (1913373 'move' tmp[460471] ret_tmp[1913370])
    (460481 '.=' this[89696] myLocales[89291] tmp[460471])
    (460488 'setcid' this[89696])
    (513611 return _void[55])
  }
  function RootLocale[89694].setup[89337](const in arg this[89700]:RootLocale[89694]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    (89342 call helpSetupRootLocaleFlat[208417] this[89700])
    (513613 return _void[55])
  }
  function RootLocale[89694].getChildCount[89428](const in arg this[89724]:RootLocale[89694]) : int(64)[13] "method" "primary method" "method overrides" "resolved" "virtual"
  {
    val ret[513655]:int(64)[13] "dead after last mention" "RVV" "temp"
    ref call_tmp[632347]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (632350 'move' call_tmp[632347](89433 call myLocaleSpace[781326] this[89724]))
    const-val call_tmp[632354]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (632357 'move' call_tmp[632354](89436 call size[1435624] call_tmp[632347]))
    (513660 'move' ret[513655] call_tmp[632354])
    (513657 return ret[513655])
  }
  function RootLocale[89694].getChild[89514](const in arg this[89736]:RootLocale[89694], const in arg idx[89511]:int(64)[13], ref arg _retArg[1918940]:_ref(locale)[949033]) : void[4] "fn returns via _retArg" "method" "primary method" "method overrides" "resolved" "virtual"
  {
    const-val ret[513687]:locale[28] "dead after last mention" "RVV" "temp"
    ref call_tmp[632375]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1830539]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287226] "dead after last mention" "temp"
    (1830541 'move' _this_tmp_[1830539](89519 call myLocales[781352] this[89736]))
    (632378 'move' call_tmp[632375](1830547 call this[1347571] _this_tmp_[1830539] idx[89511]))
    (513692 'move' ret[513687](1918944 call chpl__initCopy[1601692] call_tmp[632375]))
    (1918942 '=' _retArg[1918940] ret[513687])
    (1918946 return _void[55])
  }
  function RootLocale[89694].getDefaultLocaleArray[89596](const in arg this[89748]:RootLocale[89694]) const ref : _ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287226] "method" "primary method" "method overrides" "resolved"
  {
    ref ret[513719]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287226] "dead after last mention" "RVV" "temp"
    ref call_tmp[632396]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287226] "dead after last mention" "maybe param" "temp"
    (632399 'move' call_tmp[632396](377868 call myLocales[781352] this[89748]))
    (513724 'move' ret[513719] call_tmp[632396])
    (513721 return ret[513719])
  }
  function RootLocale[89694].localeIDtoLocale[89610](const in arg this[89752]:RootLocale[89694], const  ref arg id[89607]:chpl_localeID_t[209352], ref arg _retArg[1918948]:_ref(locale)[949033]) : void[4] "fn returns via _retArg" "method" "primary method" "method overrides" "resolved" "virtual"
  {
    const-val ret[513728]:locale[28] "dead after last mention" "RVV" "temp"
    const-val call_tmp[632403]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (632406 'move' call_tmp[632403](89616 call chpl_rt_nodeFromLocaleID[209446] id[89607]))
    ref call_tmp[632408]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1830585]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287226] "dead after last mention" "temp"
    (1830587 'move' _this_tmp_[1830585](377874 call myLocales[781352] this[89752]))
    const-val coerce_tmp[1831903]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1831909 'move' coerce_tmp[1831903](1831905 'cast' int(64)[13] call_tmp[632403]))
    const-val coerce_tmp[1831911]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1831917 'move' coerce_tmp[1831911](1831913 'cast' int(64)[13] call_tmp[632403]))
    (632411 'move' call_tmp[632408](1831899 call this[1347571] _this_tmp_[1830585] coerce_tmp[1831911]))
    (513733 'move' ret[513728](1918952 call chpl__initCopy[1601692] call_tmp[632408]))
    (1918950 '=' _retArg[1918948] ret[513728])
    (1918954 return _void[55])
  }
  function RootLocale[89694].deinit[89626](const in arg this[89756]:RootLocale[89694]) : void[4] "destructor" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    {
      ref _indexOfInterest[89657]:_ref(locale)[949033] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[89658]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304480] "dead at end of block" "expr temp" "temp"
      ref call_tmp[632415]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287226] "dead at end of block" "maybe param" "temp"
      (632418 'move' call_tmp[632415](377880 call myLocales[781352] this[89756]))
      (89667 'move' _iterator[89658](89665 call _getIterator[1298298] call_tmp[632415]))
      {
        val ret[1987614]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304486] "dead after last mention" "RVV" "temp"
        ref _indexOfInterest[1987616]:_ref(locale)[949033] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1987618]:_ic_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303875] "dead at end of block" "expr temp" "temp"
        val call_tmp[1987620]:[domain(1,int(64),false)] locale[1256675] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val this[1987736]:[domain(1,int(64),false)] locale[1287200] "temp"
        (1987741 'move' this[1987736](1987738 '.v' _iterator[89658] F0_this[2120671]))
        (1987622 'move' call_tmp[1987620](1987625 call _value[1287255] this[1987736]))
        const-val call_tmp[1987627]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303881] "dead at end of block" "maybe param" "temp"
        val coerce_tmp[1987629]:[domain(1,int(64),false)] locale[1256675] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1987631 'move' coerce_tmp[1987629] call_tmp[1987620])
        const-val default_arg_tasksPerLocale[1987634]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1987636 'move' default_arg_tasksPerLocale[1987634](1987639 call these_default_tasksPerLocale[1298568] call_tmp[1987620]))
        const-val default_arg_ignoreRunning[1987641]:bool[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1987643 'move' default_arg_ignoreRunning[1987641](1987646 call these_default_ignoreRunning[1298599] coerce_tmp[1987629]))
        const-val default_arg_minIndicesPerTask[1987648]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1987650 'move' default_arg_minIndicesPerTask[1987648](1987653 call these_default_minIndicesPerTask[1298630] coerce_tmp[1987629]))
        const-val ret_tmp[1987655]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303881] "temp"
        (1987658 call these[1298452] coerce_tmp[1987629] default_arg_tasksPerLocale[1987634] default_arg_ignoreRunning[1987641] default_arg_minIndicesPerTask[1987648] ret_tmp[1987655])
        (1987664 'move' call_tmp[1987627] ret_tmp[1987655])
        (1987667 'move' _iterator[1987618](1987670 call _getIterator[1303890] call_tmp[1987627]))
        {
          val ret[2056593]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303881] "dead after last mention" "RVV" "temp"
          ref _indexOfInterest[2056595]:_ref(locale)[949033] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[2056597]:_ic_chpl__serialViewIter[1303625] "dead at end of block" "expr temp" "temp"
          ref call_tmp[2056599]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
          const-val this[2056982]:[domain(1,int(64),false)] locale[1256675] "temp"
          (2056987 'move' this[2056982](2056984 '.v' _iterator[1987618] F0_this[2122779]))
          (2056601 'move' call_tmp[2056599](2056604 call dom[1258208] this[2056982]))
          const-val call_tmp[2056606]:_ir_chpl__serialViewIter[1303631] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[2056608]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2056610 'move' coerce_tmp[2056608](2056612 'deref' call_tmp[2056599]))
          const-val ret_tmp[2056614]:_ir_chpl__serialViewIter[1303631] "temp"
          const-val this[2056989]:[domain(1,int(64),false)] locale[1256675] "temp"
          (2056994 'move' this[2056989](2056991 '.v' _iterator[1987618] F0_this[2122779]))
          (2056617 call chpl__serialViewIter[1298664] this[2056989] coerce_tmp[2056608] ret_tmp[2056614])
          (2056621 'move' call_tmp[2056606] ret_tmp[2056614])
          (2056624 'move' _iterator[2056597](2056627 call _getIterator[1303640] call_tmp[2056606]))
          {
            val ret[2056630]:_ir_chpl__serialViewIter[1303631] "dead after last mention" "RVV" "temp"
            val info[2056632]:[domain(1,int(64),false)] locale[1256675] "dead at end of block" "insert auto destroy"
            val tmp[2056634]:[domain(1,int(64),false)] locale[1256675] "dead at end of block" "expr temp" "insert auto destroy" "maybe copy elided" "maybe param" "temp"
            val tmp[2056636]:[domain(1,int(64),false)] locale[1256675] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val arr[2056638]:[domain(1,int(64),false)] locale[1256675] "temp"
            (2056640 'move' arr[2056638](2056642 '.v' _iterator[2056597] F0_arr[2124684]))
            (2056645 'move' tmp[2056636] arr[2056638])
            const-val arr[2056648]:[domain(1,int(64),false)] locale[1256675] "temp"
            (2056650 'move' arr[2056648](2056652 '.v' _iterator[2056597] F0_arr[2124684]))
            (2056655 'move' tmp[2056634] arr[2056648])
            const-val arr[2056658]:[domain(1,int(64),false)] locale[1256675] "temp"
            (2056660 'move' arr[2056658](2056662 '.v' _iterator[2056597] F0_arr[2124684]))
            (2056665 '=' info[2056632] arr[2056658])
            (2056668 'noop')
            const-val call_tmp[2056669]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            val coerce_tmp[2056671]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            const-val viewDom[2056673]:domain(1,int(64),false)[1251123] "temp"
            (2056675 'move' viewDom[2056673](2056677 '.v' _iterator[2056597] F1_viewDom[2124688]))
            (2056680 'move' coerce_tmp[2056671] viewDom[2056673])
            const-val viewDom[2056683]:domain(1,int(64),false)[1251123] "temp"
            (2056685 'move' viewDom[2056683](2056687 '.v' _iterator[2056597] F1_viewDom[2124688]))
            (2056690 'move' call_tmp[2056669](2056693 call dsiLow[1300625] viewDom[2056683]))
            const-val call_tmp[2056695]:int(64)[13] "dead at end of block" "maybe param" "temp"
            const-val arr[2056697]:[domain(1,int(64),false)] locale[1256675] "temp"
            (2056699 'move' arr[2056697](2056701 '.v' _iterator[2056597] F0_arr[2124684]))
            (2056704 'move' call_tmp[2056695](2056707 call getDataIndex[1300884] arr[2056697] call_tmp[2056669]))
            const-val first[2056710]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            (2056712 'move' first[2056710] call_tmp[2056695])
            const-val call_tmp[2056715]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            val coerce_tmp[2056717]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            const-val viewDom[2056719]:domain(1,int(64),false)[1251123] "temp"
            (2056721 'move' viewDom[2056719](2056723 '.v' _iterator[2056597] F1_viewDom[2124688]))
            (2056726 'move' coerce_tmp[2056717] viewDom[2056719])
            (2056729 'move' call_tmp[2056715](2056732 call dsiLow[1300625] coerce_tmp[2056717]))
            const-val call_tmp[2056734]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            (2056736 'move' call_tmp[2056734](2056739 call chpl__idxToInt[1027105] call_tmp[2056715]))
            const-val call_tmp[2056741]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            (2056743 'move' call_tmp[2056741](2056746 call +[949855] call_tmp[2056734]))
            const-val call_tmp[2056748]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            val coerce_tmp[2056750]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            const-val viewDom[2056752]:domain(1,int(64),false)[1251123] "temp"
            (2056754 'move' viewDom[2056752](2056756 '.v' _iterator[2056597] F1_viewDom[2124688]))
            (2056759 'move' coerce_tmp[2056750] viewDom[2056752])
            (2056762 'move' call_tmp[2056748](2056765 call chpl_intToIdx[1302054] coerce_tmp[2056750] call_tmp[2056741]))
            const-val call_tmp[2056768]:int(64)[13] "dead at end of block" "maybe param" "temp"
            (2056770 'move' call_tmp[2056768](2056773 call getDataIndex[1300884] info[2056632] call_tmp[2056748]))
            const-val second[2056776]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            (2056778 'move' second[2056776] call_tmp[2056768])
            const-val call_tmp[2056781]:int(64)[13] "dead at end of block" "maybe param" "temp"
            (2056783 'move' call_tmp[2056781](2056786 call -[440532] call_tmp[2056768] call_tmp[2056695]))
            const-val step[2056789]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            (2056791 'move' step[2056789] call_tmp[2056781])
            const-val call_tmp[2056794]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            val coerce_tmp[2056796]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            const-val viewDom[2056798]:domain(1,int(64),false)[1251123] "temp"
            (2056800 'move' viewDom[2056798](2056802 '.v' _iterator[2056597] F1_viewDom[2124688]))
            (2056805 'move' coerce_tmp[2056796] viewDom[2056798])
            (2056808 'move' call_tmp[2056794](2056811 call dsiNumIndices[1263823] coerce_tmp[2056796]))
            const-val call_tmp[2056813]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            (2056815 'move' call_tmp[2056813](2056818 call -[962415] call_tmp[2056794]))
            const-val call_tmp[2056820]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            (2056822 'move' call_tmp[2056820](2056825 call *[441944] call_tmp[2056813] call_tmp[2056781]))
            const-val call_tmp[2056828]:int(64)[13] "dead at end of block" "maybe param" "temp"
            (2056830 'move' call_tmp[2056828](2056833 call +[439752] call_tmp[2056695] call_tmp[2056820]))
            const-val last[2056836]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            (2056838 'move' last[2056836] call_tmp[2056828])
            val _indexOfInterest[2056841]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[2056843]:_ic_chpl_direct_pos_stride_range_iter[1303186] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[2056845]:_ir_chpl_direct_pos_stride_range_iter[1303192] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[2056847]:_ir_chpl_direct_pos_stride_range_iter[1303192] "temp"
            (2056850 call chpl_direct_pos_stride_range_iter[1302141] call_tmp[2056695] call_tmp[2056828] call_tmp[2056781] ret_tmp[2056847])
            (2056855 'move' call_tmp[2056845] ret_tmp[2056847])
            (2056858 'move' _iterator[2056843](2056861 call _getIterator[1303201] call_tmp[2056845]))
            {
              val ret[2090759]:_ir_chpl_direct_pos_stride_range_iter[1303192] "dead after last mention" "RVV" "temp"
              val call_tmp[2090761]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val stride[2090933]:int(64)[13] "temp"
              (2090938 'move' stride[2090933](2090935 '.v' _iterator[2056843] F2_stride[2126228]))
              (2090764 call chpl_range_check_stride[1103022] stride[2090933])
              val call_tmp[2090766]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val default_arg_first[2090768]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val low[2090940]:int(64)[13] "temp"
              (2090945 'move' low[2090940](2090942 '.v' _iterator[2056843] F0_low[2126220]))
              (2090770 'move' default_arg_first[2090768](2090773 call chpl_checkIfRangeIterWillOverflow_default_first[1103387] low[2090940]))
              const-val default_arg_last[2090775]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val high[2090947]:int(64)[13] "temp"
              (2090952 'move' high[2090947](2090949 '.v' _iterator[2056843] F1_high[2126224]))
              (2090777 'move' default_arg_last[2090775](2090780 call chpl_checkIfRangeIterWillOverflow_default_last[1103415] high[2090947]))
              const-val _return_tmp_[2090782]:bool[10] "dead after last mention" "temp"
              const-val low[2090954]:int(64)[13] "temp"
              (2090959 'move' low[2090954](2090956 '.v' _iterator[2056843] F0_low[2126220]))
              const-val high[2090961]:int(64)[13] "temp"
              (2090966 'move' high[2090961](2090963 '.v' _iterator[2056843] F1_high[2126224]))
              const-val stride[2090968]:int(64)[13] "temp"
              (2090973 'move' stride[2090968](2090970 '.v' _iterator[2056843] F2_stride[2126228]))
              (2090784 'move' _return_tmp_[2090782](2090787 call chpl_checkIfRangeIterWillOverflow[1096265] low[2090954] high[2090961] stride[2090968] default_arg_first[2090768] default_arg_last[2090775] 1))
              val i[2090794]:int(64)[13] "dead at end of block" "insert auto destroy"
              val call_tmp[2090796]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (2090798 'move' i[2090794] 0)
              CForLoop[2090801] hazard
              {
                const-val yret[2090821]:int(64)[13] "dead after last mention" "YVV" "temp"
                (2090823 'move' yret[2090821] i[2090794])
                const-val _yieldedIndex[2090837]:int(64)[13] "temp"
                (2090931 'move' _yieldedIndex[2090837] i[2090794])
                {
                  const-val i[2090839]:int(64)[13] "const" "index var" "insert auto destroy"
                  (2090841 'move' i[2090839] _yieldedIndex[2090837])
                  ref yret[2090844]:_ref(locale)[949033] "dead after last mention" "YVV" "temp"
                  ref call_tmp[2090846]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[2090848]:_ref(_ddata(locale))[1255592] "dead after last mention" "temp"
                  (2090850 'move' _this_tmp_[2090848](2090853 call theData[1303439] info[2056632]))
                  val coerce_tmp[2090855]:_ddata(locale)[1255583] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (2090857 'move' coerce_tmp[2090855](2090859 'deref' _this_tmp_[2090848]))
                  (2090861 'move' call_tmp[2090846](2090864 call this[1303586] coerce_tmp[2090855] _yieldedIndex[2090837]))
                  ref _yieldedIndex[2090867]:_ref(locale)[949033] "temp"
                  (2090869 'move' _yieldedIndex[2090867] call_tmp[2090846])
                  {
                    ref elem[2090873]:_ref(locale)[949033] "index var" "insert auto destroy"
                    (2090875 'move' elem[2090873] _yieldedIndex[2090867])
                    ref yret[2090878]:_ref(locale)[949033] "dead after last mention" "YVV" "temp"
                    ref _yieldedIndex[2090880]:_ref(locale)[949033] "temp"
                    (2090882 'move' _yieldedIndex[2090880] elem[2090873])
                    {
                      ref i[2090886]:_ref(locale)[949033] "index var" "insert auto destroy"
                      (2090888 'move' i[2090886] _yieldedIndex[2090880])
                      ref yret[2090891]:_ref(locale)[949033] "dead after last mention" "YVV" "temp"
                      ref _yieldedIndex[2090893]:_ref(locale)[949033] "temp"
                      (2090895 'move' _yieldedIndex[2090893] i[2090886])
                      {
                        ref loc[2090899]:_ref(locale)[949033] "index var" "insert auto destroy"
                        (2090901 'move' loc[2090899] _yieldedIndex[2090893])
                        {
                          const-val tmp[2090905]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
                          const-val call_tmp[2090907]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
                          val _locale_tmp_[2090909]:BaseLocale[91204] "dead after last mention" "temp"
                          (2090911 'move' _locale_tmp_[2090909](2090914 call _value[89984] loc[2090899]))
                          (2090916 'move' call_tmp[2090907](2090918 '_wide_get_locale' _locale_tmp_[2090909]))
                          (2090920 'move' tmp[2090905] call_tmp[2090907])
                          val rvfDerefTmp[2195597]:locale[28] "temp"
                          (2195601 'move' rvfDerefTmp[2195597](2195599 'deref' loc[2090899]))
                          val isdirect[2198068]:bool[10] "temp"
                          (2198073 'move' isdirect[2198068](2198070 call chpl_doDirectExecuteOn[187469] tmp[2090905]))
                          if isdirect[2198068]
                          {
                            (2198077 call on_fn[934756] rvfDerefTmp[2195597])
                          }
                          {
                            val _args_foron_fn[2198092]:_class_localson_fn[2198084] "temp"
                            (2198096 'move' _args_foron_fn[2198092](2198094 'stack allocate class' _class_localson_fn[2198084]))
                            (2198098 '.=' _args_foron_fn[2198092] _0_tmp[2198087] tmp[2090905])
                            (2198102 '.=' _args_foron_fn[2198092] _1_rvfDerefTmp[2198089] rvfDerefTmp[2195597])
                            val _args_vforon_fn[2198106]:c_void_ptr[149] "temp"
                            (2198110 'move' _args_vforon_fn[2198106](2198108 'cast_to_void_star' _args_foron_fn[2198092]))
                            val _args_sizeon_fn[2198112]:int(64)[13] "temp"
                            (2198116 'move' _args_sizeon_fn[2198112](2198114 'sizeof_bundle' _class_localson_fn[2198084]))
                            on(2198148 call wrapon_fn[2198118] tmp[2090905] _args_vforon_fn[2198106] _args_sizeon_fn[2198112] _args_foron_fn[2198092])
                          }
                          {
                          }
                        }
                        label _continueLabel[2090928]
                      }
                    }
                  }
                }
                {
                  const-val low[2090975]:int(64)[13] "temp"
                  (2090980 'move' low[2090975](2090977 '.v' _iterator[2056843] F0_low[2126220]))
                  (2090803 '=' i[2090794] low[2090975])
                }
                {
                  const-val high[2090982]:int(64)[13] "temp"
                  (2090987 'move' high[2090982](2090984 '.v' _iterator[2056843] F1_high[2126224]))
                  (2090807 '<=' i[2090794] high[2090982])
                }
                {
                  val call_tmp[2090811]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[2090813]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val stride[2090989]:int(64)[13] "temp"
                  (2090994 'move' stride[2090989](2090991 '.v' _iterator[2056843] F2_stride[2126228]))
                  (2090815 'move' call_tmp[2090813] stride[2090989])
                  const-val stride[2090996]:int(64)[13] "temp"
                  (2091001 'move' stride[2090996](2090998 '.v' _iterator[2056843] F2_stride[2126228]))
                  (2090818 '+=' i[2090794] stride[2090996])
                }
              }
              label _endchpl_direct_pos_stride_range_iter[2090833]
            }
            (2056924 call _freeIterator[1303374] _iterator[2056843])
            label _endchpl__serialViewIter[2056926]
          }
          (2056929 call _freeIterator[1303809] _iterator[2056597])
          label _endthese[2056931]
        }
        (1987696 call _freeIterator[1304414] _iterator[1987618])
        label _endthese[1987698]
      }
      label _breakLabel[89663]
      (1919432 call _freeIterator[1305165] _iterator[89658])
    }
    label _enddeinit[1890068]
    const-val _field_destructor_tmp_[1890066]:[domain(1,int(64),false)] locale[1287200] "temp"
    (1890073 'move' _field_destructor_tmp_[1890066](1890070 '.v' this[89756] myLocales[89291]))
    (1890075 call chpl__autoDestroy[1727089] _field_destructor_tmp_[1890066])
    const-val _field_destructor_tmp_[1890078]:domain(1,int(64),false)[1252786] "temp"
    (1890083 'move' _field_destructor_tmp_[1890078](1890080 '.v' this[89756] myLocaleSpace[89280]))
    (1890085 call chpl__autoDestroy[1697012] _field_destructor_tmp_[1890078])
    val _parent_destructor_tmp_[1890088]:AbstractRootLocale[92012] "temp"
    (1890093 'move' _parent_destructor_tmp_[1890088](1890089 'cast' AbstractRootLocale[92012] this[89756]))
    (1890095 call deinit[784302] _parent_destructor_tmp_[1890088])
    (513735 return _void[55])
  }
  function RootLocale[89694].myLocaleSpace[781326](const in arg this[781330]:RootLocale[89694]) const ref : _ref(_domain(unmanaged domain(1,int(64),false)))[1252812] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to a const" "resolved"
  {
    ref ret[781340]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812] "dead after last mention" "RVV" "temp"
    ref call_tmp[781347]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812] "dead after last mention" "maybe param" "temp"
    (781350 'move' call_tmp[781347](781334 '.' this[781330] myLocaleSpace[89280]))
    (781345 'move' ret[781340] call_tmp[781347])
    (781342 return ret[781340])
  }
  function RootLocale[89694].myLocales[781352](const in arg this[781356]:RootLocale[89694]) ref : _ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287226] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[781366]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287226] "dead after last mention" "RVV" "temp"
    ref call_tmp[781373]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287226] "dead after last mention" "maybe param" "temp"
    (781376 'move' call_tmp[781373](781360 '.' this[781356] myLocales[89291]))
    (781371 'move' ret[781366] call_tmp[781373])
    (781368 return ret[781366])
  }
  function _new[1305445]() : RootLocale[89694] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val _formal_type_tmp_[1879965]:RootLocale[89694] "temp"
    val ret[1305484]:RootLocale[89694] "dead after last mention" "RVV" "temp"
    val initTemp[1305447]:RootLocale[89694] "dead after last mention" "temp"
    const-val call_tmp[1305491]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1305494 'move' call_tmp[1305491](1305503 'sizeof_bundle' RootLocale[89694]))
    const-val cast_tmp[1305506]:c_void_ptr[149] "dead after last mention" "temp"
    (1305508 'move' cast_tmp[1305506](1305459 call chpl_here_alloc[187788] call_tmp[1305491] 54))
    (1305462 'move' initTemp[1305447](1305510 'cast' RootLocale[89694] cast_tmp[1305506]))
    (1305464 'setcid' initTemp[1305447])
    (1305448 call init[89297] initTemp[1305447])
    val tmp[1305466]:RootLocale[89694] "dead after last mention" "temp"
    (1305473 'move' tmp[1305466] initTemp[1305447])
    (1305489 'move' ret[1305484] tmp[1305466])
    (1305486 return ret[1305484])
  }
  type RootLocale[89694] val super[355757]:AbstractRootLocale[92012] "super class" const myLocaleSpace[89280]:domain(1,int(64),false)[1252786] "const" val myLocales[89291]:[domain(1,int(64),false)] locale[1287200] "unsafe"
  const-val call_tmp[632120]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
  const-val call_tmp[632125]:domain(1,int(64),false)[1252786] "dead at end of block" "maybe param" "temp"
  const-val init_coerce_tmp[1254157]:domain(1,int(64),false)[1252786] "dead at end of block" "temp"
  ref call_tmp[632135]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812] "dead at end of block" "maybe param" "reference to a const" "temp"
  const-val call_tmp[632140]:_RuntimeTypeInfo[1287433] "dead at end of block" "expr temp" "maybe param" "temp"
  const-val _runtime_type_tmp_[1297868]:domain(1,int(64),false)[1252786] "dead at end of block" "temp"
  function on_fn[934756](const in arg loc[1882140]:locale[28]) : void[4] "on" "resolved"
  {
    {
      (89633 call =[435290] rootLocaleInitialized[310] 0)
      ref call_tmp[632427]:_ref(BaseLocale)[982612] "dead after last mention" "maybe param" "temp"
      ref rvfRerefTmp[2195604]:_ref(locale)[949033] "temp"
      (2195608 'move' rvfRerefTmp[2195604](2195605 'set reference' loc[1882140]))
      (632430 'move' call_tmp[632427](89638 call _instance[782944] rvfRerefTmp[2195604]))
      val coerce_tmp[1305344]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1305348 'move' coerce_tmp[1305344](1305346 'deref' call_tmp[632427]))
      (89642 call chpl__delete[983480] coerce_tmp[1305344])
    }
    (934763 return _void[55])
  }
  function wrapon_fn[2198118](const in arg dummy_locale_arg[2198120]:chpl_localeID_t[209352], in arg buf[2198122]:c_void_ptr[149], in arg buf_size[2198124]:int(64)[13], in arg c[2198126]:_class_localson_fn[2198084]) : void[4] "on block"
  {
    val _0_tmp[2198131]:chpl_localeID_t[209352] "temp"
    (2198136 'move' _0_tmp[2198131](2198133 '.v' c[2198126] _0_tmp[2198087]))
    val _1_rvfDerefTmp[2198138]:locale[28] "temp"
    (2198143 'move' _1_rvfDerefTmp[2198138](2198140 '.v' c[2198126] _1_rvfDerefTmp[2198089]))
    (2198129 call on_fn[934756] _1_rvfDerefTmp[2198138])
    (2198146 return _void[55])
  }
}