AST dump for ChapelDebugPrint after pass normalize.
Module use list: ChapelStandard SysCTypes IO 

{
  function chpl__init_ChapelDebugPrint[416114]() : void[4] "insert line file info" "module init"
  {
    (545533 'init var' chpl__testParFlag[188312] 0)
    (188315 'end of statement')
    (545535 'init var' chpl__testParOn[188317] 0)
    (188320 'end of statement')
    (524241 return _void[55])
  }
  function chpl_debug_stringify[188137](arg args[188134]:_any[178](?) ...) : _unknown[51]
  {
    unknown ret[524217] "RVV" "temp"
    unknown str[188157] "dead at end of block" "insert auto destroy"
    (545525 'init var' str[188157] "")
    (188160 'end of statement')
    {
      unknown i[188204] "dead at end of block" "insert auto destroy"
      (545527 'init var' i[188204] 0)
      (484592 'end of statement')
      unknown tmp[188205] "maybe param" "temp"
      unknown call_tmp[690895] "expr temp" "maybe param" "maybe type" "temp"
      (690898 'move' call_tmp[690895](188164 call size _mt[243] args[188134]))
      unknown call_tmp[690900] "expr temp" "maybe param" "maybe type" "temp"
      (690903 'move' call_tmp[690900](188168 call - call_tmp[690895] 1))
      (188217 'move' tmp[188205](188215 call chpl_compute_low_param_loop_bound 0 call_tmp[690900]))
      unknown tmp[188206] "maybe param" "temp"
      unknown call_tmp[690907] "expr temp" "maybe param" "maybe type" "temp"
      (690910 'move' call_tmp[690907](188224 call size _mt[243] args[188134]))
      unknown call_tmp[690912] "expr temp" "maybe param" "maybe type" "temp"
      (690915 'move' call_tmp[690912](188222 call - call_tmp[690907] 1))
      (188230 'move' tmp[188206](188228 call chpl_compute_high_param_loop_bound 0 call_tmp[690912]))
      unknown tmp[188207] "maybe param" "temp"
      (188233 'move' tmp[188207] 1)
      ParamForLoop[188235]
      { i[188204] tmp[188205] tmp[188206] tmp[188207]
        {
          unknown call_tmp[690917] "maybe param" "maybe type" "temp"
          (690920 'move' call_tmp[690917](188175 call args[188134] i[188204]))
          unknown tmp[188176] "dead at end of block" "insert auto destroy"
          (545529 'init var' tmp[188176] call_tmp[690917])
          (188179 'end of statement' i[188204])
          unknown call_tmp[690922] "expr temp" "maybe param" "maybe type" "temp"
          (690925 'move' call_tmp[690922](188184 call _can_stringify_direct tmp[188176]))
          unknown call_tmp[690927] "expr temp" "maybe param" "maybe type" "temp"
          (690930 'move' call_tmp[690927](188200 call _cond_test call_tmp[690922]))
          if call_tmp[690927]
          {
            unknown call_tmp[690932] "expr temp" "maybe param" "maybe type" "temp"
            (690935 'move' call_tmp[690932](188189 call stringify tmp[188176]))
            (188190 call += str[188157] call_tmp[690932])
            (484594 'end of statement' str[188157] tmp[188176])
          }
          {
            (188196 call += str[188157] "\?")
            (484597 'end of statement' str[188157])
          }
        }
      }
      label _unused_continueLabel[188209]
      label _breakLabel[188208]
    }
    (524223 'move' ret[524217](524222 'coerce' str[188157] string[26]))
    gotoReturn _end_chpl_debug_stringify[524215] _end_chpl_debug_stringify[524215]
    (484599 'end of statement' str[188157])
    label _end_chpl_debug_stringify[524215]
    (524219 return ret[524217])
  }
  { scopeless type
    string[26]
  }
  function chpl_debug_writeln[188256](arg args[188253]:_any[178](?) ...) : _unknown[51] "no return value for void"
  {
    function printf[188264](arg fmt[188261]:c_string[19], arg f[188267]:c_string[19]) : void[4] "extern" "local args" "no fn body" "no return value for void"
    {
      (524227 return _void[55])
    }
    unknown call_tmp[690937] "maybe param" "maybe type" "temp"
    (690940 'move' call_tmp[690937](188277 call chpl_debug_stringify(188275 'expand_tuple' args[188253])))
    unknown str[188278] "dead at end of block" "insert auto destroy"
    (545531 'init var' str[188278] call_tmp[690937])
    (188281 'end of statement')
    unknown call_tmp[690944] "expr temp" "maybe param" "maybe type" "temp"
    (690947 'move' call_tmp[690944](188306 call(188302 call (partial) c_str _mt[243] str[188278])))
    (188307 call printf "%s\n" call_tmp[690944])
    (484601 'end of statement' str[188278])
    (524229 return _void[55])
  }
  unknown chpl__testParFlag[188312] "config" "no doc" "param"
  unknown chpl__testParOn[188317] "dead at end of block" "insert auto destroy" "no doc"
  function chpl__testParStart[188323]() : _unknown[51] "no doc" "no return value for void"
  {
    (188327 call = chpl__testParOn[188317] 1)
    (524231 return _void[55])
  }
  function chpl__testParStop[188335]() : _unknown[51] "no doc" "no return value for void"
  {
    (188339 call = chpl__testParOn[188317] 0)
    (524233 return _void[55])
  }
  function chpl__testPar[188351](arg args[188348]:_any[178](?) ...) : _unknown[51] "no doc" "no return value for void"
  {
    unknown tmp[429604] "maybe param" "temp"
    (429615 'move' tmp[429604] chpl__testParFlag[188312])
    unknown call_tmp[690949] "expr temp" "maybe param" "maybe type" "temp"
    (690952 'move' call_tmp[690949](429617 call _cond_invalid tmp[429604]))
    if call_tmp[690949]
    {
      (429620 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[572195] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[572196] "maybe param" "temp"
    unknown call_tmp[690954] "expr temp" "maybe param" "maybe type" "temp"
    (690957 'move' call_tmp[690954](429605 call isTrue tmp[429604]))
    (572201 'move' tmp[572196](572199 call _cond_test call_tmp[690954]))
    if tmp[572196]
    {
      unknown tmp[572203] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (572205 'move' tmp[572203](429608 call isTrue chpl__testParOn[188317]))
      (572210 'move' tmp[572195](572207 '_paramFoldLogical' tmp[572196] tmp[572203]))
    }
    {
      (572215 'move' tmp[572195](572212 '_paramFoldLogical' tmp[572196] 0))
    }
    unknown call_tmp[690959] "expr temp" "maybe param" "maybe type" "temp"
    (690962 'move' call_tmp[690959](188456 call _cond_test tmp[572195]))
    if call_tmp[690959]
    {
      unknown call_tmp[690964] "expr temp" "maybe param" "maybe type" "temp"
      (690967 'move' call_tmp[690964](188362 '_get_user_file'))
      unknown call_tmp[690969] "maybe param" "maybe type" "temp"
      (690972 'move' call_tmp[690969](188363 'chpl_lookupFilename' call_tmp[690964]))
      const file_cs[188364] "dead at end of block" "const" "insert auto destroy"
      (545537 'init var' file_cs[188364] call_tmp[690969] c_string[19])
      (188367 'end of statement')
      unknown file[188370] "dead at end of block" "insert auto destroy" "split inited"
      unknown type_tmp[545539] "maybe param" "maybe type" "temp"
      (545548 'move' type_tmp[545539](545547 call string[26]))
      (545541 'init var split decl' file[188370] type_tmp[545539])
      (188373 'end of statement')
      Try!
      {
        {
          unknown call_tmp[690974] "maybe param" "maybe type" "temp"
          (690977 'move' call_tmp[690974](188378 call createStringWithNewBuffer file_cs[188364]))
          (545550 'init var split init' file[188370] call_tmp[690974] type_tmp[545539])
          (484606 'end of statement' file[188370] file_cs[188364])
        }
      }
      unknown call_tmp[690979] "maybe param" "maybe type" "temp"
      (690982 'move' call_tmp[690979](188388 '_get_user_line'))
      const line[188389] "dead at end of block" "const" "insert auto destroy"
      (545553 'init var' line[188389] call_tmp[690979])
      (188392 'end of statement')
      unknown call_tmp[690984] "maybe param" "maybe type" "temp"
      (690987 'move' call_tmp[690984](188397 call chpl_debug_stringify(188395 'expand_tuple' args[188348])))
      unknown str[188398] "dead at end of block" "insert auto destroy"
      (545555 'init var' str[188398] call_tmp[690984])
      (188401 'end of statement')
      function printf[188408](arg fmt[188405]:c_string[19], arg f[188411]:c_string[19], arg ln[188415] :
      c_int[20549], arg s[188419]:c_string[19]) : void[4] "extern" "local args" "no fn body" "no return value for void"
      {
        (524235 return _void[55])
      }
      unknown call_tmp[690989] "expr temp" "maybe param" "maybe type" "temp"
      (690992 'move' call_tmp[690989](188446 call _cast c_int[20549] line[188389]))
      unknown call_tmp[690996] "expr temp" "maybe param" "maybe type" "temp"
      (690999 'move' call_tmp[690996](188453 call(188449 call (partial) c_str _mt[243] str[188398])))
      (188454 call printf "CHPL TEST PAR (%s:%i): %s\n" file_cs[188364] call_tmp[690989] call_tmp[690996])
      (484609 'end of statement' file_cs[188364] line[188389] str[188398])
    }
    (524237 return _void[55])
  }
  function chpl__testParWriteln[188469](arg args[188466]:_any[178](?) ...) : _unknown[51] "no doc" "no return value for void"
  {
    unknown tmp[429625] "maybe param" "temp"
    (429636 'move' tmp[429625] chpl__testParFlag[188312])
    unknown call_tmp[691001] "expr temp" "maybe param" "maybe type" "temp"
    (691004 'move' call_tmp[691001](429638 call _cond_invalid tmp[429625]))
    if call_tmp[691001]
    {
      (429641 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[572222] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[572223] "maybe param" "temp"
    unknown call_tmp[691006] "expr temp" "maybe param" "maybe type" "temp"
    (691009 'move' call_tmp[691006](429626 call isTrue tmp[429625]))
    (572228 'move' tmp[572223](572226 call _cond_test call_tmp[691006]))
    if tmp[572223]
    {
      unknown tmp[572230] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (572232 'move' tmp[572230](429629 call isTrue chpl__testParOn[188317]))
      (572237 'move' tmp[572222](572234 '_paramFoldLogical' tmp[572223] tmp[572230]))
    }
    {
      (572242 'move' tmp[572222](572239 '_paramFoldLogical' tmp[572223] 0))
    }
    unknown call_tmp[691011] "expr temp" "maybe param" "maybe type" "temp"
    (691014 'move' call_tmp[691011](188554 call _cond_test tmp[572222]))
    if call_tmp[691011]
    {
      unknown call_tmp[691016] "expr temp" "maybe param" "maybe type" "temp"
      (691019 'move' call_tmp[691016](188480 '_get_user_file'))
      unknown call_tmp[691021] "maybe param" "maybe type" "temp"
      (691024 'move' call_tmp[691021](188481 'chpl_lookupFilename' call_tmp[691016]))
      const file_cs[188482] "dead at end of block" "const" "insert auto destroy"
      (545557 'init var' file_cs[188482] call_tmp[691021] c_string[19])
      (188485 'end of statement')
      unknown file[188488] "dead at end of block" "insert auto destroy" "split inited"
      unknown type_tmp[545559] "maybe param" "maybe type" "temp"
      (545568 'move' type_tmp[545559](545567 call string[26]))
      (545561 'init var split decl' file[188488] type_tmp[545559])
      (188491 'end of statement')
      Try!
      {
        {
          unknown call_tmp[691026] "maybe param" "maybe type" "temp"
          (691029 'move' call_tmp[691026](188496 call createStringWithNewBuffer file_cs[188482]))
          (545570 'init var split init' file[188488] call_tmp[691026] type_tmp[545559])
          (484614 'end of statement' file[188488] file_cs[188482])
        }
      }
      unknown call_tmp[691031] "maybe param" "maybe type" "temp"
      (691034 'move' call_tmp[691031](188506 '_get_user_line'))
      const line[188507] "dead at end of block" "const" "insert auto destroy"
      (545573 'init var' line[188507] call_tmp[691031])
      (188510 'end of statement')
      (188552 call writeln "CHPL TEST PAR (" file[188488] ":" line[188507] "): "(188551 'expand_tuple' args[188466]))
      (484617 'end of statement' file[188488] line[188507])
    }
    (524239 return _void[55])
  }
  (355290 'used modules list'(188124 'use' ChapelStandard[20264])(188126 'use' SysCTypes[20940])(188129 'use' IO[230808]))
}