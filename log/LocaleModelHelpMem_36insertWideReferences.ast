AST dump for LocaleModelHelpMem after pass insertWideReferences.
Module use list: ChapelStandard SysCTypes 

{
  function chpl__init_LocaleModelHelpMem[416096]() : void[4] "insert line file info" "module init" "resolved"
  {
    (524195 return _void[55])
  }
  function chpl_memhook_md_num[187773]() : int(16)[90] "extern" "local args" "no fn body" "private" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[524082]:int(16)[90] "RVV" "temp"
    (524084 return ret[524082])
  }
  function _local_chpl_here_alloc[2535446](const in arg size[2535448]:int(64)[13], const in arg md[2535450]:int(16)[90]) : c_void_ptr[149] "allocator" "always propagate line file info" "locale model alloc" "local fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_4779[2535453]:string[26] "temp"
    (2535455 'move' local__str_literal_4779[2535453] "casting int(64) less than 0 to uint(64)")
    const-val call_tmp[2535458]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2535460 'move' call_tmp[2535458](2535462 '<' size[2535448] 0))
    if call_tmp[2535458]
    {
      (2535468 call _local_safeCastCheckHalt[2538611] local__str_literal_4779[2535453])
    }
    const-val call_tmp[2535471]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2535473 'move' call_tmp[2535471](2535475 'cast' uint(64)[115] size[2535448]))
    const-val call_tmp[2535478]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2535480 'move' call_tmp[2535478](2535483 call chpl_memhook_md_num[187773]))
    const-val call_tmp[2535484]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2535486 'move' call_tmp[2535484](2535488 '+' md[2535450] call_tmp[2535478]))
    const-val call_tmp[2535491]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2535493 'move' call_tmp[2535491](2535496 call chpl_mem_alloc[187801] call_tmp[2535471] call_tmp[2535484]))
    (2535499 return call_tmp[2535491])
  }
  function chpl_here_alloc[187788](const in arg size[187785]:int(64)[13], const in arg md[187791]:int(16)[90]) : c_void_ptr[149] "allocator" "always propagate line file info" "locale model alloc" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_4779[2515038]:string[26] "temp"
    (2515039 'move' "casting int(64) less than 0 to uint(64)" "casting int(64) less than 0 to uint(64)")
    const-val call_tmp[2217441]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2217443 'move' call_tmp[2217441](2217445 '<' size[187785] 0))
    if call_tmp[2217441]
    {
      (2217451 call safeCastCheckHalt[210235] "casting int(64) less than 0 to uint(64)")
    }
    const-val call_tmp[2217454]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2217456 'move' call_tmp[2217454](2217458 'cast' uint(64)[115] size[187785]))
    const-val call_tmp[690738]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (690741 'move' call_tmp[690738](187824 call chpl_memhook_md_num[187773]))
    const-val call_tmp[2278977]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2278979 'move' call_tmp[2278977](2278981 '+' md[187791] call_tmp[690738]))
    const-val call_tmp[690748]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (690751 'move' call_tmp[690748](187827 call chpl_mem_alloc[187801] call_tmp[2217454] call_tmp[2278977]))
    (524096 return call_tmp[690748])
  }
  function chpl_here_alloc[1080551](const in arg size[1080553]:uint(64)[115], const in arg md[1080557]:int(16)[90]) : c_void_ptr[149] "allocator" "always propagate line file info" "instantiated generic" "invisible fn" "llvm return noalias" "resolved"
  {
    const-val call_tmp[1080597]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (1080599 'move' call_tmp[1080597](1080602 call chpl_memhook_md_num[187773]))
    const-val call_tmp[2278987]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2278989 'move' call_tmp[2278987](2278991 '+' md[1080557] call_tmp[1080597]))
    const-val call_tmp[1080611]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (1080613 'move' call_tmp[1080611](1080616 call chpl_mem_alloc[1080569] size[1080553] call_tmp[2278987]))
    (1080624 return call_tmp[1080611])
  }
  function _local_chpl_here_calloc[2549646](const in arg size[2549648]:uint(64)[115], const in arg number[2549650]:int(64)[13], const in arg md[2549652]:int(16)[90]) : c_void_ptr[149] "allocator" "always propagate line file info" "instantiated generic" "invisible fn" "llvm return noalias" "local fn" "resolved"
  {
    const-val local__str_literal_4779[2549655]:string[26] "temp"
    (2549657 'move' local__str_literal_4779[2549655] "casting int(64) less than 0 to uint(64)")
    const-val call_tmp[2549660]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2549662 'move' call_tmp[2549660](2549664 '<' number[2549650] 0))
    if call_tmp[2549660]
    {
      (2549670 call _local_safeCastCheckHalt[2538611] local__str_literal_4779[2549655])
    }
    const-val call_tmp[2549673]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2549675 'move' call_tmp[2549673](2549677 'cast' uint(64)[115] number[2549650]))
    const-val call_tmp[2549680]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2549682 'move' call_tmp[2549680](2549685 call chpl_memhook_md_num[187773]))
    const-val call_tmp[2549686]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2549688 'move' call_tmp[2549686](2549690 '+' md[2549652] call_tmp[2549680]))
    const-val call_tmp[2549693]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2549695 'move' call_tmp[2549693](2549698 call chpl_mem_calloc[1238602] call_tmp[2549673] size[2549648] call_tmp[2549686]))
    (2549702 return call_tmp[2549693])
  }
  function chpl_here_calloc[1238580](const in arg size[1238582]:uint(64)[115], const in arg number[1238584]:int(64)[13], const in arg md[1238588]:int(16)[90]) : c_void_ptr[149] "allocator" "always propagate line file info" "instantiated generic" "invisible fn" "llvm return noalias" "resolved"
  {
    const-val local__str_literal_4779[2516699]:string[26] "temp"
    (2516700 'move' "casting int(64) less than 0 to uint(64)" "casting int(64) less than 0 to uint(64)")
    const-val call_tmp[2217648]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2217650 'move' call_tmp[2217648](2217652 '<' number[1238584] 0))
    if call_tmp[2217648]
    {
      (2217658 call safeCastCheckHalt[210235] "casting int(64) less than 0 to uint(64)")
    }
    const-val call_tmp[2217661]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2217663 'move' call_tmp[2217661](2217665 'cast' uint(64)[115] number[1238584]))
    const-val call_tmp[1238644]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (1238646 'move' call_tmp[1238644](1238649 call chpl_memhook_md_num[187773]))
    const-val call_tmp[2278997]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2278999 'move' call_tmp[2278997](2279001 '+' md[1238588] call_tmp[1238644]))
    const-val call_tmp[1238658]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (1238660 'move' call_tmp[1238658](1238663 call chpl_mem_calloc[1238602] call_tmp[2217661] size[1238582] call_tmp[2278997]))
    (1238672 return call_tmp[1238658])
  }
  function _local_chpl_here_realloc[2550717](const in arg ptr[2550719]:c_void_ptr[149], const in arg size[2550721]:int(64)[13], const in arg md[2550723]:int(16)[90]) : c_void_ptr[149] "allocator" "always propagate line file info" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_4779[2550726]:string[26] "temp"
    (2550728 'move' local__str_literal_4779[2550726] "casting int(64) less than 0 to uint(64)")
    const-val call_tmp[2550731]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2550733 'move' call_tmp[2550731](2550735 '<' size[2550721] 0))
    if call_tmp[2550731]
    {
      (2550741 call _local_safeCastCheckHalt[2538611] local__str_literal_4779[2550726])
    }
    const-val call_tmp[2550744]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2550746 'move' call_tmp[2550744](2550748 'cast' uint(64)[115] size[2550721]))
    const-val call_tmp[2550751]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2550753 'move' call_tmp[2550751](2550756 call chpl_memhook_md_num[187773]))
    const-val call_tmp[2550757]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2550759 'move' call_tmp[2550757](2550761 '+' md[2550723] call_tmp[2550751]))
    const-val call_tmp[2550764]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2550766 'move' call_tmp[2550764](2550769 call chpl_mem_realloc[970182] ptr[2550719] call_tmp[2550744] call_tmp[2550757]))
    (2550773 return call_tmp[2550764])
  }
  function chpl_here_realloc[970162](const in arg ptr[970164]:c_void_ptr[149], const in arg size[970166]:int(64)[13], const in arg md[970170]:int(16)[90]) : c_void_ptr[149] "allocator" "always propagate line file info" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_4779[2515475]:string[26] "temp"
    (2515476 'move' "casting int(64) less than 0 to uint(64)" "casting int(64) less than 0 to uint(64)")
    const-val call_tmp[2217510]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2217512 'move' call_tmp[2217510](2217514 '<' size[970166] 0))
    if call_tmp[2217510]
    {
      (2217520 call safeCastCheckHalt[210235] "casting int(64) less than 0 to uint(64)")
    }
    const-val call_tmp[2217523]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2217525 'move' call_tmp[2217523](2217527 'cast' uint(64)[115] size[970166]))
    const-val call_tmp[970212]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (970214 'move' call_tmp[970212](970217 call chpl_memhook_md_num[187773]))
    const-val call_tmp[2278967]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2278969 'move' call_tmp[2278967](2278971 '+' md[970170] call_tmp[970212]))
    const-val call_tmp[970226]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (970228 'move' call_tmp[970226](970231 call chpl_mem_realloc[970182] ptr[970164] call_tmp[2217523] call_tmp[2278967]))
    (970240 return call_tmp[970226])
  }
  function _local_chpl_here_good_alloc_size[2535356](const in arg min_size[2535358]:int(64)[13]) : int(64)[13] "always propagate line file info" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_4790[2535361]:string[26] "temp"
    (2535363 'move' local__str_literal_4790[2535361] "casting uint(64) with a value greater than the maximum of int(64) to int(64)")
    const-val local__str_literal_4779[2535366]:string[26] "temp"
    (2535368 'move' local__str_literal_4779[2535366] "casting int(64) less than 0 to uint(64)")
    const-val call_tmp[2535371]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2535373 'move' call_tmp[2535371](2535375 '<' min_size[2535358] 0))
    if call_tmp[2535371]
    {
      (2535381 call _local_safeCastCheckHalt[2538611] local__str_literal_4779[2535366])
    }
    const-val call_tmp[2535384]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2535386 'move' call_tmp[2535384](2535388 'cast' uint(64)[115] min_size[2535358]))
    const-val call_tmp[2535391]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2535393 'move' call_tmp[2535391](2535396 call chpl_mem_good_alloc_size[949775] call_tmp[2535384]))
    const-val call_tmp[2535398]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2535400 'move' call_tmp[2535398](2535402 '>' call_tmp[2535391] 9223372036854775807))
    if call_tmp[2535398]
    {
      (2535408 call _local_safeCastCheckHalt[2538611] local__str_literal_4790[2535361])
    }
    const-val call_tmp[2535411]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2535413 'move' call_tmp[2535411](2535415 'cast' int(64)[13] call_tmp[2535391]))
    (2535418 return call_tmp[2535411])
  }
  function chpl_here_good_alloc_size[949760](const in arg min_size[949762]:int(64)[13]) : int(64)[13] "always propagate line file info" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_4790[2515445]:string[26] "temp"
    (2515446 'move' "casting uint(64) with a value greater than the maximum of int(64) to int(64)" "casting uint(64) with a value greater than the maximum of int(64) to int(64)")
    const-val local__str_literal_4779[2515439]:string[26] "temp"
    (2515440 'move' "casting int(64) less than 0 to uint(64)" "casting int(64) less than 0 to uint(64)")
    const-val call_tmp[2217464]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2217466 'move' call_tmp[2217464](2217468 '<' min_size[949762] 0))
    if call_tmp[2217464]
    {
      (2217474 call safeCastCheckHalt[210235] "casting int(64) less than 0 to uint(64)")
    }
    const-val call_tmp[2217477]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2217479 'move' call_tmp[2217477](2217481 'cast' uint(64)[115] min_size[949762]))
    const-val call_tmp[949799]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (949801 'move' call_tmp[949799](949804 call chpl_mem_good_alloc_size[949775] call_tmp[2217477]))
    const-val call_tmp[2285514]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2285516 'move' call_tmp[2285514](2285518 '>' call_tmp[949799] 9223372036854775807))
    if call_tmp[2285514]
    {
      (2285524 call safeCastCheckHalt[210235] "casting uint(64) with a value greater than the maximum of int(64) to int(64)")
    }
    const-val call_tmp[2285527]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2285529 'move' call_tmp[2285527](2285531 'cast' int(64)[13] call_tmp[949799]))
    (949833 return call_tmp[2285527])
  }
  function _local_chpl_here_free[2540958](const in arg ptr[2540960]:c_void_ptr[149]) : void[4] "always propagate line file info" "locale model free" "local fn" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[2540963]:void[4] "dead after last mention" "RVV" "temp"
    (2540966 call chpl_mem_free[188136] ptr[2540960])
    (2540968 return ret[2540963])
  }
  function chpl_here_free[188127](const in arg ptr[188124]:c_void_ptr[149]) : void[4] "always propagate line file info" "locale model free" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[524191]:void[4] "dead after last mention" "RVV" "temp"
    (188146 call chpl_mem_free[188136] ptr[188124])
    (524193 return ret[524191])
  }
  function chpl_mem_alloc[187801](const in arg size[187798]:uint(64)[115], const in arg md[187804]:int(16)[90]) : c_void_ptr[149] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[524088]:c_void_ptr[149] "RVV" "temp"
    (524090 return ret[524088])
  }
  function chpl_mem_free[188136](const in arg ptr[188133]:c_void_ptr[149]) : void[4] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[524185]:void[4] "RVV" "temp"
    (524187 return ret[524185])
  }
  function chpl_mem_good_alloc_size[949775](const in arg min_size[949779]:uint(64)[115]) : uint(64)[115] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[949782]:uint(64)[115] "RVV" "temp"
    (949784 return ret[949782])
  }
  function chpl_mem_realloc[970182](const in arg ptr[970184]:c_void_ptr[149], const in arg size[970188]:uint(64)[115], const in arg md[970192]:int(16)[90]) : c_void_ptr[149] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[970195]:c_void_ptr[149] "RVV" "temp"
    (970197 return ret[970195])
  }
  function chpl_mem_alloc[1080569](const in arg size[1080573]:uint(64)[115], const in arg md[1080577]:int(16)[90]) : c_void_ptr[149] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1080580]:c_void_ptr[149] "RVV" "temp"
    (1080582 return ret[1080580])
  }
  function chpl_mem_calloc[1238602](const in arg number[1238606]:uint(64)[115], const in arg size[1238610]:uint(64)[115], const in arg md[1238614]:int(16)[90]) : c_void_ptr[149] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1238617]:c_void_ptr[149] "RVV" "temp"
    (1238619 return ret[1238617])
  }
}