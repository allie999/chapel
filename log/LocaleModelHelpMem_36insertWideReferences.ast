AST dump for LocaleModelHelpMem after pass insertWideReferences.
Module use list: ChapelStandard SysCTypes 

{
  function chpl__init_LocaleModelHelpMem[416091]() : void[4] "insert line file info" "module init" "resolved"
  {
    (524190 return _void[55])
  }
  function chpl_memhook_md_num[187773]() : int(16)[90] "extern" "local args" "no fn body" "private" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[524077]:int(16)[90] "RVV" "temp"
    (524079 return ret[524077])
  }
  function _local_chpl_here_alloc[2349486](const in arg size[2349488]:int(64)[13], const in arg md[2349490]:int(16)[90]) : c_void_ptr[149] "allocator" "always propagate line file info" "locale model alloc" "local fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_4783[2349493]:string[26] "temp"
    (2349495 'move' local__str_literal_4783[2349493] "casting int(64) less than 0 to uint(64)")
    const-val call_tmp[2349498]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2349500 'move' call_tmp[2349498](2349502 '<' size[2349488] 0))
    if call_tmp[2349498]
    {
      (2349508 call _local_safeCastCheckHalt[2352651] local__str_literal_4783[2349493])
    }
    const-val call_tmp[2349511]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2349513 'move' call_tmp[2349511](2349515 'cast' uint(64)[115] size[2349488]))
    const-val call_tmp[2349518]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2349520 'move' call_tmp[2349518](2349523 call chpl_memhook_md_num[187773]))
    const-val call_tmp[2349524]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2349526 'move' call_tmp[2349524](2349528 '+' md[2349490] call_tmp[2349518]))
    const-val call_tmp[2349531]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2349533 'move' call_tmp[2349531](2349536 call chpl_mem_alloc[187801] call_tmp[2349511] call_tmp[2349524]))
    (2349539 return call_tmp[2349531])
  }
  function chpl_here_alloc[187788](const in arg size[187785]:int(64)[13], const in arg md[187791]:int(16)[90]) : c_void_ptr[149] "allocator" "always propagate line file info" "locale model alloc" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_4783[2329984]:string[26] "temp"
    (2329985 'move' "casting int(64) less than 0 to uint(64)" "casting int(64) less than 0 to uint(64)")
    const-val call_tmp[2116656]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2116658 'move' call_tmp[2116656](2116660 '<' size[187785] 0))
    if call_tmp[2116656]
    {
      (2116666 call safeCastCheckHalt[210233] "casting int(64) less than 0 to uint(64)")
    }
    const-val call_tmp[2116669]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2116671 'move' call_tmp[2116669](2116673 'cast' uint(64)[115] size[187785]))
    const-val call_tmp[690722]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (690725 'move' call_tmp[690722](187824 call chpl_memhook_md_num[187773]))
    const-val call_tmp[2173901]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2173903 'move' call_tmp[2173901](2173905 '+' md[187791] call_tmp[690722]))
    const-val call_tmp[690732]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (690735 'move' call_tmp[690732](187827 call chpl_mem_alloc[187801] call_tmp[2116669] call_tmp[2173901]))
    (524091 return call_tmp[690732])
  }
  function chpl_here_alloc[1080509](const in arg size[1080511]:uint(64)[115], const in arg md[1080515]:int(16)[90]) : c_void_ptr[149] "allocator" "always propagate line file info" "instantiated generic" "invisible fn" "llvm return noalias" "resolved"
  {
    const-val call_tmp[1080555]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (1080557 'move' call_tmp[1080555](1080560 call chpl_memhook_md_num[187773]))
    const-val call_tmp[2173911]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2173913 'move' call_tmp[2173911](2173915 '+' md[1080515] call_tmp[1080555]))
    const-val call_tmp[1080569]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (1080571 'move' call_tmp[1080569](1080574 call chpl_mem_alloc[1080527] size[1080511] call_tmp[2173911]))
    (1080582 return call_tmp[1080569])
  }
  function _local_chpl_here_calloc[2363686](const in arg size[2363688]:uint(64)[115], const in arg number[2363690]:int(64)[13], const in arg md[2363692]:int(16)[90]) : c_void_ptr[149] "allocator" "always propagate line file info" "instantiated generic" "invisible fn" "llvm return noalias" "local fn" "resolved"
  {
    const-val local__str_literal_4783[2363695]:string[26] "temp"
    (2363697 'move' local__str_literal_4783[2363695] "casting int(64) less than 0 to uint(64)")
    const-val call_tmp[2363700]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2363702 'move' call_tmp[2363700](2363704 '<' number[2363690] 0))
    if call_tmp[2363700]
    {
      (2363710 call _local_safeCastCheckHalt[2352651] local__str_literal_4783[2363695])
    }
    const-val call_tmp[2363713]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2363715 'move' call_tmp[2363713](2363717 'cast' uint(64)[115] number[2363690]))
    const-val call_tmp[2363720]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2363722 'move' call_tmp[2363720](2363725 call chpl_memhook_md_num[187773]))
    const-val call_tmp[2363726]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2363728 'move' call_tmp[2363726](2363730 '+' md[2363692] call_tmp[2363720]))
    const-val call_tmp[2363733]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2363735 'move' call_tmp[2363733](2363738 call chpl_mem_calloc[1238560] call_tmp[2363713] size[2363688] call_tmp[2363726]))
    (2363742 return call_tmp[2363733])
  }
  function chpl_here_calloc[1238538](const in arg size[1238540]:uint(64)[115], const in arg number[1238542]:int(64)[13], const in arg md[1238546]:int(16)[90]) : c_void_ptr[149] "allocator" "always propagate line file info" "instantiated generic" "invisible fn" "llvm return noalias" "resolved"
  {
    const-val local__str_literal_4783[2331630]:string[26] "temp"
    (2331631 'move' "casting int(64) less than 0 to uint(64)" "casting int(64) less than 0 to uint(64)")
    const-val call_tmp[2116863]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2116865 'move' call_tmp[2116863](2116867 '<' number[1238542] 0))
    if call_tmp[2116863]
    {
      (2116873 call safeCastCheckHalt[210233] "casting int(64) less than 0 to uint(64)")
    }
    const-val call_tmp[2116876]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2116878 'move' call_tmp[2116876](2116880 'cast' uint(64)[115] number[1238542]))
    const-val call_tmp[1238602]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (1238604 'move' call_tmp[1238602](1238607 call chpl_memhook_md_num[187773]))
    const-val call_tmp[2173921]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2173923 'move' call_tmp[2173921](2173925 '+' md[1238546] call_tmp[1238602]))
    const-val call_tmp[1238616]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (1238618 'move' call_tmp[1238616](1238621 call chpl_mem_calloc[1238560] call_tmp[2116876] size[1238540] call_tmp[2173921]))
    (1238630 return call_tmp[1238616])
  }
  function _local_chpl_here_realloc[2364757](const in arg ptr[2364759]:c_void_ptr[149], const in arg size[2364761]:int(64)[13], const in arg md[2364763]:int(16)[90]) : c_void_ptr[149] "allocator" "always propagate line file info" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_4783[2364766]:string[26] "temp"
    (2364768 'move' local__str_literal_4783[2364766] "casting int(64) less than 0 to uint(64)")
    const-val call_tmp[2364771]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2364773 'move' call_tmp[2364771](2364775 '<' size[2364761] 0))
    if call_tmp[2364771]
    {
      (2364781 call _local_safeCastCheckHalt[2352651] local__str_literal_4783[2364766])
    }
    const-val call_tmp[2364784]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2364786 'move' call_tmp[2364784](2364788 'cast' uint(64)[115] size[2364761]))
    const-val call_tmp[2364791]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2364793 'move' call_tmp[2364791](2364796 call chpl_memhook_md_num[187773]))
    const-val call_tmp[2364797]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2364799 'move' call_tmp[2364797](2364801 '+' md[2364763] call_tmp[2364791]))
    const-val call_tmp[2364804]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2364806 'move' call_tmp[2364804](2364809 call chpl_mem_realloc[970140] ptr[2364759] call_tmp[2364784] call_tmp[2364797]))
    (2364813 return call_tmp[2364804])
  }
  function chpl_here_realloc[970120](const in arg ptr[970122]:c_void_ptr[149], const in arg size[970124]:int(64)[13], const in arg md[970128]:int(16)[90]) : c_void_ptr[149] "allocator" "always propagate line file info" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_4783[2330406]:string[26] "temp"
    (2330407 'move' "casting int(64) less than 0 to uint(64)" "casting int(64) less than 0 to uint(64)")
    const-val call_tmp[2116725]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2116727 'move' call_tmp[2116725](2116729 '<' size[970124] 0))
    if call_tmp[2116725]
    {
      (2116735 call safeCastCheckHalt[210233] "casting int(64) less than 0 to uint(64)")
    }
    const-val call_tmp[2116738]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2116740 'move' call_tmp[2116738](2116742 'cast' uint(64)[115] size[970124]))
    const-val call_tmp[970170]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (970172 'move' call_tmp[970170](970175 call chpl_memhook_md_num[187773]))
    const-val call_tmp[2173891]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2173893 'move' call_tmp[2173891](2173895 '+' md[970128] call_tmp[970170]))
    const-val call_tmp[970184]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (970186 'move' call_tmp[970184](970189 call chpl_mem_realloc[970140] ptr[970122] call_tmp[2116738] call_tmp[2173891]))
    (970198 return call_tmp[970184])
  }
  function _local_chpl_here_good_alloc_size[2349396](const in arg min_size[2349398]:int(64)[13]) : int(64)[13] "always propagate line file info" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_4794[2349401]:string[26] "temp"
    (2349403 'move' local__str_literal_4794[2349401] "casting uint(64) with a value greater than the maximum of int(64) to int(64)")
    const-val local__str_literal_4783[2349406]:string[26] "temp"
    (2349408 'move' local__str_literal_4783[2349406] "casting int(64) less than 0 to uint(64)")
    const-val call_tmp[2349411]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2349413 'move' call_tmp[2349411](2349415 '<' min_size[2349398] 0))
    if call_tmp[2349411]
    {
      (2349421 call _local_safeCastCheckHalt[2352651] local__str_literal_4783[2349406])
    }
    const-val call_tmp[2349424]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2349426 'move' call_tmp[2349424](2349428 'cast' uint(64)[115] min_size[2349398]))
    const-val call_tmp[2349431]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2349433 'move' call_tmp[2349431](2349436 call chpl_mem_good_alloc_size[949733] call_tmp[2349424]))
    const-val call_tmp[2349438]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2349440 'move' call_tmp[2349438](2349442 '>' call_tmp[2349431] 9223372036854775807))
    if call_tmp[2349438]
    {
      (2349448 call _local_safeCastCheckHalt[2352651] local__str_literal_4794[2349401])
    }
    const-val call_tmp[2349451]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2349453 'move' call_tmp[2349451](2349455 'cast' int(64)[13] call_tmp[2349431]))
    (2349458 return call_tmp[2349451])
  }
  function chpl_here_good_alloc_size[949718](const in arg min_size[949720]:int(64)[13]) : int(64)[13] "always propagate line file info" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_4794[2330376]:string[26] "temp"
    (2330377 'move' "casting uint(64) with a value greater than the maximum of int(64) to int(64)" "casting uint(64) with a value greater than the maximum of int(64) to int(64)")
    const-val local__str_literal_4783[2330370]:string[26] "temp"
    (2330371 'move' "casting int(64) less than 0 to uint(64)" "casting int(64) less than 0 to uint(64)")
    const-val call_tmp[2116679]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2116681 'move' call_tmp[2116679](2116683 '<' min_size[949720] 0))
    if call_tmp[2116679]
    {
      (2116689 call safeCastCheckHalt[210233] "casting int(64) less than 0 to uint(64)")
    }
    const-val call_tmp[2116692]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2116694 'move' call_tmp[2116692](2116696 'cast' uint(64)[115] min_size[949720]))
    const-val call_tmp[949757]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (949759 'move' call_tmp[949757](949762 call chpl_mem_good_alloc_size[949733] call_tmp[2116692]))
    const-val call_tmp[2179937]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2179939 'move' call_tmp[2179937](2179941 '>' call_tmp[949757] 9223372036854775807))
    if call_tmp[2179937]
    {
      (2179947 call safeCastCheckHalt[210233] "casting uint(64) with a value greater than the maximum of int(64) to int(64)")
    }
    const-val call_tmp[2179950]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2179952 'move' call_tmp[2179950](2179954 'cast' int(64)[13] call_tmp[949757]))
    (949791 return call_tmp[2179950])
  }
  function _local_chpl_here_free[2354998](const in arg ptr[2355000]:c_void_ptr[149]) : void[4] "always propagate line file info" "locale model free" "local fn" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[2355003]:void[4] "dead after last mention" "RVV" "temp"
    (2355006 call chpl_mem_free[188136] ptr[2355000])
    (2355008 return ret[2355003])
  }
  function chpl_here_free[188127](const in arg ptr[188124]:c_void_ptr[149]) : void[4] "always propagate line file info" "locale model free" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[524186]:void[4] "dead after last mention" "RVV" "temp"
    (188146 call chpl_mem_free[188136] ptr[188124])
    (524188 return ret[524186])
  }
  function chpl_mem_alloc[187801](const in arg size[187798]:uint(64)[115], const in arg md[187804]:int(16)[90]) : c_void_ptr[149] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[524083]:c_void_ptr[149] "RVV" "temp"
    (524085 return ret[524083])
  }
  function chpl_mem_free[188136](const in arg ptr[188133]:c_void_ptr[149]) : void[4] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[524180]:void[4] "RVV" "temp"
    (524182 return ret[524180])
  }
  function chpl_mem_good_alloc_size[949733](const in arg min_size[949737]:uint(64)[115]) : uint(64)[115] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[949740]:uint(64)[115] "RVV" "temp"
    (949742 return ret[949740])
  }
  function chpl_mem_realloc[970140](const in arg ptr[970142]:c_void_ptr[149], const in arg size[970146]:uint(64)[115], const in arg md[970150]:int(16)[90]) : c_void_ptr[149] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[970153]:c_void_ptr[149] "RVV" "temp"
    (970155 return ret[970153])
  }
  function chpl_mem_alloc[1080527](const in arg size[1080531]:uint(64)[115], const in arg md[1080535]:int(16)[90]) : c_void_ptr[149] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1080538]:c_void_ptr[149] "RVV" "temp"
    (1080540 return ret[1080538])
  }
  function chpl_mem_calloc[1238560](const in arg number[1238564]:uint(64)[115], const in arg size[1238568]:uint(64)[115], const in arg md[1238572]:int(16)[90]) : c_void_ptr[149] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1238575]:c_void_ptr[149] "RVV" "temp"
    (1238577 return ret[1238575])
  }
}