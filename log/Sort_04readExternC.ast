AST dump for Sort after pass readExternC.
Module use list: 

{
  (353060 'use' ChapelStandard)
  (267991 'use' List)
  (267995 'use' Reflection)
  { scopeless
    const defaultComparator[267998] "const" DefaultComparator
    (268001 'end of statement')
  }
  { scopeless
    const reverseComparator[268006] "const"(268005 call ReverseComparator DefaultComparator)
    (268009 'end of statement')
  }
  function compareByPart[268017](arg a[268014] :
  unknown t[268012], arg b[268020] :
  t, arg comparator[268025] :
  unknown rec[268023]) : _unknown[51] "inline" "private"
  {
    { scopeless
      unknown curPart[268029] 0
      (268032 'end of statement')
    }
    {
      unknown tmp[268142] "temp"
      (268160 'move' tmp[268142](268158 call _cond_test 1))
      WhileDo[268147]
      {
        {
          { scopeless
            unknown tmp[268050] "temp"(268049 call(268043 call . comparator c"keyPart") a curPart)
            (268057 call _check_tuple_var_decl tmp[268050] 2)
            unknown aSection[268035](268051 call tmp[268050] 0)
            unknown aPart[268037](268054 call tmp[268050] 1)
            (268062 'end of statement')
          }
          { scopeless
            unknown tmp[268077] "temp"(268076 call(268070 call . comparator c"keyPart") b curPart)
            (268084 call _check_tuple_var_decl tmp[268077] 2)
            unknown bSection[268064](268078 call tmp[268077] 0)
            unknown bPart[268066](268081 call tmp[268077] 1)
            (268089 'end of statement')
          }
          if(268107 call _cond_test(268098 call ||(268092 call != aSection 0)(268096 call != bSection 0)))
          {
            (268104 return(268102 call - aSection bSection))
          }
          if(268121 call _cond_test(268113 call < aPart bPart))
          {
            (268118 return(268116 call - 1))
          }
          if(268133 call _cond_test(268127 call > aPart bPart))
          {
            (268130 return 1)
          }
          (268139 call += curPart 1)
        }
        label _continueLabel[268145]
        (268153 'move' tmp[268142](268151 call _cond_test 1))
        tmp[268142]
      }
      label _breakLabel[268146]
    }
    (268164 return 1)
  }
  function chpl_compare[268175](arg a[268172] :
  unknown t[268170], arg b[268178] :
  t, arg comparator[268183] :
  unknown rec[268181]) : _unknown[51] "inline" "no doc"
  {
    if(268350 call _cond_test(268205 call canResolveMethod comparator "key" a))
    {
      (268228 return(268227 call(268209 call . defaultComparator c"compare")(268218 call(268213 call . comparator c"key") a)(268226 call(268221 call . comparator c"key") b)))
    }
    {
      { scopeless
        if(268345 call _cond_test(268251 call canResolveMethod comparator "compare" a b))
        {
          (268260 return(268259 call(268253 call . comparator c"compare") a b))
        }
        {
          { scopeless
            if(268341 call _cond_test(268283 call canResolveMethod comparator "keyPart" a 0))
            {
              (268290 return(268289 call compareByPart a b comparator))
            }
            {
              (268338 call compilerError(268335 call +(268316 call + "The comparator "(268314 call _cast string[26](268312 'typeof' comparator))) " requires a 'key(a)', 'compare(a, b)', or 'keyPart(a, i)' method"))
            }
          }
        }
      }
    }
  }
  function chpl_check_comparator[268362](arg comparator[268360]:_any[178](?), arg eltType[268364]:_any[178](?)) param : _unknown[51] "no doc" "unsafe"
  {
    { scopeless
      const data[268367] "const" eltType
      (268370 'end of statement')
    }
    { scopeless
      unknown errorDepth[268373] "param" 2
      (268376 'end of statement')
    }
    if(268908 call _cond_test(268380 call ==(268378 'typeof' comparator) DefaultComparator))
    {
    }
    {
      { scopeless
        if(268903 call _cond_test(268388 call canResolveMethod comparator "key" data))
        {
          { scopeless
            const keydata[268396] "const"(268395 call(268390 call . comparator c"key") data)
            (268399 'end of statement')
          }
          unknown keytype[268403] "type variable"(268402 'typeof' keydata)
          if(268464 call _cond_test(268412 call !(268411 call canResolve "<" keydata keydata)))
          {
            { scopeless
              (268462 call compilerError(errorDepth = errorDepth) "The key method in "(268438 call _cast string[26](268436 'typeof' comparator)) " must return an object that supports the '<' function when used with "(268459 call _cast string[26] eltType) " elements")
            }
          }
          if(268505 call _cond_test(268475 call canResolveMethod comparator "compare" data data))
          {
            (268502 call compilerError(errorDepth = errorDepth)(268483 call _cast string[26](268481 'typeof' comparator)) " contains both a key method and a compare method")
          }
          if(268545 call _cond_test(268515 call canResolveMethod comparator "keyPart" data 0))
          {
            (268542 call compilerError(errorDepth = errorDepth)(268523 call _cast string[26](268521 'typeof' comparator)) " contains both a key method and a keyPart method")
          }
        }
        {
          { scopeless
            if(268898 call _cond_test(268555 call canResolveMethod comparator "compare" data data))
            {
              unknown comparetype[268565] "type variable"(268564 'typeof'(268563 call(268557 call . comparator c"compare") data data))
              if(268625 call _cond_test(268573 call !(268572 call isNumericType comparetype)))
              {
                { scopeless
                  (268623 call compilerError(errorDepth = errorDepth) "The compare method in "(268599 call _cast string[26](268597 'typeof' comparator)) " must return a numeric type when used with "(268620 call _cast string[26] eltType) " elements")
                }
              }
            }
            {
              { scopeless
                if(268894 call _cond_test(268636 call canResolveMethod comparator "keyPart" data 0))
                {
                  { scopeless
                    unknown idx[268639] 0 int[13]
                    (268642 'end of statement')
                  }
                  unknown partType[268653] "type variable"(268652 'typeof'(268651 call(268645 call . comparator c"keyPart") data idx))
                  if(268712 call _cond_test(268660 call !(268659 call isTupleType partType)))
                  {
                    { scopeless
                      (268710 call compilerError(errorDepth = errorDepth) "The keyPart method in "(268686 call _cast string[26](268684 'typeof' comparator)) " must return a tuple when used with "(268707 call _cast string[26] eltType) " elements")
                    }
                  }
                  { scopeless
                    unknown tmp[268718] partType
                    (268721 'end of statement')
                  }
                  { scopeless
                    unknown expectInt[268726](268725 call tmp 0)
                    (268729 'end of statement')
                  }
                  { scopeless
                    unknown expectIntUint[268734](268733 call tmp 1)
                    (268737 'end of statement')
                  }
                  if(268779 call _cond_test(268743 call !(268742 call isInt(268740 'typeof' expectInt))))
                  {
                    { scopeless
                      (268777 call compilerError(errorDepth = errorDepth) "The keyPart method in "(268753 call _cast string[26](268751 'typeof' comparator)) " must return a tuple with element 0 of type int(\?) when used with "(268774 call _cast string[26] eltType) " elements")
                    }
                  }
                  if(268830 call _cond_test(268794 call !(268792 call ||(268787 call isInt expectIntUint)(268791 call isUint expectIntUint))))
                  {
                    { scopeless
                      (268828 call compilerError(errorDepth = errorDepth) "The keyPart method in "(268804 call _cast string[26](268802 'typeof' comparator)) " must return a tuple with element 1 of type  int(\?) or uint(\?) when used with "(268825 call _cast string[26] eltType) " elements")
                    }
                  }
                }
                {
                  (268891 call compilerError(errorDepth = errorDepth)(268889 call +(268883 call +(268864 call +(268845 call + "The comparator "(268843 call _cast string[26](268841 'typeof' comparator))) " requires a 'key(a)', 'compare(a, b)', or 'keyPart(a, i)' method ") " for element type ")(268887 call _cast string[26] eltType)))
                }
              }
            }
          }
        }
      }
    }
    (268914 return 1)
  }
  function radixSortOk[268930](arg Data[268927] :
  (268925 call chpl__buildArrayRuntimeType unknown Dom[268920] unknown eltType[268923]), arg comparator[268932]:_any[178](?)) param : _unknown[51] "private" "unsafe"
  {
    if(269007 call _cond_test(268938 call !(268935 call . Dom c"stridable")))
    {
      { scopeless
        unknown tmp[268948](268947 'typeof'(268946 call Data(268942 call . Dom c"alignedLow")))
        (268951 'end of statement')
      }
      if(269002 call _cond_test(268959 call canResolveMethod comparator "keyPart" tmp 0))
      {
        (268961 return 1)
      }
      {
        { scopeless
          if(268998 call _cond_test(268969 call canResolveMethod comparator "key" tmp))
          {
            { scopeless
              unknown key[268978](268977 'typeof'(268976 call(268971 call . comparator c"key") tmp))
              (268981 'end of statement')
            }
            if(268993 call _cond_test(268989 call canResolveMethod defaultComparator "keyPart" key 0))
            {
              { scopeless
                (268991 return 1)
              }
            }
          }
        }
      }
    }
    (269013 return 0)
  }
  function sort[269029](arg Data[269026] :
  (269024 call chpl__buildArrayRuntimeType unknown Dom[269019] unknown eltType[269022]), arg comparator[269034] :
  unknown rec[269031] =
  defaultComparator) : _unknown[51]
  {
    (269042 call chpl_check_comparator comparator eltType)
    if(269057 call _cond_test(269053 call >=(269046 call . Dom c"low")(269050 call . Dom c"high")))
    {
      { scopeless
        (269055 return)
      }
    }
    if(269093 call _cond_test(269066 call radixSortOk Data comparator))
    {
      (269077 call(269070 call . MSBRadixSort c"msbRadixSort") Data(comparator = comparator))
    }
    {
      (269090 call(269083 call . QuickSort c"quickSort") Data(comparator = comparator))
    }
  }
  function sort[269111](arg Data[269108] :
  (269106 call chpl__buildArrayRuntimeType unknown Dom[269101] unknown eltType[269104]), arg comparator[269116] :
  unknown rec[269113] =
  defaultComparator) : _unknown[51] "no doc"
  {
    (269146 call compilerError "sort() requires 1-D array")
  }
  where {
    (269125 call !=(269121 call . Dom c"rank") 1)
  }
  function isSorted[269164](arg Data[269161] :
  (269159 call chpl__buildArrayRuntimeType unknown Dom[269154] unknown eltType[269157]), arg comparator[269169] :
  unknown rec[269166] =
  defaultComparator) : _unknown[51]
  {
    (269178 call chpl_check_comparator comparator eltType)
    { scopeless
      const stride[269196] "const"(269193 IfExpr (269182 call . Dom c"stridable") then
      { scopeless
        (269191 call abs(269187 call . Dom c"stride"))
      } else
      { scopeless
        1
      } )
      (269199 'end of statement')
    }
    { scopeless
      unknown sorted[269201] 1
      (269204 'end of statement')
    }
    Forall {
      induction variables:
        
        unknown element[269264] "index var" "insert auto destroy"
        
        unknown i[269266] "index var" "insert auto destroy"
      iterated expressions:
        Data
        Dom
      shadow variables:
        sorted[269216] 'reduce' intent
          init block
          {
          }
          deinit block
          {
          }
      other variables
        forall body
      {
        if(269258 call _cond_test(269227 call > i(269224 call . Dom c"alignedLow")))
        {
          {
            unknown tmp[269246] "temp"
            (269249 'move' tmp[269246](269248 'addr of' sorted))
            (269254 call = tmp[269246](269251 call && tmp[269246](269243 call <=(269241 call chpl_compare(269237 call Data(269234 call - i stride)) element comparator) 0)))
          }
        }
      }
    }
    (269271 return sorted)
  }
  { scopeless type
    bool[10]
  }
  function isSorted[269288](arg Data[269285] :
  (269283 call chpl__buildArrayRuntimeType unknown Dom[269278] unknown eltType[269281]), arg comparator[269293] :
  unknown rec[269290] =
  defaultComparator) : _unknown[51] "no doc"
  {
    (269323 call compilerError "isSorted() requires 1-D array")
  }
  where {
    (269302 call !=(269298 call . Dom c"rank") 1)
  }
  function sorted[269333](arg x[269331]:_any[178](?), arg comparator[269338] :
  unknown rec[269335] =
  defaultComparator) : _unknown[51] "iterator fn"
  {
    { scopeless
      unknown y[269343] x
      (269346 'end of statement')
    }
    if(269375 call _cond_test(269352 call !(269351 call isArrayValue y)))
    {
      { scopeless
        (269373 call compilerError "Sort.sorted called on non-iterable")
      }
    }
    (269385 call sort y(comparator = comparator))
    {
      unknown _indexOfInterest[269392] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[269393] "expr temp" "temp"
      (269402 'move' _iterator[269393](269400 call _getIterator y))
      Defer
      {
        {
          (269418 call _freeIterator _iterator[269393])
        }
      }
      { scopeless type
        (269407 'move' _indexOfInterest[269392](269404 call iteratorIndex _iterator[269393]))
      }
      ForLoop[269394]
      {
        unknown i[269411] "index var" "insert auto destroy"
        (269413 'move' i[269411] _indexOfInterest[269392])
        { scopeless
          (269390 yield i)
        }
        label _continueLabel[269397]
        _indexOfInterest[269392]
        _iterator[269393]
      }
      label _breakLabel[269398]
    }
  }
  def module BubbleSort[269427]  
  def module HeapSort[269660]  
  def module InsertionSort[270114]  
  def module BinaryInsertionSort[270717]  
  def module MergeSort[271217]  
  def module QuickSort[272061]  
  def module SelectionSort[273302]  
  def module ShellSort[273543]  
  def module SampleSortHelp[273919]  
  def module RadixSortHelp[276097]  
  def module ShallowCopy[277404]  
  def module SequentialInPlacePartitioning[278119]  
  def module TwoArrayPartitioning[279217]  
  def module TwoArrayRadixSort[287611]  
  def module TwoArraySampleSort[287808]  
  def module InPlacePartitioning[288012]  
  def module MSBRadixSort[288016]  
  type DefaultComparator[290566] function DefaultComparator[290566].compare[289929](arg _mt[290570]:_MT[238], arg this[290568]:DefaultComparator[290566], arg a[289927]:_any[178](?), arg b[289931]:_any[178](?)) : _unknown[51] "inline" "method" "primary method"
  {
    if(289959 call _cond_test(289935 call < a b))
    {
      (289940 return(289938 call - 1))
    }
    {
      { scopeless
        if(289954 call _cond_test(289945 call < b a))
        {
          (289948 return 1)
        }
        {
          { scopeless
            (289952 return 0)
          }
        }
      }
    }
  } function DefaultComparator[290566].keyPart[289973](arg _mt[290574]:_MT[238], arg this[290572]:DefaultComparator[290566], arg x[289970] :
  integral, arg i[289976] :
  int[13]) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      unknown section[290015](290012 IfExpr (289994 call > i 0) then
      { scopeless
        (290003 call -(290001 call _cast(290000 call int[13] 8) 1))
      } else
      { scopeless
        (290010 call _cast(290009 call int[13] 8) 0)
      } )(289991 call int[13] 8)
      (290018 'end of statement')
    }
    (290025 return(290023 call _build_tuple section x))
  }
  { scopeless type
    (289986 call _build_tuple(289982 call int[13] 8)(289984 'typeof' x))
  } function DefaultComparator[290566].keyPart[290036](arg _mt[290578]:_MT[238], arg this[290576]:DefaultComparator[290566], arg x[290033] :
  chpl_anyreal, arg i[290039] :
  int[13]) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      unknown section[290084](290081 IfExpr (290063 call > i 0) then
      { scopeless
        (290072 call -(290070 call _cast(290069 call int[13] 8) 1))
      } else
      { scopeless
        (290079 call _cast(290078 call int[13] 8) 0)
      } )(290060 call int[13] 8)
      (290087 'end of statement')
    }
    { scopeless
      unknown nbits[290094] "param"(290093 call numBits(290091 'typeof' x))
      (290097 'end of statement')
    }
    { scopeless
      unknown src[290099] x
      (290102 'end of statement')
    }
    { scopeless
      unknown dst[290107](290106 call uint[115] nbits)
      (290110 'end of statement')
    }
    (290126 call c_memcpy(290115 call c_ptrTo dst)(290120 call c_ptrTo src)(290125 call c_sizeof(290123 'typeof' src)))
    if(290170 call _cond_test(290136 call ==(290133 call >> dst(290131 call - nbits 1)) 1))
    {
      (290142 call = dst(290140 call ~ dst))
    }
    {
      { scopeless
        const one[290151] "const" 1(290149 call uint[115] nbits)
        (290154 'end of statement')
      }
      (290167 call = dst(290165 call ^ dst(290163 call << one(290161 call - nbits 1))))
    }
    (290179 return(290177 call _build_tuple section dst))
  }
  { scopeless type
    (290055 call _build_tuple(290045 call int[13] 8)(290053 call uint[115](290051 call numBits(290049 'typeof' x))))
  } function DefaultComparator[290566].keyPart[290190](arg _mt[290582]:_MT[238], arg this[290580]:DefaultComparator[290566], arg x[290187] :
  chpl_anyimag, arg i[290193] :
  int[13]) : _unknown[51] "inline" "method" "primary method"
  {
    (290226 return(290225 call keyPart(290221 call _cast(290220 call real[16](290218 call numBits(290216 'typeof' x))) x) i))
  }
  { scopeless type
    (290209 call _build_tuple(290199 call int[13] 8)(290207 call uint[115](290205 call numBits(290203 'typeof' x))))
  } function DefaultComparator[290566].keyPart[290238](arg _mt[290586]:_MT[238], arg this[290584]:DefaultComparator[290566], arg x[290235] :
  _tuple, arg i[290241] :
  int[13]) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      const tmp[290300] "const" "temp"(290299 call(290290 call . this c"keyPart")(290296 call x i) 1)
      (290304 call _check_tuple_var_decl tmp[290300] 2)
      const part[290286] "const"(290301 call tmp[290300] 1)
      (290309 'end of statement')
    }
    if(290338 call _cond_test(290316 call >= i(290313 call . x c"size")))
    {
      { scopeless
        (290329 return(290327 call _build_tuple(290319 call - 1)(290324 call _cast(290323 'typeof' part) 0)))
      }
    }
    {
      { scopeless
        (290336 return(290334 call _build_tuple 0 part))
      }
    }
  }
  where {
    (290282 call &&(290247 call isHomogeneousTuple x)(290280 call ||(290271 call ||(290262 call ||(290254 call isInt(290252 call x 0))(290261 call isUint(290259 call x 0)))(290270 call isReal(290268 call x 0)))(290279 call isImag(290277 call x 0))))
  } function DefaultComparator[290566].keyPart[290353](arg _mt[290590]:_MT[238], arg this[290588]:DefaultComparator[290566], arg x[290350] :
  string[26], arg i[290356] :
  int[13]) : _unknown[51] "inline" "method" "primary method"
  {
    if(290385 call _cond_test boundsChecking)
    {
      { scopeless
        (290383 call assert(290380 call ==(290373 call . x c"locale_id")(290377 call . here c"id")))
      }
    }
    { scopeless
      unknown ptr[290406](290404 call _cast(290403 call c_ptr(290401 call uint[115] 8))(290396 call(290392 call . x c"c_str")))
      (290409 'end of statement')
    }
    { scopeless
      unknown len[290414](290411 call . x c"numBytes")
      (290417 'end of statement')
    }
    { scopeless
      unknown section[290441](290438 IfExpr (290420 call < i len) then
      { scopeless
        (290427 call _cast(290426 call int[13] 8) 0)
      } else
      { scopeless
        (290436 call -(290434 call _cast(290433 call int[13] 8) 1))
      } )
      (290444 'end of statement')
    }
    { scopeless
      unknown part[290463](290460 IfExpr (290447 call < i len) then
      { scopeless
        (290452 call ptr i)
      } else
      { scopeless
        (290458 call _cast(290457 call uint[115] 8) 0)
      } )
      (290466 'end of statement')
    }
    (290472 return(290470 call _build_tuple section part))
  }
  { scopeless type
    (290368 call _build_tuple(290362 call int[13] 8)(290366 call uint[115] 8))
  } function DefaultComparator[290566].keyPart[290483](arg _mt[290594]:_MT[238], arg this[290592]:DefaultComparator[290566], arg x[290480] :
  c_string, arg i[290486] :
  int[13]) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      unknown ptr[290510](290508 call _cast(290507 call c_ptr(290505 call uint[115] 8)) x)
      (290513 'end of statement')
    }
    { scopeless
      unknown byte[290519](290518 call ptr i)
      (290522 'end of statement')
    }
    { scopeless
      unknown section[290546](290543 IfExpr (290525 call != byte 0) then
      { scopeless
        (290532 call _cast(290531 call int[13] 8) 0)
      } else
      { scopeless
        (290541 call -(290539 call _cast(290538 call int[13] 8) 1))
      } )
      (290549 'end of statement')
    }
    { scopeless
      unknown part[290551] byte
      (290554 'end of statement')
    }
    (290560 return(290558 call _build_tuple section part))
  }
  { scopeless type
    (290498 call _build_tuple(290492 call int[13] 8)(290496 call uint[115] 8))
  }
  type ReverseComparator[291203](?) unknown comparator[290598] function ReverseComparator[291203](?).init[290604](arg _mt[291207]:_MT[238], arg this[291205]:ReverseComparator[291203](?)) : _unknown[51] "method" "primary method"
  {
    (290613 call =(290609 call . this c"comparator") defaultComparator)
  } function ReverseComparator[291203](?).init[290623](arg _mt[291211]:_MT[238], arg this[291209]:ReverseComparator[291203](?), arg comparator[290621]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    (290630 call =(290626 call . this c"comparator") comparator)
  } function ReverseComparator[291203](?).init=[290645](arg _mt[291215]:_MT[238], arg this[291213]:ReverseComparator[291203](?), arg revcomp[290642] :
  (290641 call ReverseComparator ?[260])) : _unknown[51] "method" "primary method" "no doc"
  {
    (290655 call =(290648 call . this c"comparator")(290652 call . revcomp c"comparator"))
  } function ReverseComparator[291203](?).typeIsBitReversible[290665](arg _mt[291219]:_MT[238], arg this[291217]:ReverseComparator[291203](?), arg t[290663]:_any[178](?)) param : _unknown[51] "method" "primary method" "no doc"
  {
    if(290687 call _cond_test(290670 call isHomogeneousTupleType t))
    {
      { scopeless
        unknown tmp[290672] t
        (290675 'end of statement')
      }
      (290685 return(290684 call typeIsBitReversible(290682 'typeof'(290681 call tmp 0))))
    }
    if(290699 call _cond_test(290695 call isUintType t))
    {
      { scopeless
        (290697 return 1)
      }
    }
    if(290711 call _cond_test(290707 call isIntType t))
    {
      { scopeless
        (290709 return 1)
      }
    }
    (290717 return 0)
  } function ReverseComparator[291203](?).typeIsNegateReversible[290725](arg _mt[291223]:_MT[238], arg this[291221]:ReverseComparator[291203](?), arg t[290723]:_any[178](?)) param : _unknown[51] "method" "primary method" "no doc"
  {
    if(290747 call _cond_test(290730 call isHomogeneousTupleType t))
    {
      { scopeless
        unknown tmp[290732] t
        (290735 'end of statement')
      }
      (290745 return(290744 call typeIsNegateReversible(290742 'typeof'(290741 call tmp 0))))
    }
    if(290765 call _cond_test(290760 call ||(290755 call isIntType t)(290759 call isUintType t)))
    {
      { scopeless
        (290763 return 0)
      }
    }
    if(290777 call _cond_test(290773 call isNumericType t))
    {
      { scopeless
        (290775 return 1)
      }
    }
    (290783 return 0)
  } function ReverseComparator[291203](?).hasKeyPart[290791](arg _mt[291227]:_MT[238], arg this[291225]:ReverseComparator[291203](?), arg a[290789]:_any[178](?)) param : _unknown[51] "method" "primary method" "no doc"
  {
    (290803 return(290802 call canResolveMethod(290795 call . this c"comparator") "keyPart" a 0))
  } function ReverseComparator[291203](?).hasKeyPartFromKey[290812](arg _mt[291231]:_MT[238], arg this[291229]:ReverseComparator[291203](?), arg a[290810]:_any[178](?)) param : _unknown[51] "method" "primary method" "no doc"
  {
    if(290845 call _cond_test(290822 call canResolveMethod(290816 call . this c"comparator") "key" a))
    {
      { scopeless
        unknown key[290831](290830 'typeof'(290829 call(290824 call . comparator c"key") a))
        (290834 'end of statement')
      }
      (290843 return(290842 call canResolveMethod defaultComparator "keyPart" key 0))
    }
    (290851 return 0)
  } function ReverseComparator[291203](?).hasCompare[290859](arg _mt[291235]:_MT[238], arg this[291233]:ReverseComparator[291203](?), arg a[290857]:_any[178](?), arg b[290861]:_any[178](?)) param : _unknown[51] "method" "primary method" "no doc"
  {
    (290873 return(290872 call canResolveMethod(290865 call . this c"comparator") "compare" a b))
  } function ReverseComparator[291203](?).hasCompareFromKey[290882](arg _mt[291239]:_MT[238], arg this[291237]:ReverseComparator[291203](?), arg a[290880]:_any[178](?)) param : _unknown[51] "method" "primary method" "no doc"
  {
    if(290915 call _cond_test(290892 call canResolveMethod(290886 call . this c"comparator") "key" a))
    {
      { scopeless
        unknown key[290901](290900 'typeof'(290899 call(290894 call . comparator c"key") a))
        (290904 'end of statement')
      }
      (290913 return(290912 call canResolveMethod defaultComparator "compare" key key))
    }
    (290921 return 0)
  } function ReverseComparator[291203](?).getKeyPart[290929](arg _mt[291243]:_MT[238], arg this[291241]:ReverseComparator[291203](?), arg cmp[290927]:_any[178](?), arg a[290931]:_any[178](?), arg i[290933]:_any[178](?)) : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    { scopeless
      unknown tmp[290948] "temp"(290947 call(290941 call . cmp c"keyPart") a i)
      (290955 call _check_tuple_var_decl tmp[290948] 2)
      unknown section[290935](290949 call tmp[290948] 0)
      unknown part[290937](290952 call tmp[290948] 1)
      (290960 'end of statement')
    }
    if(291022 call _cond_test(290966 call typeIsBitReversible(290964 'typeof' part)))
    {
      (290976 return(290974 call _build_tuple(290968 call - section)(290971 call ~ part)))
    }
    {
      { scopeless
        if(291018 call _cond_test(290983 call typeIsNegateReversible(290981 'typeof' part)))
        {
          (290993 return(290991 call _build_tuple(290985 call - section)(290988 call - part)))
        }
        {
          (291015 call compilerError "keyPart must return int or uint")
        }
      }
    }
  } function ReverseComparator[291203](?).keyPart[291033](arg _mt[291247]:_MT[238], arg this[291245]:ReverseComparator[291203](?), arg a[291031]:_any[178](?), arg i[291035]:_any[178](?)) : _unknown[51] "inline" "method" "primary method"
  {
    (291055 call chpl_check_comparator(291049 call . this c"comparator")(291054 'typeof' a))
    if(291092 call _cond_test(291061 call hasKeyPartFromKey a))
    {
      (291077 return(291076 call getKeyPart defaultComparator(291074 call(291069 call .(291066 call . this c"comparator") c"key") a) i))
    }
    {
      (291089 return(291088 call getKeyPart(291082 call . this c"comparator") a i))
    }
  }
  where {
    (291045 call ||(291040 call hasKeyPart a)(291044 call hasKeyPartFromKey a))
  } function ReverseComparator[291203](?).doCompare[291103](arg _mt[291251]:_MT[238], arg this[291249]:ReverseComparator[291203](?), arg cmp[291101]:_any[178](?), arg a[291105]:_any[178](?), arg b[291107]:_any[178](?)) : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    (291117 return(291116 call(291110 call . cmp c"compare") b a))
  } function ReverseComparator[291203](?).compare[291126](arg _mt[291255]:_MT[238], arg this[291253]:ReverseComparator[291203](?), arg a[291124]:_any[178](?), arg b[291128]:_any[178](?)) : _unknown[51] "inline" "method" "primary method"
  {
    (291149 call chpl_check_comparator(291143 call . this c"comparator")(291148 'typeof' a))
    if(291195 call _cond_test(291155 call hasCompareFromKey a))
    {
      (291180 return(291179 call doCompare defaultComparator(291168 call(291163 call .(291160 call . this c"comparator") c"key") a)(291178 call(291173 call .(291170 call . this c"comparator") c"key") b)))
    }
    {
      (291192 return(291191 call doCompare(291185 call . this c"comparator") a b))
    }
  }
  where {
    (291139 call ||(291134 call hasCompare a b)(291138 call hasCompareFromKey a))
  }
}