AST dump for AtomicsCommon after pass normalize.
Module use list: ChapelStandard 

{
  function chpl__init_AtomicsCommon[416055]() : void[4] "insert line file info" "module init"
  {
    (506982 return _void[55])
  }
  function atomic_refcnt[52102].inc[51962](arg _mt[52106]:_MT[238], arg this[52104]:atomic_refcnt[52102], arg cnt[51959] :
  1 =
  1) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[609314] "expr temp" "maybe param" "maybe type" "temp"
    (609317 'move' call_tmp[609314](51986 call _cond_test CHPL_CACHE_REMOTE[367]))
    if call_tmp[609314]
    {
      unknown call_tmp[609321] "expr temp" "maybe param" "maybe type" "temp"
      (609324 'move' call_tmp[609321](357307 call _cnt _mt[243] this[52104]))
      (51976 call(51966 call (partial) add _mt[243] call_tmp[609321]) cnt[51959](order = relaxed[187010]))
    }
    {
      unknown call_tmp[609330] "expr temp" "maybe param" "maybe type" "temp"
      (609333 'move' call_tmp[609330](357313 call _cnt _mt[243] this[52104]))
      (51984 call(51979 call (partial) add _mt[243] call_tmp[609330]) cnt[51959])
    }
    (506938 return _void[55])
  }
  function atomic_refcnt[52102].dec[51997](arg _mt[52110]:_MT[238], arg this[52108]:atomic_refcnt[52102]) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ret[506942] "RVV" "temp"
    unknown got[52007] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[540843] "maybe param" "maybe type" "temp"
    (540851 'move' type_tmp[540843](540849 call int(64)[13] 64))
    (540845 'init var split decl' got[52007] type_tmp[540843])
    (52010 'end of statement')
    unknown call_tmp[609337] "expr temp" "maybe param" "maybe type" "temp"
    (609340 'move' call_tmp[609337](52074 call _cond_test CHPL_CACHE_REMOTE[367]))
    if call_tmp[609337]
    {
      unknown call_tmp[609344] "expr temp" "maybe param" "maybe type" "temp"
      (609347 'move' call_tmp[609344](357318 call _cnt _mt[243] this[52108]))
      unknown call_tmp[609351] "maybe param" "maybe type" "temp"
      (609354 'move' call_tmp[609351](52025 call(52015 call (partial) fetchSub _mt[243] call_tmp[609344]) 1(order = release[187006])))
      (540853 'init var split init' got[52007] call_tmp[609351] type_tmp[540843])
      (474651 'end of statement' got[52007])
      unknown call_tmp[609356] "expr temp" "maybe param" "maybe type" "temp"
      (609359 'move' call_tmp[609356](52032 call == got[52007] 1))
      unknown call_tmp[609361] "expr temp" "maybe param" "maybe type" "temp"
      (609364 'move' call_tmp[609361](52046 call _cond_test call_tmp[609356]))
      if call_tmp[609361]
      {
        (52040 call atomicFence acquire[187008])
        (474653 'end of statement')
        unknown call_tmp[609366] "expr temp" "maybe param" "maybe type" "temp"
        (609369 'move' call_tmp[609366](506947 call int(64)[13] 64))
        (506950 'move' ret[506942](506949 'coerce' 0 call_tmp[609366]))
        gotoReturn _end_dec[506940] _end_dec[506940]
      }
      unknown call_tmp[609371] "expr temp" "maybe param" "maybe type" "temp"
      (609374 'move' call_tmp[609371](52052 call - got[52007] 1))
      unknown call_tmp[609376] "expr temp" "maybe param" "maybe type" "temp"
      (609379 'move' call_tmp[609376](506955 call int(64)[13] 64))
      (506958 'move' ret[506942](506957 'coerce' call_tmp[609371] call_tmp[609376]))
      gotoReturn _end_dec[506940] _end_dec[506940]
      (474655 'end of statement' got[52007])
    }
    {
      unknown call_tmp[609383] "expr temp" "maybe param" "maybe type" "temp"
      (609386 'move' call_tmp[609383](357325 call _cnt _mt[243] this[52108]))
      unknown call_tmp[609390] "maybe param" "maybe type" "temp"
      (609393 'move' call_tmp[609390](52063 call(52058 call (partial) fetchSub _mt[243] call_tmp[609383]) 1))
      (540856 'init var split init' got[52007] call_tmp[609390] type_tmp[540843])
      (474657 'end of statement' got[52007])
      unknown call_tmp[609395] "expr temp" "maybe param" "maybe type" "temp"
      (609398 'move' call_tmp[609395](52070 call - got[52007] 1))
      unknown call_tmp[609400] "expr temp" "maybe param" "maybe type" "temp"
      (609403 'move' call_tmp[609400](506963 call int(64)[13] 64))
      (506966 'move' ret[506942](506965 'coerce' call_tmp[609395] call_tmp[609400]))
      gotoReturn _end_dec[506940] _end_dec[506940]
      (474659 'end of statement' got[52007])
    }
    label _end_dec[506940]
    (506944 return ret[506942])
  }
  { scopeless type
    (52002 call int(64)[13] 64)
  }
  function atomic_refcnt[52102].read[52083](arg _mt[52114]:_MT[238], arg this[52112]:atomic_refcnt[52102]) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ret[506972] "RVV" "temp"
    unknown call_tmp[609407] "expr temp" "maybe param" "maybe type" "temp"
    (609410 'move' call_tmp[609407](357330 call _cnt _mt[243] this[52112]))
    unknown call_tmp[609414] "expr temp" "maybe param" "maybe type" "temp"
    (609417 'move' call_tmp[609414](52094 call(52090 call (partial) read _mt[243] call_tmp[609407])))
    unknown call_tmp[609419] "expr temp" "maybe param" "maybe type" "temp"
    (609422 'move' call_tmp[609419](506977 call int(64)[13] 64))
    (506980 'move' ret[506972](506979 'coerce' call_tmp[609414] call_tmp[609419]))
    (506974 return ret[506972])
  }
  { scopeless type
    (52088 call int(64)[13] 64)
  }
  type atomic_refcnt[52102] unknown _cnt[51952](51951 call chpl__processorAtomicType int(64)[13])
  (355152 'used modules list'(51944 'use' ChapelStandard[20267]))
}