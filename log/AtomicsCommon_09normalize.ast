AST dump for AtomicsCommon after pass normalize.
Module use list: ChapelStandard 

{
  function chpl__init_AtomicsCommon[415982]() : void[4] "insert line file info" "module init"
  {
    (506904 return _void[55])
  }
  function atomic_refcnt[52102].inc[51962](arg _mt[52106]:_MT[238], arg this[52104]:atomic_refcnt[52102], arg cnt[51959] :
  1 =
  1) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[609227] "expr temp" "maybe param" "maybe type" "temp"
    (609230 'move' call_tmp[609227](51986 call _cond_test CHPL_CACHE_REMOTE[367]))
    if call_tmp[609227]
    {
      unknown call_tmp[609234] "expr temp" "maybe param" "maybe type" "temp"
      (609237 'move' call_tmp[609234](357239 call _cnt _mt[243] this[52104]))
      (51976 call(51966 call (partial) add _mt[243] call_tmp[609234]) cnt[51959](order = relaxed[187010]))
    }
    {
      unknown call_tmp[609243] "expr temp" "maybe param" "maybe type" "temp"
      (609246 'move' call_tmp[609243](357245 call _cnt _mt[243] this[52104]))
      (51984 call(51979 call (partial) add _mt[243] call_tmp[609243]) cnt[51959])
    }
    (506860 return _void[55])
  }
  function atomic_refcnt[52102].dec[51997](arg _mt[52110]:_MT[238], arg this[52108]:atomic_refcnt[52102]) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ret[506864] "RVV" "temp"
    unknown got[52007] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[540756] "maybe param" "maybe type" "temp"
    (540764 'move' type_tmp[540756](540762 call int(64)[13] 64))
    (540758 'init var split decl' got[52007] type_tmp[540756])
    (52010 'end of statement')
    unknown call_tmp[609250] "expr temp" "maybe param" "maybe type" "temp"
    (609253 'move' call_tmp[609250](52074 call _cond_test CHPL_CACHE_REMOTE[367]))
    if call_tmp[609250]
    {
      unknown call_tmp[609257] "expr temp" "maybe param" "maybe type" "temp"
      (609260 'move' call_tmp[609257](357250 call _cnt _mt[243] this[52108]))
      unknown call_tmp[609264] "maybe param" "maybe type" "temp"
      (609267 'move' call_tmp[609264](52025 call(52015 call (partial) fetchSub _mt[243] call_tmp[609257]) 1(order = release[187006])))
      (540766 'init var split init' got[52007] call_tmp[609264] type_tmp[540756])
      (474578 'end of statement' got[52007])
      unknown call_tmp[609269] "expr temp" "maybe param" "maybe type" "temp"
      (609272 'move' call_tmp[609269](52032 call == got[52007] 1))
      unknown call_tmp[609274] "expr temp" "maybe param" "maybe type" "temp"
      (609277 'move' call_tmp[609274](52046 call _cond_test call_tmp[609269]))
      if call_tmp[609274]
      {
        (52040 call atomicFence acquire[187008])
        (474580 'end of statement')
        unknown call_tmp[609279] "expr temp" "maybe param" "maybe type" "temp"
        (609282 'move' call_tmp[609279](506869 call int(64)[13] 64))
        (506872 'move' ret[506864](506871 'coerce' 0 call_tmp[609279]))
        gotoReturn _end_dec[506862] _end_dec[506862]
      }
      unknown call_tmp[609284] "expr temp" "maybe param" "maybe type" "temp"
      (609287 'move' call_tmp[609284](52052 call - got[52007] 1))
      unknown call_tmp[609289] "expr temp" "maybe param" "maybe type" "temp"
      (609292 'move' call_tmp[609289](506877 call int(64)[13] 64))
      (506880 'move' ret[506864](506879 'coerce' call_tmp[609284] call_tmp[609289]))
      gotoReturn _end_dec[506862] _end_dec[506862]
      (474582 'end of statement' got[52007])
    }
    {
      unknown call_tmp[609296] "expr temp" "maybe param" "maybe type" "temp"
      (609299 'move' call_tmp[609296](357257 call _cnt _mt[243] this[52108]))
      unknown call_tmp[609303] "maybe param" "maybe type" "temp"
      (609306 'move' call_tmp[609303](52063 call(52058 call (partial) fetchSub _mt[243] call_tmp[609296]) 1))
      (540769 'init var split init' got[52007] call_tmp[609303] type_tmp[540756])
      (474584 'end of statement' got[52007])
      unknown call_tmp[609308] "expr temp" "maybe param" "maybe type" "temp"
      (609311 'move' call_tmp[609308](52070 call - got[52007] 1))
      unknown call_tmp[609313] "expr temp" "maybe param" "maybe type" "temp"
      (609316 'move' call_tmp[609313](506885 call int(64)[13] 64))
      (506888 'move' ret[506864](506887 'coerce' call_tmp[609308] call_tmp[609313]))
      gotoReturn _end_dec[506862] _end_dec[506862]
      (474586 'end of statement' got[52007])
    }
    label _end_dec[506862]
    (506866 return ret[506864])
  }
  { scopeless type
    (52002 call int(64)[13] 64)
  }
  function atomic_refcnt[52102].read[52083](arg _mt[52114]:_MT[238], arg this[52112]:atomic_refcnt[52102]) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ret[506894] "RVV" "temp"
    unknown call_tmp[609320] "expr temp" "maybe param" "maybe type" "temp"
    (609323 'move' call_tmp[609320](357262 call _cnt _mt[243] this[52112]))
    unknown call_tmp[609327] "expr temp" "maybe param" "maybe type" "temp"
    (609330 'move' call_tmp[609327](52094 call(52090 call (partial) read _mt[243] call_tmp[609320])))
    unknown call_tmp[609332] "expr temp" "maybe param" "maybe type" "temp"
    (609335 'move' call_tmp[609332](506899 call int(64)[13] 64))
    (506902 'move' ret[506894](506901 'coerce' call_tmp[609327] call_tmp[609332]))
    (506896 return ret[506894])
  }
  { scopeless type
    (52088 call int(64)[13] 64)
  }
  type atomic_refcnt[52102] unknown _cnt[51952](51951 call chpl__processorAtomicType int(64)[13])
  (355084 'used modules list'(51944 'use' ChapelStandard[20267]))
}