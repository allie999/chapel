AST dump for DSIUtil after pass denormalize.
Module use list: ChapelStandard 

{
  function chpl__init_DSIUtil[416168](const in arg _ln[2298996]:int(64)[13], in arg _fn[2298998]:int(32)[95]) : void[4] "fast on" "insert line file info" "local fn" "module init" "resolved"
  {
    if chpl__init_DSIUtil_p[2283358]
    {
      goto _exit_chpl__init_DSIUtil[2283395] _exit_chpl__init_DSIUtil[2283395]
    }
    ref refIndentLevel[2283381]:int(32)[95] "temp"
    (2283379 call printModuleInit[20426] c"%*s\n" c"DSIUtil" 7 _ln[2298996] _fn[2298998])
    (2283385 'move' refIndentLevel[2283381](2283384 'addr of' moduleInitLevel[20416]))
    (2283388 '+=' refIndentLevel[2283381] 1)
    (2283364 'move' chpl__init_DSIUtil_p[2283358] 1)
    (2283391 '-=' refIndentLevel[2283381] 1)
    label _exit_chpl__init_DSIUtil[2283395]
    (533666 return _void[55])
  }
  function createTuple[1302559](const in arg val[1302565]:int(64)[13], ref arg _retArg[1789644]:1*int(64)[1253023]) : void[4] "fast on" "fn returns via _retArg" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val ret[1302567]:1*int(64)[1253023] "dead after last mention" "RVV" "temp"
    (2265978 'set svec member' ret[1302567] 0 val[1302565])
    (1789646 '=' _retArg[1789644] ret[1302567])
    (1789648 return _void[55])
  }
  function _computeChunkStuff[1362718](const in arg maxTasks[1362720]:int(64)[13], const in arg ignoreRunning[1362722]:bool[10], const in arg minSize[1362724]:int(64)[13], const  ref arg ranges[1362726]:1*range(int(64),bounded,false)[1241311], ref arg _retArg[1790465]:2*int(64)[1037179], const in arg _ln[2290832]:int(64)[13], in arg _fn[2290834]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1362739]:2*int(64)[1037179] "dead after last mention" "RVV" "temp"
    val numElems[1362783]:uint(64)[115] "dead at end of block" "insert auto destroy"
    (1362785 'move' numElems[1362783] 1)
    const-val call_tmp[1363365]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1363394]:range(int(64),bounded,false)[1023946] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1363398 'move' coerce_tmp[1363394](2273836 'get svec member value' ranges[1362726] 0))
    (1363367 'move' call_tmp[1363365](1363370 call size[1032912] coerce_tmp[1363394] _ln[2290832] _fn[2290834]))
    ref i_lhs[2126813]:uint(64)[115] "temp"
    (2126817 'move' i_lhs[2126813](2126815 'set reference' numElems[1362783]))
    (2126820 '*=' i_lhs[2126813](2036920 'cast' uint(64)[115] call_tmp[1363365] _ln[2290832] _fn[2290834]))
    const-val call_tmp[1362875]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1362877 'move' call_tmp[1362875](1362880 call _computeNumChunks[1363414] maxTasks[1362720] ignoreRunning[1362722] minSize[1362724] numElems[1362783] _ln[2290832] _fn[2290834]))
    val numChunks[1362885]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1362887 'move' numChunks[1362885] call_tmp[1362875])
    if(2047745 '==' call_tmp[1362875] 0)
    {
      const-val ret_tmp[1785372]:2*int(64)[1037179] "temp"
      (2259314 'set svec member' ret_tmp[1785372] 0 0)
      (2259318 'set svec member' ret_tmp[1785372] 1 -1)
      (1364684 'move' ret[1362739] ret_tmp[1785372])
      gotoReturn _end__computeChunkStuff[1363300] _end__computeChunkStuff[1363300]
    }
    (1362948 call assert[210262](2042691 '>' call_tmp[1362875] 0) _ln[2290832] _fn[2290834])
    val parDim[1362959]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1362961 'move' parDim[1362959] -1)
    val maxDim[1362972]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1362974 'move' maxDim[1362972] -1)
    val maxElems[1362985]:uint(64)[115] "dead at end of block" "insert auto destroy"
    (1362987 'move' maxElems[1362985] 0)
    const-val _ic__F1_high[2251204]:int(64)[13] "temp"
    (2102266 'move' _ic__F1_high[2251204] 0)
    val i[1869181]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1869185 'move' i[1869181] 0)
    (1869237 call chpl_checkIfRangeIterWillOverflow[1093055] 0 0 1 0 0 1 _ln[2290832] _fn[2290834])
    CForLoop[1869244]
    {
      const-ref call_tmp[1869321]:range(int(64),bounded,false)[1023946] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1869323 'move' call_tmp[1869321](1869326 call this[1364411] ranges[1362726] i[1869181] _ln[2290832] _fn[2290834]))
      const-val call_tmp[1869329]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1869331]:range(int(64),bounded,false)[1023946] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1869333 'move' coerce_tmp[1869331] call_tmp[1869321])
      (1869338 'move' call_tmp[1869329](1869341 call size[1032912] coerce_tmp[1869331] _ln[2290832] _fn[2290834]))
      const-val call_tmp[2037106]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2037108 'move' call_tmp[2037106](2037110 'cast' uint(64)[115] call_tmp[1869329] _ln[2290832] _fn[2290834]))
      if(2125624 '>=' call_tmp[2037106](2037120 'cast' uint(64)[115] numChunks[1362885] _ln[2290832] _fn[2290834]))
      {
        (2040503 '=' parDim[1362959] i[1869181])
        break _breakLabel[1363144] _breakLabel[1363144]
      }
      if(2125759 '>' call_tmp[2037106] maxElems[1362985])
      {
        (2125524 '=' maxElems[1362985] call_tmp[2037106])
        (2040515 '=' maxDim[1362972] i[1869181])
      }
      {
        (1869253 '=' i[1869181] 0)
      }
      {
        (1869264 '<=' i[1869181] _ic__F1_high[2251204])
      }
      {
        (1869270 '+=' i[1869181] 1)
      }
    }
    label _breakLabel[1363144]
    if(2047760 '==' parDim[1362959] -1)
    {
      (2040049 '=' parDim[1362959] maxDim[1362972])
      if(2125694 '<' maxElems[1362985](2036970 'cast' uint(64)[115] numChunks[1362885] _ln[2290832] _fn[2290834]))
      {
        (2040061 '=' numChunks[1362885](2099101 'cast' int(64)[13] maxElems[1362985] _ln[2290832] _fn[2290834]))
      }
    }
    const-val ret_tmp[1785378]:2*int(64)[1037179] "temp"
    (2259328 'set svec member' ret_tmp[1785378] 0 numChunks[1362885])
    (2259332 'set svec member' ret_tmp[1785378] 1 parDim[1362959])
    (1364687 'move' ret[1362739] ret_tmp[1785378])
    label _end__computeChunkStuff[1363300]
    (1790467 '=' _retArg[1790465] ret[1362739])
    (1790473 return _void[55])
  }
  function _computeNumChunks[1222821](const in arg maxTasks[1222823]:int(64)[13], const in arg ignoreRunning[1222825]:bool[10], const in arg minSize[1222827]:int(64)[13], const in arg numElems[1222829]:int(64)[13], const in arg _ln[2290772]:int(64)[13], in arg _fn[2290774]:int(32)[95]) : int(64)[13] "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1222833]:int(64)[13] "dead after last mention" "RVV" "temp"
    if(2086163 '<=' numElems[1222829] 0)
    {
      (1222864 'move' ret[1222833] 0)
      gotoReturn _end__computeNumChunks[1223265] _end__computeNumChunks[1223265]
    }
    const-val call_tmp[2036636]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2036638 'move' call_tmp[2036636](2036640 'cast' uint(64)[115] numElems[1222829] _ln[2290772] _fn[2290774]))
    const-val unumElems[1222886]:uint(64)[115] "dead at end of block" "const" "insert auto destroy"
    (1222888 'move' unumElems[1222886] call_tmp[2036636])
    val numChunks[1222900]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1222902 'move' numChunks[1222900] maxTasks[1222823])
    if(2034818 '!' ignoreRunning[1222825])
    {
      const-val call_tmp[1222923]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2084175]:chpl_localeID_t[209306] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2084177]:chpl_localeID_t[209306] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2084179 'move' call_tmp[2084177](2084182 call chpl_rt_buildLocaleID[209384] chpl_nodeID[208164] c_sublocid_any[89879]))
      (2084185 'move' call_tmp[2084175] call_tmp[2084177])
      const-val call_tmp[2084188]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2084190]:locale[28] "temp"
      (2084193 call chpl_localeID_to_locale[92857] call_tmp[2084175] ret_tmp[2084190] _ln[2290772] _fn[2290774])
      (2084196 'move' call_tmp[2084188] ret_tmp[2084190])
      (1783109 'move' call_tmp[1222923] call_tmp[2084188])
      const-val call_tmp[1222929]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1222931 'move' call_tmp[1222929](1222937 call runningTasks[93130] call_tmp[1222923] _ln[2290772] _fn[2290774]))
      const-val call_tmp[2063456]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2063458 'move' call_tmp[2063456](2063460 '-' call_tmp[1222929] 1))
      val tmp[1222952]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if(2046236 '<' call_tmp[2063456] maxTasks[1222823])
      {
        (1222987 'move' tmp[1222952](2310060 'cast' int(64)[13](2045195 '-' maxTasks[1222823] call_tmp[2063456])))
      }
      {
        (1222993 'move' tmp[1222952] 1)
      }
      (2039669 '=' numChunks[1222900] tmp[1222952])
      ref i_x[2178292]:locale[28] "temp"
      (2178296 'move' i_x[2178292](2178294 'set reference' call_tmp[1222923]))
      (2178300 call deinit[90189] i_x[2178292])
    }
    if(2042406 '>' minSize[1222827] 0)
    {
      val tmp[1223025]:bool[10] "dead after last mention" "temp"
      val tmp[1223064]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if(2125654 '<' call_tmp[2036636](2036650 'cast' uint(64)[115](2310062 'cast' int(64)[13](2126073 '*' minSize[1222827] numChunks[1222900])) _ln[2290772] _fn[2290774]))
      {
        (1223097 'move' tmp[1223064](2042421 '>' numChunks[1222900] 1))
      }
      {
        (1223103 'move' tmp[1223064] 0)
      }
      (1223109 'move' tmp[1223025] tmp[1223064])
      WhileDo[1223114]
      {
        ref i_lhs[2126734]:int(64)[13] "temp"
        (2126738 'move' i_lhs[2126734](2126736 'set reference' numChunks[1222900]))
        (2126746 '-=' i_lhs[2126734] 1)
        val tmp[1223162]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        if(2125664 '<' unumElems[1222886](2036660 'cast' uint(64)[115](2310064 'cast' int(64)[13](2126083 '*' minSize[1222827] numChunks[1222900])) _ln[2290772] _fn[2290774]))
        {
          (1223195 'move' tmp[1223162](2042436 '>' numChunks[1222900] 1))
        }
        {
          (1223201 'move' tmp[1223162] 0)
        }
        (1223207 'move' tmp[1223025] tmp[1223162])
        tmp[1223025]
      }
    }
    if(2125739 '>'(2036670 'cast' uint(64)[115] numChunks[1222900] _ln[2290772] _fn[2290774]) unumElems[1222886])
    {
      (2039681 '=' numChunks[1222900](2099041 'cast' int(64)[13] unumElems[1222886] _ln[2290772] _fn[2290774]))
    }
    (1224743 'move' ret[1222833] numChunks[1222900])
    label _end__computeNumChunks[1223265]
    (1223267 return ret[1222833])
  }
  function _computeNumChunks[1363414](const in arg maxTasks[1363416]:int(64)[13], const in arg ignoreRunning[1363418]:bool[10], const in arg minSize[1363420]:int(64)[13], const in arg numElems[1363422]:uint(64)[115], const in arg _ln[2290838]:int(64)[13], in arg _fn[2290840]:int(32)[95]) : int(64)[13] "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1363426]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[2037758]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2037756 '!'(2037749 '<' 0 0))
    {
      (2037776 'move' tmp[2037758](2037773 '<=' numElems[1363422](2037766 'cast' uint(64)[115] 0 _ln[2290838] _fn[2290840])))
    }
    {
      (2037780 'move' tmp[2037758] 0)
    }
    if tmp[2037758]
    {
      (1363457 'move' ret[1363426] 0)
      gotoReturn _end__computeNumChunks[1363858] _end__computeNumChunks[1363858]
    }
    const-val unumElems[1363479]:uint(64)[115] "dead at end of block" "const" "insert auto destroy"
    (1363481 'move' unumElems[1363479] numElems[1363422])
    val numChunks[1363493]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1363495 'move' numChunks[1363493] maxTasks[1363416])
    if(2035016 '!' ignoreRunning[1363418])
    {
      const-val call_tmp[1363516]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2084355]:chpl_localeID_t[209306] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2084357]:chpl_localeID_t[209306] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2084359 'move' call_tmp[2084357](2084362 call chpl_rt_buildLocaleID[209384] chpl_nodeID[208164] c_sublocid_any[89879]))
      (2084365 'move' call_tmp[2084355] call_tmp[2084357])
      const-val call_tmp[2084368]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2084370]:locale[28] "temp"
      (2084373 call chpl_localeID_to_locale[92857] call_tmp[2084355] ret_tmp[2084370] _ln[2290838] _fn[2290840])
      (2084376 'move' call_tmp[2084368] ret_tmp[2084370])
      (1783157 'move' call_tmp[1363516] call_tmp[2084368])
      const-val call_tmp[1363522]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1363524 'move' call_tmp[1363522](1363530 call runningTasks[93130] call_tmp[1363516] _ln[2290838] _fn[2290840]))
      const-val call_tmp[2063586]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2063588 'move' call_tmp[2063586](2063590 '-' call_tmp[1363522] 1))
      val tmp[1363545]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if(2046256 '<' call_tmp[2063586] maxTasks[1363416])
      {
        (1363580 'move' tmp[1363545](2310192 'cast' int(64)[13](2045205 '-' maxTasks[1363416] call_tmp[2063586])))
      }
      {
        (1363586 'move' tmp[1363545] 1)
      }
      (2040025 '=' numChunks[1363493] tmp[1363545])
      ref i_x[2178352]:locale[28] "temp"
      (2178356 'move' i_x[2178352](2178354 'set reference' call_tmp[1363516]))
      (2178360 call deinit[90189] i_x[2178352])
    }
    if(2042646 '>' minSize[1363420] 0)
    {
      val tmp[1363618]:bool[10] "dead after last mention" "temp"
      val tmp[1363657]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if(2125674 '<' numElems[1363422](2036940 'cast' uint(64)[115](2310194 'cast' int(64)[13](2126223 '*' minSize[1363420] numChunks[1363493])) _ln[2290838] _fn[2290840]))
      {
        (1363690 'move' tmp[1363657](2042661 '>' numChunks[1363493] 1))
      }
      {
        (1363696 'move' tmp[1363657] 0)
      }
      (1363702 'move' tmp[1363618] tmp[1363657])
      WhileDo[1363707]
      {
        ref i_lhs[2126762]:int(64)[13] "temp"
        (2126766 'move' i_lhs[2126762](2126764 'set reference' numChunks[1363493]))
        (2126774 '-=' i_lhs[2126762] 1)
        val tmp[1363755]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        if(2125684 '<' unumElems[1363479](2036950 'cast' uint(64)[115](2310196 'cast' int(64)[13](2126233 '*' minSize[1363420] numChunks[1363493])) _ln[2290838] _fn[2290840]))
        {
          (1363788 'move' tmp[1363755](2042676 '>' numChunks[1363493] 1))
        }
        {
          (1363794 'move' tmp[1363755] 0)
        }
        (1363800 'move' tmp[1363618] tmp[1363755])
        tmp[1363618]
      }
    }
    if(2125749 '>'(2036960 'cast' uint(64)[115] numChunks[1363493] _ln[2290838] _fn[2290840]) unumElems[1363479])
    {
      (2040037 '=' numChunks[1363493](2099091 'cast' int(64)[13] unumElems[1363479] _ln[2290838] _fn[2290840]))
    }
    (1363919 'move' ret[1363426] numChunks[1363493])
    label _end__computeNumChunks[1363858]
    (1363860 return ret[1363426])
  }
  function _computeNumChunks[1258820](const in arg numElems[1258822]:int(64)[13], const in arg _ln[2291566]:int(64)[13], in arg _fn[2291568]:int(32)[95]) : int(64)[13] "instantiated generic" "invisible fn" "resolved"
  {
    const-val local_dataParMinGranularity[2279214]:int(64)[13] "temp"
    (2279215 'move' local_dataParMinGranularity[2279214] dataParMinGranularity[93301])
    const-val local_dataParIgnoreRunningTasks[2279208]:bool[10] "temp"
    (2279209 'move' local_dataParIgnoreRunningTasks[2279208] dataParIgnoreRunningTasks[93295])
    const-val local__str_literal_129[2279201]:string[26] "temp"
    (2279202 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local_dataParTasksPerLocale[2279195]:int(64)[13] "temp"
    (2279196 'move' local_dataParTasksPerLocale[2279195] dataParTasksPerLocale[93289])
    val tmp[1258836]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2047645 '==' local_dataParTasksPerLocale[2279195] 0)
    {
      const-val call_tmp[1258857]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2084319]:chpl_localeID_t[209306] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2084321]:chpl_localeID_t[209306] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2084323 'move' call_tmp[2084321](2084326 call chpl_rt_buildLocaleID[209384] chpl_nodeID[208164] c_sublocid_any[89879]))
      (2084329 'move' call_tmp[2084319] call_tmp[2084321])
      const-val call_tmp[2084332]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2084334]:locale[28] "temp"
      (2084337 call chpl_localeID_to_locale[92857] call_tmp[2084319] ret_tmp[2084334] _ln[2291566] _fn[2291568])
      (2084340 'move' call_tmp[2084332] ret_tmp[2084334])
      (1783133 'move' call_tmp[1258857] call_tmp[2084332])
      val coerce_tmp[2085077]:BaseLocale[91205] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2085079 'move' coerce_tmp[2085077](2085081 '.v' call_tmp[1258857] _instance[89979]))
      if(2085095 'ptr_eq'(2085088 'cast' object[22] coerce_tmp[2085077] _ln[2291566] _fn[2291568]) nil[44])
      {
        (2085101 call nilCheckHalt[210068] "argument to ! is nil" _ln[2291566] _fn[2291568])
      }
      val coerce_tmp[2085104]:BaseLocale[91205] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2085106 'move' coerce_tmp[2085104] coerce_tmp[2085077])
      (2285279 '_check_nil' coerce_tmp[2085104] _ln[2291566] _fn[2291568])
      (1258869 'move' tmp[1258836](2085111 '.v' coerce_tmp[2085104] maxTaskPar[90747]))
      ref i_x[2178340]:locale[28] "temp"
      (2178344 'move' i_x[2178340](2178342 'set reference' call_tmp[1258857]))
      (2178348 call deinit[90189] i_x[2178340])
    }
    {
      (1258875 'move' tmp[1258836] local_dataParTasksPerLocale[2279195])
    }
    const-val call_tmp[1258897]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1258899 'move' call_tmp[1258897](1258902 call _computeNumChunks[1222821] tmp[1258836] local_dataParIgnoreRunningTasks[2279208] local_dataParMinGranularity[2279214] numElems[1258822] _ln[2291566] _fn[2291568]))
    (1258927 return call_tmp[1258897])
  }
  function intCeilXDivByY[1226640](const in arg x[1226642]:uint(64)[115], const in arg y[1226644]:uint(64)[115], const in arg _ln[2292206]:int(64)[13], in arg _fn[2292208]:int(32)[95]) : uint(64)[115] "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_71[2279117]:string[26] "temp"
    (2279118 'move' "Attempt to divide by zero" "Attempt to divide by zero")
    const-val call_tmp[2098727]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2098729 'move' call_tmp[2098727](2098731 '-' x[1226642] 1))
    val tmp[2126425]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2126423 '!'(2126416 '<' 0 0))
    {
      (2126443 'move' tmp[2126425](2126440 '==' y[1226644](2126433 'cast' uint(64)[115] 0 _ln[2292206] _fn[2292208])))
    }
    {
      (2126447 'move' tmp[2126425] 0)
    }
    if tmp[2126425]
    {
      (2126454 call halt[154071] "Attempt to divide by zero" _ln[2292206] _fn[2292208])
    }
    const-val call_tmp[2126457]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2126459 'move' call_tmp[2126457](2126461 '/' call_tmp[2098727] y[1226644]))
    const-val call_tmp[2182312]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2182314 'move' call_tmp[2182312](2182316 '+' 1 call_tmp[2126457]))
    (1226684 return call_tmp[2182312])
  }
  function _computeBlock[1226167](const in arg numelems[1226169]:int(64)[13], const in arg numblocks[1226171]:int(64)[13], const in arg blocknum[1226173]:int(64)[13], const in arg wayhi[1226175]:int(64)[13], const in arg waylo[1226199]:int(64)[13], const in arg lo[1226223]:int(64)[13], ref arg _retArg[1787511]:2*int(64)[1037179], const in arg _ln[2290784]:int(64)[13], in arg _fn[2290786]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1226225]:2*int(64)[1037179] "dead after last mention" "RVV" "temp"
    if(2047545 '==' numelems[1226169] 0)
    {
      const-val ret_tmp[1785348]:2*int(64)[1037179] "temp"
      (2259286 'set svec member' ret_tmp[1785348] 0 1)
      (2259290 'set svec member' ret_tmp[1785348] 1 0)
      (1226294 'move' ret[1226225] ret_tmp[1785348])
      gotoReturn _end__computeBlock[1226540] _end__computeBlock[1226540]
    }
    val tmp[1226303]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2047560 '==' blocknum[1226173] 0)
    {
      (1226322 'move' tmp[1226303] waylo[1226199])
    }
    {
      const-val call_tmp[1226368]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      (1226370 'move' call_tmp[1226368](1226373 call intCeilXDivByY[1226640](2310066 'cast' uint(64)[115](2107871 '*'(2036680 'cast' uint(64)[115] numelems[1226169] _ln[2290784] _fn[2290786])(2036690 'cast' uint(64)[115] blocknum[1226173] _ln[2290784] _fn[2290786])))(2036700 'cast' uint(64)[115] numblocks[1226171] _ln[2290784] _fn[2290786]) _ln[2290784] _fn[2290786]))
      (1226390 'move' tmp[1226303](2310068 'cast' int(64)[13](2043864 '+' lo[1226223](2099051 'cast' int(64)[13] call_tmp[1226368] _ln[2290784] _fn[2290786]))))
    }
    val tmp[1226402]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2047570 '==' blocknum[1226173](2310076 'cast' int(64)[13](2063480 '-' numblocks[1226171] 1)))
    {
      (1226429 'move' tmp[1226402] wayhi[1226175])
    }
    {
      const-val call_tmp[1226483]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      (1226485 'move' call_tmp[1226483](1226488 call intCeilXDivByY[1226640](2310070 'cast' uint(64)[115](2107881 '*'(2036720 'cast' uint(64)[115] numelems[1226169] _ln[2290784] _fn[2290786])(2036730 'cast' uint(64)[115](2310074 'cast' int(64)[13](2038638 '+' blocknum[1226173] 1)) _ln[2290784] _fn[2290786])))(2036740 'cast' uint(64)[115] numblocks[1226171] _ln[2290784] _fn[2290786]) _ln[2290784] _fn[2290786]))
      (1226513 'move' tmp[1226402](2310072 'cast' int(64)[13](2063490 '-'(2310078 'cast' int(64)[13](2043874 '+' lo[1226223](2099061 'cast' int(64)[13] call_tmp[1226483] _ln[2290784] _fn[2290786]))) 1)))
    }
    const-val ret_tmp[1785354]:2*int(64)[1037179] "temp"
    (2259300 'set svec member' ret_tmp[1785354] 0 tmp[1226303])
    (2259304 'set svec member' ret_tmp[1785354] 1 tmp[1226402])
    (1226531 'move' ret[1226225] ret_tmp[1785354])
    label _end__computeBlock[1226540]
    (1787513 '=' _retArg[1787511] ret[1226225])
    (1787515 return _void[55])
  }
}