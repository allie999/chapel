AST dump for DSIUtil after pass denormalize.
Module use list: ChapelStandard 

{
  function chpl__init_DSIUtil[416226](const in arg _ln[2684686]:int(64)[13], in arg _fn[2684688]:int(32)[95]) : void[4] "fast on" "insert line file info" "local fn" "module init" "resolved"
  {
    if chpl__init_DSIUtil_p[2657118]
    {
      goto _exit_chpl__init_DSIUtil[2657155] _exit_chpl__init_DSIUtil[2657155]
    }
    ref refIndentLevel[2657141]:int(32)[95] "temp"
    (2657139 call printModuleInit[20429] c"%*s\n" c"DSIUtil" 7 _ln[2684686] _fn[2684688])
    (2657145 'move' refIndentLevel[2657141](2657144 'addr of' moduleInitLevel[20419]))
    (2657148 '+=' refIndentLevel[2657141] 1)
    (2657124 'move' chpl__init_DSIUtil_p[2657118] 1)
    (2657151 '-=' refIndentLevel[2657141] 1)
    label _exit_chpl__init_DSIUtil[2657155]
    (533744 return _void[55])
  }
  function createTuple[1306394](const in arg val[1306400]:int(64)[13], ref arg _retArg[1913529]:1*int(64)[1256714]) : void[4] "fast on" "fn returns via _retArg" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val ret[1306402]:1*int(64)[1256714] "dead after last mention" "RVV" "temp"
    (2554776 'set svec member' ret[1306402] 0 val[1306400])
    (1913531 '=' _retArg[1913529] ret[1306402])
    (1913533 return _void[55])
  }
  function _computeChunkStuff[1381155](const in arg maxTasks[1381157]:int(64)[13], const in arg ignoreRunning[1381159]:bool[10], const in arg minSize[1381161]:int(64)[13], const  wide-ref arg ranges[1381163]:1*range(int(64),bounded,false)[1244885], ref arg _retArg[1914545]:2*int(64)[1040245], const in arg _ln[2669028]:int(64)[13], in arg _fn[2669030]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1381176]:2*int(64)[1040245] "dead after last mention" "RVV" "temp"
    val numElems[1381220]:uint(64)[115] "dead at end of block" "insert auto destroy"
    (1381222 'move' numElems[1381220] 1)
    const-val call_tmp[1381802]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1381831]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1381835 'move' coerce_tmp[1381831](2570123 'get svec member value' ranges[1381163] 0))
    (1381804 'move' call_tmp[1381802](1381807 call size[1035978] coerce_tmp[1381831] _ln[2669028] _fn[2669030]))
    ref i_lhs[2335710]:uint(64)[115] "temp"
    (2335714 'move' i_lhs[2335710](2335712 'set reference' numElems[1381220]))
    (2335717 '*=' i_lhs[2335710](2231412 'cast' uint(64)[115] call_tmp[1381802] _ln[2669028] _fn[2669030]))
    const-val call_tmp[1381312]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1381314 'move' call_tmp[1381312](1381317 call _computeNumChunks[1381851] maxTasks[1381157] ignoreRunning[1381159] minSize[1381161] numElems[1381220] _ln[2669028] _fn[2669030]))
    val numChunks[1381322]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1381324 'move' numChunks[1381322] call_tmp[1381312])
    if(2233685 '==' call_tmp[1381312] 0)
    {
      const-val ret_tmp[1908780]:2*int(64)[1040245] "temp"
      (2551819 'set svec member' ret_tmp[1908780] 0 0)
      (2551823 'set svec member' ret_tmp[1908780] 1 -1)
      (1383121 'move' ret[1381176] ret_tmp[1908780])
      gotoReturn _end__computeChunkStuff[1381737] _end__computeChunkStuff[1381737]
    }
    (1381385 call assert[210432](2240757 '>' call_tmp[1381312] 0) _ln[2669028] _fn[2669030])
    val parDim[1381396]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1381398 'move' parDim[1381396] -1)
    val maxDim[1381409]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1381411 'move' maxDim[1381409] -1)
    val maxElems[1381422]:uint(64)[115] "dead at end of block" "insert auto destroy"
    (1381424 'move' maxElems[1381422] 0)
    const-val _ic__F1_high[2543031]:int(64)[13] "temp"
    (2306500 'move' _ic__F1_high[2543031] 0)
    val i[2007395]:int(64)[13] "dead at end of block" "insert auto destroy"
    (2007399 'move' i[2007395] 0)
    (2007451 call chpl_checkIfRangeIterWillOverflow[1096265] 0 0 1 0 0 1 _ln[2669028] _fn[2669030])
    CForLoop[2007458]
    {
      wide-ref call_tmp[2007535]:range(int(64),bounded,false)[1027003] "dead at end of block" "maybe param" "reference to a const" "temp"
      (2007537 'move' call_tmp[2007535](2007540 call this[1382848] ranges[1381163] i[2007395] _ln[2669028] _fn[2669030]))
      const-val call_tmp[2007543]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2007545]:range(int(64),bounded,false)[1027003] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2007547 'move' coerce_tmp[2007545] call_tmp[2007535])
      (2007552 'move' call_tmp[2007543](2007555 call size[1035978] coerce_tmp[2007545] _ln[2669028] _fn[2669030]))
      const-val call_tmp[2231658]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2231660 'move' call_tmp[2231658](2231662 'cast' uint(64)[115] call_tmp[2007543] _ln[2669028] _fn[2669030]))
      if(2232726 '>=' call_tmp[2231658](2231672 'cast' uint(64)[115] numChunks[1381322] _ln[2669028] _fn[2669030]))
      {
        (2238483 '=' parDim[1381396] i[2007395])
        break _breakLabel[1381581] _breakLabel[1381581]
      }
      if(2232665 '>' call_tmp[2231658] maxElems[1381422])
      {
        (2333926 '=' maxElems[1381422] call_tmp[2231658])
        (2238495 '=' maxDim[1381409] i[2007395])
      }
      {
        (2007467 '=' i[2007395] 0)
      }
      {
        (2007478 '<=' i[2007395] _ic__F1_high[2543031])
      }
      {
        (2007484 '+=' i[2007395] 1)
      }
    }
    label _breakLabel[1381581]
    if(2233700 '==' parDim[1381396] -1)
    {
      (2237589 '=' parDim[1381396] maxDim[1381409])
      if(2334188 '<' maxElems[1381422](2231462 'cast' uint(64)[115] numChunks[1381322] _ln[2669028] _fn[2669030]))
      {
        (2237601 '=' numChunks[1381322](2302658 'cast' int(64)[13] maxElems[1381422] _ln[2669028] _fn[2669030]))
      }
    }
    const-val ret_tmp[1908786]:2*int(64)[1040245] "temp"
    (2551833 'set svec member' ret_tmp[1908786] 0 numChunks[1381322])
    (2551837 'set svec member' ret_tmp[1908786] 1 parDim[1381396])
    (1383124 'move' ret[1381176] ret_tmp[1908786])
    label _end__computeChunkStuff[1381737]
    (1914547 '=' _retArg[1914545] ret[1381176])
    (1914553 return _void[55])
  }
  function _local__computeNumChunks[2606549](const in arg maxTasks[2606551]:int(64)[13], const in arg ignoreRunning[2606553]:bool[10], const in arg minSize[2606555]:int(64)[13], const in arg numElems[2606557]:int(64)[13], const in arg _ln[2673924]:int(64)[13], in arg _fn[2673926]:int(32)[95]) : int(64)[13] "instantiated generic" "invisible fn" "local fn" "resolved"
  {
    val ret[2606560]:int(64)[13] "dead after last mention" "RVV" "temp"
    if(2606566 '<=' numElems[2606557] 0)
    {
      (2606571 'move' ret[2606560] 0)
      gotoReturn _end__computeNumChunks[2606823] _end__computeNumChunks[2606823]
    }
    const-val call_tmp[2606577]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2606579 'move' call_tmp[2606577](2606581 'cast' uint(64)[115] numElems[2606557] _ln[2673924] _fn[2673926]))
    const-val unumElems[2606584]:uint(64)[115] "dead at end of block" "const" "insert auto destroy"
    (2606586 'move' unumElems[2606584] call_tmp[2606577])
    val numChunks[2606589]:int(64)[13] "dead at end of block" "insert auto destroy"
    (2606591 'move' numChunks[2606589] maxTasks[2606551])
    if(2606598 '!' ignoreRunning[2606553])
    {
      const-val call_tmp[2606602]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2606604]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2606606]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2606608 'move' call_tmp[2606606](2606611 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
      (2606614 'move' call_tmp[2606604] call_tmp[2606606])
      const-val call_tmp[2606617]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2606619]:locale[28] "temp"
      wide-ref tmp[2652085]:chpl_localeID_t[209352] "temp"
      (2652089 'move' tmp[2652085](2652087 'set reference' call_tmp[2606604]))
      (2606622 call _local_chpl_localeID_to_locale[2606313] tmp[2652085] ret_tmp[2606619] _ln[2673924] _fn[2673926])
      (2606625 'move' call_tmp[2606617] ret_tmp[2606619])
      (2606628 'move' call_tmp[2606602] call_tmp[2606617])
      const-val call_tmp[2606631]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (2606633 'move' call_tmp[2606631](2606636 call _local_runningTasks[2610997] call_tmp[2606602] _ln[2673924] _fn[2673926]))
      const-val call_tmp[2606638]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2606640 'move' call_tmp[2606638](2606642 '-' call_tmp[2606631] 1))
      val tmp[2606645]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if(2606651 '<' call_tmp[2606638] maxTasks[2606551])
      {
        (2606663 'move' tmp[2606645](2708700 'cast' int(64)[13](2606660 '-' maxTasks[2606551] call_tmp[2606638])))
      }
      {
        (2606667 'move' tmp[2606645] 1)
      }
      (2606671 '=' numChunks[2606589] tmp[2606645])
      ref i_x[2606674]:locale[28] "temp"
      (2606676 'move' i_x[2606674](2606678 'set reference' call_tmp[2606602]))
      wide-ref tmp[2652092]:locale[28] "temp"
      (2652095 'move' tmp[2652092] i_x[2606674])
      (2606681 call _local_deinit[2606540] tmp[2652092])
    }
    if(2606688 '>' minSize[2606555] 0)
    {
      val tmp[2606693]:bool[10] "dead after last mention" "temp"
      val tmp[2606716]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if(2606713 '<' call_tmp[2606577](2606706 'cast' uint(64)[115](2708702 'cast' int(64)[13](2606699 '*' minSize[2606555] numChunks[2606589])) _ln[2673924] _fn[2673926]))
      {
        (2606727 'move' tmp[2606716](2606724 '>' numChunks[2606589] 1))
      }
      {
        (2606731 'move' tmp[2606716] 0)
      }
      (2606735 'move' tmp[2606693] tmp[2606716])
      WhileDo[2606738]
      {
        ref i_lhs[2606740]:int(64)[13] "temp"
        (2606742 'move' i_lhs[2606740](2606744 'set reference' numChunks[2606589]))
        (2606746 '-=' i_lhs[2606740] 1)
        val tmp[2606770]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        if(2606767 '<' unumElems[2606584](2606760 'cast' uint(64)[115](2708704 'cast' int(64)[13](2606753 '*' minSize[2606555] numChunks[2606589])) _ln[2673924] _fn[2673926]))
        {
          (2606781 'move' tmp[2606770](2606778 '>' numChunks[2606589] 1))
        }
        {
          (2606785 'move' tmp[2606770] 0)
        }
        (2606789 'move' tmp[2606693] tmp[2606770])
        tmp[2606693]
      }
    }
    if(2606804 '>'(2606797 'cast' uint(64)[115] numChunks[2606589] _ln[2673924] _fn[2673926]) unumElems[2606584])
    {
      (2606816 '=' numChunks[2606589](2606813 'cast' int(64)[13] unumElems[2606584] _ln[2673924] _fn[2673926]))
    }
    (2606820 'move' ret[2606560] numChunks[2606589])
    label _end__computeNumChunks[2606823]
    (2606825 return ret[2606560])
  }
  function _computeNumChunks[1226144](const in arg maxTasks[1226146]:int(64)[13], const in arg ignoreRunning[1226148]:bool[10], const in arg minSize[1226150]:int(64)[13], const in arg numElems[1226152]:int(64)[13], const in arg _ln[2668962]:int(64)[13], in arg _fn[2668964]:int(32)[95]) : int(64)[13] "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1226156]:int(64)[13] "dead after last mention" "RVV" "temp"
    if(2290283 '<=' numElems[1226152] 0)
    {
      (1226187 'move' ret[1226156] 0)
      gotoReturn _end__computeNumChunks[1226588] _end__computeNumChunks[1226588]
    }
    const-val call_tmp[2231098]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2231100 'move' call_tmp[2231098](2231102 'cast' uint(64)[115] numElems[1226152] _ln[2668962] _fn[2668964]))
    const-val unumElems[1226209]:uint(64)[115] "dead at end of block" "const" "insert auto destroy"
    (1226211 'move' unumElems[1226209] call_tmp[2231098])
    val numChunks[1226223]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1226225 'move' numChunks[1226223] maxTasks[1226146])
    if(2228476 '!' ignoreRunning[1226148])
    {
      const-val call_tmp[1226246]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2286071]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2286073]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2286075 'move' call_tmp[2286073](2286078 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
      (2286081 'move' call_tmp[2286071] call_tmp[2286073])
      const-val call_tmp[2286084]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2286086]:locale[28] "temp"
      wide-ref tmp[2631175]:chpl_localeID_t[209352] "temp"
      (2631179 'move' tmp[2631175](2631177 'set reference' call_tmp[2286071]))
      (2286089 call chpl_localeID_to_locale[92852] tmp[2631175] ret_tmp[2286086] _ln[2668962] _fn[2668964])
      (2286092 'move' call_tmp[2286084] ret_tmp[2286086])
      (1906343 'move' call_tmp[1226246] call_tmp[2286084])
      const-val call_tmp[1226252]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1226254 'move' call_tmp[1226252](1226260 call runningTasks[93125] call_tmp[1226246] _ln[2668962] _fn[2668964]))
      const-val call_tmp[2261174]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2261176 'move' call_tmp[2261174](2261178 '-' call_tmp[1226252] 1))
      val tmp[1226275]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if(2244842 '<' call_tmp[2261174] maxTasks[1226146])
      {
        (1226310 'move' tmp[1226275](2708220 'cast' int(64)[13](2243671 '-' maxTasks[1226146] call_tmp[2261174])))
      }
      {
        (1226316 'move' tmp[1226275] 1)
      }
      (2237170 '=' numChunks[1226223] tmp[1226275])
      ref i_x[2388761]:locale[28] "temp"
      (2388765 'move' i_x[2388761](2388763 'set reference' call_tmp[1226246]))
      wide-ref tmp[2636556]:locale[28] "temp"
      (2636559 'move' tmp[2636556] i_x[2388761])
      (2388769 call deinit[90188] tmp[2636556])
    }
    if(2240442 '>' minSize[1226150] 0)
    {
      val tmp[1226348]:bool[10] "dead after last mention" "temp"
      val tmp[1226387]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if(2334148 '<' call_tmp[2231098](2231112 'cast' uint(64)[115](2708222 'cast' int(64)[13](2334532 '*' minSize[1226150] numChunks[1226223])) _ln[2668962] _fn[2668964]))
      {
        (1226420 'move' tmp[1226387](2240457 '>' numChunks[1226223] 1))
      }
      {
        (1226426 'move' tmp[1226387] 0)
      }
      (1226432 'move' tmp[1226348] tmp[1226387])
      WhileDo[1226437]
      {
        ref i_lhs[2335607]:int(64)[13] "temp"
        (2335611 'move' i_lhs[2335607](2335609 'set reference' numChunks[1226223]))
        (2335619 '-=' i_lhs[2335607] 1)
        val tmp[1226485]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        if(2334158 '<' unumElems[1226209](2231122 'cast' uint(64)[115](2708224 'cast' int(64)[13](2334542 '*' minSize[1226150] numChunks[1226223])) _ln[2668962] _fn[2668964]))
        {
          (1226518 'move' tmp[1226485](2240472 '>' numChunks[1226223] 1))
        }
        {
          (1226524 'move' tmp[1226485] 0)
        }
        (1226530 'move' tmp[1226348] tmp[1226485])
        tmp[1226348]
      }
    }
    if(2232635 '>'(2231132 'cast' uint(64)[115] numChunks[1226223] _ln[2668962] _fn[2668964]) unumElems[1226209])
    {
      (2237182 '=' numChunks[1226223](2302598 'cast' int(64)[13] unumElems[1226209] _ln[2668962] _fn[2668964]))
    }
    (1228083 'move' ret[1226156] numChunks[1226223])
    label _end__computeNumChunks[1226588]
    (1226590 return ret[1226156])
  }
  function _computeNumChunks[1381851](const in arg maxTasks[1381853]:int(64)[13], const in arg ignoreRunning[1381855]:bool[10], const in arg minSize[1381857]:int(64)[13], const in arg numElems[1381859]:uint(64)[115], const in arg _ln[2669034]:int(64)[13], in arg _fn[2669036]:int(32)[95]) : int(64)[13] "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1381863]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[2232827]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2232825 '!'(2232818 '<' 0 0))
    {
      (2232845 'move' tmp[2232827](2232842 '<=' numElems[1381859](2232835 'cast' uint(64)[115] 0 _ln[2669034] _fn[2669036])))
    }
    {
      (2232849 'move' tmp[2232827] 0)
    }
    if tmp[2232827]
    {
      (1381894 'move' ret[1381863] 0)
      gotoReturn _end__computeNumChunks[1382295] _end__computeNumChunks[1382295]
    }
    const-val unumElems[1381916]:uint(64)[115] "dead at end of block" "const" "insert auto destroy"
    (1381918 'move' unumElems[1381916] numElems[1381859])
    val numChunks[1381930]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1381932 'move' numChunks[1381930] maxTasks[1381853])
    if(2228701 '!' ignoreRunning[1381855])
    {
      const-val call_tmp[1381953]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2286323]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2286325]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2286327 'move' call_tmp[2286325](2286330 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
      (2286333 'move' call_tmp[2286323] call_tmp[2286325])
      const-val call_tmp[2286336]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2286338]:locale[28] "temp"
      wide-ref tmp[2631224]:chpl_localeID_t[209352] "temp"
      (2631228 'move' tmp[2631224](2631226 'set reference' call_tmp[2286323]))
      (2286341 call chpl_localeID_to_locale[92852] tmp[2631224] ret_tmp[2286338] _ln[2669034] _fn[2669036])
      (2286344 'move' call_tmp[2286336] ret_tmp[2286338])
      (1906403 'move' call_tmp[1381953] call_tmp[2286336])
      const-val call_tmp[1381959]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1381961 'move' call_tmp[1381959](1381967 call runningTasks[93125] call_tmp[1381953] _ln[2669034] _fn[2669036]))
      const-val call_tmp[2261324]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2261326 'move' call_tmp[2261324](2261328 '-' call_tmp[1381959] 1))
      val tmp[1381982]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if(2244862 '<' call_tmp[2261324] maxTasks[1381853])
      {
        (1382017 'move' tmp[1381982](2708344 'cast' int(64)[13](2243681 '-' maxTasks[1381853] call_tmp[2261324])))
      }
      {
        (1382023 'move' tmp[1381982] 1)
      }
      (2237565 '=' numChunks[1381930] tmp[1381982])
      ref i_x[2388845]:locale[28] "temp"
      (2388849 'move' i_x[2388845](2388847 'set reference' call_tmp[1381953]))
      wide-ref tmp[2636598]:locale[28] "temp"
      (2636601 'move' tmp[2636598] i_x[2388845])
      (2388853 call deinit[90188] tmp[2636598])
    }
    if(2240712 '>' minSize[1381857] 0)
    {
      val tmp[1382055]:bool[10] "dead after last mention" "temp"
      val tmp[1382094]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if(2334168 '<' numElems[1381859](2231432 'cast' uint(64)[115](2708346 'cast' int(64)[13](2334722 '*' minSize[1381857] numChunks[1381930])) _ln[2669034] _fn[2669036]))
      {
        (1382127 'move' tmp[1382094](2240727 '>' numChunks[1381930] 1))
      }
      {
        (1382133 'move' tmp[1382094] 0)
      }
      (1382139 'move' tmp[1382055] tmp[1382094])
      WhileDo[1382144]
      {
        ref i_lhs[2335635]:int(64)[13] "temp"
        (2335639 'move' i_lhs[2335635](2335637 'set reference' numChunks[1381930]))
        (2335647 '-=' i_lhs[2335635] 1)
        val tmp[1382192]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        if(2334178 '<' unumElems[1381916](2231442 'cast' uint(64)[115](2708348 'cast' int(64)[13](2334732 '*' minSize[1381857] numChunks[1381930])) _ln[2669034] _fn[2669036]))
        {
          (1382225 'move' tmp[1382192](2240742 '>' numChunks[1381930] 1))
        }
        {
          (1382231 'move' tmp[1382192] 0)
        }
        (1382237 'move' tmp[1382055] tmp[1382192])
        tmp[1382055]
      }
    }
    if(2232645 '>'(2231452 'cast' uint(64)[115] numChunks[1381930] _ln[2669034] _fn[2669036]) unumElems[1381916])
    {
      (2237577 '=' numChunks[1381930](2302648 'cast' int(64)[13] unumElems[1381916] _ln[2669034] _fn[2669036]))
    }
    (1382356 'move' ret[1381863] numChunks[1381930])
    label _end__computeNumChunks[1382295]
    (1382297 return ret[1381863])
  }
  function _computeNumChunks[1262511](const in arg numElems[1262513]:int(64)[13], const in arg _ln[2669954]:int(64)[13], in arg _fn[2669956]:int(32)[95]) : int(64)[13] "instantiated generic" "invisible fn" "resolved"
  {
    const-val local_dataParMinGranularity[2578692]:int(64)[13] "temp"
    (2578693 'move' local_dataParMinGranularity[2578692] dataParMinGranularity[93296])
    const-val local_dataParIgnoreRunningTasks[2578686]:bool[10] "temp"
    (2578687 'move' local_dataParIgnoreRunningTasks[2578686] dataParIgnoreRunningTasks[93290])
    const-val local__str_literal_129[2578679]:string[26] "temp"
    (2578680 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local_dataParTasksPerLocale[2578673]:int(64)[13] "temp"
    (2578674 'move' local_dataParTasksPerLocale[2578673] dataParTasksPerLocale[93284])
    val tmp[1262527]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2233555 '==' local_dataParTasksPerLocale[2578673] 0)
    {
      const-val call_tmp[1262548]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2286215]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2286217]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2286219 'move' call_tmp[2286217](2286222 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
      (2286225 'move' call_tmp[2286215] call_tmp[2286217])
      const-val call_tmp[2286228]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2286230]:locale[28] "temp"
      wide-ref tmp[2631203]:chpl_localeID_t[209352] "temp"
      (2631207 'move' tmp[2631203](2631205 'set reference' call_tmp[2286215]))
      (2286233 call chpl_localeID_to_locale[92852] tmp[2631203] ret_tmp[2286230] _ln[2669954] _fn[2669956])
      (2286236 'move' call_tmp[2286228] ret_tmp[2286230])
      (1906367 'move' call_tmp[1262548] call_tmp[2286228])
      val coerce_tmp[2288231]:__wide_BaseLocale[2581355] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2288233 'move' coerce_tmp[2288231](2288235 '.v' call_tmp[1262548] _instance[89978]))
      val coerce_tmp[2288238]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2288240 'move' coerce_tmp[2288238](2288242 'cast' object[22] coerce_tmp[2288231] _ln[2669954] _fn[2669956]))
      val tmp[2631510]:__wide_object[2581313] "temp"
      (2631513 'move' tmp[2631510] nil[44])
      if(2288249 'ptr_eq' coerce_tmp[2288238] tmp[2631510])
      {
        (2288255 call nilCheckHalt[210238] "argument to ! is nil" _ln[2669954] _fn[2669956])
      }
      val coerce_tmp[2288258]:__wide_BaseLocale[2581355] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2288260 'move' coerce_tmp[2288258] coerce_tmp[2288231])
      val tmp[2631516]:int(64)[13] "temp"
      (2660785 '_check_nil' coerce_tmp[2288258] _ln[2669954] _fn[2669956])
      (2288263 'move' tmp[2631516](2288265 '.v' coerce_tmp[2288258] maxTaskPar[90746]))
      (1262560 'move' tmp[1262527] tmp[2631516])
      ref i_x[2388809]:locale[28] "temp"
      (2388813 'move' i_x[2388809](2388811 'set reference' call_tmp[1262548]))
      wide-ref tmp[2636580]:locale[28] "temp"
      (2636583 'move' tmp[2636580] i_x[2388809])
      (2388817 call deinit[90188] tmp[2636580])
    }
    {
      (1262566 'move' tmp[1262527] local_dataParTasksPerLocale[2578673])
    }
    const-val call_tmp[1262588]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1262590 'move' call_tmp[1262588](1262593 call _computeNumChunks[1226144] tmp[1262527] local_dataParIgnoreRunningTasks[2578686] local_dataParMinGranularity[2578692] numElems[1262513] _ln[2669954] _fn[2669956]))
    (1262618 return call_tmp[1262588])
  }
  function _local_intCeilXDivByY[2613603](const in arg x[2613605]:uint(64)[115], const in arg y[2613607]:uint(64)[115], const in arg _ln[2674440]:int(64)[13], in arg _fn[2674442]:int(32)[95]) : uint(64)[115] "instantiated generic" "invisible fn" "local fn" "resolved"
  {
    const-val local__str_literal_71[2613610]:string[26] "temp"
    (2613612 'move' local__str_literal_71[2613610] "Attempt to divide by zero")
    const-val call_tmp[2613615]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2613617 'move' call_tmp[2613615](2613619 '-' x[2613605] 1))
    val tmp[2613635]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2613633 '!'(2613626 '<' 0 0))
    {
      (2613653 'move' tmp[2613635](2613650 '==' y[2613607](2613643 'cast' uint(64)[115] 0 _ln[2674440] _fn[2674442])))
    }
    {
      (2613657 'move' tmp[2613635] 0)
    }
    if tmp[2613635]
    {
      (2613664 call _local_halt[2589136] local__str_literal_71[2613610] _ln[2674440] _fn[2674442])
    }
    const-val call_tmp[2613667]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2613669 'move' call_tmp[2613667](2613671 '/' call_tmp[2613615] y[2613607]))
    const-val call_tmp[2613674]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2613676 'move' call_tmp[2613674](2613678 '+' 1 call_tmp[2613667]))
    (2613681 return call_tmp[2613674])
  }
  function intCeilXDivByY[1229998](const in arg x[1230000]:uint(64)[115], const in arg y[1230002]:uint(64)[115], const in arg _ln[2670688]:int(64)[13], in arg _fn[2670690]:int(32)[95]) : uint(64)[115] "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_71[2578595]:string[26] "temp"
    (2578596 'move' "Attempt to divide by zero" "Attempt to divide by zero")
    const-val call_tmp[2302254]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2302256 'move' call_tmp[2302254](2302258 '-' x[1230000] 1))
    val tmp[2335192]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2335190 '!'(2335183 '<' 0 0))
    {
      (2335210 'move' tmp[2335192](2335207 '==' y[1230002](2335200 'cast' uint(64)[115] 0 _ln[2670688] _fn[2670690])))
    }
    {
      (2335214 'move' tmp[2335192] 0)
    }
    if tmp[2335192]
    {
      (2335221 call halt[154111] "Attempt to divide by zero" _ln[2670688] _fn[2670690])
    }
    const-val call_tmp[2335224]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2335226 'move' call_tmp[2335224](2335228 '/' call_tmp[2302254] y[1230002]))
    const-val call_tmp[2393717]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2393719 'move' call_tmp[2393717](2393721 '+' 1 call_tmp[2335224]))
    (1230042 return call_tmp[2393717])
  }
  function _local__computeBlock[2611477](const in arg numelems[2611479]:int(64)[13], const in arg numblocks[2611481]:int(64)[13], const in arg blocknum[2611483]:int(64)[13], const in arg wayhi[2611485]:int(64)[13], const in arg waylo[2611487]:int(64)[13], const in arg lo[2611489]:int(64)[13], ref arg _retArg[2611491]:2*int(64)[1040245], const in arg _ln[2674220]:int(64)[13], in arg _fn[2674222]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "local fn" "resolved"
  {
    val ret[2611494]:2*int(64)[1040245] "dead after last mention" "RVV" "temp"
    if(2611500 '==' numelems[2611479] 0)
    {
      const-val ret_tmp[2611505]:2*int(64)[1040245] "temp"
      (2611507 'set svec member' ret_tmp[2611505] 0 1)
      (2611511 'set svec member' ret_tmp[2611505] 1 0)
      (2611515 'move' ret[2611494] ret_tmp[2611505])
      gotoReturn _end__computeBlock[2611693] _end__computeBlock[2611693]
    }
    val tmp[2611521]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2611527 '==' blocknum[2611483] 0)
    {
      (2611532 'move' tmp[2611521] waylo[2611487])
    }
    {
      const-val call_tmp[2611564]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      (2611566 'move' call_tmp[2611564](2611569 call _local_intCeilXDivByY[2613603](2708738 'cast' uint(64)[115](2611554 '*'(2611540 'cast' uint(64)[115] numelems[2611479] _ln[2674220] _fn[2674222])(2611547 'cast' uint(64)[115] blocknum[2611483] _ln[2674220] _fn[2674222])))(2611561 'cast' uint(64)[115] numblocks[2611481] _ln[2674220] _fn[2674222]) _ln[2674220] _fn[2674222]))
      (2611586 'move' tmp[2611521](2708740 'cast' int(64)[13](2611583 '+' lo[2611489](2611576 'cast' int(64)[13] call_tmp[2611564] _ln[2674220] _fn[2674222]))))
    }
    val tmp[2611590]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2611603 '==' blocknum[2611483](2708742 'cast' int(64)[13](2611596 '-' numblocks[2611481] 1)))
    {
      (2611608 'move' tmp[2611590] wayhi[2611485])
    }
    {
      const-val call_tmp[2611647]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      (2611649 'move' call_tmp[2611647](2611652 call _local_intCeilXDivByY[2613603](2708746 'cast' uint(64)[115](2611637 '*'(2611616 'cast' uint(64)[115] numelems[2611479] _ln[2674220] _fn[2674222])(2611630 'cast' uint(64)[115](2708744 'cast' int(64)[13](2611623 '+' blocknum[2611483] 1)) _ln[2674220] _fn[2674222])))(2611644 'cast' uint(64)[115] numblocks[2611481] _ln[2674220] _fn[2674222]) _ln[2674220] _fn[2674222]))
      (2611676 'move' tmp[2611590](2708750 'cast' int(64)[13](2611673 '-'(2708748 'cast' int(64)[13](2611666 '+' lo[2611489](2611659 'cast' int(64)[13] call_tmp[2611647] _ln[2674220] _fn[2674222]))) 1)))
    }
    const-val ret_tmp[2611680]:2*int(64)[1040245] "temp"
    (2611682 'set svec member' ret_tmp[2611680] 0 tmp[2611521])
    (2611686 'set svec member' ret_tmp[2611680] 1 tmp[2611590])
    (2611690 'move' ret[2611494] ret_tmp[2611680])
    label _end__computeBlock[2611693]
    (2611695 '=' _retArg[2611491] ret[2611494])
    (2611698 return _void[55])
  }
  function _computeBlock[1229525](const in arg numelems[1229527]:int(64)[13], const in arg numblocks[1229529]:int(64)[13], const in arg blocknum[1229531]:int(64)[13], const in arg wayhi[1229533]:int(64)[13], const in arg waylo[1229557]:int(64)[13], const in arg lo[1229581]:int(64)[13], ref arg _retArg[1911010]:2*int(64)[1040245], const in arg _ln[2668974]:int(64)[13], in arg _fn[2668976]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1229583]:2*int(64)[1040245] "dead after last mention" "RVV" "temp"
    if(2233455 '==' numelems[1229527] 0)
    {
      const-val ret_tmp[1908756]:2*int(64)[1040245] "temp"
      (2551791 'set svec member' ret_tmp[1908756] 0 1)
      (2551795 'set svec member' ret_tmp[1908756] 1 0)
      (1229652 'move' ret[1229583] ret_tmp[1908756])
      gotoReturn _end__computeBlock[1229898] _end__computeBlock[1229898]
    }
    val tmp[1229661]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2233470 '==' blocknum[1229531] 0)
    {
      (1229680 'move' tmp[1229661] waylo[1229557])
    }
    {
      const-val call_tmp[1229726]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      (1229728 'move' call_tmp[1229726](1229731 call intCeilXDivByY[1229998](2708226 'cast' uint(64)[115](2312932 '*'(2231142 'cast' uint(64)[115] numelems[1229527] _ln[2668974] _fn[2668976])(2231152 'cast' uint(64)[115] blocknum[1229531] _ln[2668974] _fn[2668976])))(2231162 'cast' uint(64)[115] numblocks[1229529] _ln[2668974] _fn[2668976]) _ln[2668974] _fn[2668976]))
      (1229748 'move' tmp[1229661](2708228 'cast' int(64)[13](2242190 '+' lo[1229581](2302608 'cast' int(64)[13] call_tmp[1229726] _ln[2668974] _fn[2668976]))))
    }
    val tmp[1229760]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2233480 '==' blocknum[1229531](2708236 'cast' int(64)[13](2261198 '-' numblocks[1229529] 1)))
    {
      (1229787 'move' tmp[1229760] wayhi[1229533])
    }
    {
      const-val call_tmp[1229841]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      (1229843 'move' call_tmp[1229841](1229846 call intCeilXDivByY[1229998](2708230 'cast' uint(64)[115](2312942 '*'(2231182 'cast' uint(64)[115] numelems[1229527] _ln[2668974] _fn[2668976])(2231192 'cast' uint(64)[115](2708234 'cast' int(64)[13](2236224 '+' blocknum[1229531] 1)) _ln[2668974] _fn[2668976])))(2231202 'cast' uint(64)[115] numblocks[1229529] _ln[2668974] _fn[2668976]) _ln[2668974] _fn[2668976]))
      (1229871 'move' tmp[1229760](2708232 'cast' int(64)[13](2261208 '-'(2708238 'cast' int(64)[13](2242200 '+' lo[1229581](2302618 'cast' int(64)[13] call_tmp[1229841] _ln[2668974] _fn[2668976]))) 1)))
    }
    const-val ret_tmp[1908762]:2*int(64)[1040245] "temp"
    (2551805 'set svec member' ret_tmp[1908762] 0 tmp[1229661])
    (2551809 'set svec member' ret_tmp[1908762] 1 tmp[1229760])
    (1229889 'move' ret[1229583] ret_tmp[1908762])
    label _end__computeBlock[1229898]
    (1911012 '=' _retArg[1911010] ret[1229583])
    (1911014 return _void[55])
  }
  function bulkCommComputeActiveDims[1440251](const  ref arg LeftDims[1440253]:1*range(int(64),bounded,false)[1244885], const  ref arg RightDims[1440255]:1*range(int(64),bounded,false)[1244885], ref arg _retArg[1915079]:(1*int(64),1*int(64),int(64))[1441721], const in arg _ln[2697918]:int(64)[13], in arg _fn[2697920]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val inferredRank[1440309]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1440311 'move' inferredRank[1440309] 0)
    val LeftActives[1440315]:1*int(64)[1256714] "dead at end of block" "insert auto destroy"
    const-val ret_tmp[1912624]:1*int(64)[1256714] "temp"
    (2555120 'set svec member' ret_tmp[1912624] 0 0)
    (1912627 'move' LeftActives[1440315] ret_tmp[1912624])
    val RightActives[1440328]:1*int(64)[1256714] "dead at end of block" "insert auto destroy"
    const-val ret_tmp[1912630]:1*int(64)[1256714] "temp"
    (2555127 'set svec member' ret_tmp[1912630] 0 0)
    (1912633 'move' RightActives[1440328] ret_tmp[1912630])
    val li[1440340]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1440342 'move' li[1440340] 0)
    val ri[1440345]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1440347 'move' ri[1440345] 0)
    DoWhile[1440894]
    {
      (1440898 call advance[1440352] LeftDims[1440253] li[1440340] RightDims[1440255] ri[1440345] _ln[2697918] _fn[2697920])
      wide-ref call_tmp[1440900]:int(64)[13] "dead after last mention" "maybe param" "temp"
      wide-ref tmp[2617883]:1*int(64)[1256714] "temp"
      (2617887 'move' tmp[2617883](2617885 'set reference' LeftActives[1440315]))
      (1440902 'move' call_tmp[1440900](1440905 call this[1441225] tmp[2617883] inferredRank[1440309] _ln[2697918] _fn[2697920]))
      (2237728 '=' call_tmp[1440900] li[1440340])
      wide-ref call_tmp[1440915]:int(64)[13] "dead after last mention" "maybe param" "temp"
      wide-ref tmp[2617890]:1*int(64)[1256714] "temp"
      (2617894 'move' tmp[2617890](2617892 'set reference' RightActives[1440328]))
      (1440917 'move' call_tmp[1440915](1440920 call this[1441225] tmp[2617890] inferredRank[1440309] _ln[2697918] _fn[2697920]))
      (2237734 '=' call_tmp[1440915] ri[1440345])
      ref i_lhs[2295739]:int(64)[13] "temp"
      (2295743 'move' i_lhs[2295739](2295741 'set reference' inferredRank[1440309]))
      (2295751 '+=' i_lhs[2295739] 1)
      ref i_lhs[2295756]:int(64)[13] "temp"
      (2295760 'move' i_lhs[2295756](2295758 'set reference' li[1440340]))
      (2295768 '+=' i_lhs[2295756] 1)
      ref i_lhs[2295773]:int(64)[13] "temp"
      (2295777 'move' i_lhs[2295773](2295775 'set reference' ri[1440345]))
      (2295785 '+=' i_lhs[2295773] 1)
      val tmp[1440971]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if(2452135 '<' li[1440340] 1)
      {
        (1441004 'move' tmp[1440971](2452145 '<' ri[1440345] 1))
      }
      {
        (1441010 'move' tmp[1440971] 0)
      }
      tmp[1440971]
    }
    const-val call_tmp[1441023]:(1*int(64),1*int(64),int(64))[1441543] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1915085]:(1*int(64),1*int(64),int(64))[1441543] "temp"
    const-ref this_x0[2542292]:1*int(64)[1256714]
    const-ref this_x1[2542294]:1*int(64)[1256714]
    val this_x2[2542296]:int(64)[13]
    (2452208 'move' this_x0[2542292](2554654 'set reference' LeftActives[1440315]))
    (2452212 'move' this_x1[2542294](2554656 'set reference' RightActives[1440328]))
    (2452216 'move' this_x2[2542296] inferredRank[1440309])
    (2542303 '.=' ret_tmp[1915085] x0[1441537] this_x0[2542292])
    (2542307 '.=' ret_tmp[1915085] x1[1441539] this_x1[2542294])
    (2542311 '.=' ret_tmp[1915085] x2[1441541] this_x2[2542296])
    (1915088 'move' call_tmp[1441023] ret_tmp[1915085])
    const-ref array_unref_ret_tmp_x0[2542267]:1*int(64)[1256714] "temp"
    const-ref array_unref_ret_tmp_x1[2542269]:1*int(64)[1256714] "temp"
    val array_unref_ret_tmp_x2[2542271]:int(64)[13] "temp"
    (2542277 'move' array_unref_ret_tmp_x0[2542267](2542275 '.v' call_tmp[1441023] x0[1441537]))
    (2542282 'move' array_unref_ret_tmp_x1[2542269](2542280 '.v' call_tmp[1441023] x1[1441539]))
    (2647495 'move' array_unref_ret_tmp_x2[2542271](2542285 '.v' call_tmp[1441023] x2[1441541]))
    const-val ret[2452241]:(1*int(64),1*int(64),int(64))[1441721] "dead after last mention" "RVV" "temp"
    val elt_x0[2452252]:1*int(64)[1256714]
    (2452254 'move' elt_x0[2452252] array_unref_ret_tmp_x0[2542267])
    val elt_x1[2452268]:1*int(64)[1256714]
    (2452270 'move' elt_x1[2452268] array_unref_ret_tmp_x1[2542269])
    (2542379 '.=' ret[2452241] x0[1441715] elt_x0[2452252])
    (2542383 '.=' ret[2452241] x1[1441717] elt_x1[2452268])
    (2542387 '.=' ret[2452241] x2[1441719] array_unref_ret_tmp_x2[2542271])
    (1915081 '=' _retArg[1915079] ret[2452241])
    (1915083 return _void[55])
  }
  function advance[1440352](const  ref arg LeftDims[1882606]:1*range(int(64),bounded,false)[1244885], ref arg li[1882608]:int(64)[13], const  ref arg RightDims[1882610]:1*range(int(64),bounded,false)[1244885], ref arg ri[1882612]:int(64)[13], const in arg _ln[2685348]:int(64)[13], in arg _fn[2685350]:int(32)[95]) : void[4] "resolved" "fn synchronization free" "no return value for void"
  {
    val tmp[1440356]:bool[10] "dead after last mention" "temp"
    wide-ref call_tmp[1440360]:range(int(64),bounded,false)[1027003] "dead after last mention" "maybe param" "reference to a const" "temp"
    wide-ref tmp[2617799]:1*range(int(64),bounded,false)[1244885] "temp"
    (2617802 'move' tmp[2617799] LeftDims[1882606])
    (1440362 'move' call_tmp[1440360](1440365 call this[1382848] tmp[2617799](1883069 'deref' li[1882608]) _ln[2685348] _fn[2685350]))
    const-val call_tmp[1440367]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1441062]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1441066 'move' coerce_tmp[1441062](1441064 'deref' call_tmp[1440360]))
    (1440369 'move' call_tmp[1440367](1440372 call size[1035978] coerce_tmp[1441062] _ln[2685348] _fn[2685350]))
    val tmp[1440394]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2234325 '==' call_tmp[1440367] 1)
    {
      wide-ref call_tmp[1440414]:range(int(64),bounded,false)[1027003] "dead after last mention" "maybe param" "reference to a const" "temp"
      wide-ref tmp[2617805]:1*range(int(64),bounded,false)[1244885] "temp"
      (2617808 'move' tmp[2617805] LeftDims[1882606])
      (1440416 'move' call_tmp[1440414](1440419 call this[1382848] tmp[2617805](1883075 'deref' li[1882608]) _ln[2685348] _fn[2685350]))
      const-val call_tmp[1440421]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1441076]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1441080 'move' coerce_tmp[1441076](1441078 'deref' call_tmp[1440414]))
      (1440423 'move' call_tmp[1440421](1440426 call size[1035978] coerce_tmp[1441076] _ln[2685348] _fn[2685350]))
      wide-ref call_tmp[1440429]:range(int(64),bounded,false)[1027003] "dead after last mention" "maybe param" "reference to a const" "temp"
      wide-ref tmp[2617811]:1*range(int(64),bounded,false)[1244885] "temp"
      (2617814 'move' tmp[2617811] RightDims[1882610])
      (1440431 'move' call_tmp[1440429](1440434 call this[1382848] tmp[2617811](1883111 'deref' ri[1882612]) _ln[2685348] _fn[2685350]))
      const-val call_tmp[1440436]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1441086]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1441090 'move' coerce_tmp[1441086](1441088 'deref' call_tmp[1440429]))
      (1440438 'move' call_tmp[1440436](1440441 call size[1035978] coerce_tmp[1441086] _ln[2685348] _fn[2685350]))
      (1440457 'move' tmp[1440394](2229960 '!=' call_tmp[1440421] call_tmp[1440436]))
    }
    {
      (1440463 'move' tmp[1440394] 0)
    }
    (1440469 'move' tmp[1440356] tmp[1440394])
    WhileDo[1440474]
    {
      (2295923 '+=' li[1882608] 1)
      wide-ref call_tmp[1440485]:range(int(64),bounded,false)[1027003] "dead after last mention" "maybe param" "reference to a const" "temp"
      wide-ref tmp[2617817]:1*range(int(64),bounded,false)[1244885] "temp"
      (2617820 'move' tmp[2617817] LeftDims[1882606])
      (1440487 'move' call_tmp[1440485](1440490 call this[1382848] tmp[2617817](1883081 'deref' li[1882608]) _ln[2685348] _fn[2685350]))
      const-val call_tmp[1440492]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1441098]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1441102 'move' coerce_tmp[1441098](1441100 'deref' call_tmp[1440485]))
      (1440494 'move' call_tmp[1440492](1440497 call size[1035978] coerce_tmp[1441098] _ln[2685348] _fn[2685350]))
      val tmp[1440519]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if(2234340 '==' call_tmp[1440492] 1)
      {
        wide-ref call_tmp[1440539]:range(int(64),bounded,false)[1027003] "dead after last mention" "maybe param" "reference to a const" "temp"
        wide-ref tmp[2617823]:1*range(int(64),bounded,false)[1244885] "temp"
        (2617826 'move' tmp[2617823] LeftDims[1882606])
        (1440541 'move' call_tmp[1440539](1440544 call this[1382848] tmp[2617823](1883087 'deref' li[1882608]) _ln[2685348] _fn[2685350]))
        const-val call_tmp[1440546]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1441112]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1441116 'move' coerce_tmp[1441112](1441114 'deref' call_tmp[1440539]))
        (1440548 'move' call_tmp[1440546](1440551 call size[1035978] coerce_tmp[1441112] _ln[2685348] _fn[2685350]))
        wide-ref call_tmp[1440554]:range(int(64),bounded,false)[1027003] "dead after last mention" "maybe param" "reference to a const" "temp"
        wide-ref tmp[2617829]:1*range(int(64),bounded,false)[1244885] "temp"
        (2617832 'move' tmp[2617829] RightDims[1882610])
        (1440556 'move' call_tmp[1440554](1440559 call this[1382848] tmp[2617829](1883117 'deref' ri[1882612]) _ln[2685348] _fn[2685350]))
        const-val call_tmp[1440561]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1441122]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1441126 'move' coerce_tmp[1441122](1441124 'deref' call_tmp[1440554]))
        (1440563 'move' call_tmp[1440561](1440566 call size[1035978] coerce_tmp[1441122] _ln[2685348] _fn[2685350]))
        (1440582 'move' tmp[1440519](2229970 '!=' call_tmp[1440546] call_tmp[1440561]))
      }
      {
        (1440588 'move' tmp[1440519] 0)
      }
      (1440594 'move' tmp[1440356] tmp[1440519])
      tmp[1440356]
    }
    val tmp[1440602]:bool[10] "dead after last mention" "temp"
    wide-ref call_tmp[1440606]:range(int(64),bounded,false)[1027003] "dead after last mention" "maybe param" "reference to a const" "temp"
    wide-ref tmp[2617835]:1*range(int(64),bounded,false)[1244885] "temp"
    (2617838 'move' tmp[2617835] RightDims[1882610])
    (1440608 'move' call_tmp[1440606](1440611 call this[1382848] tmp[2617835](1883123 'deref' ri[1882612]) _ln[2685348] _fn[2685350]))
    const-val call_tmp[1440613]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1441133]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1441137 'move' coerce_tmp[1441133](1441135 'deref' call_tmp[1440606]))
    (1440615 'move' call_tmp[1440613](1440618 call size[1035978] coerce_tmp[1441133] _ln[2685348] _fn[2685350]))
    val tmp[1440640]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2234355 '==' call_tmp[1440613] 1)
    {
      wide-ref call_tmp[1440660]:range(int(64),bounded,false)[1027003] "dead after last mention" "maybe param" "reference to a const" "temp"
      wide-ref tmp[2617841]:1*range(int(64),bounded,false)[1244885] "temp"
      (2617844 'move' tmp[2617841] RightDims[1882610])
      (1440662 'move' call_tmp[1440660](1440665 call this[1382848] tmp[2617841](1883129 'deref' ri[1882612]) _ln[2685348] _fn[2685350]))
      const-val call_tmp[1440667]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1441147]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1441151 'move' coerce_tmp[1441147](1441149 'deref' call_tmp[1440660]))
      (1440669 'move' call_tmp[1440667](1440672 call size[1035978] coerce_tmp[1441147] _ln[2685348] _fn[2685350]))
      wide-ref call_tmp[1440675]:range(int(64),bounded,false)[1027003] "dead after last mention" "maybe param" "reference to a const" "temp"
      wide-ref tmp[2617847]:1*range(int(64),bounded,false)[1244885] "temp"
      (2617850 'move' tmp[2617847] LeftDims[1882606])
      (1440677 'move' call_tmp[1440675](1440680 call this[1382848] tmp[2617847](1883093 'deref' li[1882608]) _ln[2685348] _fn[2685350]))
      const-val call_tmp[1440682]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1441157]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1441161 'move' coerce_tmp[1441157](1441159 'deref' call_tmp[1440675]))
      (1440684 'move' call_tmp[1440682](1440687 call size[1035978] coerce_tmp[1441157] _ln[2685348] _fn[2685350]))
      (1440703 'move' tmp[1440640](2229980 '!=' call_tmp[1440667] call_tmp[1440682]))
    }
    {
      (1440709 'move' tmp[1440640] 0)
    }
    (1440715 'move' tmp[1440602] tmp[1440640])
    WhileDo[1440720]
    {
      (2295934 '+=' ri[1882612] 1)
      wide-ref call_tmp[1440731]:range(int(64),bounded,false)[1027003] "dead after last mention" "maybe param" "reference to a const" "temp"
      wide-ref tmp[2617853]:1*range(int(64),bounded,false)[1244885] "temp"
      (2617856 'move' tmp[2617853] RightDims[1882610])
      (1440733 'move' call_tmp[1440731](1440736 call this[1382848] tmp[2617853](1883135 'deref' ri[1882612]) _ln[2685348] _fn[2685350]))
      const-val call_tmp[1440738]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1441169]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1441173 'move' coerce_tmp[1441169](1441171 'deref' call_tmp[1440731]))
      (1440740 'move' call_tmp[1440738](1440743 call size[1035978] coerce_tmp[1441169] _ln[2685348] _fn[2685350]))
      val tmp[1440765]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if(2234370 '==' call_tmp[1440738] 1)
      {
        wide-ref call_tmp[1440785]:range(int(64),bounded,false)[1027003] "dead after last mention" "maybe param" "reference to a const" "temp"
        wide-ref tmp[2617859]:1*range(int(64),bounded,false)[1244885] "temp"
        (2617862 'move' tmp[2617859] RightDims[1882610])
        (1440787 'move' call_tmp[1440785](1440790 call this[1382848] tmp[2617859](1883141 'deref' ri[1882612]) _ln[2685348] _fn[2685350]))
        const-val call_tmp[1440792]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1441183]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1441187 'move' coerce_tmp[1441183](1441185 'deref' call_tmp[1440785]))
        (1440794 'move' call_tmp[1440792](1440797 call size[1035978] coerce_tmp[1441183] _ln[2685348] _fn[2685350]))
        wide-ref call_tmp[1440800]:range(int(64),bounded,false)[1027003] "dead after last mention" "maybe param" "reference to a const" "temp"
        wide-ref tmp[2617865]:1*range(int(64),bounded,false)[1244885] "temp"
        (2617868 'move' tmp[2617865] LeftDims[1882606])
        (1440802 'move' call_tmp[1440800](1440805 call this[1382848] tmp[2617865](1883099 'deref' li[1882608]) _ln[2685348] _fn[2685350]))
        const-val call_tmp[1440807]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1441193]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1441197 'move' coerce_tmp[1441193](1441195 'deref' call_tmp[1440800]))
        (1440809 'move' call_tmp[1440807](1440812 call size[1035978] coerce_tmp[1441193] _ln[2685348] _fn[2685350]))
        (1440828 'move' tmp[1440765](2229990 '!=' call_tmp[1440792] call_tmp[1440807]))
      }
      {
        (1440834 'move' tmp[1440765] 0)
      }
      (1440840 'move' tmp[1440602] tmp[1440765])
      tmp[1440602]
    }
    wide-ref call_tmp[1440847]:range(int(64),bounded,false)[1027003] "dead after last mention" "maybe param" "reference to a const" "temp"
    wide-ref tmp[2617871]:1*range(int(64),bounded,false)[1244885] "temp"
    (2617874 'move' tmp[2617871] LeftDims[1882606])
    (1440849 'move' call_tmp[1440847](1440852 call this[1382848] tmp[2617871](1883105 'deref' li[1882608]) _ln[2685348] _fn[2685350]))
    const-val call_tmp[1440854]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1441204]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1441208 'move' coerce_tmp[1441204](1441206 'deref' call_tmp[1440847]))
    (1440856 'move' call_tmp[1440854](1440859 call size[1035978] coerce_tmp[1441204] _ln[2685348] _fn[2685350]))
    wide-ref call_tmp[1440862]:range(int(64),bounded,false)[1027003] "dead after last mention" "maybe param" "reference to a const" "temp"
    wide-ref tmp[2617877]:1*range(int(64),bounded,false)[1244885] "temp"
    (2617880 'move' tmp[2617877] RightDims[1882610])
    (1440864 'move' call_tmp[1440862](1440867 call this[1382848] tmp[2617877](1883147 'deref' ri[1882612]) _ln[2685348] _fn[2685350]))
    const-val call_tmp[1440869]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1441214]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1441218 'move' coerce_tmp[1441214](1441216 'deref' call_tmp[1440862]))
    (1440871 'move' call_tmp[1440869](1440874 call size[1035978] coerce_tmp[1441214] _ln[2685348] _fn[2685350]))
    (1440886 call assert[210432](2234380 '==' call_tmp[1440854] call_tmp[1440869]) _ln[2685348] _fn[2685350])
    (1440888 return _void[55])
  }
}