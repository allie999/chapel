AST dump for SysError after pass expandExternArrayCalls.
Module use list: 

{
  (353054 'use' ChapelStandard)
  (264252 'use' SysBasic)
  (264256 'use' SysCTypes)
  type SystemError[264864] unknown err[264262] syserr unknown details[264267] string[26] function SystemError[264864].init[264277](arg _mt[264868]:_MT[238], arg this[264866]:SystemError[264864], arg err[264274] :
  syserr, arg details[264297] :
  string[26] =
  "") : _unknown[51] "method" "primary method"
  {
    (264306 call =(264302 call . this c"err") err)
    (264317 call =(264313 call . this c"details") details)
  } function SystemError[264864].message[264324](arg _mt[264872]:_MT[238], arg this[264870]:SystemError[264864]) : _unknown[51] "method" "primary method" "method overrides"
  {
    { scopeless
      unknown strerror_err[264328] ENOERR err_t
      (264331 'end of statement')
    }
    { scopeless
      unknown errstr[264338](264337 call sys_strerror_syserr_str err strerror_err)
      (264341 'end of statement')
    }
    { scopeless
      unknown err_msg[264343] string[26]
      (264346 'end of statement')
    }
    Try!
    {
      {
        (264352 call = err_msg(264351 call createStringWithOwnedBuffer errstr))
      }
    }
    if(264378 call _cond_test(264365 call !(264364 call(264360 call . details c"isEmpty"))))
    {
      { scopeless
        (264375 call += err_msg(264373 call +(264370 call + " (" details) ")"))
      }
    }
    (264384 return err_msg)
  } function SystemError[264864].fromSyserr[264394](arg _mt[264876]:_MT[238], arg this[264874]:SystemError[264864], arg err[264391] :
  syserr, arg details[264414] :
  string[26] =
  "") : _unknown[51] "always propagate line file info" "insert line file info" "method" "primary method"
  {
    if(264802 call _cond_test(264438 call ||(264432 call ||(264426 call ||(264420 call == err EAGAIN)(264424 call == err EALREADY))(264430 call == err EWOULDBLOCK))(264436 call == err EINPROGRESS)))
    {
      (264448 return(264442 'new'(_chpl_manager = _owned[30](?))(264447 call BlockingIOError details err)))
    }
    {
      { scopeless
        if(264797 call _cond_test(264453 call == err ECHILD))
        {
          (264463 return(264457 'new'(_chpl_manager = _owned[30](?))(264462 call ChildProcessError details err)))
        }
        {
          { scopeless
            if(264792 call _cond_test(264474 call ||(264468 call == err EPIPE)(264472 call == err ESHUTDOWN)))
            {
              (264484 return(264478 'new'(_chpl_manager = _owned[30](?))(264483 call BrokenPipeError details err)))
            }
            {
              { scopeless
                if(264787 call _cond_test(264489 call == err ECONNABORTED))
                {
                  (264499 return(264493 'new'(_chpl_manager = _owned[30](?))(264498 call ConnectionAbortedError details err)))
                }
                {
                  { scopeless
                    if(264782 call _cond_test(264504 call == err ECONNREFUSED))
                    {
                      (264514 return(264508 'new'(_chpl_manager = _owned[30](?))(264513 call ConnectionRefusedError details err)))
                    }
                    {
                      { scopeless
                        if(264777 call _cond_test(264519 call == err ECONNRESET))
                        {
                          (264529 return(264523 'new'(_chpl_manager = _owned[30](?))(264528 call ConnectionResetError details err)))
                        }
                        {
                          { scopeless
                            if(264772 call _cond_test(264534 call == err EEXIST))
                            {
                              (264544 return(264538 'new'(_chpl_manager = _owned[30](?))(264543 call FileExistsError details err)))
                            }
                            {
                              { scopeless
                                if(264767 call _cond_test(264549 call == err ENOENT))
                                {
                                  (264559 return(264553 'new'(_chpl_manager = _owned[30](?))(264558 call FileNotFoundError details err)))
                                }
                                {
                                  { scopeless
                                    if(264762 call _cond_test(264564 call == err EINTR))
                                    {
                                      (264574 return(264568 'new'(_chpl_manager = _owned[30](?))(264573 call InterruptedError details err)))
                                    }
                                    {
                                      { scopeless
                                        if(264757 call _cond_test(264579 call == err EISDIR))
                                        {
                                          (264589 return(264583 'new'(_chpl_manager = _owned[30](?))(264588 call IsADirectoryError details err)))
                                        }
                                        {
                                          { scopeless
                                            if(264752 call _cond_test(264594 call == err ENOTDIR))
                                            {
                                              (264604 return(264598 'new'(_chpl_manager = _owned[30](?))(264603 call NotADirectoryError details err)))
                                            }
                                            {
                                              { scopeless
                                                if(264747 call _cond_test(264615 call ||(264609 call == err EACCES)(264613 call == err EPERM)))
                                                {
                                                  (264625 return(264619 'new'(_chpl_manager = _owned[30](?))(264624 call PermissionError details err)))
                                                }
                                                {
                                                  { scopeless
                                                    if(264742 call _cond_test(264630 call == err ESRCH))
                                                    {
                                                      (264640 return(264634 'new'(_chpl_manager = _owned[30](?))(264639 call ProcessLookupError details err)))
                                                    }
                                                    {
                                                      { scopeless
                                                        if(264737 call _cond_test(264645 call == err ETIMEDOUT))
                                                        {
                                                          (264655 return(264649 'new'(_chpl_manager = _owned[30](?))(264654 call TimeoutError details err)))
                                                        }
                                                        {
                                                          { scopeless
                                                            if(264732 call _cond_test(264660 call == err EEOF))
                                                            {
                                                              (264670 return(264664 'new'(_chpl_manager = _owned[30](?))(264669 call EOFError details err)))
                                                            }
                                                            {
                                                              { scopeless
                                                                if(264727 call _cond_test(264675 call == err ESHORT))
                                                                {
                                                                  (264685 return(264679 'new'(_chpl_manager = _owned[30](?))(264684 call UnexpectedEOFError details err)))
                                                                }
                                                                {
                                                                  { scopeless
                                                                    if(264722 call _cond_test(264690 call == err EFORMAT))
                                                                    {
                                                                      (264700 return(264694 'new'(_chpl_manager = _owned[30](?))(264699 call BadFormatError details err)))
                                                                    }
                                                                    {
                                                                      { scopeless
                                                                        if(264718 call _cond_test(264705 call == err EIO))
                                                                        {
                                                                          (264715 return(264709 'new'(_chpl_manager = _owned[30](?))(264714 call IOError err details)))
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    (264816 return(264810 'new'(_chpl_manager = _owned[30](?))(264815 call SystemError err details)))
  } function SystemError[264864].fromSyserr[264826](arg _mt[264880]:_MT[238], arg this[264878]:SystemError[264864], arg err[264823] :
  int[13], arg details[264846] :
  string[26] =
  "") : _unknown[51] "always propagate line file info" "insert line file info" "method" "primary method"
  {
    (264858 return(264857 call fromSyserr(264853 call _cast syserr err) details))
  } Error
  type BlockingIOError[264934] function BlockingIOError[264934].init[264910](arg _mt[264938]:_MT[238], arg this[264936]:BlockingIOError[264934], arg details[264906] :
  string[26] =
  "", arg err[264917] :
  syserr =
  (264915 call _cast syserr EWOULDBLOCK)) : _unknown[51] "method" "primary method"
  {
    (264928 call(264922 call . super c"init") err details)
  } SystemError
  type ChildProcessError[264992] function ChildProcessError[264992].init[264968](arg _mt[264996]:_MT[238], arg this[264994]:ChildProcessError[264992], arg details[264964] :
  string[26] =
  "", arg err[264975] :
  syserr =
  (264973 call _cast syserr ECHILD)) : _unknown[51] "method" "primary method"
  {
    (264986 call(264980 call . super c"init") err details)
  } SystemError
  type ConnectionError[265045] function ConnectionError[265045].init[265008](arg _mt[265049]:_MT[238], arg this[265047]:ConnectionError[265045], arg err[265005] :
  syserr, arg details[265028] :
  string[26] =
  "") : _unknown[51] "method" "primary method"
  {
    (265039 call(265033 call . super c"init") err details)
  } SystemError
  type BrokenPipeError[265103] function BrokenPipeError[265103].init[265079](arg _mt[265107]:_MT[238], arg this[265105]:BrokenPipeError[265103], arg details[265075] :
  string[26] =
  "", arg err[265086] :
  syserr =
  (265084 call _cast syserr EPIPE)) : _unknown[51] "method" "primary method"
  {
    (265097 call(265091 call . super c"init") err details)
  } ConnectionError
  type ConnectionAbortedError[265161] function ConnectionAbortedError[265161].init[265137](arg _mt[265165]:_MT[238], arg this[265163]:ConnectionAbortedError[265161], arg details[265133] :
  string[26] =
  "", arg err[265144] :
  syserr =
  (265142 call _cast syserr ECONNABORTED)) : _unknown[51] "method" "primary method"
  {
    (265155 call(265149 call . super c"init") err details)
  } ConnectionError
  type ConnectionRefusedError[265219] function ConnectionRefusedError[265219].init[265195](arg _mt[265223]:_MT[238], arg this[265221]:ConnectionRefusedError[265219], arg details[265191] :
  string[26] =
  "", arg err[265202] :
  syserr =
  (265200 call _cast syserr ECONNREFUSED)) : _unknown[51] "method" "primary method"
  {
    (265213 call(265207 call . super c"init") err details)
  } ConnectionError
  type ConnectionResetError[265277] function ConnectionResetError[265277].init[265253](arg _mt[265281]:_MT[238], arg this[265279]:ConnectionResetError[265277], arg details[265249] :
  string[26] =
  "", arg err[265260] :
  syserr =
  (265258 call _cast syserr ECONNRESET)) : _unknown[51] "method" "primary method"
  {
    (265271 call(265265 call . super c"init") err details)
  } ConnectionError
  type FileExistsError[265335] function FileExistsError[265335].init[265311](arg _mt[265339]:_MT[238], arg this[265337]:FileExistsError[265335], arg details[265307] :
  string[26] =
  "", arg err[265318] :
  syserr =
  (265316 call _cast syserr EEXIST)) : _unknown[51] "method" "primary method"
  {
    (265329 call(265323 call . super c"init") err details)
  } SystemError
  type FileNotFoundError[265393] function FileNotFoundError[265393].init[265369](arg _mt[265397]:_MT[238], arg this[265395]:FileNotFoundError[265393], arg details[265365] :
  string[26] =
  "", arg err[265376] :
  syserr =
  (265374 call _cast syserr ENOENT)) : _unknown[51] "method" "primary method"
  {
    (265387 call(265381 call . super c"init") err details)
  } SystemError
  type InterruptedError[265451] function InterruptedError[265451].init[265427](arg _mt[265455]:_MT[238], arg this[265453]:InterruptedError[265451], arg details[265423] :
  string[26] =
  "", arg err[265434] :
  syserr =
  (265432 call _cast syserr EINTR)) : _unknown[51] "method" "primary method"
  {
    (265445 call(265439 call . super c"init") err details)
  } SystemError
  type IsADirectoryError[265509] function IsADirectoryError[265509].init[265485](arg _mt[265513]:_MT[238], arg this[265511]:IsADirectoryError[265509], arg details[265481] :
  string[26] =
  "", arg err[265492] :
  syserr =
  (265490 call _cast syserr EISDIR)) : _unknown[51] "method" "primary method"
  {
    (265503 call(265497 call . super c"init") err details)
  } SystemError
  type NotADirectoryError[265567] function NotADirectoryError[265567].init[265543](arg _mt[265571]:_MT[238], arg this[265569]:NotADirectoryError[265567], arg details[265539] :
  string[26] =
  "", arg err[265550] :
  syserr =
  (265548 call _cast syserr ENOTDIR)) : _unknown[51] "method" "primary method"
  {
    (265561 call(265555 call . super c"init") err details)
  } SystemError
  type PermissionError[265625] function PermissionError[265625].init[265601](arg _mt[265629]:_MT[238], arg this[265627]:PermissionError[265625], arg details[265597] :
  string[26] =
  "", arg err[265608] :
  syserr =
  (265606 call _cast syserr EPERM)) : _unknown[51] "method" "primary method"
  {
    (265619 call(265613 call . super c"init") err details)
  } SystemError
  type ProcessLookupError[265683] function ProcessLookupError[265683].init[265659](arg _mt[265687]:_MT[238], arg this[265685]:ProcessLookupError[265683], arg details[265655] :
  string[26] =
  "", arg err[265666] :
  syserr =
  (265664 call _cast syserr ESRCH)) : _unknown[51] "method" "primary method"
  {
    (265677 call(265671 call . super c"init") err details)
  } SystemError
  type TimeoutError[265741] function TimeoutError[265741].init[265717](arg _mt[265745]:_MT[238], arg this[265743]:TimeoutError[265741], arg details[265713] :
  string[26] =
  "", arg err[265724] :
  syserr =
  (265722 call _cast syserr ETIMEDOUT)) : _unknown[51] "method" "primary method"
  {
    (265735 call(265729 call . super c"init") err details)
  } SystemError
  type IOError[265794] function IOError[265794].init[265757](arg _mt[265798]:_MT[238], arg this[265796]:IOError[265794], arg err[265754] :
  syserr, arg details[265777] :
  string[26] =
  "") : _unknown[51] "method" "primary method"
  {
    (265788 call(265782 call . super c"init") err details)
  } SystemError
  type EOFError[265852] function EOFError[265852].init[265828](arg _mt[265856]:_MT[238], arg this[265854]:EOFError[265852], arg details[265824] :
  string[26] =
  "", arg err[265835] :
  syserr =
  (265833 call _cast syserr EEOF)) : _unknown[51] "method" "primary method"
  {
    (265846 call(265840 call . super c"init") err details)
  } IOError
  type UnexpectedEOFError[265910] function UnexpectedEOFError[265910].init[265886](arg _mt[265914]:_MT[238], arg this[265912]:UnexpectedEOFError[265910], arg details[265882] :
  string[26] =
  "", arg err[265893] :
  syserr =
  (265891 call _cast syserr ESHORT)) : _unknown[51] "method" "primary method"
  {
    (265904 call(265898 call . super c"init") err details)
  } IOError
  type BadFormatError[265968] function BadFormatError[265968].init[265944](arg _mt[265972]:_MT[238], arg this[265970]:BadFormatError[265968], arg details[265940] :
  string[26] =
  "", arg err[265951] :
  syserr =
  (265949 call _cast syserr EFORMAT)) : _unknown[51] "method" "primary method"
  {
    (265962 call(265956 call . super c"init") err details)
  } IOError
  function sys_strerror_syserr_str[265981](arg error[265978] :
  syserr, out arg err_in_strerror[265984] :
  err_t) : _unknown[51] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    c_string
  }
  function quote_string[265997](arg s[265994] :
  string[26], arg len[266000] :
  ssize_t) : _unknown[51] "private"
  {
    { scopeless
      const QIO_STRING_FORMAT_CHPL[266007] "const" "extern"(266006 call uint[115] 8)
      (266010 'end of statement')
    }
    function qio_quote_string[266021](arg s[266018] :
    (266017 call uint[115] 8), arg e[266027] :
    (266026 call uint[115] 8), arg f[266034] :
    (266033 call uint[115] 8), arg ptr[266038] :
    c_string, arg len[266042] :
    ssize_t, ref arg ret[266046] :
    c_string, arg ti[266050] :
    c_void_ptr) : _unknown[51] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      syserr
    }
    function qio_strdup[266063](arg s[266060] :
    c_string) : _unknown[51] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      c_string
    }
    { scopeless
      unknown ret[266070] c_string
      (266073 'end of statement')
    }
    { scopeless
      unknown err[266107](266106 call qio_quote_string(266081 call _cast(266080 call uint[115] 8) 34)(266089 call _cast(266088 call uint[115] 8) 34) QIO_STRING_FORMAT_CHPL(266102 call(266098 call .(266097 call(266093 call . s c"localize")) c"c_str")) len ret c_nil) syserr
      (266110 'end of statement')
    }
    Try!
    {
      {
        if(266137 call _cond_test err)
        {
          { scopeless
            (266135 return(266134 call createStringWithOwnedBuffer(266132 call qio_strdup "<error>")))
          }
        }
        (266147 return(266146 call createStringWithOwnedBuffer ret))
      }
    }
  }
  function ioerror[266160](arg error[266157] :
  syserr, arg msg[266163] :
  string[26], arg path[266167] :
  string[26], arg offset[266174] :
  (266173 call int[13] 64)) : _unknown[51] throws "always propagate line file info" "insert line file info"
  {
    if(266256 call _cond_test error)
    {
      { scopeless
        const quotedpath[266189] "const"(266188 call quote_string path(266186 call _cast ssize_t(266182 call . path c"numBytes")))
        (266192 'end of statement')
      }
      { scopeless
        unknown details[266242](266240 call +(266234 call +(266215 call +(266212 call + msg " with path ") quotedpath) " offset ")(266238 call _cast string[26] offset))
        (266245 'end of statement')
      }
      (266254 'throw'(266253 call(266247 call . SystemError c"fromSyserr") error details))
    }
  }
  function ioerror[266269](arg error[266266] :
  syserr, arg msg[266272] :
  string[26], arg path[266276] :
  string[26]) : _unknown[51] throws "always propagate line file info" "insert line file info" "no doc"
  {
    if(266317 call _cond_test error)
    {
      { scopeless
        const quotedpath[266291] "const"(266290 call quote_string path(266288 call _cast ssize_t(266284 call . path c"numBytes")))
        (266294 'end of statement')
      }
      { scopeless
        unknown details[266303](266301 call +(266298 call + msg " with path ") quotedpath)
        (266306 'end of statement')
      }
      (266315 'throw'(266314 call(266308 call . SystemError c"fromSyserr") error details))
    }
  }
  function ioerror[266330](arg error[266327] :
  syserr, arg msg[266333] :
  string[26]) : _unknown[51] throws "always propagate line file info" "insert line file info" "no doc"
  {
    if(266347 call _cond_test error)
    {
      { scopeless
        (266345 'throw'(266344 call(266338 call . SystemError c"fromSyserr") error msg))
      }
    }
  }
  function ioerror[266361](arg errstr[266358] :
  string[26], arg msg[266364] :
  string[26], arg path[266368] :
  string[26], arg offset[266375] :
  (266374 call int[13] 64)) : _unknown[51] throws "always propagate line file info" "insert line file info"
  {
    { scopeless
      const quotedpath[266389] "const"(266388 call quote_string path(266386 call _cast ssize_t(266382 call . path c"numBytes")))
      (266392 'end of statement')
    }
    { scopeless
      const details[266416] "const"(266414 call +(266408 call +(266405 call +(266402 call +(266399 call +(266396 call + errstr " ") msg) " with path ") quotedpath) " offset ")(266412 call _cast string[26] offset))
      (266419 'end of statement')
    }
    (266431 'throw'(266430 call(266421 call . SystemError c"fromSyserr")(266426 call _cast syserr EIO) details))
  }
  function errorToString[266441](arg error[266438] :
  syserr) : _unknown[51]
  {
    { scopeless
      unknown strerror_err[266446] ENOERR err_t
      (266449 'end of statement')
    }
    { scopeless
      const errstr[266456] "const"(266455 call sys_strerror_syserr_str error strerror_err)
      (266459 'end of statement')
    }
    Try!
    {
      {
        (266464 return(266463 call createStringWithOwnedBuffer errstr))
      }
    }
  }
  { scopeless type
    string[26]
  }
}