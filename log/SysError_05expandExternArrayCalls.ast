AST dump for SysError after pass expandExternArrayCalls.
Module use list: 

{
  (353071 'use' ChapelStandard)
  (264150 'use' SysBasic)
  (264154 'use' SysCTypes)
  type SystemError[264762] unknown err[264160] syserr unknown details[264165] string[26] function SystemError[264762].init[264175](arg _mt[264766]:_MT[238], arg this[264764]:SystemError[264762], arg err[264172] :
  syserr, arg details[264195] :
  string[26] =
  "") : _unknown[51] "method" "primary method"
  {
    (264204 call =(264200 call . this c"err") err)
    (264215 call =(264211 call . this c"details") details)
  } function SystemError[264762].message[264222](arg _mt[264770]:_MT[238], arg this[264768]:SystemError[264762]) : _unknown[51] "method" "primary method" "method overrides"
  {
    { scopeless
      unknown strerror_err[264226] ENOERR err_t
      (264229 'end of statement')
    }
    { scopeless
      unknown errstr[264236](264235 call sys_strerror_syserr_str err strerror_err)
      (264239 'end of statement')
    }
    { scopeless
      unknown err_msg[264241] string[26]
      (264244 'end of statement')
    }
    Try!
    {
      {
        (264250 call = err_msg(264249 call createStringWithOwnedBuffer errstr))
      }
    }
    if(264276 call _cond_test(264263 call !(264262 call(264258 call . details c"isEmpty"))))
    {
      { scopeless
        (264273 call += err_msg(264271 call +(264268 call + " (" details) ")"))
      }
    }
    (264282 return err_msg)
  } function SystemError[264762].fromSyserr[264292](arg _mt[264774]:_MT[238], arg this[264772]:SystemError[264762], arg err[264289] :
  syserr, arg details[264312] :
  string[26] =
  "") : _unknown[51] "always propagate line file info" "insert line file info" "method" "primary method"
  {
    if(264700 call _cond_test(264336 call ||(264330 call ||(264324 call ||(264318 call == err EAGAIN)(264322 call == err EALREADY))(264328 call == err EWOULDBLOCK))(264334 call == err EINPROGRESS)))
    {
      (264346 return(264340 'new'(_chpl_manager = _owned[30](?))(264345 call BlockingIOError details err)))
    }
    {
      { scopeless
        if(264695 call _cond_test(264351 call == err ECHILD))
        {
          (264361 return(264355 'new'(_chpl_manager = _owned[30](?))(264360 call ChildProcessError details err)))
        }
        {
          { scopeless
            if(264690 call _cond_test(264372 call ||(264366 call == err EPIPE)(264370 call == err ESHUTDOWN)))
            {
              (264382 return(264376 'new'(_chpl_manager = _owned[30](?))(264381 call BrokenPipeError details err)))
            }
            {
              { scopeless
                if(264685 call _cond_test(264387 call == err ECONNABORTED))
                {
                  (264397 return(264391 'new'(_chpl_manager = _owned[30](?))(264396 call ConnectionAbortedError details err)))
                }
                {
                  { scopeless
                    if(264680 call _cond_test(264402 call == err ECONNREFUSED))
                    {
                      (264412 return(264406 'new'(_chpl_manager = _owned[30](?))(264411 call ConnectionRefusedError details err)))
                    }
                    {
                      { scopeless
                        if(264675 call _cond_test(264417 call == err ECONNRESET))
                        {
                          (264427 return(264421 'new'(_chpl_manager = _owned[30](?))(264426 call ConnectionResetError details err)))
                        }
                        {
                          { scopeless
                            if(264670 call _cond_test(264432 call == err EEXIST))
                            {
                              (264442 return(264436 'new'(_chpl_manager = _owned[30](?))(264441 call FileExistsError details err)))
                            }
                            {
                              { scopeless
                                if(264665 call _cond_test(264447 call == err ENOENT))
                                {
                                  (264457 return(264451 'new'(_chpl_manager = _owned[30](?))(264456 call FileNotFoundError details err)))
                                }
                                {
                                  { scopeless
                                    if(264660 call _cond_test(264462 call == err EINTR))
                                    {
                                      (264472 return(264466 'new'(_chpl_manager = _owned[30](?))(264471 call InterruptedError details err)))
                                    }
                                    {
                                      { scopeless
                                        if(264655 call _cond_test(264477 call == err EISDIR))
                                        {
                                          (264487 return(264481 'new'(_chpl_manager = _owned[30](?))(264486 call IsADirectoryError details err)))
                                        }
                                        {
                                          { scopeless
                                            if(264650 call _cond_test(264492 call == err ENOTDIR))
                                            {
                                              (264502 return(264496 'new'(_chpl_manager = _owned[30](?))(264501 call NotADirectoryError details err)))
                                            }
                                            {
                                              { scopeless
                                                if(264645 call _cond_test(264513 call ||(264507 call == err EACCES)(264511 call == err EPERM)))
                                                {
                                                  (264523 return(264517 'new'(_chpl_manager = _owned[30](?))(264522 call PermissionError details err)))
                                                }
                                                {
                                                  { scopeless
                                                    if(264640 call _cond_test(264528 call == err ESRCH))
                                                    {
                                                      (264538 return(264532 'new'(_chpl_manager = _owned[30](?))(264537 call ProcessLookupError details err)))
                                                    }
                                                    {
                                                      { scopeless
                                                        if(264635 call _cond_test(264543 call == err ETIMEDOUT))
                                                        {
                                                          (264553 return(264547 'new'(_chpl_manager = _owned[30](?))(264552 call TimeoutError details err)))
                                                        }
                                                        {
                                                          { scopeless
                                                            if(264630 call _cond_test(264558 call == err EEOF))
                                                            {
                                                              (264568 return(264562 'new'(_chpl_manager = _owned[30](?))(264567 call EOFError details err)))
                                                            }
                                                            {
                                                              { scopeless
                                                                if(264625 call _cond_test(264573 call == err ESHORT))
                                                                {
                                                                  (264583 return(264577 'new'(_chpl_manager = _owned[30](?))(264582 call UnexpectedEOFError details err)))
                                                                }
                                                                {
                                                                  { scopeless
                                                                    if(264620 call _cond_test(264588 call == err EFORMAT))
                                                                    {
                                                                      (264598 return(264592 'new'(_chpl_manager = _owned[30](?))(264597 call BadFormatError details err)))
                                                                    }
                                                                    {
                                                                      { scopeless
                                                                        if(264616 call _cond_test(264603 call == err EIO))
                                                                        {
                                                                          (264613 return(264607 'new'(_chpl_manager = _owned[30](?))(264612 call IOError err details)))
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    (264714 return(264708 'new'(_chpl_manager = _owned[30](?))(264713 call SystemError err details)))
  } function SystemError[264762].fromSyserr[264724](arg _mt[264778]:_MT[238], arg this[264776]:SystemError[264762], arg err[264721] :
  int[13], arg details[264744] :
  string[26] =
  "") : _unknown[51] "always propagate line file info" "insert line file info" "method" "primary method"
  {
    (264756 return(264755 call fromSyserr(264751 call _cast syserr err) details))
  } Error
  type BlockingIOError[264832] function BlockingIOError[264832].init[264808](arg _mt[264836]:_MT[238], arg this[264834]:BlockingIOError[264832], arg details[264804] :
  string[26] =
  "", arg err[264815] :
  syserr =
  (264813 call _cast syserr EWOULDBLOCK)) : _unknown[51] "method" "primary method"
  {
    (264826 call(264820 call . super c"init") err details)
  } SystemError
  type ChildProcessError[264890] function ChildProcessError[264890].init[264866](arg _mt[264894]:_MT[238], arg this[264892]:ChildProcessError[264890], arg details[264862] :
  string[26] =
  "", arg err[264873] :
  syserr =
  (264871 call _cast syserr ECHILD)) : _unknown[51] "method" "primary method"
  {
    (264884 call(264878 call . super c"init") err details)
  } SystemError
  type ConnectionError[264943] function ConnectionError[264943].init[264906](arg _mt[264947]:_MT[238], arg this[264945]:ConnectionError[264943], arg err[264903] :
  syserr, arg details[264926] :
  string[26] =
  "") : _unknown[51] "method" "primary method"
  {
    (264937 call(264931 call . super c"init") err details)
  } SystemError
  type BrokenPipeError[265001] function BrokenPipeError[265001].init[264977](arg _mt[265005]:_MT[238], arg this[265003]:BrokenPipeError[265001], arg details[264973] :
  string[26] =
  "", arg err[264984] :
  syserr =
  (264982 call _cast syserr EPIPE)) : _unknown[51] "method" "primary method"
  {
    (264995 call(264989 call . super c"init") err details)
  } ConnectionError
  type ConnectionAbortedError[265059] function ConnectionAbortedError[265059].init[265035](arg _mt[265063]:_MT[238], arg this[265061]:ConnectionAbortedError[265059], arg details[265031] :
  string[26] =
  "", arg err[265042] :
  syserr =
  (265040 call _cast syserr ECONNABORTED)) : _unknown[51] "method" "primary method"
  {
    (265053 call(265047 call . super c"init") err details)
  } ConnectionError
  type ConnectionRefusedError[265117] function ConnectionRefusedError[265117].init[265093](arg _mt[265121]:_MT[238], arg this[265119]:ConnectionRefusedError[265117], arg details[265089] :
  string[26] =
  "", arg err[265100] :
  syserr =
  (265098 call _cast syserr ECONNREFUSED)) : _unknown[51] "method" "primary method"
  {
    (265111 call(265105 call . super c"init") err details)
  } ConnectionError
  type ConnectionResetError[265175] function ConnectionResetError[265175].init[265151](arg _mt[265179]:_MT[238], arg this[265177]:ConnectionResetError[265175], arg details[265147] :
  string[26] =
  "", arg err[265158] :
  syserr =
  (265156 call _cast syserr ECONNRESET)) : _unknown[51] "method" "primary method"
  {
    (265169 call(265163 call . super c"init") err details)
  } ConnectionError
  type FileExistsError[265233] function FileExistsError[265233].init[265209](arg _mt[265237]:_MT[238], arg this[265235]:FileExistsError[265233], arg details[265205] :
  string[26] =
  "", arg err[265216] :
  syserr =
  (265214 call _cast syserr EEXIST)) : _unknown[51] "method" "primary method"
  {
    (265227 call(265221 call . super c"init") err details)
  } SystemError
  type FileNotFoundError[265291] function FileNotFoundError[265291].init[265267](arg _mt[265295]:_MT[238], arg this[265293]:FileNotFoundError[265291], arg details[265263] :
  string[26] =
  "", arg err[265274] :
  syserr =
  (265272 call _cast syserr ENOENT)) : _unknown[51] "method" "primary method"
  {
    (265285 call(265279 call . super c"init") err details)
  } SystemError
  type InterruptedError[265349] function InterruptedError[265349].init[265325](arg _mt[265353]:_MT[238], arg this[265351]:InterruptedError[265349], arg details[265321] :
  string[26] =
  "", arg err[265332] :
  syserr =
  (265330 call _cast syserr EINTR)) : _unknown[51] "method" "primary method"
  {
    (265343 call(265337 call . super c"init") err details)
  } SystemError
  type IsADirectoryError[265407] function IsADirectoryError[265407].init[265383](arg _mt[265411]:_MT[238], arg this[265409]:IsADirectoryError[265407], arg details[265379] :
  string[26] =
  "", arg err[265390] :
  syserr =
  (265388 call _cast syserr EISDIR)) : _unknown[51] "method" "primary method"
  {
    (265401 call(265395 call . super c"init") err details)
  } SystemError
  type NotADirectoryError[265465] function NotADirectoryError[265465].init[265441](arg _mt[265469]:_MT[238], arg this[265467]:NotADirectoryError[265465], arg details[265437] :
  string[26] =
  "", arg err[265448] :
  syserr =
  (265446 call _cast syserr ENOTDIR)) : _unknown[51] "method" "primary method"
  {
    (265459 call(265453 call . super c"init") err details)
  } SystemError
  type PermissionError[265523] function PermissionError[265523].init[265499](arg _mt[265527]:_MT[238], arg this[265525]:PermissionError[265523], arg details[265495] :
  string[26] =
  "", arg err[265506] :
  syserr =
  (265504 call _cast syserr EPERM)) : _unknown[51] "method" "primary method"
  {
    (265517 call(265511 call . super c"init") err details)
  } SystemError
  type ProcessLookupError[265581] function ProcessLookupError[265581].init[265557](arg _mt[265585]:_MT[238], arg this[265583]:ProcessLookupError[265581], arg details[265553] :
  string[26] =
  "", arg err[265564] :
  syserr =
  (265562 call _cast syserr ESRCH)) : _unknown[51] "method" "primary method"
  {
    (265575 call(265569 call . super c"init") err details)
  } SystemError
  type TimeoutError[265639] function TimeoutError[265639].init[265615](arg _mt[265643]:_MT[238], arg this[265641]:TimeoutError[265639], arg details[265611] :
  string[26] =
  "", arg err[265622] :
  syserr =
  (265620 call _cast syserr ETIMEDOUT)) : _unknown[51] "method" "primary method"
  {
    (265633 call(265627 call . super c"init") err details)
  } SystemError
  type IOError[265692] function IOError[265692].init[265655](arg _mt[265696]:_MT[238], arg this[265694]:IOError[265692], arg err[265652] :
  syserr, arg details[265675] :
  string[26] =
  "") : _unknown[51] "method" "primary method"
  {
    (265686 call(265680 call . super c"init") err details)
  } SystemError
  type EOFError[265750] function EOFError[265750].init[265726](arg _mt[265754]:_MT[238], arg this[265752]:EOFError[265750], arg details[265722] :
  string[26] =
  "", arg err[265733] :
  syserr =
  (265731 call _cast syserr EEOF)) : _unknown[51] "method" "primary method"
  {
    (265744 call(265738 call . super c"init") err details)
  } IOError
  type UnexpectedEOFError[265808] function UnexpectedEOFError[265808].init[265784](arg _mt[265812]:_MT[238], arg this[265810]:UnexpectedEOFError[265808], arg details[265780] :
  string[26] =
  "", arg err[265791] :
  syserr =
  (265789 call _cast syserr ESHORT)) : _unknown[51] "method" "primary method"
  {
    (265802 call(265796 call . super c"init") err details)
  } IOError
  type BadFormatError[265866] function BadFormatError[265866].init[265842](arg _mt[265870]:_MT[238], arg this[265868]:BadFormatError[265866], arg details[265838] :
  string[26] =
  "", arg err[265849] :
  syserr =
  (265847 call _cast syserr EFORMAT)) : _unknown[51] "method" "primary method"
  {
    (265860 call(265854 call . super c"init") err details)
  } IOError
  function sys_strerror_syserr_str[265879](arg error[265876] :
  syserr, out arg err_in_strerror[265882] :
  err_t) : _unknown[51] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    c_string
  }
  function quote_string[265895](arg s[265892] :
  string[26], arg len[265898] :
  ssize_t) : _unknown[51] "private"
  {
    { scopeless
      const QIO_STRING_FORMAT_CHPL[265905] "const" "extern"(265904 call uint[115] 8)
      (265908 'end of statement')
    }
    function qio_quote_string[265919](arg s[265916] :
    (265915 call uint[115] 8), arg e[265925] :
    (265924 call uint[115] 8), arg f[265932] :
    (265931 call uint[115] 8), arg ptr[265936] :
    c_string, arg len[265940] :
    ssize_t, ref arg ret[265944] :
    c_string, arg ti[265948] :
    c_void_ptr) : _unknown[51] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      syserr
    }
    function qio_strdup[265961](arg s[265958] :
    c_string) : _unknown[51] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      c_string
    }
    { scopeless
      unknown ret[265968] c_string
      (265971 'end of statement')
    }
    { scopeless
      unknown err[266005](266004 call qio_quote_string(265979 call _cast(265978 call uint[115] 8) 34)(265987 call _cast(265986 call uint[115] 8) 34) QIO_STRING_FORMAT_CHPL(266000 call(265996 call .(265995 call(265991 call . s c"localize")) c"c_str")) len ret c_nil) syserr
      (266008 'end of statement')
    }
    Try!
    {
      {
        if(266035 call _cond_test err)
        {
          { scopeless
            (266033 return(266032 call createStringWithOwnedBuffer(266030 call qio_strdup "<error>")))
          }
        }
        (266045 return(266044 call createStringWithOwnedBuffer ret))
      }
    }
  }
  function ioerror[266058](arg error[266055] :
  syserr, arg msg[266061] :
  string[26], arg path[266065] :
  string[26], arg offset[266072] :
  (266071 call int[13] 64)) : _unknown[51] throws "always propagate line file info" "insert line file info"
  {
    if(266154 call _cond_test error)
    {
      { scopeless
        const quotedpath[266087] "const"(266086 call quote_string path(266084 call _cast ssize_t(266080 call . path c"numBytes")))
        (266090 'end of statement')
      }
      { scopeless
        unknown details[266140](266138 call +(266132 call +(266113 call +(266110 call + msg " with path ") quotedpath) " offset ")(266136 call _cast string[26] offset))
        (266143 'end of statement')
      }
      (266152 'throw'(266151 call(266145 call . SystemError c"fromSyserr") error details))
    }
  }
  function ioerror[266167](arg error[266164] :
  syserr, arg msg[266170] :
  string[26], arg path[266174] :
  string[26]) : _unknown[51] throws "always propagate line file info" "insert line file info" "no doc"
  {
    if(266215 call _cond_test error)
    {
      { scopeless
        const quotedpath[266189] "const"(266188 call quote_string path(266186 call _cast ssize_t(266182 call . path c"numBytes")))
        (266192 'end of statement')
      }
      { scopeless
        unknown details[266201](266199 call +(266196 call + msg " with path ") quotedpath)
        (266204 'end of statement')
      }
      (266213 'throw'(266212 call(266206 call . SystemError c"fromSyserr") error details))
    }
  }
  function ioerror[266228](arg error[266225] :
  syserr, arg msg[266231] :
  string[26]) : _unknown[51] throws "always propagate line file info" "insert line file info" "no doc"
  {
    if(266245 call _cond_test error)
    {
      { scopeless
        (266243 'throw'(266242 call(266236 call . SystemError c"fromSyserr") error msg))
      }
    }
  }
  function ioerror[266259](arg errstr[266256] :
  string[26], arg msg[266262] :
  string[26], arg path[266266] :
  string[26], arg offset[266273] :
  (266272 call int[13] 64)) : _unknown[51] throws "always propagate line file info" "insert line file info"
  {
    { scopeless
      const quotedpath[266287] "const"(266286 call quote_string path(266284 call _cast ssize_t(266280 call . path c"numBytes")))
      (266290 'end of statement')
    }
    { scopeless
      const details[266314] "const"(266312 call +(266306 call +(266303 call +(266300 call +(266297 call +(266294 call + errstr " ") msg) " with path ") quotedpath) " offset ")(266310 call _cast string[26] offset))
      (266317 'end of statement')
    }
    (266329 'throw'(266328 call(266319 call . SystemError c"fromSyserr")(266324 call _cast syserr EIO) details))
  }
  function errorToString[266339](arg error[266336] :
  syserr) : _unknown[51]
  {
    { scopeless
      unknown strerror_err[266344] ENOERR err_t
      (266347 'end of statement')
    }
    { scopeless
      const errstr[266354] "const"(266353 call sys_strerror_syserr_str error strerror_err)
      (266357 'end of statement')
    }
    Try!
    {
      {
        (266362 return(266361 call createStringWithOwnedBuffer errstr))
      }
    }
  }
  { scopeless type
    string[26]
  }
}