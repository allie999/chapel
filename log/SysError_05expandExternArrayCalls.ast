AST dump for SysError after pass expandExternArrayCalls.
Module use list: 

{
  (352926 'use' ChapelStandard)
  (264145 'use' SysBasic)
  (264149 'use' SysCTypes)
  type SystemError[264757] unknown err[264155] syserr unknown details[264160] string[26] function SystemError[264757].init[264170](arg _mt[264761]:_MT[238], arg this[264759]:SystemError[264757], arg err[264167] :
  syserr, arg details[264190] :
  string[26] =
  "") : _unknown[51] "method" "primary method"
  {
    (264199 call =(264195 call . this c"err") err)
    (264210 call =(264206 call . this c"details") details)
  } function SystemError[264757].message[264217](arg _mt[264765]:_MT[238], arg this[264763]:SystemError[264757]) : _unknown[51] "method" "primary method" "method overrides"
  {
    { scopeless
      unknown strerror_err[264221] ENOERR err_t
      (264224 'end of statement')
    }
    { scopeless
      unknown errstr[264231](264230 call sys_strerror_syserr_str err strerror_err)
      (264234 'end of statement')
    }
    { scopeless
      unknown err_msg[264236] string[26]
      (264239 'end of statement')
    }
    Try!
    {
      {
        (264245 call = err_msg(264244 call createStringWithOwnedBuffer errstr))
      }
    }
    if(264271 call _cond_test(264258 call !(264257 call(264253 call . details c"isEmpty"))))
    {
      { scopeless
        (264268 call += err_msg(264266 call +(264263 call + " (" details) ")"))
      }
    }
    (264277 return err_msg)
  } function SystemError[264757].fromSyserr[264287](arg _mt[264769]:_MT[238], arg this[264767]:SystemError[264757], arg err[264284] :
  syserr, arg details[264307] :
  string[26] =
  "") : _unknown[51] "always propagate line file info" "insert line file info" "method" "primary method"
  {
    if(264695 call _cond_test(264331 call ||(264325 call ||(264319 call ||(264313 call == err EAGAIN)(264317 call == err EALREADY))(264323 call == err EWOULDBLOCK))(264329 call == err EINPROGRESS)))
    {
      (264341 return(264335 'new'(_chpl_manager = _owned[30](?))(264340 call BlockingIOError details err)))
    }
    {
      { scopeless
        if(264690 call _cond_test(264346 call == err ECHILD))
        {
          (264356 return(264350 'new'(_chpl_manager = _owned[30](?))(264355 call ChildProcessError details err)))
        }
        {
          { scopeless
            if(264685 call _cond_test(264367 call ||(264361 call == err EPIPE)(264365 call == err ESHUTDOWN)))
            {
              (264377 return(264371 'new'(_chpl_manager = _owned[30](?))(264376 call BrokenPipeError details err)))
            }
            {
              { scopeless
                if(264680 call _cond_test(264382 call == err ECONNABORTED))
                {
                  (264392 return(264386 'new'(_chpl_manager = _owned[30](?))(264391 call ConnectionAbortedError details err)))
                }
                {
                  { scopeless
                    if(264675 call _cond_test(264397 call == err ECONNREFUSED))
                    {
                      (264407 return(264401 'new'(_chpl_manager = _owned[30](?))(264406 call ConnectionRefusedError details err)))
                    }
                    {
                      { scopeless
                        if(264670 call _cond_test(264412 call == err ECONNRESET))
                        {
                          (264422 return(264416 'new'(_chpl_manager = _owned[30](?))(264421 call ConnectionResetError details err)))
                        }
                        {
                          { scopeless
                            if(264665 call _cond_test(264427 call == err EEXIST))
                            {
                              (264437 return(264431 'new'(_chpl_manager = _owned[30](?))(264436 call FileExistsError details err)))
                            }
                            {
                              { scopeless
                                if(264660 call _cond_test(264442 call == err ENOENT))
                                {
                                  (264452 return(264446 'new'(_chpl_manager = _owned[30](?))(264451 call FileNotFoundError details err)))
                                }
                                {
                                  { scopeless
                                    if(264655 call _cond_test(264457 call == err EINTR))
                                    {
                                      (264467 return(264461 'new'(_chpl_manager = _owned[30](?))(264466 call InterruptedError details err)))
                                    }
                                    {
                                      { scopeless
                                        if(264650 call _cond_test(264472 call == err EISDIR))
                                        {
                                          (264482 return(264476 'new'(_chpl_manager = _owned[30](?))(264481 call IsADirectoryError details err)))
                                        }
                                        {
                                          { scopeless
                                            if(264645 call _cond_test(264487 call == err ENOTDIR))
                                            {
                                              (264497 return(264491 'new'(_chpl_manager = _owned[30](?))(264496 call NotADirectoryError details err)))
                                            }
                                            {
                                              { scopeless
                                                if(264640 call _cond_test(264508 call ||(264502 call == err EACCES)(264506 call == err EPERM)))
                                                {
                                                  (264518 return(264512 'new'(_chpl_manager = _owned[30](?))(264517 call PermissionError details err)))
                                                }
                                                {
                                                  { scopeless
                                                    if(264635 call _cond_test(264523 call == err ESRCH))
                                                    {
                                                      (264533 return(264527 'new'(_chpl_manager = _owned[30](?))(264532 call ProcessLookupError details err)))
                                                    }
                                                    {
                                                      { scopeless
                                                        if(264630 call _cond_test(264538 call == err ETIMEDOUT))
                                                        {
                                                          (264548 return(264542 'new'(_chpl_manager = _owned[30](?))(264547 call TimeoutError details err)))
                                                        }
                                                        {
                                                          { scopeless
                                                            if(264625 call _cond_test(264553 call == err EEOF))
                                                            {
                                                              (264563 return(264557 'new'(_chpl_manager = _owned[30](?))(264562 call EOFError details err)))
                                                            }
                                                            {
                                                              { scopeless
                                                                if(264620 call _cond_test(264568 call == err ESHORT))
                                                                {
                                                                  (264578 return(264572 'new'(_chpl_manager = _owned[30](?))(264577 call UnexpectedEOFError details err)))
                                                                }
                                                                {
                                                                  { scopeless
                                                                    if(264615 call _cond_test(264583 call == err EFORMAT))
                                                                    {
                                                                      (264593 return(264587 'new'(_chpl_manager = _owned[30](?))(264592 call BadFormatError details err)))
                                                                    }
                                                                    {
                                                                      { scopeless
                                                                        if(264611 call _cond_test(264598 call == err EIO))
                                                                        {
                                                                          (264608 return(264602 'new'(_chpl_manager = _owned[30](?))(264607 call IOError err details)))
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    (264709 return(264703 'new'(_chpl_manager = _owned[30](?))(264708 call SystemError err details)))
  } function SystemError[264757].fromSyserr[264719](arg _mt[264773]:_MT[238], arg this[264771]:SystemError[264757], arg err[264716] :
  int[13], arg details[264739] :
  string[26] =
  "") : _unknown[51] "always propagate line file info" "insert line file info" "method" "primary method"
  {
    (264751 return(264750 call fromSyserr(264746 call _cast syserr err) details))
  } Error
  type BlockingIOError[264827] function BlockingIOError[264827].init[264803](arg _mt[264831]:_MT[238], arg this[264829]:BlockingIOError[264827], arg details[264799] :
  string[26] =
  "", arg err[264810] :
  syserr =
  (264808 call _cast syserr EWOULDBLOCK)) : _unknown[51] "method" "primary method"
  {
    (264821 call(264815 call . super c"init") err details)
  } SystemError
  type ChildProcessError[264885] function ChildProcessError[264885].init[264861](arg _mt[264889]:_MT[238], arg this[264887]:ChildProcessError[264885], arg details[264857] :
  string[26] =
  "", arg err[264868] :
  syserr =
  (264866 call _cast syserr ECHILD)) : _unknown[51] "method" "primary method"
  {
    (264879 call(264873 call . super c"init") err details)
  } SystemError
  type ConnectionError[264938] function ConnectionError[264938].init[264901](arg _mt[264942]:_MT[238], arg this[264940]:ConnectionError[264938], arg err[264898] :
  syserr, arg details[264921] :
  string[26] =
  "") : _unknown[51] "method" "primary method"
  {
    (264932 call(264926 call . super c"init") err details)
  } SystemError
  type BrokenPipeError[264996] function BrokenPipeError[264996].init[264972](arg _mt[265000]:_MT[238], arg this[264998]:BrokenPipeError[264996], arg details[264968] :
  string[26] =
  "", arg err[264979] :
  syserr =
  (264977 call _cast syserr EPIPE)) : _unknown[51] "method" "primary method"
  {
    (264990 call(264984 call . super c"init") err details)
  } ConnectionError
  type ConnectionAbortedError[265054] function ConnectionAbortedError[265054].init[265030](arg _mt[265058]:_MT[238], arg this[265056]:ConnectionAbortedError[265054], arg details[265026] :
  string[26] =
  "", arg err[265037] :
  syserr =
  (265035 call _cast syserr ECONNABORTED)) : _unknown[51] "method" "primary method"
  {
    (265048 call(265042 call . super c"init") err details)
  } ConnectionError
  type ConnectionRefusedError[265112] function ConnectionRefusedError[265112].init[265088](arg _mt[265116]:_MT[238], arg this[265114]:ConnectionRefusedError[265112], arg details[265084] :
  string[26] =
  "", arg err[265095] :
  syserr =
  (265093 call _cast syserr ECONNREFUSED)) : _unknown[51] "method" "primary method"
  {
    (265106 call(265100 call . super c"init") err details)
  } ConnectionError
  type ConnectionResetError[265170] function ConnectionResetError[265170].init[265146](arg _mt[265174]:_MT[238], arg this[265172]:ConnectionResetError[265170], arg details[265142] :
  string[26] =
  "", arg err[265153] :
  syserr =
  (265151 call _cast syserr ECONNRESET)) : _unknown[51] "method" "primary method"
  {
    (265164 call(265158 call . super c"init") err details)
  } ConnectionError
  type FileExistsError[265228] function FileExistsError[265228].init[265204](arg _mt[265232]:_MT[238], arg this[265230]:FileExistsError[265228], arg details[265200] :
  string[26] =
  "", arg err[265211] :
  syserr =
  (265209 call _cast syserr EEXIST)) : _unknown[51] "method" "primary method"
  {
    (265222 call(265216 call . super c"init") err details)
  } SystemError
  type FileNotFoundError[265286] function FileNotFoundError[265286].init[265262](arg _mt[265290]:_MT[238], arg this[265288]:FileNotFoundError[265286], arg details[265258] :
  string[26] =
  "", arg err[265269] :
  syserr =
  (265267 call _cast syserr ENOENT)) : _unknown[51] "method" "primary method"
  {
    (265280 call(265274 call . super c"init") err details)
  } SystemError
  type InterruptedError[265344] function InterruptedError[265344].init[265320](arg _mt[265348]:_MT[238], arg this[265346]:InterruptedError[265344], arg details[265316] :
  string[26] =
  "", arg err[265327] :
  syserr =
  (265325 call _cast syserr EINTR)) : _unknown[51] "method" "primary method"
  {
    (265338 call(265332 call . super c"init") err details)
  } SystemError
  type IsADirectoryError[265402] function IsADirectoryError[265402].init[265378](arg _mt[265406]:_MT[238], arg this[265404]:IsADirectoryError[265402], arg details[265374] :
  string[26] =
  "", arg err[265385] :
  syserr =
  (265383 call _cast syserr EISDIR)) : _unknown[51] "method" "primary method"
  {
    (265396 call(265390 call . super c"init") err details)
  } SystemError
  type NotADirectoryError[265460] function NotADirectoryError[265460].init[265436](arg _mt[265464]:_MT[238], arg this[265462]:NotADirectoryError[265460], arg details[265432] :
  string[26] =
  "", arg err[265443] :
  syserr =
  (265441 call _cast syserr ENOTDIR)) : _unknown[51] "method" "primary method"
  {
    (265454 call(265448 call . super c"init") err details)
  } SystemError
  type PermissionError[265518] function PermissionError[265518].init[265494](arg _mt[265522]:_MT[238], arg this[265520]:PermissionError[265518], arg details[265490] :
  string[26] =
  "", arg err[265501] :
  syserr =
  (265499 call _cast syserr EPERM)) : _unknown[51] "method" "primary method"
  {
    (265512 call(265506 call . super c"init") err details)
  } SystemError
  type ProcessLookupError[265576] function ProcessLookupError[265576].init[265552](arg _mt[265580]:_MT[238], arg this[265578]:ProcessLookupError[265576], arg details[265548] :
  string[26] =
  "", arg err[265559] :
  syserr =
  (265557 call _cast syserr ESRCH)) : _unknown[51] "method" "primary method"
  {
    (265570 call(265564 call . super c"init") err details)
  } SystemError
  type TimeoutError[265634] function TimeoutError[265634].init[265610](arg _mt[265638]:_MT[238], arg this[265636]:TimeoutError[265634], arg details[265606] :
  string[26] =
  "", arg err[265617] :
  syserr =
  (265615 call _cast syserr ETIMEDOUT)) : _unknown[51] "method" "primary method"
  {
    (265628 call(265622 call . super c"init") err details)
  } SystemError
  type IOError[265687] function IOError[265687].init[265650](arg _mt[265691]:_MT[238], arg this[265689]:IOError[265687], arg err[265647] :
  syserr, arg details[265670] :
  string[26] =
  "") : _unknown[51] "method" "primary method"
  {
    (265681 call(265675 call . super c"init") err details)
  } SystemError
  type EOFError[265745] function EOFError[265745].init[265721](arg _mt[265749]:_MT[238], arg this[265747]:EOFError[265745], arg details[265717] :
  string[26] =
  "", arg err[265728] :
  syserr =
  (265726 call _cast syserr EEOF)) : _unknown[51] "method" "primary method"
  {
    (265739 call(265733 call . super c"init") err details)
  } IOError
  type UnexpectedEOFError[265803] function UnexpectedEOFError[265803].init[265779](arg _mt[265807]:_MT[238], arg this[265805]:UnexpectedEOFError[265803], arg details[265775] :
  string[26] =
  "", arg err[265786] :
  syserr =
  (265784 call _cast syserr ESHORT)) : _unknown[51] "method" "primary method"
  {
    (265797 call(265791 call . super c"init") err details)
  } IOError
  type BadFormatError[265861] function BadFormatError[265861].init[265837](arg _mt[265865]:_MT[238], arg this[265863]:BadFormatError[265861], arg details[265833] :
  string[26] =
  "", arg err[265844] :
  syserr =
  (265842 call _cast syserr EFORMAT)) : _unknown[51] "method" "primary method"
  {
    (265855 call(265849 call . super c"init") err details)
  } IOError
  function sys_strerror_syserr_str[265874](arg error[265871] :
  syserr, out arg err_in_strerror[265877] :
  err_t) : _unknown[51] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    c_string
  }
  function quote_string[265890](arg s[265887] :
  string[26], arg len[265893] :
  ssize_t) : _unknown[51] "private"
  {
    { scopeless
      const QIO_STRING_FORMAT_CHPL[265900] "const" "extern"(265899 call uint[115] 8)
      (265903 'end of statement')
    }
    function qio_quote_string[265914](arg s[265911] :
    (265910 call uint[115] 8), arg e[265920] :
    (265919 call uint[115] 8), arg f[265927] :
    (265926 call uint[115] 8), arg ptr[265931] :
    c_string, arg len[265935] :
    ssize_t, ref arg ret[265939] :
    c_string, arg ti[265943] :
    c_void_ptr) : _unknown[51] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      syserr
    }
    function qio_strdup[265956](arg s[265953] :
    c_string) : _unknown[51] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      c_string
    }
    { scopeless
      unknown ret[265963] c_string
      (265966 'end of statement')
    }
    { scopeless
      unknown err[266000](265999 call qio_quote_string(265974 call _cast(265973 call uint[115] 8) 34)(265982 call _cast(265981 call uint[115] 8) 34) QIO_STRING_FORMAT_CHPL(265995 call(265991 call .(265990 call(265986 call . s c"localize")) c"c_str")) len ret c_nil) syserr
      (266003 'end of statement')
    }
    Try!
    {
      {
        if(266030 call _cond_test err)
        {
          { scopeless
            (266028 return(266027 call createStringWithOwnedBuffer(266025 call qio_strdup "<error>")))
          }
        }
        (266040 return(266039 call createStringWithOwnedBuffer ret))
      }
    }
  }
  function ioerror[266053](arg error[266050] :
  syserr, arg msg[266056] :
  string[26], arg path[266060] :
  string[26], arg offset[266067] :
  (266066 call int[13] 64)) : _unknown[51] throws "always propagate line file info" "insert line file info"
  {
    if(266149 call _cond_test error)
    {
      { scopeless
        const quotedpath[266082] "const"(266081 call quote_string path(266079 call _cast ssize_t(266075 call . path c"numBytes")))
        (266085 'end of statement')
      }
      { scopeless
        unknown details[266135](266133 call +(266127 call +(266108 call +(266105 call + msg " with path ") quotedpath) " offset ")(266131 call _cast string[26] offset))
        (266138 'end of statement')
      }
      (266147 'throw'(266146 call(266140 call . SystemError c"fromSyserr") error details))
    }
  }
  function ioerror[266162](arg error[266159] :
  syserr, arg msg[266165] :
  string[26], arg path[266169] :
  string[26]) : _unknown[51] throws "always propagate line file info" "insert line file info" "no doc"
  {
    if(266210 call _cond_test error)
    {
      { scopeless
        const quotedpath[266184] "const"(266183 call quote_string path(266181 call _cast ssize_t(266177 call . path c"numBytes")))
        (266187 'end of statement')
      }
      { scopeless
        unknown details[266196](266194 call +(266191 call + msg " with path ") quotedpath)
        (266199 'end of statement')
      }
      (266208 'throw'(266207 call(266201 call . SystemError c"fromSyserr") error details))
    }
  }
  function ioerror[266223](arg error[266220] :
  syserr, arg msg[266226] :
  string[26]) : _unknown[51] throws "always propagate line file info" "insert line file info" "no doc"
  {
    if(266240 call _cond_test error)
    {
      { scopeless
        (266238 'throw'(266237 call(266231 call . SystemError c"fromSyserr") error msg))
      }
    }
  }
  function ioerror[266254](arg errstr[266251] :
  string[26], arg msg[266257] :
  string[26], arg path[266261] :
  string[26], arg offset[266268] :
  (266267 call int[13] 64)) : _unknown[51] throws "always propagate line file info" "insert line file info"
  {
    { scopeless
      const quotedpath[266282] "const"(266281 call quote_string path(266279 call _cast ssize_t(266275 call . path c"numBytes")))
      (266285 'end of statement')
    }
    { scopeless
      const details[266309] "const"(266307 call +(266301 call +(266298 call +(266295 call +(266292 call +(266289 call + errstr " ") msg) " with path ") quotedpath) " offset ")(266305 call _cast string[26] offset))
      (266312 'end of statement')
    }
    (266324 'throw'(266323 call(266314 call . SystemError c"fromSyserr")(266319 call _cast syserr EIO) details))
  }
  function errorToString[266334](arg error[266331] :
  syserr) : _unknown[51]
  {
    { scopeless
      unknown strerror_err[266339] ENOERR err_t
      (266342 'end of statement')
    }
    { scopeless
      const errstr[266349] "const"(266348 call sys_strerror_syserr_str error strerror_err)
      (266352 'end of statement')
    }
    Try!
    {
      {
        (266357 return(266356 call createStringWithOwnedBuffer errstr))
      }
    }
  }
  { scopeless type
    string[26]
  }
}