AST dump for CPtr after pass parse.
Module use list: 

{
  (204936 'use' ChapelStandard)
  { scopeless
    (204942 'use' SysBasic)
    (204944 'use' SysError)
    (204945 'use' SysCTypes)
  }
  (204947 'import' HaltWrappers)
  function c_nil[204951]() : _unknown[51] "inline" "no parens"
  {
    (204959 return(204958 'cast' c_void_ptr nil[44]))
  }
  { scopeless type
    c_void_ptr
  }
  function is_c_nil[204969](arg x[204967]:_any[178](?)) : _unknown[51] "inline"
  {
    (204980 return(204978 call ==(204976 'cast' c_void_ptr x) c_nil))
  }
  { scopeless type
    bool[10]
  }
  type c_ptr[205045](?) unknown eltType[204987] "type variable" function c_ptr[205045](?).this[204996](arg _mt[205049]:_MT[238], arg this[205047]:c_ptr[205045](?), arg i[204993] :
  integral) ref : _unknown[51] "inline" "method" "primary method"
  {
    (205003 return(205002 'array_get' this i))
  } function c_ptr[205045](?).deref[205010](arg _mt[205053]:_MT[238], arg this[205051]:c_ptr[205045](?)) ref : _unknown[51] "inline" "method" "primary method"
  {
    (205017 return(205016 'array_get' this 0))
  } function c_ptr[205045](?).writeThis[205026](arg _mt[205057]:_MT[238], arg this[205055]:c_ptr[205045](?), arg ch[205024]:_any[178](?)) : _unknown[51] throws "inline" "method" "primary method"
  {
    (205039 call(205034 call .(205030 call _cast c_void_ptr this) c"writeThis") ch)
  }
  (205061 'use' IO)
  type c_array[205785](?) unknown eltType[205064] "type variable" unknown size[205067] "param" function c_array[205785](?).init[205075](arg _mt[205789]:_MT[238], arg this[205787]:c_array[205785](?), arg eltType[205073]:_any[178](?), param arg size[205077]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    (205084 call =(205080 call . this c"eltType") eltType)
    (205093 call =(205089 call . this c"size") size)
    (205101 call(205097 call . this c"complete"))
    { scopeless
      unknown i[205104] 0
      (205107 'end of statement')
    }
    {
      unknown tmp[205138] "temp"
      (205162 'move' tmp[205138](205157 call _cond_test(205159 call < i size)))
      WhileDo[205143]
      {
        {
          { scopeless
            unknown default[205113] "no auto destroy" eltType
            (205116 'end of statement')
          }
          { scopeless
            unknown eltRef[205123] "ref var"(205122 'array_get' this i)
            (205126 'end of statement')
          }
          (205131 '=' eltRef default)
          (205135 call += i 1)
        }
        label _continueLabel[205141]
        (205152 'move' tmp[205138](205147 call _cond_test(205149 call < i size)))
        tmp[205138]
      }
      label _breakLabel[205142]
    }
  } function c_array[205785](?).deinit[205169](arg _mt[205793]:_MT[238], arg this[205791]:c_array[205785](?)) : _unknown[51] "destructor" "method" "primary method"
  {
    { scopeless
      unknown i[205172] 0
      (205175 'end of statement')
    }
    {
      unknown tmp[205196] "temp"
      (205220 'move' tmp[205196](205215 call _cond_test(205217 call < i size)))
      WhileDo[205201]
      {
        {
          (205188 call chpl__autoDestroy(205186 'array_get' this i))
          (205193 call += i 1)
        }
        label _continueLabel[205199]
        (205210 'move' tmp[205196](205205 call _cond_test(205207 call < i size)))
        tmp[205196]
      }
      label _breakLabel[205200]
    }
  } function c_array[205785](?).this[205231](arg _mt[205797]:_MT[238], ref arg this[205795]:c_array[205785](?), arg i[205228] :
  integral) ref : _unknown[51] "inline" "method" "primary method"
  {
    if(205311 call _cond_test boundsChecking)
    {
      { scopeless
        if(205306 call _cond_test(205243 call ||(205237 call < i 0)(205241 call >= i size)))
        {
          { scopeless
            (205304 call(205246 call . HaltWrappers c"boundsCheckHalt")(205301 call +(205298 call +(205289 call +(205270 call + "c array index out of bounds "(205268 call _cast string[26] i)) "(indices are 0..")(205296 call _cast string[26](205293 call - size 1))) ")"))
          }
        }
      }
    }
    (205322 return(205321 'array_get' this i))
  }
  { scopeless type
    eltType
  } function c_array[205785](?).this[205333](arg _mt[205801]:_MT[238], const  ref arg this[205799]:c_array[205785](?), arg i[205330] :
  integral) const ref : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    if(205381 call _cond_test boundsChecking)
    {
      { scopeless
        if(205376 call _cond_test(205345 call ||(205339 call < i 0)(205343 call >= i size)))
        {
          { scopeless
            (205374 call(205348 call . HaltWrappers c"boundsCheckHalt")(205371 call +(205368 call +(205359 call +(205356 call + "c array index out of bounds "(205354 call _cast string[26] i)) "(indices are 0..")(205366 call _cast string[26](205363 call - size 1))) ")"))
          }
        }
      }
    }
    (205392 return(205391 'array_get' this i))
  }
  { scopeless type
    eltType
  } function c_array[205785](?).this[205403](arg _mt[205805]:_MT[238], ref arg this[205803]:c_array[205785](?), param arg i[205400] :
  integral) ref : _unknown[51] "inline" "method" "primary method"
  {
    if(205442 call _cond_test(205414 call ||(205408 call < i 0)(205412 call >= i size)))
    {
      { scopeless
        (205440 call compilerError(205437 call +(205434 call +(205425 call +(205422 call + "c array index out of bounds "(205420 call _cast string[26] i)) "(indices are 0..")(205432 call _cast string[26](205429 call - size 1))) ")"))
      }
    }
    (205453 return(205452 'array_get' this i))
  }
  { scopeless type
    eltType
  } function c_array[205785](?).this[205464](arg _mt[205809]:_MT[238], const  ref arg this[205807]:c_array[205785](?), param arg i[205461] :
  integral) const ref : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    if(205503 call _cond_test(205475 call ||(205469 call < i 0)(205473 call >= i size)))
    {
      { scopeless
        (205501 call compilerError(205498 call +(205495 call +(205486 call +(205483 call + "c array index out of bounds "(205481 call _cast string[26] i)) "(indices are 0..")(205493 call _cast string[26](205490 call - size 1))) ")"))
      }
    }
    (205514 return(205513 'array_get' this i))
  }
  { scopeless type
    eltType
  } function c_array[205785](?).writeThis[205523](arg _mt[205813]:_MT[238], arg this[205811]:c_array[205785](?), arg ch[205521]:_any[178](?)) : _unknown[51] throws "method" "primary method"
  {
    (205531 call <~> ch(205526 'new'(205530 call ioLiteral "[")))
    { scopeless
      unknown first[205536] 1
      (205539 'end of statement')
    }
    {
      unknown _indexOfInterest[205577] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[205578] "expr temp" "temp"
      (205587 'move' _iterator[205578](205585 call _getIterator(205594 call chpl_direct_counted_range_iter 0 size)))
      Defer
      {
        {
          (205610 call _freeIterator _iterator[205578])
        }
      }
      { scopeless type
        (205599 'move' _indexOfInterest[205577](205596 call iteratorIndex _iterator[205578]))
      }
      ForLoop[205579]
      {
        unknown i[205603] "index var" "insert auto destroy"
        (205605 'move' i[205603] _indexOfInterest[205577])
        {
          (205552 call <~> ch(205551 call this i))
          if(205572 call _cond_test(205561 call != i(205559 call - size 1)))
          {
            { scopeless
              (205569 call <~> ch(205564 'new'(205568 call ioLiteral ", ")))
            }
          }
        }
        label _continueLabel[205582]
        _indexOfInterest[205577]
        _iterator[205578]
      }
      label _breakLabel[205583]
    }
    (205623 call <~> ch(205618 'new'(205622 call ioLiteral "]")))
  } function c_array[205785](?).length[205630](arg _mt[205817]:_MT[238], arg this[205815]:c_array[205785](?)) : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    (205670 call compilerWarning(205667 call + "'c_array.length' is deprecated - " "please use 'c_array.size' instead"))
    (205674 return size)
  } function c_array[205785](?).init=[205684](arg _mt[205821]:_MT[238], arg this[205819]:c_array[205785](?), arg other[205681] :
  c_array) : _unknown[51] "method" "primary method"
  {
    (205694 call =(205687 call . this c"eltType")(205691 call . other c"eltType"))
    (205706 call =(205699 call . this c"size")(205703 call . other c"size"))
    (205714 call(205710 call . this c"complete"))
    {
      unknown _indexOfInterest[205742] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[205743] "expr temp" "temp"
      (205752 'move' _iterator[205743](205750 call _getIterator(205759 call chpl_direct_counted_range_iter 0 size)))
      Defer
      {
        {
          (205775 call _freeIterator _iterator[205743])
        }
      }
      { scopeless type
        (205764 'move' _indexOfInterest[205742](205761 call iteratorIndex _iterator[205743]))
      }
      ForLoop[205744]
      {
        unknown i[205768] "index var" "insert auto destroy"
        (205770 'move' i[205768] _indexOfInterest[205742])
        {
          { scopeless
            unknown value[205728] "no auto destroy"(205727 call other i) eltType
            (205731 'end of statement')
          }
          (205740 '='(205738 call this i) value)
        }
        label _continueLabel[205747]
        _indexOfInterest[205742]
        _iterator[205743]
      }
      label _breakLabel[205748]
    }
  }
  function =[205830](ref arg lhs[205827] :
  c_array, arg rhs[205833] :
  c_array) : _unknown[51] "assignop"
  {
    if(205867 call _cond_test(205844 call !=(205837 call . lhs c"eltType")(205841 call . rhs c"eltType")))
    {
      { scopeless
        (205865 call compilerError "element type mismatch in c_array assignment")
      }
    }
    if(205904 call _cond_test(205881 call !=(205874 call . lhs c"size")(205878 call . rhs c"size")))
    {
      { scopeless
        (205902 call compilerError "size mismatch in c_array assignment")
      }
    }
    {
      unknown _indexOfInterest[205931] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[205932] "expr temp" "temp"
      (205941 'move' _iterator[205932](205939 call _getIterator(205951 call chpl_direct_counted_range_iter 0(205947 call . lhs c"size"))))
      Defer
      {
        {
          (205967 call _freeIterator _iterator[205932])
        }
      }
      { scopeless type
        (205956 'move' _indexOfInterest[205931](205953 call iteratorIndex _iterator[205932]))
      }
      ForLoop[205933]
      {
        unknown i[205960] "index var" "insert auto destroy"
        (205962 'move' i[205960] _indexOfInterest[205931])
        {
          (205927 call =(205922 call lhs i)(205926 call rhs i))
        }
        label _continueLabel[205936]
        _indexOfInterest[205931]
        _iterator[205932]
      }
      label _breakLabel[205937]
    }
  }
  function =[205982](ref arg lhs[205979] :
  c_ptr, ref arg rhs[205985] :
  c_array) : _unknown[51] "assignop"
  {
    (206006 call = lhs(206005 call c_ptrTo(206003 call rhs 0)))
  }
  where {
    (205996 call ==(205989 call . lhs c"eltType")(205993 call . rhs c"eltType"))
  }
  function _unknown[51].writeThis[206018](arg _mt[206023]:_MT[238], arg this[206020] :
  c_void_ptr, arg ch[206016]:_any[178](?)) : _unknown[51] throws "inline" "method" "no doc"
  {
    (206051 call(206026 call . ch c"writef") "0x%xu"(206049 call _cast c_uintptr this))
  }
  function =[206062](ref arg a[206059] :
  c_ptr, arg b[206065] :
  c_ptr) : _unknown[51] "assignop" "inline" "no doc"
  {
    (206072 '=' a b)
  }
  function =[206083](ref arg a[206080] :
  c_ptr, arg b[206086] :
  c_void_ptr) : _unknown[51] "assignop" "inline" "no doc"
  {
    (206093 '=' a b)
  }
  function _cast[206104](arg t[206101] :
  c_void_ptr, arg x[206107] :
  c_fn_ptr) : _unknown[51] "inline" "no doc"
  {
    (206115 return(206114 'cast' c_void_ptr x))
  }
  function _cast[206126](arg t[206123] :
  c_ptr, arg x[206129] :
  c_ptr) : _unknown[51] "inline" "no doc"
  {
    (206137 return(206136 'cast' t x))
  }
  function _cast[206152](arg t[206149] :
  (206148 call c_ptr unknown e[206145]), ref arg x[206155] :
  c_array) : _unknown[51] "inline" "no doc"
  {
    (206172 return(206171 call c_ptrTo(206169 call x 0)))
  }
  where {
    (206163 call ==(206159 call . x c"eltType") e)
  }
  function _cast[206184](arg t[206181] :
  c_void_ptr, ref arg x[206187] :
  c_array) : _unknown[51] "inline" "no doc"
  {
    (206200 return(206198 call _cast c_void_ptr(206196 call c_ptrTo(206194 call x 0))))
  }
  function _cast[206211](arg t[206208] :
  c_void_ptr, arg x[206214] :
  c_ptr) : _unknown[51] "inline" "no doc"
  {
    (206222 return(206221 'cast' t x))
  }
  function _cast[206233](arg t[206230] :
  c_ptr, arg x[206236] :
  c_void_ptr) : _unknown[51] "inline" "no doc"
  {
    (206244 return(206243 'cast' t x))
  }
  function _cast[206255](arg t[206252] :
  string[26], arg x[206258] :
  c_void_ptr) : _unknown[51] "inline" "no doc"
  {
    Try!
    {
      {
        (206284 return(206283 call createStringWithOwnedBuffer(206281 'ref to string' x)))
      }
    }
  }
  function _cast[206299](arg t[206296] :
  string[26], arg x[206302] :
  c_ptr) : _unknown[51] "inline" "no doc"
  {
    Try!
    {
      {
        (206312 return(206311 call createStringWithOwnedBuffer(206309 'ref to string' x)))
      }
    }
  }
  function _cast[206327](arg t[206324] :
  _anyManagementAnyNilable, arg x[206330] :
  c_void_ptr) : _unknown[51] "inline" "last resort" "no doc"
  {
    if(206474 call _cond_test(206341 call ||(206336 call isUnmanagedClass t)(206340 call isBorrowedClass t)))
    {
      (206387 call compilerWarning(206384 call +(206365 call + "cast from c_void_ptr to "(206363 call _cast string[26] t)) " is deprecated"))
      (206437 call compilerWarning(206434 call +(206415 call + "cast to "(206413 call _cast string[26](206411 call _to_nilable t))) " instead"))
      (206444 return(206443 'cast' t x))
    }
    {
      (206471 call compilerWarning(206468 call + "invalid cast from c_void_ptr to managed type "(206466 call _cast string[26] t)))
    }
  }
  function _cast[206489](arg t[206486] :
  (206485 'to unmanaged class from unknown'(206484 'to nilable class from type' class[232](?))), arg x[206492] :
  c_void_ptr) : _unknown[51] "inline" "no doc"
  {
    (206500 return(206499 'cast' t x))
  }
  function _cast[206513](arg t[206510] :
  (206509 'to borrowed class from unknown'(206508 'to nilable class from type' class[232](?))), arg x[206516] :
  c_void_ptr) : _unknown[51] "inline" "no doc"
  {
    (206524 return(206523 'cast' t x))
  }
  function _cast[206535](arg t[206532] :
  c_void_ptr, arg x[206538] :
  borrowed[211](?)) : _unknown[51] "inline" "no doc"
  {
    (206546 return(206545 'cast' t x))
  }
  function _cast[206557](arg t[206554] :
  c_void_ptr, arg x[206560] :
  unmanaged[220](?)) : _unknown[51] "inline" "no doc"
  {
    (206568 return(206567 'cast' t x))
  }
  function _cast[206579](arg t[206576] :
  _ddata, arg x[206582] :
  c_ptr) : _unknown[51] "inline" "no doc"
  {
    (206600 return(206599 'cast' t x))
  }
  where {
    (206593 call ==(206586 call . t c"eltType")(206590 call . x c"eltType"))
  }
  function _cast[206612](arg t[206609] :
  _ddata, arg x[206615] :
  c_void_ptr) : _unknown[51] "inline" "no doc"
  {
    (206623 return(206622 'cast' t x))
  }
  function _cast[206634](arg t[206631] :
  c_void_ptr, arg x[206637] :
  _ddata) : _unknown[51] "inline" "no doc"
  {
    (206645 return(206644 'cast' t x))
  }
  function _cast[206656](arg t[206653] :
  c_intptr, arg x[206659] :
  c_void_ptr) : _unknown[51] "inline" "no doc"
  {
    { scopeless
      (206667 return(206666 'cast' t x))
    }
  }
  function _cast[206678](arg t[206675] :
  c_uintptr, arg x[206681] :
  c_void_ptr) : _unknown[51] "inline" "no doc"
  {
    { scopeless
      (206689 return(206688 'cast' t x))
    }
  }
  function _cast[206703](arg t[206700] :
  (206699 call int[13] 64), arg x[206706] :
  c_void_ptr) : _unknown[51] "inline" "no doc"
  {
    { scopeless
      (206721 return(206720 'cast' t x))
    }
  }
  where {
    (206714 call != c_uintptr(206713 call int[13] 64))
  }
  function _cast[206736](arg t[206733] :
  (206732 call uint[115] 64), arg x[206739] :
  c_void_ptr) : _unknown[51] "inline" "no doc"
  {
    { scopeless
      (206754 return(206753 'cast' t x))
    }
  }
  where {
    (206747 call != c_uintptr(206746 call uint[115] 64))
  }
  function _cast[206766](arg t[206763] :
  c_intptr, arg x[206769] :
  c_ptr) : _unknown[51] "inline" "no doc"
  {
    { scopeless
      (206777 return(206776 'cast' t x))
    }
  }
  function _cast[206788](arg t[206785] :
  c_uintptr, arg x[206791] :
  c_ptr) : _unknown[51] "inline" "no doc"
  {
    { scopeless
      (206799 return(206798 'cast' t x))
    }
  }
  function _cast[206813](arg t[206810] :
  (206809 call int[13] 64), arg x[206816] :
  c_ptr) : _unknown[51] "inline" "no doc"
  {
    { scopeless
      (206831 return(206830 'cast' t x))
    }
  }
  where {
    (206824 call != c_intptr(206823 call int[13] 64))
  }
  function _cast[206846](arg t[206843] :
  (206842 call uint[115] 64), arg x[206849] :
  c_ptr) : _unknown[51] "inline" "no doc"
  {
    { scopeless
      (206864 return(206863 'cast' t x))
    }
  }
  where {
    (206857 call != c_uintptr(206856 call int[13] 64))
  }
  function =[206876](ref arg a[206873] :
  c_fn_ptr, arg b[206879] :
  c_fn_ptr) : _unknown[51] "assignop" "inline" "no doc"
  {
    (206886 '=' a b)
  }
  function ==[206897](arg a[206894] :
  c_ptr, arg b[206900] :
  c_ptr) : _unknown[51] "inline" "no doc"
  {
    (206918 return(206917 'ptr_eq' a b))
  }
  where {
    (206911 call ==(206904 call . a c"eltType")(206908 call . b c"eltType"))
  }
  function ==[206930](arg a[206927] :
  c_ptr, arg b[206933] :
  c_void_ptr) : _unknown[51] "inline" "no doc"
  {
    (206941 return(206940 'ptr_eq' a b))
  }
  function ==[206952](arg a[206949] :
  c_void_ptr, arg b[206955] :
  c_ptr) : _unknown[51] "inline" "no doc"
  {
    (206963 return(206962 'ptr_eq' a b))
  }
  function !=[206974](arg a[206971] :
  c_ptr, arg b[206977] :
  c_ptr) : _unknown[51] "inline" "no doc"
  {
    (206995 return(206994 'ptr_neq' a b))
  }
  where {
    (206988 call ==(206981 call . a c"eltType")(206985 call . b c"eltType"))
  }
  function !=[207007](arg a[207004] :
  c_ptr, arg b[207010] :
  c_void_ptr) : _unknown[51] "inline" "no doc"
  {
    (207018 return(207017 'ptr_neq' a b))
  }
  function !=[207029](arg a[207026] :
  c_void_ptr, arg b[207032] :
  c_ptr) : _unknown[51] "inline" "no doc"
  {
    (207040 return(207039 'ptr_neq' a b))
  }
  function _cond_test[207051](arg x[207048] :
  c_ptr) : _unknown[51] "inline" "no doc"
  {
    { scopeless
      (207057 return(207055 call != x c_nil))
    }
  }
  function ![207068](arg x[207065] :
  c_ptr) : _unknown[51] "inline" "no doc"
  {
    { scopeless
      (207074 return(207072 call == x c_nil))
    }
  }
  function +[207085](arg a[207082] :
  c_ptr, arg b[207088] :
  integral) : _unknown[51] "inline" "no doc"
  {
    { scopeless
      (207096 return(207095 '+' a b))
    }
  }
  function -[207107](arg a[207104] :
  c_ptr, arg b[207110] :
  integral) : _unknown[51] "inline" "no doc"
  {
    { scopeless
      (207118 return(207117 '-' a b))
    }
  }
  function -[207133](arg a[207130] :
  (207129 call c_ptr unknown t[207126]), arg b[207139] :
  (207138 call c_ptr t)) : _unknown[51] "inline" "no doc"
  {
    (207158 return(207157 call c_pointer_diff a b(207155 call _cast c_ptrdiff(207153 call c_sizeof(207149 call . a c"eltType")))))
  }
  { scopeless type
    c_ptrdiff
  }
  function c_pointer_return[207171](ref arg x[207168] :
  unknown t[207166]) : _unknown[51] "extern" "local args" "no fn body" "no doc" "fn synchronization free"
  {
  }
  { scopeless type
    (207176 call c_ptr t)
  }
  function c_pointer_diff[207186](arg a[207183] :
  c_void_ptr, arg b[207189] :
  c_void_ptr, arg eltSize[207193] :
  c_ptrdiff) : _unknown[51] "extern" "local args" "no fn body" "no doc" "fn synchronization free"
  {
  }
  { scopeless type
    c_ptrdiff
  }
  function c_ptrTo[207208](arg arr[207205] :
  (207202 call chpl__buildArrayRuntimeType nil[44])) : _unknown[51] "inline"
  {
    (207227 return(207226 call c_pointer_return(207224 call arr(207220 call .(207217 call . arr c"_dom") c"low"))))
  }
  where {
    (207213 call isRectangularArr arr)
  }
  function c_ptrTo[207240](ref arg x[207237] :
  unknown t[207235]) : _unknown[51] "inline"
  {
    if(207272 call _cond_test(207249 call isArrayType t))
    {
      { scopeless
        (207270 call compilerError "c_ptrTo unsupported array type" 2)
      }
    }
    if(207304 call _cond_test(207281 call isDomainType t))
    {
      { scopeless
        (207302 call compilerError "c_ptrTo domain type not supported" 2)
      }
    }
    (207313 return(207312 call c_pointer_return x))
  }
  { scopeless type
    (207245 call c_ptr t)
  }
  function c_ptrTo[207324](arg x[207321] :
  c_fn_ptr) : _unknown[51] "inline" "no doc"
  {
    (207327 return x)
  }
  function _unknown[51].this[207335](arg _mt[207340]:_MT[238], arg this[207337] :
  c_fn_ptr) : _unknown[51] "method" "no doc"
  {
    (207361 call compilerError "Can't call a C function pointer within Chapel")
  }
  function _unknown[51].this[207373](arg _mt[207378]:_MT[238], arg this[207375] :
  c_fn_ptr, arg args[207370]:_any[178](?) ...) : _unknown[51] "method" "no doc"
  {
    (207383 call compilerError "Can't call a C function pointer within Chapel")
  }
  function offset_ARRAY_ELEMENTS[207390]() : _unknown[51] "no parens" "private"
  {
    { scopeless
      const CHPL_RT_MD_ARRAY_ELEMENTS[207393] "const" "extern" chpl_mem_descInt_t
      (207396 'end of statement')
    }
    function chpl_memhook_md_num[207400]() : _unknown[51] "extern" "local args" "no fn body" "fn synchronization free"
    {
    }
    { scopeless type
      chpl_mem_descInt_t
    }
    (207412 return(207410 call - CHPL_RT_MD_ARRAY_ELEMENTS(207409 call chpl_memhook_md_num)))
  }
  function c_sizeof[207420](arg x[207418]:_any[178](?)) : _unknown[51] "inline"
  {
    function sizeof[207427](arg x[207425]:_any[178](?)) : _unknown[51] "extern" "local args" "no fn body" "fn synchronization free"
    {
    }
    { scopeless type
      size_t
    }
    (207438 return(207437 call sizeof x))
  }
  { scopeless type
    size_t
  }
  function c_offsetof[207447](arg t[207445]:_any[178](?), param arg fieldname[207450] :
  string[26]) : _unknown[51]
  {
    (207459 'use' Reflection)
    { scopeless
      unknown x[207463] "no auto destroy" "no init" t
      (207466 'end of statement')
    }
    (207487 return(207485 call -(207476 call _cast size_t(207474 call c_ptrTo(207472 call getFieldRef x fieldname)))(207483 call _cast size_t(207481 call c_ptrTo x))))
  }
  where {
    (207457 call isRecordType t)
  }
  { scopeless type
    size_t
  }
  function c_offsetof[207497](arg t[207495]:_any[178](?), param arg fieldname[207500] :
  string[26]) : _unknown[51] "no doc"
  {
    (207528 call compilerError "Cannot call c_offsetof on type that is not a record")
  }
  where {
    (207507 call !(207506 call isRecordType t))
  }
  function c_calloc[207538](arg eltType[207536]:_any[178](?), arg size[207541] :
  integral) : _unknown[51] "inline"
  {
    { scopeless
      const alloc_size[207561] "const"(207559 call *(207554 call(207549 call . size c"safeCast") size_t)(207558 call c_sizeof eltType))
      (207564 'end of statement')
    }
    (207578 return(207576 call _cast(207575 call c_ptr eltType)(207571 call chpl_here_calloc alloc_size 1 offset_ARRAY_ELEMENTS)))
  }
  { scopeless type
    (207547 call c_ptr eltType)
  }
  function c_malloc[207587](arg eltType[207585]:_any[178](?), arg size[207590] :
  integral) : _unknown[51] "inline"
  {
    { scopeless
      const alloc_size[207610] "const"(207608 call *(207603 call(207598 call . size c"safeCast") size_t)(207607 call c_sizeof eltType))
      (207613 'end of statement')
    }
    (207626 return(207624 call _cast(207623 call c_ptr eltType)(207619 call chpl_here_alloc alloc_size offset_ARRAY_ELEMENTS)))
  }
  { scopeless type
    (207596 call c_ptr eltType)
  }
  function c_aligned_alloc[207635](arg eltType[207633]:_any[178](?), arg alignment[207638] :
  integral, arg size[207642] :
  integral) : _unknown[51] "inline"
  {
    if(207801 call _cond_test boundsChecking)
    {
      { scopeless
        unknown one[207652] 1 size_t
        (207655 'end of statement')
      }
      { scopeless
        unknown aln[207664](207663 call(207658 call . alignment c"safeCast") size_t)
        (207667 'end of statement')
      }
      if(207693 call _cond_test(207670 call == aln 0))
      {
        { scopeless
          (207691 call halt "c_aligned_alloc called with alignment of 0")
        }
      }
      { scopeless
        unknown p[207702](207701 call log2 aln)
        (207705 'end of statement')
      }
      if(207718 call _cond_test(207711 call <(207708 call << one p) aln))
      {
        { scopeless
          (207715 call += p 1)
        }
      }
      (207732 call assert(207729 call <= aln(207727 call << one p)))
      if(207763 call _cond_test(207739 call != aln(207737 call << one p)))
      {
        { scopeless
          (207761 call halt "c_aligned_alloc called with non-power-of-2 alignment " aln)
        }
      }
      if(207796 call _cond_test(207773 call < alignment(207772 call c_sizeof c_void_ptr)))
      {
        { scopeless
          (207794 call halt "c_aligned_alloc called with alignment smaller than pointer size")
        }
      }
    }
    { scopeless
      const alloc_size[207819] "const"(207817 call *(207812 call(207807 call . size c"safeCast") size_t)(207816 call c_sizeof eltType))
      (207822 'end of statement')
    }
    (207841 return(207839 call _cast(207838 call c_ptr eltType)(207834 call chpl_here_aligned_alloc(207830 call(207825 call . alignment c"safeCast") size_t) alloc_size offset_ARRAY_ELEMENTS)))
  }
  { scopeless type
    (207648 call c_ptr eltType)
  }
  function c_free[207852](arg data[207849] :
  c_void_ptr) : _unknown[51] "inline"
  {
    (207857 call chpl_here_free data)
  }
  function isAnyCPtr[207868](arg t[207865] :
  c_ptr) param : _unknown[51]
  {
    { scopeless
      (207871 return 1)
    }
  }
  function isAnyCPtr[207882](arg t[207879] :
  c_void_ptr) param : _unknown[51] "no doc"
  {
    { scopeless
      (207885 return 1)
    }
  }
  function isAnyCPtr[207894](arg t[207892]:_any[178](?)) param : _unknown[51] "no doc"
  {
    { scopeless
      (207897 return 0)
    }
  }
  function c_memmove[207908](arg dest[207905] :
  c_void_ptr, const arg src[207911] :
  c_void_ptr, arg n[207915] :
  integral) : _unknown[51] "inline" "fn synchronization free"
  {
    function memmove[207924](arg dest[207921] :
    c_void_ptr, const arg src[207927] :
    c_void_ptr, arg n[207931] :
    size_t) : void[4] "extern" "local args" "no fn body" "fn synchronization free"
    {
    }
    (207948 call memmove dest src(207947 call(207942 call . n c"safeCast") size_t))
  }
  function c_memcpy[207958](arg dest[207955] :
  c_void_ptr, const arg src[207961] :
  c_void_ptr, arg n[207965] :
  integral) : _unknown[51] "inline" "fn synchronization free"
  {
    function memcpy[207974](arg dest[207971] :
    c_void_ptr, const arg src[207977] :
    c_void_ptr, arg n[207981] :
    size_t) : void[4] "extern" "local args" "no fn body" "fn synchronization free"
    {
    }
    (207998 call memcpy dest src(207997 call(207992 call . n c"safeCast") size_t))
  }
  function c_memcmp[208008](const arg s1[208005] :
  c_void_ptr, const arg s2[208011] :
  c_void_ptr, arg n[208015] :
  integral) : _unknown[51] "inline" "fn synchronization free"
  {
    function memcmp[208024](const arg s1[208021] :
    c_void_ptr, const arg s2[208027] :
    c_void_ptr, arg n[208031] :
    size_t) : _unknown[51] "extern" "local args" "no fn body" "fn synchronization free"
    {
    }
    { scopeless type
      c_int
    }
    (208057 return(208056 call(208051 call .(208050 call memcmp s1 s2(208049 call(208044 call . n c"safeCast") size_t)) c"safeCast") int[13]))
  }
  function c_memset[208067](arg s[208064] :
  c_void_ptr, arg c[208070] :
  integral, arg n[208074] :
  integral) : _unknown[51] "inline" "fn synchronization free"
  {
    function memset[208083](arg s[208080] :
    c_void_ptr, arg c[208086] :
    c_int, arg n[208090] :
    size_t) : _unknown[51] "extern" "local args" "no fn body" "fn synchronization free"
    {
    }
    { scopeless type
      c_void_ptr
    }
    (208115 call memset s(208107 call(208102 call . c c"safeCast") c_int)(208114 call(208109 call . n c"safeCast") size_t))
    (208118 return s)
  }
}