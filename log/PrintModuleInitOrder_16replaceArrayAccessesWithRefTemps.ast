AST dump for PrintModuleInitOrder after pass replaceArrayAccessesWithRefTemps.
Module use list: ChapelBase 

{
  function chpl__init_PrintModuleInitOrder[415958]() : void[4] "export" "insert line file info" "local args" "module init" "resolved"
  {
    val call_tmp[594687]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (594690 'move' call_tmp[594687](539966 call chpl_config_has_value[334] c"printModuleInitOrder" c"Built-in"))
    val call_tmp[594692]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (594695 'move' call_tmp[594692](539969 call ![7494] call_tmp[594687]))
    if call_tmp[594692]
    {
      (539985 'move' tmp[539955] 0)
    }
    {
      val call_tmp[594697]:bool[10] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[594702]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (594705 'move' call_tmp[594702](539976 call chpl_config_get_value[350] c"printModuleInitOrder" c"Built-in"))
      (539981 'move' tmp[539955](539979 call _command_line_cast[1378129] call_tmp[594702]))
    }
    (539957 'move' printModuleInitOrder[20405] tmp[539955])
    (20408 'end of statement')
    val call_tmp[594707]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (539987 'move' moduleInitLevel[20416] 2)
    (20419 'end of statement')
    val call_tmp[594752]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (594755 'move' call_tmp[594752] printModuleInitOrder[20405])
    if call_tmp[594752]
    {
      (20534 call initPrint[20493])
    }
    (501583 return _void[55])
  }
  const printModuleInitOrder[20405]:bool[10] "config" "const" "insert auto destroy"
  val moduleInitLevel[20416]:int(32)[95] "dead at end of block" "insert auto destroy" "print module init indent level"
  function printModuleInit[20426](const in arg s1[20423]:c_string[19], const in arg s2[20429]:c_string[19], const in arg len[20433]:int(64)[13]) : void[4] "print module init fn" "resolved" "no return value for void"
  {
    function printf[20442](const in arg s1[20439]:c_string[19], const in arg len[20448]:int(32)[95], const in arg s2[20452]:c_string[19]) : void[4] "extern" "local args" "no fn body" "resolved" "no return value for void"
    {
      (501575 return _void[55])
    }
    val call_tmp[594717]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (594720 'move' call_tmp[594717] printModuleInitOrder[20405])
    if call_tmp[594717]
    {
      val call_tmp[594722]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[594727]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (594730 'move' call_tmp[594727](20468 call _cast[960155] len[20433]))
      val call_tmp[594732]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (594735 'move' call_tmp[594732](20470 call +[439672] moduleInitLevel[20416] call_tmp[594727]))
      val call_tmp[594737]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[594747]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (594750 'move' call_tmp[594747](20479 call +[439672] call_tmp[594732] 2))
      (20482 call printf[20442] s1[20423] call_tmp[594747] s2[20429])
    }
    (501577 return _void[55])
  }
  function initPrint[20493]() : void[4] "resolved" "no return value for void"
  {
    function printf[20501](const in arg s[20498]:c_string[19]) : void[4] "extern" "local args" "no fn body" "resolved" "no return value for void"
    {
      (501579 return _void[55])
    }
    (20527 call printf[20501] c"Initializing Modules:\n")
    (501581 return _void[55])
  }
  val tmp[539955]:bool[10] "dead at end of block" "temp"
}