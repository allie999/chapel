AST dump for ChapelUtil after pass lowerErrorHandling.
Module use list: ChapelStandard 

{
  function chpl__init_ChapelUtil[416130]() : void[4] "insert line file info" "module init" "resolved"
  {
    (167728 'end of statement')
    (522208 return _void[55])
  }
  function safeAdd[979918](const in arg a[979920]:int(64)[13], const in arg b[979925]:int(64)[13]) : bool[10] "instantiated generic" "invisible fn" "resolved"
  {
    val ret[979927]:bool[10] "dead after last mention" "RVV" "temp"
    val call_tmp[979935]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (980163 'end of statement')
    val call_tmp[979968]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (979970 'move' call_tmp[979968](979973 call <[948587] a[979920]))
    val call_tmp[979976]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (979978 'move' call_tmp[979976] call_tmp[979968])
    if call_tmp[979976]
    {
      val call_tmp[979985]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (979987 'move' call_tmp[979985](979990 call >=[980165] b[979925]))
      val call_tmp[979993]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (979995 'move' call_tmp[979993] call_tmp[979985])
      if call_tmp[979993]
      {
        (980002 'move' ret[979927] 1)
        gotoReturn _end_safeAdd[980141] _end_safeAdd[980141]
      }
      {
        val call_tmp[980009]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[980022]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (980024 'move' call_tmp[980022](980027 call -[980389] a[979920]))
        val call_tmp[980030]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (980032 'move' call_tmp[980030](980035 call <[437568] b[979925] call_tmp[980022]))
        val call_tmp[980038]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (980040 'move' call_tmp[980038] call_tmp[980030])
        if call_tmp[980038]
        {
          (980047 'move' ret[979927] 0)
          gotoReturn _end_safeAdd[980141] _end_safeAdd[980141]
        }
        {
          (980054 'move' ret[979927] 1)
          gotoReturn _end_safeAdd[980141] _end_safeAdd[980141]
        }
      }
    }
    {
      val call_tmp[980063]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (980065 'move' call_tmp[980063](980068 call <=[437128] b[979925] 0))
      val call_tmp[980071]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (980073 'move' call_tmp[980071] call_tmp[980063])
      if call_tmp[980071]
      {
        (980080 'move' ret[979927] 1)
        gotoReturn _end_safeAdd[980141] _end_safeAdd[980141]
      }
      {
        val call_tmp[980087]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[980100]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (980102 'move' call_tmp[980100](980105 call -[980537] a[979920]))
        val call_tmp[980108]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (980110 'move' call_tmp[980108](980113 call >[437788] b[979925] call_tmp[980100]))
        val call_tmp[980116]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (980118 'move' call_tmp[980116] call_tmp[980108])
        if call_tmp[980116]
        {
          (980125 'move' ret[979927] 0)
          gotoReturn _end_safeAdd[980141] _end_safeAdd[980141]
        }
        {
          (980132 'move' ret[979927] 1)
          gotoReturn _end_safeAdd[980141] _end_safeAdd[980141]
        }
      }
    }
    label _end_safeAdd[980141]
    (980143 return ret[979927])
  }
  function _ref(chpl_main_argument)[1599666].deinit[811765](const  ref arg this[811769]:_ref(chpl_main_argument)[1599666]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved"
  {
    (811777 return _void[55])
  }
  type chpl_main_argument[167416] val argc[167403]:int(64)[13] val return_value[167411]:int(32)[95]
  function chpl_rt_preUserCodeHook[167714]() : void[4] "extern" "local args" "no fn body" "resolved" "no return value for void"
  {
    (522194 return _void[55])
  }
  function chpl_rt_postUserCodeHook[167720]() : void[4] "extern" "local args" "no fn body" "resolved" "no return value for void"
  {
    (522196 return _void[55])
  }
  function chpl_addModule[167735](const in arg moduleName[167732]:c_string[19], const in arg deinitFun[167738]:c_fn_ptr[152]) : void[4] "resolved" "no return value for void"
  {
    val call_tmp[679482]:unmanaged chpl_ModuleDeinit[1591826] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
    val new_temp[1593239]:unmanaged chpl_ModuleDeinit[1591826] "dead after last mention" "temp"
    (1593241 'move' new_temp[1593239](1593110 call _new[1593175] moduleName[167732] deinitFun[167738] chpl_moduleDeinitFuns[19840]))
    (679485 'move' call_tmp[679482] new_temp[1593239])
    val coerce_tmp[1593257]:unmanaged chpl_ModuleDeinit?[415465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1593263 'move' coerce_tmp[1593257](1593259 'cast' unmanaged chpl_ModuleDeinit?[415465] call_tmp[679482]))
    (167751 call =[1591920] chpl_moduleDeinitFuns[19840] coerce_tmp[1593257])
    (522198 return _void[55])
  }
  function chpl_deinitModules[167759]() : void[4] "export" "local args" "resolved" "no return value for void"
  {
    (1591528 'end of statement')
    val prev[167810]:unmanaged chpl_ModuleDeinit?[415465] "dead at end of block" "insert auto destroy"
    (544692 'move' prev[167810](1591529 call chpl__initCopy[982075] chpl_moduleDeinitFuns[19840]))
    (167813 'end of statement')
    {
      val tmp[167867]:bool[10] "dead after last mention" "temp"
      val coerce_tmp[1591539]:borrowed object?[415453] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1591544 'move' coerce_tmp[1591539](1591541 'cast' borrowed object?[415453] prev[167810]))
      (167885 'move' tmp[167867](167883 call _cond_test[9881] coerce_tmp[1591539]))
      WhileDo[167872]
      {
        {
          val call_tmp[679492]:unmanaged chpl_ModuleDeinit[1591826] "dead at end of block" "maybe param" "temp"
          (679495 'move' call_tmp[679492](167816 call postfix![1591547] prev[167810]))
          const curr[167818]:unmanaged chpl_ModuleDeinit[1591826] "dead at end of block" "const" "insert auto destroy"
          (544694 'move' curr[167818](1591862 call chpl__initCopy[1591843] call_tmp[679492]))
          (167821 'end of statement' prev[167810])
          (1591866 'end of statement' curr[167818] curr[167818])
          ref call_tmp[679511]:_ref(c_fn_ptr)[949053] "dead after last mention" "maybe param" "reference to a const" "temp"
          val coerce_tmp[1591869]:chpl_ModuleDeinit[19827] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1591874 'move' coerce_tmp[1591869](1591871 'cast' chpl_ModuleDeinit[19827] curr[167818]))
          (679514 'move' call_tmp[679511](167846 call deinitFun[752817] coerce_tmp[1591869]))
          val coerce_tmp[1591877]:c_fn_ptr[152] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1591881 'move' coerce_tmp[1591877](1591879 'deref' call_tmp[679511]))
          (167850 call chpl_execute_module_deinit[167792] coerce_tmp[1591877])
          (483075 'end of statement' curr[167818])
          ref call_tmp[679518]:_ref(unmanaged chpl_ModuleDeinit?)[982040] "dead after last mention" "maybe param" "reference to a const" "temp"
          val coerce_tmp[1591884]:chpl_ModuleDeinit[19827] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1591889 'move' coerce_tmp[1591884](1591886 'cast' chpl_ModuleDeinit[19827] curr[167818]))
          (679521 'move' call_tmp[679518](167856 call prevModule[752843] coerce_tmp[1591884]))
          val coerce_tmp[1591955]:unmanaged chpl_ModuleDeinit?[415465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1591959 'move' coerce_tmp[1591955](1591957 'deref' call_tmp[679518]))
          (167859 call =[1591920] prev[167810] coerce_tmp[1591955])
          (483077 'end of statement' prev[167810] curr[167818])
          (167864 call chpl__delete[1591962] curr[167818])
          (483080 'end of statement' curr[167818])
        }
        label _continueLabel[167870]
        val coerce_tmp[1593021]:borrowed object?[415453] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1593026 'move' coerce_tmp[1593021](1593023 'cast' borrowed object?[415453] prev[167810]))
        (167878 'move' tmp[167867](167876 call _cond_test[9881] coerce_tmp[1593021]))
        tmp[167867]
      }
      label _breakLabel[167871]
    }
    (167890 call =[1593057] chpl_moduleDeinitFuns[19840] nil[44])
    (522206 return _void[55])
  }
  function chpl_execute_module_deinit[167792](const in arg deinitFun[167789]:c_fn_ptr[152]) : void[4] "extern" "local args" "no fn body" "resolved" "no return value for void"
  {
    (522204 return _void[55])
  }
}