AST dump for ExportWrappers after pass normalize.
Module use list: ChapelStandard CPtr SysCTypes 

{
  function chpl__init_ExportWrappers[415937]() : void[4] "insert line file info" "module init"
  {
    (544699 'move' chpl__exportTypeChplByteBuffer[172145](544698 call chpl_byte_buffer[172131]))
    (483221 'end of statement')
    (522400 return _void[55])
  }
  type chpl_byte_buffer[172131] val isOwned[172110]:int(8)[85](172109 call int(64)[13] 8) unknown data[172118](172117 call c_ptr[205045](?) c_char[20591]) val size[172126]:uint(64)[115](172125 call uint(64)[115] 64)
  function chpl_byte_buffer_free[172140](arg cb[172137]:chpl_byte_buffer[172131]) : void[4] "extern" "local args" "no fn body" "no return value for void"
  {
    (522330 return _void[55])
  }
  unknown chpl__exportTypeChplByteBuffer[172145] "dead at end of block" "insert auto destroy" "type variable" chpl_byte_buffer[172131]
  function chpl__exportRetStringOrBytes[172152](ref arg val[172150]:_any[178](?)) : _unknown[51]
  {
    unknown ret[522334] "RVV" "temp"
    unknown result[172156] "dead at end of block" "insert auto destroy"
    (544701 'default init var' result[172156] chpl_byte_buffer[172131])
    (172159 'end of statement')
    unknown call_tmp[681306] "expr temp" "maybe param" "maybe type" "temp"
    (681309 'move' call_tmp[681306](172162 call isOwned _mt[243] result[172156]))
    unknown call_tmp[681311] "expr temp" "maybe param" "maybe type" "temp"
    (681314 'move' call_tmp[681311](172172 call int(64)[13] 8))
    unknown call_tmp[681318] "expr temp" "maybe param" "maybe type" "temp"
    (681321 'move' call_tmp[681318](172166 call isOwned _mt[243] val[172150]))
    unknown call_tmp[681323] "expr temp" "maybe param" "maybe type" "temp"
    (681326 'move' call_tmp[681323](172173 call _cast call_tmp[681311] call_tmp[681318]))
    (172175 call = call_tmp[681306] call_tmp[681323])
    (483222 'end of statement' result[172156])
    unknown call_tmp[681330] "expr temp" "maybe param" "maybe type" "temp"
    (681333 'move' call_tmp[681330](172179 call data _mt[243] result[172156]))
    unknown call_tmp[681335] "expr temp" "maybe param" "maybe type" "temp"
    (681338 'move' call_tmp[681335](172189 call c_ptr[205045](?) c_char[20591]))
    unknown call_tmp[681342] "expr temp" "maybe param" "maybe type" "temp"
    (681345 'move' call_tmp[681342](172183 call buff _mt[243] val[172150]))
    unknown call_tmp[681347] "expr temp" "maybe param" "maybe type" "temp"
    (681350 'move' call_tmp[681347](172190 call _cast call_tmp[681335] call_tmp[681342]))
    (172192 call = call_tmp[681330] call_tmp[681347])
    (483224 'end of statement' result[172156])
    unknown call_tmp[681354] "expr temp" "maybe param" "maybe type" "temp"
    (681357 'move' call_tmp[681354](172196 call size _mt[243] result[172156]))
    unknown call_tmp[681359] "expr temp" "maybe param" "maybe type" "temp"
    (681362 'move' call_tmp[681359](172206 call uint(64)[115] 64))
    unknown call_tmp[681366] "expr temp" "maybe param" "maybe type" "temp"
    (681369 'move' call_tmp[681366](172200 call numBytes _mt[243] val[172150]))
    unknown call_tmp[681371] "expr temp" "maybe param" "maybe type" "temp"
    (681374 'move' call_tmp[681371](172207 call _cast call_tmp[681359] call_tmp[681366]))
    (172209 call = call_tmp[681354] call_tmp[681371])
    (483226 'end of statement' result[172156])
    unknown call_tmp[681378] "expr temp" "maybe param" "maybe type" "temp"
    (681381 'move' call_tmp[681378](172213 call isOwned _mt[243] val[172150]))
    (172217 call = call_tmp[681378] 0)
    (483228 'end of statement')
    (522340 'move' ret[522334](522339 'coerce' result[172156] chpl_byte_buffer[172131]))
    gotoReturn _end_chpl__exportRetStringOrBytes[522332] _end_chpl__exportRetStringOrBytes[522332]
    (483229 'end of statement' result[172156])
    label _end_chpl__exportRetStringOrBytes[522332]
    (522336 return ret[522334])
  }
  { scopeless type
    chpl_byte_buffer[172131]
  }
  function chpl__exportRet[172232](ref arg val[172229]:string[26], arg rt[172235]:chpl_byte_buffer[172131]) : _unknown[51]
  {
    unknown ret[522346] "RVV" "temp"
    unknown call_tmp[681383] "expr temp" "maybe param" "maybe type" "temp"
    (681386 'move' call_tmp[681383](172242 call chpl__exportRetStringOrBytes val[172229]))
    (522352 'move' ret[522346](522351 'coerce' call_tmp[681383] rt[172235]))
    (522348 return ret[522346])
  }
  { scopeless type
    rt[172235]
  }
  function chpl__exportRet[172255](ref arg val[172252]:bytes[24], arg rt[172258]:chpl_byte_buffer[172131]) : _unknown[51]
  {
    unknown ret[522356] "RVV" "temp"
    unknown call_tmp[681388] "expr temp" "maybe param" "maybe type" "temp"
    (681391 'move' call_tmp[681388](172265 call chpl__exportRetStringOrBytes val[172252]))
    (522362 'move' ret[522356](522361 'coerce' call_tmp[681388] rt[172258]))
    (522358 return ret[522356])
  }
  { scopeless type
    rt[172258]
  }
  function chpl__exportArg[172278](arg cp[172275]:bool[10], arg val[172281]:chpl_byte_buffer[172131], arg rt[172285]:string[26]) : _unknown[51]
  {
    unknown ret[522366] "RVV" "temp"
    unknown call_tmp[681395] "expr temp" "maybe param" "maybe type" "temp"
    (681398 'move' call_tmp[681395](172290 call data _mt[243] val[172281]))
    unknown call_tmp[681400] "maybe param" "maybe type" "temp"
    (681403 'move' call_tmp[681400](172294 call _cast c_string[19] call_tmp[681395]))
    unknown data[172296] "dead at end of block" "insert auto destroy"
    (544703 'init var' data[172296] call_tmp[681400])
    (172299 'end of statement')
    unknown call_tmp[681407] "expr temp" "maybe param" "maybe type" "temp"
    (681410 'move' call_tmp[681407](172302 call size _mt[243] val[172281]))
    unknown call_tmp[681414] "maybe param" "maybe type" "temp"
    (681417 'move' call_tmp[681414](172310 call(172305 call (partial) safeCast _mt[243] call_tmp[681407]) int(64)[13]))
    unknown size[172311] "dead at end of block" "insert auto destroy"
    (544705 'init var' size[172311] call_tmp[681414])
    (172314 'end of statement')
    Try!
    {
      {
        unknown call_tmp[681419] "expr temp" "maybe param" "maybe type" "temp"
        (681422 'move' call_tmp[681419](172323 call _cond_test cp[172275]))
        if call_tmp[681419]
        {
          unknown call_tmp[681424] "expr temp" "maybe param" "maybe type" "temp"
          (681427 'move' call_tmp[681424](172320 call createStringWithNewBuffer data[172296] size[172311]))
          (522372 'move' ret[522366](522371 'coerce' call_tmp[681424] rt[172285]))
          gotoReturn _end_chpl__exportArg[522364] _end_chpl__exportArg[522364]
          (483233 'end of statement' data[172296] size[172311])
        }
        unknown call_tmp[681429] "expr temp" "maybe param" "maybe type" "temp"
        (681432 'move' call_tmp[681429](172333 call createStringWithBorrowedBuffer data[172296] size[172311]))
        (522378 'move' ret[522366](522377 'coerce' call_tmp[681429] rt[172285]))
        gotoReturn _end_chpl__exportArg[522364] _end_chpl__exportArg[522364]
        (483236 'end of statement' data[172296] size[172311])
      }
    }
    label _end_chpl__exportArg[522364]
    (522368 return ret[522366])
  }
  { scopeless type
    rt[172285]
  }
  function chpl__exportArg[172348](arg cp[172345]:bool[10], arg val[172351]:chpl_byte_buffer[172131], arg rt[172355]:bytes[24]) : _unknown[51]
  {
    unknown ret[522384] "RVV" "temp"
    unknown call_tmp[681436] "expr temp" "maybe param" "maybe type" "temp"
    (681439 'move' call_tmp[681436](172360 call data _mt[243] val[172351]))
    unknown call_tmp[681441] "maybe param" "maybe type" "temp"
    (681444 'move' call_tmp[681441](172364 call _cast c_string[19] call_tmp[681436]))
    unknown data[172366] "dead at end of block" "insert auto destroy"
    (544707 'init var' data[172366] call_tmp[681441])
    (172369 'end of statement')
    unknown call_tmp[681448] "expr temp" "maybe param" "maybe type" "temp"
    (681451 'move' call_tmp[681448](172372 call size _mt[243] val[172351]))
    unknown call_tmp[681455] "maybe param" "maybe type" "temp"
    (681458 'move' call_tmp[681455](172380 call(172375 call (partial) safeCast _mt[243] call_tmp[681448]) int(64)[13]))
    unknown size[172381] "dead at end of block" "insert auto destroy"
    (544709 'init var' size[172381] call_tmp[681455])
    (172384 'end of statement')
    Try!
    {
      {
        unknown call_tmp[681460] "expr temp" "maybe param" "maybe type" "temp"
        (681463 'move' call_tmp[681460](172393 call _cond_test cp[172345]))
        if call_tmp[681460]
        {
          unknown call_tmp[681465] "expr temp" "maybe param" "maybe type" "temp"
          (681468 'move' call_tmp[681465](172390 call createBytesWithNewBuffer data[172366] size[172381]))
          (522390 'move' ret[522384](522389 'coerce' call_tmp[681465] rt[172355]))
          gotoReturn _end_chpl__exportArg[522382] _end_chpl__exportArg[522382]
          (483239 'end of statement' data[172366] size[172381])
        }
        unknown call_tmp[681470] "expr temp" "maybe param" "maybe type" "temp"
        (681473 'move' call_tmp[681470](172403 call createBytesWithBorrowedBuffer data[172366] size[172381]))
        (522396 'move' ret[522384](522395 'coerce' call_tmp[681470] rt[172355]))
        gotoReturn _end_chpl__exportArg[522382] _end_chpl__exportArg[522382]
        (483242 'end of statement' data[172366] size[172381])
      }
    }
    label _end_chpl__exportArg[522382]
    (522386 return ret[522384])
  }
  { scopeless type
    rt[172355]
  }
  (355097 'used modules list'(172096 'use' ChapelStandard[20264])(172100 'use' CPtr[204934])(172103 'use' SysCTypes[20940]))
}