AST dump for ExportWrappers after pass normalize.
Module use list: ChapelStandard CPtr SysCTypes 

{
  function chpl__init_ExportWrappers[416084]() : void[4] "insert line file info" "module init"
  {
    (544854 'move' chpl__exportTypeChplByteBuffer[172157](544853 call chpl_byte_buffer[172143]))
    (483373 'end of statement')
    (522555 return _void[55])
  }
  type chpl_byte_buffer[172143] val isOwned[172122]:int(8)[85](172121 call int(64)[13] 8) unknown data[172130](172129 call c_ptr[205057](?) c_char[20591]) val size[172138]:uint(64)[115](172137 call uint(64)[115] 64)
  function chpl_byte_buffer_free[172152](arg cb[172149]:chpl_byte_buffer[172143]) : void[4] "extern" "local args" "no fn body" "no return value for void"
  {
    (522485 return _void[55])
  }
  unknown chpl__exportTypeChplByteBuffer[172157] "dead at end of block" "insert auto destroy" "type variable" chpl_byte_buffer[172143]
  function chpl__exportRetStringOrBytes[172164](ref arg val[172162]:_any[178](?)) : _unknown[51]
  {
    unknown ret[522489] "RVV" "temp"
    unknown result[172168] "dead at end of block" "insert auto destroy"
    (544856 'default init var' result[172168] chpl_byte_buffer[172143])
    (172171 'end of statement')
    unknown call_tmp[681444] "expr temp" "maybe param" "maybe type" "temp"
    (681447 'move' call_tmp[681444](172174 call isOwned _mt[243] result[172168]))
    unknown call_tmp[681449] "expr temp" "maybe param" "maybe type" "temp"
    (681452 'move' call_tmp[681449](172184 call int(64)[13] 8))
    unknown call_tmp[681456] "expr temp" "maybe param" "maybe type" "temp"
    (681459 'move' call_tmp[681456](172178 call isOwned _mt[243] val[172162]))
    unknown call_tmp[681461] "expr temp" "maybe param" "maybe type" "temp"
    (681464 'move' call_tmp[681461](172185 call _cast call_tmp[681449] call_tmp[681456]))
    (172187 call = call_tmp[681444] call_tmp[681461])
    (483374 'end of statement' result[172168])
    unknown call_tmp[681468] "expr temp" "maybe param" "maybe type" "temp"
    (681471 'move' call_tmp[681468](172191 call data _mt[243] result[172168]))
    unknown call_tmp[681473] "expr temp" "maybe param" "maybe type" "temp"
    (681476 'move' call_tmp[681473](172201 call c_ptr[205057](?) c_char[20591]))
    unknown call_tmp[681480] "expr temp" "maybe param" "maybe type" "temp"
    (681483 'move' call_tmp[681480](172195 call buff _mt[243] val[172162]))
    unknown call_tmp[681485] "expr temp" "maybe param" "maybe type" "temp"
    (681488 'move' call_tmp[681485](172202 call _cast call_tmp[681473] call_tmp[681480]))
    (172204 call = call_tmp[681468] call_tmp[681485])
    (483376 'end of statement' result[172168])
    unknown call_tmp[681492] "expr temp" "maybe param" "maybe type" "temp"
    (681495 'move' call_tmp[681492](172208 call size _mt[243] result[172168]))
    unknown call_tmp[681497] "expr temp" "maybe param" "maybe type" "temp"
    (681500 'move' call_tmp[681497](172218 call uint(64)[115] 64))
    unknown call_tmp[681504] "expr temp" "maybe param" "maybe type" "temp"
    (681507 'move' call_tmp[681504](172212 call numBytes _mt[243] val[172162]))
    unknown call_tmp[681509] "expr temp" "maybe param" "maybe type" "temp"
    (681512 'move' call_tmp[681509](172219 call _cast call_tmp[681497] call_tmp[681504]))
    (172221 call = call_tmp[681492] call_tmp[681509])
    (483378 'end of statement' result[172168])
    unknown call_tmp[681516] "expr temp" "maybe param" "maybe type" "temp"
    (681519 'move' call_tmp[681516](172225 call isOwned _mt[243] val[172162]))
    (172229 call = call_tmp[681516] 0)
    (483380 'end of statement')
    (522495 'move' ret[522489](522494 'coerce' result[172168] chpl_byte_buffer[172143]))
    gotoReturn _end_chpl__exportRetStringOrBytes[522487] _end_chpl__exportRetStringOrBytes[522487]
    (483381 'end of statement' result[172168])
    label _end_chpl__exportRetStringOrBytes[522487]
    (522491 return ret[522489])
  }
  { scopeless type
    chpl_byte_buffer[172143]
  }
  function chpl__exportRet[172244](ref arg val[172241]:string[26], arg rt[172247]:chpl_byte_buffer[172143]) : _unknown[51]
  {
    unknown ret[522501] "RVV" "temp"
    unknown call_tmp[681521] "expr temp" "maybe param" "maybe type" "temp"
    (681524 'move' call_tmp[681521](172254 call chpl__exportRetStringOrBytes val[172241]))
    (522507 'move' ret[522501](522506 'coerce' call_tmp[681521] rt[172247]))
    (522503 return ret[522501])
  }
  { scopeless type
    rt[172247]
  }
  function chpl__exportRet[172267](ref arg val[172264]:bytes[24], arg rt[172270]:chpl_byte_buffer[172143]) : _unknown[51]
  {
    unknown ret[522511] "RVV" "temp"
    unknown call_tmp[681526] "expr temp" "maybe param" "maybe type" "temp"
    (681529 'move' call_tmp[681526](172277 call chpl__exportRetStringOrBytes val[172264]))
    (522517 'move' ret[522511](522516 'coerce' call_tmp[681526] rt[172270]))
    (522513 return ret[522511])
  }
  { scopeless type
    rt[172270]
  }
  function chpl__exportArg[172290](arg cp[172287]:bool[10], arg val[172293]:chpl_byte_buffer[172143], arg rt[172297]:string[26]) : _unknown[51]
  {
    unknown ret[522521] "RVV" "temp"
    unknown call_tmp[681533] "expr temp" "maybe param" "maybe type" "temp"
    (681536 'move' call_tmp[681533](172302 call data _mt[243] val[172293]))
    unknown call_tmp[681538] "maybe param" "maybe type" "temp"
    (681541 'move' call_tmp[681538](172306 call _cast c_string[19] call_tmp[681533]))
    unknown data[172308] "dead at end of block" "insert auto destroy"
    (544858 'init var' data[172308] call_tmp[681538])
    (172311 'end of statement')
    unknown call_tmp[681545] "expr temp" "maybe param" "maybe type" "temp"
    (681548 'move' call_tmp[681545](172314 call size _mt[243] val[172293]))
    unknown call_tmp[681552] "maybe param" "maybe type" "temp"
    (681555 'move' call_tmp[681552](172322 call(172317 call (partial) safeCast _mt[243] call_tmp[681545]) int(64)[13]))
    unknown size[172323] "dead at end of block" "insert auto destroy"
    (544860 'init var' size[172323] call_tmp[681552])
    (172326 'end of statement')
    Try!
    {
      {
        unknown call_tmp[681557] "expr temp" "maybe param" "maybe type" "temp"
        (681560 'move' call_tmp[681557](172335 call _cond_test cp[172287]))
        if call_tmp[681557]
        {
          unknown call_tmp[681562] "expr temp" "maybe param" "maybe type" "temp"
          (681565 'move' call_tmp[681562](172332 call createStringWithNewBuffer data[172308] size[172323]))
          (522527 'move' ret[522521](522526 'coerce' call_tmp[681562] rt[172297]))
          gotoReturn _end_chpl__exportArg[522519] _end_chpl__exportArg[522519]
          (483385 'end of statement' data[172308] size[172323])
        }
        unknown call_tmp[681567] "expr temp" "maybe param" "maybe type" "temp"
        (681570 'move' call_tmp[681567](172345 call createStringWithBorrowedBuffer data[172308] size[172323]))
        (522533 'move' ret[522521](522532 'coerce' call_tmp[681567] rt[172297]))
        gotoReturn _end_chpl__exportArg[522519] _end_chpl__exportArg[522519]
        (483388 'end of statement' data[172308] size[172323])
      }
    }
    label _end_chpl__exportArg[522519]
    (522523 return ret[522521])
  }
  { scopeless type
    rt[172297]
  }
  function chpl__exportArg[172360](arg cp[172357]:bool[10], arg val[172363]:chpl_byte_buffer[172143], arg rt[172367]:bytes[24]) : _unknown[51]
  {
    unknown ret[522539] "RVV" "temp"
    unknown call_tmp[681574] "expr temp" "maybe param" "maybe type" "temp"
    (681577 'move' call_tmp[681574](172372 call data _mt[243] val[172363]))
    unknown call_tmp[681579] "maybe param" "maybe type" "temp"
    (681582 'move' call_tmp[681579](172376 call _cast c_string[19] call_tmp[681574]))
    unknown data[172378] "dead at end of block" "insert auto destroy"
    (544862 'init var' data[172378] call_tmp[681579])
    (172381 'end of statement')
    unknown call_tmp[681586] "expr temp" "maybe param" "maybe type" "temp"
    (681589 'move' call_tmp[681586](172384 call size _mt[243] val[172363]))
    unknown call_tmp[681593] "maybe param" "maybe type" "temp"
    (681596 'move' call_tmp[681593](172392 call(172387 call (partial) safeCast _mt[243] call_tmp[681586]) int(64)[13]))
    unknown size[172393] "dead at end of block" "insert auto destroy"
    (544864 'init var' size[172393] call_tmp[681593])
    (172396 'end of statement')
    Try!
    {
      {
        unknown call_tmp[681598] "expr temp" "maybe param" "maybe type" "temp"
        (681601 'move' call_tmp[681598](172405 call _cond_test cp[172357]))
        if call_tmp[681598]
        {
          unknown call_tmp[681603] "expr temp" "maybe param" "maybe type" "temp"
          (681606 'move' call_tmp[681603](172402 call createBytesWithNewBuffer data[172378] size[172393]))
          (522545 'move' ret[522539](522544 'coerce' call_tmp[681603] rt[172367]))
          gotoReturn _end_chpl__exportArg[522537] _end_chpl__exportArg[522537]
          (483391 'end of statement' data[172378] size[172393])
        }
        unknown call_tmp[681608] "expr temp" "maybe param" "maybe type" "temp"
        (681611 'move' call_tmp[681608](172415 call createBytesWithBorrowedBuffer data[172378] size[172393]))
        (522551 'move' ret[522539](522550 'coerce' call_tmp[681608] rt[172367]))
        gotoReturn _end_chpl__exportArg[522537] _end_chpl__exportArg[522537]
        (483394 'end of statement' data[172378] size[172393])
      }
    }
    label _end_chpl__exportArg[522537]
    (522541 return ret[522539])
  }
  { scopeless type
    rt[172367]
  }
  (355242 'used modules list'(172108 'use' ChapelStandard[20264])(172112 'use' CPtr[204946])(172115 'use' SysCTypes[20940]))
}