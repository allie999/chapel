AST dump for LocaleModelHelpFlat after pass addInitCalls.
Module use list: LocaleModelHelpSetup LocaleModelHelpRuntime SysCTypes 

{
  function chpl__init_LocaleModelHelpFlat[416093]() : void[4] "fast on" "insert line file info" "local fn" "module init" "resolved"
  {
    if chpl__init_LocaleModelHelpFlat_p[2591978]
    {
      goto _exit_chpl__init_LocaleModelHelpFlat[2592015] _exit_chpl__init_LocaleModelHelpFlat[2592015]
    }
    val modFormatStr[2591986]:c_string[19] "temp"
    val modStr[2591987]:c_string[19] "temp"
    ref refIndentLevel[2592001]:int(32)[95] "temp"
    (2591994 'move' modFormatStr[2591986] c"%*s\n")
    (2591996 'move' modStr[2591987] c"LocaleModelHelpFlat")
    (2591999 call printModuleInit[20429] modFormatStr[2591986] modStr[2591987] 19)
    (2592005 'move' refIndentLevel[2592001](2592004 'addr of' moduleInitLevel[20419]))
    (2592008 '+=' refIndentLevel[2592001] 1)
    (2591984 'move' chpl__init_LocaleModelHelpFlat_p[2591978] 1)
    {
      (2590147 call chpl__init_LocaleModelHelpSetup[416120])
      (2590149 call chpl__init_LocaleModelHelpRuntime[416123])
      (2590151 call chpl__init_SysCTypes[415946])
    }
    (2592011 '-=' refIndentLevel[2592001] 1)
    label _endchpl__init_LocaleModelHelpFlat[2592017]
    label _exit_chpl__init_LocaleModelHelpFlat[2592015]
    (524078 return _void[55])
  }
  function _local_chpl_doDirectExecuteOn[2522776](const in arg loc[2522778]:chpl_localeID_t[209352]) : bool[10] "export" "local args" "local fn" "resolved"
  {
    const-val call_tmp[2522781]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (2522783 'move' call_tmp[2522781](2522786 call _local_chpl_nodeFromLocaleID[2523741] loc[2522778]))
    const-val call_tmp[2522788]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2522790 'move' call_tmp[2522788](2522792 '==' call_tmp[2522781] chpl_nodeID[208207]))
    label _end_chpl_doDirectExecuteOn[2522795]
    (2522797 return call_tmp[2522788])
  }
  function chpl_doDirectExecuteOn[187469](const in arg loc[187466]:chpl_localeID_t[209352]) : bool[10] "export" "local args" "resolved"
  {
    const-val call_tmp[690616]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (690619 'move' call_tmp[690616](187475 call chpl_nodeFromLocaleID[209492] loc[187466]))
    const-val call_tmp[2211176]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2211178 'move' call_tmp[2211176](2211180 '==' call_tmp[690616] chpl_nodeID[208207]))
    label _end_chpl_doDirectExecuteOn[524060]
    (524064 return call_tmp[2211176])
  }
  function chpl_executeOn[187496](const in arg loc[187493]:chpl_localeID_t[209352], const in arg fn[187499]:int(64)[13], const in arg args[187503]:chpl_comm_on_bundle_p[209375], const in arg args_size[187507]:uint(64)[115]) : void[4] "export" "insert line file info" "local args" "resolved" "no return value for void"
  {
    const-val call_tmp[690626]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (690629 'move' call_tmp[690626](187513 call chpl_nodeFromLocaleID[209492] loc[187493]))
    const-val call_tmp[2211186]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2211188 'move' call_tmp[2211186](2211190 '==' call_tmp[690626] chpl_nodeID[208207]))
    if call_tmp[2211186]
    {
      (187527 call chpl_ftable_call[209628] fn[187499] args[187503])
    }
    {
      val call_tmp[690641]:c_ptr(chpl_task_infoChapel_t)[1554331] "dead at end of block" "maybe param" "temp"
      (690644 'move' call_tmp[690641](187532 call chpl_task_getInfoChapel[88584]))
      const-val call_tmp[690646]:chpl_task_bundle_p[209381] "dead after last mention" "expr temp" "maybe param" "temp"
      (690649 'move' call_tmp[690646](187542 call chpl_comm_on_bundle_task_bundle[209389] args[187503]))
      (187545 call chpl_task_data_setup[88614] call_tmp[690646] call_tmp[690641])
      const-val call_tmp[690651]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (690654 'move' call_tmp[690651](187553 call chpl_sublocFromLocaleID[209509] loc[187493]))
      const-val coerce_tmp[1554878]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1554884 'move' coerce_tmp[1554878](1554880 'cast' int(64)[13] call_tmp[690626]))
      const-val coerce_tmp[1554886]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1554892 'move' coerce_tmp[1554886](1554888 'cast' int(64)[13] call_tmp[690651]))
      (187557 call chpl_comm_execute_on[209526] coerce_tmp[1554878] coerce_tmp[1554886] fn[187499] args[187503] args_size[187507])
    }
    (524072 return _void[55])
  }
  function chpl_executeOnFast[187571](const in arg loc[187568]:chpl_localeID_t[209352], const in arg fn[187574]:int(64)[13], const in arg args[187578]:chpl_comm_on_bundle_p[209375], const in arg args_size[187582]:uint(64)[115]) : void[4] "export" "insert line file info" "local args" "resolved" "no return value for void"
  {
    const-val call_tmp[690656]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (690659 'move' call_tmp[690656](187588 call chpl_nodeFromLocaleID[209492] loc[187568]))
    const-val call_tmp[2211196]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2211198 'move' call_tmp[2211196](2211200 '==' call_tmp[690656] chpl_nodeID[208207]))
    if call_tmp[2211196]
    {
      (187602 call chpl_ftable_call[209628] fn[187574] args[187578])
    }
    {
      val call_tmp[690671]:c_ptr(chpl_task_infoChapel_t)[1554331] "dead at end of block" "maybe param" "temp"
      (690674 'move' call_tmp[690671](187607 call chpl_task_getInfoChapel[88584]))
      const-val call_tmp[690676]:chpl_task_bundle_p[209381] "dead after last mention" "expr temp" "maybe param" "temp"
      (690679 'move' call_tmp[690676](187617 call chpl_comm_on_bundle_task_bundle[209389] args[187578]))
      (187620 call chpl_task_data_setup[88614] call_tmp[690676] call_tmp[690671])
      const-val call_tmp[690681]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (690684 'move' call_tmp[690681](187628 call chpl_sublocFromLocaleID[209509] loc[187568]))
      const-val coerce_tmp[1554905]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1554911 'move' coerce_tmp[1554905](1554907 'cast' int(64)[13] call_tmp[690656]))
      const-val coerce_tmp[1554913]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1554919 'move' coerce_tmp[1554913](1554915 'cast' int(64)[13] call_tmp[690681]))
      (187632 call chpl_comm_execute_on_fast[209552] coerce_tmp[1554905] coerce_tmp[1554913] fn[187574] args[187578] args_size[187582])
    }
    (524074 return _void[55])
  }
  function chpl_executeOnNB[187646](const in arg loc[187643]:chpl_localeID_t[209352], const in arg fn[187649]:int(64)[13], const in arg args[187653]:chpl_comm_on_bundle_p[209375], const in arg args_size[187657]:uint(64)[115]) : void[4] "export" "insert line file info" "local args" "resolved" "no return value for void"
  {
    const-val call_tmp[690686]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (690689 'move' call_tmp[690686](187663 call chpl_nodeFromLocaleID[209492] loc[187643]))
    val call_tmp[690691]:c_ptr(chpl_task_infoChapel_t)[1554331] "dead at end of block" "maybe param" "temp"
    (690694 'move' call_tmp[690691](187671 call chpl_task_getInfoChapel[88584]))
    const-val call_tmp[690696]:bool[10] "dead at end of block" "maybe param" "temp"
    (690699 'move' call_tmp[690696](187679 call chpl_task_data_getSerial[171284] call_tmp[690691]))
    const-val call_tmp[2211206]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2211208 'move' call_tmp[2211206](2211210 '==' call_tmp[690686] chpl_nodeID[208207]))
    if call_tmp[2211206]
    {
      if call_tmp[690696]
      {
        (187693 call chpl_ftable_call[209628] fn[187649] args[187653])
      }
      {
        const-val call_tmp[690716]:chpl_task_bundle_p[209381] "dead after last mention" "expr temp" "maybe param" "temp"
        (690719 'move' call_tmp[690716](187700 call chpl_comm_on_bundle_task_bundle[209389] args[187653]))
        (187703 call chpl_task_data_setup[88614] call_tmp[690716] call_tmp[690691])
        const-val coerce_tmp[1554932]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1554938 'move' coerce_tmp[1554932](1554934 'cast' int(64)[13] c_sublocid_any[89878]))
        (187712 call chpl_comm_taskCallFTable[209604] fn[187649] args[187653] args_size[187657] coerce_tmp[1554932])
      }
    }
    {
      const-val call_tmp[690721]:chpl_task_bundle_p[209381] "dead after last mention" "expr temp" "maybe param" "temp"
      (690724 'move' call_tmp[690721](187723 call chpl_comm_on_bundle_task_bundle[209389] args[187653]))
      (187726 call chpl_task_data_setup[88614] call_tmp[690721] call_tmp[690691])
      if call_tmp[690696]
      {
        const-val coerce_tmp[1554943]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1554949 'move' coerce_tmp[1554943](1554945 'cast' int(64)[13] call_tmp[690686]))
        const-val coerce_tmp[1554951]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1554957 'move' coerce_tmp[1554951](1554953 'cast' int(64)[13] c_sublocid_any[89878]))
        (187737 call chpl_comm_execute_on[209526] coerce_tmp[1554943] coerce_tmp[1554951] fn[187649] args[187653] args_size[187657])
      }
      {
        const-val coerce_tmp[1554960]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1554966 'move' coerce_tmp[1554960](1554962 'cast' int(64)[13] call_tmp[690686]))
        const-val coerce_tmp[1554968]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1554974 'move' coerce_tmp[1554968](1554970 'cast' int(64)[13] c_sublocid_any[89878]))
        (187747 call chpl_comm_execute_on_nb[209578] coerce_tmp[1554960] coerce_tmp[1554968] fn[187649] args[187653] args_size[187657])
      }
    }
    (524076 return _void[55])
  }
}