AST dump for LocaleModelHelpFlat after pass addInitCalls.
Module use list: LocaleModelHelpSetup LocaleModelHelpRuntime SysCTypes 

{
  function chpl__init_LocaleModelHelpFlat[416088]() : void[4] "fast on" "insert line file info" "local fn" "module init" "resolved"
  {
    if chpl__init_LocaleModelHelpFlat_p[2402006]
    {
      goto _exit_chpl__init_LocaleModelHelpFlat[2402043] _exit_chpl__init_LocaleModelHelpFlat[2402043]
    }
    val modFormatStr[2402014]:c_string[19] "temp"
    val modStr[2402015]:c_string[19] "temp"
    ref refIndentLevel[2402029]:int(32)[95] "temp"
    (2402022 'move' modFormatStr[2402014] c"%*s\n")
    (2402024 'move' modStr[2402015] c"LocaleModelHelpFlat")
    (2402027 call printModuleInit[20429] modFormatStr[2402014] modStr[2402015] 19)
    (2402033 'move' refIndentLevel[2402029](2402032 'addr of' moduleInitLevel[20419]))
    (2402036 '+=' refIndentLevel[2402029] 1)
    (2402012 'move' chpl__init_LocaleModelHelpFlat_p[2402006] 1)
    {
      (2400180 call chpl__init_LocaleModelHelpSetup[416115])
      (2400182 call chpl__init_LocaleModelHelpRuntime[416118])
      (2400184 call chpl__init_SysCTypes[415941])
    }
    (2402039 '-=' refIndentLevel[2402029] 1)
    label _endchpl__init_LocaleModelHelpFlat[2402045]
    label _exit_chpl__init_LocaleModelHelpFlat[2402043]
    (524073 return _void[55])
  }
  function _local_chpl_doDirectExecuteOn[2336816](const in arg loc[2336818]:chpl_localeID_t[209352]) : bool[10] "export" "local args" "local fn" "resolved"
  {
    const-val call_tmp[2336821]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (2336823 'move' call_tmp[2336821](2336826 call _local_chpl_nodeFromLocaleID[2337781] loc[2336818]))
    const-val call_tmp[2336828]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2336830 'move' call_tmp[2336828](2336832 '==' call_tmp[2336821] chpl_nodeID[208207]))
    label _end_chpl_doDirectExecuteOn[2336835]
    (2336837 return call_tmp[2336828])
  }
  function chpl_doDirectExecuteOn[187469](const in arg loc[187466]:chpl_localeID_t[209352]) : bool[10] "export" "local args" "resolved"
  {
    const-val call_tmp[690600]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (690603 'move' call_tmp[690600](187475 call chpl_nodeFromLocaleID[209492] loc[187466]))
    const-val call_tmp[2110542]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2110544 'move' call_tmp[2110542](2110546 '==' call_tmp[690600] chpl_nodeID[208207]))
    label _end_chpl_doDirectExecuteOn[524055]
    (524059 return call_tmp[2110542])
  }
  function chpl_executeOn[187496](const in arg loc[187493]:chpl_localeID_t[209352], const in arg fn[187499]:int(64)[13], const in arg args[187503]:chpl_comm_on_bundle_p[209375], const in arg args_size[187507]:uint(64)[115]) : void[4] "export" "insert line file info" "local args" "resolved" "no return value for void"
  {
    const-val call_tmp[690610]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (690613 'move' call_tmp[690610](187513 call chpl_nodeFromLocaleID[209492] loc[187493]))
    const-val call_tmp[2110552]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2110554 'move' call_tmp[2110552](2110556 '==' call_tmp[690610] chpl_nodeID[208207]))
    if call_tmp[2110552]
    {
      (187527 call chpl_ftable_call[209628] fn[187499] args[187503])
    }
    {
      val call_tmp[690625]:c_ptr(chpl_task_infoChapel_t)[1414662] "dead at end of block" "maybe param" "temp"
      (690628 'move' call_tmp[690625](187532 call chpl_task_getInfoChapel[88584]))
      const-val call_tmp[690630]:chpl_task_bundle_p[209381] "dead after last mention" "expr temp" "maybe param" "temp"
      (690633 'move' call_tmp[690630](187542 call chpl_comm_on_bundle_task_bundle[209389] args[187503]))
      (187545 call chpl_task_data_setup[88614] call_tmp[690630] call_tmp[690625])
      const-val call_tmp[690635]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (690638 'move' call_tmp[690635](187553 call chpl_sublocFromLocaleID[209509] loc[187493]))
      const-val coerce_tmp[1415209]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1415215 'move' coerce_tmp[1415209](1415211 'cast' int(64)[13] call_tmp[690610]))
      const-val coerce_tmp[1415217]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1415223 'move' coerce_tmp[1415217](1415219 'cast' int(64)[13] call_tmp[690635]))
      (187557 call chpl_comm_execute_on[209526] coerce_tmp[1415209] coerce_tmp[1415217] fn[187499] args[187503] args_size[187507])
    }
    (524067 return _void[55])
  }
  function chpl_executeOnFast[187571](const in arg loc[187568]:chpl_localeID_t[209352], const in arg fn[187574]:int(64)[13], const in arg args[187578]:chpl_comm_on_bundle_p[209375], const in arg args_size[187582]:uint(64)[115]) : void[4] "export" "insert line file info" "local args" "resolved" "no return value for void"
  {
    const-val call_tmp[690640]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (690643 'move' call_tmp[690640](187588 call chpl_nodeFromLocaleID[209492] loc[187568]))
    const-val call_tmp[2110562]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2110564 'move' call_tmp[2110562](2110566 '==' call_tmp[690640] chpl_nodeID[208207]))
    if call_tmp[2110562]
    {
      (187602 call chpl_ftable_call[209628] fn[187574] args[187578])
    }
    {
      val call_tmp[690655]:c_ptr(chpl_task_infoChapel_t)[1414662] "dead at end of block" "maybe param" "temp"
      (690658 'move' call_tmp[690655](187607 call chpl_task_getInfoChapel[88584]))
      const-val call_tmp[690660]:chpl_task_bundle_p[209381] "dead after last mention" "expr temp" "maybe param" "temp"
      (690663 'move' call_tmp[690660](187617 call chpl_comm_on_bundle_task_bundle[209389] args[187578]))
      (187620 call chpl_task_data_setup[88614] call_tmp[690660] call_tmp[690655])
      const-val call_tmp[690665]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (690668 'move' call_tmp[690665](187628 call chpl_sublocFromLocaleID[209509] loc[187568]))
      const-val coerce_tmp[1415236]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1415242 'move' coerce_tmp[1415236](1415238 'cast' int(64)[13] call_tmp[690640]))
      const-val coerce_tmp[1415244]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1415250 'move' coerce_tmp[1415244](1415246 'cast' int(64)[13] call_tmp[690665]))
      (187632 call chpl_comm_execute_on_fast[209552] coerce_tmp[1415236] coerce_tmp[1415244] fn[187574] args[187578] args_size[187582])
    }
    (524069 return _void[55])
  }
  function chpl_executeOnNB[187646](const in arg loc[187643]:chpl_localeID_t[209352], const in arg fn[187649]:int(64)[13], const in arg args[187653]:chpl_comm_on_bundle_p[209375], const in arg args_size[187657]:uint(64)[115]) : void[4] "export" "insert line file info" "local args" "resolved" "no return value for void"
  {
    const-val call_tmp[690670]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (690673 'move' call_tmp[690670](187663 call chpl_nodeFromLocaleID[209492] loc[187643]))
    val call_tmp[690675]:c_ptr(chpl_task_infoChapel_t)[1414662] "dead at end of block" "maybe param" "temp"
    (690678 'move' call_tmp[690675](187671 call chpl_task_getInfoChapel[88584]))
    const-val call_tmp[690680]:bool[10] "dead at end of block" "maybe param" "temp"
    (690683 'move' call_tmp[690680](187679 call chpl_task_data_getSerial[171284] call_tmp[690675]))
    const-val call_tmp[2110572]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2110574 'move' call_tmp[2110572](2110576 '==' call_tmp[690670] chpl_nodeID[208207]))
    if call_tmp[2110572]
    {
      if call_tmp[690680]
      {
        (187693 call chpl_ftable_call[209628] fn[187649] args[187653])
      }
      {
        const-val call_tmp[690700]:chpl_task_bundle_p[209381] "dead after last mention" "expr temp" "maybe param" "temp"
        (690703 'move' call_tmp[690700](187700 call chpl_comm_on_bundle_task_bundle[209389] args[187653]))
        (187703 call chpl_task_data_setup[88614] call_tmp[690700] call_tmp[690675])
        const-val coerce_tmp[1415263]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1415269 'move' coerce_tmp[1415263](1415265 'cast' int(64)[13] c_sublocid_any[89878]))
        (187712 call chpl_comm_taskCallFTable[209604] fn[187649] args[187653] args_size[187657] coerce_tmp[1415263])
      }
    }
    {
      const-val call_tmp[690705]:chpl_task_bundle_p[209381] "dead after last mention" "expr temp" "maybe param" "temp"
      (690708 'move' call_tmp[690705](187723 call chpl_comm_on_bundle_task_bundle[209389] args[187653]))
      (187726 call chpl_task_data_setup[88614] call_tmp[690705] call_tmp[690675])
      if call_tmp[690680]
      {
        const-val coerce_tmp[1415274]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1415280 'move' coerce_tmp[1415274](1415276 'cast' int(64)[13] call_tmp[690670]))
        const-val coerce_tmp[1415282]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1415288 'move' coerce_tmp[1415282](1415284 'cast' int(64)[13] c_sublocid_any[89878]))
        (187737 call chpl_comm_execute_on[209526] coerce_tmp[1415274] coerce_tmp[1415282] fn[187649] args[187653] args_size[187657])
      }
      {
        const-val coerce_tmp[1415291]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1415297 'move' coerce_tmp[1415291](1415293 'cast' int(64)[13] call_tmp[690670]))
        const-val coerce_tmp[1415299]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1415305 'move' coerce_tmp[1415299](1415301 'cast' int(64)[13] c_sublocid_any[89878]))
        (187747 call chpl_comm_execute_on_nb[209578] coerce_tmp[1415291] coerce_tmp[1415299] fn[187649] args[187653] args_size[187657])
      }
    }
    (524071 return _void[55])
  }
}