AST dump for LocaleModelHelpFlat after pass addInitCalls.
Module use list: LocaleModelHelpSetup LocaleModelHelpRuntime SysCTypes 

{
  function chpl__init_LocaleModelHelpFlat[416166]() : void[4] "fast on" "insert line file info" "local fn" "module init" "resolved"
  {
    if chpl__init_LocaleModelHelpFlat_p[2656476]
    {
      goto _exit_chpl__init_LocaleModelHelpFlat[2656513] _exit_chpl__init_LocaleModelHelpFlat[2656513]
    }
    val modFormatStr[2656484]:c_string[19] "temp"
    val modStr[2656485]:c_string[19] "temp"
    ref refIndentLevel[2656499]:int(32)[95] "temp"
    (2656492 'move' modFormatStr[2656484] c"%*s\n")
    (2656494 'move' modStr[2656485] c"LocaleModelHelpFlat")
    (2656497 call printModuleInit[20429] modFormatStr[2656484] modStr[2656485] 19)
    (2656503 'move' refIndentLevel[2656499](2656502 'addr of' moduleInitLevel[20419]))
    (2656506 '+=' refIndentLevel[2656499] 1)
    (2656482 'move' chpl__init_LocaleModelHelpFlat_p[2656476] 1)
    {
      (2654645 call chpl__init_LocaleModelHelpSetup[416193])
      (2654647 call chpl__init_LocaleModelHelpRuntime[416196])
      (2654649 call chpl__init_SysCTypes[416019])
    }
    (2656509 '-=' refIndentLevel[2656499] 1)
    label _endchpl__init_LocaleModelHelpFlat[2656515]
    label _exit_chpl__init_LocaleModelHelpFlat[2656513]
    (524156 return _void[55])
  }
  function _local_chpl_doDirectExecuteOn[2585146](const in arg loc[2585148]:chpl_localeID_t[209352]) : bool[10] "export" "local args" "local fn" "resolved"
  {
    const-val call_tmp[2585151]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (2585153 'move' call_tmp[2585151](2585156 call _local_chpl_nodeFromLocaleID[2586111] loc[2585148]))
    const-val call_tmp[2585158]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2585160 'move' call_tmp[2585158](2585162 '==' call_tmp[2585151] chpl_nodeID[208207]))
    label _end_chpl_doDirectExecuteOn[2585165]
    (2585167 return call_tmp[2585158])
  }
  function chpl_doDirectExecuteOn[187469](const in arg loc[187466]:chpl_localeID_t[209352]) : bool[10] "export" "local args" "resolved"
  {
    const-val call_tmp[690703]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (690706 'move' call_tmp[690703](187475 call chpl_nodeFromLocaleID[209492] loc[187466]))
    const-val call_tmp[2264391]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2264393 'move' call_tmp[2264391](2264395 '==' call_tmp[690703] chpl_nodeID[208207]))
    label _end_chpl_doDirectExecuteOn[524138]
    (524142 return call_tmp[2264391])
  }
  function chpl_executeOn[187496](const in arg loc[187493]:chpl_localeID_t[209352], const in arg fn[187499]:int(64)[13], const in arg args[187503]:chpl_comm_on_bundle_p[209375], const in arg args_size[187507]:uint(64)[115]) : void[4] "export" "insert line file info" "local args" "resolved" "no return value for void"
  {
    const-val call_tmp[690713]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (690716 'move' call_tmp[690713](187513 call chpl_nodeFromLocaleID[209492] loc[187493]))
    const-val call_tmp[2264401]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2264403 'move' call_tmp[2264401](2264405 '==' call_tmp[690713] chpl_nodeID[208207]))
    if call_tmp[2264401]
    {
      (187527 call chpl_ftable_call[209628] fn[187499] args[187503])
    }
    {
      val call_tmp[690728]:c_ptr(chpl_task_infoChapel_t)[1593776] "dead at end of block" "maybe param" "temp"
      (690731 'move' call_tmp[690728](187532 call chpl_task_getInfoChapel[88584]))
      const-val call_tmp[690733]:chpl_task_bundle_p[209381] "dead after last mention" "expr temp" "maybe param" "temp"
      (690736 'move' call_tmp[690733](187542 call chpl_comm_on_bundle_task_bundle[209389] args[187503]))
      (187545 call chpl_task_data_setup[88614] call_tmp[690733] call_tmp[690728])
      const-val call_tmp[690738]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (690741 'move' call_tmp[690738](187553 call chpl_sublocFromLocaleID[209509] loc[187493]))
      const-val coerce_tmp[1594323]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1594329 'move' coerce_tmp[1594323](1594325 'cast' int(64)[13] call_tmp[690713]))
      const-val coerce_tmp[1594331]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1594337 'move' coerce_tmp[1594331](1594333 'cast' int(64)[13] call_tmp[690738]))
      (187557 call chpl_comm_execute_on[209526] coerce_tmp[1594323] coerce_tmp[1594331] fn[187499] args[187503] args_size[187507])
    }
    (524150 return _void[55])
  }
  function chpl_executeOnFast[187571](const in arg loc[187568]:chpl_localeID_t[209352], const in arg fn[187574]:int(64)[13], const in arg args[187578]:chpl_comm_on_bundle_p[209375], const in arg args_size[187582]:uint(64)[115]) : void[4] "export" "insert line file info" "local args" "resolved" "no return value for void"
  {
    const-val call_tmp[690743]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (690746 'move' call_tmp[690743](187588 call chpl_nodeFromLocaleID[209492] loc[187568]))
    const-val call_tmp[2264411]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2264413 'move' call_tmp[2264411](2264415 '==' call_tmp[690743] chpl_nodeID[208207]))
    if call_tmp[2264411]
    {
      (187602 call chpl_ftable_call[209628] fn[187574] args[187578])
    }
    {
      val call_tmp[690758]:c_ptr(chpl_task_infoChapel_t)[1593776] "dead at end of block" "maybe param" "temp"
      (690761 'move' call_tmp[690758](187607 call chpl_task_getInfoChapel[88584]))
      const-val call_tmp[690763]:chpl_task_bundle_p[209381] "dead after last mention" "expr temp" "maybe param" "temp"
      (690766 'move' call_tmp[690763](187617 call chpl_comm_on_bundle_task_bundle[209389] args[187578]))
      (187620 call chpl_task_data_setup[88614] call_tmp[690763] call_tmp[690758])
      const-val call_tmp[690768]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (690771 'move' call_tmp[690768](187628 call chpl_sublocFromLocaleID[209509] loc[187568]))
      const-val coerce_tmp[1594350]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1594356 'move' coerce_tmp[1594350](1594352 'cast' int(64)[13] call_tmp[690743]))
      const-val coerce_tmp[1594358]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1594364 'move' coerce_tmp[1594358](1594360 'cast' int(64)[13] call_tmp[690768]))
      (187632 call chpl_comm_execute_on_fast[209552] coerce_tmp[1594350] coerce_tmp[1594358] fn[187574] args[187578] args_size[187582])
    }
    (524152 return _void[55])
  }
  function chpl_executeOnNB[187646](const in arg loc[187643]:chpl_localeID_t[209352], const in arg fn[187649]:int(64)[13], const in arg args[187653]:chpl_comm_on_bundle_p[209375], const in arg args_size[187657]:uint(64)[115]) : void[4] "export" "insert line file info" "local args" "resolved" "no return value for void"
  {
    const-val call_tmp[690773]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (690776 'move' call_tmp[690773](187663 call chpl_nodeFromLocaleID[209492] loc[187643]))
    val call_tmp[690778]:c_ptr(chpl_task_infoChapel_t)[1593776] "dead at end of block" "maybe param" "temp"
    (690781 'move' call_tmp[690778](187671 call chpl_task_getInfoChapel[88584]))
    const-val call_tmp[690783]:bool[10] "dead at end of block" "maybe param" "temp"
    (690786 'move' call_tmp[690783](187679 call chpl_task_data_getSerial[171284] call_tmp[690778]))
    const-val call_tmp[2264421]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2264423 'move' call_tmp[2264421](2264425 '==' call_tmp[690773] chpl_nodeID[208207]))
    if call_tmp[2264421]
    {
      if call_tmp[690783]
      {
        (187693 call chpl_ftable_call[209628] fn[187649] args[187653])
      }
      {
        const-val call_tmp[690803]:chpl_task_bundle_p[209381] "dead after last mention" "expr temp" "maybe param" "temp"
        (690806 'move' call_tmp[690803](187700 call chpl_comm_on_bundle_task_bundle[209389] args[187653]))
        (187703 call chpl_task_data_setup[88614] call_tmp[690803] call_tmp[690778])
        const-val coerce_tmp[1594377]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1594383 'move' coerce_tmp[1594377](1594379 'cast' int(64)[13] c_sublocid_any[89878]))
        (187712 call chpl_comm_taskCallFTable[209604] fn[187649] args[187653] args_size[187657] coerce_tmp[1594377])
      }
    }
    {
      const-val call_tmp[690808]:chpl_task_bundle_p[209381] "dead after last mention" "expr temp" "maybe param" "temp"
      (690811 'move' call_tmp[690808](187723 call chpl_comm_on_bundle_task_bundle[209389] args[187653]))
      (187726 call chpl_task_data_setup[88614] call_tmp[690808] call_tmp[690778])
      if call_tmp[690783]
      {
        const-val coerce_tmp[1594388]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1594394 'move' coerce_tmp[1594388](1594390 'cast' int(64)[13] call_tmp[690773]))
        const-val coerce_tmp[1594396]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1594402 'move' coerce_tmp[1594396](1594398 'cast' int(64)[13] c_sublocid_any[89878]))
        (187737 call chpl_comm_execute_on[209526] coerce_tmp[1594388] coerce_tmp[1594396] fn[187649] args[187653] args_size[187657])
      }
      {
        const-val coerce_tmp[1594405]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1594411 'move' coerce_tmp[1594405](1594407 'cast' int(64)[13] call_tmp[690773]))
        const-val coerce_tmp[1594413]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1594419 'move' coerce_tmp[1594413](1594415 'cast' int(64)[13] c_sublocid_any[89878]))
        (187747 call chpl_comm_execute_on_nb[209578] coerce_tmp[1594405] coerce_tmp[1594413] fn[187649] args[187653] args_size[187657])
      }
    }
    (524154 return _void[55])
  }
}