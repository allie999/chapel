AST dump for String after pass bulkCopyRecords.
Module use list: ChapelStandard SysCTypes ByteBufferHelpers BytesStringCommon SysBasic CString StringCasts NVStringFactory 

{
  type _class_localson_fn[2153366] val _runtime_hdr[2153367]:chpl_comm_on_bundle_t[209359] val _0_tmp[2153369]:chpl_localeID_t[209352] val _1_needle_data[2153371]:__serializeHelper[28089] ref _2_this[2153373]:string[26] val _3_region[2153375]:range(byteIndex,boundedLow,false)[1143464] ref _4_ret[2153377]:int(64)[13]
  type _class_localson_fn[2152798] val _runtime_hdr[2152799]:chpl_comm_on_bundle_t[209359] val _0_tmp[2152801]:chpl_localeID_t[209352] val _1_needle_data[2152803]:__serializeHelper[28089] ref _2_this[2152805]:string[26] val _3_region[2152807]:range(byteIndex,bounded,false)[1025853] ref _4_ret[2152809]:int(64)[13]
  type _class_localson_fn[2147329] val _runtime_hdr[2147330]:chpl_comm_on_bundle_t[209359] val _0_tmp[2147332]:chpl_localeID_t[209352] ref _1_this[2147334]:string[26] ref _2_result[2147336]:bool[10]
  type _class_localson_fn[2147237] val _runtime_hdr[2147238]:chpl_comm_on_bundle_t[209359] val _0_tmp[2147240]:chpl_localeID_t[209352] ref _1_this[2147242]:string[26]
  function chpl__init_String[415961]() : void[4] "insert line file info" "module init" "resolved"
  {
    {
    }
    (505090 return _void[55])
  }
  def module NVStringFactory[30567]  
  const-val CHPL_SHORT_STRING_SIZE[28016]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  function _ref(chpl__inPlaceBuffer)[967501].deinit[753022](const  ref arg this[753026]:_ref(chpl__inPlaceBuffer)[967501]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved"
  {
    (753034 return _void[55])
  }
  type chpl__inPlaceBuffer[28022]
  function chpl__getInPlaceBufferData[28033](const  ref arg data[28030]:_ref(chpl__inPlaceBuffer)[967501]) : c_ptr(uint(8))[937484] "extern" "local args" "no fn body" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[502967]:c_ptr(uint(8))[937484] "RVV" "temp"
    (502969 return ret[502967])
  }
  function chpl__getInPlaceBufferDataForWrite[28045](ref arg data[28042]:_ref(chpl__inPlaceBuffer)[967501]) : c_ptr(uint(8))[937484] "extern" "local args" "no fn body" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[502973]:c_ptr(uint(8))[937484] "RVV" "temp"
    (502975 return ret[502973])
  }
  function _ref(__serializeHelper)[938078].buffLen[753535](ref arg this[753539]:_ref(__serializeHelper)[938078]) ref : _ref(int(64))[936633] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[753549]:_ref(int(64))[936633] "dead after last mention" "RVV" "temp"
    ref call_tmp[753556]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
    (753559 'move' call_tmp[753556](753543 '.' this[753539] buffLen[28058]))
    (753554 'move' ret[753549] call_tmp[753556])
    (753551 return ret[753549])
  }
  function _ref(__serializeHelper)[938078].buff[753561](ref arg this[753565]:_ref(__serializeHelper)[938078]) ref : _ref(c_ptr(uint(8)))[937493] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[753575]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "RVV" "temp"
    ref call_tmp[753582]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "temp"
    (753585 'move' call_tmp[753582](753569 '.' this[753565] buff[28063]))
    (753580 'move' ret[753575] call_tmp[753582])
    (753577 return ret[753575])
  }
  function _ref(__serializeHelper)[938078].size[753587](ref arg this[753591]:_ref(__serializeHelper)[938078]) ref : _ref(int(64))[936633] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[753601]:_ref(int(64))[936633] "dead after last mention" "RVV" "temp"
    ref call_tmp[753608]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
    (753611 'move' call_tmp[753608](753595 '.' this[753591] size[28068]))
    (753606 'move' ret[753601] call_tmp[753608])
    (753603 return ret[753601])
  }
  function _ref(__serializeHelper)[938078].locale_id[753613](ref arg this[753617]:_ref(__serializeHelper)[938078]) ref : _ref(int(32))[936687] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[753627]:_ref(int(32))[936687] "dead after last mention" "RVV" "temp"
    ref call_tmp[753634]:_ref(int(32))[936687] "dead after last mention" "maybe param" "temp"
    (753637 'move' call_tmp[753634](753621 '.' this[753617] locale_id[28074]))
    (753632 'move' ret[753627] call_tmp[753634])
    (753629 return ret[753627])
  }
  function _ref(__serializeHelper)[938078].shortData[753639](ref arg this[753643]:_ref(__serializeHelper)[938078]) ref : _ref(chpl__inPlaceBuffer)[967501] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[753653]:_ref(chpl__inPlaceBuffer)[967501] "dead after last mention" "RVV" "temp"
    ref call_tmp[753660]:_ref(chpl__inPlaceBuffer)[967501] "dead after last mention" "maybe param" "temp"
    (753663 'move' call_tmp[753660](753647 '.' this[753643] shortData[28079]))
    (753658 'move' ret[753653] call_tmp[753660])
    (753655 return ret[753653])
  }
  function _ref(__serializeHelper)[938078].cachedNumCodepoints[753665](ref arg this[753669]:_ref(__serializeHelper)[938078]) ref : _ref(int(64))[936633] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[753679]:_ref(int(64))[936633] "dead after last mention" "RVV" "temp"
    ref call_tmp[753686]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
    (753689 'move' call_tmp[753686](753673 '.' this[753669] cachedNumCodepoints[28084]))
    (753684 'move' ret[753679] call_tmp[753686])
    (753681 return ret[753679])
  }
  function _ref(__serializeHelper)[938078].init[753691](ref arg this[753694]:_ref(__serializeHelper)[938078], in arg buffLen[753697]:int(64)[13], in arg buff[753710]:c_ptr(uint(8))[937484], in arg size[753723]:int(64)[13], in arg locale_id[753736]:int(32)[95], in arg shortData[753750]:chpl__inPlaceBuffer[28022], in arg cachedNumCodepoints[753763]:int(64)[13]) : void[4] "compiler generated" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    (753777 '.=' this[753694] buffLen[28058] buffLen[753697])
    (753780 '.=' this[753694] buff[28063] buff[753710])
    (753783 '.=' this[753694] size[28068] size[753723])
    (753786 '.=' this[753694] locale_id[28074] locale_id[753736])
    (753789 '.=' this[753694] shortData[28079] shortData[753750])
    (753792 '.=' this[753694] cachedNumCodepoints[28084] cachedNumCodepoints[753763])
    (753798 return _void[55])
  }
  function _ref(__serializeHelper)[938078].deinit[753979](const  ref arg this[753983]:_ref(__serializeHelper)[938078]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved"
  {
    label _enddeinit[1848096]
    ref _field_destructor_tmp_[1848094]:_ref(chpl__inPlaceBuffer)[967501] "temp"
    (1848101 'move' _field_destructor_tmp_[1848094](1848098 '.' this[753983] shortData[28079]))
    (1848103 call deinit[753022] _field_destructor_tmp_[1848094])
    (753991 return _void[55])
  }
  type __serializeHelper[28089] val buffLen[28058]:int(64)[13] val buff[28063]:c_ptr(uint(8))[937484] val size[28068]:int(64)[13] val locale_id[28074]:int(32)[95] val shortData[28079]:chpl__inPlaceBuffer[28022] val cachedNumCodepoints[28084]:int(64)[13]
  function _ref(byteIndex)[948820].init[28100](ref arg this[28175]:_ref(byteIndex)[948820]) : void[4] "method" "primary method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val tmp[453733]:int(64)[13] "dead after last mention" "temp"
    (1029806 'move' tmp[453733] 0)
    (453738 '.=' this[28175] _bindex[28094] tmp[453733])
    (502977 return _void[55])
  }
  function _ref(byteIndex)[948820].init=[28148](ref arg this[28187]:_ref(byteIndex)[948820], const in arg i[28145]:int(64)[13]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    val tmp[453760]:int(64)[13] "dead after last mention" "temp"
    (453763 'move' tmp[453760] i[28145])
    (453765 '.=' this[28187] _bindex[28094] tmp[453760])
    (502983 return _void[55])
  }
  function _ref(byteIndex)[948820].writeThis[1068681](const  ref arg this[1068685]:_ref(byteIndex)[948820], const  ref arg f[1068687]:channel(true,dynamic,false)[1061008], ref arg error_out[1844624]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[1068693]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
    (1068695 'move' call_tmp[1068693](1068698 call _bindex[757803] this[1068685]))
    const-val coerce_tmp[1068775]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1068779 'move' coerce_tmp[1068775](1068777 'deref' call_tmp[1068693]))
    ref _return_tmp_[1834666]:_ref(channel(true,dynamic,false))[1061017] "dead after last mention" "temp"
    val error[1844629]:Error[167984] "error variable" "temp"
    (1844631 'move' error[1844629] nil[44])
    (1834668 'move' _return_tmp_[1834666](1068702 call <~>[1068709] f[1068687] coerce_tmp[1068775] error[1844629]))
    val errorExists[2170876]:bool[10] "temp"
    (2170881 'move' errorExists[2170876](2170878 '!=' error[1844629] nil[44]))
    if errorExists[2170876]
    {
      (1844635 '=' error_out[1844624] error[1844629])
      gotoErrorHandlingReturn _endwriteThis[1844626] _endwriteThis[1844626]
    }
    label _endwriteThis[1844626]
    (1068705 return _void[55])
  }
  function _ref(byteIndex)[948820]._bindex[757803](ref arg this[757807]:_ref(byteIndex)[948820]) ref : _ref(int(64))[936633] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[757817]:_ref(int(64))[936633] "dead after last mention" "RVV" "temp"
    ref call_tmp[757824]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
    (757827 'move' call_tmp[757824](757811 '.' this[757807] _bindex[28094]))
    (757822 'move' ret[757817] call_tmp[757824])
    (757819 return ret[757817])
  }
  function _ref(byteIndex)[948820].deinit[757829](const  ref arg this[757833]:_ref(byteIndex)[948820]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free"
  {
    (757841 return _void[55])
  }
  type byteIndex[28173] val _bindex[28094]:int(64)[13] "no doc"
  function _ref(codepointIndex)[948830].init[28204](ref arg this[28279]:_ref(codepointIndex)[948830]) : void[4] "method" "primary method" "no doc" "resolved" "no return value for void"
  {
    val tmp[453770]:int(64)[13] "dead after last mention" "temp"
    (1157111 'move' tmp[453770] 0)
    (453775 '.=' this[28279] _cpindex[28198] tmp[453770])
    (502987 return _void[55])
  }
  function _ref(codepointIndex)[948830].writeThis[1175406](const  ref arg this[1175410]:_ref(codepointIndex)[948830], const  ref arg f[1175412]:channel(true,dynamic,false)[1061008], ref arg error_out[1845723]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[1175418]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
    (1175420 'move' call_tmp[1175418](1175423 call _cpindex[757875] this[1175410]))
    const-val coerce_tmp[1175434]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1175438 'move' coerce_tmp[1175434](1175436 'deref' call_tmp[1175418]))
    ref _return_tmp_[1834682]:_ref(channel(true,dynamic,false))[1061017] "dead after last mention" "temp"
    val error[1845728]:Error[167984] "error variable" "temp"
    (1845730 'move' error[1845728] nil[44])
    (1834684 'move' _return_tmp_[1834682](1175427 call <~>[1068709] f[1175412] coerce_tmp[1175434] error[1845728]))
    val errorExists[2171420]:bool[10] "temp"
    (2171425 'move' errorExists[2171420](2171422 '!=' error[1845728] nil[44]))
    if errorExists[2171420]
    {
      (1845734 '=' error_out[1845723] error[1845728])
      gotoErrorHandlingReturn _endwriteThis[1845725] _endwriteThis[1845725]
    }
    label _endwriteThis[1845725]
    (1175430 return _void[55])
  }
  function _ref(codepointIndex)[948830]._cpindex[757875](ref arg this[757879]:_ref(codepointIndex)[948830]) ref : _ref(int(64))[936633] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[757889]:_ref(int(64))[936633] "dead after last mention" "RVV" "temp"
    ref call_tmp[757896]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
    (757899 'move' call_tmp[757896](757883 '.' this[757879] _cpindex[28198]))
    (757894 'move' ret[757889] call_tmp[757896])
    (757891 return ret[757889])
  }
  function _ref(codepointIndex)[948830].deinit[757901](const  ref arg this[757905]:_ref(codepointIndex)[948830]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved"
  {
    (757913 return _void[55])
  }
  type codepointIndex[28277] val _cpindex[28198]:int(64)[13] "no doc"
  function chpl_build_bounded_range[1123315](const  ref arg low[1123317]:byteIndex[28173], const  ref arg high[1123322]:byteIndex[28173], ref arg _retArg[1867798]:_ref(range(byteIndex,bounded,false))[1025862]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1123406]:range(byteIndex,bounded,false)[1025853] "dead after last mention" "RVV" "temp"
    val call_tmp[1123429]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1123435]:range(byteIndex,bounded,false)[1025853] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1123454]:range(byteIndex,bounded,false)[1025853] "dead after last mention" "delay instantiation" "temp"
    const-val default_arg__stride[1123533]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1123537 'move' default_arg__stride[1123533](1123535 call init_default__stride[1029873]))
    const-val default_arg__alignment[1123541]:byteIndex[28173] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret_tmp[1866276]:byteIndex[28173] "temp"
    (1123543 call init_default__alignment[1029913] ret_tmp[1866276])
    (1866279 'move' default_arg__alignment[1123541] ret_tmp[1866276])
    (1123457 call init[1028769] initTemp[1123454] low[1123317] high[1123322] default_arg__stride[1123533] default_arg__alignment[1123541] 0)
    (1123437 'move' call_tmp[1123435] initTemp[1123454])
    (1123446 'move' ret[1123406] call_tmp[1123435])
    (1867800 '=' _retArg[1867798] ret[1123406])
    (1879309 call chpl__autoDestroy[1562538] default_arg__alignment[1123541])
    (1867802 return _void[55])
  }
  function chpl_build_low_bounded_range[1142771](const  ref arg low[1142773]:byteIndex[28173], ref arg _retArg[1868026]:_ref(range(byteIndex,boundedLow,false))[1143508]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1142857]:range(byteIndex,boundedLow,false)[1143464] "dead after last mention" "RVV" "temp"
    val call_tmp[1142876]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1142882]:range(byteIndex,boundedLow,false)[1143464] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1142900]:range(byteIndex,boundedLow,false)[1143464] "dead after last mention" "delay instantiation" "temp"
    const-val default_arg__high[1143673]:byteIndex[28173] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret_tmp[1868032]:byteIndex[28173] "temp"
    (1143675 call init_default__high[1143649] ret_tmp[1868032])
    (1868035 'move' default_arg__high[1143673] ret_tmp[1868032])
    const-val default_arg__stride[1143714]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1143718 'move' default_arg__stride[1143714](1143716 call init_default__stride[1143682]))
    const-val default_arg__alignment[1143746]:byteIndex[28173] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret_tmp[1868044]:byteIndex[28173] "temp"
    (1143748 call init_default__alignment[1143722] ret_tmp[1868044])
    (1868047 'move' default_arg__alignment[1143746] ret_tmp[1868044])
    (1142903 call init[1142911] initTemp[1142900] low[1142773] default_arg__high[1143673] default_arg__stride[1143714] default_arg__alignment[1143746] 0)
    (1142884 'move' call_tmp[1142882] initTemp[1142900])
    (1142892 'move' ret[1142857] call_tmp[1142882])
    (1868028 '=' _retArg[1868026] ret[1142857])
    (1879541 call chpl__autoDestroy[1562538] default_arg__alignment[1143746])
    (1879544 call chpl__autoDestroy[1562538] default_arg__high[1143673])
    (1868030 return _void[55])
  }
  function chpl_build_high_bounded_range[1184287](const  ref arg high[1184289]:byteIndex[28173], ref arg _retArg[1868378]:_ref(range(byteIndex,boundedHigh,false))[1185024]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1184373]:range(byteIndex,boundedHigh,false)[1184980] "dead after last mention" "RVV" "temp"
    val call_tmp[1184392]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1184398]:range(byteIndex,boundedHigh,false)[1184980] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1184416]:range(byteIndex,boundedHigh,false)[1184980] "dead after last mention" "delay instantiation" "temp"
    const-val default_arg__low[1185189]:byteIndex[28173] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret_tmp[1868384]:byteIndex[28173] "temp"
    (1185191 call init_default__low[1185165] ret_tmp[1868384])
    (1868387 'move' default_arg__low[1185189] ret_tmp[1868384])
    const-val default_arg__stride[1185230]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1185234 'move' default_arg__stride[1185230](1185232 call init_default__stride[1185198]))
    const-val default_arg__alignment[1185262]:byteIndex[28173] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret_tmp[1868396]:byteIndex[28173] "temp"
    (1185264 call init_default__alignment[1185238] ret_tmp[1868396])
    (1868399 'move' default_arg__alignment[1185262] ret_tmp[1868396])
    (1184419 call init[1184427] initTemp[1184416] default_arg__low[1185189] high[1184289] default_arg__stride[1185230] default_arg__alignment[1185262] 0)
    (1184400 'move' call_tmp[1184398] initTemp[1184416])
    (1184408 'move' ret[1184373] call_tmp[1184398])
    (1868380 '=' _retArg[1868378] ret[1184373])
    (1881810 call chpl__autoDestroy[1562538] default_arg__alignment[1185262])
    (1881813 call chpl__autoDestroy[1562538] default_arg__low[1185189])
    (1868382 return _void[55])
  }
  function chpl__idxToInt[1029230](const  ref arg i[1029232]:byteIndex[28173]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    val ret[1029316]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1029328]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1029330 'move' call_tmp[1029328](1029333 call _cast[39465] i[1029232]))
    (1029336 'move' ret[1029316] call_tmp[1029328])
    (1029340 return ret[1029316])
  }
  function chpl__intToIdx[28505](const in arg i[28508]:int(64)[13], ref arg _retArg[1851710]:_ref(byteIndex)[948820]) : void[4] "fn returns via _retArg" "inline" "no doc" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1838580]:byteIndex[28173] "temp"
    const-val ret[503071]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    const-val call_tmp[597582]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1863886]:byteIndex[28173] "temp"
    (28513 call _cast[39486] i[28508] ret_tmp[1863886])
    (1863889 'move' call_tmp[597582] ret_tmp[1863886])
    (503076 'move' ret[503071] call_tmp[597582])
    (1851712 '=' _retArg[1851710] ret[503071])
    (1851714 return _void[55])
  }
  function >[28575](const  ref arg x[28572]:byteIndex[28173], const  ref arg y[28578]:byteIndex[28173]) : bool[10] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val ret[503107]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[597592]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597595 'move' call_tmp[597592](28583 call _cast[39465] x[28572]))
    const-val call_tmp[597597]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597600 'move' call_tmp[597597](28587 call _cast[39465] y[28578]))
    const-val call_tmp[597602]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (597605 'move' call_tmp[597602](28589 call >[437715] call_tmp[597592] call_tmp[597597]))
    (503112 'move' ret[503107] call_tmp[597602])
    (503109 return ret[503107])
  }
  function +[28725](const  ref arg x[28722]:byteIndex[28173], const in arg y[28728]:int(64)[13], ref arg _retArg[1851752]:_ref(byteIndex)[948820]) : void[4] "fn returns via _retArg" "inline" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[503161]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    const-val call_tmp[597662]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597665 'move' call_tmp[597662](28733 call _cast[39465] x[28722]))
    const-val call_tmp[597667]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597670 'move' call_tmp[597667](28736 call +[439679] call_tmp[597662] y[28728]))
    const-val call_tmp[597672]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1863892]:byteIndex[28173] "temp"
    (28739 call _cast[39486] call_tmp[597667] ret_tmp[1863892])
    (1863895 'move' call_tmp[597672] ret_tmp[1863892])
    (503166 'move' ret[503161] call_tmp[597672])
    (1851754 '=' _retArg[1851752] ret[503161])
    (1851756 return _void[55])
  }
  function -[28857](const  ref arg x[28854]:byteIndex[28173], const in arg y[28860]:int(64)[13], ref arg _retArg[1851788]:_ref(byteIndex)[948820]) : void[4] "fn returns via _retArg" "inline" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[503206]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    const-val call_tmp[597732]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597735 'move' call_tmp[597732](28865 call _cast[39465] x[28854]))
    const-val call_tmp[597737]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597740 'move' call_tmp[597737](28868 call -[440459] call_tmp[597732] y[28860]))
    const-val call_tmp[597742]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1863898]:byteIndex[28173] "temp"
    (28871 call _cast[39486] call_tmp[597737] ret_tmp[1863898])
    (1863901 'move' call_tmp[597742] ret_tmp[1863898])
    (503211 'move' ret[503206] call_tmp[597742])
    (1851790 '=' _retArg[1851788] ret[503206])
    (1851792 return _void[55])
  }
  function <[29043](const  ref arg x[29040]:codepointIndex[28277], const in arg y[29046]:int(64)[13]) : bool[10] "inline" "no doc" "resolved"
  {
    val ret[503269]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[597832]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597835 'move' call_tmp[597832](29051 call _cast[39517] x[29040]))
    const-val call_tmp[597837]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (597840 'move' call_tmp[597837](29054 call <[437495] call_tmp[597832] y[29046]))
    (503274 'move' ret[503269] call_tmp[597837])
    (503271 return ret[503269])
  }
  function >=[29193](const  ref arg x[29190]:codepointIndex[28277], const in arg y[29196]:int(64)[13]) : bool[10] "inline" "no doc" "resolved"
  {
    val ret[503323]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[597902]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597905 'move' call_tmp[597902](29201 call _cast[39517] x[29190]))
    const-val call_tmp[597907]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (597910 'move' call_tmp[597907](29204 call >=[437275] call_tmp[597902] y[29196]))
    (503328 'move' ret[503323] call_tmp[597907])
    (503325 return ret[503323])
  }
  function ==[29469](const  ref arg x[29466]:byteIndex[28173], const in arg y[29472]:int(64)[13]) : bool[10] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val ret[503422]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[598032]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598035 'move' call_tmp[598032](29477 call _cast[39465] x[29466]))
    const-val call_tmp[598037]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (598040 'move' call_tmp[598037](29480 call ==[435671] call_tmp[598032] y[29472]))
    (503427 'move' ret[503422] call_tmp[598037])
    (503424 return ret[503422])
  }
  function ==[29541](const in arg x[29538]:int(64)[13], const  ref arg y[29544]:codepointIndex[28277]) : bool[10] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val ret[503449]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[598062]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598065 'move' call_tmp[598062](29550 call _cast[39517] y[29544]))
    const-val call_tmp[598067]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (598070 'move' call_tmp[598067](29552 call ==[435671] x[29538] call_tmp[598062]))
    (503454 'move' ret[503449] call_tmp[598067])
    (503451 return ret[503449])
  }
  function !=[29619](const  ref arg x[29616]:byteIndex[28173], const in arg y[29622]:int(64)[13]) : bool[10] "inline" "no doc" "resolved"
  {
    val ret[503476]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[598102]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598105 'move' call_tmp[598102](29627 call _cast[39465] x[29616]))
    const-val call_tmp[598107]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (598110 'move' call_tmp[598107](29630 call !=[436055] call_tmp[598102] y[29622]))
    (503481 'move' ret[503476] call_tmp[598107])
    (503478 return ret[503476])
  }
  function validateEncoding[986701](const in arg buf[986703]:c_ptr(uint(8))[937484], const in arg len[986705]:int(64)[13], ref arg error_out[1843595]:Error[167984]) : int(64)[13] throws "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[986709]:int(64)[13] "dead after last mention" "RVV" "temp"
    val numCodepoints[986735]:int(64)[13] "dead at end of block" "insert auto destroy"
    (987066 'move' numCodepoints[986735] 0)
    const-val call_tmp[986741]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (986743 'move' call_tmp[986741](986746 call chpl_enc_validate_buf[986798] buf[986703] len[986705] numCodepoints[986735]))
    const-val call_tmp[986750]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[986823]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (986829 'move' coerce_tmp[986823](986825 'cast' int(32)[95] 0))
    (986752 'move' call_tmp[986750](986755 call !=[436033] call_tmp[986741] coerce_tmp[986823]))
    const-val call_tmp[986758]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (986760 'move' call_tmp[986758] call_tmp[986750])
    if call_tmp[986758]
    {
      const-val call_tmp[986767]:owned DecodeError[966342] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      val new_temp[986848]:DecodeError[168140] "dead after last mention" "temp"
      (986850 'move' new_temp[986848](986836 call _new[965703]))
      const-val initTemp[986857]:owned DecodeError[966342] "dead after last mention" "delay instantiation" "temp"
      (986860 call init[965802] initTemp[986857] new_temp[986848])
      (986769 'move' call_tmp[986767] initTemp[986857])
      val call_tmp[986773]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[986874]:owned Error[966519] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1865714]:owned Error[966519] "temp"
      (986876 call _cast[966604] call_tmp[986767] ret_tmp[1865714])
      (1865717 'move' coerce_tmp[986874] ret_tmp[1865714])
      const-val _formal_tmp_in_err[987053]:owned Error[966519] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (987057 'move' _formal_tmp_in_err[987053] coerce_tmp[986874])
      (986775 'move' call_tmp[986773](986778 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[987053]))
      {
        val castedError[1843598]:Error[167984] "temp"
        (1843604 'move' castedError[1843598] call_tmp[986773])
        (1843606 '=' error_out[1843595] castedError[1843598])
        gotoErrorHandlingReturn _end_validateEncoding[986792] _end_validateEncoding[986792]
      }
    }
    (987063 'move' ret[986709] numCodepoints[986735])
    gotoReturn _end_validateEncoding[986792] _end_validateEncoding[986792]
    label _end_validateEncoding[986792]
    (986794 return ret[986709])
  }
  function createStringWithBorrowedBuffer[29902](const  ref arg x[29899]:string[26], ref arg _retArg[1851800]:_ref(string)[938000]) : void[4] "fn returns via _retArg" "inline" "resolved" "fn synchronization free"
  {
    const-val ret[503570]:string[26] "dead after last mention" "RVV" "temp"
    val ret[29905]:string[26] "dead at end of block" "insert auto destroy"
    (954346 call init[30763] ret[29905])
    ref call_tmp[598199]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
    (598202 'move' call_tmp[598199](29913 call cachedNumCodepoints[757999] ret[29905]))
    ref call_tmp[598206]:_ref(int(64))[936633] "dead after last mention" "maybe param" "reference to a const" "temp"
    (598209 'move' call_tmp[598206](29917 call cachedNumCodepoints[757999] x[29899]))
    const-val coerce_tmp[948928]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (948932 'move' coerce_tmp[948928](948930 'deref' call_tmp[598206]))
    (29920 call =[435370] call_tmp[598199] coerce_tmp[948928])
    (29927 call initWithBorrowedBuffer[948935] ret[29905] x[29899])
    (503575 'move' ret[503570] ret[29905])
    gotoReturn _end_createStringWithBorrowedBuffer[503568] _end_createStringWithBorrowedBuffer[503568]
    label _end_createStringWithBorrowedBuffer[503568]
    (1851802 '=' _retArg[1851800] ret[503570])
    (1851804 return _void[55])
  }
  function chpl_createStringWithLiteral[30032](const in arg x[30029]:c_string[19], const in arg length[30035]:int(64)[13], const in arg numCodepoints[30039]:int(64)[13], ref arg _retArg[1862528]:_ref(string)[938000]) : void[4] "fn returns via _retArg" "no doc" "resolved"
  {
    const-val ret[503608]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[598250]:uint(8)[100] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[598255]:c_ptr(uint(8))[937484] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[598260]:c_ptr(uint(8))[937484] "dead after last mention" "expr temp" "maybe param" "temp"
    (598263 'move' call_tmp[598260](30051 call _cast[39395] x[30029]))
    const-val call_tmp[598265]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598268 'move' call_tmp[598265](30058 call +[949727] length[30035]))
    const-val call_tmp[598270]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1862708]:string[26] "temp"
    (30063 call chpl_createStringWithBorrowedBufferNV[30629] call_tmp[598260] length[30035] call_tmp[598265] numCodepoints[30039] ret_tmp[1862708])
    (1862711 'move' call_tmp[598270] ret_tmp[1862708])
    (503613 'move' ret[503608] call_tmp[598270])
    (1862530 '=' _retArg[1862528] ret[503608])
    (1862532 return _void[55])
  }
  function createStringWithOwnedBuffer[30210](const in arg x[30207]:c_string[19], const in arg length[30216]:int(64)[13], ref arg error_out[1842434]:Error[167984], ref arg _retArg[1862552]:_ref(string)[938000]) : void[4] throws "fn returns via _retArg" "inline" "resolved"
  {
    const-val ret[503648]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[598299]:c_ptr(uint(8))[937484] "dead after last mention" "expr temp" "maybe param" "temp"
    (598302 'move' call_tmp[598299](30222 call _cast[39395] x[30207]))
    const-val call_tmp[598304]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598307 'move' call_tmp[598304](30229 call +[949727] length[30216]))
    const-val call_tmp[598309]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[1842439]:Error[167984] "error variable" "temp"
    (1842441 'move' error[1842439] nil[44])
    const-val ret_tmp[1862558]:string[26] "temp"
    (30232 call createStringWithOwnedBuffer[30274] call_tmp[598299] length[30216] call_tmp[598304] error[1842439] ret_tmp[1862558])
    (1862561 'move' call_tmp[598309] ret_tmp[1862558])
    val errorExists[2169780]:bool[10] "temp"
    (2169785 'move' errorExists[2169780](2169782 '!=' error[1842439] nil[44]))
    if errorExists[2169780]
    {
      (1842445 '=' error_out[1842434] error[1842439])
      gotoErrorHandlingReturn _endcreateStringWithOwnedBuffer[1842436] _endcreateStringWithOwnedBuffer[1842436]
    }
    (503653 'move' ret[503648] call_tmp[598309])
    label _endcreateStringWithOwnedBuffer[1842436]
    (1862554 '=' _retArg[1862552] ret[503648])
    (1862556 return _void[55])
  }
  function createStringWithOwnedBuffer_default_length[986663](const in arg x[986665]:c_string[19], ref arg error_out[1843591]:Error[167984]) : int(64)[13] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "resolved"
  {
    val ret[986667]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val length[986672]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (986679 'move' length[986672](986676 call size[22361] x[986665]))
    (986683 'move' ret[986667] length[986672])
    label _endcreateStringWithOwnedBuffer_default_length[1843593]
    (986670 return ret[986667])
  }
  function createStringWithOwnedBuffer[30274](const in arg x[30271]:c_ptr(uint(8))[937484], const in arg length[30277]:int(64)[13], const in arg size[30281]:int(64)[13], ref arg error_out[1842453]:Error[167984], ref arg _retArg[1862564]:_ref(string)[938000]) : void[4] throws "fn returns via _retArg" "inline" "resolved"
  {
    const-val ret[503666]:string[26] "dead after last mention" "RVV" "temp"
    val ret[30285]:string[26] "dead at end of block" "insert auto destroy"
    (987070 call init[30763] ret[30285])
    ref call_tmp[598323]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
    (598326 'move' call_tmp[598323](30291 call cachedNumCodepoints[757999] ret[30285]))
    const-val call_tmp[598328]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val error[1842456]:Error[167984] "error variable" "temp"
    (1842458 'move' error[1842456] nil[44])
    (598331 'move' call_tmp[598328](30298 call validateEncoding[986701] x[30271] length[30277] error[1842456]))
    val errorExists[2169788]:bool[10] "temp"
    (2169793 'move' errorExists[2169788](2169790 '!=' error[1842456] nil[44]))
    if errorExists[2169788]
    {
      (1842462 '=' error_out[1842453] error[1842456])
      (1876536 call chpl__autoDestroy[1562275] ret[30285])
      gotoErrorHandlingReturn _end_createStringWithOwnedBuffer[503664] _end_createStringWithOwnedBuffer[503664]
    }
    (30299 call =[435370] call_tmp[598323] call_tmp[598328])
    (30308 call initWithOwnedBuffer[978956] ret[30285] x[30271] length[30277] size[30281])
    (503671 'move' ret[503666] ret[30285])
    gotoReturn _end_createStringWithOwnedBuffer[503664] _end_createStringWithOwnedBuffer[503664]
    label _end_createStringWithOwnedBuffer[503664]
    (1862566 '=' _retArg[1862564] ret[503666])
    (1862568 return _void[55])
  }
  function createStringWithNewBuffer[30413](const in arg x[30410]:c_string[19], const in arg length[30419]:int(64)[13], const in arg policy[30426]:decodePolicy[173702], ref arg error_out[1842470]:Error[167984], ref arg _retArg[1862660]:_ref(string)[938000]) : void[4] throws "fn returns via _retArg" "inline" "resolved"
  {
    const-val ret[503706]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[598359]:c_ptr(uint(8))[937484] "dead after last mention" "expr temp" "maybe param" "temp"
    (598362 'move' call_tmp[598359](30432 call _cast[39395] x[30410]))
    const-val call_tmp[598364]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598367 'move' call_tmp[598364](30439 call +[949727] length[30419]))
    const-val call_tmp[598369]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[1842475]:Error[167984] "error variable" "temp"
    (1842477 'move' error[1842475] nil[44])
    const-val ret_tmp[1862666]:string[26] "temp"
    (30443 call createStringWithNewBuffer[30493] call_tmp[598359] length[30419] call_tmp[598364] policy[30426] error[1842475] ret_tmp[1862666])
    (1862669 'move' call_tmp[598369] ret_tmp[1862666])
    val errorExists[2169796]:bool[10] "temp"
    (2169801 'move' errorExists[2169796](2169798 '!=' error[1842475] nil[44]))
    if errorExists[2169796]
    {
      (1842481 '=' error_out[1842470] error[1842475])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[1842472] _endcreateStringWithNewBuffer[1842472]
    }
    (503711 'move' ret[503706] call_tmp[598369])
    label _endcreateStringWithNewBuffer[1842472]
    (1862662 '=' _retArg[1862660] ret[503706])
    (1862664 return _void[55])
  }
  function createStringWithNewBuffer_default_length[964107](const in arg x[964109]:c_string[19], ref arg error_out[1843579]:Error[167984]) : int(64)[13] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "resolved" "fn synchronization free"
  {
    val ret[964111]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val length[964116]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (964123 'move' length[964116](964120 call size[22361] x[964109]))
    (964127 'move' ret[964111] length[964116])
    label _endcreateStringWithNewBuffer_default_length[1843581]
    (964114 return ret[964111])
  }
  function createStringWithNewBuffer[30493](const in arg x[30490]:c_ptr(uint(8))[937484], const in arg length[30496]:int(64)[13], const in arg size[30503]:int(64)[13], const in arg policy[30510]:decodePolicy[173702], ref arg error_out[1842489]:Error[167984], ref arg _retArg[1862690]:_ref(string)[938000]) : void[4] throws "fn returns via _retArg" "inline" "resolved"
  {
    const-val ret[503724]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[598381]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[1842494]:Error[167984] "error variable" "temp"
    (1842496 'move' error[1842494] nil[44])
    const-val ret_tmp[1864854]:string[26] "temp"
    (30518 call decodeByteBuffer[173938] x[30490] length[30496] policy[30510] error[1842494] ret_tmp[1864854])
    (1864857 'move' call_tmp[598381] ret_tmp[1864854])
    val errorExists[2169804]:bool[10] "temp"
    (2169809 'move' errorExists[2169804](2169806 '!=' error[1842494] nil[44]))
    if errorExists[2169804]
    {
      (1842500 '=' error_out[1842489] error[1842494])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[1842491] _endcreateStringWithNewBuffer[1842491]
    }
    (503729 'move' ret[503724] call_tmp[598381])
    label _endcreateStringWithNewBuffer[1842491]
    (1862692 '=' _retArg[1862690] ret[503724])
    (1862694 return _void[55])
  }
  function _ref(string)[938000].init[30763](ref arg this[32628]:_ref(string)[938000]) : void[4] "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val tmp[453832]:int(64)[13] "dead after last mention" "temp"
    (453835 'move' tmp[453832] 0)
    (453837 '.=' this[32628] buffLen[30722] tmp[453832])
    val tmp[453842]:int(64)[13] "dead after last mention" "temp"
    (453845 'move' tmp[453842] 0)
    (453847 '.=' this[32628] buffSize[30728] tmp[453842])
    val tmp[453852]:int(64)[13] "dead after last mention" "temp"
    (453855 'move' tmp[453852] 0)
    (453857 '.=' this[32628] cachedNumCodepoints[30734] tmp[453852])
    val tmp[453862]:c_ptr(uint(8))[937484] "dead after last mention" "temp"
    val init_coerce_tmp[954360]:c_ptr(uint(8))[937484] "dead after last mention" "temp"
    (954363 'move' init_coerce_tmp[954360](954370 'cast' c_ptr(uint(8))[937484] nil[44]))
    (453865 'move' tmp[453862] init_coerce_tmp[954360])
    (453867 '.=' this[32628] buff[30740] tmp[453862])
    val tmp[453872]:bool[10] "dead after last mention" "temp"
    (453875 'move' tmp[453872] 1)
    (453877 '.=' this[32628] isOwned[30746] tmp[453872])
    val tmp[453882]:bool[10] "dead after last mention" "temp"
    (453885 'move' tmp[453882] 0)
    (453887 '.=' this[32628] hasEscapes[30752] tmp[453882])
    val tmp[453892]:int(32)[95] "dead after last mention" "temp"
    (453894 'move' tmp[453892] chpl_nodeID[208207])
    (453896 '.=' this[32628] locale_id[30757] tmp[453892])
    (503740 return _void[55])
  }
  function _ref(string)[938000].init=[30774](ref arg this[32632]:_ref(string)[938000], const  ref arg s[30771]:string[26]) : void[4] "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val tmp[453901]:int(64)[13] "dead after last mention" "temp"
    (453904 'move' tmp[453901] 0)
    (453906 '.=' this[32632] buffLen[30722] tmp[453901])
    val tmp[453911]:int(64)[13] "dead after last mention" "temp"
    (453914 'move' tmp[453911] 0)
    (453916 '.=' this[32632] buffSize[30728] tmp[453911])
    val tmp[453921]:int(64)[13] "dead after last mention" "temp"
    (453924 'move' tmp[453921] 0)
    (453926 '.=' this[32632] cachedNumCodepoints[30734] tmp[453921])
    val tmp[453931]:c_ptr(uint(8))[937484] "dead after last mention" "temp"
    val init_coerce_tmp[954380]:c_ptr(uint(8))[937484] "dead after last mention" "temp"
    (954383 'move' init_coerce_tmp[954380](957334 'cast' c_ptr(uint(8))[937484] nil[44]))
    (453934 'move' tmp[453931] init_coerce_tmp[954380])
    (453936 '.=' this[32632] buff[30740] tmp[453931])
    val tmp[453941]:bool[10] "dead after last mention" "temp"
    (453944 'move' tmp[453941] 1)
    (453946 '.=' this[32632] isOwned[30746] tmp[453941])
    val tmp[453951]:bool[10] "dead after last mention" "temp"
    (453954 'move' tmp[453951] 0)
    (453956 '.=' this[32632] hasEscapes[30752] tmp[453951])
    val tmp[453961]:int(32)[95] "dead after last mention" "temp"
    (453963 'move' tmp[453961] chpl_nodeID[208207])
    (453965 '.=' this[32632] locale_id[30757] tmp[453961])
    (30788 call initWithNewBuffer[954390] this[32632] s[30771])
    (503742 return _void[55])
  }
  function _ref(string)[938000].deinit[30834](ref arg this[32640]:_ref(string)[938000]) : void[4] "destructor" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    ref tmp[417367]:_ref(bool)[937260] "dead after last mention" "maybe param" "temp"
    (417378 'move' tmp[417367](369706 call isOwned[758051] this[32640]))
    val tmp[552871]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[552872]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[598422]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[938065]:bool[10] "dead after last mention" "const" "temp"
    (938067 'move' tmp[938065](938069 'deref' tmp[417367]))
    (598425 'move' call_tmp[598422] tmp[938065])
    (552877 'move' tmp[552872] call_tmp[598422])
    if tmp[552872]
    {
      const-val tmp[552879]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      ref call_tmp[598429]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "temp"
      (598432 'move' call_tmp[598429](30838 call buff[758025] this[32640]))
      const-val call_tmp[598434]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[938169]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (938173 'move' coerce_tmp[938169](938171 'deref' call_tmp[598429]))
      (598437 'move' call_tmp[598434](30842 call !=[938092] coerce_tmp[938169] nil[44]))
      (552881 'move' tmp[552879] call_tmp[598434])
      (552886 'move' tmp[552871] tmp[552879])
    }
    {
      (552891 'move' tmp[552871] 0)
    }
    const-val call_tmp[598439]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (598442 'move' call_tmp[598439] tmp[552871])
    if call_tmp[598439]
    {
      const-val tmp[30868]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
      ref call_tmp[598446]:_ref(int(32))[936687] "dead after last mention" "maybe param" "temp"
      (598449 'move' call_tmp[598446](30850 call locale_id[758103] this[32640]))
      const-val call_tmp[598451]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val coerce_tmp[938187]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (938191 'move' coerce_tmp[938187](938189 'deref' call_tmp[598446]))
      (598454 'move' call_tmp[598451](30855 call chpl_buildLocaleID[209470] coerce_tmp[938187] c_sublocid_any[89878]))
      const-val call_tmp[598456]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      (598459 'move' call_tmp[598456](30856 'chpl_on_locale_num' call_tmp[598451]))
      (30870 'move' tmp[30868] call_tmp[598456])
      val isdirect[2147221]:bool[10] "temp"
      (2147226 'move' isdirect[2147221](2147223 call chpl_doDirectExecuteOn[187469] tmp[30868]))
      if isdirect[2147221]
      {
        (2147230 call on_fn[933847] this[32640])
      }
      {
        val _args_foron_fn[2147245]:_class_localson_fn[2147237] "temp"
        (2147249 'move' _args_foron_fn[2147245](2147247 'stack allocate class' _class_localson_fn[2147237]))
        (2147251 '.=' _args_foron_fn[2147245] _0_tmp[2147240] tmp[30868])
        ref tmp[2147255]:string[26] "temp"
        (2147259 'move' tmp[2147255](2147257 'set reference' this[32640]))
        (2147261 '.=' _args_foron_fn[2147245] _1_this[2147242] tmp[2147255])
        val _args_vforon_fn[2147265]:c_void_ptr[149] "temp"
        (2147269 'move' _args_vforon_fn[2147265](2147267 'cast_to_void_star' _args_foron_fn[2147245]))
        val _args_sizeon_fn[2147271]:int(64)[13] "temp"
        (2147275 'move' _args_sizeon_fn[2147271](2147273 'sizeof_bundle' _class_localson_fn[2147237]))
        on(2147307 call wrapon_fn[2147277] tmp[30868] _args_vforon_fn[2147265] _args_sizeon_fn[2147271] _args_foron_fn[2147245])
      }
      {
      }
    }
    (503746 return _void[55])
  }
  function _ref(string)[938000].chpl__serialize[30886](const  ref arg this[32644]:_ref(string)[938000], ref arg _retArg[1862810]:_ref(__serializeHelper)[938078]) : void[4] "fn returns via _retArg" "method" "primary method" "resolved"
  {
    const-val ret[503750]:__serializeHelper[28089] "dead after last mention" "RVV" "temp"
    val data[30889]:chpl__inPlaceBuffer[28022] "dead at end of block" "insert auto destroy"
    ref call_tmp[598470]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
    (598473 'move' call_tmp[598470](369713 call buffLen[757947] this[32644]))
    const-val call_tmp[598475]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1826235]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1826239 'move' coerce_tmp[1826235](1826237 'deref' call_tmp[598470]))
    const-val coerce_tmp[1826241]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1826247 'move' coerce_tmp[1826241](1826243 'cast' int(64)[13] CHPL_SHORT_STRING_SIZE[28016]))
    (598478 'move' call_tmp[598475](30896 call <=[437055] coerce_tmp[1826235] coerce_tmp[1826241]))
    const-val call_tmp[598480]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (598483 'move' call_tmp[598480] call_tmp[598475])
    if call_tmp[598480]
    {
      val call_tmp[598485]:c_ptr(uint(8))[937484] "dead after last mention" "expr temp" "maybe param" "temp"
      (598488 'move' call_tmp[598485](30902 call chpl__getInPlaceBufferDataForWrite[28045] data[30889]))
      ref call_tmp[598492]:_ref(int(32))[936687] "dead after last mention" "maybe param" "temp"
      (598495 'move' call_tmp[598492](369720 call locale_id[758103] this[32644]))
      ref call_tmp[598499]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "temp"
      (598502 'move' call_tmp[598499](369725 call buff[758025] this[32644]))
      ref call_tmp[598506]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
      (598509 'move' call_tmp[598506](369730 call buffLen[757947] this[32644]))
      const-val coerce_tmp[1826254]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1826258 'move' coerce_tmp[1826254](1826256 'deref' call_tmp[598492]))
      const-val coerce_tmp[1826260]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1826266 'move' coerce_tmp[1826260](1826262 'cast' int(64)[13] coerce_tmp[1826254]))
      val coerce_tmp[1826268]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1826272 'move' coerce_tmp[1826268](1826270 'deref' call_tmp[598499]))
      const-val coerce_tmp[1826274]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1826278 'move' coerce_tmp[1826274](1826276 'deref' call_tmp[598506]))
      (30907 call chpl_string_comm_get[954111] call_tmp[598485] coerce_tmp[1826260] coerce_tmp[1826268] coerce_tmp[1826274])
    }
    ref call_tmp[598513]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
    (598516 'move' call_tmp[598513](369736 call buffLen[757947] this[32644]))
    ref call_tmp[598520]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "temp"
    (598523 'move' call_tmp[598520](369741 call buff[758025] this[32644]))
    ref call_tmp[598527]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
    (598530 'move' call_tmp[598527](369746 call buffSize[757973] this[32644]))
    ref call_tmp[598534]:_ref(int(32))[936687] "dead after last mention" "maybe param" "temp"
    (598537 'move' call_tmp[598534](369751 call locale_id[758103] this[32644]))
    ref call_tmp[598541]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
    (598544 'move' call_tmp[598541](369757 call cachedNumCodepoints[757999] this[32644]))
    const-val call_tmp[598546]:__serializeHelper[28089] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1826287]:__serializeHelper[28089] "dead after last mention" "temp"
    const-val coerce_tmp[1826314]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1826318 'move' coerce_tmp[1826314](1826316 'deref' call_tmp[598513]))
    val coerce_tmp[1826320]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1826324 'move' coerce_tmp[1826320](1826322 'deref' call_tmp[598520]))
    const-val coerce_tmp[1826326]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1826330 'move' coerce_tmp[1826326](1826328 'deref' call_tmp[598527]))
    const-val coerce_tmp[1826332]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1826336 'move' coerce_tmp[1826332](1826334 'deref' call_tmp[598534]))
    const-val coerce_tmp[1826338]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1826342 'move' coerce_tmp[1826338](1826340 'deref' call_tmp[598541]))
    (1826290 call init[753691] initTemp[1826287] coerce_tmp[1826314] coerce_tmp[1826320] coerce_tmp[1826326] coerce_tmp[1826332] data[30889] coerce_tmp[1826338])
    (598549 'move' call_tmp[598546] initTemp[1826287])
    (503755 'move' ret[503750] call_tmp[598546])
    gotoReturn _end_chpl__serialize[503748] _end_chpl__serialize[503748]
    label _end_chpl__serialize[503748]
    (1862812 '=' _retArg[1862810] ret[503750])
    (1862814 return _void[55])
  }
  function chpl__deserialize[1826353](const  ref arg data[1826359]:__serializeHelper[28089], ref arg _retArg[1876302]:_ref(string)[938000]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val _formal_type_tmp_[1839469]:string[26] "temp"
    val ret[1826361]:string[26] "dead after last mention" "RVV" "temp"
    ref call_tmp[1826369]:_ref(int(32))[936687] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1826371 'move' call_tmp[1826369](1826374 call locale_id[753613] data[1826359]))
    const-val call_tmp[1826377]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1826613]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1826617 'move' coerce_tmp[1826613](1826615 'deref' call_tmp[1826369]))
    (1826379 'move' call_tmp[1826377](1826382 call !=[436033] coerce_tmp[1826613] chpl_nodeID[208207]))
    const-val call_tmp[1826385]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1826387 'move' call_tmp[1826385] call_tmp[1826377])
    if call_tmp[1826385]
    {
      ref call_tmp[1826394]:_ref(int(64))[936633] "dead after last mention" "maybe param" "reference to a const" "temp"
      (1826396 'move' call_tmp[1826394](1826399 call buffLen[753535] data[1826359]))
      const-val call_tmp[1826402]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1826621]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1826625 'move' coerce_tmp[1826621](1826623 'deref' call_tmp[1826394]))
      const-val coerce_tmp[1826627]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1826633 'move' coerce_tmp[1826627](1826629 'cast' int(64)[13] CHPL_SHORT_STRING_SIZE[28016]))
      (1826404 'move' call_tmp[1826402](1826407 call <=[437055] coerce_tmp[1826621] coerce_tmp[1826627]))
      const-val call_tmp[1826410]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1826412 'move' call_tmp[1826410] call_tmp[1826402])
      if call_tmp[1826410]
      {
        ref call_tmp[1826419]:_ref(chpl__inPlaceBuffer)[967501] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1826421 'move' call_tmp[1826419](1826424 call shortData[753639] data[1826359]))
        val call_tmp[1826427]:c_ptr(uint(8))[937484] "dead after last mention" "expr temp" "maybe param" "temp"
        (1826429 'move' call_tmp[1826427](1826432 call chpl__getInPlaceBufferData[28033] call_tmp[1826419]))
        ref call_tmp[1826434]:_ref(int(64))[936633] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1826436 'move' call_tmp[1826434](1826439 call buffLen[753535] data[1826359]))
        ref call_tmp[1826442]:_ref(int(64))[936633] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1826444 'move' call_tmp[1826442](1826447 call size[753587] data[1826359]))
        ref call_tmp[1826450]:_ref(int(64))[936633] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1826452 'move' call_tmp[1826450](1826455 call cachedNumCodepoints[753665] data[1826359]))
        const-val call_tmp[1826458]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val coerce_tmp[1826641]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1826645 'move' coerce_tmp[1826641](1826643 'deref' call_tmp[1826434]))
        const-val coerce_tmp[1826647]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1826651 'move' coerce_tmp[1826647](1826649 'deref' call_tmp[1826442]))
        const-val coerce_tmp[1826653]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1826657 'move' coerce_tmp[1826653](1826655 'deref' call_tmp[1826450]))
        const-val ret_tmp[1862696]:string[26] "temp"
        (1826463 call chpl_createStringWithNewBufferNV[30582] call_tmp[1826427] coerce_tmp[1826641] coerce_tmp[1826647] coerce_tmp[1826653] ret_tmp[1862696])
        (1862699 'move' call_tmp[1826458] ret_tmp[1862696])
        (1826468 'move' ret[1826361] call_tmp[1826458])
        gotoReturn _end_chpl__deserialize[1826607] _end_chpl__deserialize[1826607]
      }
      {
        ref call_tmp[1826475]:_ref(int(32))[936687] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1826477 'move' call_tmp[1826475](1826480 call locale_id[753613] data[1826359]))
        ref call_tmp[1826483]:_ref(c_ptr(uint(8)))[937493] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1826485 'move' call_tmp[1826483](1826488 call buff[753561] data[1826359]))
        ref call_tmp[1826491]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1826493 'move' call_tmp[1826491](1826496 call buffLen[753535] data[1826359]))
        val call_tmp[1826499]:c_ptr(uint(8))[937484] "dead at end of block" "maybe param" "temp"
        const-val coerce_tmp[1826931]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1826935 'move' coerce_tmp[1826931](1826933 'deref' call_tmp[1826475]))
        const-val coerce_tmp[1826937]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1826943 'move' coerce_tmp[1826937](1826939 'cast' int(64)[13] coerce_tmp[1826931]))
        val coerce_tmp[1826945]:c_ptr(uint(8))[937484] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1826949 'move' coerce_tmp[1826945](1826947 'deref' call_tmp[1826483]))
        const-val coerce_tmp[1826951]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1826955 'move' coerce_tmp[1826951](1826953 'deref' call_tmp[1826491]))
        (1826501 'move' call_tmp[1826499](1826504 call bufferCopyRemote[172830] coerce_tmp[1826937] coerce_tmp[1826945] coerce_tmp[1826951]))
        val localBuff[1826508]:c_ptr(uint(8))[937484] "dead at end of block" "insert auto destroy"
        (1826510 'move' localBuff[1826508](1826958 call chpl__initCopy[954091] call_tmp[1826499]))
        ref call_tmp[1826514]:_ref(int(64))[936633] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1826516 'move' call_tmp[1826514](1826519 call buffLen[753535] data[1826359]))
        ref call_tmp[1826522]:_ref(int(64))[936633] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1826524 'move' call_tmp[1826522](1826527 call size[753587] data[1826359]))
        ref call_tmp[1826530]:_ref(int(64))[936633] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1826532 'move' call_tmp[1826530](1826535 call cachedNumCodepoints[753665] data[1826359]))
        const-val call_tmp[1826538]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val coerce_tmp[1826964]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1826968 'move' coerce_tmp[1826964](1826966 'deref' call_tmp[1826514]))
        const-val coerce_tmp[1826970]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1826974 'move' coerce_tmp[1826970](1826972 'deref' call_tmp[1826522]))
        const-val coerce_tmp[1826976]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1826980 'move' coerce_tmp[1826976](1826978 'deref' call_tmp[1826530]))
        const-val ret_tmp[1862792]:string[26] "temp"
        (1826543 call chpl_createStringWithOwnedBufferNV[30676] localBuff[1826508] coerce_tmp[1826964] coerce_tmp[1826970] coerce_tmp[1826976] ret_tmp[1862792])
        (1862795 'move' call_tmp[1826538] ret_tmp[1862792])
        (1826548 'move' ret[1826361] call_tmp[1826538])
        gotoReturn _end_chpl__deserialize[1826607] _end_chpl__deserialize[1826607]
      }
    }
    {
      ref call_tmp[1826558]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "reference to a const" "temp"
      (1826560 'move' call_tmp[1826558](1826563 call buff[753561] data[1826359]))
      ref call_tmp[1826566]:_ref(int(64))[936633] "dead after last mention" "maybe param" "reference to a const" "temp"
      (1826568 'move' call_tmp[1826566](1826571 call buffLen[753535] data[1826359]))
      ref call_tmp[1826574]:_ref(int(64))[936633] "dead after last mention" "maybe param" "reference to a const" "temp"
      (1826576 'move' call_tmp[1826574](1826579 call size[753587] data[1826359]))
      ref call_tmp[1826582]:_ref(int(64))[936633] "dead after last mention" "maybe param" "reference to a const" "temp"
      (1826584 'move' call_tmp[1826582](1826587 call cachedNumCodepoints[753665] data[1826359]))
      const-val call_tmp[1826590]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[1826987]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1826991 'move' coerce_tmp[1826987](1826989 'deref' call_tmp[1826558]))
      const-val coerce_tmp[1826993]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1826997 'move' coerce_tmp[1826993](1826995 'deref' call_tmp[1826566]))
      const-val coerce_tmp[1826999]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1827003 'move' coerce_tmp[1826999](1827001 'deref' call_tmp[1826574]))
      const-val coerce_tmp[1827005]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1827009 'move' coerce_tmp[1827005](1827007 'deref' call_tmp[1826582]))
      const-val ret_tmp[1862714]:string[26] "temp"
      (1826595 call chpl_createStringWithBorrowedBufferNV[30629] coerce_tmp[1826987] coerce_tmp[1826993] coerce_tmp[1826999] coerce_tmp[1827005] ret_tmp[1862714])
      (1862717 'move' call_tmp[1826590] ret_tmp[1862714])
      (1826600 'move' ret[1826361] call_tmp[1826590])
      gotoReturn _end_chpl__deserialize[1826607] _end_chpl__deserialize[1826607]
    }
    label _end_chpl__deserialize[1826607]
    (1876304 '=' _retArg[1876302] ret[1826361])
    (1876306 return _void[55])
  }
  function _ref(string)[938000].isASCII[31049](const  ref arg this[32652]:_ref(string)[938000]) : bool[10] "inline" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[503782]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[598710]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598713 'move' call_tmp[598710](31052 call numCodepoints[32826] this[32652]))
    const-val call_tmp[598717]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598720 'move' call_tmp[598717](31056 call numBytes[32810] this[32652]))
    const-val call_tmp[598722]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (598725 'move' call_tmp[598722](31059 call ==[435671] call_tmp[598710] call_tmp[598717]))
    (503787 'move' ret[503782] call_tmp[598722])
    (503784 return ret[503782])
  }
  function _ref(string)[938000].byteIndices[31068](const  ref arg this[32656]:_ref(string)[938000], ref arg _retArg[1862894]:_ref(range(int(64),bounded,false))[1026919]) : void[4] "fn returns via _retArg" "inline" "method" "primary method" "no parens" "resolved" "fn synchronization free"
  {
    const-val ret[503791]:range(int(64),bounded,false)[1026875] "dead after last mention" "RVV" "temp"
    const-val call_tmp[598729]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598732 'move' call_tmp[598729](31072 call numBytes[32810] this[32656]))
    const-val call_tmp[598734]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598737 'move' call_tmp[598734](31076 call -[962287] call_tmp[598729]))
    const-val call_tmp[598739]:range(int(64),bounded,false)[1026875] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1865106]:range(int(64),bounded,false)[1026875] "temp"
    (31078 call chpl_build_bounded_range[455180] 0 call_tmp[598734] ret_tmp[1865106])
    (1865109 'move' call_tmp[598739] ret_tmp[1865106])
    (503796 'move' ret[503791] call_tmp[598739])
    (1862896 '=' _retArg[1862894] ret[503791])
    (1862898 return _void[55])
  }
  function _ref(string)[938000]._cpIndexLen[31109](const  ref arg this[32664]:_ref(string)[938000], const  ref arg start[31106]:byteIndex[28173], ref arg _retArg[1862924]:_ref(_ir__cpIndexLen__ref_string)[1122563]) : void[4] "fn returns via _retArg" "inline" "iterator fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _ir[2045637]:_ir__cpIndexLen__ref_string[1122452] "temp"
    (2045639 '.=' _ir[2045637] F0_this[2044778] this[32664])
    (2045643 '.=' _ir[2045637] F1_start[2044782] start[31106])
    (2045647 '=' _retArg[1862924] _ir[2045637])
    (2045650 return _void[55])
  }
  type _ic__cpIndexLen__ref_string[1122446] val super[1122447]:object[22] "super class" val more[1122449]:int(64)[13] ref F0_this[2044776]:_ref(string)[938000] ref F1_start[2044780]:_ref(byteIndex)[948820] val F2_localThis[2044784]:string[26] val F3__iterator[2044786]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108627] val F4_call_tmp[2044788]:range(int(64),bounded,false)[1026875] val F5__iterator[2044790]:_ic_these_range_int64_t_bounded_F[1096764] val F6__iterator[2044792]:_ic_chpl_bytes__ref_string[1108317] val F7__indexOfInterest[2044794]:(int(64),uint(8))[1111101] val F8_call_tmp[2044796]:byteIndex[28173] const-val F9_ret_tmp[2044798]:byteIndex[28173] const-val F10_ret_tmp[2044800]:(int(32),byteIndex,int(64))[1122203] val F11_i[2044802]:int(64)[13] const-val F12_ret_tmp[2044804]:(syserr,int(32),int(32))[964681] const F13_tmp[2044806]:(syserr,int(32),int(32))[964681] const F14_nBytes[2044808]:int(32)[95] val F15_call_tmp[2044810]:byteIndex[28173] const-val F16_ret_tmp[2044812]:byteIndex[28173] const-val F17_ret_tmp[2044814]:(int(32),byteIndex,int(64))[1122203] val F18_call_tmp[2044816]:(int(32),byteIndex,int(64))[1122203] val F19_call_tmp[2044818]:(int(32),byteIndex,int(64))[1122203] val value[2044820]:(int(32),byteIndex,int(64))[1122203]
  type _ir__cpIndexLen__ref_string[1122452] ref F0_this[2044778]:_ref(string)[938000] ref F1_start[2044782]:_ref(byteIndex)[948820]
  function _getIterator[1122461](const  ref arg ir[1122463]:_ir__cpIndexLen__ref_string[1122452]) : _ic__cpIndexLen__ref_string[1122446] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[1122570]:_ic__cpIndexLen__ref_string[1122446] "dead after last mention" "RVV" "temp"
    val _ic_[1122453]:_ic__cpIndexLen__ref_string[1122446] "dead after last mention" "temp"
    const-val call_tmp[1122577]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1122580 'move' call_tmp[1122577](1122592 'sizeof_bundle' _ic__cpIndexLen__ref_string[1122446]))
    const-val cast_tmp[1122595]:c_void_ptr[149] "dead after last mention" "temp"
    (1122597 'move' cast_tmp[1122595](1122458 call chpl_here_alloc[187788] call_tmp[1122577] 33))
    (1122466 'move' _ic_[1122453](1122599 'cast' _ic__cpIndexLen__ref_string[1122446] cast_tmp[1122595]))
    (1122468 'setcid' _ic_[1122453])
    (1122575 'move' ret[1122570] _ic_[1122453])
    (2045653 '.=' ret[1122570] more[1122449] 1)
    ref tmp[2045657]:_ref(string)[938000] "temp"
    (2045662 'move' tmp[2045657](2045658 '.v' ir[1122463] F0_this[2044778]))
    (2045664 '.=' ret[1122570] F0_this[2044776] tmp[2045657])
    ref tmp[2045668]:_ref(byteIndex)[948820] "temp"
    (2045673 'move' tmp[2045668](2045669 '.v' ir[1122463] F1_start[2044782]))
    (2045675 '.=' ret[1122570] F1_start[2044780] tmp[2045668])
    (1122572 return ret[1122570])
  }
  function _ref(string)[938000]._cpIndexLen_default_start[1122092](const  ref arg this[1122095]:_ref(string)[938000], ref arg _retArg[1867750]:_ref(byteIndex)[948820]) : void[4] "compiler generated" "default actual function" "fn returns via _retArg" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved"
  {
    const-val ret[1122098]:byteIndex[28173] "dead after last mention" "RVV" "maybe param" "temp"
    const-val start[1122103]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    const-val ret_tmp[1863940]:byteIndex[28173] "temp"
    (1122107 call _cast[39486] 0 ret_tmp[1863940])
    (1863943 'move' start[1122103] ret_tmp[1863940])
    (1122114 'move' ret[1122098] start[1122103])
    (1867752 '=' _retArg[1867750] ret[1122098])
    (1867754 return _void[55])
  }
  function _ref(string)[938000]._indexLen[31454](const  ref arg this[32668]:_ref(string)[938000], const  ref arg start[31451]:byteIndex[28173], ref arg _retArg[1862940]:_ref(_ir__indexLen__ref_string)[1121483]) : void[4] "fn returns via _retArg" "inline" "iterator fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[2046086]:_ir__indexLen__ref_string[1121372] "temp"
    (2046088 '.=' _ir[2046086] F0_this[2045681] this[32668])
    (2046092 '.=' _ir[2046086] F1_start[2045685] start[31451])
    (2046096 '=' _retArg[1862940] _ir[2046086])
    (2046099 return _void[55])
  }
  type _ic__indexLen__ref_string[1121366] val super[1121367]:object[22] "super class" val more[1121369]:int(64)[13] ref F0_this[2045679]:_ref(string)[938000] ref F1_start[2045683]:_ref(byteIndex)[948820] val F2_localThis[2045687]:string[26] val F3_i[2045689]:int(64)[13] val F4_j[2045691]:int(64)[13] val F5_call_tmp[2045693]:byteIndex[28173] const-val F6_ret_tmp[2045695]:byteIndex[28173] const-val F7_ret_tmp[2045697]:(byteIndex,int(64))[1121294] val value[2045699]:(byteIndex,int(64))[1121294]
  type _ir__indexLen__ref_string[1121372] ref F0_this[2045681]:_ref(string)[938000] ref F1_start[2045685]:_ref(byteIndex)[948820]
  function _getIterator[1121381](const  ref arg ir[1121383]:_ir__indexLen__ref_string[1121372]) : _ic__indexLen__ref_string[1121366] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1121490]:_ic__indexLen__ref_string[1121366] "dead after last mention" "RVV" "temp"
    val _ic_[1121373]:_ic__indexLen__ref_string[1121366] "dead after last mention" "temp"
    const-val call_tmp[1121497]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1121500 'move' call_tmp[1121497](1121512 'sizeof_bundle' _ic__indexLen__ref_string[1121366]))
    const-val cast_tmp[1121515]:c_void_ptr[149] "dead after last mention" "temp"
    (1121517 'move' cast_tmp[1121515](1121378 call chpl_here_alloc[187788] call_tmp[1121497] 32))
    (1121386 'move' _ic_[1121373](1121519 'cast' _ic__indexLen__ref_string[1121366] cast_tmp[1121515]))
    (1121388 'setcid' _ic_[1121373])
    (1121495 'move' ret[1121490] _ic_[1121373])
    (2046102 '.=' ret[1121490] more[1121369] 1)
    ref tmp[2046106]:_ref(string)[938000] "temp"
    (2046111 'move' tmp[2046106](2046107 '.v' ir[1121383] F0_this[2045681]))
    (2046113 '.=' ret[1121490] F0_this[2045679] tmp[2046106])
    ref tmp[2046117]:_ref(byteIndex)[948820] "temp"
    (2046122 'move' tmp[2046117](2046118 '.v' ir[1121383] F1_start[2045685]))
    (2046124 '.=' ret[1121490] F1_start[2045683] tmp[2046117])
    (1121492 return ret[1121490])
  }
  function _ref(string)[938000]._indexLen_default_start[1121064](const  ref arg this[1121067]:_ref(string)[938000], ref arg _retArg[1867702]:_ref(byteIndex)[948820]) : void[4] "compiler generated" "default actual function" "fn returns via _retArg" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "fn synchronization free"
  {
    const-val ret[1121070]:byteIndex[28173] "dead after last mention" "RVV" "maybe param" "temp"
    const-val start[1121075]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    const-val ret_tmp[1863934]:byteIndex[28173] "temp"
    (1121079 call _cast[39486] 0 ret_tmp[1863934])
    (1863937 'move' start[1121075] ret_tmp[1863934])
    (1121086 'move' ret[1121070] start[1121075])
    (1867704 '=' _retArg[1867702] ret[1121070])
    (1867706 return _void[55])
  }
  function _ref(string)[938000].doSearchUTF8[1106172](const  ref arg this[1106176]:_ref(string)[938000], const  ref arg needle[1106178]:string[26], const in arg region[1106180]:range(byteIndex,bounded,false)[1025853]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[1106188]:int(64)[13] "dead after last mention" "RVV" "temp"
    val ret[1106205]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1106207 'move' ret[1106205] -1)
    const-val tmp[1106212]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1106214]:_ref(int(32))[936687] "dead after last mention" "maybe param" "temp"
    (1106216 'move' call_tmp[1106214](1106219 call locale_id[758103] this[1106176]))
    const-val call_tmp[1106222]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1107411]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1107415 'move' coerce_tmp[1107411](1107413 'deref' call_tmp[1106214]))
    (1106224 'move' call_tmp[1106222](1106227 call chpl_buildLocaleID[209470] coerce_tmp[1107411] c_sublocid_any[89878]))
    const-val call_tmp[1106230]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (1106232 'move' call_tmp[1106230](1106234 'chpl_on_locale_num' call_tmp[1106222]))
    (1106236 'move' tmp[1106212] call_tmp[1106230])
    val needle_data[2145763]:__serializeHelper[28089] "temp"
    (2145765 call chpl__serialize[30886] needle[1106178] needle_data[2145763])
    val isdirect[2152779]:bool[10] "temp"
    (2152784 'move' isdirect[2152779](2152781 call chpl_doDirectExecuteOn[187469] tmp[1106212]))
    if isdirect[2152779]
    {
      (2152788 call on_fn[1106243] needle_data[2145763] this[1106176] region[1106180] ret[1106205])
    }
    {
      val _args_foron_fn[2152812]:_class_localson_fn[2152798] "temp"
      (2152816 'move' _args_foron_fn[2152812](2152814 'stack allocate class' _class_localson_fn[2152798]))
      (2152818 '.=' _args_foron_fn[2152812] _0_tmp[2152801] tmp[1106212])
      (2152822 '.=' _args_foron_fn[2152812] _1_needle_data[2152803] needle_data[2145763])
      ref tmp[2152826]:string[26] "temp"
      (2152830 'move' tmp[2152826](2152828 'set reference' this[1106176]))
      (2152832 '.=' _args_foron_fn[2152812] _2_this[2152805] tmp[2152826])
      (2152836 '.=' _args_foron_fn[2152812] _3_region[2152807] region[1106180])
      ref tmp[2152840]:int(64)[13] "temp"
      (2152844 'move' tmp[2152840](2152842 'set reference' ret[1106205]))
      (2152846 '.=' _args_foron_fn[2152812] _4_ret[2152809] tmp[2152840])
      val _args_vforon_fn[2152850]:c_void_ptr[149] "temp"
      (2152854 'move' _args_vforon_fn[2152850](2152852 'cast_to_void_star' _args_foron_fn[2152812]))
      val _args_sizeon_fn[2152856]:int(64)[13] "temp"
      (2152860 'move' _args_sizeon_fn[2152856](2152858 'sizeof_bundle' _class_localson_fn[2152798]))
      on(2152916 call wrapon_fn[2152862] tmp[1106212] _args_vforon_fn[2152850] _args_sizeon_fn[2152856] _args_foron_fn[2152812])
    }
    {
    }
    (1107356 'move' ret[1106188] ret[1106205])
    gotoReturn _end_doSearchUTF8[1107364] _end_doSearchUTF8[1107364]
    label _end_doSearchUTF8[1107364]
    (1107366 return ret[1106188])
  }
  function _ref(string)[938000].doSearchUTF8[1182868](const  ref arg this[1182872]:_ref(string)[938000], const  ref arg needle[1182874]:string[26], const in arg region[1182876]:range(byteIndex,boundedLow,false)[1143464]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[1182884]:int(64)[13] "dead after last mention" "RVV" "temp"
    val ret[1182901]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1182903 'move' ret[1182901] -1)
    const-val tmp[1182908]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1182910]:_ref(int(32))[936687] "dead after last mention" "maybe param" "temp"
    (1182912 'move' call_tmp[1182910](1182915 call locale_id[758103] this[1182872]))
    const-val call_tmp[1182918]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1184107]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1184111 'move' coerce_tmp[1184107](1184109 'deref' call_tmp[1182910]))
    (1182920 'move' call_tmp[1182918](1182923 call chpl_buildLocaleID[209470] coerce_tmp[1184107] c_sublocid_any[89878]))
    const-val call_tmp[1182926]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (1182928 'move' call_tmp[1182926](1182930 'chpl_on_locale_num' call_tmp[1182918]))
    (1182932 'move' tmp[1182908] call_tmp[1182926])
    val needle_data[2146019]:__serializeHelper[28089] "temp"
    (2146021 call chpl__serialize[30886] needle[1182874] needle_data[2146019])
    val isdirect[2153347]:bool[10] "temp"
    (2153352 'move' isdirect[2153347](2153349 call chpl_doDirectExecuteOn[187469] tmp[1182908]))
    if isdirect[2153347]
    {
      (2153356 call on_fn[1182939] needle_data[2146019] this[1182872] region[1182876] ret[1182901])
    }
    {
      val _args_foron_fn[2153380]:_class_localson_fn[2153366] "temp"
      (2153384 'move' _args_foron_fn[2153380](2153382 'stack allocate class' _class_localson_fn[2153366]))
      (2153386 '.=' _args_foron_fn[2153380] _0_tmp[2153369] tmp[1182908])
      (2153390 '.=' _args_foron_fn[2153380] _1_needle_data[2153371] needle_data[2146019])
      ref tmp[2153394]:string[26] "temp"
      (2153398 'move' tmp[2153394](2153396 'set reference' this[1182872]))
      (2153400 '.=' _args_foron_fn[2153380] _2_this[2153373] tmp[2153394])
      (2153404 '.=' _args_foron_fn[2153380] _3_region[2153375] region[1182876])
      ref tmp[2153408]:int(64)[13] "temp"
      (2153412 'move' tmp[2153408](2153410 'set reference' ret[1182901]))
      (2153414 '.=' _args_foron_fn[2153380] _4_ret[2153377] tmp[2153408])
      val _args_vforon_fn[2153418]:c_void_ptr[149] "temp"
      (2153422 'move' _args_vforon_fn[2153418](2153420 'cast_to_void_star' _args_foron_fn[2153380]))
      val _args_sizeon_fn[2153424]:int(64)[13] "temp"
      (2153428 'move' _args_sizeon_fn[2153424](2153426 'sizeof_bundle' _class_localson_fn[2153366]))
      on(2153484 call wrapon_fn[2153430] tmp[1182908] _args_vforon_fn[2153418] _args_sizeon_fn[2153424] _args_foron_fn[2153380])
    }
    {
    }
    (1184052 'move' ret[1182884] ret[1182901])
    gotoReturn _end_doSearchUTF8[1184060] _end_doSearchUTF8[1184060]
    label _end_doSearchUTF8[1184060]
    (1184062 return ret[1182884])
  }
  function _ref(string)[938000].buffLen[757947](ref arg this[757951]:_ref(string)[938000]) ref : _ref(int(64))[936633] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[757961]:_ref(int(64))[936633] "dead after last mention" "RVV" "temp"
    ref call_tmp[757968]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
    (757971 'move' call_tmp[757968](757955 '.' this[757951] buffLen[30722]))
    (757966 'move' ret[757961] call_tmp[757968])
    (757963 return ret[757961])
  }
  function _ref(string)[938000].buffSize[757973](ref arg this[757977]:_ref(string)[938000]) ref : _ref(int(64))[936633] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[757987]:_ref(int(64))[936633] "dead after last mention" "RVV" "temp"
    ref call_tmp[757994]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
    (757997 'move' call_tmp[757994](757981 '.' this[757977] buffSize[30728]))
    (757992 'move' ret[757987] call_tmp[757994])
    (757989 return ret[757987])
  }
  function _ref(string)[938000].cachedNumCodepoints[757999](ref arg this[758003]:_ref(string)[938000]) ref : _ref(int(64))[936633] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[758013]:_ref(int(64))[936633] "dead after last mention" "RVV" "temp"
    ref call_tmp[758020]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
    (758023 'move' call_tmp[758020](758007 '.' this[758003] cachedNumCodepoints[30734]))
    (758018 'move' ret[758013] call_tmp[758020])
    (758015 return ret[758013])
  }
  function _ref(string)[938000].buff[758025](ref arg this[758029]:_ref(string)[938000]) ref : _ref(c_ptr(uint(8)))[937493] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[758039]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "RVV" "temp"
    ref call_tmp[758046]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "temp"
    (758049 'move' call_tmp[758046](758033 '.' this[758029] buff[30740]))
    (758044 'move' ret[758039] call_tmp[758046])
    (758041 return ret[758039])
  }
  function _ref(string)[938000].isOwned[758051](ref arg this[758055]:_ref(string)[938000]) ref : _ref(bool)[937260] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[758065]:_ref(bool)[937260] "dead after last mention" "RVV" "temp"
    ref call_tmp[758072]:_ref(bool)[937260] "dead after last mention" "maybe param" "temp"
    (758075 'move' call_tmp[758072](758059 '.' this[758055] isOwned[30746]))
    (758070 'move' ret[758065] call_tmp[758072])
    (758067 return ret[758065])
  }
  function _ref(string)[938000].hasEscapes[758077](ref arg this[758081]:_ref(string)[938000]) ref : _ref(bool)[937260] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[758091]:_ref(bool)[937260] "dead after last mention" "RVV" "temp"
    ref call_tmp[758098]:_ref(bool)[937260] "dead after last mention" "maybe param" "temp"
    (758101 'move' call_tmp[758098](758085 '.' this[758081] hasEscapes[30752]))
    (758096 'move' ret[758091] call_tmp[758098])
    (758093 return ret[758091])
  }
  function _ref(string)[938000].locale_id[758103](ref arg this[758107]:_ref(string)[938000]) ref : _ref(int(32))[936687] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[758117]:_ref(int(32))[936687] "dead after last mention" "RVV" "temp"
    ref call_tmp[758124]:_ref(int(32))[936687] "dead after last mention" "maybe param" "temp"
    (758127 'move' call_tmp[758124](758111 '.' this[758107] locale_id[30757]))
    (758122 'move' ret[758117] call_tmp[758124])
    (758119 return ret[758117])
  }
  type string[26] val buffLen[30722]:int(64)[13] val buffSize[30728]:int(64)[13] val cachedNumCodepoints[30734]:int(64)[13] val buff[30740]:c_ptr(uint(8))[937484] val isOwned[30746]:bool[10] val hasEscapes[30752]:bool[10] val locale_id[30757]:int(32)[95]
  function _ref(string)[938000].size[32772](const  ref arg this[32774]:_ref(string)[938000]) : int(64)[13] "inline" "method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[503929]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[599713]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (599716 'move' call_tmp[599713](369895 call numCodepoints[32826] this[32774]))
    (503934 'move' ret[503929] call_tmp[599713])
    (503931 return ret[503929])
  }
  function _ref(string)[938000].indices[32788](const  ref arg this[32790]:_ref(string)[938000], ref arg _retArg[1862986]:_ref(range(int(64),bounded,false))[1026919]) : void[4] "fn returns via _retArg" "inline" "method" "no parens" "resolved" "fn synchronization free"
  {
    const-val ret[503938]:range(int(64),bounded,false)[1026875] "dead after last mention" "RVV" "temp"
    const-val call_tmp[599720]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (599723 'move' call_tmp[599720](369899 call size[32772] this[32790]))
    const-val call_tmp[599725]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (599728 'move' call_tmp[599725](32798 call -[962287] call_tmp[599720]))
    const-val call_tmp[599730]:range(int(64),bounded,false)[1026875] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1865112]:range(int(64),bounded,false)[1026875] "temp"
    (32800 call chpl_build_bounded_range[455180] 0 call_tmp[599725] ret_tmp[1865112])
    (1865115 'move' call_tmp[599730] ret_tmp[1865112])
    (503943 'move' ret[503938] call_tmp[599730])
    (1862988 '=' _retArg[1862986] ret[503938])
    (1862990 return _void[55])
  }
  function _ref(string)[938000].numBytes[32810](const  ref arg this[32812]:_ref(string)[938000]) : int(64)[13] "inline" "method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[503947]:int(64)[13] "dead after last mention" "RVV" "temp"
    ref call_tmp[599737]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
    (599740 'move' call_tmp[599737](369904 call buffLen[757947] this[32812]))
    (503952 'move' ret[503947](503951 'deref' call_tmp[599737]))
    (503949 return ret[503947])
  }
  function _ref(string)[938000].numCodepoints[32826](const  ref arg this[32828]:_ref(string)[938000]) : int(64)[13] "inline" "method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[503956]:int(64)[13] "dead after last mention" "RVV" "temp"
    ref call_tmp[599744]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (599747 'move' call_tmp[599744](32834 call cachedNumCodepoints[757999] this[32828]))
    const-val n[32837]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1019822]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1019826 'move' coerce_tmp[1019822](1019824 'deref' call_tmp[599744]))
    (1876602 '=' n[32837] coerce_tmp[1019822])
    (540350 'noop')
    {
      const-val call_tmp[599754]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (599757 'move' call_tmp[599754](32847 call countNumCodepoints[181380] this[32828]))
      const-val call_tmp[599759]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (599762 'move' call_tmp[599759](32848 call !=[436055] n[32837] call_tmp[599754]))
      const-val call_tmp[599764]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (599767 'move' call_tmp[599764] call_tmp[599759])
      if call_tmp[599764]
      {
        (32869 call halt[154111] "Encountered corrupt string metadata")
      }
    }
    (503961 'move' ret[503956] n[32837])
    gotoReturn _end_numCodepoints[503954] _end_numCodepoints[503954]
    label _end_numCodepoints[503954]
    (503958 return ret[503956])
  }
  function _ref(string)[938000].localize[32889](const  ref arg this[32891]:_ref(string)[938000], ref arg _retArg[1863136]:_ref(string)[938000]) : void[4] "fn returns via _retArg" "inline" "method" "resolved" "fn synchronization free"
  {
    val ret[503967]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[553280]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[553293]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    ref call_tmp[599781]:_ref(int(32))[936687] "dead after last mention" "maybe param" "temp"
    (599784 'move' call_tmp[599781](32899 call locale_id[758103] this[32891]))
    const-val call_tmp[599786]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[948781]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (948785 'move' coerce_tmp[948781](948783 'deref' call_tmp[599781]))
    (599789 'move' call_tmp[599786](32903 call ==[435649] coerce_tmp[948781] chpl_nodeID[208207]))
    (553295 'move' tmp[553293] call_tmp[599786])
    (553300 'move' tmp[553280] tmp[553293])
    const-val call_tmp[599791]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (599794 'move' call_tmp[599791] tmp[553280])
    if call_tmp[599791]
    {
      const-val call_tmp[599796]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1851794]:string[26] "temp"
      (32910 call createStringWithBorrowedBuffer[29902] this[32891] ret_tmp[1851794])
      (1851797 'move' call_tmp[599796] ret_tmp[1851794])
      (957339 'move' ret[503967] call_tmp[599796])
      gotoReturn _end_localize[503965] _end_localize[503965]
    }
    {
      const-val x[32916]:string[26] "dead at end of block" "const" "insert auto destroy"
      (540352 call init=[30774] x[32916] this[32891])
      (957342 'move' ret[503967] x[32916])
      gotoReturn _end_localize[503965] _end_localize[503965]
    }
    label _end_localize[503965]
    (1863138 '=' _retArg[1863136] ret[503967])
    (1863140 return _void[55])
  }
  function _ref(string)[938000].c_str[32935](const  ref arg this[32937]:_ref(string)[938000]) : c_string[19] "inline" "method" "resolved"
  {
    val ret[503985]:c_string[19] "dead after last mention" "RVV" "temp"
    const-val call_tmp[599801]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (599804 'move' call_tmp[599801](32946 call getCStr[957345] this[32937]))
    (958130 'move' ret[503985] call_tmp[599801])
    (503987 return ret[503985])
  }
  function _ic_chpl_bytes__ref_string[1108317].advance[1108343](const in arg this[1108345]:_ic_chpl_bytes__ref_string[1108317]) : void[4] "auto ii" "method" "resolved"
  {
    const-val more[2048145]:int(64)[13]
    (2048173 'move' more[2048145](2048170 '.v' this[1108345] more[1108320]))
    const-val tmp[2048148]:bool[10] "temp"
    (2048155 'move' tmp[2048148](2048152 '==' more[2048145] 2))
    if tmp[2048148]
    {
      gotoIterResume _jump_2[2048137] _jump_2[2048137]
    }
    const-val tmp[2048160]:bool[10] "temp"
    (2048165 'move' tmp[2048160](2048162 '==' more[2048145] -2))
    if tmp[2048160]
    {
      gotoIterResume _jump_break_2[2048139] _jump_break_2[2048139]
    }
    val ret[504049]:_ir_chpl_bytes__ref_string[1108323] "dead at end of block" "RVV" "temp"
    const-val call_tmp[600173]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1863004]:string[26] "temp"
    ref tmp[2046148]:_ref(string)[938000] "temp"
    (2046153 'move' tmp[2046148](2046150 '.v' this[1108345] F0_this[2046128]))
    (33591 call localize[32889] tmp[2046148] ret_tmp[1863004])
    (1863007 'move' call_tmp[600173] ret_tmp[1863004])
    val tmp[2046155]:string[26] "temp"
    (540402 'move' tmp[2046155] call_tmp[600173])
    (2046157 '.=' this[1108345] F1_localThis[2046132] tmp[2046155])
    val _indexOfInterest[33617]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    ref call_tmp[600180]:_ref(int(64))[936633] "dead at end of block" "maybe param" "temp"
    ref tmp[2046161]:_ref(string)[938000] "temp"
    (2046166 'move' tmp[2046161](2046163 '.' this[1108345] F1_localThis[2046132]))
    (600183 'move' call_tmp[600180](33633 call buffLen[757947] tmp[2046161]))
    const-val call_tmp[600185]:_ir_chpl_direct_counted_range_iter[1103857] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1108476]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1108480 'move' coerce_tmp[1108476](1108478 'deref' call_tmp[600180]))
    const-val ret_tmp[1865440]:_ir_chpl_direct_counted_range_iter[1103857] "temp"
    (33637 call chpl_direct_counted_range_iter[458039] 0 coerce_tmp[1108476] ret_tmp[1865440])
    (1865443 'move' call_tmp[600185] ret_tmp[1865440])
    val tmp[2046168]:_ic_chpl_direct_counted_range_iter[1103851] "temp"
    (33627 'move' tmp[2046168](33625 call _getIterator[1103866] call_tmp[600185]))
    (2046170 '.=' this[1108345] F2__iterator[2046134] tmp[2046168])
    val ret[1930378]:_ir_chpl_direct_counted_range_iter[1103857] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[1930380]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[1930384]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[1930386]:_ir_chpl_direct_counted_range_iter_helper[1103607] "temp"
    const-val low[1930491]:int(64)[13] "temp"
    ref tmp[2046174]:_ref(_ic_chpl_direct_counted_range_iter)[1103994] "temp"
    (2046179 'move' tmp[2046174](2046176 '.' this[1108345] F2__iterator[2046134]))
    (1930496 'move' low[1930491](1930493 '.v' tmp[2046174] F0_low[2058106]))
    const-val count[1930498]:int(64)[13] "temp"
    ref tmp[2046181]:_ref(_ic_chpl_direct_counted_range_iter)[1103994] "temp"
    (2046186 'move' tmp[2046181](2046183 '.' this[1108345] F2__iterator[2046134]))
    (1930503 'move' count[1930498](1930500 '.v' tmp[2046181] F1_count[2058110]))
    (1930389 call chpl_direct_counted_range_iter_helper[1102159] low[1930491] count[1930498] ret_tmp[1930386])
    (1930393 'move' call_tmp[1930384] ret_tmp[1930386])
    val tmp[2046188]:_ic_chpl_direct_counted_range_iter_helper[1103601] "temp"
    (1930396 'move' tmp[2046188](1930399 call _getIterator[1103616] call_tmp[1930384]))
    (2046190 '.=' this[1108345] F3__iterator[2046136] tmp[2046188])
    val ret[2002610]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead after last mention" "RVV" "temp"
    val call_tmp[2002612]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val tmp[2002614]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[2002616]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    const-val call_tmp[2002618]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[2003035]:int(64)[13] "temp"
    ref tmp[2046194]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
    (2046199 'move' tmp[2046194](2046196 '.' this[1108345] F3__iterator[2046136]))
    (2003040 'move' count[2003035](2003037 '.v' tmp[2046194] F1_count[2064268]))
    (2002620 'move' call_tmp[2002618](2002623 call <[948459] count[2003035]))
    (2002625 'move' tmp[2002616] call_tmp[2002618])
    (2002628 'move' tmp[2002614] call_tmp[2002618])
    const-val call_tmp[2002631]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2002633 'move' call_tmp[2002631] call_tmp[2002618])
    if call_tmp[2002618]
    {
      (2002639 call boundsCheckHalt[210187] "With a negative count, the range must have a last index.")
    }
    val tmp[2002644]:2*int(64)[1040117] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
    const-val tmp[2002646]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[2002648]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[2003042]:int(64)[13] "temp"
    ref tmp[2046201]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
    (2046206 'move' tmp[2046201](2046203 '.' this[1108345] F3__iterator[2046136]))
    (2003047 'move' count[2003042](2003044 '.v' tmp[2046201] F1_count[2064268]))
    (2002650 'move' call_tmp[2002648](2002653 call ==[435671] count[2003042] 0))
    (2002656 'move' tmp[2002646] call_tmp[2002648])
    if call_tmp[2002648]
    {
      const-val tmp[2002661]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      val call_tmp[2002663]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[2002665]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val low[2003049]:int(64)[13] "temp"
      ref tmp[2046208]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
      (2046213 'move' tmp[2046208](2046210 '.' this[1108345] F3__iterator[2046136]))
      (2003054 'move' low[2003049](2003051 '.v' tmp[2046208] F0_low[2064264]))
      (2002667 'move' call_tmp[2002665](2002670 call _cast[956095] low[2003049]))
      const-val call_tmp[2002672]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2002674]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2002676 'move' coerce_tmp[2002674](2002678 'cast' uint(64)[115] 1))
      (2002681 'move' call_tmp[2002672](2002684 call -[962254] call_tmp[2002665]))
      const-val call_tmp[2002686]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (2002688 'move' call_tmp[2002686](2002691 call _cast[953604] call_tmp[2002672]))
      const-val ret_tmp[2002693]:2*int(64)[1040117] "temp"
      const-val low[2003056]:int(64)[13] "temp"
      ref tmp[2046215]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
      (2046220 'move' tmp[2046215](2046217 '.' this[1108345] F3__iterator[2046136]))
      (2003061 'move' low[2003056](2003058 '.v' tmp[2046215] F0_low[2064264]))
      (2002696 call _build_tuple[1040075] low[2003056] call_tmp[2002686] ret_tmp[2002693])
      (2002700 'move' tmp[2002661] ret_tmp[2002693])
      (2002703 'move' tmp[2002644] tmp[2002661])
    }
    {
      const-val tmp[2002707]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      val call_tmp[2002709]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[2002711]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val count[2003063]:int(64)[13] "temp"
      ref tmp[2046222]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
      (2046227 'move' tmp[2046222](2046224 '.' this[1108345] F3__iterator[2046136]))
      (2003068 'move' count[2003063](2003065 '.v' tmp[2046222] F1_count[2064268]))
      (2002713 'move' call_tmp[2002711] count[2003063])
      const-val call_tmp[2002716]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val count[2003070]:int(64)[13] "temp"
      ref tmp[2046229]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
      (2046234 'move' tmp[2046229](2046231 '.' this[1108345] F3__iterator[2046136]))
      (2003075 'move' count[2003070](2003072 '.v' tmp[2046229] F1_count[2064268]))
      (2002718 'move' call_tmp[2002716](2002721 call -[962287] count[2003070]))
      const-val call_tmp[2002723]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val low[2003077]:int(64)[13] "temp"
      ref tmp[2046236]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
      (2046241 'move' tmp[2046236](2046238 '.' this[1108345] F3__iterator[2046136]))
      (2003082 'move' low[2003077](2003079 '.v' tmp[2046236] F0_low[2064264]))
      (2002725 'move' call_tmp[2002723](2002728 call +[439679] low[2003077] call_tmp[2002716]))
      const-val ret_tmp[2002731]:2*int(64)[1040117] "temp"
      const-val low[2003084]:int(64)[13] "temp"
      ref tmp[2046243]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
      (2046248 'move' tmp[2046243](2046245 '.' this[1108345] F3__iterator[2046136]))
      (2003089 'move' low[2003084](2003086 '.v' tmp[2046243] F0_low[2064264]))
      (2002734 call _build_tuple[1040075] low[2003084] call_tmp[2002723] ret_tmp[2002731])
      (2002738 'move' tmp[2002707] ret_tmp[2002731])
      (2002741 'move' tmp[2002644] tmp[2002707])
    }
    const tmp[2046250]:2*int(64)[1040117] "temp"
    (2002745 '=' tmp[2046250] tmp[2002644])
    (2046252 '.=' this[1108345] F4_tmp[2046138] tmp[2046250])
    (2002748 'noop')
    1
    ref call_tmp[2002750]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
    ref tmp[2046256]:_ref(2*int(64))[1040190] "temp"
    (2046261 'move' tmp[2046256](2046258 '.' this[1108345] F4_tmp[2046138]))
    (2002752 'move' call_tmp[2002750](2002754 '.' tmp[2046256] x0[1040113]))
    const-val start[2002757]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[2002759]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2002761 'move' coerce_tmp[2002759](2002763 'deref' call_tmp[2002750]))
    (2002765 '=' start[2002757] coerce_tmp[2002759])
    (2002768 'noop')
    ref call_tmp[2002769]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
    ref tmp[2046263]:_ref(2*int(64))[1040190] "temp"
    (2046268 'move' tmp[2046263](2046265 '.' this[1108345] F4_tmp[2046138]))
    (2002771 'move' call_tmp[2002769](2002773 '.' tmp[2046263] x1[1040115]))
    const-val end[2002776]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[2002778]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2002780 'move' coerce_tmp[2002778](2002782 'deref' call_tmp[2002769]))
    (2002784 '=' end[2002776] coerce_tmp[2002778])
    (2002787 'noop')
    val _indexOfInterest[2002788]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[2002792]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[2002794]:_ir_chpl_direct_param_stride_range_iter[1103353] "temp"
    (2002797 call chpl_direct_param_stride_range_iter[1102585] coerce_tmp[2002759] coerce_tmp[2002778] ret_tmp[2002794])
    (2002801 'move' call_tmp[2002792] ret_tmp[2002794])
    val tmp[2046270]:_ic_chpl_direct_param_stride_range_iter[1103347] "temp"
    (2002804 'move' tmp[2046270](2002807 call _getIterator[1103362] call_tmp[2002792]))
    (2046272 '.=' this[1108345] F5__iterator[2046140] tmp[2046270])
    val ret[2002810]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead after last mention" "RVV" "temp"
    val call_tmp[2002812]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (2002815 call chpl_range_check_stride[1102905])
    val call_tmp[2002818]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[2046276]:int(64)[13] "temp"
    (2002820 'move' tmp[2046276] 0)
    (2046278 '.=' this[1108345] F6_i[2046142] tmp[2046276])
    val call_tmp[2002823]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val default_arg_first[2002825]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[2002827]:int(64)[13] "temp"
    ref tmp[2046282]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103490] "temp"
    (2046287 'move' tmp[2046282](2046284 '.' this[1108345] F5__iterator[2046140]))
    (2002829 'move' low[2002827](2002831 '.v' tmp[2046282] F0_low[2065762]))
    (2002834 'move' default_arg_first[2002825](2002837 call chpl_checkIfRangeIterWillOverflow_default_first[1103259] low[2002827]))
    const-val default_arg_last[2002839]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[2002841]:int(64)[13] "temp"
    ref tmp[2046289]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103490] "temp"
    (2046294 'move' tmp[2046289](2046291 '.' this[1108345] F5__iterator[2046140]))
    (2002843 'move' high[2002841](2002845 '.v' tmp[2046289] F1_high[2065766]))
    (2002848 'move' default_arg_last[2002839](2002851 call chpl_checkIfRangeIterWillOverflow_default_last[1103287] high[2002841]))
    const-val _return_tmp_[2002853]:bool[10] "dead after last mention" "temp"
    const-val low[2002855]:int(64)[13] "temp"
    ref tmp[2046296]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103490] "temp"
    (2046301 'move' tmp[2046296](2046298 '.' this[1108345] F5__iterator[2046140]))
    (2002857 'move' low[2002855](2002859 '.v' tmp[2046296] F0_low[2065762]))
    const-val high[2002862]:int(64)[13] "temp"
    ref tmp[2046303]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103490] "temp"
    (2046308 'move' tmp[2046303](2046305 '.' this[1108345] F5__iterator[2046140]))
    (2002864 'move' high[2002862](2002866 '.v' tmp[2046303] F1_high[2065766]))
    (2002869 'move' _return_tmp_[2002853](2002872 call chpl_checkIfRangeIterWillOverflow[1096137] low[2002855] high[2002862] 1 default_arg_first[2002825] default_arg_last[2002839] 1))
    CForLoop[2002879]
    {
      const-val yret[2002908]:int(64)[13] "dead after last mention" "YVV" "temp"
      const-val tmp[2046310]:int(64)[13] "temp"
      (2046315 'move' tmp[2046310](2046312 '.v' this[1108345] F6_i[2046142]))
      (2002910 'move' yret[2002908] tmp[2046310])
      const-val _yieldedIndex[2002913]:int(64)[13] "temp"
      const-val tmp[2046317]:int(64)[13] "temp"
      (2046322 'move' tmp[2046317](2046319 '.v' this[1108345] F6_i[2046142]))
      (2002915 'move' _yieldedIndex[2002913] tmp[2046317])
      const-val i[2002919]:int(64)[13] "const" "index var" "insert auto destroy"
      (2002921 'move' i[2002919] _yieldedIndex[2002913])
      const-val yret[2002924]:int(64)[13] "dead after last mention" "YVV" "temp"
      (2002926 'move' yret[2002924] _yieldedIndex[2002913])
      const-val _yieldedIndex[2002954]:int(64)[13] "temp"
      (2003033 'move' _yieldedIndex[2002954] _yieldedIndex[2002913])
      const-val i[2002956]:int(64)[13] "const" "index var" "insert auto destroy"
      (2002958 'move' i[2002956] _yieldedIndex[2002954])
      const-val yret[2002961]:int(64)[13] "dead after last mention" "YVV" "temp"
      (2002963 'move' yret[2002961] _yieldedIndex[2002954])
      const-val _yieldedIndex[2002966]:int(64)[13] "temp"
      (2002968 'move' _yieldedIndex[2002966] _yieldedIndex[2002954])
      const-val i[2002971]:int(64)[13] "const" "index var" "insert auto destroy"
      (2002973 'move' i[2002971] _yieldedIndex[2002966])
      const-val yret[2002976]:uint(8)[100] "dead after last mention" "YVV" "temp"
      ref call_tmp[2002978]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
      ref _this_tmp_[2002980]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "temp"
      ref tmp[2046324]:_ref(string)[938000] "temp"
      (2046329 'move' tmp[2046324](2046326 '.' this[1108345] F1_localThis[2046132]))
      (2002982 'move' _this_tmp_[2002980](2002985 call buff[758025] tmp[2046324]))
      val coerce_tmp[2002987]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2002989 'move' coerce_tmp[2002987](2002991 'deref' _this_tmp_[2002980]))
      (2002993 'move' call_tmp[2002978](2002996 call this[954152] coerce_tmp[2002987] _yieldedIndex[2002966]))
      val tmp[2046331]:uint(8)[100] "temp"
      (2003001 'move' tmp[2046331](2003003 'deref' call_tmp[2002978]))
      (2046333 '.=' this[1108345] value[2046146] tmp[2046331])
      const-val tmp[2046337]:uint(8)[100] "temp"
      (2046342 'move' tmp[2046337](2046339 '.v' this[1108345] value[2046146]))
      (2003005 '=' yret[2002976] tmp[2046337])
      (2003008 'noop')
      (2048131 '.=' this[1108345] more[1108320] 2)
      gotoIterEnd _end[2048129] _end[2048129]
      label _jump_break_2[2048139]
      val tmp[2046344]:_ic_chpl_direct_param_stride_range_iter[1103347] "temp"
      (2046349 'move' tmp[2046344](2046346 '.v' this[1108345] F5__iterator[2046140]))
      (2003027 call _freeIterator[1103535] tmp[2046344])
      ref tmp[2046351]:_ref(2*int(64))[1040190] "temp"
      (2046356 'move' tmp[2046351](2046353 '.' this[1108345] F4_tmp[2046138]))
      (2003030 call chpl__autoDestroy[1635435] tmp[2046351])
      val tmp[2046358]:_ic_chpl_direct_counted_range_iter_helper[1103601] "temp"
      (2046363 'move' tmp[2046358](2046360 '.v' this[1108345] F3__iterator[2046136]))
      (2003014 call _freeIterator[1103785] tmp[2046358])
      val tmp[2046365]:_ic_chpl_direct_counted_range_iter[1103851] "temp"
      (2046370 'move' tmp[2046365](2046367 '.v' this[1108345] F2__iterator[2046134]))
      (2003017 call _freeIterator[1104035] tmp[2046365])
      ref tmp[2046372]:_ref(string)[938000] "temp"
      (2046377 'move' tmp[2046372](2046374 '.' this[1108345] F1_localThis[2046132]))
      (2003020 call chpl__autoDestroy[1562275] tmp[2046372])
      gotoReturn _endchpl_bytes[1847315] _endchpl_bytes[1847315]
      label _jump_2[2048137]
      {
        const-val tmp[2046379]:int(64)[13] "temp"
        ref tmp[2046385]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103490] "temp"
        (2046390 'move' tmp[2046385](2046387 '.' this[1108345] F5__iterator[2046140]))
        (2002883 'move' tmp[2046379](2002885 '.v' tmp[2046385] F0_low[2065762]))
        (2046381 '.=' this[1108345] F7_low[2046144] tmp[2046379])
        val tmp[2046392]:int(64)[13] "temp"
        const-val tmp[2046398]:int(64)[13] "temp"
        (2046403 'move' tmp[2046398](2046400 '.v' this[1108345] F7_low[2046144]))
        (2002888 '=' tmp[2046392] tmp[2046398])
        (2046394 '.=' this[1108345] F6_i[2046142] tmp[2046392])
      }
      {
        const-val high[2002892]:int(64)[13] "temp"
        ref tmp[2046405]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103490] "temp"
        (2046410 'move' tmp[2046405](2046407 '.' this[1108345] F5__iterator[2046140]))
        (2002894 'move' high[2002892](2002896 '.v' tmp[2046405] F1_high[2065766]))
        val tmp[2046412]:int(64)[13] "temp"
        (2046417 'move' tmp[2046412](2046414 '.v' this[1108345] F6_i[2046142]))
        (2002899 '<=' tmp[2046412] high[2002892])
      }
      {
        val call_tmp[2002903]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val tmp[2046419]:int(64)[13] "temp"
        (2046424 'move' tmp[2046419](2046421 '.v' this[1108345] F6_i[2046142]))
        (2002905 '+=' tmp[2046419] 1)
        (2046426 '.=' this[1108345] F6_i[2046142] tmp[2046419])
      }
    }
    label _endchpl_direct_param_stride_range_iter[2002942]
    val tmp[2046430]:_ic_chpl_direct_param_stride_range_iter[1103347] "temp"
    (2046435 'move' tmp[2046430](2046432 '.v' this[1108345] F5__iterator[2046140]))
    (2002945 call _freeIterator[1103535] tmp[2046430])
    ref tmp[2046437]:_ref(2*int(64))[1040190] "temp"
    (2046442 'move' tmp[2046437](2046439 '.' this[1108345] F4_tmp[2046138]))
    (2002948 call chpl__autoDestroy[1635435] tmp[2046437])
    label _endchpl_direct_counted_range_iter_helper[2002950]
    val tmp[2046444]:_ic_chpl_direct_counted_range_iter_helper[1103601] "temp"
    (2046449 'move' tmp[2046444](2046446 '.v' this[1108345] F3__iterator[2046136]))
    (1930425 call _freeIterator[1103785] tmp[2046444])
    label _endchpl_direct_counted_range_iter[1930427]
    val tmp[2046451]:_ic_chpl_direct_counted_range_iter[1103851] "temp"
    (2046456 'move' tmp[2046451](2046453 '.v' this[1108345] F2__iterator[2046134]))
    (1876618 call _freeIterator[1104035] tmp[2046451])
    ref tmp[2046458]:_ref(string)[938000] "temp"
    (2046463 'move' tmp[2046458](2046460 '.' this[1108345] F1_localThis[2046132]))
    (1876620 call chpl__autoDestroy[1562275] tmp[2046458])
    label _endchpl_bytes[1847315]
    (2048141 '.=' this[1108345] more[1108320] 0)
    label _end[2048129]
    (2048176 return _void[55])
  }
  function _ic_chpl_bytes__ref_string[1108317].zip1[1108352](const in arg this[1108354]:_ic_chpl_bytes__ref_string[1108317]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val ret[2046466]:_ir_chpl_bytes__ref_string[1108323] "dead at end of block" "RVV" "temp"
    const-val call_tmp[2046468]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[2046470]:string[26] "temp"
    val localThis[2046472]:string[26] "dead at end of block" "insert auto destroy"
    val _indexOfInterest[2046474]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2046476]:_ic_chpl_direct_counted_range_iter[1103851] "dead at end of block" "expr temp" "temp"
    ref call_tmp[2046478]:_ref(int(64))[936633] "dead at end of block" "maybe param" "temp"
    const-val call_tmp[2046480]:_ir_chpl_direct_counted_range_iter[1103857] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[2046482]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    const-val ret_tmp[2046484]:_ir_chpl_direct_counted_range_iter[1103857] "temp"
    val ret[2046486]:_ir_chpl_direct_counted_range_iter[1103857] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[2046488]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2046490]:_ic_chpl_direct_counted_range_iter_helper[1103601] "dead at end of block" "expr temp" "temp"
    const-val call_tmp[2046492]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[2046494]:_ir_chpl_direct_counted_range_iter_helper[1103607] "temp"
    const-val low[2046496]:int(64)[13] "temp"
    const-val count[2046498]:int(64)[13] "temp"
    val ret[2046500]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead after last mention" "RVV" "temp"
    val call_tmp[2046502]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val tmp[2046504]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[2046506]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    const-val call_tmp[2046508]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[2046510]:int(64)[13] "temp"
    const-val call_tmp[2046512]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const tmp[2046514]:2*int(64)[1040117] "dead at end of block" "const" "insert auto destroy" "temp"
    val tmp[2046516]:2*int(64)[1040117] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
    const-val tmp[2046518]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[2046520]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[2046522]:int(64)[13] "temp"
    val tmp[2046524]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[2046526]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[2046528]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[2046530]:int(64)[13] "temp"
    val call_tmp[2046532]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[2046534]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val call_tmp[2046536]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[2046538]:2*int(64)[1040117] "temp"
    const-val low[2046540]:int(64)[13] "temp"
    val tmp[2046542]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[2046544]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[2046546]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[2046548]:int(64)[13] "temp"
    val call_tmp[2046550]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[2046552]:int(64)[13] "temp"
    val call_tmp[2046554]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[2046556]:int(64)[13] "temp"
    val ret_tmp[2046558]:2*int(64)[1040117] "temp"
    const-val low[2046560]:int(64)[13] "temp"
    ref call_tmp[2046562]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
    const-val start[2046564]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[2046566]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    ref call_tmp[2046568]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
    const-val end[2046570]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[2046572]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val _indexOfInterest[2046574]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2046576]:_ic_chpl_direct_param_stride_range_iter[1103347] "dead at end of block" "expr temp" "temp"
    const-val call_tmp[2046578]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[2046580]:_ir_chpl_direct_param_stride_range_iter[1103353] "temp"
    val ret[2046582]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead after last mention" "RVV" "temp"
    val call_tmp[2046584]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val i[2046586]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[2046588]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[2046590]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val default_arg_first[2046592]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[2046594]:int(64)[13] "temp"
    const-val default_arg_last[2046596]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[2046598]:int(64)[13] "temp"
    const-val _return_tmp_[2046600]:bool[10] "dead after last mention" "temp"
    const-val low[2046602]:int(64)[13] "temp"
    const-val high[2046604]:int(64)[13] "temp"
    val yret[2046606]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[2046608]:int(64)[13] "temp"
    const i[2046610]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[2046612]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[2046614]:int(64)[13] "temp"
    const i[2046616]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[2046618]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[2046620]:int(64)[13] "temp"
    const i[2046622]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[2046624]:uint(8)[100] "dead after last mention" "YVV" "temp"
    ref call_tmp[2046626]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[2046628]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "temp"
    val coerce_tmp[2046630]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val coerce_tmp[2046632]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    const-val low[2046634]:int(64)[13] "temp"
    const-val high[2046636]:int(64)[13] "temp"
    val call_tmp[2046638]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    label _endchpl_direct_param_stride_range_iter[2046640]
    label _endchpl_direct_counted_range_iter_helper[2046642]
    label _endchpl_direct_counted_range_iter[2046644]
    label _endchpl_bytes[2046646]
    ref tmp[2046648]:_ref(string)[938000] "temp"
    val tmp[2046650]:string[26] "temp"
    ref tmp[2046652]:_ref(string)[938000] "temp"
    val tmp[2046654]:_ic_chpl_direct_counted_range_iter[1103851] "temp"
    ref tmp[2046656]:_ref(_ic_chpl_direct_counted_range_iter)[1103994] "temp"
    ref tmp[2046658]:_ref(_ic_chpl_direct_counted_range_iter)[1103994] "temp"
    val tmp[2046660]:_ic_chpl_direct_counted_range_iter_helper[1103601] "temp"
    ref tmp[2046662]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
    ref tmp[2046664]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
    ref tmp[2046666]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
    ref tmp[2046668]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
    ref tmp[2046670]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
    ref tmp[2046672]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
    ref tmp[2046674]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
    ref tmp[2046676]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
    const tmp[2046678]:2*int(64)[1040117] "temp"
    ref tmp[2046680]:_ref(2*int(64))[1040190] "temp"
    ref tmp[2046682]:_ref(2*int(64))[1040190] "temp"
    val tmp[2046684]:_ic_chpl_direct_param_stride_range_iter[1103347] "temp"
    val tmp[2046686]:int(64)[13] "temp"
    ref tmp[2046688]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103490] "temp"
    ref tmp[2046690]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103490] "temp"
    ref tmp[2046692]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103490] "temp"
    ref tmp[2046694]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103490] "temp"
    val tmp[2046696]:int(64)[13] "temp"
    val tmp[2046698]:int(64)[13] "temp"
    ref tmp[2046700]:_ref(string)[938000] "temp"
    val tmp[2046702]:uint(8)[100] "temp"
    val tmp[2046704]:uint(8)[100] "temp"
    val tmp[2046706]:_ic_chpl_direct_param_stride_range_iter[1103347] "temp"
    ref tmp[2046708]:_ref(2*int(64))[1040190] "temp"
    val tmp[2046710]:_ic_chpl_direct_counted_range_iter_helper[1103601] "temp"
    val tmp[2046712]:_ic_chpl_direct_counted_range_iter[1103851] "temp"
    ref tmp[2046714]:_ref(string)[938000] "temp"
    const-val tmp[2046716]:int(64)[13] "temp"
    ref tmp[2046718]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103490] "temp"
    val tmp[2046720]:int(64)[13] "temp"
    const-val tmp[2046722]:int(64)[13] "temp"
    ref tmp[2046724]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103490] "temp"
    val tmp[2046726]:int(64)[13] "temp"
    val tmp[2046728]:int(64)[13] "temp"
    val tmp[2046730]:_ic_chpl_direct_param_stride_range_iter[1103347] "temp"
    ref tmp[2046732]:_ref(2*int(64))[1040190] "temp"
    val tmp[2046734]:_ic_chpl_direct_counted_range_iter_helper[1103601] "temp"
    val tmp[2046736]:_ic_chpl_direct_counted_range_iter[1103851] "temp"
    ref tmp[2046738]:_ref(string)[938000] "temp"
    (2046740 'move' tmp[2046648](2046742 '.v' this[1108354] F0_this[2046128]))
    (2046746 call localize[32889] tmp[2046648] ret_tmp[2046470])
    (2046749 'move' call_tmp[2046468] ret_tmp[2046470])
    (2046752 'move' tmp[2046650] call_tmp[2046468])
    (2046755 '.=' this[1108354] F1_localThis[2046132] tmp[2046650])
    (2046759 'move' tmp[2046652](2046761 '.' this[1108354] F1_localThis[2046132]))
    (2046764 'move' call_tmp[2046478](2046767 call buffLen[757947] tmp[2046652]))
    (2046769 'move' coerce_tmp[2046482](2046771 'deref' call_tmp[2046478]))
    (2046774 call chpl_direct_counted_range_iter[458039] 0 coerce_tmp[2046482] ret_tmp[2046484])
    (2046778 'move' call_tmp[2046480] ret_tmp[2046484])
    (2046781 'move' tmp[2046654](2046784 call _getIterator[1103866] call_tmp[2046480]))
    (2046786 '.=' this[1108354] F2__iterator[2046134] tmp[2046654])
    (2046790 'move' tmp[2046656](2046792 '.' this[1108354] F2__iterator[2046134]))
    (2046795 'move' low[2046496](2046797 '.v' tmp[2046656] F0_low[2058106]))
    (2046800 'move' tmp[2046658](2046802 '.' this[1108354] F2__iterator[2046134]))
    (2046805 'move' count[2046498](2046807 '.v' tmp[2046658] F1_count[2058110]))
    (2046811 call chpl_direct_counted_range_iter_helper[1102159] low[2046496] count[2046498] ret_tmp[2046494])
    (2046815 'move' call_tmp[2046492] ret_tmp[2046494])
    (2046818 'move' tmp[2046660](2046821 call _getIterator[1103616] call_tmp[2046492]))
    (2046823 '.=' this[1108354] F3__iterator[2046136] tmp[2046660])
    (2046827 'move' tmp[2046662](2046829 '.' this[1108354] F3__iterator[2046136]))
    (2046832 'move' count[2046510](2046834 '.v' tmp[2046662] F1_count[2064268]))
    (2046837 'move' call_tmp[2046508](2046840 call <[948459] count[2046510]))
    (2046842 'move' tmp[2046506] call_tmp[2046508])
    (2046845 'move' tmp[2046504] call_tmp[2046508])
    (2046848 'move' call_tmp[2046512] call_tmp[2046508])
    if call_tmp[2046508]
    {
      (2046854 call boundsCheckHalt[210187] "With a negative count, the range must have a last index.")
    }
    (2046857 'move' tmp[2046664](2046859 '.' this[1108354] F3__iterator[2046136]))
    (2046862 'move' count[2046522](2046864 '.v' tmp[2046664] F1_count[2064268]))
    (2046867 'move' call_tmp[2046520](2046870 call ==[435671] count[2046522] 0))
    (2046873 'move' tmp[2046518] call_tmp[2046520])
    if call_tmp[2046520]
    {
      const-val tmp[2046878]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      val call_tmp[2046880]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[2046882]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val low[2046884]:int(64)[13] "temp"
      ref tmp[2046886]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
      (2046888 'move' tmp[2046886](2046890 '.' this[1108354] F3__iterator[2046136]))
      (2046893 'move' low[2046884](2046895 '.v' tmp[2046886] F0_low[2064264]))
      (2046898 'move' call_tmp[2046882](2046901 call _cast[956095] low[2046884]))
      const-val call_tmp[2046903]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2046905]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2046907 'move' coerce_tmp[2046905](2046909 'cast' uint(64)[115] 1))
      (2046912 'move' call_tmp[2046903](2046915 call -[962254] call_tmp[2046882]))
      const-val call_tmp[2046917]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (2046919 'move' call_tmp[2046917](2046922 call _cast[953604] call_tmp[2046903]))
      const-val ret_tmp[2046924]:2*int(64)[1040117] "temp"
      const-val low[2046926]:int(64)[13] "temp"
      ref tmp[2046928]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
      (2046930 'move' tmp[2046928](2046932 '.' this[1108354] F3__iterator[2046136]))
      (2046935 'move' low[2046926](2046937 '.v' tmp[2046928] F0_low[2064264]))
      (2046941 call _build_tuple[1040075] low[2046926] call_tmp[2046917] ret_tmp[2046924])
      (2046945 'move' tmp[2046878] ret_tmp[2046924])
      (2046948 'move' tmp[2046516] tmp[2046878])
    }
    {
      const-val tmp[2046952]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      val call_tmp[2046954]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[2046956]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val count[2046958]:int(64)[13] "temp"
      ref tmp[2046960]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
      (2046962 'move' tmp[2046960](2046964 '.' this[1108354] F3__iterator[2046136]))
      (2046967 'move' count[2046958](2046969 '.v' tmp[2046960] F1_count[2064268]))
      (2046972 'move' call_tmp[2046956] count[2046958])
      const-val call_tmp[2046975]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val count[2046977]:int(64)[13] "temp"
      ref tmp[2046979]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
      (2046981 'move' tmp[2046979](2046983 '.' this[1108354] F3__iterator[2046136]))
      (2046986 'move' count[2046977](2046988 '.v' tmp[2046979] F1_count[2064268]))
      (2046991 'move' call_tmp[2046975](2046994 call -[962287] count[2046977]))
      const-val call_tmp[2046996]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val low[2046998]:int(64)[13] "temp"
      ref tmp[2047000]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
      (2047002 'move' tmp[2047000](2047004 '.' this[1108354] F3__iterator[2046136]))
      (2047007 'move' low[2046998](2047009 '.v' tmp[2047000] F0_low[2064264]))
      (2047012 'move' call_tmp[2046996](2047015 call +[439679] low[2046998] call_tmp[2046975]))
      const-val ret_tmp[2047018]:2*int(64)[1040117] "temp"
      const-val low[2047020]:int(64)[13] "temp"
      ref tmp[2047022]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
      (2047024 'move' tmp[2047022](2047026 '.' this[1108354] F3__iterator[2046136]))
      (2047029 'move' low[2047020](2047031 '.v' tmp[2047022] F0_low[2064264]))
      (2047035 call _build_tuple[1040075] low[2047020] call_tmp[2046996] ret_tmp[2047018])
      (2047039 'move' tmp[2046952] ret_tmp[2047018])
      (2047042 'move' tmp[2046516] tmp[2046952])
    }
    (2047046 '=' tmp[2046678] tmp[2046516])
    (2047049 '.=' this[1108354] F4_tmp[2046138] tmp[2046678])
    (2047053 'noop')
    1
    (2047055 'move' tmp[2046680](2047057 '.' this[1108354] F4_tmp[2046138]))
    (2047060 'move' call_tmp[2046562](2047062 '.' tmp[2046680] x0[1040113]))
    (2047065 'move' coerce_tmp[2046566](2047067 'deref' call_tmp[2046562]))
    (2047069 '=' start[2046564] coerce_tmp[2046566])
    (2047072 'noop')
    (2047073 'move' tmp[2046682](2047075 '.' this[1108354] F4_tmp[2046138]))
    (2047078 'move' call_tmp[2046568](2047080 '.' tmp[2046682] x1[1040115]))
    (2047083 'move' coerce_tmp[2046572](2047085 'deref' call_tmp[2046568]))
    (2047087 '=' end[2046570] coerce_tmp[2046572])
    (2047090 'noop')
    (2047092 call chpl_direct_param_stride_range_iter[1102585] coerce_tmp[2046566] coerce_tmp[2046572] ret_tmp[2046580])
    (2047096 'move' call_tmp[2046578] ret_tmp[2046580])
    (2047099 'move' tmp[2046684](2047102 call _getIterator[1103362] call_tmp[2046578]))
    (2047104 '.=' this[1108354] F5__iterator[2046140] tmp[2046684])
    (2047109 call chpl_range_check_stride[1102905])
    (2047110 'move' tmp[2046686] 0)
    (2047113 '.=' this[1108354] F6_i[2046142] tmp[2046686])
    (2047117 'move' tmp[2046688](2047119 '.' this[1108354] F5__iterator[2046140]))
    (2047122 'move' low[2046594](2047124 '.v' tmp[2046688] F0_low[2065762]))
    (2047127 'move' default_arg_first[2046592](2047130 call chpl_checkIfRangeIterWillOverflow_default_first[1103259] low[2046594]))
    (2047132 'move' tmp[2046690](2047134 '.' this[1108354] F5__iterator[2046140]))
    (2047137 'move' high[2046598](2047139 '.v' tmp[2046690] F1_high[2065766]))
    (2047142 'move' default_arg_last[2046596](2047145 call chpl_checkIfRangeIterWillOverflow_default_last[1103287] high[2046598]))
    (2047147 'move' tmp[2046692](2047149 '.' this[1108354] F5__iterator[2046140]))
    (2047152 'move' low[2046602](2047154 '.v' tmp[2046692] F0_low[2065762]))
    (2047157 'move' tmp[2046694](2047159 '.' this[1108354] F5__iterator[2046140]))
    (2047162 'move' high[2046604](2047164 '.v' tmp[2046694] F1_high[2065766]))
    (2047167 'move' _return_tmp_[2046600](2047170 call chpl_checkIfRangeIterWillOverflow[1096137] low[2046602] high[2046604] 1 default_arg_first[2046592] default_arg_last[2046596] 1))
    (2047177 return _void[55])
  }
  function _ic_chpl_bytes__ref_string[1108317].zip2[1108361](const in arg this[1108363]:_ic_chpl_bytes__ref_string[1108317]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val ret[2047180]:_ir_chpl_bytes__ref_string[1108323] "dead at end of block" "RVV" "temp"
    val call_tmp[2047182]:string[26] "dead at end of block" "maybe param" "temp"
    val ret_tmp[2047184]:string[26] "temp"
    val localThis[2047186]:string[26] "dead at end of block" "insert auto destroy"
    val _indexOfInterest[2047188]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2047190]:_ic_chpl_direct_counted_range_iter[1103851] "dead at end of block" "expr temp" "temp"
    ref call_tmp[2047192]:_ref(int(64))[936633] "dead at end of block" "maybe param" "temp"
    val call_tmp[2047194]:_ir_chpl_direct_counted_range_iter[1103857] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[2047196]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val ret_tmp[2047198]:_ir_chpl_direct_counted_range_iter[1103857] "temp"
    val ret[2047200]:_ir_chpl_direct_counted_range_iter[1103857] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[2047202]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2047204]:_ic_chpl_direct_counted_range_iter_helper[1103601] "dead at end of block" "expr temp" "temp"
    val call_tmp[2047206]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[2047208]:_ir_chpl_direct_counted_range_iter_helper[1103607] "temp"
    const-val low[2047210]:int(64)[13] "temp"
    const-val count[2047212]:int(64)[13] "temp"
    val ret[2047214]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead after last mention" "RVV" "temp"
    val call_tmp[2047216]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[2047218]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val tmp[2047220]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    val call_tmp[2047222]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[2047224]:int(64)[13] "temp"
    val call_tmp[2047226]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const tmp[2047228]:2*int(64)[1040117] "dead at end of block" "const" "insert auto destroy" "temp"
    val tmp[2047230]:2*int(64)[1040117] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
    val tmp[2047232]:bool[10] "dead after last mention" "maybe param" "temp"
    val call_tmp[2047234]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[2047236]:int(64)[13] "temp"
    val tmp[2047238]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[2047240]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[2047242]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[2047244]:int(64)[13] "temp"
    val call_tmp[2047246]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[2047248]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val call_tmp[2047250]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[2047252]:2*int(64)[1040117] "temp"
    const-val low[2047254]:int(64)[13] "temp"
    val tmp[2047256]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[2047258]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[2047260]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[2047262]:int(64)[13] "temp"
    val call_tmp[2047264]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[2047266]:int(64)[13] "temp"
    val call_tmp[2047268]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[2047270]:int(64)[13] "temp"
    val ret_tmp[2047272]:2*int(64)[1040117] "temp"
    const-val low[2047274]:int(64)[13] "temp"
    ref call_tmp[2047276]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
    const start[2047278]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[2047280]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    ref call_tmp[2047282]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
    const end[2047284]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[2047286]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val _indexOfInterest[2047288]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2047290]:_ic_chpl_direct_param_stride_range_iter[1103347] "dead at end of block" "expr temp" "temp"
    val call_tmp[2047292]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[2047294]:_ir_chpl_direct_param_stride_range_iter[1103353] "temp"
    val ret[2047296]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead after last mention" "RVV" "temp"
    val call_tmp[2047298]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val i[2047300]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[2047302]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[2047304]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val default_arg_first[2047306]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[2047308]:int(64)[13] "temp"
    val default_arg_last[2047310]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[2047312]:int(64)[13] "temp"
    val _return_tmp_[2047314]:bool[10] "dead after last mention" "temp"
    const-val low[2047316]:int(64)[13] "temp"
    const-val high[2047318]:int(64)[13] "temp"
    const-val yret[2047320]:int(64)[13] "dead after last mention" "YVV" "temp"
    const-val _yieldedIndex[2047322]:int(64)[13] "temp"
    const-val i[2047324]:int(64)[13] "const" "index var" "insert auto destroy"
    const-val yret[2047326]:int(64)[13] "dead after last mention" "YVV" "temp"
    const-val _yieldedIndex[2047328]:int(64)[13] "temp"
    const-val i[2047330]:int(64)[13] "const" "index var" "insert auto destroy"
    const-val yret[2047332]:int(64)[13] "dead after last mention" "YVV" "temp"
    const-val _yieldedIndex[2047334]:int(64)[13] "temp"
    const-val i[2047336]:int(64)[13] "const" "index var" "insert auto destroy"
    const-val yret[2047338]:uint(8)[100] "dead after last mention" "YVV" "temp"
    ref call_tmp[2047340]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[2047342]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "temp"
    val coerce_tmp[2047344]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val coerce_tmp[2047346]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    const-val low[2047348]:int(64)[13] "temp"
    const-val high[2047350]:int(64)[13] "temp"
    val call_tmp[2047352]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    label _endchpl_direct_param_stride_range_iter[2047354]
    label _endchpl_direct_counted_range_iter_helper[2047356]
    label _endchpl_direct_counted_range_iter[2047358]
    label _endchpl_bytes[2047360]
    ref tmp[2047362]:_ref(string)[938000] "temp"
    val tmp[2047364]:string[26] "temp"
    ref tmp[2047366]:_ref(string)[938000] "temp"
    val tmp[2047368]:_ic_chpl_direct_counted_range_iter[1103851] "temp"
    ref tmp[2047370]:_ref(_ic_chpl_direct_counted_range_iter)[1103994] "temp"
    ref tmp[2047372]:_ref(_ic_chpl_direct_counted_range_iter)[1103994] "temp"
    val tmp[2047374]:_ic_chpl_direct_counted_range_iter_helper[1103601] "temp"
    ref tmp[2047376]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
    ref tmp[2047378]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
    ref tmp[2047380]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
    ref tmp[2047382]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
    ref tmp[2047384]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
    ref tmp[2047386]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
    ref tmp[2047388]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
    ref tmp[2047390]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
    const tmp[2047392]:2*int(64)[1040117] "temp"
    ref tmp[2047394]:_ref(2*int(64))[1040190] "temp"
    ref tmp[2047396]:_ref(2*int(64))[1040190] "temp"
    val tmp[2047398]:_ic_chpl_direct_param_stride_range_iter[1103347] "temp"
    val tmp[2047400]:int(64)[13] "temp"
    ref tmp[2047402]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103490] "temp"
    ref tmp[2047404]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103490] "temp"
    ref tmp[2047406]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103490] "temp"
    ref tmp[2047408]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103490] "temp"
    const-val tmp[2047410]:int(64)[13] "temp"
    const-val tmp[2047412]:int(64)[13] "temp"
    ref tmp[2047414]:_ref(string)[938000] "temp"
    val tmp[2047416]:uint(8)[100] "temp"
    const-val tmp[2047418]:uint(8)[100] "temp"
    val tmp[2047420]:_ic_chpl_direct_param_stride_range_iter[1103347] "temp"
    ref tmp[2047422]:_ref(2*int(64))[1040190] "temp"
    val tmp[2047424]:_ic_chpl_direct_counted_range_iter_helper[1103601] "temp"
    val tmp[2047426]:_ic_chpl_direct_counted_range_iter[1103851] "temp"
    ref tmp[2047428]:_ref(string)[938000] "temp"
    const-val tmp[2047430]:int(64)[13] "temp"
    ref tmp[2047432]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103490] "temp"
    val tmp[2047434]:int(64)[13] "temp"
    const-val tmp[2047436]:int(64)[13] "temp"
    ref tmp[2047438]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103490] "temp"
    val tmp[2047440]:int(64)[13] "temp"
    val tmp[2047442]:int(64)[13] "temp"
    val tmp[2047444]:_ic_chpl_direct_param_stride_range_iter[1103347] "temp"
    ref tmp[2047446]:_ref(2*int(64))[1040190] "temp"
    val tmp[2047448]:_ic_chpl_direct_counted_range_iter_helper[1103601] "temp"
    val tmp[2047450]:_ic_chpl_direct_counted_range_iter[1103851] "temp"
    ref tmp[2047452]:_ref(string)[938000] "temp"
    (2047454 'move' tmp[2047410](2047456 '.v' this[1108363] F6_i[2046142]))
    (2047459 'move' yret[2047320] tmp[2047410])
    (2047462 'move' tmp[2047412](2047464 '.v' this[1108363] F6_i[2046142]))
    (2047467 'move' _yieldedIndex[2047322] tmp[2047412])
    (2047470 'move' i[2047324] _yieldedIndex[2047322])
    (2047473 'move' yret[2047326] _yieldedIndex[2047322])
    (2047476 'move' _yieldedIndex[2047328] _yieldedIndex[2047322])
    (2047479 'move' i[2047330] _yieldedIndex[2047328])
    (2047482 'move' yret[2047332] _yieldedIndex[2047328])
    (2047485 'move' _yieldedIndex[2047334] _yieldedIndex[2047328])
    (2047488 'move' i[2047336] _yieldedIndex[2047334])
    (2047491 'move' tmp[2047414](2047493 '.' this[1108363] F1_localThis[2046132]))
    (2047496 'move' _this_tmp_[2047342](2047499 call buff[758025] tmp[2047414]))
    (2047501 'move' coerce_tmp[2047344](2047503 'deref' _this_tmp_[2047342]))
    (2047505 'move' call_tmp[2047340](2047508 call this[954152] coerce_tmp[2047344] _yieldedIndex[2047334]))
    (2047511 'move' tmp[2047416](2047513 'deref' call_tmp[2047340]))
    (2047515 '.=' this[1108363] value[2046146] tmp[2047416])
    (2047519 'move' tmp[2047418](2047521 '.v' this[1108363] value[2046146]))
    (2047524 '=' yret[2047338] tmp[2047418])
    (2047527 'noop')
    (2047528 '.=' this[1108363] more[1108320] 2)
    (2047532 return _void[55])
  }
  function _ic_chpl_bytes__ref_string[1108317].zip3[1108370](const in arg this[1108372]:_ic_chpl_bytes__ref_string[1108317]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val ret[2047535]:_ir_chpl_bytes__ref_string[1108323] "dead at end of block" "RVV" "temp"
    val call_tmp[2047537]:string[26] "dead at end of block" "maybe param" "temp"
    val ret_tmp[2047539]:string[26] "temp"
    val localThis[2047541]:string[26] "dead at end of block" "insert auto destroy"
    val _indexOfInterest[2047543]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2047545]:_ic_chpl_direct_counted_range_iter[1103851] "dead at end of block" "expr temp" "temp"
    ref call_tmp[2047547]:_ref(int(64))[936633] "dead at end of block" "maybe param" "temp"
    val call_tmp[2047549]:_ir_chpl_direct_counted_range_iter[1103857] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[2047551]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val ret_tmp[2047553]:_ir_chpl_direct_counted_range_iter[1103857] "temp"
    val ret[2047555]:_ir_chpl_direct_counted_range_iter[1103857] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[2047557]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2047559]:_ic_chpl_direct_counted_range_iter_helper[1103601] "dead at end of block" "expr temp" "temp"
    val call_tmp[2047561]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[2047563]:_ir_chpl_direct_counted_range_iter_helper[1103607] "temp"
    const-val low[2047565]:int(64)[13] "temp"
    const-val count[2047567]:int(64)[13] "temp"
    val ret[2047569]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead after last mention" "RVV" "temp"
    val call_tmp[2047571]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[2047573]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val tmp[2047575]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    val call_tmp[2047577]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[2047579]:int(64)[13] "temp"
    val call_tmp[2047581]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const tmp[2047583]:2*int(64)[1040117] "dead at end of block" "const" "insert auto destroy" "temp"
    val tmp[2047585]:2*int(64)[1040117] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
    val tmp[2047587]:bool[10] "dead after last mention" "maybe param" "temp"
    val call_tmp[2047589]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[2047591]:int(64)[13] "temp"
    val tmp[2047593]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[2047595]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[2047597]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[2047599]:int(64)[13] "temp"
    val call_tmp[2047601]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[2047603]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val call_tmp[2047605]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[2047607]:2*int(64)[1040117] "temp"
    const-val low[2047609]:int(64)[13] "temp"
    val tmp[2047611]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[2047613]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[2047615]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[2047617]:int(64)[13] "temp"
    val call_tmp[2047619]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[2047621]:int(64)[13] "temp"
    val call_tmp[2047623]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[2047625]:int(64)[13] "temp"
    val ret_tmp[2047627]:2*int(64)[1040117] "temp"
    const-val low[2047629]:int(64)[13] "temp"
    ref call_tmp[2047631]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
    const start[2047633]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[2047635]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    ref call_tmp[2047637]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
    const end[2047639]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[2047641]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val _indexOfInterest[2047643]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2047645]:_ic_chpl_direct_param_stride_range_iter[1103347] "dead at end of block" "expr temp" "temp"
    val call_tmp[2047647]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[2047649]:_ir_chpl_direct_param_stride_range_iter[1103353] "temp"
    val ret[2047651]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead after last mention" "RVV" "temp"
    val call_tmp[2047653]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val i[2047655]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[2047657]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[2047659]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val default_arg_first[2047661]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[2047663]:int(64)[13] "temp"
    val default_arg_last[2047665]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[2047667]:int(64)[13] "temp"
    val _return_tmp_[2047669]:bool[10] "dead after last mention" "temp"
    const-val low[2047671]:int(64)[13] "temp"
    const-val high[2047673]:int(64)[13] "temp"
    val yret[2047675]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[2047677]:int(64)[13] "temp"
    const i[2047679]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[2047681]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[2047683]:int(64)[13] "temp"
    const i[2047685]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[2047687]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[2047689]:int(64)[13] "temp"
    const i[2047691]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[2047693]:uint(8)[100] "dead after last mention" "YVV" "temp"
    ref call_tmp[2047695]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[2047697]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "temp"
    val coerce_tmp[2047699]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val coerce_tmp[2047701]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    const-val low[2047703]:int(64)[13] "temp"
    const-val high[2047705]:int(64)[13] "temp"
    val call_tmp[2047707]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    label _endchpl_direct_param_stride_range_iter[2047709]
    label _endchpl_direct_counted_range_iter_helper[2047711]
    label _endchpl_direct_counted_range_iter[2047713]
    label _endchpl_bytes[2047715]
    ref tmp[2047717]:_ref(string)[938000] "temp"
    val tmp[2047719]:string[26] "temp"
    ref tmp[2047721]:_ref(string)[938000] "temp"
    val tmp[2047723]:_ic_chpl_direct_counted_range_iter[1103851] "temp"
    ref tmp[2047725]:_ref(_ic_chpl_direct_counted_range_iter)[1103994] "temp"
    ref tmp[2047727]:_ref(_ic_chpl_direct_counted_range_iter)[1103994] "temp"
    val tmp[2047729]:_ic_chpl_direct_counted_range_iter_helper[1103601] "temp"
    ref tmp[2047731]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
    ref tmp[2047733]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
    ref tmp[2047735]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
    ref tmp[2047737]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
    ref tmp[2047739]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
    ref tmp[2047741]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
    ref tmp[2047743]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
    ref tmp[2047745]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
    const tmp[2047747]:2*int(64)[1040117] "temp"
    ref tmp[2047749]:_ref(2*int(64))[1040190] "temp"
    ref tmp[2047751]:_ref(2*int(64))[1040190] "temp"
    val tmp[2047753]:_ic_chpl_direct_param_stride_range_iter[1103347] "temp"
    val tmp[2047755]:int(64)[13] "temp"
    ref tmp[2047757]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103490] "temp"
    ref tmp[2047759]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103490] "temp"
    ref tmp[2047761]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103490] "temp"
    ref tmp[2047763]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103490] "temp"
    val tmp[2047765]:int(64)[13] "temp"
    val tmp[2047767]:int(64)[13] "temp"
    ref tmp[2047769]:_ref(string)[938000] "temp"
    val tmp[2047771]:uint(8)[100] "temp"
    val tmp[2047773]:uint(8)[100] "temp"
    val tmp[2047775]:_ic_chpl_direct_param_stride_range_iter[1103347] "temp"
    ref tmp[2047777]:_ref(2*int(64))[1040190] "temp"
    val tmp[2047779]:_ic_chpl_direct_counted_range_iter_helper[1103601] "temp"
    val tmp[2047781]:_ic_chpl_direct_counted_range_iter[1103851] "temp"
    ref tmp[2047783]:_ref(string)[938000] "temp"
    const-val tmp[2047785]:int(64)[13] "temp"
    ref tmp[2047787]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103490] "temp"
    val tmp[2047789]:int(64)[13] "temp"
    const-val tmp[2047791]:int(64)[13] "temp"
    ref tmp[2047793]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103490] "temp"
    val tmp[2047795]:int(64)[13] "temp"
    val tmp[2047797]:int(64)[13] "temp"
    val tmp[2047799]:_ic_chpl_direct_param_stride_range_iter[1103347] "temp"
    ref tmp[2047801]:_ref(2*int(64))[1040190] "temp"
    val tmp[2047803]:_ic_chpl_direct_counted_range_iter_helper[1103601] "temp"
    val tmp[2047805]:_ic_chpl_direct_counted_range_iter[1103851] "temp"
    ref tmp[2047807]:_ref(string)[938000] "temp"
    (2047809 return _void[55])
  }
  function _ic_chpl_bytes__ref_string[1108317].zip4[1108379](const in arg this[1108381]:_ic_chpl_bytes__ref_string[1108317]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val ret[2047812]:_ir_chpl_bytes__ref_string[1108323] "dead at end of block" "RVV" "temp"
    val call_tmp[2047814]:string[26] "dead at end of block" "maybe param" "temp"
    val ret_tmp[2047816]:string[26] "temp"
    val localThis[2047818]:string[26] "dead at end of block" "insert auto destroy"
    val _indexOfInterest[2047820]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2047822]:_ic_chpl_direct_counted_range_iter[1103851] "dead at end of block" "expr temp" "temp"
    ref call_tmp[2047824]:_ref(int(64))[936633] "dead at end of block" "maybe param" "temp"
    val call_tmp[2047826]:_ir_chpl_direct_counted_range_iter[1103857] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[2047828]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val ret_tmp[2047830]:_ir_chpl_direct_counted_range_iter[1103857] "temp"
    val ret[2047832]:_ir_chpl_direct_counted_range_iter[1103857] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[2047834]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2047836]:_ic_chpl_direct_counted_range_iter_helper[1103601] "dead at end of block" "expr temp" "temp"
    val call_tmp[2047838]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[2047840]:_ir_chpl_direct_counted_range_iter_helper[1103607] "temp"
    const-val low[2047842]:int(64)[13] "temp"
    const-val count[2047844]:int(64)[13] "temp"
    val ret[2047846]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead after last mention" "RVV" "temp"
    val call_tmp[2047848]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[2047850]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val tmp[2047852]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    val call_tmp[2047854]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[2047856]:int(64)[13] "temp"
    val call_tmp[2047858]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const tmp[2047860]:2*int(64)[1040117] "dead at end of block" "const" "insert auto destroy" "temp"
    val tmp[2047862]:2*int(64)[1040117] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
    val tmp[2047864]:bool[10] "dead after last mention" "maybe param" "temp"
    val call_tmp[2047866]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[2047868]:int(64)[13] "temp"
    val tmp[2047870]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[2047872]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[2047874]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[2047876]:int(64)[13] "temp"
    val call_tmp[2047878]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[2047880]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val call_tmp[2047882]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[2047884]:2*int(64)[1040117] "temp"
    const-val low[2047886]:int(64)[13] "temp"
    val tmp[2047888]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[2047890]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[2047892]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[2047894]:int(64)[13] "temp"
    val call_tmp[2047896]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[2047898]:int(64)[13] "temp"
    val call_tmp[2047900]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[2047902]:int(64)[13] "temp"
    val ret_tmp[2047904]:2*int(64)[1040117] "temp"
    const-val low[2047906]:int(64)[13] "temp"
    ref call_tmp[2047908]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
    const start[2047910]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[2047912]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    ref call_tmp[2047914]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
    const end[2047916]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[2047918]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val _indexOfInterest[2047920]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2047922]:_ic_chpl_direct_param_stride_range_iter[1103347] "dead at end of block" "expr temp" "temp"
    val call_tmp[2047924]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[2047926]:_ir_chpl_direct_param_stride_range_iter[1103353] "temp"
    val ret[2047928]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead after last mention" "RVV" "temp"
    val call_tmp[2047930]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val i[2047932]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[2047934]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[2047936]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val default_arg_first[2047938]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[2047940]:int(64)[13] "temp"
    val default_arg_last[2047942]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[2047944]:int(64)[13] "temp"
    val _return_tmp_[2047946]:bool[10] "dead after last mention" "temp"
    const-val low[2047948]:int(64)[13] "temp"
    const-val high[2047950]:int(64)[13] "temp"
    val yret[2047952]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[2047954]:int(64)[13] "temp"
    const i[2047956]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[2047958]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[2047960]:int(64)[13] "temp"
    const i[2047962]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[2047964]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[2047966]:int(64)[13] "temp"
    const i[2047968]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[2047970]:uint(8)[100] "dead after last mention" "YVV" "temp"
    ref call_tmp[2047972]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[2047974]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "temp"
    val coerce_tmp[2047976]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val coerce_tmp[2047978]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    const-val low[2047980]:int(64)[13] "temp"
    const-val high[2047982]:int(64)[13] "temp"
    val call_tmp[2047984]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    label _endchpl_direct_param_stride_range_iter[2047986]
    label _endchpl_direct_counted_range_iter_helper[2047988]
    label _endchpl_direct_counted_range_iter[2047990]
    label _endchpl_bytes[2047992]
    ref tmp[2047994]:_ref(string)[938000] "temp"
    val tmp[2047996]:string[26] "temp"
    ref tmp[2047998]:_ref(string)[938000] "temp"
    val tmp[2048000]:_ic_chpl_direct_counted_range_iter[1103851] "temp"
    ref tmp[2048002]:_ref(_ic_chpl_direct_counted_range_iter)[1103994] "temp"
    ref tmp[2048004]:_ref(_ic_chpl_direct_counted_range_iter)[1103994] "temp"
    val tmp[2048006]:_ic_chpl_direct_counted_range_iter_helper[1103601] "temp"
    ref tmp[2048008]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
    ref tmp[2048010]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
    ref tmp[2048012]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
    ref tmp[2048014]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
    ref tmp[2048016]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
    ref tmp[2048018]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
    ref tmp[2048020]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
    ref tmp[2048022]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
    const tmp[2048024]:2*int(64)[1040117] "temp"
    ref tmp[2048026]:_ref(2*int(64))[1040190] "temp"
    ref tmp[2048028]:_ref(2*int(64))[1040190] "temp"
    val tmp[2048030]:_ic_chpl_direct_param_stride_range_iter[1103347] "temp"
    val tmp[2048032]:int(64)[13] "temp"
    ref tmp[2048034]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103490] "temp"
    ref tmp[2048036]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103490] "temp"
    ref tmp[2048038]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103490] "temp"
    ref tmp[2048040]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103490] "temp"
    val tmp[2048042]:int(64)[13] "temp"
    val tmp[2048044]:int(64)[13] "temp"
    ref tmp[2048046]:_ref(string)[938000] "temp"
    val tmp[2048048]:uint(8)[100] "temp"
    val tmp[2048050]:uint(8)[100] "temp"
    val tmp[2048052]:_ic_chpl_direct_param_stride_range_iter[1103347] "temp"
    ref tmp[2048054]:_ref(2*int(64))[1040190] "temp"
    val tmp[2048056]:_ic_chpl_direct_counted_range_iter_helper[1103601] "temp"
    val tmp[2048058]:_ic_chpl_direct_counted_range_iter[1103851] "temp"
    ref tmp[2048060]:_ref(string)[938000] "temp"
    const-val tmp[2048062]:int(64)[13] "temp"
    ref tmp[2048064]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103490] "temp"
    val tmp[2048066]:int(64)[13] "temp"
    const-val tmp[2048068]:int(64)[13] "temp"
    ref tmp[2048070]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103490] "temp"
    val tmp[2048072]:int(64)[13] "temp"
    val tmp[2048074]:int(64)[13] "temp"
    val tmp[2048076]:_ic_chpl_direct_param_stride_range_iter[1103347] "temp"
    ref tmp[2048078]:_ref(2*int(64))[1040190] "temp"
    val tmp[2048080]:_ic_chpl_direct_counted_range_iter_helper[1103601] "temp"
    val tmp[2048082]:_ic_chpl_direct_counted_range_iter[1103851] "temp"
    ref tmp[2048084]:_ref(string)[938000] "temp"
    (2048086 'move' tmp[2048076](2048088 '.v' this[1108381] F5__iterator[2046140]))
    (2048092 call _freeIterator[1103535] tmp[2048076])
    (2048094 'move' tmp[2048078](2048096 '.' this[1108381] F4_tmp[2046138]))
    (2048100 call chpl__autoDestroy[1635435] tmp[2048078])
    (2048102 'move' tmp[2048080](2048104 '.v' this[1108381] F3__iterator[2046136]))
    (2048108 call _freeIterator[1103785] tmp[2048080])
    (2048110 'move' tmp[2048082](2048112 '.v' this[1108381] F2__iterator[2046134]))
    (2048116 call _freeIterator[1104035] tmp[2048082])
    (2048118 'move' tmp[2048084](2048120 '.' this[1108381] F1_localThis[2046132]))
    (2048124 call chpl__autoDestroy[1562275] tmp[2048084])
    (2048126 return _void[55])
  }
  function _ic_chpl_bytes__ref_string[1108317].hasMore[1108388](const in arg this[1108390]:_ic_chpl_bytes__ref_string[1108317]) : int(64)[13] "auto ii" "inline" "method" "resolved"
  {
    val tmp[2048179]:int(64)[13] "temp"
    const-val high[2048181]:int(64)[13] "temp"
    ref tmp[2048183]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103490] "temp"
    (2048185 'move' tmp[2048183](2048187 '.' this[1108390] F5__iterator[2046140]))
    (2048190 'move' high[2048181](2048192 '.v' tmp[2048183] F1_high[2065766]))
    const-val tmp[2048195]:int(64)[13] "temp"
    (2048197 'move' tmp[2048195](2048199 '.v' this[1108390] F6_i[2046142]))
    (2048205 'move' tmp[2048179](2048202 '<=' tmp[2048195] high[2048181]))
    (2048207 return tmp[2048179])
  }
  function _ic_chpl_bytes__ref_string[1108317].getValue[1108397](const in arg this[1108399]:_ic_chpl_bytes__ref_string[1108317]) : uint(8)[100] "auto ii" "inline" "method" "resolved"
  {
    val tmp[2048210]:uint(8)[100] "temp"
    (2048215 'move' tmp[2048210](2048212 '.v' this[1108399] value[2046146]))
    (2048217 return tmp[2048210])
  }
  function _ref(string)[938000].chpl_bytes[33577](const  ref arg this[33579]:_ref(string)[938000], ref arg _retArg[1863184]:_ref(_ir_chpl_bytes__ref_string)[1108434]) : void[4] "fn returns via _retArg" "inline" "iterator fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[2048275]:_ir_chpl_bytes__ref_string[1108323] "temp"
    (2048277 '.=' _ir[2048275] F0_this[2046130] this[33579])
    (2048281 '=' _retArg[1863184] _ir[2048275])
    (2048284 return _void[55])
  }
  function _ic_chpl_bytes__ref_string[1108317].init[1108406](const in arg this[1108408]:_ic_chpl_bytes__ref_string[1108317]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    const-val tmp[2048220]:int(64)[13] "temp"
    ref tmp[2048222]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103490] "temp"
    (2048224 'move' tmp[2048222](2048226 '.' this[1108408] F5__iterator[2046140]))
    (2048229 'move' tmp[2048220](2048231 '.v' tmp[2048222] F0_low[2065762]))
    (2048234 '.=' this[1108408] F7_low[2046144] tmp[2048220])
    val tmp[2048238]:int(64)[13] "temp"
    const-val tmp[2048240]:int(64)[13] "temp"
    (2048242 'move' tmp[2048240](2048244 '.v' this[1108408] F7_low[2046144]))
    (2048247 '=' tmp[2048238] tmp[2048240])
    (2048250 '.=' this[1108408] F6_i[2046142] tmp[2048238])
    (2048254 return _void[55])
  }
  function _ic_chpl_bytes__ref_string[1108317].incr[1108415](const in arg this[1108417]:_ic_chpl_bytes__ref_string[1108317]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val call_tmp[2048257]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[2048259]:int(64)[13] "temp"
    (2048261 'move' tmp[2048259](2048263 '.v' this[1108417] F6_i[2046142]))
    (2048266 '+=' tmp[2048259] 1)
    (2048269 '.=' this[1108417] F6_i[2046142] tmp[2048259])
    (2048273 return _void[55])
  }
  type _ic_chpl_bytes__ref_string[1108317] val super[1108318]:object[22] "super class" val more[1108320]:int(64)[13] ref F0_this[2046128]:_ref(string)[938000] val F1_localThis[2046132]:string[26] val F2__iterator[2046134]:_ic_chpl_direct_counted_range_iter[1103851] val F3__iterator[2046136]:_ic_chpl_direct_counted_range_iter_helper[1103601] const F4_tmp[2046138]:2*int(64)[1040117] val F5__iterator[2046140]:_ic_chpl_direct_param_stride_range_iter[1103347] val F6_i[2046142]:int(64)[13] const-val F7_low[2046144]:int(64)[13] val value[2046146]:uint(8)[100]
  type _ir_chpl_bytes__ref_string[1108323] ref F0_this[2046130]:_ref(string)[938000]
  function _getIterator[1108332](const  ref arg ir[1108334]:_ir_chpl_bytes__ref_string[1108323]) : _ic_chpl_bytes__ref_string[1108317] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1108441]:_ic_chpl_bytes__ref_string[1108317] "dead after last mention" "RVV" "temp"
    val _ic_[1108324]:_ic_chpl_bytes__ref_string[1108317] "dead after last mention" "temp"
    const-val call_tmp[1108448]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1108451 'move' call_tmp[1108448](1108463 'sizeof_bundle' _ic_chpl_bytes__ref_string[1108317]))
    const-val cast_tmp[1108466]:c_void_ptr[149] "dead after last mention" "temp"
    (1108468 'move' cast_tmp[1108466](1108329 call chpl_here_alloc[187788] call_tmp[1108448] 31))
    (1108337 'move' _ic_[1108324](1108470 'cast' _ic_chpl_bytes__ref_string[1108317] cast_tmp[1108466]))
    (1108339 'setcid' _ic_[1108324])
    (1108446 'move' ret[1108441] _ic_[1108324])
    (2048287 '.=' ret[1108441] more[1108320] 1)
    ref tmp[2048291]:_ref(string)[938000] "temp"
    (2048296 'move' tmp[2048291](2048292 '.v' ir[1108334] F0_this[2046130]))
    (2048298 '.=' ret[1108441] F0_this[2046128] tmp[2048291])
    (1108443 return ret[1108441])
  }
  function _ref(string)[938000].codepoints[33666](const  ref arg this[33668]:_ref(string)[938000], ref arg _retArg[1863206]:_ref(_ir_codepoints__ref_string)[1123027]) : void[4] "fn returns via _retArg" "inline" "iterator fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[2048975]:_ir_codepoints__ref_string[1122916] "temp"
    (2048977 '.=' _ir[2048975] F0_this[2048304] this[33668])
    (2048981 '=' _retArg[1863206] _ir[2048975])
    (2048984 return _void[55])
  }
  type _ic_codepoints__ref_string[1122910] val super[1122911]:object[22] "super class" val more[1122913]:int(64)[13] ref F0_this[2048302]:_ref(string)[938000] val F1_localThis[2048306]:string[26] val F2__iterator[2048308]:_ic_chpl_bytes__ref_string[1108317] val F3_localThis[2048310]:string[26] val F4__iterator[2048312]:_ic_chpl_direct_counted_range_iter[1103851] val F5__iterator[2048314]:_ic_chpl_direct_counted_range_iter_helper[1103601] const F6_tmp[2048316]:2*int(64)[1040117] val F7__iterator[2048318]:_ic_chpl_direct_param_stride_range_iter[1103347] val F8_i[2048320]:int(64)[13] val F9_i[2048322]:int(64)[13] const-val F10_ret_tmp[2048324]:(syserr,int(32),int(32))[964681] const F11_tmp[2048326]:(syserr,int(32),int(32))[964681] const F12_nBytes[2048328]:int(32)[95] val F13_yret[2048330]:int(32)[95] const F14_cp[2048332]:int(32)[95] val value[2048334]:int(32)[95]
  type _ir_codepoints__ref_string[1122916] ref F0_this[2048304]:_ref(string)[938000]
  function _getIterator[1122925](const  ref arg ir[1122927]:_ir_codepoints__ref_string[1122916]) : _ic_codepoints__ref_string[1122910] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1123034]:_ic_codepoints__ref_string[1122910] "dead after last mention" "RVV" "temp"
    val _ic_[1122917]:_ic_codepoints__ref_string[1122910] "dead after last mention" "temp"
    const-val call_tmp[1123041]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1123044 'move' call_tmp[1123041](1123056 'sizeof_bundle' _ic_codepoints__ref_string[1122910]))
    const-val cast_tmp[1123059]:c_void_ptr[149] "dead after last mention" "temp"
    (1123061 'move' cast_tmp[1123059](1122922 call chpl_here_alloc[187788] call_tmp[1123041] 34))
    (1122930 'move' _ic_[1122917](1123063 'cast' _ic_codepoints__ref_string[1122910] cast_tmp[1123059]))
    (1122932 'setcid' _ic_[1122917])
    (1123039 'move' ret[1123034] _ic_[1122917])
    (2048987 '.=' ret[1123034] more[1122913] 1)
    ref tmp[2048991]:_ref(string)[938000] "temp"
    (2048996 'move' tmp[2048991](2048992 '.v' ir[1122927] F0_this[2048304]))
    (2048998 '.=' ret[1123034] F0_this[2048302] tmp[2048991])
    (1123036 return ret[1123034])
  }
  function _ref(string)[938000].this[34635](const  ref arg this[34637]:_ref(string)[938000], const  ref arg i[34632]:codepointIndex[28277], ref arg _retArg[1863216]:_ref(string)[938000]) : void[4] "fn returns via _retArg" "method" "resolved"
  {
    const-val ret[504183]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[600846]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1863240]:string[26] "temp"
    (34649 call item[34691] this[34637] i[34632] ret_tmp[1863240])
    (1863243 'move' call_tmp[600846] ret_tmp[1863240])
    (1181020 'move' ret[504183] call_tmp[600846])
    (1863218 '=' _retArg[1863216] ret[504183])
    (1863220 return _void[55])
  }
  function _ref(string)[938000].this[34663](const  ref arg this[34665]:_ref(string)[938000], const in arg i[34660]:int(64)[13], ref arg _retArg[1863234]:_ref(string)[938000]) : void[4] "fn returns via _retArg" "inline" "method" "resolved"
  {
    const-val ret[504193]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[600853]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1863256]:string[26] "temp"
    (34677 call item[35011] this[34665] i[34660] ret_tmp[1863256])
    (1863259 'move' call_tmp[600853] ret_tmp[1863256])
    (1181026 'move' ret[504193] call_tmp[600853])
    (1863236 '=' _retArg[1863234] ret[504193])
    (1863238 return _void[55])
  }
  function _ref(string)[938000].item[34691](const  ref arg this[34693]:_ref(string)[938000], const  ref arg i[34688]:codepointIndex[28277], ref arg _retArg[1863246]:_ref(string)[938000]) : void[4] "fn returns via _retArg" "method" "resolved"
  {
    val ret[504203]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[553550]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[553558]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    const-val call_tmp[600868]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (600871 'move' call_tmp[600868](34702 call <[29043] i[34688] 0))
    (553560 'move' tmp[553558] call_tmp[600868])
    (553565 'move' tmp[553550] tmp[553558])
    const-val call_tmp[600873]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (600876 'move' call_tmp[600873] tmp[553550])
    if call_tmp[600873]
    {
      (34711 call halt[1157189] "index " i[34688] " out of bounds for string")
    }
    const-val call_tmp[600880]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (600883 'move' call_tmp[600880](34724 call isEmpty[35064] this[34693]))
    const-val call_tmp[600885]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (600888 'move' call_tmp[600885] call_tmp[600880])
    if call_tmp[600885]
    {
      (504209 'move' ret[504203](1863250 call chpl__initCopy[981409] ""))
      gotoReturn _end_item[504201] _end_item[504201]
    }
    const-val call_tmp[600892]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (600895 'move' call_tmp[600892](34754 call isASCII[31049] this[34693]))
    const-val call_tmp[600897]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (600900 'move' call_tmp[600897] call_tmp[600892])
    if call_tmp[600897]
    {
      const-val tmp[553577]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val tmp[553585]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[600914]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (600917 'move' call_tmp[600914](34758 call numBytes[32810] this[34693]))
      const-val call_tmp[600919]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (600922 'move' call_tmp[600919](34761 call >=[29193] i[34688] call_tmp[600914]))
      (553587 'move' tmp[553585] call_tmp[600919])
      (553592 'move' tmp[553577] tmp[553585])
      const-val call_tmp[600924]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (600927 'move' call_tmp[600924] tmp[553577])
      if call_tmp[600924]
      {
        const-val call_tmp[600931]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (600934 'move' call_tmp[600931](34771 call size[32772] this[34693]))
        (34774 call halt[1175822] "index " i[34688] " out of bounds for string with length " call_tmp[600931])
      }
      ref call_tmp[600938]:_ref(c_ptr(uint(8)))[937493] "dead at end of block" "maybe param" "temp"
      (600941 'move' call_tmp[600938](34789 call buff[758025] this[34693]))
      const-val call_tmp[600943]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (600946 'move' call_tmp[600943](34796 call _cast[39517] i[34688]))
      ref call_tmp[600950]:_ref(int(32))[936687] "dead at end of block" "maybe param" "temp"
      (600953 'move' call_tmp[600950](34802 call locale_id[758103] this[34693]))
      const-val call_tmp[600955]:(c_ptr(uint(8)),int(64))[955269] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1180872]:c_ptr(uint(8))[937484] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1180876 'move' coerce_tmp[1180872](1180874 'deref' call_tmp[600938]))
      const-val coerce_tmp[1180878]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1180882 'move' coerce_tmp[1180878](1180880 'deref' call_tmp[600950]))
      const-val ret_tmp[1864806]:(c_ptr(uint(8)),int(64))[955269] "temp"
      (34806 call bufferCopy[172974] coerce_tmp[1180872] call_tmp[600943] 1 coerce_tmp[1180878] ret_tmp[1864806])
      (1864809 'move' call_tmp[600955] ret_tmp[1864806])
      const-val tmp[34807]:(c_ptr(uint(8)),int(64))[955269] "dead at end of block" "insert auto destroy" "temp"
      (540454 'move' tmp[34807] call_tmp[600955])
      1
      ref call_tmp[600960]:_ref(c_ptr(uint(8)))[937493] "dead at end of block" "maybe param" "temp"
      (600963 'move' call_tmp[600960](1180892 '.' tmp[34807] x0[955265]))
      val newBuff[34782]:c_ptr(uint(8))[937484] "dead at end of block" "insert auto destroy"
      val coerce_tmp[1180897]:c_ptr(uint(8))[937484] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1180901 'move' coerce_tmp[1180897](1180899 'deref' call_tmp[600960]))
      (1876648 '=' newBuff[34782] coerce_tmp[1180897])
      (540456 'noop')
      ref call_tmp[600965]:_ref(int(64))[936633] "dead at end of block" "maybe param" "temp"
      (600968 'move' call_tmp[600965](1180906 '.' tmp[34807] x1[955267]))
      const-val allocSize[34784]:int(64)[13] "dead at end of block" "insert auto destroy"
      const-val coerce_tmp[1180911]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1180915 'move' coerce_tmp[1180911](1180913 'deref' call_tmp[600965]))
      (1876651 '=' allocSize[34784] coerce_tmp[1180911])
      (540458 'noop')
      const-val call_tmp[600970]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1862726]:string[26] "temp"
      (34826 call chpl_createStringWithOwnedBufferNV[30676] newBuff[34782] 1 allocSize[34784] 1 ret_tmp[1862726])
      (1862729 'move' call_tmp[600970] ret_tmp[1862726])
      (1181014 'move' ret[504203] call_tmp[600970])
      (1876660 call chpl__autoDestroy[1565916] tmp[34807])
      gotoReturn _end_item[504201] _end_item[504201]
    }
    {
      val charCount[34830]:int(64)[13] "dead at end of block" "insert auto destroy"
      (540460 'move' charCount[34830] 0)
      {
        val _indexOfInterest[34906]:(int(32),byteIndex,int(64))[1122203] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[34907]:_ic__cpIndexLen__ref_string[1122446] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[600977]:_ir__cpIndexLen__ref_string[1122452] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val default_arg_start[1180923]:byteIndex[28173] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        const-val ret_tmp[1867744]:byteIndex[28173] "temp"
        (1180925 call _cpIndexLen_default_start[1122092] this[34693] ret_tmp[1867744])
        (1867747 'move' default_arg_start[1180923] ret_tmp[1867744])
        const-val ret_tmp[1862900]:_ir__cpIndexLen__ref_string[1122452] "temp"
        (34843 call _cpIndexLen[31109] this[34693] default_arg_start[1180923] ret_tmp[1862900])
        (1862903 'move' call_tmp[600977] ret_tmp[1862900])
        (34916 'move' _iterator[34907](34914 call _getIterator[1122461] call_tmp[600977]))
        {
          val ret[1930734]:_ir__cpIndexLen__ref_string[1122452] "dead after last mention" "RVV" "temp"
          const-val call_tmp[1930736]:string[26] "dead at end of block" "maybe param" "temp"
          const-val ret_tmp[1930738]:string[26] "temp"
          ref this[1931963]:_ref(string)[938000] "temp"
          (1931968 'move' this[1931963](1931965 '.v' _iterator[34907] F0_this[2044776]))
          (1930741 call localize[32889] this[1931963] ret_tmp[1930738])
          (1930744 'move' call_tmp[1930736] ret_tmp[1930738])
          val localThis[1930747]:string[26] "dead at end of block" "insert auto destroy"
          (1930749 'move' localThis[1930747] call_tmp[1930736])
          const-val call_tmp[1930752]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1930754 'move' call_tmp[1930752](1930757 call isASCII[31049] localThis[1930747]))
          const-val call_tmp[1930759]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1930761 'move' call_tmp[1930759] call_tmp[1930752])
          if call_tmp[1930752]
          {
            const-val _iterator[1930766]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108627] "dead at end of block" "expr temp" "insert auto destroy" "temp"
            const-val call_tmp[1930768]:range(int(64),bounded,false)[1026875] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[1930770]:range(int(64),bounded,false)[1026875] "temp"
            ref this[1931970]:_ref(string)[938000] "temp"
            (1931975 'move' this[1931970](1931972 '.v' _iterator[34907] F0_this[2044776]))
            (1930773 call byteIndices[31068] this[1931970] ret_tmp[1930770])
            (1930776 'move' call_tmp[1930768] ret_tmp[1930770])
            val call_tmp[1930779]:_ic_these_range_int64_t_bounded_F[1096764] "dead at end of block" "expr temp" "maybe param" "temp"
            (1930781 'move' call_tmp[1930779](1930784 call _getIterator[1095381] call_tmp[1930768]))
            const-val call_tmp[1930786]:_ir_chpl_bytes__ref_string[1108323] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[1930788]:_ir_chpl_bytes__ref_string[1108323] "temp"
            ref this[1931977]:_ref(string)[938000] "temp"
            (1931982 'move' this[1931977](1931979 '.v' _iterator[34907] F0_this[2044776]))
            (1930791 call chpl_bytes[33577] this[1931977] ret_tmp[1930788])
            (1930794 'move' call_tmp[1930786] ret_tmp[1930788])
            val call_tmp[1930797]:_ic_chpl_bytes__ref_string[1108317] "dead at end of block" "expr temp" "maybe param" "temp"
            (1930799 'move' call_tmp[1930797](1930802 call _getIterator[1108332] call_tmp[1930786]))
            const-val ret_tmp[1930804]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108627] "temp"
            (1930807 call _build_tuple[1108585] call_tmp[1930779] call_tmp[1930797] ret_tmp[1930804])
            (1930811 'move' _iterator[1930766] ret_tmp[1930804])
            val _iterator[1930814]:_ic_these_range_int64_t_bounded_F[1096764] "temp"
            (1930816 'move' _iterator[1930814](1930818 '.v' _iterator[1930766] x0[1108623]))
            val _iterator[1930821]:_ic_chpl_bytes__ref_string[1108317] "temp"
            (1930823 'move' _iterator[1930821](1930825 '.v' _iterator[1930766] x1[1108625]))
            {
              (1930830 call zip1[1096799] _iterator[1930814])
            }
            {
              (1930834 call zip1[1108352] _iterator[1930821])
            }
            const-val isFinished[1930836]:bool[10] "temp"
            val hasMore[1930838]:bool[10] "temp"
            CForLoop[1930840]
            {
              val _indexOfInterest[1930863]:(int(64),uint(8))[1111101] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              {
                (1930867 call zip2[1108361] _iterator[1930821])
              }
              {
                const-val retTmp[1930870]:int(64)[13] "temp"
                (1930872 'move' retTmp[1930870](1930875 call hasMore[1108388] _iterator[1930821]))
                (1930877 'move' hasMore[1930838](1930879 'cast' bool[10] retTmp[1930870]))
              }
              (1930882 'move' isFinished[1930836](1930884 '!' hasMore[1930838]))
              if isFinished[1930836]
              {
                (1930888 'chpl_error' c"zippered iterations have non-equal lengths")
              }
              {
                (1930892 'move' _index[1930907](1930895 call getValue[1108397] _iterator[1930821]))
              }
              {
                (1930899 call zip2[1096808] _iterator[1930814])
              }
              {
                (1930902 'move' _index[1930913](1930905 call getValue[1096844] _iterator[1930814]))
              }
              val _index[1930907]:uint(8)[100] "temp"
              (1930909 '.=' _indexOfInterest[1930863] x1[1111099] _index[1930907])
              val _index[1930913]:int(64)[13] "temp"
              (1930915 '.=' _indexOfInterest[1930863] x0[1111097] _index[1930913])
              1
              const-val i[1930920]:int(64)[13] "const" "index var" "insert auto destroy"
              (1930922 'move' i[1930920](1930924 '.v' _indexOfInterest[1930863] x0[1111097]))
              const-val b[1930927]:uint(8)[100] "const" "index var" "insert auto destroy"
              (1930929 'move' b[1930927](1930931 '.v' _indexOfInterest[1930863] x1[1111099]))
              const-val yret[1930934]:(int(32),byteIndex,int(64))[1122203] "dead after last mention" "YVV" "temp"
              val call_tmp[1930936]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[1930938]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
              (1930940 'move' call_tmp[1930938](1930942 'cast' int(32)[95] b[1930927]))
              const-val call_tmp[1930945]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret_tmp[1930947]:byteIndex[28173] "temp"
              (1930950 call _cast[39486] i[1930920] ret_tmp[1930947])
              (1930953 'move' call_tmp[1930945] ret_tmp[1930947])
              const-val call_tmp[1930956]:(int(32),byteIndex,int(64))[1122203] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret_tmp[1930958]:(int(32),byteIndex,int(64))[1122203] "temp"
              (1930961 call _build_tuple[1122153] call_tmp[1930938] call_tmp[1930945] 1 ret_tmp[1930958])
              (1930966 'move' call_tmp[1930956] ret_tmp[1930958])
              (1930969 'move' yret[1930934] call_tmp[1930956])
              const-val _yieldedIndex[1931551]:(int(32),byteIndex,int(64))[1122203] "temp"
              (1931782 'move' _yieldedIndex[1931551] call_tmp[1930956])
              {
                1
                const-val cp[1931554]:int(32)[95] "const" "index var" "insert auto destroy"
                (1931556 'move' cp[1931554](1931558 '.v' _yieldedIndex[1931551] x0[1122197]))
                ref byteIdx[1931561]:_ref(byteIndex)[948820] "index var" "insert auto destroy"
                (1931563 'move' byteIdx[1931561](1931565 '.v' _yieldedIndex[1931551] x1[1122199]))
                const-val nBytes[1931568]:int(64)[13] "const" "index var" "insert auto destroy"
                (1931570 'move' nBytes[1931568](1931572 '.v' _yieldedIndex[1931551] x2[1122201]))
                {
                  const-val call_tmp[1931576]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1931578 'move' call_tmp[1931576](1931581 call ==[29541] charCount[34830] i[34688]))
                  const-val call_tmp[1931584]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1931586 'move' call_tmp[1931584] call_tmp[1931576])
                  if call_tmp[1931584]
                  {
                    ref call_tmp[1931591]:_ref(c_ptr(uint(8)))[937493] "dead at end of block" "maybe param" "temp"
                    (1931593 'move' call_tmp[1931591](1931596 call buff[758025] this[34693]))
                    const-val call_tmp[1931598]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                    (1931600 'move' call_tmp[1931598](1931603 call _cast[39465] byteIdx[1931561]))
                    ref call_tmp[1931605]:_ref(int(32))[936687] "dead at end of block" "maybe param" "temp"
                    (1931607 'move' call_tmp[1931605](1931610 call locale_id[758103] this[34693]))
                    const-val call_tmp[1931612]:(c_ptr(uint(8)),int(64))[955269] "dead at end of block" "maybe param" "temp"
                    val coerce_tmp[1931614]:c_ptr(uint(8))[937484] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (1931616 'move' coerce_tmp[1931614](1931618 'deref' call_tmp[1931591]))
                    const-val coerce_tmp[1931620]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (1931622 'move' coerce_tmp[1931620](1931624 'deref' call_tmp[1931605]))
                    const-val ret_tmp[1931626]:(c_ptr(uint(8)),int(64))[955269] "temp"
                    (1931629 call bufferCopy[172974] coerce_tmp[1931614] call_tmp[1931598] nBytes[1931568] coerce_tmp[1931620] ret_tmp[1931626])
                    (1931635 'move' call_tmp[1931612] ret_tmp[1931626])
                    const-val tmp[1931638]:(c_ptr(uint(8)),int(64))[955269] "dead at end of block" "insert auto destroy" "temp"
                    (1931640 'move' tmp[1931638] call_tmp[1931612])
                    1
                    ref call_tmp[1931644]:_ref(c_ptr(uint(8)))[937493] "dead at end of block" "maybe param" "temp"
                    (1931646 'move' call_tmp[1931644](1931648 '.' tmp[1931638] x0[955265]))
                    val newBuff[1931651]:c_ptr(uint(8))[937484] "dead at end of block" "insert auto destroy"
                    val coerce_tmp[1931653]:c_ptr(uint(8))[937484] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1931655 'move' coerce_tmp[1931653](1931657 'deref' call_tmp[1931644]))
                    (1931659 '=' newBuff[1931651] coerce_tmp[1931653])
                    (1931662 'noop')
                    ref call_tmp[1931663]:_ref(int(64))[936633] "dead at end of block" "maybe param" "temp"
                    (1931665 'move' call_tmp[1931663](1931667 '.' tmp[1931638] x1[955267]))
                    const-val allocSize[1931670]:int(64)[13] "dead at end of block" "insert auto destroy"
                    const-val coerce_tmp[1931672]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1931674 'move' coerce_tmp[1931672](1931676 'deref' call_tmp[1931663]))
                    (1931678 '=' allocSize[1931670] coerce_tmp[1931672])
                    (1931681 'noop')
                    const-val call_tmp[1931682]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1931684]:string[26] "temp"
                    (1931687 call chpl_createStringWithOwnedBufferNV[30676] newBuff[1931651] nBytes[1931568] allocSize[1931670] 1 ret_tmp[1931684])
                    (1931693 'move' call_tmp[1931682] ret_tmp[1931684])
                    (1931696 'move' ret[504203] call_tmp[1931682])
                    (1931700 call chpl__autoDestroy[1565916] tmp[1931638])
                    ref moreRef1[1931718]:_ref(int(64))[936633] "temp"
                    (1931720 'move' moreRef1[1931718](1931722 '.' _iterator[1930814] more[1096767]))
                    const-val moreVal1[1931725]:int(64)[13] "const" "temp"
                    (1931727 '=' moreVal1[1931725] moreRef1[1931718])
                    const-val moreValNeg1[1931730]:int(64)[13] "const" "temp"
                    (1931732 'move' moreValNeg1[1931730](1931734 'u-' moreVal1[1931725]))
                    (1931736 '=' moreRef1[1931718] moreValNeg1[1931730])
                    (1931740 call advance[1096790] _iterator[1930814])
                    ref moreRef2[1931742]:_ref(int(64))[936633] "temp"
                    (1931744 'move' moreRef2[1931742](1931746 '.' _iterator[1930821] more[1108320]))
                    const-val moreVal2[1931749]:int(64)[13] "const" "temp"
                    (1931751 '=' moreVal2[1931749] moreRef2[1931742])
                    const-val moreValNeg2[1931754]:int(64)[13] "const" "temp"
                    (1931756 'move' moreValNeg2[1931754](1931758 'u-' moreVal2[1931749]))
                    (1931760 '=' moreRef2[1931742] moreValNeg2[1931754])
                    (1931764 call advance[1108343] _iterator[1930821])
                    (1931767 call chpl__autoDestroy[1562538] call_tmp[1930945])
                    (1931770 call _freeIterator[1108785] _iterator[1930766])
                    (1931773 call chpl__autoDestroy[1642180] _iterator[1930766])
                    (1931776 call chpl__autoDestroy[1383553] call_tmp[1930768])
                    (1931779 call chpl__autoDestroy[1562275] localThis[1930747])
                    (1931703 call _freeIterator[1122634] _iterator[34907])
                    (1931706 call chpl__autoDestroy[1562538] default_arg_start[1180923])
                    gotoReturn _end_item[504201] _end_item[504201]
                  }
                  (1931712 call +=[451358] charCount[34830] 1)
                }
                label _continueLabel[1931715]
              }
              (1931043 call chpl__autoDestroy[1562538] call_tmp[1930945])
              {
                (1931047 call zip3[1096817] _iterator[1930814])
              }
              {
                (1931051 call zip3[1108370] _iterator[1930821])
              }
              {
                {
                  (1930844 call init[1096853] _iterator[1930814])
                }
                {
                  (1930848 call init[1108406] _iterator[1930821])
                }
              }
              {
                (1930852 call hasMore[1096835] _iterator[1930814])
              }
              {
                {
                  (1930857 call incr[1096862] _iterator[1930814])
                }
                {
                  (1930861 call incr[1108415] _iterator[1930821])
                }
              }
            }
            {
              const-val retTmp[1931054]:int(64)[13] "temp"
              (1931056 'move' retTmp[1931054](1931059 call hasMore[1108388] _iterator[1930821]))
              (1931061 'move' hasMore[1930838](1931063 'cast' bool[10] retTmp[1931054]))
            }
            if hasMore[1930838]
            {
              (1931068 'chpl_error' c"zippered iterations have non-equal lengths")
            }
            {
              (1931073 call zip4[1108379] _iterator[1930821])
            }
            {
              (1931077 call zip4[1096826] _iterator[1930814])
            }
            (1931080 call _freeIterator[1108785] _iterator[1930766])
            (1931083 call chpl__autoDestroy[1642180] _iterator[1930766])
            (1931086 call chpl__autoDestroy[1383553] call_tmp[1930768])
          }
          {
            const-val call_tmp[1931089]:int(64)[13] "dead at end of block" "maybe param" "temp"
            ref start[1931984]:_ref(byteIndex)[948820] "temp"
            (1931989 'move' start[1931984](1931986 '.v' _iterator[34907] F1_start[2044780]))
            (1931091 'move' call_tmp[1931089](1931094 call _cast[39465] start[1931984]))
            val i[1931096]:int(64)[13] "dead at end of block" "insert auto destroy"
            (1931098 'move' i[1931096] call_tmp[1931089])
            const-val call_tmp[1931101]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1931103 'move' call_tmp[1931101](1931106 call >[437715] call_tmp[1931089] 0))
            const-val call_tmp[1931109]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1931111 'move' call_tmp[1931109] call_tmp[1931101])
            if call_tmp[1931101]
            {
              val tmp[1931116]:bool[10] "dead after last mention" "temp"
              const-val tmp[1931118]:bool[10] "dead after last mention" "maybe param" "temp"
              ref call_tmp[1931120]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
              (1931122 'move' call_tmp[1931120](1931125 call buffLen[757947] localThis[1930747]))
              const-val coerce_tmp[1931127]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1931129 'move' coerce_tmp[1931127](1931131 'deref' call_tmp[1931120]))
              (1931133 'move' tmp[1931118](1931136 call <[437495] i[1931096] coerce_tmp[1931127]))
              val tmp[1931139]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              const-val tmp[1931141]:bool[10] "dead after last mention" "maybe param" "temp"
              const-val call_tmp[1931143]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1931145 'move' call_tmp[1931143] tmp[1931118])
              (1931148 'move' tmp[1931141] tmp[1931118])
              if tmp[1931118]
              {
                const-val tmp[1931153]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                ref call_tmp[1931155]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
                ref _this_tmp_[1931157]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "temp"
                (1931159 'move' _this_tmp_[1931157](1931162 call buff[758025] localThis[1930747]))
                val coerce_tmp[1931164]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1931166 'move' coerce_tmp[1931164](1931168 'deref' _this_tmp_[1931157]))
                (1931170 'move' call_tmp[1931155](1931173 call this[954152] coerce_tmp[1931164] i[1931096]))
                const-val call_tmp[1931176]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1931178]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1931180 'move' coerce_tmp[1931178](1931182 'deref' call_tmp[1931155]))
                (1931184 'move' call_tmp[1931176](1931187 call isInitialByte[181574] coerce_tmp[1931178]))
                const-val call_tmp[1931189]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1931191 'move' call_tmp[1931189](1931194 call ![7494] call_tmp[1931176]))
                (1931196 'move' tmp[1931153] call_tmp[1931189])
                (1931199 'move' tmp[1931139] call_tmp[1931189])
              }
              {
                (1931203 'move' tmp[1931139] 0)
              }
              (1931207 'move' tmp[1931116] tmp[1931139])
              WhileDo[1931210]
              {
                (1931213 call +=[451358] i[1931096] 1)
                const-val tmp[1931216]:bool[10] "dead after last mention" "maybe param" "temp"
                ref call_tmp[1931218]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                (1931220 'move' call_tmp[1931218](1931223 call buffLen[757947] localThis[1930747]))
                const-val coerce_tmp[1931225]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1931227 'move' coerce_tmp[1931225](1931229 'deref' call_tmp[1931218]))
                (1931231 'move' tmp[1931216](1931234 call <[437495] i[1931096] coerce_tmp[1931225]))
                val tmp[1931237]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[1931239]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1931241]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1931243 'move' call_tmp[1931241] tmp[1931216])
                (1931246 'move' tmp[1931239] tmp[1931216])
                if tmp[1931216]
                {
                  const-val tmp[1931251]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  ref call_tmp[1931253]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[1931255]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "temp"
                  (1931257 'move' _this_tmp_[1931255](1931260 call buff[758025] localThis[1930747]))
                  val coerce_tmp[1931262]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1931264 'move' coerce_tmp[1931262](1931266 'deref' _this_tmp_[1931255]))
                  (1931268 'move' call_tmp[1931253](1931271 call this[954152] coerce_tmp[1931262] i[1931096]))
                  const-val call_tmp[1931274]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1931276]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1931278 'move' coerce_tmp[1931276](1931280 'deref' call_tmp[1931253]))
                  (1931282 'move' call_tmp[1931274](1931285 call isInitialByte[181574] coerce_tmp[1931276]))
                  const-val call_tmp[1931287]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1931289 'move' call_tmp[1931287](1931292 call ![7494] call_tmp[1931274]))
                  (1931294 'move' tmp[1931251] call_tmp[1931287])
                  (1931297 'move' tmp[1931237] call_tmp[1931287])
                }
                {
                  (1931301 'move' tmp[1931237] 0)
                }
                (1931305 'move' tmp[1931116] tmp[1931237])
                tmp[1931116]
              }
            }
            val tmp[1931309]:bool[10] "dead after last mention" "temp"
            ref call_tmp[1931311]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
            (1931313 'move' call_tmp[1931311](1931316 call buffLen[757947] localThis[1930747]))
            const-val call_tmp[1931318]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[1931320]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1931322 'move' coerce_tmp[1931320](1931324 'deref' call_tmp[1931311]))
            (1931326 'move' call_tmp[1931318](1931329 call <[437495] i[1931096] coerce_tmp[1931320]))
            (1931332 'move' tmp[1931309] call_tmp[1931318])
            WhileDo[1931335]
            {
              ref call_tmp[1931337]:_ref(c_ptr(uint(8)))[937493] "dead at end of block" "maybe param" "temp"
              (1931339 'move' call_tmp[1931337](1931342 call buff[758025] localThis[1930747]))
              ref call_tmp[1931344]:_ref(int(64))[936633] "dead at end of block" "maybe param" "temp"
              (1931346 'move' call_tmp[1931344](1931349 call buffLen[757947] localThis[1930747]))
              const-val call_tmp[1931351]:(syserr,int(32),int(32))[964681] "dead at end of block" "maybe param" "temp"
              val coerce_tmp[1931353]:c_ptr(uint(8))[937484] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1931355 'move' coerce_tmp[1931353](1931357 'deref' call_tmp[1931337]))
              const-val coerce_tmp[1931359]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1931361 'move' coerce_tmp[1931359](1931363 'deref' call_tmp[1931344]))
              const-val ret_tmp[1931365]:(syserr,int(32),int(32))[964681] "temp"
              (1931368 call decodeHelp[174452] coerce_tmp[1931353] coerce_tmp[1931359] i[1931096] 1 ret_tmp[1931365])
              (1931374 'move' call_tmp[1931351] ret_tmp[1931365])
              const-val tmp[1931377]:(syserr,int(32),int(32))[964681] "dead at end of block" "const" "insert auto destroy" "temp"
              (1931379 'move' tmp[1931377] call_tmp[1931351])
              1
              ref call_tmp[1931383]:_ref(syserr)[948893] "dead at end of block" "maybe param" "reference to a const" "temp"
              (1931385 'move' call_tmp[1931383](1931387 '.' tmp[1931377] x0[964675]))
              const-val decodeRet[1931390]:syserr[223605] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[1931392]:syserr[223605] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1931394 'move' coerce_tmp[1931392](1931396 'deref' call_tmp[1931383]))
              (1931398 'move' decodeRet[1931390](1931401 call chpl__initCopy[964546] coerce_tmp[1931392]))
              ref call_tmp[1931403]:_ref(int(32))[936687] "dead at end of block" "maybe param" "reference to a const" "temp"
              (1931405 'move' call_tmp[1931403](1931407 '.' tmp[1931377] x1[964677]))
              const-val cp[1931410]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[1931412]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1931414 'move' coerce_tmp[1931412](1931416 'deref' call_tmp[1931403]))
              (1931418 'move' cp[1931410](1931421 call chpl__initCopy[964818] coerce_tmp[1931412]))
              ref call_tmp[1931423]:_ref(int(32))[936687] "dead at end of block" "maybe param" "reference to a const" "temp"
              (1931425 'move' call_tmp[1931423](1931427 '.' tmp[1931377] x2[964679]))
              const-val nBytes[1931430]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[1931432]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1931434 'move' coerce_tmp[1931432](1931436 'deref' call_tmp[1931423]))
              (1931438 'move' nBytes[1931430](1931441 call chpl__initCopy[964818] coerce_tmp[1931432]))
              const-val yret[1931443]:(int(32),byteIndex,int(64))[1122203] "dead after last mention" "YVV" "temp"
              val call_tmp[1931445]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[1931447]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
              (1931449 'move' call_tmp[1931447] cp[1931410])
              const-val call_tmp[1931452]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret_tmp[1931454]:byteIndex[28173] "temp"
              (1931457 call _cast[39486] i[1931096] ret_tmp[1931454])
              (1931460 'move' call_tmp[1931452] ret_tmp[1931454])
              const-val call_tmp[1931463]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1931465 'move' call_tmp[1931463](1931467 'cast' int(64)[13] nBytes[1931430]))
              const-val call_tmp[1931470]:(int(32),byteIndex,int(64))[1122203] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret_tmp[1931472]:(int(32),byteIndex,int(64))[1122203] "temp"
              (1931475 call _build_tuple[1122153] cp[1931410] call_tmp[1931452] call_tmp[1931463] ret_tmp[1931472])
              (1931480 'move' call_tmp[1931470] ret_tmp[1931472])
              (1931483 'move' yret[1931443] call_tmp[1931470])
              const-val _yieldedIndex[1931784]:(int(32),byteIndex,int(64))[1122203] "temp"
              (1931961 'move' _yieldedIndex[1931784] call_tmp[1931470])
              {
                1
                const-val cp[1931787]:int(32)[95] "const" "index var" "insert auto destroy"
                (1931789 'move' cp[1931787](1931791 '.v' _yieldedIndex[1931784] x0[1122197]))
                ref byteIdx[1931794]:_ref(byteIndex)[948820] "index var" "insert auto destroy"
                (1931796 'move' byteIdx[1931794](1931798 '.v' _yieldedIndex[1931784] x1[1122199]))
                const-val nBytes[1931801]:int(64)[13] "const" "index var" "insert auto destroy"
                (1931803 'move' nBytes[1931801](1931805 '.v' _yieldedIndex[1931784] x2[1122201]))
                {
                  const-val call_tmp[1931809]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1931811 'move' call_tmp[1931809](1931814 call ==[29541] charCount[34830] i[34688]))
                  const-val call_tmp[1931817]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1931819 'move' call_tmp[1931817] call_tmp[1931809])
                  if call_tmp[1931817]
                  {
                    ref call_tmp[1931824]:_ref(c_ptr(uint(8)))[937493] "dead at end of block" "maybe param" "temp"
                    (1931826 'move' call_tmp[1931824](1931829 call buff[758025] this[34693]))
                    const-val call_tmp[1931831]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                    (1931833 'move' call_tmp[1931831](1931836 call _cast[39465] byteIdx[1931794]))
                    ref call_tmp[1931838]:_ref(int(32))[936687] "dead at end of block" "maybe param" "temp"
                    (1931840 'move' call_tmp[1931838](1931843 call locale_id[758103] this[34693]))
                    const-val call_tmp[1931845]:(c_ptr(uint(8)),int(64))[955269] "dead at end of block" "maybe param" "temp"
                    val coerce_tmp[1931847]:c_ptr(uint(8))[937484] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (1931849 'move' coerce_tmp[1931847](1931851 'deref' call_tmp[1931824]))
                    const-val coerce_tmp[1931853]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (1931855 'move' coerce_tmp[1931853](1931857 'deref' call_tmp[1931838]))
                    const-val ret_tmp[1931859]:(c_ptr(uint(8)),int(64))[955269] "temp"
                    (1931862 call bufferCopy[172974] coerce_tmp[1931847] call_tmp[1931831] nBytes[1931801] coerce_tmp[1931853] ret_tmp[1931859])
                    (1931868 'move' call_tmp[1931845] ret_tmp[1931859])
                    const-val tmp[1931871]:(c_ptr(uint(8)),int(64))[955269] "dead at end of block" "insert auto destroy" "temp"
                    (1931873 'move' tmp[1931871] call_tmp[1931845])
                    1
                    ref call_tmp[1931877]:_ref(c_ptr(uint(8)))[937493] "dead at end of block" "maybe param" "temp"
                    (1931879 'move' call_tmp[1931877](1931881 '.' tmp[1931871] x0[955265]))
                    val newBuff[1931884]:c_ptr(uint(8))[937484] "dead at end of block" "insert auto destroy"
                    val coerce_tmp[1931886]:c_ptr(uint(8))[937484] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1931888 'move' coerce_tmp[1931886](1931890 'deref' call_tmp[1931877]))
                    (1931892 '=' newBuff[1931884] coerce_tmp[1931886])
                    (1931895 'noop')
                    ref call_tmp[1931896]:_ref(int(64))[936633] "dead at end of block" "maybe param" "temp"
                    (1931898 'move' call_tmp[1931896](1931900 '.' tmp[1931871] x1[955267]))
                    const-val allocSize[1931903]:int(64)[13] "dead at end of block" "insert auto destroy"
                    const-val coerce_tmp[1931905]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1931907 'move' coerce_tmp[1931905](1931909 'deref' call_tmp[1931896]))
                    (1931911 '=' allocSize[1931903] coerce_tmp[1931905])
                    (1931914 'noop')
                    const-val call_tmp[1931915]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1931917]:string[26] "temp"
                    (1931920 call chpl_createStringWithOwnedBufferNV[30676] newBuff[1931884] nBytes[1931801] allocSize[1931903] 1 ret_tmp[1931917])
                    (1931926 'move' call_tmp[1931915] ret_tmp[1931917])
                    (1931929 'move' ret[504203] call_tmp[1931915])
                    (1931933 call chpl__autoDestroy[1565916] tmp[1931871])
                    (1931952 call chpl__autoDestroy[1562538] call_tmp[1931452])
                    (1931955 call chpl__autoDestroy[1566178] tmp[1931377])
                    (1931958 call chpl__autoDestroy[1562275] localThis[1930747])
                    (1931936 call _freeIterator[1122634] _iterator[34907])
                    (1931939 call chpl__autoDestroy[1562538] default_arg_start[1180923])
                    gotoReturn _end_item[504201] _end_item[504201]
                  }
                  (1931945 call +=[451358] charCount[34830] 1)
                }
                label _continueLabel[1931948]
              }
              (1931503 call chpl__autoDestroy[1562538] call_tmp[1931452])
              const-val coerce_tmp[1931505]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1931507 'move' coerce_tmp[1931505](1931509 'cast' int(64)[13] nBytes[1931430]))
              (1931513 call +=[451358] i[1931096] coerce_tmp[1931505])
              (1931517 call chpl__autoDestroy[1566178] tmp[1931377])
              ref call_tmp[1931519]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
              (1931521 'move' call_tmp[1931519](1931524 call buffLen[757947] localThis[1930747]))
              const-val call_tmp[1931526]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1931528]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1931530 'move' coerce_tmp[1931528](1931532 'deref' call_tmp[1931519]))
              (1931534 'move' call_tmp[1931526](1931537 call <[437495] i[1931096] coerce_tmp[1931528]))
              (1931540 'move' tmp[1931309] call_tmp[1931526])
              tmp[1931309]
            }
          }
          (1931545 call chpl__autoDestroy[1562275] localThis[1930747])
          label _end_cpIndexLen[1931547]
        }
        label _breakLabel[34912]
        (1876676 call _freeIterator[1122634] _iterator[34907])
        (1876678 call chpl__autoDestroy[1562538] default_arg_start[1180923])
      }
      {
        const-val call_tmp[601038]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (601041 'move' call_tmp[601038](34968 call size[32772] this[34693]))
        (34971 call halt[1175822] "index " i[34688] " out of bounds for string with length " call_tmp[601038])
      }
      (504227 'move' ret[504203](1863252 call chpl__initCopy[981409] ""))
      gotoReturn _end_item[504201] _end_item[504201]
    }
    label _end_item[504201]
    (1863248 '=' _retArg[1863246] ret[504203])
    (1863254 return _void[55])
  }
  function _ref(string)[938000].item[35011](const  ref arg this[35013]:_ref(string)[938000], const in arg i[35008]:int(64)[13], ref arg _retArg[1863262]:_ref(string)[938000]) : void[4] "fn returns via _retArg" "inline" "method" "resolved"
  {
    const-val ret[504233]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[601043]:codepointIndex[28277] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1863964]:codepointIndex[28277] "temp"
    (35022 call _cast[39538] i[35008] ret_tmp[1863964])
    (1863967 'move' call_tmp[601043] ret_tmp[1863964])
    const-val call_tmp[601048]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1863210]:string[26] "temp"
    (35025 call this[34635] this[35013] call_tmp[601043] ret_tmp[1863210])
    (1863213 'move' call_tmp[601048] ret_tmp[1863210])
    (1181023 'move' ret[504233] call_tmp[601048])
    (1863264 '=' _retArg[1863262] ret[504233])
    (1876681 call chpl__autoDestroy[1562605] call_tmp[601043])
    (1863266 return _void[55])
  }
  function _ref(string)[938000].this[1111427](const  ref arg this[1111433]:_ref(string)[938000], const in arg r[1111435]:range(int(64),bounded,false)[1026875], ref arg _retArg[1867582]:_ref(string)[938000]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free"
  {
    const-val ret[1111439]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1111447]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1867588]:string[26] "temp"
    (1111452 call getSlice[1111463] this[1111433] r[1111435] ret_tmp[1867588])
    (1867591 'move' call_tmp[1111447] ret_tmp[1867588])
    (1122029 'move' ret[1111439] call_tmp[1111447])
    (1867584 '=' _retArg[1867582] ret[1111439])
    (1867586 return _void[55])
  }
  function _ref(string)[938000].this[1123561](const  ref arg this[1123567]:_ref(string)[938000], const in arg r[1123569]:range(byteIndex,bounded,false)[1025853], ref arg _retArg[1867816]:_ref(string)[938000]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free"
  {
    const-val ret[1123573]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1123581]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1867822]:string[26] "temp"
    (1123586 call getSlice[1123597] this[1123567] r[1123569] ret_tmp[1867822])
    (1867825 'move' call_tmp[1123581] ret_tmp[1867822])
    (1124443 'move' ret[1123573] call_tmp[1123581])
    (1867818 '=' _retArg[1867816] ret[1123573])
    (1867820 return _void[55])
  }
  function _ref(string)[938000].this[1125623](const  ref arg this[1125629]:_ref(string)[938000], const in arg r[1125631]:range(int(64),boundedLow,false)[1087626], ref arg _retArg[1867876]:_ref(string)[938000]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free"
  {
    const-val ret[1125635]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1125643]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1867882]:string[26] "temp"
    (1125648 call getSlice[1125659] this[1125629] r[1125631] ret_tmp[1867882])
    (1867885 'move' call_tmp[1125643] ret_tmp[1867882])
    (1142563 'move' ret[1125635] call_tmp[1125643])
    (1867878 '=' _retArg[1867876] ret[1125635])
    (1867880 return _void[55])
  }
  function _ref(string)[938000].this[1143784](const  ref arg this[1143790]:_ref(string)[938000], const in arg r[1143792]:range(byteIndex,boundedLow,false)[1143464], ref arg _retArg[1868080]:_ref(string)[938000]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free"
  {
    const-val ret[1143796]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1143804]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1868086]:string[26] "temp"
    (1143809 call getSlice[1143820] this[1143790] r[1143792] ret_tmp[1868086])
    (1868089 'move' call_tmp[1143804] ret_tmp[1868086])
    (1156518 'move' ret[1143796] call_tmp[1143804])
    (1868082 '=' _retArg[1868080] ret[1143796])
    (1868084 return _void[55])
  }
  function _ref(string)[938000].this[1185300](const  ref arg this[1185306]:_ref(string)[938000], const in arg r[1185308]:range(byteIndex,boundedHigh,false)[1184980], ref arg _retArg[1868414]:_ref(string)[938000]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free"
  {
    const-val ret[1185312]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1185320]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1868420]:string[26] "temp"
    (1185325 call getSlice[1185336] this[1185306] r[1185308] ret_tmp[1868420])
    (1868423 'move' call_tmp[1185320] ret_tmp[1868420])
    (1203821 'move' ret[1185312] call_tmp[1185320])
    (1868416 '=' _retArg[1868414] ret[1185312])
    (1868418 return _void[55])
  }
  function _ref(string)[938000].isEmpty[35064](const  ref arg this[35066]:_ref(string)[938000]) : bool[10] "inline" "method" "resolved" "fn synchronization free"
  {
    val ret[504253]:bool[10] "dead after last mention" "RVV" "temp"
    ref call_tmp[601060]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
    (601063 'move' call_tmp[601060](35073 call buffLen[757947] this[35066]))
    const-val call_tmp[601065]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1020593]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1020597 'move' coerce_tmp[1020593](1020595 'deref' call_tmp[601060]))
    (601068 'move' call_tmp[601065](35077 call ==[435671] coerce_tmp[1020593] 0))
    (1020601 'move' ret[504253] call_tmp[601065])
    (504255 return ret[504253])
  }
  function _ref(string)[938000].find[1025648](const  ref arg this[1025654]:_ref(string)[938000], const  ref arg needle[1025656]:string[26], const in arg region[1025678]:range(byteIndex,bounded,false)[1025853], ref arg _retArg[1866228]:_ref(byteIndex)[948820]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved"
  {
    val ret[1025682]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1029976]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1029978 'move' call_tmp[1029976](1029984 call isASCII[31049] this[1025654]))
    const-val call_tmp[1029985]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1029987 'move' call_tmp[1029985] call_tmp[1029976])
    if call_tmp[1029985]
    {
      const-val call_tmp[1029994]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1029996 'move' call_tmp[1029994](1029999 call doSearchNoEnc[1030114] this[1025654] needle[1025656] region[1025678]))
      const-val call_tmp[1030005]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1863922]:byteIndex[28173] "temp"
      (1030010 call _cast[39486] call_tmp[1029994] ret_tmp[1863922])
      (1863925 'move' call_tmp[1030005] ret_tmp[1863922])
      (1107579 'move' ret[1025682] call_tmp[1030005])
      gotoReturn _end_find[1030050] _end_find[1030050]
    }
    {
      const-val call_tmp[1030021]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1030023 'move' call_tmp[1030021](1030029 call doSearchUTF8[1106172] this[1025654] needle[1025656] region[1025678]))
      const-val call_tmp[1030034]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1863928]:byteIndex[28173] "temp"
      (1030039 call _cast[39486] call_tmp[1030021] ret_tmp[1863928])
      (1863931 'move' call_tmp[1030034] ret_tmp[1863928])
      (1107582 'move' ret[1025682] call_tmp[1030034])
      gotoReturn _end_find[1030050] _end_find[1030050]
    }
    label _end_find[1030050]
    (1866230 '=' _retArg[1866228] ret[1025682])
    (1866232 return _void[55])
  }
  function _ref(string)[938000].find_default_region[1030059](const  ref arg this[1030062]:_ref(string)[938000], ref arg _retArg[1866300]:_ref(range(byteIndex,bounded,false))[1025862]) : void[4] "compiler generated" "default actual function" "fn returns via _retArg" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    const-val ret[1030065]:range(byteIndex,bounded,false)[1025853] "dead after last mention" "RVV" "maybe param" "temp"
    const-val region[1030070]:range(byteIndex,bounded,false)[1025853] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val call_tmp[1030073]:range(byteIndex,bounded,false)[1025853] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1030078]:range(int(64),bounded,false)[1026875] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1862822]:range(int(64),bounded,false)[1026875] "temp"
    (1030083 call byteIndices[31068] this[1030062] ret_tmp[1862822])
    (1862825 'move' call_tmp[1030078] ret_tmp[1862822])
    const-val ret_tmp[1866234]:range(byteIndex,bounded,false)[1025853] "temp"
    (1030087 call _cast[1027623] call_tmp[1030078] ret_tmp[1866234])
    (1866237 'move' region[1030070] ret_tmp[1866234])
    (1030095 'move' ret[1030065] region[1030070])
    (1866302 '=' _retArg[1866300] ret[1030065])
    (1877724 call chpl__autoDestroy[1383553] call_tmp[1030078])
    (1866304 return _void[55])
  }
  function _ref(string)[938000].find[1181707](const  ref arg this[1181713]:_ref(string)[938000], const  ref arg needle[1181715]:string[26], const in arg region[1181737]:range(byteIndex,boundedLow,false)[1143464], ref arg _retArg[1868366]:_ref(byteIndex)[948820]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved"
  {
    val ret[1181741]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1181747]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1181749 'move' call_tmp[1181747](1181755 call isASCII[31049] this[1181713]))
    const-val call_tmp[1181756]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1181758 'move' call_tmp[1181756] call_tmp[1181747])
    if call_tmp[1181756]
    {
      const-val call_tmp[1181765]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1181767 'move' call_tmp[1181765](1181770 call doSearchNoEnc[1181827] this[1181713] needle[1181715] region[1181737]))
      const-val call_tmp[1181776]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1863946]:byteIndex[28173] "temp"
      (1181781 call _cast[39486] call_tmp[1181765] ret_tmp[1863946])
      (1863949 'move' call_tmp[1181776] ret_tmp[1863946])
      (1184275 'move' ret[1181741] call_tmp[1181776])
      gotoReturn _end_find[1181821] _end_find[1181821]
    }
    {
      const-val call_tmp[1181792]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1181794 'move' call_tmp[1181792](1181800 call doSearchUTF8[1182868] this[1181713] needle[1181715] region[1181737]))
      const-val call_tmp[1181805]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1863952]:byteIndex[28173] "temp"
      (1181810 call _cast[39486] call_tmp[1181792] ret_tmp[1863952])
      (1863955 'move' call_tmp[1181805] ret_tmp[1863952])
      (1184278 'move' ret[1181741] call_tmp[1181805])
      gotoReturn _end_find[1181821] _end_find[1181821]
    }
    label _end_find[1181821]
    (1868368 '=' _retArg[1868366] ret[1181741])
    (1868370 return _void[55])
  }
  function _ref(string)[938000].replace[35366](const  ref arg this[35380]:_ref(string)[938000], const  ref arg needle[35363]:string[26], const  ref arg replacement[35369]:string[26], const in arg count[35376]:int(64)[13], ref arg _retArg[1863280]:_ref(string)[938000]) : void[4] "fn returns via _retArg" "inline" "method" "resolved"
  {
    const-val ret[504337]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[601198]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1868348]:string[26] "temp"
    (35392 call doReplace[1181075] this[35380] needle[35363] replacement[35369] count[35376] ret_tmp[1868348])
    (1868351 'move' call_tmp[601198] ret_tmp[1868348])
    (1203844 'move' ret[504337] call_tmp[601198])
    (1863282 '=' _retArg[1863280] ret[504337])
    (1863284 return _void[55])
  }
  function _ref(string)[938000].split[35486](const  ref arg this[35488]:_ref(string)[938000], const in arg maxsplit[35482]:int(64)[13], ref arg _retArg[1863298]:_ref(_ir_split__ref_string)[1156682]) : void[4] "fn returns via _retArg" "inline" "iterator fn" "method" "resolved" "no return value for void"
  {
    val _ir[2052355]:_ir_split__ref_string[1156571] "temp"
    (2052357 '.=' _ir[2052355] F0_this[2049004] this[35488])
    (2052361 '.=' _ir[2052355] F1_maxsplit[2049008] maxsplit[35482])
    (2052365 '=' _retArg[1863298] _ir[2052355])
    (2052368 return _void[55])
  }
  type _ic_split__ref_string[1156565] val super[1156566]:object[22] "super class" val more[1156568]:int(64)[13] ref F0_this[2049002]:_ref(string)[938000] const-val F1_maxsplit[2049006]:int(64)[13] val F2__iterator[2049010]:_ic_doSplitWSNoEnc[1124536] const F3_localx[2049012]:string[26] val F4_done[2049014]:bool[10] val F5_yieldChunk[2049016]:bool[10] const-val F6_chunk[2049018]:string[26] const F7_noSplits[2049020]:bool[10] const F8_limitSplits[2049022]:bool[10] val F9_splitCount[2049024]:int(64)[13] const F10_iEnd[2049026]:int(64)[13] val F11_inChunk[2049028]:bool[10] val F12_chunkStart[2049030]:int(64)[13] val F13__iterator[2049032]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108627] val F14_call_tmp[2049034]:range(int(64),bounded,false)[1026875] val F15__iterator[2049036]:_ic_these_range_int64_t_bounded_F[1096764] val F16__iterator[2049038]:_ic_chpl_bytes__ref_string[1108317] val F17__indexOfInterest[2049040]:(int(64),uint(8))[1111101] const-val F18_ret_tmp[2049042]:range(int(64),boundedLow,false)[1087626] const-val F19_ret_tmp[2049044]:string[26] const-val F20_ret_tmp[2049046]:range(int(64),boundedLow,false)[1087626] const-val F21_ret_tmp[2049048]:string[26] const-val F22_ret_tmp[2049050]:range(int(64),bounded,false)[1026875] const-val F23_ret_tmp[2049052]:string[26] const-val F24_ret_tmp[2049054]:range(int(64),boundedLow,false)[1087626] const-val F25_ret_tmp[2049056]:string[26] const F26_s[2049058]:string[26] const F27_localThis[2049060]:string[26] val F28_done[2049062]:bool[10] val F29_yieldChunk[2049064]:bool[10] const-val F30_chunk[2049066]:string[26] const F31_noSplits[2049068]:bool[10] const F32_limitSplits[2049070]:bool[10] val F33_splitCount[2049072]:int(64)[13] const-val F34_iEnd[2049074]:byteIndex[28173] val F35_inChunk[2049076]:bool[10] const-val F36_chunkStart[2049078]:byteIndex[28173] val F37__iterator[2049080]:_ic__cpIndexLen__ref_string[1122446] val F38_default_arg_start[2049082]:byteIndex[28173] val F39_localThis[2049084]:string[26] val F40__iterator[2049086]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108627] val F41_call_tmp[2049088]:range(int(64),bounded,false)[1026875] val F42__iterator[2049090]:_ic_these_range_int64_t_bounded_F[1096764] val F43__iterator[2049092]:_ic_chpl_bytes__ref_string[1108317] val F44__indexOfInterest[2049094]:(int(64),uint(8))[1111101] val F45_call_tmp[2049096]:byteIndex[28173] const-val F46_ret_tmp[2049098]:byteIndex[28173] const-val F47_ret_tmp[2049100]:(int(32),byteIndex,int(64))[1122203] const-val F48_ret_tmp[2049102]:byteIndex[28173] const-val F49_ret_tmp[2049104]:byteIndex[28173] const-val F50_ret_tmp[2049106]:range(byteIndex,boundedLow,false)[1143464] const-val F51_ret_tmp[2049108]:string[26] const-val F52_ret_tmp[2049110]:range(byteIndex,boundedLow,false)[1143464] const-val F53_ret_tmp[2049112]:string[26] const-val F54_ret_tmp[2049114]:byteIndex[28173] const-val F55_ret_tmp[2049116]:range(byteIndex,bounded,false)[1025853] const-val F56_ret_tmp[2049118]:string[26] const-val F57_ret_tmp[2049120]:byteIndex[28173] const-val F58_ret_tmp[2049122]:byteIndex[28173] const-val F59_ret_tmp[2049124]:range(byteIndex,boundedLow,false)[1143464] const-val F60_ret_tmp[2049126]:string[26] val F61_i[2049128]:int(64)[13] const-val F62_ret_tmp[2049130]:(syserr,int(32),int(32))[964681] const F63_tmp[2049132]:(syserr,int(32),int(32))[964681] const F64_nBytes[2049134]:int(32)[95] val F65_call_tmp[2049136]:byteIndex[28173] const-val F66_ret_tmp[2049138]:byteIndex[28173] const-val F67_ret_tmp[2049140]:(int(32),byteIndex,int(64))[1122203] const-val F68_ret_tmp[2049142]:byteIndex[28173] const-val F69_ret_tmp[2049144]:byteIndex[28173] const-val F70_ret_tmp[2049146]:range(byteIndex,boundedLow,false)[1143464] const-val F71_ret_tmp[2049148]:string[26] const-val F72_ret_tmp[2049150]:range(byteIndex,boundedLow,false)[1143464] const-val F73_ret_tmp[2049152]:string[26] const-val F74_ret_tmp[2049154]:byteIndex[28173] const-val F75_ret_tmp[2049156]:range(byteIndex,bounded,false)[1025853] const-val F76_ret_tmp[2049158]:string[26] const-val F77_ret_tmp[2049160]:byteIndex[28173] const-val F78_ret_tmp[2049162]:byteIndex[28173] const-val F79_ret_tmp[2049164]:range(byteIndex,boundedLow,false)[1143464] const-val F80_ret_tmp[2049166]:string[26] val F81__yield_expr_tmp_[2049168]:string[26] val F82__yield_expr_tmp_[2049170]:string[26] val F83__yield_expr_tmp_[2049172]:string[26] val value[2049174]:string[26]
  type _ir_split__ref_string[1156571] ref F0_this[2049004]:_ref(string)[938000] const-val F1_maxsplit[2049008]:int(64)[13]
  function _getIterator[1156580](const  ref arg ir[1156582]:_ir_split__ref_string[1156571]) : _ic_split__ref_string[1156565] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[1156689]:_ic_split__ref_string[1156565] "dead after last mention" "RVV" "temp"
    val _ic_[1156572]:_ic_split__ref_string[1156565] "dead after last mention" "temp"
    const-val call_tmp[1156696]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1156699 'move' call_tmp[1156696](1156711 'sizeof_bundle' _ic_split__ref_string[1156565]))
    const-val cast_tmp[1156714]:c_void_ptr[149] "dead after last mention" "temp"
    (1156716 'move' cast_tmp[1156714](1156577 call chpl_here_alloc[187788] call_tmp[1156696] 36))
    (1156585 'move' _ic_[1156572](1156718 'cast' _ic_split__ref_string[1156565] cast_tmp[1156714]))
    (1156587 'setcid' _ic_[1156572])
    (1156694 'move' ret[1156689] _ic_[1156572])
    (2052371 '.=' ret[1156689] more[1156568] 1)
    ref tmp[2052375]:_ref(string)[938000] "temp"
    (2052380 'move' tmp[2052375](2052376 '.v' ir[1156582] F0_this[2049004]))
    (2052382 '.=' ret[1156689] F0_this[2049002] tmp[2052375])
    const-val tmp[2052386]:int(64)[13] "temp"
    (2052391 'move' tmp[2052386](2052387 '.v' ir[1156582] F1_maxsplit[2049008]))
    (2052393 '.=' ret[1156689] F1_maxsplit[2049006] tmp[2052386])
    (1156691 return ret[1156689])
  }
  function _ref(string)[938000].strip[36095](const  ref arg this[36105]:_ref(string)[938000], const  ref arg chars[36091]:string[26], const in arg leading[36098]:bool[10], const in arg trailing[36102]:bool[10], ref arg _retArg[1863320]:_ref(string)[938000]) : void[4] "fn returns via _retArg" "method" "resolved"
  {
    val ret[504410]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[601520]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (601523 'move' call_tmp[601520](36116 call isASCII[31049] this[36105]))
    const-val call_tmp[601525]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (601528 'move' call_tmp[601525] call_tmp[601520])
    if call_tmp[601525]
    {
      const-val call_tmp[601530]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1867442]:string[26] "temp"
      (36123 call doStripNoEnc[1107695] this[36105] chars[36091] leading[36098] trailing[36102] ret_tmp[1867442])
      (1867445 'move' call_tmp[601530] ret_tmp[1867442])
      (1124446 'move' ret[504410] call_tmp[601530])
      gotoReturn _end_strip[504408] _end_strip[504408]
    }
    {
      const-val call_tmp[601537]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (601540 'move' call_tmp[601537](36132 call isEmpty[35064] this[36105]))
      const-val call_tmp[601542]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (601545 'move' call_tmp[601542] call_tmp[601537])
      if call_tmp[601542]
      {
        (504422 'move' ret[504410](1863324 call chpl__initCopy[981409] ""))
        gotoReturn _end_strip[504408] _end_strip[504408]
      }
      const-val call_tmp[601549]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (601552 'move' call_tmp[601549](36163 call isEmpty[35064] chars[36091]))
      const-val call_tmp[601554]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (601557 'move' call_tmp[601554] call_tmp[601549])
      if call_tmp[601554]
      {
        (1124451 'move' ret[504410](1124449 call chpl__autoCopy[1122036] this[36105]))
        gotoReturn _end_strip[504408] _end_strip[504408]
      }
      const-val call_tmp[601561]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1863022]:string[26] "temp"
      (36178 call localize[32889] this[36105] ret_tmp[1863022])
      (1863025 'move' call_tmp[601561] ret_tmp[1863022])
      const localThis[36179]:string[26] "dead at end of block" "const" "insert auto destroy"
      (540490 'move' localThis[36179] call_tmp[601561])
      const-val call_tmp[601568]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1863028]:string[26] "temp"
      (36189 call localize[32889] chars[36091] ret_tmp[1863028])
      (1863031 'move' call_tmp[601568] ret_tmp[1863028])
      const-val localChars[36190]:string[26] "dead at end of block" "const" "insert auto destroy"
      (540492 'move' localChars[36190] call_tmp[601568])
      val start[36196]:byteIndex[28173] "dead at end of block" "insert auto destroy"
      (540494 call init=[28148] start[36196] 0)
      ref call_tmp[601575]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
      (601578 'move' call_tmp[601575](36202 call buffLen[757947] localThis[36179]))
      const-val call_tmp[601580]:int(64)[13] "dead at end of block" "insert auto destroy" "maybe param" "temp"
      const-val coerce_tmp[1122077]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1122081 'move' coerce_tmp[1122077](1122079 'deref' call_tmp[601575]))
      (601583 'move' call_tmp[601580](36206 call -[962287] coerce_tmp[1122077]))
      val end[36208]:byteIndex[28173] "dead at end of block" "insert auto destroy"
      (540496 call init=[28148] end[36208] call_tmp[601580])
      const-val call_tmp[601585]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (601588 'move' call_tmp[601585] leading[36098])
      if call_tmp[601585]
      {
        {
          val _indexOfInterest[36291]:(int(32),byteIndex,int(64))[1122203] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[36292]:_ic__cpIndexLen__ref_string[1122446] "dead at end of block" "expr temp" "temp"
          const-val call_tmp[601592]:_ir__cpIndexLen__ref_string[1122452] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val default_arg_start[1122118]:byteIndex[28173] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
          const-val ret_tmp[1867732]:byteIndex[28173] "temp"
          (1122120 call _cpIndexLen_default_start[1122092] localThis[36179] ret_tmp[1867732])
          (1867735 'move' default_arg_start[1122118] ret_tmp[1867732])
          const-val ret_tmp[1862912]:_ir__cpIndexLen__ref_string[1122452] "temp"
          (36224 call _cpIndexLen[31109] localThis[36179] default_arg_start[1122118] ret_tmp[1862912])
          (1862915 'move' call_tmp[601592] ret_tmp[1862912])
          (36301 'move' _iterator[36292](36299 call _getIterator[1122461] call_tmp[601592]))
          {
            val ret[1935440]:_ir__cpIndexLen__ref_string[1122452] "dead after last mention" "RVV" "temp"
            const-val call_tmp[1935442]:string[26] "dead at end of block" "maybe param" "temp"
            const-val ret_tmp[1935444]:string[26] "temp"
            ref this[1937611]:_ref(string)[938000] "temp"
            (1937616 'move' this[1937611](1937613 '.v' _iterator[36292] F0_this[2044776]))
            (1935447 call localize[32889] this[1937611] ret_tmp[1935444])
            (1935450 'move' call_tmp[1935442] ret_tmp[1935444])
            val localThis[1935453]:string[26] "dead at end of block" "insert auto destroy"
            (1935455 'move' localThis[1935453] call_tmp[1935442])
            const-val call_tmp[1935458]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1935460 'move' call_tmp[1935458](1935463 call isASCII[31049] localThis[1935453]))
            const-val call_tmp[1935465]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1935467 'move' call_tmp[1935465] call_tmp[1935458])
            if call_tmp[1935458]
            {
              const-val _iterator[1935472]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108627] "dead at end of block" "expr temp" "insert auto destroy" "temp"
              const-val call_tmp[1935474]:range(int(64),bounded,false)[1026875] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret_tmp[1935476]:range(int(64),bounded,false)[1026875] "temp"
              ref this[1937618]:_ref(string)[938000] "temp"
              (1937623 'move' this[1937618](1937620 '.v' _iterator[36292] F0_this[2044776]))
              (1935479 call byteIndices[31068] this[1937618] ret_tmp[1935476])
              (1935482 'move' call_tmp[1935474] ret_tmp[1935476])
              val call_tmp[1935485]:_ic_these_range_int64_t_bounded_F[1096764] "dead at end of block" "expr temp" "maybe param" "temp"
              (1935487 'move' call_tmp[1935485](1935490 call _getIterator[1095381] call_tmp[1935474]))
              const-val call_tmp[1935492]:_ir_chpl_bytes__ref_string[1108323] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[1935494]:_ir_chpl_bytes__ref_string[1108323] "temp"
              ref this[1937625]:_ref(string)[938000] "temp"
              (1937630 'move' this[1937625](1937627 '.v' _iterator[36292] F0_this[2044776]))
              (1935497 call chpl_bytes[33577] this[1937625] ret_tmp[1935494])
              (1935500 'move' call_tmp[1935492] ret_tmp[1935494])
              val call_tmp[1935503]:_ic_chpl_bytes__ref_string[1108317] "dead at end of block" "expr temp" "maybe param" "temp"
              (1935505 'move' call_tmp[1935503](1935508 call _getIterator[1108332] call_tmp[1935492]))
              const-val ret_tmp[1935510]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108627] "temp"
              (1935513 call _build_tuple[1108585] call_tmp[1935485] call_tmp[1935503] ret_tmp[1935510])
              (1935517 'move' _iterator[1935472] ret_tmp[1935510])
              val _iterator[1935520]:_ic_these_range_int64_t_bounded_F[1096764] "temp"
              (1935522 'move' _iterator[1935520](1935524 '.v' _iterator[1935472] x0[1108623]))
              val _iterator[1935527]:_ic_chpl_bytes__ref_string[1108317] "temp"
              (1935529 'move' _iterator[1935527](1935531 '.v' _iterator[1935472] x1[1108625]))
              {
                (1935536 call zip1[1096799] _iterator[1935520])
              }
              {
                (1935540 call zip1[1108352] _iterator[1935527])
              }
              const-val isFinished[1935542]:bool[10] "temp"
              val hasMore[1935544]:bool[10] "temp"
              CForLoop[1935546]
              {
                val _indexOfInterest[1935569]:(int(64),uint(8))[1111101] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                {
                  (1935573 call zip2[1108361] _iterator[1935527])
                }
                {
                  const-val retTmp[1935576]:int(64)[13] "temp"
                  (1935578 'move' retTmp[1935576](1935581 call hasMore[1108388] _iterator[1935527]))
                  (1935583 'move' hasMore[1935544](1935585 'cast' bool[10] retTmp[1935576]))
                }
                (1935588 'move' isFinished[1935542](1935590 '!' hasMore[1935544]))
                if isFinished[1935542]
                {
                  (1935594 'chpl_error' c"zippered iterations have non-equal lengths")
                }
                {
                  (1935598 'move' _index[1935613](1935601 call getValue[1108397] _iterator[1935527]))
                }
                {
                  (1935605 call zip2[1096808] _iterator[1935520])
                }
                {
                  (1935608 'move' _index[1935619](1935611 call getValue[1096844] _iterator[1935520]))
                }
                val _index[1935613]:uint(8)[100] "temp"
                (1935615 '.=' _indexOfInterest[1935569] x1[1111099] _index[1935613])
                val _index[1935619]:int(64)[13] "temp"
                (1935621 '.=' _indexOfInterest[1935569] x0[1111097] _index[1935619])
                1
                const-val i[1935626]:int(64)[13] "const" "index var" "insert auto destroy"
                (1935628 'move' i[1935626](1935630 '.v' _indexOfInterest[1935569] x0[1111097]))
                const-val b[1935633]:uint(8)[100] "const" "index var" "insert auto destroy"
                (1935635 'move' b[1935633](1935637 '.v' _indexOfInterest[1935569] x1[1111099]))
                const-val yret[1935640]:(int(32),byteIndex,int(64))[1122203] "dead after last mention" "YVV" "temp"
                val call_tmp[1935642]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val call_tmp[1935644]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (1935646 'move' call_tmp[1935644](1935648 'cast' int(32)[95] b[1935633]))
                const-val call_tmp[1935651]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1935653]:byteIndex[28173] "temp"
                (1935656 call _cast[39486] i[1935626] ret_tmp[1935653])
                (1935659 'move' call_tmp[1935651] ret_tmp[1935653])
                const-val call_tmp[1935662]:(int(32),byteIndex,int(64))[1122203] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1935664]:(int(32),byteIndex,int(64))[1122203] "temp"
                (1935667 call _build_tuple[1122153] call_tmp[1935644] call_tmp[1935651] 1 ret_tmp[1935664])
                (1935672 'move' call_tmp[1935662] ret_tmp[1935664])
                (1935675 'move' yret[1935640] call_tmp[1935662])
                const-val _yieldedIndex[1936257]:(int(32),byteIndex,int(64))[1122203] "temp"
                (1936959 'move' _yieldedIndex[1936257] call_tmp[1935662])
                {
                  1
                  const-val thisChar[1936260]:int(32)[95] "const" "index var" "insert auto destroy"
                  (1936262 'move' thisChar[1936260](1936264 '.v' _yieldedIndex[1936257] x0[1122197]))
                  ref i[1936267]:_ref(byteIndex)[948820] "index var" "insert auto destroy"
                  (1936269 'move' i[1936267](1936271 '.v' _yieldedIndex[1936257] x1[1122199]))
                  const-val nBytes[1936274]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1936276 'move' nBytes[1936274](1936278 '.v' _yieldedIndex[1936257] x2[1122201]))
                  {
                    {
                      val _indexOfInterest[1936283]:int(32)[95] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1936285]:_ic_codepoints__ref_string[1122910] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1936287]:_ir_codepoints__ref_string[1122916] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1936289]:_ir_codepoints__ref_string[1122916] "temp"
                      (1936292 call codepoints[33666] localChars[36190] ret_tmp[1936289])
                      (1936295 'move' call_tmp[1936287] ret_tmp[1936289])
                      (1936298 'move' _iterator[1936285](1936301 call _getIterator[1122925] call_tmp[1936287]))
                      {
                        val ret[1936304]:_ir_codepoints__ref_string[1122916] "dead at end of block" "RVV" "temp"
                        const-val call_tmp[1936306]:string[26] "dead at end of block" "maybe param" "temp"
                        const-val ret_tmp[1936308]:string[26] "temp"
                        ref this[1936310]:_ref(string)[938000] "temp"
                        (1936312 'move' this[1936310](1936314 '.v' _iterator[1936285] F0_this[2048302]))
                        (1936318 call localize[32889] this[1936310] ret_tmp[1936308])
                        (1936321 'move' call_tmp[1936306] ret_tmp[1936308])
                        val localThis[1936324]:string[26] "dead at end of block" "insert auto destroy"
                        (1936326 'move' localThis[1936324] call_tmp[1936306])
                        const-val call_tmp[1936329]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        ref this[1936331]:_ref(string)[938000] "temp"
                        (1936333 'move' this[1936331](1936335 '.v' _iterator[1936285] F0_this[2048302]))
                        (1936338 'move' call_tmp[1936329](1936341 call isASCII[31049] this[1936331]))
                        const-val call_tmp[1936343]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1936345 'move' call_tmp[1936343] call_tmp[1936329])
                        if call_tmp[1936329]
                        {
                          val _indexOfInterest[1936350]:uint(8)[100] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                          val _iterator[1936352]:_ic_chpl_bytes__ref_string[1108317] "dead at end of block" "expr temp" "temp"
                          const-val call_tmp[1936354]:_ir_chpl_bytes__ref_string[1108323] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val ret_tmp[1936356]:_ir_chpl_bytes__ref_string[1108323] "temp"
                          ref this[1936358]:_ref(string)[938000] "temp"
                          (1936360 'move' this[1936358](1936362 '.v' _iterator[1936285] F0_this[2048302]))
                          (1936366 call chpl_bytes[33577] this[1936358] ret_tmp[1936356])
                          (1936369 'move' call_tmp[1936354] ret_tmp[1936356])
                          (1936372 'move' _iterator[1936352](1936375 call _getIterator[1108332] call_tmp[1936354]))
                          {
                            val ret[1936378]:_ir_chpl_bytes__ref_string[1108323] "dead at end of block" "RVV" "temp"
                            const-val call_tmp[1936380]:string[26] "dead at end of block" "maybe param" "temp"
                            const-val ret_tmp[1936382]:string[26] "temp"
                            ref this[1936384]:_ref(string)[938000] "temp"
                            (1936386 'move' this[1936384](1936388 '.v' _iterator[1936352] F0_this[2046128]))
                            (1936392 call localize[32889] this[1936384] ret_tmp[1936382])
                            (1936395 'move' call_tmp[1936380] ret_tmp[1936382])
                            val localThis[1936398]:string[26] "dead at end of block" "insert auto destroy"
                            (1936400 'move' localThis[1936398] call_tmp[1936380])
                            val _indexOfInterest[1936403]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                            val _iterator[1936405]:_ic_chpl_direct_counted_range_iter[1103851] "dead at end of block" "expr temp" "temp"
                            ref call_tmp[1936407]:_ref(int(64))[936633] "dead at end of block" "maybe param" "temp"
                            (1936409 'move' call_tmp[1936407](1936412 call buffLen[757947] localThis[1936398]))
                            const-val call_tmp[1936414]:_ir_chpl_direct_counted_range_iter[1103857] "dead at end of block" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1936416]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1936418 'move' coerce_tmp[1936416](1936420 'deref' call_tmp[1936407]))
                            const-val ret_tmp[1936422]:_ir_chpl_direct_counted_range_iter[1103857] "temp"
                            (1936425 call chpl_direct_counted_range_iter[458039] 0 coerce_tmp[1936416] ret_tmp[1936422])
                            (1936429 'move' call_tmp[1936414] ret_tmp[1936422])
                            (1936432 'move' _iterator[1936405](1936435 call _getIterator[1103866] call_tmp[1936414]))
                            {
                              val ret[1936438]:_ir_chpl_direct_counted_range_iter[1103857] "dead after last mention" "RVV" "temp"
                              val _indexOfInterest[1936440]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                              val _iterator[1936442]:_ic_chpl_direct_counted_range_iter_helper[1103601] "dead at end of block" "expr temp" "temp"
                              const-val call_tmp[1936444]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead at end of block" "expr temp" "maybe param" "temp"
                              const-val ret_tmp[1936446]:_ir_chpl_direct_counted_range_iter_helper[1103607] "temp"
                              const-val low[1936448]:int(64)[13] "temp"
                              (1936450 'move' low[1936448](1936452 '.v' _iterator[1936405] F0_low[2058106]))
                              const-val count[1936455]:int(64)[13] "temp"
                              (1936457 'move' count[1936455](1936459 '.v' _iterator[1936405] F1_count[2058110]))
                              (1936463 call chpl_direct_counted_range_iter_helper[1102159] low[1936448] count[1936455] ret_tmp[1936446])
                              (1936467 'move' call_tmp[1936444] ret_tmp[1936446])
                              (1936470 'move' _iterator[1936442](1936473 call _getIterator[1103616] call_tmp[1936444]))
                              {
                                val ret[2004448]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead after last mention" "RVV" "temp"
                                val call_tmp[2004450]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                const-val tmp[2004452]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val tmp[2004454]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                                const-val call_tmp[2004456]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[2004944]:int(64)[13] "temp"
                                (2004949 'move' count[2004944](2004946 '.v' _iterator[1936442] F1_count[2064268]))
                                (2004458 'move' call_tmp[2004456](2004461 call <[948459] count[2004944]))
                                (2004463 'move' tmp[2004454] call_tmp[2004456])
                                (2004466 'move' tmp[2004452] call_tmp[2004456])
                                const-val call_tmp[2004469]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (2004471 'move' call_tmp[2004469] call_tmp[2004456])
                                if call_tmp[2004456]
                                {
                                  (2004477 call boundsCheckHalt[210187] "With a negative count, the range must have a last index.")
                                }
                                const-val tmp[2004480]:2*int(64)[1040117] "dead at end of block" "const" "insert auto destroy" "temp"
                                val tmp[2004482]:2*int(64)[1040117] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                                const-val tmp[2004484]:bool[10] "dead after last mention" "maybe param" "temp"
                                const-val call_tmp[2004486]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[2004951]:int(64)[13] "temp"
                                (2004956 'move' count[2004951](2004953 '.v' _iterator[1936442] F1_count[2064268]))
                                (2004488 'move' call_tmp[2004486](2004491 call ==[435671] count[2004951] 0))
                                (2004494 'move' tmp[2004484] call_tmp[2004486])
                                if call_tmp[2004486]
                                {
                                  const-val tmp[2004499]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[2004501]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[2004503]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[2004958]:int(64)[13] "temp"
                                  (2004963 'move' low[2004958](2004960 '.v' _iterator[1936442] F0_low[2064264]))
                                  (2004505 'move' call_tmp[2004503](2004508 call _cast[956095] low[2004958]))
                                  const-val call_tmp[2004510]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val coerce_tmp[2004512]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                  (2004514 'move' coerce_tmp[2004512](2004516 'cast' uint(64)[115] 1))
                                  (2004519 'move' call_tmp[2004510](2004522 call -[962254] call_tmp[2004503]))
                                  const-val call_tmp[2004524]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  (2004526 'move' call_tmp[2004524](2004529 call _cast[953604] call_tmp[2004510]))
                                  const-val ret_tmp[2004531]:2*int(64)[1040117] "temp"
                                  const-val low[2004965]:int(64)[13] "temp"
                                  (2004970 'move' low[2004965](2004967 '.v' _iterator[1936442] F0_low[2064264]))
                                  (2004534 call _build_tuple[1040075] low[2004965] call_tmp[2004524] ret_tmp[2004531])
                                  (2004538 'move' tmp[2004499] ret_tmp[2004531])
                                  (2004541 'move' tmp[2004482] tmp[2004499])
                                }
                                {
                                  const-val tmp[2004545]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[2004547]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[2004549]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[2004972]:int(64)[13] "temp"
                                  (2004977 'move' count[2004972](2004974 '.v' _iterator[1936442] F1_count[2064268]))
                                  (2004551 'move' call_tmp[2004549] count[2004972])
                                  const-val call_tmp[2004554]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[2004979]:int(64)[13] "temp"
                                  (2004984 'move' count[2004979](2004981 '.v' _iterator[1936442] F1_count[2064268]))
                                  (2004556 'move' call_tmp[2004554](2004559 call -[962287] count[2004979]))
                                  const-val call_tmp[2004561]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[2004986]:int(64)[13] "temp"
                                  (2004991 'move' low[2004986](2004988 '.v' _iterator[1936442] F0_low[2064264]))
                                  (2004563 'move' call_tmp[2004561](2004566 call +[439679] low[2004986] call_tmp[2004554]))
                                  const-val ret_tmp[2004569]:2*int(64)[1040117] "temp"
                                  const-val low[2004993]:int(64)[13] "temp"
                                  (2004998 'move' low[2004993](2004995 '.v' _iterator[1936442] F0_low[2064264]))
                                  (2004572 call _build_tuple[1040075] low[2004993] call_tmp[2004561] ret_tmp[2004569])
                                  (2004576 'move' tmp[2004545] ret_tmp[2004569])
                                  (2004579 'move' tmp[2004482] tmp[2004545])
                                }
                                (2004583 '=' tmp[2004480] tmp[2004482])
                                (2004586 'noop')
                                1
                                ref call_tmp[2004588]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (2004590 'move' call_tmp[2004588](2004592 '.' tmp[2004480] x0[1040113]))
                                const-val start[2004595]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[2004597]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (2004599 'move' coerce_tmp[2004597](2004601 'deref' call_tmp[2004588]))
                                (2004603 '=' start[2004595] coerce_tmp[2004597])
                                (2004606 'noop')
                                ref call_tmp[2004607]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (2004609 'move' call_tmp[2004607](2004611 '.' tmp[2004480] x1[1040115]))
                                const-val end[2004614]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[2004616]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (2004618 'move' coerce_tmp[2004616](2004620 'deref' call_tmp[2004607]))
                                (2004622 '=' end[2004614] coerce_tmp[2004616])
                                (2004625 'noop')
                                val _indexOfInterest[2004626]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                val _iterator[2004628]:_ic_chpl_direct_param_stride_range_iter[1103347] "dead at end of block" "expr temp" "temp"
                                const-val call_tmp[2004630]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead at end of block" "expr temp" "maybe param" "temp"
                                const-val ret_tmp[2004632]:_ir_chpl_direct_param_stride_range_iter[1103353] "temp"
                                (2004635 call chpl_direct_param_stride_range_iter[1102585] coerce_tmp[2004597] coerce_tmp[2004616] ret_tmp[2004632])
                                (2004639 'move' call_tmp[2004630] ret_tmp[2004632])
                                (2004642 'move' _iterator[2004628](2004645 call _getIterator[1103362] call_tmp[2004630]))
                                {
                                  val ret[2004648]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead after last mention" "RVV" "temp"
                                  val call_tmp[2004650]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (2004653 call chpl_range_check_stride[1102905])
                                  val i[2004654]:int(64)[13] "dead at end of block" "insert auto destroy"
                                  val call_tmp[2004656]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (2004658 'move' i[2004654] 0)
                                  val call_tmp[2004661]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val default_arg_first[2004663]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val low[2004665]:int(64)[13] "temp"
                                  (2004667 'move' low[2004665](2004669 '.v' _iterator[2004628] F0_low[2065762]))
                                  (2004672 'move' default_arg_first[2004663](2004675 call chpl_checkIfRangeIterWillOverflow_default_first[1103259] low[2004665]))
                                  const-val default_arg_last[2004677]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val high[2004679]:int(64)[13] "temp"
                                  (2004681 'move' high[2004679](2004683 '.v' _iterator[2004628] F1_high[2065766]))
                                  (2004686 'move' default_arg_last[2004677](2004689 call chpl_checkIfRangeIterWillOverflow_default_last[1103287] high[2004679]))
                                  const-val _return_tmp_[2004691]:bool[10] "dead after last mention" "temp"
                                  const-val low[2004693]:int(64)[13] "temp"
                                  (2004695 'move' low[2004693](2004697 '.v' _iterator[2004628] F0_low[2065762]))
                                  const-val high[2004700]:int(64)[13] "temp"
                                  (2004702 'move' high[2004700](2004704 '.v' _iterator[2004628] F1_high[2065766]))
                                  (2004707 'move' _return_tmp_[2004691](2004710 call chpl_checkIfRangeIterWillOverflow[1096137] low[2004693] high[2004700] 1 default_arg_first[2004663] default_arg_last[2004677] 1))
                                  CForLoop[2004717]
                                  {
                                    const-val yret[2004746]:int(64)[13] "dead after last mention" "YVV" "temp"
                                    (2004748 'move' yret[2004746] i[2004654])
                                    const-val _yieldedIndex[2004751]:int(64)[13] "temp"
                                    (2004753 'move' _yieldedIndex[2004751] i[2004654])
                                    {
                                      const-val i[2004757]:int(64)[13] "const" "index var" "insert auto destroy"
                                      (2004759 'move' i[2004757] _yieldedIndex[2004751])
                                      const-val yret[2004762]:int(64)[13] "dead after last mention" "YVV" "temp"
                                      (2004764 'move' yret[2004762] _yieldedIndex[2004751])
                                      const-val _yieldedIndex[2004792]:int(64)[13] "temp"
                                      (2004942 'move' _yieldedIndex[2004792] _yieldedIndex[2004751])
                                      {
                                        const-val i[2004794]:int(64)[13] "const" "index var" "insert auto destroy"
                                        (2004796 'move' i[2004794] _yieldedIndex[2004792])
                                        const-val yret[2004799]:int(64)[13] "dead after last mention" "YVV" "temp"
                                        (2004801 'move' yret[2004799] _yieldedIndex[2004792])
                                        const-val _yieldedIndex[2004804]:int(64)[13] "temp"
                                        (2004806 'move' _yieldedIndex[2004804] _yieldedIndex[2004792])
                                        {
                                          const-val i[2004810]:int(64)[13] "const" "index var" "insert auto destroy"
                                          (2004812 'move' i[2004810] _yieldedIndex[2004804])
                                          const-val yret[2004815]:uint(8)[100] "dead after last mention" "YVV" "temp"
                                          ref call_tmp[2004817]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
                                          ref _this_tmp_[2004819]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "temp"
                                          (2004821 'move' _this_tmp_[2004819](2004824 call buff[758025] localThis[1936398]))
                                          val coerce_tmp[2004826]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                          (2004828 'move' coerce_tmp[2004826](2004830 'deref' _this_tmp_[2004819]))
                                          (2004832 'move' call_tmp[2004817](2004835 call this[954152] coerce_tmp[2004826] _yieldedIndex[2004804]))
                                          const-val coerce_tmp[2004838]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                          (2004840 'move' coerce_tmp[2004838](2004842 'deref' call_tmp[2004817]))
                                          (2004844 '=' yret[2004815] coerce_tmp[2004838])
                                          (2004847 'noop')
                                          const-val _yieldedIndex[2004848]:uint(8)[100] "temp"
                                          (2004850 'move' _yieldedIndex[2004848] coerce_tmp[2004838])
                                          {
                                            const-val b[2004854]:uint(8)[100] "const" "index var" "insert auto destroy"
                                            (2004856 'move' b[2004854] _yieldedIndex[2004848])
                                            val yret[2004859]:int(32)[95] "dead after last mention" "YVV" "temp"
                                            val call_tmp[2004861]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                            const-val _yieldedIndex[2004863]:int(32)[95] "temp"
                                            (2004865 'move' _yieldedIndex[2004863](2004867 'cast' int(32)[95] _yieldedIndex[2004848]))
                                            {
                                              const-val removeChar[2004871]:int(32)[95] "const" "index var" "insert auto destroy"
                                              (2004873 'move' removeChar[2004871] _yieldedIndex[2004863])
                                              {
                                                const-val call_tmp[2004877]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (2004879 'move' call_tmp[2004877](2004882 call ==[435649] thisChar[1936260] removeChar[2004871]))
                                                const-val call_tmp[2004885]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (2004887 'move' call_tmp[2004885] call_tmp[2004877])
                                                if call_tmp[2004885]
                                                {
                                                  const-val call_tmp[2004892]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                                  const-val ret_tmp[2004894]:byteIndex[28173] "temp"
                                                  (2004897 call +[28725] i[1936267] nBytes[1936274] ret_tmp[2004894])
                                                  (2004901 'move' call_tmp[2004892] ret_tmp[2004894])
                                                  (2004905 call =[38194] start[36196] call_tmp[2004892])
                                                  (2004909 call chpl__autoDestroy[1562538] call_tmp[2004892])
                                                  (2004936 call _freeIterator[1103535] _iterator[2004628])
                                                  (2004939 call chpl__autoDestroy[1635435] tmp[2004480])
                                                  (2004912 call _freeIterator[1103785] _iterator[1936442])
                                                  (2004915 call _freeIterator[1104035] _iterator[1936405])
                                                  (2004918 call chpl__autoDestroy[1562275] localThis[1936398])
                                                  (2004921 call _freeIterator[1109630] _iterator[1936352])
                                                  (2004924 call chpl__autoDestroy[1562275] localThis[1936324])
                                                  (2004927 call _freeIterator[1123197] _iterator[1936285])
                                                  continue _continueLabel[1936892] _continueLabel[1936892]
                                                }
                                              }
                                              label _continueLabel[2004932]
                                            }
                                          }
                                        }
                                      }
                                    }
                                    {
                                      const-val low[2004719]:int(64)[13] "temp"
                                      (2004721 'move' low[2004719](2004723 '.v' _iterator[2004628] F0_low[2065762]))
                                      (2004726 '=' i[2004654] low[2004719])
                                    }
                                    {
                                      const-val high[2004730]:int(64)[13] "temp"
                                      (2004732 'move' high[2004730](2004734 '.v' _iterator[2004628] F1_high[2065766]))
                                      (2004737 '<=' i[2004654] high[2004730])
                                    }
                                    {
                                      val call_tmp[2004741]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                      (2004743 '+=' i[2004654] 1)
                                    }
                                  }
                                  label _endchpl_direct_param_stride_range_iter[2004780]
                                }
                                (2004783 call _freeIterator[1103535] _iterator[2004628])
                                (2004786 call chpl__autoDestroy[1635435] tmp[2004480])
                                label _endchpl_direct_counted_range_iter_helper[2004788]
                              }
                              (1936619 call _freeIterator[1103785] _iterator[1936442])
                              label _endchpl_direct_counted_range_iter[1936621]
                            }
                            (1936624 call _freeIterator[1104035] _iterator[1936405])
                            (1936627 call chpl__autoDestroy[1562275] localThis[1936398])
                            label _endchpl_bytes[1936629]
                          }
                          (1936632 call _freeIterator[1109630] _iterator[1936352])
                        }
                        {
                          val i[1936635]:int(64)[13] "dead at end of block" "insert auto destroy"
                          (1936637 'move' i[1936635] 0)
                          val tmp[1936640]:bool[10] "dead after last mention" "temp"
                          ref call_tmp[1936642]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                          (1936644 'move' call_tmp[1936642](1936647 call buffLen[757947] localThis[1936324]))
                          const-val call_tmp[1936649]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[1936651]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1936653 'move' coerce_tmp[1936651](1936655 'deref' call_tmp[1936642]))
                          (1936657 'move' call_tmp[1936649](1936660 call <[437495] 0 coerce_tmp[1936651]))
                          (1936663 'move' tmp[1936640] call_tmp[1936649])
                          WhileDo[1936666]
                          {
                            ref call_tmp[1936668]:_ref(c_ptr(uint(8)))[937493] "dead at end of block" "maybe param" "temp"
                            (1936670 'move' call_tmp[1936668](1936673 call buff[758025] localThis[1936324]))
                            ref call_tmp[1936675]:_ref(int(64))[936633] "dead at end of block" "maybe param" "temp"
                            (1936677 'move' call_tmp[1936675](1936680 call buffLen[757947] localThis[1936324]))
                            const-val call_tmp[1936682]:(syserr,int(32),int(32))[964681] "dead at end of block" "maybe param" "temp"
                            val coerce_tmp[1936684]:c_ptr(uint(8))[937484] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1936686 'move' coerce_tmp[1936684](1936688 'deref' call_tmp[1936668]))
                            const-val coerce_tmp[1936690]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1936692 'move' coerce_tmp[1936690](1936694 'deref' call_tmp[1936675]))
                            const-val ret_tmp[1936696]:(syserr,int(32),int(32))[964681] "temp"
                            (1936699 call decodeHelp[174452] coerce_tmp[1936684] coerce_tmp[1936690] i[1936635] 1 ret_tmp[1936696])
                            (1936705 'move' call_tmp[1936682] ret_tmp[1936696])
                            const-val tmp[1936708]:(syserr,int(32),int(32))[964681] "dead at end of block" "const" "insert auto destroy" "temp"
                            (1936710 'move' tmp[1936708] call_tmp[1936682])
                            1
                            ref call_tmp[1936714]:_ref(syserr)[948893] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1936716 'move' call_tmp[1936714](1936718 '.' tmp[1936708] x0[964675]))
                            const-val decodeRet[1936721]:syserr[223605] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1936723]:syserr[223605] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1936725 'move' coerce_tmp[1936723](1936727 'deref' call_tmp[1936714]))
                            (1936729 'move' decodeRet[1936721](1936732 call chpl__initCopy[964546] coerce_tmp[1936723]))
                            ref call_tmp[1936734]:_ref(int(32))[936687] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1936736 'move' call_tmp[1936734](1936738 '.' tmp[1936708] x1[964677]))
                            const-val cp[1936741]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1936743]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1936745 'move' coerce_tmp[1936743](1936747 'deref' call_tmp[1936734]))
                            (1936749 'move' cp[1936741](1936752 call chpl__initCopy[964818] coerce_tmp[1936743]))
                            ref call_tmp[1936754]:_ref(int(32))[936687] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1936756 'move' call_tmp[1936754](1936758 '.' tmp[1936708] x2[964679]))
                            const-val nBytes[1936761]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1936763]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1936765 'move' coerce_tmp[1936763](1936767 'deref' call_tmp[1936754]))
                            (1936769 'move' nBytes[1936761](1936772 call chpl__initCopy[964818] coerce_tmp[1936763]))
                            const-val yret[1936774]:int(32)[95] "dead after last mention" "YVV" "temp"
                            val call_tmp[1936776]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                            (1936778 'move' yret[1936774] cp[1936741])
                            const-val _yieldedIndex[1936781]:int(32)[95] "temp"
                            (1936783 'move' _yieldedIndex[1936781] cp[1936741])
                            {
                              const-val removeChar[1936787]:int(32)[95] "const" "index var" "insert auto destroy"
                              (1936789 'move' removeChar[1936787] _yieldedIndex[1936781])
                              {
                                const-val call_tmp[1936793]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1936795 'move' call_tmp[1936793](1936798 call ==[435649] thisChar[1936260] removeChar[1936787]))
                                const-val call_tmp[1936801]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1936803 'move' call_tmp[1936801] call_tmp[1936793])
                                if call_tmp[1936801]
                                {
                                  const-val call_tmp[1936808]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                  const-val ret_tmp[1936810]:byteIndex[28173] "temp"
                                  (1936813 call +[28725] i[1936267] nBytes[1936274] ret_tmp[1936810])
                                  (1936817 'move' call_tmp[1936808] ret_tmp[1936810])
                                  (1936821 call =[38194] start[36196] call_tmp[1936808])
                                  (1936825 call chpl__autoDestroy[1562538] call_tmp[1936808])
                                  (1936828 call chpl__autoDestroy[1566178] tmp[1936708])
                                  (1936831 call chpl__autoDestroy[1562275] localThis[1936324])
                                  (1936834 call _freeIterator[1123197] _iterator[1936285])
                                  continue _continueLabel[1936892] _continueLabel[1936892]
                                }
                              }
                              label _continueLabel[1936839]
                            }
                            const-val coerce_tmp[1936841]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1936843 'move' coerce_tmp[1936841](1936845 'cast' int(64)[13] nBytes[1936761]))
                            (1936849 call +=[451358] i[1936635] coerce_tmp[1936841])
                            (1936853 call chpl__autoDestroy[1566178] tmp[1936708])
                            ref call_tmp[1936855]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                            (1936857 'move' call_tmp[1936855](1936860 call buffLen[757947] localThis[1936324]))
                            const-val call_tmp[1936862]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1936864]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1936866 'move' coerce_tmp[1936864](1936868 'deref' call_tmp[1936855]))
                            (1936870 'move' call_tmp[1936862](1936873 call <[437495] i[1936635] coerce_tmp[1936864]))
                            (1936876 'move' tmp[1936640] call_tmp[1936862])
                            tmp[1936640]
                          }
                        }
                        (1936881 call chpl__autoDestroy[1562275] localThis[1936324])
                        label _endcodepoints[1936883]
                      }
                      label _breakLabel[1936885]
                      (1936888 call _freeIterator[1123197] _iterator[1936285])
                    }
                    ref moreRef1[1936895]:_ref(int(64))[936633] "temp"
                    (1936897 'move' moreRef1[1936895](1936899 '.' _iterator[1935520] more[1096767]))
                    const-val moreVal1[1936902]:int(64)[13] "const" "temp"
                    (1936904 '=' moreVal1[1936902] moreRef1[1936895])
                    const-val moreValNeg1[1936907]:int(64)[13] "const" "temp"
                    (1936909 'move' moreValNeg1[1936907](1936911 'u-' moreVal1[1936902]))
                    (1936913 '=' moreRef1[1936895] moreValNeg1[1936907])
                    (1936917 call advance[1096790] _iterator[1935520])
                    ref moreRef2[1936919]:_ref(int(64))[936633] "temp"
                    (1936921 'move' moreRef2[1936919](1936923 '.' _iterator[1935527] more[1108320]))
                    const-val moreVal2[1936926]:int(64)[13] "const" "temp"
                    (1936928 '=' moreVal2[1936926] moreRef2[1936919])
                    const-val moreValNeg2[1936931]:int(64)[13] "const" "temp"
                    (1936933 'move' moreValNeg2[1936931](1936935 'u-' moreVal2[1936926]))
                    (1936937 '=' moreRef2[1936919] moreValNeg2[1936931])
                    (1936941 call advance[1108343] _iterator[1935527])
                    (1936944 call chpl__autoDestroy[1562538] call_tmp[1935651])
                    (1936947 call _freeIterator[1108785] _iterator[1935472])
                    (1936950 call chpl__autoDestroy[1642180] _iterator[1935472])
                    (1936953 call chpl__autoDestroy[1383553] call_tmp[1935474])
                    (1936956 call chpl__autoDestroy[1562275] localThis[1935453])
                    break _breakLabel[36297] _breakLabel[36297]
                  }
                  label _continueLabel[1936892]
                }
                (1935749 call chpl__autoDestroy[1562538] call_tmp[1935651])
                {
                  (1935753 call zip3[1096817] _iterator[1935520])
                }
                {
                  (1935757 call zip3[1108370] _iterator[1935527])
                }
                {
                  {
                    (1935550 call init[1096853] _iterator[1935520])
                  }
                  {
                    (1935554 call init[1108406] _iterator[1935527])
                  }
                }
                {
                  (1935558 call hasMore[1096835] _iterator[1935520])
                }
                {
                  {
                    (1935563 call incr[1096862] _iterator[1935520])
                  }
                  {
                    (1935567 call incr[1108415] _iterator[1935527])
                  }
                }
              }
              {
                const-val retTmp[1935760]:int(64)[13] "temp"
                (1935762 'move' retTmp[1935760](1935765 call hasMore[1108388] _iterator[1935527]))
                (1935767 'move' hasMore[1935544](1935769 'cast' bool[10] retTmp[1935760]))
              }
              if hasMore[1935544]
              {
                (1935774 'chpl_error' c"zippered iterations have non-equal lengths")
              }
              {
                (1935779 call zip4[1108379] _iterator[1935527])
              }
              {
                (1935783 call zip4[1096826] _iterator[1935520])
              }
              (1935786 call _freeIterator[1108785] _iterator[1935472])
              (1935789 call chpl__autoDestroy[1642180] _iterator[1935472])
              (1935792 call chpl__autoDestroy[1383553] call_tmp[1935474])
            }
            {
              const-val call_tmp[1935795]:int(64)[13] "dead at end of block" "maybe param" "temp"
              ref start[1937632]:_ref(byteIndex)[948820] "temp"
              (1937637 'move' start[1937632](1937634 '.v' _iterator[36292] F1_start[2044780]))
              (1935797 'move' call_tmp[1935795](1935800 call _cast[39465] start[1937632]))
              val i[1935802]:int(64)[13] "dead at end of block" "insert auto destroy"
              (1935804 'move' i[1935802] call_tmp[1935795])
              const-val call_tmp[1935807]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1935809 'move' call_tmp[1935807](1935812 call >[437715] call_tmp[1935795] 0))
              const-val call_tmp[1935815]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1935817 'move' call_tmp[1935815] call_tmp[1935807])
              if call_tmp[1935807]
              {
                val tmp[1935822]:bool[10] "dead after last mention" "temp"
                const-val tmp[1935824]:bool[10] "dead after last mention" "maybe param" "temp"
                ref call_tmp[1935826]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                (1935828 'move' call_tmp[1935826](1935831 call buffLen[757947] localThis[1935453]))
                const-val coerce_tmp[1935833]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1935835 'move' coerce_tmp[1935833](1935837 'deref' call_tmp[1935826]))
                (1935839 'move' tmp[1935824](1935842 call <[437495] i[1935802] coerce_tmp[1935833]))
                val tmp[1935845]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[1935847]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1935849]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1935851 'move' call_tmp[1935849] tmp[1935824])
                (1935854 'move' tmp[1935847] tmp[1935824])
                if tmp[1935824]
                {
                  const-val tmp[1935859]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  ref call_tmp[1935861]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[1935863]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "temp"
                  (1935865 'move' _this_tmp_[1935863](1935868 call buff[758025] localThis[1935453]))
                  val coerce_tmp[1935870]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1935872 'move' coerce_tmp[1935870](1935874 'deref' _this_tmp_[1935863]))
                  (1935876 'move' call_tmp[1935861](1935879 call this[954152] coerce_tmp[1935870] i[1935802]))
                  const-val call_tmp[1935882]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1935884]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1935886 'move' coerce_tmp[1935884](1935888 'deref' call_tmp[1935861]))
                  (1935890 'move' call_tmp[1935882](1935893 call isInitialByte[181574] coerce_tmp[1935884]))
                  const-val call_tmp[1935895]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1935897 'move' call_tmp[1935895](1935900 call ![7494] call_tmp[1935882]))
                  (1935902 'move' tmp[1935859] call_tmp[1935895])
                  (1935905 'move' tmp[1935845] call_tmp[1935895])
                }
                {
                  (1935909 'move' tmp[1935845] 0)
                }
                (1935913 'move' tmp[1935822] tmp[1935845])
                WhileDo[1935916]
                {
                  (1935919 call +=[451358] i[1935802] 1)
                  const-val tmp[1935922]:bool[10] "dead after last mention" "maybe param" "temp"
                  ref call_tmp[1935924]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                  (1935926 'move' call_tmp[1935924](1935929 call buffLen[757947] localThis[1935453]))
                  const-val coerce_tmp[1935931]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1935933 'move' coerce_tmp[1935931](1935935 'deref' call_tmp[1935924]))
                  (1935937 'move' tmp[1935922](1935940 call <[437495] i[1935802] coerce_tmp[1935931]))
                  val tmp[1935943]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                  const-val tmp[1935945]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[1935947]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1935949 'move' call_tmp[1935947] tmp[1935922])
                  (1935952 'move' tmp[1935945] tmp[1935922])
                  if tmp[1935922]
                  {
                    const-val tmp[1935957]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    ref call_tmp[1935959]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
                    ref _this_tmp_[1935961]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "temp"
                    (1935963 'move' _this_tmp_[1935961](1935966 call buff[758025] localThis[1935453]))
                    val coerce_tmp[1935968]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1935970 'move' coerce_tmp[1935968](1935972 'deref' _this_tmp_[1935961]))
                    (1935974 'move' call_tmp[1935959](1935977 call this[954152] coerce_tmp[1935968] i[1935802]))
                    const-val call_tmp[1935980]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1935982]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1935984 'move' coerce_tmp[1935982](1935986 'deref' call_tmp[1935959]))
                    (1935988 'move' call_tmp[1935980](1935991 call isInitialByte[181574] coerce_tmp[1935982]))
                    const-val call_tmp[1935993]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1935995 'move' call_tmp[1935993](1935998 call ![7494] call_tmp[1935980]))
                    (1936000 'move' tmp[1935957] call_tmp[1935993])
                    (1936003 'move' tmp[1935943] call_tmp[1935993])
                  }
                  {
                    (1936007 'move' tmp[1935943] 0)
                  }
                  (1936011 'move' tmp[1935822] tmp[1935943])
                  tmp[1935822]
                }
              }
              val tmp[1936015]:bool[10] "dead after last mention" "temp"
              ref call_tmp[1936017]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
              (1936019 'move' call_tmp[1936017](1936022 call buffLen[757947] localThis[1935453]))
              const-val call_tmp[1936024]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1936026]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1936028 'move' coerce_tmp[1936026](1936030 'deref' call_tmp[1936017]))
              (1936032 'move' call_tmp[1936024](1936035 call <[437495] i[1935802] coerce_tmp[1936026]))
              (1936038 'move' tmp[1936015] call_tmp[1936024])
              WhileDo[1936041]
              {
                ref call_tmp[1936043]:_ref(c_ptr(uint(8)))[937493] "dead at end of block" "maybe param" "temp"
                (1936045 'move' call_tmp[1936043](1936048 call buff[758025] localThis[1935453]))
                ref call_tmp[1936050]:_ref(int(64))[936633] "dead at end of block" "maybe param" "temp"
                (1936052 'move' call_tmp[1936050](1936055 call buffLen[757947] localThis[1935453]))
                const-val call_tmp[1936057]:(syserr,int(32),int(32))[964681] "dead at end of block" "maybe param" "temp"
                val coerce_tmp[1936059]:c_ptr(uint(8))[937484] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1936061 'move' coerce_tmp[1936059](1936063 'deref' call_tmp[1936043]))
                const-val coerce_tmp[1936065]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1936067 'move' coerce_tmp[1936065](1936069 'deref' call_tmp[1936050]))
                const-val ret_tmp[1936071]:(syserr,int(32),int(32))[964681] "temp"
                (1936074 call decodeHelp[174452] coerce_tmp[1936059] coerce_tmp[1936065] i[1935802] 1 ret_tmp[1936071])
                (1936080 'move' call_tmp[1936057] ret_tmp[1936071])
                const-val tmp[1936083]:(syserr,int(32),int(32))[964681] "dead at end of block" "const" "insert auto destroy" "temp"
                (1936085 'move' tmp[1936083] call_tmp[1936057])
                1
                ref call_tmp[1936089]:_ref(syserr)[948893] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1936091 'move' call_tmp[1936089](1936093 '.' tmp[1936083] x0[964675]))
                const-val decodeRet[1936096]:syserr[223605] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1936098]:syserr[223605] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1936100 'move' coerce_tmp[1936098](1936102 'deref' call_tmp[1936089]))
                (1936104 'move' decodeRet[1936096](1936107 call chpl__initCopy[964546] coerce_tmp[1936098]))
                ref call_tmp[1936109]:_ref(int(32))[936687] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1936111 'move' call_tmp[1936109](1936113 '.' tmp[1936083] x1[964677]))
                const-val cp[1936116]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1936118]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1936120 'move' coerce_tmp[1936118](1936122 'deref' call_tmp[1936109]))
                (1936124 'move' cp[1936116](1936127 call chpl__initCopy[964818] coerce_tmp[1936118]))
                ref call_tmp[1936129]:_ref(int(32))[936687] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1936131 'move' call_tmp[1936129](1936133 '.' tmp[1936083] x2[964679]))
                const-val nBytes[1936136]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1936138]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1936140 'move' coerce_tmp[1936138](1936142 'deref' call_tmp[1936129]))
                (1936144 'move' nBytes[1936136](1936147 call chpl__initCopy[964818] coerce_tmp[1936138]))
                const-val yret[1936149]:(int(32),byteIndex,int(64))[1122203] "dead after last mention" "YVV" "temp"
                val call_tmp[1936151]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val call_tmp[1936153]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (1936155 'move' call_tmp[1936153] cp[1936116])
                const-val call_tmp[1936158]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1936160]:byteIndex[28173] "temp"
                (1936163 call _cast[39486] i[1935802] ret_tmp[1936160])
                (1936166 'move' call_tmp[1936158] ret_tmp[1936160])
                const-val call_tmp[1936169]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (1936171 'move' call_tmp[1936169](1936173 'cast' int(64)[13] nBytes[1936136]))
                const-val call_tmp[1936176]:(int(32),byteIndex,int(64))[1122203] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1936178]:(int(32),byteIndex,int(64))[1122203] "temp"
                (1936181 call _build_tuple[1122153] cp[1936116] call_tmp[1936158] call_tmp[1936169] ret_tmp[1936178])
                (1936186 'move' call_tmp[1936176] ret_tmp[1936178])
                (1936189 'move' yret[1936149] call_tmp[1936176])
                const-val _yieldedIndex[1936961]:(int(32),byteIndex,int(64))[1122203] "temp"
                (1937609 'move' _yieldedIndex[1936961] call_tmp[1936176])
                {
                  1
                  const-val thisChar[1936964]:int(32)[95] "const" "index var" "insert auto destroy"
                  (1936966 'move' thisChar[1936964](1936968 '.v' _yieldedIndex[1936961] x0[1122197]))
                  ref i[1936971]:_ref(byteIndex)[948820] "index var" "insert auto destroy"
                  (1936973 'move' i[1936971](1936975 '.v' _yieldedIndex[1936961] x1[1122199]))
                  const-val nBytes[1936978]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1936980 'move' nBytes[1936978](1936982 '.v' _yieldedIndex[1936961] x2[1122201]))
                  {
                    {
                      val _indexOfInterest[1936987]:int(32)[95] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1936989]:_ic_codepoints__ref_string[1122910] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1936991]:_ir_codepoints__ref_string[1122916] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1936993]:_ir_codepoints__ref_string[1122916] "temp"
                      (1936996 call codepoints[33666] localChars[36190] ret_tmp[1936993])
                      (1936999 'move' call_tmp[1936991] ret_tmp[1936993])
                      (1937002 'move' _iterator[1936989](1937005 call _getIterator[1122925] call_tmp[1936991]))
                      {
                        val ret[1937008]:_ir_codepoints__ref_string[1122916] "dead at end of block" "RVV" "temp"
                        const-val call_tmp[1937010]:string[26] "dead at end of block" "maybe param" "temp"
                        const-val ret_tmp[1937012]:string[26] "temp"
                        ref this[1937014]:_ref(string)[938000] "temp"
                        (1937016 'move' this[1937014](1937018 '.v' _iterator[1936989] F0_this[2048302]))
                        (1937022 call localize[32889] this[1937014] ret_tmp[1937012])
                        (1937025 'move' call_tmp[1937010] ret_tmp[1937012])
                        val localThis[1937028]:string[26] "dead at end of block" "insert auto destroy"
                        (1937030 'move' localThis[1937028] call_tmp[1937010])
                        const-val call_tmp[1937033]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        ref this[1937035]:_ref(string)[938000] "temp"
                        (1937037 'move' this[1937035](1937039 '.v' _iterator[1936989] F0_this[2048302]))
                        (1937042 'move' call_tmp[1937033](1937045 call isASCII[31049] this[1937035]))
                        const-val call_tmp[1937047]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1937049 'move' call_tmp[1937047] call_tmp[1937033])
                        if call_tmp[1937033]
                        {
                          val _indexOfInterest[1937054]:uint(8)[100] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                          val _iterator[1937056]:_ic_chpl_bytes__ref_string[1108317] "dead at end of block" "expr temp" "temp"
                          const-val call_tmp[1937058]:_ir_chpl_bytes__ref_string[1108323] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val ret_tmp[1937060]:_ir_chpl_bytes__ref_string[1108323] "temp"
                          ref this[1937062]:_ref(string)[938000] "temp"
                          (1937064 'move' this[1937062](1937066 '.v' _iterator[1936989] F0_this[2048302]))
                          (1937070 call chpl_bytes[33577] this[1937062] ret_tmp[1937060])
                          (1937073 'move' call_tmp[1937058] ret_tmp[1937060])
                          (1937076 'move' _iterator[1937056](1937079 call _getIterator[1108332] call_tmp[1937058]))
                          {
                            val ret[1937082]:_ir_chpl_bytes__ref_string[1108323] "dead at end of block" "RVV" "temp"
                            const-val call_tmp[1937084]:string[26] "dead at end of block" "maybe param" "temp"
                            const-val ret_tmp[1937086]:string[26] "temp"
                            ref this[1937088]:_ref(string)[938000] "temp"
                            (1937090 'move' this[1937088](1937092 '.v' _iterator[1937056] F0_this[2046128]))
                            (1937096 call localize[32889] this[1937088] ret_tmp[1937086])
                            (1937099 'move' call_tmp[1937084] ret_tmp[1937086])
                            val localThis[1937102]:string[26] "dead at end of block" "insert auto destroy"
                            (1937104 'move' localThis[1937102] call_tmp[1937084])
                            val _indexOfInterest[1937107]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                            val _iterator[1937109]:_ic_chpl_direct_counted_range_iter[1103851] "dead at end of block" "expr temp" "temp"
                            ref call_tmp[1937111]:_ref(int(64))[936633] "dead at end of block" "maybe param" "temp"
                            (1937113 'move' call_tmp[1937111](1937116 call buffLen[757947] localThis[1937102]))
                            const-val call_tmp[1937118]:_ir_chpl_direct_counted_range_iter[1103857] "dead at end of block" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1937120]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1937122 'move' coerce_tmp[1937120](1937124 'deref' call_tmp[1937111]))
                            const-val ret_tmp[1937126]:_ir_chpl_direct_counted_range_iter[1103857] "temp"
                            (1937129 call chpl_direct_counted_range_iter[458039] 0 coerce_tmp[1937120] ret_tmp[1937126])
                            (1937133 'move' call_tmp[1937118] ret_tmp[1937126])
                            (1937136 'move' _iterator[1937109](1937139 call _getIterator[1103866] call_tmp[1937118]))
                            {
                              val ret[1937142]:_ir_chpl_direct_counted_range_iter[1103857] "dead after last mention" "RVV" "temp"
                              val _indexOfInterest[1937144]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                              val _iterator[1937146]:_ic_chpl_direct_counted_range_iter_helper[1103601] "dead at end of block" "expr temp" "temp"
                              const-val call_tmp[1937148]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead at end of block" "expr temp" "maybe param" "temp"
                              const-val ret_tmp[1937150]:_ir_chpl_direct_counted_range_iter_helper[1103607] "temp"
                              const-val low[1937152]:int(64)[13] "temp"
                              (1937154 'move' low[1937152](1937156 '.v' _iterator[1937109] F0_low[2058106]))
                              const-val count[1937159]:int(64)[13] "temp"
                              (1937161 'move' count[1937159](1937163 '.v' _iterator[1937109] F1_count[2058110]))
                              (1937167 call chpl_direct_counted_range_iter_helper[1102159] low[1937152] count[1937159] ret_tmp[1937150])
                              (1937171 'move' call_tmp[1937148] ret_tmp[1937150])
                              (1937174 'move' _iterator[1937146](1937177 call _getIterator[1103616] call_tmp[1937148]))
                              {
                                val ret[2005001]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead after last mention" "RVV" "temp"
                                val call_tmp[2005003]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                const-val tmp[2005005]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val tmp[2005007]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                                const-val call_tmp[2005009]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[2005497]:int(64)[13] "temp"
                                (2005502 'move' count[2005497](2005499 '.v' _iterator[1937146] F1_count[2064268]))
                                (2005011 'move' call_tmp[2005009](2005014 call <[948459] count[2005497]))
                                (2005016 'move' tmp[2005007] call_tmp[2005009])
                                (2005019 'move' tmp[2005005] call_tmp[2005009])
                                const-val call_tmp[2005022]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (2005024 'move' call_tmp[2005022] call_tmp[2005009])
                                if call_tmp[2005009]
                                {
                                  (2005030 call boundsCheckHalt[210187] "With a negative count, the range must have a last index.")
                                }
                                const-val tmp[2005033]:2*int(64)[1040117] "dead at end of block" "const" "insert auto destroy" "temp"
                                val tmp[2005035]:2*int(64)[1040117] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                                const-val tmp[2005037]:bool[10] "dead after last mention" "maybe param" "temp"
                                const-val call_tmp[2005039]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[2005504]:int(64)[13] "temp"
                                (2005509 'move' count[2005504](2005506 '.v' _iterator[1937146] F1_count[2064268]))
                                (2005041 'move' call_tmp[2005039](2005044 call ==[435671] count[2005504] 0))
                                (2005047 'move' tmp[2005037] call_tmp[2005039])
                                if call_tmp[2005039]
                                {
                                  const-val tmp[2005052]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[2005054]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[2005056]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[2005511]:int(64)[13] "temp"
                                  (2005516 'move' low[2005511](2005513 '.v' _iterator[1937146] F0_low[2064264]))
                                  (2005058 'move' call_tmp[2005056](2005061 call _cast[956095] low[2005511]))
                                  const-val call_tmp[2005063]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val coerce_tmp[2005065]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                  (2005067 'move' coerce_tmp[2005065](2005069 'cast' uint(64)[115] 1))
                                  (2005072 'move' call_tmp[2005063](2005075 call -[962254] call_tmp[2005056]))
                                  const-val call_tmp[2005077]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  (2005079 'move' call_tmp[2005077](2005082 call _cast[953604] call_tmp[2005063]))
                                  const-val ret_tmp[2005084]:2*int(64)[1040117] "temp"
                                  const-val low[2005518]:int(64)[13] "temp"
                                  (2005523 'move' low[2005518](2005520 '.v' _iterator[1937146] F0_low[2064264]))
                                  (2005087 call _build_tuple[1040075] low[2005518] call_tmp[2005077] ret_tmp[2005084])
                                  (2005091 'move' tmp[2005052] ret_tmp[2005084])
                                  (2005094 'move' tmp[2005035] tmp[2005052])
                                }
                                {
                                  const-val tmp[2005098]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[2005100]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[2005102]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[2005525]:int(64)[13] "temp"
                                  (2005530 'move' count[2005525](2005527 '.v' _iterator[1937146] F1_count[2064268]))
                                  (2005104 'move' call_tmp[2005102] count[2005525])
                                  const-val call_tmp[2005107]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[2005532]:int(64)[13] "temp"
                                  (2005537 'move' count[2005532](2005534 '.v' _iterator[1937146] F1_count[2064268]))
                                  (2005109 'move' call_tmp[2005107](2005112 call -[962287] count[2005532]))
                                  const-val call_tmp[2005114]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[2005539]:int(64)[13] "temp"
                                  (2005544 'move' low[2005539](2005541 '.v' _iterator[1937146] F0_low[2064264]))
                                  (2005116 'move' call_tmp[2005114](2005119 call +[439679] low[2005539] call_tmp[2005107]))
                                  const-val ret_tmp[2005122]:2*int(64)[1040117] "temp"
                                  const-val low[2005546]:int(64)[13] "temp"
                                  (2005551 'move' low[2005546](2005548 '.v' _iterator[1937146] F0_low[2064264]))
                                  (2005125 call _build_tuple[1040075] low[2005546] call_tmp[2005114] ret_tmp[2005122])
                                  (2005129 'move' tmp[2005098] ret_tmp[2005122])
                                  (2005132 'move' tmp[2005035] tmp[2005098])
                                }
                                (2005136 '=' tmp[2005033] tmp[2005035])
                                (2005139 'noop')
                                1
                                ref call_tmp[2005141]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (2005143 'move' call_tmp[2005141](2005145 '.' tmp[2005033] x0[1040113]))
                                const-val start[2005148]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[2005150]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (2005152 'move' coerce_tmp[2005150](2005154 'deref' call_tmp[2005141]))
                                (2005156 '=' start[2005148] coerce_tmp[2005150])
                                (2005159 'noop')
                                ref call_tmp[2005160]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (2005162 'move' call_tmp[2005160](2005164 '.' tmp[2005033] x1[1040115]))
                                const-val end[2005167]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[2005169]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (2005171 'move' coerce_tmp[2005169](2005173 'deref' call_tmp[2005160]))
                                (2005175 '=' end[2005167] coerce_tmp[2005169])
                                (2005178 'noop')
                                val _indexOfInterest[2005179]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                val _iterator[2005181]:_ic_chpl_direct_param_stride_range_iter[1103347] "dead at end of block" "expr temp" "temp"
                                const-val call_tmp[2005183]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead at end of block" "expr temp" "maybe param" "temp"
                                const-val ret_tmp[2005185]:_ir_chpl_direct_param_stride_range_iter[1103353] "temp"
                                (2005188 call chpl_direct_param_stride_range_iter[1102585] coerce_tmp[2005150] coerce_tmp[2005169] ret_tmp[2005185])
                                (2005192 'move' call_tmp[2005183] ret_tmp[2005185])
                                (2005195 'move' _iterator[2005181](2005198 call _getIterator[1103362] call_tmp[2005183]))
                                {
                                  val ret[2005201]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead after last mention" "RVV" "temp"
                                  val call_tmp[2005203]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (2005206 call chpl_range_check_stride[1102905])
                                  val i[2005207]:int(64)[13] "dead at end of block" "insert auto destroy"
                                  val call_tmp[2005209]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (2005211 'move' i[2005207] 0)
                                  val call_tmp[2005214]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val default_arg_first[2005216]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val low[2005218]:int(64)[13] "temp"
                                  (2005220 'move' low[2005218](2005222 '.v' _iterator[2005181] F0_low[2065762]))
                                  (2005225 'move' default_arg_first[2005216](2005228 call chpl_checkIfRangeIterWillOverflow_default_first[1103259] low[2005218]))
                                  const-val default_arg_last[2005230]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val high[2005232]:int(64)[13] "temp"
                                  (2005234 'move' high[2005232](2005236 '.v' _iterator[2005181] F1_high[2065766]))
                                  (2005239 'move' default_arg_last[2005230](2005242 call chpl_checkIfRangeIterWillOverflow_default_last[1103287] high[2005232]))
                                  const-val _return_tmp_[2005244]:bool[10] "dead after last mention" "temp"
                                  const-val low[2005246]:int(64)[13] "temp"
                                  (2005248 'move' low[2005246](2005250 '.v' _iterator[2005181] F0_low[2065762]))
                                  const-val high[2005253]:int(64)[13] "temp"
                                  (2005255 'move' high[2005253](2005257 '.v' _iterator[2005181] F1_high[2065766]))
                                  (2005260 'move' _return_tmp_[2005244](2005263 call chpl_checkIfRangeIterWillOverflow[1096137] low[2005246] high[2005253] 1 default_arg_first[2005216] default_arg_last[2005230] 1))
                                  CForLoop[2005270]
                                  {
                                    const-val yret[2005299]:int(64)[13] "dead after last mention" "YVV" "temp"
                                    (2005301 'move' yret[2005299] i[2005207])
                                    const-val _yieldedIndex[2005304]:int(64)[13] "temp"
                                    (2005306 'move' _yieldedIndex[2005304] i[2005207])
                                    {
                                      const-val i[2005310]:int(64)[13] "const" "index var" "insert auto destroy"
                                      (2005312 'move' i[2005310] _yieldedIndex[2005304])
                                      const-val yret[2005315]:int(64)[13] "dead after last mention" "YVV" "temp"
                                      (2005317 'move' yret[2005315] _yieldedIndex[2005304])
                                      const-val _yieldedIndex[2005345]:int(64)[13] "temp"
                                      (2005495 'move' _yieldedIndex[2005345] _yieldedIndex[2005304])
                                      {
                                        const-val i[2005347]:int(64)[13] "const" "index var" "insert auto destroy"
                                        (2005349 'move' i[2005347] _yieldedIndex[2005345])
                                        const-val yret[2005352]:int(64)[13] "dead after last mention" "YVV" "temp"
                                        (2005354 'move' yret[2005352] _yieldedIndex[2005345])
                                        const-val _yieldedIndex[2005357]:int(64)[13] "temp"
                                        (2005359 'move' _yieldedIndex[2005357] _yieldedIndex[2005345])
                                        {
                                          const-val i[2005363]:int(64)[13] "const" "index var" "insert auto destroy"
                                          (2005365 'move' i[2005363] _yieldedIndex[2005357])
                                          const-val yret[2005368]:uint(8)[100] "dead after last mention" "YVV" "temp"
                                          ref call_tmp[2005370]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
                                          ref _this_tmp_[2005372]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "temp"
                                          (2005374 'move' _this_tmp_[2005372](2005377 call buff[758025] localThis[1937102]))
                                          val coerce_tmp[2005379]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                          (2005381 'move' coerce_tmp[2005379](2005383 'deref' _this_tmp_[2005372]))
                                          (2005385 'move' call_tmp[2005370](2005388 call this[954152] coerce_tmp[2005379] _yieldedIndex[2005357]))
                                          const-val coerce_tmp[2005391]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                          (2005393 'move' coerce_tmp[2005391](2005395 'deref' call_tmp[2005370]))
                                          (2005397 '=' yret[2005368] coerce_tmp[2005391])
                                          (2005400 'noop')
                                          const-val _yieldedIndex[2005401]:uint(8)[100] "temp"
                                          (2005403 'move' _yieldedIndex[2005401] coerce_tmp[2005391])
                                          {
                                            const-val b[2005407]:uint(8)[100] "const" "index var" "insert auto destroy"
                                            (2005409 'move' b[2005407] _yieldedIndex[2005401])
                                            val yret[2005412]:int(32)[95] "dead after last mention" "YVV" "temp"
                                            val call_tmp[2005414]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                            const-val _yieldedIndex[2005416]:int(32)[95] "temp"
                                            (2005418 'move' _yieldedIndex[2005416](2005420 'cast' int(32)[95] _yieldedIndex[2005401]))
                                            {
                                              const-val removeChar[2005424]:int(32)[95] "const" "index var" "insert auto destroy"
                                              (2005426 'move' removeChar[2005424] _yieldedIndex[2005416])
                                              {
                                                const-val call_tmp[2005430]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (2005432 'move' call_tmp[2005430](2005435 call ==[435649] thisChar[1936964] removeChar[2005424]))
                                                const-val call_tmp[2005438]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (2005440 'move' call_tmp[2005438] call_tmp[2005430])
                                                if call_tmp[2005438]
                                                {
                                                  const-val call_tmp[2005445]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                                  const-val ret_tmp[2005447]:byteIndex[28173] "temp"
                                                  (2005450 call +[28725] i[1936971] nBytes[1936978] ret_tmp[2005447])
                                                  (2005454 'move' call_tmp[2005445] ret_tmp[2005447])
                                                  (2005458 call =[38194] start[36196] call_tmp[2005445])
                                                  (2005462 call chpl__autoDestroy[1562538] call_tmp[2005445])
                                                  (2005489 call _freeIterator[1103535] _iterator[2005181])
                                                  (2005492 call chpl__autoDestroy[1635435] tmp[2005033])
                                                  (2005465 call _freeIterator[1103785] _iterator[1937146])
                                                  (2005468 call _freeIterator[1104035] _iterator[1937109])
                                                  (2005471 call chpl__autoDestroy[1562275] localThis[1937102])
                                                  (2005474 call _freeIterator[1109630] _iterator[1937056])
                                                  (2005477 call chpl__autoDestroy[1562275] localThis[1937028])
                                                  (2005480 call _freeIterator[1123197] _iterator[1936989])
                                                  continue _continueLabel[1937596] _continueLabel[1937596]
                                                }
                                              }
                                              label _continueLabel[2005485]
                                            }
                                          }
                                        }
                                      }
                                    }
                                    {
                                      const-val low[2005272]:int(64)[13] "temp"
                                      (2005274 'move' low[2005272](2005276 '.v' _iterator[2005181] F0_low[2065762]))
                                      (2005279 '=' i[2005207] low[2005272])
                                    }
                                    {
                                      const-val high[2005283]:int(64)[13] "temp"
                                      (2005285 'move' high[2005283](2005287 '.v' _iterator[2005181] F1_high[2065766]))
                                      (2005290 '<=' i[2005207] high[2005283])
                                    }
                                    {
                                      val call_tmp[2005294]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                      (2005296 '+=' i[2005207] 1)
                                    }
                                  }
                                  label _endchpl_direct_param_stride_range_iter[2005333]
                                }
                                (2005336 call _freeIterator[1103535] _iterator[2005181])
                                (2005339 call chpl__autoDestroy[1635435] tmp[2005033])
                                label _endchpl_direct_counted_range_iter_helper[2005341]
                              }
                              (1937323 call _freeIterator[1103785] _iterator[1937146])
                              label _endchpl_direct_counted_range_iter[1937325]
                            }
                            (1937328 call _freeIterator[1104035] _iterator[1937109])
                            (1937331 call chpl__autoDestroy[1562275] localThis[1937102])
                            label _endchpl_bytes[1937333]
                          }
                          (1937336 call _freeIterator[1109630] _iterator[1937056])
                        }
                        {
                          val i[1937339]:int(64)[13] "dead at end of block" "insert auto destroy"
                          (1937341 'move' i[1937339] 0)
                          val tmp[1937344]:bool[10] "dead after last mention" "temp"
                          ref call_tmp[1937346]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                          (1937348 'move' call_tmp[1937346](1937351 call buffLen[757947] localThis[1937028]))
                          const-val call_tmp[1937353]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[1937355]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1937357 'move' coerce_tmp[1937355](1937359 'deref' call_tmp[1937346]))
                          (1937361 'move' call_tmp[1937353](1937364 call <[437495] 0 coerce_tmp[1937355]))
                          (1937367 'move' tmp[1937344] call_tmp[1937353])
                          WhileDo[1937370]
                          {
                            ref call_tmp[1937372]:_ref(c_ptr(uint(8)))[937493] "dead at end of block" "maybe param" "temp"
                            (1937374 'move' call_tmp[1937372](1937377 call buff[758025] localThis[1937028]))
                            ref call_tmp[1937379]:_ref(int(64))[936633] "dead at end of block" "maybe param" "temp"
                            (1937381 'move' call_tmp[1937379](1937384 call buffLen[757947] localThis[1937028]))
                            const-val call_tmp[1937386]:(syserr,int(32),int(32))[964681] "dead at end of block" "maybe param" "temp"
                            val coerce_tmp[1937388]:c_ptr(uint(8))[937484] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1937390 'move' coerce_tmp[1937388](1937392 'deref' call_tmp[1937372]))
                            const-val coerce_tmp[1937394]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1937396 'move' coerce_tmp[1937394](1937398 'deref' call_tmp[1937379]))
                            const-val ret_tmp[1937400]:(syserr,int(32),int(32))[964681] "temp"
                            (1937403 call decodeHelp[174452] coerce_tmp[1937388] coerce_tmp[1937394] i[1937339] 1 ret_tmp[1937400])
                            (1937409 'move' call_tmp[1937386] ret_tmp[1937400])
                            const-val tmp[1937412]:(syserr,int(32),int(32))[964681] "dead at end of block" "const" "insert auto destroy" "temp"
                            (1937414 'move' tmp[1937412] call_tmp[1937386])
                            1
                            ref call_tmp[1937418]:_ref(syserr)[948893] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1937420 'move' call_tmp[1937418](1937422 '.' tmp[1937412] x0[964675]))
                            const-val decodeRet[1937425]:syserr[223605] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1937427]:syserr[223605] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1937429 'move' coerce_tmp[1937427](1937431 'deref' call_tmp[1937418]))
                            (1937433 'move' decodeRet[1937425](1937436 call chpl__initCopy[964546] coerce_tmp[1937427]))
                            ref call_tmp[1937438]:_ref(int(32))[936687] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1937440 'move' call_tmp[1937438](1937442 '.' tmp[1937412] x1[964677]))
                            const-val cp[1937445]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1937447]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1937449 'move' coerce_tmp[1937447](1937451 'deref' call_tmp[1937438]))
                            (1937453 'move' cp[1937445](1937456 call chpl__initCopy[964818] coerce_tmp[1937447]))
                            ref call_tmp[1937458]:_ref(int(32))[936687] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1937460 'move' call_tmp[1937458](1937462 '.' tmp[1937412] x2[964679]))
                            const-val nBytes[1937465]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1937467]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1937469 'move' coerce_tmp[1937467](1937471 'deref' call_tmp[1937458]))
                            (1937473 'move' nBytes[1937465](1937476 call chpl__initCopy[964818] coerce_tmp[1937467]))
                            const-val yret[1937478]:int(32)[95] "dead after last mention" "YVV" "temp"
                            val call_tmp[1937480]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                            (1937482 'move' yret[1937478] cp[1937445])
                            const-val _yieldedIndex[1937485]:int(32)[95] "temp"
                            (1937487 'move' _yieldedIndex[1937485] cp[1937445])
                            {
                              const-val removeChar[1937491]:int(32)[95] "const" "index var" "insert auto destroy"
                              (1937493 'move' removeChar[1937491] _yieldedIndex[1937485])
                              {
                                const-val call_tmp[1937497]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1937499 'move' call_tmp[1937497](1937502 call ==[435649] thisChar[1936964] removeChar[1937491]))
                                const-val call_tmp[1937505]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1937507 'move' call_tmp[1937505] call_tmp[1937497])
                                if call_tmp[1937505]
                                {
                                  const-val call_tmp[1937512]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                  const-val ret_tmp[1937514]:byteIndex[28173] "temp"
                                  (1937517 call +[28725] i[1936971] nBytes[1936978] ret_tmp[1937514])
                                  (1937521 'move' call_tmp[1937512] ret_tmp[1937514])
                                  (1937525 call =[38194] start[36196] call_tmp[1937512])
                                  (1937529 call chpl__autoDestroy[1562538] call_tmp[1937512])
                                  (1937532 call chpl__autoDestroy[1566178] tmp[1937412])
                                  (1937535 call chpl__autoDestroy[1562275] localThis[1937028])
                                  (1937538 call _freeIterator[1123197] _iterator[1936989])
                                  continue _continueLabel[1937596] _continueLabel[1937596]
                                }
                              }
                              label _continueLabel[1937543]
                            }
                            const-val coerce_tmp[1937545]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1937547 'move' coerce_tmp[1937545](1937549 'cast' int(64)[13] nBytes[1937465]))
                            (1937553 call +=[451358] i[1937339] coerce_tmp[1937545])
                            (1937557 call chpl__autoDestroy[1566178] tmp[1937412])
                            ref call_tmp[1937559]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                            (1937561 'move' call_tmp[1937559](1937564 call buffLen[757947] localThis[1937028]))
                            const-val call_tmp[1937566]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1937568]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1937570 'move' coerce_tmp[1937568](1937572 'deref' call_tmp[1937559]))
                            (1937574 'move' call_tmp[1937566](1937577 call <[437495] i[1937339] coerce_tmp[1937568]))
                            (1937580 'move' tmp[1937344] call_tmp[1937566])
                            tmp[1937344]
                          }
                        }
                        (1937585 call chpl__autoDestroy[1562275] localThis[1937028])
                        label _endcodepoints[1937587]
                      }
                      label _breakLabel[1937589]
                      (1937592 call _freeIterator[1123197] _iterator[1936989])
                    }
                    (1937600 call chpl__autoDestroy[1562538] call_tmp[1936158])
                    (1937603 call chpl__autoDestroy[1566178] tmp[1936083])
                    (1937606 call chpl__autoDestroy[1562275] localThis[1935453])
                    break _breakLabel[36297] _breakLabel[36297]
                  }
                  label _continueLabel[1937596]
                }
                (1936209 call chpl__autoDestroy[1562538] call_tmp[1936158])
                const-val coerce_tmp[1936211]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1936213 'move' coerce_tmp[1936211](1936215 'cast' int(64)[13] nBytes[1936136]))
                (1936219 call +=[451358] i[1935802] coerce_tmp[1936211])
                (1936223 call chpl__autoDestroy[1566178] tmp[1936083])
                ref call_tmp[1936225]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                (1936227 'move' call_tmp[1936225](1936230 call buffLen[757947] localThis[1935453]))
                const-val call_tmp[1936232]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1936234]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1936236 'move' coerce_tmp[1936234](1936238 'deref' call_tmp[1936225]))
                (1936240 'move' call_tmp[1936232](1936243 call <[437495] i[1935802] coerce_tmp[1936234]))
                (1936246 'move' tmp[1936015] call_tmp[1936232])
                tmp[1936015]
              }
            }
            (1936251 call chpl__autoDestroy[1562275] localThis[1935453])
            label _end_cpIndexLen[1936253]
          }
          label _breakLabel[36297]
          (1876800 call _freeIterator[1122634] _iterator[36292])
          (1876802 call chpl__autoDestroy[1562538] default_arg_start[1122118])
        }
      }
      const-val call_tmp[601619]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (601622 'move' call_tmp[601619] trailing[36102])
      if call_tmp[601619]
      {
        (36356 call =[38168] end[36208] -1)
        {
          val _indexOfInterest[36439]:(int(32),byteIndex,int(64))[1122203] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[36440]:_ic__cpIndexLen__ref_string[1122446] "dead at end of block" "expr temp" "temp"
          const-val call_tmp[601631]:_ir__cpIndexLen__ref_string[1122452] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val ret_tmp[1862918]:_ir__cpIndexLen__ref_string[1122452] "temp"
          (36372 call _cpIndexLen[31109] localThis[36179] start[36196] ret_tmp[1862918])
          (1862921 'move' call_tmp[601631] ret_tmp[1862918])
          (36449 'move' _iterator[36440](36447 call _getIterator[1122461] call_tmp[601631]))
          {
            val ret[1938222]:_ir__cpIndexLen__ref_string[1122452] "dead after last mention" "RVV" "temp"
            const-val call_tmp[1938224]:string[26] "dead at end of block" "maybe param" "temp"
            const-val ret_tmp[1938226]:string[26] "temp"
            ref this[1940307]:_ref(string)[938000] "temp"
            (1940312 'move' this[1940307](1940309 '.v' _iterator[36440] F0_this[2044776]))
            (1938229 call localize[32889] this[1940307] ret_tmp[1938226])
            (1938232 'move' call_tmp[1938224] ret_tmp[1938226])
            val localThis[1938235]:string[26] "dead at end of block" "insert auto destroy"
            (1938237 'move' localThis[1938235] call_tmp[1938224])
            const-val call_tmp[1938240]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1938242 'move' call_tmp[1938240](1938245 call isASCII[31049] localThis[1938235]))
            const-val call_tmp[1938247]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1938249 'move' call_tmp[1938247] call_tmp[1938240])
            if call_tmp[1938240]
            {
              const-val _iterator[1938254]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108627] "dead at end of block" "expr temp" "insert auto destroy" "temp"
              const-val call_tmp[1938256]:range(int(64),bounded,false)[1026875] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret_tmp[1938258]:range(int(64),bounded,false)[1026875] "temp"
              ref this[1940314]:_ref(string)[938000] "temp"
              (1940319 'move' this[1940314](1940316 '.v' _iterator[36440] F0_this[2044776]))
              (1938261 call byteIndices[31068] this[1940314] ret_tmp[1938258])
              (1938264 'move' call_tmp[1938256] ret_tmp[1938258])
              val call_tmp[1938267]:_ic_these_range_int64_t_bounded_F[1096764] "dead at end of block" "expr temp" "maybe param" "temp"
              (1938269 'move' call_tmp[1938267](1938272 call _getIterator[1095381] call_tmp[1938256]))
              const-val call_tmp[1938274]:_ir_chpl_bytes__ref_string[1108323] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[1938276]:_ir_chpl_bytes__ref_string[1108323] "temp"
              ref this[1940321]:_ref(string)[938000] "temp"
              (1940326 'move' this[1940321](1940323 '.v' _iterator[36440] F0_this[2044776]))
              (1938279 call chpl_bytes[33577] this[1940321] ret_tmp[1938276])
              (1938282 'move' call_tmp[1938274] ret_tmp[1938276])
              val call_tmp[1938285]:_ic_chpl_bytes__ref_string[1108317] "dead at end of block" "expr temp" "maybe param" "temp"
              (1938287 'move' call_tmp[1938285](1938290 call _getIterator[1108332] call_tmp[1938274]))
              const-val ret_tmp[1938292]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108627] "temp"
              (1938295 call _build_tuple[1108585] call_tmp[1938267] call_tmp[1938285] ret_tmp[1938292])
              (1938299 'move' _iterator[1938254] ret_tmp[1938292])
              val _iterator[1938302]:_ic_these_range_int64_t_bounded_F[1096764] "temp"
              (1938304 'move' _iterator[1938302](1938306 '.v' _iterator[1938254] x0[1108623]))
              val _iterator[1938309]:_ic_chpl_bytes__ref_string[1108317] "temp"
              (1938311 'move' _iterator[1938309](1938313 '.v' _iterator[1938254] x1[1108625]))
              {
                (1938318 call zip1[1096799] _iterator[1938302])
              }
              {
                (1938322 call zip1[1108352] _iterator[1938309])
              }
              const-val isFinished[1938324]:bool[10] "temp"
              val hasMore[1938326]:bool[10] "temp"
              CForLoop[1938328]
              {
                val _indexOfInterest[1938351]:(int(64),uint(8))[1111101] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                {
                  (1938355 call zip2[1108361] _iterator[1938309])
                }
                {
                  const-val retTmp[1938358]:int(64)[13] "temp"
                  (1938360 'move' retTmp[1938358](1938363 call hasMore[1108388] _iterator[1938309]))
                  (1938365 'move' hasMore[1938326](1938367 'cast' bool[10] retTmp[1938358]))
                }
                (1938370 'move' isFinished[1938324](1938372 '!' hasMore[1938326]))
                if isFinished[1938324]
                {
                  (1938376 'chpl_error' c"zippered iterations have non-equal lengths")
                }
                {
                  (1938380 'move' _index[1938395](1938383 call getValue[1108397] _iterator[1938309]))
                }
                {
                  (1938387 call zip2[1096808] _iterator[1938302])
                }
                {
                  (1938390 'move' _index[1938401](1938393 call getValue[1096844] _iterator[1938302]))
                }
                val _index[1938395]:uint(8)[100] "temp"
                (1938397 '.=' _indexOfInterest[1938351] x1[1111099] _index[1938395])
                val _index[1938401]:int(64)[13] "temp"
                (1938403 '.=' _indexOfInterest[1938351] x0[1111097] _index[1938401])
                1
                const-val i[1938408]:int(64)[13] "const" "index var" "insert auto destroy"
                (1938410 'move' i[1938408](1938412 '.v' _indexOfInterest[1938351] x0[1111097]))
                const-val b[1938415]:uint(8)[100] "const" "index var" "insert auto destroy"
                (1938417 'move' b[1938415](1938419 '.v' _indexOfInterest[1938351] x1[1111099]))
                const-val yret[1938422]:(int(32),byteIndex,int(64))[1122203] "dead after last mention" "YVV" "temp"
                val call_tmp[1938424]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val call_tmp[1938426]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (1938428 'move' call_tmp[1938426](1938430 'cast' int(32)[95] b[1938415]))
                const-val call_tmp[1938433]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1938435]:byteIndex[28173] "temp"
                (1938438 call _cast[39486] i[1938408] ret_tmp[1938435])
                (1938441 'move' call_tmp[1938433] ret_tmp[1938435])
                const-val call_tmp[1938444]:(int(32),byteIndex,int(64))[1122203] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1938446]:(int(32),byteIndex,int(64))[1122203] "temp"
                (1938449 call _build_tuple[1122153] call_tmp[1938426] call_tmp[1938433] 1 ret_tmp[1938446])
                (1938454 'move' call_tmp[1938444] ret_tmp[1938446])
                (1938457 'move' yret[1938422] call_tmp[1938444])
                const-val _yieldedIndex[1939039]:(int(32),byteIndex,int(64))[1122203] "temp"
                (1939671 'move' _yieldedIndex[1939039] call_tmp[1938444])
                {
                  1
                  const-val thisChar[1939042]:int(32)[95] "const" "index var" "insert auto destroy"
                  (1939044 'move' thisChar[1939042](1939046 '.v' _yieldedIndex[1939039] x0[1122197]))
                  ref i[1939049]:_ref(byteIndex)[948820] "index var" "insert auto destroy"
                  (1939051 'move' i[1939049](1939053 '.v' _yieldedIndex[1939039] x1[1122199]))
                  const-val nBytes[1939056]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1939058 'move' nBytes[1939056](1939060 '.v' _yieldedIndex[1939039] x2[1122201]))
                  {
                    {
                      val _indexOfInterest[1939065]:int(32)[95] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1939067]:_ic_codepoints__ref_string[1122910] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1939069]:_ir_codepoints__ref_string[1122916] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1939071]:_ir_codepoints__ref_string[1122916] "temp"
                      (1939074 call codepoints[33666] localChars[36190] ret_tmp[1939071])
                      (1939077 'move' call_tmp[1939069] ret_tmp[1939071])
                      (1939080 'move' _iterator[1939067](1939083 call _getIterator[1122925] call_tmp[1939069]))
                      {
                        val ret[1939086]:_ir_codepoints__ref_string[1122916] "dead at end of block" "RVV" "temp"
                        const-val call_tmp[1939088]:string[26] "dead at end of block" "maybe param" "temp"
                        const-val ret_tmp[1939090]:string[26] "temp"
                        ref this[1939092]:_ref(string)[938000] "temp"
                        (1939094 'move' this[1939092](1939096 '.v' _iterator[1939067] F0_this[2048302]))
                        (1939100 call localize[32889] this[1939092] ret_tmp[1939090])
                        (1939103 'move' call_tmp[1939088] ret_tmp[1939090])
                        val localThis[1939106]:string[26] "dead at end of block" "insert auto destroy"
                        (1939108 'move' localThis[1939106] call_tmp[1939088])
                        const-val call_tmp[1939111]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        ref this[1939113]:_ref(string)[938000] "temp"
                        (1939115 'move' this[1939113](1939117 '.v' _iterator[1939067] F0_this[2048302]))
                        (1939120 'move' call_tmp[1939111](1939123 call isASCII[31049] this[1939113]))
                        const-val call_tmp[1939125]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1939127 'move' call_tmp[1939125] call_tmp[1939111])
                        if call_tmp[1939111]
                        {
                          val _indexOfInterest[1939132]:uint(8)[100] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                          val _iterator[1939134]:_ic_chpl_bytes__ref_string[1108317] "dead at end of block" "expr temp" "temp"
                          const-val call_tmp[1939136]:_ir_chpl_bytes__ref_string[1108323] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val ret_tmp[1939138]:_ir_chpl_bytes__ref_string[1108323] "temp"
                          ref this[1939140]:_ref(string)[938000] "temp"
                          (1939142 'move' this[1939140](1939144 '.v' _iterator[1939067] F0_this[2048302]))
                          (1939148 call chpl_bytes[33577] this[1939140] ret_tmp[1939138])
                          (1939151 'move' call_tmp[1939136] ret_tmp[1939138])
                          (1939154 'move' _iterator[1939134](1939157 call _getIterator[1108332] call_tmp[1939136]))
                          {
                            val ret[1939160]:_ir_chpl_bytes__ref_string[1108323] "dead at end of block" "RVV" "temp"
                            const-val call_tmp[1939162]:string[26] "dead at end of block" "maybe param" "temp"
                            const-val ret_tmp[1939164]:string[26] "temp"
                            ref this[1939166]:_ref(string)[938000] "temp"
                            (1939168 'move' this[1939166](1939170 '.v' _iterator[1939134] F0_this[2046128]))
                            (1939174 call localize[32889] this[1939166] ret_tmp[1939164])
                            (1939177 'move' call_tmp[1939162] ret_tmp[1939164])
                            val localThis[1939180]:string[26] "dead at end of block" "insert auto destroy"
                            (1939182 'move' localThis[1939180] call_tmp[1939162])
                            val _indexOfInterest[1939185]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                            val _iterator[1939187]:_ic_chpl_direct_counted_range_iter[1103851] "dead at end of block" "expr temp" "temp"
                            ref call_tmp[1939189]:_ref(int(64))[936633] "dead at end of block" "maybe param" "temp"
                            (1939191 'move' call_tmp[1939189](1939194 call buffLen[757947] localThis[1939180]))
                            const-val call_tmp[1939196]:_ir_chpl_direct_counted_range_iter[1103857] "dead at end of block" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1939198]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1939200 'move' coerce_tmp[1939198](1939202 'deref' call_tmp[1939189]))
                            const-val ret_tmp[1939204]:_ir_chpl_direct_counted_range_iter[1103857] "temp"
                            (1939207 call chpl_direct_counted_range_iter[458039] 0 coerce_tmp[1939198] ret_tmp[1939204])
                            (1939211 'move' call_tmp[1939196] ret_tmp[1939204])
                            (1939214 'move' _iterator[1939187](1939217 call _getIterator[1103866] call_tmp[1939196]))
                            {
                              val ret[1939220]:_ir_chpl_direct_counted_range_iter[1103857] "dead after last mention" "RVV" "temp"
                              val _indexOfInterest[1939222]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                              val _iterator[1939224]:_ic_chpl_direct_counted_range_iter_helper[1103601] "dead at end of block" "expr temp" "temp"
                              const-val call_tmp[1939226]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead at end of block" "expr temp" "maybe param" "temp"
                              const-val ret_tmp[1939228]:_ir_chpl_direct_counted_range_iter_helper[1103607] "temp"
                              const-val low[1939230]:int(64)[13] "temp"
                              (1939232 'move' low[1939230](1939234 '.v' _iterator[1939187] F0_low[2058106]))
                              const-val count[1939237]:int(64)[13] "temp"
                              (1939239 'move' count[1939237](1939241 '.v' _iterator[1939187] F1_count[2058110]))
                              (1939245 call chpl_direct_counted_range_iter_helper[1102159] low[1939230] count[1939237] ret_tmp[1939228])
                              (1939249 'move' call_tmp[1939226] ret_tmp[1939228])
                              (1939252 'move' _iterator[1939224](1939255 call _getIterator[1103616] call_tmp[1939226]))
                              {
                                val ret[2005554]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead after last mention" "RVV" "temp"
                                val call_tmp[2005556]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                const-val tmp[2005558]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val tmp[2005560]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                                const-val call_tmp[2005562]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[2006031]:int(64)[13] "temp"
                                (2006036 'move' count[2006031](2006033 '.v' _iterator[1939224] F1_count[2064268]))
                                (2005564 'move' call_tmp[2005562](2005567 call <[948459] count[2006031]))
                                (2005569 'move' tmp[2005560] call_tmp[2005562])
                                (2005572 'move' tmp[2005558] call_tmp[2005562])
                                const-val call_tmp[2005575]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (2005577 'move' call_tmp[2005575] call_tmp[2005562])
                                if call_tmp[2005562]
                                {
                                  (2005583 call boundsCheckHalt[210187] "With a negative count, the range must have a last index.")
                                }
                                const-val tmp[2005586]:2*int(64)[1040117] "dead at end of block" "const" "insert auto destroy" "temp"
                                val tmp[2005588]:2*int(64)[1040117] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                                const-val tmp[2005590]:bool[10] "dead after last mention" "maybe param" "temp"
                                const-val call_tmp[2005592]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[2006038]:int(64)[13] "temp"
                                (2006043 'move' count[2006038](2006040 '.v' _iterator[1939224] F1_count[2064268]))
                                (2005594 'move' call_tmp[2005592](2005597 call ==[435671] count[2006038] 0))
                                (2005600 'move' tmp[2005590] call_tmp[2005592])
                                if call_tmp[2005592]
                                {
                                  const-val tmp[2005605]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[2005607]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[2005609]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[2006045]:int(64)[13] "temp"
                                  (2006050 'move' low[2006045](2006047 '.v' _iterator[1939224] F0_low[2064264]))
                                  (2005611 'move' call_tmp[2005609](2005614 call _cast[956095] low[2006045]))
                                  const-val call_tmp[2005616]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val coerce_tmp[2005618]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                  (2005620 'move' coerce_tmp[2005618](2005622 'cast' uint(64)[115] 1))
                                  (2005625 'move' call_tmp[2005616](2005628 call -[962254] call_tmp[2005609]))
                                  const-val call_tmp[2005630]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  (2005632 'move' call_tmp[2005630](2005635 call _cast[953604] call_tmp[2005616]))
                                  const-val ret_tmp[2005637]:2*int(64)[1040117] "temp"
                                  const-val low[2006052]:int(64)[13] "temp"
                                  (2006057 'move' low[2006052](2006054 '.v' _iterator[1939224] F0_low[2064264]))
                                  (2005640 call _build_tuple[1040075] low[2006052] call_tmp[2005630] ret_tmp[2005637])
                                  (2005644 'move' tmp[2005605] ret_tmp[2005637])
                                  (2005647 'move' tmp[2005588] tmp[2005605])
                                }
                                {
                                  const-val tmp[2005651]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[2005653]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[2005655]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[2006059]:int(64)[13] "temp"
                                  (2006064 'move' count[2006059](2006061 '.v' _iterator[1939224] F1_count[2064268]))
                                  (2005657 'move' call_tmp[2005655] count[2006059])
                                  const-val call_tmp[2005660]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[2006066]:int(64)[13] "temp"
                                  (2006071 'move' count[2006066](2006068 '.v' _iterator[1939224] F1_count[2064268]))
                                  (2005662 'move' call_tmp[2005660](2005665 call -[962287] count[2006066]))
                                  const-val call_tmp[2005667]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[2006073]:int(64)[13] "temp"
                                  (2006078 'move' low[2006073](2006075 '.v' _iterator[1939224] F0_low[2064264]))
                                  (2005669 'move' call_tmp[2005667](2005672 call +[439679] low[2006073] call_tmp[2005660]))
                                  const-val ret_tmp[2005675]:2*int(64)[1040117] "temp"
                                  const-val low[2006080]:int(64)[13] "temp"
                                  (2006085 'move' low[2006080](2006082 '.v' _iterator[1939224] F0_low[2064264]))
                                  (2005678 call _build_tuple[1040075] low[2006080] call_tmp[2005667] ret_tmp[2005675])
                                  (2005682 'move' tmp[2005651] ret_tmp[2005675])
                                  (2005685 'move' tmp[2005588] tmp[2005651])
                                }
                                (2005689 '=' tmp[2005586] tmp[2005588])
                                (2005692 'noop')
                                1
                                ref call_tmp[2005694]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (2005696 'move' call_tmp[2005694](2005698 '.' tmp[2005586] x0[1040113]))
                                const-val start[2005701]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[2005703]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (2005705 'move' coerce_tmp[2005703](2005707 'deref' call_tmp[2005694]))
                                (2005709 '=' start[2005701] coerce_tmp[2005703])
                                (2005712 'noop')
                                ref call_tmp[2005713]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (2005715 'move' call_tmp[2005713](2005717 '.' tmp[2005586] x1[1040115]))
                                const-val end[2005720]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[2005722]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (2005724 'move' coerce_tmp[2005722](2005726 'deref' call_tmp[2005713]))
                                (2005728 '=' end[2005720] coerce_tmp[2005722])
                                (2005731 'noop')
                                val _indexOfInterest[2005732]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                val _iterator[2005734]:_ic_chpl_direct_param_stride_range_iter[1103347] "dead at end of block" "expr temp" "temp"
                                const-val call_tmp[2005736]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead at end of block" "expr temp" "maybe param" "temp"
                                const-val ret_tmp[2005738]:_ir_chpl_direct_param_stride_range_iter[1103353] "temp"
                                (2005741 call chpl_direct_param_stride_range_iter[1102585] coerce_tmp[2005703] coerce_tmp[2005722] ret_tmp[2005738])
                                (2005745 'move' call_tmp[2005736] ret_tmp[2005738])
                                (2005748 'move' _iterator[2005734](2005751 call _getIterator[1103362] call_tmp[2005736]))
                                {
                                  val ret[2005754]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead after last mention" "RVV" "temp"
                                  val call_tmp[2005756]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (2005759 call chpl_range_check_stride[1102905])
                                  val i[2005760]:int(64)[13] "dead at end of block" "insert auto destroy"
                                  val call_tmp[2005762]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (2005764 'move' i[2005760] 0)
                                  val call_tmp[2005767]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val default_arg_first[2005769]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val low[2005771]:int(64)[13] "temp"
                                  (2005773 'move' low[2005771](2005775 '.v' _iterator[2005734] F0_low[2065762]))
                                  (2005778 'move' default_arg_first[2005769](2005781 call chpl_checkIfRangeIterWillOverflow_default_first[1103259] low[2005771]))
                                  const-val default_arg_last[2005783]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val high[2005785]:int(64)[13] "temp"
                                  (2005787 'move' high[2005785](2005789 '.v' _iterator[2005734] F1_high[2065766]))
                                  (2005792 'move' default_arg_last[2005783](2005795 call chpl_checkIfRangeIterWillOverflow_default_last[1103287] high[2005785]))
                                  const-val _return_tmp_[2005797]:bool[10] "dead after last mention" "temp"
                                  const-val low[2005799]:int(64)[13] "temp"
                                  (2005801 'move' low[2005799](2005803 '.v' _iterator[2005734] F0_low[2065762]))
                                  const-val high[2005806]:int(64)[13] "temp"
                                  (2005808 'move' high[2005806](2005810 '.v' _iterator[2005734] F1_high[2065766]))
                                  (2005813 'move' _return_tmp_[2005797](2005816 call chpl_checkIfRangeIterWillOverflow[1096137] low[2005799] high[2005806] 1 default_arg_first[2005769] default_arg_last[2005783] 1))
                                  CForLoop[2005823]
                                  {
                                    const-val yret[2005852]:int(64)[13] "dead after last mention" "YVV" "temp"
                                    (2005854 'move' yret[2005852] i[2005760])
                                    const-val _yieldedIndex[2005857]:int(64)[13] "temp"
                                    (2005859 'move' _yieldedIndex[2005857] i[2005760])
                                    {
                                      const-val i[2005863]:int(64)[13] "const" "index var" "insert auto destroy"
                                      (2005865 'move' i[2005863] _yieldedIndex[2005857])
                                      const-val yret[2005868]:int(64)[13] "dead after last mention" "YVV" "temp"
                                      (2005870 'move' yret[2005868] _yieldedIndex[2005857])
                                      const-val _yieldedIndex[2005898]:int(64)[13] "temp"
                                      (2006029 'move' _yieldedIndex[2005898] _yieldedIndex[2005857])
                                      {
                                        const-val i[2005900]:int(64)[13] "const" "index var" "insert auto destroy"
                                        (2005902 'move' i[2005900] _yieldedIndex[2005898])
                                        const-val yret[2005905]:int(64)[13] "dead after last mention" "YVV" "temp"
                                        (2005907 'move' yret[2005905] _yieldedIndex[2005898])
                                        const-val _yieldedIndex[2005910]:int(64)[13] "temp"
                                        (2005912 'move' _yieldedIndex[2005910] _yieldedIndex[2005898])
                                        {
                                          const-val i[2005916]:int(64)[13] "const" "index var" "insert auto destroy"
                                          (2005918 'move' i[2005916] _yieldedIndex[2005910])
                                          const-val yret[2005921]:uint(8)[100] "dead after last mention" "YVV" "temp"
                                          ref call_tmp[2005923]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
                                          ref _this_tmp_[2005925]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "temp"
                                          (2005927 'move' _this_tmp_[2005925](2005930 call buff[758025] localThis[1939180]))
                                          val coerce_tmp[2005932]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                          (2005934 'move' coerce_tmp[2005932](2005936 'deref' _this_tmp_[2005925]))
                                          (2005938 'move' call_tmp[2005923](2005941 call this[954152] coerce_tmp[2005932] _yieldedIndex[2005910]))
                                          const-val coerce_tmp[2005944]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                          (2005946 'move' coerce_tmp[2005944](2005948 'deref' call_tmp[2005923]))
                                          (2005950 '=' yret[2005921] coerce_tmp[2005944])
                                          (2005953 'noop')
                                          const-val _yieldedIndex[2005954]:uint(8)[100] "temp"
                                          (2005956 'move' _yieldedIndex[2005954] coerce_tmp[2005944])
                                          {
                                            const-val b[2005960]:uint(8)[100] "const" "index var" "insert auto destroy"
                                            (2005962 'move' b[2005960] _yieldedIndex[2005954])
                                            val yret[2005965]:int(32)[95] "dead after last mention" "YVV" "temp"
                                            val call_tmp[2005967]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                            const-val _yieldedIndex[2005969]:int(32)[95] "temp"
                                            (2005971 'move' _yieldedIndex[2005969](2005973 'cast' int(32)[95] _yieldedIndex[2005954]))
                                            {
                                              const-val removeChar[2005977]:int(32)[95] "const" "index var" "insert auto destroy"
                                              (2005979 'move' removeChar[2005977] _yieldedIndex[2005969])
                                              {
                                                const-val call_tmp[2005983]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (2005985 'move' call_tmp[2005983](2005988 call ==[435649] thisChar[1939042] removeChar[2005977]))
                                                const-val call_tmp[2005991]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (2005993 'move' call_tmp[2005991] call_tmp[2005983])
                                                if call_tmp[2005991]
                                                {
                                                  (2006023 call _freeIterator[1103535] _iterator[2005734])
                                                  (2006026 call chpl__autoDestroy[1635435] tmp[2005586])
                                                  (2005999 call _freeIterator[1103785] _iterator[1939224])
                                                  (2006002 call _freeIterator[1104035] _iterator[1939187])
                                                  (2006005 call chpl__autoDestroy[1562275] localThis[1939180])
                                                  (2006008 call _freeIterator[1109630] _iterator[1939134])
                                                  (2006011 call chpl__autoDestroy[1562275] localThis[1939106])
                                                  (2006014 call _freeIterator[1123197] _iterator[1939067])
                                                  continue _continueLabel[1939668] _continueLabel[1939668]
                                                }
                                              }
                                              label _continueLabel[2006019]
                                            }
                                          }
                                        }
                                      }
                                    }
                                    {
                                      const-val low[2005825]:int(64)[13] "temp"
                                      (2005827 'move' low[2005825](2005829 '.v' _iterator[2005734] F0_low[2065762]))
                                      (2005832 '=' i[2005760] low[2005825])
                                    }
                                    {
                                      const-val high[2005836]:int(64)[13] "temp"
                                      (2005838 'move' high[2005836](2005840 '.v' _iterator[2005734] F1_high[2065766]))
                                      (2005843 '<=' i[2005760] high[2005836])
                                    }
                                    {
                                      val call_tmp[2005847]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                      (2005849 '+=' i[2005760] 1)
                                    }
                                  }
                                  label _endchpl_direct_param_stride_range_iter[2005886]
                                }
                                (2005889 call _freeIterator[1103535] _iterator[2005734])
                                (2005892 call chpl__autoDestroy[1635435] tmp[2005586])
                                label _endchpl_direct_counted_range_iter_helper[2005894]
                              }
                              (1939382 call _freeIterator[1103785] _iterator[1939224])
                              label _endchpl_direct_counted_range_iter[1939384]
                            }
                            (1939387 call _freeIterator[1104035] _iterator[1939187])
                            (1939390 call chpl__autoDestroy[1562275] localThis[1939180])
                            label _endchpl_bytes[1939392]
                          }
                          (1939395 call _freeIterator[1109630] _iterator[1939134])
                        }
                        {
                          val i[1939398]:int(64)[13] "dead at end of block" "insert auto destroy"
                          (1939400 'move' i[1939398] 0)
                          val tmp[1939403]:bool[10] "dead after last mention" "temp"
                          ref call_tmp[1939405]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                          (1939407 'move' call_tmp[1939405](1939410 call buffLen[757947] localThis[1939106]))
                          const-val call_tmp[1939412]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[1939414]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1939416 'move' coerce_tmp[1939414](1939418 'deref' call_tmp[1939405]))
                          (1939420 'move' call_tmp[1939412](1939423 call <[437495] 0 coerce_tmp[1939414]))
                          (1939426 'move' tmp[1939403] call_tmp[1939412])
                          WhileDo[1939429]
                          {
                            ref call_tmp[1939431]:_ref(c_ptr(uint(8)))[937493] "dead at end of block" "maybe param" "temp"
                            (1939433 'move' call_tmp[1939431](1939436 call buff[758025] localThis[1939106]))
                            ref call_tmp[1939438]:_ref(int(64))[936633] "dead at end of block" "maybe param" "temp"
                            (1939440 'move' call_tmp[1939438](1939443 call buffLen[757947] localThis[1939106]))
                            const-val call_tmp[1939445]:(syserr,int(32),int(32))[964681] "dead at end of block" "maybe param" "temp"
                            val coerce_tmp[1939447]:c_ptr(uint(8))[937484] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1939449 'move' coerce_tmp[1939447](1939451 'deref' call_tmp[1939431]))
                            const-val coerce_tmp[1939453]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1939455 'move' coerce_tmp[1939453](1939457 'deref' call_tmp[1939438]))
                            const-val ret_tmp[1939459]:(syserr,int(32),int(32))[964681] "temp"
                            (1939462 call decodeHelp[174452] coerce_tmp[1939447] coerce_tmp[1939453] i[1939398] 1 ret_tmp[1939459])
                            (1939468 'move' call_tmp[1939445] ret_tmp[1939459])
                            const-val tmp[1939471]:(syserr,int(32),int(32))[964681] "dead at end of block" "const" "insert auto destroy" "temp"
                            (1939473 'move' tmp[1939471] call_tmp[1939445])
                            1
                            ref call_tmp[1939477]:_ref(syserr)[948893] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1939479 'move' call_tmp[1939477](1939481 '.' tmp[1939471] x0[964675]))
                            const-val decodeRet[1939484]:syserr[223605] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1939486]:syserr[223605] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1939488 'move' coerce_tmp[1939486](1939490 'deref' call_tmp[1939477]))
                            (1939492 'move' decodeRet[1939484](1939495 call chpl__initCopy[964546] coerce_tmp[1939486]))
                            ref call_tmp[1939497]:_ref(int(32))[936687] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1939499 'move' call_tmp[1939497](1939501 '.' tmp[1939471] x1[964677]))
                            const-val cp[1939504]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1939506]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1939508 'move' coerce_tmp[1939506](1939510 'deref' call_tmp[1939497]))
                            (1939512 'move' cp[1939504](1939515 call chpl__initCopy[964818] coerce_tmp[1939506]))
                            ref call_tmp[1939517]:_ref(int(32))[936687] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1939519 'move' call_tmp[1939517](1939521 '.' tmp[1939471] x2[964679]))
                            const-val nBytes[1939524]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1939526]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1939528 'move' coerce_tmp[1939526](1939530 'deref' call_tmp[1939517]))
                            (1939532 'move' nBytes[1939524](1939535 call chpl__initCopy[964818] coerce_tmp[1939526]))
                            const-val yret[1939537]:int(32)[95] "dead after last mention" "YVV" "temp"
                            val call_tmp[1939539]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                            (1939541 'move' yret[1939537] cp[1939504])
                            const-val _yieldedIndex[1939544]:int(32)[95] "temp"
                            (1939546 'move' _yieldedIndex[1939544] cp[1939504])
                            {
                              const-val removeChar[1939550]:int(32)[95] "const" "index var" "insert auto destroy"
                              (1939552 'move' removeChar[1939550] _yieldedIndex[1939544])
                              {
                                const-val call_tmp[1939556]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1939558 'move' call_tmp[1939556](1939561 call ==[435649] thisChar[1939042] removeChar[1939550]))
                                const-val call_tmp[1939564]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1939566 'move' call_tmp[1939564] call_tmp[1939556])
                                if call_tmp[1939564]
                                {
                                  (1939572 call chpl__autoDestroy[1566178] tmp[1939471])
                                  (1939575 call chpl__autoDestroy[1562275] localThis[1939106])
                                  (1939578 call _freeIterator[1123197] _iterator[1939067])
                                  continue _continueLabel[1939668] _continueLabel[1939668]
                                }
                              }
                              label _continueLabel[1939583]
                            }
                            const-val coerce_tmp[1939585]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1939587 'move' coerce_tmp[1939585](1939589 'cast' int(64)[13] nBytes[1939524]))
                            (1939593 call +=[451358] i[1939398] coerce_tmp[1939585])
                            (1939597 call chpl__autoDestroy[1566178] tmp[1939471])
                            ref call_tmp[1939599]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                            (1939601 'move' call_tmp[1939599](1939604 call buffLen[757947] localThis[1939106]))
                            const-val call_tmp[1939606]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1939608]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1939610 'move' coerce_tmp[1939608](1939612 'deref' call_tmp[1939599]))
                            (1939614 'move' call_tmp[1939606](1939617 call <[437495] i[1939398] coerce_tmp[1939608]))
                            (1939620 'move' tmp[1939403] call_tmp[1939606])
                            tmp[1939403]
                          }
                        }
                        (1939625 call chpl__autoDestroy[1562275] localThis[1939106])
                        label _endcodepoints[1939627]
                      }
                      label _breakLabel[1939629]
                      (1939632 call _freeIterator[1123197] _iterator[1939067])
                    }
                    const-val call_tmp[1939634]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1939636]:byteIndex[28173] "temp"
                    (1939639 call +[28725] i[1939049] nBytes[1939056] ret_tmp[1939636])
                    (1939643 'move' call_tmp[1939634] ret_tmp[1939636])
                    const-val call_tmp[1939646]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1939648]:byteIndex[28173] "temp"
                    (1939651 call -[28857] call_tmp[1939634] 1 ret_tmp[1939648])
                    (1939655 'move' call_tmp[1939646] ret_tmp[1939648])
                    (1939659 call =[38194] end[36208] call_tmp[1939646])
                    (1939663 call chpl__autoDestroy[1562538] call_tmp[1939646])
                    (1939666 call chpl__autoDestroy[1562538] call_tmp[1939634])
                  }
                  label _continueLabel[1939668]
                }
                (1938531 call chpl__autoDestroy[1562538] call_tmp[1938433])
                {
                  (1938535 call zip3[1096817] _iterator[1938302])
                }
                {
                  (1938539 call zip3[1108370] _iterator[1938309])
                }
                {
                  {
                    (1938332 call init[1096853] _iterator[1938302])
                  }
                  {
                    (1938336 call init[1108406] _iterator[1938309])
                  }
                }
                {
                  (1938340 call hasMore[1096835] _iterator[1938302])
                }
                {
                  {
                    (1938345 call incr[1096862] _iterator[1938302])
                  }
                  {
                    (1938349 call incr[1108415] _iterator[1938309])
                  }
                }
              }
              {
                const-val retTmp[1938542]:int(64)[13] "temp"
                (1938544 'move' retTmp[1938542](1938547 call hasMore[1108388] _iterator[1938309]))
                (1938549 'move' hasMore[1938326](1938551 'cast' bool[10] retTmp[1938542]))
              }
              if hasMore[1938326]
              {
                (1938556 'chpl_error' c"zippered iterations have non-equal lengths")
              }
              {
                (1938561 call zip4[1108379] _iterator[1938309])
              }
              {
                (1938565 call zip4[1096826] _iterator[1938302])
              }
              (1938568 call _freeIterator[1108785] _iterator[1938254])
              (1938571 call chpl__autoDestroy[1642180] _iterator[1938254])
              (1938574 call chpl__autoDestroy[1383553] call_tmp[1938256])
            }
            {
              const-val call_tmp[1938577]:int(64)[13] "dead at end of block" "maybe param" "temp"
              ref start[1940328]:_ref(byteIndex)[948820] "temp"
              (1940333 'move' start[1940328](1940330 '.v' _iterator[36440] F1_start[2044780]))
              (1938579 'move' call_tmp[1938577](1938582 call _cast[39465] start[1940328]))
              val i[1938584]:int(64)[13] "dead at end of block" "insert auto destroy"
              (1938586 'move' i[1938584] call_tmp[1938577])
              const-val call_tmp[1938589]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1938591 'move' call_tmp[1938589](1938594 call >[437715] call_tmp[1938577] 0))
              const-val call_tmp[1938597]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1938599 'move' call_tmp[1938597] call_tmp[1938589])
              if call_tmp[1938589]
              {
                val tmp[1938604]:bool[10] "dead after last mention" "temp"
                const-val tmp[1938606]:bool[10] "dead after last mention" "maybe param" "temp"
                ref call_tmp[1938608]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                (1938610 'move' call_tmp[1938608](1938613 call buffLen[757947] localThis[1938235]))
                const-val coerce_tmp[1938615]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1938617 'move' coerce_tmp[1938615](1938619 'deref' call_tmp[1938608]))
                (1938621 'move' tmp[1938606](1938624 call <[437495] i[1938584] coerce_tmp[1938615]))
                val tmp[1938627]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[1938629]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1938631]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1938633 'move' call_tmp[1938631] tmp[1938606])
                (1938636 'move' tmp[1938629] tmp[1938606])
                if tmp[1938606]
                {
                  const-val tmp[1938641]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  ref call_tmp[1938643]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[1938645]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "temp"
                  (1938647 'move' _this_tmp_[1938645](1938650 call buff[758025] localThis[1938235]))
                  val coerce_tmp[1938652]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1938654 'move' coerce_tmp[1938652](1938656 'deref' _this_tmp_[1938645]))
                  (1938658 'move' call_tmp[1938643](1938661 call this[954152] coerce_tmp[1938652] i[1938584]))
                  const-val call_tmp[1938664]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1938666]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1938668 'move' coerce_tmp[1938666](1938670 'deref' call_tmp[1938643]))
                  (1938672 'move' call_tmp[1938664](1938675 call isInitialByte[181574] coerce_tmp[1938666]))
                  const-val call_tmp[1938677]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1938679 'move' call_tmp[1938677](1938682 call ![7494] call_tmp[1938664]))
                  (1938684 'move' tmp[1938641] call_tmp[1938677])
                  (1938687 'move' tmp[1938627] call_tmp[1938677])
                }
                {
                  (1938691 'move' tmp[1938627] 0)
                }
                (1938695 'move' tmp[1938604] tmp[1938627])
                WhileDo[1938698]
                {
                  (1938701 call +=[451358] i[1938584] 1)
                  const-val tmp[1938704]:bool[10] "dead after last mention" "maybe param" "temp"
                  ref call_tmp[1938706]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                  (1938708 'move' call_tmp[1938706](1938711 call buffLen[757947] localThis[1938235]))
                  const-val coerce_tmp[1938713]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1938715 'move' coerce_tmp[1938713](1938717 'deref' call_tmp[1938706]))
                  (1938719 'move' tmp[1938704](1938722 call <[437495] i[1938584] coerce_tmp[1938713]))
                  val tmp[1938725]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                  const-val tmp[1938727]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[1938729]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1938731 'move' call_tmp[1938729] tmp[1938704])
                  (1938734 'move' tmp[1938727] tmp[1938704])
                  if tmp[1938704]
                  {
                    const-val tmp[1938739]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    ref call_tmp[1938741]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
                    ref _this_tmp_[1938743]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "temp"
                    (1938745 'move' _this_tmp_[1938743](1938748 call buff[758025] localThis[1938235]))
                    val coerce_tmp[1938750]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1938752 'move' coerce_tmp[1938750](1938754 'deref' _this_tmp_[1938743]))
                    (1938756 'move' call_tmp[1938741](1938759 call this[954152] coerce_tmp[1938750] i[1938584]))
                    const-val call_tmp[1938762]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1938764]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1938766 'move' coerce_tmp[1938764](1938768 'deref' call_tmp[1938741]))
                    (1938770 'move' call_tmp[1938762](1938773 call isInitialByte[181574] coerce_tmp[1938764]))
                    const-val call_tmp[1938775]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1938777 'move' call_tmp[1938775](1938780 call ![7494] call_tmp[1938762]))
                    (1938782 'move' tmp[1938739] call_tmp[1938775])
                    (1938785 'move' tmp[1938725] call_tmp[1938775])
                  }
                  {
                    (1938789 'move' tmp[1938725] 0)
                  }
                  (1938793 'move' tmp[1938604] tmp[1938725])
                  tmp[1938604]
                }
              }
              val tmp[1938797]:bool[10] "dead after last mention" "temp"
              ref call_tmp[1938799]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
              (1938801 'move' call_tmp[1938799](1938804 call buffLen[757947] localThis[1938235]))
              const-val call_tmp[1938806]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1938808]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1938810 'move' coerce_tmp[1938808](1938812 'deref' call_tmp[1938799]))
              (1938814 'move' call_tmp[1938806](1938817 call <[437495] i[1938584] coerce_tmp[1938808]))
              (1938820 'move' tmp[1938797] call_tmp[1938806])
              WhileDo[1938823]
              {
                ref call_tmp[1938825]:_ref(c_ptr(uint(8)))[937493] "dead at end of block" "maybe param" "temp"
                (1938827 'move' call_tmp[1938825](1938830 call buff[758025] localThis[1938235]))
                ref call_tmp[1938832]:_ref(int(64))[936633] "dead at end of block" "maybe param" "temp"
                (1938834 'move' call_tmp[1938832](1938837 call buffLen[757947] localThis[1938235]))
                const-val call_tmp[1938839]:(syserr,int(32),int(32))[964681] "dead at end of block" "maybe param" "temp"
                val coerce_tmp[1938841]:c_ptr(uint(8))[937484] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1938843 'move' coerce_tmp[1938841](1938845 'deref' call_tmp[1938825]))
                const-val coerce_tmp[1938847]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1938849 'move' coerce_tmp[1938847](1938851 'deref' call_tmp[1938832]))
                const-val ret_tmp[1938853]:(syserr,int(32),int(32))[964681] "temp"
                (1938856 call decodeHelp[174452] coerce_tmp[1938841] coerce_tmp[1938847] i[1938584] 1 ret_tmp[1938853])
                (1938862 'move' call_tmp[1938839] ret_tmp[1938853])
                const-val tmp[1938865]:(syserr,int(32),int(32))[964681] "dead at end of block" "const" "insert auto destroy" "temp"
                (1938867 'move' tmp[1938865] call_tmp[1938839])
                1
                ref call_tmp[1938871]:_ref(syserr)[948893] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1938873 'move' call_tmp[1938871](1938875 '.' tmp[1938865] x0[964675]))
                const-val decodeRet[1938878]:syserr[223605] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1938880]:syserr[223605] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1938882 'move' coerce_tmp[1938880](1938884 'deref' call_tmp[1938871]))
                (1938886 'move' decodeRet[1938878](1938889 call chpl__initCopy[964546] coerce_tmp[1938880]))
                ref call_tmp[1938891]:_ref(int(32))[936687] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1938893 'move' call_tmp[1938891](1938895 '.' tmp[1938865] x1[964677]))
                const-val cp[1938898]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1938900]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1938902 'move' coerce_tmp[1938900](1938904 'deref' call_tmp[1938891]))
                (1938906 'move' cp[1938898](1938909 call chpl__initCopy[964818] coerce_tmp[1938900]))
                ref call_tmp[1938911]:_ref(int(32))[936687] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1938913 'move' call_tmp[1938911](1938915 '.' tmp[1938865] x2[964679]))
                const-val nBytes[1938918]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1938920]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1938922 'move' coerce_tmp[1938920](1938924 'deref' call_tmp[1938911]))
                (1938926 'move' nBytes[1938918](1938929 call chpl__initCopy[964818] coerce_tmp[1938920]))
                const-val yret[1938931]:(int(32),byteIndex,int(64))[1122203] "dead after last mention" "YVV" "temp"
                val call_tmp[1938933]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val call_tmp[1938935]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (1938937 'move' call_tmp[1938935] cp[1938898])
                const-val call_tmp[1938940]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1938942]:byteIndex[28173] "temp"
                (1938945 call _cast[39486] i[1938584] ret_tmp[1938942])
                (1938948 'move' call_tmp[1938940] ret_tmp[1938942])
                const-val call_tmp[1938951]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (1938953 'move' call_tmp[1938951](1938955 'cast' int(64)[13] nBytes[1938918]))
                const-val call_tmp[1938958]:(int(32),byteIndex,int(64))[1122203] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1938960]:(int(32),byteIndex,int(64))[1122203] "temp"
                (1938963 call _build_tuple[1122153] cp[1938898] call_tmp[1938940] call_tmp[1938951] ret_tmp[1938960])
                (1938968 'move' call_tmp[1938958] ret_tmp[1938960])
                (1938971 'move' yret[1938931] call_tmp[1938958])
                const-val _yieldedIndex[1939673]:(int(32),byteIndex,int(64))[1122203] "temp"
                (1940305 'move' _yieldedIndex[1939673] call_tmp[1938958])
                {
                  1
                  const-val thisChar[1939676]:int(32)[95] "const" "index var" "insert auto destroy"
                  (1939678 'move' thisChar[1939676](1939680 '.v' _yieldedIndex[1939673] x0[1122197]))
                  ref i[1939683]:_ref(byteIndex)[948820] "index var" "insert auto destroy"
                  (1939685 'move' i[1939683](1939687 '.v' _yieldedIndex[1939673] x1[1122199]))
                  const-val nBytes[1939690]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1939692 'move' nBytes[1939690](1939694 '.v' _yieldedIndex[1939673] x2[1122201]))
                  {
                    {
                      val _indexOfInterest[1939699]:int(32)[95] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1939701]:_ic_codepoints__ref_string[1122910] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1939703]:_ir_codepoints__ref_string[1122916] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1939705]:_ir_codepoints__ref_string[1122916] "temp"
                      (1939708 call codepoints[33666] localChars[36190] ret_tmp[1939705])
                      (1939711 'move' call_tmp[1939703] ret_tmp[1939705])
                      (1939714 'move' _iterator[1939701](1939717 call _getIterator[1122925] call_tmp[1939703]))
                      {
                        val ret[1939720]:_ir_codepoints__ref_string[1122916] "dead at end of block" "RVV" "temp"
                        const-val call_tmp[1939722]:string[26] "dead at end of block" "maybe param" "temp"
                        const-val ret_tmp[1939724]:string[26] "temp"
                        ref this[1939726]:_ref(string)[938000] "temp"
                        (1939728 'move' this[1939726](1939730 '.v' _iterator[1939701] F0_this[2048302]))
                        (1939734 call localize[32889] this[1939726] ret_tmp[1939724])
                        (1939737 'move' call_tmp[1939722] ret_tmp[1939724])
                        val localThis[1939740]:string[26] "dead at end of block" "insert auto destroy"
                        (1939742 'move' localThis[1939740] call_tmp[1939722])
                        const-val call_tmp[1939745]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        ref this[1939747]:_ref(string)[938000] "temp"
                        (1939749 'move' this[1939747](1939751 '.v' _iterator[1939701] F0_this[2048302]))
                        (1939754 'move' call_tmp[1939745](1939757 call isASCII[31049] this[1939747]))
                        const-val call_tmp[1939759]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1939761 'move' call_tmp[1939759] call_tmp[1939745])
                        if call_tmp[1939745]
                        {
                          val _indexOfInterest[1939766]:uint(8)[100] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                          val _iterator[1939768]:_ic_chpl_bytes__ref_string[1108317] "dead at end of block" "expr temp" "temp"
                          const-val call_tmp[1939770]:_ir_chpl_bytes__ref_string[1108323] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val ret_tmp[1939772]:_ir_chpl_bytes__ref_string[1108323] "temp"
                          ref this[1939774]:_ref(string)[938000] "temp"
                          (1939776 'move' this[1939774](1939778 '.v' _iterator[1939701] F0_this[2048302]))
                          (1939782 call chpl_bytes[33577] this[1939774] ret_tmp[1939772])
                          (1939785 'move' call_tmp[1939770] ret_tmp[1939772])
                          (1939788 'move' _iterator[1939768](1939791 call _getIterator[1108332] call_tmp[1939770]))
                          {
                            val ret[1939794]:_ir_chpl_bytes__ref_string[1108323] "dead at end of block" "RVV" "temp"
                            const-val call_tmp[1939796]:string[26] "dead at end of block" "maybe param" "temp"
                            const-val ret_tmp[1939798]:string[26] "temp"
                            ref this[1939800]:_ref(string)[938000] "temp"
                            (1939802 'move' this[1939800](1939804 '.v' _iterator[1939768] F0_this[2046128]))
                            (1939808 call localize[32889] this[1939800] ret_tmp[1939798])
                            (1939811 'move' call_tmp[1939796] ret_tmp[1939798])
                            val localThis[1939814]:string[26] "dead at end of block" "insert auto destroy"
                            (1939816 'move' localThis[1939814] call_tmp[1939796])
                            val _indexOfInterest[1939819]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                            val _iterator[1939821]:_ic_chpl_direct_counted_range_iter[1103851] "dead at end of block" "expr temp" "temp"
                            ref call_tmp[1939823]:_ref(int(64))[936633] "dead at end of block" "maybe param" "temp"
                            (1939825 'move' call_tmp[1939823](1939828 call buffLen[757947] localThis[1939814]))
                            const-val call_tmp[1939830]:_ir_chpl_direct_counted_range_iter[1103857] "dead at end of block" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1939832]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1939834 'move' coerce_tmp[1939832](1939836 'deref' call_tmp[1939823]))
                            const-val ret_tmp[1939838]:_ir_chpl_direct_counted_range_iter[1103857] "temp"
                            (1939841 call chpl_direct_counted_range_iter[458039] 0 coerce_tmp[1939832] ret_tmp[1939838])
                            (1939845 'move' call_tmp[1939830] ret_tmp[1939838])
                            (1939848 'move' _iterator[1939821](1939851 call _getIterator[1103866] call_tmp[1939830]))
                            {
                              val ret[1939854]:_ir_chpl_direct_counted_range_iter[1103857] "dead after last mention" "RVV" "temp"
                              val _indexOfInterest[1939856]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                              val _iterator[1939858]:_ic_chpl_direct_counted_range_iter_helper[1103601] "dead at end of block" "expr temp" "temp"
                              const-val call_tmp[1939860]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead at end of block" "expr temp" "maybe param" "temp"
                              const-val ret_tmp[1939862]:_ir_chpl_direct_counted_range_iter_helper[1103607] "temp"
                              const-val low[1939864]:int(64)[13] "temp"
                              (1939866 'move' low[1939864](1939868 '.v' _iterator[1939821] F0_low[2058106]))
                              const-val count[1939871]:int(64)[13] "temp"
                              (1939873 'move' count[1939871](1939875 '.v' _iterator[1939821] F1_count[2058110]))
                              (1939879 call chpl_direct_counted_range_iter_helper[1102159] low[1939864] count[1939871] ret_tmp[1939862])
                              (1939883 'move' call_tmp[1939860] ret_tmp[1939862])
                              (1939886 'move' _iterator[1939858](1939889 call _getIterator[1103616] call_tmp[1939860]))
                              {
                                val ret[2006088]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead after last mention" "RVV" "temp"
                                val call_tmp[2006090]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                const-val tmp[2006092]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val tmp[2006094]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                                const-val call_tmp[2006096]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[2006565]:int(64)[13] "temp"
                                (2006570 'move' count[2006565](2006567 '.v' _iterator[1939858] F1_count[2064268]))
                                (2006098 'move' call_tmp[2006096](2006101 call <[948459] count[2006565]))
                                (2006103 'move' tmp[2006094] call_tmp[2006096])
                                (2006106 'move' tmp[2006092] call_tmp[2006096])
                                const-val call_tmp[2006109]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (2006111 'move' call_tmp[2006109] call_tmp[2006096])
                                if call_tmp[2006096]
                                {
                                  (2006117 call boundsCheckHalt[210187] "With a negative count, the range must have a last index.")
                                }
                                const-val tmp[2006120]:2*int(64)[1040117] "dead at end of block" "const" "insert auto destroy" "temp"
                                val tmp[2006122]:2*int(64)[1040117] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                                const-val tmp[2006124]:bool[10] "dead after last mention" "maybe param" "temp"
                                const-val call_tmp[2006126]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[2006572]:int(64)[13] "temp"
                                (2006577 'move' count[2006572](2006574 '.v' _iterator[1939858] F1_count[2064268]))
                                (2006128 'move' call_tmp[2006126](2006131 call ==[435671] count[2006572] 0))
                                (2006134 'move' tmp[2006124] call_tmp[2006126])
                                if call_tmp[2006126]
                                {
                                  const-val tmp[2006139]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[2006141]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[2006143]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[2006579]:int(64)[13] "temp"
                                  (2006584 'move' low[2006579](2006581 '.v' _iterator[1939858] F0_low[2064264]))
                                  (2006145 'move' call_tmp[2006143](2006148 call _cast[956095] low[2006579]))
                                  const-val call_tmp[2006150]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val coerce_tmp[2006152]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                  (2006154 'move' coerce_tmp[2006152](2006156 'cast' uint(64)[115] 1))
                                  (2006159 'move' call_tmp[2006150](2006162 call -[962254] call_tmp[2006143]))
                                  const-val call_tmp[2006164]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  (2006166 'move' call_tmp[2006164](2006169 call _cast[953604] call_tmp[2006150]))
                                  const-val ret_tmp[2006171]:2*int(64)[1040117] "temp"
                                  const-val low[2006586]:int(64)[13] "temp"
                                  (2006591 'move' low[2006586](2006588 '.v' _iterator[1939858] F0_low[2064264]))
                                  (2006174 call _build_tuple[1040075] low[2006586] call_tmp[2006164] ret_tmp[2006171])
                                  (2006178 'move' tmp[2006139] ret_tmp[2006171])
                                  (2006181 'move' tmp[2006122] tmp[2006139])
                                }
                                {
                                  const-val tmp[2006185]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[2006187]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[2006189]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[2006593]:int(64)[13] "temp"
                                  (2006598 'move' count[2006593](2006595 '.v' _iterator[1939858] F1_count[2064268]))
                                  (2006191 'move' call_tmp[2006189] count[2006593])
                                  const-val call_tmp[2006194]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[2006600]:int(64)[13] "temp"
                                  (2006605 'move' count[2006600](2006602 '.v' _iterator[1939858] F1_count[2064268]))
                                  (2006196 'move' call_tmp[2006194](2006199 call -[962287] count[2006600]))
                                  const-val call_tmp[2006201]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[2006607]:int(64)[13] "temp"
                                  (2006612 'move' low[2006607](2006609 '.v' _iterator[1939858] F0_low[2064264]))
                                  (2006203 'move' call_tmp[2006201](2006206 call +[439679] low[2006607] call_tmp[2006194]))
                                  const-val ret_tmp[2006209]:2*int(64)[1040117] "temp"
                                  const-val low[2006614]:int(64)[13] "temp"
                                  (2006619 'move' low[2006614](2006616 '.v' _iterator[1939858] F0_low[2064264]))
                                  (2006212 call _build_tuple[1040075] low[2006614] call_tmp[2006201] ret_tmp[2006209])
                                  (2006216 'move' tmp[2006185] ret_tmp[2006209])
                                  (2006219 'move' tmp[2006122] tmp[2006185])
                                }
                                (2006223 '=' tmp[2006120] tmp[2006122])
                                (2006226 'noop')
                                1
                                ref call_tmp[2006228]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (2006230 'move' call_tmp[2006228](2006232 '.' tmp[2006120] x0[1040113]))
                                const-val start[2006235]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[2006237]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (2006239 'move' coerce_tmp[2006237](2006241 'deref' call_tmp[2006228]))
                                (2006243 '=' start[2006235] coerce_tmp[2006237])
                                (2006246 'noop')
                                ref call_tmp[2006247]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (2006249 'move' call_tmp[2006247](2006251 '.' tmp[2006120] x1[1040115]))
                                const-val end[2006254]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[2006256]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (2006258 'move' coerce_tmp[2006256](2006260 'deref' call_tmp[2006247]))
                                (2006262 '=' end[2006254] coerce_tmp[2006256])
                                (2006265 'noop')
                                val _indexOfInterest[2006266]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                val _iterator[2006268]:_ic_chpl_direct_param_stride_range_iter[1103347] "dead at end of block" "expr temp" "temp"
                                const-val call_tmp[2006270]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead at end of block" "expr temp" "maybe param" "temp"
                                const-val ret_tmp[2006272]:_ir_chpl_direct_param_stride_range_iter[1103353] "temp"
                                (2006275 call chpl_direct_param_stride_range_iter[1102585] coerce_tmp[2006237] coerce_tmp[2006256] ret_tmp[2006272])
                                (2006279 'move' call_tmp[2006270] ret_tmp[2006272])
                                (2006282 'move' _iterator[2006268](2006285 call _getIterator[1103362] call_tmp[2006270]))
                                {
                                  val ret[2006288]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead after last mention" "RVV" "temp"
                                  val call_tmp[2006290]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (2006293 call chpl_range_check_stride[1102905])
                                  val i[2006294]:int(64)[13] "dead at end of block" "insert auto destroy"
                                  val call_tmp[2006296]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (2006298 'move' i[2006294] 0)
                                  val call_tmp[2006301]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val default_arg_first[2006303]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val low[2006305]:int(64)[13] "temp"
                                  (2006307 'move' low[2006305](2006309 '.v' _iterator[2006268] F0_low[2065762]))
                                  (2006312 'move' default_arg_first[2006303](2006315 call chpl_checkIfRangeIterWillOverflow_default_first[1103259] low[2006305]))
                                  const-val default_arg_last[2006317]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val high[2006319]:int(64)[13] "temp"
                                  (2006321 'move' high[2006319](2006323 '.v' _iterator[2006268] F1_high[2065766]))
                                  (2006326 'move' default_arg_last[2006317](2006329 call chpl_checkIfRangeIterWillOverflow_default_last[1103287] high[2006319]))
                                  const-val _return_tmp_[2006331]:bool[10] "dead after last mention" "temp"
                                  const-val low[2006333]:int(64)[13] "temp"
                                  (2006335 'move' low[2006333](2006337 '.v' _iterator[2006268] F0_low[2065762]))
                                  const-val high[2006340]:int(64)[13] "temp"
                                  (2006342 'move' high[2006340](2006344 '.v' _iterator[2006268] F1_high[2065766]))
                                  (2006347 'move' _return_tmp_[2006331](2006350 call chpl_checkIfRangeIterWillOverflow[1096137] low[2006333] high[2006340] 1 default_arg_first[2006303] default_arg_last[2006317] 1))
                                  CForLoop[2006357]
                                  {
                                    const-val yret[2006386]:int(64)[13] "dead after last mention" "YVV" "temp"
                                    (2006388 'move' yret[2006386] i[2006294])
                                    const-val _yieldedIndex[2006391]:int(64)[13] "temp"
                                    (2006393 'move' _yieldedIndex[2006391] i[2006294])
                                    {
                                      const-val i[2006397]:int(64)[13] "const" "index var" "insert auto destroy"
                                      (2006399 'move' i[2006397] _yieldedIndex[2006391])
                                      const-val yret[2006402]:int(64)[13] "dead after last mention" "YVV" "temp"
                                      (2006404 'move' yret[2006402] _yieldedIndex[2006391])
                                      const-val _yieldedIndex[2006432]:int(64)[13] "temp"
                                      (2006563 'move' _yieldedIndex[2006432] _yieldedIndex[2006391])
                                      {
                                        const-val i[2006434]:int(64)[13] "const" "index var" "insert auto destroy"
                                        (2006436 'move' i[2006434] _yieldedIndex[2006432])
                                        const-val yret[2006439]:int(64)[13] "dead after last mention" "YVV" "temp"
                                        (2006441 'move' yret[2006439] _yieldedIndex[2006432])
                                        const-val _yieldedIndex[2006444]:int(64)[13] "temp"
                                        (2006446 'move' _yieldedIndex[2006444] _yieldedIndex[2006432])
                                        {
                                          const-val i[2006450]:int(64)[13] "const" "index var" "insert auto destroy"
                                          (2006452 'move' i[2006450] _yieldedIndex[2006444])
                                          const-val yret[2006455]:uint(8)[100] "dead after last mention" "YVV" "temp"
                                          ref call_tmp[2006457]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
                                          ref _this_tmp_[2006459]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "temp"
                                          (2006461 'move' _this_tmp_[2006459](2006464 call buff[758025] localThis[1939814]))
                                          val coerce_tmp[2006466]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                          (2006468 'move' coerce_tmp[2006466](2006470 'deref' _this_tmp_[2006459]))
                                          (2006472 'move' call_tmp[2006457](2006475 call this[954152] coerce_tmp[2006466] _yieldedIndex[2006444]))
                                          const-val coerce_tmp[2006478]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                          (2006480 'move' coerce_tmp[2006478](2006482 'deref' call_tmp[2006457]))
                                          (2006484 '=' yret[2006455] coerce_tmp[2006478])
                                          (2006487 'noop')
                                          const-val _yieldedIndex[2006488]:uint(8)[100] "temp"
                                          (2006490 'move' _yieldedIndex[2006488] coerce_tmp[2006478])
                                          {
                                            const-val b[2006494]:uint(8)[100] "const" "index var" "insert auto destroy"
                                            (2006496 'move' b[2006494] _yieldedIndex[2006488])
                                            val yret[2006499]:int(32)[95] "dead after last mention" "YVV" "temp"
                                            val call_tmp[2006501]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                            const-val _yieldedIndex[2006503]:int(32)[95] "temp"
                                            (2006505 'move' _yieldedIndex[2006503](2006507 'cast' int(32)[95] _yieldedIndex[2006488]))
                                            {
                                              const-val removeChar[2006511]:int(32)[95] "const" "index var" "insert auto destroy"
                                              (2006513 'move' removeChar[2006511] _yieldedIndex[2006503])
                                              {
                                                const-val call_tmp[2006517]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (2006519 'move' call_tmp[2006517](2006522 call ==[435649] thisChar[1939676] removeChar[2006511]))
                                                const-val call_tmp[2006525]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (2006527 'move' call_tmp[2006525] call_tmp[2006517])
                                                if call_tmp[2006525]
                                                {
                                                  (2006557 call _freeIterator[1103535] _iterator[2006268])
                                                  (2006560 call chpl__autoDestroy[1635435] tmp[2006120])
                                                  (2006533 call _freeIterator[1103785] _iterator[1939858])
                                                  (2006536 call _freeIterator[1104035] _iterator[1939821])
                                                  (2006539 call chpl__autoDestroy[1562275] localThis[1939814])
                                                  (2006542 call _freeIterator[1109630] _iterator[1939768])
                                                  (2006545 call chpl__autoDestroy[1562275] localThis[1939740])
                                                  (2006548 call _freeIterator[1123197] _iterator[1939701])
                                                  continue _continueLabel[1940302] _continueLabel[1940302]
                                                }
                                              }
                                              label _continueLabel[2006553]
                                            }
                                          }
                                        }
                                      }
                                    }
                                    {
                                      const-val low[2006359]:int(64)[13] "temp"
                                      (2006361 'move' low[2006359](2006363 '.v' _iterator[2006268] F0_low[2065762]))
                                      (2006366 '=' i[2006294] low[2006359])
                                    }
                                    {
                                      const-val high[2006370]:int(64)[13] "temp"
                                      (2006372 'move' high[2006370](2006374 '.v' _iterator[2006268] F1_high[2065766]))
                                      (2006377 '<=' i[2006294] high[2006370])
                                    }
                                    {
                                      val call_tmp[2006381]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                      (2006383 '+=' i[2006294] 1)
                                    }
                                  }
                                  label _endchpl_direct_param_stride_range_iter[2006420]
                                }
                                (2006423 call _freeIterator[1103535] _iterator[2006268])
                                (2006426 call chpl__autoDestroy[1635435] tmp[2006120])
                                label _endchpl_direct_counted_range_iter_helper[2006428]
                              }
                              (1940016 call _freeIterator[1103785] _iterator[1939858])
                              label _endchpl_direct_counted_range_iter[1940018]
                            }
                            (1940021 call _freeIterator[1104035] _iterator[1939821])
                            (1940024 call chpl__autoDestroy[1562275] localThis[1939814])
                            label _endchpl_bytes[1940026]
                          }
                          (1940029 call _freeIterator[1109630] _iterator[1939768])
                        }
                        {
                          val i[1940032]:int(64)[13] "dead at end of block" "insert auto destroy"
                          (1940034 'move' i[1940032] 0)
                          val tmp[1940037]:bool[10] "dead after last mention" "temp"
                          ref call_tmp[1940039]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                          (1940041 'move' call_tmp[1940039](1940044 call buffLen[757947] localThis[1939740]))
                          const-val call_tmp[1940046]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[1940048]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1940050 'move' coerce_tmp[1940048](1940052 'deref' call_tmp[1940039]))
                          (1940054 'move' call_tmp[1940046](1940057 call <[437495] 0 coerce_tmp[1940048]))
                          (1940060 'move' tmp[1940037] call_tmp[1940046])
                          WhileDo[1940063]
                          {
                            ref call_tmp[1940065]:_ref(c_ptr(uint(8)))[937493] "dead at end of block" "maybe param" "temp"
                            (1940067 'move' call_tmp[1940065](1940070 call buff[758025] localThis[1939740]))
                            ref call_tmp[1940072]:_ref(int(64))[936633] "dead at end of block" "maybe param" "temp"
                            (1940074 'move' call_tmp[1940072](1940077 call buffLen[757947] localThis[1939740]))
                            const-val call_tmp[1940079]:(syserr,int(32),int(32))[964681] "dead at end of block" "maybe param" "temp"
                            val coerce_tmp[1940081]:c_ptr(uint(8))[937484] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1940083 'move' coerce_tmp[1940081](1940085 'deref' call_tmp[1940065]))
                            const-val coerce_tmp[1940087]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1940089 'move' coerce_tmp[1940087](1940091 'deref' call_tmp[1940072]))
                            const-val ret_tmp[1940093]:(syserr,int(32),int(32))[964681] "temp"
                            (1940096 call decodeHelp[174452] coerce_tmp[1940081] coerce_tmp[1940087] i[1940032] 1 ret_tmp[1940093])
                            (1940102 'move' call_tmp[1940079] ret_tmp[1940093])
                            const-val tmp[1940105]:(syserr,int(32),int(32))[964681] "dead at end of block" "const" "insert auto destroy" "temp"
                            (1940107 'move' tmp[1940105] call_tmp[1940079])
                            1
                            ref call_tmp[1940111]:_ref(syserr)[948893] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1940113 'move' call_tmp[1940111](1940115 '.' tmp[1940105] x0[964675]))
                            const-val decodeRet[1940118]:syserr[223605] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1940120]:syserr[223605] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1940122 'move' coerce_tmp[1940120](1940124 'deref' call_tmp[1940111]))
                            (1940126 'move' decodeRet[1940118](1940129 call chpl__initCopy[964546] coerce_tmp[1940120]))
                            ref call_tmp[1940131]:_ref(int(32))[936687] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1940133 'move' call_tmp[1940131](1940135 '.' tmp[1940105] x1[964677]))
                            const-val cp[1940138]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1940140]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1940142 'move' coerce_tmp[1940140](1940144 'deref' call_tmp[1940131]))
                            (1940146 'move' cp[1940138](1940149 call chpl__initCopy[964818] coerce_tmp[1940140]))
                            ref call_tmp[1940151]:_ref(int(32))[936687] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1940153 'move' call_tmp[1940151](1940155 '.' tmp[1940105] x2[964679]))
                            const-val nBytes[1940158]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1940160]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1940162 'move' coerce_tmp[1940160](1940164 'deref' call_tmp[1940151]))
                            (1940166 'move' nBytes[1940158](1940169 call chpl__initCopy[964818] coerce_tmp[1940160]))
                            const-val yret[1940171]:int(32)[95] "dead after last mention" "YVV" "temp"
                            val call_tmp[1940173]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                            (1940175 'move' yret[1940171] cp[1940138])
                            const-val _yieldedIndex[1940178]:int(32)[95] "temp"
                            (1940180 'move' _yieldedIndex[1940178] cp[1940138])
                            {
                              const-val removeChar[1940184]:int(32)[95] "const" "index var" "insert auto destroy"
                              (1940186 'move' removeChar[1940184] _yieldedIndex[1940178])
                              {
                                const-val call_tmp[1940190]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1940192 'move' call_tmp[1940190](1940195 call ==[435649] thisChar[1939676] removeChar[1940184]))
                                const-val call_tmp[1940198]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1940200 'move' call_tmp[1940198] call_tmp[1940190])
                                if call_tmp[1940198]
                                {
                                  (1940206 call chpl__autoDestroy[1566178] tmp[1940105])
                                  (1940209 call chpl__autoDestroy[1562275] localThis[1939740])
                                  (1940212 call _freeIterator[1123197] _iterator[1939701])
                                  continue _continueLabel[1940302] _continueLabel[1940302]
                                }
                              }
                              label _continueLabel[1940217]
                            }
                            const-val coerce_tmp[1940219]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1940221 'move' coerce_tmp[1940219](1940223 'cast' int(64)[13] nBytes[1940158]))
                            (1940227 call +=[451358] i[1940032] coerce_tmp[1940219])
                            (1940231 call chpl__autoDestroy[1566178] tmp[1940105])
                            ref call_tmp[1940233]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                            (1940235 'move' call_tmp[1940233](1940238 call buffLen[757947] localThis[1939740]))
                            const-val call_tmp[1940240]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1940242]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1940244 'move' coerce_tmp[1940242](1940246 'deref' call_tmp[1940233]))
                            (1940248 'move' call_tmp[1940240](1940251 call <[437495] i[1940032] coerce_tmp[1940242]))
                            (1940254 'move' tmp[1940037] call_tmp[1940240])
                            tmp[1940037]
                          }
                        }
                        (1940259 call chpl__autoDestroy[1562275] localThis[1939740])
                        label _endcodepoints[1940261]
                      }
                      label _breakLabel[1940263]
                      (1940266 call _freeIterator[1123197] _iterator[1939701])
                    }
                    const-val call_tmp[1940268]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1940270]:byteIndex[28173] "temp"
                    (1940273 call +[28725] i[1939683] nBytes[1939690] ret_tmp[1940270])
                    (1940277 'move' call_tmp[1940268] ret_tmp[1940270])
                    const-val call_tmp[1940280]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1940282]:byteIndex[28173] "temp"
                    (1940285 call -[28857] call_tmp[1940268] 1 ret_tmp[1940282])
                    (1940289 'move' call_tmp[1940280] ret_tmp[1940282])
                    (1940293 call =[38194] end[36208] call_tmp[1940280])
                    (1940297 call chpl__autoDestroy[1562538] call_tmp[1940280])
                    (1940300 call chpl__autoDestroy[1562538] call_tmp[1940268])
                  }
                  label _continueLabel[1940302]
                }
                (1938991 call chpl__autoDestroy[1562538] call_tmp[1938940])
                const-val coerce_tmp[1938993]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1938995 'move' coerce_tmp[1938993](1938997 'cast' int(64)[13] nBytes[1938918]))
                (1939001 call +=[451358] i[1938584] coerce_tmp[1938993])
                (1939005 call chpl__autoDestroy[1566178] tmp[1938865])
                ref call_tmp[1939007]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                (1939009 'move' call_tmp[1939007](1939012 call buffLen[757947] localThis[1938235]))
                const-val call_tmp[1939014]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1939016]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1939018 'move' coerce_tmp[1939016](1939020 'deref' call_tmp[1939007]))
                (1939022 'move' call_tmp[1939014](1939025 call <[437495] i[1938584] coerce_tmp[1939016]))
                (1939028 'move' tmp[1938797] call_tmp[1939014])
                tmp[1938797]
              }
            }
            (1939033 call chpl__autoDestroy[1562275] localThis[1938235])
            label _end_cpIndexLen[1939035]
          }
          label _breakLabel[36445]
          (1876824 call _freeIterator[1122634] _iterator[36440])
        }
      }
      const-val call_tmp[601663]:range(byteIndex,bounded,false)[1025853] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1867792]:range(byteIndex,bounded,false)[1025853] "temp"
      (36501 call chpl_build_bounded_range[1123315] start[36196] end[36208] ret_tmp[1867792])
      (1867795 'move' call_tmp[601663] ret_tmp[1867792])
      const-val call_tmp[601668]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1867810]:string[26] "temp"
      (36504 call this[1123561] localThis[36179] call_tmp[601663] ret_tmp[1867810])
      (1867813 'move' call_tmp[601668] ret_tmp[1867810])
      (1124455 'move' ret[504410] call_tmp[601668])
      (1876826 call chpl__autoDestroy[1635105] call_tmp[601663])
      (1876829 call chpl__autoDestroy[1562538] end[36208])
      (1876832 call chpl__autoDestroy[1562538] start[36196])
      (1876835 call chpl__autoDestroy[1562275] localChars[36190])
      (1876838 call chpl__autoDestroy[1562275] localThis[36179])
      gotoReturn _end_strip[504408] _end_strip[504408]
    }
    label _end_strip[504408]
    (1863322 '=' _retArg[1863320] ret[504410])
    (1863326 return _void[55])
  }
  function _ref(string)[938000].isSpace[36843](const  ref arg this[36845]:_ref(string)[938000]) : bool[10] "method" "resolved" "fn synchronization free"
  {
    val ret[504489]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[601817]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (601820 'move' call_tmp[601817](36856 call isEmpty[35064] this[36845]))
    const-val call_tmp[601822]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (601825 'move' call_tmp[601822] call_tmp[601817])
    if call_tmp[601822]
    {
      (504495 'move' ret[504489] 0)
      gotoReturn _end_isSpace[504487] _end_isSpace[504487]
    }
    val result[36868]:bool[10] "dead at end of block" "insert auto destroy"
    (540506 'move' result[36868] 1)
    const-val tmp[36947]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[601829]:_ref(int(32))[936687] "dead after last mention" "maybe param" "temp"
    (601832 'move' call_tmp[601829](36876 call locale_id[758103] this[36845]))
    const-val call_tmp[601834]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1125563]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1125567 'move' coerce_tmp[1125563](1125565 'deref' call_tmp[601829]))
    (601837 'move' call_tmp[601834](36881 call chpl_buildLocaleID[209470] coerce_tmp[1125563] c_sublocid_any[89878]))
    const-val call_tmp[601839]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (601842 'move' call_tmp[601839](36882 'chpl_on_locale_num' call_tmp[601834]))
    (36949 'move' tmp[36947] call_tmp[601839])
    val isdirect[2147312]:bool[10] "temp"
    (2147317 'move' isdirect[2147312](2147314 call chpl_doDirectExecuteOn[187469] tmp[36947]))
    if isdirect[2147312]
    {
      (2147321 call on_fn[933883] this[36845] result[36868])
    }
    {
      val _args_foron_fn[2147339]:_class_localson_fn[2147329] "temp"
      (2147343 'move' _args_foron_fn[2147339](2147341 'stack allocate class' _class_localson_fn[2147329]))
      (2147345 '.=' _args_foron_fn[2147339] _0_tmp[2147332] tmp[36947])
      ref tmp[2147349]:string[26] "temp"
      (2147353 'move' tmp[2147349](2147351 'set reference' this[36845]))
      (2147355 '.=' _args_foron_fn[2147339] _1_this[2147334] tmp[2147349])
      ref tmp[2147359]:bool[10] "temp"
      (2147363 'move' tmp[2147359](2147361 'set reference' result[36868]))
      (2147365 '.=' _args_foron_fn[2147339] _2_result[2147336] tmp[2147359])
      val _args_vforon_fn[2147369]:c_void_ptr[149] "temp"
      (2147373 'move' _args_vforon_fn[2147369](2147371 'cast_to_void_star' _args_foron_fn[2147339]))
      val _args_sizeon_fn[2147375]:int(64)[13] "temp"
      (2147379 'move' _args_sizeon_fn[2147375](2147377 'sizeof_bundle' _class_localson_fn[2147329]))
      on(2147419 call wrapon_fn[2147381] tmp[36947] _args_vforon_fn[2147369] _args_sizeon_fn[2147375] _args_foron_fn[2147339])
    }
    {
    }
    (1125593 'move' ret[504489] result[36868])
    gotoReturn _end_isSpace[504487] _end_isSpace[504487]
    label _end_isSpace[504487]
    (504491 return ret[504489])
  }
  function =[38168](ref arg lhs[38165]:_ref(byteIndex)[948820], const in arg rhs[38171]:int(64)[13]) : void[4] "assignop" "resolved" "no return value for void"
  {
    ref call_tmp[602413]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
    (602416 'move' call_tmp[602413](38175 call _bindex[757803] lhs[38165]))
    const-val call_tmp[602418]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (602421 'move' call_tmp[602418] rhs[38171])
    (38182 call =[435370] call_tmp[602413] call_tmp[602418])
    (504649 return _void[55])
  }
  function =[38194](ref arg lhs[38191]:_ref(byteIndex)[948820], const  ref arg rhs[38197]:_ref(byteIndex)[948820]) : void[4] "assignop" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (2173723 '=' lhs[38191] rhs[38197])
    (2173724 return _void[55])
  }
  function =[38272](ref arg lhs[38269]:_ref(string)[938000], const  ref arg rhs[38275]:string[26]) : void[4] "assignop" "resolved" "fn synchronization free" "no return value for void"
  {
    (38282 call doAssign[1019229] lhs[38269] rhs[38275])
    (504657 return _void[55])
  }
  function +[38345](const  ref arg s0[38342]:string[26], const  ref arg s1[38348]:string[26], ref arg _retArg[1863880]:_ref(string)[938000]) : void[4] "fn returns via _retArg" "resolved" "fn synchronization free"
  {
    const-val ret[504663]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[602483]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1865776]:string[26] "temp"
    (38355 call doConcat[980924] s0[38342] s1[38348] ret_tmp[1865776])
    (1865779 'move' call_tmp[602483] ret_tmp[1865776])
    (504668 'move' ret[504663] call_tmp[602483])
    (1863882 '=' _retArg[1863880] ret[504663])
    (1863884 return _void[55])
  }
  function +=[38800](ref arg lhs[38797]:_ref(string)[938000], const  ref arg rhs[38803]:_ref(string)[938000]) : void[4] "assignop" "resolved" "no return value for void"
  {
    val ret[504813]:void[4] "dead after last mention" "RVV" "temp"
    (38811 call doAppend[979131] lhs[38797] rhs[38803])
    (504815 return ret[504813])
  }
  function ==[38823](const  ref arg a[38820]:string[26], const  ref arg b[38826]:string[26]) : bool[10] "no doc" "resolved" "fn synchronization free"
  {
    val ret[504819]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[602698]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (602701 'move' call_tmp[602698](38834 call doEq[1206277] a[38820] b[38826]))
    (1208038 'move' ret[504819] call_tmp[602698])
    (504821 return ret[504819])
  }
  function !=[38847](const  ref arg a[38844]:string[26], const  ref arg b[38850]:string[26]) : bool[10] "inline" "no doc" "resolved"
  {
    val ret[504829]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[602703]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (602706 'move' call_tmp[602703](38858 call doEq[1206277] a[38844] b[38850]))
    const-val call_tmp[602708]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (602711 'move' call_tmp[602708](38859 call ![7494] call_tmp[602703]))
    (1800223 'move' ret[504829] call_tmp[602708])
    (504831 return ret[504829])
  }
  function <[38873](const  ref arg a[38870]:string[26], const  ref arg b[38876]:string[26]) : bool[10] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val ret[504839]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[602713]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (602716 'move' call_tmp[602713](38884 call doLessThan[1799843] a[38870] b[38876]))
    (1800005 'move' ret[504839] call_tmp[602713])
    (504841 return ret[504839])
  }
  function >[38897](const  ref arg a[38894]:string[26], const  ref arg b[38900]:string[26]) : bool[10] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val ret[504849]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[602718]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (602721 'move' call_tmp[602718](38908 call doGreaterThan[1800015] a[38894] b[38900]))
    (1800177 'move' ret[504849] call_tmp[602718])
    (504851 return ret[504849])
  }
  val wint_t[38987]:int(32)[95] "dead at end of block" "extern" "insert auto destroy" "no doc" "type variable"
  function codepoint_isWhitespace[39156](const in arg c[39153]:int(32)[95]) : bool[10] "inline" "private" "resolved" "fn synchronization free"
  {
    val ret[504949]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[602788]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (602791 'move' call_tmp[602788](39175 call iswspace[39165] c[39153]))
    const-val call_tmp[602793]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1125578]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1125584 'move' coerce_tmp[1125578](1125580 'cast' int(32)[95] 0))
    (602796 'move' call_tmp[602793](39177 call !=[436033] call_tmp[602788] coerce_tmp[1125578]))
    (1125588 'move' ret[504949] call_tmp[602793])
    (504951 return ret[504949])
  }
  function _cast[39395](const in arg cs[39398]:c_string[19]) : c_ptr(uint(8))[937484] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1838582]:c_ptr(uint(8))[937484] "temp"
    val ret[505022]:c_ptr(uint(8))[937484] "dead after last mention" "RVV" "temp"
    val call_tmp[602898]:c_ptr(uint(8))[937484] "dead after last mention" "expr temp" "maybe param" "temp"
    (602901 'move' call_tmp[602898](39405 'cast' c_ptr(uint(8))[937484] cs[39398]))
    (505027 'move' ret[505022] call_tmp[602898])
    (505024 return ret[505022])
  }
  function _cast[39465](const  ref arg cpi[39468]:byteIndex[28173]) : int(64)[13] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1838584]:int(64)[13] "temp"
    val ret[505042]:int(64)[13] "dead after last mention" "RVV" "temp"
    ref call_tmp[602925]:_ref(int(64))[936633] "dead after last mention" "maybe param" "reference to a const" "temp"
    (602928 'move' call_tmp[602925](39472 call _bindex[757803] cpi[39468]))
    (505047 'move' ret[505042](505046 'deref' call_tmp[602925]))
    (505044 return ret[505042])
  }
  function _cast[39486](const in arg i[39489]:int(64)[13], ref arg _retArg[1863958]:_ref(byteIndex)[948820]) : void[4] "fn returns via _retArg" "inline" "no doc" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1838586]:byteIndex[28173] "temp"
    const-val ret[505051]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[39493]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (1029792 call init[28100] cpi[39493])
    ref call_tmp[602932]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
    (602935 'move' call_tmp[602932](39499 call _bindex[757803] cpi[39493]))
    (39503 call =[435370] call_tmp[602932] i[39489])
    (505056 'move' ret[505051] cpi[39493])
    gotoReturn _end__cast[505049] _end__cast[505049]
    label _end__cast[505049]
    (1863960 '=' _retArg[1863958] ret[505051])
    (1863962 return _void[55])
  }
  function _cast[39517](const  ref arg cpi[39520]:codepointIndex[28277]) : int(64)[13] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1838588]:int(64)[13] "temp"
    val ret[505062]:int(64)[13] "dead after last mention" "RVV" "temp"
    ref call_tmp[602939]:_ref(int(64))[936633] "dead after last mention" "maybe param" "reference to a const" "temp"
    (602942 'move' call_tmp[602939](39524 call _cpindex[757875] cpi[39520]))
    (505067 'move' ret[505062](505066 'deref' call_tmp[602939]))
    (505064 return ret[505062])
  }
  function _cast[39538](const in arg i[39541]:int(64)[13], ref arg _retArg[1863970]:_ref(codepointIndex)[948830]) : void[4] "fn returns via _retArg" "inline" "no doc" "resolved"
  {
    val _formal_type_tmp_[1838590]:codepointIndex[28277] "temp"
    const-val ret[505071]:codepointIndex[28277] "dead after last mention" "RVV" "temp"
    val cpi[39545]:codepointIndex[28277] "dead at end of block" "insert auto destroy"
    (1157097 call init[28204] cpi[39545])
    ref call_tmp[602946]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
    (602949 'move' call_tmp[602946](39551 call _cpindex[757875] cpi[39545]))
    (39555 call =[435370] call_tmp[602946] i[39541])
    (505076 'move' ret[505071] cpi[39545])
    gotoReturn _end__cast[505069] _end__cast[505069]
    label _end__cast[505069]
    (1863972 '=' _retArg[1863970] ret[505071])
    (1863974 return _void[55])
  }
  function iswspace[39165](const in arg wc[39162]:int(32)[95]) : int(32)[95] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[504943]:int(32)[95] "RVV" "temp"
    (504945 return ret[504943])
  }
  function on_fn[933847](const  ref arg this[1841158]:_ref(string)[938000]) : void[4] "on" "resolved" "fn synchronization free"
  {
    {
      ref call_tmp[598463]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "maybe param" "temp"
      (598466 'move' call_tmp[598463](30859 call buff[758025] this[1841158]))
      val coerce_tmp[938220]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (938224 'move' coerce_tmp[938220](938222 'deref' call_tmp[598463]))
      const-val coerce_tmp[938226]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (938232 'move' coerce_tmp[938226](938228 'cast' c_void_ptr[149] coerce_tmp[938220]))
      (30863 call chpl_here_free[188127] coerce_tmp[938226])
    }
    (933854 return _void[55])
  }
  function on_fn[933883](const  ref arg this[1841160]:_ref(string)[938000], ref arg result[1841162]:_ref(bool)[937260]) : void[4] "on" "resolved" "fn synchronization free"
  {
    {
      {
        val _indexOfInterest[36910]:int(32)[95] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[36911]:_ic_codepoints__ref_string[1122910] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[601846]:_ir_codepoints__ref_string[1122916] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1863200]:_ir_codepoints__ref_string[1122916] "temp"
        (36889 call codepoints[33666] this[1841160] ret_tmp[1863200])
        (1863203 'move' call_tmp[601846] ret_tmp[1863200])
        (36920 'move' _iterator[36911](36918 call _getIterator[1122925] call_tmp[601846]))
        {
          val ret[1940336]:_ir_codepoints__ref_string[1122916] "dead at end of block" "RVV" "temp"
          const-val call_tmp[1940338]:string[26] "dead at end of block" "maybe param" "temp"
          const-val ret_tmp[1940340]:string[26] "temp"
          ref this[1940910]:_ref(string)[938000] "temp"
          (1940915 'move' this[1940910](1940912 '.v' _iterator[36911] F0_this[2048302]))
          (1940343 call localize[32889] this[1940910] ret_tmp[1940340])
          (1940346 'move' call_tmp[1940338] ret_tmp[1940340])
          val localThis[1940349]:string[26] "dead at end of block" "insert auto destroy"
          (1940351 'move' localThis[1940349] call_tmp[1940338])
          const-val call_tmp[1940354]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          ref this[1940917]:_ref(string)[938000] "temp"
          (1940922 'move' this[1940917](1940919 '.v' _iterator[36911] F0_this[2048302]))
          (1940356 'move' call_tmp[1940354](1940359 call isASCII[31049] this[1940917]))
          const-val call_tmp[1940361]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1940363 'move' call_tmp[1940361] call_tmp[1940354])
          if call_tmp[1940354]
          {
            val _indexOfInterest[1940368]:uint(8)[100] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1940370]:_ic_chpl_bytes__ref_string[1108317] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[1940372]:_ir_chpl_bytes__ref_string[1108323] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[1940374]:_ir_chpl_bytes__ref_string[1108323] "temp"
            ref this[1940924]:_ref(string)[938000] "temp"
            (1940929 'move' this[1940924](1940926 '.v' _iterator[36911] F0_this[2048302]))
            (1940377 call chpl_bytes[33577] this[1940924] ret_tmp[1940374])
            (1940380 'move' call_tmp[1940372] ret_tmp[1940374])
            (1940383 'move' _iterator[1940370](1940386 call _getIterator[1108332] call_tmp[1940372]))
            {
              val ret[1940389]:_ir_chpl_bytes__ref_string[1108323] "dead at end of block" "RVV" "temp"
              const-val call_tmp[1940391]:string[26] "dead at end of block" "maybe param" "temp"
              const-val ret_tmp[1940393]:string[26] "temp"
              ref this[1940395]:_ref(string)[938000] "temp"
              (1940397 'move' this[1940395](1940399 '.v' _iterator[1940370] F0_this[2046128]))
              (1940403 call localize[32889] this[1940395] ret_tmp[1940393])
              (1940406 'move' call_tmp[1940391] ret_tmp[1940393])
              val localThis[1940409]:string[26] "dead at end of block" "insert auto destroy"
              (1940411 'move' localThis[1940409] call_tmp[1940391])
              val _indexOfInterest[1940414]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[1940416]:_ic_chpl_direct_counted_range_iter[1103851] "dead at end of block" "expr temp" "temp"
              ref call_tmp[1940418]:_ref(int(64))[936633] "dead at end of block" "maybe param" "temp"
              (1940420 'move' call_tmp[1940418](1940423 call buffLen[757947] localThis[1940409]))
              const-val call_tmp[1940425]:_ir_chpl_direct_counted_range_iter[1103857] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1940427]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1940429 'move' coerce_tmp[1940427](1940431 'deref' call_tmp[1940418]))
              const-val ret_tmp[1940433]:_ir_chpl_direct_counted_range_iter[1103857] "temp"
              (1940436 call chpl_direct_counted_range_iter[458039] 0 coerce_tmp[1940427] ret_tmp[1940433])
              (1940440 'move' call_tmp[1940425] ret_tmp[1940433])
              (1940443 'move' _iterator[1940416](1940446 call _getIterator[1103866] call_tmp[1940425]))
              {
                val ret[1940449]:_ir_chpl_direct_counted_range_iter[1103857] "dead after last mention" "RVV" "temp"
                val _indexOfInterest[1940451]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1940453]:_ic_chpl_direct_counted_range_iter_helper[1103601] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[1940455]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[1940457]:_ir_chpl_direct_counted_range_iter_helper[1103607] "temp"
                const-val low[1940459]:int(64)[13] "temp"
                (1940461 'move' low[1940459](1940463 '.v' _iterator[1940416] F0_low[2058106]))
                const-val count[1940466]:int(64)[13] "temp"
                (1940468 'move' count[1940466](1940470 '.v' _iterator[1940416] F1_count[2058110]))
                (1940474 call chpl_direct_counted_range_iter_helper[1102159] low[1940459] count[1940466] ret_tmp[1940457])
                (1940478 'move' call_tmp[1940455] ret_tmp[1940457])
                (1940481 'move' _iterator[1940453](1940484 call _getIterator[1103616] call_tmp[1940455]))
                {
                  val ret[2006622]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead after last mention" "RVV" "temp"
                  val call_tmp[2006624]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val tmp[2006626]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  const-val tmp[2006628]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  const-val call_tmp[2006630]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val count[2007106]:int(64)[13] "temp"
                  (2007111 'move' count[2007106](2007108 '.v' _iterator[1940453] F1_count[2064268]))
                  (2006632 'move' call_tmp[2006630](2006635 call <[948459] count[2007106]))
                  (2006637 'move' tmp[2006628] call_tmp[2006630])
                  (2006640 'move' tmp[2006626] call_tmp[2006630])
                  const-val call_tmp[2006643]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2006645 'move' call_tmp[2006643] call_tmp[2006630])
                  if call_tmp[2006630]
                  {
                    (2006651 call boundsCheckHalt[210187] "With a negative count, the range must have a last index.")
                  }
                  const-val tmp[2006654]:2*int(64)[1040117] "dead at end of block" "const" "insert auto destroy" "temp"
                  val tmp[2006656]:2*int(64)[1040117] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                  const-val tmp[2006658]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[2006660]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val count[2007113]:int(64)[13] "temp"
                  (2007118 'move' count[2007113](2007115 '.v' _iterator[1940453] F1_count[2064268]))
                  (2006662 'move' call_tmp[2006660](2006665 call ==[435671] count[2007113] 0))
                  (2006668 'move' tmp[2006658] call_tmp[2006660])
                  if call_tmp[2006660]
                  {
                    const-val tmp[2006673]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                    val call_tmp[2006675]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                    const-val call_tmp[2006677]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val low[2007120]:int(64)[13] "temp"
                    (2007125 'move' low[2007120](2007122 '.v' _iterator[1940453] F0_low[2064264]))
                    (2006679 'move' call_tmp[2006677](2006682 call _cast[956095] low[2007120]))
                    const-val call_tmp[2006684]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[2006686]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (2006688 'move' coerce_tmp[2006686](2006690 'cast' uint(64)[115] 1))
                    (2006693 'move' call_tmp[2006684](2006696 call -[962254] call_tmp[2006677]))
                    const-val call_tmp[2006698]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                    (2006700 'move' call_tmp[2006698](2006703 call _cast[953604] call_tmp[2006684]))
                    const-val ret_tmp[2006705]:2*int(64)[1040117] "temp"
                    const-val low[2007127]:int(64)[13] "temp"
                    (2007132 'move' low[2007127](2007129 '.v' _iterator[1940453] F0_low[2064264]))
                    (2006708 call _build_tuple[1040075] low[2007127] call_tmp[2006698] ret_tmp[2006705])
                    (2006712 'move' tmp[2006673] ret_tmp[2006705])
                    (2006715 'move' tmp[2006656] tmp[2006673])
                  }
                  {
                    const-val tmp[2006719]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                    val call_tmp[2006721]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    const-val call_tmp[2006723]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val count[2007134]:int(64)[13] "temp"
                    (2007139 'move' count[2007134](2007136 '.v' _iterator[1940453] F1_count[2064268]))
                    (2006725 'move' call_tmp[2006723] count[2007134])
                    const-val call_tmp[2006728]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val count[2007141]:int(64)[13] "temp"
                    (2007146 'move' count[2007141](2007143 '.v' _iterator[1940453] F1_count[2064268]))
                    (2006730 'move' call_tmp[2006728](2006733 call -[962287] count[2007141]))
                    const-val call_tmp[2006735]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val low[2007148]:int(64)[13] "temp"
                    (2007153 'move' low[2007148](2007150 '.v' _iterator[1940453] F0_low[2064264]))
                    (2006737 'move' call_tmp[2006735](2006740 call +[439679] low[2007148] call_tmp[2006728]))
                    const-val ret_tmp[2006743]:2*int(64)[1040117] "temp"
                    const-val low[2007155]:int(64)[13] "temp"
                    (2007160 'move' low[2007155](2007157 '.v' _iterator[1940453] F0_low[2064264]))
                    (2006746 call _build_tuple[1040075] low[2007155] call_tmp[2006735] ret_tmp[2006743])
                    (2006750 'move' tmp[2006719] ret_tmp[2006743])
                    (2006753 'move' tmp[2006656] tmp[2006719])
                  }
                  (2006757 '=' tmp[2006654] tmp[2006656])
                  (2006760 'noop')
                  1
                  ref call_tmp[2006762]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
                  (2006764 'move' call_tmp[2006762](2006766 '.' tmp[2006654] x0[1040113]))
                  const-val start[2006769]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                  const-val coerce_tmp[2006771]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                  (2006773 'move' coerce_tmp[2006771](2006775 'deref' call_tmp[2006762]))
                  (2006777 '=' start[2006769] coerce_tmp[2006771])
                  (2006780 'noop')
                  ref call_tmp[2006781]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
                  (2006783 'move' call_tmp[2006781](2006785 '.' tmp[2006654] x1[1040115]))
                  const-val end[2006788]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                  const-val coerce_tmp[2006790]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                  (2006792 'move' coerce_tmp[2006790](2006794 'deref' call_tmp[2006781]))
                  (2006796 '=' end[2006788] coerce_tmp[2006790])
                  (2006799 'noop')
                  val _indexOfInterest[2006800]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                  val _iterator[2006802]:_ic_chpl_direct_param_stride_range_iter[1103347] "dead at end of block" "expr temp" "temp"
                  const-val call_tmp[2006804]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val ret_tmp[2006806]:_ir_chpl_direct_param_stride_range_iter[1103353] "temp"
                  (2006809 call chpl_direct_param_stride_range_iter[1102585] coerce_tmp[2006771] coerce_tmp[2006790] ret_tmp[2006806])
                  (2006813 'move' call_tmp[2006804] ret_tmp[2006806])
                  (2006816 'move' _iterator[2006802](2006819 call _getIterator[1103362] call_tmp[2006804]))
                  {
                    val ret[2006822]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead after last mention" "RVV" "temp"
                    val call_tmp[2006824]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    (2006827 call chpl_range_check_stride[1102905])
                    val i[2006828]:int(64)[13] "dead at end of block" "insert auto destroy"
                    val call_tmp[2006830]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    (2006832 'move' i[2006828] 0)
                    val call_tmp[2006835]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    const-val default_arg_first[2006837]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                    const-val low[2006839]:int(64)[13] "temp"
                    (2006841 'move' low[2006839](2006843 '.v' _iterator[2006802] F0_low[2065762]))
                    (2006846 'move' default_arg_first[2006837](2006849 call chpl_checkIfRangeIterWillOverflow_default_first[1103259] low[2006839]))
                    const-val default_arg_last[2006851]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                    const-val high[2006853]:int(64)[13] "temp"
                    (2006855 'move' high[2006853](2006857 '.v' _iterator[2006802] F1_high[2065766]))
                    (2006860 'move' default_arg_last[2006851](2006863 call chpl_checkIfRangeIterWillOverflow_default_last[1103287] high[2006853]))
                    const-val _return_tmp_[2006865]:bool[10] "dead after last mention" "temp"
                    const-val low[2006867]:int(64)[13] "temp"
                    (2006869 'move' low[2006867](2006871 '.v' _iterator[2006802] F0_low[2065762]))
                    const-val high[2006874]:int(64)[13] "temp"
                    (2006876 'move' high[2006874](2006878 '.v' _iterator[2006802] F1_high[2065766]))
                    (2006881 'move' _return_tmp_[2006865](2006884 call chpl_checkIfRangeIterWillOverflow[1096137] low[2006867] high[2006874] 1 default_arg_first[2006837] default_arg_last[2006851] 1))
                    CForLoop[2006891]
                    {
                      const-val yret[2006920]:int(64)[13] "dead after last mention" "YVV" "temp"
                      (2006922 'move' yret[2006920] i[2006828])
                      const-val _yieldedIndex[2006925]:int(64)[13] "temp"
                      (2006927 'move' _yieldedIndex[2006925] i[2006828])
                      {
                        const-val i[2006931]:int(64)[13] "const" "index var" "insert auto destroy"
                        (2006933 'move' i[2006931] _yieldedIndex[2006925])
                        const-val yret[2006936]:int(64)[13] "dead after last mention" "YVV" "temp"
                        (2006938 'move' yret[2006936] _yieldedIndex[2006925])
                        const-val _yieldedIndex[2006966]:int(64)[13] "temp"
                        (2007104 'move' _yieldedIndex[2006966] _yieldedIndex[2006925])
                        {
                          const-val i[2006968]:int(64)[13] "const" "index var" "insert auto destroy"
                          (2006970 'move' i[2006968] _yieldedIndex[2006966])
                          const-val yret[2006973]:int(64)[13] "dead after last mention" "YVV" "temp"
                          (2006975 'move' yret[2006973] _yieldedIndex[2006966])
                          const-val _yieldedIndex[2006978]:int(64)[13] "temp"
                          (2006980 'move' _yieldedIndex[2006978] _yieldedIndex[2006966])
                          {
                            const-val i[2006984]:int(64)[13] "const" "index var" "insert auto destroy"
                            (2006986 'move' i[2006984] _yieldedIndex[2006978])
                            const-val yret[2006989]:uint(8)[100] "dead after last mention" "YVV" "temp"
                            ref call_tmp[2006991]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
                            ref _this_tmp_[2006993]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "temp"
                            (2006995 'move' _this_tmp_[2006993](2006998 call buff[758025] localThis[1940409]))
                            val coerce_tmp[2007000]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (2007002 'move' coerce_tmp[2007000](2007004 'deref' _this_tmp_[2006993]))
                            (2007006 'move' call_tmp[2006991](2007009 call this[954152] coerce_tmp[2007000] _yieldedIndex[2006978]))
                            const-val coerce_tmp[2007012]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                            (2007014 'move' coerce_tmp[2007012](2007016 'deref' call_tmp[2006991]))
                            (2007018 '=' yret[2006989] coerce_tmp[2007012])
                            (2007021 'noop')
                            const-val _yieldedIndex[2007022]:uint(8)[100] "temp"
                            (2007024 'move' _yieldedIndex[2007022] coerce_tmp[2007012])
                            {
                              const-val b[2007028]:uint(8)[100] "const" "index var" "insert auto destroy"
                              (2007030 'move' b[2007028] _yieldedIndex[2007022])
                              val yret[2007033]:int(32)[95] "dead after last mention" "YVV" "temp"
                              val call_tmp[2007035]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              const-val _yieldedIndex[2007037]:int(32)[95] "temp"
                              (2007039 'move' _yieldedIndex[2007037](2007041 'cast' int(32)[95] _yieldedIndex[2007022]))
                              {
                                const-val cp[2007045]:int(32)[95] "const" "index var" "insert auto destroy"
                                (2007047 'move' cp[2007045] _yieldedIndex[2007037])
                                {
                                  const-val call_tmp[2007051]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                  (2007053 'move' call_tmp[2007051](2007056 call codepoint_isWhitespace[39156] cp[2007045]))
                                  const-val call_tmp[2007058]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                  (2007060 'move' call_tmp[2007058](2007063 call ![7494] call_tmp[2007051]))
                                  const-val call_tmp[2007065]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                  (2007067 'move' call_tmp[2007065] call_tmp[2007058])
                                  if call_tmp[2007065]
                                  {
                                    (2007073 call =[435217] result[1841162] 0)
                                    (2007098 call _freeIterator[1103535] _iterator[2006802])
                                    (2007101 call chpl__autoDestroy[1635435] tmp[2006654])
                                    (2007077 call _freeIterator[1103785] _iterator[1940453])
                                    (2007080 call _freeIterator[1104035] _iterator[1940416])
                                    (2007083 call chpl__autoDestroy[1562275] localThis[1940409])
                                    (2007086 call _freeIterator[1109630] _iterator[1940370])
                                    (2007089 call chpl__autoDestroy[1562275] localThis[1940349])
                                    break _breakLabel[36916] _breakLabel[36916]
                                  }
                                }
                                label _continueLabel[2007094]
                              }
                            }
                          }
                        }
                      }
                      {
                        const-val low[2006893]:int(64)[13] "temp"
                        (2006895 'move' low[2006893](2006897 '.v' _iterator[2006802] F0_low[2065762]))
                        (2006900 '=' i[2006828] low[2006893])
                      }
                      {
                        const-val high[2006904]:int(64)[13] "temp"
                        (2006906 'move' high[2006904](2006908 '.v' _iterator[2006802] F1_high[2065766]))
                        (2006911 '<=' i[2006828] high[2006904])
                      }
                      {
                        val call_tmp[2006915]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                        (2006917 '+=' i[2006828] 1)
                      }
                    }
                    label _endchpl_direct_param_stride_range_iter[2006954]
                  }
                  (2006957 call _freeIterator[1103535] _iterator[2006802])
                  (2006960 call chpl__autoDestroy[1635435] tmp[2006654])
                  label _endchpl_direct_counted_range_iter_helper[2006962]
                }
                (1940586 call _freeIterator[1103785] _iterator[1940453])
                label _endchpl_direct_counted_range_iter[1940588]
              }
              (1940591 call _freeIterator[1104035] _iterator[1940416])
              (1940594 call chpl__autoDestroy[1562275] localThis[1940409])
              label _endchpl_bytes[1940596]
            }
            (1940599 call _freeIterator[1109630] _iterator[1940370])
          }
          {
            val i[1940602]:int(64)[13] "dead at end of block" "insert auto destroy"
            (1940604 'move' i[1940602] 0)
            val tmp[1940607]:bool[10] "dead after last mention" "temp"
            ref call_tmp[1940609]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
            (1940611 'move' call_tmp[1940609](1940614 call buffLen[757947] localThis[1940349]))
            const-val call_tmp[1940616]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[1940618]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1940620 'move' coerce_tmp[1940618](1940622 'deref' call_tmp[1940609]))
            (1940624 'move' call_tmp[1940616](1940627 call <[437495] 0 coerce_tmp[1940618]))
            (1940630 'move' tmp[1940607] call_tmp[1940616])
            WhileDo[1940633]
            {
              ref call_tmp[1940635]:_ref(c_ptr(uint(8)))[937493] "dead at end of block" "maybe param" "temp"
              (1940637 'move' call_tmp[1940635](1940640 call buff[758025] localThis[1940349]))
              ref call_tmp[1940642]:_ref(int(64))[936633] "dead at end of block" "maybe param" "temp"
              (1940644 'move' call_tmp[1940642](1940647 call buffLen[757947] localThis[1940349]))
              const-val call_tmp[1940649]:(syserr,int(32),int(32))[964681] "dead at end of block" "maybe param" "temp"
              val coerce_tmp[1940651]:c_ptr(uint(8))[937484] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1940653 'move' coerce_tmp[1940651](1940655 'deref' call_tmp[1940635]))
              const-val coerce_tmp[1940657]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1940659 'move' coerce_tmp[1940657](1940661 'deref' call_tmp[1940642]))
              const-val ret_tmp[1940663]:(syserr,int(32),int(32))[964681] "temp"
              (1940666 call decodeHelp[174452] coerce_tmp[1940651] coerce_tmp[1940657] i[1940602] 1 ret_tmp[1940663])
              (1940672 'move' call_tmp[1940649] ret_tmp[1940663])
              const-val tmp[1940675]:(syserr,int(32),int(32))[964681] "dead at end of block" "const" "insert auto destroy" "temp"
              (1940677 'move' tmp[1940675] call_tmp[1940649])
              1
              ref call_tmp[1940681]:_ref(syserr)[948893] "dead at end of block" "maybe param" "reference to a const" "temp"
              (1940683 'move' call_tmp[1940681](1940685 '.' tmp[1940675] x0[964675]))
              const-val decodeRet[1940688]:syserr[223605] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[1940690]:syserr[223605] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1940692 'move' coerce_tmp[1940690](1940694 'deref' call_tmp[1940681]))
              (1940696 'move' decodeRet[1940688](1940699 call chpl__initCopy[964546] coerce_tmp[1940690]))
              ref call_tmp[1940701]:_ref(int(32))[936687] "dead at end of block" "maybe param" "reference to a const" "temp"
              (1940703 'move' call_tmp[1940701](1940705 '.' tmp[1940675] x1[964677]))
              const-val cp[1940708]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[1940710]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1940712 'move' coerce_tmp[1940710](1940714 'deref' call_tmp[1940701]))
              (1940716 'move' cp[1940708](1940719 call chpl__initCopy[964818] coerce_tmp[1940710]))
              ref call_tmp[1940721]:_ref(int(32))[936687] "dead at end of block" "maybe param" "reference to a const" "temp"
              (1940723 'move' call_tmp[1940721](1940725 '.' tmp[1940675] x2[964679]))
              const-val nBytes[1940728]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[1940730]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1940732 'move' coerce_tmp[1940730](1940734 'deref' call_tmp[1940721]))
              (1940736 'move' nBytes[1940728](1940739 call chpl__initCopy[964818] coerce_tmp[1940730]))
              const-val yret[1940741]:int(32)[95] "dead after last mention" "YVV" "temp"
              val call_tmp[1940743]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (1940745 'move' yret[1940741] cp[1940708])
              const-val _yieldedIndex[1940862]:int(32)[95] "temp"
              (1940908 'move' _yieldedIndex[1940862] cp[1940708])
              {
                const-val cp[1940864]:int(32)[95] "const" "index var" "insert auto destroy"
                (1940866 'move' cp[1940864] _yieldedIndex[1940862])
                {
                  const-val call_tmp[1940870]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1940872 'move' call_tmp[1940870](1940875 call codepoint_isWhitespace[39156] cp[1940864]))
                  const-val call_tmp[1940877]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1940879 'move' call_tmp[1940877](1940882 call ![7494] call_tmp[1940870]))
                  const-val call_tmp[1940884]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1940886 'move' call_tmp[1940884] call_tmp[1940877])
                  if call_tmp[1940884]
                  {
                    (1940892 call =[435217] result[1841162] 0)
                    (1940902 call chpl__autoDestroy[1566178] tmp[1940675])
                    (1940905 call chpl__autoDestroy[1562275] localThis[1940349])
                    break _breakLabel[36916] _breakLabel[36916]
                  }
                }
                label _continueLabel[1940898]
              }
              const-val coerce_tmp[1940761]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1940763 'move' coerce_tmp[1940761](1940765 'cast' int(64)[13] nBytes[1940728]))
              (1940769 call +=[451358] i[1940602] coerce_tmp[1940761])
              (1940773 call chpl__autoDestroy[1566178] tmp[1940675])
              ref call_tmp[1940775]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
              (1940777 'move' call_tmp[1940775](1940780 call buffLen[757947] localThis[1940349]))
              const-val call_tmp[1940782]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1940784]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1940786 'move' coerce_tmp[1940784](1940788 'deref' call_tmp[1940775]))
              (1940790 'move' call_tmp[1940782](1940793 call <[437495] i[1940602] coerce_tmp[1940784]))
              (1940796 'move' tmp[1940607] call_tmp[1940782])
              tmp[1940607]
            }
          }
          (1940801 call chpl__autoDestroy[1562275] localThis[1940349])
          label _endcodepoints[1940803]
        }
        label _breakLabel[36916]
        (1877395 call _freeIterator[1123197] _iterator[36911])
      }
    }
    (933890 return _void[55])
  }
  function chpl_enc_validate_buf[986798](const in arg buf[986800]:c_ptr(uint(8))[937484], const in arg len[986802]:int(64)[13], ref arg numCodepoints[986804]:_ref(int(64))[936633]) : int(32)[95] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "resolved" "no return value for void"
  {
    val ret[986808]:int(32)[95] "RVV" "temp"
    (986820 return ret[986808])
  }
  function on_fn[1106243](const in arg needle[1841418]:__serializeHelper[28089], const  ref arg this[1841420]:_ref(string)[938000], const in arg region[1841422]:range(byteIndex,bounded,false)[1025853], ref arg ret[1841424]:_ref(int(64))[936633]) : void[4] "on" "resolved"
  {
    val needle[2145770]:string[26] "temp"
    ref needle[2145771]:string[26] "temp"
    ref tmp[2145777]:string[26] "temp"
    (2145781 'move' tmp[2145777](2145779 'set reference' needle[2145770]))
    (2145774 call chpl__deserialize[1826353] needle[1841418] tmp[2145777])
    (2145786 'move' needle[2145771](2145784 'set reference' needle[2145770]))
    {
      val localRet[1106256]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1106258 'move' localRet[1106256] -2)
      ref call_tmp[1106263]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1106265 'move' call_tmp[1106263](1106268 call buffLen[757947] needle[2145771]))
      const-val nLen[1106271]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1107424]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1107428 'move' coerce_tmp[1107424](1107426 'deref' call_tmp[1106263]))
      (1879114 '=' nLen[1106271] coerce_tmp[1107424])
      (1106273 'noop')
      const-val call_tmp[1106277]:(range(int(64),bounded,false),int(64))[1084985] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1866312]:(range(int(64),bounded,false),int(64))[1084985] "temp"
      (1106282 call getView[1031215] this[1841420] region[1841422] ret_tmp[1866312])
      (1866315 'move' call_tmp[1106277] ret_tmp[1866312])
      const-val tmp[1106285]:(range(int(64),bounded,false),int(64))[1084985] "dead at end of block" "const" "insert auto destroy" "temp"
      (1106287 'move' tmp[1106285] call_tmp[1106277])
      1
      ref call_tmp[1106295]:_ref(range(int(64),bounded,false))[1026919] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1106297 'move' call_tmp[1106295](1107439 '.' tmp[1106285] x0[1084981]))
      const-val view[1106302]:range(int(64),bounded,false)[1026875] "dead at end of block" "const" "insert auto destroy"
      (1106304 'move' view[1106302](1107442 'deref' call_tmp[1106295]))
      const-val call_tmp[1106308]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (1106310 'move' call_tmp[1106308](1106313 call size[1035850] view[1106302]))
      const-val thisLen[1106316]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      (1106318 'move' thisLen[1106316] call_tmp[1106308])
      {
        const-val call_tmp[1106761]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1106763 'move' call_tmp[1106761](1106766 call ==[435671] nLen[1106271] 0))
        const-val call_tmp[1106769]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1106771 'move' call_tmp[1106769] call_tmp[1106761])
        if call_tmp[1106769]
        {
          {
            (1106795 call =[435370] localRet[1106256] -1)
          }
        }
      }
      const-val call_tmp[1106850]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1106852 'move' call_tmp[1106850](1106855 call >[437715] nLen[1106271] thisLen[1106316]))
      const-val call_tmp[1106858]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1106860 'move' call_tmp[1106858] call_tmp[1106850])
      if call_tmp[1106858]
      {
        (1106875 call =[435370] localRet[1106256] -1)
      }
      const-val call_tmp[1106888]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1106890 'move' call_tmp[1106888](1106893 call ==[435671] localRet[1106256] -2))
      const-val call_tmp[1106896]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1106898 'move' call_tmp[1106896] call_tmp[1106888])
      if call_tmp[1106896]
      {
        (1106913 call =[435370] localRet[1106256] -1)
        const-val call_tmp[1106918]:string[26] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1863058]:string[26] "temp"
        (1106926 call localize[32889] needle[2145771] ret_tmp[1863058])
        (1863061 'move' call_tmp[1106918] ret_tmp[1863058])
        const localNeedle[1106927]:string[26] "dead at end of block" "const" "insert auto destroy"
        (1106929 'move' localNeedle[1106927] call_tmp[1106918])
        const-val call_tmp[1106934]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1106936 'move' call_tmp[1106934](1106939 call -[440459] thisLen[1106316] nLen[1106271]))
        const-val call_tmp[1106942]:int(64)[13] "dead at end of block" "maybe param" "temp"
        (1106944 'move' call_tmp[1106942](1106947 call +[949727] call_tmp[1106934]))
        const-val numPossible[1106950]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        (1106952 'move' numPossible[1106950] call_tmp[1106942])
        const-val searchSpace[1106956]:range(int(64),bounded,false)[1026875] "dead at end of block" "const" "insert auto destroy"
        const-val tmp[1106958]:range(int(64),bounded,false)[1026875] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val tmp[1106969]:range(int(64),bounded,false)[1026875] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1106971]:range(int(64),boundedLow,false)[1087626] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1867180]:range(int(64),boundedLow,false)[1087626] "temp"
        (1106976 call chpl_build_low_bounded_range[1087019] 0 ret_tmp[1867180])
        (1867183 'move' call_tmp[1106971] ret_tmp[1867180])
        const-val ret_tmp[1867300]:range(int(64),bounded,false)[1026875] "temp"
        (1106981 call #[1087986] call_tmp[1106971] numPossible[1106950] ret_tmp[1867300])
        (1867303 'move' tmp[1106969] ret_tmp[1867300])
        (1106984 'move' tmp[1106958] tmp[1106969])
        (1107026 'move' searchSpace[1106956] tmp[1106958])
        {
          val _indexOfInterest[1107035]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1107037]:_ic_these_range_int64_t_bounded_F[1096764] "dead at end of block" "expr temp" "temp"
          (1107039 'move' _iterator[1107037](1107042 call _getIterator[1095381] searchSpace[1106956]))
          {
            val ret[1948728]:_ir_these_range_int64_t_bounded_F[1096770] "dead after last mention" "RVV" "temp"
            const-val _return_tmp_[1948730]:bool[10] "dead after last mention" "temp"
            const-val this[1949031]:range(int(64),bounded,false)[1026875] "temp"
            (1949036 'move' this[1949031](1949033 '.v' _iterator[1107037] F0_this[2063641]))
            (1948732 'move' _return_tmp_[1948730](1948735 call checkIfIterWillOverflow[1095875] this[1949031] 1))
            val i[1948738]:int(64)[13] "dead at end of block" "insert auto destroy"
            val call_tmp[1948740]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (1948742 'move' i[1948738] 0)
            ref call_tmp[1948745]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[1949038]:range(int(64),bounded,false)[1026875] "temp"
            (1949043 'move' this[1949038](1949040 '.v' _iterator[1107037] F0_this[2063641]))
            (1948747 'move' call_tmp[1948745](1948750 call _low[1028513] this[1949038]))
            const-val start[1948752]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1948754]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1948756 'move' coerce_tmp[1948754](1948758 'deref' call_tmp[1948745]))
            (1948760 '=' start[1948752] coerce_tmp[1948754])
            (1948763 'noop')
            ref call_tmp[1948764]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[1949045]:range(int(64),bounded,false)[1026875] "temp"
            (1949050 'move' this[1949045](1949047 '.v' _iterator[1107037] F0_this[2063641]))
            (1948766 'move' call_tmp[1948764](1948769 call _high[1028721] this[1949045]))
            const end[1948771]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1948773]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1948775 'move' coerce_tmp[1948773](1948777 'deref' call_tmp[1948764]))
            (1948779 '=' end[1948771] coerce_tmp[1948773])
            (1948782 'noop')
            CForLoop[1948783] hazard
            {
              const-val yret[1948798]:int(64)[13] "dead after last mention" "YVV" "temp"
              const-val call_tmp[1948800]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val this[1949052]:range(int(64),bounded,false)[1026875] "temp"
              (1949057 'move' this[1949052](1949054 '.v' _iterator[1107037] F0_this[2063641]))
              (1948802 'move' call_tmp[1948800](1948805 call chpl_intToIdx[1028541] this[1949052] i[1948738]))
              (1948808 'move' yret[1948798] call_tmp[1948800])
              const-val _yieldedIndex[1948822]:int(64)[13] "temp"
              (1949029 'move' _yieldedIndex[1948822] call_tmp[1948800])
              {
                const-val i[1948824]:int(64)[13] "const" "index var" "insert auto destroy"
                (1948826 'move' i[1948824] _yieldedIndex[1948822])
                {
                  {
                    val _indexOfInterest[1948831]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[1948833]:_ic_chpl_direct_counted_range_iter[1103851] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[1948835]:_ir_chpl_direct_counted_range_iter[1103857] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[1948837]:_ir_chpl_direct_counted_range_iter[1103857] "temp"
                    (1948840 call chpl_direct_counted_range_iter[458039] 0 nLen[1106271] ret_tmp[1948837])
                    (1948844 'move' call_tmp[1948835] ret_tmp[1948837])
                    (1948847 'move' _iterator[1948833](1948850 call _getIterator[1103866] call_tmp[1948835]))
                    {
                      val ret[2015603]:_ir_chpl_direct_counted_range_iter[1103857] "dead after last mention" "RVV" "temp"
                      val _indexOfInterest[2015605]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[2015607]:_ic_chpl_direct_counted_range_iter_helper[1103601] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[2015609]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[2015611]:_ir_chpl_direct_counted_range_iter_helper[1103607] "temp"
                      const-val low[2016203]:int(64)[13] "temp"
                      (2016208 'move' low[2016203](2016205 '.v' _iterator[1948833] F0_low[2058106]))
                      const-val count[2016210]:int(64)[13] "temp"
                      (2016215 'move' count[2016210](2016212 '.v' _iterator[1948833] F1_count[2058110]))
                      (2015614 call chpl_direct_counted_range_iter_helper[1102159] low[2016203] count[2016210] ret_tmp[2015611])
                      (2015618 'move' call_tmp[2015609] ret_tmp[2015611])
                      (2015621 'move' _iterator[2015607](2015624 call _getIterator[1103616] call_tmp[2015609]))
                      {
                        val ret[2015627]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead after last mention" "RVV" "temp"
                        val call_tmp[2015629]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                        const-val tmp[2015631]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val tmp[2015633]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                        const-val call_tmp[2015635]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[2015637]:int(64)[13] "temp"
                        (2015639 'move' count[2015637](2015641 '.v' _iterator[2015607] F1_count[2064268]))
                        (2015644 'move' call_tmp[2015635](2015647 call <[948459] count[2015637]))
                        (2015649 'move' tmp[2015633] call_tmp[2015635])
                        (2015652 'move' tmp[2015631] call_tmp[2015635])
                        const-val call_tmp[2015655]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (2015657 'move' call_tmp[2015655] call_tmp[2015635])
                        if call_tmp[2015635]
                        {
                          (2015663 call boundsCheckHalt[210187] "With a negative count, the range must have a last index.")
                        }
                        const-val tmp[2015666]:2*int(64)[1040117] "dead at end of block" "const" "insert auto destroy" "temp"
                        val tmp[2015668]:2*int(64)[1040117] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                        const-val tmp[2015670]:bool[10] "dead after last mention" "maybe param" "temp"
                        const-val call_tmp[2015672]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[2015674]:int(64)[13] "temp"
                        (2015676 'move' count[2015674](2015678 '.v' _iterator[2015607] F1_count[2064268]))
                        (2015681 'move' call_tmp[2015672](2015684 call ==[435671] count[2015674] 0))
                        (2015687 'move' tmp[2015670] call_tmp[2015672])
                        if call_tmp[2015672]
                        {
                          const-val tmp[2015692]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                          val call_tmp[2015694]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[2015696]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val low[2015698]:int(64)[13] "temp"
                          (2015700 'move' low[2015698](2015702 '.v' _iterator[2015607] F0_low[2064264]))
                          (2015705 'move' call_tmp[2015696](2015708 call _cast[956095] low[2015698]))
                          const-val call_tmp[2015710]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[2015712]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                          (2015714 'move' coerce_tmp[2015712](2015716 'cast' uint(64)[115] 1))
                          (2015719 'move' call_tmp[2015710](2015722 call -[962254] call_tmp[2015696]))
                          const-val call_tmp[2015724]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          (2015726 'move' call_tmp[2015724](2015729 call _cast[953604] call_tmp[2015710]))
                          const-val ret_tmp[2015731]:2*int(64)[1040117] "temp"
                          const-val low[2015733]:int(64)[13] "temp"
                          (2015735 'move' low[2015733](2015737 '.v' _iterator[2015607] F0_low[2064264]))
                          (2015741 call _build_tuple[1040075] low[2015733] call_tmp[2015724] ret_tmp[2015731])
                          (2015745 'move' tmp[2015692] ret_tmp[2015731])
                          (2015748 'move' tmp[2015668] tmp[2015692])
                        }
                        {
                          const-val tmp[2015752]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                          val call_tmp[2015754]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[2015756]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val count[2015758]:int(64)[13] "temp"
                          (2015760 'move' count[2015758](2015762 '.v' _iterator[2015607] F1_count[2064268]))
                          (2015765 'move' call_tmp[2015756] count[2015758])
                          const-val call_tmp[2015768]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val count[2015770]:int(64)[13] "temp"
                          (2015772 'move' count[2015770](2015774 '.v' _iterator[2015607] F1_count[2064268]))
                          (2015777 'move' call_tmp[2015768](2015780 call -[962287] count[2015770]))
                          const-val call_tmp[2015782]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val low[2015784]:int(64)[13] "temp"
                          (2015786 'move' low[2015784](2015788 '.v' _iterator[2015607] F0_low[2064264]))
                          (2015791 'move' call_tmp[2015782](2015794 call +[439679] low[2015784] call_tmp[2015768]))
                          const-val ret_tmp[2015797]:2*int(64)[1040117] "temp"
                          const-val low[2015799]:int(64)[13] "temp"
                          (2015801 'move' low[2015799](2015803 '.v' _iterator[2015607] F0_low[2064264]))
                          (2015807 call _build_tuple[1040075] low[2015799] call_tmp[2015782] ret_tmp[2015797])
                          (2015811 'move' tmp[2015752] ret_tmp[2015797])
                          (2015814 'move' tmp[2015668] tmp[2015752])
                        }
                        (2015818 '=' tmp[2015666] tmp[2015668])
                        (2015821 'noop')
                        1
                        ref call_tmp[2015823]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
                        (2015825 'move' call_tmp[2015823](2015827 '.' tmp[2015666] x0[1040113]))
                        const-val start[2015830]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                        const-val coerce_tmp[2015832]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                        (2015834 'move' coerce_tmp[2015832](2015836 'deref' call_tmp[2015823]))
                        (2015838 '=' start[2015830] coerce_tmp[2015832])
                        (2015841 'noop')
                        ref call_tmp[2015842]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
                        (2015844 'move' call_tmp[2015842](2015846 '.' tmp[2015666] x1[1040115]))
                        const-val end[2015849]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                        const-val coerce_tmp[2015851]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                        (2015853 'move' coerce_tmp[2015851](2015855 'deref' call_tmp[2015842]))
                        (2015857 '=' end[2015849] coerce_tmp[2015851])
                        (2015860 'noop')
                        val _indexOfInterest[2015861]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[2015863]:_ic_chpl_direct_param_stride_range_iter[1103347] "dead at end of block" "expr temp" "temp"
                        const-val call_tmp[2015865]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead at end of block" "expr temp" "maybe param" "temp"
                        const-val ret_tmp[2015867]:_ir_chpl_direct_param_stride_range_iter[1103353] "temp"
                        (2015870 call chpl_direct_param_stride_range_iter[1102585] coerce_tmp[2015832] coerce_tmp[2015851] ret_tmp[2015867])
                        (2015874 'move' call_tmp[2015865] ret_tmp[2015867])
                        (2015877 'move' _iterator[2015863](2015880 call _getIterator[1103362] call_tmp[2015865]))
                        {
                          val ret[2015883]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead after last mention" "RVV" "temp"
                          val call_tmp[2015885]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (2015888 call chpl_range_check_stride[1102905])
                          val i[2015889]:int(64)[13] "dead at end of block" "insert auto destroy"
                          val call_tmp[2015891]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (2015893 'move' i[2015889] 0)
                          val call_tmp[2015896]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val default_arg_first[2015898]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val low[2015900]:int(64)[13] "temp"
                          (2015902 'move' low[2015900](2015904 '.v' _iterator[2015863] F0_low[2065762]))
                          (2015907 'move' default_arg_first[2015898](2015910 call chpl_checkIfRangeIterWillOverflow_default_first[1103259] low[2015900]))
                          const-val default_arg_last[2015912]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val high[2015914]:int(64)[13] "temp"
                          (2015916 'move' high[2015914](2015918 '.v' _iterator[2015863] F1_high[2065766]))
                          (2015921 'move' default_arg_last[2015912](2015924 call chpl_checkIfRangeIterWillOverflow_default_last[1103287] high[2015914]))
                          const-val _return_tmp_[2015926]:bool[10] "dead after last mention" "temp"
                          const-val low[2015928]:int(64)[13] "temp"
                          (2015930 'move' low[2015928](2015932 '.v' _iterator[2015863] F0_low[2065762]))
                          const-val high[2015935]:int(64)[13] "temp"
                          (2015937 'move' high[2015935](2015939 '.v' _iterator[2015863] F1_high[2065766]))
                          (2015942 'move' _return_tmp_[2015926](2015945 call chpl_checkIfRangeIterWillOverflow[1096137] low[2015928] high[2015935] 1 default_arg_first[2015898] default_arg_last[2015912] 1))
                          CForLoop[2015952]
                          {
                            const-val yret[2015981]:int(64)[13] "dead after last mention" "YVV" "temp"
                            (2015983 'move' yret[2015981] i[2015889])
                            const-val _yieldedIndex[2015986]:int(64)[13] "temp"
                            (2015988 'move' _yieldedIndex[2015986] i[2015889])
                            {
                              const-val i[2015992]:int(64)[13] "const" "index var" "insert auto destroy"
                              (2015994 'move' i[2015992] _yieldedIndex[2015986])
                              const-val yret[2015997]:int(64)[13] "dead after last mention" "YVV" "temp"
                              (2015999 'move' yret[2015997] _yieldedIndex[2015986])
                              const-val _yieldedIndex[2016002]:int(64)[13] "temp"
                              (2016004 'move' _yieldedIndex[2016002] _yieldedIndex[2015986])
                              {
                                const-val i[2016008]:int(64)[13] "const" "index var" "insert auto destroy"
                                (2016010 'move' i[2016008] _yieldedIndex[2016002])
                                const-val yret[2016013]:int(64)[13] "dead after last mention" "YVV" "temp"
                                (2016015 'move' yret[2016013] _yieldedIndex[2016002])
                                const-val _yieldedIndex[2016051]:int(64)[13] "temp"
                                (2016201 'move' _yieldedIndex[2016051] _yieldedIndex[2016002])
                                {
                                  const-val j[2016053]:int(64)[13] "const" "index var" "insert auto destroy"
                                  (2016055 'move' j[2016053] _yieldedIndex[2016051])
                                  {
                                    const-val call_tmp[2016059]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                    (2016061 'move' call_tmp[2016059](2016064 call +[439679] i[1948824] j[2016053]))
                                    const-val call_tmp[2016067]:int(64)[13] "dead at end of block" "maybe param" "temp"
                                    (2016069 'move' call_tmp[2016067](2016072 call orderToIndex[1104101] view[1106302] call_tmp[2016059]))
                                    const-val idx[2016075]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                    (2016077 'move' idx[2016075] call_tmp[2016067])
                                    ref call_tmp[2016080]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
                                    ref _this_tmp_[2016082]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "temp"
                                    (2016084 'move' _this_tmp_[2016082](2016087 call buff[758025] this[1841420]))
                                    val coerce_tmp[2016089]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (2016091 'move' coerce_tmp[2016089](2016093 'deref' _this_tmp_[2016082]))
                                    (2016095 'move' call_tmp[2016080](2016098 call this[954152] coerce_tmp[2016089] idx[2016075]))
                                    ref call_tmp[2016101]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
                                    ref _this_tmp_[2016103]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "reference to a const" "temp"
                                    (2016105 'move' _this_tmp_[2016103](2016108 call buff[758025] localNeedle[1106927]))
                                    val coerce_tmp[2016110]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (2016112 'move' coerce_tmp[2016110](2016114 'deref' _this_tmp_[2016103]))
                                    (2016116 'move' call_tmp[2016101](2016119 call this[954152] coerce_tmp[2016110] j[2016053]))
                                    const-val call_tmp[2016122]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    const-val coerce_tmp[2016124]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (2016126 'move' coerce_tmp[2016124](2016128 'deref' call_tmp[2016080]))
                                    const-val coerce_tmp[2016130]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (2016132 'move' coerce_tmp[2016130](2016134 'deref' call_tmp[2016101]))
                                    (2016136 'move' call_tmp[2016122](2016139 call !=[436077] coerce_tmp[2016124] coerce_tmp[2016130]))
                                    const-val call_tmp[2016142]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (2016144 'move' call_tmp[2016142] call_tmp[2016122])
                                    if call_tmp[2016142]
                                    {
                                      (2016192 call _freeIterator[1103535] _iterator[2015863])
                                      (2016195 call chpl__autoDestroy[1635435] tmp[2015666])
                                      (2016198 call _freeIterator[1103785] _iterator[2015607])
                                      break _breakLabel[1948992] _breakLabel[1948992]
                                    }
                                    const-val call_tmp[2016152]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (2016154 'move' call_tmp[2016152](2016157 call -[962287] nLen[1106271]))
                                    const-val call_tmp[2016159]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (2016161 'move' call_tmp[2016159](2016164 call ==[435671] j[2016053] call_tmp[2016152]))
                                    const-val call_tmp[2016167]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (2016169 'move' call_tmp[2016167] call_tmp[2016159])
                                    if call_tmp[2016167]
                                    {
                                      {
                                        const-val call_tmp[2016175]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                        (2016177 'move' call_tmp[2016175](2016180 call orderToIndex[1104101] view[1106302] i[1948824]))
                                        (2016184 call =[435370] localRet[1106256] call_tmp[2016175])
                                      }
                                    }
                                  }
                                  label _continueLabel[2016188]
                                }
                              }
                            }
                            {
                              const-val low[2015954]:int(64)[13] "temp"
                              (2015956 'move' low[2015954](2015958 '.v' _iterator[2015863] F0_low[2065762]))
                              (2015961 '=' i[2015889] low[2015954])
                            }
                            {
                              const-val high[2015965]:int(64)[13] "temp"
                              (2015967 'move' high[2015965](2015969 '.v' _iterator[2015863] F1_high[2065766]))
                              (2015972 '<=' i[2015889] high[2015965])
                            }
                            {
                              val call_tmp[2015976]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              (2015978 '+=' i[2015889] 1)
                            }
                          }
                          label _endchpl_direct_param_stride_range_iter[2016034]
                        }
                        (2016037 call _freeIterator[1103535] _iterator[2015863])
                        (2016040 call chpl__autoDestroy[1635435] tmp[2015666])
                        label _endchpl_direct_counted_range_iter_helper[2016042]
                      }
                      (2016045 call _freeIterator[1103785] _iterator[2015607])
                      label _endchpl_direct_counted_range_iter[2016047]
                    }
                    label _breakLabel[1948992]
                    (1948995 call _freeIterator[1104035] _iterator[1948833])
                  }
                  const-val tmp[1948997]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  const-val tmp[1948999]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  const-val call_tmp[1949001]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1949003 'move' call_tmp[1949001](1949006 call !=[436055] localRet[1106256] -1))
                  (1949009 'move' tmp[1948999] call_tmp[1949001])
                  (1949012 'move' tmp[1948997] tmp[1948999])
                  const-val call_tmp[1949015]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1949017 'move' call_tmp[1949015] tmp[1948997])
                  if call_tmp[1949015]
                  {
                    break _breakLabel[1107326] _breakLabel[1107326]
                  }
                }
                label _continueLabel[1949025]
              }
              {
                (1948785 '=' i[1948738] coerce_tmp[1948754])
              }
              {
                (1948789 '<=' i[1948738] end[1948771])
              }
              {
                val call_tmp[1948793]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1948795 '+=' i[1948738] 1)
              }
            }
            label _endthese[1948818]
          }
          label _breakLabel[1107326]
          (1879125 call _freeIterator[1102067] _iterator[1107037])
        }
        (1879128 call chpl__autoDestroy[1383553] searchSpace[1106956])
        (1879131 call chpl__autoDestroy[1641507] call_tmp[1106971])
        (1879134 call chpl__autoDestroy[1562275] localNeedle[1106927])
      }
      (1107346 call =[435370] ret[1841424] localRet[1106256])
      (1879138 call chpl__autoDestroy[1383553] view[1106302])
      (1879141 call chpl__autoDestroy[1641462] tmp[1106285])
    }
    (2145788 call chpl__autoDestroy[1562462] needle[1841418])
    (2145791 call chpl__autoDestroy[1562275] needle[2145770])
    (1107352 return _void[55])
  }
  function on_fn[1182939](const in arg needle[1841458]:__serializeHelper[28089], const  ref arg this[1841460]:_ref(string)[938000], const in arg region[1841462]:range(byteIndex,boundedLow,false)[1143464], ref arg ret[1841464]:_ref(int(64))[936633]) : void[4] "on" "resolved"
  {
    val needle[2146026]:string[26] "temp"
    ref needle[2146027]:string[26] "temp"
    ref tmp[2146033]:string[26] "temp"
    (2146037 'move' tmp[2146033](2146035 'set reference' needle[2146026]))
    (2146030 call chpl__deserialize[1826353] needle[1841458] tmp[2146033])
    (2146042 'move' needle[2146027](2146040 'set reference' needle[2146026]))
    {
      val localRet[1182952]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1182954 'move' localRet[1182952] -2)
      ref call_tmp[1182959]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1182961 'move' call_tmp[1182959](1182964 call buffLen[757947] needle[2146027]))
      const-val nLen[1182967]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1184120]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1184124 'move' coerce_tmp[1184120](1184122 'deref' call_tmp[1182959]))
      (1881780 '=' nLen[1182967] coerce_tmp[1184120])
      (1182969 'noop')
      const-val call_tmp[1182973]:(range(int(64),bounded,false),int(64))[1084985] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1868112]:(range(int(64),bounded,false),int(64))[1084985] "temp"
      (1182978 call getView[1144502] this[1841460] region[1841462] ret_tmp[1868112])
      (1868115 'move' call_tmp[1182973] ret_tmp[1868112])
      const-val tmp[1182981]:(range(int(64),bounded,false),int(64))[1084985] "dead at end of block" "const" "insert auto destroy" "temp"
      (1182983 'move' tmp[1182981] call_tmp[1182973])
      1
      ref call_tmp[1182991]:_ref(range(int(64),bounded,false))[1026919] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1182993 'move' call_tmp[1182991](1184135 '.' tmp[1182981] x0[1084981]))
      const-val view[1182998]:range(int(64),bounded,false)[1026875] "dead at end of block" "const" "insert auto destroy"
      (1183000 'move' view[1182998](1184138 'deref' call_tmp[1182991]))
      const-val call_tmp[1183004]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (1183006 'move' call_tmp[1183004](1183009 call size[1035850] view[1182998]))
      const-val thisLen[1183012]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      (1183014 'move' thisLen[1183012] call_tmp[1183004])
      {
        const-val call_tmp[1183457]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1183459 'move' call_tmp[1183457](1183462 call ==[435671] nLen[1182967] 0))
        const-val call_tmp[1183465]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1183467 'move' call_tmp[1183465] call_tmp[1183457])
        if call_tmp[1183465]
        {
          {
            (1183491 call =[435370] localRet[1182952] -1)
          }
        }
      }
      const-val call_tmp[1183546]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1183548 'move' call_tmp[1183546](1183551 call >[437715] nLen[1182967] thisLen[1183012]))
      const-val call_tmp[1183554]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1183556 'move' call_tmp[1183554] call_tmp[1183546])
      if call_tmp[1183554]
      {
        (1183571 call =[435370] localRet[1182952] -1)
      }
      const-val call_tmp[1183584]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1183586 'move' call_tmp[1183584](1183589 call ==[435671] localRet[1182952] -2))
      const-val call_tmp[1183592]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1183594 'move' call_tmp[1183592] call_tmp[1183584])
      if call_tmp[1183592]
      {
        (1183609 call =[435370] localRet[1182952] -1)
        const-val call_tmp[1183614]:string[26] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1863124]:string[26] "temp"
        (1183622 call localize[32889] needle[2146027] ret_tmp[1863124])
        (1863127 'move' call_tmp[1183614] ret_tmp[1863124])
        const localNeedle[1183623]:string[26] "dead at end of block" "const" "insert auto destroy"
        (1183625 'move' localNeedle[1183623] call_tmp[1183614])
        const-val call_tmp[1183630]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1183632 'move' call_tmp[1183630](1183635 call -[440459] thisLen[1183012] nLen[1182967]))
        const-val call_tmp[1183638]:int(64)[13] "dead at end of block" "maybe param" "temp"
        (1183640 'move' call_tmp[1183638](1183643 call +[949727] call_tmp[1183630]))
        const-val numPossible[1183646]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        (1183648 'move' numPossible[1183646] call_tmp[1183638])
        const-val searchSpace[1183652]:range(int(64),bounded,false)[1026875] "dead at end of block" "const" "insert auto destroy"
        const-val tmp[1183654]:range(int(64),bounded,false)[1026875] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val tmp[1183665]:range(int(64),bounded,false)[1026875] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1183667]:range(int(64),boundedLow,false)[1087626] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1867210]:range(int(64),boundedLow,false)[1087626] "temp"
        (1183672 call chpl_build_low_bounded_range[1087019] 0 ret_tmp[1867210])
        (1867213 'move' call_tmp[1183667] ret_tmp[1867210])
        const-val ret_tmp[1867312]:range(int(64),bounded,false)[1026875] "temp"
        (1183677 call #[1087986] call_tmp[1183667] numPossible[1183646] ret_tmp[1867312])
        (1867315 'move' tmp[1183665] ret_tmp[1867312])
        (1183680 'move' tmp[1183654] tmp[1183665])
        (1183722 'move' searchSpace[1183652] tmp[1183654])
        {
          val _indexOfInterest[1183731]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1183733]:_ic_these_range_int64_t_bounded_F[1096764] "dead at end of block" "expr temp" "temp"
          (1183735 'move' _iterator[1183733](1183738 call _getIterator[1095381] searchSpace[1183652]))
          {
            val ret[1952286]:_ir_these_range_int64_t_bounded_F[1096770] "dead after last mention" "RVV" "temp"
            const-val _return_tmp_[1952288]:bool[10] "dead after last mention" "temp"
            const-val this[1952589]:range(int(64),bounded,false)[1026875] "temp"
            (1952594 'move' this[1952589](1952591 '.v' _iterator[1183733] F0_this[2063641]))
            (1952290 'move' _return_tmp_[1952288](1952293 call checkIfIterWillOverflow[1095875] this[1952589] 1))
            val i[1952296]:int(64)[13] "dead at end of block" "insert auto destroy"
            val call_tmp[1952298]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (1952300 'move' i[1952296] 0)
            ref call_tmp[1952303]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[1952596]:range(int(64),bounded,false)[1026875] "temp"
            (1952601 'move' this[1952596](1952598 '.v' _iterator[1183733] F0_this[2063641]))
            (1952305 'move' call_tmp[1952303](1952308 call _low[1028513] this[1952596]))
            const-val start[1952310]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1952312]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1952314 'move' coerce_tmp[1952312](1952316 'deref' call_tmp[1952303]))
            (1952318 '=' start[1952310] coerce_tmp[1952312])
            (1952321 'noop')
            ref call_tmp[1952322]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[1952603]:range(int(64),bounded,false)[1026875] "temp"
            (1952608 'move' this[1952603](1952605 '.v' _iterator[1183733] F0_this[2063641]))
            (1952324 'move' call_tmp[1952322](1952327 call _high[1028721] this[1952603]))
            const end[1952329]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1952331]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1952333 'move' coerce_tmp[1952331](1952335 'deref' call_tmp[1952322]))
            (1952337 '=' end[1952329] coerce_tmp[1952331])
            (1952340 'noop')
            CForLoop[1952341] hazard
            {
              const-val yret[1952356]:int(64)[13] "dead after last mention" "YVV" "temp"
              const-val call_tmp[1952358]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val this[1952610]:range(int(64),bounded,false)[1026875] "temp"
              (1952615 'move' this[1952610](1952612 '.v' _iterator[1183733] F0_this[2063641]))
              (1952360 'move' call_tmp[1952358](1952363 call chpl_intToIdx[1028541] this[1952610] i[1952296]))
              (1952366 'move' yret[1952356] call_tmp[1952358])
              const-val _yieldedIndex[1952380]:int(64)[13] "temp"
              (1952587 'move' _yieldedIndex[1952380] call_tmp[1952358])
              {
                const-val i[1952382]:int(64)[13] "const" "index var" "insert auto destroy"
                (1952384 'move' i[1952382] _yieldedIndex[1952380])
                {
                  {
                    val _indexOfInterest[1952389]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[1952391]:_ic_chpl_direct_counted_range_iter[1103851] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[1952393]:_ir_chpl_direct_counted_range_iter[1103857] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[1952395]:_ir_chpl_direct_counted_range_iter[1103857] "temp"
                    (1952398 call chpl_direct_counted_range_iter[458039] 0 nLen[1182967] ret_tmp[1952395])
                    (1952402 'move' call_tmp[1952393] ret_tmp[1952395])
                    (1952405 'move' _iterator[1952391](1952408 call _getIterator[1103866] call_tmp[1952393]))
                    {
                      val ret[2018094]:_ir_chpl_direct_counted_range_iter[1103857] "dead after last mention" "RVV" "temp"
                      val _indexOfInterest[2018096]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[2018098]:_ic_chpl_direct_counted_range_iter_helper[1103601] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[2018100]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[2018102]:_ir_chpl_direct_counted_range_iter_helper[1103607] "temp"
                      const-val low[2018694]:int(64)[13] "temp"
                      (2018699 'move' low[2018694](2018696 '.v' _iterator[1952391] F0_low[2058106]))
                      const-val count[2018701]:int(64)[13] "temp"
                      (2018706 'move' count[2018701](2018703 '.v' _iterator[1952391] F1_count[2058110]))
                      (2018105 call chpl_direct_counted_range_iter_helper[1102159] low[2018694] count[2018701] ret_tmp[2018102])
                      (2018109 'move' call_tmp[2018100] ret_tmp[2018102])
                      (2018112 'move' _iterator[2018098](2018115 call _getIterator[1103616] call_tmp[2018100]))
                      {
                        val ret[2018118]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead after last mention" "RVV" "temp"
                        val call_tmp[2018120]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                        const-val tmp[2018122]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val tmp[2018124]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                        const-val call_tmp[2018126]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[2018128]:int(64)[13] "temp"
                        (2018130 'move' count[2018128](2018132 '.v' _iterator[2018098] F1_count[2064268]))
                        (2018135 'move' call_tmp[2018126](2018138 call <[948459] count[2018128]))
                        (2018140 'move' tmp[2018124] call_tmp[2018126])
                        (2018143 'move' tmp[2018122] call_tmp[2018126])
                        const-val call_tmp[2018146]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (2018148 'move' call_tmp[2018146] call_tmp[2018126])
                        if call_tmp[2018126]
                        {
                          (2018154 call boundsCheckHalt[210187] "With a negative count, the range must have a last index.")
                        }
                        const-val tmp[2018157]:2*int(64)[1040117] "dead at end of block" "const" "insert auto destroy" "temp"
                        val tmp[2018159]:2*int(64)[1040117] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                        const-val tmp[2018161]:bool[10] "dead after last mention" "maybe param" "temp"
                        const-val call_tmp[2018163]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[2018165]:int(64)[13] "temp"
                        (2018167 'move' count[2018165](2018169 '.v' _iterator[2018098] F1_count[2064268]))
                        (2018172 'move' call_tmp[2018163](2018175 call ==[435671] count[2018165] 0))
                        (2018178 'move' tmp[2018161] call_tmp[2018163])
                        if call_tmp[2018163]
                        {
                          const-val tmp[2018183]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                          val call_tmp[2018185]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[2018187]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val low[2018189]:int(64)[13] "temp"
                          (2018191 'move' low[2018189](2018193 '.v' _iterator[2018098] F0_low[2064264]))
                          (2018196 'move' call_tmp[2018187](2018199 call _cast[956095] low[2018189]))
                          const-val call_tmp[2018201]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[2018203]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                          (2018205 'move' coerce_tmp[2018203](2018207 'cast' uint(64)[115] 1))
                          (2018210 'move' call_tmp[2018201](2018213 call -[962254] call_tmp[2018187]))
                          const-val call_tmp[2018215]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          (2018217 'move' call_tmp[2018215](2018220 call _cast[953604] call_tmp[2018201]))
                          const-val ret_tmp[2018222]:2*int(64)[1040117] "temp"
                          const-val low[2018224]:int(64)[13] "temp"
                          (2018226 'move' low[2018224](2018228 '.v' _iterator[2018098] F0_low[2064264]))
                          (2018232 call _build_tuple[1040075] low[2018224] call_tmp[2018215] ret_tmp[2018222])
                          (2018236 'move' tmp[2018183] ret_tmp[2018222])
                          (2018239 'move' tmp[2018159] tmp[2018183])
                        }
                        {
                          const-val tmp[2018243]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                          val call_tmp[2018245]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[2018247]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val count[2018249]:int(64)[13] "temp"
                          (2018251 'move' count[2018249](2018253 '.v' _iterator[2018098] F1_count[2064268]))
                          (2018256 'move' call_tmp[2018247] count[2018249])
                          const-val call_tmp[2018259]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val count[2018261]:int(64)[13] "temp"
                          (2018263 'move' count[2018261](2018265 '.v' _iterator[2018098] F1_count[2064268]))
                          (2018268 'move' call_tmp[2018259](2018271 call -[962287] count[2018261]))
                          const-val call_tmp[2018273]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val low[2018275]:int(64)[13] "temp"
                          (2018277 'move' low[2018275](2018279 '.v' _iterator[2018098] F0_low[2064264]))
                          (2018282 'move' call_tmp[2018273](2018285 call +[439679] low[2018275] call_tmp[2018259]))
                          const-val ret_tmp[2018288]:2*int(64)[1040117] "temp"
                          const-val low[2018290]:int(64)[13] "temp"
                          (2018292 'move' low[2018290](2018294 '.v' _iterator[2018098] F0_low[2064264]))
                          (2018298 call _build_tuple[1040075] low[2018290] call_tmp[2018273] ret_tmp[2018288])
                          (2018302 'move' tmp[2018243] ret_tmp[2018288])
                          (2018305 'move' tmp[2018159] tmp[2018243])
                        }
                        (2018309 '=' tmp[2018157] tmp[2018159])
                        (2018312 'noop')
                        1
                        ref call_tmp[2018314]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
                        (2018316 'move' call_tmp[2018314](2018318 '.' tmp[2018157] x0[1040113]))
                        const-val start[2018321]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                        const-val coerce_tmp[2018323]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                        (2018325 'move' coerce_tmp[2018323](2018327 'deref' call_tmp[2018314]))
                        (2018329 '=' start[2018321] coerce_tmp[2018323])
                        (2018332 'noop')
                        ref call_tmp[2018333]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
                        (2018335 'move' call_tmp[2018333](2018337 '.' tmp[2018157] x1[1040115]))
                        const-val end[2018340]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                        const-val coerce_tmp[2018342]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                        (2018344 'move' coerce_tmp[2018342](2018346 'deref' call_tmp[2018333]))
                        (2018348 '=' end[2018340] coerce_tmp[2018342])
                        (2018351 'noop')
                        val _indexOfInterest[2018352]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[2018354]:_ic_chpl_direct_param_stride_range_iter[1103347] "dead at end of block" "expr temp" "temp"
                        const-val call_tmp[2018356]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead at end of block" "expr temp" "maybe param" "temp"
                        const-val ret_tmp[2018358]:_ir_chpl_direct_param_stride_range_iter[1103353] "temp"
                        (2018361 call chpl_direct_param_stride_range_iter[1102585] coerce_tmp[2018323] coerce_tmp[2018342] ret_tmp[2018358])
                        (2018365 'move' call_tmp[2018356] ret_tmp[2018358])
                        (2018368 'move' _iterator[2018354](2018371 call _getIterator[1103362] call_tmp[2018356]))
                        {
                          val ret[2018374]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead after last mention" "RVV" "temp"
                          val call_tmp[2018376]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (2018379 call chpl_range_check_stride[1102905])
                          val i[2018380]:int(64)[13] "dead at end of block" "insert auto destroy"
                          val call_tmp[2018382]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (2018384 'move' i[2018380] 0)
                          val call_tmp[2018387]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val default_arg_first[2018389]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val low[2018391]:int(64)[13] "temp"
                          (2018393 'move' low[2018391](2018395 '.v' _iterator[2018354] F0_low[2065762]))
                          (2018398 'move' default_arg_first[2018389](2018401 call chpl_checkIfRangeIterWillOverflow_default_first[1103259] low[2018391]))
                          const-val default_arg_last[2018403]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val high[2018405]:int(64)[13] "temp"
                          (2018407 'move' high[2018405](2018409 '.v' _iterator[2018354] F1_high[2065766]))
                          (2018412 'move' default_arg_last[2018403](2018415 call chpl_checkIfRangeIterWillOverflow_default_last[1103287] high[2018405]))
                          const-val _return_tmp_[2018417]:bool[10] "dead after last mention" "temp"
                          const-val low[2018419]:int(64)[13] "temp"
                          (2018421 'move' low[2018419](2018423 '.v' _iterator[2018354] F0_low[2065762]))
                          const-val high[2018426]:int(64)[13] "temp"
                          (2018428 'move' high[2018426](2018430 '.v' _iterator[2018354] F1_high[2065766]))
                          (2018433 'move' _return_tmp_[2018417](2018436 call chpl_checkIfRangeIterWillOverflow[1096137] low[2018419] high[2018426] 1 default_arg_first[2018389] default_arg_last[2018403] 1))
                          CForLoop[2018443]
                          {
                            const-val yret[2018472]:int(64)[13] "dead after last mention" "YVV" "temp"
                            (2018474 'move' yret[2018472] i[2018380])
                            const-val _yieldedIndex[2018477]:int(64)[13] "temp"
                            (2018479 'move' _yieldedIndex[2018477] i[2018380])
                            {
                              const-val i[2018483]:int(64)[13] "const" "index var" "insert auto destroy"
                              (2018485 'move' i[2018483] _yieldedIndex[2018477])
                              const-val yret[2018488]:int(64)[13] "dead after last mention" "YVV" "temp"
                              (2018490 'move' yret[2018488] _yieldedIndex[2018477])
                              const-val _yieldedIndex[2018493]:int(64)[13] "temp"
                              (2018495 'move' _yieldedIndex[2018493] _yieldedIndex[2018477])
                              {
                                const-val i[2018499]:int(64)[13] "const" "index var" "insert auto destroy"
                                (2018501 'move' i[2018499] _yieldedIndex[2018493])
                                const-val yret[2018504]:int(64)[13] "dead after last mention" "YVV" "temp"
                                (2018506 'move' yret[2018504] _yieldedIndex[2018493])
                                const-val _yieldedIndex[2018542]:int(64)[13] "temp"
                                (2018692 'move' _yieldedIndex[2018542] _yieldedIndex[2018493])
                                {
                                  const-val j[2018544]:int(64)[13] "const" "index var" "insert auto destroy"
                                  (2018546 'move' j[2018544] _yieldedIndex[2018542])
                                  {
                                    const-val call_tmp[2018550]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                    (2018552 'move' call_tmp[2018550](2018555 call +[439679] i[1952382] j[2018544]))
                                    const-val call_tmp[2018558]:int(64)[13] "dead at end of block" "maybe param" "temp"
                                    (2018560 'move' call_tmp[2018558](2018563 call orderToIndex[1104101] view[1182998] call_tmp[2018550]))
                                    const-val idx[2018566]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                    (2018568 'move' idx[2018566] call_tmp[2018558])
                                    ref call_tmp[2018571]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
                                    ref _this_tmp_[2018573]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "temp"
                                    (2018575 'move' _this_tmp_[2018573](2018578 call buff[758025] this[1841460]))
                                    val coerce_tmp[2018580]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (2018582 'move' coerce_tmp[2018580](2018584 'deref' _this_tmp_[2018573]))
                                    (2018586 'move' call_tmp[2018571](2018589 call this[954152] coerce_tmp[2018580] idx[2018566]))
                                    ref call_tmp[2018592]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
                                    ref _this_tmp_[2018594]:_ref(c_ptr(uint(8)))[937493] "dead after last mention" "reference to a const" "temp"
                                    (2018596 'move' _this_tmp_[2018594](2018599 call buff[758025] localNeedle[1183623]))
                                    val coerce_tmp[2018601]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (2018603 'move' coerce_tmp[2018601](2018605 'deref' _this_tmp_[2018594]))
                                    (2018607 'move' call_tmp[2018592](2018610 call this[954152] coerce_tmp[2018601] j[2018544]))
                                    const-val call_tmp[2018613]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    const-val coerce_tmp[2018615]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (2018617 'move' coerce_tmp[2018615](2018619 'deref' call_tmp[2018571]))
                                    const-val coerce_tmp[2018621]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (2018623 'move' coerce_tmp[2018621](2018625 'deref' call_tmp[2018592]))
                                    (2018627 'move' call_tmp[2018613](2018630 call !=[436077] coerce_tmp[2018615] coerce_tmp[2018621]))
                                    const-val call_tmp[2018633]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (2018635 'move' call_tmp[2018633] call_tmp[2018613])
                                    if call_tmp[2018633]
                                    {
                                      (2018683 call _freeIterator[1103535] _iterator[2018354])
                                      (2018686 call chpl__autoDestroy[1635435] tmp[2018157])
                                      (2018689 call _freeIterator[1103785] _iterator[2018098])
                                      break _breakLabel[1952550] _breakLabel[1952550]
                                    }
                                    const-val call_tmp[2018643]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (2018645 'move' call_tmp[2018643](2018648 call -[962287] nLen[1182967]))
                                    const-val call_tmp[2018650]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (2018652 'move' call_tmp[2018650](2018655 call ==[435671] j[2018544] call_tmp[2018643]))
                                    const-val call_tmp[2018658]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (2018660 'move' call_tmp[2018658] call_tmp[2018650])
                                    if call_tmp[2018658]
                                    {
                                      {
                                        const-val call_tmp[2018666]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                        (2018668 'move' call_tmp[2018666](2018671 call orderToIndex[1104101] view[1182998] i[1952382]))
                                        (2018675 call =[435370] localRet[1182952] call_tmp[2018666])
                                      }
                                    }
                                  }
                                  label _continueLabel[2018679]
                                }
                              }
                            }
                            {
                              const-val low[2018445]:int(64)[13] "temp"
                              (2018447 'move' low[2018445](2018449 '.v' _iterator[2018354] F0_low[2065762]))
                              (2018452 '=' i[2018380] low[2018445])
                            }
                            {
                              const-val high[2018456]:int(64)[13] "temp"
                              (2018458 'move' high[2018456](2018460 '.v' _iterator[2018354] F1_high[2065766]))
                              (2018463 '<=' i[2018380] high[2018456])
                            }
                            {
                              val call_tmp[2018467]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              (2018469 '+=' i[2018380] 1)
                            }
                          }
                          label _endchpl_direct_param_stride_range_iter[2018525]
                        }
                        (2018528 call _freeIterator[1103535] _iterator[2018354])
                        (2018531 call chpl__autoDestroy[1635435] tmp[2018157])
                        label _endchpl_direct_counted_range_iter_helper[2018533]
                      }
                      (2018536 call _freeIterator[1103785] _iterator[2018098])
                      label _endchpl_direct_counted_range_iter[2018538]
                    }
                    label _breakLabel[1952550]
                    (1952553 call _freeIterator[1104035] _iterator[1952391])
                  }
                  const-val tmp[1952555]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  const-val tmp[1952557]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  const-val call_tmp[1952559]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1952561 'move' call_tmp[1952559](1952564 call !=[436055] localRet[1182952] -1))
                  (1952567 'move' tmp[1952557] call_tmp[1952559])
                  (1952570 'move' tmp[1952555] tmp[1952557])
                  const-val call_tmp[1952573]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1952575 'move' call_tmp[1952573] tmp[1952555])
                  if call_tmp[1952573]
                  {
                    break _breakLabel[1184022] _breakLabel[1184022]
                  }
                }
                label _continueLabel[1952583]
              }
              {
                (1952343 '=' i[1952296] coerce_tmp[1952312])
              }
              {
                (1952347 '<=' i[1952296] end[1952329])
              }
              {
                val call_tmp[1952351]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1952353 '+=' i[1952296] 1)
              }
            }
            label _endthese[1952376]
          }
          label _breakLabel[1184022]
          (1881791 call _freeIterator[1102067] _iterator[1183733])
        }
        (1881794 call chpl__autoDestroy[1383553] searchSpace[1183652])
        (1881797 call chpl__autoDestroy[1641507] call_tmp[1183667])
        (1881800 call chpl__autoDestroy[1562275] localNeedle[1183623])
      }
      (1184042 call =[435370] ret[1841464] localRet[1182952])
      (1881804 call chpl__autoDestroy[1383553] view[1182998])
      (1881807 call chpl__autoDestroy[1641462] tmp[1182981])
    }
    (2146044 call chpl__autoDestroy[1562462] needle[1841458])
    (2146047 call chpl__autoDestroy[1562275] needle[2146026])
    (1184048 return _void[55])
  }
  function wrapon_fn[2147277](const in arg dummy_locale_arg[2147279]:chpl_localeID_t[209352], in arg buf[2147281]:c_void_ptr[149], in arg buf_size[2147283]:int(64)[13], in arg c[2147285]:_class_localson_fn[2147237]) : void[4] "on block"
  {
    val _0_tmp[2147290]:chpl_localeID_t[209352] "temp"
    (2147295 'move' _0_tmp[2147290](2147292 '.v' c[2147285] _0_tmp[2147240]))
    ref _1_this[2147297]:string[26] "temp"
    (2147302 'move' _1_this[2147297](2147299 '.v' c[2147285] _1_this[2147242]))
    (2147288 call on_fn[933847] _1_this[2147297])
    (2147305 return _void[55])
  }
  function wrapon_fn[2147381](const in arg dummy_locale_arg[2147383]:chpl_localeID_t[209352], in arg buf[2147385]:c_void_ptr[149], in arg buf_size[2147387]:int(64)[13], in arg c[2147389]:_class_localson_fn[2147329]) : void[4] "on block"
  {
    val _0_tmp[2147394]:chpl_localeID_t[209352] "temp"
    (2147399 'move' _0_tmp[2147394](2147396 '.v' c[2147389] _0_tmp[2147332]))
    ref _1_this[2147401]:string[26] "temp"
    (2147406 'move' _1_this[2147401](2147403 '.v' c[2147389] _1_this[2147334]))
    ref _2_result[2147409]:bool[10] "temp"
    (2147414 'move' _2_result[2147409](2147411 '.v' c[2147389] _2_result[2147336]))
    (2147392 call on_fn[933883] _1_this[2147401] _2_result[2147409])
    (2147417 return _void[55])
  }
  function wrapon_fn[2152862](const in arg dummy_locale_arg[2152864]:chpl_localeID_t[209352], in arg buf[2152866]:c_void_ptr[149], in arg buf_size[2152868]:int(64)[13], in arg c[2152870]:_class_localson_fn[2152798]) : void[4] "on block"
  {
    val _0_tmp[2152875]:chpl_localeID_t[209352] "temp"
    (2152880 'move' _0_tmp[2152875](2152877 '.v' c[2152870] _0_tmp[2152801]))
    val _1_needle_data[2152882]:__serializeHelper[28089] "temp"
    (2152887 'move' _1_needle_data[2152882](2152884 '.v' c[2152870] _1_needle_data[2152803]))
    ref _2_this[2152890]:string[26] "temp"
    (2152895 'move' _2_this[2152890](2152892 '.v' c[2152870] _2_this[2152805]))
    val _3_region[2152898]:range(byteIndex,bounded,false)[1025853] "temp"
    (2152903 'move' _3_region[2152898](2152900 '.v' c[2152870] _3_region[2152807]))
    ref _4_ret[2152906]:int(64)[13] "temp"
    (2152911 'move' _4_ret[2152906](2152908 '.v' c[2152870] _4_ret[2152809]))
    (2152873 call on_fn[1106243] _1_needle_data[2152882] _2_this[2152890] _3_region[2152898] _4_ret[2152906])
    (2152914 return _void[55])
  }
  function wrapon_fn[2153430](const in arg dummy_locale_arg[2153432]:chpl_localeID_t[209352], in arg buf[2153434]:c_void_ptr[149], in arg buf_size[2153436]:int(64)[13], in arg c[2153438]:_class_localson_fn[2153366]) : void[4] "on block"
  {
    val _0_tmp[2153443]:chpl_localeID_t[209352] "temp"
    (2153448 'move' _0_tmp[2153443](2153445 '.v' c[2153438] _0_tmp[2153369]))
    val _1_needle_data[2153450]:__serializeHelper[28089] "temp"
    (2153455 'move' _1_needle_data[2153450](2153452 '.v' c[2153438] _1_needle_data[2153371]))
    ref _2_this[2153458]:string[26] "temp"
    (2153463 'move' _2_this[2153458](2153460 '.v' c[2153438] _2_this[2153373]))
    val _3_region[2153466]:range(byteIndex,boundedLow,false)[1143464] "temp"
    (2153471 'move' _3_region[2153466](2153468 '.v' c[2153438] _3_region[2153375]))
    ref _4_ret[2153474]:int(64)[13] "temp"
    (2153479 'move' _4_ret[2153474](2153476 '.v' c[2153438] _4_ret[2153377]))
    (2153441 call on_fn[1182939] _1_needle_data[2153450] _2_this[2153458] _3_region[2153466] _4_ret[2153474])
    (2153482 return _void[55])
  }
}