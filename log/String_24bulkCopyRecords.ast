AST dump for String after pass bulkCopyRecords.
Module use list: ChapelStandard SysCTypes ByteBufferHelpers BytesStringCommon SysBasic CString StringCasts NVStringFactory 

{
  type _class_localson_fn[2040071] val _runtime_hdr[2040072]:chpl_comm_on_bundle_t[209301] val _0_tmp[2040074]:chpl_localeID_t[209294] val _1_needle_data[2040076]:__serializeHelper[28086] ref _2_this[2040078]:string[26] val _3_region[2040080]:range(byteIndex,boundedLow,false)[1143314] ref _4_ret[2040082]:int(64)[13]
  type _class_localson_fn[2039503] val _runtime_hdr[2039504]:chpl_comm_on_bundle_t[209301] val _0_tmp[2039506]:chpl_localeID_t[209294] val _1_needle_data[2039508]:__serializeHelper[28086] ref _2_this[2039510]:string[26] val _3_region[2039512]:range(byteIndex,bounded,false)[1025703] ref _4_ret[2039514]:int(64)[13]
  type _class_localson_fn[2034064] val _runtime_hdr[2034065]:chpl_comm_on_bundle_t[209301] val _0_tmp[2034067]:chpl_localeID_t[209294] ref _1_this[2034069]:string[26] ref _2_result[2034071]:bool[10]
  type _class_localson_fn[2033972] val _runtime_hdr[2033973]:chpl_comm_on_bundle_t[209301] val _0_tmp[2033975]:chpl_localeID_t[209294] ref _1_this[2033977]:string[26]
  function chpl__init_String[415829]() : void[4] "insert line file info" "module init" "resolved"
  {
    {
    }
    (504953 return _void[55])
  }
  def module NVStringFactory[30564]  
  const-val CHPL_SHORT_STRING_SIZE[28013]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  function _ref(chpl__inPlaceBuffer)[967351].deinit[752872](const  ref arg this[752876]:_ref(chpl__inPlaceBuffer)[967351]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved"
  {
    (752884 return _void[55])
  }
  type chpl__inPlaceBuffer[28019]
  function chpl__getInPlaceBufferData[28030](const  ref arg data[28027]:_ref(chpl__inPlaceBuffer)[967351]) : c_ptr(uint(8))[937334] "extern" "local args" "no fn body" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[502830]:c_ptr(uint(8))[937334] "RVV" "temp"
    (502832 return ret[502830])
  }
  function chpl__getInPlaceBufferDataForWrite[28042](ref arg data[28039]:_ref(chpl__inPlaceBuffer)[967351]) : c_ptr(uint(8))[937334] "extern" "local args" "no fn body" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[502836]:c_ptr(uint(8))[937334] "RVV" "temp"
    (502838 return ret[502836])
  }
  function _ref(__serializeHelper)[937928].buffLen[753385](ref arg this[753389]:_ref(__serializeHelper)[937928]) ref : _ref(int(64))[936483] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[753399]:_ref(int(64))[936483] "dead after last mention" "RVV" "temp"
    ref call_tmp[753406]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
    (753409 'move' call_tmp[753406](753393 '.' this[753389] buffLen[28055]))
    (753404 'move' ret[753399] call_tmp[753406])
    (753401 return ret[753399])
  }
  function _ref(__serializeHelper)[937928].buff[753411](ref arg this[753415]:_ref(__serializeHelper)[937928]) ref : _ref(c_ptr(uint(8)))[937343] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[753425]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "RVV" "temp"
    ref call_tmp[753432]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "temp"
    (753435 'move' call_tmp[753432](753419 '.' this[753415] buff[28060]))
    (753430 'move' ret[753425] call_tmp[753432])
    (753427 return ret[753425])
  }
  function _ref(__serializeHelper)[937928].size[753437](ref arg this[753441]:_ref(__serializeHelper)[937928]) ref : _ref(int(64))[936483] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[753451]:_ref(int(64))[936483] "dead after last mention" "RVV" "temp"
    ref call_tmp[753458]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
    (753461 'move' call_tmp[753458](753445 '.' this[753441] size[28065]))
    (753456 'move' ret[753451] call_tmp[753458])
    (753453 return ret[753451])
  }
  function _ref(__serializeHelper)[937928].locale_id[753463](ref arg this[753467]:_ref(__serializeHelper)[937928]) ref : _ref(int(32))[936537] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[753477]:_ref(int(32))[936537] "dead after last mention" "RVV" "temp"
    ref call_tmp[753484]:_ref(int(32))[936537] "dead after last mention" "maybe param" "temp"
    (753487 'move' call_tmp[753484](753471 '.' this[753467] locale_id[28071]))
    (753482 'move' ret[753477] call_tmp[753484])
    (753479 return ret[753477])
  }
  function _ref(__serializeHelper)[937928].shortData[753489](ref arg this[753493]:_ref(__serializeHelper)[937928]) ref : _ref(chpl__inPlaceBuffer)[967351] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[753503]:_ref(chpl__inPlaceBuffer)[967351] "dead after last mention" "RVV" "temp"
    ref call_tmp[753510]:_ref(chpl__inPlaceBuffer)[967351] "dead after last mention" "maybe param" "temp"
    (753513 'move' call_tmp[753510](753497 '.' this[753493] shortData[28076]))
    (753508 'move' ret[753503] call_tmp[753510])
    (753505 return ret[753503])
  }
  function _ref(__serializeHelper)[937928].cachedNumCodepoints[753515](ref arg this[753519]:_ref(__serializeHelper)[937928]) ref : _ref(int(64))[936483] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[753529]:_ref(int(64))[936483] "dead after last mention" "RVV" "temp"
    ref call_tmp[753536]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
    (753539 'move' call_tmp[753536](753523 '.' this[753519] cachedNumCodepoints[28081]))
    (753534 'move' ret[753529] call_tmp[753536])
    (753531 return ret[753529])
  }
  function _ref(__serializeHelper)[937928].init[753541](ref arg this[753544]:_ref(__serializeHelper)[937928], in arg buffLen[753547]:int(64)[13], in arg buff[753560]:c_ptr(uint(8))[937334], in arg size[753573]:int(64)[13], in arg locale_id[753586]:int(32)[95], in arg shortData[753600]:chpl__inPlaceBuffer[28019], in arg cachedNumCodepoints[753613]:int(64)[13]) : void[4] "compiler generated" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    (753627 '.=' this[753544] buffLen[28055] buffLen[753547])
    (753630 '.=' this[753544] buff[28060] buff[753560])
    (753633 '.=' this[753544] size[28065] size[753573])
    (753636 '.=' this[753544] locale_id[28071] locale_id[753586])
    (753639 '.=' this[753544] shortData[28076] shortData[753600])
    (753642 '.=' this[753544] cachedNumCodepoints[28081] cachedNumCodepoints[753613])
    (753648 return _void[55])
  }
  function _ref(__serializeHelper)[937928].deinit[753829](const  ref arg this[753833]:_ref(__serializeHelper)[937928]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved"
  {
    label _enddeinit[1771633]
    ref _field_destructor_tmp_[1771631]:_ref(chpl__inPlaceBuffer)[967351] "temp"
    (1771638 'move' _field_destructor_tmp_[1771631](1771635 '.' this[753833] shortData[28076]))
    (1771640 call deinit[752872] _field_destructor_tmp_[1771631])
    (753841 return _void[55])
  }
  type __serializeHelper[28086] val buffLen[28055]:int(64)[13] val buff[28060]:c_ptr(uint(8))[937334] val size[28065]:int(64)[13] val locale_id[28071]:int(32)[95] val shortData[28076]:chpl__inPlaceBuffer[28019] val cachedNumCodepoints[28081]:int(64)[13]
  function _ref(byteIndex)[948670].init[28097](ref arg this[28172]:_ref(byteIndex)[948670]) : void[4] "method" "primary method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val tmp[453601]:int(64)[13] "dead after last mention" "temp"
    (1029656 'move' tmp[453601] 0)
    (453606 '.=' this[28172] _bindex[28091] tmp[453601])
    (502840 return _void[55])
  }
  function _ref(byteIndex)[948670].init=[28145](ref arg this[28184]:_ref(byteIndex)[948670], const in arg i[28142]:int(64)[13]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    val tmp[453628]:int(64)[13] "dead after last mention" "temp"
    (453631 'move' tmp[453628] i[28142])
    (453633 '.=' this[28184] _bindex[28091] tmp[453628])
    (502846 return _void[55])
  }
  function _ref(byteIndex)[948670].writeThis[1068531](const  ref arg this[1068535]:_ref(byteIndex)[948670], const  ref arg f[1068537]:channel(true,dynamic,false)[1060858], ref arg error_out[1768669]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[1068543]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
    (1068545 'move' call_tmp[1068543](1068548 call _bindex[757653] this[1068535]))
    const-val coerce_tmp[1068625]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1068629 'move' coerce_tmp[1068625](1068627 'deref' call_tmp[1068543]))
    ref _return_tmp_[1759281]:_ref(channel(true,dynamic,false))[1060867] "dead after last mention" "temp"
    val error[1768674]:Error[167938] "error variable" "temp"
    (1768676 'move' error[1768674] nil[44])
    (1759283 'move' _return_tmp_[1759281](1068552 call <~>[1068559] f[1068537] coerce_tmp[1068625] error[1768674]))
    val errorExists[2055733]:bool[10] "temp"
    (2055738 'move' errorExists[2055733](2055735 '!=' error[1768674] nil[44]))
    if errorExists[2055733]
    {
      (1768680 '=' error_out[1768669] error[1768674])
      gotoErrorHandlingReturn _endwriteThis[1768671] _endwriteThis[1768671]
    }
    label _endwriteThis[1768671]
    (1068555 return _void[55])
  }
  function _ref(byteIndex)[948670]._bindex[757653](ref arg this[757657]:_ref(byteIndex)[948670]) ref : _ref(int(64))[936483] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[757667]:_ref(int(64))[936483] "dead after last mention" "RVV" "temp"
    ref call_tmp[757674]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
    (757677 'move' call_tmp[757674](757661 '.' this[757657] _bindex[28091]))
    (757672 'move' ret[757667] call_tmp[757674])
    (757669 return ret[757667])
  }
  function _ref(byteIndex)[948670].deinit[757679](const  ref arg this[757683]:_ref(byteIndex)[948670]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free"
  {
    (757691 return _void[55])
  }
  type byteIndex[28170] val _bindex[28091]:int(64)[13] "no doc"
  function _ref(codepointIndex)[948680].init[28201](ref arg this[28276]:_ref(codepointIndex)[948680]) : void[4] "method" "primary method" "no doc" "resolved" "no return value for void"
  {
    val tmp[453638]:int(64)[13] "dead after last mention" "temp"
    (1156961 'move' tmp[453638] 0)
    (453643 '.=' this[28276] _cpindex[28195] tmp[453638])
    (502850 return _void[55])
  }
  function _ref(codepointIndex)[948680].writeThis[1175256](const  ref arg this[1175260]:_ref(codepointIndex)[948680], const  ref arg f[1175262]:channel(true,dynamic,false)[1060858], ref arg error_out[1769768]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[1175268]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
    (1175270 'move' call_tmp[1175268](1175273 call _cpindex[757725] this[1175260]))
    const-val coerce_tmp[1175284]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1175288 'move' coerce_tmp[1175284](1175286 'deref' call_tmp[1175268]))
    ref _return_tmp_[1759297]:_ref(channel(true,dynamic,false))[1060867] "dead after last mention" "temp"
    val error[1769773]:Error[167938] "error variable" "temp"
    (1769775 'move' error[1769773] nil[44])
    (1759299 'move' _return_tmp_[1759297](1175277 call <~>[1068559] f[1175262] coerce_tmp[1175284] error[1769773]))
    val errorExists[2056277]:bool[10] "temp"
    (2056282 'move' errorExists[2056277](2056279 '!=' error[1769773] nil[44]))
    if errorExists[2056277]
    {
      (1769779 '=' error_out[1769768] error[1769773])
      gotoErrorHandlingReturn _endwriteThis[1769770] _endwriteThis[1769770]
    }
    label _endwriteThis[1769770]
    (1175280 return _void[55])
  }
  function _ref(codepointIndex)[948680]._cpindex[757725](ref arg this[757729]:_ref(codepointIndex)[948680]) ref : _ref(int(64))[936483] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[757739]:_ref(int(64))[936483] "dead after last mention" "RVV" "temp"
    ref call_tmp[757746]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
    (757749 'move' call_tmp[757746](757733 '.' this[757729] _cpindex[28195]))
    (757744 'move' ret[757739] call_tmp[757746])
    (757741 return ret[757739])
  }
  function _ref(codepointIndex)[948680].deinit[757751](const  ref arg this[757755]:_ref(codepointIndex)[948680]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved"
  {
    (757763 return _void[55])
  }
  type codepointIndex[28274] val _cpindex[28195]:int(64)[13] "no doc"
  function chpl_build_bounded_range[1123165](const  ref arg low[1123167]:byteIndex[28170], const  ref arg high[1123172]:byteIndex[28170], ref arg _retArg[1790958]:_ref(range(byteIndex,bounded,false))[1025712]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1123256]:range(byteIndex,bounded,false)[1025703] "dead after last mention" "RVV" "temp"
    val call_tmp[1123279]:byteIndex[28170] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1123285]:range(byteIndex,bounded,false)[1025703] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1123304]:range(byteIndex,bounded,false)[1025703] "dead after last mention" "delay instantiation" "temp"
    const-val default_arg__stride[1123383]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1123387 'move' default_arg__stride[1123383](1123385 call init_default__stride[1029723]))
    const-val default_arg__alignment[1123391]:byteIndex[28170] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret_tmp[1789491]:byteIndex[28170] "temp"
    (1123393 call init_default__alignment[1029763] ret_tmp[1789491])
    (1789494 'move' default_arg__alignment[1123391] ret_tmp[1789491])
    (1123307 call init[1028619] initTemp[1123304] low[1123167] high[1123172] default_arg__stride[1123383] default_arg__alignment[1123391] 0)
    (1123287 'move' call_tmp[1123285] initTemp[1123304])
    (1123296 'move' ret[1123256] call_tmp[1123285])
    (1790960 '=' _retArg[1790958] ret[1123256])
    (1801071 call chpl__autoDestroy[1494683] default_arg__alignment[1123391])
    (1790962 return _void[55])
  }
  function chpl_build_low_bounded_range[1142621](const  ref arg low[1142623]:byteIndex[28170], ref arg _retArg[1791186]:_ref(range(byteIndex,boundedLow,false))[1143358]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1142707]:range(byteIndex,boundedLow,false)[1143314] "dead after last mention" "RVV" "temp"
    val call_tmp[1142726]:byteIndex[28170] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1142732]:range(byteIndex,boundedLow,false)[1143314] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1142750]:range(byteIndex,boundedLow,false)[1143314] "dead after last mention" "delay instantiation" "temp"
    const-val default_arg__high[1143523]:byteIndex[28170] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret_tmp[1791192]:byteIndex[28170] "temp"
    (1143525 call init_default__high[1143499] ret_tmp[1791192])
    (1791195 'move' default_arg__high[1143523] ret_tmp[1791192])
    const-val default_arg__stride[1143564]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1143568 'move' default_arg__stride[1143564](1143566 call init_default__stride[1143532]))
    const-val default_arg__alignment[1143596]:byteIndex[28170] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret_tmp[1791204]:byteIndex[28170] "temp"
    (1143598 call init_default__alignment[1143572] ret_tmp[1791204])
    (1791207 'move' default_arg__alignment[1143596] ret_tmp[1791204])
    (1142753 call init[1142761] initTemp[1142750] low[1142623] default_arg__high[1143523] default_arg__stride[1143564] default_arg__alignment[1143596] 0)
    (1142734 'move' call_tmp[1142732] initTemp[1142750])
    (1142742 'move' ret[1142707] call_tmp[1142732])
    (1791188 '=' _retArg[1791186] ret[1142707])
    (1801303 call chpl__autoDestroy[1494683] default_arg__alignment[1143596])
    (1801306 call chpl__autoDestroy[1494683] default_arg__high[1143523])
    (1791190 return _void[55])
  }
  function chpl_build_high_bounded_range[1184137](const  ref arg high[1184139]:byteIndex[28170], ref arg _retArg[1791538]:_ref(range(byteIndex,boundedHigh,false))[1184874]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1184223]:range(byteIndex,boundedHigh,false)[1184830] "dead after last mention" "RVV" "temp"
    val call_tmp[1184242]:byteIndex[28170] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1184248]:range(byteIndex,boundedHigh,false)[1184830] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1184266]:range(byteIndex,boundedHigh,false)[1184830] "dead after last mention" "delay instantiation" "temp"
    const-val default_arg__low[1185039]:byteIndex[28170] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret_tmp[1791544]:byteIndex[28170] "temp"
    (1185041 call init_default__low[1185015] ret_tmp[1791544])
    (1791547 'move' default_arg__low[1185039] ret_tmp[1791544])
    const-val default_arg__stride[1185080]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1185084 'move' default_arg__stride[1185080](1185082 call init_default__stride[1185048]))
    const-val default_arg__alignment[1185112]:byteIndex[28170] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret_tmp[1791556]:byteIndex[28170] "temp"
    (1185114 call init_default__alignment[1185088] ret_tmp[1791556])
    (1791559 'move' default_arg__alignment[1185112] ret_tmp[1791556])
    (1184269 call init[1184277] initTemp[1184266] default_arg__low[1185039] high[1184139] default_arg__stride[1185080] default_arg__alignment[1185112] 0)
    (1184250 'move' call_tmp[1184248] initTemp[1184266])
    (1184258 'move' ret[1184223] call_tmp[1184248])
    (1791540 '=' _retArg[1791538] ret[1184223])
    (1803572 call chpl__autoDestroy[1494683] default_arg__alignment[1185112])
    (1803575 call chpl__autoDestroy[1494683] default_arg__low[1185039])
    (1791542 return _void[55])
  }
  function chpl__idxToInt[1029080](const  ref arg i[1029082]:byteIndex[28170]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    val ret[1029166]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1029178]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1029180 'move' call_tmp[1029178](1029183 call _cast[39462] i[1029082]))
    (1029186 'move' ret[1029166] call_tmp[1029178])
    (1029190 return ret[1029166])
  }
  function chpl__intToIdx[28502](const in arg i[28505]:int(64)[13], ref arg _retArg[1775103]:_ref(byteIndex)[948670]) : void[4] "fn returns via _retArg" "inline" "no doc" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1763047]:byteIndex[28170] "temp"
    const-val ret[502934]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    const-val call_tmp[597453]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1787243]:byteIndex[28170] "temp"
    (28510 call _cast[39483] i[28505] ret_tmp[1787243])
    (1787246 'move' call_tmp[597453] ret_tmp[1787243])
    (502939 'move' ret[502934] call_tmp[597453])
    (1775105 '=' _retArg[1775103] ret[502934])
    (1775107 return _void[55])
  }
  function >[28572](const  ref arg x[28569]:byteIndex[28170], const  ref arg y[28575]:byteIndex[28170]) : bool[10] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val ret[502970]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[597463]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597466 'move' call_tmp[597463](28580 call _cast[39462] x[28569]))
    const-val call_tmp[597468]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597471 'move' call_tmp[597468](28584 call _cast[39462] y[28575]))
    const-val call_tmp[597473]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (597476 'move' call_tmp[597473](28586 call >[437583] call_tmp[597463] call_tmp[597468]))
    (502975 'move' ret[502970] call_tmp[597473])
    (502972 return ret[502970])
  }
  function +[28722](const  ref arg x[28719]:byteIndex[28170], const in arg y[28725]:int(64)[13], ref arg _retArg[1775145]:_ref(byteIndex)[948670]) : void[4] "fn returns via _retArg" "inline" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[503024]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    const-val call_tmp[597533]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597536 'move' call_tmp[597533](28730 call _cast[39462] x[28719]))
    const-val call_tmp[597538]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597541 'move' call_tmp[597538](28733 call +[439547] call_tmp[597533] y[28725]))
    const-val call_tmp[597543]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1787249]:byteIndex[28170] "temp"
    (28736 call _cast[39483] call_tmp[597538] ret_tmp[1787249])
    (1787252 'move' call_tmp[597543] ret_tmp[1787249])
    (503029 'move' ret[503024] call_tmp[597543])
    (1775147 '=' _retArg[1775145] ret[503024])
    (1775149 return _void[55])
  }
  function -[28854](const  ref arg x[28851]:byteIndex[28170], const in arg y[28857]:int(64)[13], ref arg _retArg[1775181]:_ref(byteIndex)[948670]) : void[4] "fn returns via _retArg" "inline" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[503069]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    const-val call_tmp[597603]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597606 'move' call_tmp[597603](28862 call _cast[39462] x[28851]))
    const-val call_tmp[597608]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597611 'move' call_tmp[597608](28865 call -[440327] call_tmp[597603] y[28857]))
    const-val call_tmp[597613]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1787255]:byteIndex[28170] "temp"
    (28868 call _cast[39483] call_tmp[597608] ret_tmp[1787255])
    (1787258 'move' call_tmp[597613] ret_tmp[1787255])
    (503074 'move' ret[503069] call_tmp[597613])
    (1775183 '=' _retArg[1775181] ret[503069])
    (1775185 return _void[55])
  }
  function <[29040](const  ref arg x[29037]:codepointIndex[28274], const in arg y[29043]:int(64)[13]) : bool[10] "inline" "no doc" "resolved"
  {
    val ret[503132]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[597703]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597706 'move' call_tmp[597703](29048 call _cast[39514] x[29037]))
    const-val call_tmp[597708]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (597711 'move' call_tmp[597708](29051 call <[437363] call_tmp[597703] y[29043]))
    (503137 'move' ret[503132] call_tmp[597708])
    (503134 return ret[503132])
  }
  function >=[29190](const  ref arg x[29187]:codepointIndex[28274], const in arg y[29193]:int(64)[13]) : bool[10] "inline" "no doc" "resolved"
  {
    val ret[503186]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[597773]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597776 'move' call_tmp[597773](29198 call _cast[39514] x[29187]))
    const-val call_tmp[597778]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (597781 'move' call_tmp[597778](29201 call >=[437143] call_tmp[597773] y[29193]))
    (503191 'move' ret[503186] call_tmp[597778])
    (503188 return ret[503186])
  }
  function ==[29466](const  ref arg x[29463]:byteIndex[28170], const in arg y[29469]:int(64)[13]) : bool[10] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val ret[503285]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[597903]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597906 'move' call_tmp[597903](29474 call _cast[39462] x[29463]))
    const-val call_tmp[597908]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (597911 'move' call_tmp[597908](29477 call ==[435539] call_tmp[597903] y[29469]))
    (503290 'move' ret[503285] call_tmp[597908])
    (503287 return ret[503285])
  }
  function ==[29538](const in arg x[29535]:int(64)[13], const  ref arg y[29541]:codepointIndex[28274]) : bool[10] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val ret[503312]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[597933]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597936 'move' call_tmp[597933](29547 call _cast[39514] y[29541]))
    const-val call_tmp[597938]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (597941 'move' call_tmp[597938](29549 call ==[435539] x[29535] call_tmp[597933]))
    (503317 'move' ret[503312] call_tmp[597938])
    (503314 return ret[503312])
  }
  function !=[29616](const  ref arg x[29613]:byteIndex[28170], const in arg y[29619]:int(64)[13]) : bool[10] "inline" "no doc" "resolved"
  {
    val ret[503339]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[597973]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597976 'move' call_tmp[597973](29624 call _cast[39462] x[29613]))
    const-val call_tmp[597978]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (597981 'move' call_tmp[597978](29627 call !=[435923] call_tmp[597973] y[29619]))
    (503344 'move' ret[503339] call_tmp[597978])
    (503341 return ret[503339])
  }
  function validateEncoding[986551](const in arg buf[986553]:c_ptr(uint(8))[937334], const in arg len[986555]:int(64)[13], ref arg error_out[1767640]:Error[167938]) : int(64)[13] throws "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[986559]:int(64)[13] "dead after last mention" "RVV" "temp"
    val numCodepoints[986585]:int(64)[13] "dead at end of block" "insert auto destroy"
    (986916 'move' numCodepoints[986585] 0)
    const-val call_tmp[986591]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (986593 'move' call_tmp[986591](986596 call chpl_enc_validate_buf[986648] buf[986553] len[986555] numCodepoints[986585]))
    const-val call_tmp[986600]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[986673]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (986679 'move' coerce_tmp[986673](986675 'cast' int(32)[95] 0))
    (986602 'move' call_tmp[986600](986605 call !=[435901] call_tmp[986591] coerce_tmp[986673]))
    const-val call_tmp[986608]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (986610 'move' call_tmp[986608] call_tmp[986600])
    if call_tmp[986608]
    {
      const-val call_tmp[986617]:owned DecodeError[966192] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      val new_temp[986698]:DecodeError[168094] "dead after last mention" "temp"
      (986700 'move' new_temp[986698](986686 call _new[965553]))
      const-val initTemp[986707]:owned DecodeError[966192] "dead after last mention" "delay instantiation" "temp"
      (986710 call init[965652] initTemp[986707] new_temp[986698])
      (986619 'move' call_tmp[986617] initTemp[986707])
      val call_tmp[986623]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[986724]:owned Error[966369] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1788941]:owned Error[966369] "temp"
      (986726 call _cast[966454] call_tmp[986617] ret_tmp[1788941])
      (1788944 'move' coerce_tmp[986724] ret_tmp[1788941])
      const-val _formal_tmp_in_err[986903]:owned Error[966369] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (986907 'move' _formal_tmp_in_err[986903] coerce_tmp[986724])
      (986625 'move' call_tmp[986623](986628 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[986903]))
      {
        val castedError[1767643]:Error[167938] "temp"
        (1767649 'move' castedError[1767643] call_tmp[986623])
        (1767651 '=' error_out[1767640] castedError[1767643])
        gotoErrorHandlingReturn _end_validateEncoding[986642] _end_validateEncoding[986642]
      }
    }
    (986913 'move' ret[986559] numCodepoints[986585])
    gotoReturn _end_validateEncoding[986642] _end_validateEncoding[986642]
    label _end_validateEncoding[986642]
    (986644 return ret[986559])
  }
  function createStringWithBorrowedBuffer[29899](const  ref arg x[29896]:string[26], ref arg _retArg[1775193]:_ref(string)[937850]) : void[4] "fn returns via _retArg" "inline" "resolved" "fn synchronization free"
  {
    const-val ret[503433]:string[26] "dead after last mention" "RVV" "temp"
    val ret[29902]:string[26] "dead at end of block" "insert auto destroy"
    (954196 call init[30760] ret[29902])
    ref call_tmp[598070]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
    (598073 'move' call_tmp[598070](29910 call cachedNumCodepoints[757849] ret[29902]))
    ref call_tmp[598077]:_ref(int(64))[936483] "dead after last mention" "maybe param" "reference to a const" "temp"
    (598080 'move' call_tmp[598077](29914 call cachedNumCodepoints[757849] x[29896]))
    const-val coerce_tmp[948778]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (948782 'move' coerce_tmp[948778](948780 'deref' call_tmp[598077]))
    (29917 call =[435238] call_tmp[598070] coerce_tmp[948778])
    (29924 call initWithBorrowedBuffer[948785] ret[29902] x[29896])
    (503438 'move' ret[503433] ret[29902])
    gotoReturn _end_createStringWithBorrowedBuffer[503431] _end_createStringWithBorrowedBuffer[503431]
    label _end_createStringWithBorrowedBuffer[503431]
    (1775195 '=' _retArg[1775193] ret[503433])
    (1775197 return _void[55])
  }
  function chpl_createStringWithLiteral[30029](const in arg x[30026]:c_string[19], const in arg length[30032]:int(64)[13], const in arg numCodepoints[30036]:int(64)[13], ref arg _retArg[1785903]:_ref(string)[937850]) : void[4] "fn returns via _retArg" "no doc" "resolved"
  {
    const-val ret[503471]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[598121]:uint(8)[100] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[598126]:c_ptr(uint(8))[937334] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[598131]:c_ptr(uint(8))[937334] "dead after last mention" "expr temp" "maybe param" "temp"
    (598134 'move' call_tmp[598131](30048 call _cast[39392] x[30026]))
    const-val call_tmp[598136]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598139 'move' call_tmp[598136](30055 call +[949577] length[30032]))
    const-val call_tmp[598141]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1786077]:string[26] "temp"
    (30060 call chpl_createStringWithBorrowedBufferNV[30626] call_tmp[598131] length[30032] call_tmp[598136] numCodepoints[30036] ret_tmp[1786077])
    (1786080 'move' call_tmp[598141] ret_tmp[1786077])
    (503476 'move' ret[503471] call_tmp[598141])
    (1785905 '=' _retArg[1785903] ret[503471])
    (1785907 return _void[55])
  }
  function createStringWithOwnedBuffer[30207](const in arg x[30204]:c_string[19], const in arg length[30213]:int(64)[13], ref arg error_out[1766496]:Error[167938], ref arg _retArg[1785927]:_ref(string)[937850]) : void[4] throws "fn returns via _retArg" "inline" "resolved"
  {
    const-val ret[503511]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[598170]:c_ptr(uint(8))[937334] "dead after last mention" "expr temp" "maybe param" "temp"
    (598173 'move' call_tmp[598170](30219 call _cast[39392] x[30204]))
    const-val call_tmp[598175]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598178 'move' call_tmp[598175](30226 call +[949577] length[30213]))
    const-val call_tmp[598180]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[1766501]:Error[167938] "error variable" "temp"
    (1766503 'move' error[1766501] nil[44])
    const-val ret_tmp[1785933]:string[26] "temp"
    (30229 call createStringWithOwnedBuffer[30271] call_tmp[598170] length[30213] call_tmp[598175] error[1766501] ret_tmp[1785933])
    (1785936 'move' call_tmp[598180] ret_tmp[1785933])
    val errorExists[2054637]:bool[10] "temp"
    (2054642 'move' errorExists[2054637](2054639 '!=' error[1766501] nil[44]))
    if errorExists[2054637]
    {
      (1766507 '=' error_out[1766496] error[1766501])
      gotoErrorHandlingReturn _endcreateStringWithOwnedBuffer[1766498] _endcreateStringWithOwnedBuffer[1766498]
    }
    (503516 'move' ret[503511] call_tmp[598180])
    label _endcreateStringWithOwnedBuffer[1766498]
    (1785929 '=' _retArg[1785927] ret[503511])
    (1785931 return _void[55])
  }
  function createStringWithOwnedBuffer_default_length[986513](const in arg x[986515]:c_string[19], ref arg error_out[1767636]:Error[167938]) : int(64)[13] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "resolved"
  {
    val ret[986517]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val length[986522]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (986529 'move' length[986522](986526 call size[22358] x[986515]))
    (986533 'move' ret[986517] length[986522])
    label _endcreateStringWithOwnedBuffer_default_length[1767638]
    (986520 return ret[986517])
  }
  function createStringWithOwnedBuffer[30271](const in arg x[30268]:c_ptr(uint(8))[937334], const in arg length[30274]:int(64)[13], const in arg size[30278]:int(64)[13], ref arg error_out[1766515]:Error[167938], ref arg _retArg[1785939]:_ref(string)[937850]) : void[4] throws "fn returns via _retArg" "inline" "resolved"
  {
    const-val ret[503529]:string[26] "dead after last mention" "RVV" "temp"
    val ret[30282]:string[26] "dead at end of block" "insert auto destroy"
    (986920 call init[30760] ret[30282])
    ref call_tmp[598194]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
    (598197 'move' call_tmp[598194](30288 call cachedNumCodepoints[757849] ret[30282]))
    const-val call_tmp[598199]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val error[1766518]:Error[167938] "error variable" "temp"
    (1766520 'move' error[1766518] nil[44])
    (598202 'move' call_tmp[598199](30295 call validateEncoding[986551] x[30268] length[30274] error[1766518]))
    val errorExists[2054645]:bool[10] "temp"
    (2054650 'move' errorExists[2054645](2054647 '!=' error[1766518] nil[44]))
    if errorExists[2054645]
    {
      (1766524 '=' error_out[1766515] error[1766518])
      (1798305 call chpl__autoDestroy[1494420] ret[30282])
      gotoErrorHandlingReturn _end_createStringWithOwnedBuffer[503527] _end_createStringWithOwnedBuffer[503527]
    }
    (30296 call =[435238] call_tmp[598194] call_tmp[598199])
    (30305 call initWithOwnedBuffer[978806] ret[30282] x[30268] length[30274] size[30278])
    (503534 'move' ret[503529] ret[30282])
    gotoReturn _end_createStringWithOwnedBuffer[503527] _end_createStringWithOwnedBuffer[503527]
    label _end_createStringWithOwnedBuffer[503527]
    (1785941 '=' _retArg[1785939] ret[503529])
    (1785943 return _void[55])
  }
  function createStringWithNewBuffer[30410](const in arg x[30407]:c_string[19], const in arg length[30416]:int(64)[13], const in arg policy[30423]:decodePolicy[173656], ref arg error_out[1766532]:Error[167938], ref arg _retArg[1786029]:_ref(string)[937850]) : void[4] throws "fn returns via _retArg" "inline" "resolved"
  {
    const-val ret[503569]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[598230]:c_ptr(uint(8))[937334] "dead after last mention" "expr temp" "maybe param" "temp"
    (598233 'move' call_tmp[598230](30429 call _cast[39392] x[30407]))
    const-val call_tmp[598235]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598238 'move' call_tmp[598235](30436 call +[949577] length[30416]))
    const-val call_tmp[598240]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[1766537]:Error[167938] "error variable" "temp"
    (1766539 'move' error[1766537] nil[44])
    const-val ret_tmp[1786035]:string[26] "temp"
    (30440 call createStringWithNewBuffer[30490] call_tmp[598230] length[30416] call_tmp[598235] policy[30423] error[1766537] ret_tmp[1786035])
    (1786038 'move' call_tmp[598240] ret_tmp[1786035])
    val errorExists[2054653]:bool[10] "temp"
    (2054658 'move' errorExists[2054653](2054655 '!=' error[1766537] nil[44]))
    if errorExists[2054653]
    {
      (1766543 '=' error_out[1766532] error[1766537])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[1766534] _endcreateStringWithNewBuffer[1766534]
    }
    (503574 'move' ret[503569] call_tmp[598240])
    label _endcreateStringWithNewBuffer[1766534]
    (1786031 '=' _retArg[1786029] ret[503569])
    (1786033 return _void[55])
  }
  function createStringWithNewBuffer_default_length[963957](const in arg x[963959]:c_string[19], ref arg error_out[1767624]:Error[167938]) : int(64)[13] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "resolved" "fn synchronization free"
  {
    val ret[963961]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val length[963966]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (963973 'move' length[963966](963970 call size[22358] x[963959]))
    (963977 'move' ret[963961] length[963966])
    label _endcreateStringWithNewBuffer_default_length[1767626]
    (963964 return ret[963961])
  }
  function createStringWithNewBuffer[30490](const in arg x[30487]:c_ptr(uint(8))[937334], const in arg length[30493]:int(64)[13], const in arg size[30500]:int(64)[13], const in arg policy[30507]:decodePolicy[173656], ref arg error_out[1766551]:Error[167938], ref arg _retArg[1786059]:_ref(string)[937850]) : void[4] throws "fn returns via _retArg" "inline" "resolved"
  {
    const-val ret[503587]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[598252]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[1766556]:Error[167938] "error variable" "temp"
    (1766558 'move' error[1766556] nil[44])
    const-val ret_tmp[1788151]:string[26] "temp"
    (30515 call decodeByteBuffer[173892] x[30487] length[30493] policy[30507] error[1766556] ret_tmp[1788151])
    (1788154 'move' call_tmp[598252] ret_tmp[1788151])
    val errorExists[2054661]:bool[10] "temp"
    (2054666 'move' errorExists[2054661](2054663 '!=' error[1766556] nil[44]))
    if errorExists[2054661]
    {
      (1766562 '=' error_out[1766551] error[1766556])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[1766553] _endcreateStringWithNewBuffer[1766553]
    }
    (503592 'move' ret[503587] call_tmp[598252])
    label _endcreateStringWithNewBuffer[1766553]
    (1786061 '=' _retArg[1786059] ret[503587])
    (1786063 return _void[55])
  }
  function _ref(string)[937850].init[30760](ref arg this[32625]:_ref(string)[937850]) : void[4] "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val tmp[453700]:int(64)[13] "dead after last mention" "temp"
    (453703 'move' tmp[453700] 0)
    (453705 '.=' this[32625] buffLen[30719] tmp[453700])
    val tmp[453710]:int(64)[13] "dead after last mention" "temp"
    (453713 'move' tmp[453710] 0)
    (453715 '.=' this[32625] buffSize[30725] tmp[453710])
    val tmp[453720]:int(64)[13] "dead after last mention" "temp"
    (453723 'move' tmp[453720] 0)
    (453725 '.=' this[32625] cachedNumCodepoints[30731] tmp[453720])
    val tmp[453730]:c_ptr(uint(8))[937334] "dead after last mention" "temp"
    val init_coerce_tmp[954210]:c_ptr(uint(8))[937334] "dead after last mention" "temp"
    (954213 'move' init_coerce_tmp[954210](954220 'cast' c_ptr(uint(8))[937334] nil[44]))
    (453733 'move' tmp[453730] init_coerce_tmp[954210])
    (453735 '.=' this[32625] buff[30737] tmp[453730])
    val tmp[453740]:bool[10] "dead after last mention" "temp"
    (453743 'move' tmp[453740] 1)
    (453745 '.=' this[32625] isOwned[30743] tmp[453740])
    val tmp[453750]:bool[10] "dead after last mention" "temp"
    (453753 'move' tmp[453750] 0)
    (453755 '.=' this[32625] hasEscapes[30749] tmp[453750])
    val tmp[453760]:int(32)[95] "dead after last mention" "temp"
    (453762 'move' tmp[453760] chpl_nodeID[208152])
    (453764 '.=' this[32625] locale_id[30754] tmp[453760])
    (503603 return _void[55])
  }
  function _ref(string)[937850].init=[30771](ref arg this[32629]:_ref(string)[937850], const  ref arg s[30768]:string[26]) : void[4] "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val tmp[453769]:int(64)[13] "dead after last mention" "temp"
    (453772 'move' tmp[453769] 0)
    (453774 '.=' this[32629] buffLen[30719] tmp[453769])
    val tmp[453779]:int(64)[13] "dead after last mention" "temp"
    (453782 'move' tmp[453779] 0)
    (453784 '.=' this[32629] buffSize[30725] tmp[453779])
    val tmp[453789]:int(64)[13] "dead after last mention" "temp"
    (453792 'move' tmp[453789] 0)
    (453794 '.=' this[32629] cachedNumCodepoints[30731] tmp[453789])
    val tmp[453799]:c_ptr(uint(8))[937334] "dead after last mention" "temp"
    val init_coerce_tmp[954230]:c_ptr(uint(8))[937334] "dead after last mention" "temp"
    (954233 'move' init_coerce_tmp[954230](957184 'cast' c_ptr(uint(8))[937334] nil[44]))
    (453802 'move' tmp[453799] init_coerce_tmp[954230])
    (453804 '.=' this[32629] buff[30737] tmp[453799])
    val tmp[453809]:bool[10] "dead after last mention" "temp"
    (453812 'move' tmp[453809] 1)
    (453814 '.=' this[32629] isOwned[30743] tmp[453809])
    val tmp[453819]:bool[10] "dead after last mention" "temp"
    (453822 'move' tmp[453819] 0)
    (453824 '.=' this[32629] hasEscapes[30749] tmp[453819])
    val tmp[453829]:int(32)[95] "dead after last mention" "temp"
    (453831 'move' tmp[453829] chpl_nodeID[208152])
    (453833 '.=' this[32629] locale_id[30754] tmp[453829])
    (30785 call initWithNewBuffer[954240] this[32629] s[30768])
    (503605 return _void[55])
  }
  function _ref(string)[937850].deinit[30831](ref arg this[32637]:_ref(string)[937850]) : void[4] "destructor" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    ref tmp[417235]:_ref(bool)[937110] "dead after last mention" "maybe param" "temp"
    (417246 'move' tmp[417235](369575 call isOwned[757901] this[32637]))
    val tmp[552742]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[552743]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[598293]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[937915]:bool[10] "dead after last mention" "const" "temp"
    (937917 'move' tmp[937915](937919 'deref' tmp[417235]))
    (598296 'move' call_tmp[598293] tmp[937915])
    (552748 'move' tmp[552743] call_tmp[598293])
    if tmp[552743]
    {
      const-val tmp[552750]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      ref call_tmp[598300]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "temp"
      (598303 'move' call_tmp[598300](30835 call buff[757875] this[32637]))
      const-val call_tmp[598305]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[938019]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (938023 'move' coerce_tmp[938019](938021 'deref' call_tmp[598300]))
      (598308 'move' call_tmp[598305](30839 call !=[937942] coerce_tmp[938019] nil[44]))
      (552752 'move' tmp[552750] call_tmp[598305])
      (552757 'move' tmp[552742] tmp[552750])
    }
    {
      (552762 'move' tmp[552742] 0)
    }
    const-val call_tmp[598310]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (598313 'move' call_tmp[598310] tmp[552742])
    if call_tmp[598310]
    {
      const-val tmp[30865]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
      ref call_tmp[598317]:_ref(int(32))[936537] "dead after last mention" "maybe param" "temp"
      (598320 'move' call_tmp[598317](30847 call locale_id[757953] this[32637]))
      const-val call_tmp[598322]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val coerce_tmp[938037]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (938041 'move' coerce_tmp[938037](938039 'deref' call_tmp[598317]))
      (598325 'move' call_tmp[598322](30852 call chpl_buildLocaleID[209412] coerce_tmp[938037] c_sublocid_any[89875]))
      const-val call_tmp[598327]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
      (598330 'move' call_tmp[598327](30853 'chpl_on_locale_num' call_tmp[598322]))
      (30867 'move' tmp[30865] call_tmp[598327])
      val isdirect[2033956]:bool[10] "temp"
      (2033961 'move' isdirect[2033956](2033958 call chpl_doDirectExecuteOn[187423] tmp[30865]))
      if isdirect[2033956]
      {
        (2033965 call on_fn[933697] this[32637])
      }
      {
        val _args_foron_fn[2033980]:_class_localson_fn[2033972] "temp"
        (2033984 'move' _args_foron_fn[2033980](2033982 'stack allocate class' _class_localson_fn[2033972]))
        (2033986 '.=' _args_foron_fn[2033980] _0_tmp[2033975] tmp[30865])
        ref tmp[2033990]:string[26] "temp"
        (2033994 'move' tmp[2033990](2033992 'set reference' this[32637]))
        (2033996 '.=' _args_foron_fn[2033980] _1_this[2033977] tmp[2033990])
        val _args_vforon_fn[2034000]:c_void_ptr[149] "temp"
        (2034004 'move' _args_vforon_fn[2034000](2034002 'cast_to_void_star' _args_foron_fn[2033980]))
        val _args_sizeon_fn[2034006]:int(64)[13] "temp"
        (2034010 'move' _args_sizeon_fn[2034006](2034008 'sizeof_bundle' _class_localson_fn[2033972]))
        on(2034042 call wrapon_fn[2034012] tmp[30865] _args_vforon_fn[2034000] _args_sizeon_fn[2034006] _args_foron_fn[2033980])
      }
      {
      }
    }
    (503609 return _void[55])
  }
  function _ref(string)[937850].chpl__serialize[30883](const  ref arg this[32641]:_ref(string)[937850], ref arg _retArg[1786179]:_ref(__serializeHelper)[937928]) : void[4] "fn returns via _retArg" "method" "primary method" "resolved"
  {
    const-val ret[503613]:__serializeHelper[28086] "dead after last mention" "RVV" "temp"
    val data[30886]:chpl__inPlaceBuffer[28019] "dead at end of block" "insert auto destroy"
    ref call_tmp[598341]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
    (598344 'move' call_tmp[598341](369582 call buffLen[757797] this[32641]))
    const-val call_tmp[598346]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1751044]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1751048 'move' coerce_tmp[1751044](1751046 'deref' call_tmp[598341]))
    const-val coerce_tmp[1751050]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1751056 'move' coerce_tmp[1751050](1751052 'cast' int(64)[13] CHPL_SHORT_STRING_SIZE[28013]))
    (598349 'move' call_tmp[598346](30893 call <=[436923] coerce_tmp[1751044] coerce_tmp[1751050]))
    const-val call_tmp[598351]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (598354 'move' call_tmp[598351] call_tmp[598346])
    if call_tmp[598351]
    {
      val call_tmp[598356]:c_ptr(uint(8))[937334] "dead after last mention" "expr temp" "maybe param" "temp"
      (598359 'move' call_tmp[598356](30899 call chpl__getInPlaceBufferDataForWrite[28042] data[30886]))
      ref call_tmp[598363]:_ref(int(32))[936537] "dead after last mention" "maybe param" "temp"
      (598366 'move' call_tmp[598363](369589 call locale_id[757953] this[32641]))
      ref call_tmp[598370]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "temp"
      (598373 'move' call_tmp[598370](369594 call buff[757875] this[32641]))
      ref call_tmp[598377]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
      (598380 'move' call_tmp[598377](369599 call buffLen[757797] this[32641]))
      const-val coerce_tmp[1751063]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1751067 'move' coerce_tmp[1751063](1751065 'deref' call_tmp[598363]))
      const-val coerce_tmp[1751069]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1751075 'move' coerce_tmp[1751069](1751071 'cast' int(64)[13] coerce_tmp[1751063]))
      val coerce_tmp[1751077]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1751081 'move' coerce_tmp[1751077](1751079 'deref' call_tmp[598370]))
      const-val coerce_tmp[1751083]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1751087 'move' coerce_tmp[1751083](1751085 'deref' call_tmp[598377]))
      (30904 call chpl_string_comm_get[953961] call_tmp[598356] coerce_tmp[1751069] coerce_tmp[1751077] coerce_tmp[1751083])
    }
    ref call_tmp[598384]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
    (598387 'move' call_tmp[598384](369605 call buffLen[757797] this[32641]))
    ref call_tmp[598391]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "temp"
    (598394 'move' call_tmp[598391](369610 call buff[757875] this[32641]))
    ref call_tmp[598398]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
    (598401 'move' call_tmp[598398](369615 call buffSize[757823] this[32641]))
    ref call_tmp[598405]:_ref(int(32))[936537] "dead after last mention" "maybe param" "temp"
    (598408 'move' call_tmp[598405](369620 call locale_id[757953] this[32641]))
    ref call_tmp[598412]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
    (598415 'move' call_tmp[598412](369626 call cachedNumCodepoints[757849] this[32641]))
    const-val call_tmp[598417]:__serializeHelper[28086] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1751096]:__serializeHelper[28086] "dead after last mention" "temp"
    const-val coerce_tmp[1751123]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1751127 'move' coerce_tmp[1751123](1751125 'deref' call_tmp[598384]))
    val coerce_tmp[1751129]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1751133 'move' coerce_tmp[1751129](1751131 'deref' call_tmp[598391]))
    const-val coerce_tmp[1751135]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1751139 'move' coerce_tmp[1751135](1751137 'deref' call_tmp[598398]))
    const-val coerce_tmp[1751141]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1751145 'move' coerce_tmp[1751141](1751143 'deref' call_tmp[598405]))
    const-val coerce_tmp[1751147]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1751151 'move' coerce_tmp[1751147](1751149 'deref' call_tmp[598412]))
    (1751099 call init[753541] initTemp[1751096] coerce_tmp[1751123] coerce_tmp[1751129] coerce_tmp[1751135] coerce_tmp[1751141] data[30886] coerce_tmp[1751147])
    (598420 'move' call_tmp[598417] initTemp[1751096])
    (503618 'move' ret[503613] call_tmp[598417])
    gotoReturn _end_chpl__serialize[503611] _end_chpl__serialize[503611]
    label _end_chpl__serialize[503611]
    (1786181 '=' _retArg[1786179] ret[503613])
    (1786183 return _void[55])
  }
  function chpl__deserialize[1751162](const  ref arg data[1751168]:__serializeHelper[28086], ref arg _retArg[1798095]:_ref(string)[937850]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val _formal_type_tmp_[1763867]:string[26] "temp"
    val ret[1751170]:string[26] "dead after last mention" "RVV" "temp"
    ref call_tmp[1751178]:_ref(int(32))[936537] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1751180 'move' call_tmp[1751178](1751183 call locale_id[753463] data[1751168]))
    const-val call_tmp[1751186]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1751422]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1751426 'move' coerce_tmp[1751422](1751424 'deref' call_tmp[1751178]))
    (1751188 'move' call_tmp[1751186](1751191 call !=[435901] coerce_tmp[1751422] chpl_nodeID[208152]))
    const-val call_tmp[1751194]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1751196 'move' call_tmp[1751194] call_tmp[1751186])
    if call_tmp[1751194]
    {
      ref call_tmp[1751203]:_ref(int(64))[936483] "dead after last mention" "maybe param" "reference to a const" "temp"
      (1751205 'move' call_tmp[1751203](1751208 call buffLen[753385] data[1751168]))
      const-val call_tmp[1751211]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1751430]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1751434 'move' coerce_tmp[1751430](1751432 'deref' call_tmp[1751203]))
      const-val coerce_tmp[1751436]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1751442 'move' coerce_tmp[1751436](1751438 'cast' int(64)[13] CHPL_SHORT_STRING_SIZE[28013]))
      (1751213 'move' call_tmp[1751211](1751216 call <=[436923] coerce_tmp[1751430] coerce_tmp[1751436]))
      const-val call_tmp[1751219]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1751221 'move' call_tmp[1751219] call_tmp[1751211])
      if call_tmp[1751219]
      {
        ref call_tmp[1751228]:_ref(chpl__inPlaceBuffer)[967351] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1751230 'move' call_tmp[1751228](1751233 call shortData[753489] data[1751168]))
        val call_tmp[1751236]:c_ptr(uint(8))[937334] "dead after last mention" "expr temp" "maybe param" "temp"
        (1751238 'move' call_tmp[1751236](1751241 call chpl__getInPlaceBufferData[28030] call_tmp[1751228]))
        ref call_tmp[1751243]:_ref(int(64))[936483] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1751245 'move' call_tmp[1751243](1751248 call buffLen[753385] data[1751168]))
        ref call_tmp[1751251]:_ref(int(64))[936483] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1751253 'move' call_tmp[1751251](1751256 call size[753437] data[1751168]))
        ref call_tmp[1751259]:_ref(int(64))[936483] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1751261 'move' call_tmp[1751259](1751264 call cachedNumCodepoints[753515] data[1751168]))
        const-val call_tmp[1751267]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val coerce_tmp[1751450]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1751454 'move' coerce_tmp[1751450](1751452 'deref' call_tmp[1751243]))
        const-val coerce_tmp[1751456]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1751460 'move' coerce_tmp[1751456](1751458 'deref' call_tmp[1751251]))
        const-val coerce_tmp[1751462]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1751466 'move' coerce_tmp[1751462](1751464 'deref' call_tmp[1751259]))
        const-val ret_tmp[1786065]:string[26] "temp"
        (1751272 call chpl_createStringWithNewBufferNV[30579] call_tmp[1751236] coerce_tmp[1751450] coerce_tmp[1751456] coerce_tmp[1751462] ret_tmp[1786065])
        (1786068 'move' call_tmp[1751267] ret_tmp[1786065])
        (1751277 'move' ret[1751170] call_tmp[1751267])
        gotoReturn _end_chpl__deserialize[1751416] _end_chpl__deserialize[1751416]
      }
      {
        ref call_tmp[1751284]:_ref(int(32))[936537] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1751286 'move' call_tmp[1751284](1751289 call locale_id[753463] data[1751168]))
        ref call_tmp[1751292]:_ref(c_ptr(uint(8)))[937343] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1751294 'move' call_tmp[1751292](1751297 call buff[753411] data[1751168]))
        ref call_tmp[1751300]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1751302 'move' call_tmp[1751300](1751305 call buffLen[753385] data[1751168]))
        val call_tmp[1751308]:c_ptr(uint(8))[937334] "dead at end of block" "maybe param" "temp"
        const-val coerce_tmp[1751740]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1751744 'move' coerce_tmp[1751740](1751742 'deref' call_tmp[1751284]))
        const-val coerce_tmp[1751746]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1751752 'move' coerce_tmp[1751746](1751748 'cast' int(64)[13] coerce_tmp[1751740]))
        val coerce_tmp[1751754]:c_ptr(uint(8))[937334] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1751758 'move' coerce_tmp[1751754](1751756 'deref' call_tmp[1751292]))
        const-val coerce_tmp[1751760]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1751764 'move' coerce_tmp[1751760](1751762 'deref' call_tmp[1751300]))
        (1751310 'move' call_tmp[1751308](1751313 call bufferCopyRemote[172784] coerce_tmp[1751746] coerce_tmp[1751754] coerce_tmp[1751760]))
        val localBuff[1751317]:c_ptr(uint(8))[937334] "dead at end of block" "insert auto destroy"
        (1751319 'move' localBuff[1751317](1751767 call chpl__initCopy[953941] call_tmp[1751308]))
        ref call_tmp[1751323]:_ref(int(64))[936483] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1751325 'move' call_tmp[1751323](1751328 call buffLen[753385] data[1751168]))
        ref call_tmp[1751331]:_ref(int(64))[936483] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1751333 'move' call_tmp[1751331](1751336 call size[753437] data[1751168]))
        ref call_tmp[1751339]:_ref(int(64))[936483] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1751341 'move' call_tmp[1751339](1751344 call cachedNumCodepoints[753515] data[1751168]))
        const-val call_tmp[1751347]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val coerce_tmp[1751773]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1751777 'move' coerce_tmp[1751773](1751775 'deref' call_tmp[1751323]))
        const-val coerce_tmp[1751779]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1751783 'move' coerce_tmp[1751779](1751781 'deref' call_tmp[1751331]))
        const-val coerce_tmp[1751785]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1751789 'move' coerce_tmp[1751785](1751787 'deref' call_tmp[1751339]))
        const-val ret_tmp[1786161]:string[26] "temp"
        (1751352 call chpl_createStringWithOwnedBufferNV[30673] localBuff[1751317] coerce_tmp[1751773] coerce_tmp[1751779] coerce_tmp[1751785] ret_tmp[1786161])
        (1786164 'move' call_tmp[1751347] ret_tmp[1786161])
        (1751357 'move' ret[1751170] call_tmp[1751347])
        gotoReturn _end_chpl__deserialize[1751416] _end_chpl__deserialize[1751416]
      }
    }
    {
      ref call_tmp[1751367]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "reference to a const" "temp"
      (1751369 'move' call_tmp[1751367](1751372 call buff[753411] data[1751168]))
      ref call_tmp[1751375]:_ref(int(64))[936483] "dead after last mention" "maybe param" "reference to a const" "temp"
      (1751377 'move' call_tmp[1751375](1751380 call buffLen[753385] data[1751168]))
      ref call_tmp[1751383]:_ref(int(64))[936483] "dead after last mention" "maybe param" "reference to a const" "temp"
      (1751385 'move' call_tmp[1751383](1751388 call size[753437] data[1751168]))
      ref call_tmp[1751391]:_ref(int(64))[936483] "dead after last mention" "maybe param" "reference to a const" "temp"
      (1751393 'move' call_tmp[1751391](1751396 call cachedNumCodepoints[753515] data[1751168]))
      const-val call_tmp[1751399]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val coerce_tmp[1751796]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1751800 'move' coerce_tmp[1751796](1751798 'deref' call_tmp[1751367]))
      const-val coerce_tmp[1751802]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1751806 'move' coerce_tmp[1751802](1751804 'deref' call_tmp[1751375]))
      const-val coerce_tmp[1751808]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1751812 'move' coerce_tmp[1751808](1751810 'deref' call_tmp[1751383]))
      const-val coerce_tmp[1751814]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1751818 'move' coerce_tmp[1751814](1751816 'deref' call_tmp[1751391]))
      const-val ret_tmp[1786083]:string[26] "temp"
      (1751404 call chpl_createStringWithBorrowedBufferNV[30626] coerce_tmp[1751796] coerce_tmp[1751802] coerce_tmp[1751808] coerce_tmp[1751814] ret_tmp[1786083])
      (1786086 'move' call_tmp[1751399] ret_tmp[1786083])
      (1751409 'move' ret[1751170] call_tmp[1751399])
      gotoReturn _end_chpl__deserialize[1751416] _end_chpl__deserialize[1751416]
    }
    label _end_chpl__deserialize[1751416]
    (1798097 '=' _retArg[1798095] ret[1751170])
    (1798099 return _void[55])
  }
  function _ref(string)[937850].isASCII[31046](const  ref arg this[32649]:_ref(string)[937850]) : bool[10] "inline" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[503645]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[598581]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598584 'move' call_tmp[598581](31049 call numCodepoints[32823] this[32649]))
    const-val call_tmp[598588]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598591 'move' call_tmp[598588](31053 call numBytes[32807] this[32649]))
    const-val call_tmp[598593]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (598596 'move' call_tmp[598593](31056 call ==[435539] call_tmp[598581] call_tmp[598588]))
    (503650 'move' ret[503645] call_tmp[598593])
    (503647 return ret[503645])
  }
  function _ref(string)[937850].byteIndices[31065](const  ref arg this[32653]:_ref(string)[937850], ref arg _retArg[1786263]:_ref(range(int(64),bounded,false))[1026769]) : void[4] "fn returns via _retArg" "inline" "method" "primary method" "no parens" "resolved" "fn synchronization free"
  {
    const-val ret[503654]:range(int(64),bounded,false)[1026725] "dead after last mention" "RVV" "temp"
    const-val call_tmp[598600]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598603 'move' call_tmp[598600](31069 call numBytes[32807] this[32653]))
    const-val call_tmp[598605]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598608 'move' call_tmp[598605](31073 call -[962137] call_tmp[598600]))
    const-val call_tmp[598610]:range(int(64),bounded,false)[1026725] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1788403]:range(int(64),bounded,false)[1026725] "temp"
    (31075 call chpl_build_bounded_range[455048] 0 call_tmp[598605] ret_tmp[1788403])
    (1788406 'move' call_tmp[598610] ret_tmp[1788403])
    (503659 'move' ret[503654] call_tmp[598610])
    (1786265 '=' _retArg[1786263] ret[503654])
    (1786267 return _void[55])
  }
  function _ref(string)[937850]._cpIndexLen[31106](const  ref arg this[32661]:_ref(string)[937850], const  ref arg start[31103]:byteIndex[28170], ref arg _retArg[1786293]:_ref(_ir__cpIndexLen__ref_string)[1122413]) : void[4] "fn returns via _retArg" "inline" "iterator fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _ir[1947696]:_ir__cpIndexLen__ref_string[1122302] "temp"
    (1947698 '.=' _ir[1947696] F0_this[1946837] this[32661])
    (1947702 '.=' _ir[1947696] F1_start[1946841] start[31103])
    (1947706 '=' _retArg[1786293] _ir[1947696])
    (1947709 return _void[55])
  }
  type _ic__cpIndexLen__ref_string[1122296] val super[1122297]:object[22] "super class" val more[1122299]:int(64)[13] ref F0_this[1946835]:_ref(string)[937850] ref F1_start[1946839]:_ref(byteIndex)[948670] val F2_localThis[1946843]:string[26] val F3__iterator[1946845]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108477] val F4_call_tmp[1946847]:range(int(64),bounded,false)[1026725] val F5__iterator[1946849]:_ic_these_range_int64_t_bounded_F[1096614] val F6__iterator[1946851]:_ic_chpl_bytes__ref_string[1108167] val F7__indexOfInterest[1946853]:(int(64),uint(8))[1110951] val F8_call_tmp[1946855]:byteIndex[28170] const-val F9_ret_tmp[1946857]:byteIndex[28170] const-val F10_ret_tmp[1946859]:(int(32),byteIndex,int(64))[1122053] val F11_i[1946861]:int(64)[13] const-val F12_ret_tmp[1946863]:(syserr,int(32),int(32))[964531] const F13_tmp[1946865]:(syserr,int(32),int(32))[964531] const F14_nBytes[1946867]:int(32)[95] val F15_call_tmp[1946869]:byteIndex[28170] const-val F16_ret_tmp[1946871]:byteIndex[28170] const-val F17_ret_tmp[1946873]:(int(32),byteIndex,int(64))[1122053] val F18_call_tmp[1946875]:(int(32),byteIndex,int(64))[1122053] val F19_call_tmp[1946877]:(int(32),byteIndex,int(64))[1122053] val value[1946879]:(int(32),byteIndex,int(64))[1122053]
  type _ir__cpIndexLen__ref_string[1122302] ref F0_this[1946837]:_ref(string)[937850] ref F1_start[1946841]:_ref(byteIndex)[948670]
  function _getIterator[1122311](const  ref arg ir[1122313]:_ir__cpIndexLen__ref_string[1122302]) : _ic__cpIndexLen__ref_string[1122296] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[1122420]:_ic__cpIndexLen__ref_string[1122296] "dead after last mention" "RVV" "temp"
    val _ic_[1122303]:_ic__cpIndexLen__ref_string[1122296] "dead after last mention" "temp"
    const-val call_tmp[1122427]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1122430 'move' call_tmp[1122427](1122442 'sizeof_bundle' _ic__cpIndexLen__ref_string[1122296]))
    const-val cast_tmp[1122445]:c_void_ptr[149] "dead after last mention" "temp"
    (1122447 'move' cast_tmp[1122445](1122308 call chpl_here_alloc[187742] call_tmp[1122427] 33))
    (1122316 'move' _ic_[1122303](1122449 'cast' _ic__cpIndexLen__ref_string[1122296] cast_tmp[1122445]))
    (1122318 'setcid' _ic_[1122303])
    (1122425 'move' ret[1122420] _ic_[1122303])
    (1947712 '.=' ret[1122420] more[1122299] 1)
    ref tmp[1947716]:_ref(string)[937850] "temp"
    (1947721 'move' tmp[1947716](1947717 '.v' ir[1122313] F0_this[1946837]))
    (1947723 '.=' ret[1122420] F0_this[1946835] tmp[1947716])
    ref tmp[1947727]:_ref(byteIndex)[948670] "temp"
    (1947732 'move' tmp[1947727](1947728 '.v' ir[1122313] F1_start[1946841]))
    (1947734 '.=' ret[1122420] F1_start[1946839] tmp[1947727])
    (1122422 return ret[1122420])
  }
  function _ref(string)[937850]._cpIndexLen_default_start[1121942](const  ref arg this[1121945]:_ref(string)[937850], ref arg _retArg[1790910]:_ref(byteIndex)[948670]) : void[4] "compiler generated" "default actual function" "fn returns via _retArg" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved"
  {
    const-val ret[1121948]:byteIndex[28170] "dead after last mention" "RVV" "maybe param" "temp"
    const-val start[1121953]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    const-val ret_tmp[1787297]:byteIndex[28170] "temp"
    (1121957 call _cast[39483] 0 ret_tmp[1787297])
    (1787300 'move' start[1121953] ret_tmp[1787297])
    (1121964 'move' ret[1121948] start[1121953])
    (1790912 '=' _retArg[1790910] ret[1121948])
    (1790914 return _void[55])
  }
  function _ref(string)[937850]._indexLen[31451](const  ref arg this[32665]:_ref(string)[937850], const  ref arg start[31448]:byteIndex[28170], ref arg _retArg[1786309]:_ref(_ir__indexLen__ref_string)[1121333]) : void[4] "fn returns via _retArg" "inline" "iterator fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[1948145]:_ir__indexLen__ref_string[1121222] "temp"
    (1948147 '.=' _ir[1948145] F0_this[1947740] this[32665])
    (1948151 '.=' _ir[1948145] F1_start[1947744] start[31448])
    (1948155 '=' _retArg[1786309] _ir[1948145])
    (1948158 return _void[55])
  }
  type _ic__indexLen__ref_string[1121216] val super[1121217]:object[22] "super class" val more[1121219]:int(64)[13] ref F0_this[1947738]:_ref(string)[937850] ref F1_start[1947742]:_ref(byteIndex)[948670] val F2_localThis[1947746]:string[26] val F3_i[1947748]:int(64)[13] val F4_j[1947750]:int(64)[13] val F5_call_tmp[1947752]:byteIndex[28170] const-val F6_ret_tmp[1947754]:byteIndex[28170] const-val F7_ret_tmp[1947756]:(byteIndex,int(64))[1121144] val value[1947758]:(byteIndex,int(64))[1121144]
  type _ir__indexLen__ref_string[1121222] ref F0_this[1947740]:_ref(string)[937850] ref F1_start[1947744]:_ref(byteIndex)[948670]
  function _getIterator[1121231](const  ref arg ir[1121233]:_ir__indexLen__ref_string[1121222]) : _ic__indexLen__ref_string[1121216] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1121340]:_ic__indexLen__ref_string[1121216] "dead after last mention" "RVV" "temp"
    val _ic_[1121223]:_ic__indexLen__ref_string[1121216] "dead after last mention" "temp"
    const-val call_tmp[1121347]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1121350 'move' call_tmp[1121347](1121362 'sizeof_bundle' _ic__indexLen__ref_string[1121216]))
    const-val cast_tmp[1121365]:c_void_ptr[149] "dead after last mention" "temp"
    (1121367 'move' cast_tmp[1121365](1121228 call chpl_here_alloc[187742] call_tmp[1121347] 32))
    (1121236 'move' _ic_[1121223](1121369 'cast' _ic__indexLen__ref_string[1121216] cast_tmp[1121365]))
    (1121238 'setcid' _ic_[1121223])
    (1121345 'move' ret[1121340] _ic_[1121223])
    (1948161 '.=' ret[1121340] more[1121219] 1)
    ref tmp[1948165]:_ref(string)[937850] "temp"
    (1948170 'move' tmp[1948165](1948166 '.v' ir[1121233] F0_this[1947740]))
    (1948172 '.=' ret[1121340] F0_this[1947738] tmp[1948165])
    ref tmp[1948176]:_ref(byteIndex)[948670] "temp"
    (1948181 'move' tmp[1948176](1948177 '.v' ir[1121233] F1_start[1947744]))
    (1948183 '.=' ret[1121340] F1_start[1947742] tmp[1948176])
    (1121342 return ret[1121340])
  }
  function _ref(string)[937850]._indexLen_default_start[1120914](const  ref arg this[1120917]:_ref(string)[937850], ref arg _retArg[1790862]:_ref(byteIndex)[948670]) : void[4] "compiler generated" "default actual function" "fn returns via _retArg" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "fn synchronization free"
  {
    const-val ret[1120920]:byteIndex[28170] "dead after last mention" "RVV" "maybe param" "temp"
    const-val start[1120925]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    const-val ret_tmp[1787291]:byteIndex[28170] "temp"
    (1120929 call _cast[39483] 0 ret_tmp[1787291])
    (1787294 'move' start[1120925] ret_tmp[1787291])
    (1120936 'move' ret[1120920] start[1120925])
    (1790864 '=' _retArg[1790862] ret[1120920])
    (1790866 return _void[55])
  }
  function _ref(string)[937850].doSearchUTF8[1106022](const  ref arg this[1106026]:_ref(string)[937850], const  ref arg needle[1106028]:string[26], const in arg region[1106030]:range(byteIndex,bounded,false)[1025703]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[1106038]:int(64)[13] "dead after last mention" "RVV" "temp"
    val ret[1106055]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1106057 'move' ret[1106055] -1)
    const-val tmp[1106062]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1106064]:_ref(int(32))[936537] "dead after last mention" "maybe param" "temp"
    (1106066 'move' call_tmp[1106064](1106069 call locale_id[757953] this[1106026]))
    const-val call_tmp[1106072]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1107261]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1107265 'move' coerce_tmp[1107261](1107263 'deref' call_tmp[1106064]))
    (1106074 'move' call_tmp[1106072](1106077 call chpl_buildLocaleID[209412] coerce_tmp[1107261] c_sublocid_any[89875]))
    const-val call_tmp[1106080]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    (1106082 'move' call_tmp[1106080](1106084 'chpl_on_locale_num' call_tmp[1106072]))
    (1106086 'move' tmp[1106062] call_tmp[1106080])
    val needle_data[2032667]:__serializeHelper[28086] "temp"
    (2032669 call chpl__serialize[30883] needle[1106028] needle_data[2032667])
    val isdirect[2039484]:bool[10] "temp"
    (2039489 'move' isdirect[2039484](2039486 call chpl_doDirectExecuteOn[187423] tmp[1106062]))
    if isdirect[2039484]
    {
      (2039493 call on_fn[1106093] needle_data[2032667] this[1106026] region[1106030] ret[1106055])
    }
    {
      val _args_foron_fn[2039517]:_class_localson_fn[2039503] "temp"
      (2039521 'move' _args_foron_fn[2039517](2039519 'stack allocate class' _class_localson_fn[2039503]))
      (2039523 '.=' _args_foron_fn[2039517] _0_tmp[2039506] tmp[1106062])
      (2039527 '.=' _args_foron_fn[2039517] _1_needle_data[2039508] needle_data[2032667])
      ref tmp[2039531]:string[26] "temp"
      (2039535 'move' tmp[2039531](2039533 'set reference' this[1106026]))
      (2039537 '.=' _args_foron_fn[2039517] _2_this[2039510] tmp[2039531])
      (2039541 '.=' _args_foron_fn[2039517] _3_region[2039512] region[1106030])
      ref tmp[2039545]:int(64)[13] "temp"
      (2039549 'move' tmp[2039545](2039547 'set reference' ret[1106055]))
      (2039551 '.=' _args_foron_fn[2039517] _4_ret[2039514] tmp[2039545])
      val _args_vforon_fn[2039555]:c_void_ptr[149] "temp"
      (2039559 'move' _args_vforon_fn[2039555](2039557 'cast_to_void_star' _args_foron_fn[2039517]))
      val _args_sizeon_fn[2039561]:int(64)[13] "temp"
      (2039565 'move' _args_sizeon_fn[2039561](2039563 'sizeof_bundle' _class_localson_fn[2039503]))
      on(2039621 call wrapon_fn[2039567] tmp[1106062] _args_vforon_fn[2039555] _args_sizeon_fn[2039561] _args_foron_fn[2039517])
    }
    {
    }
    (1107206 'move' ret[1106038] ret[1106055])
    gotoReturn _end_doSearchUTF8[1107214] _end_doSearchUTF8[1107214]
    label _end_doSearchUTF8[1107214]
    (1107216 return ret[1106038])
  }
  function _ref(string)[937850].doSearchUTF8[1182718](const  ref arg this[1182722]:_ref(string)[937850], const  ref arg needle[1182724]:string[26], const in arg region[1182726]:range(byteIndex,boundedLow,false)[1143314]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[1182734]:int(64)[13] "dead after last mention" "RVV" "temp"
    val ret[1182751]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1182753 'move' ret[1182751] -1)
    const-val tmp[1182758]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1182760]:_ref(int(32))[936537] "dead after last mention" "maybe param" "temp"
    (1182762 'move' call_tmp[1182760](1182765 call locale_id[757953] this[1182722]))
    const-val call_tmp[1182768]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1183957]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1183961 'move' coerce_tmp[1183957](1183959 'deref' call_tmp[1182760]))
    (1182770 'move' call_tmp[1182768](1182773 call chpl_buildLocaleID[209412] coerce_tmp[1183957] c_sublocid_any[89875]))
    const-val call_tmp[1182776]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    (1182778 'move' call_tmp[1182776](1182780 'chpl_on_locale_num' call_tmp[1182768]))
    (1182782 'move' tmp[1182758] call_tmp[1182776])
    val needle_data[2032923]:__serializeHelper[28086] "temp"
    (2032925 call chpl__serialize[30883] needle[1182724] needle_data[2032923])
    val isdirect[2040052]:bool[10] "temp"
    (2040057 'move' isdirect[2040052](2040054 call chpl_doDirectExecuteOn[187423] tmp[1182758]))
    if isdirect[2040052]
    {
      (2040061 call on_fn[1182789] needle_data[2032923] this[1182722] region[1182726] ret[1182751])
    }
    {
      val _args_foron_fn[2040085]:_class_localson_fn[2040071] "temp"
      (2040089 'move' _args_foron_fn[2040085](2040087 'stack allocate class' _class_localson_fn[2040071]))
      (2040091 '.=' _args_foron_fn[2040085] _0_tmp[2040074] tmp[1182758])
      (2040095 '.=' _args_foron_fn[2040085] _1_needle_data[2040076] needle_data[2032923])
      ref tmp[2040099]:string[26] "temp"
      (2040103 'move' tmp[2040099](2040101 'set reference' this[1182722]))
      (2040105 '.=' _args_foron_fn[2040085] _2_this[2040078] tmp[2040099])
      (2040109 '.=' _args_foron_fn[2040085] _3_region[2040080] region[1182726])
      ref tmp[2040113]:int(64)[13] "temp"
      (2040117 'move' tmp[2040113](2040115 'set reference' ret[1182751]))
      (2040119 '.=' _args_foron_fn[2040085] _4_ret[2040082] tmp[2040113])
      val _args_vforon_fn[2040123]:c_void_ptr[149] "temp"
      (2040127 'move' _args_vforon_fn[2040123](2040125 'cast_to_void_star' _args_foron_fn[2040085]))
      val _args_sizeon_fn[2040129]:int(64)[13] "temp"
      (2040133 'move' _args_sizeon_fn[2040129](2040131 'sizeof_bundle' _class_localson_fn[2040071]))
      on(2040189 call wrapon_fn[2040135] tmp[1182758] _args_vforon_fn[2040123] _args_sizeon_fn[2040129] _args_foron_fn[2040085])
    }
    {
    }
    (1183902 'move' ret[1182734] ret[1182751])
    gotoReturn _end_doSearchUTF8[1183910] _end_doSearchUTF8[1183910]
    label _end_doSearchUTF8[1183910]
    (1183912 return ret[1182734])
  }
  function _ref(string)[937850].buffLen[757797](ref arg this[757801]:_ref(string)[937850]) ref : _ref(int(64))[936483] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[757811]:_ref(int(64))[936483] "dead after last mention" "RVV" "temp"
    ref call_tmp[757818]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
    (757821 'move' call_tmp[757818](757805 '.' this[757801] buffLen[30719]))
    (757816 'move' ret[757811] call_tmp[757818])
    (757813 return ret[757811])
  }
  function _ref(string)[937850].buffSize[757823](ref arg this[757827]:_ref(string)[937850]) ref : _ref(int(64))[936483] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[757837]:_ref(int(64))[936483] "dead after last mention" "RVV" "temp"
    ref call_tmp[757844]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
    (757847 'move' call_tmp[757844](757831 '.' this[757827] buffSize[30725]))
    (757842 'move' ret[757837] call_tmp[757844])
    (757839 return ret[757837])
  }
  function _ref(string)[937850].cachedNumCodepoints[757849](ref arg this[757853]:_ref(string)[937850]) ref : _ref(int(64))[936483] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[757863]:_ref(int(64))[936483] "dead after last mention" "RVV" "temp"
    ref call_tmp[757870]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
    (757873 'move' call_tmp[757870](757857 '.' this[757853] cachedNumCodepoints[30731]))
    (757868 'move' ret[757863] call_tmp[757870])
    (757865 return ret[757863])
  }
  function _ref(string)[937850].buff[757875](ref arg this[757879]:_ref(string)[937850]) ref : _ref(c_ptr(uint(8)))[937343] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[757889]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "RVV" "temp"
    ref call_tmp[757896]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "temp"
    (757899 'move' call_tmp[757896](757883 '.' this[757879] buff[30737]))
    (757894 'move' ret[757889] call_tmp[757896])
    (757891 return ret[757889])
  }
  function _ref(string)[937850].isOwned[757901](ref arg this[757905]:_ref(string)[937850]) ref : _ref(bool)[937110] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[757915]:_ref(bool)[937110] "dead after last mention" "RVV" "temp"
    ref call_tmp[757922]:_ref(bool)[937110] "dead after last mention" "maybe param" "temp"
    (757925 'move' call_tmp[757922](757909 '.' this[757905] isOwned[30743]))
    (757920 'move' ret[757915] call_tmp[757922])
    (757917 return ret[757915])
  }
  function _ref(string)[937850].hasEscapes[757927](ref arg this[757931]:_ref(string)[937850]) ref : _ref(bool)[937110] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[757941]:_ref(bool)[937110] "dead after last mention" "RVV" "temp"
    ref call_tmp[757948]:_ref(bool)[937110] "dead after last mention" "maybe param" "temp"
    (757951 'move' call_tmp[757948](757935 '.' this[757931] hasEscapes[30749]))
    (757946 'move' ret[757941] call_tmp[757948])
    (757943 return ret[757941])
  }
  function _ref(string)[937850].locale_id[757953](ref arg this[757957]:_ref(string)[937850]) ref : _ref(int(32))[936537] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[757967]:_ref(int(32))[936537] "dead after last mention" "RVV" "temp"
    ref call_tmp[757974]:_ref(int(32))[936537] "dead after last mention" "maybe param" "temp"
    (757977 'move' call_tmp[757974](757961 '.' this[757957] locale_id[30754]))
    (757972 'move' ret[757967] call_tmp[757974])
    (757969 return ret[757967])
  }
  type string[26] val buffLen[30719]:int(64)[13] val buffSize[30725]:int(64)[13] val cachedNumCodepoints[30731]:int(64)[13] val buff[30737]:c_ptr(uint(8))[937334] val isOwned[30743]:bool[10] val hasEscapes[30749]:bool[10] val locale_id[30754]:int(32)[95]
  function _ref(string)[937850].size[32769](const  ref arg this[32771]:_ref(string)[937850]) : int(64)[13] "inline" "method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[503792]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[599584]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (599587 'move' call_tmp[599584](369764 call numCodepoints[32823] this[32771]))
    (503797 'move' ret[503792] call_tmp[599584])
    (503794 return ret[503792])
  }
  function _ref(string)[937850].indices[32785](const  ref arg this[32787]:_ref(string)[937850], ref arg _retArg[1786355]:_ref(range(int(64),bounded,false))[1026769]) : void[4] "fn returns via _retArg" "inline" "method" "no parens" "resolved" "fn synchronization free"
  {
    const-val ret[503801]:range(int(64),bounded,false)[1026725] "dead after last mention" "RVV" "temp"
    const-val call_tmp[599591]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (599594 'move' call_tmp[599591](369768 call size[32769] this[32787]))
    const-val call_tmp[599596]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (599599 'move' call_tmp[599596](32795 call -[962137] call_tmp[599591]))
    const-val call_tmp[599601]:range(int(64),bounded,false)[1026725] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1788409]:range(int(64),bounded,false)[1026725] "temp"
    (32797 call chpl_build_bounded_range[455048] 0 call_tmp[599596] ret_tmp[1788409])
    (1788412 'move' call_tmp[599601] ret_tmp[1788409])
    (503806 'move' ret[503801] call_tmp[599601])
    (1786357 '=' _retArg[1786355] ret[503801])
    (1786359 return _void[55])
  }
  function _ref(string)[937850].numBytes[32807](const  ref arg this[32809]:_ref(string)[937850]) : int(64)[13] "inline" "method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[503810]:int(64)[13] "dead after last mention" "RVV" "temp"
    ref call_tmp[599608]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
    (599611 'move' call_tmp[599608](369773 call buffLen[757797] this[32809]))
    (503815 'move' ret[503810](503814 'deref' call_tmp[599608]))
    (503812 return ret[503810])
  }
  function _ref(string)[937850].numCodepoints[32823](const  ref arg this[32825]:_ref(string)[937850]) : int(64)[13] "inline" "method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[503819]:int(64)[13] "dead after last mention" "RVV" "temp"
    ref call_tmp[599615]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (599618 'move' call_tmp[599615](32831 call cachedNumCodepoints[757849] this[32825]))
    const-val n[32834]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1019672]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1019676 'move' coerce_tmp[1019672](1019674 'deref' call_tmp[599615]))
    (1798371 '=' n[32834] coerce_tmp[1019672])
    (540204 'noop')
    {
      const-val call_tmp[599625]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (599628 'move' call_tmp[599625](32844 call countNumCodepoints[181334] this[32825]))
      const-val call_tmp[599630]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (599633 'move' call_tmp[599630](32845 call !=[435923] n[32834] call_tmp[599625]))
      const-val call_tmp[599635]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (599638 'move' call_tmp[599635] call_tmp[599630])
      if call_tmp[599635]
      {
        (32866 call halt[154067] "Encountered corrupt string metadata")
      }
    }
    (503824 'move' ret[503819] n[32834])
    gotoReturn _end_numCodepoints[503817] _end_numCodepoints[503817]
    label _end_numCodepoints[503817]
    (503821 return ret[503819])
  }
  function _ref(string)[937850].localize[32886](const  ref arg this[32888]:_ref(string)[937850], ref arg _retArg[1786505]:_ref(string)[937850]) : void[4] "fn returns via _retArg" "inline" "method" "resolved" "fn synchronization free"
  {
    val ret[503830]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[553151]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[553164]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    ref call_tmp[599652]:_ref(int(32))[936537] "dead after last mention" "maybe param" "temp"
    (599655 'move' call_tmp[599652](32896 call locale_id[757953] this[32888]))
    const-val call_tmp[599657]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[948631]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (948635 'move' coerce_tmp[948631](948633 'deref' call_tmp[599652]))
    (599660 'move' call_tmp[599657](32900 call ==[435517] coerce_tmp[948631] chpl_nodeID[208152]))
    (553166 'move' tmp[553164] call_tmp[599657])
    (553171 'move' tmp[553151] tmp[553164])
    const-val call_tmp[599662]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (599665 'move' call_tmp[599662] tmp[553151])
    if call_tmp[599662]
    {
      const-val call_tmp[599667]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1775187]:string[26] "temp"
      (32907 call createStringWithBorrowedBuffer[29899] this[32888] ret_tmp[1775187])
      (1775190 'move' call_tmp[599667] ret_tmp[1775187])
      (957189 'move' ret[503830] call_tmp[599667])
      gotoReturn _end_localize[503828] _end_localize[503828]
    }
    {
      const-val x[32913]:string[26] "dead at end of block" "const" "insert auto destroy"
      (540206 call init=[30771] x[32913] this[32888])
      (957192 'move' ret[503830] x[32913])
      gotoReturn _end_localize[503828] _end_localize[503828]
    }
    label _end_localize[503828]
    (1786507 '=' _retArg[1786505] ret[503830])
    (1786509 return _void[55])
  }
  function _ref(string)[937850].c_str[32932](const  ref arg this[32934]:_ref(string)[937850]) : c_string[19] "inline" "method" "resolved"
  {
    val ret[503848]:c_string[19] "dead after last mention" "RVV" "temp"
    const-val call_tmp[599672]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (599675 'move' call_tmp[599672](32943 call getCStr[957195] this[32934]))
    (957980 'move' ret[503848] call_tmp[599672])
    (503850 return ret[503848])
  }
  function _ic_chpl_bytes__ref_string[1108167].advance[1108193](const in arg this[1108195]:_ic_chpl_bytes__ref_string[1108167]) : void[4] "auto ii" "method" "resolved"
  {
    const-val more[1950204]:int(64)[13]
    (1950232 'move' more[1950204](1950229 '.v' this[1108195] more[1108170]))
    const-val tmp[1950207]:bool[10] "temp"
    (1950214 'move' tmp[1950207](1950211 '==' more[1950204] 2))
    if tmp[1950207]
    {
      gotoIterResume _jump_2[1950196] _jump_2[1950196]
    }
    const-val tmp[1950219]:bool[10] "temp"
    (1950224 'move' tmp[1950219](1950221 '==' more[1950204] -2))
    if tmp[1950219]
    {
      gotoIterResume _jump_break_2[1950198] _jump_break_2[1950198]
    }
    val ret[503912]:_ir_chpl_bytes__ref_string[1108173] "dead at end of block" "RVV" "temp"
    const-val call_tmp[600044]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1786373]:string[26] "temp"
    ref tmp[1948207]:_ref(string)[937850] "temp"
    (1948212 'move' tmp[1948207](1948209 '.v' this[1108195] F0_this[1948187]))
    (33588 call localize[32886] tmp[1948207] ret_tmp[1786373])
    (1786376 'move' call_tmp[600044] ret_tmp[1786373])
    val tmp[1948214]:string[26] "temp"
    (540256 'move' tmp[1948214] call_tmp[600044])
    (1948216 '.=' this[1108195] F1_localThis[1948191] tmp[1948214])
    val _indexOfInterest[33614]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    ref call_tmp[600051]:_ref(int(64))[936483] "dead at end of block" "maybe param" "temp"
    ref tmp[1948220]:_ref(string)[937850] "temp"
    (1948225 'move' tmp[1948220](1948222 '.' this[1108195] F1_localThis[1948191]))
    (600054 'move' call_tmp[600051](33630 call buffLen[757797] tmp[1948220]))
    const-val call_tmp[600056]:_ir_chpl_direct_counted_range_iter[1103707] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1108326]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1108330 'move' coerce_tmp[1108326](1108328 'deref' call_tmp[600051]))
    const-val ret_tmp[1788683]:_ir_chpl_direct_counted_range_iter[1103707] "temp"
    (33634 call chpl_direct_counted_range_iter[457907] 0 coerce_tmp[1108326] ret_tmp[1788683])
    (1788686 'move' call_tmp[600056] ret_tmp[1788683])
    val tmp[1948227]:_ic_chpl_direct_counted_range_iter[1103701] "temp"
    (33624 'move' tmp[1948227](33622 call _getIterator[1103716] call_tmp[600056]))
    (1948229 '.=' this[1108195] F2__iterator[1948193] tmp[1948227])
    val ret[1846346]:_ir_chpl_direct_counted_range_iter[1103707] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[1846348]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[1846352]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[1846354]:_ir_chpl_direct_counted_range_iter_helper[1103457] "temp"
    const-val low[1846459]:int(64)[13] "temp"
    ref tmp[1948233]:_ref(_ic_chpl_direct_counted_range_iter)[1103844] "temp"
    (1948238 'move' tmp[1948233](1948235 '.' this[1108195] F2__iterator[1948193]))
    (1846464 'move' low[1846459](1846461 '.v' tmp[1948233] F0_low[1960165]))
    const-val count[1846466]:int(64)[13] "temp"
    ref tmp[1948240]:_ref(_ic_chpl_direct_counted_range_iter)[1103844] "temp"
    (1948245 'move' tmp[1948240](1948242 '.' this[1108195] F2__iterator[1948193]))
    (1846471 'move' count[1846466](1846468 '.v' tmp[1948240] F1_count[1960169]))
    (1846357 call chpl_direct_counted_range_iter_helper[1102009] low[1846459] count[1846466] ret_tmp[1846354])
    (1846361 'move' call_tmp[1846352] ret_tmp[1846354])
    val tmp[1948247]:_ic_chpl_direct_counted_range_iter_helper[1103451] "temp"
    (1846364 'move' tmp[1948247](1846367 call _getIterator[1103466] call_tmp[1846352]))
    (1948249 '.=' this[1108195] F3__iterator[1948195] tmp[1948247])
    val ret[1909444]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead after last mention" "RVV" "temp"
    val call_tmp[1909446]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val tmp[1909448]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1909450]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    const-val call_tmp[1909452]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[1909869]:int(64)[13] "temp"
    ref tmp[1948253]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
    (1948258 'move' tmp[1948253](1948255 '.' this[1108195] F3__iterator[1948195]))
    (1909874 'move' count[1909869](1909871 '.v' tmp[1948253] F1_count[1964641]))
    (1909454 'move' call_tmp[1909452](1909457 call <[948309] count[1909869]))
    (1909459 'move' tmp[1909450] call_tmp[1909452])
    (1909462 'move' tmp[1909448] call_tmp[1909452])
    const-val call_tmp[1909465]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1909467 'move' call_tmp[1909465] call_tmp[1909452])
    if call_tmp[1909452]
    {
      (1909473 call boundsCheckHalt[210079] "With a negative count, the range must have a last index.")
    }
    val tmp[1909478]:2*int(64)[1039967] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
    const-val tmp[1909480]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1909482]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[1909876]:int(64)[13] "temp"
    ref tmp[1948260]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
    (1948265 'move' tmp[1948260](1948262 '.' this[1108195] F3__iterator[1948195]))
    (1909881 'move' count[1909876](1909878 '.v' tmp[1948260] F1_count[1964641]))
    (1909484 'move' call_tmp[1909482](1909487 call ==[435539] count[1909876] 0))
    (1909490 'move' tmp[1909480] call_tmp[1909482])
    if call_tmp[1909482]
    {
      const-val tmp[1909495]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      val call_tmp[1909497]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[1909499]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val low[1909883]:int(64)[13] "temp"
      ref tmp[1948267]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
      (1948272 'move' tmp[1948267](1948269 '.' this[1108195] F3__iterator[1948195]))
      (1909888 'move' low[1909883](1909885 '.v' tmp[1948267] F0_low[1964637]))
      (1909501 'move' call_tmp[1909499](1909504 call _cast[955945] low[1909883]))
      const-val call_tmp[1909506]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1909508]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1909510 'move' coerce_tmp[1909508](1909512 'cast' uint(64)[115] 1))
      (1909515 'move' call_tmp[1909506](1909518 call -[962104] call_tmp[1909499]))
      const-val call_tmp[1909520]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1909522 'move' call_tmp[1909520](1909525 call _cast[953454] call_tmp[1909506]))
      const-val ret_tmp[1909527]:2*int(64)[1039967] "temp"
      const-val low[1909890]:int(64)[13] "temp"
      ref tmp[1948274]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
      (1948279 'move' tmp[1948274](1948276 '.' this[1108195] F3__iterator[1948195]))
      (1909895 'move' low[1909890](1909892 '.v' tmp[1948274] F0_low[1964637]))
      (1909530 call _build_tuple[1039925] low[1909890] call_tmp[1909520] ret_tmp[1909527])
      (1909534 'move' tmp[1909495] ret_tmp[1909527])
      (1909537 'move' tmp[1909478] tmp[1909495])
    }
    {
      const-val tmp[1909541]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      val call_tmp[1909543]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[1909545]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val count[1909897]:int(64)[13] "temp"
      ref tmp[1948281]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
      (1948286 'move' tmp[1948281](1948283 '.' this[1108195] F3__iterator[1948195]))
      (1909902 'move' count[1909897](1909899 '.v' tmp[1948281] F1_count[1964641]))
      (1909547 'move' call_tmp[1909545] count[1909897])
      const-val call_tmp[1909550]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val count[1909904]:int(64)[13] "temp"
      ref tmp[1948288]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
      (1948293 'move' tmp[1948288](1948290 '.' this[1108195] F3__iterator[1948195]))
      (1909909 'move' count[1909904](1909906 '.v' tmp[1948288] F1_count[1964641]))
      (1909552 'move' call_tmp[1909550](1909555 call -[962137] count[1909904]))
      const-val call_tmp[1909557]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val low[1909911]:int(64)[13] "temp"
      ref tmp[1948295]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
      (1948300 'move' tmp[1948295](1948297 '.' this[1108195] F3__iterator[1948195]))
      (1909916 'move' low[1909911](1909913 '.v' tmp[1948295] F0_low[1964637]))
      (1909559 'move' call_tmp[1909557](1909562 call +[439547] low[1909911] call_tmp[1909550]))
      const-val ret_tmp[1909565]:2*int(64)[1039967] "temp"
      const-val low[1909918]:int(64)[13] "temp"
      ref tmp[1948302]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
      (1948307 'move' tmp[1948302](1948304 '.' this[1108195] F3__iterator[1948195]))
      (1909923 'move' low[1909918](1909920 '.v' tmp[1948302] F0_low[1964637]))
      (1909568 call _build_tuple[1039925] low[1909918] call_tmp[1909557] ret_tmp[1909565])
      (1909572 'move' tmp[1909541] ret_tmp[1909565])
      (1909575 'move' tmp[1909478] tmp[1909541])
    }
    const tmp[1948309]:2*int(64)[1039967] "temp"
    (1909579 '=' tmp[1948309] tmp[1909478])
    (1948311 '.=' this[1108195] F4_tmp[1948197] tmp[1948309])
    (1909582 'noop')
    1
    ref call_tmp[1909584]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
    ref tmp[1948315]:_ref(2*int(64))[1040040] "temp"
    (1948320 'move' tmp[1948315](1948317 '.' this[1108195] F4_tmp[1948197]))
    (1909586 'move' call_tmp[1909584](1909588 '.' tmp[1948315] x0[1039963]))
    const-val start[1909591]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1909593]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1909595 'move' coerce_tmp[1909593](1909597 'deref' call_tmp[1909584]))
    (1909599 '=' start[1909591] coerce_tmp[1909593])
    (1909602 'noop')
    ref call_tmp[1909603]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
    ref tmp[1948322]:_ref(2*int(64))[1040040] "temp"
    (1948327 'move' tmp[1948322](1948324 '.' this[1108195] F4_tmp[1948197]))
    (1909605 'move' call_tmp[1909603](1909607 '.' tmp[1948322] x1[1039965]))
    const-val end[1909610]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1909612]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1909614 'move' coerce_tmp[1909612](1909616 'deref' call_tmp[1909603]))
    (1909618 '=' end[1909610] coerce_tmp[1909612])
    (1909621 'noop')
    val _indexOfInterest[1909622]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[1909626]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[1909628]:_ir_chpl_direct_param_stride_range_iter[1103203] "temp"
    (1909631 call chpl_direct_param_stride_range_iter[1102435] coerce_tmp[1909593] coerce_tmp[1909612] ret_tmp[1909628])
    (1909635 'move' call_tmp[1909626] ret_tmp[1909628])
    val tmp[1948329]:_ic_chpl_direct_param_stride_range_iter[1103197] "temp"
    (1909638 'move' tmp[1948329](1909641 call _getIterator[1103212] call_tmp[1909626]))
    (1948331 '.=' this[1108195] F5__iterator[1948199] tmp[1948329])
    val ret[1909644]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead after last mention" "RVV" "temp"
    val call_tmp[1909646]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1909649 call chpl_range_check_stride[1102755])
    val call_tmp[1909652]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[1948335]:int(64)[13] "temp"
    (1909654 'move' tmp[1948335] 0)
    (1948337 '.=' this[1108195] F6_i[1948201] tmp[1948335])
    val call_tmp[1909657]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val default_arg_first[1909659]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[1909661]:int(64)[13] "temp"
    ref tmp[1948341]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103340] "temp"
    (1948346 'move' tmp[1948341](1948343 '.' this[1108195] F5__iterator[1948199]))
    (1909663 'move' low[1909661](1909665 '.v' tmp[1948341] F0_low[1966135]))
    (1909668 'move' default_arg_first[1909659](1909671 call chpl_checkIfRangeIterWillOverflow_default_first[1103109] low[1909661]))
    const-val default_arg_last[1909673]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[1909675]:int(64)[13] "temp"
    ref tmp[1948348]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103340] "temp"
    (1948353 'move' tmp[1948348](1948350 '.' this[1108195] F5__iterator[1948199]))
    (1909677 'move' high[1909675](1909679 '.v' tmp[1948348] F1_high[1966139]))
    (1909682 'move' default_arg_last[1909673](1909685 call chpl_checkIfRangeIterWillOverflow_default_last[1103137] high[1909675]))
    const-val _return_tmp_[1909687]:bool[10] "dead after last mention" "temp"
    const-val low[1909689]:int(64)[13] "temp"
    ref tmp[1948355]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103340] "temp"
    (1948360 'move' tmp[1948355](1948357 '.' this[1108195] F5__iterator[1948199]))
    (1909691 'move' low[1909689](1909693 '.v' tmp[1948355] F0_low[1966135]))
    const-val high[1909696]:int(64)[13] "temp"
    ref tmp[1948362]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103340] "temp"
    (1948367 'move' tmp[1948362](1948364 '.' this[1108195] F5__iterator[1948199]))
    (1909698 'move' high[1909696](1909700 '.v' tmp[1948362] F1_high[1966139]))
    (1909703 'move' _return_tmp_[1909687](1909706 call chpl_checkIfRangeIterWillOverflow[1095987] low[1909689] high[1909696] 1 default_arg_first[1909659] default_arg_last[1909673] 1))
    CForLoop[1909713]
    {
      const-val yret[1909742]:int(64)[13] "dead after last mention" "YVV" "temp"
      const-val tmp[1948369]:int(64)[13] "temp"
      (1948374 'move' tmp[1948369](1948371 '.v' this[1108195] F6_i[1948201]))
      (1909744 'move' yret[1909742] tmp[1948369])
      const-val _yieldedIndex[1909747]:int(64)[13] "temp"
      const-val tmp[1948376]:int(64)[13] "temp"
      (1948381 'move' tmp[1948376](1948378 '.v' this[1108195] F6_i[1948201]))
      (1909749 'move' _yieldedIndex[1909747] tmp[1948376])
      const-val i[1909753]:int(64)[13] "const" "index var" "insert auto destroy"
      (1909755 'move' i[1909753] _yieldedIndex[1909747])
      const-val yret[1909758]:int(64)[13] "dead after last mention" "YVV" "temp"
      (1909760 'move' yret[1909758] _yieldedIndex[1909747])
      const-val _yieldedIndex[1909788]:int(64)[13] "temp"
      (1909867 'move' _yieldedIndex[1909788] _yieldedIndex[1909747])
      const-val i[1909790]:int(64)[13] "const" "index var" "insert auto destroy"
      (1909792 'move' i[1909790] _yieldedIndex[1909788])
      const-val yret[1909795]:int(64)[13] "dead after last mention" "YVV" "temp"
      (1909797 'move' yret[1909795] _yieldedIndex[1909788])
      const-val _yieldedIndex[1909800]:int(64)[13] "temp"
      (1909802 'move' _yieldedIndex[1909800] _yieldedIndex[1909788])
      const-val i[1909805]:int(64)[13] "const" "index var" "insert auto destroy"
      (1909807 'move' i[1909805] _yieldedIndex[1909800])
      const-val yret[1909810]:uint(8)[100] "dead after last mention" "YVV" "temp"
      ref call_tmp[1909812]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
      ref _this_tmp_[1909814]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "temp"
      ref tmp[1948383]:_ref(string)[937850] "temp"
      (1948388 'move' tmp[1948383](1948385 '.' this[1108195] F1_localThis[1948191]))
      (1909816 'move' _this_tmp_[1909814](1909819 call buff[757875] tmp[1948383]))
      val coerce_tmp[1909821]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1909823 'move' coerce_tmp[1909821](1909825 'deref' _this_tmp_[1909814]))
      (1909827 'move' call_tmp[1909812](1909830 call this[954002] coerce_tmp[1909821] _yieldedIndex[1909800]))
      val tmp[1948390]:uint(8)[100] "temp"
      (1909835 'move' tmp[1948390](1909837 'deref' call_tmp[1909812]))
      (1948392 '.=' this[1108195] value[1948205] tmp[1948390])
      const-val tmp[1948396]:uint(8)[100] "temp"
      (1948401 'move' tmp[1948396](1948398 '.v' this[1108195] value[1948205]))
      (1909839 '=' yret[1909810] tmp[1948396])
      (1909842 'noop')
      (1950190 '.=' this[1108195] more[1108170] 2)
      gotoIterEnd _end[1950188] _end[1950188]
      label _jump_break_2[1950198]
      val tmp[1948403]:_ic_chpl_direct_param_stride_range_iter[1103197] "temp"
      (1948408 'move' tmp[1948403](1948405 '.v' this[1108195] F5__iterator[1948199]))
      (1909861 call _freeIterator[1103385] tmp[1948403])
      ref tmp[1948410]:_ref(2*int(64))[1040040] "temp"
      (1948415 'move' tmp[1948410](1948412 '.' this[1108195] F4_tmp[1948197]))
      (1909864 call chpl__autoDestroy[1567619] tmp[1948410])
      val tmp[1948417]:_ic_chpl_direct_counted_range_iter_helper[1103451] "temp"
      (1948422 'move' tmp[1948417](1948419 '.v' this[1108195] F3__iterator[1948195]))
      (1909848 call _freeIterator[1103635] tmp[1948417])
      val tmp[1948424]:_ic_chpl_direct_counted_range_iter[1103701] "temp"
      (1948429 'move' tmp[1948424](1948426 '.v' this[1108195] F2__iterator[1948193]))
      (1909851 call _freeIterator[1103885] tmp[1948424])
      ref tmp[1948431]:_ref(string)[937850] "temp"
      (1948436 'move' tmp[1948431](1948433 '.' this[1108195] F1_localThis[1948191]))
      (1909854 call chpl__autoDestroy[1494420] tmp[1948431])
      gotoReturn _endchpl_bytes[1770913] _endchpl_bytes[1770913]
      label _jump_2[1950196]
      {
        const-val tmp[1948438]:int(64)[13] "temp"
        ref tmp[1948444]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103340] "temp"
        (1948449 'move' tmp[1948444](1948446 '.' this[1108195] F5__iterator[1948199]))
        (1909717 'move' tmp[1948438](1909719 '.v' tmp[1948444] F0_low[1966135]))
        (1948440 '.=' this[1108195] F7_low[1948203] tmp[1948438])
        val tmp[1948451]:int(64)[13] "temp"
        const-val tmp[1948457]:int(64)[13] "temp"
        (1948462 'move' tmp[1948457](1948459 '.v' this[1108195] F7_low[1948203]))
        (1909722 '=' tmp[1948451] tmp[1948457])
        (1948453 '.=' this[1108195] F6_i[1948201] tmp[1948451])
      }
      {
        const-val high[1909726]:int(64)[13] "temp"
        ref tmp[1948464]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103340] "temp"
        (1948469 'move' tmp[1948464](1948466 '.' this[1108195] F5__iterator[1948199]))
        (1909728 'move' high[1909726](1909730 '.v' tmp[1948464] F1_high[1966139]))
        val tmp[1948471]:int(64)[13] "temp"
        (1948476 'move' tmp[1948471](1948473 '.v' this[1108195] F6_i[1948201]))
        (1909733 '<=' tmp[1948471] high[1909726])
      }
      {
        val call_tmp[1909737]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val tmp[1948478]:int(64)[13] "temp"
        (1948483 'move' tmp[1948478](1948480 '.v' this[1108195] F6_i[1948201]))
        (1909739 '+=' tmp[1948478] 1)
        (1948485 '.=' this[1108195] F6_i[1948201] tmp[1948478])
      }
    }
    label _endchpl_direct_param_stride_range_iter[1909776]
    val tmp[1948489]:_ic_chpl_direct_param_stride_range_iter[1103197] "temp"
    (1948494 'move' tmp[1948489](1948491 '.v' this[1108195] F5__iterator[1948199]))
    (1909779 call _freeIterator[1103385] tmp[1948489])
    ref tmp[1948496]:_ref(2*int(64))[1040040] "temp"
    (1948501 'move' tmp[1948496](1948498 '.' this[1108195] F4_tmp[1948197]))
    (1909782 call chpl__autoDestroy[1567619] tmp[1948496])
    label _endchpl_direct_counted_range_iter_helper[1909784]
    val tmp[1948503]:_ic_chpl_direct_counted_range_iter_helper[1103451] "temp"
    (1948508 'move' tmp[1948503](1948505 '.v' this[1108195] F3__iterator[1948195]))
    (1846393 call _freeIterator[1103635] tmp[1948503])
    label _endchpl_direct_counted_range_iter[1846395]
    val tmp[1948510]:_ic_chpl_direct_counted_range_iter[1103701] "temp"
    (1948515 'move' tmp[1948510](1948512 '.v' this[1108195] F2__iterator[1948193]))
    (1798387 call _freeIterator[1103885] tmp[1948510])
    ref tmp[1948517]:_ref(string)[937850] "temp"
    (1948522 'move' tmp[1948517](1948519 '.' this[1108195] F1_localThis[1948191]))
    (1798389 call chpl__autoDestroy[1494420] tmp[1948517])
    label _endchpl_bytes[1770913]
    (1950200 '.=' this[1108195] more[1108170] 0)
    label _end[1950188]
    (1950235 return _void[55])
  }
  function _ic_chpl_bytes__ref_string[1108167].zip1[1108202](const in arg this[1108204]:_ic_chpl_bytes__ref_string[1108167]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val ret[1948525]:_ir_chpl_bytes__ref_string[1108173] "dead at end of block" "RVV" "temp"
    const-val call_tmp[1948527]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1948529]:string[26] "temp"
    val localThis[1948531]:string[26] "dead at end of block" "insert auto destroy"
    val _indexOfInterest[1948533]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1948535]:_ic_chpl_direct_counted_range_iter[1103701] "dead at end of block" "expr temp" "temp"
    ref call_tmp[1948537]:_ref(int(64))[936483] "dead at end of block" "maybe param" "temp"
    const-val call_tmp[1948539]:_ir_chpl_direct_counted_range_iter[1103707] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1948541]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    const-val ret_tmp[1948543]:_ir_chpl_direct_counted_range_iter[1103707] "temp"
    val ret[1948545]:_ir_chpl_direct_counted_range_iter[1103707] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[1948547]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1948549]:_ic_chpl_direct_counted_range_iter_helper[1103451] "dead at end of block" "expr temp" "temp"
    const-val call_tmp[1948551]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[1948553]:_ir_chpl_direct_counted_range_iter_helper[1103457] "temp"
    const-val low[1948555]:int(64)[13] "temp"
    const-val count[1948557]:int(64)[13] "temp"
    val ret[1948559]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead after last mention" "RVV" "temp"
    val call_tmp[1948561]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val tmp[1948563]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1948565]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    const-val call_tmp[1948567]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[1948569]:int(64)[13] "temp"
    const-val call_tmp[1948571]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const tmp[1948573]:2*int(64)[1039967] "dead at end of block" "const" "insert auto destroy" "temp"
    val tmp[1948575]:2*int(64)[1039967] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
    const-val tmp[1948577]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1948579]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[1948581]:int(64)[13] "temp"
    val tmp[1948583]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[1948585]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1948587]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[1948589]:int(64)[13] "temp"
    val call_tmp[1948591]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[1948593]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val call_tmp[1948595]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[1948597]:2*int(64)[1039967] "temp"
    const-val low[1948599]:int(64)[13] "temp"
    val tmp[1948601]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[1948603]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1948605]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[1948607]:int(64)[13] "temp"
    val call_tmp[1948609]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[1948611]:int(64)[13] "temp"
    val call_tmp[1948613]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[1948615]:int(64)[13] "temp"
    val ret_tmp[1948617]:2*int(64)[1039967] "temp"
    const-val low[1948619]:int(64)[13] "temp"
    ref call_tmp[1948621]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
    const-val start[1948623]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1948625]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    ref call_tmp[1948627]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
    const-val end[1948629]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1948631]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val _indexOfInterest[1948633]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1948635]:_ic_chpl_direct_param_stride_range_iter[1103197] "dead at end of block" "expr temp" "temp"
    const-val call_tmp[1948637]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[1948639]:_ir_chpl_direct_param_stride_range_iter[1103203] "temp"
    val ret[1948641]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead after last mention" "RVV" "temp"
    val call_tmp[1948643]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val i[1948645]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[1948647]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1948649]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val default_arg_first[1948651]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[1948653]:int(64)[13] "temp"
    const-val default_arg_last[1948655]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[1948657]:int(64)[13] "temp"
    const-val _return_tmp_[1948659]:bool[10] "dead after last mention" "temp"
    const-val low[1948661]:int(64)[13] "temp"
    const-val high[1948663]:int(64)[13] "temp"
    val yret[1948665]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[1948667]:int(64)[13] "temp"
    const i[1948669]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[1948671]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[1948673]:int(64)[13] "temp"
    const i[1948675]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[1948677]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[1948679]:int(64)[13] "temp"
    const i[1948681]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[1948683]:uint(8)[100] "dead after last mention" "YVV" "temp"
    ref call_tmp[1948685]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1948687]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "temp"
    val coerce_tmp[1948689]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val coerce_tmp[1948691]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    const-val low[1948693]:int(64)[13] "temp"
    const-val high[1948695]:int(64)[13] "temp"
    val call_tmp[1948697]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    label _endchpl_direct_param_stride_range_iter[1948699]
    label _endchpl_direct_counted_range_iter_helper[1948701]
    label _endchpl_direct_counted_range_iter[1948703]
    label _endchpl_bytes[1948705]
    ref tmp[1948707]:_ref(string)[937850] "temp"
    val tmp[1948709]:string[26] "temp"
    ref tmp[1948711]:_ref(string)[937850] "temp"
    val tmp[1948713]:_ic_chpl_direct_counted_range_iter[1103701] "temp"
    ref tmp[1948715]:_ref(_ic_chpl_direct_counted_range_iter)[1103844] "temp"
    ref tmp[1948717]:_ref(_ic_chpl_direct_counted_range_iter)[1103844] "temp"
    val tmp[1948719]:_ic_chpl_direct_counted_range_iter_helper[1103451] "temp"
    ref tmp[1948721]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
    ref tmp[1948723]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
    ref tmp[1948725]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
    ref tmp[1948727]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
    ref tmp[1948729]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
    ref tmp[1948731]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
    ref tmp[1948733]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
    ref tmp[1948735]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
    const tmp[1948737]:2*int(64)[1039967] "temp"
    ref tmp[1948739]:_ref(2*int(64))[1040040] "temp"
    ref tmp[1948741]:_ref(2*int(64))[1040040] "temp"
    val tmp[1948743]:_ic_chpl_direct_param_stride_range_iter[1103197] "temp"
    val tmp[1948745]:int(64)[13] "temp"
    ref tmp[1948747]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103340] "temp"
    ref tmp[1948749]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103340] "temp"
    ref tmp[1948751]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103340] "temp"
    ref tmp[1948753]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103340] "temp"
    val tmp[1948755]:int(64)[13] "temp"
    val tmp[1948757]:int(64)[13] "temp"
    ref tmp[1948759]:_ref(string)[937850] "temp"
    val tmp[1948761]:uint(8)[100] "temp"
    val tmp[1948763]:uint(8)[100] "temp"
    val tmp[1948765]:_ic_chpl_direct_param_stride_range_iter[1103197] "temp"
    ref tmp[1948767]:_ref(2*int(64))[1040040] "temp"
    val tmp[1948769]:_ic_chpl_direct_counted_range_iter_helper[1103451] "temp"
    val tmp[1948771]:_ic_chpl_direct_counted_range_iter[1103701] "temp"
    ref tmp[1948773]:_ref(string)[937850] "temp"
    const-val tmp[1948775]:int(64)[13] "temp"
    ref tmp[1948777]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103340] "temp"
    val tmp[1948779]:int(64)[13] "temp"
    const-val tmp[1948781]:int(64)[13] "temp"
    ref tmp[1948783]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103340] "temp"
    val tmp[1948785]:int(64)[13] "temp"
    val tmp[1948787]:int(64)[13] "temp"
    val tmp[1948789]:_ic_chpl_direct_param_stride_range_iter[1103197] "temp"
    ref tmp[1948791]:_ref(2*int(64))[1040040] "temp"
    val tmp[1948793]:_ic_chpl_direct_counted_range_iter_helper[1103451] "temp"
    val tmp[1948795]:_ic_chpl_direct_counted_range_iter[1103701] "temp"
    ref tmp[1948797]:_ref(string)[937850] "temp"
    (1948799 'move' tmp[1948707](1948801 '.v' this[1108204] F0_this[1948187]))
    (1948805 call localize[32886] tmp[1948707] ret_tmp[1948529])
    (1948808 'move' call_tmp[1948527] ret_tmp[1948529])
    (1948811 'move' tmp[1948709] call_tmp[1948527])
    (1948814 '.=' this[1108204] F1_localThis[1948191] tmp[1948709])
    (1948818 'move' tmp[1948711](1948820 '.' this[1108204] F1_localThis[1948191]))
    (1948823 'move' call_tmp[1948537](1948826 call buffLen[757797] tmp[1948711]))
    (1948828 'move' coerce_tmp[1948541](1948830 'deref' call_tmp[1948537]))
    (1948833 call chpl_direct_counted_range_iter[457907] 0 coerce_tmp[1948541] ret_tmp[1948543])
    (1948837 'move' call_tmp[1948539] ret_tmp[1948543])
    (1948840 'move' tmp[1948713](1948843 call _getIterator[1103716] call_tmp[1948539]))
    (1948845 '.=' this[1108204] F2__iterator[1948193] tmp[1948713])
    (1948849 'move' tmp[1948715](1948851 '.' this[1108204] F2__iterator[1948193]))
    (1948854 'move' low[1948555](1948856 '.v' tmp[1948715] F0_low[1960165]))
    (1948859 'move' tmp[1948717](1948861 '.' this[1108204] F2__iterator[1948193]))
    (1948864 'move' count[1948557](1948866 '.v' tmp[1948717] F1_count[1960169]))
    (1948870 call chpl_direct_counted_range_iter_helper[1102009] low[1948555] count[1948557] ret_tmp[1948553])
    (1948874 'move' call_tmp[1948551] ret_tmp[1948553])
    (1948877 'move' tmp[1948719](1948880 call _getIterator[1103466] call_tmp[1948551]))
    (1948882 '.=' this[1108204] F3__iterator[1948195] tmp[1948719])
    (1948886 'move' tmp[1948721](1948888 '.' this[1108204] F3__iterator[1948195]))
    (1948891 'move' count[1948569](1948893 '.v' tmp[1948721] F1_count[1964641]))
    (1948896 'move' call_tmp[1948567](1948899 call <[948309] count[1948569]))
    (1948901 'move' tmp[1948565] call_tmp[1948567])
    (1948904 'move' tmp[1948563] call_tmp[1948567])
    (1948907 'move' call_tmp[1948571] call_tmp[1948567])
    if call_tmp[1948567]
    {
      (1948913 call boundsCheckHalt[210079] "With a negative count, the range must have a last index.")
    }
    (1948916 'move' tmp[1948723](1948918 '.' this[1108204] F3__iterator[1948195]))
    (1948921 'move' count[1948581](1948923 '.v' tmp[1948723] F1_count[1964641]))
    (1948926 'move' call_tmp[1948579](1948929 call ==[435539] count[1948581] 0))
    (1948932 'move' tmp[1948577] call_tmp[1948579])
    if call_tmp[1948579]
    {
      const-val tmp[1948937]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      val call_tmp[1948939]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[1948941]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val low[1948943]:int(64)[13] "temp"
      ref tmp[1948945]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
      (1948947 'move' tmp[1948945](1948949 '.' this[1108204] F3__iterator[1948195]))
      (1948952 'move' low[1948943](1948954 '.v' tmp[1948945] F0_low[1964637]))
      (1948957 'move' call_tmp[1948941](1948960 call _cast[955945] low[1948943]))
      const-val call_tmp[1948962]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1948964]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1948966 'move' coerce_tmp[1948964](1948968 'cast' uint(64)[115] 1))
      (1948971 'move' call_tmp[1948962](1948974 call -[962104] call_tmp[1948941]))
      const-val call_tmp[1948976]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1948978 'move' call_tmp[1948976](1948981 call _cast[953454] call_tmp[1948962]))
      const-val ret_tmp[1948983]:2*int(64)[1039967] "temp"
      const-val low[1948985]:int(64)[13] "temp"
      ref tmp[1948987]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
      (1948989 'move' tmp[1948987](1948991 '.' this[1108204] F3__iterator[1948195]))
      (1948994 'move' low[1948985](1948996 '.v' tmp[1948987] F0_low[1964637]))
      (1949000 call _build_tuple[1039925] low[1948985] call_tmp[1948976] ret_tmp[1948983])
      (1949004 'move' tmp[1948937] ret_tmp[1948983])
      (1949007 'move' tmp[1948575] tmp[1948937])
    }
    {
      const-val tmp[1949011]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      val call_tmp[1949013]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[1949015]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val count[1949017]:int(64)[13] "temp"
      ref tmp[1949019]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
      (1949021 'move' tmp[1949019](1949023 '.' this[1108204] F3__iterator[1948195]))
      (1949026 'move' count[1949017](1949028 '.v' tmp[1949019] F1_count[1964641]))
      (1949031 'move' call_tmp[1949015] count[1949017])
      const-val call_tmp[1949034]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val count[1949036]:int(64)[13] "temp"
      ref tmp[1949038]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
      (1949040 'move' tmp[1949038](1949042 '.' this[1108204] F3__iterator[1948195]))
      (1949045 'move' count[1949036](1949047 '.v' tmp[1949038] F1_count[1964641]))
      (1949050 'move' call_tmp[1949034](1949053 call -[962137] count[1949036]))
      const-val call_tmp[1949055]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val low[1949057]:int(64)[13] "temp"
      ref tmp[1949059]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
      (1949061 'move' tmp[1949059](1949063 '.' this[1108204] F3__iterator[1948195]))
      (1949066 'move' low[1949057](1949068 '.v' tmp[1949059] F0_low[1964637]))
      (1949071 'move' call_tmp[1949055](1949074 call +[439547] low[1949057] call_tmp[1949034]))
      const-val ret_tmp[1949077]:2*int(64)[1039967] "temp"
      const-val low[1949079]:int(64)[13] "temp"
      ref tmp[1949081]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
      (1949083 'move' tmp[1949081](1949085 '.' this[1108204] F3__iterator[1948195]))
      (1949088 'move' low[1949079](1949090 '.v' tmp[1949081] F0_low[1964637]))
      (1949094 call _build_tuple[1039925] low[1949079] call_tmp[1949055] ret_tmp[1949077])
      (1949098 'move' tmp[1949011] ret_tmp[1949077])
      (1949101 'move' tmp[1948575] tmp[1949011])
    }
    (1949105 '=' tmp[1948737] tmp[1948575])
    (1949108 '.=' this[1108204] F4_tmp[1948197] tmp[1948737])
    (1949112 'noop')
    1
    (1949114 'move' tmp[1948739](1949116 '.' this[1108204] F4_tmp[1948197]))
    (1949119 'move' call_tmp[1948621](1949121 '.' tmp[1948739] x0[1039963]))
    (1949124 'move' coerce_tmp[1948625](1949126 'deref' call_tmp[1948621]))
    (1949128 '=' start[1948623] coerce_tmp[1948625])
    (1949131 'noop')
    (1949132 'move' tmp[1948741](1949134 '.' this[1108204] F4_tmp[1948197]))
    (1949137 'move' call_tmp[1948627](1949139 '.' tmp[1948741] x1[1039965]))
    (1949142 'move' coerce_tmp[1948631](1949144 'deref' call_tmp[1948627]))
    (1949146 '=' end[1948629] coerce_tmp[1948631])
    (1949149 'noop')
    (1949151 call chpl_direct_param_stride_range_iter[1102435] coerce_tmp[1948625] coerce_tmp[1948631] ret_tmp[1948639])
    (1949155 'move' call_tmp[1948637] ret_tmp[1948639])
    (1949158 'move' tmp[1948743](1949161 call _getIterator[1103212] call_tmp[1948637]))
    (1949163 '.=' this[1108204] F5__iterator[1948199] tmp[1948743])
    (1949168 call chpl_range_check_stride[1102755])
    (1949169 'move' tmp[1948745] 0)
    (1949172 '.=' this[1108204] F6_i[1948201] tmp[1948745])
    (1949176 'move' tmp[1948747](1949178 '.' this[1108204] F5__iterator[1948199]))
    (1949181 'move' low[1948653](1949183 '.v' tmp[1948747] F0_low[1966135]))
    (1949186 'move' default_arg_first[1948651](1949189 call chpl_checkIfRangeIterWillOverflow_default_first[1103109] low[1948653]))
    (1949191 'move' tmp[1948749](1949193 '.' this[1108204] F5__iterator[1948199]))
    (1949196 'move' high[1948657](1949198 '.v' tmp[1948749] F1_high[1966139]))
    (1949201 'move' default_arg_last[1948655](1949204 call chpl_checkIfRangeIterWillOverflow_default_last[1103137] high[1948657]))
    (1949206 'move' tmp[1948751](1949208 '.' this[1108204] F5__iterator[1948199]))
    (1949211 'move' low[1948661](1949213 '.v' tmp[1948751] F0_low[1966135]))
    (1949216 'move' tmp[1948753](1949218 '.' this[1108204] F5__iterator[1948199]))
    (1949221 'move' high[1948663](1949223 '.v' tmp[1948753] F1_high[1966139]))
    (1949226 'move' _return_tmp_[1948659](1949229 call chpl_checkIfRangeIterWillOverflow[1095987] low[1948661] high[1948663] 1 default_arg_first[1948651] default_arg_last[1948655] 1))
    (1949236 return _void[55])
  }
  function _ic_chpl_bytes__ref_string[1108167].zip2[1108211](const in arg this[1108213]:_ic_chpl_bytes__ref_string[1108167]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val ret[1949239]:_ir_chpl_bytes__ref_string[1108173] "dead at end of block" "RVV" "temp"
    val call_tmp[1949241]:string[26] "dead at end of block" "maybe param" "temp"
    val ret_tmp[1949243]:string[26] "temp"
    val localThis[1949245]:string[26] "dead at end of block" "insert auto destroy"
    val _indexOfInterest[1949247]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1949249]:_ic_chpl_direct_counted_range_iter[1103701] "dead at end of block" "expr temp" "temp"
    ref call_tmp[1949251]:_ref(int(64))[936483] "dead at end of block" "maybe param" "temp"
    val call_tmp[1949253]:_ir_chpl_direct_counted_range_iter[1103707] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[1949255]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val ret_tmp[1949257]:_ir_chpl_direct_counted_range_iter[1103707] "temp"
    val ret[1949259]:_ir_chpl_direct_counted_range_iter[1103707] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[1949261]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1949263]:_ic_chpl_direct_counted_range_iter_helper[1103451] "dead at end of block" "expr temp" "temp"
    val call_tmp[1949265]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[1949267]:_ir_chpl_direct_counted_range_iter_helper[1103457] "temp"
    const-val low[1949269]:int(64)[13] "temp"
    const-val count[1949271]:int(64)[13] "temp"
    val ret[1949273]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead after last mention" "RVV" "temp"
    val call_tmp[1949275]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[1949277]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val tmp[1949279]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    val call_tmp[1949281]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[1949283]:int(64)[13] "temp"
    val call_tmp[1949285]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const tmp[1949287]:2*int(64)[1039967] "dead at end of block" "const" "insert auto destroy" "temp"
    val tmp[1949289]:2*int(64)[1039967] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
    val tmp[1949291]:bool[10] "dead after last mention" "maybe param" "temp"
    val call_tmp[1949293]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[1949295]:int(64)[13] "temp"
    val tmp[1949297]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[1949299]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1949301]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[1949303]:int(64)[13] "temp"
    val call_tmp[1949305]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[1949307]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val call_tmp[1949309]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[1949311]:2*int(64)[1039967] "temp"
    const-val low[1949313]:int(64)[13] "temp"
    val tmp[1949315]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[1949317]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1949319]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[1949321]:int(64)[13] "temp"
    val call_tmp[1949323]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[1949325]:int(64)[13] "temp"
    val call_tmp[1949327]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[1949329]:int(64)[13] "temp"
    val ret_tmp[1949331]:2*int(64)[1039967] "temp"
    const-val low[1949333]:int(64)[13] "temp"
    ref call_tmp[1949335]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
    const start[1949337]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[1949339]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    ref call_tmp[1949341]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
    const end[1949343]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[1949345]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val _indexOfInterest[1949347]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1949349]:_ic_chpl_direct_param_stride_range_iter[1103197] "dead at end of block" "expr temp" "temp"
    val call_tmp[1949351]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[1949353]:_ir_chpl_direct_param_stride_range_iter[1103203] "temp"
    val ret[1949355]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead after last mention" "RVV" "temp"
    val call_tmp[1949357]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val i[1949359]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[1949361]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1949363]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val default_arg_first[1949365]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[1949367]:int(64)[13] "temp"
    val default_arg_last[1949369]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[1949371]:int(64)[13] "temp"
    val _return_tmp_[1949373]:bool[10] "dead after last mention" "temp"
    const-val low[1949375]:int(64)[13] "temp"
    const-val high[1949377]:int(64)[13] "temp"
    const-val yret[1949379]:int(64)[13] "dead after last mention" "YVV" "temp"
    const-val _yieldedIndex[1949381]:int(64)[13] "temp"
    const-val i[1949383]:int(64)[13] "const" "index var" "insert auto destroy"
    const-val yret[1949385]:int(64)[13] "dead after last mention" "YVV" "temp"
    const-val _yieldedIndex[1949387]:int(64)[13] "temp"
    const-val i[1949389]:int(64)[13] "const" "index var" "insert auto destroy"
    const-val yret[1949391]:int(64)[13] "dead after last mention" "YVV" "temp"
    const-val _yieldedIndex[1949393]:int(64)[13] "temp"
    const-val i[1949395]:int(64)[13] "const" "index var" "insert auto destroy"
    const-val yret[1949397]:uint(8)[100] "dead after last mention" "YVV" "temp"
    ref call_tmp[1949399]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1949401]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "temp"
    val coerce_tmp[1949403]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val coerce_tmp[1949405]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    const-val low[1949407]:int(64)[13] "temp"
    const-val high[1949409]:int(64)[13] "temp"
    val call_tmp[1949411]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    label _endchpl_direct_param_stride_range_iter[1949413]
    label _endchpl_direct_counted_range_iter_helper[1949415]
    label _endchpl_direct_counted_range_iter[1949417]
    label _endchpl_bytes[1949419]
    ref tmp[1949421]:_ref(string)[937850] "temp"
    val tmp[1949423]:string[26] "temp"
    ref tmp[1949425]:_ref(string)[937850] "temp"
    val tmp[1949427]:_ic_chpl_direct_counted_range_iter[1103701] "temp"
    ref tmp[1949429]:_ref(_ic_chpl_direct_counted_range_iter)[1103844] "temp"
    ref tmp[1949431]:_ref(_ic_chpl_direct_counted_range_iter)[1103844] "temp"
    val tmp[1949433]:_ic_chpl_direct_counted_range_iter_helper[1103451] "temp"
    ref tmp[1949435]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
    ref tmp[1949437]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
    ref tmp[1949439]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
    ref tmp[1949441]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
    ref tmp[1949443]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
    ref tmp[1949445]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
    ref tmp[1949447]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
    ref tmp[1949449]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
    const tmp[1949451]:2*int(64)[1039967] "temp"
    ref tmp[1949453]:_ref(2*int(64))[1040040] "temp"
    ref tmp[1949455]:_ref(2*int(64))[1040040] "temp"
    val tmp[1949457]:_ic_chpl_direct_param_stride_range_iter[1103197] "temp"
    val tmp[1949459]:int(64)[13] "temp"
    ref tmp[1949461]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103340] "temp"
    ref tmp[1949463]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103340] "temp"
    ref tmp[1949465]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103340] "temp"
    ref tmp[1949467]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103340] "temp"
    const-val tmp[1949469]:int(64)[13] "temp"
    const-val tmp[1949471]:int(64)[13] "temp"
    ref tmp[1949473]:_ref(string)[937850] "temp"
    val tmp[1949475]:uint(8)[100] "temp"
    const-val tmp[1949477]:uint(8)[100] "temp"
    val tmp[1949479]:_ic_chpl_direct_param_stride_range_iter[1103197] "temp"
    ref tmp[1949481]:_ref(2*int(64))[1040040] "temp"
    val tmp[1949483]:_ic_chpl_direct_counted_range_iter_helper[1103451] "temp"
    val tmp[1949485]:_ic_chpl_direct_counted_range_iter[1103701] "temp"
    ref tmp[1949487]:_ref(string)[937850] "temp"
    const-val tmp[1949489]:int(64)[13] "temp"
    ref tmp[1949491]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103340] "temp"
    val tmp[1949493]:int(64)[13] "temp"
    const-val tmp[1949495]:int(64)[13] "temp"
    ref tmp[1949497]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103340] "temp"
    val tmp[1949499]:int(64)[13] "temp"
    val tmp[1949501]:int(64)[13] "temp"
    val tmp[1949503]:_ic_chpl_direct_param_stride_range_iter[1103197] "temp"
    ref tmp[1949505]:_ref(2*int(64))[1040040] "temp"
    val tmp[1949507]:_ic_chpl_direct_counted_range_iter_helper[1103451] "temp"
    val tmp[1949509]:_ic_chpl_direct_counted_range_iter[1103701] "temp"
    ref tmp[1949511]:_ref(string)[937850] "temp"
    (1949513 'move' tmp[1949469](1949515 '.v' this[1108213] F6_i[1948201]))
    (1949518 'move' yret[1949379] tmp[1949469])
    (1949521 'move' tmp[1949471](1949523 '.v' this[1108213] F6_i[1948201]))
    (1949526 'move' _yieldedIndex[1949381] tmp[1949471])
    (1949529 'move' i[1949383] _yieldedIndex[1949381])
    (1949532 'move' yret[1949385] _yieldedIndex[1949381])
    (1949535 'move' _yieldedIndex[1949387] _yieldedIndex[1949381])
    (1949538 'move' i[1949389] _yieldedIndex[1949387])
    (1949541 'move' yret[1949391] _yieldedIndex[1949387])
    (1949544 'move' _yieldedIndex[1949393] _yieldedIndex[1949387])
    (1949547 'move' i[1949395] _yieldedIndex[1949393])
    (1949550 'move' tmp[1949473](1949552 '.' this[1108213] F1_localThis[1948191]))
    (1949555 'move' _this_tmp_[1949401](1949558 call buff[757875] tmp[1949473]))
    (1949560 'move' coerce_tmp[1949403](1949562 'deref' _this_tmp_[1949401]))
    (1949564 'move' call_tmp[1949399](1949567 call this[954002] coerce_tmp[1949403] _yieldedIndex[1949393]))
    (1949570 'move' tmp[1949475](1949572 'deref' call_tmp[1949399]))
    (1949574 '.=' this[1108213] value[1948205] tmp[1949475])
    (1949578 'move' tmp[1949477](1949580 '.v' this[1108213] value[1948205]))
    (1949583 '=' yret[1949397] tmp[1949477])
    (1949586 'noop')
    (1949587 '.=' this[1108213] more[1108170] 2)
    (1949591 return _void[55])
  }
  function _ic_chpl_bytes__ref_string[1108167].zip3[1108220](const in arg this[1108222]:_ic_chpl_bytes__ref_string[1108167]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val ret[1949594]:_ir_chpl_bytes__ref_string[1108173] "dead at end of block" "RVV" "temp"
    val call_tmp[1949596]:string[26] "dead at end of block" "maybe param" "temp"
    val ret_tmp[1949598]:string[26] "temp"
    val localThis[1949600]:string[26] "dead at end of block" "insert auto destroy"
    val _indexOfInterest[1949602]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1949604]:_ic_chpl_direct_counted_range_iter[1103701] "dead at end of block" "expr temp" "temp"
    ref call_tmp[1949606]:_ref(int(64))[936483] "dead at end of block" "maybe param" "temp"
    val call_tmp[1949608]:_ir_chpl_direct_counted_range_iter[1103707] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[1949610]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val ret_tmp[1949612]:_ir_chpl_direct_counted_range_iter[1103707] "temp"
    val ret[1949614]:_ir_chpl_direct_counted_range_iter[1103707] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[1949616]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1949618]:_ic_chpl_direct_counted_range_iter_helper[1103451] "dead at end of block" "expr temp" "temp"
    val call_tmp[1949620]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[1949622]:_ir_chpl_direct_counted_range_iter_helper[1103457] "temp"
    const-val low[1949624]:int(64)[13] "temp"
    const-val count[1949626]:int(64)[13] "temp"
    val ret[1949628]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead after last mention" "RVV" "temp"
    val call_tmp[1949630]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[1949632]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val tmp[1949634]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    val call_tmp[1949636]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[1949638]:int(64)[13] "temp"
    val call_tmp[1949640]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const tmp[1949642]:2*int(64)[1039967] "dead at end of block" "const" "insert auto destroy" "temp"
    val tmp[1949644]:2*int(64)[1039967] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
    val tmp[1949646]:bool[10] "dead after last mention" "maybe param" "temp"
    val call_tmp[1949648]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[1949650]:int(64)[13] "temp"
    val tmp[1949652]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[1949654]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1949656]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[1949658]:int(64)[13] "temp"
    val call_tmp[1949660]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[1949662]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val call_tmp[1949664]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[1949666]:2*int(64)[1039967] "temp"
    const-val low[1949668]:int(64)[13] "temp"
    val tmp[1949670]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[1949672]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1949674]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[1949676]:int(64)[13] "temp"
    val call_tmp[1949678]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[1949680]:int(64)[13] "temp"
    val call_tmp[1949682]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[1949684]:int(64)[13] "temp"
    val ret_tmp[1949686]:2*int(64)[1039967] "temp"
    const-val low[1949688]:int(64)[13] "temp"
    ref call_tmp[1949690]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
    const start[1949692]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[1949694]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    ref call_tmp[1949696]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
    const end[1949698]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[1949700]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val _indexOfInterest[1949702]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1949704]:_ic_chpl_direct_param_stride_range_iter[1103197] "dead at end of block" "expr temp" "temp"
    val call_tmp[1949706]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[1949708]:_ir_chpl_direct_param_stride_range_iter[1103203] "temp"
    val ret[1949710]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead after last mention" "RVV" "temp"
    val call_tmp[1949712]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val i[1949714]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[1949716]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1949718]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val default_arg_first[1949720]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[1949722]:int(64)[13] "temp"
    val default_arg_last[1949724]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[1949726]:int(64)[13] "temp"
    val _return_tmp_[1949728]:bool[10] "dead after last mention" "temp"
    const-val low[1949730]:int(64)[13] "temp"
    const-val high[1949732]:int(64)[13] "temp"
    val yret[1949734]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[1949736]:int(64)[13] "temp"
    const i[1949738]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[1949740]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[1949742]:int(64)[13] "temp"
    const i[1949744]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[1949746]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[1949748]:int(64)[13] "temp"
    const i[1949750]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[1949752]:uint(8)[100] "dead after last mention" "YVV" "temp"
    ref call_tmp[1949754]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1949756]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "temp"
    val coerce_tmp[1949758]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val coerce_tmp[1949760]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    const-val low[1949762]:int(64)[13] "temp"
    const-val high[1949764]:int(64)[13] "temp"
    val call_tmp[1949766]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    label _endchpl_direct_param_stride_range_iter[1949768]
    label _endchpl_direct_counted_range_iter_helper[1949770]
    label _endchpl_direct_counted_range_iter[1949772]
    label _endchpl_bytes[1949774]
    ref tmp[1949776]:_ref(string)[937850] "temp"
    val tmp[1949778]:string[26] "temp"
    ref tmp[1949780]:_ref(string)[937850] "temp"
    val tmp[1949782]:_ic_chpl_direct_counted_range_iter[1103701] "temp"
    ref tmp[1949784]:_ref(_ic_chpl_direct_counted_range_iter)[1103844] "temp"
    ref tmp[1949786]:_ref(_ic_chpl_direct_counted_range_iter)[1103844] "temp"
    val tmp[1949788]:_ic_chpl_direct_counted_range_iter_helper[1103451] "temp"
    ref tmp[1949790]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
    ref tmp[1949792]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
    ref tmp[1949794]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
    ref tmp[1949796]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
    ref tmp[1949798]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
    ref tmp[1949800]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
    ref tmp[1949802]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
    ref tmp[1949804]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
    const tmp[1949806]:2*int(64)[1039967] "temp"
    ref tmp[1949808]:_ref(2*int(64))[1040040] "temp"
    ref tmp[1949810]:_ref(2*int(64))[1040040] "temp"
    val tmp[1949812]:_ic_chpl_direct_param_stride_range_iter[1103197] "temp"
    val tmp[1949814]:int(64)[13] "temp"
    ref tmp[1949816]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103340] "temp"
    ref tmp[1949818]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103340] "temp"
    ref tmp[1949820]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103340] "temp"
    ref tmp[1949822]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103340] "temp"
    val tmp[1949824]:int(64)[13] "temp"
    val tmp[1949826]:int(64)[13] "temp"
    ref tmp[1949828]:_ref(string)[937850] "temp"
    val tmp[1949830]:uint(8)[100] "temp"
    val tmp[1949832]:uint(8)[100] "temp"
    val tmp[1949834]:_ic_chpl_direct_param_stride_range_iter[1103197] "temp"
    ref tmp[1949836]:_ref(2*int(64))[1040040] "temp"
    val tmp[1949838]:_ic_chpl_direct_counted_range_iter_helper[1103451] "temp"
    val tmp[1949840]:_ic_chpl_direct_counted_range_iter[1103701] "temp"
    ref tmp[1949842]:_ref(string)[937850] "temp"
    const-val tmp[1949844]:int(64)[13] "temp"
    ref tmp[1949846]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103340] "temp"
    val tmp[1949848]:int(64)[13] "temp"
    const-val tmp[1949850]:int(64)[13] "temp"
    ref tmp[1949852]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103340] "temp"
    val tmp[1949854]:int(64)[13] "temp"
    val tmp[1949856]:int(64)[13] "temp"
    val tmp[1949858]:_ic_chpl_direct_param_stride_range_iter[1103197] "temp"
    ref tmp[1949860]:_ref(2*int(64))[1040040] "temp"
    val tmp[1949862]:_ic_chpl_direct_counted_range_iter_helper[1103451] "temp"
    val tmp[1949864]:_ic_chpl_direct_counted_range_iter[1103701] "temp"
    ref tmp[1949866]:_ref(string)[937850] "temp"
    (1949868 return _void[55])
  }
  function _ic_chpl_bytes__ref_string[1108167].zip4[1108229](const in arg this[1108231]:_ic_chpl_bytes__ref_string[1108167]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val ret[1949871]:_ir_chpl_bytes__ref_string[1108173] "dead at end of block" "RVV" "temp"
    val call_tmp[1949873]:string[26] "dead at end of block" "maybe param" "temp"
    val ret_tmp[1949875]:string[26] "temp"
    val localThis[1949877]:string[26] "dead at end of block" "insert auto destroy"
    val _indexOfInterest[1949879]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1949881]:_ic_chpl_direct_counted_range_iter[1103701] "dead at end of block" "expr temp" "temp"
    ref call_tmp[1949883]:_ref(int(64))[936483] "dead at end of block" "maybe param" "temp"
    val call_tmp[1949885]:_ir_chpl_direct_counted_range_iter[1103707] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[1949887]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val ret_tmp[1949889]:_ir_chpl_direct_counted_range_iter[1103707] "temp"
    val ret[1949891]:_ir_chpl_direct_counted_range_iter[1103707] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[1949893]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1949895]:_ic_chpl_direct_counted_range_iter_helper[1103451] "dead at end of block" "expr temp" "temp"
    val call_tmp[1949897]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[1949899]:_ir_chpl_direct_counted_range_iter_helper[1103457] "temp"
    const-val low[1949901]:int(64)[13] "temp"
    const-val count[1949903]:int(64)[13] "temp"
    val ret[1949905]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead after last mention" "RVV" "temp"
    val call_tmp[1949907]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[1949909]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val tmp[1949911]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    val call_tmp[1949913]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[1949915]:int(64)[13] "temp"
    val call_tmp[1949917]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const tmp[1949919]:2*int(64)[1039967] "dead at end of block" "const" "insert auto destroy" "temp"
    val tmp[1949921]:2*int(64)[1039967] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
    val tmp[1949923]:bool[10] "dead after last mention" "maybe param" "temp"
    val call_tmp[1949925]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[1949927]:int(64)[13] "temp"
    val tmp[1949929]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[1949931]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1949933]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[1949935]:int(64)[13] "temp"
    val call_tmp[1949937]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[1949939]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val call_tmp[1949941]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[1949943]:2*int(64)[1039967] "temp"
    const-val low[1949945]:int(64)[13] "temp"
    val tmp[1949947]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[1949949]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1949951]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[1949953]:int(64)[13] "temp"
    val call_tmp[1949955]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[1949957]:int(64)[13] "temp"
    val call_tmp[1949959]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[1949961]:int(64)[13] "temp"
    val ret_tmp[1949963]:2*int(64)[1039967] "temp"
    const-val low[1949965]:int(64)[13] "temp"
    ref call_tmp[1949967]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
    const start[1949969]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[1949971]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    ref call_tmp[1949973]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
    const end[1949975]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[1949977]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val _indexOfInterest[1949979]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1949981]:_ic_chpl_direct_param_stride_range_iter[1103197] "dead at end of block" "expr temp" "temp"
    val call_tmp[1949983]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[1949985]:_ir_chpl_direct_param_stride_range_iter[1103203] "temp"
    val ret[1949987]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead after last mention" "RVV" "temp"
    val call_tmp[1949989]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val i[1949991]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[1949993]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1949995]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val default_arg_first[1949997]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[1949999]:int(64)[13] "temp"
    val default_arg_last[1950001]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[1950003]:int(64)[13] "temp"
    val _return_tmp_[1950005]:bool[10] "dead after last mention" "temp"
    const-val low[1950007]:int(64)[13] "temp"
    const-val high[1950009]:int(64)[13] "temp"
    val yret[1950011]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[1950013]:int(64)[13] "temp"
    const i[1950015]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[1950017]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[1950019]:int(64)[13] "temp"
    const i[1950021]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[1950023]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[1950025]:int(64)[13] "temp"
    const i[1950027]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[1950029]:uint(8)[100] "dead after last mention" "YVV" "temp"
    ref call_tmp[1950031]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1950033]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "temp"
    val coerce_tmp[1950035]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val coerce_tmp[1950037]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    const-val low[1950039]:int(64)[13] "temp"
    const-val high[1950041]:int(64)[13] "temp"
    val call_tmp[1950043]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    label _endchpl_direct_param_stride_range_iter[1950045]
    label _endchpl_direct_counted_range_iter_helper[1950047]
    label _endchpl_direct_counted_range_iter[1950049]
    label _endchpl_bytes[1950051]
    ref tmp[1950053]:_ref(string)[937850] "temp"
    val tmp[1950055]:string[26] "temp"
    ref tmp[1950057]:_ref(string)[937850] "temp"
    val tmp[1950059]:_ic_chpl_direct_counted_range_iter[1103701] "temp"
    ref tmp[1950061]:_ref(_ic_chpl_direct_counted_range_iter)[1103844] "temp"
    ref tmp[1950063]:_ref(_ic_chpl_direct_counted_range_iter)[1103844] "temp"
    val tmp[1950065]:_ic_chpl_direct_counted_range_iter_helper[1103451] "temp"
    ref tmp[1950067]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
    ref tmp[1950069]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
    ref tmp[1950071]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
    ref tmp[1950073]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
    ref tmp[1950075]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
    ref tmp[1950077]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
    ref tmp[1950079]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
    ref tmp[1950081]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103594] "temp"
    const tmp[1950083]:2*int(64)[1039967] "temp"
    ref tmp[1950085]:_ref(2*int(64))[1040040] "temp"
    ref tmp[1950087]:_ref(2*int(64))[1040040] "temp"
    val tmp[1950089]:_ic_chpl_direct_param_stride_range_iter[1103197] "temp"
    val tmp[1950091]:int(64)[13] "temp"
    ref tmp[1950093]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103340] "temp"
    ref tmp[1950095]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103340] "temp"
    ref tmp[1950097]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103340] "temp"
    ref tmp[1950099]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103340] "temp"
    val tmp[1950101]:int(64)[13] "temp"
    val tmp[1950103]:int(64)[13] "temp"
    ref tmp[1950105]:_ref(string)[937850] "temp"
    val tmp[1950107]:uint(8)[100] "temp"
    val tmp[1950109]:uint(8)[100] "temp"
    val tmp[1950111]:_ic_chpl_direct_param_stride_range_iter[1103197] "temp"
    ref tmp[1950113]:_ref(2*int(64))[1040040] "temp"
    val tmp[1950115]:_ic_chpl_direct_counted_range_iter_helper[1103451] "temp"
    val tmp[1950117]:_ic_chpl_direct_counted_range_iter[1103701] "temp"
    ref tmp[1950119]:_ref(string)[937850] "temp"
    const-val tmp[1950121]:int(64)[13] "temp"
    ref tmp[1950123]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103340] "temp"
    val tmp[1950125]:int(64)[13] "temp"
    const-val tmp[1950127]:int(64)[13] "temp"
    ref tmp[1950129]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103340] "temp"
    val tmp[1950131]:int(64)[13] "temp"
    val tmp[1950133]:int(64)[13] "temp"
    val tmp[1950135]:_ic_chpl_direct_param_stride_range_iter[1103197] "temp"
    ref tmp[1950137]:_ref(2*int(64))[1040040] "temp"
    val tmp[1950139]:_ic_chpl_direct_counted_range_iter_helper[1103451] "temp"
    val tmp[1950141]:_ic_chpl_direct_counted_range_iter[1103701] "temp"
    ref tmp[1950143]:_ref(string)[937850] "temp"
    (1950145 'move' tmp[1950135](1950147 '.v' this[1108231] F5__iterator[1948199]))
    (1950151 call _freeIterator[1103385] tmp[1950135])
    (1950153 'move' tmp[1950137](1950155 '.' this[1108231] F4_tmp[1948197]))
    (1950159 call chpl__autoDestroy[1567619] tmp[1950137])
    (1950161 'move' tmp[1950139](1950163 '.v' this[1108231] F3__iterator[1948195]))
    (1950167 call _freeIterator[1103635] tmp[1950139])
    (1950169 'move' tmp[1950141](1950171 '.v' this[1108231] F2__iterator[1948193]))
    (1950175 call _freeIterator[1103885] tmp[1950141])
    (1950177 'move' tmp[1950143](1950179 '.' this[1108231] F1_localThis[1948191]))
    (1950183 call chpl__autoDestroy[1494420] tmp[1950143])
    (1950185 return _void[55])
  }
  function _ic_chpl_bytes__ref_string[1108167].hasMore[1108238](const in arg this[1108240]:_ic_chpl_bytes__ref_string[1108167]) : int(64)[13] "auto ii" "inline" "method" "resolved"
  {
    val tmp[1950238]:int(64)[13] "temp"
    const-val high[1950240]:int(64)[13] "temp"
    ref tmp[1950242]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103340] "temp"
    (1950244 'move' tmp[1950242](1950246 '.' this[1108240] F5__iterator[1948199]))
    (1950249 'move' high[1950240](1950251 '.v' tmp[1950242] F1_high[1966139]))
    const-val tmp[1950254]:int(64)[13] "temp"
    (1950256 'move' tmp[1950254](1950258 '.v' this[1108240] F6_i[1948201]))
    (1950264 'move' tmp[1950238](1950261 '<=' tmp[1950254] high[1950240]))
    (1950266 return tmp[1950238])
  }
  function _ic_chpl_bytes__ref_string[1108167].getValue[1108247](const in arg this[1108249]:_ic_chpl_bytes__ref_string[1108167]) : uint(8)[100] "auto ii" "inline" "method" "resolved"
  {
    val tmp[1950269]:uint(8)[100] "temp"
    (1950274 'move' tmp[1950269](1950271 '.v' this[1108249] value[1948205]))
    (1950276 return tmp[1950269])
  }
  function _ref(string)[937850].chpl_bytes[33574](const  ref arg this[33576]:_ref(string)[937850], ref arg _retArg[1786553]:_ref(_ir_chpl_bytes__ref_string)[1108284]) : void[4] "fn returns via _retArg" "inline" "iterator fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[1950334]:_ir_chpl_bytes__ref_string[1108173] "temp"
    (1950336 '.=' _ir[1950334] F0_this[1948189] this[33576])
    (1950340 '=' _retArg[1786553] _ir[1950334])
    (1950343 return _void[55])
  }
  function _ic_chpl_bytes__ref_string[1108167].init[1108256](const in arg this[1108258]:_ic_chpl_bytes__ref_string[1108167]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    const-val tmp[1950279]:int(64)[13] "temp"
    ref tmp[1950281]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103340] "temp"
    (1950283 'move' tmp[1950281](1950285 '.' this[1108258] F5__iterator[1948199]))
    (1950288 'move' tmp[1950279](1950290 '.v' tmp[1950281] F0_low[1966135]))
    (1950293 '.=' this[1108258] F7_low[1948203] tmp[1950279])
    val tmp[1950297]:int(64)[13] "temp"
    const-val tmp[1950299]:int(64)[13] "temp"
    (1950301 'move' tmp[1950299](1950303 '.v' this[1108258] F7_low[1948203]))
    (1950306 '=' tmp[1950297] tmp[1950299])
    (1950309 '.=' this[1108258] F6_i[1948201] tmp[1950297])
    (1950313 return _void[55])
  }
  function _ic_chpl_bytes__ref_string[1108167].incr[1108265](const in arg this[1108267]:_ic_chpl_bytes__ref_string[1108167]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val call_tmp[1950316]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[1950318]:int(64)[13] "temp"
    (1950320 'move' tmp[1950318](1950322 '.v' this[1108267] F6_i[1948201]))
    (1950325 '+=' tmp[1950318] 1)
    (1950328 '.=' this[1108267] F6_i[1948201] tmp[1950318])
    (1950332 return _void[55])
  }
  type _ic_chpl_bytes__ref_string[1108167] val super[1108168]:object[22] "super class" val more[1108170]:int(64)[13] ref F0_this[1948187]:_ref(string)[937850] val F1_localThis[1948191]:string[26] val F2__iterator[1948193]:_ic_chpl_direct_counted_range_iter[1103701] val F3__iterator[1948195]:_ic_chpl_direct_counted_range_iter_helper[1103451] const F4_tmp[1948197]:2*int(64)[1039967] val F5__iterator[1948199]:_ic_chpl_direct_param_stride_range_iter[1103197] val F6_i[1948201]:int(64)[13] const-val F7_low[1948203]:int(64)[13] val value[1948205]:uint(8)[100]
  type _ir_chpl_bytes__ref_string[1108173] ref F0_this[1948189]:_ref(string)[937850]
  function _getIterator[1108182](const  ref arg ir[1108184]:_ir_chpl_bytes__ref_string[1108173]) : _ic_chpl_bytes__ref_string[1108167] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1108291]:_ic_chpl_bytes__ref_string[1108167] "dead after last mention" "RVV" "temp"
    val _ic_[1108174]:_ic_chpl_bytes__ref_string[1108167] "dead after last mention" "temp"
    const-val call_tmp[1108298]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1108301 'move' call_tmp[1108298](1108313 'sizeof_bundle' _ic_chpl_bytes__ref_string[1108167]))
    const-val cast_tmp[1108316]:c_void_ptr[149] "dead after last mention" "temp"
    (1108318 'move' cast_tmp[1108316](1108179 call chpl_here_alloc[187742] call_tmp[1108298] 31))
    (1108187 'move' _ic_[1108174](1108320 'cast' _ic_chpl_bytes__ref_string[1108167] cast_tmp[1108316]))
    (1108189 'setcid' _ic_[1108174])
    (1108296 'move' ret[1108291] _ic_[1108174])
    (1950346 '.=' ret[1108291] more[1108170] 1)
    ref tmp[1950350]:_ref(string)[937850] "temp"
    (1950355 'move' tmp[1950350](1950351 '.v' ir[1108184] F0_this[1948189]))
    (1950357 '.=' ret[1108291] F0_this[1948187] tmp[1950350])
    (1108293 return ret[1108291])
  }
  function _ref(string)[937850].codepoints[33663](const  ref arg this[33665]:_ref(string)[937850], ref arg _retArg[1786575]:_ref(_ir_codepoints__ref_string)[1122877]) : void[4] "fn returns via _retArg" "inline" "iterator fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[1951034]:_ir_codepoints__ref_string[1122766] "temp"
    (1951036 '.=' _ir[1951034] F0_this[1950363] this[33665])
    (1951040 '=' _retArg[1786575] _ir[1951034])
    (1951043 return _void[55])
  }
  type _ic_codepoints__ref_string[1122760] val super[1122761]:object[22] "super class" val more[1122763]:int(64)[13] ref F0_this[1950361]:_ref(string)[937850] val F1_localThis[1950365]:string[26] val F2__iterator[1950367]:_ic_chpl_bytes__ref_string[1108167] val F3_localThis[1950369]:string[26] val F4__iterator[1950371]:_ic_chpl_direct_counted_range_iter[1103701] val F5__iterator[1950373]:_ic_chpl_direct_counted_range_iter_helper[1103451] const F6_tmp[1950375]:2*int(64)[1039967] val F7__iterator[1950377]:_ic_chpl_direct_param_stride_range_iter[1103197] val F8_i[1950379]:int(64)[13] val F9_i[1950381]:int(64)[13] const-val F10_ret_tmp[1950383]:(syserr,int(32),int(32))[964531] const F11_tmp[1950385]:(syserr,int(32),int(32))[964531] const F12_nBytes[1950387]:int(32)[95] val F13_yret[1950389]:int(32)[95] const F14_cp[1950391]:int(32)[95] val value[1950393]:int(32)[95]
  type _ir_codepoints__ref_string[1122766] ref F0_this[1950363]:_ref(string)[937850]
  function _getIterator[1122775](const  ref arg ir[1122777]:_ir_codepoints__ref_string[1122766]) : _ic_codepoints__ref_string[1122760] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1122884]:_ic_codepoints__ref_string[1122760] "dead after last mention" "RVV" "temp"
    val _ic_[1122767]:_ic_codepoints__ref_string[1122760] "dead after last mention" "temp"
    const-val call_tmp[1122891]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1122894 'move' call_tmp[1122891](1122906 'sizeof_bundle' _ic_codepoints__ref_string[1122760]))
    const-val cast_tmp[1122909]:c_void_ptr[149] "dead after last mention" "temp"
    (1122911 'move' cast_tmp[1122909](1122772 call chpl_here_alloc[187742] call_tmp[1122891] 34))
    (1122780 'move' _ic_[1122767](1122913 'cast' _ic_codepoints__ref_string[1122760] cast_tmp[1122909]))
    (1122782 'setcid' _ic_[1122767])
    (1122889 'move' ret[1122884] _ic_[1122767])
    (1951046 '.=' ret[1122884] more[1122763] 1)
    ref tmp[1951050]:_ref(string)[937850] "temp"
    (1951055 'move' tmp[1951050](1951051 '.v' ir[1122777] F0_this[1950363]))
    (1951057 '.=' ret[1122884] F0_this[1950361] tmp[1951050])
    (1122886 return ret[1122884])
  }
  function _ref(string)[937850].this[34632](const  ref arg this[34634]:_ref(string)[937850], const  ref arg i[34629]:codepointIndex[28274], ref arg _retArg[1786585]:_ref(string)[937850]) : void[4] "fn returns via _retArg" "method" "resolved"
  {
    const-val ret[504046]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[600717]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1786609]:string[26] "temp"
    (34646 call item[34688] this[34634] i[34629] ret_tmp[1786609])
    (1786612 'move' call_tmp[600717] ret_tmp[1786609])
    (1180870 'move' ret[504046] call_tmp[600717])
    (1786587 '=' _retArg[1786585] ret[504046])
    (1786589 return _void[55])
  }
  function _ref(string)[937850].this[34660](const  ref arg this[34662]:_ref(string)[937850], const in arg i[34657]:int(64)[13], ref arg _retArg[1786603]:_ref(string)[937850]) : void[4] "fn returns via _retArg" "inline" "method" "resolved"
  {
    const-val ret[504056]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[600724]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1786625]:string[26] "temp"
    (34674 call item[35008] this[34662] i[34657] ret_tmp[1786625])
    (1786628 'move' call_tmp[600724] ret_tmp[1786625])
    (1180876 'move' ret[504056] call_tmp[600724])
    (1786605 '=' _retArg[1786603] ret[504056])
    (1786607 return _void[55])
  }
  function _ref(string)[937850].item[34688](const  ref arg this[34690]:_ref(string)[937850], const  ref arg i[34685]:codepointIndex[28274], ref arg _retArg[1786615]:_ref(string)[937850]) : void[4] "fn returns via _retArg" "method" "resolved"
  {
    val ret[504066]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[553421]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[553429]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    const-val call_tmp[600739]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (600742 'move' call_tmp[600739](34699 call <[29040] i[34685] 0))
    (553431 'move' tmp[553429] call_tmp[600739])
    (553436 'move' tmp[553421] tmp[553429])
    const-val call_tmp[600744]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (600747 'move' call_tmp[600744] tmp[553421])
    if call_tmp[600744]
    {
      (34708 call halt[1157039] "index " i[34685] " out of bounds for string")
    }
    const-val call_tmp[600751]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (600754 'move' call_tmp[600751](34721 call isEmpty[35061] this[34690]))
    const-val call_tmp[600756]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (600759 'move' call_tmp[600756] call_tmp[600751])
    if call_tmp[600756]
    {
      (504072 'move' ret[504066](1786619 call chpl__initCopy[981259] ""))
      gotoReturn _end_item[504064] _end_item[504064]
    }
    const-val call_tmp[600763]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (600766 'move' call_tmp[600763](34751 call isASCII[31046] this[34690]))
    const-val call_tmp[600768]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (600771 'move' call_tmp[600768] call_tmp[600763])
    if call_tmp[600768]
    {
      const-val tmp[553448]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val tmp[553456]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[600785]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (600788 'move' call_tmp[600785](34755 call numBytes[32807] this[34690]))
      const-val call_tmp[600790]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (600793 'move' call_tmp[600790](34758 call >=[29190] i[34685] call_tmp[600785]))
      (553458 'move' tmp[553456] call_tmp[600790])
      (553463 'move' tmp[553448] tmp[553456])
      const-val call_tmp[600795]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (600798 'move' call_tmp[600795] tmp[553448])
      if call_tmp[600795]
      {
        const-val call_tmp[600802]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (600805 'move' call_tmp[600802](34768 call size[32769] this[34690]))
        (34771 call halt[1175672] "index " i[34685] " out of bounds for string with length " call_tmp[600802])
      }
      ref call_tmp[600809]:_ref(c_ptr(uint(8)))[937343] "dead at end of block" "maybe param" "temp"
      (600812 'move' call_tmp[600809](34786 call buff[757875] this[34690]))
      const-val call_tmp[600814]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (600817 'move' call_tmp[600814](34793 call _cast[39514] i[34685]))
      ref call_tmp[600821]:_ref(int(32))[936537] "dead at end of block" "maybe param" "temp"
      (600824 'move' call_tmp[600821](34799 call locale_id[757953] this[34690]))
      const-val call_tmp[600826]:(c_ptr(uint(8)),int(64))[955119] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1180722]:c_ptr(uint(8))[937334] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1180726 'move' coerce_tmp[1180722](1180724 'deref' call_tmp[600809]))
      const-val coerce_tmp[1180728]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1180732 'move' coerce_tmp[1180728](1180730 'deref' call_tmp[600821]))
      const-val ret_tmp[1788103]:(c_ptr(uint(8)),int(64))[955119] "temp"
      (34803 call bufferCopy[172928] coerce_tmp[1180722] call_tmp[600814] 1 coerce_tmp[1180728] ret_tmp[1788103])
      (1788106 'move' call_tmp[600826] ret_tmp[1788103])
      const-val tmp[34804]:(c_ptr(uint(8)),int(64))[955119] "dead at end of block" "insert auto destroy" "temp"
      (540308 'move' tmp[34804] call_tmp[600826])
      1
      ref call_tmp[600831]:_ref(c_ptr(uint(8)))[937343] "dead at end of block" "maybe param" "temp"
      (600834 'move' call_tmp[600831](1180742 '.' tmp[34804] x0[955115]))
      val newBuff[34779]:c_ptr(uint(8))[937334] "dead at end of block" "insert auto destroy"
      val coerce_tmp[1180747]:c_ptr(uint(8))[937334] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1180751 'move' coerce_tmp[1180747](1180749 'deref' call_tmp[600831]))
      (1798417 '=' newBuff[34779] coerce_tmp[1180747])
      (540310 'noop')
      ref call_tmp[600836]:_ref(int(64))[936483] "dead at end of block" "maybe param" "temp"
      (600839 'move' call_tmp[600836](1180756 '.' tmp[34804] x1[955117]))
      const-val allocSize[34781]:int(64)[13] "dead at end of block" "insert auto destroy"
      const-val coerce_tmp[1180761]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1180765 'move' coerce_tmp[1180761](1180763 'deref' call_tmp[600836]))
      (1798420 '=' allocSize[34781] coerce_tmp[1180761])
      (540312 'noop')
      const-val call_tmp[600841]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1786095]:string[26] "temp"
      (34823 call chpl_createStringWithOwnedBufferNV[30673] newBuff[34779] 1 allocSize[34781] 1 ret_tmp[1786095])
      (1786098 'move' call_tmp[600841] ret_tmp[1786095])
      (1180864 'move' ret[504066] call_tmp[600841])
      (1798429 call chpl__autoDestroy[1498061] tmp[34804])
      gotoReturn _end_item[504064] _end_item[504064]
    }
    {
      val charCount[34827]:int(64)[13] "dead at end of block" "insert auto destroy"
      (540314 'move' charCount[34827] 0)
      {
        val _indexOfInterest[34903]:(int(32),byteIndex,int(64))[1122053] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[34904]:_ic__cpIndexLen__ref_string[1122296] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[600848]:_ir__cpIndexLen__ref_string[1122302] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val default_arg_start[1180773]:byteIndex[28170] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        const-val ret_tmp[1790904]:byteIndex[28170] "temp"
        (1180775 call _cpIndexLen_default_start[1121942] this[34690] ret_tmp[1790904])
        (1790907 'move' default_arg_start[1180773] ret_tmp[1790904])
        const-val ret_tmp[1786269]:_ir__cpIndexLen__ref_string[1122302] "temp"
        (34840 call _cpIndexLen[31106] this[34690] default_arg_start[1180773] ret_tmp[1786269])
        (1786272 'move' call_tmp[600848] ret_tmp[1786269])
        (34913 'move' _iterator[34904](34911 call _getIterator[1122311] call_tmp[600848]))
        {
          val ret[1846702]:_ir__cpIndexLen__ref_string[1122302] "dead after last mention" "RVV" "temp"
          const-val call_tmp[1846704]:string[26] "dead at end of block" "maybe param" "temp"
          const-val ret_tmp[1846706]:string[26] "temp"
          ref this[1847931]:_ref(string)[937850] "temp"
          (1847936 'move' this[1847931](1847933 '.v' _iterator[34904] F0_this[1946835]))
          (1846709 call localize[32886] this[1847931] ret_tmp[1846706])
          (1846712 'move' call_tmp[1846704] ret_tmp[1846706])
          val localThis[1846715]:string[26] "dead at end of block" "insert auto destroy"
          (1846717 'move' localThis[1846715] call_tmp[1846704])
          const-val call_tmp[1846720]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1846722 'move' call_tmp[1846720](1846725 call isASCII[31046] localThis[1846715]))
          const-val call_tmp[1846727]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1846729 'move' call_tmp[1846727] call_tmp[1846720])
          if call_tmp[1846720]
          {
            const-val _iterator[1846734]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108477] "dead at end of block" "expr temp" "insert auto destroy" "temp"
            const-val call_tmp[1846736]:range(int(64),bounded,false)[1026725] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[1846738]:range(int(64),bounded,false)[1026725] "temp"
            ref this[1847938]:_ref(string)[937850] "temp"
            (1847943 'move' this[1847938](1847940 '.v' _iterator[34904] F0_this[1946835]))
            (1846741 call byteIndices[31065] this[1847938] ret_tmp[1846738])
            (1846744 'move' call_tmp[1846736] ret_tmp[1846738])
            val call_tmp[1846747]:_ic_these_range_int64_t_bounded_F[1096614] "dead at end of block" "expr temp" "maybe param" "temp"
            (1846749 'move' call_tmp[1846747](1846752 call _getIterator[1095231] call_tmp[1846736]))
            const-val call_tmp[1846754]:_ir_chpl_bytes__ref_string[1108173] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[1846756]:_ir_chpl_bytes__ref_string[1108173] "temp"
            ref this[1847945]:_ref(string)[937850] "temp"
            (1847950 'move' this[1847945](1847947 '.v' _iterator[34904] F0_this[1946835]))
            (1846759 call chpl_bytes[33574] this[1847945] ret_tmp[1846756])
            (1846762 'move' call_tmp[1846754] ret_tmp[1846756])
            val call_tmp[1846765]:_ic_chpl_bytes__ref_string[1108167] "dead at end of block" "expr temp" "maybe param" "temp"
            (1846767 'move' call_tmp[1846765](1846770 call _getIterator[1108182] call_tmp[1846754]))
            const-val ret_tmp[1846772]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108477] "temp"
            (1846775 call _build_tuple[1108435] call_tmp[1846747] call_tmp[1846765] ret_tmp[1846772])
            (1846779 'move' _iterator[1846734] ret_tmp[1846772])
            val _iterator[1846782]:_ic_these_range_int64_t_bounded_F[1096614] "temp"
            (1846784 'move' _iterator[1846782](1846786 '.v' _iterator[1846734] x0[1108473]))
            val _iterator[1846789]:_ic_chpl_bytes__ref_string[1108167] "temp"
            (1846791 'move' _iterator[1846789](1846793 '.v' _iterator[1846734] x1[1108475]))
            {
              (1846798 call zip1[1096649] _iterator[1846782])
            }
            {
              (1846802 call zip1[1108202] _iterator[1846789])
            }
            const-val isFinished[1846804]:bool[10] "temp"
            val hasMore[1846806]:bool[10] "temp"
            CForLoop[1846808]
            {
              val _indexOfInterest[1846831]:(int(64),uint(8))[1110951] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              {
                (1846835 call zip2[1108211] _iterator[1846789])
              }
              {
                const-val retTmp[1846838]:int(64)[13] "temp"
                (1846840 'move' retTmp[1846838](1846843 call hasMore[1108238] _iterator[1846789]))
                (1846845 'move' hasMore[1846806](1846847 'cast' bool[10] retTmp[1846838]))
              }
              (1846850 'move' isFinished[1846804](1846852 '!' hasMore[1846806]))
              if isFinished[1846804]
              {
                (1846856 'chpl_error' c"zippered iterations have non-equal lengths")
              }
              {
                (1846860 'move' _index[1846875](1846863 call getValue[1108247] _iterator[1846789]))
              }
              {
                (1846867 call zip2[1096658] _iterator[1846782])
              }
              {
                (1846870 'move' _index[1846881](1846873 call getValue[1096694] _iterator[1846782]))
              }
              val _index[1846875]:uint(8)[100] "temp"
              (1846877 '.=' _indexOfInterest[1846831] x1[1110949] _index[1846875])
              val _index[1846881]:int(64)[13] "temp"
              (1846883 '.=' _indexOfInterest[1846831] x0[1110947] _index[1846881])
              1
              const-val i[1846888]:int(64)[13] "const" "index var" "insert auto destroy"
              (1846890 'move' i[1846888](1846892 '.v' _indexOfInterest[1846831] x0[1110947]))
              const-val b[1846895]:uint(8)[100] "const" "index var" "insert auto destroy"
              (1846897 'move' b[1846895](1846899 '.v' _indexOfInterest[1846831] x1[1110949]))
              const-val yret[1846902]:(int(32),byteIndex,int(64))[1122053] "dead after last mention" "YVV" "temp"
              val call_tmp[1846904]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[1846906]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
              (1846908 'move' call_tmp[1846906](1846910 'cast' int(32)[95] b[1846895]))
              const-val call_tmp[1846913]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret_tmp[1846915]:byteIndex[28170] "temp"
              (1846918 call _cast[39483] i[1846888] ret_tmp[1846915])
              (1846921 'move' call_tmp[1846913] ret_tmp[1846915])
              const-val call_tmp[1846924]:(int(32),byteIndex,int(64))[1122053] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret_tmp[1846926]:(int(32),byteIndex,int(64))[1122053] "temp"
              (1846929 call _build_tuple[1122003] call_tmp[1846906] call_tmp[1846913] 1 ret_tmp[1846926])
              (1846934 'move' call_tmp[1846924] ret_tmp[1846926])
              (1846937 'move' yret[1846902] call_tmp[1846924])
              const-val _yieldedIndex[1847519]:(int(32),byteIndex,int(64))[1122053] "temp"
              (1847750 'move' _yieldedIndex[1847519] call_tmp[1846924])
              {
                1
                const-val cp[1847522]:int(32)[95] "const" "index var" "insert auto destroy"
                (1847524 'move' cp[1847522](1847526 '.v' _yieldedIndex[1847519] x0[1122047]))
                ref byteIdx[1847529]:_ref(byteIndex)[948670] "index var" "insert auto destroy"
                (1847531 'move' byteIdx[1847529](1847533 '.v' _yieldedIndex[1847519] x1[1122049]))
                const-val nBytes[1847536]:int(64)[13] "const" "index var" "insert auto destroy"
                (1847538 'move' nBytes[1847536](1847540 '.v' _yieldedIndex[1847519] x2[1122051]))
                {
                  const-val call_tmp[1847544]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1847546 'move' call_tmp[1847544](1847549 call ==[29538] charCount[34827] i[34685]))
                  const-val call_tmp[1847552]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1847554 'move' call_tmp[1847552] call_tmp[1847544])
                  if call_tmp[1847552]
                  {
                    ref call_tmp[1847559]:_ref(c_ptr(uint(8)))[937343] "dead at end of block" "maybe param" "temp"
                    (1847561 'move' call_tmp[1847559](1847564 call buff[757875] this[34690]))
                    const-val call_tmp[1847566]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                    (1847568 'move' call_tmp[1847566](1847571 call _cast[39462] byteIdx[1847529]))
                    ref call_tmp[1847573]:_ref(int(32))[936537] "dead at end of block" "maybe param" "temp"
                    (1847575 'move' call_tmp[1847573](1847578 call locale_id[757953] this[34690]))
                    const-val call_tmp[1847580]:(c_ptr(uint(8)),int(64))[955119] "dead at end of block" "maybe param" "temp"
                    val coerce_tmp[1847582]:c_ptr(uint(8))[937334] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (1847584 'move' coerce_tmp[1847582](1847586 'deref' call_tmp[1847559]))
                    const-val coerce_tmp[1847588]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (1847590 'move' coerce_tmp[1847588](1847592 'deref' call_tmp[1847573]))
                    const-val ret_tmp[1847594]:(c_ptr(uint(8)),int(64))[955119] "temp"
                    (1847597 call bufferCopy[172928] coerce_tmp[1847582] call_tmp[1847566] nBytes[1847536] coerce_tmp[1847588] ret_tmp[1847594])
                    (1847603 'move' call_tmp[1847580] ret_tmp[1847594])
                    const-val tmp[1847606]:(c_ptr(uint(8)),int(64))[955119] "dead at end of block" "insert auto destroy" "temp"
                    (1847608 'move' tmp[1847606] call_tmp[1847580])
                    1
                    ref call_tmp[1847612]:_ref(c_ptr(uint(8)))[937343] "dead at end of block" "maybe param" "temp"
                    (1847614 'move' call_tmp[1847612](1847616 '.' tmp[1847606] x0[955115]))
                    val newBuff[1847619]:c_ptr(uint(8))[937334] "dead at end of block" "insert auto destroy"
                    val coerce_tmp[1847621]:c_ptr(uint(8))[937334] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1847623 'move' coerce_tmp[1847621](1847625 'deref' call_tmp[1847612]))
                    (1847627 '=' newBuff[1847619] coerce_tmp[1847621])
                    (1847630 'noop')
                    ref call_tmp[1847631]:_ref(int(64))[936483] "dead at end of block" "maybe param" "temp"
                    (1847633 'move' call_tmp[1847631](1847635 '.' tmp[1847606] x1[955117]))
                    const-val allocSize[1847638]:int(64)[13] "dead at end of block" "insert auto destroy"
                    const-val coerce_tmp[1847640]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1847642 'move' coerce_tmp[1847640](1847644 'deref' call_tmp[1847631]))
                    (1847646 '=' allocSize[1847638] coerce_tmp[1847640])
                    (1847649 'noop')
                    const-val call_tmp[1847650]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1847652]:string[26] "temp"
                    (1847655 call chpl_createStringWithOwnedBufferNV[30673] newBuff[1847619] nBytes[1847536] allocSize[1847638] 1 ret_tmp[1847652])
                    (1847661 'move' call_tmp[1847650] ret_tmp[1847652])
                    (1847664 'move' ret[504066] call_tmp[1847650])
                    (1847668 call chpl__autoDestroy[1498061] tmp[1847606])
                    ref moreRef1[1847686]:_ref(int(64))[936483] "temp"
                    (1847688 'move' moreRef1[1847686](1847690 '.' _iterator[1846782] more[1096617]))
                    const-val moreVal1[1847693]:int(64)[13] "const" "temp"
                    (1847695 '=' moreVal1[1847693] moreRef1[1847686])
                    const-val moreValNeg1[1847698]:int(64)[13] "const" "temp"
                    (1847700 'move' moreValNeg1[1847698](1847702 'u-' moreVal1[1847693]))
                    (1847704 '=' moreRef1[1847686] moreValNeg1[1847698])
                    (1847708 call advance[1096640] _iterator[1846782])
                    ref moreRef2[1847710]:_ref(int(64))[936483] "temp"
                    (1847712 'move' moreRef2[1847710](1847714 '.' _iterator[1846789] more[1108170]))
                    const-val moreVal2[1847717]:int(64)[13] "const" "temp"
                    (1847719 '=' moreVal2[1847717] moreRef2[1847710])
                    const-val moreValNeg2[1847722]:int(64)[13] "const" "temp"
                    (1847724 'move' moreValNeg2[1847722](1847726 'u-' moreVal2[1847717]))
                    (1847728 '=' moreRef2[1847710] moreValNeg2[1847722])
                    (1847732 call advance[1108193] _iterator[1846789])
                    (1847735 call chpl__autoDestroy[1494683] call_tmp[1846913])
                    (1847738 call _freeIterator[1108635] _iterator[1846734])
                    (1847741 call chpl__autoDestroy[1574364] _iterator[1846734])
                    (1847744 call chpl__autoDestroy[1567322] call_tmp[1846736])
                    (1847747 call chpl__autoDestroy[1494420] localThis[1846715])
                    (1847671 call _freeIterator[1122484] _iterator[34904])
                    (1847674 call chpl__autoDestroy[1494683] default_arg_start[1180773])
                    gotoReturn _end_item[504064] _end_item[504064]
                  }
                  (1847680 call +=[451226] charCount[34827] 1)
                }
                label _continueLabel[1847683]
              }
              (1847011 call chpl__autoDestroy[1494683] call_tmp[1846913])
              {
                (1847015 call zip3[1096667] _iterator[1846782])
              }
              {
                (1847019 call zip3[1108220] _iterator[1846789])
              }
              {
                {
                  (1846812 call init[1096703] _iterator[1846782])
                }
                {
                  (1846816 call init[1108256] _iterator[1846789])
                }
              }
              {
                (1846820 call hasMore[1096685] _iterator[1846782])
              }
              {
                {
                  (1846825 call incr[1096712] _iterator[1846782])
                }
                {
                  (1846829 call incr[1108265] _iterator[1846789])
                }
              }
            }
            {
              const-val retTmp[1847022]:int(64)[13] "temp"
              (1847024 'move' retTmp[1847022](1847027 call hasMore[1108238] _iterator[1846789]))
              (1847029 'move' hasMore[1846806](1847031 'cast' bool[10] retTmp[1847022]))
            }
            if hasMore[1846806]
            {
              (1847036 'chpl_error' c"zippered iterations have non-equal lengths")
            }
            {
              (1847041 call zip4[1108229] _iterator[1846789])
            }
            {
              (1847045 call zip4[1096676] _iterator[1846782])
            }
            (1847048 call _freeIterator[1108635] _iterator[1846734])
            (1847051 call chpl__autoDestroy[1574364] _iterator[1846734])
            (1847054 call chpl__autoDestroy[1567322] call_tmp[1846736])
          }
          {
            const-val call_tmp[1847057]:int(64)[13] "dead at end of block" "maybe param" "temp"
            ref start[1847952]:_ref(byteIndex)[948670] "temp"
            (1847957 'move' start[1847952](1847954 '.v' _iterator[34904] F1_start[1946839]))
            (1847059 'move' call_tmp[1847057](1847062 call _cast[39462] start[1847952]))
            val i[1847064]:int(64)[13] "dead at end of block" "insert auto destroy"
            (1847066 'move' i[1847064] call_tmp[1847057])
            const-val call_tmp[1847069]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1847071 'move' call_tmp[1847069](1847074 call >[437583] call_tmp[1847057] 0))
            const-val call_tmp[1847077]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1847079 'move' call_tmp[1847077] call_tmp[1847069])
            if call_tmp[1847069]
            {
              val tmp[1847084]:bool[10] "dead after last mention" "temp"
              const-val tmp[1847086]:bool[10] "dead after last mention" "maybe param" "temp"
              ref call_tmp[1847088]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
              (1847090 'move' call_tmp[1847088](1847093 call buffLen[757797] localThis[1846715]))
              const-val coerce_tmp[1847095]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1847097 'move' coerce_tmp[1847095](1847099 'deref' call_tmp[1847088]))
              (1847101 'move' tmp[1847086](1847104 call <[437363] i[1847064] coerce_tmp[1847095]))
              val tmp[1847107]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              const-val tmp[1847109]:bool[10] "dead after last mention" "maybe param" "temp"
              const-val call_tmp[1847111]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1847113 'move' call_tmp[1847111] tmp[1847086])
              (1847116 'move' tmp[1847109] tmp[1847086])
              if tmp[1847086]
              {
                const-val tmp[1847121]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                ref call_tmp[1847123]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
                ref _this_tmp_[1847125]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "temp"
                (1847127 'move' _this_tmp_[1847125](1847130 call buff[757875] localThis[1846715]))
                val coerce_tmp[1847132]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1847134 'move' coerce_tmp[1847132](1847136 'deref' _this_tmp_[1847125]))
                (1847138 'move' call_tmp[1847123](1847141 call this[954002] coerce_tmp[1847132] i[1847064]))
                const-val call_tmp[1847144]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1847146]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1847148 'move' coerce_tmp[1847146](1847150 'deref' call_tmp[1847123]))
                (1847152 'move' call_tmp[1847144](1847155 call isInitialByte[181528] coerce_tmp[1847146]))
                const-val call_tmp[1847157]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1847159 'move' call_tmp[1847157](1847162 call ![7494] call_tmp[1847144]))
                (1847164 'move' tmp[1847121] call_tmp[1847157])
                (1847167 'move' tmp[1847107] call_tmp[1847157])
              }
              {
                (1847171 'move' tmp[1847107] 0)
              }
              (1847175 'move' tmp[1847084] tmp[1847107])
              WhileDo[1847178]
              {
                (1847181 call +=[451226] i[1847064] 1)
                const-val tmp[1847184]:bool[10] "dead after last mention" "maybe param" "temp"
                ref call_tmp[1847186]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
                (1847188 'move' call_tmp[1847186](1847191 call buffLen[757797] localThis[1846715]))
                const-val coerce_tmp[1847193]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1847195 'move' coerce_tmp[1847193](1847197 'deref' call_tmp[1847186]))
                (1847199 'move' tmp[1847184](1847202 call <[437363] i[1847064] coerce_tmp[1847193]))
                val tmp[1847205]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[1847207]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1847209]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1847211 'move' call_tmp[1847209] tmp[1847184])
                (1847214 'move' tmp[1847207] tmp[1847184])
                if tmp[1847184]
                {
                  const-val tmp[1847219]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  ref call_tmp[1847221]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[1847223]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "temp"
                  (1847225 'move' _this_tmp_[1847223](1847228 call buff[757875] localThis[1846715]))
                  val coerce_tmp[1847230]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1847232 'move' coerce_tmp[1847230](1847234 'deref' _this_tmp_[1847223]))
                  (1847236 'move' call_tmp[1847221](1847239 call this[954002] coerce_tmp[1847230] i[1847064]))
                  const-val call_tmp[1847242]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1847244]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1847246 'move' coerce_tmp[1847244](1847248 'deref' call_tmp[1847221]))
                  (1847250 'move' call_tmp[1847242](1847253 call isInitialByte[181528] coerce_tmp[1847244]))
                  const-val call_tmp[1847255]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1847257 'move' call_tmp[1847255](1847260 call ![7494] call_tmp[1847242]))
                  (1847262 'move' tmp[1847219] call_tmp[1847255])
                  (1847265 'move' tmp[1847205] call_tmp[1847255])
                }
                {
                  (1847269 'move' tmp[1847205] 0)
                }
                (1847273 'move' tmp[1847084] tmp[1847205])
                tmp[1847084]
              }
            }
            val tmp[1847277]:bool[10] "dead after last mention" "temp"
            ref call_tmp[1847279]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
            (1847281 'move' call_tmp[1847279](1847284 call buffLen[757797] localThis[1846715]))
            const-val call_tmp[1847286]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[1847288]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1847290 'move' coerce_tmp[1847288](1847292 'deref' call_tmp[1847279]))
            (1847294 'move' call_tmp[1847286](1847297 call <[437363] i[1847064] coerce_tmp[1847288]))
            (1847300 'move' tmp[1847277] call_tmp[1847286])
            WhileDo[1847303]
            {
              ref call_tmp[1847305]:_ref(c_ptr(uint(8)))[937343] "dead at end of block" "maybe param" "temp"
              (1847307 'move' call_tmp[1847305](1847310 call buff[757875] localThis[1846715]))
              ref call_tmp[1847312]:_ref(int(64))[936483] "dead at end of block" "maybe param" "temp"
              (1847314 'move' call_tmp[1847312](1847317 call buffLen[757797] localThis[1846715]))
              const-val call_tmp[1847319]:(syserr,int(32),int(32))[964531] "dead at end of block" "maybe param" "temp"
              val coerce_tmp[1847321]:c_ptr(uint(8))[937334] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1847323 'move' coerce_tmp[1847321](1847325 'deref' call_tmp[1847305]))
              const-val coerce_tmp[1847327]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1847329 'move' coerce_tmp[1847327](1847331 'deref' call_tmp[1847312]))
              const-val ret_tmp[1847333]:(syserr,int(32),int(32))[964531] "temp"
              (1847336 call decodeHelp[174406] coerce_tmp[1847321] coerce_tmp[1847327] i[1847064] 1 ret_tmp[1847333])
              (1847342 'move' call_tmp[1847319] ret_tmp[1847333])
              const-val tmp[1847345]:(syserr,int(32),int(32))[964531] "dead at end of block" "const" "insert auto destroy" "temp"
              (1847347 'move' tmp[1847345] call_tmp[1847319])
              1
              ref call_tmp[1847351]:_ref(syserr)[948743] "dead at end of block" "maybe param" "reference to a const" "temp"
              (1847353 'move' call_tmp[1847351](1847355 '.' tmp[1847345] x0[964525]))
              const-val decodeRet[1847358]:syserr[223496] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[1847360]:syserr[223496] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1847362 'move' coerce_tmp[1847360](1847364 'deref' call_tmp[1847351]))
              (1847366 'move' decodeRet[1847358](1847369 call chpl__initCopy[964396] coerce_tmp[1847360]))
              ref call_tmp[1847371]:_ref(int(32))[936537] "dead at end of block" "maybe param" "reference to a const" "temp"
              (1847373 'move' call_tmp[1847371](1847375 '.' tmp[1847345] x1[964527]))
              const-val cp[1847378]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[1847380]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1847382 'move' coerce_tmp[1847380](1847384 'deref' call_tmp[1847371]))
              (1847386 'move' cp[1847378](1847389 call chpl__initCopy[964668] coerce_tmp[1847380]))
              ref call_tmp[1847391]:_ref(int(32))[936537] "dead at end of block" "maybe param" "reference to a const" "temp"
              (1847393 'move' call_tmp[1847391](1847395 '.' tmp[1847345] x2[964529]))
              const-val nBytes[1847398]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[1847400]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1847402 'move' coerce_tmp[1847400](1847404 'deref' call_tmp[1847391]))
              (1847406 'move' nBytes[1847398](1847409 call chpl__initCopy[964668] coerce_tmp[1847400]))
              const-val yret[1847411]:(int(32),byteIndex,int(64))[1122053] "dead after last mention" "YVV" "temp"
              val call_tmp[1847413]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[1847415]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
              (1847417 'move' call_tmp[1847415] cp[1847378])
              const-val call_tmp[1847420]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret_tmp[1847422]:byteIndex[28170] "temp"
              (1847425 call _cast[39483] i[1847064] ret_tmp[1847422])
              (1847428 'move' call_tmp[1847420] ret_tmp[1847422])
              const-val call_tmp[1847431]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1847433 'move' call_tmp[1847431](1847435 'cast' int(64)[13] nBytes[1847398]))
              const-val call_tmp[1847438]:(int(32),byteIndex,int(64))[1122053] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret_tmp[1847440]:(int(32),byteIndex,int(64))[1122053] "temp"
              (1847443 call _build_tuple[1122003] cp[1847378] call_tmp[1847420] call_tmp[1847431] ret_tmp[1847440])
              (1847448 'move' call_tmp[1847438] ret_tmp[1847440])
              (1847451 'move' yret[1847411] call_tmp[1847438])
              const-val _yieldedIndex[1847752]:(int(32),byteIndex,int(64))[1122053] "temp"
              (1847929 'move' _yieldedIndex[1847752] call_tmp[1847438])
              {
                1
                const-val cp[1847755]:int(32)[95] "const" "index var" "insert auto destroy"
                (1847757 'move' cp[1847755](1847759 '.v' _yieldedIndex[1847752] x0[1122047]))
                ref byteIdx[1847762]:_ref(byteIndex)[948670] "index var" "insert auto destroy"
                (1847764 'move' byteIdx[1847762](1847766 '.v' _yieldedIndex[1847752] x1[1122049]))
                const-val nBytes[1847769]:int(64)[13] "const" "index var" "insert auto destroy"
                (1847771 'move' nBytes[1847769](1847773 '.v' _yieldedIndex[1847752] x2[1122051]))
                {
                  const-val call_tmp[1847777]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1847779 'move' call_tmp[1847777](1847782 call ==[29538] charCount[34827] i[34685]))
                  const-val call_tmp[1847785]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1847787 'move' call_tmp[1847785] call_tmp[1847777])
                  if call_tmp[1847785]
                  {
                    ref call_tmp[1847792]:_ref(c_ptr(uint(8)))[937343] "dead at end of block" "maybe param" "temp"
                    (1847794 'move' call_tmp[1847792](1847797 call buff[757875] this[34690]))
                    const-val call_tmp[1847799]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                    (1847801 'move' call_tmp[1847799](1847804 call _cast[39462] byteIdx[1847762]))
                    ref call_tmp[1847806]:_ref(int(32))[936537] "dead at end of block" "maybe param" "temp"
                    (1847808 'move' call_tmp[1847806](1847811 call locale_id[757953] this[34690]))
                    const-val call_tmp[1847813]:(c_ptr(uint(8)),int(64))[955119] "dead at end of block" "maybe param" "temp"
                    val coerce_tmp[1847815]:c_ptr(uint(8))[937334] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (1847817 'move' coerce_tmp[1847815](1847819 'deref' call_tmp[1847792]))
                    const-val coerce_tmp[1847821]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (1847823 'move' coerce_tmp[1847821](1847825 'deref' call_tmp[1847806]))
                    const-val ret_tmp[1847827]:(c_ptr(uint(8)),int(64))[955119] "temp"
                    (1847830 call bufferCopy[172928] coerce_tmp[1847815] call_tmp[1847799] nBytes[1847769] coerce_tmp[1847821] ret_tmp[1847827])
                    (1847836 'move' call_tmp[1847813] ret_tmp[1847827])
                    const-val tmp[1847839]:(c_ptr(uint(8)),int(64))[955119] "dead at end of block" "insert auto destroy" "temp"
                    (1847841 'move' tmp[1847839] call_tmp[1847813])
                    1
                    ref call_tmp[1847845]:_ref(c_ptr(uint(8)))[937343] "dead at end of block" "maybe param" "temp"
                    (1847847 'move' call_tmp[1847845](1847849 '.' tmp[1847839] x0[955115]))
                    val newBuff[1847852]:c_ptr(uint(8))[937334] "dead at end of block" "insert auto destroy"
                    val coerce_tmp[1847854]:c_ptr(uint(8))[937334] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1847856 'move' coerce_tmp[1847854](1847858 'deref' call_tmp[1847845]))
                    (1847860 '=' newBuff[1847852] coerce_tmp[1847854])
                    (1847863 'noop')
                    ref call_tmp[1847864]:_ref(int(64))[936483] "dead at end of block" "maybe param" "temp"
                    (1847866 'move' call_tmp[1847864](1847868 '.' tmp[1847839] x1[955117]))
                    const-val allocSize[1847871]:int(64)[13] "dead at end of block" "insert auto destroy"
                    const-val coerce_tmp[1847873]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1847875 'move' coerce_tmp[1847873](1847877 'deref' call_tmp[1847864]))
                    (1847879 '=' allocSize[1847871] coerce_tmp[1847873])
                    (1847882 'noop')
                    const-val call_tmp[1847883]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1847885]:string[26] "temp"
                    (1847888 call chpl_createStringWithOwnedBufferNV[30673] newBuff[1847852] nBytes[1847769] allocSize[1847871] 1 ret_tmp[1847885])
                    (1847894 'move' call_tmp[1847883] ret_tmp[1847885])
                    (1847897 'move' ret[504066] call_tmp[1847883])
                    (1847901 call chpl__autoDestroy[1498061] tmp[1847839])
                    (1847920 call chpl__autoDestroy[1494683] call_tmp[1847420])
                    (1847923 call chpl__autoDestroy[1498323] tmp[1847345])
                    (1847926 call chpl__autoDestroy[1494420] localThis[1846715])
                    (1847904 call _freeIterator[1122484] _iterator[34904])
                    (1847907 call chpl__autoDestroy[1494683] default_arg_start[1180773])
                    gotoReturn _end_item[504064] _end_item[504064]
                  }
                  (1847913 call +=[451226] charCount[34827] 1)
                }
                label _continueLabel[1847916]
              }
              (1847471 call chpl__autoDestroy[1494683] call_tmp[1847420])
              const-val coerce_tmp[1847473]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1847475 'move' coerce_tmp[1847473](1847477 'cast' int(64)[13] nBytes[1847398]))
              (1847481 call +=[451226] i[1847064] coerce_tmp[1847473])
              (1847485 call chpl__autoDestroy[1498323] tmp[1847345])
              ref call_tmp[1847487]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
              (1847489 'move' call_tmp[1847487](1847492 call buffLen[757797] localThis[1846715]))
              const-val call_tmp[1847494]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1847496]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1847498 'move' coerce_tmp[1847496](1847500 'deref' call_tmp[1847487]))
              (1847502 'move' call_tmp[1847494](1847505 call <[437363] i[1847064] coerce_tmp[1847496]))
              (1847508 'move' tmp[1847277] call_tmp[1847494])
              tmp[1847277]
            }
          }
          (1847513 call chpl__autoDestroy[1494420] localThis[1846715])
          label _end_cpIndexLen[1847515]
        }
        label _breakLabel[34909]
        (1798445 call _freeIterator[1122484] _iterator[34904])
        (1798447 call chpl__autoDestroy[1494683] default_arg_start[1180773])
      }
      {
        const-val call_tmp[600909]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (600912 'move' call_tmp[600909](34965 call size[32769] this[34690]))
        (34968 call halt[1175672] "index " i[34685] " out of bounds for string with length " call_tmp[600909])
      }
      (504090 'move' ret[504066](1786621 call chpl__initCopy[981259] ""))
      gotoReturn _end_item[504064] _end_item[504064]
    }
    label _end_item[504064]
    (1786617 '=' _retArg[1786615] ret[504066])
    (1786623 return _void[55])
  }
  function _ref(string)[937850].item[35008](const  ref arg this[35010]:_ref(string)[937850], const in arg i[35005]:int(64)[13], ref arg _retArg[1786631]:_ref(string)[937850]) : void[4] "fn returns via _retArg" "inline" "method" "resolved"
  {
    const-val ret[504096]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[600914]:codepointIndex[28274] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1787321]:codepointIndex[28274] "temp"
    (35019 call _cast[39535] i[35005] ret_tmp[1787321])
    (1787324 'move' call_tmp[600914] ret_tmp[1787321])
    const-val call_tmp[600919]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1786579]:string[26] "temp"
    (35022 call this[34632] this[35010] call_tmp[600914] ret_tmp[1786579])
    (1786582 'move' call_tmp[600919] ret_tmp[1786579])
    (1180873 'move' ret[504096] call_tmp[600919])
    (1786633 '=' _retArg[1786631] ret[504096])
    (1798450 call chpl__autoDestroy[1494750] call_tmp[600914])
    (1786635 return _void[55])
  }
  function _ref(string)[937850].this[1111277](const  ref arg this[1111283]:_ref(string)[937850], const in arg r[1111285]:range(int(64),bounded,false)[1026725], ref arg _retArg[1790742]:_ref(string)[937850]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free"
  {
    const-val ret[1111289]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1111297]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1790748]:string[26] "temp"
    (1111302 call getSlice[1111313] this[1111283] r[1111285] ret_tmp[1790748])
    (1790751 'move' call_tmp[1111297] ret_tmp[1790748])
    (1121879 'move' ret[1111289] call_tmp[1111297])
    (1790744 '=' _retArg[1790742] ret[1111289])
    (1790746 return _void[55])
  }
  function _ref(string)[937850].this[1123411](const  ref arg this[1123417]:_ref(string)[937850], const in arg r[1123419]:range(byteIndex,bounded,false)[1025703], ref arg _retArg[1790976]:_ref(string)[937850]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free"
  {
    const-val ret[1123423]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1123431]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1790982]:string[26] "temp"
    (1123436 call getSlice[1123447] this[1123417] r[1123419] ret_tmp[1790982])
    (1790985 'move' call_tmp[1123431] ret_tmp[1790982])
    (1124293 'move' ret[1123423] call_tmp[1123431])
    (1790978 '=' _retArg[1790976] ret[1123423])
    (1790980 return _void[55])
  }
  function _ref(string)[937850].this[1125473](const  ref arg this[1125479]:_ref(string)[937850], const in arg r[1125481]:range(int(64),boundedLow,false)[1087476], ref arg _retArg[1791036]:_ref(string)[937850]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free"
  {
    const-val ret[1125485]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1125493]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1791042]:string[26] "temp"
    (1125498 call getSlice[1125509] this[1125479] r[1125481] ret_tmp[1791042])
    (1791045 'move' call_tmp[1125493] ret_tmp[1791042])
    (1142413 'move' ret[1125485] call_tmp[1125493])
    (1791038 '=' _retArg[1791036] ret[1125485])
    (1791040 return _void[55])
  }
  function _ref(string)[937850].this[1143634](const  ref arg this[1143640]:_ref(string)[937850], const in arg r[1143642]:range(byteIndex,boundedLow,false)[1143314], ref arg _retArg[1791240]:_ref(string)[937850]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free"
  {
    const-val ret[1143646]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1143654]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1791246]:string[26] "temp"
    (1143659 call getSlice[1143670] this[1143640] r[1143642] ret_tmp[1791246])
    (1791249 'move' call_tmp[1143654] ret_tmp[1791246])
    (1156368 'move' ret[1143646] call_tmp[1143654])
    (1791242 '=' _retArg[1791240] ret[1143646])
    (1791244 return _void[55])
  }
  function _ref(string)[937850].this[1185150](const  ref arg this[1185156]:_ref(string)[937850], const in arg r[1185158]:range(byteIndex,boundedHigh,false)[1184830], ref arg _retArg[1791574]:_ref(string)[937850]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free"
  {
    const-val ret[1185162]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1185170]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1791580]:string[26] "temp"
    (1185175 call getSlice[1185186] this[1185156] r[1185158] ret_tmp[1791580])
    (1791583 'move' call_tmp[1185170] ret_tmp[1791580])
    (1203671 'move' ret[1185162] call_tmp[1185170])
    (1791576 '=' _retArg[1791574] ret[1185162])
    (1791578 return _void[55])
  }
  function _ref(string)[937850].isEmpty[35061](const  ref arg this[35063]:_ref(string)[937850]) : bool[10] "inline" "method" "resolved" "fn synchronization free"
  {
    val ret[504116]:bool[10] "dead after last mention" "RVV" "temp"
    ref call_tmp[600931]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
    (600934 'move' call_tmp[600931](35070 call buffLen[757797] this[35063]))
    const-val call_tmp[600936]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1020443]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1020447 'move' coerce_tmp[1020443](1020445 'deref' call_tmp[600931]))
    (600939 'move' call_tmp[600936](35074 call ==[435539] coerce_tmp[1020443] 0))
    (1020451 'move' ret[504116] call_tmp[600936])
    (504118 return ret[504116])
  }
  function _ref(string)[937850].find[1025498](const  ref arg this[1025504]:_ref(string)[937850], const  ref arg needle[1025506]:string[26], const in arg region[1025528]:range(byteIndex,bounded,false)[1025703], ref arg _retArg[1789443]:_ref(byteIndex)[948670]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved"
  {
    val ret[1025532]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1029826]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1029828 'move' call_tmp[1029826](1029834 call isASCII[31046] this[1025504]))
    const-val call_tmp[1029835]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1029837 'move' call_tmp[1029835] call_tmp[1029826])
    if call_tmp[1029835]
    {
      const-val call_tmp[1029844]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1029846 'move' call_tmp[1029844](1029849 call doSearchNoEnc[1029964] this[1025504] needle[1025506] region[1025528]))
      const-val call_tmp[1029855]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1787279]:byteIndex[28170] "temp"
      (1029860 call _cast[39483] call_tmp[1029844] ret_tmp[1787279])
      (1787282 'move' call_tmp[1029855] ret_tmp[1787279])
      (1107429 'move' ret[1025532] call_tmp[1029855])
      gotoReturn _end_find[1029900] _end_find[1029900]
    }
    {
      const-val call_tmp[1029871]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1029873 'move' call_tmp[1029871](1029879 call doSearchUTF8[1106022] this[1025504] needle[1025506] region[1025528]))
      const-val call_tmp[1029884]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1787285]:byteIndex[28170] "temp"
      (1029889 call _cast[39483] call_tmp[1029871] ret_tmp[1787285])
      (1787288 'move' call_tmp[1029884] ret_tmp[1787285])
      (1107432 'move' ret[1025532] call_tmp[1029884])
      gotoReturn _end_find[1029900] _end_find[1029900]
    }
    label _end_find[1029900]
    (1789445 '=' _retArg[1789443] ret[1025532])
    (1789447 return _void[55])
  }
  function _ref(string)[937850].find_default_region[1029909](const  ref arg this[1029912]:_ref(string)[937850], ref arg _retArg[1789515]:_ref(range(byteIndex,bounded,false))[1025712]) : void[4] "compiler generated" "default actual function" "fn returns via _retArg" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    const-val ret[1029915]:range(byteIndex,bounded,false)[1025703] "dead after last mention" "RVV" "maybe param" "temp"
    const-val region[1029920]:range(byteIndex,bounded,false)[1025703] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val call_tmp[1029923]:range(byteIndex,bounded,false)[1025703] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1029928]:range(int(64),bounded,false)[1026725] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1786191]:range(int(64),bounded,false)[1026725] "temp"
    (1029933 call byteIndices[31065] this[1029912] ret_tmp[1786191])
    (1786194 'move' call_tmp[1029928] ret_tmp[1786191])
    const-val ret_tmp[1789449]:range(byteIndex,bounded,false)[1025703] "temp"
    (1029937 call _cast[1027473] call_tmp[1029928] ret_tmp[1789449])
    (1789452 'move' region[1029920] ret_tmp[1789449])
    (1029945 'move' ret[1029915] region[1029920])
    (1789517 '=' _retArg[1789515] ret[1029915])
    (1799486 call chpl__autoDestroy[1567322] call_tmp[1029928])
    (1789519 return _void[55])
  }
  function _ref(string)[937850].find[1181557](const  ref arg this[1181563]:_ref(string)[937850], const  ref arg needle[1181565]:string[26], const in arg region[1181587]:range(byteIndex,boundedLow,false)[1143314], ref arg _retArg[1791526]:_ref(byteIndex)[948670]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved"
  {
    val ret[1181591]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1181597]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1181599 'move' call_tmp[1181597](1181605 call isASCII[31046] this[1181563]))
    const-val call_tmp[1181606]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1181608 'move' call_tmp[1181606] call_tmp[1181597])
    if call_tmp[1181606]
    {
      const-val call_tmp[1181615]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1181617 'move' call_tmp[1181615](1181620 call doSearchNoEnc[1181677] this[1181563] needle[1181565] region[1181587]))
      const-val call_tmp[1181626]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1787303]:byteIndex[28170] "temp"
      (1181631 call _cast[39483] call_tmp[1181615] ret_tmp[1787303])
      (1787306 'move' call_tmp[1181626] ret_tmp[1787303])
      (1184125 'move' ret[1181591] call_tmp[1181626])
      gotoReturn _end_find[1181671] _end_find[1181671]
    }
    {
      const-val call_tmp[1181642]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1181644 'move' call_tmp[1181642](1181650 call doSearchUTF8[1182718] this[1181563] needle[1181565] region[1181587]))
      const-val call_tmp[1181655]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1787309]:byteIndex[28170] "temp"
      (1181660 call _cast[39483] call_tmp[1181642] ret_tmp[1787309])
      (1787312 'move' call_tmp[1181655] ret_tmp[1787309])
      (1184128 'move' ret[1181591] call_tmp[1181655])
      gotoReturn _end_find[1181671] _end_find[1181671]
    }
    label _end_find[1181671]
    (1791528 '=' _retArg[1791526] ret[1181591])
    (1791530 return _void[55])
  }
  function _ref(string)[937850].replace[35363](const  ref arg this[35377]:_ref(string)[937850], const  ref arg needle[35360]:string[26], const  ref arg replacement[35366]:string[26], const in arg count[35373]:int(64)[13], ref arg _retArg[1786649]:_ref(string)[937850]) : void[4] "fn returns via _retArg" "inline" "method" "resolved"
  {
    const-val ret[504200]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[601069]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1791508]:string[26] "temp"
    (35389 call doReplace[1180925] this[35377] needle[35360] replacement[35366] count[35373] ret_tmp[1791508])
    (1791511 'move' call_tmp[601069] ret_tmp[1791508])
    (1203694 'move' ret[504200] call_tmp[601069])
    (1786651 '=' _retArg[1786649] ret[504200])
    (1786653 return _void[55])
  }
  function _ref(string)[937850].split[35483](const  ref arg this[35485]:_ref(string)[937850], const in arg maxsplit[35479]:int(64)[13], ref arg _retArg[1786667]:_ref(_ir_split__ref_string)[1156532]) : void[4] "fn returns via _retArg" "inline" "iterator fn" "method" "resolved" "no return value for void"
  {
    val _ir[1954414]:_ir_split__ref_string[1156421] "temp"
    (1954416 '.=' _ir[1954414] F0_this[1951063] this[35485])
    (1954420 '.=' _ir[1954414] F1_maxsplit[1951067] maxsplit[35479])
    (1954424 '=' _retArg[1786667] _ir[1954414])
    (1954427 return _void[55])
  }
  type _ic_split__ref_string[1156415] val super[1156416]:object[22] "super class" val more[1156418]:int(64)[13] ref F0_this[1951061]:_ref(string)[937850] const-val F1_maxsplit[1951065]:int(64)[13] val F2__iterator[1951069]:_ic_doSplitWSNoEnc[1124386] const F3_localx[1951071]:string[26] val F4_done[1951073]:bool[10] val F5_yieldChunk[1951075]:bool[10] const-val F6_chunk[1951077]:string[26] const F7_noSplits[1951079]:bool[10] const F8_limitSplits[1951081]:bool[10] val F9_splitCount[1951083]:int(64)[13] const F10_iEnd[1951085]:int(64)[13] val F11_inChunk[1951087]:bool[10] val F12_chunkStart[1951089]:int(64)[13] val F13__iterator[1951091]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108477] val F14_call_tmp[1951093]:range(int(64),bounded,false)[1026725] val F15__iterator[1951095]:_ic_these_range_int64_t_bounded_F[1096614] val F16__iterator[1951097]:_ic_chpl_bytes__ref_string[1108167] val F17__indexOfInterest[1951099]:(int(64),uint(8))[1110951] const-val F18_ret_tmp[1951101]:range(int(64),boundedLow,false)[1087476] const-val F19_ret_tmp[1951103]:string[26] const-val F20_ret_tmp[1951105]:range(int(64),boundedLow,false)[1087476] const-val F21_ret_tmp[1951107]:string[26] const-val F22_ret_tmp[1951109]:range(int(64),bounded,false)[1026725] const-val F23_ret_tmp[1951111]:string[26] const-val F24_ret_tmp[1951113]:range(int(64),boundedLow,false)[1087476] const-val F25_ret_tmp[1951115]:string[26] const F26_s[1951117]:string[26] const F27_localThis[1951119]:string[26] val F28_done[1951121]:bool[10] val F29_yieldChunk[1951123]:bool[10] const-val F30_chunk[1951125]:string[26] const F31_noSplits[1951127]:bool[10] const F32_limitSplits[1951129]:bool[10] val F33_splitCount[1951131]:int(64)[13] const-val F34_iEnd[1951133]:byteIndex[28170] val F35_inChunk[1951135]:bool[10] const-val F36_chunkStart[1951137]:byteIndex[28170] val F37__iterator[1951139]:_ic__cpIndexLen__ref_string[1122296] val F38_default_arg_start[1951141]:byteIndex[28170] val F39_localThis[1951143]:string[26] val F40__iterator[1951145]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108477] val F41_call_tmp[1951147]:range(int(64),bounded,false)[1026725] val F42__iterator[1951149]:_ic_these_range_int64_t_bounded_F[1096614] val F43__iterator[1951151]:_ic_chpl_bytes__ref_string[1108167] val F44__indexOfInterest[1951153]:(int(64),uint(8))[1110951] val F45_call_tmp[1951155]:byteIndex[28170] const-val F46_ret_tmp[1951157]:byteIndex[28170] const-val F47_ret_tmp[1951159]:(int(32),byteIndex,int(64))[1122053] const-val F48_ret_tmp[1951161]:byteIndex[28170] const-val F49_ret_tmp[1951163]:byteIndex[28170] const-val F50_ret_tmp[1951165]:range(byteIndex,boundedLow,false)[1143314] const-val F51_ret_tmp[1951167]:string[26] const-val F52_ret_tmp[1951169]:range(byteIndex,boundedLow,false)[1143314] const-val F53_ret_tmp[1951171]:string[26] const-val F54_ret_tmp[1951173]:byteIndex[28170] const-val F55_ret_tmp[1951175]:range(byteIndex,bounded,false)[1025703] const-val F56_ret_tmp[1951177]:string[26] const-val F57_ret_tmp[1951179]:byteIndex[28170] const-val F58_ret_tmp[1951181]:byteIndex[28170] const-val F59_ret_tmp[1951183]:range(byteIndex,boundedLow,false)[1143314] const-val F60_ret_tmp[1951185]:string[26] val F61_i[1951187]:int(64)[13] const-val F62_ret_tmp[1951189]:(syserr,int(32),int(32))[964531] const F63_tmp[1951191]:(syserr,int(32),int(32))[964531] const F64_nBytes[1951193]:int(32)[95] val F65_call_tmp[1951195]:byteIndex[28170] const-val F66_ret_tmp[1951197]:byteIndex[28170] const-val F67_ret_tmp[1951199]:(int(32),byteIndex,int(64))[1122053] const-val F68_ret_tmp[1951201]:byteIndex[28170] const-val F69_ret_tmp[1951203]:byteIndex[28170] const-val F70_ret_tmp[1951205]:range(byteIndex,boundedLow,false)[1143314] const-val F71_ret_tmp[1951207]:string[26] const-val F72_ret_tmp[1951209]:range(byteIndex,boundedLow,false)[1143314] const-val F73_ret_tmp[1951211]:string[26] const-val F74_ret_tmp[1951213]:byteIndex[28170] const-val F75_ret_tmp[1951215]:range(byteIndex,bounded,false)[1025703] const-val F76_ret_tmp[1951217]:string[26] const-val F77_ret_tmp[1951219]:byteIndex[28170] const-val F78_ret_tmp[1951221]:byteIndex[28170] const-val F79_ret_tmp[1951223]:range(byteIndex,boundedLow,false)[1143314] const-val F80_ret_tmp[1951225]:string[26] val F81__yield_expr_tmp_[1951227]:string[26] val F82__yield_expr_tmp_[1951229]:string[26] val F83__yield_expr_tmp_[1951231]:string[26] val value[1951233]:string[26]
  type _ir_split__ref_string[1156421] ref F0_this[1951063]:_ref(string)[937850] const-val F1_maxsplit[1951067]:int(64)[13]
  function _getIterator[1156430](const  ref arg ir[1156432]:_ir_split__ref_string[1156421]) : _ic_split__ref_string[1156415] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[1156539]:_ic_split__ref_string[1156415] "dead after last mention" "RVV" "temp"
    val _ic_[1156422]:_ic_split__ref_string[1156415] "dead after last mention" "temp"
    const-val call_tmp[1156546]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1156549 'move' call_tmp[1156546](1156561 'sizeof_bundle' _ic_split__ref_string[1156415]))
    const-val cast_tmp[1156564]:c_void_ptr[149] "dead after last mention" "temp"
    (1156566 'move' cast_tmp[1156564](1156427 call chpl_here_alloc[187742] call_tmp[1156546] 36))
    (1156435 'move' _ic_[1156422](1156568 'cast' _ic_split__ref_string[1156415] cast_tmp[1156564]))
    (1156437 'setcid' _ic_[1156422])
    (1156544 'move' ret[1156539] _ic_[1156422])
    (1954430 '.=' ret[1156539] more[1156418] 1)
    ref tmp[1954434]:_ref(string)[937850] "temp"
    (1954439 'move' tmp[1954434](1954435 '.v' ir[1156432] F0_this[1951063]))
    (1954441 '.=' ret[1156539] F0_this[1951061] tmp[1954434])
    const-val tmp[1954445]:int(64)[13] "temp"
    (1954450 'move' tmp[1954445](1954446 '.v' ir[1156432] F1_maxsplit[1951067]))
    (1954452 '.=' ret[1156539] F1_maxsplit[1951065] tmp[1954445])
    (1156541 return ret[1156539])
  }
  function _ref(string)[937850].strip[36092](const  ref arg this[36102]:_ref(string)[937850], const  ref arg chars[36088]:string[26], const in arg leading[36095]:bool[10], const in arg trailing[36099]:bool[10], ref arg _retArg[1786689]:_ref(string)[937850]) : void[4] "fn returns via _retArg" "method" "resolved"
  {
    val ret[504273]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[601391]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (601394 'move' call_tmp[601391](36113 call isASCII[31046] this[36102]))
    const-val call_tmp[601396]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (601399 'move' call_tmp[601396] call_tmp[601391])
    if call_tmp[601396]
    {
      const-val call_tmp[601401]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1790602]:string[26] "temp"
      (36120 call doStripNoEnc[1107545] this[36102] chars[36088] leading[36095] trailing[36099] ret_tmp[1790602])
      (1790605 'move' call_tmp[601401] ret_tmp[1790602])
      (1124296 'move' ret[504273] call_tmp[601401])
      gotoReturn _end_strip[504271] _end_strip[504271]
    }
    {
      const-val call_tmp[601408]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (601411 'move' call_tmp[601408](36129 call isEmpty[35061] this[36102]))
      const-val call_tmp[601413]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (601416 'move' call_tmp[601413] call_tmp[601408])
      if call_tmp[601413]
      {
        (504285 'move' ret[504273](1786693 call chpl__initCopy[981259] ""))
        gotoReturn _end_strip[504271] _end_strip[504271]
      }
      const-val call_tmp[601420]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (601423 'move' call_tmp[601420](36160 call isEmpty[35061] chars[36088]))
      const-val call_tmp[601425]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (601428 'move' call_tmp[601425] call_tmp[601420])
      if call_tmp[601425]
      {
        (1124301 'move' ret[504273](1124299 call chpl__autoCopy[1121886] this[36102]))
        gotoReturn _end_strip[504271] _end_strip[504271]
      }
      const-val call_tmp[601432]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1786391]:string[26] "temp"
      (36175 call localize[32886] this[36102] ret_tmp[1786391])
      (1786394 'move' call_tmp[601432] ret_tmp[1786391])
      const localThis[36176]:string[26] "dead at end of block" "const" "insert auto destroy"
      (540344 'move' localThis[36176] call_tmp[601432])
      const-val call_tmp[601439]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1786397]:string[26] "temp"
      (36186 call localize[32886] chars[36088] ret_tmp[1786397])
      (1786400 'move' call_tmp[601439] ret_tmp[1786397])
      const-val localChars[36187]:string[26] "dead at end of block" "const" "insert auto destroy"
      (540346 'move' localChars[36187] call_tmp[601439])
      val start[36193]:byteIndex[28170] "dead at end of block" "insert auto destroy"
      (540348 call init=[28145] start[36193] 0)
      ref call_tmp[601446]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
      (601449 'move' call_tmp[601446](36199 call buffLen[757797] localThis[36176]))
      const-val call_tmp[601451]:int(64)[13] "dead at end of block" "insert auto destroy" "maybe param" "temp"
      const-val coerce_tmp[1121927]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1121931 'move' coerce_tmp[1121927](1121929 'deref' call_tmp[601446]))
      (601454 'move' call_tmp[601451](36203 call -[962137] coerce_tmp[1121927]))
      val end[36205]:byteIndex[28170] "dead at end of block" "insert auto destroy"
      (540350 call init=[28145] end[36205] call_tmp[601451])
      const-val call_tmp[601456]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (601459 'move' call_tmp[601456] leading[36095])
      if call_tmp[601456]
      {
        {
          val _indexOfInterest[36288]:(int(32),byteIndex,int(64))[1122053] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[36289]:_ic__cpIndexLen__ref_string[1122296] "dead at end of block" "expr temp" "temp"
          const-val call_tmp[601463]:_ir__cpIndexLen__ref_string[1122302] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val default_arg_start[1121968]:byteIndex[28170] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
          const-val ret_tmp[1790892]:byteIndex[28170] "temp"
          (1121970 call _cpIndexLen_default_start[1121942] localThis[36176] ret_tmp[1790892])
          (1790895 'move' default_arg_start[1121968] ret_tmp[1790892])
          const-val ret_tmp[1786281]:_ir__cpIndexLen__ref_string[1122302] "temp"
          (36221 call _cpIndexLen[31106] localThis[36176] default_arg_start[1121968] ret_tmp[1786281])
          (1786284 'move' call_tmp[601463] ret_tmp[1786281])
          (36298 'move' _iterator[36289](36296 call _getIterator[1122311] call_tmp[601463]))
          {
            val ret[1851408]:_ir__cpIndexLen__ref_string[1122302] "dead after last mention" "RVV" "temp"
            const-val call_tmp[1851410]:string[26] "dead at end of block" "maybe param" "temp"
            const-val ret_tmp[1851412]:string[26] "temp"
            ref this[1853579]:_ref(string)[937850] "temp"
            (1853584 'move' this[1853579](1853581 '.v' _iterator[36289] F0_this[1946835]))
            (1851415 call localize[32886] this[1853579] ret_tmp[1851412])
            (1851418 'move' call_tmp[1851410] ret_tmp[1851412])
            val localThis[1851421]:string[26] "dead at end of block" "insert auto destroy"
            (1851423 'move' localThis[1851421] call_tmp[1851410])
            const-val call_tmp[1851426]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1851428 'move' call_tmp[1851426](1851431 call isASCII[31046] localThis[1851421]))
            const-val call_tmp[1851433]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1851435 'move' call_tmp[1851433] call_tmp[1851426])
            if call_tmp[1851426]
            {
              const-val _iterator[1851440]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108477] "dead at end of block" "expr temp" "insert auto destroy" "temp"
              const-val call_tmp[1851442]:range(int(64),bounded,false)[1026725] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret_tmp[1851444]:range(int(64),bounded,false)[1026725] "temp"
              ref this[1853586]:_ref(string)[937850] "temp"
              (1853591 'move' this[1853586](1853588 '.v' _iterator[36289] F0_this[1946835]))
              (1851447 call byteIndices[31065] this[1853586] ret_tmp[1851444])
              (1851450 'move' call_tmp[1851442] ret_tmp[1851444])
              val call_tmp[1851453]:_ic_these_range_int64_t_bounded_F[1096614] "dead at end of block" "expr temp" "maybe param" "temp"
              (1851455 'move' call_tmp[1851453](1851458 call _getIterator[1095231] call_tmp[1851442]))
              const-val call_tmp[1851460]:_ir_chpl_bytes__ref_string[1108173] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[1851462]:_ir_chpl_bytes__ref_string[1108173] "temp"
              ref this[1853593]:_ref(string)[937850] "temp"
              (1853598 'move' this[1853593](1853595 '.v' _iterator[36289] F0_this[1946835]))
              (1851465 call chpl_bytes[33574] this[1853593] ret_tmp[1851462])
              (1851468 'move' call_tmp[1851460] ret_tmp[1851462])
              val call_tmp[1851471]:_ic_chpl_bytes__ref_string[1108167] "dead at end of block" "expr temp" "maybe param" "temp"
              (1851473 'move' call_tmp[1851471](1851476 call _getIterator[1108182] call_tmp[1851460]))
              const-val ret_tmp[1851478]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108477] "temp"
              (1851481 call _build_tuple[1108435] call_tmp[1851453] call_tmp[1851471] ret_tmp[1851478])
              (1851485 'move' _iterator[1851440] ret_tmp[1851478])
              val _iterator[1851488]:_ic_these_range_int64_t_bounded_F[1096614] "temp"
              (1851490 'move' _iterator[1851488](1851492 '.v' _iterator[1851440] x0[1108473]))
              val _iterator[1851495]:_ic_chpl_bytes__ref_string[1108167] "temp"
              (1851497 'move' _iterator[1851495](1851499 '.v' _iterator[1851440] x1[1108475]))
              {
                (1851504 call zip1[1096649] _iterator[1851488])
              }
              {
                (1851508 call zip1[1108202] _iterator[1851495])
              }
              const-val isFinished[1851510]:bool[10] "temp"
              val hasMore[1851512]:bool[10] "temp"
              CForLoop[1851514]
              {
                val _indexOfInterest[1851537]:(int(64),uint(8))[1110951] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                {
                  (1851541 call zip2[1108211] _iterator[1851495])
                }
                {
                  const-val retTmp[1851544]:int(64)[13] "temp"
                  (1851546 'move' retTmp[1851544](1851549 call hasMore[1108238] _iterator[1851495]))
                  (1851551 'move' hasMore[1851512](1851553 'cast' bool[10] retTmp[1851544]))
                }
                (1851556 'move' isFinished[1851510](1851558 '!' hasMore[1851512]))
                if isFinished[1851510]
                {
                  (1851562 'chpl_error' c"zippered iterations have non-equal lengths")
                }
                {
                  (1851566 'move' _index[1851581](1851569 call getValue[1108247] _iterator[1851495]))
                }
                {
                  (1851573 call zip2[1096658] _iterator[1851488])
                }
                {
                  (1851576 'move' _index[1851587](1851579 call getValue[1096694] _iterator[1851488]))
                }
                val _index[1851581]:uint(8)[100] "temp"
                (1851583 '.=' _indexOfInterest[1851537] x1[1110949] _index[1851581])
                val _index[1851587]:int(64)[13] "temp"
                (1851589 '.=' _indexOfInterest[1851537] x0[1110947] _index[1851587])
                1
                const-val i[1851594]:int(64)[13] "const" "index var" "insert auto destroy"
                (1851596 'move' i[1851594](1851598 '.v' _indexOfInterest[1851537] x0[1110947]))
                const-val b[1851601]:uint(8)[100] "const" "index var" "insert auto destroy"
                (1851603 'move' b[1851601](1851605 '.v' _indexOfInterest[1851537] x1[1110949]))
                const-val yret[1851608]:(int(32),byteIndex,int(64))[1122053] "dead after last mention" "YVV" "temp"
                val call_tmp[1851610]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val call_tmp[1851612]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (1851614 'move' call_tmp[1851612](1851616 'cast' int(32)[95] b[1851601]))
                const-val call_tmp[1851619]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1851621]:byteIndex[28170] "temp"
                (1851624 call _cast[39483] i[1851594] ret_tmp[1851621])
                (1851627 'move' call_tmp[1851619] ret_tmp[1851621])
                const-val call_tmp[1851630]:(int(32),byteIndex,int(64))[1122053] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1851632]:(int(32),byteIndex,int(64))[1122053] "temp"
                (1851635 call _build_tuple[1122003] call_tmp[1851612] call_tmp[1851619] 1 ret_tmp[1851632])
                (1851640 'move' call_tmp[1851630] ret_tmp[1851632])
                (1851643 'move' yret[1851608] call_tmp[1851630])
                const-val _yieldedIndex[1852225]:(int(32),byteIndex,int(64))[1122053] "temp"
                (1852927 'move' _yieldedIndex[1852225] call_tmp[1851630])
                {
                  1
                  const-val thisChar[1852228]:int(32)[95] "const" "index var" "insert auto destroy"
                  (1852230 'move' thisChar[1852228](1852232 '.v' _yieldedIndex[1852225] x0[1122047]))
                  ref i[1852235]:_ref(byteIndex)[948670] "index var" "insert auto destroy"
                  (1852237 'move' i[1852235](1852239 '.v' _yieldedIndex[1852225] x1[1122049]))
                  const-val nBytes[1852242]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1852244 'move' nBytes[1852242](1852246 '.v' _yieldedIndex[1852225] x2[1122051]))
                  {
                    {
                      val _indexOfInterest[1852251]:int(32)[95] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1852253]:_ic_codepoints__ref_string[1122760] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1852255]:_ir_codepoints__ref_string[1122766] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1852257]:_ir_codepoints__ref_string[1122766] "temp"
                      (1852260 call codepoints[33663] localChars[36187] ret_tmp[1852257])
                      (1852263 'move' call_tmp[1852255] ret_tmp[1852257])
                      (1852266 'move' _iterator[1852253](1852269 call _getIterator[1122775] call_tmp[1852255]))
                      {
                        val ret[1852272]:_ir_codepoints__ref_string[1122766] "dead at end of block" "RVV" "temp"
                        const-val call_tmp[1852274]:string[26] "dead at end of block" "maybe param" "temp"
                        const-val ret_tmp[1852276]:string[26] "temp"
                        ref this[1852278]:_ref(string)[937850] "temp"
                        (1852280 'move' this[1852278](1852282 '.v' _iterator[1852253] F0_this[1950361]))
                        (1852286 call localize[32886] this[1852278] ret_tmp[1852276])
                        (1852289 'move' call_tmp[1852274] ret_tmp[1852276])
                        val localThis[1852292]:string[26] "dead at end of block" "insert auto destroy"
                        (1852294 'move' localThis[1852292] call_tmp[1852274])
                        const-val call_tmp[1852297]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        ref this[1852299]:_ref(string)[937850] "temp"
                        (1852301 'move' this[1852299](1852303 '.v' _iterator[1852253] F0_this[1950361]))
                        (1852306 'move' call_tmp[1852297](1852309 call isASCII[31046] this[1852299]))
                        const-val call_tmp[1852311]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1852313 'move' call_tmp[1852311] call_tmp[1852297])
                        if call_tmp[1852297]
                        {
                          val _indexOfInterest[1852318]:uint(8)[100] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                          val _iterator[1852320]:_ic_chpl_bytes__ref_string[1108167] "dead at end of block" "expr temp" "temp"
                          const-val call_tmp[1852322]:_ir_chpl_bytes__ref_string[1108173] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val ret_tmp[1852324]:_ir_chpl_bytes__ref_string[1108173] "temp"
                          ref this[1852326]:_ref(string)[937850] "temp"
                          (1852328 'move' this[1852326](1852330 '.v' _iterator[1852253] F0_this[1950361]))
                          (1852334 call chpl_bytes[33574] this[1852326] ret_tmp[1852324])
                          (1852337 'move' call_tmp[1852322] ret_tmp[1852324])
                          (1852340 'move' _iterator[1852320](1852343 call _getIterator[1108182] call_tmp[1852322]))
                          {
                            val ret[1852346]:_ir_chpl_bytes__ref_string[1108173] "dead at end of block" "RVV" "temp"
                            const-val call_tmp[1852348]:string[26] "dead at end of block" "maybe param" "temp"
                            const-val ret_tmp[1852350]:string[26] "temp"
                            ref this[1852352]:_ref(string)[937850] "temp"
                            (1852354 'move' this[1852352](1852356 '.v' _iterator[1852320] F0_this[1948187]))
                            (1852360 call localize[32886] this[1852352] ret_tmp[1852350])
                            (1852363 'move' call_tmp[1852348] ret_tmp[1852350])
                            val localThis[1852366]:string[26] "dead at end of block" "insert auto destroy"
                            (1852368 'move' localThis[1852366] call_tmp[1852348])
                            val _indexOfInterest[1852371]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                            val _iterator[1852373]:_ic_chpl_direct_counted_range_iter[1103701] "dead at end of block" "expr temp" "temp"
                            ref call_tmp[1852375]:_ref(int(64))[936483] "dead at end of block" "maybe param" "temp"
                            (1852377 'move' call_tmp[1852375](1852380 call buffLen[757797] localThis[1852366]))
                            const-val call_tmp[1852382]:_ir_chpl_direct_counted_range_iter[1103707] "dead at end of block" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1852384]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1852386 'move' coerce_tmp[1852384](1852388 'deref' call_tmp[1852375]))
                            const-val ret_tmp[1852390]:_ir_chpl_direct_counted_range_iter[1103707] "temp"
                            (1852393 call chpl_direct_counted_range_iter[457907] 0 coerce_tmp[1852384] ret_tmp[1852390])
                            (1852397 'move' call_tmp[1852382] ret_tmp[1852390])
                            (1852400 'move' _iterator[1852373](1852403 call _getIterator[1103716] call_tmp[1852382]))
                            {
                              val ret[1852406]:_ir_chpl_direct_counted_range_iter[1103707] "dead after last mention" "RVV" "temp"
                              val _indexOfInterest[1852408]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                              val _iterator[1852410]:_ic_chpl_direct_counted_range_iter_helper[1103451] "dead at end of block" "expr temp" "temp"
                              const-val call_tmp[1852412]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead at end of block" "expr temp" "maybe param" "temp"
                              const-val ret_tmp[1852414]:_ir_chpl_direct_counted_range_iter_helper[1103457] "temp"
                              const-val low[1852416]:int(64)[13] "temp"
                              (1852418 'move' low[1852416](1852420 '.v' _iterator[1852373] F0_low[1960165]))
                              const-val count[1852423]:int(64)[13] "temp"
                              (1852425 'move' count[1852423](1852427 '.v' _iterator[1852373] F1_count[1960169]))
                              (1852431 call chpl_direct_counted_range_iter_helper[1102009] low[1852416] count[1852423] ret_tmp[1852414])
                              (1852435 'move' call_tmp[1852412] ret_tmp[1852414])
                              (1852438 'move' _iterator[1852410](1852441 call _getIterator[1103466] call_tmp[1852412]))
                              {
                                val ret[1911282]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead after last mention" "RVV" "temp"
                                val call_tmp[1911284]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                const-val tmp[1911286]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val tmp[1911288]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                                const-val call_tmp[1911290]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[1911778]:int(64)[13] "temp"
                                (1911783 'move' count[1911778](1911780 '.v' _iterator[1852410] F1_count[1964641]))
                                (1911292 'move' call_tmp[1911290](1911295 call <[948309] count[1911778]))
                                (1911297 'move' tmp[1911288] call_tmp[1911290])
                                (1911300 'move' tmp[1911286] call_tmp[1911290])
                                const-val call_tmp[1911303]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1911305 'move' call_tmp[1911303] call_tmp[1911290])
                                if call_tmp[1911290]
                                {
                                  (1911311 call boundsCheckHalt[210079] "With a negative count, the range must have a last index.")
                                }
                                const-val tmp[1911314]:2*int(64)[1039967] "dead at end of block" "const" "insert auto destroy" "temp"
                                val tmp[1911316]:2*int(64)[1039967] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                                const-val tmp[1911318]:bool[10] "dead after last mention" "maybe param" "temp"
                                const-val call_tmp[1911320]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[1911785]:int(64)[13] "temp"
                                (1911790 'move' count[1911785](1911787 '.v' _iterator[1852410] F1_count[1964641]))
                                (1911322 'move' call_tmp[1911320](1911325 call ==[435539] count[1911785] 0))
                                (1911328 'move' tmp[1911318] call_tmp[1911320])
                                if call_tmp[1911320]
                                {
                                  const-val tmp[1911333]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[1911335]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[1911337]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[1911792]:int(64)[13] "temp"
                                  (1911797 'move' low[1911792](1911794 '.v' _iterator[1852410] F0_low[1964637]))
                                  (1911339 'move' call_tmp[1911337](1911342 call _cast[955945] low[1911792]))
                                  const-val call_tmp[1911344]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val coerce_tmp[1911346]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                  (1911348 'move' coerce_tmp[1911346](1911350 'cast' uint(64)[115] 1))
                                  (1911353 'move' call_tmp[1911344](1911356 call -[962104] call_tmp[1911337]))
                                  const-val call_tmp[1911358]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  (1911360 'move' call_tmp[1911358](1911363 call _cast[953454] call_tmp[1911344]))
                                  const-val ret_tmp[1911365]:2*int(64)[1039967] "temp"
                                  const-val low[1911799]:int(64)[13] "temp"
                                  (1911804 'move' low[1911799](1911801 '.v' _iterator[1852410] F0_low[1964637]))
                                  (1911368 call _build_tuple[1039925] low[1911799] call_tmp[1911358] ret_tmp[1911365])
                                  (1911372 'move' tmp[1911333] ret_tmp[1911365])
                                  (1911375 'move' tmp[1911316] tmp[1911333])
                                }
                                {
                                  const-val tmp[1911379]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[1911381]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[1911383]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[1911806]:int(64)[13] "temp"
                                  (1911811 'move' count[1911806](1911808 '.v' _iterator[1852410] F1_count[1964641]))
                                  (1911385 'move' call_tmp[1911383] count[1911806])
                                  const-val call_tmp[1911388]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[1911813]:int(64)[13] "temp"
                                  (1911818 'move' count[1911813](1911815 '.v' _iterator[1852410] F1_count[1964641]))
                                  (1911390 'move' call_tmp[1911388](1911393 call -[962137] count[1911813]))
                                  const-val call_tmp[1911395]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[1911820]:int(64)[13] "temp"
                                  (1911825 'move' low[1911820](1911822 '.v' _iterator[1852410] F0_low[1964637]))
                                  (1911397 'move' call_tmp[1911395](1911400 call +[439547] low[1911820] call_tmp[1911388]))
                                  const-val ret_tmp[1911403]:2*int(64)[1039967] "temp"
                                  const-val low[1911827]:int(64)[13] "temp"
                                  (1911832 'move' low[1911827](1911829 '.v' _iterator[1852410] F0_low[1964637]))
                                  (1911406 call _build_tuple[1039925] low[1911827] call_tmp[1911395] ret_tmp[1911403])
                                  (1911410 'move' tmp[1911379] ret_tmp[1911403])
                                  (1911413 'move' tmp[1911316] tmp[1911379])
                                }
                                (1911417 '=' tmp[1911314] tmp[1911316])
                                (1911420 'noop')
                                1
                                ref call_tmp[1911422]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (1911424 'move' call_tmp[1911422](1911426 '.' tmp[1911314] x0[1039963]))
                                const-val start[1911429]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[1911431]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (1911433 'move' coerce_tmp[1911431](1911435 'deref' call_tmp[1911422]))
                                (1911437 '=' start[1911429] coerce_tmp[1911431])
                                (1911440 'noop')
                                ref call_tmp[1911441]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (1911443 'move' call_tmp[1911441](1911445 '.' tmp[1911314] x1[1039965]))
                                const-val end[1911448]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[1911450]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (1911452 'move' coerce_tmp[1911450](1911454 'deref' call_tmp[1911441]))
                                (1911456 '=' end[1911448] coerce_tmp[1911450])
                                (1911459 'noop')
                                val _indexOfInterest[1911460]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                val _iterator[1911462]:_ic_chpl_direct_param_stride_range_iter[1103197] "dead at end of block" "expr temp" "temp"
                                const-val call_tmp[1911464]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead at end of block" "expr temp" "maybe param" "temp"
                                const-val ret_tmp[1911466]:_ir_chpl_direct_param_stride_range_iter[1103203] "temp"
                                (1911469 call chpl_direct_param_stride_range_iter[1102435] coerce_tmp[1911431] coerce_tmp[1911450] ret_tmp[1911466])
                                (1911473 'move' call_tmp[1911464] ret_tmp[1911466])
                                (1911476 'move' _iterator[1911462](1911479 call _getIterator[1103212] call_tmp[1911464]))
                                {
                                  val ret[1911482]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead after last mention" "RVV" "temp"
                                  val call_tmp[1911484]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (1911487 call chpl_range_check_stride[1102755])
                                  val i[1911488]:int(64)[13] "dead at end of block" "insert auto destroy"
                                  val call_tmp[1911490]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (1911492 'move' i[1911488] 0)
                                  val call_tmp[1911495]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val default_arg_first[1911497]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val low[1911499]:int(64)[13] "temp"
                                  (1911501 'move' low[1911499](1911503 '.v' _iterator[1911462] F0_low[1966135]))
                                  (1911506 'move' default_arg_first[1911497](1911509 call chpl_checkIfRangeIterWillOverflow_default_first[1103109] low[1911499]))
                                  const-val default_arg_last[1911511]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val high[1911513]:int(64)[13] "temp"
                                  (1911515 'move' high[1911513](1911517 '.v' _iterator[1911462] F1_high[1966139]))
                                  (1911520 'move' default_arg_last[1911511](1911523 call chpl_checkIfRangeIterWillOverflow_default_last[1103137] high[1911513]))
                                  const-val _return_tmp_[1911525]:bool[10] "dead after last mention" "temp"
                                  const-val low[1911527]:int(64)[13] "temp"
                                  (1911529 'move' low[1911527](1911531 '.v' _iterator[1911462] F0_low[1966135]))
                                  const-val high[1911534]:int(64)[13] "temp"
                                  (1911536 'move' high[1911534](1911538 '.v' _iterator[1911462] F1_high[1966139]))
                                  (1911541 'move' _return_tmp_[1911525](1911544 call chpl_checkIfRangeIterWillOverflow[1095987] low[1911527] high[1911534] 1 default_arg_first[1911497] default_arg_last[1911511] 1))
                                  CForLoop[1911551]
                                  {
                                    const-val yret[1911580]:int(64)[13] "dead after last mention" "YVV" "temp"
                                    (1911582 'move' yret[1911580] i[1911488])
                                    const-val _yieldedIndex[1911585]:int(64)[13] "temp"
                                    (1911587 'move' _yieldedIndex[1911585] i[1911488])
                                    {
                                      const-val i[1911591]:int(64)[13] "const" "index var" "insert auto destroy"
                                      (1911593 'move' i[1911591] _yieldedIndex[1911585])
                                      const-val yret[1911596]:int(64)[13] "dead after last mention" "YVV" "temp"
                                      (1911598 'move' yret[1911596] _yieldedIndex[1911585])
                                      const-val _yieldedIndex[1911626]:int(64)[13] "temp"
                                      (1911776 'move' _yieldedIndex[1911626] _yieldedIndex[1911585])
                                      {
                                        const-val i[1911628]:int(64)[13] "const" "index var" "insert auto destroy"
                                        (1911630 'move' i[1911628] _yieldedIndex[1911626])
                                        const-val yret[1911633]:int(64)[13] "dead after last mention" "YVV" "temp"
                                        (1911635 'move' yret[1911633] _yieldedIndex[1911626])
                                        const-val _yieldedIndex[1911638]:int(64)[13] "temp"
                                        (1911640 'move' _yieldedIndex[1911638] _yieldedIndex[1911626])
                                        {
                                          const-val i[1911644]:int(64)[13] "const" "index var" "insert auto destroy"
                                          (1911646 'move' i[1911644] _yieldedIndex[1911638])
                                          const-val yret[1911649]:uint(8)[100] "dead after last mention" "YVV" "temp"
                                          ref call_tmp[1911651]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
                                          ref _this_tmp_[1911653]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "temp"
                                          (1911655 'move' _this_tmp_[1911653](1911658 call buff[757875] localThis[1852366]))
                                          val coerce_tmp[1911660]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                          (1911662 'move' coerce_tmp[1911660](1911664 'deref' _this_tmp_[1911653]))
                                          (1911666 'move' call_tmp[1911651](1911669 call this[954002] coerce_tmp[1911660] _yieldedIndex[1911638]))
                                          const-val coerce_tmp[1911672]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                          (1911674 'move' coerce_tmp[1911672](1911676 'deref' call_tmp[1911651]))
                                          (1911678 '=' yret[1911649] coerce_tmp[1911672])
                                          (1911681 'noop')
                                          const-val _yieldedIndex[1911682]:uint(8)[100] "temp"
                                          (1911684 'move' _yieldedIndex[1911682] coerce_tmp[1911672])
                                          {
                                            const-val b[1911688]:uint(8)[100] "const" "index var" "insert auto destroy"
                                            (1911690 'move' b[1911688] _yieldedIndex[1911682])
                                            val yret[1911693]:int(32)[95] "dead after last mention" "YVV" "temp"
                                            val call_tmp[1911695]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                            const-val _yieldedIndex[1911697]:int(32)[95] "temp"
                                            (1911699 'move' _yieldedIndex[1911697](1911701 'cast' int(32)[95] _yieldedIndex[1911682]))
                                            {
                                              const-val removeChar[1911705]:int(32)[95] "const" "index var" "insert auto destroy"
                                              (1911707 'move' removeChar[1911705] _yieldedIndex[1911697])
                                              {
                                                const-val call_tmp[1911711]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (1911713 'move' call_tmp[1911711](1911716 call ==[435517] thisChar[1852228] removeChar[1911705]))
                                                const-val call_tmp[1911719]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (1911721 'move' call_tmp[1911719] call_tmp[1911711])
                                                if call_tmp[1911719]
                                                {
                                                  const-val call_tmp[1911726]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                                  const-val ret_tmp[1911728]:byteIndex[28170] "temp"
                                                  (1911731 call +[28722] i[1852235] nBytes[1852242] ret_tmp[1911728])
                                                  (1911735 'move' call_tmp[1911726] ret_tmp[1911728])
                                                  (1911739 call =[38191] start[36193] call_tmp[1911726])
                                                  (1911743 call chpl__autoDestroy[1494683] call_tmp[1911726])
                                                  (1911770 call _freeIterator[1103385] _iterator[1911462])
                                                  (1911773 call chpl__autoDestroy[1567619] tmp[1911314])
                                                  (1911746 call _freeIterator[1103635] _iterator[1852410])
                                                  (1911749 call _freeIterator[1103885] _iterator[1852373])
                                                  (1911752 call chpl__autoDestroy[1494420] localThis[1852366])
                                                  (1911755 call _freeIterator[1109480] _iterator[1852320])
                                                  (1911758 call chpl__autoDestroy[1494420] localThis[1852292])
                                                  (1911761 call _freeIterator[1123047] _iterator[1852253])
                                                  continue _continueLabel[1852860] _continueLabel[1852860]
                                                }
                                              }
                                              label _continueLabel[1911766]
                                            }
                                          }
                                        }
                                      }
                                    }
                                    {
                                      const-val low[1911553]:int(64)[13] "temp"
                                      (1911555 'move' low[1911553](1911557 '.v' _iterator[1911462] F0_low[1966135]))
                                      (1911560 '=' i[1911488] low[1911553])
                                    }
                                    {
                                      const-val high[1911564]:int(64)[13] "temp"
                                      (1911566 'move' high[1911564](1911568 '.v' _iterator[1911462] F1_high[1966139]))
                                      (1911571 '<=' i[1911488] high[1911564])
                                    }
                                    {
                                      val call_tmp[1911575]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                      (1911577 '+=' i[1911488] 1)
                                    }
                                  }
                                  label _endchpl_direct_param_stride_range_iter[1911614]
                                }
                                (1911617 call _freeIterator[1103385] _iterator[1911462])
                                (1911620 call chpl__autoDestroy[1567619] tmp[1911314])
                                label _endchpl_direct_counted_range_iter_helper[1911622]
                              }
                              (1852587 call _freeIterator[1103635] _iterator[1852410])
                              label _endchpl_direct_counted_range_iter[1852589]
                            }
                            (1852592 call _freeIterator[1103885] _iterator[1852373])
                            (1852595 call chpl__autoDestroy[1494420] localThis[1852366])
                            label _endchpl_bytes[1852597]
                          }
                          (1852600 call _freeIterator[1109480] _iterator[1852320])
                        }
                        {
                          val i[1852603]:int(64)[13] "dead at end of block" "insert auto destroy"
                          (1852605 'move' i[1852603] 0)
                          val tmp[1852608]:bool[10] "dead after last mention" "temp"
                          ref call_tmp[1852610]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
                          (1852612 'move' call_tmp[1852610](1852615 call buffLen[757797] localThis[1852292]))
                          const-val call_tmp[1852617]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[1852619]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1852621 'move' coerce_tmp[1852619](1852623 'deref' call_tmp[1852610]))
                          (1852625 'move' call_tmp[1852617](1852628 call <[437363] 0 coerce_tmp[1852619]))
                          (1852631 'move' tmp[1852608] call_tmp[1852617])
                          WhileDo[1852634]
                          {
                            ref call_tmp[1852636]:_ref(c_ptr(uint(8)))[937343] "dead at end of block" "maybe param" "temp"
                            (1852638 'move' call_tmp[1852636](1852641 call buff[757875] localThis[1852292]))
                            ref call_tmp[1852643]:_ref(int(64))[936483] "dead at end of block" "maybe param" "temp"
                            (1852645 'move' call_tmp[1852643](1852648 call buffLen[757797] localThis[1852292]))
                            const-val call_tmp[1852650]:(syserr,int(32),int(32))[964531] "dead at end of block" "maybe param" "temp"
                            val coerce_tmp[1852652]:c_ptr(uint(8))[937334] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1852654 'move' coerce_tmp[1852652](1852656 'deref' call_tmp[1852636]))
                            const-val coerce_tmp[1852658]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1852660 'move' coerce_tmp[1852658](1852662 'deref' call_tmp[1852643]))
                            const-val ret_tmp[1852664]:(syserr,int(32),int(32))[964531] "temp"
                            (1852667 call decodeHelp[174406] coerce_tmp[1852652] coerce_tmp[1852658] i[1852603] 1 ret_tmp[1852664])
                            (1852673 'move' call_tmp[1852650] ret_tmp[1852664])
                            const-val tmp[1852676]:(syserr,int(32),int(32))[964531] "dead at end of block" "const" "insert auto destroy" "temp"
                            (1852678 'move' tmp[1852676] call_tmp[1852650])
                            1
                            ref call_tmp[1852682]:_ref(syserr)[948743] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1852684 'move' call_tmp[1852682](1852686 '.' tmp[1852676] x0[964525]))
                            const-val decodeRet[1852689]:syserr[223496] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1852691]:syserr[223496] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1852693 'move' coerce_tmp[1852691](1852695 'deref' call_tmp[1852682]))
                            (1852697 'move' decodeRet[1852689](1852700 call chpl__initCopy[964396] coerce_tmp[1852691]))
                            ref call_tmp[1852702]:_ref(int(32))[936537] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1852704 'move' call_tmp[1852702](1852706 '.' tmp[1852676] x1[964527]))
                            const-val cp[1852709]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1852711]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1852713 'move' coerce_tmp[1852711](1852715 'deref' call_tmp[1852702]))
                            (1852717 'move' cp[1852709](1852720 call chpl__initCopy[964668] coerce_tmp[1852711]))
                            ref call_tmp[1852722]:_ref(int(32))[936537] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1852724 'move' call_tmp[1852722](1852726 '.' tmp[1852676] x2[964529]))
                            const-val nBytes[1852729]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1852731]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1852733 'move' coerce_tmp[1852731](1852735 'deref' call_tmp[1852722]))
                            (1852737 'move' nBytes[1852729](1852740 call chpl__initCopy[964668] coerce_tmp[1852731]))
                            const-val yret[1852742]:int(32)[95] "dead after last mention" "YVV" "temp"
                            val call_tmp[1852744]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                            (1852746 'move' yret[1852742] cp[1852709])
                            const-val _yieldedIndex[1852749]:int(32)[95] "temp"
                            (1852751 'move' _yieldedIndex[1852749] cp[1852709])
                            {
                              const-val removeChar[1852755]:int(32)[95] "const" "index var" "insert auto destroy"
                              (1852757 'move' removeChar[1852755] _yieldedIndex[1852749])
                              {
                                const-val call_tmp[1852761]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1852763 'move' call_tmp[1852761](1852766 call ==[435517] thisChar[1852228] removeChar[1852755]))
                                const-val call_tmp[1852769]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1852771 'move' call_tmp[1852769] call_tmp[1852761])
                                if call_tmp[1852769]
                                {
                                  const-val call_tmp[1852776]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                  const-val ret_tmp[1852778]:byteIndex[28170] "temp"
                                  (1852781 call +[28722] i[1852235] nBytes[1852242] ret_tmp[1852778])
                                  (1852785 'move' call_tmp[1852776] ret_tmp[1852778])
                                  (1852789 call =[38191] start[36193] call_tmp[1852776])
                                  (1852793 call chpl__autoDestroy[1494683] call_tmp[1852776])
                                  (1852796 call chpl__autoDestroy[1498323] tmp[1852676])
                                  (1852799 call chpl__autoDestroy[1494420] localThis[1852292])
                                  (1852802 call _freeIterator[1123047] _iterator[1852253])
                                  continue _continueLabel[1852860] _continueLabel[1852860]
                                }
                              }
                              label _continueLabel[1852807]
                            }
                            const-val coerce_tmp[1852809]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1852811 'move' coerce_tmp[1852809](1852813 'cast' int(64)[13] nBytes[1852729]))
                            (1852817 call +=[451226] i[1852603] coerce_tmp[1852809])
                            (1852821 call chpl__autoDestroy[1498323] tmp[1852676])
                            ref call_tmp[1852823]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
                            (1852825 'move' call_tmp[1852823](1852828 call buffLen[757797] localThis[1852292]))
                            const-val call_tmp[1852830]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1852832]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1852834 'move' coerce_tmp[1852832](1852836 'deref' call_tmp[1852823]))
                            (1852838 'move' call_tmp[1852830](1852841 call <[437363] i[1852603] coerce_tmp[1852832]))
                            (1852844 'move' tmp[1852608] call_tmp[1852830])
                            tmp[1852608]
                          }
                        }
                        (1852849 call chpl__autoDestroy[1494420] localThis[1852292])
                        label _endcodepoints[1852851]
                      }
                      label _breakLabel[1852853]
                      (1852856 call _freeIterator[1123047] _iterator[1852253])
                    }
                    ref moreRef1[1852863]:_ref(int(64))[936483] "temp"
                    (1852865 'move' moreRef1[1852863](1852867 '.' _iterator[1851488] more[1096617]))
                    const-val moreVal1[1852870]:int(64)[13] "const" "temp"
                    (1852872 '=' moreVal1[1852870] moreRef1[1852863])
                    const-val moreValNeg1[1852875]:int(64)[13] "const" "temp"
                    (1852877 'move' moreValNeg1[1852875](1852879 'u-' moreVal1[1852870]))
                    (1852881 '=' moreRef1[1852863] moreValNeg1[1852875])
                    (1852885 call advance[1096640] _iterator[1851488])
                    ref moreRef2[1852887]:_ref(int(64))[936483] "temp"
                    (1852889 'move' moreRef2[1852887](1852891 '.' _iterator[1851495] more[1108170]))
                    const-val moreVal2[1852894]:int(64)[13] "const" "temp"
                    (1852896 '=' moreVal2[1852894] moreRef2[1852887])
                    const-val moreValNeg2[1852899]:int(64)[13] "const" "temp"
                    (1852901 'move' moreValNeg2[1852899](1852903 'u-' moreVal2[1852894]))
                    (1852905 '=' moreRef2[1852887] moreValNeg2[1852899])
                    (1852909 call advance[1108193] _iterator[1851495])
                    (1852912 call chpl__autoDestroy[1494683] call_tmp[1851619])
                    (1852915 call _freeIterator[1108635] _iterator[1851440])
                    (1852918 call chpl__autoDestroy[1574364] _iterator[1851440])
                    (1852921 call chpl__autoDestroy[1567322] call_tmp[1851442])
                    (1852924 call chpl__autoDestroy[1494420] localThis[1851421])
                    break _breakLabel[36294] _breakLabel[36294]
                  }
                  label _continueLabel[1852860]
                }
                (1851717 call chpl__autoDestroy[1494683] call_tmp[1851619])
                {
                  (1851721 call zip3[1096667] _iterator[1851488])
                }
                {
                  (1851725 call zip3[1108220] _iterator[1851495])
                }
                {
                  {
                    (1851518 call init[1096703] _iterator[1851488])
                  }
                  {
                    (1851522 call init[1108256] _iterator[1851495])
                  }
                }
                {
                  (1851526 call hasMore[1096685] _iterator[1851488])
                }
                {
                  {
                    (1851531 call incr[1096712] _iterator[1851488])
                  }
                  {
                    (1851535 call incr[1108265] _iterator[1851495])
                  }
                }
              }
              {
                const-val retTmp[1851728]:int(64)[13] "temp"
                (1851730 'move' retTmp[1851728](1851733 call hasMore[1108238] _iterator[1851495]))
                (1851735 'move' hasMore[1851512](1851737 'cast' bool[10] retTmp[1851728]))
              }
              if hasMore[1851512]
              {
                (1851742 'chpl_error' c"zippered iterations have non-equal lengths")
              }
              {
                (1851747 call zip4[1108229] _iterator[1851495])
              }
              {
                (1851751 call zip4[1096676] _iterator[1851488])
              }
              (1851754 call _freeIterator[1108635] _iterator[1851440])
              (1851757 call chpl__autoDestroy[1574364] _iterator[1851440])
              (1851760 call chpl__autoDestroy[1567322] call_tmp[1851442])
            }
            {
              const-val call_tmp[1851763]:int(64)[13] "dead at end of block" "maybe param" "temp"
              ref start[1853600]:_ref(byteIndex)[948670] "temp"
              (1853605 'move' start[1853600](1853602 '.v' _iterator[36289] F1_start[1946839]))
              (1851765 'move' call_tmp[1851763](1851768 call _cast[39462] start[1853600]))
              val i[1851770]:int(64)[13] "dead at end of block" "insert auto destroy"
              (1851772 'move' i[1851770] call_tmp[1851763])
              const-val call_tmp[1851775]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1851777 'move' call_tmp[1851775](1851780 call >[437583] call_tmp[1851763] 0))
              const-val call_tmp[1851783]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1851785 'move' call_tmp[1851783] call_tmp[1851775])
              if call_tmp[1851775]
              {
                val tmp[1851790]:bool[10] "dead after last mention" "temp"
                const-val tmp[1851792]:bool[10] "dead after last mention" "maybe param" "temp"
                ref call_tmp[1851794]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
                (1851796 'move' call_tmp[1851794](1851799 call buffLen[757797] localThis[1851421]))
                const-val coerce_tmp[1851801]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1851803 'move' coerce_tmp[1851801](1851805 'deref' call_tmp[1851794]))
                (1851807 'move' tmp[1851792](1851810 call <[437363] i[1851770] coerce_tmp[1851801]))
                val tmp[1851813]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[1851815]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1851817]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1851819 'move' call_tmp[1851817] tmp[1851792])
                (1851822 'move' tmp[1851815] tmp[1851792])
                if tmp[1851792]
                {
                  const-val tmp[1851827]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  ref call_tmp[1851829]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[1851831]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "temp"
                  (1851833 'move' _this_tmp_[1851831](1851836 call buff[757875] localThis[1851421]))
                  val coerce_tmp[1851838]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1851840 'move' coerce_tmp[1851838](1851842 'deref' _this_tmp_[1851831]))
                  (1851844 'move' call_tmp[1851829](1851847 call this[954002] coerce_tmp[1851838] i[1851770]))
                  const-val call_tmp[1851850]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1851852]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1851854 'move' coerce_tmp[1851852](1851856 'deref' call_tmp[1851829]))
                  (1851858 'move' call_tmp[1851850](1851861 call isInitialByte[181528] coerce_tmp[1851852]))
                  const-val call_tmp[1851863]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1851865 'move' call_tmp[1851863](1851868 call ![7494] call_tmp[1851850]))
                  (1851870 'move' tmp[1851827] call_tmp[1851863])
                  (1851873 'move' tmp[1851813] call_tmp[1851863])
                }
                {
                  (1851877 'move' tmp[1851813] 0)
                }
                (1851881 'move' tmp[1851790] tmp[1851813])
                WhileDo[1851884]
                {
                  (1851887 call +=[451226] i[1851770] 1)
                  const-val tmp[1851890]:bool[10] "dead after last mention" "maybe param" "temp"
                  ref call_tmp[1851892]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
                  (1851894 'move' call_tmp[1851892](1851897 call buffLen[757797] localThis[1851421]))
                  const-val coerce_tmp[1851899]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1851901 'move' coerce_tmp[1851899](1851903 'deref' call_tmp[1851892]))
                  (1851905 'move' tmp[1851890](1851908 call <[437363] i[1851770] coerce_tmp[1851899]))
                  val tmp[1851911]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                  const-val tmp[1851913]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[1851915]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1851917 'move' call_tmp[1851915] tmp[1851890])
                  (1851920 'move' tmp[1851913] tmp[1851890])
                  if tmp[1851890]
                  {
                    const-val tmp[1851925]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    ref call_tmp[1851927]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
                    ref _this_tmp_[1851929]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "temp"
                    (1851931 'move' _this_tmp_[1851929](1851934 call buff[757875] localThis[1851421]))
                    val coerce_tmp[1851936]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1851938 'move' coerce_tmp[1851936](1851940 'deref' _this_tmp_[1851929]))
                    (1851942 'move' call_tmp[1851927](1851945 call this[954002] coerce_tmp[1851936] i[1851770]))
                    const-val call_tmp[1851948]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1851950]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1851952 'move' coerce_tmp[1851950](1851954 'deref' call_tmp[1851927]))
                    (1851956 'move' call_tmp[1851948](1851959 call isInitialByte[181528] coerce_tmp[1851950]))
                    const-val call_tmp[1851961]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1851963 'move' call_tmp[1851961](1851966 call ![7494] call_tmp[1851948]))
                    (1851968 'move' tmp[1851925] call_tmp[1851961])
                    (1851971 'move' tmp[1851911] call_tmp[1851961])
                  }
                  {
                    (1851975 'move' tmp[1851911] 0)
                  }
                  (1851979 'move' tmp[1851790] tmp[1851911])
                  tmp[1851790]
                }
              }
              val tmp[1851983]:bool[10] "dead after last mention" "temp"
              ref call_tmp[1851985]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
              (1851987 'move' call_tmp[1851985](1851990 call buffLen[757797] localThis[1851421]))
              const-val call_tmp[1851992]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1851994]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1851996 'move' coerce_tmp[1851994](1851998 'deref' call_tmp[1851985]))
              (1852000 'move' call_tmp[1851992](1852003 call <[437363] i[1851770] coerce_tmp[1851994]))
              (1852006 'move' tmp[1851983] call_tmp[1851992])
              WhileDo[1852009]
              {
                ref call_tmp[1852011]:_ref(c_ptr(uint(8)))[937343] "dead at end of block" "maybe param" "temp"
                (1852013 'move' call_tmp[1852011](1852016 call buff[757875] localThis[1851421]))
                ref call_tmp[1852018]:_ref(int(64))[936483] "dead at end of block" "maybe param" "temp"
                (1852020 'move' call_tmp[1852018](1852023 call buffLen[757797] localThis[1851421]))
                const-val call_tmp[1852025]:(syserr,int(32),int(32))[964531] "dead at end of block" "maybe param" "temp"
                val coerce_tmp[1852027]:c_ptr(uint(8))[937334] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1852029 'move' coerce_tmp[1852027](1852031 'deref' call_tmp[1852011]))
                const-val coerce_tmp[1852033]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1852035 'move' coerce_tmp[1852033](1852037 'deref' call_tmp[1852018]))
                const-val ret_tmp[1852039]:(syserr,int(32),int(32))[964531] "temp"
                (1852042 call decodeHelp[174406] coerce_tmp[1852027] coerce_tmp[1852033] i[1851770] 1 ret_tmp[1852039])
                (1852048 'move' call_tmp[1852025] ret_tmp[1852039])
                const-val tmp[1852051]:(syserr,int(32),int(32))[964531] "dead at end of block" "const" "insert auto destroy" "temp"
                (1852053 'move' tmp[1852051] call_tmp[1852025])
                1
                ref call_tmp[1852057]:_ref(syserr)[948743] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1852059 'move' call_tmp[1852057](1852061 '.' tmp[1852051] x0[964525]))
                const-val decodeRet[1852064]:syserr[223496] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1852066]:syserr[223496] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1852068 'move' coerce_tmp[1852066](1852070 'deref' call_tmp[1852057]))
                (1852072 'move' decodeRet[1852064](1852075 call chpl__initCopy[964396] coerce_tmp[1852066]))
                ref call_tmp[1852077]:_ref(int(32))[936537] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1852079 'move' call_tmp[1852077](1852081 '.' tmp[1852051] x1[964527]))
                const-val cp[1852084]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1852086]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1852088 'move' coerce_tmp[1852086](1852090 'deref' call_tmp[1852077]))
                (1852092 'move' cp[1852084](1852095 call chpl__initCopy[964668] coerce_tmp[1852086]))
                ref call_tmp[1852097]:_ref(int(32))[936537] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1852099 'move' call_tmp[1852097](1852101 '.' tmp[1852051] x2[964529]))
                const-val nBytes[1852104]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1852106]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1852108 'move' coerce_tmp[1852106](1852110 'deref' call_tmp[1852097]))
                (1852112 'move' nBytes[1852104](1852115 call chpl__initCopy[964668] coerce_tmp[1852106]))
                const-val yret[1852117]:(int(32),byteIndex,int(64))[1122053] "dead after last mention" "YVV" "temp"
                val call_tmp[1852119]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val call_tmp[1852121]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (1852123 'move' call_tmp[1852121] cp[1852084])
                const-val call_tmp[1852126]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1852128]:byteIndex[28170] "temp"
                (1852131 call _cast[39483] i[1851770] ret_tmp[1852128])
                (1852134 'move' call_tmp[1852126] ret_tmp[1852128])
                const-val call_tmp[1852137]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (1852139 'move' call_tmp[1852137](1852141 'cast' int(64)[13] nBytes[1852104]))
                const-val call_tmp[1852144]:(int(32),byteIndex,int(64))[1122053] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1852146]:(int(32),byteIndex,int(64))[1122053] "temp"
                (1852149 call _build_tuple[1122003] cp[1852084] call_tmp[1852126] call_tmp[1852137] ret_tmp[1852146])
                (1852154 'move' call_tmp[1852144] ret_tmp[1852146])
                (1852157 'move' yret[1852117] call_tmp[1852144])
                const-val _yieldedIndex[1852929]:(int(32),byteIndex,int(64))[1122053] "temp"
                (1853577 'move' _yieldedIndex[1852929] call_tmp[1852144])
                {
                  1
                  const-val thisChar[1852932]:int(32)[95] "const" "index var" "insert auto destroy"
                  (1852934 'move' thisChar[1852932](1852936 '.v' _yieldedIndex[1852929] x0[1122047]))
                  ref i[1852939]:_ref(byteIndex)[948670] "index var" "insert auto destroy"
                  (1852941 'move' i[1852939](1852943 '.v' _yieldedIndex[1852929] x1[1122049]))
                  const-val nBytes[1852946]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1852948 'move' nBytes[1852946](1852950 '.v' _yieldedIndex[1852929] x2[1122051]))
                  {
                    {
                      val _indexOfInterest[1852955]:int(32)[95] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1852957]:_ic_codepoints__ref_string[1122760] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1852959]:_ir_codepoints__ref_string[1122766] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1852961]:_ir_codepoints__ref_string[1122766] "temp"
                      (1852964 call codepoints[33663] localChars[36187] ret_tmp[1852961])
                      (1852967 'move' call_tmp[1852959] ret_tmp[1852961])
                      (1852970 'move' _iterator[1852957](1852973 call _getIterator[1122775] call_tmp[1852959]))
                      {
                        val ret[1852976]:_ir_codepoints__ref_string[1122766] "dead at end of block" "RVV" "temp"
                        const-val call_tmp[1852978]:string[26] "dead at end of block" "maybe param" "temp"
                        const-val ret_tmp[1852980]:string[26] "temp"
                        ref this[1852982]:_ref(string)[937850] "temp"
                        (1852984 'move' this[1852982](1852986 '.v' _iterator[1852957] F0_this[1950361]))
                        (1852990 call localize[32886] this[1852982] ret_tmp[1852980])
                        (1852993 'move' call_tmp[1852978] ret_tmp[1852980])
                        val localThis[1852996]:string[26] "dead at end of block" "insert auto destroy"
                        (1852998 'move' localThis[1852996] call_tmp[1852978])
                        const-val call_tmp[1853001]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        ref this[1853003]:_ref(string)[937850] "temp"
                        (1853005 'move' this[1853003](1853007 '.v' _iterator[1852957] F0_this[1950361]))
                        (1853010 'move' call_tmp[1853001](1853013 call isASCII[31046] this[1853003]))
                        const-val call_tmp[1853015]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1853017 'move' call_tmp[1853015] call_tmp[1853001])
                        if call_tmp[1853001]
                        {
                          val _indexOfInterest[1853022]:uint(8)[100] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                          val _iterator[1853024]:_ic_chpl_bytes__ref_string[1108167] "dead at end of block" "expr temp" "temp"
                          const-val call_tmp[1853026]:_ir_chpl_bytes__ref_string[1108173] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val ret_tmp[1853028]:_ir_chpl_bytes__ref_string[1108173] "temp"
                          ref this[1853030]:_ref(string)[937850] "temp"
                          (1853032 'move' this[1853030](1853034 '.v' _iterator[1852957] F0_this[1950361]))
                          (1853038 call chpl_bytes[33574] this[1853030] ret_tmp[1853028])
                          (1853041 'move' call_tmp[1853026] ret_tmp[1853028])
                          (1853044 'move' _iterator[1853024](1853047 call _getIterator[1108182] call_tmp[1853026]))
                          {
                            val ret[1853050]:_ir_chpl_bytes__ref_string[1108173] "dead at end of block" "RVV" "temp"
                            const-val call_tmp[1853052]:string[26] "dead at end of block" "maybe param" "temp"
                            const-val ret_tmp[1853054]:string[26] "temp"
                            ref this[1853056]:_ref(string)[937850] "temp"
                            (1853058 'move' this[1853056](1853060 '.v' _iterator[1853024] F0_this[1948187]))
                            (1853064 call localize[32886] this[1853056] ret_tmp[1853054])
                            (1853067 'move' call_tmp[1853052] ret_tmp[1853054])
                            val localThis[1853070]:string[26] "dead at end of block" "insert auto destroy"
                            (1853072 'move' localThis[1853070] call_tmp[1853052])
                            val _indexOfInterest[1853075]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                            val _iterator[1853077]:_ic_chpl_direct_counted_range_iter[1103701] "dead at end of block" "expr temp" "temp"
                            ref call_tmp[1853079]:_ref(int(64))[936483] "dead at end of block" "maybe param" "temp"
                            (1853081 'move' call_tmp[1853079](1853084 call buffLen[757797] localThis[1853070]))
                            const-val call_tmp[1853086]:_ir_chpl_direct_counted_range_iter[1103707] "dead at end of block" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1853088]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1853090 'move' coerce_tmp[1853088](1853092 'deref' call_tmp[1853079]))
                            const-val ret_tmp[1853094]:_ir_chpl_direct_counted_range_iter[1103707] "temp"
                            (1853097 call chpl_direct_counted_range_iter[457907] 0 coerce_tmp[1853088] ret_tmp[1853094])
                            (1853101 'move' call_tmp[1853086] ret_tmp[1853094])
                            (1853104 'move' _iterator[1853077](1853107 call _getIterator[1103716] call_tmp[1853086]))
                            {
                              val ret[1853110]:_ir_chpl_direct_counted_range_iter[1103707] "dead after last mention" "RVV" "temp"
                              val _indexOfInterest[1853112]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                              val _iterator[1853114]:_ic_chpl_direct_counted_range_iter_helper[1103451] "dead at end of block" "expr temp" "temp"
                              const-val call_tmp[1853116]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead at end of block" "expr temp" "maybe param" "temp"
                              const-val ret_tmp[1853118]:_ir_chpl_direct_counted_range_iter_helper[1103457] "temp"
                              const-val low[1853120]:int(64)[13] "temp"
                              (1853122 'move' low[1853120](1853124 '.v' _iterator[1853077] F0_low[1960165]))
                              const-val count[1853127]:int(64)[13] "temp"
                              (1853129 'move' count[1853127](1853131 '.v' _iterator[1853077] F1_count[1960169]))
                              (1853135 call chpl_direct_counted_range_iter_helper[1102009] low[1853120] count[1853127] ret_tmp[1853118])
                              (1853139 'move' call_tmp[1853116] ret_tmp[1853118])
                              (1853142 'move' _iterator[1853114](1853145 call _getIterator[1103466] call_tmp[1853116]))
                              {
                                val ret[1911835]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead after last mention" "RVV" "temp"
                                val call_tmp[1911837]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                const-val tmp[1911839]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val tmp[1911841]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                                const-val call_tmp[1911843]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[1912331]:int(64)[13] "temp"
                                (1912336 'move' count[1912331](1912333 '.v' _iterator[1853114] F1_count[1964641]))
                                (1911845 'move' call_tmp[1911843](1911848 call <[948309] count[1912331]))
                                (1911850 'move' tmp[1911841] call_tmp[1911843])
                                (1911853 'move' tmp[1911839] call_tmp[1911843])
                                const-val call_tmp[1911856]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1911858 'move' call_tmp[1911856] call_tmp[1911843])
                                if call_tmp[1911843]
                                {
                                  (1911864 call boundsCheckHalt[210079] "With a negative count, the range must have a last index.")
                                }
                                const-val tmp[1911867]:2*int(64)[1039967] "dead at end of block" "const" "insert auto destroy" "temp"
                                val tmp[1911869]:2*int(64)[1039967] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                                const-val tmp[1911871]:bool[10] "dead after last mention" "maybe param" "temp"
                                const-val call_tmp[1911873]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[1912338]:int(64)[13] "temp"
                                (1912343 'move' count[1912338](1912340 '.v' _iterator[1853114] F1_count[1964641]))
                                (1911875 'move' call_tmp[1911873](1911878 call ==[435539] count[1912338] 0))
                                (1911881 'move' tmp[1911871] call_tmp[1911873])
                                if call_tmp[1911873]
                                {
                                  const-val tmp[1911886]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[1911888]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[1911890]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[1912345]:int(64)[13] "temp"
                                  (1912350 'move' low[1912345](1912347 '.v' _iterator[1853114] F0_low[1964637]))
                                  (1911892 'move' call_tmp[1911890](1911895 call _cast[955945] low[1912345]))
                                  const-val call_tmp[1911897]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val coerce_tmp[1911899]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                  (1911901 'move' coerce_tmp[1911899](1911903 'cast' uint(64)[115] 1))
                                  (1911906 'move' call_tmp[1911897](1911909 call -[962104] call_tmp[1911890]))
                                  const-val call_tmp[1911911]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  (1911913 'move' call_tmp[1911911](1911916 call _cast[953454] call_tmp[1911897]))
                                  const-val ret_tmp[1911918]:2*int(64)[1039967] "temp"
                                  const-val low[1912352]:int(64)[13] "temp"
                                  (1912357 'move' low[1912352](1912354 '.v' _iterator[1853114] F0_low[1964637]))
                                  (1911921 call _build_tuple[1039925] low[1912352] call_tmp[1911911] ret_tmp[1911918])
                                  (1911925 'move' tmp[1911886] ret_tmp[1911918])
                                  (1911928 'move' tmp[1911869] tmp[1911886])
                                }
                                {
                                  const-val tmp[1911932]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[1911934]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[1911936]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[1912359]:int(64)[13] "temp"
                                  (1912364 'move' count[1912359](1912361 '.v' _iterator[1853114] F1_count[1964641]))
                                  (1911938 'move' call_tmp[1911936] count[1912359])
                                  const-val call_tmp[1911941]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[1912366]:int(64)[13] "temp"
                                  (1912371 'move' count[1912366](1912368 '.v' _iterator[1853114] F1_count[1964641]))
                                  (1911943 'move' call_tmp[1911941](1911946 call -[962137] count[1912366]))
                                  const-val call_tmp[1911948]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[1912373]:int(64)[13] "temp"
                                  (1912378 'move' low[1912373](1912375 '.v' _iterator[1853114] F0_low[1964637]))
                                  (1911950 'move' call_tmp[1911948](1911953 call +[439547] low[1912373] call_tmp[1911941]))
                                  const-val ret_tmp[1911956]:2*int(64)[1039967] "temp"
                                  const-val low[1912380]:int(64)[13] "temp"
                                  (1912385 'move' low[1912380](1912382 '.v' _iterator[1853114] F0_low[1964637]))
                                  (1911959 call _build_tuple[1039925] low[1912380] call_tmp[1911948] ret_tmp[1911956])
                                  (1911963 'move' tmp[1911932] ret_tmp[1911956])
                                  (1911966 'move' tmp[1911869] tmp[1911932])
                                }
                                (1911970 '=' tmp[1911867] tmp[1911869])
                                (1911973 'noop')
                                1
                                ref call_tmp[1911975]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (1911977 'move' call_tmp[1911975](1911979 '.' tmp[1911867] x0[1039963]))
                                const-val start[1911982]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[1911984]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (1911986 'move' coerce_tmp[1911984](1911988 'deref' call_tmp[1911975]))
                                (1911990 '=' start[1911982] coerce_tmp[1911984])
                                (1911993 'noop')
                                ref call_tmp[1911994]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (1911996 'move' call_tmp[1911994](1911998 '.' tmp[1911867] x1[1039965]))
                                const-val end[1912001]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[1912003]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (1912005 'move' coerce_tmp[1912003](1912007 'deref' call_tmp[1911994]))
                                (1912009 '=' end[1912001] coerce_tmp[1912003])
                                (1912012 'noop')
                                val _indexOfInterest[1912013]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                val _iterator[1912015]:_ic_chpl_direct_param_stride_range_iter[1103197] "dead at end of block" "expr temp" "temp"
                                const-val call_tmp[1912017]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead at end of block" "expr temp" "maybe param" "temp"
                                const-val ret_tmp[1912019]:_ir_chpl_direct_param_stride_range_iter[1103203] "temp"
                                (1912022 call chpl_direct_param_stride_range_iter[1102435] coerce_tmp[1911984] coerce_tmp[1912003] ret_tmp[1912019])
                                (1912026 'move' call_tmp[1912017] ret_tmp[1912019])
                                (1912029 'move' _iterator[1912015](1912032 call _getIterator[1103212] call_tmp[1912017]))
                                {
                                  val ret[1912035]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead after last mention" "RVV" "temp"
                                  val call_tmp[1912037]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (1912040 call chpl_range_check_stride[1102755])
                                  val i[1912041]:int(64)[13] "dead at end of block" "insert auto destroy"
                                  val call_tmp[1912043]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (1912045 'move' i[1912041] 0)
                                  val call_tmp[1912048]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val default_arg_first[1912050]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val low[1912052]:int(64)[13] "temp"
                                  (1912054 'move' low[1912052](1912056 '.v' _iterator[1912015] F0_low[1966135]))
                                  (1912059 'move' default_arg_first[1912050](1912062 call chpl_checkIfRangeIterWillOverflow_default_first[1103109] low[1912052]))
                                  const-val default_arg_last[1912064]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val high[1912066]:int(64)[13] "temp"
                                  (1912068 'move' high[1912066](1912070 '.v' _iterator[1912015] F1_high[1966139]))
                                  (1912073 'move' default_arg_last[1912064](1912076 call chpl_checkIfRangeIterWillOverflow_default_last[1103137] high[1912066]))
                                  const-val _return_tmp_[1912078]:bool[10] "dead after last mention" "temp"
                                  const-val low[1912080]:int(64)[13] "temp"
                                  (1912082 'move' low[1912080](1912084 '.v' _iterator[1912015] F0_low[1966135]))
                                  const-val high[1912087]:int(64)[13] "temp"
                                  (1912089 'move' high[1912087](1912091 '.v' _iterator[1912015] F1_high[1966139]))
                                  (1912094 'move' _return_tmp_[1912078](1912097 call chpl_checkIfRangeIterWillOverflow[1095987] low[1912080] high[1912087] 1 default_arg_first[1912050] default_arg_last[1912064] 1))
                                  CForLoop[1912104]
                                  {
                                    const-val yret[1912133]:int(64)[13] "dead after last mention" "YVV" "temp"
                                    (1912135 'move' yret[1912133] i[1912041])
                                    const-val _yieldedIndex[1912138]:int(64)[13] "temp"
                                    (1912140 'move' _yieldedIndex[1912138] i[1912041])
                                    {
                                      const-val i[1912144]:int(64)[13] "const" "index var" "insert auto destroy"
                                      (1912146 'move' i[1912144] _yieldedIndex[1912138])
                                      const-val yret[1912149]:int(64)[13] "dead after last mention" "YVV" "temp"
                                      (1912151 'move' yret[1912149] _yieldedIndex[1912138])
                                      const-val _yieldedIndex[1912179]:int(64)[13] "temp"
                                      (1912329 'move' _yieldedIndex[1912179] _yieldedIndex[1912138])
                                      {
                                        const-val i[1912181]:int(64)[13] "const" "index var" "insert auto destroy"
                                        (1912183 'move' i[1912181] _yieldedIndex[1912179])
                                        const-val yret[1912186]:int(64)[13] "dead after last mention" "YVV" "temp"
                                        (1912188 'move' yret[1912186] _yieldedIndex[1912179])
                                        const-val _yieldedIndex[1912191]:int(64)[13] "temp"
                                        (1912193 'move' _yieldedIndex[1912191] _yieldedIndex[1912179])
                                        {
                                          const-val i[1912197]:int(64)[13] "const" "index var" "insert auto destroy"
                                          (1912199 'move' i[1912197] _yieldedIndex[1912191])
                                          const-val yret[1912202]:uint(8)[100] "dead after last mention" "YVV" "temp"
                                          ref call_tmp[1912204]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
                                          ref _this_tmp_[1912206]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "temp"
                                          (1912208 'move' _this_tmp_[1912206](1912211 call buff[757875] localThis[1853070]))
                                          val coerce_tmp[1912213]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                          (1912215 'move' coerce_tmp[1912213](1912217 'deref' _this_tmp_[1912206]))
                                          (1912219 'move' call_tmp[1912204](1912222 call this[954002] coerce_tmp[1912213] _yieldedIndex[1912191]))
                                          const-val coerce_tmp[1912225]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                          (1912227 'move' coerce_tmp[1912225](1912229 'deref' call_tmp[1912204]))
                                          (1912231 '=' yret[1912202] coerce_tmp[1912225])
                                          (1912234 'noop')
                                          const-val _yieldedIndex[1912235]:uint(8)[100] "temp"
                                          (1912237 'move' _yieldedIndex[1912235] coerce_tmp[1912225])
                                          {
                                            const-val b[1912241]:uint(8)[100] "const" "index var" "insert auto destroy"
                                            (1912243 'move' b[1912241] _yieldedIndex[1912235])
                                            val yret[1912246]:int(32)[95] "dead after last mention" "YVV" "temp"
                                            val call_tmp[1912248]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                            const-val _yieldedIndex[1912250]:int(32)[95] "temp"
                                            (1912252 'move' _yieldedIndex[1912250](1912254 'cast' int(32)[95] _yieldedIndex[1912235]))
                                            {
                                              const-val removeChar[1912258]:int(32)[95] "const" "index var" "insert auto destroy"
                                              (1912260 'move' removeChar[1912258] _yieldedIndex[1912250])
                                              {
                                                const-val call_tmp[1912264]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (1912266 'move' call_tmp[1912264](1912269 call ==[435517] thisChar[1852932] removeChar[1912258]))
                                                const-val call_tmp[1912272]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (1912274 'move' call_tmp[1912272] call_tmp[1912264])
                                                if call_tmp[1912272]
                                                {
                                                  const-val call_tmp[1912279]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                                  const-val ret_tmp[1912281]:byteIndex[28170] "temp"
                                                  (1912284 call +[28722] i[1852939] nBytes[1852946] ret_tmp[1912281])
                                                  (1912288 'move' call_tmp[1912279] ret_tmp[1912281])
                                                  (1912292 call =[38191] start[36193] call_tmp[1912279])
                                                  (1912296 call chpl__autoDestroy[1494683] call_tmp[1912279])
                                                  (1912323 call _freeIterator[1103385] _iterator[1912015])
                                                  (1912326 call chpl__autoDestroy[1567619] tmp[1911867])
                                                  (1912299 call _freeIterator[1103635] _iterator[1853114])
                                                  (1912302 call _freeIterator[1103885] _iterator[1853077])
                                                  (1912305 call chpl__autoDestroy[1494420] localThis[1853070])
                                                  (1912308 call _freeIterator[1109480] _iterator[1853024])
                                                  (1912311 call chpl__autoDestroy[1494420] localThis[1852996])
                                                  (1912314 call _freeIterator[1123047] _iterator[1852957])
                                                  continue _continueLabel[1853564] _continueLabel[1853564]
                                                }
                                              }
                                              label _continueLabel[1912319]
                                            }
                                          }
                                        }
                                      }
                                    }
                                    {
                                      const-val low[1912106]:int(64)[13] "temp"
                                      (1912108 'move' low[1912106](1912110 '.v' _iterator[1912015] F0_low[1966135]))
                                      (1912113 '=' i[1912041] low[1912106])
                                    }
                                    {
                                      const-val high[1912117]:int(64)[13] "temp"
                                      (1912119 'move' high[1912117](1912121 '.v' _iterator[1912015] F1_high[1966139]))
                                      (1912124 '<=' i[1912041] high[1912117])
                                    }
                                    {
                                      val call_tmp[1912128]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                      (1912130 '+=' i[1912041] 1)
                                    }
                                  }
                                  label _endchpl_direct_param_stride_range_iter[1912167]
                                }
                                (1912170 call _freeIterator[1103385] _iterator[1912015])
                                (1912173 call chpl__autoDestroy[1567619] tmp[1911867])
                                label _endchpl_direct_counted_range_iter_helper[1912175]
                              }
                              (1853291 call _freeIterator[1103635] _iterator[1853114])
                              label _endchpl_direct_counted_range_iter[1853293]
                            }
                            (1853296 call _freeIterator[1103885] _iterator[1853077])
                            (1853299 call chpl__autoDestroy[1494420] localThis[1853070])
                            label _endchpl_bytes[1853301]
                          }
                          (1853304 call _freeIterator[1109480] _iterator[1853024])
                        }
                        {
                          val i[1853307]:int(64)[13] "dead at end of block" "insert auto destroy"
                          (1853309 'move' i[1853307] 0)
                          val tmp[1853312]:bool[10] "dead after last mention" "temp"
                          ref call_tmp[1853314]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
                          (1853316 'move' call_tmp[1853314](1853319 call buffLen[757797] localThis[1852996]))
                          const-val call_tmp[1853321]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[1853323]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1853325 'move' coerce_tmp[1853323](1853327 'deref' call_tmp[1853314]))
                          (1853329 'move' call_tmp[1853321](1853332 call <[437363] 0 coerce_tmp[1853323]))
                          (1853335 'move' tmp[1853312] call_tmp[1853321])
                          WhileDo[1853338]
                          {
                            ref call_tmp[1853340]:_ref(c_ptr(uint(8)))[937343] "dead at end of block" "maybe param" "temp"
                            (1853342 'move' call_tmp[1853340](1853345 call buff[757875] localThis[1852996]))
                            ref call_tmp[1853347]:_ref(int(64))[936483] "dead at end of block" "maybe param" "temp"
                            (1853349 'move' call_tmp[1853347](1853352 call buffLen[757797] localThis[1852996]))
                            const-val call_tmp[1853354]:(syserr,int(32),int(32))[964531] "dead at end of block" "maybe param" "temp"
                            val coerce_tmp[1853356]:c_ptr(uint(8))[937334] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1853358 'move' coerce_tmp[1853356](1853360 'deref' call_tmp[1853340]))
                            const-val coerce_tmp[1853362]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1853364 'move' coerce_tmp[1853362](1853366 'deref' call_tmp[1853347]))
                            const-val ret_tmp[1853368]:(syserr,int(32),int(32))[964531] "temp"
                            (1853371 call decodeHelp[174406] coerce_tmp[1853356] coerce_tmp[1853362] i[1853307] 1 ret_tmp[1853368])
                            (1853377 'move' call_tmp[1853354] ret_tmp[1853368])
                            const-val tmp[1853380]:(syserr,int(32),int(32))[964531] "dead at end of block" "const" "insert auto destroy" "temp"
                            (1853382 'move' tmp[1853380] call_tmp[1853354])
                            1
                            ref call_tmp[1853386]:_ref(syserr)[948743] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1853388 'move' call_tmp[1853386](1853390 '.' tmp[1853380] x0[964525]))
                            const-val decodeRet[1853393]:syserr[223496] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1853395]:syserr[223496] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1853397 'move' coerce_tmp[1853395](1853399 'deref' call_tmp[1853386]))
                            (1853401 'move' decodeRet[1853393](1853404 call chpl__initCopy[964396] coerce_tmp[1853395]))
                            ref call_tmp[1853406]:_ref(int(32))[936537] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1853408 'move' call_tmp[1853406](1853410 '.' tmp[1853380] x1[964527]))
                            const-val cp[1853413]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1853415]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1853417 'move' coerce_tmp[1853415](1853419 'deref' call_tmp[1853406]))
                            (1853421 'move' cp[1853413](1853424 call chpl__initCopy[964668] coerce_tmp[1853415]))
                            ref call_tmp[1853426]:_ref(int(32))[936537] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1853428 'move' call_tmp[1853426](1853430 '.' tmp[1853380] x2[964529]))
                            const-val nBytes[1853433]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1853435]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1853437 'move' coerce_tmp[1853435](1853439 'deref' call_tmp[1853426]))
                            (1853441 'move' nBytes[1853433](1853444 call chpl__initCopy[964668] coerce_tmp[1853435]))
                            const-val yret[1853446]:int(32)[95] "dead after last mention" "YVV" "temp"
                            val call_tmp[1853448]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                            (1853450 'move' yret[1853446] cp[1853413])
                            const-val _yieldedIndex[1853453]:int(32)[95] "temp"
                            (1853455 'move' _yieldedIndex[1853453] cp[1853413])
                            {
                              const-val removeChar[1853459]:int(32)[95] "const" "index var" "insert auto destroy"
                              (1853461 'move' removeChar[1853459] _yieldedIndex[1853453])
                              {
                                const-val call_tmp[1853465]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1853467 'move' call_tmp[1853465](1853470 call ==[435517] thisChar[1852932] removeChar[1853459]))
                                const-val call_tmp[1853473]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1853475 'move' call_tmp[1853473] call_tmp[1853465])
                                if call_tmp[1853473]
                                {
                                  const-val call_tmp[1853480]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                  const-val ret_tmp[1853482]:byteIndex[28170] "temp"
                                  (1853485 call +[28722] i[1852939] nBytes[1852946] ret_tmp[1853482])
                                  (1853489 'move' call_tmp[1853480] ret_tmp[1853482])
                                  (1853493 call =[38191] start[36193] call_tmp[1853480])
                                  (1853497 call chpl__autoDestroy[1494683] call_tmp[1853480])
                                  (1853500 call chpl__autoDestroy[1498323] tmp[1853380])
                                  (1853503 call chpl__autoDestroy[1494420] localThis[1852996])
                                  (1853506 call _freeIterator[1123047] _iterator[1852957])
                                  continue _continueLabel[1853564] _continueLabel[1853564]
                                }
                              }
                              label _continueLabel[1853511]
                            }
                            const-val coerce_tmp[1853513]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1853515 'move' coerce_tmp[1853513](1853517 'cast' int(64)[13] nBytes[1853433]))
                            (1853521 call +=[451226] i[1853307] coerce_tmp[1853513])
                            (1853525 call chpl__autoDestroy[1498323] tmp[1853380])
                            ref call_tmp[1853527]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
                            (1853529 'move' call_tmp[1853527](1853532 call buffLen[757797] localThis[1852996]))
                            const-val call_tmp[1853534]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1853536]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1853538 'move' coerce_tmp[1853536](1853540 'deref' call_tmp[1853527]))
                            (1853542 'move' call_tmp[1853534](1853545 call <[437363] i[1853307] coerce_tmp[1853536]))
                            (1853548 'move' tmp[1853312] call_tmp[1853534])
                            tmp[1853312]
                          }
                        }
                        (1853553 call chpl__autoDestroy[1494420] localThis[1852996])
                        label _endcodepoints[1853555]
                      }
                      label _breakLabel[1853557]
                      (1853560 call _freeIterator[1123047] _iterator[1852957])
                    }
                    (1853568 call chpl__autoDestroy[1494683] call_tmp[1852126])
                    (1853571 call chpl__autoDestroy[1498323] tmp[1852051])
                    (1853574 call chpl__autoDestroy[1494420] localThis[1851421])
                    break _breakLabel[36294] _breakLabel[36294]
                  }
                  label _continueLabel[1853564]
                }
                (1852177 call chpl__autoDestroy[1494683] call_tmp[1852126])
                const-val coerce_tmp[1852179]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1852181 'move' coerce_tmp[1852179](1852183 'cast' int(64)[13] nBytes[1852104]))
                (1852187 call +=[451226] i[1851770] coerce_tmp[1852179])
                (1852191 call chpl__autoDestroy[1498323] tmp[1852051])
                ref call_tmp[1852193]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
                (1852195 'move' call_tmp[1852193](1852198 call buffLen[757797] localThis[1851421]))
                const-val call_tmp[1852200]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1852202]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1852204 'move' coerce_tmp[1852202](1852206 'deref' call_tmp[1852193]))
                (1852208 'move' call_tmp[1852200](1852211 call <[437363] i[1851770] coerce_tmp[1852202]))
                (1852214 'move' tmp[1851983] call_tmp[1852200])
                tmp[1851983]
              }
            }
            (1852219 call chpl__autoDestroy[1494420] localThis[1851421])
            label _end_cpIndexLen[1852221]
          }
          label _breakLabel[36294]
          (1798569 call _freeIterator[1122484] _iterator[36289])
          (1798571 call chpl__autoDestroy[1494683] default_arg_start[1121968])
        }
      }
      const-val call_tmp[601490]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (601493 'move' call_tmp[601490] trailing[36099])
      if call_tmp[601490]
      {
        (36353 call =[38165] end[36205] -1)
        {
          val _indexOfInterest[36436]:(int(32),byteIndex,int(64))[1122053] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[36437]:_ic__cpIndexLen__ref_string[1122296] "dead at end of block" "expr temp" "temp"
          const-val call_tmp[601502]:_ir__cpIndexLen__ref_string[1122302] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val ret_tmp[1786287]:_ir__cpIndexLen__ref_string[1122302] "temp"
          (36369 call _cpIndexLen[31106] localThis[36176] start[36193] ret_tmp[1786287])
          (1786290 'move' call_tmp[601502] ret_tmp[1786287])
          (36446 'move' _iterator[36437](36444 call _getIterator[1122311] call_tmp[601502]))
          {
            val ret[1854190]:_ir__cpIndexLen__ref_string[1122302] "dead after last mention" "RVV" "temp"
            const-val call_tmp[1854192]:string[26] "dead at end of block" "maybe param" "temp"
            const-val ret_tmp[1854194]:string[26] "temp"
            ref this[1856275]:_ref(string)[937850] "temp"
            (1856280 'move' this[1856275](1856277 '.v' _iterator[36437] F0_this[1946835]))
            (1854197 call localize[32886] this[1856275] ret_tmp[1854194])
            (1854200 'move' call_tmp[1854192] ret_tmp[1854194])
            val localThis[1854203]:string[26] "dead at end of block" "insert auto destroy"
            (1854205 'move' localThis[1854203] call_tmp[1854192])
            const-val call_tmp[1854208]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1854210 'move' call_tmp[1854208](1854213 call isASCII[31046] localThis[1854203]))
            const-val call_tmp[1854215]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1854217 'move' call_tmp[1854215] call_tmp[1854208])
            if call_tmp[1854208]
            {
              const-val _iterator[1854222]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108477] "dead at end of block" "expr temp" "insert auto destroy" "temp"
              const-val call_tmp[1854224]:range(int(64),bounded,false)[1026725] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret_tmp[1854226]:range(int(64),bounded,false)[1026725] "temp"
              ref this[1856282]:_ref(string)[937850] "temp"
              (1856287 'move' this[1856282](1856284 '.v' _iterator[36437] F0_this[1946835]))
              (1854229 call byteIndices[31065] this[1856282] ret_tmp[1854226])
              (1854232 'move' call_tmp[1854224] ret_tmp[1854226])
              val call_tmp[1854235]:_ic_these_range_int64_t_bounded_F[1096614] "dead at end of block" "expr temp" "maybe param" "temp"
              (1854237 'move' call_tmp[1854235](1854240 call _getIterator[1095231] call_tmp[1854224]))
              const-val call_tmp[1854242]:_ir_chpl_bytes__ref_string[1108173] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[1854244]:_ir_chpl_bytes__ref_string[1108173] "temp"
              ref this[1856289]:_ref(string)[937850] "temp"
              (1856294 'move' this[1856289](1856291 '.v' _iterator[36437] F0_this[1946835]))
              (1854247 call chpl_bytes[33574] this[1856289] ret_tmp[1854244])
              (1854250 'move' call_tmp[1854242] ret_tmp[1854244])
              val call_tmp[1854253]:_ic_chpl_bytes__ref_string[1108167] "dead at end of block" "expr temp" "maybe param" "temp"
              (1854255 'move' call_tmp[1854253](1854258 call _getIterator[1108182] call_tmp[1854242]))
              const-val ret_tmp[1854260]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108477] "temp"
              (1854263 call _build_tuple[1108435] call_tmp[1854235] call_tmp[1854253] ret_tmp[1854260])
              (1854267 'move' _iterator[1854222] ret_tmp[1854260])
              val _iterator[1854270]:_ic_these_range_int64_t_bounded_F[1096614] "temp"
              (1854272 'move' _iterator[1854270](1854274 '.v' _iterator[1854222] x0[1108473]))
              val _iterator[1854277]:_ic_chpl_bytes__ref_string[1108167] "temp"
              (1854279 'move' _iterator[1854277](1854281 '.v' _iterator[1854222] x1[1108475]))
              {
                (1854286 call zip1[1096649] _iterator[1854270])
              }
              {
                (1854290 call zip1[1108202] _iterator[1854277])
              }
              const-val isFinished[1854292]:bool[10] "temp"
              val hasMore[1854294]:bool[10] "temp"
              CForLoop[1854296]
              {
                val _indexOfInterest[1854319]:(int(64),uint(8))[1110951] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                {
                  (1854323 call zip2[1108211] _iterator[1854277])
                }
                {
                  const-val retTmp[1854326]:int(64)[13] "temp"
                  (1854328 'move' retTmp[1854326](1854331 call hasMore[1108238] _iterator[1854277]))
                  (1854333 'move' hasMore[1854294](1854335 'cast' bool[10] retTmp[1854326]))
                }
                (1854338 'move' isFinished[1854292](1854340 '!' hasMore[1854294]))
                if isFinished[1854292]
                {
                  (1854344 'chpl_error' c"zippered iterations have non-equal lengths")
                }
                {
                  (1854348 'move' _index[1854363](1854351 call getValue[1108247] _iterator[1854277]))
                }
                {
                  (1854355 call zip2[1096658] _iterator[1854270])
                }
                {
                  (1854358 'move' _index[1854369](1854361 call getValue[1096694] _iterator[1854270]))
                }
                val _index[1854363]:uint(8)[100] "temp"
                (1854365 '.=' _indexOfInterest[1854319] x1[1110949] _index[1854363])
                val _index[1854369]:int(64)[13] "temp"
                (1854371 '.=' _indexOfInterest[1854319] x0[1110947] _index[1854369])
                1
                const-val i[1854376]:int(64)[13] "const" "index var" "insert auto destroy"
                (1854378 'move' i[1854376](1854380 '.v' _indexOfInterest[1854319] x0[1110947]))
                const-val b[1854383]:uint(8)[100] "const" "index var" "insert auto destroy"
                (1854385 'move' b[1854383](1854387 '.v' _indexOfInterest[1854319] x1[1110949]))
                const-val yret[1854390]:(int(32),byteIndex,int(64))[1122053] "dead after last mention" "YVV" "temp"
                val call_tmp[1854392]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val call_tmp[1854394]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (1854396 'move' call_tmp[1854394](1854398 'cast' int(32)[95] b[1854383]))
                const-val call_tmp[1854401]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1854403]:byteIndex[28170] "temp"
                (1854406 call _cast[39483] i[1854376] ret_tmp[1854403])
                (1854409 'move' call_tmp[1854401] ret_tmp[1854403])
                const-val call_tmp[1854412]:(int(32),byteIndex,int(64))[1122053] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1854414]:(int(32),byteIndex,int(64))[1122053] "temp"
                (1854417 call _build_tuple[1122003] call_tmp[1854394] call_tmp[1854401] 1 ret_tmp[1854414])
                (1854422 'move' call_tmp[1854412] ret_tmp[1854414])
                (1854425 'move' yret[1854390] call_tmp[1854412])
                const-val _yieldedIndex[1855007]:(int(32),byteIndex,int(64))[1122053] "temp"
                (1855639 'move' _yieldedIndex[1855007] call_tmp[1854412])
                {
                  1
                  const-val thisChar[1855010]:int(32)[95] "const" "index var" "insert auto destroy"
                  (1855012 'move' thisChar[1855010](1855014 '.v' _yieldedIndex[1855007] x0[1122047]))
                  ref i[1855017]:_ref(byteIndex)[948670] "index var" "insert auto destroy"
                  (1855019 'move' i[1855017](1855021 '.v' _yieldedIndex[1855007] x1[1122049]))
                  const-val nBytes[1855024]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1855026 'move' nBytes[1855024](1855028 '.v' _yieldedIndex[1855007] x2[1122051]))
                  {
                    {
                      val _indexOfInterest[1855033]:int(32)[95] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1855035]:_ic_codepoints__ref_string[1122760] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1855037]:_ir_codepoints__ref_string[1122766] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1855039]:_ir_codepoints__ref_string[1122766] "temp"
                      (1855042 call codepoints[33663] localChars[36187] ret_tmp[1855039])
                      (1855045 'move' call_tmp[1855037] ret_tmp[1855039])
                      (1855048 'move' _iterator[1855035](1855051 call _getIterator[1122775] call_tmp[1855037]))
                      {
                        val ret[1855054]:_ir_codepoints__ref_string[1122766] "dead at end of block" "RVV" "temp"
                        const-val call_tmp[1855056]:string[26] "dead at end of block" "maybe param" "temp"
                        const-val ret_tmp[1855058]:string[26] "temp"
                        ref this[1855060]:_ref(string)[937850] "temp"
                        (1855062 'move' this[1855060](1855064 '.v' _iterator[1855035] F0_this[1950361]))
                        (1855068 call localize[32886] this[1855060] ret_tmp[1855058])
                        (1855071 'move' call_tmp[1855056] ret_tmp[1855058])
                        val localThis[1855074]:string[26] "dead at end of block" "insert auto destroy"
                        (1855076 'move' localThis[1855074] call_tmp[1855056])
                        const-val call_tmp[1855079]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        ref this[1855081]:_ref(string)[937850] "temp"
                        (1855083 'move' this[1855081](1855085 '.v' _iterator[1855035] F0_this[1950361]))
                        (1855088 'move' call_tmp[1855079](1855091 call isASCII[31046] this[1855081]))
                        const-val call_tmp[1855093]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1855095 'move' call_tmp[1855093] call_tmp[1855079])
                        if call_tmp[1855079]
                        {
                          val _indexOfInterest[1855100]:uint(8)[100] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                          val _iterator[1855102]:_ic_chpl_bytes__ref_string[1108167] "dead at end of block" "expr temp" "temp"
                          const-val call_tmp[1855104]:_ir_chpl_bytes__ref_string[1108173] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val ret_tmp[1855106]:_ir_chpl_bytes__ref_string[1108173] "temp"
                          ref this[1855108]:_ref(string)[937850] "temp"
                          (1855110 'move' this[1855108](1855112 '.v' _iterator[1855035] F0_this[1950361]))
                          (1855116 call chpl_bytes[33574] this[1855108] ret_tmp[1855106])
                          (1855119 'move' call_tmp[1855104] ret_tmp[1855106])
                          (1855122 'move' _iterator[1855102](1855125 call _getIterator[1108182] call_tmp[1855104]))
                          {
                            val ret[1855128]:_ir_chpl_bytes__ref_string[1108173] "dead at end of block" "RVV" "temp"
                            const-val call_tmp[1855130]:string[26] "dead at end of block" "maybe param" "temp"
                            const-val ret_tmp[1855132]:string[26] "temp"
                            ref this[1855134]:_ref(string)[937850] "temp"
                            (1855136 'move' this[1855134](1855138 '.v' _iterator[1855102] F0_this[1948187]))
                            (1855142 call localize[32886] this[1855134] ret_tmp[1855132])
                            (1855145 'move' call_tmp[1855130] ret_tmp[1855132])
                            val localThis[1855148]:string[26] "dead at end of block" "insert auto destroy"
                            (1855150 'move' localThis[1855148] call_tmp[1855130])
                            val _indexOfInterest[1855153]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                            val _iterator[1855155]:_ic_chpl_direct_counted_range_iter[1103701] "dead at end of block" "expr temp" "temp"
                            ref call_tmp[1855157]:_ref(int(64))[936483] "dead at end of block" "maybe param" "temp"
                            (1855159 'move' call_tmp[1855157](1855162 call buffLen[757797] localThis[1855148]))
                            const-val call_tmp[1855164]:_ir_chpl_direct_counted_range_iter[1103707] "dead at end of block" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1855166]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1855168 'move' coerce_tmp[1855166](1855170 'deref' call_tmp[1855157]))
                            const-val ret_tmp[1855172]:_ir_chpl_direct_counted_range_iter[1103707] "temp"
                            (1855175 call chpl_direct_counted_range_iter[457907] 0 coerce_tmp[1855166] ret_tmp[1855172])
                            (1855179 'move' call_tmp[1855164] ret_tmp[1855172])
                            (1855182 'move' _iterator[1855155](1855185 call _getIterator[1103716] call_tmp[1855164]))
                            {
                              val ret[1855188]:_ir_chpl_direct_counted_range_iter[1103707] "dead after last mention" "RVV" "temp"
                              val _indexOfInterest[1855190]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                              val _iterator[1855192]:_ic_chpl_direct_counted_range_iter_helper[1103451] "dead at end of block" "expr temp" "temp"
                              const-val call_tmp[1855194]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead at end of block" "expr temp" "maybe param" "temp"
                              const-val ret_tmp[1855196]:_ir_chpl_direct_counted_range_iter_helper[1103457] "temp"
                              const-val low[1855198]:int(64)[13] "temp"
                              (1855200 'move' low[1855198](1855202 '.v' _iterator[1855155] F0_low[1960165]))
                              const-val count[1855205]:int(64)[13] "temp"
                              (1855207 'move' count[1855205](1855209 '.v' _iterator[1855155] F1_count[1960169]))
                              (1855213 call chpl_direct_counted_range_iter_helper[1102009] low[1855198] count[1855205] ret_tmp[1855196])
                              (1855217 'move' call_tmp[1855194] ret_tmp[1855196])
                              (1855220 'move' _iterator[1855192](1855223 call _getIterator[1103466] call_tmp[1855194]))
                              {
                                val ret[1912388]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead after last mention" "RVV" "temp"
                                val call_tmp[1912390]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                const-val tmp[1912392]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val tmp[1912394]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                                const-val call_tmp[1912396]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[1912865]:int(64)[13] "temp"
                                (1912870 'move' count[1912865](1912867 '.v' _iterator[1855192] F1_count[1964641]))
                                (1912398 'move' call_tmp[1912396](1912401 call <[948309] count[1912865]))
                                (1912403 'move' tmp[1912394] call_tmp[1912396])
                                (1912406 'move' tmp[1912392] call_tmp[1912396])
                                const-val call_tmp[1912409]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1912411 'move' call_tmp[1912409] call_tmp[1912396])
                                if call_tmp[1912396]
                                {
                                  (1912417 call boundsCheckHalt[210079] "With a negative count, the range must have a last index.")
                                }
                                const-val tmp[1912420]:2*int(64)[1039967] "dead at end of block" "const" "insert auto destroy" "temp"
                                val tmp[1912422]:2*int(64)[1039967] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                                const-val tmp[1912424]:bool[10] "dead after last mention" "maybe param" "temp"
                                const-val call_tmp[1912426]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[1912872]:int(64)[13] "temp"
                                (1912877 'move' count[1912872](1912874 '.v' _iterator[1855192] F1_count[1964641]))
                                (1912428 'move' call_tmp[1912426](1912431 call ==[435539] count[1912872] 0))
                                (1912434 'move' tmp[1912424] call_tmp[1912426])
                                if call_tmp[1912426]
                                {
                                  const-val tmp[1912439]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[1912441]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[1912443]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[1912879]:int(64)[13] "temp"
                                  (1912884 'move' low[1912879](1912881 '.v' _iterator[1855192] F0_low[1964637]))
                                  (1912445 'move' call_tmp[1912443](1912448 call _cast[955945] low[1912879]))
                                  const-val call_tmp[1912450]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val coerce_tmp[1912452]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                  (1912454 'move' coerce_tmp[1912452](1912456 'cast' uint(64)[115] 1))
                                  (1912459 'move' call_tmp[1912450](1912462 call -[962104] call_tmp[1912443]))
                                  const-val call_tmp[1912464]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  (1912466 'move' call_tmp[1912464](1912469 call _cast[953454] call_tmp[1912450]))
                                  const-val ret_tmp[1912471]:2*int(64)[1039967] "temp"
                                  const-val low[1912886]:int(64)[13] "temp"
                                  (1912891 'move' low[1912886](1912888 '.v' _iterator[1855192] F0_low[1964637]))
                                  (1912474 call _build_tuple[1039925] low[1912886] call_tmp[1912464] ret_tmp[1912471])
                                  (1912478 'move' tmp[1912439] ret_tmp[1912471])
                                  (1912481 'move' tmp[1912422] tmp[1912439])
                                }
                                {
                                  const-val tmp[1912485]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[1912487]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[1912489]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[1912893]:int(64)[13] "temp"
                                  (1912898 'move' count[1912893](1912895 '.v' _iterator[1855192] F1_count[1964641]))
                                  (1912491 'move' call_tmp[1912489] count[1912893])
                                  const-val call_tmp[1912494]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[1912900]:int(64)[13] "temp"
                                  (1912905 'move' count[1912900](1912902 '.v' _iterator[1855192] F1_count[1964641]))
                                  (1912496 'move' call_tmp[1912494](1912499 call -[962137] count[1912900]))
                                  const-val call_tmp[1912501]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[1912907]:int(64)[13] "temp"
                                  (1912912 'move' low[1912907](1912909 '.v' _iterator[1855192] F0_low[1964637]))
                                  (1912503 'move' call_tmp[1912501](1912506 call +[439547] low[1912907] call_tmp[1912494]))
                                  const-val ret_tmp[1912509]:2*int(64)[1039967] "temp"
                                  const-val low[1912914]:int(64)[13] "temp"
                                  (1912919 'move' low[1912914](1912916 '.v' _iterator[1855192] F0_low[1964637]))
                                  (1912512 call _build_tuple[1039925] low[1912914] call_tmp[1912501] ret_tmp[1912509])
                                  (1912516 'move' tmp[1912485] ret_tmp[1912509])
                                  (1912519 'move' tmp[1912422] tmp[1912485])
                                }
                                (1912523 '=' tmp[1912420] tmp[1912422])
                                (1912526 'noop')
                                1
                                ref call_tmp[1912528]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (1912530 'move' call_tmp[1912528](1912532 '.' tmp[1912420] x0[1039963]))
                                const-val start[1912535]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[1912537]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (1912539 'move' coerce_tmp[1912537](1912541 'deref' call_tmp[1912528]))
                                (1912543 '=' start[1912535] coerce_tmp[1912537])
                                (1912546 'noop')
                                ref call_tmp[1912547]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (1912549 'move' call_tmp[1912547](1912551 '.' tmp[1912420] x1[1039965]))
                                const-val end[1912554]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[1912556]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (1912558 'move' coerce_tmp[1912556](1912560 'deref' call_tmp[1912547]))
                                (1912562 '=' end[1912554] coerce_tmp[1912556])
                                (1912565 'noop')
                                val _indexOfInterest[1912566]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                val _iterator[1912568]:_ic_chpl_direct_param_stride_range_iter[1103197] "dead at end of block" "expr temp" "temp"
                                const-val call_tmp[1912570]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead at end of block" "expr temp" "maybe param" "temp"
                                const-val ret_tmp[1912572]:_ir_chpl_direct_param_stride_range_iter[1103203] "temp"
                                (1912575 call chpl_direct_param_stride_range_iter[1102435] coerce_tmp[1912537] coerce_tmp[1912556] ret_tmp[1912572])
                                (1912579 'move' call_tmp[1912570] ret_tmp[1912572])
                                (1912582 'move' _iterator[1912568](1912585 call _getIterator[1103212] call_tmp[1912570]))
                                {
                                  val ret[1912588]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead after last mention" "RVV" "temp"
                                  val call_tmp[1912590]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (1912593 call chpl_range_check_stride[1102755])
                                  val i[1912594]:int(64)[13] "dead at end of block" "insert auto destroy"
                                  val call_tmp[1912596]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (1912598 'move' i[1912594] 0)
                                  val call_tmp[1912601]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val default_arg_first[1912603]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val low[1912605]:int(64)[13] "temp"
                                  (1912607 'move' low[1912605](1912609 '.v' _iterator[1912568] F0_low[1966135]))
                                  (1912612 'move' default_arg_first[1912603](1912615 call chpl_checkIfRangeIterWillOverflow_default_first[1103109] low[1912605]))
                                  const-val default_arg_last[1912617]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val high[1912619]:int(64)[13] "temp"
                                  (1912621 'move' high[1912619](1912623 '.v' _iterator[1912568] F1_high[1966139]))
                                  (1912626 'move' default_arg_last[1912617](1912629 call chpl_checkIfRangeIterWillOverflow_default_last[1103137] high[1912619]))
                                  const-val _return_tmp_[1912631]:bool[10] "dead after last mention" "temp"
                                  const-val low[1912633]:int(64)[13] "temp"
                                  (1912635 'move' low[1912633](1912637 '.v' _iterator[1912568] F0_low[1966135]))
                                  const-val high[1912640]:int(64)[13] "temp"
                                  (1912642 'move' high[1912640](1912644 '.v' _iterator[1912568] F1_high[1966139]))
                                  (1912647 'move' _return_tmp_[1912631](1912650 call chpl_checkIfRangeIterWillOverflow[1095987] low[1912633] high[1912640] 1 default_arg_first[1912603] default_arg_last[1912617] 1))
                                  CForLoop[1912657]
                                  {
                                    const-val yret[1912686]:int(64)[13] "dead after last mention" "YVV" "temp"
                                    (1912688 'move' yret[1912686] i[1912594])
                                    const-val _yieldedIndex[1912691]:int(64)[13] "temp"
                                    (1912693 'move' _yieldedIndex[1912691] i[1912594])
                                    {
                                      const-val i[1912697]:int(64)[13] "const" "index var" "insert auto destroy"
                                      (1912699 'move' i[1912697] _yieldedIndex[1912691])
                                      const-val yret[1912702]:int(64)[13] "dead after last mention" "YVV" "temp"
                                      (1912704 'move' yret[1912702] _yieldedIndex[1912691])
                                      const-val _yieldedIndex[1912732]:int(64)[13] "temp"
                                      (1912863 'move' _yieldedIndex[1912732] _yieldedIndex[1912691])
                                      {
                                        const-val i[1912734]:int(64)[13] "const" "index var" "insert auto destroy"
                                        (1912736 'move' i[1912734] _yieldedIndex[1912732])
                                        const-val yret[1912739]:int(64)[13] "dead after last mention" "YVV" "temp"
                                        (1912741 'move' yret[1912739] _yieldedIndex[1912732])
                                        const-val _yieldedIndex[1912744]:int(64)[13] "temp"
                                        (1912746 'move' _yieldedIndex[1912744] _yieldedIndex[1912732])
                                        {
                                          const-val i[1912750]:int(64)[13] "const" "index var" "insert auto destroy"
                                          (1912752 'move' i[1912750] _yieldedIndex[1912744])
                                          const-val yret[1912755]:uint(8)[100] "dead after last mention" "YVV" "temp"
                                          ref call_tmp[1912757]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
                                          ref _this_tmp_[1912759]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "temp"
                                          (1912761 'move' _this_tmp_[1912759](1912764 call buff[757875] localThis[1855148]))
                                          val coerce_tmp[1912766]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                          (1912768 'move' coerce_tmp[1912766](1912770 'deref' _this_tmp_[1912759]))
                                          (1912772 'move' call_tmp[1912757](1912775 call this[954002] coerce_tmp[1912766] _yieldedIndex[1912744]))
                                          const-val coerce_tmp[1912778]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                          (1912780 'move' coerce_tmp[1912778](1912782 'deref' call_tmp[1912757]))
                                          (1912784 '=' yret[1912755] coerce_tmp[1912778])
                                          (1912787 'noop')
                                          const-val _yieldedIndex[1912788]:uint(8)[100] "temp"
                                          (1912790 'move' _yieldedIndex[1912788] coerce_tmp[1912778])
                                          {
                                            const-val b[1912794]:uint(8)[100] "const" "index var" "insert auto destroy"
                                            (1912796 'move' b[1912794] _yieldedIndex[1912788])
                                            val yret[1912799]:int(32)[95] "dead after last mention" "YVV" "temp"
                                            val call_tmp[1912801]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                            const-val _yieldedIndex[1912803]:int(32)[95] "temp"
                                            (1912805 'move' _yieldedIndex[1912803](1912807 'cast' int(32)[95] _yieldedIndex[1912788]))
                                            {
                                              const-val removeChar[1912811]:int(32)[95] "const" "index var" "insert auto destroy"
                                              (1912813 'move' removeChar[1912811] _yieldedIndex[1912803])
                                              {
                                                const-val call_tmp[1912817]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (1912819 'move' call_tmp[1912817](1912822 call ==[435517] thisChar[1855010] removeChar[1912811]))
                                                const-val call_tmp[1912825]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (1912827 'move' call_tmp[1912825] call_tmp[1912817])
                                                if call_tmp[1912825]
                                                {
                                                  (1912857 call _freeIterator[1103385] _iterator[1912568])
                                                  (1912860 call chpl__autoDestroy[1567619] tmp[1912420])
                                                  (1912833 call _freeIterator[1103635] _iterator[1855192])
                                                  (1912836 call _freeIterator[1103885] _iterator[1855155])
                                                  (1912839 call chpl__autoDestroy[1494420] localThis[1855148])
                                                  (1912842 call _freeIterator[1109480] _iterator[1855102])
                                                  (1912845 call chpl__autoDestroy[1494420] localThis[1855074])
                                                  (1912848 call _freeIterator[1123047] _iterator[1855035])
                                                  continue _continueLabel[1855636] _continueLabel[1855636]
                                                }
                                              }
                                              label _continueLabel[1912853]
                                            }
                                          }
                                        }
                                      }
                                    }
                                    {
                                      const-val low[1912659]:int(64)[13] "temp"
                                      (1912661 'move' low[1912659](1912663 '.v' _iterator[1912568] F0_low[1966135]))
                                      (1912666 '=' i[1912594] low[1912659])
                                    }
                                    {
                                      const-val high[1912670]:int(64)[13] "temp"
                                      (1912672 'move' high[1912670](1912674 '.v' _iterator[1912568] F1_high[1966139]))
                                      (1912677 '<=' i[1912594] high[1912670])
                                    }
                                    {
                                      val call_tmp[1912681]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                      (1912683 '+=' i[1912594] 1)
                                    }
                                  }
                                  label _endchpl_direct_param_stride_range_iter[1912720]
                                }
                                (1912723 call _freeIterator[1103385] _iterator[1912568])
                                (1912726 call chpl__autoDestroy[1567619] tmp[1912420])
                                label _endchpl_direct_counted_range_iter_helper[1912728]
                              }
                              (1855350 call _freeIterator[1103635] _iterator[1855192])
                              label _endchpl_direct_counted_range_iter[1855352]
                            }
                            (1855355 call _freeIterator[1103885] _iterator[1855155])
                            (1855358 call chpl__autoDestroy[1494420] localThis[1855148])
                            label _endchpl_bytes[1855360]
                          }
                          (1855363 call _freeIterator[1109480] _iterator[1855102])
                        }
                        {
                          val i[1855366]:int(64)[13] "dead at end of block" "insert auto destroy"
                          (1855368 'move' i[1855366] 0)
                          val tmp[1855371]:bool[10] "dead after last mention" "temp"
                          ref call_tmp[1855373]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
                          (1855375 'move' call_tmp[1855373](1855378 call buffLen[757797] localThis[1855074]))
                          const-val call_tmp[1855380]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[1855382]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1855384 'move' coerce_tmp[1855382](1855386 'deref' call_tmp[1855373]))
                          (1855388 'move' call_tmp[1855380](1855391 call <[437363] 0 coerce_tmp[1855382]))
                          (1855394 'move' tmp[1855371] call_tmp[1855380])
                          WhileDo[1855397]
                          {
                            ref call_tmp[1855399]:_ref(c_ptr(uint(8)))[937343] "dead at end of block" "maybe param" "temp"
                            (1855401 'move' call_tmp[1855399](1855404 call buff[757875] localThis[1855074]))
                            ref call_tmp[1855406]:_ref(int(64))[936483] "dead at end of block" "maybe param" "temp"
                            (1855408 'move' call_tmp[1855406](1855411 call buffLen[757797] localThis[1855074]))
                            const-val call_tmp[1855413]:(syserr,int(32),int(32))[964531] "dead at end of block" "maybe param" "temp"
                            val coerce_tmp[1855415]:c_ptr(uint(8))[937334] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1855417 'move' coerce_tmp[1855415](1855419 'deref' call_tmp[1855399]))
                            const-val coerce_tmp[1855421]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1855423 'move' coerce_tmp[1855421](1855425 'deref' call_tmp[1855406]))
                            const-val ret_tmp[1855427]:(syserr,int(32),int(32))[964531] "temp"
                            (1855430 call decodeHelp[174406] coerce_tmp[1855415] coerce_tmp[1855421] i[1855366] 1 ret_tmp[1855427])
                            (1855436 'move' call_tmp[1855413] ret_tmp[1855427])
                            const-val tmp[1855439]:(syserr,int(32),int(32))[964531] "dead at end of block" "const" "insert auto destroy" "temp"
                            (1855441 'move' tmp[1855439] call_tmp[1855413])
                            1
                            ref call_tmp[1855445]:_ref(syserr)[948743] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1855447 'move' call_tmp[1855445](1855449 '.' tmp[1855439] x0[964525]))
                            const-val decodeRet[1855452]:syserr[223496] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1855454]:syserr[223496] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1855456 'move' coerce_tmp[1855454](1855458 'deref' call_tmp[1855445]))
                            (1855460 'move' decodeRet[1855452](1855463 call chpl__initCopy[964396] coerce_tmp[1855454]))
                            ref call_tmp[1855465]:_ref(int(32))[936537] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1855467 'move' call_tmp[1855465](1855469 '.' tmp[1855439] x1[964527]))
                            const-val cp[1855472]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1855474]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1855476 'move' coerce_tmp[1855474](1855478 'deref' call_tmp[1855465]))
                            (1855480 'move' cp[1855472](1855483 call chpl__initCopy[964668] coerce_tmp[1855474]))
                            ref call_tmp[1855485]:_ref(int(32))[936537] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1855487 'move' call_tmp[1855485](1855489 '.' tmp[1855439] x2[964529]))
                            const-val nBytes[1855492]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1855494]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1855496 'move' coerce_tmp[1855494](1855498 'deref' call_tmp[1855485]))
                            (1855500 'move' nBytes[1855492](1855503 call chpl__initCopy[964668] coerce_tmp[1855494]))
                            const-val yret[1855505]:int(32)[95] "dead after last mention" "YVV" "temp"
                            val call_tmp[1855507]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                            (1855509 'move' yret[1855505] cp[1855472])
                            const-val _yieldedIndex[1855512]:int(32)[95] "temp"
                            (1855514 'move' _yieldedIndex[1855512] cp[1855472])
                            {
                              const-val removeChar[1855518]:int(32)[95] "const" "index var" "insert auto destroy"
                              (1855520 'move' removeChar[1855518] _yieldedIndex[1855512])
                              {
                                const-val call_tmp[1855524]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1855526 'move' call_tmp[1855524](1855529 call ==[435517] thisChar[1855010] removeChar[1855518]))
                                const-val call_tmp[1855532]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1855534 'move' call_tmp[1855532] call_tmp[1855524])
                                if call_tmp[1855532]
                                {
                                  (1855540 call chpl__autoDestroy[1498323] tmp[1855439])
                                  (1855543 call chpl__autoDestroy[1494420] localThis[1855074])
                                  (1855546 call _freeIterator[1123047] _iterator[1855035])
                                  continue _continueLabel[1855636] _continueLabel[1855636]
                                }
                              }
                              label _continueLabel[1855551]
                            }
                            const-val coerce_tmp[1855553]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1855555 'move' coerce_tmp[1855553](1855557 'cast' int(64)[13] nBytes[1855492]))
                            (1855561 call +=[451226] i[1855366] coerce_tmp[1855553])
                            (1855565 call chpl__autoDestroy[1498323] tmp[1855439])
                            ref call_tmp[1855567]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
                            (1855569 'move' call_tmp[1855567](1855572 call buffLen[757797] localThis[1855074]))
                            const-val call_tmp[1855574]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1855576]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1855578 'move' coerce_tmp[1855576](1855580 'deref' call_tmp[1855567]))
                            (1855582 'move' call_tmp[1855574](1855585 call <[437363] i[1855366] coerce_tmp[1855576]))
                            (1855588 'move' tmp[1855371] call_tmp[1855574])
                            tmp[1855371]
                          }
                        }
                        (1855593 call chpl__autoDestroy[1494420] localThis[1855074])
                        label _endcodepoints[1855595]
                      }
                      label _breakLabel[1855597]
                      (1855600 call _freeIterator[1123047] _iterator[1855035])
                    }
                    const-val call_tmp[1855602]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1855604]:byteIndex[28170] "temp"
                    (1855607 call +[28722] i[1855017] nBytes[1855024] ret_tmp[1855604])
                    (1855611 'move' call_tmp[1855602] ret_tmp[1855604])
                    const-val call_tmp[1855614]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1855616]:byteIndex[28170] "temp"
                    (1855619 call -[28854] call_tmp[1855602] 1 ret_tmp[1855616])
                    (1855623 'move' call_tmp[1855614] ret_tmp[1855616])
                    (1855627 call =[38191] end[36205] call_tmp[1855614])
                    (1855631 call chpl__autoDestroy[1494683] call_tmp[1855614])
                    (1855634 call chpl__autoDestroy[1494683] call_tmp[1855602])
                  }
                  label _continueLabel[1855636]
                }
                (1854499 call chpl__autoDestroy[1494683] call_tmp[1854401])
                {
                  (1854503 call zip3[1096667] _iterator[1854270])
                }
                {
                  (1854507 call zip3[1108220] _iterator[1854277])
                }
                {
                  {
                    (1854300 call init[1096703] _iterator[1854270])
                  }
                  {
                    (1854304 call init[1108256] _iterator[1854277])
                  }
                }
                {
                  (1854308 call hasMore[1096685] _iterator[1854270])
                }
                {
                  {
                    (1854313 call incr[1096712] _iterator[1854270])
                  }
                  {
                    (1854317 call incr[1108265] _iterator[1854277])
                  }
                }
              }
              {
                const-val retTmp[1854510]:int(64)[13] "temp"
                (1854512 'move' retTmp[1854510](1854515 call hasMore[1108238] _iterator[1854277]))
                (1854517 'move' hasMore[1854294](1854519 'cast' bool[10] retTmp[1854510]))
              }
              if hasMore[1854294]
              {
                (1854524 'chpl_error' c"zippered iterations have non-equal lengths")
              }
              {
                (1854529 call zip4[1108229] _iterator[1854277])
              }
              {
                (1854533 call zip4[1096676] _iterator[1854270])
              }
              (1854536 call _freeIterator[1108635] _iterator[1854222])
              (1854539 call chpl__autoDestroy[1574364] _iterator[1854222])
              (1854542 call chpl__autoDestroy[1567322] call_tmp[1854224])
            }
            {
              const-val call_tmp[1854545]:int(64)[13] "dead at end of block" "maybe param" "temp"
              ref start[1856296]:_ref(byteIndex)[948670] "temp"
              (1856301 'move' start[1856296](1856298 '.v' _iterator[36437] F1_start[1946839]))
              (1854547 'move' call_tmp[1854545](1854550 call _cast[39462] start[1856296]))
              val i[1854552]:int(64)[13] "dead at end of block" "insert auto destroy"
              (1854554 'move' i[1854552] call_tmp[1854545])
              const-val call_tmp[1854557]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1854559 'move' call_tmp[1854557](1854562 call >[437583] call_tmp[1854545] 0))
              const-val call_tmp[1854565]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1854567 'move' call_tmp[1854565] call_tmp[1854557])
              if call_tmp[1854557]
              {
                val tmp[1854572]:bool[10] "dead after last mention" "temp"
                const-val tmp[1854574]:bool[10] "dead after last mention" "maybe param" "temp"
                ref call_tmp[1854576]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
                (1854578 'move' call_tmp[1854576](1854581 call buffLen[757797] localThis[1854203]))
                const-val coerce_tmp[1854583]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1854585 'move' coerce_tmp[1854583](1854587 'deref' call_tmp[1854576]))
                (1854589 'move' tmp[1854574](1854592 call <[437363] i[1854552] coerce_tmp[1854583]))
                val tmp[1854595]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[1854597]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1854599]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1854601 'move' call_tmp[1854599] tmp[1854574])
                (1854604 'move' tmp[1854597] tmp[1854574])
                if tmp[1854574]
                {
                  const-val tmp[1854609]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  ref call_tmp[1854611]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[1854613]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "temp"
                  (1854615 'move' _this_tmp_[1854613](1854618 call buff[757875] localThis[1854203]))
                  val coerce_tmp[1854620]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1854622 'move' coerce_tmp[1854620](1854624 'deref' _this_tmp_[1854613]))
                  (1854626 'move' call_tmp[1854611](1854629 call this[954002] coerce_tmp[1854620] i[1854552]))
                  const-val call_tmp[1854632]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1854634]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1854636 'move' coerce_tmp[1854634](1854638 'deref' call_tmp[1854611]))
                  (1854640 'move' call_tmp[1854632](1854643 call isInitialByte[181528] coerce_tmp[1854634]))
                  const-val call_tmp[1854645]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1854647 'move' call_tmp[1854645](1854650 call ![7494] call_tmp[1854632]))
                  (1854652 'move' tmp[1854609] call_tmp[1854645])
                  (1854655 'move' tmp[1854595] call_tmp[1854645])
                }
                {
                  (1854659 'move' tmp[1854595] 0)
                }
                (1854663 'move' tmp[1854572] tmp[1854595])
                WhileDo[1854666]
                {
                  (1854669 call +=[451226] i[1854552] 1)
                  const-val tmp[1854672]:bool[10] "dead after last mention" "maybe param" "temp"
                  ref call_tmp[1854674]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
                  (1854676 'move' call_tmp[1854674](1854679 call buffLen[757797] localThis[1854203]))
                  const-val coerce_tmp[1854681]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1854683 'move' coerce_tmp[1854681](1854685 'deref' call_tmp[1854674]))
                  (1854687 'move' tmp[1854672](1854690 call <[437363] i[1854552] coerce_tmp[1854681]))
                  val tmp[1854693]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                  const-val tmp[1854695]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[1854697]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1854699 'move' call_tmp[1854697] tmp[1854672])
                  (1854702 'move' tmp[1854695] tmp[1854672])
                  if tmp[1854672]
                  {
                    const-val tmp[1854707]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    ref call_tmp[1854709]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
                    ref _this_tmp_[1854711]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "temp"
                    (1854713 'move' _this_tmp_[1854711](1854716 call buff[757875] localThis[1854203]))
                    val coerce_tmp[1854718]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1854720 'move' coerce_tmp[1854718](1854722 'deref' _this_tmp_[1854711]))
                    (1854724 'move' call_tmp[1854709](1854727 call this[954002] coerce_tmp[1854718] i[1854552]))
                    const-val call_tmp[1854730]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1854732]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1854734 'move' coerce_tmp[1854732](1854736 'deref' call_tmp[1854709]))
                    (1854738 'move' call_tmp[1854730](1854741 call isInitialByte[181528] coerce_tmp[1854732]))
                    const-val call_tmp[1854743]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1854745 'move' call_tmp[1854743](1854748 call ![7494] call_tmp[1854730]))
                    (1854750 'move' tmp[1854707] call_tmp[1854743])
                    (1854753 'move' tmp[1854693] call_tmp[1854743])
                  }
                  {
                    (1854757 'move' tmp[1854693] 0)
                  }
                  (1854761 'move' tmp[1854572] tmp[1854693])
                  tmp[1854572]
                }
              }
              val tmp[1854765]:bool[10] "dead after last mention" "temp"
              ref call_tmp[1854767]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
              (1854769 'move' call_tmp[1854767](1854772 call buffLen[757797] localThis[1854203]))
              const-val call_tmp[1854774]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1854776]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1854778 'move' coerce_tmp[1854776](1854780 'deref' call_tmp[1854767]))
              (1854782 'move' call_tmp[1854774](1854785 call <[437363] i[1854552] coerce_tmp[1854776]))
              (1854788 'move' tmp[1854765] call_tmp[1854774])
              WhileDo[1854791]
              {
                ref call_tmp[1854793]:_ref(c_ptr(uint(8)))[937343] "dead at end of block" "maybe param" "temp"
                (1854795 'move' call_tmp[1854793](1854798 call buff[757875] localThis[1854203]))
                ref call_tmp[1854800]:_ref(int(64))[936483] "dead at end of block" "maybe param" "temp"
                (1854802 'move' call_tmp[1854800](1854805 call buffLen[757797] localThis[1854203]))
                const-val call_tmp[1854807]:(syserr,int(32),int(32))[964531] "dead at end of block" "maybe param" "temp"
                val coerce_tmp[1854809]:c_ptr(uint(8))[937334] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1854811 'move' coerce_tmp[1854809](1854813 'deref' call_tmp[1854793]))
                const-val coerce_tmp[1854815]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1854817 'move' coerce_tmp[1854815](1854819 'deref' call_tmp[1854800]))
                const-val ret_tmp[1854821]:(syserr,int(32),int(32))[964531] "temp"
                (1854824 call decodeHelp[174406] coerce_tmp[1854809] coerce_tmp[1854815] i[1854552] 1 ret_tmp[1854821])
                (1854830 'move' call_tmp[1854807] ret_tmp[1854821])
                const-val tmp[1854833]:(syserr,int(32),int(32))[964531] "dead at end of block" "const" "insert auto destroy" "temp"
                (1854835 'move' tmp[1854833] call_tmp[1854807])
                1
                ref call_tmp[1854839]:_ref(syserr)[948743] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1854841 'move' call_tmp[1854839](1854843 '.' tmp[1854833] x0[964525]))
                const-val decodeRet[1854846]:syserr[223496] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1854848]:syserr[223496] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1854850 'move' coerce_tmp[1854848](1854852 'deref' call_tmp[1854839]))
                (1854854 'move' decodeRet[1854846](1854857 call chpl__initCopy[964396] coerce_tmp[1854848]))
                ref call_tmp[1854859]:_ref(int(32))[936537] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1854861 'move' call_tmp[1854859](1854863 '.' tmp[1854833] x1[964527]))
                const-val cp[1854866]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1854868]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1854870 'move' coerce_tmp[1854868](1854872 'deref' call_tmp[1854859]))
                (1854874 'move' cp[1854866](1854877 call chpl__initCopy[964668] coerce_tmp[1854868]))
                ref call_tmp[1854879]:_ref(int(32))[936537] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1854881 'move' call_tmp[1854879](1854883 '.' tmp[1854833] x2[964529]))
                const-val nBytes[1854886]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1854888]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1854890 'move' coerce_tmp[1854888](1854892 'deref' call_tmp[1854879]))
                (1854894 'move' nBytes[1854886](1854897 call chpl__initCopy[964668] coerce_tmp[1854888]))
                const-val yret[1854899]:(int(32),byteIndex,int(64))[1122053] "dead after last mention" "YVV" "temp"
                val call_tmp[1854901]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val call_tmp[1854903]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (1854905 'move' call_tmp[1854903] cp[1854866])
                const-val call_tmp[1854908]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1854910]:byteIndex[28170] "temp"
                (1854913 call _cast[39483] i[1854552] ret_tmp[1854910])
                (1854916 'move' call_tmp[1854908] ret_tmp[1854910])
                const-val call_tmp[1854919]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (1854921 'move' call_tmp[1854919](1854923 'cast' int(64)[13] nBytes[1854886]))
                const-val call_tmp[1854926]:(int(32),byteIndex,int(64))[1122053] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1854928]:(int(32),byteIndex,int(64))[1122053] "temp"
                (1854931 call _build_tuple[1122003] cp[1854866] call_tmp[1854908] call_tmp[1854919] ret_tmp[1854928])
                (1854936 'move' call_tmp[1854926] ret_tmp[1854928])
                (1854939 'move' yret[1854899] call_tmp[1854926])
                const-val _yieldedIndex[1855641]:(int(32),byteIndex,int(64))[1122053] "temp"
                (1856273 'move' _yieldedIndex[1855641] call_tmp[1854926])
                {
                  1
                  const-val thisChar[1855644]:int(32)[95] "const" "index var" "insert auto destroy"
                  (1855646 'move' thisChar[1855644](1855648 '.v' _yieldedIndex[1855641] x0[1122047]))
                  ref i[1855651]:_ref(byteIndex)[948670] "index var" "insert auto destroy"
                  (1855653 'move' i[1855651](1855655 '.v' _yieldedIndex[1855641] x1[1122049]))
                  const-val nBytes[1855658]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1855660 'move' nBytes[1855658](1855662 '.v' _yieldedIndex[1855641] x2[1122051]))
                  {
                    {
                      val _indexOfInterest[1855667]:int(32)[95] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1855669]:_ic_codepoints__ref_string[1122760] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1855671]:_ir_codepoints__ref_string[1122766] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1855673]:_ir_codepoints__ref_string[1122766] "temp"
                      (1855676 call codepoints[33663] localChars[36187] ret_tmp[1855673])
                      (1855679 'move' call_tmp[1855671] ret_tmp[1855673])
                      (1855682 'move' _iterator[1855669](1855685 call _getIterator[1122775] call_tmp[1855671]))
                      {
                        val ret[1855688]:_ir_codepoints__ref_string[1122766] "dead at end of block" "RVV" "temp"
                        const-val call_tmp[1855690]:string[26] "dead at end of block" "maybe param" "temp"
                        const-val ret_tmp[1855692]:string[26] "temp"
                        ref this[1855694]:_ref(string)[937850] "temp"
                        (1855696 'move' this[1855694](1855698 '.v' _iterator[1855669] F0_this[1950361]))
                        (1855702 call localize[32886] this[1855694] ret_tmp[1855692])
                        (1855705 'move' call_tmp[1855690] ret_tmp[1855692])
                        val localThis[1855708]:string[26] "dead at end of block" "insert auto destroy"
                        (1855710 'move' localThis[1855708] call_tmp[1855690])
                        const-val call_tmp[1855713]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        ref this[1855715]:_ref(string)[937850] "temp"
                        (1855717 'move' this[1855715](1855719 '.v' _iterator[1855669] F0_this[1950361]))
                        (1855722 'move' call_tmp[1855713](1855725 call isASCII[31046] this[1855715]))
                        const-val call_tmp[1855727]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1855729 'move' call_tmp[1855727] call_tmp[1855713])
                        if call_tmp[1855713]
                        {
                          val _indexOfInterest[1855734]:uint(8)[100] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                          val _iterator[1855736]:_ic_chpl_bytes__ref_string[1108167] "dead at end of block" "expr temp" "temp"
                          const-val call_tmp[1855738]:_ir_chpl_bytes__ref_string[1108173] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val ret_tmp[1855740]:_ir_chpl_bytes__ref_string[1108173] "temp"
                          ref this[1855742]:_ref(string)[937850] "temp"
                          (1855744 'move' this[1855742](1855746 '.v' _iterator[1855669] F0_this[1950361]))
                          (1855750 call chpl_bytes[33574] this[1855742] ret_tmp[1855740])
                          (1855753 'move' call_tmp[1855738] ret_tmp[1855740])
                          (1855756 'move' _iterator[1855736](1855759 call _getIterator[1108182] call_tmp[1855738]))
                          {
                            val ret[1855762]:_ir_chpl_bytes__ref_string[1108173] "dead at end of block" "RVV" "temp"
                            const-val call_tmp[1855764]:string[26] "dead at end of block" "maybe param" "temp"
                            const-val ret_tmp[1855766]:string[26] "temp"
                            ref this[1855768]:_ref(string)[937850] "temp"
                            (1855770 'move' this[1855768](1855772 '.v' _iterator[1855736] F0_this[1948187]))
                            (1855776 call localize[32886] this[1855768] ret_tmp[1855766])
                            (1855779 'move' call_tmp[1855764] ret_tmp[1855766])
                            val localThis[1855782]:string[26] "dead at end of block" "insert auto destroy"
                            (1855784 'move' localThis[1855782] call_tmp[1855764])
                            val _indexOfInterest[1855787]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                            val _iterator[1855789]:_ic_chpl_direct_counted_range_iter[1103701] "dead at end of block" "expr temp" "temp"
                            ref call_tmp[1855791]:_ref(int(64))[936483] "dead at end of block" "maybe param" "temp"
                            (1855793 'move' call_tmp[1855791](1855796 call buffLen[757797] localThis[1855782]))
                            const-val call_tmp[1855798]:_ir_chpl_direct_counted_range_iter[1103707] "dead at end of block" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1855800]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1855802 'move' coerce_tmp[1855800](1855804 'deref' call_tmp[1855791]))
                            const-val ret_tmp[1855806]:_ir_chpl_direct_counted_range_iter[1103707] "temp"
                            (1855809 call chpl_direct_counted_range_iter[457907] 0 coerce_tmp[1855800] ret_tmp[1855806])
                            (1855813 'move' call_tmp[1855798] ret_tmp[1855806])
                            (1855816 'move' _iterator[1855789](1855819 call _getIterator[1103716] call_tmp[1855798]))
                            {
                              val ret[1855822]:_ir_chpl_direct_counted_range_iter[1103707] "dead after last mention" "RVV" "temp"
                              val _indexOfInterest[1855824]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                              val _iterator[1855826]:_ic_chpl_direct_counted_range_iter_helper[1103451] "dead at end of block" "expr temp" "temp"
                              const-val call_tmp[1855828]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead at end of block" "expr temp" "maybe param" "temp"
                              const-val ret_tmp[1855830]:_ir_chpl_direct_counted_range_iter_helper[1103457] "temp"
                              const-val low[1855832]:int(64)[13] "temp"
                              (1855834 'move' low[1855832](1855836 '.v' _iterator[1855789] F0_low[1960165]))
                              const-val count[1855839]:int(64)[13] "temp"
                              (1855841 'move' count[1855839](1855843 '.v' _iterator[1855789] F1_count[1960169]))
                              (1855847 call chpl_direct_counted_range_iter_helper[1102009] low[1855832] count[1855839] ret_tmp[1855830])
                              (1855851 'move' call_tmp[1855828] ret_tmp[1855830])
                              (1855854 'move' _iterator[1855826](1855857 call _getIterator[1103466] call_tmp[1855828]))
                              {
                                val ret[1912922]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead after last mention" "RVV" "temp"
                                val call_tmp[1912924]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                const-val tmp[1912926]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val tmp[1912928]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                                const-val call_tmp[1912930]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[1913399]:int(64)[13] "temp"
                                (1913404 'move' count[1913399](1913401 '.v' _iterator[1855826] F1_count[1964641]))
                                (1912932 'move' call_tmp[1912930](1912935 call <[948309] count[1913399]))
                                (1912937 'move' tmp[1912928] call_tmp[1912930])
                                (1912940 'move' tmp[1912926] call_tmp[1912930])
                                const-val call_tmp[1912943]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1912945 'move' call_tmp[1912943] call_tmp[1912930])
                                if call_tmp[1912930]
                                {
                                  (1912951 call boundsCheckHalt[210079] "With a negative count, the range must have a last index.")
                                }
                                const-val tmp[1912954]:2*int(64)[1039967] "dead at end of block" "const" "insert auto destroy" "temp"
                                val tmp[1912956]:2*int(64)[1039967] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                                const-val tmp[1912958]:bool[10] "dead after last mention" "maybe param" "temp"
                                const-val call_tmp[1912960]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[1913406]:int(64)[13] "temp"
                                (1913411 'move' count[1913406](1913408 '.v' _iterator[1855826] F1_count[1964641]))
                                (1912962 'move' call_tmp[1912960](1912965 call ==[435539] count[1913406] 0))
                                (1912968 'move' tmp[1912958] call_tmp[1912960])
                                if call_tmp[1912960]
                                {
                                  const-val tmp[1912973]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[1912975]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[1912977]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[1913413]:int(64)[13] "temp"
                                  (1913418 'move' low[1913413](1913415 '.v' _iterator[1855826] F0_low[1964637]))
                                  (1912979 'move' call_tmp[1912977](1912982 call _cast[955945] low[1913413]))
                                  const-val call_tmp[1912984]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val coerce_tmp[1912986]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                  (1912988 'move' coerce_tmp[1912986](1912990 'cast' uint(64)[115] 1))
                                  (1912993 'move' call_tmp[1912984](1912996 call -[962104] call_tmp[1912977]))
                                  const-val call_tmp[1912998]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  (1913000 'move' call_tmp[1912998](1913003 call _cast[953454] call_tmp[1912984]))
                                  const-val ret_tmp[1913005]:2*int(64)[1039967] "temp"
                                  const-val low[1913420]:int(64)[13] "temp"
                                  (1913425 'move' low[1913420](1913422 '.v' _iterator[1855826] F0_low[1964637]))
                                  (1913008 call _build_tuple[1039925] low[1913420] call_tmp[1912998] ret_tmp[1913005])
                                  (1913012 'move' tmp[1912973] ret_tmp[1913005])
                                  (1913015 'move' tmp[1912956] tmp[1912973])
                                }
                                {
                                  const-val tmp[1913019]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[1913021]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[1913023]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[1913427]:int(64)[13] "temp"
                                  (1913432 'move' count[1913427](1913429 '.v' _iterator[1855826] F1_count[1964641]))
                                  (1913025 'move' call_tmp[1913023] count[1913427])
                                  const-val call_tmp[1913028]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[1913434]:int(64)[13] "temp"
                                  (1913439 'move' count[1913434](1913436 '.v' _iterator[1855826] F1_count[1964641]))
                                  (1913030 'move' call_tmp[1913028](1913033 call -[962137] count[1913434]))
                                  const-val call_tmp[1913035]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[1913441]:int(64)[13] "temp"
                                  (1913446 'move' low[1913441](1913443 '.v' _iterator[1855826] F0_low[1964637]))
                                  (1913037 'move' call_tmp[1913035](1913040 call +[439547] low[1913441] call_tmp[1913028]))
                                  const-val ret_tmp[1913043]:2*int(64)[1039967] "temp"
                                  const-val low[1913448]:int(64)[13] "temp"
                                  (1913453 'move' low[1913448](1913450 '.v' _iterator[1855826] F0_low[1964637]))
                                  (1913046 call _build_tuple[1039925] low[1913448] call_tmp[1913035] ret_tmp[1913043])
                                  (1913050 'move' tmp[1913019] ret_tmp[1913043])
                                  (1913053 'move' tmp[1912956] tmp[1913019])
                                }
                                (1913057 '=' tmp[1912954] tmp[1912956])
                                (1913060 'noop')
                                1
                                ref call_tmp[1913062]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (1913064 'move' call_tmp[1913062](1913066 '.' tmp[1912954] x0[1039963]))
                                const-val start[1913069]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[1913071]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (1913073 'move' coerce_tmp[1913071](1913075 'deref' call_tmp[1913062]))
                                (1913077 '=' start[1913069] coerce_tmp[1913071])
                                (1913080 'noop')
                                ref call_tmp[1913081]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (1913083 'move' call_tmp[1913081](1913085 '.' tmp[1912954] x1[1039965]))
                                const-val end[1913088]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[1913090]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (1913092 'move' coerce_tmp[1913090](1913094 'deref' call_tmp[1913081]))
                                (1913096 '=' end[1913088] coerce_tmp[1913090])
                                (1913099 'noop')
                                val _indexOfInterest[1913100]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                val _iterator[1913102]:_ic_chpl_direct_param_stride_range_iter[1103197] "dead at end of block" "expr temp" "temp"
                                const-val call_tmp[1913104]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead at end of block" "expr temp" "maybe param" "temp"
                                const-val ret_tmp[1913106]:_ir_chpl_direct_param_stride_range_iter[1103203] "temp"
                                (1913109 call chpl_direct_param_stride_range_iter[1102435] coerce_tmp[1913071] coerce_tmp[1913090] ret_tmp[1913106])
                                (1913113 'move' call_tmp[1913104] ret_tmp[1913106])
                                (1913116 'move' _iterator[1913102](1913119 call _getIterator[1103212] call_tmp[1913104]))
                                {
                                  val ret[1913122]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead after last mention" "RVV" "temp"
                                  val call_tmp[1913124]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (1913127 call chpl_range_check_stride[1102755])
                                  val i[1913128]:int(64)[13] "dead at end of block" "insert auto destroy"
                                  val call_tmp[1913130]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (1913132 'move' i[1913128] 0)
                                  val call_tmp[1913135]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val default_arg_first[1913137]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val low[1913139]:int(64)[13] "temp"
                                  (1913141 'move' low[1913139](1913143 '.v' _iterator[1913102] F0_low[1966135]))
                                  (1913146 'move' default_arg_first[1913137](1913149 call chpl_checkIfRangeIterWillOverflow_default_first[1103109] low[1913139]))
                                  const-val default_arg_last[1913151]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val high[1913153]:int(64)[13] "temp"
                                  (1913155 'move' high[1913153](1913157 '.v' _iterator[1913102] F1_high[1966139]))
                                  (1913160 'move' default_arg_last[1913151](1913163 call chpl_checkIfRangeIterWillOverflow_default_last[1103137] high[1913153]))
                                  const-val _return_tmp_[1913165]:bool[10] "dead after last mention" "temp"
                                  const-val low[1913167]:int(64)[13] "temp"
                                  (1913169 'move' low[1913167](1913171 '.v' _iterator[1913102] F0_low[1966135]))
                                  const-val high[1913174]:int(64)[13] "temp"
                                  (1913176 'move' high[1913174](1913178 '.v' _iterator[1913102] F1_high[1966139]))
                                  (1913181 'move' _return_tmp_[1913165](1913184 call chpl_checkIfRangeIterWillOverflow[1095987] low[1913167] high[1913174] 1 default_arg_first[1913137] default_arg_last[1913151] 1))
                                  CForLoop[1913191]
                                  {
                                    const-val yret[1913220]:int(64)[13] "dead after last mention" "YVV" "temp"
                                    (1913222 'move' yret[1913220] i[1913128])
                                    const-val _yieldedIndex[1913225]:int(64)[13] "temp"
                                    (1913227 'move' _yieldedIndex[1913225] i[1913128])
                                    {
                                      const-val i[1913231]:int(64)[13] "const" "index var" "insert auto destroy"
                                      (1913233 'move' i[1913231] _yieldedIndex[1913225])
                                      const-val yret[1913236]:int(64)[13] "dead after last mention" "YVV" "temp"
                                      (1913238 'move' yret[1913236] _yieldedIndex[1913225])
                                      const-val _yieldedIndex[1913266]:int(64)[13] "temp"
                                      (1913397 'move' _yieldedIndex[1913266] _yieldedIndex[1913225])
                                      {
                                        const-val i[1913268]:int(64)[13] "const" "index var" "insert auto destroy"
                                        (1913270 'move' i[1913268] _yieldedIndex[1913266])
                                        const-val yret[1913273]:int(64)[13] "dead after last mention" "YVV" "temp"
                                        (1913275 'move' yret[1913273] _yieldedIndex[1913266])
                                        const-val _yieldedIndex[1913278]:int(64)[13] "temp"
                                        (1913280 'move' _yieldedIndex[1913278] _yieldedIndex[1913266])
                                        {
                                          const-val i[1913284]:int(64)[13] "const" "index var" "insert auto destroy"
                                          (1913286 'move' i[1913284] _yieldedIndex[1913278])
                                          const-val yret[1913289]:uint(8)[100] "dead after last mention" "YVV" "temp"
                                          ref call_tmp[1913291]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
                                          ref _this_tmp_[1913293]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "temp"
                                          (1913295 'move' _this_tmp_[1913293](1913298 call buff[757875] localThis[1855782]))
                                          val coerce_tmp[1913300]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                          (1913302 'move' coerce_tmp[1913300](1913304 'deref' _this_tmp_[1913293]))
                                          (1913306 'move' call_tmp[1913291](1913309 call this[954002] coerce_tmp[1913300] _yieldedIndex[1913278]))
                                          const-val coerce_tmp[1913312]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                          (1913314 'move' coerce_tmp[1913312](1913316 'deref' call_tmp[1913291]))
                                          (1913318 '=' yret[1913289] coerce_tmp[1913312])
                                          (1913321 'noop')
                                          const-val _yieldedIndex[1913322]:uint(8)[100] "temp"
                                          (1913324 'move' _yieldedIndex[1913322] coerce_tmp[1913312])
                                          {
                                            const-val b[1913328]:uint(8)[100] "const" "index var" "insert auto destroy"
                                            (1913330 'move' b[1913328] _yieldedIndex[1913322])
                                            val yret[1913333]:int(32)[95] "dead after last mention" "YVV" "temp"
                                            val call_tmp[1913335]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                            const-val _yieldedIndex[1913337]:int(32)[95] "temp"
                                            (1913339 'move' _yieldedIndex[1913337](1913341 'cast' int(32)[95] _yieldedIndex[1913322]))
                                            {
                                              const-val removeChar[1913345]:int(32)[95] "const" "index var" "insert auto destroy"
                                              (1913347 'move' removeChar[1913345] _yieldedIndex[1913337])
                                              {
                                                const-val call_tmp[1913351]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (1913353 'move' call_tmp[1913351](1913356 call ==[435517] thisChar[1855644] removeChar[1913345]))
                                                const-val call_tmp[1913359]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (1913361 'move' call_tmp[1913359] call_tmp[1913351])
                                                if call_tmp[1913359]
                                                {
                                                  (1913391 call _freeIterator[1103385] _iterator[1913102])
                                                  (1913394 call chpl__autoDestroy[1567619] tmp[1912954])
                                                  (1913367 call _freeIterator[1103635] _iterator[1855826])
                                                  (1913370 call _freeIterator[1103885] _iterator[1855789])
                                                  (1913373 call chpl__autoDestroy[1494420] localThis[1855782])
                                                  (1913376 call _freeIterator[1109480] _iterator[1855736])
                                                  (1913379 call chpl__autoDestroy[1494420] localThis[1855708])
                                                  (1913382 call _freeIterator[1123047] _iterator[1855669])
                                                  continue _continueLabel[1856270] _continueLabel[1856270]
                                                }
                                              }
                                              label _continueLabel[1913387]
                                            }
                                          }
                                        }
                                      }
                                    }
                                    {
                                      const-val low[1913193]:int(64)[13] "temp"
                                      (1913195 'move' low[1913193](1913197 '.v' _iterator[1913102] F0_low[1966135]))
                                      (1913200 '=' i[1913128] low[1913193])
                                    }
                                    {
                                      const-val high[1913204]:int(64)[13] "temp"
                                      (1913206 'move' high[1913204](1913208 '.v' _iterator[1913102] F1_high[1966139]))
                                      (1913211 '<=' i[1913128] high[1913204])
                                    }
                                    {
                                      val call_tmp[1913215]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                      (1913217 '+=' i[1913128] 1)
                                    }
                                  }
                                  label _endchpl_direct_param_stride_range_iter[1913254]
                                }
                                (1913257 call _freeIterator[1103385] _iterator[1913102])
                                (1913260 call chpl__autoDestroy[1567619] tmp[1912954])
                                label _endchpl_direct_counted_range_iter_helper[1913262]
                              }
                              (1855984 call _freeIterator[1103635] _iterator[1855826])
                              label _endchpl_direct_counted_range_iter[1855986]
                            }
                            (1855989 call _freeIterator[1103885] _iterator[1855789])
                            (1855992 call chpl__autoDestroy[1494420] localThis[1855782])
                            label _endchpl_bytes[1855994]
                          }
                          (1855997 call _freeIterator[1109480] _iterator[1855736])
                        }
                        {
                          val i[1856000]:int(64)[13] "dead at end of block" "insert auto destroy"
                          (1856002 'move' i[1856000] 0)
                          val tmp[1856005]:bool[10] "dead after last mention" "temp"
                          ref call_tmp[1856007]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
                          (1856009 'move' call_tmp[1856007](1856012 call buffLen[757797] localThis[1855708]))
                          const-val call_tmp[1856014]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[1856016]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1856018 'move' coerce_tmp[1856016](1856020 'deref' call_tmp[1856007]))
                          (1856022 'move' call_tmp[1856014](1856025 call <[437363] 0 coerce_tmp[1856016]))
                          (1856028 'move' tmp[1856005] call_tmp[1856014])
                          WhileDo[1856031]
                          {
                            ref call_tmp[1856033]:_ref(c_ptr(uint(8)))[937343] "dead at end of block" "maybe param" "temp"
                            (1856035 'move' call_tmp[1856033](1856038 call buff[757875] localThis[1855708]))
                            ref call_tmp[1856040]:_ref(int(64))[936483] "dead at end of block" "maybe param" "temp"
                            (1856042 'move' call_tmp[1856040](1856045 call buffLen[757797] localThis[1855708]))
                            const-val call_tmp[1856047]:(syserr,int(32),int(32))[964531] "dead at end of block" "maybe param" "temp"
                            val coerce_tmp[1856049]:c_ptr(uint(8))[937334] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1856051 'move' coerce_tmp[1856049](1856053 'deref' call_tmp[1856033]))
                            const-val coerce_tmp[1856055]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1856057 'move' coerce_tmp[1856055](1856059 'deref' call_tmp[1856040]))
                            const-val ret_tmp[1856061]:(syserr,int(32),int(32))[964531] "temp"
                            (1856064 call decodeHelp[174406] coerce_tmp[1856049] coerce_tmp[1856055] i[1856000] 1 ret_tmp[1856061])
                            (1856070 'move' call_tmp[1856047] ret_tmp[1856061])
                            const-val tmp[1856073]:(syserr,int(32),int(32))[964531] "dead at end of block" "const" "insert auto destroy" "temp"
                            (1856075 'move' tmp[1856073] call_tmp[1856047])
                            1
                            ref call_tmp[1856079]:_ref(syserr)[948743] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1856081 'move' call_tmp[1856079](1856083 '.' tmp[1856073] x0[964525]))
                            const-val decodeRet[1856086]:syserr[223496] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1856088]:syserr[223496] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1856090 'move' coerce_tmp[1856088](1856092 'deref' call_tmp[1856079]))
                            (1856094 'move' decodeRet[1856086](1856097 call chpl__initCopy[964396] coerce_tmp[1856088]))
                            ref call_tmp[1856099]:_ref(int(32))[936537] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1856101 'move' call_tmp[1856099](1856103 '.' tmp[1856073] x1[964527]))
                            const-val cp[1856106]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1856108]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1856110 'move' coerce_tmp[1856108](1856112 'deref' call_tmp[1856099]))
                            (1856114 'move' cp[1856106](1856117 call chpl__initCopy[964668] coerce_tmp[1856108]))
                            ref call_tmp[1856119]:_ref(int(32))[936537] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1856121 'move' call_tmp[1856119](1856123 '.' tmp[1856073] x2[964529]))
                            const-val nBytes[1856126]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1856128]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1856130 'move' coerce_tmp[1856128](1856132 'deref' call_tmp[1856119]))
                            (1856134 'move' nBytes[1856126](1856137 call chpl__initCopy[964668] coerce_tmp[1856128]))
                            const-val yret[1856139]:int(32)[95] "dead after last mention" "YVV" "temp"
                            val call_tmp[1856141]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                            (1856143 'move' yret[1856139] cp[1856106])
                            const-val _yieldedIndex[1856146]:int(32)[95] "temp"
                            (1856148 'move' _yieldedIndex[1856146] cp[1856106])
                            {
                              const-val removeChar[1856152]:int(32)[95] "const" "index var" "insert auto destroy"
                              (1856154 'move' removeChar[1856152] _yieldedIndex[1856146])
                              {
                                const-val call_tmp[1856158]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1856160 'move' call_tmp[1856158](1856163 call ==[435517] thisChar[1855644] removeChar[1856152]))
                                const-val call_tmp[1856166]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1856168 'move' call_tmp[1856166] call_tmp[1856158])
                                if call_tmp[1856166]
                                {
                                  (1856174 call chpl__autoDestroy[1498323] tmp[1856073])
                                  (1856177 call chpl__autoDestroy[1494420] localThis[1855708])
                                  (1856180 call _freeIterator[1123047] _iterator[1855669])
                                  continue _continueLabel[1856270] _continueLabel[1856270]
                                }
                              }
                              label _continueLabel[1856185]
                            }
                            const-val coerce_tmp[1856187]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1856189 'move' coerce_tmp[1856187](1856191 'cast' int(64)[13] nBytes[1856126]))
                            (1856195 call +=[451226] i[1856000] coerce_tmp[1856187])
                            (1856199 call chpl__autoDestroy[1498323] tmp[1856073])
                            ref call_tmp[1856201]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
                            (1856203 'move' call_tmp[1856201](1856206 call buffLen[757797] localThis[1855708]))
                            const-val call_tmp[1856208]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1856210]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1856212 'move' coerce_tmp[1856210](1856214 'deref' call_tmp[1856201]))
                            (1856216 'move' call_tmp[1856208](1856219 call <[437363] i[1856000] coerce_tmp[1856210]))
                            (1856222 'move' tmp[1856005] call_tmp[1856208])
                            tmp[1856005]
                          }
                        }
                        (1856227 call chpl__autoDestroy[1494420] localThis[1855708])
                        label _endcodepoints[1856229]
                      }
                      label _breakLabel[1856231]
                      (1856234 call _freeIterator[1123047] _iterator[1855669])
                    }
                    const-val call_tmp[1856236]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1856238]:byteIndex[28170] "temp"
                    (1856241 call +[28722] i[1855651] nBytes[1855658] ret_tmp[1856238])
                    (1856245 'move' call_tmp[1856236] ret_tmp[1856238])
                    const-val call_tmp[1856248]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1856250]:byteIndex[28170] "temp"
                    (1856253 call -[28854] call_tmp[1856236] 1 ret_tmp[1856250])
                    (1856257 'move' call_tmp[1856248] ret_tmp[1856250])
                    (1856261 call =[38191] end[36205] call_tmp[1856248])
                    (1856265 call chpl__autoDestroy[1494683] call_tmp[1856248])
                    (1856268 call chpl__autoDestroy[1494683] call_tmp[1856236])
                  }
                  label _continueLabel[1856270]
                }
                (1854959 call chpl__autoDestroy[1494683] call_tmp[1854908])
                const-val coerce_tmp[1854961]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1854963 'move' coerce_tmp[1854961](1854965 'cast' int(64)[13] nBytes[1854886]))
                (1854969 call +=[451226] i[1854552] coerce_tmp[1854961])
                (1854973 call chpl__autoDestroy[1498323] tmp[1854833])
                ref call_tmp[1854975]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
                (1854977 'move' call_tmp[1854975](1854980 call buffLen[757797] localThis[1854203]))
                const-val call_tmp[1854982]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1854984]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1854986 'move' coerce_tmp[1854984](1854988 'deref' call_tmp[1854975]))
                (1854990 'move' call_tmp[1854982](1854993 call <[437363] i[1854552] coerce_tmp[1854984]))
                (1854996 'move' tmp[1854765] call_tmp[1854982])
                tmp[1854765]
              }
            }
            (1855001 call chpl__autoDestroy[1494420] localThis[1854203])
            label _end_cpIndexLen[1855003]
          }
          label _breakLabel[36442]
          (1798593 call _freeIterator[1122484] _iterator[36437])
        }
      }
      const-val call_tmp[601534]:range(byteIndex,bounded,false)[1025703] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1790952]:range(byteIndex,bounded,false)[1025703] "temp"
      (36498 call chpl_build_bounded_range[1123165] start[36193] end[36205] ret_tmp[1790952])
      (1790955 'move' call_tmp[601534] ret_tmp[1790952])
      const-val call_tmp[601539]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1790970]:string[26] "temp"
      (36501 call this[1123411] localThis[36176] call_tmp[601534] ret_tmp[1790970])
      (1790973 'move' call_tmp[601539] ret_tmp[1790970])
      (1124305 'move' ret[504273] call_tmp[601539])
      (1798595 call chpl__autoDestroy[1567277] call_tmp[601534])
      (1798598 call chpl__autoDestroy[1494683] end[36205])
      (1798601 call chpl__autoDestroy[1494683] start[36193])
      (1798604 call chpl__autoDestroy[1494420] localChars[36187])
      (1798607 call chpl__autoDestroy[1494420] localThis[36176])
      gotoReturn _end_strip[504271] _end_strip[504271]
    }
    label _end_strip[504271]
    (1786691 '=' _retArg[1786689] ret[504273])
    (1786695 return _void[55])
  }
  function _ref(string)[937850].isSpace[36840](const  ref arg this[36842]:_ref(string)[937850]) : bool[10] "method" "resolved" "fn synchronization free"
  {
    val ret[504352]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[601688]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (601691 'move' call_tmp[601688](36853 call isEmpty[35061] this[36842]))
    const-val call_tmp[601693]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (601696 'move' call_tmp[601693] call_tmp[601688])
    if call_tmp[601693]
    {
      (504358 'move' ret[504352] 0)
      gotoReturn _end_isSpace[504350] _end_isSpace[504350]
    }
    val result[36865]:bool[10] "dead at end of block" "insert auto destroy"
    (540360 'move' result[36865] 1)
    const-val tmp[36944]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[601700]:_ref(int(32))[936537] "dead after last mention" "maybe param" "temp"
    (601703 'move' call_tmp[601700](36873 call locale_id[757953] this[36842]))
    const-val call_tmp[601705]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1125413]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1125417 'move' coerce_tmp[1125413](1125415 'deref' call_tmp[601700]))
    (601708 'move' call_tmp[601705](36878 call chpl_buildLocaleID[209412] coerce_tmp[1125413] c_sublocid_any[89875]))
    const-val call_tmp[601710]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    (601713 'move' call_tmp[601710](36879 'chpl_on_locale_num' call_tmp[601705]))
    (36946 'move' tmp[36944] call_tmp[601710])
    val isdirect[2034047]:bool[10] "temp"
    (2034052 'move' isdirect[2034047](2034049 call chpl_doDirectExecuteOn[187423] tmp[36944]))
    if isdirect[2034047]
    {
      (2034056 call on_fn[933733] this[36842] result[36865])
    }
    {
      val _args_foron_fn[2034074]:_class_localson_fn[2034064] "temp"
      (2034078 'move' _args_foron_fn[2034074](2034076 'stack allocate class' _class_localson_fn[2034064]))
      (2034080 '.=' _args_foron_fn[2034074] _0_tmp[2034067] tmp[36944])
      ref tmp[2034084]:string[26] "temp"
      (2034088 'move' tmp[2034084](2034086 'set reference' this[36842]))
      (2034090 '.=' _args_foron_fn[2034074] _1_this[2034069] tmp[2034084])
      ref tmp[2034094]:bool[10] "temp"
      (2034098 'move' tmp[2034094](2034096 'set reference' result[36865]))
      (2034100 '.=' _args_foron_fn[2034074] _2_result[2034071] tmp[2034094])
      val _args_vforon_fn[2034104]:c_void_ptr[149] "temp"
      (2034108 'move' _args_vforon_fn[2034104](2034106 'cast_to_void_star' _args_foron_fn[2034074]))
      val _args_sizeon_fn[2034110]:int(64)[13] "temp"
      (2034114 'move' _args_sizeon_fn[2034110](2034112 'sizeof_bundle' _class_localson_fn[2034064]))
      on(2034154 call wrapon_fn[2034116] tmp[36944] _args_vforon_fn[2034104] _args_sizeon_fn[2034110] _args_foron_fn[2034074])
    }
    {
    }
    (1125443 'move' ret[504352] result[36865])
    gotoReturn _end_isSpace[504350] _end_isSpace[504350]
    label _end_isSpace[504350]
    (504354 return ret[504352])
  }
  function =[38165](ref arg lhs[38162]:_ref(byteIndex)[948670], const in arg rhs[38168]:int(64)[13]) : void[4] "assignop" "resolved" "no return value for void"
  {
    ref call_tmp[602284]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
    (602287 'move' call_tmp[602284](38172 call _bindex[757653] lhs[38162]))
    const-val call_tmp[602289]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (602292 'move' call_tmp[602289] rhs[38168])
    (38179 call =[435238] call_tmp[602284] call_tmp[602289])
    (504512 return _void[55])
  }
  function =[38191](ref arg lhs[38188]:_ref(byteIndex)[948670], const  ref arg rhs[38194]:_ref(byteIndex)[948670]) : void[4] "assignop" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (2058324 '=' lhs[38188] rhs[38194])
    (2058325 return _void[55])
  }
  function =[38269](ref arg lhs[38266]:_ref(string)[937850], const  ref arg rhs[38272]:string[26]) : void[4] "assignop" "resolved" "fn synchronization free" "no return value for void"
  {
    (38279 call doAssign[1019079] lhs[38266] rhs[38272])
    (504520 return _void[55])
  }
  function +[38342](const  ref arg s0[38339]:string[26], const  ref arg s1[38345]:string[26], ref arg _retArg[1787237]:_ref(string)[937850]) : void[4] "fn returns via _retArg" "resolved" "fn synchronization free"
  {
    const-val ret[504526]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[602354]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1789003]:string[26] "temp"
    (38352 call doConcat[980774] s0[38339] s1[38345] ret_tmp[1789003])
    (1789006 'move' call_tmp[602354] ret_tmp[1789003])
    (504531 'move' ret[504526] call_tmp[602354])
    (1787239 '=' _retArg[1787237] ret[504526])
    (1787241 return _void[55])
  }
  function +=[38797](ref arg lhs[38794]:_ref(string)[937850], const  ref arg rhs[38800]:_ref(string)[937850]) : void[4] "assignop" "resolved" "no return value for void"
  {
    val ret[504676]:void[4] "dead after last mention" "RVV" "temp"
    (38808 call doAppend[978981] lhs[38794] rhs[38800])
    (504678 return ret[504676])
  }
  function ==[38820](const  ref arg a[38817]:string[26], const  ref arg b[38823]:string[26]) : bool[10] "no doc" "resolved" "fn synchronization free"
  {
    val ret[504682]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[602569]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (602572 'move' call_tmp[602569](38831 call doEq[1206127] a[38817] b[38823]))
    (1207888 'move' ret[504682] call_tmp[602569])
    (504684 return ret[504682])
  }
  function !=[38844](const  ref arg a[38841]:string[26], const  ref arg b[38847]:string[26]) : bool[10] "inline" "no doc" "resolved"
  {
    val ret[504692]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[602574]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (602577 'move' call_tmp[602574](38855 call doEq[1206127] a[38841] b[38847]))
    const-val call_tmp[602579]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (602582 'move' call_tmp[602579](38856 call ![7494] call_tmp[602574]))
    (1728698 'move' ret[504692] call_tmp[602579])
    (504694 return ret[504692])
  }
  function <[38870](const  ref arg a[38867]:string[26], const  ref arg b[38873]:string[26]) : bool[10] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val ret[504702]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[602584]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (602587 'move' call_tmp[602584](38881 call doLessThan[1728318] a[38867] b[38873]))
    (1728480 'move' ret[504702] call_tmp[602584])
    (504704 return ret[504702])
  }
  function >[38894](const  ref arg a[38891]:string[26], const  ref arg b[38897]:string[26]) : bool[10] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val ret[504712]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[602589]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (602592 'move' call_tmp[602589](38905 call doGreaterThan[1728490] a[38891] b[38897]))
    (1728652 'move' ret[504712] call_tmp[602589])
    (504714 return ret[504712])
  }
  val wint_t[38984]:int(32)[95] "dead at end of block" "extern" "insert auto destroy" "no doc" "type variable"
  function codepoint_isWhitespace[39153](const in arg c[39150]:int(32)[95]) : bool[10] "inline" "private" "resolved" "fn synchronization free"
  {
    val ret[504812]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[602659]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (602662 'move' call_tmp[602659](39172 call iswspace[39162] c[39150]))
    const-val call_tmp[602664]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1125428]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1125434 'move' coerce_tmp[1125428](1125430 'cast' int(32)[95] 0))
    (602667 'move' call_tmp[602664](39174 call !=[435901] call_tmp[602659] coerce_tmp[1125428]))
    (1125438 'move' ret[504812] call_tmp[602664])
    (504814 return ret[504812])
  }
  function _cast[39392](const in arg cs[39395]:c_string[19]) : c_ptr(uint(8))[937334] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1763049]:c_ptr(uint(8))[937334] "temp"
    val ret[504885]:c_ptr(uint(8))[937334] "dead after last mention" "RVV" "temp"
    val call_tmp[602769]:c_ptr(uint(8))[937334] "dead after last mention" "expr temp" "maybe param" "temp"
    (602772 'move' call_tmp[602769](39402 'cast' c_ptr(uint(8))[937334] cs[39395]))
    (504890 'move' ret[504885] call_tmp[602769])
    (504887 return ret[504885])
  }
  function _cast[39462](const  ref arg cpi[39465]:byteIndex[28170]) : int(64)[13] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1763051]:int(64)[13] "temp"
    val ret[504905]:int(64)[13] "dead after last mention" "RVV" "temp"
    ref call_tmp[602796]:_ref(int(64))[936483] "dead after last mention" "maybe param" "reference to a const" "temp"
    (602799 'move' call_tmp[602796](39469 call _bindex[757653] cpi[39465]))
    (504910 'move' ret[504905](504909 'deref' call_tmp[602796]))
    (504907 return ret[504905])
  }
  function _cast[39483](const in arg i[39486]:int(64)[13], ref arg _retArg[1787315]:_ref(byteIndex)[948670]) : void[4] "fn returns via _retArg" "inline" "no doc" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1763053]:byteIndex[28170] "temp"
    const-val ret[504914]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[39490]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (1029642 call init[28097] cpi[39490])
    ref call_tmp[602803]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
    (602806 'move' call_tmp[602803](39496 call _bindex[757653] cpi[39490]))
    (39500 call =[435238] call_tmp[602803] i[39486])
    (504919 'move' ret[504914] cpi[39490])
    gotoReturn _end__cast[504912] _end__cast[504912]
    label _end__cast[504912]
    (1787317 '=' _retArg[1787315] ret[504914])
    (1787319 return _void[55])
  }
  function _cast[39514](const  ref arg cpi[39517]:codepointIndex[28274]) : int(64)[13] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1763055]:int(64)[13] "temp"
    val ret[504925]:int(64)[13] "dead after last mention" "RVV" "temp"
    ref call_tmp[602810]:_ref(int(64))[936483] "dead after last mention" "maybe param" "reference to a const" "temp"
    (602813 'move' call_tmp[602810](39521 call _cpindex[757725] cpi[39517]))
    (504930 'move' ret[504925](504929 'deref' call_tmp[602810]))
    (504927 return ret[504925])
  }
  function _cast[39535](const in arg i[39538]:int(64)[13], ref arg _retArg[1787327]:_ref(codepointIndex)[948680]) : void[4] "fn returns via _retArg" "inline" "no doc" "resolved"
  {
    val _formal_type_tmp_[1763057]:codepointIndex[28274] "temp"
    const-val ret[504934]:codepointIndex[28274] "dead after last mention" "RVV" "temp"
    val cpi[39542]:codepointIndex[28274] "dead at end of block" "insert auto destroy"
    (1156947 call init[28201] cpi[39542])
    ref call_tmp[602817]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
    (602820 'move' call_tmp[602817](39548 call _cpindex[757725] cpi[39542]))
    (39552 call =[435238] call_tmp[602817] i[39538])
    (504939 'move' ret[504934] cpi[39542])
    gotoReturn _end__cast[504932] _end__cast[504932]
    label _end__cast[504932]
    (1787329 '=' _retArg[1787327] ret[504934])
    (1787331 return _void[55])
  }
  function iswspace[39162](const in arg wc[39159]:int(32)[95]) : int(32)[95] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[504806]:int(32)[95] "RVV" "temp"
    (504808 return ret[504806])
  }
  function on_fn[933697](const  ref arg this[1765410]:_ref(string)[937850]) : void[4] "on" "resolved" "fn synchronization free"
  {
    {
      ref call_tmp[598334]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "maybe param" "temp"
      (598337 'move' call_tmp[598334](30856 call buff[757875] this[1765410]))
      val coerce_tmp[938070]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (938074 'move' coerce_tmp[938070](938072 'deref' call_tmp[598334]))
      const-val coerce_tmp[938076]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (938082 'move' coerce_tmp[938076](938078 'cast' c_void_ptr[149] coerce_tmp[938070]))
      (30860 call chpl_here_free[188081] coerce_tmp[938076])
    }
    (933704 return _void[55])
  }
  function on_fn[933733](const  ref arg this[1765412]:_ref(string)[937850], ref arg result[1765414]:_ref(bool)[937110]) : void[4] "on" "resolved" "fn synchronization free"
  {
    {
      {
        val _indexOfInterest[36907]:int(32)[95] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[36908]:_ic_codepoints__ref_string[1122760] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[601717]:_ir_codepoints__ref_string[1122766] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1786569]:_ir_codepoints__ref_string[1122766] "temp"
        (36886 call codepoints[33663] this[1765412] ret_tmp[1786569])
        (1786572 'move' call_tmp[601717] ret_tmp[1786569])
        (36917 'move' _iterator[36908](36915 call _getIterator[1122775] call_tmp[601717]))
        {
          val ret[1856304]:_ir_codepoints__ref_string[1122766] "dead at end of block" "RVV" "temp"
          const-val call_tmp[1856306]:string[26] "dead at end of block" "maybe param" "temp"
          const-val ret_tmp[1856308]:string[26] "temp"
          ref this[1856878]:_ref(string)[937850] "temp"
          (1856883 'move' this[1856878](1856880 '.v' _iterator[36908] F0_this[1950361]))
          (1856311 call localize[32886] this[1856878] ret_tmp[1856308])
          (1856314 'move' call_tmp[1856306] ret_tmp[1856308])
          val localThis[1856317]:string[26] "dead at end of block" "insert auto destroy"
          (1856319 'move' localThis[1856317] call_tmp[1856306])
          const-val call_tmp[1856322]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          ref this[1856885]:_ref(string)[937850] "temp"
          (1856890 'move' this[1856885](1856887 '.v' _iterator[36908] F0_this[1950361]))
          (1856324 'move' call_tmp[1856322](1856327 call isASCII[31046] this[1856885]))
          const-val call_tmp[1856329]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1856331 'move' call_tmp[1856329] call_tmp[1856322])
          if call_tmp[1856322]
          {
            val _indexOfInterest[1856336]:uint(8)[100] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1856338]:_ic_chpl_bytes__ref_string[1108167] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[1856340]:_ir_chpl_bytes__ref_string[1108173] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[1856342]:_ir_chpl_bytes__ref_string[1108173] "temp"
            ref this[1856892]:_ref(string)[937850] "temp"
            (1856897 'move' this[1856892](1856894 '.v' _iterator[36908] F0_this[1950361]))
            (1856345 call chpl_bytes[33574] this[1856892] ret_tmp[1856342])
            (1856348 'move' call_tmp[1856340] ret_tmp[1856342])
            (1856351 'move' _iterator[1856338](1856354 call _getIterator[1108182] call_tmp[1856340]))
            {
              val ret[1856357]:_ir_chpl_bytes__ref_string[1108173] "dead at end of block" "RVV" "temp"
              const-val call_tmp[1856359]:string[26] "dead at end of block" "maybe param" "temp"
              const-val ret_tmp[1856361]:string[26] "temp"
              ref this[1856363]:_ref(string)[937850] "temp"
              (1856365 'move' this[1856363](1856367 '.v' _iterator[1856338] F0_this[1948187]))
              (1856371 call localize[32886] this[1856363] ret_tmp[1856361])
              (1856374 'move' call_tmp[1856359] ret_tmp[1856361])
              val localThis[1856377]:string[26] "dead at end of block" "insert auto destroy"
              (1856379 'move' localThis[1856377] call_tmp[1856359])
              val _indexOfInterest[1856382]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[1856384]:_ic_chpl_direct_counted_range_iter[1103701] "dead at end of block" "expr temp" "temp"
              ref call_tmp[1856386]:_ref(int(64))[936483] "dead at end of block" "maybe param" "temp"
              (1856388 'move' call_tmp[1856386](1856391 call buffLen[757797] localThis[1856377]))
              const-val call_tmp[1856393]:_ir_chpl_direct_counted_range_iter[1103707] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1856395]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1856397 'move' coerce_tmp[1856395](1856399 'deref' call_tmp[1856386]))
              const-val ret_tmp[1856401]:_ir_chpl_direct_counted_range_iter[1103707] "temp"
              (1856404 call chpl_direct_counted_range_iter[457907] 0 coerce_tmp[1856395] ret_tmp[1856401])
              (1856408 'move' call_tmp[1856393] ret_tmp[1856401])
              (1856411 'move' _iterator[1856384](1856414 call _getIterator[1103716] call_tmp[1856393]))
              {
                val ret[1856417]:_ir_chpl_direct_counted_range_iter[1103707] "dead after last mention" "RVV" "temp"
                val _indexOfInterest[1856419]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1856421]:_ic_chpl_direct_counted_range_iter_helper[1103451] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[1856423]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[1856425]:_ir_chpl_direct_counted_range_iter_helper[1103457] "temp"
                const-val low[1856427]:int(64)[13] "temp"
                (1856429 'move' low[1856427](1856431 '.v' _iterator[1856384] F0_low[1960165]))
                const-val count[1856434]:int(64)[13] "temp"
                (1856436 'move' count[1856434](1856438 '.v' _iterator[1856384] F1_count[1960169]))
                (1856442 call chpl_direct_counted_range_iter_helper[1102009] low[1856427] count[1856434] ret_tmp[1856425])
                (1856446 'move' call_tmp[1856423] ret_tmp[1856425])
                (1856449 'move' _iterator[1856421](1856452 call _getIterator[1103466] call_tmp[1856423]))
                {
                  val ret[1913456]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead after last mention" "RVV" "temp"
                  val call_tmp[1913458]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val tmp[1913460]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  const-val tmp[1913462]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  const-val call_tmp[1913464]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val count[1913940]:int(64)[13] "temp"
                  (1913945 'move' count[1913940](1913942 '.v' _iterator[1856421] F1_count[1964641]))
                  (1913466 'move' call_tmp[1913464](1913469 call <[948309] count[1913940]))
                  (1913471 'move' tmp[1913462] call_tmp[1913464])
                  (1913474 'move' tmp[1913460] call_tmp[1913464])
                  const-val call_tmp[1913477]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1913479 'move' call_tmp[1913477] call_tmp[1913464])
                  if call_tmp[1913464]
                  {
                    (1913485 call boundsCheckHalt[210079] "With a negative count, the range must have a last index.")
                  }
                  const-val tmp[1913488]:2*int(64)[1039967] "dead at end of block" "const" "insert auto destroy" "temp"
                  val tmp[1913490]:2*int(64)[1039967] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                  const-val tmp[1913492]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[1913494]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val count[1913947]:int(64)[13] "temp"
                  (1913952 'move' count[1913947](1913949 '.v' _iterator[1856421] F1_count[1964641]))
                  (1913496 'move' call_tmp[1913494](1913499 call ==[435539] count[1913947] 0))
                  (1913502 'move' tmp[1913492] call_tmp[1913494])
                  if call_tmp[1913494]
                  {
                    const-val tmp[1913507]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                    val call_tmp[1913509]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                    const-val call_tmp[1913511]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val low[1913954]:int(64)[13] "temp"
                    (1913959 'move' low[1913954](1913956 '.v' _iterator[1856421] F0_low[1964637]))
                    (1913513 'move' call_tmp[1913511](1913516 call _cast[955945] low[1913954]))
                    const-val call_tmp[1913518]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1913520]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (1913522 'move' coerce_tmp[1913520](1913524 'cast' uint(64)[115] 1))
                    (1913527 'move' call_tmp[1913518](1913530 call -[962104] call_tmp[1913511]))
                    const-val call_tmp[1913532]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                    (1913534 'move' call_tmp[1913532](1913537 call _cast[953454] call_tmp[1913518]))
                    const-val ret_tmp[1913539]:2*int(64)[1039967] "temp"
                    const-val low[1913961]:int(64)[13] "temp"
                    (1913966 'move' low[1913961](1913963 '.v' _iterator[1856421] F0_low[1964637]))
                    (1913542 call _build_tuple[1039925] low[1913961] call_tmp[1913532] ret_tmp[1913539])
                    (1913546 'move' tmp[1913507] ret_tmp[1913539])
                    (1913549 'move' tmp[1913490] tmp[1913507])
                  }
                  {
                    const-val tmp[1913553]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                    val call_tmp[1913555]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    const-val call_tmp[1913557]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val count[1913968]:int(64)[13] "temp"
                    (1913973 'move' count[1913968](1913970 '.v' _iterator[1856421] F1_count[1964641]))
                    (1913559 'move' call_tmp[1913557] count[1913968])
                    const-val call_tmp[1913562]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val count[1913975]:int(64)[13] "temp"
                    (1913980 'move' count[1913975](1913977 '.v' _iterator[1856421] F1_count[1964641]))
                    (1913564 'move' call_tmp[1913562](1913567 call -[962137] count[1913975]))
                    const-val call_tmp[1913569]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val low[1913982]:int(64)[13] "temp"
                    (1913987 'move' low[1913982](1913984 '.v' _iterator[1856421] F0_low[1964637]))
                    (1913571 'move' call_tmp[1913569](1913574 call +[439547] low[1913982] call_tmp[1913562]))
                    const-val ret_tmp[1913577]:2*int(64)[1039967] "temp"
                    const-val low[1913989]:int(64)[13] "temp"
                    (1913994 'move' low[1913989](1913991 '.v' _iterator[1856421] F0_low[1964637]))
                    (1913580 call _build_tuple[1039925] low[1913989] call_tmp[1913569] ret_tmp[1913577])
                    (1913584 'move' tmp[1913553] ret_tmp[1913577])
                    (1913587 'move' tmp[1913490] tmp[1913553])
                  }
                  (1913591 '=' tmp[1913488] tmp[1913490])
                  (1913594 'noop')
                  1
                  ref call_tmp[1913596]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
                  (1913598 'move' call_tmp[1913596](1913600 '.' tmp[1913488] x0[1039963]))
                  const-val start[1913603]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                  const-val coerce_tmp[1913605]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                  (1913607 'move' coerce_tmp[1913605](1913609 'deref' call_tmp[1913596]))
                  (1913611 '=' start[1913603] coerce_tmp[1913605])
                  (1913614 'noop')
                  ref call_tmp[1913615]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
                  (1913617 'move' call_tmp[1913615](1913619 '.' tmp[1913488] x1[1039965]))
                  const-val end[1913622]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                  const-val coerce_tmp[1913624]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                  (1913626 'move' coerce_tmp[1913624](1913628 'deref' call_tmp[1913615]))
                  (1913630 '=' end[1913622] coerce_tmp[1913624])
                  (1913633 'noop')
                  val _indexOfInterest[1913634]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                  val _iterator[1913636]:_ic_chpl_direct_param_stride_range_iter[1103197] "dead at end of block" "expr temp" "temp"
                  const-val call_tmp[1913638]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val ret_tmp[1913640]:_ir_chpl_direct_param_stride_range_iter[1103203] "temp"
                  (1913643 call chpl_direct_param_stride_range_iter[1102435] coerce_tmp[1913605] coerce_tmp[1913624] ret_tmp[1913640])
                  (1913647 'move' call_tmp[1913638] ret_tmp[1913640])
                  (1913650 'move' _iterator[1913636](1913653 call _getIterator[1103212] call_tmp[1913638]))
                  {
                    val ret[1913656]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead after last mention" "RVV" "temp"
                    val call_tmp[1913658]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    (1913661 call chpl_range_check_stride[1102755])
                    val i[1913662]:int(64)[13] "dead at end of block" "insert auto destroy"
                    val call_tmp[1913664]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    (1913666 'move' i[1913662] 0)
                    val call_tmp[1913669]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    const-val default_arg_first[1913671]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                    const-val low[1913673]:int(64)[13] "temp"
                    (1913675 'move' low[1913673](1913677 '.v' _iterator[1913636] F0_low[1966135]))
                    (1913680 'move' default_arg_first[1913671](1913683 call chpl_checkIfRangeIterWillOverflow_default_first[1103109] low[1913673]))
                    const-val default_arg_last[1913685]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                    const-val high[1913687]:int(64)[13] "temp"
                    (1913689 'move' high[1913687](1913691 '.v' _iterator[1913636] F1_high[1966139]))
                    (1913694 'move' default_arg_last[1913685](1913697 call chpl_checkIfRangeIterWillOverflow_default_last[1103137] high[1913687]))
                    const-val _return_tmp_[1913699]:bool[10] "dead after last mention" "temp"
                    const-val low[1913701]:int(64)[13] "temp"
                    (1913703 'move' low[1913701](1913705 '.v' _iterator[1913636] F0_low[1966135]))
                    const-val high[1913708]:int(64)[13] "temp"
                    (1913710 'move' high[1913708](1913712 '.v' _iterator[1913636] F1_high[1966139]))
                    (1913715 'move' _return_tmp_[1913699](1913718 call chpl_checkIfRangeIterWillOverflow[1095987] low[1913701] high[1913708] 1 default_arg_first[1913671] default_arg_last[1913685] 1))
                    CForLoop[1913725]
                    {
                      const-val yret[1913754]:int(64)[13] "dead after last mention" "YVV" "temp"
                      (1913756 'move' yret[1913754] i[1913662])
                      const-val _yieldedIndex[1913759]:int(64)[13] "temp"
                      (1913761 'move' _yieldedIndex[1913759] i[1913662])
                      {
                        const-val i[1913765]:int(64)[13] "const" "index var" "insert auto destroy"
                        (1913767 'move' i[1913765] _yieldedIndex[1913759])
                        const-val yret[1913770]:int(64)[13] "dead after last mention" "YVV" "temp"
                        (1913772 'move' yret[1913770] _yieldedIndex[1913759])
                        const-val _yieldedIndex[1913800]:int(64)[13] "temp"
                        (1913938 'move' _yieldedIndex[1913800] _yieldedIndex[1913759])
                        {
                          const-val i[1913802]:int(64)[13] "const" "index var" "insert auto destroy"
                          (1913804 'move' i[1913802] _yieldedIndex[1913800])
                          const-val yret[1913807]:int(64)[13] "dead after last mention" "YVV" "temp"
                          (1913809 'move' yret[1913807] _yieldedIndex[1913800])
                          const-val _yieldedIndex[1913812]:int(64)[13] "temp"
                          (1913814 'move' _yieldedIndex[1913812] _yieldedIndex[1913800])
                          {
                            const-val i[1913818]:int(64)[13] "const" "index var" "insert auto destroy"
                            (1913820 'move' i[1913818] _yieldedIndex[1913812])
                            const-val yret[1913823]:uint(8)[100] "dead after last mention" "YVV" "temp"
                            ref call_tmp[1913825]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
                            ref _this_tmp_[1913827]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "temp"
                            (1913829 'move' _this_tmp_[1913827](1913832 call buff[757875] localThis[1856377]))
                            val coerce_tmp[1913834]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1913836 'move' coerce_tmp[1913834](1913838 'deref' _this_tmp_[1913827]))
                            (1913840 'move' call_tmp[1913825](1913843 call this[954002] coerce_tmp[1913834] _yieldedIndex[1913812]))
                            const-val coerce_tmp[1913846]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                            (1913848 'move' coerce_tmp[1913846](1913850 'deref' call_tmp[1913825]))
                            (1913852 '=' yret[1913823] coerce_tmp[1913846])
                            (1913855 'noop')
                            const-val _yieldedIndex[1913856]:uint(8)[100] "temp"
                            (1913858 'move' _yieldedIndex[1913856] coerce_tmp[1913846])
                            {
                              const-val b[1913862]:uint(8)[100] "const" "index var" "insert auto destroy"
                              (1913864 'move' b[1913862] _yieldedIndex[1913856])
                              val yret[1913867]:int(32)[95] "dead after last mention" "YVV" "temp"
                              val call_tmp[1913869]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              const-val _yieldedIndex[1913871]:int(32)[95] "temp"
                              (1913873 'move' _yieldedIndex[1913871](1913875 'cast' int(32)[95] _yieldedIndex[1913856]))
                              {
                                const-val cp[1913879]:int(32)[95] "const" "index var" "insert auto destroy"
                                (1913881 'move' cp[1913879] _yieldedIndex[1913871])
                                {
                                  const-val call_tmp[1913885]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                  (1913887 'move' call_tmp[1913885](1913890 call codepoint_isWhitespace[39153] cp[1913879]))
                                  const-val call_tmp[1913892]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                  (1913894 'move' call_tmp[1913892](1913897 call ![7494] call_tmp[1913885]))
                                  const-val call_tmp[1913899]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                  (1913901 'move' call_tmp[1913899] call_tmp[1913892])
                                  if call_tmp[1913899]
                                  {
                                    (1913907 call =[435085] result[1765414] 0)
                                    (1913932 call _freeIterator[1103385] _iterator[1913636])
                                    (1913935 call chpl__autoDestroy[1567619] tmp[1913488])
                                    (1913911 call _freeIterator[1103635] _iterator[1856421])
                                    (1913914 call _freeIterator[1103885] _iterator[1856384])
                                    (1913917 call chpl__autoDestroy[1494420] localThis[1856377])
                                    (1913920 call _freeIterator[1109480] _iterator[1856338])
                                    (1913923 call chpl__autoDestroy[1494420] localThis[1856317])
                                    break _breakLabel[36913] _breakLabel[36913]
                                  }
                                }
                                label _continueLabel[1913928]
                              }
                            }
                          }
                        }
                      }
                      {
                        const-val low[1913727]:int(64)[13] "temp"
                        (1913729 'move' low[1913727](1913731 '.v' _iterator[1913636] F0_low[1966135]))
                        (1913734 '=' i[1913662] low[1913727])
                      }
                      {
                        const-val high[1913738]:int(64)[13] "temp"
                        (1913740 'move' high[1913738](1913742 '.v' _iterator[1913636] F1_high[1966139]))
                        (1913745 '<=' i[1913662] high[1913738])
                      }
                      {
                        val call_tmp[1913749]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                        (1913751 '+=' i[1913662] 1)
                      }
                    }
                    label _endchpl_direct_param_stride_range_iter[1913788]
                  }
                  (1913791 call _freeIterator[1103385] _iterator[1913636])
                  (1913794 call chpl__autoDestroy[1567619] tmp[1913488])
                  label _endchpl_direct_counted_range_iter_helper[1913796]
                }
                (1856554 call _freeIterator[1103635] _iterator[1856421])
                label _endchpl_direct_counted_range_iter[1856556]
              }
              (1856559 call _freeIterator[1103885] _iterator[1856384])
              (1856562 call chpl__autoDestroy[1494420] localThis[1856377])
              label _endchpl_bytes[1856564]
            }
            (1856567 call _freeIterator[1109480] _iterator[1856338])
          }
          {
            val i[1856570]:int(64)[13] "dead at end of block" "insert auto destroy"
            (1856572 'move' i[1856570] 0)
            val tmp[1856575]:bool[10] "dead after last mention" "temp"
            ref call_tmp[1856577]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
            (1856579 'move' call_tmp[1856577](1856582 call buffLen[757797] localThis[1856317]))
            const-val call_tmp[1856584]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[1856586]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1856588 'move' coerce_tmp[1856586](1856590 'deref' call_tmp[1856577]))
            (1856592 'move' call_tmp[1856584](1856595 call <[437363] 0 coerce_tmp[1856586]))
            (1856598 'move' tmp[1856575] call_tmp[1856584])
            WhileDo[1856601]
            {
              ref call_tmp[1856603]:_ref(c_ptr(uint(8)))[937343] "dead at end of block" "maybe param" "temp"
              (1856605 'move' call_tmp[1856603](1856608 call buff[757875] localThis[1856317]))
              ref call_tmp[1856610]:_ref(int(64))[936483] "dead at end of block" "maybe param" "temp"
              (1856612 'move' call_tmp[1856610](1856615 call buffLen[757797] localThis[1856317]))
              const-val call_tmp[1856617]:(syserr,int(32),int(32))[964531] "dead at end of block" "maybe param" "temp"
              val coerce_tmp[1856619]:c_ptr(uint(8))[937334] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1856621 'move' coerce_tmp[1856619](1856623 'deref' call_tmp[1856603]))
              const-val coerce_tmp[1856625]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1856627 'move' coerce_tmp[1856625](1856629 'deref' call_tmp[1856610]))
              const-val ret_tmp[1856631]:(syserr,int(32),int(32))[964531] "temp"
              (1856634 call decodeHelp[174406] coerce_tmp[1856619] coerce_tmp[1856625] i[1856570] 1 ret_tmp[1856631])
              (1856640 'move' call_tmp[1856617] ret_tmp[1856631])
              const-val tmp[1856643]:(syserr,int(32),int(32))[964531] "dead at end of block" "const" "insert auto destroy" "temp"
              (1856645 'move' tmp[1856643] call_tmp[1856617])
              1
              ref call_tmp[1856649]:_ref(syserr)[948743] "dead at end of block" "maybe param" "reference to a const" "temp"
              (1856651 'move' call_tmp[1856649](1856653 '.' tmp[1856643] x0[964525]))
              const-val decodeRet[1856656]:syserr[223496] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[1856658]:syserr[223496] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1856660 'move' coerce_tmp[1856658](1856662 'deref' call_tmp[1856649]))
              (1856664 'move' decodeRet[1856656](1856667 call chpl__initCopy[964396] coerce_tmp[1856658]))
              ref call_tmp[1856669]:_ref(int(32))[936537] "dead at end of block" "maybe param" "reference to a const" "temp"
              (1856671 'move' call_tmp[1856669](1856673 '.' tmp[1856643] x1[964527]))
              const-val cp[1856676]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[1856678]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1856680 'move' coerce_tmp[1856678](1856682 'deref' call_tmp[1856669]))
              (1856684 'move' cp[1856676](1856687 call chpl__initCopy[964668] coerce_tmp[1856678]))
              ref call_tmp[1856689]:_ref(int(32))[936537] "dead at end of block" "maybe param" "reference to a const" "temp"
              (1856691 'move' call_tmp[1856689](1856693 '.' tmp[1856643] x2[964529]))
              const-val nBytes[1856696]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[1856698]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1856700 'move' coerce_tmp[1856698](1856702 'deref' call_tmp[1856689]))
              (1856704 'move' nBytes[1856696](1856707 call chpl__initCopy[964668] coerce_tmp[1856698]))
              const-val yret[1856709]:int(32)[95] "dead after last mention" "YVV" "temp"
              val call_tmp[1856711]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (1856713 'move' yret[1856709] cp[1856676])
              const-val _yieldedIndex[1856830]:int(32)[95] "temp"
              (1856876 'move' _yieldedIndex[1856830] cp[1856676])
              {
                const-val cp[1856832]:int(32)[95] "const" "index var" "insert auto destroy"
                (1856834 'move' cp[1856832] _yieldedIndex[1856830])
                {
                  const-val call_tmp[1856838]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1856840 'move' call_tmp[1856838](1856843 call codepoint_isWhitespace[39153] cp[1856832]))
                  const-val call_tmp[1856845]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1856847 'move' call_tmp[1856845](1856850 call ![7494] call_tmp[1856838]))
                  const-val call_tmp[1856852]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1856854 'move' call_tmp[1856852] call_tmp[1856845])
                  if call_tmp[1856852]
                  {
                    (1856860 call =[435085] result[1765414] 0)
                    (1856870 call chpl__autoDestroy[1498323] tmp[1856643])
                    (1856873 call chpl__autoDestroy[1494420] localThis[1856317])
                    break _breakLabel[36913] _breakLabel[36913]
                  }
                }
                label _continueLabel[1856866]
              }
              const-val coerce_tmp[1856729]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1856731 'move' coerce_tmp[1856729](1856733 'cast' int(64)[13] nBytes[1856696]))
              (1856737 call +=[451226] i[1856570] coerce_tmp[1856729])
              (1856741 call chpl__autoDestroy[1498323] tmp[1856643])
              ref call_tmp[1856743]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
              (1856745 'move' call_tmp[1856743](1856748 call buffLen[757797] localThis[1856317]))
              const-val call_tmp[1856750]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1856752]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1856754 'move' coerce_tmp[1856752](1856756 'deref' call_tmp[1856743]))
              (1856758 'move' call_tmp[1856750](1856761 call <[437363] i[1856570] coerce_tmp[1856752]))
              (1856764 'move' tmp[1856575] call_tmp[1856750])
              tmp[1856575]
            }
          }
          (1856769 call chpl__autoDestroy[1494420] localThis[1856317])
          label _endcodepoints[1856771]
        }
        label _breakLabel[36913]
        (1799161 call _freeIterator[1123047] _iterator[36908])
      }
    }
    (933740 return _void[55])
  }
  function chpl_enc_validate_buf[986648](const in arg buf[986650]:c_ptr(uint(8))[937334], const in arg len[986652]:int(64)[13], ref arg numCodepoints[986654]:_ref(int(64))[936483]) : int(32)[95] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "resolved" "no return value for void"
  {
    val ret[986658]:int(32)[95] "RVV" "temp"
    (986670 return ret[986658])
  }
  function on_fn[1106093](const in arg needle[1765666]:__serializeHelper[28086], const  ref arg this[1765668]:_ref(string)[937850], const in arg region[1765670]:range(byteIndex,bounded,false)[1025703], ref arg ret[1765672]:_ref(int(64))[936483]) : void[4] "on" "resolved"
  {
    val needle[2032674]:string[26] "temp"
    ref needle[2032675]:string[26] "temp"
    ref tmp[2032681]:string[26] "temp"
    (2032685 'move' tmp[2032681](2032683 'set reference' needle[2032674]))
    (2032678 call chpl__deserialize[1751162] needle[1765666] tmp[2032681])
    (2032690 'move' needle[2032675](2032688 'set reference' needle[2032674]))
    {
      val localRet[1106106]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1106108 'move' localRet[1106106] -2)
      ref call_tmp[1106113]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1106115 'move' call_tmp[1106113](1106118 call buffLen[757797] needle[2032675]))
      const-val nLen[1106121]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1107274]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1107278 'move' coerce_tmp[1107274](1107276 'deref' call_tmp[1106113]))
      (1800876 '=' nLen[1106121] coerce_tmp[1107274])
      (1106123 'noop')
      const-val call_tmp[1106127]:(range(int(64),bounded,false),int(64))[1084835] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1789527]:(range(int(64),bounded,false),int(64))[1084835] "temp"
      (1106132 call getView[1031065] this[1765668] region[1765670] ret_tmp[1789527])
      (1789530 'move' call_tmp[1106127] ret_tmp[1789527])
      const-val tmp[1106135]:(range(int(64),bounded,false),int(64))[1084835] "dead at end of block" "const" "insert auto destroy" "temp"
      (1106137 'move' tmp[1106135] call_tmp[1106127])
      1
      ref call_tmp[1106145]:_ref(range(int(64),bounded,false))[1026769] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1106147 'move' call_tmp[1106145](1107289 '.' tmp[1106135] x0[1084831]))
      const-val view[1106152]:range(int(64),bounded,false)[1026725] "dead at end of block" "const" "insert auto destroy"
      (1106154 'move' view[1106152](1107292 'deref' call_tmp[1106145]))
      const-val call_tmp[1106158]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (1106160 'move' call_tmp[1106158](1106163 call size[1035700] view[1106152]))
      const-val thisLen[1106166]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      (1106168 'move' thisLen[1106166] call_tmp[1106158])
      {
        const-val call_tmp[1106611]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1106613 'move' call_tmp[1106611](1106616 call ==[435539] nLen[1106121] 0))
        const-val call_tmp[1106619]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1106621 'move' call_tmp[1106619] call_tmp[1106611])
        if call_tmp[1106619]
        {
          {
            (1106645 call =[435238] localRet[1106106] -1)
          }
        }
      }
      const-val call_tmp[1106700]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1106702 'move' call_tmp[1106700](1106705 call >[437583] nLen[1106121] thisLen[1106166]))
      const-val call_tmp[1106708]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1106710 'move' call_tmp[1106708] call_tmp[1106700])
      if call_tmp[1106708]
      {
        (1106725 call =[435238] localRet[1106106] -1)
      }
      const-val call_tmp[1106738]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1106740 'move' call_tmp[1106738](1106743 call ==[435539] localRet[1106106] -2))
      const-val call_tmp[1106746]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1106748 'move' call_tmp[1106746] call_tmp[1106738])
      if call_tmp[1106746]
      {
        (1106763 call =[435238] localRet[1106106] -1)
        const-val call_tmp[1106768]:string[26] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1786427]:string[26] "temp"
        (1106776 call localize[32886] needle[2032675] ret_tmp[1786427])
        (1786430 'move' call_tmp[1106768] ret_tmp[1786427])
        const localNeedle[1106777]:string[26] "dead at end of block" "const" "insert auto destroy"
        (1106779 'move' localNeedle[1106777] call_tmp[1106768])
        const-val call_tmp[1106784]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1106786 'move' call_tmp[1106784](1106789 call -[440327] thisLen[1106166] nLen[1106121]))
        const-val call_tmp[1106792]:int(64)[13] "dead at end of block" "maybe param" "temp"
        (1106794 'move' call_tmp[1106792](1106797 call +[949577] call_tmp[1106784]))
        const-val numPossible[1106800]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        (1106802 'move' numPossible[1106800] call_tmp[1106792])
        const-val searchSpace[1106806]:range(int(64),bounded,false)[1026725] "dead at end of block" "const" "insert auto destroy"
        const-val tmp[1106808]:range(int(64),bounded,false)[1026725] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val tmp[1106819]:range(int(64),bounded,false)[1026725] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1106821]:range(int(64),boundedLow,false)[1087476] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1790359]:range(int(64),boundedLow,false)[1087476] "temp"
        (1106826 call chpl_build_low_bounded_range[1086869] 0 ret_tmp[1790359])
        (1790362 'move' call_tmp[1106821] ret_tmp[1790359])
        const-val ret_tmp[1790473]:range(int(64),bounded,false)[1026725] "temp"
        (1106831 call #[1087836] call_tmp[1106821] numPossible[1106800] ret_tmp[1790473])
        (1790476 'move' tmp[1106819] ret_tmp[1790473])
        (1106834 'move' tmp[1106808] tmp[1106819])
        (1106876 'move' searchSpace[1106806] tmp[1106808])
        {
          val _indexOfInterest[1106885]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1106887]:_ic_these_range_int64_t_bounded_F[1096614] "dead at end of block" "expr temp" "temp"
          (1106889 'move' _iterator[1106887](1106892 call _getIterator[1095231] searchSpace[1106806]))
          {
            val ret[1864412]:_ir_these_range_int64_t_bounded_F[1096620] "dead after last mention" "RVV" "temp"
            const-val _return_tmp_[1864414]:bool[10] "dead after last mention" "temp"
            const-val this[1864715]:range(int(64),bounded,false)[1026725] "temp"
            (1864720 'move' this[1864715](1864717 '.v' _iterator[1106887] F0_this[1964014]))
            (1864416 'move' _return_tmp_[1864414](1864419 call checkIfIterWillOverflow[1095725] this[1864715] 1))
            val i[1864422]:int(64)[13] "dead at end of block" "insert auto destroy"
            val call_tmp[1864424]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (1864426 'move' i[1864422] 0)
            ref call_tmp[1864429]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[1864722]:range(int(64),bounded,false)[1026725] "temp"
            (1864727 'move' this[1864722](1864724 '.v' _iterator[1106887] F0_this[1964014]))
            (1864431 'move' call_tmp[1864429](1864434 call _low[1028363] this[1864722]))
            const-val start[1864436]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1864438]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1864440 'move' coerce_tmp[1864438](1864442 'deref' call_tmp[1864429]))
            (1864444 '=' start[1864436] coerce_tmp[1864438])
            (1864447 'noop')
            ref call_tmp[1864448]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[1864729]:range(int(64),bounded,false)[1026725] "temp"
            (1864734 'move' this[1864729](1864731 '.v' _iterator[1106887] F0_this[1964014]))
            (1864450 'move' call_tmp[1864448](1864453 call _high[1028571] this[1864729]))
            const end[1864455]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1864457]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1864459 'move' coerce_tmp[1864457](1864461 'deref' call_tmp[1864448]))
            (1864463 '=' end[1864455] coerce_tmp[1864457])
            (1864466 'noop')
            CForLoop[1864467] hazard
            {
              const-val yret[1864482]:int(64)[13] "dead after last mention" "YVV" "temp"
              const-val call_tmp[1864484]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val this[1864736]:range(int(64),bounded,false)[1026725] "temp"
              (1864741 'move' this[1864736](1864738 '.v' _iterator[1106887] F0_this[1964014]))
              (1864486 'move' call_tmp[1864484](1864489 call chpl_intToIdx[1028391] this[1864736] i[1864422]))
              (1864492 'move' yret[1864482] call_tmp[1864484])
              const-val _yieldedIndex[1864506]:int(64)[13] "temp"
              (1864713 'move' _yieldedIndex[1864506] call_tmp[1864484])
              {
                const-val i[1864508]:int(64)[13] "const" "index var" "insert auto destroy"
                (1864510 'move' i[1864508] _yieldedIndex[1864506])
                {
                  {
                    val _indexOfInterest[1864515]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[1864517]:_ic_chpl_direct_counted_range_iter[1103701] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[1864519]:_ir_chpl_direct_counted_range_iter[1103707] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[1864521]:_ir_chpl_direct_counted_range_iter[1103707] "temp"
                    (1864524 call chpl_direct_counted_range_iter[457907] 0 nLen[1106121] ret_tmp[1864521])
                    (1864528 'move' call_tmp[1864519] ret_tmp[1864521])
                    (1864531 'move' _iterator[1864517](1864534 call _getIterator[1103716] call_tmp[1864519]))
                    {
                      val ret[1922274]:_ir_chpl_direct_counted_range_iter[1103707] "dead after last mention" "RVV" "temp"
                      val _indexOfInterest[1922276]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1922278]:_ic_chpl_direct_counted_range_iter_helper[1103451] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1922280]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1922282]:_ir_chpl_direct_counted_range_iter_helper[1103457] "temp"
                      const-val low[1922874]:int(64)[13] "temp"
                      (1922879 'move' low[1922874](1922876 '.v' _iterator[1864517] F0_low[1960165]))
                      const-val count[1922881]:int(64)[13] "temp"
                      (1922886 'move' count[1922881](1922883 '.v' _iterator[1864517] F1_count[1960169]))
                      (1922285 call chpl_direct_counted_range_iter_helper[1102009] low[1922874] count[1922881] ret_tmp[1922282])
                      (1922289 'move' call_tmp[1922280] ret_tmp[1922282])
                      (1922292 'move' _iterator[1922278](1922295 call _getIterator[1103466] call_tmp[1922280]))
                      {
                        val ret[1922298]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead after last mention" "RVV" "temp"
                        val call_tmp[1922300]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                        const-val tmp[1922302]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val tmp[1922304]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                        const-val call_tmp[1922306]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[1922308]:int(64)[13] "temp"
                        (1922310 'move' count[1922308](1922312 '.v' _iterator[1922278] F1_count[1964641]))
                        (1922315 'move' call_tmp[1922306](1922318 call <[948309] count[1922308]))
                        (1922320 'move' tmp[1922304] call_tmp[1922306])
                        (1922323 'move' tmp[1922302] call_tmp[1922306])
                        const-val call_tmp[1922326]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1922328 'move' call_tmp[1922326] call_tmp[1922306])
                        if call_tmp[1922306]
                        {
                          (1922334 call boundsCheckHalt[210079] "With a negative count, the range must have a last index.")
                        }
                        const-val tmp[1922337]:2*int(64)[1039967] "dead at end of block" "const" "insert auto destroy" "temp"
                        val tmp[1922339]:2*int(64)[1039967] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                        const-val tmp[1922341]:bool[10] "dead after last mention" "maybe param" "temp"
                        const-val call_tmp[1922343]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[1922345]:int(64)[13] "temp"
                        (1922347 'move' count[1922345](1922349 '.v' _iterator[1922278] F1_count[1964641]))
                        (1922352 'move' call_tmp[1922343](1922355 call ==[435539] count[1922345] 0))
                        (1922358 'move' tmp[1922341] call_tmp[1922343])
                        if call_tmp[1922343]
                        {
                          const-val tmp[1922363]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                          val call_tmp[1922365]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[1922367]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val low[1922369]:int(64)[13] "temp"
                          (1922371 'move' low[1922369](1922373 '.v' _iterator[1922278] F0_low[1964637]))
                          (1922376 'move' call_tmp[1922367](1922379 call _cast[955945] low[1922369]))
                          const-val call_tmp[1922381]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[1922383]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                          (1922385 'move' coerce_tmp[1922383](1922387 'cast' uint(64)[115] 1))
                          (1922390 'move' call_tmp[1922381](1922393 call -[962104] call_tmp[1922367]))
                          const-val call_tmp[1922395]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          (1922397 'move' call_tmp[1922395](1922400 call _cast[953454] call_tmp[1922381]))
                          const-val ret_tmp[1922402]:2*int(64)[1039967] "temp"
                          const-val low[1922404]:int(64)[13] "temp"
                          (1922406 'move' low[1922404](1922408 '.v' _iterator[1922278] F0_low[1964637]))
                          (1922412 call _build_tuple[1039925] low[1922404] call_tmp[1922395] ret_tmp[1922402])
                          (1922416 'move' tmp[1922363] ret_tmp[1922402])
                          (1922419 'move' tmp[1922339] tmp[1922363])
                        }
                        {
                          const-val tmp[1922423]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                          val call_tmp[1922425]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[1922427]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val count[1922429]:int(64)[13] "temp"
                          (1922431 'move' count[1922429](1922433 '.v' _iterator[1922278] F1_count[1964641]))
                          (1922436 'move' call_tmp[1922427] count[1922429])
                          const-val call_tmp[1922439]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val count[1922441]:int(64)[13] "temp"
                          (1922443 'move' count[1922441](1922445 '.v' _iterator[1922278] F1_count[1964641]))
                          (1922448 'move' call_tmp[1922439](1922451 call -[962137] count[1922441]))
                          const-val call_tmp[1922453]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val low[1922455]:int(64)[13] "temp"
                          (1922457 'move' low[1922455](1922459 '.v' _iterator[1922278] F0_low[1964637]))
                          (1922462 'move' call_tmp[1922453](1922465 call +[439547] low[1922455] call_tmp[1922439]))
                          const-val ret_tmp[1922468]:2*int(64)[1039967] "temp"
                          const-val low[1922470]:int(64)[13] "temp"
                          (1922472 'move' low[1922470](1922474 '.v' _iterator[1922278] F0_low[1964637]))
                          (1922478 call _build_tuple[1039925] low[1922470] call_tmp[1922453] ret_tmp[1922468])
                          (1922482 'move' tmp[1922423] ret_tmp[1922468])
                          (1922485 'move' tmp[1922339] tmp[1922423])
                        }
                        (1922489 '=' tmp[1922337] tmp[1922339])
                        (1922492 'noop')
                        1
                        ref call_tmp[1922494]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
                        (1922496 'move' call_tmp[1922494](1922498 '.' tmp[1922337] x0[1039963]))
                        const-val start[1922501]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                        const-val coerce_tmp[1922503]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                        (1922505 'move' coerce_tmp[1922503](1922507 'deref' call_tmp[1922494]))
                        (1922509 '=' start[1922501] coerce_tmp[1922503])
                        (1922512 'noop')
                        ref call_tmp[1922513]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
                        (1922515 'move' call_tmp[1922513](1922517 '.' tmp[1922337] x1[1039965]))
                        const-val end[1922520]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                        const-val coerce_tmp[1922522]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                        (1922524 'move' coerce_tmp[1922522](1922526 'deref' call_tmp[1922513]))
                        (1922528 '=' end[1922520] coerce_tmp[1922522])
                        (1922531 'noop')
                        val _indexOfInterest[1922532]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[1922534]:_ic_chpl_direct_param_stride_range_iter[1103197] "dead at end of block" "expr temp" "temp"
                        const-val call_tmp[1922536]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead at end of block" "expr temp" "maybe param" "temp"
                        const-val ret_tmp[1922538]:_ir_chpl_direct_param_stride_range_iter[1103203] "temp"
                        (1922541 call chpl_direct_param_stride_range_iter[1102435] coerce_tmp[1922503] coerce_tmp[1922522] ret_tmp[1922538])
                        (1922545 'move' call_tmp[1922536] ret_tmp[1922538])
                        (1922548 'move' _iterator[1922534](1922551 call _getIterator[1103212] call_tmp[1922536]))
                        {
                          val ret[1922554]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead after last mention" "RVV" "temp"
                          val call_tmp[1922556]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (1922559 call chpl_range_check_stride[1102755])
                          val i[1922560]:int(64)[13] "dead at end of block" "insert auto destroy"
                          val call_tmp[1922562]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (1922564 'move' i[1922560] 0)
                          val call_tmp[1922567]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val default_arg_first[1922569]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val low[1922571]:int(64)[13] "temp"
                          (1922573 'move' low[1922571](1922575 '.v' _iterator[1922534] F0_low[1966135]))
                          (1922578 'move' default_arg_first[1922569](1922581 call chpl_checkIfRangeIterWillOverflow_default_first[1103109] low[1922571]))
                          const-val default_arg_last[1922583]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val high[1922585]:int(64)[13] "temp"
                          (1922587 'move' high[1922585](1922589 '.v' _iterator[1922534] F1_high[1966139]))
                          (1922592 'move' default_arg_last[1922583](1922595 call chpl_checkIfRangeIterWillOverflow_default_last[1103137] high[1922585]))
                          const-val _return_tmp_[1922597]:bool[10] "dead after last mention" "temp"
                          const-val low[1922599]:int(64)[13] "temp"
                          (1922601 'move' low[1922599](1922603 '.v' _iterator[1922534] F0_low[1966135]))
                          const-val high[1922606]:int(64)[13] "temp"
                          (1922608 'move' high[1922606](1922610 '.v' _iterator[1922534] F1_high[1966139]))
                          (1922613 'move' _return_tmp_[1922597](1922616 call chpl_checkIfRangeIterWillOverflow[1095987] low[1922599] high[1922606] 1 default_arg_first[1922569] default_arg_last[1922583] 1))
                          CForLoop[1922623]
                          {
                            const-val yret[1922652]:int(64)[13] "dead after last mention" "YVV" "temp"
                            (1922654 'move' yret[1922652] i[1922560])
                            const-val _yieldedIndex[1922657]:int(64)[13] "temp"
                            (1922659 'move' _yieldedIndex[1922657] i[1922560])
                            {
                              const-val i[1922663]:int(64)[13] "const" "index var" "insert auto destroy"
                              (1922665 'move' i[1922663] _yieldedIndex[1922657])
                              const-val yret[1922668]:int(64)[13] "dead after last mention" "YVV" "temp"
                              (1922670 'move' yret[1922668] _yieldedIndex[1922657])
                              const-val _yieldedIndex[1922673]:int(64)[13] "temp"
                              (1922675 'move' _yieldedIndex[1922673] _yieldedIndex[1922657])
                              {
                                const-val i[1922679]:int(64)[13] "const" "index var" "insert auto destroy"
                                (1922681 'move' i[1922679] _yieldedIndex[1922673])
                                const-val yret[1922684]:int(64)[13] "dead after last mention" "YVV" "temp"
                                (1922686 'move' yret[1922684] _yieldedIndex[1922673])
                                const-val _yieldedIndex[1922722]:int(64)[13] "temp"
                                (1922872 'move' _yieldedIndex[1922722] _yieldedIndex[1922673])
                                {
                                  const-val j[1922724]:int(64)[13] "const" "index var" "insert auto destroy"
                                  (1922726 'move' j[1922724] _yieldedIndex[1922722])
                                  {
                                    const-val call_tmp[1922730]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                    (1922732 'move' call_tmp[1922730](1922735 call +[439547] i[1864508] j[1922724]))
                                    const-val call_tmp[1922738]:int(64)[13] "dead at end of block" "maybe param" "temp"
                                    (1922740 'move' call_tmp[1922738](1922743 call orderToIndex[1103951] view[1106152] call_tmp[1922730]))
                                    const-val idx[1922746]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                    (1922748 'move' idx[1922746] call_tmp[1922738])
                                    ref call_tmp[1922751]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
                                    ref _this_tmp_[1922753]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "temp"
                                    (1922755 'move' _this_tmp_[1922753](1922758 call buff[757875] this[1765668]))
                                    val coerce_tmp[1922760]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1922762 'move' coerce_tmp[1922760](1922764 'deref' _this_tmp_[1922753]))
                                    (1922766 'move' call_tmp[1922751](1922769 call this[954002] coerce_tmp[1922760] idx[1922746]))
                                    ref call_tmp[1922772]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
                                    ref _this_tmp_[1922774]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "reference to a const" "temp"
                                    (1922776 'move' _this_tmp_[1922774](1922779 call buff[757875] localNeedle[1106777]))
                                    val coerce_tmp[1922781]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1922783 'move' coerce_tmp[1922781](1922785 'deref' _this_tmp_[1922774]))
                                    (1922787 'move' call_tmp[1922772](1922790 call this[954002] coerce_tmp[1922781] j[1922724]))
                                    const-val call_tmp[1922793]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    const-val coerce_tmp[1922795]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1922797 'move' coerce_tmp[1922795](1922799 'deref' call_tmp[1922751]))
                                    const-val coerce_tmp[1922801]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1922803 'move' coerce_tmp[1922801](1922805 'deref' call_tmp[1922772]))
                                    (1922807 'move' call_tmp[1922793](1922810 call !=[435945] coerce_tmp[1922795] coerce_tmp[1922801]))
                                    const-val call_tmp[1922813]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1922815 'move' call_tmp[1922813] call_tmp[1922793])
                                    if call_tmp[1922813]
                                    {
                                      (1922863 call _freeIterator[1103385] _iterator[1922534])
                                      (1922866 call chpl__autoDestroy[1567619] tmp[1922337])
                                      (1922869 call _freeIterator[1103635] _iterator[1922278])
                                      break _breakLabel[1864676] _breakLabel[1864676]
                                    }
                                    const-val call_tmp[1922823]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1922825 'move' call_tmp[1922823](1922828 call -[962137] nLen[1106121]))
                                    const-val call_tmp[1922830]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1922832 'move' call_tmp[1922830](1922835 call ==[435539] j[1922724] call_tmp[1922823]))
                                    const-val call_tmp[1922838]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1922840 'move' call_tmp[1922838] call_tmp[1922830])
                                    if call_tmp[1922838]
                                    {
                                      {
                                        const-val call_tmp[1922846]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                        (1922848 'move' call_tmp[1922846](1922851 call orderToIndex[1103951] view[1106152] i[1864508]))
                                        (1922855 call =[435238] localRet[1106106] call_tmp[1922846])
                                      }
                                    }
                                  }
                                  label _continueLabel[1922859]
                                }
                              }
                            }
                            {
                              const-val low[1922625]:int(64)[13] "temp"
                              (1922627 'move' low[1922625](1922629 '.v' _iterator[1922534] F0_low[1966135]))
                              (1922632 '=' i[1922560] low[1922625])
                            }
                            {
                              const-val high[1922636]:int(64)[13] "temp"
                              (1922638 'move' high[1922636](1922640 '.v' _iterator[1922534] F1_high[1966139]))
                              (1922643 '<=' i[1922560] high[1922636])
                            }
                            {
                              val call_tmp[1922647]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              (1922649 '+=' i[1922560] 1)
                            }
                          }
                          label _endchpl_direct_param_stride_range_iter[1922705]
                        }
                        (1922708 call _freeIterator[1103385] _iterator[1922534])
                        (1922711 call chpl__autoDestroy[1567619] tmp[1922337])
                        label _endchpl_direct_counted_range_iter_helper[1922713]
                      }
                      (1922716 call _freeIterator[1103635] _iterator[1922278])
                      label _endchpl_direct_counted_range_iter[1922718]
                    }
                    label _breakLabel[1864676]
                    (1864679 call _freeIterator[1103885] _iterator[1864517])
                  }
                  const-val tmp[1864681]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  const-val tmp[1864683]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  const-val call_tmp[1864685]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1864687 'move' call_tmp[1864685](1864690 call !=[435923] localRet[1106106] -1))
                  (1864693 'move' tmp[1864683] call_tmp[1864685])
                  (1864696 'move' tmp[1864681] tmp[1864683])
                  const-val call_tmp[1864699]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1864701 'move' call_tmp[1864699] tmp[1864681])
                  if call_tmp[1864699]
                  {
                    break _breakLabel[1107176] _breakLabel[1107176]
                  }
                }
                label _continueLabel[1864709]
              }
              {
                (1864469 '=' i[1864422] coerce_tmp[1864438])
              }
              {
                (1864473 '<=' i[1864422] end[1864455])
              }
              {
                val call_tmp[1864477]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1864479 '+=' i[1864422] 1)
              }
            }
            label _endthese[1864502]
          }
          label _breakLabel[1107176]
          (1800887 call _freeIterator[1101917] _iterator[1106887])
        }
        (1800890 call chpl__autoDestroy[1567322] searchSpace[1106806])
        (1800893 call chpl__autoDestroy[1573691] call_tmp[1106821])
        (1800896 call chpl__autoDestroy[1494420] localNeedle[1106777])
      }
      (1107196 call =[435238] ret[1765672] localRet[1106106])
      (1800900 call chpl__autoDestroy[1567322] view[1106152])
      (1800903 call chpl__autoDestroy[1573646] tmp[1106135])
    }
    (2032692 call chpl__autoDestroy[1494607] needle[1765666])
    (2032695 call chpl__autoDestroy[1494420] needle[2032674])
    (1107202 return _void[55])
  }
  function on_fn[1182789](const in arg needle[1765706]:__serializeHelper[28086], const  ref arg this[1765708]:_ref(string)[937850], const in arg region[1765710]:range(byteIndex,boundedLow,false)[1143314], ref arg ret[1765712]:_ref(int(64))[936483]) : void[4] "on" "resolved"
  {
    val needle[2032930]:string[26] "temp"
    ref needle[2032931]:string[26] "temp"
    ref tmp[2032937]:string[26] "temp"
    (2032941 'move' tmp[2032937](2032939 'set reference' needle[2032930]))
    (2032934 call chpl__deserialize[1751162] needle[1765706] tmp[2032937])
    (2032946 'move' needle[2032931](2032944 'set reference' needle[2032930]))
    {
      val localRet[1182802]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1182804 'move' localRet[1182802] -2)
      ref call_tmp[1182809]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1182811 'move' call_tmp[1182809](1182814 call buffLen[757797] needle[2032931]))
      const-val nLen[1182817]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1183970]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1183974 'move' coerce_tmp[1183970](1183972 'deref' call_tmp[1182809]))
      (1803542 '=' nLen[1182817] coerce_tmp[1183970])
      (1182819 'noop')
      const-val call_tmp[1182823]:(range(int(64),bounded,false),int(64))[1084835] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1791272]:(range(int(64),bounded,false),int(64))[1084835] "temp"
      (1182828 call getView[1144352] this[1765708] region[1765710] ret_tmp[1791272])
      (1791275 'move' call_tmp[1182823] ret_tmp[1791272])
      const-val tmp[1182831]:(range(int(64),bounded,false),int(64))[1084835] "dead at end of block" "const" "insert auto destroy" "temp"
      (1182833 'move' tmp[1182831] call_tmp[1182823])
      1
      ref call_tmp[1182841]:_ref(range(int(64),bounded,false))[1026769] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1182843 'move' call_tmp[1182841](1183985 '.' tmp[1182831] x0[1084831]))
      const-val view[1182848]:range(int(64),bounded,false)[1026725] "dead at end of block" "const" "insert auto destroy"
      (1182850 'move' view[1182848](1183988 'deref' call_tmp[1182841]))
      const-val call_tmp[1182854]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (1182856 'move' call_tmp[1182854](1182859 call size[1035700] view[1182848]))
      const-val thisLen[1182862]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      (1182864 'move' thisLen[1182862] call_tmp[1182854])
      {
        const-val call_tmp[1183307]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1183309 'move' call_tmp[1183307](1183312 call ==[435539] nLen[1182817] 0))
        const-val call_tmp[1183315]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1183317 'move' call_tmp[1183315] call_tmp[1183307])
        if call_tmp[1183315]
        {
          {
            (1183341 call =[435238] localRet[1182802] -1)
          }
        }
      }
      const-val call_tmp[1183396]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1183398 'move' call_tmp[1183396](1183401 call >[437583] nLen[1182817] thisLen[1182862]))
      const-val call_tmp[1183404]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1183406 'move' call_tmp[1183404] call_tmp[1183396])
      if call_tmp[1183404]
      {
        (1183421 call =[435238] localRet[1182802] -1)
      }
      const-val call_tmp[1183434]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1183436 'move' call_tmp[1183434](1183439 call ==[435539] localRet[1182802] -2))
      const-val call_tmp[1183442]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1183444 'move' call_tmp[1183442] call_tmp[1183434])
      if call_tmp[1183442]
      {
        (1183459 call =[435238] localRet[1182802] -1)
        const-val call_tmp[1183464]:string[26] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1786493]:string[26] "temp"
        (1183472 call localize[32886] needle[2032931] ret_tmp[1786493])
        (1786496 'move' call_tmp[1183464] ret_tmp[1786493])
        const localNeedle[1183473]:string[26] "dead at end of block" "const" "insert auto destroy"
        (1183475 'move' localNeedle[1183473] call_tmp[1183464])
        const-val call_tmp[1183480]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1183482 'move' call_tmp[1183480](1183485 call -[440327] thisLen[1182862] nLen[1182817]))
        const-val call_tmp[1183488]:int(64)[13] "dead at end of block" "maybe param" "temp"
        (1183490 'move' call_tmp[1183488](1183493 call +[949577] call_tmp[1183480]))
        const-val numPossible[1183496]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        (1183498 'move' numPossible[1183496] call_tmp[1183488])
        const-val searchSpace[1183502]:range(int(64),bounded,false)[1026725] "dead at end of block" "const" "insert auto destroy"
        const-val tmp[1183504]:range(int(64),bounded,false)[1026725] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val tmp[1183515]:range(int(64),bounded,false)[1026725] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1183517]:range(int(64),boundedLow,false)[1087476] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1790389]:range(int(64),boundedLow,false)[1087476] "temp"
        (1183522 call chpl_build_low_bounded_range[1086869] 0 ret_tmp[1790389])
        (1790392 'move' call_tmp[1183517] ret_tmp[1790389])
        const-val ret_tmp[1790485]:range(int(64),bounded,false)[1026725] "temp"
        (1183527 call #[1087836] call_tmp[1183517] numPossible[1183496] ret_tmp[1790485])
        (1790488 'move' tmp[1183515] ret_tmp[1790485])
        (1183530 'move' tmp[1183504] tmp[1183515])
        (1183572 'move' searchSpace[1183502] tmp[1183504])
        {
          val _indexOfInterest[1183581]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1183583]:_ic_these_range_int64_t_bounded_F[1096614] "dead at end of block" "expr temp" "temp"
          (1183585 'move' _iterator[1183583](1183588 call _getIterator[1095231] searchSpace[1183502]))
          {
            val ret[1867970]:_ir_these_range_int64_t_bounded_F[1096620] "dead after last mention" "RVV" "temp"
            const-val _return_tmp_[1867972]:bool[10] "dead after last mention" "temp"
            const-val this[1868273]:range(int(64),bounded,false)[1026725] "temp"
            (1868278 'move' this[1868273](1868275 '.v' _iterator[1183583] F0_this[1964014]))
            (1867974 'move' _return_tmp_[1867972](1867977 call checkIfIterWillOverflow[1095725] this[1868273] 1))
            val i[1867980]:int(64)[13] "dead at end of block" "insert auto destroy"
            val call_tmp[1867982]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (1867984 'move' i[1867980] 0)
            ref call_tmp[1867987]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[1868280]:range(int(64),bounded,false)[1026725] "temp"
            (1868285 'move' this[1868280](1868282 '.v' _iterator[1183583] F0_this[1964014]))
            (1867989 'move' call_tmp[1867987](1867992 call _low[1028363] this[1868280]))
            const-val start[1867994]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1867996]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1867998 'move' coerce_tmp[1867996](1868000 'deref' call_tmp[1867987]))
            (1868002 '=' start[1867994] coerce_tmp[1867996])
            (1868005 'noop')
            ref call_tmp[1868006]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[1868287]:range(int(64),bounded,false)[1026725] "temp"
            (1868292 'move' this[1868287](1868289 '.v' _iterator[1183583] F0_this[1964014]))
            (1868008 'move' call_tmp[1868006](1868011 call _high[1028571] this[1868287]))
            const end[1868013]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1868015]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1868017 'move' coerce_tmp[1868015](1868019 'deref' call_tmp[1868006]))
            (1868021 '=' end[1868013] coerce_tmp[1868015])
            (1868024 'noop')
            CForLoop[1868025] hazard
            {
              const-val yret[1868040]:int(64)[13] "dead after last mention" "YVV" "temp"
              const-val call_tmp[1868042]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val this[1868294]:range(int(64),bounded,false)[1026725] "temp"
              (1868299 'move' this[1868294](1868296 '.v' _iterator[1183583] F0_this[1964014]))
              (1868044 'move' call_tmp[1868042](1868047 call chpl_intToIdx[1028391] this[1868294] i[1867980]))
              (1868050 'move' yret[1868040] call_tmp[1868042])
              const-val _yieldedIndex[1868064]:int(64)[13] "temp"
              (1868271 'move' _yieldedIndex[1868064] call_tmp[1868042])
              {
                const-val i[1868066]:int(64)[13] "const" "index var" "insert auto destroy"
                (1868068 'move' i[1868066] _yieldedIndex[1868064])
                {
                  {
                    val _indexOfInterest[1868073]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[1868075]:_ic_chpl_direct_counted_range_iter[1103701] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[1868077]:_ir_chpl_direct_counted_range_iter[1103707] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[1868079]:_ir_chpl_direct_counted_range_iter[1103707] "temp"
                    (1868082 call chpl_direct_counted_range_iter[457907] 0 nLen[1182817] ret_tmp[1868079])
                    (1868086 'move' call_tmp[1868077] ret_tmp[1868079])
                    (1868089 'move' _iterator[1868075](1868092 call _getIterator[1103716] call_tmp[1868077]))
                    {
                      val ret[1924765]:_ir_chpl_direct_counted_range_iter[1103707] "dead after last mention" "RVV" "temp"
                      val _indexOfInterest[1924767]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1924769]:_ic_chpl_direct_counted_range_iter_helper[1103451] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1924771]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1924773]:_ir_chpl_direct_counted_range_iter_helper[1103457] "temp"
                      const-val low[1925365]:int(64)[13] "temp"
                      (1925370 'move' low[1925365](1925367 '.v' _iterator[1868075] F0_low[1960165]))
                      const-val count[1925372]:int(64)[13] "temp"
                      (1925377 'move' count[1925372](1925374 '.v' _iterator[1868075] F1_count[1960169]))
                      (1924776 call chpl_direct_counted_range_iter_helper[1102009] low[1925365] count[1925372] ret_tmp[1924773])
                      (1924780 'move' call_tmp[1924771] ret_tmp[1924773])
                      (1924783 'move' _iterator[1924769](1924786 call _getIterator[1103466] call_tmp[1924771]))
                      {
                        val ret[1924789]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead after last mention" "RVV" "temp"
                        val call_tmp[1924791]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                        const-val tmp[1924793]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val tmp[1924795]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                        const-val call_tmp[1924797]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[1924799]:int(64)[13] "temp"
                        (1924801 'move' count[1924799](1924803 '.v' _iterator[1924769] F1_count[1964641]))
                        (1924806 'move' call_tmp[1924797](1924809 call <[948309] count[1924799]))
                        (1924811 'move' tmp[1924795] call_tmp[1924797])
                        (1924814 'move' tmp[1924793] call_tmp[1924797])
                        const-val call_tmp[1924817]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1924819 'move' call_tmp[1924817] call_tmp[1924797])
                        if call_tmp[1924797]
                        {
                          (1924825 call boundsCheckHalt[210079] "With a negative count, the range must have a last index.")
                        }
                        const-val tmp[1924828]:2*int(64)[1039967] "dead at end of block" "const" "insert auto destroy" "temp"
                        val tmp[1924830]:2*int(64)[1039967] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                        const-val tmp[1924832]:bool[10] "dead after last mention" "maybe param" "temp"
                        const-val call_tmp[1924834]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[1924836]:int(64)[13] "temp"
                        (1924838 'move' count[1924836](1924840 '.v' _iterator[1924769] F1_count[1964641]))
                        (1924843 'move' call_tmp[1924834](1924846 call ==[435539] count[1924836] 0))
                        (1924849 'move' tmp[1924832] call_tmp[1924834])
                        if call_tmp[1924834]
                        {
                          const-val tmp[1924854]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                          val call_tmp[1924856]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[1924858]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val low[1924860]:int(64)[13] "temp"
                          (1924862 'move' low[1924860](1924864 '.v' _iterator[1924769] F0_low[1964637]))
                          (1924867 'move' call_tmp[1924858](1924870 call _cast[955945] low[1924860]))
                          const-val call_tmp[1924872]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[1924874]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                          (1924876 'move' coerce_tmp[1924874](1924878 'cast' uint(64)[115] 1))
                          (1924881 'move' call_tmp[1924872](1924884 call -[962104] call_tmp[1924858]))
                          const-val call_tmp[1924886]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          (1924888 'move' call_tmp[1924886](1924891 call _cast[953454] call_tmp[1924872]))
                          const-val ret_tmp[1924893]:2*int(64)[1039967] "temp"
                          const-val low[1924895]:int(64)[13] "temp"
                          (1924897 'move' low[1924895](1924899 '.v' _iterator[1924769] F0_low[1964637]))
                          (1924903 call _build_tuple[1039925] low[1924895] call_tmp[1924886] ret_tmp[1924893])
                          (1924907 'move' tmp[1924854] ret_tmp[1924893])
                          (1924910 'move' tmp[1924830] tmp[1924854])
                        }
                        {
                          const-val tmp[1924914]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                          val call_tmp[1924916]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[1924918]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val count[1924920]:int(64)[13] "temp"
                          (1924922 'move' count[1924920](1924924 '.v' _iterator[1924769] F1_count[1964641]))
                          (1924927 'move' call_tmp[1924918] count[1924920])
                          const-val call_tmp[1924930]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val count[1924932]:int(64)[13] "temp"
                          (1924934 'move' count[1924932](1924936 '.v' _iterator[1924769] F1_count[1964641]))
                          (1924939 'move' call_tmp[1924930](1924942 call -[962137] count[1924932]))
                          const-val call_tmp[1924944]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val low[1924946]:int(64)[13] "temp"
                          (1924948 'move' low[1924946](1924950 '.v' _iterator[1924769] F0_low[1964637]))
                          (1924953 'move' call_tmp[1924944](1924956 call +[439547] low[1924946] call_tmp[1924930]))
                          const-val ret_tmp[1924959]:2*int(64)[1039967] "temp"
                          const-val low[1924961]:int(64)[13] "temp"
                          (1924963 'move' low[1924961](1924965 '.v' _iterator[1924769] F0_low[1964637]))
                          (1924969 call _build_tuple[1039925] low[1924961] call_tmp[1924944] ret_tmp[1924959])
                          (1924973 'move' tmp[1924914] ret_tmp[1924959])
                          (1924976 'move' tmp[1924830] tmp[1924914])
                        }
                        (1924980 '=' tmp[1924828] tmp[1924830])
                        (1924983 'noop')
                        1
                        ref call_tmp[1924985]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
                        (1924987 'move' call_tmp[1924985](1924989 '.' tmp[1924828] x0[1039963]))
                        const-val start[1924992]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                        const-val coerce_tmp[1924994]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                        (1924996 'move' coerce_tmp[1924994](1924998 'deref' call_tmp[1924985]))
                        (1925000 '=' start[1924992] coerce_tmp[1924994])
                        (1925003 'noop')
                        ref call_tmp[1925004]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
                        (1925006 'move' call_tmp[1925004](1925008 '.' tmp[1924828] x1[1039965]))
                        const-val end[1925011]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                        const-val coerce_tmp[1925013]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                        (1925015 'move' coerce_tmp[1925013](1925017 'deref' call_tmp[1925004]))
                        (1925019 '=' end[1925011] coerce_tmp[1925013])
                        (1925022 'noop')
                        val _indexOfInterest[1925023]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[1925025]:_ic_chpl_direct_param_stride_range_iter[1103197] "dead at end of block" "expr temp" "temp"
                        const-val call_tmp[1925027]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead at end of block" "expr temp" "maybe param" "temp"
                        const-val ret_tmp[1925029]:_ir_chpl_direct_param_stride_range_iter[1103203] "temp"
                        (1925032 call chpl_direct_param_stride_range_iter[1102435] coerce_tmp[1924994] coerce_tmp[1925013] ret_tmp[1925029])
                        (1925036 'move' call_tmp[1925027] ret_tmp[1925029])
                        (1925039 'move' _iterator[1925025](1925042 call _getIterator[1103212] call_tmp[1925027]))
                        {
                          val ret[1925045]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead after last mention" "RVV" "temp"
                          val call_tmp[1925047]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (1925050 call chpl_range_check_stride[1102755])
                          val i[1925051]:int(64)[13] "dead at end of block" "insert auto destroy"
                          val call_tmp[1925053]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (1925055 'move' i[1925051] 0)
                          val call_tmp[1925058]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val default_arg_first[1925060]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val low[1925062]:int(64)[13] "temp"
                          (1925064 'move' low[1925062](1925066 '.v' _iterator[1925025] F0_low[1966135]))
                          (1925069 'move' default_arg_first[1925060](1925072 call chpl_checkIfRangeIterWillOverflow_default_first[1103109] low[1925062]))
                          const-val default_arg_last[1925074]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val high[1925076]:int(64)[13] "temp"
                          (1925078 'move' high[1925076](1925080 '.v' _iterator[1925025] F1_high[1966139]))
                          (1925083 'move' default_arg_last[1925074](1925086 call chpl_checkIfRangeIterWillOverflow_default_last[1103137] high[1925076]))
                          const-val _return_tmp_[1925088]:bool[10] "dead after last mention" "temp"
                          const-val low[1925090]:int(64)[13] "temp"
                          (1925092 'move' low[1925090](1925094 '.v' _iterator[1925025] F0_low[1966135]))
                          const-val high[1925097]:int(64)[13] "temp"
                          (1925099 'move' high[1925097](1925101 '.v' _iterator[1925025] F1_high[1966139]))
                          (1925104 'move' _return_tmp_[1925088](1925107 call chpl_checkIfRangeIterWillOverflow[1095987] low[1925090] high[1925097] 1 default_arg_first[1925060] default_arg_last[1925074] 1))
                          CForLoop[1925114]
                          {
                            const-val yret[1925143]:int(64)[13] "dead after last mention" "YVV" "temp"
                            (1925145 'move' yret[1925143] i[1925051])
                            const-val _yieldedIndex[1925148]:int(64)[13] "temp"
                            (1925150 'move' _yieldedIndex[1925148] i[1925051])
                            {
                              const-val i[1925154]:int(64)[13] "const" "index var" "insert auto destroy"
                              (1925156 'move' i[1925154] _yieldedIndex[1925148])
                              const-val yret[1925159]:int(64)[13] "dead after last mention" "YVV" "temp"
                              (1925161 'move' yret[1925159] _yieldedIndex[1925148])
                              const-val _yieldedIndex[1925164]:int(64)[13] "temp"
                              (1925166 'move' _yieldedIndex[1925164] _yieldedIndex[1925148])
                              {
                                const-val i[1925170]:int(64)[13] "const" "index var" "insert auto destroy"
                                (1925172 'move' i[1925170] _yieldedIndex[1925164])
                                const-val yret[1925175]:int(64)[13] "dead after last mention" "YVV" "temp"
                                (1925177 'move' yret[1925175] _yieldedIndex[1925164])
                                const-val _yieldedIndex[1925213]:int(64)[13] "temp"
                                (1925363 'move' _yieldedIndex[1925213] _yieldedIndex[1925164])
                                {
                                  const-val j[1925215]:int(64)[13] "const" "index var" "insert auto destroy"
                                  (1925217 'move' j[1925215] _yieldedIndex[1925213])
                                  {
                                    const-val call_tmp[1925221]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                    (1925223 'move' call_tmp[1925221](1925226 call +[439547] i[1868066] j[1925215]))
                                    const-val call_tmp[1925229]:int(64)[13] "dead at end of block" "maybe param" "temp"
                                    (1925231 'move' call_tmp[1925229](1925234 call orderToIndex[1103951] view[1182848] call_tmp[1925221]))
                                    const-val idx[1925237]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                    (1925239 'move' idx[1925237] call_tmp[1925229])
                                    ref call_tmp[1925242]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
                                    ref _this_tmp_[1925244]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "temp"
                                    (1925246 'move' _this_tmp_[1925244](1925249 call buff[757875] this[1765708]))
                                    val coerce_tmp[1925251]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1925253 'move' coerce_tmp[1925251](1925255 'deref' _this_tmp_[1925244]))
                                    (1925257 'move' call_tmp[1925242](1925260 call this[954002] coerce_tmp[1925251] idx[1925237]))
                                    ref call_tmp[1925263]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
                                    ref _this_tmp_[1925265]:_ref(c_ptr(uint(8)))[937343] "dead after last mention" "reference to a const" "temp"
                                    (1925267 'move' _this_tmp_[1925265](1925270 call buff[757875] localNeedle[1183473]))
                                    val coerce_tmp[1925272]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1925274 'move' coerce_tmp[1925272](1925276 'deref' _this_tmp_[1925265]))
                                    (1925278 'move' call_tmp[1925263](1925281 call this[954002] coerce_tmp[1925272] j[1925215]))
                                    const-val call_tmp[1925284]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    const-val coerce_tmp[1925286]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1925288 'move' coerce_tmp[1925286](1925290 'deref' call_tmp[1925242]))
                                    const-val coerce_tmp[1925292]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1925294 'move' coerce_tmp[1925292](1925296 'deref' call_tmp[1925263]))
                                    (1925298 'move' call_tmp[1925284](1925301 call !=[435945] coerce_tmp[1925286] coerce_tmp[1925292]))
                                    const-val call_tmp[1925304]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1925306 'move' call_tmp[1925304] call_tmp[1925284])
                                    if call_tmp[1925304]
                                    {
                                      (1925354 call _freeIterator[1103385] _iterator[1925025])
                                      (1925357 call chpl__autoDestroy[1567619] tmp[1924828])
                                      (1925360 call _freeIterator[1103635] _iterator[1924769])
                                      break _breakLabel[1868234] _breakLabel[1868234]
                                    }
                                    const-val call_tmp[1925314]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1925316 'move' call_tmp[1925314](1925319 call -[962137] nLen[1182817]))
                                    const-val call_tmp[1925321]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1925323 'move' call_tmp[1925321](1925326 call ==[435539] j[1925215] call_tmp[1925314]))
                                    const-val call_tmp[1925329]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1925331 'move' call_tmp[1925329] call_tmp[1925321])
                                    if call_tmp[1925329]
                                    {
                                      {
                                        const-val call_tmp[1925337]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                        (1925339 'move' call_tmp[1925337](1925342 call orderToIndex[1103951] view[1182848] i[1868066]))
                                        (1925346 call =[435238] localRet[1182802] call_tmp[1925337])
                                      }
                                    }
                                  }
                                  label _continueLabel[1925350]
                                }
                              }
                            }
                            {
                              const-val low[1925116]:int(64)[13] "temp"
                              (1925118 'move' low[1925116](1925120 '.v' _iterator[1925025] F0_low[1966135]))
                              (1925123 '=' i[1925051] low[1925116])
                            }
                            {
                              const-val high[1925127]:int(64)[13] "temp"
                              (1925129 'move' high[1925127](1925131 '.v' _iterator[1925025] F1_high[1966139]))
                              (1925134 '<=' i[1925051] high[1925127])
                            }
                            {
                              val call_tmp[1925138]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              (1925140 '+=' i[1925051] 1)
                            }
                          }
                          label _endchpl_direct_param_stride_range_iter[1925196]
                        }
                        (1925199 call _freeIterator[1103385] _iterator[1925025])
                        (1925202 call chpl__autoDestroy[1567619] tmp[1924828])
                        label _endchpl_direct_counted_range_iter_helper[1925204]
                      }
                      (1925207 call _freeIterator[1103635] _iterator[1924769])
                      label _endchpl_direct_counted_range_iter[1925209]
                    }
                    label _breakLabel[1868234]
                    (1868237 call _freeIterator[1103885] _iterator[1868075])
                  }
                  const-val tmp[1868239]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  const-val tmp[1868241]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  const-val call_tmp[1868243]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1868245 'move' call_tmp[1868243](1868248 call !=[435923] localRet[1182802] -1))
                  (1868251 'move' tmp[1868241] call_tmp[1868243])
                  (1868254 'move' tmp[1868239] tmp[1868241])
                  const-val call_tmp[1868257]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1868259 'move' call_tmp[1868257] tmp[1868239])
                  if call_tmp[1868257]
                  {
                    break _breakLabel[1183872] _breakLabel[1183872]
                  }
                }
                label _continueLabel[1868267]
              }
              {
                (1868027 '=' i[1867980] coerce_tmp[1867996])
              }
              {
                (1868031 '<=' i[1867980] end[1868013])
              }
              {
                val call_tmp[1868035]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1868037 '+=' i[1867980] 1)
              }
            }
            label _endthese[1868060]
          }
          label _breakLabel[1183872]
          (1803553 call _freeIterator[1101917] _iterator[1183583])
        }
        (1803556 call chpl__autoDestroy[1567322] searchSpace[1183502])
        (1803559 call chpl__autoDestroy[1573691] call_tmp[1183517])
        (1803562 call chpl__autoDestroy[1494420] localNeedle[1183473])
      }
      (1183892 call =[435238] ret[1765712] localRet[1182802])
      (1803566 call chpl__autoDestroy[1567322] view[1182848])
      (1803569 call chpl__autoDestroy[1573646] tmp[1182831])
    }
    (2032948 call chpl__autoDestroy[1494607] needle[1765706])
    (2032951 call chpl__autoDestroy[1494420] needle[2032930])
    (1183898 return _void[55])
  }
  function wrapon_fn[2034012](const in arg dummy_locale_arg[2034014]:chpl_localeID_t[209294], in arg buf[2034016]:c_void_ptr[149], in arg buf_size[2034018]:int(64)[13], in arg c[2034020]:_class_localson_fn[2033972]) : void[4] "on block"
  {
    val _0_tmp[2034025]:chpl_localeID_t[209294] "temp"
    (2034030 'move' _0_tmp[2034025](2034027 '.v' c[2034020] _0_tmp[2033975]))
    ref _1_this[2034032]:string[26] "temp"
    (2034037 'move' _1_this[2034032](2034034 '.v' c[2034020] _1_this[2033977]))
    (2034023 call on_fn[933697] _1_this[2034032])
    (2034040 return _void[55])
  }
  function wrapon_fn[2034116](const in arg dummy_locale_arg[2034118]:chpl_localeID_t[209294], in arg buf[2034120]:c_void_ptr[149], in arg buf_size[2034122]:int(64)[13], in arg c[2034124]:_class_localson_fn[2034064]) : void[4] "on block"
  {
    val _0_tmp[2034129]:chpl_localeID_t[209294] "temp"
    (2034134 'move' _0_tmp[2034129](2034131 '.v' c[2034124] _0_tmp[2034067]))
    ref _1_this[2034136]:string[26] "temp"
    (2034141 'move' _1_this[2034136](2034138 '.v' c[2034124] _1_this[2034069]))
    ref _2_result[2034144]:bool[10] "temp"
    (2034149 'move' _2_result[2034144](2034146 '.v' c[2034124] _2_result[2034071]))
    (2034127 call on_fn[933733] _1_this[2034136] _2_result[2034144])
    (2034152 return _void[55])
  }
  function wrapon_fn[2039567](const in arg dummy_locale_arg[2039569]:chpl_localeID_t[209294], in arg buf[2039571]:c_void_ptr[149], in arg buf_size[2039573]:int(64)[13], in arg c[2039575]:_class_localson_fn[2039503]) : void[4] "on block"
  {
    val _0_tmp[2039580]:chpl_localeID_t[209294] "temp"
    (2039585 'move' _0_tmp[2039580](2039582 '.v' c[2039575] _0_tmp[2039506]))
    val _1_needle_data[2039587]:__serializeHelper[28086] "temp"
    (2039592 'move' _1_needle_data[2039587](2039589 '.v' c[2039575] _1_needle_data[2039508]))
    ref _2_this[2039595]:string[26] "temp"
    (2039600 'move' _2_this[2039595](2039597 '.v' c[2039575] _2_this[2039510]))
    val _3_region[2039603]:range(byteIndex,bounded,false)[1025703] "temp"
    (2039608 'move' _3_region[2039603](2039605 '.v' c[2039575] _3_region[2039512]))
    ref _4_ret[2039611]:int(64)[13] "temp"
    (2039616 'move' _4_ret[2039611](2039613 '.v' c[2039575] _4_ret[2039514]))
    (2039578 call on_fn[1106093] _1_needle_data[2039587] _2_this[2039595] _3_region[2039603] _4_ret[2039611])
    (2039619 return _void[55])
  }
  function wrapon_fn[2040135](const in arg dummy_locale_arg[2040137]:chpl_localeID_t[209294], in arg buf[2040139]:c_void_ptr[149], in arg buf_size[2040141]:int(64)[13], in arg c[2040143]:_class_localson_fn[2040071]) : void[4] "on block"
  {
    val _0_tmp[2040148]:chpl_localeID_t[209294] "temp"
    (2040153 'move' _0_tmp[2040148](2040150 '.v' c[2040143] _0_tmp[2040074]))
    val _1_needle_data[2040155]:__serializeHelper[28086] "temp"
    (2040160 'move' _1_needle_data[2040155](2040157 '.v' c[2040143] _1_needle_data[2040076]))
    ref _2_this[2040163]:string[26] "temp"
    (2040168 'move' _2_this[2040163](2040165 '.v' c[2040143] _2_this[2040078]))
    val _3_region[2040171]:range(byteIndex,boundedLow,false)[1143314] "temp"
    (2040176 'move' _3_region[2040171](2040173 '.v' c[2040143] _3_region[2040080]))
    ref _4_ret[2040179]:int(64)[13] "temp"
    (2040184 'move' _4_ret[2040179](2040181 '.v' c[2040143] _4_ret[2040082]))
    (2040146 call on_fn[1182789] _1_needle_data[2040155] _2_this[2040163] _3_region[2040171] _4_ret[2040179])
    (2040187 return _void[55])
  }
}