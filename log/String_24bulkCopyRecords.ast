AST dump for String after pass bulkCopyRecords.
Module use list: ChapelStandard SysCTypes ByteBufferHelpers BytesStringCommon SysBasic CString StringCasts NVStringFactory 

{
  function chpl__init_String[415976]() : void[4] "insert line file info" "module init" "resolved"
  {
    {
    }
    (505108 return _void[55])
  }
  def module NVStringFactory[30564]  
  const-val CHPL_SHORT_STRING_SIZE[28013]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  function _ref(byteIndex)[946682].init[28097](ref arg this[28172]:_ref(byteIndex)[946682]) : void[4] "method" "primary method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val tmp[453748]:int(64)[13] "dead after last mention" "temp"
    (1026877 'move' tmp[453748] 0)
    (453753 '.=' this[28172] _bindex[28091] tmp[453748])
    (502995 return _void[55])
  }
  function _ref(byteIndex)[946682].init=[28145](ref arg this[28184]:_ref(byteIndex)[946682], const in arg i[28142]:int(64)[13]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    val tmp[453775]:int(64)[13] "dead after last mention" "temp"
    (453778 'move' tmp[453775] i[28142])
    (453780 '.=' this[28184] _bindex[28091] tmp[453775])
    (503001 return _void[55])
  }
  function _ref(byteIndex)[946682].writeThis[1065671](const  ref arg this[1065675]:_ref(byteIndex)[946682], const  ref arg f[1065677]:channel(true,dynamic,false)[1058085], ref arg error_out[1764123]:Error[167942]) : void[4] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[1065683]:_ref(int(64))[934535] "dead after last mention" "maybe param" "temp"
    (1065685 'move' call_tmp[1065683](1065688 call _bindex[757781] this[1065675]))
    const-val coerce_tmp[1065765]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1065769 'move' coerce_tmp[1065765](1065767 'deref' call_tmp[1065683]))
    ref _return_tmp_[1755793]:_ref(channel(true,dynamic,false))[1058094] "dead after last mention" "temp"
    val error[1764128]:Error[167942] "error variable" "temp"
    (1764130 'move' error[1764128] nil[44])
    (1755795 'move' _return_tmp_[1755793](1065692 call <~>[1065699] f[1065677] coerce_tmp[1065765] error[1764128]))
    val errorExists[2030167]:bool[10] "temp"
    (2030172 'move' errorExists[2030167](2030169 '!=' error[1764128] nil[44]))
    if errorExists[2030167]
    {
      (1764134 '=' error_out[1764123] error[1764128])
      gotoErrorHandlingReturn _endwriteThis[1764125] _endwriteThis[1764125]
    }
    label _endwriteThis[1764125]
    (1065695 return _void[55])
  }
  function _ref(byteIndex)[946682]._bindex[757781](ref arg this[757785]:_ref(byteIndex)[946682]) ref : _ref(int(64))[934535] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[757795]:_ref(int(64))[934535] "dead after last mention" "RVV" "temp"
    ref call_tmp[757802]:_ref(int(64))[934535] "dead after last mention" "maybe param" "temp"
    (757805 'move' call_tmp[757802](757789 '.' this[757785] _bindex[28091]))
    (757800 'move' ret[757795] call_tmp[757802])
    (757797 return ret[757795])
  }
  function _ref(byteIndex)[946682].deinit[757807](const  ref arg this[757811]:_ref(byteIndex)[946682]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free"
  {
    (757819 return _void[55])
  }
  type byteIndex[28170] val _bindex[28091]:int(64)[13] "no doc"
  function _ref(codepointIndex)[946692].init[28201](ref arg this[28276]:_ref(codepointIndex)[946692]) : void[4] "method" "primary method" "no doc" "resolved" "no return value for void"
  {
    val tmp[453785]:int(64)[13] "dead after last mention" "temp"
    (1153984 'move' tmp[453785] 0)
    (453790 '.=' this[28276] _cpindex[28195] tmp[453785])
    (503005 return _void[55])
  }
  function _ref(codepointIndex)[946692].writeThis[1172254](const  ref arg this[1172258]:_ref(codepointIndex)[946692], const  ref arg f[1172260]:channel(true,dynamic,false)[1058085], ref arg error_out[1765146]:Error[167942]) : void[4] throws "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[1172266]:_ref(int(64))[934535] "dead after last mention" "maybe param" "temp"
    (1172268 'move' call_tmp[1172266](1172271 call _cpindex[757853] this[1172258]))
    const-val coerce_tmp[1172282]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1172286 'move' coerce_tmp[1172282](1172284 'deref' call_tmp[1172266]))
    ref _return_tmp_[1755809]:_ref(channel(true,dynamic,false))[1058094] "dead after last mention" "temp"
    val error[1765151]:Error[167942] "error variable" "temp"
    (1765153 'move' error[1765151] nil[44])
    (1755811 'move' _return_tmp_[1755809](1172275 call <~>[1065699] f[1172260] coerce_tmp[1172282] error[1765151]))
    val errorExists[2030679]:bool[10] "temp"
    (2030684 'move' errorExists[2030679](2030681 '!=' error[1765151] nil[44]))
    if errorExists[2030679]
    {
      (1765157 '=' error_out[1765146] error[1765151])
      gotoErrorHandlingReturn _endwriteThis[1765148] _endwriteThis[1765148]
    }
    label _endwriteThis[1765148]
    (1172278 return _void[55])
  }
  function _ref(codepointIndex)[946692]._cpindex[757853](ref arg this[757857]:_ref(codepointIndex)[946692]) ref : _ref(int(64))[934535] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[757867]:_ref(int(64))[934535] "dead after last mention" "RVV" "temp"
    ref call_tmp[757874]:_ref(int(64))[934535] "dead after last mention" "maybe param" "temp"
    (757877 'move' call_tmp[757874](757861 '.' this[757857] _cpindex[28195]))
    (757872 'move' ret[757867] call_tmp[757874])
    (757869 return ret[757867])
  }
  function _ref(codepointIndex)[946692].deinit[757879](const  ref arg this[757883]:_ref(codepointIndex)[946692]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved"
  {
    (757891 return _void[55])
  }
  type codepointIndex[28274] val _cpindex[28195]:int(64)[13] "no doc"
  function chpl_build_bounded_range[1120189](const  ref arg low[1120191]:byteIndex[28170], const  ref arg high[1120196]:byteIndex[28170], ref arg _retArg[1786605]:_ref(range(byteIndex,bounded,false))[1022933]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1120280]:range(byteIndex,bounded,false)[1022924] "dead after last mention" "RVV" "temp"
    val call_tmp[1120303]:byteIndex[28170] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1120309]:range(byteIndex,bounded,false)[1022924] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1120328]:range(byteIndex,bounded,false)[1022924] "dead after last mention" "delay instantiation" "temp"
    const-val default_arg__stride[1120407]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1120411 'move' default_arg__stride[1120407](1120409 call init_default__stride[1026944]))
    const-val default_arg__alignment[1120415]:byteIndex[28170] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret_tmp[1785150]:byteIndex[28170] "temp"
    (1120417 call init_default__alignment[1026984] ret_tmp[1785150])
    (1785153 'move' default_arg__alignment[1120415] ret_tmp[1785150])
    (1120331 call init[1025840] initTemp[1120328] low[1120191] high[1120196] default_arg__stride[1120407] default_arg__alignment[1120415] 0)
    (1120311 'move' call_tmp[1120309] initTemp[1120328])
    (1120320 'move' ret[1120280] call_tmp[1120309])
    (1786607 '=' _retArg[1786605] ret[1120280])
    (1796710 call chpl__autoDestroy[1399941] default_arg__alignment[1120415])
    (1786609 return _void[55])
  }
  function chpl_build_low_bounded_range[1139644](const  ref arg low[1139646]:byteIndex[28170], ref arg _retArg[1786833]:_ref(range(byteIndex,boundedLow,false))[1140381]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1139730]:range(byteIndex,boundedLow,false)[1140337] "dead after last mention" "RVV" "temp"
    val call_tmp[1139749]:byteIndex[28170] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1139755]:range(byteIndex,boundedLow,false)[1140337] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1139773]:range(byteIndex,boundedLow,false)[1140337] "dead after last mention" "delay instantiation" "temp"
    const-val default_arg__high[1140546]:byteIndex[28170] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret_tmp[1786839]:byteIndex[28170] "temp"
    (1140548 call init_default__high[1140522] ret_tmp[1786839])
    (1786842 'move' default_arg__high[1140546] ret_tmp[1786839])
    const-val default_arg__stride[1140587]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1140591 'move' default_arg__stride[1140587](1140589 call init_default__stride[1140555]))
    const-val default_arg__alignment[1140619]:byteIndex[28170] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret_tmp[1786851]:byteIndex[28170] "temp"
    (1140621 call init_default__alignment[1140595] ret_tmp[1786851])
    (1786854 'move' default_arg__alignment[1140619] ret_tmp[1786851])
    (1139776 call init[1139784] initTemp[1139773] low[1139646] default_arg__high[1140546] default_arg__stride[1140587] default_arg__alignment[1140619] 0)
    (1139757 'move' call_tmp[1139755] initTemp[1139773])
    (1139765 'move' ret[1139730] call_tmp[1139755])
    (1786835 '=' _retArg[1786833] ret[1139730])
    (1796942 call chpl__autoDestroy[1399941] default_arg__alignment[1140619])
    (1796945 call chpl__autoDestroy[1399941] default_arg__high[1140546])
    (1786837 return _void[55])
  }
  function chpl_build_high_bounded_range[1181092](const  ref arg high[1181094]:byteIndex[28170], ref arg _retArg[1787185]:_ref(range(byteIndex,boundedHigh,false))[1181829]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1181178]:range(byteIndex,boundedHigh,false)[1181785] "dead after last mention" "RVV" "temp"
    val call_tmp[1181197]:byteIndex[28170] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1181203]:range(byteIndex,boundedHigh,false)[1181785] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1181221]:range(byteIndex,boundedHigh,false)[1181785] "dead after last mention" "delay instantiation" "temp"
    const-val default_arg__low[1181994]:byteIndex[28170] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret_tmp[1787191]:byteIndex[28170] "temp"
    (1181996 call init_default__low[1181970] ret_tmp[1787191])
    (1787194 'move' default_arg__low[1181994] ret_tmp[1787191])
    const-val default_arg__stride[1182035]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1182039 'move' default_arg__stride[1182035](1182037 call init_default__stride[1182003]))
    const-val default_arg__alignment[1182067]:byteIndex[28170] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret_tmp[1787203]:byteIndex[28170] "temp"
    (1182069 call init_default__alignment[1182043] ret_tmp[1787203])
    (1787206 'move' default_arg__alignment[1182067] ret_tmp[1787203])
    (1181224 call init[1181232] initTemp[1181221] default_arg__low[1181994] high[1181094] default_arg__stride[1182035] default_arg__alignment[1182067] 0)
    (1181205 'move' call_tmp[1181203] initTemp[1181221])
    (1181213 'move' ret[1181178] call_tmp[1181203])
    (1787187 '=' _retArg[1787185] ret[1181178])
    (1799253 call chpl__autoDestroy[1399941] default_arg__alignment[1182067])
    (1799256 call chpl__autoDestroy[1399941] default_arg__low[1181994])
    (1787189 return _void[55])
  }
  function chpl__idxToInt[1026301](const  ref arg i[1026303]:byteIndex[28170]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    val ret[1026387]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1026399]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1026401 'move' call_tmp[1026399](1026404 call _cast[39462] i[1026303]))
    (1026407 'move' ret[1026387] call_tmp[1026399])
    (1026411 return ret[1026387])
  }
  function chpl__intToIdx[28502](const in arg i[28505]:int(64)[13], ref arg _retArg[1770756]:_ref(byteIndex)[946682]) : void[4] "fn returns via _retArg" "inline" "no doc" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1759567]:byteIndex[28170] "temp"
    const-val ret[503089]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    const-val call_tmp[597591]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1782908]:byteIndex[28170] "temp"
    (28510 call _cast[39483] i[28505] ret_tmp[1782908])
    (1782911 'move' call_tmp[597591] ret_tmp[1782908])
    (503094 'move' ret[503089] call_tmp[597591])
    (1770758 '=' _retArg[1770756] ret[503089])
    (1770760 return _void[55])
  }
  function >[28572](const  ref arg x[28569]:byteIndex[28170], const  ref arg y[28575]:byteIndex[28170]) : bool[10] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val ret[503125]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[597601]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597604 'move' call_tmp[597601](28580 call _cast[39462] x[28569]))
    const-val call_tmp[597606]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597609 'move' call_tmp[597606](28584 call _cast[39462] y[28575]))
    const-val call_tmp[597611]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (597614 'move' call_tmp[597611](28586 call >[437730] call_tmp[597601] call_tmp[597606]))
    (503130 'move' ret[503125] call_tmp[597611])
    (503127 return ret[503125])
  }
  function +[28722](const  ref arg x[28719]:byteIndex[28170], const in arg y[28725]:int(64)[13], ref arg _retArg[1770798]:_ref(byteIndex)[946682]) : void[4] "fn returns via _retArg" "inline" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[503179]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    const-val call_tmp[597671]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597674 'move' call_tmp[597671](28730 call _cast[39462] x[28719]))
    const-val call_tmp[597676]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597679 'move' call_tmp[597676](28733 call +[439694] call_tmp[597671] y[28725]))
    const-val call_tmp[597681]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1782914]:byteIndex[28170] "temp"
    (28736 call _cast[39483] call_tmp[597676] ret_tmp[1782914])
    (1782917 'move' call_tmp[597681] ret_tmp[1782914])
    (503184 'move' ret[503179] call_tmp[597681])
    (1770800 '=' _retArg[1770798] ret[503179])
    (1770802 return _void[55])
  }
  function -[28854](const  ref arg x[28851]:byteIndex[28170], const in arg y[28857]:int(64)[13], ref arg _retArg[1770834]:_ref(byteIndex)[946682]) : void[4] "fn returns via _retArg" "inline" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[503224]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    const-val call_tmp[597741]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597744 'move' call_tmp[597741](28862 call _cast[39462] x[28851]))
    const-val call_tmp[597746]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597749 'move' call_tmp[597746](28865 call -[440474] call_tmp[597741] y[28857]))
    const-val call_tmp[597751]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1782920]:byteIndex[28170] "temp"
    (28868 call _cast[39483] call_tmp[597746] ret_tmp[1782920])
    (1782923 'move' call_tmp[597751] ret_tmp[1782920])
    (503229 'move' ret[503224] call_tmp[597751])
    (1770836 '=' _retArg[1770834] ret[503224])
    (1770838 return _void[55])
  }
  function <[29040](const  ref arg x[29037]:codepointIndex[28274], const in arg y[29043]:int(64)[13]) : bool[10] "inline" "no doc" "resolved"
  {
    val ret[503287]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[597841]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597844 'move' call_tmp[597841](29048 call _cast[39514] x[29037]))
    const-val call_tmp[597846]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (597849 'move' call_tmp[597846](29051 call <[437510] call_tmp[597841] y[29043]))
    (503292 'move' ret[503287] call_tmp[597846])
    (503289 return ret[503287])
  }
  function >=[29190](const  ref arg x[29187]:codepointIndex[28274], const in arg y[29193]:int(64)[13]) : bool[10] "inline" "no doc" "resolved"
  {
    val ret[503341]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[597911]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (597914 'move' call_tmp[597911](29198 call _cast[39514] x[29187]))
    const-val call_tmp[597916]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (597919 'move' call_tmp[597916](29201 call >=[437290] call_tmp[597911] y[29193]))
    (503346 'move' ret[503341] call_tmp[597916])
    (503343 return ret[503341])
  }
  function ==[29466](const  ref arg x[29463]:byteIndex[28170], const in arg y[29469]:int(64)[13]) : bool[10] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val ret[503440]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[598041]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598044 'move' call_tmp[598041](29474 call _cast[39462] x[29463]))
    const-val call_tmp[598046]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (598049 'move' call_tmp[598046](29477 call ==[435686] call_tmp[598041] y[29469]))
    (503445 'move' ret[503440] call_tmp[598046])
    (503442 return ret[503440])
  }
  function ==[29538](const in arg x[29535]:int(64)[13], const  ref arg y[29541]:codepointIndex[28274]) : bool[10] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val ret[503467]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[598071]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598074 'move' call_tmp[598071](29547 call _cast[39514] y[29541]))
    const-val call_tmp[598076]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (598079 'move' call_tmp[598076](29549 call ==[435686] x[29535] call_tmp[598071]))
    (503472 'move' ret[503467] call_tmp[598076])
    (503469 return ret[503467])
  }
  function !=[29616](const  ref arg x[29613]:byteIndex[28170], const in arg y[29619]:int(64)[13]) : bool[10] "inline" "no doc" "resolved"
  {
    val ret[503494]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[598111]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598114 'move' call_tmp[598111](29624 call _cast[39462] x[29613]))
    const-val call_tmp[598116]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (598119 'move' call_tmp[598116](29627 call !=[436070] call_tmp[598111] y[29619]))
    (503499 'move' ret[503494] call_tmp[598116])
    (503496 return ret[503494])
  }
  function validateEncoding[984433](const in arg buf[984435]:c_ptr(uint(8))[935386], const in arg len[984437]:int(64)[13], ref arg error_out[1763189]:Error[167942]) : int(64)[13] throws "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[984441]:int(64)[13] "dead after last mention" "RVV" "temp"
    val numCodepoints[984467]:int(64)[13] "dead at end of block" "insert auto destroy"
    (984798 'move' numCodepoints[984467] 0)
    const-val call_tmp[984473]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (984475 'move' call_tmp[984473](984478 call chpl_enc_validate_buf[984530] buf[984435] len[984437] numCodepoints[984467]))
    const-val call_tmp[984482]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[984555]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (984561 'move' coerce_tmp[984555](984557 'cast' int(32)[95] 0))
    (984484 'move' call_tmp[984482](984487 call !=[436048] call_tmp[984473] coerce_tmp[984555]))
    const-val call_tmp[984490]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (984492 'move' call_tmp[984490] call_tmp[984482])
    if call_tmp[984490]
    {
      const-val call_tmp[984499]:owned DecodeError[962080] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      val new_temp[984580]:DecodeError[168098] "dead after last mention" "temp"
      (984582 'move' new_temp[984580](984568 call _new[961441]))
      const-val initTemp[984589]:owned DecodeError[962080] "dead after last mention" "delay instantiation" "temp"
      (984592 call init[961540] initTemp[984589] new_temp[984580])
      (984501 'move' call_tmp[984499] initTemp[984589])
      val call_tmp[984505]:Error[167942] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[984606]:owned Error[962257] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1784588]:owned Error[962257] "temp"
      (984608 call _cast[962342] call_tmp[984499] ret_tmp[1784588])
      (1784591 'move' coerce_tmp[984606] ret_tmp[1784588])
      const-val _formal_tmp_in_err[984785]:owned Error[962257] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (984789 'move' _formal_tmp_in_err[984785] coerce_tmp[984606])
      (984507 'move' call_tmp[984505](984510 call chpl_fix_thrown_error[170007] _formal_tmp_in_err[984785]))
      {
        val castedError[1763192]:Error[167942] "temp"
        (1763198 'move' castedError[1763192] call_tmp[984505])
        (1763200 '=' error_out[1763189] castedError[1763192])
        gotoErrorHandlingReturn _end_validateEncoding[984524] _end_validateEncoding[984524]
      }
    }
    (984795 'move' ret[984441] numCodepoints[984467])
    gotoReturn _end_validateEncoding[984524] _end_validateEncoding[984524]
    label _end_validateEncoding[984524]
    (984526 return ret[984441])
  }
  function createStringWithBorrowedBuffer[29899](const  ref arg x[29896]:string[26], ref arg _retArg[1770846]:_ref(string)[935902]) : void[4] "fn returns via _retArg" "inline" "resolved" "fn synchronization free"
  {
    const-val ret[503588]:string[26] "dead after last mention" "RVV" "temp"
    val ret[29902]:string[26] "dead at end of block" "insert auto destroy"
    (952207 call init[30760] ret[29902])
    ref call_tmp[598208]:_ref(int(64))[934535] "dead after last mention" "maybe param" "temp"
    (598211 'move' call_tmp[598208](29910 call cachedNumCodepoints[757977] ret[29902]))
    ref call_tmp[598215]:_ref(int(64))[934535] "dead after last mention" "maybe param" "reference to a const" "temp"
    (598218 'move' call_tmp[598215](29914 call cachedNumCodepoints[757977] x[29896]))
    const-val coerce_tmp[946790]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (946794 'move' coerce_tmp[946790](946792 'deref' call_tmp[598215]))
    (29917 call =[435385] call_tmp[598208] coerce_tmp[946790])
    (29924 call initWithBorrowedBuffer[946797] ret[29902] x[29896])
    (503593 'move' ret[503588] ret[29902])
    gotoReturn _end_createStringWithBorrowedBuffer[503586] _end_createStringWithBorrowedBuffer[503586]
    label _end_createStringWithBorrowedBuffer[503586]
    (1770848 '=' _retArg[1770846] ret[503588])
    (1770850 return _void[55])
  }
  function chpl_createStringWithLiteral[30029](const in arg x[30026]:c_string[19], const in arg length[30032]:int(64)[13], const in arg numCodepoints[30036]:int(64)[13], ref arg _retArg[1781550]:_ref(string)[935902]) : void[4] "fn returns via _retArg" "no doc" "resolved"
  {
    const-val ret[503626]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[598259]:uint(8)[100] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[598264]:c_ptr(uint(8))[935386] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[598269]:c_ptr(uint(8))[935386] "dead after last mention" "expr temp" "maybe param" "temp"
    (598272 'move' call_tmp[598269](30048 call _cast[39392] x[30026]))
    const-val call_tmp[598274]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598277 'move' call_tmp[598274](30055 call +[947588] length[30032]))
    const-val call_tmp[598279]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1781730]:string[26] "temp"
    (30060 call chpl_createStringWithBorrowedBufferNV[30626] call_tmp[598269] length[30032] call_tmp[598274] numCodepoints[30036] ret_tmp[1781730])
    (1781733 'move' call_tmp[598279] ret_tmp[1781730])
    (503631 'move' ret[503626] call_tmp[598279])
    (1781552 '=' _retArg[1781550] ret[503626])
    (1781554 return _void[55])
  }
  function createStringWithOwnedBuffer[30207](const in arg x[30204]:c_string[19], const in arg length[30213]:int(64)[13], ref arg error_out[1762083]:Error[167942], ref arg _retArg[1781574]:_ref(string)[935902]) : void[4] throws "fn returns via _retArg" "inline" "resolved"
  {
    const-val ret[503666]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[598308]:c_ptr(uint(8))[935386] "dead after last mention" "expr temp" "maybe param" "temp"
    (598311 'move' call_tmp[598308](30219 call _cast[39392] x[30204]))
    const-val call_tmp[598313]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598316 'move' call_tmp[598313](30226 call +[947588] length[30213]))
    const-val call_tmp[598318]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[1762088]:Error[167942] "error variable" "temp"
    (1762090 'move' error[1762088] nil[44])
    const-val ret_tmp[1781580]:string[26] "temp"
    (30229 call createStringWithOwnedBuffer[30271] call_tmp[598308] length[30213] call_tmp[598313] error[1762088] ret_tmp[1781580])
    (1781583 'move' call_tmp[598318] ret_tmp[1781580])
    val errorExists[2029127]:bool[10] "temp"
    (2029132 'move' errorExists[2029127](2029129 '!=' error[1762088] nil[44]))
    if errorExists[2029127]
    {
      (1762094 '=' error_out[1762083] error[1762088])
      gotoErrorHandlingReturn _endcreateStringWithOwnedBuffer[1762085] _endcreateStringWithOwnedBuffer[1762085]
    }
    (503671 'move' ret[503666] call_tmp[598318])
    label _endcreateStringWithOwnedBuffer[1762085]
    (1781576 '=' _retArg[1781574] ret[503666])
    (1781578 return _void[55])
  }
  function createStringWithOwnedBuffer_default_length[984395](const in arg x[984397]:c_string[19], ref arg error_out[1763185]:Error[167942]) : int(64)[13] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "resolved"
  {
    val ret[984399]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val length[984404]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (984411 'move' length[984404](984408 call size[22358] x[984397]))
    (984415 'move' ret[984399] length[984404])
    label _endcreateStringWithOwnedBuffer_default_length[1763187]
    (984402 return ret[984399])
  }
  function createStringWithOwnedBuffer[30271](const in arg x[30268]:c_ptr(uint(8))[935386], const in arg length[30274]:int(64)[13], const in arg size[30278]:int(64)[13], ref arg error_out[1762102]:Error[167942], ref arg _retArg[1781586]:_ref(string)[935902]) : void[4] throws "fn returns via _retArg" "inline" "resolved"
  {
    const-val ret[503684]:string[26] "dead after last mention" "RVV" "temp"
    val ret[30282]:string[26] "dead at end of block" "insert auto destroy"
    (984802 call init[30760] ret[30282])
    ref call_tmp[598332]:_ref(int(64))[934535] "dead after last mention" "maybe param" "temp"
    (598335 'move' call_tmp[598332](30288 call cachedNumCodepoints[757977] ret[30282]))
    const-val call_tmp[598337]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val error[1762105]:Error[167942] "error variable" "temp"
    (1762107 'move' error[1762105] nil[44])
    (598340 'move' call_tmp[598337](30295 call validateEncoding[984433] x[30268] length[30274] error[1762105]))
    val errorExists[2029135]:bool[10] "temp"
    (2029140 'move' errorExists[2029135](2029137 '!=' error[1762105] nil[44]))
    if errorExists[2029135]
    {
      (1762111 '=' error_out[1762102] error[1762105])
      (1793934 call chpl__autoDestroy[1399678] ret[30282])
      gotoErrorHandlingReturn _end_createStringWithOwnedBuffer[503682] _end_createStringWithOwnedBuffer[503682]
    }
    (30296 call =[435385] call_tmp[598332] call_tmp[598337])
    (30305 call initWithOwnedBuffer[975875] ret[30282] x[30268] length[30274] size[30278])
    (503689 'move' ret[503684] ret[30282])
    gotoReturn _end_createStringWithOwnedBuffer[503682] _end_createStringWithOwnedBuffer[503682]
    label _end_createStringWithOwnedBuffer[503682]
    (1781588 '=' _retArg[1781586] ret[503684])
    (1781590 return _void[55])
  }
  function createStringWithNewBuffer[30410](const in arg x[30407]:c_string[19], const in arg length[30416]:int(64)[13], const in arg policy[30423]:decodePolicy[173668], ref arg error_out[1762119]:Error[167942], ref arg _retArg[1781682]:_ref(string)[935902]) : void[4] throws "fn returns via _retArg" "inline" "resolved"
  {
    const-val ret[503724]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[598368]:c_ptr(uint(8))[935386] "dead after last mention" "expr temp" "maybe param" "temp"
    (598371 'move' call_tmp[598368](30429 call _cast[39392] x[30407]))
    const-val call_tmp[598373]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598376 'move' call_tmp[598373](30436 call +[947588] length[30416]))
    const-val call_tmp[598378]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[1762124]:Error[167942] "error variable" "temp"
    (1762126 'move' error[1762124] nil[44])
    const-val ret_tmp[1781688]:string[26] "temp"
    (30440 call createStringWithNewBuffer[30490] call_tmp[598368] length[30416] call_tmp[598373] policy[30423] error[1762124] ret_tmp[1781688])
    (1781691 'move' call_tmp[598378] ret_tmp[1781688])
    val errorExists[2029143]:bool[10] "temp"
    (2029148 'move' errorExists[2029143](2029145 '!=' error[1762124] nil[44]))
    if errorExists[2029143]
    {
      (1762130 '=' error_out[1762119] error[1762124])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[1762121] _endcreateStringWithNewBuffer[1762121]
    }
    (503729 'move' ret[503724] call_tmp[598378])
    label _endcreateStringWithNewBuffer[1762121]
    (1781684 '=' _retArg[1781682] ret[503724])
    (1781686 return _void[55])
  }
  function createStringWithNewBuffer_default_length[958930](const in arg x[958932]:c_string[19], ref arg error_out[1763173]:Error[167942]) : int(64)[13] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "resolved" "fn synchronization free"
  {
    val ret[958934]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val length[958939]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (958946 'move' length[958939](958943 call size[22358] x[958932]))
    (958950 'move' ret[958934] length[958939])
    label _endcreateStringWithNewBuffer_default_length[1763175]
    (958937 return ret[958934])
  }
  function createStringWithNewBuffer[30490](const in arg x[30487]:c_ptr(uint(8))[935386], const in arg length[30493]:int(64)[13], const in arg size[30500]:int(64)[13], const in arg policy[30507]:decodePolicy[173668], ref arg error_out[1762138]:Error[167942], ref arg _retArg[1781712]:_ref(string)[935902]) : void[4] throws "fn returns via _retArg" "inline" "resolved"
  {
    const-val ret[503742]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[598390]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[1762143]:Error[167942] "error variable" "temp"
    (1762145 'move' error[1762143] nil[44])
    const-val ret_tmp[1783810]:string[26] "temp"
    (30515 call decodeByteBuffer[173904] x[30487] length[30493] policy[30507] error[1762143] ret_tmp[1783810])
    (1783813 'move' call_tmp[598390] ret_tmp[1783810])
    val errorExists[2029151]:bool[10] "temp"
    (2029156 'move' errorExists[2029151](2029153 '!=' error[1762143] nil[44]))
    if errorExists[2029151]
    {
      (1762149 '=' error_out[1762138] error[1762143])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[1762140] _endcreateStringWithNewBuffer[1762140]
    }
    (503747 'move' ret[503742] call_tmp[598390])
    label _endcreateStringWithNewBuffer[1762140]
    (1781714 '=' _retArg[1781712] ret[503742])
    (1781716 return _void[55])
  }
  function _ref(string)[935902].init[30760](ref arg this[32625]:_ref(string)[935902]) : void[4] "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val tmp[453847]:int(64)[13] "dead after last mention" "temp"
    (453850 'move' tmp[453847] 0)
    (453852 '.=' this[32625] buffLen[30719] tmp[453847])
    val tmp[453857]:int(64)[13] "dead after last mention" "temp"
    (453860 'move' tmp[453857] 0)
    (453862 '.=' this[32625] buffSize[30725] tmp[453857])
    val tmp[453867]:int(64)[13] "dead after last mention" "temp"
    (453870 'move' tmp[453867] 0)
    (453872 '.=' this[32625] cachedNumCodepoints[30731] tmp[453867])
    val tmp[453877]:c_ptr(uint(8))[935386] "dead after last mention" "temp"
    val init_coerce_tmp[952221]:c_ptr(uint(8))[935386] "dead after last mention" "temp"
    (952224 'move' init_coerce_tmp[952221](952231 'cast' c_ptr(uint(8))[935386] nil[44]))
    (453880 'move' tmp[453877] init_coerce_tmp[952221])
    (453882 '.=' this[32625] buff[30737] tmp[453877])
    val tmp[453887]:bool[10] "dead after last mention" "temp"
    (453890 'move' tmp[453887] 1)
    (453892 '.=' this[32625] isOwned[30743] tmp[453887])
    val tmp[453897]:bool[10] "dead after last mention" "temp"
    (453900 'move' tmp[453897] 0)
    (453902 '.=' this[32625] hasEscapes[30749] tmp[453897])
    val tmp[453907]:int(32)[95] "dead after last mention" "temp"
    (453909 'move' tmp[453907] chpl_nodeID[208164])
    (453911 '.=' this[32625] locale_id[30754] tmp[453907])
    (503758 return _void[55])
  }
  function _ref(string)[935902].init=[30771](ref arg this[32629]:_ref(string)[935902], const  ref arg s[30768]:string[26]) : void[4] "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val tmp[453916]:int(64)[13] "dead after last mention" "temp"
    (453919 'move' tmp[453916] 0)
    (453921 '.=' this[32629] buffLen[30719] tmp[453916])
    val tmp[453926]:int(64)[13] "dead after last mention" "temp"
    (453929 'move' tmp[453926] 0)
    (453931 '.=' this[32629] buffSize[30725] tmp[453926])
    val tmp[453936]:int(64)[13] "dead after last mention" "temp"
    (453939 'move' tmp[453936] 0)
    (453941 '.=' this[32629] cachedNumCodepoints[30731] tmp[453936])
    val tmp[453946]:c_ptr(uint(8))[935386] "dead after last mention" "temp"
    val init_coerce_tmp[978470]:c_ptr(uint(8))[935386] "dead after last mention" "temp"
    (978473 'move' init_coerce_tmp[978470](979173 'cast' c_ptr(uint(8))[935386] nil[44]))
    (453949 'move' tmp[453946] init_coerce_tmp[978470])
    (453951 '.=' this[32629] buff[30737] tmp[453946])
    val tmp[453956]:bool[10] "dead after last mention" "temp"
    (453959 'move' tmp[453956] 1)
    (453961 '.=' this[32629] isOwned[30743] tmp[453956])
    val tmp[453966]:bool[10] "dead after last mention" "temp"
    (453969 'move' tmp[453966] 0)
    (453971 '.=' this[32629] hasEscapes[30749] tmp[453966])
    val tmp[453976]:int(32)[95] "dead after last mention" "temp"
    (453978 'move' tmp[453976] chpl_nodeID[208164])
    (453980 '.=' this[32629] locale_id[30754] tmp[453976])
    (30785 call initWithNewBuffer[978480] this[32629] s[30768])
    (503760 return _void[55])
  }
  function _ref(string)[935902].deinit[30831](ref arg this[32637]:_ref(string)[935902]) : void[4] "destructor" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    ref tmp[417382]:_ref(bool)[935162] "dead after last mention" "maybe param" "temp"
    (417393 'move' tmp[417382](369720 call isOwned[758029] this[32637]))
    val tmp[552880]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[552881]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[598431]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[935967]:bool[10] "dead after last mention" "const" "temp"
    (935969 'move' tmp[935967](935971 'deref' tmp[417382]))
    (598434 'move' call_tmp[598431] tmp[935967])
    (552886 'move' tmp[552881] call_tmp[598431])
    if tmp[552881]
    {
      const-val tmp[552888]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      ref call_tmp[598438]:_ref(c_ptr(uint(8)))[935395] "dead after last mention" "maybe param" "temp"
      (598441 'move' call_tmp[598438](30835 call buff[758003] this[32637]))
      const-val call_tmp[598443]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[936071]:c_ptr(uint(8))[935386] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (936075 'move' coerce_tmp[936071](936073 'deref' call_tmp[598438]))
      (598446 'move' call_tmp[598443](30839 call !=[935994] coerce_tmp[936071] nil[44]))
      (552890 'move' tmp[552888] call_tmp[598443])
      (552895 'move' tmp[552880] tmp[552888])
    }
    {
      (552900 'move' tmp[552880] 0)
    }
    const-val call_tmp[598448]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (598451 'move' call_tmp[598448] tmp[552880])
    if call_tmp[598448]
    {
      {
        const-val tmp[30865]:chpl_localeID_t[209306] "dead after last mention" "const" "temp"
        ref call_tmp[598455]:_ref(int(32))[934589] "dead after last mention" "maybe param" "temp"
        (598458 'move' call_tmp[598455](30847 call locale_id[758081] this[32637]))
        const-val call_tmp[598460]:chpl_localeID_t[209306] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val coerce_tmp[936089]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (936093 'move' coerce_tmp[936089](936091 'deref' call_tmp[598455]))
        (598463 'move' call_tmp[598460](30852 call chpl_buildLocaleID[209424] coerce_tmp[936089] c_sublocid_any[89879]))
        const-val call_tmp[598465]:chpl_localeID_t[209306] "dead after last mention" "expr temp" "maybe param" "temp"
        (598468 'move' call_tmp[598465](30853 'chpl_on_locale_num' call_tmp[598460]))
        (30866 'move' tmp[30865] call_tmp[598465])
        {
          ref call_tmp[598472]:_ref(c_ptr(uint(8)))[935395] "dead after last mention" "maybe param" "temp"
          (598475 'move' call_tmp[598472](30856 call buff[758003] this[32637]))
          val coerce_tmp[936121]:c_ptr(uint(8))[935386] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (936125 'move' coerce_tmp[936121](936123 'deref' call_tmp[598472]))
          const-val coerce_tmp[936127]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (936133 'move' coerce_tmp[936127](936129 'cast' c_void_ptr[149] coerce_tmp[936121]))
          (30860 call chpl_here_free[188093] coerce_tmp[936127])
        }
      }
    }
    (503764 return _void[55])
  }
  function _ref(string)[935902].isASCII[31046](const  ref arg this[32649]:_ref(string)[935902]) : bool[10] "inline" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[503800]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[598719]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598722 'move' call_tmp[598719](31049 call numCodepoints[32823] this[32649]))
    const-val call_tmp[598726]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598729 'move' call_tmp[598726](31053 call numBytes[32807] this[32649]))
    const-val call_tmp[598731]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (598734 'move' call_tmp[598731](31056 call ==[435686] call_tmp[598719] call_tmp[598726]))
    (503805 'move' ret[503800] call_tmp[598731])
    (503802 return ret[503800])
  }
  function _ref(string)[935902].byteIndices[31065](const  ref arg this[32653]:_ref(string)[935902], ref arg _retArg[1781916]:_ref(range(int(64),bounded,false))[1023990]) : void[4] "fn returns via _retArg" "inline" "method" "primary method" "no parens" "resolved" "fn synchronization free"
  {
    const-val ret[503809]:range(int(64),bounded,false)[1023946] "dead after last mention" "RVV" "temp"
    const-val call_tmp[598738]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598741 'move' call_tmp[598738](31069 call numBytes[32807] this[32653]))
    const-val call_tmp[598743]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (598746 'move' call_tmp[598743](31073 call -[957110] call_tmp[598738]))
    const-val call_tmp[598748]:range(int(64),bounded,false)[1023946] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1784062]:range(int(64),bounded,false)[1023946] "temp"
    (31075 call chpl_build_bounded_range[455195] 0 call_tmp[598743] ret_tmp[1784062])
    (1784065 'move' call_tmp[598748] ret_tmp[1784062])
    (503814 'move' ret[503809] call_tmp[598748])
    (1781918 '=' _retArg[1781916] ret[503809])
    (1781920 return _void[55])
  }
  function _ref(string)[935902]._cpIndexLen[31106](const  ref arg this[32661]:_ref(string)[935902], const  ref arg start[31103]:byteIndex[28170], ref arg _retArg[1781946]:_ref(_ir__cpIndexLen__ref_string)[1119437]) : void[4] "fn returns via _retArg" "inline" "iterator fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _ir[1939602]:_ir__cpIndexLen__ref_string[1119326] "temp"
    (1939604 '.=' _ir[1939602] F0_this[1938743] this[32661])
    (1939608 '.=' _ir[1939602] F1_start[1938747] start[31103])
    (1939612 '=' _retArg[1781946] _ir[1939602])
    (1939615 return _void[55])
  }
  type _ic__cpIndexLen__ref_string[1119320] val super[1119321]:object[22] "super class" val more[1119323]:int(64)[13] ref F0_this[1938741]:_ref(string)[935902] ref F1_start[1938745]:_ref(byteIndex)[946682] val F2_localThis[1938749]:string[26] val F3__iterator[1938751]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1105514] val F4_call_tmp[1938753]:range(int(64),bounded,false)[1023946] val F5__iterator[1938755]:_ic_these_range_int64_t_bounded_F[1093682] val F6__iterator[1938757]:_ic_chpl_bytes__ref_string[1105204] val F7__indexOfInterest[1938759]:(int(64),uint(8))[1107988] val F8_call_tmp[1938761]:byteIndex[28170] const-val F9_ret_tmp[1938763]:byteIndex[28170] const-val F10_ret_tmp[1938765]:(int(32),byteIndex,int(64))[1119077] val F11_i[1938767]:int(64)[13] const-val F12_ret_tmp[1938769]:(syserr,int(32),int(32))[960390] const F13_tmp[1938771]:(syserr,int(32),int(32))[960390] const F14_nBytes[1938773]:int(32)[95] val F15_call_tmp[1938775]:byteIndex[28170] const-val F16_ret_tmp[1938777]:byteIndex[28170] const-val F17_ret_tmp[1938779]:(int(32),byteIndex,int(64))[1119077] val F18_call_tmp[1938781]:(int(32),byteIndex,int(64))[1119077] val F19_call_tmp[1938783]:(int(32),byteIndex,int(64))[1119077] val value[1938785]:(int(32),byteIndex,int(64))[1119077]
  type _ir__cpIndexLen__ref_string[1119326] ref F0_this[1938743]:_ref(string)[935902] ref F1_start[1938747]:_ref(byteIndex)[946682]
  function _getIterator[1119335](const  ref arg ir[1119337]:_ir__cpIndexLen__ref_string[1119326]) : _ic__cpIndexLen__ref_string[1119320] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[1119444]:_ic__cpIndexLen__ref_string[1119320] "dead after last mention" "RVV" "temp"
    val _ic_[1119327]:_ic__cpIndexLen__ref_string[1119320] "dead after last mention" "temp"
    const-val call_tmp[1119451]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1119454 'move' call_tmp[1119451](1119466 'sizeof_bundle' _ic__cpIndexLen__ref_string[1119320]))
    const-val cast_tmp[1119469]:c_void_ptr[149] "dead after last mention" "temp"
    (1119471 'move' cast_tmp[1119469](1119332 call chpl_here_alloc[187754] call_tmp[1119451] 33))
    (1119340 'move' _ic_[1119327](1119473 'cast' _ic__cpIndexLen__ref_string[1119320] cast_tmp[1119469]))
    (1119342 'setcid' _ic_[1119327])
    (1119449 'move' ret[1119444] _ic_[1119327])
    (1939618 '.=' ret[1119444] more[1119323] 1)
    ref tmp[1939622]:_ref(string)[935902] "temp"
    (1939627 'move' tmp[1939622](1939623 '.v' ir[1119337] F0_this[1938743]))
    (1939629 '.=' ret[1119444] F0_this[1938741] tmp[1939622])
    ref tmp[1939633]:_ref(byteIndex)[946682] "temp"
    (1939638 'move' tmp[1939633](1939634 '.v' ir[1119337] F1_start[1938747]))
    (1939640 '.=' ret[1119444] F1_start[1938745] tmp[1939633])
    (1119446 return ret[1119444])
  }
  function _ref(string)[935902]._cpIndexLen_default_start[1118966](const  ref arg this[1118969]:_ref(string)[935902], ref arg _retArg[1786557]:_ref(byteIndex)[946682]) : void[4] "compiler generated" "default actual function" "fn returns via _retArg" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved"
  {
    const-val ret[1118972]:byteIndex[28170] "dead after last mention" "RVV" "maybe param" "temp"
    const-val start[1118977]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    const-val ret_tmp[1782962]:byteIndex[28170] "temp"
    (1118981 call _cast[39483] 0 ret_tmp[1782962])
    (1782965 'move' start[1118977] ret_tmp[1782962])
    (1118988 'move' ret[1118972] start[1118977])
    (1786559 '=' _retArg[1786557] ret[1118972])
    (1786561 return _void[55])
  }
  function _ref(string)[935902]._indexLen[31451](const  ref arg this[32665]:_ref(string)[935902], const  ref arg start[31448]:byteIndex[28170], ref arg _retArg[1781962]:_ref(_ir__indexLen__ref_string)[1118370]) : void[4] "fn returns via _retArg" "inline" "iterator fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[1940051]:_ir__indexLen__ref_string[1118259] "temp"
    (1940053 '.=' _ir[1940051] F0_this[1939646] this[32665])
    (1940057 '.=' _ir[1940051] F1_start[1939650] start[31448])
    (1940061 '=' _retArg[1781962] _ir[1940051])
    (1940064 return _void[55])
  }
  type _ic__indexLen__ref_string[1118253] val super[1118254]:object[22] "super class" val more[1118256]:int(64)[13] ref F0_this[1939644]:_ref(string)[935902] ref F1_start[1939648]:_ref(byteIndex)[946682] val F2_localThis[1939652]:string[26] val F3_i[1939654]:int(64)[13] val F4_j[1939656]:int(64)[13] val F5_call_tmp[1939658]:byteIndex[28170] const-val F6_ret_tmp[1939660]:byteIndex[28170] const-val F7_ret_tmp[1939662]:(byteIndex,int(64))[1118181] val value[1939664]:(byteIndex,int(64))[1118181]
  type _ir__indexLen__ref_string[1118259] ref F0_this[1939646]:_ref(string)[935902] ref F1_start[1939650]:_ref(byteIndex)[946682]
  function _getIterator[1118268](const  ref arg ir[1118270]:_ir__indexLen__ref_string[1118259]) : _ic__indexLen__ref_string[1118253] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1118377]:_ic__indexLen__ref_string[1118253] "dead after last mention" "RVV" "temp"
    val _ic_[1118260]:_ic__indexLen__ref_string[1118253] "dead after last mention" "temp"
    const-val call_tmp[1118384]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1118387 'move' call_tmp[1118384](1118399 'sizeof_bundle' _ic__indexLen__ref_string[1118253]))
    const-val cast_tmp[1118402]:c_void_ptr[149] "dead after last mention" "temp"
    (1118404 'move' cast_tmp[1118402](1118265 call chpl_here_alloc[187754] call_tmp[1118384] 32))
    (1118273 'move' _ic_[1118260](1118406 'cast' _ic__indexLen__ref_string[1118253] cast_tmp[1118402]))
    (1118275 'setcid' _ic_[1118260])
    (1118382 'move' ret[1118377] _ic_[1118260])
    (1940067 '.=' ret[1118377] more[1118256] 1)
    ref tmp[1940071]:_ref(string)[935902] "temp"
    (1940076 'move' tmp[1940071](1940072 '.v' ir[1118270] F0_this[1939646]))
    (1940078 '.=' ret[1118377] F0_this[1939644] tmp[1940071])
    ref tmp[1940082]:_ref(byteIndex)[946682] "temp"
    (1940087 'move' tmp[1940082](1940083 '.v' ir[1118270] F1_start[1939650]))
    (1940089 '.=' ret[1118377] F1_start[1939648] tmp[1940082])
    (1118379 return ret[1118377])
  }
  function _ref(string)[935902]._indexLen_default_start[1117951](const  ref arg this[1117954]:_ref(string)[935902], ref arg _retArg[1786509]:_ref(byteIndex)[946682]) : void[4] "compiler generated" "default actual function" "fn returns via _retArg" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "fn synchronization free"
  {
    const-val ret[1117957]:byteIndex[28170] "dead after last mention" "RVV" "maybe param" "temp"
    const-val start[1117962]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    const-val ret_tmp[1782956]:byteIndex[28170] "temp"
    (1117966 call _cast[39483] 0 ret_tmp[1782956])
    (1782959 'move' start[1117962] ret_tmp[1782956])
    (1117973 'move' ret[1117957] start[1117962])
    (1786511 '=' _retArg[1786509] ret[1117957])
    (1786513 return _void[55])
  }
  function _ref(string)[935902].doSearchUTF8[1103068](const  ref arg this[1103072]:_ref(string)[935902], const  ref arg needle[1103074]:string[26], const in arg region[1103076]:range(byteIndex,bounded,false)[1022924]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[1103084]:int(64)[13] "dead after last mention" "RVV" "temp"
    val ret[1103101]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1103103 'move' ret[1103101] -1)
    {
      const-val tmp[1103112]:chpl_localeID_t[209306] "dead after last mention" "const" "temp"
      ref call_tmp[1103114]:_ref(int(32))[934589] "dead after last mention" "maybe param" "temp"
      (1103116 'move' call_tmp[1103114](1103119 call locale_id[758081] this[1103072]))
      const-val call_tmp[1103122]:chpl_localeID_t[209306] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val coerce_tmp[1104299]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1104303 'move' coerce_tmp[1104299](1104301 'deref' call_tmp[1103114]))
      (1103124 'move' call_tmp[1103122](1103127 call chpl_buildLocaleID[209424] coerce_tmp[1104299] c_sublocid_any[89879]))
      const-val call_tmp[1103130]:chpl_localeID_t[209306] "dead after last mention" "expr temp" "maybe param" "temp"
      (1103132 'move' call_tmp[1103130](1103134 'chpl_on_locale_num' call_tmp[1103122]))
      (1103136 'move' tmp[1103112] call_tmp[1103130])
      {
        val localRet[1103148]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1103150 'move' localRet[1103148] -2)
        ref call_tmp[1103155]:_ref(int(64))[934535] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1103157 'move' call_tmp[1103155](1103160 call buffLen[757925] needle[1103074]))
        const-val nLen[1103163]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[1104311]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (1104315 'move' coerce_tmp[1104311](1104313 'deref' call_tmp[1103155]))
        (1796515 '=' nLen[1103163] coerce_tmp[1104311])
        (1103165 'noop')
        const-val call_tmp[1103169]:(range(int(64),bounded,false),int(64))[1081903] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1785186]:(range(int(64),bounded,false),int(64))[1081903] "temp"
        (1103174 call getView[1028277] this[1103072] region[1103076] ret_tmp[1785186])
        (1785189 'move' call_tmp[1103169] ret_tmp[1785186])
        const-val tmp[1103177]:(range(int(64),bounded,false),int(64))[1081903] "dead at end of block" "const" "insert auto destroy" "temp"
        (1103179 'move' tmp[1103177] call_tmp[1103169])
        1
        ref call_tmp[1103187]:_ref(range(int(64),bounded,false))[1023990] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1103189 'move' call_tmp[1103187](1104326 '.' tmp[1103177] x0[1081899]))
        const-val view[1103194]:range(int(64),bounded,false)[1023946] "dead at end of block" "const" "insert auto destroy"
        (1103196 'move' view[1103194](1104329 'deref' call_tmp[1103187]))
        const-val call_tmp[1103200]:int(64)[13] "dead at end of block" "maybe param" "temp"
        (1103202 'move' call_tmp[1103200](1103205 call size[1032912] view[1103194]))
        const-val thisLen[1103208]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        (1103210 'move' thisLen[1103208] call_tmp[1103200])
        {
          const-val call_tmp[1103653]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1103655 'move' call_tmp[1103653](1103658 call ==[435686] nLen[1103163] 0))
          const-val call_tmp[1103661]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1103663 'move' call_tmp[1103661] call_tmp[1103653])
          if call_tmp[1103661]
          {
            {
              (1103687 call =[435385] localRet[1103148] -1)
            }
          }
        }
        const-val call_tmp[1103742]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1103744 'move' call_tmp[1103742](1103747 call >[437730] nLen[1103163] thisLen[1103208]))
        const-val call_tmp[1103750]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1103752 'move' call_tmp[1103750] call_tmp[1103742])
        if call_tmp[1103750]
        {
          (1103767 call =[435385] localRet[1103148] -1)
        }
        const-val call_tmp[1103780]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1103782 'move' call_tmp[1103780](1103785 call ==[435686] localRet[1103148] -2))
        const-val call_tmp[1103788]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1103790 'move' call_tmp[1103788] call_tmp[1103780])
        if call_tmp[1103788]
        {
          (1103805 call =[435385] localRet[1103148] -1)
          const-val call_tmp[1103810]:string[26] "dead at end of block" "maybe param" "temp"
          const-val ret_tmp[1782080]:string[26] "temp"
          (1103818 call localize[32886] needle[1103074] ret_tmp[1782080])
          (1782083 'move' call_tmp[1103810] ret_tmp[1782080])
          const localNeedle[1103819]:string[26] "dead at end of block" "const" "insert auto destroy"
          (1103821 'move' localNeedle[1103819] call_tmp[1103810])
          const-val call_tmp[1103826]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
          (1103828 'move' call_tmp[1103826](1103831 call -[440474] thisLen[1103208] nLen[1103163]))
          const-val call_tmp[1103834]:int(64)[13] "dead at end of block" "maybe param" "temp"
          (1103836 'move' call_tmp[1103834](1103839 call +[947588] call_tmp[1103826]))
          const-val numPossible[1103842]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
          (1103844 'move' numPossible[1103842] call_tmp[1103834])
          const-val searchSpace[1103848]:range(int(64),bounded,false)[1023946] "dead at end of block" "const" "insert auto destroy"
          const-val tmp[1103850]:range(int(64),bounded,false)[1023946] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
          const-val tmp[1103861]:range(int(64),bounded,false)[1023946] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
          const-val call_tmp[1103863]:range(int(64),boundedLow,false)[1084544] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1786018]:range(int(64),boundedLow,false)[1084544] "temp"
          (1103868 call chpl_build_low_bounded_range[1083937] 0 ret_tmp[1786018])
          (1786021 'move' call_tmp[1103863] ret_tmp[1786018])
          const-val ret_tmp[1786126]:range(int(64),bounded,false)[1023946] "temp"
          (1103873 call #[1084904] call_tmp[1103863] numPossible[1103842] ret_tmp[1786126])
          (1786129 'move' tmp[1103861] ret_tmp[1786126])
          (1103876 'move' tmp[1103850] tmp[1103861])
          (1103918 'move' searchSpace[1103848] tmp[1103850])
          {
            val _indexOfInterest[1103927]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1103929]:_ic_these_range_int64_t_bounded_F[1093682] "dead at end of block" "expr temp" "temp"
            (1103931 'move' _iterator[1103929](1103934 call _getIterator[1092299] searchSpace[1103848]))
            {
              val ret[1857215]:_ir_these_range_int64_t_bounded_F[1093688] "dead after last mention" "RVV" "temp"
              const-val _return_tmp_[1857217]:bool[10] "dead after last mention" "temp"
              const-val this[1857518]:range(int(64),bounded,false)[1023946] "temp"
              (1857523 'move' this[1857518](1857520 '.v' _iterator[1103929] F0_this[1955920]))
              (1857219 'move' _return_tmp_[1857217](1857222 call checkIfIterWillOverflow[1092793] this[1857518] 1))
              val i[1857225]:int(64)[13] "dead at end of block" "insert auto destroy"
              val call_tmp[1857227]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (1857229 'move' i[1857225] 0)
              ref call_tmp[1857232]:_ref(int(64))[934535] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
              const-val this[1857525]:range(int(64),bounded,false)[1023946] "temp"
              (1857530 'move' this[1857525](1857527 '.v' _iterator[1103929] F0_this[1955920]))
              (1857234 'move' call_tmp[1857232](1857237 call _low[1025584] this[1857525]))
              const-val start[1857239]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[1857241]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
              (1857243 'move' coerce_tmp[1857241](1857245 'deref' call_tmp[1857232]))
              (1857247 '=' start[1857239] coerce_tmp[1857241])
              (1857250 'noop')
              ref call_tmp[1857251]:_ref(int(64))[934535] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
              const-val this[1857532]:range(int(64),bounded,false)[1023946] "temp"
              (1857537 'move' this[1857532](1857534 '.v' _iterator[1103929] F0_this[1955920]))
              (1857253 'move' call_tmp[1857251](1857256 call _high[1025792] this[1857532]))
              const end[1857258]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[1857260]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
              (1857262 'move' coerce_tmp[1857260](1857264 'deref' call_tmp[1857251]))
              (1857266 '=' end[1857258] coerce_tmp[1857260])
              (1857269 'noop')
              CForLoop[1857270] hazard
              {
                const-val yret[1857285]:int(64)[13] "dead after last mention" "YVV" "temp"
                const-val call_tmp[1857287]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val this[1857539]:range(int(64),bounded,false)[1023946] "temp"
                (1857544 'move' this[1857539](1857541 '.v' _iterator[1103929] F0_this[1955920]))
                (1857289 'move' call_tmp[1857287](1857292 call chpl_intToIdx[1025612] this[1857539] i[1857225]))
                (1857295 'move' yret[1857285] call_tmp[1857287])
                const-val _yieldedIndex[1857309]:int(64)[13] "temp"
                (1857516 'move' _yieldedIndex[1857309] call_tmp[1857287])
                {
                  const-val i[1857311]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1857313 'move' i[1857311] _yieldedIndex[1857309])
                  {
                    {
                      val _indexOfInterest[1857318]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1857320]:_ic_chpl_direct_counted_range_iter[1100747] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1857322]:_ir_chpl_direct_counted_range_iter[1100753] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1857324]:_ir_chpl_direct_counted_range_iter[1100753] "temp"
                      (1857327 call chpl_direct_counted_range_iter[458054] 0 nLen[1103163] ret_tmp[1857324])
                      (1857331 'move' call_tmp[1857322] ret_tmp[1857324])
                      (1857334 'move' _iterator[1857320](1857337 call _getIterator[1100762] call_tmp[1857322]))
                      {
                        val ret[1913875]:_ir_chpl_direct_counted_range_iter[1100753] "dead after last mention" "RVV" "temp"
                        val _indexOfInterest[1913877]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[1913879]:_ic_chpl_direct_counted_range_iter_helper[1100497] "dead at end of block" "expr temp" "temp"
                        const-val call_tmp[1913881]:_ir_chpl_direct_counted_range_iter_helper[1100503] "dead at end of block" "expr temp" "maybe param" "temp"
                        const-val ret_tmp[1913883]:_ir_chpl_direct_counted_range_iter_helper[1100503] "temp"
                        const-val low[1914475]:int(64)[13] "temp"
                        (1914480 'move' low[1914475](1914477 '.v' _iterator[1857320] F0_low[1952071]))
                        const-val count[1914482]:int(64)[13] "temp"
                        (1914487 'move' count[1914482](1914484 '.v' _iterator[1857320] F1_count[1952075]))
                        (1913886 call chpl_direct_counted_range_iter_helper[1099055] low[1914475] count[1914482] ret_tmp[1913883])
                        (1913890 'move' call_tmp[1913881] ret_tmp[1913883])
                        (1913893 'move' _iterator[1913879](1913896 call _getIterator[1100512] call_tmp[1913881]))
                        {
                          val ret[1913899]:_ir_chpl_direct_counted_range_iter_helper[1100503] "dead after last mention" "RVV" "temp"
                          val call_tmp[1913901]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val tmp[1913903]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                          const-val tmp[1913905]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                          const-val call_tmp[1913907]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val count[1913909]:int(64)[13] "temp"
                          (1913911 'move' count[1913909](1913913 '.v' _iterator[1913879] F1_count[1956547]))
                          (1913916 'move' call_tmp[1913907](1913919 call <[946327] count[1913909]))
                          (1913921 'move' tmp[1913905] call_tmp[1913907])
                          (1913924 'move' tmp[1913903] call_tmp[1913907])
                          const-val call_tmp[1913927]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (1913929 'move' call_tmp[1913927] call_tmp[1913907])
                          if call_tmp[1913907]
                          {
                            (1913935 call boundsCheckHalt[210084] "With a negative count, the range must have a last index.")
                          }
                          const-val tmp[1913938]:2*int(64)[1037179] "dead at end of block" "const" "insert auto destroy" "temp"
                          val tmp[1913940]:2*int(64)[1037179] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                          const-val tmp[1913942]:bool[10] "dead after last mention" "maybe param" "temp"
                          const-val call_tmp[1913944]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val count[1913946]:int(64)[13] "temp"
                          (1913948 'move' count[1913946](1913950 '.v' _iterator[1913879] F1_count[1956547]))
                          (1913953 'move' call_tmp[1913944](1913956 call ==[435686] count[1913946] 0))
                          (1913959 'move' tmp[1913942] call_tmp[1913944])
                          if call_tmp[1913944]
                          {
                            const-val tmp[1913964]:2*int(64)[1037179] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                            val call_tmp[1913966]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                            const-val call_tmp[1913968]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                            const-val low[1913970]:int(64)[13] "temp"
                            (1913972 'move' low[1913970](1913974 '.v' _iterator[1913879] F0_low[1956543]))
                            (1913977 'move' call_tmp[1913968](1913980 call _cast[974684] low[1913970]))
                            const-val call_tmp[1913982]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1913984]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1913986 'move' coerce_tmp[1913984](1913988 'cast' uint(64)[115] 1))
                            (1913991 'move' call_tmp[1913982](1913994 call -[957077] call_tmp[1913968]))
                            const-val call_tmp[1913996]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                            (1913998 'move' call_tmp[1913996](1914001 call _cast[951465] call_tmp[1913982]))
                            const-val ret_tmp[1914003]:2*int(64)[1037179] "temp"
                            const-val low[1914005]:int(64)[13] "temp"
                            (1914007 'move' low[1914005](1914009 '.v' _iterator[1913879] F0_low[1956543]))
                            (1914013 call _build_tuple[1037137] low[1914005] call_tmp[1913996] ret_tmp[1914003])
                            (1914017 'move' tmp[1913964] ret_tmp[1914003])
                            (1914020 'move' tmp[1913940] tmp[1913964])
                          }
                          {
                            const-val tmp[1914024]:2*int(64)[1037179] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                            val call_tmp[1914026]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                            const-val call_tmp[1914028]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                            const-val count[1914030]:int(64)[13] "temp"
                            (1914032 'move' count[1914030](1914034 '.v' _iterator[1913879] F1_count[1956547]))
                            (1914037 'move' call_tmp[1914028] count[1914030])
                            const-val call_tmp[1914040]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                            const-val count[1914042]:int(64)[13] "temp"
                            (1914044 'move' count[1914042](1914046 '.v' _iterator[1913879] F1_count[1956547]))
                            (1914049 'move' call_tmp[1914040](1914052 call -[957110] count[1914042]))
                            const-val call_tmp[1914054]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                            const-val low[1914056]:int(64)[13] "temp"
                            (1914058 'move' low[1914056](1914060 '.v' _iterator[1913879] F0_low[1956543]))
                            (1914063 'move' call_tmp[1914054](1914066 call +[439694] low[1914056] call_tmp[1914040]))
                            const-val ret_tmp[1914069]:2*int(64)[1037179] "temp"
                            const-val low[1914071]:int(64)[13] "temp"
                            (1914073 'move' low[1914071](1914075 '.v' _iterator[1913879] F0_low[1956543]))
                            (1914079 call _build_tuple[1037137] low[1914071] call_tmp[1914054] ret_tmp[1914069])
                            (1914083 'move' tmp[1914024] ret_tmp[1914069])
                            (1914086 'move' tmp[1913940] tmp[1914024])
                          }
                          (1914090 '=' tmp[1913938] tmp[1913940])
                          (1914093 'noop')
                          1
                          ref call_tmp[1914095]:_ref(int(64))[934535] "dead at end of block" "maybe param" "reference to a const" "temp"
                          (1914097 'move' call_tmp[1914095](1914099 '.' tmp[1913938] x0[1037175]))
                          const-val start[1914102]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                          const-val coerce_tmp[1914104]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                          (1914106 'move' coerce_tmp[1914104](1914108 'deref' call_tmp[1914095]))
                          (1914110 '=' start[1914102] coerce_tmp[1914104])
                          (1914113 'noop')
                          ref call_tmp[1914114]:_ref(int(64))[934535] "dead at end of block" "maybe param" "reference to a const" "temp"
                          (1914116 'move' call_tmp[1914114](1914118 '.' tmp[1913938] x1[1037177]))
                          const-val end[1914121]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                          const-val coerce_tmp[1914123]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                          (1914125 'move' coerce_tmp[1914123](1914127 'deref' call_tmp[1914114]))
                          (1914129 '=' end[1914121] coerce_tmp[1914123])
                          (1914132 'noop')
                          val _indexOfInterest[1914133]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                          val _iterator[1914135]:_ic_chpl_direct_param_stride_range_iter[1100243] "dead at end of block" "expr temp" "temp"
                          const-val call_tmp[1914137]:_ir_chpl_direct_param_stride_range_iter[1100249] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val ret_tmp[1914139]:_ir_chpl_direct_param_stride_range_iter[1100249] "temp"
                          (1914142 call chpl_direct_param_stride_range_iter[1099481] coerce_tmp[1914104] coerce_tmp[1914123] ret_tmp[1914139])
                          (1914146 'move' call_tmp[1914137] ret_tmp[1914139])
                          (1914149 'move' _iterator[1914135](1914152 call _getIterator[1100258] call_tmp[1914137]))
                          {
                            val ret[1914155]:_ir_chpl_direct_param_stride_range_iter[1100249] "dead after last mention" "RVV" "temp"
                            val call_tmp[1914157]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                            (1914160 call chpl_range_check_stride[1099801])
                            val i[1914161]:int(64)[13] "dead at end of block" "insert auto destroy"
                            val call_tmp[1914163]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                            (1914165 'move' i[1914161] 0)
                            val call_tmp[1914168]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                            const-val default_arg_first[1914170]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                            const-val low[1914172]:int(64)[13] "temp"
                            (1914174 'move' low[1914172](1914176 '.v' _iterator[1914135] F0_low[1958041]))
                            (1914179 'move' default_arg_first[1914170](1914182 call chpl_checkIfRangeIterWillOverflow_default_first[1100155] low[1914172]))
                            const-val default_arg_last[1914184]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                            const-val high[1914186]:int(64)[13] "temp"
                            (1914188 'move' high[1914186](1914190 '.v' _iterator[1914135] F1_high[1958045]))
                            (1914193 'move' default_arg_last[1914184](1914196 call chpl_checkIfRangeIterWillOverflow_default_last[1100183] high[1914186]))
                            const-val _return_tmp_[1914198]:bool[10] "dead after last mention" "temp"
                            const-val low[1914200]:int(64)[13] "temp"
                            (1914202 'move' low[1914200](1914204 '.v' _iterator[1914135] F0_low[1958041]))
                            const-val high[1914207]:int(64)[13] "temp"
                            (1914209 'move' high[1914207](1914211 '.v' _iterator[1914135] F1_high[1958045]))
                            (1914214 'move' _return_tmp_[1914198](1914217 call chpl_checkIfRangeIterWillOverflow[1093055] low[1914200] high[1914207] 1 default_arg_first[1914170] default_arg_last[1914184] 1))
                            CForLoop[1914224]
                            {
                              const-val yret[1914253]:int(64)[13] "dead after last mention" "YVV" "temp"
                              (1914255 'move' yret[1914253] i[1914161])
                              const-val _yieldedIndex[1914258]:int(64)[13] "temp"
                              (1914260 'move' _yieldedIndex[1914258] i[1914161])
                              {
                                const-val i[1914264]:int(64)[13] "const" "index var" "insert auto destroy"
                                (1914266 'move' i[1914264] _yieldedIndex[1914258])
                                const-val yret[1914269]:int(64)[13] "dead after last mention" "YVV" "temp"
                                (1914271 'move' yret[1914269] _yieldedIndex[1914258])
                                const-val _yieldedIndex[1914274]:int(64)[13] "temp"
                                (1914276 'move' _yieldedIndex[1914274] _yieldedIndex[1914258])
                                {
                                  const-val i[1914280]:int(64)[13] "const" "index var" "insert auto destroy"
                                  (1914282 'move' i[1914280] _yieldedIndex[1914274])
                                  const-val yret[1914285]:int(64)[13] "dead after last mention" "YVV" "temp"
                                  (1914287 'move' yret[1914285] _yieldedIndex[1914274])
                                  const-val _yieldedIndex[1914323]:int(64)[13] "temp"
                                  (1914473 'move' _yieldedIndex[1914323] _yieldedIndex[1914274])
                                  {
                                    const-val j[1914325]:int(64)[13] "const" "index var" "insert auto destroy"
                                    (1914327 'move' j[1914325] _yieldedIndex[1914323])
                                    {
                                      const-val call_tmp[1914331]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                      (1914333 'move' call_tmp[1914331](1914336 call +[439694] i[1857311] j[1914325]))
                                      const-val call_tmp[1914339]:int(64)[13] "dead at end of block" "maybe param" "temp"
                                      (1914341 'move' call_tmp[1914339](1914344 call orderToIndex[1100997] view[1103194] call_tmp[1914331]))
                                      const-val idx[1914347]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                      (1914349 'move' idx[1914347] call_tmp[1914339])
                                      ref call_tmp[1914352]:_ref(uint(8))[934871] "dead after last mention" "maybe param" "temp"
                                      ref _this_tmp_[1914354]:_ref(c_ptr(uint(8)))[935395] "dead after last mention" "temp"
                                      (1914356 'move' _this_tmp_[1914354](1914359 call buff[758003] this[1103072]))
                                      val coerce_tmp[1914361]:c_ptr(uint(8))[935386] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                      (1914363 'move' coerce_tmp[1914361](1914365 'deref' _this_tmp_[1914354]))
                                      (1914367 'move' call_tmp[1914352](1914370 call this[952013] coerce_tmp[1914361] idx[1914347]))
                                      ref call_tmp[1914373]:_ref(uint(8))[934871] "dead after last mention" "maybe param" "temp"
                                      ref _this_tmp_[1914375]:_ref(c_ptr(uint(8)))[935395] "dead after last mention" "reference to a const" "temp"
                                      (1914377 'move' _this_tmp_[1914375](1914380 call buff[758003] localNeedle[1103819]))
                                      val coerce_tmp[1914382]:c_ptr(uint(8))[935386] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                      (1914384 'move' coerce_tmp[1914382](1914386 'deref' _this_tmp_[1914375]))
                                      (1914388 'move' call_tmp[1914373](1914391 call this[952013] coerce_tmp[1914382] j[1914325]))
                                      const-val call_tmp[1914394]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                      const-val coerce_tmp[1914396]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                      (1914398 'move' coerce_tmp[1914396](1914400 'deref' call_tmp[1914352]))
                                      const-val coerce_tmp[1914402]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                      (1914404 'move' coerce_tmp[1914402](1914406 'deref' call_tmp[1914373]))
                                      (1914408 'move' call_tmp[1914394](1914411 call !=[436092] coerce_tmp[1914396] coerce_tmp[1914402]))
                                      const-val call_tmp[1914414]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                      (1914416 'move' call_tmp[1914414] call_tmp[1914394])
                                      if call_tmp[1914414]
                                      {
                                        (1914464 call _freeIterator[1100431] _iterator[1914135])
                                        (1914467 call chpl__autoDestroy[1472606] tmp[1913938])
                                        (1914470 call _freeIterator[1100681] _iterator[1913879])
                                        break _breakLabel[1857479] _breakLabel[1857479]
                                      }
                                      const-val call_tmp[1914424]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                      (1914426 'move' call_tmp[1914424](1914429 call -[957110] nLen[1103163]))
                                      const-val call_tmp[1914431]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                      (1914433 'move' call_tmp[1914431](1914436 call ==[435686] j[1914325] call_tmp[1914424]))
                                      const-val call_tmp[1914439]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                      (1914441 'move' call_tmp[1914439] call_tmp[1914431])
                                      if call_tmp[1914439]
                                      {
                                        {
                                          const-val call_tmp[1914447]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                          (1914449 'move' call_tmp[1914447](1914452 call orderToIndex[1100997] view[1103194] i[1857311]))
                                          (1914456 call =[435385] localRet[1103148] call_tmp[1914447])
                                        }
                                      }
                                    }
                                    label _continueLabel[1914460]
                                  }
                                }
                              }
                              {
                                const-val low[1914226]:int(64)[13] "temp"
                                (1914228 'move' low[1914226](1914230 '.v' _iterator[1914135] F0_low[1958041]))
                                (1914233 '=' i[1914161] low[1914226])
                              }
                              {
                                const-val high[1914237]:int(64)[13] "temp"
                                (1914239 'move' high[1914237](1914241 '.v' _iterator[1914135] F1_high[1958045]))
                                (1914244 '<=' i[1914161] high[1914237])
                              }
                              {
                                val call_tmp[1914248]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                (1914250 '+=' i[1914161] 1)
                              }
                            }
                            label _endchpl_direct_param_stride_range_iter[1914306]
                          }
                          (1914309 call _freeIterator[1100431] _iterator[1914135])
                          (1914312 call chpl__autoDestroy[1472606] tmp[1913938])
                          label _endchpl_direct_counted_range_iter_helper[1914314]
                        }
                        (1914317 call _freeIterator[1100681] _iterator[1913879])
                        label _endchpl_direct_counted_range_iter[1914319]
                      }
                      label _breakLabel[1857479]
                      (1857482 call _freeIterator[1100931] _iterator[1857320])
                    }
                    const-val tmp[1857484]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val tmp[1857486]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    const-val call_tmp[1857488]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1857490 'move' call_tmp[1857488](1857493 call !=[436070] localRet[1103148] -1))
                    (1857496 'move' tmp[1857486] call_tmp[1857488])
                    (1857499 'move' tmp[1857484] tmp[1857486])
                    const-val call_tmp[1857502]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1857504 'move' call_tmp[1857502] tmp[1857484])
                    if call_tmp[1857502]
                    {
                      break _breakLabel[1104218] _breakLabel[1104218]
                    }
                  }
                  label _continueLabel[1857512]
                }
                {
                  (1857272 '=' i[1857225] coerce_tmp[1857241])
                }
                {
                  (1857276 '<=' i[1857225] end[1857258])
                }
                {
                  val call_tmp[1857280]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (1857282 '+=' i[1857225] 1)
                }
              }
              label _endthese[1857305]
            }
            label _breakLabel[1104218]
            (1796526 call _freeIterator[1098963] _iterator[1103929])
          }
          (1796529 call chpl__autoDestroy[1472309] searchSpace[1103848])
          (1796532 call chpl__autoDestroy[1478633] call_tmp[1103863])
          (1796535 call chpl__autoDestroy[1399678] localNeedle[1103819])
        }
        (1104238 call =[435385] ret[1103101] localRet[1103148])
        (1796539 call chpl__autoDestroy[1472309] view[1103194])
        (1796542 call chpl__autoDestroy[1478588] tmp[1103177])
      }
    }
    (1104244 'move' ret[1103084] ret[1103101])
    gotoReturn _end_doSearchUTF8[1104252] _end_doSearchUTF8[1104252]
    label _end_doSearchUTF8[1104252]
    (1104254 return ret[1103084])
  }
  function _ref(string)[935902].doSearchUTF8[1179682](const  ref arg this[1179686]:_ref(string)[935902], const  ref arg needle[1179688]:string[26], const in arg region[1179690]:range(byteIndex,boundedLow,false)[1140337]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[1179698]:int(64)[13] "dead after last mention" "RVV" "temp"
    val ret[1179715]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1179717 'move' ret[1179715] -1)
    {
      const-val tmp[1179726]:chpl_localeID_t[209306] "dead after last mention" "const" "temp"
      ref call_tmp[1179728]:_ref(int(32))[934589] "dead after last mention" "maybe param" "temp"
      (1179730 'move' call_tmp[1179728](1179733 call locale_id[758081] this[1179686]))
      const-val call_tmp[1179736]:chpl_localeID_t[209306] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val coerce_tmp[1180913]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1180917 'move' coerce_tmp[1180913](1180915 'deref' call_tmp[1179728]))
      (1179738 'move' call_tmp[1179736](1179741 call chpl_buildLocaleID[209424] coerce_tmp[1180913] c_sublocid_any[89879]))
      const-val call_tmp[1179744]:chpl_localeID_t[209306] "dead after last mention" "expr temp" "maybe param" "temp"
      (1179746 'move' call_tmp[1179744](1179748 'chpl_on_locale_num' call_tmp[1179736]))
      (1179750 'move' tmp[1179726] call_tmp[1179744])
      {
        val localRet[1179762]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1179764 'move' localRet[1179762] -2)
        ref call_tmp[1179769]:_ref(int(64))[934535] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1179771 'move' call_tmp[1179769](1179774 call buffLen[757925] needle[1179688]))
        const-val nLen[1179777]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[1180925]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (1180929 'move' coerce_tmp[1180925](1180927 'deref' call_tmp[1179769]))
        (1799223 '=' nLen[1179777] coerce_tmp[1180925])
        (1179779 'noop')
        const-val call_tmp[1179783]:(range(int(64),bounded,false),int(64))[1081903] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1786919]:(range(int(64),bounded,false),int(64))[1081903] "temp"
        (1179788 call getView[1141375] this[1179686] region[1179690] ret_tmp[1786919])
        (1786922 'move' call_tmp[1179783] ret_tmp[1786919])
        const-val tmp[1179791]:(range(int(64),bounded,false),int(64))[1081903] "dead at end of block" "const" "insert auto destroy" "temp"
        (1179793 'move' tmp[1179791] call_tmp[1179783])
        1
        ref call_tmp[1179801]:_ref(range(int(64),bounded,false))[1023990] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1179803 'move' call_tmp[1179801](1180940 '.' tmp[1179791] x0[1081899]))
        const-val view[1179808]:range(int(64),bounded,false)[1023946] "dead at end of block" "const" "insert auto destroy"
        (1179810 'move' view[1179808](1180943 'deref' call_tmp[1179801]))
        const-val call_tmp[1179814]:int(64)[13] "dead at end of block" "maybe param" "temp"
        (1179816 'move' call_tmp[1179814](1179819 call size[1032912] view[1179808]))
        const-val thisLen[1179822]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        (1179824 'move' thisLen[1179822] call_tmp[1179814])
        {
          const-val call_tmp[1180267]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1180269 'move' call_tmp[1180267](1180272 call ==[435686] nLen[1179777] 0))
          const-val call_tmp[1180275]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1180277 'move' call_tmp[1180275] call_tmp[1180267])
          if call_tmp[1180275]
          {
            {
              (1180301 call =[435385] localRet[1179762] -1)
            }
          }
        }
        const-val call_tmp[1180356]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1180358 'move' call_tmp[1180356](1180361 call >[437730] nLen[1179777] thisLen[1179822]))
        const-val call_tmp[1180364]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1180366 'move' call_tmp[1180364] call_tmp[1180356])
        if call_tmp[1180364]
        {
          (1180381 call =[435385] localRet[1179762] -1)
        }
        const-val call_tmp[1180394]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1180396 'move' call_tmp[1180394](1180399 call ==[435686] localRet[1179762] -2))
        const-val call_tmp[1180402]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1180404 'move' call_tmp[1180402] call_tmp[1180394])
        if call_tmp[1180402]
        {
          (1180419 call =[435385] localRet[1179762] -1)
          const-val call_tmp[1180424]:string[26] "dead at end of block" "maybe param" "temp"
          const-val ret_tmp[1782146]:string[26] "temp"
          (1180432 call localize[32886] needle[1179688] ret_tmp[1782146])
          (1782149 'move' call_tmp[1180424] ret_tmp[1782146])
          const localNeedle[1180433]:string[26] "dead at end of block" "const" "insert auto destroy"
          (1180435 'move' localNeedle[1180433] call_tmp[1180424])
          const-val call_tmp[1180440]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
          (1180442 'move' call_tmp[1180440](1180445 call -[440474] thisLen[1179822] nLen[1179777]))
          const-val call_tmp[1180448]:int(64)[13] "dead at end of block" "maybe param" "temp"
          (1180450 'move' call_tmp[1180448](1180453 call +[947588] call_tmp[1180440]))
          const-val numPossible[1180456]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
          (1180458 'move' numPossible[1180456] call_tmp[1180448])
          const-val searchSpace[1180462]:range(int(64),bounded,false)[1023946] "dead at end of block" "const" "insert auto destroy"
          const-val tmp[1180464]:range(int(64),bounded,false)[1023946] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
          const-val tmp[1180475]:range(int(64),bounded,false)[1023946] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
          const-val call_tmp[1180477]:range(int(64),boundedLow,false)[1084544] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1786048]:range(int(64),boundedLow,false)[1084544] "temp"
          (1180482 call chpl_build_low_bounded_range[1083937] 0 ret_tmp[1786048])
          (1786051 'move' call_tmp[1180477] ret_tmp[1786048])
          const-val ret_tmp[1786138]:range(int(64),bounded,false)[1023946] "temp"
          (1180487 call #[1084904] call_tmp[1180477] numPossible[1180456] ret_tmp[1786138])
          (1786141 'move' tmp[1180475] ret_tmp[1786138])
          (1180490 'move' tmp[1180464] tmp[1180475])
          (1180532 'move' searchSpace[1180462] tmp[1180464])
          {
            val _indexOfInterest[1180541]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1180543]:_ic_these_range_int64_t_bounded_F[1093682] "dead at end of block" "expr temp" "temp"
            (1180545 'move' _iterator[1180543](1180548 call _getIterator[1092299] searchSpace[1180462]))
            {
              val ret[1860773]:_ir_these_range_int64_t_bounded_F[1093688] "dead after last mention" "RVV" "temp"
              const-val _return_tmp_[1860775]:bool[10] "dead after last mention" "temp"
              const-val this[1861076]:range(int(64),bounded,false)[1023946] "temp"
              (1861081 'move' this[1861076](1861078 '.v' _iterator[1180543] F0_this[1955920]))
              (1860777 'move' _return_tmp_[1860775](1860780 call checkIfIterWillOverflow[1092793] this[1861076] 1))
              val i[1860783]:int(64)[13] "dead at end of block" "insert auto destroy"
              val call_tmp[1860785]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (1860787 'move' i[1860783] 0)
              ref call_tmp[1860790]:_ref(int(64))[934535] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
              const-val this[1861083]:range(int(64),bounded,false)[1023946] "temp"
              (1861088 'move' this[1861083](1861085 '.v' _iterator[1180543] F0_this[1955920]))
              (1860792 'move' call_tmp[1860790](1860795 call _low[1025584] this[1861083]))
              const-val start[1860797]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[1860799]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
              (1860801 'move' coerce_tmp[1860799](1860803 'deref' call_tmp[1860790]))
              (1860805 '=' start[1860797] coerce_tmp[1860799])
              (1860808 'noop')
              ref call_tmp[1860809]:_ref(int(64))[934535] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
              const-val this[1861090]:range(int(64),bounded,false)[1023946] "temp"
              (1861095 'move' this[1861090](1861092 '.v' _iterator[1180543] F0_this[1955920]))
              (1860811 'move' call_tmp[1860809](1860814 call _high[1025792] this[1861090]))
              const end[1860816]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[1860818]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
              (1860820 'move' coerce_tmp[1860818](1860822 'deref' call_tmp[1860809]))
              (1860824 '=' end[1860816] coerce_tmp[1860818])
              (1860827 'noop')
              CForLoop[1860828] hazard
              {
                const-val yret[1860843]:int(64)[13] "dead after last mention" "YVV" "temp"
                const-val call_tmp[1860845]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val this[1861097]:range(int(64),bounded,false)[1023946] "temp"
                (1861102 'move' this[1861097](1861099 '.v' _iterator[1180543] F0_this[1955920]))
                (1860847 'move' call_tmp[1860845](1860850 call chpl_intToIdx[1025612] this[1861097] i[1860783]))
                (1860853 'move' yret[1860843] call_tmp[1860845])
                const-val _yieldedIndex[1860867]:int(64)[13] "temp"
                (1861074 'move' _yieldedIndex[1860867] call_tmp[1860845])
                {
                  const-val i[1860869]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1860871 'move' i[1860869] _yieldedIndex[1860867])
                  {
                    {
                      val _indexOfInterest[1860876]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1860878]:_ic_chpl_direct_counted_range_iter[1100747] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1860880]:_ir_chpl_direct_counted_range_iter[1100753] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1860882]:_ir_chpl_direct_counted_range_iter[1100753] "temp"
                      (1860885 call chpl_direct_counted_range_iter[458054] 0 nLen[1179777] ret_tmp[1860882])
                      (1860889 'move' call_tmp[1860880] ret_tmp[1860882])
                      (1860892 'move' _iterator[1860878](1860895 call _getIterator[1100762] call_tmp[1860880]))
                      {
                        val ret[1916366]:_ir_chpl_direct_counted_range_iter[1100753] "dead after last mention" "RVV" "temp"
                        val _indexOfInterest[1916368]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[1916370]:_ic_chpl_direct_counted_range_iter_helper[1100497] "dead at end of block" "expr temp" "temp"
                        const-val call_tmp[1916372]:_ir_chpl_direct_counted_range_iter_helper[1100503] "dead at end of block" "expr temp" "maybe param" "temp"
                        const-val ret_tmp[1916374]:_ir_chpl_direct_counted_range_iter_helper[1100503] "temp"
                        const-val low[1916966]:int(64)[13] "temp"
                        (1916971 'move' low[1916966](1916968 '.v' _iterator[1860878] F0_low[1952071]))
                        const-val count[1916973]:int(64)[13] "temp"
                        (1916978 'move' count[1916973](1916975 '.v' _iterator[1860878] F1_count[1952075]))
                        (1916377 call chpl_direct_counted_range_iter_helper[1099055] low[1916966] count[1916973] ret_tmp[1916374])
                        (1916381 'move' call_tmp[1916372] ret_tmp[1916374])
                        (1916384 'move' _iterator[1916370](1916387 call _getIterator[1100512] call_tmp[1916372]))
                        {
                          val ret[1916390]:_ir_chpl_direct_counted_range_iter_helper[1100503] "dead after last mention" "RVV" "temp"
                          val call_tmp[1916392]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val tmp[1916394]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                          const-val tmp[1916396]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                          const-val call_tmp[1916398]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val count[1916400]:int(64)[13] "temp"
                          (1916402 'move' count[1916400](1916404 '.v' _iterator[1916370] F1_count[1956547]))
                          (1916407 'move' call_tmp[1916398](1916410 call <[946327] count[1916400]))
                          (1916412 'move' tmp[1916396] call_tmp[1916398])
                          (1916415 'move' tmp[1916394] call_tmp[1916398])
                          const-val call_tmp[1916418]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (1916420 'move' call_tmp[1916418] call_tmp[1916398])
                          if call_tmp[1916398]
                          {
                            (1916426 call boundsCheckHalt[210084] "With a negative count, the range must have a last index.")
                          }
                          const-val tmp[1916429]:2*int(64)[1037179] "dead at end of block" "const" "insert auto destroy" "temp"
                          val tmp[1916431]:2*int(64)[1037179] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                          const-val tmp[1916433]:bool[10] "dead after last mention" "maybe param" "temp"
                          const-val call_tmp[1916435]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val count[1916437]:int(64)[13] "temp"
                          (1916439 'move' count[1916437](1916441 '.v' _iterator[1916370] F1_count[1956547]))
                          (1916444 'move' call_tmp[1916435](1916447 call ==[435686] count[1916437] 0))
                          (1916450 'move' tmp[1916433] call_tmp[1916435])
                          if call_tmp[1916435]
                          {
                            const-val tmp[1916455]:2*int(64)[1037179] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                            val call_tmp[1916457]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                            const-val call_tmp[1916459]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                            const-val low[1916461]:int(64)[13] "temp"
                            (1916463 'move' low[1916461](1916465 '.v' _iterator[1916370] F0_low[1956543]))
                            (1916468 'move' call_tmp[1916459](1916471 call _cast[974684] low[1916461]))
                            const-val call_tmp[1916473]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1916475]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1916477 'move' coerce_tmp[1916475](1916479 'cast' uint(64)[115] 1))
                            (1916482 'move' call_tmp[1916473](1916485 call -[957077] call_tmp[1916459]))
                            const-val call_tmp[1916487]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                            (1916489 'move' call_tmp[1916487](1916492 call _cast[951465] call_tmp[1916473]))
                            const-val ret_tmp[1916494]:2*int(64)[1037179] "temp"
                            const-val low[1916496]:int(64)[13] "temp"
                            (1916498 'move' low[1916496](1916500 '.v' _iterator[1916370] F0_low[1956543]))
                            (1916504 call _build_tuple[1037137] low[1916496] call_tmp[1916487] ret_tmp[1916494])
                            (1916508 'move' tmp[1916455] ret_tmp[1916494])
                            (1916511 'move' tmp[1916431] tmp[1916455])
                          }
                          {
                            const-val tmp[1916515]:2*int(64)[1037179] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                            val call_tmp[1916517]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                            const-val call_tmp[1916519]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                            const-val count[1916521]:int(64)[13] "temp"
                            (1916523 'move' count[1916521](1916525 '.v' _iterator[1916370] F1_count[1956547]))
                            (1916528 'move' call_tmp[1916519] count[1916521])
                            const-val call_tmp[1916531]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                            const-val count[1916533]:int(64)[13] "temp"
                            (1916535 'move' count[1916533](1916537 '.v' _iterator[1916370] F1_count[1956547]))
                            (1916540 'move' call_tmp[1916531](1916543 call -[957110] count[1916533]))
                            const-val call_tmp[1916545]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                            const-val low[1916547]:int(64)[13] "temp"
                            (1916549 'move' low[1916547](1916551 '.v' _iterator[1916370] F0_low[1956543]))
                            (1916554 'move' call_tmp[1916545](1916557 call +[439694] low[1916547] call_tmp[1916531]))
                            const-val ret_tmp[1916560]:2*int(64)[1037179] "temp"
                            const-val low[1916562]:int(64)[13] "temp"
                            (1916564 'move' low[1916562](1916566 '.v' _iterator[1916370] F0_low[1956543]))
                            (1916570 call _build_tuple[1037137] low[1916562] call_tmp[1916545] ret_tmp[1916560])
                            (1916574 'move' tmp[1916515] ret_tmp[1916560])
                            (1916577 'move' tmp[1916431] tmp[1916515])
                          }
                          (1916581 '=' tmp[1916429] tmp[1916431])
                          (1916584 'noop')
                          1
                          ref call_tmp[1916586]:_ref(int(64))[934535] "dead at end of block" "maybe param" "reference to a const" "temp"
                          (1916588 'move' call_tmp[1916586](1916590 '.' tmp[1916429] x0[1037175]))
                          const-val start[1916593]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                          const-val coerce_tmp[1916595]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                          (1916597 'move' coerce_tmp[1916595](1916599 'deref' call_tmp[1916586]))
                          (1916601 '=' start[1916593] coerce_tmp[1916595])
                          (1916604 'noop')
                          ref call_tmp[1916605]:_ref(int(64))[934535] "dead at end of block" "maybe param" "reference to a const" "temp"
                          (1916607 'move' call_tmp[1916605](1916609 '.' tmp[1916429] x1[1037177]))
                          const-val end[1916612]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                          const-val coerce_tmp[1916614]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                          (1916616 'move' coerce_tmp[1916614](1916618 'deref' call_tmp[1916605]))
                          (1916620 '=' end[1916612] coerce_tmp[1916614])
                          (1916623 'noop')
                          val _indexOfInterest[1916624]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                          val _iterator[1916626]:_ic_chpl_direct_param_stride_range_iter[1100243] "dead at end of block" "expr temp" "temp"
                          const-val call_tmp[1916628]:_ir_chpl_direct_param_stride_range_iter[1100249] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val ret_tmp[1916630]:_ir_chpl_direct_param_stride_range_iter[1100249] "temp"
                          (1916633 call chpl_direct_param_stride_range_iter[1099481] coerce_tmp[1916595] coerce_tmp[1916614] ret_tmp[1916630])
                          (1916637 'move' call_tmp[1916628] ret_tmp[1916630])
                          (1916640 'move' _iterator[1916626](1916643 call _getIterator[1100258] call_tmp[1916628]))
                          {
                            val ret[1916646]:_ir_chpl_direct_param_stride_range_iter[1100249] "dead after last mention" "RVV" "temp"
                            val call_tmp[1916648]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                            (1916651 call chpl_range_check_stride[1099801])
                            val i[1916652]:int(64)[13] "dead at end of block" "insert auto destroy"
                            val call_tmp[1916654]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                            (1916656 'move' i[1916652] 0)
                            val call_tmp[1916659]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                            const-val default_arg_first[1916661]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                            const-val low[1916663]:int(64)[13] "temp"
                            (1916665 'move' low[1916663](1916667 '.v' _iterator[1916626] F0_low[1958041]))
                            (1916670 'move' default_arg_first[1916661](1916673 call chpl_checkIfRangeIterWillOverflow_default_first[1100155] low[1916663]))
                            const-val default_arg_last[1916675]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                            const-val high[1916677]:int(64)[13] "temp"
                            (1916679 'move' high[1916677](1916681 '.v' _iterator[1916626] F1_high[1958045]))
                            (1916684 'move' default_arg_last[1916675](1916687 call chpl_checkIfRangeIterWillOverflow_default_last[1100183] high[1916677]))
                            const-val _return_tmp_[1916689]:bool[10] "dead after last mention" "temp"
                            const-val low[1916691]:int(64)[13] "temp"
                            (1916693 'move' low[1916691](1916695 '.v' _iterator[1916626] F0_low[1958041]))
                            const-val high[1916698]:int(64)[13] "temp"
                            (1916700 'move' high[1916698](1916702 '.v' _iterator[1916626] F1_high[1958045]))
                            (1916705 'move' _return_tmp_[1916689](1916708 call chpl_checkIfRangeIterWillOverflow[1093055] low[1916691] high[1916698] 1 default_arg_first[1916661] default_arg_last[1916675] 1))
                            CForLoop[1916715]
                            {
                              const-val yret[1916744]:int(64)[13] "dead after last mention" "YVV" "temp"
                              (1916746 'move' yret[1916744] i[1916652])
                              const-val _yieldedIndex[1916749]:int(64)[13] "temp"
                              (1916751 'move' _yieldedIndex[1916749] i[1916652])
                              {
                                const-val i[1916755]:int(64)[13] "const" "index var" "insert auto destroy"
                                (1916757 'move' i[1916755] _yieldedIndex[1916749])
                                const-val yret[1916760]:int(64)[13] "dead after last mention" "YVV" "temp"
                                (1916762 'move' yret[1916760] _yieldedIndex[1916749])
                                const-val _yieldedIndex[1916765]:int(64)[13] "temp"
                                (1916767 'move' _yieldedIndex[1916765] _yieldedIndex[1916749])
                                {
                                  const-val i[1916771]:int(64)[13] "const" "index var" "insert auto destroy"
                                  (1916773 'move' i[1916771] _yieldedIndex[1916765])
                                  const-val yret[1916776]:int(64)[13] "dead after last mention" "YVV" "temp"
                                  (1916778 'move' yret[1916776] _yieldedIndex[1916765])
                                  const-val _yieldedIndex[1916814]:int(64)[13] "temp"
                                  (1916964 'move' _yieldedIndex[1916814] _yieldedIndex[1916765])
                                  {
                                    const-val j[1916816]:int(64)[13] "const" "index var" "insert auto destroy"
                                    (1916818 'move' j[1916816] _yieldedIndex[1916814])
                                    {
                                      const-val call_tmp[1916822]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                      (1916824 'move' call_tmp[1916822](1916827 call +[439694] i[1860869] j[1916816]))
                                      const-val call_tmp[1916830]:int(64)[13] "dead at end of block" "maybe param" "temp"
                                      (1916832 'move' call_tmp[1916830](1916835 call orderToIndex[1100997] view[1179808] call_tmp[1916822]))
                                      const-val idx[1916838]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                      (1916840 'move' idx[1916838] call_tmp[1916830])
                                      ref call_tmp[1916843]:_ref(uint(8))[934871] "dead after last mention" "maybe param" "temp"
                                      ref _this_tmp_[1916845]:_ref(c_ptr(uint(8)))[935395] "dead after last mention" "temp"
                                      (1916847 'move' _this_tmp_[1916845](1916850 call buff[758003] this[1179686]))
                                      val coerce_tmp[1916852]:c_ptr(uint(8))[935386] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                      (1916854 'move' coerce_tmp[1916852](1916856 'deref' _this_tmp_[1916845]))
                                      (1916858 'move' call_tmp[1916843](1916861 call this[952013] coerce_tmp[1916852] idx[1916838]))
                                      ref call_tmp[1916864]:_ref(uint(8))[934871] "dead after last mention" "maybe param" "temp"
                                      ref _this_tmp_[1916866]:_ref(c_ptr(uint(8)))[935395] "dead after last mention" "reference to a const" "temp"
                                      (1916868 'move' _this_tmp_[1916866](1916871 call buff[758003] localNeedle[1180433]))
                                      val coerce_tmp[1916873]:c_ptr(uint(8))[935386] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                      (1916875 'move' coerce_tmp[1916873](1916877 'deref' _this_tmp_[1916866]))
                                      (1916879 'move' call_tmp[1916864](1916882 call this[952013] coerce_tmp[1916873] j[1916816]))
                                      const-val call_tmp[1916885]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                      const-val coerce_tmp[1916887]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                      (1916889 'move' coerce_tmp[1916887](1916891 'deref' call_tmp[1916843]))
                                      const-val coerce_tmp[1916893]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                      (1916895 'move' coerce_tmp[1916893](1916897 'deref' call_tmp[1916864]))
                                      (1916899 'move' call_tmp[1916885](1916902 call !=[436092] coerce_tmp[1916887] coerce_tmp[1916893]))
                                      const-val call_tmp[1916905]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                      (1916907 'move' call_tmp[1916905] call_tmp[1916885])
                                      if call_tmp[1916905]
                                      {
                                        (1916955 call _freeIterator[1100431] _iterator[1916626])
                                        (1916958 call chpl__autoDestroy[1472606] tmp[1916429])
                                        (1916961 call _freeIterator[1100681] _iterator[1916370])
                                        break _breakLabel[1861037] _breakLabel[1861037]
                                      }
                                      const-val call_tmp[1916915]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                      (1916917 'move' call_tmp[1916915](1916920 call -[957110] nLen[1179777]))
                                      const-val call_tmp[1916922]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                      (1916924 'move' call_tmp[1916922](1916927 call ==[435686] j[1916816] call_tmp[1916915]))
                                      const-val call_tmp[1916930]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                      (1916932 'move' call_tmp[1916930] call_tmp[1916922])
                                      if call_tmp[1916930]
                                      {
                                        {
                                          const-val call_tmp[1916938]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                          (1916940 'move' call_tmp[1916938](1916943 call orderToIndex[1100997] view[1179808] i[1860869]))
                                          (1916947 call =[435385] localRet[1179762] call_tmp[1916938])
                                        }
                                      }
                                    }
                                    label _continueLabel[1916951]
                                  }
                                }
                              }
                              {
                                const-val low[1916717]:int(64)[13] "temp"
                                (1916719 'move' low[1916717](1916721 '.v' _iterator[1916626] F0_low[1958041]))
                                (1916724 '=' i[1916652] low[1916717])
                              }
                              {
                                const-val high[1916728]:int(64)[13] "temp"
                                (1916730 'move' high[1916728](1916732 '.v' _iterator[1916626] F1_high[1958045]))
                                (1916735 '<=' i[1916652] high[1916728])
                              }
                              {
                                val call_tmp[1916739]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                (1916741 '+=' i[1916652] 1)
                              }
                            }
                            label _endchpl_direct_param_stride_range_iter[1916797]
                          }
                          (1916800 call _freeIterator[1100431] _iterator[1916626])
                          (1916803 call chpl__autoDestroy[1472606] tmp[1916429])
                          label _endchpl_direct_counted_range_iter_helper[1916805]
                        }
                        (1916808 call _freeIterator[1100681] _iterator[1916370])
                        label _endchpl_direct_counted_range_iter[1916810]
                      }
                      label _breakLabel[1861037]
                      (1861040 call _freeIterator[1100931] _iterator[1860878])
                    }
                    const-val tmp[1861042]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val tmp[1861044]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    const-val call_tmp[1861046]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1861048 'move' call_tmp[1861046](1861051 call !=[436070] localRet[1179762] -1))
                    (1861054 'move' tmp[1861044] call_tmp[1861046])
                    (1861057 'move' tmp[1861042] tmp[1861044])
                    const-val call_tmp[1861060]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1861062 'move' call_tmp[1861060] tmp[1861042])
                    if call_tmp[1861060]
                    {
                      break _breakLabel[1180832] _breakLabel[1180832]
                    }
                  }
                  label _continueLabel[1861070]
                }
                {
                  (1860830 '=' i[1860783] coerce_tmp[1860799])
                }
                {
                  (1860834 '<=' i[1860783] end[1860816])
                }
                {
                  val call_tmp[1860838]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (1860840 '+=' i[1860783] 1)
                }
              }
              label _endthese[1860863]
            }
            label _breakLabel[1180832]
            (1799234 call _freeIterator[1098963] _iterator[1180543])
          }
          (1799237 call chpl__autoDestroy[1472309] searchSpace[1180462])
          (1799240 call chpl__autoDestroy[1478633] call_tmp[1180477])
          (1799243 call chpl__autoDestroy[1399678] localNeedle[1180433])
        }
        (1180852 call =[435385] ret[1179715] localRet[1179762])
        (1799247 call chpl__autoDestroy[1472309] view[1179808])
        (1799250 call chpl__autoDestroy[1478588] tmp[1179791])
      }
    }
    (1180858 'move' ret[1179698] ret[1179715])
    gotoReturn _end_doSearchUTF8[1180866] _end_doSearchUTF8[1180866]
    label _end_doSearchUTF8[1180866]
    (1180868 return ret[1179698])
  }
  function _ref(string)[935902].buffLen[757925](ref arg this[757929]:_ref(string)[935902]) ref : _ref(int(64))[934535] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[757939]:_ref(int(64))[934535] "dead after last mention" "RVV" "temp"
    ref call_tmp[757946]:_ref(int(64))[934535] "dead after last mention" "maybe param" "temp"
    (757949 'move' call_tmp[757946](757933 '.' this[757929] buffLen[30719]))
    (757944 'move' ret[757939] call_tmp[757946])
    (757941 return ret[757939])
  }
  function _ref(string)[935902].buffSize[757951](ref arg this[757955]:_ref(string)[935902]) ref : _ref(int(64))[934535] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[757965]:_ref(int(64))[934535] "dead after last mention" "RVV" "temp"
    ref call_tmp[757972]:_ref(int(64))[934535] "dead after last mention" "maybe param" "temp"
    (757975 'move' call_tmp[757972](757959 '.' this[757955] buffSize[30725]))
    (757970 'move' ret[757965] call_tmp[757972])
    (757967 return ret[757965])
  }
  function _ref(string)[935902].cachedNumCodepoints[757977](ref arg this[757981]:_ref(string)[935902]) ref : _ref(int(64))[934535] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[757991]:_ref(int(64))[934535] "dead after last mention" "RVV" "temp"
    ref call_tmp[757998]:_ref(int(64))[934535] "dead after last mention" "maybe param" "temp"
    (758001 'move' call_tmp[757998](757985 '.' this[757981] cachedNumCodepoints[30731]))
    (757996 'move' ret[757991] call_tmp[757998])
    (757993 return ret[757991])
  }
  function _ref(string)[935902].buff[758003](ref arg this[758007]:_ref(string)[935902]) ref : _ref(c_ptr(uint(8)))[935395] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[758017]:_ref(c_ptr(uint(8)))[935395] "dead after last mention" "RVV" "temp"
    ref call_tmp[758024]:_ref(c_ptr(uint(8)))[935395] "dead after last mention" "maybe param" "temp"
    (758027 'move' call_tmp[758024](758011 '.' this[758007] buff[30737]))
    (758022 'move' ret[758017] call_tmp[758024])
    (758019 return ret[758017])
  }
  function _ref(string)[935902].isOwned[758029](ref arg this[758033]:_ref(string)[935902]) ref : _ref(bool)[935162] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[758043]:_ref(bool)[935162] "dead after last mention" "RVV" "temp"
    ref call_tmp[758050]:_ref(bool)[935162] "dead after last mention" "maybe param" "temp"
    (758053 'move' call_tmp[758050](758037 '.' this[758033] isOwned[30743]))
    (758048 'move' ret[758043] call_tmp[758050])
    (758045 return ret[758043])
  }
  function _ref(string)[935902].hasEscapes[758055](ref arg this[758059]:_ref(string)[935902]) ref : _ref(bool)[935162] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[758069]:_ref(bool)[935162] "dead after last mention" "RVV" "temp"
    ref call_tmp[758076]:_ref(bool)[935162] "dead after last mention" "maybe param" "temp"
    (758079 'move' call_tmp[758076](758063 '.' this[758059] hasEscapes[30749]))
    (758074 'move' ret[758069] call_tmp[758076])
    (758071 return ret[758069])
  }
  function _ref(string)[935902].locale_id[758081](ref arg this[758085]:_ref(string)[935902]) ref : _ref(int(32))[934589] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[758095]:_ref(int(32))[934589] "dead after last mention" "RVV" "temp"
    ref call_tmp[758102]:_ref(int(32))[934589] "dead after last mention" "maybe param" "temp"
    (758105 'move' call_tmp[758102](758089 '.' this[758085] locale_id[30754]))
    (758100 'move' ret[758095] call_tmp[758102])
    (758097 return ret[758095])
  }
  type string[26] val buffLen[30719]:int(64)[13] val buffSize[30725]:int(64)[13] val cachedNumCodepoints[30731]:int(64)[13] val buff[30737]:c_ptr(uint(8))[935386] val isOwned[30743]:bool[10] val hasEscapes[30749]:bool[10] val locale_id[30754]:int(32)[95]
  function _ref(string)[935902].size[32769](const  ref arg this[32771]:_ref(string)[935902]) : int(64)[13] "inline" "method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[503947]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[599722]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (599725 'move' call_tmp[599722](369909 call numCodepoints[32823] this[32771]))
    (503952 'move' ret[503947] call_tmp[599722])
    (503949 return ret[503947])
  }
  function _ref(string)[935902].indices[32785](const  ref arg this[32787]:_ref(string)[935902], ref arg _retArg[1782008]:_ref(range(int(64),bounded,false))[1023990]) : void[4] "fn returns via _retArg" "inline" "method" "no parens" "resolved" "fn synchronization free"
  {
    const-val ret[503956]:range(int(64),bounded,false)[1023946] "dead after last mention" "RVV" "temp"
    const-val call_tmp[599729]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (599732 'move' call_tmp[599729](369913 call size[32769] this[32787]))
    const-val call_tmp[599734]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (599737 'move' call_tmp[599734](32795 call -[957110] call_tmp[599729]))
    const-val call_tmp[599739]:range(int(64),bounded,false)[1023946] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1784068]:range(int(64),bounded,false)[1023946] "temp"
    (32797 call chpl_build_bounded_range[455195] 0 call_tmp[599734] ret_tmp[1784068])
    (1784071 'move' call_tmp[599739] ret_tmp[1784068])
    (503961 'move' ret[503956] call_tmp[599739])
    (1782010 '=' _retArg[1782008] ret[503956])
    (1782012 return _void[55])
  }
  function _ref(string)[935902].numBytes[32807](const  ref arg this[32809]:_ref(string)[935902]) : int(64)[13] "inline" "method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[503965]:int(64)[13] "dead after last mention" "RVV" "temp"
    ref call_tmp[599746]:_ref(int(64))[934535] "dead after last mention" "maybe param" "temp"
    (599749 'move' call_tmp[599746](369918 call buffLen[757925] this[32809]))
    (503970 'move' ret[503965](503969 'deref' call_tmp[599746]))
    (503967 return ret[503965])
  }
  function _ref(string)[935902].numCodepoints[32823](const  ref arg this[32825]:_ref(string)[935902]) : int(64)[13] "inline" "method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[503974]:int(64)[13] "dead after last mention" "RVV" "temp"
    ref call_tmp[599753]:_ref(int(64))[934535] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (599756 'move' call_tmp[599753](32831 call cachedNumCodepoints[757977] this[32825]))
    const-val n[32834]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1017496]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1017500 'move' coerce_tmp[1017496](1017498 'deref' call_tmp[599753]))
    (1794000 '=' n[32834] coerce_tmp[1017496])
    (540359 'noop')
    {
      const-val call_tmp[599763]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (599766 'move' call_tmp[599763](32844 call countNumCodepoints[181346] this[32825]))
      const-val call_tmp[599768]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (599771 'move' call_tmp[599768](32845 call !=[436070] n[32834] call_tmp[599763]))
      const-val call_tmp[599773]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (599776 'move' call_tmp[599773] call_tmp[599768])
      if call_tmp[599773]
      {
        (32866 call halt[154071] "Encountered corrupt string metadata")
      }
    }
    (503979 'move' ret[503974] n[32834])
    gotoReturn _end_numCodepoints[503972] _end_numCodepoints[503972]
    label _end_numCodepoints[503972]
    (503976 return ret[503974])
  }
  function _ref(string)[935902].localize[32886](const  ref arg this[32888]:_ref(string)[935902], ref arg _retArg[1782158]:_ref(string)[935902]) : void[4] "fn returns via _retArg" "inline" "method" "resolved" "fn synchronization free"
  {
    const-val ret[503985]:string[26] "dead after last mention" "RVV" "temp"
    {
      const-val call_tmp[599805]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1770840]:string[26] "temp"
      (32907 call createStringWithBorrowedBuffer[29899] this[32888] ret_tmp[1770840])
      (1770843 'move' call_tmp[599805] ret_tmp[1770840])
      (952236 'move' ret[503985] call_tmp[599805])
      gotoReturn _end_localize[503983] _end_localize[503983]
    }
    label _end_localize[503983]
    (1782160 '=' _retArg[1782158] ret[503985])
    (1782162 return _void[55])
  }
  function _ref(string)[935902].c_str[32932](const  ref arg this[32934]:_ref(string)[935902]) : c_string[19] "inline" "method" "resolved"
  {
    val ret[504003]:c_string[19] "dead after last mention" "RVV" "temp"
    const-val call_tmp[599810]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (599813 'move' call_tmp[599810](32943 call getCStr[952239] this[32934]))
    (952951 'move' ret[504003] call_tmp[599810])
    (504005 return ret[504003])
  }
  function _ic_chpl_bytes__ref_string[1105204].advance[1105230](const in arg this[1105232]:_ic_chpl_bytes__ref_string[1105204]) : void[4] "auto ii" "method" "resolved"
  {
    const-val more[1942110]:int(64)[13]
    (1942138 'move' more[1942110](1942135 '.v' this[1105232] more[1105207]))
    const-val tmp[1942113]:bool[10] "temp"
    (1942120 'move' tmp[1942113](1942117 '==' more[1942110] 2))
    if tmp[1942113]
    {
      gotoIterResume _jump_2[1942102] _jump_2[1942102]
    }
    const-val tmp[1942125]:bool[10] "temp"
    (1942130 'move' tmp[1942125](1942127 '==' more[1942110] -2))
    if tmp[1942125]
    {
      gotoIterResume _jump_break_2[1942104] _jump_break_2[1942104]
    }
    val ret[504067]:_ir_chpl_bytes__ref_string[1105210] "dead at end of block" "RVV" "temp"
    const-val call_tmp[600182]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1782026]:string[26] "temp"
    ref tmp[1940113]:_ref(string)[935902] "temp"
    (1940118 'move' tmp[1940113](1940115 '.v' this[1105232] F0_this[1940093]))
    (33588 call localize[32886] tmp[1940113] ret_tmp[1782026])
    (1782029 'move' call_tmp[600182] ret_tmp[1782026])
    val tmp[1940120]:string[26] "temp"
    (540411 'move' tmp[1940120] call_tmp[600182])
    (1940122 '.=' this[1105232] F1_localThis[1940097] tmp[1940120])
    val _indexOfInterest[33614]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    ref call_tmp[600189]:_ref(int(64))[934535] "dead at end of block" "maybe param" "temp"
    ref tmp[1940126]:_ref(string)[935902] "temp"
    (1940131 'move' tmp[1940126](1940128 '.' this[1105232] F1_localThis[1940097]))
    (600192 'move' call_tmp[600189](33630 call buffLen[757925] tmp[1940126]))
    const-val call_tmp[600194]:_ir_chpl_direct_counted_range_iter[1100753] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1105363]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1105367 'move' coerce_tmp[1105363](1105365 'deref' call_tmp[600189]))
    const-val ret_tmp[1784336]:_ir_chpl_direct_counted_range_iter[1100753] "temp"
    (33634 call chpl_direct_counted_range_iter[458054] 0 coerce_tmp[1105363] ret_tmp[1784336])
    (1784339 'move' call_tmp[600194] ret_tmp[1784336])
    val tmp[1940133]:_ic_chpl_direct_counted_range_iter[1100747] "temp"
    (33624 'move' tmp[1940133](33622 call _getIterator[1100762] call_tmp[600194]))
    (1940135 '.=' this[1105232] F2__iterator[1940099] tmp[1940133])
    val ret[1839100]:_ir_chpl_direct_counted_range_iter[1100753] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[1839102]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[1839106]:_ir_chpl_direct_counted_range_iter_helper[1100503] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[1839108]:_ir_chpl_direct_counted_range_iter_helper[1100503] "temp"
    const-val low[1839213]:int(64)[13] "temp"
    ref tmp[1940139]:_ref(_ic_chpl_direct_counted_range_iter)[1100890] "temp"
    (1940144 'move' tmp[1940139](1940141 '.' this[1105232] F2__iterator[1940099]))
    (1839218 'move' low[1839213](1839215 '.v' tmp[1940139] F0_low[1952071]))
    const-val count[1839220]:int(64)[13] "temp"
    ref tmp[1940146]:_ref(_ic_chpl_direct_counted_range_iter)[1100890] "temp"
    (1940151 'move' tmp[1940146](1940148 '.' this[1105232] F2__iterator[1940099]))
    (1839225 'move' count[1839220](1839222 '.v' tmp[1940146] F1_count[1952075]))
    (1839111 call chpl_direct_counted_range_iter_helper[1099055] low[1839213] count[1839220] ret_tmp[1839108])
    (1839115 'move' call_tmp[1839106] ret_tmp[1839108])
    val tmp[1940153]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
    (1839118 'move' tmp[1940153](1839121 call _getIterator[1100512] call_tmp[1839106]))
    (1940155 '.=' this[1105232] F3__iterator[1940101] tmp[1940153])
    val ret[1900996]:_ir_chpl_direct_counted_range_iter_helper[1100503] "dead after last mention" "RVV" "temp"
    val call_tmp[1900998]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val tmp[1901000]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1901002]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    const-val call_tmp[1901004]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[1901421]:int(64)[13] "temp"
    ref tmp[1940159]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
    (1940164 'move' tmp[1940159](1940161 '.' this[1105232] F3__iterator[1940101]))
    (1901426 'move' count[1901421](1901423 '.v' tmp[1940159] F1_count[1956547]))
    (1901006 'move' call_tmp[1901004](1901009 call <[946327] count[1901421]))
    (1901011 'move' tmp[1901002] call_tmp[1901004])
    (1901014 'move' tmp[1901000] call_tmp[1901004])
    const-val call_tmp[1901017]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1901019 'move' call_tmp[1901017] call_tmp[1901004])
    if call_tmp[1901004]
    {
      (1901025 call boundsCheckHalt[210084] "With a negative count, the range must have a last index.")
    }
    val tmp[1901030]:2*int(64)[1037179] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
    const-val tmp[1901032]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1901034]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[1901428]:int(64)[13] "temp"
    ref tmp[1940166]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
    (1940171 'move' tmp[1940166](1940168 '.' this[1105232] F3__iterator[1940101]))
    (1901433 'move' count[1901428](1901430 '.v' tmp[1940166] F1_count[1956547]))
    (1901036 'move' call_tmp[1901034](1901039 call ==[435686] count[1901428] 0))
    (1901042 'move' tmp[1901032] call_tmp[1901034])
    if call_tmp[1901034]
    {
      const-val tmp[1901047]:2*int(64)[1037179] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      val call_tmp[1901049]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[1901051]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val low[1901435]:int(64)[13] "temp"
      ref tmp[1940173]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
      (1940178 'move' tmp[1940173](1940175 '.' this[1105232] F3__iterator[1940101]))
      (1901440 'move' low[1901435](1901437 '.v' tmp[1940173] F0_low[1956543]))
      (1901053 'move' call_tmp[1901051](1901056 call _cast[974684] low[1901435]))
      const-val call_tmp[1901058]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1901060]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1901062 'move' coerce_tmp[1901060](1901064 'cast' uint(64)[115] 1))
      (1901067 'move' call_tmp[1901058](1901070 call -[957077] call_tmp[1901051]))
      const-val call_tmp[1901072]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1901074 'move' call_tmp[1901072](1901077 call _cast[951465] call_tmp[1901058]))
      const-val ret_tmp[1901079]:2*int(64)[1037179] "temp"
      const-val low[1901442]:int(64)[13] "temp"
      ref tmp[1940180]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
      (1940185 'move' tmp[1940180](1940182 '.' this[1105232] F3__iterator[1940101]))
      (1901447 'move' low[1901442](1901444 '.v' tmp[1940180] F0_low[1956543]))
      (1901082 call _build_tuple[1037137] low[1901442] call_tmp[1901072] ret_tmp[1901079])
      (1901086 'move' tmp[1901047] ret_tmp[1901079])
      (1901089 'move' tmp[1901030] tmp[1901047])
    }
    {
      const-val tmp[1901093]:2*int(64)[1037179] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      val call_tmp[1901095]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[1901097]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val count[1901449]:int(64)[13] "temp"
      ref tmp[1940187]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
      (1940192 'move' tmp[1940187](1940189 '.' this[1105232] F3__iterator[1940101]))
      (1901454 'move' count[1901449](1901451 '.v' tmp[1940187] F1_count[1956547]))
      (1901099 'move' call_tmp[1901097] count[1901449])
      const-val call_tmp[1901102]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val count[1901456]:int(64)[13] "temp"
      ref tmp[1940194]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
      (1940199 'move' tmp[1940194](1940196 '.' this[1105232] F3__iterator[1940101]))
      (1901461 'move' count[1901456](1901458 '.v' tmp[1940194] F1_count[1956547]))
      (1901104 'move' call_tmp[1901102](1901107 call -[957110] count[1901456]))
      const-val call_tmp[1901109]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val low[1901463]:int(64)[13] "temp"
      ref tmp[1940201]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
      (1940206 'move' tmp[1940201](1940203 '.' this[1105232] F3__iterator[1940101]))
      (1901468 'move' low[1901463](1901465 '.v' tmp[1940201] F0_low[1956543]))
      (1901111 'move' call_tmp[1901109](1901114 call +[439694] low[1901463] call_tmp[1901102]))
      const-val ret_tmp[1901117]:2*int(64)[1037179] "temp"
      const-val low[1901470]:int(64)[13] "temp"
      ref tmp[1940208]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
      (1940213 'move' tmp[1940208](1940210 '.' this[1105232] F3__iterator[1940101]))
      (1901475 'move' low[1901470](1901472 '.v' tmp[1940208] F0_low[1956543]))
      (1901120 call _build_tuple[1037137] low[1901470] call_tmp[1901109] ret_tmp[1901117])
      (1901124 'move' tmp[1901093] ret_tmp[1901117])
      (1901127 'move' tmp[1901030] tmp[1901093])
    }
    const tmp[1940215]:2*int(64)[1037179] "temp"
    (1901131 '=' tmp[1940215] tmp[1901030])
    (1940217 '.=' this[1105232] F4_tmp[1940103] tmp[1940215])
    (1901134 'noop')
    1
    ref call_tmp[1901136]:_ref(int(64))[934535] "dead at end of block" "maybe param" "reference to a const" "temp"
    ref tmp[1940221]:_ref(2*int(64))[1037252] "temp"
    (1940226 'move' tmp[1940221](1940223 '.' this[1105232] F4_tmp[1940103]))
    (1901138 'move' call_tmp[1901136](1901140 '.' tmp[1940221] x0[1037175]))
    const-val start[1901143]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1901145]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1901147 'move' coerce_tmp[1901145](1901149 'deref' call_tmp[1901136]))
    (1901151 '=' start[1901143] coerce_tmp[1901145])
    (1901154 'noop')
    ref call_tmp[1901155]:_ref(int(64))[934535] "dead at end of block" "maybe param" "reference to a const" "temp"
    ref tmp[1940228]:_ref(2*int(64))[1037252] "temp"
    (1940233 'move' tmp[1940228](1940230 '.' this[1105232] F4_tmp[1940103]))
    (1901157 'move' call_tmp[1901155](1901159 '.' tmp[1940228] x1[1037177]))
    const-val end[1901162]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1901164]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1901166 'move' coerce_tmp[1901164](1901168 'deref' call_tmp[1901155]))
    (1901170 '=' end[1901162] coerce_tmp[1901164])
    (1901173 'noop')
    val _indexOfInterest[1901174]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[1901178]:_ir_chpl_direct_param_stride_range_iter[1100249] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[1901180]:_ir_chpl_direct_param_stride_range_iter[1100249] "temp"
    (1901183 call chpl_direct_param_stride_range_iter[1099481] coerce_tmp[1901145] coerce_tmp[1901164] ret_tmp[1901180])
    (1901187 'move' call_tmp[1901178] ret_tmp[1901180])
    val tmp[1940235]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
    (1901190 'move' tmp[1940235](1901193 call _getIterator[1100258] call_tmp[1901178]))
    (1940237 '.=' this[1105232] F5__iterator[1940105] tmp[1940235])
    val ret[1901196]:_ir_chpl_direct_param_stride_range_iter[1100249] "dead after last mention" "RVV" "temp"
    val call_tmp[1901198]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1901201 call chpl_range_check_stride[1099801])
    val call_tmp[1901204]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[1940241]:int(64)[13] "temp"
    (1901206 'move' tmp[1940241] 0)
    (1940243 '.=' this[1105232] F6_i[1940107] tmp[1940241])
    val call_tmp[1901209]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val default_arg_first[1901211]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[1901213]:int(64)[13] "temp"
    ref tmp[1940247]:_ref(_ic_chpl_direct_param_stride_range_iter)[1100386] "temp"
    (1940252 'move' tmp[1940247](1940249 '.' this[1105232] F5__iterator[1940105]))
    (1901215 'move' low[1901213](1901217 '.v' tmp[1940247] F0_low[1958041]))
    (1901220 'move' default_arg_first[1901211](1901223 call chpl_checkIfRangeIterWillOverflow_default_first[1100155] low[1901213]))
    const-val default_arg_last[1901225]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[1901227]:int(64)[13] "temp"
    ref tmp[1940254]:_ref(_ic_chpl_direct_param_stride_range_iter)[1100386] "temp"
    (1940259 'move' tmp[1940254](1940256 '.' this[1105232] F5__iterator[1940105]))
    (1901229 'move' high[1901227](1901231 '.v' tmp[1940254] F1_high[1958045]))
    (1901234 'move' default_arg_last[1901225](1901237 call chpl_checkIfRangeIterWillOverflow_default_last[1100183] high[1901227]))
    const-val _return_tmp_[1901239]:bool[10] "dead after last mention" "temp"
    const-val low[1901241]:int(64)[13] "temp"
    ref tmp[1940261]:_ref(_ic_chpl_direct_param_stride_range_iter)[1100386] "temp"
    (1940266 'move' tmp[1940261](1940263 '.' this[1105232] F5__iterator[1940105]))
    (1901243 'move' low[1901241](1901245 '.v' tmp[1940261] F0_low[1958041]))
    const-val high[1901248]:int(64)[13] "temp"
    ref tmp[1940268]:_ref(_ic_chpl_direct_param_stride_range_iter)[1100386] "temp"
    (1940273 'move' tmp[1940268](1940270 '.' this[1105232] F5__iterator[1940105]))
    (1901250 'move' high[1901248](1901252 '.v' tmp[1940268] F1_high[1958045]))
    (1901255 'move' _return_tmp_[1901239](1901258 call chpl_checkIfRangeIterWillOverflow[1093055] low[1901241] high[1901248] 1 default_arg_first[1901211] default_arg_last[1901225] 1))
    CForLoop[1901265]
    {
      const-val yret[1901294]:int(64)[13] "dead after last mention" "YVV" "temp"
      const-val tmp[1940275]:int(64)[13] "temp"
      (1940280 'move' tmp[1940275](1940277 '.v' this[1105232] F6_i[1940107]))
      (1901296 'move' yret[1901294] tmp[1940275])
      const-val _yieldedIndex[1901299]:int(64)[13] "temp"
      const-val tmp[1940282]:int(64)[13] "temp"
      (1940287 'move' tmp[1940282](1940284 '.v' this[1105232] F6_i[1940107]))
      (1901301 'move' _yieldedIndex[1901299] tmp[1940282])
      const-val i[1901305]:int(64)[13] "const" "index var" "insert auto destroy"
      (1901307 'move' i[1901305] _yieldedIndex[1901299])
      const-val yret[1901310]:int(64)[13] "dead after last mention" "YVV" "temp"
      (1901312 'move' yret[1901310] _yieldedIndex[1901299])
      const-val _yieldedIndex[1901340]:int(64)[13] "temp"
      (1901419 'move' _yieldedIndex[1901340] _yieldedIndex[1901299])
      const-val i[1901342]:int(64)[13] "const" "index var" "insert auto destroy"
      (1901344 'move' i[1901342] _yieldedIndex[1901340])
      const-val yret[1901347]:int(64)[13] "dead after last mention" "YVV" "temp"
      (1901349 'move' yret[1901347] _yieldedIndex[1901340])
      const-val _yieldedIndex[1901352]:int(64)[13] "temp"
      (1901354 'move' _yieldedIndex[1901352] _yieldedIndex[1901340])
      const-val i[1901357]:int(64)[13] "const" "index var" "insert auto destroy"
      (1901359 'move' i[1901357] _yieldedIndex[1901352])
      const-val yret[1901362]:uint(8)[100] "dead after last mention" "YVV" "temp"
      ref call_tmp[1901364]:_ref(uint(8))[934871] "dead after last mention" "maybe param" "temp"
      ref _this_tmp_[1901366]:_ref(c_ptr(uint(8)))[935395] "dead after last mention" "temp"
      ref tmp[1940289]:_ref(string)[935902] "temp"
      (1940294 'move' tmp[1940289](1940291 '.' this[1105232] F1_localThis[1940097]))
      (1901368 'move' _this_tmp_[1901366](1901371 call buff[758003] tmp[1940289]))
      val coerce_tmp[1901373]:c_ptr(uint(8))[935386] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1901375 'move' coerce_tmp[1901373](1901377 'deref' _this_tmp_[1901366]))
      (1901379 'move' call_tmp[1901364](1901382 call this[952013] coerce_tmp[1901373] _yieldedIndex[1901352]))
      val tmp[1940296]:uint(8)[100] "temp"
      (1901387 'move' tmp[1940296](1901389 'deref' call_tmp[1901364]))
      (1940298 '.=' this[1105232] value[1940111] tmp[1940296])
      const-val tmp[1940302]:uint(8)[100] "temp"
      (1940307 'move' tmp[1940302](1940304 '.v' this[1105232] value[1940111]))
      (1901391 '=' yret[1901362] tmp[1940302])
      (1901394 'noop')
      (1942096 '.=' this[1105232] more[1105207] 2)
      gotoIterEnd _end[1942094] _end[1942094]
      label _jump_break_2[1942104]
      val tmp[1940309]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
      (1940314 'move' tmp[1940309](1940311 '.v' this[1105232] F5__iterator[1940105]))
      (1901413 call _freeIterator[1100431] tmp[1940309])
      ref tmp[1940316]:_ref(2*int(64))[1037252] "temp"
      (1940321 'move' tmp[1940316](1940318 '.' this[1105232] F4_tmp[1940103]))
      (1901416 call chpl__autoDestroy[1472606] tmp[1940316])
      val tmp[1940323]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
      (1940328 'move' tmp[1940323](1940325 '.v' this[1105232] F3__iterator[1940101]))
      (1901400 call _freeIterator[1100681] tmp[1940323])
      val tmp[1940330]:_ic_chpl_direct_counted_range_iter[1100747] "temp"
      (1940335 'move' tmp[1940330](1940332 '.v' this[1105232] F2__iterator[1940099]))
      (1901403 call _freeIterator[1100931] tmp[1940330])
      ref tmp[1940337]:_ref(string)[935902] "temp"
      (1940342 'move' tmp[1940337](1940339 '.' this[1105232] F1_localThis[1940097]))
      (1901406 call chpl__autoDestroy[1399678] tmp[1940337])
      gotoReturn _endchpl_bytes[1766578] _endchpl_bytes[1766578]
      label _jump_2[1942102]
      {
        const-val tmp[1940344]:int(64)[13] "temp"
        ref tmp[1940350]:_ref(_ic_chpl_direct_param_stride_range_iter)[1100386] "temp"
        (1940355 'move' tmp[1940350](1940352 '.' this[1105232] F5__iterator[1940105]))
        (1901269 'move' tmp[1940344](1901271 '.v' tmp[1940350] F0_low[1958041]))
        (1940346 '.=' this[1105232] F7_low[1940109] tmp[1940344])
        val tmp[1940357]:int(64)[13] "temp"
        const-val tmp[1940363]:int(64)[13] "temp"
        (1940368 'move' tmp[1940363](1940365 '.v' this[1105232] F7_low[1940109]))
        (1901274 '=' tmp[1940357] tmp[1940363])
        (1940359 '.=' this[1105232] F6_i[1940107] tmp[1940357])
      }
      {
        const-val high[1901278]:int(64)[13] "temp"
        ref tmp[1940370]:_ref(_ic_chpl_direct_param_stride_range_iter)[1100386] "temp"
        (1940375 'move' tmp[1940370](1940372 '.' this[1105232] F5__iterator[1940105]))
        (1901280 'move' high[1901278](1901282 '.v' tmp[1940370] F1_high[1958045]))
        val tmp[1940377]:int(64)[13] "temp"
        (1940382 'move' tmp[1940377](1940379 '.v' this[1105232] F6_i[1940107]))
        (1901285 '<=' tmp[1940377] high[1901278])
      }
      {
        val call_tmp[1901289]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val tmp[1940384]:int(64)[13] "temp"
        (1940389 'move' tmp[1940384](1940386 '.v' this[1105232] F6_i[1940107]))
        (1901291 '+=' tmp[1940384] 1)
        (1940391 '.=' this[1105232] F6_i[1940107] tmp[1940384])
      }
    }
    label _endchpl_direct_param_stride_range_iter[1901328]
    val tmp[1940395]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
    (1940400 'move' tmp[1940395](1940397 '.v' this[1105232] F5__iterator[1940105]))
    (1901331 call _freeIterator[1100431] tmp[1940395])
    ref tmp[1940402]:_ref(2*int(64))[1037252] "temp"
    (1940407 'move' tmp[1940402](1940404 '.' this[1105232] F4_tmp[1940103]))
    (1901334 call chpl__autoDestroy[1472606] tmp[1940402])
    label _endchpl_direct_counted_range_iter_helper[1901336]
    val tmp[1940409]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
    (1940414 'move' tmp[1940409](1940411 '.v' this[1105232] F3__iterator[1940101]))
    (1839147 call _freeIterator[1100681] tmp[1940409])
    label _endchpl_direct_counted_range_iter[1839149]
    val tmp[1940416]:_ic_chpl_direct_counted_range_iter[1100747] "temp"
    (1940421 'move' tmp[1940416](1940418 '.v' this[1105232] F2__iterator[1940099]))
    (1794016 call _freeIterator[1100931] tmp[1940416])
    ref tmp[1940423]:_ref(string)[935902] "temp"
    (1940428 'move' tmp[1940423](1940425 '.' this[1105232] F1_localThis[1940097]))
    (1794018 call chpl__autoDestroy[1399678] tmp[1940423])
    label _endchpl_bytes[1766578]
    (1942106 '.=' this[1105232] more[1105207] 0)
    label _end[1942094]
    (1942141 return _void[55])
  }
  function _ic_chpl_bytes__ref_string[1105204].zip1[1105239](const in arg this[1105241]:_ic_chpl_bytes__ref_string[1105204]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val ret[1940431]:_ir_chpl_bytes__ref_string[1105210] "dead at end of block" "RVV" "temp"
    const-val call_tmp[1940433]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1940435]:string[26] "temp"
    val localThis[1940437]:string[26] "dead at end of block" "insert auto destroy"
    val _indexOfInterest[1940439]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1940441]:_ic_chpl_direct_counted_range_iter[1100747] "dead at end of block" "expr temp" "temp"
    ref call_tmp[1940443]:_ref(int(64))[934535] "dead at end of block" "maybe param" "temp"
    const-val call_tmp[1940445]:_ir_chpl_direct_counted_range_iter[1100753] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1940447]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    const-val ret_tmp[1940449]:_ir_chpl_direct_counted_range_iter[1100753] "temp"
    val ret[1940451]:_ir_chpl_direct_counted_range_iter[1100753] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[1940453]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1940455]:_ic_chpl_direct_counted_range_iter_helper[1100497] "dead at end of block" "expr temp" "temp"
    const-val call_tmp[1940457]:_ir_chpl_direct_counted_range_iter_helper[1100503] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[1940459]:_ir_chpl_direct_counted_range_iter_helper[1100503] "temp"
    const-val low[1940461]:int(64)[13] "temp"
    const-val count[1940463]:int(64)[13] "temp"
    val ret[1940465]:_ir_chpl_direct_counted_range_iter_helper[1100503] "dead after last mention" "RVV" "temp"
    val call_tmp[1940467]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val tmp[1940469]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1940471]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    const-val call_tmp[1940473]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[1940475]:int(64)[13] "temp"
    const-val call_tmp[1940477]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const tmp[1940479]:2*int(64)[1037179] "dead at end of block" "const" "insert auto destroy" "temp"
    val tmp[1940481]:2*int(64)[1037179] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
    const-val tmp[1940483]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1940485]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[1940487]:int(64)[13] "temp"
    val tmp[1940489]:2*int(64)[1037179] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[1940491]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1940493]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[1940495]:int(64)[13] "temp"
    val call_tmp[1940497]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[1940499]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val call_tmp[1940501]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[1940503]:2*int(64)[1037179] "temp"
    const-val low[1940505]:int(64)[13] "temp"
    val tmp[1940507]:2*int(64)[1037179] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[1940509]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1940511]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[1940513]:int(64)[13] "temp"
    val call_tmp[1940515]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[1940517]:int(64)[13] "temp"
    val call_tmp[1940519]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[1940521]:int(64)[13] "temp"
    val ret_tmp[1940523]:2*int(64)[1037179] "temp"
    const-val low[1940525]:int(64)[13] "temp"
    ref call_tmp[1940527]:_ref(int(64))[934535] "dead at end of block" "maybe param" "reference to a const" "temp"
    const-val start[1940529]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1940531]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    ref call_tmp[1940533]:_ref(int(64))[934535] "dead at end of block" "maybe param" "reference to a const" "temp"
    const-val end[1940535]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1940537]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val _indexOfInterest[1940539]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1940541]:_ic_chpl_direct_param_stride_range_iter[1100243] "dead at end of block" "expr temp" "temp"
    const-val call_tmp[1940543]:_ir_chpl_direct_param_stride_range_iter[1100249] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[1940545]:_ir_chpl_direct_param_stride_range_iter[1100249] "temp"
    val ret[1940547]:_ir_chpl_direct_param_stride_range_iter[1100249] "dead after last mention" "RVV" "temp"
    val call_tmp[1940549]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val i[1940551]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[1940553]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1940555]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val default_arg_first[1940557]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[1940559]:int(64)[13] "temp"
    const-val default_arg_last[1940561]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[1940563]:int(64)[13] "temp"
    const-val _return_tmp_[1940565]:bool[10] "dead after last mention" "temp"
    const-val low[1940567]:int(64)[13] "temp"
    const-val high[1940569]:int(64)[13] "temp"
    val yret[1940571]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[1940573]:int(64)[13] "temp"
    const i[1940575]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[1940577]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[1940579]:int(64)[13] "temp"
    const i[1940581]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[1940583]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[1940585]:int(64)[13] "temp"
    const i[1940587]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[1940589]:uint(8)[100] "dead after last mention" "YVV" "temp"
    ref call_tmp[1940591]:_ref(uint(8))[934871] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1940593]:_ref(c_ptr(uint(8)))[935395] "dead after last mention" "temp"
    val coerce_tmp[1940595]:c_ptr(uint(8))[935386] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val coerce_tmp[1940597]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    const-val low[1940599]:int(64)[13] "temp"
    const-val high[1940601]:int(64)[13] "temp"
    val call_tmp[1940603]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    label _endchpl_direct_param_stride_range_iter[1940605]
    label _endchpl_direct_counted_range_iter_helper[1940607]
    label _endchpl_direct_counted_range_iter[1940609]
    label _endchpl_bytes[1940611]
    ref tmp[1940613]:_ref(string)[935902] "temp"
    val tmp[1940615]:string[26] "temp"
    ref tmp[1940617]:_ref(string)[935902] "temp"
    val tmp[1940619]:_ic_chpl_direct_counted_range_iter[1100747] "temp"
    ref tmp[1940621]:_ref(_ic_chpl_direct_counted_range_iter)[1100890] "temp"
    ref tmp[1940623]:_ref(_ic_chpl_direct_counted_range_iter)[1100890] "temp"
    val tmp[1940625]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
    ref tmp[1940627]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
    ref tmp[1940629]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
    ref tmp[1940631]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
    ref tmp[1940633]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
    ref tmp[1940635]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
    ref tmp[1940637]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
    ref tmp[1940639]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
    ref tmp[1940641]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
    const tmp[1940643]:2*int(64)[1037179] "temp"
    ref tmp[1940645]:_ref(2*int(64))[1037252] "temp"
    ref tmp[1940647]:_ref(2*int(64))[1037252] "temp"
    val tmp[1940649]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
    val tmp[1940651]:int(64)[13] "temp"
    ref tmp[1940653]:_ref(_ic_chpl_direct_param_stride_range_iter)[1100386] "temp"
    ref tmp[1940655]:_ref(_ic_chpl_direct_param_stride_range_iter)[1100386] "temp"
    ref tmp[1940657]:_ref(_ic_chpl_direct_param_stride_range_iter)[1100386] "temp"
    ref tmp[1940659]:_ref(_ic_chpl_direct_param_stride_range_iter)[1100386] "temp"
    val tmp[1940661]:int(64)[13] "temp"
    val tmp[1940663]:int(64)[13] "temp"
    ref tmp[1940665]:_ref(string)[935902] "temp"
    val tmp[1940667]:uint(8)[100] "temp"
    val tmp[1940669]:uint(8)[100] "temp"
    val tmp[1940671]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
    ref tmp[1940673]:_ref(2*int(64))[1037252] "temp"
    val tmp[1940675]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
    val tmp[1940677]:_ic_chpl_direct_counted_range_iter[1100747] "temp"
    ref tmp[1940679]:_ref(string)[935902] "temp"
    const-val tmp[1940681]:int(64)[13] "temp"
    ref tmp[1940683]:_ref(_ic_chpl_direct_param_stride_range_iter)[1100386] "temp"
    val tmp[1940685]:int(64)[13] "temp"
    const-val tmp[1940687]:int(64)[13] "temp"
    ref tmp[1940689]:_ref(_ic_chpl_direct_param_stride_range_iter)[1100386] "temp"
    val tmp[1940691]:int(64)[13] "temp"
    val tmp[1940693]:int(64)[13] "temp"
    val tmp[1940695]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
    ref tmp[1940697]:_ref(2*int(64))[1037252] "temp"
    val tmp[1940699]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
    val tmp[1940701]:_ic_chpl_direct_counted_range_iter[1100747] "temp"
    ref tmp[1940703]:_ref(string)[935902] "temp"
    (1940705 'move' tmp[1940613](1940707 '.v' this[1105241] F0_this[1940093]))
    (1940711 call localize[32886] tmp[1940613] ret_tmp[1940435])
    (1940714 'move' call_tmp[1940433] ret_tmp[1940435])
    (1940717 'move' tmp[1940615] call_tmp[1940433])
    (1940720 '.=' this[1105241] F1_localThis[1940097] tmp[1940615])
    (1940724 'move' tmp[1940617](1940726 '.' this[1105241] F1_localThis[1940097]))
    (1940729 'move' call_tmp[1940443](1940732 call buffLen[757925] tmp[1940617]))
    (1940734 'move' coerce_tmp[1940447](1940736 'deref' call_tmp[1940443]))
    (1940739 call chpl_direct_counted_range_iter[458054] 0 coerce_tmp[1940447] ret_tmp[1940449])
    (1940743 'move' call_tmp[1940445] ret_tmp[1940449])
    (1940746 'move' tmp[1940619](1940749 call _getIterator[1100762] call_tmp[1940445]))
    (1940751 '.=' this[1105241] F2__iterator[1940099] tmp[1940619])
    (1940755 'move' tmp[1940621](1940757 '.' this[1105241] F2__iterator[1940099]))
    (1940760 'move' low[1940461](1940762 '.v' tmp[1940621] F0_low[1952071]))
    (1940765 'move' tmp[1940623](1940767 '.' this[1105241] F2__iterator[1940099]))
    (1940770 'move' count[1940463](1940772 '.v' tmp[1940623] F1_count[1952075]))
    (1940776 call chpl_direct_counted_range_iter_helper[1099055] low[1940461] count[1940463] ret_tmp[1940459])
    (1940780 'move' call_tmp[1940457] ret_tmp[1940459])
    (1940783 'move' tmp[1940625](1940786 call _getIterator[1100512] call_tmp[1940457]))
    (1940788 '.=' this[1105241] F3__iterator[1940101] tmp[1940625])
    (1940792 'move' tmp[1940627](1940794 '.' this[1105241] F3__iterator[1940101]))
    (1940797 'move' count[1940475](1940799 '.v' tmp[1940627] F1_count[1956547]))
    (1940802 'move' call_tmp[1940473](1940805 call <[946327] count[1940475]))
    (1940807 'move' tmp[1940471] call_tmp[1940473])
    (1940810 'move' tmp[1940469] call_tmp[1940473])
    (1940813 'move' call_tmp[1940477] call_tmp[1940473])
    if call_tmp[1940473]
    {
      (1940819 call boundsCheckHalt[210084] "With a negative count, the range must have a last index.")
    }
    (1940822 'move' tmp[1940629](1940824 '.' this[1105241] F3__iterator[1940101]))
    (1940827 'move' count[1940487](1940829 '.v' tmp[1940629] F1_count[1956547]))
    (1940832 'move' call_tmp[1940485](1940835 call ==[435686] count[1940487] 0))
    (1940838 'move' tmp[1940483] call_tmp[1940485])
    if call_tmp[1940485]
    {
      const-val tmp[1940843]:2*int(64)[1037179] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      val call_tmp[1940845]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[1940847]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val low[1940849]:int(64)[13] "temp"
      ref tmp[1940851]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
      (1940853 'move' tmp[1940851](1940855 '.' this[1105241] F3__iterator[1940101]))
      (1940858 'move' low[1940849](1940860 '.v' tmp[1940851] F0_low[1956543]))
      (1940863 'move' call_tmp[1940847](1940866 call _cast[974684] low[1940849]))
      const-val call_tmp[1940868]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1940870]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1940872 'move' coerce_tmp[1940870](1940874 'cast' uint(64)[115] 1))
      (1940877 'move' call_tmp[1940868](1940880 call -[957077] call_tmp[1940847]))
      const-val call_tmp[1940882]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1940884 'move' call_tmp[1940882](1940887 call _cast[951465] call_tmp[1940868]))
      const-val ret_tmp[1940889]:2*int(64)[1037179] "temp"
      const-val low[1940891]:int(64)[13] "temp"
      ref tmp[1940893]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
      (1940895 'move' tmp[1940893](1940897 '.' this[1105241] F3__iterator[1940101]))
      (1940900 'move' low[1940891](1940902 '.v' tmp[1940893] F0_low[1956543]))
      (1940906 call _build_tuple[1037137] low[1940891] call_tmp[1940882] ret_tmp[1940889])
      (1940910 'move' tmp[1940843] ret_tmp[1940889])
      (1940913 'move' tmp[1940481] tmp[1940843])
    }
    {
      const-val tmp[1940917]:2*int(64)[1037179] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      val call_tmp[1940919]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[1940921]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val count[1940923]:int(64)[13] "temp"
      ref tmp[1940925]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
      (1940927 'move' tmp[1940925](1940929 '.' this[1105241] F3__iterator[1940101]))
      (1940932 'move' count[1940923](1940934 '.v' tmp[1940925] F1_count[1956547]))
      (1940937 'move' call_tmp[1940921] count[1940923])
      const-val call_tmp[1940940]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val count[1940942]:int(64)[13] "temp"
      ref tmp[1940944]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
      (1940946 'move' tmp[1940944](1940948 '.' this[1105241] F3__iterator[1940101]))
      (1940951 'move' count[1940942](1940953 '.v' tmp[1940944] F1_count[1956547]))
      (1940956 'move' call_tmp[1940940](1940959 call -[957110] count[1940942]))
      const-val call_tmp[1940961]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val low[1940963]:int(64)[13] "temp"
      ref tmp[1940965]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
      (1940967 'move' tmp[1940965](1940969 '.' this[1105241] F3__iterator[1940101]))
      (1940972 'move' low[1940963](1940974 '.v' tmp[1940965] F0_low[1956543]))
      (1940977 'move' call_tmp[1940961](1940980 call +[439694] low[1940963] call_tmp[1940940]))
      const-val ret_tmp[1940983]:2*int(64)[1037179] "temp"
      const-val low[1940985]:int(64)[13] "temp"
      ref tmp[1940987]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
      (1940989 'move' tmp[1940987](1940991 '.' this[1105241] F3__iterator[1940101]))
      (1940994 'move' low[1940985](1940996 '.v' tmp[1940987] F0_low[1956543]))
      (1941000 call _build_tuple[1037137] low[1940985] call_tmp[1940961] ret_tmp[1940983])
      (1941004 'move' tmp[1940917] ret_tmp[1940983])
      (1941007 'move' tmp[1940481] tmp[1940917])
    }
    (1941011 '=' tmp[1940643] tmp[1940481])
    (1941014 '.=' this[1105241] F4_tmp[1940103] tmp[1940643])
    (1941018 'noop')
    1
    (1941020 'move' tmp[1940645](1941022 '.' this[1105241] F4_tmp[1940103]))
    (1941025 'move' call_tmp[1940527](1941027 '.' tmp[1940645] x0[1037175]))
    (1941030 'move' coerce_tmp[1940531](1941032 'deref' call_tmp[1940527]))
    (1941034 '=' start[1940529] coerce_tmp[1940531])
    (1941037 'noop')
    (1941038 'move' tmp[1940647](1941040 '.' this[1105241] F4_tmp[1940103]))
    (1941043 'move' call_tmp[1940533](1941045 '.' tmp[1940647] x1[1037177]))
    (1941048 'move' coerce_tmp[1940537](1941050 'deref' call_tmp[1940533]))
    (1941052 '=' end[1940535] coerce_tmp[1940537])
    (1941055 'noop')
    (1941057 call chpl_direct_param_stride_range_iter[1099481] coerce_tmp[1940531] coerce_tmp[1940537] ret_tmp[1940545])
    (1941061 'move' call_tmp[1940543] ret_tmp[1940545])
    (1941064 'move' tmp[1940649](1941067 call _getIterator[1100258] call_tmp[1940543]))
    (1941069 '.=' this[1105241] F5__iterator[1940105] tmp[1940649])
    (1941074 call chpl_range_check_stride[1099801])
    (1941075 'move' tmp[1940651] 0)
    (1941078 '.=' this[1105241] F6_i[1940107] tmp[1940651])
    (1941082 'move' tmp[1940653](1941084 '.' this[1105241] F5__iterator[1940105]))
    (1941087 'move' low[1940559](1941089 '.v' tmp[1940653] F0_low[1958041]))
    (1941092 'move' default_arg_first[1940557](1941095 call chpl_checkIfRangeIterWillOverflow_default_first[1100155] low[1940559]))
    (1941097 'move' tmp[1940655](1941099 '.' this[1105241] F5__iterator[1940105]))
    (1941102 'move' high[1940563](1941104 '.v' tmp[1940655] F1_high[1958045]))
    (1941107 'move' default_arg_last[1940561](1941110 call chpl_checkIfRangeIterWillOverflow_default_last[1100183] high[1940563]))
    (1941112 'move' tmp[1940657](1941114 '.' this[1105241] F5__iterator[1940105]))
    (1941117 'move' low[1940567](1941119 '.v' tmp[1940657] F0_low[1958041]))
    (1941122 'move' tmp[1940659](1941124 '.' this[1105241] F5__iterator[1940105]))
    (1941127 'move' high[1940569](1941129 '.v' tmp[1940659] F1_high[1958045]))
    (1941132 'move' _return_tmp_[1940565](1941135 call chpl_checkIfRangeIterWillOverflow[1093055] low[1940567] high[1940569] 1 default_arg_first[1940557] default_arg_last[1940561] 1))
    (1941142 return _void[55])
  }
  function _ic_chpl_bytes__ref_string[1105204].zip2[1105248](const in arg this[1105250]:_ic_chpl_bytes__ref_string[1105204]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val ret[1941145]:_ir_chpl_bytes__ref_string[1105210] "dead at end of block" "RVV" "temp"
    val call_tmp[1941147]:string[26] "dead at end of block" "maybe param" "temp"
    val ret_tmp[1941149]:string[26] "temp"
    val localThis[1941151]:string[26] "dead at end of block" "insert auto destroy"
    val _indexOfInterest[1941153]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1941155]:_ic_chpl_direct_counted_range_iter[1100747] "dead at end of block" "expr temp" "temp"
    ref call_tmp[1941157]:_ref(int(64))[934535] "dead at end of block" "maybe param" "temp"
    val call_tmp[1941159]:_ir_chpl_direct_counted_range_iter[1100753] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[1941161]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val ret_tmp[1941163]:_ir_chpl_direct_counted_range_iter[1100753] "temp"
    val ret[1941165]:_ir_chpl_direct_counted_range_iter[1100753] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[1941167]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1941169]:_ic_chpl_direct_counted_range_iter_helper[1100497] "dead at end of block" "expr temp" "temp"
    val call_tmp[1941171]:_ir_chpl_direct_counted_range_iter_helper[1100503] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[1941173]:_ir_chpl_direct_counted_range_iter_helper[1100503] "temp"
    const-val low[1941175]:int(64)[13] "temp"
    const-val count[1941177]:int(64)[13] "temp"
    val ret[1941179]:_ir_chpl_direct_counted_range_iter_helper[1100503] "dead after last mention" "RVV" "temp"
    val call_tmp[1941181]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[1941183]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val tmp[1941185]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    val call_tmp[1941187]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[1941189]:int(64)[13] "temp"
    val call_tmp[1941191]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const tmp[1941193]:2*int(64)[1037179] "dead at end of block" "const" "insert auto destroy" "temp"
    val tmp[1941195]:2*int(64)[1037179] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
    val tmp[1941197]:bool[10] "dead after last mention" "maybe param" "temp"
    val call_tmp[1941199]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[1941201]:int(64)[13] "temp"
    val tmp[1941203]:2*int(64)[1037179] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[1941205]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1941207]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[1941209]:int(64)[13] "temp"
    val call_tmp[1941211]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[1941213]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val call_tmp[1941215]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[1941217]:2*int(64)[1037179] "temp"
    const-val low[1941219]:int(64)[13] "temp"
    val tmp[1941221]:2*int(64)[1037179] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[1941223]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1941225]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[1941227]:int(64)[13] "temp"
    val call_tmp[1941229]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[1941231]:int(64)[13] "temp"
    val call_tmp[1941233]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[1941235]:int(64)[13] "temp"
    val ret_tmp[1941237]:2*int(64)[1037179] "temp"
    const-val low[1941239]:int(64)[13] "temp"
    ref call_tmp[1941241]:_ref(int(64))[934535] "dead at end of block" "maybe param" "reference to a const" "temp"
    const start[1941243]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[1941245]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    ref call_tmp[1941247]:_ref(int(64))[934535] "dead at end of block" "maybe param" "reference to a const" "temp"
    const end[1941249]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[1941251]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val _indexOfInterest[1941253]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1941255]:_ic_chpl_direct_param_stride_range_iter[1100243] "dead at end of block" "expr temp" "temp"
    val call_tmp[1941257]:_ir_chpl_direct_param_stride_range_iter[1100249] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[1941259]:_ir_chpl_direct_param_stride_range_iter[1100249] "temp"
    val ret[1941261]:_ir_chpl_direct_param_stride_range_iter[1100249] "dead after last mention" "RVV" "temp"
    val call_tmp[1941263]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val i[1941265]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[1941267]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1941269]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val default_arg_first[1941271]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[1941273]:int(64)[13] "temp"
    val default_arg_last[1941275]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[1941277]:int(64)[13] "temp"
    val _return_tmp_[1941279]:bool[10] "dead after last mention" "temp"
    const-val low[1941281]:int(64)[13] "temp"
    const-val high[1941283]:int(64)[13] "temp"
    const-val yret[1941285]:int(64)[13] "dead after last mention" "YVV" "temp"
    const-val _yieldedIndex[1941287]:int(64)[13] "temp"
    const-val i[1941289]:int(64)[13] "const" "index var" "insert auto destroy"
    const-val yret[1941291]:int(64)[13] "dead after last mention" "YVV" "temp"
    const-val _yieldedIndex[1941293]:int(64)[13] "temp"
    const-val i[1941295]:int(64)[13] "const" "index var" "insert auto destroy"
    const-val yret[1941297]:int(64)[13] "dead after last mention" "YVV" "temp"
    const-val _yieldedIndex[1941299]:int(64)[13] "temp"
    const-val i[1941301]:int(64)[13] "const" "index var" "insert auto destroy"
    const-val yret[1941303]:uint(8)[100] "dead after last mention" "YVV" "temp"
    ref call_tmp[1941305]:_ref(uint(8))[934871] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1941307]:_ref(c_ptr(uint(8)))[935395] "dead after last mention" "temp"
    val coerce_tmp[1941309]:c_ptr(uint(8))[935386] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val coerce_tmp[1941311]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    const-val low[1941313]:int(64)[13] "temp"
    const-val high[1941315]:int(64)[13] "temp"
    val call_tmp[1941317]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    label _endchpl_direct_param_stride_range_iter[1941319]
    label _endchpl_direct_counted_range_iter_helper[1941321]
    label _endchpl_direct_counted_range_iter[1941323]
    label _endchpl_bytes[1941325]
    ref tmp[1941327]:_ref(string)[935902] "temp"
    val tmp[1941329]:string[26] "temp"
    ref tmp[1941331]:_ref(string)[935902] "temp"
    val tmp[1941333]:_ic_chpl_direct_counted_range_iter[1100747] "temp"
    ref tmp[1941335]:_ref(_ic_chpl_direct_counted_range_iter)[1100890] "temp"
    ref tmp[1941337]:_ref(_ic_chpl_direct_counted_range_iter)[1100890] "temp"
    val tmp[1941339]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
    ref tmp[1941341]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
    ref tmp[1941343]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
    ref tmp[1941345]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
    ref tmp[1941347]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
    ref tmp[1941349]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
    ref tmp[1941351]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
    ref tmp[1941353]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
    ref tmp[1941355]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
    const tmp[1941357]:2*int(64)[1037179] "temp"
    ref tmp[1941359]:_ref(2*int(64))[1037252] "temp"
    ref tmp[1941361]:_ref(2*int(64))[1037252] "temp"
    val tmp[1941363]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
    val tmp[1941365]:int(64)[13] "temp"
    ref tmp[1941367]:_ref(_ic_chpl_direct_param_stride_range_iter)[1100386] "temp"
    ref tmp[1941369]:_ref(_ic_chpl_direct_param_stride_range_iter)[1100386] "temp"
    ref tmp[1941371]:_ref(_ic_chpl_direct_param_stride_range_iter)[1100386] "temp"
    ref tmp[1941373]:_ref(_ic_chpl_direct_param_stride_range_iter)[1100386] "temp"
    const-val tmp[1941375]:int(64)[13] "temp"
    const-val tmp[1941377]:int(64)[13] "temp"
    ref tmp[1941379]:_ref(string)[935902] "temp"
    val tmp[1941381]:uint(8)[100] "temp"
    const-val tmp[1941383]:uint(8)[100] "temp"
    val tmp[1941385]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
    ref tmp[1941387]:_ref(2*int(64))[1037252] "temp"
    val tmp[1941389]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
    val tmp[1941391]:_ic_chpl_direct_counted_range_iter[1100747] "temp"
    ref tmp[1941393]:_ref(string)[935902] "temp"
    const-val tmp[1941395]:int(64)[13] "temp"
    ref tmp[1941397]:_ref(_ic_chpl_direct_param_stride_range_iter)[1100386] "temp"
    val tmp[1941399]:int(64)[13] "temp"
    const-val tmp[1941401]:int(64)[13] "temp"
    ref tmp[1941403]:_ref(_ic_chpl_direct_param_stride_range_iter)[1100386] "temp"
    val tmp[1941405]:int(64)[13] "temp"
    val tmp[1941407]:int(64)[13] "temp"
    val tmp[1941409]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
    ref tmp[1941411]:_ref(2*int(64))[1037252] "temp"
    val tmp[1941413]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
    val tmp[1941415]:_ic_chpl_direct_counted_range_iter[1100747] "temp"
    ref tmp[1941417]:_ref(string)[935902] "temp"
    (1941419 'move' tmp[1941375](1941421 '.v' this[1105250] F6_i[1940107]))
    (1941424 'move' yret[1941285] tmp[1941375])
    (1941427 'move' tmp[1941377](1941429 '.v' this[1105250] F6_i[1940107]))
    (1941432 'move' _yieldedIndex[1941287] tmp[1941377])
    (1941435 'move' i[1941289] _yieldedIndex[1941287])
    (1941438 'move' yret[1941291] _yieldedIndex[1941287])
    (1941441 'move' _yieldedIndex[1941293] _yieldedIndex[1941287])
    (1941444 'move' i[1941295] _yieldedIndex[1941293])
    (1941447 'move' yret[1941297] _yieldedIndex[1941293])
    (1941450 'move' _yieldedIndex[1941299] _yieldedIndex[1941293])
    (1941453 'move' i[1941301] _yieldedIndex[1941299])
    (1941456 'move' tmp[1941379](1941458 '.' this[1105250] F1_localThis[1940097]))
    (1941461 'move' _this_tmp_[1941307](1941464 call buff[758003] tmp[1941379]))
    (1941466 'move' coerce_tmp[1941309](1941468 'deref' _this_tmp_[1941307]))
    (1941470 'move' call_tmp[1941305](1941473 call this[952013] coerce_tmp[1941309] _yieldedIndex[1941299]))
    (1941476 'move' tmp[1941381](1941478 'deref' call_tmp[1941305]))
    (1941480 '.=' this[1105250] value[1940111] tmp[1941381])
    (1941484 'move' tmp[1941383](1941486 '.v' this[1105250] value[1940111]))
    (1941489 '=' yret[1941303] tmp[1941383])
    (1941492 'noop')
    (1941493 '.=' this[1105250] more[1105207] 2)
    (1941497 return _void[55])
  }
  function _ic_chpl_bytes__ref_string[1105204].zip3[1105257](const in arg this[1105259]:_ic_chpl_bytes__ref_string[1105204]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val ret[1941500]:_ir_chpl_bytes__ref_string[1105210] "dead at end of block" "RVV" "temp"
    val call_tmp[1941502]:string[26] "dead at end of block" "maybe param" "temp"
    val ret_tmp[1941504]:string[26] "temp"
    val localThis[1941506]:string[26] "dead at end of block" "insert auto destroy"
    val _indexOfInterest[1941508]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1941510]:_ic_chpl_direct_counted_range_iter[1100747] "dead at end of block" "expr temp" "temp"
    ref call_tmp[1941512]:_ref(int(64))[934535] "dead at end of block" "maybe param" "temp"
    val call_tmp[1941514]:_ir_chpl_direct_counted_range_iter[1100753] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[1941516]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val ret_tmp[1941518]:_ir_chpl_direct_counted_range_iter[1100753] "temp"
    val ret[1941520]:_ir_chpl_direct_counted_range_iter[1100753] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[1941522]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1941524]:_ic_chpl_direct_counted_range_iter_helper[1100497] "dead at end of block" "expr temp" "temp"
    val call_tmp[1941526]:_ir_chpl_direct_counted_range_iter_helper[1100503] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[1941528]:_ir_chpl_direct_counted_range_iter_helper[1100503] "temp"
    const-val low[1941530]:int(64)[13] "temp"
    const-val count[1941532]:int(64)[13] "temp"
    val ret[1941534]:_ir_chpl_direct_counted_range_iter_helper[1100503] "dead after last mention" "RVV" "temp"
    val call_tmp[1941536]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[1941538]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val tmp[1941540]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    val call_tmp[1941542]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[1941544]:int(64)[13] "temp"
    val call_tmp[1941546]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const tmp[1941548]:2*int(64)[1037179] "dead at end of block" "const" "insert auto destroy" "temp"
    val tmp[1941550]:2*int(64)[1037179] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
    val tmp[1941552]:bool[10] "dead after last mention" "maybe param" "temp"
    val call_tmp[1941554]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[1941556]:int(64)[13] "temp"
    val tmp[1941558]:2*int(64)[1037179] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[1941560]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1941562]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[1941564]:int(64)[13] "temp"
    val call_tmp[1941566]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[1941568]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val call_tmp[1941570]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[1941572]:2*int(64)[1037179] "temp"
    const-val low[1941574]:int(64)[13] "temp"
    val tmp[1941576]:2*int(64)[1037179] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[1941578]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1941580]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[1941582]:int(64)[13] "temp"
    val call_tmp[1941584]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[1941586]:int(64)[13] "temp"
    val call_tmp[1941588]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[1941590]:int(64)[13] "temp"
    val ret_tmp[1941592]:2*int(64)[1037179] "temp"
    const-val low[1941594]:int(64)[13] "temp"
    ref call_tmp[1941596]:_ref(int(64))[934535] "dead at end of block" "maybe param" "reference to a const" "temp"
    const start[1941598]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[1941600]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    ref call_tmp[1941602]:_ref(int(64))[934535] "dead at end of block" "maybe param" "reference to a const" "temp"
    const end[1941604]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[1941606]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val _indexOfInterest[1941608]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1941610]:_ic_chpl_direct_param_stride_range_iter[1100243] "dead at end of block" "expr temp" "temp"
    val call_tmp[1941612]:_ir_chpl_direct_param_stride_range_iter[1100249] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[1941614]:_ir_chpl_direct_param_stride_range_iter[1100249] "temp"
    val ret[1941616]:_ir_chpl_direct_param_stride_range_iter[1100249] "dead after last mention" "RVV" "temp"
    val call_tmp[1941618]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val i[1941620]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[1941622]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1941624]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val default_arg_first[1941626]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[1941628]:int(64)[13] "temp"
    val default_arg_last[1941630]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[1941632]:int(64)[13] "temp"
    val _return_tmp_[1941634]:bool[10] "dead after last mention" "temp"
    const-val low[1941636]:int(64)[13] "temp"
    const-val high[1941638]:int(64)[13] "temp"
    val yret[1941640]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[1941642]:int(64)[13] "temp"
    const i[1941644]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[1941646]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[1941648]:int(64)[13] "temp"
    const i[1941650]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[1941652]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[1941654]:int(64)[13] "temp"
    const i[1941656]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[1941658]:uint(8)[100] "dead after last mention" "YVV" "temp"
    ref call_tmp[1941660]:_ref(uint(8))[934871] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1941662]:_ref(c_ptr(uint(8)))[935395] "dead after last mention" "temp"
    val coerce_tmp[1941664]:c_ptr(uint(8))[935386] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val coerce_tmp[1941666]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    const-val low[1941668]:int(64)[13] "temp"
    const-val high[1941670]:int(64)[13] "temp"
    val call_tmp[1941672]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    label _endchpl_direct_param_stride_range_iter[1941674]
    label _endchpl_direct_counted_range_iter_helper[1941676]
    label _endchpl_direct_counted_range_iter[1941678]
    label _endchpl_bytes[1941680]
    ref tmp[1941682]:_ref(string)[935902] "temp"
    val tmp[1941684]:string[26] "temp"
    ref tmp[1941686]:_ref(string)[935902] "temp"
    val tmp[1941688]:_ic_chpl_direct_counted_range_iter[1100747] "temp"
    ref tmp[1941690]:_ref(_ic_chpl_direct_counted_range_iter)[1100890] "temp"
    ref tmp[1941692]:_ref(_ic_chpl_direct_counted_range_iter)[1100890] "temp"
    val tmp[1941694]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
    ref tmp[1941696]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
    ref tmp[1941698]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
    ref tmp[1941700]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
    ref tmp[1941702]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
    ref tmp[1941704]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
    ref tmp[1941706]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
    ref tmp[1941708]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
    ref tmp[1941710]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
    const tmp[1941712]:2*int(64)[1037179] "temp"
    ref tmp[1941714]:_ref(2*int(64))[1037252] "temp"
    ref tmp[1941716]:_ref(2*int(64))[1037252] "temp"
    val tmp[1941718]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
    val tmp[1941720]:int(64)[13] "temp"
    ref tmp[1941722]:_ref(_ic_chpl_direct_param_stride_range_iter)[1100386] "temp"
    ref tmp[1941724]:_ref(_ic_chpl_direct_param_stride_range_iter)[1100386] "temp"
    ref tmp[1941726]:_ref(_ic_chpl_direct_param_stride_range_iter)[1100386] "temp"
    ref tmp[1941728]:_ref(_ic_chpl_direct_param_stride_range_iter)[1100386] "temp"
    val tmp[1941730]:int(64)[13] "temp"
    val tmp[1941732]:int(64)[13] "temp"
    ref tmp[1941734]:_ref(string)[935902] "temp"
    val tmp[1941736]:uint(8)[100] "temp"
    val tmp[1941738]:uint(8)[100] "temp"
    val tmp[1941740]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
    ref tmp[1941742]:_ref(2*int(64))[1037252] "temp"
    val tmp[1941744]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
    val tmp[1941746]:_ic_chpl_direct_counted_range_iter[1100747] "temp"
    ref tmp[1941748]:_ref(string)[935902] "temp"
    const-val tmp[1941750]:int(64)[13] "temp"
    ref tmp[1941752]:_ref(_ic_chpl_direct_param_stride_range_iter)[1100386] "temp"
    val tmp[1941754]:int(64)[13] "temp"
    const-val tmp[1941756]:int(64)[13] "temp"
    ref tmp[1941758]:_ref(_ic_chpl_direct_param_stride_range_iter)[1100386] "temp"
    val tmp[1941760]:int(64)[13] "temp"
    val tmp[1941762]:int(64)[13] "temp"
    val tmp[1941764]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
    ref tmp[1941766]:_ref(2*int(64))[1037252] "temp"
    val tmp[1941768]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
    val tmp[1941770]:_ic_chpl_direct_counted_range_iter[1100747] "temp"
    ref tmp[1941772]:_ref(string)[935902] "temp"
    (1941774 return _void[55])
  }
  function _ic_chpl_bytes__ref_string[1105204].zip4[1105266](const in arg this[1105268]:_ic_chpl_bytes__ref_string[1105204]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val ret[1941777]:_ir_chpl_bytes__ref_string[1105210] "dead at end of block" "RVV" "temp"
    val call_tmp[1941779]:string[26] "dead at end of block" "maybe param" "temp"
    val ret_tmp[1941781]:string[26] "temp"
    val localThis[1941783]:string[26] "dead at end of block" "insert auto destroy"
    val _indexOfInterest[1941785]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1941787]:_ic_chpl_direct_counted_range_iter[1100747] "dead at end of block" "expr temp" "temp"
    ref call_tmp[1941789]:_ref(int(64))[934535] "dead at end of block" "maybe param" "temp"
    val call_tmp[1941791]:_ir_chpl_direct_counted_range_iter[1100753] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[1941793]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val ret_tmp[1941795]:_ir_chpl_direct_counted_range_iter[1100753] "temp"
    val ret[1941797]:_ir_chpl_direct_counted_range_iter[1100753] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[1941799]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1941801]:_ic_chpl_direct_counted_range_iter_helper[1100497] "dead at end of block" "expr temp" "temp"
    val call_tmp[1941803]:_ir_chpl_direct_counted_range_iter_helper[1100503] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[1941805]:_ir_chpl_direct_counted_range_iter_helper[1100503] "temp"
    const-val low[1941807]:int(64)[13] "temp"
    const-val count[1941809]:int(64)[13] "temp"
    val ret[1941811]:_ir_chpl_direct_counted_range_iter_helper[1100503] "dead after last mention" "RVV" "temp"
    val call_tmp[1941813]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[1941815]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val tmp[1941817]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    val call_tmp[1941819]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[1941821]:int(64)[13] "temp"
    val call_tmp[1941823]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const tmp[1941825]:2*int(64)[1037179] "dead at end of block" "const" "insert auto destroy" "temp"
    val tmp[1941827]:2*int(64)[1037179] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
    val tmp[1941829]:bool[10] "dead after last mention" "maybe param" "temp"
    val call_tmp[1941831]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[1941833]:int(64)[13] "temp"
    val tmp[1941835]:2*int(64)[1037179] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[1941837]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1941839]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[1941841]:int(64)[13] "temp"
    val call_tmp[1941843]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    val coerce_tmp[1941845]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val call_tmp[1941847]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[1941849]:2*int(64)[1037179] "temp"
    const-val low[1941851]:int(64)[13] "temp"
    val tmp[1941853]:2*int(64)[1037179] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    val call_tmp[1941855]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1941857]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[1941859]:int(64)[13] "temp"
    val call_tmp[1941861]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val count[1941863]:int(64)[13] "temp"
    val call_tmp[1941865]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val low[1941867]:int(64)[13] "temp"
    val ret_tmp[1941869]:2*int(64)[1037179] "temp"
    const-val low[1941871]:int(64)[13] "temp"
    ref call_tmp[1941873]:_ref(int(64))[934535] "dead at end of block" "maybe param" "reference to a const" "temp"
    const start[1941875]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[1941877]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    ref call_tmp[1941879]:_ref(int(64))[934535] "dead at end of block" "maybe param" "reference to a const" "temp"
    const end[1941881]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[1941883]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val _indexOfInterest[1941885]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1941887]:_ic_chpl_direct_param_stride_range_iter[1100243] "dead at end of block" "expr temp" "temp"
    val call_tmp[1941889]:_ir_chpl_direct_param_stride_range_iter[1100249] "dead at end of block" "expr temp" "maybe param" "temp"
    val ret_tmp[1941891]:_ir_chpl_direct_param_stride_range_iter[1100249] "temp"
    val ret[1941893]:_ir_chpl_direct_param_stride_range_iter[1100249] "dead after last mention" "RVV" "temp"
    val call_tmp[1941895]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val i[1941897]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[1941899]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1941901]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val default_arg_first[1941903]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[1941905]:int(64)[13] "temp"
    val default_arg_last[1941907]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[1941909]:int(64)[13] "temp"
    val _return_tmp_[1941911]:bool[10] "dead after last mention" "temp"
    const-val low[1941913]:int(64)[13] "temp"
    const-val high[1941915]:int(64)[13] "temp"
    val yret[1941917]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[1941919]:int(64)[13] "temp"
    const i[1941921]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[1941923]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[1941925]:int(64)[13] "temp"
    const i[1941927]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[1941929]:int(64)[13] "dead after last mention" "YVV" "temp"
    val _yieldedIndex[1941931]:int(64)[13] "temp"
    const i[1941933]:int(64)[13] "const" "index var" "insert auto destroy"
    val yret[1941935]:uint(8)[100] "dead after last mention" "YVV" "temp"
    ref call_tmp[1941937]:_ref(uint(8))[934871] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1941939]:_ref(c_ptr(uint(8)))[935395] "dead after last mention" "temp"
    val coerce_tmp[1941941]:c_ptr(uint(8))[935386] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val coerce_tmp[1941943]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    const-val low[1941945]:int(64)[13] "temp"
    const-val high[1941947]:int(64)[13] "temp"
    val call_tmp[1941949]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    label _endchpl_direct_param_stride_range_iter[1941951]
    label _endchpl_direct_counted_range_iter_helper[1941953]
    label _endchpl_direct_counted_range_iter[1941955]
    label _endchpl_bytes[1941957]
    ref tmp[1941959]:_ref(string)[935902] "temp"
    val tmp[1941961]:string[26] "temp"
    ref tmp[1941963]:_ref(string)[935902] "temp"
    val tmp[1941965]:_ic_chpl_direct_counted_range_iter[1100747] "temp"
    ref tmp[1941967]:_ref(_ic_chpl_direct_counted_range_iter)[1100890] "temp"
    ref tmp[1941969]:_ref(_ic_chpl_direct_counted_range_iter)[1100890] "temp"
    val tmp[1941971]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
    ref tmp[1941973]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
    ref tmp[1941975]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
    ref tmp[1941977]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
    ref tmp[1941979]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
    ref tmp[1941981]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
    ref tmp[1941983]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
    ref tmp[1941985]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
    ref tmp[1941987]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] "temp"
    const tmp[1941989]:2*int(64)[1037179] "temp"
    ref tmp[1941991]:_ref(2*int(64))[1037252] "temp"
    ref tmp[1941993]:_ref(2*int(64))[1037252] "temp"
    val tmp[1941995]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
    val tmp[1941997]:int(64)[13] "temp"
    ref tmp[1941999]:_ref(_ic_chpl_direct_param_stride_range_iter)[1100386] "temp"
    ref tmp[1942001]:_ref(_ic_chpl_direct_param_stride_range_iter)[1100386] "temp"
    ref tmp[1942003]:_ref(_ic_chpl_direct_param_stride_range_iter)[1100386] "temp"
    ref tmp[1942005]:_ref(_ic_chpl_direct_param_stride_range_iter)[1100386] "temp"
    val tmp[1942007]:int(64)[13] "temp"
    val tmp[1942009]:int(64)[13] "temp"
    ref tmp[1942011]:_ref(string)[935902] "temp"
    val tmp[1942013]:uint(8)[100] "temp"
    val tmp[1942015]:uint(8)[100] "temp"
    val tmp[1942017]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
    ref tmp[1942019]:_ref(2*int(64))[1037252] "temp"
    val tmp[1942021]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
    val tmp[1942023]:_ic_chpl_direct_counted_range_iter[1100747] "temp"
    ref tmp[1942025]:_ref(string)[935902] "temp"
    const-val tmp[1942027]:int(64)[13] "temp"
    ref tmp[1942029]:_ref(_ic_chpl_direct_param_stride_range_iter)[1100386] "temp"
    val tmp[1942031]:int(64)[13] "temp"
    const-val tmp[1942033]:int(64)[13] "temp"
    ref tmp[1942035]:_ref(_ic_chpl_direct_param_stride_range_iter)[1100386] "temp"
    val tmp[1942037]:int(64)[13] "temp"
    val tmp[1942039]:int(64)[13] "temp"
    val tmp[1942041]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
    ref tmp[1942043]:_ref(2*int(64))[1037252] "temp"
    val tmp[1942045]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
    val tmp[1942047]:_ic_chpl_direct_counted_range_iter[1100747] "temp"
    ref tmp[1942049]:_ref(string)[935902] "temp"
    (1942051 'move' tmp[1942041](1942053 '.v' this[1105268] F5__iterator[1940105]))
    (1942057 call _freeIterator[1100431] tmp[1942041])
    (1942059 'move' tmp[1942043](1942061 '.' this[1105268] F4_tmp[1940103]))
    (1942065 call chpl__autoDestroy[1472606] tmp[1942043])
    (1942067 'move' tmp[1942045](1942069 '.v' this[1105268] F3__iterator[1940101]))
    (1942073 call _freeIterator[1100681] tmp[1942045])
    (1942075 'move' tmp[1942047](1942077 '.v' this[1105268] F2__iterator[1940099]))
    (1942081 call _freeIterator[1100931] tmp[1942047])
    (1942083 'move' tmp[1942049](1942085 '.' this[1105268] F1_localThis[1940097]))
    (1942089 call chpl__autoDestroy[1399678] tmp[1942049])
    (1942091 return _void[55])
  }
  function _ic_chpl_bytes__ref_string[1105204].hasMore[1105275](const in arg this[1105277]:_ic_chpl_bytes__ref_string[1105204]) : int(64)[13] "auto ii" "inline" "method" "resolved"
  {
    val tmp[1942144]:int(64)[13] "temp"
    const-val high[1942146]:int(64)[13] "temp"
    ref tmp[1942148]:_ref(_ic_chpl_direct_param_stride_range_iter)[1100386] "temp"
    (1942150 'move' tmp[1942148](1942152 '.' this[1105277] F5__iterator[1940105]))
    (1942155 'move' high[1942146](1942157 '.v' tmp[1942148] F1_high[1958045]))
    const-val tmp[1942160]:int(64)[13] "temp"
    (1942162 'move' tmp[1942160](1942164 '.v' this[1105277] F6_i[1940107]))
    (1942170 'move' tmp[1942144](1942167 '<=' tmp[1942160] high[1942146]))
    (1942172 return tmp[1942144])
  }
  function _ic_chpl_bytes__ref_string[1105204].getValue[1105284](const in arg this[1105286]:_ic_chpl_bytes__ref_string[1105204]) : uint(8)[100] "auto ii" "inline" "method" "resolved"
  {
    val tmp[1942175]:uint(8)[100] "temp"
    (1942180 'move' tmp[1942175](1942177 '.v' this[1105286] value[1940111]))
    (1942182 return tmp[1942175])
  }
  function _ref(string)[935902].chpl_bytes[33574](const  ref arg this[33576]:_ref(string)[935902], ref arg _retArg[1782206]:_ref(_ir_chpl_bytes__ref_string)[1105321]) : void[4] "fn returns via _retArg" "inline" "iterator fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[1942240]:_ir_chpl_bytes__ref_string[1105210] "temp"
    (1942242 '.=' _ir[1942240] F0_this[1940095] this[33576])
    (1942246 '=' _retArg[1782206] _ir[1942240])
    (1942249 return _void[55])
  }
  function _ic_chpl_bytes__ref_string[1105204].init[1105293](const in arg this[1105295]:_ic_chpl_bytes__ref_string[1105204]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    const-val tmp[1942185]:int(64)[13] "temp"
    ref tmp[1942187]:_ref(_ic_chpl_direct_param_stride_range_iter)[1100386] "temp"
    (1942189 'move' tmp[1942187](1942191 '.' this[1105295] F5__iterator[1940105]))
    (1942194 'move' tmp[1942185](1942196 '.v' tmp[1942187] F0_low[1958041]))
    (1942199 '.=' this[1105295] F7_low[1940109] tmp[1942185])
    val tmp[1942203]:int(64)[13] "temp"
    const-val tmp[1942205]:int(64)[13] "temp"
    (1942207 'move' tmp[1942205](1942209 '.v' this[1105295] F7_low[1940109]))
    (1942212 '=' tmp[1942203] tmp[1942205])
    (1942215 '.=' this[1105295] F6_i[1940107] tmp[1942203])
    (1942219 return _void[55])
  }
  function _ic_chpl_bytes__ref_string[1105204].incr[1105302](const in arg this[1105304]:_ic_chpl_bytes__ref_string[1105204]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    val call_tmp[1942222]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[1942224]:int(64)[13] "temp"
    (1942226 'move' tmp[1942224](1942228 '.v' this[1105304] F6_i[1940107]))
    (1942231 '+=' tmp[1942224] 1)
    (1942234 '.=' this[1105304] F6_i[1940107] tmp[1942224])
    (1942238 return _void[55])
  }
  type _ic_chpl_bytes__ref_string[1105204] val super[1105205]:object[22] "super class" val more[1105207]:int(64)[13] ref F0_this[1940093]:_ref(string)[935902] val F1_localThis[1940097]:string[26] val F2__iterator[1940099]:_ic_chpl_direct_counted_range_iter[1100747] val F3__iterator[1940101]:_ic_chpl_direct_counted_range_iter_helper[1100497] const F4_tmp[1940103]:2*int(64)[1037179] val F5__iterator[1940105]:_ic_chpl_direct_param_stride_range_iter[1100243] val F6_i[1940107]:int(64)[13] const-val F7_low[1940109]:int(64)[13] val value[1940111]:uint(8)[100]
  type _ir_chpl_bytes__ref_string[1105210] ref F0_this[1940095]:_ref(string)[935902]
  function _getIterator[1105219](const  ref arg ir[1105221]:_ir_chpl_bytes__ref_string[1105210]) : _ic_chpl_bytes__ref_string[1105204] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1105328]:_ic_chpl_bytes__ref_string[1105204] "dead after last mention" "RVV" "temp"
    val _ic_[1105211]:_ic_chpl_bytes__ref_string[1105204] "dead after last mention" "temp"
    const-val call_tmp[1105335]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1105338 'move' call_tmp[1105335](1105350 'sizeof_bundle' _ic_chpl_bytes__ref_string[1105204]))
    const-val cast_tmp[1105353]:c_void_ptr[149] "dead after last mention" "temp"
    (1105355 'move' cast_tmp[1105353](1105216 call chpl_here_alloc[187754] call_tmp[1105335] 31))
    (1105224 'move' _ic_[1105211](1105357 'cast' _ic_chpl_bytes__ref_string[1105204] cast_tmp[1105353]))
    (1105226 'setcid' _ic_[1105211])
    (1105333 'move' ret[1105328] _ic_[1105211])
    (1942252 '.=' ret[1105328] more[1105207] 1)
    ref tmp[1942256]:_ref(string)[935902] "temp"
    (1942261 'move' tmp[1942256](1942257 '.v' ir[1105221] F0_this[1940095]))
    (1942263 '.=' ret[1105328] F0_this[1940093] tmp[1942256])
    (1105330 return ret[1105328])
  }
  function _ref(string)[935902].codepoints[33663](const  ref arg this[33665]:_ref(string)[935902], ref arg _retArg[1782228]:_ref(_ir_codepoints__ref_string)[1119901]) : void[4] "fn returns via _retArg" "inline" "iterator fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[1942940]:_ir_codepoints__ref_string[1119790] "temp"
    (1942942 '.=' _ir[1942940] F0_this[1942269] this[33665])
    (1942946 '=' _retArg[1782228] _ir[1942940])
    (1942949 return _void[55])
  }
  type _ic_codepoints__ref_string[1119784] val super[1119785]:object[22] "super class" val more[1119787]:int(64)[13] ref F0_this[1942267]:_ref(string)[935902] val F1_localThis[1942271]:string[26] val F2__iterator[1942273]:_ic_chpl_bytes__ref_string[1105204] val F3_localThis[1942275]:string[26] val F4__iterator[1942277]:_ic_chpl_direct_counted_range_iter[1100747] val F5__iterator[1942279]:_ic_chpl_direct_counted_range_iter_helper[1100497] const F6_tmp[1942281]:2*int(64)[1037179] val F7__iterator[1942283]:_ic_chpl_direct_param_stride_range_iter[1100243] val F8_i[1942285]:int(64)[13] val F9_i[1942287]:int(64)[13] const-val F10_ret_tmp[1942289]:(syserr,int(32),int(32))[960390] const F11_tmp[1942291]:(syserr,int(32),int(32))[960390] const F12_nBytes[1942293]:int(32)[95] val F13_yret[1942295]:int(32)[95] const F14_cp[1942297]:int(32)[95] val value[1942299]:int(32)[95]
  type _ir_codepoints__ref_string[1119790] ref F0_this[1942269]:_ref(string)[935902]
  function _getIterator[1119799](const  ref arg ir[1119801]:_ir_codepoints__ref_string[1119790]) : _ic_codepoints__ref_string[1119784] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1119908]:_ic_codepoints__ref_string[1119784] "dead after last mention" "RVV" "temp"
    val _ic_[1119791]:_ic_codepoints__ref_string[1119784] "dead after last mention" "temp"
    const-val call_tmp[1119915]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1119918 'move' call_tmp[1119915](1119930 'sizeof_bundle' _ic_codepoints__ref_string[1119784]))
    const-val cast_tmp[1119933]:c_void_ptr[149] "dead after last mention" "temp"
    (1119935 'move' cast_tmp[1119933](1119796 call chpl_here_alloc[187754] call_tmp[1119915] 34))
    (1119804 'move' _ic_[1119791](1119937 'cast' _ic_codepoints__ref_string[1119784] cast_tmp[1119933]))
    (1119806 'setcid' _ic_[1119791])
    (1119913 'move' ret[1119908] _ic_[1119791])
    (1942952 '.=' ret[1119908] more[1119787] 1)
    ref tmp[1942956]:_ref(string)[935902] "temp"
    (1942961 'move' tmp[1942956](1942957 '.v' ir[1119801] F0_this[1942269]))
    (1942963 '.=' ret[1119908] F0_this[1942267] tmp[1942956])
    (1119910 return ret[1119908])
  }
  function _ref(string)[935902].this[34632](const  ref arg this[34634]:_ref(string)[935902], const  ref arg i[34629]:codepointIndex[28274], ref arg _retArg[1782238]:_ref(string)[935902]) : void[4] "fn returns via _retArg" "method" "resolved"
  {
    const-val ret[504201]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[600855]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1782262]:string[26] "temp"
    (34646 call item[34688] this[34634] i[34629] ret_tmp[1782262])
    (1782265 'move' call_tmp[600855] ret_tmp[1782262])
    (1177843 'move' ret[504201] call_tmp[600855])
    (1782240 '=' _retArg[1782238] ret[504201])
    (1782242 return _void[55])
  }
  function _ref(string)[935902].this[34660](const  ref arg this[34662]:_ref(string)[935902], const in arg i[34657]:int(64)[13], ref arg _retArg[1782256]:_ref(string)[935902]) : void[4] "fn returns via _retArg" "inline" "method" "resolved"
  {
    const-val ret[504211]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[600862]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1782278]:string[26] "temp"
    (34674 call item[35008] this[34662] i[34657] ret_tmp[1782278])
    (1782281 'move' call_tmp[600862] ret_tmp[1782278])
    (1177849 'move' ret[504211] call_tmp[600862])
    (1782258 '=' _retArg[1782256] ret[504211])
    (1782260 return _void[55])
  }
  function _ref(string)[935902].item[34688](const  ref arg this[34690]:_ref(string)[935902], const  ref arg i[34685]:codepointIndex[28274], ref arg _retArg[1782268]:_ref(string)[935902]) : void[4] "fn returns via _retArg" "method" "resolved"
  {
    val ret[504221]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[553559]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[553567]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    const-val call_tmp[600877]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (600880 'move' call_tmp[600877](34699 call <[29040] i[34685] 0))
    (553569 'move' tmp[553567] call_tmp[600877])
    (553574 'move' tmp[553559] tmp[553567])
    const-val call_tmp[600882]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (600885 'move' call_tmp[600882] tmp[553559])
    if call_tmp[600882]
    {
      (34708 call halt[1154062] "index " i[34685] " out of bounds for string")
    }
    const-val call_tmp[600889]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (600892 'move' call_tmp[600889](34721 call isEmpty[35061] this[34690]))
    const-val call_tmp[600894]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (600897 'move' call_tmp[600894] call_tmp[600889])
    if call_tmp[600894]
    {
      (504227 'move' ret[504221](1782272 call chpl__initCopy[978441] ""))
      gotoReturn _end_item[504219] _end_item[504219]
    }
    const-val call_tmp[600901]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (600904 'move' call_tmp[600901](34751 call isASCII[31046] this[34690]))
    const-val call_tmp[600906]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (600909 'move' call_tmp[600906] call_tmp[600901])
    if call_tmp[600906]
    {
      const-val tmp[553586]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val tmp[553594]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[600923]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (600926 'move' call_tmp[600923](34755 call numBytes[32807] this[34690]))
      const-val call_tmp[600928]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (600931 'move' call_tmp[600928](34758 call >=[29190] i[34685] call_tmp[600923]))
      (553596 'move' tmp[553594] call_tmp[600928])
      (553601 'move' tmp[553586] tmp[553594])
      const-val call_tmp[600933]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (600936 'move' call_tmp[600933] tmp[553586])
      if call_tmp[600933]
      {
        const-val call_tmp[600940]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (600943 'move' call_tmp[600940](34768 call size[32769] this[34690]))
        (34771 call halt[1172670] "index " i[34685] " out of bounds for string with length " call_tmp[600940])
      }
      ref call_tmp[600947]:_ref(c_ptr(uint(8)))[935395] "dead at end of block" "maybe param" "temp"
      (600950 'move' call_tmp[600947](34786 call buff[758003] this[34690]))
      const-val call_tmp[600952]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (600955 'move' call_tmp[600952](34793 call _cast[39514] i[34685]))
      ref call_tmp[600959]:_ref(int(32))[934589] "dead at end of block" "maybe param" "temp"
      (600962 'move' call_tmp[600959](34799 call locale_id[758081] this[34690]))
      const-val call_tmp[600964]:(c_ptr(uint(8)),int(64))[959411] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1177695]:c_ptr(uint(8))[935386] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1177699 'move' coerce_tmp[1177695](1177697 'deref' call_tmp[600947]))
      const-val coerce_tmp[1177701]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1177705 'move' coerce_tmp[1177701](1177703 'deref' call_tmp[600959]))
      const-val ret_tmp[1783762]:(c_ptr(uint(8)),int(64))[959411] "temp"
      (34803 call bufferCopy[172940] coerce_tmp[1177695] call_tmp[600952] 1 coerce_tmp[1177701] ret_tmp[1783762])
      (1783765 'move' call_tmp[600964] ret_tmp[1783762])
      const-val tmp[34804]:(c_ptr(uint(8)),int(64))[959411] "dead at end of block" "insert auto destroy" "temp"
      (540463 'move' tmp[34804] call_tmp[600964])
      1
      ref call_tmp[600969]:_ref(c_ptr(uint(8)))[935395] "dead at end of block" "maybe param" "temp"
      (600972 'move' call_tmp[600969](1177715 '.' tmp[34804] x0[959407]))
      val newBuff[34779]:c_ptr(uint(8))[935386] "dead at end of block" "insert auto destroy"
      val coerce_tmp[1177720]:c_ptr(uint(8))[935386] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1177724 'move' coerce_tmp[1177720](1177722 'deref' call_tmp[600969]))
      (1794046 '=' newBuff[34779] coerce_tmp[1177720])
      (540465 'noop')
      ref call_tmp[600974]:_ref(int(64))[934535] "dead at end of block" "maybe param" "temp"
      (600977 'move' call_tmp[600974](1177729 '.' tmp[34804] x1[959409]))
      const-val allocSize[34781]:int(64)[13] "dead at end of block" "insert auto destroy"
      const-val coerce_tmp[1177734]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1177738 'move' coerce_tmp[1177734](1177736 'deref' call_tmp[600974]))
      (1794049 '=' allocSize[34781] coerce_tmp[1177734])
      (540467 'noop')
      const-val call_tmp[600979]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1781748]:string[26] "temp"
      (34823 call chpl_createStringWithOwnedBufferNV[30673] newBuff[34779] 1 allocSize[34781] 1 ret_tmp[1781748])
      (1781751 'move' call_tmp[600979] ret_tmp[1781748])
      (1177837 'move' ret[504221] call_tmp[600979])
      (1794058 call chpl__autoDestroy[1403387] tmp[34804])
      gotoReturn _end_item[504219] _end_item[504219]
    }
    {
      val charCount[34827]:int(64)[13] "dead at end of block" "insert auto destroy"
      (540469 'move' charCount[34827] 0)
      {
        val _indexOfInterest[34903]:(int(32),byteIndex,int(64))[1119077] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[34904]:_ic__cpIndexLen__ref_string[1119320] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[600986]:_ir__cpIndexLen__ref_string[1119326] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val default_arg_start[1177746]:byteIndex[28170] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        const-val ret_tmp[1786551]:byteIndex[28170] "temp"
        (1177748 call _cpIndexLen_default_start[1118966] this[34690] ret_tmp[1786551])
        (1786554 'move' default_arg_start[1177746] ret_tmp[1786551])
        const-val ret_tmp[1781922]:_ir__cpIndexLen__ref_string[1119326] "temp"
        (34840 call _cpIndexLen[31106] this[34690] default_arg_start[1177746] ret_tmp[1781922])
        (1781925 'move' call_tmp[600986] ret_tmp[1781922])
        (34913 'move' _iterator[34904](34911 call _getIterator[1119335] call_tmp[600986]))
        {
          val ret[1839456]:_ir__cpIndexLen__ref_string[1119326] "dead after last mention" "RVV" "temp"
          const-val call_tmp[1839458]:string[26] "dead at end of block" "maybe param" "temp"
          const-val ret_tmp[1839460]:string[26] "temp"
          ref this[1840685]:_ref(string)[935902] "temp"
          (1840690 'move' this[1840685](1840687 '.v' _iterator[34904] F0_this[1938741]))
          (1839463 call localize[32886] this[1840685] ret_tmp[1839460])
          (1839466 'move' call_tmp[1839458] ret_tmp[1839460])
          val localThis[1839469]:string[26] "dead at end of block" "insert auto destroy"
          (1839471 'move' localThis[1839469] call_tmp[1839458])
          const-val call_tmp[1839474]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1839476 'move' call_tmp[1839474](1839479 call isASCII[31046] localThis[1839469]))
          const-val call_tmp[1839481]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1839483 'move' call_tmp[1839481] call_tmp[1839474])
          if call_tmp[1839474]
          {
            const-val _iterator[1839488]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1105514] "dead at end of block" "expr temp" "insert auto destroy" "temp"
            const-val call_tmp[1839490]:range(int(64),bounded,false)[1023946] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[1839492]:range(int(64),bounded,false)[1023946] "temp"
            ref this[1840692]:_ref(string)[935902] "temp"
            (1840697 'move' this[1840692](1840694 '.v' _iterator[34904] F0_this[1938741]))
            (1839495 call byteIndices[31065] this[1840692] ret_tmp[1839492])
            (1839498 'move' call_tmp[1839490] ret_tmp[1839492])
            val call_tmp[1839501]:_ic_these_range_int64_t_bounded_F[1093682] "dead at end of block" "expr temp" "maybe param" "temp"
            (1839503 'move' call_tmp[1839501](1839506 call _getIterator[1092299] call_tmp[1839490]))
            const-val call_tmp[1839508]:_ir_chpl_bytes__ref_string[1105210] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[1839510]:_ir_chpl_bytes__ref_string[1105210] "temp"
            ref this[1840699]:_ref(string)[935902] "temp"
            (1840704 'move' this[1840699](1840701 '.v' _iterator[34904] F0_this[1938741]))
            (1839513 call chpl_bytes[33574] this[1840699] ret_tmp[1839510])
            (1839516 'move' call_tmp[1839508] ret_tmp[1839510])
            val call_tmp[1839519]:_ic_chpl_bytes__ref_string[1105204] "dead at end of block" "expr temp" "maybe param" "temp"
            (1839521 'move' call_tmp[1839519](1839524 call _getIterator[1105219] call_tmp[1839508]))
            const-val ret_tmp[1839526]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1105514] "temp"
            (1839529 call _build_tuple[1105472] call_tmp[1839501] call_tmp[1839519] ret_tmp[1839526])
            (1839533 'move' _iterator[1839488] ret_tmp[1839526])
            val _iterator[1839536]:_ic_these_range_int64_t_bounded_F[1093682] "temp"
            (1839538 'move' _iterator[1839536](1839540 '.v' _iterator[1839488] x0[1105510]))
            val _iterator[1839543]:_ic_chpl_bytes__ref_string[1105204] "temp"
            (1839545 'move' _iterator[1839543](1839547 '.v' _iterator[1839488] x1[1105512]))
            {
              (1839552 call zip1[1093717] _iterator[1839536])
            }
            {
              (1839556 call zip1[1105239] _iterator[1839543])
            }
            const-val isFinished[1839558]:bool[10] "temp"
            val hasMore[1839560]:bool[10] "temp"
            CForLoop[1839562]
            {
              val _indexOfInterest[1839585]:(int(64),uint(8))[1107988] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              {
                (1839589 call zip2[1105248] _iterator[1839543])
              }
              {
                const-val retTmp[1839592]:int(64)[13] "temp"
                (1839594 'move' retTmp[1839592](1839597 call hasMore[1105275] _iterator[1839543]))
                (1839599 'move' hasMore[1839560](1839601 'cast' bool[10] retTmp[1839592]))
              }
              (1839604 'move' isFinished[1839558](1839606 '!' hasMore[1839560]))
              if isFinished[1839558]
              {
                (1839610 'chpl_error' c"zippered iterations have non-equal lengths")
              }
              {
                (1839614 'move' _index[1839629](1839617 call getValue[1105284] _iterator[1839543]))
              }
              {
                (1839621 call zip2[1093726] _iterator[1839536])
              }
              {
                (1839624 'move' _index[1839635](1839627 call getValue[1093762] _iterator[1839536]))
              }
              val _index[1839629]:uint(8)[100] "temp"
              (1839631 '.=' _indexOfInterest[1839585] x1[1107986] _index[1839629])
              val _index[1839635]:int(64)[13] "temp"
              (1839637 '.=' _indexOfInterest[1839585] x0[1107984] _index[1839635])
              1
              const-val i[1839642]:int(64)[13] "const" "index var" "insert auto destroy"
              (1839644 'move' i[1839642](1839646 '.v' _indexOfInterest[1839585] x0[1107984]))
              const-val b[1839649]:uint(8)[100] "const" "index var" "insert auto destroy"
              (1839651 'move' b[1839649](1839653 '.v' _indexOfInterest[1839585] x1[1107986]))
              const-val yret[1839656]:(int(32),byteIndex,int(64))[1119077] "dead after last mention" "YVV" "temp"
              val call_tmp[1839658]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[1839660]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
              (1839662 'move' call_tmp[1839660](1839664 'cast' int(32)[95] b[1839649]))
              const-val call_tmp[1839667]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret_tmp[1839669]:byteIndex[28170] "temp"
              (1839672 call _cast[39483] i[1839642] ret_tmp[1839669])
              (1839675 'move' call_tmp[1839667] ret_tmp[1839669])
              const-val call_tmp[1839678]:(int(32),byteIndex,int(64))[1119077] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret_tmp[1839680]:(int(32),byteIndex,int(64))[1119077] "temp"
              (1839683 call _build_tuple[1119027] call_tmp[1839660] call_tmp[1839667] 1 ret_tmp[1839680])
              (1839688 'move' call_tmp[1839678] ret_tmp[1839680])
              (1839691 'move' yret[1839656] call_tmp[1839678])
              const-val _yieldedIndex[1840273]:(int(32),byteIndex,int(64))[1119077] "temp"
              (1840504 'move' _yieldedIndex[1840273] call_tmp[1839678])
              {
                1
                const-val cp[1840276]:int(32)[95] "const" "index var" "insert auto destroy"
                (1840278 'move' cp[1840276](1840280 '.v' _yieldedIndex[1840273] x0[1119071]))
                ref byteIdx[1840283]:_ref(byteIndex)[946682] "index var" "insert auto destroy"
                (1840285 'move' byteIdx[1840283](1840287 '.v' _yieldedIndex[1840273] x1[1119073]))
                const-val nBytes[1840290]:int(64)[13] "const" "index var" "insert auto destroy"
                (1840292 'move' nBytes[1840290](1840294 '.v' _yieldedIndex[1840273] x2[1119075]))
                {
                  const-val call_tmp[1840298]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1840300 'move' call_tmp[1840298](1840303 call ==[29538] charCount[34827] i[34685]))
                  const-val call_tmp[1840306]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1840308 'move' call_tmp[1840306] call_tmp[1840298])
                  if call_tmp[1840306]
                  {
                    ref call_tmp[1840313]:_ref(c_ptr(uint(8)))[935395] "dead at end of block" "maybe param" "temp"
                    (1840315 'move' call_tmp[1840313](1840318 call buff[758003] this[34690]))
                    const-val call_tmp[1840320]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                    (1840322 'move' call_tmp[1840320](1840325 call _cast[39462] byteIdx[1840283]))
                    ref call_tmp[1840327]:_ref(int(32))[934589] "dead at end of block" "maybe param" "temp"
                    (1840329 'move' call_tmp[1840327](1840332 call locale_id[758081] this[34690]))
                    const-val call_tmp[1840334]:(c_ptr(uint(8)),int(64))[959411] "dead at end of block" "maybe param" "temp"
                    val coerce_tmp[1840336]:c_ptr(uint(8))[935386] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (1840338 'move' coerce_tmp[1840336](1840340 'deref' call_tmp[1840313]))
                    const-val coerce_tmp[1840342]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (1840344 'move' coerce_tmp[1840342](1840346 'deref' call_tmp[1840327]))
                    const-val ret_tmp[1840348]:(c_ptr(uint(8)),int(64))[959411] "temp"
                    (1840351 call bufferCopy[172940] coerce_tmp[1840336] call_tmp[1840320] nBytes[1840290] coerce_tmp[1840342] ret_tmp[1840348])
                    (1840357 'move' call_tmp[1840334] ret_tmp[1840348])
                    const-val tmp[1840360]:(c_ptr(uint(8)),int(64))[959411] "dead at end of block" "insert auto destroy" "temp"
                    (1840362 'move' tmp[1840360] call_tmp[1840334])
                    1
                    ref call_tmp[1840366]:_ref(c_ptr(uint(8)))[935395] "dead at end of block" "maybe param" "temp"
                    (1840368 'move' call_tmp[1840366](1840370 '.' tmp[1840360] x0[959407]))
                    val newBuff[1840373]:c_ptr(uint(8))[935386] "dead at end of block" "insert auto destroy"
                    val coerce_tmp[1840375]:c_ptr(uint(8))[935386] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1840377 'move' coerce_tmp[1840375](1840379 'deref' call_tmp[1840366]))
                    (1840381 '=' newBuff[1840373] coerce_tmp[1840375])
                    (1840384 'noop')
                    ref call_tmp[1840385]:_ref(int(64))[934535] "dead at end of block" "maybe param" "temp"
                    (1840387 'move' call_tmp[1840385](1840389 '.' tmp[1840360] x1[959409]))
                    const-val allocSize[1840392]:int(64)[13] "dead at end of block" "insert auto destroy"
                    const-val coerce_tmp[1840394]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1840396 'move' coerce_tmp[1840394](1840398 'deref' call_tmp[1840385]))
                    (1840400 '=' allocSize[1840392] coerce_tmp[1840394])
                    (1840403 'noop')
                    const-val call_tmp[1840404]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1840406]:string[26] "temp"
                    (1840409 call chpl_createStringWithOwnedBufferNV[30673] newBuff[1840373] nBytes[1840290] allocSize[1840392] 1 ret_tmp[1840406])
                    (1840415 'move' call_tmp[1840404] ret_tmp[1840406])
                    (1840418 'move' ret[504221] call_tmp[1840404])
                    (1840422 call chpl__autoDestroy[1403387] tmp[1840360])
                    ref moreRef1[1840440]:_ref(int(64))[934535] "temp"
                    (1840442 'move' moreRef1[1840440](1840444 '.' _iterator[1839536] more[1093685]))
                    const-val moreVal1[1840447]:int(64)[13] "const" "temp"
                    (1840449 '=' moreVal1[1840447] moreRef1[1840440])
                    const-val moreValNeg1[1840452]:int(64)[13] "const" "temp"
                    (1840454 'move' moreValNeg1[1840452](1840456 'u-' moreVal1[1840447]))
                    (1840458 '=' moreRef1[1840440] moreValNeg1[1840452])
                    (1840462 call advance[1093708] _iterator[1839536])
                    ref moreRef2[1840464]:_ref(int(64))[934535] "temp"
                    (1840466 'move' moreRef2[1840464](1840468 '.' _iterator[1839543] more[1105207]))
                    const-val moreVal2[1840471]:int(64)[13] "const" "temp"
                    (1840473 '=' moreVal2[1840471] moreRef2[1840464])
                    const-val moreValNeg2[1840476]:int(64)[13] "const" "temp"
                    (1840478 'move' moreValNeg2[1840476](1840480 'u-' moreVal2[1840471]))
                    (1840482 '=' moreRef2[1840464] moreValNeg2[1840476])
                    (1840486 call advance[1105230] _iterator[1839543])
                    (1840489 call chpl__autoDestroy[1399941] call_tmp[1839667])
                    (1840492 call _freeIterator[1105672] _iterator[1839488])
                    (1840495 call chpl__autoDestroy[1479306] _iterator[1839488])
                    (1840498 call chpl__autoDestroy[1472309] call_tmp[1839490])
                    (1840501 call chpl__autoDestroy[1399678] localThis[1839469])
                    (1840425 call _freeIterator[1119508] _iterator[34904])
                    (1840428 call chpl__autoDestroy[1399941] default_arg_start[1177746])
                    gotoReturn _end_item[504219] _end_item[504219]
                  }
                  (1840434 call +=[451373] charCount[34827] 1)
                }
                label _continueLabel[1840437]
              }
              (1839765 call chpl__autoDestroy[1399941] call_tmp[1839667])
              {
                (1839769 call zip3[1093735] _iterator[1839536])
              }
              {
                (1839773 call zip3[1105257] _iterator[1839543])
              }
              {
                {
                  (1839566 call init[1093771] _iterator[1839536])
                }
                {
                  (1839570 call init[1105293] _iterator[1839543])
                }
              }
              {
                (1839574 call hasMore[1093753] _iterator[1839536])
              }
              {
                {
                  (1839579 call incr[1093780] _iterator[1839536])
                }
                {
                  (1839583 call incr[1105302] _iterator[1839543])
                }
              }
            }
            {
              const-val retTmp[1839776]:int(64)[13] "temp"
              (1839778 'move' retTmp[1839776](1839781 call hasMore[1105275] _iterator[1839543]))
              (1839783 'move' hasMore[1839560](1839785 'cast' bool[10] retTmp[1839776]))
            }
            if hasMore[1839560]
            {
              (1839790 'chpl_error' c"zippered iterations have non-equal lengths")
            }
            {
              (1839795 call zip4[1105266] _iterator[1839543])
            }
            {
              (1839799 call zip4[1093744] _iterator[1839536])
            }
            (1839802 call _freeIterator[1105672] _iterator[1839488])
            (1839805 call chpl__autoDestroy[1479306] _iterator[1839488])
            (1839808 call chpl__autoDestroy[1472309] call_tmp[1839490])
          }
          {
            const-val call_tmp[1839811]:int(64)[13] "dead at end of block" "maybe param" "temp"
            ref start[1840706]:_ref(byteIndex)[946682] "temp"
            (1840711 'move' start[1840706](1840708 '.v' _iterator[34904] F1_start[1938745]))
            (1839813 'move' call_tmp[1839811](1839816 call _cast[39462] start[1840706]))
            val i[1839818]:int(64)[13] "dead at end of block" "insert auto destroy"
            (1839820 'move' i[1839818] call_tmp[1839811])
            const-val call_tmp[1839823]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1839825 'move' call_tmp[1839823](1839828 call >[437730] call_tmp[1839811] 0))
            const-val call_tmp[1839831]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1839833 'move' call_tmp[1839831] call_tmp[1839823])
            if call_tmp[1839823]
            {
              val tmp[1839838]:bool[10] "dead after last mention" "temp"
              const-val tmp[1839840]:bool[10] "dead after last mention" "maybe param" "temp"
              ref call_tmp[1839842]:_ref(int(64))[934535] "dead after last mention" "maybe param" "temp"
              (1839844 'move' call_tmp[1839842](1839847 call buffLen[757925] localThis[1839469]))
              const-val coerce_tmp[1839849]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1839851 'move' coerce_tmp[1839849](1839853 'deref' call_tmp[1839842]))
              (1839855 'move' tmp[1839840](1839858 call <[437510] i[1839818] coerce_tmp[1839849]))
              val tmp[1839861]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              const-val tmp[1839863]:bool[10] "dead after last mention" "maybe param" "temp"
              const-val call_tmp[1839865]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1839867 'move' call_tmp[1839865] tmp[1839840])
              (1839870 'move' tmp[1839863] tmp[1839840])
              if tmp[1839840]
              {
                const-val tmp[1839875]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                ref call_tmp[1839877]:_ref(uint(8))[934871] "dead after last mention" "maybe param" "temp"
                ref _this_tmp_[1839879]:_ref(c_ptr(uint(8)))[935395] "dead after last mention" "temp"
                (1839881 'move' _this_tmp_[1839879](1839884 call buff[758003] localThis[1839469]))
                val coerce_tmp[1839886]:c_ptr(uint(8))[935386] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1839888 'move' coerce_tmp[1839886](1839890 'deref' _this_tmp_[1839879]))
                (1839892 'move' call_tmp[1839877](1839895 call this[952013] coerce_tmp[1839886] i[1839818]))
                const-val call_tmp[1839898]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1839900]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1839902 'move' coerce_tmp[1839900](1839904 'deref' call_tmp[1839877]))
                (1839906 'move' call_tmp[1839898](1839909 call isInitialByte[181540] coerce_tmp[1839900]))
                const-val call_tmp[1839911]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1839913 'move' call_tmp[1839911](1839916 call ![7494] call_tmp[1839898]))
                (1839918 'move' tmp[1839875] call_tmp[1839911])
                (1839921 'move' tmp[1839861] call_tmp[1839911])
              }
              {
                (1839925 'move' tmp[1839861] 0)
              }
              (1839929 'move' tmp[1839838] tmp[1839861])
              WhileDo[1839932]
              {
                (1839935 call +=[451373] i[1839818] 1)
                const-val tmp[1839938]:bool[10] "dead after last mention" "maybe param" "temp"
                ref call_tmp[1839940]:_ref(int(64))[934535] "dead after last mention" "maybe param" "temp"
                (1839942 'move' call_tmp[1839940](1839945 call buffLen[757925] localThis[1839469]))
                const-val coerce_tmp[1839947]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1839949 'move' coerce_tmp[1839947](1839951 'deref' call_tmp[1839940]))
                (1839953 'move' tmp[1839938](1839956 call <[437510] i[1839818] coerce_tmp[1839947]))
                val tmp[1839959]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[1839961]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1839963]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1839965 'move' call_tmp[1839963] tmp[1839938])
                (1839968 'move' tmp[1839961] tmp[1839938])
                if tmp[1839938]
                {
                  const-val tmp[1839973]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  ref call_tmp[1839975]:_ref(uint(8))[934871] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[1839977]:_ref(c_ptr(uint(8)))[935395] "dead after last mention" "temp"
                  (1839979 'move' _this_tmp_[1839977](1839982 call buff[758003] localThis[1839469]))
                  val coerce_tmp[1839984]:c_ptr(uint(8))[935386] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1839986 'move' coerce_tmp[1839984](1839988 'deref' _this_tmp_[1839977]))
                  (1839990 'move' call_tmp[1839975](1839993 call this[952013] coerce_tmp[1839984] i[1839818]))
                  const-val call_tmp[1839996]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1839998]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1840000 'move' coerce_tmp[1839998](1840002 'deref' call_tmp[1839975]))
                  (1840004 'move' call_tmp[1839996](1840007 call isInitialByte[181540] coerce_tmp[1839998]))
                  const-val call_tmp[1840009]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1840011 'move' call_tmp[1840009](1840014 call ![7494] call_tmp[1839996]))
                  (1840016 'move' tmp[1839973] call_tmp[1840009])
                  (1840019 'move' tmp[1839959] call_tmp[1840009])
                }
                {
                  (1840023 'move' tmp[1839959] 0)
                }
                (1840027 'move' tmp[1839838] tmp[1839959])
                tmp[1839838]
              }
            }
            val tmp[1840031]:bool[10] "dead after last mention" "temp"
            ref call_tmp[1840033]:_ref(int(64))[934535] "dead after last mention" "maybe param" "temp"
            (1840035 'move' call_tmp[1840033](1840038 call buffLen[757925] localThis[1839469]))
            const-val call_tmp[1840040]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[1840042]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1840044 'move' coerce_tmp[1840042](1840046 'deref' call_tmp[1840033]))
            (1840048 'move' call_tmp[1840040](1840051 call <[437510] i[1839818] coerce_tmp[1840042]))
            (1840054 'move' tmp[1840031] call_tmp[1840040])
            WhileDo[1840057]
            {
              ref call_tmp[1840059]:_ref(c_ptr(uint(8)))[935395] "dead at end of block" "maybe param" "temp"
              (1840061 'move' call_tmp[1840059](1840064 call buff[758003] localThis[1839469]))
              ref call_tmp[1840066]:_ref(int(64))[934535] "dead at end of block" "maybe param" "temp"
              (1840068 'move' call_tmp[1840066](1840071 call buffLen[757925] localThis[1839469]))
              const-val call_tmp[1840073]:(syserr,int(32),int(32))[960390] "dead at end of block" "maybe param" "temp"
              val coerce_tmp[1840075]:c_ptr(uint(8))[935386] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1840077 'move' coerce_tmp[1840075](1840079 'deref' call_tmp[1840059]))
              const-val coerce_tmp[1840081]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1840083 'move' coerce_tmp[1840081](1840085 'deref' call_tmp[1840066]))
              const-val ret_tmp[1840087]:(syserr,int(32),int(32))[960390] "temp"
              (1840090 call decodeHelp[174418] coerce_tmp[1840075] coerce_tmp[1840081] i[1839818] 1 ret_tmp[1840087])
              (1840096 'move' call_tmp[1840073] ret_tmp[1840087])
              const-val tmp[1840099]:(syserr,int(32),int(32))[960390] "dead at end of block" "const" "insert auto destroy" "temp"
              (1840101 'move' tmp[1840099] call_tmp[1840073])
              1
              ref call_tmp[1840105]:_ref(syserr)[946755] "dead at end of block" "maybe param" "reference to a const" "temp"
              (1840107 'move' call_tmp[1840105](1840109 '.' tmp[1840099] x0[960384]))
              const-val decodeRet[1840112]:syserr[223501] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[1840114]:syserr[223501] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1840116 'move' coerce_tmp[1840114](1840118 'deref' call_tmp[1840105]))
              (1840120 'move' decodeRet[1840112](1840123 call chpl__initCopy[960255] coerce_tmp[1840114]))
              ref call_tmp[1840125]:_ref(int(32))[934589] "dead at end of block" "maybe param" "reference to a const" "temp"
              (1840127 'move' call_tmp[1840125](1840129 '.' tmp[1840099] x1[960386]))
              const-val cp[1840132]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[1840134]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1840136 'move' coerce_tmp[1840134](1840138 'deref' call_tmp[1840125]))
              (1840140 'move' cp[1840132](1840143 call chpl__initCopy[960527] coerce_tmp[1840134]))
              ref call_tmp[1840145]:_ref(int(32))[934589] "dead at end of block" "maybe param" "reference to a const" "temp"
              (1840147 'move' call_tmp[1840145](1840149 '.' tmp[1840099] x2[960388]))
              const-val nBytes[1840152]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[1840154]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1840156 'move' coerce_tmp[1840154](1840158 'deref' call_tmp[1840145]))
              (1840160 'move' nBytes[1840152](1840163 call chpl__initCopy[960527] coerce_tmp[1840154]))
              const-val yret[1840165]:(int(32),byteIndex,int(64))[1119077] "dead after last mention" "YVV" "temp"
              val call_tmp[1840167]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[1840169]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
              (1840171 'move' call_tmp[1840169] cp[1840132])
              const-val call_tmp[1840174]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret_tmp[1840176]:byteIndex[28170] "temp"
              (1840179 call _cast[39483] i[1839818] ret_tmp[1840176])
              (1840182 'move' call_tmp[1840174] ret_tmp[1840176])
              const-val call_tmp[1840185]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1840187 'move' call_tmp[1840185](1840189 'cast' int(64)[13] nBytes[1840152]))
              const-val call_tmp[1840192]:(int(32),byteIndex,int(64))[1119077] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret_tmp[1840194]:(int(32),byteIndex,int(64))[1119077] "temp"
              (1840197 call _build_tuple[1119027] cp[1840132] call_tmp[1840174] call_tmp[1840185] ret_tmp[1840194])
              (1840202 'move' call_tmp[1840192] ret_tmp[1840194])
              (1840205 'move' yret[1840165] call_tmp[1840192])
              const-val _yieldedIndex[1840506]:(int(32),byteIndex,int(64))[1119077] "temp"
              (1840683 'move' _yieldedIndex[1840506] call_tmp[1840192])
              {
                1
                const-val cp[1840509]:int(32)[95] "const" "index var" "insert auto destroy"
                (1840511 'move' cp[1840509](1840513 '.v' _yieldedIndex[1840506] x0[1119071]))
                ref byteIdx[1840516]:_ref(byteIndex)[946682] "index var" "insert auto destroy"
                (1840518 'move' byteIdx[1840516](1840520 '.v' _yieldedIndex[1840506] x1[1119073]))
                const-val nBytes[1840523]:int(64)[13] "const" "index var" "insert auto destroy"
                (1840525 'move' nBytes[1840523](1840527 '.v' _yieldedIndex[1840506] x2[1119075]))
                {
                  const-val call_tmp[1840531]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1840533 'move' call_tmp[1840531](1840536 call ==[29538] charCount[34827] i[34685]))
                  const-val call_tmp[1840539]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1840541 'move' call_tmp[1840539] call_tmp[1840531])
                  if call_tmp[1840539]
                  {
                    ref call_tmp[1840546]:_ref(c_ptr(uint(8)))[935395] "dead at end of block" "maybe param" "temp"
                    (1840548 'move' call_tmp[1840546](1840551 call buff[758003] this[34690]))
                    const-val call_tmp[1840553]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                    (1840555 'move' call_tmp[1840553](1840558 call _cast[39462] byteIdx[1840516]))
                    ref call_tmp[1840560]:_ref(int(32))[934589] "dead at end of block" "maybe param" "temp"
                    (1840562 'move' call_tmp[1840560](1840565 call locale_id[758081] this[34690]))
                    const-val call_tmp[1840567]:(c_ptr(uint(8)),int(64))[959411] "dead at end of block" "maybe param" "temp"
                    val coerce_tmp[1840569]:c_ptr(uint(8))[935386] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (1840571 'move' coerce_tmp[1840569](1840573 'deref' call_tmp[1840546]))
                    const-val coerce_tmp[1840575]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (1840577 'move' coerce_tmp[1840575](1840579 'deref' call_tmp[1840560]))
                    const-val ret_tmp[1840581]:(c_ptr(uint(8)),int(64))[959411] "temp"
                    (1840584 call bufferCopy[172940] coerce_tmp[1840569] call_tmp[1840553] nBytes[1840523] coerce_tmp[1840575] ret_tmp[1840581])
                    (1840590 'move' call_tmp[1840567] ret_tmp[1840581])
                    const-val tmp[1840593]:(c_ptr(uint(8)),int(64))[959411] "dead at end of block" "insert auto destroy" "temp"
                    (1840595 'move' tmp[1840593] call_tmp[1840567])
                    1
                    ref call_tmp[1840599]:_ref(c_ptr(uint(8)))[935395] "dead at end of block" "maybe param" "temp"
                    (1840601 'move' call_tmp[1840599](1840603 '.' tmp[1840593] x0[959407]))
                    val newBuff[1840606]:c_ptr(uint(8))[935386] "dead at end of block" "insert auto destroy"
                    val coerce_tmp[1840608]:c_ptr(uint(8))[935386] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1840610 'move' coerce_tmp[1840608](1840612 'deref' call_tmp[1840599]))
                    (1840614 '=' newBuff[1840606] coerce_tmp[1840608])
                    (1840617 'noop')
                    ref call_tmp[1840618]:_ref(int(64))[934535] "dead at end of block" "maybe param" "temp"
                    (1840620 'move' call_tmp[1840618](1840622 '.' tmp[1840593] x1[959409]))
                    const-val allocSize[1840625]:int(64)[13] "dead at end of block" "insert auto destroy"
                    const-val coerce_tmp[1840627]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1840629 'move' coerce_tmp[1840627](1840631 'deref' call_tmp[1840618]))
                    (1840633 '=' allocSize[1840625] coerce_tmp[1840627])
                    (1840636 'noop')
                    const-val call_tmp[1840637]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1840639]:string[26] "temp"
                    (1840642 call chpl_createStringWithOwnedBufferNV[30673] newBuff[1840606] nBytes[1840523] allocSize[1840625] 1 ret_tmp[1840639])
                    (1840648 'move' call_tmp[1840637] ret_tmp[1840639])
                    (1840651 'move' ret[504221] call_tmp[1840637])
                    (1840655 call chpl__autoDestroy[1403387] tmp[1840593])
                    (1840674 call chpl__autoDestroy[1399941] call_tmp[1840174])
                    (1840677 call chpl__autoDestroy[1403553] tmp[1840099])
                    (1840680 call chpl__autoDestroy[1399678] localThis[1839469])
                    (1840658 call _freeIterator[1119508] _iterator[34904])
                    (1840661 call chpl__autoDestroy[1399941] default_arg_start[1177746])
                    gotoReturn _end_item[504219] _end_item[504219]
                  }
                  (1840667 call +=[451373] charCount[34827] 1)
                }
                label _continueLabel[1840670]
              }
              (1840225 call chpl__autoDestroy[1399941] call_tmp[1840174])
              const-val coerce_tmp[1840227]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1840229 'move' coerce_tmp[1840227](1840231 'cast' int(64)[13] nBytes[1840152]))
              (1840235 call +=[451373] i[1839818] coerce_tmp[1840227])
              (1840239 call chpl__autoDestroy[1403553] tmp[1840099])
              ref call_tmp[1840241]:_ref(int(64))[934535] "dead after last mention" "maybe param" "temp"
              (1840243 'move' call_tmp[1840241](1840246 call buffLen[757925] localThis[1839469]))
              const-val call_tmp[1840248]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1840250]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1840252 'move' coerce_tmp[1840250](1840254 'deref' call_tmp[1840241]))
              (1840256 'move' call_tmp[1840248](1840259 call <[437510] i[1839818] coerce_tmp[1840250]))
              (1840262 'move' tmp[1840031] call_tmp[1840248])
              tmp[1840031]
            }
          }
          (1840267 call chpl__autoDestroy[1399678] localThis[1839469])
          label _end_cpIndexLen[1840269]
        }
        label _breakLabel[34909]
        (1794074 call _freeIterator[1119508] _iterator[34904])
        (1794076 call chpl__autoDestroy[1399941] default_arg_start[1177746])
      }
      {
        const-val call_tmp[601047]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (601050 'move' call_tmp[601047](34965 call size[32769] this[34690]))
        (34968 call halt[1172670] "index " i[34685] " out of bounds for string with length " call_tmp[601047])
      }
      (504245 'move' ret[504221](1782274 call chpl__initCopy[978441] ""))
      gotoReturn _end_item[504219] _end_item[504219]
    }
    label _end_item[504219]
    (1782270 '=' _retArg[1782268] ret[504221])
    (1782276 return _void[55])
  }
  function _ref(string)[935902].item[35008](const  ref arg this[35010]:_ref(string)[935902], const in arg i[35005]:int(64)[13], ref arg _retArg[1782284]:_ref(string)[935902]) : void[4] "fn returns via _retArg" "inline" "method" "resolved"
  {
    const-val ret[504251]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[601052]:codepointIndex[28274] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1782986]:codepointIndex[28274] "temp"
    (35019 call _cast[39535] i[35005] ret_tmp[1782986])
    (1782989 'move' call_tmp[601052] ret_tmp[1782986])
    const-val call_tmp[601057]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1782232]:string[26] "temp"
    (35022 call this[34632] this[35010] call_tmp[601052] ret_tmp[1782232])
    (1782235 'move' call_tmp[601057] ret_tmp[1782232])
    (1177846 'move' ret[504251] call_tmp[601057])
    (1782286 '=' _retArg[1782284] ret[504251])
    (1794079 call chpl__autoDestroy[1400008] call_tmp[601052])
    (1782288 return _void[55])
  }
  function _ref(string)[935902].this[1108314](const  ref arg this[1108320]:_ref(string)[935902], const in arg r[1108322]:range(int(64),bounded,false)[1023946], ref arg _retArg[1786389]:_ref(string)[935902]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free"
  {
    const-val ret[1108326]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1108334]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1786395]:string[26] "temp"
    (1108339 call getSlice[1108350] this[1108320] r[1108322] ret_tmp[1786395])
    (1786398 'move' call_tmp[1108334] ret_tmp[1786395])
    (1118903 'move' ret[1108326] call_tmp[1108334])
    (1786391 '=' _retArg[1786389] ret[1108326])
    (1786393 return _void[55])
  }
  function _ref(string)[935902].this[1120435](const  ref arg this[1120441]:_ref(string)[935902], const in arg r[1120443]:range(byteIndex,bounded,false)[1022924], ref arg _retArg[1786623]:_ref(string)[935902]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free"
  {
    const-val ret[1120447]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1120455]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1786629]:string[26] "temp"
    (1120460 call getSlice[1120471] this[1120441] r[1120443] ret_tmp[1786629])
    (1786632 'move' call_tmp[1120455] ret_tmp[1786629])
    (1121317 'move' ret[1120447] call_tmp[1120455])
    (1786625 '=' _retArg[1786623] ret[1120447])
    (1786627 return _void[55])
  }
  function _ref(string)[935902].this[1122496](const  ref arg this[1122502]:_ref(string)[935902], const in arg r[1122504]:range(int(64),boundedLow,false)[1084544], ref arg _retArg[1786683]:_ref(string)[935902]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free"
  {
    const-val ret[1122508]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1122516]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1786689]:string[26] "temp"
    (1122521 call getSlice[1122532] this[1122502] r[1122504] ret_tmp[1786689])
    (1786692 'move' call_tmp[1122516] ret_tmp[1786689])
    (1139436 'move' ret[1122508] call_tmp[1122516])
    (1786685 '=' _retArg[1786683] ret[1122508])
    (1786687 return _void[55])
  }
  function _ref(string)[935902].this[1140657](const  ref arg this[1140663]:_ref(string)[935902], const in arg r[1140665]:range(byteIndex,boundedLow,false)[1140337], ref arg _retArg[1786887]:_ref(string)[935902]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free"
  {
    const-val ret[1140669]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1140677]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1786893]:string[26] "temp"
    (1140682 call getSlice[1140693] this[1140663] r[1140665] ret_tmp[1786893])
    (1786896 'move' call_tmp[1140677] ret_tmp[1786893])
    (1153391 'move' ret[1140669] call_tmp[1140677])
    (1786889 '=' _retArg[1786887] ret[1140669])
    (1786891 return _void[55])
  }
  function _ref(string)[935902].this[1182105](const  ref arg this[1182111]:_ref(string)[935902], const in arg r[1182113]:range(byteIndex,boundedHigh,false)[1181785], ref arg _retArg[1787221]:_ref(string)[935902]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free"
  {
    const-val ret[1182117]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1182125]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1787227]:string[26] "temp"
    (1182130 call getSlice[1182141] this[1182111] r[1182113] ret_tmp[1787227])
    (1787230 'move' call_tmp[1182125] ret_tmp[1787227])
    (1200626 'move' ret[1182117] call_tmp[1182125])
    (1787223 '=' _retArg[1787221] ret[1182117])
    (1787225 return _void[55])
  }
  function _ref(string)[935902].isEmpty[35061](const  ref arg this[35063]:_ref(string)[935902]) : bool[10] "inline" "method" "resolved" "fn synchronization free"
  {
    val ret[504271]:bool[10] "dead after last mention" "RVV" "temp"
    ref call_tmp[601069]:_ref(int(64))[934535] "dead after last mention" "maybe param" "temp"
    (601072 'move' call_tmp[601069](35070 call buffLen[757925] this[35063]))
    const-val call_tmp[601074]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1018266]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1018270 'move' coerce_tmp[1018266](1018268 'deref' call_tmp[601069]))
    (601077 'move' call_tmp[601074](35074 call ==[435686] coerce_tmp[1018266] 0))
    (1018274 'move' ret[504271] call_tmp[601074])
    (504273 return ret[504271])
  }
  function _ref(string)[935902].find[1022719](const  ref arg this[1022725]:_ref(string)[935902], const  ref arg needle[1022727]:string[26], const in arg region[1022749]:range(byteIndex,bounded,false)[1022924], ref arg _retArg[1785102]:_ref(byteIndex)[946682]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved"
  {
    val ret[1022753]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1027047]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1027049 'move' call_tmp[1027047](1027055 call isASCII[31046] this[1022725]))
    const-val call_tmp[1027056]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1027058 'move' call_tmp[1027056] call_tmp[1027047])
    if call_tmp[1027056]
    {
      const-val call_tmp[1027065]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1027067 'move' call_tmp[1027065](1027070 call doSearchNoEnc[1027185] this[1022725] needle[1022727] region[1022749]))
      const-val call_tmp[1027076]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1782944]:byteIndex[28170] "temp"
      (1027081 call _cast[39483] call_tmp[1027065] ret_tmp[1782944])
      (1782947 'move' call_tmp[1027076] ret_tmp[1782944])
      (1104466 'move' ret[1022753] call_tmp[1027076])
      gotoReturn _end_find[1027121] _end_find[1027121]
    }
    {
      const-val call_tmp[1027092]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1027094 'move' call_tmp[1027092](1027100 call doSearchUTF8[1103068] this[1022725] needle[1022727] region[1022749]))
      const-val call_tmp[1027105]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1782950]:byteIndex[28170] "temp"
      (1027110 call _cast[39483] call_tmp[1027092] ret_tmp[1782950])
      (1782953 'move' call_tmp[1027105] ret_tmp[1782950])
      (1104469 'move' ret[1022753] call_tmp[1027105])
      gotoReturn _end_find[1027121] _end_find[1027121]
    }
    label _end_find[1027121]
    (1785104 '=' _retArg[1785102] ret[1022753])
    (1785106 return _void[55])
  }
  function _ref(string)[935902].find_default_region[1027130](const  ref arg this[1027133]:_ref(string)[935902], ref arg _retArg[1785174]:_ref(range(byteIndex,bounded,false))[1022933]) : void[4] "compiler generated" "default actual function" "fn returns via _retArg" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    const-val ret[1027136]:range(byteIndex,bounded,false)[1022924] "dead after last mention" "RVV" "maybe param" "temp"
    const-val region[1027141]:range(byteIndex,bounded,false)[1022924] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val call_tmp[1027144]:range(byteIndex,bounded,false)[1022924] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1027149]:range(int(64),bounded,false)[1023946] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1781844]:range(int(64),bounded,false)[1023946] "temp"
    (1027154 call byteIndices[31065] this[1027133] ret_tmp[1781844])
    (1781847 'move' call_tmp[1027149] ret_tmp[1781844])
    const-val ret_tmp[1785108]:range(byteIndex,bounded,false)[1022924] "temp"
    (1027158 call _cast[1024694] call_tmp[1027149] ret_tmp[1785108])
    (1785111 'move' region[1027141] ret_tmp[1785108])
    (1027166 'move' ret[1027136] region[1027141])
    (1785176 '=' _retArg[1785174] ret[1027136])
    (1795113 call chpl__autoDestroy[1472309] call_tmp[1027149])
    (1785178 return _void[55])
  }
  function _ref(string)[935902].find[1178530](const  ref arg this[1178536]:_ref(string)[935902], const  ref arg needle[1178538]:string[26], const in arg region[1178560]:range(byteIndex,boundedLow,false)[1140337], ref arg _retArg[1787173]:_ref(byteIndex)[946682]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved"
  {
    val ret[1178564]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1178570]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1178572 'move' call_tmp[1178570](1178578 call isASCII[31046] this[1178536]))
    const-val call_tmp[1178579]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1178581 'move' call_tmp[1178579] call_tmp[1178570])
    if call_tmp[1178579]
    {
      const-val call_tmp[1178588]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1178590 'move' call_tmp[1178588](1178593 call doSearchNoEnc[1178650] this[1178536] needle[1178538] region[1178560]))
      const-val call_tmp[1178599]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1782968]:byteIndex[28170] "temp"
      (1178604 call _cast[39483] call_tmp[1178588] ret_tmp[1782968])
      (1782971 'move' call_tmp[1178599] ret_tmp[1782968])
      (1181080 'move' ret[1178564] call_tmp[1178599])
      gotoReturn _end_find[1178644] _end_find[1178644]
    }
    {
      const-val call_tmp[1178615]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1178617 'move' call_tmp[1178615](1178623 call doSearchUTF8[1179682] this[1178536] needle[1178538] region[1178560]))
      const-val call_tmp[1178628]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1782974]:byteIndex[28170] "temp"
      (1178633 call _cast[39483] call_tmp[1178615] ret_tmp[1782974])
      (1782977 'move' call_tmp[1178628] ret_tmp[1782974])
      (1181083 'move' ret[1178564] call_tmp[1178628])
      gotoReturn _end_find[1178644] _end_find[1178644]
    }
    label _end_find[1178644]
    (1787175 '=' _retArg[1787173] ret[1178564])
    (1787177 return _void[55])
  }
  function _ref(string)[935902].replace[35363](const  ref arg this[35377]:_ref(string)[935902], const  ref arg needle[35360]:string[26], const  ref arg replacement[35366]:string[26], const in arg count[35373]:int(64)[13], ref arg _retArg[1782302]:_ref(string)[935902]) : void[4] "fn returns via _retArg" "inline" "method" "resolved"
  {
    const-val ret[504355]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[601207]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1787155]:string[26] "temp"
    (35389 call doReplace[1177898] this[35377] needle[35360] replacement[35366] count[35373] ret_tmp[1787155])
    (1787158 'move' call_tmp[601207] ret_tmp[1787155])
    (1200649 'move' ret[504355] call_tmp[601207])
    (1782304 '=' _retArg[1782302] ret[504355])
    (1782306 return _void[55])
  }
  function _ref(string)[935902].split[35483](const  ref arg this[35485]:_ref(string)[935902], const in arg maxsplit[35479]:int(64)[13], ref arg _retArg[1782320]:_ref(_ir_split__ref_string)[1153555]) : void[4] "fn returns via _retArg" "inline" "iterator fn" "method" "resolved" "no return value for void"
  {
    val _ir[1946320]:_ir_split__ref_string[1153444] "temp"
    (1946322 '.=' _ir[1946320] F0_this[1942969] this[35485])
    (1946326 '.=' _ir[1946320] F1_maxsplit[1942973] maxsplit[35479])
    (1946330 '=' _retArg[1782320] _ir[1946320])
    (1946333 return _void[55])
  }
  type _ic_split__ref_string[1153438] val super[1153439]:object[22] "super class" val more[1153441]:int(64)[13] ref F0_this[1942967]:_ref(string)[935902] const-val F1_maxsplit[1942971]:int(64)[13] val F2__iterator[1942975]:_ic_doSplitWSNoEnc[1121410] const F3_localx[1942977]:string[26] val F4_done[1942979]:bool[10] val F5_yieldChunk[1942981]:bool[10] const-val F6_chunk[1942983]:string[26] const F7_noSplits[1942985]:bool[10] const F8_limitSplits[1942987]:bool[10] val F9_splitCount[1942989]:int(64)[13] const F10_iEnd[1942991]:int(64)[13] val F11_inChunk[1942993]:bool[10] val F12_chunkStart[1942995]:int(64)[13] val F13__iterator[1942997]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1105514] val F14_call_tmp[1942999]:range(int(64),bounded,false)[1023946] val F15__iterator[1943001]:_ic_these_range_int64_t_bounded_F[1093682] val F16__iterator[1943003]:_ic_chpl_bytes__ref_string[1105204] val F17__indexOfInterest[1943005]:(int(64),uint(8))[1107988] const-val F18_ret_tmp[1943007]:range(int(64),boundedLow,false)[1084544] const-val F19_ret_tmp[1943009]:string[26] const-val F20_ret_tmp[1943011]:range(int(64),boundedLow,false)[1084544] const-val F21_ret_tmp[1943013]:string[26] const-val F22_ret_tmp[1943015]:range(int(64),bounded,false)[1023946] const-val F23_ret_tmp[1943017]:string[26] const-val F24_ret_tmp[1943019]:range(int(64),boundedLow,false)[1084544] const-val F25_ret_tmp[1943021]:string[26] const F26_s[1943023]:string[26] const F27_localThis[1943025]:string[26] val F28_done[1943027]:bool[10] val F29_yieldChunk[1943029]:bool[10] const-val F30_chunk[1943031]:string[26] const F31_noSplits[1943033]:bool[10] const F32_limitSplits[1943035]:bool[10] val F33_splitCount[1943037]:int(64)[13] const-val F34_iEnd[1943039]:byteIndex[28170] val F35_inChunk[1943041]:bool[10] const-val F36_chunkStart[1943043]:byteIndex[28170] val F37__iterator[1943045]:_ic__cpIndexLen__ref_string[1119320] val F38_default_arg_start[1943047]:byteIndex[28170] val F39_localThis[1943049]:string[26] val F40__iterator[1943051]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1105514] val F41_call_tmp[1943053]:range(int(64),bounded,false)[1023946] val F42__iterator[1943055]:_ic_these_range_int64_t_bounded_F[1093682] val F43__iterator[1943057]:_ic_chpl_bytes__ref_string[1105204] val F44__indexOfInterest[1943059]:(int(64),uint(8))[1107988] val F45_call_tmp[1943061]:byteIndex[28170] const-val F46_ret_tmp[1943063]:byteIndex[28170] const-val F47_ret_tmp[1943065]:(int(32),byteIndex,int(64))[1119077] const-val F48_ret_tmp[1943067]:byteIndex[28170] const-val F49_ret_tmp[1943069]:byteIndex[28170] const-val F50_ret_tmp[1943071]:range(byteIndex,boundedLow,false)[1140337] const-val F51_ret_tmp[1943073]:string[26] const-val F52_ret_tmp[1943075]:range(byteIndex,boundedLow,false)[1140337] const-val F53_ret_tmp[1943077]:string[26] const-val F54_ret_tmp[1943079]:byteIndex[28170] const-val F55_ret_tmp[1943081]:range(byteIndex,bounded,false)[1022924] const-val F56_ret_tmp[1943083]:string[26] const-val F57_ret_tmp[1943085]:byteIndex[28170] const-val F58_ret_tmp[1943087]:byteIndex[28170] const-val F59_ret_tmp[1943089]:range(byteIndex,boundedLow,false)[1140337] const-val F60_ret_tmp[1943091]:string[26] val F61_i[1943093]:int(64)[13] const-val F62_ret_tmp[1943095]:(syserr,int(32),int(32))[960390] const F63_tmp[1943097]:(syserr,int(32),int(32))[960390] const F64_nBytes[1943099]:int(32)[95] val F65_call_tmp[1943101]:byteIndex[28170] const-val F66_ret_tmp[1943103]:byteIndex[28170] const-val F67_ret_tmp[1943105]:(int(32),byteIndex,int(64))[1119077] const-val F68_ret_tmp[1943107]:byteIndex[28170] const-val F69_ret_tmp[1943109]:byteIndex[28170] const-val F70_ret_tmp[1943111]:range(byteIndex,boundedLow,false)[1140337] const-val F71_ret_tmp[1943113]:string[26] const-val F72_ret_tmp[1943115]:range(byteIndex,boundedLow,false)[1140337] const-val F73_ret_tmp[1943117]:string[26] const-val F74_ret_tmp[1943119]:byteIndex[28170] const-val F75_ret_tmp[1943121]:range(byteIndex,bounded,false)[1022924] const-val F76_ret_tmp[1943123]:string[26] const-val F77_ret_tmp[1943125]:byteIndex[28170] const-val F78_ret_tmp[1943127]:byteIndex[28170] const-val F79_ret_tmp[1943129]:range(byteIndex,boundedLow,false)[1140337] const-val F80_ret_tmp[1943131]:string[26] val F81__yield_expr_tmp_[1943133]:string[26] val F82__yield_expr_tmp_[1943135]:string[26] val F83__yield_expr_tmp_[1943137]:string[26] val value[1943139]:string[26]
  type _ir_split__ref_string[1153444] ref F0_this[1942969]:_ref(string)[935902] const-val F1_maxsplit[1942973]:int(64)[13]
  function _getIterator[1153453](const  ref arg ir[1153455]:_ir_split__ref_string[1153444]) : _ic_split__ref_string[1153438] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[1153562]:_ic_split__ref_string[1153438] "dead after last mention" "RVV" "temp"
    val _ic_[1153445]:_ic_split__ref_string[1153438] "dead after last mention" "temp"
    const-val call_tmp[1153569]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1153572 'move' call_tmp[1153569](1153584 'sizeof_bundle' _ic_split__ref_string[1153438]))
    const-val cast_tmp[1153587]:c_void_ptr[149] "dead after last mention" "temp"
    (1153589 'move' cast_tmp[1153587](1153450 call chpl_here_alloc[187754] call_tmp[1153569] 36))
    (1153458 'move' _ic_[1153445](1153591 'cast' _ic_split__ref_string[1153438] cast_tmp[1153587]))
    (1153460 'setcid' _ic_[1153445])
    (1153567 'move' ret[1153562] _ic_[1153445])
    (1946336 '.=' ret[1153562] more[1153441] 1)
    ref tmp[1946340]:_ref(string)[935902] "temp"
    (1946345 'move' tmp[1946340](1946341 '.v' ir[1153455] F0_this[1942969]))
    (1946347 '.=' ret[1153562] F0_this[1942967] tmp[1946340])
    const-val tmp[1946351]:int(64)[13] "temp"
    (1946356 'move' tmp[1946351](1946352 '.v' ir[1153455] F1_maxsplit[1942973]))
    (1946358 '.=' ret[1153562] F1_maxsplit[1942971] tmp[1946351])
    (1153564 return ret[1153562])
  }
  function _ref(string)[935902].strip[36092](const  ref arg this[36102]:_ref(string)[935902], const  ref arg chars[36088]:string[26], const in arg leading[36095]:bool[10], const in arg trailing[36099]:bool[10], ref arg _retArg[1782342]:_ref(string)[935902]) : void[4] "fn returns via _retArg" "method" "resolved"
  {
    val ret[504428]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[601529]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (601532 'move' call_tmp[601529](36113 call isASCII[31046] this[36102]))
    const-val call_tmp[601534]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (601537 'move' call_tmp[601534] call_tmp[601529])
    if call_tmp[601534]
    {
      const-val call_tmp[601539]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1786249]:string[26] "temp"
      (36120 call doStripNoEnc[1104582] this[36102] chars[36088] leading[36095] trailing[36099] ret_tmp[1786249])
      (1786252 'move' call_tmp[601539] ret_tmp[1786249])
      (1121320 'move' ret[504428] call_tmp[601539])
      gotoReturn _end_strip[504426] _end_strip[504426]
    }
    {
      const-val call_tmp[601546]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (601549 'move' call_tmp[601546](36129 call isEmpty[35061] this[36102]))
      const-val call_tmp[601551]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (601554 'move' call_tmp[601551] call_tmp[601546])
      if call_tmp[601551]
      {
        (504440 'move' ret[504428](1782346 call chpl__initCopy[978441] ""))
        gotoReturn _end_strip[504426] _end_strip[504426]
      }
      const-val call_tmp[601558]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (601561 'move' call_tmp[601558](36160 call isEmpty[35061] chars[36088]))
      const-val call_tmp[601563]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (601566 'move' call_tmp[601563] call_tmp[601558])
      if call_tmp[601563]
      {
        (1121325 'move' ret[504428](1121323 call chpl__autoCopy[1118910] this[36102]))
        gotoReturn _end_strip[504426] _end_strip[504426]
      }
      const-val call_tmp[601570]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1782044]:string[26] "temp"
      (36175 call localize[32886] this[36102] ret_tmp[1782044])
      (1782047 'move' call_tmp[601570] ret_tmp[1782044])
      const localThis[36176]:string[26] "dead at end of block" "const" "insert auto destroy"
      (540499 'move' localThis[36176] call_tmp[601570])
      const-val call_tmp[601577]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1782050]:string[26] "temp"
      (36186 call localize[32886] chars[36088] ret_tmp[1782050])
      (1782053 'move' call_tmp[601577] ret_tmp[1782050])
      const-val localChars[36187]:string[26] "dead at end of block" "const" "insert auto destroy"
      (540501 'move' localChars[36187] call_tmp[601577])
      val start[36193]:byteIndex[28170] "dead at end of block" "insert auto destroy"
      (540503 call init=[28145] start[36193] 0)
      ref call_tmp[601584]:_ref(int(64))[934535] "dead at end of block" "maybe param" "reference to a const" "temp"
      (601587 'move' call_tmp[601584](36199 call buffLen[757925] localThis[36176]))
      const-val call_tmp[601589]:int(64)[13] "dead at end of block" "insert auto destroy" "maybe param" "temp"
      const-val coerce_tmp[1118951]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1118955 'move' coerce_tmp[1118951](1118953 'deref' call_tmp[601584]))
      (601592 'move' call_tmp[601589](36203 call -[957110] coerce_tmp[1118951]))
      val end[36205]:byteIndex[28170] "dead at end of block" "insert auto destroy"
      (540505 call init=[28145] end[36205] call_tmp[601589])
      const-val call_tmp[601594]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (601597 'move' call_tmp[601594] leading[36095])
      if call_tmp[601594]
      {
        {
          val _indexOfInterest[36288]:(int(32),byteIndex,int(64))[1119077] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[36289]:_ic__cpIndexLen__ref_string[1119320] "dead at end of block" "expr temp" "temp"
          const-val call_tmp[601601]:_ir__cpIndexLen__ref_string[1119326] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val default_arg_start[1118992]:byteIndex[28170] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
          const-val ret_tmp[1786539]:byteIndex[28170] "temp"
          (1118994 call _cpIndexLen_default_start[1118966] localThis[36176] ret_tmp[1786539])
          (1786542 'move' default_arg_start[1118992] ret_tmp[1786539])
          const-val ret_tmp[1781934]:_ir__cpIndexLen__ref_string[1119326] "temp"
          (36221 call _cpIndexLen[31106] localThis[36176] default_arg_start[1118992] ret_tmp[1781934])
          (1781937 'move' call_tmp[601601] ret_tmp[1781934])
          (36298 'move' _iterator[36289](36296 call _getIterator[1119335] call_tmp[601601]))
          {
            val ret[1844162]:_ir__cpIndexLen__ref_string[1119326] "dead after last mention" "RVV" "temp"
            const-val call_tmp[1844164]:string[26] "dead at end of block" "maybe param" "temp"
            const-val ret_tmp[1844166]:string[26] "temp"
            ref this[1846333]:_ref(string)[935902] "temp"
            (1846338 'move' this[1846333](1846335 '.v' _iterator[36289] F0_this[1938741]))
            (1844169 call localize[32886] this[1846333] ret_tmp[1844166])
            (1844172 'move' call_tmp[1844164] ret_tmp[1844166])
            val localThis[1844175]:string[26] "dead at end of block" "insert auto destroy"
            (1844177 'move' localThis[1844175] call_tmp[1844164])
            const-val call_tmp[1844180]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1844182 'move' call_tmp[1844180](1844185 call isASCII[31046] localThis[1844175]))
            const-val call_tmp[1844187]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1844189 'move' call_tmp[1844187] call_tmp[1844180])
            if call_tmp[1844180]
            {
              const-val _iterator[1844194]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1105514] "dead at end of block" "expr temp" "insert auto destroy" "temp"
              const-val call_tmp[1844196]:range(int(64),bounded,false)[1023946] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret_tmp[1844198]:range(int(64),bounded,false)[1023946] "temp"
              ref this[1846340]:_ref(string)[935902] "temp"
              (1846345 'move' this[1846340](1846342 '.v' _iterator[36289] F0_this[1938741]))
              (1844201 call byteIndices[31065] this[1846340] ret_tmp[1844198])
              (1844204 'move' call_tmp[1844196] ret_tmp[1844198])
              val call_tmp[1844207]:_ic_these_range_int64_t_bounded_F[1093682] "dead at end of block" "expr temp" "maybe param" "temp"
              (1844209 'move' call_tmp[1844207](1844212 call _getIterator[1092299] call_tmp[1844196]))
              const-val call_tmp[1844214]:_ir_chpl_bytes__ref_string[1105210] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[1844216]:_ir_chpl_bytes__ref_string[1105210] "temp"
              ref this[1846347]:_ref(string)[935902] "temp"
              (1846352 'move' this[1846347](1846349 '.v' _iterator[36289] F0_this[1938741]))
              (1844219 call chpl_bytes[33574] this[1846347] ret_tmp[1844216])
              (1844222 'move' call_tmp[1844214] ret_tmp[1844216])
              val call_tmp[1844225]:_ic_chpl_bytes__ref_string[1105204] "dead at end of block" "expr temp" "maybe param" "temp"
              (1844227 'move' call_tmp[1844225](1844230 call _getIterator[1105219] call_tmp[1844214]))
              const-val ret_tmp[1844232]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1105514] "temp"
              (1844235 call _build_tuple[1105472] call_tmp[1844207] call_tmp[1844225] ret_tmp[1844232])
              (1844239 'move' _iterator[1844194] ret_tmp[1844232])
              val _iterator[1844242]:_ic_these_range_int64_t_bounded_F[1093682] "temp"
              (1844244 'move' _iterator[1844242](1844246 '.v' _iterator[1844194] x0[1105510]))
              val _iterator[1844249]:_ic_chpl_bytes__ref_string[1105204] "temp"
              (1844251 'move' _iterator[1844249](1844253 '.v' _iterator[1844194] x1[1105512]))
              {
                (1844258 call zip1[1093717] _iterator[1844242])
              }
              {
                (1844262 call zip1[1105239] _iterator[1844249])
              }
              const-val isFinished[1844264]:bool[10] "temp"
              val hasMore[1844266]:bool[10] "temp"
              CForLoop[1844268]
              {
                val _indexOfInterest[1844291]:(int(64),uint(8))[1107988] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                {
                  (1844295 call zip2[1105248] _iterator[1844249])
                }
                {
                  const-val retTmp[1844298]:int(64)[13] "temp"
                  (1844300 'move' retTmp[1844298](1844303 call hasMore[1105275] _iterator[1844249]))
                  (1844305 'move' hasMore[1844266](1844307 'cast' bool[10] retTmp[1844298]))
                }
                (1844310 'move' isFinished[1844264](1844312 '!' hasMore[1844266]))
                if isFinished[1844264]
                {
                  (1844316 'chpl_error' c"zippered iterations have non-equal lengths")
                }
                {
                  (1844320 'move' _index[1844335](1844323 call getValue[1105284] _iterator[1844249]))
                }
                {
                  (1844327 call zip2[1093726] _iterator[1844242])
                }
                {
                  (1844330 'move' _index[1844341](1844333 call getValue[1093762] _iterator[1844242]))
                }
                val _index[1844335]:uint(8)[100] "temp"
                (1844337 '.=' _indexOfInterest[1844291] x1[1107986] _index[1844335])
                val _index[1844341]:int(64)[13] "temp"
                (1844343 '.=' _indexOfInterest[1844291] x0[1107984] _index[1844341])
                1
                const-val i[1844348]:int(64)[13] "const" "index var" "insert auto destroy"
                (1844350 'move' i[1844348](1844352 '.v' _indexOfInterest[1844291] x0[1107984]))
                const-val b[1844355]:uint(8)[100] "const" "index var" "insert auto destroy"
                (1844357 'move' b[1844355](1844359 '.v' _indexOfInterest[1844291] x1[1107986]))
                const-val yret[1844362]:(int(32),byteIndex,int(64))[1119077] "dead after last mention" "YVV" "temp"
                val call_tmp[1844364]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val call_tmp[1844366]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (1844368 'move' call_tmp[1844366](1844370 'cast' int(32)[95] b[1844355]))
                const-val call_tmp[1844373]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1844375]:byteIndex[28170] "temp"
                (1844378 call _cast[39483] i[1844348] ret_tmp[1844375])
                (1844381 'move' call_tmp[1844373] ret_tmp[1844375])
                const-val call_tmp[1844384]:(int(32),byteIndex,int(64))[1119077] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1844386]:(int(32),byteIndex,int(64))[1119077] "temp"
                (1844389 call _build_tuple[1119027] call_tmp[1844366] call_tmp[1844373] 1 ret_tmp[1844386])
                (1844394 'move' call_tmp[1844384] ret_tmp[1844386])
                (1844397 'move' yret[1844362] call_tmp[1844384])
                const-val _yieldedIndex[1844979]:(int(32),byteIndex,int(64))[1119077] "temp"
                (1845681 'move' _yieldedIndex[1844979] call_tmp[1844384])
                {
                  1
                  const-val thisChar[1844982]:int(32)[95] "const" "index var" "insert auto destroy"
                  (1844984 'move' thisChar[1844982](1844986 '.v' _yieldedIndex[1844979] x0[1119071]))
                  ref i[1844989]:_ref(byteIndex)[946682] "index var" "insert auto destroy"
                  (1844991 'move' i[1844989](1844993 '.v' _yieldedIndex[1844979] x1[1119073]))
                  const-val nBytes[1844996]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1844998 'move' nBytes[1844996](1845000 '.v' _yieldedIndex[1844979] x2[1119075]))
                  {
                    {
                      val _indexOfInterest[1845005]:int(32)[95] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1845007]:_ic_codepoints__ref_string[1119784] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1845009]:_ir_codepoints__ref_string[1119790] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1845011]:_ir_codepoints__ref_string[1119790] "temp"
                      (1845014 call codepoints[33663] localChars[36187] ret_tmp[1845011])
                      (1845017 'move' call_tmp[1845009] ret_tmp[1845011])
                      (1845020 'move' _iterator[1845007](1845023 call _getIterator[1119799] call_tmp[1845009]))
                      {
                        val ret[1845026]:_ir_codepoints__ref_string[1119790] "dead at end of block" "RVV" "temp"
                        const-val call_tmp[1845028]:string[26] "dead at end of block" "maybe param" "temp"
                        const-val ret_tmp[1845030]:string[26] "temp"
                        ref this[1845032]:_ref(string)[935902] "temp"
                        (1845034 'move' this[1845032](1845036 '.v' _iterator[1845007] F0_this[1942267]))
                        (1845040 call localize[32886] this[1845032] ret_tmp[1845030])
                        (1845043 'move' call_tmp[1845028] ret_tmp[1845030])
                        val localThis[1845046]:string[26] "dead at end of block" "insert auto destroy"
                        (1845048 'move' localThis[1845046] call_tmp[1845028])
                        const-val call_tmp[1845051]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        ref this[1845053]:_ref(string)[935902] "temp"
                        (1845055 'move' this[1845053](1845057 '.v' _iterator[1845007] F0_this[1942267]))
                        (1845060 'move' call_tmp[1845051](1845063 call isASCII[31046] this[1845053]))
                        const-val call_tmp[1845065]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1845067 'move' call_tmp[1845065] call_tmp[1845051])
                        if call_tmp[1845051]
                        {
                          val _indexOfInterest[1845072]:uint(8)[100] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                          val _iterator[1845074]:_ic_chpl_bytes__ref_string[1105204] "dead at end of block" "expr temp" "temp"
                          const-val call_tmp[1845076]:_ir_chpl_bytes__ref_string[1105210] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val ret_tmp[1845078]:_ir_chpl_bytes__ref_string[1105210] "temp"
                          ref this[1845080]:_ref(string)[935902] "temp"
                          (1845082 'move' this[1845080](1845084 '.v' _iterator[1845007] F0_this[1942267]))
                          (1845088 call chpl_bytes[33574] this[1845080] ret_tmp[1845078])
                          (1845091 'move' call_tmp[1845076] ret_tmp[1845078])
                          (1845094 'move' _iterator[1845074](1845097 call _getIterator[1105219] call_tmp[1845076]))
                          {
                            val ret[1845100]:_ir_chpl_bytes__ref_string[1105210] "dead at end of block" "RVV" "temp"
                            const-val call_tmp[1845102]:string[26] "dead at end of block" "maybe param" "temp"
                            const-val ret_tmp[1845104]:string[26] "temp"
                            ref this[1845106]:_ref(string)[935902] "temp"
                            (1845108 'move' this[1845106](1845110 '.v' _iterator[1845074] F0_this[1940093]))
                            (1845114 call localize[32886] this[1845106] ret_tmp[1845104])
                            (1845117 'move' call_tmp[1845102] ret_tmp[1845104])
                            val localThis[1845120]:string[26] "dead at end of block" "insert auto destroy"
                            (1845122 'move' localThis[1845120] call_tmp[1845102])
                            val _indexOfInterest[1845125]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                            val _iterator[1845127]:_ic_chpl_direct_counted_range_iter[1100747] "dead at end of block" "expr temp" "temp"
                            ref call_tmp[1845129]:_ref(int(64))[934535] "dead at end of block" "maybe param" "temp"
                            (1845131 'move' call_tmp[1845129](1845134 call buffLen[757925] localThis[1845120]))
                            const-val call_tmp[1845136]:_ir_chpl_direct_counted_range_iter[1100753] "dead at end of block" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1845138]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1845140 'move' coerce_tmp[1845138](1845142 'deref' call_tmp[1845129]))
                            const-val ret_tmp[1845144]:_ir_chpl_direct_counted_range_iter[1100753] "temp"
                            (1845147 call chpl_direct_counted_range_iter[458054] 0 coerce_tmp[1845138] ret_tmp[1845144])
                            (1845151 'move' call_tmp[1845136] ret_tmp[1845144])
                            (1845154 'move' _iterator[1845127](1845157 call _getIterator[1100762] call_tmp[1845136]))
                            {
                              val ret[1845160]:_ir_chpl_direct_counted_range_iter[1100753] "dead after last mention" "RVV" "temp"
                              val _indexOfInterest[1845162]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                              val _iterator[1845164]:_ic_chpl_direct_counted_range_iter_helper[1100497] "dead at end of block" "expr temp" "temp"
                              const-val call_tmp[1845166]:_ir_chpl_direct_counted_range_iter_helper[1100503] "dead at end of block" "expr temp" "maybe param" "temp"
                              const-val ret_tmp[1845168]:_ir_chpl_direct_counted_range_iter_helper[1100503] "temp"
                              const-val low[1845170]:int(64)[13] "temp"
                              (1845172 'move' low[1845170](1845174 '.v' _iterator[1845127] F0_low[1952071]))
                              const-val count[1845177]:int(64)[13] "temp"
                              (1845179 'move' count[1845177](1845181 '.v' _iterator[1845127] F1_count[1952075]))
                              (1845185 call chpl_direct_counted_range_iter_helper[1099055] low[1845170] count[1845177] ret_tmp[1845168])
                              (1845189 'move' call_tmp[1845166] ret_tmp[1845168])
                              (1845192 'move' _iterator[1845164](1845195 call _getIterator[1100512] call_tmp[1845166]))
                              {
                                val ret[1902834]:_ir_chpl_direct_counted_range_iter_helper[1100503] "dead after last mention" "RVV" "temp"
                                val call_tmp[1902836]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                const-val tmp[1902838]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val tmp[1902840]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                                const-val call_tmp[1902842]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[1903330]:int(64)[13] "temp"
                                (1903335 'move' count[1903330](1903332 '.v' _iterator[1845164] F1_count[1956547]))
                                (1902844 'move' call_tmp[1902842](1902847 call <[946327] count[1903330]))
                                (1902849 'move' tmp[1902840] call_tmp[1902842])
                                (1902852 'move' tmp[1902838] call_tmp[1902842])
                                const-val call_tmp[1902855]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1902857 'move' call_tmp[1902855] call_tmp[1902842])
                                if call_tmp[1902842]
                                {
                                  (1902863 call boundsCheckHalt[210084] "With a negative count, the range must have a last index.")
                                }
                                const-val tmp[1902866]:2*int(64)[1037179] "dead at end of block" "const" "insert auto destroy" "temp"
                                val tmp[1902868]:2*int(64)[1037179] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                                const-val tmp[1902870]:bool[10] "dead after last mention" "maybe param" "temp"
                                const-val call_tmp[1902872]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[1903337]:int(64)[13] "temp"
                                (1903342 'move' count[1903337](1903339 '.v' _iterator[1845164] F1_count[1956547]))
                                (1902874 'move' call_tmp[1902872](1902877 call ==[435686] count[1903337] 0))
                                (1902880 'move' tmp[1902870] call_tmp[1902872])
                                if call_tmp[1902872]
                                {
                                  const-val tmp[1902885]:2*int(64)[1037179] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[1902887]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[1902889]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[1903344]:int(64)[13] "temp"
                                  (1903349 'move' low[1903344](1903346 '.v' _iterator[1845164] F0_low[1956543]))
                                  (1902891 'move' call_tmp[1902889](1902894 call _cast[974684] low[1903344]))
                                  const-val call_tmp[1902896]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val coerce_tmp[1902898]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                  (1902900 'move' coerce_tmp[1902898](1902902 'cast' uint(64)[115] 1))
                                  (1902905 'move' call_tmp[1902896](1902908 call -[957077] call_tmp[1902889]))
                                  const-val call_tmp[1902910]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  (1902912 'move' call_tmp[1902910](1902915 call _cast[951465] call_tmp[1902896]))
                                  const-val ret_tmp[1902917]:2*int(64)[1037179] "temp"
                                  const-val low[1903351]:int(64)[13] "temp"
                                  (1903356 'move' low[1903351](1903353 '.v' _iterator[1845164] F0_low[1956543]))
                                  (1902920 call _build_tuple[1037137] low[1903351] call_tmp[1902910] ret_tmp[1902917])
                                  (1902924 'move' tmp[1902885] ret_tmp[1902917])
                                  (1902927 'move' tmp[1902868] tmp[1902885])
                                }
                                {
                                  const-val tmp[1902931]:2*int(64)[1037179] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[1902933]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[1902935]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[1903358]:int(64)[13] "temp"
                                  (1903363 'move' count[1903358](1903360 '.v' _iterator[1845164] F1_count[1956547]))
                                  (1902937 'move' call_tmp[1902935] count[1903358])
                                  const-val call_tmp[1902940]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[1903365]:int(64)[13] "temp"
                                  (1903370 'move' count[1903365](1903367 '.v' _iterator[1845164] F1_count[1956547]))
                                  (1902942 'move' call_tmp[1902940](1902945 call -[957110] count[1903365]))
                                  const-val call_tmp[1902947]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[1903372]:int(64)[13] "temp"
                                  (1903377 'move' low[1903372](1903374 '.v' _iterator[1845164] F0_low[1956543]))
                                  (1902949 'move' call_tmp[1902947](1902952 call +[439694] low[1903372] call_tmp[1902940]))
                                  const-val ret_tmp[1902955]:2*int(64)[1037179] "temp"
                                  const-val low[1903379]:int(64)[13] "temp"
                                  (1903384 'move' low[1903379](1903381 '.v' _iterator[1845164] F0_low[1956543]))
                                  (1902958 call _build_tuple[1037137] low[1903379] call_tmp[1902947] ret_tmp[1902955])
                                  (1902962 'move' tmp[1902931] ret_tmp[1902955])
                                  (1902965 'move' tmp[1902868] tmp[1902931])
                                }
                                (1902969 '=' tmp[1902866] tmp[1902868])
                                (1902972 'noop')
                                1
                                ref call_tmp[1902974]:_ref(int(64))[934535] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (1902976 'move' call_tmp[1902974](1902978 '.' tmp[1902866] x0[1037175]))
                                const-val start[1902981]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[1902983]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (1902985 'move' coerce_tmp[1902983](1902987 'deref' call_tmp[1902974]))
                                (1902989 '=' start[1902981] coerce_tmp[1902983])
                                (1902992 'noop')
                                ref call_tmp[1902993]:_ref(int(64))[934535] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (1902995 'move' call_tmp[1902993](1902997 '.' tmp[1902866] x1[1037177]))
                                const-val end[1903000]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[1903002]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (1903004 'move' coerce_tmp[1903002](1903006 'deref' call_tmp[1902993]))
                                (1903008 '=' end[1903000] coerce_tmp[1903002])
                                (1903011 'noop')
                                val _indexOfInterest[1903012]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                val _iterator[1903014]:_ic_chpl_direct_param_stride_range_iter[1100243] "dead at end of block" "expr temp" "temp"
                                const-val call_tmp[1903016]:_ir_chpl_direct_param_stride_range_iter[1100249] "dead at end of block" "expr temp" "maybe param" "temp"
                                const-val ret_tmp[1903018]:_ir_chpl_direct_param_stride_range_iter[1100249] "temp"
                                (1903021 call chpl_direct_param_stride_range_iter[1099481] coerce_tmp[1902983] coerce_tmp[1903002] ret_tmp[1903018])
                                (1903025 'move' call_tmp[1903016] ret_tmp[1903018])
                                (1903028 'move' _iterator[1903014](1903031 call _getIterator[1100258] call_tmp[1903016]))
                                {
                                  val ret[1903034]:_ir_chpl_direct_param_stride_range_iter[1100249] "dead after last mention" "RVV" "temp"
                                  val call_tmp[1903036]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (1903039 call chpl_range_check_stride[1099801])
                                  val i[1903040]:int(64)[13] "dead at end of block" "insert auto destroy"
                                  val call_tmp[1903042]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (1903044 'move' i[1903040] 0)
                                  val call_tmp[1903047]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val default_arg_first[1903049]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val low[1903051]:int(64)[13] "temp"
                                  (1903053 'move' low[1903051](1903055 '.v' _iterator[1903014] F0_low[1958041]))
                                  (1903058 'move' default_arg_first[1903049](1903061 call chpl_checkIfRangeIterWillOverflow_default_first[1100155] low[1903051]))
                                  const-val default_arg_last[1903063]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val high[1903065]:int(64)[13] "temp"
                                  (1903067 'move' high[1903065](1903069 '.v' _iterator[1903014] F1_high[1958045]))
                                  (1903072 'move' default_arg_last[1903063](1903075 call chpl_checkIfRangeIterWillOverflow_default_last[1100183] high[1903065]))
                                  const-val _return_tmp_[1903077]:bool[10] "dead after last mention" "temp"
                                  const-val low[1903079]:int(64)[13] "temp"
                                  (1903081 'move' low[1903079](1903083 '.v' _iterator[1903014] F0_low[1958041]))
                                  const-val high[1903086]:int(64)[13] "temp"
                                  (1903088 'move' high[1903086](1903090 '.v' _iterator[1903014] F1_high[1958045]))
                                  (1903093 'move' _return_tmp_[1903077](1903096 call chpl_checkIfRangeIterWillOverflow[1093055] low[1903079] high[1903086] 1 default_arg_first[1903049] default_arg_last[1903063] 1))
                                  CForLoop[1903103]
                                  {
                                    const-val yret[1903132]:int(64)[13] "dead after last mention" "YVV" "temp"
                                    (1903134 'move' yret[1903132] i[1903040])
                                    const-val _yieldedIndex[1903137]:int(64)[13] "temp"
                                    (1903139 'move' _yieldedIndex[1903137] i[1903040])
                                    {
                                      const-val i[1903143]:int(64)[13] "const" "index var" "insert auto destroy"
                                      (1903145 'move' i[1903143] _yieldedIndex[1903137])
                                      const-val yret[1903148]:int(64)[13] "dead after last mention" "YVV" "temp"
                                      (1903150 'move' yret[1903148] _yieldedIndex[1903137])
                                      const-val _yieldedIndex[1903178]:int(64)[13] "temp"
                                      (1903328 'move' _yieldedIndex[1903178] _yieldedIndex[1903137])
                                      {
                                        const-val i[1903180]:int(64)[13] "const" "index var" "insert auto destroy"
                                        (1903182 'move' i[1903180] _yieldedIndex[1903178])
                                        const-val yret[1903185]:int(64)[13] "dead after last mention" "YVV" "temp"
                                        (1903187 'move' yret[1903185] _yieldedIndex[1903178])
                                        const-val _yieldedIndex[1903190]:int(64)[13] "temp"
                                        (1903192 'move' _yieldedIndex[1903190] _yieldedIndex[1903178])
                                        {
                                          const-val i[1903196]:int(64)[13] "const" "index var" "insert auto destroy"
                                          (1903198 'move' i[1903196] _yieldedIndex[1903190])
                                          const-val yret[1903201]:uint(8)[100] "dead after last mention" "YVV" "temp"
                                          ref call_tmp[1903203]:_ref(uint(8))[934871] "dead after last mention" "maybe param" "temp"
                                          ref _this_tmp_[1903205]:_ref(c_ptr(uint(8)))[935395] "dead after last mention" "temp"
                                          (1903207 'move' _this_tmp_[1903205](1903210 call buff[758003] localThis[1845120]))
                                          val coerce_tmp[1903212]:c_ptr(uint(8))[935386] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                          (1903214 'move' coerce_tmp[1903212](1903216 'deref' _this_tmp_[1903205]))
                                          (1903218 'move' call_tmp[1903203](1903221 call this[952013] coerce_tmp[1903212] _yieldedIndex[1903190]))
                                          const-val coerce_tmp[1903224]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                          (1903226 'move' coerce_tmp[1903224](1903228 'deref' call_tmp[1903203]))
                                          (1903230 '=' yret[1903201] coerce_tmp[1903224])
                                          (1903233 'noop')
                                          const-val _yieldedIndex[1903234]:uint(8)[100] "temp"
                                          (1903236 'move' _yieldedIndex[1903234] coerce_tmp[1903224])
                                          {
                                            const-val b[1903240]:uint(8)[100] "const" "index var" "insert auto destroy"
                                            (1903242 'move' b[1903240] _yieldedIndex[1903234])
                                            val yret[1903245]:int(32)[95] "dead after last mention" "YVV" "temp"
                                            val call_tmp[1903247]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                            const-val _yieldedIndex[1903249]:int(32)[95] "temp"
                                            (1903251 'move' _yieldedIndex[1903249](1903253 'cast' int(32)[95] _yieldedIndex[1903234]))
                                            {
                                              const-val removeChar[1903257]:int(32)[95] "const" "index var" "insert auto destroy"
                                              (1903259 'move' removeChar[1903257] _yieldedIndex[1903249])
                                              {
                                                const-val call_tmp[1903263]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (1903265 'move' call_tmp[1903263](1903268 call ==[435664] thisChar[1844982] removeChar[1903257]))
                                                const-val call_tmp[1903271]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (1903273 'move' call_tmp[1903271] call_tmp[1903263])
                                                if call_tmp[1903271]
                                                {
                                                  const-val call_tmp[1903278]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                                  const-val ret_tmp[1903280]:byteIndex[28170] "temp"
                                                  (1903283 call +[28722] i[1844989] nBytes[1844996] ret_tmp[1903280])
                                                  (1903287 'move' call_tmp[1903278] ret_tmp[1903280])
                                                  (1903291 call =[38191] start[36193] call_tmp[1903278])
                                                  (1903295 call chpl__autoDestroy[1399941] call_tmp[1903278])
                                                  (1903322 call _freeIterator[1100431] _iterator[1903014])
                                                  (1903325 call chpl__autoDestroy[1472606] tmp[1902866])
                                                  (1903298 call _freeIterator[1100681] _iterator[1845164])
                                                  (1903301 call _freeIterator[1100931] _iterator[1845127])
                                                  (1903304 call chpl__autoDestroy[1399678] localThis[1845120])
                                                  (1903307 call _freeIterator[1106517] _iterator[1845074])
                                                  (1903310 call chpl__autoDestroy[1399678] localThis[1845046])
                                                  (1903313 call _freeIterator[1120071] _iterator[1845007])
                                                  continue _continueLabel[1845614] _continueLabel[1845614]
                                                }
                                              }
                                              label _continueLabel[1903318]
                                            }
                                          }
                                        }
                                      }
                                    }
                                    {
                                      const-val low[1903105]:int(64)[13] "temp"
                                      (1903107 'move' low[1903105](1903109 '.v' _iterator[1903014] F0_low[1958041]))
                                      (1903112 '=' i[1903040] low[1903105])
                                    }
                                    {
                                      const-val high[1903116]:int(64)[13] "temp"
                                      (1903118 'move' high[1903116](1903120 '.v' _iterator[1903014] F1_high[1958045]))
                                      (1903123 '<=' i[1903040] high[1903116])
                                    }
                                    {
                                      val call_tmp[1903127]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                      (1903129 '+=' i[1903040] 1)
                                    }
                                  }
                                  label _endchpl_direct_param_stride_range_iter[1903166]
                                }
                                (1903169 call _freeIterator[1100431] _iterator[1903014])
                                (1903172 call chpl__autoDestroy[1472606] tmp[1902866])
                                label _endchpl_direct_counted_range_iter_helper[1903174]
                              }
                              (1845341 call _freeIterator[1100681] _iterator[1845164])
                              label _endchpl_direct_counted_range_iter[1845343]
                            }
                            (1845346 call _freeIterator[1100931] _iterator[1845127])
                            (1845349 call chpl__autoDestroy[1399678] localThis[1845120])
                            label _endchpl_bytes[1845351]
                          }
                          (1845354 call _freeIterator[1106517] _iterator[1845074])
                        }
                        {
                          val i[1845357]:int(64)[13] "dead at end of block" "insert auto destroy"
                          (1845359 'move' i[1845357] 0)
                          val tmp[1845362]:bool[10] "dead after last mention" "temp"
                          ref call_tmp[1845364]:_ref(int(64))[934535] "dead after last mention" "maybe param" "temp"
                          (1845366 'move' call_tmp[1845364](1845369 call buffLen[757925] localThis[1845046]))
                          const-val call_tmp[1845371]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[1845373]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1845375 'move' coerce_tmp[1845373](1845377 'deref' call_tmp[1845364]))
                          (1845379 'move' call_tmp[1845371](1845382 call <[437510] 0 coerce_tmp[1845373]))
                          (1845385 'move' tmp[1845362] call_tmp[1845371])
                          WhileDo[1845388]
                          {
                            ref call_tmp[1845390]:_ref(c_ptr(uint(8)))[935395] "dead at end of block" "maybe param" "temp"
                            (1845392 'move' call_tmp[1845390](1845395 call buff[758003] localThis[1845046]))
                            ref call_tmp[1845397]:_ref(int(64))[934535] "dead at end of block" "maybe param" "temp"
                            (1845399 'move' call_tmp[1845397](1845402 call buffLen[757925] localThis[1845046]))
                            const-val call_tmp[1845404]:(syserr,int(32),int(32))[960390] "dead at end of block" "maybe param" "temp"
                            val coerce_tmp[1845406]:c_ptr(uint(8))[935386] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1845408 'move' coerce_tmp[1845406](1845410 'deref' call_tmp[1845390]))
                            const-val coerce_tmp[1845412]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1845414 'move' coerce_tmp[1845412](1845416 'deref' call_tmp[1845397]))
                            const-val ret_tmp[1845418]:(syserr,int(32),int(32))[960390] "temp"
                            (1845421 call decodeHelp[174418] coerce_tmp[1845406] coerce_tmp[1845412] i[1845357] 1 ret_tmp[1845418])
                            (1845427 'move' call_tmp[1845404] ret_tmp[1845418])
                            const-val tmp[1845430]:(syserr,int(32),int(32))[960390] "dead at end of block" "const" "insert auto destroy" "temp"
                            (1845432 'move' tmp[1845430] call_tmp[1845404])
                            1
                            ref call_tmp[1845436]:_ref(syserr)[946755] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1845438 'move' call_tmp[1845436](1845440 '.' tmp[1845430] x0[960384]))
                            const-val decodeRet[1845443]:syserr[223501] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1845445]:syserr[223501] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1845447 'move' coerce_tmp[1845445](1845449 'deref' call_tmp[1845436]))
                            (1845451 'move' decodeRet[1845443](1845454 call chpl__initCopy[960255] coerce_tmp[1845445]))
                            ref call_tmp[1845456]:_ref(int(32))[934589] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1845458 'move' call_tmp[1845456](1845460 '.' tmp[1845430] x1[960386]))
                            const-val cp[1845463]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1845465]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1845467 'move' coerce_tmp[1845465](1845469 'deref' call_tmp[1845456]))
                            (1845471 'move' cp[1845463](1845474 call chpl__initCopy[960527] coerce_tmp[1845465]))
                            ref call_tmp[1845476]:_ref(int(32))[934589] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1845478 'move' call_tmp[1845476](1845480 '.' tmp[1845430] x2[960388]))
                            const-val nBytes[1845483]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1845485]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1845487 'move' coerce_tmp[1845485](1845489 'deref' call_tmp[1845476]))
                            (1845491 'move' nBytes[1845483](1845494 call chpl__initCopy[960527] coerce_tmp[1845485]))
                            const-val yret[1845496]:int(32)[95] "dead after last mention" "YVV" "temp"
                            val call_tmp[1845498]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                            (1845500 'move' yret[1845496] cp[1845463])
                            const-val _yieldedIndex[1845503]:int(32)[95] "temp"
                            (1845505 'move' _yieldedIndex[1845503] cp[1845463])
                            {
                              const-val removeChar[1845509]:int(32)[95] "const" "index var" "insert auto destroy"
                              (1845511 'move' removeChar[1845509] _yieldedIndex[1845503])
                              {
                                const-val call_tmp[1845515]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1845517 'move' call_tmp[1845515](1845520 call ==[435664] thisChar[1844982] removeChar[1845509]))
                                const-val call_tmp[1845523]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1845525 'move' call_tmp[1845523] call_tmp[1845515])
                                if call_tmp[1845523]
                                {
                                  const-val call_tmp[1845530]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                  const-val ret_tmp[1845532]:byteIndex[28170] "temp"
                                  (1845535 call +[28722] i[1844989] nBytes[1844996] ret_tmp[1845532])
                                  (1845539 'move' call_tmp[1845530] ret_tmp[1845532])
                                  (1845543 call =[38191] start[36193] call_tmp[1845530])
                                  (1845547 call chpl__autoDestroy[1399941] call_tmp[1845530])
                                  (1845550 call chpl__autoDestroy[1403553] tmp[1845430])
                                  (1845553 call chpl__autoDestroy[1399678] localThis[1845046])
                                  (1845556 call _freeIterator[1120071] _iterator[1845007])
                                  continue _continueLabel[1845614] _continueLabel[1845614]
                                }
                              }
                              label _continueLabel[1845561]
                            }
                            const-val coerce_tmp[1845563]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1845565 'move' coerce_tmp[1845563](1845567 'cast' int(64)[13] nBytes[1845483]))
                            (1845571 call +=[451373] i[1845357] coerce_tmp[1845563])
                            (1845575 call chpl__autoDestroy[1403553] tmp[1845430])
                            ref call_tmp[1845577]:_ref(int(64))[934535] "dead after last mention" "maybe param" "temp"
                            (1845579 'move' call_tmp[1845577](1845582 call buffLen[757925] localThis[1845046]))
                            const-val call_tmp[1845584]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1845586]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1845588 'move' coerce_tmp[1845586](1845590 'deref' call_tmp[1845577]))
                            (1845592 'move' call_tmp[1845584](1845595 call <[437510] i[1845357] coerce_tmp[1845586]))
                            (1845598 'move' tmp[1845362] call_tmp[1845584])
                            tmp[1845362]
                          }
                        }
                        (1845603 call chpl__autoDestroy[1399678] localThis[1845046])
                        label _endcodepoints[1845605]
                      }
                      label _breakLabel[1845607]
                      (1845610 call _freeIterator[1120071] _iterator[1845007])
                    }
                    ref moreRef1[1845617]:_ref(int(64))[934535] "temp"
                    (1845619 'move' moreRef1[1845617](1845621 '.' _iterator[1844242] more[1093685]))
                    const-val moreVal1[1845624]:int(64)[13] "const" "temp"
                    (1845626 '=' moreVal1[1845624] moreRef1[1845617])
                    const-val moreValNeg1[1845629]:int(64)[13] "const" "temp"
                    (1845631 'move' moreValNeg1[1845629](1845633 'u-' moreVal1[1845624]))
                    (1845635 '=' moreRef1[1845617] moreValNeg1[1845629])
                    (1845639 call advance[1093708] _iterator[1844242])
                    ref moreRef2[1845641]:_ref(int(64))[934535] "temp"
                    (1845643 'move' moreRef2[1845641](1845645 '.' _iterator[1844249] more[1105207]))
                    const-val moreVal2[1845648]:int(64)[13] "const" "temp"
                    (1845650 '=' moreVal2[1845648] moreRef2[1845641])
                    const-val moreValNeg2[1845653]:int(64)[13] "const" "temp"
                    (1845655 'move' moreValNeg2[1845653](1845657 'u-' moreVal2[1845648]))
                    (1845659 '=' moreRef2[1845641] moreValNeg2[1845653])
                    (1845663 call advance[1105230] _iterator[1844249])
                    (1845666 call chpl__autoDestroy[1399941] call_tmp[1844373])
                    (1845669 call _freeIterator[1105672] _iterator[1844194])
                    (1845672 call chpl__autoDestroy[1479306] _iterator[1844194])
                    (1845675 call chpl__autoDestroy[1472309] call_tmp[1844196])
                    (1845678 call chpl__autoDestroy[1399678] localThis[1844175])
                    break _breakLabel[36294] _breakLabel[36294]
                  }
                  label _continueLabel[1845614]
                }
                (1844471 call chpl__autoDestroy[1399941] call_tmp[1844373])
                {
                  (1844475 call zip3[1093735] _iterator[1844242])
                }
                {
                  (1844479 call zip3[1105257] _iterator[1844249])
                }
                {
                  {
                    (1844272 call init[1093771] _iterator[1844242])
                  }
                  {
                    (1844276 call init[1105293] _iterator[1844249])
                  }
                }
                {
                  (1844280 call hasMore[1093753] _iterator[1844242])
                }
                {
                  {
                    (1844285 call incr[1093780] _iterator[1844242])
                  }
                  {
                    (1844289 call incr[1105302] _iterator[1844249])
                  }
                }
              }
              {
                const-val retTmp[1844482]:int(64)[13] "temp"
                (1844484 'move' retTmp[1844482](1844487 call hasMore[1105275] _iterator[1844249]))
                (1844489 'move' hasMore[1844266](1844491 'cast' bool[10] retTmp[1844482]))
              }
              if hasMore[1844266]
              {
                (1844496 'chpl_error' c"zippered iterations have non-equal lengths")
              }
              {
                (1844501 call zip4[1105266] _iterator[1844249])
              }
              {
                (1844505 call zip4[1093744] _iterator[1844242])
              }
              (1844508 call _freeIterator[1105672] _iterator[1844194])
              (1844511 call chpl__autoDestroy[1479306] _iterator[1844194])
              (1844514 call chpl__autoDestroy[1472309] call_tmp[1844196])
            }
            {
              const-val call_tmp[1844517]:int(64)[13] "dead at end of block" "maybe param" "temp"
              ref start[1846354]:_ref(byteIndex)[946682] "temp"
              (1846359 'move' start[1846354](1846356 '.v' _iterator[36289] F1_start[1938745]))
              (1844519 'move' call_tmp[1844517](1844522 call _cast[39462] start[1846354]))
              val i[1844524]:int(64)[13] "dead at end of block" "insert auto destroy"
              (1844526 'move' i[1844524] call_tmp[1844517])
              const-val call_tmp[1844529]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1844531 'move' call_tmp[1844529](1844534 call >[437730] call_tmp[1844517] 0))
              const-val call_tmp[1844537]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1844539 'move' call_tmp[1844537] call_tmp[1844529])
              if call_tmp[1844529]
              {
                val tmp[1844544]:bool[10] "dead after last mention" "temp"
                const-val tmp[1844546]:bool[10] "dead after last mention" "maybe param" "temp"
                ref call_tmp[1844548]:_ref(int(64))[934535] "dead after last mention" "maybe param" "temp"
                (1844550 'move' call_tmp[1844548](1844553 call buffLen[757925] localThis[1844175]))
                const-val coerce_tmp[1844555]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1844557 'move' coerce_tmp[1844555](1844559 'deref' call_tmp[1844548]))
                (1844561 'move' tmp[1844546](1844564 call <[437510] i[1844524] coerce_tmp[1844555]))
                val tmp[1844567]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[1844569]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1844571]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1844573 'move' call_tmp[1844571] tmp[1844546])
                (1844576 'move' tmp[1844569] tmp[1844546])
                if tmp[1844546]
                {
                  const-val tmp[1844581]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  ref call_tmp[1844583]:_ref(uint(8))[934871] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[1844585]:_ref(c_ptr(uint(8)))[935395] "dead after last mention" "temp"
                  (1844587 'move' _this_tmp_[1844585](1844590 call buff[758003] localThis[1844175]))
                  val coerce_tmp[1844592]:c_ptr(uint(8))[935386] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1844594 'move' coerce_tmp[1844592](1844596 'deref' _this_tmp_[1844585]))
                  (1844598 'move' call_tmp[1844583](1844601 call this[952013] coerce_tmp[1844592] i[1844524]))
                  const-val call_tmp[1844604]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1844606]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1844608 'move' coerce_tmp[1844606](1844610 'deref' call_tmp[1844583]))
                  (1844612 'move' call_tmp[1844604](1844615 call isInitialByte[181540] coerce_tmp[1844606]))
                  const-val call_tmp[1844617]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1844619 'move' call_tmp[1844617](1844622 call ![7494] call_tmp[1844604]))
                  (1844624 'move' tmp[1844581] call_tmp[1844617])
                  (1844627 'move' tmp[1844567] call_tmp[1844617])
                }
                {
                  (1844631 'move' tmp[1844567] 0)
                }
                (1844635 'move' tmp[1844544] tmp[1844567])
                WhileDo[1844638]
                {
                  (1844641 call +=[451373] i[1844524] 1)
                  const-val tmp[1844644]:bool[10] "dead after last mention" "maybe param" "temp"
                  ref call_tmp[1844646]:_ref(int(64))[934535] "dead after last mention" "maybe param" "temp"
                  (1844648 'move' call_tmp[1844646](1844651 call buffLen[757925] localThis[1844175]))
                  const-val coerce_tmp[1844653]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1844655 'move' coerce_tmp[1844653](1844657 'deref' call_tmp[1844646]))
                  (1844659 'move' tmp[1844644](1844662 call <[437510] i[1844524] coerce_tmp[1844653]))
                  val tmp[1844665]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                  const-val tmp[1844667]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[1844669]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1844671 'move' call_tmp[1844669] tmp[1844644])
                  (1844674 'move' tmp[1844667] tmp[1844644])
                  if tmp[1844644]
                  {
                    const-val tmp[1844679]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    ref call_tmp[1844681]:_ref(uint(8))[934871] "dead after last mention" "maybe param" "temp"
                    ref _this_tmp_[1844683]:_ref(c_ptr(uint(8)))[935395] "dead after last mention" "temp"
                    (1844685 'move' _this_tmp_[1844683](1844688 call buff[758003] localThis[1844175]))
                    val coerce_tmp[1844690]:c_ptr(uint(8))[935386] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1844692 'move' coerce_tmp[1844690](1844694 'deref' _this_tmp_[1844683]))
                    (1844696 'move' call_tmp[1844681](1844699 call this[952013] coerce_tmp[1844690] i[1844524]))
                    const-val call_tmp[1844702]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1844704]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1844706 'move' coerce_tmp[1844704](1844708 'deref' call_tmp[1844681]))
                    (1844710 'move' call_tmp[1844702](1844713 call isInitialByte[181540] coerce_tmp[1844704]))
                    const-val call_tmp[1844715]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1844717 'move' call_tmp[1844715](1844720 call ![7494] call_tmp[1844702]))
                    (1844722 'move' tmp[1844679] call_tmp[1844715])
                    (1844725 'move' tmp[1844665] call_tmp[1844715])
                  }
                  {
                    (1844729 'move' tmp[1844665] 0)
                  }
                  (1844733 'move' tmp[1844544] tmp[1844665])
                  tmp[1844544]
                }
              }
              val tmp[1844737]:bool[10] "dead after last mention" "temp"
              ref call_tmp[1844739]:_ref(int(64))[934535] "dead after last mention" "maybe param" "temp"
              (1844741 'move' call_tmp[1844739](1844744 call buffLen[757925] localThis[1844175]))
              const-val call_tmp[1844746]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1844748]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1844750 'move' coerce_tmp[1844748](1844752 'deref' call_tmp[1844739]))
              (1844754 'move' call_tmp[1844746](1844757 call <[437510] i[1844524] coerce_tmp[1844748]))
              (1844760 'move' tmp[1844737] call_tmp[1844746])
              WhileDo[1844763]
              {
                ref call_tmp[1844765]:_ref(c_ptr(uint(8)))[935395] "dead at end of block" "maybe param" "temp"
                (1844767 'move' call_tmp[1844765](1844770 call buff[758003] localThis[1844175]))
                ref call_tmp[1844772]:_ref(int(64))[934535] "dead at end of block" "maybe param" "temp"
                (1844774 'move' call_tmp[1844772](1844777 call buffLen[757925] localThis[1844175]))
                const-val call_tmp[1844779]:(syserr,int(32),int(32))[960390] "dead at end of block" "maybe param" "temp"
                val coerce_tmp[1844781]:c_ptr(uint(8))[935386] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1844783 'move' coerce_tmp[1844781](1844785 'deref' call_tmp[1844765]))
                const-val coerce_tmp[1844787]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1844789 'move' coerce_tmp[1844787](1844791 'deref' call_tmp[1844772]))
                const-val ret_tmp[1844793]:(syserr,int(32),int(32))[960390] "temp"
                (1844796 call decodeHelp[174418] coerce_tmp[1844781] coerce_tmp[1844787] i[1844524] 1 ret_tmp[1844793])
                (1844802 'move' call_tmp[1844779] ret_tmp[1844793])
                const-val tmp[1844805]:(syserr,int(32),int(32))[960390] "dead at end of block" "const" "insert auto destroy" "temp"
                (1844807 'move' tmp[1844805] call_tmp[1844779])
                1
                ref call_tmp[1844811]:_ref(syserr)[946755] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1844813 'move' call_tmp[1844811](1844815 '.' tmp[1844805] x0[960384]))
                const-val decodeRet[1844818]:syserr[223501] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1844820]:syserr[223501] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1844822 'move' coerce_tmp[1844820](1844824 'deref' call_tmp[1844811]))
                (1844826 'move' decodeRet[1844818](1844829 call chpl__initCopy[960255] coerce_tmp[1844820]))
                ref call_tmp[1844831]:_ref(int(32))[934589] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1844833 'move' call_tmp[1844831](1844835 '.' tmp[1844805] x1[960386]))
                const-val cp[1844838]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1844840]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1844842 'move' coerce_tmp[1844840](1844844 'deref' call_tmp[1844831]))
                (1844846 'move' cp[1844838](1844849 call chpl__initCopy[960527] coerce_tmp[1844840]))
                ref call_tmp[1844851]:_ref(int(32))[934589] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1844853 'move' call_tmp[1844851](1844855 '.' tmp[1844805] x2[960388]))
                const-val nBytes[1844858]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1844860]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1844862 'move' coerce_tmp[1844860](1844864 'deref' call_tmp[1844851]))
                (1844866 'move' nBytes[1844858](1844869 call chpl__initCopy[960527] coerce_tmp[1844860]))
                const-val yret[1844871]:(int(32),byteIndex,int(64))[1119077] "dead after last mention" "YVV" "temp"
                val call_tmp[1844873]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val call_tmp[1844875]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (1844877 'move' call_tmp[1844875] cp[1844838])
                const-val call_tmp[1844880]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1844882]:byteIndex[28170] "temp"
                (1844885 call _cast[39483] i[1844524] ret_tmp[1844882])
                (1844888 'move' call_tmp[1844880] ret_tmp[1844882])
                const-val call_tmp[1844891]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (1844893 'move' call_tmp[1844891](1844895 'cast' int(64)[13] nBytes[1844858]))
                const-val call_tmp[1844898]:(int(32),byteIndex,int(64))[1119077] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1844900]:(int(32),byteIndex,int(64))[1119077] "temp"
                (1844903 call _build_tuple[1119027] cp[1844838] call_tmp[1844880] call_tmp[1844891] ret_tmp[1844900])
                (1844908 'move' call_tmp[1844898] ret_tmp[1844900])
                (1844911 'move' yret[1844871] call_tmp[1844898])
                const-val _yieldedIndex[1845683]:(int(32),byteIndex,int(64))[1119077] "temp"
                (1846331 'move' _yieldedIndex[1845683] call_tmp[1844898])
                {
                  1
                  const-val thisChar[1845686]:int(32)[95] "const" "index var" "insert auto destroy"
                  (1845688 'move' thisChar[1845686](1845690 '.v' _yieldedIndex[1845683] x0[1119071]))
                  ref i[1845693]:_ref(byteIndex)[946682] "index var" "insert auto destroy"
                  (1845695 'move' i[1845693](1845697 '.v' _yieldedIndex[1845683] x1[1119073]))
                  const-val nBytes[1845700]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1845702 'move' nBytes[1845700](1845704 '.v' _yieldedIndex[1845683] x2[1119075]))
                  {
                    {
                      val _indexOfInterest[1845709]:int(32)[95] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1845711]:_ic_codepoints__ref_string[1119784] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1845713]:_ir_codepoints__ref_string[1119790] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1845715]:_ir_codepoints__ref_string[1119790] "temp"
                      (1845718 call codepoints[33663] localChars[36187] ret_tmp[1845715])
                      (1845721 'move' call_tmp[1845713] ret_tmp[1845715])
                      (1845724 'move' _iterator[1845711](1845727 call _getIterator[1119799] call_tmp[1845713]))
                      {
                        val ret[1845730]:_ir_codepoints__ref_string[1119790] "dead at end of block" "RVV" "temp"
                        const-val call_tmp[1845732]:string[26] "dead at end of block" "maybe param" "temp"
                        const-val ret_tmp[1845734]:string[26] "temp"
                        ref this[1845736]:_ref(string)[935902] "temp"
                        (1845738 'move' this[1845736](1845740 '.v' _iterator[1845711] F0_this[1942267]))
                        (1845744 call localize[32886] this[1845736] ret_tmp[1845734])
                        (1845747 'move' call_tmp[1845732] ret_tmp[1845734])
                        val localThis[1845750]:string[26] "dead at end of block" "insert auto destroy"
                        (1845752 'move' localThis[1845750] call_tmp[1845732])
                        const-val call_tmp[1845755]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        ref this[1845757]:_ref(string)[935902] "temp"
                        (1845759 'move' this[1845757](1845761 '.v' _iterator[1845711] F0_this[1942267]))
                        (1845764 'move' call_tmp[1845755](1845767 call isASCII[31046] this[1845757]))
                        const-val call_tmp[1845769]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1845771 'move' call_tmp[1845769] call_tmp[1845755])
                        if call_tmp[1845755]
                        {
                          val _indexOfInterest[1845776]:uint(8)[100] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                          val _iterator[1845778]:_ic_chpl_bytes__ref_string[1105204] "dead at end of block" "expr temp" "temp"
                          const-val call_tmp[1845780]:_ir_chpl_bytes__ref_string[1105210] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val ret_tmp[1845782]:_ir_chpl_bytes__ref_string[1105210] "temp"
                          ref this[1845784]:_ref(string)[935902] "temp"
                          (1845786 'move' this[1845784](1845788 '.v' _iterator[1845711] F0_this[1942267]))
                          (1845792 call chpl_bytes[33574] this[1845784] ret_tmp[1845782])
                          (1845795 'move' call_tmp[1845780] ret_tmp[1845782])
                          (1845798 'move' _iterator[1845778](1845801 call _getIterator[1105219] call_tmp[1845780]))
                          {
                            val ret[1845804]:_ir_chpl_bytes__ref_string[1105210] "dead at end of block" "RVV" "temp"
                            const-val call_tmp[1845806]:string[26] "dead at end of block" "maybe param" "temp"
                            const-val ret_tmp[1845808]:string[26] "temp"
                            ref this[1845810]:_ref(string)[935902] "temp"
                            (1845812 'move' this[1845810](1845814 '.v' _iterator[1845778] F0_this[1940093]))
                            (1845818 call localize[32886] this[1845810] ret_tmp[1845808])
                            (1845821 'move' call_tmp[1845806] ret_tmp[1845808])
                            val localThis[1845824]:string[26] "dead at end of block" "insert auto destroy"
                            (1845826 'move' localThis[1845824] call_tmp[1845806])
                            val _indexOfInterest[1845829]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                            val _iterator[1845831]:_ic_chpl_direct_counted_range_iter[1100747] "dead at end of block" "expr temp" "temp"
                            ref call_tmp[1845833]:_ref(int(64))[934535] "dead at end of block" "maybe param" "temp"
                            (1845835 'move' call_tmp[1845833](1845838 call buffLen[757925] localThis[1845824]))
                            const-val call_tmp[1845840]:_ir_chpl_direct_counted_range_iter[1100753] "dead at end of block" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1845842]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1845844 'move' coerce_tmp[1845842](1845846 'deref' call_tmp[1845833]))
                            const-val ret_tmp[1845848]:_ir_chpl_direct_counted_range_iter[1100753] "temp"
                            (1845851 call chpl_direct_counted_range_iter[458054] 0 coerce_tmp[1845842] ret_tmp[1845848])
                            (1845855 'move' call_tmp[1845840] ret_tmp[1845848])
                            (1845858 'move' _iterator[1845831](1845861 call _getIterator[1100762] call_tmp[1845840]))
                            {
                              val ret[1845864]:_ir_chpl_direct_counted_range_iter[1100753] "dead after last mention" "RVV" "temp"
                              val _indexOfInterest[1845866]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                              val _iterator[1845868]:_ic_chpl_direct_counted_range_iter_helper[1100497] "dead at end of block" "expr temp" "temp"
                              const-val call_tmp[1845870]:_ir_chpl_direct_counted_range_iter_helper[1100503] "dead at end of block" "expr temp" "maybe param" "temp"
                              const-val ret_tmp[1845872]:_ir_chpl_direct_counted_range_iter_helper[1100503] "temp"
                              const-val low[1845874]:int(64)[13] "temp"
                              (1845876 'move' low[1845874](1845878 '.v' _iterator[1845831] F0_low[1952071]))
                              const-val count[1845881]:int(64)[13] "temp"
                              (1845883 'move' count[1845881](1845885 '.v' _iterator[1845831] F1_count[1952075]))
                              (1845889 call chpl_direct_counted_range_iter_helper[1099055] low[1845874] count[1845881] ret_tmp[1845872])
                              (1845893 'move' call_tmp[1845870] ret_tmp[1845872])
                              (1845896 'move' _iterator[1845868](1845899 call _getIterator[1100512] call_tmp[1845870]))
                              {
                                val ret[1903387]:_ir_chpl_direct_counted_range_iter_helper[1100503] "dead after last mention" "RVV" "temp"
                                val call_tmp[1903389]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                const-val tmp[1903391]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val tmp[1903393]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                                const-val call_tmp[1903395]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[1903883]:int(64)[13] "temp"
                                (1903888 'move' count[1903883](1903885 '.v' _iterator[1845868] F1_count[1956547]))
                                (1903397 'move' call_tmp[1903395](1903400 call <[946327] count[1903883]))
                                (1903402 'move' tmp[1903393] call_tmp[1903395])
                                (1903405 'move' tmp[1903391] call_tmp[1903395])
                                const-val call_tmp[1903408]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1903410 'move' call_tmp[1903408] call_tmp[1903395])
                                if call_tmp[1903395]
                                {
                                  (1903416 call boundsCheckHalt[210084] "With a negative count, the range must have a last index.")
                                }
                                const-val tmp[1903419]:2*int(64)[1037179] "dead at end of block" "const" "insert auto destroy" "temp"
                                val tmp[1903421]:2*int(64)[1037179] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                                const-val tmp[1903423]:bool[10] "dead after last mention" "maybe param" "temp"
                                const-val call_tmp[1903425]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[1903890]:int(64)[13] "temp"
                                (1903895 'move' count[1903890](1903892 '.v' _iterator[1845868] F1_count[1956547]))
                                (1903427 'move' call_tmp[1903425](1903430 call ==[435686] count[1903890] 0))
                                (1903433 'move' tmp[1903423] call_tmp[1903425])
                                if call_tmp[1903425]
                                {
                                  const-val tmp[1903438]:2*int(64)[1037179] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[1903440]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[1903442]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[1903897]:int(64)[13] "temp"
                                  (1903902 'move' low[1903897](1903899 '.v' _iterator[1845868] F0_low[1956543]))
                                  (1903444 'move' call_tmp[1903442](1903447 call _cast[974684] low[1903897]))
                                  const-val call_tmp[1903449]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val coerce_tmp[1903451]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                  (1903453 'move' coerce_tmp[1903451](1903455 'cast' uint(64)[115] 1))
                                  (1903458 'move' call_tmp[1903449](1903461 call -[957077] call_tmp[1903442]))
                                  const-val call_tmp[1903463]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  (1903465 'move' call_tmp[1903463](1903468 call _cast[951465] call_tmp[1903449]))
                                  const-val ret_tmp[1903470]:2*int(64)[1037179] "temp"
                                  const-val low[1903904]:int(64)[13] "temp"
                                  (1903909 'move' low[1903904](1903906 '.v' _iterator[1845868] F0_low[1956543]))
                                  (1903473 call _build_tuple[1037137] low[1903904] call_tmp[1903463] ret_tmp[1903470])
                                  (1903477 'move' tmp[1903438] ret_tmp[1903470])
                                  (1903480 'move' tmp[1903421] tmp[1903438])
                                }
                                {
                                  const-val tmp[1903484]:2*int(64)[1037179] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[1903486]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[1903488]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[1903911]:int(64)[13] "temp"
                                  (1903916 'move' count[1903911](1903913 '.v' _iterator[1845868] F1_count[1956547]))
                                  (1903490 'move' call_tmp[1903488] count[1903911])
                                  const-val call_tmp[1903493]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[1903918]:int(64)[13] "temp"
                                  (1903923 'move' count[1903918](1903920 '.v' _iterator[1845868] F1_count[1956547]))
                                  (1903495 'move' call_tmp[1903493](1903498 call -[957110] count[1903918]))
                                  const-val call_tmp[1903500]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[1903925]:int(64)[13] "temp"
                                  (1903930 'move' low[1903925](1903927 '.v' _iterator[1845868] F0_low[1956543]))
                                  (1903502 'move' call_tmp[1903500](1903505 call +[439694] low[1903925] call_tmp[1903493]))
                                  const-val ret_tmp[1903508]:2*int(64)[1037179] "temp"
                                  const-val low[1903932]:int(64)[13] "temp"
                                  (1903937 'move' low[1903932](1903934 '.v' _iterator[1845868] F0_low[1956543]))
                                  (1903511 call _build_tuple[1037137] low[1903932] call_tmp[1903500] ret_tmp[1903508])
                                  (1903515 'move' tmp[1903484] ret_tmp[1903508])
                                  (1903518 'move' tmp[1903421] tmp[1903484])
                                }
                                (1903522 '=' tmp[1903419] tmp[1903421])
                                (1903525 'noop')
                                1
                                ref call_tmp[1903527]:_ref(int(64))[934535] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (1903529 'move' call_tmp[1903527](1903531 '.' tmp[1903419] x0[1037175]))
                                const-val start[1903534]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[1903536]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (1903538 'move' coerce_tmp[1903536](1903540 'deref' call_tmp[1903527]))
                                (1903542 '=' start[1903534] coerce_tmp[1903536])
                                (1903545 'noop')
                                ref call_tmp[1903546]:_ref(int(64))[934535] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (1903548 'move' call_tmp[1903546](1903550 '.' tmp[1903419] x1[1037177]))
                                const-val end[1903553]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[1903555]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (1903557 'move' coerce_tmp[1903555](1903559 'deref' call_tmp[1903546]))
                                (1903561 '=' end[1903553] coerce_tmp[1903555])
                                (1903564 'noop')
                                val _indexOfInterest[1903565]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                val _iterator[1903567]:_ic_chpl_direct_param_stride_range_iter[1100243] "dead at end of block" "expr temp" "temp"
                                const-val call_tmp[1903569]:_ir_chpl_direct_param_stride_range_iter[1100249] "dead at end of block" "expr temp" "maybe param" "temp"
                                const-val ret_tmp[1903571]:_ir_chpl_direct_param_stride_range_iter[1100249] "temp"
                                (1903574 call chpl_direct_param_stride_range_iter[1099481] coerce_tmp[1903536] coerce_tmp[1903555] ret_tmp[1903571])
                                (1903578 'move' call_tmp[1903569] ret_tmp[1903571])
                                (1903581 'move' _iterator[1903567](1903584 call _getIterator[1100258] call_tmp[1903569]))
                                {
                                  val ret[1903587]:_ir_chpl_direct_param_stride_range_iter[1100249] "dead after last mention" "RVV" "temp"
                                  val call_tmp[1903589]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (1903592 call chpl_range_check_stride[1099801])
                                  val i[1903593]:int(64)[13] "dead at end of block" "insert auto destroy"
                                  val call_tmp[1903595]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (1903597 'move' i[1903593] 0)
                                  val call_tmp[1903600]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val default_arg_first[1903602]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val low[1903604]:int(64)[13] "temp"
                                  (1903606 'move' low[1903604](1903608 '.v' _iterator[1903567] F0_low[1958041]))
                                  (1903611 'move' default_arg_first[1903602](1903614 call chpl_checkIfRangeIterWillOverflow_default_first[1100155] low[1903604]))
                                  const-val default_arg_last[1903616]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val high[1903618]:int(64)[13] "temp"
                                  (1903620 'move' high[1903618](1903622 '.v' _iterator[1903567] F1_high[1958045]))
                                  (1903625 'move' default_arg_last[1903616](1903628 call chpl_checkIfRangeIterWillOverflow_default_last[1100183] high[1903618]))
                                  const-val _return_tmp_[1903630]:bool[10] "dead after last mention" "temp"
                                  const-val low[1903632]:int(64)[13] "temp"
                                  (1903634 'move' low[1903632](1903636 '.v' _iterator[1903567] F0_low[1958041]))
                                  const-val high[1903639]:int(64)[13] "temp"
                                  (1903641 'move' high[1903639](1903643 '.v' _iterator[1903567] F1_high[1958045]))
                                  (1903646 'move' _return_tmp_[1903630](1903649 call chpl_checkIfRangeIterWillOverflow[1093055] low[1903632] high[1903639] 1 default_arg_first[1903602] default_arg_last[1903616] 1))
                                  CForLoop[1903656]
                                  {
                                    const-val yret[1903685]:int(64)[13] "dead after last mention" "YVV" "temp"
                                    (1903687 'move' yret[1903685] i[1903593])
                                    const-val _yieldedIndex[1903690]:int(64)[13] "temp"
                                    (1903692 'move' _yieldedIndex[1903690] i[1903593])
                                    {
                                      const-val i[1903696]:int(64)[13] "const" "index var" "insert auto destroy"
                                      (1903698 'move' i[1903696] _yieldedIndex[1903690])
                                      const-val yret[1903701]:int(64)[13] "dead after last mention" "YVV" "temp"
                                      (1903703 'move' yret[1903701] _yieldedIndex[1903690])
                                      const-val _yieldedIndex[1903731]:int(64)[13] "temp"
                                      (1903881 'move' _yieldedIndex[1903731] _yieldedIndex[1903690])
                                      {
                                        const-val i[1903733]:int(64)[13] "const" "index var" "insert auto destroy"
                                        (1903735 'move' i[1903733] _yieldedIndex[1903731])
                                        const-val yret[1903738]:int(64)[13] "dead after last mention" "YVV" "temp"
                                        (1903740 'move' yret[1903738] _yieldedIndex[1903731])
                                        const-val _yieldedIndex[1903743]:int(64)[13] "temp"
                                        (1903745 'move' _yieldedIndex[1903743] _yieldedIndex[1903731])
                                        {
                                          const-val i[1903749]:int(64)[13] "const" "index var" "insert auto destroy"
                                          (1903751 'move' i[1903749] _yieldedIndex[1903743])
                                          const-val yret[1903754]:uint(8)[100] "dead after last mention" "YVV" "temp"
                                          ref call_tmp[1903756]:_ref(uint(8))[934871] "dead after last mention" "maybe param" "temp"
                                          ref _this_tmp_[1903758]:_ref(c_ptr(uint(8)))[935395] "dead after last mention" "temp"
                                          (1903760 'move' _this_tmp_[1903758](1903763 call buff[758003] localThis[1845824]))
                                          val coerce_tmp[1903765]:c_ptr(uint(8))[935386] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                          (1903767 'move' coerce_tmp[1903765](1903769 'deref' _this_tmp_[1903758]))
                                          (1903771 'move' call_tmp[1903756](1903774 call this[952013] coerce_tmp[1903765] _yieldedIndex[1903743]))
                                          const-val coerce_tmp[1903777]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                          (1903779 'move' coerce_tmp[1903777](1903781 'deref' call_tmp[1903756]))
                                          (1903783 '=' yret[1903754] coerce_tmp[1903777])
                                          (1903786 'noop')
                                          const-val _yieldedIndex[1903787]:uint(8)[100] "temp"
                                          (1903789 'move' _yieldedIndex[1903787] coerce_tmp[1903777])
                                          {
                                            const-val b[1903793]:uint(8)[100] "const" "index var" "insert auto destroy"
                                            (1903795 'move' b[1903793] _yieldedIndex[1903787])
                                            val yret[1903798]:int(32)[95] "dead after last mention" "YVV" "temp"
                                            val call_tmp[1903800]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                            const-val _yieldedIndex[1903802]:int(32)[95] "temp"
                                            (1903804 'move' _yieldedIndex[1903802](1903806 'cast' int(32)[95] _yieldedIndex[1903787]))
                                            {
                                              const-val removeChar[1903810]:int(32)[95] "const" "index var" "insert auto destroy"
                                              (1903812 'move' removeChar[1903810] _yieldedIndex[1903802])
                                              {
                                                const-val call_tmp[1903816]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (1903818 'move' call_tmp[1903816](1903821 call ==[435664] thisChar[1845686] removeChar[1903810]))
                                                const-val call_tmp[1903824]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (1903826 'move' call_tmp[1903824] call_tmp[1903816])
                                                if call_tmp[1903824]
                                                {
                                                  const-val call_tmp[1903831]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                                  const-val ret_tmp[1903833]:byteIndex[28170] "temp"
                                                  (1903836 call +[28722] i[1845693] nBytes[1845700] ret_tmp[1903833])
                                                  (1903840 'move' call_tmp[1903831] ret_tmp[1903833])
                                                  (1903844 call =[38191] start[36193] call_tmp[1903831])
                                                  (1903848 call chpl__autoDestroy[1399941] call_tmp[1903831])
                                                  (1903875 call _freeIterator[1100431] _iterator[1903567])
                                                  (1903878 call chpl__autoDestroy[1472606] tmp[1903419])
                                                  (1903851 call _freeIterator[1100681] _iterator[1845868])
                                                  (1903854 call _freeIterator[1100931] _iterator[1845831])
                                                  (1903857 call chpl__autoDestroy[1399678] localThis[1845824])
                                                  (1903860 call _freeIterator[1106517] _iterator[1845778])
                                                  (1903863 call chpl__autoDestroy[1399678] localThis[1845750])
                                                  (1903866 call _freeIterator[1120071] _iterator[1845711])
                                                  continue _continueLabel[1846318] _continueLabel[1846318]
                                                }
                                              }
                                              label _continueLabel[1903871]
                                            }
                                          }
                                        }
                                      }
                                    }
                                    {
                                      const-val low[1903658]:int(64)[13] "temp"
                                      (1903660 'move' low[1903658](1903662 '.v' _iterator[1903567] F0_low[1958041]))
                                      (1903665 '=' i[1903593] low[1903658])
                                    }
                                    {
                                      const-val high[1903669]:int(64)[13] "temp"
                                      (1903671 'move' high[1903669](1903673 '.v' _iterator[1903567] F1_high[1958045]))
                                      (1903676 '<=' i[1903593] high[1903669])
                                    }
                                    {
                                      val call_tmp[1903680]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                      (1903682 '+=' i[1903593] 1)
                                    }
                                  }
                                  label _endchpl_direct_param_stride_range_iter[1903719]
                                }
                                (1903722 call _freeIterator[1100431] _iterator[1903567])
                                (1903725 call chpl__autoDestroy[1472606] tmp[1903419])
                                label _endchpl_direct_counted_range_iter_helper[1903727]
                              }
                              (1846045 call _freeIterator[1100681] _iterator[1845868])
                              label _endchpl_direct_counted_range_iter[1846047]
                            }
                            (1846050 call _freeIterator[1100931] _iterator[1845831])
                            (1846053 call chpl__autoDestroy[1399678] localThis[1845824])
                            label _endchpl_bytes[1846055]
                          }
                          (1846058 call _freeIterator[1106517] _iterator[1845778])
                        }
                        {
                          val i[1846061]:int(64)[13] "dead at end of block" "insert auto destroy"
                          (1846063 'move' i[1846061] 0)
                          val tmp[1846066]:bool[10] "dead after last mention" "temp"
                          ref call_tmp[1846068]:_ref(int(64))[934535] "dead after last mention" "maybe param" "temp"
                          (1846070 'move' call_tmp[1846068](1846073 call buffLen[757925] localThis[1845750]))
                          const-val call_tmp[1846075]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[1846077]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1846079 'move' coerce_tmp[1846077](1846081 'deref' call_tmp[1846068]))
                          (1846083 'move' call_tmp[1846075](1846086 call <[437510] 0 coerce_tmp[1846077]))
                          (1846089 'move' tmp[1846066] call_tmp[1846075])
                          WhileDo[1846092]
                          {
                            ref call_tmp[1846094]:_ref(c_ptr(uint(8)))[935395] "dead at end of block" "maybe param" "temp"
                            (1846096 'move' call_tmp[1846094](1846099 call buff[758003] localThis[1845750]))
                            ref call_tmp[1846101]:_ref(int(64))[934535] "dead at end of block" "maybe param" "temp"
                            (1846103 'move' call_tmp[1846101](1846106 call buffLen[757925] localThis[1845750]))
                            const-val call_tmp[1846108]:(syserr,int(32),int(32))[960390] "dead at end of block" "maybe param" "temp"
                            val coerce_tmp[1846110]:c_ptr(uint(8))[935386] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1846112 'move' coerce_tmp[1846110](1846114 'deref' call_tmp[1846094]))
                            const-val coerce_tmp[1846116]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1846118 'move' coerce_tmp[1846116](1846120 'deref' call_tmp[1846101]))
                            const-val ret_tmp[1846122]:(syserr,int(32),int(32))[960390] "temp"
                            (1846125 call decodeHelp[174418] coerce_tmp[1846110] coerce_tmp[1846116] i[1846061] 1 ret_tmp[1846122])
                            (1846131 'move' call_tmp[1846108] ret_tmp[1846122])
                            const-val tmp[1846134]:(syserr,int(32),int(32))[960390] "dead at end of block" "const" "insert auto destroy" "temp"
                            (1846136 'move' tmp[1846134] call_tmp[1846108])
                            1
                            ref call_tmp[1846140]:_ref(syserr)[946755] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1846142 'move' call_tmp[1846140](1846144 '.' tmp[1846134] x0[960384]))
                            const-val decodeRet[1846147]:syserr[223501] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1846149]:syserr[223501] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1846151 'move' coerce_tmp[1846149](1846153 'deref' call_tmp[1846140]))
                            (1846155 'move' decodeRet[1846147](1846158 call chpl__initCopy[960255] coerce_tmp[1846149]))
                            ref call_tmp[1846160]:_ref(int(32))[934589] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1846162 'move' call_tmp[1846160](1846164 '.' tmp[1846134] x1[960386]))
                            const-val cp[1846167]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1846169]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1846171 'move' coerce_tmp[1846169](1846173 'deref' call_tmp[1846160]))
                            (1846175 'move' cp[1846167](1846178 call chpl__initCopy[960527] coerce_tmp[1846169]))
                            ref call_tmp[1846180]:_ref(int(32))[934589] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1846182 'move' call_tmp[1846180](1846184 '.' tmp[1846134] x2[960388]))
                            const-val nBytes[1846187]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1846189]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1846191 'move' coerce_tmp[1846189](1846193 'deref' call_tmp[1846180]))
                            (1846195 'move' nBytes[1846187](1846198 call chpl__initCopy[960527] coerce_tmp[1846189]))
                            const-val yret[1846200]:int(32)[95] "dead after last mention" "YVV" "temp"
                            val call_tmp[1846202]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                            (1846204 'move' yret[1846200] cp[1846167])
                            const-val _yieldedIndex[1846207]:int(32)[95] "temp"
                            (1846209 'move' _yieldedIndex[1846207] cp[1846167])
                            {
                              const-val removeChar[1846213]:int(32)[95] "const" "index var" "insert auto destroy"
                              (1846215 'move' removeChar[1846213] _yieldedIndex[1846207])
                              {
                                const-val call_tmp[1846219]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1846221 'move' call_tmp[1846219](1846224 call ==[435664] thisChar[1845686] removeChar[1846213]))
                                const-val call_tmp[1846227]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1846229 'move' call_tmp[1846227] call_tmp[1846219])
                                if call_tmp[1846227]
                                {
                                  const-val call_tmp[1846234]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                  const-val ret_tmp[1846236]:byteIndex[28170] "temp"
                                  (1846239 call +[28722] i[1845693] nBytes[1845700] ret_tmp[1846236])
                                  (1846243 'move' call_tmp[1846234] ret_tmp[1846236])
                                  (1846247 call =[38191] start[36193] call_tmp[1846234])
                                  (1846251 call chpl__autoDestroy[1399941] call_tmp[1846234])
                                  (1846254 call chpl__autoDestroy[1403553] tmp[1846134])
                                  (1846257 call chpl__autoDestroy[1399678] localThis[1845750])
                                  (1846260 call _freeIterator[1120071] _iterator[1845711])
                                  continue _continueLabel[1846318] _continueLabel[1846318]
                                }
                              }
                              label _continueLabel[1846265]
                            }
                            const-val coerce_tmp[1846267]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1846269 'move' coerce_tmp[1846267](1846271 'cast' int(64)[13] nBytes[1846187]))
                            (1846275 call +=[451373] i[1846061] coerce_tmp[1846267])
                            (1846279 call chpl__autoDestroy[1403553] tmp[1846134])
                            ref call_tmp[1846281]:_ref(int(64))[934535] "dead after last mention" "maybe param" "temp"
                            (1846283 'move' call_tmp[1846281](1846286 call buffLen[757925] localThis[1845750]))
                            const-val call_tmp[1846288]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1846290]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1846292 'move' coerce_tmp[1846290](1846294 'deref' call_tmp[1846281]))
                            (1846296 'move' call_tmp[1846288](1846299 call <[437510] i[1846061] coerce_tmp[1846290]))
                            (1846302 'move' tmp[1846066] call_tmp[1846288])
                            tmp[1846066]
                          }
                        }
                        (1846307 call chpl__autoDestroy[1399678] localThis[1845750])
                        label _endcodepoints[1846309]
                      }
                      label _breakLabel[1846311]
                      (1846314 call _freeIterator[1120071] _iterator[1845711])
                    }
                    (1846322 call chpl__autoDestroy[1399941] call_tmp[1844880])
                    (1846325 call chpl__autoDestroy[1403553] tmp[1844805])
                    (1846328 call chpl__autoDestroy[1399678] localThis[1844175])
                    break _breakLabel[36294] _breakLabel[36294]
                  }
                  label _continueLabel[1846318]
                }
                (1844931 call chpl__autoDestroy[1399941] call_tmp[1844880])
                const-val coerce_tmp[1844933]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1844935 'move' coerce_tmp[1844933](1844937 'cast' int(64)[13] nBytes[1844858]))
                (1844941 call +=[451373] i[1844524] coerce_tmp[1844933])
                (1844945 call chpl__autoDestroy[1403553] tmp[1844805])
                ref call_tmp[1844947]:_ref(int(64))[934535] "dead after last mention" "maybe param" "temp"
                (1844949 'move' call_tmp[1844947](1844952 call buffLen[757925] localThis[1844175]))
                const-val call_tmp[1844954]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1844956]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1844958 'move' coerce_tmp[1844956](1844960 'deref' call_tmp[1844947]))
                (1844962 'move' call_tmp[1844954](1844965 call <[437510] i[1844524] coerce_tmp[1844956]))
                (1844968 'move' tmp[1844737] call_tmp[1844954])
                tmp[1844737]
              }
            }
            (1844973 call chpl__autoDestroy[1399678] localThis[1844175])
            label _end_cpIndexLen[1844975]
          }
          label _breakLabel[36294]
          (1794198 call _freeIterator[1119508] _iterator[36289])
          (1794200 call chpl__autoDestroy[1399941] default_arg_start[1118992])
        }
      }
      const-val call_tmp[601628]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (601631 'move' call_tmp[601628] trailing[36099])
      if call_tmp[601628]
      {
        (36353 call =[38165] end[36205] -1)
        {
          val _indexOfInterest[36436]:(int(32),byteIndex,int(64))[1119077] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[36437]:_ic__cpIndexLen__ref_string[1119320] "dead at end of block" "expr temp" "temp"
          const-val call_tmp[601640]:_ir__cpIndexLen__ref_string[1119326] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val ret_tmp[1781940]:_ir__cpIndexLen__ref_string[1119326] "temp"
          (36369 call _cpIndexLen[31106] localThis[36176] start[36193] ret_tmp[1781940])
          (1781943 'move' call_tmp[601640] ret_tmp[1781940])
          (36446 'move' _iterator[36437](36444 call _getIterator[1119335] call_tmp[601640]))
          {
            val ret[1846944]:_ir__cpIndexLen__ref_string[1119326] "dead after last mention" "RVV" "temp"
            const-val call_tmp[1846946]:string[26] "dead at end of block" "maybe param" "temp"
            const-val ret_tmp[1846948]:string[26] "temp"
            ref this[1849029]:_ref(string)[935902] "temp"
            (1849034 'move' this[1849029](1849031 '.v' _iterator[36437] F0_this[1938741]))
            (1846951 call localize[32886] this[1849029] ret_tmp[1846948])
            (1846954 'move' call_tmp[1846946] ret_tmp[1846948])
            val localThis[1846957]:string[26] "dead at end of block" "insert auto destroy"
            (1846959 'move' localThis[1846957] call_tmp[1846946])
            const-val call_tmp[1846962]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1846964 'move' call_tmp[1846962](1846967 call isASCII[31046] localThis[1846957]))
            const-val call_tmp[1846969]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1846971 'move' call_tmp[1846969] call_tmp[1846962])
            if call_tmp[1846962]
            {
              const-val _iterator[1846976]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1105514] "dead at end of block" "expr temp" "insert auto destroy" "temp"
              const-val call_tmp[1846978]:range(int(64),bounded,false)[1023946] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret_tmp[1846980]:range(int(64),bounded,false)[1023946] "temp"
              ref this[1849036]:_ref(string)[935902] "temp"
              (1849041 'move' this[1849036](1849038 '.v' _iterator[36437] F0_this[1938741]))
              (1846983 call byteIndices[31065] this[1849036] ret_tmp[1846980])
              (1846986 'move' call_tmp[1846978] ret_tmp[1846980])
              val call_tmp[1846989]:_ic_these_range_int64_t_bounded_F[1093682] "dead at end of block" "expr temp" "maybe param" "temp"
              (1846991 'move' call_tmp[1846989](1846994 call _getIterator[1092299] call_tmp[1846978]))
              const-val call_tmp[1846996]:_ir_chpl_bytes__ref_string[1105210] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[1846998]:_ir_chpl_bytes__ref_string[1105210] "temp"
              ref this[1849043]:_ref(string)[935902] "temp"
              (1849048 'move' this[1849043](1849045 '.v' _iterator[36437] F0_this[1938741]))
              (1847001 call chpl_bytes[33574] this[1849043] ret_tmp[1846998])
              (1847004 'move' call_tmp[1846996] ret_tmp[1846998])
              val call_tmp[1847007]:_ic_chpl_bytes__ref_string[1105204] "dead at end of block" "expr temp" "maybe param" "temp"
              (1847009 'move' call_tmp[1847007](1847012 call _getIterator[1105219] call_tmp[1846996]))
              const-val ret_tmp[1847014]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1105514] "temp"
              (1847017 call _build_tuple[1105472] call_tmp[1846989] call_tmp[1847007] ret_tmp[1847014])
              (1847021 'move' _iterator[1846976] ret_tmp[1847014])
              val _iterator[1847024]:_ic_these_range_int64_t_bounded_F[1093682] "temp"
              (1847026 'move' _iterator[1847024](1847028 '.v' _iterator[1846976] x0[1105510]))
              val _iterator[1847031]:_ic_chpl_bytes__ref_string[1105204] "temp"
              (1847033 'move' _iterator[1847031](1847035 '.v' _iterator[1846976] x1[1105512]))
              {
                (1847040 call zip1[1093717] _iterator[1847024])
              }
              {
                (1847044 call zip1[1105239] _iterator[1847031])
              }
              const-val isFinished[1847046]:bool[10] "temp"
              val hasMore[1847048]:bool[10] "temp"
              CForLoop[1847050]
              {
                val _indexOfInterest[1847073]:(int(64),uint(8))[1107988] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                {
                  (1847077 call zip2[1105248] _iterator[1847031])
                }
                {
                  const-val retTmp[1847080]:int(64)[13] "temp"
                  (1847082 'move' retTmp[1847080](1847085 call hasMore[1105275] _iterator[1847031]))
                  (1847087 'move' hasMore[1847048](1847089 'cast' bool[10] retTmp[1847080]))
                }
                (1847092 'move' isFinished[1847046](1847094 '!' hasMore[1847048]))
                if isFinished[1847046]
                {
                  (1847098 'chpl_error' c"zippered iterations have non-equal lengths")
                }
                {
                  (1847102 'move' _index[1847117](1847105 call getValue[1105284] _iterator[1847031]))
                }
                {
                  (1847109 call zip2[1093726] _iterator[1847024])
                }
                {
                  (1847112 'move' _index[1847123](1847115 call getValue[1093762] _iterator[1847024]))
                }
                val _index[1847117]:uint(8)[100] "temp"
                (1847119 '.=' _indexOfInterest[1847073] x1[1107986] _index[1847117])
                val _index[1847123]:int(64)[13] "temp"
                (1847125 '.=' _indexOfInterest[1847073] x0[1107984] _index[1847123])
                1
                const-val i[1847130]:int(64)[13] "const" "index var" "insert auto destroy"
                (1847132 'move' i[1847130](1847134 '.v' _indexOfInterest[1847073] x0[1107984]))
                const-val b[1847137]:uint(8)[100] "const" "index var" "insert auto destroy"
                (1847139 'move' b[1847137](1847141 '.v' _indexOfInterest[1847073] x1[1107986]))
                const-val yret[1847144]:(int(32),byteIndex,int(64))[1119077] "dead after last mention" "YVV" "temp"
                val call_tmp[1847146]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val call_tmp[1847148]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (1847150 'move' call_tmp[1847148](1847152 'cast' int(32)[95] b[1847137]))
                const-val call_tmp[1847155]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1847157]:byteIndex[28170] "temp"
                (1847160 call _cast[39483] i[1847130] ret_tmp[1847157])
                (1847163 'move' call_tmp[1847155] ret_tmp[1847157])
                const-val call_tmp[1847166]:(int(32),byteIndex,int(64))[1119077] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1847168]:(int(32),byteIndex,int(64))[1119077] "temp"
                (1847171 call _build_tuple[1119027] call_tmp[1847148] call_tmp[1847155] 1 ret_tmp[1847168])
                (1847176 'move' call_tmp[1847166] ret_tmp[1847168])
                (1847179 'move' yret[1847144] call_tmp[1847166])
                const-val _yieldedIndex[1847761]:(int(32),byteIndex,int(64))[1119077] "temp"
                (1848393 'move' _yieldedIndex[1847761] call_tmp[1847166])
                {
                  1
                  const-val thisChar[1847764]:int(32)[95] "const" "index var" "insert auto destroy"
                  (1847766 'move' thisChar[1847764](1847768 '.v' _yieldedIndex[1847761] x0[1119071]))
                  ref i[1847771]:_ref(byteIndex)[946682] "index var" "insert auto destroy"
                  (1847773 'move' i[1847771](1847775 '.v' _yieldedIndex[1847761] x1[1119073]))
                  const-val nBytes[1847778]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1847780 'move' nBytes[1847778](1847782 '.v' _yieldedIndex[1847761] x2[1119075]))
                  {
                    {
                      val _indexOfInterest[1847787]:int(32)[95] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1847789]:_ic_codepoints__ref_string[1119784] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1847791]:_ir_codepoints__ref_string[1119790] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1847793]:_ir_codepoints__ref_string[1119790] "temp"
                      (1847796 call codepoints[33663] localChars[36187] ret_tmp[1847793])
                      (1847799 'move' call_tmp[1847791] ret_tmp[1847793])
                      (1847802 'move' _iterator[1847789](1847805 call _getIterator[1119799] call_tmp[1847791]))
                      {
                        val ret[1847808]:_ir_codepoints__ref_string[1119790] "dead at end of block" "RVV" "temp"
                        const-val call_tmp[1847810]:string[26] "dead at end of block" "maybe param" "temp"
                        const-val ret_tmp[1847812]:string[26] "temp"
                        ref this[1847814]:_ref(string)[935902] "temp"
                        (1847816 'move' this[1847814](1847818 '.v' _iterator[1847789] F0_this[1942267]))
                        (1847822 call localize[32886] this[1847814] ret_tmp[1847812])
                        (1847825 'move' call_tmp[1847810] ret_tmp[1847812])
                        val localThis[1847828]:string[26] "dead at end of block" "insert auto destroy"
                        (1847830 'move' localThis[1847828] call_tmp[1847810])
                        const-val call_tmp[1847833]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        ref this[1847835]:_ref(string)[935902] "temp"
                        (1847837 'move' this[1847835](1847839 '.v' _iterator[1847789] F0_this[1942267]))
                        (1847842 'move' call_tmp[1847833](1847845 call isASCII[31046] this[1847835]))
                        const-val call_tmp[1847847]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1847849 'move' call_tmp[1847847] call_tmp[1847833])
                        if call_tmp[1847833]
                        {
                          val _indexOfInterest[1847854]:uint(8)[100] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                          val _iterator[1847856]:_ic_chpl_bytes__ref_string[1105204] "dead at end of block" "expr temp" "temp"
                          const-val call_tmp[1847858]:_ir_chpl_bytes__ref_string[1105210] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val ret_tmp[1847860]:_ir_chpl_bytes__ref_string[1105210] "temp"
                          ref this[1847862]:_ref(string)[935902] "temp"
                          (1847864 'move' this[1847862](1847866 '.v' _iterator[1847789] F0_this[1942267]))
                          (1847870 call chpl_bytes[33574] this[1847862] ret_tmp[1847860])
                          (1847873 'move' call_tmp[1847858] ret_tmp[1847860])
                          (1847876 'move' _iterator[1847856](1847879 call _getIterator[1105219] call_tmp[1847858]))
                          {
                            val ret[1847882]:_ir_chpl_bytes__ref_string[1105210] "dead at end of block" "RVV" "temp"
                            const-val call_tmp[1847884]:string[26] "dead at end of block" "maybe param" "temp"
                            const-val ret_tmp[1847886]:string[26] "temp"
                            ref this[1847888]:_ref(string)[935902] "temp"
                            (1847890 'move' this[1847888](1847892 '.v' _iterator[1847856] F0_this[1940093]))
                            (1847896 call localize[32886] this[1847888] ret_tmp[1847886])
                            (1847899 'move' call_tmp[1847884] ret_tmp[1847886])
                            val localThis[1847902]:string[26] "dead at end of block" "insert auto destroy"
                            (1847904 'move' localThis[1847902] call_tmp[1847884])
                            val _indexOfInterest[1847907]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                            val _iterator[1847909]:_ic_chpl_direct_counted_range_iter[1100747] "dead at end of block" "expr temp" "temp"
                            ref call_tmp[1847911]:_ref(int(64))[934535] "dead at end of block" "maybe param" "temp"
                            (1847913 'move' call_tmp[1847911](1847916 call buffLen[757925] localThis[1847902]))
                            const-val call_tmp[1847918]:_ir_chpl_direct_counted_range_iter[1100753] "dead at end of block" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1847920]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1847922 'move' coerce_tmp[1847920](1847924 'deref' call_tmp[1847911]))
                            const-val ret_tmp[1847926]:_ir_chpl_direct_counted_range_iter[1100753] "temp"
                            (1847929 call chpl_direct_counted_range_iter[458054] 0 coerce_tmp[1847920] ret_tmp[1847926])
                            (1847933 'move' call_tmp[1847918] ret_tmp[1847926])
                            (1847936 'move' _iterator[1847909](1847939 call _getIterator[1100762] call_tmp[1847918]))
                            {
                              val ret[1847942]:_ir_chpl_direct_counted_range_iter[1100753] "dead after last mention" "RVV" "temp"
                              val _indexOfInterest[1847944]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                              val _iterator[1847946]:_ic_chpl_direct_counted_range_iter_helper[1100497] "dead at end of block" "expr temp" "temp"
                              const-val call_tmp[1847948]:_ir_chpl_direct_counted_range_iter_helper[1100503] "dead at end of block" "expr temp" "maybe param" "temp"
                              const-val ret_tmp[1847950]:_ir_chpl_direct_counted_range_iter_helper[1100503] "temp"
                              const-val low[1847952]:int(64)[13] "temp"
                              (1847954 'move' low[1847952](1847956 '.v' _iterator[1847909] F0_low[1952071]))
                              const-val count[1847959]:int(64)[13] "temp"
                              (1847961 'move' count[1847959](1847963 '.v' _iterator[1847909] F1_count[1952075]))
                              (1847967 call chpl_direct_counted_range_iter_helper[1099055] low[1847952] count[1847959] ret_tmp[1847950])
                              (1847971 'move' call_tmp[1847948] ret_tmp[1847950])
                              (1847974 'move' _iterator[1847946](1847977 call _getIterator[1100512] call_tmp[1847948]))
                              {
                                val ret[1903940]:_ir_chpl_direct_counted_range_iter_helper[1100503] "dead after last mention" "RVV" "temp"
                                val call_tmp[1903942]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                const-val tmp[1903944]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val tmp[1903946]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                                const-val call_tmp[1903948]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[1904417]:int(64)[13] "temp"
                                (1904422 'move' count[1904417](1904419 '.v' _iterator[1847946] F1_count[1956547]))
                                (1903950 'move' call_tmp[1903948](1903953 call <[946327] count[1904417]))
                                (1903955 'move' tmp[1903946] call_tmp[1903948])
                                (1903958 'move' tmp[1903944] call_tmp[1903948])
                                const-val call_tmp[1903961]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1903963 'move' call_tmp[1903961] call_tmp[1903948])
                                if call_tmp[1903948]
                                {
                                  (1903969 call boundsCheckHalt[210084] "With a negative count, the range must have a last index.")
                                }
                                const-val tmp[1903972]:2*int(64)[1037179] "dead at end of block" "const" "insert auto destroy" "temp"
                                val tmp[1903974]:2*int(64)[1037179] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                                const-val tmp[1903976]:bool[10] "dead after last mention" "maybe param" "temp"
                                const-val call_tmp[1903978]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[1904424]:int(64)[13] "temp"
                                (1904429 'move' count[1904424](1904426 '.v' _iterator[1847946] F1_count[1956547]))
                                (1903980 'move' call_tmp[1903978](1903983 call ==[435686] count[1904424] 0))
                                (1903986 'move' tmp[1903976] call_tmp[1903978])
                                if call_tmp[1903978]
                                {
                                  const-val tmp[1903991]:2*int(64)[1037179] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[1903993]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[1903995]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[1904431]:int(64)[13] "temp"
                                  (1904436 'move' low[1904431](1904433 '.v' _iterator[1847946] F0_low[1956543]))
                                  (1903997 'move' call_tmp[1903995](1904000 call _cast[974684] low[1904431]))
                                  const-val call_tmp[1904002]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val coerce_tmp[1904004]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                  (1904006 'move' coerce_tmp[1904004](1904008 'cast' uint(64)[115] 1))
                                  (1904011 'move' call_tmp[1904002](1904014 call -[957077] call_tmp[1903995]))
                                  const-val call_tmp[1904016]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  (1904018 'move' call_tmp[1904016](1904021 call _cast[951465] call_tmp[1904002]))
                                  const-val ret_tmp[1904023]:2*int(64)[1037179] "temp"
                                  const-val low[1904438]:int(64)[13] "temp"
                                  (1904443 'move' low[1904438](1904440 '.v' _iterator[1847946] F0_low[1956543]))
                                  (1904026 call _build_tuple[1037137] low[1904438] call_tmp[1904016] ret_tmp[1904023])
                                  (1904030 'move' tmp[1903991] ret_tmp[1904023])
                                  (1904033 'move' tmp[1903974] tmp[1903991])
                                }
                                {
                                  const-val tmp[1904037]:2*int(64)[1037179] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[1904039]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[1904041]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[1904445]:int(64)[13] "temp"
                                  (1904450 'move' count[1904445](1904447 '.v' _iterator[1847946] F1_count[1956547]))
                                  (1904043 'move' call_tmp[1904041] count[1904445])
                                  const-val call_tmp[1904046]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[1904452]:int(64)[13] "temp"
                                  (1904457 'move' count[1904452](1904454 '.v' _iterator[1847946] F1_count[1956547]))
                                  (1904048 'move' call_tmp[1904046](1904051 call -[957110] count[1904452]))
                                  const-val call_tmp[1904053]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[1904459]:int(64)[13] "temp"
                                  (1904464 'move' low[1904459](1904461 '.v' _iterator[1847946] F0_low[1956543]))
                                  (1904055 'move' call_tmp[1904053](1904058 call +[439694] low[1904459] call_tmp[1904046]))
                                  const-val ret_tmp[1904061]:2*int(64)[1037179] "temp"
                                  const-val low[1904466]:int(64)[13] "temp"
                                  (1904471 'move' low[1904466](1904468 '.v' _iterator[1847946] F0_low[1956543]))
                                  (1904064 call _build_tuple[1037137] low[1904466] call_tmp[1904053] ret_tmp[1904061])
                                  (1904068 'move' tmp[1904037] ret_tmp[1904061])
                                  (1904071 'move' tmp[1903974] tmp[1904037])
                                }
                                (1904075 '=' tmp[1903972] tmp[1903974])
                                (1904078 'noop')
                                1
                                ref call_tmp[1904080]:_ref(int(64))[934535] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (1904082 'move' call_tmp[1904080](1904084 '.' tmp[1903972] x0[1037175]))
                                const-val start[1904087]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[1904089]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (1904091 'move' coerce_tmp[1904089](1904093 'deref' call_tmp[1904080]))
                                (1904095 '=' start[1904087] coerce_tmp[1904089])
                                (1904098 'noop')
                                ref call_tmp[1904099]:_ref(int(64))[934535] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (1904101 'move' call_tmp[1904099](1904103 '.' tmp[1903972] x1[1037177]))
                                const-val end[1904106]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[1904108]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (1904110 'move' coerce_tmp[1904108](1904112 'deref' call_tmp[1904099]))
                                (1904114 '=' end[1904106] coerce_tmp[1904108])
                                (1904117 'noop')
                                val _indexOfInterest[1904118]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                val _iterator[1904120]:_ic_chpl_direct_param_stride_range_iter[1100243] "dead at end of block" "expr temp" "temp"
                                const-val call_tmp[1904122]:_ir_chpl_direct_param_stride_range_iter[1100249] "dead at end of block" "expr temp" "maybe param" "temp"
                                const-val ret_tmp[1904124]:_ir_chpl_direct_param_stride_range_iter[1100249] "temp"
                                (1904127 call chpl_direct_param_stride_range_iter[1099481] coerce_tmp[1904089] coerce_tmp[1904108] ret_tmp[1904124])
                                (1904131 'move' call_tmp[1904122] ret_tmp[1904124])
                                (1904134 'move' _iterator[1904120](1904137 call _getIterator[1100258] call_tmp[1904122]))
                                {
                                  val ret[1904140]:_ir_chpl_direct_param_stride_range_iter[1100249] "dead after last mention" "RVV" "temp"
                                  val call_tmp[1904142]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (1904145 call chpl_range_check_stride[1099801])
                                  val i[1904146]:int(64)[13] "dead at end of block" "insert auto destroy"
                                  val call_tmp[1904148]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (1904150 'move' i[1904146] 0)
                                  val call_tmp[1904153]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val default_arg_first[1904155]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val low[1904157]:int(64)[13] "temp"
                                  (1904159 'move' low[1904157](1904161 '.v' _iterator[1904120] F0_low[1958041]))
                                  (1904164 'move' default_arg_first[1904155](1904167 call chpl_checkIfRangeIterWillOverflow_default_first[1100155] low[1904157]))
                                  const-val default_arg_last[1904169]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val high[1904171]:int(64)[13] "temp"
                                  (1904173 'move' high[1904171](1904175 '.v' _iterator[1904120] F1_high[1958045]))
                                  (1904178 'move' default_arg_last[1904169](1904181 call chpl_checkIfRangeIterWillOverflow_default_last[1100183] high[1904171]))
                                  const-val _return_tmp_[1904183]:bool[10] "dead after last mention" "temp"
                                  const-val low[1904185]:int(64)[13] "temp"
                                  (1904187 'move' low[1904185](1904189 '.v' _iterator[1904120] F0_low[1958041]))
                                  const-val high[1904192]:int(64)[13] "temp"
                                  (1904194 'move' high[1904192](1904196 '.v' _iterator[1904120] F1_high[1958045]))
                                  (1904199 'move' _return_tmp_[1904183](1904202 call chpl_checkIfRangeIterWillOverflow[1093055] low[1904185] high[1904192] 1 default_arg_first[1904155] default_arg_last[1904169] 1))
                                  CForLoop[1904209]
                                  {
                                    const-val yret[1904238]:int(64)[13] "dead after last mention" "YVV" "temp"
                                    (1904240 'move' yret[1904238] i[1904146])
                                    const-val _yieldedIndex[1904243]:int(64)[13] "temp"
                                    (1904245 'move' _yieldedIndex[1904243] i[1904146])
                                    {
                                      const-val i[1904249]:int(64)[13] "const" "index var" "insert auto destroy"
                                      (1904251 'move' i[1904249] _yieldedIndex[1904243])
                                      const-val yret[1904254]:int(64)[13] "dead after last mention" "YVV" "temp"
                                      (1904256 'move' yret[1904254] _yieldedIndex[1904243])
                                      const-val _yieldedIndex[1904284]:int(64)[13] "temp"
                                      (1904415 'move' _yieldedIndex[1904284] _yieldedIndex[1904243])
                                      {
                                        const-val i[1904286]:int(64)[13] "const" "index var" "insert auto destroy"
                                        (1904288 'move' i[1904286] _yieldedIndex[1904284])
                                        const-val yret[1904291]:int(64)[13] "dead after last mention" "YVV" "temp"
                                        (1904293 'move' yret[1904291] _yieldedIndex[1904284])
                                        const-val _yieldedIndex[1904296]:int(64)[13] "temp"
                                        (1904298 'move' _yieldedIndex[1904296] _yieldedIndex[1904284])
                                        {
                                          const-val i[1904302]:int(64)[13] "const" "index var" "insert auto destroy"
                                          (1904304 'move' i[1904302] _yieldedIndex[1904296])
                                          const-val yret[1904307]:uint(8)[100] "dead after last mention" "YVV" "temp"
                                          ref call_tmp[1904309]:_ref(uint(8))[934871] "dead after last mention" "maybe param" "temp"
                                          ref _this_tmp_[1904311]:_ref(c_ptr(uint(8)))[935395] "dead after last mention" "temp"
                                          (1904313 'move' _this_tmp_[1904311](1904316 call buff[758003] localThis[1847902]))
                                          val coerce_tmp[1904318]:c_ptr(uint(8))[935386] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                          (1904320 'move' coerce_tmp[1904318](1904322 'deref' _this_tmp_[1904311]))
                                          (1904324 'move' call_tmp[1904309](1904327 call this[952013] coerce_tmp[1904318] _yieldedIndex[1904296]))
                                          const-val coerce_tmp[1904330]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                          (1904332 'move' coerce_tmp[1904330](1904334 'deref' call_tmp[1904309]))
                                          (1904336 '=' yret[1904307] coerce_tmp[1904330])
                                          (1904339 'noop')
                                          const-val _yieldedIndex[1904340]:uint(8)[100] "temp"
                                          (1904342 'move' _yieldedIndex[1904340] coerce_tmp[1904330])
                                          {
                                            const-val b[1904346]:uint(8)[100] "const" "index var" "insert auto destroy"
                                            (1904348 'move' b[1904346] _yieldedIndex[1904340])
                                            val yret[1904351]:int(32)[95] "dead after last mention" "YVV" "temp"
                                            val call_tmp[1904353]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                            const-val _yieldedIndex[1904355]:int(32)[95] "temp"
                                            (1904357 'move' _yieldedIndex[1904355](1904359 'cast' int(32)[95] _yieldedIndex[1904340]))
                                            {
                                              const-val removeChar[1904363]:int(32)[95] "const" "index var" "insert auto destroy"
                                              (1904365 'move' removeChar[1904363] _yieldedIndex[1904355])
                                              {
                                                const-val call_tmp[1904369]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (1904371 'move' call_tmp[1904369](1904374 call ==[435664] thisChar[1847764] removeChar[1904363]))
                                                const-val call_tmp[1904377]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (1904379 'move' call_tmp[1904377] call_tmp[1904369])
                                                if call_tmp[1904377]
                                                {
                                                  (1904409 call _freeIterator[1100431] _iterator[1904120])
                                                  (1904412 call chpl__autoDestroy[1472606] tmp[1903972])
                                                  (1904385 call _freeIterator[1100681] _iterator[1847946])
                                                  (1904388 call _freeIterator[1100931] _iterator[1847909])
                                                  (1904391 call chpl__autoDestroy[1399678] localThis[1847902])
                                                  (1904394 call _freeIterator[1106517] _iterator[1847856])
                                                  (1904397 call chpl__autoDestroy[1399678] localThis[1847828])
                                                  (1904400 call _freeIterator[1120071] _iterator[1847789])
                                                  continue _continueLabel[1848390] _continueLabel[1848390]
                                                }
                                              }
                                              label _continueLabel[1904405]
                                            }
                                          }
                                        }
                                      }
                                    }
                                    {
                                      const-val low[1904211]:int(64)[13] "temp"
                                      (1904213 'move' low[1904211](1904215 '.v' _iterator[1904120] F0_low[1958041]))
                                      (1904218 '=' i[1904146] low[1904211])
                                    }
                                    {
                                      const-val high[1904222]:int(64)[13] "temp"
                                      (1904224 'move' high[1904222](1904226 '.v' _iterator[1904120] F1_high[1958045]))
                                      (1904229 '<=' i[1904146] high[1904222])
                                    }
                                    {
                                      val call_tmp[1904233]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                      (1904235 '+=' i[1904146] 1)
                                    }
                                  }
                                  label _endchpl_direct_param_stride_range_iter[1904272]
                                }
                                (1904275 call _freeIterator[1100431] _iterator[1904120])
                                (1904278 call chpl__autoDestroy[1472606] tmp[1903972])
                                label _endchpl_direct_counted_range_iter_helper[1904280]
                              }
                              (1848104 call _freeIterator[1100681] _iterator[1847946])
                              label _endchpl_direct_counted_range_iter[1848106]
                            }
                            (1848109 call _freeIterator[1100931] _iterator[1847909])
                            (1848112 call chpl__autoDestroy[1399678] localThis[1847902])
                            label _endchpl_bytes[1848114]
                          }
                          (1848117 call _freeIterator[1106517] _iterator[1847856])
                        }
                        {
                          val i[1848120]:int(64)[13] "dead at end of block" "insert auto destroy"
                          (1848122 'move' i[1848120] 0)
                          val tmp[1848125]:bool[10] "dead after last mention" "temp"
                          ref call_tmp[1848127]:_ref(int(64))[934535] "dead after last mention" "maybe param" "temp"
                          (1848129 'move' call_tmp[1848127](1848132 call buffLen[757925] localThis[1847828]))
                          const-val call_tmp[1848134]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[1848136]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1848138 'move' coerce_tmp[1848136](1848140 'deref' call_tmp[1848127]))
                          (1848142 'move' call_tmp[1848134](1848145 call <[437510] 0 coerce_tmp[1848136]))
                          (1848148 'move' tmp[1848125] call_tmp[1848134])
                          WhileDo[1848151]
                          {
                            ref call_tmp[1848153]:_ref(c_ptr(uint(8)))[935395] "dead at end of block" "maybe param" "temp"
                            (1848155 'move' call_tmp[1848153](1848158 call buff[758003] localThis[1847828]))
                            ref call_tmp[1848160]:_ref(int(64))[934535] "dead at end of block" "maybe param" "temp"
                            (1848162 'move' call_tmp[1848160](1848165 call buffLen[757925] localThis[1847828]))
                            const-val call_tmp[1848167]:(syserr,int(32),int(32))[960390] "dead at end of block" "maybe param" "temp"
                            val coerce_tmp[1848169]:c_ptr(uint(8))[935386] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1848171 'move' coerce_tmp[1848169](1848173 'deref' call_tmp[1848153]))
                            const-val coerce_tmp[1848175]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1848177 'move' coerce_tmp[1848175](1848179 'deref' call_tmp[1848160]))
                            const-val ret_tmp[1848181]:(syserr,int(32),int(32))[960390] "temp"
                            (1848184 call decodeHelp[174418] coerce_tmp[1848169] coerce_tmp[1848175] i[1848120] 1 ret_tmp[1848181])
                            (1848190 'move' call_tmp[1848167] ret_tmp[1848181])
                            const-val tmp[1848193]:(syserr,int(32),int(32))[960390] "dead at end of block" "const" "insert auto destroy" "temp"
                            (1848195 'move' tmp[1848193] call_tmp[1848167])
                            1
                            ref call_tmp[1848199]:_ref(syserr)[946755] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1848201 'move' call_tmp[1848199](1848203 '.' tmp[1848193] x0[960384]))
                            const-val decodeRet[1848206]:syserr[223501] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1848208]:syserr[223501] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1848210 'move' coerce_tmp[1848208](1848212 'deref' call_tmp[1848199]))
                            (1848214 'move' decodeRet[1848206](1848217 call chpl__initCopy[960255] coerce_tmp[1848208]))
                            ref call_tmp[1848219]:_ref(int(32))[934589] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1848221 'move' call_tmp[1848219](1848223 '.' tmp[1848193] x1[960386]))
                            const-val cp[1848226]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1848228]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1848230 'move' coerce_tmp[1848228](1848232 'deref' call_tmp[1848219]))
                            (1848234 'move' cp[1848226](1848237 call chpl__initCopy[960527] coerce_tmp[1848228]))
                            ref call_tmp[1848239]:_ref(int(32))[934589] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1848241 'move' call_tmp[1848239](1848243 '.' tmp[1848193] x2[960388]))
                            const-val nBytes[1848246]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1848248]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1848250 'move' coerce_tmp[1848248](1848252 'deref' call_tmp[1848239]))
                            (1848254 'move' nBytes[1848246](1848257 call chpl__initCopy[960527] coerce_tmp[1848248]))
                            const-val yret[1848259]:int(32)[95] "dead after last mention" "YVV" "temp"
                            val call_tmp[1848261]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                            (1848263 'move' yret[1848259] cp[1848226])
                            const-val _yieldedIndex[1848266]:int(32)[95] "temp"
                            (1848268 'move' _yieldedIndex[1848266] cp[1848226])
                            {
                              const-val removeChar[1848272]:int(32)[95] "const" "index var" "insert auto destroy"
                              (1848274 'move' removeChar[1848272] _yieldedIndex[1848266])
                              {
                                const-val call_tmp[1848278]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1848280 'move' call_tmp[1848278](1848283 call ==[435664] thisChar[1847764] removeChar[1848272]))
                                const-val call_tmp[1848286]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1848288 'move' call_tmp[1848286] call_tmp[1848278])
                                if call_tmp[1848286]
                                {
                                  (1848294 call chpl__autoDestroy[1403553] tmp[1848193])
                                  (1848297 call chpl__autoDestroy[1399678] localThis[1847828])
                                  (1848300 call _freeIterator[1120071] _iterator[1847789])
                                  continue _continueLabel[1848390] _continueLabel[1848390]
                                }
                              }
                              label _continueLabel[1848305]
                            }
                            const-val coerce_tmp[1848307]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1848309 'move' coerce_tmp[1848307](1848311 'cast' int(64)[13] nBytes[1848246]))
                            (1848315 call +=[451373] i[1848120] coerce_tmp[1848307])
                            (1848319 call chpl__autoDestroy[1403553] tmp[1848193])
                            ref call_tmp[1848321]:_ref(int(64))[934535] "dead after last mention" "maybe param" "temp"
                            (1848323 'move' call_tmp[1848321](1848326 call buffLen[757925] localThis[1847828]))
                            const-val call_tmp[1848328]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1848330]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1848332 'move' coerce_tmp[1848330](1848334 'deref' call_tmp[1848321]))
                            (1848336 'move' call_tmp[1848328](1848339 call <[437510] i[1848120] coerce_tmp[1848330]))
                            (1848342 'move' tmp[1848125] call_tmp[1848328])
                            tmp[1848125]
                          }
                        }
                        (1848347 call chpl__autoDestroy[1399678] localThis[1847828])
                        label _endcodepoints[1848349]
                      }
                      label _breakLabel[1848351]
                      (1848354 call _freeIterator[1120071] _iterator[1847789])
                    }
                    const-val call_tmp[1848356]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1848358]:byteIndex[28170] "temp"
                    (1848361 call +[28722] i[1847771] nBytes[1847778] ret_tmp[1848358])
                    (1848365 'move' call_tmp[1848356] ret_tmp[1848358])
                    const-val call_tmp[1848368]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1848370]:byteIndex[28170] "temp"
                    (1848373 call -[28854] call_tmp[1848356] 1 ret_tmp[1848370])
                    (1848377 'move' call_tmp[1848368] ret_tmp[1848370])
                    (1848381 call =[38191] end[36205] call_tmp[1848368])
                    (1848385 call chpl__autoDestroy[1399941] call_tmp[1848368])
                    (1848388 call chpl__autoDestroy[1399941] call_tmp[1848356])
                  }
                  label _continueLabel[1848390]
                }
                (1847253 call chpl__autoDestroy[1399941] call_tmp[1847155])
                {
                  (1847257 call zip3[1093735] _iterator[1847024])
                }
                {
                  (1847261 call zip3[1105257] _iterator[1847031])
                }
                {
                  {
                    (1847054 call init[1093771] _iterator[1847024])
                  }
                  {
                    (1847058 call init[1105293] _iterator[1847031])
                  }
                }
                {
                  (1847062 call hasMore[1093753] _iterator[1847024])
                }
                {
                  {
                    (1847067 call incr[1093780] _iterator[1847024])
                  }
                  {
                    (1847071 call incr[1105302] _iterator[1847031])
                  }
                }
              }
              {
                const-val retTmp[1847264]:int(64)[13] "temp"
                (1847266 'move' retTmp[1847264](1847269 call hasMore[1105275] _iterator[1847031]))
                (1847271 'move' hasMore[1847048](1847273 'cast' bool[10] retTmp[1847264]))
              }
              if hasMore[1847048]
              {
                (1847278 'chpl_error' c"zippered iterations have non-equal lengths")
              }
              {
                (1847283 call zip4[1105266] _iterator[1847031])
              }
              {
                (1847287 call zip4[1093744] _iterator[1847024])
              }
              (1847290 call _freeIterator[1105672] _iterator[1846976])
              (1847293 call chpl__autoDestroy[1479306] _iterator[1846976])
              (1847296 call chpl__autoDestroy[1472309] call_tmp[1846978])
            }
            {
              const-val call_tmp[1847299]:int(64)[13] "dead at end of block" "maybe param" "temp"
              ref start[1849050]:_ref(byteIndex)[946682] "temp"
              (1849055 'move' start[1849050](1849052 '.v' _iterator[36437] F1_start[1938745]))
              (1847301 'move' call_tmp[1847299](1847304 call _cast[39462] start[1849050]))
              val i[1847306]:int(64)[13] "dead at end of block" "insert auto destroy"
              (1847308 'move' i[1847306] call_tmp[1847299])
              const-val call_tmp[1847311]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1847313 'move' call_tmp[1847311](1847316 call >[437730] call_tmp[1847299] 0))
              const-val call_tmp[1847319]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1847321 'move' call_tmp[1847319] call_tmp[1847311])
              if call_tmp[1847311]
              {
                val tmp[1847326]:bool[10] "dead after last mention" "temp"
                const-val tmp[1847328]:bool[10] "dead after last mention" "maybe param" "temp"
                ref call_tmp[1847330]:_ref(int(64))[934535] "dead after last mention" "maybe param" "temp"
                (1847332 'move' call_tmp[1847330](1847335 call buffLen[757925] localThis[1846957]))
                const-val coerce_tmp[1847337]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1847339 'move' coerce_tmp[1847337](1847341 'deref' call_tmp[1847330]))
                (1847343 'move' tmp[1847328](1847346 call <[437510] i[1847306] coerce_tmp[1847337]))
                val tmp[1847349]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[1847351]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1847353]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1847355 'move' call_tmp[1847353] tmp[1847328])
                (1847358 'move' tmp[1847351] tmp[1847328])
                if tmp[1847328]
                {
                  const-val tmp[1847363]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  ref call_tmp[1847365]:_ref(uint(8))[934871] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[1847367]:_ref(c_ptr(uint(8)))[935395] "dead after last mention" "temp"
                  (1847369 'move' _this_tmp_[1847367](1847372 call buff[758003] localThis[1846957]))
                  val coerce_tmp[1847374]:c_ptr(uint(8))[935386] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1847376 'move' coerce_tmp[1847374](1847378 'deref' _this_tmp_[1847367]))
                  (1847380 'move' call_tmp[1847365](1847383 call this[952013] coerce_tmp[1847374] i[1847306]))
                  const-val call_tmp[1847386]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1847388]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1847390 'move' coerce_tmp[1847388](1847392 'deref' call_tmp[1847365]))
                  (1847394 'move' call_tmp[1847386](1847397 call isInitialByte[181540] coerce_tmp[1847388]))
                  const-val call_tmp[1847399]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1847401 'move' call_tmp[1847399](1847404 call ![7494] call_tmp[1847386]))
                  (1847406 'move' tmp[1847363] call_tmp[1847399])
                  (1847409 'move' tmp[1847349] call_tmp[1847399])
                }
                {
                  (1847413 'move' tmp[1847349] 0)
                }
                (1847417 'move' tmp[1847326] tmp[1847349])
                WhileDo[1847420]
                {
                  (1847423 call +=[451373] i[1847306] 1)
                  const-val tmp[1847426]:bool[10] "dead after last mention" "maybe param" "temp"
                  ref call_tmp[1847428]:_ref(int(64))[934535] "dead after last mention" "maybe param" "temp"
                  (1847430 'move' call_tmp[1847428](1847433 call buffLen[757925] localThis[1846957]))
                  const-val coerce_tmp[1847435]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1847437 'move' coerce_tmp[1847435](1847439 'deref' call_tmp[1847428]))
                  (1847441 'move' tmp[1847426](1847444 call <[437510] i[1847306] coerce_tmp[1847435]))
                  val tmp[1847447]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                  const-val tmp[1847449]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[1847451]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1847453 'move' call_tmp[1847451] tmp[1847426])
                  (1847456 'move' tmp[1847449] tmp[1847426])
                  if tmp[1847426]
                  {
                    const-val tmp[1847461]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    ref call_tmp[1847463]:_ref(uint(8))[934871] "dead after last mention" "maybe param" "temp"
                    ref _this_tmp_[1847465]:_ref(c_ptr(uint(8)))[935395] "dead after last mention" "temp"
                    (1847467 'move' _this_tmp_[1847465](1847470 call buff[758003] localThis[1846957]))
                    val coerce_tmp[1847472]:c_ptr(uint(8))[935386] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1847474 'move' coerce_tmp[1847472](1847476 'deref' _this_tmp_[1847465]))
                    (1847478 'move' call_tmp[1847463](1847481 call this[952013] coerce_tmp[1847472] i[1847306]))
                    const-val call_tmp[1847484]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1847486]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1847488 'move' coerce_tmp[1847486](1847490 'deref' call_tmp[1847463]))
                    (1847492 'move' call_tmp[1847484](1847495 call isInitialByte[181540] coerce_tmp[1847486]))
                    const-val call_tmp[1847497]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1847499 'move' call_tmp[1847497](1847502 call ![7494] call_tmp[1847484]))
                    (1847504 'move' tmp[1847461] call_tmp[1847497])
                    (1847507 'move' tmp[1847447] call_tmp[1847497])
                  }
                  {
                    (1847511 'move' tmp[1847447] 0)
                  }
                  (1847515 'move' tmp[1847326] tmp[1847447])
                  tmp[1847326]
                }
              }
              val tmp[1847519]:bool[10] "dead after last mention" "temp"
              ref call_tmp[1847521]:_ref(int(64))[934535] "dead after last mention" "maybe param" "temp"
              (1847523 'move' call_tmp[1847521](1847526 call buffLen[757925] localThis[1846957]))
              const-val call_tmp[1847528]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1847530]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1847532 'move' coerce_tmp[1847530](1847534 'deref' call_tmp[1847521]))
              (1847536 'move' call_tmp[1847528](1847539 call <[437510] i[1847306] coerce_tmp[1847530]))
              (1847542 'move' tmp[1847519] call_tmp[1847528])
              WhileDo[1847545]
              {
                ref call_tmp[1847547]:_ref(c_ptr(uint(8)))[935395] "dead at end of block" "maybe param" "temp"
                (1847549 'move' call_tmp[1847547](1847552 call buff[758003] localThis[1846957]))
                ref call_tmp[1847554]:_ref(int(64))[934535] "dead at end of block" "maybe param" "temp"
                (1847556 'move' call_tmp[1847554](1847559 call buffLen[757925] localThis[1846957]))
                const-val call_tmp[1847561]:(syserr,int(32),int(32))[960390] "dead at end of block" "maybe param" "temp"
                val coerce_tmp[1847563]:c_ptr(uint(8))[935386] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1847565 'move' coerce_tmp[1847563](1847567 'deref' call_tmp[1847547]))
                const-val coerce_tmp[1847569]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1847571 'move' coerce_tmp[1847569](1847573 'deref' call_tmp[1847554]))
                const-val ret_tmp[1847575]:(syserr,int(32),int(32))[960390] "temp"
                (1847578 call decodeHelp[174418] coerce_tmp[1847563] coerce_tmp[1847569] i[1847306] 1 ret_tmp[1847575])
                (1847584 'move' call_tmp[1847561] ret_tmp[1847575])
                const-val tmp[1847587]:(syserr,int(32),int(32))[960390] "dead at end of block" "const" "insert auto destroy" "temp"
                (1847589 'move' tmp[1847587] call_tmp[1847561])
                1
                ref call_tmp[1847593]:_ref(syserr)[946755] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1847595 'move' call_tmp[1847593](1847597 '.' tmp[1847587] x0[960384]))
                const-val decodeRet[1847600]:syserr[223501] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1847602]:syserr[223501] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1847604 'move' coerce_tmp[1847602](1847606 'deref' call_tmp[1847593]))
                (1847608 'move' decodeRet[1847600](1847611 call chpl__initCopy[960255] coerce_tmp[1847602]))
                ref call_tmp[1847613]:_ref(int(32))[934589] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1847615 'move' call_tmp[1847613](1847617 '.' tmp[1847587] x1[960386]))
                const-val cp[1847620]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1847622]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1847624 'move' coerce_tmp[1847622](1847626 'deref' call_tmp[1847613]))
                (1847628 'move' cp[1847620](1847631 call chpl__initCopy[960527] coerce_tmp[1847622]))
                ref call_tmp[1847633]:_ref(int(32))[934589] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1847635 'move' call_tmp[1847633](1847637 '.' tmp[1847587] x2[960388]))
                const-val nBytes[1847640]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1847642]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1847644 'move' coerce_tmp[1847642](1847646 'deref' call_tmp[1847633]))
                (1847648 'move' nBytes[1847640](1847651 call chpl__initCopy[960527] coerce_tmp[1847642]))
                const-val yret[1847653]:(int(32),byteIndex,int(64))[1119077] "dead after last mention" "YVV" "temp"
                val call_tmp[1847655]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val call_tmp[1847657]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (1847659 'move' call_tmp[1847657] cp[1847620])
                const-val call_tmp[1847662]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1847664]:byteIndex[28170] "temp"
                (1847667 call _cast[39483] i[1847306] ret_tmp[1847664])
                (1847670 'move' call_tmp[1847662] ret_tmp[1847664])
                const-val call_tmp[1847673]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (1847675 'move' call_tmp[1847673](1847677 'cast' int(64)[13] nBytes[1847640]))
                const-val call_tmp[1847680]:(int(32),byteIndex,int(64))[1119077] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1847682]:(int(32),byteIndex,int(64))[1119077] "temp"
                (1847685 call _build_tuple[1119027] cp[1847620] call_tmp[1847662] call_tmp[1847673] ret_tmp[1847682])
                (1847690 'move' call_tmp[1847680] ret_tmp[1847682])
                (1847693 'move' yret[1847653] call_tmp[1847680])
                const-val _yieldedIndex[1848395]:(int(32),byteIndex,int(64))[1119077] "temp"
                (1849027 'move' _yieldedIndex[1848395] call_tmp[1847680])
                {
                  1
                  const-val thisChar[1848398]:int(32)[95] "const" "index var" "insert auto destroy"
                  (1848400 'move' thisChar[1848398](1848402 '.v' _yieldedIndex[1848395] x0[1119071]))
                  ref i[1848405]:_ref(byteIndex)[946682] "index var" "insert auto destroy"
                  (1848407 'move' i[1848405](1848409 '.v' _yieldedIndex[1848395] x1[1119073]))
                  const-val nBytes[1848412]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1848414 'move' nBytes[1848412](1848416 '.v' _yieldedIndex[1848395] x2[1119075]))
                  {
                    {
                      val _indexOfInterest[1848421]:int(32)[95] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1848423]:_ic_codepoints__ref_string[1119784] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1848425]:_ir_codepoints__ref_string[1119790] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1848427]:_ir_codepoints__ref_string[1119790] "temp"
                      (1848430 call codepoints[33663] localChars[36187] ret_tmp[1848427])
                      (1848433 'move' call_tmp[1848425] ret_tmp[1848427])
                      (1848436 'move' _iterator[1848423](1848439 call _getIterator[1119799] call_tmp[1848425]))
                      {
                        val ret[1848442]:_ir_codepoints__ref_string[1119790] "dead at end of block" "RVV" "temp"
                        const-val call_tmp[1848444]:string[26] "dead at end of block" "maybe param" "temp"
                        const-val ret_tmp[1848446]:string[26] "temp"
                        ref this[1848448]:_ref(string)[935902] "temp"
                        (1848450 'move' this[1848448](1848452 '.v' _iterator[1848423] F0_this[1942267]))
                        (1848456 call localize[32886] this[1848448] ret_tmp[1848446])
                        (1848459 'move' call_tmp[1848444] ret_tmp[1848446])
                        val localThis[1848462]:string[26] "dead at end of block" "insert auto destroy"
                        (1848464 'move' localThis[1848462] call_tmp[1848444])
                        const-val call_tmp[1848467]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        ref this[1848469]:_ref(string)[935902] "temp"
                        (1848471 'move' this[1848469](1848473 '.v' _iterator[1848423] F0_this[1942267]))
                        (1848476 'move' call_tmp[1848467](1848479 call isASCII[31046] this[1848469]))
                        const-val call_tmp[1848481]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1848483 'move' call_tmp[1848481] call_tmp[1848467])
                        if call_tmp[1848467]
                        {
                          val _indexOfInterest[1848488]:uint(8)[100] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                          val _iterator[1848490]:_ic_chpl_bytes__ref_string[1105204] "dead at end of block" "expr temp" "temp"
                          const-val call_tmp[1848492]:_ir_chpl_bytes__ref_string[1105210] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val ret_tmp[1848494]:_ir_chpl_bytes__ref_string[1105210] "temp"
                          ref this[1848496]:_ref(string)[935902] "temp"
                          (1848498 'move' this[1848496](1848500 '.v' _iterator[1848423] F0_this[1942267]))
                          (1848504 call chpl_bytes[33574] this[1848496] ret_tmp[1848494])
                          (1848507 'move' call_tmp[1848492] ret_tmp[1848494])
                          (1848510 'move' _iterator[1848490](1848513 call _getIterator[1105219] call_tmp[1848492]))
                          {
                            val ret[1848516]:_ir_chpl_bytes__ref_string[1105210] "dead at end of block" "RVV" "temp"
                            const-val call_tmp[1848518]:string[26] "dead at end of block" "maybe param" "temp"
                            const-val ret_tmp[1848520]:string[26] "temp"
                            ref this[1848522]:_ref(string)[935902] "temp"
                            (1848524 'move' this[1848522](1848526 '.v' _iterator[1848490] F0_this[1940093]))
                            (1848530 call localize[32886] this[1848522] ret_tmp[1848520])
                            (1848533 'move' call_tmp[1848518] ret_tmp[1848520])
                            val localThis[1848536]:string[26] "dead at end of block" "insert auto destroy"
                            (1848538 'move' localThis[1848536] call_tmp[1848518])
                            val _indexOfInterest[1848541]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                            val _iterator[1848543]:_ic_chpl_direct_counted_range_iter[1100747] "dead at end of block" "expr temp" "temp"
                            ref call_tmp[1848545]:_ref(int(64))[934535] "dead at end of block" "maybe param" "temp"
                            (1848547 'move' call_tmp[1848545](1848550 call buffLen[757925] localThis[1848536]))
                            const-val call_tmp[1848552]:_ir_chpl_direct_counted_range_iter[1100753] "dead at end of block" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1848554]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1848556 'move' coerce_tmp[1848554](1848558 'deref' call_tmp[1848545]))
                            const-val ret_tmp[1848560]:_ir_chpl_direct_counted_range_iter[1100753] "temp"
                            (1848563 call chpl_direct_counted_range_iter[458054] 0 coerce_tmp[1848554] ret_tmp[1848560])
                            (1848567 'move' call_tmp[1848552] ret_tmp[1848560])
                            (1848570 'move' _iterator[1848543](1848573 call _getIterator[1100762] call_tmp[1848552]))
                            {
                              val ret[1848576]:_ir_chpl_direct_counted_range_iter[1100753] "dead after last mention" "RVV" "temp"
                              val _indexOfInterest[1848578]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                              val _iterator[1848580]:_ic_chpl_direct_counted_range_iter_helper[1100497] "dead at end of block" "expr temp" "temp"
                              const-val call_tmp[1848582]:_ir_chpl_direct_counted_range_iter_helper[1100503] "dead at end of block" "expr temp" "maybe param" "temp"
                              const-val ret_tmp[1848584]:_ir_chpl_direct_counted_range_iter_helper[1100503] "temp"
                              const-val low[1848586]:int(64)[13] "temp"
                              (1848588 'move' low[1848586](1848590 '.v' _iterator[1848543] F0_low[1952071]))
                              const-val count[1848593]:int(64)[13] "temp"
                              (1848595 'move' count[1848593](1848597 '.v' _iterator[1848543] F1_count[1952075]))
                              (1848601 call chpl_direct_counted_range_iter_helper[1099055] low[1848586] count[1848593] ret_tmp[1848584])
                              (1848605 'move' call_tmp[1848582] ret_tmp[1848584])
                              (1848608 'move' _iterator[1848580](1848611 call _getIterator[1100512] call_tmp[1848582]))
                              {
                                val ret[1904474]:_ir_chpl_direct_counted_range_iter_helper[1100503] "dead after last mention" "RVV" "temp"
                                val call_tmp[1904476]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                const-val tmp[1904478]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                const-val tmp[1904480]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                                const-val call_tmp[1904482]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[1904951]:int(64)[13] "temp"
                                (1904956 'move' count[1904951](1904953 '.v' _iterator[1848580] F1_count[1956547]))
                                (1904484 'move' call_tmp[1904482](1904487 call <[946327] count[1904951]))
                                (1904489 'move' tmp[1904480] call_tmp[1904482])
                                (1904492 'move' tmp[1904478] call_tmp[1904482])
                                const-val call_tmp[1904495]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1904497 'move' call_tmp[1904495] call_tmp[1904482])
                                if call_tmp[1904482]
                                {
                                  (1904503 call boundsCheckHalt[210084] "With a negative count, the range must have a last index.")
                                }
                                const-val tmp[1904506]:2*int(64)[1037179] "dead at end of block" "const" "insert auto destroy" "temp"
                                val tmp[1904508]:2*int(64)[1037179] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                                const-val tmp[1904510]:bool[10] "dead after last mention" "maybe param" "temp"
                                const-val call_tmp[1904512]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                const-val count[1904958]:int(64)[13] "temp"
                                (1904963 'move' count[1904958](1904960 '.v' _iterator[1848580] F1_count[1956547]))
                                (1904514 'move' call_tmp[1904512](1904517 call ==[435686] count[1904958] 0))
                                (1904520 'move' tmp[1904510] call_tmp[1904512])
                                if call_tmp[1904512]
                                {
                                  const-val tmp[1904525]:2*int(64)[1037179] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[1904527]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[1904529]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[1904965]:int(64)[13] "temp"
                                  (1904970 'move' low[1904965](1904967 '.v' _iterator[1848580] F0_low[1956543]))
                                  (1904531 'move' call_tmp[1904529](1904534 call _cast[974684] low[1904965]))
                                  const-val call_tmp[1904536]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val coerce_tmp[1904538]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                  (1904540 'move' coerce_tmp[1904538](1904542 'cast' uint(64)[115] 1))
                                  (1904545 'move' call_tmp[1904536](1904548 call -[957077] call_tmp[1904529]))
                                  const-val call_tmp[1904550]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  (1904552 'move' call_tmp[1904550](1904555 call _cast[951465] call_tmp[1904536]))
                                  const-val ret_tmp[1904557]:2*int(64)[1037179] "temp"
                                  const-val low[1904972]:int(64)[13] "temp"
                                  (1904977 'move' low[1904972](1904974 '.v' _iterator[1848580] F0_low[1956543]))
                                  (1904560 call _build_tuple[1037137] low[1904972] call_tmp[1904550] ret_tmp[1904557])
                                  (1904564 'move' tmp[1904525] ret_tmp[1904557])
                                  (1904567 'move' tmp[1904508] tmp[1904525])
                                }
                                {
                                  const-val tmp[1904571]:2*int(64)[1037179] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                                  val call_tmp[1904573]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val call_tmp[1904575]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[1904979]:int(64)[13] "temp"
                                  (1904984 'move' count[1904979](1904981 '.v' _iterator[1848580] F1_count[1956547]))
                                  (1904577 'move' call_tmp[1904575] count[1904979])
                                  const-val call_tmp[1904580]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val count[1904986]:int(64)[13] "temp"
                                  (1904991 'move' count[1904986](1904988 '.v' _iterator[1848580] F1_count[1956547]))
                                  (1904582 'move' call_tmp[1904580](1904585 call -[957110] count[1904986]))
                                  const-val call_tmp[1904587]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                  const-val low[1904993]:int(64)[13] "temp"
                                  (1904998 'move' low[1904993](1904995 '.v' _iterator[1848580] F0_low[1956543]))
                                  (1904589 'move' call_tmp[1904587](1904592 call +[439694] low[1904993] call_tmp[1904580]))
                                  const-val ret_tmp[1904595]:2*int(64)[1037179] "temp"
                                  const-val low[1905000]:int(64)[13] "temp"
                                  (1905005 'move' low[1905000](1905002 '.v' _iterator[1848580] F0_low[1956543]))
                                  (1904598 call _build_tuple[1037137] low[1905000] call_tmp[1904587] ret_tmp[1904595])
                                  (1904602 'move' tmp[1904571] ret_tmp[1904595])
                                  (1904605 'move' tmp[1904508] tmp[1904571])
                                }
                                (1904609 '=' tmp[1904506] tmp[1904508])
                                (1904612 'noop')
                                1
                                ref call_tmp[1904614]:_ref(int(64))[934535] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (1904616 'move' call_tmp[1904614](1904618 '.' tmp[1904506] x0[1037175]))
                                const-val start[1904621]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[1904623]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (1904625 'move' coerce_tmp[1904623](1904627 'deref' call_tmp[1904614]))
                                (1904629 '=' start[1904621] coerce_tmp[1904623])
                                (1904632 'noop')
                                ref call_tmp[1904633]:_ref(int(64))[934535] "dead at end of block" "maybe param" "reference to a const" "temp"
                                (1904635 'move' call_tmp[1904633](1904637 '.' tmp[1904506] x1[1037177]))
                                const-val end[1904640]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                const-val coerce_tmp[1904642]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                (1904644 'move' coerce_tmp[1904642](1904646 'deref' call_tmp[1904633]))
                                (1904648 '=' end[1904640] coerce_tmp[1904642])
                                (1904651 'noop')
                                val _indexOfInterest[1904652]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                val _iterator[1904654]:_ic_chpl_direct_param_stride_range_iter[1100243] "dead at end of block" "expr temp" "temp"
                                const-val call_tmp[1904656]:_ir_chpl_direct_param_stride_range_iter[1100249] "dead at end of block" "expr temp" "maybe param" "temp"
                                const-val ret_tmp[1904658]:_ir_chpl_direct_param_stride_range_iter[1100249] "temp"
                                (1904661 call chpl_direct_param_stride_range_iter[1099481] coerce_tmp[1904623] coerce_tmp[1904642] ret_tmp[1904658])
                                (1904665 'move' call_tmp[1904656] ret_tmp[1904658])
                                (1904668 'move' _iterator[1904654](1904671 call _getIterator[1100258] call_tmp[1904656]))
                                {
                                  val ret[1904674]:_ir_chpl_direct_param_stride_range_iter[1100249] "dead after last mention" "RVV" "temp"
                                  val call_tmp[1904676]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (1904679 call chpl_range_check_stride[1099801])
                                  val i[1904680]:int(64)[13] "dead at end of block" "insert auto destroy"
                                  val call_tmp[1904682]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  (1904684 'move' i[1904680] 0)
                                  val call_tmp[1904687]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                  const-val default_arg_first[1904689]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val low[1904691]:int(64)[13] "temp"
                                  (1904693 'move' low[1904691](1904695 '.v' _iterator[1904654] F0_low[1958041]))
                                  (1904698 'move' default_arg_first[1904689](1904701 call chpl_checkIfRangeIterWillOverflow_default_first[1100155] low[1904691]))
                                  const-val default_arg_last[1904703]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                                  const-val high[1904705]:int(64)[13] "temp"
                                  (1904707 'move' high[1904705](1904709 '.v' _iterator[1904654] F1_high[1958045]))
                                  (1904712 'move' default_arg_last[1904703](1904715 call chpl_checkIfRangeIterWillOverflow_default_last[1100183] high[1904705]))
                                  const-val _return_tmp_[1904717]:bool[10] "dead after last mention" "temp"
                                  const-val low[1904719]:int(64)[13] "temp"
                                  (1904721 'move' low[1904719](1904723 '.v' _iterator[1904654] F0_low[1958041]))
                                  const-val high[1904726]:int(64)[13] "temp"
                                  (1904728 'move' high[1904726](1904730 '.v' _iterator[1904654] F1_high[1958045]))
                                  (1904733 'move' _return_tmp_[1904717](1904736 call chpl_checkIfRangeIterWillOverflow[1093055] low[1904719] high[1904726] 1 default_arg_first[1904689] default_arg_last[1904703] 1))
                                  CForLoop[1904743]
                                  {
                                    const-val yret[1904772]:int(64)[13] "dead after last mention" "YVV" "temp"
                                    (1904774 'move' yret[1904772] i[1904680])
                                    const-val _yieldedIndex[1904777]:int(64)[13] "temp"
                                    (1904779 'move' _yieldedIndex[1904777] i[1904680])
                                    {
                                      const-val i[1904783]:int(64)[13] "const" "index var" "insert auto destroy"
                                      (1904785 'move' i[1904783] _yieldedIndex[1904777])
                                      const-val yret[1904788]:int(64)[13] "dead after last mention" "YVV" "temp"
                                      (1904790 'move' yret[1904788] _yieldedIndex[1904777])
                                      const-val _yieldedIndex[1904818]:int(64)[13] "temp"
                                      (1904949 'move' _yieldedIndex[1904818] _yieldedIndex[1904777])
                                      {
                                        const-val i[1904820]:int(64)[13] "const" "index var" "insert auto destroy"
                                        (1904822 'move' i[1904820] _yieldedIndex[1904818])
                                        const-val yret[1904825]:int(64)[13] "dead after last mention" "YVV" "temp"
                                        (1904827 'move' yret[1904825] _yieldedIndex[1904818])
                                        const-val _yieldedIndex[1904830]:int(64)[13] "temp"
                                        (1904832 'move' _yieldedIndex[1904830] _yieldedIndex[1904818])
                                        {
                                          const-val i[1904836]:int(64)[13] "const" "index var" "insert auto destroy"
                                          (1904838 'move' i[1904836] _yieldedIndex[1904830])
                                          const-val yret[1904841]:uint(8)[100] "dead after last mention" "YVV" "temp"
                                          ref call_tmp[1904843]:_ref(uint(8))[934871] "dead after last mention" "maybe param" "temp"
                                          ref _this_tmp_[1904845]:_ref(c_ptr(uint(8)))[935395] "dead after last mention" "temp"
                                          (1904847 'move' _this_tmp_[1904845](1904850 call buff[758003] localThis[1848536]))
                                          val coerce_tmp[1904852]:c_ptr(uint(8))[935386] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                          (1904854 'move' coerce_tmp[1904852](1904856 'deref' _this_tmp_[1904845]))
                                          (1904858 'move' call_tmp[1904843](1904861 call this[952013] coerce_tmp[1904852] _yieldedIndex[1904830]))
                                          const-val coerce_tmp[1904864]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                                          (1904866 'move' coerce_tmp[1904864](1904868 'deref' call_tmp[1904843]))
                                          (1904870 '=' yret[1904841] coerce_tmp[1904864])
                                          (1904873 'noop')
                                          const-val _yieldedIndex[1904874]:uint(8)[100] "temp"
                                          (1904876 'move' _yieldedIndex[1904874] coerce_tmp[1904864])
                                          {
                                            const-val b[1904880]:uint(8)[100] "const" "index var" "insert auto destroy"
                                            (1904882 'move' b[1904880] _yieldedIndex[1904874])
                                            val yret[1904885]:int(32)[95] "dead after last mention" "YVV" "temp"
                                            val call_tmp[1904887]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                            const-val _yieldedIndex[1904889]:int(32)[95] "temp"
                                            (1904891 'move' _yieldedIndex[1904889](1904893 'cast' int(32)[95] _yieldedIndex[1904874]))
                                            {
                                              const-val removeChar[1904897]:int(32)[95] "const" "index var" "insert auto destroy"
                                              (1904899 'move' removeChar[1904897] _yieldedIndex[1904889])
                                              {
                                                const-val call_tmp[1904903]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (1904905 'move' call_tmp[1904903](1904908 call ==[435664] thisChar[1848398] removeChar[1904897]))
                                                const-val call_tmp[1904911]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                                (1904913 'move' call_tmp[1904911] call_tmp[1904903])
                                                if call_tmp[1904911]
                                                {
                                                  (1904943 call _freeIterator[1100431] _iterator[1904654])
                                                  (1904946 call chpl__autoDestroy[1472606] tmp[1904506])
                                                  (1904919 call _freeIterator[1100681] _iterator[1848580])
                                                  (1904922 call _freeIterator[1100931] _iterator[1848543])
                                                  (1904925 call chpl__autoDestroy[1399678] localThis[1848536])
                                                  (1904928 call _freeIterator[1106517] _iterator[1848490])
                                                  (1904931 call chpl__autoDestroy[1399678] localThis[1848462])
                                                  (1904934 call _freeIterator[1120071] _iterator[1848423])
                                                  continue _continueLabel[1849024] _continueLabel[1849024]
                                                }
                                              }
                                              label _continueLabel[1904939]
                                            }
                                          }
                                        }
                                      }
                                    }
                                    {
                                      const-val low[1904745]:int(64)[13] "temp"
                                      (1904747 'move' low[1904745](1904749 '.v' _iterator[1904654] F0_low[1958041]))
                                      (1904752 '=' i[1904680] low[1904745])
                                    }
                                    {
                                      const-val high[1904756]:int(64)[13] "temp"
                                      (1904758 'move' high[1904756](1904760 '.v' _iterator[1904654] F1_high[1958045]))
                                      (1904763 '<=' i[1904680] high[1904756])
                                    }
                                    {
                                      val call_tmp[1904767]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                      (1904769 '+=' i[1904680] 1)
                                    }
                                  }
                                  label _endchpl_direct_param_stride_range_iter[1904806]
                                }
                                (1904809 call _freeIterator[1100431] _iterator[1904654])
                                (1904812 call chpl__autoDestroy[1472606] tmp[1904506])
                                label _endchpl_direct_counted_range_iter_helper[1904814]
                              }
                              (1848738 call _freeIterator[1100681] _iterator[1848580])
                              label _endchpl_direct_counted_range_iter[1848740]
                            }
                            (1848743 call _freeIterator[1100931] _iterator[1848543])
                            (1848746 call chpl__autoDestroy[1399678] localThis[1848536])
                            label _endchpl_bytes[1848748]
                          }
                          (1848751 call _freeIterator[1106517] _iterator[1848490])
                        }
                        {
                          val i[1848754]:int(64)[13] "dead at end of block" "insert auto destroy"
                          (1848756 'move' i[1848754] 0)
                          val tmp[1848759]:bool[10] "dead after last mention" "temp"
                          ref call_tmp[1848761]:_ref(int(64))[934535] "dead after last mention" "maybe param" "temp"
                          (1848763 'move' call_tmp[1848761](1848766 call buffLen[757925] localThis[1848462]))
                          const-val call_tmp[1848768]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[1848770]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1848772 'move' coerce_tmp[1848770](1848774 'deref' call_tmp[1848761]))
                          (1848776 'move' call_tmp[1848768](1848779 call <[437510] 0 coerce_tmp[1848770]))
                          (1848782 'move' tmp[1848759] call_tmp[1848768])
                          WhileDo[1848785]
                          {
                            ref call_tmp[1848787]:_ref(c_ptr(uint(8)))[935395] "dead at end of block" "maybe param" "temp"
                            (1848789 'move' call_tmp[1848787](1848792 call buff[758003] localThis[1848462]))
                            ref call_tmp[1848794]:_ref(int(64))[934535] "dead at end of block" "maybe param" "temp"
                            (1848796 'move' call_tmp[1848794](1848799 call buffLen[757925] localThis[1848462]))
                            const-val call_tmp[1848801]:(syserr,int(32),int(32))[960390] "dead at end of block" "maybe param" "temp"
                            val coerce_tmp[1848803]:c_ptr(uint(8))[935386] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1848805 'move' coerce_tmp[1848803](1848807 'deref' call_tmp[1848787]))
                            const-val coerce_tmp[1848809]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1848811 'move' coerce_tmp[1848809](1848813 'deref' call_tmp[1848794]))
                            const-val ret_tmp[1848815]:(syserr,int(32),int(32))[960390] "temp"
                            (1848818 call decodeHelp[174418] coerce_tmp[1848803] coerce_tmp[1848809] i[1848754] 1 ret_tmp[1848815])
                            (1848824 'move' call_tmp[1848801] ret_tmp[1848815])
                            const-val tmp[1848827]:(syserr,int(32),int(32))[960390] "dead at end of block" "const" "insert auto destroy" "temp"
                            (1848829 'move' tmp[1848827] call_tmp[1848801])
                            1
                            ref call_tmp[1848833]:_ref(syserr)[946755] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1848835 'move' call_tmp[1848833](1848837 '.' tmp[1848827] x0[960384]))
                            const-val decodeRet[1848840]:syserr[223501] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1848842]:syserr[223501] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1848844 'move' coerce_tmp[1848842](1848846 'deref' call_tmp[1848833]))
                            (1848848 'move' decodeRet[1848840](1848851 call chpl__initCopy[960255] coerce_tmp[1848842]))
                            ref call_tmp[1848853]:_ref(int(32))[934589] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1848855 'move' call_tmp[1848853](1848857 '.' tmp[1848827] x1[960386]))
                            const-val cp[1848860]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1848862]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1848864 'move' coerce_tmp[1848862](1848866 'deref' call_tmp[1848853]))
                            (1848868 'move' cp[1848860](1848871 call chpl__initCopy[960527] coerce_tmp[1848862]))
                            ref call_tmp[1848873]:_ref(int(32))[934589] "dead at end of block" "maybe param" "reference to a const" "temp"
                            (1848875 'move' call_tmp[1848873](1848877 '.' tmp[1848827] x2[960388]))
                            const-val nBytes[1848880]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1848882]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                            (1848884 'move' coerce_tmp[1848882](1848886 'deref' call_tmp[1848873]))
                            (1848888 'move' nBytes[1848880](1848891 call chpl__initCopy[960527] coerce_tmp[1848882]))
                            const-val yret[1848893]:int(32)[95] "dead after last mention" "YVV" "temp"
                            val call_tmp[1848895]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                            (1848897 'move' yret[1848893] cp[1848860])
                            const-val _yieldedIndex[1848900]:int(32)[95] "temp"
                            (1848902 'move' _yieldedIndex[1848900] cp[1848860])
                            {
                              const-val removeChar[1848906]:int(32)[95] "const" "index var" "insert auto destroy"
                              (1848908 'move' removeChar[1848906] _yieldedIndex[1848900])
                              {
                                const-val call_tmp[1848912]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1848914 'move' call_tmp[1848912](1848917 call ==[435664] thisChar[1848398] removeChar[1848906]))
                                const-val call_tmp[1848920]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1848922 'move' call_tmp[1848920] call_tmp[1848912])
                                if call_tmp[1848920]
                                {
                                  (1848928 call chpl__autoDestroy[1403553] tmp[1848827])
                                  (1848931 call chpl__autoDestroy[1399678] localThis[1848462])
                                  (1848934 call _freeIterator[1120071] _iterator[1848423])
                                  continue _continueLabel[1849024] _continueLabel[1849024]
                                }
                              }
                              label _continueLabel[1848939]
                            }
                            const-val coerce_tmp[1848941]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1848943 'move' coerce_tmp[1848941](1848945 'cast' int(64)[13] nBytes[1848880]))
                            (1848949 call +=[451373] i[1848754] coerce_tmp[1848941])
                            (1848953 call chpl__autoDestroy[1403553] tmp[1848827])
                            ref call_tmp[1848955]:_ref(int(64))[934535] "dead after last mention" "maybe param" "temp"
                            (1848957 'move' call_tmp[1848955](1848960 call buffLen[757925] localThis[1848462]))
                            const-val call_tmp[1848962]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val coerce_tmp[1848964]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1848966 'move' coerce_tmp[1848964](1848968 'deref' call_tmp[1848955]))
                            (1848970 'move' call_tmp[1848962](1848973 call <[437510] i[1848754] coerce_tmp[1848964]))
                            (1848976 'move' tmp[1848759] call_tmp[1848962])
                            tmp[1848759]
                          }
                        }
                        (1848981 call chpl__autoDestroy[1399678] localThis[1848462])
                        label _endcodepoints[1848983]
                      }
                      label _breakLabel[1848985]
                      (1848988 call _freeIterator[1120071] _iterator[1848423])
                    }
                    const-val call_tmp[1848990]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1848992]:byteIndex[28170] "temp"
                    (1848995 call +[28722] i[1848405] nBytes[1848412] ret_tmp[1848992])
                    (1848999 'move' call_tmp[1848990] ret_tmp[1848992])
                    const-val call_tmp[1849002]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1849004]:byteIndex[28170] "temp"
                    (1849007 call -[28854] call_tmp[1848990] 1 ret_tmp[1849004])
                    (1849011 'move' call_tmp[1849002] ret_tmp[1849004])
                    (1849015 call =[38191] end[36205] call_tmp[1849002])
                    (1849019 call chpl__autoDestroy[1399941] call_tmp[1849002])
                    (1849022 call chpl__autoDestroy[1399941] call_tmp[1848990])
                  }
                  label _continueLabel[1849024]
                }
                (1847713 call chpl__autoDestroy[1399941] call_tmp[1847662])
                const-val coerce_tmp[1847715]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1847717 'move' coerce_tmp[1847715](1847719 'cast' int(64)[13] nBytes[1847640]))
                (1847723 call +=[451373] i[1847306] coerce_tmp[1847715])
                (1847727 call chpl__autoDestroy[1403553] tmp[1847587])
                ref call_tmp[1847729]:_ref(int(64))[934535] "dead after last mention" "maybe param" "temp"
                (1847731 'move' call_tmp[1847729](1847734 call buffLen[757925] localThis[1846957]))
                const-val call_tmp[1847736]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1847738]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1847740 'move' coerce_tmp[1847738](1847742 'deref' call_tmp[1847729]))
                (1847744 'move' call_tmp[1847736](1847747 call <[437510] i[1847306] coerce_tmp[1847738]))
                (1847750 'move' tmp[1847519] call_tmp[1847736])
                tmp[1847519]
              }
            }
            (1847755 call chpl__autoDestroy[1399678] localThis[1846957])
            label _end_cpIndexLen[1847757]
          }
          label _breakLabel[36442]
          (1794222 call _freeIterator[1119508] _iterator[36437])
        }
      }
      const-val call_tmp[601672]:range(byteIndex,bounded,false)[1022924] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1786599]:range(byteIndex,bounded,false)[1022924] "temp"
      (36498 call chpl_build_bounded_range[1120189] start[36193] end[36205] ret_tmp[1786599])
      (1786602 'move' call_tmp[601672] ret_tmp[1786599])
      const-val call_tmp[601677]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1786617]:string[26] "temp"
      (36501 call this[1120435] localThis[36176] call_tmp[601672] ret_tmp[1786617])
      (1786620 'move' call_tmp[601677] ret_tmp[1786617])
      (1121329 'move' ret[504428] call_tmp[601677])
      (1794224 call chpl__autoDestroy[1472264] call_tmp[601672])
      (1794227 call chpl__autoDestroy[1399941] end[36205])
      (1794230 call chpl__autoDestroy[1399941] start[36193])
      (1794233 call chpl__autoDestroy[1399678] localChars[36187])
      (1794236 call chpl__autoDestroy[1399678] localThis[36176])
      gotoReturn _end_strip[504426] _end_strip[504426]
    }
    label _end_strip[504426]
    (1782344 '=' _retArg[1782342] ret[504428])
    (1782348 return _void[55])
  }
  function _ref(string)[935902].isSpace[36840](const  ref arg this[36842]:_ref(string)[935902]) : bool[10] "method" "resolved" "fn synchronization free"
  {
    val ret[504507]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[601826]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (601829 'move' call_tmp[601826](36853 call isEmpty[35061] this[36842]))
    const-val call_tmp[601831]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (601834 'move' call_tmp[601831] call_tmp[601826])
    if call_tmp[601831]
    {
      (504513 'move' ret[504507] 0)
      gotoReturn _end_isSpace[504505] _end_isSpace[504505]
    }
    val result[36865]:bool[10] "dead at end of block" "insert auto destroy"
    (540515 'move' result[36865] 1)
    {
      const-val tmp[36944]:chpl_localeID_t[209306] "dead after last mention" "const" "temp"
      ref call_tmp[601838]:_ref(int(32))[934589] "dead after last mention" "maybe param" "temp"
      (601841 'move' call_tmp[601838](36873 call locale_id[758081] this[36842]))
      const-val call_tmp[601843]:chpl_localeID_t[209306] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val coerce_tmp[1122437]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1122441 'move' coerce_tmp[1122437](1122439 'deref' call_tmp[601838]))
      (601846 'move' call_tmp[601843](36878 call chpl_buildLocaleID[209424] coerce_tmp[1122437] c_sublocid_any[89879]))
      const-val call_tmp[601848]:chpl_localeID_t[209306] "dead after last mention" "expr temp" "maybe param" "temp"
      (601851 'move' call_tmp[601848](36879 'chpl_on_locale_num' call_tmp[601843]))
      (36945 'move' tmp[36944] call_tmp[601848])
      {
        {
          val _indexOfInterest[36907]:int(32)[95] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[36908]:_ic_codepoints__ref_string[1119784] "dead at end of block" "expr temp" "temp"
          const-val call_tmp[601855]:_ir_codepoints__ref_string[1119790] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val ret_tmp[1782222]:_ir_codepoints__ref_string[1119790] "temp"
          (36886 call codepoints[33663] this[36842] ret_tmp[1782222])
          (1782225 'move' call_tmp[601855] ret_tmp[1782222])
          (36917 'move' _iterator[36908](36915 call _getIterator[1119799] call_tmp[601855]))
          {
            val ret[1849058]:_ir_codepoints__ref_string[1119790] "dead at end of block" "RVV" "temp"
            const-val call_tmp[1849060]:string[26] "dead at end of block" "maybe param" "temp"
            const-val ret_tmp[1849062]:string[26] "temp"
            ref this[1849632]:_ref(string)[935902] "temp"
            (1849637 'move' this[1849632](1849634 '.v' _iterator[36908] F0_this[1942267]))
            (1849065 call localize[32886] this[1849632] ret_tmp[1849062])
            (1849068 'move' call_tmp[1849060] ret_tmp[1849062])
            val localThis[1849071]:string[26] "dead at end of block" "insert auto destroy"
            (1849073 'move' localThis[1849071] call_tmp[1849060])
            const-val call_tmp[1849076]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            ref this[1849639]:_ref(string)[935902] "temp"
            (1849644 'move' this[1849639](1849641 '.v' _iterator[36908] F0_this[1942267]))
            (1849078 'move' call_tmp[1849076](1849081 call isASCII[31046] this[1849639]))
            const-val call_tmp[1849083]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1849085 'move' call_tmp[1849083] call_tmp[1849076])
            if call_tmp[1849076]
            {
              val _indexOfInterest[1849090]:uint(8)[100] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[1849092]:_ic_chpl_bytes__ref_string[1105204] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[1849094]:_ir_chpl_bytes__ref_string[1105210] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[1849096]:_ir_chpl_bytes__ref_string[1105210] "temp"
              ref this[1849646]:_ref(string)[935902] "temp"
              (1849651 'move' this[1849646](1849648 '.v' _iterator[36908] F0_this[1942267]))
              (1849099 call chpl_bytes[33574] this[1849646] ret_tmp[1849096])
              (1849102 'move' call_tmp[1849094] ret_tmp[1849096])
              (1849105 'move' _iterator[1849092](1849108 call _getIterator[1105219] call_tmp[1849094]))
              {
                val ret[1849111]:_ir_chpl_bytes__ref_string[1105210] "dead at end of block" "RVV" "temp"
                const-val call_tmp[1849113]:string[26] "dead at end of block" "maybe param" "temp"
                const-val ret_tmp[1849115]:string[26] "temp"
                ref this[1849117]:_ref(string)[935902] "temp"
                (1849119 'move' this[1849117](1849121 '.v' _iterator[1849092] F0_this[1940093]))
                (1849125 call localize[32886] this[1849117] ret_tmp[1849115])
                (1849128 'move' call_tmp[1849113] ret_tmp[1849115])
                val localThis[1849131]:string[26] "dead at end of block" "insert auto destroy"
                (1849133 'move' localThis[1849131] call_tmp[1849113])
                val _indexOfInterest[1849136]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1849138]:_ic_chpl_direct_counted_range_iter[1100747] "dead at end of block" "expr temp" "temp"
                ref call_tmp[1849140]:_ref(int(64))[934535] "dead at end of block" "maybe param" "temp"
                (1849142 'move' call_tmp[1849140](1849145 call buffLen[757925] localThis[1849131]))
                const-val call_tmp[1849147]:_ir_chpl_direct_counted_range_iter[1100753] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1849149]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1849151 'move' coerce_tmp[1849149](1849153 'deref' call_tmp[1849140]))
                const-val ret_tmp[1849155]:_ir_chpl_direct_counted_range_iter[1100753] "temp"
                (1849158 call chpl_direct_counted_range_iter[458054] 0 coerce_tmp[1849149] ret_tmp[1849155])
                (1849162 'move' call_tmp[1849147] ret_tmp[1849155])
                (1849165 'move' _iterator[1849138](1849168 call _getIterator[1100762] call_tmp[1849147]))
                {
                  val ret[1849171]:_ir_chpl_direct_counted_range_iter[1100753] "dead after last mention" "RVV" "temp"
                  val _indexOfInterest[1849173]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                  val _iterator[1849175]:_ic_chpl_direct_counted_range_iter_helper[1100497] "dead at end of block" "expr temp" "temp"
                  const-val call_tmp[1849177]:_ir_chpl_direct_counted_range_iter_helper[1100503] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val ret_tmp[1849179]:_ir_chpl_direct_counted_range_iter_helper[1100503] "temp"
                  const-val low[1849181]:int(64)[13] "temp"
                  (1849183 'move' low[1849181](1849185 '.v' _iterator[1849138] F0_low[1952071]))
                  const-val count[1849188]:int(64)[13] "temp"
                  (1849190 'move' count[1849188](1849192 '.v' _iterator[1849138] F1_count[1952075]))
                  (1849196 call chpl_direct_counted_range_iter_helper[1099055] low[1849181] count[1849188] ret_tmp[1849179])
                  (1849200 'move' call_tmp[1849177] ret_tmp[1849179])
                  (1849203 'move' _iterator[1849175](1849206 call _getIterator[1100512] call_tmp[1849177]))
                  {
                    val ret[1905008]:_ir_chpl_direct_counted_range_iter_helper[1100503] "dead after last mention" "RVV" "temp"
                    val call_tmp[1905010]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    const-val tmp[1905012]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val tmp[1905014]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    const-val call_tmp[1905016]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val count[1905492]:int(64)[13] "temp"
                    (1905497 'move' count[1905492](1905494 '.v' _iterator[1849175] F1_count[1956547]))
                    (1905018 'move' call_tmp[1905016](1905021 call <[946327] count[1905492]))
                    (1905023 'move' tmp[1905014] call_tmp[1905016])
                    (1905026 'move' tmp[1905012] call_tmp[1905016])
                    const-val call_tmp[1905029]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1905031 'move' call_tmp[1905029] call_tmp[1905016])
                    if call_tmp[1905016]
                    {
                      (1905037 call boundsCheckHalt[210084] "With a negative count, the range must have a last index.")
                    }
                    const-val tmp[1905040]:2*int(64)[1037179] "dead at end of block" "const" "insert auto destroy" "temp"
                    val tmp[1905042]:2*int(64)[1037179] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                    const-val tmp[1905044]:bool[10] "dead after last mention" "maybe param" "temp"
                    const-val call_tmp[1905046]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val count[1905499]:int(64)[13] "temp"
                    (1905504 'move' count[1905499](1905501 '.v' _iterator[1849175] F1_count[1956547]))
                    (1905048 'move' call_tmp[1905046](1905051 call ==[435686] count[1905499] 0))
                    (1905054 'move' tmp[1905044] call_tmp[1905046])
                    if call_tmp[1905046]
                    {
                      const-val tmp[1905059]:2*int(64)[1037179] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                      val call_tmp[1905061]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                      const-val call_tmp[1905063]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val low[1905506]:int(64)[13] "temp"
                      (1905511 'move' low[1905506](1905508 '.v' _iterator[1849175] F0_low[1956543]))
                      (1905065 'move' call_tmp[1905063](1905068 call _cast[974684] low[1905506]))
                      const-val call_tmp[1905070]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val coerce_tmp[1905072]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                      (1905074 'move' coerce_tmp[1905072](1905076 'cast' uint(64)[115] 1))
                      (1905079 'move' call_tmp[1905070](1905082 call -[957077] call_tmp[1905063]))
                      const-val call_tmp[1905084]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      (1905086 'move' call_tmp[1905084](1905089 call _cast[951465] call_tmp[1905070]))
                      const-val ret_tmp[1905091]:2*int(64)[1037179] "temp"
                      const-val low[1905513]:int(64)[13] "temp"
                      (1905518 'move' low[1905513](1905515 '.v' _iterator[1849175] F0_low[1956543]))
                      (1905094 call _build_tuple[1037137] low[1905513] call_tmp[1905084] ret_tmp[1905091])
                      (1905098 'move' tmp[1905059] ret_tmp[1905091])
                      (1905101 'move' tmp[1905042] tmp[1905059])
                    }
                    {
                      const-val tmp[1905105]:2*int(64)[1037179] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                      val call_tmp[1905107]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      const-val call_tmp[1905109]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val count[1905520]:int(64)[13] "temp"
                      (1905525 'move' count[1905520](1905522 '.v' _iterator[1849175] F1_count[1956547]))
                      (1905111 'move' call_tmp[1905109] count[1905520])
                      const-val call_tmp[1905114]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val count[1905527]:int(64)[13] "temp"
                      (1905532 'move' count[1905527](1905529 '.v' _iterator[1849175] F1_count[1956547]))
                      (1905116 'move' call_tmp[1905114](1905119 call -[957110] count[1905527]))
                      const-val call_tmp[1905121]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val low[1905534]:int(64)[13] "temp"
                      (1905539 'move' low[1905534](1905536 '.v' _iterator[1849175] F0_low[1956543]))
                      (1905123 'move' call_tmp[1905121](1905126 call +[439694] low[1905534] call_tmp[1905114]))
                      const-val ret_tmp[1905129]:2*int(64)[1037179] "temp"
                      const-val low[1905541]:int(64)[13] "temp"
                      (1905546 'move' low[1905541](1905543 '.v' _iterator[1849175] F0_low[1956543]))
                      (1905132 call _build_tuple[1037137] low[1905541] call_tmp[1905121] ret_tmp[1905129])
                      (1905136 'move' tmp[1905105] ret_tmp[1905129])
                      (1905139 'move' tmp[1905042] tmp[1905105])
                    }
                    (1905143 '=' tmp[1905040] tmp[1905042])
                    (1905146 'noop')
                    1
                    ref call_tmp[1905148]:_ref(int(64))[934535] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (1905150 'move' call_tmp[1905148](1905152 '.' tmp[1905040] x0[1037175]))
                    const-val start[1905155]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[1905157]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1905159 'move' coerce_tmp[1905157](1905161 'deref' call_tmp[1905148]))
                    (1905163 '=' start[1905155] coerce_tmp[1905157])
                    (1905166 'noop')
                    ref call_tmp[1905167]:_ref(int(64))[934535] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (1905169 'move' call_tmp[1905167](1905171 '.' tmp[1905040] x1[1037177]))
                    const-val end[1905174]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[1905176]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1905178 'move' coerce_tmp[1905176](1905180 'deref' call_tmp[1905167]))
                    (1905182 '=' end[1905174] coerce_tmp[1905176])
                    (1905185 'noop')
                    val _indexOfInterest[1905186]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[1905188]:_ic_chpl_direct_param_stride_range_iter[1100243] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[1905190]:_ir_chpl_direct_param_stride_range_iter[1100249] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[1905192]:_ir_chpl_direct_param_stride_range_iter[1100249] "temp"
                    (1905195 call chpl_direct_param_stride_range_iter[1099481] coerce_tmp[1905157] coerce_tmp[1905176] ret_tmp[1905192])
                    (1905199 'move' call_tmp[1905190] ret_tmp[1905192])
                    (1905202 'move' _iterator[1905188](1905205 call _getIterator[1100258] call_tmp[1905190]))
                    {
                      val ret[1905208]:_ir_chpl_direct_param_stride_range_iter[1100249] "dead after last mention" "RVV" "temp"
                      val call_tmp[1905210]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (1905213 call chpl_range_check_stride[1099801])
                      val i[1905214]:int(64)[13] "dead at end of block" "insert auto destroy"
                      val call_tmp[1905216]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (1905218 'move' i[1905214] 0)
                      val call_tmp[1905221]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      const-val default_arg_first[1905223]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                      const-val low[1905225]:int(64)[13] "temp"
                      (1905227 'move' low[1905225](1905229 '.v' _iterator[1905188] F0_low[1958041]))
                      (1905232 'move' default_arg_first[1905223](1905235 call chpl_checkIfRangeIterWillOverflow_default_first[1100155] low[1905225]))
                      const-val default_arg_last[1905237]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                      const-val high[1905239]:int(64)[13] "temp"
                      (1905241 'move' high[1905239](1905243 '.v' _iterator[1905188] F1_high[1958045]))
                      (1905246 'move' default_arg_last[1905237](1905249 call chpl_checkIfRangeIterWillOverflow_default_last[1100183] high[1905239]))
                      const-val _return_tmp_[1905251]:bool[10] "dead after last mention" "temp"
                      const-val low[1905253]:int(64)[13] "temp"
                      (1905255 'move' low[1905253](1905257 '.v' _iterator[1905188] F0_low[1958041]))
                      const-val high[1905260]:int(64)[13] "temp"
                      (1905262 'move' high[1905260](1905264 '.v' _iterator[1905188] F1_high[1958045]))
                      (1905267 'move' _return_tmp_[1905251](1905270 call chpl_checkIfRangeIterWillOverflow[1093055] low[1905253] high[1905260] 1 default_arg_first[1905223] default_arg_last[1905237] 1))
                      CForLoop[1905277]
                      {
                        const-val yret[1905306]:int(64)[13] "dead after last mention" "YVV" "temp"
                        (1905308 'move' yret[1905306] i[1905214])
                        const-val _yieldedIndex[1905311]:int(64)[13] "temp"
                        (1905313 'move' _yieldedIndex[1905311] i[1905214])
                        {
                          const-val i[1905317]:int(64)[13] "const" "index var" "insert auto destroy"
                          (1905319 'move' i[1905317] _yieldedIndex[1905311])
                          const-val yret[1905322]:int(64)[13] "dead after last mention" "YVV" "temp"
                          (1905324 'move' yret[1905322] _yieldedIndex[1905311])
                          const-val _yieldedIndex[1905352]:int(64)[13] "temp"
                          (1905490 'move' _yieldedIndex[1905352] _yieldedIndex[1905311])
                          {
                            const-val i[1905354]:int(64)[13] "const" "index var" "insert auto destroy"
                            (1905356 'move' i[1905354] _yieldedIndex[1905352])
                            const-val yret[1905359]:int(64)[13] "dead after last mention" "YVV" "temp"
                            (1905361 'move' yret[1905359] _yieldedIndex[1905352])
                            const-val _yieldedIndex[1905364]:int(64)[13] "temp"
                            (1905366 'move' _yieldedIndex[1905364] _yieldedIndex[1905352])
                            {
                              const-val i[1905370]:int(64)[13] "const" "index var" "insert auto destroy"
                              (1905372 'move' i[1905370] _yieldedIndex[1905364])
                              const-val yret[1905375]:uint(8)[100] "dead after last mention" "YVV" "temp"
                              ref call_tmp[1905377]:_ref(uint(8))[934871] "dead after last mention" "maybe param" "temp"
                              ref _this_tmp_[1905379]:_ref(c_ptr(uint(8)))[935395] "dead after last mention" "temp"
                              (1905381 'move' _this_tmp_[1905379](1905384 call buff[758003] localThis[1849131]))
                              val coerce_tmp[1905386]:c_ptr(uint(8))[935386] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                              (1905388 'move' coerce_tmp[1905386](1905390 'deref' _this_tmp_[1905379]))
                              (1905392 'move' call_tmp[1905377](1905395 call this[952013] coerce_tmp[1905386] _yieldedIndex[1905364]))
                              const-val coerce_tmp[1905398]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                              (1905400 'move' coerce_tmp[1905398](1905402 'deref' call_tmp[1905377]))
                              (1905404 '=' yret[1905375] coerce_tmp[1905398])
                              (1905407 'noop')
                              const-val _yieldedIndex[1905408]:uint(8)[100] "temp"
                              (1905410 'move' _yieldedIndex[1905408] coerce_tmp[1905398])
                              {
                                const-val b[1905414]:uint(8)[100] "const" "index var" "insert auto destroy"
                                (1905416 'move' b[1905414] _yieldedIndex[1905408])
                                val yret[1905419]:int(32)[95] "dead after last mention" "YVV" "temp"
                                val call_tmp[1905421]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                const-val _yieldedIndex[1905423]:int(32)[95] "temp"
                                (1905425 'move' _yieldedIndex[1905423](1905427 'cast' int(32)[95] _yieldedIndex[1905408]))
                                {
                                  const-val cp[1905431]:int(32)[95] "const" "index var" "insert auto destroy"
                                  (1905433 'move' cp[1905431] _yieldedIndex[1905423])
                                  {
                                    const-val call_tmp[1905437]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1905439 'move' call_tmp[1905437](1905442 call codepoint_isWhitespace[39153] cp[1905431]))
                                    const-val call_tmp[1905444]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1905446 'move' call_tmp[1905444](1905449 call ![7494] call_tmp[1905437]))
                                    const-val call_tmp[1905451]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1905453 'move' call_tmp[1905451] call_tmp[1905444])
                                    if call_tmp[1905451]
                                    {
                                      (1905459 call =[435232] result[36865] 0)
                                      (1905484 call _freeIterator[1100431] _iterator[1905188])
                                      (1905487 call chpl__autoDestroy[1472606] tmp[1905040])
                                      (1905463 call _freeIterator[1100681] _iterator[1849175])
                                      (1905466 call _freeIterator[1100931] _iterator[1849138])
                                      (1905469 call chpl__autoDestroy[1399678] localThis[1849131])
                                      (1905472 call _freeIterator[1106517] _iterator[1849092])
                                      (1905475 call chpl__autoDestroy[1399678] localThis[1849071])
                                      break _breakLabel[36913] _breakLabel[36913]
                                    }
                                  }
                                  label _continueLabel[1905480]
                                }
                              }
                            }
                          }
                        }
                        {
                          const-val low[1905279]:int(64)[13] "temp"
                          (1905281 'move' low[1905279](1905283 '.v' _iterator[1905188] F0_low[1958041]))
                          (1905286 '=' i[1905214] low[1905279])
                        }
                        {
                          const-val high[1905290]:int(64)[13] "temp"
                          (1905292 'move' high[1905290](1905294 '.v' _iterator[1905188] F1_high[1958045]))
                          (1905297 '<=' i[1905214] high[1905290])
                        }
                        {
                          val call_tmp[1905301]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (1905303 '+=' i[1905214] 1)
                        }
                      }
                      label _endchpl_direct_param_stride_range_iter[1905340]
                    }
                    (1905343 call _freeIterator[1100431] _iterator[1905188])
                    (1905346 call chpl__autoDestroy[1472606] tmp[1905040])
                    label _endchpl_direct_counted_range_iter_helper[1905348]
                  }
                  (1849308 call _freeIterator[1100681] _iterator[1849175])
                  label _endchpl_direct_counted_range_iter[1849310]
                }
                (1849313 call _freeIterator[1100931] _iterator[1849138])
                (1849316 call chpl__autoDestroy[1399678] localThis[1849131])
                label _endchpl_bytes[1849318]
              }
              (1849321 call _freeIterator[1106517] _iterator[1849092])
            }
            {
              val i[1849324]:int(64)[13] "dead at end of block" "insert auto destroy"
              (1849326 'move' i[1849324] 0)
              val tmp[1849329]:bool[10] "dead after last mention" "temp"
              ref call_tmp[1849331]:_ref(int(64))[934535] "dead after last mention" "maybe param" "temp"
              (1849333 'move' call_tmp[1849331](1849336 call buffLen[757925] localThis[1849071]))
              const-val call_tmp[1849338]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1849340]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1849342 'move' coerce_tmp[1849340](1849344 'deref' call_tmp[1849331]))
              (1849346 'move' call_tmp[1849338](1849349 call <[437510] 0 coerce_tmp[1849340]))
              (1849352 'move' tmp[1849329] call_tmp[1849338])
              WhileDo[1849355]
              {
                ref call_tmp[1849357]:_ref(c_ptr(uint(8)))[935395] "dead at end of block" "maybe param" "temp"
                (1849359 'move' call_tmp[1849357](1849362 call buff[758003] localThis[1849071]))
                ref call_tmp[1849364]:_ref(int(64))[934535] "dead at end of block" "maybe param" "temp"
                (1849366 'move' call_tmp[1849364](1849369 call buffLen[757925] localThis[1849071]))
                const-val call_tmp[1849371]:(syserr,int(32),int(32))[960390] "dead at end of block" "maybe param" "temp"
                val coerce_tmp[1849373]:c_ptr(uint(8))[935386] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1849375 'move' coerce_tmp[1849373](1849377 'deref' call_tmp[1849357]))
                const-val coerce_tmp[1849379]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1849381 'move' coerce_tmp[1849379](1849383 'deref' call_tmp[1849364]))
                const-val ret_tmp[1849385]:(syserr,int(32),int(32))[960390] "temp"
                (1849388 call decodeHelp[174418] coerce_tmp[1849373] coerce_tmp[1849379] i[1849324] 1 ret_tmp[1849385])
                (1849394 'move' call_tmp[1849371] ret_tmp[1849385])
                const-val tmp[1849397]:(syserr,int(32),int(32))[960390] "dead at end of block" "const" "insert auto destroy" "temp"
                (1849399 'move' tmp[1849397] call_tmp[1849371])
                1
                ref call_tmp[1849403]:_ref(syserr)[946755] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1849405 'move' call_tmp[1849403](1849407 '.' tmp[1849397] x0[960384]))
                const-val decodeRet[1849410]:syserr[223501] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1849412]:syserr[223501] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1849414 'move' coerce_tmp[1849412](1849416 'deref' call_tmp[1849403]))
                (1849418 'move' decodeRet[1849410](1849421 call chpl__initCopy[960255] coerce_tmp[1849412]))
                ref call_tmp[1849423]:_ref(int(32))[934589] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1849425 'move' call_tmp[1849423](1849427 '.' tmp[1849397] x1[960386]))
                const-val cp[1849430]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1849432]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1849434 'move' coerce_tmp[1849432](1849436 'deref' call_tmp[1849423]))
                (1849438 'move' cp[1849430](1849441 call chpl__initCopy[960527] coerce_tmp[1849432]))
                ref call_tmp[1849443]:_ref(int(32))[934589] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1849445 'move' call_tmp[1849443](1849447 '.' tmp[1849397] x2[960388]))
                const-val nBytes[1849450]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1849452]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1849454 'move' coerce_tmp[1849452](1849456 'deref' call_tmp[1849443]))
                (1849458 'move' nBytes[1849450](1849461 call chpl__initCopy[960527] coerce_tmp[1849452]))
                const-val yret[1849463]:int(32)[95] "dead after last mention" "YVV" "temp"
                val call_tmp[1849465]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1849467 'move' yret[1849463] cp[1849430])
                const-val _yieldedIndex[1849584]:int(32)[95] "temp"
                (1849630 'move' _yieldedIndex[1849584] cp[1849430])
                {
                  const-val cp[1849586]:int(32)[95] "const" "index var" "insert auto destroy"
                  (1849588 'move' cp[1849586] _yieldedIndex[1849584])
                  {
                    const-val call_tmp[1849592]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1849594 'move' call_tmp[1849592](1849597 call codepoint_isWhitespace[39153] cp[1849586]))
                    const-val call_tmp[1849599]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1849601 'move' call_tmp[1849599](1849604 call ![7494] call_tmp[1849592]))
                    const-val call_tmp[1849606]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1849608 'move' call_tmp[1849606] call_tmp[1849599])
                    if call_tmp[1849606]
                    {
                      (1849614 call =[435232] result[36865] 0)
                      (1849624 call chpl__autoDestroy[1403553] tmp[1849397])
                      (1849627 call chpl__autoDestroy[1399678] localThis[1849071])
                      break _breakLabel[36913] _breakLabel[36913]
                    }
                  }
                  label _continueLabel[1849620]
                }
                const-val coerce_tmp[1849483]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1849485 'move' coerce_tmp[1849483](1849487 'cast' int(64)[13] nBytes[1849450]))
                (1849491 call +=[451373] i[1849324] coerce_tmp[1849483])
                (1849495 call chpl__autoDestroy[1403553] tmp[1849397])
                ref call_tmp[1849497]:_ref(int(64))[934535] "dead after last mention" "maybe param" "temp"
                (1849499 'move' call_tmp[1849497](1849502 call buffLen[757925] localThis[1849071]))
                const-val call_tmp[1849504]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1849506]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1849508 'move' coerce_tmp[1849506](1849510 'deref' call_tmp[1849497]))
                (1849512 'move' call_tmp[1849504](1849515 call <[437510] i[1849324] coerce_tmp[1849506]))
                (1849518 'move' tmp[1849329] call_tmp[1849504])
                tmp[1849329]
              }
            }
            (1849523 call chpl__autoDestroy[1399678] localThis[1849071])
            label _endcodepoints[1849525]
          }
          label _breakLabel[36913]
          (1794242 call _freeIterator[1120071] _iterator[36908])
        }
      }
    }
    (1122466 'move' ret[504507] result[36865])
    gotoReturn _end_isSpace[504505] _end_isSpace[504505]
    label _end_isSpace[504505]
    (504509 return ret[504507])
  }
  function =[38165](ref arg lhs[38162]:_ref(byteIndex)[946682], const in arg rhs[38168]:int(64)[13]) : void[4] "assignop" "resolved" "no return value for void"
  {
    ref call_tmp[602422]:_ref(int(64))[934535] "dead after last mention" "maybe param" "temp"
    (602425 'move' call_tmp[602422](38172 call _bindex[757781] lhs[38162]))
    const-val call_tmp[602427]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (602430 'move' call_tmp[602427] rhs[38168])
    (38179 call =[435385] call_tmp[602422] call_tmp[602427])
    (504667 return _void[55])
  }
  function =[38191](ref arg lhs[38188]:_ref(byteIndex)[946682], const  ref arg rhs[38194]:_ref(byteIndex)[946682]) : void[4] "assignop" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (2032862 '=' lhs[38188] rhs[38194])
    (2032863 return _void[55])
  }
  function =[38269](ref arg lhs[38266]:_ref(string)[935902], const  ref arg rhs[38272]:string[26]) : void[4] "assignop" "resolved" "fn synchronization free" "no return value for void"
  {
    (38279 call doAssign[1016923] lhs[38266] rhs[38272])
    (504675 return _void[55])
  }
  function +[38342](const  ref arg s0[38339]:string[26], const  ref arg s1[38345]:string[26], ref arg _retArg[1782902]:_ref(string)[935902]) : void[4] "fn returns via _retArg" "resolved" "fn synchronization free"
  {
    const-val ret[504681]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[602492]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1784650]:string[26] "temp"
    (38352 call doConcat[977956] s0[38339] s1[38345] ret_tmp[1784650])
    (1784653 'move' call_tmp[602492] ret_tmp[1784650])
    (504686 'move' ret[504681] call_tmp[602492])
    (1782904 '=' _retArg[1782902] ret[504681])
    (1782906 return _void[55])
  }
  function +=[38797](ref arg lhs[38794]:_ref(string)[935902], const  ref arg rhs[38800]:_ref(string)[935902]) : void[4] "assignop" "resolved" "no return value for void"
  {
    val ret[504831]:void[4] "dead after last mention" "RVV" "temp"
    (38808 call doAppend[976050] lhs[38794] rhs[38800])
    (504833 return ret[504831])
  }
  function ==[38820](const  ref arg a[38817]:string[26], const  ref arg b[38823]:string[26]) : bool[10] "no doc" "resolved" "fn synchronization free"
  {
    val ret[504837]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[602707]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (602710 'move' call_tmp[602707](38831 call doEq[1203082] a[38817] b[38823]))
    (1204843 'move' ret[504837] call_tmp[602707])
    (504839 return ret[504837])
  }
  function !=[38844](const  ref arg a[38841]:string[26], const  ref arg b[38847]:string[26]) : bool[10] "inline" "no doc" "resolved"
  {
    val ret[504847]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[602712]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (602715 'move' call_tmp[602712](38855 call doEq[1203082] a[38841] b[38847]))
    const-val call_tmp[602717]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (602720 'move' call_tmp[602717](38856 call ![7494] call_tmp[602712]))
    (1724715 'move' ret[504847] call_tmp[602717])
    (504849 return ret[504847])
  }
  function <[38870](const  ref arg a[38867]:string[26], const  ref arg b[38873]:string[26]) : bool[10] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val ret[504857]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[602722]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (602725 'move' call_tmp[602722](38881 call doLessThan[1724335] a[38867] b[38873]))
    (1724497 'move' ret[504857] call_tmp[602722])
    (504859 return ret[504857])
  }
  function >[38894](const  ref arg a[38891]:string[26], const  ref arg b[38897]:string[26]) : bool[10] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val ret[504867]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[602727]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (602730 'move' call_tmp[602727](38905 call doGreaterThan[1724507] a[38891] b[38897]))
    (1724669 'move' ret[504867] call_tmp[602727])
    (504869 return ret[504867])
  }
  val wint_t[38984]:int(32)[95] "dead at end of block" "extern" "insert auto destroy" "no doc" "type variable"
  function codepoint_isWhitespace[39153](const in arg c[39150]:int(32)[95]) : bool[10] "inline" "private" "resolved" "fn synchronization free"
  {
    val ret[504967]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[602797]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (602800 'move' call_tmp[602797](39172 call iswspace[39162] c[39150]))
    const-val call_tmp[602802]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1122451]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1122457 'move' coerce_tmp[1122451](1122453 'cast' int(32)[95] 0))
    (602805 'move' call_tmp[602802](39174 call !=[436048] call_tmp[602797] coerce_tmp[1122451]))
    (1122461 'move' ret[504967] call_tmp[602802])
    (504969 return ret[504967])
  }
  function _cast[39392](const in arg cs[39395]:c_string[19]) : c_ptr(uint(8))[935386] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1759569]:c_ptr(uint(8))[935386] "temp"
    val ret[505040]:c_ptr(uint(8))[935386] "dead after last mention" "RVV" "temp"
    val call_tmp[602907]:c_ptr(uint(8))[935386] "dead after last mention" "expr temp" "maybe param" "temp"
    (602910 'move' call_tmp[602907](39402 'cast' c_ptr(uint(8))[935386] cs[39395]))
    (505045 'move' ret[505040] call_tmp[602907])
    (505042 return ret[505040])
  }
  function _cast[39462](const  ref arg cpi[39465]:byteIndex[28170]) : int(64)[13] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1759571]:int(64)[13] "temp"
    val ret[505060]:int(64)[13] "dead after last mention" "RVV" "temp"
    ref call_tmp[602934]:_ref(int(64))[934535] "dead after last mention" "maybe param" "reference to a const" "temp"
    (602937 'move' call_tmp[602934](39469 call _bindex[757781] cpi[39465]))
    (505065 'move' ret[505060](505064 'deref' call_tmp[602934]))
    (505062 return ret[505060])
  }
  function _cast[39483](const in arg i[39486]:int(64)[13], ref arg _retArg[1782980]:_ref(byteIndex)[946682]) : void[4] "fn returns via _retArg" "inline" "no doc" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1759573]:byteIndex[28170] "temp"
    const-val ret[505069]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[39490]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (1026863 call init[28097] cpi[39490])
    ref call_tmp[602941]:_ref(int(64))[934535] "dead after last mention" "maybe param" "temp"
    (602944 'move' call_tmp[602941](39496 call _bindex[757781] cpi[39490]))
    (39500 call =[435385] call_tmp[602941] i[39486])
    (505074 'move' ret[505069] cpi[39490])
    gotoReturn _end__cast[505067] _end__cast[505067]
    label _end__cast[505067]
    (1782982 '=' _retArg[1782980] ret[505069])
    (1782984 return _void[55])
  }
  function _cast[39514](const  ref arg cpi[39517]:codepointIndex[28274]) : int(64)[13] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1759575]:int(64)[13] "temp"
    val ret[505080]:int(64)[13] "dead after last mention" "RVV" "temp"
    ref call_tmp[602948]:_ref(int(64))[934535] "dead after last mention" "maybe param" "reference to a const" "temp"
    (602951 'move' call_tmp[602948](39521 call _cpindex[757853] cpi[39517]))
    (505085 'move' ret[505080](505084 'deref' call_tmp[602948]))
    (505082 return ret[505080])
  }
  function _cast[39535](const in arg i[39538]:int(64)[13], ref arg _retArg[1782992]:_ref(codepointIndex)[946692]) : void[4] "fn returns via _retArg" "inline" "no doc" "resolved"
  {
    val _formal_type_tmp_[1759577]:codepointIndex[28274] "temp"
    const-val ret[505089]:codepointIndex[28274] "dead after last mention" "RVV" "temp"
    val cpi[39542]:codepointIndex[28274] "dead at end of block" "insert auto destroy"
    (1153970 call init[28201] cpi[39542])
    ref call_tmp[602955]:_ref(int(64))[934535] "dead after last mention" "maybe param" "temp"
    (602958 'move' call_tmp[602955](39548 call _cpindex[757853] cpi[39542]))
    (39552 call =[435385] call_tmp[602955] i[39538])
    (505094 'move' ret[505089] cpi[39542])
    gotoReturn _end__cast[505087] _end__cast[505087]
    label _end__cast[505087]
    (1782994 '=' _retArg[1782992] ret[505089])
    (1782996 return _void[55])
  }
  function iswspace[39162](const in arg wc[39159]:int(32)[95]) : int(32)[95] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[504961]:int(32)[95] "RVV" "temp"
    (504963 return ret[504961])
  }
  function chpl_enc_validate_buf[984530](const in arg buf[984532]:c_ptr(uint(8))[935386], const in arg len[984534]:int(64)[13], ref arg numCodepoints[984536]:_ref(int(64))[934535]) : int(32)[95] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "resolved" "no return value for void"
  {
    val ret[984540]:int(32)[95] "RVV" "temp"
    (984552 return ret[984540])
  }
}