AST dump for ChapelRange after pass denormalize.
Module use list: ChapelBase SysBasic HaltWrappers DSIUtil ChapelStandard SysCTypes 

{
  function chpl__init_ChapelRange[415862](const in arg _ln[2431601]:int(64)[13], in arg _fn[2431603]:int(32)[95]) : void[4] "fast on" "insert line file info" "local fn" "module init" "resolved"
  {
    if chpl__init_ChapelRange_p[2405891]
    {
      goto _exit_chpl__init_ChapelRange[2405928] _exit_chpl__init_ChapelRange[2405928]
    }
    ref refIndentLevel[2405914]:int(32)[95] "temp"
    (2405912 call printModuleInit[20426] c"%*s\n" c"ChapelRange" 11 _ln[2431601] _fn[2431603])
    (2405918 'move' refIndentLevel[2405914](2405917 'addr of' moduleInitLevel[20416]))
    (2405921 '+=' refIndentLevel[2405914] 1)
    (2405897 'move' chpl__init_ChapelRange_p[2405891] 1)
    {
      (2404912 call chpl__init_ChapelBase[415805] _ln[2431601] _fn[2431603])
      (2404914 call chpl__init_SysBasic[416015] _ln[2431601] _fn[2431603])
      (2404916 call chpl__init_HaltWrappers[416000] _ln[2431601] _fn[2431603])
      (2404918 call chpl__init_DSIUtil[416021] _ln[2431601] _fn[2431603])
      (2404920 call chpl__init_SysCTypes[415814] _ln[2431601] _fn[2431603])
    }
    (2405924 '-=' refIndentLevel[2405914] 1)
    label _exit_chpl__init_ChapelRange[2405928]
    (512030 return _void[55])
  }
  type BoundedRangeType[64213] def bounded[64205]:BoundedRangeType[64213] def boundedLow[64207]:BoundedRangeType[64213] def boundedHigh[64209]:BoundedRangeType[64213] def boundedNone[64211]:BoundedRangeType[64213]
  type range(byteIndex,bounded,false)[1025703] val _low[1025665]:int(64)[13] val _high[1025670]:int(64)[13]
  type range(byteIndex,boundedLow,false)[1143314] val _low[1143276]:int(64)[13] val _high[1143281]:int(64)[13]
  type range(byteIndex,boundedHigh,false)[1184830] val _low[1184792]:int(64)[13] val _high[1184797]:int(64)[13]
  type range(int(64),bounded,false)[1026725] val _low[1026687]:int(64)[13] val _high[1026692]:int(64)[13]
  type range(int(64),boundedLow,false)[1087476] val _low[1087438]:int(64)[13] val _high[1087443]:int(64)[13]
  type range(int(64),boundedHigh,false)[1187340] val _low[1187302]:int(64)[13] val _high[1187307]:int(64)[13]
  function range(int(64),bounded,false)[1026725].init[1025948](ref arg this[1025954]:range(int(64),bounded,false)[1026725], const in arg _low[1025975]:int(64)[13], const in arg _high[1025984]:int(64)[13], const in arg _stride[1025992]:int(64)[13], const in arg _alignment[1026001]:int(64)[13], const in arg _aligned[1026005]:bool[10], const in arg _ln[2432295]:int(64)[13], in arg _fn[2432297]:int(32)[95]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1026246 '.=' this[1025954] _low[1026687] _low[1025975])
    (1026278 '.=' this[1025954] _high[1026692] _high[1025984])
    (1026561 call assert[210257](2064101 '==' _stride[1025992] 1) _ln[2432295] _fn[2432297])
    (1026564 return _void[55])
  }
  function range(byteIndex,bounded,false)[1025703].init[1028619](ref arg this[1028625]:range(byteIndex,bounded,false)[1025703], const  ref arg _low[1028646]:byteIndex[28170], const  ref arg _high[1028655]:byteIndex[28170], const in arg _stride[1028663]:int(64)[13], const  ref arg _alignment[1028672]:byteIndex[28170], const in arg _aligned[1028676]:bool[10], const in arg _ln[2432301]:int(64)[13], in arg _fn[2432303]:int(32)[95]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1028754 '.=' this[1028625] _low[1025665](2206705 '.v' _low[1028646] _bindex[28091]))
    (1028786 '.=' this[1028625] _high[1025670](2206715 '.v' _high[1028655] _bindex[28091]))
    (1029069 call assert[210257](2064116 '==' _stride[1028663] 1) _ln[2432301] _fn[2432303])
    (1029072 return _void[55])
  }
  function range(int(64),boundedLow,false)[1087476]._local_init[2362910](ref arg this[2362912]:range(int(64),boundedLow,false)[1087476], const in arg _low[2362914]:int(64)[13], const in arg _high[2362916]:int(64)[13], const in arg _stride[2362918]:int(64)[13], const in arg _alignment[2362920]:int(64)[13], const in arg _aligned[2362922]:bool[10], const in arg _ln[2439973]:int(64)[13], in arg _fn[2439975]:int(32)[95]) : void[4] "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (2362925 '.=' this[2362912] _low[1087438] _low[2362914])
    (2362929 '.=' this[2362912] _high[1087443] _high[2362916])
    (2362941 call _local_assert[2367230](2362937 '==' _stride[2362918] 1) _ln[2439973] _fn[2439975])
    (2362943 return _void[55])
  }
  function range(int(64),boundedLow,false)[1087476].init[1086923](ref arg this[1086929]:range(int(64),boundedLow,false)[1087476], const in arg _low[1086950]:int(64)[13], const in arg _high[1086959]:int(64)[13], const in arg _stride[1086967]:int(64)[13], const in arg _alignment[1086976]:int(64)[13], const in arg _aligned[1086980]:bool[10], const in arg _ln[2432307]:int(64)[13], in arg _fn[2432309]:int(32)[95]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1087049 '.=' this[1086929] _low[1087438] _low[1086950])
    (1087081 '.=' this[1086929] _high[1087443] _high[1086959])
    (1087364 call assert[210257](2064231 '==' _stride[1086967] 1) _ln[2432307] _fn[2432309])
    (1087367 return _void[55])
  }
  function range(byteIndex,boundedLow,false)[1143314].init[1142761](ref arg this[1142767]:range(byteIndex,boundedLow,false)[1143314], const  ref arg _low[1142788]:byteIndex[28170], const  ref arg _high[1142797]:byteIndex[28170], const in arg _stride[1142805]:int(64)[13], const  ref arg _alignment[1142814]:byteIndex[28170], const in arg _aligned[1142818]:bool[10], const in arg _ln[2432313]:int(64)[13], in arg _fn[2432315]:int(32)[95]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1142887 '.=' this[1142767] _low[1143276](2206761 '.v' _low[1142788] _bindex[28091]))
    (1142919 '.=' this[1142767] _high[1143281](2206771 '.v' _high[1142797] _bindex[28091]))
    (1143202 call assert[210257](2064361 '==' _stride[1142805] 1) _ln[2432313] _fn[2432315])
    (1143205 return _void[55])
  }
  function range(byteIndex,boundedHigh,false)[1184830].init[1184277](ref arg this[1184283]:range(byteIndex,boundedHigh,false)[1184830], const  ref arg _low[1184304]:byteIndex[28170], const  ref arg _high[1184313]:byteIndex[28170], const in arg _stride[1184321]:int(64)[13], const  ref arg _alignment[1184330]:byteIndex[28170], const in arg _aligned[1184334]:bool[10], const in arg _ln[2432319]:int(64)[13], in arg _fn[2432321]:int(32)[95]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1184403 '.=' this[1184283] _low[1184792](2206833 '.v' _low[1184304] _bindex[28091]))
    (1184435 '.=' this[1184283] _high[1184797](2206843 '.v' _high[1184313] _bindex[28091]))
    (1184718 call assert[210257](2064436 '==' _stride[1184321] 1) _ln[2432319] _fn[2432321])
    (1184721 return _void[55])
  }
  function range(int(64),boundedHigh,false)[1187340].init[1188624](ref arg this[1188630]:range(int(64),boundedHigh,false)[1187340], const in arg _low[1188651]:int(64)[13], const in arg _high[1188660]:int(64)[13], const in arg _stride[1188668]:int(64)[13], const in arg _alignment[1188677]:int(64)[13], const in arg _aligned[1188681]:bool[10], const in arg _ln[2432325]:int(64)[13], in arg _fn[2432327]:int(32)[95]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1188750 '.=' this[1188630] _low[1187302] _low[1188651])
    (1188782 '.=' this[1188630] _high[1187307] _high[1188660])
    (1189065 call assert[210257](2064451 '==' _stride[1188668] 1) _ln[2432325] _fn[2432327])
    (1189068 return _void[55])
  }
  function range(int(64),bounded,false)[1026725]._local_init[2367261](ref arg this[2367263]:range(int(64),bounded,false)[1026725], const in arg _low[2367265]:int(64)[13], const in arg _high[2367267]:int(64)[13], const in arg _stride[2367269]:int(64)[13], const in arg _aligned[2367271]:bool[10]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (2367274 '.=' this[2367263] _low[1026687] _low[2367265])
    (2367278 '.=' this[2367263] _high[1026692] _high[2367267])
    (2367282 return _void[55])
  }
  function range(int(64),bounded,false)[1026725].init[1091175](ref arg this[1091181]:range(int(64),bounded,false)[1026725], const in arg _low[1091202]:int(64)[13], const in arg _high[1091211]:int(64)[13], const in arg _stride[1091213]:int(64)[13], const in arg _aligned[1091217]:bool[10]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1091847 '.=' this[1091181] _low[1026687] _low[1091202])
    (1091879 '.=' this[1091181] _high[1026692] _high[1091211])
    (1092045 return _void[55])
  }
  function range(int(64),bounded,false)[1026725]._local_init[2367433](ref arg this[2367435]:range(int(64),bounded,false)[1026725], const in arg _low[2367437]:int(64)[13], const in arg _high[2367439]:int(64)[13]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (2367442 '.=' this[2367435] _low[1026687] _low[2367437])
    (2367446 '.=' this[2367435] _high[1026692] _high[2367439])
    (2367450 return _void[55])
  }
  function range(int(64),bounded,false)[1026725].init[1094386](ref arg this[1094392]:range(int(64),bounded,false)[1026725], const in arg _low[1094413]:int(64)[13], const in arg _high[1094422]:int(64)[13]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1094986 '.=' this[1094392] _low[1026687] _low[1094413])
    (1095018 '.=' this[1094392] _high[1026692] _high[1094422])
    (1095184 return _void[55])
  }
  function chpl_build_bounded_range[455048](const in arg low[455055]:int(64)[13], const in arg high[455061]:int(64)[13], ref arg _retArg[1788667]:range(int(64),bounded,false)[1026725], const in arg _ln[2443339]:int(64)[13], in arg _fn[2443341]:int(32)[95]) : void[4] "fn returns via _retArg" "resolved" "fn synchronization free"
  {
    const-val call_tmp[616717]:range(int(64),bounded,false)[1026725] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1025936]:range(int(64),bounded,false)[1026725] "dead after last mention" "delay instantiation" "temp"
    (1025939 call init[1025948] initTemp[1025936] low[455055] high[455061] 1 0 0 _ln[2443339] _fn[2443341])
    (616720 'move' call_tmp[616717] initTemp[1025936])
    (1788669 '=' _retArg[1788667] call_tmp[616717])
    (1788671 return _void[55])
  }
  function _local_chpl_build_low_bounded_range[2359755](const in arg low[2359757]:int(64)[13], ref arg _retArg[2359759]:range(int(64),boundedLow,false)[1087476], const in arg _ln[2445819]:int(64)[13], in arg _fn[2445821]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[2359762]:range(int(64),boundedLow,false)[1087476] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[2359764]:range(int(64),boundedLow,false)[1087476] "dead after last mention" "delay instantiation" "temp"
    (2359767 call _local_init[2362910] initTemp[2359764] low[2359757] 0 1 0 0 _ln[2445819] _fn[2445821])
    (2359774 'move' call_tmp[2359762] initTemp[2359764])
    (2359777 '=' _retArg[2359759] call_tmp[2359762])
    (2359780 return _void[55])
  }
  function chpl_build_low_bounded_range[1086869](const in arg low[1086871]:int(64)[13], ref arg _retArg[1790449]:range(int(64),boundedLow,false)[1087476], const in arg _ln[2443419]:int(64)[13], in arg _fn[2443421]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[1086894]:range(int(64),boundedLow,false)[1087476] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1086912]:range(int(64),boundedLow,false)[1087476] "dead after last mention" "delay instantiation" "temp"
    (1086915 call init[1086923] initTemp[1086912] low[1086871] 0 1 0 0 _ln[2443419] _fn[2443421])
    (1086896 'move' call_tmp[1086894] initTemp[1086912])
    (1790451 '=' _retArg[1790449] call_tmp[1086894])
    (1790453 return _void[55])
  }
  function range(int(64),bounded,false)[1026725].alignment[1034162](const in arg this[1034168]:range(int(64),bounded,false)[1026725]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "no parens" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[2206391]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2389814 'move' coerce_tmp[2206391](2206395 '.v' this[1034168] _low[1026687]))
    (1034290 return coerce_tmp[2206391])
  }
  function range(int(64),boundedLow,false)[1087476].alignment[1128031](const in arg this[1128037]:range(int(64),boundedLow,false)[1087476]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "no parens" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[2215411]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2390887 'move' coerce_tmp[2215411](2215415 '.v' this[1128037] _low[1087438]))
    (1128159 return coerce_tmp[2215411])
  }
  function range(byteIndex,boundedLow,false)[1143314].alignment[1148149](const in arg this[1148155]:range(byteIndex,boundedLow,false)[1143314], ref arg _retArg[1791402]:byteIndex[28170]) : void[4] "fast on" "fn returns via _retArg" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "no parens" "resolved"
  {
    const-val coerce_tmp[2216097]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2390965 'move' coerce_tmp[2216097](2216101 '.v' this[1148155] _low[1143276]))
    const-val ret[2216104]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2216106]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2216109 call init[28097] cpi[2216106])
    (2216111 '.=' cpi[2216106] _bindex[28091] coerce_tmp[2216097])
    (2216115 'move' ret[2216104] cpi[2216106])
    (1791404 '=' _retArg[1791402] ret[2216104])
    (1791406 return _void[55])
  }
  function range(int(64),boundedHigh,false)[1187340].alignment[1190505](const in arg this[1190511]:range(int(64),boundedHigh,false)[1187340]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "no parens" "resolved" "fn synchronization free"
  {
    (1190535 return 0)
  }
  function range(byteIndex,boundedHigh,false)[1184830].alignment[1192572](const in arg this[1192578]:range(byteIndex,boundedHigh,false)[1184830], ref arg _retArg[1791724]:byteIndex[28170]) : void[4] "fast on" "fn returns via _retArg" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "no parens" "resolved"
  {
    const-val ret[2219152]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2219154]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2219157 call init[28097] cpi[2219154])
    (2219159 '.=' cpi[2219154] _bindex[28091] 0)
    (2219163 'move' ret[2219152] cpi[2219154])
    (1791726 '=' _retArg[1791724] ret[2219152])
    (1791728 return _void[55])
  }
  function range(int(64),bounded,false)[1026725]._local_size[2359850](const in arg this[2359852]:range(int(64),bounded,false)[1026725], const in arg _ln[2439129]:int(64)[13], in arg _fn[2439131]:int(32)[95]) : int(64)[13] "instantiated generic" "invisible fn" "local fn" "method" "no parens" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_71[2359855]:string[26] "temp"
    (2359857 'move' local__str_literal_71[2359855] "Attempt to divide by zero")
    val ret[2359860]:int(64)[13] "dead after last mention" "RVV" "temp"
    val ret[2359862]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2402365 'move' ret[2359862](2359866 '.v' this[2359852] _high[1026692]))
    val ret[2359869]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2402371 'move' ret[2359869](2359873 '.v' this[2359852] _low[1026687]))
    if(2359880 '>' ret[2359869] ret[2359862])
    {
      (2359885 'move' ret[2359860] 0)
      gotoReturn _end_size[2359928] _end_size[2359928]
    }
    const-val call_tmp[2359891]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2359893 'move' call_tmp[2359891](2359895 '-' ret[2359862] ret[2359869]))
    if(2359902 '==' 1 0)
    {
      (2359908 call _local_halt[2345217] local__str_literal_71[2359855] _ln[2439129] _fn[2439131])
    }
    const-val call_tmp[2359911]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2359913 'move' call_tmp[2359911](2359915 '/' call_tmp[2359891] 1))
    (2359925 'move' ret[2359860](2452691 'cast' int(64)[13](2359922 '+' call_tmp[2359911] 1)))
    label _end_size[2359928]
    (2359930 return ret[2359860])
  }
  function range(int(64),bounded,false)[1026725].size[1035700](const in arg this[1035706]:range(int(64),bounded,false)[1026725], const in arg _ln[2436493]:int(64)[13], in arg _fn[2436495]:int(32)[95]) : int(64)[13] "instantiated generic" "invisible fn" "method" "no parens" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_71[2334928]:string[26] "temp"
    (2334929 'move' "Attempt to divide by zero" "Attempt to divide by zero")
    val ret[1035713]:int(64)[13] "dead after last mention" "RVV" "temp"
    val ret[2207687]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2390042 'move' ret[2207687](2207691 '.v' this[1035706] _high[1026692]))
    val ret[2207719]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2390048 'move' ret[2207719](2207723 '.v' this[1035706] _low[1026687]))
    if(2070628 '>' ret[2207719] ret[2207687])
    {
      (1035818 'move' ret[1035713] 0)
      gotoReturn _end_size[1035922] _end_size[1035922]
    }
    const-val call_tmp[2073588]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2073590 'move' call_tmp[2073588](2073592 '-' ret[2207687] ret[2207719]))
    if(2158612 '==' 1 0)
    {
      (2158618 call halt[154067] "Attempt to divide by zero" _ln[2436493] _fn[2436495])
    }
    const-val call_tmp[2158621]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2158623 'move' call_tmp[2158621](2158625 '/' call_tmp[2073588] 1))
    (1036878 'move' ret[1035713](2452207 'cast' int(64)[13](2066826 '+' call_tmp[2158621] 1)))
    label _end_size[1035922]
    (1035924 return ret[1035713])
  }
  function ==[1041823](const in arg r1[1041825]:range(int(64),bounded,false)[1026725], const in arg r2[1041827]:range(int(64),bounded,false)[1026725], const in arg _ln[2445037]:int(64)[13], in arg _fn[2445039]:int(32)[95]) : bool[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1041852]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1041961]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1041963 'move' call_tmp[1041961](1041966 call size[1035700] r1[1041825] _ln[2445037] _fn[2445039]))
    const-val call_tmp[1041974]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1041976 'move' call_tmp[1041974](1041979 call size[1035700] r2[1041827] _ln[2445037] _fn[2445039]))
    if(2061517 '!=' call_tmp[1041961] call_tmp[1041974])
    {
      (1042005 'move' ret[1041852] 0)
      gotoReturn _end_==[1042322] _end_==[1042322]
    }
    if(2064171 '==' call_tmp[1041961] 0)
    {
      (1042030 'move' ret[1041852] 1)
      gotoReturn _end_==[1042322] _end_==[1042322]
    }
    if(2061527 '!='(2207866 '.v' r1[1041825] _low[1026687])(2207876 '.v' r2[1041827] _low[1026687]))
    {
      (1042071 'move' ret[1041852] 0)
      gotoReturn _end_==[1042322] _end_==[1042322]
    }
    if(2064186 '==' call_tmp[1041961] 1)
    {
      (1042096 'move' ret[1041852] 1)
      gotoReturn _end_==[1042322] _end_==[1042322]
    }
    (1042145 'move' ret[1041852] 1)
    label _end_==[1042322]
    (1042324 return ret[1041852])
  }
  function !=[1730388](const in arg r1[1730390]:range(int(64),bounded,false)[1026725], const in arg r2[1730392]:range(int(64),bounded,false)[1026725], const in arg _ln[2447011]:int(64)[13], in arg _fn[2447013]:int(32)[95]) : bool[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[1730404]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1730406 'move' call_tmp[1730404](1730409 call ==[1041823] r1[1730390] r2[1730392] _ln[2447011] _fn[2447013]))
    const-val call_tmp[2060910]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2060912 'move' call_tmp[2060910](2060914 '!' call_tmp[1730404]))
    (1730423 return call_tmp[2060910])
  }
  function range(int(64),bounded,false)[1026725].safeCast[1296928](const in arg this[1296934]:range(int(64),bounded,false)[1026725], ref arg _retArg[1793844]:range(int(64),bounded,false)[1026725], const in arg _ln[2443389]:int(64)[13], in arg _fn[2443391]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1296938]:range(int(64),bounded,false)[1026725] "dead after last mention" "RVV" "temp"
    val tmp[1296963]:range(int(64),bounded,false)[1026725] "dead at end of block" "insert auto destroy"
    (1297337 call init[1025948] tmp[1296963] 1 0 1 0 0 _ln[2443389] _fn[2443391])
    (2328493 '.=' tmp[1296963] _low[1026687](2328500 '.v' this[1296934] _low[1026687]))
    (2328507 '.=' tmp[1296963] _high[1026692](2328514 '.v' this[1296934] _high[1026692]))
    (1297269 'move' ret[1296938] tmp[1296963])
    (1793846 '=' _retArg[1793844] ret[1296938])
    (1793848 return _void[55])
  }
  function _cast[1027473](const in arg r[1027477]:range(int(64),bounded,false)[1026725], ref arg _retArg[1789455]:range(byteIndex,bounded,false)[1025703], const in arg _ln[2443407]:int(64)[13], in arg _fn[2443409]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved"
  {
    const-val ret[1027479]:range(byteIndex,bounded,false)[1025703] "dead after last mention" "RVV" "temp"
    val tmp[1027489]:range(byteIndex,bounded,false)[1025703] "dead at end of block" "insert auto destroy"
    const-val default_arg__low[1029662]:byteIndex[28170] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret[2206908]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2206910]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2206913 call init[28097] cpi[2206910])
    (2206915 '.=' cpi[2206910] _bindex[28091] 1)
    (2206919 'move' ret[2206908] cpi[2206910])
    (1789464 'move' default_arg__low[1029662] ret[2206908])
    const-val default_arg__high[1029714]:byteIndex[28170] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret[2206935]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2206937]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2206940 call init[28097] cpi[2206937])
    (2206942 '.=' cpi[2206937] _bindex[28091] 0)
    (2206946 'move' ret[2206935] cpi[2206937])
    (1789476 'move' default_arg__high[1029714] ret[2206935])
    const-val default_arg__alignment[1029787]:byteIndex[28170] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret[2206968]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2206970]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2206973 call init[28097] cpi[2206970])
    (2206975 '.=' cpi[2206970] _bindex[28091] 0)
    (2206979 'move' ret[2206968] cpi[2206970])
    (1789488 'move' default_arg__alignment[1029787] ret[2206968])
    (1028610 call init[1028619] tmp[1027489] default_arg__low[1029662] default_arg__high[1029714] 1 default_arg__alignment[1029787] 0 _ln[2443407] _fn[2443409])
    (2325663 '.=' tmp[1027489] _low[1025665](2206375 '.v' r[1027477] _low[1026687]))
    (2325670 '.=' tmp[1027489] _high[1025670](2206605 '.v' r[1027477] _high[1026692]))
    (1027748 'move' ret[1027479] tmp[1027489])
    (1789457 '=' _retArg[1789455] ret[1027479])
    (1789459 return _void[55])
  }
  function _cast[1032394](const in arg r[1032398]:range(byteIndex,bounded,false)[1025703], ref arg _retArg[1789563]:range(int(64),bounded,false)[1026725], const in arg _ln[2443347]:int(64)[13], in arg _fn[2443349]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1032400]:range(int(64),bounded,false)[1026725] "dead after last mention" "RVV" "temp"
    val tmp[1032410]:range(int(64),bounded,false)[1026725] "dead at end of block" "insert auto destroy"
    (1032954 call init[1025948] tmp[1032410] 1 0 1 0 0 _ln[2443347] _fn[2443349])
    const-val call_tmp[1032607]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2207082]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2389982 'move' coerce_tmp[2207082](2207086 '.v' r[1032398] _low[1025665]))
    const-val ret[2207089]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2207091]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2207094 call init[28097] cpi[2207091])
    (2207096 '.=' cpi[2207091] _bindex[28091] coerce_tmp[2207082])
    (2207100 'move' ret[2207089] cpi[2207091])
    (1789572 'move' call_tmp[1032607] ret[2207089])
    (2325748 '.=' tmp[1032410] _low[1026687](2070263 '.v' call_tmp[1032607] _bindex[28091]))
    const-val call_tmp[1032646]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2207190]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2389994 'move' coerce_tmp[2207190](2207194 '.v' r[1032398] _high[1025670]))
    const-val ret[2207197]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2207199]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2207202 call init[28097] cpi[2207199])
    (2207204 '.=' cpi[2207199] _bindex[28091] coerce_tmp[2207190])
    (2207208 'move' ret[2207197] cpi[2207199])
    (1789614 'move' call_tmp[1032646] ret[2207197])
    (2325757 '.=' tmp[1032410] _high[1026692](2070279 '.v' call_tmp[1032646] _bindex[28091]))
    (1032669 'move' ret[1032400] tmp[1032410])
    (1789565 '=' _retArg[1789563] ret[1032400])
    (1789567 return _void[55])
  }
  function _cast[1145724](const in arg r[1145728]:range(byteIndex,boundedLow,false)[1143314], ref arg _retArg[1791302]:range(int(64),boundedLow,false)[1087476], const in arg _ln[2443425]:int(64)[13], in arg _fn[2443427]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1145730]:range(int(64),boundedLow,false)[1087476] "dead after last mention" "RVV" "temp"
    val tmp[1145740]:range(int(64),boundedLow,false)[1087476] "dead at end of block" "insert auto destroy"
    (1146244 call init[1086923] tmp[1145740] 1 0 1 0 0 _ln[2443425] _fn[2443427])
    const-val call_tmp[1145937]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2216064]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2390959 'move' coerce_tmp[2216064](2216068 '.v' r[1145728] _low[1143276]))
    const-val ret[2216071]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2216073]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2216076 call init[28097] cpi[2216073])
    (2216078 '.=' cpi[2216073] _bindex[28091] coerce_tmp[2216064])
    (2216082 'move' ret[2216071] cpi[2216073])
    (1791311 'move' call_tmp[1145937] ret[2216071])
    (2327036 '.=' tmp[1145740] _low[1087438](2070345 '.v' call_tmp[1145937] _bindex[28091]))
    const-val call_tmp[1145976]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2216208]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2390977 'move' coerce_tmp[2216208](2216212 '.v' r[1145728] _high[1143281]))
    const-val ret[2216215]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2216217]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2216220 call init[28097] cpi[2216217])
    (2216222 '.=' cpi[2216217] _bindex[28091] coerce_tmp[2216208])
    (2216226 'move' ret[2216215] cpi[2216217])
    (1791353 'move' call_tmp[1145976] ret[2216215])
    (2327045 '.=' tmp[1145740] _high[1087443](2070361 '.v' call_tmp[1145976] _bindex[28091]))
    (1145999 'move' ret[1145730] tmp[1145740])
    (1791304 '=' _retArg[1791302] ret[1145730])
    (1791306 return _void[55])
  }
  function _cast[1187542](const in arg r[1187546]:range(byteIndex,boundedHigh,false)[1184830], ref arg _retArg[1791624]:range(int(64),boundedHigh,false)[1187340], const in arg _ln[2443443]:int(64)[13], in arg _fn[2443445]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1187548]:range(int(64),boundedHigh,false)[1187340] "dead after last mention" "RVV" "temp"
    val tmp[1187558]:range(int(64),boundedHigh,false)[1187340] "dead at end of block" "insert auto destroy"
    (1188615 call init[1188624] tmp[1187558] 1 0 1 0 0 _ln[2443443] _fn[2443445])
    const-val call_tmp[1187755]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2219187]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2391389 'move' coerce_tmp[2219187](2219191 '.v' r[1187546] _low[1184792]))
    const-val ret[2219194]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2219196]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2219199 call init[28097] cpi[2219196])
    (2219201 '.=' cpi[2219196] _bindex[28091] coerce_tmp[2219187])
    (2219205 'move' ret[2219194] cpi[2219196])
    (1791633 'move' call_tmp[1187755] ret[2219194])
    (2327377 '.=' tmp[1187558] _low[1187302](2070387 '.v' call_tmp[1187755] _bindex[28091]))
    const-val call_tmp[1187794]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2219317]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2391395 'move' coerce_tmp[2219317](2219321 '.v' r[1187546] _high[1184797]))
    const-val ret[2219324]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2219326]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2219329 call init[28097] cpi[2219326])
    (2219331 '.=' cpi[2219326] _bindex[28091] coerce_tmp[2219317])
    (2219335 'move' ret[2219324] cpi[2219326])
    (1791669 'move' call_tmp[1187794] ret[2219324])
    (2327386 '.=' tmp[1187558] _high[1187307](2070403 '.v' call_tmp[1187794] _bindex[28091]))
    (1187817 'move' ret[1187548] tmp[1187558])
    (1791626 '=' _retArg[1791624] ret[1187548])
    (1791628 return _void[55])
  }
  function range(int(64),bounded,false)[1026725].orderToIndex[1103951](const in arg this[1103957]:range(int(64),bounded,false)[1026725], const in arg ord[1103959]:int(64)[13], const in arg _ln[2433741]:int(64)[13], in arg _fn[2433743]:int(32)[95]) : int(64)[13] "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val local__str_literal_923[2335352]:string[26] "temp"
    (2335353 'move' " that is larger than the range's number of indices " " that is larger than the range's number of indices ")
    const-val local__str_literal_921[2335346]:string[26] "temp"
    (2335347 'move' "invoking orderToIndex on an integer " "invoking orderToIndex on an integer ")
    const-val local__str_literal_919[2335340]:string[26] "temp"
    (2335341 'move' "invoking orderToIndex on a negative integer: " "invoking orderToIndex on a negative integer: ")
    const-val local__str_literal_915[2335334]:string[26] "temp"
    (2335335 'move' "invoking orderToIndex on a range that has no first index" "invoking orderToIndex on a range that has no first index")
    val tmp[2214543]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2214540 '>'(2214526 '.v' this[1103957] _low[1026687])(2214533 '.v' this[1103957] _high[1026692]))
    {
      (2214547 'move' tmp[2214543] 0)
    }
    {
      (2214551 'move' tmp[2214543] 1)
    }
    if(2060365 '!' tmp[2214543])
    {
      (1104015 call boundsCheckHalt[210079] "invoking orderToIndex on a range that has no first index" _ln[2433741] _fn[2433743])
    }
    if(2062229 '<' ord[1103959] 0)
    {
      const-val call_tmp[1104065]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1789915]:string[26] "temp"
      (1104070 call _cast[1063064] ord[1103959] ret_tmp[1789915] _ln[2433741] _fn[2433743])
      (1789918 'move' call_tmp[1104065] ret_tmp[1789915])
      const-val call_tmp[1104073]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1786955]:string[26] "temp"
      wide-ref tmp[2372217]:string[26] "temp"
      (2372221 'move' tmp[2372217](2372219 'set reference' call_tmp[1104065]))
      (1104078 call +[38342] "invoking orderToIndex on a negative integer: " tmp[2372217] ret_tmp[1786955] _ln[2433741] _fn[2433743])
      (1786958 'move' call_tmp[1104073] ret_tmp[1786955])
      (1104082 call boundsCheckHalt[210079] call_tmp[1104073] _ln[2433741] _fn[2433743])
      ref i_x[2077458]:string[26] "temp"
      (2077462 'move' i_x[2077458](2077460 'set reference' call_tmp[1104073]))
      wide-ref tmp[2381751]:string[26] "temp"
      (2381754 'move' tmp[2381751] i_x[2077458])
      (2077466 call deinit[30831] tmp[2381751] _ln[2433741] _fn[2433743])
      ref i_x[2077470]:string[26] "temp"
      (2077474 'move' i_x[2077470](2077472 'set reference' call_tmp[1104065]))
      wide-ref tmp[2381757]:string[26] "temp"
      (2381760 'move' tmp[2381757] i_x[2077470])
      (2077478 call deinit[30831] tmp[2381757] _ln[2433741] _fn[2433743])
    }
    const-val call_tmp[1104127]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1104129 'move' call_tmp[1104127](1104132 call size[1035700] this[1103957] _ln[2433741] _fn[2433743]))
    if(2075330 '>=' ord[1103959] call_tmp[1104127])
    {
      const-val call_tmp[1104171]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1789921]:string[26] "temp"
      (1104176 call _cast[1063064] ord[1103959] ret_tmp[1789921] _ln[2433741] _fn[2433743])
      (1789924 'move' call_tmp[1104171] ret_tmp[1789921])
      const-val call_tmp[1104179]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1786961]:string[26] "temp"
      wide-ref tmp[2372224]:string[26] "temp"
      (2372228 'move' tmp[2372224](2372226 'set reference' call_tmp[1104171]))
      (1104184 call +[38342] "invoking orderToIndex on an integer " tmp[2372224] ret_tmp[1786961] _ln[2433741] _fn[2433743])
      (1786964 'move' call_tmp[1104179] ret_tmp[1786961])
      const-val call_tmp[1104187]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1786967]:string[26] "temp"
      wide-ref tmp[2372231]:string[26] "temp"
      (2372235 'move' tmp[2372231](2372233 'set reference' " that is larger than the range's number of indices "))
      (1104192 call +[38342] call_tmp[1104179] tmp[2372231] ret_tmp[1786967] _ln[2433741] _fn[2433743])
      (1786970 'move' call_tmp[1104187] ret_tmp[1786967])
      const-val call_tmp[1104195]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1104197 'move' call_tmp[1104195](1104200 call size[1035700] this[1103957] _ln[2433741] _fn[2433743]))
      const-val call_tmp[1104203]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1789927]:string[26] "temp"
      (1104208 call _cast[1063064] call_tmp[1104195] ret_tmp[1789927] _ln[2433741] _fn[2433743])
      (1789930 'move' call_tmp[1104203] ret_tmp[1789927])
      const-val call_tmp[1104211]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1786973]:string[26] "temp"
      wide-ref tmp[2372238]:string[26] "temp"
      (2372242 'move' tmp[2372238](2372240 'set reference' call_tmp[1104203]))
      (1104216 call +[38342] call_tmp[1104187] tmp[2372238] ret_tmp[1786973] _ln[2433741] _fn[2433743])
      (1786976 'move' call_tmp[1104211] ret_tmp[1786973])
      (1104220 call boundsCheckHalt[210079] call_tmp[1104211] _ln[2433741] _fn[2433743])
      ref i_x[2077482]:string[26] "temp"
      (2077486 'move' i_x[2077482](2077484 'set reference' call_tmp[1104211]))
      wide-ref tmp[2381763]:string[26] "temp"
      (2381766 'move' tmp[2381763] i_x[2077482])
      (2077490 call deinit[30831] tmp[2381763] _ln[2433741] _fn[2433743])
      ref i_x[2077494]:string[26] "temp"
      (2077498 'move' i_x[2077494](2077496 'set reference' call_tmp[1104203]))
      wide-ref tmp[2381769]:string[26] "temp"
      (2381772 'move' tmp[2381769] i_x[2077494])
      (2077502 call deinit[30831] tmp[2381769] _ln[2433741] _fn[2433743])
      ref i_x[2077506]:string[26] "temp"
      (2077510 'move' i_x[2077506](2077508 'set reference' call_tmp[1104187]))
      wide-ref tmp[2381775]:string[26] "temp"
      (2381778 'move' tmp[2381775] i_x[2077506])
      (2077514 call deinit[30831] tmp[2381775] _ln[2433741] _fn[2433743])
      ref i_x[2077518]:string[26] "temp"
      (2077522 'move' i_x[2077518](2077520 'set reference' call_tmp[1104179]))
      wide-ref tmp[2381781]:string[26] "temp"
      (2381784 'move' tmp[2381781] i_x[2077518])
      (2077526 call deinit[30831] tmp[2381781] _ln[2433741] _fn[2433743])
      ref i_x[2077530]:string[26] "temp"
      (2077534 'move' i_x[2077530](2077532 'set reference' call_tmp[1104171]))
      wide-ref tmp[2381787]:string[26] "temp"
      (2381790 'move' tmp[2381787] i_x[2077530])
      (2077538 call deinit[30831] tmp[2381787] _ln[2433741] _fn[2433743])
    }
    const-val call_tmp[1104242]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1104244 'move' call_tmp[1104242](1104247 call chpl__addRangeStrides[1104938](2207854 '.v' this[1103957] _low[1026687]) 1 ord[1103959]))
    (1104274 return call_tmp[1104242])
  }
  function range(int(64),bounded,false)[1026725].this[1037359](const in arg this[1037365]:range(int(64),bounded,false)[1026725], const in arg other[1037367]:range(int(64),bounded,false)[1026725], ref arg _retArg[1789653]:range(int(64),bounded,false)[1026725], const in arg _ln[2443353]:int(64)[13], in arg _fn[2443355]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[1039849]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2371739 'move' coerce_tmp[1039849](2325781 '.v' this[1037365] _low[1026687]))
    (1037958 'noop')
    const-val coerce_tmp[1039862]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2371745 'move' coerce_tmp[1039862](2325791 '.v' this[1037365] _high[1026692]))
    (1038012 'noop')
    const-val coerce_tmp[1039879]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2371751 'move' coerce_tmp[1039879](2325801 '.v' other[1037367] _low[1026687]))
    (1038087 'noop')
    const-val coerce_tmp[1039892]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2371757 'move' coerce_tmp[1039892](2325811 '.v' other[1037367] _high[1026692]))
    (1038141 'noop')
    const-val ret_tmp[1789659]:2*int(64)[1039967] "temp"
    (2320314 'set svec member' ret_tmp[1789659] 0 1)
    (2320318 'set svec member' ret_tmp[1789659] 1 0)
    (1038328 'noop')
    (1038340 'noop')
    val tmp[2140559]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2140565 '>' coerce_tmp[1039849] coerce_tmp[1039879])
    {
      (2140570 'move' tmp[2140559] coerce_tmp[1039849])
    }
    {
      (2140574 'move' tmp[2140559] coerce_tmp[1039879])
    }
    val tmp[2099626]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2099632 '<' coerce_tmp[1039862] coerce_tmp[1039892])
    {
      (2099637 'move' tmp[2099626] coerce_tmp[1039862])
    }
    {
      (2099641 'move' tmp[2099626] coerce_tmp[1039892])
    }
    (2333664 'noop')
    val tmp[1039072]:bool[10] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2060338 '!' 0)
    {
      (1039163 'move' tmp[1039072] 1)
    }
    {
      (1039169 'move' tmp[1039072] 0)
    }
    const-val call_tmp[1039245]:range(int(64),bounded,false)[1026725] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1041739]:range(int(64),bounded,false)[1026725] "dead at end of block" "delay instantiation" "temp"
    (1041742 call init[1025948] initTemp[1041739] tmp[2140559] tmp[2099626] 1 0 tmp[1039072] _ln[2443353] _fn[2443355])
    (1039247 'move' call_tmp[1039245] initTemp[1041739])
    (1789655 '=' _retArg[1789653] call_tmp[1039245])
    (1789657 return _void[55])
  }
  function range(int(64),boundedLow,false)[1087476].this[1138880](const in arg this[1138886]:range(int(64),boundedLow,false)[1087476], const in arg other[1138888]:range(int(64),bounded,false)[1026725], ref arg _retArg[1791150]:range(int(64),bounded,false)[1026725], const in arg _ln[2443367]:int(64)[13], in arg _fn[2443369]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[1141370]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2372347 'move' coerce_tmp[1141370](2326968 '.v' this[1138886] _low[1087438]))
    (1139479 'noop')
    const-val coerce_tmp[1141383]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2372353 'move' coerce_tmp[1141383](2326978 '.v' other[1138888] _high[1026692]))
    (1139533 'noop')
    const-val coerce_tmp[1141400]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2372359 'move' coerce_tmp[1141400](2326988 '.v' other[1138888] _low[1026687]))
    (1139608 'noop')
    const-val coerce_tmp[1141413]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2372365 'move' coerce_tmp[1141413](2326998 '.v' other[1138888] _high[1026692]))
    (1139662 'noop')
    const-val ret_tmp[1789677]:2*int(64)[1039967] "temp"
    (2320328 'set svec member' ret_tmp[1789677] 0 1)
    (2320332 'set svec member' ret_tmp[1789677] 1 0)
    (1139849 'noop')
    (1139861 'noop')
    val tmp[2140581]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2140587 '>' coerce_tmp[1141370] coerce_tmp[1141400])
    {
      (2140592 'move' tmp[2140581] coerce_tmp[1141370])
    }
    {
      (2140596 'move' tmp[2140581] coerce_tmp[1141400])
    }
    val tmp[2099648]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2099654 '<' coerce_tmp[1141383] coerce_tmp[1141413])
    {
      (2099659 'move' tmp[2099648] coerce_tmp[1141383])
    }
    {
      (2099663 'move' tmp[2099648] coerce_tmp[1141413])
    }
    (2333665 'noop')
    val tmp[1140593]:bool[10] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2060392 '!' 0)
    {
      (1140684 'move' tmp[1140593] 1)
    }
    {
      (1140690 'move' tmp[1140593] 0)
    }
    const-val call_tmp[1140766]:range(int(64),bounded,false)[1026725] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1141854]:range(int(64),bounded,false)[1026725] "dead at end of block" "delay instantiation" "temp"
    (1141857 call init[1025948] initTemp[1141854] tmp[2140581] tmp[2099648] 1 0 tmp[1140593] _ln[2443367] _fn[2443369])
    (1140768 'move' call_tmp[1140766] initTemp[1141854])
    (1791152 '=' _retArg[1791150] call_tmp[1140766])
    (1791154 return _void[55])
  }
  function range(int(64),boundedHigh,false)[1187340].this[1200260](const in arg this[1200266]:range(int(64),boundedHigh,false)[1187340], const in arg other[1200268]:range(int(64),bounded,false)[1026725], ref arg _retArg[1791748]:range(int(64),bounded,false)[1026725], const in arg _ln[2443377]:int(64)[13], in arg _fn[2443379]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[1202750]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2372713 'move' coerce_tmp[1202750](2327451 '.v' other[1200268] _low[1026687]))
    (1200859 'noop')
    const-val coerce_tmp[1202763]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2372719 'move' coerce_tmp[1202763](2327461 '.v' this[1200266] _high[1187307]))
    (1200913 'noop')
    const-val coerce_tmp[1202780]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2372725 'move' coerce_tmp[1202780](2327471 '.v' other[1200268] _low[1026687]))
    (1200988 'noop')
    const-val coerce_tmp[1202793]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2372731 'move' coerce_tmp[1202793](2327481 '.v' other[1200268] _high[1026692]))
    (1201042 'noop')
    const-val ret_tmp[1789683]:2*int(64)[1039967] "temp"
    (2320342 'set svec member' ret_tmp[1789683] 0 1)
    (2320346 'set svec member' ret_tmp[1789683] 1 0)
    (1201229 'noop')
    (1201241 'noop')
    val tmp[2140603]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2140609 '>' coerce_tmp[1202750] coerce_tmp[1202780])
    {
      (2140614 'move' tmp[2140603] coerce_tmp[1202750])
    }
    {
      (2140618 'move' tmp[2140603] coerce_tmp[1202780])
    }
    val tmp[2099670]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2099676 '<' coerce_tmp[1202763] coerce_tmp[1202793])
    {
      (2099681 'move' tmp[2099670] coerce_tmp[1202763])
    }
    {
      (2099685 'move' tmp[2099670] coerce_tmp[1202793])
    }
    (2333666 'noop')
    val tmp[1201973]:bool[10] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2060419 '!' 0)
    {
      (1202064 'move' tmp[1201973] 1)
    }
    {
      (1202070 'move' tmp[1201973] 0)
    }
    const-val call_tmp[1202146]:range(int(64),bounded,false)[1026725] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1203461]:range(int(64),bounded,false)[1026725] "dead at end of block" "delay instantiation" "temp"
    (1203464 call init[1025948] initTemp[1203461] tmp[2140603] tmp[2099670] 1 0 tmp[1201973] _ln[2443377] _fn[2443379])
    (1202148 'move' call_tmp[1202146] initTemp[1203461])
    (1791750 '=' _retArg[1791748] call_tmp[1202146])
    (1791752 return _void[55])
  }
  function _local_chpl_count_help[2362947](const in arg r[2362949]:range(int(64),boundedLow,false)[1087476], const in arg count[2362951]:int(64)[13], ref arg _retArg[2362953]:range(int(64),bounded,false)[1026725], const in arg _ln[2445425]:int(64)[13], in arg _fn[2445427]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_978[2362956]:string[26] "temp"
    (2362958 'move' local__str_literal_978[2362956] "With a negative count, the range must have a last index.")
    val ret[2362961]:range(int(64),bounded,false)[1026725] "dead after last mention" "RVV" "temp"
    if(2362967 '==' count[2362951] 0)
    {
      const-val coerce_tmp[2362972]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2402782 'move' coerce_tmp[2362972](2362976 '.v' r[2362949] _low[1087438]))
      const-val call_tmp[2362979]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2362981 'move' call_tmp[2362979](2362984 call _local_absSameType[2367250] 1))
      const-val call_tmp[2363000]:range(int(64),bounded,false)[1026725] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2363002]:range(int(64),bounded,false)[1026725] "dead after last mention" "delay instantiation" "temp"
      (2363005 call _local_init[2367261] initTemp[2363002] coerce_tmp[2362972](2452705 'cast' int(64)[13](2362997 '-'(2362990 '.v' r[2362949] _low[1087438]) call_tmp[2362979])) 1 1)
      (2363011 'move' call_tmp[2363000] initTemp[2363002])
      (2363014 'move' ret[2362961] call_tmp[2363000])
      gotoReturn _end_chpl_count_help[2363160] _end_chpl_count_help[2363160]
    }
    (2363020 'noop')
    val tmp[2363027]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2363025 '!' 0)
    {
      (2363038 'move' tmp[2363027](2363035 '<' count[2362951] 0))
    }
    {
      (2363042 'move' tmp[2363027] 0)
    }
    if tmp[2363027]
    {
      (2363049 call _local_boundsCheckHalt[2347396] local__str_literal_978[2362956] _ln[2445425] _fn[2445427])
    }
    const-val call_tmp[2363052]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2363054 'move' call_tmp[2363052](2363056 '*' count[2362951] 1))
    val tmp[2363059]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2363065 '>' call_tmp[2363052] 0)
    {
      (2402794 'move' tmp[2363059](2363072 '.v' r[2362949] _low[1087438]))
    }
    {
      const-val tmp[2363076]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      (2363092 'move' tmp[2363076](2363095 call _local_chpl__add[2367287](2363089 '.v' r[2362949] _high[1087443])(2452707 'cast' int(64)[13](2363082 '+' call_tmp[2363052] 1))))
      (2363098 'move' tmp[2363059] tmp[2363076])
    }
    val tmp[2363102]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2363108 '<' call_tmp[2363052] 0)
    {
      (2402806 'move' tmp[2363102](2363115 '.v' r[2362949] _high[1087443]))
    }
    {
      const-val tmp[2363119]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      (2363135 'move' tmp[2363119](2363138 call _local_chpl__add[2367287](2363132 '.v' r[2362949] _low[1087438])(2452709 'cast' int(64)[13](2363125 '-' call_tmp[2363052] 1))))
      (2363141 'move' tmp[2363102] tmp[2363119])
    }
    const-val call_tmp[2363145]:range(int(64),bounded,false)[1026725] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[2363147]:range(int(64),bounded,false)[1026725] "dead after last mention" "delay instantiation" "temp"
    (2363150 call _local_init[2367433] initTemp[2363147] tmp[2363059] tmp[2363102])
    (2363154 'move' call_tmp[2363145] initTemp[2363147])
    (2363157 'move' ret[2362961] call_tmp[2363145])
    label _end_chpl_count_help[2363160]
    (2363162 '=' _retArg[2362953] ret[2362961])
    (2363165 return _void[55])
  }
  function chpl_count_help[1088227](const in arg r[1088229]:range(int(64),boundedLow,false)[1087476], const in arg count[1088231]:int(64)[13], ref arg _retArg[1790551]:range(int(64),bounded,false)[1026725], const in arg _ln[2444821]:int(64)[13], in arg _fn[2444823]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_978[2335322]:string[26] "temp"
    (2335323 'move' "With a negative count, the range must have a last index." "With a negative count, the range must have a last index.")
    val ret[1088233]:range(int(64),bounded,false)[1026725] "dead after last mention" "RVV" "temp"
    if(2064246 '==' count[1088231] 0)
    {
      const-val coerce_tmp[1090624]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2372160 'move' coerce_tmp[1090624](2326192 '.v' r[1088229] _low[1087438]))
      const-val call_tmp[1088531]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1088533 'move' call_tmp[1088531](1088536 call absSameType[1090753] 1))
      const-val call_tmp[1088594]:range(int(64),bounded,false)[1026725] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[1091152]:range(int(64),bounded,false)[1026725] "dead after last mention" "delay instantiation" "temp"
      (1091155 call init[1091175] initTemp[1091152] coerce_tmp[1090624](2452215 'cast' int(64)[13](2073602 '-'(2326199 '.v' r[1088229] _low[1087438]) call_tmp[1088531])) 1 1)
      (1088596 'move' call_tmp[1088594] initTemp[1091152])
      (1088616 'move' ret[1088233] call_tmp[1088594])
      gotoReturn _end_chpl_count_help[1090199] _end_chpl_count_help[1090199]
    }
    (2214150 'noop')
    val tmp[1089039]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2060356 '!' 0)
    {
      (1089072 'move' tmp[1089039](2062169 '<' count[1088231] 0))
    }
    {
      (1089078 'move' tmp[1089039] 0)
    }
    if tmp[1089039]
    {
      (1089094 call boundsCheckHalt[210079] "With a negative count, the range must have a last index." _ln[2444821] _fn[2444823])
    }
    const-val call_tmp[2214157]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2214159 'move' call_tmp[2214157](2214161 '*' count[1088231] 1))
    val tmp[1089601]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2070643 '>' call_tmp[2214157] 0)
    {
      (2372184 'move' tmp[1089601](2326206 '.v' r[1088229] _low[1087438]))
    }
    {
      const-val tmp[1089634]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      (1089668 'move' tmp[1089634](1089671 call chpl__add[1093283](2326216 '.v' r[1088229] _high[1087443])(2452211 'cast' int(64)[13](2066856 '+' call_tmp[2214157] 1))))
      (1089675 'move' tmp[1089601] tmp[1089634])
    }
    val tmp[1089688]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2062199 '<' call_tmp[2214157] 0)
    {
      (2372190 'move' tmp[1089688](2326223 '.v' r[1088229] _high[1087443]))
    }
    {
      const-val tmp[1089721]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      (1089755 'move' tmp[1089721](1089758 call chpl__add[1093283](2326233 '.v' r[1088229] _low[1087438])(2452213 'cast' int(64)[13](2090408 '-' call_tmp[2214157] 1))))
      (1089762 'move' tmp[1089688] tmp[1089721])
    }
    const-val call_tmp[1090167]:range(int(64),bounded,false)[1026725] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1094363]:range(int(64),bounded,false)[1026725] "dead after last mention" "delay instantiation" "temp"
    (1094366 call init[1094386] initTemp[1094363] tmp[1089601] tmp[1089688])
    (1090169 'move' call_tmp[1090167] initTemp[1094363])
    (1090189 'move' ret[1088233] call_tmp[1090167])
    label _end_chpl_count_help[1090199]
    (1790553 '=' _retArg[1790551] ret[1088233])
    (1790555 return _void[55])
  }
  function _local_#[2359784](const in arg r[2359786]:range(int(64),boundedLow,false)[1087476], const in arg count[2359788]:int(64)[13], ref arg _retArg[2359790]:range(int(64),bounded,false)[1026725], const in arg _ln[2447049]:int(64)[13], in arg _fn[2447051]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[2359793]:range(int(64),bounded,false)[1026725] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2359795]:range(int(64),bounded,false)[1026725] "temp"
    (2359798 call _local_chpl_count_help[2362947] r[2359786] count[2359788] ret_tmp[2359795] _ln[2447049] _fn[2447051])
    (2359802 'move' call_tmp[2359793] ret_tmp[2359795])
    (2359805 '=' _retArg[2359790] call_tmp[2359793])
    (2359808 return _void[55])
  }
  function #[1087836](const in arg r[1087838]:range(int(64),boundedLow,false)[1087476], const in arg count[1087851]:int(64)[13], ref arg _retArg[1790539]:range(int(64),bounded,false)[1026725], const in arg _ln[2446863]:int(64)[13], in arg _fn[2446865]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[1088082]:range(int(64),bounded,false)[1026725] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1790545]:range(int(64),bounded,false)[1026725] "temp"
    (1088087 call chpl_count_help[1088227] r[1087838] count[1087851] ret_tmp[1790545] _ln[2446863] _fn[2446865])
    (1790548 'move' call_tmp[1088082] ret_tmp[1790545])
    (1790541 '=' _retArg[1790539] call_tmp[1088082])
    (1790543 return _void[55])
  }
  function _local_chpl_checkIfRangeIterWillOverflow[2361876](const in arg low[2361878]:int(32)[95], const in arg high[2361880]:int(32)[95], const in arg stride[2361882]:int(64)[13], const in arg first[2361884]:int(32)[95], const in arg last[2361886]:int(32)[95], const in arg shouldHalt[2361888]:bool[10], const in arg _ln[2422359]:int(64)[13], in arg _fn[2422361]:int(32)[95]) : bool[10] "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_992[2361891]:string[26] "temp"
    (2361893 'move' local__str_literal_992[2361891] "Iteration over a bounded range may be incorrect due to overflow.")
    val ret[2361896]:bool[10] "dead after last mention" "RVV" "temp"
    if(2361902 '>' low[2361878] high[2361880])
    {
      (2361907 'move' ret[2361896] 0)
      gotoReturn _end_chpl_checkIfRangeIterWillOverflow[2362066] _end_chpl_checkIfRangeIterWillOverflow[2362066]
    }
    val willOverFlow[2361913]:bool[10] "dead at end of block" "insert auto destroy"
    (2361915 'move' willOverFlow[2361913] 0)
    val tmp[2361932]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2361929 '>' last[2361886](2361922 'cast' int(32)[95] 0 _ln[2422359] _fn[2422361]))
    {
      (2361943 'move' tmp[2361932](2361940 '>' stride[2361882] 0))
    }
    {
      (2361947 'move' tmp[2361932] 0)
    }
    if tmp[2361932]
    {
      if(2361971 '>' stride[2361882](2361964 'cast' int(64)[13](2452695 'cast' int(32)[95](2361957 '-' 2147483647 last[2361886])) _ln[2422359] _fn[2422361]))
      {
        (2361976 '=' willOverFlow[2361913] 1)
      }
    }
    {
      val tmp[2361995]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if(2361992 '<' last[2361886](2361985 'cast' int(32)[95] 0 _ln[2422359] _fn[2422361]))
      {
        (2362006 'move' tmp[2361995](2362003 '<' stride[2361882] 0))
      }
      {
        (2362010 'move' tmp[2361995] 0)
      }
      if tmp[2361995]
      {
        if(2362034 '<' stride[2361882](2362027 'cast' int(64)[13](2452697 'cast' int(32)[95](2362020 '-' -2147483648 last[2361886])) _ln[2422359] _fn[2422361]))
        {
          (2362039 '=' willOverFlow[2361913] 1)
        }
      }
    }
    val tmp[2362045]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if willOverFlow[2361913]
    {
      (2362049 'move' tmp[2362045] shouldHalt[2361888])
    }
    {
      (2362053 'move' tmp[2362045] 0)
    }
    if tmp[2362045]
    {
      (2362060 call _local_boundsCheckHalt[2347396] local__str_literal_992[2361891] _ln[2422359] _fn[2422361])
    }
    (2362063 'move' ret[2361896] willOverFlow[2361913])
    label _end_chpl_checkIfRangeIterWillOverflow[2362066]
    (2362068 return ret[2361896])
  }
  function chpl_checkIfRangeIterWillOverflow[976261](const in arg low[976265]:int(32)[95], const in arg high[976267]:int(32)[95], const in arg stride[976269]:int(64)[13], const in arg first[976275]:int(32)[95], const in arg last[976281]:int(32)[95], const in arg shouldHalt[976287]:bool[10], const in arg _ln[2415521]:int(64)[13], in arg _fn[2415523]:int(32)[95]) : bool[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_992[2334696]:string[26] "temp"
    (2334697 'move' "Iteration over a bounded range may be incorrect due to overflow." "Iteration over a bounded range may be incorrect due to overflow.")
    val ret[976289]:bool[10] "dead after last mention" "RVV" "temp"
    if(2157898 '>' low[976265] high[976267])
    {
      (976320 'move' ret[976289] 0)
      gotoReturn _end_chpl_checkIfRangeIterWillOverflow[976801] _end_chpl_checkIfRangeIterWillOverflow[976801]
    }
    val willOverFlow[976327]:bool[10] "dead at end of block" "insert auto destroy"
    (976329 'move' willOverFlow[976327] 0)
    val tmp[976370]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2157908 '>' last[976281](976911 'cast' int(32)[95] 0 _ln[2415521] _fn[2415523]))
    {
      (976403 'move' tmp[976370](2070588 '>' stride[976269] 0))
    }
    {
      (976409 'move' tmp[976370] 0)
    }
    if tmp[976370]
    {
      if(2070598 '>' stride[976269](977071 'cast' int(64)[13](2452153 'cast' int(32)[95](2158212 '-' 2147483647 last[976281])) _ln[2415521] _fn[2415523]))
      {
        (2080989 '=' willOverFlow[976327] 1)
      }
    }
    {
      val tmp[976485]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if(2157828 '<' last[976281](977081 'cast' int(32)[95] 0 _ln[2415521] _fn[2415523]))
      {
        (976518 'move' tmp[976485](2062149 '<' stride[976269] 0))
      }
      {
        (976524 'move' tmp[976485] 0)
      }
      if tmp[976485]
      {
        if(2074633 '<' stride[976269](977699 'cast' int(64)[13](2452155 'cast' int(32)[95](2158227 '-' -2147483648 last[976281])) _ln[2415521] _fn[2415523]))
        {
          (2081006 '=' willOverFlow[976327] 1)
        }
      }
    }
    val tmp[976739]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if willOverFlow[976327]
    {
      (976764 'move' tmp[976739] shouldHalt[976287])
    }
    {
      (976770 'move' tmp[976739] 0)
    }
    if tmp[976739]
    {
      (976788 call boundsCheckHalt[210079] "Iteration over a bounded range may be incorrect due to overflow." _ln[2415521] _fn[2415523])
    }
    (976793 'move' ret[976289] willOverFlow[976327])
    label _end_chpl_checkIfRangeIterWillOverflow[976801]
    (976803 return ret[976289])
  }
  function _local_chpl_checkIfRangeIterWillOverflow[2345049](const in arg low[2345051]:int(64)[13], const in arg high[2345053]:int(64)[13], const in arg stride[2345055]:int(64)[13], const in arg first[2345057]:int(64)[13], const in arg last[2345059]:int(64)[13], const in arg shouldHalt[2345061]:bool[10], const in arg _ln[2445367]:int(64)[13], in arg _fn[2445369]:int(32)[95]) : bool[10] "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_992[2345064]:string[26] "temp"
    (2345066 'move' local__str_literal_992[2345064] "Iteration over a bounded range may be incorrect due to overflow.")
    val ret[2345069]:bool[10] "dead after last mention" "RVV" "temp"
    if(2345075 '>' low[2345051] high[2345053])
    {
      (2345080 'move' ret[2345069] 0)
      gotoReturn _end_chpl_checkIfRangeIterWillOverflow[2345211] _end_chpl_checkIfRangeIterWillOverflow[2345211]
    }
    val willOverFlow[2345086]:bool[10] "dead at end of block" "insert auto destroy"
    (2345088 'move' willOverFlow[2345086] 0)
    val tmp[2345098]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2345095 '>' last[2345059] 0)
    {
      (2345109 'move' tmp[2345098](2345106 '>' stride[2345055] 0))
    }
    {
      (2345113 'move' tmp[2345098] 0)
    }
    if tmp[2345098]
    {
      if(2345130 '>' stride[2345055](2452597 'cast' int(64)[13](2345123 '-' 9223372036854775807 last[2345059])))
      {
        (2345135 '=' willOverFlow[2345086] 1)
      }
    }
    {
      val tmp[2345147]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if(2345144 '<' last[2345059] 0)
      {
        (2345158 'move' tmp[2345147](2345155 '<' stride[2345055] 0))
      }
      {
        (2345162 'move' tmp[2345147] 0)
      }
      if tmp[2345147]
      {
        if(2345179 '<' stride[2345055](2452599 'cast' int(64)[13](2345172 '-' -9223372036854775808 last[2345059])))
        {
          (2345184 '=' willOverFlow[2345086] 1)
        }
      }
    }
    val tmp[2345190]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if willOverFlow[2345086]
    {
      (2345194 'move' tmp[2345190] shouldHalt[2345061])
    }
    {
      (2345198 'move' tmp[2345190] 0)
    }
    if tmp[2345190]
    {
      (2345205 call _local_boundsCheckHalt[2347396] local__str_literal_992[2345064] _ln[2445367] _fn[2445369])
    }
    (2345208 'move' ret[2345069] willOverFlow[2345086])
    label _end_chpl_checkIfRangeIterWillOverflow[2345211]
    (2345213 return ret[2345069])
  }
  function chpl_checkIfRangeIterWillOverflow[1095987](const in arg low[1095991]:int(64)[13], const in arg high[1095993]:int(64)[13], const in arg stride[1095995]:int(64)[13], const in arg first[1096001]:int(64)[13], const in arg last[1096007]:int(64)[13], const in arg shouldHalt[1096013]:bool[10], const in arg _ln[2444827]:int(64)[13], in arg _fn[2444829]:int(32)[95]) : bool[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_992[2335328]:string[26] "temp"
    (2335329 'move' "Iteration over a bounded range may be incorrect due to overflow." "Iteration over a bounded range may be incorrect due to overflow.")
    val ret[1096015]:bool[10] "dead after last mention" "RVV" "temp"
    if(2070693 '>' low[1095991] high[1095993])
    {
      (1096046 'move' ret[1096015] 0)
      gotoReturn _end_chpl_checkIfRangeIterWillOverflow[1096527] _end_chpl_checkIfRangeIterWillOverflow[1096527]
    }
    val willOverFlow[1096053]:bool[10] "dead at end of block" "insert auto destroy"
    (1096055 'move' willOverFlow[1096053] 0)
    val tmp[1096096]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2070708 '>' last[1096007] 0)
    {
      (1096129 'move' tmp[1096096](2070723 '>' stride[1095995] 0))
    }
    {
      (1096135 'move' tmp[1096096] 0)
    }
    if tmp[1096096]
    {
      if(2070733 '>' stride[1095995](2452223 'cast' int(64)[13](2165897 '-' 9223372036854775807 last[1096007])))
      {
        (2081062 '=' willOverFlow[1096053] 1)
      }
    }
    {
      val tmp[1096211]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if(2062209 '<' last[1096007] 0)
      {
        (1096244 'move' tmp[1096211](2062219 '<' stride[1095995] 0))
      }
      {
        (1096250 'move' tmp[1096211] 0)
      }
      if tmp[1096211]
      {
        if(2074723 '<' stride[1095995](2452225 'cast' int(64)[13](2165867 '-' -9223372036854775808 last[1096007])))
        {
          (2081079 '=' willOverFlow[1096053] 1)
        }
      }
    }
    val tmp[1096465]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if willOverFlow[1096053]
    {
      (1096490 'move' tmp[1096465] shouldHalt[1096013])
    }
    {
      (1096496 'move' tmp[1096465] 0)
    }
    if tmp[1096465]
    {
      (1096514 call boundsCheckHalt[210079] "Iteration over a bounded range may be incorrect due to overflow." _ln[2444827] _fn[2444829])
    }
    (1096519 'move' ret[1096015] willOverFlow[1096053])
    label _end_chpl_checkIfRangeIterWillOverflow[1096527]
    (1096529 return ret[1096015])
  }
  function range(int(64),bounded,false)[1026725]._local_checkIfIterWillOverflow[2360299](const in arg this[2360301]:range(int(64),bounded,false)[1026725], const in arg shouldHalt[2360303]:bool[10], const in arg _ln[2447033]:int(64)[13], in arg _fn[2447035]:int(32)[95]) : bool[10] "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val call_tmp[2360320]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2360336 'move' call_tmp[2360320](2360339 call _local_chpl_checkIfRangeIterWillOverflow[2345049](2360326 '.v' this[2360301] _low[1026687])(2360333 '.v' this[2360301] _high[1026692]) 1(2360310 '.v' this[2360301] _low[1026687])(2360317 '.v' this[2360301] _high[1026692]) shouldHalt[2360303] _ln[2447033] _fn[2447035]))
    (2360346 return call_tmp[2360320])
  }
  function range(int(64),bounded,false)[1026725].checkIfIterWillOverflow[1095725](const in arg this[1095731]:range(int(64),bounded,false)[1026725], const in arg shouldHalt[1095737]:bool[10], const in arg _ln[2446879]:int(64)[13], in arg _fn[2446881]:int(32)[95]) : bool[10] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val call_tmp[1095795]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1095797 'move' call_tmp[1095795](1095800 call chpl_checkIfRangeIterWillOverflow[1095987](2326242 '.v' this[1095731] _low[1026687])(2326249 '.v' this[1095731] _high[1026692]) 1(2207842 '.v' this[1095731] _low[1026687])(2214293 '.v' this[1095731] _high[1026692]) shouldHalt[1095737] _ln[2446879] _fn[2446881]))
    (1095812 return call_tmp[1095795])
  }
  type _ic_chpl_direct_counted_range_iter[1103701] val super[1103702]:object[22] "super class" val more[1103704]:int(64)[13] const-val F0_low[1960165]:int(64)[13] const-val F1_count[1960169]:int(64)[13] val F2__iterator[1960173]:_ic_chpl_direct_counted_range_iter_helper[1103451] const F3_tmp[1960175]:2*int(64)[1039967] val F4__iterator[1960177]:_ic_chpl_direct_param_stride_range_iter[1103197] val F5_i[1960179]:int(64)[13] const-val F6_low[1960181]:int(64)[13] val value[1960183]:int(64)[13]
  type _ic_chpl_direct_counted_range_iter_helper[1103451] val super[1103452]:object[22] "super class" val more[1103454]:int(64)[13] const-val F0_low[1964637]:int(64)[13] const-val F1_count[1964641]:int(64)[13] const F2_tmp[1964645]:2*int(64)[1039967] val F3__iterator[1964647]:_ic_chpl_direct_param_stride_range_iter[1103197] val F4_i[1964649]:int(64)[13] const-val F5_low[1964651]:int(64)[13] val value[1964653]:int(64)[13]
  type _ic_chpl_direct_param_stride_range_iter[1103197] val super[1103198]:object[22] "super class" val more[1103200]:int(64)[13] const-val F0_low[1966135]:int(64)[13] const-val F1_high[1966139]:int(64)[13] val value[1966143]:int(64)[13]
  function _ic_these_range_int64_t_bounded_F[1096614].advance[1096640](const in arg this[1096642]:_ic_these_range_int64_t_bounded_F[1096614], const in arg _ln[2424199]:int(64)[13], in arg _fn[2424201]:int(32)[95]) : void[4] "auto ii" "method" "resolved"
  {
    const-val more[1964505]:int(64)[13]
    (2409044 '_check_nil' this[1096642] _ln[2424199] _fn[2424201])
    (2378372 'move' more[1964505](1964530 '.v' this[1096642] more[1096617]))
    if(1964512 '==' more[1964505] 2)
    {
      gotoIterResume _jump_2[1964497] _jump_2[1964497]
    }
    if(1964522 '==' more[1964505] -2)
    {
      gotoIterResume _jump_break_2[1964499] _jump_break_2[1964499]
    }
    const-val tmp[1964026]:range(int(64),bounded,false)[1026725] "temp"
    val tmp[2378333]:range(int(64),bounded,false)[1026725] "temp"
    (2409012 '_check_nil' this[1096642] _ln[2424199] _fn[2424201])
    (1964031 'move' tmp[2378333](1964028 '.v' this[1096642] F0_this[1964014]))
    (2378336 'move' tmp[1964026] tmp[2378333])
    (1095541 call checkIfIterWillOverflow[1095725] tmp[1964026] 1 _ln[2424199] _fn[2424201])
    (2409014 '_check_nil' this[1096642] _ln[2424199] _fn[2424201])
    (1964035 '.=' this[1096642] F1_i[1964018] 0)
    ref tmp[1964039]:range(int(64),bounded,false)[1026725] "temp"
    (2409016 '_check_nil' this[1096642] _ln[2424199] _fn[2424201])
    (1964044 'move' tmp[1964039](1964041 '.' this[1096642] F0_this[1964014]))
    val tmp[1964046]:int(64)[13] "temp"
    (2372208 'move' tmp[1964046](2326259 '.v' tmp[1964039] _low[1026687]))
    (2409018 '_check_nil' this[1096642] _ln[2424199] _fn[2424201])
    (1964048 '.=' this[1096642] F3_coerce_tmp[1964022] tmp[1964046])
    (1095567 'noop')
    ref tmp[1964059]:range(int(64),bounded,false)[1026725] "temp"
    (2409020 '_check_nil' this[1096642] _ln[2424199] _fn[2424201])
    (1964064 'move' tmp[1964059](1964061 '.' this[1096642] F0_this[1964014]))
    const-val coerce_tmp[1096597]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2372214 'move' coerce_tmp[1096597](2326265 '.v' tmp[1964059] _high[1026692]))
    (2409022 '_check_nil' this[1096642] _ln[2424199] _fn[2424201])
    (1964068 '.=' this[1096642] F2_end[1964020] coerce_tmp[1096597])
    (1095581 'noop')
    CForLoop[1095585]
    {
      const-val tmp[1964085]:int(64)[13] "temp"
      (2409026 '_check_nil' this[1096642] _ln[2424199] _fn[2424201])
      (2378342 'move' tmp[1964085](1964087 '.v' this[1096642] F1_i[1964018]))
      (2409024 '_check_nil' this[1096642] _ln[2424199] _fn[2424201])
      (1964074 '.=' this[1096642] value[1964024] tmp[1964085])
      (2409040 '_check_nil' this[1096642] _ln[2424199] _fn[2424201])
      (1964491 '.=' this[1096642] more[1096617] 2)
      gotoIterEnd _end[1964489] _end[1964489]
      label _jump_break_2[1964499]
      gotoReturn _endthese[1770993] _endthese[1770993]
      label _jump_2[1964497]
      {
        const-val tmp[1964105]:int(64)[13] "temp"
        (2409030 '_check_nil' this[1096642] _ln[2424199] _fn[2424201])
        (2378348 'move' tmp[1964105](1964107 '.v' this[1096642] F3_coerce_tmp[1964022]))
        (2409028 '_check_nil' this[1096642] _ln[2424199] _fn[2424201])
        (1964101 '.=' this[1096642] F1_i[1964018] tmp[1964105])
      }
      {
        val tmp[1964112]:int(64)[13] "temp"
        (2409032 '_check_nil' this[1096642] _ln[2424199] _fn[2424201])
        (2378354 'move' tmp[1964112](1964114 '.v' this[1096642] F1_i[1964018]))
        (2409034 '_check_nil' this[1096642] _ln[2424199] _fn[2424201])
        (1095594 '<=' tmp[1964112](1964121 '.v' this[1096642] F2_end[1964020]))
      }
      {
        val tmp[1964126]:int(64)[13] "temp"
        (2409036 '_check_nil' this[1096642] _ln[2424199] _fn[2424201])
        (2378366 'move' tmp[1964126](1964128 '.v' this[1096642] F1_i[1964018]))
        (1095625 '+=' tmp[1964126] 1)
        (2409038 '_check_nil' this[1096642] _ln[2424199] _fn[2424201])
        (1964133 '.=' this[1096642] F1_i[1964018] tmp[1964126])
      }
    }
    label _endthese[1770993]
    (2409042 '_check_nil' this[1096642] _ln[2424199] _fn[2424201])
    (1964501 '.=' this[1096642] more[1096617] 0)
    label _end[1964489]
    (1964536 return _void[55])
  }
  type _ic_these_range_int64_t_bounded_F[1096614] val super[1096615]:object[22] "super class" val more[1096617]:int(64)[13] const-val F0_this[1964014]:range(int(64),bounded,false)[1026725] val F1_i[1964018]:int(64)[13] const F2_end[1964020]:int(64)[13] val F3_coerce_tmp[1964022]:int(64)[13] val value[1964024]:int(64)[13]
  function _cast[1054269](const in arg x[1054273]:range(byteIndex,bounded,false)[1025703], ref arg _retArg[1789789]:string[26], const in arg _ln[2432641]:int(64)[13], in arg _fn[2432643]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_1075[2334952]:string[26] "temp"
    (2334953 'move' ".." "..")
    const-val ret[1054275]:string[26] "dead after last mention" "RVV" "temp"
    val ret[1054283]:string[26] "dead at end of block" "insert auto destroy"
    (1084619 call init[30760] ret[1054283] _ln[2432641] _fn[2432643])
    const-val call_tmp[1054307]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2207148]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2389988 'move' coerce_tmp[2207148](2207152 '.v' x[1054273] _low[1025665]))
    const-val ret[2207155]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2207157]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2207160 call init[28097] cpi[2207157])
    (2207162 '.=' cpi[2207157] _bindex[28091] coerce_tmp[2207148])
    (2207166 'move' ret[2207155] cpi[2207157])
    (1789584 'move' call_tmp[1054307] ret[2207155])
    const-val call_tmp[1054315]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1789795]:string[26] "temp"
    (1054320 call _cast[1054552] call_tmp[1054307] ret_tmp[1789795] _ln[2432641] _fn[2432643])
    (1789798 'move' call_tmp[1054315] ret_tmp[1789795])
    (1054324 call +=[38797] ret[1054283] call_tmp[1054315] _ln[2432641] _fn[2432643])
    ref i_x[2077122]:string[26] "temp"
    (2077126 'move' i_x[2077122](2077124 'set reference' call_tmp[1054315]))
    wide-ref tmp[2381607]:string[26] "temp"
    (2381610 'move' tmp[2381607] i_x[2077122])
    (2077130 call deinit[30831] tmp[2381607] _ln[2432641] _fn[2432643])
    (1054331 call +=[38797] ret[1054283] ".." _ln[2432641] _fn[2432643])
    const-val call_tmp[1054354]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2207223]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2390000 'move' coerce_tmp[2207223](2207227 '.v' x[1054273] _high[1025670]))
    const-val ret[2207230]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2207232]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2207235 call init[28097] cpi[2207232])
    (2207237 '.=' cpi[2207232] _bindex[28091] coerce_tmp[2207223])
    (2207241 'move' ret[2207230] cpi[2207232])
    (1789620 'move' call_tmp[1054354] ret[2207230])
    const-val call_tmp[1054362]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1789801]:string[26] "temp"
    (1054367 call _cast[1054552] call_tmp[1054354] ret_tmp[1789801] _ln[2432641] _fn[2432643])
    (1789804 'move' call_tmp[1054362] ret_tmp[1789801])
    (1054371 call +=[38797] ret[1054283] call_tmp[1054362] _ln[2432641] _fn[2432643])
    ref i_x[2077134]:string[26] "temp"
    (2077138 'move' i_x[2077134](2077136 'set reference' call_tmp[1054362]))
    wide-ref tmp[2381613]:string[26] "temp"
    (2381616 'move' tmp[2381613] i_x[2077134])
    (2077142 call deinit[30831] tmp[2381613] _ln[2432641] _fn[2432643])
    const-val alignCheckRange[1054433]:range(byteIndex,bounded,false)[1025703] "dead at end of block" "insert auto destroy"
    (1054435 'move' alignCheckRange[1054433] x[1054273])
    (1054443 call normalizeAlignment[1083517] alignCheckRange[1054433])
    (1054525 'move' ret[1054275] ret[1054283])
    (1789791 '=' _retArg[1789789] ret[1054275])
    (1789793 return _void[55])
  }
  function _cast[1119348](const in arg x[1119352]:range(int(64),bounded,false)[1026725], ref arg _retArg[1790844]:string[26], const in arg _ln[2432675]:int(64)[13], in arg _fn[2432677]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_1075[2335443]:string[26] "temp"
    (2335444 'move' ".." "..")
    const-val ret[1119354]:string[26] "dead after last mention" "RVV" "temp"
    val ret[1119362]:string[26] "dead at end of block" "insert auto destroy"
    (1120655 call init[30760] ret[1119362] _ln[2432675] _fn[2432677])
    const-val call_tmp[1119394]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1789939]:string[26] "temp"
    (1119399 call _cast[1063064](2206405 '.v' x[1119352] _low[1026687]) ret_tmp[1789939] _ln[2432675] _fn[2432677])
    (1789942 'move' call_tmp[1119394] ret_tmp[1789939])
    (1119403 call +=[38797] ret[1119362] call_tmp[1119394] _ln[2432675] _fn[2432677])
    ref i_x[2077626]:string[26] "temp"
    (2077630 'move' i_x[2077626](2077628 'set reference' call_tmp[1119394]))
    wide-ref tmp[2381835]:string[26] "temp"
    (2381838 'move' tmp[2381835] i_x[2077626])
    (2077634 call deinit[30831] tmp[2381835] _ln[2432675] _fn[2432677])
    (1119410 call +=[38797] ret[1119362] ".." _ln[2432675] _fn[2432677])
    const-val call_tmp[1119441]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1789945]:string[26] "temp"
    (1119446 call _cast[1063064](2206625 '.v' x[1119352] _high[1026692]) ret_tmp[1789945] _ln[2432675] _fn[2432677])
    (1789948 'move' call_tmp[1119441] ret_tmp[1789945])
    (1119450 call +=[38797] ret[1119362] call_tmp[1119441] _ln[2432675] _fn[2432677])
    ref i_x[2077638]:string[26] "temp"
    (2077642 'move' i_x[2077638](2077640 'set reference' call_tmp[1119441]))
    wide-ref tmp[2381841]:string[26] "temp"
    (2381844 'move' tmp[2381841] i_x[2077638])
    (2077646 call deinit[30831] tmp[2381841] _ln[2432675] _fn[2432677])
    const-val alignCheckRange[1119512]:range(int(64),bounded,false)[1026725] "dead at end of block" "insert auto destroy"
    (1119514 'move' alignCheckRange[1119512] x[1119352])
    (1119522 call normalizeAlignment[1119651] alignCheckRange[1119512])
    (1119604 'move' ret[1119354] ret[1119362])
    (1790846 '=' _retArg[1790844] ret[1119354])
    (1790848 return _void[55])
  }
  function _cast[1135871](const in arg x[1135875]:range(int(64),boundedLow,false)[1087476], ref arg _retArg[1791132]:string[26], const in arg _ln[2432695]:int(64)[13], in arg _fn[2432697]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_1079[2335506]:string[26] "temp"
    (2335507 'move' " align " " align ")
    const-val local__str_literal_1075[2335500]:string[26] "temp"
    (2335501 'move' ".." "..")
    const-val ret[1135877]:string[26] "dead after last mention" "RVV" "temp"
    val ret[1135885]:string[26] "dead at end of block" "insert auto destroy"
    (1138709 call init[30760] ret[1135885] _ln[2432695] _fn[2432697])
    const-val call_tmp[1135917]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1789957]:string[26] "temp"
    (1135922 call _cast[1063064](2215425 '.v' x[1135875] _low[1087438]) ret_tmp[1789957] _ln[2432695] _fn[2432697])
    (1789960 'move' call_tmp[1135917] ret_tmp[1789957])
    (1135926 call +=[38797] ret[1135885] call_tmp[1135917] _ln[2432695] _fn[2432697])
    ref i_x[2077698]:string[26] "temp"
    (2077702 'move' i_x[2077698](2077700 'set reference' call_tmp[1135917]))
    wide-ref tmp[2381871]:string[26] "temp"
    (2381874 'move' tmp[2381871] i_x[2077698])
    (2077706 call deinit[30831] tmp[2381871] _ln[2432695] _fn[2432697])
    (1135933 call +=[38797] ret[1135885] ".." _ln[2432695] _fn[2432697])
    const-val alignCheckRange[1136035]:range(int(64),boundedLow,false)[1087476] "dead at end of block" "insert auto destroy"
    (1136037 'move' alignCheckRange[1136035] x[1135875])
    (1136045 call normalizeAlignment[1136171] alignCheckRange[1136035])
    if(2060383 '!'(2215815 '=='(2215801 '.v' alignCheckRange[1136035] _low[1087438])(2215808 '.v' alignCheckRange[1136035] _low[1087438])))
    {
      const-val call_tmp[1136073]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1136075 'move' call_tmp[1136073](1136078 call alignment[1128031] x[1135875]))
      const-val call_tmp[1136096]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1136098 'move' call_tmp[1136096](1136101 call chpl__mod[1137327] call_tmp[1136073] 1 _ln[2432695] _fn[2432697]))
      const-val call_tmp[1136104]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1789963]:string[26] "temp"
      (1136109 call _cast[1063064] call_tmp[1136096] ret_tmp[1789963] _ln[2432695] _fn[2432697])
      (1789966 'move' call_tmp[1136104] ret_tmp[1789963])
      const-val call_tmp[1136112]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1786991]:string[26] "temp"
      wide-ref tmp[2372337]:string[26] "temp"
      (2372341 'move' tmp[2372337](2372339 'set reference' call_tmp[1136104]))
      (1136117 call +[38342] " align " tmp[2372337] ret_tmp[1786991] _ln[2432695] _fn[2432697])
      (1786994 'move' call_tmp[1136112] ret_tmp[1786991])
      (1136121 call +=[38797] ret[1135885] call_tmp[1136112] _ln[2432695] _fn[2432697])
      ref i_x[2077710]:string[26] "temp"
      (2077714 'move' i_x[2077710](2077712 'set reference' call_tmp[1136112]))
      wide-ref tmp[2381877]:string[26] "temp"
      (2381880 'move' tmp[2381877] i_x[2077710])
      (2077718 call deinit[30831] tmp[2381877] _ln[2432695] _fn[2432697])
      ref i_x[2077722]:string[26] "temp"
      (2077726 'move' i_x[2077722](2077724 'set reference' call_tmp[1136104]))
      wide-ref tmp[2381883]:string[26] "temp"
      (2381886 'move' tmp[2381883] i_x[2077722])
      (2077730 call deinit[30831] tmp[2381883] _ln[2432695] _fn[2432697])
    }
    (1136127 'move' ret[1135877] ret[1135885])
    (1791134 '=' _retArg[1791132] ret[1135877])
    (1791136 return _void[55])
  }
  function _cast[1154335](const in arg x[1154339]:range(byteIndex,boundedLow,false)[1143314], ref arg _retArg[1791414]:string[26], const in arg _ln[2432707]:int(64)[13], in arg _fn[2432709]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_1079[2335554]:string[26] "temp"
    (2335555 'move' " align " " align ")
    const-val local__str_literal_1075[2335548]:string[26] "temp"
    (2335549 'move' ".." "..")
    const-val ret[1154341]:string[26] "dead after last mention" "RVV" "temp"
    val ret[1154349]:string[26] "dead at end of block" "insert auto destroy"
    (1156030 call init[30760] ret[1154349] _ln[2432707] _fn[2432709])
    const-val call_tmp[1154373]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2216130]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2390971 'move' coerce_tmp[2216130](2216134 '.v' x[1154339] _low[1143276]))
    const-val ret[2216137]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2216139]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2216142 call init[28097] cpi[2216139])
    (2216144 '.=' cpi[2216139] _bindex[28091] coerce_tmp[2216130])
    (2216148 'move' ret[2216137] cpi[2216139])
    (1791323 'move' call_tmp[1154373] ret[2216137])
    const-val call_tmp[1154381]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1789807]:string[26] "temp"
    (1154386 call _cast[1054552] call_tmp[1154373] ret_tmp[1789807] _ln[2432707] _fn[2432709])
    (1789810 'move' call_tmp[1154381] ret_tmp[1789807])
    (1154390 call +=[38797] ret[1154349] call_tmp[1154381] _ln[2432707] _fn[2432709])
    ref i_x[2077782]:string[26] "temp"
    (2077786 'move' i_x[2077782](2077784 'set reference' call_tmp[1154381]))
    wide-ref tmp[2381913]:string[26] "temp"
    (2381916 'move' tmp[2381913] i_x[2077782])
    (2077790 call deinit[30831] tmp[2381913] _ln[2432707] _fn[2432709])
    (1154397 call +=[38797] ret[1154349] ".." _ln[2432707] _fn[2432709])
    const-val alignCheckRange[1154499]:range(byteIndex,boundedLow,false)[1143314] "dead at end of block" "insert auto destroy"
    (1154501 'move' alignCheckRange[1154499] x[1154339])
    (1154509 call normalizeAlignment[1154870] alignCheckRange[1154499])
    if(2060410 '!'(2216319 '=='(2216305 '.v' alignCheckRange[1154499] _low[1143276])(2216312 '.v' alignCheckRange[1154499] _low[1143276])))
    {
      const-val call_tmp[1154537]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1791396]:byteIndex[28170] "temp"
      (1154542 call alignment[1148149] x[1154339] ret_tmp[1791396])
      (1791399 'move' call_tmp[1154537] ret_tmp[1791396])
      const-val call_tmp[1154560]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1154562 'move' call_tmp[1154560](1154565 call chpl__mod[1137327](2206823 '.v' call_tmp[1154537] _bindex[28091]) 1 _ln[2432707] _fn[2432709]))
      const-val call_tmp[1154568]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1789975]:string[26] "temp"
      (1154573 call _cast[1063064] call_tmp[1154560] ret_tmp[1789975] _ln[2432707] _fn[2432709])
      (1789978 'move' call_tmp[1154568] ret_tmp[1789975])
      const-val call_tmp[1154576]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1787003]:string[26] "temp"
      wide-ref tmp[2372411]:string[26] "temp"
      (2372415 'move' tmp[2372411](2372413 'set reference' call_tmp[1154568]))
      (1154581 call +[38342] " align " tmp[2372411] ret_tmp[1787003] _ln[2432707] _fn[2432709])
      (1787006 'move' call_tmp[1154576] ret_tmp[1787003])
      (1154585 call +=[38797] ret[1154349] call_tmp[1154576] _ln[2432707] _fn[2432709])
      ref i_x[2077794]:string[26] "temp"
      (2077798 'move' i_x[2077794](2077796 'set reference' call_tmp[1154576]))
      wide-ref tmp[2381919]:string[26] "temp"
      (2381922 'move' tmp[2381919] i_x[2077794])
      (2077802 call deinit[30831] tmp[2381919] _ln[2432707] _fn[2432709])
      ref i_x[2077806]:string[26] "temp"
      (2077810 'move' i_x[2077806](2077808 'set reference' call_tmp[1154568]))
      wide-ref tmp[2381925]:string[26] "temp"
      (2381928 'move' tmp[2381925] i_x[2077806])
      (2077814 call deinit[30831] tmp[2381925] _ln[2432707] _fn[2432709])
    }
    (1154591 'move' ret[1154341] ret[1154349])
    (1791416 '=' _retArg[1791414] ret[1154341])
    (1791418 return _void[55])
  }
  function _cast[1198542](const in arg x[1198546]:range(byteIndex,boundedHigh,false)[1184830], ref arg _retArg[1791736]:string[26], const in arg _ln[2432735]:int(64)[13], in arg _fn[2432737]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_1079[2335784]:string[26] "temp"
    (2335785 'move' " align " " align ")
    const-val local__str_literal_1075[2335778]:string[26] "temp"
    (2335779 'move' ".." "..")
    const-val ret[1198548]:string[26] "dead after last mention" "RVV" "temp"
    val ret[1198556]:string[26] "dead at end of block" "insert auto destroy"
    (1200089 call init[30760] ret[1198556] _ln[2432735] _fn[2432737])
    (1198604 call +=[38797] ret[1198556] ".." _ln[2432735] _fn[2432737])
    const-val call_tmp[1198627]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2219350]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2391401 'move' coerce_tmp[2219350](2219354 '.v' x[1198546] _high[1184797]))
    const-val ret[2219357]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2219359]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2219362 call init[28097] cpi[2219359])
    (2219364 '.=' cpi[2219359] _bindex[28091] coerce_tmp[2219350])
    (2219368 'move' ret[2219357] cpi[2219359])
    (1791675 'move' call_tmp[1198627] ret[2219357])
    const-val call_tmp[1198635]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1789813]:string[26] "temp"
    (1198640 call _cast[1054552] call_tmp[1198627] ret_tmp[1789813] _ln[2432735] _fn[2432737])
    (1789816 'move' call_tmp[1198635] ret_tmp[1789813])
    (1198644 call +=[38797] ret[1198556] call_tmp[1198635] _ln[2432735] _fn[2432737])
    ref i_x[2078178]:string[26] "temp"
    (2078182 'move' i_x[2078178](2078180 'set reference' call_tmp[1198635]))
    wide-ref tmp[2382075]:string[26] "temp"
    (2382078 'move' tmp[2382075] i_x[2078178])
    (2078186 call deinit[30831] tmp[2382075] _ln[2432735] _fn[2432737])
    const-val alignCheckRange[1198706]:range(byteIndex,boundedHigh,false)[1184830] "dead at end of block" "insert auto destroy"
    (1198708 'move' alignCheckRange[1198706] x[1198546])
    (1198716 call normalizeAlignment[1199077] alignCheckRange[1198706])
    const-val call_tmp[1198744]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1791718]:byteIndex[28170] "temp"
    (1198749 call alignment[1192572] x[1198546] ret_tmp[1791718])
    (1791721 'move' call_tmp[1198744] ret_tmp[1791718])
    const-val call_tmp[1198767]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1198769 'move' call_tmp[1198767](1198772 call chpl__mod[1137327](2206895 '.v' call_tmp[1198744] _bindex[28091]) 1 _ln[2432735] _fn[2432737]))
    const-val call_tmp[1198775]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1789987]:string[26] "temp"
    (1198780 call _cast[1063064] call_tmp[1198767] ret_tmp[1789987] _ln[2432735] _fn[2432737])
    (1789990 'move' call_tmp[1198775] ret_tmp[1789987])
    const-val call_tmp[1198783]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1787051]:string[26] "temp"
    wide-ref tmp[2372703]:string[26] "temp"
    (2372707 'move' tmp[2372703](2372705 'set reference' call_tmp[1198775]))
    (1198788 call +[38342] " align " tmp[2372703] ret_tmp[1787051] _ln[2432735] _fn[2432737])
    (1787054 'move' call_tmp[1198783] ret_tmp[1787051])
    (1198792 call +=[38797] ret[1198556] call_tmp[1198783] _ln[2432735] _fn[2432737])
    ref i_x[2078190]:string[26] "temp"
    (2078194 'move' i_x[2078190](2078192 'set reference' call_tmp[1198783]))
    wide-ref tmp[2382081]:string[26] "temp"
    (2382084 'move' tmp[2382081] i_x[2078190])
    (2078198 call deinit[30831] tmp[2382081] _ln[2432735] _fn[2432737])
    ref i_x[2078202]:string[26] "temp"
    (2078206 'move' i_x[2078202](2078204 'set reference' call_tmp[1198775]))
    wide-ref tmp[2382087]:string[26] "temp"
    (2382090 'move' tmp[2382087] i_x[2078202])
    (2078210 call deinit[30831] tmp[2382087] _ln[2432735] _fn[2432737])
    (1198798 'move' ret[1198548] ret[1198556])
    (1791738 '=' _retArg[1791736] ret[1198548])
    (1791740 return _void[55])
  }
  function range(byteIndex,bounded,false)[1025703].normalizeAlignment[1083517](ref arg this[1083523]:range(byteIndex,bounded,false)[1025703]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "no return value for void"
  {
    (1083803 return _void[55])
  }
  function range(int(64),bounded,false)[1026725].normalizeAlignment[1119651](ref arg this[1119657]:range(int(64),bounded,false)[1026725]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "no return value for void"
  {
    (1119937 return _void[55])
  }
  function range(int(64),boundedLow,false)[1087476].normalizeAlignment[1136171](ref arg this[1136177]:range(int(64),boundedLow,false)[1087476]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "no return value for void"
  {
    (1136457 return _void[55])
  }
  function range(byteIndex,boundedLow,false)[1143314].normalizeAlignment[1154870](ref arg this[1154876]:range(byteIndex,boundedLow,false)[1143314]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "no return value for void"
  {
    (1155156 return _void[55])
  }
  function range(byteIndex,boundedHigh,false)[1184830].normalizeAlignment[1199077](ref arg this[1199083]:range(byteIndex,boundedHigh,false)[1184830]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "no return value for void"
  {
    (1199363 return _void[55])
  }
  function chpl__mod[1137327](const in arg dividend[1137329]:int(64)[13], const in arg modulus[1137331]:int(64)[13], const in arg _ln[2436525]:int(64)[13], in arg _fn[2436527]:int(32)[95]) : int(64)[13] "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_76[2335512]:string[26] "temp"
    (2335513 'move' "Attempt to compute a modulus by zero" "Attempt to compute a modulus by zero")
    val ret[1137333]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[2159078]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2159084 '<' modulus[1137331] 0)
    {
      (2159095 'move' tmp[2159078](2159093 'u-' modulus[1137331]))
    }
    {
      (2159099 'move' tmp[2159078] modulus[1137331])
    }
    if(2158695 '==' tmp[2159078] 0)
    {
      (2158701 call halt[154067] "Attempt to compute a modulus by zero" _ln[2436525] _fn[2436527])
    }
    const-val call_tmp[2158704]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2158706 'move' call_tmp[2158704](2158708 '%' dividend[1137329] tmp[2159078]))
    val tmp[1137380]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1137382 'move' tmp[1137380] call_tmp[2158704])
    if(2062249 '<' call_tmp[2158704] 0)
    {
      ref i_lhs[2122012]:int(64)[13] "temp"
      (2122016 'move' i_lhs[2122012](2122014 'set reference' tmp[1137380]))
      (2122019 '+=' i_lhs[2122012] tmp[2159078])
    }
    (1137429 'move' ret[1137333] tmp[1137380])
    (1137439 return ret[1137333])
  }
  function _local_chpl__add[2367287](const in arg a[2367289]:int(64)[13], const in arg b[2367291]:int(64)[13]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    val ret[2367294]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[2367303]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2367300 '>' a[2367289] 0)
    {
      (2367314 'move' tmp[2367303](2367311 '>' b[2367291] 0))
    }
    {
      (2367318 'move' tmp[2367303] 0)
    }
    val tmp[2367322]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[2367303]
    {
      (2367340 'move' tmp[2367322](2367337 '>' b[2367291](2452731 'cast' int(64)[13](2367330 '-' 9223372036854775807 a[2367289]))))
    }
    {
      (2367344 'move' tmp[2367322] 0)
    }
    if tmp[2367322]
    {
      (2367350 'move' ret[2367294] 9223372036854775807)
      gotoReturn _end_chpl__add[2367426] _end_chpl__add[2367426]
    }
    val tmp[2367363]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2367360 '<' a[2367289] 0)
    {
      (2367374 'move' tmp[2367363](2367371 '<' b[2367291] 0))
    }
    {
      (2367378 'move' tmp[2367363] 0)
    }
    val tmp[2367382]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[2367363]
    {
      (2367400 'move' tmp[2367382](2367397 '<' b[2367291](2452733 'cast' int(64)[13](2367390 '-' -9223372036854775808 a[2367289]))))
    }
    {
      (2367404 'move' tmp[2367382] 0)
    }
    if tmp[2367382]
    {
      (2367410 'move' ret[2367294] -9223372036854775808)
      gotoReturn _end_chpl__add[2367426] _end_chpl__add[2367426]
    }
    (2367423 'move' ret[2367294](2452735 'cast' int(64)[13](2367420 '+' a[2367289] b[2367291])))
    label _end_chpl__add[2367426]
    (2367428 return ret[2367294])
  }
  function chpl__add[1093283](const in arg a[1093285]:int(64)[13], const in arg b[1093290]:int(64)[13]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    val ret[1093294]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[1093360]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2070658 '>' a[1093285] 0)
    {
      (1093393 'move' tmp[1093360](2070673 '>' b[1093290] 0))
    }
    {
      (1093399 'move' tmp[1093360] 0)
    }
    val tmp[1093421]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[1093360]
    {
      (1093475 'move' tmp[1093421](2070683 '>' b[1093290](2452219 'cast' int(64)[13](2165887 '-' 9223372036854775807 a[1093285]))))
    }
    {
      (1093481 'move' tmp[1093421] 0)
    }
    if tmp[1093421]
    {
      (1093503 'move' ret[1093294] 9223372036854775807)
      gotoReturn _end_chpl__add[1094227] _end_chpl__add[1094227]
    }
    val tmp[1093533]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2062179 '<' a[1093285] 0)
    {
      (1093566 'move' tmp[1093533](2062189 '<' b[1093290] 0))
    }
    {
      (1093572 'move' tmp[1093533] 0)
    }
    val tmp[1093594]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[1093533]
    {
      (1093648 'move' tmp[1093594](2074713 '<' b[1093290](2452221 'cast' int(64)[13](2165857 '-' -9223372036854775808 a[1093285]))))
    }
    {
      (1093654 'move' tmp[1093594] 0)
    }
    if tmp[1093594]
    {
      (1093676 'move' ret[1093294] -9223372036854775808)
      gotoReturn _end_chpl__add[1094227] _end_chpl__add[1094227]
    }
    (1094223 'move' ret[1093294](2452217 'cast' int(64)[13](2072341 '+' a[1093285] b[1093290])))
    label _end_chpl__add[1094227]
    (1094229 return ret[1093294])
  }
  function chpl__addRangeStrides[1104938](const in arg start[1104940]:int(64)[13], const in arg stride[1104942]:int(64)[13], const in arg count[1104944]:int(64)[13]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[1105408]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1105410 'move' call_tmp[1105408](1105413 call mul[1105446] stride[1104942] count[1104944]))
    const-val call_tmp[1105416]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1105418 'move' call_tmp[1105416](1105421 call add[1105833] start[1104940] call_tmp[1105408]))
    (1105443 return call_tmp[1105416])
  }
  function _local_absSameType[2367250](const in arg str[2367252]:int(64)[13]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    (2367257 return 1)
  }
  function absSameType[1090753](const in arg str[1090755]:int(64)[13]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    (1090845 return 1)
  }
  function mul[1105446](const in arg a[1105448]:int(64)[13], const in arg b[1105450]:int(64)[13]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[2158533]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2158535 'move' call_tmp[2158533](2158537 '*' a[1105448] b[1105450]))
    (1105543 return call_tmp[2158533])
  }
  function add[1105833](const in arg a[1105835]:int(64)[13], const in arg b[1105837]:int(64)[13]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[2072447]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2072449 'move' call_tmp[2072447](2072451 '+' a[1105835] b[1105837]))
    (1105930 return call_tmp[2072447])
  }
}