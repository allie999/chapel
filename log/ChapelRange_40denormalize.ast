AST dump for ChapelRange after pass denormalize.
Module use list: ChapelBase SysBasic HaltWrappers DSIUtil ChapelStandard SysCTypes 

{
  function chpl__init_ChapelRange[415951](const in arg _ln[2476606]:int(64)[13], in arg _fn[2476608]:int(32)[95]) : void[4] "fast on" "insert line file info" "local fn" "module init" "resolved"
  {
    if chpl__init_ChapelRange_p[2450626]
    {
      goto _exit_chpl__init_ChapelRange[2450663] _exit_chpl__init_ChapelRange[2450663]
    }
    ref refIndentLevel[2450649]:int(32)[95] "temp"
    (2450647 call printModuleInit[20426] c"%*s\n" c"ChapelRange" 11 _ln[2476606] _fn[2476608])
    (2450653 'move' refIndentLevel[2450649](2450652 'addr of' moduleInitLevel[20416]))
    (2450656 '+=' refIndentLevel[2450649] 1)
    (2450632 'move' chpl__init_ChapelRange_p[2450626] 1)
    {
      (2449647 call chpl__init_ChapelBase[415894] _ln[2476606] _fn[2476608])
      (2449649 call chpl__init_SysBasic[416104] _ln[2476606] _fn[2476608])
      (2449651 call chpl__init_HaltWrappers[416089] _ln[2476606] _fn[2476608])
      (2449653 call chpl__init_DSIUtil[416110] _ln[2476606] _fn[2476608])
      (2449655 call chpl__init_SysCTypes[415903] _ln[2476606] _fn[2476608])
    }
    (2450659 '-=' refIndentLevel[2450649] 1)
    label _exit_chpl__init_ChapelRange[2450663]
    (512121 return _void[55])
  }
  type BoundedRangeType[64213] def bounded[64205]:BoundedRangeType[64213] def boundedLow[64207]:BoundedRangeType[64213] def boundedHigh[64209]:BoundedRangeType[64213] def boundedNone[64211]:BoundedRangeType[64213]
  type range(byteIndex,bounded,false)[1025792] val _low[1025754]:int(64)[13] val _high[1025759]:int(64)[13]
  type range(byteIndex,boundedLow,false)[1143403] val _low[1143365]:int(64)[13] val _high[1143370]:int(64)[13]
  type range(byteIndex,boundedHigh,false)[1184919] val _low[1184881]:int(64)[13] val _high[1184886]:int(64)[13]
  type range(int(64),bounded,false)[1026814] val _low[1026776]:int(64)[13] val _high[1026781]:int(64)[13]
  type range(int(64),bounded,true)[1413447] val _low[1413409]:int(64)[13] val _high[1413414]:int(64)[13] val _stride[1413419]:int(64)[13] val _alignment[1413429]:int(64)[13] val _aligned[1413439]:bool[10]
  type range(int(64),boundedLow,false)[1087565] val _low[1087527]:int(64)[13] val _high[1087532]:int(64)[13]
  type range(int(64),boundedHigh,false)[1187429] val _low[1187391]:int(64)[13] val _high[1187396]:int(64)[13]
  function range(int(64),bounded,false)[1026814].init[1026037](ref arg this[1026043]:range(int(64),bounded,false)[1026814], const in arg _low[1026064]:int(64)[13], const in arg _high[1026073]:int(64)[13], const in arg _stride[1026081]:int(64)[13], const in arg _alignment[1026090]:int(64)[13], const in arg _aligned[1026094]:bool[10], const in arg _ln[2477316]:int(64)[13], in arg _fn[2477318]:int(32)[95]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1026335 '.=' this[1026043] _low[1026776] _low[1026064])
    (1026367 '.=' this[1026043] _high[1026781] _high[1026073])
    (1026650 call assert[210345](2117782 '==' _stride[1026081] 1) _ln[2477316] _fn[2477318])
    (1026653 return _void[55])
  }
  function range(byteIndex,bounded,false)[1025792].init[1028708](ref arg this[1028714]:range(byteIndex,bounded,false)[1025792], const  ref arg _low[1028735]:byteIndex[28170], const  ref arg _high[1028744]:byteIndex[28170], const in arg _stride[1028752]:int(64)[13], const  ref arg _alignment[1028761]:byteIndex[28170], const in arg _aligned[1028765]:bool[10], const in arg _ln[2477322]:int(64)[13], in arg _fn[2477324]:int(32)[95]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1028843 '.=' this[1028714] _low[1025754](2261744 '.v' _low[1028735] _bindex[28091]))
    (1028875 '.=' this[1028714] _high[1025759](2261754 '.v' _high[1028744] _bindex[28091]))
    (1029158 call assert[210345](2117797 '==' _stride[1028752] 1) _ln[2477322] _fn[2477324])
    (1029161 return _void[55])
  }
  function range(int(64),boundedLow,false)[1087565]._local_init[2406276](ref arg this[2406278]:range(int(64),boundedLow,false)[1087565], const in arg _low[2406280]:int(64)[13], const in arg _high[2406282]:int(64)[13], const in arg _stride[2406284]:int(64)[13], const in arg _alignment[2406286]:int(64)[13], const in arg _aligned[2406288]:bool[10], const in arg _ln[2485254]:int(64)[13], in arg _fn[2485256]:int(32)[95]) : void[4] "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (2406291 '.=' this[2406278] _low[1087527] _low[2406280])
    (2406295 '.=' this[2406278] _high[1087532] _high[2406282])
    (2406307 call _local_assert[2410596](2406303 '==' _stride[2406284] 1) _ln[2485254] _fn[2485256])
    (2406309 return _void[55])
  }
  function range(int(64),boundedLow,false)[1087565].init[1087012](ref arg this[1087018]:range(int(64),boundedLow,false)[1087565], const in arg _low[1087039]:int(64)[13], const in arg _high[1087048]:int(64)[13], const in arg _stride[1087056]:int(64)[13], const in arg _alignment[1087065]:int(64)[13], const in arg _aligned[1087069]:bool[10], const in arg _ln[2477328]:int(64)[13], in arg _fn[2477330]:int(32)[95]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1087138 '.=' this[1087018] _low[1087527] _low[1087039])
    (1087170 '.=' this[1087018] _high[1087532] _high[1087048])
    (1087453 call assert[210345](2117912 '==' _stride[1087056] 1) _ln[2477328] _fn[2477330])
    (1087456 return _void[55])
  }
  function range(byteIndex,boundedLow,false)[1143403].init[1142850](ref arg this[1142856]:range(byteIndex,boundedLow,false)[1143403], const  ref arg _low[1142877]:byteIndex[28170], const  ref arg _high[1142886]:byteIndex[28170], const in arg _stride[1142894]:int(64)[13], const  ref arg _alignment[1142903]:byteIndex[28170], const in arg _aligned[1142907]:bool[10], const in arg _ln[2477334]:int(64)[13], in arg _fn[2477336]:int(32)[95]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1142976 '.=' this[1142856] _low[1143365](2261800 '.v' _low[1142877] _bindex[28091]))
    (1143008 '.=' this[1142856] _high[1143370](2261810 '.v' _high[1142886] _bindex[28091]))
    (1143291 call assert[210345](2118042 '==' _stride[1142894] 1) _ln[2477334] _fn[2477336])
    (1143294 return _void[55])
  }
  function range(byteIndex,boundedHigh,false)[1184919].init[1184366](ref arg this[1184372]:range(byteIndex,boundedHigh,false)[1184919], const  ref arg _low[1184393]:byteIndex[28170], const  ref arg _high[1184402]:byteIndex[28170], const in arg _stride[1184410]:int(64)[13], const  ref arg _alignment[1184419]:byteIndex[28170], const in arg _aligned[1184423]:bool[10], const in arg _ln[2477340]:int(64)[13], in arg _fn[2477342]:int(32)[95]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1184492 '.=' this[1184372] _low[1184881](2261872 '.v' _low[1184393] _bindex[28091]))
    (1184524 '.=' this[1184372] _high[1184886](2261882 '.v' _high[1184402] _bindex[28091]))
    (1184807 call assert[210345](2118117 '==' _stride[1184410] 1) _ln[2477340] _fn[2477342])
    (1184810 return _void[55])
  }
  function range(int(64),boundedHigh,false)[1187429].init[1188713](ref arg this[1188719]:range(int(64),boundedHigh,false)[1187429], const in arg _low[1188740]:int(64)[13], const in arg _high[1188749]:int(64)[13], const in arg _stride[1188757]:int(64)[13], const in arg _alignment[1188766]:int(64)[13], const in arg _aligned[1188770]:bool[10], const in arg _ln[2477346]:int(64)[13], in arg _fn[2477348]:int(32)[95]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1188839 '.=' this[1188719] _low[1187391] _low[1188740])
    (1188871 '.=' this[1188719] _high[1187396] _high[1188749])
    (1189154 call assert[210345](2118132 '==' _stride[1188757] 1) _ln[2477346] _fn[2477348])
    (1189157 return _void[55])
  }
  function range(int(64),bounded,true)[1413447].init[1412886](ref arg this[1412892]:range(int(64),bounded,true)[1413447], const in arg _low[1412913]:int(64)[13], const in arg _high[1412922]:int(64)[13], const in arg _stride[1412930]:int(64)[13], const in arg _alignment[1412939]:int(64)[13], const in arg _aligned[1412943]:bool[10]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1413072 '.=' this[1412892] _low[1413409] _low[1412913])
    (1413104 '.=' this[1412892] _high[1413414] _high[1412922])
    (1413158 '.=' this[1412892] _stride[1413419] 0)
    (1413212 '.=' this[1412892] _alignment[1413429] 0)
    (1413252 '.=' this[1412892] _aligned[1413439] 0)
    (2373037 '.=' this[1412892] _stride[1413419] _stride[1412930])
    (2373043 '.=' this[1412892] _alignment[1413429] _alignment[1412939])
    (2373049 '.=' this[1412892] _aligned[1413439] _aligned[1412943])
    (1413390 return _void[55])
  }
  function range(int(64),bounded,false)[1026814]._local_init[2410627](ref arg this[2410629]:range(int(64),bounded,false)[1026814], const in arg _low[2410631]:int(64)[13], const in arg _high[2410633]:int(64)[13], const in arg _stride[2410635]:int(64)[13], const in arg _aligned[2410637]:bool[10]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (2410640 '.=' this[2410629] _low[1026776] _low[2410631])
    (2410644 '.=' this[2410629] _high[1026781] _high[2410633])
    (2410648 return _void[55])
  }
  function range(int(64),bounded,false)[1026814].init[1091264](ref arg this[1091270]:range(int(64),bounded,false)[1026814], const in arg _low[1091291]:int(64)[13], const in arg _high[1091300]:int(64)[13], const in arg _stride[1091302]:int(64)[13], const in arg _aligned[1091306]:bool[10]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1091936 '.=' this[1091270] _low[1026776] _low[1091291])
    (1091968 '.=' this[1091270] _high[1026781] _high[1091300])
    (1092134 return _void[55])
  }
  function range(int(64),bounded,false)[1026814]._local_init[2410799](ref arg this[2410801]:range(int(64),bounded,false)[1026814], const in arg _low[2410803]:int(64)[13], const in arg _high[2410805]:int(64)[13]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (2410808 '.=' this[2410801] _low[1026776] _low[2410803])
    (2410812 '.=' this[2410801] _high[1026781] _high[2410805])
    (2410816 return _void[55])
  }
  function range(int(64),bounded,false)[1026814].init[1094475](ref arg this[1094481]:range(int(64),bounded,false)[1026814], const in arg _low[1094502]:int(64)[13], const in arg _high[1094511]:int(64)[13]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1095075 '.=' this[1094481] _low[1026776] _low[1094502])
    (1095107 '.=' this[1094481] _high[1026781] _high[1094511])
    (1095273 return _void[55])
  }
  function chpl_build_bounded_range[455137](const in arg low[455144]:int(64)[13], const in arg high[455150]:int(64)[13], ref arg _retArg[1831823]:range(int(64),bounded,false)[1026814], const in arg _ln[2488682]:int(64)[13], in arg _fn[2488684]:int(32)[95]) : void[4] "fn returns via _retArg" "resolved" "fn synchronization free"
  {
    const-val call_tmp[616791]:range(int(64),bounded,false)[1026814] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1026025]:range(int(64),bounded,false)[1026814] "dead after last mention" "delay instantiation" "temp"
    (1026028 call init[1026037] initTemp[1026025] low[455144] high[455150] 1 0 0 _ln[2488682] _fn[2488684])
    (616794 'move' call_tmp[616791] initTemp[1026025])
    (1831825 '=' _retArg[1831823] call_tmp[616791])
    (1831827 return _void[55])
  }
  function _local_chpl_build_low_bounded_range[2403121](const in arg low[2403123]:int(64)[13], ref arg _retArg[2403125]:range(int(64),boundedLow,false)[1087565], const in arg _ln[2491124]:int(64)[13], in arg _fn[2491126]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[2403128]:range(int(64),boundedLow,false)[1087565] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[2403130]:range(int(64),boundedLow,false)[1087565] "dead after last mention" "delay instantiation" "temp"
    (2403133 call _local_init[2406276] initTemp[2403130] low[2403123] 0 1 0 0 _ln[2491124] _fn[2491126])
    (2403140 'move' call_tmp[2403128] initTemp[2403130])
    (2403143 '=' _retArg[2403125] call_tmp[2403128])
    (2403146 return _void[55])
  }
  function chpl_build_low_bounded_range[1086958](const in arg low[1086960]:int(64)[13], ref arg _retArg[1833629]:range(int(64),boundedLow,false)[1087565], const in arg _ln[2488752]:int(64)[13], in arg _fn[2488754]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[1086983]:range(int(64),boundedLow,false)[1087565] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1087001]:range(int(64),boundedLow,false)[1087565] "dead after last mention" "delay instantiation" "temp"
    (1087004 call init[1087012] initTemp[1087001] low[1086960] 0 1 0 0 _ln[2488752] _fn[2488754])
    (1086985 'move' call_tmp[1086983] initTemp[1087001])
    (1833631 '=' _retArg[1833629] call_tmp[1086983])
    (1833633 return _void[55])
  }
  function range(int(64),bounded,false)[1026814].alignment[1034251](const in arg this[1034257]:range(int(64),bounded,false)[1026814]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "no parens" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[2261430]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2433753 'move' coerce_tmp[2261430](2261434 '.v' this[1034257] _low[1026776]))
    (1034379 return coerce_tmp[2261430])
  }
  function range(int(64),boundedLow,false)[1087565].alignment[1128120](const in arg this[1128126]:range(int(64),boundedLow,false)[1087565]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "no parens" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[2271852]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2435000 'move' coerce_tmp[2271852](2271856 '.v' this[1128126] _low[1087527]))
    (1128248 return coerce_tmp[2271852])
  }
  function range(byteIndex,boundedLow,false)[1143403].alignment[1148238](const in arg this[1148244]:range(byteIndex,boundedLow,false)[1143403], ref arg _retArg[1834582]:byteIndex[28170]) : void[4] "fast on" "fn returns via _retArg" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "no parens" "resolved"
  {
    const-val coerce_tmp[2272541]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2435078 'move' coerce_tmp[2272541](2272545 '.v' this[1148244] _low[1143365]))
    const-val ret[2272548]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2272550]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2272553 call init[28097] cpi[2272550])
    (2272555 '.=' cpi[2272550] _bindex[28091] coerce_tmp[2272541])
    (2272559 'move' ret[2272548] cpi[2272550])
    (1834584 '=' _retArg[1834582] ret[2272548])
    (1834586 return _void[55])
  }
  function range(int(64),boundedHigh,false)[1187429].alignment[1190594](const in arg this[1190600]:range(int(64),boundedHigh,false)[1187429]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "no parens" "resolved" "fn synchronization free"
  {
    (1190624 return 0)
  }
  function range(byteIndex,boundedHigh,false)[1184919].alignment[1192661](const in arg this[1192667]:range(byteIndex,boundedHigh,false)[1184919], ref arg _retArg[1834904]:byteIndex[28170]) : void[4] "fast on" "fn returns via _retArg" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "no parens" "resolved"
  {
    const-val ret[2275596]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2275598]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2275601 call init[28097] cpi[2275598])
    (2275603 '.=' cpi[2275598] _bindex[28091] 0)
    (2275607 'move' ret[2275596] cpi[2275598])
    (1834906 '=' _retArg[1834904] ret[2275596])
    (1834908 return _void[55])
  }
  function range(int(64),bounded,false)[1026814]._local_size[2403216](const in arg this[2403218]:range(int(64),bounded,false)[1026814], const in arg _ln[2484410]:int(64)[13], in arg _fn[2484412]:int(32)[95]) : int(64)[13] "instantiated generic" "invisible fn" "local fn" "method" "no parens" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_71[2403221]:string[26] "temp"
    (2403223 'move' local__str_literal_71[2403221] "Attempt to divide by zero")
    val ret[2403226]:int(64)[13] "dead after last mention" "RVV" "temp"
    val ret[2403228]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2446985 'move' ret[2403228](2403232 '.v' this[2403218] _high[1026781]))
    val ret[2403235]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2446991 'move' ret[2403235](2403239 '.v' this[2403218] _low[1026776]))
    if(2403246 '>' ret[2403235] ret[2403228])
    {
      (2403251 'move' ret[2403226] 0)
      gotoReturn _end_size[2403294] _end_size[2403294]
    }
    const-val call_tmp[2403257]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2403259 'move' call_tmp[2403257](2403261 '-' ret[2403228] ret[2403235]))
    if(2403268 '==' 1 0)
    {
      (2403274 call _local_halt[2388583] local__str_literal_71[2403221] _ln[2484410] _fn[2484412])
    }
    const-val call_tmp[2403277]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2403279 'move' call_tmp[2403277](2403281 '/' call_tmp[2403257] 1))
    (2403291 'move' ret[2403226](2498178 'cast' int(64)[13](2403288 '+' call_tmp[2403277] 1)))
    label _end_size[2403294]
    (2403296 return ret[2403226])
  }
  function range(int(64),bounded,false)[1026814].size[1035789](const in arg this[1035795]:range(int(64),bounded,false)[1026814], const in arg _ln[2481576]:int(64)[13], in arg _fn[2481578]:int(32)[95]) : int(64)[13] "instantiated generic" "invisible fn" "method" "no parens" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_71[2378029]:string[26] "temp"
    (2378030 'move' "Attempt to divide by zero" "Attempt to divide by zero")
    val ret[1035802]:int(64)[13] "dead after last mention" "RVV" "temp"
    val ret[2262726]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2433993 'move' ret[2262726](2262730 '.v' this[1035795] _high[1026781]))
    val ret[2262758]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2433999 'move' ret[2262758](2262762 '.v' this[1035795] _low[1026776]))
    if(2124241 '>' ret[2262758] ret[2262726])
    {
      (1035907 'move' ret[1035802] 0)
      gotoReturn _end_size[1036011] _end_size[1036011]
    }
    const-val call_tmp[2127251]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2127253 'move' call_tmp[2127251](2127255 '-' ret[2262726] ret[2262758]))
    if(2212947 '==' 1 0)
    {
      (2212953 call halt[154067] "Attempt to divide by zero" _ln[2481576] _fn[2481578])
    }
    const-val call_tmp[2212956]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2212958 'move' call_tmp[2212956](2212960 '/' call_tmp[2127251] 1))
    (1036967 'move' ret[1035802](2497708 'cast' int(64)[13](2120481 '+' call_tmp[2212956] 1)))
    label _end_size[1036011]
    (1036013 return ret[1035802])
  }
  function range(int(64),bounded,true)[1413447].isAmbiguous[1415504](const in arg this[1415510]:range(int(64),bounded,true)[1413447]) : bool[10] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    val tmp[1415555]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2114567 '!'(2323841 '.v' this[1415510] _aligned[1413439]))
    {
      val tmp[1415602]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if(2124816 '>'(2322757 '.v' this[1415510] _stride[1413419]) 1)
      {
        (1415620 'move' tmp[1415602] 1)
      }
      {
        (1415656 'move' tmp[1415602](2323851 '<'(2322767 '.v' this[1415510] _stride[1413419]) -1))
      }
      (1415669 'move' tmp[1415555] tmp[1415602])
    }
    {
      (1415675 'move' tmp[1415555] 0)
    }
    (1415685 return tmp[1415555])
  }
  function ==[1041912](const in arg r1[1041914]:range(int(64),bounded,false)[1026814], const in arg r2[1041916]:range(int(64),bounded,false)[1026814], const in arg _ln[2490362]:int(64)[13], in arg _fn[2490364]:int(32)[95]) : bool[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1041941]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1042050]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1042052 'move' call_tmp[1042050](1042055 call size[1035789] r1[1041914] _ln[2490362] _fn[2490364]))
    const-val call_tmp[1042063]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1042065 'move' call_tmp[1042063](1042068 call size[1035789] r2[1041916] _ln[2490362] _fn[2490364]))
    if(2115359 '!=' call_tmp[1042050] call_tmp[1042063])
    {
      (1042094 'move' ret[1041941] 0)
      gotoReturn _end_==[1042411] _end_==[1042411]
    }
    if(2117852 '==' call_tmp[1042050] 0)
    {
      (1042119 'move' ret[1041941] 1)
      gotoReturn _end_==[1042411] _end_==[1042411]
    }
    if(2115369 '!='(2262905 '.v' r1[1041914] _low[1026776])(2262915 '.v' r2[1041916] _low[1026776]))
    {
      (1042160 'move' ret[1041941] 0)
      gotoReturn _end_==[1042411] _end_==[1042411]
    }
    if(2117867 '==' call_tmp[1042050] 1)
    {
      (1042185 'move' ret[1041941] 1)
      gotoReturn _end_==[1042411] _end_==[1042411]
    }
    (1042234 'move' ret[1041941] 1)
    label _end_==[1042411]
    (1042413 return ret[1041941])
  }
  function !=[1771704](const in arg r1[1771706]:range(int(64),bounded,false)[1026814], const in arg r2[1771708]:range(int(64),bounded,false)[1026814], const in arg _ln[2492284]:int(64)[13], in arg _fn[2492286]:int(32)[95]) : bool[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[1771720]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1771722 'move' call_tmp[1771720](1771725 call ==[1041912] r1[1771706] r2[1771708] _ln[2492284] _fn[2492286]))
    const-val call_tmp[2114725]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2114727 'move' call_tmp[2114725](2114729 '!' call_tmp[1771720]))
    (1771739 return call_tmp[2114725])
  }
  function range(int(64),bounded,false)[1026814].safeCast[1297017](const in arg this[1297023]:range(int(64),bounded,false)[1026814], ref arg _retArg[1837084]:range(int(64),bounded,false)[1026814], const in arg _ln[2488732]:int(64)[13], in arg _fn[2488734]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1297027]:range(int(64),bounded,false)[1026814] "dead after last mention" "RVV" "temp"
    val tmp[1297052]:range(int(64),bounded,false)[1026814] "dead at end of block" "insert auto destroy"
    (1297426 call init[1026037] tmp[1297052] 1 0 1 0 0 _ln[2488732] _fn[2488734])
    (2371829 '.=' tmp[1297052] _low[1026776](2371836 '.v' this[1297023] _low[1026776]))
    (2371843 '.=' tmp[1297052] _high[1026781](2371850 '.v' this[1297023] _high[1026781]))
    (1297358 'move' ret[1297027] tmp[1297052])
    (1837086 '=' _retArg[1837084] ret[1297027])
    (1837088 return _void[55])
  }
  function _cast[1027562](const in arg r[1027566]:range(int(64),bounded,false)[1026814], ref arg _retArg[1832623]:range(byteIndex,bounded,false)[1025792], const in arg _ln[2488740]:int(64)[13], in arg _fn[2488742]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved"
  {
    const-val ret[1027568]:range(byteIndex,bounded,false)[1025792] "dead after last mention" "RVV" "temp"
    val tmp[1027578]:range(byteIndex,bounded,false)[1025792] "dead at end of block" "insert auto destroy"
    const-val default_arg__low[1029751]:byteIndex[28170] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret[2261947]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2261949]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2261952 call init[28097] cpi[2261949])
    (2261954 '.=' cpi[2261949] _bindex[28091] 1)
    (2261958 'move' ret[2261947] cpi[2261949])
    (1832632 'move' default_arg__low[1029751] ret[2261947])
    const-val default_arg__high[1029803]:byteIndex[28170] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret[2261974]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2261976]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2261979 call init[28097] cpi[2261976])
    (2261981 '.=' cpi[2261976] _bindex[28091] 0)
    (2261985 'move' ret[2261974] cpi[2261976])
    (1832644 'move' default_arg__high[1029803] ret[2261974])
    const-val default_arg__alignment[1029876]:byteIndex[28170] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret[2262007]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2262009]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2262012 call init[28097] cpi[2262009])
    (2262014 '.=' cpi[2262009] _bindex[28091] 0)
    (2262018 'move' ret[2262007] cpi[2262009])
    (1832656 'move' default_arg__alignment[1029876] ret[2262007])
    (1028699 call init[1028708] tmp[1027578] default_arg__low[1029751] default_arg__high[1029803] 1 default_arg__alignment[1029876] 0 _ln[2488740] _fn[2488742])
    (2368999 '.=' tmp[1027578] _low[1025754](2261414 '.v' r[1027566] _low[1026776]))
    (2369006 '.=' tmp[1027578] _high[1025759](2261644 '.v' r[1027566] _high[1026781]))
    (1027837 'move' ret[1027568] tmp[1027578])
    (1832625 '=' _retArg[1832623] ret[1027568])
    (1832627 return _void[55])
  }
  function _cast[1032483](const in arg r[1032487]:range(byteIndex,bounded,false)[1025792], ref arg _retArg[1832731]:range(int(64),bounded,false)[1026814], const in arg _ln[2488690]:int(64)[13], in arg _fn[2488692]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1032489]:range(int(64),bounded,false)[1026814] "dead after last mention" "RVV" "temp"
    val tmp[1032499]:range(int(64),bounded,false)[1026814] "dead at end of block" "insert auto destroy"
    (1033043 call init[1026037] tmp[1032499] 1 0 1 0 0 _ln[2488690] _fn[2488692])
    const-val call_tmp[1032696]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2262121]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2433933 'move' coerce_tmp[2262121](2262125 '.v' r[1032487] _low[1025754]))
    const-val ret[2262128]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2262130]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2262133 call init[28097] cpi[2262130])
    (2262135 '.=' cpi[2262130] _bindex[28091] coerce_tmp[2262121])
    (2262139 'move' ret[2262128] cpi[2262130])
    (1832740 'move' call_tmp[1032696] ret[2262128])
    (2369084 '.=' tmp[1032499] _low[1026776](2123876 '.v' call_tmp[1032696] _bindex[28091]))
    const-val call_tmp[1032735]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2262229]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2433945 'move' coerce_tmp[2262229](2262233 '.v' r[1032487] _high[1025759]))
    const-val ret[2262236]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2262238]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2262241 call init[28097] cpi[2262238])
    (2262243 '.=' cpi[2262238] _bindex[28091] coerce_tmp[2262229])
    (2262247 'move' ret[2262236] cpi[2262238])
    (1832782 'move' call_tmp[1032735] ret[2262236])
    (2369093 '.=' tmp[1032499] _high[1026781](2123892 '.v' call_tmp[1032735] _bindex[28091]))
    (1032758 'move' ret[1032489] tmp[1032499])
    (1832733 '=' _retArg[1832731] ret[1032489])
    (1832735 return _void[55])
  }
  function _cast[1145813](const in arg r[1145817]:range(byteIndex,boundedLow,false)[1143403], ref arg _retArg[1834482]:range(int(64),boundedLow,false)[1087565], const in arg _ln[2488758]:int(64)[13], in arg _fn[2488760]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1145819]:range(int(64),boundedLow,false)[1087565] "dead after last mention" "RVV" "temp"
    val tmp[1145829]:range(int(64),boundedLow,false)[1087565] "dead at end of block" "insert auto destroy"
    (1146333 call init[1087012] tmp[1145829] 1 0 1 0 0 _ln[2488758] _fn[2488760])
    const-val call_tmp[1146026]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2272508]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2435072 'move' coerce_tmp[2272508](2272512 '.v' r[1145817] _low[1143365]))
    const-val ret[2272515]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2272517]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2272520 call init[28097] cpi[2272517])
    (2272522 '.=' cpi[2272517] _bindex[28091] coerce_tmp[2272508])
    (2272526 'move' ret[2272515] cpi[2272517])
    (1834491 'move' call_tmp[1146026] ret[2272515])
    (2370372 '.=' tmp[1145829] _low[1087527](2123958 '.v' call_tmp[1146026] _bindex[28091]))
    const-val call_tmp[1146065]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2272652]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2435090 'move' coerce_tmp[2272652](2272656 '.v' r[1145817] _high[1143370]))
    const-val ret[2272659]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2272661]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2272664 call init[28097] cpi[2272661])
    (2272666 '.=' cpi[2272661] _bindex[28091] coerce_tmp[2272652])
    (2272670 'move' ret[2272659] cpi[2272661])
    (1834533 'move' call_tmp[1146065] ret[2272659])
    (2370381 '.=' tmp[1145829] _high[1087532](2123974 '.v' call_tmp[1146065] _bindex[28091]))
    (1146088 'move' ret[1145819] tmp[1145829])
    (1834484 '=' _retArg[1834482] ret[1145819])
    (1834486 return _void[55])
  }
  function _cast[1187631](const in arg r[1187635]:range(byteIndex,boundedHigh,false)[1184919], ref arg _retArg[1834804]:range(int(64),boundedHigh,false)[1187429], const in arg _ln[2488776]:int(64)[13], in arg _fn[2488778]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1187637]:range(int(64),boundedHigh,false)[1187429] "dead after last mention" "RVV" "temp"
    val tmp[1187647]:range(int(64),boundedHigh,false)[1187429] "dead at end of block" "insert auto destroy"
    (1188704 call init[1188713] tmp[1187647] 1 0 1 0 0 _ln[2488776] _fn[2488778])
    const-val call_tmp[1187844]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2275631]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2435502 'move' coerce_tmp[2275631](2275635 '.v' r[1187635] _low[1184881]))
    const-val ret[2275638]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2275640]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2275643 call init[28097] cpi[2275640])
    (2275645 '.=' cpi[2275640] _bindex[28091] coerce_tmp[2275631])
    (2275649 'move' ret[2275638] cpi[2275640])
    (1834813 'move' call_tmp[1187844] ret[2275638])
    (2370713 '.=' tmp[1187647] _low[1187391](2124000 '.v' call_tmp[1187844] _bindex[28091]))
    const-val call_tmp[1187883]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2275761]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2435508 'move' coerce_tmp[2275761](2275765 '.v' r[1187635] _high[1184886]))
    const-val ret[2275768]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2275770]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2275773 call init[28097] cpi[2275770])
    (2275775 '.=' cpi[2275770] _bindex[28091] coerce_tmp[2275761])
    (2275779 'move' ret[2275768] cpi[2275770])
    (1834849 'move' call_tmp[1187883] ret[2275768])
    (2370722 '.=' tmp[1187647] _high[1187396](2124016 '.v' call_tmp[1187883] _bindex[28091]))
    (1187906 'move' ret[1187637] tmp[1187647])
    (1834806 '=' _retArg[1834804] ret[1187637])
    (1834808 return _void[55])
  }
  function range(int(64),bounded,false)[1026814].orderToIndex[1104040](const in arg this[1104046]:range(int(64),bounded,false)[1026814], const in arg ord[1104048]:int(64)[13], const in arg _ln[2478812]:int(64)[13], in arg _fn[2478814]:int(32)[95]) : int(64)[13] "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val local__str_literal_923[2378453]:string[26] "temp"
    (2378454 'move' " that is larger than the range's number of indices " " that is larger than the range's number of indices ")
    const-val local__str_literal_921[2378447]:string[26] "temp"
    (2378448 'move' "invoking orderToIndex on an integer " "invoking orderToIndex on an integer ")
    const-val local__str_literal_919[2378441]:string[26] "temp"
    (2378442 'move' "invoking orderToIndex on a negative integer: " "invoking orderToIndex on a negative integer: ")
    const-val local__str_literal_915[2378435]:string[26] "temp"
    (2378436 'move' "invoking orderToIndex on a range that has no first index" "invoking orderToIndex on a range that has no first index")
    val tmp[2270984]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2270981 '>'(2270967 '.v' this[1104046] _low[1026776])(2270974 '.v' this[1104046] _high[1026781]))
    {
      (2270988 'move' tmp[2270984] 0)
    }
    {
      (2270992 'move' tmp[2270984] 1)
    }
    if(2114234 '!' tmp[2270984])
    {
      (1104104 call boundsCheckHalt[210167] "invoking orderToIndex on a range that has no first index" _ln[2478812] _fn[2478814])
    }
    if(2116036 '<' ord[1104048] 0)
    {
      const-val call_tmp[1104154]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1833083]:string[26] "temp"
      (1104159 call _cast[1063153] ord[1104048] ret_tmp[1833083] _ln[2478812] _fn[2478814])
      (1833086 'move' call_tmp[1104154] ret_tmp[1833083])
      const-val call_tmp[1104162]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1830037]:string[26] "temp"
      wide-ref tmp[2415583]:string[26] "temp"
      (2415587 'move' tmp[2415583](2415585 'set reference' call_tmp[1104154]))
      (1104167 call +[38342] "invoking orderToIndex on a negative integer: " tmp[2415583] ret_tmp[1830037] _ln[2478812] _fn[2478814])
      (1830040 'move' call_tmp[1104162] ret_tmp[1830037])
      (1104171 call boundsCheckHalt[210167] call_tmp[1104162] _ln[2478812] _fn[2478814])
      ref i_x[2131161]:string[26] "temp"
      (2131165 'move' i_x[2131161](2131163 'set reference' call_tmp[1104162]))
      wide-ref tmp[2425536]:string[26] "temp"
      (2425539 'move' tmp[2425536] i_x[2131161])
      (2131169 call deinit[30831] tmp[2425536] _ln[2478812] _fn[2478814])
      ref i_x[2131173]:string[26] "temp"
      (2131177 'move' i_x[2131173](2131175 'set reference' call_tmp[1104154]))
      wide-ref tmp[2425542]:string[26] "temp"
      (2425545 'move' tmp[2425542] i_x[2131173])
      (2131181 call deinit[30831] tmp[2425542] _ln[2478812] _fn[2478814])
    }
    const-val call_tmp[1104216]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1104218 'move' call_tmp[1104216](1104221 call size[1035789] this[1104046] _ln[2478812] _fn[2478814]))
    if(2129033 '>=' ord[1104048] call_tmp[1104216])
    {
      const-val call_tmp[1104260]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1833089]:string[26] "temp"
      (1104265 call _cast[1063153] ord[1104048] ret_tmp[1833089] _ln[2478812] _fn[2478814])
      (1833092 'move' call_tmp[1104260] ret_tmp[1833089])
      const-val call_tmp[1104268]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1830043]:string[26] "temp"
      wide-ref tmp[2415590]:string[26] "temp"
      (2415594 'move' tmp[2415590](2415592 'set reference' call_tmp[1104260]))
      (1104273 call +[38342] "invoking orderToIndex on an integer " tmp[2415590] ret_tmp[1830043] _ln[2478812] _fn[2478814])
      (1830046 'move' call_tmp[1104268] ret_tmp[1830043])
      const-val call_tmp[1104276]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1830049]:string[26] "temp"
      wide-ref tmp[2415597]:string[26] "temp"
      (2415601 'move' tmp[2415597](2415599 'set reference' " that is larger than the range's number of indices "))
      (1104281 call +[38342] call_tmp[1104268] tmp[2415597] ret_tmp[1830049] _ln[2478812] _fn[2478814])
      (1830052 'move' call_tmp[1104276] ret_tmp[1830049])
      const-val call_tmp[1104284]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1104286 'move' call_tmp[1104284](1104289 call size[1035789] this[1104046] _ln[2478812] _fn[2478814]))
      const-val call_tmp[1104292]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1833095]:string[26] "temp"
      (1104297 call _cast[1063153] call_tmp[1104284] ret_tmp[1833095] _ln[2478812] _fn[2478814])
      (1833098 'move' call_tmp[1104292] ret_tmp[1833095])
      const-val call_tmp[1104300]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1830055]:string[26] "temp"
      wide-ref tmp[2415604]:string[26] "temp"
      (2415608 'move' tmp[2415604](2415606 'set reference' call_tmp[1104292]))
      (1104305 call +[38342] call_tmp[1104276] tmp[2415604] ret_tmp[1830055] _ln[2478812] _fn[2478814])
      (1830058 'move' call_tmp[1104300] ret_tmp[1830055])
      (1104309 call boundsCheckHalt[210167] call_tmp[1104300] _ln[2478812] _fn[2478814])
      ref i_x[2131185]:string[26] "temp"
      (2131189 'move' i_x[2131185](2131187 'set reference' call_tmp[1104300]))
      wide-ref tmp[2425548]:string[26] "temp"
      (2425551 'move' tmp[2425548] i_x[2131185])
      (2131193 call deinit[30831] tmp[2425548] _ln[2478812] _fn[2478814])
      ref i_x[2131197]:string[26] "temp"
      (2131201 'move' i_x[2131197](2131199 'set reference' call_tmp[1104292]))
      wide-ref tmp[2425554]:string[26] "temp"
      (2425557 'move' tmp[2425554] i_x[2131197])
      (2131205 call deinit[30831] tmp[2425554] _ln[2478812] _fn[2478814])
      ref i_x[2131209]:string[26] "temp"
      (2131213 'move' i_x[2131209](2131211 'set reference' call_tmp[1104276]))
      wide-ref tmp[2425560]:string[26] "temp"
      (2425563 'move' tmp[2425560] i_x[2131209])
      (2131217 call deinit[30831] tmp[2425560] _ln[2478812] _fn[2478814])
      ref i_x[2131221]:string[26] "temp"
      (2131225 'move' i_x[2131221](2131223 'set reference' call_tmp[1104268]))
      wide-ref tmp[2425566]:string[26] "temp"
      (2425569 'move' tmp[2425566] i_x[2131221])
      (2131229 call deinit[30831] tmp[2425566] _ln[2478812] _fn[2478814])
      ref i_x[2131233]:string[26] "temp"
      (2131237 'move' i_x[2131233](2131235 'set reference' call_tmp[1104260]))
      wide-ref tmp[2425572]:string[26] "temp"
      (2425575 'move' tmp[2425572] i_x[2131233])
      (2131241 call deinit[30831] tmp[2425572] _ln[2478812] _fn[2478814])
    }
    const-val call_tmp[1104331]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1104333 'move' call_tmp[1104331](1104336 call chpl__addRangeStrides[1105027](2262893 '.v' this[1104046] _low[1026776]) 1 ord[1104048]))
    (1104363 return call_tmp[1104331])
  }
  function chpl_by_help[1412169](const in arg r[1412171]:range(int(64),bounded,false)[1026814], const in arg step[1412173]:int(64)[13], ref arg _retArg[1838414]:range(int(64),bounded,true)[1413447]) : void[4] "fast on" "fn returns via _retArg" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[2285353]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2285355 'move' call_tmp[2285353](2285357 '*' 1 step[1412173]))
    val tmp_x0[2352707]:bool[10] "temp"
    val tmp_x1[2352709]:int(64)[13] "temp"
    if(2124771 '>' call_tmp[2285353] 0)
    {
      (2352715 'move' tmp_x0[2352707] 1)
      (2352720 'move' tmp_x1[2352709](2270866 '.v' r[1412171] _low[1026776]))
    }
    {
      val tmp_x0[2352749]:bool[10] "temp"
      val tmp_x1[2352751]:int(64)[13] "temp"
      if(2116156 '<' call_tmp[2285353] 0)
      {
        (2352757 'move' tmp_x0[2352749] 1)
        (2352762 'move' tmp_x1[2352751](2270916 '.v' r[1412171] _high[1026781]))
      }
      {
        (2352767 'move' tmp_x0[2352749] 0)
        (2352772 'move' tmp_x1[2352751] 0)
      }
      (2352725 'move' tmp_x0[2352707] tmp_x0[2352749])
      (2352730 'move' tmp_x1[2352709] tmp_x1[2352751])
    }
    (1412673 'noop')
    (1412691 'noop')
    (1412703 'noop')
    const-val call_tmp[1412721]:range(int(64),bounded,true)[1413447] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1412871]:range(int(64),bounded,true)[1413447] "dead after last mention" "delay instantiation" "temp"
    (1412874 call init[1412886] initTemp[1412871](2261574 '.v' r[1412171] _low[1026776])(2261734 '.v' r[1412171] _high[1026781]) call_tmp[2285353] tmp_x1[2352709] tmp_x0[2352707])
    (1412723 'move' call_tmp[1412721] initTemp[1412871])
    (1838416 '=' _retArg[1838414] call_tmp[1412721])
    (1838418 return _void[55])
  }
  function range(int(64),bounded,false)[1026814].this[1037448](const in arg this[1037454]:range(int(64),bounded,false)[1026814], const in arg other[1037456]:range(int(64),bounded,false)[1026814], ref arg _retArg[1832821]:range(int(64),bounded,false)[1026814], const in arg _ln[2488696]:int(64)[13], in arg _fn[2488698]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[1039938]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2415105 'move' coerce_tmp[1039938](2369117 '.v' this[1037454] _low[1026776]))
    (1038047 'noop')
    const-val coerce_tmp[1039951]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2415111 'move' coerce_tmp[1039951](2369127 '.v' this[1037454] _high[1026781]))
    (1038101 'noop')
    const-val coerce_tmp[1039968]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2415117 'move' coerce_tmp[1039968](2369137 '.v' other[1037456] _low[1026776]))
    (1038176 'noop')
    const-val coerce_tmp[1039981]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2415123 'move' coerce_tmp[1039981](2369147 '.v' other[1037456] _high[1026781]))
    (1038230 'noop')
    const-val ret_tmp[1832827]:2*int(64)[1040056] "temp"
    (2364340 'set svec member' ret_tmp[1832827] 0 1)
    (2364344 'set svec member' ret_tmp[1832827] 1 0)
    (1038417 'noop')
    (1038429 'noop')
    val tmp[2194007]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2194013 '>' coerce_tmp[1039938] coerce_tmp[1039968])
    {
      (2194018 'move' tmp[2194007] coerce_tmp[1039938])
    }
    {
      (2194022 'move' tmp[2194007] coerce_tmp[1039968])
    }
    val tmp[2153524]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2153530 '<' coerce_tmp[1039951] coerce_tmp[1039981])
    {
      (2153535 'move' tmp[2153524] coerce_tmp[1039951])
    }
    {
      (2153539 'move' tmp[2153524] coerce_tmp[1039981])
    }
    (2376756 'noop')
    val tmp[1039161]:bool[10] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2114207 '!' 0)
    {
      (1039252 'move' tmp[1039161] 1)
    }
    {
      (1039258 'move' tmp[1039161] 0)
    }
    const-val call_tmp[1039334]:range(int(64),bounded,false)[1026814] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1041828]:range(int(64),bounded,false)[1026814] "dead at end of block" "delay instantiation" "temp"
    (1041831 call init[1026037] initTemp[1041828] tmp[2194007] tmp[2153524] 1 0 tmp[1039161] _ln[2488696] _fn[2488698])
    (1039336 'move' call_tmp[1039334] initTemp[1041828])
    (1832823 '=' _retArg[1832821] call_tmp[1039334])
    (1832825 return _void[55])
  }
  function range(int(64),boundedLow,false)[1087565].this[1138969](const in arg this[1138975]:range(int(64),boundedLow,false)[1087565], const in arg other[1138977]:range(int(64),bounded,false)[1026814], ref arg _retArg[1834330]:range(int(64),bounded,false)[1026814], const in arg _ln[2488710]:int(64)[13], in arg _fn[2488712]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[1141459]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2415713 'move' coerce_tmp[1141459](2370304 '.v' this[1138975] _low[1087527]))
    (1139568 'noop')
    const-val coerce_tmp[1141472]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2415719 'move' coerce_tmp[1141472](2370314 '.v' other[1138977] _high[1026781]))
    (1139622 'noop')
    const-val coerce_tmp[1141489]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2415725 'move' coerce_tmp[1141489](2370324 '.v' other[1138977] _low[1026776]))
    (1139697 'noop')
    const-val coerce_tmp[1141502]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2415731 'move' coerce_tmp[1141502](2370334 '.v' other[1138977] _high[1026781]))
    (1139751 'noop')
    const-val ret_tmp[1832845]:2*int(64)[1040056] "temp"
    (2364354 'set svec member' ret_tmp[1832845] 0 1)
    (2364358 'set svec member' ret_tmp[1832845] 1 0)
    (1139938 'noop')
    (1139950 'noop')
    val tmp[2194029]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2194035 '>' coerce_tmp[1141459] coerce_tmp[1141489])
    {
      (2194040 'move' tmp[2194029] coerce_tmp[1141459])
    }
    {
      (2194044 'move' tmp[2194029] coerce_tmp[1141489])
    }
    val tmp[2153546]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2153552 '<' coerce_tmp[1141472] coerce_tmp[1141502])
    {
      (2153557 'move' tmp[2153546] coerce_tmp[1141472])
    }
    {
      (2153561 'move' tmp[2153546] coerce_tmp[1141502])
    }
    (2376757 'noop')
    val tmp[1140682]:bool[10] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2114261 '!' 0)
    {
      (1140773 'move' tmp[1140682] 1)
    }
    {
      (1140779 'move' tmp[1140682] 0)
    }
    const-val call_tmp[1140855]:range(int(64),bounded,false)[1026814] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1141943]:range(int(64),bounded,false)[1026814] "dead at end of block" "delay instantiation" "temp"
    (1141946 call init[1026037] initTemp[1141943] tmp[2194029] tmp[2153546] 1 0 tmp[1140682] _ln[2488710] _fn[2488712])
    (1140857 'move' call_tmp[1140855] initTemp[1141943])
    (1834332 '=' _retArg[1834330] call_tmp[1140855])
    (1834334 return _void[55])
  }
  function range(int(64),boundedHigh,false)[1187429].this[1200349](const in arg this[1200355]:range(int(64),boundedHigh,false)[1187429], const in arg other[1200357]:range(int(64),bounded,false)[1026814], ref arg _retArg[1834928]:range(int(64),bounded,false)[1026814], const in arg _ln[2488720]:int(64)[13], in arg _fn[2488722]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[1202839]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2416079 'move' coerce_tmp[1202839](2370787 '.v' other[1200357] _low[1026776]))
    (1200948 'noop')
    const-val coerce_tmp[1202852]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2416085 'move' coerce_tmp[1202852](2370797 '.v' this[1200355] _high[1187396]))
    (1201002 'noop')
    const-val coerce_tmp[1202869]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2416091 'move' coerce_tmp[1202869](2370807 '.v' other[1200357] _low[1026776]))
    (1201077 'noop')
    const-val coerce_tmp[1202882]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2416097 'move' coerce_tmp[1202882](2370817 '.v' other[1200357] _high[1026781]))
    (1201131 'noop')
    const-val ret_tmp[1832851]:2*int(64)[1040056] "temp"
    (2364368 'set svec member' ret_tmp[1832851] 0 1)
    (2364372 'set svec member' ret_tmp[1832851] 1 0)
    (1201318 'noop')
    (1201330 'noop')
    val tmp[2194051]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2194057 '>' coerce_tmp[1202839] coerce_tmp[1202869])
    {
      (2194062 'move' tmp[2194051] coerce_tmp[1202839])
    }
    {
      (2194066 'move' tmp[2194051] coerce_tmp[1202869])
    }
    val tmp[2153568]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2153574 '<' coerce_tmp[1202852] coerce_tmp[1202882])
    {
      (2153579 'move' tmp[2153568] coerce_tmp[1202852])
    }
    {
      (2153583 'move' tmp[2153568] coerce_tmp[1202882])
    }
    (2376758 'noop')
    val tmp[1202062]:bool[10] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2114288 '!' 0)
    {
      (1202153 'move' tmp[1202062] 1)
    }
    {
      (1202159 'move' tmp[1202062] 0)
    }
    const-val call_tmp[1202235]:range(int(64),bounded,false)[1026814] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1203550]:range(int(64),bounded,false)[1026814] "dead at end of block" "delay instantiation" "temp"
    (1203553 call init[1026037] initTemp[1203550] tmp[2194051] tmp[2153568] 1 0 tmp[1202062] _ln[2488720] _fn[2488722])
    (1202237 'move' call_tmp[1202235] initTemp[1203550])
    (1834930 '=' _retArg[1834928] call_tmp[1202235])
    (1834932 return _void[55])
  }
  function _local_chpl_count_help[2406313](const in arg r[2406315]:range(int(64),boundedLow,false)[1087565], const in arg count[2406317]:int(64)[13], ref arg _retArg[2406319]:range(int(64),bounded,false)[1026814], const in arg _ln[2490730]:int(64)[13], in arg _fn[2490732]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_978[2406322]:string[26] "temp"
    (2406324 'move' local__str_literal_978[2406322] "With a negative count, the range must have a last index.")
    val ret[2406327]:range(int(64),bounded,false)[1026814] "dead after last mention" "RVV" "temp"
    if(2406333 '==' count[2406317] 0)
    {
      const-val coerce_tmp[2406338]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2447402 'move' coerce_tmp[2406338](2406342 '.v' r[2406315] _low[1087527]))
      const-val call_tmp[2406345]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2406347 'move' call_tmp[2406345](2406350 call _local_absSameType[2410616] 1))
      const-val call_tmp[2406366]:range(int(64),bounded,false)[1026814] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2406368]:range(int(64),bounded,false)[1026814] "dead after last mention" "delay instantiation" "temp"
      (2406371 call _local_init[2410627] initTemp[2406368] coerce_tmp[2406338](2498192 'cast' int(64)[13](2406363 '-'(2406356 '.v' r[2406315] _low[1087527]) call_tmp[2406345])) 1 1)
      (2406377 'move' call_tmp[2406366] initTemp[2406368])
      (2406380 'move' ret[2406327] call_tmp[2406366])
      gotoReturn _end_chpl_count_help[2406526] _end_chpl_count_help[2406526]
    }
    (2406386 'noop')
    val tmp[2406393]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2406391 '!' 0)
    {
      (2406404 'move' tmp[2406393](2406401 '<' count[2406317] 0))
    }
    {
      (2406408 'move' tmp[2406393] 0)
    }
    if tmp[2406393]
    {
      (2406415 call _local_boundsCheckHalt[2390762] local__str_literal_978[2406322] _ln[2490730] _fn[2490732])
    }
    const-val call_tmp[2406418]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2406420 'move' call_tmp[2406418](2406422 '*' count[2406317] 1))
    val tmp[2406425]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2406431 '>' call_tmp[2406418] 0)
    {
      (2447414 'move' tmp[2406425](2406438 '.v' r[2406315] _low[1087527]))
    }
    {
      const-val tmp[2406442]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      (2406458 'move' tmp[2406442](2406461 call _local_chpl__add[2410653](2406455 '.v' r[2406315] _high[1087532])(2498194 'cast' int(64)[13](2406448 '+' call_tmp[2406418] 1))))
      (2406464 'move' tmp[2406425] tmp[2406442])
    }
    val tmp[2406468]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2406474 '<' call_tmp[2406418] 0)
    {
      (2447426 'move' tmp[2406468](2406481 '.v' r[2406315] _high[1087532]))
    }
    {
      const-val tmp[2406485]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      (2406501 'move' tmp[2406485](2406504 call _local_chpl__add[2410653](2406498 '.v' r[2406315] _low[1087527])(2498196 'cast' int(64)[13](2406491 '-' call_tmp[2406418] 1))))
      (2406507 'move' tmp[2406468] tmp[2406485])
    }
    const-val call_tmp[2406511]:range(int(64),bounded,false)[1026814] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[2406513]:range(int(64),bounded,false)[1026814] "dead after last mention" "delay instantiation" "temp"
    (2406516 call _local_init[2410799] initTemp[2406513] tmp[2406425] tmp[2406468])
    (2406520 'move' call_tmp[2406511] initTemp[2406513])
    (2406523 'move' ret[2406327] call_tmp[2406511])
    label _end_chpl_count_help[2406526]
    (2406528 '=' _retArg[2406319] ret[2406327])
    (2406531 return _void[55])
  }
  function chpl_count_help[1088316](const in arg r[1088318]:range(int(64),boundedLow,false)[1087565], const in arg count[1088320]:int(64)[13], ref arg _retArg[1833731]:range(int(64),bounded,false)[1026814], const in arg _ln[2490152]:int(64)[13], in arg _fn[2490154]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_978[2378423]:string[26] "temp"
    (2378424 'move' "With a negative count, the range must have a last index." "With a negative count, the range must have a last index.")
    val ret[1088322]:range(int(64),bounded,false)[1026814] "dead after last mention" "RVV" "temp"
    if(2117927 '==' count[1088320] 0)
    {
      const-val coerce_tmp[1090713]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2415526 'move' coerce_tmp[1090713](2369528 '.v' r[1088318] _low[1087527]))
      const-val call_tmp[1088620]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1088622 'move' call_tmp[1088620](1088625 call absSameType[1090842] 1))
      const-val call_tmp[1088683]:range(int(64),bounded,false)[1026814] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[1091241]:range(int(64),bounded,false)[1026814] "dead after last mention" "delay instantiation" "temp"
      (1091244 call init[1091264] initTemp[1091241] coerce_tmp[1090713](2497716 'cast' int(64)[13](2127265 '-'(2369535 '.v' r[1088318] _low[1087527]) call_tmp[1088620])) 1 1)
      (1088685 'move' call_tmp[1088683] initTemp[1091241])
      (1088705 'move' ret[1088322] call_tmp[1088683])
      gotoReturn _end_chpl_count_help[1090288] _end_chpl_count_help[1090288]
    }
    (2270569 'noop')
    val tmp[1089128]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2114225 '!' 0)
    {
      (1089161 'move' tmp[1089128](2115976 '<' count[1088320] 0))
    }
    {
      (1089167 'move' tmp[1089128] 0)
    }
    if tmp[1089128]
    {
      (1089183 call boundsCheckHalt[210167] "With a negative count, the range must have a last index." _ln[2490152] _fn[2490154])
    }
    const-val call_tmp[2270576]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2270578 'move' call_tmp[2270576](2270580 '*' count[1088320] 1))
    val tmp[1089690]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2124256 '>' call_tmp[2270576] 0)
    {
      (2415550 'move' tmp[1089690](2369542 '.v' r[1088318] _low[1087527]))
    }
    {
      const-val tmp[1089723]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      (1089757 'move' tmp[1089723](1089760 call chpl__add[1093372](2369552 '.v' r[1088318] _high[1087532])(2497712 'cast' int(64)[13](2120511 '+' call_tmp[2270576] 1))))
      (1089764 'move' tmp[1089690] tmp[1089723])
    }
    val tmp[1089777]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2116006 '<' call_tmp[2270576] 0)
    {
      (2415556 'move' tmp[1089777](2369559 '.v' r[1088318] _high[1087532]))
    }
    {
      const-val tmp[1089810]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      (1089844 'move' tmp[1089810](1089847 call chpl__add[1093372](2369569 '.v' r[1088318] _low[1087527])(2497714 'cast' int(64)[13](2144374 '-' call_tmp[2270576] 1))))
      (1089851 'move' tmp[1089777] tmp[1089810])
    }
    const-val call_tmp[1090256]:range(int(64),bounded,false)[1026814] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1094452]:range(int(64),bounded,false)[1026814] "dead after last mention" "delay instantiation" "temp"
    (1094455 call init[1094475] initTemp[1094452] tmp[1089690] tmp[1089777])
    (1090258 'move' call_tmp[1090256] initTemp[1094452])
    (1090278 'move' ret[1088322] call_tmp[1090256])
    label _end_chpl_count_help[1090288]
    (1833733 '=' _retArg[1833731] ret[1088322])
    (1833735 return _void[55])
  }
  function _local_#[2403150](const in arg r[2403152]:range(int(64),boundedLow,false)[1087565], const in arg count[2403154]:int(64)[13], ref arg _retArg[2403156]:range(int(64),bounded,false)[1026814], const in arg _ln[2492346]:int(64)[13], in arg _fn[2492348]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[2403159]:range(int(64),bounded,false)[1026814] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2403161]:range(int(64),bounded,false)[1026814] "temp"
    (2403164 call _local_chpl_count_help[2406313] r[2403152] count[2403154] ret_tmp[2403161] _ln[2492346] _fn[2492348])
    (2403168 'move' call_tmp[2403159] ret_tmp[2403161])
    (2403171 '=' _retArg[2403156] call_tmp[2403159])
    (2403174 return _void[55])
  }
  function #[1087925](const in arg r[1087927]:range(int(64),boundedLow,false)[1087565], const in arg count[1087940]:int(64)[13], ref arg _retArg[1833719]:range(int(64),bounded,false)[1026814], const in arg _ln[2492136]:int(64)[13], in arg _fn[2492138]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[1088171]:range(int(64),bounded,false)[1026814] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1833725]:range(int(64),bounded,false)[1026814] "temp"
    (1088176 call chpl_count_help[1088316] r[1087927] count[1087940] ret_tmp[1833725] _ln[2492136] _fn[2492138])
    (1833728 'move' call_tmp[1088171] ret_tmp[1833725])
    (1833721 '=' _retArg[1833719] call_tmp[1088171])
    (1833723 return _void[55])
  }
  function _local_chpl_checkIfRangeIterWillOverflow[2405242](const in arg low[2405244]:int(32)[95], const in arg high[2405246]:int(32)[95], const in arg stride[2405248]:int(64)[13], const in arg first[2405250]:int(32)[95], const in arg last[2405252]:int(32)[95], const in arg shouldHalt[2405254]:bool[10], const in arg _ln[2467278]:int(64)[13], in arg _fn[2467280]:int(32)[95]) : bool[10] "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_992[2405257]:string[26] "temp"
    (2405259 'move' local__str_literal_992[2405257] "Iteration over a bounded range may be incorrect due to overflow.")
    val ret[2405262]:bool[10] "dead after last mention" "RVV" "temp"
    if(2405268 '>' low[2405244] high[2405246])
    {
      (2405273 'move' ret[2405262] 0)
      gotoReturn _end_chpl_checkIfRangeIterWillOverflow[2405432] _end_chpl_checkIfRangeIterWillOverflow[2405432]
    }
    val willOverFlow[2405279]:bool[10] "dead at end of block" "insert auto destroy"
    (2405281 'move' willOverFlow[2405279] 0)
    val tmp[2405298]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2405295 '>' last[2405252](2405288 'cast' int(32)[95] 0 _ln[2467278] _fn[2467280]))
    {
      (2405309 'move' tmp[2405298](2405306 '>' stride[2405248] 0))
    }
    {
      (2405313 'move' tmp[2405298] 0)
    }
    if tmp[2405298]
    {
      if(2405337 '>' stride[2405248](2405330 'cast' int(64)[13](2498182 'cast' int(32)[95](2405323 '-' 2147483647 last[2405252])) _ln[2467278] _fn[2467280]))
      {
        (2405342 '=' willOverFlow[2405279] 1)
      }
    }
    {
      val tmp[2405361]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if(2405358 '<' last[2405252](2405351 'cast' int(32)[95] 0 _ln[2467278] _fn[2467280]))
      {
        (2405372 'move' tmp[2405361](2405369 '<' stride[2405248] 0))
      }
      {
        (2405376 'move' tmp[2405361] 0)
      }
      if tmp[2405361]
      {
        if(2405400 '<' stride[2405248](2405393 'cast' int(64)[13](2498184 'cast' int(32)[95](2405386 '-' -2147483648 last[2405252])) _ln[2467278] _fn[2467280]))
        {
          (2405405 '=' willOverFlow[2405279] 1)
        }
      }
    }
    val tmp[2405411]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if willOverFlow[2405279]
    {
      (2405415 'move' tmp[2405411] shouldHalt[2405254])
    }
    {
      (2405419 'move' tmp[2405411] 0)
    }
    if tmp[2405411]
    {
      (2405426 call _local_boundsCheckHalt[2390762] local__str_literal_992[2405257] _ln[2467278] _fn[2467280])
    }
    (2405429 'move' ret[2405262] willOverFlow[2405279])
    label _end_chpl_checkIfRangeIterWillOverflow[2405432]
    (2405434 return ret[2405262])
  }
  function chpl_checkIfRangeIterWillOverflow[976350](const in arg low[976354]:int(32)[95], const in arg high[976356]:int(32)[95], const in arg stride[976358]:int(64)[13], const in arg first[976364]:int(32)[95], const in arg last[976370]:int(32)[95], const in arg shouldHalt[976376]:bool[10], const in arg _ln[2460368]:int(64)[13], in arg _fn[2460370]:int(32)[95]) : bool[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_992[2377797]:string[26] "temp"
    (2377798 'move' "Iteration over a bounded range may be incorrect due to overflow." "Iteration over a bounded range may be incorrect due to overflow.")
    val ret[976378]:bool[10] "dead after last mention" "RVV" "temp"
    if(2212243 '>' low[976354] high[976356])
    {
      (976409 'move' ret[976378] 0)
      gotoReturn _end_chpl_checkIfRangeIterWillOverflow[976890] _end_chpl_checkIfRangeIterWillOverflow[976890]
    }
    val willOverFlow[976416]:bool[10] "dead at end of block" "insert auto destroy"
    (976418 'move' willOverFlow[976416] 0)
    val tmp[976459]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2212253 '>' last[976370](977000 'cast' int(32)[95] 0 _ln[2460368] _fn[2460370]))
    {
      (976492 'move' tmp[976459](2124201 '>' stride[976358] 0))
    }
    {
      (976498 'move' tmp[976459] 0)
    }
    if tmp[976459]
    {
      if(2124211 '>' stride[976358](977160 'cast' int(64)[13](2497654 'cast' int(32)[95](2212547 '-' 2147483647 last[976370])) _ln[2460368] _fn[2460370]))
      {
        (2134872 '=' willOverFlow[976416] 1)
      }
    }
    {
      val tmp[976574]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if(2212173 '<' last[976370](977170 'cast' int(32)[95] 0 _ln[2460368] _fn[2460370]))
      {
        (976607 'move' tmp[976574](2115956 '<' stride[976358] 0))
      }
      {
        (976613 'move' tmp[976574] 0)
      }
      if tmp[976574]
      {
        if(2128326 '<' stride[976358](977788 'cast' int(64)[13](2497656 'cast' int(32)[95](2212562 '-' -2147483648 last[976370])) _ln[2460368] _fn[2460370]))
        {
          (2134889 '=' willOverFlow[976416] 1)
        }
      }
    }
    val tmp[976828]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if willOverFlow[976416]
    {
      (976853 'move' tmp[976828] shouldHalt[976376])
    }
    {
      (976859 'move' tmp[976828] 0)
    }
    if tmp[976828]
    {
      (976877 call boundsCheckHalt[210167] "Iteration over a bounded range may be incorrect due to overflow." _ln[2460368] _fn[2460370])
    }
    (976882 'move' ret[976378] willOverFlow[976416])
    label _end_chpl_checkIfRangeIterWillOverflow[976890]
    (976892 return ret[976378])
  }
  function _local_chpl_checkIfRangeIterWillOverflow[2388415](const in arg low[2388417]:int(64)[13], const in arg high[2388419]:int(64)[13], const in arg stride[2388421]:int(64)[13], const in arg first[2388423]:int(64)[13], const in arg last[2388425]:int(64)[13], const in arg shouldHalt[2388427]:bool[10], const in arg _ln[2490672]:int(64)[13], in arg _fn[2490674]:int(32)[95]) : bool[10] "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_992[2388430]:string[26] "temp"
    (2388432 'move' local__str_literal_992[2388430] "Iteration over a bounded range may be incorrect due to overflow.")
    val ret[2388435]:bool[10] "dead after last mention" "RVV" "temp"
    if(2388441 '>' low[2388417] high[2388419])
    {
      (2388446 'move' ret[2388435] 0)
      gotoReturn _end_chpl_checkIfRangeIterWillOverflow[2388577] _end_chpl_checkIfRangeIterWillOverflow[2388577]
    }
    val willOverFlow[2388452]:bool[10] "dead at end of block" "insert auto destroy"
    (2388454 'move' willOverFlow[2388452] 0)
    val tmp[2388464]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2388461 '>' last[2388425] 0)
    {
      (2388475 'move' tmp[2388464](2388472 '>' stride[2388421] 0))
    }
    {
      (2388479 'move' tmp[2388464] 0)
    }
    if tmp[2388464]
    {
      if(2388496 '>' stride[2388421](2498084 'cast' int(64)[13](2388489 '-' 9223372036854775807 last[2388425])))
      {
        (2388501 '=' willOverFlow[2388452] 1)
      }
    }
    {
      val tmp[2388513]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if(2388510 '<' last[2388425] 0)
      {
        (2388524 'move' tmp[2388513](2388521 '<' stride[2388421] 0))
      }
      {
        (2388528 'move' tmp[2388513] 0)
      }
      if tmp[2388513]
      {
        if(2388545 '<' stride[2388421](2498086 'cast' int(64)[13](2388538 '-' -9223372036854775808 last[2388425])))
        {
          (2388550 '=' willOverFlow[2388452] 1)
        }
      }
    }
    val tmp[2388556]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if willOverFlow[2388452]
    {
      (2388560 'move' tmp[2388556] shouldHalt[2388427])
    }
    {
      (2388564 'move' tmp[2388556] 0)
    }
    if tmp[2388556]
    {
      (2388571 call _local_boundsCheckHalt[2390762] local__str_literal_992[2388430] _ln[2490672] _fn[2490674])
    }
    (2388574 'move' ret[2388435] willOverFlow[2388452])
    label _end_chpl_checkIfRangeIterWillOverflow[2388577]
    (2388579 return ret[2388435])
  }
  function chpl_checkIfRangeIterWillOverflow[1096076](const in arg low[1096080]:int(64)[13], const in arg high[1096082]:int(64)[13], const in arg stride[1096084]:int(64)[13], const in arg first[1096090]:int(64)[13], const in arg last[1096096]:int(64)[13], const in arg shouldHalt[1096102]:bool[10], const in arg _ln[2490158]:int(64)[13], in arg _fn[2490160]:int(32)[95]) : bool[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_992[2378429]:string[26] "temp"
    (2378430 'move' "Iteration over a bounded range may be incorrect due to overflow." "Iteration over a bounded range may be incorrect due to overflow.")
    val ret[1096104]:bool[10] "dead after last mention" "RVV" "temp"
    if(2124306 '>' low[1096080] high[1096082])
    {
      (1096135 'move' ret[1096104] 0)
      gotoReturn _end_chpl_checkIfRangeIterWillOverflow[1096616] _end_chpl_checkIfRangeIterWillOverflow[1096616]
    }
    val willOverFlow[1096142]:bool[10] "dead at end of block" "insert auto destroy"
    (1096144 'move' willOverFlow[1096142] 0)
    val tmp[1096185]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2124321 '>' last[1096096] 0)
    {
      (1096218 'move' tmp[1096185](2124336 '>' stride[1096084] 0))
    }
    {
      (1096224 'move' tmp[1096185] 0)
    }
    if tmp[1096185]
    {
      if(2124346 '>' stride[1096084](2497724 'cast' int(64)[13](2220246 '-' 9223372036854775807 last[1096096])))
      {
        (2134945 '=' willOverFlow[1096142] 1)
      }
    }
    {
      val tmp[1096300]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if(2116016 '<' last[1096096] 0)
      {
        (1096333 'move' tmp[1096300](2116026 '<' stride[1096084] 0))
      }
      {
        (1096339 'move' tmp[1096300] 0)
      }
      if tmp[1096300]
      {
        if(2128416 '<' stride[1096084](2497726 'cast' int(64)[13](2220216 '-' -9223372036854775808 last[1096096])))
        {
          (2134962 '=' willOverFlow[1096142] 1)
        }
      }
    }
    val tmp[1096554]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if willOverFlow[1096142]
    {
      (1096579 'move' tmp[1096554] shouldHalt[1096102])
    }
    {
      (1096585 'move' tmp[1096554] 0)
    }
    if tmp[1096554]
    {
      (1096603 call boundsCheckHalt[210167] "Iteration over a bounded range may be incorrect due to overflow." _ln[2490158] _fn[2490160])
    }
    (1096608 'move' ret[1096104] willOverFlow[1096142])
    label _end_chpl_checkIfRangeIterWillOverflow[1096616]
    (1096618 return ret[1096104])
  }
  function range(int(64),bounded,false)[1026814]._local_checkIfIterWillOverflow[2403665](const in arg this[2403667]:range(int(64),bounded,false)[1026814], const in arg shouldHalt[2403669]:bool[10], const in arg _ln[2492330]:int(64)[13], in arg _fn[2492332]:int(32)[95]) : bool[10] "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val call_tmp[2403686]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2403702 'move' call_tmp[2403686](2403705 call _local_chpl_checkIfRangeIterWillOverflow[2388415](2403692 '.v' this[2403667] _low[1026776])(2403699 '.v' this[2403667] _high[1026781]) 1(2403676 '.v' this[2403667] _low[1026776])(2403683 '.v' this[2403667] _high[1026781]) shouldHalt[2403669] _ln[2492330] _fn[2492332]))
    (2403712 return call_tmp[2403686])
  }
  function range(int(64),bounded,false)[1026814].checkIfIterWillOverflow[1095814](const in arg this[1095820]:range(int(64),bounded,false)[1026814], const in arg shouldHalt[1095826]:bool[10], const in arg _ln[2492152]:int(64)[13], in arg _fn[2492154]:int(32)[95]) : bool[10] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val call_tmp[1095884]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1095886 'move' call_tmp[1095884](1095889 call chpl_checkIfRangeIterWillOverflow[1096076](2369578 '.v' this[1095820] _low[1026776])(2369585 '.v' this[1095820] _high[1026781]) 1(2262881 '.v' this[1095820] _low[1026776])(2270692 '.v' this[1095820] _high[1026781]) shouldHalt[1095826] _ln[2492152] _fn[2492154]))
    (1095901 return call_tmp[1095884])
  }
  function range(int(64),bounded,true)[1413447].checkIfIterWillOverflow[1414403](const in arg this[1414409]:range(int(64),bounded,true)[1413447], const in arg shouldHalt[1414415]:bool[10], const in arg _ln[2492170]:int(64)[13], in arg _fn[2492172]:int(32)[95]) : bool[10] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    val ret[2322713]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2441065 'move' ret[2322713](2322717 '.v' this[1414409] _stride[1413419]))
    val tmp[2323087]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2323100 '>'(2323093 '.v' this[1414409] _stride[1413419]) 0)
    {
      const-val call_tmp[2323112]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2323128 'move' call_tmp[2323112](2323131 call chpl__diffMod[1414958](2323118 '.v' this[1414409] _alignment[1413429])(2323125 '.v' this[1414409] _low[1413409])(2323109 '.v' this[1414409] _stride[1413419]) _ln[2492170] _fn[2492172]))
      (2323149 'move' tmp[2323087](2498026 'cast' int(64)[13](2323146 '+'(2323139 '.v' this[1414409] _low[1413409]) call_tmp[2323112])))
    }
    {
      const-val call_tmp[2323160]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2323176 'move' call_tmp[2323160](2323179 call chpl__diffMod[1414958](2323166 '.v' this[1414409] _high[1413414])(2323173 '.v' this[1414409] _alignment[1413429])(2323157 '.v' this[1414409] _stride[1413419]) _ln[2492170] _fn[2492172]))
      (2323197 'move' tmp[2323087](2498028 'cast' int(64)[13](2323194 '-'(2323187 '.v' this[1414409] _high[1413414]) call_tmp[2323160])))
    }
    val tmp[2323459]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2323472 '>'(2323465 '.v' this[1414409] _stride[1413419]) 0)
    {
      const-val call_tmp[2323484]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2323500 'move' call_tmp[2323484](2323503 call chpl__diffMod[1414958](2323490 '.v' this[1414409] _high[1413414])(2323497 '.v' this[1414409] _alignment[1413429])(2323481 '.v' this[1414409] _stride[1413419]) _ln[2492170] _fn[2492172]))
      (2323521 'move' tmp[2323459](2498030 'cast' int(64)[13](2323518 '-'(2323511 '.v' this[1414409] _high[1413414]) call_tmp[2323484])))
    }
    {
      const-val call_tmp[2323532]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2323548 'move' call_tmp[2323532](2323551 call chpl__diffMod[1414958](2323538 '.v' this[1414409] _alignment[1413429])(2323545 '.v' this[1414409] _low[1413409])(2323529 '.v' this[1414409] _stride[1413419]) _ln[2492170] _fn[2492172]))
      (2323569 'move' tmp[2323459](2498032 'cast' int(64)[13](2323566 '+'(2323559 '.v' this[1414409] _low[1413409]) call_tmp[2323532])))
    }
    const-val call_tmp[1414473]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1414475 'move' call_tmp[1414473](1414478 call chpl_checkIfRangeIterWillOverflow[1096076](2373058 '.v' this[1414409] _low[1413409])(2373065 '.v' this[1414409] _high[1413414]) ret[2322713] tmp[2323087] tmp[2323459] shouldHalt[1414415] _ln[2492170] _fn[2492172]))
    (1414490 return call_tmp[1414473])
  }
  type _ic_chpl_direct_counted_range_iter[1103790] val super[1103791]:object[22] "super class" val more[1103793]:int(64)[13] const-val F0_low[2010431]:int(64)[13] const-val F1_count[2010435]:int(64)[13] val F2__iterator[2010439]:_ic_chpl_direct_counted_range_iter_helper[1103540] const F3_tmp[2010441]:2*int(64)[1040056] val F4__iterator[2010443]:_ic_chpl_direct_param_stride_range_iter[1103286] val F5_i[2010445]:int(64)[13] const-val F6_low[2010447]:int(64)[13] val value[2010449]:int(64)[13]
  type _ic_chpl_direct_counted_range_iter_helper[1103540] val super[1103541]:object[22] "super class" val more[1103543]:int(64)[13] const-val F0_low[2014903]:int(64)[13] const-val F1_count[2014907]:int(64)[13] const F2_tmp[2014911]:2*int(64)[1040056] val F3__iterator[2014913]:_ic_chpl_direct_param_stride_range_iter[1103286] val F4_i[2014915]:int(64)[13] const-val F5_low[2014917]:int(64)[13] val value[2014919]:int(64)[13]
  type _ic_chpl_direct_param_stride_range_iter[1103286] val super[1103287]:object[22] "super class" val more[1103289]:int(64)[13] const-val F0_low[2016401]:int(64)[13] const-val F1_high[2016405]:int(64)[13] val value[2016409]:int(64)[13]
  function _ic_these_range_int64_t_bounded_F[1096703].advance[1096729](const in arg this[1096731]:_ic_these_range_int64_t_bounded_F[1096703], const in arg _ln[2469062]:int(64)[13], in arg _fn[2469064]:int(32)[95]) : void[4] "auto ii" "method" "resolved"
  {
    const-val more[2014771]:int(64)[13]
    (2453773 '_check_nil' this[1096731] _ln[2469062] _fn[2469064])
    (2421944 'move' more[2014771](2014796 '.v' this[1096731] more[1096706]))
    if(2014778 '==' more[2014771] 2)
    {
      gotoIterResume _jump_2[2014763] _jump_2[2014763]
    }
    if(2014788 '==' more[2014771] -2)
    {
      gotoIterResume _jump_break_2[2014765] _jump_break_2[2014765]
    }
    const-val tmp[2014292]:range(int(64),bounded,false)[1026814] "temp"
    val tmp[2421905]:range(int(64),bounded,false)[1026814] "temp"
    (2453741 '_check_nil' this[1096731] _ln[2469062] _fn[2469064])
    (2014297 'move' tmp[2421905](2014294 '.v' this[1096731] F0_this[2014280]))
    (2421908 'move' tmp[2014292] tmp[2421905])
    (1095630 call checkIfIterWillOverflow[1095814] tmp[2014292] 1 _ln[2469062] _fn[2469064])
    (2453743 '_check_nil' this[1096731] _ln[2469062] _fn[2469064])
    (2014301 '.=' this[1096731] F1_i[2014284] 0)
    ref tmp[2014305]:range(int(64),bounded,false)[1026814] "temp"
    (2453745 '_check_nil' this[1096731] _ln[2469062] _fn[2469064])
    (2014310 'move' tmp[2014305](2014307 '.' this[1096731] F0_this[2014280]))
    val tmp[2014312]:int(64)[13] "temp"
    (2415574 'move' tmp[2014312](2369595 '.v' tmp[2014305] _low[1026776]))
    (2453747 '_check_nil' this[1096731] _ln[2469062] _fn[2469064])
    (2014314 '.=' this[1096731] F3_coerce_tmp[2014288] tmp[2014312])
    (1095656 'noop')
    ref tmp[2014325]:range(int(64),bounded,false)[1026814] "temp"
    (2453749 '_check_nil' this[1096731] _ln[2469062] _fn[2469064])
    (2014330 'move' tmp[2014325](2014327 '.' this[1096731] F0_this[2014280]))
    const-val coerce_tmp[1096686]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2415580 'move' coerce_tmp[1096686](2369601 '.v' tmp[2014325] _high[1026781]))
    (2453751 '_check_nil' this[1096731] _ln[2469062] _fn[2469064])
    (2014334 '.=' this[1096731] F2_end[2014286] coerce_tmp[1096686])
    (1095670 'noop')
    CForLoop[1095674]
    {
      const-val tmp[2014351]:int(64)[13] "temp"
      (2453755 '_check_nil' this[1096731] _ln[2469062] _fn[2469064])
      (2421914 'move' tmp[2014351](2014353 '.v' this[1096731] F1_i[2014284]))
      (2453753 '_check_nil' this[1096731] _ln[2469062] _fn[2469064])
      (2014340 '.=' this[1096731] value[2014290] tmp[2014351])
      (2453769 '_check_nil' this[1096731] _ln[2469062] _fn[2469064])
      (2014757 '.=' this[1096731] more[1096706] 2)
      gotoIterEnd _end[2014755] _end[2014755]
      label _jump_break_2[2014765]
      gotoReturn _endthese[1813978] _endthese[1813978]
      label _jump_2[2014763]
      {
        const-val tmp[2014371]:int(64)[13] "temp"
        (2453759 '_check_nil' this[1096731] _ln[2469062] _fn[2469064])
        (2421920 'move' tmp[2014371](2014373 '.v' this[1096731] F3_coerce_tmp[2014288]))
        (2453757 '_check_nil' this[1096731] _ln[2469062] _fn[2469064])
        (2014367 '.=' this[1096731] F1_i[2014284] tmp[2014371])
      }
      {
        val tmp[2014378]:int(64)[13] "temp"
        (2453761 '_check_nil' this[1096731] _ln[2469062] _fn[2469064])
        (2421926 'move' tmp[2014378](2014380 '.v' this[1096731] F1_i[2014284]))
        (2453763 '_check_nil' this[1096731] _ln[2469062] _fn[2469064])
        (1095683 '<=' tmp[2014378](2014387 '.v' this[1096731] F2_end[2014286]))
      }
      {
        val tmp[2014392]:int(64)[13] "temp"
        (2453765 '_check_nil' this[1096731] _ln[2469062] _fn[2469064])
        (2421938 'move' tmp[2014392](2014394 '.v' this[1096731] F1_i[2014284]))
        (1095714 '+=' tmp[2014392] 1)
        (2453767 '_check_nil' this[1096731] _ln[2469062] _fn[2469064])
        (2014399 '.=' this[1096731] F1_i[2014284] tmp[2014392])
      }
    }
    label _endthese[1813978]
    (2453771 '_check_nil' this[1096731] _ln[2469062] _fn[2469064])
    (2014767 '.=' this[1096731] more[1096706] 0)
    label _end[2014755]
    (2014802 return _void[55])
  }
  type _ic_these_range_int64_t_bounded_F[1096703] val super[1096704]:object[22] "super class" val more[1096706]:int(64)[13] const-val F0_this[2014280]:range(int(64),bounded,false)[1026814] val F1_i[2014284]:int(64)[13] const F2_end[2014286]:int(64)[13] val F3_coerce_tmp[2014288]:int(64)[13] val value[2014290]:int(64)[13]
  function _cast[1054358](const in arg x[1054362]:range(byteIndex,bounded,false)[1025792], ref arg _retArg[1832957]:string[26], const in arg _ln[2477658]:int(64)[13], in arg _fn[2477660]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_1075[2378053]:string[26] "temp"
    (2378054 'move' ".." "..")
    const-val ret[1054364]:string[26] "dead after last mention" "RVV" "temp"
    val ret[1054372]:string[26] "dead at end of block" "insert auto destroy"
    (1084708 call init[30760] ret[1054372] _ln[2477658] _fn[2477660])
    const-val call_tmp[1054396]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2262187]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2433939 'move' coerce_tmp[2262187](2262191 '.v' x[1054362] _low[1025754]))
    const-val ret[2262194]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2262196]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2262199 call init[28097] cpi[2262196])
    (2262201 '.=' cpi[2262196] _bindex[28091] coerce_tmp[2262187])
    (2262205 'move' ret[2262194] cpi[2262196])
    (1832752 'move' call_tmp[1054396] ret[2262194])
    const-val call_tmp[1054404]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1832963]:string[26] "temp"
    (1054409 call _cast[1054641] call_tmp[1054396] ret_tmp[1832963] _ln[2477658] _fn[2477660])
    (1832966 'move' call_tmp[1054404] ret_tmp[1832963])
    (1054413 call +=[38797] ret[1054372] call_tmp[1054404] _ln[2477658] _fn[2477660])
    ref i_x[2130825]:string[26] "temp"
    (2130829 'move' i_x[2130825](2130827 'set reference' call_tmp[1054404]))
    wide-ref tmp[2425392]:string[26] "temp"
    (2425395 'move' tmp[2425392] i_x[2130825])
    (2130833 call deinit[30831] tmp[2425392] _ln[2477658] _fn[2477660])
    (1054420 call +=[38797] ret[1054372] ".." _ln[2477658] _fn[2477660])
    const-val call_tmp[1054443]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2262262]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2433951 'move' coerce_tmp[2262262](2262266 '.v' x[1054362] _high[1025759]))
    const-val ret[2262269]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2262271]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2262274 call init[28097] cpi[2262271])
    (2262276 '.=' cpi[2262271] _bindex[28091] coerce_tmp[2262262])
    (2262280 'move' ret[2262269] cpi[2262271])
    (1832788 'move' call_tmp[1054443] ret[2262269])
    const-val call_tmp[1054451]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1832969]:string[26] "temp"
    (1054456 call _cast[1054641] call_tmp[1054443] ret_tmp[1832969] _ln[2477658] _fn[2477660])
    (1832972 'move' call_tmp[1054451] ret_tmp[1832969])
    (1054460 call +=[38797] ret[1054372] call_tmp[1054451] _ln[2477658] _fn[2477660])
    ref i_x[2130837]:string[26] "temp"
    (2130841 'move' i_x[2130837](2130839 'set reference' call_tmp[1054451]))
    wide-ref tmp[2425398]:string[26] "temp"
    (2425401 'move' tmp[2425398] i_x[2130837])
    (2130845 call deinit[30831] tmp[2425398] _ln[2477658] _fn[2477660])
    const-val alignCheckRange[1054522]:range(byteIndex,bounded,false)[1025792] "dead at end of block" "insert auto destroy"
    (1054524 'move' alignCheckRange[1054522] x[1054362])
    (1054532 call normalizeAlignment[1083606] alignCheckRange[1054522])
    (1054614 'move' ret[1054364] ret[1054372])
    (1832959 '=' _retArg[1832957] ret[1054364])
    (1832961 return _void[55])
  }
  function _cast[1119437](const in arg x[1119441]:range(int(64),bounded,false)[1026814], ref arg _retArg[1834024]:string[26], const in arg _ln[2477692]:int(64)[13], in arg _fn[2477694]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_1075[2378544]:string[26] "temp"
    (2378545 'move' ".." "..")
    const-val ret[1119443]:string[26] "dead after last mention" "RVV" "temp"
    val ret[1119451]:string[26] "dead at end of block" "insert auto destroy"
    (1120744 call init[30760] ret[1119451] _ln[2477692] _fn[2477694])
    const-val call_tmp[1119483]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1833107]:string[26] "temp"
    (1119488 call _cast[1063153](2261444 '.v' x[1119441] _low[1026776]) ret_tmp[1833107] _ln[2477692] _fn[2477694])
    (1833110 'move' call_tmp[1119483] ret_tmp[1833107])
    (1119492 call +=[38797] ret[1119451] call_tmp[1119483] _ln[2477692] _fn[2477694])
    ref i_x[2131329]:string[26] "temp"
    (2131333 'move' i_x[2131329](2131331 'set reference' call_tmp[1119483]))
    wide-ref tmp[2425620]:string[26] "temp"
    (2425623 'move' tmp[2425620] i_x[2131329])
    (2131337 call deinit[30831] tmp[2425620] _ln[2477692] _fn[2477694])
    (1119499 call +=[38797] ret[1119451] ".." _ln[2477692] _fn[2477694])
    const-val call_tmp[1119530]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1833113]:string[26] "temp"
    (1119535 call _cast[1063153](2261664 '.v' x[1119441] _high[1026781]) ret_tmp[1833113] _ln[2477692] _fn[2477694])
    (1833116 'move' call_tmp[1119530] ret_tmp[1833113])
    (1119539 call +=[38797] ret[1119451] call_tmp[1119530] _ln[2477692] _fn[2477694])
    ref i_x[2131341]:string[26] "temp"
    (2131345 'move' i_x[2131341](2131343 'set reference' call_tmp[1119530]))
    wide-ref tmp[2425626]:string[26] "temp"
    (2425629 'move' tmp[2425626] i_x[2131341])
    (2131349 call deinit[30831] tmp[2425626] _ln[2477692] _fn[2477694])
    const-val alignCheckRange[1119601]:range(int(64),bounded,false)[1026814] "dead at end of block" "insert auto destroy"
    (1119603 'move' alignCheckRange[1119601] x[1119441])
    (1119611 call normalizeAlignment[1119740] alignCheckRange[1119601])
    (1119693 'move' ret[1119443] ret[1119451])
    (1834026 '=' _retArg[1834024] ret[1119443])
    (1834028 return _void[55])
  }
  function _cast[1135960](const in arg x[1135964]:range(int(64),boundedLow,false)[1087565], ref arg _retArg[1834312]:string[26], const in arg _ln[2477712]:int(64)[13], in arg _fn[2477714]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_1079[2378607]:string[26] "temp"
    (2378608 'move' " align " " align ")
    const-val local__str_literal_1075[2378601]:string[26] "temp"
    (2378602 'move' ".." "..")
    const-val ret[1135966]:string[26] "dead after last mention" "RVV" "temp"
    val ret[1135974]:string[26] "dead at end of block" "insert auto destroy"
    (1138798 call init[30760] ret[1135974] _ln[2477712] _fn[2477714])
    const-val call_tmp[1136006]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1833125]:string[26] "temp"
    (1136011 call _cast[1063153](2271866 '.v' x[1135964] _low[1087527]) ret_tmp[1833125] _ln[2477712] _fn[2477714])
    (1833128 'move' call_tmp[1136006] ret_tmp[1833125])
    (1136015 call +=[38797] ret[1135974] call_tmp[1136006] _ln[2477712] _fn[2477714])
    ref i_x[2131401]:string[26] "temp"
    (2131405 'move' i_x[2131401](2131403 'set reference' call_tmp[1136006]))
    wide-ref tmp[2425656]:string[26] "temp"
    (2425659 'move' tmp[2425656] i_x[2131401])
    (2131409 call deinit[30831] tmp[2425656] _ln[2477712] _fn[2477714])
    (1136022 call +=[38797] ret[1135974] ".." _ln[2477712] _fn[2477714])
    const-val alignCheckRange[1136124]:range(int(64),boundedLow,false)[1087565] "dead at end of block" "insert auto destroy"
    (1136126 'move' alignCheckRange[1136124] x[1135964])
    (1136134 call normalizeAlignment[1136260] alignCheckRange[1136124])
    if(2114252 '!'(2272256 '=='(2272242 '.v' alignCheckRange[1136124] _low[1087527])(2272249 '.v' alignCheckRange[1136124] _low[1087527])))
    {
      const-val call_tmp[1136162]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1136164 'move' call_tmp[1136162](1136167 call alignment[1128120] x[1135964]))
      const-val call_tmp[1136185]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1136187 'move' call_tmp[1136185](1136190 call chpl__mod[1137416] call_tmp[1136162] 1 _ln[2477712] _fn[2477714]))
      const-val call_tmp[1136193]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1833131]:string[26] "temp"
      (1136198 call _cast[1063153] call_tmp[1136185] ret_tmp[1833131] _ln[2477712] _fn[2477714])
      (1833134 'move' call_tmp[1136193] ret_tmp[1833131])
      const-val call_tmp[1136201]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1830073]:string[26] "temp"
      wide-ref tmp[2415703]:string[26] "temp"
      (2415707 'move' tmp[2415703](2415705 'set reference' call_tmp[1136193]))
      (1136206 call +[38342] " align " tmp[2415703] ret_tmp[1830073] _ln[2477712] _fn[2477714])
      (1830076 'move' call_tmp[1136201] ret_tmp[1830073])
      (1136210 call +=[38797] ret[1135974] call_tmp[1136201] _ln[2477712] _fn[2477714])
      ref i_x[2131413]:string[26] "temp"
      (2131417 'move' i_x[2131413](2131415 'set reference' call_tmp[1136201]))
      wide-ref tmp[2425662]:string[26] "temp"
      (2425665 'move' tmp[2425662] i_x[2131413])
      (2131421 call deinit[30831] tmp[2425662] _ln[2477712] _fn[2477714])
      ref i_x[2131425]:string[26] "temp"
      (2131429 'move' i_x[2131425](2131427 'set reference' call_tmp[1136193]))
      wide-ref tmp[2425668]:string[26] "temp"
      (2425671 'move' tmp[2425668] i_x[2131425])
      (2131433 call deinit[30831] tmp[2425668] _ln[2477712] _fn[2477714])
    }
    (1136216 'move' ret[1135966] ret[1135974])
    (1834314 '=' _retArg[1834312] ret[1135966])
    (1834316 return _void[55])
  }
  function _cast[1154424](const in arg x[1154428]:range(byteIndex,boundedLow,false)[1143403], ref arg _retArg[1834594]:string[26], const in arg _ln[2477724]:int(64)[13], in arg _fn[2477726]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_1079[2378655]:string[26] "temp"
    (2378656 'move' " align " " align ")
    const-val local__str_literal_1075[2378649]:string[26] "temp"
    (2378650 'move' ".." "..")
    const-val ret[1154430]:string[26] "dead after last mention" "RVV" "temp"
    val ret[1154438]:string[26] "dead at end of block" "insert auto destroy"
    (1156119 call init[30760] ret[1154438] _ln[2477724] _fn[2477726])
    const-val call_tmp[1154462]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2272574]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2435084 'move' coerce_tmp[2272574](2272578 '.v' x[1154428] _low[1143365]))
    const-val ret[2272581]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2272583]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2272586 call init[28097] cpi[2272583])
    (2272588 '.=' cpi[2272583] _bindex[28091] coerce_tmp[2272574])
    (2272592 'move' ret[2272581] cpi[2272583])
    (1834503 'move' call_tmp[1154462] ret[2272581])
    const-val call_tmp[1154470]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1832975]:string[26] "temp"
    (1154475 call _cast[1054641] call_tmp[1154462] ret_tmp[1832975] _ln[2477724] _fn[2477726])
    (1832978 'move' call_tmp[1154470] ret_tmp[1832975])
    (1154479 call +=[38797] ret[1154438] call_tmp[1154470] _ln[2477724] _fn[2477726])
    ref i_x[2131485]:string[26] "temp"
    (2131489 'move' i_x[2131485](2131487 'set reference' call_tmp[1154470]))
    wide-ref tmp[2425698]:string[26] "temp"
    (2425701 'move' tmp[2425698] i_x[2131485])
    (2131493 call deinit[30831] tmp[2425698] _ln[2477724] _fn[2477726])
    (1154486 call +=[38797] ret[1154438] ".." _ln[2477724] _fn[2477726])
    const-val alignCheckRange[1154588]:range(byteIndex,boundedLow,false)[1143403] "dead at end of block" "insert auto destroy"
    (1154590 'move' alignCheckRange[1154588] x[1154428])
    (1154598 call normalizeAlignment[1154959] alignCheckRange[1154588])
    if(2114279 '!'(2272763 '=='(2272749 '.v' alignCheckRange[1154588] _low[1143365])(2272756 '.v' alignCheckRange[1154588] _low[1143365])))
    {
      const-val call_tmp[1154626]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1834576]:byteIndex[28170] "temp"
      (1154631 call alignment[1148238] x[1154428] ret_tmp[1834576])
      (1834579 'move' call_tmp[1154626] ret_tmp[1834576])
      const-val call_tmp[1154649]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1154651 'move' call_tmp[1154649](1154654 call chpl__mod[1137416](2261862 '.v' call_tmp[1154626] _bindex[28091]) 1 _ln[2477724] _fn[2477726]))
      const-val call_tmp[1154657]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1833143]:string[26] "temp"
      (1154662 call _cast[1063153] call_tmp[1154649] ret_tmp[1833143] _ln[2477724] _fn[2477726])
      (1833146 'move' call_tmp[1154657] ret_tmp[1833143])
      const-val call_tmp[1154665]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1830085]:string[26] "temp"
      wide-ref tmp[2415777]:string[26] "temp"
      (2415781 'move' tmp[2415777](2415779 'set reference' call_tmp[1154657]))
      (1154670 call +[38342] " align " tmp[2415777] ret_tmp[1830085] _ln[2477724] _fn[2477726])
      (1830088 'move' call_tmp[1154665] ret_tmp[1830085])
      (1154674 call +=[38797] ret[1154438] call_tmp[1154665] _ln[2477724] _fn[2477726])
      ref i_x[2131497]:string[26] "temp"
      (2131501 'move' i_x[2131497](2131499 'set reference' call_tmp[1154665]))
      wide-ref tmp[2425704]:string[26] "temp"
      (2425707 'move' tmp[2425704] i_x[2131497])
      (2131505 call deinit[30831] tmp[2425704] _ln[2477724] _fn[2477726])
      ref i_x[2131509]:string[26] "temp"
      (2131513 'move' i_x[2131509](2131511 'set reference' call_tmp[1154657]))
      wide-ref tmp[2425710]:string[26] "temp"
      (2425713 'move' tmp[2425710] i_x[2131509])
      (2131517 call deinit[30831] tmp[2425710] _ln[2477724] _fn[2477726])
    }
    (1154680 'move' ret[1154430] ret[1154438])
    (1834596 '=' _retArg[1834594] ret[1154430])
    (1834598 return _void[55])
  }
  function _cast[1198631](const in arg x[1198635]:range(byteIndex,boundedHigh,false)[1184919], ref arg _retArg[1834916]:string[26], const in arg _ln[2477752]:int(64)[13], in arg _fn[2477754]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_1079[2378885]:string[26] "temp"
    (2378886 'move' " align " " align ")
    const-val local__str_literal_1075[2378879]:string[26] "temp"
    (2378880 'move' ".." "..")
    const-val ret[1198637]:string[26] "dead after last mention" "RVV" "temp"
    val ret[1198645]:string[26] "dead at end of block" "insert auto destroy"
    (1200178 call init[30760] ret[1198645] _ln[2477752] _fn[2477754])
    (1198693 call +=[38797] ret[1198645] ".." _ln[2477752] _fn[2477754])
    const-val call_tmp[1198716]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2275794]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2435514 'move' coerce_tmp[2275794](2275798 '.v' x[1198635] _high[1184886]))
    const-val ret[2275801]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2275803]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2275806 call init[28097] cpi[2275803])
    (2275808 '.=' cpi[2275803] _bindex[28091] coerce_tmp[2275794])
    (2275812 'move' ret[2275801] cpi[2275803])
    (1834855 'move' call_tmp[1198716] ret[2275801])
    const-val call_tmp[1198724]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1832981]:string[26] "temp"
    (1198729 call _cast[1054641] call_tmp[1198716] ret_tmp[1832981] _ln[2477752] _fn[2477754])
    (1832984 'move' call_tmp[1198724] ret_tmp[1832981])
    (1198733 call +=[38797] ret[1198645] call_tmp[1198724] _ln[2477752] _fn[2477754])
    ref i_x[2131881]:string[26] "temp"
    (2131885 'move' i_x[2131881](2131883 'set reference' call_tmp[1198724]))
    wide-ref tmp[2425860]:string[26] "temp"
    (2425863 'move' tmp[2425860] i_x[2131881])
    (2131889 call deinit[30831] tmp[2425860] _ln[2477752] _fn[2477754])
    const-val alignCheckRange[1198795]:range(byteIndex,boundedHigh,false)[1184919] "dead at end of block" "insert auto destroy"
    (1198797 'move' alignCheckRange[1198795] x[1198635])
    (1198805 call normalizeAlignment[1199166] alignCheckRange[1198795])
    const-val call_tmp[1198833]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1834898]:byteIndex[28170] "temp"
    (1198838 call alignment[1192661] x[1198635] ret_tmp[1834898])
    (1834901 'move' call_tmp[1198833] ret_tmp[1834898])
    const-val call_tmp[1198856]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1198858 'move' call_tmp[1198856](1198861 call chpl__mod[1137416](2261934 '.v' call_tmp[1198833] _bindex[28091]) 1 _ln[2477752] _fn[2477754]))
    const-val call_tmp[1198864]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1833155]:string[26] "temp"
    (1198869 call _cast[1063153] call_tmp[1198856] ret_tmp[1833155] _ln[2477752] _fn[2477754])
    (1833158 'move' call_tmp[1198864] ret_tmp[1833155])
    const-val call_tmp[1198872]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1830133]:string[26] "temp"
    wide-ref tmp[2416069]:string[26] "temp"
    (2416073 'move' tmp[2416069](2416071 'set reference' call_tmp[1198864]))
    (1198877 call +[38342] " align " tmp[2416069] ret_tmp[1830133] _ln[2477752] _fn[2477754])
    (1830136 'move' call_tmp[1198872] ret_tmp[1830133])
    (1198881 call +=[38797] ret[1198645] call_tmp[1198872] _ln[2477752] _fn[2477754])
    ref i_x[2131893]:string[26] "temp"
    (2131897 'move' i_x[2131893](2131895 'set reference' call_tmp[1198872]))
    wide-ref tmp[2425866]:string[26] "temp"
    (2425869 'move' tmp[2425866] i_x[2131893])
    (2131901 call deinit[30831] tmp[2425866] _ln[2477752] _fn[2477754])
    ref i_x[2131905]:string[26] "temp"
    (2131909 'move' i_x[2131905](2131907 'set reference' call_tmp[1198864]))
    wide-ref tmp[2425872]:string[26] "temp"
    (2425875 'move' tmp[2425872] i_x[2131905])
    (2131913 call deinit[30831] tmp[2425872] _ln[2477752] _fn[2477754])
    (1198887 'move' ret[1198637] ret[1198645])
    (1834918 '=' _retArg[1834916] ret[1198637])
    (1834920 return _void[55])
  }
  function range(byteIndex,bounded,false)[1025792].normalizeAlignment[1083606](ref arg this[1083612]:range(byteIndex,bounded,false)[1025792]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "no return value for void"
  {
    (1083892 return _void[55])
  }
  function range(int(64),bounded,false)[1026814].normalizeAlignment[1119740](ref arg this[1119746]:range(int(64),bounded,false)[1026814]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "no return value for void"
  {
    (1120026 return _void[55])
  }
  function range(int(64),boundedLow,false)[1087565].normalizeAlignment[1136260](ref arg this[1136266]:range(int(64),boundedLow,false)[1087565]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "no return value for void"
  {
    (1136546 return _void[55])
  }
  function range(byteIndex,boundedLow,false)[1143403].normalizeAlignment[1154959](ref arg this[1154965]:range(byteIndex,boundedLow,false)[1143403]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "no return value for void"
  {
    (1155245 return _void[55])
  }
  function range(byteIndex,boundedHigh,false)[1184919].normalizeAlignment[1199166](ref arg this[1199172]:range(byteIndex,boundedHigh,false)[1184919]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "no return value for void"
  {
    (1199452 return _void[55])
  }
  function chpl__mod[1137416](const in arg dividend[1137418]:int(64)[13], const in arg modulus[1137420]:int(64)[13], const in arg _ln[2481608]:int(64)[13], in arg _fn[2481610]:int(32)[95]) : int(64)[13] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_76[2378613]:string[26] "temp"
    (2378614 'move' "Attempt to compute a modulus by zero" "Attempt to compute a modulus by zero")
    val ret[1137422]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[2213389]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2213395 '<' modulus[1137420] 0)
    {
      (2213406 'move' tmp[2213389](2213404 'u-' modulus[1137420]))
    }
    {
      (2213410 'move' tmp[2213389] modulus[1137420])
    }
    if(2213030 '==' tmp[2213389] 0)
    {
      (2213036 call halt[154067] "Attempt to compute a modulus by zero" _ln[2481608] _fn[2481610])
    }
    const-val call_tmp[2213039]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2213041 'move' call_tmp[2213039](2213043 '%' dividend[1137418] tmp[2213389]))
    val tmp[1137469]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1137471 'move' tmp[1137469] call_tmp[2213039])
    if(2116056 '<' call_tmp[2213039] 0)
    {
      ref i_lhs[2175531]:int(64)[13] "temp"
      (2175535 'move' i_lhs[2175531](2175533 'set reference' tmp[1137469]))
      (2175538 '+=' i_lhs[2175531] tmp[2213389])
    }
    (1137518 'move' ret[1137422] tmp[1137469])
    (1137528 return ret[1137422])
  }
  function chpl__diffMod[1414958](const in arg minuend[1414960]:int(64)[13], const in arg subtrahend[1414962]:int(64)[13], const in arg modulus[1414964]:int(64)[13], const in arg _ln[2490516]:int(64)[13], in arg _fn[2490518]:int(32)[95]) : int(64)[13] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val tmp[2213417]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2213423 '<' modulus[1414964] 0)
    {
      (2213434 'move' tmp[2213417](2213432 'u-' modulus[1414964]))
    }
    {
      (2213438 'move' tmp[2213417] modulus[1414964])
    }
    const-val call_tmp[1415043]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1415045 'move' call_tmp[1415043](1415048 call chpl__mod[1137416] minuend[1414960] tmp[2213417] _ln[2490516] _fn[2490518]))
    const-val call_tmp[1415057]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1415059 'move' call_tmp[1415057](1415062 call chpl__mod[1137416] subtrahend[1414962] tmp[2213417] _ln[2490516] _fn[2490518]))
    val tmp[1415073]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2128506 '<' call_tmp[1415043] call_tmp[1415057])
    {
      (1415108 'move' tmp[1415073](2498034 'cast' int(64)[13](2127385 '-' tmp[2213417](2498038 'cast' int(64)[13](2127375 '-' call_tmp[1415057] call_tmp[1415043])))))
    }
    {
      (1415122 'move' tmp[1415073](2498036 'cast' int(64)[13](2127395 '-' call_tmp[1415043] call_tmp[1415057])))
    }
    (1415151 return tmp[1415073])
  }
  function _local_chpl__add[2410653](const in arg a[2410655]:int(64)[13], const in arg b[2410657]:int(64)[13]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    val ret[2410660]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[2410669]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2410666 '>' a[2410655] 0)
    {
      (2410680 'move' tmp[2410669](2410677 '>' b[2410657] 0))
    }
    {
      (2410684 'move' tmp[2410669] 0)
    }
    val tmp[2410688]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[2410669]
    {
      (2410706 'move' tmp[2410688](2410703 '>' b[2410657](2498218 'cast' int(64)[13](2410696 '-' 9223372036854775807 a[2410655]))))
    }
    {
      (2410710 'move' tmp[2410688] 0)
    }
    if tmp[2410688]
    {
      (2410716 'move' ret[2410660] 9223372036854775807)
      gotoReturn _end_chpl__add[2410792] _end_chpl__add[2410792]
    }
    val tmp[2410729]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2410726 '<' a[2410655] 0)
    {
      (2410740 'move' tmp[2410729](2410737 '<' b[2410657] 0))
    }
    {
      (2410744 'move' tmp[2410729] 0)
    }
    val tmp[2410748]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[2410729]
    {
      (2410766 'move' tmp[2410748](2410763 '<' b[2410657](2498220 'cast' int(64)[13](2410756 '-' -9223372036854775808 a[2410655]))))
    }
    {
      (2410770 'move' tmp[2410748] 0)
    }
    if tmp[2410748]
    {
      (2410776 'move' ret[2410660] -9223372036854775808)
      gotoReturn _end_chpl__add[2410792] _end_chpl__add[2410792]
    }
    (2410789 'move' ret[2410660](2498222 'cast' int(64)[13](2410786 '+' a[2410655] b[2410657])))
    label _end_chpl__add[2410792]
    (2410794 return ret[2410660])
  }
  function chpl__add[1093372](const in arg a[1093374]:int(64)[13], const in arg b[1093379]:int(64)[13]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    val ret[1093383]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[1093449]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2124271 '>' a[1093374] 0)
    {
      (1093482 'move' tmp[1093449](2124286 '>' b[1093379] 0))
    }
    {
      (1093488 'move' tmp[1093449] 0)
    }
    val tmp[1093510]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[1093449]
    {
      (1093564 'move' tmp[1093510](2124296 '>' b[1093379](2497720 'cast' int(64)[13](2220236 '-' 9223372036854775807 a[1093374]))))
    }
    {
      (1093570 'move' tmp[1093510] 0)
    }
    if tmp[1093510]
    {
      (1093592 'move' ret[1093383] 9223372036854775807)
      gotoReturn _end_chpl__add[1094316] _end_chpl__add[1094316]
    }
    val tmp[1093622]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2115986 '<' a[1093374] 0)
    {
      (1093655 'move' tmp[1093622](2115996 '<' b[1093379] 0))
    }
    {
      (1093661 'move' tmp[1093622] 0)
    }
    val tmp[1093683]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[1093622]
    {
      (1093737 'move' tmp[1093683](2128406 '<' b[1093379](2497722 'cast' int(64)[13](2220206 '-' -9223372036854775808 a[1093374]))))
    }
    {
      (1093743 'move' tmp[1093683] 0)
    }
    if tmp[1093683]
    {
      (1093765 'move' ret[1093383] -9223372036854775808)
      gotoReturn _end_chpl__add[1094316] _end_chpl__add[1094316]
    }
    (1094312 'move' ret[1093383](2497718 'cast' int(64)[13](2126004 '+' a[1093374] b[1093379])))
    label _end_chpl__add[1094316]
    (1094318 return ret[1093383])
  }
  function chpl__addRangeStrides[1105027](const in arg start[1105029]:int(64)[13], const in arg stride[1105031]:int(64)[13], const in arg count[1105033]:int(64)[13]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[1105497]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1105499 'move' call_tmp[1105497](1105502 call mul[1105535] stride[1105031] count[1105033]))
    const-val call_tmp[1105505]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1105507 'move' call_tmp[1105505](1105510 call add[1105922] start[1105029] call_tmp[1105497]))
    (1105532 return call_tmp[1105505])
  }
  function _local_absSameType[2410616](const in arg str[2410618]:int(64)[13]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    (2410623 return 1)
  }
  function absSameType[1090842](const in arg str[1090844]:int(64)[13]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    (1090934 return 1)
  }
  function mul[1105535](const in arg a[1105537]:int(64)[13], const in arg b[1105539]:int(64)[13]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[2212878]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2212880 'move' call_tmp[2212878](2212882 '*' a[1105537] b[1105539]))
    (1105632 return call_tmp[2212878])
  }
  function add[1105922](const in arg a[1105924]:int(64)[13], const in arg b[1105926]:int(64)[13]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[2126120]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2126122 'move' call_tmp[2126120](2126124 '+' a[1105924] b[1105926]))
    (1106019 return call_tmp[2126120])
  }
}