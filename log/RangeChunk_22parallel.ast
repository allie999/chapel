AST dump for RangeChunk after pass parallel.
Module use list: ChapelStandard 

{
  function chpl__init_RangeChunk[416238]() : void[4] "insert line file info" "module init" "resolved"
  {
    (537603 return _void[55])
  }
  type RemElems[266554] def Thru[266548]:RemElems[266554] def Pack[266550]:RemElems[266554] def Mod[266552]:RemElems[266554]
  function _ic_chunks[1400360].advance[1400386](const in arg this[1400388]:_ic_chunks[1400360]) : void[4] "auto ii" "method" "resolved"
  {
    const-val more[2142571]:int(64)[13]
    (2142599 'move' more[2142571](2142596 '.v' this[1400388] more[1400363]))
    const-val tmp[2142574]:bool[10] "temp"
    (2142581 'move' tmp[2142574](2142578 '==' more[2142571] 2))
    if tmp[2142574]
    {
      gotoIterResume _jump_2[2142563] _jump_2[2142563]
    }
    const-val tmp[2142586]:bool[10] "temp"
    (2142591 'move' tmp[2142586](2142588 '==' more[2142571] -2))
    if tmp[2142586]
    {
      gotoIterResume _jump_break_2[2142565] _jump_break_2[2142565]
    }
    val ret[1399978]:_ir_chunks[1400366] "dead at end of block" "RVV" "temp"
    val _indexOfInterest[1400520]:2*int(64)[1040245] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[1400524]:_ir_chunksOrder[1400830] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[1914801]:_ir_chunksOrder[1400830] "temp"
    const-val tmp[2141891]:range(int(64),bounded,false)[1027003] "temp"
    (2141896 'move' tmp[2141891](2141893 '.v' this[1400388] F0_r[2141847]))
    const-val tmp[2141898]:int(64)[13] "temp"
    (2141903 'move' tmp[2141898](2141900 '.v' this[1400388] F1_numChunks[2141851]))
    const-val tmp[2141905]:RemElems[266554] "temp"
    (2141910 'move' tmp[2141905](2141907 '.v' this[1400388] F2_remPol[2141855]))
    (1400529 call chunksOrder[1400758] tmp[2141891] tmp[2141898] tmp[2141905] ret_tmp[1914801])
    (1914804 'move' call_tmp[1400524] ret_tmp[1914801])
    val tmp[2141912]:_ic_chunksOrder[1400824] "temp"
    (1400533 'move' tmp[2141912](1400536 call _getIterator[1400839] call_tmp[1400524]))
    (2141914 '.=' this[1400388] F3__iterator[2141859] tmp[2141912])
    val ret[2008985]:_ir_chunksOrder[1400830] "dead at end of block" "RVV" "temp"
    const-val tmp[2008987]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[2008989]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val r[2009497]:range(int(64),bounded,false)[1027003] "temp"
    ref tmp[2141918]:_ref(_ic_chunksOrder)[1400967] "temp"
    (2141923 'move' tmp[2141918](2141920 '.' this[1400388] F3__iterator[2141859]))
    (2009502 'move' r[2009497](2009499 '.v' tmp[2141918] F0_r[2142687]))
    (2008991 'move' call_tmp[2008989](2008994 call size[1035978] r[2009497]))
    (2008996 'move' tmp[2008987](2008999 call ==[435744] call_tmp[2008989] 0))
    val tmp[2009002]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[2009004]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[2009006]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2009008 'move' call_tmp[2009006] tmp[2008987])
    (2009011 'move' tmp[2009004] tmp[2008987])
    if tmp[2008987]
    {
      (2009016 'move' tmp[2009002] 1)
    }
    {
      const-val tmp[2009020]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[2009022]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val numChunks[2009504]:int(64)[13] "temp"
      ref tmp[2141925]:_ref(_ic_chunksOrder)[1400967] "temp"
      (2141930 'move' tmp[2141925](2141927 '.' this[1400388] F3__iterator[2141859]))
      (2009509 'move' numChunks[2009504](2009506 '.v' tmp[2141925] F1_numChunks[2142691]))
      (2009024 'move' call_tmp[2009022](2009027 call <=[437128] numChunks[2009504] 0))
      (2009030 'move' tmp[2009020] call_tmp[2009022])
      (2009033 'move' tmp[2009002] call_tmp[2009022])
    }
    const-val call_tmp[2009037]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2009039 'move' call_tmp[2009037] tmp[2009002])
    if tmp[2009002]
    {
      gotoReturn _end_chunksOrder[2009407] _end_chunksOrder[2009407]
    }
    const-val call_tmp[2009047]:int(64)[13] "dead at end of block" "maybe param" "temp"
    const-val r[2009511]:range(int(64),bounded,false)[1027003] "temp"
    ref tmp[2141932]:_ref(_ic_chunksOrder)[1400967] "temp"
    (2141937 'move' tmp[2141932](2141934 '.' this[1400388] F3__iterator[2141859]))
    (2009516 'move' r[2009511](2009513 '.v' tmp[2141932] F0_r[2142687]))
    (2009049 'move' call_tmp[2009047](2009052 call size[1035978] r[2009511]))
    const tmp[2141939]:int(64)[13] "temp"
    (2009056 'move' tmp[2141939] call_tmp[2009047])
    (2141941 '.=' this[1400388] F4_nElems[2141861] tmp[2141939])
    val call_tmp[2009059]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[2009061]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val numChunks[2009518]:int(64)[13] "temp"
    ref tmp[2141945]:_ref(_ic_chunksOrder)[1400967] "temp"
    (2141950 'move' tmp[2141945](2141947 '.' this[1400388] F3__iterator[2141859]))
    (2009523 'move' numChunks[2009518](2009520 '.v' tmp[2141945] F1_numChunks[2142691]))
    (2009063 'move' call_tmp[2009061](2009066 call min[450112] numChunks[2009518] call_tmp[2009047]))
    const-val call_tmp[2009069]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (2009071 'move' call_tmp[2009069] call_tmp[2009061])
    val tmp[2141952]:int(64)[13] "temp"
    (2009076 'move' tmp[2141952] call_tmp[2009061])
    (2141954 '.=' this[1400388] F5_nChunks[2141863] tmp[2141952])
    val call_tmp[2009081]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[2141958]:int(64)[13] "temp"
    (2009083 'move' tmp[2141958] 0)
    (2141960 '.=' this[1400388] F6_chunkSize[2141865] tmp[2141958])
    val call_tmp[2009088]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[2141964]:int(64)[13] "temp"
    (2009090 'move' tmp[2141964] 0)
    (2141966 '.=' this[1400388] F7_rem[2141867] tmp[2141964])
    const-val tmp[2009093]:RemElems[266554] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val remPol[2009525]:RemElems[266554] "temp"
    ref tmp[2141970]:_ref(_ic_chunksOrder)[1400967] "temp"
    (2141975 'move' tmp[2141970](2141972 '.' this[1400388] F3__iterator[2141859]))
    (2009530 'move' remPol[2009525](2009527 '.v' tmp[2141970] F2_remPol[2142695]))
    (2009095 'move' tmp[2009093] remPol[2009525])
    const-val call_tmp[2009098]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val remPol[2009532]:RemElems[266554] "temp"
    ref tmp[2141977]:_ref(_ic_chunksOrder)[1400967] "temp"
    (2141982 'move' tmp[2141977](2141979 '.' this[1400388] F3__iterator[2141859]))
    (2009537 'move' remPol[2009532](2009534 '.v' tmp[2141977] F2_remPol[2142695]))
    (2009100 'move' call_tmp[2009098](2009103 call ==[1401528] remPol[2009532] Pack[266550]))
    const-val call_tmp[2009106]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2009108 'move' call_tmp[2009106] call_tmp[2009098])
    if call_tmp[2009098]
    {
      const-val call_tmp[2009113]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val tmp[2141984]:int(64)[13] "temp"
      (2141989 'move' tmp[2141984](2141986 '.v' this[1400388] F4_nElems[2141861]))
      const-val tmp[2141991]:int(64)[13] "temp"
      (2141996 'move' tmp[2141991](2141993 '.v' this[1400388] F5_nChunks[2141863]))
      (2009115 'move' call_tmp[2009113](2009118 call /[442796] tmp[2141984] tmp[2141991]))
      ref tmp[2141998]:_ref(int(64))[936761] "temp"
      (2142003 'move' tmp[2141998](2142000 '.' this[1400388] F6_chunkSize[2141865]))
      (2009122 call =[435443] tmp[2141998] call_tmp[2009113])
      const-val call_tmp[2009125]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val tmp[2142005]:int(64)[13] "temp"
      (2142010 'move' tmp[2142005](2142007 '.v' this[1400388] F6_chunkSize[2141865]))
      const-val tmp[2142012]:int(64)[13] "temp"
      (2142017 'move' tmp[2142012](2142014 '.v' this[1400388] F5_nChunks[2141863]))
      (2009127 'move' call_tmp[2009125](2009130 call *[441944] tmp[2142005] tmp[2142012]))
      const-val call_tmp[2009133]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val tmp[2142019]:int(64)[13] "temp"
      (2142024 'move' tmp[2142019](2142021 '.v' this[1400388] F4_nElems[2141861]))
      (2009135 'move' call_tmp[2009133](2009138 call !=[436128] call_tmp[2009125] tmp[2142019]))
      const-val call_tmp[2009141]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2009143 'move' call_tmp[2009141] call_tmp[2009133])
      if call_tmp[2009133]
      {
        ref tmp[2142026]:_ref(int(64))[936761] "temp"
        (2142031 'move' tmp[2142026](2142028 '.' this[1400388] F6_chunkSize[2141865]))
        (2009149 call +=[451431] tmp[2142026] 1)
        const-val call_tmp[2009152]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val tmp[2142033]:int(64)[13] "temp"
        (2142038 'move' tmp[2142033](2142035 '.v' this[1400388] F4_nElems[2141861]))
        const-val tmp[2142040]:int(64)[13] "temp"
        (2142045 'move' tmp[2142040](2142042 '.v' this[1400388] F6_chunkSize[2141865]))
        (2009154 'move' call_tmp[2009152](2009157 call divceil[1401581] tmp[2142033] tmp[2142040]))
        ref tmp[2142047]:_ref(int(64))[936761] "temp"
        (2142052 'move' tmp[2142047](2142049 '.' this[1400388] F5_nChunks[2141863]))
        (2009161 call =[435443] tmp[2142047] call_tmp[2009152])
      }
    }
    {
      const-val call_tmp[2009166]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2009168 'move' call_tmp[2009166](2009171 call ==[1401528] tmp[2009093] Mod[266552]))
      const-val call_tmp[2009174]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2009176 'move' call_tmp[2009174] call_tmp[2009166])
      if call_tmp[2009166]
      {
        const-val call_tmp[2009181]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val tmp[2142054]:int(64)[13] "temp"
        (2142059 'move' tmp[2142054](2142056 '.v' this[1400388] F4_nElems[2141861]))
        const-val tmp[2142061]:int(64)[13] "temp"
        (2142066 'move' tmp[2142061](2142063 '.v' this[1400388] F5_nChunks[2141863]))
        (2009183 'move' call_tmp[2009181](2009186 call /[442796] tmp[2142054] tmp[2142061]))
        ref tmp[2142068]:_ref(int(64))[936761] "temp"
        (2142073 'move' tmp[2142068](2142070 '.' this[1400388] F6_chunkSize[2141865]))
        (2009190 call =[435443] tmp[2142068] call_tmp[2009181])
        const-val call_tmp[2009193]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val tmp[2142075]:int(64)[13] "temp"
        (2142080 'move' tmp[2142075](2142077 '.v' this[1400388] F6_chunkSize[2141865]))
        const-val tmp[2142082]:int(64)[13] "temp"
        (2142087 'move' tmp[2142082](2142084 '.v' this[1400388] F5_nChunks[2141863]))
        (2009195 'move' call_tmp[2009193](2009198 call *[441944] tmp[2142075] tmp[2142082]))
        const-val call_tmp[2009201]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val tmp[2142089]:int(64)[13] "temp"
        (2142094 'move' tmp[2142089](2142091 '.v' this[1400388] F4_nElems[2141861]))
        (2009203 'move' call_tmp[2009201](2009206 call -[440532] tmp[2142089] call_tmp[2009193]))
        ref tmp[2142096]:_ref(int(64))[936761] "temp"
        (2142101 'move' tmp[2142096](2142098 '.' this[1400388] F7_rem[2141867]))
        (2009210 call =[435443] tmp[2142096] call_tmp[2009201])
      }
    }
    val _indexOfInterest[2009215]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[2009219]:_ir_chpl_direct_counted_range_iter[1103985] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[2009221]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
    const-val tmp[2142103]:int(64)[13] "temp"
    (2142108 'move' tmp[2142103](2142105 '.v' this[1400388] F5_nChunks[2141863]))
    (2009224 call chpl_direct_counted_range_iter[458112] 0 tmp[2142103] ret_tmp[2009221])
    (2009228 'move' call_tmp[2009219] ret_tmp[2009221])
    val tmp[2142110]:_ic_chpl_direct_counted_range_iter[1103979] "temp"
    (2009231 'move' tmp[2142110](2009234 call _getIterator[1103994] call_tmp[2009219]))
    (2142112 '.=' this[1400388] F8__iterator[2141869] tmp[2142110])
    val ret[2076390]:_ir_chpl_direct_counted_range_iter[1103985] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[2076392]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[2076396]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[2076398]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
    const-val low[2077108]:int(64)[13] "temp"
    ref tmp[2142116]:_ref(_ic_chpl_direct_counted_range_iter)[1104122] "temp"
    (2142121 'move' tmp[2142116](2142118 '.' this[1400388] F8__iterator[2141869]))
    (2077113 'move' low[2077108](2077110 '.v' tmp[2142116] F0_low[2107536]))
    const-val count[2077115]:int(64)[13] "temp"
    ref tmp[2142123]:_ref(_ic_chpl_direct_counted_range_iter)[1104122] "temp"
    (2142128 'move' tmp[2142123](2142125 '.' this[1400388] F8__iterator[2141869]))
    (2077120 'move' count[2077115](2077117 '.v' tmp[2142123] F1_count[2107540]))
    (2076401 call chpl_direct_counted_range_iter_helper[1102287] low[2077108] count[2077115] ret_tmp[2076398])
    (2076405 'move' call_tmp[2076396] ret_tmp[2076398])
    val tmp[2142130]:_ic_chpl_direct_counted_range_iter_helper[1103729] "temp"
    (2076408 'move' tmp[2142130](2076411 call _getIterator[1103744] call_tmp[2076396]))
    (2142132 '.=' this[1400388] F9__iterator[2141871] tmp[2142130])
    val ret[2076414]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead after last mention" "RVV" "temp"
    val call_tmp[2076416]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val tmp[2076418]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[2076420]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    const-val call_tmp[2076422]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[2076424]:int(64)[13] "temp"
    ref tmp[2142136]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
    (2142141 'move' tmp[2142136](2142138 '.' this[1400388] F9__iterator[2141871]))
    (2076426 'move' count[2076424](2076428 '.v' tmp[2142136] F1_count[2113698]))
    (2076431 'move' call_tmp[2076422](2076434 call <[948587] count[2076424]))
    (2076436 'move' tmp[2076420] call_tmp[2076422])
    (2076439 'move' tmp[2076418] call_tmp[2076422])
    const-val call_tmp[2076442]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2076444 'move' call_tmp[2076442] call_tmp[2076422])
    if call_tmp[2076422]
    {
      (2076450 call boundsCheckHalt[210254] "With a negative count, the range must have a last index.")
    }
    val tmp[2076455]:2*int(64)[1040245] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
    const-val tmp[2076457]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[2076459]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[2076461]:int(64)[13] "temp"
    ref tmp[2142143]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
    (2142148 'move' tmp[2142143](2142145 '.' this[1400388] F9__iterator[2141871]))
    (2076463 'move' count[2076461](2076465 '.v' tmp[2142143] F1_count[2113698]))
    (2076468 'move' call_tmp[2076459](2076471 call ==[435744] count[2076461] 0))
    (2076474 'move' tmp[2076457] call_tmp[2076459])
    if call_tmp[2076459]
    {
      const-val tmp[2076479]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      val call_tmp[2076481]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[2076483]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val low[2076485]:int(64)[13] "temp"
      ref tmp[2142150]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
      (2142155 'move' tmp[2142150](2142152 '.' this[1400388] F9__iterator[2141871]))
      (2076487 'move' low[2076485](2076489 '.v' tmp[2142150] F0_low[2113694]))
      (2076492 'move' call_tmp[2076483](2076495 call _cast[956223] low[2076485]))
      const-val call_tmp[2076497]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2076499]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2076501 'move' coerce_tmp[2076499](2076503 'cast' uint(64)[115] 1))
      (2076506 'move' call_tmp[2076497](2076509 call -[962382] call_tmp[2076483]))
      const-val call_tmp[2076511]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (2076513 'move' call_tmp[2076511](2076516 call _cast[953732] call_tmp[2076497]))
      const-val ret_tmp[2076518]:2*int(64)[1040245] "temp"
      const-val low[2076520]:int(64)[13] "temp"
      ref tmp[2142157]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
      (2142162 'move' tmp[2142157](2142159 '.' this[1400388] F9__iterator[2141871]))
      (2076522 'move' low[2076520](2076524 '.v' tmp[2142157] F0_low[2113694]))
      (2076528 call _build_tuple[1040203] low[2076520] call_tmp[2076511] ret_tmp[2076518])
      (2076532 'move' tmp[2076479] ret_tmp[2076518])
      (2076535 'move' tmp[2076455] tmp[2076479])
    }
    {
      const-val tmp[2076539]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      val call_tmp[2076541]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[2076543]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val count[2076545]:int(64)[13] "temp"
      ref tmp[2142164]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
      (2142169 'move' tmp[2142164](2142166 '.' this[1400388] F9__iterator[2141871]))
      (2076547 'move' count[2076545](2076549 '.v' tmp[2142164] F1_count[2113698]))
      (2076552 'move' call_tmp[2076543] count[2076545])
      const-val call_tmp[2076555]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val count[2076557]:int(64)[13] "temp"
      ref tmp[2142171]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
      (2142176 'move' tmp[2142171](2142173 '.' this[1400388] F9__iterator[2141871]))
      (2076559 'move' count[2076557](2076561 '.v' tmp[2142171] F1_count[2113698]))
      (2076564 'move' call_tmp[2076555](2076567 call -[962415] count[2076557]))
      const-val call_tmp[2076569]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val low[2076571]:int(64)[13] "temp"
      ref tmp[2142178]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
      (2142183 'move' tmp[2142178](2142180 '.' this[1400388] F9__iterator[2141871]))
      (2076573 'move' low[2076571](2076575 '.v' tmp[2142178] F0_low[2113694]))
      (2076578 'move' call_tmp[2076569](2076581 call +[439752] low[2076571] call_tmp[2076555]))
      const-val ret_tmp[2076584]:2*int(64)[1040245] "temp"
      const-val low[2076586]:int(64)[13] "temp"
      ref tmp[2142185]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
      (2142190 'move' tmp[2142185](2142187 '.' this[1400388] F9__iterator[2141871]))
      (2076588 'move' low[2076586](2076590 '.v' tmp[2142185] F0_low[2113694]))
      (2076594 call _build_tuple[1040203] low[2076586] call_tmp[2076569] ret_tmp[2076584])
      (2076598 'move' tmp[2076539] ret_tmp[2076584])
      (2076601 'move' tmp[2076455] tmp[2076539])
    }
    const tmp[2142192]:2*int(64)[1040245] "temp"
    (2076605 '=' tmp[2142192] tmp[2076455])
    (2142194 '.=' this[1400388] F10_tmp[2141873] tmp[2142192])
    (2076608 'noop')
    1
    ref call_tmp[2076610]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
    ref tmp[2142198]:_ref(2*int(64))[1040318] "temp"
    (2142203 'move' tmp[2142198](2142200 '.' this[1400388] F10_tmp[2141873]))
    (2076612 'move' call_tmp[2076610](2076614 '.' tmp[2142198] x0[1040241]))
    const-val start[2076617]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[2076619]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2076621 'move' coerce_tmp[2076619](2076623 'deref' call_tmp[2076610]))
    (2076625 '=' start[2076617] coerce_tmp[2076619])
    (2076628 'noop')
    ref call_tmp[2076629]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
    ref tmp[2142205]:_ref(2*int(64))[1040318] "temp"
    (2142210 'move' tmp[2142205](2142207 '.' this[1400388] F10_tmp[2141873]))
    (2076631 'move' call_tmp[2076629](2076633 '.' tmp[2142205] x1[1040243]))
    const-val end[2076636]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[2076638]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2076640 'move' coerce_tmp[2076638](2076642 'deref' call_tmp[2076629]))
    (2076644 '=' end[2076636] coerce_tmp[2076638])
    (2076647 'noop')
    val _indexOfInterest[2076648]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[2076652]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[2076654]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
    (2076657 call chpl_direct_param_stride_range_iter[1102713] coerce_tmp[2076619] coerce_tmp[2076638] ret_tmp[2076654])
    (2076661 'move' call_tmp[2076652] ret_tmp[2076654])
    val tmp[2142212]:_ic_chpl_direct_param_stride_range_iter[1103475] "temp"
    (2076664 'move' tmp[2142212](2076667 call _getIterator[1103490] call_tmp[2076652]))
    (2142214 '.=' this[1400388] F11__iterator[2141875] tmp[2142212])
    val ret[2076670]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead after last mention" "RVV" "temp"
    val call_tmp[2076672]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (2076675 call chpl_range_check_stride[1103033])
    val call_tmp[2076678]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[2142218]:int(64)[13] "temp"
    (2076680 'move' tmp[2142218] 0)
    (2142220 '.=' this[1400388] F12_i[2141877] tmp[2142218])
    val call_tmp[2076683]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val default_arg_first[2076685]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[2076687]:int(64)[13] "temp"
    ref tmp[2142224]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
    (2142229 'move' tmp[2142224](2142226 '.' this[1400388] F11__iterator[2141875]))
    (2076689 'move' low[2076687](2076691 '.v' tmp[2142224] F0_low[2115192]))
    (2076694 'move' default_arg_first[2076685](2076697 call chpl_checkIfRangeIterWillOverflow_default_first[1103387] low[2076687]))
    const-val default_arg_last[2076699]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[2076701]:int(64)[13] "temp"
    ref tmp[2142231]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
    (2142236 'move' tmp[2142231](2142233 '.' this[1400388] F11__iterator[2141875]))
    (2076703 'move' high[2076701](2076705 '.v' tmp[2142231] F1_high[2115196]))
    (2076708 'move' default_arg_last[2076699](2076711 call chpl_checkIfRangeIterWillOverflow_default_last[1103415] high[2076701]))
    const-val _return_tmp_[2076713]:bool[10] "dead after last mention" "temp"
    const-val low[2076715]:int(64)[13] "temp"
    ref tmp[2142238]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
    (2142243 'move' tmp[2142238](2142240 '.' this[1400388] F11__iterator[2141875]))
    (2076717 'move' low[2076715](2076719 '.v' tmp[2142238] F0_low[2115192]))
    const-val high[2076722]:int(64)[13] "temp"
    ref tmp[2142245]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
    (2142250 'move' tmp[2142245](2142247 '.' this[1400388] F11__iterator[2141875]))
    (2076724 'move' high[2076722](2076726 '.v' tmp[2142245] F1_high[2115196]))
    (2076729 'move' _return_tmp_[2076713](2076732 call chpl_checkIfRangeIterWillOverflow[1096265] low[2076715] high[2076722] 1 default_arg_first[2076685] default_arg_last[2076699] 1))
    CForLoop[2076739] hazard
    {
      const-val yret[2076768]:int(64)[13] "dead after last mention" "YVV" "temp"
      const-val tmp[2142252]:int(64)[13] "temp"
      (2142257 'move' tmp[2142252](2142254 '.v' this[1400388] F12_i[2141877]))
      (2076770 'move' yret[2076768] tmp[2142252])
      const-val _yieldedIndex[2076773]:int(64)[13] "temp"
      const-val tmp[2142259]:int(64)[13] "temp"
      (2142264 'move' tmp[2142259](2142261 '.v' this[1400388] F12_i[2141877]))
      (2076775 'move' _yieldedIndex[2076773] tmp[2142259])
      const-val i[2076779]:int(64)[13] "const" "index var" "insert auto destroy"
      (2076781 'move' i[2076779] _yieldedIndex[2076773])
      const-val yret[2076784]:int(64)[13] "dead after last mention" "YVV" "temp"
      (2076786 'move' yret[2076784] _yieldedIndex[2076773])
      const-val _yieldedIndex[2076789]:int(64)[13] "temp"
      (2076791 'move' _yieldedIndex[2076789] _yieldedIndex[2076773])
      const-val i[2076795]:int(64)[13] "const" "index var" "insert auto destroy"
      (2076797 'move' i[2076795] _yieldedIndex[2076789])
      const-val yret[2076800]:int(64)[13] "dead after last mention" "YVV" "temp"
      (2076802 'move' yret[2076800] _yieldedIndex[2076789])
      const-val _yieldedIndex[2076838]:int(64)[13] "temp"
      (2077106 'move' _yieldedIndex[2076838] _yieldedIndex[2076789])
      const-val i[2076840]:int(64)[13] "const" "index var" "insert auto destroy"
      (2076842 'move' i[2076840] _yieldedIndex[2076838])
      val chunk[2076845]:2*int(64)[1040245] "dead at end of block" "insert auto destroy" "maybe copy elided"
      val call_tmp[2076847]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[2076849]:2*int(64)[1040245] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      ref tmp[2142266]:_ref(2*int(64))[1040318] "temp"
      (2142271 'move' tmp[2142266](2142268 '.' this[1400388] F13_ret_tmp[2141879]))
      (2076854 call _defaultOf[1402803] tmp[2142266])
      const-val tmp[2142273]:2*int(64)[1040245] "temp"
      (2142278 'move' tmp[2142273](2142275 '.v' this[1400388] F13_ret_tmp[2141879]))
      (2076856 'move' chunk[2076845] tmp[2142273])
      const-val tmp[2076859]:RemElems[266554] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val remPol[2076861]:RemElems[266554] "temp"
      ref tmp[2142280]:_ref(_ic_chunksOrder)[1400967] "temp"
      (2142285 'move' tmp[2142280](2142282 '.' this[1400388] F3__iterator[2141859]))
      (2076863 'move' remPol[2076861](2076865 '.v' tmp[2142280] F2_remPol[2142695]))
      (2076868 'move' tmp[2076859] remPol[2076861])
      const-val call_tmp[2076871]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val remPol[2076873]:RemElems[266554] "temp"
      ref tmp[2142287]:_ref(_ic_chunksOrder)[1400967] "temp"
      (2142292 'move' tmp[2142287](2142289 '.' this[1400388] F3__iterator[2141859]))
      (2076875 'move' remPol[2076873](2076877 '.v' tmp[2142287] F2_remPol[2142695]))
      (2076880 'move' call_tmp[2076871](2076883 call ==[1401528] remPol[2076873] Thru[266548]))
      const-val call_tmp[2076886]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2076888 'move' call_tmp[2076886] call_tmp[2076871])
      if call_tmp[2076871]
      {
        const-val call_tmp[2076893]:2*int(64)[1040245] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[2142294]:int(64)[13] "temp"
        (2142299 'move' tmp[2142294](2142296 '.v' this[1400388] F4_nElems[2141861]))
        const-val tmp[2142301]:int(64)[13] "temp"
        (2142306 'move' tmp[2142301](2142303 '.v' this[1400388] F5_nChunks[2141863]))
        ref tmp[2142308]:_ref(2*int(64))[1040318] "temp"
        (2142313 'move' tmp[2142308](2142310 '.' this[1400388] F14_ret_tmp[2141881]))
        (2076898 call chunkOrderThru[1401798] tmp[2142294] tmp[2142301] i[2076840] tmp[2142308])
        const-val tmp[2142315]:2*int(64)[1040245] "temp"
        (2142320 'move' tmp[2142315](2142317 '.v' this[1400388] F14_ret_tmp[2141881]))
        (2076903 'move' call_tmp[2076893] tmp[2142315])
        (2076907 call =[1402050] chunk[2076845] call_tmp[2076893])
        (2076911 call chpl__autoDestroy[1674803] call_tmp[2076893])
      }
      {
        const-val call_tmp[2076914]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2076916 'move' call_tmp[2076914](2076919 call ==[1401528] tmp[2076859] Pack[266550]))
        const-val call_tmp[2076922]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2076924 'move' call_tmp[2076922] call_tmp[2076914])
        if call_tmp[2076914]
        {
          const-val call_tmp[2076929]:2*int(64)[1040245] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val tmp[2142322]:int(64)[13] "temp"
          (2142327 'move' tmp[2142322](2142324 '.v' this[1400388] F6_chunkSize[2141865]))
          const-val tmp[2142329]:int(64)[13] "temp"
          (2142334 'move' tmp[2142329](2142331 '.v' this[1400388] F4_nElems[2141861]))
          ref tmp[2142336]:_ref(2*int(64))[1040318] "temp"
          (2142341 'move' tmp[2142336](2142338 '.' this[1400388] F15_ret_tmp[2141883]))
          (2076934 call chunkOrderPack[1402274] tmp[2142322] tmp[2142329] i[2076840] tmp[2142336])
          const-val tmp[2142343]:2*int(64)[1040245] "temp"
          (2142348 'move' tmp[2142343](2142345 '.v' this[1400388] F15_ret_tmp[2141883]))
          (2076939 'move' call_tmp[2076929] tmp[2142343])
          (2076943 call =[1402050] chunk[2076845] call_tmp[2076929])
          (2076947 call chpl__autoDestroy[1674803] call_tmp[2076929])
        }
        {
          const-val call_tmp[2076950]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2076952 'move' call_tmp[2076950](2076955 call ==[1401528] tmp[2076859] Mod[266552]))
          const-val call_tmp[2076958]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2076960 'move' call_tmp[2076958] call_tmp[2076950])
          if call_tmp[2076950]
          {
            const-val call_tmp[2076965]:2*int(64)[1040245] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val tmp[2142350]:int(64)[13] "temp"
            (2142355 'move' tmp[2142350](2142352 '.v' this[1400388] F6_chunkSize[2141865]))
            const-val tmp[2142357]:int(64)[13] "temp"
            (2142362 'move' tmp[2142357](2142359 '.v' this[1400388] F7_rem[2141867]))
            const-val tmp[2142364]:int(64)[13] "temp"
            (2142369 'move' tmp[2142364](2142366 '.v' this[1400388] F4_nElems[2141861]))
            const-val tmp[2142371]:int(64)[13] "temp"
            (2142376 'move' tmp[2142371](2142373 '.v' this[1400388] F5_nChunks[2141863]))
            ref tmp[2142378]:_ref(2*int(64))[1040318] "temp"
            (2142383 'move' tmp[2142378](2142380 '.' this[1400388] F16_ret_tmp[2141885]))
            (2076970 call chunkOrderMod[1402531] tmp[2142350] tmp[2142357] tmp[2142364] tmp[2142371] i[2076840] tmp[2142378])
            const-val tmp[2142385]:2*int(64)[1040245] "temp"
            (2142390 'move' tmp[2142385](2142387 '.v' this[1400388] F16_ret_tmp[2141885]))
            (2076977 'move' call_tmp[2076965] tmp[2142385])
            (2076981 call =[1402050] chunk[2076845] call_tmp[2076965])
            (2076985 call chpl__autoDestroy[1674803] call_tmp[2076965])
          }
          {
            (2076989 call halt[154111] "RangeChunk: unknown RemElems in chunksOrder")
          }
        }
      }
      const-val yret[2076994]:2*int(64)[1040245] "dead after last mention" "YVV" "temp"
      val call_tmp[2076996]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[2076998]:2*int(64)[1040245] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val _yield_expr_tmp_[2077000]:2*int(64)[1040245] "temp"
      (2077002 '=' _yield_expr_tmp_[2077000] chunk[2076845])
      (2077005 'noop')
      (2077006 'move' yret[2076994] _yield_expr_tmp_[2077000])
      const-val _yieldedIndex[2077009]:2*int(64)[1040245] "temp"
      (2077011 'move' _yieldedIndex[2077009] _yield_expr_tmp_[2077000])
      1
      const-val startOrder[2077016]:int(64)[13] "const" "index var" "insert auto destroy"
      (2077018 'move' startOrder[2077016](2077020 '.v' _yieldedIndex[2077009] x0[1040241]))
      const-val endOrder[2077023]:int(64)[13] "const" "index var" "insert auto destroy"
      (2077025 'move' endOrder[2077023](2077027 '.v' _yieldedIndex[2077009] x1[1040243]))
      const-val call_tmp[2077030]:int(64)[13] "dead at end of block" "maybe param" "temp"
      const-val tmp[2142392]:range(int(64),bounded,false)[1027003] "temp"
      (2142397 'move' tmp[2142392](2142394 '.v' this[1400388] F0_r[2141847]))
      (2077032 'move' call_tmp[2077030](2077035 call orderToIndex[1104229] tmp[2142392] startOrder[2077016]))
      const-val start[2077038]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      (2077040 'move' start[2077038] call_tmp[2077030])
      const-val call_tmp[2077043]:int(64)[13] "dead at end of block" "maybe param" "temp"
      const-val tmp[2142399]:range(int(64),bounded,false)[1027003] "temp"
      (2142404 'move' tmp[2142399](2142401 '.v' this[1400388] F0_r[2141847]))
      (2077045 'move' call_tmp[2077043](2077048 call orderToIndex[1104229] tmp[2142399] endOrder[2077023]))
      const-val end[2077051]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      (2077053 'move' end[2077051] call_tmp[2077043])
      const-val yret[2077056]:range(int(64),bounded,false)[1027003] "dead after last mention" "YVV" "temp"
      const-val tmp[2077058]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      ref tmp[2142406]:_ref(range(int(64),bounded,false))[1027047] "temp"
      (2142411 'move' tmp[2142406](2142408 '.' this[1400388] F17_ret_tmp[2141887]))
      (2077065 call chpl_build_bounded_range[455253] call_tmp[2077030] call_tmp[2077043] tmp[2142406])
      val tmp[2142413]:range(int(64),bounded,false)[1027003] "temp"
      const-val tmp[2142419]:range(int(64),bounded,false)[1027003] "temp"
      (2142424 'move' tmp[2142419](2142421 '.v' this[1400388] F17_ret_tmp[2141887]))
      (2077069 'move' tmp[2142413] tmp[2142419])
      (2142415 '.=' this[1400388] value[2141889] tmp[2142413])
      const-val tmp[2142426]:range(int(64),bounded,false)[1027003] "temp"
      (2142431 'move' tmp[2142426](2142428 '.v' this[1400388] value[2141889]))
      (2077072 'move' tmp[2077058] tmp[2142426])
      val call_tmp[2077075]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[2077077]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val tmp[2142433]:range(int(64),bounded,false)[1027003] "temp"
      (2142438 'move' tmp[2142433](2142435 '.v' this[1400388] value[2141889]))
      (2077079 'move' yret[2077056] tmp[2142433])
      (2142557 '.=' this[1400388] more[1400363] 2)
      gotoIterEnd _end[2142555] _end[2142555]
      label _jump_break_2[2142565]
      val tmp[2142440]:_ic_chpl_direct_param_stride_range_iter[1103475] "temp"
      (2142445 'move' tmp[2142440](2142442 '.v' this[1400388] F11__iterator[2141875]))
      (2077097 call _freeIterator[1103663] tmp[2142440])
      ref tmp[2142447]:_ref(2*int(64))[1040318] "temp"
      (2142452 'move' tmp[2142447](2142449 '.' this[1400388] F10_tmp[2141873]))
      (2077100 call chpl__autoDestroy[1674803] tmp[2142447])
      val tmp[2142454]:_ic_chpl_direct_counted_range_iter_helper[1103729] "temp"
      (2142459 'move' tmp[2142454](2142456 '.v' this[1400388] F9__iterator[2141871]))
      (2077103 call _freeIterator[1103913] tmp[2142454])
      val tmp[2142461]:_ic_chpl_direct_counted_range_iter[1103979] "temp"
      (2142466 'move' tmp[2142461](2142463 '.v' this[1400388] F8__iterator[2141869]))
      (2077087 call _freeIterator[1104163] tmp[2142461])
      val tmp[2142468]:_ic_chunksOrder[1400824] "temp"
      (2142473 'move' tmp[2142468](2142470 '.v' this[1400388] F3__iterator[2141859]))
      (2077090 call _freeIterator[1402902] tmp[2142468])
      gotoReturn _endchunks[1889825] _endchunks[1889825]
      label _jump_2[2142563]
      {
        const-val low[2076741]:int(64)[13] "temp"
        ref tmp[2142475]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
        (2142480 'move' tmp[2142475](2142477 '.' this[1400388] F11__iterator[2141875]))
        (2076743 'move' low[2076741](2076745 '.v' tmp[2142475] F0_low[2115192]))
        val tmp[2142482]:int(64)[13] "temp"
        (2076748 '=' tmp[2142482] low[2076741])
        (2142484 '.=' this[1400388] F12_i[2141877] tmp[2142482])
      }
      {
        const-val high[2076752]:int(64)[13] "temp"
        ref tmp[2142488]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
        (2142493 'move' tmp[2142488](2142490 '.' this[1400388] F11__iterator[2141875]))
        (2076754 'move' high[2076752](2076756 '.v' tmp[2142488] F1_high[2115196]))
        val tmp[2142495]:int(64)[13] "temp"
        (2142500 'move' tmp[2142495](2142497 '.v' this[1400388] F12_i[2141877]))
        (2076759 '<=' tmp[2142495] high[2076752])
      }
      {
        val call_tmp[2076763]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val tmp[2142502]:int(64)[13] "temp"
        (2142507 'move' tmp[2142502](2142504 '.v' this[1400388] F12_i[2141877]))
        (2076765 '+=' tmp[2142502] 1)
        (2142509 '.=' this[1400388] F12_i[2141877] tmp[2142502])
      }
    }
    label _endchpl_direct_param_stride_range_iter[2076821]
    val tmp[2142513]:_ic_chpl_direct_param_stride_range_iter[1103475] "temp"
    (2142518 'move' tmp[2142513](2142515 '.v' this[1400388] F11__iterator[2141875]))
    (2076824 call _freeIterator[1103663] tmp[2142513])
    ref tmp[2142520]:_ref(2*int(64))[1040318] "temp"
    (2142525 'move' tmp[2142520](2142522 '.' this[1400388] F10_tmp[2141873]))
    (2076827 call chpl__autoDestroy[1674803] tmp[2142520])
    label _endchpl_direct_counted_range_iter_helper[2076829]
    val tmp[2142527]:_ic_chpl_direct_counted_range_iter_helper[1103729] "temp"
    (2142532 'move' tmp[2142527](2142529 '.v' this[1400388] F9__iterator[2141871]))
    (2076832 call _freeIterator[1103913] tmp[2142527])
    label _endchpl_direct_counted_range_iter[2076834]
    val tmp[2142534]:_ic_chpl_direct_counted_range_iter[1103979] "temp"
    (2142539 'move' tmp[2142534](2142536 '.v' this[1400388] F8__iterator[2141869]))
    (2009405 call _freeIterator[1104163] tmp[2142534])
    label _end_chunksOrder[2009407]
    val tmp[2142541]:_ic_chunksOrder[1400824] "temp"
    (2142546 'move' tmp[2142541](2142543 '.v' this[1400388] F3__iterator[2141859]))
    (1925845 call _freeIterator[1402902] tmp[2142541])
    label _endchunks[1889825]
    (2142567 '.=' this[1400388] more[1400363] 0)
    label _end[2142555]
    (2142602 return _void[55])
  }
  function _ic_chunks[1400360].zip1[1400395](const in arg this[1400397]:_ic_chunks[1400360]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (2142548 call advance[1400386] this[1400397])
    (1400402 return _void[55])
  }
  function _ic_chunks[1400360].zip2[1400404](const in arg this[1400406]:_ic_chunks[1400360]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1400411 return _void[55])
  }
  function _ic_chunks[1400360].zip3[1400413](const in arg this[1400415]:_ic_chunks[1400360]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (2142551 call advance[1400386] this[1400415])
    (1400420 return _void[55])
  }
  function _ic_chunks[1400360].zip4[1400422](const in arg this[1400424]:_ic_chunks[1400360]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1400429 return _void[55])
  }
  function _ic_chunks[1400360].hasMore[1400431](const in arg this[1400433]:_ic_chunks[1400360]) : int(64)[13] "auto ii" "inline" "method" "resolved"
  {
    val tmp[2142605]:int(64)[13] "temp"
    (2142610 'move' tmp[2142605](2142607 '.v' this[1400433] more[1400363]))
    (2142612 return tmp[2142605])
  }
  function _ic_chunks[1400360].getValue[1400440](const in arg this[1400442]:_ic_chunks[1400360]) : range(int(64),bounded,false)[1027003] "auto ii" "inline" "method" "resolved"
  {
    val tmp[2142615]:range(int(64),bounded,false)[1027003] "temp"
    (2142620 'move' tmp[2142615](2142617 '.v' this[1400442] value[2141889]))
    (2142622 return tmp[2142615])
  }
  function chunks[1399928](const in arg r[1399930]:range(int(64),bounded,false)[1027003], const in arg numChunks[1399932]:int(64)[13], const in arg remPol[1399936]:RemElems[266554], ref arg _retArg[1914797]:_ref(_ir_chunks)[1400477]) : void[4] "compiler added where" "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "resolved" "no return value for void"
  {
    val _ir[2142630]:_ir_chunks[1400366] "temp"
    (2142632 '.=' _ir[2142630] F0_r[2141849] r[1399930])
    (2142636 '.=' _ir[2142630] F1_numChunks[2141853] numChunks[1399932])
    (2142640 '.=' _ir[2142630] F2_remPol[2141857] remPol[1399936])
    (2142644 '=' _retArg[1914797] _ir[2142630])
    (2142647 return _void[55])
  }
  function _ic_chunks[1400360].init[1400449](const in arg this[1400451]:_ic_chunks[1400360]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (2142625 return _void[55])
  }
  function _ic_chunks[1400360].incr[1400458](const in arg this[1400460]:_ic_chunks[1400360]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (2142628 return _void[55])
  }
  type _ic_chunks[1400360] val super[1400361]:object[22] "super class" val more[1400363]:int(64)[13] const-val F0_r[2141847]:range(int(64),bounded,false)[1027003] const-val F1_numChunks[2141851]:int(64)[13] const-val F2_remPol[2141855]:RemElems[266554] val F3__iterator[2141859]:_ic_chunksOrder[1400824] const F4_nElems[2141861]:int(64)[13] val F5_nChunks[2141863]:int(64)[13] val F6_chunkSize[2141865]:int(64)[13] val F7_rem[2141867]:int(64)[13] val F8__iterator[2141869]:_ic_chpl_direct_counted_range_iter[1103979] val F9__iterator[2141871]:_ic_chpl_direct_counted_range_iter_helper[1103729] const F10_tmp[2141873]:2*int(64)[1040245] val F11__iterator[2141875]:_ic_chpl_direct_param_stride_range_iter[1103475] val F12_i[2141877]:int(64)[13] const-val F13_ret_tmp[2141879]:2*int(64)[1040245] const-val F14_ret_tmp[2141881]:2*int(64)[1040245] const-val F15_ret_tmp[2141883]:2*int(64)[1040245] const-val F16_ret_tmp[2141885]:2*int(64)[1040245] const-val F17_ret_tmp[2141887]:range(int(64),bounded,false)[1027003] val value[2141889]:range(int(64),bounded,false)[1027003]
  type _ir_chunks[1400366] const-val F0_r[2141849]:range(int(64),bounded,false)[1027003] const-val F1_numChunks[2141853]:int(64)[13] const-val F2_remPol[2141857]:RemElems[266554]
  function _getIterator[1400375](const  ref arg ir[1400377]:_ir_chunks[1400366]) : _ic_chunks[1400360] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[1400484]:_ic_chunks[1400360] "dead after last mention" "RVV" "temp"
    val _ic_[1400367]:_ic_chunks[1400360] "dead after last mention" "temp"
    const-val call_tmp[1400491]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1400494 'move' call_tmp[1400491](1400506 'sizeof_bundle' _ic_chunks[1400360]))
    const-val cast_tmp[1400509]:c_void_ptr[149] "dead after last mention" "temp"
    (1400511 'move' cast_tmp[1400509](1400372 call chpl_here_alloc[187788] call_tmp[1400491] 79))
    (1400380 'move' _ic_[1400367](1400513 'cast' _ic_chunks[1400360] cast_tmp[1400509]))
    (1400382 'setcid' _ic_[1400367])
    (1400489 'move' ret[1400484] _ic_[1400367])
    (2142650 '.=' ret[1400484] more[1400363] 1)
    const-val tmp[2142654]:range(int(64),bounded,false)[1027003] "temp"
    (2142659 'move' tmp[2142654](2142655 '.v' ir[1400377] F0_r[2141849]))
    (2142661 '.=' ret[1400484] F0_r[2141847] tmp[2142654])
    const-val tmp[2142665]:int(64)[13] "temp"
    (2142670 'move' tmp[2142665](2142666 '.v' ir[1400377] F1_numChunks[2141853]))
    (2142672 '.=' ret[1400484] F1_numChunks[2141851] tmp[2142665])
    const-val tmp[2142676]:RemElems[266554] "temp"
    (2142681 'move' tmp[2142676](2142677 '.v' ir[1400377] F2_remPol[2141857]))
    (2142683 '.=' ret[1400484] F2_remPol[2141855] tmp[2142676])
    (1400486 return ret[1400484])
  }
  function _ic_chunksOrder[1400824].advance[1400850](const in arg this[1400852]:_ic_chunksOrder[1400824]) : void[4] "auto ii" "method" "resolved"
  {
    const-val more[2143331]:int(64)[13]
    (2143359 'move' more[2143331](2143356 '.v' this[1400852] more[1400827]))
    const-val tmp[2143334]:bool[10] "temp"
    (2143341 'move' tmp[2143334](2143338 '==' more[2143331] 2))
    if tmp[2143334]
    {
      gotoIterResume _jump_2[2143323] _jump_2[2143323]
    }
    const-val tmp[2143346]:bool[10] "temp"
    (2143351 'move' tmp[2143346](2143348 '==' more[2143331] -2))
    if tmp[2143346]
    {
      gotoIterResume _jump_break_2[2143325] _jump_break_2[2143325]
    }
    val ret[1400800]:_ir_chunksOrder[1400830] "dead at end of block" "RVV" "temp"
    const-val tmp[1400983]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1400985]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[2142727]:range(int(64),bounded,false)[1027003] "temp"
    (2142732 'move' tmp[2142727](2142729 '.v' this[1400852] F0_r[2142687]))
    (1400987 'move' call_tmp[1400985](1400990 call size[1035978] tmp[2142727]))
    (1400993 'move' tmp[1400983](1400996 call ==[435744] call_tmp[1400985] 0))
    val tmp[1401012]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1401014]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1401016]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1401018 'move' call_tmp[1401016] tmp[1400983])
    (1401023 'move' tmp[1401014] tmp[1400983])
    if tmp[1400983]
    {
      (1401030 'move' tmp[1401012] 1)
    }
    {
      const-val tmp[1401036]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1401038]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val tmp[2142734]:int(64)[13] "temp"
      (2142739 'move' tmp[2142734](2142736 '.v' this[1400852] F1_numChunks[2142691]))
      (1401040 'move' call_tmp[1401038](1401043 call <=[437128] tmp[2142734] 0))
      (1401046 'move' tmp[1401036] call_tmp[1401038])
      (1401051 'move' tmp[1401012] call_tmp[1401038])
    }
    const-val call_tmp[1401057]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1401059 'move' call_tmp[1401057] tmp[1401012])
    if tmp[1401012]
    {
      gotoReturn _end_chunksOrder[1401502] _end_chunksOrder[1401502]
    }
    const-val call_tmp[1401069]:int(64)[13] "dead at end of block" "maybe param" "temp"
    const-val tmp[2142741]:range(int(64),bounded,false)[1027003] "temp"
    (2142746 'move' tmp[2142741](2142743 '.v' this[1400852] F0_r[2142687]))
    (1401071 'move' call_tmp[1401069](1401074 call size[1035978] tmp[2142741]))
    const tmp[2142748]:int(64)[13] "temp"
    (1401079 'move' tmp[2142748] call_tmp[1401069])
    (2142750 '.=' this[1400852] F3_nElems[2142699] tmp[2142748])
    val call_tmp[1401083]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1401090]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val tmp[2142754]:int(64)[13] "temp"
    (2142759 'move' tmp[2142754](2142756 '.v' this[1400852] F1_numChunks[2142691]))
    (1401092 'move' call_tmp[1401090](1401095 call min[450112] tmp[2142754] call_tmp[1401069]))
    const-val call_tmp[1401098]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1401100 'move' call_tmp[1401098] call_tmp[1401090])
    val tmp[2142761]:int(64)[13] "temp"
    (1401108 'move' tmp[2142761] call_tmp[1401090])
    (2142763 '.=' this[1400852] F4_nChunks[2142701] tmp[2142761])
    val call_tmp[1401114]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[2142767]:int(64)[13] "temp"
    (1402793 'move' tmp[2142767] 0)
    (2142769 '.=' this[1400852] F5_chunkSize[2142703] tmp[2142767])
    val call_tmp[1401126]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[2142773]:int(64)[13] "temp"
    (1402796 'move' tmp[2142773] 0)
    (2142775 '.=' this[1400852] F6_rem[2142705] tmp[2142773])
    const-val tmp[1401139]:RemElems[266554] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[2142779]:RemElems[266554] "temp"
    (2142784 'move' tmp[2142779](2142781 '.v' this[1400852] F2_remPol[2142695]))
    (1401141 'move' tmp[1401139] tmp[2142779])
    const-val call_tmp[1401144]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[2142786]:RemElems[266554] "temp"
    (2142791 'move' tmp[2142786](2142788 '.v' this[1400852] F2_remPol[2142695]))
    (1401146 'move' call_tmp[1401144](1401149 call ==[1401528] tmp[2142786] Pack[266550]))
    const-val call_tmp[1401152]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1401154 'move' call_tmp[1401152] call_tmp[1401144])
    if call_tmp[1401144]
    {
      const-val call_tmp[1401161]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val tmp[2142793]:int(64)[13] "temp"
      (2142798 'move' tmp[2142793](2142795 '.v' this[1400852] F3_nElems[2142699]))
      const-val tmp[2142800]:int(64)[13] "temp"
      (2142805 'move' tmp[2142800](2142802 '.v' this[1400852] F4_nChunks[2142701]))
      (1401163 'move' call_tmp[1401161](1401166 call /[442796] tmp[2142793] tmp[2142800]))
      ref tmp[2142807]:_ref(int(64))[936761] "temp"
      (2142812 'move' tmp[2142807](2142809 '.' this[1400852] F5_chunkSize[2142703]))
      (1401170 call =[435443] tmp[2142807] call_tmp[1401161])
      const-val call_tmp[1401177]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val tmp[2142814]:int(64)[13] "temp"
      (2142819 'move' tmp[2142814](2142816 '.v' this[1400852] F5_chunkSize[2142703]))
      const-val tmp[2142821]:int(64)[13] "temp"
      (2142826 'move' tmp[2142821](2142823 '.v' this[1400852] F4_nChunks[2142701]))
      (1401179 'move' call_tmp[1401177](1401182 call *[441944] tmp[2142814] tmp[2142821]))
      const-val call_tmp[1401185]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val tmp[2142828]:int(64)[13] "temp"
      (2142833 'move' tmp[2142828](2142830 '.v' this[1400852] F3_nElems[2142699]))
      (1401187 'move' call_tmp[1401185](1401190 call !=[436128] call_tmp[1401177] tmp[2142828]))
      const-val call_tmp[1401193]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1401195 'move' call_tmp[1401193] call_tmp[1401185])
      if call_tmp[1401185]
      {
        ref tmp[2142835]:_ref(int(64))[936761] "temp"
        (2142840 'move' tmp[2142835](2142837 '.' this[1400852] F5_chunkSize[2142703]))
        (1401203 call +=[451431] tmp[2142835] 1)
        const-val call_tmp[1401208]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val tmp[2142842]:int(64)[13] "temp"
        (2142847 'move' tmp[2142842](2142844 '.v' this[1400852] F3_nElems[2142699]))
        const-val tmp[2142849]:int(64)[13] "temp"
        (2142854 'move' tmp[2142849](2142851 '.v' this[1400852] F5_chunkSize[2142703]))
        (1401210 'move' call_tmp[1401208](1401213 call divceil[1401581] tmp[2142842] tmp[2142849]))
        ref tmp[2142856]:_ref(int(64))[936761] "temp"
        (2142861 'move' tmp[2142856](2142858 '.' this[1400852] F4_nChunks[2142701]))
        (1401217 call =[435443] tmp[2142856] call_tmp[1401208])
      }
    }
    {
      const-val call_tmp[1401226]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1401228 'move' call_tmp[1401226](1401231 call ==[1401528] tmp[1401139] Mod[266552]))
      const-val call_tmp[1401234]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1401236 'move' call_tmp[1401234] call_tmp[1401226])
      if call_tmp[1401226]
      {
        const-val call_tmp[1401243]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val tmp[2142863]:int(64)[13] "temp"
        (2142868 'move' tmp[2142863](2142865 '.v' this[1400852] F3_nElems[2142699]))
        const-val tmp[2142870]:int(64)[13] "temp"
        (2142875 'move' tmp[2142870](2142872 '.v' this[1400852] F4_nChunks[2142701]))
        (1401245 'move' call_tmp[1401243](1401248 call /[442796] tmp[2142863] tmp[2142870]))
        ref tmp[2142877]:_ref(int(64))[936761] "temp"
        (2142882 'move' tmp[2142877](2142879 '.' this[1400852] F5_chunkSize[2142703]))
        (1401252 call =[435443] tmp[2142877] call_tmp[1401243])
        const-val call_tmp[1401259]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val tmp[2142884]:int(64)[13] "temp"
        (2142889 'move' tmp[2142884](2142886 '.v' this[1400852] F5_chunkSize[2142703]))
        const-val tmp[2142891]:int(64)[13] "temp"
        (2142896 'move' tmp[2142891](2142893 '.v' this[1400852] F4_nChunks[2142701]))
        (1401261 'move' call_tmp[1401259](1401264 call *[441944] tmp[2142884] tmp[2142891]))
        const-val call_tmp[1401267]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val tmp[2142898]:int(64)[13] "temp"
        (2142903 'move' tmp[2142898](2142900 '.v' this[1400852] F3_nElems[2142699]))
        (1401269 'move' call_tmp[1401267](1401272 call -[440532] tmp[2142898] call_tmp[1401259]))
        ref tmp[2142905]:_ref(int(64))[936761] "temp"
        (2142910 'move' tmp[2142905](2142907 '.' this[1400852] F6_rem[2142705]))
        (1401276 call =[435443] tmp[2142905] call_tmp[1401267])
      }
    }
    val _indexOfInterest[1401287]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[1401291]:_ir_chpl_direct_counted_range_iter[1103985] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[1907770]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
    const-val tmp[2142912]:int(64)[13] "temp"
    (2142917 'move' tmp[2142912](2142914 '.v' this[1400852] F4_nChunks[2142701]))
    (1401296 call chpl_direct_counted_range_iter[458112] 0 tmp[2142912] ret_tmp[1907770])
    (1907773 'move' call_tmp[1401291] ret_tmp[1907770])
    val tmp[2142919]:_ic_chpl_direct_counted_range_iter[1103979] "temp"
    (1401299 'move' tmp[2142919](1401302 call _getIterator[1103994] call_tmp[1401291]))
    (2142921 '.=' this[1400852] F7__iterator[2142707] tmp[2142919])
    val ret[2009554]:_ir_chpl_direct_counted_range_iter[1103985] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[2009556]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[2009560]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[2009562]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
    const-val low[2010073]:int(64)[13] "temp"
    ref tmp[2142925]:_ref(_ic_chpl_direct_counted_range_iter)[1104122] "temp"
    (2142930 'move' tmp[2142925](2142927 '.' this[1400852] F7__iterator[2142707]))
    (2010078 'move' low[2010073](2010075 '.v' tmp[2142925] F0_low[2107536]))
    const-val count[2010080]:int(64)[13] "temp"
    ref tmp[2142932]:_ref(_ic_chpl_direct_counted_range_iter)[1104122] "temp"
    (2142937 'move' tmp[2142932](2142934 '.' this[1400852] F7__iterator[2142707]))
    (2010085 'move' count[2010080](2010082 '.v' tmp[2142932] F1_count[2107540]))
    (2009565 call chpl_direct_counted_range_iter_helper[1102287] low[2010073] count[2010080] ret_tmp[2009562])
    (2009569 'move' call_tmp[2009560] ret_tmp[2009562])
    val tmp[2142939]:_ic_chpl_direct_counted_range_iter_helper[1103729] "temp"
    (2009572 'move' tmp[2142939](2009575 call _getIterator[1103744] call_tmp[2009560]))
    (2142941 '.=' this[1400852] F8__iterator[2142709] tmp[2142939])
    val ret[2009578]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead after last mention" "RVV" "temp"
    val call_tmp[2009580]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val tmp[2009582]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[2009584]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    const-val call_tmp[2009586]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[2009588]:int(64)[13] "temp"
    ref tmp[2142945]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
    (2142950 'move' tmp[2142945](2142947 '.' this[1400852] F8__iterator[2142709]))
    (2009590 'move' count[2009588](2009592 '.v' tmp[2142945] F1_count[2113698]))
    (2009595 'move' call_tmp[2009586](2009598 call <[948587] count[2009588]))
    (2009600 'move' tmp[2009584] call_tmp[2009586])
    (2009603 'move' tmp[2009582] call_tmp[2009586])
    const-val call_tmp[2009606]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2009608 'move' call_tmp[2009606] call_tmp[2009586])
    if call_tmp[2009586]
    {
      (2009614 call boundsCheckHalt[210254] "With a negative count, the range must have a last index.")
    }
    val tmp[2009619]:2*int(64)[1040245] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
    const-val tmp[2009621]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[2009623]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[2009625]:int(64)[13] "temp"
    ref tmp[2142952]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
    (2142957 'move' tmp[2142952](2142954 '.' this[1400852] F8__iterator[2142709]))
    (2009627 'move' count[2009625](2009629 '.v' tmp[2142952] F1_count[2113698]))
    (2009632 'move' call_tmp[2009623](2009635 call ==[435744] count[2009625] 0))
    (2009638 'move' tmp[2009621] call_tmp[2009623])
    if call_tmp[2009623]
    {
      const-val tmp[2009643]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      val call_tmp[2009645]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[2009647]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val low[2009649]:int(64)[13] "temp"
      ref tmp[2142959]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
      (2142964 'move' tmp[2142959](2142961 '.' this[1400852] F8__iterator[2142709]))
      (2009651 'move' low[2009649](2009653 '.v' tmp[2142959] F0_low[2113694]))
      (2009656 'move' call_tmp[2009647](2009659 call _cast[956223] low[2009649]))
      const-val call_tmp[2009661]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2009663]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2009665 'move' coerce_tmp[2009663](2009667 'cast' uint(64)[115] 1))
      (2009670 'move' call_tmp[2009661](2009673 call -[962382] call_tmp[2009647]))
      const-val call_tmp[2009675]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (2009677 'move' call_tmp[2009675](2009680 call _cast[953732] call_tmp[2009661]))
      const-val ret_tmp[2009682]:2*int(64)[1040245] "temp"
      const-val low[2009684]:int(64)[13] "temp"
      ref tmp[2142966]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
      (2142971 'move' tmp[2142966](2142968 '.' this[1400852] F8__iterator[2142709]))
      (2009686 'move' low[2009684](2009688 '.v' tmp[2142966] F0_low[2113694]))
      (2009692 call _build_tuple[1040203] low[2009684] call_tmp[2009675] ret_tmp[2009682])
      (2009696 'move' tmp[2009643] ret_tmp[2009682])
      (2009699 'move' tmp[2009619] tmp[2009643])
    }
    {
      const-val tmp[2009703]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      val call_tmp[2009705]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[2009707]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val count[2009709]:int(64)[13] "temp"
      ref tmp[2142973]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
      (2142978 'move' tmp[2142973](2142975 '.' this[1400852] F8__iterator[2142709]))
      (2009711 'move' count[2009709](2009713 '.v' tmp[2142973] F1_count[2113698]))
      (2009716 'move' call_tmp[2009707] count[2009709])
      const-val call_tmp[2009719]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val count[2009721]:int(64)[13] "temp"
      ref tmp[2142980]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
      (2142985 'move' tmp[2142980](2142982 '.' this[1400852] F8__iterator[2142709]))
      (2009723 'move' count[2009721](2009725 '.v' tmp[2142980] F1_count[2113698]))
      (2009728 'move' call_tmp[2009719](2009731 call -[962415] count[2009721]))
      const-val call_tmp[2009733]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val low[2009735]:int(64)[13] "temp"
      ref tmp[2142987]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
      (2142992 'move' tmp[2142987](2142989 '.' this[1400852] F8__iterator[2142709]))
      (2009737 'move' low[2009735](2009739 '.v' tmp[2142987] F0_low[2113694]))
      (2009742 'move' call_tmp[2009733](2009745 call +[439752] low[2009735] call_tmp[2009719]))
      const-val ret_tmp[2009748]:2*int(64)[1040245] "temp"
      const-val low[2009750]:int(64)[13] "temp"
      ref tmp[2142994]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103872] "temp"
      (2142999 'move' tmp[2142994](2142996 '.' this[1400852] F8__iterator[2142709]))
      (2009752 'move' low[2009750](2009754 '.v' tmp[2142994] F0_low[2113694]))
      (2009758 call _build_tuple[1040203] low[2009750] call_tmp[2009733] ret_tmp[2009748])
      (2009762 'move' tmp[2009703] ret_tmp[2009748])
      (2009765 'move' tmp[2009619] tmp[2009703])
    }
    const tmp[2143001]:2*int(64)[1040245] "temp"
    (2009769 '=' tmp[2143001] tmp[2009619])
    (2143003 '.=' this[1400852] F9_tmp[2142711] tmp[2143001])
    (2009772 'noop')
    1
    ref call_tmp[2009774]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
    ref tmp[2143007]:_ref(2*int(64))[1040318] "temp"
    (2143012 'move' tmp[2143007](2143009 '.' this[1400852] F9_tmp[2142711]))
    (2009776 'move' call_tmp[2009774](2009778 '.' tmp[2143007] x0[1040241]))
    const-val start[2009781]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[2009783]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2009785 'move' coerce_tmp[2009783](2009787 'deref' call_tmp[2009774]))
    (2009789 '=' start[2009781] coerce_tmp[2009783])
    (2009792 'noop')
    ref call_tmp[2009793]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
    ref tmp[2143014]:_ref(2*int(64))[1040318] "temp"
    (2143019 'move' tmp[2143014](2143016 '.' this[1400852] F9_tmp[2142711]))
    (2009795 'move' call_tmp[2009793](2009797 '.' tmp[2143014] x1[1040243]))
    const-val end[2009800]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[2009802]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2009804 'move' coerce_tmp[2009802](2009806 'deref' call_tmp[2009793]))
    (2009808 '=' end[2009800] coerce_tmp[2009802])
    (2009811 'noop')
    val _indexOfInterest[2009812]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[2009816]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[2009818]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
    (2009821 call chpl_direct_param_stride_range_iter[1102713] coerce_tmp[2009783] coerce_tmp[2009802] ret_tmp[2009818])
    (2009825 'move' call_tmp[2009816] ret_tmp[2009818])
    val tmp[2143021]:_ic_chpl_direct_param_stride_range_iter[1103475] "temp"
    (2009828 'move' tmp[2143021](2009831 call _getIterator[1103490] call_tmp[2009816]))
    (2143023 '.=' this[1400852] F10__iterator[2142713] tmp[2143021])
    val ret[2077123]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead after last mention" "RVV" "temp"
    val call_tmp[2077125]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (2077128 call chpl_range_check_stride[1103033])
    val call_tmp[2077131]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[2143027]:int(64)[13] "temp"
    (2077133 'move' tmp[2143027] 0)
    (2143029 '.=' this[1400852] F11_i[2142715] tmp[2143027])
    val call_tmp[2077136]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val default_arg_first[2077138]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[2077407]:int(64)[13] "temp"
    ref tmp[2143033]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
    (2143038 'move' tmp[2143033](2143035 '.' this[1400852] F10__iterator[2142713]))
    (2077412 'move' low[2077407](2077409 '.v' tmp[2143033] F0_low[2115192]))
    (2077140 'move' default_arg_first[2077138](2077143 call chpl_checkIfRangeIterWillOverflow_default_first[1103387] low[2077407]))
    const-val default_arg_last[2077145]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[2077414]:int(64)[13] "temp"
    ref tmp[2143040]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
    (2143045 'move' tmp[2143040](2143042 '.' this[1400852] F10__iterator[2142713]))
    (2077419 'move' high[2077414](2077416 '.v' tmp[2143040] F1_high[2115196]))
    (2077147 'move' default_arg_last[2077145](2077150 call chpl_checkIfRangeIterWillOverflow_default_last[1103415] high[2077414]))
    const-val _return_tmp_[2077152]:bool[10] "dead after last mention" "temp"
    const-val low[2077421]:int(64)[13] "temp"
    ref tmp[2143047]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
    (2143052 'move' tmp[2143047](2143049 '.' this[1400852] F10__iterator[2142713]))
    (2077426 'move' low[2077421](2077423 '.v' tmp[2143047] F0_low[2115192]))
    const-val high[2077428]:int(64)[13] "temp"
    ref tmp[2143054]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
    (2143059 'move' tmp[2143054](2143056 '.' this[1400852] F10__iterator[2142713]))
    (2077433 'move' high[2077428](2077430 '.v' tmp[2143054] F1_high[2115196]))
    (2077154 'move' _return_tmp_[2077152](2077157 call chpl_checkIfRangeIterWillOverflow[1096265] low[2077421] high[2077428] 1 default_arg_first[2077138] default_arg_last[2077145] 1))
    CForLoop[2077164]
    {
      const-val yret[2077179]:int(64)[13] "dead after last mention" "YVV" "temp"
      const-val tmp[2143061]:int(64)[13] "temp"
      (2143066 'move' tmp[2143061](2143063 '.v' this[1400852] F11_i[2142715]))
      (2077181 'move' yret[2077179] tmp[2143061])
      const-val _yieldedIndex[2077195]:int(64)[13] "temp"
      const-val tmp[2143068]:int(64)[13] "temp"
      (2143073 'move' tmp[2143068](2143070 '.v' this[1400852] F11_i[2142715]))
      (2077405 'move' _yieldedIndex[2077195] tmp[2143068])
      const-val i[2077197]:int(64)[13] "const" "index var" "insert auto destroy"
      (2077199 'move' i[2077197] _yieldedIndex[2077195])
      const-val yret[2077202]:int(64)[13] "dead after last mention" "YVV" "temp"
      (2077204 'move' yret[2077202] _yieldedIndex[2077195])
      const-val _yieldedIndex[2077207]:int(64)[13] "temp"
      (2077209 'move' _yieldedIndex[2077207] _yieldedIndex[2077195])
      const-val i[2077213]:int(64)[13] "const" "index var" "insert auto destroy"
      (2077215 'move' i[2077213] _yieldedIndex[2077207])
      const-val yret[2077218]:int(64)[13] "dead after last mention" "YVV" "temp"
      (2077220 'move' yret[2077218] _yieldedIndex[2077207])
      const-val _yieldedIndex[2077223]:int(64)[13] "temp"
      (2077225 'move' _yieldedIndex[2077223] _yieldedIndex[2077207])
      const-val i[2077229]:int(64)[13] "const" "index var" "insert auto destroy"
      (2077231 'move' i[2077229] _yieldedIndex[2077223])
      val chunk[2077234]:2*int(64)[1040245] "dead at end of block" "insert auto destroy" "maybe copy elided"
      val call_tmp[2077236]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[2077238]:2*int(64)[1040245] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      ref tmp[2143075]:_ref(2*int(64))[1040318] "temp"
      (2143080 'move' tmp[2143075](2143077 '.' this[1400852] F12_ret_tmp[2142717]))
      (2077243 call _defaultOf[1402803] tmp[2143075])
      const-val tmp[2143082]:2*int(64)[1040245] "temp"
      (2143087 'move' tmp[2143082](2143084 '.v' this[1400852] F12_ret_tmp[2142717]))
      (2077245 'move' chunk[2077234] tmp[2143082])
      const-val tmp[2077248]:RemElems[266554] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val tmp[2143089]:RemElems[266554] "temp"
      (2143094 'move' tmp[2143089](2143091 '.v' this[1400852] F2_remPol[2142695]))
      (2077250 'move' tmp[2077248] tmp[2143089])
      const-val call_tmp[2077253]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val tmp[2143096]:RemElems[266554] "temp"
      (2143101 'move' tmp[2143096](2143098 '.v' this[1400852] F2_remPol[2142695]))
      (2077255 'move' call_tmp[2077253](2077258 call ==[1401528] tmp[2143096] Thru[266548]))
      const-val call_tmp[2077261]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2077263 'move' call_tmp[2077261] call_tmp[2077253])
      if call_tmp[2077253]
      {
        const-val call_tmp[2077268]:2*int(64)[1040245] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[2143103]:int(64)[13] "temp"
        (2143108 'move' tmp[2143103](2143105 '.v' this[1400852] F3_nElems[2142699]))
        const-val tmp[2143110]:int(64)[13] "temp"
        (2143115 'move' tmp[2143110](2143112 '.v' this[1400852] F4_nChunks[2142701]))
        ref tmp[2143117]:_ref(2*int(64))[1040318] "temp"
        (2143122 'move' tmp[2143117](2143119 '.' this[1400852] F13_ret_tmp[2142719]))
        (2077273 call chunkOrderThru[1401798] tmp[2143103] tmp[2143110] i[2077229] tmp[2143117])
        const-val tmp[2143124]:2*int(64)[1040245] "temp"
        (2143129 'move' tmp[2143124](2143126 '.v' this[1400852] F13_ret_tmp[2142719]))
        (2077278 'move' call_tmp[2077268] tmp[2143124])
        (2077282 call =[1402050] chunk[2077234] call_tmp[2077268])
        (2077286 call chpl__autoDestroy[1674803] call_tmp[2077268])
      }
      {
        const-val call_tmp[2077289]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2077291 'move' call_tmp[2077289](2077294 call ==[1401528] tmp[2077248] Pack[266550]))
        const-val call_tmp[2077297]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2077299 'move' call_tmp[2077297] call_tmp[2077289])
        if call_tmp[2077289]
        {
          const-val call_tmp[2077304]:2*int(64)[1040245] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val tmp[2143131]:int(64)[13] "temp"
          (2143136 'move' tmp[2143131](2143133 '.v' this[1400852] F5_chunkSize[2142703]))
          const-val tmp[2143138]:int(64)[13] "temp"
          (2143143 'move' tmp[2143138](2143140 '.v' this[1400852] F3_nElems[2142699]))
          ref tmp[2143145]:_ref(2*int(64))[1040318] "temp"
          (2143150 'move' tmp[2143145](2143147 '.' this[1400852] F14_ret_tmp[2142721]))
          (2077309 call chunkOrderPack[1402274] tmp[2143131] tmp[2143138] i[2077229] tmp[2143145])
          const-val tmp[2143152]:2*int(64)[1040245] "temp"
          (2143157 'move' tmp[2143152](2143154 '.v' this[1400852] F14_ret_tmp[2142721]))
          (2077314 'move' call_tmp[2077304] tmp[2143152])
          (2077318 call =[1402050] chunk[2077234] call_tmp[2077304])
          (2077322 call chpl__autoDestroy[1674803] call_tmp[2077304])
        }
        {
          const-val call_tmp[2077325]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2077327 'move' call_tmp[2077325](2077330 call ==[1401528] tmp[2077248] Mod[266552]))
          const-val call_tmp[2077333]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2077335 'move' call_tmp[2077333] call_tmp[2077325])
          if call_tmp[2077325]
          {
            const-val call_tmp[2077340]:2*int(64)[1040245] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val tmp[2143159]:int(64)[13] "temp"
            (2143164 'move' tmp[2143159](2143161 '.v' this[1400852] F5_chunkSize[2142703]))
            const-val tmp[2143166]:int(64)[13] "temp"
            (2143171 'move' tmp[2143166](2143168 '.v' this[1400852] F6_rem[2142705]))
            const-val tmp[2143173]:int(64)[13] "temp"
            (2143178 'move' tmp[2143173](2143175 '.v' this[1400852] F3_nElems[2142699]))
            const-val tmp[2143180]:int(64)[13] "temp"
            (2143185 'move' tmp[2143180](2143182 '.v' this[1400852] F4_nChunks[2142701]))
            ref tmp[2143187]:_ref(2*int(64))[1040318] "temp"
            (2143192 'move' tmp[2143187](2143189 '.' this[1400852] F15_ret_tmp[2142723]))
            (2077345 call chunkOrderMod[1402531] tmp[2143159] tmp[2143166] tmp[2143173] tmp[2143180] i[2077229] tmp[2143187])
            const-val tmp[2143194]:2*int(64)[1040245] "temp"
            (2143199 'move' tmp[2143194](2143196 '.v' this[1400852] F15_ret_tmp[2142723]))
            (2077352 'move' call_tmp[2077340] tmp[2143194])
            (2077356 call =[1402050] chunk[2077234] call_tmp[2077340])
            (2077360 call chpl__autoDestroy[1674803] call_tmp[2077340])
          }
          {
            (2077364 call halt[154111] "RangeChunk: unknown RemElems in chunksOrder")
          }
        }
      }
      const-val yret[2077369]:2*int(64)[1040245] "dead after last mention" "YVV" "temp"
      val call_tmp[2077371]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[2077373]:2*int(64)[1040245] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val tmp[2143201]:2*int(64)[1040245] "temp"
      (2077377 '=' tmp[2143201] chunk[2077234])
      (2143203 '.=' this[1400852] value[2142725] tmp[2143201])
      (2077380 'noop')
      const-val tmp[2143207]:2*int(64)[1040245] "temp"
      (2143212 'move' tmp[2143207](2143209 '.v' this[1400852] value[2142725]))
      (2077381 'move' yret[2077369] tmp[2143207])
      (2143317 '.=' this[1400852] more[1400827] 2)
      gotoIterEnd _end[2143315] _end[2143315]
      label _jump_break_2[2143325]
      val tmp[2143214]:_ic_chpl_direct_param_stride_range_iter[1103475] "temp"
      (2143219 'move' tmp[2143214](2143216 '.v' this[1400852] F10__iterator[2142713]))
      (2077389 call _freeIterator[1103663] tmp[2143214])
      ref tmp[2143221]:_ref(2*int(64))[1040318] "temp"
      (2143226 'move' tmp[2143221](2143223 '.' this[1400852] F9_tmp[2142711]))
      (2077392 call chpl__autoDestroy[1674803] tmp[2143221])
      val tmp[2143228]:_ic_chpl_direct_counted_range_iter_helper[1103729] "temp"
      (2143233 'move' tmp[2143228](2143230 '.v' this[1400852] F8__iterator[2142709]))
      (2077395 call _freeIterator[1103913] tmp[2143228])
      val tmp[2143235]:_ic_chpl_direct_counted_range_iter[1103979] "temp"
      (2143240 'move' tmp[2143235](2143237 '.v' this[1400852] F7__iterator[2142707]))
      (2077398 call _freeIterator[1104163] tmp[2143235])
      gotoReturn _end_chunksOrder[1401502] _end_chunksOrder[1401502]
      label _jump_2[2143323]
      {
        const-val low[2077435]:int(64)[13] "temp"
        ref tmp[2143242]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
        (2143247 'move' tmp[2143242](2143244 '.' this[1400852] F10__iterator[2142713]))
        (2077440 'move' low[2077435](2077437 '.v' tmp[2143242] F0_low[2115192]))
        val tmp[2143249]:int(64)[13] "temp"
        (2077166 '=' tmp[2143249] low[2077435])
        (2143251 '.=' this[1400852] F11_i[2142715] tmp[2143249])
      }
      {
        const-val high[2077442]:int(64)[13] "temp"
        ref tmp[2143255]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103618] "temp"
        (2143260 'move' tmp[2143255](2143257 '.' this[1400852] F10__iterator[2142713]))
        (2077447 'move' high[2077442](2077444 '.v' tmp[2143255] F1_high[2115196]))
        val tmp[2143262]:int(64)[13] "temp"
        (2143267 'move' tmp[2143262](2143264 '.v' this[1400852] F11_i[2142715]))
        (2077170 '<=' tmp[2143262] high[2077442])
      }
      {
        val call_tmp[2077174]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val tmp[2143269]:int(64)[13] "temp"
        (2143274 'move' tmp[2143269](2143271 '.v' this[1400852] F11_i[2142715]))
        (2077176 '+=' tmp[2143269] 1)
        (2143276 '.=' this[1400852] F11_i[2142715] tmp[2143269])
      }
    }
    label _endchpl_direct_param_stride_range_iter[2077191]
    val tmp[2143280]:_ic_chpl_direct_param_stride_range_iter[1103475] "temp"
    (2143285 'move' tmp[2143280](2143282 '.v' this[1400852] F10__iterator[2142713]))
    (2009879 call _freeIterator[1103663] tmp[2143280])
    ref tmp[2143287]:_ref(2*int(64))[1040318] "temp"
    (2143292 'move' tmp[2143287](2143289 '.' this[1400852] F9_tmp[2142711]))
    (2009882 call chpl__autoDestroy[1674803] tmp[2143287])
    label _endchpl_direct_counted_range_iter_helper[2009884]
    val tmp[2143294]:_ic_chpl_direct_counted_range_iter_helper[1103729] "temp"
    (2143299 'move' tmp[2143294](2143296 '.v' this[1400852] F8__iterator[2142709]))
    (2009887 call _freeIterator[1103913] tmp[2143294])
    label _endchpl_direct_counted_range_iter[2009889]
    val tmp[2143301]:_ic_chpl_direct_counted_range_iter[1103979] "temp"
    (2143306 'move' tmp[2143301](2143303 '.v' this[1400852] F7__iterator[2142707]))
    (1925870 call _freeIterator[1104163] tmp[2143301])
    label _end_chunksOrder[1401502]
    (2143327 '.=' this[1400852] more[1400827] 0)
    label _end[2143315]
    (2143362 return _void[55])
  }
  function _ic_chunksOrder[1400824].zip1[1400859](const in arg this[1400861]:_ic_chunksOrder[1400824]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (2143308 call advance[1400850] this[1400861])
    (1400866 return _void[55])
  }
  function _ic_chunksOrder[1400824].zip2[1400868](const in arg this[1400870]:_ic_chunksOrder[1400824]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1400875 return _void[55])
  }
  function _ic_chunksOrder[1400824].zip3[1400877](const in arg this[1400879]:_ic_chunksOrder[1400824]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (2143311 call advance[1400850] this[1400879])
    (1400884 return _void[55])
  }
  function _ic_chunksOrder[1400824].zip4[1400886](const in arg this[1400888]:_ic_chunksOrder[1400824]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1400893 return _void[55])
  }
  function _ic_chunksOrder[1400824].hasMore[1400895](const in arg this[1400897]:_ic_chunksOrder[1400824]) : int(64)[13] "auto ii" "inline" "method" "resolved"
  {
    val tmp[2143365]:int(64)[13] "temp"
    (2143370 'move' tmp[2143365](2143367 '.v' this[1400897] more[1400827]))
    (2143372 return tmp[2143365])
  }
  function _ic_chunksOrder[1400824].getValue[1400904](const in arg this[1400906]:_ic_chunksOrder[1400824]) : 2*int(64)[1040245] "auto ii" "inline" "method" "resolved"
  {
    val tmp[2143375]:2*int(64)[1040245] "temp"
    (2143380 'move' tmp[2143375](2143377 '.v' this[1400906] value[2142725]))
    (2143382 return tmp[2143375])
  }
  function chunksOrder[1400758](const in arg r[1400760]:range(int(64),bounded,false)[1027003], const in arg numChunks[1400762]:int(64)[13], const in arg remPol[1400766]:RemElems[266554], ref arg _retArg[1914807]:_ref(_ir_chunksOrder)[1400941]) : void[4] "compiler added where" "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "resolved" "no return value for void"
  {
    val _ir[2143390]:_ir_chunksOrder[1400830] "temp"
    (2143392 '.=' _ir[2143390] F0_r[2142689] r[1400760])
    (2143396 '.=' _ir[2143390] F1_numChunks[2142693] numChunks[1400762])
    (2143400 '.=' _ir[2143390] F2_remPol[2142697] remPol[1400766])
    (2143404 '=' _retArg[1914807] _ir[2143390])
    (2143407 return _void[55])
  }
  function _ic_chunksOrder[1400824].init[1400913](const in arg this[1400915]:_ic_chunksOrder[1400824]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (2143385 return _void[55])
  }
  function _ic_chunksOrder[1400824].incr[1400922](const in arg this[1400924]:_ic_chunksOrder[1400824]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (2143388 return _void[55])
  }
  type _ic_chunksOrder[1400824] val super[1400825]:object[22] "super class" val more[1400827]:int(64)[13] const-val F0_r[2142687]:range(int(64),bounded,false)[1027003] const-val F1_numChunks[2142691]:int(64)[13] const-val F2_remPol[2142695]:RemElems[266554] const F3_nElems[2142699]:int(64)[13] val F4_nChunks[2142701]:int(64)[13] val F5_chunkSize[2142703]:int(64)[13] val F6_rem[2142705]:int(64)[13] val F7__iterator[2142707]:_ic_chpl_direct_counted_range_iter[1103979] val F8__iterator[2142709]:_ic_chpl_direct_counted_range_iter_helper[1103729] const F9_tmp[2142711]:2*int(64)[1040245] val F10__iterator[2142713]:_ic_chpl_direct_param_stride_range_iter[1103475] val F11_i[2142715]:int(64)[13] const-val F12_ret_tmp[2142717]:2*int(64)[1040245] const-val F13_ret_tmp[2142719]:2*int(64)[1040245] const-val F14_ret_tmp[2142721]:2*int(64)[1040245] const-val F15_ret_tmp[2142723]:2*int(64)[1040245] val value[2142725]:2*int(64)[1040245]
  type _ir_chunksOrder[1400830] const-val F0_r[2142689]:range(int(64),bounded,false)[1027003] const-val F1_numChunks[2142693]:int(64)[13] const-val F2_remPol[2142697]:RemElems[266554]
  function _getIterator[1400839](const  ref arg ir[1400841]:_ir_chunksOrder[1400830]) : _ic_chunksOrder[1400824] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[1400948]:_ic_chunksOrder[1400824] "dead after last mention" "RVV" "temp"
    val _ic_[1400831]:_ic_chunksOrder[1400824] "dead after last mention" "temp"
    const-val call_tmp[1400955]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1400958 'move' call_tmp[1400955](1400970 'sizeof_bundle' _ic_chunksOrder[1400824]))
    const-val cast_tmp[1400973]:c_void_ptr[149] "dead after last mention" "temp"
    (1400975 'move' cast_tmp[1400973](1400836 call chpl_here_alloc[187788] call_tmp[1400955] 80))
    (1400844 'move' _ic_[1400831](1400977 'cast' _ic_chunksOrder[1400824] cast_tmp[1400973]))
    (1400846 'setcid' _ic_[1400831])
    (1400953 'move' ret[1400948] _ic_[1400831])
    (2143410 '.=' ret[1400948] more[1400827] 1)
    const-val tmp[2143414]:range(int(64),bounded,false)[1027003] "temp"
    (2143419 'move' tmp[2143414](2143415 '.v' ir[1400841] F0_r[2142689]))
    (2143421 '.=' ret[1400948] F0_r[2142687] tmp[2143414])
    const-val tmp[2143425]:int(64)[13] "temp"
    (2143430 'move' tmp[2143425](2143426 '.v' ir[1400841] F1_numChunks[2142693]))
    (2143432 '.=' ret[1400948] F1_numChunks[2142691] tmp[2143425])
    const-val tmp[2143436]:RemElems[266554] "temp"
    (2143441 'move' tmp[2143436](2143437 '.v' ir[1400841] F2_remPol[2142697]))
    (2143443 '.=' ret[1400948] F2_remPol[2142695] tmp[2143436])
    (1400950 return ret[1400948])
  }
  function chunkOrderThru[1401798](const in arg nElems[1401800]:int(64)[13], const in arg nChunks[1401805]:int(64)[13], const in arg i[1401810]:int(64)[13], ref arg _retArg[1914817]:_ref(2*int(64))[1040318]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "private" "resolved" "fn synchronization free"
  {
    const-val ret[1401829]:2*int(64)[1040245] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1401839]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1401841 'move' call_tmp[1401839](1401844 call *[441944] nElems[1401800] i[1401810]))
    const-val m[1401847]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1401849 'move' m[1401847] call_tmp[1401839])
    const-val start[1401853]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val tmp[1401855]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1401857]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1401859]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1401861 'move' call_tmp[1401859](1401864 call ==[435744] i[1401810] 0))
    (1401867 'move' tmp[1401857] call_tmp[1401859])
    if tmp[1401857]
    {
      val call_tmp[1401876]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1401888 'move' tmp[1401855] 0)
    }
    {
      const-val tmp[1401894]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      (1401896 'move' tmp[1401894](1401899 call divceil[1401581] m[1401847] nChunks[1401805]))
      (1401902 'move' tmp[1401855] tmp[1401894])
    }
    (1401908 'move' start[1401853] tmp[1401855])
    const-val end[1401912]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val tmp[1401914]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1401916]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1401918]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1401920 'move' call_tmp[1401918](1401923 call -[962415] nChunks[1401805]))
    const-val call_tmp[1401926]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1401928 'move' call_tmp[1401926](1401931 call ==[435744] i[1401810] call_tmp[1401918]))
    (1401934 'move' tmp[1401916] call_tmp[1401926])
    if tmp[1401916]
    {
      const-val tmp[1401941]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      (1401943 'move' tmp[1401941](1401946 call -[962415] nElems[1401800]))
      (1401949 'move' tmp[1401914] tmp[1401941])
    }
    {
      const-val tmp[1401955]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1401957]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1401959 'move' call_tmp[1401957](1401962 call +[439752] m[1401847] nElems[1401800]))
      const-val call_tmp[1401965]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1401967 'move' call_tmp[1401965](1401970 call divceil[1401581] call_tmp[1401957] nChunks[1401805]))
      (1401973 'move' tmp[1401955](1401976 call -[962415] call_tmp[1401965]))
      (1401979 'move' tmp[1401914] tmp[1401955])
    }
    (1401985 'move' end[1401912] tmp[1401914])
    const-val call_tmp[1401991]:2*int(64)[1040245] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1908792]:2*int(64)[1040245] "temp"
    (1401996 call _build_tuple[1040203] start[1401853] end[1401912] ret_tmp[1908792])
    (1908795 'move' call_tmp[1401991] ret_tmp[1908792])
    val call_tmp[1401999]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1402005]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1402011]:2*int(64)[1040245] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1402048 'move' ret[1401829] call_tmp[1401991])
    gotoReturn _end_chunkOrderThru[1402029] _end_chunkOrderThru[1402029]
    label _end_chunkOrderThru[1402029]
    (1914819 '=' _retArg[1914817] ret[1401829])
    (1914821 return _void[55])
  }
  function chunkOrderPack[1402274](const in arg chunkSize[1402276]:int(64)[13], const in arg nElems[1402281]:int(64)[13], const in arg i[1402286]:int(64)[13], ref arg _retArg[1914829]:_ref(2*int(64))[1040318]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "private" "resolved" "fn synchronization free"
  {
    val ret[1402305]:2*int(64)[1040245] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1402315]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1402317 'move' call_tmp[1402315](1402320 call *[441944] chunkSize[1402276] i[1402286]))
    const-val start[1402323]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1402325 'move' start[1402323] call_tmp[1402315])
    const-val call_tmp[1402329]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1402331 'move' call_tmp[1402329](1402334 call >=[437348] start[1402323] nElems[1402281]))
    const-val call_tmp[1402337]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1402339 'move' call_tmp[1402337] call_tmp[1402329])
    if call_tmp[1402337]
    {
      val call_tmp[1402346]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1402360]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[1402374]:2*int(64)[1040245] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1908798]:2*int(64)[1040245] "temp"
      (1402379 call _build_tuple[1040203] 1 0 ret_tmp[1908798])
      (1908801 'move' call_tmp[1402374] ret_tmp[1908798])
      val call_tmp[1402382]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1402388]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1402394]:2*int(64)[1040245] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1402524 'move' ret[1402305] call_tmp[1402374])
      gotoReturn _end_chunkOrderPack[1402503] _end_chunkOrderPack[1402503]
    }
    const-val call_tmp[1402410]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1402412 'move' call_tmp[1402410](1402415 call +[439752] start[1402323] chunkSize[1402276]))
    const-val call_tmp[1402418]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1402420 'move' call_tmp[1402418](1402423 call -[962415] call_tmp[1402410]))
    val end[1402426]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1402428 'move' end[1402426] call_tmp[1402418])
    const-val call_tmp[1402433]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1402435 'move' call_tmp[1402433](1402438 call >=[437348] end[1402426] nElems[1402281]))
    const-val call_tmp[1402441]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1402443 'move' call_tmp[1402441] call_tmp[1402433])
    if call_tmp[1402441]
    {
      const-val call_tmp[1402450]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1402452 'move' call_tmp[1402450](1402455 call -[962415] nElems[1402281]))
      (1402459 call =[435443] end[1402426] call_tmp[1402450])
    }
    const-val call_tmp[1402465]:2*int(64)[1040245] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1908804]:2*int(64)[1040245] "temp"
    (1402470 call _build_tuple[1040203] start[1402323] end[1402426] ret_tmp[1908804])
    (1908807 'move' call_tmp[1402465] ret_tmp[1908804])
    val call_tmp[1402473]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1402479]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1402485]:2*int(64)[1040245] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1402527 'move' ret[1402305] call_tmp[1402465])
    gotoReturn _end_chunkOrderPack[1402503] _end_chunkOrderPack[1402503]
    label _end_chunkOrderPack[1402503]
    (1914831 '=' _retArg[1914829] ret[1402305])
    (1914833 return _void[55])
  }
  function chunkOrderMod[1402531](const in arg chunkSize[1402533]:int(64)[13], const in arg rem[1402538]:int(64)[13], const in arg nElems[1402543]:int(64)[13], const in arg nChunks[1402548]:int(64)[13], const in arg i[1402553]:int(64)[13], ref arg _retArg[1914841]:_ref(2*int(64))[1040318]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "private" "resolved" "fn synchronization free"
  {
    const-val ret[1402572]:2*int(64)[1040245] "dead after last mention" "RVV" "temp"
    val start[1402582]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[1402584]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1402778 'move' start[1402582] 0)
    val end[1402593]:int(64)[13] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1402595]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    const-val call_tmp[1402606]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1402608 'move' call_tmp[1402606](1402611 call <[437568] i[1402553] rem[1402538]))
    const-val call_tmp[1402614]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1402616 'move' call_tmp[1402614] call_tmp[1402606])
    if call_tmp[1402614]
    {
      const-val call_tmp[1402623]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1402625 'move' call_tmp[1402623](1402628 call +[949855] chunkSize[1402533]))
      const-val call_tmp[1402631]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1402633 'move' call_tmp[1402631](1402636 call *[441944] i[1402553] call_tmp[1402623]))
      (1402640 call =[435443] start[1402582] call_tmp[1402631])
      const-val call_tmp[1402645]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (1402647 'move' call_tmp[1402645](1402650 call +[439752] start[1402582] chunkSize[1402533]))
      (1402653 'move' end[1402593] call_tmp[1402645])
    }
    {
      const-val call_tmp[1402661]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1402663 'move' call_tmp[1402661](1402666 call -[440532] nChunks[1402548] i[1402553]))
      const-val call_tmp[1402669]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1402671 'move' call_tmp[1402669](1402674 call *[441944] call_tmp[1402661] chunkSize[1402533]))
      const-val call_tmp[1402677]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1402679 'move' call_tmp[1402677](1402682 call -[440532] nElems[1402543] call_tmp[1402669]))
      (1402686 call =[435443] start[1402582] call_tmp[1402677])
      const-val call_tmp[1402691]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1402693 'move' call_tmp[1402691](1402696 call +[439752] start[1402582] chunkSize[1402533]))
      const-val call_tmp[1402699]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (1402701 'move' call_tmp[1402699](1402704 call -[962415] call_tmp[1402691]))
      (1402707 'move' end[1402593] call_tmp[1402699])
    }
    const-val call_tmp[1402715]:2*int(64)[1040245] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1908810]:2*int(64)[1040245] "temp"
    (1402720 call _build_tuple[1040203] start[1402582] end[1402593] ret_tmp[1908810])
    (1908813 'move' call_tmp[1402715] ret_tmp[1908810])
    val call_tmp[1402723]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1402729]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1402735]:2*int(64)[1040245] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1402775 'move' ret[1402572] call_tmp[1402715])
    gotoReturn _end_chunkOrderMod[1402753] _end_chunkOrderMod[1402753]
    label _end_chunkOrderMod[1402753]
    (1914843 '=' _retArg[1914841] ret[1402572])
    (1914845 return _void[55])
  }
}