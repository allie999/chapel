AST dump for RangeChunk after pass parallel.
Module use list: ChapelStandard 

{
  function chpl__init_RangeChunk[416165]() : void[4] "insert line file info" "module init" "resolved"
  {
    (537516 return _void[55])
  }
  type RemElems[266487] def Thru[266481]:RemElems[266487] def Pack[266483]:RemElems[266487] def Mod[266485]:RemElems[266487]
  function _ic_chunks[1376150].advance[1376176](const in arg this[1376178]:_ic_chunks[1376150]) : void[4] "auto ii" "method" "resolved"
  {
    const-val more[2091397]:int(64)[13]
    (2091425 'move' more[2091397](2091422 '.v' this[1376178] more[1376153]))
    const-val tmp[2091400]:bool[10] "temp"
    (2091407 'move' tmp[2091400](2091404 '==' more[2091397] 2))
    if tmp[2091400]
    {
      gotoIterResume _jump_2[2091389] _jump_2[2091389]
    }
    const-val tmp[2091412]:bool[10] "temp"
    (2091417 'move' tmp[2091412](2091414 '==' more[2091397] -2))
    if tmp[2091412]
    {
      gotoIterResume _jump_break_2[2091391] _jump_break_2[2091391]
    }
    val ret[1375768]:_ir_chunks[1376156] "dead at end of block" "RVV" "temp"
    val _indexOfInterest[1376310]:2*int(64)[1040117] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[1376314]:_ir_chunksOrder[1376620] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[1872213]:_ir_chunksOrder[1376620] "temp"
    const-val tmp[2090717]:range(int(64),bounded,false)[1026875] "temp"
    (2090722 'move' tmp[2090717](2090719 '.v' this[1376178] F0_r[2090673]))
    const-val tmp[2090724]:int(64)[13] "temp"
    (2090729 'move' tmp[2090724](2090726 '.v' this[1376178] F1_numChunks[2090677]))
    const-val tmp[2090731]:RemElems[266487] "temp"
    (2090736 'move' tmp[2090731](2090733 '.v' this[1376178] F2_remPol[2090681]))
    (1376319 call chunksOrder[1376548] tmp[2090717] tmp[2090724] tmp[2090731] ret_tmp[1872213])
    (1872216 'move' call_tmp[1376314] ret_tmp[1872213])
    val tmp[2090738]:_ic_chunksOrder[1376614] "temp"
    (1376323 'move' tmp[2090738](1376326 call _getIterator[1376629] call_tmp[1376314]))
    (2090740 '.=' this[1376178] F3__iterator[2090685] tmp[2090738])
    val ret[1961519]:_ir_chunksOrder[1376620] "dead at end of block" "RVV" "temp"
    const-val tmp[1961521]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1961523]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val r[1962031]:range(int(64),bounded,false)[1026875] "temp"
    ref tmp[2090744]:_ref(_ic_chunksOrder)[1376757] "temp"
    (2090749 'move' tmp[2090744](2090746 '.' this[1376178] F3__iterator[2090685]))
    (1962036 'move' r[1962031](1962033 '.v' tmp[2090744] F0_r[2091513]))
    (1961525 'move' call_tmp[1961523](1961528 call size[1035850] r[1962031]))
    (1961530 'move' tmp[1961521](1961533 call ==[435671] call_tmp[1961523] 0))
    val tmp[1961536]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1961538]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1961540]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1961542 'move' call_tmp[1961540] tmp[1961521])
    (1961545 'move' tmp[1961538] tmp[1961521])
    if tmp[1961521]
    {
      (1961550 'move' tmp[1961536] 1)
    }
    {
      const-val tmp[1961554]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1961556]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val numChunks[1962038]:int(64)[13] "temp"
      ref tmp[2090751]:_ref(_ic_chunksOrder)[1376757] "temp"
      (2090756 'move' tmp[2090751](2090753 '.' this[1376178] F3__iterator[2090685]))
      (1962043 'move' numChunks[1962038](1962040 '.v' tmp[2090751] F1_numChunks[2091517]))
      (1961558 'move' call_tmp[1961556](1961561 call <=[437055] numChunks[1962038] 0))
      (1961564 'move' tmp[1961554] call_tmp[1961556])
      (1961567 'move' tmp[1961536] call_tmp[1961556])
    }
    const-val call_tmp[1961571]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1961573 'move' call_tmp[1961571] tmp[1961536])
    if tmp[1961536]
    {
      gotoReturn _end_chunksOrder[1961941] _end_chunksOrder[1961941]
    }
    const-val call_tmp[1961581]:int(64)[13] "dead at end of block" "maybe param" "temp"
    const-val r[1962045]:range(int(64),bounded,false)[1026875] "temp"
    ref tmp[2090758]:_ref(_ic_chunksOrder)[1376757] "temp"
    (2090763 'move' tmp[2090758](2090760 '.' this[1376178] F3__iterator[2090685]))
    (1962050 'move' r[1962045](1962047 '.v' tmp[2090758] F0_r[2091513]))
    (1961583 'move' call_tmp[1961581](1961586 call size[1035850] r[1962045]))
    const tmp[2090765]:int(64)[13] "temp"
    (1961590 'move' tmp[2090765] call_tmp[1961581])
    (2090767 '.=' this[1376178] F4_nElems[2090687] tmp[2090765])
    val call_tmp[1961593]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1961595]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val numChunks[1962052]:int(64)[13] "temp"
    ref tmp[2090771]:_ref(_ic_chunksOrder)[1376757] "temp"
    (2090776 'move' tmp[2090771](2090773 '.' this[1376178] F3__iterator[2090685]))
    (1962057 'move' numChunks[1962052](1962054 '.v' tmp[2090771] F1_numChunks[2091517]))
    (1961597 'move' call_tmp[1961595](1961600 call min[450039] numChunks[1962052] call_tmp[1961581]))
    const-val call_tmp[1961603]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1961605 'move' call_tmp[1961603] call_tmp[1961595])
    val tmp[2090778]:int(64)[13] "temp"
    (1961610 'move' tmp[2090778] call_tmp[1961595])
    (2090780 '.=' this[1376178] F5_nChunks[2090689] tmp[2090778])
    val call_tmp[1961615]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[2090784]:int(64)[13] "temp"
    (1961617 'move' tmp[2090784] 0)
    (2090786 '.=' this[1376178] F6_chunkSize[2090691] tmp[2090784])
    val call_tmp[1961622]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[2090790]:int(64)[13] "temp"
    (1961624 'move' tmp[2090790] 0)
    (2090792 '.=' this[1376178] F7_rem[2090693] tmp[2090790])
    const-val tmp[1961627]:RemElems[266487] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val remPol[1962059]:RemElems[266487] "temp"
    ref tmp[2090796]:_ref(_ic_chunksOrder)[1376757] "temp"
    (2090801 'move' tmp[2090796](2090798 '.' this[1376178] F3__iterator[2090685]))
    (1962064 'move' remPol[1962059](1962061 '.v' tmp[2090796] F2_remPol[2091521]))
    (1961629 'move' tmp[1961627] remPol[1962059])
    const-val call_tmp[1961632]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val remPol[1962066]:RemElems[266487] "temp"
    ref tmp[2090803]:_ref(_ic_chunksOrder)[1376757] "temp"
    (2090808 'move' tmp[2090803](2090805 '.' this[1376178] F3__iterator[2090685]))
    (1962071 'move' remPol[1962066](1962068 '.v' tmp[2090803] F2_remPol[2091521]))
    (1961634 'move' call_tmp[1961632](1961637 call ==[1377318] remPol[1962066] Pack[266483]))
    const-val call_tmp[1961640]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1961642 'move' call_tmp[1961640] call_tmp[1961632])
    if call_tmp[1961632]
    {
      const-val call_tmp[1961647]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val tmp[2090810]:int(64)[13] "temp"
      (2090815 'move' tmp[2090810](2090812 '.v' this[1376178] F4_nElems[2090687]))
      const-val tmp[2090817]:int(64)[13] "temp"
      (2090822 'move' tmp[2090817](2090819 '.v' this[1376178] F5_nChunks[2090689]))
      (1961649 'move' call_tmp[1961647](1961652 call /[442723] tmp[2090810] tmp[2090817]))
      ref tmp[2090824]:_ref(int(64))[936633] "temp"
      (2090829 'move' tmp[2090824](2090826 '.' this[1376178] F6_chunkSize[2090691]))
      (1961656 call =[435370] tmp[2090824] call_tmp[1961647])
      const-val call_tmp[1961659]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val tmp[2090831]:int(64)[13] "temp"
      (2090836 'move' tmp[2090831](2090833 '.v' this[1376178] F6_chunkSize[2090691]))
      const-val tmp[2090838]:int(64)[13] "temp"
      (2090843 'move' tmp[2090838](2090840 '.v' this[1376178] F5_nChunks[2090689]))
      (1961661 'move' call_tmp[1961659](1961664 call *[441871] tmp[2090831] tmp[2090838]))
      const-val call_tmp[1961667]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val tmp[2090845]:int(64)[13] "temp"
      (2090850 'move' tmp[2090845](2090847 '.v' this[1376178] F4_nElems[2090687]))
      (1961669 'move' call_tmp[1961667](1961672 call !=[436055] call_tmp[1961659] tmp[2090845]))
      const-val call_tmp[1961675]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1961677 'move' call_tmp[1961675] call_tmp[1961667])
      if call_tmp[1961667]
      {
        ref tmp[2090852]:_ref(int(64))[936633] "temp"
        (2090857 'move' tmp[2090852](2090854 '.' this[1376178] F6_chunkSize[2090691]))
        (1961683 call +=[451358] tmp[2090852] 1)
        const-val call_tmp[1961686]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val tmp[2090859]:int(64)[13] "temp"
        (2090864 'move' tmp[2090859](2090861 '.v' this[1376178] F4_nElems[2090687]))
        const-val tmp[2090866]:int(64)[13] "temp"
        (2090871 'move' tmp[2090866](2090868 '.v' this[1376178] F6_chunkSize[2090691]))
        (1961688 'move' call_tmp[1961686](1961691 call divceil[1377371] tmp[2090859] tmp[2090866]))
        ref tmp[2090873]:_ref(int(64))[936633] "temp"
        (2090878 'move' tmp[2090873](2090875 '.' this[1376178] F5_nChunks[2090689]))
        (1961695 call =[435370] tmp[2090873] call_tmp[1961686])
      }
    }
    {
      const-val call_tmp[1961700]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1961702 'move' call_tmp[1961700](1961705 call ==[1377318] tmp[1961627] Mod[266485]))
      const-val call_tmp[1961708]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1961710 'move' call_tmp[1961708] call_tmp[1961700])
      if call_tmp[1961700]
      {
        const-val call_tmp[1961715]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val tmp[2090880]:int(64)[13] "temp"
        (2090885 'move' tmp[2090880](2090882 '.v' this[1376178] F4_nElems[2090687]))
        const-val tmp[2090887]:int(64)[13] "temp"
        (2090892 'move' tmp[2090887](2090889 '.v' this[1376178] F5_nChunks[2090689]))
        (1961717 'move' call_tmp[1961715](1961720 call /[442723] tmp[2090880] tmp[2090887]))
        ref tmp[2090894]:_ref(int(64))[936633] "temp"
        (2090899 'move' tmp[2090894](2090896 '.' this[1376178] F6_chunkSize[2090691]))
        (1961724 call =[435370] tmp[2090894] call_tmp[1961715])
        const-val call_tmp[1961727]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val tmp[2090901]:int(64)[13] "temp"
        (2090906 'move' tmp[2090901](2090903 '.v' this[1376178] F6_chunkSize[2090691]))
        const-val tmp[2090908]:int(64)[13] "temp"
        (2090913 'move' tmp[2090908](2090910 '.v' this[1376178] F5_nChunks[2090689]))
        (1961729 'move' call_tmp[1961727](1961732 call *[441871] tmp[2090901] tmp[2090908]))
        const-val call_tmp[1961735]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val tmp[2090915]:int(64)[13] "temp"
        (2090920 'move' tmp[2090915](2090917 '.v' this[1376178] F4_nElems[2090687]))
        (1961737 'move' call_tmp[1961735](1961740 call -[440459] tmp[2090915] call_tmp[1961727]))
        ref tmp[2090922]:_ref(int(64))[936633] "temp"
        (2090927 'move' tmp[2090922](2090924 '.' this[1376178] F7_rem[2090693]))
        (1961744 call =[435370] tmp[2090922] call_tmp[1961735])
      }
    }
    val _indexOfInterest[1961749]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[1961753]:_ir_chpl_direct_counted_range_iter[1103857] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[1961755]:_ir_chpl_direct_counted_range_iter[1103857] "temp"
    const-val tmp[2090929]:int(64)[13] "temp"
    (2090934 'move' tmp[2090929](2090931 '.v' this[1376178] F5_nChunks[2090689]))
    (1961758 call chpl_direct_counted_range_iter[458039] 0 tmp[2090929] ret_tmp[1961755])
    (1961762 'move' call_tmp[1961753] ret_tmp[1961755])
    val tmp[2090936]:_ic_chpl_direct_counted_range_iter[1103851] "temp"
    (1961765 'move' tmp[2090936](1961768 call _getIterator[1103866] call_tmp[1961753]))
    (2090938 '.=' this[1376178] F8__iterator[2090695] tmp[2090936])
    val ret[2026960]:_ir_chpl_direct_counted_range_iter[1103857] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[2026962]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[2026966]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[2026968]:_ir_chpl_direct_counted_range_iter_helper[1103607] "temp"
    const-val low[2027678]:int(64)[13] "temp"
    ref tmp[2090942]:_ref(_ic_chpl_direct_counted_range_iter)[1103994] "temp"
    (2090947 'move' tmp[2090942](2090944 '.' this[1376178] F8__iterator[2090695]))
    (2027683 'move' low[2027678](2027680 '.v' tmp[2090942] F0_low[2058106]))
    const-val count[2027685]:int(64)[13] "temp"
    ref tmp[2090949]:_ref(_ic_chpl_direct_counted_range_iter)[1103994] "temp"
    (2090954 'move' tmp[2090949](2090951 '.' this[1376178] F8__iterator[2090695]))
    (2027690 'move' count[2027685](2027687 '.v' tmp[2090949] F1_count[2058110]))
    (2026971 call chpl_direct_counted_range_iter_helper[1102159] low[2027678] count[2027685] ret_tmp[2026968])
    (2026975 'move' call_tmp[2026966] ret_tmp[2026968])
    val tmp[2090956]:_ic_chpl_direct_counted_range_iter_helper[1103601] "temp"
    (2026978 'move' tmp[2090956](2026981 call _getIterator[1103616] call_tmp[2026966]))
    (2090958 '.=' this[1376178] F9__iterator[2090697] tmp[2090956])
    val ret[2026984]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead after last mention" "RVV" "temp"
    val call_tmp[2026986]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val tmp[2026988]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[2026990]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    const-val call_tmp[2026992]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[2026994]:int(64)[13] "temp"
    ref tmp[2090962]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
    (2090967 'move' tmp[2090962](2090964 '.' this[1376178] F9__iterator[2090697]))
    (2026996 'move' count[2026994](2026998 '.v' tmp[2090962] F1_count[2064268]))
    (2027001 'move' call_tmp[2026992](2027004 call <[948459] count[2026994]))
    (2027006 'move' tmp[2026990] call_tmp[2026992])
    (2027009 'move' tmp[2026988] call_tmp[2026992])
    const-val call_tmp[2027012]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2027014 'move' call_tmp[2027012] call_tmp[2026992])
    if call_tmp[2026992]
    {
      (2027020 call boundsCheckHalt[210187] "With a negative count, the range must have a last index.")
    }
    val tmp[2027025]:2*int(64)[1040117] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
    const-val tmp[2027027]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[2027029]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[2027031]:int(64)[13] "temp"
    ref tmp[2090969]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
    (2090974 'move' tmp[2090969](2090971 '.' this[1376178] F9__iterator[2090697]))
    (2027033 'move' count[2027031](2027035 '.v' tmp[2090969] F1_count[2064268]))
    (2027038 'move' call_tmp[2027029](2027041 call ==[435671] count[2027031] 0))
    (2027044 'move' tmp[2027027] call_tmp[2027029])
    if call_tmp[2027029]
    {
      const-val tmp[2027049]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      val call_tmp[2027051]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[2027053]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val low[2027055]:int(64)[13] "temp"
      ref tmp[2090976]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
      (2090981 'move' tmp[2090976](2090978 '.' this[1376178] F9__iterator[2090697]))
      (2027057 'move' low[2027055](2027059 '.v' tmp[2090976] F0_low[2064264]))
      (2027062 'move' call_tmp[2027053](2027065 call _cast[956095] low[2027055]))
      const-val call_tmp[2027067]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2027069]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2027071 'move' coerce_tmp[2027069](2027073 'cast' uint(64)[115] 1))
      (2027076 'move' call_tmp[2027067](2027079 call -[962254] call_tmp[2027053]))
      const-val call_tmp[2027081]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (2027083 'move' call_tmp[2027081](2027086 call _cast[953604] call_tmp[2027067]))
      const-val ret_tmp[2027088]:2*int(64)[1040117] "temp"
      const-val low[2027090]:int(64)[13] "temp"
      ref tmp[2090983]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
      (2090988 'move' tmp[2090983](2090985 '.' this[1376178] F9__iterator[2090697]))
      (2027092 'move' low[2027090](2027094 '.v' tmp[2090983] F0_low[2064264]))
      (2027098 call _build_tuple[1040075] low[2027090] call_tmp[2027081] ret_tmp[2027088])
      (2027102 'move' tmp[2027049] ret_tmp[2027088])
      (2027105 'move' tmp[2027025] tmp[2027049])
    }
    {
      const-val tmp[2027109]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      val call_tmp[2027111]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[2027113]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val count[2027115]:int(64)[13] "temp"
      ref tmp[2090990]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
      (2090995 'move' tmp[2090990](2090992 '.' this[1376178] F9__iterator[2090697]))
      (2027117 'move' count[2027115](2027119 '.v' tmp[2090990] F1_count[2064268]))
      (2027122 'move' call_tmp[2027113] count[2027115])
      const-val call_tmp[2027125]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val count[2027127]:int(64)[13] "temp"
      ref tmp[2090997]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
      (2091002 'move' tmp[2090997](2090999 '.' this[1376178] F9__iterator[2090697]))
      (2027129 'move' count[2027127](2027131 '.v' tmp[2090997] F1_count[2064268]))
      (2027134 'move' call_tmp[2027125](2027137 call -[962287] count[2027127]))
      const-val call_tmp[2027139]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val low[2027141]:int(64)[13] "temp"
      ref tmp[2091004]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
      (2091009 'move' tmp[2091004](2091006 '.' this[1376178] F9__iterator[2090697]))
      (2027143 'move' low[2027141](2027145 '.v' tmp[2091004] F0_low[2064264]))
      (2027148 'move' call_tmp[2027139](2027151 call +[439679] low[2027141] call_tmp[2027125]))
      const-val ret_tmp[2027154]:2*int(64)[1040117] "temp"
      const-val low[2027156]:int(64)[13] "temp"
      ref tmp[2091011]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
      (2091016 'move' tmp[2091011](2091013 '.' this[1376178] F9__iterator[2090697]))
      (2027158 'move' low[2027156](2027160 '.v' tmp[2091011] F0_low[2064264]))
      (2027164 call _build_tuple[1040075] low[2027156] call_tmp[2027139] ret_tmp[2027154])
      (2027168 'move' tmp[2027109] ret_tmp[2027154])
      (2027171 'move' tmp[2027025] tmp[2027109])
    }
    const tmp[2091018]:2*int(64)[1040117] "temp"
    (2027175 '=' tmp[2091018] tmp[2027025])
    (2091020 '.=' this[1376178] F10_tmp[2090699] tmp[2091018])
    (2027178 'noop')
    1
    ref call_tmp[2027180]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
    ref tmp[2091024]:_ref(2*int(64))[1040190] "temp"
    (2091029 'move' tmp[2091024](2091026 '.' this[1376178] F10_tmp[2090699]))
    (2027182 'move' call_tmp[2027180](2027184 '.' tmp[2091024] x0[1040113]))
    const-val start[2027187]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[2027189]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2027191 'move' coerce_tmp[2027189](2027193 'deref' call_tmp[2027180]))
    (2027195 '=' start[2027187] coerce_tmp[2027189])
    (2027198 'noop')
    ref call_tmp[2027199]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
    ref tmp[2091031]:_ref(2*int(64))[1040190] "temp"
    (2091036 'move' tmp[2091031](2091033 '.' this[1376178] F10_tmp[2090699]))
    (2027201 'move' call_tmp[2027199](2027203 '.' tmp[2091031] x1[1040115]))
    const-val end[2027206]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[2027208]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2027210 'move' coerce_tmp[2027208](2027212 'deref' call_tmp[2027199]))
    (2027214 '=' end[2027206] coerce_tmp[2027208])
    (2027217 'noop')
    val _indexOfInterest[2027218]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[2027222]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[2027224]:_ir_chpl_direct_param_stride_range_iter[1103353] "temp"
    (2027227 call chpl_direct_param_stride_range_iter[1102585] coerce_tmp[2027189] coerce_tmp[2027208] ret_tmp[2027224])
    (2027231 'move' call_tmp[2027222] ret_tmp[2027224])
    val tmp[2091038]:_ic_chpl_direct_param_stride_range_iter[1103347] "temp"
    (2027234 'move' tmp[2091038](2027237 call _getIterator[1103362] call_tmp[2027222]))
    (2091040 '.=' this[1376178] F11__iterator[2090701] tmp[2091038])
    val ret[2027240]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead after last mention" "RVV" "temp"
    val call_tmp[2027242]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (2027245 call chpl_range_check_stride[1102905])
    val call_tmp[2027248]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[2091044]:int(64)[13] "temp"
    (2027250 'move' tmp[2091044] 0)
    (2091046 '.=' this[1376178] F12_i[2090703] tmp[2091044])
    val call_tmp[2027253]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val default_arg_first[2027255]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[2027257]:int(64)[13] "temp"
    ref tmp[2091050]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103490] "temp"
    (2091055 'move' tmp[2091050](2091052 '.' this[1376178] F11__iterator[2090701]))
    (2027259 'move' low[2027257](2027261 '.v' tmp[2091050] F0_low[2065762]))
    (2027264 'move' default_arg_first[2027255](2027267 call chpl_checkIfRangeIterWillOverflow_default_first[1103259] low[2027257]))
    const-val default_arg_last[2027269]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[2027271]:int(64)[13] "temp"
    ref tmp[2091057]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103490] "temp"
    (2091062 'move' tmp[2091057](2091059 '.' this[1376178] F11__iterator[2090701]))
    (2027273 'move' high[2027271](2027275 '.v' tmp[2091057] F1_high[2065766]))
    (2027278 'move' default_arg_last[2027269](2027281 call chpl_checkIfRangeIterWillOverflow_default_last[1103287] high[2027271]))
    const-val _return_tmp_[2027283]:bool[10] "dead after last mention" "temp"
    const-val low[2027285]:int(64)[13] "temp"
    ref tmp[2091064]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103490] "temp"
    (2091069 'move' tmp[2091064](2091066 '.' this[1376178] F11__iterator[2090701]))
    (2027287 'move' low[2027285](2027289 '.v' tmp[2091064] F0_low[2065762]))
    const-val high[2027292]:int(64)[13] "temp"
    ref tmp[2091071]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103490] "temp"
    (2091076 'move' tmp[2091071](2091073 '.' this[1376178] F11__iterator[2090701]))
    (2027294 'move' high[2027292](2027296 '.v' tmp[2091071] F1_high[2065766]))
    (2027299 'move' _return_tmp_[2027283](2027302 call chpl_checkIfRangeIterWillOverflow[1096137] low[2027285] high[2027292] 1 default_arg_first[2027255] default_arg_last[2027269] 1))
    CForLoop[2027309] hazard
    {
      const-val yret[2027338]:int(64)[13] "dead after last mention" "YVV" "temp"
      const-val tmp[2091078]:int(64)[13] "temp"
      (2091083 'move' tmp[2091078](2091080 '.v' this[1376178] F12_i[2090703]))
      (2027340 'move' yret[2027338] tmp[2091078])
      const-val _yieldedIndex[2027343]:int(64)[13] "temp"
      const-val tmp[2091085]:int(64)[13] "temp"
      (2091090 'move' tmp[2091085](2091087 '.v' this[1376178] F12_i[2090703]))
      (2027345 'move' _yieldedIndex[2027343] tmp[2091085])
      const-val i[2027349]:int(64)[13] "const" "index var" "insert auto destroy"
      (2027351 'move' i[2027349] _yieldedIndex[2027343])
      const-val yret[2027354]:int(64)[13] "dead after last mention" "YVV" "temp"
      (2027356 'move' yret[2027354] _yieldedIndex[2027343])
      const-val _yieldedIndex[2027359]:int(64)[13] "temp"
      (2027361 'move' _yieldedIndex[2027359] _yieldedIndex[2027343])
      const-val i[2027365]:int(64)[13] "const" "index var" "insert auto destroy"
      (2027367 'move' i[2027365] _yieldedIndex[2027359])
      const-val yret[2027370]:int(64)[13] "dead after last mention" "YVV" "temp"
      (2027372 'move' yret[2027370] _yieldedIndex[2027359])
      const-val _yieldedIndex[2027408]:int(64)[13] "temp"
      (2027676 'move' _yieldedIndex[2027408] _yieldedIndex[2027359])
      const-val i[2027410]:int(64)[13] "const" "index var" "insert auto destroy"
      (2027412 'move' i[2027410] _yieldedIndex[2027408])
      val chunk[2027415]:2*int(64)[1040117] "dead at end of block" "insert auto destroy" "maybe copy elided"
      val call_tmp[2027417]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[2027419]:2*int(64)[1040117] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      ref tmp[2091092]:_ref(2*int(64))[1040190] "temp"
      (2091097 'move' tmp[2091092](2091094 '.' this[1376178] F13_ret_tmp[2090705]))
      (2027424 call _defaultOf[1378593] tmp[2091092])
      const-val tmp[2091099]:2*int(64)[1040117] "temp"
      (2091104 'move' tmp[2091099](2091101 '.v' this[1376178] F13_ret_tmp[2090705]))
      (2027426 'move' chunk[2027415] tmp[2091099])
      const-val tmp[2027429]:RemElems[266487] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val remPol[2027431]:RemElems[266487] "temp"
      ref tmp[2091106]:_ref(_ic_chunksOrder)[1376757] "temp"
      (2091111 'move' tmp[2091106](2091108 '.' this[1376178] F3__iterator[2090685]))
      (2027433 'move' remPol[2027431](2027435 '.v' tmp[2091106] F2_remPol[2091521]))
      (2027438 'move' tmp[2027429] remPol[2027431])
      const-val call_tmp[2027441]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val remPol[2027443]:RemElems[266487] "temp"
      ref tmp[2091113]:_ref(_ic_chunksOrder)[1376757] "temp"
      (2091118 'move' tmp[2091113](2091115 '.' this[1376178] F3__iterator[2090685]))
      (2027445 'move' remPol[2027443](2027447 '.v' tmp[2091113] F2_remPol[2091521]))
      (2027450 'move' call_tmp[2027441](2027453 call ==[1377318] remPol[2027443] Thru[266481]))
      const-val call_tmp[2027456]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2027458 'move' call_tmp[2027456] call_tmp[2027441])
      if call_tmp[2027441]
      {
        const-val call_tmp[2027463]:2*int(64)[1040117] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[2091120]:int(64)[13] "temp"
        (2091125 'move' tmp[2091120](2091122 '.v' this[1376178] F4_nElems[2090687]))
        const-val tmp[2091127]:int(64)[13] "temp"
        (2091132 'move' tmp[2091127](2091129 '.v' this[1376178] F5_nChunks[2090689]))
        ref tmp[2091134]:_ref(2*int(64))[1040190] "temp"
        (2091139 'move' tmp[2091134](2091136 '.' this[1376178] F14_ret_tmp[2090707]))
        (2027468 call chunkOrderThru[1377588] tmp[2091120] tmp[2091127] i[2027410] tmp[2091134])
        const-val tmp[2091141]:2*int(64)[1040117] "temp"
        (2091146 'move' tmp[2091141](2091143 '.v' this[1376178] F14_ret_tmp[2090707]))
        (2027473 'move' call_tmp[2027463] tmp[2091141])
        (2027477 call =[1377840] chunk[2027415] call_tmp[2027463])
        (2027481 call chpl__autoDestroy[1635435] call_tmp[2027463])
      }
      {
        const-val call_tmp[2027484]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2027486 'move' call_tmp[2027484](2027489 call ==[1377318] tmp[2027429] Pack[266483]))
        const-val call_tmp[2027492]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2027494 'move' call_tmp[2027492] call_tmp[2027484])
        if call_tmp[2027484]
        {
          const-val call_tmp[2027499]:2*int(64)[1040117] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val tmp[2091148]:int(64)[13] "temp"
          (2091153 'move' tmp[2091148](2091150 '.v' this[1376178] F6_chunkSize[2090691]))
          const-val tmp[2091155]:int(64)[13] "temp"
          (2091160 'move' tmp[2091155](2091157 '.v' this[1376178] F4_nElems[2090687]))
          ref tmp[2091162]:_ref(2*int(64))[1040190] "temp"
          (2091167 'move' tmp[2091162](2091164 '.' this[1376178] F15_ret_tmp[2090709]))
          (2027504 call chunkOrderPack[1378064] tmp[2091148] tmp[2091155] i[2027410] tmp[2091162])
          const-val tmp[2091169]:2*int(64)[1040117] "temp"
          (2091174 'move' tmp[2091169](2091171 '.v' this[1376178] F15_ret_tmp[2090709]))
          (2027509 'move' call_tmp[2027499] tmp[2091169])
          (2027513 call =[1377840] chunk[2027415] call_tmp[2027499])
          (2027517 call chpl__autoDestroy[1635435] call_tmp[2027499])
        }
        {
          const-val call_tmp[2027520]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2027522 'move' call_tmp[2027520](2027525 call ==[1377318] tmp[2027429] Mod[266485]))
          const-val call_tmp[2027528]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2027530 'move' call_tmp[2027528] call_tmp[2027520])
          if call_tmp[2027520]
          {
            const-val call_tmp[2027535]:2*int(64)[1040117] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val tmp[2091176]:int(64)[13] "temp"
            (2091181 'move' tmp[2091176](2091178 '.v' this[1376178] F6_chunkSize[2090691]))
            const-val tmp[2091183]:int(64)[13] "temp"
            (2091188 'move' tmp[2091183](2091185 '.v' this[1376178] F7_rem[2090693]))
            const-val tmp[2091190]:int(64)[13] "temp"
            (2091195 'move' tmp[2091190](2091192 '.v' this[1376178] F4_nElems[2090687]))
            const-val tmp[2091197]:int(64)[13] "temp"
            (2091202 'move' tmp[2091197](2091199 '.v' this[1376178] F5_nChunks[2090689]))
            ref tmp[2091204]:_ref(2*int(64))[1040190] "temp"
            (2091209 'move' tmp[2091204](2091206 '.' this[1376178] F16_ret_tmp[2090711]))
            (2027540 call chunkOrderMod[1378321] tmp[2091176] tmp[2091183] tmp[2091190] tmp[2091197] i[2027410] tmp[2091204])
            const-val tmp[2091211]:2*int(64)[1040117] "temp"
            (2091216 'move' tmp[2091211](2091213 '.v' this[1376178] F16_ret_tmp[2090711]))
            (2027547 'move' call_tmp[2027535] tmp[2091211])
            (2027551 call =[1377840] chunk[2027415] call_tmp[2027535])
            (2027555 call chpl__autoDestroy[1635435] call_tmp[2027535])
          }
          {
            (2027559 call halt[154111] "RangeChunk: unknown RemElems in chunksOrder")
          }
        }
      }
      const-val yret[2027564]:2*int(64)[1040117] "dead after last mention" "YVV" "temp"
      val call_tmp[2027566]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[2027568]:2*int(64)[1040117] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val _yield_expr_tmp_[2027570]:2*int(64)[1040117] "temp"
      (2027572 '=' _yield_expr_tmp_[2027570] chunk[2027415])
      (2027575 'noop')
      (2027576 'move' yret[2027564] _yield_expr_tmp_[2027570])
      const-val _yieldedIndex[2027579]:2*int(64)[1040117] "temp"
      (2027581 'move' _yieldedIndex[2027579] _yield_expr_tmp_[2027570])
      1
      const-val startOrder[2027586]:int(64)[13] "const" "index var" "insert auto destroy"
      (2027588 'move' startOrder[2027586](2027590 '.v' _yieldedIndex[2027579] x0[1040113]))
      const-val endOrder[2027593]:int(64)[13] "const" "index var" "insert auto destroy"
      (2027595 'move' endOrder[2027593](2027597 '.v' _yieldedIndex[2027579] x1[1040115]))
      const-val call_tmp[2027600]:int(64)[13] "dead at end of block" "maybe param" "temp"
      const-val tmp[2091218]:range(int(64),bounded,false)[1026875] "temp"
      (2091223 'move' tmp[2091218](2091220 '.v' this[1376178] F0_r[2090673]))
      (2027602 'move' call_tmp[2027600](2027605 call orderToIndex[1104101] tmp[2091218] startOrder[2027586]))
      const-val start[2027608]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      (2027610 'move' start[2027608] call_tmp[2027600])
      const-val call_tmp[2027613]:int(64)[13] "dead at end of block" "maybe param" "temp"
      const-val tmp[2091225]:range(int(64),bounded,false)[1026875] "temp"
      (2091230 'move' tmp[2091225](2091227 '.v' this[1376178] F0_r[2090673]))
      (2027615 'move' call_tmp[2027613](2027618 call orderToIndex[1104101] tmp[2091225] endOrder[2027593]))
      const-val end[2027621]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      (2027623 'move' end[2027621] call_tmp[2027613])
      const-val yret[2027626]:range(int(64),bounded,false)[1026875] "dead after last mention" "YVV" "temp"
      const-val tmp[2027628]:range(int(64),bounded,false)[1026875] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      ref tmp[2091232]:_ref(range(int(64),bounded,false))[1026919] "temp"
      (2091237 'move' tmp[2091232](2091234 '.' this[1376178] F17_ret_tmp[2090713]))
      (2027635 call chpl_build_bounded_range[455180] call_tmp[2027600] call_tmp[2027613] tmp[2091232])
      val tmp[2091239]:range(int(64),bounded,false)[1026875] "temp"
      const-val tmp[2091245]:range(int(64),bounded,false)[1026875] "temp"
      (2091250 'move' tmp[2091245](2091247 '.v' this[1376178] F17_ret_tmp[2090713]))
      (2027639 'move' tmp[2091239] tmp[2091245])
      (2091241 '.=' this[1376178] value[2090715] tmp[2091239])
      const-val tmp[2091252]:range(int(64),bounded,false)[1026875] "temp"
      (2091257 'move' tmp[2091252](2091254 '.v' this[1376178] value[2090715]))
      (2027642 'move' tmp[2027628] tmp[2091252])
      val call_tmp[2027645]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[2027647]:range(int(64),bounded,false)[1026875] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val tmp[2091259]:range(int(64),bounded,false)[1026875] "temp"
      (2091264 'move' tmp[2091259](2091261 '.v' this[1376178] value[2090715]))
      (2027649 'move' yret[2027626] tmp[2091259])
      (2091383 '.=' this[1376178] more[1376153] 2)
      gotoIterEnd _end[2091381] _end[2091381]
      label _jump_break_2[2091391]
      val tmp[2091266]:_ic_chpl_direct_param_stride_range_iter[1103347] "temp"
      (2091271 'move' tmp[2091266](2091268 '.v' this[1376178] F11__iterator[2090701]))
      (2027667 call _freeIterator[1103535] tmp[2091266])
      ref tmp[2091273]:_ref(2*int(64))[1040190] "temp"
      (2091278 'move' tmp[2091273](2091275 '.' this[1376178] F10_tmp[2090699]))
      (2027670 call chpl__autoDestroy[1635435] tmp[2091273])
      val tmp[2091280]:_ic_chpl_direct_counted_range_iter_helper[1103601] "temp"
      (2091285 'move' tmp[2091280](2091282 '.v' this[1376178] F9__iterator[2090697]))
      (2027673 call _freeIterator[1103785] tmp[2091280])
      val tmp[2091287]:_ic_chpl_direct_counted_range_iter[1103851] "temp"
      (2091292 'move' tmp[2091287](2091289 '.v' this[1376178] F8__iterator[2090695]))
      (2027657 call _freeIterator[1104035] tmp[2091287])
      val tmp[2091294]:_ic_chunksOrder[1376614] "temp"
      (2091299 'move' tmp[2091294](2091296 '.v' this[1376178] F3__iterator[2090685]))
      (2027660 call _freeIterator[1378692] tmp[2091294])
      gotoReturn _endchunks[1847680] _endchunks[1847680]
      label _jump_2[2091389]
      {
        const-val low[2027311]:int(64)[13] "temp"
        ref tmp[2091301]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103490] "temp"
        (2091306 'move' tmp[2091301](2091303 '.' this[1376178] F11__iterator[2090701]))
        (2027313 'move' low[2027311](2027315 '.v' tmp[2091301] F0_low[2065762]))
        val tmp[2091308]:int(64)[13] "temp"
        (2027318 '=' tmp[2091308] low[2027311])
        (2091310 '.=' this[1376178] F12_i[2090703] tmp[2091308])
      }
      {
        const-val high[2027322]:int(64)[13] "temp"
        ref tmp[2091314]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103490] "temp"
        (2091319 'move' tmp[2091314](2091316 '.' this[1376178] F11__iterator[2090701]))
        (2027324 'move' high[2027322](2027326 '.v' tmp[2091314] F1_high[2065766]))
        val tmp[2091321]:int(64)[13] "temp"
        (2091326 'move' tmp[2091321](2091323 '.v' this[1376178] F12_i[2090703]))
        (2027329 '<=' tmp[2091321] high[2027322])
      }
      {
        val call_tmp[2027333]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val tmp[2091328]:int(64)[13] "temp"
        (2091333 'move' tmp[2091328](2091330 '.v' this[1376178] F12_i[2090703]))
        (2027335 '+=' tmp[2091328] 1)
        (2091335 '.=' this[1376178] F12_i[2090703] tmp[2091328])
      }
    }
    label _endchpl_direct_param_stride_range_iter[2027391]
    val tmp[2091339]:_ic_chpl_direct_param_stride_range_iter[1103347] "temp"
    (2091344 'move' tmp[2091339](2091341 '.v' this[1376178] F11__iterator[2090701]))
    (2027394 call _freeIterator[1103535] tmp[2091339])
    ref tmp[2091346]:_ref(2*int(64))[1040190] "temp"
    (2091351 'move' tmp[2091346](2091348 '.' this[1376178] F10_tmp[2090699]))
    (2027397 call chpl__autoDestroy[1635435] tmp[2091346])
    label _endchpl_direct_counted_range_iter_helper[2027399]
    val tmp[2091353]:_ic_chpl_direct_counted_range_iter_helper[1103601] "temp"
    (2091358 'move' tmp[2091353](2091355 '.v' this[1376178] F9__iterator[2090697]))
    (2027402 call _freeIterator[1103785] tmp[2091353])
    label _endchpl_direct_counted_range_iter[2027404]
    val tmp[2091360]:_ic_chpl_direct_counted_range_iter[1103851] "temp"
    (2091365 'move' tmp[2091360](2091362 '.v' this[1376178] F8__iterator[2090695]))
    (1961939 call _freeIterator[1104035] tmp[2091360])
    label _end_chunksOrder[1961941]
    val tmp[2091367]:_ic_chunksOrder[1376614] "temp"
    (2091372 'move' tmp[2091367](2091369 '.v' this[1376178] F3__iterator[2090685]))
    (1883141 call _freeIterator[1378692] tmp[2091367])
    label _endchunks[1847680]
    (2091393 '.=' this[1376178] more[1376153] 0)
    label _end[2091381]
    (2091428 return _void[55])
  }
  function _ic_chunks[1376150].zip1[1376185](const in arg this[1376187]:_ic_chunks[1376150]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (2091374 call advance[1376176] this[1376187])
    (1376192 return _void[55])
  }
  function _ic_chunks[1376150].zip2[1376194](const in arg this[1376196]:_ic_chunks[1376150]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1376201 return _void[55])
  }
  function _ic_chunks[1376150].zip3[1376203](const in arg this[1376205]:_ic_chunks[1376150]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (2091377 call advance[1376176] this[1376205])
    (1376210 return _void[55])
  }
  function _ic_chunks[1376150].zip4[1376212](const in arg this[1376214]:_ic_chunks[1376150]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1376219 return _void[55])
  }
  function _ic_chunks[1376150].hasMore[1376221](const in arg this[1376223]:_ic_chunks[1376150]) : int(64)[13] "auto ii" "inline" "method" "resolved"
  {
    val tmp[2091431]:int(64)[13] "temp"
    (2091436 'move' tmp[2091431](2091433 '.v' this[1376223] more[1376153]))
    (2091438 return tmp[2091431])
  }
  function _ic_chunks[1376150].getValue[1376230](const in arg this[1376232]:_ic_chunks[1376150]) : range(int(64),bounded,false)[1026875] "auto ii" "inline" "method" "resolved"
  {
    val tmp[2091441]:range(int(64),bounded,false)[1026875] "temp"
    (2091446 'move' tmp[2091441](2091443 '.v' this[1376232] value[2090715]))
    (2091448 return tmp[2091441])
  }
  function chunks[1375718](const in arg r[1375720]:range(int(64),bounded,false)[1026875], const in arg numChunks[1375722]:int(64)[13], const in arg remPol[1375726]:RemElems[266487], ref arg _retArg[1872209]:_ref(_ir_chunks)[1376267]) : void[4] "compiler added where" "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "resolved" "no return value for void"
  {
    val _ir[2091456]:_ir_chunks[1376156] "temp"
    (2091458 '.=' _ir[2091456] F0_r[2090675] r[1375720])
    (2091462 '.=' _ir[2091456] F1_numChunks[2090679] numChunks[1375722])
    (2091466 '.=' _ir[2091456] F2_remPol[2090683] remPol[1375726])
    (2091470 '=' _retArg[1872209] _ir[2091456])
    (2091473 return _void[55])
  }
  function _ic_chunks[1376150].init[1376239](const in arg this[1376241]:_ic_chunks[1376150]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (2091451 return _void[55])
  }
  function _ic_chunks[1376150].incr[1376248](const in arg this[1376250]:_ic_chunks[1376150]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (2091454 return _void[55])
  }
  type _ic_chunks[1376150] val super[1376151]:object[22] "super class" val more[1376153]:int(64)[13] const-val F0_r[2090673]:range(int(64),bounded,false)[1026875] const-val F1_numChunks[2090677]:int(64)[13] const-val F2_remPol[2090681]:RemElems[266487] val F3__iterator[2090685]:_ic_chunksOrder[1376614] const F4_nElems[2090687]:int(64)[13] val F5_nChunks[2090689]:int(64)[13] val F6_chunkSize[2090691]:int(64)[13] val F7_rem[2090693]:int(64)[13] val F8__iterator[2090695]:_ic_chpl_direct_counted_range_iter[1103851] val F9__iterator[2090697]:_ic_chpl_direct_counted_range_iter_helper[1103601] const F10_tmp[2090699]:2*int(64)[1040117] val F11__iterator[2090701]:_ic_chpl_direct_param_stride_range_iter[1103347] val F12_i[2090703]:int(64)[13] const-val F13_ret_tmp[2090705]:2*int(64)[1040117] const-val F14_ret_tmp[2090707]:2*int(64)[1040117] const-val F15_ret_tmp[2090709]:2*int(64)[1040117] const-val F16_ret_tmp[2090711]:2*int(64)[1040117] const-val F17_ret_tmp[2090713]:range(int(64),bounded,false)[1026875] val value[2090715]:range(int(64),bounded,false)[1026875]
  type _ir_chunks[1376156] const-val F0_r[2090675]:range(int(64),bounded,false)[1026875] const-val F1_numChunks[2090679]:int(64)[13] const-val F2_remPol[2090683]:RemElems[266487]
  function _getIterator[1376165](const  ref arg ir[1376167]:_ir_chunks[1376156]) : _ic_chunks[1376150] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[1376274]:_ic_chunks[1376150] "dead after last mention" "RVV" "temp"
    val _ic_[1376157]:_ic_chunks[1376150] "dead after last mention" "temp"
    const-val call_tmp[1376281]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1376284 'move' call_tmp[1376281](1376296 'sizeof_bundle' _ic_chunks[1376150]))
    const-val cast_tmp[1376299]:c_void_ptr[149] "dead after last mention" "temp"
    (1376301 'move' cast_tmp[1376299](1376162 call chpl_here_alloc[187788] call_tmp[1376281] 70))
    (1376170 'move' _ic_[1376157](1376303 'cast' _ic_chunks[1376150] cast_tmp[1376299]))
    (1376172 'setcid' _ic_[1376157])
    (1376279 'move' ret[1376274] _ic_[1376157])
    (2091476 '.=' ret[1376274] more[1376153] 1)
    const-val tmp[2091480]:range(int(64),bounded,false)[1026875] "temp"
    (2091485 'move' tmp[2091480](2091481 '.v' ir[1376167] F0_r[2090675]))
    (2091487 '.=' ret[1376274] F0_r[2090673] tmp[2091480])
    const-val tmp[2091491]:int(64)[13] "temp"
    (2091496 'move' tmp[2091491](2091492 '.v' ir[1376167] F1_numChunks[2090679]))
    (2091498 '.=' ret[1376274] F1_numChunks[2090677] tmp[2091491])
    const-val tmp[2091502]:RemElems[266487] "temp"
    (2091507 'move' tmp[2091502](2091503 '.v' ir[1376167] F2_remPol[2090683]))
    (2091509 '.=' ret[1376274] F2_remPol[2090681] tmp[2091502])
    (1376276 return ret[1376274])
  }
  function _ic_chunksOrder[1376614].advance[1376640](const in arg this[1376642]:_ic_chunksOrder[1376614]) : void[4] "auto ii" "method" "resolved"
  {
    const-val more[2092157]:int(64)[13]
    (2092185 'move' more[2092157](2092182 '.v' this[1376642] more[1376617]))
    const-val tmp[2092160]:bool[10] "temp"
    (2092167 'move' tmp[2092160](2092164 '==' more[2092157] 2))
    if tmp[2092160]
    {
      gotoIterResume _jump_2[2092149] _jump_2[2092149]
    }
    const-val tmp[2092172]:bool[10] "temp"
    (2092177 'move' tmp[2092172](2092174 '==' more[2092157] -2))
    if tmp[2092172]
    {
      gotoIterResume _jump_break_2[2092151] _jump_break_2[2092151]
    }
    val ret[1376590]:_ir_chunksOrder[1376620] "dead at end of block" "RVV" "temp"
    const-val tmp[1376773]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1376775]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[2091553]:range(int(64),bounded,false)[1026875] "temp"
    (2091558 'move' tmp[2091553](2091555 '.v' this[1376642] F0_r[2091513]))
    (1376777 'move' call_tmp[1376775](1376780 call size[1035850] tmp[2091553]))
    (1376783 'move' tmp[1376773](1376786 call ==[435671] call_tmp[1376775] 0))
    val tmp[1376802]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1376804]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1376806]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1376808 'move' call_tmp[1376806] tmp[1376773])
    (1376813 'move' tmp[1376804] tmp[1376773])
    if tmp[1376773]
    {
      (1376820 'move' tmp[1376802] 1)
    }
    {
      const-val tmp[1376826]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1376828]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val tmp[2091560]:int(64)[13] "temp"
      (2091565 'move' tmp[2091560](2091562 '.v' this[1376642] F1_numChunks[2091517]))
      (1376830 'move' call_tmp[1376828](1376833 call <=[437055] tmp[2091560] 0))
      (1376836 'move' tmp[1376826] call_tmp[1376828])
      (1376841 'move' tmp[1376802] call_tmp[1376828])
    }
    const-val call_tmp[1376847]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1376849 'move' call_tmp[1376847] tmp[1376802])
    if tmp[1376802]
    {
      gotoReturn _end_chunksOrder[1377292] _end_chunksOrder[1377292]
    }
    const-val call_tmp[1376859]:int(64)[13] "dead at end of block" "maybe param" "temp"
    const-val tmp[2091567]:range(int(64),bounded,false)[1026875] "temp"
    (2091572 'move' tmp[2091567](2091569 '.v' this[1376642] F0_r[2091513]))
    (1376861 'move' call_tmp[1376859](1376864 call size[1035850] tmp[2091567]))
    const tmp[2091574]:int(64)[13] "temp"
    (1376869 'move' tmp[2091574] call_tmp[1376859])
    (2091576 '.=' this[1376642] F3_nElems[2091525] tmp[2091574])
    val call_tmp[1376873]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1376880]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val tmp[2091580]:int(64)[13] "temp"
    (2091585 'move' tmp[2091580](2091582 '.v' this[1376642] F1_numChunks[2091517]))
    (1376882 'move' call_tmp[1376880](1376885 call min[450039] tmp[2091580] call_tmp[1376859]))
    const-val call_tmp[1376888]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1376890 'move' call_tmp[1376888] call_tmp[1376880])
    val tmp[2091587]:int(64)[13] "temp"
    (1376898 'move' tmp[2091587] call_tmp[1376880])
    (2091589 '.=' this[1376642] F4_nChunks[2091527] tmp[2091587])
    val call_tmp[1376904]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[2091593]:int(64)[13] "temp"
    (1378583 'move' tmp[2091593] 0)
    (2091595 '.=' this[1376642] F5_chunkSize[2091529] tmp[2091593])
    val call_tmp[1376916]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[2091599]:int(64)[13] "temp"
    (1378586 'move' tmp[2091599] 0)
    (2091601 '.=' this[1376642] F6_rem[2091531] tmp[2091599])
    const-val tmp[1376929]:RemElems[266487] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[2091605]:RemElems[266487] "temp"
    (2091610 'move' tmp[2091605](2091607 '.v' this[1376642] F2_remPol[2091521]))
    (1376931 'move' tmp[1376929] tmp[2091605])
    const-val call_tmp[1376934]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[2091612]:RemElems[266487] "temp"
    (2091617 'move' tmp[2091612](2091614 '.v' this[1376642] F2_remPol[2091521]))
    (1376936 'move' call_tmp[1376934](1376939 call ==[1377318] tmp[2091612] Pack[266483]))
    const-val call_tmp[1376942]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1376944 'move' call_tmp[1376942] call_tmp[1376934])
    if call_tmp[1376934]
    {
      const-val call_tmp[1376951]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val tmp[2091619]:int(64)[13] "temp"
      (2091624 'move' tmp[2091619](2091621 '.v' this[1376642] F3_nElems[2091525]))
      const-val tmp[2091626]:int(64)[13] "temp"
      (2091631 'move' tmp[2091626](2091628 '.v' this[1376642] F4_nChunks[2091527]))
      (1376953 'move' call_tmp[1376951](1376956 call /[442723] tmp[2091619] tmp[2091626]))
      ref tmp[2091633]:_ref(int(64))[936633] "temp"
      (2091638 'move' tmp[2091633](2091635 '.' this[1376642] F5_chunkSize[2091529]))
      (1376960 call =[435370] tmp[2091633] call_tmp[1376951])
      const-val call_tmp[1376967]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val tmp[2091640]:int(64)[13] "temp"
      (2091645 'move' tmp[2091640](2091642 '.v' this[1376642] F5_chunkSize[2091529]))
      const-val tmp[2091647]:int(64)[13] "temp"
      (2091652 'move' tmp[2091647](2091649 '.v' this[1376642] F4_nChunks[2091527]))
      (1376969 'move' call_tmp[1376967](1376972 call *[441871] tmp[2091640] tmp[2091647]))
      const-val call_tmp[1376975]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val tmp[2091654]:int(64)[13] "temp"
      (2091659 'move' tmp[2091654](2091656 '.v' this[1376642] F3_nElems[2091525]))
      (1376977 'move' call_tmp[1376975](1376980 call !=[436055] call_tmp[1376967] tmp[2091654]))
      const-val call_tmp[1376983]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1376985 'move' call_tmp[1376983] call_tmp[1376975])
      if call_tmp[1376975]
      {
        ref tmp[2091661]:_ref(int(64))[936633] "temp"
        (2091666 'move' tmp[2091661](2091663 '.' this[1376642] F5_chunkSize[2091529]))
        (1376993 call +=[451358] tmp[2091661] 1)
        const-val call_tmp[1376998]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val tmp[2091668]:int(64)[13] "temp"
        (2091673 'move' tmp[2091668](2091670 '.v' this[1376642] F3_nElems[2091525]))
        const-val tmp[2091675]:int(64)[13] "temp"
        (2091680 'move' tmp[2091675](2091677 '.v' this[1376642] F5_chunkSize[2091529]))
        (1377000 'move' call_tmp[1376998](1377003 call divceil[1377371] tmp[2091668] tmp[2091675]))
        ref tmp[2091682]:_ref(int(64))[936633] "temp"
        (2091687 'move' tmp[2091682](2091684 '.' this[1376642] F4_nChunks[2091527]))
        (1377007 call =[435370] tmp[2091682] call_tmp[1376998])
      }
    }
    {
      const-val call_tmp[1377016]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1377018 'move' call_tmp[1377016](1377021 call ==[1377318] tmp[1376929] Mod[266485]))
      const-val call_tmp[1377024]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1377026 'move' call_tmp[1377024] call_tmp[1377016])
      if call_tmp[1377016]
      {
        const-val call_tmp[1377033]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val tmp[2091689]:int(64)[13] "temp"
        (2091694 'move' tmp[2091689](2091691 '.v' this[1376642] F3_nElems[2091525]))
        const-val tmp[2091696]:int(64)[13] "temp"
        (2091701 'move' tmp[2091696](2091698 '.v' this[1376642] F4_nChunks[2091527]))
        (1377035 'move' call_tmp[1377033](1377038 call /[442723] tmp[2091689] tmp[2091696]))
        ref tmp[2091703]:_ref(int(64))[936633] "temp"
        (2091708 'move' tmp[2091703](2091705 '.' this[1376642] F5_chunkSize[2091529]))
        (1377042 call =[435370] tmp[2091703] call_tmp[1377033])
        const-val call_tmp[1377049]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val tmp[2091710]:int(64)[13] "temp"
        (2091715 'move' tmp[2091710](2091712 '.v' this[1376642] F5_chunkSize[2091529]))
        const-val tmp[2091717]:int(64)[13] "temp"
        (2091722 'move' tmp[2091717](2091719 '.v' this[1376642] F4_nChunks[2091527]))
        (1377051 'move' call_tmp[1377049](1377054 call *[441871] tmp[2091710] tmp[2091717]))
        const-val call_tmp[1377057]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val tmp[2091724]:int(64)[13] "temp"
        (2091729 'move' tmp[2091724](2091726 '.v' this[1376642] F3_nElems[2091525]))
        (1377059 'move' call_tmp[1377057](1377062 call -[440459] tmp[2091724] call_tmp[1377049]))
        ref tmp[2091731]:_ref(int(64))[936633] "temp"
        (2091736 'move' tmp[2091731](2091733 '.' this[1376642] F6_rem[2091531]))
        (1377066 call =[435370] tmp[2091731] call_tmp[1377057])
      }
    }
    val _indexOfInterest[1377077]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[1377081]:_ir_chpl_direct_counted_range_iter[1103857] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[1865494]:_ir_chpl_direct_counted_range_iter[1103857] "temp"
    const-val tmp[2091738]:int(64)[13] "temp"
    (2091743 'move' tmp[2091738](2091740 '.v' this[1376642] F4_nChunks[2091527]))
    (1377086 call chpl_direct_counted_range_iter[458039] 0 tmp[2091738] ret_tmp[1865494])
    (1865497 'move' call_tmp[1377081] ret_tmp[1865494])
    val tmp[2091745]:_ic_chpl_direct_counted_range_iter[1103851] "temp"
    (1377089 'move' tmp[2091745](1377092 call _getIterator[1103866] call_tmp[1377081]))
    (2091747 '.=' this[1376642] F7__iterator[2091533] tmp[2091745])
    val ret[1962088]:_ir_chpl_direct_counted_range_iter[1103857] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[1962090]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[1962094]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[1962096]:_ir_chpl_direct_counted_range_iter_helper[1103607] "temp"
    const-val low[1962607]:int(64)[13] "temp"
    ref tmp[2091751]:_ref(_ic_chpl_direct_counted_range_iter)[1103994] "temp"
    (2091756 'move' tmp[2091751](2091753 '.' this[1376642] F7__iterator[2091533]))
    (1962612 'move' low[1962607](1962609 '.v' tmp[2091751] F0_low[2058106]))
    const-val count[1962614]:int(64)[13] "temp"
    ref tmp[2091758]:_ref(_ic_chpl_direct_counted_range_iter)[1103994] "temp"
    (2091763 'move' tmp[2091758](2091760 '.' this[1376642] F7__iterator[2091533]))
    (1962619 'move' count[1962614](1962616 '.v' tmp[2091758] F1_count[2058110]))
    (1962099 call chpl_direct_counted_range_iter_helper[1102159] low[1962607] count[1962614] ret_tmp[1962096])
    (1962103 'move' call_tmp[1962094] ret_tmp[1962096])
    val tmp[2091765]:_ic_chpl_direct_counted_range_iter_helper[1103601] "temp"
    (1962106 'move' tmp[2091765](1962109 call _getIterator[1103616] call_tmp[1962094]))
    (2091767 '.=' this[1376642] F8__iterator[2091535] tmp[2091765])
    val ret[1962112]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead after last mention" "RVV" "temp"
    val call_tmp[1962114]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val tmp[1962116]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1962118]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    const-val call_tmp[1962120]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[1962122]:int(64)[13] "temp"
    ref tmp[2091771]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
    (2091776 'move' tmp[2091771](2091773 '.' this[1376642] F8__iterator[2091535]))
    (1962124 'move' count[1962122](1962126 '.v' tmp[2091771] F1_count[2064268]))
    (1962129 'move' call_tmp[1962120](1962132 call <[948459] count[1962122]))
    (1962134 'move' tmp[1962118] call_tmp[1962120])
    (1962137 'move' tmp[1962116] call_tmp[1962120])
    const-val call_tmp[1962140]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1962142 'move' call_tmp[1962140] call_tmp[1962120])
    if call_tmp[1962120]
    {
      (1962148 call boundsCheckHalt[210187] "With a negative count, the range must have a last index.")
    }
    val tmp[1962153]:2*int(64)[1040117] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
    const-val tmp[1962155]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1962157]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val count[1962159]:int(64)[13] "temp"
    ref tmp[2091778]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
    (2091783 'move' tmp[2091778](2091780 '.' this[1376642] F8__iterator[2091535]))
    (1962161 'move' count[1962159](1962163 '.v' tmp[2091778] F1_count[2064268]))
    (1962166 'move' call_tmp[1962157](1962169 call ==[435671] count[1962159] 0))
    (1962172 'move' tmp[1962155] call_tmp[1962157])
    if call_tmp[1962157]
    {
      const-val tmp[1962177]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      val call_tmp[1962179]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[1962181]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val low[1962183]:int(64)[13] "temp"
      ref tmp[2091785]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
      (2091790 'move' tmp[2091785](2091787 '.' this[1376642] F8__iterator[2091535]))
      (1962185 'move' low[1962183](1962187 '.v' tmp[2091785] F0_low[2064264]))
      (1962190 'move' call_tmp[1962181](1962193 call _cast[956095] low[1962183]))
      const-val call_tmp[1962195]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1962197]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1962199 'move' coerce_tmp[1962197](1962201 'cast' uint(64)[115] 1))
      (1962204 'move' call_tmp[1962195](1962207 call -[962254] call_tmp[1962181]))
      const-val call_tmp[1962209]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1962211 'move' call_tmp[1962209](1962214 call _cast[953604] call_tmp[1962195]))
      const-val ret_tmp[1962216]:2*int(64)[1040117] "temp"
      const-val low[1962218]:int(64)[13] "temp"
      ref tmp[2091792]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
      (2091797 'move' tmp[2091792](2091794 '.' this[1376642] F8__iterator[2091535]))
      (1962220 'move' low[1962218](1962222 '.v' tmp[2091792] F0_low[2064264]))
      (1962226 call _build_tuple[1040075] low[1962218] call_tmp[1962209] ret_tmp[1962216])
      (1962230 'move' tmp[1962177] ret_tmp[1962216])
      (1962233 'move' tmp[1962153] tmp[1962177])
    }
    {
      const-val tmp[1962237]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      val call_tmp[1962239]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[1962241]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val count[1962243]:int(64)[13] "temp"
      ref tmp[2091799]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
      (2091804 'move' tmp[2091799](2091801 '.' this[1376642] F8__iterator[2091535]))
      (1962245 'move' count[1962243](1962247 '.v' tmp[2091799] F1_count[2064268]))
      (1962250 'move' call_tmp[1962241] count[1962243])
      const-val call_tmp[1962253]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val count[1962255]:int(64)[13] "temp"
      ref tmp[2091806]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
      (2091811 'move' tmp[2091806](2091808 '.' this[1376642] F8__iterator[2091535]))
      (1962257 'move' count[1962255](1962259 '.v' tmp[2091806] F1_count[2064268]))
      (1962262 'move' call_tmp[1962253](1962265 call -[962287] count[1962255]))
      const-val call_tmp[1962267]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val low[1962269]:int(64)[13] "temp"
      ref tmp[2091813]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
      (2091818 'move' tmp[2091813](2091815 '.' this[1376642] F8__iterator[2091535]))
      (1962271 'move' low[1962269](1962273 '.v' tmp[2091813] F0_low[2064264]))
      (1962276 'move' call_tmp[1962267](1962279 call +[439679] low[1962269] call_tmp[1962253]))
      const-val ret_tmp[1962282]:2*int(64)[1040117] "temp"
      const-val low[1962284]:int(64)[13] "temp"
      ref tmp[2091820]:_ref(_ic_chpl_direct_counted_range_iter_helper)[1103744] "temp"
      (2091825 'move' tmp[2091820](2091822 '.' this[1376642] F8__iterator[2091535]))
      (1962286 'move' low[1962284](1962288 '.v' tmp[2091820] F0_low[2064264]))
      (1962292 call _build_tuple[1040075] low[1962284] call_tmp[1962267] ret_tmp[1962282])
      (1962296 'move' tmp[1962237] ret_tmp[1962282])
      (1962299 'move' tmp[1962153] tmp[1962237])
    }
    const tmp[2091827]:2*int(64)[1040117] "temp"
    (1962303 '=' tmp[2091827] tmp[1962153])
    (2091829 '.=' this[1376642] F9_tmp[2091537] tmp[2091827])
    (1962306 'noop')
    1
    ref call_tmp[1962308]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
    ref tmp[2091833]:_ref(2*int(64))[1040190] "temp"
    (2091838 'move' tmp[2091833](2091835 '.' this[1376642] F9_tmp[2091537]))
    (1962310 'move' call_tmp[1962308](1962312 '.' tmp[2091833] x0[1040113]))
    const-val start[1962315]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1962317]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1962319 'move' coerce_tmp[1962317](1962321 'deref' call_tmp[1962308]))
    (1962323 '=' start[1962315] coerce_tmp[1962317])
    (1962326 'noop')
    ref call_tmp[1962327]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
    ref tmp[2091840]:_ref(2*int(64))[1040190] "temp"
    (2091845 'move' tmp[2091840](2091842 '.' this[1376642] F9_tmp[2091537]))
    (1962329 'move' call_tmp[1962327](1962331 '.' tmp[2091840] x1[1040115]))
    const-val end[1962334]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1962336]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1962338 'move' coerce_tmp[1962336](1962340 'deref' call_tmp[1962327]))
    (1962342 '=' end[1962334] coerce_tmp[1962336])
    (1962345 'noop')
    val _indexOfInterest[1962346]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    const-val call_tmp[1962350]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[1962352]:_ir_chpl_direct_param_stride_range_iter[1103353] "temp"
    (1962355 call chpl_direct_param_stride_range_iter[1102585] coerce_tmp[1962317] coerce_tmp[1962336] ret_tmp[1962352])
    (1962359 'move' call_tmp[1962350] ret_tmp[1962352])
    val tmp[2091847]:_ic_chpl_direct_param_stride_range_iter[1103347] "temp"
    (1962362 'move' tmp[2091847](1962365 call _getIterator[1103362] call_tmp[1962350]))
    (2091849 '.=' this[1376642] F10__iterator[2091539] tmp[2091847])
    val ret[2027693]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead after last mention" "RVV" "temp"
    val call_tmp[2027695]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (2027698 call chpl_range_check_stride[1102905])
    val call_tmp[2027701]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val tmp[2091853]:int(64)[13] "temp"
    (2027703 'move' tmp[2091853] 0)
    (2091855 '.=' this[1376642] F11_i[2091541] tmp[2091853])
    val call_tmp[2027706]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val default_arg_first[2027708]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[2027977]:int(64)[13] "temp"
    ref tmp[2091859]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103490] "temp"
    (2091864 'move' tmp[2091859](2091861 '.' this[1376642] F10__iterator[2091539]))
    (2027982 'move' low[2027977](2027979 '.v' tmp[2091859] F0_low[2065762]))
    (2027710 'move' default_arg_first[2027708](2027713 call chpl_checkIfRangeIterWillOverflow_default_first[1103259] low[2027977]))
    const-val default_arg_last[2027715]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[2027984]:int(64)[13] "temp"
    ref tmp[2091866]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103490] "temp"
    (2091871 'move' tmp[2091866](2091868 '.' this[1376642] F10__iterator[2091539]))
    (2027989 'move' high[2027984](2027986 '.v' tmp[2091866] F1_high[2065766]))
    (2027717 'move' default_arg_last[2027715](2027720 call chpl_checkIfRangeIterWillOverflow_default_last[1103287] high[2027984]))
    const-val _return_tmp_[2027722]:bool[10] "dead after last mention" "temp"
    const-val low[2027991]:int(64)[13] "temp"
    ref tmp[2091873]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103490] "temp"
    (2091878 'move' tmp[2091873](2091875 '.' this[1376642] F10__iterator[2091539]))
    (2027996 'move' low[2027991](2027993 '.v' tmp[2091873] F0_low[2065762]))
    const-val high[2027998]:int(64)[13] "temp"
    ref tmp[2091880]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103490] "temp"
    (2091885 'move' tmp[2091880](2091882 '.' this[1376642] F10__iterator[2091539]))
    (2028003 'move' high[2027998](2028000 '.v' tmp[2091880] F1_high[2065766]))
    (2027724 'move' _return_tmp_[2027722](2027727 call chpl_checkIfRangeIterWillOverflow[1096137] low[2027991] high[2027998] 1 default_arg_first[2027708] default_arg_last[2027715] 1))
    CForLoop[2027734]
    {
      const-val yret[2027749]:int(64)[13] "dead after last mention" "YVV" "temp"
      const-val tmp[2091887]:int(64)[13] "temp"
      (2091892 'move' tmp[2091887](2091889 '.v' this[1376642] F11_i[2091541]))
      (2027751 'move' yret[2027749] tmp[2091887])
      const-val _yieldedIndex[2027765]:int(64)[13] "temp"
      const-val tmp[2091894]:int(64)[13] "temp"
      (2091899 'move' tmp[2091894](2091896 '.v' this[1376642] F11_i[2091541]))
      (2027975 'move' _yieldedIndex[2027765] tmp[2091894])
      const-val i[2027767]:int(64)[13] "const" "index var" "insert auto destroy"
      (2027769 'move' i[2027767] _yieldedIndex[2027765])
      const-val yret[2027772]:int(64)[13] "dead after last mention" "YVV" "temp"
      (2027774 'move' yret[2027772] _yieldedIndex[2027765])
      const-val _yieldedIndex[2027777]:int(64)[13] "temp"
      (2027779 'move' _yieldedIndex[2027777] _yieldedIndex[2027765])
      const-val i[2027783]:int(64)[13] "const" "index var" "insert auto destroy"
      (2027785 'move' i[2027783] _yieldedIndex[2027777])
      const-val yret[2027788]:int(64)[13] "dead after last mention" "YVV" "temp"
      (2027790 'move' yret[2027788] _yieldedIndex[2027777])
      const-val _yieldedIndex[2027793]:int(64)[13] "temp"
      (2027795 'move' _yieldedIndex[2027793] _yieldedIndex[2027777])
      const-val i[2027799]:int(64)[13] "const" "index var" "insert auto destroy"
      (2027801 'move' i[2027799] _yieldedIndex[2027793])
      val chunk[2027804]:2*int(64)[1040117] "dead at end of block" "insert auto destroy" "maybe copy elided"
      val call_tmp[2027806]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[2027808]:2*int(64)[1040117] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      ref tmp[2091901]:_ref(2*int(64))[1040190] "temp"
      (2091906 'move' tmp[2091901](2091903 '.' this[1376642] F12_ret_tmp[2091543]))
      (2027813 call _defaultOf[1378593] tmp[2091901])
      const-val tmp[2091908]:2*int(64)[1040117] "temp"
      (2091913 'move' tmp[2091908](2091910 '.v' this[1376642] F12_ret_tmp[2091543]))
      (2027815 'move' chunk[2027804] tmp[2091908])
      const-val tmp[2027818]:RemElems[266487] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val tmp[2091915]:RemElems[266487] "temp"
      (2091920 'move' tmp[2091915](2091917 '.v' this[1376642] F2_remPol[2091521]))
      (2027820 'move' tmp[2027818] tmp[2091915])
      const-val call_tmp[2027823]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val tmp[2091922]:RemElems[266487] "temp"
      (2091927 'move' tmp[2091922](2091924 '.v' this[1376642] F2_remPol[2091521]))
      (2027825 'move' call_tmp[2027823](2027828 call ==[1377318] tmp[2091922] Thru[266481]))
      const-val call_tmp[2027831]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2027833 'move' call_tmp[2027831] call_tmp[2027823])
      if call_tmp[2027823]
      {
        const-val call_tmp[2027838]:2*int(64)[1040117] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[2091929]:int(64)[13] "temp"
        (2091934 'move' tmp[2091929](2091931 '.v' this[1376642] F3_nElems[2091525]))
        const-val tmp[2091936]:int(64)[13] "temp"
        (2091941 'move' tmp[2091936](2091938 '.v' this[1376642] F4_nChunks[2091527]))
        ref tmp[2091943]:_ref(2*int(64))[1040190] "temp"
        (2091948 'move' tmp[2091943](2091945 '.' this[1376642] F13_ret_tmp[2091545]))
        (2027843 call chunkOrderThru[1377588] tmp[2091929] tmp[2091936] i[2027799] tmp[2091943])
        const-val tmp[2091950]:2*int(64)[1040117] "temp"
        (2091955 'move' tmp[2091950](2091952 '.v' this[1376642] F13_ret_tmp[2091545]))
        (2027848 'move' call_tmp[2027838] tmp[2091950])
        (2027852 call =[1377840] chunk[2027804] call_tmp[2027838])
        (2027856 call chpl__autoDestroy[1635435] call_tmp[2027838])
      }
      {
        const-val call_tmp[2027859]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2027861 'move' call_tmp[2027859](2027864 call ==[1377318] tmp[2027818] Pack[266483]))
        const-val call_tmp[2027867]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2027869 'move' call_tmp[2027867] call_tmp[2027859])
        if call_tmp[2027859]
        {
          const-val call_tmp[2027874]:2*int(64)[1040117] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val tmp[2091957]:int(64)[13] "temp"
          (2091962 'move' tmp[2091957](2091959 '.v' this[1376642] F5_chunkSize[2091529]))
          const-val tmp[2091964]:int(64)[13] "temp"
          (2091969 'move' tmp[2091964](2091966 '.v' this[1376642] F3_nElems[2091525]))
          ref tmp[2091971]:_ref(2*int(64))[1040190] "temp"
          (2091976 'move' tmp[2091971](2091973 '.' this[1376642] F14_ret_tmp[2091547]))
          (2027879 call chunkOrderPack[1378064] tmp[2091957] tmp[2091964] i[2027799] tmp[2091971])
          const-val tmp[2091978]:2*int(64)[1040117] "temp"
          (2091983 'move' tmp[2091978](2091980 '.v' this[1376642] F14_ret_tmp[2091547]))
          (2027884 'move' call_tmp[2027874] tmp[2091978])
          (2027888 call =[1377840] chunk[2027804] call_tmp[2027874])
          (2027892 call chpl__autoDestroy[1635435] call_tmp[2027874])
        }
        {
          const-val call_tmp[2027895]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2027897 'move' call_tmp[2027895](2027900 call ==[1377318] tmp[2027818] Mod[266485]))
          const-val call_tmp[2027903]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2027905 'move' call_tmp[2027903] call_tmp[2027895])
          if call_tmp[2027895]
          {
            const-val call_tmp[2027910]:2*int(64)[1040117] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val tmp[2091985]:int(64)[13] "temp"
            (2091990 'move' tmp[2091985](2091987 '.v' this[1376642] F5_chunkSize[2091529]))
            const-val tmp[2091992]:int(64)[13] "temp"
            (2091997 'move' tmp[2091992](2091994 '.v' this[1376642] F6_rem[2091531]))
            const-val tmp[2091999]:int(64)[13] "temp"
            (2092004 'move' tmp[2091999](2092001 '.v' this[1376642] F3_nElems[2091525]))
            const-val tmp[2092006]:int(64)[13] "temp"
            (2092011 'move' tmp[2092006](2092008 '.v' this[1376642] F4_nChunks[2091527]))
            ref tmp[2092013]:_ref(2*int(64))[1040190] "temp"
            (2092018 'move' tmp[2092013](2092015 '.' this[1376642] F15_ret_tmp[2091549]))
            (2027915 call chunkOrderMod[1378321] tmp[2091985] tmp[2091992] tmp[2091999] tmp[2092006] i[2027799] tmp[2092013])
            const-val tmp[2092020]:2*int(64)[1040117] "temp"
            (2092025 'move' tmp[2092020](2092022 '.v' this[1376642] F15_ret_tmp[2091549]))
            (2027922 'move' call_tmp[2027910] tmp[2092020])
            (2027926 call =[1377840] chunk[2027804] call_tmp[2027910])
            (2027930 call chpl__autoDestroy[1635435] call_tmp[2027910])
          }
          {
            (2027934 call halt[154111] "RangeChunk: unknown RemElems in chunksOrder")
          }
        }
      }
      const-val yret[2027939]:2*int(64)[1040117] "dead after last mention" "YVV" "temp"
      val call_tmp[2027941]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[2027943]:2*int(64)[1040117] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val tmp[2092027]:2*int(64)[1040117] "temp"
      (2027947 '=' tmp[2092027] chunk[2027804])
      (2092029 '.=' this[1376642] value[2091551] tmp[2092027])
      (2027950 'noop')
      const-val tmp[2092033]:2*int(64)[1040117] "temp"
      (2092038 'move' tmp[2092033](2092035 '.v' this[1376642] value[2091551]))
      (2027951 'move' yret[2027939] tmp[2092033])
      (2092143 '.=' this[1376642] more[1376617] 2)
      gotoIterEnd _end[2092141] _end[2092141]
      label _jump_break_2[2092151]
      val tmp[2092040]:_ic_chpl_direct_param_stride_range_iter[1103347] "temp"
      (2092045 'move' tmp[2092040](2092042 '.v' this[1376642] F10__iterator[2091539]))
      (2027959 call _freeIterator[1103535] tmp[2092040])
      ref tmp[2092047]:_ref(2*int(64))[1040190] "temp"
      (2092052 'move' tmp[2092047](2092049 '.' this[1376642] F9_tmp[2091537]))
      (2027962 call chpl__autoDestroy[1635435] tmp[2092047])
      val tmp[2092054]:_ic_chpl_direct_counted_range_iter_helper[1103601] "temp"
      (2092059 'move' tmp[2092054](2092056 '.v' this[1376642] F8__iterator[2091535]))
      (2027965 call _freeIterator[1103785] tmp[2092054])
      val tmp[2092061]:_ic_chpl_direct_counted_range_iter[1103851] "temp"
      (2092066 'move' tmp[2092061](2092063 '.v' this[1376642] F7__iterator[2091533]))
      (2027968 call _freeIterator[1104035] tmp[2092061])
      gotoReturn _end_chunksOrder[1377292] _end_chunksOrder[1377292]
      label _jump_2[2092149]
      {
        const-val low[2028005]:int(64)[13] "temp"
        ref tmp[2092068]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103490] "temp"
        (2092073 'move' tmp[2092068](2092070 '.' this[1376642] F10__iterator[2091539]))
        (2028010 'move' low[2028005](2028007 '.v' tmp[2092068] F0_low[2065762]))
        val tmp[2092075]:int(64)[13] "temp"
        (2027736 '=' tmp[2092075] low[2028005])
        (2092077 '.=' this[1376642] F11_i[2091541] tmp[2092075])
      }
      {
        const-val high[2028012]:int(64)[13] "temp"
        ref tmp[2092081]:_ref(_ic_chpl_direct_param_stride_range_iter)[1103490] "temp"
        (2092086 'move' tmp[2092081](2092083 '.' this[1376642] F10__iterator[2091539]))
        (2028017 'move' high[2028012](2028014 '.v' tmp[2092081] F1_high[2065766]))
        val tmp[2092088]:int(64)[13] "temp"
        (2092093 'move' tmp[2092088](2092090 '.v' this[1376642] F11_i[2091541]))
        (2027740 '<=' tmp[2092088] high[2028012])
      }
      {
        val call_tmp[2027744]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val tmp[2092095]:int(64)[13] "temp"
        (2092100 'move' tmp[2092095](2092097 '.v' this[1376642] F11_i[2091541]))
        (2027746 '+=' tmp[2092095] 1)
        (2092102 '.=' this[1376642] F11_i[2091541] tmp[2092095])
      }
    }
    label _endchpl_direct_param_stride_range_iter[2027761]
    val tmp[2092106]:_ic_chpl_direct_param_stride_range_iter[1103347] "temp"
    (2092111 'move' tmp[2092106](2092108 '.v' this[1376642] F10__iterator[2091539]))
    (1962413 call _freeIterator[1103535] tmp[2092106])
    ref tmp[2092113]:_ref(2*int(64))[1040190] "temp"
    (2092118 'move' tmp[2092113](2092115 '.' this[1376642] F9_tmp[2091537]))
    (1962416 call chpl__autoDestroy[1635435] tmp[2092113])
    label _endchpl_direct_counted_range_iter_helper[1962418]
    val tmp[2092120]:_ic_chpl_direct_counted_range_iter_helper[1103601] "temp"
    (2092125 'move' tmp[2092120](2092122 '.v' this[1376642] F8__iterator[2091535]))
    (1962421 call _freeIterator[1103785] tmp[2092120])
    label _endchpl_direct_counted_range_iter[1962423]
    val tmp[2092127]:_ic_chpl_direct_counted_range_iter[1103851] "temp"
    (2092132 'move' tmp[2092127](2092129 '.v' this[1376642] F7__iterator[2091533]))
    (1883166 call _freeIterator[1104035] tmp[2092127])
    label _end_chunksOrder[1377292]
    (2092153 '.=' this[1376642] more[1376617] 0)
    label _end[2092141]
    (2092188 return _void[55])
  }
  function _ic_chunksOrder[1376614].zip1[1376649](const in arg this[1376651]:_ic_chunksOrder[1376614]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (2092134 call advance[1376640] this[1376651])
    (1376656 return _void[55])
  }
  function _ic_chunksOrder[1376614].zip2[1376658](const in arg this[1376660]:_ic_chunksOrder[1376614]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1376665 return _void[55])
  }
  function _ic_chunksOrder[1376614].zip3[1376667](const in arg this[1376669]:_ic_chunksOrder[1376614]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (2092137 call advance[1376640] this[1376669])
    (1376674 return _void[55])
  }
  function _ic_chunksOrder[1376614].zip4[1376676](const in arg this[1376678]:_ic_chunksOrder[1376614]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1376683 return _void[55])
  }
  function _ic_chunksOrder[1376614].hasMore[1376685](const in arg this[1376687]:_ic_chunksOrder[1376614]) : int(64)[13] "auto ii" "inline" "method" "resolved"
  {
    val tmp[2092191]:int(64)[13] "temp"
    (2092196 'move' tmp[2092191](2092193 '.v' this[1376687] more[1376617]))
    (2092198 return tmp[2092191])
  }
  function _ic_chunksOrder[1376614].getValue[1376694](const in arg this[1376696]:_ic_chunksOrder[1376614]) : 2*int(64)[1040117] "auto ii" "inline" "method" "resolved"
  {
    val tmp[2092201]:2*int(64)[1040117] "temp"
    (2092206 'move' tmp[2092201](2092203 '.v' this[1376696] value[2091551]))
    (2092208 return tmp[2092201])
  }
  function chunksOrder[1376548](const in arg r[1376550]:range(int(64),bounded,false)[1026875], const in arg numChunks[1376552]:int(64)[13], const in arg remPol[1376556]:RemElems[266487], ref arg _retArg[1872219]:_ref(_ir_chunksOrder)[1376731]) : void[4] "compiler added where" "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "resolved" "no return value for void"
  {
    val _ir[2092216]:_ir_chunksOrder[1376620] "temp"
    (2092218 '.=' _ir[2092216] F0_r[2091515] r[1376550])
    (2092222 '.=' _ir[2092216] F1_numChunks[2091519] numChunks[1376552])
    (2092226 '.=' _ir[2092216] F2_remPol[2091523] remPol[1376556])
    (2092230 '=' _retArg[1872219] _ir[2092216])
    (2092233 return _void[55])
  }
  function _ic_chunksOrder[1376614].init[1376703](const in arg this[1376705]:_ic_chunksOrder[1376614]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (2092211 return _void[55])
  }
  function _ic_chunksOrder[1376614].incr[1376712](const in arg this[1376714]:_ic_chunksOrder[1376614]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (2092214 return _void[55])
  }
  type _ic_chunksOrder[1376614] val super[1376615]:object[22] "super class" val more[1376617]:int(64)[13] const-val F0_r[2091513]:range(int(64),bounded,false)[1026875] const-val F1_numChunks[2091517]:int(64)[13] const-val F2_remPol[2091521]:RemElems[266487] const F3_nElems[2091525]:int(64)[13] val F4_nChunks[2091527]:int(64)[13] val F5_chunkSize[2091529]:int(64)[13] val F6_rem[2091531]:int(64)[13] val F7__iterator[2091533]:_ic_chpl_direct_counted_range_iter[1103851] val F8__iterator[2091535]:_ic_chpl_direct_counted_range_iter_helper[1103601] const F9_tmp[2091537]:2*int(64)[1040117] val F10__iterator[2091539]:_ic_chpl_direct_param_stride_range_iter[1103347] val F11_i[2091541]:int(64)[13] const-val F12_ret_tmp[2091543]:2*int(64)[1040117] const-val F13_ret_tmp[2091545]:2*int(64)[1040117] const-val F14_ret_tmp[2091547]:2*int(64)[1040117] const-val F15_ret_tmp[2091549]:2*int(64)[1040117] val value[2091551]:2*int(64)[1040117]
  type _ir_chunksOrder[1376620] const-val F0_r[2091515]:range(int(64),bounded,false)[1026875] const-val F1_numChunks[2091519]:int(64)[13] const-val F2_remPol[2091523]:RemElems[266487]
  function _getIterator[1376629](const  ref arg ir[1376631]:_ir_chunksOrder[1376620]) : _ic_chunksOrder[1376614] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[1376738]:_ic_chunksOrder[1376614] "dead after last mention" "RVV" "temp"
    val _ic_[1376621]:_ic_chunksOrder[1376614] "dead after last mention" "temp"
    const-val call_tmp[1376745]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1376748 'move' call_tmp[1376745](1376760 'sizeof_bundle' _ic_chunksOrder[1376614]))
    const-val cast_tmp[1376763]:c_void_ptr[149] "dead after last mention" "temp"
    (1376765 'move' cast_tmp[1376763](1376626 call chpl_here_alloc[187788] call_tmp[1376745] 71))
    (1376634 'move' _ic_[1376621](1376767 'cast' _ic_chunksOrder[1376614] cast_tmp[1376763]))
    (1376636 'setcid' _ic_[1376621])
    (1376743 'move' ret[1376738] _ic_[1376621])
    (2092236 '.=' ret[1376738] more[1376617] 1)
    const-val tmp[2092240]:range(int(64),bounded,false)[1026875] "temp"
    (2092245 'move' tmp[2092240](2092241 '.v' ir[1376631] F0_r[2091515]))
    (2092247 '.=' ret[1376738] F0_r[2091513] tmp[2092240])
    const-val tmp[2092251]:int(64)[13] "temp"
    (2092256 'move' tmp[2092251](2092252 '.v' ir[1376631] F1_numChunks[2091519]))
    (2092258 '.=' ret[1376738] F1_numChunks[2091517] tmp[2092251])
    const-val tmp[2092262]:RemElems[266487] "temp"
    (2092267 'move' tmp[2092262](2092263 '.v' ir[1376631] F2_remPol[2091523]))
    (2092269 '.=' ret[1376738] F2_remPol[2091521] tmp[2092262])
    (1376740 return ret[1376738])
  }
  function chunkOrderThru[1377588](const in arg nElems[1377590]:int(64)[13], const in arg nChunks[1377595]:int(64)[13], const in arg i[1377600]:int(64)[13], ref arg _retArg[1872229]:_ref(2*int(64))[1040190]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "private" "resolved" "fn synchronization free"
  {
    const-val ret[1377619]:2*int(64)[1040117] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1377629]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1377631 'move' call_tmp[1377629](1377634 call *[441871] nElems[1377590] i[1377600]))
    const-val m[1377637]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1377639 'move' m[1377637] call_tmp[1377629])
    const-val start[1377643]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val tmp[1377645]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1377647]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1377649]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1377651 'move' call_tmp[1377649](1377654 call ==[435671] i[1377600] 0))
    (1377657 'move' tmp[1377647] call_tmp[1377649])
    if tmp[1377647]
    {
      val call_tmp[1377666]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1377678 'move' tmp[1377645] 0)
    }
    {
      const-val tmp[1377684]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      (1377686 'move' tmp[1377684](1377689 call divceil[1377371] m[1377637] nChunks[1377595]))
      (1377692 'move' tmp[1377645] tmp[1377684])
    }
    (1377698 'move' start[1377643] tmp[1377645])
    const-val end[1377702]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val tmp[1377704]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1377706]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1377708]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1377710 'move' call_tmp[1377708](1377713 call -[962287] nChunks[1377595]))
    const-val call_tmp[1377716]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1377718 'move' call_tmp[1377716](1377721 call ==[435671] i[1377600] call_tmp[1377708]))
    (1377724 'move' tmp[1377706] call_tmp[1377716])
    if tmp[1377706]
    {
      const-val tmp[1377731]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      (1377733 'move' tmp[1377731](1377736 call -[962287] nElems[1377590]))
      (1377739 'move' tmp[1377704] tmp[1377731])
    }
    {
      const-val tmp[1377745]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1377747]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1377749 'move' call_tmp[1377747](1377752 call +[439679] m[1377637] nElems[1377590]))
      const-val call_tmp[1377755]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1377757 'move' call_tmp[1377755](1377760 call divceil[1377371] call_tmp[1377747] nChunks[1377595]))
      (1377763 'move' tmp[1377745](1377766 call -[962287] call_tmp[1377755]))
      (1377769 'move' tmp[1377704] tmp[1377745])
    }
    (1377775 'move' end[1377702] tmp[1377704])
    const-val call_tmp[1377781]:2*int(64)[1040117] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1866498]:2*int(64)[1040117] "temp"
    (1377786 call _build_tuple[1040075] start[1377643] end[1377702] ret_tmp[1866498])
    (1866501 'move' call_tmp[1377781] ret_tmp[1866498])
    val call_tmp[1377789]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1377795]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1377801]:2*int(64)[1040117] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1377838 'move' ret[1377619] call_tmp[1377781])
    gotoReturn _end_chunkOrderThru[1377819] _end_chunkOrderThru[1377819]
    label _end_chunkOrderThru[1377819]
    (1872231 '=' _retArg[1872229] ret[1377619])
    (1872233 return _void[55])
  }
  function chunkOrderPack[1378064](const in arg chunkSize[1378066]:int(64)[13], const in arg nElems[1378071]:int(64)[13], const in arg i[1378076]:int(64)[13], ref arg _retArg[1872241]:_ref(2*int(64))[1040190]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "private" "resolved" "fn synchronization free"
  {
    val ret[1378095]:2*int(64)[1040117] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1378105]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1378107 'move' call_tmp[1378105](1378110 call *[441871] chunkSize[1378066] i[1378076]))
    const-val start[1378113]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1378115 'move' start[1378113] call_tmp[1378105])
    const-val call_tmp[1378119]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1378121 'move' call_tmp[1378119](1378124 call >=[437275] start[1378113] nElems[1378071]))
    const-val call_tmp[1378127]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1378129 'move' call_tmp[1378127] call_tmp[1378119])
    if call_tmp[1378127]
    {
      val call_tmp[1378136]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1378150]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[1378164]:2*int(64)[1040117] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1866504]:2*int(64)[1040117] "temp"
      (1378169 call _build_tuple[1040075] 1 0 ret_tmp[1866504])
      (1866507 'move' call_tmp[1378164] ret_tmp[1866504])
      val call_tmp[1378172]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1378178]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1378184]:2*int(64)[1040117] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1378314 'move' ret[1378095] call_tmp[1378164])
      gotoReturn _end_chunkOrderPack[1378293] _end_chunkOrderPack[1378293]
    }
    const-val call_tmp[1378200]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1378202 'move' call_tmp[1378200](1378205 call +[439679] start[1378113] chunkSize[1378066]))
    const-val call_tmp[1378208]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1378210 'move' call_tmp[1378208](1378213 call -[962287] call_tmp[1378200]))
    val end[1378216]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1378218 'move' end[1378216] call_tmp[1378208])
    const-val call_tmp[1378223]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1378225 'move' call_tmp[1378223](1378228 call >=[437275] end[1378216] nElems[1378071]))
    const-val call_tmp[1378231]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1378233 'move' call_tmp[1378231] call_tmp[1378223])
    if call_tmp[1378231]
    {
      const-val call_tmp[1378240]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1378242 'move' call_tmp[1378240](1378245 call -[962287] nElems[1378071]))
      (1378249 call =[435370] end[1378216] call_tmp[1378240])
    }
    const-val call_tmp[1378255]:2*int(64)[1040117] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1866510]:2*int(64)[1040117] "temp"
    (1378260 call _build_tuple[1040075] start[1378113] end[1378216] ret_tmp[1866510])
    (1866513 'move' call_tmp[1378255] ret_tmp[1866510])
    val call_tmp[1378263]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1378269]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1378275]:2*int(64)[1040117] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1378317 'move' ret[1378095] call_tmp[1378255])
    gotoReturn _end_chunkOrderPack[1378293] _end_chunkOrderPack[1378293]
    label _end_chunkOrderPack[1378293]
    (1872243 '=' _retArg[1872241] ret[1378095])
    (1872245 return _void[55])
  }
  function chunkOrderMod[1378321](const in arg chunkSize[1378323]:int(64)[13], const in arg rem[1378328]:int(64)[13], const in arg nElems[1378333]:int(64)[13], const in arg nChunks[1378338]:int(64)[13], const in arg i[1378343]:int(64)[13], ref arg _retArg[1872253]:_ref(2*int(64))[1040190]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "private" "resolved" "fn synchronization free"
  {
    const-val ret[1378362]:2*int(64)[1040117] "dead after last mention" "RVV" "temp"
    val start[1378372]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[1378374]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1378568 'move' start[1378372] 0)
    val end[1378383]:int(64)[13] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1378385]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    const-val call_tmp[1378396]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1378398 'move' call_tmp[1378396](1378401 call <[437495] i[1378343] rem[1378328]))
    const-val call_tmp[1378404]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1378406 'move' call_tmp[1378404] call_tmp[1378396])
    if call_tmp[1378404]
    {
      const-val call_tmp[1378413]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1378415 'move' call_tmp[1378413](1378418 call +[949727] chunkSize[1378323]))
      const-val call_tmp[1378421]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1378423 'move' call_tmp[1378421](1378426 call *[441871] i[1378343] call_tmp[1378413]))
      (1378430 call =[435370] start[1378372] call_tmp[1378421])
      const-val call_tmp[1378435]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (1378437 'move' call_tmp[1378435](1378440 call +[439679] start[1378372] chunkSize[1378323]))
      (1378443 'move' end[1378383] call_tmp[1378435])
    }
    {
      const-val call_tmp[1378451]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1378453 'move' call_tmp[1378451](1378456 call -[440459] nChunks[1378338] i[1378343]))
      const-val call_tmp[1378459]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1378461 'move' call_tmp[1378459](1378464 call *[441871] call_tmp[1378451] chunkSize[1378323]))
      const-val call_tmp[1378467]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1378469 'move' call_tmp[1378467](1378472 call -[440459] nElems[1378333] call_tmp[1378459]))
      (1378476 call =[435370] start[1378372] call_tmp[1378467])
      const-val call_tmp[1378481]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1378483 'move' call_tmp[1378481](1378486 call +[439679] start[1378372] chunkSize[1378323]))
      const-val call_tmp[1378489]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (1378491 'move' call_tmp[1378489](1378494 call -[962287] call_tmp[1378481]))
      (1378497 'move' end[1378383] call_tmp[1378489])
    }
    const-val call_tmp[1378505]:2*int(64)[1040117] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1866516]:2*int(64)[1040117] "temp"
    (1378510 call _build_tuple[1040075] start[1378372] end[1378383] ret_tmp[1866516])
    (1866519 'move' call_tmp[1378505] ret_tmp[1866516])
    val call_tmp[1378513]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1378519]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1378525]:2*int(64)[1040117] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1378565 'move' ret[1378362] call_tmp[1378505])
    gotoReturn _end_chunkOrderMod[1378543] _end_chunkOrderMod[1378543]
    label _end_chunkOrderMod[1378543]
    (1872255 '=' _retArg[1872253] ret[1378362])
    (1872257 return _void[55])
  }
}