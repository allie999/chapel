AST dump for NetworkAtomics after pass createTaskFunctions.
Module use list: ChapelStandard MemConsistency 

{
  function chpl__init_NetworkAtomics[415971]() : void[4] "insert line file info" "module init"
  {
    (506851 return _void[55])
  }
  function externFunc[48480](param arg s[48477]:string[26], arg T[48482]:_any[178](?)) param : _unknown[51] "private"
  {
    unknown ret[506296] "RVV" "param" "temp"
    unknown call_tmp[607783] "expr temp" "maybe param" "maybe type" "temp"
    (607786 'move' call_tmp[607783](48487 call isInt T[48482]))
    unknown call_tmp[607788] "expr temp" "maybe param" "maybe type" "temp"
    (607791 'move' call_tmp[607788](48538 call _cond_test call_tmp[607783]))
    if call_tmp[607788]
    {
      unknown call_tmp[607793] "expr temp" "maybe param" "maybe type" "temp"
      (607796 'move' call_tmp[607793](48506 call + "chpl_comm_atomic_" s[48477]))
      unknown call_tmp[607798] "expr temp" "maybe param" "maybe type" "temp"
      (607801 'move' call_tmp[607798](48525 call + call_tmp[607793] "_int"))
      unknown call_tmp[607803] "expr temp" "maybe param" "maybe type" "temp"
      (607806 'move' call_tmp[607803](48530 call numBits T[48482]))
      unknown call_tmp[607808] "expr temp" "maybe param" "maybe type" "temp"
      (607811 'move' call_tmp[607808](48532 call _cast string[26] call_tmp[607803]))
      unknown call_tmp[607813] "expr temp" "maybe param" "maybe type" "temp"
      (607816 'move' call_tmp[607813](48534 call + call_tmp[607798] call_tmp[607808]))
      (506301 'move' ret[506296](506300 'deref' call_tmp[607813]))
      gotoReturn _end_externFunc[506294] _end_externFunc[506294]
    }
    unknown call_tmp[607818] "expr temp" "maybe param" "maybe type" "temp"
    (607821 'move' call_tmp[607818](48547 call isUint T[48482]))
    unknown call_tmp[607823] "expr temp" "maybe param" "maybe type" "temp"
    (607826 'move' call_tmp[607823](48582 call _cond_test call_tmp[607818]))
    if call_tmp[607823]
    {
      unknown call_tmp[607828] "expr temp" "maybe param" "maybe type" "temp"
      (607831 'move' call_tmp[607828](48550 call + "chpl_comm_atomic_" s[48477]))
      unknown call_tmp[607833] "expr temp" "maybe param" "maybe type" "temp"
      (607836 'move' call_tmp[607833](48569 call + call_tmp[607828] "_uint"))
      unknown call_tmp[607838] "expr temp" "maybe param" "maybe type" "temp"
      (607841 'move' call_tmp[607838](48574 call numBits T[48482]))
      unknown call_tmp[607843] "expr temp" "maybe param" "maybe type" "temp"
      (607846 'move' call_tmp[607843](48576 call _cast string[26] call_tmp[607838]))
      unknown call_tmp[607848] "expr temp" "maybe param" "maybe type" "temp"
      (607851 'move' call_tmp[607848](48578 call + call_tmp[607833] call_tmp[607843]))
      (506306 'move' ret[506296](506305 'deref' call_tmp[607848]))
      gotoReturn _end_externFunc[506294] _end_externFunc[506294]
    }
    unknown call_tmp[607853] "expr temp" "maybe param" "maybe type" "temp"
    (607856 'move' call_tmp[607853](48590 call isReal T[48482]))
    unknown call_tmp[607858] "expr temp" "maybe param" "maybe type" "temp"
    (607861 'move' call_tmp[607858](48609 call _cond_test call_tmp[607853]))
    if call_tmp[607858]
    {
      unknown call_tmp[607863] "expr temp" "maybe param" "maybe type" "temp"
      (607866 'move' call_tmp[607863](48593 call + "chpl_comm_atomic_" s[48477]))
      unknown call_tmp[607868] "expr temp" "maybe param" "maybe type" "temp"
      (607871 'move' call_tmp[607868](48596 call + call_tmp[607863] "_real"))
      unknown call_tmp[607873] "expr temp" "maybe param" "maybe type" "temp"
      (607876 'move' call_tmp[607873](48601 call numBits T[48482]))
      unknown call_tmp[607878] "expr temp" "maybe param" "maybe type" "temp"
      (607881 'move' call_tmp[607878](48603 call _cast string[26] call_tmp[607873]))
      unknown call_tmp[607883] "expr temp" "maybe param" "maybe type" "temp"
      (607886 'move' call_tmp[607883](48605 call + call_tmp[607868] call_tmp[607878]))
      (506311 'move' ret[506296](506310 'deref' call_tmp[607883]))
      gotoReturn _end_externFunc[506294] _end_externFunc[506294]
    }
    label _end_externFunc[506294]
    (506298 return ret[506296])
  }
  function RAtomicBool[49676].init=[48631](arg _mt[49680]:_MT[238], ref arg this[49678]:RAtomicBool[49676], arg other[48628]:RAtomicBool[49676]) : void[4] "atomic type" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[607888] "expr temp" "maybe param" "maybe type" "temp"
    (607891 'move' call_tmp[607888](48648 call int(64)[13] 64))
    unknown call_tmp[607895] "expr temp" "maybe param" "maybe type" "temp"
    (607898 'move' call_tmp[607895](48644 call(48640 call (partial) read _mt[243] other[48628])))
    unknown call_tmp[607900] "maybe param" "maybe type" "temp"
    (607903 'move' call_tmp[607900](48649 call _cast call_tmp[607888] call_tmp[607895]))
    unknown call_tmp[607905] "maybe param" "maybe type" "temp"
    (607908 'move' call_tmp[607905](454694 call int(64)[13] 64))
    unknown tmp[454691] "temp"
    (454696 'init var' tmp[454691] call_tmp[607900] call_tmp[607905])
    (454698 'init field' this[49678] c"_v" tmp[454691])
    (474444 'end of statement')
    (506315 return _void[55])
  }
  function RAtomicBool[49676].init=[48663](arg _mt[49684]:_MT[238], ref arg this[49682]:RAtomicBool[49676], arg other[48660]:bool[10]) : void[4] "atomic type" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[607910] "expr temp" "maybe param" "maybe type" "temp"
    (607913 'move' call_tmp[607910](48673 call int(64)[13] 64))
    unknown call_tmp[607915] "maybe param" "maybe type" "temp"
    (607918 'move' call_tmp[607915](48674 call _cast call_tmp[607910] other[48660]))
    unknown call_tmp[607920] "maybe param" "maybe type" "temp"
    (607923 'move' call_tmp[607920](454705 call int(64)[13] 64))
    unknown tmp[454702] "temp"
    (454707 'init var' tmp[454702] call_tmp[607915] call_tmp[607920])
    (454709 'init field' this[49682] c"_v" tmp[454702])
    (474445 'end of statement')
    (506317 return _void[55])
  }
  function RAtomicBool[49676]._localeid[48684](arg _mt[49688]:_MT[238], arg this[49686]:RAtomicBool[49676]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506321] "RVV" "temp"
    unknown call_tmp[607925] "expr temp" "maybe param" "maybe type" "temp"
    (607928 'move' call_tmp[607925](48698 call int(64)[13] 32))
    unknown call_tmp[607932] "expr temp" "maybe param" "maybe type" "temp"
    (607935 'move' call_tmp[607932](371888 call _v _mt[243] this[49686]))
    unknown call_tmp[607937] "expr temp" "maybe param" "maybe type" "temp"
    (607940 'move' call_tmp[607937](48694 '_wide_get_node' call_tmp[607932]))
    unknown call_tmp[607942] "expr temp" "maybe param" "maybe type" "temp"
    (607945 'move' call_tmp[607942](48699 call _cast call_tmp[607925] call_tmp[607937]))
    unknown call_tmp[607947] "expr temp" "maybe param" "maybe type" "temp"
    (607950 'move' call_tmp[607947](506326 call int(64)[13] 32))
    (506329 'move' ret[506321](506328 'coerce' call_tmp[607942] call_tmp[607947]))
    (506323 return ret[506321])
  }
  { scopeless type
    (48689 call int(64)[13] 32)
  }
  function RAtomicBool[49676]._addr[48709](arg _mt[49692]:_MT[238], arg this[49690]:RAtomicBool[49676]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506333] "RVV" "temp"
    unknown call_tmp[607954] "expr temp" "maybe param" "maybe type" "temp"
    (607957 'move' call_tmp[607954](371894 call _v _mt[243] this[49690]))
    unknown call_tmp[607959] "expr temp" "maybe param" "maybe type" "temp"
    (607962 'move' call_tmp[607959](48715 '_wide_get_addr' call_tmp[607954]))
    (506339 'move' ret[506333](506338 'coerce' call_tmp[607959] c_void_ptr[149]))
    (506335 return ret[506333])
  }
  { scopeless type
    c_void_ptr[149]
  }
  function RAtomicBool[49676].read[48733](arg _mt[49696]:_MT[238], const arg this[49694]:RAtomicBool[49676], param arg order[48729]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506349] "RVV" "temp"
    function atomic_read[48767](ref arg result[48764] :
    (48763 call int(64)[13] 64), arg l[48773] :
    (48772 call int(64)[13] 32), const arg obj[48777]:c_void_ptr[149], arg order[48781]:memory_order[186653], arg _chpl_cname[48789]:string[26] =
    unknown call_tmp[607964] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506343] "RVV" "temp"
      (506345 return ret[506343])
    }
    { scopeless type
      void[4]
    }
    unknown ret[48798] "dead at end of block" "insert auto destroy"
    unknown call_tmp[607969] "expr temp" "maybe param" "maybe type" "temp"
    (607972 'move' call_tmp[607969](48797 call int(64)[13] 64))
    (540672 'default init var' ret[48798] call_tmp[607969])
    (48801 'end of statement')
    unknown call_tmp[607976] "expr temp" "maybe param" "maybe type" "temp"
    (607979 'move' call_tmp[607976](48807 call(371904 call (partial) _localeid _mt[243] this[49694])))
    unknown call_tmp[607983] "expr temp" "maybe param" "maybe type" "temp"
    (607986 'move' call_tmp[607983](48810 call(371910 call (partial) _addr _mt[243] this[49694])))
    unknown call_tmp[607988] "expr temp" "maybe param" "maybe type" "temp"
    (607991 'move' call_tmp[607988](48814 call c_memory_order order[48729]))
    (48815 call atomic_read ret[48798] call_tmp[607976] call_tmp[607983] call_tmp[607988])
    (474448 'end of statement' ret[48798])
    unknown call_tmp[607993] "expr temp" "maybe param" "maybe type" "temp"
    (607996 'move' call_tmp[607993](48819 call _cast bool[10] ret[48798]))
    (506355 'move' ret[506349](506354 'coerce' call_tmp[607993] bool[10]))
    gotoReturn _end_read[506347] _end_read[506347]
    (474450 'end of statement' ret[48798])
    label _end_read[506347]
    (506351 return ret[506349])
  }
  { scopeless type
    bool[10]
  }
  function RAtomicBool[49676].write[48832](arg _mt[49700]:_MT[238], arg this[49698]:RAtomicBool[49676], arg value[48829]:bool[10], param arg order[48839]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506367] "RVV" "temp"
    function atomic_write[48875](ref arg desired[48872] :
    (48871 call int(64)[13] 64), arg l[48881] :
    (48880 call int(64)[13] 32), arg obj[48885]:c_void_ptr[149], arg order[48889]:memory_order[186653], arg _chpl_cname[48897]:string[26] =
    unknown call_tmp[607998] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506361] "RVV" "temp"
      (506363 return ret[506361])
    }
    { scopeless type
      void[4]
    }
    unknown call_tmp[608003] "expr temp" "maybe param" "maybe type" "temp"
    (608006 'move' call_tmp[608003](48906 call int(64)[13] 64))
    unknown call_tmp[608008] "maybe param" "maybe type" "temp"
    (608011 'move' call_tmp[608008](48907 call _cast call_tmp[608003] value[48829]))
    unknown v[48909] "dead at end of block" "insert auto destroy"
    (540674 'init var' v[48909] call_tmp[608008])
    (48912 'end of statement')
    unknown call_tmp[608015] "expr temp" "maybe param" "maybe type" "temp"
    (608018 'move' call_tmp[608015](48918 call(371921 call (partial) _localeid _mt[243] this[49698])))
    unknown call_tmp[608022] "expr temp" "maybe param" "maybe type" "temp"
    (608025 'move' call_tmp[608022](48921 call(371925 call (partial) _addr _mt[243] this[49698])))
    unknown call_tmp[608027] "expr temp" "maybe param" "maybe type" "temp"
    (608030 'move' call_tmp[608027](48925 call c_memory_order order[48839]))
    (48926 call atomic_write v[48909] call_tmp[608015] call_tmp[608022] call_tmp[608027])
    (474452 'end of statement' v[48909])
    (506369 return ret[506367])
  }
  { scopeless type
    void[4]
  }
  function RAtomicBool[49676].exchange[48937](arg _mt[49704]:_MT[238], arg this[49702]:RAtomicBool[49676], arg value[48934]:bool[10], param arg order[48944]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506379] "RVV" "temp"
    function atomic_xchg[48982](ref arg desired[48979] :
    (48978 call int(64)[13] 64), arg l[48988] :
    (48987 call int(64)[13] 32), arg obj[48992]:c_void_ptr[149], ref arg result[48999] :
    (48998 call int(64)[13] 64), arg order[49003]:memory_order[186653], arg _chpl_cname[49011]:string[26] =
    unknown call_tmp[608032] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506373] "RVV" "temp"
      (506375 return ret[506373])
    }
    { scopeless type
      void[4]
    }
    unknown ret[49020] "dead at end of block" "insert auto destroy"
    unknown call_tmp[608037] "expr temp" "maybe param" "maybe type" "temp"
    (608040 'move' call_tmp[608037](49019 call int(64)[13] 64))
    (540676 'default init var' ret[49020] call_tmp[608037])
    (49023 'end of statement')
    unknown call_tmp[608042] "expr temp" "maybe param" "maybe type" "temp"
    (608045 'move' call_tmp[608042](49028 call int(64)[13] 64))
    unknown call_tmp[608047] "maybe param" "maybe type" "temp"
    (608050 'move' call_tmp[608047](49029 call _cast call_tmp[608042] value[48934]))
    unknown v[49031] "dead at end of block" "insert auto destroy"
    (540678 'init var' v[49031] call_tmp[608047])
    (49034 'end of statement')
    unknown call_tmp[608054] "expr temp" "maybe param" "maybe type" "temp"
    (608057 'move' call_tmp[608054](49040 call(371935 call (partial) _localeid _mt[243] this[49702])))
    unknown call_tmp[608061] "expr temp" "maybe param" "maybe type" "temp"
    (608064 'move' call_tmp[608061](49043 call(371939 call (partial) _addr _mt[243] this[49702])))
    unknown call_tmp[608066] "expr temp" "maybe param" "maybe type" "temp"
    (608069 'move' call_tmp[608066](49048 call c_memory_order order[48944]))
    (49049 call atomic_xchg v[49031] call_tmp[608054] call_tmp[608061] ret[49020] call_tmp[608066])
    (474454 'end of statement' v[49031] ret[49020])
    unknown call_tmp[608071] "expr temp" "maybe param" "maybe type" "temp"
    (608074 'move' call_tmp[608071](49053 call _cast bool[10] ret[49020]))
    (506385 'move' ret[506379](506384 'coerce' call_tmp[608071] bool[10]))
    gotoReturn _end_exchange[506377] _end_exchange[506377]
    (474457 'end of statement' ret[49020])
    label _end_exchange[506377]
    (506381 return ret[506379])
  }
  { scopeless type
    bool[10]
  }
  function RAtomicBool[49676].compareExchange[49066](arg _mt[49708]:_MT[238], arg this[49706]:RAtomicBool[49676], ref arg expected[49063]:bool[10], arg desired[49069]:bool[10], param arg order[49077]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506391] "RVV" "temp"
    unknown call_tmp[608078] "expr temp" "maybe param" "maybe type" "temp"
    (608081 'move' call_tmp[608078](49093 call readableOrder order[49077]))
    unknown call_tmp[608083] "expr temp" "maybe param" "maybe type" "temp"
    (608086 'move' call_tmp[608083](49094 call(49083 call (partial) compareExchange _mt[243] this[49706]) expected[49063] desired[49069] order[49077] call_tmp[608078]))
    (506397 'move' ret[506391](506396 'coerce' call_tmp[608083] bool[10]))
    (506393 return ret[506391])
  }
  { scopeless type
    bool[10]
  }
  function RAtomicBool[49676].compareExchange[49107](arg _mt[49712]:_MT[238], arg this[49710]:RAtomicBool[49676], ref arg expected[49104]:bool[10], arg desired[49110]:bool[10], param arg success[49114]:memoryOrder[187012], param arg failure[49118]:memoryOrder[187012]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506407] "RVV" "temp"
    function atomic_cmpxchg[49155](ref arg expected[49152] :
    (49151 call int(64)[13] 64), ref arg desired[49161] :
    (49160 call int(64)[13] 64), arg l[49168] :
    (49167 call int(64)[13] 32), arg obj[49172]:c_void_ptr[149], ref arg result[49179] :
    (49178 call bool[10] 32), arg succ[49183]:memory_order[186653], arg fail[49187]:memory_order[186653], arg _chpl_cname[49195]:string[26] =
    unknown call_tmp[608088] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506401] "RVV" "temp"
      (506403 return ret[506401])
    }
    { scopeless type
      void[4]
    }
    unknown ret[49204] "dead at end of block" "insert auto destroy"
    unknown call_tmp[608093] "expr temp" "maybe param" "maybe type" "temp"
    (608096 'move' call_tmp[608093](49203 call bool[10] 32))
    (540680 'default init var' ret[49204] call_tmp[608093])
    (49207 'end of statement')
    unknown call_tmp[608098] "expr temp" "maybe param" "maybe type" "temp"
    (608101 'move' call_tmp[608098](49212 call int(64)[13] 64))
    unknown call_tmp[608103] "maybe param" "maybe type" "temp"
    (608106 'move' call_tmp[608103](49213 call _cast call_tmp[608098] expected[49104]))
    unknown te[49215] "dead at end of block" "insert auto destroy"
    (540682 'init var' te[49215] call_tmp[608103])
    (49218 'end of statement')
    unknown call_tmp[608108] "expr temp" "maybe param" "maybe type" "temp"
    (608111 'move' call_tmp[608108](49223 call int(64)[13] 64))
    unknown call_tmp[608113] "maybe param" "maybe type" "temp"
    (608116 'move' call_tmp[608113](49224 call _cast call_tmp[608108] desired[49110]))
    unknown td[49226] "dead at end of block" "insert auto destroy"
    (540684 'init var' td[49226] call_tmp[608113])
    (49229 'end of statement')
    unknown call_tmp[608120] "expr temp" "maybe param" "maybe type" "temp"
    (608123 'move' call_tmp[608120](49236 call(371960 call (partial) _localeid _mt[243] this[49710])))
    unknown call_tmp[608127] "expr temp" "maybe param" "maybe type" "temp"
    (608130 'move' call_tmp[608127](49239 call(371964 call (partial) _addr _mt[243] this[49710])))
    unknown call_tmp[608132] "expr temp" "maybe param" "maybe type" "temp"
    (608135 'move' call_tmp[608132](49244 call c_memory_order success[49114]))
    unknown call_tmp[608137] "expr temp" "maybe param" "maybe type" "temp"
    (608140 'move' call_tmp[608137](49248 call c_memory_order failure[49118]))
    (49249 call atomic_cmpxchg te[49215] td[49226] call_tmp[608120] call_tmp[608127] ret[49204] call_tmp[608132] call_tmp[608137])
    (474460 'end of statement' te[49215] td[49226] ret[49204])
    unknown call_tmp[608142] "expr temp" "maybe param" "maybe type" "temp"
    (608145 'move' call_tmp[608142](49252 call ! ret[49204]))
    unknown call_tmp[608147] "expr temp" "maybe param" "maybe type" "temp"
    (608150 'move' call_tmp[608147](49262 call _cond_test call_tmp[608142]))
    if call_tmp[608147]
    {
      unknown call_tmp[608152] "expr temp" "maybe param" "maybe type" "temp"
      (608155 'move' call_tmp[608152](49257 call _cast bool[10] te[49215]))
      (49259 call = expected[49104] call_tmp[608152])
      (474464 'end of statement' te[49215])
    }
    unknown call_tmp[608157] "expr temp" "maybe param" "maybe type" "temp"
    (608160 'move' call_tmp[608157](49269 call _cast bool[10] ret[49204]))
    (506413 'move' ret[506407](506412 'coerce' call_tmp[608157] bool[10]))
    gotoReturn _end_compareExchange[506405] _end_compareExchange[506405]
    (474466 'end of statement' ret[49204])
    label _end_compareExchange[506405]
    (506409 return ret[506407])
  }
  { scopeless type
    bool[10]
  }
  function RAtomicBool[49676].compareExchangeWeak[49282](arg _mt[49716]:_MT[238], arg this[49714]:RAtomicBool[49676], ref arg expected[49279]:bool[10], arg desired[49285]:bool[10], param arg order[49293]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506419] "RVV" "temp"
    unknown call_tmp[608164] "expr temp" "maybe param" "maybe type" "temp"
    (608167 'move' call_tmp[608164](49306 call(49299 call (partial) compareExchange _mt[243] this[49714]) expected[49279] desired[49285] order[49293]))
    (506425 'move' ret[506419](506424 'coerce' call_tmp[608164] bool[10]))
    (506421 return ret[506419])
  }
  { scopeless type
    bool[10]
  }
  function RAtomicBool[49676].compareExchangeWeak[49319](arg _mt[49720]:_MT[238], arg this[49718]:RAtomicBool[49676], ref arg expected[49316]:bool[10], arg desired[49322]:bool[10], param arg success[49326]:memoryOrder[187012], param arg failure[49330]:memoryOrder[187012]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506429] "RVV" "temp"
    unknown call_tmp[608171] "expr temp" "maybe param" "maybe type" "temp"
    (608174 'move' call_tmp[608171](49343 call(49335 call (partial) compareExchange _mt[243] this[49718]) expected[49316] desired[49322] success[49326] failure[49330]))
    (506435 'move' ret[506429](506434 'coerce' call_tmp[608171] bool[10]))
    (506431 return ret[506429])
  }
  { scopeless type
    bool[10]
  }
  function RAtomicBool[49676].compareAndSwap[49356](arg _mt[49724]:_MT[238], arg this[49722]:RAtomicBool[49676], arg expected[49353]:bool[10], arg desired[49359]:bool[10], param arg order[49367]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506445] "RVV" "temp"
    function atomic_cmpxchg[49389](ref arg expected[49386] :
    (49385 call int(64)[13] 64), ref arg desired[49395] :
    (49394 call int(64)[13] 64), arg l[49402] :
    (49401 call int(64)[13] 32), arg obj[49406]:c_void_ptr[149], ref arg result[49413] :
    (49412 call bool[10] 32), arg succ[49417]:memory_order[186653], arg fail[49421]:memory_order[186653], arg _chpl_cname[49429]:string[26] =
    unknown call_tmp[608176] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506439] "RVV" "temp"
      (506441 return ret[506439])
    }
    { scopeless type
      void[4]
    }
    unknown ret[49438] "dead at end of block" "insert auto destroy"
    unknown call_tmp[608181] "expr temp" "maybe param" "maybe type" "temp"
    (608184 'move' call_tmp[608181](49437 call bool[10] 32))
    (540686 'default init var' ret[49438] call_tmp[608181])
    (49441 'end of statement')
    unknown call_tmp[608186] "expr temp" "maybe param" "maybe type" "temp"
    (608189 'move' call_tmp[608186](49446 call int(64)[13] 64))
    unknown call_tmp[608191] "maybe param" "maybe type" "temp"
    (608194 'move' call_tmp[608191](49447 call _cast call_tmp[608186] expected[49353]))
    unknown te[49449] "dead at end of block" "insert auto destroy"
    (540688 'init var' te[49449] call_tmp[608191])
    (49452 'end of statement')
    unknown call_tmp[608196] "expr temp" "maybe param" "maybe type" "temp"
    (608199 'move' call_tmp[608196](49457 call int(64)[13] 64))
    unknown call_tmp[608201] "maybe param" "maybe type" "temp"
    (608204 'move' call_tmp[608201](49458 call _cast call_tmp[608196] desired[49359]))
    unknown td[49460] "dead at end of block" "insert auto destroy"
    (540690 'init var' td[49460] call_tmp[608201])
    (49463 'end of statement')
    unknown call_tmp[608208] "expr temp" "maybe param" "maybe type" "temp"
    (608211 'move' call_tmp[608208](49470 call(371993 call (partial) _localeid _mt[243] this[49722])))
    unknown call_tmp[608215] "expr temp" "maybe param" "maybe type" "temp"
    (608218 'move' call_tmp[608215](49473 call(371997 call (partial) _addr _mt[243] this[49722])))
    unknown call_tmp[608220] "expr temp" "maybe param" "maybe type" "temp"
    (608223 'move' call_tmp[608220](49478 call c_memory_order order[49367]))
    unknown call_tmp[608225] "expr temp" "maybe param" "maybe type" "temp"
    (608228 'move' call_tmp[608225](49483 call readableOrder order[49367]))
    unknown call_tmp[608230] "expr temp" "maybe param" "maybe type" "temp"
    (608233 'move' call_tmp[608230](49485 call c_memory_order call_tmp[608225]))
    (49486 call atomic_cmpxchg te[49449] td[49460] call_tmp[608208] call_tmp[608215] ret[49438] call_tmp[608220] call_tmp[608230])
    (474470 'end of statement' te[49449] td[49460] ret[49438])
    unknown call_tmp[608235] "expr temp" "maybe param" "maybe type" "temp"
    (608238 'move' call_tmp[608235](49490 call _cast bool[10] ret[49438]))
    (506451 'move' ret[506445](506450 'coerce' call_tmp[608235] bool[10]))
    gotoReturn _end_compareAndSwap[506443] _end_compareAndSwap[506443]
    (474474 'end of statement' ret[49438])
    label _end_compareAndSwap[506443]
    (506447 return ret[506445])
  }
  { scopeless type
    bool[10]
  }
  function RAtomicBool[49676].testAndSet[49508](arg _mt[49728]:_MT[238], arg this[49726]:RAtomicBool[49676], param arg order[49504]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506457] "RVV" "temp"
    unknown call_tmp[608242] "expr temp" "maybe param" "maybe type" "temp"
    (608245 'move' call_tmp[608242](49518 call(49512 call (partial) exchange _mt[243] this[49726]) 1 order[49504]))
    (506463 'move' ret[506457](506462 'coerce' call_tmp[608242] bool[10]))
    (506459 return ret[506457])
  }
  { scopeless type
    bool[10]
  }
  function RAtomicBool[49676].clear[49536](arg _mt[49732]:_MT[238], arg this[49730]:RAtomicBool[49676], param arg order[49532]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506467] "RVV" "temp"
    (49546 call(49540 call (partial) write _mt[243] this[49730]) 0 order[49532])
    (506469 return ret[506467])
  }
  { scopeless type
    void[4]
  }
  function RAtomicBool[49676].waitFor[49558](arg _mt[49736]:_MT[238], const arg this[49734]:RAtomicBool[49676], arg value[49555]:bool[10], param arg order[49565]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506473] "RVV" "temp"
    const tmp[49647] "const" "temp"
    unknown call_tmp[608249] "expr temp" "maybe param" "maybe type" "temp"
    (608252 'move' call_tmp[608249](49644 '_wide_get_locale' this[49734]))
    (49649 'move' tmp[49647](49645 'deref' call_tmp[608249]))
    (934133 call on_fn[934129] tmp[49647])
    function on_fn[934129](const in arg dummy_locale_arg[934131]:chpl_localeID_t[209352]) : void[4] "on"
    {
      {
        {
          unknown tmp[49590] "temp"
          unknown call_tmp[608256] "expr temp" "maybe param" "maybe type" "temp"
          (608259 'move' call_tmp[608256](49625 call(49622 call (partial) read _mt[243] this[49734])(order = relaxed[187010])))
          unknown call_tmp[608261] "expr temp" "maybe param" "maybe type" "temp"
          (608264 'move' call_tmp[608261](49620 call != call_tmp[608256] value[49555]))
          (49632 'move' tmp[49590](49618 call _cond_test call_tmp[608261]))
          WhileDo[49595]
          {
            {
              (49587 call chpl_task_yield)
            }
            label _continueLabel[49593]
            unknown call_tmp[608268] "expr temp" "maybe param" "maybe type" "temp"
            (608271 'move' call_tmp[608268](49606 call(49603 call (partial) read _mt[243] this[49734])(order = relaxed[187010])))
            unknown call_tmp[608273] "expr temp" "maybe param" "maybe type" "temp"
            (608276 'move' call_tmp[608273](49601 call != call_tmp[608268] value[49555]))
            (49613 'move' tmp[49590](49599 call _cond_test call_tmp[608273]))
            tmp[49590]
          }
          label _breakLabel[49594]
        }
        unknown call_tmp[608278] "expr temp" "maybe param" "maybe type" "temp"
        (608281 'move' call_tmp[608278](49640 call c_memory_order order[49565]))
        (49642 call chpl_atomic_thread_fence call_tmp[608278])
      }
      (934136 return _void[55])
    }
    {
    }
    (506475 return ret[506473])
  }
  { scopeless type
    void[4]
  }
  function RAtomicBool[49676].writeThis[49663](arg _mt[49740]:_MT[238], const arg this[49738]:RAtomicBool[49676], arg x[49661]:_any[178](?)) : _unknown[51] throws "atomic type" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[608285] "expr temp" "maybe param" "maybe type" "temp"
    (608288 'move' call_tmp[608285](49668 call(372015 call (partial) read _mt[243] this[49738])))
    (49669 call <~> x[49661] call_tmp[608285])
    (506477 return _void[55])
  }
  function RAtomicBool[49676]._v[763238](arg _mt[763240]:_MT[238], ref arg this[763242]:RAtomicBool[49676]) ref : _unknown[51] "atomic type" "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[763252] "RVV" "temp"
    unknown call_tmp[763259] "expr temp" "maybe param" "maybe type" "temp"
    (763262 'move' call_tmp[763259](763246 '.' this[763242] c"_v"))
    (763257 'move' ret[763252](763256 'addr of' call_tmp[763259]))
    (763254 return ret[763252])
  }
  function RAtomicBool[49676].init[763264](arg _mt[763266]:_MT[238], ref arg this[763267]:RAtomicBool[49676], in arg _v[763270] :
  (763273 call int(64)[13] 64) =
  _typeDefaultT[250]) : void[4] "compiler generated" "last resort" "method" "primary method" "suppress lvalue error"
  {
    (763286 'init field' this[763267] c"_v" _v[763270])
    (763290 return _void[55])
  }
  function RAtomicBool[49676].deinit[763292](arg _mt[763294]:_MT[238], arg this[763296]:RAtomicBool[49676]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (763304 return _void[55])
  }
  function chpl_fields_are_comparable[763318](arg _arg1[763320]:RAtomicBool[49676], arg _arg2[763321]:RAtomicBool[49676]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[763339]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[763346] "expr temp" "maybe param" "maybe type" "temp"
    (763349 'move' call_tmp[763346](763324 call _v _mt[243] _arg1[763320]))
    unknown call_tmp[763351] "expr temp" "maybe param" "maybe type" "temp"
    (763354 'move' call_tmp[763351](763328 call _v _mt[243] _arg2[763321]))
    unknown call_tmp[763356] "expr temp" "maybe param" "maybe type" "temp"
    (763359 'move' call_tmp[763356](763332 'call resolves' c"==" call_tmp[763346] call_tmp[763351]))
    (763344 'move' ret[763339](763343 'deref' call_tmp[763356]))
    (763341 return ret[763339])
  }
  function ==[763306](arg _arg1[763308]:RAtomicBool[49676], arg _arg2[763309]:RAtomicBool[49676]) : bool[10] "compiler generated" "last resort"
  {
    val ret[763388]:bool[10] "RVV" "temp"
    unknown call_tmp[763400] "expr temp" "maybe param" "maybe type" "temp"
    (763403 'move' call_tmp[763400](763367 call _v _mt[243] _arg1[763308]))
    unknown call_tmp[763405] "expr temp" "maybe param" "maybe type" "temp"
    (763408 'move' call_tmp[763405](763371 call _v _mt[243] _arg2[763309]))
    unknown call_tmp[763410] "expr temp" "maybe param" "maybe type" "temp"
    (763413 'move' call_tmp[763410](763375 call != call_tmp[763400] call_tmp[763405]))
    if call_tmp[763410]
    {
      (763393 'move' ret[763388](763392 'deref' 0))
      gotoReturn _end_==[763386] _end_==[763386]
    }
    (763398 'move' ret[763388](763397 'deref' 1))
    label _end_==[763386]
    (763390 return ret[763388])
  }
  where {
    unknown call_tmp[763415] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (763418 'move' call_tmp[763415](763312 'typeof' _arg1[763308]))
    unknown call_tmp[763420] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (763423 'move' call_tmp[763420](763314 'typeof' _arg2[763309]))
    unknown call_tmp[763425] "expr temp" "maybe param" "maybe type" "temp"
    (763428 'move' call_tmp[763425](763316 call == call_tmp[763415] call_tmp[763420]))
    unknown call_tmp[763430] "expr temp" "maybe param" "maybe type" "temp"
    (763433 'move' call_tmp[763430](763361 call chpl_fields_are_comparable[763318] _arg1[763308] _arg2[763309]))
    (763365 '&' call_tmp[763425] call_tmp[763430])
  }
  function chpl_fields_are_comparable[763447](arg _arg1[763449]:RAtomicBool[49676], arg _arg2[763450]:RAtomicBool[49676]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[763468]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[763475] "expr temp" "maybe param" "maybe type" "temp"
    (763478 'move' call_tmp[763475](763453 call _v _mt[243] _arg1[763449]))
    unknown call_tmp[763480] "expr temp" "maybe param" "maybe type" "temp"
    (763483 'move' call_tmp[763480](763457 call _v _mt[243] _arg2[763450]))
    unknown call_tmp[763485] "expr temp" "maybe param" "maybe type" "temp"
    (763488 'move' call_tmp[763485](763461 'call resolves' c"!=" call_tmp[763475] call_tmp[763480]))
    (763473 'move' ret[763468](763472 'deref' call_tmp[763485]))
    (763470 return ret[763468])
  }
  function !=[763435](arg _arg1[763437]:RAtomicBool[49676], arg _arg2[763438]:RAtomicBool[49676]) : bool[10] "compiler generated" "last resort"
  {
    val ret[763517]:bool[10] "RVV" "temp"
    unknown call_tmp[763529] "expr temp" "maybe param" "maybe type" "temp"
    (763532 'move' call_tmp[763529](763496 call _v _mt[243] _arg1[763437]))
    unknown call_tmp[763534] "expr temp" "maybe param" "maybe type" "temp"
    (763537 'move' call_tmp[763534](763500 call _v _mt[243] _arg2[763438]))
    unknown call_tmp[763539] "expr temp" "maybe param" "maybe type" "temp"
    (763542 'move' call_tmp[763539](763504 call != call_tmp[763529] call_tmp[763534]))
    if call_tmp[763539]
    {
      (763522 'move' ret[763517](763521 'deref' 1))
      gotoReturn _end_!=[763515] _end_!=[763515]
    }
    (763527 'move' ret[763517](763526 'deref' 0))
    label _end_!=[763515]
    (763519 return ret[763517])
  }
  where {
    unknown call_tmp[763544] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (763547 'move' call_tmp[763544](763441 'typeof' _arg1[763437]))
    unknown call_tmp[763549] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (763552 'move' call_tmp[763549](763443 'typeof' _arg2[763438]))
    unknown call_tmp[763554] "expr temp" "maybe param" "maybe type" "temp"
    (763557 'move' call_tmp[763554](763445 call == call_tmp[763544] call_tmp[763549]))
    unknown call_tmp[763559] "expr temp" "maybe param" "maybe type" "temp"
    (763562 'move' call_tmp[763559](763490 call chpl_fields_are_comparable[763447] _arg1[763437] _arg2[763438]))
    (763494 '&' call_tmp[763554] call_tmp[763559])
  }
  function chpl_fields_are_comparable[763576](arg _arg1[763578]:RAtomicBool[49676], arg _arg2[763579]:RAtomicBool[49676]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[763597]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[763604] "expr temp" "maybe param" "maybe type" "temp"
    (763607 'move' call_tmp[763604](763582 call _v _mt[243] _arg1[763578]))
    unknown call_tmp[763609] "expr temp" "maybe param" "maybe type" "temp"
    (763612 'move' call_tmp[763609](763586 call _v _mt[243] _arg2[763579]))
    unknown call_tmp[763614] "expr temp" "maybe param" "maybe type" "temp"
    (763617 'move' call_tmp[763614](763590 'call resolves' c"<" call_tmp[763604] call_tmp[763609]))
    (763602 'move' ret[763597](763601 'deref' call_tmp[763614]))
    (763599 return ret[763597])
  }
  function <[763564](arg _arg1[763566]:RAtomicBool[49676], arg _arg2[763567]:RAtomicBool[49676]) : bool[10] "compiler generated" "last resort"
  {
    val ret[763661]:bool[10] "RVV" "temp"
    unknown call_tmp[763678] "expr temp" "maybe param" "maybe type" "temp"
    (763681 'move' call_tmp[763678](763625 call _v _mt[243] _arg1[763566]))
    unknown call_tmp[763683] "expr temp" "maybe param" "maybe type" "temp"
    (763686 'move' call_tmp[763683](763629 call _v _mt[243] _arg2[763567]))
    unknown call_tmp[763688] "expr temp" "maybe param" "maybe type" "temp"
    (763691 'move' call_tmp[763688](763633 call < call_tmp[763678] call_tmp[763683]))
    if call_tmp[763688]
    {
      (763666 'move' ret[763661](763665 'deref' 1))
      gotoReturn _end_<[763659] _end_<[763659]
    }
    unknown call_tmp[763693] "expr temp" "maybe param" "maybe type" "temp"
    (763696 'move' call_tmp[763693](763639 call _v _mt[243] _arg1[763566]))
    unknown call_tmp[763698] "expr temp" "maybe param" "maybe type" "temp"
    (763701 'move' call_tmp[763698](763643 call _v _mt[243] _arg2[763567]))
    unknown call_tmp[763703] "expr temp" "maybe param" "maybe type" "temp"
    (763706 'move' call_tmp[763703](763647 call > call_tmp[763693] call_tmp[763698]))
    if call_tmp[763703]
    {
      (763671 'move' ret[763661](763670 'deref' 0))
      gotoReturn _end_<[763659] _end_<[763659]
    }
    (763676 'move' ret[763661](763675 'deref' 0))
    label _end_<[763659]
    (763663 return ret[763661])
  }
  where {
    unknown call_tmp[763708] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (763711 'move' call_tmp[763708](763570 'typeof' _arg1[763566]))
    unknown call_tmp[763713] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (763716 'move' call_tmp[763713](763572 'typeof' _arg2[763567]))
    unknown call_tmp[763718] "expr temp" "maybe param" "maybe type" "temp"
    (763721 'move' call_tmp[763718](763574 call == call_tmp[763708] call_tmp[763713]))
    unknown call_tmp[763723] "expr temp" "maybe param" "maybe type" "temp"
    (763726 'move' call_tmp[763723](763619 call chpl_fields_are_comparable[763576] _arg1[763566] _arg2[763567]))
    (763623 '&' call_tmp[763718] call_tmp[763723])
  }
  function chpl_fields_are_comparable[763740](arg _arg1[763742]:RAtomicBool[49676], arg _arg2[763743]:RAtomicBool[49676]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[763761]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[763768] "expr temp" "maybe param" "maybe type" "temp"
    (763771 'move' call_tmp[763768](763746 call _v _mt[243] _arg1[763742]))
    unknown call_tmp[763773] "expr temp" "maybe param" "maybe type" "temp"
    (763776 'move' call_tmp[763773](763750 call _v _mt[243] _arg2[763743]))
    unknown call_tmp[763778] "expr temp" "maybe param" "maybe type" "temp"
    (763781 'move' call_tmp[763778](763754 'call resolves' c"<=" call_tmp[763768] call_tmp[763773]))
    (763766 'move' ret[763761](763765 'deref' call_tmp[763778]))
    (763763 return ret[763761])
  }
  function <=[763728](arg _arg1[763730]:RAtomicBool[49676], arg _arg2[763731]:RAtomicBool[49676]) : bool[10] "compiler generated" "last resort"
  {
    val ret[763825]:bool[10] "RVV" "temp"
    unknown call_tmp[763842] "expr temp" "maybe param" "maybe type" "temp"
    (763845 'move' call_tmp[763842](763789 call _v _mt[243] _arg1[763730]))
    unknown call_tmp[763847] "expr temp" "maybe param" "maybe type" "temp"
    (763850 'move' call_tmp[763847](763793 call _v _mt[243] _arg2[763731]))
    unknown call_tmp[763852] "expr temp" "maybe param" "maybe type" "temp"
    (763855 'move' call_tmp[763852](763797 call < call_tmp[763842] call_tmp[763847]))
    if call_tmp[763852]
    {
      (763830 'move' ret[763825](763829 'deref' 1))
      gotoReturn _end_<=[763823] _end_<=[763823]
    }
    unknown call_tmp[763857] "expr temp" "maybe param" "maybe type" "temp"
    (763860 'move' call_tmp[763857](763803 call _v _mt[243] _arg1[763730]))
    unknown call_tmp[763862] "expr temp" "maybe param" "maybe type" "temp"
    (763865 'move' call_tmp[763862](763807 call _v _mt[243] _arg2[763731]))
    unknown call_tmp[763867] "expr temp" "maybe param" "maybe type" "temp"
    (763870 'move' call_tmp[763867](763811 call > call_tmp[763857] call_tmp[763862]))
    if call_tmp[763867]
    {
      (763835 'move' ret[763825](763834 'deref' 0))
      gotoReturn _end_<=[763823] _end_<=[763823]
    }
    (763840 'move' ret[763825](763839 'deref' 1))
    label _end_<=[763823]
    (763827 return ret[763825])
  }
  where {
    unknown call_tmp[763872] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (763875 'move' call_tmp[763872](763734 'typeof' _arg1[763730]))
    unknown call_tmp[763877] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (763880 'move' call_tmp[763877](763736 'typeof' _arg2[763731]))
    unknown call_tmp[763882] "expr temp" "maybe param" "maybe type" "temp"
    (763885 'move' call_tmp[763882](763738 call == call_tmp[763872] call_tmp[763877]))
    unknown call_tmp[763887] "expr temp" "maybe param" "maybe type" "temp"
    (763890 'move' call_tmp[763887](763783 call chpl_fields_are_comparable[763740] _arg1[763730] _arg2[763731]))
    (763787 '&' call_tmp[763882] call_tmp[763887])
  }
  function chpl_fields_are_comparable[763904](arg _arg1[763906]:RAtomicBool[49676], arg _arg2[763907]:RAtomicBool[49676]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[763925]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[763932] "expr temp" "maybe param" "maybe type" "temp"
    (763935 'move' call_tmp[763932](763910 call _v _mt[243] _arg1[763906]))
    unknown call_tmp[763937] "expr temp" "maybe param" "maybe type" "temp"
    (763940 'move' call_tmp[763937](763914 call _v _mt[243] _arg2[763907]))
    unknown call_tmp[763942] "expr temp" "maybe param" "maybe type" "temp"
    (763945 'move' call_tmp[763942](763918 'call resolves' c">" call_tmp[763932] call_tmp[763937]))
    (763930 'move' ret[763925](763929 'deref' call_tmp[763942]))
    (763927 return ret[763925])
  }
  function >[763892](arg _arg1[763894]:RAtomicBool[49676], arg _arg2[763895]:RAtomicBool[49676]) : bool[10] "compiler generated" "last resort"
  {
    val ret[763989]:bool[10] "RVV" "temp"
    unknown call_tmp[764006] "expr temp" "maybe param" "maybe type" "temp"
    (764009 'move' call_tmp[764006](763953 call _v _mt[243] _arg1[763894]))
    unknown call_tmp[764011] "expr temp" "maybe param" "maybe type" "temp"
    (764014 'move' call_tmp[764011](763957 call _v _mt[243] _arg2[763895]))
    unknown call_tmp[764016] "expr temp" "maybe param" "maybe type" "temp"
    (764019 'move' call_tmp[764016](763961 call > call_tmp[764006] call_tmp[764011]))
    if call_tmp[764016]
    {
      (763994 'move' ret[763989](763993 'deref' 1))
      gotoReturn _end_>[763987] _end_>[763987]
    }
    unknown call_tmp[764021] "expr temp" "maybe param" "maybe type" "temp"
    (764024 'move' call_tmp[764021](763967 call _v _mt[243] _arg1[763894]))
    unknown call_tmp[764026] "expr temp" "maybe param" "maybe type" "temp"
    (764029 'move' call_tmp[764026](763971 call _v _mt[243] _arg2[763895]))
    unknown call_tmp[764031] "expr temp" "maybe param" "maybe type" "temp"
    (764034 'move' call_tmp[764031](763975 call < call_tmp[764021] call_tmp[764026]))
    if call_tmp[764031]
    {
      (763999 'move' ret[763989](763998 'deref' 0))
      gotoReturn _end_>[763987] _end_>[763987]
    }
    (764004 'move' ret[763989](764003 'deref' 0))
    label _end_>[763987]
    (763991 return ret[763989])
  }
  where {
    unknown call_tmp[764036] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (764039 'move' call_tmp[764036](763898 'typeof' _arg1[763894]))
    unknown call_tmp[764041] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (764044 'move' call_tmp[764041](763900 'typeof' _arg2[763895]))
    unknown call_tmp[764046] "expr temp" "maybe param" "maybe type" "temp"
    (764049 'move' call_tmp[764046](763902 call == call_tmp[764036] call_tmp[764041]))
    unknown call_tmp[764051] "expr temp" "maybe param" "maybe type" "temp"
    (764054 'move' call_tmp[764051](763947 call chpl_fields_are_comparable[763904] _arg1[763894] _arg2[763895]))
    (763951 '&' call_tmp[764046] call_tmp[764051])
  }
  function chpl_fields_are_comparable[764068](arg _arg1[764070]:RAtomicBool[49676], arg _arg2[764071]:RAtomicBool[49676]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[764089]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[764096] "expr temp" "maybe param" "maybe type" "temp"
    (764099 'move' call_tmp[764096](764074 call _v _mt[243] _arg1[764070]))
    unknown call_tmp[764101] "expr temp" "maybe param" "maybe type" "temp"
    (764104 'move' call_tmp[764101](764078 call _v _mt[243] _arg2[764071]))
    unknown call_tmp[764106] "expr temp" "maybe param" "maybe type" "temp"
    (764109 'move' call_tmp[764106](764082 'call resolves' c">=" call_tmp[764096] call_tmp[764101]))
    (764094 'move' ret[764089](764093 'deref' call_tmp[764106]))
    (764091 return ret[764089])
  }
  function >=[764056](arg _arg1[764058]:RAtomicBool[49676], arg _arg2[764059]:RAtomicBool[49676]) : bool[10] "compiler generated" "last resort"
  {
    val ret[764153]:bool[10] "RVV" "temp"
    unknown call_tmp[764170] "expr temp" "maybe param" "maybe type" "temp"
    (764173 'move' call_tmp[764170](764117 call _v _mt[243] _arg1[764058]))
    unknown call_tmp[764175] "expr temp" "maybe param" "maybe type" "temp"
    (764178 'move' call_tmp[764175](764121 call _v _mt[243] _arg2[764059]))
    unknown call_tmp[764180] "expr temp" "maybe param" "maybe type" "temp"
    (764183 'move' call_tmp[764180](764125 call > call_tmp[764170] call_tmp[764175]))
    if call_tmp[764180]
    {
      (764158 'move' ret[764153](764157 'deref' 1))
      gotoReturn _end_>=[764151] _end_>=[764151]
    }
    unknown call_tmp[764185] "expr temp" "maybe param" "maybe type" "temp"
    (764188 'move' call_tmp[764185](764131 call _v _mt[243] _arg1[764058]))
    unknown call_tmp[764190] "expr temp" "maybe param" "maybe type" "temp"
    (764193 'move' call_tmp[764190](764135 call _v _mt[243] _arg2[764059]))
    unknown call_tmp[764195] "expr temp" "maybe param" "maybe type" "temp"
    (764198 'move' call_tmp[764195](764139 call < call_tmp[764185] call_tmp[764190]))
    if call_tmp[764195]
    {
      (764163 'move' ret[764153](764162 'deref' 0))
      gotoReturn _end_>=[764151] _end_>=[764151]
    }
    (764168 'move' ret[764153](764167 'deref' 1))
    label _end_>=[764151]
    (764155 return ret[764153])
  }
  where {
    unknown call_tmp[764200] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (764203 'move' call_tmp[764200](764062 'typeof' _arg1[764058]))
    unknown call_tmp[764205] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (764208 'move' call_tmp[764205](764064 'typeof' _arg2[764059]))
    unknown call_tmp[764210] "expr temp" "maybe param" "maybe type" "temp"
    (764213 'move' call_tmp[764210](764066 call == call_tmp[764200] call_tmp[764205]))
    unknown call_tmp[764215] "expr temp" "maybe param" "maybe type" "temp"
    (764218 'move' call_tmp[764215](764111 call chpl_fields_are_comparable[764068] _arg1[764058] _arg2[764059]))
    (764115 '&' call_tmp[764210] call_tmp[764215])
  }
  function chpl__defaultHash[764220](arg r[764222]:RAtomicBool[49676]) : _unknown[51] "compiler generated" "last resort"
  {
    unknown ret[764235] "RVV" "temp"
    unknown call_tmp[764242] "expr temp" "maybe param" "maybe type" "temp"
    (764245 'move' call_tmp[764242](764224 call _v _mt[243] r[764222]))
    unknown call_tmp[764247] "expr temp" "maybe param" "maybe type" "temp"
    (764250 'move' call_tmp[764247](764228 call chpl__defaultHash call_tmp[764242]))
    (764240 'move' ret[764235](764239 'deref' call_tmp[764247]))
    (764237 return ret[764235])
  }
  type RAtomicBool[49676] val _v[48621]:int(64)[13](48620 call int(64)[13] 64)
  function RAtomicT[51636](?).init=[49759](arg _mt[51640]:_MT[238], ref arg this[51638]:RAtomicT[51636](?), arg other[49756]:RAtomicT[51636](?)) : void[4] "atomic type" "method" "primary method" "no return value for void"
  {
    unknown tmp[454713] "temp" "type variable"
    (454715 'move' tmp[454713](49766 call T _mt[243] other[49756]))
    (454717 'init field' this[51638] c"T" tmp[454713])
    (474481 'end of statement')
    unknown call_tmp[608294] "maybe param" "maybe type" "temp"
    (608297 'move' call_tmp[608294](49782 call(49778 call (partial) read _mt[243] other[49756])))
    unknown call_tmp[608299] "maybe param" "maybe type" "temp"
    (608302 'move' call_tmp[608299](454730 '.v' this[51638] c"T"))
    unknown tmp[454721] "temp"
    (454724 'init var' tmp[454721] call_tmp[608294] call_tmp[608299])
    (454726 'init field' this[51638] c"_v" tmp[454721])
    (474482 'end of statement')
    (506479 return _void[55])
  }
  function RAtomicT[51636](?).init=[49798](arg _mt[51644]:_MT[238], ref arg this[51642]:RAtomicT[51636](?), arg other[49795] :
  unknown call_tmp[608304] "expr temp" "maybe param" "maybe type" "temp" "type variable") : void[4] "atomic type" "method" "primary method" "no return value for void"
  {
    unknown tmp[454733] "temp" "type variable"
    (454735 'move' tmp[454733](49805 'typeof' other[49795]))
    (454737 'init field' this[51642] c"T" tmp[454733])
    (474483 'end of statement')
    unknown call_tmp[608311] "maybe param" "maybe type" "temp"
    (608314 'move' call_tmp[608311](454750 '.v' this[51642] c"T"))
    unknown tmp[454741] "temp"
    (454744 'init var' tmp[454741] other[49795] call_tmp[608311])
    (454746 'init field' this[51642] c"_v" tmp[454741])
    (474484 'end of statement')
    (506481 return _void[55])
  }
  function RAtomicT[51636](?)._localeid[49822](arg _mt[51648]:_MT[238], arg this[51646]:RAtomicT[51636](?)) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506485] "RVV" "temp"
    unknown call_tmp[608316] "expr temp" "maybe param" "maybe type" "temp"
    (608319 'move' call_tmp[608316](49836 call int(64)[13] 32))
    unknown call_tmp[608323] "expr temp" "maybe param" "maybe type" "temp"
    (608326 'move' call_tmp[608323](372025 call _v _mt[243] this[51646]))
    unknown call_tmp[608328] "expr temp" "maybe param" "maybe type" "temp"
    (608331 'move' call_tmp[608328](49832 '_wide_get_node' call_tmp[608323]))
    unknown call_tmp[608333] "expr temp" "maybe param" "maybe type" "temp"
    (608336 'move' call_tmp[608333](49837 call _cast call_tmp[608316] call_tmp[608328]))
    unknown call_tmp[608338] "expr temp" "maybe param" "maybe type" "temp"
    (608341 'move' call_tmp[608338](506490 call int(64)[13] 32))
    (506493 'move' ret[506485](506492 'coerce' call_tmp[608333] call_tmp[608338]))
    (506487 return ret[506485])
  }
  { scopeless type
    (49827 call int(64)[13] 32)
  }
  function RAtomicT[51636](?)._addr[49847](arg _mt[51652]:_MT[238], arg this[51650]:RAtomicT[51636](?)) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506497] "RVV" "temp"
    unknown call_tmp[608345] "expr temp" "maybe param" "maybe type" "temp"
    (608348 'move' call_tmp[608345](372031 call _v _mt[243] this[51650]))
    unknown call_tmp[608350] "expr temp" "maybe param" "maybe type" "temp"
    (608353 'move' call_tmp[608350](49853 '_wide_get_addr' call_tmp[608345]))
    (506503 'move' ret[506497](506502 'coerce' call_tmp[608350] c_void_ptr[149]))
    (506499 return ret[506497])
  }
  { scopeless type
    c_void_ptr[149]
  }
  function RAtomicT[51636](?).read[49871](arg _mt[51656]:_MT[238], const arg this[51654]:RAtomicT[51636](?), param arg order[49867]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506513] "RVV" "temp"
    function atomic_read[49885](ref arg result[49882] :
    (372047 call T _mt[243] this[51654]), arg l[49891] :
    (49890 call int(64)[13] 32), const arg obj[49895]:c_void_ptr[149], arg order[49899]:memory_order[186653], arg _chpl_cname[49907]:string[26] =
    unknown call_tmp[608359] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506507] "RVV" "temp"
      (506509 return ret[506507])
    }
    { scopeless type
      void[4]
    }
    unknown ret[49913] "dead at end of block" "insert auto destroy"
    unknown call_tmp[608366] "expr temp" "maybe param" "maybe type" "temp"
    (608369 'move' call_tmp[608366](372054 call T _mt[243] this[51654]))
    (540692 'default init var' ret[49913] call_tmp[608366])
    (49916 'end of statement')
    unknown call_tmp[608373] "expr temp" "maybe param" "maybe type" "temp"
    (608376 'move' call_tmp[608373](49922 call(372059 call (partial) _localeid _mt[243] this[51654])))
    unknown call_tmp[608380] "expr temp" "maybe param" "maybe type" "temp"
    (608383 'move' call_tmp[608380](49925 call(372063 call (partial) _addr _mt[243] this[51654])))
    unknown call_tmp[608385] "expr temp" "maybe param" "maybe type" "temp"
    (608388 'move' call_tmp[608385](49929 call c_memory_order order[49867]))
    (49930 call atomic_read ret[49913] call_tmp[608373] call_tmp[608380] call_tmp[608385])
    (474487 'end of statement' ret[49913])
    unknown call_tmp[608392] "expr temp" "maybe param" "maybe type" "temp"
    (608395 'move' call_tmp[608392](506518 call T _mt[243] this[51654]))
    (506522 'move' ret[506513](506521 'coerce' ret[49913] call_tmp[608392]))
    gotoReturn _end_read[506511] _end_read[506511]
    (474489 'end of statement' ret[49913])
    label _end_read[506511]
    (506515 return ret[506513])
  }
  { scopeless type
    (372037 call T _mt[243] this[51654])
  }
  function RAtomicT[51636](?).write[49944](arg _mt[51660]:_MT[238], arg this[51658]:RAtomicT[51636](?), arg value[49941] :
  (372070 call T _mt[243] this[51658]), param arg order[49951]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506534] "RVV" "temp"
    function atomic_write[49967](ref arg desired[49964] :
    (372081 call T _mt[243] this[51658]), arg l[49973] :
    (49972 call int(64)[13] 32), arg obj[49977]:c_void_ptr[149], arg order[49981]:memory_order[186653], arg _chpl_cname[49989]:string[26] =
    unknown call_tmp[608405] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506528] "RVV" "temp"
      (506530 return ret[506528])
    }
    { scopeless type
      void[4]
    }
    unknown v[49995] "dead at end of block" "insert auto destroy"
    (540694 'init var' v[49995] value[49941])
    (49998 'end of statement')
    unknown call_tmp[608412] "expr temp" "maybe param" "maybe type" "temp"
    (608415 'move' call_tmp[608412](50004 call(372089 call (partial) _localeid _mt[243] this[51658])))
    unknown call_tmp[608419] "expr temp" "maybe param" "maybe type" "temp"
    (608422 'move' call_tmp[608419](50007 call(372093 call (partial) _addr _mt[243] this[51658])))
    unknown call_tmp[608424] "expr temp" "maybe param" "maybe type" "temp"
    (608427 'move' call_tmp[608424](50011 call c_memory_order order[49951]))
    (50012 call atomic_write v[49995] call_tmp[608412] call_tmp[608419] call_tmp[608424])
    (474491 'end of statement' v[49995])
    (506536 return ret[506534])
  }
  { scopeless type
    void[4]
  }
  function RAtomicT[51636](?).exchange[50023](arg _mt[51664]:_MT[238], arg this[51662]:RAtomicT[51636](?), arg value[50020] :
  (372099 call T _mt[243] this[51662]), param arg order[50030]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506546] "RVV" "temp"
    function atomic_xchg[50046](ref arg desired[50043] :
    (372115 call T _mt[243] this[51662]), arg l[50052] :
    (50051 call int(64)[13] 32), arg obj[50056]:c_void_ptr[149], ref arg result[50060] :
    (372121 call T _mt[243] this[51662]), arg order[50064]:memory_order[186653], arg _chpl_cname[50072]:string[26] =
    unknown call_tmp[608437] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506540] "RVV" "temp"
      (506542 return ret[506540])
    }
    { scopeless type
      void[4]
    }
    unknown ret[50078] "dead at end of block" "insert auto destroy"
    unknown call_tmp[608444] "expr temp" "maybe param" "maybe type" "temp"
    (608447 'move' call_tmp[608444](372127 call T _mt[243] this[51662]))
    (540696 'default init var' ret[50078] call_tmp[608444])
    (50081 'end of statement')
    unknown v[50083] "dead at end of block" "insert auto destroy"
    (540698 'init var' v[50083] value[50020])
    (50086 'end of statement')
    unknown call_tmp[608451] "expr temp" "maybe param" "maybe type" "temp"
    (608454 'move' call_tmp[608451](50092 call(372133 call (partial) _localeid _mt[243] this[51662])))
    unknown call_tmp[608458] "expr temp" "maybe param" "maybe type" "temp"
    (608461 'move' call_tmp[608458](50095 call(372137 call (partial) _addr _mt[243] this[51662])))
    unknown call_tmp[608463] "expr temp" "maybe param" "maybe type" "temp"
    (608466 'move' call_tmp[608463](50100 call c_memory_order order[50030]))
    (50101 call atomic_xchg v[50083] call_tmp[608451] call_tmp[608458] ret[50078] call_tmp[608463])
    (474493 'end of statement' v[50083] ret[50078])
    unknown call_tmp[608470] "expr temp" "maybe param" "maybe type" "temp"
    (608473 'move' call_tmp[608470](506551 call T _mt[243] this[51662]))
    (506555 'move' ret[506546](506554 'coerce' ret[50078] call_tmp[608470]))
    gotoReturn _end_exchange[506544] _end_exchange[506544]
    (474496 'end of statement' ret[50078])
    label _end_exchange[506544]
    (506548 return ret[506546])
  }
  { scopeless type
    (372105 call T _mt[243] this[51662])
  }
  function RAtomicT[51636](?).compareExchange[50115](arg _mt[51668]:_MT[238], arg this[51666]:RAtomicT[51636](?), ref arg expected[50112] :
  (372145 call T _mt[243] this[51666]), arg desired[50118] :
  (372150 call T _mt[243] this[51666]), param arg order[50126]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506561] "RVV" "temp"
    unknown call_tmp[608483] "expr temp" "maybe param" "maybe type" "temp"
    (608486 'move' call_tmp[608483](50142 call readableOrder order[50126]))
    unknown call_tmp[608488] "expr temp" "maybe param" "maybe type" "temp"
    (608491 'move' call_tmp[608488](50143 call(50132 call (partial) compareExchange _mt[243] this[51666]) expected[50112] desired[50118] order[50126] call_tmp[608483]))
    (506567 'move' ret[506561](506566 'coerce' call_tmp[608488] bool[10]))
    (506563 return ret[506561])
  }
  { scopeless type
    bool[10]
  }
  function RAtomicT[51636](?).compareExchange[50156](arg _mt[51672]:_MT[238], arg this[51670]:RAtomicT[51636](?), ref arg expected[50153] :
  (372160 call T _mt[243] this[51670]), arg desired[50159] :
  (372165 call T _mt[243] this[51670]), param arg success[50163]:memoryOrder[187012], param arg failure[50167]:memoryOrder[187012]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506577] "RVV" "temp"
    function atomic_cmpxchg[50182](ref arg expected[50179] :
    (372177 call T _mt[243] this[51670]), ref arg desired[50185] :
    (372182 call T _mt[243] this[51670]), arg l[50192] :
    (50191 call int(64)[13] 32), arg obj[50196]:c_void_ptr[149], ref arg result[50203] :
    (50202 call bool[10] 32), arg succ[50207]:memory_order[186653], arg fail[50211]:memory_order[186653], arg _chpl_cname[50219]:string[26] =
    unknown call_tmp[608503] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506571] "RVV" "temp"
      (506573 return ret[506571])
    }
    { scopeless type
      void[4]
    }
    unknown te[50225] "dead at end of block" "insert auto destroy"
    (540700 'init var' te[50225] expected[50153])
    (50228 'end of statement')
    unknown ret[50233] "dead at end of block" "insert auto destroy"
    unknown call_tmp[608508] "expr temp" "maybe param" "maybe type" "temp"
    (608511 'move' call_tmp[608508](50232 call bool[10] 32))
    (540702 'default init var' ret[50233] call_tmp[608508])
    (50236 'end of statement')
    unknown td[50238] "dead at end of block" "insert auto destroy"
    (540704 'init var' td[50238] desired[50159])
    (50241 'end of statement')
    unknown call_tmp[608515] "expr temp" "maybe param" "maybe type" "temp"
    (608518 'move' call_tmp[608515](50248 call(372193 call (partial) _localeid _mt[243] this[51670])))
    unknown call_tmp[608522] "expr temp" "maybe param" "maybe type" "temp"
    (608525 'move' call_tmp[608522](50251 call(372197 call (partial) _addr _mt[243] this[51670])))
    unknown call_tmp[608527] "expr temp" "maybe param" "maybe type" "temp"
    (608530 'move' call_tmp[608527](50256 call c_memory_order success[50163]))
    unknown call_tmp[608532] "expr temp" "maybe param" "maybe type" "temp"
    (608535 'move' call_tmp[608532](50260 call c_memory_order failure[50167]))
    (50261 call atomic_cmpxchg te[50225] td[50238] call_tmp[608515] call_tmp[608522] ret[50233] call_tmp[608527] call_tmp[608532])
    (474499 'end of statement' te[50225] td[50238] ret[50233])
    unknown call_tmp[608537] "expr temp" "maybe param" "maybe type" "temp"
    (608540 'move' call_tmp[608537](50264 call ! ret[50233]))
    unknown call_tmp[608542] "expr temp" "maybe param" "maybe type" "temp"
    (608545 'move' call_tmp[608542](50271 call _cond_test call_tmp[608537]))
    if call_tmp[608542]
    {
      (50268 call = expected[50153] te[50225])
      (474503 'end of statement' te[50225])
    }
    unknown call_tmp[608547] "expr temp" "maybe param" "maybe type" "temp"
    (608550 'move' call_tmp[608547](50278 call _cast bool[10] ret[50233]))
    (506583 'move' ret[506577](506582 'coerce' call_tmp[608547] bool[10]))
    gotoReturn _end_compareExchange[506575] _end_compareExchange[506575]
    (474505 'end of statement' ret[50233])
    label _end_compareExchange[506575]
    (506579 return ret[506577])
  }
  { scopeless type
    bool[10]
  }
  function RAtomicT[51636](?).compareExchangeWeak[50291](arg _mt[51676]:_MT[238], arg this[51674]:RAtomicT[51636](?), ref arg expected[50288] :
  (372209 call T _mt[243] this[51674]), arg desired[50294] :
  (372214 call T _mt[243] this[51674]), param arg order[50302]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506589] "RVV" "temp"
    unknown call_tmp[608558] "expr temp" "maybe param" "maybe type" "temp"
    (608561 'move' call_tmp[608558](50315 call(50308 call (partial) compareExchange _mt[243] this[51674]) expected[50288] desired[50294] order[50302]))
    (506595 'move' ret[506589](506594 'coerce' call_tmp[608558] bool[10]))
    (506591 return ret[506589])
  }
  { scopeless type
    bool[10]
  }
  function RAtomicT[51636](?).compareExchangeWeak[50328](arg _mt[51680]:_MT[238], arg this[51678]:RAtomicT[51636](?), ref arg expected[50325] :
  (372223 call T _mt[243] this[51678]), arg desired[50331] :
  (372228 call T _mt[243] this[51678]), param arg success[50335]:memoryOrder[187012], param arg failure[50339]:memoryOrder[187012]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506599] "RVV" "temp"
    unknown call_tmp[608569] "expr temp" "maybe param" "maybe type" "temp"
    (608572 'move' call_tmp[608569](50352 call(50344 call (partial) compareExchange _mt[243] this[51678]) expected[50325] desired[50331] success[50335] failure[50339]))
    (506605 'move' ret[506599](506604 'coerce' call_tmp[608569] bool[10]))
    (506601 return ret[506599])
  }
  { scopeless type
    bool[10]
  }
  function RAtomicT[51636](?).compareAndSwap[50365](arg _mt[51684]:_MT[238], arg this[51682]:RAtomicT[51636](?), arg expected[50362] :
  (372239 call T _mt[243] this[51682]), arg desired[50368] :
  (372244 call T _mt[243] this[51682]), param arg order[50376]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506615] "RVV" "temp"
    function atomic_cmpxchg[50392](ref arg expected[50389] :
    (372255 call T _mt[243] this[51682]), ref arg desired[50395] :
    (372260 call T _mt[243] this[51682]), arg l[50402] :
    (50401 call int(64)[13] 32), arg obj[50406]:c_void_ptr[149], ref arg result[50413] :
    (50412 call bool[10] 32), arg succ[50417]:memory_order[186653], arg fail[50421]:memory_order[186653], arg _chpl_cname[50429]:string[26] =
    unknown call_tmp[608584] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506609] "RVV" "temp"
      (506611 return ret[506609])
    }
    { scopeless type
      void[4]
    }
    unknown ret[50438] "dead at end of block" "insert auto destroy"
    unknown call_tmp[608589] "expr temp" "maybe param" "maybe type" "temp"
    (608592 'move' call_tmp[608589](50437 call bool[10] 32))
    (540706 'default init var' ret[50438] call_tmp[608589])
    (50441 'end of statement')
    unknown te[50443] "dead at end of block" "insert auto destroy"
    (540708 'init var' te[50443] expected[50362])
    (50446 'end of statement')
    unknown td[50448] "dead at end of block" "insert auto destroy"
    (540710 'init var' td[50448] desired[50368])
    (50451 'end of statement')
    unknown call_tmp[608596] "expr temp" "maybe param" "maybe type" "temp"
    (608599 'move' call_tmp[608596](50458 call(372271 call (partial) _localeid _mt[243] this[51682])))
    unknown call_tmp[608603] "expr temp" "maybe param" "maybe type" "temp"
    (608606 'move' call_tmp[608603](50461 call(372275 call (partial) _addr _mt[243] this[51682])))
    unknown call_tmp[608608] "expr temp" "maybe param" "maybe type" "temp"
    (608611 'move' call_tmp[608608](50466 call c_memory_order order[50376]))
    unknown call_tmp[608613] "expr temp" "maybe param" "maybe type" "temp"
    (608616 'move' call_tmp[608613](50471 call readableOrder order[50376]))
    unknown call_tmp[608618] "expr temp" "maybe param" "maybe type" "temp"
    (608621 'move' call_tmp[608618](50473 call c_memory_order call_tmp[608613]))
    (50474 call atomic_cmpxchg te[50443] td[50448] call_tmp[608596] call_tmp[608603] ret[50438] call_tmp[608608] call_tmp[608618])
    (474509 'end of statement' te[50443] td[50448] ret[50438])
    unknown call_tmp[608623] "expr temp" "maybe param" "maybe type" "temp"
    (608626 'move' call_tmp[608623](50478 call _cast bool[10] ret[50438]))
    (506621 'move' ret[506615](506620 'coerce' call_tmp[608623] bool[10]))
    gotoReturn _end_compareAndSwap[506613] _end_compareAndSwap[506613]
    (474513 'end of statement' ret[50438])
    label _end_compareAndSwap[506613]
    (506617 return ret[506615])
  }
  { scopeless type
    bool[10]
  }
  function RAtomicT[51636](?).fetchAdd[50491](arg _mt[51688]:_MT[238], arg this[51686]:RAtomicT[51636](?), arg value[50488] :
  (372284 call T _mt[243] this[51686]), param arg order[50498]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506633] "RVV" "temp"
    function atomic_fetch_add[50514](ref arg op[50511] :
    (372300 call T _mt[243] this[51686]), arg l[50520] :
    (50519 call int(64)[13] 32), arg obj[50524]:c_void_ptr[149], ref arg result[50528] :
    (372306 call T _mt[243] this[51686]), arg order[50532]:memory_order[186653], arg _chpl_cname[50540]:string[26] =
    unknown call_tmp[608636] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506627] "RVV" "temp"
      (506629 return ret[506627])
    }
    { scopeless type
      void[4]
    }
    unknown ret[50546] "dead at end of block" "insert auto destroy"
    unknown call_tmp[608643] "expr temp" "maybe param" "maybe type" "temp"
    (608646 'move' call_tmp[608643](372312 call T _mt[243] this[51686]))
    (540712 'default init var' ret[50546] call_tmp[608643])
    (50549 'end of statement')
    unknown v[50551] "dead at end of block" "insert auto destroy"
    (540714 'init var' v[50551] value[50488])
    (50554 'end of statement')
    unknown call_tmp[608650] "expr temp" "maybe param" "maybe type" "temp"
    (608653 'move' call_tmp[608650](50560 call(372318 call (partial) _localeid _mt[243] this[51686])))
    unknown call_tmp[608657] "expr temp" "maybe param" "maybe type" "temp"
    (608660 'move' call_tmp[608657](50563 call(372322 call (partial) _addr _mt[243] this[51686])))
    unknown call_tmp[608662] "expr temp" "maybe param" "maybe type" "temp"
    (608665 'move' call_tmp[608662](50568 call c_memory_order order[50498]))
    (50569 call atomic_fetch_add v[50551] call_tmp[608650] call_tmp[608657] ret[50546] call_tmp[608662])
    (474515 'end of statement' v[50551] ret[50546])
    unknown call_tmp[608669] "expr temp" "maybe param" "maybe type" "temp"
    (608672 'move' call_tmp[608669](506638 call T _mt[243] this[51686]))
    (506642 'move' ret[506633](506641 'coerce' ret[50546] call_tmp[608669]))
    gotoReturn _end_fetchAdd[506631] _end_fetchAdd[506631]
    (474518 'end of statement' ret[50546])
    label _end_fetchAdd[506631]
    (506635 return ret[506633])
  }
  { scopeless type
    (372290 call T _mt[243] this[51686])
  }
  function RAtomicT[51636](?).add[50583](arg _mt[51692]:_MT[238], arg this[51690]:RAtomicT[51636](?), arg value[50580] :
  (372330 call T _mt[243] this[51690]), param arg order[50590]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506654] "RVV" "temp"
    function atomic_add[50620](ref arg op[50617] :
    (372341 call T _mt[243] this[51690]), arg l[50626] :
    (50625 call int(64)[13] 32), arg obj[50630]:c_void_ptr[149], arg order[50634]:memory_order[186653], arg _chpl_cname[50642]:string[26] =
    unknown call_tmp[608682] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506648] "RVV" "temp"
      (506650 return ret[506648])
    }
    { scopeless type
      void[4]
    }
    unknown v[50648] "dead at end of block" "insert auto destroy"
    (540716 'init var' v[50648] value[50580])
    (50651 'end of statement')
    unknown call_tmp[608689] "expr temp" "maybe param" "maybe type" "temp"
    (608692 'move' call_tmp[608689](50657 call(372349 call (partial) _localeid _mt[243] this[51690])))
    unknown call_tmp[608696] "expr temp" "maybe param" "maybe type" "temp"
    (608699 'move' call_tmp[608696](50660 call(372353 call (partial) _addr _mt[243] this[51690])))
    unknown call_tmp[608701] "expr temp" "maybe param" "maybe type" "temp"
    (608704 'move' call_tmp[608701](50664 call c_memory_order order[50590]))
    (50665 call atomic_add v[50648] call_tmp[608689] call_tmp[608696] call_tmp[608701])
    (474520 'end of statement' v[50648])
    (506656 return ret[506654])
  }
  { scopeless type
    void[4]
  }
  function RAtomicT[51636](?).fetchSub[50676](arg _mt[51696]:_MT[238], arg this[51694]:RAtomicT[51636](?), arg value[50673] :
  (372359 call T _mt[243] this[51694]), param arg order[50683]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506666] "RVV" "temp"
    function atomic_fetch_sub[50699](ref arg op[50696] :
    (372375 call T _mt[243] this[51694]), arg l[50705] :
    (50704 call int(64)[13] 32), arg obj[50709]:c_void_ptr[149], ref arg result[50713] :
    (372381 call T _mt[243] this[51694]), arg order[50717]:memory_order[186653], arg _chpl_cname[50725]:string[26] =
    unknown call_tmp[608714] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506660] "RVV" "temp"
      (506662 return ret[506660])
    }
    { scopeless type
      void[4]
    }
    unknown ret[50731] "dead at end of block" "insert auto destroy"
    unknown call_tmp[608721] "expr temp" "maybe param" "maybe type" "temp"
    (608724 'move' call_tmp[608721](372387 call T _mt[243] this[51694]))
    (540718 'default init var' ret[50731] call_tmp[608721])
    (50734 'end of statement')
    unknown v[50736] "dead at end of block" "insert auto destroy"
    (540720 'init var' v[50736] value[50673])
    (50739 'end of statement')
    unknown call_tmp[608728] "expr temp" "maybe param" "maybe type" "temp"
    (608731 'move' call_tmp[608728](50745 call(372393 call (partial) _localeid _mt[243] this[51694])))
    unknown call_tmp[608735] "expr temp" "maybe param" "maybe type" "temp"
    (608738 'move' call_tmp[608735](50748 call(372397 call (partial) _addr _mt[243] this[51694])))
    unknown call_tmp[608740] "expr temp" "maybe param" "maybe type" "temp"
    (608743 'move' call_tmp[608740](50753 call c_memory_order order[50683]))
    (50754 call atomic_fetch_sub v[50736] call_tmp[608728] call_tmp[608735] ret[50731] call_tmp[608740])
    (474522 'end of statement' v[50736] ret[50731])
    unknown call_tmp[608747] "expr temp" "maybe param" "maybe type" "temp"
    (608750 'move' call_tmp[608747](506671 call T _mt[243] this[51694]))
    (506675 'move' ret[506666](506674 'coerce' ret[50731] call_tmp[608747]))
    gotoReturn _end_fetchSub[506664] _end_fetchSub[506664]
    (474525 'end of statement' ret[50731])
    label _end_fetchSub[506664]
    (506668 return ret[506666])
  }
  { scopeless type
    (372365 call T _mt[243] this[51694])
  }
  function RAtomicT[51636](?).sub[50768](arg _mt[51700]:_MT[238], arg this[51698]:RAtomicT[51636](?), arg value[50765] :
  (372405 call T _mt[243] this[51698]), param arg order[50775]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506687] "RVV" "temp"
    function atomic_sub[50805](ref arg op[50802] :
    (372416 call T _mt[243] this[51698]), arg l[50811] :
    (50810 call int(64)[13] 32), arg obj[50815]:c_void_ptr[149], arg order[50819]:memory_order[186653], arg _chpl_cname[50827]:string[26] =
    unknown call_tmp[608760] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506681] "RVV" "temp"
      (506683 return ret[506681])
    }
    { scopeless type
      void[4]
    }
    unknown v[50833] "dead at end of block" "insert auto destroy"
    (540722 'init var' v[50833] value[50765])
    (50836 'end of statement')
    unknown call_tmp[608767] "expr temp" "maybe param" "maybe type" "temp"
    (608770 'move' call_tmp[608767](50842 call(372424 call (partial) _localeid _mt[243] this[51698])))
    unknown call_tmp[608774] "expr temp" "maybe param" "maybe type" "temp"
    (608777 'move' call_tmp[608774](50845 call(372428 call (partial) _addr _mt[243] this[51698])))
    unknown call_tmp[608779] "expr temp" "maybe param" "maybe type" "temp"
    (608782 'move' call_tmp[608779](50849 call c_memory_order order[50775]))
    (50850 call atomic_sub v[50833] call_tmp[608767] call_tmp[608774] call_tmp[608779])
    (474527 'end of statement' v[50833])
    (506689 return ret[506687])
  }
  { scopeless type
    void[4]
  }
  function RAtomicT[51636](?).fetchOr[50861](arg _mt[51704]:_MT[238], arg this[51702]:RAtomicT[51636](?), arg value[50858] :
  (372434 call T _mt[243] this[51702]), param arg order[50868]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506699] "RVV" "temp"
    unknown call_tmp[608788] "expr temp" "maybe param" "maybe type" "temp"
    (608791 'move' call_tmp[608788](372445 call T _mt[243] this[51702]))
    unknown call_tmp[608793] "expr temp" "maybe param" "maybe type" "temp"
    (608796 'move' call_tmp[608793](50876 call isIntegral call_tmp[608788]))
    unknown call_tmp[608798] "expr temp" "maybe param" "maybe type" "temp"
    (608801 'move' call_tmp[608798](50877 call ! call_tmp[608793]))
    unknown call_tmp[608803] "expr temp" "maybe param" "maybe type" "temp"
    (608806 'move' call_tmp[608803](50884 call _cond_test call_tmp[608798]))
    if call_tmp[608803]
    {
      (50882 call compilerError "fetchOr is only defined for integer atomic types")
    }
    function atomic_fetch_or[50901](ref arg op[50898] :
    (372455 call T _mt[243] this[51702]), arg l[50907] :
    (50906 call int(64)[13] 32), arg obj[50911]:c_void_ptr[149], ref arg result[50915] :
    (372461 call T _mt[243] this[51702]), arg order[50919]:memory_order[186653], arg _chpl_cname[50927]:string[26] =
    unknown call_tmp[608814] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506693] "RVV" "temp"
      (506695 return ret[506693])
    }
    { scopeless type
      void[4]
    }
    unknown ret[50932] "dead at end of block" "insert auto destroy"
    unknown call_tmp[608821] "expr temp" "maybe param" "maybe type" "temp"
    (608824 'move' call_tmp[608821](372467 call T _mt[243] this[51702]))
    (540724 'default init var' ret[50932] call_tmp[608821])
    (50935 'end of statement')
    unknown v[50937] "dead at end of block" "insert auto destroy"
    (540726 'init var' v[50937] value[50858])
    (50940 'end of statement')
    unknown call_tmp[608828] "expr temp" "maybe param" "maybe type" "temp"
    (608831 'move' call_tmp[608828](50946 call(372473 call (partial) _localeid _mt[243] this[51702])))
    unknown call_tmp[608835] "expr temp" "maybe param" "maybe type" "temp"
    (608838 'move' call_tmp[608835](50949 call(372477 call (partial) _addr _mt[243] this[51702])))
    unknown call_tmp[608840] "expr temp" "maybe param" "maybe type" "temp"
    (608843 'move' call_tmp[608840](50954 call c_memory_order order[50868]))
    (50955 call atomic_fetch_or v[50937] call_tmp[608828] call_tmp[608835] ret[50932] call_tmp[608840])
    (474530 'end of statement' v[50937] ret[50932])
    unknown call_tmp[608847] "expr temp" "maybe param" "maybe type" "temp"
    (608850 'move' call_tmp[608847](506704 call T _mt[243] this[51702]))
    (506708 'move' ret[506699](506707 'coerce' ret[50932] call_tmp[608847]))
    gotoReturn _end_fetchOr[506697] _end_fetchOr[506697]
    (474533 'end of statement' ret[50932])
    label _end_fetchOr[506697]
    (506701 return ret[506699])
  }
  { scopeless type
    (372440 call T _mt[243] this[51702])
  }
  function RAtomicT[51636](?).or[50969](arg _mt[51708]:_MT[238], arg this[51706]:RAtomicT[51636](?), arg value[50966] :
  (372485 call T _mt[243] this[51706]), param arg order[50976]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506720] "RVV" "temp"
    unknown call_tmp[608858] "expr temp" "maybe param" "maybe type" "temp"
    (608861 'move' call_tmp[608858](372491 call T _mt[243] this[51706]))
    unknown call_tmp[608863] "expr temp" "maybe param" "maybe type" "temp"
    (608866 'move' call_tmp[608863](50984 call isIntegral call_tmp[608858]))
    unknown call_tmp[608868] "expr temp" "maybe param" "maybe type" "temp"
    (608871 'move' call_tmp[608868](50985 call ! call_tmp[608863]))
    unknown call_tmp[608873] "expr temp" "maybe param" "maybe type" "temp"
    (608876 'move' call_tmp[608873](50992 call _cond_test call_tmp[608868]))
    if call_tmp[608873]
    {
      (50990 call compilerError "or is only defined for integer atomic types")
    }
    function atomic_or[51025](ref arg op[51022] :
    (372501 call T _mt[243] this[51706]), arg l[51031] :
    (51030 call int(64)[13] 32), arg obj[51035]:c_void_ptr[149], arg order[51039]:memory_order[186653], arg _chpl_cname[51047]:string[26] =
    unknown call_tmp[608882] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506714] "RVV" "temp"
      (506716 return ret[506714])
    }
    { scopeless type
      void[4]
    }
    unknown v[51052] "dead at end of block" "insert auto destroy"
    (540728 'init var' v[51052] value[50966])
    (51055 'end of statement')
    unknown call_tmp[608889] "expr temp" "maybe param" "maybe type" "temp"
    (608892 'move' call_tmp[608889](51061 call(372509 call (partial) _localeid _mt[243] this[51706])))
    unknown call_tmp[608896] "expr temp" "maybe param" "maybe type" "temp"
    (608899 'move' call_tmp[608896](51064 call(372513 call (partial) _addr _mt[243] this[51706])))
    unknown call_tmp[608901] "expr temp" "maybe param" "maybe type" "temp"
    (608904 'move' call_tmp[608901](51068 call c_memory_order order[50976]))
    (51069 call atomic_or v[51052] call_tmp[608889] call_tmp[608896] call_tmp[608901])
    (474536 'end of statement' v[51052])
    (506722 return ret[506720])
  }
  { scopeless type
    void[4]
  }
  function RAtomicT[51636](?).fetchAnd[51080](arg _mt[51712]:_MT[238], arg this[51710]:RAtomicT[51636](?), arg value[51077] :
  (372519 call T _mt[243] this[51710]), param arg order[51087]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506732] "RVV" "temp"
    unknown call_tmp[608910] "expr temp" "maybe param" "maybe type" "temp"
    (608913 'move' call_tmp[608910](372530 call T _mt[243] this[51710]))
    unknown call_tmp[608915] "expr temp" "maybe param" "maybe type" "temp"
    (608918 'move' call_tmp[608915](51095 call isIntegral call_tmp[608910]))
    unknown call_tmp[608920] "expr temp" "maybe param" "maybe type" "temp"
    (608923 'move' call_tmp[608920](51096 call ! call_tmp[608915]))
    unknown call_tmp[608925] "expr temp" "maybe param" "maybe type" "temp"
    (608928 'move' call_tmp[608925](51103 call _cond_test call_tmp[608920]))
    if call_tmp[608925]
    {
      (51101 call compilerError "fetchAnd is only defined for integer atomic types")
    }
    function atomic_fetch_and[51120](ref arg op[51117] :
    (372540 call T _mt[243] this[51710]), arg l[51126] :
    (51125 call int(64)[13] 32), arg obj[51130]:c_void_ptr[149], ref arg result[51134] :
    (372546 call T _mt[243] this[51710]), arg order[51138]:memory_order[186653], arg _chpl_cname[51146]:string[26] =
    unknown call_tmp[608936] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506726] "RVV" "temp"
      (506728 return ret[506726])
    }
    { scopeless type
      void[4]
    }
    unknown ret[51151] "dead at end of block" "insert auto destroy"
    unknown call_tmp[608943] "expr temp" "maybe param" "maybe type" "temp"
    (608946 'move' call_tmp[608943](372552 call T _mt[243] this[51710]))
    (540730 'default init var' ret[51151] call_tmp[608943])
    (51154 'end of statement')
    unknown v[51156] "dead at end of block" "insert auto destroy"
    (540732 'init var' v[51156] value[51077])
    (51159 'end of statement')
    unknown call_tmp[608950] "expr temp" "maybe param" "maybe type" "temp"
    (608953 'move' call_tmp[608950](51165 call(372558 call (partial) _localeid _mt[243] this[51710])))
    unknown call_tmp[608957] "expr temp" "maybe param" "maybe type" "temp"
    (608960 'move' call_tmp[608957](51168 call(372562 call (partial) _addr _mt[243] this[51710])))
    unknown call_tmp[608962] "expr temp" "maybe param" "maybe type" "temp"
    (608965 'move' call_tmp[608962](51173 call c_memory_order order[51087]))
    (51174 call atomic_fetch_and v[51156] call_tmp[608950] call_tmp[608957] ret[51151] call_tmp[608962])
    (474539 'end of statement' v[51156] ret[51151])
    unknown call_tmp[608969] "expr temp" "maybe param" "maybe type" "temp"
    (608972 'move' call_tmp[608969](506737 call T _mt[243] this[51710]))
    (506741 'move' ret[506732](506740 'coerce' ret[51151] call_tmp[608969]))
    gotoReturn _end_fetchAnd[506730] _end_fetchAnd[506730]
    (474542 'end of statement' ret[51151])
    label _end_fetchAnd[506730]
    (506734 return ret[506732])
  }
  { scopeless type
    (372525 call T _mt[243] this[51710])
  }
  function RAtomicT[51636](?).and[51188](arg _mt[51716]:_MT[238], arg this[51714]:RAtomicT[51636](?), arg value[51185] :
  (372570 call T _mt[243] this[51714]), param arg order[51195]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506753] "RVV" "temp"
    unknown call_tmp[608980] "expr temp" "maybe param" "maybe type" "temp"
    (608983 'move' call_tmp[608980](372576 call T _mt[243] this[51714]))
    unknown call_tmp[608985] "expr temp" "maybe param" "maybe type" "temp"
    (608988 'move' call_tmp[608985](51203 call isIntegral call_tmp[608980]))
    unknown call_tmp[608990] "expr temp" "maybe param" "maybe type" "temp"
    (608993 'move' call_tmp[608990](51204 call ! call_tmp[608985]))
    unknown call_tmp[608995] "expr temp" "maybe param" "maybe type" "temp"
    (608998 'move' call_tmp[608995](51211 call _cond_test call_tmp[608990]))
    if call_tmp[608995]
    {
      (51209 call compilerError "and is only defined for integer atomic types")
    }
    function atomic_and[51244](ref arg op[51241] :
    (372586 call T _mt[243] this[51714]), arg l[51250] :
    (51249 call int(64)[13] 32), arg obj[51254]:c_void_ptr[149], arg order[51258]:memory_order[186653], arg _chpl_cname[51266]:string[26] =
    unknown call_tmp[609004] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506747] "RVV" "temp"
      (506749 return ret[506747])
    }
    { scopeless type
      void[4]
    }
    unknown v[51271] "dead at end of block" "insert auto destroy"
    (540734 'init var' v[51271] value[51185])
    (51274 'end of statement')
    unknown call_tmp[609011] "expr temp" "maybe param" "maybe type" "temp"
    (609014 'move' call_tmp[609011](51280 call(372594 call (partial) _localeid _mt[243] this[51714])))
    unknown call_tmp[609018] "expr temp" "maybe param" "maybe type" "temp"
    (609021 'move' call_tmp[609018](51283 call(372598 call (partial) _addr _mt[243] this[51714])))
    unknown call_tmp[609023] "expr temp" "maybe param" "maybe type" "temp"
    (609026 'move' call_tmp[609023](51287 call c_memory_order order[51195]))
    (51288 call atomic_and v[51271] call_tmp[609011] call_tmp[609018] call_tmp[609023])
    (474545 'end of statement' v[51271])
    (506755 return ret[506753])
  }
  { scopeless type
    void[4]
  }
  function RAtomicT[51636](?).fetchXor[51299](arg _mt[51720]:_MT[238], arg this[51718]:RAtomicT[51636](?), arg value[51296] :
  (372604 call T _mt[243] this[51718]), param arg order[51306]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506765] "RVV" "temp"
    unknown call_tmp[609032] "expr temp" "maybe param" "maybe type" "temp"
    (609035 'move' call_tmp[609032](372615 call T _mt[243] this[51718]))
    unknown call_tmp[609037] "expr temp" "maybe param" "maybe type" "temp"
    (609040 'move' call_tmp[609037](51314 call isIntegral call_tmp[609032]))
    unknown call_tmp[609042] "expr temp" "maybe param" "maybe type" "temp"
    (609045 'move' call_tmp[609042](51315 call ! call_tmp[609037]))
    unknown call_tmp[609047] "expr temp" "maybe param" "maybe type" "temp"
    (609050 'move' call_tmp[609047](51322 call _cond_test call_tmp[609042]))
    if call_tmp[609047]
    {
      (51320 call compilerError "fetchXor is only defined for integer atomic types")
    }
    function atomic_fetch_xor[51339](ref arg op[51336] :
    (372625 call T _mt[243] this[51718]), arg l[51345] :
    (51344 call int(64)[13] 32), arg obj[51349]:c_void_ptr[149], ref arg result[51353] :
    (372631 call T _mt[243] this[51718]), arg order[51357]:memory_order[186653], arg _chpl_cname[51365]:string[26] =
    unknown call_tmp[609058] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506759] "RVV" "temp"
      (506761 return ret[506759])
    }
    { scopeless type
      void[4]
    }
    unknown ret[51370] "dead at end of block" "insert auto destroy"
    unknown call_tmp[609065] "expr temp" "maybe param" "maybe type" "temp"
    (609068 'move' call_tmp[609065](372637 call T _mt[243] this[51718]))
    (540736 'default init var' ret[51370] call_tmp[609065])
    (51373 'end of statement')
    unknown v[51375] "dead at end of block" "insert auto destroy"
    (540738 'init var' v[51375] value[51296])
    (51378 'end of statement')
    unknown call_tmp[609072] "expr temp" "maybe param" "maybe type" "temp"
    (609075 'move' call_tmp[609072](51384 call(372643 call (partial) _localeid _mt[243] this[51718])))
    unknown call_tmp[609079] "expr temp" "maybe param" "maybe type" "temp"
    (609082 'move' call_tmp[609079](51387 call(372647 call (partial) _addr _mt[243] this[51718])))
    unknown call_tmp[609084] "expr temp" "maybe param" "maybe type" "temp"
    (609087 'move' call_tmp[609084](51392 call c_memory_order order[51306]))
    (51393 call atomic_fetch_xor v[51375] call_tmp[609072] call_tmp[609079] ret[51370] call_tmp[609084])
    (474548 'end of statement' v[51375] ret[51370])
    unknown call_tmp[609091] "expr temp" "maybe param" "maybe type" "temp"
    (609094 'move' call_tmp[609091](506770 call T _mt[243] this[51718]))
    (506774 'move' ret[506765](506773 'coerce' ret[51370] call_tmp[609091]))
    gotoReturn _end_fetchXor[506763] _end_fetchXor[506763]
    (474551 'end of statement' ret[51370])
    label _end_fetchXor[506763]
    (506767 return ret[506765])
  }
  { scopeless type
    (372610 call T _mt[243] this[51718])
  }
  function RAtomicT[51636](?).xor[51407](arg _mt[51724]:_MT[238], arg this[51722]:RAtomicT[51636](?), arg value[51404] :
  (372655 call T _mt[243] this[51722]), param arg order[51414]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506786] "RVV" "temp"
    unknown call_tmp[609102] "expr temp" "maybe param" "maybe type" "temp"
    (609105 'move' call_tmp[609102](372661 call T _mt[243] this[51722]))
    unknown call_tmp[609107] "expr temp" "maybe param" "maybe type" "temp"
    (609110 'move' call_tmp[609107](51422 call isIntegral call_tmp[609102]))
    unknown call_tmp[609112] "expr temp" "maybe param" "maybe type" "temp"
    (609115 'move' call_tmp[609112](51423 call ! call_tmp[609107]))
    unknown call_tmp[609117] "expr temp" "maybe param" "maybe type" "temp"
    (609120 'move' call_tmp[609117](51430 call _cond_test call_tmp[609112]))
    if call_tmp[609117]
    {
      (51428 call compilerError "xor is only defined for integer atomic types")
    }
    function atomic_xor[51463](ref arg op[51460] :
    (372671 call T _mt[243] this[51722]), arg l[51469] :
    (51468 call int(64)[13] 32), arg obj[51473]:c_void_ptr[149], arg order[51477]:memory_order[186653], arg _chpl_cname[51485]:string[26] =
    unknown call_tmp[609126] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506780] "RVV" "temp"
      (506782 return ret[506780])
    }
    { scopeless type
      void[4]
    }
    unknown v[51490] "dead at end of block" "insert auto destroy"
    (540740 'init var' v[51490] value[51404])
    (51493 'end of statement')
    unknown call_tmp[609133] "expr temp" "maybe param" "maybe type" "temp"
    (609136 'move' call_tmp[609133](51499 call(372679 call (partial) _localeid _mt[243] this[51722])))
    unknown call_tmp[609140] "expr temp" "maybe param" "maybe type" "temp"
    (609143 'move' call_tmp[609140](51502 call(372683 call (partial) _addr _mt[243] this[51722])))
    unknown call_tmp[609145] "expr temp" "maybe param" "maybe type" "temp"
    (609148 'move' call_tmp[609145](51506 call c_memory_order order[51414]))
    (51507 call atomic_xor v[51490] call_tmp[609133] call_tmp[609140] call_tmp[609145])
    (474554 'end of statement' v[51490])
    (506788 return ret[506786])
  }
  { scopeless type
    void[4]
  }
  function RAtomicT[51636](?).waitFor[51518](arg _mt[51728]:_MT[238], const arg this[51726]:RAtomicT[51636](?), arg value[51515] :
  (372689 call T _mt[243] this[51726]), param arg order[51525]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506792] "RVV" "temp"
    const tmp[51607] "const" "temp"
    unknown call_tmp[609152] "expr temp" "maybe param" "maybe type" "temp"
    (609155 'move' call_tmp[609152](51604 '_wide_get_locale' this[51726]))
    (51609 'move' tmp[51607](51605 'deref' call_tmp[609152]))
    (934142 call on_fn[934138] tmp[51607])
    function on_fn[934138](const in arg dummy_locale_arg[934140]:chpl_localeID_t[209352]) : void[4] "on"
    {
      {
        {
          unknown tmp[51550] "temp"
          unknown call_tmp[609159] "expr temp" "maybe param" "maybe type" "temp"
          (609162 'move' call_tmp[609159](51585 call(51582 call (partial) read _mt[243] this[51726])(order = relaxed[187010])))
          unknown call_tmp[609164] "expr temp" "maybe param" "maybe type" "temp"
          (609167 'move' call_tmp[609164](51580 call != call_tmp[609159] value[51515]))
          (51592 'move' tmp[51550](51578 call _cond_test call_tmp[609164]))
          WhileDo[51555]
          {
            {
              (51547 call chpl_task_yield)
            }
            label _continueLabel[51553]
            unknown call_tmp[609171] "expr temp" "maybe param" "maybe type" "temp"
            (609174 'move' call_tmp[609171](51566 call(51563 call (partial) read _mt[243] this[51726])(order = relaxed[187010])))
            unknown call_tmp[609176] "expr temp" "maybe param" "maybe type" "temp"
            (609179 'move' call_tmp[609176](51561 call != call_tmp[609171] value[51515]))
            (51573 'move' tmp[51550](51559 call _cond_test call_tmp[609176]))
            tmp[51550]
          }
          label _breakLabel[51554]
        }
        unknown call_tmp[609181] "expr temp" "maybe param" "maybe type" "temp"
        (609184 'move' call_tmp[609181](51600 call c_memory_order order[51525]))
        (51602 call chpl_atomic_thread_fence call_tmp[609181])
      }
      (934145 return _void[55])
    }
    {
    }
    (506794 return ret[506792])
  }
  { scopeless type
    void[4]
  }
  function RAtomicT[51636](?).writeThis[51623](arg _mt[51732]:_MT[238], const arg this[51730]:RAtomicT[51636](?), arg x[51621]:_any[178](?)) : _unknown[51] throws "atomic type" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[609188] "expr temp" "maybe param" "maybe type" "temp"
    (609191 'move' call_tmp[609188](51628 call(372699 call (partial) read _mt[243] this[51730])))
    (51629 call <~> x[51621] call_tmp[609188])
    (506796 return _void[55])
  }
  function RAtomicT[51636](?).T[764252](arg _mt[764254]:_MT[238], arg this[764256]:RAtomicT[51636](?)) type : _unknown[51] "atomic type" "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[764275] "RVV" "temp" "type variable"
    unknown call_tmp[764289] "expr temp" "maybe param" "maybe type" "temp"
    (764292 'move' call_tmp[764289](764261 'is bound' this[764256] c"T"))
    if call_tmp[764289]
    {
      unknown call_tmp[764294] "expr temp" "maybe param" "maybe type" "temp"
      (764297 'move' call_tmp[764294](764260 '.v' this[764256] c"T"))
      (764280 'move' ret[764275](764279 'deref' call_tmp[764294]))
      gotoReturn _end_T[764273] _end_T[764273]
    }
    {
      (764285 'move' ret[764275](764284 'deref' _uninstantiated[258]))
      gotoReturn _end_T[764273] _end_T[764273]
    }
    label _end_T[764273]
    (764277 return ret[764275])
  }
  function RAtomicT[51636](?).T[764299](arg _mt[764301]:_MT[238], arg this[764303]:RAtomicT[51636](?)) type : _unknown[51] "atomic type" "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[764322] "RVV" "temp" "type variable"
    unknown call_tmp[764336] "expr temp" "maybe param" "maybe type" "temp"
    (764339 'move' call_tmp[764336](764308 'is bound' this[764303] c"T"))
    if call_tmp[764336]
    {
      unknown call_tmp[764341] "expr temp" "maybe param" "maybe type" "temp"
      (764344 'move' call_tmp[764341](764307 '.v' this[764303] c"T"))
      (764327 'move' ret[764322](764326 'deref' call_tmp[764341]))
      gotoReturn _end_T[764320] _end_T[764320]
    }
    {
      (764332 'move' ret[764322](764331 'deref' _uninstantiated[258]))
      gotoReturn _end_T[764320] _end_T[764320]
    }
    label _end_T[764320]
    (764324 return ret[764322])
  }
  function RAtomicT[51636](?)._v[764346](arg _mt[764348]:_MT[238], ref arg this[764350]:RAtomicT[51636](?)) ref : _unknown[51] "atomic type" "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[764360] "RVV" "temp"
    unknown call_tmp[764367] "expr temp" "maybe param" "maybe type" "temp"
    (764370 'move' call_tmp[764367](764354 '.' this[764350] c"_v"))
    (764365 'move' ret[764360](764364 'addr of' call_tmp[764367]))
    (764362 return ret[764360])
  }
  function RAtomicT[51636](?).init[764372](arg _mt[764374]:_MT[238], ref arg this[764375]:RAtomicT[51636](?), arg T[764378]:_any[178](?), in arg _v[764387] :
  T[764378] =
  _typeDefaultT[250]) : void[4] "compiler generated" "last resort" "method" "primary method" "suppress lvalue error"
  {
    (764401 'init field' this[764375] c"T" T[764378])
    (764404 'init field' this[764375] c"_v" _v[764387])
    (764407 'end of statement')
    (764408 return _void[55])
  }
  function RAtomicT[51636](?).deinit[764410](arg _mt[764412]:_MT[238], arg this[764414]:RAtomicT[51636](?)) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (764422 return _void[55])
  }
  function chpl_fields_are_comparable[764436](arg _arg1[764438]:RAtomicT[51636](?), arg _arg2[764439]:RAtomicT[51636](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[764457]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[764464] "expr temp" "maybe param" "maybe type" "temp"
    (764467 'move' call_tmp[764464](764442 call _v _mt[243] _arg1[764438]))
    unknown call_tmp[764469] "expr temp" "maybe param" "maybe type" "temp"
    (764472 'move' call_tmp[764469](764446 call _v _mt[243] _arg2[764439]))
    unknown call_tmp[764474] "expr temp" "maybe param" "maybe type" "temp"
    (764477 'move' call_tmp[764474](764450 'call resolves' c"==" call_tmp[764464] call_tmp[764469]))
    (764462 'move' ret[764457](764461 'deref' call_tmp[764474]))
    (764459 return ret[764457])
  }
  function ==[764424](arg _arg1[764426]:RAtomicT[51636](?), arg _arg2[764427]:RAtomicT[51636](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[764506]:bool[10] "RVV" "temp"
    unknown call_tmp[764518] "expr temp" "maybe param" "maybe type" "temp"
    (764521 'move' call_tmp[764518](764485 call _v _mt[243] _arg1[764426]))
    unknown call_tmp[764523] "expr temp" "maybe param" "maybe type" "temp"
    (764526 'move' call_tmp[764523](764489 call _v _mt[243] _arg2[764427]))
    unknown call_tmp[764528] "expr temp" "maybe param" "maybe type" "temp"
    (764531 'move' call_tmp[764528](764493 call != call_tmp[764518] call_tmp[764523]))
    if call_tmp[764528]
    {
      (764511 'move' ret[764506](764510 'deref' 0))
      gotoReturn _end_==[764504] _end_==[764504]
    }
    (764516 'move' ret[764506](764515 'deref' 1))
    label _end_==[764504]
    (764508 return ret[764506])
  }
  where {
    unknown call_tmp[764533] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (764536 'move' call_tmp[764533](764430 'typeof' _arg1[764426]))
    unknown call_tmp[764538] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (764541 'move' call_tmp[764538](764432 'typeof' _arg2[764427]))
    unknown call_tmp[764543] "expr temp" "maybe param" "maybe type" "temp"
    (764546 'move' call_tmp[764543](764434 call == call_tmp[764533] call_tmp[764538]))
    unknown call_tmp[764548] "expr temp" "maybe param" "maybe type" "temp"
    (764551 'move' call_tmp[764548](764479 call chpl_fields_are_comparable[764436] _arg1[764426] _arg2[764427]))
    (764483 '&' call_tmp[764543] call_tmp[764548])
  }
  function chpl_fields_are_comparable[764565](arg _arg1[764567]:RAtomicT[51636](?), arg _arg2[764568]:RAtomicT[51636](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[764586]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[764593] "expr temp" "maybe param" "maybe type" "temp"
    (764596 'move' call_tmp[764593](764571 call _v _mt[243] _arg1[764567]))
    unknown call_tmp[764598] "expr temp" "maybe param" "maybe type" "temp"
    (764601 'move' call_tmp[764598](764575 call _v _mt[243] _arg2[764568]))
    unknown call_tmp[764603] "expr temp" "maybe param" "maybe type" "temp"
    (764606 'move' call_tmp[764603](764579 'call resolves' c"!=" call_tmp[764593] call_tmp[764598]))
    (764591 'move' ret[764586](764590 'deref' call_tmp[764603]))
    (764588 return ret[764586])
  }
  function !=[764553](arg _arg1[764555]:RAtomicT[51636](?), arg _arg2[764556]:RAtomicT[51636](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[764635]:bool[10] "RVV" "temp"
    unknown call_tmp[764647] "expr temp" "maybe param" "maybe type" "temp"
    (764650 'move' call_tmp[764647](764614 call _v _mt[243] _arg1[764555]))
    unknown call_tmp[764652] "expr temp" "maybe param" "maybe type" "temp"
    (764655 'move' call_tmp[764652](764618 call _v _mt[243] _arg2[764556]))
    unknown call_tmp[764657] "expr temp" "maybe param" "maybe type" "temp"
    (764660 'move' call_tmp[764657](764622 call != call_tmp[764647] call_tmp[764652]))
    if call_tmp[764657]
    {
      (764640 'move' ret[764635](764639 'deref' 1))
      gotoReturn _end_!=[764633] _end_!=[764633]
    }
    (764645 'move' ret[764635](764644 'deref' 0))
    label _end_!=[764633]
    (764637 return ret[764635])
  }
  where {
    unknown call_tmp[764662] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (764665 'move' call_tmp[764662](764559 'typeof' _arg1[764555]))
    unknown call_tmp[764667] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (764670 'move' call_tmp[764667](764561 'typeof' _arg2[764556]))
    unknown call_tmp[764672] "expr temp" "maybe param" "maybe type" "temp"
    (764675 'move' call_tmp[764672](764563 call == call_tmp[764662] call_tmp[764667]))
    unknown call_tmp[764677] "expr temp" "maybe param" "maybe type" "temp"
    (764680 'move' call_tmp[764677](764608 call chpl_fields_are_comparable[764565] _arg1[764555] _arg2[764556]))
    (764612 '&' call_tmp[764672] call_tmp[764677])
  }
  function chpl_fields_are_comparable[764694](arg _arg1[764696]:RAtomicT[51636](?), arg _arg2[764697]:RAtomicT[51636](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[764715]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[764722] "expr temp" "maybe param" "maybe type" "temp"
    (764725 'move' call_tmp[764722](764700 call _v _mt[243] _arg1[764696]))
    unknown call_tmp[764727] "expr temp" "maybe param" "maybe type" "temp"
    (764730 'move' call_tmp[764727](764704 call _v _mt[243] _arg2[764697]))
    unknown call_tmp[764732] "expr temp" "maybe param" "maybe type" "temp"
    (764735 'move' call_tmp[764732](764708 'call resolves' c"<" call_tmp[764722] call_tmp[764727]))
    (764720 'move' ret[764715](764719 'deref' call_tmp[764732]))
    (764717 return ret[764715])
  }
  function <[764682](arg _arg1[764684]:RAtomicT[51636](?), arg _arg2[764685]:RAtomicT[51636](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[764779]:bool[10] "RVV" "temp"
    unknown call_tmp[764796] "expr temp" "maybe param" "maybe type" "temp"
    (764799 'move' call_tmp[764796](764743 call _v _mt[243] _arg1[764684]))
    unknown call_tmp[764801] "expr temp" "maybe param" "maybe type" "temp"
    (764804 'move' call_tmp[764801](764747 call _v _mt[243] _arg2[764685]))
    unknown call_tmp[764806] "expr temp" "maybe param" "maybe type" "temp"
    (764809 'move' call_tmp[764806](764751 call < call_tmp[764796] call_tmp[764801]))
    if call_tmp[764806]
    {
      (764784 'move' ret[764779](764783 'deref' 1))
      gotoReturn _end_<[764777] _end_<[764777]
    }
    unknown call_tmp[764811] "expr temp" "maybe param" "maybe type" "temp"
    (764814 'move' call_tmp[764811](764757 call _v _mt[243] _arg1[764684]))
    unknown call_tmp[764816] "expr temp" "maybe param" "maybe type" "temp"
    (764819 'move' call_tmp[764816](764761 call _v _mt[243] _arg2[764685]))
    unknown call_tmp[764821] "expr temp" "maybe param" "maybe type" "temp"
    (764824 'move' call_tmp[764821](764765 call > call_tmp[764811] call_tmp[764816]))
    if call_tmp[764821]
    {
      (764789 'move' ret[764779](764788 'deref' 0))
      gotoReturn _end_<[764777] _end_<[764777]
    }
    (764794 'move' ret[764779](764793 'deref' 0))
    label _end_<[764777]
    (764781 return ret[764779])
  }
  where {
    unknown call_tmp[764826] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (764829 'move' call_tmp[764826](764688 'typeof' _arg1[764684]))
    unknown call_tmp[764831] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (764834 'move' call_tmp[764831](764690 'typeof' _arg2[764685]))
    unknown call_tmp[764836] "expr temp" "maybe param" "maybe type" "temp"
    (764839 'move' call_tmp[764836](764692 call == call_tmp[764826] call_tmp[764831]))
    unknown call_tmp[764841] "expr temp" "maybe param" "maybe type" "temp"
    (764844 'move' call_tmp[764841](764737 call chpl_fields_are_comparable[764694] _arg1[764684] _arg2[764685]))
    (764741 '&' call_tmp[764836] call_tmp[764841])
  }
  function chpl_fields_are_comparable[764858](arg _arg1[764860]:RAtomicT[51636](?), arg _arg2[764861]:RAtomicT[51636](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[764879]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[764886] "expr temp" "maybe param" "maybe type" "temp"
    (764889 'move' call_tmp[764886](764864 call _v _mt[243] _arg1[764860]))
    unknown call_tmp[764891] "expr temp" "maybe param" "maybe type" "temp"
    (764894 'move' call_tmp[764891](764868 call _v _mt[243] _arg2[764861]))
    unknown call_tmp[764896] "expr temp" "maybe param" "maybe type" "temp"
    (764899 'move' call_tmp[764896](764872 'call resolves' c"<=" call_tmp[764886] call_tmp[764891]))
    (764884 'move' ret[764879](764883 'deref' call_tmp[764896]))
    (764881 return ret[764879])
  }
  function <=[764846](arg _arg1[764848]:RAtomicT[51636](?), arg _arg2[764849]:RAtomicT[51636](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[764943]:bool[10] "RVV" "temp"
    unknown call_tmp[764960] "expr temp" "maybe param" "maybe type" "temp"
    (764963 'move' call_tmp[764960](764907 call _v _mt[243] _arg1[764848]))
    unknown call_tmp[764965] "expr temp" "maybe param" "maybe type" "temp"
    (764968 'move' call_tmp[764965](764911 call _v _mt[243] _arg2[764849]))
    unknown call_tmp[764970] "expr temp" "maybe param" "maybe type" "temp"
    (764973 'move' call_tmp[764970](764915 call < call_tmp[764960] call_tmp[764965]))
    if call_tmp[764970]
    {
      (764948 'move' ret[764943](764947 'deref' 1))
      gotoReturn _end_<=[764941] _end_<=[764941]
    }
    unknown call_tmp[764975] "expr temp" "maybe param" "maybe type" "temp"
    (764978 'move' call_tmp[764975](764921 call _v _mt[243] _arg1[764848]))
    unknown call_tmp[764980] "expr temp" "maybe param" "maybe type" "temp"
    (764983 'move' call_tmp[764980](764925 call _v _mt[243] _arg2[764849]))
    unknown call_tmp[764985] "expr temp" "maybe param" "maybe type" "temp"
    (764988 'move' call_tmp[764985](764929 call > call_tmp[764975] call_tmp[764980]))
    if call_tmp[764985]
    {
      (764953 'move' ret[764943](764952 'deref' 0))
      gotoReturn _end_<=[764941] _end_<=[764941]
    }
    (764958 'move' ret[764943](764957 'deref' 1))
    label _end_<=[764941]
    (764945 return ret[764943])
  }
  where {
    unknown call_tmp[764990] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (764993 'move' call_tmp[764990](764852 'typeof' _arg1[764848]))
    unknown call_tmp[764995] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (764998 'move' call_tmp[764995](764854 'typeof' _arg2[764849]))
    unknown call_tmp[765000] "expr temp" "maybe param" "maybe type" "temp"
    (765003 'move' call_tmp[765000](764856 call == call_tmp[764990] call_tmp[764995]))
    unknown call_tmp[765005] "expr temp" "maybe param" "maybe type" "temp"
    (765008 'move' call_tmp[765005](764901 call chpl_fields_are_comparable[764858] _arg1[764848] _arg2[764849]))
    (764905 '&' call_tmp[765000] call_tmp[765005])
  }
  function chpl_fields_are_comparable[765022](arg _arg1[765024]:RAtomicT[51636](?), arg _arg2[765025]:RAtomicT[51636](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[765043]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[765050] "expr temp" "maybe param" "maybe type" "temp"
    (765053 'move' call_tmp[765050](765028 call _v _mt[243] _arg1[765024]))
    unknown call_tmp[765055] "expr temp" "maybe param" "maybe type" "temp"
    (765058 'move' call_tmp[765055](765032 call _v _mt[243] _arg2[765025]))
    unknown call_tmp[765060] "expr temp" "maybe param" "maybe type" "temp"
    (765063 'move' call_tmp[765060](765036 'call resolves' c">" call_tmp[765050] call_tmp[765055]))
    (765048 'move' ret[765043](765047 'deref' call_tmp[765060]))
    (765045 return ret[765043])
  }
  function >[765010](arg _arg1[765012]:RAtomicT[51636](?), arg _arg2[765013]:RAtomicT[51636](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[765107]:bool[10] "RVV" "temp"
    unknown call_tmp[765124] "expr temp" "maybe param" "maybe type" "temp"
    (765127 'move' call_tmp[765124](765071 call _v _mt[243] _arg1[765012]))
    unknown call_tmp[765129] "expr temp" "maybe param" "maybe type" "temp"
    (765132 'move' call_tmp[765129](765075 call _v _mt[243] _arg2[765013]))
    unknown call_tmp[765134] "expr temp" "maybe param" "maybe type" "temp"
    (765137 'move' call_tmp[765134](765079 call > call_tmp[765124] call_tmp[765129]))
    if call_tmp[765134]
    {
      (765112 'move' ret[765107](765111 'deref' 1))
      gotoReturn _end_>[765105] _end_>[765105]
    }
    unknown call_tmp[765139] "expr temp" "maybe param" "maybe type" "temp"
    (765142 'move' call_tmp[765139](765085 call _v _mt[243] _arg1[765012]))
    unknown call_tmp[765144] "expr temp" "maybe param" "maybe type" "temp"
    (765147 'move' call_tmp[765144](765089 call _v _mt[243] _arg2[765013]))
    unknown call_tmp[765149] "expr temp" "maybe param" "maybe type" "temp"
    (765152 'move' call_tmp[765149](765093 call < call_tmp[765139] call_tmp[765144]))
    if call_tmp[765149]
    {
      (765117 'move' ret[765107](765116 'deref' 0))
      gotoReturn _end_>[765105] _end_>[765105]
    }
    (765122 'move' ret[765107](765121 'deref' 0))
    label _end_>[765105]
    (765109 return ret[765107])
  }
  where {
    unknown call_tmp[765154] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (765157 'move' call_tmp[765154](765016 'typeof' _arg1[765012]))
    unknown call_tmp[765159] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (765162 'move' call_tmp[765159](765018 'typeof' _arg2[765013]))
    unknown call_tmp[765164] "expr temp" "maybe param" "maybe type" "temp"
    (765167 'move' call_tmp[765164](765020 call == call_tmp[765154] call_tmp[765159]))
    unknown call_tmp[765169] "expr temp" "maybe param" "maybe type" "temp"
    (765172 'move' call_tmp[765169](765065 call chpl_fields_are_comparable[765022] _arg1[765012] _arg2[765013]))
    (765069 '&' call_tmp[765164] call_tmp[765169])
  }
  function chpl_fields_are_comparable[765186](arg _arg1[765188]:RAtomicT[51636](?), arg _arg2[765189]:RAtomicT[51636](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[765207]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[765214] "expr temp" "maybe param" "maybe type" "temp"
    (765217 'move' call_tmp[765214](765192 call _v _mt[243] _arg1[765188]))
    unknown call_tmp[765219] "expr temp" "maybe param" "maybe type" "temp"
    (765222 'move' call_tmp[765219](765196 call _v _mt[243] _arg2[765189]))
    unknown call_tmp[765224] "expr temp" "maybe param" "maybe type" "temp"
    (765227 'move' call_tmp[765224](765200 'call resolves' c">=" call_tmp[765214] call_tmp[765219]))
    (765212 'move' ret[765207](765211 'deref' call_tmp[765224]))
    (765209 return ret[765207])
  }
  function >=[765174](arg _arg1[765176]:RAtomicT[51636](?), arg _arg2[765177]:RAtomicT[51636](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[765271]:bool[10] "RVV" "temp"
    unknown call_tmp[765288] "expr temp" "maybe param" "maybe type" "temp"
    (765291 'move' call_tmp[765288](765235 call _v _mt[243] _arg1[765176]))
    unknown call_tmp[765293] "expr temp" "maybe param" "maybe type" "temp"
    (765296 'move' call_tmp[765293](765239 call _v _mt[243] _arg2[765177]))
    unknown call_tmp[765298] "expr temp" "maybe param" "maybe type" "temp"
    (765301 'move' call_tmp[765298](765243 call > call_tmp[765288] call_tmp[765293]))
    if call_tmp[765298]
    {
      (765276 'move' ret[765271](765275 'deref' 1))
      gotoReturn _end_>=[765269] _end_>=[765269]
    }
    unknown call_tmp[765303] "expr temp" "maybe param" "maybe type" "temp"
    (765306 'move' call_tmp[765303](765249 call _v _mt[243] _arg1[765176]))
    unknown call_tmp[765308] "expr temp" "maybe param" "maybe type" "temp"
    (765311 'move' call_tmp[765308](765253 call _v _mt[243] _arg2[765177]))
    unknown call_tmp[765313] "expr temp" "maybe param" "maybe type" "temp"
    (765316 'move' call_tmp[765313](765257 call < call_tmp[765303] call_tmp[765308]))
    if call_tmp[765313]
    {
      (765281 'move' ret[765271](765280 'deref' 0))
      gotoReturn _end_>=[765269] _end_>=[765269]
    }
    (765286 'move' ret[765271](765285 'deref' 1))
    label _end_>=[765269]
    (765273 return ret[765271])
  }
  where {
    unknown call_tmp[765318] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (765321 'move' call_tmp[765318](765180 'typeof' _arg1[765176]))
    unknown call_tmp[765323] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (765326 'move' call_tmp[765323](765182 'typeof' _arg2[765177]))
    unknown call_tmp[765328] "expr temp" "maybe param" "maybe type" "temp"
    (765331 'move' call_tmp[765328](765184 call == call_tmp[765318] call_tmp[765323]))
    unknown call_tmp[765333] "expr temp" "maybe param" "maybe type" "temp"
    (765336 'move' call_tmp[765333](765229 call chpl_fields_are_comparable[765186] _arg1[765176] _arg2[765177]))
    (765233 '&' call_tmp[765328] call_tmp[765333])
  }
  function chpl__defaultHash[765338](arg r[765340]:RAtomicT[51636](?)) : _unknown[51] "compiler generated" "last resort"
  {
    unknown ret[765362] "RVV" "temp"
    unknown call_tmp[765369] "expr temp" "maybe param" "maybe type" "temp"
    (765372 'move' call_tmp[765369](765348 call _v _mt[243] r[765340]))
    unknown call_tmp[765374] "expr temp" "maybe param" "maybe type" "temp"
    (765377 'move' call_tmp[765374](765352 call chpl__defaultHash call_tmp[765369]))
    unknown call_tmp[765379] "expr temp" "maybe param" "maybe type" "temp"
    (765382 'move' call_tmp[765379](765342 call T _mt[243] r[765340]))
    unknown call_tmp[765384] "expr temp" "maybe param" "maybe type" "temp"
    (765387 'move' call_tmp[765384](765346 call chpl__defaultHash call_tmp[765379]))
    unknown call_tmp[765389] "expr temp" "maybe param" "maybe type" "temp"
    (765392 'move' call_tmp[765389](765354 call chpl__defaultHashCombine call_tmp[765374] call_tmp[765384] 2))
    (765367 'move' ret[765362](765366 'deref' call_tmp[765389]))
    (765364 return ret[765362])
  }
  type RAtomicT[51636](?) unknown T[49744] "type variable" unknown _v[49748] T[49744]
  function =[51741](ref arg a[51738]:RAtomicBool[49676], const arg b[51744]:RAtomicBool[49676]) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    unknown call_tmp[609197] "expr temp" "maybe param" "maybe type" "temp"
    (609200 'move' call_tmp[609197](51756 call(51752 call (partial) read _mt[243] b[51744])))
    (51758 call(51748 call (partial) write _mt[243] a[51738]) call_tmp[609197])
    (506798 return _void[55])
  }
  function =[51769](ref arg a[51766]:RAtomicBool[49676], arg b[51771]:_any[178](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (51776 call compilerError "Cannot directly assign atomic variables")
    (506800 return _void[55])
  }
  function =[51787](ref arg a[51784]:RAtomicT[51636](?), const arg b[51790]:RAtomicT[51636](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    unknown call_tmp[609206] "expr temp" "maybe param" "maybe type" "temp"
    (609209 'move' call_tmp[609206](51802 call(51798 call (partial) read _mt[243] b[51790])))
    (51804 call(51794 call (partial) write _mt[243] a[51784]) call_tmp[609206])
    (506802 return _void[55])
  }
  function =[51815](ref arg a[51812]:RAtomicT[51636](?), arg b[51817]:_any[178](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (51822 call compilerError "Cannot directly assign atomic variables")
    (506804 return _void[55])
  }
  function +[51833](arg a[51830]:RAtomicT[51636](?), arg b[51835]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[506808] "RVV" "temp"
    (51840 call compilerError "Cannot directly add atomic variables")
    (474563 'end of statement')
    (506813 'move' ret[506808](506812 'deref' a[51830]))
    (506810 return ret[506808])
  }
  function -[51854](arg a[51851]:RAtomicT[51636](?), arg b[51856]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[506817] "RVV" "temp"
    (51861 call compilerError "Cannot directly subtract atomic variables")
    (474565 'end of statement')
    (506822 'move' ret[506817](506821 'deref' a[51851]))
    (506819 return ret[506817])
  }
  function *[51875](arg a[51872]:RAtomicT[51636](?), arg b[51877]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[506826] "RVV" "temp"
    (51882 call compilerError "Cannot directly multiply atomic variables")
    (474567 'end of statement')
    (506831 'move' ret[506826](506830 'deref' a[51872]))
    (506828 return ret[506826])
  }
  function /[51896](arg a[51893]:RAtomicT[51636](?), arg b[51898]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[506835] "RVV" "temp"
    (51903 call compilerError "Cannot directly divide atomic variables")
    (474569 'end of statement')
    (506840 'move' ret[506835](506839 'deref' a[51893]))
    (506837 return ret[506835])
  }
  function %[51917](arg a[51914]:RAtomicT[51636](?), arg b[51919]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[506844] "RVV" "temp"
    (51924 call compilerError "Cannot directly divide atomic variables")
    (474571 'end of statement')
    (506849 'move' ret[506844](506848 'deref' a[51914]))
    (506846 return ret[506844])
  }
  (355078 'used modules list'(48468 'use' ChapelStandard[20267])(48472 'use' MemConsistency[186648]))
}