AST dump for NetworkAtomics after pass createTaskFunctions.
Module use list: ChapelStandard MemConsistency 

{
  function chpl__init_NetworkAtomics[415976]() : void[4] "insert line file info" "module init"
  {
    (506856 return _void[55])
  }
  function externFunc[48480](param arg s[48477]:string[26], arg T[48482]:_any[178](?)) param : _unknown[51] "private"
  {
    unknown ret[506301] "RVV" "param" "temp"
    unknown call_tmp[607799] "expr temp" "maybe param" "maybe type" "temp"
    (607802 'move' call_tmp[607799](48487 call isInt T[48482]))
    unknown call_tmp[607804] "expr temp" "maybe param" "maybe type" "temp"
    (607807 'move' call_tmp[607804](48538 call _cond_test call_tmp[607799]))
    if call_tmp[607804]
    {
      unknown call_tmp[607809] "expr temp" "maybe param" "maybe type" "temp"
      (607812 'move' call_tmp[607809](48506 call + "chpl_comm_atomic_" s[48477]))
      unknown call_tmp[607814] "expr temp" "maybe param" "maybe type" "temp"
      (607817 'move' call_tmp[607814](48525 call + call_tmp[607809] "_int"))
      unknown call_tmp[607819] "expr temp" "maybe param" "maybe type" "temp"
      (607822 'move' call_tmp[607819](48530 call numBits T[48482]))
      unknown call_tmp[607824] "expr temp" "maybe param" "maybe type" "temp"
      (607827 'move' call_tmp[607824](48532 call _cast string[26] call_tmp[607819]))
      unknown call_tmp[607829] "expr temp" "maybe param" "maybe type" "temp"
      (607832 'move' call_tmp[607829](48534 call + call_tmp[607814] call_tmp[607824]))
      (506306 'move' ret[506301](506305 'deref' call_tmp[607829]))
      gotoReturn _end_externFunc[506299] _end_externFunc[506299]
    }
    unknown call_tmp[607834] "expr temp" "maybe param" "maybe type" "temp"
    (607837 'move' call_tmp[607834](48547 call isUint T[48482]))
    unknown call_tmp[607839] "expr temp" "maybe param" "maybe type" "temp"
    (607842 'move' call_tmp[607839](48582 call _cond_test call_tmp[607834]))
    if call_tmp[607839]
    {
      unknown call_tmp[607844] "expr temp" "maybe param" "maybe type" "temp"
      (607847 'move' call_tmp[607844](48550 call + "chpl_comm_atomic_" s[48477]))
      unknown call_tmp[607849] "expr temp" "maybe param" "maybe type" "temp"
      (607852 'move' call_tmp[607849](48569 call + call_tmp[607844] "_uint"))
      unknown call_tmp[607854] "expr temp" "maybe param" "maybe type" "temp"
      (607857 'move' call_tmp[607854](48574 call numBits T[48482]))
      unknown call_tmp[607859] "expr temp" "maybe param" "maybe type" "temp"
      (607862 'move' call_tmp[607859](48576 call _cast string[26] call_tmp[607854]))
      unknown call_tmp[607864] "expr temp" "maybe param" "maybe type" "temp"
      (607867 'move' call_tmp[607864](48578 call + call_tmp[607849] call_tmp[607859]))
      (506311 'move' ret[506301](506310 'deref' call_tmp[607864]))
      gotoReturn _end_externFunc[506299] _end_externFunc[506299]
    }
    unknown call_tmp[607869] "expr temp" "maybe param" "maybe type" "temp"
    (607872 'move' call_tmp[607869](48590 call isReal T[48482]))
    unknown call_tmp[607874] "expr temp" "maybe param" "maybe type" "temp"
    (607877 'move' call_tmp[607874](48609 call _cond_test call_tmp[607869]))
    if call_tmp[607874]
    {
      unknown call_tmp[607879] "expr temp" "maybe param" "maybe type" "temp"
      (607882 'move' call_tmp[607879](48593 call + "chpl_comm_atomic_" s[48477]))
      unknown call_tmp[607884] "expr temp" "maybe param" "maybe type" "temp"
      (607887 'move' call_tmp[607884](48596 call + call_tmp[607879] "_real"))
      unknown call_tmp[607889] "expr temp" "maybe param" "maybe type" "temp"
      (607892 'move' call_tmp[607889](48601 call numBits T[48482]))
      unknown call_tmp[607894] "expr temp" "maybe param" "maybe type" "temp"
      (607897 'move' call_tmp[607894](48603 call _cast string[26] call_tmp[607889]))
      unknown call_tmp[607899] "expr temp" "maybe param" "maybe type" "temp"
      (607902 'move' call_tmp[607899](48605 call + call_tmp[607884] call_tmp[607894]))
      (506316 'move' ret[506301](506315 'deref' call_tmp[607899]))
      gotoReturn _end_externFunc[506299] _end_externFunc[506299]
    }
    label _end_externFunc[506299]
    (506303 return ret[506301])
  }
  function RAtomicBool[49676].init=[48631](arg _mt[49680]:_MT[238], ref arg this[49678]:RAtomicBool[49676], arg other[48628]:RAtomicBool[49676]) : void[4] "atomic type" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[607904] "expr temp" "maybe param" "maybe type" "temp"
    (607907 'move' call_tmp[607904](48648 call int(64)[13] 64))
    unknown call_tmp[607911] "expr temp" "maybe param" "maybe type" "temp"
    (607914 'move' call_tmp[607911](48644 call(48640 call (partial) read _mt[243] other[48628])))
    unknown call_tmp[607916] "maybe param" "maybe type" "temp"
    (607919 'move' call_tmp[607916](48649 call _cast call_tmp[607904] call_tmp[607911]))
    unknown call_tmp[607921] "maybe param" "maybe type" "temp"
    (607924 'move' call_tmp[607921](454699 call int(64)[13] 64))
    unknown tmp[454696] "temp"
    (454701 'init var' tmp[454696] call_tmp[607916] call_tmp[607921])
    (454703 'init field' this[49678] c"_v" tmp[454696])
    (474447 'end of statement')
    (506320 return _void[55])
  }
  function RAtomicBool[49676].init=[48663](arg _mt[49684]:_MT[238], ref arg this[49682]:RAtomicBool[49676], arg other[48660]:bool[10]) : void[4] "atomic type" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[607926] "expr temp" "maybe param" "maybe type" "temp"
    (607929 'move' call_tmp[607926](48673 call int(64)[13] 64))
    unknown call_tmp[607931] "maybe param" "maybe type" "temp"
    (607934 'move' call_tmp[607931](48674 call _cast call_tmp[607926] other[48660]))
    unknown call_tmp[607936] "maybe param" "maybe type" "temp"
    (607939 'move' call_tmp[607936](454710 call int(64)[13] 64))
    unknown tmp[454707] "temp"
    (454712 'init var' tmp[454707] call_tmp[607931] call_tmp[607936])
    (454714 'init field' this[49682] c"_v" tmp[454707])
    (474448 'end of statement')
    (506322 return _void[55])
  }
  function RAtomicBool[49676]._localeid[48684](arg _mt[49688]:_MT[238], arg this[49686]:RAtomicBool[49676]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506326] "RVV" "temp"
    unknown call_tmp[607941] "expr temp" "maybe param" "maybe type" "temp"
    (607944 'move' call_tmp[607941](48698 call int(64)[13] 32))
    unknown call_tmp[607948] "expr temp" "maybe param" "maybe type" "temp"
    (607951 'move' call_tmp[607948](371891 call _v _mt[243] this[49686]))
    unknown call_tmp[607953] "expr temp" "maybe param" "maybe type" "temp"
    (607956 'move' call_tmp[607953](48694 '_wide_get_node' call_tmp[607948]))
    unknown call_tmp[607958] "expr temp" "maybe param" "maybe type" "temp"
    (607961 'move' call_tmp[607958](48699 call _cast call_tmp[607941] call_tmp[607953]))
    unknown call_tmp[607963] "expr temp" "maybe param" "maybe type" "temp"
    (607966 'move' call_tmp[607963](506331 call int(64)[13] 32))
    (506334 'move' ret[506326](506333 'coerce' call_tmp[607958] call_tmp[607963]))
    (506328 return ret[506326])
  }
  { scopeless type
    (48689 call int(64)[13] 32)
  }
  function RAtomicBool[49676]._addr[48709](arg _mt[49692]:_MT[238], arg this[49690]:RAtomicBool[49676]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506338] "RVV" "temp"
    unknown call_tmp[607970] "expr temp" "maybe param" "maybe type" "temp"
    (607973 'move' call_tmp[607970](371897 call _v _mt[243] this[49690]))
    unknown call_tmp[607975] "expr temp" "maybe param" "maybe type" "temp"
    (607978 'move' call_tmp[607975](48715 '_wide_get_addr' call_tmp[607970]))
    (506344 'move' ret[506338](506343 'coerce' call_tmp[607975] c_void_ptr[149]))
    (506340 return ret[506338])
  }
  { scopeless type
    c_void_ptr[149]
  }
  function RAtomicBool[49676].read[48733](arg _mt[49696]:_MT[238], const arg this[49694]:RAtomicBool[49676], param arg order[48729]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506354] "RVV" "temp"
    function atomic_read[48767](ref arg result[48764] :
    (48763 call int(64)[13] 64), arg l[48773] :
    (48772 call int(64)[13] 32), const arg obj[48777]:c_void_ptr[149], arg order[48781]:memory_order[186653], arg _chpl_cname[48789]:string[26] =
    unknown call_tmp[607980] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506348] "RVV" "temp"
      (506350 return ret[506348])
    }
    { scopeless type
      void[4]
    }
    unknown ret[48798] "dead at end of block" "insert auto destroy"
    unknown call_tmp[607985] "expr temp" "maybe param" "maybe type" "temp"
    (607988 'move' call_tmp[607985](48797 call int(64)[13] 64))
    (540686 'default init var' ret[48798] call_tmp[607985])
    (48801 'end of statement')
    unknown call_tmp[607992] "expr temp" "maybe param" "maybe type" "temp"
    (607995 'move' call_tmp[607992](48807 call(371907 call (partial) _localeid _mt[243] this[49694])))
    unknown call_tmp[607999] "expr temp" "maybe param" "maybe type" "temp"
    (608002 'move' call_tmp[607999](48810 call(371913 call (partial) _addr _mt[243] this[49694])))
    unknown call_tmp[608004] "expr temp" "maybe param" "maybe type" "temp"
    (608007 'move' call_tmp[608004](48814 call c_memory_order order[48729]))
    (48815 call atomic_read ret[48798] call_tmp[607992] call_tmp[607999] call_tmp[608004])
    (474451 'end of statement' ret[48798])
    unknown call_tmp[608009] "expr temp" "maybe param" "maybe type" "temp"
    (608012 'move' call_tmp[608009](48819 call _cast bool[10] ret[48798]))
    (506360 'move' ret[506354](506359 'coerce' call_tmp[608009] bool[10]))
    gotoReturn _end_read[506352] _end_read[506352]
    (474453 'end of statement' ret[48798])
    label _end_read[506352]
    (506356 return ret[506354])
  }
  { scopeless type
    bool[10]
  }
  function RAtomicBool[49676].write[48832](arg _mt[49700]:_MT[238], arg this[49698]:RAtomicBool[49676], arg value[48829]:bool[10], param arg order[48839]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506372] "RVV" "temp"
    function atomic_write[48875](ref arg desired[48872] :
    (48871 call int(64)[13] 64), arg l[48881] :
    (48880 call int(64)[13] 32), arg obj[48885]:c_void_ptr[149], arg order[48889]:memory_order[186653], arg _chpl_cname[48897]:string[26] =
    unknown call_tmp[608014] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506366] "RVV" "temp"
      (506368 return ret[506366])
    }
    { scopeless type
      void[4]
    }
    unknown call_tmp[608019] "expr temp" "maybe param" "maybe type" "temp"
    (608022 'move' call_tmp[608019](48906 call int(64)[13] 64))
    unknown call_tmp[608024] "maybe param" "maybe type" "temp"
    (608027 'move' call_tmp[608024](48907 call _cast call_tmp[608019] value[48829]))
    unknown v[48909] "dead at end of block" "insert auto destroy"
    (540688 'init var' v[48909] call_tmp[608024])
    (48912 'end of statement')
    unknown call_tmp[608031] "expr temp" "maybe param" "maybe type" "temp"
    (608034 'move' call_tmp[608031](48918 call(371924 call (partial) _localeid _mt[243] this[49698])))
    unknown call_tmp[608038] "expr temp" "maybe param" "maybe type" "temp"
    (608041 'move' call_tmp[608038](48921 call(371928 call (partial) _addr _mt[243] this[49698])))
    unknown call_tmp[608043] "expr temp" "maybe param" "maybe type" "temp"
    (608046 'move' call_tmp[608043](48925 call c_memory_order order[48839]))
    (48926 call atomic_write v[48909] call_tmp[608031] call_tmp[608038] call_tmp[608043])
    (474455 'end of statement' v[48909])
    (506374 return ret[506372])
  }
  { scopeless type
    void[4]
  }
  function RAtomicBool[49676].exchange[48937](arg _mt[49704]:_MT[238], arg this[49702]:RAtomicBool[49676], arg value[48934]:bool[10], param arg order[48944]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506384] "RVV" "temp"
    function atomic_xchg[48982](ref arg desired[48979] :
    (48978 call int(64)[13] 64), arg l[48988] :
    (48987 call int(64)[13] 32), arg obj[48992]:c_void_ptr[149], ref arg result[48999] :
    (48998 call int(64)[13] 64), arg order[49003]:memory_order[186653], arg _chpl_cname[49011]:string[26] =
    unknown call_tmp[608048] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506378] "RVV" "temp"
      (506380 return ret[506378])
    }
    { scopeless type
      void[4]
    }
    unknown ret[49020] "dead at end of block" "insert auto destroy"
    unknown call_tmp[608053] "expr temp" "maybe param" "maybe type" "temp"
    (608056 'move' call_tmp[608053](49019 call int(64)[13] 64))
    (540690 'default init var' ret[49020] call_tmp[608053])
    (49023 'end of statement')
    unknown call_tmp[608058] "expr temp" "maybe param" "maybe type" "temp"
    (608061 'move' call_tmp[608058](49028 call int(64)[13] 64))
    unknown call_tmp[608063] "maybe param" "maybe type" "temp"
    (608066 'move' call_tmp[608063](49029 call _cast call_tmp[608058] value[48934]))
    unknown v[49031] "dead at end of block" "insert auto destroy"
    (540692 'init var' v[49031] call_tmp[608063])
    (49034 'end of statement')
    unknown call_tmp[608070] "expr temp" "maybe param" "maybe type" "temp"
    (608073 'move' call_tmp[608070](49040 call(371938 call (partial) _localeid _mt[243] this[49702])))
    unknown call_tmp[608077] "expr temp" "maybe param" "maybe type" "temp"
    (608080 'move' call_tmp[608077](49043 call(371942 call (partial) _addr _mt[243] this[49702])))
    unknown call_tmp[608082] "expr temp" "maybe param" "maybe type" "temp"
    (608085 'move' call_tmp[608082](49048 call c_memory_order order[48944]))
    (49049 call atomic_xchg v[49031] call_tmp[608070] call_tmp[608077] ret[49020] call_tmp[608082])
    (474457 'end of statement' v[49031] ret[49020])
    unknown call_tmp[608087] "expr temp" "maybe param" "maybe type" "temp"
    (608090 'move' call_tmp[608087](49053 call _cast bool[10] ret[49020]))
    (506390 'move' ret[506384](506389 'coerce' call_tmp[608087] bool[10]))
    gotoReturn _end_exchange[506382] _end_exchange[506382]
    (474460 'end of statement' ret[49020])
    label _end_exchange[506382]
    (506386 return ret[506384])
  }
  { scopeless type
    bool[10]
  }
  function RAtomicBool[49676].compareExchange[49066](arg _mt[49708]:_MT[238], arg this[49706]:RAtomicBool[49676], ref arg expected[49063]:bool[10], arg desired[49069]:bool[10], param arg order[49077]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506396] "RVV" "temp"
    unknown call_tmp[608094] "expr temp" "maybe param" "maybe type" "temp"
    (608097 'move' call_tmp[608094](49093 call readableOrder order[49077]))
    unknown call_tmp[608099] "expr temp" "maybe param" "maybe type" "temp"
    (608102 'move' call_tmp[608099](49094 call(49083 call (partial) compareExchange _mt[243] this[49706]) expected[49063] desired[49069] order[49077] call_tmp[608094]))
    (506402 'move' ret[506396](506401 'coerce' call_tmp[608099] bool[10]))
    (506398 return ret[506396])
  }
  { scopeless type
    bool[10]
  }
  function RAtomicBool[49676].compareExchange[49107](arg _mt[49712]:_MT[238], arg this[49710]:RAtomicBool[49676], ref arg expected[49104]:bool[10], arg desired[49110]:bool[10], param arg success[49114]:memoryOrder[187012], param arg failure[49118]:memoryOrder[187012]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506412] "RVV" "temp"
    function atomic_cmpxchg[49155](ref arg expected[49152] :
    (49151 call int(64)[13] 64), ref arg desired[49161] :
    (49160 call int(64)[13] 64), arg l[49168] :
    (49167 call int(64)[13] 32), arg obj[49172]:c_void_ptr[149], ref arg result[49179] :
    (49178 call bool[10] 32), arg succ[49183]:memory_order[186653], arg fail[49187]:memory_order[186653], arg _chpl_cname[49195]:string[26] =
    unknown call_tmp[608104] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506406] "RVV" "temp"
      (506408 return ret[506406])
    }
    { scopeless type
      void[4]
    }
    unknown ret[49204] "dead at end of block" "insert auto destroy"
    unknown call_tmp[608109] "expr temp" "maybe param" "maybe type" "temp"
    (608112 'move' call_tmp[608109](49203 call bool[10] 32))
    (540694 'default init var' ret[49204] call_tmp[608109])
    (49207 'end of statement')
    unknown call_tmp[608114] "expr temp" "maybe param" "maybe type" "temp"
    (608117 'move' call_tmp[608114](49212 call int(64)[13] 64))
    unknown call_tmp[608119] "maybe param" "maybe type" "temp"
    (608122 'move' call_tmp[608119](49213 call _cast call_tmp[608114] expected[49104]))
    unknown te[49215] "dead at end of block" "insert auto destroy"
    (540696 'init var' te[49215] call_tmp[608119])
    (49218 'end of statement')
    unknown call_tmp[608124] "expr temp" "maybe param" "maybe type" "temp"
    (608127 'move' call_tmp[608124](49223 call int(64)[13] 64))
    unknown call_tmp[608129] "maybe param" "maybe type" "temp"
    (608132 'move' call_tmp[608129](49224 call _cast call_tmp[608124] desired[49110]))
    unknown td[49226] "dead at end of block" "insert auto destroy"
    (540698 'init var' td[49226] call_tmp[608129])
    (49229 'end of statement')
    unknown call_tmp[608136] "expr temp" "maybe param" "maybe type" "temp"
    (608139 'move' call_tmp[608136](49236 call(371963 call (partial) _localeid _mt[243] this[49710])))
    unknown call_tmp[608143] "expr temp" "maybe param" "maybe type" "temp"
    (608146 'move' call_tmp[608143](49239 call(371967 call (partial) _addr _mt[243] this[49710])))
    unknown call_tmp[608148] "expr temp" "maybe param" "maybe type" "temp"
    (608151 'move' call_tmp[608148](49244 call c_memory_order success[49114]))
    unknown call_tmp[608153] "expr temp" "maybe param" "maybe type" "temp"
    (608156 'move' call_tmp[608153](49248 call c_memory_order failure[49118]))
    (49249 call atomic_cmpxchg te[49215] td[49226] call_tmp[608136] call_tmp[608143] ret[49204] call_tmp[608148] call_tmp[608153])
    (474463 'end of statement' te[49215] td[49226] ret[49204])
    unknown call_tmp[608158] "expr temp" "maybe param" "maybe type" "temp"
    (608161 'move' call_tmp[608158](49252 call ! ret[49204]))
    unknown call_tmp[608163] "expr temp" "maybe param" "maybe type" "temp"
    (608166 'move' call_tmp[608163](49262 call _cond_test call_tmp[608158]))
    if call_tmp[608163]
    {
      unknown call_tmp[608168] "expr temp" "maybe param" "maybe type" "temp"
      (608171 'move' call_tmp[608168](49257 call _cast bool[10] te[49215]))
      (49259 call = expected[49104] call_tmp[608168])
      (474467 'end of statement' te[49215])
    }
    unknown call_tmp[608173] "expr temp" "maybe param" "maybe type" "temp"
    (608176 'move' call_tmp[608173](49269 call _cast bool[10] ret[49204]))
    (506418 'move' ret[506412](506417 'coerce' call_tmp[608173] bool[10]))
    gotoReturn _end_compareExchange[506410] _end_compareExchange[506410]
    (474469 'end of statement' ret[49204])
    label _end_compareExchange[506410]
    (506414 return ret[506412])
  }
  { scopeless type
    bool[10]
  }
  function RAtomicBool[49676].compareExchangeWeak[49282](arg _mt[49716]:_MT[238], arg this[49714]:RAtomicBool[49676], ref arg expected[49279]:bool[10], arg desired[49285]:bool[10], param arg order[49293]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506424] "RVV" "temp"
    unknown call_tmp[608180] "expr temp" "maybe param" "maybe type" "temp"
    (608183 'move' call_tmp[608180](49306 call(49299 call (partial) compareExchange _mt[243] this[49714]) expected[49279] desired[49285] order[49293]))
    (506430 'move' ret[506424](506429 'coerce' call_tmp[608180] bool[10]))
    (506426 return ret[506424])
  }
  { scopeless type
    bool[10]
  }
  function RAtomicBool[49676].compareExchangeWeak[49319](arg _mt[49720]:_MT[238], arg this[49718]:RAtomicBool[49676], ref arg expected[49316]:bool[10], arg desired[49322]:bool[10], param arg success[49326]:memoryOrder[187012], param arg failure[49330]:memoryOrder[187012]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506434] "RVV" "temp"
    unknown call_tmp[608187] "expr temp" "maybe param" "maybe type" "temp"
    (608190 'move' call_tmp[608187](49343 call(49335 call (partial) compareExchange _mt[243] this[49718]) expected[49316] desired[49322] success[49326] failure[49330]))
    (506440 'move' ret[506434](506439 'coerce' call_tmp[608187] bool[10]))
    (506436 return ret[506434])
  }
  { scopeless type
    bool[10]
  }
  function RAtomicBool[49676].compareAndSwap[49356](arg _mt[49724]:_MT[238], arg this[49722]:RAtomicBool[49676], arg expected[49353]:bool[10], arg desired[49359]:bool[10], param arg order[49367]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506450] "RVV" "temp"
    function atomic_cmpxchg[49389](ref arg expected[49386] :
    (49385 call int(64)[13] 64), ref arg desired[49395] :
    (49394 call int(64)[13] 64), arg l[49402] :
    (49401 call int(64)[13] 32), arg obj[49406]:c_void_ptr[149], ref arg result[49413] :
    (49412 call bool[10] 32), arg succ[49417]:memory_order[186653], arg fail[49421]:memory_order[186653], arg _chpl_cname[49429]:string[26] =
    unknown call_tmp[608192] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506444] "RVV" "temp"
      (506446 return ret[506444])
    }
    { scopeless type
      void[4]
    }
    unknown ret[49438] "dead at end of block" "insert auto destroy"
    unknown call_tmp[608197] "expr temp" "maybe param" "maybe type" "temp"
    (608200 'move' call_tmp[608197](49437 call bool[10] 32))
    (540700 'default init var' ret[49438] call_tmp[608197])
    (49441 'end of statement')
    unknown call_tmp[608202] "expr temp" "maybe param" "maybe type" "temp"
    (608205 'move' call_tmp[608202](49446 call int(64)[13] 64))
    unknown call_tmp[608207] "maybe param" "maybe type" "temp"
    (608210 'move' call_tmp[608207](49447 call _cast call_tmp[608202] expected[49353]))
    unknown te[49449] "dead at end of block" "insert auto destroy"
    (540702 'init var' te[49449] call_tmp[608207])
    (49452 'end of statement')
    unknown call_tmp[608212] "expr temp" "maybe param" "maybe type" "temp"
    (608215 'move' call_tmp[608212](49457 call int(64)[13] 64))
    unknown call_tmp[608217] "maybe param" "maybe type" "temp"
    (608220 'move' call_tmp[608217](49458 call _cast call_tmp[608212] desired[49359]))
    unknown td[49460] "dead at end of block" "insert auto destroy"
    (540704 'init var' td[49460] call_tmp[608217])
    (49463 'end of statement')
    unknown call_tmp[608224] "expr temp" "maybe param" "maybe type" "temp"
    (608227 'move' call_tmp[608224](49470 call(371996 call (partial) _localeid _mt[243] this[49722])))
    unknown call_tmp[608231] "expr temp" "maybe param" "maybe type" "temp"
    (608234 'move' call_tmp[608231](49473 call(372000 call (partial) _addr _mt[243] this[49722])))
    unknown call_tmp[608236] "expr temp" "maybe param" "maybe type" "temp"
    (608239 'move' call_tmp[608236](49478 call c_memory_order order[49367]))
    unknown call_tmp[608241] "expr temp" "maybe param" "maybe type" "temp"
    (608244 'move' call_tmp[608241](49483 call readableOrder order[49367]))
    unknown call_tmp[608246] "expr temp" "maybe param" "maybe type" "temp"
    (608249 'move' call_tmp[608246](49485 call c_memory_order call_tmp[608241]))
    (49486 call atomic_cmpxchg te[49449] td[49460] call_tmp[608224] call_tmp[608231] ret[49438] call_tmp[608236] call_tmp[608246])
    (474473 'end of statement' te[49449] td[49460] ret[49438])
    unknown call_tmp[608251] "expr temp" "maybe param" "maybe type" "temp"
    (608254 'move' call_tmp[608251](49490 call _cast bool[10] ret[49438]))
    (506456 'move' ret[506450](506455 'coerce' call_tmp[608251] bool[10]))
    gotoReturn _end_compareAndSwap[506448] _end_compareAndSwap[506448]
    (474477 'end of statement' ret[49438])
    label _end_compareAndSwap[506448]
    (506452 return ret[506450])
  }
  { scopeless type
    bool[10]
  }
  function RAtomicBool[49676].testAndSet[49508](arg _mt[49728]:_MT[238], arg this[49726]:RAtomicBool[49676], param arg order[49504]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506462] "RVV" "temp"
    unknown call_tmp[608258] "expr temp" "maybe param" "maybe type" "temp"
    (608261 'move' call_tmp[608258](49518 call(49512 call (partial) exchange _mt[243] this[49726]) 1 order[49504]))
    (506468 'move' ret[506462](506467 'coerce' call_tmp[608258] bool[10]))
    (506464 return ret[506462])
  }
  { scopeless type
    bool[10]
  }
  function RAtomicBool[49676].clear[49536](arg _mt[49732]:_MT[238], arg this[49730]:RAtomicBool[49676], param arg order[49532]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506472] "RVV" "temp"
    (49546 call(49540 call (partial) write _mt[243] this[49730]) 0 order[49532])
    (506474 return ret[506472])
  }
  { scopeless type
    void[4]
  }
  function RAtomicBool[49676].waitFor[49558](arg _mt[49736]:_MT[238], const arg this[49734]:RAtomicBool[49676], arg value[49555]:bool[10], param arg order[49565]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506478] "RVV" "temp"
    const tmp[49647] "const" "temp"
    unknown call_tmp[608265] "expr temp" "maybe param" "maybe type" "temp"
    (608268 'move' call_tmp[608265](49644 '_wide_get_locale' this[49734]))
    (49649 'move' tmp[49647](49645 'deref' call_tmp[608265]))
    (934175 call on_fn[934171] tmp[49647])
    function on_fn[934171](const in arg dummy_locale_arg[934173]:chpl_localeID_t[209352]) : void[4] "on"
    {
      {
        {
          unknown tmp[49590] "temp"
          unknown call_tmp[608272] "expr temp" "maybe param" "maybe type" "temp"
          (608275 'move' call_tmp[608272](49625 call(49622 call (partial) read _mt[243] this[49734])(order = relaxed[187010])))
          unknown call_tmp[608277] "expr temp" "maybe param" "maybe type" "temp"
          (608280 'move' call_tmp[608277](49620 call != call_tmp[608272] value[49555]))
          (49632 'move' tmp[49590](49618 call _cond_test call_tmp[608277]))
          WhileDo[49595]
          {
            {
              (49587 call chpl_task_yield)
            }
            label _continueLabel[49593]
            unknown call_tmp[608284] "expr temp" "maybe param" "maybe type" "temp"
            (608287 'move' call_tmp[608284](49606 call(49603 call (partial) read _mt[243] this[49734])(order = relaxed[187010])))
            unknown call_tmp[608289] "expr temp" "maybe param" "maybe type" "temp"
            (608292 'move' call_tmp[608289](49601 call != call_tmp[608284] value[49555]))
            (49613 'move' tmp[49590](49599 call _cond_test call_tmp[608289]))
            tmp[49590]
          }
          label _breakLabel[49594]
        }
        unknown call_tmp[608294] "expr temp" "maybe param" "maybe type" "temp"
        (608297 'move' call_tmp[608294](49640 call c_memory_order order[49565]))
        (49642 call chpl_atomic_thread_fence call_tmp[608294])
      }
      (934178 return _void[55])
    }
    {
    }
    (506480 return ret[506478])
  }
  { scopeless type
    void[4]
  }
  function RAtomicBool[49676].writeThis[49663](arg _mt[49740]:_MT[238], const arg this[49738]:RAtomicBool[49676], arg x[49661]:_any[178](?)) : _unknown[51] throws "atomic type" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[608301] "expr temp" "maybe param" "maybe type" "temp"
    (608304 'move' call_tmp[608301](49668 call(372018 call (partial) read _mt[243] this[49738])))
    (49669 call <~> x[49661] call_tmp[608301])
    (506482 return _void[55])
  }
  function RAtomicBool[49676]._v[763280](arg _mt[763282]:_MT[238], ref arg this[763284]:RAtomicBool[49676]) ref : _unknown[51] "atomic type" "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[763294] "RVV" "temp"
    unknown call_tmp[763301] "expr temp" "maybe param" "maybe type" "temp"
    (763304 'move' call_tmp[763301](763288 '.' this[763284] c"_v"))
    (763299 'move' ret[763294](763298 'addr of' call_tmp[763301]))
    (763296 return ret[763294])
  }
  function RAtomicBool[49676].init[763306](arg _mt[763308]:_MT[238], ref arg this[763309]:RAtomicBool[49676], in arg _v[763312] :
  (763315 call int(64)[13] 64) =
  _typeDefaultT[250]) : void[4] "compiler generated" "last resort" "method" "primary method" "suppress lvalue error"
  {
    (763328 'init field' this[763309] c"_v" _v[763312])
    (763332 return _void[55])
  }
  function RAtomicBool[49676].deinit[763334](arg _mt[763336]:_MT[238], arg this[763338]:RAtomicBool[49676]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (763346 return _void[55])
  }
  function chpl_fields_are_comparable[763360](arg _arg1[763362]:RAtomicBool[49676], arg _arg2[763363]:RAtomicBool[49676]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[763381]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[763388] "expr temp" "maybe param" "maybe type" "temp"
    (763391 'move' call_tmp[763388](763366 call _v _mt[243] _arg1[763362]))
    unknown call_tmp[763393] "expr temp" "maybe param" "maybe type" "temp"
    (763396 'move' call_tmp[763393](763370 call _v _mt[243] _arg2[763363]))
    unknown call_tmp[763398] "expr temp" "maybe param" "maybe type" "temp"
    (763401 'move' call_tmp[763398](763374 'call resolves' c"==" call_tmp[763388] call_tmp[763393]))
    (763386 'move' ret[763381](763385 'deref' call_tmp[763398]))
    (763383 return ret[763381])
  }
  function ==[763348](arg _arg1[763350]:RAtomicBool[49676], arg _arg2[763351]:RAtomicBool[49676]) : bool[10] "compiler generated" "last resort"
  {
    val ret[763430]:bool[10] "RVV" "temp"
    unknown call_tmp[763442] "expr temp" "maybe param" "maybe type" "temp"
    (763445 'move' call_tmp[763442](763409 call _v _mt[243] _arg1[763350]))
    unknown call_tmp[763447] "expr temp" "maybe param" "maybe type" "temp"
    (763450 'move' call_tmp[763447](763413 call _v _mt[243] _arg2[763351]))
    unknown call_tmp[763452] "expr temp" "maybe param" "maybe type" "temp"
    (763455 'move' call_tmp[763452](763417 call != call_tmp[763442] call_tmp[763447]))
    if call_tmp[763452]
    {
      (763435 'move' ret[763430](763434 'deref' 0))
      gotoReturn _end_==[763428] _end_==[763428]
    }
    (763440 'move' ret[763430](763439 'deref' 1))
    label _end_==[763428]
    (763432 return ret[763430])
  }
  where {
    unknown call_tmp[763457] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (763460 'move' call_tmp[763457](763354 'typeof' _arg1[763350]))
    unknown call_tmp[763462] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (763465 'move' call_tmp[763462](763356 'typeof' _arg2[763351]))
    unknown call_tmp[763467] "expr temp" "maybe param" "maybe type" "temp"
    (763470 'move' call_tmp[763467](763358 call == call_tmp[763457] call_tmp[763462]))
    unknown call_tmp[763472] "expr temp" "maybe param" "maybe type" "temp"
    (763475 'move' call_tmp[763472](763403 call chpl_fields_are_comparable[763360] _arg1[763350] _arg2[763351]))
    (763407 '&' call_tmp[763467] call_tmp[763472])
  }
  function chpl_fields_are_comparable[763489](arg _arg1[763491]:RAtomicBool[49676], arg _arg2[763492]:RAtomicBool[49676]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[763510]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[763517] "expr temp" "maybe param" "maybe type" "temp"
    (763520 'move' call_tmp[763517](763495 call _v _mt[243] _arg1[763491]))
    unknown call_tmp[763522] "expr temp" "maybe param" "maybe type" "temp"
    (763525 'move' call_tmp[763522](763499 call _v _mt[243] _arg2[763492]))
    unknown call_tmp[763527] "expr temp" "maybe param" "maybe type" "temp"
    (763530 'move' call_tmp[763527](763503 'call resolves' c"!=" call_tmp[763517] call_tmp[763522]))
    (763515 'move' ret[763510](763514 'deref' call_tmp[763527]))
    (763512 return ret[763510])
  }
  function !=[763477](arg _arg1[763479]:RAtomicBool[49676], arg _arg2[763480]:RAtomicBool[49676]) : bool[10] "compiler generated" "last resort"
  {
    val ret[763559]:bool[10] "RVV" "temp"
    unknown call_tmp[763571] "expr temp" "maybe param" "maybe type" "temp"
    (763574 'move' call_tmp[763571](763538 call _v _mt[243] _arg1[763479]))
    unknown call_tmp[763576] "expr temp" "maybe param" "maybe type" "temp"
    (763579 'move' call_tmp[763576](763542 call _v _mt[243] _arg2[763480]))
    unknown call_tmp[763581] "expr temp" "maybe param" "maybe type" "temp"
    (763584 'move' call_tmp[763581](763546 call != call_tmp[763571] call_tmp[763576]))
    if call_tmp[763581]
    {
      (763564 'move' ret[763559](763563 'deref' 1))
      gotoReturn _end_!=[763557] _end_!=[763557]
    }
    (763569 'move' ret[763559](763568 'deref' 0))
    label _end_!=[763557]
    (763561 return ret[763559])
  }
  where {
    unknown call_tmp[763586] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (763589 'move' call_tmp[763586](763483 'typeof' _arg1[763479]))
    unknown call_tmp[763591] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (763594 'move' call_tmp[763591](763485 'typeof' _arg2[763480]))
    unknown call_tmp[763596] "expr temp" "maybe param" "maybe type" "temp"
    (763599 'move' call_tmp[763596](763487 call == call_tmp[763586] call_tmp[763591]))
    unknown call_tmp[763601] "expr temp" "maybe param" "maybe type" "temp"
    (763604 'move' call_tmp[763601](763532 call chpl_fields_are_comparable[763489] _arg1[763479] _arg2[763480]))
    (763536 '&' call_tmp[763596] call_tmp[763601])
  }
  function chpl_fields_are_comparable[763618](arg _arg1[763620]:RAtomicBool[49676], arg _arg2[763621]:RAtomicBool[49676]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[763639]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[763646] "expr temp" "maybe param" "maybe type" "temp"
    (763649 'move' call_tmp[763646](763624 call _v _mt[243] _arg1[763620]))
    unknown call_tmp[763651] "expr temp" "maybe param" "maybe type" "temp"
    (763654 'move' call_tmp[763651](763628 call _v _mt[243] _arg2[763621]))
    unknown call_tmp[763656] "expr temp" "maybe param" "maybe type" "temp"
    (763659 'move' call_tmp[763656](763632 'call resolves' c"<" call_tmp[763646] call_tmp[763651]))
    (763644 'move' ret[763639](763643 'deref' call_tmp[763656]))
    (763641 return ret[763639])
  }
  function <[763606](arg _arg1[763608]:RAtomicBool[49676], arg _arg2[763609]:RAtomicBool[49676]) : bool[10] "compiler generated" "last resort"
  {
    val ret[763703]:bool[10] "RVV" "temp"
    unknown call_tmp[763720] "expr temp" "maybe param" "maybe type" "temp"
    (763723 'move' call_tmp[763720](763667 call _v _mt[243] _arg1[763608]))
    unknown call_tmp[763725] "expr temp" "maybe param" "maybe type" "temp"
    (763728 'move' call_tmp[763725](763671 call _v _mt[243] _arg2[763609]))
    unknown call_tmp[763730] "expr temp" "maybe param" "maybe type" "temp"
    (763733 'move' call_tmp[763730](763675 call < call_tmp[763720] call_tmp[763725]))
    if call_tmp[763730]
    {
      (763708 'move' ret[763703](763707 'deref' 1))
      gotoReturn _end_<[763701] _end_<[763701]
    }
    unknown call_tmp[763735] "expr temp" "maybe param" "maybe type" "temp"
    (763738 'move' call_tmp[763735](763681 call _v _mt[243] _arg1[763608]))
    unknown call_tmp[763740] "expr temp" "maybe param" "maybe type" "temp"
    (763743 'move' call_tmp[763740](763685 call _v _mt[243] _arg2[763609]))
    unknown call_tmp[763745] "expr temp" "maybe param" "maybe type" "temp"
    (763748 'move' call_tmp[763745](763689 call > call_tmp[763735] call_tmp[763740]))
    if call_tmp[763745]
    {
      (763713 'move' ret[763703](763712 'deref' 0))
      gotoReturn _end_<[763701] _end_<[763701]
    }
    (763718 'move' ret[763703](763717 'deref' 0))
    label _end_<[763701]
    (763705 return ret[763703])
  }
  where {
    unknown call_tmp[763750] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (763753 'move' call_tmp[763750](763612 'typeof' _arg1[763608]))
    unknown call_tmp[763755] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (763758 'move' call_tmp[763755](763614 'typeof' _arg2[763609]))
    unknown call_tmp[763760] "expr temp" "maybe param" "maybe type" "temp"
    (763763 'move' call_tmp[763760](763616 call == call_tmp[763750] call_tmp[763755]))
    unknown call_tmp[763765] "expr temp" "maybe param" "maybe type" "temp"
    (763768 'move' call_tmp[763765](763661 call chpl_fields_are_comparable[763618] _arg1[763608] _arg2[763609]))
    (763665 '&' call_tmp[763760] call_tmp[763765])
  }
  function chpl_fields_are_comparable[763782](arg _arg1[763784]:RAtomicBool[49676], arg _arg2[763785]:RAtomicBool[49676]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[763803]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[763810] "expr temp" "maybe param" "maybe type" "temp"
    (763813 'move' call_tmp[763810](763788 call _v _mt[243] _arg1[763784]))
    unknown call_tmp[763815] "expr temp" "maybe param" "maybe type" "temp"
    (763818 'move' call_tmp[763815](763792 call _v _mt[243] _arg2[763785]))
    unknown call_tmp[763820] "expr temp" "maybe param" "maybe type" "temp"
    (763823 'move' call_tmp[763820](763796 'call resolves' c"<=" call_tmp[763810] call_tmp[763815]))
    (763808 'move' ret[763803](763807 'deref' call_tmp[763820]))
    (763805 return ret[763803])
  }
  function <=[763770](arg _arg1[763772]:RAtomicBool[49676], arg _arg2[763773]:RAtomicBool[49676]) : bool[10] "compiler generated" "last resort"
  {
    val ret[763867]:bool[10] "RVV" "temp"
    unknown call_tmp[763884] "expr temp" "maybe param" "maybe type" "temp"
    (763887 'move' call_tmp[763884](763831 call _v _mt[243] _arg1[763772]))
    unknown call_tmp[763889] "expr temp" "maybe param" "maybe type" "temp"
    (763892 'move' call_tmp[763889](763835 call _v _mt[243] _arg2[763773]))
    unknown call_tmp[763894] "expr temp" "maybe param" "maybe type" "temp"
    (763897 'move' call_tmp[763894](763839 call < call_tmp[763884] call_tmp[763889]))
    if call_tmp[763894]
    {
      (763872 'move' ret[763867](763871 'deref' 1))
      gotoReturn _end_<=[763865] _end_<=[763865]
    }
    unknown call_tmp[763899] "expr temp" "maybe param" "maybe type" "temp"
    (763902 'move' call_tmp[763899](763845 call _v _mt[243] _arg1[763772]))
    unknown call_tmp[763904] "expr temp" "maybe param" "maybe type" "temp"
    (763907 'move' call_tmp[763904](763849 call _v _mt[243] _arg2[763773]))
    unknown call_tmp[763909] "expr temp" "maybe param" "maybe type" "temp"
    (763912 'move' call_tmp[763909](763853 call > call_tmp[763899] call_tmp[763904]))
    if call_tmp[763909]
    {
      (763877 'move' ret[763867](763876 'deref' 0))
      gotoReturn _end_<=[763865] _end_<=[763865]
    }
    (763882 'move' ret[763867](763881 'deref' 1))
    label _end_<=[763865]
    (763869 return ret[763867])
  }
  where {
    unknown call_tmp[763914] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (763917 'move' call_tmp[763914](763776 'typeof' _arg1[763772]))
    unknown call_tmp[763919] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (763922 'move' call_tmp[763919](763778 'typeof' _arg2[763773]))
    unknown call_tmp[763924] "expr temp" "maybe param" "maybe type" "temp"
    (763927 'move' call_tmp[763924](763780 call == call_tmp[763914] call_tmp[763919]))
    unknown call_tmp[763929] "expr temp" "maybe param" "maybe type" "temp"
    (763932 'move' call_tmp[763929](763825 call chpl_fields_are_comparable[763782] _arg1[763772] _arg2[763773]))
    (763829 '&' call_tmp[763924] call_tmp[763929])
  }
  function chpl_fields_are_comparable[763946](arg _arg1[763948]:RAtomicBool[49676], arg _arg2[763949]:RAtomicBool[49676]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[763967]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[763974] "expr temp" "maybe param" "maybe type" "temp"
    (763977 'move' call_tmp[763974](763952 call _v _mt[243] _arg1[763948]))
    unknown call_tmp[763979] "expr temp" "maybe param" "maybe type" "temp"
    (763982 'move' call_tmp[763979](763956 call _v _mt[243] _arg2[763949]))
    unknown call_tmp[763984] "expr temp" "maybe param" "maybe type" "temp"
    (763987 'move' call_tmp[763984](763960 'call resolves' c">" call_tmp[763974] call_tmp[763979]))
    (763972 'move' ret[763967](763971 'deref' call_tmp[763984]))
    (763969 return ret[763967])
  }
  function >[763934](arg _arg1[763936]:RAtomicBool[49676], arg _arg2[763937]:RAtomicBool[49676]) : bool[10] "compiler generated" "last resort"
  {
    val ret[764031]:bool[10] "RVV" "temp"
    unknown call_tmp[764048] "expr temp" "maybe param" "maybe type" "temp"
    (764051 'move' call_tmp[764048](763995 call _v _mt[243] _arg1[763936]))
    unknown call_tmp[764053] "expr temp" "maybe param" "maybe type" "temp"
    (764056 'move' call_tmp[764053](763999 call _v _mt[243] _arg2[763937]))
    unknown call_tmp[764058] "expr temp" "maybe param" "maybe type" "temp"
    (764061 'move' call_tmp[764058](764003 call > call_tmp[764048] call_tmp[764053]))
    if call_tmp[764058]
    {
      (764036 'move' ret[764031](764035 'deref' 1))
      gotoReturn _end_>[764029] _end_>[764029]
    }
    unknown call_tmp[764063] "expr temp" "maybe param" "maybe type" "temp"
    (764066 'move' call_tmp[764063](764009 call _v _mt[243] _arg1[763936]))
    unknown call_tmp[764068] "expr temp" "maybe param" "maybe type" "temp"
    (764071 'move' call_tmp[764068](764013 call _v _mt[243] _arg2[763937]))
    unknown call_tmp[764073] "expr temp" "maybe param" "maybe type" "temp"
    (764076 'move' call_tmp[764073](764017 call < call_tmp[764063] call_tmp[764068]))
    if call_tmp[764073]
    {
      (764041 'move' ret[764031](764040 'deref' 0))
      gotoReturn _end_>[764029] _end_>[764029]
    }
    (764046 'move' ret[764031](764045 'deref' 0))
    label _end_>[764029]
    (764033 return ret[764031])
  }
  where {
    unknown call_tmp[764078] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (764081 'move' call_tmp[764078](763940 'typeof' _arg1[763936]))
    unknown call_tmp[764083] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (764086 'move' call_tmp[764083](763942 'typeof' _arg2[763937]))
    unknown call_tmp[764088] "expr temp" "maybe param" "maybe type" "temp"
    (764091 'move' call_tmp[764088](763944 call == call_tmp[764078] call_tmp[764083]))
    unknown call_tmp[764093] "expr temp" "maybe param" "maybe type" "temp"
    (764096 'move' call_tmp[764093](763989 call chpl_fields_are_comparable[763946] _arg1[763936] _arg2[763937]))
    (763993 '&' call_tmp[764088] call_tmp[764093])
  }
  function chpl_fields_are_comparable[764110](arg _arg1[764112]:RAtomicBool[49676], arg _arg2[764113]:RAtomicBool[49676]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[764131]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[764138] "expr temp" "maybe param" "maybe type" "temp"
    (764141 'move' call_tmp[764138](764116 call _v _mt[243] _arg1[764112]))
    unknown call_tmp[764143] "expr temp" "maybe param" "maybe type" "temp"
    (764146 'move' call_tmp[764143](764120 call _v _mt[243] _arg2[764113]))
    unknown call_tmp[764148] "expr temp" "maybe param" "maybe type" "temp"
    (764151 'move' call_tmp[764148](764124 'call resolves' c">=" call_tmp[764138] call_tmp[764143]))
    (764136 'move' ret[764131](764135 'deref' call_tmp[764148]))
    (764133 return ret[764131])
  }
  function >=[764098](arg _arg1[764100]:RAtomicBool[49676], arg _arg2[764101]:RAtomicBool[49676]) : bool[10] "compiler generated" "last resort"
  {
    val ret[764195]:bool[10] "RVV" "temp"
    unknown call_tmp[764212] "expr temp" "maybe param" "maybe type" "temp"
    (764215 'move' call_tmp[764212](764159 call _v _mt[243] _arg1[764100]))
    unknown call_tmp[764217] "expr temp" "maybe param" "maybe type" "temp"
    (764220 'move' call_tmp[764217](764163 call _v _mt[243] _arg2[764101]))
    unknown call_tmp[764222] "expr temp" "maybe param" "maybe type" "temp"
    (764225 'move' call_tmp[764222](764167 call > call_tmp[764212] call_tmp[764217]))
    if call_tmp[764222]
    {
      (764200 'move' ret[764195](764199 'deref' 1))
      gotoReturn _end_>=[764193] _end_>=[764193]
    }
    unknown call_tmp[764227] "expr temp" "maybe param" "maybe type" "temp"
    (764230 'move' call_tmp[764227](764173 call _v _mt[243] _arg1[764100]))
    unknown call_tmp[764232] "expr temp" "maybe param" "maybe type" "temp"
    (764235 'move' call_tmp[764232](764177 call _v _mt[243] _arg2[764101]))
    unknown call_tmp[764237] "expr temp" "maybe param" "maybe type" "temp"
    (764240 'move' call_tmp[764237](764181 call < call_tmp[764227] call_tmp[764232]))
    if call_tmp[764237]
    {
      (764205 'move' ret[764195](764204 'deref' 0))
      gotoReturn _end_>=[764193] _end_>=[764193]
    }
    (764210 'move' ret[764195](764209 'deref' 1))
    label _end_>=[764193]
    (764197 return ret[764195])
  }
  where {
    unknown call_tmp[764242] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (764245 'move' call_tmp[764242](764104 'typeof' _arg1[764100]))
    unknown call_tmp[764247] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (764250 'move' call_tmp[764247](764106 'typeof' _arg2[764101]))
    unknown call_tmp[764252] "expr temp" "maybe param" "maybe type" "temp"
    (764255 'move' call_tmp[764252](764108 call == call_tmp[764242] call_tmp[764247]))
    unknown call_tmp[764257] "expr temp" "maybe param" "maybe type" "temp"
    (764260 'move' call_tmp[764257](764153 call chpl_fields_are_comparable[764110] _arg1[764100] _arg2[764101]))
    (764157 '&' call_tmp[764252] call_tmp[764257])
  }
  function chpl__defaultHash[764262](arg r[764264]:RAtomicBool[49676]) : _unknown[51] "compiler generated" "last resort"
  {
    unknown ret[764277] "RVV" "temp"
    unknown call_tmp[764284] "expr temp" "maybe param" "maybe type" "temp"
    (764287 'move' call_tmp[764284](764266 call _v _mt[243] r[764264]))
    unknown call_tmp[764289] "expr temp" "maybe param" "maybe type" "temp"
    (764292 'move' call_tmp[764289](764270 call chpl__defaultHash call_tmp[764284]))
    (764282 'move' ret[764277](764281 'deref' call_tmp[764289]))
    (764279 return ret[764277])
  }
  type RAtomicBool[49676] val _v[48621]:int(64)[13](48620 call int(64)[13] 64)
  function RAtomicT[51636](?).init=[49759](arg _mt[51640]:_MT[238], ref arg this[51638]:RAtomicT[51636](?), arg other[49756]:RAtomicT[51636](?)) : void[4] "atomic type" "method" "primary method" "no return value for void"
  {
    unknown tmp[454718] "temp" "type variable"
    (454720 'move' tmp[454718](49766 call T _mt[243] other[49756]))
    (454722 'init field' this[51638] c"T" tmp[454718])
    (474484 'end of statement')
    unknown call_tmp[608310] "maybe param" "maybe type" "temp"
    (608313 'move' call_tmp[608310](49782 call(49778 call (partial) read _mt[243] other[49756])))
    unknown call_tmp[608315] "maybe param" "maybe type" "temp"
    (608318 'move' call_tmp[608315](454735 '.v' this[51638] c"T"))
    unknown tmp[454726] "temp"
    (454729 'init var' tmp[454726] call_tmp[608310] call_tmp[608315])
    (454731 'init field' this[51638] c"_v" tmp[454726])
    (474485 'end of statement')
    (506484 return _void[55])
  }
  function RAtomicT[51636](?).init=[49798](arg _mt[51644]:_MT[238], ref arg this[51642]:RAtomicT[51636](?), arg other[49795] :
  unknown call_tmp[608320] "expr temp" "maybe param" "maybe type" "temp" "type variable") : void[4] "atomic type" "method" "primary method" "no return value for void"
  {
    unknown tmp[454738] "temp" "type variable"
    (454740 'move' tmp[454738](49805 'typeof' other[49795]))
    (454742 'init field' this[51642] c"T" tmp[454738])
    (474486 'end of statement')
    unknown call_tmp[608327] "maybe param" "maybe type" "temp"
    (608330 'move' call_tmp[608327](454755 '.v' this[51642] c"T"))
    unknown tmp[454746] "temp"
    (454749 'init var' tmp[454746] other[49795] call_tmp[608327])
    (454751 'init field' this[51642] c"_v" tmp[454746])
    (474487 'end of statement')
    (506486 return _void[55])
  }
  function RAtomicT[51636](?)._localeid[49822](arg _mt[51648]:_MT[238], arg this[51646]:RAtomicT[51636](?)) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506490] "RVV" "temp"
    unknown call_tmp[608332] "expr temp" "maybe param" "maybe type" "temp"
    (608335 'move' call_tmp[608332](49836 call int(64)[13] 32))
    unknown call_tmp[608339] "expr temp" "maybe param" "maybe type" "temp"
    (608342 'move' call_tmp[608339](372028 call _v _mt[243] this[51646]))
    unknown call_tmp[608344] "expr temp" "maybe param" "maybe type" "temp"
    (608347 'move' call_tmp[608344](49832 '_wide_get_node' call_tmp[608339]))
    unknown call_tmp[608349] "expr temp" "maybe param" "maybe type" "temp"
    (608352 'move' call_tmp[608349](49837 call _cast call_tmp[608332] call_tmp[608344]))
    unknown call_tmp[608354] "expr temp" "maybe param" "maybe type" "temp"
    (608357 'move' call_tmp[608354](506495 call int(64)[13] 32))
    (506498 'move' ret[506490](506497 'coerce' call_tmp[608349] call_tmp[608354]))
    (506492 return ret[506490])
  }
  { scopeless type
    (49827 call int(64)[13] 32)
  }
  function RAtomicT[51636](?)._addr[49847](arg _mt[51652]:_MT[238], arg this[51650]:RAtomicT[51636](?)) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506502] "RVV" "temp"
    unknown call_tmp[608361] "expr temp" "maybe param" "maybe type" "temp"
    (608364 'move' call_tmp[608361](372034 call _v _mt[243] this[51650]))
    unknown call_tmp[608366] "expr temp" "maybe param" "maybe type" "temp"
    (608369 'move' call_tmp[608366](49853 '_wide_get_addr' call_tmp[608361]))
    (506508 'move' ret[506502](506507 'coerce' call_tmp[608366] c_void_ptr[149]))
    (506504 return ret[506502])
  }
  { scopeless type
    c_void_ptr[149]
  }
  function RAtomicT[51636](?).read[49871](arg _mt[51656]:_MT[238], const arg this[51654]:RAtomicT[51636](?), param arg order[49867]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506518] "RVV" "temp"
    function atomic_read[49885](ref arg result[49882] :
    (372050 call T _mt[243] this[51654]), arg l[49891] :
    (49890 call int(64)[13] 32), const arg obj[49895]:c_void_ptr[149], arg order[49899]:memory_order[186653], arg _chpl_cname[49907]:string[26] =
    unknown call_tmp[608375] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506512] "RVV" "temp"
      (506514 return ret[506512])
    }
    { scopeless type
      void[4]
    }
    unknown ret[49913] "dead at end of block" "insert auto destroy"
    unknown call_tmp[608382] "expr temp" "maybe param" "maybe type" "temp"
    (608385 'move' call_tmp[608382](372057 call T _mt[243] this[51654]))
    (540706 'default init var' ret[49913] call_tmp[608382])
    (49916 'end of statement')
    unknown call_tmp[608389] "expr temp" "maybe param" "maybe type" "temp"
    (608392 'move' call_tmp[608389](49922 call(372062 call (partial) _localeid _mt[243] this[51654])))
    unknown call_tmp[608396] "expr temp" "maybe param" "maybe type" "temp"
    (608399 'move' call_tmp[608396](49925 call(372066 call (partial) _addr _mt[243] this[51654])))
    unknown call_tmp[608401] "expr temp" "maybe param" "maybe type" "temp"
    (608404 'move' call_tmp[608401](49929 call c_memory_order order[49867]))
    (49930 call atomic_read ret[49913] call_tmp[608389] call_tmp[608396] call_tmp[608401])
    (474490 'end of statement' ret[49913])
    unknown call_tmp[608408] "expr temp" "maybe param" "maybe type" "temp"
    (608411 'move' call_tmp[608408](506523 call T _mt[243] this[51654]))
    (506527 'move' ret[506518](506526 'coerce' ret[49913] call_tmp[608408]))
    gotoReturn _end_read[506516] _end_read[506516]
    (474492 'end of statement' ret[49913])
    label _end_read[506516]
    (506520 return ret[506518])
  }
  { scopeless type
    (372040 call T _mt[243] this[51654])
  }
  function RAtomicT[51636](?).write[49944](arg _mt[51660]:_MT[238], arg this[51658]:RAtomicT[51636](?), arg value[49941] :
  (372073 call T _mt[243] this[51658]), param arg order[49951]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506539] "RVV" "temp"
    function atomic_write[49967](ref arg desired[49964] :
    (372084 call T _mt[243] this[51658]), arg l[49973] :
    (49972 call int(64)[13] 32), arg obj[49977]:c_void_ptr[149], arg order[49981]:memory_order[186653], arg _chpl_cname[49989]:string[26] =
    unknown call_tmp[608421] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506533] "RVV" "temp"
      (506535 return ret[506533])
    }
    { scopeless type
      void[4]
    }
    unknown v[49995] "dead at end of block" "insert auto destroy"
    (540708 'init var' v[49995] value[49941])
    (49998 'end of statement')
    unknown call_tmp[608428] "expr temp" "maybe param" "maybe type" "temp"
    (608431 'move' call_tmp[608428](50004 call(372092 call (partial) _localeid _mt[243] this[51658])))
    unknown call_tmp[608435] "expr temp" "maybe param" "maybe type" "temp"
    (608438 'move' call_tmp[608435](50007 call(372096 call (partial) _addr _mt[243] this[51658])))
    unknown call_tmp[608440] "expr temp" "maybe param" "maybe type" "temp"
    (608443 'move' call_tmp[608440](50011 call c_memory_order order[49951]))
    (50012 call atomic_write v[49995] call_tmp[608428] call_tmp[608435] call_tmp[608440])
    (474494 'end of statement' v[49995])
    (506541 return ret[506539])
  }
  { scopeless type
    void[4]
  }
  function RAtomicT[51636](?).exchange[50023](arg _mt[51664]:_MT[238], arg this[51662]:RAtomicT[51636](?), arg value[50020] :
  (372102 call T _mt[243] this[51662]), param arg order[50030]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506551] "RVV" "temp"
    function atomic_xchg[50046](ref arg desired[50043] :
    (372118 call T _mt[243] this[51662]), arg l[50052] :
    (50051 call int(64)[13] 32), arg obj[50056]:c_void_ptr[149], ref arg result[50060] :
    (372124 call T _mt[243] this[51662]), arg order[50064]:memory_order[186653], arg _chpl_cname[50072]:string[26] =
    unknown call_tmp[608453] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506545] "RVV" "temp"
      (506547 return ret[506545])
    }
    { scopeless type
      void[4]
    }
    unknown ret[50078] "dead at end of block" "insert auto destroy"
    unknown call_tmp[608460] "expr temp" "maybe param" "maybe type" "temp"
    (608463 'move' call_tmp[608460](372130 call T _mt[243] this[51662]))
    (540710 'default init var' ret[50078] call_tmp[608460])
    (50081 'end of statement')
    unknown v[50083] "dead at end of block" "insert auto destroy"
    (540712 'init var' v[50083] value[50020])
    (50086 'end of statement')
    unknown call_tmp[608467] "expr temp" "maybe param" "maybe type" "temp"
    (608470 'move' call_tmp[608467](50092 call(372136 call (partial) _localeid _mt[243] this[51662])))
    unknown call_tmp[608474] "expr temp" "maybe param" "maybe type" "temp"
    (608477 'move' call_tmp[608474](50095 call(372140 call (partial) _addr _mt[243] this[51662])))
    unknown call_tmp[608479] "expr temp" "maybe param" "maybe type" "temp"
    (608482 'move' call_tmp[608479](50100 call c_memory_order order[50030]))
    (50101 call atomic_xchg v[50083] call_tmp[608467] call_tmp[608474] ret[50078] call_tmp[608479])
    (474496 'end of statement' v[50083] ret[50078])
    unknown call_tmp[608486] "expr temp" "maybe param" "maybe type" "temp"
    (608489 'move' call_tmp[608486](506556 call T _mt[243] this[51662]))
    (506560 'move' ret[506551](506559 'coerce' ret[50078] call_tmp[608486]))
    gotoReturn _end_exchange[506549] _end_exchange[506549]
    (474499 'end of statement' ret[50078])
    label _end_exchange[506549]
    (506553 return ret[506551])
  }
  { scopeless type
    (372108 call T _mt[243] this[51662])
  }
  function RAtomicT[51636](?).compareExchange[50115](arg _mt[51668]:_MT[238], arg this[51666]:RAtomicT[51636](?), ref arg expected[50112] :
  (372148 call T _mt[243] this[51666]), arg desired[50118] :
  (372153 call T _mt[243] this[51666]), param arg order[50126]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506566] "RVV" "temp"
    unknown call_tmp[608499] "expr temp" "maybe param" "maybe type" "temp"
    (608502 'move' call_tmp[608499](50142 call readableOrder order[50126]))
    unknown call_tmp[608504] "expr temp" "maybe param" "maybe type" "temp"
    (608507 'move' call_tmp[608504](50143 call(50132 call (partial) compareExchange _mt[243] this[51666]) expected[50112] desired[50118] order[50126] call_tmp[608499]))
    (506572 'move' ret[506566](506571 'coerce' call_tmp[608504] bool[10]))
    (506568 return ret[506566])
  }
  { scopeless type
    bool[10]
  }
  function RAtomicT[51636](?).compareExchange[50156](arg _mt[51672]:_MT[238], arg this[51670]:RAtomicT[51636](?), ref arg expected[50153] :
  (372163 call T _mt[243] this[51670]), arg desired[50159] :
  (372168 call T _mt[243] this[51670]), param arg success[50163]:memoryOrder[187012], param arg failure[50167]:memoryOrder[187012]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506582] "RVV" "temp"
    function atomic_cmpxchg[50182](ref arg expected[50179] :
    (372180 call T _mt[243] this[51670]), ref arg desired[50185] :
    (372185 call T _mt[243] this[51670]), arg l[50192] :
    (50191 call int(64)[13] 32), arg obj[50196]:c_void_ptr[149], ref arg result[50203] :
    (50202 call bool[10] 32), arg succ[50207]:memory_order[186653], arg fail[50211]:memory_order[186653], arg _chpl_cname[50219]:string[26] =
    unknown call_tmp[608519] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506576] "RVV" "temp"
      (506578 return ret[506576])
    }
    { scopeless type
      void[4]
    }
    unknown te[50225] "dead at end of block" "insert auto destroy"
    (540714 'init var' te[50225] expected[50153])
    (50228 'end of statement')
    unknown ret[50233] "dead at end of block" "insert auto destroy"
    unknown call_tmp[608524] "expr temp" "maybe param" "maybe type" "temp"
    (608527 'move' call_tmp[608524](50232 call bool[10] 32))
    (540716 'default init var' ret[50233] call_tmp[608524])
    (50236 'end of statement')
    unknown td[50238] "dead at end of block" "insert auto destroy"
    (540718 'init var' td[50238] desired[50159])
    (50241 'end of statement')
    unknown call_tmp[608531] "expr temp" "maybe param" "maybe type" "temp"
    (608534 'move' call_tmp[608531](50248 call(372196 call (partial) _localeid _mt[243] this[51670])))
    unknown call_tmp[608538] "expr temp" "maybe param" "maybe type" "temp"
    (608541 'move' call_tmp[608538](50251 call(372200 call (partial) _addr _mt[243] this[51670])))
    unknown call_tmp[608543] "expr temp" "maybe param" "maybe type" "temp"
    (608546 'move' call_tmp[608543](50256 call c_memory_order success[50163]))
    unknown call_tmp[608548] "expr temp" "maybe param" "maybe type" "temp"
    (608551 'move' call_tmp[608548](50260 call c_memory_order failure[50167]))
    (50261 call atomic_cmpxchg te[50225] td[50238] call_tmp[608531] call_tmp[608538] ret[50233] call_tmp[608543] call_tmp[608548])
    (474502 'end of statement' te[50225] td[50238] ret[50233])
    unknown call_tmp[608553] "expr temp" "maybe param" "maybe type" "temp"
    (608556 'move' call_tmp[608553](50264 call ! ret[50233]))
    unknown call_tmp[608558] "expr temp" "maybe param" "maybe type" "temp"
    (608561 'move' call_tmp[608558](50271 call _cond_test call_tmp[608553]))
    if call_tmp[608558]
    {
      (50268 call = expected[50153] te[50225])
      (474506 'end of statement' te[50225])
    }
    unknown call_tmp[608563] "expr temp" "maybe param" "maybe type" "temp"
    (608566 'move' call_tmp[608563](50278 call _cast bool[10] ret[50233]))
    (506588 'move' ret[506582](506587 'coerce' call_tmp[608563] bool[10]))
    gotoReturn _end_compareExchange[506580] _end_compareExchange[506580]
    (474508 'end of statement' ret[50233])
    label _end_compareExchange[506580]
    (506584 return ret[506582])
  }
  { scopeless type
    bool[10]
  }
  function RAtomicT[51636](?).compareExchangeWeak[50291](arg _mt[51676]:_MT[238], arg this[51674]:RAtomicT[51636](?), ref arg expected[50288] :
  (372212 call T _mt[243] this[51674]), arg desired[50294] :
  (372217 call T _mt[243] this[51674]), param arg order[50302]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506594] "RVV" "temp"
    unknown call_tmp[608574] "expr temp" "maybe param" "maybe type" "temp"
    (608577 'move' call_tmp[608574](50315 call(50308 call (partial) compareExchange _mt[243] this[51674]) expected[50288] desired[50294] order[50302]))
    (506600 'move' ret[506594](506599 'coerce' call_tmp[608574] bool[10]))
    (506596 return ret[506594])
  }
  { scopeless type
    bool[10]
  }
  function RAtomicT[51636](?).compareExchangeWeak[50328](arg _mt[51680]:_MT[238], arg this[51678]:RAtomicT[51636](?), ref arg expected[50325] :
  (372226 call T _mt[243] this[51678]), arg desired[50331] :
  (372231 call T _mt[243] this[51678]), param arg success[50335]:memoryOrder[187012], param arg failure[50339]:memoryOrder[187012]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506604] "RVV" "temp"
    unknown call_tmp[608585] "expr temp" "maybe param" "maybe type" "temp"
    (608588 'move' call_tmp[608585](50352 call(50344 call (partial) compareExchange _mt[243] this[51678]) expected[50325] desired[50331] success[50335] failure[50339]))
    (506610 'move' ret[506604](506609 'coerce' call_tmp[608585] bool[10]))
    (506606 return ret[506604])
  }
  { scopeless type
    bool[10]
  }
  function RAtomicT[51636](?).compareAndSwap[50365](arg _mt[51684]:_MT[238], arg this[51682]:RAtomicT[51636](?), arg expected[50362] :
  (372242 call T _mt[243] this[51682]), arg desired[50368] :
  (372247 call T _mt[243] this[51682]), param arg order[50376]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506620] "RVV" "temp"
    function atomic_cmpxchg[50392](ref arg expected[50389] :
    (372258 call T _mt[243] this[51682]), ref arg desired[50395] :
    (372263 call T _mt[243] this[51682]), arg l[50402] :
    (50401 call int(64)[13] 32), arg obj[50406]:c_void_ptr[149], ref arg result[50413] :
    (50412 call bool[10] 32), arg succ[50417]:memory_order[186653], arg fail[50421]:memory_order[186653], arg _chpl_cname[50429]:string[26] =
    unknown call_tmp[608600] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506614] "RVV" "temp"
      (506616 return ret[506614])
    }
    { scopeless type
      void[4]
    }
    unknown ret[50438] "dead at end of block" "insert auto destroy"
    unknown call_tmp[608605] "expr temp" "maybe param" "maybe type" "temp"
    (608608 'move' call_tmp[608605](50437 call bool[10] 32))
    (540720 'default init var' ret[50438] call_tmp[608605])
    (50441 'end of statement')
    unknown te[50443] "dead at end of block" "insert auto destroy"
    (540722 'init var' te[50443] expected[50362])
    (50446 'end of statement')
    unknown td[50448] "dead at end of block" "insert auto destroy"
    (540724 'init var' td[50448] desired[50368])
    (50451 'end of statement')
    unknown call_tmp[608612] "expr temp" "maybe param" "maybe type" "temp"
    (608615 'move' call_tmp[608612](50458 call(372274 call (partial) _localeid _mt[243] this[51682])))
    unknown call_tmp[608619] "expr temp" "maybe param" "maybe type" "temp"
    (608622 'move' call_tmp[608619](50461 call(372278 call (partial) _addr _mt[243] this[51682])))
    unknown call_tmp[608624] "expr temp" "maybe param" "maybe type" "temp"
    (608627 'move' call_tmp[608624](50466 call c_memory_order order[50376]))
    unknown call_tmp[608629] "expr temp" "maybe param" "maybe type" "temp"
    (608632 'move' call_tmp[608629](50471 call readableOrder order[50376]))
    unknown call_tmp[608634] "expr temp" "maybe param" "maybe type" "temp"
    (608637 'move' call_tmp[608634](50473 call c_memory_order call_tmp[608629]))
    (50474 call atomic_cmpxchg te[50443] td[50448] call_tmp[608612] call_tmp[608619] ret[50438] call_tmp[608624] call_tmp[608634])
    (474512 'end of statement' te[50443] td[50448] ret[50438])
    unknown call_tmp[608639] "expr temp" "maybe param" "maybe type" "temp"
    (608642 'move' call_tmp[608639](50478 call _cast bool[10] ret[50438]))
    (506626 'move' ret[506620](506625 'coerce' call_tmp[608639] bool[10]))
    gotoReturn _end_compareAndSwap[506618] _end_compareAndSwap[506618]
    (474516 'end of statement' ret[50438])
    label _end_compareAndSwap[506618]
    (506622 return ret[506620])
  }
  { scopeless type
    bool[10]
  }
  function RAtomicT[51636](?).fetchAdd[50491](arg _mt[51688]:_MT[238], arg this[51686]:RAtomicT[51636](?), arg value[50488] :
  (372287 call T _mt[243] this[51686]), param arg order[50498]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506638] "RVV" "temp"
    function atomic_fetch_add[50514](ref arg op[50511] :
    (372303 call T _mt[243] this[51686]), arg l[50520] :
    (50519 call int(64)[13] 32), arg obj[50524]:c_void_ptr[149], ref arg result[50528] :
    (372309 call T _mt[243] this[51686]), arg order[50532]:memory_order[186653], arg _chpl_cname[50540]:string[26] =
    unknown call_tmp[608652] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506632] "RVV" "temp"
      (506634 return ret[506632])
    }
    { scopeless type
      void[4]
    }
    unknown ret[50546] "dead at end of block" "insert auto destroy"
    unknown call_tmp[608659] "expr temp" "maybe param" "maybe type" "temp"
    (608662 'move' call_tmp[608659](372315 call T _mt[243] this[51686]))
    (540726 'default init var' ret[50546] call_tmp[608659])
    (50549 'end of statement')
    unknown v[50551] "dead at end of block" "insert auto destroy"
    (540728 'init var' v[50551] value[50488])
    (50554 'end of statement')
    unknown call_tmp[608666] "expr temp" "maybe param" "maybe type" "temp"
    (608669 'move' call_tmp[608666](50560 call(372321 call (partial) _localeid _mt[243] this[51686])))
    unknown call_tmp[608673] "expr temp" "maybe param" "maybe type" "temp"
    (608676 'move' call_tmp[608673](50563 call(372325 call (partial) _addr _mt[243] this[51686])))
    unknown call_tmp[608678] "expr temp" "maybe param" "maybe type" "temp"
    (608681 'move' call_tmp[608678](50568 call c_memory_order order[50498]))
    (50569 call atomic_fetch_add v[50551] call_tmp[608666] call_tmp[608673] ret[50546] call_tmp[608678])
    (474518 'end of statement' v[50551] ret[50546])
    unknown call_tmp[608685] "expr temp" "maybe param" "maybe type" "temp"
    (608688 'move' call_tmp[608685](506643 call T _mt[243] this[51686]))
    (506647 'move' ret[506638](506646 'coerce' ret[50546] call_tmp[608685]))
    gotoReturn _end_fetchAdd[506636] _end_fetchAdd[506636]
    (474521 'end of statement' ret[50546])
    label _end_fetchAdd[506636]
    (506640 return ret[506638])
  }
  { scopeless type
    (372293 call T _mt[243] this[51686])
  }
  function RAtomicT[51636](?).add[50583](arg _mt[51692]:_MT[238], arg this[51690]:RAtomicT[51636](?), arg value[50580] :
  (372333 call T _mt[243] this[51690]), param arg order[50590]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506659] "RVV" "temp"
    function atomic_add[50620](ref arg op[50617] :
    (372344 call T _mt[243] this[51690]), arg l[50626] :
    (50625 call int(64)[13] 32), arg obj[50630]:c_void_ptr[149], arg order[50634]:memory_order[186653], arg _chpl_cname[50642]:string[26] =
    unknown call_tmp[608698] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506653] "RVV" "temp"
      (506655 return ret[506653])
    }
    { scopeless type
      void[4]
    }
    unknown v[50648] "dead at end of block" "insert auto destroy"
    (540730 'init var' v[50648] value[50580])
    (50651 'end of statement')
    unknown call_tmp[608705] "expr temp" "maybe param" "maybe type" "temp"
    (608708 'move' call_tmp[608705](50657 call(372352 call (partial) _localeid _mt[243] this[51690])))
    unknown call_tmp[608712] "expr temp" "maybe param" "maybe type" "temp"
    (608715 'move' call_tmp[608712](50660 call(372356 call (partial) _addr _mt[243] this[51690])))
    unknown call_tmp[608717] "expr temp" "maybe param" "maybe type" "temp"
    (608720 'move' call_tmp[608717](50664 call c_memory_order order[50590]))
    (50665 call atomic_add v[50648] call_tmp[608705] call_tmp[608712] call_tmp[608717])
    (474523 'end of statement' v[50648])
    (506661 return ret[506659])
  }
  { scopeless type
    void[4]
  }
  function RAtomicT[51636](?).fetchSub[50676](arg _mt[51696]:_MT[238], arg this[51694]:RAtomicT[51636](?), arg value[50673] :
  (372362 call T _mt[243] this[51694]), param arg order[50683]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506671] "RVV" "temp"
    function atomic_fetch_sub[50699](ref arg op[50696] :
    (372378 call T _mt[243] this[51694]), arg l[50705] :
    (50704 call int(64)[13] 32), arg obj[50709]:c_void_ptr[149], ref arg result[50713] :
    (372384 call T _mt[243] this[51694]), arg order[50717]:memory_order[186653], arg _chpl_cname[50725]:string[26] =
    unknown call_tmp[608730] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506665] "RVV" "temp"
      (506667 return ret[506665])
    }
    { scopeless type
      void[4]
    }
    unknown ret[50731] "dead at end of block" "insert auto destroy"
    unknown call_tmp[608737] "expr temp" "maybe param" "maybe type" "temp"
    (608740 'move' call_tmp[608737](372390 call T _mt[243] this[51694]))
    (540732 'default init var' ret[50731] call_tmp[608737])
    (50734 'end of statement')
    unknown v[50736] "dead at end of block" "insert auto destroy"
    (540734 'init var' v[50736] value[50673])
    (50739 'end of statement')
    unknown call_tmp[608744] "expr temp" "maybe param" "maybe type" "temp"
    (608747 'move' call_tmp[608744](50745 call(372396 call (partial) _localeid _mt[243] this[51694])))
    unknown call_tmp[608751] "expr temp" "maybe param" "maybe type" "temp"
    (608754 'move' call_tmp[608751](50748 call(372400 call (partial) _addr _mt[243] this[51694])))
    unknown call_tmp[608756] "expr temp" "maybe param" "maybe type" "temp"
    (608759 'move' call_tmp[608756](50753 call c_memory_order order[50683]))
    (50754 call atomic_fetch_sub v[50736] call_tmp[608744] call_tmp[608751] ret[50731] call_tmp[608756])
    (474525 'end of statement' v[50736] ret[50731])
    unknown call_tmp[608763] "expr temp" "maybe param" "maybe type" "temp"
    (608766 'move' call_tmp[608763](506676 call T _mt[243] this[51694]))
    (506680 'move' ret[506671](506679 'coerce' ret[50731] call_tmp[608763]))
    gotoReturn _end_fetchSub[506669] _end_fetchSub[506669]
    (474528 'end of statement' ret[50731])
    label _end_fetchSub[506669]
    (506673 return ret[506671])
  }
  { scopeless type
    (372368 call T _mt[243] this[51694])
  }
  function RAtomicT[51636](?).sub[50768](arg _mt[51700]:_MT[238], arg this[51698]:RAtomicT[51636](?), arg value[50765] :
  (372408 call T _mt[243] this[51698]), param arg order[50775]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506692] "RVV" "temp"
    function atomic_sub[50805](ref arg op[50802] :
    (372419 call T _mt[243] this[51698]), arg l[50811] :
    (50810 call int(64)[13] 32), arg obj[50815]:c_void_ptr[149], arg order[50819]:memory_order[186653], arg _chpl_cname[50827]:string[26] =
    unknown call_tmp[608776] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506686] "RVV" "temp"
      (506688 return ret[506686])
    }
    { scopeless type
      void[4]
    }
    unknown v[50833] "dead at end of block" "insert auto destroy"
    (540736 'init var' v[50833] value[50765])
    (50836 'end of statement')
    unknown call_tmp[608783] "expr temp" "maybe param" "maybe type" "temp"
    (608786 'move' call_tmp[608783](50842 call(372427 call (partial) _localeid _mt[243] this[51698])))
    unknown call_tmp[608790] "expr temp" "maybe param" "maybe type" "temp"
    (608793 'move' call_tmp[608790](50845 call(372431 call (partial) _addr _mt[243] this[51698])))
    unknown call_tmp[608795] "expr temp" "maybe param" "maybe type" "temp"
    (608798 'move' call_tmp[608795](50849 call c_memory_order order[50775]))
    (50850 call atomic_sub v[50833] call_tmp[608783] call_tmp[608790] call_tmp[608795])
    (474530 'end of statement' v[50833])
    (506694 return ret[506692])
  }
  { scopeless type
    void[4]
  }
  function RAtomicT[51636](?).fetchOr[50861](arg _mt[51704]:_MT[238], arg this[51702]:RAtomicT[51636](?), arg value[50858] :
  (372437 call T _mt[243] this[51702]), param arg order[50868]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506704] "RVV" "temp"
    unknown call_tmp[608804] "expr temp" "maybe param" "maybe type" "temp"
    (608807 'move' call_tmp[608804](372448 call T _mt[243] this[51702]))
    unknown call_tmp[608809] "expr temp" "maybe param" "maybe type" "temp"
    (608812 'move' call_tmp[608809](50876 call isIntegral call_tmp[608804]))
    unknown call_tmp[608814] "expr temp" "maybe param" "maybe type" "temp"
    (608817 'move' call_tmp[608814](50877 call ! call_tmp[608809]))
    unknown call_tmp[608819] "expr temp" "maybe param" "maybe type" "temp"
    (608822 'move' call_tmp[608819](50884 call _cond_test call_tmp[608814]))
    if call_tmp[608819]
    {
      (50882 call compilerError "fetchOr is only defined for integer atomic types")
    }
    function atomic_fetch_or[50901](ref arg op[50898] :
    (372458 call T _mt[243] this[51702]), arg l[50907] :
    (50906 call int(64)[13] 32), arg obj[50911]:c_void_ptr[149], ref arg result[50915] :
    (372464 call T _mt[243] this[51702]), arg order[50919]:memory_order[186653], arg _chpl_cname[50927]:string[26] =
    unknown call_tmp[608830] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506698] "RVV" "temp"
      (506700 return ret[506698])
    }
    { scopeless type
      void[4]
    }
    unknown ret[50932] "dead at end of block" "insert auto destroy"
    unknown call_tmp[608837] "expr temp" "maybe param" "maybe type" "temp"
    (608840 'move' call_tmp[608837](372470 call T _mt[243] this[51702]))
    (540738 'default init var' ret[50932] call_tmp[608837])
    (50935 'end of statement')
    unknown v[50937] "dead at end of block" "insert auto destroy"
    (540740 'init var' v[50937] value[50858])
    (50940 'end of statement')
    unknown call_tmp[608844] "expr temp" "maybe param" "maybe type" "temp"
    (608847 'move' call_tmp[608844](50946 call(372476 call (partial) _localeid _mt[243] this[51702])))
    unknown call_tmp[608851] "expr temp" "maybe param" "maybe type" "temp"
    (608854 'move' call_tmp[608851](50949 call(372480 call (partial) _addr _mt[243] this[51702])))
    unknown call_tmp[608856] "expr temp" "maybe param" "maybe type" "temp"
    (608859 'move' call_tmp[608856](50954 call c_memory_order order[50868]))
    (50955 call atomic_fetch_or v[50937] call_tmp[608844] call_tmp[608851] ret[50932] call_tmp[608856])
    (474533 'end of statement' v[50937] ret[50932])
    unknown call_tmp[608863] "expr temp" "maybe param" "maybe type" "temp"
    (608866 'move' call_tmp[608863](506709 call T _mt[243] this[51702]))
    (506713 'move' ret[506704](506712 'coerce' ret[50932] call_tmp[608863]))
    gotoReturn _end_fetchOr[506702] _end_fetchOr[506702]
    (474536 'end of statement' ret[50932])
    label _end_fetchOr[506702]
    (506706 return ret[506704])
  }
  { scopeless type
    (372443 call T _mt[243] this[51702])
  }
  function RAtomicT[51636](?).or[50969](arg _mt[51708]:_MT[238], arg this[51706]:RAtomicT[51636](?), arg value[50966] :
  (372488 call T _mt[243] this[51706]), param arg order[50976]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506725] "RVV" "temp"
    unknown call_tmp[608874] "expr temp" "maybe param" "maybe type" "temp"
    (608877 'move' call_tmp[608874](372494 call T _mt[243] this[51706]))
    unknown call_tmp[608879] "expr temp" "maybe param" "maybe type" "temp"
    (608882 'move' call_tmp[608879](50984 call isIntegral call_tmp[608874]))
    unknown call_tmp[608884] "expr temp" "maybe param" "maybe type" "temp"
    (608887 'move' call_tmp[608884](50985 call ! call_tmp[608879]))
    unknown call_tmp[608889] "expr temp" "maybe param" "maybe type" "temp"
    (608892 'move' call_tmp[608889](50992 call _cond_test call_tmp[608884]))
    if call_tmp[608889]
    {
      (50990 call compilerError "or is only defined for integer atomic types")
    }
    function atomic_or[51025](ref arg op[51022] :
    (372504 call T _mt[243] this[51706]), arg l[51031] :
    (51030 call int(64)[13] 32), arg obj[51035]:c_void_ptr[149], arg order[51039]:memory_order[186653], arg _chpl_cname[51047]:string[26] =
    unknown call_tmp[608898] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506719] "RVV" "temp"
      (506721 return ret[506719])
    }
    { scopeless type
      void[4]
    }
    unknown v[51052] "dead at end of block" "insert auto destroy"
    (540742 'init var' v[51052] value[50966])
    (51055 'end of statement')
    unknown call_tmp[608905] "expr temp" "maybe param" "maybe type" "temp"
    (608908 'move' call_tmp[608905](51061 call(372512 call (partial) _localeid _mt[243] this[51706])))
    unknown call_tmp[608912] "expr temp" "maybe param" "maybe type" "temp"
    (608915 'move' call_tmp[608912](51064 call(372516 call (partial) _addr _mt[243] this[51706])))
    unknown call_tmp[608917] "expr temp" "maybe param" "maybe type" "temp"
    (608920 'move' call_tmp[608917](51068 call c_memory_order order[50976]))
    (51069 call atomic_or v[51052] call_tmp[608905] call_tmp[608912] call_tmp[608917])
    (474539 'end of statement' v[51052])
    (506727 return ret[506725])
  }
  { scopeless type
    void[4]
  }
  function RAtomicT[51636](?).fetchAnd[51080](arg _mt[51712]:_MT[238], arg this[51710]:RAtomicT[51636](?), arg value[51077] :
  (372522 call T _mt[243] this[51710]), param arg order[51087]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506737] "RVV" "temp"
    unknown call_tmp[608926] "expr temp" "maybe param" "maybe type" "temp"
    (608929 'move' call_tmp[608926](372533 call T _mt[243] this[51710]))
    unknown call_tmp[608931] "expr temp" "maybe param" "maybe type" "temp"
    (608934 'move' call_tmp[608931](51095 call isIntegral call_tmp[608926]))
    unknown call_tmp[608936] "expr temp" "maybe param" "maybe type" "temp"
    (608939 'move' call_tmp[608936](51096 call ! call_tmp[608931]))
    unknown call_tmp[608941] "expr temp" "maybe param" "maybe type" "temp"
    (608944 'move' call_tmp[608941](51103 call _cond_test call_tmp[608936]))
    if call_tmp[608941]
    {
      (51101 call compilerError "fetchAnd is only defined for integer atomic types")
    }
    function atomic_fetch_and[51120](ref arg op[51117] :
    (372543 call T _mt[243] this[51710]), arg l[51126] :
    (51125 call int(64)[13] 32), arg obj[51130]:c_void_ptr[149], ref arg result[51134] :
    (372549 call T _mt[243] this[51710]), arg order[51138]:memory_order[186653], arg _chpl_cname[51146]:string[26] =
    unknown call_tmp[608952] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506731] "RVV" "temp"
      (506733 return ret[506731])
    }
    { scopeless type
      void[4]
    }
    unknown ret[51151] "dead at end of block" "insert auto destroy"
    unknown call_tmp[608959] "expr temp" "maybe param" "maybe type" "temp"
    (608962 'move' call_tmp[608959](372555 call T _mt[243] this[51710]))
    (540744 'default init var' ret[51151] call_tmp[608959])
    (51154 'end of statement')
    unknown v[51156] "dead at end of block" "insert auto destroy"
    (540746 'init var' v[51156] value[51077])
    (51159 'end of statement')
    unknown call_tmp[608966] "expr temp" "maybe param" "maybe type" "temp"
    (608969 'move' call_tmp[608966](51165 call(372561 call (partial) _localeid _mt[243] this[51710])))
    unknown call_tmp[608973] "expr temp" "maybe param" "maybe type" "temp"
    (608976 'move' call_tmp[608973](51168 call(372565 call (partial) _addr _mt[243] this[51710])))
    unknown call_tmp[608978] "expr temp" "maybe param" "maybe type" "temp"
    (608981 'move' call_tmp[608978](51173 call c_memory_order order[51087]))
    (51174 call atomic_fetch_and v[51156] call_tmp[608966] call_tmp[608973] ret[51151] call_tmp[608978])
    (474542 'end of statement' v[51156] ret[51151])
    unknown call_tmp[608985] "expr temp" "maybe param" "maybe type" "temp"
    (608988 'move' call_tmp[608985](506742 call T _mt[243] this[51710]))
    (506746 'move' ret[506737](506745 'coerce' ret[51151] call_tmp[608985]))
    gotoReturn _end_fetchAnd[506735] _end_fetchAnd[506735]
    (474545 'end of statement' ret[51151])
    label _end_fetchAnd[506735]
    (506739 return ret[506737])
  }
  { scopeless type
    (372528 call T _mt[243] this[51710])
  }
  function RAtomicT[51636](?).and[51188](arg _mt[51716]:_MT[238], arg this[51714]:RAtomicT[51636](?), arg value[51185] :
  (372573 call T _mt[243] this[51714]), param arg order[51195]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506758] "RVV" "temp"
    unknown call_tmp[608996] "expr temp" "maybe param" "maybe type" "temp"
    (608999 'move' call_tmp[608996](372579 call T _mt[243] this[51714]))
    unknown call_tmp[609001] "expr temp" "maybe param" "maybe type" "temp"
    (609004 'move' call_tmp[609001](51203 call isIntegral call_tmp[608996]))
    unknown call_tmp[609006] "expr temp" "maybe param" "maybe type" "temp"
    (609009 'move' call_tmp[609006](51204 call ! call_tmp[609001]))
    unknown call_tmp[609011] "expr temp" "maybe param" "maybe type" "temp"
    (609014 'move' call_tmp[609011](51211 call _cond_test call_tmp[609006]))
    if call_tmp[609011]
    {
      (51209 call compilerError "and is only defined for integer atomic types")
    }
    function atomic_and[51244](ref arg op[51241] :
    (372589 call T _mt[243] this[51714]), arg l[51250] :
    (51249 call int(64)[13] 32), arg obj[51254]:c_void_ptr[149], arg order[51258]:memory_order[186653], arg _chpl_cname[51266]:string[26] =
    unknown call_tmp[609020] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506752] "RVV" "temp"
      (506754 return ret[506752])
    }
    { scopeless type
      void[4]
    }
    unknown v[51271] "dead at end of block" "insert auto destroy"
    (540748 'init var' v[51271] value[51185])
    (51274 'end of statement')
    unknown call_tmp[609027] "expr temp" "maybe param" "maybe type" "temp"
    (609030 'move' call_tmp[609027](51280 call(372597 call (partial) _localeid _mt[243] this[51714])))
    unknown call_tmp[609034] "expr temp" "maybe param" "maybe type" "temp"
    (609037 'move' call_tmp[609034](51283 call(372601 call (partial) _addr _mt[243] this[51714])))
    unknown call_tmp[609039] "expr temp" "maybe param" "maybe type" "temp"
    (609042 'move' call_tmp[609039](51287 call c_memory_order order[51195]))
    (51288 call atomic_and v[51271] call_tmp[609027] call_tmp[609034] call_tmp[609039])
    (474548 'end of statement' v[51271])
    (506760 return ret[506758])
  }
  { scopeless type
    void[4]
  }
  function RAtomicT[51636](?).fetchXor[51299](arg _mt[51720]:_MT[238], arg this[51718]:RAtomicT[51636](?), arg value[51296] :
  (372607 call T _mt[243] this[51718]), param arg order[51306]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506770] "RVV" "temp"
    unknown call_tmp[609048] "expr temp" "maybe param" "maybe type" "temp"
    (609051 'move' call_tmp[609048](372618 call T _mt[243] this[51718]))
    unknown call_tmp[609053] "expr temp" "maybe param" "maybe type" "temp"
    (609056 'move' call_tmp[609053](51314 call isIntegral call_tmp[609048]))
    unknown call_tmp[609058] "expr temp" "maybe param" "maybe type" "temp"
    (609061 'move' call_tmp[609058](51315 call ! call_tmp[609053]))
    unknown call_tmp[609063] "expr temp" "maybe param" "maybe type" "temp"
    (609066 'move' call_tmp[609063](51322 call _cond_test call_tmp[609058]))
    if call_tmp[609063]
    {
      (51320 call compilerError "fetchXor is only defined for integer atomic types")
    }
    function atomic_fetch_xor[51339](ref arg op[51336] :
    (372628 call T _mt[243] this[51718]), arg l[51345] :
    (51344 call int(64)[13] 32), arg obj[51349]:c_void_ptr[149], ref arg result[51353] :
    (372634 call T _mt[243] this[51718]), arg order[51357]:memory_order[186653], arg _chpl_cname[51365]:string[26] =
    unknown call_tmp[609074] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506764] "RVV" "temp"
      (506766 return ret[506764])
    }
    { scopeless type
      void[4]
    }
    unknown ret[51370] "dead at end of block" "insert auto destroy"
    unknown call_tmp[609081] "expr temp" "maybe param" "maybe type" "temp"
    (609084 'move' call_tmp[609081](372640 call T _mt[243] this[51718]))
    (540750 'default init var' ret[51370] call_tmp[609081])
    (51373 'end of statement')
    unknown v[51375] "dead at end of block" "insert auto destroy"
    (540752 'init var' v[51375] value[51296])
    (51378 'end of statement')
    unknown call_tmp[609088] "expr temp" "maybe param" "maybe type" "temp"
    (609091 'move' call_tmp[609088](51384 call(372646 call (partial) _localeid _mt[243] this[51718])))
    unknown call_tmp[609095] "expr temp" "maybe param" "maybe type" "temp"
    (609098 'move' call_tmp[609095](51387 call(372650 call (partial) _addr _mt[243] this[51718])))
    unknown call_tmp[609100] "expr temp" "maybe param" "maybe type" "temp"
    (609103 'move' call_tmp[609100](51392 call c_memory_order order[51306]))
    (51393 call atomic_fetch_xor v[51375] call_tmp[609088] call_tmp[609095] ret[51370] call_tmp[609100])
    (474551 'end of statement' v[51375] ret[51370])
    unknown call_tmp[609107] "expr temp" "maybe param" "maybe type" "temp"
    (609110 'move' call_tmp[609107](506775 call T _mt[243] this[51718]))
    (506779 'move' ret[506770](506778 'coerce' ret[51370] call_tmp[609107]))
    gotoReturn _end_fetchXor[506768] _end_fetchXor[506768]
    (474554 'end of statement' ret[51370])
    label _end_fetchXor[506768]
    (506772 return ret[506770])
  }
  { scopeless type
    (372613 call T _mt[243] this[51718])
  }
  function RAtomicT[51636](?).xor[51407](arg _mt[51724]:_MT[238], arg this[51722]:RAtomicT[51636](?), arg value[51404] :
  (372658 call T _mt[243] this[51722]), param arg order[51414]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506791] "RVV" "temp"
    unknown call_tmp[609118] "expr temp" "maybe param" "maybe type" "temp"
    (609121 'move' call_tmp[609118](372664 call T _mt[243] this[51722]))
    unknown call_tmp[609123] "expr temp" "maybe param" "maybe type" "temp"
    (609126 'move' call_tmp[609123](51422 call isIntegral call_tmp[609118]))
    unknown call_tmp[609128] "expr temp" "maybe param" "maybe type" "temp"
    (609131 'move' call_tmp[609128](51423 call ! call_tmp[609123]))
    unknown call_tmp[609133] "expr temp" "maybe param" "maybe type" "temp"
    (609136 'move' call_tmp[609133](51430 call _cond_test call_tmp[609128]))
    if call_tmp[609133]
    {
      (51428 call compilerError "xor is only defined for integer atomic types")
    }
    function atomic_xor[51463](ref arg op[51460] :
    (372674 call T _mt[243] this[51722]), arg l[51469] :
    (51468 call int(64)[13] 32), arg obj[51473]:c_void_ptr[149], arg order[51477]:memory_order[186653], arg _chpl_cname[51485]:string[26] =
    unknown call_tmp[609142] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506785] "RVV" "temp"
      (506787 return ret[506785])
    }
    { scopeless type
      void[4]
    }
    unknown v[51490] "dead at end of block" "insert auto destroy"
    (540754 'init var' v[51490] value[51404])
    (51493 'end of statement')
    unknown call_tmp[609149] "expr temp" "maybe param" "maybe type" "temp"
    (609152 'move' call_tmp[609149](51499 call(372682 call (partial) _localeid _mt[243] this[51722])))
    unknown call_tmp[609156] "expr temp" "maybe param" "maybe type" "temp"
    (609159 'move' call_tmp[609156](51502 call(372686 call (partial) _addr _mt[243] this[51722])))
    unknown call_tmp[609161] "expr temp" "maybe param" "maybe type" "temp"
    (609164 'move' call_tmp[609161](51506 call c_memory_order order[51414]))
    (51507 call atomic_xor v[51490] call_tmp[609149] call_tmp[609156] call_tmp[609161])
    (474557 'end of statement' v[51490])
    (506793 return ret[506791])
  }
  { scopeless type
    void[4]
  }
  function RAtomicT[51636](?).waitFor[51518](arg _mt[51728]:_MT[238], const arg this[51726]:RAtomicT[51636](?), arg value[51515] :
  (372692 call T _mt[243] this[51726]), param arg order[51525]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506797] "RVV" "temp"
    const tmp[51607] "const" "temp"
    unknown call_tmp[609168] "expr temp" "maybe param" "maybe type" "temp"
    (609171 'move' call_tmp[609168](51604 '_wide_get_locale' this[51726]))
    (51609 'move' tmp[51607](51605 'deref' call_tmp[609168]))
    (934184 call on_fn[934180] tmp[51607])
    function on_fn[934180](const in arg dummy_locale_arg[934182]:chpl_localeID_t[209352]) : void[4] "on"
    {
      {
        {
          unknown tmp[51550] "temp"
          unknown call_tmp[609175] "expr temp" "maybe param" "maybe type" "temp"
          (609178 'move' call_tmp[609175](51585 call(51582 call (partial) read _mt[243] this[51726])(order = relaxed[187010])))
          unknown call_tmp[609180] "expr temp" "maybe param" "maybe type" "temp"
          (609183 'move' call_tmp[609180](51580 call != call_tmp[609175] value[51515]))
          (51592 'move' tmp[51550](51578 call _cond_test call_tmp[609180]))
          WhileDo[51555]
          {
            {
              (51547 call chpl_task_yield)
            }
            label _continueLabel[51553]
            unknown call_tmp[609187] "expr temp" "maybe param" "maybe type" "temp"
            (609190 'move' call_tmp[609187](51566 call(51563 call (partial) read _mt[243] this[51726])(order = relaxed[187010])))
            unknown call_tmp[609192] "expr temp" "maybe param" "maybe type" "temp"
            (609195 'move' call_tmp[609192](51561 call != call_tmp[609187] value[51515]))
            (51573 'move' tmp[51550](51559 call _cond_test call_tmp[609192]))
            tmp[51550]
          }
          label _breakLabel[51554]
        }
        unknown call_tmp[609197] "expr temp" "maybe param" "maybe type" "temp"
        (609200 'move' call_tmp[609197](51600 call c_memory_order order[51525]))
        (51602 call chpl_atomic_thread_fence call_tmp[609197])
      }
      (934187 return _void[55])
    }
    {
    }
    (506799 return ret[506797])
  }
  { scopeless type
    void[4]
  }
  function RAtomicT[51636](?).writeThis[51623](arg _mt[51732]:_MT[238], const arg this[51730]:RAtomicT[51636](?), arg x[51621]:_any[178](?)) : _unknown[51] throws "atomic type" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[609204] "expr temp" "maybe param" "maybe type" "temp"
    (609207 'move' call_tmp[609204](51628 call(372702 call (partial) read _mt[243] this[51730])))
    (51629 call <~> x[51621] call_tmp[609204])
    (506801 return _void[55])
  }
  function RAtomicT[51636](?).T[764294](arg _mt[764296]:_MT[238], arg this[764298]:RAtomicT[51636](?)) type : _unknown[51] "atomic type" "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[764317] "RVV" "temp" "type variable"
    unknown call_tmp[764331] "expr temp" "maybe param" "maybe type" "temp"
    (764334 'move' call_tmp[764331](764303 'is bound' this[764298] c"T"))
    if call_tmp[764331]
    {
      unknown call_tmp[764336] "expr temp" "maybe param" "maybe type" "temp"
      (764339 'move' call_tmp[764336](764302 '.v' this[764298] c"T"))
      (764322 'move' ret[764317](764321 'deref' call_tmp[764336]))
      gotoReturn _end_T[764315] _end_T[764315]
    }
    {
      (764327 'move' ret[764317](764326 'deref' _uninstantiated[258]))
      gotoReturn _end_T[764315] _end_T[764315]
    }
    label _end_T[764315]
    (764319 return ret[764317])
  }
  function RAtomicT[51636](?).T[764341](arg _mt[764343]:_MT[238], arg this[764345]:RAtomicT[51636](?)) type : _unknown[51] "atomic type" "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[764364] "RVV" "temp" "type variable"
    unknown call_tmp[764378] "expr temp" "maybe param" "maybe type" "temp"
    (764381 'move' call_tmp[764378](764350 'is bound' this[764345] c"T"))
    if call_tmp[764378]
    {
      unknown call_tmp[764383] "expr temp" "maybe param" "maybe type" "temp"
      (764386 'move' call_tmp[764383](764349 '.v' this[764345] c"T"))
      (764369 'move' ret[764364](764368 'deref' call_tmp[764383]))
      gotoReturn _end_T[764362] _end_T[764362]
    }
    {
      (764374 'move' ret[764364](764373 'deref' _uninstantiated[258]))
      gotoReturn _end_T[764362] _end_T[764362]
    }
    label _end_T[764362]
    (764366 return ret[764364])
  }
  function RAtomicT[51636](?)._v[764388](arg _mt[764390]:_MT[238], ref arg this[764392]:RAtomicT[51636](?)) ref : _unknown[51] "atomic type" "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[764402] "RVV" "temp"
    unknown call_tmp[764409] "expr temp" "maybe param" "maybe type" "temp"
    (764412 'move' call_tmp[764409](764396 '.' this[764392] c"_v"))
    (764407 'move' ret[764402](764406 'addr of' call_tmp[764409]))
    (764404 return ret[764402])
  }
  function RAtomicT[51636](?).init[764414](arg _mt[764416]:_MT[238], ref arg this[764417]:RAtomicT[51636](?), arg T[764420]:_any[178](?), in arg _v[764429] :
  T[764420] =
  _typeDefaultT[250]) : void[4] "compiler generated" "last resort" "method" "primary method" "suppress lvalue error"
  {
    (764443 'init field' this[764417] c"T" T[764420])
    (764446 'init field' this[764417] c"_v" _v[764429])
    (764449 'end of statement')
    (764450 return _void[55])
  }
  function RAtomicT[51636](?).deinit[764452](arg _mt[764454]:_MT[238], arg this[764456]:RAtomicT[51636](?)) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (764464 return _void[55])
  }
  function chpl_fields_are_comparable[764478](arg _arg1[764480]:RAtomicT[51636](?), arg _arg2[764481]:RAtomicT[51636](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[764499]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[764506] "expr temp" "maybe param" "maybe type" "temp"
    (764509 'move' call_tmp[764506](764484 call _v _mt[243] _arg1[764480]))
    unknown call_tmp[764511] "expr temp" "maybe param" "maybe type" "temp"
    (764514 'move' call_tmp[764511](764488 call _v _mt[243] _arg2[764481]))
    unknown call_tmp[764516] "expr temp" "maybe param" "maybe type" "temp"
    (764519 'move' call_tmp[764516](764492 'call resolves' c"==" call_tmp[764506] call_tmp[764511]))
    (764504 'move' ret[764499](764503 'deref' call_tmp[764516]))
    (764501 return ret[764499])
  }
  function ==[764466](arg _arg1[764468]:RAtomicT[51636](?), arg _arg2[764469]:RAtomicT[51636](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[764548]:bool[10] "RVV" "temp"
    unknown call_tmp[764560] "expr temp" "maybe param" "maybe type" "temp"
    (764563 'move' call_tmp[764560](764527 call _v _mt[243] _arg1[764468]))
    unknown call_tmp[764565] "expr temp" "maybe param" "maybe type" "temp"
    (764568 'move' call_tmp[764565](764531 call _v _mt[243] _arg2[764469]))
    unknown call_tmp[764570] "expr temp" "maybe param" "maybe type" "temp"
    (764573 'move' call_tmp[764570](764535 call != call_tmp[764560] call_tmp[764565]))
    if call_tmp[764570]
    {
      (764553 'move' ret[764548](764552 'deref' 0))
      gotoReturn _end_==[764546] _end_==[764546]
    }
    (764558 'move' ret[764548](764557 'deref' 1))
    label _end_==[764546]
    (764550 return ret[764548])
  }
  where {
    unknown call_tmp[764575] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (764578 'move' call_tmp[764575](764472 'typeof' _arg1[764468]))
    unknown call_tmp[764580] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (764583 'move' call_tmp[764580](764474 'typeof' _arg2[764469]))
    unknown call_tmp[764585] "expr temp" "maybe param" "maybe type" "temp"
    (764588 'move' call_tmp[764585](764476 call == call_tmp[764575] call_tmp[764580]))
    unknown call_tmp[764590] "expr temp" "maybe param" "maybe type" "temp"
    (764593 'move' call_tmp[764590](764521 call chpl_fields_are_comparable[764478] _arg1[764468] _arg2[764469]))
    (764525 '&' call_tmp[764585] call_tmp[764590])
  }
  function chpl_fields_are_comparable[764607](arg _arg1[764609]:RAtomicT[51636](?), arg _arg2[764610]:RAtomicT[51636](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[764628]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[764635] "expr temp" "maybe param" "maybe type" "temp"
    (764638 'move' call_tmp[764635](764613 call _v _mt[243] _arg1[764609]))
    unknown call_tmp[764640] "expr temp" "maybe param" "maybe type" "temp"
    (764643 'move' call_tmp[764640](764617 call _v _mt[243] _arg2[764610]))
    unknown call_tmp[764645] "expr temp" "maybe param" "maybe type" "temp"
    (764648 'move' call_tmp[764645](764621 'call resolves' c"!=" call_tmp[764635] call_tmp[764640]))
    (764633 'move' ret[764628](764632 'deref' call_tmp[764645]))
    (764630 return ret[764628])
  }
  function !=[764595](arg _arg1[764597]:RAtomicT[51636](?), arg _arg2[764598]:RAtomicT[51636](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[764677]:bool[10] "RVV" "temp"
    unknown call_tmp[764689] "expr temp" "maybe param" "maybe type" "temp"
    (764692 'move' call_tmp[764689](764656 call _v _mt[243] _arg1[764597]))
    unknown call_tmp[764694] "expr temp" "maybe param" "maybe type" "temp"
    (764697 'move' call_tmp[764694](764660 call _v _mt[243] _arg2[764598]))
    unknown call_tmp[764699] "expr temp" "maybe param" "maybe type" "temp"
    (764702 'move' call_tmp[764699](764664 call != call_tmp[764689] call_tmp[764694]))
    if call_tmp[764699]
    {
      (764682 'move' ret[764677](764681 'deref' 1))
      gotoReturn _end_!=[764675] _end_!=[764675]
    }
    (764687 'move' ret[764677](764686 'deref' 0))
    label _end_!=[764675]
    (764679 return ret[764677])
  }
  where {
    unknown call_tmp[764704] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (764707 'move' call_tmp[764704](764601 'typeof' _arg1[764597]))
    unknown call_tmp[764709] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (764712 'move' call_tmp[764709](764603 'typeof' _arg2[764598]))
    unknown call_tmp[764714] "expr temp" "maybe param" "maybe type" "temp"
    (764717 'move' call_tmp[764714](764605 call == call_tmp[764704] call_tmp[764709]))
    unknown call_tmp[764719] "expr temp" "maybe param" "maybe type" "temp"
    (764722 'move' call_tmp[764719](764650 call chpl_fields_are_comparable[764607] _arg1[764597] _arg2[764598]))
    (764654 '&' call_tmp[764714] call_tmp[764719])
  }
  function chpl_fields_are_comparable[764736](arg _arg1[764738]:RAtomicT[51636](?), arg _arg2[764739]:RAtomicT[51636](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[764757]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[764764] "expr temp" "maybe param" "maybe type" "temp"
    (764767 'move' call_tmp[764764](764742 call _v _mt[243] _arg1[764738]))
    unknown call_tmp[764769] "expr temp" "maybe param" "maybe type" "temp"
    (764772 'move' call_tmp[764769](764746 call _v _mt[243] _arg2[764739]))
    unknown call_tmp[764774] "expr temp" "maybe param" "maybe type" "temp"
    (764777 'move' call_tmp[764774](764750 'call resolves' c"<" call_tmp[764764] call_tmp[764769]))
    (764762 'move' ret[764757](764761 'deref' call_tmp[764774]))
    (764759 return ret[764757])
  }
  function <[764724](arg _arg1[764726]:RAtomicT[51636](?), arg _arg2[764727]:RAtomicT[51636](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[764821]:bool[10] "RVV" "temp"
    unknown call_tmp[764838] "expr temp" "maybe param" "maybe type" "temp"
    (764841 'move' call_tmp[764838](764785 call _v _mt[243] _arg1[764726]))
    unknown call_tmp[764843] "expr temp" "maybe param" "maybe type" "temp"
    (764846 'move' call_tmp[764843](764789 call _v _mt[243] _arg2[764727]))
    unknown call_tmp[764848] "expr temp" "maybe param" "maybe type" "temp"
    (764851 'move' call_tmp[764848](764793 call < call_tmp[764838] call_tmp[764843]))
    if call_tmp[764848]
    {
      (764826 'move' ret[764821](764825 'deref' 1))
      gotoReturn _end_<[764819] _end_<[764819]
    }
    unknown call_tmp[764853] "expr temp" "maybe param" "maybe type" "temp"
    (764856 'move' call_tmp[764853](764799 call _v _mt[243] _arg1[764726]))
    unknown call_tmp[764858] "expr temp" "maybe param" "maybe type" "temp"
    (764861 'move' call_tmp[764858](764803 call _v _mt[243] _arg2[764727]))
    unknown call_tmp[764863] "expr temp" "maybe param" "maybe type" "temp"
    (764866 'move' call_tmp[764863](764807 call > call_tmp[764853] call_tmp[764858]))
    if call_tmp[764863]
    {
      (764831 'move' ret[764821](764830 'deref' 0))
      gotoReturn _end_<[764819] _end_<[764819]
    }
    (764836 'move' ret[764821](764835 'deref' 0))
    label _end_<[764819]
    (764823 return ret[764821])
  }
  where {
    unknown call_tmp[764868] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (764871 'move' call_tmp[764868](764730 'typeof' _arg1[764726]))
    unknown call_tmp[764873] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (764876 'move' call_tmp[764873](764732 'typeof' _arg2[764727]))
    unknown call_tmp[764878] "expr temp" "maybe param" "maybe type" "temp"
    (764881 'move' call_tmp[764878](764734 call == call_tmp[764868] call_tmp[764873]))
    unknown call_tmp[764883] "expr temp" "maybe param" "maybe type" "temp"
    (764886 'move' call_tmp[764883](764779 call chpl_fields_are_comparable[764736] _arg1[764726] _arg2[764727]))
    (764783 '&' call_tmp[764878] call_tmp[764883])
  }
  function chpl_fields_are_comparable[764900](arg _arg1[764902]:RAtomicT[51636](?), arg _arg2[764903]:RAtomicT[51636](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[764921]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[764928] "expr temp" "maybe param" "maybe type" "temp"
    (764931 'move' call_tmp[764928](764906 call _v _mt[243] _arg1[764902]))
    unknown call_tmp[764933] "expr temp" "maybe param" "maybe type" "temp"
    (764936 'move' call_tmp[764933](764910 call _v _mt[243] _arg2[764903]))
    unknown call_tmp[764938] "expr temp" "maybe param" "maybe type" "temp"
    (764941 'move' call_tmp[764938](764914 'call resolves' c"<=" call_tmp[764928] call_tmp[764933]))
    (764926 'move' ret[764921](764925 'deref' call_tmp[764938]))
    (764923 return ret[764921])
  }
  function <=[764888](arg _arg1[764890]:RAtomicT[51636](?), arg _arg2[764891]:RAtomicT[51636](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[764985]:bool[10] "RVV" "temp"
    unknown call_tmp[765002] "expr temp" "maybe param" "maybe type" "temp"
    (765005 'move' call_tmp[765002](764949 call _v _mt[243] _arg1[764890]))
    unknown call_tmp[765007] "expr temp" "maybe param" "maybe type" "temp"
    (765010 'move' call_tmp[765007](764953 call _v _mt[243] _arg2[764891]))
    unknown call_tmp[765012] "expr temp" "maybe param" "maybe type" "temp"
    (765015 'move' call_tmp[765012](764957 call < call_tmp[765002] call_tmp[765007]))
    if call_tmp[765012]
    {
      (764990 'move' ret[764985](764989 'deref' 1))
      gotoReturn _end_<=[764983] _end_<=[764983]
    }
    unknown call_tmp[765017] "expr temp" "maybe param" "maybe type" "temp"
    (765020 'move' call_tmp[765017](764963 call _v _mt[243] _arg1[764890]))
    unknown call_tmp[765022] "expr temp" "maybe param" "maybe type" "temp"
    (765025 'move' call_tmp[765022](764967 call _v _mt[243] _arg2[764891]))
    unknown call_tmp[765027] "expr temp" "maybe param" "maybe type" "temp"
    (765030 'move' call_tmp[765027](764971 call > call_tmp[765017] call_tmp[765022]))
    if call_tmp[765027]
    {
      (764995 'move' ret[764985](764994 'deref' 0))
      gotoReturn _end_<=[764983] _end_<=[764983]
    }
    (765000 'move' ret[764985](764999 'deref' 1))
    label _end_<=[764983]
    (764987 return ret[764985])
  }
  where {
    unknown call_tmp[765032] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (765035 'move' call_tmp[765032](764894 'typeof' _arg1[764890]))
    unknown call_tmp[765037] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (765040 'move' call_tmp[765037](764896 'typeof' _arg2[764891]))
    unknown call_tmp[765042] "expr temp" "maybe param" "maybe type" "temp"
    (765045 'move' call_tmp[765042](764898 call == call_tmp[765032] call_tmp[765037]))
    unknown call_tmp[765047] "expr temp" "maybe param" "maybe type" "temp"
    (765050 'move' call_tmp[765047](764943 call chpl_fields_are_comparable[764900] _arg1[764890] _arg2[764891]))
    (764947 '&' call_tmp[765042] call_tmp[765047])
  }
  function chpl_fields_are_comparable[765064](arg _arg1[765066]:RAtomicT[51636](?), arg _arg2[765067]:RAtomicT[51636](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[765085]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[765092] "expr temp" "maybe param" "maybe type" "temp"
    (765095 'move' call_tmp[765092](765070 call _v _mt[243] _arg1[765066]))
    unknown call_tmp[765097] "expr temp" "maybe param" "maybe type" "temp"
    (765100 'move' call_tmp[765097](765074 call _v _mt[243] _arg2[765067]))
    unknown call_tmp[765102] "expr temp" "maybe param" "maybe type" "temp"
    (765105 'move' call_tmp[765102](765078 'call resolves' c">" call_tmp[765092] call_tmp[765097]))
    (765090 'move' ret[765085](765089 'deref' call_tmp[765102]))
    (765087 return ret[765085])
  }
  function >[765052](arg _arg1[765054]:RAtomicT[51636](?), arg _arg2[765055]:RAtomicT[51636](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[765149]:bool[10] "RVV" "temp"
    unknown call_tmp[765166] "expr temp" "maybe param" "maybe type" "temp"
    (765169 'move' call_tmp[765166](765113 call _v _mt[243] _arg1[765054]))
    unknown call_tmp[765171] "expr temp" "maybe param" "maybe type" "temp"
    (765174 'move' call_tmp[765171](765117 call _v _mt[243] _arg2[765055]))
    unknown call_tmp[765176] "expr temp" "maybe param" "maybe type" "temp"
    (765179 'move' call_tmp[765176](765121 call > call_tmp[765166] call_tmp[765171]))
    if call_tmp[765176]
    {
      (765154 'move' ret[765149](765153 'deref' 1))
      gotoReturn _end_>[765147] _end_>[765147]
    }
    unknown call_tmp[765181] "expr temp" "maybe param" "maybe type" "temp"
    (765184 'move' call_tmp[765181](765127 call _v _mt[243] _arg1[765054]))
    unknown call_tmp[765186] "expr temp" "maybe param" "maybe type" "temp"
    (765189 'move' call_tmp[765186](765131 call _v _mt[243] _arg2[765055]))
    unknown call_tmp[765191] "expr temp" "maybe param" "maybe type" "temp"
    (765194 'move' call_tmp[765191](765135 call < call_tmp[765181] call_tmp[765186]))
    if call_tmp[765191]
    {
      (765159 'move' ret[765149](765158 'deref' 0))
      gotoReturn _end_>[765147] _end_>[765147]
    }
    (765164 'move' ret[765149](765163 'deref' 0))
    label _end_>[765147]
    (765151 return ret[765149])
  }
  where {
    unknown call_tmp[765196] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (765199 'move' call_tmp[765196](765058 'typeof' _arg1[765054]))
    unknown call_tmp[765201] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (765204 'move' call_tmp[765201](765060 'typeof' _arg2[765055]))
    unknown call_tmp[765206] "expr temp" "maybe param" "maybe type" "temp"
    (765209 'move' call_tmp[765206](765062 call == call_tmp[765196] call_tmp[765201]))
    unknown call_tmp[765211] "expr temp" "maybe param" "maybe type" "temp"
    (765214 'move' call_tmp[765211](765107 call chpl_fields_are_comparable[765064] _arg1[765054] _arg2[765055]))
    (765111 '&' call_tmp[765206] call_tmp[765211])
  }
  function chpl_fields_are_comparable[765228](arg _arg1[765230]:RAtomicT[51636](?), arg _arg2[765231]:RAtomicT[51636](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[765249]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[765256] "expr temp" "maybe param" "maybe type" "temp"
    (765259 'move' call_tmp[765256](765234 call _v _mt[243] _arg1[765230]))
    unknown call_tmp[765261] "expr temp" "maybe param" "maybe type" "temp"
    (765264 'move' call_tmp[765261](765238 call _v _mt[243] _arg2[765231]))
    unknown call_tmp[765266] "expr temp" "maybe param" "maybe type" "temp"
    (765269 'move' call_tmp[765266](765242 'call resolves' c">=" call_tmp[765256] call_tmp[765261]))
    (765254 'move' ret[765249](765253 'deref' call_tmp[765266]))
    (765251 return ret[765249])
  }
  function >=[765216](arg _arg1[765218]:RAtomicT[51636](?), arg _arg2[765219]:RAtomicT[51636](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[765313]:bool[10] "RVV" "temp"
    unknown call_tmp[765330] "expr temp" "maybe param" "maybe type" "temp"
    (765333 'move' call_tmp[765330](765277 call _v _mt[243] _arg1[765218]))
    unknown call_tmp[765335] "expr temp" "maybe param" "maybe type" "temp"
    (765338 'move' call_tmp[765335](765281 call _v _mt[243] _arg2[765219]))
    unknown call_tmp[765340] "expr temp" "maybe param" "maybe type" "temp"
    (765343 'move' call_tmp[765340](765285 call > call_tmp[765330] call_tmp[765335]))
    if call_tmp[765340]
    {
      (765318 'move' ret[765313](765317 'deref' 1))
      gotoReturn _end_>=[765311] _end_>=[765311]
    }
    unknown call_tmp[765345] "expr temp" "maybe param" "maybe type" "temp"
    (765348 'move' call_tmp[765345](765291 call _v _mt[243] _arg1[765218]))
    unknown call_tmp[765350] "expr temp" "maybe param" "maybe type" "temp"
    (765353 'move' call_tmp[765350](765295 call _v _mt[243] _arg2[765219]))
    unknown call_tmp[765355] "expr temp" "maybe param" "maybe type" "temp"
    (765358 'move' call_tmp[765355](765299 call < call_tmp[765345] call_tmp[765350]))
    if call_tmp[765355]
    {
      (765323 'move' ret[765313](765322 'deref' 0))
      gotoReturn _end_>=[765311] _end_>=[765311]
    }
    (765328 'move' ret[765313](765327 'deref' 1))
    label _end_>=[765311]
    (765315 return ret[765313])
  }
  where {
    unknown call_tmp[765360] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (765363 'move' call_tmp[765360](765222 'typeof' _arg1[765218]))
    unknown call_tmp[765365] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (765368 'move' call_tmp[765365](765224 'typeof' _arg2[765219]))
    unknown call_tmp[765370] "expr temp" "maybe param" "maybe type" "temp"
    (765373 'move' call_tmp[765370](765226 call == call_tmp[765360] call_tmp[765365]))
    unknown call_tmp[765375] "expr temp" "maybe param" "maybe type" "temp"
    (765378 'move' call_tmp[765375](765271 call chpl_fields_are_comparable[765228] _arg1[765218] _arg2[765219]))
    (765275 '&' call_tmp[765370] call_tmp[765375])
  }
  function chpl__defaultHash[765380](arg r[765382]:RAtomicT[51636](?)) : _unknown[51] "compiler generated" "last resort"
  {
    unknown ret[765404] "RVV" "temp"
    unknown call_tmp[765411] "expr temp" "maybe param" "maybe type" "temp"
    (765414 'move' call_tmp[765411](765390 call _v _mt[243] r[765382]))
    unknown call_tmp[765416] "expr temp" "maybe param" "maybe type" "temp"
    (765419 'move' call_tmp[765416](765394 call chpl__defaultHash call_tmp[765411]))
    unknown call_tmp[765421] "expr temp" "maybe param" "maybe type" "temp"
    (765424 'move' call_tmp[765421](765384 call T _mt[243] r[765382]))
    unknown call_tmp[765426] "expr temp" "maybe param" "maybe type" "temp"
    (765429 'move' call_tmp[765426](765388 call chpl__defaultHash call_tmp[765421]))
    unknown call_tmp[765431] "expr temp" "maybe param" "maybe type" "temp"
    (765434 'move' call_tmp[765431](765396 call chpl__defaultHashCombine call_tmp[765416] call_tmp[765426] 2))
    (765409 'move' ret[765404](765408 'deref' call_tmp[765431]))
    (765406 return ret[765404])
  }
  type RAtomicT[51636](?) unknown T[49744] "type variable" unknown _v[49748] T[49744]
  function =[51741](ref arg a[51738]:RAtomicBool[49676], const arg b[51744]:RAtomicBool[49676]) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    unknown call_tmp[609213] "expr temp" "maybe param" "maybe type" "temp"
    (609216 'move' call_tmp[609213](51756 call(51752 call (partial) read _mt[243] b[51744])))
    (51758 call(51748 call (partial) write _mt[243] a[51738]) call_tmp[609213])
    (506803 return _void[55])
  }
  function =[51769](ref arg a[51766]:RAtomicBool[49676], arg b[51771]:_any[178](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (51776 call compilerError "Cannot directly assign atomic variables")
    (506805 return _void[55])
  }
  function =[51787](ref arg a[51784]:RAtomicT[51636](?), const arg b[51790]:RAtomicT[51636](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    unknown call_tmp[609222] "expr temp" "maybe param" "maybe type" "temp"
    (609225 'move' call_tmp[609222](51802 call(51798 call (partial) read _mt[243] b[51790])))
    (51804 call(51794 call (partial) write _mt[243] a[51784]) call_tmp[609222])
    (506807 return _void[55])
  }
  function =[51815](ref arg a[51812]:RAtomicT[51636](?), arg b[51817]:_any[178](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (51822 call compilerError "Cannot directly assign atomic variables")
    (506809 return _void[55])
  }
  function +[51833](arg a[51830]:RAtomicT[51636](?), arg b[51835]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[506813] "RVV" "temp"
    (51840 call compilerError "Cannot directly add atomic variables")
    (474566 'end of statement')
    (506818 'move' ret[506813](506817 'deref' a[51830]))
    (506815 return ret[506813])
  }
  function -[51854](arg a[51851]:RAtomicT[51636](?), arg b[51856]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[506822] "RVV" "temp"
    (51861 call compilerError "Cannot directly subtract atomic variables")
    (474568 'end of statement')
    (506827 'move' ret[506822](506826 'deref' a[51851]))
    (506824 return ret[506822])
  }
  function *[51875](arg a[51872]:RAtomicT[51636](?), arg b[51877]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[506831] "RVV" "temp"
    (51882 call compilerError "Cannot directly multiply atomic variables")
    (474570 'end of statement')
    (506836 'move' ret[506831](506835 'deref' a[51872]))
    (506833 return ret[506831])
  }
  function /[51896](arg a[51893]:RAtomicT[51636](?), arg b[51898]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[506840] "RVV" "temp"
    (51903 call compilerError "Cannot directly divide atomic variables")
    (474572 'end of statement')
    (506845 'move' ret[506840](506844 'deref' a[51893]))
    (506842 return ret[506840])
  }
  function %[51917](arg a[51914]:RAtomicT[51636](?), arg b[51919]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[506849] "RVV" "temp"
    (51924 call compilerError "Cannot directly divide atomic variables")
    (474574 'end of statement')
    (506854 'move' ret[506849](506853 'deref' a[51914]))
    (506851 return ret[506849])
  }
  (355081 'used modules list'(48468 'use' ChapelStandard[20267])(48472 'use' MemConsistency[186648]))
}