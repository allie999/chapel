AST dump for NetworkAtomics after pass createTaskFunctions.
Module use list: ChapelStandard MemConsistency 

{
  function chpl__init_NetworkAtomics[415933]() : void[4] "insert line file info" "module init"
  {
    (506810 return _void[55])
  }
  function externFunc[48477](param arg s[48474]:string[26], arg T[48479]:_any[178](?)) param : _unknown[51] "private"
  {
    unknown ret[506255] "RVV" "param" "temp"
    unknown call_tmp[607744] "expr temp" "maybe param" "maybe type" "temp"
    (607747 'move' call_tmp[607744](48484 call isInt T[48479]))
    unknown call_tmp[607749] "expr temp" "maybe param" "maybe type" "temp"
    (607752 'move' call_tmp[607749](48535 call _cond_test call_tmp[607744]))
    if call_tmp[607749]
    {
      unknown call_tmp[607754] "expr temp" "maybe param" "maybe type" "temp"
      (607757 'move' call_tmp[607754](48503 call + "chpl_comm_atomic_" s[48474]))
      unknown call_tmp[607759] "expr temp" "maybe param" "maybe type" "temp"
      (607762 'move' call_tmp[607759](48522 call + call_tmp[607754] "_int"))
      unknown call_tmp[607764] "expr temp" "maybe param" "maybe type" "temp"
      (607767 'move' call_tmp[607764](48527 call numBits T[48479]))
      unknown call_tmp[607769] "expr temp" "maybe param" "maybe type" "temp"
      (607772 'move' call_tmp[607769](48529 call _cast string[26] call_tmp[607764]))
      unknown call_tmp[607774] "expr temp" "maybe param" "maybe type" "temp"
      (607777 'move' call_tmp[607774](48531 call + call_tmp[607759] call_tmp[607769]))
      (506260 'move' ret[506255](506259 'deref' call_tmp[607774]))
      gotoReturn _end_externFunc[506253] _end_externFunc[506253]
    }
    unknown call_tmp[607779] "expr temp" "maybe param" "maybe type" "temp"
    (607782 'move' call_tmp[607779](48544 call isUint T[48479]))
    unknown call_tmp[607784] "expr temp" "maybe param" "maybe type" "temp"
    (607787 'move' call_tmp[607784](48579 call _cond_test call_tmp[607779]))
    if call_tmp[607784]
    {
      unknown call_tmp[607789] "expr temp" "maybe param" "maybe type" "temp"
      (607792 'move' call_tmp[607789](48547 call + "chpl_comm_atomic_" s[48474]))
      unknown call_tmp[607794] "expr temp" "maybe param" "maybe type" "temp"
      (607797 'move' call_tmp[607794](48566 call + call_tmp[607789] "_uint"))
      unknown call_tmp[607799] "expr temp" "maybe param" "maybe type" "temp"
      (607802 'move' call_tmp[607799](48571 call numBits T[48479]))
      unknown call_tmp[607804] "expr temp" "maybe param" "maybe type" "temp"
      (607807 'move' call_tmp[607804](48573 call _cast string[26] call_tmp[607799]))
      unknown call_tmp[607809] "expr temp" "maybe param" "maybe type" "temp"
      (607812 'move' call_tmp[607809](48575 call + call_tmp[607794] call_tmp[607804]))
      (506265 'move' ret[506255](506264 'deref' call_tmp[607809]))
      gotoReturn _end_externFunc[506253] _end_externFunc[506253]
    }
    unknown call_tmp[607814] "expr temp" "maybe param" "maybe type" "temp"
    (607817 'move' call_tmp[607814](48587 call isReal T[48479]))
    unknown call_tmp[607819] "expr temp" "maybe param" "maybe type" "temp"
    (607822 'move' call_tmp[607819](48606 call _cond_test call_tmp[607814]))
    if call_tmp[607819]
    {
      unknown call_tmp[607824] "expr temp" "maybe param" "maybe type" "temp"
      (607827 'move' call_tmp[607824](48590 call + "chpl_comm_atomic_" s[48474]))
      unknown call_tmp[607829] "expr temp" "maybe param" "maybe type" "temp"
      (607832 'move' call_tmp[607829](48593 call + call_tmp[607824] "_real"))
      unknown call_tmp[607834] "expr temp" "maybe param" "maybe type" "temp"
      (607837 'move' call_tmp[607834](48598 call numBits T[48479]))
      unknown call_tmp[607839] "expr temp" "maybe param" "maybe type" "temp"
      (607842 'move' call_tmp[607839](48600 call _cast string[26] call_tmp[607834]))
      unknown call_tmp[607844] "expr temp" "maybe param" "maybe type" "temp"
      (607847 'move' call_tmp[607844](48602 call + call_tmp[607829] call_tmp[607839]))
      (506270 'move' ret[506255](506269 'deref' call_tmp[607844]))
      gotoReturn _end_externFunc[506253] _end_externFunc[506253]
    }
    label _end_externFunc[506253]
    (506257 return ret[506255])
  }
  function RAtomicBool[49673].init=[48628](arg _mt[49677]:_MT[238], ref arg this[49675]:RAtomicBool[49673], arg other[48625]:RAtomicBool[49673]) : void[4] "atomic type" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[607849] "expr temp" "maybe param" "maybe type" "temp"
    (607852 'move' call_tmp[607849](48645 call int(64)[13] 64))
    unknown call_tmp[607856] "expr temp" "maybe param" "maybe type" "temp"
    (607859 'move' call_tmp[607856](48641 call(48637 call (partial) read _mt[243] other[48625])))
    unknown call_tmp[607861] "maybe param" "maybe type" "temp"
    (607864 'move' call_tmp[607861](48646 call _cast call_tmp[607849] call_tmp[607856]))
    unknown call_tmp[607866] "maybe param" "maybe type" "temp"
    (607869 'move' call_tmp[607866](454656 call int(64)[13] 64))
    unknown tmp[454653] "temp"
    (454658 'init var' tmp[454653] call_tmp[607861] call_tmp[607866])
    (454660 'init field' this[49675] c"_v" tmp[454653])
    (474402 'end of statement')
    (506274 return _void[55])
  }
  function RAtomicBool[49673].init=[48660](arg _mt[49681]:_MT[238], ref arg this[49679]:RAtomicBool[49673], arg other[48657]:bool[10]) : void[4] "atomic type" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[607871] "expr temp" "maybe param" "maybe type" "temp"
    (607874 'move' call_tmp[607871](48670 call int(64)[13] 64))
    unknown call_tmp[607876] "maybe param" "maybe type" "temp"
    (607879 'move' call_tmp[607876](48671 call _cast call_tmp[607871] other[48657]))
    unknown call_tmp[607881] "maybe param" "maybe type" "temp"
    (607884 'move' call_tmp[607881](454667 call int(64)[13] 64))
    unknown tmp[454664] "temp"
    (454669 'init var' tmp[454664] call_tmp[607876] call_tmp[607881])
    (454671 'init field' this[49679] c"_v" tmp[454664])
    (474403 'end of statement')
    (506276 return _void[55])
  }
  function RAtomicBool[49673]._localeid[48681](arg _mt[49685]:_MT[238], arg this[49683]:RAtomicBool[49673]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506280] "RVV" "temp"
    unknown call_tmp[607886] "expr temp" "maybe param" "maybe type" "temp"
    (607889 'move' call_tmp[607886](48695 call int(64)[13] 32))
    unknown call_tmp[607893] "expr temp" "maybe param" "maybe type" "temp"
    (607896 'move' call_tmp[607893](371848 call _v _mt[243] this[49683]))
    unknown call_tmp[607898] "expr temp" "maybe param" "maybe type" "temp"
    (607901 'move' call_tmp[607898](48691 '_wide_get_node' call_tmp[607893]))
    unknown call_tmp[607903] "expr temp" "maybe param" "maybe type" "temp"
    (607906 'move' call_tmp[607903](48696 call _cast call_tmp[607886] call_tmp[607898]))
    unknown call_tmp[607908] "expr temp" "maybe param" "maybe type" "temp"
    (607911 'move' call_tmp[607908](506285 call int(64)[13] 32))
    (506288 'move' ret[506280](506287 'coerce' call_tmp[607903] call_tmp[607908]))
    (506282 return ret[506280])
  }
  { scopeless type
    (48686 call int(64)[13] 32)
  }
  function RAtomicBool[49673]._addr[48706](arg _mt[49689]:_MT[238], arg this[49687]:RAtomicBool[49673]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506292] "RVV" "temp"
    unknown call_tmp[607915] "expr temp" "maybe param" "maybe type" "temp"
    (607918 'move' call_tmp[607915](371854 call _v _mt[243] this[49687]))
    unknown call_tmp[607920] "expr temp" "maybe param" "maybe type" "temp"
    (607923 'move' call_tmp[607920](48712 '_wide_get_addr' call_tmp[607915]))
    (506298 'move' ret[506292](506297 'coerce' call_tmp[607920] c_void_ptr[149]))
    (506294 return ret[506292])
  }
  { scopeless type
    c_void_ptr[149]
  }
  function RAtomicBool[49673].read[48730](arg _mt[49693]:_MT[238], const arg this[49691]:RAtomicBool[49673], param arg order[48726]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506308] "RVV" "temp"
    function atomic_read[48764](ref arg result[48761] :
    (48760 call int(64)[13] 64), arg l[48770] :
    (48769 call int(64)[13] 32), const arg obj[48774]:c_void_ptr[149], arg order[48778]:memory_order[186607], arg _chpl_cname[48786]:string[26] =
    unknown call_tmp[607925] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506302] "RVV" "temp"
      (506304 return ret[506302])
    }
    { scopeless type
      void[4]
    }
    unknown ret[48795] "dead at end of block" "insert auto destroy"
    unknown call_tmp[607930] "expr temp" "maybe param" "maybe type" "temp"
    (607933 'move' call_tmp[607930](48794 call int(64)[13] 64))
    (540631 'default init var' ret[48795] call_tmp[607930])
    (48798 'end of statement')
    unknown call_tmp[607937] "expr temp" "maybe param" "maybe type" "temp"
    (607940 'move' call_tmp[607937](48804 call(371864 call (partial) _localeid _mt[243] this[49691])))
    unknown call_tmp[607944] "expr temp" "maybe param" "maybe type" "temp"
    (607947 'move' call_tmp[607944](48807 call(371870 call (partial) _addr _mt[243] this[49691])))
    unknown call_tmp[607949] "expr temp" "maybe param" "maybe type" "temp"
    (607952 'move' call_tmp[607949](48811 call c_memory_order order[48726]))
    (48812 call atomic_read ret[48795] call_tmp[607937] call_tmp[607944] call_tmp[607949])
    (474406 'end of statement' ret[48795])
    unknown call_tmp[607954] "expr temp" "maybe param" "maybe type" "temp"
    (607957 'move' call_tmp[607954](48816 call _cast bool[10] ret[48795]))
    (506314 'move' ret[506308](506313 'coerce' call_tmp[607954] bool[10]))
    gotoReturn _end_read[506306] _end_read[506306]
    (474408 'end of statement' ret[48795])
    label _end_read[506306]
    (506310 return ret[506308])
  }
  { scopeless type
    bool[10]
  }
  function RAtomicBool[49673].write[48829](arg _mt[49697]:_MT[238], arg this[49695]:RAtomicBool[49673], arg value[48826]:bool[10], param arg order[48836]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506326] "RVV" "temp"
    function atomic_write[48872](ref arg desired[48869] :
    (48868 call int(64)[13] 64), arg l[48878] :
    (48877 call int(64)[13] 32), arg obj[48882]:c_void_ptr[149], arg order[48886]:memory_order[186607], arg _chpl_cname[48894]:string[26] =
    unknown call_tmp[607959] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506320] "RVV" "temp"
      (506322 return ret[506320])
    }
    { scopeless type
      void[4]
    }
    unknown call_tmp[607964] "expr temp" "maybe param" "maybe type" "temp"
    (607967 'move' call_tmp[607964](48903 call int(64)[13] 64))
    unknown call_tmp[607969] "maybe param" "maybe type" "temp"
    (607972 'move' call_tmp[607969](48904 call _cast call_tmp[607964] value[48826]))
    unknown v[48906] "dead at end of block" "insert auto destroy"
    (540633 'init var' v[48906] call_tmp[607969])
    (48909 'end of statement')
    unknown call_tmp[607976] "expr temp" "maybe param" "maybe type" "temp"
    (607979 'move' call_tmp[607976](48915 call(371881 call (partial) _localeid _mt[243] this[49695])))
    unknown call_tmp[607983] "expr temp" "maybe param" "maybe type" "temp"
    (607986 'move' call_tmp[607983](48918 call(371885 call (partial) _addr _mt[243] this[49695])))
    unknown call_tmp[607988] "expr temp" "maybe param" "maybe type" "temp"
    (607991 'move' call_tmp[607988](48922 call c_memory_order order[48836]))
    (48923 call atomic_write v[48906] call_tmp[607976] call_tmp[607983] call_tmp[607988])
    (474410 'end of statement' v[48906])
    (506328 return ret[506326])
  }
  { scopeless type
    void[4]
  }
  function RAtomicBool[49673].exchange[48934](arg _mt[49701]:_MT[238], arg this[49699]:RAtomicBool[49673], arg value[48931]:bool[10], param arg order[48941]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506338] "RVV" "temp"
    function atomic_xchg[48979](ref arg desired[48976] :
    (48975 call int(64)[13] 64), arg l[48985] :
    (48984 call int(64)[13] 32), arg obj[48989]:c_void_ptr[149], ref arg result[48996] :
    (48995 call int(64)[13] 64), arg order[49000]:memory_order[186607], arg _chpl_cname[49008]:string[26] =
    unknown call_tmp[607993] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506332] "RVV" "temp"
      (506334 return ret[506332])
    }
    { scopeless type
      void[4]
    }
    unknown ret[49017] "dead at end of block" "insert auto destroy"
    unknown call_tmp[607998] "expr temp" "maybe param" "maybe type" "temp"
    (608001 'move' call_tmp[607998](49016 call int(64)[13] 64))
    (540635 'default init var' ret[49017] call_tmp[607998])
    (49020 'end of statement')
    unknown call_tmp[608003] "expr temp" "maybe param" "maybe type" "temp"
    (608006 'move' call_tmp[608003](49025 call int(64)[13] 64))
    unknown call_tmp[608008] "maybe param" "maybe type" "temp"
    (608011 'move' call_tmp[608008](49026 call _cast call_tmp[608003] value[48931]))
    unknown v[49028] "dead at end of block" "insert auto destroy"
    (540637 'init var' v[49028] call_tmp[608008])
    (49031 'end of statement')
    unknown call_tmp[608015] "expr temp" "maybe param" "maybe type" "temp"
    (608018 'move' call_tmp[608015](49037 call(371895 call (partial) _localeid _mt[243] this[49699])))
    unknown call_tmp[608022] "expr temp" "maybe param" "maybe type" "temp"
    (608025 'move' call_tmp[608022](49040 call(371899 call (partial) _addr _mt[243] this[49699])))
    unknown call_tmp[608027] "expr temp" "maybe param" "maybe type" "temp"
    (608030 'move' call_tmp[608027](49045 call c_memory_order order[48941]))
    (49046 call atomic_xchg v[49028] call_tmp[608015] call_tmp[608022] ret[49017] call_tmp[608027])
    (474412 'end of statement' v[49028] ret[49017])
    unknown call_tmp[608032] "expr temp" "maybe param" "maybe type" "temp"
    (608035 'move' call_tmp[608032](49050 call _cast bool[10] ret[49017]))
    (506344 'move' ret[506338](506343 'coerce' call_tmp[608032] bool[10]))
    gotoReturn _end_exchange[506336] _end_exchange[506336]
    (474415 'end of statement' ret[49017])
    label _end_exchange[506336]
    (506340 return ret[506338])
  }
  { scopeless type
    bool[10]
  }
  function RAtomicBool[49673].compareExchange[49063](arg _mt[49705]:_MT[238], arg this[49703]:RAtomicBool[49673], ref arg expected[49060]:bool[10], arg desired[49066]:bool[10], param arg order[49074]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506350] "RVV" "temp"
    unknown call_tmp[608039] "expr temp" "maybe param" "maybe type" "temp"
    (608042 'move' call_tmp[608039](49090 call readableOrder order[49074]))
    unknown call_tmp[608044] "expr temp" "maybe param" "maybe type" "temp"
    (608047 'move' call_tmp[608044](49091 call(49080 call (partial) compareExchange _mt[243] this[49703]) expected[49060] desired[49066] order[49074] call_tmp[608039]))
    (506356 'move' ret[506350](506355 'coerce' call_tmp[608044] bool[10]))
    (506352 return ret[506350])
  }
  { scopeless type
    bool[10]
  }
  function RAtomicBool[49673].compareExchange[49104](arg _mt[49709]:_MT[238], arg this[49707]:RAtomicBool[49673], ref arg expected[49101]:bool[10], arg desired[49107]:bool[10], param arg success[49111]:memoryOrder[186966], param arg failure[49115]:memoryOrder[186966]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506366] "RVV" "temp"
    function atomic_cmpxchg[49152](ref arg expected[49149] :
    (49148 call int(64)[13] 64), ref arg desired[49158] :
    (49157 call int(64)[13] 64), arg l[49165] :
    (49164 call int(64)[13] 32), arg obj[49169]:c_void_ptr[149], ref arg result[49176] :
    (49175 call bool[10] 32), arg succ[49180]:memory_order[186607], arg fail[49184]:memory_order[186607], arg _chpl_cname[49192]:string[26] =
    unknown call_tmp[608049] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506360] "RVV" "temp"
      (506362 return ret[506360])
    }
    { scopeless type
      void[4]
    }
    unknown ret[49201] "dead at end of block" "insert auto destroy"
    unknown call_tmp[608054] "expr temp" "maybe param" "maybe type" "temp"
    (608057 'move' call_tmp[608054](49200 call bool[10] 32))
    (540639 'default init var' ret[49201] call_tmp[608054])
    (49204 'end of statement')
    unknown call_tmp[608059] "expr temp" "maybe param" "maybe type" "temp"
    (608062 'move' call_tmp[608059](49209 call int(64)[13] 64))
    unknown call_tmp[608064] "maybe param" "maybe type" "temp"
    (608067 'move' call_tmp[608064](49210 call _cast call_tmp[608059] expected[49101]))
    unknown te[49212] "dead at end of block" "insert auto destroy"
    (540641 'init var' te[49212] call_tmp[608064])
    (49215 'end of statement')
    unknown call_tmp[608069] "expr temp" "maybe param" "maybe type" "temp"
    (608072 'move' call_tmp[608069](49220 call int(64)[13] 64))
    unknown call_tmp[608074] "maybe param" "maybe type" "temp"
    (608077 'move' call_tmp[608074](49221 call _cast call_tmp[608069] desired[49107]))
    unknown td[49223] "dead at end of block" "insert auto destroy"
    (540643 'init var' td[49223] call_tmp[608074])
    (49226 'end of statement')
    unknown call_tmp[608081] "expr temp" "maybe param" "maybe type" "temp"
    (608084 'move' call_tmp[608081](49233 call(371920 call (partial) _localeid _mt[243] this[49707])))
    unknown call_tmp[608088] "expr temp" "maybe param" "maybe type" "temp"
    (608091 'move' call_tmp[608088](49236 call(371924 call (partial) _addr _mt[243] this[49707])))
    unknown call_tmp[608093] "expr temp" "maybe param" "maybe type" "temp"
    (608096 'move' call_tmp[608093](49241 call c_memory_order success[49111]))
    unknown call_tmp[608098] "expr temp" "maybe param" "maybe type" "temp"
    (608101 'move' call_tmp[608098](49245 call c_memory_order failure[49115]))
    (49246 call atomic_cmpxchg te[49212] td[49223] call_tmp[608081] call_tmp[608088] ret[49201] call_tmp[608093] call_tmp[608098])
    (474418 'end of statement' te[49212] td[49223] ret[49201])
    unknown call_tmp[608103] "expr temp" "maybe param" "maybe type" "temp"
    (608106 'move' call_tmp[608103](49249 call ! ret[49201]))
    unknown call_tmp[608108] "expr temp" "maybe param" "maybe type" "temp"
    (608111 'move' call_tmp[608108](49259 call _cond_test call_tmp[608103]))
    if call_tmp[608108]
    {
      unknown call_tmp[608113] "expr temp" "maybe param" "maybe type" "temp"
      (608116 'move' call_tmp[608113](49254 call _cast bool[10] te[49212]))
      (49256 call = expected[49101] call_tmp[608113])
      (474422 'end of statement' te[49212])
    }
    unknown call_tmp[608118] "expr temp" "maybe param" "maybe type" "temp"
    (608121 'move' call_tmp[608118](49266 call _cast bool[10] ret[49201]))
    (506372 'move' ret[506366](506371 'coerce' call_tmp[608118] bool[10]))
    gotoReturn _end_compareExchange[506364] _end_compareExchange[506364]
    (474424 'end of statement' ret[49201])
    label _end_compareExchange[506364]
    (506368 return ret[506366])
  }
  { scopeless type
    bool[10]
  }
  function RAtomicBool[49673].compareExchangeWeak[49279](arg _mt[49713]:_MT[238], arg this[49711]:RAtomicBool[49673], ref arg expected[49276]:bool[10], arg desired[49282]:bool[10], param arg order[49290]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506378] "RVV" "temp"
    unknown call_tmp[608125] "expr temp" "maybe param" "maybe type" "temp"
    (608128 'move' call_tmp[608125](49303 call(49296 call (partial) compareExchange _mt[243] this[49711]) expected[49276] desired[49282] order[49290]))
    (506384 'move' ret[506378](506383 'coerce' call_tmp[608125] bool[10]))
    (506380 return ret[506378])
  }
  { scopeless type
    bool[10]
  }
  function RAtomicBool[49673].compareExchangeWeak[49316](arg _mt[49717]:_MT[238], arg this[49715]:RAtomicBool[49673], ref arg expected[49313]:bool[10], arg desired[49319]:bool[10], param arg success[49323]:memoryOrder[186966], param arg failure[49327]:memoryOrder[186966]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506388] "RVV" "temp"
    unknown call_tmp[608132] "expr temp" "maybe param" "maybe type" "temp"
    (608135 'move' call_tmp[608132](49340 call(49332 call (partial) compareExchange _mt[243] this[49715]) expected[49313] desired[49319] success[49323] failure[49327]))
    (506394 'move' ret[506388](506393 'coerce' call_tmp[608132] bool[10]))
    (506390 return ret[506388])
  }
  { scopeless type
    bool[10]
  }
  function RAtomicBool[49673].compareAndSwap[49353](arg _mt[49721]:_MT[238], arg this[49719]:RAtomicBool[49673], arg expected[49350]:bool[10], arg desired[49356]:bool[10], param arg order[49364]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506404] "RVV" "temp"
    function atomic_cmpxchg[49386](ref arg expected[49383] :
    (49382 call int(64)[13] 64), ref arg desired[49392] :
    (49391 call int(64)[13] 64), arg l[49399] :
    (49398 call int(64)[13] 32), arg obj[49403]:c_void_ptr[149], ref arg result[49410] :
    (49409 call bool[10] 32), arg succ[49414]:memory_order[186607], arg fail[49418]:memory_order[186607], arg _chpl_cname[49426]:string[26] =
    unknown call_tmp[608137] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506398] "RVV" "temp"
      (506400 return ret[506398])
    }
    { scopeless type
      void[4]
    }
    unknown ret[49435] "dead at end of block" "insert auto destroy"
    unknown call_tmp[608142] "expr temp" "maybe param" "maybe type" "temp"
    (608145 'move' call_tmp[608142](49434 call bool[10] 32))
    (540645 'default init var' ret[49435] call_tmp[608142])
    (49438 'end of statement')
    unknown call_tmp[608147] "expr temp" "maybe param" "maybe type" "temp"
    (608150 'move' call_tmp[608147](49443 call int(64)[13] 64))
    unknown call_tmp[608152] "maybe param" "maybe type" "temp"
    (608155 'move' call_tmp[608152](49444 call _cast call_tmp[608147] expected[49350]))
    unknown te[49446] "dead at end of block" "insert auto destroy"
    (540647 'init var' te[49446] call_tmp[608152])
    (49449 'end of statement')
    unknown call_tmp[608157] "expr temp" "maybe param" "maybe type" "temp"
    (608160 'move' call_tmp[608157](49454 call int(64)[13] 64))
    unknown call_tmp[608162] "maybe param" "maybe type" "temp"
    (608165 'move' call_tmp[608162](49455 call _cast call_tmp[608157] desired[49356]))
    unknown td[49457] "dead at end of block" "insert auto destroy"
    (540649 'init var' td[49457] call_tmp[608162])
    (49460 'end of statement')
    unknown call_tmp[608169] "expr temp" "maybe param" "maybe type" "temp"
    (608172 'move' call_tmp[608169](49467 call(371953 call (partial) _localeid _mt[243] this[49719])))
    unknown call_tmp[608176] "expr temp" "maybe param" "maybe type" "temp"
    (608179 'move' call_tmp[608176](49470 call(371957 call (partial) _addr _mt[243] this[49719])))
    unknown call_tmp[608181] "expr temp" "maybe param" "maybe type" "temp"
    (608184 'move' call_tmp[608181](49475 call c_memory_order order[49364]))
    unknown call_tmp[608186] "expr temp" "maybe param" "maybe type" "temp"
    (608189 'move' call_tmp[608186](49480 call readableOrder order[49364]))
    unknown call_tmp[608191] "expr temp" "maybe param" "maybe type" "temp"
    (608194 'move' call_tmp[608191](49482 call c_memory_order call_tmp[608186]))
    (49483 call atomic_cmpxchg te[49446] td[49457] call_tmp[608169] call_tmp[608176] ret[49435] call_tmp[608181] call_tmp[608191])
    (474428 'end of statement' te[49446] td[49457] ret[49435])
    unknown call_tmp[608196] "expr temp" "maybe param" "maybe type" "temp"
    (608199 'move' call_tmp[608196](49487 call _cast bool[10] ret[49435]))
    (506410 'move' ret[506404](506409 'coerce' call_tmp[608196] bool[10]))
    gotoReturn _end_compareAndSwap[506402] _end_compareAndSwap[506402]
    (474432 'end of statement' ret[49435])
    label _end_compareAndSwap[506402]
    (506406 return ret[506404])
  }
  { scopeless type
    bool[10]
  }
  function RAtomicBool[49673].testAndSet[49505](arg _mt[49725]:_MT[238], arg this[49723]:RAtomicBool[49673], param arg order[49501]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506416] "RVV" "temp"
    unknown call_tmp[608203] "expr temp" "maybe param" "maybe type" "temp"
    (608206 'move' call_tmp[608203](49515 call(49509 call (partial) exchange _mt[243] this[49723]) 1 order[49501]))
    (506422 'move' ret[506416](506421 'coerce' call_tmp[608203] bool[10]))
    (506418 return ret[506416])
  }
  { scopeless type
    bool[10]
  }
  function RAtomicBool[49673].clear[49533](arg _mt[49729]:_MT[238], arg this[49727]:RAtomicBool[49673], param arg order[49529]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506426] "RVV" "temp"
    (49543 call(49537 call (partial) write _mt[243] this[49727]) 0 order[49529])
    (506428 return ret[506426])
  }
  { scopeless type
    void[4]
  }
  function RAtomicBool[49673].waitFor[49555](arg _mt[49733]:_MT[238], const arg this[49731]:RAtomicBool[49673], arg value[49552]:bool[10], param arg order[49562]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506432] "RVV" "temp"
    const tmp[49644] "const" "temp"
    unknown call_tmp[608210] "expr temp" "maybe param" "maybe type" "temp"
    (608213 'move' call_tmp[608210](49641 '_wide_get_locale' this[49731]))
    (49646 'move' tmp[49644](49642 'deref' call_tmp[608210]))
    (934114 call on_fn[934110] tmp[49644])
    function on_fn[934110](const in arg dummy_locale_arg[934112]:chpl_localeID_t[209294]) : void[4] "on"
    {
      {
        {
          unknown tmp[49587] "temp"
          unknown call_tmp[608217] "expr temp" "maybe param" "maybe type" "temp"
          (608220 'move' call_tmp[608217](49622 call(49619 call (partial) read _mt[243] this[49731])(order = relaxed[186964])))
          unknown call_tmp[608222] "expr temp" "maybe param" "maybe type" "temp"
          (608225 'move' call_tmp[608222](49617 call != call_tmp[608217] value[49552]))
          (49629 'move' tmp[49587](49615 call _cond_test call_tmp[608222]))
          WhileDo[49592]
          {
            {
              (49584 call chpl_task_yield)
            }
            label _continueLabel[49590]
            unknown call_tmp[608229] "expr temp" "maybe param" "maybe type" "temp"
            (608232 'move' call_tmp[608229](49603 call(49600 call (partial) read _mt[243] this[49731])(order = relaxed[186964])))
            unknown call_tmp[608234] "expr temp" "maybe param" "maybe type" "temp"
            (608237 'move' call_tmp[608234](49598 call != call_tmp[608229] value[49552]))
            (49610 'move' tmp[49587](49596 call _cond_test call_tmp[608234]))
            tmp[49587]
          }
          label _breakLabel[49591]
        }
        unknown call_tmp[608239] "expr temp" "maybe param" "maybe type" "temp"
        (608242 'move' call_tmp[608239](49637 call c_memory_order order[49562]))
        (49639 call chpl_atomic_thread_fence call_tmp[608239])
      }
      (934117 return _void[55])
    }
    {
    }
    (506434 return ret[506432])
  }
  { scopeless type
    void[4]
  }
  function RAtomicBool[49673].writeThis[49660](arg _mt[49737]:_MT[238], const arg this[49735]:RAtomicBool[49673], arg x[49658]:_any[178](?)) : _unknown[51] throws "atomic type" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[608246] "expr temp" "maybe param" "maybe type" "temp"
    (608249 'move' call_tmp[608246](49665 call(371975 call (partial) read _mt[243] this[49735])))
    (49666 call <~> x[49658] call_tmp[608246])
    (506436 return _void[55])
  }
  function RAtomicBool[49673]._v[763219](arg _mt[763221]:_MT[238], ref arg this[763223]:RAtomicBool[49673]) ref : _unknown[51] "atomic type" "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[763233] "RVV" "temp"
    unknown call_tmp[763240] "expr temp" "maybe param" "maybe type" "temp"
    (763243 'move' call_tmp[763240](763227 '.' this[763223] c"_v"))
    (763238 'move' ret[763233](763237 'addr of' call_tmp[763240]))
    (763235 return ret[763233])
  }
  function RAtomicBool[49673].init[763245](arg _mt[763247]:_MT[238], ref arg this[763248]:RAtomicBool[49673], in arg _v[763251] :
  (763254 call int(64)[13] 64) =
  _typeDefaultT[250]) : void[4] "compiler generated" "last resort" "method" "primary method" "suppress lvalue error"
  {
    (763267 'init field' this[763248] c"_v" _v[763251])
    (763271 return _void[55])
  }
  function RAtomicBool[49673].deinit[763273](arg _mt[763275]:_MT[238], arg this[763277]:RAtomicBool[49673]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (763285 return _void[55])
  }
  function chpl_fields_are_comparable[763299](arg _arg1[763301]:RAtomicBool[49673], arg _arg2[763302]:RAtomicBool[49673]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[763320]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[763327] "expr temp" "maybe param" "maybe type" "temp"
    (763330 'move' call_tmp[763327](763305 call _v _mt[243] _arg1[763301]))
    unknown call_tmp[763332] "expr temp" "maybe param" "maybe type" "temp"
    (763335 'move' call_tmp[763332](763309 call _v _mt[243] _arg2[763302]))
    unknown call_tmp[763337] "expr temp" "maybe param" "maybe type" "temp"
    (763340 'move' call_tmp[763337](763313 'call resolves' c"==" call_tmp[763327] call_tmp[763332]))
    (763325 'move' ret[763320](763324 'deref' call_tmp[763337]))
    (763322 return ret[763320])
  }
  function ==[763287](arg _arg1[763289]:RAtomicBool[49673], arg _arg2[763290]:RAtomicBool[49673]) : bool[10] "compiler generated" "last resort"
  {
    val ret[763369]:bool[10] "RVV" "temp"
    unknown call_tmp[763381] "expr temp" "maybe param" "maybe type" "temp"
    (763384 'move' call_tmp[763381](763348 call _v _mt[243] _arg1[763289]))
    unknown call_tmp[763386] "expr temp" "maybe param" "maybe type" "temp"
    (763389 'move' call_tmp[763386](763352 call _v _mt[243] _arg2[763290]))
    unknown call_tmp[763391] "expr temp" "maybe param" "maybe type" "temp"
    (763394 'move' call_tmp[763391](763356 call != call_tmp[763381] call_tmp[763386]))
    if call_tmp[763391]
    {
      (763374 'move' ret[763369](763373 'deref' 0))
      gotoReturn _end_==[763367] _end_==[763367]
    }
    (763379 'move' ret[763369](763378 'deref' 1))
    label _end_==[763367]
    (763371 return ret[763369])
  }
  where {
    unknown call_tmp[763396] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (763399 'move' call_tmp[763396](763293 'typeof' _arg1[763289]))
    unknown call_tmp[763401] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (763404 'move' call_tmp[763401](763295 'typeof' _arg2[763290]))
    unknown call_tmp[763406] "expr temp" "maybe param" "maybe type" "temp"
    (763409 'move' call_tmp[763406](763297 call == call_tmp[763396] call_tmp[763401]))
    unknown call_tmp[763411] "expr temp" "maybe param" "maybe type" "temp"
    (763414 'move' call_tmp[763411](763342 call chpl_fields_are_comparable[763299] _arg1[763289] _arg2[763290]))
    (763346 '&' call_tmp[763406] call_tmp[763411])
  }
  function chpl_fields_are_comparable[763428](arg _arg1[763430]:RAtomicBool[49673], arg _arg2[763431]:RAtomicBool[49673]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[763449]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[763456] "expr temp" "maybe param" "maybe type" "temp"
    (763459 'move' call_tmp[763456](763434 call _v _mt[243] _arg1[763430]))
    unknown call_tmp[763461] "expr temp" "maybe param" "maybe type" "temp"
    (763464 'move' call_tmp[763461](763438 call _v _mt[243] _arg2[763431]))
    unknown call_tmp[763466] "expr temp" "maybe param" "maybe type" "temp"
    (763469 'move' call_tmp[763466](763442 'call resolves' c"!=" call_tmp[763456] call_tmp[763461]))
    (763454 'move' ret[763449](763453 'deref' call_tmp[763466]))
    (763451 return ret[763449])
  }
  function !=[763416](arg _arg1[763418]:RAtomicBool[49673], arg _arg2[763419]:RAtomicBool[49673]) : bool[10] "compiler generated" "last resort"
  {
    val ret[763498]:bool[10] "RVV" "temp"
    unknown call_tmp[763510] "expr temp" "maybe param" "maybe type" "temp"
    (763513 'move' call_tmp[763510](763477 call _v _mt[243] _arg1[763418]))
    unknown call_tmp[763515] "expr temp" "maybe param" "maybe type" "temp"
    (763518 'move' call_tmp[763515](763481 call _v _mt[243] _arg2[763419]))
    unknown call_tmp[763520] "expr temp" "maybe param" "maybe type" "temp"
    (763523 'move' call_tmp[763520](763485 call != call_tmp[763510] call_tmp[763515]))
    if call_tmp[763520]
    {
      (763503 'move' ret[763498](763502 'deref' 1))
      gotoReturn _end_!=[763496] _end_!=[763496]
    }
    (763508 'move' ret[763498](763507 'deref' 0))
    label _end_!=[763496]
    (763500 return ret[763498])
  }
  where {
    unknown call_tmp[763525] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (763528 'move' call_tmp[763525](763422 'typeof' _arg1[763418]))
    unknown call_tmp[763530] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (763533 'move' call_tmp[763530](763424 'typeof' _arg2[763419]))
    unknown call_tmp[763535] "expr temp" "maybe param" "maybe type" "temp"
    (763538 'move' call_tmp[763535](763426 call == call_tmp[763525] call_tmp[763530]))
    unknown call_tmp[763540] "expr temp" "maybe param" "maybe type" "temp"
    (763543 'move' call_tmp[763540](763471 call chpl_fields_are_comparable[763428] _arg1[763418] _arg2[763419]))
    (763475 '&' call_tmp[763535] call_tmp[763540])
  }
  function chpl_fields_are_comparable[763557](arg _arg1[763559]:RAtomicBool[49673], arg _arg2[763560]:RAtomicBool[49673]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[763578]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[763585] "expr temp" "maybe param" "maybe type" "temp"
    (763588 'move' call_tmp[763585](763563 call _v _mt[243] _arg1[763559]))
    unknown call_tmp[763590] "expr temp" "maybe param" "maybe type" "temp"
    (763593 'move' call_tmp[763590](763567 call _v _mt[243] _arg2[763560]))
    unknown call_tmp[763595] "expr temp" "maybe param" "maybe type" "temp"
    (763598 'move' call_tmp[763595](763571 'call resolves' c"<" call_tmp[763585] call_tmp[763590]))
    (763583 'move' ret[763578](763582 'deref' call_tmp[763595]))
    (763580 return ret[763578])
  }
  function <[763545](arg _arg1[763547]:RAtomicBool[49673], arg _arg2[763548]:RAtomicBool[49673]) : bool[10] "compiler generated" "last resort"
  {
    val ret[763642]:bool[10] "RVV" "temp"
    unknown call_tmp[763659] "expr temp" "maybe param" "maybe type" "temp"
    (763662 'move' call_tmp[763659](763606 call _v _mt[243] _arg1[763547]))
    unknown call_tmp[763664] "expr temp" "maybe param" "maybe type" "temp"
    (763667 'move' call_tmp[763664](763610 call _v _mt[243] _arg2[763548]))
    unknown call_tmp[763669] "expr temp" "maybe param" "maybe type" "temp"
    (763672 'move' call_tmp[763669](763614 call < call_tmp[763659] call_tmp[763664]))
    if call_tmp[763669]
    {
      (763647 'move' ret[763642](763646 'deref' 1))
      gotoReturn _end_<[763640] _end_<[763640]
    }
    unknown call_tmp[763674] "expr temp" "maybe param" "maybe type" "temp"
    (763677 'move' call_tmp[763674](763620 call _v _mt[243] _arg1[763547]))
    unknown call_tmp[763679] "expr temp" "maybe param" "maybe type" "temp"
    (763682 'move' call_tmp[763679](763624 call _v _mt[243] _arg2[763548]))
    unknown call_tmp[763684] "expr temp" "maybe param" "maybe type" "temp"
    (763687 'move' call_tmp[763684](763628 call > call_tmp[763674] call_tmp[763679]))
    if call_tmp[763684]
    {
      (763652 'move' ret[763642](763651 'deref' 0))
      gotoReturn _end_<[763640] _end_<[763640]
    }
    (763657 'move' ret[763642](763656 'deref' 0))
    label _end_<[763640]
    (763644 return ret[763642])
  }
  where {
    unknown call_tmp[763689] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (763692 'move' call_tmp[763689](763551 'typeof' _arg1[763547]))
    unknown call_tmp[763694] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (763697 'move' call_tmp[763694](763553 'typeof' _arg2[763548]))
    unknown call_tmp[763699] "expr temp" "maybe param" "maybe type" "temp"
    (763702 'move' call_tmp[763699](763555 call == call_tmp[763689] call_tmp[763694]))
    unknown call_tmp[763704] "expr temp" "maybe param" "maybe type" "temp"
    (763707 'move' call_tmp[763704](763600 call chpl_fields_are_comparable[763557] _arg1[763547] _arg2[763548]))
    (763604 '&' call_tmp[763699] call_tmp[763704])
  }
  function chpl_fields_are_comparable[763721](arg _arg1[763723]:RAtomicBool[49673], arg _arg2[763724]:RAtomicBool[49673]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[763742]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[763749] "expr temp" "maybe param" "maybe type" "temp"
    (763752 'move' call_tmp[763749](763727 call _v _mt[243] _arg1[763723]))
    unknown call_tmp[763754] "expr temp" "maybe param" "maybe type" "temp"
    (763757 'move' call_tmp[763754](763731 call _v _mt[243] _arg2[763724]))
    unknown call_tmp[763759] "expr temp" "maybe param" "maybe type" "temp"
    (763762 'move' call_tmp[763759](763735 'call resolves' c"<=" call_tmp[763749] call_tmp[763754]))
    (763747 'move' ret[763742](763746 'deref' call_tmp[763759]))
    (763744 return ret[763742])
  }
  function <=[763709](arg _arg1[763711]:RAtomicBool[49673], arg _arg2[763712]:RAtomicBool[49673]) : bool[10] "compiler generated" "last resort"
  {
    val ret[763806]:bool[10] "RVV" "temp"
    unknown call_tmp[763823] "expr temp" "maybe param" "maybe type" "temp"
    (763826 'move' call_tmp[763823](763770 call _v _mt[243] _arg1[763711]))
    unknown call_tmp[763828] "expr temp" "maybe param" "maybe type" "temp"
    (763831 'move' call_tmp[763828](763774 call _v _mt[243] _arg2[763712]))
    unknown call_tmp[763833] "expr temp" "maybe param" "maybe type" "temp"
    (763836 'move' call_tmp[763833](763778 call < call_tmp[763823] call_tmp[763828]))
    if call_tmp[763833]
    {
      (763811 'move' ret[763806](763810 'deref' 1))
      gotoReturn _end_<=[763804] _end_<=[763804]
    }
    unknown call_tmp[763838] "expr temp" "maybe param" "maybe type" "temp"
    (763841 'move' call_tmp[763838](763784 call _v _mt[243] _arg1[763711]))
    unknown call_tmp[763843] "expr temp" "maybe param" "maybe type" "temp"
    (763846 'move' call_tmp[763843](763788 call _v _mt[243] _arg2[763712]))
    unknown call_tmp[763848] "expr temp" "maybe param" "maybe type" "temp"
    (763851 'move' call_tmp[763848](763792 call > call_tmp[763838] call_tmp[763843]))
    if call_tmp[763848]
    {
      (763816 'move' ret[763806](763815 'deref' 0))
      gotoReturn _end_<=[763804] _end_<=[763804]
    }
    (763821 'move' ret[763806](763820 'deref' 1))
    label _end_<=[763804]
    (763808 return ret[763806])
  }
  where {
    unknown call_tmp[763853] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (763856 'move' call_tmp[763853](763715 'typeof' _arg1[763711]))
    unknown call_tmp[763858] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (763861 'move' call_tmp[763858](763717 'typeof' _arg2[763712]))
    unknown call_tmp[763863] "expr temp" "maybe param" "maybe type" "temp"
    (763866 'move' call_tmp[763863](763719 call == call_tmp[763853] call_tmp[763858]))
    unknown call_tmp[763868] "expr temp" "maybe param" "maybe type" "temp"
    (763871 'move' call_tmp[763868](763764 call chpl_fields_are_comparable[763721] _arg1[763711] _arg2[763712]))
    (763768 '&' call_tmp[763863] call_tmp[763868])
  }
  function chpl_fields_are_comparable[763885](arg _arg1[763887]:RAtomicBool[49673], arg _arg2[763888]:RAtomicBool[49673]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[763906]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[763913] "expr temp" "maybe param" "maybe type" "temp"
    (763916 'move' call_tmp[763913](763891 call _v _mt[243] _arg1[763887]))
    unknown call_tmp[763918] "expr temp" "maybe param" "maybe type" "temp"
    (763921 'move' call_tmp[763918](763895 call _v _mt[243] _arg2[763888]))
    unknown call_tmp[763923] "expr temp" "maybe param" "maybe type" "temp"
    (763926 'move' call_tmp[763923](763899 'call resolves' c">" call_tmp[763913] call_tmp[763918]))
    (763911 'move' ret[763906](763910 'deref' call_tmp[763923]))
    (763908 return ret[763906])
  }
  function >[763873](arg _arg1[763875]:RAtomicBool[49673], arg _arg2[763876]:RAtomicBool[49673]) : bool[10] "compiler generated" "last resort"
  {
    val ret[763970]:bool[10] "RVV" "temp"
    unknown call_tmp[763987] "expr temp" "maybe param" "maybe type" "temp"
    (763990 'move' call_tmp[763987](763934 call _v _mt[243] _arg1[763875]))
    unknown call_tmp[763992] "expr temp" "maybe param" "maybe type" "temp"
    (763995 'move' call_tmp[763992](763938 call _v _mt[243] _arg2[763876]))
    unknown call_tmp[763997] "expr temp" "maybe param" "maybe type" "temp"
    (764000 'move' call_tmp[763997](763942 call > call_tmp[763987] call_tmp[763992]))
    if call_tmp[763997]
    {
      (763975 'move' ret[763970](763974 'deref' 1))
      gotoReturn _end_>[763968] _end_>[763968]
    }
    unknown call_tmp[764002] "expr temp" "maybe param" "maybe type" "temp"
    (764005 'move' call_tmp[764002](763948 call _v _mt[243] _arg1[763875]))
    unknown call_tmp[764007] "expr temp" "maybe param" "maybe type" "temp"
    (764010 'move' call_tmp[764007](763952 call _v _mt[243] _arg2[763876]))
    unknown call_tmp[764012] "expr temp" "maybe param" "maybe type" "temp"
    (764015 'move' call_tmp[764012](763956 call < call_tmp[764002] call_tmp[764007]))
    if call_tmp[764012]
    {
      (763980 'move' ret[763970](763979 'deref' 0))
      gotoReturn _end_>[763968] _end_>[763968]
    }
    (763985 'move' ret[763970](763984 'deref' 0))
    label _end_>[763968]
    (763972 return ret[763970])
  }
  where {
    unknown call_tmp[764017] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (764020 'move' call_tmp[764017](763879 'typeof' _arg1[763875]))
    unknown call_tmp[764022] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (764025 'move' call_tmp[764022](763881 'typeof' _arg2[763876]))
    unknown call_tmp[764027] "expr temp" "maybe param" "maybe type" "temp"
    (764030 'move' call_tmp[764027](763883 call == call_tmp[764017] call_tmp[764022]))
    unknown call_tmp[764032] "expr temp" "maybe param" "maybe type" "temp"
    (764035 'move' call_tmp[764032](763928 call chpl_fields_are_comparable[763885] _arg1[763875] _arg2[763876]))
    (763932 '&' call_tmp[764027] call_tmp[764032])
  }
  function chpl_fields_are_comparable[764049](arg _arg1[764051]:RAtomicBool[49673], arg _arg2[764052]:RAtomicBool[49673]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[764070]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[764077] "expr temp" "maybe param" "maybe type" "temp"
    (764080 'move' call_tmp[764077](764055 call _v _mt[243] _arg1[764051]))
    unknown call_tmp[764082] "expr temp" "maybe param" "maybe type" "temp"
    (764085 'move' call_tmp[764082](764059 call _v _mt[243] _arg2[764052]))
    unknown call_tmp[764087] "expr temp" "maybe param" "maybe type" "temp"
    (764090 'move' call_tmp[764087](764063 'call resolves' c">=" call_tmp[764077] call_tmp[764082]))
    (764075 'move' ret[764070](764074 'deref' call_tmp[764087]))
    (764072 return ret[764070])
  }
  function >=[764037](arg _arg1[764039]:RAtomicBool[49673], arg _arg2[764040]:RAtomicBool[49673]) : bool[10] "compiler generated" "last resort"
  {
    val ret[764134]:bool[10] "RVV" "temp"
    unknown call_tmp[764151] "expr temp" "maybe param" "maybe type" "temp"
    (764154 'move' call_tmp[764151](764098 call _v _mt[243] _arg1[764039]))
    unknown call_tmp[764156] "expr temp" "maybe param" "maybe type" "temp"
    (764159 'move' call_tmp[764156](764102 call _v _mt[243] _arg2[764040]))
    unknown call_tmp[764161] "expr temp" "maybe param" "maybe type" "temp"
    (764164 'move' call_tmp[764161](764106 call > call_tmp[764151] call_tmp[764156]))
    if call_tmp[764161]
    {
      (764139 'move' ret[764134](764138 'deref' 1))
      gotoReturn _end_>=[764132] _end_>=[764132]
    }
    unknown call_tmp[764166] "expr temp" "maybe param" "maybe type" "temp"
    (764169 'move' call_tmp[764166](764112 call _v _mt[243] _arg1[764039]))
    unknown call_tmp[764171] "expr temp" "maybe param" "maybe type" "temp"
    (764174 'move' call_tmp[764171](764116 call _v _mt[243] _arg2[764040]))
    unknown call_tmp[764176] "expr temp" "maybe param" "maybe type" "temp"
    (764179 'move' call_tmp[764176](764120 call < call_tmp[764166] call_tmp[764171]))
    if call_tmp[764176]
    {
      (764144 'move' ret[764134](764143 'deref' 0))
      gotoReturn _end_>=[764132] _end_>=[764132]
    }
    (764149 'move' ret[764134](764148 'deref' 1))
    label _end_>=[764132]
    (764136 return ret[764134])
  }
  where {
    unknown call_tmp[764181] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (764184 'move' call_tmp[764181](764043 'typeof' _arg1[764039]))
    unknown call_tmp[764186] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (764189 'move' call_tmp[764186](764045 'typeof' _arg2[764040]))
    unknown call_tmp[764191] "expr temp" "maybe param" "maybe type" "temp"
    (764194 'move' call_tmp[764191](764047 call == call_tmp[764181] call_tmp[764186]))
    unknown call_tmp[764196] "expr temp" "maybe param" "maybe type" "temp"
    (764199 'move' call_tmp[764196](764092 call chpl_fields_are_comparable[764049] _arg1[764039] _arg2[764040]))
    (764096 '&' call_tmp[764191] call_tmp[764196])
  }
  function chpl__defaultHash[764201](arg r[764203]:RAtomicBool[49673]) : _unknown[51] "compiler generated" "last resort"
  {
    unknown ret[764216] "RVV" "temp"
    unknown call_tmp[764223] "expr temp" "maybe param" "maybe type" "temp"
    (764226 'move' call_tmp[764223](764205 call _v _mt[243] r[764203]))
    unknown call_tmp[764228] "expr temp" "maybe param" "maybe type" "temp"
    (764231 'move' call_tmp[764228](764209 call chpl__defaultHash call_tmp[764223]))
    (764221 'move' ret[764216](764220 'deref' call_tmp[764228]))
    (764218 return ret[764216])
  }
  type RAtomicBool[49673] val _v[48618]:int(64)[13](48617 call int(64)[13] 64)
  function RAtomicT[51633](?).init=[49756](arg _mt[51637]:_MT[238], ref arg this[51635]:RAtomicT[51633](?), arg other[49753]:RAtomicT[51633](?)) : void[4] "atomic type" "method" "primary method" "no return value for void"
  {
    unknown tmp[454675] "temp" "type variable"
    (454677 'move' tmp[454675](49763 call T _mt[243] other[49753]))
    (454679 'init field' this[51635] c"T" tmp[454675])
    (474439 'end of statement')
    unknown call_tmp[608255] "maybe param" "maybe type" "temp"
    (608258 'move' call_tmp[608255](49779 call(49775 call (partial) read _mt[243] other[49753])))
    unknown call_tmp[608260] "maybe param" "maybe type" "temp"
    (608263 'move' call_tmp[608260](454692 '.v' this[51635] c"T"))
    unknown tmp[454683] "temp"
    (454686 'init var' tmp[454683] call_tmp[608255] call_tmp[608260])
    (454688 'init field' this[51635] c"_v" tmp[454683])
    (474440 'end of statement')
    (506438 return _void[55])
  }
  function RAtomicT[51633](?).init=[49795](arg _mt[51641]:_MT[238], ref arg this[51639]:RAtomicT[51633](?), arg other[49792] :
  unknown call_tmp[608265] "expr temp" "maybe param" "maybe type" "temp" "type variable") : void[4] "atomic type" "method" "primary method" "no return value for void"
  {
    unknown tmp[454695] "temp" "type variable"
    (454697 'move' tmp[454695](49802 'typeof' other[49792]))
    (454699 'init field' this[51639] c"T" tmp[454695])
    (474441 'end of statement')
    unknown call_tmp[608272] "maybe param" "maybe type" "temp"
    (608275 'move' call_tmp[608272](454712 '.v' this[51639] c"T"))
    unknown tmp[454703] "temp"
    (454706 'init var' tmp[454703] other[49792] call_tmp[608272])
    (454708 'init field' this[51639] c"_v" tmp[454703])
    (474442 'end of statement')
    (506440 return _void[55])
  }
  function RAtomicT[51633](?)._localeid[49819](arg _mt[51645]:_MT[238], arg this[51643]:RAtomicT[51633](?)) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506444] "RVV" "temp"
    unknown call_tmp[608277] "expr temp" "maybe param" "maybe type" "temp"
    (608280 'move' call_tmp[608277](49833 call int(64)[13] 32))
    unknown call_tmp[608284] "expr temp" "maybe param" "maybe type" "temp"
    (608287 'move' call_tmp[608284](371985 call _v _mt[243] this[51643]))
    unknown call_tmp[608289] "expr temp" "maybe param" "maybe type" "temp"
    (608292 'move' call_tmp[608289](49829 '_wide_get_node' call_tmp[608284]))
    unknown call_tmp[608294] "expr temp" "maybe param" "maybe type" "temp"
    (608297 'move' call_tmp[608294](49834 call _cast call_tmp[608277] call_tmp[608289]))
    unknown call_tmp[608299] "expr temp" "maybe param" "maybe type" "temp"
    (608302 'move' call_tmp[608299](506449 call int(64)[13] 32))
    (506452 'move' ret[506444](506451 'coerce' call_tmp[608294] call_tmp[608299]))
    (506446 return ret[506444])
  }
  { scopeless type
    (49824 call int(64)[13] 32)
  }
  function RAtomicT[51633](?)._addr[49844](arg _mt[51649]:_MT[238], arg this[51647]:RAtomicT[51633](?)) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506456] "RVV" "temp"
    unknown call_tmp[608306] "expr temp" "maybe param" "maybe type" "temp"
    (608309 'move' call_tmp[608306](371991 call _v _mt[243] this[51647]))
    unknown call_tmp[608311] "expr temp" "maybe param" "maybe type" "temp"
    (608314 'move' call_tmp[608311](49850 '_wide_get_addr' call_tmp[608306]))
    (506462 'move' ret[506456](506461 'coerce' call_tmp[608311] c_void_ptr[149]))
    (506458 return ret[506456])
  }
  { scopeless type
    c_void_ptr[149]
  }
  function RAtomicT[51633](?).read[49868](arg _mt[51653]:_MT[238], const arg this[51651]:RAtomicT[51633](?), param arg order[49864]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506472] "RVV" "temp"
    function atomic_read[49882](ref arg result[49879] :
    (372007 call T _mt[243] this[51651]), arg l[49888] :
    (49887 call int(64)[13] 32), const arg obj[49892]:c_void_ptr[149], arg order[49896]:memory_order[186607], arg _chpl_cname[49904]:string[26] =
    unknown call_tmp[608320] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506466] "RVV" "temp"
      (506468 return ret[506466])
    }
    { scopeless type
      void[4]
    }
    unknown ret[49910] "dead at end of block" "insert auto destroy"
    unknown call_tmp[608327] "expr temp" "maybe param" "maybe type" "temp"
    (608330 'move' call_tmp[608327](372014 call T _mt[243] this[51651]))
    (540651 'default init var' ret[49910] call_tmp[608327])
    (49913 'end of statement')
    unknown call_tmp[608334] "expr temp" "maybe param" "maybe type" "temp"
    (608337 'move' call_tmp[608334](49919 call(372019 call (partial) _localeid _mt[243] this[51651])))
    unknown call_tmp[608341] "expr temp" "maybe param" "maybe type" "temp"
    (608344 'move' call_tmp[608341](49922 call(372023 call (partial) _addr _mt[243] this[51651])))
    unknown call_tmp[608346] "expr temp" "maybe param" "maybe type" "temp"
    (608349 'move' call_tmp[608346](49926 call c_memory_order order[49864]))
    (49927 call atomic_read ret[49910] call_tmp[608334] call_tmp[608341] call_tmp[608346])
    (474445 'end of statement' ret[49910])
    unknown call_tmp[608353] "expr temp" "maybe param" "maybe type" "temp"
    (608356 'move' call_tmp[608353](506477 call T _mt[243] this[51651]))
    (506481 'move' ret[506472](506480 'coerce' ret[49910] call_tmp[608353]))
    gotoReturn _end_read[506470] _end_read[506470]
    (474447 'end of statement' ret[49910])
    label _end_read[506470]
    (506474 return ret[506472])
  }
  { scopeless type
    (371997 call T _mt[243] this[51651])
  }
  function RAtomicT[51633](?).write[49941](arg _mt[51657]:_MT[238], arg this[51655]:RAtomicT[51633](?), arg value[49938] :
  (372030 call T _mt[243] this[51655]), param arg order[49948]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506493] "RVV" "temp"
    function atomic_write[49964](ref arg desired[49961] :
    (372041 call T _mt[243] this[51655]), arg l[49970] :
    (49969 call int(64)[13] 32), arg obj[49974]:c_void_ptr[149], arg order[49978]:memory_order[186607], arg _chpl_cname[49986]:string[26] =
    unknown call_tmp[608366] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506487] "RVV" "temp"
      (506489 return ret[506487])
    }
    { scopeless type
      void[4]
    }
    unknown v[49992] "dead at end of block" "insert auto destroy"
    (540653 'init var' v[49992] value[49938])
    (49995 'end of statement')
    unknown call_tmp[608373] "expr temp" "maybe param" "maybe type" "temp"
    (608376 'move' call_tmp[608373](50001 call(372049 call (partial) _localeid _mt[243] this[51655])))
    unknown call_tmp[608380] "expr temp" "maybe param" "maybe type" "temp"
    (608383 'move' call_tmp[608380](50004 call(372053 call (partial) _addr _mt[243] this[51655])))
    unknown call_tmp[608385] "expr temp" "maybe param" "maybe type" "temp"
    (608388 'move' call_tmp[608385](50008 call c_memory_order order[49948]))
    (50009 call atomic_write v[49992] call_tmp[608373] call_tmp[608380] call_tmp[608385])
    (474449 'end of statement' v[49992])
    (506495 return ret[506493])
  }
  { scopeless type
    void[4]
  }
  function RAtomicT[51633](?).exchange[50020](arg _mt[51661]:_MT[238], arg this[51659]:RAtomicT[51633](?), arg value[50017] :
  (372059 call T _mt[243] this[51659]), param arg order[50027]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506505] "RVV" "temp"
    function atomic_xchg[50043](ref arg desired[50040] :
    (372075 call T _mt[243] this[51659]), arg l[50049] :
    (50048 call int(64)[13] 32), arg obj[50053]:c_void_ptr[149], ref arg result[50057] :
    (372081 call T _mt[243] this[51659]), arg order[50061]:memory_order[186607], arg _chpl_cname[50069]:string[26] =
    unknown call_tmp[608398] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506499] "RVV" "temp"
      (506501 return ret[506499])
    }
    { scopeless type
      void[4]
    }
    unknown ret[50075] "dead at end of block" "insert auto destroy"
    unknown call_tmp[608405] "expr temp" "maybe param" "maybe type" "temp"
    (608408 'move' call_tmp[608405](372087 call T _mt[243] this[51659]))
    (540655 'default init var' ret[50075] call_tmp[608405])
    (50078 'end of statement')
    unknown v[50080] "dead at end of block" "insert auto destroy"
    (540657 'init var' v[50080] value[50017])
    (50083 'end of statement')
    unknown call_tmp[608412] "expr temp" "maybe param" "maybe type" "temp"
    (608415 'move' call_tmp[608412](50089 call(372093 call (partial) _localeid _mt[243] this[51659])))
    unknown call_tmp[608419] "expr temp" "maybe param" "maybe type" "temp"
    (608422 'move' call_tmp[608419](50092 call(372097 call (partial) _addr _mt[243] this[51659])))
    unknown call_tmp[608424] "expr temp" "maybe param" "maybe type" "temp"
    (608427 'move' call_tmp[608424](50097 call c_memory_order order[50027]))
    (50098 call atomic_xchg v[50080] call_tmp[608412] call_tmp[608419] ret[50075] call_tmp[608424])
    (474451 'end of statement' v[50080] ret[50075])
    unknown call_tmp[608431] "expr temp" "maybe param" "maybe type" "temp"
    (608434 'move' call_tmp[608431](506510 call T _mt[243] this[51659]))
    (506514 'move' ret[506505](506513 'coerce' ret[50075] call_tmp[608431]))
    gotoReturn _end_exchange[506503] _end_exchange[506503]
    (474454 'end of statement' ret[50075])
    label _end_exchange[506503]
    (506507 return ret[506505])
  }
  { scopeless type
    (372065 call T _mt[243] this[51659])
  }
  function RAtomicT[51633](?).compareExchange[50112](arg _mt[51665]:_MT[238], arg this[51663]:RAtomicT[51633](?), ref arg expected[50109] :
  (372105 call T _mt[243] this[51663]), arg desired[50115] :
  (372110 call T _mt[243] this[51663]), param arg order[50123]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506520] "RVV" "temp"
    unknown call_tmp[608444] "expr temp" "maybe param" "maybe type" "temp"
    (608447 'move' call_tmp[608444](50139 call readableOrder order[50123]))
    unknown call_tmp[608449] "expr temp" "maybe param" "maybe type" "temp"
    (608452 'move' call_tmp[608449](50140 call(50129 call (partial) compareExchange _mt[243] this[51663]) expected[50109] desired[50115] order[50123] call_tmp[608444]))
    (506526 'move' ret[506520](506525 'coerce' call_tmp[608449] bool[10]))
    (506522 return ret[506520])
  }
  { scopeless type
    bool[10]
  }
  function RAtomicT[51633](?).compareExchange[50153](arg _mt[51669]:_MT[238], arg this[51667]:RAtomicT[51633](?), ref arg expected[50150] :
  (372120 call T _mt[243] this[51667]), arg desired[50156] :
  (372125 call T _mt[243] this[51667]), param arg success[50160]:memoryOrder[186966], param arg failure[50164]:memoryOrder[186966]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506536] "RVV" "temp"
    function atomic_cmpxchg[50179](ref arg expected[50176] :
    (372137 call T _mt[243] this[51667]), ref arg desired[50182] :
    (372142 call T _mt[243] this[51667]), arg l[50189] :
    (50188 call int(64)[13] 32), arg obj[50193]:c_void_ptr[149], ref arg result[50200] :
    (50199 call bool[10] 32), arg succ[50204]:memory_order[186607], arg fail[50208]:memory_order[186607], arg _chpl_cname[50216]:string[26] =
    unknown call_tmp[608464] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506530] "RVV" "temp"
      (506532 return ret[506530])
    }
    { scopeless type
      void[4]
    }
    unknown te[50222] "dead at end of block" "insert auto destroy"
    (540659 'init var' te[50222] expected[50150])
    (50225 'end of statement')
    unknown ret[50230] "dead at end of block" "insert auto destroy"
    unknown call_tmp[608469] "expr temp" "maybe param" "maybe type" "temp"
    (608472 'move' call_tmp[608469](50229 call bool[10] 32))
    (540661 'default init var' ret[50230] call_tmp[608469])
    (50233 'end of statement')
    unknown td[50235] "dead at end of block" "insert auto destroy"
    (540663 'init var' td[50235] desired[50156])
    (50238 'end of statement')
    unknown call_tmp[608476] "expr temp" "maybe param" "maybe type" "temp"
    (608479 'move' call_tmp[608476](50245 call(372153 call (partial) _localeid _mt[243] this[51667])))
    unknown call_tmp[608483] "expr temp" "maybe param" "maybe type" "temp"
    (608486 'move' call_tmp[608483](50248 call(372157 call (partial) _addr _mt[243] this[51667])))
    unknown call_tmp[608488] "expr temp" "maybe param" "maybe type" "temp"
    (608491 'move' call_tmp[608488](50253 call c_memory_order success[50160]))
    unknown call_tmp[608493] "expr temp" "maybe param" "maybe type" "temp"
    (608496 'move' call_tmp[608493](50257 call c_memory_order failure[50164]))
    (50258 call atomic_cmpxchg te[50222] td[50235] call_tmp[608476] call_tmp[608483] ret[50230] call_tmp[608488] call_tmp[608493])
    (474457 'end of statement' te[50222] td[50235] ret[50230])
    unknown call_tmp[608498] "expr temp" "maybe param" "maybe type" "temp"
    (608501 'move' call_tmp[608498](50261 call ! ret[50230]))
    unknown call_tmp[608503] "expr temp" "maybe param" "maybe type" "temp"
    (608506 'move' call_tmp[608503](50268 call _cond_test call_tmp[608498]))
    if call_tmp[608503]
    {
      (50265 call = expected[50150] te[50222])
      (474461 'end of statement' te[50222])
    }
    unknown call_tmp[608508] "expr temp" "maybe param" "maybe type" "temp"
    (608511 'move' call_tmp[608508](50275 call _cast bool[10] ret[50230]))
    (506542 'move' ret[506536](506541 'coerce' call_tmp[608508] bool[10]))
    gotoReturn _end_compareExchange[506534] _end_compareExchange[506534]
    (474463 'end of statement' ret[50230])
    label _end_compareExchange[506534]
    (506538 return ret[506536])
  }
  { scopeless type
    bool[10]
  }
  function RAtomicT[51633](?).compareExchangeWeak[50288](arg _mt[51673]:_MT[238], arg this[51671]:RAtomicT[51633](?), ref arg expected[50285] :
  (372169 call T _mt[243] this[51671]), arg desired[50291] :
  (372174 call T _mt[243] this[51671]), param arg order[50299]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506548] "RVV" "temp"
    unknown call_tmp[608519] "expr temp" "maybe param" "maybe type" "temp"
    (608522 'move' call_tmp[608519](50312 call(50305 call (partial) compareExchange _mt[243] this[51671]) expected[50285] desired[50291] order[50299]))
    (506554 'move' ret[506548](506553 'coerce' call_tmp[608519] bool[10]))
    (506550 return ret[506548])
  }
  { scopeless type
    bool[10]
  }
  function RAtomicT[51633](?).compareExchangeWeak[50325](arg _mt[51677]:_MT[238], arg this[51675]:RAtomicT[51633](?), ref arg expected[50322] :
  (372183 call T _mt[243] this[51675]), arg desired[50328] :
  (372188 call T _mt[243] this[51675]), param arg success[50332]:memoryOrder[186966], param arg failure[50336]:memoryOrder[186966]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506558] "RVV" "temp"
    unknown call_tmp[608530] "expr temp" "maybe param" "maybe type" "temp"
    (608533 'move' call_tmp[608530](50349 call(50341 call (partial) compareExchange _mt[243] this[51675]) expected[50322] desired[50328] success[50332] failure[50336]))
    (506564 'move' ret[506558](506563 'coerce' call_tmp[608530] bool[10]))
    (506560 return ret[506558])
  }
  { scopeless type
    bool[10]
  }
  function RAtomicT[51633](?).compareAndSwap[50362](arg _mt[51681]:_MT[238], arg this[51679]:RAtomicT[51633](?), arg expected[50359] :
  (372199 call T _mt[243] this[51679]), arg desired[50365] :
  (372204 call T _mt[243] this[51679]), param arg order[50373]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506574] "RVV" "temp"
    function atomic_cmpxchg[50389](ref arg expected[50386] :
    (372215 call T _mt[243] this[51679]), ref arg desired[50392] :
    (372220 call T _mt[243] this[51679]), arg l[50399] :
    (50398 call int(64)[13] 32), arg obj[50403]:c_void_ptr[149], ref arg result[50410] :
    (50409 call bool[10] 32), arg succ[50414]:memory_order[186607], arg fail[50418]:memory_order[186607], arg _chpl_cname[50426]:string[26] =
    unknown call_tmp[608545] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506568] "RVV" "temp"
      (506570 return ret[506568])
    }
    { scopeless type
      void[4]
    }
    unknown ret[50435] "dead at end of block" "insert auto destroy"
    unknown call_tmp[608550] "expr temp" "maybe param" "maybe type" "temp"
    (608553 'move' call_tmp[608550](50434 call bool[10] 32))
    (540665 'default init var' ret[50435] call_tmp[608550])
    (50438 'end of statement')
    unknown te[50440] "dead at end of block" "insert auto destroy"
    (540667 'init var' te[50440] expected[50359])
    (50443 'end of statement')
    unknown td[50445] "dead at end of block" "insert auto destroy"
    (540669 'init var' td[50445] desired[50365])
    (50448 'end of statement')
    unknown call_tmp[608557] "expr temp" "maybe param" "maybe type" "temp"
    (608560 'move' call_tmp[608557](50455 call(372231 call (partial) _localeid _mt[243] this[51679])))
    unknown call_tmp[608564] "expr temp" "maybe param" "maybe type" "temp"
    (608567 'move' call_tmp[608564](50458 call(372235 call (partial) _addr _mt[243] this[51679])))
    unknown call_tmp[608569] "expr temp" "maybe param" "maybe type" "temp"
    (608572 'move' call_tmp[608569](50463 call c_memory_order order[50373]))
    unknown call_tmp[608574] "expr temp" "maybe param" "maybe type" "temp"
    (608577 'move' call_tmp[608574](50468 call readableOrder order[50373]))
    unknown call_tmp[608579] "expr temp" "maybe param" "maybe type" "temp"
    (608582 'move' call_tmp[608579](50470 call c_memory_order call_tmp[608574]))
    (50471 call atomic_cmpxchg te[50440] td[50445] call_tmp[608557] call_tmp[608564] ret[50435] call_tmp[608569] call_tmp[608579])
    (474467 'end of statement' te[50440] td[50445] ret[50435])
    unknown call_tmp[608584] "expr temp" "maybe param" "maybe type" "temp"
    (608587 'move' call_tmp[608584](50475 call _cast bool[10] ret[50435]))
    (506580 'move' ret[506574](506579 'coerce' call_tmp[608584] bool[10]))
    gotoReturn _end_compareAndSwap[506572] _end_compareAndSwap[506572]
    (474471 'end of statement' ret[50435])
    label _end_compareAndSwap[506572]
    (506576 return ret[506574])
  }
  { scopeless type
    bool[10]
  }
  function RAtomicT[51633](?).fetchAdd[50488](arg _mt[51685]:_MT[238], arg this[51683]:RAtomicT[51633](?), arg value[50485] :
  (372244 call T _mt[243] this[51683]), param arg order[50495]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506592] "RVV" "temp"
    function atomic_fetch_add[50511](ref arg op[50508] :
    (372260 call T _mt[243] this[51683]), arg l[50517] :
    (50516 call int(64)[13] 32), arg obj[50521]:c_void_ptr[149], ref arg result[50525] :
    (372266 call T _mt[243] this[51683]), arg order[50529]:memory_order[186607], arg _chpl_cname[50537]:string[26] =
    unknown call_tmp[608597] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506586] "RVV" "temp"
      (506588 return ret[506586])
    }
    { scopeless type
      void[4]
    }
    unknown ret[50543] "dead at end of block" "insert auto destroy"
    unknown call_tmp[608604] "expr temp" "maybe param" "maybe type" "temp"
    (608607 'move' call_tmp[608604](372272 call T _mt[243] this[51683]))
    (540671 'default init var' ret[50543] call_tmp[608604])
    (50546 'end of statement')
    unknown v[50548] "dead at end of block" "insert auto destroy"
    (540673 'init var' v[50548] value[50485])
    (50551 'end of statement')
    unknown call_tmp[608611] "expr temp" "maybe param" "maybe type" "temp"
    (608614 'move' call_tmp[608611](50557 call(372278 call (partial) _localeid _mt[243] this[51683])))
    unknown call_tmp[608618] "expr temp" "maybe param" "maybe type" "temp"
    (608621 'move' call_tmp[608618](50560 call(372282 call (partial) _addr _mt[243] this[51683])))
    unknown call_tmp[608623] "expr temp" "maybe param" "maybe type" "temp"
    (608626 'move' call_tmp[608623](50565 call c_memory_order order[50495]))
    (50566 call atomic_fetch_add v[50548] call_tmp[608611] call_tmp[608618] ret[50543] call_tmp[608623])
    (474473 'end of statement' v[50548] ret[50543])
    unknown call_tmp[608630] "expr temp" "maybe param" "maybe type" "temp"
    (608633 'move' call_tmp[608630](506597 call T _mt[243] this[51683]))
    (506601 'move' ret[506592](506600 'coerce' ret[50543] call_tmp[608630]))
    gotoReturn _end_fetchAdd[506590] _end_fetchAdd[506590]
    (474476 'end of statement' ret[50543])
    label _end_fetchAdd[506590]
    (506594 return ret[506592])
  }
  { scopeless type
    (372250 call T _mt[243] this[51683])
  }
  function RAtomicT[51633](?).add[50580](arg _mt[51689]:_MT[238], arg this[51687]:RAtomicT[51633](?), arg value[50577] :
  (372290 call T _mt[243] this[51687]), param arg order[50587]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506613] "RVV" "temp"
    function atomic_add[50617](ref arg op[50614] :
    (372301 call T _mt[243] this[51687]), arg l[50623] :
    (50622 call int(64)[13] 32), arg obj[50627]:c_void_ptr[149], arg order[50631]:memory_order[186607], arg _chpl_cname[50639]:string[26] =
    unknown call_tmp[608643] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506607] "RVV" "temp"
      (506609 return ret[506607])
    }
    { scopeless type
      void[4]
    }
    unknown v[50645] "dead at end of block" "insert auto destroy"
    (540675 'init var' v[50645] value[50577])
    (50648 'end of statement')
    unknown call_tmp[608650] "expr temp" "maybe param" "maybe type" "temp"
    (608653 'move' call_tmp[608650](50654 call(372309 call (partial) _localeid _mt[243] this[51687])))
    unknown call_tmp[608657] "expr temp" "maybe param" "maybe type" "temp"
    (608660 'move' call_tmp[608657](50657 call(372313 call (partial) _addr _mt[243] this[51687])))
    unknown call_tmp[608662] "expr temp" "maybe param" "maybe type" "temp"
    (608665 'move' call_tmp[608662](50661 call c_memory_order order[50587]))
    (50662 call atomic_add v[50645] call_tmp[608650] call_tmp[608657] call_tmp[608662])
    (474478 'end of statement' v[50645])
    (506615 return ret[506613])
  }
  { scopeless type
    void[4]
  }
  function RAtomicT[51633](?).fetchSub[50673](arg _mt[51693]:_MT[238], arg this[51691]:RAtomicT[51633](?), arg value[50670] :
  (372319 call T _mt[243] this[51691]), param arg order[50680]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506625] "RVV" "temp"
    function atomic_fetch_sub[50696](ref arg op[50693] :
    (372335 call T _mt[243] this[51691]), arg l[50702] :
    (50701 call int(64)[13] 32), arg obj[50706]:c_void_ptr[149], ref arg result[50710] :
    (372341 call T _mt[243] this[51691]), arg order[50714]:memory_order[186607], arg _chpl_cname[50722]:string[26] =
    unknown call_tmp[608675] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506619] "RVV" "temp"
      (506621 return ret[506619])
    }
    { scopeless type
      void[4]
    }
    unknown ret[50728] "dead at end of block" "insert auto destroy"
    unknown call_tmp[608682] "expr temp" "maybe param" "maybe type" "temp"
    (608685 'move' call_tmp[608682](372347 call T _mt[243] this[51691]))
    (540677 'default init var' ret[50728] call_tmp[608682])
    (50731 'end of statement')
    unknown v[50733] "dead at end of block" "insert auto destroy"
    (540679 'init var' v[50733] value[50670])
    (50736 'end of statement')
    unknown call_tmp[608689] "expr temp" "maybe param" "maybe type" "temp"
    (608692 'move' call_tmp[608689](50742 call(372353 call (partial) _localeid _mt[243] this[51691])))
    unknown call_tmp[608696] "expr temp" "maybe param" "maybe type" "temp"
    (608699 'move' call_tmp[608696](50745 call(372357 call (partial) _addr _mt[243] this[51691])))
    unknown call_tmp[608701] "expr temp" "maybe param" "maybe type" "temp"
    (608704 'move' call_tmp[608701](50750 call c_memory_order order[50680]))
    (50751 call atomic_fetch_sub v[50733] call_tmp[608689] call_tmp[608696] ret[50728] call_tmp[608701])
    (474480 'end of statement' v[50733] ret[50728])
    unknown call_tmp[608708] "expr temp" "maybe param" "maybe type" "temp"
    (608711 'move' call_tmp[608708](506630 call T _mt[243] this[51691]))
    (506634 'move' ret[506625](506633 'coerce' ret[50728] call_tmp[608708]))
    gotoReturn _end_fetchSub[506623] _end_fetchSub[506623]
    (474483 'end of statement' ret[50728])
    label _end_fetchSub[506623]
    (506627 return ret[506625])
  }
  { scopeless type
    (372325 call T _mt[243] this[51691])
  }
  function RAtomicT[51633](?).sub[50765](arg _mt[51697]:_MT[238], arg this[51695]:RAtomicT[51633](?), arg value[50762] :
  (372365 call T _mt[243] this[51695]), param arg order[50772]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506646] "RVV" "temp"
    function atomic_sub[50802](ref arg op[50799] :
    (372376 call T _mt[243] this[51695]), arg l[50808] :
    (50807 call int(64)[13] 32), arg obj[50812]:c_void_ptr[149], arg order[50816]:memory_order[186607], arg _chpl_cname[50824]:string[26] =
    unknown call_tmp[608721] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506640] "RVV" "temp"
      (506642 return ret[506640])
    }
    { scopeless type
      void[4]
    }
    unknown v[50830] "dead at end of block" "insert auto destroy"
    (540681 'init var' v[50830] value[50762])
    (50833 'end of statement')
    unknown call_tmp[608728] "expr temp" "maybe param" "maybe type" "temp"
    (608731 'move' call_tmp[608728](50839 call(372384 call (partial) _localeid _mt[243] this[51695])))
    unknown call_tmp[608735] "expr temp" "maybe param" "maybe type" "temp"
    (608738 'move' call_tmp[608735](50842 call(372388 call (partial) _addr _mt[243] this[51695])))
    unknown call_tmp[608740] "expr temp" "maybe param" "maybe type" "temp"
    (608743 'move' call_tmp[608740](50846 call c_memory_order order[50772]))
    (50847 call atomic_sub v[50830] call_tmp[608728] call_tmp[608735] call_tmp[608740])
    (474485 'end of statement' v[50830])
    (506648 return ret[506646])
  }
  { scopeless type
    void[4]
  }
  function RAtomicT[51633](?).fetchOr[50858](arg _mt[51701]:_MT[238], arg this[51699]:RAtomicT[51633](?), arg value[50855] :
  (372394 call T _mt[243] this[51699]), param arg order[50865]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506658] "RVV" "temp"
    unknown call_tmp[608749] "expr temp" "maybe param" "maybe type" "temp"
    (608752 'move' call_tmp[608749](372405 call T _mt[243] this[51699]))
    unknown call_tmp[608754] "expr temp" "maybe param" "maybe type" "temp"
    (608757 'move' call_tmp[608754](50873 call isIntegral call_tmp[608749]))
    unknown call_tmp[608759] "expr temp" "maybe param" "maybe type" "temp"
    (608762 'move' call_tmp[608759](50874 call ! call_tmp[608754]))
    unknown call_tmp[608764] "expr temp" "maybe param" "maybe type" "temp"
    (608767 'move' call_tmp[608764](50881 call _cond_test call_tmp[608759]))
    if call_tmp[608764]
    {
      (50879 call compilerError "fetchOr is only defined for integer atomic types")
    }
    function atomic_fetch_or[50898](ref arg op[50895] :
    (372415 call T _mt[243] this[51699]), arg l[50904] :
    (50903 call int(64)[13] 32), arg obj[50908]:c_void_ptr[149], ref arg result[50912] :
    (372421 call T _mt[243] this[51699]), arg order[50916]:memory_order[186607], arg _chpl_cname[50924]:string[26] =
    unknown call_tmp[608775] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506652] "RVV" "temp"
      (506654 return ret[506652])
    }
    { scopeless type
      void[4]
    }
    unknown ret[50929] "dead at end of block" "insert auto destroy"
    unknown call_tmp[608782] "expr temp" "maybe param" "maybe type" "temp"
    (608785 'move' call_tmp[608782](372427 call T _mt[243] this[51699]))
    (540683 'default init var' ret[50929] call_tmp[608782])
    (50932 'end of statement')
    unknown v[50934] "dead at end of block" "insert auto destroy"
    (540685 'init var' v[50934] value[50855])
    (50937 'end of statement')
    unknown call_tmp[608789] "expr temp" "maybe param" "maybe type" "temp"
    (608792 'move' call_tmp[608789](50943 call(372433 call (partial) _localeid _mt[243] this[51699])))
    unknown call_tmp[608796] "expr temp" "maybe param" "maybe type" "temp"
    (608799 'move' call_tmp[608796](50946 call(372437 call (partial) _addr _mt[243] this[51699])))
    unknown call_tmp[608801] "expr temp" "maybe param" "maybe type" "temp"
    (608804 'move' call_tmp[608801](50951 call c_memory_order order[50865]))
    (50952 call atomic_fetch_or v[50934] call_tmp[608789] call_tmp[608796] ret[50929] call_tmp[608801])
    (474488 'end of statement' v[50934] ret[50929])
    unknown call_tmp[608808] "expr temp" "maybe param" "maybe type" "temp"
    (608811 'move' call_tmp[608808](506663 call T _mt[243] this[51699]))
    (506667 'move' ret[506658](506666 'coerce' ret[50929] call_tmp[608808]))
    gotoReturn _end_fetchOr[506656] _end_fetchOr[506656]
    (474491 'end of statement' ret[50929])
    label _end_fetchOr[506656]
    (506660 return ret[506658])
  }
  { scopeless type
    (372400 call T _mt[243] this[51699])
  }
  function RAtomicT[51633](?).or[50966](arg _mt[51705]:_MT[238], arg this[51703]:RAtomicT[51633](?), arg value[50963] :
  (372445 call T _mt[243] this[51703]), param arg order[50973]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506679] "RVV" "temp"
    unknown call_tmp[608819] "expr temp" "maybe param" "maybe type" "temp"
    (608822 'move' call_tmp[608819](372451 call T _mt[243] this[51703]))
    unknown call_tmp[608824] "expr temp" "maybe param" "maybe type" "temp"
    (608827 'move' call_tmp[608824](50981 call isIntegral call_tmp[608819]))
    unknown call_tmp[608829] "expr temp" "maybe param" "maybe type" "temp"
    (608832 'move' call_tmp[608829](50982 call ! call_tmp[608824]))
    unknown call_tmp[608834] "expr temp" "maybe param" "maybe type" "temp"
    (608837 'move' call_tmp[608834](50989 call _cond_test call_tmp[608829]))
    if call_tmp[608834]
    {
      (50987 call compilerError "or is only defined for integer atomic types")
    }
    function atomic_or[51022](ref arg op[51019] :
    (372461 call T _mt[243] this[51703]), arg l[51028] :
    (51027 call int(64)[13] 32), arg obj[51032]:c_void_ptr[149], arg order[51036]:memory_order[186607], arg _chpl_cname[51044]:string[26] =
    unknown call_tmp[608843] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506673] "RVV" "temp"
      (506675 return ret[506673])
    }
    { scopeless type
      void[4]
    }
    unknown v[51049] "dead at end of block" "insert auto destroy"
    (540687 'init var' v[51049] value[50963])
    (51052 'end of statement')
    unknown call_tmp[608850] "expr temp" "maybe param" "maybe type" "temp"
    (608853 'move' call_tmp[608850](51058 call(372469 call (partial) _localeid _mt[243] this[51703])))
    unknown call_tmp[608857] "expr temp" "maybe param" "maybe type" "temp"
    (608860 'move' call_tmp[608857](51061 call(372473 call (partial) _addr _mt[243] this[51703])))
    unknown call_tmp[608862] "expr temp" "maybe param" "maybe type" "temp"
    (608865 'move' call_tmp[608862](51065 call c_memory_order order[50973]))
    (51066 call atomic_or v[51049] call_tmp[608850] call_tmp[608857] call_tmp[608862])
    (474494 'end of statement' v[51049])
    (506681 return ret[506679])
  }
  { scopeless type
    void[4]
  }
  function RAtomicT[51633](?).fetchAnd[51077](arg _mt[51709]:_MT[238], arg this[51707]:RAtomicT[51633](?), arg value[51074] :
  (372479 call T _mt[243] this[51707]), param arg order[51084]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506691] "RVV" "temp"
    unknown call_tmp[608871] "expr temp" "maybe param" "maybe type" "temp"
    (608874 'move' call_tmp[608871](372490 call T _mt[243] this[51707]))
    unknown call_tmp[608876] "expr temp" "maybe param" "maybe type" "temp"
    (608879 'move' call_tmp[608876](51092 call isIntegral call_tmp[608871]))
    unknown call_tmp[608881] "expr temp" "maybe param" "maybe type" "temp"
    (608884 'move' call_tmp[608881](51093 call ! call_tmp[608876]))
    unknown call_tmp[608886] "expr temp" "maybe param" "maybe type" "temp"
    (608889 'move' call_tmp[608886](51100 call _cond_test call_tmp[608881]))
    if call_tmp[608886]
    {
      (51098 call compilerError "fetchAnd is only defined for integer atomic types")
    }
    function atomic_fetch_and[51117](ref arg op[51114] :
    (372500 call T _mt[243] this[51707]), arg l[51123] :
    (51122 call int(64)[13] 32), arg obj[51127]:c_void_ptr[149], ref arg result[51131] :
    (372506 call T _mt[243] this[51707]), arg order[51135]:memory_order[186607], arg _chpl_cname[51143]:string[26] =
    unknown call_tmp[608897] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506685] "RVV" "temp"
      (506687 return ret[506685])
    }
    { scopeless type
      void[4]
    }
    unknown ret[51148] "dead at end of block" "insert auto destroy"
    unknown call_tmp[608904] "expr temp" "maybe param" "maybe type" "temp"
    (608907 'move' call_tmp[608904](372512 call T _mt[243] this[51707]))
    (540689 'default init var' ret[51148] call_tmp[608904])
    (51151 'end of statement')
    unknown v[51153] "dead at end of block" "insert auto destroy"
    (540691 'init var' v[51153] value[51074])
    (51156 'end of statement')
    unknown call_tmp[608911] "expr temp" "maybe param" "maybe type" "temp"
    (608914 'move' call_tmp[608911](51162 call(372518 call (partial) _localeid _mt[243] this[51707])))
    unknown call_tmp[608918] "expr temp" "maybe param" "maybe type" "temp"
    (608921 'move' call_tmp[608918](51165 call(372522 call (partial) _addr _mt[243] this[51707])))
    unknown call_tmp[608923] "expr temp" "maybe param" "maybe type" "temp"
    (608926 'move' call_tmp[608923](51170 call c_memory_order order[51084]))
    (51171 call atomic_fetch_and v[51153] call_tmp[608911] call_tmp[608918] ret[51148] call_tmp[608923])
    (474497 'end of statement' v[51153] ret[51148])
    unknown call_tmp[608930] "expr temp" "maybe param" "maybe type" "temp"
    (608933 'move' call_tmp[608930](506696 call T _mt[243] this[51707]))
    (506700 'move' ret[506691](506699 'coerce' ret[51148] call_tmp[608930]))
    gotoReturn _end_fetchAnd[506689] _end_fetchAnd[506689]
    (474500 'end of statement' ret[51148])
    label _end_fetchAnd[506689]
    (506693 return ret[506691])
  }
  { scopeless type
    (372485 call T _mt[243] this[51707])
  }
  function RAtomicT[51633](?).and[51185](arg _mt[51713]:_MT[238], arg this[51711]:RAtomicT[51633](?), arg value[51182] :
  (372530 call T _mt[243] this[51711]), param arg order[51192]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506712] "RVV" "temp"
    unknown call_tmp[608941] "expr temp" "maybe param" "maybe type" "temp"
    (608944 'move' call_tmp[608941](372536 call T _mt[243] this[51711]))
    unknown call_tmp[608946] "expr temp" "maybe param" "maybe type" "temp"
    (608949 'move' call_tmp[608946](51200 call isIntegral call_tmp[608941]))
    unknown call_tmp[608951] "expr temp" "maybe param" "maybe type" "temp"
    (608954 'move' call_tmp[608951](51201 call ! call_tmp[608946]))
    unknown call_tmp[608956] "expr temp" "maybe param" "maybe type" "temp"
    (608959 'move' call_tmp[608956](51208 call _cond_test call_tmp[608951]))
    if call_tmp[608956]
    {
      (51206 call compilerError "and is only defined for integer atomic types")
    }
    function atomic_and[51241](ref arg op[51238] :
    (372546 call T _mt[243] this[51711]), arg l[51247] :
    (51246 call int(64)[13] 32), arg obj[51251]:c_void_ptr[149], arg order[51255]:memory_order[186607], arg _chpl_cname[51263]:string[26] =
    unknown call_tmp[608965] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506706] "RVV" "temp"
      (506708 return ret[506706])
    }
    { scopeless type
      void[4]
    }
    unknown v[51268] "dead at end of block" "insert auto destroy"
    (540693 'init var' v[51268] value[51182])
    (51271 'end of statement')
    unknown call_tmp[608972] "expr temp" "maybe param" "maybe type" "temp"
    (608975 'move' call_tmp[608972](51277 call(372554 call (partial) _localeid _mt[243] this[51711])))
    unknown call_tmp[608979] "expr temp" "maybe param" "maybe type" "temp"
    (608982 'move' call_tmp[608979](51280 call(372558 call (partial) _addr _mt[243] this[51711])))
    unknown call_tmp[608984] "expr temp" "maybe param" "maybe type" "temp"
    (608987 'move' call_tmp[608984](51284 call c_memory_order order[51192]))
    (51285 call atomic_and v[51268] call_tmp[608972] call_tmp[608979] call_tmp[608984])
    (474503 'end of statement' v[51268])
    (506714 return ret[506712])
  }
  { scopeless type
    void[4]
  }
  function RAtomicT[51633](?).fetchXor[51296](arg _mt[51717]:_MT[238], arg this[51715]:RAtomicT[51633](?), arg value[51293] :
  (372564 call T _mt[243] this[51715]), param arg order[51303]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506724] "RVV" "temp"
    unknown call_tmp[608993] "expr temp" "maybe param" "maybe type" "temp"
    (608996 'move' call_tmp[608993](372575 call T _mt[243] this[51715]))
    unknown call_tmp[608998] "expr temp" "maybe param" "maybe type" "temp"
    (609001 'move' call_tmp[608998](51311 call isIntegral call_tmp[608993]))
    unknown call_tmp[609003] "expr temp" "maybe param" "maybe type" "temp"
    (609006 'move' call_tmp[609003](51312 call ! call_tmp[608998]))
    unknown call_tmp[609008] "expr temp" "maybe param" "maybe type" "temp"
    (609011 'move' call_tmp[609008](51319 call _cond_test call_tmp[609003]))
    if call_tmp[609008]
    {
      (51317 call compilerError "fetchXor is only defined for integer atomic types")
    }
    function atomic_fetch_xor[51336](ref arg op[51333] :
    (372585 call T _mt[243] this[51715]), arg l[51342] :
    (51341 call int(64)[13] 32), arg obj[51346]:c_void_ptr[149], ref arg result[51350] :
    (372591 call T _mt[243] this[51715]), arg order[51354]:memory_order[186607], arg _chpl_cname[51362]:string[26] =
    unknown call_tmp[609019] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506718] "RVV" "temp"
      (506720 return ret[506718])
    }
    { scopeless type
      void[4]
    }
    unknown ret[51367] "dead at end of block" "insert auto destroy"
    unknown call_tmp[609026] "expr temp" "maybe param" "maybe type" "temp"
    (609029 'move' call_tmp[609026](372597 call T _mt[243] this[51715]))
    (540695 'default init var' ret[51367] call_tmp[609026])
    (51370 'end of statement')
    unknown v[51372] "dead at end of block" "insert auto destroy"
    (540697 'init var' v[51372] value[51293])
    (51375 'end of statement')
    unknown call_tmp[609033] "expr temp" "maybe param" "maybe type" "temp"
    (609036 'move' call_tmp[609033](51381 call(372603 call (partial) _localeid _mt[243] this[51715])))
    unknown call_tmp[609040] "expr temp" "maybe param" "maybe type" "temp"
    (609043 'move' call_tmp[609040](51384 call(372607 call (partial) _addr _mt[243] this[51715])))
    unknown call_tmp[609045] "expr temp" "maybe param" "maybe type" "temp"
    (609048 'move' call_tmp[609045](51389 call c_memory_order order[51303]))
    (51390 call atomic_fetch_xor v[51372] call_tmp[609033] call_tmp[609040] ret[51367] call_tmp[609045])
    (474506 'end of statement' v[51372] ret[51367])
    unknown call_tmp[609052] "expr temp" "maybe param" "maybe type" "temp"
    (609055 'move' call_tmp[609052](506729 call T _mt[243] this[51715]))
    (506733 'move' ret[506724](506732 'coerce' ret[51367] call_tmp[609052]))
    gotoReturn _end_fetchXor[506722] _end_fetchXor[506722]
    (474509 'end of statement' ret[51367])
    label _end_fetchXor[506722]
    (506726 return ret[506724])
  }
  { scopeless type
    (372570 call T _mt[243] this[51715])
  }
  function RAtomicT[51633](?).xor[51404](arg _mt[51721]:_MT[238], arg this[51719]:RAtomicT[51633](?), arg value[51401] :
  (372615 call T _mt[243] this[51719]), param arg order[51411]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506745] "RVV" "temp"
    unknown call_tmp[609063] "expr temp" "maybe param" "maybe type" "temp"
    (609066 'move' call_tmp[609063](372621 call T _mt[243] this[51719]))
    unknown call_tmp[609068] "expr temp" "maybe param" "maybe type" "temp"
    (609071 'move' call_tmp[609068](51419 call isIntegral call_tmp[609063]))
    unknown call_tmp[609073] "expr temp" "maybe param" "maybe type" "temp"
    (609076 'move' call_tmp[609073](51420 call ! call_tmp[609068]))
    unknown call_tmp[609078] "expr temp" "maybe param" "maybe type" "temp"
    (609081 'move' call_tmp[609078](51427 call _cond_test call_tmp[609073]))
    if call_tmp[609078]
    {
      (51425 call compilerError "xor is only defined for integer atomic types")
    }
    function atomic_xor[51460](ref arg op[51457] :
    (372631 call T _mt[243] this[51719]), arg l[51466] :
    (51465 call int(64)[13] 32), arg obj[51470]:c_void_ptr[149], arg order[51474]:memory_order[186607], arg _chpl_cname[51482]:string[26] =
    unknown call_tmp[609087] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "no return value for void"
    {
      unknown ret[506739] "RVV" "temp"
      (506741 return ret[506739])
    }
    { scopeless type
      void[4]
    }
    unknown v[51487] "dead at end of block" "insert auto destroy"
    (540699 'init var' v[51487] value[51401])
    (51490 'end of statement')
    unknown call_tmp[609094] "expr temp" "maybe param" "maybe type" "temp"
    (609097 'move' call_tmp[609094](51496 call(372639 call (partial) _localeid _mt[243] this[51719])))
    unknown call_tmp[609101] "expr temp" "maybe param" "maybe type" "temp"
    (609104 'move' call_tmp[609101](51499 call(372643 call (partial) _addr _mt[243] this[51719])))
    unknown call_tmp[609106] "expr temp" "maybe param" "maybe type" "temp"
    (609109 'move' call_tmp[609106](51503 call c_memory_order order[51411]))
    (51504 call atomic_xor v[51487] call_tmp[609094] call_tmp[609101] call_tmp[609106])
    (474512 'end of statement' v[51487])
    (506747 return ret[506745])
  }
  { scopeless type
    void[4]
  }
  function RAtomicT[51633](?).waitFor[51515](arg _mt[51725]:_MT[238], const arg this[51723]:RAtomicT[51633](?), arg value[51512] :
  (372649 call T _mt[243] this[51723]), param arg order[51522]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506751] "RVV" "temp"
    const tmp[51604] "const" "temp"
    unknown call_tmp[609113] "expr temp" "maybe param" "maybe type" "temp"
    (609116 'move' call_tmp[609113](51601 '_wide_get_locale' this[51723]))
    (51606 'move' tmp[51604](51602 'deref' call_tmp[609113]))
    (934123 call on_fn[934119] tmp[51604])
    function on_fn[934119](const in arg dummy_locale_arg[934121]:chpl_localeID_t[209294]) : void[4] "on"
    {
      {
        {
          unknown tmp[51547] "temp"
          unknown call_tmp[609120] "expr temp" "maybe param" "maybe type" "temp"
          (609123 'move' call_tmp[609120](51582 call(51579 call (partial) read _mt[243] this[51723])(order = relaxed[186964])))
          unknown call_tmp[609125] "expr temp" "maybe param" "maybe type" "temp"
          (609128 'move' call_tmp[609125](51577 call != call_tmp[609120] value[51512]))
          (51589 'move' tmp[51547](51575 call _cond_test call_tmp[609125]))
          WhileDo[51552]
          {
            {
              (51544 call chpl_task_yield)
            }
            label _continueLabel[51550]
            unknown call_tmp[609132] "expr temp" "maybe param" "maybe type" "temp"
            (609135 'move' call_tmp[609132](51563 call(51560 call (partial) read _mt[243] this[51723])(order = relaxed[186964])))
            unknown call_tmp[609137] "expr temp" "maybe param" "maybe type" "temp"
            (609140 'move' call_tmp[609137](51558 call != call_tmp[609132] value[51512]))
            (51570 'move' tmp[51547](51556 call _cond_test call_tmp[609137]))
            tmp[51547]
          }
          label _breakLabel[51551]
        }
        unknown call_tmp[609142] "expr temp" "maybe param" "maybe type" "temp"
        (609145 'move' call_tmp[609142](51597 call c_memory_order order[51522]))
        (51599 call chpl_atomic_thread_fence call_tmp[609142])
      }
      (934126 return _void[55])
    }
    {
    }
    (506753 return ret[506751])
  }
  { scopeless type
    void[4]
  }
  function RAtomicT[51633](?).writeThis[51620](arg _mt[51729]:_MT[238], const arg this[51727]:RAtomicT[51633](?), arg x[51618]:_any[178](?)) : _unknown[51] throws "atomic type" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[609149] "expr temp" "maybe param" "maybe type" "temp"
    (609152 'move' call_tmp[609149](51625 call(372659 call (partial) read _mt[243] this[51727])))
    (51626 call <~> x[51618] call_tmp[609149])
    (506755 return _void[55])
  }
  function RAtomicT[51633](?).T[764233](arg _mt[764235]:_MT[238], arg this[764237]:RAtomicT[51633](?)) type : _unknown[51] "atomic type" "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[764256] "RVV" "temp" "type variable"
    unknown call_tmp[764270] "expr temp" "maybe param" "maybe type" "temp"
    (764273 'move' call_tmp[764270](764242 'is bound' this[764237] c"T"))
    if call_tmp[764270]
    {
      unknown call_tmp[764275] "expr temp" "maybe param" "maybe type" "temp"
      (764278 'move' call_tmp[764275](764241 '.v' this[764237] c"T"))
      (764261 'move' ret[764256](764260 'deref' call_tmp[764275]))
      gotoReturn _end_T[764254] _end_T[764254]
    }
    {
      (764266 'move' ret[764256](764265 'deref' _uninstantiated[258]))
      gotoReturn _end_T[764254] _end_T[764254]
    }
    label _end_T[764254]
    (764258 return ret[764256])
  }
  function RAtomicT[51633](?).T[764280](arg _mt[764282]:_MT[238], arg this[764284]:RAtomicT[51633](?)) type : _unknown[51] "atomic type" "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[764303] "RVV" "temp" "type variable"
    unknown call_tmp[764317] "expr temp" "maybe param" "maybe type" "temp"
    (764320 'move' call_tmp[764317](764289 'is bound' this[764284] c"T"))
    if call_tmp[764317]
    {
      unknown call_tmp[764322] "expr temp" "maybe param" "maybe type" "temp"
      (764325 'move' call_tmp[764322](764288 '.v' this[764284] c"T"))
      (764308 'move' ret[764303](764307 'deref' call_tmp[764322]))
      gotoReturn _end_T[764301] _end_T[764301]
    }
    {
      (764313 'move' ret[764303](764312 'deref' _uninstantiated[258]))
      gotoReturn _end_T[764301] _end_T[764301]
    }
    label _end_T[764301]
    (764305 return ret[764303])
  }
  function RAtomicT[51633](?)._v[764327](arg _mt[764329]:_MT[238], ref arg this[764331]:RAtomicT[51633](?)) ref : _unknown[51] "atomic type" "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[764341] "RVV" "temp"
    unknown call_tmp[764348] "expr temp" "maybe param" "maybe type" "temp"
    (764351 'move' call_tmp[764348](764335 '.' this[764331] c"_v"))
    (764346 'move' ret[764341](764345 'addr of' call_tmp[764348]))
    (764343 return ret[764341])
  }
  function RAtomicT[51633](?).init[764353](arg _mt[764355]:_MT[238], ref arg this[764356]:RAtomicT[51633](?), arg T[764359]:_any[178](?), in arg _v[764368] :
  T[764359] =
  _typeDefaultT[250]) : void[4] "compiler generated" "last resort" "method" "primary method" "suppress lvalue error"
  {
    (764382 'init field' this[764356] c"T" T[764359])
    (764385 'init field' this[764356] c"_v" _v[764368])
    (764388 'end of statement')
    (764389 return _void[55])
  }
  function RAtomicT[51633](?).deinit[764391](arg _mt[764393]:_MT[238], arg this[764395]:RAtomicT[51633](?)) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (764403 return _void[55])
  }
  function chpl_fields_are_comparable[764417](arg _arg1[764419]:RAtomicT[51633](?), arg _arg2[764420]:RAtomicT[51633](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[764438]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[764445] "expr temp" "maybe param" "maybe type" "temp"
    (764448 'move' call_tmp[764445](764423 call _v _mt[243] _arg1[764419]))
    unknown call_tmp[764450] "expr temp" "maybe param" "maybe type" "temp"
    (764453 'move' call_tmp[764450](764427 call _v _mt[243] _arg2[764420]))
    unknown call_tmp[764455] "expr temp" "maybe param" "maybe type" "temp"
    (764458 'move' call_tmp[764455](764431 'call resolves' c"==" call_tmp[764445] call_tmp[764450]))
    (764443 'move' ret[764438](764442 'deref' call_tmp[764455]))
    (764440 return ret[764438])
  }
  function ==[764405](arg _arg1[764407]:RAtomicT[51633](?), arg _arg2[764408]:RAtomicT[51633](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[764487]:bool[10] "RVV" "temp"
    unknown call_tmp[764499] "expr temp" "maybe param" "maybe type" "temp"
    (764502 'move' call_tmp[764499](764466 call _v _mt[243] _arg1[764407]))
    unknown call_tmp[764504] "expr temp" "maybe param" "maybe type" "temp"
    (764507 'move' call_tmp[764504](764470 call _v _mt[243] _arg2[764408]))
    unknown call_tmp[764509] "expr temp" "maybe param" "maybe type" "temp"
    (764512 'move' call_tmp[764509](764474 call != call_tmp[764499] call_tmp[764504]))
    if call_tmp[764509]
    {
      (764492 'move' ret[764487](764491 'deref' 0))
      gotoReturn _end_==[764485] _end_==[764485]
    }
    (764497 'move' ret[764487](764496 'deref' 1))
    label _end_==[764485]
    (764489 return ret[764487])
  }
  where {
    unknown call_tmp[764514] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (764517 'move' call_tmp[764514](764411 'typeof' _arg1[764407]))
    unknown call_tmp[764519] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (764522 'move' call_tmp[764519](764413 'typeof' _arg2[764408]))
    unknown call_tmp[764524] "expr temp" "maybe param" "maybe type" "temp"
    (764527 'move' call_tmp[764524](764415 call == call_tmp[764514] call_tmp[764519]))
    unknown call_tmp[764529] "expr temp" "maybe param" "maybe type" "temp"
    (764532 'move' call_tmp[764529](764460 call chpl_fields_are_comparable[764417] _arg1[764407] _arg2[764408]))
    (764464 '&' call_tmp[764524] call_tmp[764529])
  }
  function chpl_fields_are_comparable[764546](arg _arg1[764548]:RAtomicT[51633](?), arg _arg2[764549]:RAtomicT[51633](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[764567]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[764574] "expr temp" "maybe param" "maybe type" "temp"
    (764577 'move' call_tmp[764574](764552 call _v _mt[243] _arg1[764548]))
    unknown call_tmp[764579] "expr temp" "maybe param" "maybe type" "temp"
    (764582 'move' call_tmp[764579](764556 call _v _mt[243] _arg2[764549]))
    unknown call_tmp[764584] "expr temp" "maybe param" "maybe type" "temp"
    (764587 'move' call_tmp[764584](764560 'call resolves' c"!=" call_tmp[764574] call_tmp[764579]))
    (764572 'move' ret[764567](764571 'deref' call_tmp[764584]))
    (764569 return ret[764567])
  }
  function !=[764534](arg _arg1[764536]:RAtomicT[51633](?), arg _arg2[764537]:RAtomicT[51633](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[764616]:bool[10] "RVV" "temp"
    unknown call_tmp[764628] "expr temp" "maybe param" "maybe type" "temp"
    (764631 'move' call_tmp[764628](764595 call _v _mt[243] _arg1[764536]))
    unknown call_tmp[764633] "expr temp" "maybe param" "maybe type" "temp"
    (764636 'move' call_tmp[764633](764599 call _v _mt[243] _arg2[764537]))
    unknown call_tmp[764638] "expr temp" "maybe param" "maybe type" "temp"
    (764641 'move' call_tmp[764638](764603 call != call_tmp[764628] call_tmp[764633]))
    if call_tmp[764638]
    {
      (764621 'move' ret[764616](764620 'deref' 1))
      gotoReturn _end_!=[764614] _end_!=[764614]
    }
    (764626 'move' ret[764616](764625 'deref' 0))
    label _end_!=[764614]
    (764618 return ret[764616])
  }
  where {
    unknown call_tmp[764643] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (764646 'move' call_tmp[764643](764540 'typeof' _arg1[764536]))
    unknown call_tmp[764648] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (764651 'move' call_tmp[764648](764542 'typeof' _arg2[764537]))
    unknown call_tmp[764653] "expr temp" "maybe param" "maybe type" "temp"
    (764656 'move' call_tmp[764653](764544 call == call_tmp[764643] call_tmp[764648]))
    unknown call_tmp[764658] "expr temp" "maybe param" "maybe type" "temp"
    (764661 'move' call_tmp[764658](764589 call chpl_fields_are_comparable[764546] _arg1[764536] _arg2[764537]))
    (764593 '&' call_tmp[764653] call_tmp[764658])
  }
  function chpl_fields_are_comparable[764675](arg _arg1[764677]:RAtomicT[51633](?), arg _arg2[764678]:RAtomicT[51633](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[764696]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[764703] "expr temp" "maybe param" "maybe type" "temp"
    (764706 'move' call_tmp[764703](764681 call _v _mt[243] _arg1[764677]))
    unknown call_tmp[764708] "expr temp" "maybe param" "maybe type" "temp"
    (764711 'move' call_tmp[764708](764685 call _v _mt[243] _arg2[764678]))
    unknown call_tmp[764713] "expr temp" "maybe param" "maybe type" "temp"
    (764716 'move' call_tmp[764713](764689 'call resolves' c"<" call_tmp[764703] call_tmp[764708]))
    (764701 'move' ret[764696](764700 'deref' call_tmp[764713]))
    (764698 return ret[764696])
  }
  function <[764663](arg _arg1[764665]:RAtomicT[51633](?), arg _arg2[764666]:RAtomicT[51633](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[764760]:bool[10] "RVV" "temp"
    unknown call_tmp[764777] "expr temp" "maybe param" "maybe type" "temp"
    (764780 'move' call_tmp[764777](764724 call _v _mt[243] _arg1[764665]))
    unknown call_tmp[764782] "expr temp" "maybe param" "maybe type" "temp"
    (764785 'move' call_tmp[764782](764728 call _v _mt[243] _arg2[764666]))
    unknown call_tmp[764787] "expr temp" "maybe param" "maybe type" "temp"
    (764790 'move' call_tmp[764787](764732 call < call_tmp[764777] call_tmp[764782]))
    if call_tmp[764787]
    {
      (764765 'move' ret[764760](764764 'deref' 1))
      gotoReturn _end_<[764758] _end_<[764758]
    }
    unknown call_tmp[764792] "expr temp" "maybe param" "maybe type" "temp"
    (764795 'move' call_tmp[764792](764738 call _v _mt[243] _arg1[764665]))
    unknown call_tmp[764797] "expr temp" "maybe param" "maybe type" "temp"
    (764800 'move' call_tmp[764797](764742 call _v _mt[243] _arg2[764666]))
    unknown call_tmp[764802] "expr temp" "maybe param" "maybe type" "temp"
    (764805 'move' call_tmp[764802](764746 call > call_tmp[764792] call_tmp[764797]))
    if call_tmp[764802]
    {
      (764770 'move' ret[764760](764769 'deref' 0))
      gotoReturn _end_<[764758] _end_<[764758]
    }
    (764775 'move' ret[764760](764774 'deref' 0))
    label _end_<[764758]
    (764762 return ret[764760])
  }
  where {
    unknown call_tmp[764807] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (764810 'move' call_tmp[764807](764669 'typeof' _arg1[764665]))
    unknown call_tmp[764812] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (764815 'move' call_tmp[764812](764671 'typeof' _arg2[764666]))
    unknown call_tmp[764817] "expr temp" "maybe param" "maybe type" "temp"
    (764820 'move' call_tmp[764817](764673 call == call_tmp[764807] call_tmp[764812]))
    unknown call_tmp[764822] "expr temp" "maybe param" "maybe type" "temp"
    (764825 'move' call_tmp[764822](764718 call chpl_fields_are_comparable[764675] _arg1[764665] _arg2[764666]))
    (764722 '&' call_tmp[764817] call_tmp[764822])
  }
  function chpl_fields_are_comparable[764839](arg _arg1[764841]:RAtomicT[51633](?), arg _arg2[764842]:RAtomicT[51633](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[764860]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[764867] "expr temp" "maybe param" "maybe type" "temp"
    (764870 'move' call_tmp[764867](764845 call _v _mt[243] _arg1[764841]))
    unknown call_tmp[764872] "expr temp" "maybe param" "maybe type" "temp"
    (764875 'move' call_tmp[764872](764849 call _v _mt[243] _arg2[764842]))
    unknown call_tmp[764877] "expr temp" "maybe param" "maybe type" "temp"
    (764880 'move' call_tmp[764877](764853 'call resolves' c"<=" call_tmp[764867] call_tmp[764872]))
    (764865 'move' ret[764860](764864 'deref' call_tmp[764877]))
    (764862 return ret[764860])
  }
  function <=[764827](arg _arg1[764829]:RAtomicT[51633](?), arg _arg2[764830]:RAtomicT[51633](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[764924]:bool[10] "RVV" "temp"
    unknown call_tmp[764941] "expr temp" "maybe param" "maybe type" "temp"
    (764944 'move' call_tmp[764941](764888 call _v _mt[243] _arg1[764829]))
    unknown call_tmp[764946] "expr temp" "maybe param" "maybe type" "temp"
    (764949 'move' call_tmp[764946](764892 call _v _mt[243] _arg2[764830]))
    unknown call_tmp[764951] "expr temp" "maybe param" "maybe type" "temp"
    (764954 'move' call_tmp[764951](764896 call < call_tmp[764941] call_tmp[764946]))
    if call_tmp[764951]
    {
      (764929 'move' ret[764924](764928 'deref' 1))
      gotoReturn _end_<=[764922] _end_<=[764922]
    }
    unknown call_tmp[764956] "expr temp" "maybe param" "maybe type" "temp"
    (764959 'move' call_tmp[764956](764902 call _v _mt[243] _arg1[764829]))
    unknown call_tmp[764961] "expr temp" "maybe param" "maybe type" "temp"
    (764964 'move' call_tmp[764961](764906 call _v _mt[243] _arg2[764830]))
    unknown call_tmp[764966] "expr temp" "maybe param" "maybe type" "temp"
    (764969 'move' call_tmp[764966](764910 call > call_tmp[764956] call_tmp[764961]))
    if call_tmp[764966]
    {
      (764934 'move' ret[764924](764933 'deref' 0))
      gotoReturn _end_<=[764922] _end_<=[764922]
    }
    (764939 'move' ret[764924](764938 'deref' 1))
    label _end_<=[764922]
    (764926 return ret[764924])
  }
  where {
    unknown call_tmp[764971] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (764974 'move' call_tmp[764971](764833 'typeof' _arg1[764829]))
    unknown call_tmp[764976] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (764979 'move' call_tmp[764976](764835 'typeof' _arg2[764830]))
    unknown call_tmp[764981] "expr temp" "maybe param" "maybe type" "temp"
    (764984 'move' call_tmp[764981](764837 call == call_tmp[764971] call_tmp[764976]))
    unknown call_tmp[764986] "expr temp" "maybe param" "maybe type" "temp"
    (764989 'move' call_tmp[764986](764882 call chpl_fields_are_comparable[764839] _arg1[764829] _arg2[764830]))
    (764886 '&' call_tmp[764981] call_tmp[764986])
  }
  function chpl_fields_are_comparable[765003](arg _arg1[765005]:RAtomicT[51633](?), arg _arg2[765006]:RAtomicT[51633](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[765024]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[765031] "expr temp" "maybe param" "maybe type" "temp"
    (765034 'move' call_tmp[765031](765009 call _v _mt[243] _arg1[765005]))
    unknown call_tmp[765036] "expr temp" "maybe param" "maybe type" "temp"
    (765039 'move' call_tmp[765036](765013 call _v _mt[243] _arg2[765006]))
    unknown call_tmp[765041] "expr temp" "maybe param" "maybe type" "temp"
    (765044 'move' call_tmp[765041](765017 'call resolves' c">" call_tmp[765031] call_tmp[765036]))
    (765029 'move' ret[765024](765028 'deref' call_tmp[765041]))
    (765026 return ret[765024])
  }
  function >[764991](arg _arg1[764993]:RAtomicT[51633](?), arg _arg2[764994]:RAtomicT[51633](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[765088]:bool[10] "RVV" "temp"
    unknown call_tmp[765105] "expr temp" "maybe param" "maybe type" "temp"
    (765108 'move' call_tmp[765105](765052 call _v _mt[243] _arg1[764993]))
    unknown call_tmp[765110] "expr temp" "maybe param" "maybe type" "temp"
    (765113 'move' call_tmp[765110](765056 call _v _mt[243] _arg2[764994]))
    unknown call_tmp[765115] "expr temp" "maybe param" "maybe type" "temp"
    (765118 'move' call_tmp[765115](765060 call > call_tmp[765105] call_tmp[765110]))
    if call_tmp[765115]
    {
      (765093 'move' ret[765088](765092 'deref' 1))
      gotoReturn _end_>[765086] _end_>[765086]
    }
    unknown call_tmp[765120] "expr temp" "maybe param" "maybe type" "temp"
    (765123 'move' call_tmp[765120](765066 call _v _mt[243] _arg1[764993]))
    unknown call_tmp[765125] "expr temp" "maybe param" "maybe type" "temp"
    (765128 'move' call_tmp[765125](765070 call _v _mt[243] _arg2[764994]))
    unknown call_tmp[765130] "expr temp" "maybe param" "maybe type" "temp"
    (765133 'move' call_tmp[765130](765074 call < call_tmp[765120] call_tmp[765125]))
    if call_tmp[765130]
    {
      (765098 'move' ret[765088](765097 'deref' 0))
      gotoReturn _end_>[765086] _end_>[765086]
    }
    (765103 'move' ret[765088](765102 'deref' 0))
    label _end_>[765086]
    (765090 return ret[765088])
  }
  where {
    unknown call_tmp[765135] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (765138 'move' call_tmp[765135](764997 'typeof' _arg1[764993]))
    unknown call_tmp[765140] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (765143 'move' call_tmp[765140](764999 'typeof' _arg2[764994]))
    unknown call_tmp[765145] "expr temp" "maybe param" "maybe type" "temp"
    (765148 'move' call_tmp[765145](765001 call == call_tmp[765135] call_tmp[765140]))
    unknown call_tmp[765150] "expr temp" "maybe param" "maybe type" "temp"
    (765153 'move' call_tmp[765150](765046 call chpl_fields_are_comparable[765003] _arg1[764993] _arg2[764994]))
    (765050 '&' call_tmp[765145] call_tmp[765150])
  }
  function chpl_fields_are_comparable[765167](arg _arg1[765169]:RAtomicT[51633](?), arg _arg2[765170]:RAtomicT[51633](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[765188]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[765195] "expr temp" "maybe param" "maybe type" "temp"
    (765198 'move' call_tmp[765195](765173 call _v _mt[243] _arg1[765169]))
    unknown call_tmp[765200] "expr temp" "maybe param" "maybe type" "temp"
    (765203 'move' call_tmp[765200](765177 call _v _mt[243] _arg2[765170]))
    unknown call_tmp[765205] "expr temp" "maybe param" "maybe type" "temp"
    (765208 'move' call_tmp[765205](765181 'call resolves' c">=" call_tmp[765195] call_tmp[765200]))
    (765193 'move' ret[765188](765192 'deref' call_tmp[765205]))
    (765190 return ret[765188])
  }
  function >=[765155](arg _arg1[765157]:RAtomicT[51633](?), arg _arg2[765158]:RAtomicT[51633](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[765252]:bool[10] "RVV" "temp"
    unknown call_tmp[765269] "expr temp" "maybe param" "maybe type" "temp"
    (765272 'move' call_tmp[765269](765216 call _v _mt[243] _arg1[765157]))
    unknown call_tmp[765274] "expr temp" "maybe param" "maybe type" "temp"
    (765277 'move' call_tmp[765274](765220 call _v _mt[243] _arg2[765158]))
    unknown call_tmp[765279] "expr temp" "maybe param" "maybe type" "temp"
    (765282 'move' call_tmp[765279](765224 call > call_tmp[765269] call_tmp[765274]))
    if call_tmp[765279]
    {
      (765257 'move' ret[765252](765256 'deref' 1))
      gotoReturn _end_>=[765250] _end_>=[765250]
    }
    unknown call_tmp[765284] "expr temp" "maybe param" "maybe type" "temp"
    (765287 'move' call_tmp[765284](765230 call _v _mt[243] _arg1[765157]))
    unknown call_tmp[765289] "expr temp" "maybe param" "maybe type" "temp"
    (765292 'move' call_tmp[765289](765234 call _v _mt[243] _arg2[765158]))
    unknown call_tmp[765294] "expr temp" "maybe param" "maybe type" "temp"
    (765297 'move' call_tmp[765294](765238 call < call_tmp[765284] call_tmp[765289]))
    if call_tmp[765294]
    {
      (765262 'move' ret[765252](765261 'deref' 0))
      gotoReturn _end_>=[765250] _end_>=[765250]
    }
    (765267 'move' ret[765252](765266 'deref' 1))
    label _end_>=[765250]
    (765254 return ret[765252])
  }
  where {
    unknown call_tmp[765299] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (765302 'move' call_tmp[765299](765161 'typeof' _arg1[765157]))
    unknown call_tmp[765304] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (765307 'move' call_tmp[765304](765163 'typeof' _arg2[765158]))
    unknown call_tmp[765309] "expr temp" "maybe param" "maybe type" "temp"
    (765312 'move' call_tmp[765309](765165 call == call_tmp[765299] call_tmp[765304]))
    unknown call_tmp[765314] "expr temp" "maybe param" "maybe type" "temp"
    (765317 'move' call_tmp[765314](765210 call chpl_fields_are_comparable[765167] _arg1[765157] _arg2[765158]))
    (765214 '&' call_tmp[765309] call_tmp[765314])
  }
  function chpl__defaultHash[765319](arg r[765321]:RAtomicT[51633](?)) : _unknown[51] "compiler generated" "last resort"
  {
    unknown ret[765343] "RVV" "temp"
    unknown call_tmp[765350] "expr temp" "maybe param" "maybe type" "temp"
    (765353 'move' call_tmp[765350](765329 call _v _mt[243] r[765321]))
    unknown call_tmp[765355] "expr temp" "maybe param" "maybe type" "temp"
    (765358 'move' call_tmp[765355](765333 call chpl__defaultHash call_tmp[765350]))
    unknown call_tmp[765360] "expr temp" "maybe param" "maybe type" "temp"
    (765363 'move' call_tmp[765360](765323 call T _mt[243] r[765321]))
    unknown call_tmp[765365] "expr temp" "maybe param" "maybe type" "temp"
    (765368 'move' call_tmp[765365](765327 call chpl__defaultHash call_tmp[765360]))
    unknown call_tmp[765370] "expr temp" "maybe param" "maybe type" "temp"
    (765373 'move' call_tmp[765370](765335 call chpl__defaultHashCombine call_tmp[765355] call_tmp[765365] 2))
    (765348 'move' ret[765343](765347 'deref' call_tmp[765370]))
    (765345 return ret[765343])
  }
  type RAtomicT[51633](?) unknown T[49741] "type variable" unknown _v[49745] T[49741]
  function =[51738](ref arg a[51735]:RAtomicBool[49673], const arg b[51741]:RAtomicBool[49673]) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    unknown call_tmp[609158] "expr temp" "maybe param" "maybe type" "temp"
    (609161 'move' call_tmp[609158](51753 call(51749 call (partial) read _mt[243] b[51741])))
    (51755 call(51745 call (partial) write _mt[243] a[51735]) call_tmp[609158])
    (506757 return _void[55])
  }
  function =[51766](ref arg a[51763]:RAtomicBool[49673], arg b[51768]:_any[178](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (51773 call compilerError "Cannot directly assign atomic variables")
    (506759 return _void[55])
  }
  function =[51784](ref arg a[51781]:RAtomicT[51633](?), const arg b[51787]:RAtomicT[51633](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    unknown call_tmp[609167] "expr temp" "maybe param" "maybe type" "temp"
    (609170 'move' call_tmp[609167](51799 call(51795 call (partial) read _mt[243] b[51787])))
    (51801 call(51791 call (partial) write _mt[243] a[51781]) call_tmp[609167])
    (506761 return _void[55])
  }
  function =[51812](ref arg a[51809]:RAtomicT[51633](?), arg b[51814]:_any[178](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (51819 call compilerError "Cannot directly assign atomic variables")
    (506763 return _void[55])
  }
  function +[51830](arg a[51827]:RAtomicT[51633](?), arg b[51832]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[506767] "RVV" "temp"
    (51837 call compilerError "Cannot directly add atomic variables")
    (474521 'end of statement')
    (506772 'move' ret[506767](506771 'deref' a[51827]))
    (506769 return ret[506767])
  }
  function -[51851](arg a[51848]:RAtomicT[51633](?), arg b[51853]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[506776] "RVV" "temp"
    (51858 call compilerError "Cannot directly subtract atomic variables")
    (474523 'end of statement')
    (506781 'move' ret[506776](506780 'deref' a[51848]))
    (506778 return ret[506776])
  }
  function *[51872](arg a[51869]:RAtomicT[51633](?), arg b[51874]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[506785] "RVV" "temp"
    (51879 call compilerError "Cannot directly multiply atomic variables")
    (474525 'end of statement')
    (506790 'move' ret[506785](506789 'deref' a[51869]))
    (506787 return ret[506785])
  }
  function /[51893](arg a[51890]:RAtomicT[51633](?), arg b[51895]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[506794] "RVV" "temp"
    (51900 call compilerError "Cannot directly divide atomic variables")
    (474527 'end of statement')
    (506799 'move' ret[506794](506798 'deref' a[51890]))
    (506796 return ret[506794])
  }
  function %[51914](arg a[51911]:RAtomicT[51633](?), arg b[51916]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[506803] "RVV" "temp"
    (51921 call compilerError "Cannot directly divide atomic variables")
    (474529 'end of statement')
    (506808 'move' ret[506803](506807 'deref' a[51911]))
    (506805 return ret[506803])
  }
  (355038 'used modules list'(48465 'use' ChapelStandard[20264])(48469 'use' MemConsistency[186602]))
}