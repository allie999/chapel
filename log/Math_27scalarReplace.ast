AST dump for Math after pass scalarReplace.
Module use list: ChapelStandard HaltWrappers SysCTypes 

{
  function chpl__init_Math[416214]() : void[4] "insert line file info" "module init" "resolved"
  {
    (532659 return _void[55])
  }
  function divceil[1401581](const in arg m[1401583]:int(64)[13], const in arg n[1401585]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1401587]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[1401597]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1401599]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1401601]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2335530]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2335532 'move' call_tmp[2335530](2335534 '>=' m[1401583] 0))
    (1401603 'move' call_tmp[1401601] call_tmp[2335530])
    (1401608 'move' tmp[1401599] call_tmp[1401601])
    if tmp[1401599]
    {
      val tmp[1401615]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "temp"
      const-val tmp[1401617]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1401619]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[2335540]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2335542 'move' call_tmp[2335540](2335544 '>=' n[1401585] 0))
      (1401621 'move' call_tmp[1401619] call_tmp[2335540])
      (1401626 'move' tmp[1401617] call_tmp[1401619])
      if tmp[1401617]
      {
        const-val tmp[1401633]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1401635]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val call_tmp[2242256]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2242258 'move' call_tmp[2242256](2242260 '+' m[1401583] n[1401585]))
        (1401637 'move' call_tmp[1401635] call_tmp[2242256])
        const-val call_tmp[1401643]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val call_tmp[2261334]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2261336 'move' call_tmp[2261334](2261338 '-' call_tmp[1401635] 1))
        (1401645 'move' call_tmp[1401643] call_tmp[2261334])
        const-val call_tmp[2335036]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2335038 'move' call_tmp[2335036](2335040 '==' n[1401585] 0))
        if call_tmp[2335036]
        {
          (2335046 call halt[154111] "Attempt to divide by zero")
        }
        const-val call_tmp[2335049]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2335051 'move' call_tmp[2335049](2335053 '/' call_tmp[1401643] n[1401585]))
        (1401651 'move' tmp[1401633] call_tmp[2335049])
        (1401657 'move' tmp[1401615] tmp[1401633])
      }
      {
        const-val tmp[1401663]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[2335059]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2335061 'move' call_tmp[2335059](2335063 '==' n[1401585] 0))
        if call_tmp[2335059]
        {
          (2335069 call halt[154111] "Attempt to divide by zero")
        }
        const-val call_tmp[2335072]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2335074 'move' call_tmp[2335072](2335076 '/' m[1401583] n[1401585]))
        (1401665 'move' tmp[1401663] call_tmp[2335072])
        (1401671 'move' tmp[1401615] tmp[1401663])
      }
      (1401677 'move' tmp[1401597] tmp[1401615])
    }
    {
      val tmp[1401683]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "temp"
      const-val tmp[1401685]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1401687]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[2335550]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2335552 'move' call_tmp[2335550](2335554 '>=' n[1401585] 0))
      (1401689 'move' call_tmp[1401687] call_tmp[2335550])
      (1401694 'move' tmp[1401685] call_tmp[1401687])
      if tmp[1401685]
      {
        const-val tmp[1401701]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[2335082]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2335084 'move' call_tmp[2335082](2335086 '==' n[1401585] 0))
        if call_tmp[2335082]
        {
          (2335092 call halt[154111] "Attempt to divide by zero")
        }
        const-val call_tmp[2335095]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2335097 'move' call_tmp[2335095](2335099 '/' m[1401583] n[1401585]))
        (1401703 'move' tmp[1401701] call_tmp[2335095])
        (1401709 'move' tmp[1401683] tmp[1401701])
      }
      {
        const-val tmp[1401715]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1401717]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val call_tmp[2242266]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2242268 'move' call_tmp[2242266](2242270 '+' m[1401583] n[1401585]))
        (1401719 'move' call_tmp[1401717] call_tmp[2242266])
        const-val call_tmp[1401725]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val call_tmp[2236250]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2236252 'move' call_tmp[2236250](2236254 '+' call_tmp[1401717] 1))
        (1401727 'move' call_tmp[1401725] call_tmp[2236250])
        const-val call_tmp[2335105]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2335107 'move' call_tmp[2335105](2335109 '==' n[1401585] 0))
        if call_tmp[2335105]
        {
          (2335115 call halt[154111] "Attempt to divide by zero")
        }
        const-val call_tmp[2335118]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2335120 'move' call_tmp[2335118](2335122 '/' call_tmp[1401725] n[1401585]))
        (1401733 'move' tmp[1401715] call_tmp[2335118])
        (1401739 'move' tmp[1401683] tmp[1401715])
      }
      (1401745 'move' tmp[1401597] tmp[1401683])
    }
    (1401751 'move' ret[1401587] tmp[1401597])
    (1401755 return ret[1401587])
  }
}