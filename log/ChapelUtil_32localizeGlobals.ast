AST dump for ChapelUtil after pass localizeGlobals.
Module use list: ChapelStandard 

{
  function chpl__init_ChapelUtil[416052]() : void[4] "insert line file info" "module init" "resolved"
  {
    (522125 return _void[55])
  }
  function safeAdd[979748](const in arg a[979750]:int(64)[13], const in arg b[979755]:int(64)[13]) : bool[10] "instantiated generic" "invisible fn" "resolved"
  {
    val ret[979757]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2079736]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2079738 'move' call_tmp[2079736](2079740 '<' a[979750] 0))
    if call_tmp[2079736]
    {
      const-val call_tmp[2181645]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2181647 'move' call_tmp[2181645](2181649 '>=' b[979755] 0))
      if call_tmp[2181645]
      {
        (979832 'move' ret[979757] 1)
        gotoReturn _end_safeAdd[979971] _end_safeAdd[979971]
      }
      {
        const-val call_tmp[2181705]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2181707 'move' call_tmp[2181705](2181709 '-' -9223372036854775808 a[979750]))
        const-val call_tmp[2091746]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2091748 'move' call_tmp[2091746](2091750 '<' b[979755] call_tmp[2181705]))
        if call_tmp[2091746]
        {
          (979877 'move' ret[979757] 0)
          gotoReturn _end_safeAdd[979971] _end_safeAdd[979971]
        }
        {
          (979884 'move' ret[979757] 1)
          gotoReturn _end_safeAdd[979971] _end_safeAdd[979971]
        }
      }
    }
    {
      const-val call_tmp[2133438]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2133440 'move' call_tmp[2133438](2133442 '<=' b[979755] 0))
      if call_tmp[2133438]
      {
        (979910 'move' ret[979757] 1)
        gotoReturn _end_safeAdd[979971] _end_safeAdd[979971]
      }
      {
        const-val call_tmp[2181735]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2181737 'move' call_tmp[2181735](2181739 '-' 9223372036854775807 a[979750]))
        const-val call_tmp[2087786]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2087788 'move' call_tmp[2087786](2087790 '>' b[979755] call_tmp[2181735]))
        if call_tmp[2087786]
        {
          (979955 'move' ret[979757] 0)
          gotoReturn _end_safeAdd[979971] _end_safeAdd[979971]
        }
        {
          (979962 'move' ret[979757] 1)
          gotoReturn _end_safeAdd[979971] _end_safeAdd[979971]
        }
      }
    }
    label _end_safeAdd[979971]
    (979973 return ret[979757])
  }
  type chpl_main_argument[167416] val argc[167403]:int(64)[13] val return_value[167411]:int(32)[95]
  function chpl_rt_preUserCodeHook[167714]() : void[4] "extern" "local args" "no fn body" "resolved" "no return value for void"
  {
    (522111 return _void[55])
  }
  function chpl_rt_postUserCodeHook[167720]() : void[4] "extern" "local args" "no fn body" "resolved" "no return value for void"
  {
    (522113 return _void[55])
  }
  function chpl_addModule[167735](const in arg moduleName[167732]:c_string[19], const in arg deinitFun[167738]:c_fn_ptr[152]) : void[4] "resolved" "no return value for void"
  {
    val new_temp[1414110]:chpl_ModuleDeinit[19827] "dead after last mention" "temp"
    val tmp[2050547]:chpl_ModuleDeinit[19827] "temp"
    (2050552 'move' tmp[2050547](2050549 '.v' chpl_moduleDeinitFuns[19840] value[2050513]))
    (1414112 'move' new_temp[1414110](1413981 call _new[1414046] moduleName[167732] deinitFun[167738] tmp[2050547]))
    (2319992 '.=' chpl_moduleDeinitFuns[19840] value[2050513] new_temp[1414110])
    (522115 return _void[55])
  }
  function chpl_deinitModules[167759]() : void[4] "export" "local args" "resolved" "no return value for void"
  {
    const-val local__str_literal_129[2329800]:string[26] "temp"
    (2329801 'move' "argument to ! is nil" "argument to ! is nil")
    val prev[167810]:chpl_ModuleDeinit[19827] "dead at end of block" "insert auto destroy"
    val tmp[2050539]:chpl_ModuleDeinit[19827] "temp"
    (2050544 'move' tmp[2050539](2050541 '.v' chpl_moduleDeinitFuns[19840] value[2050513]))
    (544591 'move' prev[167810] tmp[2050539])
    val tmp[167867]:bool[10] "dead after last mention" "temp"
    val coerce_tmp[1412410]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1412415 'move' coerce_tmp[1412410](1412412 'cast' object[22] tmp[2050539]))
    const-val call_tmp[2079084]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2079086 'move' call_tmp[2079084](2079088 'ptr_neq' coerce_tmp[1412410] nil[44]))
    (167885 'move' tmp[167867] call_tmp[2079084])
    WhileDo[167872] hazard
    {
      val coerce_tmp[2279627]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2279629 'move' coerce_tmp[2279627](2279631 'cast' object[22] prev[167810]))
      const-val call_tmp[2279634]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2279636 'move' call_tmp[2279634](2279638 'ptr_eq' coerce_tmp[2279627] nil[44]))
      if call_tmp[2279634]
      {
        (2279644 call nilCheckHalt[210169] "argument to ! is nil")
      }
      const curr[167818]:chpl_ModuleDeinit[19827] "dead at end of block" "const" "insert auto destroy"
      (544593 'move' curr[167818] prev[167810])
      val coerce_tmp[1412740]:chpl_ModuleDeinit[19827] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1412745 'move' coerce_tmp[1412740] prev[167810])
      const-val coerce_tmp[1412748]:c_fn_ptr[152] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1412752 'move' coerce_tmp[1412748](2320000 '.v' coerce_tmp[1412740] deinitFun[19746]))
      (167850 call chpl_execute_module_deinit[167792] coerce_tmp[1412748])
      val coerce_tmp[1412755]:chpl_ModuleDeinit[19827] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1412760 'move' coerce_tmp[1412755] prev[167810])
      val coerce_tmp[1412826]:chpl_ModuleDeinit[19827] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1412830 'move' coerce_tmp[1412826](2320006 '.v' coerce_tmp[1412755] prevModule[19753]))
      (2279656 '=' prev[167810] coerce_tmp[1412826])
      val coerce_tmp[2279668]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2279670 'move' coerce_tmp[2279668](2279672 'cast' object[22] curr[167818]))
      const-val call_tmp[2279675]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2279677 'move' call_tmp[2279675](2279679 'ptr_neq' coerce_tmp[2279668] nil[44]))
      if call_tmp[2279675]
      {
        const-val call_tmp[2279691]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
        (2279693 'move' call_tmp[2279691](2279695 '_wide_get_locale' curr[167818]))
        val isdirect[2279700]:bool[10] "temp"
        (2279702 'move' isdirect[2279700](2279705 call chpl_doDirectExecuteOn[187469] call_tmp[2279691]))
        if isdirect[2279700]
        {
          (2279710 call on_fn[1413092] curr[167818])
        }
        {
          val _args_foron_fn[2279713]:_class_localson_fn[2060138] "temp"
          (2279715 'move' _args_foron_fn[2279713](2279717 'stack allocate class' _class_localson_fn[2060138]))
          (2279719 '.=' _args_foron_fn[2279713] _0_tmp[2060141] call_tmp[2279691])
          (2279723 '.=' _args_foron_fn[2279713] _1_arg[2060143] curr[167818])
          val _args_vforon_fn[2279727]:c_void_ptr[149] "temp"
          (2279729 'move' _args_vforon_fn[2279727](2279731 'cast_to_void_star' _args_foron_fn[2279713]))
          val _args_sizeon_fn[2279733]:int(64)[13] "temp"
          (2279735 'move' _args_sizeon_fn[2279733](2279737 'sizeof_bundle' _class_localson_fn[2060138]))
          on(2279740 call wrapon_fn[2060172] call_tmp[2279691] _args_vforon_fn[2279727] _args_sizeon_fn[2279733] _args_foron_fn[2279713])
        }
      }
      val coerce_tmp[1413892]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1413897 'move' coerce_tmp[1413892](1413894 'cast' object[22] coerce_tmp[1412826]))
      const-val call_tmp[2079094]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2079096 'move' call_tmp[2079094](2079098 'ptr_neq' coerce_tmp[1413892] nil[44]))
      (167878 'move' tmp[167867] call_tmp[2079094])
      tmp[167867]
    }
    val tmp[2320008]:chpl_ModuleDeinit[19827] "temp"
    (2320010 'move' tmp[2320008](2279752 'cast' chpl_ModuleDeinit[19827] nil[44]))
    (2320014 '.=' chpl_moduleDeinitFuns[19840] value[2050513] tmp[2320008])
    (522123 return _void[55])
  }
  function chpl_execute_module_deinit[167792](const in arg deinitFun[167789]:c_fn_ptr[152]) : void[4] "extern" "local args" "no fn body" "resolved" "no return value for void"
  {
    (522121 return _void[55])
  }
}