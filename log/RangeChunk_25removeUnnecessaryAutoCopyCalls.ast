AST dump for RangeChunk after pass removeUnnecessaryAutoCopyCalls.
Module use list: ChapelStandard 

{
  function chpl__init_RangeChunk[416165]() : void[4] "insert line file info" "module init" "resolved"
  {
    (537516 return _void[55])
  }
  type RemElems[266487] def Thru[266481]:RemElems[266487] def Pack[266483]:RemElems[266487] def Mod[266485]:RemElems[266487]
  function chunks[1375718](const in arg r[1375720]:range(int(64),bounded,false)[1026875], const in arg numChunks[1375722]:int(64)[13], const in arg remPol[1375726]:RemElems[266487], ref arg _retArg[1872209]:_ref(_ir_chunks)[1376267]) : void[4] "compiler added where" "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "resolved" "no return value for void"
  {
    val _ir[2091456]:_ir_chunks[1376156] "temp"
    (2091458 '.=' _ir[2091456] F0_r[2090675] r[1375720])
    (2091462 '.=' _ir[2091456] F1_numChunks[2090679] numChunks[1375722])
    (2091466 '.=' _ir[2091456] F2_remPol[2090683] remPol[1375726])
    (2091470 '=' _retArg[1872209] _ir[2091456])
    (2091473 return _void[55])
  }
  type _ic_chunks[1376150] val super[1376151]:object[22] "super class" val more[1376153]:int(64)[13] const-val F0_r[2090673]:range(int(64),bounded,false)[1026875] const-val F1_numChunks[2090677]:int(64)[13] const-val F2_remPol[2090681]:RemElems[266487] val F3__iterator[2090685]:_ic_chunksOrder[1376614] const F4_nElems[2090687]:int(64)[13] val F5_nChunks[2090689]:int(64)[13] val F6_chunkSize[2090691]:int(64)[13] val F7_rem[2090693]:int(64)[13] val F8__iterator[2090695]:_ic_chpl_direct_counted_range_iter[1103851] val F9__iterator[2090697]:_ic_chpl_direct_counted_range_iter_helper[1103601] const F10_tmp[2090699]:2*int(64)[1040117] val F11__iterator[2090701]:_ic_chpl_direct_param_stride_range_iter[1103347] val F12_i[2090703]:int(64)[13] const-val F13_ret_tmp[2090705]:2*int(64)[1040117] const-val F14_ret_tmp[2090707]:2*int(64)[1040117] const-val F15_ret_tmp[2090709]:2*int(64)[1040117] const-val F16_ret_tmp[2090711]:2*int(64)[1040117] const-val F17_ret_tmp[2090713]:range(int(64),bounded,false)[1026875] val value[2090715]:range(int(64),bounded,false)[1026875]
  type _ir_chunks[1376156] const-val F0_r[2090675]:range(int(64),bounded,false)[1026875] const-val F1_numChunks[2090679]:int(64)[13] const-val F2_remPol[2090683]:RemElems[266487]
  function _getIterator[1376165](const  ref arg ir[1376167]:_ir_chunks[1376156]) : _ic_chunks[1376150] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[1376274]:_ic_chunks[1376150] "dead after last mention" "RVV" "temp"
    val _ic_[1376157]:_ic_chunks[1376150] "dead after last mention" "temp"
    const-val call_tmp[1376281]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1376284 'move' call_tmp[1376281](1376296 'sizeof_bundle' _ic_chunks[1376150]))
    const-val cast_tmp[1376299]:c_void_ptr[149] "dead after last mention" "temp"
    (1376301 'move' cast_tmp[1376299](1376162 call chpl_here_alloc[187788] call_tmp[1376281] 70))
    (1376170 'move' _ic_[1376157](1376303 'cast' _ic_chunks[1376150] cast_tmp[1376299]))
    (1376172 'setcid' _ic_[1376157])
    (1376279 'move' ret[1376274] _ic_[1376157])
    (2091476 '.=' ret[1376274] more[1376153] 1)
    const-val tmp[2091480]:range(int(64),bounded,false)[1026875] "temp"
    (2091485 'move' tmp[2091480](2091481 '.v' ir[1376167] F0_r[2090675]))
    (2091487 '.=' ret[1376274] F0_r[2090673] tmp[2091480])
    const-val tmp[2091491]:int(64)[13] "temp"
    (2091496 'move' tmp[2091491](2091492 '.v' ir[1376167] F1_numChunks[2090679]))
    (2091498 '.=' ret[1376274] F1_numChunks[2090677] tmp[2091491])
    const-val tmp[2091502]:RemElems[266487] "temp"
    (2091507 'move' tmp[2091502](2091503 '.v' ir[1376167] F2_remPol[2090683]))
    (2091509 '.=' ret[1376274] F2_remPol[2090681] tmp[2091502])
    (1376276 return ret[1376274])
  }
  function chunksOrder[1376548](const in arg r[1376550]:range(int(64),bounded,false)[1026875], const in arg numChunks[1376552]:int(64)[13], const in arg remPol[1376556]:RemElems[266487], ref arg _retArg[1872219]:_ref(_ir_chunksOrder)[1376731]) : void[4] "compiler added where" "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "resolved" "no return value for void"
  {
    val _ir[2092216]:_ir_chunksOrder[1376620] "temp"
    (2092218 '.=' _ir[2092216] F0_r[2091515] r[1376550])
    (2092222 '.=' _ir[2092216] F1_numChunks[2091519] numChunks[1376552])
    (2092226 '.=' _ir[2092216] F2_remPol[2091523] remPol[1376556])
    (2092230 '=' _retArg[1872219] _ir[2092216])
    (2092233 return _void[55])
  }
  type _ic_chunksOrder[1376614] val super[1376615]:object[22] "super class" val more[1376617]:int(64)[13] const-val F0_r[2091513]:range(int(64),bounded,false)[1026875] const-val F1_numChunks[2091517]:int(64)[13] const-val F2_remPol[2091521]:RemElems[266487] const F3_nElems[2091525]:int(64)[13] val F4_nChunks[2091527]:int(64)[13] val F5_chunkSize[2091529]:int(64)[13] val F6_rem[2091531]:int(64)[13] val F7__iterator[2091533]:_ic_chpl_direct_counted_range_iter[1103851] val F8__iterator[2091535]:_ic_chpl_direct_counted_range_iter_helper[1103601] const F9_tmp[2091537]:2*int(64)[1040117] val F10__iterator[2091539]:_ic_chpl_direct_param_stride_range_iter[1103347] val F11_i[2091541]:int(64)[13] const-val F12_ret_tmp[2091543]:2*int(64)[1040117] const-val F13_ret_tmp[2091545]:2*int(64)[1040117] const-val F14_ret_tmp[2091547]:2*int(64)[1040117] const-val F15_ret_tmp[2091549]:2*int(64)[1040117] val value[2091551]:2*int(64)[1040117]
  type _ir_chunksOrder[1376620] const-val F0_r[2091515]:range(int(64),bounded,false)[1026875] const-val F1_numChunks[2091519]:int(64)[13] const-val F2_remPol[2091523]:RemElems[266487]
  function _getIterator[1376629](const  ref arg ir[1376631]:_ir_chunksOrder[1376620]) : _ic_chunksOrder[1376614] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[1376738]:_ic_chunksOrder[1376614] "dead after last mention" "RVV" "temp"
    val _ic_[1376621]:_ic_chunksOrder[1376614] "dead after last mention" "temp"
    const-val call_tmp[1376745]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1376748 'move' call_tmp[1376745](1376760 'sizeof_bundle' _ic_chunksOrder[1376614]))
    const-val cast_tmp[1376763]:c_void_ptr[149] "dead after last mention" "temp"
    (1376765 'move' cast_tmp[1376763](1376626 call chpl_here_alloc[187788] call_tmp[1376745] 71))
    (1376634 'move' _ic_[1376621](1376767 'cast' _ic_chunksOrder[1376614] cast_tmp[1376763]))
    (1376636 'setcid' _ic_[1376621])
    (1376743 'move' ret[1376738] _ic_[1376621])
    (2092236 '.=' ret[1376738] more[1376617] 1)
    const-val tmp[2092240]:range(int(64),bounded,false)[1026875] "temp"
    (2092245 'move' tmp[2092240](2092241 '.v' ir[1376631] F0_r[2091515]))
    (2092247 '.=' ret[1376738] F0_r[2091513] tmp[2092240])
    const-val tmp[2092251]:int(64)[13] "temp"
    (2092256 'move' tmp[2092251](2092252 '.v' ir[1376631] F1_numChunks[2091519]))
    (2092258 '.=' ret[1376738] F1_numChunks[2091517] tmp[2092251])
    const-val tmp[2092262]:RemElems[266487] "temp"
    (2092267 'move' tmp[2092262](2092263 '.v' ir[1376631] F2_remPol[2091523]))
    (2092269 '.=' ret[1376738] F2_remPol[2091521] tmp[2092262])
    (1376740 return ret[1376738])
  }
  function chunkOrderThru[1377588](const in arg nElems[1377590]:int(64)[13], const in arg nChunks[1377595]:int(64)[13], const in arg i[1377600]:int(64)[13], ref arg _retArg[1872229]:_ref(2*int(64))[1040190]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "private" "resolved" "fn synchronization free"
  {
    const-val ret[1377619]:2*int(64)[1040117] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1377629]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1377631 'move' call_tmp[1377629](1377634 call *[441871] nElems[1377590] i[1377600]))
    const-val m[1377637]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1377639 'move' m[1377637] call_tmp[1377629])
    const-val start[1377643]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val tmp[1377645]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1377647]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1377649]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1377651 'move' call_tmp[1377649](1377654 call ==[435671] i[1377600] 0))
    (1377657 'move' tmp[1377647] call_tmp[1377649])
    if tmp[1377647]
    {
      val call_tmp[1377666]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1377678 'move' tmp[1377645] 0)
    }
    {
      const-val tmp[1377684]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      (1377686 'move' tmp[1377684](1377689 call divceil[1377371] m[1377637] nChunks[1377595]))
      (1377692 'move' tmp[1377645] tmp[1377684])
    }
    (1377698 'move' start[1377643] tmp[1377645])
    const-val end[1377702]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val tmp[1377704]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1377706]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1377708]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1377710 'move' call_tmp[1377708](1377713 call -[962287] nChunks[1377595]))
    const-val call_tmp[1377716]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1377718 'move' call_tmp[1377716](1377721 call ==[435671] i[1377600] call_tmp[1377708]))
    (1377724 'move' tmp[1377706] call_tmp[1377716])
    if tmp[1377706]
    {
      const-val tmp[1377731]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      (1377733 'move' tmp[1377731](1377736 call -[962287] nElems[1377590]))
      (1377739 'move' tmp[1377704] tmp[1377731])
    }
    {
      const-val tmp[1377745]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1377747]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1377749 'move' call_tmp[1377747](1377752 call +[439679] m[1377637] nElems[1377590]))
      const-val call_tmp[1377755]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1377757 'move' call_tmp[1377755](1377760 call divceil[1377371] call_tmp[1377747] nChunks[1377595]))
      (1377763 'move' tmp[1377745](1377766 call -[962287] call_tmp[1377755]))
      (1377769 'move' tmp[1377704] tmp[1377745])
    }
    (1377775 'move' end[1377702] tmp[1377704])
    const-val call_tmp[1377781]:2*int(64)[1040117] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1866498]:2*int(64)[1040117] "temp"
    (1377786 call _build_tuple[1040075] start[1377643] end[1377702] ret_tmp[1866498])
    (1866501 'move' call_tmp[1377781] ret_tmp[1866498])
    val call_tmp[1377789]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1377795]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1377801]:2*int(64)[1040117] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1377838 'move' ret[1377619] call_tmp[1377781])
    gotoReturn _end_chunkOrderThru[1377819] _end_chunkOrderThru[1377819]
    label _end_chunkOrderThru[1377819]
    (1872231 '=' _retArg[1872229] ret[1377619])
    (1872233 return _void[55])
  }
  function chunkOrderPack[1378064](const in arg chunkSize[1378066]:int(64)[13], const in arg nElems[1378071]:int(64)[13], const in arg i[1378076]:int(64)[13], ref arg _retArg[1872241]:_ref(2*int(64))[1040190]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "private" "resolved" "fn synchronization free"
  {
    val ret[1378095]:2*int(64)[1040117] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1378105]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1378107 'move' call_tmp[1378105](1378110 call *[441871] chunkSize[1378066] i[1378076]))
    const-val start[1378113]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1378115 'move' start[1378113] call_tmp[1378105])
    const-val call_tmp[1378119]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1378121 'move' call_tmp[1378119](1378124 call >=[437275] start[1378113] nElems[1378071]))
    const-val call_tmp[1378127]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1378129 'move' call_tmp[1378127] call_tmp[1378119])
    if call_tmp[1378127]
    {
      val call_tmp[1378136]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1378150]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[1378164]:2*int(64)[1040117] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1866504]:2*int(64)[1040117] "temp"
      (1378169 call _build_tuple[1040075] 1 0 ret_tmp[1866504])
      (1866507 'move' call_tmp[1378164] ret_tmp[1866504])
      val call_tmp[1378172]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1378178]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1378184]:2*int(64)[1040117] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1378314 'move' ret[1378095] call_tmp[1378164])
      gotoReturn _end_chunkOrderPack[1378293] _end_chunkOrderPack[1378293]
    }
    const-val call_tmp[1378200]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1378202 'move' call_tmp[1378200](1378205 call +[439679] start[1378113] chunkSize[1378066]))
    const-val call_tmp[1378208]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1378210 'move' call_tmp[1378208](1378213 call -[962287] call_tmp[1378200]))
    val end[1378216]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1378218 'move' end[1378216] call_tmp[1378208])
    const-val call_tmp[1378223]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1378225 'move' call_tmp[1378223](1378228 call >=[437275] end[1378216] nElems[1378071]))
    const-val call_tmp[1378231]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1378233 'move' call_tmp[1378231] call_tmp[1378223])
    if call_tmp[1378231]
    {
      const-val call_tmp[1378240]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1378242 'move' call_tmp[1378240](1378245 call -[962287] nElems[1378071]))
      (1378249 call =[435370] end[1378216] call_tmp[1378240])
    }
    const-val call_tmp[1378255]:2*int(64)[1040117] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1866510]:2*int(64)[1040117] "temp"
    (1378260 call _build_tuple[1040075] start[1378113] end[1378216] ret_tmp[1866510])
    (1866513 'move' call_tmp[1378255] ret_tmp[1866510])
    val call_tmp[1378263]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1378269]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1378275]:2*int(64)[1040117] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1378317 'move' ret[1378095] call_tmp[1378255])
    gotoReturn _end_chunkOrderPack[1378293] _end_chunkOrderPack[1378293]
    label _end_chunkOrderPack[1378293]
    (1872243 '=' _retArg[1872241] ret[1378095])
    (1872245 return _void[55])
  }
  function chunkOrderMod[1378321](const in arg chunkSize[1378323]:int(64)[13], const in arg rem[1378328]:int(64)[13], const in arg nElems[1378333]:int(64)[13], const in arg nChunks[1378338]:int(64)[13], const in arg i[1378343]:int(64)[13], ref arg _retArg[1872253]:_ref(2*int(64))[1040190]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "private" "resolved" "fn synchronization free"
  {
    const-val ret[1378362]:2*int(64)[1040117] "dead after last mention" "RVV" "temp"
    val start[1378372]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[1378374]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1378568 'move' start[1378372] 0)
    val end[1378383]:int(64)[13] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1378385]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    const-val call_tmp[1378396]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1378398 'move' call_tmp[1378396](1378401 call <[437495] i[1378343] rem[1378328]))
    const-val call_tmp[1378404]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1378406 'move' call_tmp[1378404] call_tmp[1378396])
    if call_tmp[1378404]
    {
      const-val call_tmp[1378413]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1378415 'move' call_tmp[1378413](1378418 call +[949727] chunkSize[1378323]))
      const-val call_tmp[1378421]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1378423 'move' call_tmp[1378421](1378426 call *[441871] i[1378343] call_tmp[1378413]))
      (1378430 call =[435370] start[1378372] call_tmp[1378421])
      const-val call_tmp[1378435]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (1378437 'move' call_tmp[1378435](1378440 call +[439679] start[1378372] chunkSize[1378323]))
      (1378443 'move' end[1378383] call_tmp[1378435])
    }
    {
      const-val call_tmp[1378451]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1378453 'move' call_tmp[1378451](1378456 call -[440459] nChunks[1378338] i[1378343]))
      const-val call_tmp[1378459]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1378461 'move' call_tmp[1378459](1378464 call *[441871] call_tmp[1378451] chunkSize[1378323]))
      const-val call_tmp[1378467]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1378469 'move' call_tmp[1378467](1378472 call -[440459] nElems[1378333] call_tmp[1378459]))
      (1378476 call =[435370] start[1378372] call_tmp[1378467])
      const-val call_tmp[1378481]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1378483 'move' call_tmp[1378481](1378486 call +[439679] start[1378372] chunkSize[1378323]))
      const-val call_tmp[1378489]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (1378491 'move' call_tmp[1378489](1378494 call -[962287] call_tmp[1378481]))
      (1378497 'move' end[1378383] call_tmp[1378489])
    }
    const-val call_tmp[1378505]:2*int(64)[1040117] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1866516]:2*int(64)[1040117] "temp"
    (1378510 call _build_tuple[1040075] start[1378372] end[1378383] ret_tmp[1866516])
    (1866519 'move' call_tmp[1378505] ret_tmp[1866516])
    val call_tmp[1378513]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1378519]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1378525]:2*int(64)[1040117] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1378565 'move' ret[1378362] call_tmp[1378505])
    gotoReturn _end_chunkOrderMod[1378543] _end_chunkOrderMod[1378543]
    label _end_chunkOrderMod[1378543]
    (1872255 '=' _retArg[1872253] ret[1378362])
    (1872257 return _void[55])
  }
}