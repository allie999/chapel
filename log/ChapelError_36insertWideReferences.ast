AST dump for ChapelError after pass insertWideReferences.
Module use list: ChapelStandard ChapelLocks 

{
  type _class_localson_fn[2034920] val _runtime_hdr[2034921]:chpl_comm_on_bundle_t[209301] val _0_tmp[2034923]:chpl_localeID_t[209294] wide-ref _1_this[2034925]:chpl_TaskErrors[168302] val _2_err[2034927]:__wide_Error[2337829]
  function chpl__init_ChapelError[415928]() : void[4] "insert line file info" "module init" "resolved"
  {
    (522246 return _void[55])
  }
  function __wide_Error[2337829].message[167929](const in arg this[167948]:__wide_Error[2337829], wide-ref arg _retArg[1787953]:string[26]) : void[4] "fn returns via _retArg" "method" "primary method" "resolved" "virtual"
  {
    wide-ref call_tmp[2161317]:string[26] "dead after last mention" "maybe param" "temp"
    (2161319 'move' call_tmp[2161317](2161321 '.' this[167948] _msg[167884]))
    val ret[2150536]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2150538]:string[26] "dead after last mention" "temp"
    (2150541 call init=[30771] tmp[2150538] call_tmp[2161317])
    (2150544 'move' ret[2150536] tmp[2150538])
    (1787955 '=' _retArg[1787953] ret[2150536])
    (1787959 return _void[55])
  }
  function __wide_Error[2337829].deinit[811657](const in arg this[811661]:__wide_Error[2337829]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[1771825]
    wide-ref _field_destructor_tmp_[1771823]:string[26] "temp"
    (1771830 'move' _field_destructor_tmp_[1771823](1771827 '.' this[811661] _msg[167884]))
    (1771832 call deinit[30831] _field_destructor_tmp_[1771823])
    (811669 return _void[55])
  }
  type Error[167938] val super[355608]:object[22] "super class" val _next[167866]:__wide_Error[2337829] "no doc" val thrownLine[167871]:int(64)[13] "no doc" val thrownFileId[167879]:int(32)[95] "no doc" val _msg[167884]:string[26] "no doc" val _hasThrowInfo[167890]:bool[10] "no doc"
  function __wide_NilThrownError[2337836].message[167958](const in arg this[167985]:__wide_NilThrownError[2337836], wide-ref arg _retArg[1798137]:string[26]) : void[4] "fn returns via _retArg" "method" "primary method" "no doc" "method overrides" "resolved" "virtual"
  {
    const-val local__str_literal_2207[2334107]:string[26] "temp"
    (2334108 'move' "thrown error was nil" "thrown error was nil")
    val inlineImm[2151138]:string[26] "temp"
    (2151141 'move' inlineImm[2151138] "thrown error was nil")
    ref i_x[2151143]:string[26] "temp"
    (2151147 'move' i_x[2151143](2151145 'set reference' inlineImm[2151138]))
    val ret[2151150]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2151152]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2386122]:string[26] "temp"
    (2386125 'move' tmp[2386122] i_x[2151143])
    (2151155 call init=[30771] tmp[2151152] tmp[2386122])
    (2151158 'move' ret[2151150] tmp[2151152])
    (1798139 '=' _retArg[1798137] ret[2151150])
    (1798143 return _void[55])
  }
  function __wide_NilThrownError[2337836].deinit[811761](const in arg this[811765]:__wide_NilThrownError[2337836]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[1771850]
    val _parent_destructor_tmp_[1771845]:__wide_Error[2337829] "temp"
    (1771852 'move' _parent_destructor_tmp_[1771845](1771846 'cast' Error[167938] this[811765]))
    wide-ref _field_destructor_tmp_[2161368]:string[26] "temp"
    (2161370 'move' _field_destructor_tmp_[2161368](2161372 '.' _parent_destructor_tmp_[1771845] _msg[167884]))
    (2161376 call deinit[30831] _field_destructor_tmp_[2161368])
    (811773 return _void[55])
  }
  function _local__new[2368862]() : NilThrownError[167983] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "local fn" "_new wrapper" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val initTemp[2368865]:NilThrownError[167983] "dead after last mention" "temp"
    const-val call_tmp[2368867]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2368869 'move' call_tmp[2368867](2368871 'sizeof_bundle' NilThrownError[167983]))
    const-val cast_tmp[2368873]:c_void_ptr[149] "dead after last mention" "temp"
    (2368875 'move' cast_tmp[2368873](2368878 call _local_chpl_here_alloc[2353897] call_tmp[2368867] 2))
    (2368881 'move' initTemp[2368865](2368883 'cast' NilThrownError[167983] cast_tmp[2368873]))
    (2368886 'setcid' initTemp[2368865])
    val super_tmp[2368888]:Error[167938] "dead after last mention" "temporary of super field" "temp"
    val tmp[2403452]:Error[167938] "temp"
    (2368890 'move' tmp[2403452](2368892 '.v' initTemp[2368865] super[355610]))
    (2403455 'move' super_tmp[2368888] tmp[2403452])
    val super_tmp[2368895]:object[22] "dead after last mention" "temporary of super field" "temp"
    val tmp[2403458]:object[22] "temp"
    (2368897 'move' tmp[2403458](2368899 '.v' super_tmp[2368888] super[355608]))
    (2403461 'move' super_tmp[2368895] tmp[2403458])
    (2368902 'setcid' super_tmp[2368895])
    val call_tmp[2368904]:object[22] "dead at end of block" "maybe param" "temp"
    (2368906 'move' call_tmp[2368904](2368908 'cast' object[22] super_tmp[2368888]))
    (2368911 'setcid' call_tmp[2368904])
    val init_coerce_tmp[2368913]:Error[167938] "dead after last mention" "temp"
    (2368915 'move' init_coerce_tmp[2368913](2368917 'cast' Error[167938] nil[44]))
    val tmp[2403464]:__wide_Error[2337829] "temp"
    (2403467 'move' tmp[2403464] init_coerce_tmp[2368913])
    (2368920 '.=' super_tmp[2368888] _next[167866] tmp[2403464])
    (2368924 '.=' super_tmp[2368888] thrownLine[167871] 0)
    (2368928 '.=' super_tmp[2368888] thrownFileId[167879] 0)
    val tmp[2368932]:string[26] "dead after last mention" "temp"
    (2368935 call _local_init[2347408] tmp[2368932])
    (2368937 '.=' super_tmp[2368888] _msg[167884] tmp[2368932])
    (2368941 '.=' super_tmp[2368888] _hasThrowInfo[167890] 0)
    (2368945 'setcid' super_tmp[2368888])
    val call_tmp[2368947]:Error[167938] "dead at end of block" "maybe param" "temp"
    (2368949 'move' call_tmp[2368947](2368951 'cast' Error[167938] initTemp[2368865]))
    (2368954 'setcid' call_tmp[2368947])
    (2368956 'setcid' initTemp[2368865])
    (2368958 return initTemp[2368865])
  }
  function _new[969460]() : NilThrownError[167983] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val initTemp[969462]:NilThrownError[167983] "dead after last mention" "temp"
    const-val call_tmp[969506]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (969509 'move' call_tmp[969506](969518 'sizeof_bundle' NilThrownError[167983]))
    const-val cast_tmp[969521]:c_void_ptr[149] "dead after last mention" "temp"
    (969523 'move' cast_tmp[969521](969474 call chpl_here_alloc[187742] call_tmp[969506] 2))
    (969477 'move' initTemp[969462](969525 'cast' NilThrownError[167983] cast_tmp[969521]))
    (969479 'setcid' initTemp[969462])
    val super_tmp[2161426]:Error[167938] "dead after last mention" "temporary of super field" "temp"
    val tmp[2386839]:Error[167938] "temp"
    (2161428 'move' tmp[2386839](2161430 '.v' initTemp[969462] super[355610]))
    (2386842 'move' super_tmp[2161426] tmp[2386839])
    val super_tmp[2161433]:object[22] "dead after last mention" "temporary of super field" "temp"
    val tmp[2386845]:object[22] "temp"
    (2161435 'move' tmp[2386845](2161437 '.v' super_tmp[2161426] super[355608]))
    (2386848 'move' super_tmp[2161433] tmp[2386845])
    (2161440 'setcid' super_tmp[2161433])
    val call_tmp[2161442]:object[22] "dead at end of block" "maybe param" "temp"
    (2161444 'move' call_tmp[2161442](2161446 'cast' object[22] super_tmp[2161426]))
    (2161449 'setcid' call_tmp[2161442])
    val init_coerce_tmp[2161451]:Error[167938] "dead after last mention" "temp"
    (2161453 'move' init_coerce_tmp[2161451](2161455 'cast' Error[167938] nil[44]))
    val tmp[2386851]:__wide_Error[2337829] "temp"
    (2386854 'move' tmp[2386851] init_coerce_tmp[2161451])
    (2161458 '.=' super_tmp[2161426] _next[167866] tmp[2386851])
    (2161462 '.=' super_tmp[2161426] thrownLine[167871] 0)
    (2161466 '.=' super_tmp[2161426] thrownFileId[167879] 0)
    val tmp[2161470]:string[26] "dead after last mention" "temp"
    (2161473 call init[30760] tmp[2161470])
    (2161475 '.=' super_tmp[2161426] _msg[167884] tmp[2161470])
    (2161479 '.=' super_tmp[2161426] _hasThrowInfo[167890] 0)
    (2161483 'setcid' super_tmp[2161426])
    val call_tmp[2161485]:Error[167938] "dead at end of block" "maybe param" "temp"
    (2161487 'move' call_tmp[2161485](2161489 'cast' Error[167938] initTemp[969462]))
    (2161492 'setcid' call_tmp[2161485])
    (2161494 'setcid' initTemp[969462])
    (969501 return initTemp[969462])
  }
  type NilThrownError[167983] val super[355610]:Error[167938] "super class"
  function __wide_DecodeError[2337843].message[168069](const in arg this[168096]:__wide_DecodeError[2337843], wide-ref arg _retArg[1798173]:string[26]) : void[4] "fn returns via _retArg" "method" "primary method" "no doc" "method overrides" "resolved" "virtual"
  {
    const-val local__str_literal_2213[2334113]:string[26] "temp"
    (2334114 'move' "Invalid UTF-8 character encountered." "Invalid UTF-8 character encountered.")
    val inlineImm[2151163]:string[26] "temp"
    (2151166 'move' inlineImm[2151163] "Invalid UTF-8 character encountered.")
    ref i_x[2151168]:string[26] "temp"
    (2151172 'move' i_x[2151168](2151170 'set reference' inlineImm[2151163]))
    val ret[2151175]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2151177]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2386128]:string[26] "temp"
    (2386131 'move' tmp[2386128] i_x[2151168])
    (2151180 call init=[30771] tmp[2151177] tmp[2386128])
    (2151183 'move' ret[2151175] tmp[2151177])
    (1798175 '=' _retArg[1798173] ret[2151175])
    (1798179 return _void[55])
  }
  function __wide_DecodeError[2337843].deinit[812073](const in arg this[812077]:__wide_DecodeError[2337843]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[1771862]
    val _parent_destructor_tmp_[1771857]:__wide_Error[2337829] "temp"
    (1771864 'move' _parent_destructor_tmp_[1771857](1771858 'cast' Error[167938] this[812077]))
    wide-ref _field_destructor_tmp_[2161383]:string[26] "temp"
    (2161385 'move' _field_destructor_tmp_[2161383](2161387 '.' _parent_destructor_tmp_[1771857] _msg[167884]))
    (2161391 call deinit[30831] _field_destructor_tmp_[2161383])
    (812085 return _void[55])
  }
  function _local__new[2361673]() : DecodeError[168094] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "local fn" "_new wrapper" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val initTemp[2361676]:DecodeError[168094] "dead after last mention" "temp"
    const-val call_tmp[2361678]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2361680 'move' call_tmp[2361678](2361682 'sizeof_bundle' DecodeError[168094]))
    const-val cast_tmp[2361684]:c_void_ptr[149] "dead after last mention" "temp"
    (2361686 'move' cast_tmp[2361684](2361689 call _local_chpl_here_alloc[2353897] call_tmp[2361678] 1))
    (2361692 'move' initTemp[2361676](2361694 'cast' DecodeError[168094] cast_tmp[2361684]))
    (2361697 'setcid' initTemp[2361676])
    val super_tmp[2361699]:Error[167938] "dead after last mention" "temporary of super field" "temp"
    val tmp[2402617]:Error[167938] "temp"
    (2361701 'move' tmp[2402617](2361703 '.v' initTemp[2361676] super[355616]))
    (2402620 'move' super_tmp[2361699] tmp[2402617])
    val super_tmp[2361706]:object[22] "dead after last mention" "temporary of super field" "temp"
    val tmp[2402623]:object[22] "temp"
    (2361708 'move' tmp[2402623](2361710 '.v' super_tmp[2361699] super[355608]))
    (2402626 'move' super_tmp[2361706] tmp[2402623])
    (2361713 'setcid' super_tmp[2361706])
    val call_tmp[2361715]:object[22] "dead at end of block" "maybe param" "temp"
    (2361717 'move' call_tmp[2361715](2361719 'cast' object[22] super_tmp[2361699]))
    (2361722 'setcid' call_tmp[2361715])
    val init_coerce_tmp[2361724]:Error[167938] "dead after last mention" "temp"
    (2361726 'move' init_coerce_tmp[2361724](2361728 'cast' Error[167938] nil[44]))
    val tmp[2402629]:__wide_Error[2337829] "temp"
    (2402632 'move' tmp[2402629] init_coerce_tmp[2361724])
    (2361731 '.=' super_tmp[2361699] _next[167866] tmp[2402629])
    (2361735 '.=' super_tmp[2361699] thrownLine[167871] 0)
    (2361739 '.=' super_tmp[2361699] thrownFileId[167879] 0)
    val tmp[2361743]:string[26] "dead after last mention" "temp"
    (2361746 call _local_init[2347408] tmp[2361743])
    (2361748 '.=' super_tmp[2361699] _msg[167884] tmp[2361743])
    (2361752 '.=' super_tmp[2361699] _hasThrowInfo[167890] 0)
    (2361756 'setcid' super_tmp[2361699])
    val call_tmp[2361758]:Error[167938] "dead at end of block" "maybe param" "temp"
    (2361760 'move' call_tmp[2361758](2361762 'cast' Error[167938] initTemp[2361676]))
    (2361765 'setcid' call_tmp[2361758])
    (2361767 'setcid' initTemp[2361676])
    (2361769 return initTemp[2361676])
  }
  function _new[965553]() : DecodeError[168094] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val initTemp[965555]:DecodeError[168094] "dead after last mention" "temp"
    const-val call_tmp[965596]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (965599 'move' call_tmp[965596](965610 'sizeof_bundle' DecodeError[168094]))
    const-val cast_tmp[965613]:c_void_ptr[149] "dead after last mention" "temp"
    (965615 'move' cast_tmp[965613](965567 call chpl_here_alloc[187742] call_tmp[965596] 1))
    (965570 'move' initTemp[965555](965617 'cast' DecodeError[168094] cast_tmp[965613]))
    (965572 'setcid' initTemp[965555])
    val super_tmp[2161499]:Error[167938] "dead after last mention" "temporary of super field" "temp"
    val tmp[2386857]:Error[167938] "temp"
    (2161501 'move' tmp[2386857](2161503 '.v' initTemp[965555] super[355616]))
    (2386860 'move' super_tmp[2161499] tmp[2386857])
    val super_tmp[2161506]:object[22] "dead after last mention" "temporary of super field" "temp"
    val tmp[2386863]:object[22] "temp"
    (2161508 'move' tmp[2386863](2161510 '.v' super_tmp[2161499] super[355608]))
    (2386866 'move' super_tmp[2161506] tmp[2386863])
    (2161513 'setcid' super_tmp[2161506])
    val call_tmp[2161515]:object[22] "dead at end of block" "maybe param" "temp"
    (2161517 'move' call_tmp[2161515](2161519 'cast' object[22] super_tmp[2161499]))
    (2161522 'setcid' call_tmp[2161515])
    val init_coerce_tmp[2161524]:Error[167938] "dead after last mention" "temp"
    (2161526 'move' init_coerce_tmp[2161524](2161528 'cast' Error[167938] nil[44]))
    val tmp[2386869]:__wide_Error[2337829] "temp"
    (2386872 'move' tmp[2386869] init_coerce_tmp[2161524])
    (2161531 '.=' super_tmp[2161499] _next[167866] tmp[2386869])
    (2161535 '.=' super_tmp[2161499] thrownLine[167871] 0)
    (2161539 '.=' super_tmp[2161499] thrownFileId[167879] 0)
    val tmp[2161543]:string[26] "dead after last mention" "temp"
    (2161546 call init[30760] tmp[2161543])
    (2161548 '.=' super_tmp[2161499] _msg[167884] tmp[2161543])
    (2161552 '.=' super_tmp[2161499] _hasThrowInfo[167890] 0)
    (2161556 'setcid' super_tmp[2161499])
    val call_tmp[2161558]:Error[167938] "dead at end of block" "maybe param" "temp"
    (2161560 'move' call_tmp[2161558](2161562 'cast' Error[167938] initTemp[965555]))
    (2161565 'setcid' call_tmp[2161558])
    (2161567 'setcid' initTemp[965555])
    (965591 return initTemp[965555])
  }
  type DecodeError[168094] val super[355616]:Error[167938] "super class"
  function __wide_IllegalArgumentError[2337850].deinit[812113](const in arg this[812117]:__wide_IllegalArgumentError[2337850]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[1771874]
    val _parent_destructor_tmp_[1771869]:__wide_Error[2337829] "temp"
    (1771876 'move' _parent_destructor_tmp_[1771869](1771870 'cast' Error[167938] this[812117]))
    wide-ref _field_destructor_tmp_[2161398]:string[26] "temp"
    (2161400 'move' _field_destructor_tmp_[2161398](2161402 '.' _parent_destructor_tmp_[1771869] _msg[167884]))
    (2161406 call deinit[30831] _field_destructor_tmp_[2161398])
    (812125 return _void[55])
  }
  function _local__new[2361349](const  ref arg info[2361351]:string[26]) : IllegalArgumentError[168200] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "local fn" "_new wrapper" "resolved" "fn synchronization free"
  {
    val initTemp[2361354]:IllegalArgumentError[168200] "dead after last mention" "temp"
    const-val call_tmp[2361356]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2361358 'move' call_tmp[2361356](2361360 'sizeof_bundle' IllegalArgumentError[168200]))
    const-val cast_tmp[2361362]:c_void_ptr[149] "dead after last mention" "temp"
    (2361364 'move' cast_tmp[2361362](2361367 call _local_chpl_here_alloc[2353897] call_tmp[2361356] 26))
    (2361370 'move' initTemp[2361354](2361372 'cast' IllegalArgumentError[168200] cast_tmp[2361362]))
    (2361375 'setcid' initTemp[2361354])
    val super_tmp[2361377]:Error[167938] "dead after last mention" "temporary of super field" "temp"
    val tmp[2402593]:Error[167938] "temp"
    (2361379 'move' tmp[2402593](2361381 '.v' initTemp[2361354] super[355618]))
    (2402596 'move' super_tmp[2361377] tmp[2402593])
    val super_tmp[2361384]:object[22] "dead after last mention" "temporary of super field" "temp"
    val tmp[2402599]:object[22] "temp"
    (2361386 'move' tmp[2402599](2361388 '.v' super_tmp[2361377] super[355608]))
    (2402602 'move' super_tmp[2361384] tmp[2402599])
    (2361391 'setcid' super_tmp[2361384])
    val call_tmp[2361393]:object[22] "dead at end of block" "maybe param" "temp"
    (2361395 'move' call_tmp[2361393](2361397 'cast' object[22] super_tmp[2361377]))
    (2361400 'setcid' call_tmp[2361393])
    val init_coerce_tmp[2361402]:Error[167938] "dead after last mention" "temp"
    (2361404 'move' init_coerce_tmp[2361402](2361406 'cast' Error[167938] nil[44]))
    val tmp[2402605]:__wide_Error[2337829] "temp"
    (2402608 'move' tmp[2402605] init_coerce_tmp[2361402])
    (2361409 '.=' super_tmp[2361377] _next[167866] tmp[2402605])
    (2361413 '.=' super_tmp[2361377] thrownLine[167871] 0)
    (2361417 '.=' super_tmp[2361377] thrownFileId[167879] 0)
    val tmp[2361421]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2402611]:string[26] "temp"
    (2402614 'move' tmp[2402611] info[2361351])
    (2361424 call _local_init=[2347615] tmp[2361421] tmp[2402611])
    (2361427 '.=' super_tmp[2361377] _msg[167884] tmp[2361421])
    (2361431 '.=' super_tmp[2361377] _hasThrowInfo[167890] 0)
    (2361435 'setcid' super_tmp[2361377])
    val call_tmp[2361437]:Error[167938] "dead at end of block" "maybe param" "temp"
    (2361439 'move' call_tmp[2361437](2361441 'cast' Error[167938] initTemp[2361354]))
    (2361444 'setcid' call_tmp[2361437])
    (2361446 'setcid' initTemp[2361354])
    (2361448 return initTemp[2361354])
  }
  function _new[1064018](const  ref arg info[1064027]:string[26]) : IllegalArgumentError[168200] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "fn synchronization free"
  {
    val initTemp[1064020]:IllegalArgumentError[168200] "dead after last mention" "temp"
    const-val call_tmp[1064064]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1064067 'move' call_tmp[1064064](1064078 'sizeof_bundle' IllegalArgumentError[168200]))
    const-val cast_tmp[1064081]:c_void_ptr[149] "dead after last mention" "temp"
    (1064083 'move' cast_tmp[1064081](1064035 call chpl_here_alloc[187742] call_tmp[1064064] 26))
    (1064038 'move' initTemp[1064020](1064085 'cast' IllegalArgumentError[168200] cast_tmp[1064081]))
    (1064040 'setcid' initTemp[1064020])
    val super_tmp[2121024]:Error[167938] "dead after last mention" "temporary of super field" "temp"
    val tmp[2385617]:Error[167938] "temp"
    (2121026 'move' tmp[2385617](2121028 '.v' initTemp[1064020] super[355618]))
    (2385620 'move' super_tmp[2121024] tmp[2385617])
    val super_tmp[2121031]:object[22] "dead after last mention" "temporary of super field" "temp"
    val tmp[2385623]:object[22] "temp"
    (2121033 'move' tmp[2385623](2121035 '.v' super_tmp[2121024] super[355608]))
    (2385626 'move' super_tmp[2121031] tmp[2385623])
    (2121038 'setcid' super_tmp[2121031])
    val call_tmp[2121040]:object[22] "dead at end of block" "maybe param" "temp"
    (2121042 'move' call_tmp[2121040](2121044 'cast' object[22] super_tmp[2121024]))
    (2121047 'setcid' call_tmp[2121040])
    val init_coerce_tmp[2121049]:Error[167938] "dead after last mention" "temp"
    (2121051 'move' init_coerce_tmp[2121049](2121053 'cast' Error[167938] nil[44]))
    val tmp[2385629]:__wide_Error[2337829] "temp"
    (2385632 'move' tmp[2385629] init_coerce_tmp[2121049])
    (2121056 '.=' super_tmp[2121024] _next[167866] tmp[2385629])
    (2121060 '.=' super_tmp[2121024] thrownLine[167871] 0)
    (2121064 '.=' super_tmp[2121024] thrownFileId[167879] 0)
    val tmp[2121068]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2385635]:string[26] "temp"
    (2385638 'move' tmp[2385635] info[1064027])
    (2121071 call init=[30771] tmp[2121068] tmp[2385635])
    (2121074 '.=' super_tmp[2121024] _msg[167884] tmp[2121068])
    (2121078 '.=' super_tmp[2121024] _hasThrowInfo[167890] 0)
    (2121082 'setcid' super_tmp[2121024])
    val call_tmp[2121084]:Error[167938] "dead at end of block" "maybe param" "temp"
    (2121086 'move' call_tmp[2121084](2121088 'cast' Error[167938] initTemp[1064020]))
    (2121091 'setcid' call_tmp[2121084])
    (2121093 'setcid' initTemp[1064020])
    (1064059 return initTemp[1064020])
  }
  function _new[1073413](const  ref arg formal[1073422]:string[26], const  ref arg info[1073425]:string[26]) : IllegalArgumentError[168200] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    const-val local__str_literal_2217[2335176]:string[26] "temp"
    (2335177 'move' "': " "': ")
    const-val local__str_literal_2215[2335170]:string[26] "temp"
    (2335171 'move' "illegal argument '" "illegal argument '")
    val initTemp[1073415]:IllegalArgumentError[168200] "dead after last mention" "temp"
    const-val call_tmp[1073460]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1073463 'move' call_tmp[1073460](1073474 'sizeof_bundle' IllegalArgumentError[168200]))
    const-val cast_tmp[1073477]:c_void_ptr[149] "dead after last mention" "temp"
    (1073479 'move' cast_tmp[1073477](1073431 call chpl_here_alloc[187742] call_tmp[1073460] 26))
    (1073434 'move' initTemp[1073415](1073481 'cast' IllegalArgumentError[168200] cast_tmp[1073477]))
    (1073436 'setcid' initTemp[1073415])
    const-val call_tmp[2121098]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2121100]:string[26] "temp"
    wide-ref tmp[2385641]:string[26] "temp"
    (2385644 'move' tmp[2385641] formal[1073422])
    (2121103 call +[38342] "illegal argument '" tmp[2385641] ret_tmp[2121100])
    (2121107 'move' call_tmp[2121098] ret_tmp[2121100])
    const-val call_tmp[2121110]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2121112]:string[26] "temp"
    wide-ref tmp[2385647]:string[26] "temp"
    (2385651 'move' tmp[2385647](2385649 'set reference' "': "))
    (2121115 call +[38342] call_tmp[2121098] tmp[2385647] ret_tmp[2121112])
    (2121119 'move' call_tmp[2121110] ret_tmp[2121112])
    const-val call_tmp[2121122]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[2121124]:string[26] "temp"
    wide-ref tmp[2385654]:string[26] "temp"
    (2385657 'move' tmp[2385654] info[1073425])
    (2121127 call +[38342] call_tmp[2121110] tmp[2385654] ret_tmp[2121124])
    (2121131 'move' call_tmp[2121122] ret_tmp[2121124])
    const-val msg[2121134]:string[26] "dead at end of block" "insert auto destroy"
    (2121136 'move' msg[2121134] call_tmp[2121122])
    val super_tmp[2121139]:Error[167938] "dead after last mention" "temporary of super field" "temp"
    val tmp[2385660]:Error[167938] "temp"
    (2121141 'move' tmp[2385660](2121143 '.v' initTemp[1073415] super[355618]))
    (2385663 'move' super_tmp[2121139] tmp[2385660])
    ref i_msg[2121146]:string[26] "temp"
    (2121148 'move' i_msg[2121146](2121150 'set reference' msg[2121134]))
    val super_tmp[2121152]:object[22] "dead after last mention" "temporary of super field" "temp"
    val tmp[2385666]:object[22] "temp"
    (2121154 'move' tmp[2385666](2121156 '.v' super_tmp[2121139] super[355608]))
    (2385669 'move' super_tmp[2121152] tmp[2385666])
    (2121159 'setcid' super_tmp[2121152])
    val call_tmp[2121161]:object[22] "dead at end of block" "maybe param" "temp"
    (2121163 'move' call_tmp[2121161](2121165 'cast' object[22] super_tmp[2121139]))
    (2121168 'setcid' call_tmp[2121161])
    val init_coerce_tmp[2121170]:Error[167938] "dead after last mention" "temp"
    (2121172 'move' init_coerce_tmp[2121170](2121174 'cast' Error[167938] nil[44]))
    val tmp[2385672]:__wide_Error[2337829] "temp"
    (2385675 'move' tmp[2385672] init_coerce_tmp[2121170])
    (2121177 '.=' super_tmp[2121139] _next[167866] tmp[2385672])
    (2121181 '.=' super_tmp[2121139] thrownLine[167871] 0)
    (2121185 '.=' super_tmp[2121139] thrownFileId[167879] 0)
    val tmp[2121189]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2385678]:string[26] "temp"
    (2385681 'move' tmp[2385678] i_msg[2121146])
    (2121192 call init=[30771] tmp[2121189] tmp[2385678])
    (2121195 '.=' super_tmp[2121139] _msg[167884] tmp[2121189])
    (2121199 '.=' super_tmp[2121139] _hasThrowInfo[167890] 0)
    (2121203 'setcid' super_tmp[2121139])
    val call_tmp[2121205]:Error[167938] "dead at end of block" "maybe param" "temp"
    (2121207 'move' call_tmp[2121205](2121209 'cast' Error[167938] initTemp[1073415]))
    (2121212 'setcid' call_tmp[2121205])
    (2121214 'setcid' initTemp[1073415])
    ref i_x[2121216]:string[26] "temp"
    (2121218 'move' i_x[2121216](2121220 'set reference' msg[2121134]))
    wide-ref tmp[2385684]:string[26] "temp"
    (2385687 'move' tmp[2385684] i_x[2121216])
    (2121223 call deinit[30831] tmp[2385684])
    ref i_x[2121225]:string[26] "temp"
    (2121227 'move' i_x[2121225](2121229 'set reference' call_tmp[2121110]))
    wide-ref tmp[2385690]:string[26] "temp"
    (2385693 'move' tmp[2385690] i_x[2121225])
    (2121232 call deinit[30831] tmp[2385690])
    ref i_x[2121234]:string[26] "temp"
    (2121236 'move' i_x[2121234](2121238 'set reference' call_tmp[2121098]))
    wide-ref tmp[2385696]:string[26] "temp"
    (2385699 'move' tmp[2385696] i_x[2121234])
    (2121241 call deinit[30831] tmp[2385696])
    (1073455 return initTemp[1073415])
  }
  type IllegalArgumentError[168200] val super[355618]:Error[167938] "super class"
  function chpl_TaskErrors[168302]._local_append[2369776](wide-ref arg this[2369778]:chpl_TaskErrors[168302], const in arg err[2369780]:Error[167938]) : void[4] "local fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-val call_tmp[2369783]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    (2369785 'move' call_tmp[2369783](2369787 '_wide_get_locale' this[2369778]))
    val isdirect[2369789]:bool[10] "temp"
    (2369791 'move' isdirect[2369789](2369794 call _local_chpl_doDirectExecuteOn[2341227] call_tmp[2369783]))
    if isdirect[2369789]
    {
      const-val tmp[2403482]:__wide_Error[2337829] "temp"
      (2403485 'move' tmp[2403482] err[2369780])
      (2369799 call _local_on_fn[2370288] this[2369778] tmp[2403482])
    }
    {
      val _args_foron_fn[2369803]:_class_localson_fn[2034920] "temp"
      (2369805 'move' _args_foron_fn[2369803](2369807 'stack allocate class' _class_localson_fn[2034920]))
      (2369809 '.=' _args_foron_fn[2369803] _0_tmp[2034923] call_tmp[2369783])
      wide-ref tmp[2369813]:chpl_TaskErrors[168302] "temp"
      (2369815 'move' tmp[2369813](2369817 'set reference' this[2369778]))
      (2369819 '.=' _args_foron_fn[2369803] _1_this[2034925] tmp[2369813])
      val tmp[2403488]:__wide_Error[2337829] "temp"
      (2403491 'move' tmp[2403488] err[2369780])
      (2369823 '.=' _args_foron_fn[2369803] _2_err[2034927] tmp[2403488])
      val _args_vforon_fn[2369827]:c_void_ptr[149] "temp"
      (2369829 'move' _args_vforon_fn[2369827](2369831 'cast_to_void_star' _args_foron_fn[2369803]))
      val _args_sizeon_fn[2369833]:int(64)[13] "temp"
      (2369835 'move' _args_sizeon_fn[2369833](2369837 'sizeof_bundle' _class_localson_fn[2034920]))
      on(2369840 call _local_wrapon_fn[2370462] call_tmp[2369783] _args_vforon_fn[2369827] _args_sizeon_fn[2369833] _args_foron_fn[2369803])
    }
    (2369846 return _void[55])
  }
  function chpl_TaskErrors[168302].append[168236](wide-ref arg this[168304]:chpl_TaskErrors[168302], const in arg err[168233]:Error[167938]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    const-val call_tmp[679393]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    (679396 'move' call_tmp[679393](168274 '_wide_get_locale' this[168304]))
    val isdirect[2034903]:bool[10] "temp"
    (2034908 'move' isdirect[2034903](2034905 call chpl_doDirectExecuteOn[187423] call_tmp[679393]))
    if isdirect[2034903]
    {
      const-val tmp[2378475]:__wide_Error[2337829] "temp"
      (2378478 'move' tmp[2378475] err[168233])
      (2034912 call on_fn[935249] this[168304] tmp[2378475])
    }
    {
      val _args_foron_fn[2034930]:_class_localson_fn[2034920] "temp"
      (2034934 'move' _args_foron_fn[2034930](2034932 'stack allocate class' _class_localson_fn[2034920]))
      (2034936 '.=' _args_foron_fn[2034930] _0_tmp[2034923] call_tmp[679393])
      wide-ref tmp[2034940]:chpl_TaskErrors[168302] "temp"
      (2034944 'move' tmp[2034940](2034942 'set reference' this[168304]))
      (2034946 '.=' _args_foron_fn[2034930] _1_this[2034925] tmp[2034940])
      val tmp[2378481]:__wide_Error[2337829] "temp"
      (2378484 'move' tmp[2378481] err[168233])
      (2034950 '.=' _args_foron_fn[2034930] _2_err[2034927] tmp[2378481])
      val _args_vforon_fn[2034954]:c_void_ptr[149] "temp"
      (2034958 'move' _args_vforon_fn[2034954](2034956 'cast_to_void_star' _args_foron_fn[2034930]))
      val _args_sizeon_fn[2034960]:int(64)[13] "temp"
      (2034964 'move' _args_sizeon_fn[2034960](2034962 'sizeof_bundle' _class_localson_fn[2034920]))
      on(2035004 call wrapon_fn[2034966] call_tmp[679393] _args_vforon_fn[2034954] _args_sizeon_fn[2034960] _args_foron_fn[2034930])
    }
    (522050 return _void[55])
  }
  function chpl_TaskErrors[168302]._local_empty[2364028](const  ref arg this[2364030]:chpl_TaskErrors[168302]) : bool[10] "local fn" "method" "primary method" "resolved"
  {
    val coerce_tmp[2364033]:__wide_Error[2337829] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2364035 'move' coerce_tmp[2364033](2364037 '.v' this[2364030] _head[168220]))
    val coerce_tmp[2364040]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2364042 'move' coerce_tmp[2364040](2364044 'cast' object[22] coerce_tmp[2364033]))
    const-val call_tmp[2364047]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2402884]:__wide_object[2337724] "temp"
    (2402887 'move' tmp[2402884] nil[44])
    (2364049 'move' call_tmp[2364047](2364051 'ptr_eq' coerce_tmp[2364040] tmp[2402884]))
    (2364054 return call_tmp[2364047])
  }
  function chpl_TaskErrors[168302].empty[168290](const  ref arg this[168308]:chpl_TaskErrors[168302]) : bool[10] "method" "primary method" "resolved"
  {
    val coerce_tmp[1235469]:__wide_Error[2337829] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1235473 'move' coerce_tmp[1235469](2323715 '.v' this[168308] _head[168220]))
    val coerce_tmp[1235475]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1235480 'move' coerce_tmp[1235475](1235477 'cast' object[22] coerce_tmp[1235469]))
    const-val call_tmp[2058636]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2380587]:__wide_object[2337724] "temp"
    (2380590 'move' tmp[2380587] nil[44])
    (2058638 'move' call_tmp[2058636](2058640 'ptr_eq' coerce_tmp[1235475] tmp[2380587]))
    (522056 return call_tmp[2058636])
  }
  function chpl_TaskErrors[168302]._local_init[2367493](ref arg this[2367495]:chpl_TaskErrors[168302], in arg _head[2367497]:Error[167938], const  ref arg _errorsLock[2367499]:chpl_LocalSpinlock[187386]) : void[4] "compiler generated" "last resort" "local fn" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_tmp__errorsLock[2367502]:chpl_LocalSpinlock[187386] "dead at end of block" "no auto destroy" "no copy" "temp"
    (2367504 'move' _formal_tmp__errorsLock[2367502] _errorsLock[2367499])
    val tmp[2403362]:__wide_Error[2337829] "temp"
    (2403365 'move' tmp[2403362] _head[2367497])
    (2367507 '.=' this[2367495] _head[168220] tmp[2403362])
    (2367511 '.=' this[2367495] _errorsLock[168225] _formal_tmp__errorsLock[2367502])
    (2367515 return _void[55])
  }
  function chpl_TaskErrors[168302].init[812179](ref arg this[812182]:chpl_TaskErrors[168302], in arg _head[812185]:Error[167938], const  ref arg _errorsLock[812200]:chpl_LocalSpinlock[187386]) : void[4] "compiler generated" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_tmp__errorsLock[945087]:chpl_LocalSpinlock[187386] "dead at end of block" "no auto destroy" "no copy" "temp"
    (945090 'move' _formal_tmp__errorsLock[945087] _errorsLock[812200])
    val tmp[2371167]:__wide_Error[2337829] "temp"
    (2371170 'move' tmp[2371167] _head[812185])
    (812214 '.=' this[812182] _head[168220] tmp[2371167])
    (812217 '.=' this[812182] _errorsLock[168225] _formal_tmp__errorsLock[945087])
    (812221 return _void[55])
  }
  type chpl_TaskErrors[168302] val _head[168220]:__wide_Error[2337829] val _errorsLock[168225]:chpl_LocalSpinlock[187386]
  function __wide_TaskErrors[2337857]._local_deinit[2368420](const in arg this[2368422]:__wide_TaskErrors[2337857]) : void[4] "destructor" "local fn" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    const-val local__str_literal_978[2368425]:string[26] "temp"
    (2368427 'move' local__str_literal_978[2368425] "With a negative count, the range must have a last index.")
    val coerce_tmp[2368430]:c_ptr(owned Error?)[1235526] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2370076 'local_check' this[2368422] c"cannot access remote data in local block")
    const-val local_this[2370073]:TaskErrors[169656] "temp"
    (2370079 'move' local_this[2370073] this[2368422])
    val tmp[2403398]:c_ptr(owned Error?)[1235526] "temp"
    (2368432 'move' tmp[2403398](2368434 '.v' local_this[2370073] errorsArray[168328]))
    (2403401 'move' coerce_tmp[2368430] tmp[2403398])
    const-val call_tmp[2368437]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2368439 'move' call_tmp[2368437](2368441 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2368444]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2368446 'move' call_tmp[2368444](2368448 'ptr_neq' coerce_tmp[2368430] call_tmp[2368437]))
    if call_tmp[2368444]
    {
      const-val coerce_tmp[2368453]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2370085 'local_check' this[2368422] c"cannot access remote data in local block")
      const-val local_this[2370082]:TaskErrors[169656] "temp"
      (2370088 'move' local_this[2370082] this[2368422])
      val tmp[2403404]:int(64)[13] "temp"
      (2368455 'move' tmp[2403404](2368457 '.v' local_this[2370082] nErrors[168317]))
      (2403407 'move' coerce_tmp[2368453] tmp[2403404])
      const-val call_tmp[2368460]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2368462 'move' call_tmp[2368460](2368464 '<' coerce_tmp[2368453] 0))
      if call_tmp[2368460]
      {
        (2368470 call _local_boundsCheckHalt[2347396] local__str_literal_978[2368425])
      }
      val tmp_x0[2368473]:int(64)[13] "temp"
      val tmp_x1[2368475]:int(64)[13] "temp"
      const-val call_tmp[2368477]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2368479 'move' call_tmp[2368477](2368481 '==' coerce_tmp[2368453] 0))
      if call_tmp[2368477]
      {
        const-val call_tmp[2368486]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (2368488 'move' call_tmp[2368486](2368490 'cast' uint(64)[115] 0))
        const-val call_tmp[2368493]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (2368495 'move' call_tmp[2368493](2368497 '-' call_tmp[2368486] 1))
        const-val call_tmp[2368500]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2368502 'move' call_tmp[2368500](2368504 'cast' int(64)[13] call_tmp[2368493]))
        (2368507 'move' tmp_x0[2368473] 0)
        (2368510 'move' tmp_x1[2368475] call_tmp[2368500])
      }
      {
        const-val call_tmp[2368514]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2368516 'move' call_tmp[2368514](2368518 '-' coerce_tmp[2368453] 1))
        const-val call_tmp[2368521]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2368523 'move' call_tmp[2368521](2368525 '+' 0 call_tmp[2368514]))
        (2368528 'move' tmp_x0[2368473] 0)
        (2368531 'move' tmp_x1[2368475] call_tmp[2368521])
      }
      (2368535 'noop')
      (2368536 'noop')
      (2368537 'noop')
      const-val _ic__F1_high[2368538]:int(64)[13] "temp"
      (2368540 'move' _ic__F1_high[2368538] tmp_x1[2368475])
      val i[2368543]:int(64)[13] "dead at end of block" "insert auto destroy"
      (2368545 'move' i[2368543] 0)
      (2368549 call _local_chpl_checkIfRangeIterWillOverflow[2345049] tmp_x0[2368473] tmp_x1[2368475] 1 tmp_x0[2368473] tmp_x1[2368475] 1)
      val coerce_tmp[2368556]:c_ptr(owned Error?)[1235526] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2370096 'local_check' this[2368422] c"cannot access remote data in local block")
      const-val local_this[2370093]:TaskErrors[169656] "temp"
      (2370099 'move' local_this[2370093] this[2368422])
      val tmp[2403410]:c_ptr(owned Error?)[1235526] "temp"
      (2368558 'move' tmp[2403410](2368560 '.v' local_this[2370093] errorsArray[168328]))
      (2403413 'move' coerce_tmp[2368556] tmp[2403410])
      CForLoop[2368563]
      {
        ref call_tmp[2368576]:owned Error?[966324] "dead after last mention" "maybe param" "temp"
        (2368578 'move' call_tmp[2368576](2368580 'array_get' coerce_tmp[2368556] i[2368543]))
        (2368584 call _local_clear[2370102] call_tmp[2368576])
        {
          (2368565 '=' i[2368543] tmp_x0[2368473])
        }
        {
          (2368569 '<=' i[2368543] _ic__F1_high[2368538])
        }
        {
          (2368573 '+=' i[2368543] 1)
        }
      }
      label _endchpl_direct_param_stride_range_iter[2368586]
      label _endchpl_direct_counted_range_iter_helper[2368588]
      label _endchpl_direct_counted_range_iter[2368590]
      val coerce_tmp[2368592]:c_ptr(owned Error?)[1235526] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2370235 'local_check' this[2368422] c"cannot access remote data in local block")
      const-val local_this[2370232]:TaskErrors[169656] "temp"
      (2370238 'move' local_this[2370232] this[2368422])
      val tmp[2403416]:c_ptr(owned Error?)[1235526] "temp"
      (2368594 'move' tmp[2403416](2368596 '.v' local_this[2370232] errorsArray[168328]))
      (2403419 'move' coerce_tmp[2368592] tmp[2403416])
      const-val coerce_tmp[2368599]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2368601 'move' coerce_tmp[2368599](2368603 'cast' c_void_ptr[149] coerce_tmp[2368592]))
      (2368607 call _local_chpl_here_free[2359409] coerce_tmp[2368599])
    }
    label _enddeinit[2368610]
    val _parent_destructor_tmp_[2368612]:__wide_Error[2337829] "temp"
    (2368614 'move' _parent_destructor_tmp_[2368612](2368616 'cast' Error[167938] this[2368422]))
    wide-ref _field_destructor_tmp_[2368619]:string[26] "temp"
    (2370245 'local_check' _parent_destructor_tmp_[2368612] c"cannot access remote data in local block")
    val local__parent_destructor_tmp_[2370242]:Error[167938] "temp"
    (2370248 'move' local__parent_destructor_tmp_[2370242] _parent_destructor_tmp_[2368612])
    (2368621 'move' _field_destructor_tmp_[2368619](2368623 '.' local__parent_destructor_tmp_[2370242] _msg[167884]))
    (2368627 call _local_deinit[2348042] _field_destructor_tmp_[2368619])
    (2368629 return _void[55])
  }
  function __wide_TaskErrors[2337857].deinit[168786](const in arg this[169670]:__wide_TaskErrors[2337857]) : void[4] "destructor" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    const-val local__str_literal_978[2334119]:string[26] "temp"
    (2334120 'move' "With a negative count, the range must have a last index." "With a negative count, the range must have a last index.")
    val coerce_tmp[1235609]:c_ptr(owned Error?)[1235526] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2372811]:c_ptr(owned Error?)[1235526] "temp"
    (1235613 'move' tmp[2372811](2323726 '.v' this[169670] errorsArray[168328]))
    (2372814 'move' coerce_tmp[1235609] tmp[2372811])
    const-val call_tmp[2227279]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2227281 'move' call_tmp[2227279](2227283 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2227286]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2227288 'move' call_tmp[2227286](2227290 'ptr_neq' coerce_tmp[1235609] call_tmp[2227279]))
    if call_tmp[2227286]
    {
      const-val coerce_tmp[1235646]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      val tmp[2372817]:int(64)[13] "temp"
      (1235650 'move' tmp[2372817](2323732 '.v' this[169670] nErrors[168317]))
      (2372820 'move' coerce_tmp[1235646] tmp[2372817])
      const-val call_tmp[2062475]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2062477 'move' call_tmp[2062475](2062479 '<' coerce_tmp[1235646] 0))
      if call_tmp[2062475]
      {
        (1916546 call boundsCheckHalt[210079] "With a negative count, the range must have a last index.")
      }
      val tmp_x0[2318596]:int(64)[13] "temp"
      val tmp_x1[2318598]:int(64)[13] "temp"
      const-val call_tmp[2065787]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2065789 'move' call_tmp[2065787](2065791 '==' coerce_tmp[1235646] 0))
      if call_tmp[2065787]
      {
        const-val call_tmp[2063325]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (2063327 'move' call_tmp[2063325](2063329 'cast' uint(64)[115] 0))
        const-val call_tmp[2128496]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (2128498 'move' call_tmp[2128496](2128500 '-' call_tmp[2063325] 1))
        const-val call_tmp[2128876]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2128878 'move' call_tmp[2128876](2128880 'cast' int(64)[13] call_tmp[2128496]))
        (2318604 'move' tmp_x0[2318596] 0)
        (2318609 'move' tmp_x1[2318598] call_tmp[2128876])
      }
      {
        const-val call_tmp[2090904]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2090906 'move' call_tmp[2090904](2090908 '-' coerce_tmp[1235646] 1))
        const-val call_tmp[2072597]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2072599 'move' call_tmp[2072597](2072601 '+' 0 call_tmp[2090904]))
        (2318614 'move' tmp_x0[2318596] 0)
        (2318619 'move' tmp_x1[2318598] call_tmp[2072597])
      }
      (1916655 'noop')
      (1916675 'noop')
      (1916694 'noop')
      const-val _ic__F1_high[2306001]:int(64)[13] "temp"
      (2133397 'move' _ic__F1_high[2306001] tmp_x1[2318598])
      val i[1916723]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1916727 'move' i[1916723] 0)
      (1916779 call chpl_checkIfRangeIterWillOverflow[1095987] tmp_x0[2318596] tmp_x1[2318598] 1 tmp_x0[2318596] tmp_x1[2318598] 1)
      val coerce_tmp[1916894]:c_ptr(owned Error?)[1235526] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      val tmp[2377951]:c_ptr(owned Error?)[1235526] "temp"
      (1916896 'move' tmp[2377951](2323740 '.v' this[169670] errorsArray[168328]))
      (2377954 'move' coerce_tmp[1916894] tmp[2377951])
      CForLoop[1916786] hazard
      {
        ref call_tmp[2135263]:owned Error?[966324] "dead after last mention" "maybe param" "temp"
        (2135265 'move' call_tmp[2135263](2135267 'array_get' coerce_tmp[1916894] i[1916723]))
        (1916907 call clear[1235958] call_tmp[2135263])
        {
          (1916795 '=' i[1916723] tmp_x0[2318596])
        }
        {
          (1916806 '<=' i[1916723] _ic__F1_high[2306001])
        }
        {
          (1916812 '+=' i[1916723] 1)
        }
      }
      label _endchpl_direct_param_stride_range_iter[1916849]
      label _endchpl_direct_counted_range_iter_helper[1916857]
      label _endchpl_direct_counted_range_iter[1858304]
      val coerce_tmp[1237079]:c_ptr(owned Error?)[1235526] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      val tmp[2372823]:c_ptr(owned Error?)[1235526] "temp"
      (1237083 'move' tmp[2372823](2323746 '.v' this[169670] errorsArray[168328]))
      (2372826 'move' coerce_tmp[1237079] tmp[2372823])
      const-val coerce_tmp[1237085]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1237091 'move' coerce_tmp[1237085](1237087 'cast' c_void_ptr[149] coerce_tmp[1237079]))
      (2149938 call chpl_here_free[188081] coerce_tmp[1237085])
    }
    label _enddeinit[1771578]
    val _parent_destructor_tmp_[1771573]:__wide_Error[2337829] "temp"
    (1771580 'move' _parent_destructor_tmp_[1771573](1771574 'cast' Error[167938] this[169670]))
    wide-ref _field_destructor_tmp_[2161353]:string[26] "temp"
    (2161355 'move' _field_destructor_tmp_[2161353](2161357 '.' _parent_destructor_tmp_[1771573] _msg[167884]))
    (2161361 call deinit[30831] _field_destructor_tmp_[2161353])
    (522067 return _void[55])
  }
  function __wide_TaskErrors[2337857].message[169031](const in arg this[169682]:__wide_TaskErrors[2337857], wide-ref arg _retArg[1798181]:string[26]) : void[4] "fn returns via _retArg" "method" "primary method" "method overrides" "resolved" "virtual"
  {
    const-val local__str_literal_2228[2334177]:string[26] "temp"
    (2334178 'move' " ... " " ... ")
    const-val local__str_literal_2226[2334170]:string[26] "temp"
    (2334171 'move' " errors: " " errors: ")
    const-val local__str_literal_2224[2334152]:string[26] "temp"
    (2334153 'move' "" "")
    const-val local__str_literal_4777[2334143]:string[26] "temp"
    (2334144 'move' "casting int(64) less than 0 to uint(64)" "casting int(64) less than 0 to uint(64)")
    const-val local__str_literal_2221[2334137]:string[26] "temp"
    (2334138 'move' "" "")
    const-val local__str_literal_129[2334131]:string[26] "temp"
    (2334132 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local__str_literal_978[2334125]:string[26] "temp"
    (2334126 'move' "With a negative count, the range must have a last index." "With a negative count, the range must have a last index.")
    const-val ret[522095]:string[26] "dead after last mention" "RVV" "temp"
    val n[169035]:int(64)[13] "dead at end of block" "insert auto destroy"
    (544513 'move' n[169035] 0)
    val minMsg[169041]:string[26] "dead at end of block" "insert auto destroy"
    (1728784 call init[30760] minMsg[169041])
    val maxMsg[169046]:string[26] "dead at end of block" "insert auto destroy"
    (1728789 call init[30760] maxMsg[169046])
    val first[169053]:__wide_Error[2337829] "dead at end of block" "insert auto destroy"
    val tmp[2341114]:Error[167938] "temp"
    (2341117 'move' tmp[2341114](1728795 'cast' Error[167938] nil[44]))
    (1728797 'move' first[169053] tmp[2341114])
    val last[169060]:__wide_Error[2337829] "dead at end of block" "insert auto destroy"
    val tmp[2341119]:Error[167938] "temp"
    (2341122 'move' tmp[2341119](1728800 'cast' Error[167938] nil[44]))
    (1728802 'move' last[169060] tmp[2341119])
    const-val _ic__F0_this[2299422]:__wide_TaskErrors[2337857] "temp"
    (2123220 'move' _ic__F0_this[2299422] this[169682])
    const-val this[1858952]:__wide_TaskErrors[2337857] "temp"
    (1858957 'move' this[1858952] this[169682])
    const-val coerce_tmp[1858544]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val tmp[2377076]:int(64)[13] "temp"
    (1858546 'move' tmp[2377076](2323776 '.v' this[1858952] nErrors[168317]))
    (2377079 'move' coerce_tmp[1858544] tmp[2377076])
    const-val call_tmp[2062485]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2062487 'move' call_tmp[2062485](2062489 '<' coerce_tmp[1858544] 0))
    if call_tmp[2062485]
    {
      (1917524 call boundsCheckHalt[210079] "With a negative count, the range must have a last index.")
    }
    val tmp_x0[2318704]:int(64)[13] "temp"
    val tmp_x1[2318706]:int(64)[13] "temp"
    const-val call_tmp[2065802]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2065804 'move' call_tmp[2065802](2065806 '==' coerce_tmp[1858544] 0))
    if call_tmp[2065802]
    {
      const-val call_tmp[2063335]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2063337 'move' call_tmp[2063335](2063339 'cast' uint(64)[115] 0))
      const-val call_tmp[2128506]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2128508 'move' call_tmp[2128506](2128510 '-' call_tmp[2063335] 1))
      const-val call_tmp[2128886]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2128888 'move' call_tmp[2128886](2128890 'cast' int(64)[13] call_tmp[2128506]))
      (2318712 'move' tmp_x0[2318704] 0)
      (2318717 'move' tmp_x1[2318706] call_tmp[2128886])
    }
    {
      const-val call_tmp[2090914]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2090916 'move' call_tmp[2090914](2090918 '-' coerce_tmp[1858544] 1))
      const-val call_tmp[2072607]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2072609 'move' call_tmp[2072607](2072611 '+' 0 call_tmp[2090914]))
      (2318722 'move' tmp_x0[2318704] 0)
      (2318727 'move' tmp_x1[2318706] call_tmp[2072607])
    }
    (1917633 'noop')
    (1917653 'noop')
    (1917672 'noop')
    const-val _ic__F1_high[2306020]:int(64)[13] "temp"
    (2133460 'move' _ic__F1_high[2306020] tmp_x1[2318706])
    val i[1917701]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1917705 'move' i[1917701] 0)
    (1917757 call chpl_checkIfRangeIterWillOverflow[1095987] tmp_x0[2318704] tmp_x1[2318706] 1 tmp_x0[2318704] tmp_x1[2318706] 1)
    const-val this[1917866]:__wide_TaskErrors[2337857] "temp"
    (1917868 'move' this[1917866] _ic__F0_this[2299422])
    val coerce_tmp[1917878]:c_ptr(owned Error?)[1235526] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2377957]:c_ptr(owned Error?)[1235526] "temp"
    (1917880 'move' tmp[2377957](2323784 '.v' this[1917866] errorsArray[168328]))
    (2377960 'move' coerce_tmp[1917878] tmp[2377957])
    CForLoop[1917764] hazard
    {
      ref call_tmp[2135273]:owned Error?[966324] "dead after last mention" "maybe param" "temp"
      (2135275 'move' call_tmp[2135273](2135277 'array_get' coerce_tmp[1917878] i[1917701]))
      val coerce_tmp[1917892]:__wide_Error[2337829] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1917894 'move' coerce_tmp[1917892](1917897 call borrow[1235739] call_tmp[2135273]))
      val coerce_tmp[1917899]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1917901 'move' coerce_tmp[1917899](1917903 'cast' object[22] coerce_tmp[1917892]))
      const-val call_tmp[2060136]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2380917]:__wide_object[2337724] "temp"
      (2380920 'move' tmp[2380917] nil[44])
      (2060138 'move' call_tmp[2060136](2060140 'ptr_neq' coerce_tmp[1917899] tmp[2380917]))
      if call_tmp[2060136]
      {
        const-val this[1917925]:__wide_TaskErrors[2337857] "temp"
        (1917927 'move' this[1917925] _ic__F0_this[2299422])
        val coerce_tmp[1917937]:c_ptr(owned Error?)[1235526] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        val tmp[2377963]:c_ptr(owned Error?)[1235526] "temp"
        (1917939 'move' tmp[2377963](2323790 '.v' this[1917925] errorsArray[168328]))
        (2377966 'move' coerce_tmp[1917937] tmp[2377963])
        ref call_tmp[2135283]:owned Error?[966324] "dead after last mention" "maybe param" "temp"
        (2135285 'move' call_tmp[2135283](2135287 'array_get' coerce_tmp[1917937] i[1917701]))
        val coerce_tmp[2290672]:__wide_Error[2337829] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2290674 'move' coerce_tmp[2290672](2290676 '.v' call_tmp[2135283] chpl_p[966319]))
        val coerce_tmp[2290679]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2290681 'move' coerce_tmp[2290679](2290683 'cast' object[22] coerce_tmp[2290672]))
        const-val call_tmp[2290686]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        val tmp[2397978]:__wide_object[2337724] "temp"
        (2397981 'move' tmp[2397978] nil[44])
        (2290688 'move' call_tmp[2290686](2290690 'ptr_eq' coerce_tmp[2290679] tmp[2397978]))
        if call_tmp[2290686]
        {
          (2290696 call nilCheckHalt[210063] "argument to ! is nil")
        }
        val coerce_tmp[2290699]:__wide_Error[2337829] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2290701 'move' coerce_tmp[2290699](2290703 '.v' call_tmp[2135283] chpl_p[966319]))
        const-val tmp[1917975]:bool[10] "dead after last mention" "maybe param" "temp"
        (1917977 'move' tmp[1917975](1917980 call ==[38820] minMsg[169041] ""))
        val tmp[1917983]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        if tmp[1917975]
        {
          (1917997 'move' tmp[1917983] 1)
        }
        {
          const-val call_tmp[1918003]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val _virtual_method_tmp_[1918005]:int(32)[95] "temp"
          (1918007 'move' _virtual_method_tmp_[1918005](1918009 'getcid' coerce_tmp[2290699]))
          val ret_tmp[1918011]:string[26] "temp"
          ref tmp[2377969]:string[26] "temp"
          (2377973 'move' tmp[2377969](2377972 'set reference' ret_tmp[1918011]))
          wide-ref tmp[2377976]:string[26] "temp"
          (2377979 'move' tmp[2377976] tmp[2377969])
          (1918013 'virtual method call' message[167929] _virtual_method_tmp_[1918005] coerce_tmp[2290699] tmp[2377976])
          (1918018 'move' call_tmp[1918003] ret_tmp[1918011])
          val coerce_tmp[2106795]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2384518]:c_ptr(uint(8))[937334] "temp"
          (2106797 'move' tmp[2384518](2106799 '.v' call_tmp[1918003] buff[30737]))
          (2384521 'move' coerce_tmp[2106795] tmp[2384518])
          const-val coerce_tmp[2106802]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2384524]:int(64)[13] "temp"
          (2106804 'move' tmp[2384524](2106806 '.v' call_tmp[1918003] buffLen[30719]))
          (2384527 'move' coerce_tmp[2106802] tmp[2384524])
          const-val coerce_tmp[2106809]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2384530]:int(32)[95] "temp"
          (2106811 'move' tmp[2384530](2106813 '.v' call_tmp[1918003] locale_id[30754]))
          (2384533 'move' coerce_tmp[2106809] tmp[2384530])
          val coerce_tmp[2106816]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2384536]:c_ptr(uint(8))[937334] "temp"
          (2106818 'move' tmp[2384536](2106820 '.v' minMsg[169041] buff[30737]))
          (2384539 'move' coerce_tmp[2106816] tmp[2384536])
          const-val coerce_tmp[2106823]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2384542]:int(64)[13] "temp"
          (2106825 'move' tmp[2384542](2106827 '.v' minMsg[169041] buffLen[30719]))
          (2384545 'move' coerce_tmp[2106823] tmp[2384542])
          const-val coerce_tmp[2106830]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2384548]:int(32)[95] "temp"
          (2106832 'move' tmp[2384548](2106834 '.v' minMsg[169041] locale_id[30754]))
          (2384551 'move' coerce_tmp[2106830] tmp[2384548])
          val ret[2106837]:int(64)[13] "dead after last mention" "RVV" "temp"
          const-val call_tmp[2106839]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2106841 'move' call_tmp[2106839](2106843 '==' coerce_tmp[2106809] chpl_nodeID[208152]))
          val tmp[2106846]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
          if call_tmp[2106839]
          {
            const-val call_tmp[2106850]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2106852 'move' call_tmp[2106850](2106854 '==' coerce_tmp[2106830] chpl_nodeID[208152]))
            (2106857 'move' tmp[2106846] call_tmp[2106850])
          }
          {
            (2106861 'move' tmp[2106846] 0)
          }
          if tmp[2106846]
          {
            val ret[2106867]:int(64)[13] "dead after last mention" "RVV" "temp"
            val tmp[2106869]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            const-val call_tmp[2106871]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2106873 'move' call_tmp[2106871](2106875 '<' coerce_tmp[2106802] coerce_tmp[2106823]))
            if call_tmp[2106871]
            {
              (2106880 'move' tmp[2106869] coerce_tmp[2106802])
            }
            {
              (2106884 'move' tmp[2106869] coerce_tmp[2106823])
            }
            const-val coerce_tmp[2106893]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (2106895 'move' coerce_tmp[2106893](2106897 'cast' c_void_ptr[149] coerce_tmp[2106795]))
            const-val coerce_tmp[2106900]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (2106902 'move' coerce_tmp[2106900](2106904 'cast' c_void_ptr[149] coerce_tmp[2106816]))
            const-val call_tmp[2106907]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2106909 'move' call_tmp[2106907](2106911 '<' tmp[2106869] 0))
            if call_tmp[2106907]
            {
              (2106917 call safeCastCheckHalt[210127] "casting int(64) less than 0 to uint(64)")
            }
            const-val call_tmp[2106920]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
            (2106922 'move' call_tmp[2106920](2106924 'cast' uint(64)[115] tmp[2106869]))
            const-val call_tmp[2106927]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
            (2106929 'move' call_tmp[2106927](2106932 call memcmp[1206373] coerce_tmp[2106893] coerce_tmp[2106900] call_tmp[2106920]))
            const-val call_tmp[2106936]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2106938 'move' call_tmp[2106936](2106940 'cast' int(64)[13] call_tmp[2106927]))
            const-val call_tmp[2106948]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2106950 'move' call_tmp[2106948](2106952 '==' call_tmp[2106936] 0))
            if call_tmp[2106948]
            {
              const-val call_tmp[2106957]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2106959 'move' call_tmp[2106957](2106961 '<' tmp[2106869] coerce_tmp[2106802]))
              if call_tmp[2106957]
              {
                (2106966 'move' ret[2106867] 1)
                gotoReturn _end__strcmp_local[2106991] _end__strcmp_local[2106991]
              }
              const-val call_tmp[2106972]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2106974 'move' call_tmp[2106972](2106976 '<' tmp[2106869] coerce_tmp[2106823]))
              if call_tmp[2106972]
              {
                (2106981 'move' ret[2106867] -1)
                gotoReturn _end__strcmp_local[2106991] _end__strcmp_local[2106991]
              }
            }
            (2106988 'move' ret[2106867] call_tmp[2106936])
            label _end__strcmp_local[2106991]
            (2106993 'move' ret[2106837] ret[2106867])
            gotoReturn _end__strcmp[2107577] _end__strcmp[2107577]
          }
          {
            const-val call_tmp[2106999]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2107001 'move' call_tmp[2106999](2107003 '!=' coerce_tmp[2106809] chpl_nodeID[208152]))
            val tmp[2107006]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            if call_tmp[2106999]
            {
              const-val call_tmp[2107010]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2107012 'move' call_tmp[2107010](2107014 '==' coerce_tmp[2106830] chpl_nodeID[208152]))
              (2107017 'move' tmp[2107006] call_tmp[2107010])
            }
            {
              (2107021 'move' tmp[2107006] 0)
            }
            if tmp[2107006]
            {
              val call_tmp[2107027]:c_ptr(uint(8))[937334] "dead at end of block" "maybe param" "temp"
              const-val coerce_tmp[2107029]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2107031 'move' coerce_tmp[2107029](2107033 'cast' int(64)[13] coerce_tmp[2106809]))
              (2107036 'move' call_tmp[2107027](2107039 call bufferCopyRemote[172784] coerce_tmp[2107029] coerce_tmp[2106795] coerce_tmp[2106802]))
              val ret[2107048]:int(64)[13] "dead after last mention" "RVV" "temp"
              val tmp[2107050]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              const-val call_tmp[2107052]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2107054 'move' call_tmp[2107052](2107056 '<' coerce_tmp[2106802] coerce_tmp[2106823]))
              if call_tmp[2107052]
              {
                (2107061 'move' tmp[2107050] coerce_tmp[2106802])
              }
              {
                (2107065 'move' tmp[2107050] coerce_tmp[2106823])
              }
              const-val coerce_tmp[2107074]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2107076 'move' coerce_tmp[2107074](2107078 'cast' c_void_ptr[149] call_tmp[2107027]))
              const-val coerce_tmp[2107081]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2107083 'move' coerce_tmp[2107081](2107085 'cast' c_void_ptr[149] coerce_tmp[2106816]))
              const-val call_tmp[2107088]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2107090 'move' call_tmp[2107088](2107092 '<' tmp[2107050] 0))
              if call_tmp[2107088]
              {
                (2107098 call safeCastCheckHalt[210127] "casting int(64) less than 0 to uint(64)")
              }
              const-val call_tmp[2107101]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
              (2107103 'move' call_tmp[2107101](2107105 'cast' uint(64)[115] tmp[2107050]))
              const-val call_tmp[2107108]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
              (2107110 'move' call_tmp[2107108](2107113 call memcmp[1206373] coerce_tmp[2107074] coerce_tmp[2107081] call_tmp[2107101]))
              const-val call_tmp[2107117]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (2107119 'move' call_tmp[2107117](2107121 'cast' int(64)[13] call_tmp[2107108]))
              const-val call_tmp[2107129]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2107131 'move' call_tmp[2107129](2107133 '==' call_tmp[2107117] 0))
              if call_tmp[2107129]
              {
                const-val call_tmp[2107138]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2107140 'move' call_tmp[2107138](2107142 '<' tmp[2107050] coerce_tmp[2106802]))
                if call_tmp[2107138]
                {
                  (2107147 'move' ret[2107048] 1)
                  gotoReturn _end__strcmp_local[2107172] _end__strcmp_local[2107172]
                }
                const-val call_tmp[2107153]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2107155 'move' call_tmp[2107153](2107157 '<' tmp[2107050] coerce_tmp[2106823]))
                if call_tmp[2107153]
                {
                  (2107162 'move' ret[2107048] -1)
                  gotoReturn _end__strcmp_local[2107172] _end__strcmp_local[2107172]
                }
              }
              (2107169 'move' ret[2107048] call_tmp[2107117])
              label _end__strcmp_local[2107172]
              const-val coerce_tmp[2107174]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2107176 'move' coerce_tmp[2107174](2107178 'cast' c_void_ptr[149] call_tmp[2107027]))
              (2107182 call chpl_here_free[188081] coerce_tmp[2107174])
              (2107184 'move' ret[2106837] ret[2107048])
              gotoReturn _end__strcmp[2107577] _end__strcmp[2107577]
            }
            {
              const-val call_tmp[2107190]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2107192 'move' call_tmp[2107190](2107194 '==' coerce_tmp[2106809] chpl_nodeID[208152]))
              val tmp[2107197]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              if call_tmp[2107190]
              {
                const-val call_tmp[2107201]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2107203 'move' call_tmp[2107201](2107205 '!=' coerce_tmp[2106830] chpl_nodeID[208152]))
                (2107208 'move' tmp[2107197] call_tmp[2107201])
              }
              {
                (2107212 'move' tmp[2107197] 0)
              }
              if tmp[2107197]
              {
                val call_tmp[2107218]:c_ptr(uint(8))[937334] "dead at end of block" "maybe param" "temp"
                const-val coerce_tmp[2107220]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2107222 'move' coerce_tmp[2107220](2107224 'cast' int(64)[13] coerce_tmp[2106830]))
                (2107227 'move' call_tmp[2107218](2107230 call bufferCopyRemote[172784] coerce_tmp[2107220] coerce_tmp[2106816] coerce_tmp[2106823]))
                val ret[2107239]:int(64)[13] "dead after last mention" "RVV" "temp"
                val tmp[2107241]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val call_tmp[2107243]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2107245 'move' call_tmp[2107243](2107247 '<' coerce_tmp[2106802] coerce_tmp[2106823]))
                if call_tmp[2107243]
                {
                  (2107252 'move' tmp[2107241] coerce_tmp[2106802])
                }
                {
                  (2107256 'move' tmp[2107241] coerce_tmp[2106823])
                }
                const-val coerce_tmp[2107265]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2107267 'move' coerce_tmp[2107265](2107269 'cast' c_void_ptr[149] coerce_tmp[2106795]))
                const-val coerce_tmp[2107272]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2107274 'move' coerce_tmp[2107272](2107276 'cast' c_void_ptr[149] call_tmp[2107218]))
                const-val call_tmp[2107279]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2107281 'move' call_tmp[2107279](2107283 '<' tmp[2107241] 0))
                if call_tmp[2107279]
                {
                  (2107289 call safeCastCheckHalt[210127] "casting int(64) less than 0 to uint(64)")
                }
                const-val call_tmp[2107292]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
                (2107294 'move' call_tmp[2107292](2107296 'cast' uint(64)[115] tmp[2107241]))
                const-val call_tmp[2107299]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (2107301 'move' call_tmp[2107299](2107304 call memcmp[1206373] coerce_tmp[2107265] coerce_tmp[2107272] call_tmp[2107292]))
                const-val call_tmp[2107308]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (2107310 'move' call_tmp[2107308](2107312 'cast' int(64)[13] call_tmp[2107299]))
                const-val call_tmp[2107320]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2107322 'move' call_tmp[2107320](2107324 '==' call_tmp[2107308] 0))
                if call_tmp[2107320]
                {
                  const-val call_tmp[2107329]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2107331 'move' call_tmp[2107329](2107333 '<' tmp[2107241] coerce_tmp[2106802]))
                  if call_tmp[2107329]
                  {
                    (2107338 'move' ret[2107239] 1)
                    gotoReturn _end__strcmp_local[2107363] _end__strcmp_local[2107363]
                  }
                  const-val call_tmp[2107344]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2107346 'move' call_tmp[2107344](2107348 '<' tmp[2107241] coerce_tmp[2106823]))
                  if call_tmp[2107344]
                  {
                    (2107353 'move' ret[2107239] -1)
                    gotoReturn _end__strcmp_local[2107363] _end__strcmp_local[2107363]
                  }
                }
                (2107360 'move' ret[2107239] call_tmp[2107308])
                label _end__strcmp_local[2107363]
                const-val coerce_tmp[2107365]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (2107367 'move' coerce_tmp[2107365](2107369 'cast' c_void_ptr[149] call_tmp[2107218]))
                (2107373 call chpl_here_free[188081] coerce_tmp[2107365])
                (2107375 'move' ret[2106837] ret[2107239])
                gotoReturn _end__strcmp[2107577] _end__strcmp[2107577]
              }
              {
                val call_tmp[2107381]:c_ptr(uint(8))[937334] "dead at end of block" "maybe param" "temp"
                const-val coerce_tmp[2107383]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2107385 'move' coerce_tmp[2107383](2107387 'cast' int(64)[13] coerce_tmp[2106809]))
                (2107390 'move' call_tmp[2107381](2107393 call bufferCopyRemote[172784] coerce_tmp[2107383] coerce_tmp[2106795] coerce_tmp[2106802]))
                val call_tmp[2107402]:c_ptr(uint(8))[937334] "dead at end of block" "maybe param" "temp"
                const-val coerce_tmp[2107404]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2107406 'move' coerce_tmp[2107404](2107408 'cast' int(64)[13] coerce_tmp[2106830]))
                (2107411 'move' call_tmp[2107402](2107414 call bufferCopyRemote[172784] coerce_tmp[2107404] coerce_tmp[2106816] coerce_tmp[2106823]))
                val ret[2107423]:int(64)[13] "dead after last mention" "RVV" "temp"
                val tmp[2107425]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val call_tmp[2107427]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2107429 'move' call_tmp[2107427](2107431 '<' coerce_tmp[2106802] coerce_tmp[2106823]))
                if call_tmp[2107427]
                {
                  (2107436 'move' tmp[2107425] coerce_tmp[2106802])
                }
                {
                  (2107440 'move' tmp[2107425] coerce_tmp[2106823])
                }
                const-val coerce_tmp[2107449]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2107451 'move' coerce_tmp[2107449](2107453 'cast' c_void_ptr[149] call_tmp[2107381]))
                const-val coerce_tmp[2107456]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2107458 'move' coerce_tmp[2107456](2107460 'cast' c_void_ptr[149] call_tmp[2107402]))
                const-val call_tmp[2107463]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2107465 'move' call_tmp[2107463](2107467 '<' tmp[2107425] 0))
                if call_tmp[2107463]
                {
                  (2107473 call safeCastCheckHalt[210127] "casting int(64) less than 0 to uint(64)")
                }
                const-val call_tmp[2107476]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
                (2107478 'move' call_tmp[2107476](2107480 'cast' uint(64)[115] tmp[2107425]))
                const-val call_tmp[2107483]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (2107485 'move' call_tmp[2107483](2107488 call memcmp[1206373] coerce_tmp[2107449] coerce_tmp[2107456] call_tmp[2107476]))
                const-val call_tmp[2107492]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (2107494 'move' call_tmp[2107492](2107496 'cast' int(64)[13] call_tmp[2107483]))
                const-val call_tmp[2107504]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2107506 'move' call_tmp[2107504](2107508 '==' call_tmp[2107492] 0))
                if call_tmp[2107504]
                {
                  const-val call_tmp[2107513]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2107515 'move' call_tmp[2107513](2107517 '<' tmp[2107425] coerce_tmp[2106802]))
                  if call_tmp[2107513]
                  {
                    (2107522 'move' ret[2107423] 1)
                    gotoReturn _end__strcmp_local[2107547] _end__strcmp_local[2107547]
                  }
                  const-val call_tmp[2107528]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2107530 'move' call_tmp[2107528](2107532 '<' tmp[2107425] coerce_tmp[2106823]))
                  if call_tmp[2107528]
                  {
                    (2107537 'move' ret[2107423] -1)
                    gotoReturn _end__strcmp_local[2107547] _end__strcmp_local[2107547]
                  }
                }
                (2107544 'move' ret[2107423] call_tmp[2107492])
                label _end__strcmp_local[2107547]
                const-val coerce_tmp[2107549]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (2107551 'move' coerce_tmp[2107549](2107553 'cast' c_void_ptr[149] call_tmp[2107381]))
                (2107557 call chpl_here_free[188081] coerce_tmp[2107549])
                const-val coerce_tmp[2107559]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (2107561 'move' coerce_tmp[2107559](2107563 'cast' c_void_ptr[149] call_tmp[2107402]))
                (2107567 call chpl_here_free[188081] coerce_tmp[2107559])
                (2107569 'move' ret[2106837] ret[2107423])
                gotoReturn _end__strcmp[2107577] _end__strcmp[2107577]
              }
            }
          }
          label _end__strcmp[2107577]
          const-val call_tmp[2107579]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2107581 'move' call_tmp[2107579](2107583 '<' ret[2106837] 0))
          (1918032 'move' tmp[1917983] call_tmp[2107579])
          ref i_x[2080266]:string[26] "temp"
          (2080270 'move' i_x[2080266](2080268 'set reference' call_tmp[1918003]))
          wide-ref tmp[2382543]:string[26] "temp"
          (2382546 'move' tmp[2382543] i_x[2080266])
          (2080274 call deinit[30831] tmp[2382543])
        }
        if tmp[1917983]
        {
          const-val call_tmp[1918046]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val _virtual_method_tmp_[1918048]:int(32)[95] "temp"
          (1918050 'move' _virtual_method_tmp_[1918048](1918052 'getcid' coerce_tmp[2290699]))
          val ret_tmp[1918054]:string[26] "temp"
          ref tmp[2377982]:string[26] "temp"
          (2377986 'move' tmp[2377982](2377985 'set reference' ret_tmp[1918054]))
          wide-ref tmp[2377989]:string[26] "temp"
          (2377992 'move' tmp[2377989] tmp[2377982])
          (1918056 'virtual method call' message[167929] _virtual_method_tmp_[1918048] coerce_tmp[2290699] tmp[2377989])
          (1918061 'move' call_tmp[1918046] ret_tmp[1918054])
          wide-ref tmp[2377995]:string[26] "temp"
          (2377999 'move' tmp[2377995](2377997 'set reference' minMsg[169041]))
          (1918065 call =[38269] tmp[2377995] call_tmp[1918046])
          ref i_x[2080278]:string[26] "temp"
          (2080282 'move' i_x[2080278](2080280 'set reference' call_tmp[1918046]))
          wide-ref tmp[2382549]:string[26] "temp"
          (2382552 'move' tmp[2382549] i_x[2080278])
          (2080286 call deinit[30831] tmp[2382549])
        }
        const-val tmp[1918072]:bool[10] "dead after last mention" "maybe param" "temp"
        (1918074 'move' tmp[1918072](1918077 call ==[38820] maxMsg[169046] ""))
        val tmp[1918080]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        if tmp[1918072]
        {
          (1918094 'move' tmp[1918080] 1)
        }
        {
          const-val call_tmp[1918100]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val _virtual_method_tmp_[1918102]:int(32)[95] "temp"
          (1918104 'move' _virtual_method_tmp_[1918102](1918106 'getcid' coerce_tmp[2290699]))
          val ret_tmp[1918108]:string[26] "temp"
          ref tmp[2378002]:string[26] "temp"
          (2378006 'move' tmp[2378002](2378005 'set reference' ret_tmp[1918108]))
          wide-ref tmp[2378009]:string[26] "temp"
          (2378012 'move' tmp[2378009] tmp[2378002])
          (1918110 'virtual method call' message[167929] _virtual_method_tmp_[1918102] coerce_tmp[2290699] tmp[2378009])
          (1918115 'move' call_tmp[1918100] ret_tmp[1918108])
          val coerce_tmp[2108437]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2384554]:c_ptr(uint(8))[937334] "temp"
          (2108439 'move' tmp[2384554](2108441 '.v' call_tmp[1918100] buff[30737]))
          (2384557 'move' coerce_tmp[2108437] tmp[2384554])
          const-val coerce_tmp[2108444]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2384560]:int(64)[13] "temp"
          (2108446 'move' tmp[2384560](2108448 '.v' call_tmp[1918100] buffLen[30719]))
          (2384563 'move' coerce_tmp[2108444] tmp[2384560])
          const-val coerce_tmp[2108451]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2384566]:int(32)[95] "temp"
          (2108453 'move' tmp[2384566](2108455 '.v' call_tmp[1918100] locale_id[30754]))
          (2384569 'move' coerce_tmp[2108451] tmp[2384566])
          val coerce_tmp[2108458]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2384572]:c_ptr(uint(8))[937334] "temp"
          (2108460 'move' tmp[2384572](2108462 '.v' maxMsg[169046] buff[30737]))
          (2384575 'move' coerce_tmp[2108458] tmp[2384572])
          const-val coerce_tmp[2108465]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2384578]:int(64)[13] "temp"
          (2108467 'move' tmp[2384578](2108469 '.v' maxMsg[169046] buffLen[30719]))
          (2384581 'move' coerce_tmp[2108465] tmp[2384578])
          const-val coerce_tmp[2108472]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2384584]:int(32)[95] "temp"
          (2108474 'move' tmp[2384584](2108476 '.v' maxMsg[169046] locale_id[30754]))
          (2384587 'move' coerce_tmp[2108472] tmp[2384584])
          val ret[2108479]:int(64)[13] "dead after last mention" "RVV" "temp"
          const-val call_tmp[2108481]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2108483 'move' call_tmp[2108481](2108485 '==' coerce_tmp[2108451] chpl_nodeID[208152]))
          val tmp[2108488]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
          if call_tmp[2108481]
          {
            const-val call_tmp[2108492]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2108494 'move' call_tmp[2108492](2108496 '==' coerce_tmp[2108472] chpl_nodeID[208152]))
            (2108499 'move' tmp[2108488] call_tmp[2108492])
          }
          {
            (2108503 'move' tmp[2108488] 0)
          }
          if tmp[2108488]
          {
            val ret[2108509]:int(64)[13] "dead after last mention" "RVV" "temp"
            val tmp[2108511]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            const-val call_tmp[2108513]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2108515 'move' call_tmp[2108513](2108517 '<' coerce_tmp[2108444] coerce_tmp[2108465]))
            if call_tmp[2108513]
            {
              (2108522 'move' tmp[2108511] coerce_tmp[2108444])
            }
            {
              (2108526 'move' tmp[2108511] coerce_tmp[2108465])
            }
            const-val coerce_tmp[2108535]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (2108537 'move' coerce_tmp[2108535](2108539 'cast' c_void_ptr[149] coerce_tmp[2108437]))
            const-val coerce_tmp[2108542]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (2108544 'move' coerce_tmp[2108542](2108546 'cast' c_void_ptr[149] coerce_tmp[2108458]))
            const-val call_tmp[2108549]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2108551 'move' call_tmp[2108549](2108553 '<' tmp[2108511] 0))
            if call_tmp[2108549]
            {
              (2108559 call safeCastCheckHalt[210127] "casting int(64) less than 0 to uint(64)")
            }
            const-val call_tmp[2108562]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
            (2108564 'move' call_tmp[2108562](2108566 'cast' uint(64)[115] tmp[2108511]))
            const-val call_tmp[2108569]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
            (2108571 'move' call_tmp[2108569](2108574 call memcmp[1206373] coerce_tmp[2108535] coerce_tmp[2108542] call_tmp[2108562]))
            const-val call_tmp[2108578]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2108580 'move' call_tmp[2108578](2108582 'cast' int(64)[13] call_tmp[2108569]))
            const-val call_tmp[2108590]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2108592 'move' call_tmp[2108590](2108594 '==' call_tmp[2108578] 0))
            if call_tmp[2108590]
            {
              const-val call_tmp[2108599]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2108601 'move' call_tmp[2108599](2108603 '<' tmp[2108511] coerce_tmp[2108444]))
              if call_tmp[2108599]
              {
                (2108608 'move' ret[2108509] 1)
                gotoReturn _end__strcmp_local[2108633] _end__strcmp_local[2108633]
              }
              const-val call_tmp[2108614]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2108616 'move' call_tmp[2108614](2108618 '<' tmp[2108511] coerce_tmp[2108465]))
              if call_tmp[2108614]
              {
                (2108623 'move' ret[2108509] -1)
                gotoReturn _end__strcmp_local[2108633] _end__strcmp_local[2108633]
              }
            }
            (2108630 'move' ret[2108509] call_tmp[2108578])
            label _end__strcmp_local[2108633]
            (2108635 'move' ret[2108479] ret[2108509])
            gotoReturn _end__strcmp[2109219] _end__strcmp[2109219]
          }
          {
            const-val call_tmp[2108641]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2108643 'move' call_tmp[2108641](2108645 '!=' coerce_tmp[2108451] chpl_nodeID[208152]))
            val tmp[2108648]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            if call_tmp[2108641]
            {
              const-val call_tmp[2108652]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2108654 'move' call_tmp[2108652](2108656 '==' coerce_tmp[2108472] chpl_nodeID[208152]))
              (2108659 'move' tmp[2108648] call_tmp[2108652])
            }
            {
              (2108663 'move' tmp[2108648] 0)
            }
            if tmp[2108648]
            {
              val call_tmp[2108669]:c_ptr(uint(8))[937334] "dead at end of block" "maybe param" "temp"
              const-val coerce_tmp[2108671]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2108673 'move' coerce_tmp[2108671](2108675 'cast' int(64)[13] coerce_tmp[2108451]))
              (2108678 'move' call_tmp[2108669](2108681 call bufferCopyRemote[172784] coerce_tmp[2108671] coerce_tmp[2108437] coerce_tmp[2108444]))
              val ret[2108690]:int(64)[13] "dead after last mention" "RVV" "temp"
              val tmp[2108692]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              const-val call_tmp[2108694]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2108696 'move' call_tmp[2108694](2108698 '<' coerce_tmp[2108444] coerce_tmp[2108465]))
              if call_tmp[2108694]
              {
                (2108703 'move' tmp[2108692] coerce_tmp[2108444])
              }
              {
                (2108707 'move' tmp[2108692] coerce_tmp[2108465])
              }
              const-val coerce_tmp[2108716]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2108718 'move' coerce_tmp[2108716](2108720 'cast' c_void_ptr[149] call_tmp[2108669]))
              const-val coerce_tmp[2108723]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2108725 'move' coerce_tmp[2108723](2108727 'cast' c_void_ptr[149] coerce_tmp[2108458]))
              const-val call_tmp[2108730]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2108732 'move' call_tmp[2108730](2108734 '<' tmp[2108692] 0))
              if call_tmp[2108730]
              {
                (2108740 call safeCastCheckHalt[210127] "casting int(64) less than 0 to uint(64)")
              }
              const-val call_tmp[2108743]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
              (2108745 'move' call_tmp[2108743](2108747 'cast' uint(64)[115] tmp[2108692]))
              const-val call_tmp[2108750]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
              (2108752 'move' call_tmp[2108750](2108755 call memcmp[1206373] coerce_tmp[2108716] coerce_tmp[2108723] call_tmp[2108743]))
              const-val call_tmp[2108759]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (2108761 'move' call_tmp[2108759](2108763 'cast' int(64)[13] call_tmp[2108750]))
              const-val call_tmp[2108771]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2108773 'move' call_tmp[2108771](2108775 '==' call_tmp[2108759] 0))
              if call_tmp[2108771]
              {
                const-val call_tmp[2108780]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2108782 'move' call_tmp[2108780](2108784 '<' tmp[2108692] coerce_tmp[2108444]))
                if call_tmp[2108780]
                {
                  (2108789 'move' ret[2108690] 1)
                  gotoReturn _end__strcmp_local[2108814] _end__strcmp_local[2108814]
                }
                const-val call_tmp[2108795]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2108797 'move' call_tmp[2108795](2108799 '<' tmp[2108692] coerce_tmp[2108465]))
                if call_tmp[2108795]
                {
                  (2108804 'move' ret[2108690] -1)
                  gotoReturn _end__strcmp_local[2108814] _end__strcmp_local[2108814]
                }
              }
              (2108811 'move' ret[2108690] call_tmp[2108759])
              label _end__strcmp_local[2108814]
              const-val coerce_tmp[2108816]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2108818 'move' coerce_tmp[2108816](2108820 'cast' c_void_ptr[149] call_tmp[2108669]))
              (2108824 call chpl_here_free[188081] coerce_tmp[2108816])
              (2108826 'move' ret[2108479] ret[2108690])
              gotoReturn _end__strcmp[2109219] _end__strcmp[2109219]
            }
            {
              const-val call_tmp[2108832]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2108834 'move' call_tmp[2108832](2108836 '==' coerce_tmp[2108451] chpl_nodeID[208152]))
              val tmp[2108839]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              if call_tmp[2108832]
              {
                const-val call_tmp[2108843]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2108845 'move' call_tmp[2108843](2108847 '!=' coerce_tmp[2108472] chpl_nodeID[208152]))
                (2108850 'move' tmp[2108839] call_tmp[2108843])
              }
              {
                (2108854 'move' tmp[2108839] 0)
              }
              if tmp[2108839]
              {
                val call_tmp[2108860]:c_ptr(uint(8))[937334] "dead at end of block" "maybe param" "temp"
                const-val coerce_tmp[2108862]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2108864 'move' coerce_tmp[2108862](2108866 'cast' int(64)[13] coerce_tmp[2108472]))
                (2108869 'move' call_tmp[2108860](2108872 call bufferCopyRemote[172784] coerce_tmp[2108862] coerce_tmp[2108458] coerce_tmp[2108465]))
                val ret[2108881]:int(64)[13] "dead after last mention" "RVV" "temp"
                val tmp[2108883]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val call_tmp[2108885]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2108887 'move' call_tmp[2108885](2108889 '<' coerce_tmp[2108444] coerce_tmp[2108465]))
                if call_tmp[2108885]
                {
                  (2108894 'move' tmp[2108883] coerce_tmp[2108444])
                }
                {
                  (2108898 'move' tmp[2108883] coerce_tmp[2108465])
                }
                const-val coerce_tmp[2108907]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2108909 'move' coerce_tmp[2108907](2108911 'cast' c_void_ptr[149] coerce_tmp[2108437]))
                const-val coerce_tmp[2108914]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2108916 'move' coerce_tmp[2108914](2108918 'cast' c_void_ptr[149] call_tmp[2108860]))
                const-val call_tmp[2108921]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2108923 'move' call_tmp[2108921](2108925 '<' tmp[2108883] 0))
                if call_tmp[2108921]
                {
                  (2108931 call safeCastCheckHalt[210127] "casting int(64) less than 0 to uint(64)")
                }
                const-val call_tmp[2108934]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
                (2108936 'move' call_tmp[2108934](2108938 'cast' uint(64)[115] tmp[2108883]))
                const-val call_tmp[2108941]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (2108943 'move' call_tmp[2108941](2108946 call memcmp[1206373] coerce_tmp[2108907] coerce_tmp[2108914] call_tmp[2108934]))
                const-val call_tmp[2108950]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (2108952 'move' call_tmp[2108950](2108954 'cast' int(64)[13] call_tmp[2108941]))
                const-val call_tmp[2108962]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2108964 'move' call_tmp[2108962](2108966 '==' call_tmp[2108950] 0))
                if call_tmp[2108962]
                {
                  const-val call_tmp[2108971]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2108973 'move' call_tmp[2108971](2108975 '<' tmp[2108883] coerce_tmp[2108444]))
                  if call_tmp[2108971]
                  {
                    (2108980 'move' ret[2108881] 1)
                    gotoReturn _end__strcmp_local[2109005] _end__strcmp_local[2109005]
                  }
                  const-val call_tmp[2108986]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2108988 'move' call_tmp[2108986](2108990 '<' tmp[2108883] coerce_tmp[2108465]))
                  if call_tmp[2108986]
                  {
                    (2108995 'move' ret[2108881] -1)
                    gotoReturn _end__strcmp_local[2109005] _end__strcmp_local[2109005]
                  }
                }
                (2109002 'move' ret[2108881] call_tmp[2108950])
                label _end__strcmp_local[2109005]
                const-val coerce_tmp[2109007]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (2109009 'move' coerce_tmp[2109007](2109011 'cast' c_void_ptr[149] call_tmp[2108860]))
                (2109015 call chpl_here_free[188081] coerce_tmp[2109007])
                (2109017 'move' ret[2108479] ret[2108881])
                gotoReturn _end__strcmp[2109219] _end__strcmp[2109219]
              }
              {
                val call_tmp[2109023]:c_ptr(uint(8))[937334] "dead at end of block" "maybe param" "temp"
                const-val coerce_tmp[2109025]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2109027 'move' coerce_tmp[2109025](2109029 'cast' int(64)[13] coerce_tmp[2108451]))
                (2109032 'move' call_tmp[2109023](2109035 call bufferCopyRemote[172784] coerce_tmp[2109025] coerce_tmp[2108437] coerce_tmp[2108444]))
                val call_tmp[2109044]:c_ptr(uint(8))[937334] "dead at end of block" "maybe param" "temp"
                const-val coerce_tmp[2109046]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2109048 'move' coerce_tmp[2109046](2109050 'cast' int(64)[13] coerce_tmp[2108472]))
                (2109053 'move' call_tmp[2109044](2109056 call bufferCopyRemote[172784] coerce_tmp[2109046] coerce_tmp[2108458] coerce_tmp[2108465]))
                val ret[2109065]:int(64)[13] "dead after last mention" "RVV" "temp"
                val tmp[2109067]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val call_tmp[2109069]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2109071 'move' call_tmp[2109069](2109073 '<' coerce_tmp[2108444] coerce_tmp[2108465]))
                if call_tmp[2109069]
                {
                  (2109078 'move' tmp[2109067] coerce_tmp[2108444])
                }
                {
                  (2109082 'move' tmp[2109067] coerce_tmp[2108465])
                }
                const-val coerce_tmp[2109091]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2109093 'move' coerce_tmp[2109091](2109095 'cast' c_void_ptr[149] call_tmp[2109023]))
                const-val coerce_tmp[2109098]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2109100 'move' coerce_tmp[2109098](2109102 'cast' c_void_ptr[149] call_tmp[2109044]))
                const-val call_tmp[2109105]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2109107 'move' call_tmp[2109105](2109109 '<' tmp[2109067] 0))
                if call_tmp[2109105]
                {
                  (2109115 call safeCastCheckHalt[210127] "casting int(64) less than 0 to uint(64)")
                }
                const-val call_tmp[2109118]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
                (2109120 'move' call_tmp[2109118](2109122 'cast' uint(64)[115] tmp[2109067]))
                const-val call_tmp[2109125]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (2109127 'move' call_tmp[2109125](2109130 call memcmp[1206373] coerce_tmp[2109091] coerce_tmp[2109098] call_tmp[2109118]))
                const-val call_tmp[2109134]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (2109136 'move' call_tmp[2109134](2109138 'cast' int(64)[13] call_tmp[2109125]))
                const-val call_tmp[2109146]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2109148 'move' call_tmp[2109146](2109150 '==' call_tmp[2109134] 0))
                if call_tmp[2109146]
                {
                  const-val call_tmp[2109155]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2109157 'move' call_tmp[2109155](2109159 '<' tmp[2109067] coerce_tmp[2108444]))
                  if call_tmp[2109155]
                  {
                    (2109164 'move' ret[2109065] 1)
                    gotoReturn _end__strcmp_local[2109189] _end__strcmp_local[2109189]
                  }
                  const-val call_tmp[2109170]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2109172 'move' call_tmp[2109170](2109174 '<' tmp[2109067] coerce_tmp[2108465]))
                  if call_tmp[2109170]
                  {
                    (2109179 'move' ret[2109065] -1)
                    gotoReturn _end__strcmp_local[2109189] _end__strcmp_local[2109189]
                  }
                }
                (2109186 'move' ret[2109065] call_tmp[2109134])
                label _end__strcmp_local[2109189]
                const-val coerce_tmp[2109191]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (2109193 'move' coerce_tmp[2109191](2109195 'cast' c_void_ptr[149] call_tmp[2109023]))
                (2109199 call chpl_here_free[188081] coerce_tmp[2109191])
                const-val coerce_tmp[2109201]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (2109203 'move' coerce_tmp[2109201](2109205 'cast' c_void_ptr[149] call_tmp[2109044]))
                (2109209 call chpl_here_free[188081] coerce_tmp[2109201])
                (2109211 'move' ret[2108479] ret[2109065])
                gotoReturn _end__strcmp[2109219] _end__strcmp[2109219]
              }
            }
          }
          label _end__strcmp[2109219]
          const-val call_tmp[2109221]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2109223 'move' call_tmp[2109221](2109225 '>' ret[2108479] 0))
          (1918129 'move' tmp[1918080] call_tmp[2109221])
          ref i_x[2080290]:string[26] "temp"
          (2080294 'move' i_x[2080290](2080292 'set reference' call_tmp[1918100]))
          wide-ref tmp[2382555]:string[26] "temp"
          (2382558 'move' tmp[2382555] i_x[2080290])
          (2080298 call deinit[30831] tmp[2382555])
        }
        if tmp[1918080]
        {
          const-val call_tmp[1918143]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val _virtual_method_tmp_[1918145]:int(32)[95] "temp"
          (1918147 'move' _virtual_method_tmp_[1918145](1918149 'getcid' coerce_tmp[2290699]))
          val ret_tmp[1918151]:string[26] "temp"
          ref tmp[2378015]:string[26] "temp"
          (2378019 'move' tmp[2378015](2378018 'set reference' ret_tmp[1918151]))
          wide-ref tmp[2378022]:string[26] "temp"
          (2378025 'move' tmp[2378022] tmp[2378015])
          (1918153 'virtual method call' message[167929] _virtual_method_tmp_[1918145] coerce_tmp[2290699] tmp[2378022])
          (1918158 'move' call_tmp[1918143] ret_tmp[1918151])
          wide-ref tmp[2378028]:string[26] "temp"
          (2378032 'move' tmp[2378028](2378030 'set reference' maxMsg[169046]))
          (1918162 call =[38269] tmp[2378028] call_tmp[1918143])
          ref i_x[2080302]:string[26] "temp"
          (2080306 'move' i_x[2080302](2080304 'set reference' call_tmp[1918143]))
          wide-ref tmp[2382561]:string[26] "temp"
          (2382564 'move' tmp[2382561] i_x[2080302])
          (2080310 call deinit[30831] tmp[2382561])
        }
        ref i_lhs[2122810]:int(64)[13] "temp"
        (2122814 'move' i_lhs[2122810](2122812 'set reference' n[169035]))
        (2122822 '+=' i_lhs[2122810] 1)
      }
      {
        (1917773 '=' i[1917701] tmp_x0[2318704])
      }
      {
        (1917784 '<=' i[1917701] _ic__F1_high[2306020])
      }
      {
        (1917790 '+=' i[1917701] 1)
      }
    }
    label _endchpl_direct_param_stride_range_iter[1917827]
    label _endchpl_direct_counted_range_iter_helper[1917835]
    label _endchpl_direct_counted_range_iter[1858720]
    label _endthese[1858725]
    const-val _ic__F0_this[2299445]:__wide_TaskErrors[2337857] "temp"
    (2123272 'move' _ic__F0_this[2299445] this[169682])
    const-val this[1859277]:__wide_TaskErrors[2337857] "temp"
    (1859282 'move' this[1859277] this[169682])
    const-val coerce_tmp[1858989]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val tmp[2377082]:int(64)[13] "temp"
    (1858991 'move' tmp[2377082](2323808 '.v' this[1859277] nErrors[168317]))
    (2377085 'move' coerce_tmp[1858989] tmp[2377082])
    const-val call_tmp[2062495]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2062497 'move' call_tmp[2062495](2062499 '<' coerce_tmp[1858989] 0))
    if call_tmp[2062495]
    {
      (1918265 call boundsCheckHalt[210079] "With a negative count, the range must have a last index.")
    }
    val tmp_x0[2318812]:int(64)[13] "temp"
    val tmp_x1[2318814]:int(64)[13] "temp"
    const-val call_tmp[2065817]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2065819 'move' call_tmp[2065817](2065821 '==' coerce_tmp[1858989] 0))
    if call_tmp[2065817]
    {
      const-val call_tmp[2063345]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2063347 'move' call_tmp[2063345](2063349 'cast' uint(64)[115] 0))
      const-val call_tmp[2128516]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2128518 'move' call_tmp[2128516](2128520 '-' call_tmp[2063345] 1))
      const-val call_tmp[2128896]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2128898 'move' call_tmp[2128896](2128900 'cast' int(64)[13] call_tmp[2128516]))
      (2318820 'move' tmp_x0[2318812] 0)
      (2318825 'move' tmp_x1[2318814] call_tmp[2128896])
    }
    {
      const-val call_tmp[2090924]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2090926 'move' call_tmp[2090924](2090928 '-' coerce_tmp[1858989] 1))
      const-val call_tmp[2072617]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2072619 'move' call_tmp[2072617](2072621 '+' 0 call_tmp[2090924]))
      (2318830 'move' tmp_x0[2318812] 0)
      (2318835 'move' tmp_x1[2318814] call_tmp[2072617])
    }
    (1918374 'noop')
    (1918394 'noop')
    (1918413 'noop')
    const-val _ic__F1_high[2306039]:int(64)[13] "temp"
    (2133523 'move' _ic__F1_high[2306039] tmp_x1[2318814])
    val i[1918442]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1918446 'move' i[1918442] 0)
    (1918498 call chpl_checkIfRangeIterWillOverflow[1095987] tmp_x0[2318812] tmp_x1[2318814] 1 tmp_x0[2318812] tmp_x1[2318814] 1)
    const-val this[1918607]:__wide_TaskErrors[2337857] "temp"
    (1918609 'move' this[1918607] _ic__F0_this[2299445])
    val coerce_tmp[1918619]:c_ptr(owned Error?)[1235526] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2378035]:c_ptr(owned Error?)[1235526] "temp"
    (1918621 'move' tmp[2378035](2323816 '.v' this[1918607] errorsArray[168328]))
    (2378038 'move' coerce_tmp[1918619] tmp[2378035])
    CForLoop[1918505] hazard
    {
      ref call_tmp[2135293]:owned Error?[966324] "dead after last mention" "maybe param" "temp"
      (2135295 'move' call_tmp[2135293](2135297 'array_get' coerce_tmp[1918619] i[1918442]))
      val coerce_tmp[1918633]:__wide_Error[2337829] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1918635 'move' coerce_tmp[1918633](1918638 call borrow[1235739] call_tmp[2135293]))
      val coerce_tmp[1918640]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1918642 'move' coerce_tmp[1918640](1918644 'cast' object[22] coerce_tmp[1918633]))
      const-val call_tmp[2060146]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2380923]:__wide_object[2337724] "temp"
      (2380926 'move' tmp[2380923] nil[44])
      (2060148 'move' call_tmp[2060146](2060150 'ptr_neq' coerce_tmp[1918640] tmp[2380923]))
      if call_tmp[2060146]
      {
        const-val this[1918666]:__wide_TaskErrors[2337857] "temp"
        (1918668 'move' this[1918666] _ic__F0_this[2299445])
        val coerce_tmp[1918678]:c_ptr(owned Error?)[1235526] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        val tmp[2378041]:c_ptr(owned Error?)[1235526] "temp"
        (1918680 'move' tmp[2378041](2323822 '.v' this[1918666] errorsArray[168328]))
        (2378044 'move' coerce_tmp[1918678] tmp[2378041])
        ref call_tmp[2135303]:owned Error?[966324] "dead after last mention" "maybe param" "temp"
        (2135305 'move' call_tmp[2135303](2135307 'array_get' coerce_tmp[1918678] i[1918442]))
        val coerce_tmp[2290709]:__wide_Error[2337829] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2290711 'move' coerce_tmp[2290709](2290713 '.v' call_tmp[2135303] chpl_p[966319]))
        val coerce_tmp[2290716]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2290718 'move' coerce_tmp[2290716](2290720 'cast' object[22] coerce_tmp[2290709]))
        const-val call_tmp[2290723]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        val tmp[2397984]:__wide_object[2337724] "temp"
        (2397987 'move' tmp[2397984] nil[44])
        (2290725 'move' call_tmp[2290723](2290727 'ptr_eq' coerce_tmp[2290716] tmp[2397984]))
        if call_tmp[2290723]
        {
          (2290733 call nilCheckHalt[210063] "argument to ! is nil")
        }
        val coerce_tmp[2290736]:__wide_Error[2337829] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2290738 'move' coerce_tmp[2290736](2290740 '.v' call_tmp[2135303] chpl_p[966319]))
        const-val call_tmp[1918716]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        val _virtual_method_tmp_[1918718]:int(32)[95] "temp"
        (1918720 'move' _virtual_method_tmp_[1918718](1918722 'getcid' coerce_tmp[2290736]))
        val ret_tmp[1918724]:string[26] "temp"
        ref tmp[2378047]:string[26] "temp"
        (2378051 'move' tmp[2378047](2378050 'set reference' ret_tmp[1918724]))
        wide-ref tmp[2378054]:string[26] "temp"
        (2378057 'move' tmp[2378054] tmp[2378047])
        (1918726 'virtual method call' message[167929] _virtual_method_tmp_[1918718] coerce_tmp[2290736] tmp[2378054])
        (1918731 'move' call_tmp[1918716] ret_tmp[1918724])
        const-val call_tmp[1918734]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1918736 'move' call_tmp[1918734](1918739 call ==[38820] call_tmp[1918716] minMsg[169041]))
        if call_tmp[1918734]
        {
          val coerce_tmp[1918751]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1918753 'move' coerce_tmp[1918751](1918755 'cast' object[22] first[169053]))
          const-val call_tmp[2058856]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val tmp[2380611]:__wide_object[2337724] "temp"
          (2380614 'move' tmp[2380611] nil[44])
          (2058858 'move' call_tmp[2058856](2058860 'ptr_eq' coerce_tmp[1918751] tmp[2380611]))
          if call_tmp[2058856]
          {
            (2224439 '=' first[169053] coerce_tmp[2290736])
          }
          (2224451 '=' last[169060] coerce_tmp[2290736])
        }
        ref i_x[2080314]:string[26] "temp"
        (2080318 'move' i_x[2080314](2080316 'set reference' call_tmp[1918716]))
        wide-ref tmp[2382567]:string[26] "temp"
        (2382570 'move' tmp[2382567] i_x[2080314])
        (2080322 call deinit[30831] tmp[2382567])
      }
      {
        (1918514 '=' i[1918442] tmp_x0[2318812])
      }
      {
        (1918525 '<=' i[1918442] _ic__F1_high[2306039])
      }
      {
        (1918531 '+=' i[1918442] 1)
      }
    }
    label _endchpl_direct_param_stride_range_iter[1918568]
    label _endchpl_direct_counted_range_iter_helper[1918576]
    label _endchpl_direct_counted_range_iter[1859165]
    label _endthese[1859170]
    val coerce_tmp[2105147]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2384482]:c_ptr(uint(8))[937334] "temp"
    (2105149 'move' tmp[2384482](2105151 '.v' minMsg[169041] buff[30737]))
    (2384485 'move' coerce_tmp[2105147] tmp[2384482])
    const-val coerce_tmp[2105154]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2384488]:int(64)[13] "temp"
    (2105156 'move' tmp[2384488](2105158 '.v' minMsg[169041] buffLen[30719]))
    (2384491 'move' coerce_tmp[2105154] tmp[2384488])
    const-val coerce_tmp[2105161]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2384494]:int(32)[95] "temp"
    (2105163 'move' tmp[2384494](2105165 '.v' minMsg[169041] locale_id[30754]))
    (2384497 'move' coerce_tmp[2105161] tmp[2384494])
    val coerce_tmp[2105168]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2384500]:c_ptr(uint(8))[937334] "temp"
    (2105170 'move' tmp[2384500](2105172 '.v' maxMsg[169046] buff[30737]))
    (2384503 'move' coerce_tmp[2105168] tmp[2384500])
    const-val coerce_tmp[2105175]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2384506]:int(64)[13] "temp"
    (2105177 'move' tmp[2384506](2105179 '.v' maxMsg[169046] buffLen[30719]))
    (2384509 'move' coerce_tmp[2105175] tmp[2384506])
    const-val coerce_tmp[2105182]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2384512]:int(32)[95] "temp"
    (2105184 'move' tmp[2384512](2105186 '.v' maxMsg[169046] locale_id[30754]))
    (2384515 'move' coerce_tmp[2105182] tmp[2384512])
    val ret[2105189]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2105191]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2105193 'move' call_tmp[2105191](2105195 '==' coerce_tmp[2105161] chpl_nodeID[208152]))
    val tmp[2105198]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2105191]
    {
      const-val call_tmp[2105202]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2105204 'move' call_tmp[2105202](2105206 '==' coerce_tmp[2105182] chpl_nodeID[208152]))
      (2105209 'move' tmp[2105198] call_tmp[2105202])
    }
    {
      (2105213 'move' tmp[2105198] 0)
    }
    if tmp[2105198]
    {
      val ret[2105219]:int(64)[13] "dead after last mention" "RVV" "temp"
      val tmp[2105221]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val call_tmp[2105223]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2105225 'move' call_tmp[2105223](2105227 '<' coerce_tmp[2105154] coerce_tmp[2105175]))
      if call_tmp[2105223]
      {
        (2105232 'move' tmp[2105221] coerce_tmp[2105154])
      }
      {
        (2105236 'move' tmp[2105221] coerce_tmp[2105175])
      }
      const-val coerce_tmp[2105245]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2105247 'move' coerce_tmp[2105245](2105249 'cast' c_void_ptr[149] coerce_tmp[2105147]))
      const-val coerce_tmp[2105252]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2105254 'move' coerce_tmp[2105252](2105256 'cast' c_void_ptr[149] coerce_tmp[2105168]))
      const-val call_tmp[2105259]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2105261 'move' call_tmp[2105259](2105263 '<' tmp[2105221] 0))
      if call_tmp[2105259]
      {
        (2105269 call safeCastCheckHalt[210127] "casting int(64) less than 0 to uint(64)")
      }
      const-val call_tmp[2105272]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2105274 'move' call_tmp[2105272](2105276 'cast' uint(64)[115] tmp[2105221]))
      const-val call_tmp[2105279]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2105281 'move' call_tmp[2105279](2105284 call memcmp[1206373] coerce_tmp[2105245] coerce_tmp[2105252] call_tmp[2105272]))
      const-val call_tmp[2105288]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2105290 'move' call_tmp[2105288](2105292 'cast' int(64)[13] call_tmp[2105279]))
      const-val call_tmp[2105300]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2105302 'move' call_tmp[2105300](2105304 '==' call_tmp[2105288] 0))
      if call_tmp[2105300]
      {
        const-val call_tmp[2105309]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2105311 'move' call_tmp[2105309](2105313 '<' tmp[2105221] coerce_tmp[2105154]))
        if call_tmp[2105309]
        {
          (2105318 'move' ret[2105219] 1)
          gotoReturn _end__strcmp_local[2105343] _end__strcmp_local[2105343]
        }
        const-val call_tmp[2105324]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2105326 'move' call_tmp[2105324](2105328 '<' tmp[2105221] coerce_tmp[2105175]))
        if call_tmp[2105324]
        {
          (2105333 'move' ret[2105219] -1)
          gotoReturn _end__strcmp_local[2105343] _end__strcmp_local[2105343]
        }
      }
      (2105340 'move' ret[2105219] call_tmp[2105288])
      label _end__strcmp_local[2105343]
      (2105345 'move' ret[2105189] ret[2105219])
      gotoReturn _end__strcmp[2105929] _end__strcmp[2105929]
    }
    {
      const-val call_tmp[2105351]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2105353 'move' call_tmp[2105351](2105355 '!=' coerce_tmp[2105161] chpl_nodeID[208152]))
      val tmp[2105358]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if call_tmp[2105351]
      {
        const-val call_tmp[2105362]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2105364 'move' call_tmp[2105362](2105366 '==' coerce_tmp[2105182] chpl_nodeID[208152]))
        (2105369 'move' tmp[2105358] call_tmp[2105362])
      }
      {
        (2105373 'move' tmp[2105358] 0)
      }
      if tmp[2105358]
      {
        val call_tmp[2105379]:c_ptr(uint(8))[937334] "dead at end of block" "maybe param" "temp"
        const-val coerce_tmp[2105381]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (2105383 'move' coerce_tmp[2105381](2105385 'cast' int(64)[13] coerce_tmp[2105161]))
        (2105388 'move' call_tmp[2105379](2105391 call bufferCopyRemote[172784] coerce_tmp[2105381] coerce_tmp[2105147] coerce_tmp[2105154]))
        val ret[2105400]:int(64)[13] "dead after last mention" "RVV" "temp"
        val tmp[2105402]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        const-val call_tmp[2105404]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2105406 'move' call_tmp[2105404](2105408 '<' coerce_tmp[2105154] coerce_tmp[2105175]))
        if call_tmp[2105404]
        {
          (2105413 'move' tmp[2105402] coerce_tmp[2105154])
        }
        {
          (2105417 'move' tmp[2105402] coerce_tmp[2105175])
        }
        const-val coerce_tmp[2105426]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (2105428 'move' coerce_tmp[2105426](2105430 'cast' c_void_ptr[149] call_tmp[2105379]))
        const-val coerce_tmp[2105433]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (2105435 'move' coerce_tmp[2105433](2105437 'cast' c_void_ptr[149] coerce_tmp[2105168]))
        const-val call_tmp[2105440]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2105442 'move' call_tmp[2105440](2105444 '<' tmp[2105402] 0))
        if call_tmp[2105440]
        {
          (2105450 call safeCastCheckHalt[210127] "casting int(64) less than 0 to uint(64)")
        }
        const-val call_tmp[2105453]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (2105455 'move' call_tmp[2105453](2105457 'cast' uint(64)[115] tmp[2105402]))
        const-val call_tmp[2105460]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
        (2105462 'move' call_tmp[2105460](2105465 call memcmp[1206373] coerce_tmp[2105426] coerce_tmp[2105433] call_tmp[2105453]))
        const-val call_tmp[2105469]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2105471 'move' call_tmp[2105469](2105473 'cast' int(64)[13] call_tmp[2105460]))
        const-val call_tmp[2105481]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2105483 'move' call_tmp[2105481](2105485 '==' call_tmp[2105469] 0))
        if call_tmp[2105481]
        {
          const-val call_tmp[2105490]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2105492 'move' call_tmp[2105490](2105494 '<' tmp[2105402] coerce_tmp[2105154]))
          if call_tmp[2105490]
          {
            (2105499 'move' ret[2105400] 1)
            gotoReturn _end__strcmp_local[2105524] _end__strcmp_local[2105524]
          }
          const-val call_tmp[2105505]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2105507 'move' call_tmp[2105505](2105509 '<' tmp[2105402] coerce_tmp[2105175]))
          if call_tmp[2105505]
          {
            (2105514 'move' ret[2105400] -1)
            gotoReturn _end__strcmp_local[2105524] _end__strcmp_local[2105524]
          }
        }
        (2105521 'move' ret[2105400] call_tmp[2105469])
        label _end__strcmp_local[2105524]
        const-val coerce_tmp[2105526]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2105528 'move' coerce_tmp[2105526](2105530 'cast' c_void_ptr[149] call_tmp[2105379]))
        (2105534 call chpl_here_free[188081] coerce_tmp[2105526])
        (2105536 'move' ret[2105189] ret[2105400])
        gotoReturn _end__strcmp[2105929] _end__strcmp[2105929]
      }
      {
        const-val call_tmp[2105542]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2105544 'move' call_tmp[2105542](2105546 '==' coerce_tmp[2105161] chpl_nodeID[208152]))
        val tmp[2105549]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        if call_tmp[2105542]
        {
          const-val call_tmp[2105553]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2105555 'move' call_tmp[2105553](2105557 '!=' coerce_tmp[2105182] chpl_nodeID[208152]))
          (2105560 'move' tmp[2105549] call_tmp[2105553])
        }
        {
          (2105564 'move' tmp[2105549] 0)
        }
        if tmp[2105549]
        {
          val call_tmp[2105570]:c_ptr(uint(8))[937334] "dead at end of block" "maybe param" "temp"
          const-val coerce_tmp[2105572]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2105574 'move' coerce_tmp[2105572](2105576 'cast' int(64)[13] coerce_tmp[2105182]))
          (2105579 'move' call_tmp[2105570](2105582 call bufferCopyRemote[172784] coerce_tmp[2105572] coerce_tmp[2105168] coerce_tmp[2105175]))
          val ret[2105591]:int(64)[13] "dead after last mention" "RVV" "temp"
          val tmp[2105593]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
          const-val call_tmp[2105595]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2105597 'move' call_tmp[2105595](2105599 '<' coerce_tmp[2105154] coerce_tmp[2105175]))
          if call_tmp[2105595]
          {
            (2105604 'move' tmp[2105593] coerce_tmp[2105154])
          }
          {
            (2105608 'move' tmp[2105593] coerce_tmp[2105175])
          }
          const-val coerce_tmp[2105617]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2105619 'move' coerce_tmp[2105617](2105621 'cast' c_void_ptr[149] coerce_tmp[2105147]))
          const-val coerce_tmp[2105624]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2105626 'move' coerce_tmp[2105624](2105628 'cast' c_void_ptr[149] call_tmp[2105570]))
          const-val call_tmp[2105631]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2105633 'move' call_tmp[2105631](2105635 '<' tmp[2105593] 0))
          if call_tmp[2105631]
          {
            (2105641 call safeCastCheckHalt[210127] "casting int(64) less than 0 to uint(64)")
          }
          const-val call_tmp[2105644]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2105646 'move' call_tmp[2105644](2105648 'cast' uint(64)[115] tmp[2105593]))
          const-val call_tmp[2105651]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
          (2105653 'move' call_tmp[2105651](2105656 call memcmp[1206373] coerce_tmp[2105617] coerce_tmp[2105624] call_tmp[2105644]))
          const-val call_tmp[2105660]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2105662 'move' call_tmp[2105660](2105664 'cast' int(64)[13] call_tmp[2105651]))
          const-val call_tmp[2105672]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2105674 'move' call_tmp[2105672](2105676 '==' call_tmp[2105660] 0))
          if call_tmp[2105672]
          {
            const-val call_tmp[2105681]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2105683 'move' call_tmp[2105681](2105685 '<' tmp[2105593] coerce_tmp[2105154]))
            if call_tmp[2105681]
            {
              (2105690 'move' ret[2105591] 1)
              gotoReturn _end__strcmp_local[2105715] _end__strcmp_local[2105715]
            }
            const-val call_tmp[2105696]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2105698 'move' call_tmp[2105696](2105700 '<' tmp[2105593] coerce_tmp[2105175]))
            if call_tmp[2105696]
            {
              (2105705 'move' ret[2105591] -1)
              gotoReturn _end__strcmp_local[2105715] _end__strcmp_local[2105715]
            }
          }
          (2105712 'move' ret[2105591] call_tmp[2105660])
          label _end__strcmp_local[2105715]
          const-val coerce_tmp[2105717]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2105719 'move' coerce_tmp[2105717](2105721 'cast' c_void_ptr[149] call_tmp[2105570]))
          (2105725 call chpl_here_free[188081] coerce_tmp[2105717])
          (2105727 'move' ret[2105189] ret[2105591])
          gotoReturn _end__strcmp[2105929] _end__strcmp[2105929]
        }
        {
          val call_tmp[2105733]:c_ptr(uint(8))[937334] "dead at end of block" "maybe param" "temp"
          const-val coerce_tmp[2105735]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2105737 'move' coerce_tmp[2105735](2105739 'cast' int(64)[13] coerce_tmp[2105161]))
          (2105742 'move' call_tmp[2105733](2105745 call bufferCopyRemote[172784] coerce_tmp[2105735] coerce_tmp[2105147] coerce_tmp[2105154]))
          val call_tmp[2105754]:c_ptr(uint(8))[937334] "dead at end of block" "maybe param" "temp"
          const-val coerce_tmp[2105756]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2105758 'move' coerce_tmp[2105756](2105760 'cast' int(64)[13] coerce_tmp[2105182]))
          (2105763 'move' call_tmp[2105754](2105766 call bufferCopyRemote[172784] coerce_tmp[2105756] coerce_tmp[2105168] coerce_tmp[2105175]))
          val ret[2105775]:int(64)[13] "dead after last mention" "RVV" "temp"
          val tmp[2105777]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
          const-val call_tmp[2105779]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2105781 'move' call_tmp[2105779](2105783 '<' coerce_tmp[2105154] coerce_tmp[2105175]))
          if call_tmp[2105779]
          {
            (2105788 'move' tmp[2105777] coerce_tmp[2105154])
          }
          {
            (2105792 'move' tmp[2105777] coerce_tmp[2105175])
          }
          const-val coerce_tmp[2105801]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2105803 'move' coerce_tmp[2105801](2105805 'cast' c_void_ptr[149] call_tmp[2105733]))
          const-val coerce_tmp[2105808]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2105810 'move' coerce_tmp[2105808](2105812 'cast' c_void_ptr[149] call_tmp[2105754]))
          const-val call_tmp[2105815]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2105817 'move' call_tmp[2105815](2105819 '<' tmp[2105777] 0))
          if call_tmp[2105815]
          {
            (2105825 call safeCastCheckHalt[210127] "casting int(64) less than 0 to uint(64)")
          }
          const-val call_tmp[2105828]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2105830 'move' call_tmp[2105828](2105832 'cast' uint(64)[115] tmp[2105777]))
          const-val call_tmp[2105835]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
          (2105837 'move' call_tmp[2105835](2105840 call memcmp[1206373] coerce_tmp[2105801] coerce_tmp[2105808] call_tmp[2105828]))
          const-val call_tmp[2105844]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2105846 'move' call_tmp[2105844](2105848 'cast' int(64)[13] call_tmp[2105835]))
          const-val call_tmp[2105856]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2105858 'move' call_tmp[2105856](2105860 '==' call_tmp[2105844] 0))
          if call_tmp[2105856]
          {
            const-val call_tmp[2105865]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2105867 'move' call_tmp[2105865](2105869 '<' tmp[2105777] coerce_tmp[2105154]))
            if call_tmp[2105865]
            {
              (2105874 'move' ret[2105775] 1)
              gotoReturn _end__strcmp_local[2105899] _end__strcmp_local[2105899]
            }
            const-val call_tmp[2105880]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2105882 'move' call_tmp[2105880](2105884 '<' tmp[2105777] coerce_tmp[2105175]))
            if call_tmp[2105880]
            {
              (2105889 'move' ret[2105775] -1)
              gotoReturn _end__strcmp_local[2105899] _end__strcmp_local[2105899]
            }
          }
          (2105896 'move' ret[2105775] call_tmp[2105844])
          label _end__strcmp_local[2105899]
          const-val coerce_tmp[2105901]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2105903 'move' coerce_tmp[2105901](2105905 'cast' c_void_ptr[149] call_tmp[2105733]))
          (2105909 call chpl_here_free[188081] coerce_tmp[2105901])
          const-val coerce_tmp[2105911]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2105913 'move' coerce_tmp[2105911](2105915 'cast' c_void_ptr[149] call_tmp[2105754]))
          (2105919 call chpl_here_free[188081] coerce_tmp[2105911])
          (2105921 'move' ret[2105189] ret[2105775])
          gotoReturn _end__strcmp[2105929] _end__strcmp[2105929]
        }
      }
    }
    label _end__strcmp[2105929]
    const-val call_tmp[2105931]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2105933 'move' call_tmp[2105931](2105935 '==' ret[2105189] 0))
    const-val call_tmp[2105938]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2105940 'move' call_tmp[2105938](2105942 '!' call_tmp[2105931]))
    if call_tmp[2105938]
    {
      const-val _ic__F0_this[2299468]:__wide_TaskErrors[2337857] "temp"
      (2123324 'move' _ic__F0_this[2299468] this[169682])
      const-val this[1859570]:__wide_TaskErrors[2337857] "temp"
      (1859575 'move' this[1859570] this[169682])
      const-val coerce_tmp[1859314]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      val tmp[2377088]:int(64)[13] "temp"
      (1859316 'move' tmp[2377088](2323836 '.v' this[1859570] nErrors[168317]))
      (2377091 'move' coerce_tmp[1859314] tmp[2377088])
      const-val call_tmp[2062505]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2062507 'move' call_tmp[2062505](2062509 '<' coerce_tmp[1859314] 0))
      if call_tmp[2062505]
      {
        (1918886 call boundsCheckHalt[210079] "With a negative count, the range must have a last index.")
      }
      val tmp_x0[2318920]:int(64)[13] "temp"
      val tmp_x1[2318922]:int(64)[13] "temp"
      const-val call_tmp[2065832]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2065834 'move' call_tmp[2065832](2065836 '==' coerce_tmp[1859314] 0))
      if call_tmp[2065832]
      {
        const-val call_tmp[2063355]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (2063357 'move' call_tmp[2063355](2063359 'cast' uint(64)[115] 0))
        const-val call_tmp[2128526]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (2128528 'move' call_tmp[2128526](2128530 '-' call_tmp[2063355] 1))
        const-val call_tmp[2128906]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2128908 'move' call_tmp[2128906](2128910 'cast' int(64)[13] call_tmp[2128526]))
        (2318928 'move' tmp_x0[2318920] 0)
        (2318933 'move' tmp_x1[2318922] call_tmp[2128906])
      }
      {
        const-val call_tmp[2090934]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2090936 'move' call_tmp[2090934](2090938 '-' coerce_tmp[1859314] 1))
        const-val call_tmp[2072627]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2072629 'move' call_tmp[2072627](2072631 '+' 0 call_tmp[2090934]))
        (2318938 'move' tmp_x0[2318920] 0)
        (2318943 'move' tmp_x1[2318922] call_tmp[2072627])
      }
      (1918995 'noop')
      (1919015 'noop')
      (1919034 'noop')
      const-val _ic__F1_high[2306058]:int(64)[13] "temp"
      (2133586 'move' _ic__F1_high[2306058] tmp_x1[2318922])
      val i[1919063]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1919067 'move' i[1919063] 0)
      (1919119 call chpl_checkIfRangeIterWillOverflow[1095987] tmp_x0[2318920] tmp_x1[2318922] 1 tmp_x0[2318920] tmp_x1[2318922] 1)
      const-val this[1919228]:__wide_TaskErrors[2337857] "temp"
      (1919230 'move' this[1919228] _ic__F0_this[2299468])
      val coerce_tmp[1919240]:c_ptr(owned Error?)[1235526] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      val tmp[2378060]:c_ptr(owned Error?)[1235526] "temp"
      (1919242 'move' tmp[2378060](2323844 '.v' this[1919228] errorsArray[168328]))
      (2378063 'move' coerce_tmp[1919240] tmp[2378060])
      CForLoop[1919126] hazard
      {
        ref call_tmp[2135313]:owned Error?[966324] "dead after last mention" "maybe param" "temp"
        (2135315 'move' call_tmp[2135313](2135317 'array_get' coerce_tmp[1919240] i[1919063]))
        val coerce_tmp[1919254]:__wide_Error[2337829] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1919256 'move' coerce_tmp[1919254](1919259 call borrow[1235739] call_tmp[2135313]))
        val coerce_tmp[1919261]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1919263 'move' coerce_tmp[1919261](1919265 'cast' object[22] coerce_tmp[1919254]))
        const-val call_tmp[2060156]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        val tmp[2380929]:__wide_object[2337724] "temp"
        (2380932 'move' tmp[2380929] nil[44])
        (2060158 'move' call_tmp[2060156](2060160 'ptr_neq' coerce_tmp[1919261] tmp[2380929]))
        if call_tmp[2060156]
        {
          const-val this[1919287]:__wide_TaskErrors[2337857] "temp"
          (1919289 'move' this[1919287] _ic__F0_this[2299468])
          val coerce_tmp[1919299]:c_ptr(owned Error?)[1235526] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2378066]:c_ptr(owned Error?)[1235526] "temp"
          (1919301 'move' tmp[2378066](2323850 '.v' this[1919287] errorsArray[168328]))
          (2378069 'move' coerce_tmp[1919299] tmp[2378066])
          ref call_tmp[2135323]:owned Error?[966324] "dead after last mention" "maybe param" "temp"
          (2135325 'move' call_tmp[2135323](2135327 'array_get' coerce_tmp[1919299] i[1919063]))
          val coerce_tmp[2290746]:__wide_Error[2337829] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2290748 'move' coerce_tmp[2290746](2290750 '.v' call_tmp[2135323] chpl_p[966319]))
          val coerce_tmp[2290753]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2290755 'move' coerce_tmp[2290753](2290757 'cast' object[22] coerce_tmp[2290746]))
          const-val call_tmp[2290760]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val tmp[2397990]:__wide_object[2337724] "temp"
          (2397993 'move' tmp[2397990] nil[44])
          (2290762 'move' call_tmp[2290760](2290764 'ptr_eq' coerce_tmp[2290753] tmp[2397990]))
          if call_tmp[2290760]
          {
            (2290770 call nilCheckHalt[210063] "argument to ! is nil")
          }
          val coerce_tmp[2290773]:__wide_Error[2337829] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2290775 'move' coerce_tmp[2290773](2290777 '.v' call_tmp[2135323] chpl_p[966319]))
          const-val call_tmp[1919337]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val _virtual_method_tmp_[1919339]:int(32)[95] "temp"
          (1919341 'move' _virtual_method_tmp_[1919339](1919343 'getcid' coerce_tmp[2290773]))
          val ret_tmp[1919345]:string[26] "temp"
          ref tmp[2378072]:string[26] "temp"
          (2378076 'move' tmp[2378072](2378075 'set reference' ret_tmp[1919345]))
          wide-ref tmp[2378079]:string[26] "temp"
          (2378082 'move' tmp[2378079] tmp[2378072])
          (1919347 'virtual method call' message[167929] _virtual_method_tmp_[1919339] coerce_tmp[2290773] tmp[2378079])
          (1919352 'move' call_tmp[1919337] ret_tmp[1919345])
          const-val call_tmp[1919355]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1919357 'move' call_tmp[1919355](1919360 call ==[38820] call_tmp[1919337] maxMsg[169046]))
          if call_tmp[1919355]
          {
            (2224463 '=' last[169060] coerce_tmp[2290773])
          }
          ref i_x[2080326]:string[26] "temp"
          (2080330 'move' i_x[2080326](2080328 'set reference' call_tmp[1919337]))
          wide-ref tmp[2382573]:string[26] "temp"
          (2382576 'move' tmp[2382573] i_x[2080326])
          (2080334 call deinit[30831] tmp[2382573])
        }
        {
          (1919135 '=' i[1919063] tmp_x0[2318920])
        }
        {
          (1919146 '<=' i[1919063] _ic__F1_high[2306058])
        }
        {
          (1919152 '+=' i[1919063] 1)
        }
      }
      label _endchpl_direct_param_stride_range_iter[1919189]
      label _endchpl_direct_counted_range_iter_helper[1919197]
      label _endchpl_direct_counted_range_iter[1859490]
      label _endthese[1859495]
    }
    const-val call_tmp[679987]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1789879]:string[26] "temp"
    (169365 call _cast[1063064] n[169035] ret_tmp[1789879])
    (1789882 'move' call_tmp[679987] ret_tmp[1789879])
    const-val call_tmp[679992]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1786715]:string[26] "temp"
    wide-ref tmp[2370801]:string[26] "temp"
    (2370805 'move' tmp[2370801](2370803 'set reference' " errors: "))
    (169384 call +[38342] call_tmp[679987] tmp[2370801] ret_tmp[1786715])
    (1786718 'move' call_tmp[679992] ret_tmp[1786715])
    val ret[169386]:string[26] "dead at end of block" "insert auto destroy"
    (544529 'move' ret[169386] call_tmp[679992])
    val coerce_tmp[1728721]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1728727 'move' coerce_tmp[1728721](1728723 'cast' object[22] first[169053]))
    const-val call_tmp[2059676]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2380677]:__wide_object[2337724] "temp"
    (2380680 'move' tmp[2380677] nil[44])
    (2059678 'move' call_tmp[2059676](2059680 'ptr_neq' coerce_tmp[1728721] tmp[2380677]))
    val tmp[570406]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2059676]
    {
      val coerce_tmp[1728733]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1728739 'move' coerce_tmp[1728733](1728735 'cast' object[22] last[169060]))
      const-val call_tmp[2059686]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2380683]:__wide_object[2337724] "temp"
      (2380686 'move' tmp[2380683] nil[44])
      (2059688 'move' call_tmp[2059686](2059690 'ptr_neq' coerce_tmp[1728733] tmp[2380683]))
      (570421 'move' tmp[570406] call_tmp[2059686])
    }
    {
      (570426 'move' tmp[570406] 0)
    }
    val tmp[570433]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[570406]
    {
      val coerce_tmp[1728745]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1728751 'move' coerce_tmp[1728745](1728747 'cast' object[22] first[169053]))
      val coerce_tmp[1728753]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1728759 'move' coerce_tmp[1728753](1728755 'cast' object[22] last[169060]))
      const-val call_tmp[2059696]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2059698 'move' call_tmp[2059696](2059700 'ptr_neq' coerce_tmp[1728745] coerce_tmp[1728753]))
      (570448 'move' tmp[570433] call_tmp[2059696])
    }
    {
      (570453 'move' tmp[570433] 0)
    }
    if tmp[570433]
    {
      val coerce_tmp[2165237]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2165239 'move' coerce_tmp[2165237](2165241 'cast' object[22] first[169053]))
      const-val call_tmp[2165244]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2386959]:__wide_object[2337724] "temp"
      (2386962 'move' tmp[2386959] nil[44])
      (2165246 'move' call_tmp[2165244](2165248 'ptr_eq' coerce_tmp[2165237] tmp[2386959]))
      if call_tmp[2165244]
      {
        (2165254 call nilCheckHalt[210063] "argument to ! is nil")
      }
      const-val call_tmp[680037]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1788007]:string[26] "temp"
      (169412 call chpl_describe_error[169789] first[169053] ret_tmp[1788007])
      (1788010 'move' call_tmp[680037] ret_tmp[1788007])
      const-val call_tmp[680042]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1786721]:string[26] "temp"
      wide-ref tmp[2370808]:string[26] "temp"
      (2370812 'move' tmp[2370808](2370810 'set reference' " ... "))
      (169430 call +[38342] call_tmp[680037] tmp[2370808] ret_tmp[1786721])
      (1786724 'move' call_tmp[680042] ret_tmp[1786721])
      val coerce_tmp[2165260]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2165262 'move' coerce_tmp[2165260](2165264 'cast' object[22] last[169060]))
      const-val call_tmp[2165267]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2386965]:__wide_object[2337724] "temp"
      (2386968 'move' tmp[2386965] nil[44])
      (2165269 'move' call_tmp[2165267](2165271 'ptr_eq' coerce_tmp[2165260] tmp[2386965]))
      if call_tmp[2165267]
      {
        (2165277 call nilCheckHalt[210063] "argument to ! is nil")
      }
      const-val call_tmp[680052]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1788013]:string[26] "temp"
      (169437 call chpl_describe_error[169789] last[169060] ret_tmp[1788013])
      (1788016 'move' call_tmp[680052] ret_tmp[1788013])
      const-val call_tmp[680057]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1786727]:string[26] "temp"
      wide-ref tmp[2370815]:string[26] "temp"
      (2370819 'move' tmp[2370815](2370817 'set reference' call_tmp[680052]))
      (169438 call +[38342] call_tmp[680042] tmp[2370815] ret_tmp[1786727])
      (1786730 'move' call_tmp[680057] ret_tmp[1786727])
      (169440 call +=[38797] ret[169386] call_tmp[680057])
      ref i_x[2075946]:string[26] "temp"
      (2075950 'move' i_x[2075946](2075948 'set reference' call_tmp[680057]))
      wide-ref tmp[2381223]:string[26] "temp"
      (2381226 'move' tmp[2381223] i_x[2075946])
      (2075954 call deinit[30831] tmp[2381223])
      ref i_x[2075958]:string[26] "temp"
      (2075962 'move' i_x[2075958](2075960 'set reference' call_tmp[680052]))
      wide-ref tmp[2381229]:string[26] "temp"
      (2381232 'move' tmp[2381229] i_x[2075958])
      (2075966 call deinit[30831] tmp[2381229])
      ref i_x[2075970]:string[26] "temp"
      (2075974 'move' i_x[2075970](2075972 'set reference' call_tmp[680042]))
      wide-ref tmp[2381235]:string[26] "temp"
      (2381238 'move' tmp[2381235] i_x[2075970])
      (2075978 call deinit[30831] tmp[2381235])
      ref i_x[2075982]:string[26] "temp"
      (2075986 'move' i_x[2075982](2075984 'set reference' call_tmp[680037]))
      wide-ref tmp[2381241]:string[26] "temp"
      (2381244 'move' tmp[2381241] i_x[2075982])
      (2075990 call deinit[30831] tmp[2381241])
    }
    {
      val coerce_tmp[1728769]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1728775 'move' coerce_tmp[1728769](1728771 'cast' object[22] first[169053]))
      const-val call_tmp[2059706]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2380689]:__wide_object[2337724] "temp"
      (2380692 'move' tmp[2380689] nil[44])
      (2059708 'move' call_tmp[2059706](2059710 'ptr_neq' coerce_tmp[1728769] tmp[2380689]))
      if call_tmp[2059706]
      {
        const-val call_tmp[680077]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1788019]:string[26] "temp"
        (169453 call chpl_describe_error[169789] first[169053] ret_tmp[1788019])
        (1788022 'move' call_tmp[680077] ret_tmp[1788019])
        (169454 call +=[38797] ret[169386] call_tmp[680077])
        ref i_x[2075994]:string[26] "temp"
        (2075998 'move' i_x[2075994](2075996 'set reference' call_tmp[680077]))
        wide-ref tmp[2381247]:string[26] "temp"
        (2381250 'move' tmp[2381247] i_x[2075994])
        (2076002 call deinit[30831] tmp[2381247])
      }
    }
    (1728782 'move' ret[522095] ret[169386])
    ref i_x[2076006]:string[26] "temp"
    (2076010 'move' i_x[2076006](2076008 'set reference' call_tmp[679987]))
    wide-ref tmp[2381253]:string[26] "temp"
    (2381256 'move' tmp[2381253] i_x[2076006])
    (2076014 call deinit[30831] tmp[2381253])
    ref i_x[2076018]:string[26] "temp"
    (2076022 'move' i_x[2076018](2076020 'set reference' maxMsg[169046]))
    wide-ref tmp[2381259]:string[26] "temp"
    (2381262 'move' tmp[2381259] i_x[2076018])
    (2076026 call deinit[30831] tmp[2381259])
    ref i_x[2076030]:string[26] "temp"
    (2076034 'move' i_x[2076030](2076032 'set reference' minMsg[169041]))
    wide-ref tmp[2381265]:string[26] "temp"
    (2381268 'move' tmp[2381265] i_x[2076030])
    (2076038 call deinit[30831] tmp[2381265])
    label _end_message[522093]
    (1798183 '=' _retArg[1798181] ret[522095])
    (1798185 return _void[55])
  }
  function _local__new[2364058](ref arg group[2364060]:chpl_TaskErrors[168302]) : TaskErrors[169656] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "local fn" "_new wrapper" "resolved"
  {
    const-val local__str_literal_4777[2364063]:string[26] "temp"
    (2364065 'move' local__str_literal_4777[2364063] "casting int(64) less than 0 to uint(64)")
    const-val local__str_literal_978[2364068]:string[26] "temp"
    (2364070 'move' local__str_literal_978[2364068] "With a negative count, the range must have a last index.")
    const-val local__str_literal_129[2364073]:string[26] "temp"
    (2364075 'move' local__str_literal_129[2364073] "argument to ! is nil")
    val initTemp[2364078]:TaskErrors[169656] "dead after last mention" "temp"
    const-val call_tmp[2364080]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2364082 'move' call_tmp[2364080](2364084 'sizeof_bundle' TaskErrors[169656]))
    const-val cast_tmp[2364086]:c_void_ptr[149] "dead after last mention" "temp"
    (2364088 'move' cast_tmp[2364086](2364091 call _local_chpl_here_alloc[2353897] call_tmp[2364080] 41))
    (2364094 'move' initTemp[2364078](2364096 'cast' TaskErrors[169656] cast_tmp[2364086]))
    (2364099 'setcid' initTemp[2364078])
    val super_tmp[2364101]:Error[167938] "dead after last mention" "temporary of super field" "temp"
    val tmp[2402890]:Error[167938] "temp"
    (2364103 'move' tmp[2402890](2364105 '.v' initTemp[2364078] super[355620]))
    (2402893 'move' super_tmp[2364101] tmp[2402890])
    val super_tmp[2364108]:object[22] "dead after last mention" "temporary of super field" "temp"
    val tmp[2402896]:object[22] "temp"
    (2364110 'move' tmp[2402896](2364112 '.v' super_tmp[2364101] super[355608]))
    (2402899 'move' super_tmp[2364108] tmp[2402896])
    (2364115 'setcid' super_tmp[2364108])
    val call_tmp[2364117]:object[22] "dead at end of block" "maybe param" "temp"
    (2364119 'move' call_tmp[2364117](2364121 'cast' object[22] super_tmp[2364101]))
    (2364124 'setcid' call_tmp[2364117])
    val init_coerce_tmp[2364126]:Error[167938] "dead after last mention" "temp"
    (2364128 'move' init_coerce_tmp[2364126](2364130 'cast' Error[167938] nil[44]))
    val tmp[2402902]:__wide_Error[2337829] "temp"
    (2402905 'move' tmp[2402902] init_coerce_tmp[2364126])
    (2364133 '.=' super_tmp[2364101] _next[167866] tmp[2402902])
    (2364137 '.=' super_tmp[2364101] thrownLine[167871] 0)
    (2364141 '.=' super_tmp[2364101] thrownFileId[167879] 0)
    val tmp[2364145]:string[26] "dead after last mention" "temp"
    (2364148 call _local_init[2347408] tmp[2364145])
    (2364150 '.=' super_tmp[2364101] _msg[167884] tmp[2364145])
    (2364154 '.=' super_tmp[2364101] _hasThrowInfo[167890] 0)
    (2364158 'setcid' super_tmp[2364101])
    val call_tmp[2364160]:Error[167938] "dead at end of block" "maybe param" "temp"
    (2364162 'move' call_tmp[2364160](2364164 'cast' Error[167938] initTemp[2364078]))
    (2364167 'setcid' call_tmp[2364160])
    val head[2364169]:__wide_Error[2337829] "dead at end of block" "insert auto destroy"
    val coerce_tmp[2364171]:__wide_Error[2337829] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2364173 'move' coerce_tmp[2364171](2364175 '.v' group[2364060] _head[168220]))
    (2364178 '=' head[2364169] coerce_tmp[2364171])
    (2364181 'noop')
    val tmp[2364182]:Error[167938] "temp"
    (2364184 'move' tmp[2364182](2364186 'cast' Error[167938] nil[44]))
    val tmp[2402908]:__wide_Error[2337829] "temp"
    (2402911 'move' tmp[2402908] tmp[2364182])
    (2364189 '.=' group[2364060] _head[168220] tmp[2402908])
    (2364193 '.=' initTemp[2364078] nErrors[168317] 0)
    val tmp[2364197]:c_ptr(owned Error?)[1235526] "dead after last mention" "temp"
    (2364199 'move' tmp[2364197](2364201 'cast' c_ptr(owned Error?)[1235526] nil[44]))
    (2364204 '.=' initTemp[2364078] errorsArray[168328] tmp[2364197])
    (2364208 'setcid' initTemp[2364078])
    val cur[2364210]:__wide_Error[2337829] "dead at end of block" "insert auto destroy" "split inited"
    val n[2364212]:int(64)[13] "dead at end of block" "insert auto destroy"
    (2364214 'move' n[2364212] 0)
    (2364217 'move' cur[2364210] coerce_tmp[2364171])
    val tmp[2364220]:bool[10] "dead after last mention" "temp"
    val coerce_tmp[2364222]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2364224 'move' coerce_tmp[2364222](2364226 'cast' object[22] coerce_tmp[2364171]))
    const-val call_tmp[2364229]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2402914]:__wide_object[2337724] "temp"
    (2402917 'move' tmp[2402914] nil[44])
    (2364231 'move' call_tmp[2364229](2364233 'ptr_neq' coerce_tmp[2364222] tmp[2402914]))
    (2364236 'move' tmp[2364220] call_tmp[2364229])
    WhileDo[2364239]
    {
      val coerce_tmp[2364241]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2364243 'move' coerce_tmp[2364241](2364245 'cast' object[22] cur[2364210]))
      const-val call_tmp[2364248]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2402920]:__wide_object[2337724] "temp"
      (2402923 'move' tmp[2402920] nil[44])
      (2364250 'move' call_tmp[2364248](2364252 'ptr_eq' coerce_tmp[2364241] tmp[2402920]))
      if call_tmp[2364248]
      {
        (2364258 call _local_nilCheckHalt[2348427] local__str_literal_129[2364073])
      }
      val coerce_tmp[2364261]:__wide_Error[2337829] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2364263 'move' coerce_tmp[2364261] cur[2364210])
      val curnext[2364266]:__wide_Error[2337829] "dead at end of block" "insert auto destroy"
      val coerce_tmp[2364268]:__wide_Error[2337829] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (2368009 'local_check' coerce_tmp[2364261] c"cannot access remote data in local block")
      val local_coerce_tmp[2368006]:Error[167938] "temp"
      (2368012 'move' local_coerce_tmp[2368006] coerce_tmp[2364261])
      (2364270 'move' coerce_tmp[2364268](2364272 '.v' local_coerce_tmp[2368006] _next[167866]))
      (2364275 '=' curnext[2364266] coerce_tmp[2364268])
      (2364278 'noop')
      val _formal_type_tmp_[2364279]:TaskErrors[169656] "temp"
      val ret[2364281]:__wide_TaskErrors[2337857] "dead after last mention" "RVV" "temp"
      val coerce_tmp[2364283]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2364285 'move' coerce_tmp[2364283](2364287 'cast' object[22] cur[2364210]))
      const-val call_tmp[2364290]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2402926]:__wide_object[2337724] "temp"
      (2402929 'move' tmp[2402926] nil[44])
      (2364292 'move' call_tmp[2364290](2364294 'ptr_eq' coerce_tmp[2364283] tmp[2402926]))
      if call_tmp[2364290]
      {
        val tmp[2364299]:TaskErrors[169656] "temp"
        (2364301 'move' tmp[2364299](2364303 'cast' TaskErrors[169656] nil[44]))
        (2364306 'move' ret[2364281] tmp[2364299])
        gotoReturn _end__cast[2364322] _end__cast[2364322]
      }
      val call_tmp[2364312]:__wide_TaskErrors[2337857] "dead at end of block" "maybe param" "temp"
      (2368018 'local_check' cur[2364210] c"cannot access remote data in local block")
      val local_cur[2368015]:Error[167938] "temp"
      (2368021 'move' local_cur[2368015] cur[2364210])
      (2364314 'move' call_tmp[2364312](2364316 'dynamic_cast' _formal_type_tmp_[2364279] local_cur[2368015]))
      (2364319 'move' ret[2364281] call_tmp[2364312])
      label _end__cast[2364322]
      val coerce_tmp[2364324]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2364326 'move' coerce_tmp[2364324](2364328 'cast' object[22] ret[2364281]))
      const-val call_tmp[2364331]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2402932]:__wide_object[2337724] "temp"
      (2402935 'move' tmp[2402932] nil[44])
      (2364333 'move' call_tmp[2364331](2364335 'ptr_eq' coerce_tmp[2364324] tmp[2402932]))
      if call_tmp[2364331]
      {
        ref i_lhs[2364340]:int(64)[13] "temp"
        (2364342 'move' i_lhs[2364340](2364344 'set reference' n[2364212]))
        (2364346 '+=' i_lhs[2364340] 1)
      }
      {
        const-val _ic__F0_this[2364350]:__wide_TaskErrors[2337857] "temp"
        (2364352 'move' _ic__F0_this[2364350] ret[2364281])
        const-val this[2364355]:__wide_TaskErrors[2337857] "temp"
        (2364357 'move' this[2364355] ret[2364281])
        const-val coerce_tmp[2364360]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (2368027 'local_check' this[2364355] c"cannot access remote data in local block")
        const-val local_this[2368024]:TaskErrors[169656] "temp"
        (2368030 'move' local_this[2368024] this[2364355])
        val tmp[2402938]:int(64)[13] "temp"
        (2364362 'move' tmp[2402938](2364364 '.v' local_this[2368024] nErrors[168317]))
        (2402941 'move' coerce_tmp[2364360] tmp[2402938])
        const-val call_tmp[2364367]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2364369 'move' call_tmp[2364367](2364371 '<' coerce_tmp[2364360] 0))
        if call_tmp[2364367]
        {
          (2364377 call _local_boundsCheckHalt[2347396] local__str_literal_978[2364068])
        }
        val tmp_x0[2364380]:int(64)[13] "temp"
        val tmp_x1[2364382]:int(64)[13] "temp"
        const-val call_tmp[2364384]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2364386 'move' call_tmp[2364384](2364388 '==' coerce_tmp[2364360] 0))
        if call_tmp[2364384]
        {
          const-val call_tmp[2364393]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2364395 'move' call_tmp[2364393](2364397 'cast' uint(64)[115] 0))
          const-val call_tmp[2364400]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2364402 'move' call_tmp[2364400](2364404 '-' call_tmp[2364393] 1))
          const-val call_tmp[2364407]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2364409 'move' call_tmp[2364407](2364411 'cast' int(64)[13] call_tmp[2364400]))
          (2364414 'move' tmp_x0[2364380] 0)
          (2364417 'move' tmp_x1[2364382] call_tmp[2364407])
        }
        {
          const-val call_tmp[2364421]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2364423 'move' call_tmp[2364421](2364425 '-' coerce_tmp[2364360] 1))
          const-val call_tmp[2364428]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2364430 'move' call_tmp[2364428](2364432 '+' 0 call_tmp[2364421]))
          (2364435 'move' tmp_x0[2364380] 0)
          (2364438 'move' tmp_x1[2364382] call_tmp[2364428])
        }
        (2364442 'noop')
        (2364443 'noop')
        (2364444 'noop')
        const-val _ic__F1_high[2364445]:int(64)[13] "temp"
        (2364447 'move' _ic__F1_high[2364445] tmp_x1[2364382])
        val i[2364450]:int(64)[13] "dead at end of block" "insert auto destroy"
        (2364452 'move' i[2364450] 0)
        (2364456 call _local_chpl_checkIfRangeIterWillOverflow[2345049] tmp_x0[2364380] tmp_x1[2364382] 1 tmp_x0[2364380] tmp_x1[2364382] 1)
        const-val this[2364463]:__wide_TaskErrors[2337857] "temp"
        (2364465 'move' this[2364463] _ic__F0_this[2364350])
        val coerce_tmp[2364468]:c_ptr(owned Error?)[1235526] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2368038 'local_check' this[2364463] c"cannot access remote data in local block")
        const-val local_this[2368035]:TaskErrors[169656] "temp"
        (2368041 'move' local_this[2368035] this[2364463])
        val tmp[2402944]:c_ptr(owned Error?)[1235526] "temp"
        (2364470 'move' tmp[2402944](2364472 '.v' local_this[2368035] errorsArray[168328]))
        (2402947 'move' coerce_tmp[2364468] tmp[2402944])
        CForLoop[2364475]
        {
          ref call_tmp[2364488]:owned Error?[966324] "dead after last mention" "maybe param" "temp"
          (2364490 'move' call_tmp[2364488](2364492 'array_get' coerce_tmp[2364468] i[2364450]))
          val coerce_tmp[2364495]:__wide_Error[2337829] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2364497 'move' coerce_tmp[2364495](2364500 call _local_borrow[2368044] call_tmp[2364488]))
          val coerce_tmp[2364502]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2364504 'move' coerce_tmp[2364502](2364506 'cast' object[22] coerce_tmp[2364495]))
          const-val call_tmp[2364509]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val tmp[2402950]:__wide_object[2337724] "temp"
          (2402953 'move' tmp[2402950] nil[44])
          (2364511 'move' call_tmp[2364509](2364513 'ptr_neq' coerce_tmp[2364502] tmp[2402950]))
          if call_tmp[2364509]
          {
            const-val this[2364518]:__wide_TaskErrors[2337857] "temp"
            (2364520 'move' this[2364518] _ic__F0_this[2364350])
            val coerce_tmp[2364523]:c_ptr(owned Error?)[1235526] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2368065 'local_check' this[2364518] c"cannot access remote data in local block")
            const-val local_this[2368062]:TaskErrors[169656] "temp"
            (2368068 'move' local_this[2368062] this[2364518])
            val tmp[2402956]:c_ptr(owned Error?)[1235526] "temp"
            (2364525 'move' tmp[2402956](2364527 '.v' local_this[2368062] errorsArray[168328]))
            (2402959 'move' coerce_tmp[2364523] tmp[2402956])
            ref call_tmp[2364530]:owned Error?[966324] "dead after last mention" "maybe param" "temp"
            (2364532 'move' call_tmp[2364530](2364534 'array_get' coerce_tmp[2364523] i[2364450]))
            val coerce_tmp[2364537]:__wide_Error[2337829] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2364539 'move' coerce_tmp[2364537](2364542 call _local_borrow[2368044] call_tmp[2364530]))
            val coerce_tmp[2364544]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2364546 'move' coerce_tmp[2364544](2364548 'cast' object[22] coerce_tmp[2364537]))
            const-val call_tmp[2364551]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            val tmp[2402962]:__wide_object[2337724] "temp"
            (2402965 'move' tmp[2402962] nil[44])
            (2364553 'move' call_tmp[2364551](2364555 'ptr_neq' coerce_tmp[2364544] tmp[2402962]))
            if call_tmp[2364551]
            {
              ref i_lhs[2364560]:int(64)[13] "temp"
              (2364562 'move' i_lhs[2364560](2364564 'set reference' n[2364212]))
              (2364566 '+=' i_lhs[2364560] 1)
            }
          }
          {
            (2364477 '=' i[2364450] tmp_x0[2364380])
          }
          {
            (2364481 '<=' i[2364450] _ic__F1_high[2364445])
          }
          {
            (2364485 '+=' i[2364450] 1)
          }
        }
        label _endchpl_direct_param_stride_range_iter[2364571]
        label _endchpl_direct_counted_range_iter_helper[2364573]
        label _endchpl_direct_counted_range_iter[2364575]
        label _endthese[2364577]
      }
      (2364580 '=' cur[2364210] curnext[2364266])
      val coerce_tmp[2364583]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2364585 'move' coerce_tmp[2364583](2364587 'cast' object[22] curnext[2364266]))
      const-val call_tmp[2364590]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2402968]:__wide_object[2337724] "temp"
      (2402971 'move' tmp[2402968] nil[44])
      (2364592 'move' call_tmp[2364590](2364594 'ptr_neq' coerce_tmp[2364583] tmp[2402968]))
      (2364597 'move' tmp[2364220] call_tmp[2364590])
      tmp[2364220]
    }
    (2364600 '.=' initTemp[2364078] nErrors[168317] n[2364212])
    const-val call_tmp[2364604]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2364606 'move' call_tmp[2364604](2364608 '<' n[2364212] 0))
    if call_tmp[2364604]
    {
      (2364614 call _local_safeCastCheckHalt[2357062] local__str_literal_4777[2364063])
    }
    const-val call_tmp[2364617]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2364619 'move' call_tmp[2364617](2364621 'cast' uint(64)[115] n[2364212]))
    const-val call_tmp[2364624]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2364626 'move' call_tmp[2364624](2364629 call sizeof[1238400] owned Error?[966324]))
    const-val call_tmp[2364631]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2364633 'move' call_tmp[2364631](2364635 '*' call_tmp[2364617] call_tmp[2364624]))
    const-val call_tmp[2364638]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2364640 'move' call_tmp[2364638](2364643 call _local_offset_ARRAY_ELEMENTS[2368073]))
    const-val call_tmp[2364644]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2364646 'move' call_tmp[2364644](2364649 call _local_chpl_here_calloc[2368097] call_tmp[2364631] 1 call_tmp[2364638]))
    val call_tmp[2364653]:c_ptr(owned Error?)[1235526] "dead after last mention" "expr temp" "maybe param" "temp"
    (2364655 'move' call_tmp[2364653](2364657 'cast' c_ptr(owned Error?)[1235526] call_tmp[2364644]))
    (2364660 '.=' initTemp[2364078] errorsArray[168328] call_tmp[2364653])
    val idx[2364664]:int(64)[13] "dead at end of block" "insert auto destroy"
    (2364666 'move' idx[2364664] 0)
    (2364669 '=' cur[2364210] head[2364169])
    val tmp[2364672]:bool[10] "dead after last mention" "temp"
    val coerce_tmp[2364674]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2364676 'move' coerce_tmp[2364674](2364678 'cast' object[22] head[2364169]))
    const-val call_tmp[2364681]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2402974]:__wide_object[2337724] "temp"
    (2402977 'move' tmp[2402974] nil[44])
    (2364683 'move' call_tmp[2364681](2364685 'ptr_neq' coerce_tmp[2364674] tmp[2402974]))
    (2364688 'move' tmp[2364672] call_tmp[2364681])
    WhileDo[2364691]
    {
      val coerce_tmp[2364693]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2364695 'move' coerce_tmp[2364693](2364697 'cast' object[22] cur[2364210]))
      const-val call_tmp[2364700]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2402980]:__wide_object[2337724] "temp"
      (2402983 'move' tmp[2402980] nil[44])
      (2364702 'move' call_tmp[2364700](2364704 'ptr_eq' coerce_tmp[2364693] tmp[2402980]))
      if call_tmp[2364700]
      {
        (2364710 call _local_nilCheckHalt[2348427] local__str_literal_129[2364073])
      }
      val coerce_tmp[2364713]:__wide_Error[2337829] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2364715 'move' coerce_tmp[2364713] cur[2364210])
      val curnext[2364718]:__wide_Error[2337829] "dead at end of block" "insert auto destroy"
      val coerce_tmp[2364720]:__wide_Error[2337829] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (2368161 'local_check' coerce_tmp[2364713] c"cannot access remote data in local block")
      val local_coerce_tmp[2368158]:Error[167938] "temp"
      (2368164 'move' local_coerce_tmp[2368158] coerce_tmp[2364713])
      (2364722 'move' coerce_tmp[2364720](2364724 '.v' local_coerce_tmp[2368158] _next[167866]))
      (2364727 '=' curnext[2364718] coerce_tmp[2364720])
      (2364730 'noop')
      val coerce_tmp[2364731]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2364733 'move' coerce_tmp[2364731](2364735 'cast' object[22] cur[2364210]))
      const-val call_tmp[2364738]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2402986]:__wide_object[2337724] "temp"
      (2402989 'move' tmp[2402986] nil[44])
      (2364740 'move' call_tmp[2364738](2364742 'ptr_eq' coerce_tmp[2364731] tmp[2402986]))
      if call_tmp[2364738]
      {
        (2364748 call _local_nilCheckHalt[2348427] local__str_literal_129[2364073])
      }
      val coerce_tmp[2364751]:__wide_Error[2337829] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2364753 'move' coerce_tmp[2364751] cur[2364210])
      val tmp[2364756]:Error[167938] "temp"
      (2364758 'move' tmp[2364756](2364760 'cast' Error[167938] nil[44]))
      (2368171 'local_check' coerce_tmp[2364751] c"cannot access remote data in local block")
      val local_coerce_tmp[2368168]:Error[167938] "temp"
      (2368174 'move' local_coerce_tmp[2368168] coerce_tmp[2364751])
      val tmp[2402992]:__wide_Error[2337829] "temp"
      (2402995 'move' tmp[2402992] tmp[2364756])
      (2364763 '.=' local_coerce_tmp[2368168] _next[167866] tmp[2402992])
      val _formal_type_tmp_[2364767]:TaskErrors[169656] "temp"
      val ret[2364769]:__wide_TaskErrors[2337857] "dead after last mention" "RVV" "temp"
      val coerce_tmp[2364771]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2364773 'move' coerce_tmp[2364771](2364775 'cast' object[22] cur[2364210]))
      const-val call_tmp[2364778]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2402998]:__wide_object[2337724] "temp"
      (2403001 'move' tmp[2402998] nil[44])
      (2364780 'move' call_tmp[2364778](2364782 'ptr_eq' coerce_tmp[2364771] tmp[2402998]))
      if call_tmp[2364778]
      {
        val tmp[2364787]:TaskErrors[169656] "temp"
        (2364789 'move' tmp[2364787](2364791 'cast' TaskErrors[169656] nil[44]))
        (2364794 'move' ret[2364769] tmp[2364787])
        gotoReturn _end__cast[2364810] _end__cast[2364810]
      }
      val call_tmp[2364800]:__wide_TaskErrors[2337857] "dead at end of block" "maybe param" "temp"
      (2368180 'local_check' cur[2364210] c"cannot access remote data in local block")
      val local_cur[2368177]:Error[167938] "temp"
      (2368183 'move' local_cur[2368177] cur[2364210])
      (2364802 'move' call_tmp[2364800](2364804 'dynamic_cast' _formal_type_tmp_[2364767] local_cur[2368177]))
      (2364807 'move' ret[2364769] call_tmp[2364800])
      label _end__cast[2364810]
      val asTaskErr[2364812]:__wide_TaskErrors[2337857] "dead at end of block" "insert auto destroy"
      (2364814 'move' asTaskErr[2364812] ret[2364769])
      val coerce_tmp[2364817]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2364819 'move' coerce_tmp[2364817](2364821 'cast' object[22] ret[2364769]))
      const-val call_tmp[2364824]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2403004]:__wide_object[2337724] "temp"
      (2403007 'move' tmp[2403004] nil[44])
      (2364826 'move' call_tmp[2364824](2364828 'ptr_eq' coerce_tmp[2364817] tmp[2403004]))
      if call_tmp[2364824]
      {
        val coerce_tmp[2364833]:c_ptr(owned Error?)[1235526] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        val tmp[2403010]:c_ptr(owned Error?)[1235526] "temp"
        (2364835 'move' tmp[2403010](2364837 '.v' initTemp[2364078] errorsArray[168328]))
        (2403013 'move' coerce_tmp[2364833] tmp[2403010])
        ref call_tmp[2364840]:owned Error?[966324] "dead after last mention" "maybe param" "temp"
        (2364842 'move' call_tmp[2364840](2364844 'array_get' coerce_tmp[2364833] idx[2364664]))
        val coerce_tmp[2364847]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2364849 'move' coerce_tmp[2364847](2364851 'cast' object[22] cur[2364210]))
        const-val call_tmp[2364854]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        val tmp[2403016]:__wide_object[2337724] "temp"
        (2403019 'move' tmp[2403016] nil[44])
        (2364856 'move' call_tmp[2364854](2364858 'ptr_eq' coerce_tmp[2364847] tmp[2403016]))
        if call_tmp[2364854]
        {
          (2364864 call _local_nilCheckHalt[2348427] local__str_literal_129[2364073])
        }
        (2364868 call _local_retain[2368187] call_tmp[2364840] cur[2364210])
        ref i_lhs[2364871]:int(64)[13] "temp"
        (2364873 'move' i_lhs[2364871](2364875 'set reference' idx[2364664]))
        (2364877 '+=' i_lhs[2364871] 1)
      }
      {
        const-val _ic__F0_this[2364881]:__wide_TaskErrors[2337857] "temp"
        (2364883 'move' _ic__F0_this[2364881] ret[2364769])
        const-val this[2364886]:__wide_TaskErrors[2337857] "temp"
        (2364888 'move' this[2364886] ret[2364769])
        const-val coerce_tmp[2364891]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (2368309 'local_check' this[2364886] c"cannot access remote data in local block")
        const-val local_this[2368306]:TaskErrors[169656] "temp"
        (2368312 'move' local_this[2368306] this[2364886])
        val tmp[2403022]:int(64)[13] "temp"
        (2364893 'move' tmp[2403022](2364895 '.v' local_this[2368306] nErrors[168317]))
        (2403025 'move' coerce_tmp[2364891] tmp[2403022])
        const-val call_tmp[2364898]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2364900 'move' call_tmp[2364898](2364902 '<' coerce_tmp[2364891] 0))
        if call_tmp[2364898]
        {
          (2364908 call _local_boundsCheckHalt[2347396] local__str_literal_978[2364068])
        }
        val tmp_x0[2364911]:int(64)[13] "temp"
        val tmp_x1[2364913]:int(64)[13] "temp"
        const-val call_tmp[2364915]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2364917 'move' call_tmp[2364915](2364919 '==' coerce_tmp[2364891] 0))
        if call_tmp[2364915]
        {
          const-val call_tmp[2364924]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2364926 'move' call_tmp[2364924](2364928 'cast' uint(64)[115] 0))
          const-val call_tmp[2364931]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2364933 'move' call_tmp[2364931](2364935 '-' call_tmp[2364924] 1))
          const-val call_tmp[2364938]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2364940 'move' call_tmp[2364938](2364942 'cast' int(64)[13] call_tmp[2364931]))
          (2364945 'move' tmp_x0[2364911] 0)
          (2364948 'move' tmp_x1[2364913] call_tmp[2364938])
        }
        {
          const-val call_tmp[2364952]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2364954 'move' call_tmp[2364952](2364956 '-' coerce_tmp[2364891] 1))
          const-val call_tmp[2364959]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2364961 'move' call_tmp[2364959](2364963 '+' 0 call_tmp[2364952]))
          (2364966 'move' tmp_x0[2364911] 0)
          (2364969 'move' tmp_x1[2364913] call_tmp[2364959])
        }
        (2364973 'noop')
        (2364974 'noop')
        (2364975 'noop')
        const-val _ic__F1_high[2364976]:int(64)[13] "temp"
        (2364978 'move' _ic__F1_high[2364976] tmp_x1[2364913])
        val i[2364981]:int(64)[13] "dead at end of block" "insert auto destroy"
        (2364983 'move' i[2364981] 0)
        (2364987 call _local_chpl_checkIfRangeIterWillOverflow[2345049] tmp_x0[2364911] tmp_x1[2364913] 1 tmp_x0[2364911] tmp_x1[2364913] 1)
        const-val this[2364994]:__wide_TaskErrors[2337857] "temp"
        (2364996 'move' this[2364994] _ic__F0_this[2364881])
        val coerce_tmp[2364999]:c_ptr(owned Error?)[1235526] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2368320 'local_check' this[2364994] c"cannot access remote data in local block")
        const-val local_this[2368317]:TaskErrors[169656] "temp"
        (2368323 'move' local_this[2368317] this[2364994])
        val tmp[2403028]:c_ptr(owned Error?)[1235526] "temp"
        (2365001 'move' tmp[2403028](2365003 '.v' local_this[2368317] errorsArray[168328]))
        (2403031 'move' coerce_tmp[2364999] tmp[2403028])
        CForLoop[2365006]
        {
          ref call_tmp[2365019]:owned Error?[966324] "dead after last mention" "maybe param" "temp"
          (2365021 'move' call_tmp[2365019](2365023 'array_get' coerce_tmp[2364999] i[2364981]))
          val coerce_tmp[2365026]:__wide_Error[2337829] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2365028 'move' coerce_tmp[2365026](2365031 call _local_borrow[2368044] call_tmp[2365019]))
          val coerce_tmp[2365033]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2365035 'move' coerce_tmp[2365033](2365037 'cast' object[22] coerce_tmp[2365026]))
          const-val call_tmp[2365040]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val tmp[2403034]:__wide_object[2337724] "temp"
          (2403037 'move' tmp[2403034] nil[44])
          (2365042 'move' call_tmp[2365040](2365044 'ptr_neq' coerce_tmp[2365033] tmp[2403034]))
          if call_tmp[2365040]
          {
            const-val this[2365049]:__wide_TaskErrors[2337857] "temp"
            (2365051 'move' this[2365049] _ic__F0_this[2364881])
            val coerce_tmp[2365054]:c_ptr(owned Error?)[1235526] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2368330 'local_check' this[2365049] c"cannot access remote data in local block")
            const-val local_this[2368327]:TaskErrors[169656] "temp"
            (2368333 'move' local_this[2368327] this[2365049])
            val tmp[2403040]:c_ptr(owned Error?)[1235526] "temp"
            (2365056 'move' tmp[2403040](2365058 '.v' local_this[2368327] errorsArray[168328]))
            (2403043 'move' coerce_tmp[2365054] tmp[2403040])
            ref call_tmp[2365061]:owned Error?[966324] "dead after last mention" "maybe param" "temp"
            (2365063 'move' call_tmp[2365061](2365065 'array_get' coerce_tmp[2365054] i[2364981]))
            val coerce_tmp[2365068]:__wide_Error[2337829] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2365070 'move' coerce_tmp[2365068](2365073 call _local_borrow[2368044] call_tmp[2365061]))
            val coerce_tmp[2365075]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2365077 'move' coerce_tmp[2365075](2365079 'cast' object[22] coerce_tmp[2365068]))
            const-val call_tmp[2365082]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            val tmp[2403046]:__wide_object[2337724] "temp"
            (2403049 'move' tmp[2403046] nil[44])
            (2365084 'move' call_tmp[2365082](2365086 'ptr_neq' coerce_tmp[2365075] tmp[2403046]))
            if call_tmp[2365082]
            {
              val coerce_tmp[2365091]:c_ptr(owned Error?)[1235526] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              val tmp[2403052]:c_ptr(owned Error?)[1235526] "temp"
              (2365093 'move' tmp[2403052](2365095 '.v' initTemp[2364078] errorsArray[168328]))
              (2403055 'move' coerce_tmp[2365091] tmp[2403052])
              ref call_tmp[2365098]:owned Error?[966324] "dead after last mention" "maybe param" "temp"
              (2365100 'move' call_tmp[2365098](2365102 'array_get' coerce_tmp[2365091] idx[2364664]))
              (2365106 call _local_=[2368337] call_tmp[2365098] call_tmp[2365061])
              ref i_lhs[2365109]:int(64)[13] "temp"
              (2365111 'move' i_lhs[2365109](2365113 'set reference' idx[2364664]))
              (2365115 '+=' i_lhs[2365109] 1)
            }
          }
          {
            (2365008 '=' i[2364981] tmp_x0[2364911])
          }
          {
            (2365012 '<=' i[2364981] _ic__F1_high[2364976])
          }
          {
            (2365016 '+=' i[2364981] 1)
          }
        }
        label _endchpl_direct_param_stride_range_iter[2365120]
        label _endchpl_direct_counted_range_iter_helper[2365122]
        label _endchpl_direct_counted_range_iter[2365124]
        label _endthese[2365126]
        val coerce_tmp[2365128]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2365130 'move' coerce_tmp[2365128](2365132 'cast' object[22] asTaskErr[2364812]))
        const-val call_tmp[2365135]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        val tmp[2403058]:__wide_object[2337724] "temp"
        (2403061 'move' tmp[2403058] nil[44])
        (2365137 'move' call_tmp[2365135](2365139 'ptr_neq' coerce_tmp[2365128] tmp[2403058]))
        if call_tmp[2365135]
        {
          (2365145 call _local_deinit[2368420] asTaskErr[2364812])
          const-val call_tmp[2365147]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
          (2365149 'move' call_tmp[2365147](2365151 '_wide_get_locale' asTaskErr[2364812]))
          val isdirect[2365153]:bool[10] "temp"
          (2365155 'move' isdirect[2365153](2365158 call _local_chpl_doDirectExecuteOn[2341227] call_tmp[2365147]))
          if isdirect[2365153]
          {
            (2365163 call _local_on_fn[2368634] asTaskErr[2364812])
          }
          {
            val _args_foron_fn[2365166]:_class_localson_fn[2041367] "temp"
            (2365168 'move' _args_foron_fn[2365166](2365170 'stack allocate class' _class_localson_fn[2041367]))
            (2365172 '.=' _args_foron_fn[2365166] _0_tmp[2041370] call_tmp[2365147])
            (2365176 '.=' _args_foron_fn[2365166] _1_arg[2041372] asTaskErr[2364812])
            val _args_vforon_fn[2365180]:c_void_ptr[149] "temp"
            (2365182 'move' _args_vforon_fn[2365180](2365184 'cast_to_void_star' _args_foron_fn[2365166]))
            val _args_sizeon_fn[2365186]:int(64)[13] "temp"
            (2365188 'move' _args_sizeon_fn[2365186](2365190 'sizeof_bundle' _class_localson_fn[2041367]))
            on(2365193 call _local_wrapon_fn[2368652] call_tmp[2365147] _args_vforon_fn[2365180] _args_sizeon_fn[2365186] _args_foron_fn[2365166])
          }
        }
      }
      (2365201 '=' cur[2364210] curnext[2364718])
      val coerce_tmp[2365204]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2365206 'move' coerce_tmp[2365204](2365208 'cast' object[22] curnext[2364718]))
      const-val call_tmp[2365211]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2403064]:__wide_object[2337724] "temp"
      (2403067 'move' tmp[2403064] nil[44])
      (2365213 'move' call_tmp[2365211](2365215 'ptr_neq' coerce_tmp[2365204] tmp[2403064]))
      (2365218 'move' tmp[2364672] call_tmp[2365211])
      tmp[2364672]
    }
    (2365221 return initTemp[2364078])
  }
  function _new[1240891](ref arg group[1240900]:chpl_TaskErrors[168302]) : TaskErrors[169656] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    const-val local__str_literal_4777[2335932]:string[26] "temp"
    (2335933 'move' "casting int(64) less than 0 to uint(64)" "casting int(64) less than 0 to uint(64)")
    const-val local__str_literal_978[2335926]:string[26] "temp"
    (2335927 'move' "With a negative count, the range must have a last index." "With a negative count, the range must have a last index.")
    const-val local__str_literal_129[2335920]:string[26] "temp"
    (2335921 'move' "argument to ! is nil" "argument to ! is nil")
    val initTemp[1240893]:TaskErrors[169656] "dead after last mention" "temp"
    const-val call_tmp[1240937]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1240940 'move' call_tmp[1240937](1240951 'sizeof_bundle' TaskErrors[169656]))
    const-val cast_tmp[1240954]:c_void_ptr[149] "dead after last mention" "temp"
    (1240956 'move' cast_tmp[1240954](1240908 call chpl_here_alloc[187742] call_tmp[1240937] 41))
    (1240911 'move' initTemp[1240893](1240958 'cast' TaskErrors[169656] cast_tmp[1240954]))
    (1240913 'setcid' initTemp[1240893])
    val super_tmp[2138295]:Error[167938] "dead after last mention" "temporary of super field" "temp"
    val tmp[2385744]:Error[167938] "temp"
    (2138297 'move' tmp[2385744](2138299 '.v' initTemp[1240893] super[355620]))
    (2385747 'move' super_tmp[2138295] tmp[2385744])
    val super_tmp[2138302]:object[22] "dead after last mention" "temporary of super field" "temp"
    val tmp[2385750]:object[22] "temp"
    (2138304 'move' tmp[2385750](2138306 '.v' super_tmp[2138295] super[355608]))
    (2385753 'move' super_tmp[2138302] tmp[2385750])
    (2138309 'setcid' super_tmp[2138302])
    val call_tmp[2138311]:object[22] "dead at end of block" "maybe param" "temp"
    (2138313 'move' call_tmp[2138311](2138315 'cast' object[22] super_tmp[2138295]))
    (2138318 'setcid' call_tmp[2138311])
    val init_coerce_tmp[2138320]:Error[167938] "dead after last mention" "temp"
    (2138322 'move' init_coerce_tmp[2138320](2138324 'cast' Error[167938] nil[44]))
    val tmp[2385756]:__wide_Error[2337829] "temp"
    (2385759 'move' tmp[2385756] init_coerce_tmp[2138320])
    (2138327 '.=' super_tmp[2138295] _next[167866] tmp[2385756])
    (2138331 '.=' super_tmp[2138295] thrownLine[167871] 0)
    (2138335 '.=' super_tmp[2138295] thrownFileId[167879] 0)
    val tmp[2138339]:string[26] "dead after last mention" "temp"
    (2138342 call init[30760] tmp[2138339])
    (2138344 '.=' super_tmp[2138295] _msg[167884] tmp[2138339])
    (2138348 '.=' super_tmp[2138295] _hasThrowInfo[167890] 0)
    (2138352 'setcid' super_tmp[2138295])
    val call_tmp[2138354]:Error[167938] "dead at end of block" "maybe param" "temp"
    (2138356 'move' call_tmp[2138354](2138358 'cast' Error[167938] initTemp[1240893]))
    (2138361 'setcid' call_tmp[2138354])
    val head[2138363]:__wide_Error[2337829] "dead at end of block" "insert auto destroy"
    val coerce_tmp[2138365]:__wide_Error[2337829] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2138367 'move' coerce_tmp[2138365](2138369 '.v' group[1240900] _head[168220]))
    (2138372 '=' head[2138363] coerce_tmp[2138365])
    (2138375 'noop')
    val tmp[2138376]:Error[167938] "temp"
    (2138378 'move' tmp[2138376](2138380 'cast' Error[167938] nil[44]))
    val tmp[2385762]:__wide_Error[2337829] "temp"
    (2385765 'move' tmp[2385762] tmp[2138376])
    (2138383 '.=' group[1240900] _head[168220] tmp[2385762])
    (2138387 '.=' initTemp[1240893] nErrors[168317] 0)
    val tmp[2138391]:c_ptr(owned Error?)[1235526] "dead after last mention" "temp"
    (2138393 'move' tmp[2138391](2138395 'cast' c_ptr(owned Error?)[1235526] nil[44]))
    (2138398 '.=' initTemp[1240893] errorsArray[168328] tmp[2138391])
    (2138402 'setcid' initTemp[1240893])
    val cur[2138404]:__wide_Error[2337829] "dead at end of block" "insert auto destroy" "split inited"
    val n[2138406]:int(64)[13] "dead at end of block" "insert auto destroy"
    (2138408 'move' n[2138406] 0)
    (2138411 'move' cur[2138404] coerce_tmp[2138365])
    val tmp[2138414]:bool[10] "dead after last mention" "temp"
    val coerce_tmp[2138416]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2138418 'move' coerce_tmp[2138416](2138420 'cast' object[22] coerce_tmp[2138365]))
    const-val call_tmp[2138423]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2385768]:__wide_object[2337724] "temp"
    (2385771 'move' tmp[2385768] nil[44])
    (2138425 'move' call_tmp[2138423](2138427 'ptr_neq' coerce_tmp[2138416] tmp[2385768]))
    (2138430 'move' tmp[2138414] call_tmp[2138423])
    WhileDo[2138433]
    {
      val coerce_tmp[2138435]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2138437 'move' coerce_tmp[2138435](2138439 'cast' object[22] cur[2138404]))
      const-val call_tmp[2138442]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2385774]:__wide_object[2337724] "temp"
      (2385777 'move' tmp[2385774] nil[44])
      (2138444 'move' call_tmp[2138442](2138446 'ptr_eq' coerce_tmp[2138435] tmp[2385774]))
      if call_tmp[2138442]
      {
        (2138452 call nilCheckHalt[210063] "argument to ! is nil")
      }
      val coerce_tmp[2138455]:__wide_Error[2337829] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2138457 'move' coerce_tmp[2138455] cur[2138404])
      val curnext[2138460]:__wide_Error[2337829] "dead at end of block" "insert auto destroy"
      val coerce_tmp[2138462]:__wide_Error[2337829] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (2138464 'move' coerce_tmp[2138462](2138466 '.v' coerce_tmp[2138455] _next[167866]))
      (2138469 '=' curnext[2138460] coerce_tmp[2138462])
      (2138472 'noop')
      val _formal_type_tmp_[2138478]:TaskErrors[169656] "temp"
      val ret[2138480]:__wide_TaskErrors[2337857] "dead after last mention" "RVV" "temp"
      val coerce_tmp[2138482]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2138484 'move' coerce_tmp[2138482](2138486 'cast' object[22] cur[2138404]))
      const-val call_tmp[2138489]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2385780]:__wide_object[2337724] "temp"
      (2385783 'move' tmp[2385780] nil[44])
      (2138491 'move' call_tmp[2138489](2138493 'ptr_eq' coerce_tmp[2138482] tmp[2385780]))
      if call_tmp[2138489]
      {
        val tmp[2341149]:TaskErrors[169656] "temp"
        (2341152 'move' tmp[2341149](2138500 'cast' TaskErrors[169656] nil[44]))
        (2138498 'move' ret[2138480] tmp[2341149])
        gotoReturn _end__cast[2138516] _end__cast[2138516]
      }
      val call_tmp[2138506]:__wide_TaskErrors[2337857] "dead at end of block" "maybe param" "temp"
      (2138508 'move' call_tmp[2138506](2138510 'dynamic_cast' _formal_type_tmp_[2138478] cur[2138404]))
      (2138513 'move' ret[2138480] call_tmp[2138506])
      label _end__cast[2138516]
      val coerce_tmp[2138523]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2138525 'move' coerce_tmp[2138523](2138527 'cast' object[22] ret[2138480]))
      const-val call_tmp[2138530]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2385786]:__wide_object[2337724] "temp"
      (2385789 'move' tmp[2385786] nil[44])
      (2138532 'move' call_tmp[2138530](2138534 'ptr_eq' coerce_tmp[2138523] tmp[2385786]))
      if call_tmp[2138530]
      {
        ref i_lhs[2138539]:int(64)[13] "temp"
        (2138541 'move' i_lhs[2138539](2138543 'set reference' n[2138406]))
        (2138545 '+=' i_lhs[2138539] 1)
      }
      {
        const-val _ic__F0_this[2299491]:__wide_TaskErrors[2337857] "temp"
        (2138601 'move' _ic__F0_this[2299491] ret[2138480])
        const-val this[2138610]:__wide_TaskErrors[2337857] "temp"
        (2138612 'move' this[2138610] ret[2138480])
        const-val coerce_tmp[2138619]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        val tmp[2385792]:int(64)[13] "temp"
        (2138621 'move' tmp[2385792](2138623 '.v' this[2138610] nErrors[168317]))
        (2385795 'move' coerce_tmp[2138619] tmp[2385792])
        const-val call_tmp[2138791]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2138793 'move' call_tmp[2138791](2138795 '<' coerce_tmp[2138619] 0))
        if call_tmp[2138791]
        {
          (2138801 call boundsCheckHalt[210079] "With a negative count, the range must have a last index.")
        }
        val tmp_x0[2320888]:int(64)[13] "temp"
        val tmp_x1[2320890]:int(64)[13] "temp"
        const-val call_tmp[2138815]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2138817 'move' call_tmp[2138815](2138819 '==' coerce_tmp[2138619] 0))
        if call_tmp[2138815]
        {
          const-val call_tmp[2138831]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2138833 'move' call_tmp[2138831](2138835 'cast' uint(64)[115] 0))
          const-val call_tmp[2138838]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2138840 'move' call_tmp[2138838](2138842 '-' call_tmp[2138831] 1))
          const-val call_tmp[2138845]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2138847 'move' call_tmp[2138845](2138849 'cast' int(64)[13] call_tmp[2138838]))
          (2320896 'move' tmp_x0[2320888] 0)
          (2320901 'move' tmp_x1[2320890] call_tmp[2138845])
        }
        {
          const-val call_tmp[2138880]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2138882 'move' call_tmp[2138880](2138884 '-' coerce_tmp[2138619] 1))
          const-val call_tmp[2138894]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2138896 'move' call_tmp[2138894](2138898 '+' 0 call_tmp[2138880]))
          (2320906 'move' tmp_x0[2320888] 0)
          (2320911 'move' tmp_x1[2320890] call_tmp[2138894])
        }
        (2138925 'noop')
        (2138933 'noop')
        (2138941 'noop')
        const-val _ic__F1_high[2306343]:int(64)[13] "temp"
        (2139009 'move' _ic__F1_high[2306343] tmp_x1[2320890])
        val i[2139016]:int(64)[13] "dead at end of block" "insert auto destroy"
        (2139018 'move' i[2139016] 0)
        (2139050 call chpl_checkIfRangeIterWillOverflow[1095987] tmp_x0[2320888] tmp_x1[2320890] 1 tmp_x0[2320888] tmp_x1[2320890] 1)
        const-val this[2139089]:__wide_TaskErrors[2337857] "temp"
        (2139091 'move' this[2139089] _ic__F0_this[2299491])
        val coerce_tmp[2139096]:c_ptr(owned Error?)[1235526] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        val tmp[2385798]:c_ptr(owned Error?)[1235526] "temp"
        (2139098 'move' tmp[2385798](2139100 '.v' this[2139089] errorsArray[168328]))
        (2385801 'move' coerce_tmp[2139096] tmp[2385798])
        CForLoop[2139057]
        {
          ref call_tmp[2139103]:owned Error?[966324] "dead after last mention" "maybe param" "temp"
          (2139105 'move' call_tmp[2139103](2139107 'array_get' coerce_tmp[2139096] i[2139016]))
          val coerce_tmp[2139110]:__wide_Error[2337829] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2139112 'move' coerce_tmp[2139110](2139115 call borrow[1235739] call_tmp[2139103]))
          val coerce_tmp[2139117]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2139119 'move' coerce_tmp[2139117](2139121 'cast' object[22] coerce_tmp[2139110]))
          const-val call_tmp[2139124]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val tmp[2385804]:__wide_object[2337724] "temp"
          (2385807 'move' tmp[2385804] nil[44])
          (2139126 'move' call_tmp[2139124](2139128 'ptr_neq' coerce_tmp[2139117] tmp[2385804]))
          if call_tmp[2139124]
          {
            const-val this[2139133]:__wide_TaskErrors[2337857] "temp"
            (2139135 'move' this[2139133] _ic__F0_this[2299491])
            val coerce_tmp[2139140]:c_ptr(owned Error?)[1235526] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            val tmp[2385810]:c_ptr(owned Error?)[1235526] "temp"
            (2139142 'move' tmp[2385810](2139144 '.v' this[2139133] errorsArray[168328]))
            (2385813 'move' coerce_tmp[2139140] tmp[2385810])
            ref call_tmp[2139147]:owned Error?[966324] "dead after last mention" "maybe param" "temp"
            (2139149 'move' call_tmp[2139147](2139151 'array_get' coerce_tmp[2139140] i[2139016]))
            val coerce_tmp[2139154]:__wide_Error[2337829] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2139156 'move' coerce_tmp[2139154](2139159 call borrow[1235739] call_tmp[2139147]))
            val coerce_tmp[2139161]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2139163 'move' coerce_tmp[2139161](2139165 'cast' object[22] coerce_tmp[2139154]))
            const-val call_tmp[2139168]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            val tmp[2385816]:__wide_object[2337724] "temp"
            (2385819 'move' tmp[2385816] nil[44])
            (2139170 'move' call_tmp[2139168](2139172 'ptr_neq' coerce_tmp[2139161] tmp[2385816]))
            if call_tmp[2139168]
            {
              ref i_lhs[2139177]:int(64)[13] "temp"
              (2139179 'move' i_lhs[2139177](2139181 'set reference' n[2138406]))
              (2139183 '+=' i_lhs[2139177] 1)
            }
          }
          {
            (2139066 '=' i[2139016] tmp_x0[2320888])
          }
          {
            (2139077 '<=' i[2139016] _ic__F1_high[2306343])
          }
          {
            (2139081 '+=' i[2139016] 1)
          }
        }
        label _endchpl_direct_param_stride_range_iter[2139188]
        label _endchpl_direct_counted_range_iter_helper[2139199]
        label _endchpl_direct_counted_range_iter[2139210]
        label _endthese[2139221]
      }
      (2139233 '=' cur[2138404] curnext[2138460])
      val coerce_tmp[2139236]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2139238 'move' coerce_tmp[2139236](2139240 'cast' object[22] curnext[2138460]))
      const-val call_tmp[2139243]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2385822]:__wide_object[2337724] "temp"
      (2385825 'move' tmp[2385822] nil[44])
      (2139245 'move' call_tmp[2139243](2139247 'ptr_neq' coerce_tmp[2139236] tmp[2385822]))
      (2139250 'move' tmp[2138414] call_tmp[2139243])
      tmp[2138414]
    }
    (2139253 '.=' initTemp[1240893] nErrors[168317] n[2138406])
    const-val call_tmp[2139257]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2139259 'move' call_tmp[2139257](2139261 '<' n[2138406] 0))
    if call_tmp[2139257]
    {
      (2139267 call safeCastCheckHalt[210127] "casting int(64) less than 0 to uint(64)")
    }
    const-val call_tmp[2139270]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2139272 'move' call_tmp[2139270](2139274 'cast' uint(64)[115] n[2138406]))
    const-val call_tmp[2139277]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2139279 'move' call_tmp[2139277](2139282 call sizeof[1238400] owned Error?[966324]))
    const-val call_tmp[2139284]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2139286 'move' call_tmp[2139284](2139288 '*' call_tmp[2139270] call_tmp[2139277]))
    const-val call_tmp[2139291]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2139293 'move' call_tmp[2139291](2139296 call offset_ARRAY_ELEMENTS[207390]))
    const-val call_tmp[2139297]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2139299 'move' call_tmp[2139297](2139302 call chpl_here_calloc[1238430] call_tmp[2139284] 1 call_tmp[2139291]))
    val call_tmp[2139306]:c_ptr(owned Error?)[1235526] "dead after last mention" "expr temp" "maybe param" "temp"
    (2139308 'move' call_tmp[2139306](2139310 'cast' c_ptr(owned Error?)[1235526] call_tmp[2139297]))
    (2139313 '.=' initTemp[1240893] errorsArray[168328] call_tmp[2139306])
    val idx[2139317]:int(64)[13] "dead at end of block" "insert auto destroy"
    (2139319 'move' idx[2139317] 0)
    (2139322 '=' cur[2138404] head[2138363])
    val tmp[2139325]:bool[10] "dead after last mention" "temp"
    val coerce_tmp[2139327]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2139329 'move' coerce_tmp[2139327](2139331 'cast' object[22] head[2138363]))
    const-val call_tmp[2139334]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2385828]:__wide_object[2337724] "temp"
    (2385831 'move' tmp[2385828] nil[44])
    (2139336 'move' call_tmp[2139334](2139338 'ptr_neq' coerce_tmp[2139327] tmp[2385828]))
    (2139341 'move' tmp[2139325] call_tmp[2139334])
    WhileDo[2139344]
    {
      val coerce_tmp[2139346]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2139348 'move' coerce_tmp[2139346](2139350 'cast' object[22] cur[2138404]))
      const-val call_tmp[2139353]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2385834]:__wide_object[2337724] "temp"
      (2385837 'move' tmp[2385834] nil[44])
      (2139355 'move' call_tmp[2139353](2139357 'ptr_eq' coerce_tmp[2139346] tmp[2385834]))
      if call_tmp[2139353]
      {
        (2139363 call nilCheckHalt[210063] "argument to ! is nil")
      }
      val coerce_tmp[2139366]:__wide_Error[2337829] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2139368 'move' coerce_tmp[2139366] cur[2138404])
      val curnext[2139371]:__wide_Error[2337829] "dead at end of block" "insert auto destroy"
      val coerce_tmp[2139373]:__wide_Error[2337829] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (2139375 'move' coerce_tmp[2139373](2139377 '.v' coerce_tmp[2139366] _next[167866]))
      (2139380 '=' curnext[2139371] coerce_tmp[2139373])
      (2139383 'noop')
      val coerce_tmp[2139384]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2139386 'move' coerce_tmp[2139384](2139388 'cast' object[22] cur[2138404]))
      const-val call_tmp[2139391]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2385840]:__wide_object[2337724] "temp"
      (2385843 'move' tmp[2385840] nil[44])
      (2139393 'move' call_tmp[2139391](2139395 'ptr_eq' coerce_tmp[2139384] tmp[2385840]))
      if call_tmp[2139391]
      {
        (2139401 call nilCheckHalt[210063] "argument to ! is nil")
      }
      val coerce_tmp[2139404]:__wide_Error[2337829] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2139406 'move' coerce_tmp[2139404] cur[2138404])
      val tmp[2139409]:Error[167938] "temp"
      (2139411 'move' tmp[2139409](2139413 'cast' Error[167938] nil[44]))
      val tmp[2385846]:__wide_Error[2337829] "temp"
      (2385849 'move' tmp[2385846] tmp[2139409])
      (2139416 '.=' coerce_tmp[2139404] _next[167866] tmp[2385846])
      val _formal_type_tmp_[2139425]:TaskErrors[169656] "temp"
      val ret[2139427]:__wide_TaskErrors[2337857] "dead after last mention" "RVV" "temp"
      val coerce_tmp[2139429]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2139431 'move' coerce_tmp[2139429](2139433 'cast' object[22] cur[2138404]))
      const-val call_tmp[2139436]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2385852]:__wide_object[2337724] "temp"
      (2385855 'move' tmp[2385852] nil[44])
      (2139438 'move' call_tmp[2139436](2139440 'ptr_eq' coerce_tmp[2139429] tmp[2385852]))
      if call_tmp[2139436]
      {
        val tmp[2341154]:TaskErrors[169656] "temp"
        (2341157 'move' tmp[2341154](2139447 'cast' TaskErrors[169656] nil[44]))
        (2139445 'move' ret[2139427] tmp[2341154])
        gotoReturn _end__cast[2139463] _end__cast[2139463]
      }
      val call_tmp[2139453]:__wide_TaskErrors[2337857] "dead at end of block" "maybe param" "temp"
      (2139455 'move' call_tmp[2139453](2139457 'dynamic_cast' _formal_type_tmp_[2139425] cur[2138404]))
      (2139460 'move' ret[2139427] call_tmp[2139453])
      label _end__cast[2139463]
      val asTaskErr[2139465]:__wide_TaskErrors[2337857] "dead at end of block" "insert auto destroy"
      (2139467 'move' asTaskErr[2139465] ret[2139427])
      val coerce_tmp[2139470]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2139472 'move' coerce_tmp[2139470](2139474 'cast' object[22] ret[2139427]))
      const-val call_tmp[2139477]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2385858]:__wide_object[2337724] "temp"
      (2385861 'move' tmp[2385858] nil[44])
      (2139479 'move' call_tmp[2139477](2139481 'ptr_eq' coerce_tmp[2139470] tmp[2385858]))
      if call_tmp[2139477]
      {
        val coerce_tmp[2139486]:c_ptr(owned Error?)[1235526] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        val tmp[2385864]:c_ptr(owned Error?)[1235526] "temp"
        (2139488 'move' tmp[2385864](2139490 '.v' initTemp[1240893] errorsArray[168328]))
        (2385867 'move' coerce_tmp[2139486] tmp[2385864])
        ref call_tmp[2139493]:owned Error?[966324] "dead after last mention" "maybe param" "temp"
        (2139495 'move' call_tmp[2139493](2139497 'array_get' coerce_tmp[2139486] idx[2139317]))
        val coerce_tmp[2139500]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2139502 'move' coerce_tmp[2139500](2139504 'cast' object[22] cur[2138404]))
        const-val call_tmp[2139507]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        val tmp[2385870]:__wide_object[2337724] "temp"
        (2385873 'move' tmp[2385870] nil[44])
        (2139509 'move' call_tmp[2139507](2139511 'ptr_eq' coerce_tmp[2139500] tmp[2385870]))
        if call_tmp[2139507]
        {
          (2139517 call nilCheckHalt[210063] "argument to ! is nil")
        }
        (2139521 call retain[1238686] call_tmp[2139493] cur[2138404])
        ref i_lhs[2139524]:int(64)[13] "temp"
        (2139526 'move' i_lhs[2139524](2139528 'set reference' idx[2139317]))
        (2139530 '+=' i_lhs[2139524] 1)
      }
      {
        const-val _ic__F0_this[2299514]:__wide_TaskErrors[2337857] "temp"
        (2139586 'move' _ic__F0_this[2299514] ret[2139427])
        const-val this[2139595]:__wide_TaskErrors[2337857] "temp"
        (2139597 'move' this[2139595] ret[2139427])
        const-val coerce_tmp[2139604]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        val tmp[2385876]:int(64)[13] "temp"
        (2139606 'move' tmp[2385876](2139608 '.v' this[2139595] nErrors[168317]))
        (2385879 'move' coerce_tmp[2139604] tmp[2385876])
        const-val call_tmp[2139776]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2139778 'move' call_tmp[2139776](2139780 '<' coerce_tmp[2139604] 0))
        if call_tmp[2139776]
        {
          (2139786 call boundsCheckHalt[210079] "With a negative count, the range must have a last index.")
        }
        val tmp_x0[2320946]:int(64)[13] "temp"
        val tmp_x1[2320948]:int(64)[13] "temp"
        const-val call_tmp[2139800]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2139802 'move' call_tmp[2139800](2139804 '==' coerce_tmp[2139604] 0))
        if call_tmp[2139800]
        {
          const-val call_tmp[2139816]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2139818 'move' call_tmp[2139816](2139820 'cast' uint(64)[115] 0))
          const-val call_tmp[2139823]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2139825 'move' call_tmp[2139823](2139827 '-' call_tmp[2139816] 1))
          const-val call_tmp[2139830]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2139832 'move' call_tmp[2139830](2139834 'cast' int(64)[13] call_tmp[2139823]))
          (2320954 'move' tmp_x0[2320946] 0)
          (2320959 'move' tmp_x1[2320948] call_tmp[2139830])
        }
        {
          const-val call_tmp[2139865]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2139867 'move' call_tmp[2139865](2139869 '-' coerce_tmp[2139604] 1))
          const-val call_tmp[2139879]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2139881 'move' call_tmp[2139879](2139883 '+' 0 call_tmp[2139865]))
          (2320964 'move' tmp_x0[2320946] 0)
          (2320969 'move' tmp_x1[2320948] call_tmp[2139879])
        }
        (2139910 'noop')
        (2139918 'noop')
        (2139926 'noop')
        const-val _ic__F1_high[2306362]:int(64)[13] "temp"
        (2139994 'move' _ic__F1_high[2306362] tmp_x1[2320948])
        val i[2140001]:int(64)[13] "dead at end of block" "insert auto destroy"
        (2140003 'move' i[2140001] 0)
        (2140035 call chpl_checkIfRangeIterWillOverflow[1095987] tmp_x0[2320946] tmp_x1[2320948] 1 tmp_x0[2320946] tmp_x1[2320948] 1)
        const-val this[2140074]:__wide_TaskErrors[2337857] "temp"
        (2140076 'move' this[2140074] _ic__F0_this[2299514])
        val coerce_tmp[2140081]:c_ptr(owned Error?)[1235526] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        val tmp[2385882]:c_ptr(owned Error?)[1235526] "temp"
        (2140083 'move' tmp[2385882](2140085 '.v' this[2140074] errorsArray[168328]))
        (2385885 'move' coerce_tmp[2140081] tmp[2385882])
        CForLoop[2140042]
        {
          ref call_tmp[2140088]:owned Error?[966324] "dead after last mention" "maybe param" "temp"
          (2140090 'move' call_tmp[2140088](2140092 'array_get' coerce_tmp[2140081] i[2140001]))
          val coerce_tmp[2140095]:__wide_Error[2337829] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2140097 'move' coerce_tmp[2140095](2140100 call borrow[1235739] call_tmp[2140088]))
          val coerce_tmp[2140102]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2140104 'move' coerce_tmp[2140102](2140106 'cast' object[22] coerce_tmp[2140095]))
          const-val call_tmp[2140109]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val tmp[2385888]:__wide_object[2337724] "temp"
          (2385891 'move' tmp[2385888] nil[44])
          (2140111 'move' call_tmp[2140109](2140113 'ptr_neq' coerce_tmp[2140102] tmp[2385888]))
          if call_tmp[2140109]
          {
            const-val this[2140118]:__wide_TaskErrors[2337857] "temp"
            (2140120 'move' this[2140118] _ic__F0_this[2299514])
            val coerce_tmp[2140125]:c_ptr(owned Error?)[1235526] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            val tmp[2385894]:c_ptr(owned Error?)[1235526] "temp"
            (2140127 'move' tmp[2385894](2140129 '.v' this[2140118] errorsArray[168328]))
            (2385897 'move' coerce_tmp[2140125] tmp[2385894])
            ref call_tmp[2140132]:owned Error?[966324] "dead after last mention" "maybe param" "temp"
            (2140134 'move' call_tmp[2140132](2140136 'array_get' coerce_tmp[2140125] i[2140001]))
            val coerce_tmp[2140139]:__wide_Error[2337829] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2140141 'move' coerce_tmp[2140139](2140144 call borrow[1235739] call_tmp[2140132]))
            val coerce_tmp[2140146]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2140148 'move' coerce_tmp[2140146](2140150 'cast' object[22] coerce_tmp[2140139]))
            const-val call_tmp[2140153]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            val tmp[2385900]:__wide_object[2337724] "temp"
            (2385903 'move' tmp[2385900] nil[44])
            (2140155 'move' call_tmp[2140153](2140157 'ptr_neq' coerce_tmp[2140146] tmp[2385900]))
            if call_tmp[2140153]
            {
              val coerce_tmp[2140162]:c_ptr(owned Error?)[1235526] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              val tmp[2385906]:c_ptr(owned Error?)[1235526] "temp"
              (2140164 'move' tmp[2385906](2140166 '.v' initTemp[1240893] errorsArray[168328]))
              (2385909 'move' coerce_tmp[2140162] tmp[2385906])
              ref call_tmp[2140169]:owned Error?[966324] "dead after last mention" "maybe param" "temp"
              (2140171 'move' call_tmp[2140169](2140173 'array_get' coerce_tmp[2140162] idx[2139317]))
              (2140177 call =[1238968] call_tmp[2140169] call_tmp[2140132])
              ref i_lhs[2140180]:int(64)[13] "temp"
              (2140182 'move' i_lhs[2140180](2140184 'set reference' idx[2139317]))
              (2140186 '+=' i_lhs[2140180] 1)
            }
          }
          {
            (2140051 '=' i[2140001] tmp_x0[2320946])
          }
          {
            (2140062 '<=' i[2140001] _ic__F1_high[2306362])
          }
          {
            (2140066 '+=' i[2140001] 1)
          }
        }
        label _endchpl_direct_param_stride_range_iter[2140191]
        label _endchpl_direct_counted_range_iter_helper[2140202]
        label _endchpl_direct_counted_range_iter[2140213]
        label _endthese[2140224]
        val coerce_tmp[2140235]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2140237 'move' coerce_tmp[2140235](2140239 'cast' object[22] asTaskErr[2139465]))
        const-val call_tmp[2140242]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        val tmp[2385912]:__wide_object[2337724] "temp"
        (2385915 'move' tmp[2385912] nil[44])
        (2140244 'move' call_tmp[2140242](2140246 'ptr_neq' coerce_tmp[2140235] tmp[2385912]))
        if call_tmp[2140242]
        {
          (2140252 call deinit[168786] asTaskErr[2139465])
          const-val call_tmp[2140256]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
          (2140258 'move' call_tmp[2140256](2140260 '_wide_get_locale' asTaskErr[2139465]))
          val isdirect[2140265]:bool[10] "temp"
          (2140267 'move' isdirect[2140265](2140270 call chpl_doDirectExecuteOn[187423] call_tmp[2140256]))
          if isdirect[2140265]
          {
            (2140275 call on_fn[1240145] asTaskErr[2139465])
          }
          {
            val _args_foron_fn[2140278]:_class_localson_fn[2041367] "temp"
            (2140280 'move' _args_foron_fn[2140278](2140282 'stack allocate class' _class_localson_fn[2041367]))
            (2140284 '.=' _args_foron_fn[2140278] _0_tmp[2041370] call_tmp[2140256])
            (2140288 '.=' _args_foron_fn[2140278] _1_arg[2041372] asTaskErr[2139465])
            val _args_vforon_fn[2140292]:c_void_ptr[149] "temp"
            (2140294 'move' _args_vforon_fn[2140292](2140296 'cast_to_void_star' _args_foron_fn[2140278]))
            val _args_sizeon_fn[2140298]:int(64)[13] "temp"
            (2140300 'move' _args_sizeon_fn[2140298](2140302 'sizeof_bundle' _class_localson_fn[2041367]))
            on(2140305 call wrapon_fn[2041401] call_tmp[2140256] _args_vforon_fn[2140292] _args_sizeon_fn[2140298] _args_foron_fn[2140278])
          }
        }
      }
      (2140313 '=' cur[2138404] curnext[2139371])
      val coerce_tmp[2140316]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2140318 'move' coerce_tmp[2140316](2140320 'cast' object[22] curnext[2139371]))
      const-val call_tmp[2140323]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2385918]:__wide_object[2337724] "temp"
      (2385921 'move' tmp[2385918] nil[44])
      (2140325 'move' call_tmp[2140323](2140327 'ptr_neq' coerce_tmp[2140316] tmp[2385918]))
      (2140330 'move' tmp[2139325] call_tmp[2140323])
      tmp[2139325]
    }
    (1240932 return initTemp[1240893])
  }
  function _new[1718905](const in arg err[1718914]:Error[167938]) : TaskErrors[169656] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    const-val local__str_literal_4777[2336795]:string[26] "temp"
    (2336796 'move' "casting int(64) less than 0 to uint(64)" "casting int(64) less than 0 to uint(64)")
    val initTemp[1718907]:TaskErrors[169656] "dead after last mention" "temp"
    const-val call_tmp[1718949]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1718952 'move' call_tmp[1718949](1718961 'sizeof_bundle' TaskErrors[169656]))
    const-val cast_tmp[1718964]:c_void_ptr[149] "dead after last mention" "temp"
    (1718966 'move' cast_tmp[1718964](1718920 call chpl_here_alloc[187742] call_tmp[1718949] 41))
    (1718923 'move' initTemp[1718907](1718968 'cast' TaskErrors[169656] cast_tmp[1718964]))
    (1718925 'setcid' initTemp[1718907])
    val super_tmp[2140356]:Error[167938] "dead after last mention" "temporary of super field" "temp"
    val tmp[2385924]:Error[167938] "temp"
    (2140358 'move' tmp[2385924](2140360 '.v' initTemp[1718907] super[355620]))
    (2385927 'move' super_tmp[2140356] tmp[2385924])
    val super_tmp[2140363]:object[22] "dead after last mention" "temporary of super field" "temp"
    val tmp[2385930]:object[22] "temp"
    (2140365 'move' tmp[2385930](2140367 '.v' super_tmp[2140356] super[355608]))
    (2385933 'move' super_tmp[2140363] tmp[2385930])
    (2140370 'setcid' super_tmp[2140363])
    val call_tmp[2140372]:object[22] "dead at end of block" "maybe param" "temp"
    (2140374 'move' call_tmp[2140372](2140376 'cast' object[22] super_tmp[2140356]))
    (2140379 'setcid' call_tmp[2140372])
    val init_coerce_tmp[2140381]:Error[167938] "dead after last mention" "temp"
    (2140383 'move' init_coerce_tmp[2140381](2140385 'cast' Error[167938] nil[44]))
    val tmp[2385936]:__wide_Error[2337829] "temp"
    (2385939 'move' tmp[2385936] init_coerce_tmp[2140381])
    (2140388 '.=' super_tmp[2140356] _next[167866] tmp[2385936])
    (2140392 '.=' super_tmp[2140356] thrownLine[167871] 0)
    (2140396 '.=' super_tmp[2140356] thrownFileId[167879] 0)
    val tmp[2140400]:string[26] "dead after last mention" "temp"
    (2140403 call init[30760] tmp[2140400])
    (2140405 '.=' super_tmp[2140356] _msg[167884] tmp[2140400])
    (2140409 '.=' super_tmp[2140356] _hasThrowInfo[167890] 0)
    (2140413 'setcid' super_tmp[2140356])
    val call_tmp[2140415]:Error[167938] "dead at end of block" "maybe param" "temp"
    (2140417 'move' call_tmp[2140415](2140419 'cast' Error[167938] initTemp[1718907]))
    (2140422 'setcid' call_tmp[2140415])
    (2140424 '.=' initTemp[1718907] nErrors[168317] 1)
    const-val call_tmp[2140433]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2140435 'move' call_tmp[2140433](2140437 '<' 1 0))
    if call_tmp[2140433]
    {
      (2140443 call safeCastCheckHalt[210127] "casting int(64) less than 0 to uint(64)")
    }
    const-val call_tmp[2140446]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2140448 'move' call_tmp[2140446](2140450 'cast' uint(64)[115] 1))
    const-val call_tmp[2140453]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2140455 'move' call_tmp[2140453](2140458 call sizeof[1238400] owned Error?[966324]))
    const-val call_tmp[2140460]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2140462 'move' call_tmp[2140460](2140464 '*' call_tmp[2140446] call_tmp[2140453]))
    const-val call_tmp[2140467]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2140469 'move' call_tmp[2140467](2140472 call offset_ARRAY_ELEMENTS[207390]))
    const-val call_tmp[2140473]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2140475 'move' call_tmp[2140473](2140478 call chpl_here_calloc[1238430] call_tmp[2140460] 1 call_tmp[2140467]))
    val call_tmp[2140482]:c_ptr(owned Error?)[1235526] "dead after last mention" "expr temp" "maybe param" "temp"
    (2140484 'move' call_tmp[2140482](2140486 'cast' c_ptr(owned Error?)[1235526] call_tmp[2140473]))
    (2140489 '.=' initTemp[1718907] errorsArray[168328] call_tmp[2140482])
    (2140493 'setcid' initTemp[1718907])
    val coerce_tmp[2140495]:Error[167938] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2140497 'move' coerce_tmp[2140495] err[1718914])
    val tmp[2140500]:Error[167938] "temp"
    (2140502 'move' tmp[2140500](2140504 'cast' Error[167938] nil[44]))
    val tmp[2385942]:__wide_Error[2337829] "temp"
    (2385945 'move' tmp[2385942] tmp[2140500])
    (2140507 '.=' coerce_tmp[2140495] _next[167866] tmp[2385942])
    val coerce_tmp[2140511]:c_ptr(owned Error?)[1235526] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2385948]:c_ptr(owned Error?)[1235526] "temp"
    (2140513 'move' tmp[2385948](2140515 '.v' initTemp[1718907] errorsArray[168328]))
    (2385951 'move' coerce_tmp[2140511] tmp[2385948])
    ref call_tmp[2140518]:owned Error?[966324] "dead after last mention" "maybe param" "temp"
    (2140520 'move' call_tmp[2140518](2140522 'array_get' coerce_tmp[2140511] 0))
    const-val tmp[2385954]:__wide_Error[2337829] "temp"
    (2385957 'move' tmp[2385954] err[1718914])
    (2140526 call retain[1238686] call_tmp[2140518] tmp[2385954])
    (1718944 return initTemp[1718907])
  }
  type TaskErrors[169656] val super[355620]:Error[167938] "super class" val nErrors[168317]:int(64)[13] "no doc" val errorsArray[168328]:c_ptr(owned Error?)[1235526] "no doc"
  function _local_chpl_error_type_name[2366701](const in arg err[2366703]:__wide_Error[2337829], ref arg _retArg[2366705]:string[26]) : void[4] "fn returns via _retArg" "local fn" "no doc" "resolved"
  {
    const-val call_tmp[2366708]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (2369578 'local_check' err[2366703] c"cannot access remote data in local block")
    const-val local_err[2369575]:Error[167938] "temp"
    (2369581 'move' local_err[2369575] err[2366703])
    (2366710 'move' call_tmp[2366708](2366712 'getcid' local_err[2369575]))
    const-val call_tmp[2366714]:c_string[19] "dead at end of block" "maybe param" "temp"
    (2366716 'move' call_tmp[2366714](2366718 'class name by id' call_tmp[2366708]))
    const-val nameS[2366720]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val error[2366722]:__wide_Error[2337829] "error variable" "temp"
    (2366724 'move' error[2366722] nil[44])
    const-val call_tmp[2366727]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2366729 'move' call_tmp[2366727](2366731 'string_length_bytes' call_tmp[2366714]))
    val errorExists[2366733]:bool[10] "temp"
    (2366735 'move' errorExists[2366733](2366737 '!=' error[2366722] nil[44]))
    if errorExists[2366733]
    {
      gotoErrorHandling handler[2366835] handler[2366835]
    }
    const-val ret[2366745]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[2366747]:c_ptr(uint(8))[937334] "dead after last mention" "expr temp" "maybe param" "temp"
    (2366749 'move' call_tmp[2366747](2366751 'cast' c_ptr(uint(8))[937334] call_tmp[2366714]))
    val error[2366754]:__wide_Error[2337829] "error variable" "temp"
    (2366756 'move' error[2366754] nil[44])
    const-val ret[2366759]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2366761]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2366763]:__wide_Error[2337829] "error variable" "temp"
    (2366765 'move' error[2366763] nil[44])
    const-val ret_tmp[2366768]:string[26] "temp"
    ref tmp[2403304]:__wide_Error[2337829] "temp"
    (2403308 'move' tmp[2403304](2403306 'set reference' error[2366763]))
    (2366771 call _local_decodeByteBuffer[2357078] call_tmp[2366747] call_tmp[2366727] strict[173646] tmp[2403304] ret_tmp[2366768])
    (2366777 'move' call_tmp[2366761] ret_tmp[2366768])
    val errorExists[2366780]:bool[10] "temp"
    (2366782 'move' errorExists[2366780](2366784 '!=' error[2366763] nil[44]))
    if errorExists[2366780]
    {
      (2366789 '=' error[2366754] error[2366763])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2366798] _endcreateStringWithNewBuffer[2366798]
    }
    (2366795 'move' ret[2366759] call_tmp[2366761])
    label _endcreateStringWithNewBuffer[2366798]
    val errorExists[2366800]:bool[10] "temp"
    (2366802 'move' errorExists[2366800](2366804 '!=' error[2366754] nil[44]))
    if errorExists[2366800]
    {
      (2366809 '=' error[2366722] error[2366754])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2366818] _endcreateStringWithNewBuffer[2366818]
    }
    (2366815 'move' ret[2366745] ret[2366759])
    label _endcreateStringWithNewBuffer[2366818]
    val errorExists[2366820]:bool[10] "temp"
    (2366822 'move' errorExists[2366820](2366824 '!=' error[2366722] nil[44]))
    if errorExists[2366820]
    {
      gotoErrorHandling handler[2366835] handler[2366835]
    }
    (2366832 'move' nameS[2366720] ret[2366745])
    label handler[2366835]
    val errorExists[2366837]:bool[10] "temp"
    (2366839 'move' errorExists[2366837](2366841 '!=' error[2366722] nil[44]))
    if errorExists[2366837]
    {
      (2366847 call _local_chpl_uncaught_error[2358159] error[2366722])
    }
    label _end_chpl_error_type_name[2366850]
    (2366852 '=' _retArg[2366705] nameS[2366720])
    (2366855 return _void[55])
  }
  function chpl_error_type_name[169706](const in arg err[169703]:__wide_Error[2337829], ref arg _retArg[1788001]:string[26]) : void[4] "fn returns via _retArg" "no doc" "resolved"
  {
    const-val call_tmp[680128]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (680131 'move' call_tmp[680128](169728 'getcid' err[169703]))
    const-val call_tmp[680133]:c_string[19] "dead at end of block" "maybe param" "temp"
    (680136 'move' call_tmp[680133](169754 'class name by id' call_tmp[680128]))
    const-val nameS[169760]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val error[1766583]:__wide_Error[2337829] "error variable" "temp"
    (1766599 'move' error[1766583] nil[44])
    const-val call_tmp[2150159]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2150161 'move' call_tmp[2150159](2150163 'string_length_bytes' call_tmp[680133]))
    val errorExists[2054677]:bool[10] "temp"
    (2054682 'move' errorExists[2054677](2054679 '!=' error[1766583] nil[44]))
    if errorExists[2054677]
    {
      gotoErrorHandling handler[1766584] handler[1766584]
    }
    const-val ret[2086949]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[2086951]:c_ptr(uint(8))[937334] "dead after last mention" "expr temp" "maybe param" "temp"
    (2086953 'move' call_tmp[2086951](2086955 'cast' c_ptr(uint(8))[937334] call_tmp[680133]))
    val error[2086960]:__wide_Error[2337829] "error variable" "temp"
    (2086962 'move' error[2086960] nil[44])
    const-val ret[2086965]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2086967]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2086969]:__wide_Error[2337829] "error variable" "temp"
    (2086971 'move' error[2086969] nil[44])
    const-val ret_tmp[2086974]:string[26] "temp"
    ref tmp[2382699]:__wide_Error[2337829] "temp"
    (2382703 'move' tmp[2382699](2382701 'set reference' error[2086969]))
    (2086977 call decodeByteBuffer[173892] call_tmp[2086951] call_tmp[2150159] strict[173646] tmp[2382699] ret_tmp[2086974])
    (2086983 'move' call_tmp[2086967] ret_tmp[2086974])
    val errorExists[2086986]:bool[10] "temp"
    (2086988 'move' errorExists[2086986](2086990 '!=' error[2086969] nil[44]))
    if errorExists[2086986]
    {
      (2086995 '=' error[2086960] error[2086969])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2087004] _endcreateStringWithNewBuffer[2087004]
    }
    (2087001 'move' ret[2086965] call_tmp[2086967])
    label _endcreateStringWithNewBuffer[2087004]
    val errorExists[2087009]:bool[10] "temp"
    (2087011 'move' errorExists[2087009](2087013 '!=' error[2086960] nil[44]))
    if errorExists[2087009]
    {
      (2087018 '=' error[1766583] error[2086960])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2087027] _endcreateStringWithNewBuffer[2087027]
    }
    (2087024 'move' ret[2086949] ret[2086965])
    label _endcreateStringWithNewBuffer[2087027]
    val errorExists[2054685]:bool[10] "temp"
    (2054690 'move' errorExists[2054685](2054687 '!=' error[1766583] nil[44]))
    if errorExists[2054685]
    {
      gotoErrorHandling handler[1766584] handler[1766584]
    }
    (544548 'move' nameS[169760] ret[2086949])
    label handler[1766584]
    val errorExists[2054693]:bool[10] "temp"
    (2054698 'move' errorExists[2054693](2054695 '!=' error[1766583] nil[44]))
    if errorExists[2054693]
    {
      (1766605 call chpl_uncaught_error[170243] error[1766583])
    }
    label _end_chpl_error_type_name[522138]
    (1788003 '=' _retArg[1788001] nameS[169760])
    (1788005 return _void[55])
  }
  function _local_chpl_describe_error[2362211](const in arg err[2362213]:__wide_Error[2337829], ref arg _retArg[2362215]:string[26]) : void[4] "fn returns via _retArg" "local fn" "no doc" "resolved"
  {
    const-val local__str_literal_1782[2362218]:string[26] "temp"
    (2362220 'move' local__str_literal_1782[2362218] ": ")
    const-val call_tmp[2362223]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[2362225]:string[26] "temp"
    (2362228 call _local_chpl_error_type_name[2366701] err[2362213] ret_tmp[2362225])
    (2362231 'move' call_tmp[2362223] ret_tmp[2362225])
    const-val nameS[2362234]:string[26] "dead at end of block" "insert auto destroy"
    (2362236 'move' nameS[2362234] call_tmp[2362223])
    const-val call_tmp[2362239]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2362241]:string[26] "temp"
    wide-ref tmp[2402671]:string[26] "temp"
    (2402675 'move' tmp[2402671](2402673 'set reference' local__str_literal_1782[2362218]))
    (2362244 call _local_+[2354152] nameS[2362234] tmp[2402671] ret_tmp[2362241])
    (2362248 'move' call_tmp[2362239] ret_tmp[2362241])
    const-val call_tmp[2362251]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    val _virtual_method_tmp_[2362253]:int(32)[95] "temp"
    (2366863 'local_check' err[2362213] c"cannot access remote data in local block")
    const-val local_err[2366860]:Error[167938] "temp"
    (2366866 'move' local_err[2366860] err[2362213])
    (2362255 'move' _virtual_method_tmp_[2362253](2362257 'getcid' local_err[2366860]))
    val ret_tmp[2362259]:string[26] "temp"
    ref tmp[2402678]:string[26] "temp"
    (2402682 'move' tmp[2402678](2402681 'set reference' ret_tmp[2362259]))
    wide-ref tmp[2402685]:string[26] "temp"
    (2402688 'move' tmp[2402685] tmp[2402678])
    (2362261 'virtual method call' message[167929] _virtual_method_tmp_[2362253] err[2362213] tmp[2402685])
    (2362266 'move' call_tmp[2362251] ret_tmp[2362259])
    const-val call_tmp[2362269]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[2362271]:string[26] "temp"
    wide-ref tmp[2402691]:string[26] "temp"
    (2402695 'move' tmp[2402691](2402693 'set reference' call_tmp[2362251]))
    (2362274 call _local_+[2354152] call_tmp[2362239] tmp[2402691] ret_tmp[2362271])
    (2362278 'move' call_tmp[2362269] ret_tmp[2362271])
    ref i_x[2362281]:string[26] "temp"
    (2362283 'move' i_x[2362281](2362285 'set reference' call_tmp[2362251]))
    wide-ref tmp[2402698]:string[26] "temp"
    (2402701 'move' tmp[2402698] i_x[2362281])
    (2362288 call _local_deinit[2348042] tmp[2402698])
    ref i_x[2362290]:string[26] "temp"
    (2362292 'move' i_x[2362290](2362294 'set reference' call_tmp[2362239]))
    wide-ref tmp[2402704]:string[26] "temp"
    (2402707 'move' tmp[2402704] i_x[2362290])
    (2362297 call _local_deinit[2348042] tmp[2402704])
    ref i_x[2362299]:string[26] "temp"
    (2362301 'move' i_x[2362299](2362303 'set reference' nameS[2362234]))
    wide-ref tmp[2402710]:string[26] "temp"
    (2402713 'move' tmp[2402710] i_x[2362299])
    (2362306 call _local_deinit[2348042] tmp[2402710])
    label _end_chpl_describe_error[2362308]
    (2362310 '=' _retArg[2362215] call_tmp[2362269])
    (2362313 return _void[55])
  }
  function chpl_describe_error[169789](const in arg err[169786]:__wide_Error[2337829], ref arg _retArg[1788031]:string[26]) : void[4] "fn returns via _retArg" "no doc" "resolved"
  {
    const-val local__str_literal_1782[2334184]:string[26] "temp"
    (2334185 'move' ": " ": ")
    const-val call_tmp[680143]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1787995]:string[26] "temp"
    (169795 call chpl_error_type_name[169706] err[169786] ret_tmp[1787995])
    (1787998 'move' call_tmp[680143] ret_tmp[1787995])
    const-val nameS[169796]:string[26] "dead at end of block" "insert auto destroy"
    (544551 'move' nameS[169796] call_tmp[680143])
    const-val call_tmp[680148]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1786733]:string[26] "temp"
    wide-ref tmp[2370822]:string[26] "temp"
    (2370826 'move' tmp[2370822](2370824 'set reference' ": "))
    (169803 call +[38342] nameS[169796] tmp[2370822] ret_tmp[1786733])
    (1786736 'move' call_tmp[680148] ret_tmp[1786733])
    const-val call_tmp[680155]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    val _virtual_method_tmp_[1759532]:int(32)[95] "temp"
    (1759536 'move' _virtual_method_tmp_[1759532](1759534 'getcid' err[169786]))
    val ret_tmp[1787947]:string[26] "temp"
    ref tmp[2370829]:string[26] "temp"
    (2370833 'move' tmp[2370829](2370832 'set reference' ret_tmp[1787947]))
    wide-ref tmp[2370836]:string[26] "temp"
    (2370839 'move' tmp[2370836] tmp[2370829])
    (169810 'virtual method call' message[167929] _virtual_method_tmp_[1759532] err[169786] tmp[2370836])
    (1787950 'move' call_tmp[680155] ret_tmp[1787947])
    const-val call_tmp[680160]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1786739]:string[26] "temp"
    wide-ref tmp[2370842]:string[26] "temp"
    (2370846 'move' tmp[2370842](2370844 'set reference' call_tmp[680155]))
    (169811 call +[38342] call_tmp[680148] tmp[2370842] ret_tmp[1786739])
    (1786742 'move' call_tmp[680160] ret_tmp[1786739])
    ref i_x[2076042]:string[26] "temp"
    (2076046 'move' i_x[2076042](2076044 'set reference' call_tmp[680155]))
    wide-ref tmp[2381271]:string[26] "temp"
    (2381274 'move' tmp[2381271] i_x[2076042])
    (2076050 call deinit[30831] tmp[2381271])
    ref i_x[2076054]:string[26] "temp"
    (2076058 'move' i_x[2076054](2076056 'set reference' call_tmp[680148]))
    wide-ref tmp[2381277]:string[26] "temp"
    (2381280 'move' tmp[2381277] i_x[2076054])
    (2076062 call deinit[30831] tmp[2381277])
    ref i_x[2076066]:string[26] "temp"
    (2076070 'move' i_x[2076066](2076068 'set reference' nameS[169796]))
    wide-ref tmp[2381283]:string[26] "temp"
    (2381286 'move' tmp[2381283] i_x[2076066])
    (2076074 call deinit[30831] tmp[2381283])
    label _end_chpl_describe_error[522150]
    (1788033 '=' _retArg[1788031] call_tmp[680160])
    (1788035 return _void[55])
  }
  function _local_chpl_do_fix_thrown_error[2365689](const in arg err[2365691]:__wide_Error[2337829]) : __wide_Error[2337829] "always propagate line file info" "insert line file info" "local fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_129[2365694]:string[26] "temp"
    (2365696 'move' local__str_literal_129[2365694] "argument to ! is nil")
    val fixErr[2365699]:__wide_Error[2337829] "dead at end of block" "insert auto destroy"
    (2365701 'move' fixErr[2365699] err[2365691])
    val coerce_tmp[2365704]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2365706 'move' coerce_tmp[2365704](2365708 'cast' object[22] err[2365691]))
    const-val call_tmp[2365711]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2403112]:__wide_object[2337724] "temp"
    (2403115 'move' tmp[2403112] nil[44])
    (2365713 'move' call_tmp[2365711](2365715 'ptr_eq' coerce_tmp[2365704] tmp[2403112]))
    if call_tmp[2365711]
    {
      val new_temp[2365720]:NilThrownError[167983] "dead after last mention" "temp"
      (2365722 'move' new_temp[2365720](2365725 call _local__new[2368862]))
      val tmp[2365726]:Error[167938] "temp"
      (2365728 'move' tmp[2365726](2365730 'cast' Error[167938] new_temp[2365720]))
      (2365733 '=' fixErr[2365699] tmp[2365726])
    }
    const-val call_tmp[2365737]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (2365739 'move' call_tmp[2365737](2365741 '_get_user_line'))
    const-val call_tmp[2365742]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (2365744 'move' call_tmp[2365742](2365746 '_get_user_file'))
    val coerce_tmp[2365747]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2365749 'move' coerce_tmp[2365747](2365751 'cast' object[22] fixErr[2365699]))
    const-val call_tmp[2365754]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2403118]:__wide_object[2337724] "temp"
    (2403121 'move' tmp[2403118] nil[44])
    (2365756 'move' call_tmp[2365754](2365758 'ptr_eq' coerce_tmp[2365747] tmp[2403118]))
    if call_tmp[2365754]
    {
      (2365764 call _local_nilCheckHalt[2348427] local__str_literal_129[2365694])
    }
    val coerce_tmp[2365767]:__wide_Error[2337829] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2365769 'move' coerce_tmp[2365767] fixErr[2365699])
    const-val coerce_tmp[2365772]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2368966 'local_check' coerce_tmp[2365767] c"cannot access remote data in local block")
    val local_coerce_tmp[2368963]:Error[167938] "temp"
    (2368969 'move' local_coerce_tmp[2368963] coerce_tmp[2365767])
    val tmp[2403124]:bool[10] "temp"
    (2365774 'move' tmp[2403124](2365776 '.v' local_coerce_tmp[2368963] _hasThrowInfo[167890]))
    (2403127 'move' coerce_tmp[2365772] tmp[2403124])
    const-val call_tmp[2365779]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2365781 'move' call_tmp[2365779](2365783 '!' coerce_tmp[2365772]))
    if call_tmp[2365779]
    {
      val coerce_tmp[2365787]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2365789 'move' coerce_tmp[2365787](2365791 'cast' object[22] fixErr[2365699]))
      const-val call_tmp[2365794]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2403130]:__wide_object[2337724] "temp"
      (2403133 'move' tmp[2403130] nil[44])
      (2365796 'move' call_tmp[2365794](2365798 'ptr_eq' coerce_tmp[2365787] tmp[2403130]))
      if call_tmp[2365794]
      {
        (2365804 call _local_nilCheckHalt[2348427] local__str_literal_129[2365694])
      }
      val coerce_tmp[2365807]:__wide_Error[2337829] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2365809 'move' coerce_tmp[2365807] fixErr[2365699])
      (2368976 'local_check' coerce_tmp[2365807] c"cannot access remote data in local block")
      val local_coerce_tmp[2368973]:Error[167938] "temp"
      (2368979 'move' local_coerce_tmp[2368973] coerce_tmp[2365807])
      (2365812 '.=' local_coerce_tmp[2368973] _hasThrowInfo[167890] 1)
      val coerce_tmp[2365816]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2365818 'move' coerce_tmp[2365816](2365820 'cast' object[22] fixErr[2365699]))
      const-val call_tmp[2365823]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2403136]:__wide_object[2337724] "temp"
      (2403139 'move' tmp[2403136] nil[44])
      (2365825 'move' call_tmp[2365823](2365827 'ptr_eq' coerce_tmp[2365816] tmp[2403136]))
      if call_tmp[2365823]
      {
        (2365833 call _local_nilCheckHalt[2348427] local__str_literal_129[2365694])
      }
      val coerce_tmp[2365836]:__wide_Error[2337829] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2365838 'move' coerce_tmp[2365836] fixErr[2365699])
      (2368986 'local_check' coerce_tmp[2365836] c"cannot access remote data in local block")
      val local_coerce_tmp[2368983]:Error[167938] "temp"
      (2368989 'move' local_coerce_tmp[2368983] coerce_tmp[2365836])
      (2365841 '.=' local_coerce_tmp[2368983] thrownLine[167871] call_tmp[2365737])
      val coerce_tmp[2365845]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2365847 'move' coerce_tmp[2365845](2365849 'cast' object[22] fixErr[2365699]))
      const-val call_tmp[2365852]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2403142]:__wide_object[2337724] "temp"
      (2403145 'move' tmp[2403142] nil[44])
      (2365854 'move' call_tmp[2365852](2365856 'ptr_eq' coerce_tmp[2365845] tmp[2403142]))
      if call_tmp[2365852]
      {
        (2365862 call _local_nilCheckHalt[2348427] local__str_literal_129[2365694])
      }
      val coerce_tmp[2365865]:__wide_Error[2337829] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2365867 'move' coerce_tmp[2365865] fixErr[2365699])
      (2368996 'local_check' coerce_tmp[2365865] c"cannot access remote data in local block")
      val local_coerce_tmp[2368993]:Error[167938] "temp"
      (2368999 'move' local_coerce_tmp[2368993] coerce_tmp[2365865])
      (2365870 '.=' local_coerce_tmp[2368993] thrownFileId[167879] call_tmp[2365742])
    }
    label _end_chpl_do_fix_thrown_error[2365875]
    (2365877 return fixErr[2365699])
  }
  function chpl_do_fix_thrown_error[169831](const in arg err[169828]:__wide_Error[2337829]) : __wide_Error[2337829] "always propagate line file info" "insert line file info" "no doc" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_129[2334190]:string[26] "temp"
    (2334191 'move' "argument to ! is nil" "argument to ! is nil")
    val fixErr[169839]:__wide_Error[2337829] "dead at end of block" "insert auto destroy"
    (544555 'move' fixErr[169839] err[169828])
    val coerce_tmp[969397]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (969402 'move' coerce_tmp[969397](969399 'cast' object[22] err[169828]))
    const-val call_tmp[2058576]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2380575]:__wide_object[2337724] "temp"
    (2380578 'move' tmp[2380575] nil[44])
    (2058578 'move' call_tmp[2058576](2058580 'ptr_eq' coerce_tmp[969397] tmp[2380575]))
    if call_tmp[2058576]
    {
      val new_temp[969512]:NilThrownError[167983] "dead after last mention" "temp"
      (969514 'move' new_temp[969512](969444 call _new[969460]))
      val tmp[2341159]:Error[167938] "temp"
      (2341162 'move' tmp[2341159](2165389 'cast' Error[167938] new_temp[969512]))
      (2165387 '=' fixErr[169839] tmp[2341159])
    }
    const-val call_tmp[680180]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (680183 'move' call_tmp[680180](169881 '_get_user_line'))
    const-val call_tmp[680185]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (680188 'move' call_tmp[680185](169904 '_get_user_file'))
    val coerce_tmp[2121423]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2121425 'move' coerce_tmp[2121423](2121427 'cast' object[22] fixErr[169839]))
    const-val call_tmp[2121430]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2385702]:__wide_object[2337724] "temp"
    (2385705 'move' tmp[2385702] nil[44])
    (2121432 'move' call_tmp[2121430](2121434 'ptr_eq' coerce_tmp[2121423] tmp[2385702]))
    if call_tmp[2121430]
    {
      (2121440 call nilCheckHalt[210063] "argument to ! is nil")
    }
    val coerce_tmp[969636]:__wide_Error[2337829] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (969641 'move' coerce_tmp[969636] fixErr[169839])
    const-val coerce_tmp[969644]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2371265]:bool[10] "temp"
    (969648 'move' tmp[2371265](2323864 '.v' coerce_tmp[969636] _hasThrowInfo[167890]))
    (2371268 'move' coerce_tmp[969644] tmp[2371265])
    const-val call_tmp[2060244]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2060246 'move' call_tmp[2060244](2060248 '!' coerce_tmp[969644]))
    if call_tmp[2060244]
    {
      val coerce_tmp[2121446]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2121448 'move' coerce_tmp[2121446](2121450 'cast' object[22] fixErr[169839]))
      const-val call_tmp[2121453]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2385708]:__wide_object[2337724] "temp"
      (2385711 'move' tmp[2385708] nil[44])
      (2121455 'move' call_tmp[2121453](2121457 'ptr_eq' coerce_tmp[2121446] tmp[2385708]))
      if call_tmp[2121453]
      {
        (2121463 call nilCheckHalt[210063] "argument to ! is nil")
      }
      val coerce_tmp[969652]:__wide_Error[2337829] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (969657 'move' coerce_tmp[969652] fixErr[169839])
      (2323870 '.=' coerce_tmp[969652] _hasThrowInfo[167890] 1)
      val coerce_tmp[2121469]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2121471 'move' coerce_tmp[2121469](2121473 'cast' object[22] fixErr[169839]))
      const-val call_tmp[2121476]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2385714]:__wide_object[2337724] "temp"
      (2385717 'move' tmp[2385714] nil[44])
      (2121478 'move' call_tmp[2121476](2121480 'ptr_eq' coerce_tmp[2121469] tmp[2385714]))
      if call_tmp[2121476]
      {
        (2121486 call nilCheckHalt[210063] "argument to ! is nil")
      }
      val coerce_tmp[969662]:__wide_Error[2337829] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (969667 'move' coerce_tmp[969662] fixErr[169839])
      (2323876 '.=' coerce_tmp[969662] thrownLine[167871] call_tmp[680180])
      val coerce_tmp[2121492]:__wide_object[2337724] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2121494 'move' coerce_tmp[2121492](2121496 'cast' object[22] fixErr[169839]))
      const-val call_tmp[2121499]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2385720]:__wide_object[2337724] "temp"
      (2385723 'move' tmp[2385720] nil[44])
      (2121501 'move' call_tmp[2121499](2121503 'ptr_eq' coerce_tmp[2121492] tmp[2385720]))
      if call_tmp[2121499]
      {
        (2121509 call nilCheckHalt[210063] "argument to ! is nil")
      }
      val coerce_tmp[969672]:__wide_Error[2337829] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (969677 'move' coerce_tmp[969672] fixErr[169839])
      (2323882 '.=' coerce_tmp[969672] thrownFileId[167879] call_tmp[680185])
    }
    label _end_chpl_do_fix_thrown_error[522162]
    (522166 return fixErr[169839])
  }
  function _local_chpl_fix_thrown_error[2361501](const  ref arg err[2361503]:owned Error[966369]) : __wide_Error[2337829] "always propagate line file info" "ignore in global analysis" "insert line file info" "local fn" "no doc" "resolved" "ignore transfer errors"
  {
    val _formal_tmp_err[2361506]:owned Error[966369] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (2361508 'move' _formal_tmp_err[2361506] err[2361503])
    val call_tmp[2361511]:__wide_Error[2337829] "dead after last mention" "expr temp" "maybe param" "temp"
    (2361513 'move' call_tmp[2361511](2361516 call _local_release[2365634] _formal_tmp_err[2361506]))
    val call_tmp[2361518]:__wide_Error[2337829] "dead after last mention" "expr temp" "maybe param" "temp"
    (2361520 'move' call_tmp[2361518](2361523 call _local_chpl_do_fix_thrown_error[2365689] call_tmp[2361511]))
    (2361526 call _local_chpl__autoDestroy[2365881] _formal_tmp_err[2361506])
    (2361528 return call_tmp[2361518])
  }
  function chpl_fix_thrown_error[170003](const  ref arg err[170000]:owned Error[966369]) : __wide_Error[2337829] "always propagate line file info" "ignore in global analysis" "insert line file info" "no doc" "resolved" "ignore transfer errors"
  {
    val _formal_tmp_err[969364]:owned Error[966369] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (969367 'move' _formal_tmp_err[969364] err[170000])
    val call_tmp[680267]:__wide_Error[2337829] "dead after last mention" "expr temp" "maybe param" "temp"
    (680270 'move' call_tmp[680267](170013 call release[969109] _formal_tmp_err[969364]))
    val call_tmp[680272]:__wide_Error[2337829] "dead after last mention" "expr temp" "maybe param" "temp"
    (680275 'move' call_tmp[680272](170015 call chpl_do_fix_thrown_error[169831] call_tmp[680267]))
    (1798823 call chpl__autoDestroy[1501551] _formal_tmp_err[969364])
    (522188 return call_tmp[680272])
  }
  function chpl_delete_error[170217](const in arg err[170214]:Error[167938]) : void[4] "no doc" "resolved" "no return value for void"
  {
    val coerce_tmp[1718357]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1718362 'move' coerce_tmp[1718357](1718359 'cast' object[22] err[170214]))
    const-val call_tmp[2059666]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2059668 'move' call_tmp[2059666](2059670 'ptr_neq' coerce_tmp[1718357] nil[44]))
    if call_tmp[2059666]
    {
      val coerce_tmp[2227858]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2227860 'move' coerce_tmp[2227858](2227862 'cast' object[22] err[170214]))
      const-val call_tmp[2227865]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2227867 'move' call_tmp[2227865](2227869 'ptr_neq' coerce_tmp[2227858] nil[44]))
      if call_tmp[2227865]
      {
        val _virtual_method_tmp_[2227879]:int(32)[95] "temp"
        (2227881 'move' _virtual_method_tmp_[2227879](2227883 'getcid' err[170214]))
        val tmp[2391960]:__wide_Error[2337829] "temp"
        (2391963 'move' tmp[2391960] err[170214])
        (2227885 'virtual method call' deinit[811657] _virtual_method_tmp_[2227879] tmp[2391960])
        const-val call_tmp[2227891]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
        (2227893 'move' call_tmp[2227891](2227895 '_wide_get_locale' err[170214]))
        val isdirect[2227900]:bool[10] "temp"
        (2227902 'move' isdirect[2227900](2227905 call chpl_doDirectExecuteOn[187423] call_tmp[2227891]))
        if isdirect[2227900]
        {
          const-val tmp[2391966]:__wide_Error[2337829] "temp"
          (2391969 'move' tmp[2391966] err[170214])
          (2227910 call on_fn[1236353] tmp[2391966])
        }
        {
          val _args_foron_fn[2227913]:_class_localson_fn[2041282] "temp"
          (2227915 'move' _args_foron_fn[2227913](2227917 'stack allocate class' _class_localson_fn[2041282]))
          (2227919 '.=' _args_foron_fn[2227913] _0_tmp[2041285] call_tmp[2227891])
          val tmp[2391972]:__wide_Error[2337829] "temp"
          (2391975 'move' tmp[2391972] err[170214])
          (2227923 '.=' _args_foron_fn[2227913] _1_arg[2041287] tmp[2391972])
          val _args_vforon_fn[2227927]:c_void_ptr[149] "temp"
          (2227929 'move' _args_vforon_fn[2227927](2227931 'cast_to_void_star' _args_foron_fn[2227913]))
          val _args_sizeon_fn[2227933]:int(64)[13] "temp"
          (2227935 'move' _args_sizeon_fn[2227933](2227937 'sizeof_bundle' _class_localson_fn[2041282]))
          on(2227940 call wrapon_fn[2041316] call_tmp[2227891] _args_vforon_fn[2227927] _args_sizeon_fn[2227933] _args_foron_fn[2227913])
        }
      }
    }
    (522207 return _void[55])
  }
  function _local_chpl_uncaught_error[2358159](const in arg err[2358161]:__wide_Error[2337829]) : void[4] "always propagate line file info" "function terminates program" "insert line file info" "local fn" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val local__str_literal_4794[2358164]:string[26] "temp"
    (2358166 'move' local__str_literal_4794[2358164] "Cannot call .c_str() on a remote string")
    const-val local__str_literal_2261[2358169]:string[26] "temp"
    (2358171 'move' local__str_literal_2261[2358169] ": uncaught here")
    const-val local__str_literal_2259[2358174]:string[26] "temp"
    (2358176 'move' local__str_literal_2259[2358174] ": thrown here")
    const-val local__str_literal_2033[2358179]:string[26] "temp"
    (2358181 'move' local__str_literal_2033[2358179] ":")
    const-val local__str_literal_2257[2358184]:string[26] "temp"
    (2358186 'move' local__str_literal_2257[2358184] "\n  ")
    const-val local__str_literal_2255[2358189]:string[26] "temp"
    (2358191 'move' local__str_literal_2255[2358189] "uncaught ")
    const-val call_tmp[2358194]:int(32)[95] "dead at end of block" "expr temp" "maybe param" "temp"
    (2358196 'move' call_tmp[2358194](2358198 '_get_user_file'))
    const-val call_tmp[2358199]:c_string[19] "dead at end of block" "maybe param" "temp"
    (2358201 'move' call_tmp[2358199](2358203 'chpl_lookupFilename' call_tmp[2358194]))
    const-val myFileS[2358205]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val error[2358207]:__wide_Error[2337829] "error variable" "temp"
    (2358209 'move' error[2358207] nil[44])
    const-val call_tmp[2358212]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2358214 'move' call_tmp[2358212](2358216 'string_length_bytes' call_tmp[2358199]))
    val errorExists[2358218]:bool[10] "temp"
    (2358220 'move' errorExists[2358218](2358222 '!=' error[2358207] nil[44]))
    if errorExists[2358218]
    {
      gotoErrorHandling handler[2358320] handler[2358320]
    }
    const-val ret[2358230]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[2358232]:c_ptr(uint(8))[937334] "dead after last mention" "expr temp" "maybe param" "temp"
    (2358234 'move' call_tmp[2358232](2358236 'cast' c_ptr(uint(8))[937334] call_tmp[2358199]))
    val error[2358239]:__wide_Error[2337829] "error variable" "temp"
    (2358241 'move' error[2358239] nil[44])
    const-val ret[2358244]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2358246]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2358248]:__wide_Error[2337829] "error variable" "temp"
    (2358250 'move' error[2358248] nil[44])
    const-val ret_tmp[2358253]:string[26] "temp"
    ref tmp[2402066]:__wide_Error[2337829] "temp"
    (2402070 'move' tmp[2402066](2402068 'set reference' error[2358248]))
    (2358256 call _local_decodeByteBuffer[2357078] call_tmp[2358232] call_tmp[2358212] strict[173646] tmp[2402066] ret_tmp[2358253])
    (2358262 'move' call_tmp[2358246] ret_tmp[2358253])
    val errorExists[2358265]:bool[10] "temp"
    (2358267 'move' errorExists[2358265](2358269 '!=' error[2358248] nil[44]))
    if errorExists[2358265]
    {
      (2358274 '=' error[2358239] error[2358248])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2358283] _endcreateStringWithNewBuffer[2358283]
    }
    (2358280 'move' ret[2358244] call_tmp[2358246])
    label _endcreateStringWithNewBuffer[2358283]
    val errorExists[2358285]:bool[10] "temp"
    (2358287 'move' errorExists[2358285](2358289 '!=' error[2358239] nil[44]))
    if errorExists[2358285]
    {
      (2358294 '=' error[2358207] error[2358239])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2358303] _endcreateStringWithNewBuffer[2358303]
    }
    (2358300 'move' ret[2358230] ret[2358244])
    label _endcreateStringWithNewBuffer[2358303]
    val errorExists[2358305]:bool[10] "temp"
    (2358307 'move' errorExists[2358305](2358309 '!=' error[2358207] nil[44]))
    if errorExists[2358305]
    {
      gotoErrorHandling handler[2358320] handler[2358320]
    }
    (2358317 'move' myFileS[2358205] ret[2358230])
    label handler[2358320]
    val errorExists[2358322]:bool[10] "temp"
    (2358324 'move' errorExists[2358322](2358326 '!=' error[2358207] nil[44]))
    if errorExists[2358322]
    {
      (2358332 call _local_chpl_uncaught_error[2358159] error[2358207])
    }
    const-val call_tmp[2358335]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (2358337 'move' call_tmp[2358335](2358339 '_get_user_line'))
    val coerce_tmp[2358340]:__wide_Error[2337829] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (2358342 'move' coerce_tmp[2358340] err[2358161])
    wide-ref call_tmp[2358345]:int(32)[95] "dead after last mention" "maybe param" "temp"
    (2362194 'local_check' coerce_tmp[2358340] c"cannot access remote data in local block")
    val local_coerce_tmp[2362191]:Error[167938] "temp"
    (2362197 'move' local_coerce_tmp[2362191] coerce_tmp[2358340])
    (2358347 'move' call_tmp[2358345](2358349 '.' local_coerce_tmp[2362191] thrownFileId[167879]))
    const-val call_tmp[2358352]:c_string[19] "dead at end of block" "maybe param" "temp"
    (2358354 'move' call_tmp[2358352](2358356 'chpl_lookupFilename' call_tmp[2358345]))
    const-val thrownFileS[2358358]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val error[2358360]:__wide_Error[2337829] "error variable" "temp"
    (2358362 'move' error[2358360] nil[44])
    const-val call_tmp[2358365]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2358367 'move' call_tmp[2358365](2358369 'string_length_bytes' call_tmp[2358352]))
    val errorExists[2358371]:bool[10] "temp"
    (2358373 'move' errorExists[2358371](2358375 '!=' error[2358360] nil[44]))
    if errorExists[2358371]
    {
      gotoErrorHandling handler[2358473] handler[2358473]
    }
    const-val ret[2358383]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[2358385]:c_ptr(uint(8))[937334] "dead after last mention" "expr temp" "maybe param" "temp"
    (2358387 'move' call_tmp[2358385](2358389 'cast' c_ptr(uint(8))[937334] call_tmp[2358352]))
    val error[2358392]:__wide_Error[2337829] "error variable" "temp"
    (2358394 'move' error[2358392] nil[44])
    const-val ret[2358397]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2358399]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2358401]:__wide_Error[2337829] "error variable" "temp"
    (2358403 'move' error[2358401] nil[44])
    const-val ret_tmp[2358406]:string[26] "temp"
    ref tmp[2402073]:__wide_Error[2337829] "temp"
    (2402077 'move' tmp[2402073](2402075 'set reference' error[2358401]))
    (2358409 call _local_decodeByteBuffer[2357078] call_tmp[2358385] call_tmp[2358365] strict[173646] tmp[2402073] ret_tmp[2358406])
    (2358415 'move' call_tmp[2358399] ret_tmp[2358406])
    val errorExists[2358418]:bool[10] "temp"
    (2358420 'move' errorExists[2358418](2358422 '!=' error[2358401] nil[44]))
    if errorExists[2358418]
    {
      (2358427 '=' error[2358392] error[2358401])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2358436] _endcreateStringWithNewBuffer[2358436]
    }
    (2358433 'move' ret[2358397] call_tmp[2358399])
    label _endcreateStringWithNewBuffer[2358436]
    val errorExists[2358438]:bool[10] "temp"
    (2358440 'move' errorExists[2358438](2358442 '!=' error[2358392] nil[44]))
    if errorExists[2358438]
    {
      (2358447 '=' error[2358360] error[2358392])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2358456] _endcreateStringWithNewBuffer[2358456]
    }
    (2358453 'move' ret[2358383] ret[2358397])
    label _endcreateStringWithNewBuffer[2358456]
    val errorExists[2358458]:bool[10] "temp"
    (2358460 'move' errorExists[2358458](2358462 '!=' error[2358360] nil[44]))
    if errorExists[2358458]
    {
      gotoErrorHandling handler[2358473] handler[2358473]
    }
    (2358470 'move' thrownFileS[2358358] ret[2358383])
    label handler[2358473]
    val errorExists[2358475]:bool[10] "temp"
    (2358477 'move' errorExists[2358475](2358479 '!=' error[2358360] nil[44]))
    if errorExists[2358475]
    {
      (2358485 call _local_chpl_uncaught_error[2358159] error[2358360])
    }
    val coerce_tmp[2358488]:__wide_Error[2337829] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (2358490 'move' coerce_tmp[2358488] err[2358161])
    const-val coerce_tmp[2358493]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2362205 'local_check' coerce_tmp[2358488] c"cannot access remote data in local block")
    val local_coerce_tmp[2362202]:Error[167938] "temp"
    (2362208 'move' local_coerce_tmp[2362202] coerce_tmp[2358488])
    val tmp[2402080]:int(64)[13] "temp"
    (2358495 'move' tmp[2402080](2358497 '.v' local_coerce_tmp[2362202] thrownLine[167871]))
    (2402083 'move' coerce_tmp[2358493] tmp[2402080])
    (2358500 'noop')
    const-val call_tmp[2358501]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2358503]:string[26] "temp"
    (2358506 call _local_chpl_describe_error[2362211] err[2358161] ret_tmp[2358503])
    (2358509 'move' call_tmp[2358501] ret_tmp[2358503])
    const-val call_tmp[2358512]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2358514]:string[26] "temp"
    wide-ref tmp[2402086]:string[26] "temp"
    (2402090 'move' tmp[2402086](2402088 'set reference' call_tmp[2358501]))
    (2358517 call _local_+[2354152] local__str_literal_2255[2358189] tmp[2402086] ret_tmp[2358514])
    (2358521 'move' call_tmp[2358512] ret_tmp[2358514])
    const-val call_tmp[2358524]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2358526]:string[26] "temp"
    wide-ref tmp[2402093]:string[26] "temp"
    (2402097 'move' tmp[2402093](2402095 'set reference' local__str_literal_2257[2358184]))
    (2358529 call _local_+[2354152] call_tmp[2358512] tmp[2402093] ret_tmp[2358526])
    (2358533 'move' call_tmp[2358524] ret_tmp[2358526])
    const-val call_tmp[2358536]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2358538]:string[26] "temp"
    wide-ref tmp[2402100]:string[26] "temp"
    (2402104 'move' tmp[2402100](2402102 'set reference' thrownFileS[2358358]))
    (2358541 call _local_+[2354152] call_tmp[2358524] tmp[2402100] ret_tmp[2358538])
    (2358545 'move' call_tmp[2358536] ret_tmp[2358538])
    const-val call_tmp[2358548]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2358550]:string[26] "temp"
    wide-ref tmp[2402107]:string[26] "temp"
    (2402111 'move' tmp[2402107](2402109 'set reference' local__str_literal_2033[2358179]))
    (2358553 call _local_+[2354152] call_tmp[2358536] tmp[2402107] ret_tmp[2358550])
    (2358557 'move' call_tmp[2358548] ret_tmp[2358550])
    const-val call_tmp[2358560]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2358562]:string[26] "temp"
    (2358565 call _local__cast[2356396] coerce_tmp[2358493] ret_tmp[2358562])
    (2358568 'move' call_tmp[2358560] ret_tmp[2358562])
    const-val call_tmp[2358571]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2358573]:string[26] "temp"
    wide-ref tmp[2402114]:string[26] "temp"
    (2402118 'move' tmp[2402114](2402116 'set reference' call_tmp[2358560]))
    (2358576 call _local_+[2354152] call_tmp[2358548] tmp[2402114] ret_tmp[2358573])
    (2358580 'move' call_tmp[2358571] ret_tmp[2358573])
    const-val call_tmp[2358583]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2358585]:string[26] "temp"
    wide-ref tmp[2402121]:string[26] "temp"
    (2402125 'move' tmp[2402121](2402123 'set reference' local__str_literal_2259[2358174]))
    (2358588 call _local_+[2354152] call_tmp[2358571] tmp[2402121] ret_tmp[2358585])
    (2358592 'move' call_tmp[2358583] ret_tmp[2358585])
    const-val call_tmp[2358595]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2358597]:string[26] "temp"
    wide-ref tmp[2402128]:string[26] "temp"
    (2402132 'move' tmp[2402128](2402130 'set reference' local__str_literal_2257[2358184]))
    (2358600 call _local_+[2354152] call_tmp[2358583] tmp[2402128] ret_tmp[2358597])
    (2358604 'move' call_tmp[2358595] ret_tmp[2358597])
    const-val call_tmp[2358607]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2358609]:string[26] "temp"
    wide-ref tmp[2402135]:string[26] "temp"
    (2402139 'move' tmp[2402135](2402137 'set reference' myFileS[2358205]))
    (2358612 call _local_+[2354152] call_tmp[2358595] tmp[2402135] ret_tmp[2358609])
    (2358616 'move' call_tmp[2358607] ret_tmp[2358609])
    const-val call_tmp[2358619]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2358621]:string[26] "temp"
    wide-ref tmp[2402142]:string[26] "temp"
    (2402146 'move' tmp[2402142](2402144 'set reference' local__str_literal_2033[2358179]))
    (2358624 call _local_+[2354152] call_tmp[2358607] tmp[2402142] ret_tmp[2358621])
    (2358628 'move' call_tmp[2358619] ret_tmp[2358621])
    const-val call_tmp[2358631]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2358633]:string[26] "temp"
    (2358636 call _local__cast[2356396] call_tmp[2358335] ret_tmp[2358633])
    (2358639 'move' call_tmp[2358631] ret_tmp[2358633])
    const-val call_tmp[2358642]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2358644]:string[26] "temp"
    wide-ref tmp[2402149]:string[26] "temp"
    (2402153 'move' tmp[2402149](2402151 'set reference' call_tmp[2358631]))
    (2358647 call _local_+[2354152] call_tmp[2358619] tmp[2402149] ret_tmp[2358644])
    (2358651 'move' call_tmp[2358642] ret_tmp[2358644])
    const-val call_tmp[2358654]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[2358656]:string[26] "temp"
    wide-ref tmp[2402156]:string[26] "temp"
    (2402160 'move' tmp[2402156](2402158 'set reference' local__str_literal_2261[2358169]))
    (2358659 call _local_+[2354152] call_tmp[2358642] tmp[2402156] ret_tmp[2358656])
    (2358663 'move' call_tmp[2358654] ret_tmp[2358656])
    const-val s[2358666]:string[26] "dead at end of block" "insert auto destroy"
    (2358668 'move' s[2358666] call_tmp[2358654])
    const-val coerce_tmp[2358671]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2402163]:int(32)[95] "temp"
    (2358673 'move' tmp[2402163](2358675 '.v' s[2358666] locale_id[30754]))
    (2402166 'move' coerce_tmp[2358671] tmp[2402163])
    const-val call_tmp[2358678]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2358680 'move' call_tmp[2358678](2358682 '!=' coerce_tmp[2358671] chpl_nodeID[208152]))
    if call_tmp[2358678]
    {
      (2358688 call _local_halt[2345217] local__str_literal_4794[2358164])
    }
    val coerce_tmp[2358691]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2402169]:c_ptr(uint(8))[937334] "temp"
    (2358693 'move' tmp[2402169](2358695 '.v' s[2358666] buff[30737]))
    (2402172 'move' coerce_tmp[2358691] tmp[2402169])
    const-val call_tmp[2358698]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (2358700 'move' call_tmp[2358698](2358702 'cast' c_string[19] coerce_tmp[2358691]))
    (2358706 call chpl_error_preformatted[1718526] call_tmp[2358698])
    ref i_x[2358708]:string[26] "temp"
    (2358710 'move' i_x[2358708](2358712 'set reference' s[2358666]))
    wide-ref tmp[2402175]:string[26] "temp"
    (2402178 'move' tmp[2402175] i_x[2358708])
    (2358715 call _local_deinit[2348042] tmp[2402175])
    ref i_x[2358717]:string[26] "temp"
    (2358719 'move' i_x[2358717](2358721 'set reference' call_tmp[2358642]))
    wide-ref tmp[2402181]:string[26] "temp"
    (2402184 'move' tmp[2402181] i_x[2358717])
    (2358724 call _local_deinit[2348042] tmp[2402181])
    ref i_x[2358726]:string[26] "temp"
    (2358728 'move' i_x[2358726](2358730 'set reference' call_tmp[2358631]))
    wide-ref tmp[2402187]:string[26] "temp"
    (2402190 'move' tmp[2402187] i_x[2358726])
    (2358733 call _local_deinit[2348042] tmp[2402187])
    ref i_x[2358735]:string[26] "temp"
    (2358737 'move' i_x[2358735](2358739 'set reference' call_tmp[2358619]))
    wide-ref tmp[2402193]:string[26] "temp"
    (2402196 'move' tmp[2402193] i_x[2358735])
    (2358742 call _local_deinit[2348042] tmp[2402193])
    ref i_x[2358744]:string[26] "temp"
    (2358746 'move' i_x[2358744](2358748 'set reference' call_tmp[2358607]))
    wide-ref tmp[2402199]:string[26] "temp"
    (2402202 'move' tmp[2402199] i_x[2358744])
    (2358751 call _local_deinit[2348042] tmp[2402199])
    ref i_x[2358753]:string[26] "temp"
    (2358755 'move' i_x[2358753](2358757 'set reference' call_tmp[2358595]))
    wide-ref tmp[2402205]:string[26] "temp"
    (2402208 'move' tmp[2402205] i_x[2358753])
    (2358760 call _local_deinit[2348042] tmp[2402205])
    ref i_x[2358762]:string[26] "temp"
    (2358764 'move' i_x[2358762](2358766 'set reference' call_tmp[2358583]))
    wide-ref tmp[2402211]:string[26] "temp"
    (2402214 'move' tmp[2402211] i_x[2358762])
    (2358769 call _local_deinit[2348042] tmp[2402211])
    ref i_x[2358771]:string[26] "temp"
    (2358773 'move' i_x[2358771](2358775 'set reference' call_tmp[2358571]))
    wide-ref tmp[2402217]:string[26] "temp"
    (2402220 'move' tmp[2402217] i_x[2358771])
    (2358778 call _local_deinit[2348042] tmp[2402217])
    ref i_x[2358780]:string[26] "temp"
    (2358782 'move' i_x[2358780](2358784 'set reference' call_tmp[2358560]))
    wide-ref tmp[2402223]:string[26] "temp"
    (2402226 'move' tmp[2402223] i_x[2358780])
    (2358787 call _local_deinit[2348042] tmp[2402223])
    ref i_x[2358789]:string[26] "temp"
    (2358791 'move' i_x[2358789](2358793 'set reference' call_tmp[2358548]))
    wide-ref tmp[2402229]:string[26] "temp"
    (2402232 'move' tmp[2402229] i_x[2358789])
    (2358796 call _local_deinit[2348042] tmp[2402229])
    ref i_x[2358798]:string[26] "temp"
    (2358800 'move' i_x[2358798](2358802 'set reference' call_tmp[2358536]))
    wide-ref tmp[2402235]:string[26] "temp"
    (2402238 'move' tmp[2402235] i_x[2358798])
    (2358805 call _local_deinit[2348042] tmp[2402235])
    ref i_x[2358807]:string[26] "temp"
    (2358809 'move' i_x[2358807](2358811 'set reference' call_tmp[2358524]))
    wide-ref tmp[2402241]:string[26] "temp"
    (2402244 'move' tmp[2402241] i_x[2358807])
    (2358814 call _local_deinit[2348042] tmp[2402241])
    ref i_x[2358816]:string[26] "temp"
    (2358818 'move' i_x[2358816](2358820 'set reference' call_tmp[2358512]))
    wide-ref tmp[2402247]:string[26] "temp"
    (2402250 'move' tmp[2402247] i_x[2358816])
    (2358823 call _local_deinit[2348042] tmp[2402247])
    ref i_x[2358825]:string[26] "temp"
    (2358827 'move' i_x[2358825](2358829 'set reference' call_tmp[2358501]))
    wide-ref tmp[2402253]:string[26] "temp"
    (2402256 'move' tmp[2402253] i_x[2358825])
    (2358832 call _local_deinit[2348042] tmp[2402253])
    ref i_x[2358834]:string[26] "temp"
    (2358836 'move' i_x[2358834](2358838 'set reference' thrownFileS[2358358]))
    wide-ref tmp[2402259]:string[26] "temp"
    (2402262 'move' tmp[2402259] i_x[2358834])
    (2358841 call _local_deinit[2348042] tmp[2402259])
    ref i_x[2358843]:string[26] "temp"
    (2358845 'move' i_x[2358843](2358847 'set reference' myFileS[2358205]))
    wide-ref tmp[2402265]:string[26] "temp"
    (2402268 'move' tmp[2402265] i_x[2358843])
    (2358850 call _local_deinit[2348042] tmp[2402265])
    (2358852 return _void[55])
  }
  function chpl_uncaught_error[170243](const in arg err[170240]:__wide_Error[2337829]) : void[4] "always propagate line file info" "function terminates program" "insert line file info" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val local__str_literal_4794[2334231]:string[26] "temp"
    (2334232 'move' "Cannot call .c_str() on a remote string" "Cannot call .c_str() on a remote string")
    const-val local__str_literal_2261[2334225]:string[26] "temp"
    (2334226 'move' ": uncaught here" ": uncaught here")
    const-val local__str_literal_2259[2334217]:string[26] "temp"
    (2334218 'move' ": thrown here" ": thrown here")
    const-val local__str_literal_2033[2334211]:string[26] "temp"
    (2334212 'move' ":" ":")
    const-val local__str_literal_2257[2334205]:string[26] "temp"
    (2334206 'move' "\n  " "\n  ")
    const-val local__str_literal_2255[2334199]:string[26] "temp"
    (2334200 'move' "uncaught " "uncaught ")
    const-val call_tmp[680337]:int(32)[95] "dead at end of block" "expr temp" "maybe param" "temp"
    (680340 'move' call_tmp[680337](170275 '_get_user_file'))
    const-val call_tmp[680342]:c_string[19] "dead at end of block" "maybe param" "temp"
    (680345 'move' call_tmp[680342](170276 'chpl_lookupFilename' call_tmp[680337]))
    const-val myFileS[170282]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val error[1766616]:__wide_Error[2337829] "error variable" "temp"
    (1766632 'move' error[1766616] nil[44])
    const-val call_tmp[2150181]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2150183 'move' call_tmp[2150181](2150185 'string_length_bytes' call_tmp[680342]))
    val errorExists[2054701]:bool[10] "temp"
    (2054706 'move' errorExists[2054701](2054703 '!=' error[1766616] nil[44]))
    if errorExists[2054701]
    {
      gotoErrorHandling handler[1766617] handler[1766617]
    }
    const-val ret[2087047]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[2087049]:c_ptr(uint(8))[937334] "dead after last mention" "expr temp" "maybe param" "temp"
    (2087051 'move' call_tmp[2087049](2087053 'cast' c_ptr(uint(8))[937334] call_tmp[680342]))
    val error[2087058]:__wide_Error[2337829] "error variable" "temp"
    (2087060 'move' error[2087058] nil[44])
    const-val ret[2087063]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2087065]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2087067]:__wide_Error[2337829] "error variable" "temp"
    (2087069 'move' error[2087067] nil[44])
    const-val ret_tmp[2087072]:string[26] "temp"
    ref tmp[2382706]:__wide_Error[2337829] "temp"
    (2382710 'move' tmp[2382706](2382708 'set reference' error[2087067]))
    (2087075 call decodeByteBuffer[173892] call_tmp[2087049] call_tmp[2150181] strict[173646] tmp[2382706] ret_tmp[2087072])
    (2087081 'move' call_tmp[2087065] ret_tmp[2087072])
    val errorExists[2087084]:bool[10] "temp"
    (2087086 'move' errorExists[2087084](2087088 '!=' error[2087067] nil[44]))
    if errorExists[2087084]
    {
      (2087093 '=' error[2087058] error[2087067])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2087102] _endcreateStringWithNewBuffer[2087102]
    }
    (2087099 'move' ret[2087063] call_tmp[2087065])
    label _endcreateStringWithNewBuffer[2087102]
    val errorExists[2087107]:bool[10] "temp"
    (2087109 'move' errorExists[2087107](2087111 '!=' error[2087058] nil[44]))
    if errorExists[2087107]
    {
      (2087116 '=' error[1766616] error[2087058])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2087125] _endcreateStringWithNewBuffer[2087125]
    }
    (2087122 'move' ret[2087047] ret[2087063])
    label _endcreateStringWithNewBuffer[2087125]
    val errorExists[2054709]:bool[10] "temp"
    (2054714 'move' errorExists[2054709](2054711 '!=' error[1766616] nil[44]))
    if errorExists[2054709]
    {
      gotoErrorHandling handler[1766617] handler[1766617]
    }
    (544578 'move' myFileS[170282] ret[2087047])
    label handler[1766617]
    val errorExists[2054717]:bool[10] "temp"
    (2054722 'move' errorExists[2054717](2054719 '!=' error[1766616] nil[44]))
    if errorExists[2054717]
    {
      (1766638 call chpl_uncaught_error[170243] error[1766616])
    }
    const-val call_tmp[680352]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (680355 'move' call_tmp[680352](170300 '_get_user_line'))
    val coerce_tmp[1718400]:__wide_Error[2337829] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1718405 'move' coerce_tmp[1718400] err[170240])
    wide-ref call_tmp[2161303]:int(32)[95] "dead after last mention" "maybe param" "temp"
    (2161305 'move' call_tmp[2161303](2161307 '.' coerce_tmp[1718400] thrownFileId[167879]))
    const-val call_tmp[680364]:c_string[19] "dead at end of block" "maybe param" "temp"
    (680367 'move' call_tmp[680364](170312 'chpl_lookupFilename' call_tmp[2161303]))
    const-val thrownFileS[170318]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val error[1766649]:__wide_Error[2337829] "error variable" "temp"
    (1766665 'move' error[1766649] nil[44])
    const-val call_tmp[2150203]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2150205 'move' call_tmp[2150203](2150207 'string_length_bytes' call_tmp[680364]))
    val errorExists[2054725]:bool[10] "temp"
    (2054730 'move' errorExists[2054725](2054727 '!=' error[1766649] nil[44]))
    if errorExists[2054725]
    {
      gotoErrorHandling handler[1766650] handler[1766650]
    }
    const-val ret[2087145]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[2087147]:c_ptr(uint(8))[937334] "dead after last mention" "expr temp" "maybe param" "temp"
    (2087149 'move' call_tmp[2087147](2087151 'cast' c_ptr(uint(8))[937334] call_tmp[680364]))
    val error[2087156]:__wide_Error[2337829] "error variable" "temp"
    (2087158 'move' error[2087156] nil[44])
    const-val ret[2087161]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2087163]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2087165]:__wide_Error[2337829] "error variable" "temp"
    (2087167 'move' error[2087165] nil[44])
    const-val ret_tmp[2087170]:string[26] "temp"
    ref tmp[2382713]:__wide_Error[2337829] "temp"
    (2382717 'move' tmp[2382713](2382715 'set reference' error[2087165]))
    (2087173 call decodeByteBuffer[173892] call_tmp[2087147] call_tmp[2150203] strict[173646] tmp[2382713] ret_tmp[2087170])
    (2087179 'move' call_tmp[2087163] ret_tmp[2087170])
    val errorExists[2087182]:bool[10] "temp"
    (2087184 'move' errorExists[2087182](2087186 '!=' error[2087165] nil[44]))
    if errorExists[2087182]
    {
      (2087191 '=' error[2087156] error[2087165])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2087200] _endcreateStringWithNewBuffer[2087200]
    }
    (2087197 'move' ret[2087161] call_tmp[2087163])
    label _endcreateStringWithNewBuffer[2087200]
    val errorExists[2087205]:bool[10] "temp"
    (2087207 'move' errorExists[2087205](2087209 '!=' error[2087156] nil[44]))
    if errorExists[2087205]
    {
      (2087214 '=' error[1766649] error[2087156])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2087223] _endcreateStringWithNewBuffer[2087223]
    }
    (2087220 'move' ret[2087145] ret[2087161])
    label _endcreateStringWithNewBuffer[2087223]
    val errorExists[2054733]:bool[10] "temp"
    (2054738 'move' errorExists[2054733](2054735 '!=' error[1766649] nil[44]))
    if errorExists[2054733]
    {
      gotoErrorHandling handler[1766650] handler[1766650]
    }
    (544596 'move' thrownFileS[170318] ret[2087145])
    label handler[1766650]
    val errorExists[2054741]:bool[10] "temp"
    (2054746 'move' errorExists[2054741](2054743 '!=' error[1766649] nil[44]))
    if errorExists[2054741]
    {
      (1766671 call chpl_uncaught_error[170243] error[1766649])
    }
    val coerce_tmp[1718442]:__wide_Error[2337829] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1718447 'move' coerce_tmp[1718442] err[170240])
    const-val coerce_tmp[1718452]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val tmp[2374585]:int(64)[13] "temp"
    (1718456 'move' tmp[2374585](2323897 '.v' coerce_tmp[1718442] thrownLine[167871]))
    (2374588 'move' coerce_tmp[1718452] tmp[2374585])
    (544599 'noop')
    const-val call_tmp[680381]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1788025]:string[26] "temp"
    (170362 call chpl_describe_error[169789] err[170240] ret_tmp[1788025])
    (1788028 'move' call_tmp[680381] ret_tmp[1788025])
    const-val call_tmp[680386]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1786745]:string[26] "temp"
    wide-ref tmp[2370849]:string[26] "temp"
    (2370853 'move' tmp[2370849](2370851 'set reference' call_tmp[680381]))
    (170363 call +[38342] "uncaught " tmp[2370849] ret_tmp[1786745])
    (1786748 'move' call_tmp[680386] ret_tmp[1786745])
    const-val call_tmp[680391]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1786751]:string[26] "temp"
    wide-ref tmp[2370856]:string[26] "temp"
    (2370860 'move' tmp[2370856](2370858 'set reference' "\n  "))
    (170382 call +[38342] call_tmp[680386] tmp[2370856] ret_tmp[1786751])
    (1786754 'move' call_tmp[680391] ret_tmp[1786751])
    const-val call_tmp[680396]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1786757]:string[26] "temp"
    wide-ref tmp[2370863]:string[26] "temp"
    (2370867 'move' tmp[2370863](2370865 'set reference' thrownFileS[170318]))
    (170385 call +[38342] call_tmp[680391] tmp[2370863] ret_tmp[1786757])
    (1786760 'move' call_tmp[680396] ret_tmp[1786757])
    const-val call_tmp[680401]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1786763]:string[26] "temp"
    wide-ref tmp[2370870]:string[26] "temp"
    (2370874 'move' tmp[2370870](2370872 'set reference' ":"))
    (170388 call +[38342] call_tmp[680396] tmp[2370870] ret_tmp[1786763])
    (1786766 'move' call_tmp[680401] ret_tmp[1786763])
    const-val call_tmp[680406]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1789885]:string[26] "temp"
    (170392 call _cast[1063064] coerce_tmp[1718452] ret_tmp[1789885])
    (1789888 'move' call_tmp[680406] ret_tmp[1789885])
    const-val call_tmp[680411]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1786769]:string[26] "temp"
    wide-ref tmp[2370877]:string[26] "temp"
    (2370881 'move' tmp[2370877](2370879 'set reference' call_tmp[680406]))
    (170394 call +[38342] call_tmp[680401] tmp[2370877] ret_tmp[1786769])
    (1786772 'move' call_tmp[680411] ret_tmp[1786769])
    const-val call_tmp[680416]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1786775]:string[26] "temp"
    wide-ref tmp[2370884]:string[26] "temp"
    (2370888 'move' tmp[2370884](2370886 'set reference' ": thrown here"))
    (170413 call +[38342] call_tmp[680411] tmp[2370884] ret_tmp[1786775])
    (1786778 'move' call_tmp[680416] ret_tmp[1786775])
    const-val call_tmp[680421]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1786781]:string[26] "temp"
    wide-ref tmp[2370891]:string[26] "temp"
    (2370895 'move' tmp[2370891](2370893 'set reference' "\n  "))
    (170416 call +[38342] call_tmp[680416] tmp[2370891] ret_tmp[1786781])
    (1786784 'move' call_tmp[680421] ret_tmp[1786781])
    const-val call_tmp[680426]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1786787]:string[26] "temp"
    wide-ref tmp[2370898]:string[26] "temp"
    (2370902 'move' tmp[2370898](2370900 'set reference' myFileS[170282]))
    (170419 call +[38342] call_tmp[680421] tmp[2370898] ret_tmp[1786787])
    (1786790 'move' call_tmp[680426] ret_tmp[1786787])
    const-val call_tmp[680431]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1786793]:string[26] "temp"
    wide-ref tmp[2370905]:string[26] "temp"
    (2370909 'move' tmp[2370905](2370907 'set reference' ":"))
    (170422 call +[38342] call_tmp[680426] tmp[2370905] ret_tmp[1786793])
    (1786796 'move' call_tmp[680431] ret_tmp[1786793])
    const-val call_tmp[680436]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1789891]:string[26] "temp"
    (170426 call _cast[1063064] call_tmp[680352] ret_tmp[1789891])
    (1789894 'move' call_tmp[680436] ret_tmp[1789891])
    const-val call_tmp[680441]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1786799]:string[26] "temp"
    wide-ref tmp[2370912]:string[26] "temp"
    (2370916 'move' tmp[2370912](2370914 'set reference' call_tmp[680436]))
    (170428 call +[38342] call_tmp[680431] tmp[2370912] ret_tmp[1786799])
    (1786802 'move' call_tmp[680441] ret_tmp[1786799])
    const-val call_tmp[680446]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1786805]:string[26] "temp"
    wide-ref tmp[2370919]:string[26] "temp"
    (2370923 'move' tmp[2370919](2370921 'set reference' ": uncaught here"))
    (170447 call +[38342] call_tmp[680441] tmp[2370919] ret_tmp[1786805])
    (1786808 'move' call_tmp[680446] ret_tmp[1786805])
    const-val s[170449]:string[26] "dead at end of block" "insert auto destroy"
    (544601 'move' s[170449] call_tmp[680446])
    const-val coerce_tmp[2098316]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2384320]:int(32)[95] "temp"
    (2098318 'move' tmp[2384320](2098320 '.v' s[170449] locale_id[30754]))
    (2384323 'move' coerce_tmp[2098316] tmp[2384320])
    const-val call_tmp[2098323]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2098325 'move' call_tmp[2098323](2098327 '!=' coerce_tmp[2098316] chpl_nodeID[208152]))
    if call_tmp[2098323]
    {
      (2098333 call halt[154067] "Cannot call .c_str() on a remote string")
    }
    val coerce_tmp[2098336]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2384326]:c_ptr(uint(8))[937334] "temp"
    (2098338 'move' tmp[2384326](2098340 '.v' s[170449] buff[30737]))
    (2384329 'move' coerce_tmp[2098336] tmp[2384326])
    const-val call_tmp[2098343]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (2098345 'move' call_tmp[2098343](2098347 'cast' c_string[19] coerce_tmp[2098336]))
    (170461 call chpl_error_preformatted[1718526] call_tmp[2098343])
    ref i_x[2076078]:string[26] "temp"
    (2076082 'move' i_x[2076078](2076080 'set reference' s[170449]))
    wide-ref tmp[2381289]:string[26] "temp"
    (2381292 'move' tmp[2381289] i_x[2076078])
    (2076086 call deinit[30831] tmp[2381289])
    ref i_x[2076090]:string[26] "temp"
    (2076094 'move' i_x[2076090](2076092 'set reference' call_tmp[680441]))
    wide-ref tmp[2381295]:string[26] "temp"
    (2381298 'move' tmp[2381295] i_x[2076090])
    (2076098 call deinit[30831] tmp[2381295])
    ref i_x[2076102]:string[26] "temp"
    (2076106 'move' i_x[2076102](2076104 'set reference' call_tmp[680436]))
    wide-ref tmp[2381301]:string[26] "temp"
    (2381304 'move' tmp[2381301] i_x[2076102])
    (2076110 call deinit[30831] tmp[2381301])
    ref i_x[2076114]:string[26] "temp"
    (2076118 'move' i_x[2076114](2076116 'set reference' call_tmp[680431]))
    wide-ref tmp[2381307]:string[26] "temp"
    (2381310 'move' tmp[2381307] i_x[2076114])
    (2076122 call deinit[30831] tmp[2381307])
    ref i_x[2076126]:string[26] "temp"
    (2076130 'move' i_x[2076126](2076128 'set reference' call_tmp[680426]))
    wide-ref tmp[2381313]:string[26] "temp"
    (2381316 'move' tmp[2381313] i_x[2076126])
    (2076134 call deinit[30831] tmp[2381313])
    ref i_x[2076138]:string[26] "temp"
    (2076142 'move' i_x[2076138](2076140 'set reference' call_tmp[680421]))
    wide-ref tmp[2381319]:string[26] "temp"
    (2381322 'move' tmp[2381319] i_x[2076138])
    (2076146 call deinit[30831] tmp[2381319])
    ref i_x[2076150]:string[26] "temp"
    (2076154 'move' i_x[2076150](2076152 'set reference' call_tmp[680416]))
    wide-ref tmp[2381325]:string[26] "temp"
    (2381328 'move' tmp[2381325] i_x[2076150])
    (2076158 call deinit[30831] tmp[2381325])
    ref i_x[2076162]:string[26] "temp"
    (2076166 'move' i_x[2076162](2076164 'set reference' call_tmp[680411]))
    wide-ref tmp[2381331]:string[26] "temp"
    (2381334 'move' tmp[2381331] i_x[2076162])
    (2076170 call deinit[30831] tmp[2381331])
    ref i_x[2076174]:string[26] "temp"
    (2076178 'move' i_x[2076174](2076176 'set reference' call_tmp[680406]))
    wide-ref tmp[2381337]:string[26] "temp"
    (2381340 'move' tmp[2381337] i_x[2076174])
    (2076182 call deinit[30831] tmp[2381337])
    ref i_x[2076186]:string[26] "temp"
    (2076190 'move' i_x[2076186](2076188 'set reference' call_tmp[680401]))
    wide-ref tmp[2381343]:string[26] "temp"
    (2381346 'move' tmp[2381343] i_x[2076186])
    (2076194 call deinit[30831] tmp[2381343])
    ref i_x[2076198]:string[26] "temp"
    (2076202 'move' i_x[2076198](2076200 'set reference' call_tmp[680396]))
    wide-ref tmp[2381349]:string[26] "temp"
    (2381352 'move' tmp[2381349] i_x[2076198])
    (2076206 call deinit[30831] tmp[2381349])
    ref i_x[2076210]:string[26] "temp"
    (2076214 'move' i_x[2076210](2076212 'set reference' call_tmp[680391]))
    wide-ref tmp[2381355]:string[26] "temp"
    (2381358 'move' tmp[2381355] i_x[2076210])
    (2076218 call deinit[30831] tmp[2381355])
    ref i_x[2076222]:string[26] "temp"
    (2076226 'move' i_x[2076222](2076224 'set reference' call_tmp[680386]))
    wide-ref tmp[2381361]:string[26] "temp"
    (2381364 'move' tmp[2381361] i_x[2076222])
    (2076230 call deinit[30831] tmp[2381361])
    ref i_x[2076234]:string[26] "temp"
    (2076238 'move' i_x[2076234](2076236 'set reference' call_tmp[680381]))
    wide-ref tmp[2381367]:string[26] "temp"
    (2381370 'move' tmp[2381367] i_x[2076234])
    (2076242 call deinit[30831] tmp[2381367])
    ref i_x[2076246]:string[26] "temp"
    (2076250 'move' i_x[2076246](2076248 'set reference' thrownFileS[170318]))
    wide-ref tmp[2381373]:string[26] "temp"
    (2381376 'move' tmp[2381373] i_x[2076246])
    (2076254 call deinit[30831] tmp[2381373])
    ref i_x[2076258]:string[26] "temp"
    (2076262 'move' i_x[2076258](2076260 'set reference' myFileS[170282]))
    wide-ref tmp[2381379]:string[26] "temp"
    (2381382 'move' tmp[2381379] i_x[2076258])
    (2076266 call deinit[30831] tmp[2381379])
    (522211 return _void[55])
  }
  function _local_chpl_propagate_error[2360869](const in arg err[2360871]:__wide_Error[2337829]) : void[4] "always propagate line file info" "insert line file info" "local fn" "no doc" "resolved" "no return value for void"
  {
    (2360875 call _local_chpl_uncaught_error[2358159] err[2360871])
    (2360877 return _void[55])
  }
  function chpl_propagate_error[170472](const in arg err[170469]:__wide_Error[2337829]) : void[4] "always propagate line file info" "insert line file info" "no doc" "resolved" "no return value for void"
  {
    (170477 call chpl_uncaught_error[170243] err[170469])
    (522213 return _void[55])
  }
  function chpl_forall_error[170489](const in arg err[170486]:Error[167938]) : Error[167938] "no doc" "resolved"
  {
    val ret[522217]:Error[167938] "dead after last mention" "RVV" "temp"
    val _formal_type_tmp_[2290055]:TaskErrors[169656] "temp"
    val ret[2290057]:TaskErrors[169656] "dead after last mention" "RVV" "temp"
    val coerce_tmp[2290059]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2290061 'move' coerce_tmp[2290059](2290063 'cast' object[22] err[170486]))
    const-val call_tmp[2290066]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2290068 'move' call_tmp[2290066](2290070 'ptr_eq' coerce_tmp[2290059] nil[44]))
    if call_tmp[2290066]
    {
      (2290075 'move' ret[2290057](2290077 'cast' TaskErrors[169656] nil[44]))
      gotoReturn _end__cast[2290093] _end__cast[2290093]
    }
    val call_tmp[2290083]:TaskErrors[169656] "dead at end of block" "maybe param" "temp"
    (2290085 'move' call_tmp[2290083](2290087 'dynamic_cast' _formal_type_tmp_[2290055] err[170486]))
    (2290090 'move' ret[2290057] call_tmp[2290083])
    label _end__cast[2290093]
    val coerce_tmp[1718789]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1718794 'move' coerce_tmp[1718789](1718791 'cast' object[22] ret[2290057]))
    const-val call_tmp[2061428]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2061430 'move' call_tmp[2061428](2061432 'ptr_neq' coerce_tmp[1718789] nil[44]))
    if call_tmp[2061428]
    {
      (1718974 'move' ret[522217] err[170486])
      gotoReturn _end_chpl_forall_error[522215] _end_chpl_forall_error[522215]
    }
    val new_temp[1718955]:TaskErrors[169656] "dead after last mention" "temp"
    (1718957 'move' new_temp[1718955](1718801 call _new[1718905] err[170486]))
    (522229 'move' ret[522217](1718976 'cast' Error[167938] new_temp[1718955]))
    label _end_chpl_forall_error[522215]
    (522219 return ret[522217])
  }
  function chpl_enum_cast_error[1071766](const in arg casted[1071768]:uint(8)[100], const  ref arg enumName[1071770]:string[26], ref arg error_out[1768923]:__wide_Error[2337829]) : void[4] throws "always propagate line file info" "insert line file info" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_129[2335146]:string[26] "temp"
    (2335147 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local__str_literal_1107[2335140]:string[26] "temp"
    (2335141 'move' "'" "'")
    const-val local__str_literal_2267[2335134]:string[26] "temp"
    (2335135 'move' "' to enum '" "' to enum '")
    const-val local__str_literal_2269[2335128]:string[26] "temp"
    (2335129 'move' "bad cast from int '" "bad cast from int '")
    const-val call_tmp[1071776]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1790205]:string[26] "temp"
    (1071781 call _cast[1071830] casted[1071768] ret_tmp[1790205])
    (1790208 'move' call_tmp[1071776] ret_tmp[1790205])
    const-val call_tmp[1071784]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1786937]:string[26] "temp"
    wide-ref tmp[2372022]:string[26] "temp"
    (2372026 'move' tmp[2372022](2372024 'set reference' call_tmp[1071776]))
    (1071789 call +[38342] "bad cast from int '" tmp[2372022] ret_tmp[1786937])
    (1786940 'move' call_tmp[1071784] ret_tmp[1786937])
    const-val call_tmp[1071792]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1786943]:string[26] "temp"
    wide-ref tmp[2372029]:string[26] "temp"
    (2372033 'move' tmp[2372029](2372031 'set reference' "' to enum '"))
    (1071797 call +[38342] call_tmp[1071784] tmp[2372029] ret_tmp[1786943])
    (1786946 'move' call_tmp[1071792] ret_tmp[1786943])
    const-val call_tmp[1071800]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1786949]:string[26] "temp"
    wide-ref tmp[2372036]:string[26] "temp"
    (2372039 'move' tmp[2372036] enumName[1071770])
    (1071805 call +[38342] call_tmp[1071792] tmp[2372036] ret_tmp[1786949])
    (1786952 'move' call_tmp[1071800] ret_tmp[1786949])
    const-val call_tmp[1071808]:owned IllegalArgumentError[1064469] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
    val new_temp[1073466]:IllegalArgumentError[168200] "dead after last mention" "temp"
    (1073468 'move' new_temp[1073466](1073392 call _new[1073413] call_tmp[1071800] "'"))
    const-val initTemp[1073487]:owned IllegalArgumentError[1064469] "dead after last mention" "delay instantiation" "temp"
    (1073490 call init[1064120] initTemp[1073487] new_temp[1073466])
    (1071810 'move' call_tmp[1071808] initTemp[1073487])
    val call_tmp[1071818]:__wide_Error[2337829] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1073504]:owned Error[966369] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
    const-val ret_tmp[1790089]:owned Error[966369] "temp"
    ref i_x[2197429]:owned IllegalArgumentError[1064469] "temp"
    (2197433 'move' i_x[2197429](2197431 'set reference' call_tmp[1071808]))
    ref i__retArg[2197435]:owned Error[966369] "temp"
    (2197439 'move' i__retArg[2197435](2197437 'set reference' ret_tmp[1790089]))
    val _formal_tmp_x[2197442]:owned IllegalArgumentError[1064469] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (2197444 'move' _formal_tmp_x[2197442] i_x[2197429])
    const-val ret[2197447]:owned Error[966369] "dead after last mention" "RVV" "temp"
    ref i_this[2197449]:owned IllegalArgumentError[1064469] "temp"
    (2197451 'move' i_this[2197449](2197453 'set reference' _formal_tmp_x[2197442]))
    val coerce_tmp[2197455]:IllegalArgumentError[168200] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val tmp[2388252]:IllegalArgumentError[168200] "temp"
    (2197457 'move' tmp[2388252](2197459 '.v' i_this[2197449] chpl_p[1064464]))
    (2388255 'move' coerce_tmp[2197455] tmp[2388252])
    val call_tmp[2197462]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
    (2197464 'move' call_tmp[2197462](2197466 'cast' Error[167938] coerce_tmp[2197455]))
    ref i_this[2197474]:owned IllegalArgumentError[1064469] "temp"
    (2197476 'move' i_this[2197474](2197478 'set reference' _formal_tmp_x[2197442]))
    val tmp[2197480]:IllegalArgumentError[168200] "temp"
    (2197482 'move' tmp[2197480](2197484 'cast' IllegalArgumentError[168200] nil[44]))
    (2197487 '.=' i_this[2197474] chpl_p[1064464] tmp[2197480])
    val coerce_tmp[2197491]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2197493 'move' coerce_tmp[2197491](2197495 'cast' object[22] call_tmp[2197462]))
    const-val call_tmp[2197498]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2197500 'move' call_tmp[2197498](2197502 'ptr_eq' coerce_tmp[2197491] nil[44]))
    if call_tmp[2197498]
    {
      (2197508 call nilCheckHalt[210063] "argument to ! is nil")
    }
    const-val call_tmp[2197511]:owned Error[966369] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[2197513]:owned Error[966369] "dead after last mention" "delay instantiation" "temp"
    const-val tmp[2388258]:__wide_Error[2337829] "temp"
    (2388261 'move' tmp[2388258] call_tmp[2197462])
    (2197516 call init[968005] initTemp[2197513] tmp[2388258])
    (2197519 'move' call_tmp[2197511] initTemp[2197513])
    (2197522 'move' ret[2197447] call_tmp[2197511])
    (2197526 call chpl__autoDestroy[1571642] _formal_tmp_x[2197442])
    (2197530 '=' i__retArg[2197435] ret[2197447])
    (1790092 'move' coerce_tmp[1073504] ret_tmp[1790089])
    const-val _formal_tmp_in_err[1073683]:owned Error[966369] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (1073687 'move' _formal_tmp_in_err[1073683] coerce_tmp[1073504])
    (1071820 'move' call_tmp[1071818](1071823 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[1073683]))
    (1768936 '=' error_out[1768923] call_tmp[1071818])
    ref i_x[2077290]:string[26] "temp"
    (2077294 'move' i_x[2077290](2077292 'set reference' call_tmp[1071800]))
    wide-ref tmp[2381691]:string[26] "temp"
    (2381694 'move' tmp[2381691] i_x[2077290])
    (2077298 call deinit[30831] tmp[2381691])
    ref i_x[2077302]:string[26] "temp"
    (2077306 'move' i_x[2077302](2077304 'set reference' call_tmp[1071792]))
    wide-ref tmp[2381697]:string[26] "temp"
    (2381700 'move' tmp[2381697] i_x[2077302])
    (2077310 call deinit[30831] tmp[2381697])
    ref i_x[2077314]:string[26] "temp"
    (2077318 'move' i_x[2077314](2077316 'set reference' call_tmp[1071784]))
    wide-ref tmp[2381703]:string[26] "temp"
    (2381706 'move' tmp[2381703] i_x[2077314])
    (2077322 call deinit[30831] tmp[2381703])
    ref i_x[2077326]:string[26] "temp"
    (2077330 'move' i_x[2077326](2077328 'set reference' call_tmp[1071776]))
    wide-ref tmp[2381709]:string[26] "temp"
    (2381712 'move' tmp[2381709] i_x[2077326])
    (2077334 call deinit[30831] tmp[2381709])
    gotoErrorHandlingReturn _endchpl_enum_cast_error[1768925] _endchpl_enum_cast_error[1768925]
    label _endchpl_enum_cast_error[1768925]
    (1071827 return _void[55])
  }
  function _local_on_fn[2370288](wide-ref arg this[2370290]:chpl_TaskErrors[168302], const in arg err[2370292]:__wide_Error[2337829]) : void[4] "local fn" "on" "resolved"
  {
    wide-ref call_tmp[2370295]:chpl_LocalSpinlock[187386] "dead after last mention" "maybe param" "temp"
    (2370524 'local_check' this[2370290] c"cannot access remote data in local block")
    ref local_this[2370521]:chpl_TaskErrors[168302] "temp"
    (2370527 'move' local_this[2370521] this[2370290])
    (2370297 'move' call_tmp[2370295](2370299 '.' local_this[2370521] _errorsLock[168225]))
    const-val call_tmp[2370302]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    (2370304 'move' call_tmp[2370302](2370306 '_wide_get_locale' call_tmp[2370295]))
    val isdirect[2370308]:bool[10] "temp"
    (2370310 'move' isdirect[2370308](2370313 call _local_chpl_doDirectExecuteOn[2341227] call_tmp[2370302]))
    if isdirect[2370308]
    {
      (2370318 call _local_on_fn[2341252] call_tmp[2370295])
    }
    {
      val _args_foron_fn[2370321]:_class_localson_fn[2035137] "temp"
      (2370323 'move' _args_foron_fn[2370321](2370325 'stack allocate class' _class_localson_fn[2035137]))
      (2370327 '.=' _args_foron_fn[2370321] _0_tmp[2035140] call_tmp[2370302])
      wide-ref tmp[2370331]:chpl_LocalSpinlock[187386] "temp"
      (2370333 'move' tmp[2370331](2370335 'set reference' call_tmp[2370295]))
      (2370337 '.=' _args_foron_fn[2370321] _1_this[2035142] tmp[2370331])
      val _args_vforon_fn[2370341]:c_void_ptr[149] "temp"
      (2370343 'move' _args_vforon_fn[2370341](2370345 'cast_to_void_star' _args_foron_fn[2370321]))
      val _args_sizeon_fn[2370347]:int(64)[13] "temp"
      (2370349 'move' _args_sizeon_fn[2370347](2370351 'sizeof_bundle' _class_localson_fn[2035137]))
      on(2370354 call _local_wrapon_fn[2341651] call_tmp[2370302] _args_vforon_fn[2370341] _args_sizeon_fn[2370347] _args_foron_fn[2370321])
    }
    val coerce_tmp[2370360]:__wide_Error[2337829] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2370536 'local_check' this[2370290] c"cannot access remote data in local block")
    ref local_this[2370533]:chpl_TaskErrors[168302] "temp"
    (2370539 'move' local_this[2370533] this[2370290])
    (2370362 'move' coerce_tmp[2370360](2370364 '.v' local_this[2370533] _head[168220]))
    (2370367 'noop')
    val coerce_tmp[2370368]:__wide_Error[2337829] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2370370 'move' coerce_tmp[2370368] err[2370292])
    (2370545 'local_check' coerce_tmp[2370368] c"cannot access remote data in local block")
    val local_coerce_tmp[2370542]:Error[167938] "temp"
    (2370548 'move' local_coerce_tmp[2370542] coerce_tmp[2370368])
    (2370373 '.=' local_coerce_tmp[2370542] _next[167866] coerce_tmp[2370360])
    (2370554 'local_check' this[2370290] c"cannot access remote data in local block")
    ref local_this[2370551]:chpl_TaskErrors[168302] "temp"
    (2370557 'move' local_this[2370551] this[2370290])
    (2370377 '.=' local_this[2370551] _head[168220] err[2370292])
    wide-ref call_tmp[2370381]:chpl_LocalSpinlock[187386] "dead after last mention" "maybe param" "temp"
    (2370563 'local_check' this[2370290] c"cannot access remote data in local block")
    ref local_this[2370560]:chpl_TaskErrors[168302] "temp"
    (2370566 'move' local_this[2370560] this[2370290])
    (2370383 'move' call_tmp[2370381](2370385 '.' local_this[2370560] _errorsLock[168225]))
    wide-ref call_tmp[2370388]:AtomicBool[45874] "dead after last mention" "maybe param" "temp"
    (2370572 'local_check' call_tmp[2370381] c"cannot access remote data in local block")
    ref local_call_tmp[2370569]:chpl_LocalSpinlock[187386] "temp"
    (2370575 'move' local_call_tmp[2370569] call_tmp[2370381])
    (2370390 'move' call_tmp[2370388](2370392 '.' local_call_tmp[2370569] l[187271]))
    const-val call_tmp[2370395]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    (2370397 'move' call_tmp[2370395](2370399 '_wide_get_locale' call_tmp[2370388]))
    val isdirect[2370401]:bool[10] "temp"
    (2370403 'move' isdirect[2370401](2370406 call _local_chpl_doDirectExecuteOn[2341227] call_tmp[2370395]))
    if isdirect[2370401]
    {
      (2370411 call _local_on_fn[2341731] call_tmp[2370388] 0)
    }
    {
      val _args_foron_fn[2370415]:_class_localson_fn[2040774] "temp"
      (2370417 'move' _args_foron_fn[2370415](2370419 'stack allocate class' _class_localson_fn[2040774]))
      (2370421 '.=' _args_foron_fn[2370415] _0_tmp[2040777] call_tmp[2370395])
      wide-ref tmp[2370425]:AtomicBool[45874] "temp"
      (2370427 'move' tmp[2370425](2370429 'set reference' call_tmp[2370388]))
      (2370431 '.=' _args_foron_fn[2370415] _1_this[2040779] tmp[2370425])
      (2370435 '.=' _args_foron_fn[2370415] _2_value[2040781] 0)
      val _args_vforon_fn[2370439]:c_void_ptr[149] "temp"
      (2370441 'move' _args_vforon_fn[2370439](2370443 'cast_to_void_star' _args_foron_fn[2370415]))
      val _args_sizeon_fn[2370445]:int(64)[13] "temp"
      (2370447 'move' _args_sizeon_fn[2370445](2370449 'sizeof_bundle' _class_localson_fn[2040774]))
      on(2370452 call _local_wrapon_fn[2341770] call_tmp[2370395] _args_vforon_fn[2370439] _args_sizeon_fn[2370445] _args_foron_fn[2370415])
    }
    (2370458 return _void[55])
  }
  function on_fn[935249](wide-ref arg this[1765446]:chpl_TaskErrors[168302], const in arg err[1765448]:__wide_Error[2337829]) : void[4] "on" "resolved"
  {
    wide-ref call_tmp[2161620]:chpl_LocalSpinlock[187386] "dead after last mention" "maybe param" "temp"
    (2161622 'move' call_tmp[2161620](2161624 '.' this[1765446] _errorsLock[168225]))
    const-val call_tmp[2146547]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    (2146549 'move' call_tmp[2146547](2146551 '_wide_get_locale' call_tmp[2161620]))
    val isdirect[2146556]:bool[10] "temp"
    (2146558 'move' isdirect[2146556](2146561 call chpl_doDirectExecuteOn[187423] call_tmp[2146547]))
    if isdirect[2146556]
    {
      (2146566 call on_fn[935384] call_tmp[2161620])
    }
    {
      val _args_foron_fn[2146569]:_class_localson_fn[2035137] "temp"
      (2146571 'move' _args_foron_fn[2146569](2146573 'stack allocate class' _class_localson_fn[2035137]))
      (2146575 '.=' _args_foron_fn[2146569] _0_tmp[2035140] call_tmp[2146547])
      wide-ref tmp[2146579]:chpl_LocalSpinlock[187386] "temp"
      (2146581 'move' tmp[2146579](2146583 'set reference' call_tmp[2161620]))
      (2146585 '.=' _args_foron_fn[2146569] _1_this[2035142] tmp[2146579])
      val _args_vforon_fn[2146589]:c_void_ptr[149] "temp"
      (2146591 'move' _args_vforon_fn[2146589](2146593 'cast_to_void_star' _args_foron_fn[2146569]))
      val _args_sizeon_fn[2146595]:int(64)[13] "temp"
      (2146597 'move' _args_sizeon_fn[2146595](2146599 'sizeof_bundle' _class_localson_fn[2035137]))
      on(2146602 call wrapon_fn[2035177] call_tmp[2146547] _args_vforon_fn[2146589] _args_sizeon_fn[2146595] _args_foron_fn[2146569])
    }
    val coerce_tmp[1232314]:__wide_Error[2337829] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1232318 'move' coerce_tmp[1232314](2324601 '.v' this[1765446] _head[168220]))
    (544475 'noop')
    val coerce_tmp[1232321]:__wide_Error[2337829] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1232326 'move' coerce_tmp[1232321] err[1765448])
    (2324607 '.=' coerce_tmp[1232321] _next[167866] coerce_tmp[1232314])
    (2324613 '.=' this[1765446] _head[168220] err[1765448])
    wide-ref call_tmp[2161630]:chpl_LocalSpinlock[187386] "dead after last mention" "maybe param" "temp"
    (2161632 'move' call_tmp[2161630](2161634 '.' this[1765446] _errorsLock[168225]))
    wide-ref call_tmp[2147274]:AtomicBool[45874] "dead after last mention" "maybe param" "temp"
    (2147276 'move' call_tmp[2147274](2147278 '.' call_tmp[2161630] l[187271]))
    const-val call_tmp[2147288]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    (2147290 'move' call_tmp[2147288](2147292 '_wide_get_locale' call_tmp[2147274]))
    val isdirect[2147297]:bool[10] "temp"
    (2147299 'move' isdirect[2147297](2147302 call chpl_doDirectExecuteOn[187423] call_tmp[2147288]))
    if isdirect[2147297]
    {
      (2147307 call on_fn[1232993] call_tmp[2147274] 0)
    }
    {
      val _args_foron_fn[2147311]:_class_localson_fn[2040774] "temp"
      (2147313 'move' _args_foron_fn[2147311](2147315 'stack allocate class' _class_localson_fn[2040774]))
      (2147317 '.=' _args_foron_fn[2147311] _0_tmp[2040777] call_tmp[2147288])
      wide-ref tmp[2147321]:AtomicBool[45874] "temp"
      (2147323 'move' tmp[2147321](2147325 'set reference' call_tmp[2147274]))
      (2147327 '.=' _args_foron_fn[2147311] _1_this[2040779] tmp[2147321])
      (2147331 '.=' _args_foron_fn[2147311] _2_value[2040781] 0)
      val _args_vforon_fn[2147335]:c_void_ptr[149] "temp"
      (2147337 'move' _args_vforon_fn[2147335](2147339 'cast_to_void_star' _args_foron_fn[2147311]))
      val _args_sizeon_fn[2147341]:int(64)[13] "temp"
      (2147343 'move' _args_sizeon_fn[2147341](2147345 'sizeof_bundle' _class_localson_fn[2040774]))
      on(2147348 call wrapon_fn[2040820] call_tmp[2147288] _args_vforon_fn[2147335] _args_sizeon_fn[2147341] _args_foron_fn[2147311])
    }
    (935256 return _void[55])
  }
  function chpl_error_preformatted[1718526](const in arg c_string[1718528]:c_string[19]) : void[4] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "resolved" "no return value for void"
  {
    (1718534 return _void[55])
  }
  function _local_wrapon_fn[2370462](const in arg dummy_locale_arg[2370464]:chpl_localeID_t[209294], in arg buf[2370466]:c_void_ptr[149], in arg buf_size[2370468]:int(64)[13], in arg c[2370470]:_class_localson_fn[2034920]) : void[4] "local fn" "on block"
  {
    wide-ref _1_this[2370473]:chpl_TaskErrors[168302] "temp"
    (2370475 'move' _1_this[2370473](2370477 '.v' c[2370470] _1_this[2034925]))
    val _2_err[2370480]:__wide_Error[2337829] "temp"
    (2370482 'move' _2_err[2370480](2370484 '.v' c[2370470] _2_err[2034927]))
    (2370488 call _local_on_fn[2370288] _1_this[2370473] _2_err[2370480])
    (2370491 return _void[55])
  }
  function wrapon_fn[2034966](const in arg dummy_locale_arg[2034968]:chpl_localeID_t[209294], in arg buf[2034970]:c_void_ptr[149], in arg buf_size[2034972]:int(64)[13], in arg c[2034974]:_class_localson_fn[2034920]) : void[4] "on block"
  {
    wide-ref _1_this[2034986]:chpl_TaskErrors[168302] "temp"
    (2034991 'move' _1_this[2034986](2034988 '.v' c[2034974] _1_this[2034925]))
    val _2_err[2034994]:__wide_Error[2337829] "temp"
    (2034999 'move' _2_err[2034994](2034996 '.v' c[2034974] _2_err[2034927]))
    (2034977 call on_fn[935249] _1_this[2034986] _2_err[2034994])
    (2035002 return _void[55])
  }
}