AST dump for IO after pass bulkCopyRecords.
Module use list: ChapelStandard SysBasic SysCTypes SysError HaltWrappers FormattedIO 

{
  type _class_localson_fn[2161415] val _runtime_hdr[2161416]:chpl_comm_on_bundle_t[209359] val _0_tmp[2161418]:chpl_localeID_t[209352] ref _1_this[2161420]:channel(false,dynamic,false)[1080743]
  type _class_localson_fn[2161154] val _runtime_hdr[2161155]:chpl_comm_on_bundle_t[209359] val _0_tmp[2161157]:chpl_localeID_t[209352] ref _1_this[2161159]:channel(true,dynamic,false)[1061008]
  type _class_localson_fn[2160978] val _runtime_hdr[2160979]:chpl_comm_on_bundle_t[209359] val _0_tmp[2160981]:chpl_localeID_t[209352] ref _1_this[2160983]:channel(true,dynamic,true)[1021886]
  type _class_localson_fn[2159187] val _runtime_hdr[2159188]:chpl_comm_on_bundle_t[209359] val _0_tmp[2159190]:chpl_localeID_t[209352] ref _1_this[2159192]:channel(false,dynamic,true)[985688]
  type _class_localson_fn[2158198] val _runtime_hdr[2158199]:chpl_comm_on_bundle_t[209359] val _0_tmp[2158201]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2158203]:channel(true,dynamic,true)[1021886]
  type _class_localson_fn[2158053] val _runtime_hdr[2158054]:chpl_comm_on_bundle_t[209359] val _0_tmp[2158056]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2158058]:channel(true,dynamic,true)[1021886] ref _2_path[2158060]:string[26] ref _3_offset[2158062]:int(64)[13] ref _4_error[2158064]:Error[167984] "error variable"
  type _class_localson_fn[2157945] val _runtime_hdr[2157946]:chpl_comm_on_bundle_t[209359] val _0_tmp[2157948]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2157950]:channel(true,dynamic,true)[1021886] ref _2_err[2157952]:syserr[223605]
  type _class_localson_fn[2157805] val _runtime_hdr[2157806]:chpl_comm_on_bundle_t[209359] val _0_tmp[2157808]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2157810]:channel(true,dynamic,true)[1021886] ref _2_args[2157812]:(string,ioNewline)[1543605] val _3_rvfDerefTmp[2157814]:locale[28] ref _4_error[2157816]:Error[167984] "error variable"
  type _class_localson_fn[2153082] val _runtime_hdr[2153083]:chpl_comm_on_bundle_t[209359] val _0_tmp[2153085]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2153087]:channel(true,dynamic,false)[1061008] ref _2_args[2153089]:(string,codepointIndex,string,int(64))[1176581] val _3_rvfDerefTmp[2153091]:locale[28] ref _4_error[2153093]:Error[167984] "error variable"
  type _class_localson_fn[2152940] val _runtime_hdr[2152941]:chpl_comm_on_bundle_t[209359] val _0_tmp[2152943]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2152945]:channel(true,dynamic,false)[1061008] ref _2_args[2152947]:(string,codepointIndex,string)[1158616] val _3_rvfDerefTmp[2152949]:locale[28] ref _4_error[2152951]:Error[167984] "error variable"
  type _class_localson_fn[2152650] val _runtime_hdr[2152651]:chpl_comm_on_bundle_t[209359] val _0_tmp[2152653]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2152655]:channel(false,dynamic,false)[1080743] ref _2_path[2152657]:string[26] ref _3_offset[2152659]:int(64)[13] ref _4_error[2152661]:Error[167984] "error variable"
  type _class_localson_fn[2152542] val _runtime_hdr[2152543]:chpl_comm_on_bundle_t[209359] val _0_tmp[2152545]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2152547]:channel(false,dynamic,false)[1080743] ref _2_err[2152549]:syserr[223605]
  type _class_localson_fn[2152450] val _runtime_hdr[2152451]:chpl_comm_on_bundle_t[209359] val _0_tmp[2152453]:chpl_localeID_t[209352] ref _1_lhs[2152455]:channel(false,dynamic,false)[1080743]
  type _class_localson_fn[2152365] val _runtime_hdr[2152366]:chpl_comm_on_bundle_t[209359] val _0_tmp[2152368]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2152370]:channel(false,dynamic,false)[1080743]
  type _class_localson_fn[2152184] val _runtime_hdr[2152185]:chpl_comm_on_bundle_t[209359] val _0_tmp[2152187]:chpl_localeID_t[209352] val _1_hints[2152189]:int(32)[95] val _2_rvfDerefTmp[2152191]:iostyle[231865] val _3_start[2152193]:int(64)[13] val _4_rvfDerefTmp[2152195]:file[235601] ref _5__formal_tmp_error[2152197]:syserr[223605] val _6_end[2152199]:int(64)[13] ref _7_this[2152201]:channel(false,dynamic,false)[1080743]
  type _class_localson_fn[2151977] val _runtime_hdr[2151978]:chpl_comm_on_bundle_t[209359] val _0_tmp[2151980]:chpl_localeID_t[209352] val _1_end[2151982]:int(64)[13] val _2_rvfDerefTmp[2151984]:iostyle[231865] val _3_rvfDerefTmp[2151986]:file[235601] ref _4_err[2151988]:syserr[223605] val _5_hints[2151990]:int(32)[95] val _6_start[2151992]:int(64)[13] ref _7_ret[2151994]:channel(false,dynamic,false)[1080743] ref _8_error[2151996]:Error[167984] "error variable"
  type _class_localson_fn[2151865] val _runtime_hdr[2151866]:chpl_comm_on_bundle_t[209359] val _0_tmp[2151868]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2151870]:channel(true,dynamic,false)[1061008] ref _2_ret[2151872]:int(64)[13]
  type _class_localson_fn[2151725] val _runtime_hdr[2151726]:chpl_comm_on_bundle_t[209359] val _0_tmp[2151728]:chpl_localeID_t[209352] ref _1_this[2151730]:channel(true,dynamic,false)[1061008] val _2_x[2151732]:int(64)[13] val _3_rvfDerefTmp[2151734]:locale[28] ref _4_error[2151736]:Error[167984] "error variable"
  type _class_localson_fn[2151583] val _runtime_hdr[2151584]:chpl_comm_on_bundle_t[209359] val _0_tmp[2151586]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2151588]:channel(true,dynamic,false)[1061008] ref _2_args[2151590]:1*byteIndex[1057142] val _3_rvfDerefTmp[2151592]:locale[28] ref _4_error[2151594]:Error[167984] "error variable"
  type _class_localson_fn[2151429] val _runtime_hdr[2151430]:chpl_comm_on_bundle_t[209359] val _0_tmp[2151432]:chpl_localeID_t[209352] ref _1_this[2151434]:channel(true,dynamic,false)[1061008] ref _2_path[2151436]:string[26] ref _3_offset[2151438]:int(64)[13] ref _4_error[2151440]:Error[167984] "error variable"
  type _class_localson_fn[2151321] val _runtime_hdr[2151322]:chpl_comm_on_bundle_t[209359] val _0_tmp[2151324]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2151326]:channel(true,dynamic,false)[1061008] ref _2_err[2151328]:syserr[223605]
  type _class_localson_fn[2151229] val _runtime_hdr[2151230]:chpl_comm_on_bundle_t[209359] val _0_tmp[2151232]:chpl_localeID_t[209352] ref _1_lhs[2151234]:channel(true,dynamic,false)[1061008]
  type _class_localson_fn[2151144] val _runtime_hdr[2151145]:chpl_comm_on_bundle_t[209359] val _0_tmp[2151147]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2151149]:channel(true,dynamic,false)[1061008]
  type _class_localson_fn[2150963] val _runtime_hdr[2150964]:chpl_comm_on_bundle_t[209359] val _0_tmp[2150966]:chpl_localeID_t[209352] val _1_end[2150968]:int(64)[13] val _2_hints[2150970]:int(32)[95] val _3_rvfDerefTmp[2150972]:iostyle[231865] ref _4_this[2150974]:channel(true,dynamic,false)[1061008] val _5_start[2150976]:int(64)[13] val _6_rvfDerefTmp[2150978]:file[235601] ref _7__formal_tmp_error[2150980]:syserr[223605]
  type _class_localson_fn[2150756] val _runtime_hdr[2150757]:chpl_comm_on_bundle_t[209359] val _0_tmp[2150759]:chpl_localeID_t[209352] val _1_end[2150761]:int(64)[13] val _2_rvfDerefTmp[2150763]:iostyle[231865] val _3_rvfDerefTmp[2150765]:file[235601] ref _4_err[2150767]:syserr[223605] val _5_hints[2150769]:int(32)[95] val _6_start[2150771]:int(64)[13] ref _7_ret[2150773]:channel(true,dynamic,false)[1061008] ref _8_error[2150775]:Error[167984] "error variable"
  type _class_localson_fn[2150516] val _runtime_hdr[2150517]:chpl_comm_on_bundle_t[209359] val _0_tmp[2150519]:chpl_localeID_t[209352] ref _1_lhs[2150521]:channel(true,dynamic,true)[1021886]
  type _class_localson_fn[2150431] val _runtime_hdr[2150432]:chpl_comm_on_bundle_t[209359] val _0_tmp[2150434]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2150436]:channel(true,dynamic,true)[1021886]
  type _class_localson_fn[2150250] val _runtime_hdr[2150251]:chpl_comm_on_bundle_t[209359] val _0_tmp[2150253]:chpl_localeID_t[209352] ref _1_this[2150255]:channel(true,dynamic,true)[1021886] val _2_hints[2150257]:int(32)[95] val _3_rvfDerefTmp[2150259]:iostyle[231865] val _4_end[2150261]:int(64)[13] val _5_start[2150263]:int(64)[13] val _6_rvfDerefTmp[2150265]:file[235601] ref _7__formal_tmp_error[2150267]:syserr[223605]
  type _class_localson_fn[2150043] val _runtime_hdr[2150044]:chpl_comm_on_bundle_t[209359] val _0_tmp[2150046]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2150048]:file[235601] ref _2_ret[2150050]:channel(true,dynamic,true)[1021886] val _3_hints[2150052]:int(32)[95] ref _4_err[2150054]:syserr[223605] val _5_start[2150056]:int(64)[13] val _6_end[2150058]:int(64)[13] val _7_rvfDerefTmp[2150060]:iostyle[231865] ref _8_error[2150062]:Error[167984] "error variable"
  type _class_localson_fn[2149833] val _runtime_hdr[2149834]:chpl_comm_on_bundle_t[209359] val _0_tmp[2149836]:chpl_localeID_t[209352] ref _1_lhs[2149838]:channel(false,dynamic,true)[985688]
  type _class_localson_fn[2149748] val _runtime_hdr[2149749]:chpl_comm_on_bundle_t[209359] val _0_tmp[2149751]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2149753]:channel(false,dynamic,true)[985688]
  type _class_localson_fn[2149567] val _runtime_hdr[2149568]:chpl_comm_on_bundle_t[209359] val _0_tmp[2149570]:chpl_localeID_t[209352] val _1_start[2149572]:int(64)[13] val _2_rvfDerefTmp[2149574]:file[235601] ref _3__formal_tmp_error[2149576]:syserr[223605] val _4_end[2149578]:int(64)[13] val _5_hints[2149580]:int(32)[95] val _6_rvfDerefTmp[2149582]:iostyle[231865] ref _7_this[2149584]:channel(false,dynamic,true)[985688]
  type _class_localson_fn[2149360] val _runtime_hdr[2149361]:chpl_comm_on_bundle_t[209359] val _0_tmp[2149363]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2149365]:iostyle[231865] val _2_end[2149367]:int(64)[13] val _3_rvfDerefTmp[2149369]:file[235601] ref _4_ret[2149371]:channel(false,dynamic,true)[985688] val _5_hints[2149373]:int(32)[95] ref _6_err[2149375]:syserr[223605] val _7_start[2149377]:int(64)[13] ref _8_error[2149379]:Error[167984] "error variable"
  type _class_localson_fn[2149011] val _runtime_hdr[2149012]:chpl_comm_on_bundle_t[209359] val _0_tmp[2149014]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2149016]:file[235601] ref _2_err[2149018]:syserr[223605] ref _3_ret[2149020]:string[26] ref _4_error[2149022]:Error[167984] "error variable"
  type _class_localson_fn[2148903] val _runtime_hdr[2148904]:chpl_comm_on_bundle_t[209359] val _0_tmp[2148906]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2148908]:file[235601] ref _2_err[2148910]:syserr[223605]
  type _class_localson_fn[2148777] val _runtime_hdr[2148778]:chpl_comm_on_bundle_t[209359] val _0_tmp[2148780]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2148782]:file[235601] ref _2_ret[2148784]:iostyle[231865] ref _3_error[2148786]:Error[167984] "error variable"
  type _class_localson_fn[2148684] val _runtime_hdr[2148685]:chpl_comm_on_bundle_t[209359] val _0_tmp[2148687]:chpl_localeID_t[209352] ref _1_this[2148689]:file[235601]
  function chpl__init_IO[416156]() : void[4] "insert line file info" "module init" "resolved"
  {
    (546865 'move' IOHINT_NONE[231432] 0)
    (2146837 '_private_broadcast' IOHINT_NONE[231432])
    (546867 'move' IOHINT_RANDOM[231437] QIO_HINT_RANDOM[231384])
    (2146839 '_private_broadcast' IOHINT_RANDOM[231437])
    (546869 'move' IOHINT_SEQUENTIAL[231442] QIO_HINT_SEQUENTIAL[231389])
    (2146841 '_private_broadcast' IOHINT_SEQUENTIAL[231442])
    (546871 'move' IOHINT_CACHED[231447] QIO_HINT_CACHED[231404])
    (2146843 '_private_broadcast' IOHINT_CACHED[231447])
    (546873 'move' IOHINT_PARALLEL[231452] QIO_HINT_PARALLEL[231409])
    (2146845 '_private_broadcast' IOHINT_PARALLEL[231452])
    const-val ret_tmp[1865802]:6*string[985112] "temp"
    (246580 call _build_tuple[985038] "a" "b" "c" "d" "e" "f" ret_tmp[1865802])
    (1865805 'move' call_tmp[721926] ret_tmp[1865802])
    val tmp[2147112]:6*string[985278] "temp"
    (2147114 'move' tmp[2147112](985217 call chpl__initCopy[985219] call_tmp[721926]))
    (2147117 '.=' _arg_to_proto_names[246582] value[2147110] tmp[2147112])
    val type_tmp[547593]:channel(false,dynamic,true)[985688] "dead after last mention" "maybe param" "temp" "type variable"
    const-val coerce_tmp[985755]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (985761 'move' coerce_tmp[985755](985757 'cast' int(32)[95] 0))
    const-val default_arg_hints[985797]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    val error[1843128]:Error[167984] "error variable" "temp"
    (1843130 'move' error[1843128] nil[44])
    (985802 'move' default_arg_hints[985797](985799 call openfd_default_hints[985764] error[1843128]))
    val errorExists[2170124]:bool[10] "temp"
    (2170129 'move' errorExists[2170124](2170126 '!=' error[1843128] nil[44]))
    if errorExists[2170124]
    {
      (1843133 call chpl_propagate_error[170518] error[1843128])
    }
    const-val default_arg_style[985854]:iostyle[231865] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    val error[1843141]:Error[167984] "error variable" "temp"
    (1843143 'move' error[1843141] nil[44])
    (985859 'move' default_arg_style[985854](985856 call openfd_default_style[985806] error[1843141]))
    val errorExists[2170132]:bool[10] "temp"
    (2170137 'move' errorExists[2170132](2170134 '!=' error[1843141] nil[44]))
    if errorExists[2170132]
    {
      (1843146 call chpl_propagate_error[170518] error[1843141])
    }
    val error[1843154]:Error[167984] "error variable" "temp"
    (1843156 'move' error[1843154] nil[44])
    const-val ret_tmp[1865030]:file[235601] "temp"
    (250237 call openfd[237292] coerce_tmp[985755] default_arg_hints[985797] default_arg_style[985854] error[1843154] ret_tmp[1865030])
    (1865033 'move' call_tmp[724057] ret_tmp[1865030])
    val errorExists[2170140]:bool[10] "temp"
    (2170145 'move' errorExists[2170140](2170142 '!=' error[1843154] nil[44]))
    if errorExists[2170140]
    {
      (1843159 call chpl_propagate_error[170518] error[1843154])
    }
    val error[1843167]:Error[167984] "error variable" "temp"
    (1843169 'move' error[1843167] nil[44])
    (1016965 'move' default_arg_start[1016958](1016960 call reader_default_start[1016922] call_tmp[724057] error[1843167]))
    val errorExists[2170148]:bool[10] "temp"
    (2170153 'move' errorExists[2170148](2170150 '!=' error[1843167] nil[44]))
    if errorExists[2170148]
    {
      (1843172 call chpl_propagate_error[170518] error[1843167])
    }
    val error[1843180]:Error[167984] "error variable" "temp"
    (1843182 'move' error[1843180] nil[44])
    (1017029 'move' default_arg_end[1017022](1017024 call reader_default_end[1016969] call_tmp[724057] error[1843180]))
    val errorExists[2170156]:bool[10] "temp"
    (2170161 'move' errorExists[2170156](2170158 '!=' error[1843180] nil[44]))
    if errorExists[2170156]
    {
      (1843185 call chpl_propagate_error[170518] error[1843180])
    }
    val error[1843193]:Error[167984] "error variable" "temp"
    (1843195 'move' error[1843193] nil[44])
    (1017077 'move' default_arg_hints[1017070](1017072 call reader_default_hints[1017033] call_tmp[724057] error[1843193]))
    val errorExists[2170164]:bool[10] "temp"
    (2170169 'move' errorExists[2170164](2170166 '!=' error[1843193] nil[44]))
    if errorExists[2170164]
    {
      (1843198 call chpl_propagate_error[170518] error[1843193])
    }
    val error[1843206]:Error[167984] "error variable" "temp"
    (1843208 'move' error[1843206] nil[44])
    (1017655 'move' default_arg_style[1017648](1017650 call reader_default_style[1017081] call_tmp[724057] error[1843206]))
    val errorExists[2170172]:bool[10] "temp"
    (2170177 'move' errorExists[2170172](2170174 '!=' error[1843206] nil[44]))
    if errorExists[2170172]
    {
      (1843211 call chpl_propagate_error[170518] error[1843206])
    }
    val error[1843219]:Error[167984] "error variable" "temp"
    (1843221 'move' error[1843219] nil[44])
    const-val ret_tmp[1866138]:channel(false,dynamic,true)[985688] "temp"
    (250242 call reader[1016622] call_tmp[724057] default_arg_start[1016958] default_arg_end[1017022] default_arg_hints[1017070] default_arg_style[1017648] error[1843219] ret_tmp[1866138])
    (1866141 'move' call_tmp[724064] ret_tmp[1866138])
    val errorExists[2170180]:bool[10] "temp"
    (2170185 'move' errorExists[2170180](2170182 '!=' error[1843219] nil[44]))
    if errorExists[2170180]
    {
      (1843224 call chpl_propagate_error[170518] error[1843219])
    }
    (547605 'move' stdin[250229] call_tmp[724064])
    (2146847 '_private_broadcast' stdin[250229])
    val type_tmp[547608]:channel(true,dynamic,true)[1021886] "dead after last mention" "maybe param" "temp" "type variable"
    (724072 'move' call_tmp[724069](250264 call chpl_cstdout[223579]))
    const-val default_arg_hints[1021946]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    val error[1843232]:Error[167984] "error variable" "temp"
    (1843234 'move' error[1843232] nil[44])
    (1021951 'move' default_arg_hints[1021946](1021948 call openfp_default_hints[1021913] error[1843232]))
    val errorExists[2170188]:bool[10] "temp"
    (2170193 'move' errorExists[2170188](2170190 '!=' error[1843232] nil[44]))
    if errorExists[2170188]
    {
      (1843237 call chpl_propagate_error[170518] error[1843232])
    }
    const-val default_arg_style[1021975]:iostyle[231865] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    val error[1843245]:Error[167984] "error variable" "temp"
    (1843247 'move' error[1843245] nil[44])
    (1021980 'move' default_arg_style[1021975](1021977 call openfp_default_style[1021955] error[1843245]))
    val errorExists[2170196]:bool[10] "temp"
    (2170201 'move' errorExists[2170196](2170198 '!=' error[1843245] nil[44]))
    if errorExists[2170196]
    {
      (1843250 call chpl_propagate_error[170518] error[1843245])
    }
    val error[1843258]:Error[167984] "error variable" "temp"
    (1843260 'move' error[1843258] nil[44])
    const-val ret_tmp[1865044]:file[235601] "temp"
    (250266 call openfp[237421] call_tmp[724069] default_arg_hints[1021946] default_arg_style[1021975] error[1843258] ret_tmp[1865044])
    (1865047 'move' call_tmp[724074] ret_tmp[1865044])
    val errorExists[2170204]:bool[10] "temp"
    (2170209 'move' errorExists[2170204](2170206 '!=' error[1843258] nil[44]))
    if errorExists[2170204]
    {
      (1843263 call chpl_propagate_error[170518] error[1843258])
    }
    val error[1843271]:Error[167984] "error variable" "temp"
    (1843273 'move' error[1843271] nil[44])
    (1022540 'move' default_arg_start[1022533](1022535 call writer_default_start[1022497] call_tmp[724074] error[1843271]))
    val errorExists[2170212]:bool[10] "temp"
    (2170217 'move' errorExists[2170212](2170214 '!=' error[1843271] nil[44]))
    if errorExists[2170212]
    {
      (1843276 call chpl_propagate_error[170518] error[1843271])
    }
    val error[1843284]:Error[167984] "error variable" "temp"
    (1843286 'move' error[1843284] nil[44])
    (1022604 'move' default_arg_end[1022597](1022599 call writer_default_end[1022544] call_tmp[724074] error[1843284]))
    val errorExists[2170220]:bool[10] "temp"
    (2170225 'move' errorExists[2170220](2170222 '!=' error[1843284] nil[44]))
    if errorExists[2170220]
    {
      (1843289 call chpl_propagate_error[170518] error[1843284])
    }
    val error[1843297]:Error[167984] "error variable" "temp"
    (1843299 'move' error[1843297] nil[44])
    (1022655 'move' default_arg_hints[1022648](1022650 call writer_default_hints[1022608] call_tmp[724074] error[1843297]))
    val errorExists[2170228]:bool[10] "temp"
    (2170233 'move' errorExists[2170228](2170230 '!=' error[1843297] nil[44]))
    if errorExists[2170228]
    {
      (1843302 call chpl_propagate_error[170518] error[1843297])
    }
    val error[1843310]:Error[167984] "error variable" "temp"
    (1843312 'move' error[1843310] nil[44])
    (1022692 'move' default_arg_style[1022685](1022687 call writer_default_style[1022659] call_tmp[724074] error[1843310]))
    val errorExists[2170236]:bool[10] "temp"
    (2170241 'move' errorExists[2170236](2170238 '!=' error[1843310] nil[44]))
    if errorExists[2170236]
    {
      (1843315 call chpl_propagate_error[170518] error[1843310])
    }
    val error[1843323]:Error[167984] "error variable" "temp"
    (1843325 'move' error[1843323] nil[44])
    const-val ret_tmp[1866198]:channel(true,dynamic,true)[1021886] "temp"
    (250271 call writer[1022197] call_tmp[724074] default_arg_start[1022533] default_arg_end[1022597] default_arg_hints[1022648] default_arg_style[1022685] error[1843323] ret_tmp[1866198])
    (1866201 'move' call_tmp[724081] ret_tmp[1866198])
    val errorExists[2170244]:bool[10] "temp"
    (2170249 'move' errorExists[2170244](2170246 '!=' error[1843323] nil[44]))
    if errorExists[2170244]
    {
      (1843328 call chpl_propagate_error[170518] error[1843323])
    }
    (547620 'move' stdout[250256] call_tmp[724081])
    (2146849 '_private_broadcast' stdout[250256])
    val type_tmp[547623]:channel(true,dynamic,true)[1021886] "dead after last mention" "maybe param" "temp" "type variable"
    (724089 'move' call_tmp[724086](250293 call chpl_cstderr[223587]))
    const-val default_arg_hints[1023918]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    val error[1843336]:Error[167984] "error variable" "temp"
    (1843338 'move' error[1843336] nil[44])
    (1023923 'move' default_arg_hints[1023918](1023920 call openfp_default_hints[1021913] error[1843336]))
    val errorExists[2170252]:bool[10] "temp"
    (2170257 'move' errorExists[2170252](2170254 '!=' error[1843336] nil[44]))
    if errorExists[2170252]
    {
      (1843341 call chpl_propagate_error[170518] error[1843336])
    }
    const-val default_arg_style[1023927]:iostyle[231865] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    val error[1843349]:Error[167984] "error variable" "temp"
    (1843351 'move' error[1843349] nil[44])
    (1023932 'move' default_arg_style[1023927](1023929 call openfp_default_style[1021955] error[1843349]))
    val errorExists[2170260]:bool[10] "temp"
    (2170265 'move' errorExists[2170260](2170262 '!=' error[1843349] nil[44]))
    if errorExists[2170260]
    {
      (1843354 call chpl_propagate_error[170518] error[1843349])
    }
    val error[1843362]:Error[167984] "error variable" "temp"
    (1843364 'move' error[1843362] nil[44])
    const-val ret_tmp[1865050]:file[235601] "temp"
    (250295 call openfp[237421] call_tmp[724086] default_arg_hints[1023918] default_arg_style[1023927] error[1843362] ret_tmp[1865050])
    (1865053 'move' call_tmp[724091] ret_tmp[1865050])
    val errorExists[2170268]:bool[10] "temp"
    (2170273 'move' errorExists[2170268](2170270 '!=' error[1843362] nil[44]))
    if errorExists[2170268]
    {
      (1843367 call chpl_propagate_error[170518] error[1843362])
    }
    val error[1843375]:Error[167984] "error variable" "temp"
    (1843377 'move' error[1843375] nil[44])
    (1023976 'move' default_arg_start[1023969](1023971 call writer_default_start[1022497] call_tmp[724091] error[1843375]))
    val errorExists[2170276]:bool[10] "temp"
    (2170281 'move' errorExists[2170276](2170278 '!=' error[1843375] nil[44]))
    if errorExists[2170276]
    {
      (1843380 call chpl_propagate_error[170518] error[1843375])
    }
    val error[1843388]:Error[167984] "error variable" "temp"
    (1843390 'move' error[1843388] nil[44])
    (1023987 'move' default_arg_end[1023980](1023982 call writer_default_end[1022544] call_tmp[724091] error[1843388]))
    val errorExists[2170284]:bool[10] "temp"
    (2170289 'move' errorExists[2170284](2170286 '!=' error[1843388] nil[44]))
    if errorExists[2170284]
    {
      (1843393 call chpl_propagate_error[170518] error[1843388])
    }
    val error[1843401]:Error[167984] "error variable" "temp"
    (1843403 'move' error[1843401] nil[44])
    (1023998 'move' default_arg_hints[1023991](1023993 call writer_default_hints[1022608] call_tmp[724091] error[1843401]))
    val errorExists[2170292]:bool[10] "temp"
    (2170297 'move' errorExists[2170292](2170294 '!=' error[1843401] nil[44]))
    if errorExists[2170292]
    {
      (1843406 call chpl_propagate_error[170518] error[1843401])
    }
    val error[1843414]:Error[167984] "error variable" "temp"
    (1843416 'move' error[1843414] nil[44])
    (1024009 'move' default_arg_style[1024002](1024004 call writer_default_style[1022659] call_tmp[724091] error[1843414]))
    val errorExists[2170300]:bool[10] "temp"
    (2170305 'move' errorExists[2170300](2170302 '!=' error[1843414] nil[44]))
    if errorExists[2170300]
    {
      (1843419 call chpl_propagate_error[170518] error[1843414])
    }
    val error[1843427]:Error[167984] "error variable" "temp"
    (1843429 'move' error[1843427] nil[44])
    const-val ret_tmp[1866204]:channel(true,dynamic,true)[1021886] "temp"
    (250300 call writer[1022197] call_tmp[724091] default_arg_start[1023969] default_arg_end[1023980] default_arg_hints[1023991] default_arg_style[1024002] error[1843427] ret_tmp[1866204])
    (1866207 'move' call_tmp[724098] ret_tmp[1866204])
    val errorExists[2170308]:bool[10] "temp"
    (2170313 'move' errorExists[2170308](2170310 '!=' error[1843427] nil[44]))
    if errorExists[2170308]
    {
      (1843432 call chpl_propagate_error[170518] error[1843427])
    }
    (547635 'move' stderr[250285] call_tmp[724098])
    (2146851 '_private_broadcast' stderr[250285])
    (536243 return _void[55])
  }
  def module FormattedIO[251289]  
  type iomode[230936] def r[230925]:iomode[230936] 1 def cw[230928]:iomode[230936] 2 def rw[230931]:iomode[230936] 3 def cwr[230934]:iomode[230936] 4
  type iokind[230952] def dynamic[230941]:iokind[230952] 0 def native[230944]:iokind[230952] 1 def big[230947]:iokind[230952] 2 def little[230950]:iokind[230952] 3
  type iostringstyle[231035] def len1b_data[230999]:iostringstyle[231035] -1 def len2b_data[231004]:iostringstyle[231035] -2 def len4b_data[231009]:iostringstyle[231035] -4 def len8b_data[231014]:iostringstyle[231035] -8 def lenVb_data[231019]:iostringstyle[231035] -10 def data_toeof[231026]:iostringstyle[231035] -65280 def data_null[231033]:iostringstyle[231035] -256
  type iostringformat[231057] def word[231040]:iostringformat[231057] 0 def basic[231043]:iostringformat[231057] 1 def chpl[231046]:iostringformat[231057] 2 def json[231049]:iostringformat[231057] 3 def toend[231052]:iostringformat[231057] 4 def toeof[231055]:iostringformat[231057] 5
  const QIO_FDFLAG_UNK[231319]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_FDFLAG_READABLE[231324]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_FDFLAG_WRITEABLE[231329]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_FDFLAG_SEEKABLE[231334]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_CH_ALWAYS_UNBUFFERED[231339]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_CH_ALWAYS_BUFFERED[231344]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_CH_BUFFERED[231349]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHOD_DEFAULT[231354]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHOD_READWRITE[231359]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHOD_PREADPWRITE[231364]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHOD_FREADFWRITE[231369]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHOD_MMAP[231374]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHODMASK[231379]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const-val QIO_HINT_RANDOM[231384]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const-val QIO_HINT_SEQUENTIAL[231389]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_HINT_LATENCY[231394]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_HINT_BANDWIDTH[231399]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const-val QIO_HINT_CACHED[231404]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const-val QIO_HINT_PARALLEL[231409]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_HINT_DIRECT[231414]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_HINT_NOREUSE[231419]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_HINT_OWNED[231424]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const-val IOHINT_NONE[231432]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
  const-val IOHINT_RANDOM[231437]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
  const-val IOHINT_SEQUENTIAL[231442]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
  const-val IOHINT_CACHED[231447]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
  const-val IOHINT_PARALLEL[231452]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
  function =[859833](ref arg _arg1[859835]:_ref(qio_file_ptr_t)[936934], const in arg _arg2[859836]:qio_file_ptr_t[231460]) : void[4] "assignop" "compiler generated" "inline" "last resort" "resolved"
  {
    (2173777 '=' _arg1[859835] _arg2[859836])
    (2173778 return _void[55])
  }
  type qio_file_ptr_t[231460]
  const-val QIO_FILE_PTR_NULL[231463]:qio_file_ptr_t[231460] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  function =[861541](ref arg _arg1[861543]:_ref(qio_channel_ptr_t)[936945], const in arg _arg2[861544]:qio_channel_ptr_t[231486]) : void[4] "assignop" "compiler generated" "inline" "last resort" "resolved"
  {
    (2173783 '=' _arg1[861543] _arg2[861544])
    (2173784 return _void[55])
  }
  type qio_channel_ptr_t[231486]
  const-val QIO_CHANNEL_PTR_NULL[231489]:qio_channel_ptr_t[231486] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  type qbuffer_ptr_t[231497]
  const-val QBUFFER_PTR_NULL[231500]:qbuffer_ptr_t[231497] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_WORD[231515]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_BASIC[231523]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_CHPL[231531]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_JSON[231539]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_TOEND[231547]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_TOEOF[231555]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  function =[879150](ref arg _arg1[879152]:_ref(iostyle)[967611], const  ref arg _arg2[879153]:iostyle[231865]) : void[4] "assignop" "compiler generated" "inline" "last resort" "resolved"
  {
    (2173789 '=' _arg1[879152] _arg2[879153])
    (2173790 return _void[55])
  }
  type iostyle[231865] val binary[231565]:uint(8)[100] val byteorder[231583]:uint(8)[100] val str_style[231603]:int(64)[13] val min_width_columns[231612]:uint(32)[110] val max_width_columns[231627]:uint(32)[110] val max_width_characters[231642]:uint(32)[110] val max_width_bytes[231657]:uint(32)[110] val string_start[231663]:uint(8)[100] val string_end[231669]:uint(8)[100] val string_format[231689]:uint(8)[100] val bytes_prefix[231695]:uint(8)[100] val base[231704]:uint(8)[100] val point_char[231710]:uint(8)[100] val exponent_char[231718]:uint(8)[100] val other_exponent_char[231724]:uint(8)[100] val positive_char[231730]:uint(8)[100] val negative_char[231736]:uint(8)[100] val i_char[231744]:uint(8)[100] val prefix_base[231753]:uint(8)[100] val pad_char[231759]:uint(8)[100] val showplus[231768]:uint(8)[100] val uppercase[231777]:uint(8)[100] val leftjustify[231786]:uint(8)[100] val showpoint[231795]:uint(8)[100] val showpointzero[231804]:uint(8)[100] val precision[231815]:int(32)[95] val realfmt[231824]:uint(8)[100] val complex_style[231833]:uint(8)[100] val array_style[231842]:uint(8)[100] val aggregate_style[231851]:uint(8)[100] val tuple_style[231860]:uint(8)[100]
  function QioPluginFile[232031].setupChannel[231877](const in arg this[232033]:QioPluginFile[232031], ref arg pluginChannel[231874]:_ref(QioPluginChannel)[1557128], const in arg start[231883]:int(64)[13], const in arg end[231890]:int(64)[13], const in arg qioChannelPtr[231894]:qio_channel_ptr_t[231486]) : syserr[223605] "method" "primary method" "resolved"
  {
    val _formal_tmp_pluginChannel[1557167]:QioPluginChannel[232114] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1557192 'move' _formal_tmp_pluginChannel[1557167](1557190 'cast' QioPluginChannel[232114] nil[44]))
    val ret[533708]:syserr[223605] "dead after last mention" "RVV" "initialized later" "temp"
    (1557183 call =[224154] ret[533708] ENOSYS[224705])
    label _endsetupChannel[1557177]
    (1877197 '=' pluginChannel[231874] _formal_tmp_pluginChannel[1557167])
    (533710 return ret[533708])
  }
  function QioPluginFile[232031].filelength[231914](const in arg this[232037]:QioPluginFile[232031], ref arg length[231911]:_ref(int(64))[936633]) : syserr[223605] "method" "primary method" "resolved"
  {
    const-val _formal_tmp_length[1558804]:int(64)[13] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1558827 'move' _formal_tmp_length[1558804] 0)
    val ret[533718]:syserr[223605] "dead after last mention" "RVV" "initialized later" "temp"
    (1558820 call =[224154] ret[533718] ENOSYS[224705])
    label _endfilelength[1558814]
    (1877200 '=' length[231911] _formal_tmp_length[1558804])
    (533720 return ret[533718])
  }
  function QioPluginFile[232031].getpath[231930](const in arg this[232041]:QioPluginFile[232031], ref arg path[231927]:_ref(c_string)[937288], ref arg len[231936]:_ref(int(64))[936633]) : syserr[223605] "method" "primary method" "resolved"
  {
    const-val _formal_tmp_path[1558862]:c_string[19] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1558897 'move' _formal_tmp_path[1558862](1558895 'cast' c_string[19] nil[44]))
    const-val _formal_tmp_len[1558863]:int(64)[13] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1558900 'move' _formal_tmp_len[1558863] 0)
    val ret[533728]:syserr[223605] "dead after last mention" "RVV" "initialized later" "temp"
    (1558888 call =[224154] ret[533728] ENOSYS[224705])
    label _endgetpath[1558873]
    (1877203 '=' path[231927] _formal_tmp_path[1558862])
    (1877206 '=' len[231936] _formal_tmp_len[1558863])
    (533730 return ret[533728])
  }
  function QioPluginFile[232031].fsync[231949](const in arg this[232045]:QioPluginFile[232031]) : syserr[223605] "method" "primary method" "resolved"
  {
    val ret[533738]:syserr[223605] "dead after last mention" "RVV" "initialized later" "temp"
    (1558923 call =[224154] ret[533738] ENOSYS[224705])
    (533740 return ret[533738])
  }
  function QioPluginFile[232031].getChunk[231968](const in arg this[232049]:QioPluginFile[232031], ref arg length[231965]:_ref(int(64))[936633]) : syserr[223605] "method" "primary method" "resolved"
  {
    const-val _formal_tmp_length[1558954]:int(64)[13] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1558977 'move' _formal_tmp_length[1558954] 0)
    val ret[533748]:syserr[223605] "dead after last mention" "RVV" "initialized later" "temp"
    (1558970 call =[224154] ret[533748] ENOSYS[224705])
    label _endgetChunk[1558964]
    (1877209 '=' length[231965] _formal_tmp_length[1558954])
    (533750 return ret[533748])
  }
  function QioPluginFile[232031].getLocalesForRegion[231987](const in arg this[232053]:QioPluginFile[232031], const in arg start[231984]:int(64)[13], const in arg end[231993]:int(64)[13], ref arg localeNames[232000]:_ref(c_ptr(c_string))[1558998], ref arg nLocales[232007]:_ref(int(64))[936633]) : syserr[223605] "method" "primary method" "resolved"
  {
    val _formal_tmp_localeNames[1559041]:c_ptr(c_string)[1558989] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1559066 'move' _formal_tmp_localeNames[1559041](1559064 'cast' c_ptr(c_string)[1558989] nil[44]))
    val ret[533758]:syserr[223605] "dead after last mention" "RVV" "initialized later" "temp"
    (1559057 call =[224154] ret[533758] ENOSYS[224705])
    label _endgetLocalesForRegion[1559051]
    (1877212 '=' localeNames[232000] _formal_tmp_localeNames[1559041])
    (533760 return ret[533758])
  }
  function QioPluginFile[232031].close[232020](const in arg this[232057]:QioPluginFile[232031]) : syserr[223605] "method" "primary method" "resolved"
  {
    val ret[533768]:syserr[223605] "dead after last mention" "RVV" "initialized later" "temp"
    (1559143 call =[224154] ret[533768] ENOSYS[224705])
    (533770 return ret[533768])
  }
  function QioPluginFile[232031].deinit[880022](const in arg this[880026]:QioPluginFile[232031]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[1848437]
    val _parent_destructor_tmp_[1848432]:object[22] "temp"
    (1848439 'move' _parent_destructor_tmp_[1848432](1848433 'cast' object[22] this[880026]))
    (1848441 call deinit[749440] _parent_destructor_tmp_[1848432])
    (880034 return _void[55])
  }
  type QioPluginFile[232031] val super[355767]:object[22] "super class"
  function QioPluginChannel[232114].readAtLeast[232072](const in arg this[232116]:QioPluginChannel[232114], const in arg amt[232069]:int(64)[13]) : syserr[223605] "method" "primary method" "resolved"
  {
    val ret[533778]:syserr[223605] "dead after last mention" "RVV" "initialized later" "temp"
    (1557666 call =[224154] ret[533778] ENOSYS[224705])
    (533780 return ret[533778])
  }
  function QioPluginChannel[232114].write[232091](const in arg this[232120]:QioPluginChannel[232114], const in arg amt[232088]:int(64)[13]) : syserr[223605] "method" "primary method" "resolved"
  {
    val ret[533788]:syserr[223605] "dead after last mention" "RVV" "initialized later" "temp"
    (1557689 call =[224154] ret[533788] ENOSYS[224705])
    (533790 return ret[533788])
  }
  function QioPluginChannel[232114].close[232103](const in arg this[232124]:QioPluginChannel[232114]) : syserr[223605] "method" "primary method" "resolved"
  {
    val ret[533798]:syserr[223605] "dead after last mention" "RVV" "initialized later" "temp"
    (1557711 call =[224154] ret[533798] ENOSYS[224705])
    (533800 return ret[533798])
  }
  function QioPluginChannel[232114].deinit[880158](const in arg this[880162]:QioPluginChannel[232114]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[1848449]
    val _parent_destructor_tmp_[1848444]:object[22] "temp"
    (1848451 'move' _parent_destructor_tmp_[1848444](1848445 'cast' object[22] this[880162]))
    (1848453 call deinit[749440] _parent_destructor_tmp_[1848444])
    (880170 return _void[55])
  }
  type QioPluginChannel[232114] val super[355769]:object[22] "super class"
  function chpl_qio_setup_plugin_channel[232135](const in arg file[232132]:c_void_ptr[149], ref arg plugin_ch[232138]:_ref(c_void_ptr)[938183], const in arg start[232145]:int(64)[13], const in arg end[232152]:int(64)[13], const in arg qio_ch[232156]:qio_channel_ptr_t[231486]) : syserr[223605] "export" "local args" "no doc" "resolved"
  {
    val ret[533808]:syserr[223605] "dead after last mention" "RVV" "temp"
    val call_tmp[715166]:QioPluginFile[232031] "dead at end of block" "expr temp" "maybe param" "temp"
    (715169 'move' call_tmp[715166](232164 call _cast[1556761] file[232132]))
    val call_tmp[715171]:QioPluginFile[232031] "dead at end of block" "maybe param" "temp"
    (715174 'move' call_tmp[715171](232166 call postfix![1556790] call_tmp[715166]))
    val f[232168]:QioPluginFile[232031] "dead at end of block" "insert auto destroy"
    (546908 'move' f[232168](1557102 call chpl__initCopy[1557083] call_tmp[715171]))
    val pluginChannel[232177]:QioPluginChannel[232114] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1557144]:QioPluginChannel[232114] "dead at end of block" "temp"
    (1557147 'move' init_coerce_tmp[1557144](1557312 'cast' QioPluginChannel[232114] nil[44]))
    (546910 'move' pluginChannel[232177] init_coerce_tmp[1557144])
    const-val call_tmp[715178]:syserr[223605] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1557152]:QioPluginFile[232031] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1557157 'move' coerce_tmp[1557152] f[232168])
    val _formal_tmp_out_pluginChannel[1557159]:QioPluginChannel[232114] "dead at end of block" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    (715181 'move' call_tmp[715178](232192 call setupChannel[231877] coerce_tmp[1557152] _formal_tmp_out_pluginChannel[1557159] start[232145] end[232152] qio_ch[232156]))
    (1557161 call =[1557232] pluginChannel[232177] _formal_tmp_out_pluginChannel[1557159])
    const-val ret[232193]:syserr[223605] "dead at end of block" "insert auto destroy"
    (546912 'move' ret[232193](1557268 call chpl__initCopy[964546] call_tmp[715178]))
    const-val call_tmp[715183]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (715186 'move' call_tmp[715183](232200 call _cast[1557282] pluginChannel[232177]))
    (232202 call =[15835] plugin_ch[232138] call_tmp[715183])
    (1557317 'move' ret[533808] ret[232193])
    gotoReturn _end_chpl_qio_setup_plugin_channel[533806] _end_chpl_qio_setup_plugin_channel[533806]
    label _end_chpl_qio_setup_plugin_channel[533806]
    (533810 return ret[533808])
  }
  function chpl_qio_read_atleast[232217](const in arg ch_plugin[232214]:c_void_ptr[149], const in arg amt[232223]:int(64)[13]) : syserr[223605] "export" "local args" "no doc" "resolved"
  {
    val ret[533820]:syserr[223605] "dead after last mention" "RVV" "temp"
    val call_tmp[715188]:QioPluginChannel[232114] "dead at end of block" "expr temp" "maybe param" "temp"
    (715191 'move' call_tmp[715188](232230 call _cast[1557320] ch_plugin[232214]))
    val call_tmp[715193]:QioPluginChannel[232114] "dead at end of block" "maybe param" "temp"
    (715196 'move' call_tmp[715193](232232 call postfix![1557349] call_tmp[715188]))
    val c[232234]:QioPluginChannel[232114] "dead at end of block" "insert auto destroy"
    (546914 'move' c[232234](1557651 call chpl__initCopy[1557632] call_tmp[715193]))
    const-val call_tmp[715200]:syserr[223605] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1557655]:QioPluginChannel[232114] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1557660 'move' coerce_tmp[1557655] c[232234])
    (715203 'move' call_tmp[715200](232247 call readAtLeast[232072] coerce_tmp[1557655] amt[232223]))
    (533825 'move' ret[533820] call_tmp[715200])
    gotoReturn _end_chpl_qio_read_atleast[533818] _end_chpl_qio_read_atleast[533818]
    label _end_chpl_qio_read_atleast[533818]
    (533822 return ret[533820])
  }
  function chpl_qio_write[232258](const in arg ch_plugin[232255]:c_void_ptr[149], const in arg amt[232264]:int(64)[13]) : syserr[223605] "export" "local args" "no doc" "resolved"
  {
    val ret[533831]:syserr[223605] "dead after last mention" "RVV" "temp"
    val call_tmp[715205]:QioPluginChannel[232114] "dead at end of block" "expr temp" "maybe param" "temp"
    (715208 'move' call_tmp[715205](232271 call _cast[1557320] ch_plugin[232255]))
    val call_tmp[715210]:QioPluginChannel[232114] "dead at end of block" "maybe param" "temp"
    (715213 'move' call_tmp[715210](232273 call postfix![1557349] call_tmp[715205]))
    val c[232275]:QioPluginChannel[232114] "dead at end of block" "insert auto destroy"
    (546916 'move' c[232275](1557675 call chpl__initCopy[1557632] call_tmp[715210]))
    const-val call_tmp[715217]:syserr[223605] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1557678]:QioPluginChannel[232114] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1557683 'move' coerce_tmp[1557678] c[232275])
    (715220 'move' call_tmp[715217](232286 call write[232091] coerce_tmp[1557678] amt[232264]))
    (533836 'move' ret[533831] call_tmp[715217])
    gotoReturn _end_chpl_qio_write[533829] _end_chpl_qio_write[533829]
    label _end_chpl_qio_write[533829]
    (533833 return ret[533831])
  }
  function chpl_qio_channel_close[232297](const in arg ch[232294]:c_void_ptr[149]) : syserr[223605] "export" "local args" "no doc" "resolved"
  {
    val ret[533842]:syserr[223605] "dead after last mention" "RVV" "temp"
    val call_tmp[715222]:QioPluginChannel[232114] "dead at end of block" "expr temp" "maybe param" "temp"
    (715225 'move' call_tmp[715222](232304 call _cast[1557320] ch[232294]))
    val call_tmp[715227]:QioPluginChannel[232114] "dead at end of block" "maybe param" "temp"
    (715230 'move' call_tmp[715227](232306 call postfix![1557349] call_tmp[715222]))
    val c[232308]:QioPluginChannel[232114] "dead at end of block" "insert auto destroy"
    (546918 'move' c[232308](1557697 call chpl__initCopy[1557632] call_tmp[715227]))
    const-val call_tmp[715234]:syserr[223605] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1557700]:QioPluginChannel[232114] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1557705 'move' coerce_tmp[1557700] c[232308])
    (715237 'move' call_tmp[715234](232320 call close[232103] coerce_tmp[1557700]))
    const-val err[232321]:syserr[223605] "dead at end of block" "insert auto destroy"
    (546920 'move' err[232321](1557717 call chpl__initCopy[964546] call_tmp[715234]))
    (232327 call chpl__delete[1557720] c[232308])
    (1558780 'move' ret[533842] err[232321])
    gotoReturn _end_chpl_qio_channel_close[533840] _end_chpl_qio_channel_close[533840]
    label _end_chpl_qio_channel_close[533840]
    (533844 return ret[533842])
  }
  function chpl_qio_filelength[232342](const in arg file[232339]:c_void_ptr[149], ref arg length[232348]:_ref(int(64))[936633]) : syserr[223605] "export" "local args" "no doc" "resolved"
  {
    val ret[533854]:syserr[223605] "dead after last mention" "RVV" "temp"
    val call_tmp[715239]:QioPluginFile[232031] "dead at end of block" "expr temp" "maybe param" "temp"
    (715242 'move' call_tmp[715239](232356 call _cast[1556761] file[232339]))
    val call_tmp[715244]:QioPluginFile[232031] "dead at end of block" "maybe param" "temp"
    (715247 'move' call_tmp[715244](232358 call postfix![1556790] call_tmp[715239]))
    val f[232360]:QioPluginFile[232031] "dead at end of block" "insert auto destroy"
    (546922 'move' f[232360](1558785 call chpl__initCopy[1557083] call_tmp[715244]))
    const-val call_tmp[715251]:syserr[223605] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1558789]:QioPluginFile[232031] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1558794 'move' coerce_tmp[1558789] f[232360])
    val _formal_tmp_out_length[1558796]:int(64)[13] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    (715254 'move' call_tmp[715251](232373 call filelength[231914] coerce_tmp[1558789] _formal_tmp_out_length[1558796]))
    (1558798 call =[435370] length[232348] _formal_tmp_out_length[1558796])
    (1558831 'move' ret[533854] call_tmp[715251])
    gotoReturn _end_chpl_qio_filelength[533852] _end_chpl_qio_filelength[533852]
    label _end_chpl_qio_filelength[533852]
    (533856 return ret[533854])
  }
  function chpl_qio_getpath[232385](const in arg file[232382]:c_void_ptr[149], ref arg str[232388]:_ref(c_string)[937288], ref arg len[232395]:_ref(int(64))[936633]) : syserr[223605] "export" "local args" "no doc" "resolved"
  {
    val ret[533866]:syserr[223605] "dead after last mention" "RVV" "temp"
    val call_tmp[715256]:QioPluginFile[232031] "dead at end of block" "expr temp" "maybe param" "temp"
    (715259 'move' call_tmp[715256](232403 call _cast[1556761] file[232382]))
    val call_tmp[715261]:QioPluginFile[232031] "dead at end of block" "maybe param" "temp"
    (715264 'move' call_tmp[715261](232405 call postfix![1556790] call_tmp[715256]))
    val f[232407]:QioPluginFile[232031] "dead at end of block" "insert auto destroy"
    (546924 'move' f[232407](1558836 call chpl__initCopy[1557083] call_tmp[715261]))
    const-val call_tmp[715268]:syserr[223605] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1558840]:QioPluginFile[232031] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1558845 'move' coerce_tmp[1558840] f[232407])
    val _formal_tmp_out_path[1558847]:c_string[19] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    val _formal_tmp_out_len[1558854]:int(64)[13] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    (715271 'move' call_tmp[715268](232421 call getpath[231930] coerce_tmp[1558840] _formal_tmp_out_path[1558847] _formal_tmp_out_len[1558854]))
    (1558849 call =[21896] str[232388] _formal_tmp_out_path[1558847])
    (1558856 call =[435370] len[232395] _formal_tmp_out_len[1558854])
    (1558905 'move' ret[533866] call_tmp[715268])
    gotoReturn _end_chpl_qio_getpath[533864] _end_chpl_qio_getpath[533864]
    label _end_chpl_qio_getpath[533864]
    (533868 return ret[533866])
  }
  function chpl_qio_fsync[232433](const in arg file[232430]:c_void_ptr[149]) : syserr[223605] "export" "local args" "no doc" "resolved"
  {
    val ret[533878]:syserr[223605] "dead after last mention" "RVV" "temp"
    val call_tmp[715273]:QioPluginFile[232031] "dead at end of block" "expr temp" "maybe param" "temp"
    (715276 'move' call_tmp[715273](232440 call _cast[1556761] file[232430]))
    val call_tmp[715278]:QioPluginFile[232031] "dead at end of block" "maybe param" "temp"
    (715281 'move' call_tmp[715278](232442 call postfix![1556790] call_tmp[715273]))
    val f[232444]:QioPluginFile[232031] "dead at end of block" "insert auto destroy"
    (546926 'move' f[232444](1558909 call chpl__initCopy[1557083] call_tmp[715278]))
    const-val call_tmp[715285]:syserr[223605] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1558912]:QioPluginFile[232031] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1558917 'move' coerce_tmp[1558912] f[232444])
    (715288 'move' call_tmp[715285](232456 call fsync[231949] coerce_tmp[1558912]))
    (1558930 'move' ret[533878] call_tmp[715285])
    gotoReturn _end_chpl_qio_fsync[533876] _end_chpl_qio_fsync[533876]
    label _end_chpl_qio_fsync[533876]
    (533880 return ret[533878])
  }
  function chpl_qio_get_chunk[232468](const in arg file[232465]:c_void_ptr[149], ref arg length[232474]:_ref(int(64))[936633]) : syserr[223605] "export" "local args" "no doc" "resolved"
  {
    val ret[533890]:syserr[223605] "dead after last mention" "RVV" "temp"
    val call_tmp[715290]:QioPluginFile[232031] "dead at end of block" "expr temp" "maybe param" "temp"
    (715293 'move' call_tmp[715290](232482 call _cast[1556761] file[232465]))
    val call_tmp[715295]:QioPluginFile[232031] "dead at end of block" "maybe param" "temp"
    (715298 'move' call_tmp[715295](232484 call postfix![1556790] call_tmp[715290]))
    val f[232486]:QioPluginFile[232031] "dead at end of block" "insert auto destroy"
    (546928 'move' f[232486](1558935 call chpl__initCopy[1557083] call_tmp[715295]))
    const-val call_tmp[715302]:syserr[223605] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1558939]:QioPluginFile[232031] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1558944 'move' coerce_tmp[1558939] f[232486])
    val _formal_tmp_out_length[1558946]:int(64)[13] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    (715305 'move' call_tmp[715302](232499 call getChunk[231968] coerce_tmp[1558939] _formal_tmp_out_length[1558946]))
    (1558948 call =[435370] length[232474] _formal_tmp_out_length[1558946])
    (1558981 'move' ret[533890] call_tmp[715302])
    gotoReturn _end_chpl_qio_get_chunk[533888] _end_chpl_qio_get_chunk[533888]
    label _end_chpl_qio_get_chunk[533888]
    (533892 return ret[533890])
  }
  function chpl_qio_get_locales_for_region[232511](const in arg file[232508]:c_void_ptr[149], const in arg start[232517]:int(64)[13], const in arg end[232524]:int(64)[13], ref arg localeNames[232528]:_ref(c_void_ptr)[938183], const  ref arg nLocales[232535]:_ref(int(64))[936633]) : syserr[223605] "export" "local args" "no doc" "resolved"
  {
    val ret[533902]:syserr[223605] "dead after last mention" "RVV" "temp"
    val strPtr[232543]:c_ptr(c_string)[1558989] "dead at end of block" "insert auto destroy" "split inited"
    val call_tmp[715307]:c_ptr(c_string)[1558989] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[715312]:QioPluginFile[232031] "dead at end of block" "expr temp" "maybe param" "temp"
    (715315 'move' call_tmp[715312](232552 call _cast[1556761] file[232508]))
    val call_tmp[715317]:QioPluginFile[232031] "dead at end of block" "maybe param" "temp"
    (715320 'move' call_tmp[715317](232554 call postfix![1556790] call_tmp[715312]))
    val f[232556]:QioPluginFile[232031] "dead at end of block" "insert auto destroy"
    (546932 'move' f[232556](1559012 call chpl__initCopy[1557083] call_tmp[715317]))
    const-val call_tmp[715324]:syserr[223605] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1559026]:QioPluginFile[232031] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1559031 'move' coerce_tmp[1559026] f[232556])
    val _formal_tmp_out_localeNames[1559033]:c_ptr(c_string)[1558989] "dead at end of block" "expr temp" "insert auto destroy" "maybe copy elided" "suppress lvalue error" "temp"
    (715327 'move' call_tmp[715324](232571 call getLocalesForRegion[231987] coerce_tmp[1559026] start[232517] end[232524] _formal_tmp_out_localeNames[1559033] nLocales[232535]))
    (1877215 '=' strPtr[232543] _formal_tmp_out_localeNames[1559033])
    (1559100 'noop')
    const-val ret[232572]:syserr[223605] "dead at end of block" "insert auto destroy"
    (546934 'move' ret[232572](1559095 call chpl__initCopy[964546] call_tmp[715324]))
    const-val call_tmp[715329]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (715332 'move' call_tmp[715329](232579 'cast' c_void_ptr[149] strPtr[232543]))
    (232581 call =[15835] localeNames[232528] call_tmp[715329])
    (1559125 'move' ret[533902] ret[232572])
    gotoReturn _end_chpl_qio_get_locales_for_region[533900] _end_chpl_qio_get_locales_for_region[533900]
    label _end_chpl_qio_get_locales_for_region[533900]
    (533904 return ret[533902])
  }
  function chpl_qio_file_close[232596](const in arg file[232593]:c_void_ptr[149]) : syserr[223605] "export" "local args" "no doc" "resolved"
  {
    val ret[533914]:syserr[223605] "dead after last mention" "RVV" "temp"
    val call_tmp[715334]:QioPluginFile[232031] "dead at end of block" "expr temp" "maybe param" "temp"
    (715337 'move' call_tmp[715334](232603 call _cast[1556761] file[232593]))
    val call_tmp[715339]:QioPluginFile[232031] "dead at end of block" "maybe param" "temp"
    (715342 'move' call_tmp[715339](232605 call postfix![1556790] call_tmp[715334]))
    val f[232607]:QioPluginFile[232031] "dead at end of block" "insert auto destroy"
    (546936 'move' f[232607](1559129 call chpl__initCopy[1557083] call_tmp[715339]))
    const-val call_tmp[715346]:syserr[223605] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1559132]:QioPluginFile[232031] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1559137 'move' coerce_tmp[1559132] f[232607])
    (715349 'move' call_tmp[715346](232617 call close[232020] coerce_tmp[1559132]))
    const-val err[232618]:syserr[223605] "dead at end of block" "insert auto destroy"
    (546938 'move' err[232618](1559149 call chpl__initCopy[964546] call_tmp[715346]))
    (232624 call chpl__delete[1559152] f[232607])
    (1560212 'move' ret[533914] err[232618])
    gotoReturn _end_chpl_qio_file_close[533912] _end_chpl_qio_file_close[533912]
    label _end_chpl_qio_file_close[533912]
    (533916 return ret[533914])
  }
  function qio_style_init_default[232639](ref arg s[232636]:_ref(iostyle)[967611]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (533924 return _void[55])
  }
  function qio_file_release[232659](const in arg f[232656]:qio_file_ptr_t[231460]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (533928 return _void[55])
  }
  function qio_file_init[232669](ref arg file_out[232666]:_ref(qio_file_ptr_t)[936934], const in arg fp[232672]:_file[155], const in arg fd[232676]:int(32)[95], const in arg iohints[232680]:int(32)[95], const  ref arg style[232684]:_ref(iostyle)[967611], const in arg usefilestar[232688]:int(32)[95]) : syserr[223605] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533932]:syserr[223605] "RVV" "temp"
    (533934 return ret[533932])
  }
  function qio_file_open_mem[232749](ref arg file_out[232746]:_ref(qio_file_ptr_t)[936934], const in arg buf[232752]:qbuffer_ptr_t[231497], const  ref arg style[232756]:_ref(iostyle)[967611]) : syserr[223605] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533950]:syserr[223605] "RVV" "temp"
    (533952 return ret[533950])
  }
  function qio_file_close[232769](const in arg f[232766]:qio_file_ptr_t[231460]) : syserr[223605] "extern" "local args" "no fn body" "no doc" "resolved" "no return value for void"
  {
    val ret[533956]:syserr[223605] "RVV" "temp"
    (533958 return ret[533956])
  }
  function qio_file_isopen[232803](const in arg f[232800]:qio_file_ptr_t[231460]) : bool[10] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533970]:bool[10] "RVV" "temp"
    (533972 return ret[533970])
  }
  function qio_file_get_style[232842](const in arg f[232839]:qio_file_ptr_t[231460], ref arg style[232845]:_ref(iostyle)[967611]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (533986 return _void[55])
  }
  function qio_channel_create[232899](ref arg ch[232896]:_ref(qio_channel_ptr_t)[936945], const in arg file[232902]:qio_file_ptr_t[231460], const in arg hints[232906]:int(32)[95], const in arg readable[232910]:int(32)[95], const in arg writeable[232914]:int(32)[95], const in arg start[232921]:int(64)[13], const in arg end[232928]:int(64)[13], const  ref arg style[232932]:_ref(iostyle)[967611]) : syserr[223605] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534008]:syserr[223605] "RVV" "temp"
    (534010 return ret[534008])
  }
  function qio_channel_path_offset[232945](const in arg threadsafe[232942]:int(32)[95], const in arg ch[232948]:qio_channel_ptr_t[231486], ref arg path[232952]:_ref(c_string)[937288], ref arg offset[232959]:_ref(int(64))[936633]) : syserr[223605] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534014]:syserr[223605] "RVV" "temp"
    (534016 return ret[534014])
  }
  function qio_channel_retain[232972](const in arg ch[232969]:qio_channel_ptr_t[231486]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (534018 return _void[55])
  }
  function qio_channel_release[232982](const in arg ch[232979]:qio_channel_ptr_t[231486]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (534020 return _void[55])
  }
  function qio_channel_lock[233028](const in arg ch[233025]:qio_channel_ptr_t[231486]) : syserr[223605] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534034]:syserr[223605] "RVV" "temp"
    (534036 return ret[534034])
  }
  function qio_channel_unlock[233040](const in arg ch[233037]:qio_channel_ptr_t[231486]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (534038 return _void[55])
  }
  function qio_channel_binary[233078](const in arg ch[233075]:qio_channel_ptr_t[231486]) : uint(8)[100] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534046]:uint(8)[100] "RVV" "temp"
    (534048 return ret[534046])
  }
  function qio_channel_byteorder[233093](const in arg ch[233090]:qio_channel_ptr_t[231486]) : uint(8)[100] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534052]:uint(8)[100] "RVV" "temp"
    (534054 return ret[534052])
  }
  function qio_channel_str_style[233108](const in arg ch[233105]:qio_channel_ptr_t[231486]) : int(64)[13] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534058]:int(64)[13] "RVV" "temp"
    (534060 return ret[534058])
  }
  function qio_channel_close[233161](const in arg threadsafe[233158]:int(32)[95], const in arg ch[233164]:qio_channel_ptr_t[231486]) : syserr[223605] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534076]:syserr[223605] "RVV" "temp"
    (534078 return ret[534076])
  }
  function qio_channel_read_amt[1083344](const in arg threadsafe[1083348]:int(32)[95], const in arg ch[1083350]:qio_channel_ptr_t[231486], const in arg ptr[1083352]:c_ptr(uint(8))[937484], const in arg len[1083356]:int(64)[13]) : syserr[223605] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[1083360]:syserr[223605] "RVV" "temp"
    (1083368 return ret[1083360])
  }
  function qio_channel_offset_unlocked[233403](const in arg ch[233400]:qio_channel_ptr_t[231486]) : int(64)[13] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534142]:int(64)[13] "RVV" "temp"
    (534144 return ret[534142])
  }
  function qio_file_path_for_fd[233668](const in arg fd[233665]:int(32)[95], ref arg path[233671]:_ref(c_string)[937288]) : syserr[223605] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534212]:syserr[223605] "RVV" "temp"
    (534214 return ret[534212])
  }
  function qio_file_path_for_fp[233684](const in arg fp[233681]:_file[155], ref arg path[233687]:_ref(c_string)[937288]) : syserr[223605] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534218]:syserr[223605] "RVV" "temp"
    (534220 return ret[534218])
  }
  function qio_file_path[233700](const in arg f[233697]:qio_file_ptr_t[231460], ref arg path[233703]:_ref(c_string)[937288]) : syserr[223605] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534224]:syserr[223605] "RVV" "temp"
    (534226 return ret[534224])
  }
  function qio_shortest_path[233716](const in arg fl[233713]:qio_file_ptr_t[231460], ref arg path_out[233719]:_ref(c_string)[937288], const in arg path_in[233723]:c_string[19]) : syserr[223605] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534230]:syserr[223605] "RVV" "temp"
    (534232 return ret[534230])
  }
  function qio_channel_write_int64[234071](const in arg threadsafe[234068]:int(32)[95], const in arg byteorder[234074]:int(32)[95], const in arg ch[234078]:qio_channel_ptr_t[231486], const in arg x[234085]:int(64)[13]) : syserr[223605] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534314]:syserr[223605] "RVV" "temp"
    (534316 return ret[534314])
  }
  function qio_channel_write_string[234410](const in arg threadsafe[234407]:int(32)[95], const in arg byteorder[234413]:int(32)[95], const in arg str_style[234420]:int(64)[13], const in arg ch[234424]:qio_channel_ptr_t[231486], const in arg s[234428]:c_string[19], const in arg len[234432]:int(64)[13]) : syserr[223605] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534386]:syserr[223605] "RVV" "temp"
    (534388 return ret[534386])
  }
  function qio_channel_print_int[1079586](const in arg threadsafe[1079590]:int(32)[95], const in arg ch[1079592]:qio_channel_ptr_t[231486], const  ref arg ptr[1079594]:_ref(int(64))[936633], const in arg len[1079598]:uint(64)[115], const in arg issigned[1079602]:int(32)[95]) : syserr[223605] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[1079606]:syserr[223605] "RVV" "temp"
    (1079614 return ret[1079606])
  }
  function qio_channel_write_newline[234756](const in arg threadsafe[234753]:int(32)[95], const in arg ch[234759]:qio_channel_ptr_t[231486]) : syserr[223605] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534476]:syserr[223605] "RVV" "temp"
    (534478 return ret[534476])
  }
  function qio_channel_print_string[234858](const in arg threadsafe[234855]:int(32)[95], const in arg ch[234861]:qio_channel_ptr_t[231486], const in arg ptr[234865]:c_string[19], const in arg len[234869]:int(64)[13]) : syserr[223605] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534500]:syserr[223605] "RVV" "temp"
    (534502 return ret[534500])
  }
  const QIO_CONV_UNK[235081]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_NUMERIC[235086]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_SIGNED[235091]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_SIGNED[235096]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_UNSIGNED[235101]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_UNSIGNED[235106]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_REAL[235111]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_REAL[235116]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_IMAG[235121]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_IMAG[235126]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_COMPLEX[235131]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_COMPLEX[235136]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_CHAR[235141]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_STRING[235146]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_STRING[235151]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_REPR[235156]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_REGEXP[235161]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_NONE_REGEXP_LITERAL[235166]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_NONE_LITERAL[235171]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_MIN_WIDTH_COLS[235176]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_MAX_WIDTH_COLS[235181]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_MAX_WIDTH_CHARS[235186]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_MAX_WIDTH_BYTES[235191]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_PRECISION[235196]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_STRINGLEN[235201]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_TERMINATOR[235206]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_STRINGSTART[235211]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_STRINGSTARTEND[235216]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_STRINGEND[235221]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_CAPTURE[235226]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_DONE[235231]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  function defaultIOStyle[235316]() : iostyle[231865] "resolved"
  {
    val ret[534572]:iostyle[231865] "dead after last mention" "RVV" "temp"
    val ret[235320]:iostyle[231865] "dead at end of block" "insert auto destroy"
    (235328 call qio_style_init_default[232639] ret[235320])
    (985848 'move' ret[534572] ret[235320])
    gotoReturn _end_defaultIOStyle[534570] _end_defaultIOStyle[534570]
    label _end_defaultIOStyle[534570]
    (534574 return ret[534572])
  }
  val iohints[235577]:int(32)[95] "dead at end of block" "extern" "insert auto destroy" "type variable"
  function _ref(file)[948795].init[235595](ref arg this[235603]:_ref(file)[948795]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    const-val call_tmp[715451]:locale[28] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[1864030]:locale[28] "temp"
    (465296 call here[90438] ret_tmp[1864030])
    (1864033 'move' call_tmp[715451] ret_tmp[1864030])
    val tmp[465297]:locale[28] "dead after last mention" "temp"
    (465300 'move' tmp[465297] call_tmp[715451])
    (465302 '.=' this[235603] home[235583] tmp[465297])
    val tmp[465307]:qio_file_ptr_t[231460] "dead after last mention" "temp"
    (465310 'move' tmp[465307](1016595 call chpl__initCopy[1016597] QIO_FILE_PTR_NULL[231463]))
    (465312 '.=' this[235603] _file_internal[235589] tmp[465307])
    (534630 return _void[55])
  }
  function _ref(file)[948795].home[887010](ref arg this[887014]:_ref(file)[948795]) ref : _ref(locale)[948905] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[887024]:_ref(locale)[948905] "dead after last mention" "RVV" "temp"
    ref call_tmp[887031]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (887034 'move' call_tmp[887031](887018 '.' this[887014] home[235583]))
    (887029 'move' ret[887024] call_tmp[887031])
    (887026 return ret[887024])
  }
  function _ref(file)[948795]._file_internal[887036](ref arg this[887040]:_ref(file)[948795]) ref : _ref(qio_file_ptr_t)[936934] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[887050]:_ref(qio_file_ptr_t)[936934] "dead after last mention" "RVV" "temp"
    ref call_tmp[887057]:_ref(qio_file_ptr_t)[936934] "dead after last mention" "maybe param" "temp"
    (887060 'move' call_tmp[887057](887044 '.' this[887040] _file_internal[235589]))
    (887055 'move' ret[887050] call_tmp[887057])
    (887052 return ret[887050])
  }
  type file[235601] val home[235583]:locale[28] "no doc" val _file_internal[235589]:qio_file_ptr_t[231460] "no doc"
  function _ref(file)[948795].checkAssumingLocal[235789](const  ref arg this[235791]:_ref(file)[948795], ref arg error_out[1842685]:Error[167984]) : void[4] throws "method" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[715559]:_ref(qio_file_ptr_t)[936934] "dead after last mention" "maybe param" "temp"
    (715562 'move' call_tmp[715559](396423 call _file_internal[887036] this[235791]))
    const-val call_tmp[715564]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1017159]:qio_file_ptr_t[231460] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1017163 'move' coerce_tmp[1017159](1017161 'deref' call_tmp[715559]))
    (715567 'move' call_tmp[715564](235799 call is_c_nil[1017117] coerce_tmp[1017159]))
    const-val call_tmp[715569]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (715572 'move' call_tmp[715569] call_tmp[715564])
    if call_tmp[715569]
    {
      const-val call_tmp[715576]:owned SystemError[1000299] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1017219]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1017225 'move' coerce_tmp[1017219](1017221 'cast' int(64)[13] EBADF[224345]))
      const-val ret_tmp[1866150]:owned SystemError[1000299] "temp"
      (235823 call fromSyserr[1017174] coerce_tmp[1017219] "Operation attempted on an invalid file" ret_tmp[1866150])
      (1866153 'move' call_tmp[715576] ret_tmp[1866150])
      val call_tmp[715581]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1017234]:owned Error[966519] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1866078]:owned Error[966519] "temp"
      (1017236 call _cast[1015808] call_tmp[715576] ret_tmp[1866078])
      (1866081 'move' coerce_tmp[1017234] ret_tmp[1866078])
      const-val _formal_tmp_in_err[1017413]:owned Error[966519] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1017417 'move' _formal_tmp_in_err[1017413] coerce_tmp[1017234])
      (715584 'move' call_tmp[715581](468158 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1017413]))
      {
        val castedError[1842690]:Error[167984] "temp"
        (1842696 'move' castedError[1842690] call_tmp[715581])
        (1842698 '=' error_out[1842685] castedError[1842690])
        gotoErrorHandlingReturn _endcheckAssumingLocal[1842687] _endcheckAssumingLocal[1842687]
      }
    }
    ref call_tmp[715588]:_ref(qio_file_ptr_t)[936934] "dead after last mention" "maybe param" "temp"
    (715591 'move' call_tmp[715588](396429 call _file_internal[887036] this[235791]))
    const-val call_tmp[715593]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1017423]:qio_file_ptr_t[231460] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1017427 'move' coerce_tmp[1017423](1017425 'deref' call_tmp[715588]))
    (715596 'move' call_tmp[715593](235835 call qio_file_isopen[232803] coerce_tmp[1017423]))
    const-val call_tmp[715598]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (715601 'move' call_tmp[715598](235836 call ![7494] call_tmp[715593]))
    const-val call_tmp[715603]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (715606 'move' call_tmp[715603] call_tmp[715598])
    if call_tmp[715603]
    {
      const-val call_tmp[715610]:owned SystemError[1000299] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1017433]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1017439 'move' coerce_tmp[1017433](1017435 'cast' int(64)[13] EBADF[224345]))
      const-val ret_tmp[1866156]:owned SystemError[1000299] "temp"
      (235861 call fromSyserr[1017174] coerce_tmp[1017433] "Operation attempted on closed file" ret_tmp[1866156])
      (1866159 'move' call_tmp[715610] ret_tmp[1866156])
      val call_tmp[715615]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1017442]:owned Error[966519] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1866084]:owned Error[966519] "temp"
      (1017444 call _cast[1015808] call_tmp[715610] ret_tmp[1866084])
      (1866087 'move' coerce_tmp[1017442] ret_tmp[1866084])
      const-val _formal_tmp_in_err[1017621]:owned Error[966519] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1017625 'move' _formal_tmp_in_err[1017621] coerce_tmp[1017442])
      (715618 'move' call_tmp[715615](468160 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1017621]))
      {
        val castedError[1842703]:Error[167984] "temp"
        (1842709 'move' castedError[1842703] call_tmp[715615])
        (1842711 '=' error_out[1842685] castedError[1842703])
        gotoErrorHandlingReturn _endcheckAssumingLocal[1842687] _endcheckAssumingLocal[1842687]
      }
    }
    label _endcheckAssumingLocal[1842687]
    (534638 return _void[55])
  }
  function _ref(file)[948795].deinit[235912](ref arg this[235914]:_ref(file)[948795]) : void[4] "destructor" "method" "no doc" "resolved" "no return value for void"
  {
    const-val tmp[235940]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[715636]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (715639 'move' call_tmp[715636](235920 call home[887010] this[235914]))
    const-val call_tmp[715641]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[985724]:BaseLocale[91204] "dead after last mention" "temp"
    (985729 'move' _locale_tmp_[985724](985726 call _value[89984] call_tmp[715636]))
    (715644 'move' call_tmp[715641](235937 '_wide_get_locale' _locale_tmp_[985724]))
    (235942 'move' tmp[235940] call_tmp[715641])
    val isdirect[2148668]:bool[10] "temp"
    (2148673 'move' isdirect[2148668](2148670 call chpl_doDirectExecuteOn[187469] tmp[235940]))
    if isdirect[2148668]
    {
      (2148677 call on_fn[935658] this[235914])
    }
    {
      val _args_foron_fn[2148692]:_class_localson_fn[2148684] "temp"
      (2148696 'move' _args_foron_fn[2148692](2148694 'stack allocate class' _class_localson_fn[2148684]))
      (2148698 '.=' _args_foron_fn[2148692] _0_tmp[2148687] tmp[235940])
      ref tmp[2148702]:file[235601] "temp"
      (2148706 'move' tmp[2148702](2148704 'set reference' this[235914]))
      (2148708 '.=' _args_foron_fn[2148692] _1_this[2148689] tmp[2148702])
      val _args_vforon_fn[2148712]:c_void_ptr[149] "temp"
      (2148716 'move' _args_vforon_fn[2148712](2148714 'cast_to_void_star' _args_foron_fn[2148692]))
      val _args_sizeon_fn[2148718]:int(64)[13] "temp"
      (2148722 'move' _args_sizeon_fn[2148718](2148720 'sizeof_bundle' _class_localson_fn[2148684]))
      on(2148754 call wrapon_fn[2148724] tmp[235940] _args_vforon_fn[2148712] _args_sizeon_fn[2148718] _args_foron_fn[2148692])
    }
    {
    }
    label _enddeinit[1848050]
    ref _field_destructor_tmp_[1848048]:_ref(locale)[948905] "temp"
    (1848055 'move' _field_destructor_tmp_[1848048](1848052 '.' this[235914] home[235583]))
    (1848057 call deinit[90188] _field_destructor_tmp_[1848048])
    (534642 return _void[55])
  }
  function _ref(file)[948795]._style[235981](const  ref arg this[235983]:_ref(file)[948795], ref arg error_out[1842715]:Error[167984]) : iostyle[231865] throws "method" "no doc" "no parens" "resolved"
  {
    val ret[534656]:iostyle[231865] "dead after last mention" "RVV" "temp"
    val ret[235990]:iostyle[231865] "dead at end of block" "insert auto destroy"
    const-val tmp[236028]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[715674]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (715677 'move' call_tmp[715674](235996 call home[887010] this[235983]))
    const-val call_tmp[715679]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1017105]:BaseLocale[91204] "dead after last mention" "temp"
    (1017110 'move' _locale_tmp_[1017105](1017107 call _value[89984] call_tmp[715674]))
    (715682 'move' call_tmp[715679](236025 '_wide_get_locale' _locale_tmp_[1017105]))
    (236030 'move' tmp[236028] call_tmp[715679])
    val error[1842718]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1842720 'move' error[1842718] nil[44])
    val rvfDerefTmp[2145232]:file[235601] "temp"
    (2145236 'move' rvfDerefTmp[2145232](2145234 'deref' this[235983]))
    val isdirect[2148759]:bool[10] "temp"
    (2148764 'move' isdirect[2148759](2148761 call chpl_doDirectExecuteOn[187469] tmp[236028]))
    if isdirect[2148759]
    {
      (2148768 call on_fn[935667] rvfDerefTmp[2145232] ret[235990] error[1842718])
    }
    {
      val _args_foron_fn[2148789]:_class_localson_fn[2148777] "temp"
      (2148793 'move' _args_foron_fn[2148789](2148791 'stack allocate class' _class_localson_fn[2148777]))
      (2148795 '.=' _args_foron_fn[2148789] _0_tmp[2148780] tmp[236028])
      (2148799 '.=' _args_foron_fn[2148789] _1_rvfDerefTmp[2148782] rvfDerefTmp[2145232])
      ref tmp[2148803]:iostyle[231865] "temp"
      (2148807 'move' tmp[2148803](2148805 'set reference' ret[235990]))
      (2148809 '.=' _args_foron_fn[2148789] _2_ret[2148784] tmp[2148803])
      ref tmp[2148813]:Error[167984] "temp"
      (2148817 'move' tmp[2148813](2148815 'set reference' error[1842718]))
      (2148819 '.=' _args_foron_fn[2148789] _3_error[2148786] tmp[2148813])
      val _args_vforon_fn[2148823]:c_void_ptr[149] "temp"
      (2148827 'move' _args_vforon_fn[2148823](2148825 'cast_to_void_star' _args_foron_fn[2148789]))
      val _args_sizeon_fn[2148829]:int(64)[13] "temp"
      (2148833 'move' _args_sizeon_fn[2148829](2148831 'sizeof_bundle' _class_localson_fn[2148777]))
      on(2148881 call wrapon_fn[2148835] tmp[236028] _args_vforon_fn[2148823] _args_sizeon_fn[2148829] _args_foron_fn[2148789])
    }
    val errorExists[2169916]:bool[10] "temp"
    (2169921 'move' errorExists[2169916](2169918 '!=' error[1842718] nil[44]))
    if errorExists[2169916]
    {
      (1842724 '=' error_out[1842715] error[1842718])
      gotoErrorHandlingReturn _end__style[534654] _end__style[534654]
    }
    {
    }
    (1017642 'move' ret[534656] ret[235990])
    gotoReturn _end__style[534654] _end__style[534654]
    label _end__style[534654]
    (534658 return ret[534656])
  }
  function _ref(file)[948795].close[236045](const  ref arg this[236047]:_ref(file)[948795], ref arg error_out[1842732]:Error[167984]) : void[4] throws "method" "resolved" "no return value for void"
  {
    ref call_tmp[715695]:_ref(qio_file_ptr_t)[936934] "dead after last mention" "maybe param" "temp"
    (715698 'move' call_tmp[715695](396454 call _file_internal[887036] this[236047]))
    const-val call_tmp[715700]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1060669]:qio_file_ptr_t[231460] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1060673 'move' coerce_tmp[1060669](1060671 'deref' call_tmp[715695]))
    (715703 'move' call_tmp[715700](236055 call is_c_nil[1017117] coerce_tmp[1060669]))
    const-val call_tmp[715705]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (715708 'move' call_tmp[715705] call_tmp[715700])
    if call_tmp[715705]
    {
      const-val call_tmp[715712]:owned SystemError[1000299] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1060678]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1060684 'move' coerce_tmp[1060678](1060680 'cast' int(64)[13] EBADF[224345]))
      const-val ret_tmp[1866162]:owned SystemError[1000299] "temp"
      (236063 call fromSyserr[1017174] coerce_tmp[1060678] "Operation attempted on an invalid file" ret_tmp[1866162])
      (1866165 'move' call_tmp[715712] ret_tmp[1866162])
      val call_tmp[715717]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1060687]:owned Error[966519] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1866096]:owned Error[966519] "temp"
      (1060689 call _cast[1015808] call_tmp[715712] ret_tmp[1866096])
      (1866099 'move' coerce_tmp[1060687] ret_tmp[1866096])
      const-val _formal_tmp_in_err[1060866]:owned Error[966519] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1060870 'move' _formal_tmp_in_err[1060866] coerce_tmp[1060687])
      (715720 'move' call_tmp[715717](468162 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1060866]))
      {
        val castedError[1842737]:Error[167984] "temp"
        (1842743 'move' castedError[1842737] call_tmp[715717])
        (1842745 '=' error_out[1842732] castedError[1842737])
        gotoErrorHandlingReturn _endclose[1842734] _endclose[1842734]
      }
    }
    const-val call_tmp[715722]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (715725 'move' call_tmp[715722](396459 call ENOERR[223675]))
    val err[236074]:syserr[223605] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1060876]:syserr[223605] "dead at end of block" "initialized later" "temp"
    (1060908 call =[224154] init_coerce_tmp[1060876] call_tmp[715722])
    (547055 'move' err[236074] init_coerce_tmp[1060876])
    const-val tmp[236094]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[715729]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (715732 'move' call_tmp[715729](236079 call home[887010] this[236047]))
    const-val call_tmp[715734]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1060883]:BaseLocale[91204] "dead after last mention" "temp"
    (1060888 'move' _locale_tmp_[1060883](1060885 call _value[89984] call_tmp[715729]))
    (715737 'move' call_tmp[715734](236091 '_wide_get_locale' _locale_tmp_[1060883]))
    (236096 'move' tmp[236094] call_tmp[715734])
    val rvfDerefTmp[2145253]:file[235601] "temp"
    (2145257 'move' rvfDerefTmp[2145253](2145255 'deref' this[236047]))
    val isdirect[2148886]:bool[10] "temp"
    (2148891 'move' isdirect[2148886](2148888 call chpl_doDirectExecuteOn[187469] tmp[236094]))
    if isdirect[2148886]
    {
      (2148895 call on_fn[935676] rvfDerefTmp[2145253] err[236074])
    }
    {
      val _args_foron_fn[2148913]:_class_localson_fn[2148903] "temp"
      (2148917 'move' _args_foron_fn[2148913](2148915 'stack allocate class' _class_localson_fn[2148903]))
      (2148919 '.=' _args_foron_fn[2148913] _0_tmp[2148906] tmp[236094])
      (2148923 '.=' _args_foron_fn[2148913] _1_rvfDerefTmp[2148908] rvfDerefTmp[2145253])
      ref tmp[2148927]:syserr[223605] "temp"
      (2148931 'move' tmp[2148927](2148929 'set reference' err[236074]))
      (2148933 '.=' _args_foron_fn[2148913] _2_err[2148910] tmp[2148927])
      val _args_vforon_fn[2148937]:c_void_ptr[149] "temp"
      (2148941 'move' _args_vforon_fn[2148937](2148939 'cast_to_void_star' _args_foron_fn[2148913]))
      val _args_sizeon_fn[2148943]:int(64)[13] "temp"
      (2148947 'move' _args_sizeon_fn[2148943](2148945 'sizeof_bundle' _class_localson_fn[2148903]))
      on(2148987 call wrapon_fn[2148949] tmp[236094] _args_vforon_fn[2148937] _args_sizeon_fn[2148943] _args_foron_fn[2148913])
    }
    {
    }
    const-val call_tmp[715751]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (715754 'move' call_tmp[715751](236135 call _cond_test[224002] err[236074]))
    if call_tmp[715751]
    {
      {
        val error[1842749]:Error[167984] "error variable" "temp"
        (1842758 'move' error[1842749] nil[44])
        const-val call_tmp[715758]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1864992]:string[26] "temp"
        (236130 call tryGetPath[236385] this[236047] ret_tmp[1864992])
        (1864995 'move' call_tmp[715758] ret_tmp[1864992])
        (236131 call ioerror[266271] err[236074] "in file.close" call_tmp[715758] error[1842749])
        val errorExists[2169924]:bool[10] "temp"
        (2169929 'move' errorExists[2169924](2169926 '!=' error[1842749] nil[44]))
        if errorExists[2169924]
        {
          (1877221 call chpl__autoDestroy[1562275] call_tmp[715758])
          gotoErrorHandling handler[1842750] handler[1842750]
        }
        (1877224 call chpl__autoDestroy[1562275] call_tmp[715758])
        label handler[1842750]
        const-val shouldHandleError[1842769]:bool[10] "temp"
        val errorExists[2169932]:bool[10] "temp"
        (2169937 'move' errorExists[2169932](2169934 '!=' error[1842749] nil[44]))
        (1842773 'move' shouldHandleError[1842769] errorExists[2169932])
        if shouldHandleError[1842769]
        {
          (1842765 '=' error_out[1842732] error[1842749])
          gotoErrorHandlingReturn _endclose[1842734] _endclose[1842734]
        }
      }
    }
    label _endclose[1842734]
    (534666 return _void[55])
  }
  function _ref(file)[948795].path[236233](const  ref arg this[236235]:_ref(file)[948795], ref arg error_out[1842777]:Error[167984], ref arg _retArg[1864986]:_ref(string)[938000]) : void[4] throws "fn returns via _retArg" "method" "no parens" "resolved"
  {
    const-val ret[534672]:string[26] "dead after last mention" "RVV" "temp"
    val ret[236242]:string[26] "dead at end of block" "insert auto destroy"
    (1021742 call init[30763] ret[236242])
    const-val call_tmp[715806]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (715809 'move' call_tmp[715806](396481 call ENOERR[223675]))
    val err[236249]:syserr[223605] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1019159]:syserr[223605] "dead at end of block" "initialized later" "temp"
    (1021732 call =[224154] init_coerce_tmp[1019159] call_tmp[715806])
    (547061 'move' err[236249] init_coerce_tmp[1019159])
    const-val tmp[236338]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[715813]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (715816 'move' call_tmp[715813](236254 call home[887010] this[236235]))
    const-val call_tmp[715818]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1019166]:BaseLocale[91204] "dead after last mention" "temp"
    (1019171 'move' _locale_tmp_[1019166](1019168 call _value[89984] call_tmp[715813]))
    (715821 'move' call_tmp[715818](236335 '_wide_get_locale' _locale_tmp_[1019166]))
    (236340 'move' tmp[236338] call_tmp[715818])
    val error[1842780]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1842782 'move' error[1842780] nil[44])
    val rvfDerefTmp[2145267]:file[235601] "temp"
    (2145271 'move' rvfDerefTmp[2145267](2145269 'deref' this[236235]))
    val isdirect[2148992]:bool[10] "temp"
    (2148997 'move' isdirect[2148992](2148994 call chpl_doDirectExecuteOn[187469] tmp[236338]))
    if isdirect[2148992]
    {
      (2149001 call on_fn[935694] rvfDerefTmp[2145267] err[236249] ret[236242] error[1842780])
    }
    {
      val _args_foron_fn[2149025]:_class_localson_fn[2149011] "temp"
      (2149029 'move' _args_foron_fn[2149025](2149027 'stack allocate class' _class_localson_fn[2149011]))
      (2149031 '.=' _args_foron_fn[2149025] _0_tmp[2149014] tmp[236338])
      (2149035 '.=' _args_foron_fn[2149025] _1_rvfDerefTmp[2149016] rvfDerefTmp[2145267])
      ref tmp[2149039]:syserr[223605] "temp"
      (2149043 'move' tmp[2149039](2149041 'set reference' err[236249]))
      (2149045 '.=' _args_foron_fn[2149025] _2_err[2149018] tmp[2149039])
      ref tmp[2149049]:string[26] "temp"
      (2149053 'move' tmp[2149049](2149051 'set reference' ret[236242]))
      (2149055 '.=' _args_foron_fn[2149025] _3_ret[2149020] tmp[2149049])
      ref tmp[2149059]:Error[167984] "temp"
      (2149063 'move' tmp[2149059](2149061 'set reference' error[1842780]))
      (2149065 '.=' _args_foron_fn[2149025] _4_error[2149022] tmp[2149059])
      val _args_vforon_fn[2149069]:c_void_ptr[149] "temp"
      (2149073 'move' _args_vforon_fn[2149069](2149071 'cast_to_void_star' _args_foron_fn[2149025]))
      val _args_sizeon_fn[2149075]:int(64)[13] "temp"
      (2149079 'move' _args_sizeon_fn[2149075](2149077 'sizeof_bundle' _class_localson_fn[2149011]))
      on(2149135 call wrapon_fn[2149081] tmp[236338] _args_vforon_fn[2149069] _args_sizeon_fn[2149075] _args_foron_fn[2149025])
    }
    val errorExists[2169940]:bool[10] "temp"
    (2169945 'move' errorExists[2169940](2169942 '!=' error[1842780] nil[44]))
    if errorExists[2169940]
    {
      (1842786 '=' error_out[1842777] error[1842780])
      (1877227 call chpl__autoDestroy[1562275] ret[236242])
      gotoErrorHandlingReturn _end_path[534670] _end_path[534670]
    }
    {
    }
    const-val call_tmp[715874]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (715877 'move' call_tmp[715874](236371 call _cond_test[224002] err[236249]))
    if call_tmp[715874]
    {
      {
        val error[1842794]:Error[167984] "error variable" "temp"
        (1842803 'move' error[1842794] nil[44])
        (236367 call ioerror[266332] err[236249] "in file.path" error[1842794])
        val errorExists[2169948]:bool[10] "temp"
        (2169953 'move' errorExists[2169948](2169950 '!=' error[1842794] nil[44]))
        if errorExists[2169948]
        {
          gotoErrorHandling handler[1842795] handler[1842795]
        }
        label handler[1842795]
        const-val shouldHandleError[1842814]:bool[10] "temp"
        val errorExists[2169956]:bool[10] "temp"
        (2169961 'move' errorExists[2169956](2169958 '!=' error[1842794] nil[44]))
        (1842818 'move' shouldHandleError[1842814] errorExists[2169956])
        if shouldHandleError[1842814]
        {
          (1842810 '=' error_out[1842777] error[1842794])
          (1877230 call chpl__autoDestroy[1562275] ret[236242])
          gotoErrorHandlingReturn _end_path[534670] _end_path[534670]
        }
      }
    }
    (1021740 'move' ret[534672] ret[236242])
    gotoReturn _end_path[534670] _end_path[534670]
    label _end_path[534670]
    (1864988 '=' _retArg[1864986] ret[534672])
    (1864990 return _void[55])
  }
  function _ref(file)[948795].tryGetPath[236385](const  ref arg this[236387]:_ref(file)[948795], ref arg _retArg[1865022]:_ref(string)[938000]) : void[4] "fn returns via _retArg" "method" "resolved"
  {
    val ret[534684]:string[26] "dead after last mention" "RVV" "temp"
    {
      val error[1842822]:Error[167984] "error variable" "temp"
      (1842831 'move' error[1842822] nil[44])
      const-val call_tmp[715881]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1864980]:string[26] "temp"
      (236396 call path[236233] this[236387] error[1842822] ret_tmp[1864980])
      (1864983 'move' call_tmp[715881] ret_tmp[1864980])
      val errorExists[2169964]:bool[10] "temp"
      (2169969 'move' errorExists[2169964](2169966 '!=' error[1842822] nil[44]))
      if errorExists[2169964]
      {
        gotoErrorHandling handler[1842823] handler[1842823]
      }
      (1021774 'move' ret[534684] call_tmp[715881])
      gotoReturn _end_tryGetPath[534682] _end_tryGetPath[534682]
      label handler[1842823]
      const-val shouldHandleError[1842838]:bool[10] "temp"
      val errorExists[2169972]:bool[10] "temp"
      (2169977 'move' errorExists[2169972](2169974 '!=' error[1842822] nil[44]))
      (1842842 'move' shouldHandleError[1842838] errorExists[2169972])
      if shouldHandleError[1842838]
      {
        {
          val call_tmp[715886]:Error[167984] "dead at end of block" "maybe param" "temp"
          (715889 'move' call_tmp[715886] error[1842822])
          val tmp[354570]:Error[167984] "dead at end of block" "insert auto destroy" "temp"
          (547067 'move' tmp[354570](1021747 call chpl__initCopy[968116] call_tmp[715886]))
          val call_tmp[715891]:Error[167984] "dead at end of block" "expr temp" "maybe param" "temp"
          (715894 'move' call_tmp[715891] tmp[354570])
          const-val call_tmp[715896]:owned Error[966519] "dead at end of block" "delay instantiation" "maybe param" "temp"
          const-val initTemp[1021754]:owned Error[966519] "dead at end of block" "delay instantiation" "temp"
          (1021757 call init[968155] initTemp[1021754] call_tmp[715891])
          (715899 'move' call_tmp[715896] initTemp[1021754])
          const-val chpl_anon_error[354576]:owned Error[966519] "dead at end of block" "delay instantiation" "insert auto destroy"
          (547069 'move' chpl_anon_error[354576] call_tmp[715896])
          {
            (534696 'move' ret[534684](1865026 call chpl__initCopy[981409] "unknown"))
            (1877233 call chpl__autoDestroy[1569406] chpl_anon_error[354576])
            gotoReturn _end_tryGetPath[534682] _end_tryGetPath[534682]
          }
          (1877237 call chpl__autoDestroy[1569406] chpl_anon_error[354576])
        }
      }
    }
    label _end_tryGetPath[534682]
    (1865024 '=' _retArg[1865022] ret[534684])
    (1865028 return _void[55])
  }
  function openfd[237292](const in arg fd[237289]:int(32)[95], const in arg hints[237296]:int(32)[95], const  ref arg style[237304]:iostyle[231865], ref arg error_out[1842846]:Error[167984], ref arg _retArg[1865036]:_ref(file)[948795]) : void[4] throws "fn returns via _retArg" "resolved"
  {
    const-val ret[534783]:file[235601] "dead after last mention" "RVV" "temp"
    const-val local_style[237310]:iostyle[231865] "dead at end of block" "insert auto destroy"
    (547105 'move' local_style[237310] style[237304])
    val ret[237316]:file[235601] "dead at end of block" "insert auto destroy"
    (1016582 call init[235595] ret[237316])
    ref call_tmp[716180]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (716183 'move' call_tmp[716180](237321 call home[887010] ret[237316]))
    const-val call_tmp[716185]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1864012]:locale[28] "temp"
    (396599 call here[90438] ret_tmp[1864012])
    (1864015 'move' call_tmp[716185] ret_tmp[1864012])
    (237325 call =[90634] call_tmp[716180] call_tmp[716185])
    (1877240 call chpl__autoDestroy[1562339] call_tmp[716185])
    ref call_tmp[716192]:_ref(qio_file_ptr_t)[936934] "dead at end of block" "maybe param" "temp"
    (716195 'move' call_tmp[716192](237330 call _file_internal[887036] ret[237316]))
    const-val call_tmp[716197]:_file[155] "dead at end of block" "expr temp" "maybe param" "temp"
    (716200 'move' call_tmp[716197](237336 call chpl_cnullfile[223595]))
    const-val call_tmp[716202]:syserr[223605] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[986585]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (986591 'move' coerce_tmp[986585](986587 'cast' int(32)[95] 0))
    (716205 'move' call_tmp[716202](237341 call qio_file_init[232669] call_tmp[716192] call_tmp[716197] fd[237289] hints[237296] local_style[237310] coerce_tmp[986585]))
    const-val err[237342]:syserr[223605] "dead at end of block" "insert auto destroy"
    (547109 'move' err[237342](986594 call chpl__initCopy[964546] call_tmp[716202]))
    const-val call_tmp[716207]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (716210 'move' call_tmp[716207](237405 call _cond_test[224002] err[237342]))
    if call_tmp[716207]
    {
      val path_cs[237348]:c_string[19] "dead at end of block" "insert auto destroy"
      (1016620 'move' path_cs[237348](1016618 'cast' c_string[19] nil[44]))
      const-val call_tmp[716212]:syserr[223605] "dead at end of block" "maybe param" "temp"
      (716215 'move' call_tmp[716212](237357 call qio_file_path_for_fd[233668] fd[237289] path_cs[237348]))
      const-val path_err[237358]:syserr[223605] "dead at end of block" "insert auto destroy"
      (547113 'move' path_err[237358](986610 call chpl__initCopy[964546] call_tmp[716212]))
      const-val path[237376]:string[26] "dead at end of block" "insert auto destroy"
      val tmp[576776]:string[26] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "no auto destroy" "temp"
      const-val tmp[576777]:bool[10] "dead after last mention" "maybe param" "temp"
      (576782 'move' tmp[576777](576780 call _cond_test[224002] path_err[237358]))
      if tmp[576777]
      {
        (576787 'move' tmp[576776](1865040 call chpl__initCopy[981409] "unknown"))
      }
      {
        const-val tmp[576789]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val default_arg_length[986618]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        val error[1842849]:Error[167984] "error variable" "temp"
        (1842851 'move' error[1842849] nil[44])
        (986623 'move' default_arg_length[986618](986620 call createStringWithNewBuffer_default_length[964107] path_cs[237348] error[1842849]))
        val errorExists[2169980]:bool[10] "temp"
        (2169985 'move' errorExists[2169980](2169982 '!=' error[1842849] nil[44]))
        if errorExists[2169980]
        {
          (1842855 '=' error_out[1842846] error[1842849])
          (1877243 call chpl__autoDestroy[1564124] ret[237316])
          gotoErrorHandlingReturn _end_openfd[534781] _end_openfd[534781]
        }
        val error[1842864]:Error[167984] "error variable" "temp"
        (1842866 'move' error[1842864] nil[44])
        const-val ret_tmp[1862600]:string[26] "temp"
        (237372 call createStringWithNewBuffer[30413] path_cs[237348] default_arg_length[986618] replace[173694] error[1842864] ret_tmp[1862600])
        (1862603 'move' tmp[576789] ret_tmp[1862600])
        val errorExists[2169988]:bool[10] "temp"
        (2169993 'move' errorExists[2169988](2169990 '!=' error[1842864] nil[44]))
        if errorExists[2169988]
        {
          (1842870 '=' error_out[1842846] error[1842864])
          (1877246 call chpl__autoDestroy[1564124] ret[237316])
          gotoErrorHandlingReturn _end_openfd[534781] _end_openfd[534781]
        }
        (576796 'move' tmp[576776] tmp[576789])
      }
      (547115 'move' path[237376] tmp[576776])
      {
        val error[1842878]:Error[167984] "error variable" "temp"
        (1842887 'move' error[1842878] nil[44])
        (237401 call ioerror[266271] err[237342] "in openfd" path[237376] error[1842878])
        val errorExists[2169996]:bool[10] "temp"
        (2170001 'move' errorExists[2169996](2169998 '!=' error[1842878] nil[44]))
        if errorExists[2169996]
        {
          gotoErrorHandling handler[1842879] handler[1842879]
        }
        label handler[1842879]
        const-val shouldHandleError[1842898]:bool[10] "temp"
        val errorExists[2170004]:bool[10] "temp"
        (2170009 'move' errorExists[2170004](2170006 '!=' error[1842878] nil[44]))
        (1842902 'move' shouldHandleError[1842898] errorExists[2170004])
        if shouldHandleError[1842898]
        {
          (1842894 '=' error_out[1842846] error[1842878])
          (1877249 call chpl__autoDestroy[1562275] path[237376])
          (1877252 call chpl__autoDestroy[1564124] ret[237316])
          gotoErrorHandlingReturn _end_openfd[534781] _end_openfd[534781]
        }
      }
      (1877256 call chpl__autoDestroy[1562275] path[237376])
    }
    (1016580 'move' ret[534783] ret[237316])
    gotoReturn _end_openfd[534781] _end_openfd[534781]
    label _end_openfd[534781]
    (1865038 '=' _retArg[1865036] ret[534783])
    (1865042 return _void[55])
  }
  function openfd_default_style[985806](ref arg error_out[1843587]:Error[167984]) : iostyle[231865] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "resolved"
  {
    val ret[985808]:iostyle[231865] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[985813]:iostyle[231865] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    (985818 'move' style[985813](985817 call defaultIOStyle[235316]))
    (985850 'move' ret[985808] style[985813])
    label _endopenfd_default_style[1843589]
    (985811 return ret[985808])
  }
  function openfd_default_hints[985764](ref arg error_out[1843583]:Error[167984]) : int(32)[95] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "resolved"
  {
    val ret[985766]:int(32)[95] "dead after last mention" "RVV" "maybe param" "temp"
    const-val hints[985771]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[985775]:int(32)[95] "dead after last mention" "temp"
    val _formal_type[985777]:int(32)[95] "dead after last mention" "temp" "type variable"
    (985795 'move' tmp[985775] IOHINT_NONE[231432])
    (985788 'move' hints[985771] tmp[985775])
    (985791 'move' ret[985766] hints[985771])
    label _endopenfd_default_hints[1843585]
    (985769 return ret[985766])
  }
  function openfp[237421](const in arg fp[237418]:_file[155], const in arg hints[237425]:int(32)[95], const  ref arg style[237433]:iostyle[231865], ref arg error_out[1842906]:Error[167984], ref arg _retArg[1865056]:_ref(file)[948795]) : void[4] throws "fn returns via _retArg" "resolved"
  {
    const-val ret[534795]:file[235601] "dead after last mention" "RVV" "temp"
    const-val local_style[237439]:iostyle[231865] "dead at end of block" "insert auto destroy"
    (547117 'move' local_style[237439] style[237433])
    val ret[237445]:file[235601] "dead at end of block" "insert auto destroy"
    (1022187 call init[235595] ret[237445])
    ref call_tmp[716219]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (716222 'move' call_tmp[716219](237450 call home[887010] ret[237445]))
    const-val call_tmp[716224]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1864018]:locale[28] "temp"
    (396620 call here[90438] ret_tmp[1864018])
    (1864021 'move' call_tmp[716224] ret_tmp[1864018])
    (237454 call =[90634] call_tmp[716219] call_tmp[716224])
    (1877259 call chpl__autoDestroy[1562339] call_tmp[716224])
    ref call_tmp[716231]:_ref(qio_file_ptr_t)[936934] "dead at end of block" "maybe param" "temp"
    (716234 'move' call_tmp[716231](237459 call _file_internal[887036] ret[237445]))
    const-val call_tmp[716241]:syserr[223605] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1022142]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1022148 'move' coerce_tmp[1022142](1022144 'cast' int(32)[95] -1))
    const-val coerce_tmp[1022150]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1022156 'move' coerce_tmp[1022150](1022152 'cast' int(32)[95] 1))
    (716244 'move' call_tmp[716241](237470 call qio_file_init[232669] call_tmp[716231] fp[237418] coerce_tmp[1022142] hints[237425] local_style[237439] coerce_tmp[1022150]))
    const-val err[237471]:syserr[223605] "dead at end of block" "insert auto destroy"
    (547121 'move' err[237471](1022159 call chpl__initCopy[964546] call_tmp[716241]))
    const-val call_tmp[716246]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (716249 'move' call_tmp[716246](237539 call _cond_test[224002] err[237471]))
    if call_tmp[716246]
    {
      val path_cs[237477]:c_string[19] "dead at end of block" "insert auto destroy"
      (1022195 'move' path_cs[237477](1022193 'cast' c_string[19] nil[44]))
      const-val call_tmp[716251]:syserr[223605] "dead at end of block" "maybe param" "temp"
      (716254 'move' call_tmp[716251](237486 call qio_file_path_for_fp[233684] fp[237418] path_cs[237477]))
      const-val path_err[237487]:syserr[223605] "dead at end of block" "insert auto destroy"
      (547125 'move' path_err[237487](1022165 call chpl__initCopy[964546] call_tmp[716251]))
      const-val path[237505]:string[26] "dead at end of block" "insert auto destroy"
      val tmp[576803]:string[26] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "no auto destroy" "temp"
      const-val tmp[576804]:bool[10] "dead after last mention" "maybe param" "temp"
      (576809 'move' tmp[576804](576807 call _cond_test[224002] path_err[237487]))
      if tmp[576804]
      {
        (576814 'move' tmp[576803](1865060 call chpl__initCopy[981409] "unknown"))
      }
      {
        const-val tmp[576816]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val default_arg_length[1022173]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        val error[1842909]:Error[167984] "error variable" "temp"
        (1842911 'move' error[1842909] nil[44])
        (1022178 'move' default_arg_length[1022173](1022175 call createStringWithNewBuffer_default_length[964107] path_cs[237477] error[1842909]))
        val errorExists[2170012]:bool[10] "temp"
        (2170017 'move' errorExists[2170012](2170014 '!=' error[1842909] nil[44]))
        if errorExists[2170012]
        {
          (1842915 '=' error_out[1842906] error[1842909])
          (1877262 call chpl__autoDestroy[1564124] ret[237445])
          gotoErrorHandlingReturn _end_openfp[534793] _end_openfp[534793]
        }
        val error[1842924]:Error[167984] "error variable" "temp"
        (1842926 'move' error[1842924] nil[44])
        const-val ret_tmp[1862606]:string[26] "temp"
        (237501 call createStringWithNewBuffer[30413] path_cs[237477] default_arg_length[1022173] replace[173694] error[1842924] ret_tmp[1862606])
        (1862609 'move' tmp[576816] ret_tmp[1862606])
        val errorExists[2170020]:bool[10] "temp"
        (2170025 'move' errorExists[2170020](2170022 '!=' error[1842924] nil[44]))
        if errorExists[2170020]
        {
          (1842930 '=' error_out[1842906] error[1842924])
          (1877265 call chpl__autoDestroy[1564124] ret[237445])
          gotoErrorHandlingReturn _end_openfp[534793] _end_openfp[534793]
        }
        (576823 'move' tmp[576803] tmp[576816])
      }
      (547127 'move' path[237505] tmp[576803])
      (237512 call chpl_free_c_string[22709] path_cs[237477])
      {
        val error[1842938]:Error[167984] "error variable" "temp"
        (1842947 'move' error[1842938] nil[44])
        (237535 call ioerror[266271] err[237471] "in openfp" path[237505] error[1842938])
        val errorExists[2170028]:bool[10] "temp"
        (2170033 'move' errorExists[2170028](2170030 '!=' error[1842938] nil[44]))
        if errorExists[2170028]
        {
          gotoErrorHandling handler[1842939] handler[1842939]
        }
        label handler[1842939]
        const-val shouldHandleError[1842958]:bool[10] "temp"
        val errorExists[2170036]:bool[10] "temp"
        (2170041 'move' errorExists[2170036](2170038 '!=' error[1842938] nil[44]))
        (1842962 'move' shouldHandleError[1842958] errorExists[2170036])
        if shouldHandleError[1842958]
        {
          (1842954 '=' error_out[1842906] error[1842938])
          (1877268 call chpl__autoDestroy[1562275] path[237505])
          (1877271 call chpl__autoDestroy[1564124] ret[237445])
          gotoErrorHandlingReturn _end_openfp[534793] _end_openfp[534793]
        }
      }
      (1877275 call chpl__autoDestroy[1562275] path[237505])
    }
    (1022185 'move' ret[534795] ret[237445])
    gotoReturn _end_openfp[534793] _end_openfp[534793]
    label _end_openfp[534793]
    (1865058 '=' _retArg[1865056] ret[534795])
    (1865062 return _void[55])
  }
  function openfp_default_style[1021955](ref arg error_out[1843722]:Error[167984]) : iostyle[231865] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "resolved"
  {
    val ret[1021957]:iostyle[231865] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[1021962]:iostyle[231865] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    (1021967 'move' style[1021962](1021966 call defaultIOStyle[235316]))
    (1021971 'move' ret[1021957] style[1021962])
    label _endopenfp_default_style[1843724]
    (1021960 return ret[1021957])
  }
  function openfp_default_hints[1021913](ref arg error_out[1843718]:Error[167984]) : int(32)[95] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "resolved"
  {
    val ret[1021915]:int(32)[95] "dead after last mention" "RVV" "maybe param" "temp"
    const-val hints[1021920]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1021924]:int(32)[95] "dead after last mention" "temp"
    val _formal_type[1021926]:int(32)[95] "dead after last mention" "temp" "type variable"
    (1021944 'move' tmp[1021924] IOHINT_NONE[231432])
    (1021937 'move' hints[1021920] tmp[1021924])
    (1021940 'move' ret[1021915] hints[1021920])
    label _endopenfp_default_hints[1843720]
    (1021918 return ret[1021915])
  }
  function openmem[237646](const  ref arg style[237642]:iostyle[231865], ref arg error_out[1842966]:Error[167984], ref arg _retArg[1865082]:_ref(file)[948795]) : void[4] throws "fn returns via _retArg" "resolved"
  {
    const-val ret[534819]:file[235601] "dead after last mention" "RVV" "temp"
    const-val local_style[237650]:iostyle[231865] "dead at end of block" "insert auto destroy"
    (547135 'move' local_style[237650] style[237642])
    val ret[237656]:file[235601] "dead at end of block" "insert auto destroy"
    (1060662 call init[235595] ret[237656])
    ref call_tmp[716287]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (716290 'move' call_tmp[716287](237661 call home[887010] ret[237656]))
    const-val call_tmp[716292]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1864024]:locale[28] "temp"
    (396652 call here[90438] ret_tmp[1864024])
    (1864027 'move' call_tmp[716292] ret_tmp[1864024])
    (237665 call =[90634] call_tmp[716287] call_tmp[716292])
    (1877278 call chpl__autoDestroy[1562339] call_tmp[716292])
    ref call_tmp[716299]:_ref(qio_file_ptr_t)[936934] "dead at end of block" "maybe param" "temp"
    (716302 'move' call_tmp[716299](237670 call _file_internal[887036] ret[237656]))
    const-val call_tmp[716304]:syserr[223605] "dead at end of block" "maybe param" "temp"
    (716307 'move' call_tmp[716304](237676 call qio_file_open_mem[232749] call_tmp[716299] QBUFFER_PTR_NULL[231500] local_style[237650]))
    const-val err[237677]:syserr[223605] "dead at end of block" "insert auto destroy"
    (547139 'move' err[237677](1060654 call chpl__initCopy[964546] call_tmp[716304]))
    const-val call_tmp[716309]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (716312 'move' call_tmp[716309](237706 call _cond_test[224002] err[237677]))
    if call_tmp[716309]
    {
      {
        val error[1842968]:Error[167984] "error variable" "temp"
        (1842977 'move' error[1842968] nil[44])
        (237702 call ioerror[266332] err[237677] "in openmem" error[1842968])
        val errorExists[2170044]:bool[10] "temp"
        (2170049 'move' errorExists[2170044](2170046 '!=' error[1842968] nil[44]))
        if errorExists[2170044]
        {
          gotoErrorHandling handler[1842969] handler[1842969]
        }
        label handler[1842969]
        const-val shouldHandleError[1842988]:bool[10] "temp"
        val errorExists[2170052]:bool[10] "temp"
        (2170057 'move' errorExists[2170052](2170054 '!=' error[1842968] nil[44]))
        (1842992 'move' shouldHandleError[1842988] errorExists[2170052])
        if shouldHandleError[1842988]
        {
          (1842984 '=' error_out[1842966] error[1842968])
          (1877281 call chpl__autoDestroy[1564124] ret[237656])
          gotoErrorHandlingReturn _end_openmem[534817] _end_openmem[534817]
        }
      }
    }
    (1060660 'move' ret[534819] ret[237656])
    gotoReturn _end_openmem[534817] _end_openmem[534817]
    label _end_openmem[534817]
    (1865084 '=' _retArg[1865082] ret[534819])
    (1865086 return _void[55])
  }
  function openmem_default_style[1060620](ref arg error_out[1844153]:Error[167984]) : iostyle[231865] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "resolved"
  {
    val ret[1060622]:iostyle[231865] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[1060627]:iostyle[231865] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    (1060632 'move' style[1060627](1060631 call defaultIOStyle[235316]))
    (1060636 'move' ret[1060622] style[1060627])
    label _endopenmem_default_style[1844155]
    (1060625 return ret[1060622])
  }
  function _ref(channel(false,dynamic,true))[985697].home[1018085](ref arg this[1018089]:_ref(channel(false,dynamic,true))[985697]) ref : _ref(locale)[948905] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1018091]:_ref(locale)[948905] "dead after last mention" "RVV" "temp"
    ref call_tmp[1018099]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (1018101 'move' call_tmp[1018099](1018103 '.' this[1018089] home[985676]))
    (1018106 'move' ret[1018091] call_tmp[1018099])
    (1018110 return ret[1018091])
  }
  function _ref(channel(true,dynamic,true))[1021895].home[1023103](ref arg this[1023107]:_ref(channel(true,dynamic,true))[1021895]) ref : _ref(locale)[948905] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1023109]:_ref(locale)[948905] "dead after last mention" "RVV" "temp"
    ref call_tmp[1023117]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (1023119 'move' call_tmp[1023117](1023121 '.' this[1023107] home[1021874]))
    (1023124 'move' ret[1023109] call_tmp[1023117])
    (1023128 return ret[1023109])
  }
  function _ref(channel(true,dynamic,false))[1061017].home[1061816](ref arg this[1061820]:_ref(channel(true,dynamic,false))[1061017]) ref : _ref(locale)[948905] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1061822]:_ref(locale)[948905] "dead after last mention" "RVV" "temp"
    ref call_tmp[1061830]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (1061832 'move' call_tmp[1061830](1061834 '.' this[1061820] home[1060996]))
    (1061837 'move' ret[1061822] call_tmp[1061830])
    (1061841 return ret[1061822])
  }
  function _ref(channel(false,dynamic,false))[1080752].home[1081548](ref arg this[1081552]:_ref(channel(false,dynamic,false))[1080752]) ref : _ref(locale)[948905] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1081554]:_ref(locale)[948905] "dead after last mention" "RVV" "temp"
    ref call_tmp[1081562]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (1081564 'move' call_tmp[1081562](1081566 '.' this[1081552] home[1080731]))
    (1081569 'move' ret[1081554] call_tmp[1081562])
    (1081573 return ret[1081554])
  }
  function _ref(channel(false,dynamic,true))[985697]._channel_internal[1018427](ref arg this[1018431]:_ref(channel(false,dynamic,true))[985697]) ref : _ref(qio_channel_ptr_t)[936945] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1018433]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "RVV" "temp"
    ref call_tmp[1018441]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "temp"
    (1018443 'move' call_tmp[1018441](1018445 '.' this[1018431] _channel_internal[985681]))
    (1018448 'move' ret[1018433] call_tmp[1018441])
    (1018452 return ret[1018433])
  }
  function _ref(channel(true,dynamic,true))[1021895]._channel_internal[1023137](ref arg this[1023141]:_ref(channel(true,dynamic,true))[1021895]) ref : _ref(qio_channel_ptr_t)[936945] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1023143]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "RVV" "temp"
    ref call_tmp[1023151]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "temp"
    (1023153 'move' call_tmp[1023151](1023155 '.' this[1023141] _channel_internal[1021879]))
    (1023158 'move' ret[1023143] call_tmp[1023151])
    (1023162 return ret[1023143])
  }
  function _ref(channel(true,dynamic,false))[1061017]._channel_internal[1061850](ref arg this[1061854]:_ref(channel(true,dynamic,false))[1061017]) ref : _ref(qio_channel_ptr_t)[936945] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1061856]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "RVV" "temp"
    ref call_tmp[1061864]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "temp"
    (1061866 'move' call_tmp[1061864](1061868 '.' this[1061854] _channel_internal[1061001]))
    (1061871 'move' ret[1061856] call_tmp[1061864])
    (1061875 return ret[1061856])
  }
  function _ref(channel(false,dynamic,false))[1080752]._channel_internal[1081582](ref arg this[1081586]:_ref(channel(false,dynamic,false))[1080752]) ref : _ref(qio_channel_ptr_t)[936945] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1081588]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "RVV" "temp"
    ref call_tmp[1081596]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "temp"
    (1081598 'move' call_tmp[1081596](1081600 '.' this[1081586] _channel_internal[1080736]))
    (1081603 'move' ret[1081588] call_tmp[1081596])
    (1081607 return ret[1081588])
  }
  function _ref(channel(true,dynamic,false))[1061017]._readWriteThisFromLocale[1066377](ref arg this[1066381]:_ref(channel(true,dynamic,false))[1061017]) ref : _ref(locale)[948905] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1066383]:_ref(locale)[948905] "dead after last mention" "RVV" "temp"
    ref call_tmp[1066391]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (1066393 'move' call_tmp[1066391](1066395 '.' this[1066381] _readWriteThisFromLocale[1061005]))
    (1066398 'move' ret[1066383] call_tmp[1066391])
    (1066402 return ret[1066383])
  }
  function _ref(channel(true,dynamic,true))[1021895]._readWriteThisFromLocale[1543770](ref arg this[1543774]:_ref(channel(true,dynamic,true))[1021895]) ref : _ref(locale)[948905] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1543776]:_ref(locale)[948905] "dead after last mention" "RVV" "temp"
    ref call_tmp[1543784]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (1543786 'move' call_tmp[1543784](1543788 '.' this[1543774] _readWriteThisFromLocale[1021883]))
    (1543791 'move' ret[1543776] call_tmp[1543784])
    (1543795 return ret[1543776])
  }
  type channel(false,dynamic,true)[985688] val home[985676]:locale[28] "no doc" val _channel_internal[985681]:qio_channel_ptr_t[231486] "no doc" val _readWriteThisFromLocale[985685]:locale[28] "no doc"
  type channel(false,dynamic,false)[1080743] val home[1080731]:locale[28] "no doc" val _channel_internal[1080736]:qio_channel_ptr_t[231486] "no doc" val _readWriteThisFromLocale[1080740]:locale[28] "no doc"
  type channel(true,dynamic,true)[1021886] val home[1021874]:locale[28] "no doc" val _channel_internal[1021879]:qio_channel_ptr_t[231486] "no doc" val _readWriteThisFromLocale[1021883]:locale[28] "no doc"
  type channel(true,dynamic,false)[1061008] val home[1060996]:locale[28] "no doc" val _channel_internal[1061001]:qio_channel_ptr_t[231486] "no doc" val _readWriteThisFromLocale[1061005]:locale[28] "no doc"
  function =[1018500](ref arg lhs[1018502]:_ref(channel(false,dynamic,true))[985697], const  ref arg rhs[1018504]:channel(false,dynamic,true)[985688]) : void[4] "assignop" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    {
    }
    const-val tmp[1018703]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1018705]:_ref(locale)[948905] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1018707 'move' call_tmp[1018705](1018710 call home[1018085] rhs[1018504]))
    const-val call_tmp[1018713]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1019105]:BaseLocale[91204] "dead after last mention" "temp"
    (1019110 'move' _locale_tmp_[1019105](1019107 call _value[89984] call_tmp[1018705]))
    (1018715 'move' call_tmp[1018713](1018717 '_wide_get_locale' _locale_tmp_[1019105]))
    (1018719 'move' tmp[1018703] call_tmp[1018713])
    val rvfDerefTmp[2145358]:channel(false,dynamic,true)[985688] "temp"
    (2145362 'move' rvfDerefTmp[2145358](2145360 'deref' rhs[1018504]))
    val isdirect[2149732]:bool[10] "temp"
    (2149737 'move' isdirect[2149732](2149734 call chpl_doDirectExecuteOn[187469] tmp[1018703]))
    if isdirect[2149732]
    {
      (2149741 call on_fn[1018726] rvfDerefTmp[2145358])
    }
    {
      val _args_foron_fn[2149756]:_class_localson_fn[2149748] "temp"
      (2149760 'move' _args_foron_fn[2149756](2149758 'stack allocate class' _class_localson_fn[2149748]))
      (2149762 '.=' _args_foron_fn[2149756] _0_tmp[2149751] tmp[1018703])
      (2149766 '.=' _args_foron_fn[2149756] _1_rvfDerefTmp[2149753] rvfDerefTmp[2145358])
      val _args_vforon_fn[2149770]:c_void_ptr[149] "temp"
      (2149774 'move' _args_vforon_fn[2149770](2149772 'cast_to_void_star' _args_foron_fn[2149756]))
      val _args_sizeon_fn[2149776]:int(64)[13] "temp"
      (2149780 'move' _args_sizeon_fn[2149776](2149778 'sizeof_bundle' _class_localson_fn[2149748]))
      on(2149812 call wrapon_fn[2149782] tmp[1018703] _args_vforon_fn[2149770] _args_sizeon_fn[2149776] _args_foron_fn[2149756])
    }
    {
    }
    const-val tmp[1018747]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1018749]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (1018751 'move' call_tmp[1018749](1018754 call home[1018085] lhs[1018502]))
    const-val call_tmp[1018757]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1019124]:BaseLocale[91204] "dead after last mention" "temp"
    (1019129 'move' _locale_tmp_[1019124](1019126 call _value[89984] call_tmp[1018749]))
    (1018759 'move' call_tmp[1018757](1018761 '_wide_get_locale' _locale_tmp_[1019124]))
    (1018763 'move' tmp[1018747] call_tmp[1018757])
    val isdirect[2149817]:bool[10] "temp"
    (2149822 'move' isdirect[2149817](2149819 call chpl_doDirectExecuteOn[187469] tmp[1018747]))
    if isdirect[2149817]
    {
      (2149826 call on_fn[1018770] lhs[1018502])
    }
    {
      val _args_foron_fn[2149841]:_class_localson_fn[2149833] "temp"
      (2149845 'move' _args_foron_fn[2149841](2149843 'stack allocate class' _class_localson_fn[2149833]))
      (2149847 '.=' _args_foron_fn[2149841] _0_tmp[2149836] tmp[1018747])
      ref tmp[2149851]:channel(false,dynamic,true)[985688] "temp"
      (2149855 'move' tmp[2149851](2149853 'set reference' lhs[1018502]))
      (2149857 '.=' _args_foron_fn[2149841] _1_lhs[2149838] tmp[2149851])
      val _args_vforon_fn[2149861]:c_void_ptr[149] "temp"
      (2149865 'move' _args_vforon_fn[2149861](2149863 'cast_to_void_star' _args_foron_fn[2149841]))
      val _args_sizeon_fn[2149867]:int(64)[13] "temp"
      (2149871 'move' _args_sizeon_fn[2149867](2149869 'sizeof_bundle' _class_localson_fn[2149833]))
      on(2149903 call wrapon_fn[2149873] tmp[1018747] _args_vforon_fn[2149861] _args_sizeon_fn[2149867] _args_foron_fn[2149841])
    }
    {
    }
    ref call_tmp[1018791]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (1018793 'move' call_tmp[1018791](1018796 call home[1018085] lhs[1018502]))
    ref call_tmp[1018799]:_ref(locale)[948905] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1018801 'move' call_tmp[1018799](1018804 call home[1018085] rhs[1018504]))
    (1018808 call =[90634] call_tmp[1018791] call_tmp[1018799])
    ref call_tmp[1018812]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "temp"
    (1018814 'move' call_tmp[1018812](1018817 call _channel_internal[1018427] lhs[1018502]))
    ref call_tmp[1018820]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1018822 'move' call_tmp[1018820](1018825 call _channel_internal[1018427] rhs[1018504]))
    const-val coerce_tmp[1019147]:qio_channel_ptr_t[231486] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1019151 'move' coerce_tmp[1019147](1019149 'deref' call_tmp[1018820]))
    (1018829 call =[861541] call_tmp[1018812] coerce_tmp[1019147])
    (1018832 return _void[55])
  }
  function =[1023208](ref arg lhs[1023210]:_ref(channel(true,dynamic,true))[1021895], const  ref arg rhs[1023212]:channel(true,dynamic,true)[1021886]) : void[4] "assignop" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    {
    }
    const-val tmp[1023411]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1023413]:_ref(locale)[948905] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1023415 'move' call_tmp[1023413](1023418 call home[1023103] rhs[1023212]))
    const-val call_tmp[1023421]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1023813]:BaseLocale[91204] "dead after last mention" "temp"
    (1023818 'move' _locale_tmp_[1023813](1023815 call _value[89984] call_tmp[1023413]))
    (1023423 'move' call_tmp[1023421](1023425 '_wide_get_locale' _locale_tmp_[1023813]))
    (1023427 'move' tmp[1023411] call_tmp[1023421])
    val rvfDerefTmp[2145435]:channel(true,dynamic,true)[1021886] "temp"
    (2145439 'move' rvfDerefTmp[2145435](2145437 'deref' rhs[1023212]))
    val isdirect[2150415]:bool[10] "temp"
    (2150420 'move' isdirect[2150415](2150417 call chpl_doDirectExecuteOn[187469] tmp[1023411]))
    if isdirect[2150415]
    {
      (2150424 call on_fn[1023434] rvfDerefTmp[2145435])
    }
    {
      val _args_foron_fn[2150439]:_class_localson_fn[2150431] "temp"
      (2150443 'move' _args_foron_fn[2150439](2150441 'stack allocate class' _class_localson_fn[2150431]))
      (2150445 '.=' _args_foron_fn[2150439] _0_tmp[2150434] tmp[1023411])
      (2150449 '.=' _args_foron_fn[2150439] _1_rvfDerefTmp[2150436] rvfDerefTmp[2145435])
      val _args_vforon_fn[2150453]:c_void_ptr[149] "temp"
      (2150457 'move' _args_vforon_fn[2150453](2150455 'cast_to_void_star' _args_foron_fn[2150439]))
      val _args_sizeon_fn[2150459]:int(64)[13] "temp"
      (2150463 'move' _args_sizeon_fn[2150459](2150461 'sizeof_bundle' _class_localson_fn[2150431]))
      on(2150495 call wrapon_fn[2150465] tmp[1023411] _args_vforon_fn[2150453] _args_sizeon_fn[2150459] _args_foron_fn[2150439])
    }
    {
    }
    const-val tmp[1023455]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1023457]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (1023459 'move' call_tmp[1023457](1023462 call home[1023103] lhs[1023210]))
    const-val call_tmp[1023465]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1023832]:BaseLocale[91204] "dead after last mention" "temp"
    (1023837 'move' _locale_tmp_[1023832](1023834 call _value[89984] call_tmp[1023457]))
    (1023467 'move' call_tmp[1023465](1023469 '_wide_get_locale' _locale_tmp_[1023832]))
    (1023471 'move' tmp[1023455] call_tmp[1023465])
    val isdirect[2150500]:bool[10] "temp"
    (2150505 'move' isdirect[2150500](2150502 call chpl_doDirectExecuteOn[187469] tmp[1023455]))
    if isdirect[2150500]
    {
      (2150509 call on_fn[1023478] lhs[1023210])
    }
    {
      val _args_foron_fn[2150524]:_class_localson_fn[2150516] "temp"
      (2150528 'move' _args_foron_fn[2150524](2150526 'stack allocate class' _class_localson_fn[2150516]))
      (2150530 '.=' _args_foron_fn[2150524] _0_tmp[2150519] tmp[1023455])
      ref tmp[2150534]:channel(true,dynamic,true)[1021886] "temp"
      (2150538 'move' tmp[2150534](2150536 'set reference' lhs[1023210]))
      (2150540 '.=' _args_foron_fn[2150524] _1_lhs[2150521] tmp[2150534])
      val _args_vforon_fn[2150544]:c_void_ptr[149] "temp"
      (2150548 'move' _args_vforon_fn[2150544](2150546 'cast_to_void_star' _args_foron_fn[2150524]))
      val _args_sizeon_fn[2150550]:int(64)[13] "temp"
      (2150554 'move' _args_sizeon_fn[2150550](2150552 'sizeof_bundle' _class_localson_fn[2150516]))
      on(2150586 call wrapon_fn[2150556] tmp[1023455] _args_vforon_fn[2150544] _args_sizeon_fn[2150550] _args_foron_fn[2150524])
    }
    {
    }
    ref call_tmp[1023499]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (1023501 'move' call_tmp[1023499](1023504 call home[1023103] lhs[1023210]))
    ref call_tmp[1023507]:_ref(locale)[948905] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1023509 'move' call_tmp[1023507](1023512 call home[1023103] rhs[1023212]))
    (1023516 call =[90634] call_tmp[1023499] call_tmp[1023507])
    ref call_tmp[1023520]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "temp"
    (1023522 'move' call_tmp[1023520](1023525 call _channel_internal[1023137] lhs[1023210]))
    ref call_tmp[1023528]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1023530 'move' call_tmp[1023528](1023533 call _channel_internal[1023137] rhs[1023212]))
    const-val coerce_tmp[1023855]:qio_channel_ptr_t[231486] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1023859 'move' coerce_tmp[1023855](1023857 'deref' call_tmp[1023528]))
    (1023537 call =[861541] call_tmp[1023520] coerce_tmp[1023855])
    (1023540 return _void[55])
  }
  function =[1061921](ref arg lhs[1061923]:_ref(channel(true,dynamic,false))[1061017], const  ref arg rhs[1061925]:channel(true,dynamic,false)[1061008]) : void[4] "assignop" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    {
    }
    const-val tmp[1062124]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1062126]:_ref(locale)[948905] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1062128 'move' call_tmp[1062126](1062131 call home[1061816] rhs[1061925]))
    const-val call_tmp[1062134]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1062335]:BaseLocale[91204] "dead after last mention" "temp"
    (1062340 'move' _locale_tmp_[1062335](1062337 call _value[89984] call_tmp[1062126]))
    (1062136 'move' call_tmp[1062134](1062138 '_wide_get_locale' _locale_tmp_[1062335]))
    (1062140 'move' tmp[1062124] call_tmp[1062134])
    val rvfDerefTmp[2145543]:channel(true,dynamic,false)[1061008] "temp"
    (2145547 'move' rvfDerefTmp[2145543](2145545 'deref' rhs[1061925]))
    val isdirect[2151128]:bool[10] "temp"
    (2151133 'move' isdirect[2151128](2151130 call chpl_doDirectExecuteOn[187469] tmp[1062124]))
    if isdirect[2151128]
    {
      (2151137 call on_fn[1062147] rvfDerefTmp[2145543])
    }
    {
      val _args_foron_fn[2151152]:_class_localson_fn[2151144] "temp"
      (2151156 'move' _args_foron_fn[2151152](2151154 'stack allocate class' _class_localson_fn[2151144]))
      (2151158 '.=' _args_foron_fn[2151152] _0_tmp[2151147] tmp[1062124])
      (2151162 '.=' _args_foron_fn[2151152] _1_rvfDerefTmp[2151149] rvfDerefTmp[2145543])
      val _args_vforon_fn[2151166]:c_void_ptr[149] "temp"
      (2151170 'move' _args_vforon_fn[2151166](2151168 'cast_to_void_star' _args_foron_fn[2151152]))
      val _args_sizeon_fn[2151172]:int(64)[13] "temp"
      (2151176 'move' _args_sizeon_fn[2151172](2151174 'sizeof_bundle' _class_localson_fn[2151144]))
      on(2151208 call wrapon_fn[2151178] tmp[1062124] _args_vforon_fn[2151166] _args_sizeon_fn[2151172] _args_foron_fn[2151152])
    }
    {
    }
    const-val tmp[1062168]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1062170]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (1062172 'move' call_tmp[1062170](1062175 call home[1061816] lhs[1061923]))
    const-val call_tmp[1062178]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1062354]:BaseLocale[91204] "dead after last mention" "temp"
    (1062359 'move' _locale_tmp_[1062354](1062356 call _value[89984] call_tmp[1062170]))
    (1062180 'move' call_tmp[1062178](1062182 '_wide_get_locale' _locale_tmp_[1062354]))
    (1062184 'move' tmp[1062168] call_tmp[1062178])
    val isdirect[2151213]:bool[10] "temp"
    (2151218 'move' isdirect[2151213](2151215 call chpl_doDirectExecuteOn[187469] tmp[1062168]))
    if isdirect[2151213]
    {
      (2151222 call on_fn[1062191] lhs[1061923])
    }
    {
      val _args_foron_fn[2151237]:_class_localson_fn[2151229] "temp"
      (2151241 'move' _args_foron_fn[2151237](2151239 'stack allocate class' _class_localson_fn[2151229]))
      (2151243 '.=' _args_foron_fn[2151237] _0_tmp[2151232] tmp[1062168])
      ref tmp[2151247]:channel(true,dynamic,false)[1061008] "temp"
      (2151251 'move' tmp[2151247](2151249 'set reference' lhs[1061923]))
      (2151253 '.=' _args_foron_fn[2151237] _1_lhs[2151234] tmp[2151247])
      val _args_vforon_fn[2151257]:c_void_ptr[149] "temp"
      (2151261 'move' _args_vforon_fn[2151257](2151259 'cast_to_void_star' _args_foron_fn[2151237]))
      val _args_sizeon_fn[2151263]:int(64)[13] "temp"
      (2151267 'move' _args_sizeon_fn[2151263](2151265 'sizeof_bundle' _class_localson_fn[2151229]))
      on(2151299 call wrapon_fn[2151269] tmp[1062168] _args_vforon_fn[2151257] _args_sizeon_fn[2151263] _args_foron_fn[2151237])
    }
    {
    }
    ref call_tmp[1062212]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (1062214 'move' call_tmp[1062212](1062217 call home[1061816] lhs[1061923]))
    ref call_tmp[1062220]:_ref(locale)[948905] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1062222 'move' call_tmp[1062220](1062225 call home[1061816] rhs[1061925]))
    (1062229 call =[90634] call_tmp[1062212] call_tmp[1062220])
    ref call_tmp[1062233]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "temp"
    (1062235 'move' call_tmp[1062233](1062238 call _channel_internal[1061850] lhs[1061923]))
    ref call_tmp[1062241]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1062243 'move' call_tmp[1062241](1062246 call _channel_internal[1061850] rhs[1061925]))
    const-val coerce_tmp[1062377]:qio_channel_ptr_t[231486] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1062381 'move' coerce_tmp[1062377](1062379 'deref' call_tmp[1062241]))
    (1062250 call =[861541] call_tmp[1062233] coerce_tmp[1062377])
    (1062253 return _void[55])
  }
  function =[1081653](ref arg lhs[1081655]:_ref(channel(false,dynamic,false))[1080752], const  ref arg rhs[1081657]:channel(false,dynamic,false)[1080743]) : void[4] "assignop" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    {
    }
    const-val tmp[1081856]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1081858]:_ref(locale)[948905] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1081860 'move' call_tmp[1081858](1081863 call home[1081548] rhs[1081657]))
    const-val call_tmp[1081866]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1082067]:BaseLocale[91204] "dead after last mention" "temp"
    (1082072 'move' _locale_tmp_[1082067](1082069 call _value[89984] call_tmp[1081858]))
    (1081868 'move' call_tmp[1081866](1081870 '_wide_get_locale' _locale_tmp_[1082067]))
    (1081872 'move' tmp[1081856] call_tmp[1081866])
    val rvfDerefTmp[2145721]:channel(false,dynamic,false)[1080743] "temp"
    (2145725 'move' rvfDerefTmp[2145721](2145723 'deref' rhs[1081657]))
    val isdirect[2152349]:bool[10] "temp"
    (2152354 'move' isdirect[2152349](2152351 call chpl_doDirectExecuteOn[187469] tmp[1081856]))
    if isdirect[2152349]
    {
      (2152358 call on_fn[1081879] rvfDerefTmp[2145721])
    }
    {
      val _args_foron_fn[2152373]:_class_localson_fn[2152365] "temp"
      (2152377 'move' _args_foron_fn[2152373](2152375 'stack allocate class' _class_localson_fn[2152365]))
      (2152379 '.=' _args_foron_fn[2152373] _0_tmp[2152368] tmp[1081856])
      (2152383 '.=' _args_foron_fn[2152373] _1_rvfDerefTmp[2152370] rvfDerefTmp[2145721])
      val _args_vforon_fn[2152387]:c_void_ptr[149] "temp"
      (2152391 'move' _args_vforon_fn[2152387](2152389 'cast_to_void_star' _args_foron_fn[2152373]))
      val _args_sizeon_fn[2152393]:int(64)[13] "temp"
      (2152397 'move' _args_sizeon_fn[2152393](2152395 'sizeof_bundle' _class_localson_fn[2152365]))
      on(2152429 call wrapon_fn[2152399] tmp[1081856] _args_vforon_fn[2152387] _args_sizeon_fn[2152393] _args_foron_fn[2152373])
    }
    {
    }
    const-val tmp[1081900]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1081902]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (1081904 'move' call_tmp[1081902](1081907 call home[1081548] lhs[1081655]))
    const-val call_tmp[1081910]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1082086]:BaseLocale[91204] "dead after last mention" "temp"
    (1082091 'move' _locale_tmp_[1082086](1082088 call _value[89984] call_tmp[1081902]))
    (1081912 'move' call_tmp[1081910](1081914 '_wide_get_locale' _locale_tmp_[1082086]))
    (1081916 'move' tmp[1081900] call_tmp[1081910])
    val isdirect[2152434]:bool[10] "temp"
    (2152439 'move' isdirect[2152434](2152436 call chpl_doDirectExecuteOn[187469] tmp[1081900]))
    if isdirect[2152434]
    {
      (2152443 call on_fn[1081923] lhs[1081655])
    }
    {
      val _args_foron_fn[2152458]:_class_localson_fn[2152450] "temp"
      (2152462 'move' _args_foron_fn[2152458](2152460 'stack allocate class' _class_localson_fn[2152450]))
      (2152464 '.=' _args_foron_fn[2152458] _0_tmp[2152453] tmp[1081900])
      ref tmp[2152468]:channel(false,dynamic,false)[1080743] "temp"
      (2152472 'move' tmp[2152468](2152470 'set reference' lhs[1081655]))
      (2152474 '.=' _args_foron_fn[2152458] _1_lhs[2152455] tmp[2152468])
      val _args_vforon_fn[2152478]:c_void_ptr[149] "temp"
      (2152482 'move' _args_vforon_fn[2152478](2152480 'cast_to_void_star' _args_foron_fn[2152458]))
      val _args_sizeon_fn[2152484]:int(64)[13] "temp"
      (2152488 'move' _args_sizeon_fn[2152484](2152486 'sizeof_bundle' _class_localson_fn[2152450]))
      on(2152520 call wrapon_fn[2152490] tmp[1081900] _args_vforon_fn[2152478] _args_sizeon_fn[2152484] _args_foron_fn[2152458])
    }
    {
    }
    ref call_tmp[1081944]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (1081946 'move' call_tmp[1081944](1081949 call home[1081548] lhs[1081655]))
    ref call_tmp[1081952]:_ref(locale)[948905] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1081954 'move' call_tmp[1081952](1081957 call home[1081548] rhs[1081657]))
    (1081961 call =[90634] call_tmp[1081944] call_tmp[1081952])
    ref call_tmp[1081965]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "temp"
    (1081967 'move' call_tmp[1081965](1081970 call _channel_internal[1081582] lhs[1081655]))
    ref call_tmp[1081973]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1081975 'move' call_tmp[1081973](1081978 call _channel_internal[1081582] rhs[1081657]))
    const-val coerce_tmp[1082109]:qio_channel_ptr_t[231486] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1082113 'move' coerce_tmp[1082109](1082111 'deref' call_tmp[1081973]))
    (1081982 call =[861541] call_tmp[1081965] coerce_tmp[1082109])
    (1081985 return _void[55])
  }
  function channel(false,dynamic,true)[985688].init[1017932](ref arg this[1017938]:channel(false,dynamic,true)[985688]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1017992]:locale[28] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[1864036]:locale[28] "temp"
    (1017997 call here[90438] ret_tmp[1864036])
    (1864039 'move' call_tmp[1017992] ret_tmp[1864036])
    val tmp[1017998]:locale[28] "dead after last mention" "temp"
    (1018000 'move' tmp[1017998] call_tmp[1017992])
    (1018004 '.=' this[1017938] home[985676] tmp[1017998])
    val tmp[1018009]:qio_channel_ptr_t[231486] "dead after last mention" "temp"
    (1018011 'move' tmp[1018009](1018047 call chpl__initCopy[1018049] QIO_CHANNEL_PTR_NULL[231489]))
    (1018015 '.=' this[1017938] _channel_internal[985681] tmp[1018009])
    val tmp[1018020]:locale[28] "dead after last mention" "temp"
    (1018022 call init=[90170] tmp[1018020] nilLocale[89942])
    (1018025 '.=' this[1017938] _readWriteThisFromLocale[985685] tmp[1018020])
    (1018030 return _void[55])
  }
  function channel(true,dynamic,true)[1021886].init[1022968](ref arg this[1022974]:channel(true,dynamic,true)[1021886]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1023028]:locale[28] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[1864042]:locale[28] "temp"
    (1023033 call here[90438] ret_tmp[1864042])
    (1864045 'move' call_tmp[1023028] ret_tmp[1864042])
    val tmp[1023034]:locale[28] "dead after last mention" "temp"
    (1023036 'move' tmp[1023034] call_tmp[1023028])
    (1023040 '.=' this[1022974] home[1021874] tmp[1023034])
    val tmp[1023045]:qio_channel_ptr_t[231486] "dead after last mention" "temp"
    (1023047 'move' tmp[1023045](1023083 call chpl__initCopy[1018049] QIO_CHANNEL_PTR_NULL[231489]))
    (1023051 '.=' this[1022974] _channel_internal[1021879] tmp[1023045])
    val tmp[1023056]:locale[28] "dead after last mention" "temp"
    (1023058 call init=[90170] tmp[1023056] nilLocale[89942])
    (1023061 '.=' this[1022974] _readWriteThisFromLocale[1021883] tmp[1023056])
    (1023066 return _void[55])
  }
  function channel(true,dynamic,false)[1061008].init[1061681](ref arg this[1061687]:channel(true,dynamic,false)[1061008]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1061741]:locale[28] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[1864048]:locale[28] "temp"
    (1061746 call here[90438] ret_tmp[1864048])
    (1864051 'move' call_tmp[1061741] ret_tmp[1864048])
    val tmp[1061747]:locale[28] "dead after last mention" "temp"
    (1061749 'move' tmp[1061747] call_tmp[1061741])
    (1061753 '.=' this[1061687] home[1060996] tmp[1061747])
    val tmp[1061758]:qio_channel_ptr_t[231486] "dead after last mention" "temp"
    (1061760 'move' tmp[1061758](1061796 call chpl__initCopy[1018049] QIO_CHANNEL_PTR_NULL[231489]))
    (1061764 '.=' this[1061687] _channel_internal[1061001] tmp[1061758])
    val tmp[1061769]:locale[28] "dead after last mention" "temp"
    (1061771 call init=[90170] tmp[1061769] nilLocale[89942])
    (1061774 '.=' this[1061687] _readWriteThisFromLocale[1061005] tmp[1061769])
    (1061779 return _void[55])
  }
  function channel(false,dynamic,false)[1080743].init[1081413](ref arg this[1081419]:channel(false,dynamic,false)[1080743]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1081473]:locale[28] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[1864066]:locale[28] "temp"
    (1081478 call here[90438] ret_tmp[1864066])
    (1864069 'move' call_tmp[1081473] ret_tmp[1864066])
    val tmp[1081479]:locale[28] "dead after last mention" "temp"
    (1081481 'move' tmp[1081479] call_tmp[1081473])
    (1081485 '.=' this[1081419] home[1080731] tmp[1081479])
    val tmp[1081490]:qio_channel_ptr_t[231486] "dead after last mention" "temp"
    (1081492 'move' tmp[1081490](1081528 call chpl__initCopy[1018049] QIO_CHANNEL_PTR_NULL[231489]))
    (1081496 '.=' this[1081419] _channel_internal[1080736] tmp[1081490])
    val tmp[1081501]:locale[28] "dead after last mention" "temp"
    (1081503 call init=[90170] tmp[1081501] nilLocale[89942])
    (1081506 '.=' this[1081419] _readWriteThisFromLocale[1080740] tmp[1081501])
    (1081511 return _void[55])
  }
  function channel(true,dynamic,false)[1061008].init[1068449](ref arg this[1068455]:channel(true,dynamic,false)[1061008], const  ref arg home[1068463]:locale[28], const in arg _channel_internal[1068465]:qio_channel_ptr_t[231486], const  ref arg _readWriteThisFromLocale[1068467]:locale[28]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val tmp[1068515]:locale[28] "dead after last mention" "temp"
    (1068517 call init=[90170] tmp[1068515] home[1068463])
    (1068521 '.=' this[1068455] home[1060996] tmp[1068515])
    val tmp[1068526]:qio_channel_ptr_t[231486] "dead after last mention" "temp"
    (1068528 'move' tmp[1068526](1068566 call chpl__initCopy[1018049] _channel_internal[1068465]))
    (1068532 '.=' this[1068455] _channel_internal[1061001] tmp[1068526])
    val tmp[1068537]:locale[28] "dead after last mention" "temp"
    (1068539 call init=[90170] tmp[1068537] _readWriteThisFromLocale[1068467])
    (1068542 '.=' this[1068455] _readWriteThisFromLocale[1061005] tmp[1068537])
    (1068547 return _void[55])
  }
  function channel(false,dynamic,true)[985688].init[1017708](ref arg this[1017714]:channel(false,dynamic,true)[985688], const  ref arg f[1017722]:file[235601], ref arg error[1017724]:_ref(syserr)[948893], const in arg hints[1017728]:int(32)[95], const in arg start[1017734]:int(64)[13], const in arg end[1017740]:int(64)[13], const in arg local_style[1017742]:iostyle[231865]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val _formal_tmp_error[1017919]:syserr[223605] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1017758 call init[1017932] this[1017714])
    const-val tmp[1017763]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1017765]:_ref(locale)[948905] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1017767 'move' call_tmp[1017765](1017770 call home[887010] f[1017722]))
    const-val call_tmp[1017773]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1018075]:BaseLocale[91204] "dead after last mention" "temp"
    (1018080 'move' _locale_tmp_[1018075](1018077 call _value[89984] call_tmp[1017765]))
    (1017775 'move' call_tmp[1017773](1017777 '_wide_get_locale' _locale_tmp_[1018075]))
    (1017779 'move' tmp[1017763] call_tmp[1017773])
    val rvfDerefTmp[2145324]:file[235601] "temp"
    (2145328 'move' rvfDerefTmp[2145324](2145326 'deref' f[1017722]))
    val rvfDerefTmp[2145345]:iostyle[231865] "temp"
    (2145348 'move' rvfDerefTmp[2145345] local_style[1017742])
    val isdirect[2149545]:bool[10] "temp"
    (2149550 'move' isdirect[2149545](2149547 call chpl_doDirectExecuteOn[187469] tmp[1017763]))
    if isdirect[2149545]
    {
      (2149554 call on_fn[1017786] start[1017734] rvfDerefTmp[2145324] _formal_tmp_error[1017919] end[1017740] hints[1017728] rvfDerefTmp[2145345] this[1017714])
    }
    {
      val _args_foron_fn[2149587]:_class_localson_fn[2149567] "temp"
      (2149591 'move' _args_foron_fn[2149587](2149589 'stack allocate class' _class_localson_fn[2149567]))
      (2149593 '.=' _args_foron_fn[2149587] _0_tmp[2149570] tmp[1017763])
      (2149597 '.=' _args_foron_fn[2149587] _1_start[2149572] start[1017734])
      (2149601 '.=' _args_foron_fn[2149587] _2_rvfDerefTmp[2149574] rvfDerefTmp[2145324])
      ref tmp[2149605]:syserr[223605] "temp"
      (2149609 'move' tmp[2149605](2149607 'set reference' _formal_tmp_error[1017919]))
      (2149611 '.=' _args_foron_fn[2149587] _3__formal_tmp_error[2149576] tmp[2149605])
      (2149615 '.=' _args_foron_fn[2149587] _4_end[2149578] end[1017740])
      (2149619 '.=' _args_foron_fn[2149587] _5_hints[2149580] hints[1017728])
      (2149623 '.=' _args_foron_fn[2149587] _6_rvfDerefTmp[2149582] rvfDerefTmp[2145345])
      ref tmp[2149627]:channel(false,dynamic,true)[985688] "temp"
      (2149631 'move' tmp[2149627](2149629 'set reference' this[1017714]))
      (2149633 '.=' _args_foron_fn[2149587] _7_this[2149584] tmp[2149627])
      val _args_vforon_fn[2149637]:c_void_ptr[149] "temp"
      (2149641 'move' _args_vforon_fn[2149637](2149639 'cast_to_void_star' _args_foron_fn[2149587]))
      val _args_sizeon_fn[2149643]:int(64)[13] "temp"
      (2149647 'move' _args_sizeon_fn[2149643](2149645 'sizeof_bundle' _class_localson_fn[2149567]))
      on(2149727 call wrapon_fn[2149649] tmp[1017763] _args_vforon_fn[2149637] _args_sizeon_fn[2149643] _args_foron_fn[2149587])
    }
    {
    }
    label _endinit[1017929]
    (1877574 '=' error[1017724] _formal_tmp_error[1017919])
    (1017916 return _void[55])
  }
  function channel(true,dynamic,true)[1021886].init[1022744](ref arg this[1022750]:channel(true,dynamic,true)[1021886], const  ref arg f[1022758]:file[235601], ref arg error[1022760]:_ref(syserr)[948893], const in arg hints[1022764]:int(32)[95], const in arg start[1022770]:int(64)[13], const in arg end[1022776]:int(64)[13], const in arg local_style[1022778]:iostyle[231865]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val _formal_tmp_error[1022955]:syserr[223605] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1022794 call init[1022968] this[1022750])
    const-val tmp[1022799]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1022801]:_ref(locale)[948905] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1022803 'move' call_tmp[1022801](1022806 call home[887010] f[1022758]))
    const-val call_tmp[1022809]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1023093]:BaseLocale[91204] "dead after last mention" "temp"
    (1023098 'move' _locale_tmp_[1023093](1023095 call _value[89984] call_tmp[1022801]))
    (1022811 'move' call_tmp[1022809](1022813 '_wide_get_locale' _locale_tmp_[1023093]))
    (1022815 'move' tmp[1022799] call_tmp[1022809])
    val rvfDerefTmp[2145401]:iostyle[231865] "temp"
    (2145404 'move' rvfDerefTmp[2145401] local_style[1022778])
    val rvfDerefTmp[2145414]:file[235601] "temp"
    (2145418 'move' rvfDerefTmp[2145414](2145416 'deref' f[1022758]))
    val isdirect[2150228]:bool[10] "temp"
    (2150233 'move' isdirect[2150228](2150230 call chpl_doDirectExecuteOn[187469] tmp[1022799]))
    if isdirect[2150228]
    {
      (2150237 call on_fn[1022822] this[1022750] hints[1022764] rvfDerefTmp[2145401] end[1022776] start[1022770] rvfDerefTmp[2145414] _formal_tmp_error[1022955])
    }
    {
      val _args_foron_fn[2150270]:_class_localson_fn[2150250] "temp"
      (2150274 'move' _args_foron_fn[2150270](2150272 'stack allocate class' _class_localson_fn[2150250]))
      (2150276 '.=' _args_foron_fn[2150270] _0_tmp[2150253] tmp[1022799])
      ref tmp[2150280]:channel(true,dynamic,true)[1021886] "temp"
      (2150284 'move' tmp[2150280](2150282 'set reference' this[1022750]))
      (2150286 '.=' _args_foron_fn[2150270] _1_this[2150255] tmp[2150280])
      (2150290 '.=' _args_foron_fn[2150270] _2_hints[2150257] hints[1022764])
      (2150294 '.=' _args_foron_fn[2150270] _3_rvfDerefTmp[2150259] rvfDerefTmp[2145401])
      (2150298 '.=' _args_foron_fn[2150270] _4_end[2150261] end[1022776])
      (2150302 '.=' _args_foron_fn[2150270] _5_start[2150263] start[1022770])
      (2150306 '.=' _args_foron_fn[2150270] _6_rvfDerefTmp[2150265] rvfDerefTmp[2145414])
      ref tmp[2150310]:syserr[223605] "temp"
      (2150314 'move' tmp[2150310](2150312 'set reference' _formal_tmp_error[1022955]))
      (2150316 '.=' _args_foron_fn[2150270] _7__formal_tmp_error[2150267] tmp[2150310])
      val _args_vforon_fn[2150320]:c_void_ptr[149] "temp"
      (2150324 'move' _args_vforon_fn[2150320](2150322 'cast_to_void_star' _args_foron_fn[2150270]))
      val _args_sizeon_fn[2150326]:int(64)[13] "temp"
      (2150330 'move' _args_sizeon_fn[2150326](2150328 'sizeof_bundle' _class_localson_fn[2150250]))
      on(2150410 call wrapon_fn[2150332] tmp[1022799] _args_vforon_fn[2150320] _args_sizeon_fn[2150326] _args_foron_fn[2150270])
    }
    {
    }
    label _endinit[1022965]
    (1877597 '=' error[1022760] _formal_tmp_error[1022955])
    (1022952 return _void[55])
  }
  function channel(true,dynamic,false)[1061008].init[1061457](ref arg this[1061463]:channel(true,dynamic,false)[1061008], const  ref arg f[1061471]:file[235601], ref arg error[1061473]:_ref(syserr)[948893], const in arg hints[1061477]:int(32)[95], const in arg start[1061483]:int(64)[13], const in arg end[1061489]:int(64)[13], const in arg local_style[1061491]:iostyle[231865]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val _formal_tmp_error[1061668]:syserr[223605] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1061507 call init[1061681] this[1061463])
    const-val tmp[1061512]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1061514]:_ref(locale)[948905] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1061516 'move' call_tmp[1061514](1061519 call home[887010] f[1061471]))
    const-val call_tmp[1061522]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1061806]:BaseLocale[91204] "dead after last mention" "temp"
    (1061811 'move' _locale_tmp_[1061806](1061808 call _value[89984] call_tmp[1061514]))
    (1061524 'move' call_tmp[1061522](1061526 '_wide_get_locale' _locale_tmp_[1061806]))
    (1061528 'move' tmp[1061512] call_tmp[1061522])
    val rvfDerefTmp[2145509]:iostyle[231865] "temp"
    (2145512 'move' rvfDerefTmp[2145509] local_style[1061491])
    val rvfDerefTmp[2145522]:file[235601] "temp"
    (2145526 'move' rvfDerefTmp[2145522](2145524 'deref' f[1061471]))
    val isdirect[2150941]:bool[10] "temp"
    (2150946 'move' isdirect[2150941](2150943 call chpl_doDirectExecuteOn[187469] tmp[1061512]))
    if isdirect[2150941]
    {
      (2150950 call on_fn[1061535] end[1061489] hints[1061477] rvfDerefTmp[2145509] this[1061463] start[1061483] rvfDerefTmp[2145522] _formal_tmp_error[1061668])
    }
    {
      val _args_foron_fn[2150983]:_class_localson_fn[2150963] "temp"
      (2150987 'move' _args_foron_fn[2150983](2150985 'stack allocate class' _class_localson_fn[2150963]))
      (2150989 '.=' _args_foron_fn[2150983] _0_tmp[2150966] tmp[1061512])
      (2150993 '.=' _args_foron_fn[2150983] _1_end[2150968] end[1061489])
      (2150997 '.=' _args_foron_fn[2150983] _2_hints[2150970] hints[1061477])
      (2151001 '.=' _args_foron_fn[2150983] _3_rvfDerefTmp[2150972] rvfDerefTmp[2145509])
      ref tmp[2151005]:channel(true,dynamic,false)[1061008] "temp"
      (2151009 'move' tmp[2151005](2151007 'set reference' this[1061463]))
      (2151011 '.=' _args_foron_fn[2150983] _4_this[2150974] tmp[2151005])
      (2151015 '.=' _args_foron_fn[2150983] _5_start[2150976] start[1061483])
      (2151019 '.=' _args_foron_fn[2150983] _6_rvfDerefTmp[2150978] rvfDerefTmp[2145522])
      ref tmp[2151023]:syserr[223605] "temp"
      (2151027 'move' tmp[2151023](2151025 'set reference' _formal_tmp_error[1061668]))
      (2151029 '.=' _args_foron_fn[2150983] _7__formal_tmp_error[2150980] tmp[2151023])
      val _args_vforon_fn[2151033]:c_void_ptr[149] "temp"
      (2151037 'move' _args_vforon_fn[2151033](2151035 'cast_to_void_star' _args_foron_fn[2150983]))
      val _args_sizeon_fn[2151039]:int(64)[13] "temp"
      (2151043 'move' _args_sizeon_fn[2151039](2151041 'sizeof_bundle' _class_localson_fn[2150963]))
      on(2151123 call wrapon_fn[2151045] tmp[1061512] _args_vforon_fn[2151033] _args_sizeon_fn[2151039] _args_foron_fn[2150983])
    }
    {
    }
    label _endinit[1061678]
    (1878822 '=' error[1061473] _formal_tmp_error[1061668])
    (1061665 return _void[55])
  }
  function channel(false,dynamic,false)[1080743].init[1081189](ref arg this[1081195]:channel(false,dynamic,false)[1080743], const  ref arg f[1081203]:file[235601], ref arg error[1081205]:_ref(syserr)[948893], const in arg hints[1081209]:int(32)[95], const in arg start[1081215]:int(64)[13], const in arg end[1081221]:int(64)[13], const in arg local_style[1081223]:iostyle[231865]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val _formal_tmp_error[1081400]:syserr[223605] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1081239 call init[1081413] this[1081195])
    const-val tmp[1081244]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1081246]:_ref(locale)[948905] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1081248 'move' call_tmp[1081246](1081251 call home[887010] f[1081203]))
    const-val call_tmp[1081254]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1081538]:BaseLocale[91204] "dead after last mention" "temp"
    (1081543 'move' _locale_tmp_[1081538](1081540 call _value[89984] call_tmp[1081246]))
    (1081256 'move' call_tmp[1081254](1081258 '_wide_get_locale' _locale_tmp_[1081538]))
    (1081260 'move' tmp[1081244] call_tmp[1081254])
    val rvfDerefTmp[2145687]:iostyle[231865] "temp"
    (2145690 'move' rvfDerefTmp[2145687] local_style[1081223])
    val rvfDerefTmp[2145700]:file[235601] "temp"
    (2145704 'move' rvfDerefTmp[2145700](2145702 'deref' f[1081203]))
    val isdirect[2152162]:bool[10] "temp"
    (2152167 'move' isdirect[2152162](2152164 call chpl_doDirectExecuteOn[187469] tmp[1081244]))
    if isdirect[2152162]
    {
      (2152171 call on_fn[1081267] hints[1081209] rvfDerefTmp[2145687] start[1081215] rvfDerefTmp[2145700] _formal_tmp_error[1081400] end[1081221] this[1081195])
    }
    {
      val _args_foron_fn[2152204]:_class_localson_fn[2152184] "temp"
      (2152208 'move' _args_foron_fn[2152204](2152206 'stack allocate class' _class_localson_fn[2152184]))
      (2152210 '.=' _args_foron_fn[2152204] _0_tmp[2152187] tmp[1081244])
      (2152214 '.=' _args_foron_fn[2152204] _1_hints[2152189] hints[1081209])
      (2152218 '.=' _args_foron_fn[2152204] _2_rvfDerefTmp[2152191] rvfDerefTmp[2145687])
      (2152222 '.=' _args_foron_fn[2152204] _3_start[2152193] start[1081215])
      (2152226 '.=' _args_foron_fn[2152204] _4_rvfDerefTmp[2152195] rvfDerefTmp[2145700])
      ref tmp[2152230]:syserr[223605] "temp"
      (2152234 'move' tmp[2152230](2152232 'set reference' _formal_tmp_error[1081400]))
      (2152236 '.=' _args_foron_fn[2152204] _5__formal_tmp_error[2152197] tmp[2152230])
      (2152240 '.=' _args_foron_fn[2152204] _6_end[2152199] end[1081221])
      ref tmp[2152244]:channel(false,dynamic,false)[1080743] "temp"
      (2152248 'move' tmp[2152244](2152246 'set reference' this[1081195]))
      (2152250 '.=' _args_foron_fn[2152204] _7_this[2152201] tmp[2152244])
      val _args_vforon_fn[2152254]:c_void_ptr[149] "temp"
      (2152258 'move' _args_vforon_fn[2152254](2152256 'cast_to_void_star' _args_foron_fn[2152204]))
      val _args_sizeon_fn[2152260]:int(64)[13] "temp"
      (2152264 'move' _args_sizeon_fn[2152260](2152262 'sizeof_bundle' _class_localson_fn[2152184]))
      on(2152344 call wrapon_fn[2152266] tmp[1081244] _args_vforon_fn[2152254] _args_sizeon_fn[2152260] _args_foron_fn[2152204])
    }
    {
    }
    label _endinit[1081410]
    (1878983 '=' error[1081205] _formal_tmp_error[1081400])
    (1081397 return _void[55])
  }
  function _ref(channel(false,dynamic,true))[985697].deinit[1571835](ref arg this[1571841]:_ref(channel(false,dynamic,true))[985697]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val tmp[1571847]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1571849]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (1571851 'move' call_tmp[1571849](1571854 call home[1018085] this[1571841]))
    const-val call_tmp[1571857]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1571908]:BaseLocale[91204] "dead after last mention" "temp"
    (1571913 'move' _locale_tmp_[1571908](1571910 call _value[89984] call_tmp[1571849]))
    (1571859 'move' call_tmp[1571857](1571861 '_wide_get_locale' _locale_tmp_[1571908]))
    (1571863 'move' tmp[1571847] call_tmp[1571857])
    val isdirect[2159171]:bool[10] "temp"
    (2159176 'move' isdirect[2159171](2159173 call chpl_doDirectExecuteOn[187469] tmp[1571847]))
    if isdirect[2159171]
    {
      (2159180 call on_fn[1571870] this[1571841])
    }
    {
      val _args_foron_fn[2159195]:_class_localson_fn[2159187] "temp"
      (2159199 'move' _args_foron_fn[2159195](2159197 'stack allocate class' _class_localson_fn[2159187]))
      (2159201 '.=' _args_foron_fn[2159195] _0_tmp[2159190] tmp[1571847])
      ref tmp[2159205]:channel(false,dynamic,true)[985688] "temp"
      (2159209 'move' tmp[2159205](2159207 'set reference' this[1571841]))
      (2159211 '.=' _args_foron_fn[2159195] _1_this[2159192] tmp[2159205])
      val _args_vforon_fn[2159215]:c_void_ptr[149] "temp"
      (2159219 'move' _args_vforon_fn[2159215](2159217 'cast_to_void_star' _args_foron_fn[2159195]))
      val _args_sizeon_fn[2159221]:int(64)[13] "temp"
      (2159225 'move' _args_sizeon_fn[2159221](2159223 'sizeof_bundle' _class_localson_fn[2159187]))
      on(2159257 call wrapon_fn[2159227] tmp[1571847] _args_vforon_fn[2159215] _args_sizeon_fn[2159221] _args_foron_fn[2159195])
    }
    {
    }
    label _enddeinit[1849512]
    ref _field_destructor_tmp_[1849510]:_ref(locale)[948905] "temp"
    (1849517 'move' _field_destructor_tmp_[1849510](1849514 '.' this[1571841] _readWriteThisFromLocale[985685]))
    (1849519 call deinit[90188] _field_destructor_tmp_[1849510])
    ref _field_destructor_tmp_[1849522]:_ref(locale)[948905] "temp"
    (1849527 'move' _field_destructor_tmp_[1849522](1849524 '.' this[1571841] home[985676]))
    (1849529 call deinit[90188] _field_destructor_tmp_[1849522])
    (1571904 return _void[55])
  }
  function _ref(channel(true,dynamic,true))[1021895].deinit[1634814](ref arg this[1634820]:_ref(channel(true,dynamic,true))[1021895]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val tmp[1634826]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1634828]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (1634830 'move' call_tmp[1634828](1634833 call home[1023103] this[1634820]))
    const-val call_tmp[1634836]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1634887]:BaseLocale[91204] "dead after last mention" "temp"
    (1634892 'move' _locale_tmp_[1634887](1634889 call _value[89984] call_tmp[1634828]))
    (1634838 'move' call_tmp[1634836](1634840 '_wide_get_locale' _locale_tmp_[1634887]))
    (1634842 'move' tmp[1634826] call_tmp[1634836])
    val isdirect[2160962]:bool[10] "temp"
    (2160967 'move' isdirect[2160962](2160964 call chpl_doDirectExecuteOn[187469] tmp[1634826]))
    if isdirect[2160962]
    {
      (2160971 call on_fn[1634849] this[1634820])
    }
    {
      val _args_foron_fn[2160986]:_class_localson_fn[2160978] "temp"
      (2160990 'move' _args_foron_fn[2160986](2160988 'stack allocate class' _class_localson_fn[2160978]))
      (2160992 '.=' _args_foron_fn[2160986] _0_tmp[2160981] tmp[1634826])
      ref tmp[2160996]:channel(true,dynamic,true)[1021886] "temp"
      (2161000 'move' tmp[2160996](2160998 'set reference' this[1634820]))
      (2161002 '.=' _args_foron_fn[2160986] _1_this[2160983] tmp[2160996])
      val _args_vforon_fn[2161006]:c_void_ptr[149] "temp"
      (2161010 'move' _args_vforon_fn[2161006](2161008 'cast_to_void_star' _args_foron_fn[2160986]))
      val _args_sizeon_fn[2161012]:int(64)[13] "temp"
      (2161016 'move' _args_sizeon_fn[2161012](2161014 'sizeof_bundle' _class_localson_fn[2160978]))
      on(2161048 call wrapon_fn[2161018] tmp[1634826] _args_vforon_fn[2161006] _args_sizeon_fn[2161012] _args_foron_fn[2160986])
    }
    {
    }
    label _enddeinit[1849534]
    ref _field_destructor_tmp_[1849532]:_ref(locale)[948905] "temp"
    (1849539 'move' _field_destructor_tmp_[1849532](1849536 '.' this[1634820] _readWriteThisFromLocale[1021883]))
    (1849541 call deinit[90188] _field_destructor_tmp_[1849532])
    ref _field_destructor_tmp_[1849544]:_ref(locale)[948905] "temp"
    (1849549 'move' _field_destructor_tmp_[1849544](1849546 '.' this[1634820] home[1021874]))
    (1849551 call deinit[90188] _field_destructor_tmp_[1849544])
    (1634883 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1061017].deinit[1636978](ref arg this[1636984]:_ref(channel(true,dynamic,false))[1061017]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val tmp[1636990]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1636992]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (1636994 'move' call_tmp[1636992](1636997 call home[1061816] this[1636984]))
    const-val call_tmp[1637000]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1637051]:BaseLocale[91204] "dead after last mention" "temp"
    (1637056 'move' _locale_tmp_[1637051](1637053 call _value[89984] call_tmp[1636992]))
    (1637002 'move' call_tmp[1637000](1637004 '_wide_get_locale' _locale_tmp_[1637051]))
    (1637006 'move' tmp[1636990] call_tmp[1637000])
    val isdirect[2161138]:bool[10] "temp"
    (2161143 'move' isdirect[2161138](2161140 call chpl_doDirectExecuteOn[187469] tmp[1636990]))
    if isdirect[2161138]
    {
      (2161147 call on_fn[1637013] this[1636984])
    }
    {
      val _args_foron_fn[2161162]:_class_localson_fn[2161154] "temp"
      (2161166 'move' _args_foron_fn[2161162](2161164 'stack allocate class' _class_localson_fn[2161154]))
      (2161168 '.=' _args_foron_fn[2161162] _0_tmp[2161157] tmp[1636990])
      ref tmp[2161172]:channel(true,dynamic,false)[1061008] "temp"
      (2161176 'move' tmp[2161172](2161174 'set reference' this[1636984]))
      (2161178 '.=' _args_foron_fn[2161162] _1_this[2161159] tmp[2161172])
      val _args_vforon_fn[2161182]:c_void_ptr[149] "temp"
      (2161186 'move' _args_vforon_fn[2161182](2161184 'cast_to_void_star' _args_foron_fn[2161162]))
      val _args_sizeon_fn[2161188]:int(64)[13] "temp"
      (2161192 'move' _args_sizeon_fn[2161188](2161190 'sizeof_bundle' _class_localson_fn[2161154]))
      on(2161224 call wrapon_fn[2161194] tmp[1636990] _args_vforon_fn[2161182] _args_sizeon_fn[2161188] _args_foron_fn[2161162])
    }
    {
    }
    label _enddeinit[1849568]
    ref _field_destructor_tmp_[1849566]:_ref(locale)[948905] "temp"
    (1849573 'move' _field_destructor_tmp_[1849566](1849570 '.' this[1636984] _readWriteThisFromLocale[1061005]))
    (1849575 call deinit[90188] _field_destructor_tmp_[1849566])
    ref _field_destructor_tmp_[1849578]:_ref(locale)[948905] "temp"
    (1849583 'move' _field_destructor_tmp_[1849578](1849580 '.' this[1636984] home[1060996]))
    (1849585 call deinit[90188] _field_destructor_tmp_[1849578])
    (1637047 return _void[55])
  }
  function _ref(channel(false,dynamic,false))[1080752].deinit[1641232](ref arg this[1641238]:_ref(channel(false,dynamic,false))[1080752]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val tmp[1641244]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1641246]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (1641248 'move' call_tmp[1641246](1641251 call home[1081548] this[1641238]))
    const-val call_tmp[1641254]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1641305]:BaseLocale[91204] "dead after last mention" "temp"
    (1641310 'move' _locale_tmp_[1641305](1641307 call _value[89984] call_tmp[1641246]))
    (1641256 'move' call_tmp[1641254](1641258 '_wide_get_locale' _locale_tmp_[1641305]))
    (1641260 'move' tmp[1641244] call_tmp[1641254])
    val isdirect[2161399]:bool[10] "temp"
    (2161404 'move' isdirect[2161399](2161401 call chpl_doDirectExecuteOn[187469] tmp[1641244]))
    if isdirect[2161399]
    {
      (2161408 call on_fn[1641267] this[1641238])
    }
    {
      val _args_foron_fn[2161423]:_class_localson_fn[2161415] "temp"
      (2161427 'move' _args_foron_fn[2161423](2161425 'stack allocate class' _class_localson_fn[2161415]))
      (2161429 '.=' _args_foron_fn[2161423] _0_tmp[2161418] tmp[1641244])
      ref tmp[2161433]:channel(false,dynamic,false)[1080743] "temp"
      (2161437 'move' tmp[2161433](2161435 'set reference' this[1641238]))
      (2161439 '.=' _args_foron_fn[2161423] _1_this[2161420] tmp[2161433])
      val _args_vforon_fn[2161443]:c_void_ptr[149] "temp"
      (2161447 'move' _args_vforon_fn[2161443](2161445 'cast_to_void_star' _args_foron_fn[2161423]))
      val _args_sizeon_fn[2161449]:int(64)[13] "temp"
      (2161453 'move' _args_sizeon_fn[2161449](2161451 'sizeof_bundle' _class_localson_fn[2161415]))
      on(2161485 call wrapon_fn[2161455] tmp[1641244] _args_vforon_fn[2161443] _args_sizeon_fn[2161449] _args_foron_fn[2161423])
    }
    {
    }
    label _enddeinit[1849590]
    ref _field_destructor_tmp_[1849588]:_ref(locale)[948905] "temp"
    (1849595 'move' _field_destructor_tmp_[1849588](1849592 '.' this[1641238] _readWriteThisFromLocale[1080740]))
    (1849597 call deinit[90188] _field_destructor_tmp_[1849588])
    ref _field_destructor_tmp_[1849600]:_ref(locale)[948905] "temp"
    (1849605 'move' _field_destructor_tmp_[1849600](1849602 '.' this[1641238] home[1080731]))
    (1849607 call deinit[90188] _field_destructor_tmp_[1849600])
    (1641301 return _void[55])
  }
  function _ref(ioNewline)[967641].init[893730](ref arg this[893733]:_ref(ioNewline)[967641], in arg skipWhitespaceOnly[893736]:bool[10]) : void[4] "compiler generated" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    (893752 '.=' this[893733] skipWhitespaceOnly[238703] skipWhitespaceOnly[893736])
    (893756 return _void[55])
  }
  function init_default_skipWhitespaceOnly[1543339]() : bool[10] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1543341]:bool[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val skipWhitespaceOnly[1543346]:bool[10] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1543350]:bool[10] "dead after last mention" "temp"
    val _formal_type[1543352]:bool[10] "dead after last mention" "temp" "type variable"
    (1543360 'move' tmp[1543350] 0)
    (1543363 'move' skipWhitespaceOnly[1543346] tmp[1543350])
    (1543368 'move' ret[1543341] skipWhitespaceOnly[1543346])
    (1543344 return ret[1543341])
  }
  function _ref(ioNewline)[967641].deinit[893796](const  ref arg this[893800]:_ref(ioNewline)[967641]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved"
  {
    (893808 return _void[55])
  }
  type ioNewline[238722] val skipWhitespaceOnly[238703]:bool[10]
  function _ref(channel(true,dynamic,false))[1061017]._ch_ioerror[1062926](const  ref arg this[1062932]:_ref(channel(true,dynamic,false))[1061017], const in arg error[1062934]:syserr[223605], const  ref arg msg[1062936]:string[26], ref arg error_out[1844310]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val path[1062942]:string[26] "dead at end of block" "insert auto destroy"
    (1062944 'move' path[1062942] "unknown")
    val call_tmp[1062956]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    val offset[1062963]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1062965 'move' offset[1062963] -1)
    const-val tmp[1062970]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1062972]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (1062974 'move' call_tmp[1062972](1062977 call home[1061816] this[1062932]))
    const-val call_tmp[1062980]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1063132]:BaseLocale[91204] "dead after last mention" "temp"
    (1063137 'move' _locale_tmp_[1063132](1063134 call _value[89984] call_tmp[1062972]))
    (1062982 'move' call_tmp[1062980](1062984 '_wide_get_locale' _locale_tmp_[1063132]))
    (1062986 'move' tmp[1062970] call_tmp[1062980])
    val error[1844315]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1844317 'move' error[1844315] nil[44])
    val isdirect[2151410]:bool[10] "temp"
    (2151415 'move' isdirect[2151410](2151412 call chpl_doDirectExecuteOn[187469] tmp[1062970]))
    if isdirect[2151410]
    {
      (2151419 call on_fn[1062993] this[1062932] path[1062942] offset[1062963] error[1844315])
    }
    {
      val _args_foron_fn[2151443]:_class_localson_fn[2151429] "temp"
      (2151447 'move' _args_foron_fn[2151443](2151445 'stack allocate class' _class_localson_fn[2151429]))
      (2151449 '.=' _args_foron_fn[2151443] _0_tmp[2151432] tmp[1062970])
      ref tmp[2151453]:channel(true,dynamic,false)[1061008] "temp"
      (2151457 'move' tmp[2151453](2151455 'set reference' this[1062932]))
      (2151459 '.=' _args_foron_fn[2151443] _1_this[2151434] tmp[2151453])
      ref tmp[2151463]:string[26] "temp"
      (2151467 'move' tmp[2151463](2151465 'set reference' path[1062942]))
      (2151469 '.=' _args_foron_fn[2151443] _2_path[2151436] tmp[2151463])
      ref tmp[2151473]:int(64)[13] "temp"
      (2151477 'move' tmp[2151473](2151475 'set reference' offset[1062963]))
      (2151479 '.=' _args_foron_fn[2151443] _3_offset[2151438] tmp[2151473])
      ref tmp[2151483]:Error[167984] "temp"
      (2151487 'move' tmp[2151483](2151485 'set reference' error[1844315]))
      (2151489 '.=' _args_foron_fn[2151443] _4_error[2151440] tmp[2151483])
      val _args_vforon_fn[2151493]:c_void_ptr[149] "temp"
      (2151497 'move' _args_vforon_fn[2151493](2151495 'cast_to_void_star' _args_foron_fn[2151443]))
      val _args_sizeon_fn[2151499]:int(64)[13] "temp"
      (2151503 'move' _args_sizeon_fn[2151499](2151501 'sizeof_bundle' _class_localson_fn[2151429]))
      on(2151559 call wrapon_fn[2151505] tmp[1062970] _args_vforon_fn[2151493] _args_sizeon_fn[2151499] _args_foron_fn[2151443])
    }
    val errorExists[2170732]:bool[10] "temp"
    (2170737 'move' errorExists[2170732](2170734 '!=' error[1844315] nil[44]))
    if errorExists[2170732]
    {
      (1844321 '=' error_out[1844310] error[1844315])
      (1878825 call chpl__autoDestroy[1562275] path[1062942])
      gotoErrorHandlingReturn _end_ch_ioerror[1844312] _end_ch_ioerror[1844312]
    }
    {
    }
    {
      val error[1844329]:Error[167984] "error variable" "temp"
      (1844338 'move' error[1844329] nil[44])
      (1063116 call ioerror[266162] error[1062934] msg[1062936] path[1062942] offset[1062963] error[1844329])
      val errorExists[2170740]:bool[10] "temp"
      (2170745 'move' errorExists[2170740](2170742 '!=' error[1844329] nil[44]))
      if errorExists[2170740]
      {
        gotoErrorHandling handler[1844330] handler[1844330]
      }
      label handler[1844330]
      const-val shouldHandleError[1844349]:bool[10] "temp"
      val errorExists[2170748]:bool[10] "temp"
      (2170753 'move' errorExists[2170748](2170750 '!=' error[1844329] nil[44]))
      (1844353 'move' shouldHandleError[1844349] errorExists[2170748])
      if shouldHandleError[1844349]
      {
        (1844345 '=' error_out[1844310] error[1844329])
        (1878828 call chpl__autoDestroy[1562275] path[1062942])
        gotoErrorHandlingReturn _end_ch_ioerror[1844312] _end_ch_ioerror[1844312]
      }
    }
    (1878831 call chpl__autoDestroy[1562275] path[1062942])
    label _end_ch_ioerror[1844312]
    (1063125 return _void[55])
  }
  function _ref(channel(false,dynamic,false))[1080752]._ch_ioerror[1082610](const  ref arg this[1082616]:_ref(channel(false,dynamic,false))[1080752], const in arg error[1082618]:syserr[223605], const  ref arg msg[1082620]:string[26], ref arg error_out[1845106]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val path[1082626]:string[26] "dead at end of block" "insert auto destroy"
    (1082628 'move' path[1082626] "unknown")
    val call_tmp[1082640]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    val offset[1082647]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1082649 'move' offset[1082647] -1)
    const-val tmp[1082654]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1082656]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (1082658 'move' call_tmp[1082656](1082661 call home[1081548] this[1082616]))
    const-val call_tmp[1082664]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1082816]:BaseLocale[91204] "dead after last mention" "temp"
    (1082821 'move' _locale_tmp_[1082816](1082818 call _value[89984] call_tmp[1082656]))
    (1082666 'move' call_tmp[1082664](1082668 '_wide_get_locale' _locale_tmp_[1082816]))
    (1082670 'move' tmp[1082654] call_tmp[1082664])
    val error[1845111]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1845113 'move' error[1845111] nil[44])
    val rvfDerefTmp[2145749]:channel(false,dynamic,false)[1080743] "temp"
    (2145753 'move' rvfDerefTmp[2145749](2145751 'deref' this[1082616]))
    val isdirect[2152631]:bool[10] "temp"
    (2152636 'move' isdirect[2152631](2152633 call chpl_doDirectExecuteOn[187469] tmp[1082654]))
    if isdirect[2152631]
    {
      (2152640 call on_fn[1082677] rvfDerefTmp[2145749] path[1082626] offset[1082647] error[1845111])
    }
    {
      val _args_foron_fn[2152664]:_class_localson_fn[2152650] "temp"
      (2152668 'move' _args_foron_fn[2152664](2152666 'stack allocate class' _class_localson_fn[2152650]))
      (2152670 '.=' _args_foron_fn[2152664] _0_tmp[2152653] tmp[1082654])
      (2152674 '.=' _args_foron_fn[2152664] _1_rvfDerefTmp[2152655] rvfDerefTmp[2145749])
      ref tmp[2152678]:string[26] "temp"
      (2152682 'move' tmp[2152678](2152680 'set reference' path[1082626]))
      (2152684 '.=' _args_foron_fn[2152664] _2_path[2152657] tmp[2152678])
      ref tmp[2152688]:int(64)[13] "temp"
      (2152692 'move' tmp[2152688](2152690 'set reference' offset[1082647]))
      (2152694 '.=' _args_foron_fn[2152664] _3_offset[2152659] tmp[2152688])
      ref tmp[2152698]:Error[167984] "temp"
      (2152702 'move' tmp[2152698](2152700 'set reference' error[1845111]))
      (2152704 '.=' _args_foron_fn[2152664] _4_error[2152661] tmp[2152698])
      val _args_vforon_fn[2152708]:c_void_ptr[149] "temp"
      (2152712 'move' _args_vforon_fn[2152708](2152710 'cast_to_void_star' _args_foron_fn[2152664]))
      val _args_sizeon_fn[2152714]:int(64)[13] "temp"
      (2152718 'move' _args_sizeon_fn[2152714](2152716 'sizeof_bundle' _class_localson_fn[2152650]))
      on(2152774 call wrapon_fn[2152720] tmp[1082654] _args_vforon_fn[2152708] _args_sizeon_fn[2152714] _args_foron_fn[2152664])
    }
    val errorExists[2171092]:bool[10] "temp"
    (2171097 'move' errorExists[2171092](2171094 '!=' error[1845111] nil[44]))
    if errorExists[2171092]
    {
      (1845117 '=' error_out[1845106] error[1845111])
      (1878986 call chpl__autoDestroy[1562275] path[1082626])
      gotoErrorHandlingReturn _end_ch_ioerror[1845108] _end_ch_ioerror[1845108]
    }
    {
    }
    {
      val error[1845125]:Error[167984] "error variable" "temp"
      (1845134 'move' error[1845125] nil[44])
      (1082800 call ioerror[266162] error[1082618] msg[1082620] path[1082626] offset[1082647] error[1845125])
      val errorExists[2171100]:bool[10] "temp"
      (2171105 'move' errorExists[2171100](2171102 '!=' error[1845125] nil[44]))
      if errorExists[2171100]
      {
        gotoErrorHandling handler[1845126] handler[1845126]
      }
      label handler[1845126]
      const-val shouldHandleError[1845145]:bool[10] "temp"
      val errorExists[2171108]:bool[10] "temp"
      (2171113 'move' errorExists[2171108](2171110 '!=' error[1845125] nil[44]))
      (1845149 'move' shouldHandleError[1845145] errorExists[2171108])
      if shouldHandleError[1845145]
      {
        (1845141 '=' error_out[1845106] error[1845125])
        (1878989 call chpl__autoDestroy[1562275] path[1082626])
        gotoErrorHandlingReturn _end_ch_ioerror[1845108] _end_ch_ioerror[1845108]
      }
    }
    (1878992 call chpl__autoDestroy[1562275] path[1082626])
    label _end_ch_ioerror[1845108]
    (1082809 return _void[55])
  }
  function _ref(channel(true,dynamic,true))[1021895]._ch_ioerror[1544272](const  ref arg this[1544278]:_ref(channel(true,dynamic,true))[1021895], const in arg error[1544280]:syserr[223605], const  ref arg msg[1544282]:string[26], ref arg error_out[1847024]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val path[1544288]:string[26] "dead at end of block" "insert auto destroy"
    (1544290 'move' path[1544288] "unknown")
    val call_tmp[1544302]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    val offset[1544309]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1544311 'move' offset[1544309] -1)
    const-val tmp[1544316]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1544318]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (1544320 'move' call_tmp[1544318](1544323 call home[1023103] this[1544278]))
    const-val call_tmp[1544326]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1544478]:BaseLocale[91204] "dead after last mention" "temp"
    (1544483 'move' _locale_tmp_[1544478](1544480 call _value[89984] call_tmp[1544318]))
    (1544328 'move' call_tmp[1544326](1544330 '_wide_get_locale' _locale_tmp_[1544478]))
    (1544332 'move' tmp[1544316] call_tmp[1544326])
    val error[1847029]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1847031 'move' error[1847029] nil[44])
    val rvfDerefTmp[2146314]:channel(true,dynamic,true)[1021886] "temp"
    (2146318 'move' rvfDerefTmp[2146314](2146316 'deref' this[1544278]))
    val isdirect[2158034]:bool[10] "temp"
    (2158039 'move' isdirect[2158034](2158036 call chpl_doDirectExecuteOn[187469] tmp[1544316]))
    if isdirect[2158034]
    {
      (2158043 call on_fn[1544339] rvfDerefTmp[2146314] path[1544288] offset[1544309] error[1847029])
    }
    {
      val _args_foron_fn[2158067]:_class_localson_fn[2158053] "temp"
      (2158071 'move' _args_foron_fn[2158067](2158069 'stack allocate class' _class_localson_fn[2158053]))
      (2158073 '.=' _args_foron_fn[2158067] _0_tmp[2158056] tmp[1544316])
      (2158077 '.=' _args_foron_fn[2158067] _1_rvfDerefTmp[2158058] rvfDerefTmp[2146314])
      ref tmp[2158081]:string[26] "temp"
      (2158085 'move' tmp[2158081](2158083 'set reference' path[1544288]))
      (2158087 '.=' _args_foron_fn[2158067] _2_path[2158060] tmp[2158081])
      ref tmp[2158091]:int(64)[13] "temp"
      (2158095 'move' tmp[2158091](2158093 'set reference' offset[1544309]))
      (2158097 '.=' _args_foron_fn[2158067] _3_offset[2158062] tmp[2158091])
      ref tmp[2158101]:Error[167984] "temp"
      (2158105 'move' tmp[2158101](2158103 'set reference' error[1847029]))
      (2158107 '.=' _args_foron_fn[2158067] _4_error[2158064] tmp[2158101])
      val _args_vforon_fn[2158111]:c_void_ptr[149] "temp"
      (2158115 'move' _args_vforon_fn[2158111](2158113 'cast_to_void_star' _args_foron_fn[2158067]))
      val _args_sizeon_fn[2158117]:int(64)[13] "temp"
      (2158121 'move' _args_sizeon_fn[2158117](2158119 'sizeof_bundle' _class_localson_fn[2158053]))
      on(2158177 call wrapon_fn[2158123] tmp[1544316] _args_vforon_fn[2158111] _args_sizeon_fn[2158117] _args_foron_fn[2158067])
    }
    val errorExists[2172076]:bool[10] "temp"
    (2172081 'move' errorExists[2172076](2172078 '!=' error[1847029] nil[44]))
    if errorExists[2172076]
    {
      (1847035 '=' error_out[1847024] error[1847029])
      (1884596 call chpl__autoDestroy[1562275] path[1544288])
      gotoErrorHandlingReturn _end_ch_ioerror[1847026] _end_ch_ioerror[1847026]
    }
    {
    }
    {
      val error[1847043]:Error[167984] "error variable" "temp"
      (1847052 'move' error[1847043] nil[44])
      (1544462 call ioerror[266162] error[1544280] msg[1544282] path[1544288] offset[1544309] error[1847043])
      val errorExists[2172084]:bool[10] "temp"
      (2172089 'move' errorExists[2172084](2172086 '!=' error[1847043] nil[44]))
      if errorExists[2172084]
      {
        gotoErrorHandling handler[1847044] handler[1847044]
      }
      label handler[1847044]
      const-val shouldHandleError[1847063]:bool[10] "temp"
      val errorExists[2172092]:bool[10] "temp"
      (2172097 'move' errorExists[2172092](2172094 '!=' error[1847043] nil[44]))
      (1847067 'move' shouldHandleError[1847063] errorExists[2172092])
      if shouldHandleError[1847063]
      {
        (1847059 '=' error_out[1847024] error[1847043])
        (1884599 call chpl__autoDestroy[1562275] path[1544288])
        gotoErrorHandlingReturn _end_ch_ioerror[1847026] _end_ch_ioerror[1847026]
      }
    }
    (1884602 call chpl__autoDestroy[1562275] path[1544288])
    label _end_ch_ioerror[1847026]
    (1544471 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1061017].lock[1066489](const  ref arg this[1066495]:_ref(channel(true,dynamic,false))[1061017], ref arg error_out[1844502]:Error[167984]) : void[4] throws "inline" "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    const-val call_tmp[1066501]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1066503 'move' call_tmp[1066501](1066506 call ENOERR[223675]))
    const-val err[1066507]:syserr[223605] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1066656]:syserr[223605] "dead at end of block" "initialized later" "temp"
    (1066880 call =[224154] init_coerce_tmp[1066656] call_tmp[1066501])
    (1066509 'move' err[1066507] init_coerce_tmp[1066656])
    ref call_tmp[1066514]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "temp"
    (1066516 'move' call_tmp[1066514](1066519 call _channel_internal[1061850] this[1066495]))
    const-val call_tmp[1066522]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1066663]:qio_channel_ptr_t[231486] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1066667 'move' coerce_tmp[1066663](1066665 'deref' call_tmp[1066514]))
    (1066524 'move' call_tmp[1066522](1066527 call is_c_nil[1062588] coerce_tmp[1066663]))
    const-val call_tmp[1066529]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1066531 'move' call_tmp[1066529] call_tmp[1066522])
    if call_tmp[1066529]
    {
      const-val call_tmp[1066538]:owned SystemError[1000299] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1066672]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1066678 'move' coerce_tmp[1066672](1066674 'cast' int(64)[13] EINVAL[224480]))
      const-val ret_tmp[1866174]:owned SystemError[1000299] "temp"
      (1066546 call fromSyserr[1017174] coerce_tmp[1066672] "Operation attempted on an invalid channel" ret_tmp[1866174])
      (1866177 'move' call_tmp[1066538] ret_tmp[1866174])
      val call_tmp[1066549]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1066681]:owned Error[966519] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1866114]:owned Error[966519] "temp"
      (1066683 call _cast[1015808] call_tmp[1066538] ret_tmp[1866114])
      (1866117 'move' coerce_tmp[1066681] ret_tmp[1866114])
      const-val _formal_tmp_in_err[1066860]:owned Error[966519] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1066864 'move' _formal_tmp_in_err[1066860] coerce_tmp[1066681])
      (1066551 'move' call_tmp[1066549](1066554 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1066860]))
      {
        val castedError[1844507]:Error[167984] "temp"
        (1844513 'move' castedError[1844507] call_tmp[1066549])
        (1844515 '=' error_out[1844502] castedError[1844507])
        gotoErrorHandlingReturn _endlock[1844504] _endlock[1844504]
      }
    }
    const-val call_tmp[1066631]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1066633 'move' call_tmp[1066631](1066636 call _cond_test[224002] err[1066507]))
    if call_tmp[1066631]
    {
      {
        val error[1844519]:Error[167984] "error variable" "temp"
        (1844528 'move' error[1844519] nil[44])
        (1066645 call _ch_ioerror[1062926] this[1066495] err[1066507] "in lock" error[1844519])
        val errorExists[2170820]:bool[10] "temp"
        (2170825 'move' errorExists[2170820](2170822 '!=' error[1844519] nil[44]))
        if errorExists[2170820]
        {
          gotoErrorHandling handler[1844520] handler[1844520]
        }
        label handler[1844520]
        const-val shouldHandleError[1844539]:bool[10] "temp"
        val errorExists[2170828]:bool[10] "temp"
        (2170833 'move' errorExists[2170828](2170830 '!=' error[1844519] nil[44]))
        (1844543 'move' shouldHandleError[1844539] errorExists[2170828])
        if shouldHandleError[1844539]
        {
          (1844535 '=' error_out[1844502] error[1844519])
          gotoErrorHandlingReturn _endlock[1844504] _endlock[1844504]
        }
      }
    }
    label _endlock[1844504]
    (1066652 return _void[55])
  }
  function _ref(channel(true,dynamic,true))[1021895].lock[1543812](const  ref arg this[1543818]:_ref(channel(true,dynamic,true))[1021895], ref arg error_out[1846979]:Error[167984]) : void[4] throws "inline" "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    const-val call_tmp[1543824]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1543826 'move' call_tmp[1543824](1543829 call ENOERR[223675]))
    val err[1543830]:syserr[223605] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1543979]:syserr[223605] "dead at end of block" "initialized later" "temp"
    (1544555 call =[224154] init_coerce_tmp[1543979] call_tmp[1543824])
    (1543832 'move' err[1543830] init_coerce_tmp[1543979])
    ref call_tmp[1543837]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "temp"
    (1543839 'move' call_tmp[1543837](1543842 call _channel_internal[1023137] this[1543818]))
    const-val call_tmp[1543845]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1543986]:qio_channel_ptr_t[231486] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1543990 'move' coerce_tmp[1543986](1543988 'deref' call_tmp[1543837]))
    (1543847 'move' call_tmp[1543845](1543850 call is_c_nil[1062588] coerce_tmp[1543986]))
    const-val call_tmp[1543852]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1543854 'move' call_tmp[1543852] call_tmp[1543845])
    if call_tmp[1543852]
    {
      const-val call_tmp[1543861]:owned SystemError[1000299] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1543995]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1544001 'move' coerce_tmp[1543995](1543997 'cast' int(64)[13] EINVAL[224480]))
      const-val ret_tmp[1866186]:owned SystemError[1000299] "temp"
      (1543869 call fromSyserr[1017174] coerce_tmp[1543995] "Operation attempted on an invalid channel" ret_tmp[1866186])
      (1866189 'move' call_tmp[1543861] ret_tmp[1866186])
      val call_tmp[1543872]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1544004]:owned Error[966519] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1866126]:owned Error[966519] "temp"
      (1544006 call _cast[1015808] call_tmp[1543861] ret_tmp[1866126])
      (1866129 'move' coerce_tmp[1544004] ret_tmp[1866126])
      const-val _formal_tmp_in_err[1544183]:owned Error[966519] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1544187 'move' _formal_tmp_in_err[1544183] coerce_tmp[1544004])
      (1543874 'move' call_tmp[1543872](1543877 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1544183]))
      {
        val castedError[1846984]:Error[167984] "temp"
        (1846990 'move' castedError[1846984] call_tmp[1543872])
        (1846992 '=' error_out[1846979] castedError[1846984])
        gotoErrorHandlingReturn _endlock[1846981] _endlock[1846981]
      }
    }
    {
      const-val tmp[1543899]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
      ref call_tmp[1543901]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
      (1543903 'move' call_tmp[1543901](1543906 call home[1023103] this[1543818]))
      const-val call_tmp[1543909]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      val _locale_tmp_[1544252]:BaseLocale[91204] "dead after last mention" "temp"
      (1544257 'move' _locale_tmp_[1544252](1544254 call _value[89984] call_tmp[1543901]))
      (1543911 'move' call_tmp[1543909](1543913 '_wide_get_locale' _locale_tmp_[1544252]))
      (1543915 'move' tmp[1543899] call_tmp[1543909])
      val rvfDerefTmp[2146300]:channel(true,dynamic,true)[1021886] "temp"
      (2146304 'move' rvfDerefTmp[2146300](2146302 'deref' this[1543818]))
      val isdirect[2157928]:bool[10] "temp"
      (2157933 'move' isdirect[2157928](2157930 call chpl_doDirectExecuteOn[187469] tmp[1543899]))
      if isdirect[2157928]
      {
        (2157937 call on_fn[1543922] rvfDerefTmp[2146300] err[1543830])
      }
      {
        val _args_foron_fn[2157955]:_class_localson_fn[2157945] "temp"
        (2157959 'move' _args_foron_fn[2157955](2157957 'stack allocate class' _class_localson_fn[2157945]))
        (2157961 '.=' _args_foron_fn[2157955] _0_tmp[2157948] tmp[1543899])
        (2157965 '.=' _args_foron_fn[2157955] _1_rvfDerefTmp[2157950] rvfDerefTmp[2146300])
        ref tmp[2157969]:syserr[223605] "temp"
        (2157973 'move' tmp[2157969](2157971 'set reference' err[1543830]))
        (2157975 '.=' _args_foron_fn[2157955] _2_err[2157952] tmp[2157969])
        val _args_vforon_fn[2157979]:c_void_ptr[149] "temp"
        (2157983 'move' _args_vforon_fn[2157979](2157981 'cast_to_void_star' _args_foron_fn[2157955]))
        val _args_sizeon_fn[2157985]:int(64)[13] "temp"
        (2157989 'move' _args_sizeon_fn[2157985](2157987 'sizeof_bundle' _class_localson_fn[2157945]))
        on(2158029 call wrapon_fn[2157991] tmp[1543899] _args_vforon_fn[2157979] _args_sizeon_fn[2157985] _args_foron_fn[2157955])
      }
      {
      }
    }
    const-val call_tmp[1543954]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1543956 'move' call_tmp[1543954](1543959 call _cond_test[224002] err[1543830]))
    if call_tmp[1543954]
    {
      {
        val error[1846996]:Error[167984] "error variable" "temp"
        (1847005 'move' error[1846996] nil[44])
        (1543968 call _ch_ioerror[1544272] this[1543818] err[1543830] "in lock" error[1846996])
        val errorExists[2172060]:bool[10] "temp"
        (2172065 'move' errorExists[2172060](2172062 '!=' error[1846996] nil[44]))
        if errorExists[2172060]
        {
          gotoErrorHandling handler[1846997] handler[1846997]
        }
        label handler[1846997]
        const-val shouldHandleError[1847016]:bool[10] "temp"
        val errorExists[2172068]:bool[10] "temp"
        (2172073 'move' errorExists[2172068](2172070 '!=' error[1846996] nil[44]))
        (1847020 'move' shouldHandleError[1847016] errorExists[2172068])
        if shouldHandleError[1847016]
        {
          (1847012 '=' error_out[1846979] error[1846996])
          gotoErrorHandlingReturn _endlock[1846981] _endlock[1846981]
        }
      }
    }
    label _endlock[1846981]
    (1543975 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1061017].unlock[1066886](const  ref arg this[1066892]:_ref(channel(true,dynamic,false))[1061017]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    (1066960 return _void[55])
  }
  function _ref(channel(true,dynamic,true))[1021895].unlock[1544561](const  ref arg this[1544567]:_ref(channel(true,dynamic,true))[1021895]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    {
      const-val tmp[1544590]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
      ref call_tmp[1544592]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
      (1544594 'move' call_tmp[1544592](1544597 call home[1023103] this[1544567]))
      const-val call_tmp[1544600]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      val _locale_tmp_[1544643]:BaseLocale[91204] "dead after last mention" "temp"
      (1544648 'move' _locale_tmp_[1544643](1544645 call _value[89984] call_tmp[1544592]))
      (1544602 'move' call_tmp[1544600](1544604 '_wide_get_locale' _locale_tmp_[1544643]))
      (1544606 'move' tmp[1544590] call_tmp[1544600])
      val rvfDerefTmp[2146328]:channel(true,dynamic,true)[1021886] "temp"
      (2146332 'move' rvfDerefTmp[2146328](2146330 'deref' this[1544567]))
      val isdirect[2158182]:bool[10] "temp"
      (2158187 'move' isdirect[2158182](2158184 call chpl_doDirectExecuteOn[187469] tmp[1544590]))
      if isdirect[2158182]
      {
        (2158191 call on_fn[1544613] rvfDerefTmp[2146328])
      }
      {
        val _args_foron_fn[2158206]:_class_localson_fn[2158198] "temp"
        (2158210 'move' _args_foron_fn[2158206](2158208 'stack allocate class' _class_localson_fn[2158198]))
        (2158212 '.=' _args_foron_fn[2158206] _0_tmp[2158201] tmp[1544590])
        (2158216 '.=' _args_foron_fn[2158206] _1_rvfDerefTmp[2158203] rvfDerefTmp[2146328])
        val _args_vforon_fn[2158220]:c_void_ptr[149] "temp"
        (2158224 'move' _args_vforon_fn[2158220](2158222 'cast_to_void_star' _args_foron_fn[2158206]))
        val _args_sizeon_fn[2158226]:int(64)[13] "temp"
        (2158230 'move' _args_sizeon_fn[2158226](2158228 'sizeof_bundle' _class_localson_fn[2158198]))
        on(2158262 call wrapon_fn[2158232] tmp[1544590] _args_vforon_fn[2158220] _args_sizeon_fn[2158226] _args_foron_fn[2158206])
      }
      {
      }
    }
    (1544635 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1061017].offset[1080209](const  ref arg this[1080215]:_ref(channel(true,dynamic,false))[1061017]) : int(64)[13] "instantiated generic" "invisible fn" "method" "resolved"
  {
    val ret[1080221]:int(64)[13] "dead after last mention" "RVV" "temp"
    val ret[1080230]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[1080232]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1080360 'move' ret[1080230] 0)
    const-val tmp[1080243]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1080245]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (1080247 'move' call_tmp[1080245](1080250 call home[1061816] this[1080215]))
    const-val call_tmp[1080253]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1080333]:BaseLocale[91204] "dead after last mention" "temp"
    (1080338 'move' _locale_tmp_[1080333](1080335 call _value[89984] call_tmp[1080245]))
    (1080255 'move' call_tmp[1080253](1080257 '_wide_get_locale' _locale_tmp_[1080333]))
    (1080259 'move' tmp[1080243] call_tmp[1080253])
    val rvfDerefTmp[2145630]:channel(true,dynamic,false)[1061008] "temp"
    (2145634 'move' rvfDerefTmp[2145630](2145632 'deref' this[1080215]))
    val isdirect[2151848]:bool[10] "temp"
    (2151853 'move' isdirect[2151848](2151850 call chpl_doDirectExecuteOn[187469] tmp[1080243]))
    if isdirect[2151848]
    {
      (2151857 call on_fn[1080266] rvfDerefTmp[2145630] ret[1080230])
    }
    {
      val _args_foron_fn[2151875]:_class_localson_fn[2151865] "temp"
      (2151879 'move' _args_foron_fn[2151875](2151877 'stack allocate class' _class_localson_fn[2151865]))
      (2151881 '.=' _args_foron_fn[2151875] _0_tmp[2151868] tmp[1080243])
      (2151885 '.=' _args_foron_fn[2151875] _1_rvfDerefTmp[2151870] rvfDerefTmp[2145630])
      ref tmp[2151889]:int(64)[13] "temp"
      (2151893 'move' tmp[2151889](2151891 'set reference' ret[1080230]))
      (2151895 '.=' _args_foron_fn[2151875] _2_ret[2151872] tmp[2151889])
      val _args_vforon_fn[2151899]:c_void_ptr[149] "temp"
      (2151903 'move' _args_vforon_fn[2151899](2151901 'cast_to_void_star' _args_foron_fn[2151875]))
      val _args_sizeon_fn[2151905]:int(64)[13] "temp"
      (2151909 'move' _args_sizeon_fn[2151905](2151907 'sizeof_bundle' _class_localson_fn[2151865]))
      on(2151949 call wrapon_fn[2151911] tmp[1080243] _args_vforon_fn[2151899] _args_sizeon_fn[2151905] _args_foron_fn[2151875])
    }
    {
    }
    val call_tmp[1080309]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1080357 'move' ret[1080221] ret[1080230])
    gotoReturn _end_offset[1080325] _end_offset[1080325]
    label _end_offset[1080325]
    (1080327 return ret[1080221])
  }
  function _ref(channel(true,dynamic,false))[1061017].readWriteThisFromLocale[1066346](const  ref arg this[1066352]:_ref(channel(true,dynamic,false))[1061017], ref arg _retArg[1867018]:_ref(locale)[948905]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val ret[1066354]:locale[28] "dead after last mention" "RVV" "temp"
    ref call_tmp[1066362]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (1066364 'move' call_tmp[1066362](1066367 call _readWriteThisFromLocale[1066377] this[1066352]))
    (1066370 'move' ret[1066354](1867022 call chpl__initCopy[1562294] call_tmp[1066362]))
    (1867020 '=' _retArg[1867018] ret[1066354])
    (1867024 return _void[55])
  }
  function _ref(channel(true,dynamic,true))[1021895].readWriteThisFromLocale[1543739](const  ref arg this[1543745]:_ref(channel(true,dynamic,true))[1021895], ref arg _retArg[1874371]:_ref(locale)[948905]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val ret[1543747]:locale[28] "dead after last mention" "RVV" "temp"
    ref call_tmp[1543755]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (1543757 'move' call_tmp[1543755](1543760 call _readWriteThisFromLocale[1543770] this[1543745]))
    (1543763 'move' ret[1543747](1874375 call chpl__initCopy[1562294] call_tmp[1543755]))
    (1874373 '=' _retArg[1874371] ret[1543747])
    (1874377 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1061017].getLocaleOfIoRequest[1066272](const  ref arg this[1066278]:_ref(channel(true,dynamic,false))[1061017], ref arg _retArg[1867006]:_ref(locale)[948905]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1066280]:locale[28] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1066288]:locale[28] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1867012]:locale[28] "temp"
    (1066296 call readWriteThisFromLocale[1066346] this[1066278] ret_tmp[1867012])
    (1867015 'move' call_tmp[1066288] ret_tmp[1867012])
    val ret[1066297]:locale[28] "dead at end of block" "insert auto destroy"
    (1066299 'move' ret[1066297] call_tmp[1066288])
    const-val call_tmp[1066303]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1066305 'move' call_tmp[1066303](1066308 call ==[782842] ret[1066297] nilLocale[89942]))
    const-val call_tmp[1066311]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1066313 'move' call_tmp[1066311] call_tmp[1066303])
    if call_tmp[1066311]
    {
      const-val call_tmp[1066320]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1864054]:locale[28] "temp"
      (1066325 call here[90438] ret_tmp[1864054])
      (1864057 'move' call_tmp[1066320] ret_tmp[1864054])
      (1066327 call =[90634] ret[1066297] call_tmp[1066320])
      (1878863 call chpl__autoDestroy[1562339] call_tmp[1066320])
    }
    (1066333 'move' ret[1066280] ret[1066297])
    gotoReturn _end_getLocaleOfIoRequest[1066341] _end_getLocaleOfIoRequest[1066341]
    label _end_getLocaleOfIoRequest[1066341]
    (1867008 '=' _retArg[1867006] ret[1066280])
    (1867010 return _void[55])
  }
  function _ref(channel(true,dynamic,true))[1021895].getLocaleOfIoRequest[1543665](const  ref arg this[1543671]:_ref(channel(true,dynamic,true))[1021895], ref arg _retArg[1874359]:_ref(locale)[948905]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1543673]:locale[28] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1543681]:locale[28] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1874365]:locale[28] "temp"
    (1543689 call readWriteThisFromLocale[1543739] this[1543671] ret_tmp[1874365])
    (1874368 'move' call_tmp[1543681] ret_tmp[1874365])
    val ret[1543690]:locale[28] "dead at end of block" "insert auto destroy"
    (1543692 'move' ret[1543690] call_tmp[1543681])
    const-val call_tmp[1543696]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1543698 'move' call_tmp[1543696](1543701 call ==[782842] ret[1543690] nilLocale[89942]))
    const-val call_tmp[1543704]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1543706 'move' call_tmp[1543704] call_tmp[1543696])
    if call_tmp[1543704]
    {
      const-val call_tmp[1543713]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1864210]:locale[28] "temp"
      (1543718 call here[90438] ret_tmp[1864210])
      (1864213 'move' call_tmp[1543713] ret_tmp[1864210])
      (1543720 call =[90634] ret[1543690] call_tmp[1543713])
      (1884593 call chpl__autoDestroy[1562339] call_tmp[1543713])
    }
    (1543726 'move' ret[1543673] ret[1543690])
    gotoReturn _end_getLocaleOfIoRequest[1543734] _end_getLocaleOfIoRequest[1543734]
    label _end_getLocaleOfIoRequest[1543734]
    (1874361 '=' _retArg[1874359] ret[1543673])
    (1874363 return _void[55])
  }
  function _ref(file)[948795].reader[1016622](const  ref arg this[1016628]:_ref(file)[948795], const in arg start[1016648]:int(64)[13], const in arg end[1016665]:int(64)[13], const in arg hints[1016671]:int(32)[95], const  ref arg style[1016678]:iostyle[231865], ref arg error_out[1843610]:Error[167984], ref arg _retArg[1866144]:_ref(channel(false,dynamic,true))[985697]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val ret[1016686]:channel(false,dynamic,true)[985688] "dead after last mention" "RVV" "temp"
    val ret[1016705]:channel(false,dynamic,true)[985688] "dead at end of block" "insert auto destroy"
    val call_tmp[1016707]:channel(false,dynamic,true)[985688] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1021802 call init[1017932] ret[1016705])
    const-val call_tmp[1016720]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1016722 'move' call_tmp[1016720](1016725 call ENOERR[223675]))
    val err[1016726]:syserr[223605] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1017673]:syserr[223605] "dead at end of block" "initialized later" "temp"
    (1021791 call =[224154] init_coerce_tmp[1017673] call_tmp[1016720])
    (1016728 'move' err[1016726] init_coerce_tmp[1017673])
    const-val tmp[1016733]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1016735]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (1016737 'move' call_tmp[1016735](1016740 call home[887010] this[1016628]))
    const-val call_tmp[1016743]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1017680]:BaseLocale[91204] "dead after last mention" "temp"
    (1017685 'move' _locale_tmp_[1017680](1017682 call _value[89984] call_tmp[1016735]))
    (1016745 'move' call_tmp[1016743](1016747 '_wide_get_locale' _locale_tmp_[1017680]))
    (1016749 'move' tmp[1016733] call_tmp[1016743])
    val error[1843613]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1843615 'move' error[1843613] nil[44])
    val rvfDerefTmp[2145295]:iostyle[231865] "temp"
    (2145299 'move' rvfDerefTmp[2145295](2145297 'deref' style[1016678]))
    val rvfDerefTmp[2145303]:file[235601] "temp"
    (2145307 'move' rvfDerefTmp[2145303](2145305 'deref' this[1016628]))
    val isdirect[2149337]:bool[10] "temp"
    (2149342 'move' isdirect[2149337](2149339 call chpl_doDirectExecuteOn[187469] tmp[1016733]))
    if isdirect[2149337]
    {
      (2149346 call on_fn[1016756] rvfDerefTmp[2145295] end[1016665] rvfDerefTmp[2145303] ret[1016705] hints[1016671] err[1016726] start[1016648] error[1843613])
    }
    {
      val _args_foron_fn[2149382]:_class_localson_fn[2149360] "temp"
      (2149386 'move' _args_foron_fn[2149382](2149384 'stack allocate class' _class_localson_fn[2149360]))
      (2149388 '.=' _args_foron_fn[2149382] _0_tmp[2149363] tmp[1016733])
      (2149392 '.=' _args_foron_fn[2149382] _1_rvfDerefTmp[2149365] rvfDerefTmp[2145295])
      (2149396 '.=' _args_foron_fn[2149382] _2_end[2149367] end[1016665])
      (2149400 '.=' _args_foron_fn[2149382] _3_rvfDerefTmp[2149369] rvfDerefTmp[2145303])
      ref tmp[2149404]:channel(false,dynamic,true)[985688] "temp"
      (2149408 'move' tmp[2149404](2149406 'set reference' ret[1016705]))
      (2149410 '.=' _args_foron_fn[2149382] _4_ret[2149371] tmp[2149404])
      (2149414 '.=' _args_foron_fn[2149382] _5_hints[2149373] hints[1016671])
      ref tmp[2149418]:syserr[223605] "temp"
      (2149422 'move' tmp[2149418](2149420 'set reference' err[1016726]))
      (2149424 '.=' _args_foron_fn[2149382] _6_err[2149375] tmp[2149418])
      (2149428 '.=' _args_foron_fn[2149382] _7_start[2149377] start[1016648])
      ref tmp[2149432]:Error[167984] "temp"
      (2149436 'move' tmp[2149432](2149434 'set reference' error[1843613]))
      (2149438 '.=' _args_foron_fn[2149382] _8_error[2149379] tmp[2149432])
      val _args_vforon_fn[2149442]:c_void_ptr[149] "temp"
      (2149446 'move' _args_vforon_fn[2149442](2149444 'cast_to_void_star' _args_foron_fn[2149382]))
      val _args_sizeon_fn[2149448]:int(64)[13] "temp"
      (2149452 'move' _args_sizeon_fn[2149448](2149450 'sizeof_bundle' _class_localson_fn[2149360]))
      on(2149540 call wrapon_fn[2149454] tmp[1016733] _args_vforon_fn[2149442] _args_sizeon_fn[2149448] _args_foron_fn[2149382])
    }
    val errorExists[2170396]:bool[10] "temp"
    (2170401 'move' errorExists[2170396](2170398 '!=' error[1843613] nil[44]))
    if errorExists[2170396]
    {
      (1843619 '=' error_out[1843610] error[1843613])
      (1877558 call chpl__autoDestroy[1571934] ret[1016705])
      gotoErrorHandlingReturn _end_reader[1016841] _end_reader[1016841]
    }
    {
    }
    const-val call_tmp[1016795]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1016797 'move' call_tmp[1016795](1016800 call _cond_test[224002] err[1016726]))
    if call_tmp[1016795]
    {
      {
        val error[1843627]:Error[167984] "error variable" "temp"
        (1843636 'move' error[1843627] nil[44])
        const-val call_tmp[1016805]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1864998]:string[26] "temp"
        (1016813 call tryGetPath[236385] this[1016628] ret_tmp[1864998])
        (1865001 'move' call_tmp[1016805] ret_tmp[1864998])
        (1016815 call ioerror[266271] err[1016726] "in file.reader" call_tmp[1016805] error[1843627])
        val errorExists[2170404]:bool[10] "temp"
        (2170409 'move' errorExists[2170404](2170406 '!=' error[1843627] nil[44]))
        if errorExists[2170404]
        {
          (1877561 call chpl__autoDestroy[1562275] call_tmp[1016805])
          gotoErrorHandling handler[1843628] handler[1843628]
        }
        (1877564 call chpl__autoDestroy[1562275] call_tmp[1016805])
        label handler[1843628]
        const-val shouldHandleError[1843647]:bool[10] "temp"
        val errorExists[2170412]:bool[10] "temp"
        (2170417 'move' errorExists[2170412](2170414 '!=' error[1843627] nil[44]))
        (1843651 'move' shouldHandleError[1843647] errorExists[2170412])
        if shouldHandleError[1843647]
        {
          (1843643 '=' error_out[1843610] error[1843627])
          (1877567 call chpl__autoDestroy[1571934] ret[1016705])
          gotoErrorHandlingReturn _end_reader[1016841] _end_reader[1016841]
        }
      }
    }
    val call_tmp[1016823]:channel(false,dynamic,true)[985688] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1021798 'move' ret[1016686] ret[1016705])
    gotoReturn _end_reader[1016841] _end_reader[1016841]
    label _end_reader[1016841]
    (1866146 '=' _retArg[1866144] ret[1016686])
    (1866148 return _void[55])
  }
  function _ref(file)[948795].reader_default_style[1017081](const  ref arg this[1017084]:_ref(file)[948795], ref arg error_out[1843699]:Error[167984]) : iostyle[231865] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1017087]:iostyle[231865] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[1017092]:iostyle[231865] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[1843704]:Error[167984] "error variable" "temp"
    (1843706 'move' error[1843704] nil[44])
    (1017099 'move' style[1017092](1017096 call _style[235981] this[1017084] error[1843704]))
    val errorExists[2170436]:bool[10] "temp"
    (2170441 'move' errorExists[2170436](2170438 '!=' error[1843704] nil[44]))
    if errorExists[2170436]
    {
      (1843710 '=' error_out[1843699] error[1843704])
      gotoErrorHandlingReturn _endreader_default_style[1843701] _endreader_default_style[1843701]
    }
    (1017644 'move' ret[1017087] style[1017092])
    label _endreader_default_style[1843701]
    (1017090 return ret[1017087])
  }
  function _ref(file)[948795].reader_default_hints[1017033](const  ref arg this[1017036]:_ref(file)[948795], ref arg error_out[1843695]:Error[167984]) : int(32)[95] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1017039]:int(32)[95] "dead after last mention" "RVV" "maybe param" "temp"
    const-val hints[1017044]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1017048]:int(32)[95] "dead after last mention" "temp"
    val _formal_type[1017050]:int(32)[95] "dead after last mention" "temp" "type variable"
    (1017068 'move' tmp[1017048] IOHINT_NONE[231432])
    (1017061 'move' hints[1017044] tmp[1017048])
    (1017064 'move' ret[1017039] hints[1017044])
    label _endreader_default_hints[1843697]
    (1017042 return ret[1017039])
  }
  function _ref(file)[948795].reader_default_end[1016969](const  ref arg this[1016972]:_ref(file)[948795], ref arg error_out[1843691]:Error[167984]) : int(64)[13] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1016975]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val end[1016980]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val call_tmp[1016983]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val tmp[1016993]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1016995]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1017003 'move' tmp[1016993] 9223372036854775807)
    (1017006 'move' end[1016980] tmp[1016993])
    (1017019 'move' ret[1016975] end[1016980])
    label _endreader_default_end[1843693]
    (1016978 return ret[1016975])
  }
  function _ref(file)[948795].reader_default_start[1016922](const  ref arg this[1016925]:_ref(file)[948795], ref arg error_out[1843687]:Error[167984]) : int(64)[13] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1016928]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val start[1016933]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1016937]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1016939]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1016947 'move' tmp[1016937] 0)
    (1016950 'move' start[1016933] tmp[1016937])
    (1016955 'move' ret[1016928] start[1016933])
    label _endreader_default_start[1843689]
    (1016931 return ret[1016928])
  }
  function _ref(file)[948795].reader[1080649](const  ref arg this[1080655]:_ref(file)[948795], const in arg start[1080675]:int(64)[13], const in arg end[1080692]:int(64)[13], const in arg hints[1080698]:int(32)[95], const  ref arg style[1080705]:iostyle[231865], ref arg error_out[1844953]:Error[167984], ref arg _retArg[1867084]:_ref(channel(false,dynamic,false))[1080752]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val ret[1080713]:channel(false,dynamic,false)[1080743] "dead after last mention" "RVV" "temp"
    val ret[1080767]:channel(false,dynamic,false)[1080743] "dead at end of block" "insert auto destroy"
    val call_tmp[1080769]:channel(false,dynamic,false)[1080743] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1082144 call init[1081413] ret[1080767])
    const-val call_tmp[1080782]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1080784 'move' call_tmp[1080782](1080787 call ENOERR[223675]))
    val err[1080788]:syserr[223605] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1081154]:syserr[223605] "dead at end of block" "initialized later" "temp"
    (1082133 call =[224154] init_coerce_tmp[1081154] call_tmp[1080782])
    (1080790 'move' err[1080788] init_coerce_tmp[1081154])
    const-val tmp[1080795]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1080797]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (1080799 'move' call_tmp[1080797](1080802 call home[887010] this[1080655]))
    const-val call_tmp[1080805]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1081161]:BaseLocale[91204] "dead after last mention" "temp"
    (1081166 'move' _locale_tmp_[1081161](1081163 call _value[89984] call_tmp[1080797]))
    (1080807 'move' call_tmp[1080805](1080809 '_wide_get_locale' _locale_tmp_[1081161]))
    (1080811 'move' tmp[1080795] call_tmp[1080805])
    val error[1844956]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1844958 'move' error[1844956] nil[44])
    val rvfDerefTmp[2145658]:iostyle[231865] "temp"
    (2145662 'move' rvfDerefTmp[2145658](2145660 'deref' style[1080705]))
    val rvfDerefTmp[2145666]:file[235601] "temp"
    (2145670 'move' rvfDerefTmp[2145666](2145668 'deref' this[1080655]))
    val isdirect[2151954]:bool[10] "temp"
    (2151959 'move' isdirect[2151954](2151956 call chpl_doDirectExecuteOn[187469] tmp[1080795]))
    if isdirect[2151954]
    {
      (2151963 call on_fn[1080818] end[1080692] rvfDerefTmp[2145658] rvfDerefTmp[2145666] err[1080788] hints[1080698] start[1080675] ret[1080767] error[1844956])
    }
    {
      val _args_foron_fn[2151999]:_class_localson_fn[2151977] "temp"
      (2152003 'move' _args_foron_fn[2151999](2152001 'stack allocate class' _class_localson_fn[2151977]))
      (2152005 '.=' _args_foron_fn[2151999] _0_tmp[2151980] tmp[1080795])
      (2152009 '.=' _args_foron_fn[2151999] _1_end[2151982] end[1080692])
      (2152013 '.=' _args_foron_fn[2151999] _2_rvfDerefTmp[2151984] rvfDerefTmp[2145658])
      (2152017 '.=' _args_foron_fn[2151999] _3_rvfDerefTmp[2151986] rvfDerefTmp[2145666])
      ref tmp[2152021]:syserr[223605] "temp"
      (2152025 'move' tmp[2152021](2152023 'set reference' err[1080788]))
      (2152027 '.=' _args_foron_fn[2151999] _4_err[2151988] tmp[2152021])
      (2152031 '.=' _args_foron_fn[2151999] _5_hints[2151990] hints[1080698])
      (2152035 '.=' _args_foron_fn[2151999] _6_start[2151992] start[1080675])
      ref tmp[2152039]:channel(false,dynamic,false)[1080743] "temp"
      (2152043 'move' tmp[2152039](2152041 'set reference' ret[1080767]))
      (2152045 '.=' _args_foron_fn[2151999] _7_ret[2151994] tmp[2152039])
      ref tmp[2152049]:Error[167984] "temp"
      (2152053 'move' tmp[2152049](2152051 'set reference' error[1844956]))
      (2152055 '.=' _args_foron_fn[2151999] _8_error[2151996] tmp[2152049])
      val _args_vforon_fn[2152059]:c_void_ptr[149] "temp"
      (2152063 'move' _args_vforon_fn[2152059](2152061 'cast_to_void_star' _args_foron_fn[2151999]))
      val _args_sizeon_fn[2152065]:int(64)[13] "temp"
      (2152069 'move' _args_sizeon_fn[2152065](2152067 'sizeof_bundle' _class_localson_fn[2151977]))
      on(2152157 call wrapon_fn[2152071] tmp[1080795] _args_vforon_fn[2152059] _args_sizeon_fn[2152065] _args_foron_fn[2151999])
    }
    val errorExists[2171028]:bool[10] "temp"
    (2171033 'move' errorExists[2171028](2171030 '!=' error[1844956] nil[44]))
    if errorExists[2171028]
    {
      (1844962 '=' error_out[1844953] error[1844956])
      (1878967 call chpl__autoDestroy[1641331] ret[1080767])
      gotoErrorHandlingReturn _end_reader[1080903] _end_reader[1080903]
    }
    {
    }
    const-val call_tmp[1080857]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1080859 'move' call_tmp[1080857](1080862 call _cond_test[224002] err[1080788]))
    if call_tmp[1080857]
    {
      {
        val error[1844970]:Error[167984] "error variable" "temp"
        (1844979 'move' error[1844970] nil[44])
        const-val call_tmp[1080867]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1865016]:string[26] "temp"
        (1080875 call tryGetPath[236385] this[1080655] ret_tmp[1865016])
        (1865019 'move' call_tmp[1080867] ret_tmp[1865016])
        (1080877 call ioerror[266271] err[1080788] "in file.reader" call_tmp[1080867] error[1844970])
        val errorExists[2171036]:bool[10] "temp"
        (2171041 'move' errorExists[2171036](2171038 '!=' error[1844970] nil[44]))
        if errorExists[2171036]
        {
          (1878970 call chpl__autoDestroy[1562275] call_tmp[1080867])
          gotoErrorHandling handler[1844971] handler[1844971]
        }
        (1878973 call chpl__autoDestroy[1562275] call_tmp[1080867])
        label handler[1844971]
        const-val shouldHandleError[1844990]:bool[10] "temp"
        val errorExists[2171044]:bool[10] "temp"
        (2171049 'move' errorExists[2171044](2171046 '!=' error[1844970] nil[44]))
        (1844994 'move' shouldHandleError[1844990] errorExists[2171044])
        if shouldHandleError[1844990]
        {
          (1844986 '=' error_out[1844953] error[1844970])
          (1878976 call chpl__autoDestroy[1641331] ret[1080767])
          gotoErrorHandlingReturn _end_reader[1080903] _end_reader[1080903]
        }
      }
    }
    val call_tmp[1080885]:channel(false,dynamic,false)[1080743] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1082140 'move' ret[1080713] ret[1080767])
    gotoReturn _end_reader[1080903] _end_reader[1080903]
    label _end_reader[1080903]
    (1867086 '=' _retArg[1867084] ret[1080713])
    (1867088 return _void[55])
  }
  function _ref(file)[948795].reader_default_style[1081105](const  ref arg this[1081108]:_ref(file)[948795], ref arg error_out[1845042]:Error[167984]) : iostyle[231865] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1081111]:iostyle[231865] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[1081116]:iostyle[231865] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[1845047]:Error[167984] "error variable" "temp"
    (1845049 'move' error[1845047] nil[44])
    (1081123 'move' style[1081116](1081120 call _style[235981] this[1081108] error[1845047]))
    val errorExists[2171068]:bool[10] "temp"
    (2171073 'move' errorExists[2171068](2171070 '!=' error[1845047] nil[44]))
    if errorExists[2171068]
    {
      (1845053 '=' error_out[1845042] error[1845047])
      gotoErrorHandlingReturn _endreader_default_style[1845044] _endreader_default_style[1845044]
    }
    (1081127 'move' ret[1081111] style[1081116])
    label _endreader_default_style[1845044]
    (1081114 return ret[1081111])
  }
  function _ref(file)[948795].reader_default_hints[1081058](const  ref arg this[1081061]:_ref(file)[948795], ref arg error_out[1845038]:Error[167984]) : int(32)[95] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1081064]:int(32)[95] "dead after last mention" "RVV" "maybe param" "temp"
    const-val hints[1081069]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1081073]:int(32)[95] "dead after last mention" "temp"
    val _formal_type[1081075]:int(32)[95] "dead after last mention" "temp" "type variable"
    (1081093 'move' tmp[1081073] IOHINT_NONE[231432])
    (1081086 'move' hints[1081069] tmp[1081073])
    (1081089 'move' ret[1081064] hints[1081069])
    label _endreader_default_hints[1845040]
    (1081067 return ret[1081064])
  }
  function _ref(file)[948795].reader_default_end[1080995](const  ref arg this[1080998]:_ref(file)[948795], ref arg error_out[1845034]:Error[167984]) : int(64)[13] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1081001]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val end[1081006]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val call_tmp[1081009]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val tmp[1081019]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1081021]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1081029 'move' tmp[1081019] 9223372036854775807)
    (1081032 'move' end[1081006] tmp[1081019])
    (1081045 'move' ret[1081001] end[1081006])
    label _endreader_default_end[1845036]
    (1081004 return ret[1081001])
  }
  function _ref(file)[948795].reader_default_start[1080949](const  ref arg this[1080952]:_ref(file)[948795], ref arg error_out[1845030]:Error[167984]) : int(64)[13] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1080955]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val start[1080960]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1080964]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1080966]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1080974 'move' tmp[1080964] 0)
    (1080977 'move' start[1080960] tmp[1080964])
    (1080982 'move' ret[1080955] start[1080960])
    label _endreader_default_start[1845032]
    (1080958 return ret[1080955])
  }
  function _ref(file)[948795].writer[1022197](const  ref arg this[1022203]:_ref(file)[948795], const in arg start[1022223]:int(64)[13], const in arg end[1022240]:int(64)[13], const in arg hints[1022246]:int(32)[95], const  ref arg style[1022253]:iostyle[231865], ref arg error_out[1843726]:Error[167984], ref arg _retArg[1866210]:_ref(channel(true,dynamic,true))[1021895]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val ret[1022261]:channel(true,dynamic,true)[1021886] "dead after last mention" "RVV" "temp"
    val ret[1022280]:channel(true,dynamic,true)[1021886] "dead at end of block" "insert auto destroy"
    val call_tmp[1022282]:channel(true,dynamic,true)[1021886] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1023890 call init[1022968] ret[1022280])
    const-val call_tmp[1022295]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1022297 'move' call_tmp[1022295](1022300 call ENOERR[223675]))
    val err[1022301]:syserr[223605] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1022709]:syserr[223605] "dead at end of block" "initialized later" "temp"
    (1023879 call =[224154] init_coerce_tmp[1022709] call_tmp[1022295])
    (1022303 'move' err[1022301] init_coerce_tmp[1022709])
    const-val tmp[1022308]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1022310]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (1022312 'move' call_tmp[1022310](1022315 call home[887010] this[1022203]))
    const-val call_tmp[1022318]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1022716]:BaseLocale[91204] "dead after last mention" "temp"
    (1022721 'move' _locale_tmp_[1022716](1022718 call _value[89984] call_tmp[1022310]))
    (1022320 'move' call_tmp[1022318](1022322 '_wide_get_locale' _locale_tmp_[1022716]))
    (1022324 'move' tmp[1022308] call_tmp[1022318])
    val error[1843729]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1843731 'move' error[1843729] nil[44])
    val rvfDerefTmp[2145372]:file[235601] "temp"
    (2145376 'move' rvfDerefTmp[2145372](2145374 'deref' this[1022203]))
    val rvfDerefTmp[2145393]:iostyle[231865] "temp"
    (2145397 'move' rvfDerefTmp[2145393](2145395 'deref' style[1022253]))
    val isdirect[2150020]:bool[10] "temp"
    (2150025 'move' isdirect[2150020](2150022 call chpl_doDirectExecuteOn[187469] tmp[1022308]))
    if isdirect[2150020]
    {
      (2150029 call on_fn[1022331] rvfDerefTmp[2145372] ret[1022280] hints[1022246] err[1022301] start[1022223] end[1022240] rvfDerefTmp[2145393] error[1843729])
    }
    {
      val _args_foron_fn[2150065]:_class_localson_fn[2150043] "temp"
      (2150069 'move' _args_foron_fn[2150065](2150067 'stack allocate class' _class_localson_fn[2150043]))
      (2150071 '.=' _args_foron_fn[2150065] _0_tmp[2150046] tmp[1022308])
      (2150075 '.=' _args_foron_fn[2150065] _1_rvfDerefTmp[2150048] rvfDerefTmp[2145372])
      ref tmp[2150079]:channel(true,dynamic,true)[1021886] "temp"
      (2150083 'move' tmp[2150079](2150081 'set reference' ret[1022280]))
      (2150085 '.=' _args_foron_fn[2150065] _2_ret[2150050] tmp[2150079])
      (2150089 '.=' _args_foron_fn[2150065] _3_hints[2150052] hints[1022246])
      ref tmp[2150093]:syserr[223605] "temp"
      (2150097 'move' tmp[2150093](2150095 'set reference' err[1022301]))
      (2150099 '.=' _args_foron_fn[2150065] _4_err[2150054] tmp[2150093])
      (2150103 '.=' _args_foron_fn[2150065] _5_start[2150056] start[1022223])
      (2150107 '.=' _args_foron_fn[2150065] _6_end[2150058] end[1022240])
      (2150111 '.=' _args_foron_fn[2150065] _7_rvfDerefTmp[2150060] rvfDerefTmp[2145393])
      ref tmp[2150115]:Error[167984] "temp"
      (2150119 'move' tmp[2150115](2150117 'set reference' error[1843729]))
      (2150121 '.=' _args_foron_fn[2150065] _8_error[2150062] tmp[2150115])
      val _args_vforon_fn[2150125]:c_void_ptr[149] "temp"
      (2150129 'move' _args_vforon_fn[2150125](2150127 'cast_to_void_star' _args_foron_fn[2150065]))
      val _args_sizeon_fn[2150131]:int(64)[13] "temp"
      (2150135 'move' _args_sizeon_fn[2150131](2150133 'sizeof_bundle' _class_localson_fn[2150043]))
      on(2150223 call wrapon_fn[2150137] tmp[1022308] _args_vforon_fn[2150125] _args_sizeon_fn[2150131] _args_foron_fn[2150065])
    }
    val errorExists[2170444]:bool[10] "temp"
    (2170449 'move' errorExists[2170444](2170446 '!=' error[1843729] nil[44]))
    if errorExists[2170444]
    {
      (1843735 '=' error_out[1843726] error[1843729])
      (1877581 call chpl__autoDestroy[1634913] ret[1022280])
      gotoErrorHandlingReturn _end_writer[1022416] _end_writer[1022416]
    }
    {
    }
    const-val call_tmp[1022370]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1022372 'move' call_tmp[1022370](1022375 call _cond_test[224002] err[1022301]))
    if call_tmp[1022370]
    {
      {
        val error[1843743]:Error[167984] "error variable" "temp"
        (1843752 'move' error[1843743] nil[44])
        const-val call_tmp[1022380]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1865004]:string[26] "temp"
        (1022388 call tryGetPath[236385] this[1022203] ret_tmp[1865004])
        (1865007 'move' call_tmp[1022380] ret_tmp[1865004])
        (1022390 call ioerror[266271] err[1022301] "in file.writer" call_tmp[1022380] error[1843743])
        val errorExists[2170452]:bool[10] "temp"
        (2170457 'move' errorExists[2170452](2170454 '!=' error[1843743] nil[44]))
        if errorExists[2170452]
        {
          (1877584 call chpl__autoDestroy[1562275] call_tmp[1022380])
          gotoErrorHandling handler[1843744] handler[1843744]
        }
        (1877587 call chpl__autoDestroy[1562275] call_tmp[1022380])
        label handler[1843744]
        const-val shouldHandleError[1843763]:bool[10] "temp"
        val errorExists[2170460]:bool[10] "temp"
        (2170465 'move' errorExists[2170460](2170462 '!=' error[1843743] nil[44]))
        (1843767 'move' shouldHandleError[1843763] errorExists[2170460])
        if shouldHandleError[1843763]
        {
          (1843759 '=' error_out[1843726] error[1843743])
          (1877590 call chpl__autoDestroy[1634913] ret[1022280])
          gotoErrorHandlingReturn _end_writer[1022416] _end_writer[1022416]
        }
      }
    }
    val call_tmp[1022398]:channel(true,dynamic,true)[1021886] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1023886 'move' ret[1022261] ret[1022280])
    gotoReturn _end_writer[1022416] _end_writer[1022416]
    label _end_writer[1022416]
    (1866212 '=' _retArg[1866210] ret[1022261])
    (1866214 return _void[55])
  }
  function _ref(file)[948795].writer_default_style[1022659](const  ref arg this[1022662]:_ref(file)[948795], ref arg error_out[1843815]:Error[167984]) : iostyle[231865] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1022665]:iostyle[231865] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[1022670]:iostyle[231865] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[1843820]:Error[167984] "error variable" "temp"
    (1843822 'move' error[1843820] nil[44])
    (1022677 'move' style[1022670](1022674 call _style[235981] this[1022662] error[1843820]))
    val errorExists[2170484]:bool[10] "temp"
    (2170489 'move' errorExists[2170484](2170486 '!=' error[1843820] nil[44]))
    if errorExists[2170484]
    {
      (1843826 '=' error_out[1843815] error[1843820])
      gotoErrorHandlingReturn _endwriter_default_style[1843817] _endwriter_default_style[1843817]
    }
    (1022681 'move' ret[1022665] style[1022670])
    label _endwriter_default_style[1843817]
    (1022668 return ret[1022665])
  }
  function _ref(file)[948795].writer_default_hints[1022608](const  ref arg this[1022611]:_ref(file)[948795], ref arg error_out[1843811]:Error[167984]) : int(32)[95] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1022614]:int(32)[95] "dead after last mention" "RVV" "maybe param" "temp"
    const-val hints[1022619]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1022623]:int(32)[95] "dead after last mention" "temp"
    val _formal_type[1022625]:int(32)[95] "dead after last mention" "temp" "type variable"
    (1022633 'move' tmp[1022623](1022644 'cast' int(32)[95] 0))
    (1022636 'move' hints[1022619] tmp[1022623])
    (1022641 'move' ret[1022614] hints[1022619])
    label _endwriter_default_hints[1843813]
    (1022617 return ret[1022614])
  }
  function _ref(file)[948795].writer_default_end[1022544](const  ref arg this[1022547]:_ref(file)[948795], ref arg error_out[1843807]:Error[167984]) : int(64)[13] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1022550]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val end[1022555]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val call_tmp[1022558]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val tmp[1022568]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1022570]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1022578 'move' tmp[1022568] 9223372036854775807)
    (1022581 'move' end[1022555] tmp[1022568])
    (1022594 'move' ret[1022550] end[1022555])
    label _endwriter_default_end[1843809]
    (1022553 return ret[1022550])
  }
  function _ref(file)[948795].writer_default_start[1022497](const  ref arg this[1022500]:_ref(file)[948795], ref arg error_out[1843803]:Error[167984]) : int(64)[13] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1022503]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val start[1022508]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1022512]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1022514]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1022522 'move' tmp[1022512] 0)
    (1022525 'move' start[1022508] tmp[1022512])
    (1022530 'move' ret[1022503] start[1022508])
    label _endwriter_default_start[1843805]
    (1022506 return ret[1022503])
  }
  function _ref(file)[948795].writer[1060914](const  ref arg this[1060920]:_ref(file)[948795], const in arg start[1060940]:int(64)[13], const in arg end[1060957]:int(64)[13], const in arg hints[1060963]:int(32)[95], const  ref arg style[1060970]:iostyle[231865], ref arg error_out[1844157]:Error[167984], ref arg _retArg[1866694]:_ref(channel(true,dynamic,false))[1061017]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val ret[1060978]:channel(true,dynamic,false)[1061008] "dead after last mention" "RVV" "temp"
    val ret[1061032]:channel(true,dynamic,false)[1061008] "dead at end of block" "insert auto destroy"
    val call_tmp[1061034]:channel(true,dynamic,false)[1061008] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1062412 call init[1061681] ret[1061032])
    const-val call_tmp[1061047]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1061049 'move' call_tmp[1061047](1061052 call ENOERR[223675]))
    val err[1061053]:syserr[223605] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1061422]:syserr[223605] "dead at end of block" "initialized later" "temp"
    (1062401 call =[224154] init_coerce_tmp[1061422] call_tmp[1061047])
    (1061055 'move' err[1061053] init_coerce_tmp[1061422])
    const-val tmp[1061060]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1061062]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (1061064 'move' call_tmp[1061062](1061067 call home[887010] this[1060920]))
    const-val call_tmp[1061070]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1061429]:BaseLocale[91204] "dead after last mention" "temp"
    (1061434 'move' _locale_tmp_[1061429](1061431 call _value[89984] call_tmp[1061062]))
    (1061072 'move' call_tmp[1061070](1061074 '_wide_get_locale' _locale_tmp_[1061429]))
    (1061076 'move' tmp[1061060] call_tmp[1061070])
    val error[1844160]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1844162 'move' error[1844160] nil[44])
    val rvfDerefTmp[2145480]:iostyle[231865] "temp"
    (2145484 'move' rvfDerefTmp[2145480](2145482 'deref' style[1060970]))
    val rvfDerefTmp[2145488]:file[235601] "temp"
    (2145492 'move' rvfDerefTmp[2145488](2145490 'deref' this[1060920]))
    val isdirect[2150733]:bool[10] "temp"
    (2150738 'move' isdirect[2150733](2150735 call chpl_doDirectExecuteOn[187469] tmp[1061060]))
    if isdirect[2150733]
    {
      (2150742 call on_fn[1061083] end[1060957] rvfDerefTmp[2145480] rvfDerefTmp[2145488] err[1061053] hints[1060963] start[1060940] ret[1061032] error[1844160])
    }
    {
      val _args_foron_fn[2150778]:_class_localson_fn[2150756] "temp"
      (2150782 'move' _args_foron_fn[2150778](2150780 'stack allocate class' _class_localson_fn[2150756]))
      (2150784 '.=' _args_foron_fn[2150778] _0_tmp[2150759] tmp[1061060])
      (2150788 '.=' _args_foron_fn[2150778] _1_end[2150761] end[1060957])
      (2150792 '.=' _args_foron_fn[2150778] _2_rvfDerefTmp[2150763] rvfDerefTmp[2145480])
      (2150796 '.=' _args_foron_fn[2150778] _3_rvfDerefTmp[2150765] rvfDerefTmp[2145488])
      ref tmp[2150800]:syserr[223605] "temp"
      (2150804 'move' tmp[2150800](2150802 'set reference' err[1061053]))
      (2150806 '.=' _args_foron_fn[2150778] _4_err[2150767] tmp[2150800])
      (2150810 '.=' _args_foron_fn[2150778] _5_hints[2150769] hints[1060963])
      (2150814 '.=' _args_foron_fn[2150778] _6_start[2150771] start[1060940])
      ref tmp[2150818]:channel(true,dynamic,false)[1061008] "temp"
      (2150822 'move' tmp[2150818](2150820 'set reference' ret[1061032]))
      (2150824 '.=' _args_foron_fn[2150778] _7_ret[2150773] tmp[2150818])
      ref tmp[2150828]:Error[167984] "temp"
      (2150832 'move' tmp[2150828](2150830 'set reference' error[1844160]))
      (2150834 '.=' _args_foron_fn[2150778] _8_error[2150775] tmp[2150828])
      val _args_vforon_fn[2150838]:c_void_ptr[149] "temp"
      (2150842 'move' _args_vforon_fn[2150838](2150840 'cast_to_void_star' _args_foron_fn[2150778]))
      val _args_sizeon_fn[2150844]:int(64)[13] "temp"
      (2150848 'move' _args_sizeon_fn[2150844](2150846 'sizeof_bundle' _class_localson_fn[2150756]))
      on(2150936 call wrapon_fn[2150850] tmp[1061060] _args_vforon_fn[2150838] _args_sizeon_fn[2150844] _args_foron_fn[2150778])
    }
    val errorExists[2170668]:bool[10] "temp"
    (2170673 'move' errorExists[2170668](2170670 '!=' error[1844160] nil[44]))
    if errorExists[2170668]
    {
      (1844166 '=' error_out[1844157] error[1844160])
      (1878806 call chpl__autoDestroy[1637077] ret[1061032])
      gotoErrorHandlingReturn _end_writer[1061168] _end_writer[1061168]
    }
    {
    }
    const-val call_tmp[1061122]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1061124 'move' call_tmp[1061122](1061127 call _cond_test[224002] err[1061053]))
    if call_tmp[1061122]
    {
      {
        val error[1844174]:Error[167984] "error variable" "temp"
        (1844183 'move' error[1844174] nil[44])
        const-val call_tmp[1061132]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1865010]:string[26] "temp"
        (1061140 call tryGetPath[236385] this[1060920] ret_tmp[1865010])
        (1865013 'move' call_tmp[1061132] ret_tmp[1865010])
        (1061142 call ioerror[266271] err[1061053] "in file.writer" call_tmp[1061132] error[1844174])
        val errorExists[2170676]:bool[10] "temp"
        (2170681 'move' errorExists[2170676](2170678 '!=' error[1844174] nil[44]))
        if errorExists[2170676]
        {
          (1878809 call chpl__autoDestroy[1562275] call_tmp[1061132])
          gotoErrorHandling handler[1844175] handler[1844175]
        }
        (1878812 call chpl__autoDestroy[1562275] call_tmp[1061132])
        label handler[1844175]
        const-val shouldHandleError[1844194]:bool[10] "temp"
        val errorExists[2170684]:bool[10] "temp"
        (2170689 'move' errorExists[2170684](2170686 '!=' error[1844174] nil[44]))
        (1844198 'move' shouldHandleError[1844194] errorExists[2170684])
        if shouldHandleError[1844194]
        {
          (1844190 '=' error_out[1844157] error[1844174])
          (1878815 call chpl__autoDestroy[1637077] ret[1061032])
          gotoErrorHandlingReturn _end_writer[1061168] _end_writer[1061168]
        }
      }
    }
    val call_tmp[1061150]:channel(true,dynamic,false)[1061008] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1062408 'move' ret[1060978] ret[1061032])
    gotoReturn _end_writer[1061168] _end_writer[1061168]
    label _end_writer[1061168]
    (1866696 '=' _retArg[1866694] ret[1060978])
    (1866698 return _void[55])
  }
  function _ref(file)[948795].writer_default_style[1061373](const  ref arg this[1061376]:_ref(file)[948795], ref arg error_out[1844246]:Error[167984]) : iostyle[231865] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1061379]:iostyle[231865] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[1061384]:iostyle[231865] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[1844251]:Error[167984] "error variable" "temp"
    (1844253 'move' error[1844251] nil[44])
    (1061391 'move' style[1061384](1061388 call _style[235981] this[1061376] error[1844251]))
    val errorExists[2170708]:bool[10] "temp"
    (2170713 'move' errorExists[2170708](2170710 '!=' error[1844251] nil[44]))
    if errorExists[2170708]
    {
      (1844257 '=' error_out[1844246] error[1844251])
      gotoErrorHandlingReturn _endwriter_default_style[1844248] _endwriter_default_style[1844248]
    }
    (1061395 'move' ret[1061379] style[1061384])
    label _endwriter_default_style[1844248]
    (1061382 return ret[1061379])
  }
  function _ref(file)[948795].writer_default_hints[1061323](const  ref arg this[1061326]:_ref(file)[948795], ref arg error_out[1844242]:Error[167984]) : int(32)[95] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1061329]:int(32)[95] "dead after last mention" "RVV" "maybe param" "temp"
    const-val hints[1061334]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1061338]:int(32)[95] "dead after last mention" "temp"
    val _formal_type[1061340]:int(32)[95] "dead after last mention" "temp" "type variable"
    (1061348 'move' tmp[1061338](1061359 'cast' int(32)[95] 0))
    (1061351 'move' hints[1061334] tmp[1061338])
    (1061356 'move' ret[1061329] hints[1061334])
    label _endwriter_default_hints[1844244]
    (1061332 return ret[1061329])
  }
  function _ref(file)[948795].writer_default_end[1061260](const  ref arg this[1061263]:_ref(file)[948795], ref arg error_out[1844238]:Error[167984]) : int(64)[13] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1061266]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val end[1061271]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val call_tmp[1061274]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val tmp[1061284]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1061286]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1061294 'move' tmp[1061284] 9223372036854775807)
    (1061297 'move' end[1061271] tmp[1061284])
    (1061310 'move' ret[1061266] end[1061271])
    label _endwriter_default_end[1844240]
    (1061269 return ret[1061266])
  }
  function _ref(file)[948795].writer_default_start[1061214](const  ref arg this[1061217]:_ref(file)[948795], ref arg error_out[1844234]:Error[167984]) : int(64)[13] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1061220]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val start[1061225]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1061229]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1061231]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1061239 'move' tmp[1061229] 0)
    (1061242 'move' start[1061225] tmp[1061229])
    (1061247 'move' ret[1061220] start[1061225])
    label _endwriter_default_start[1844236]
    (1061223 return ret[1061220])
  }
  function _write_text_internal[1078821](const in arg _channel_internal[1078823]:qio_channel_ptr_t[231486], const in arg x[1078825]:int(64)[13]) : syserr[223605] "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1078839]:syserr[223605] "dead after last mention" "RVV" "initialized later" "temp"
    val call_tmp[1078849]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1078949]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1078971]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[1078984]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1078997]:syserr[223605] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1079616]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1079622 'move' coerce_tmp[1079616](1079618 'cast' int(32)[95] 0))
        const-val coerce_tmp[1079624]:uint(64)[115] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1079630 'move' coerce_tmp[1079624](1079626 'cast' uint(64)[115] 8))
        const-val coerce_tmp[1079632]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1079638 'move' coerce_tmp[1079632](1079634 'cast' int(32)[95] 1))
        (1078999 'move' call_tmp[1078997](1079002 call qio_channel_print_int[1079586] coerce_tmp[1079616] _channel_internal[1078823] x[1078825] coerce_tmp[1079624] coerce_tmp[1079632]))
        (1079642 'move' ret[1078839] call_tmp[1078997])
        gotoReturn _end__write_text_internal[1079569] _end__write_text_internal[1079569]
      }
    }
    label _end__write_text_internal[1079569]
    (1079571 return ret[1078839])
  }
  function _write_text_internal[1172905](const in arg _channel_internal[1172907]:qio_channel_ptr_t[231486], const  ref arg x[1172909]:string[26]) : syserr[223605] "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1172923]:syserr[223605] "dead after last mention" "RVV" "initialized later" "temp"
    val call_tmp[1172933]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1173033]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1173100]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1173153]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          {
            val call_tmp[1173206]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            {
              val call_tmp[1173292]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              {
                const-val call_tmp[1173315]:string[26] "dead at end of block" "maybe param" "temp"
                const-val ret_tmp[1863100]:string[26] "temp"
                (1173323 call localize[32889] x[1172909] ret_tmp[1863100])
                (1863103 'move' call_tmp[1173315] ret_tmp[1863100])
                const local_x[1173324]:string[26] "dead at end of block" "const" "insert auto destroy"
                (1173326 'move' local_x[1173324] call_tmp[1173315])
                ref call_tmp[1173330]:_ref(bool)[937260] "dead after last mention" "maybe param" "reference to a const" "temp"
                (1173332 'move' call_tmp[1173330](1173335 call hasEscapes[758077] local_x[1173324]))
                const-val call_tmp[1173338]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val tmp[1173683]:bool[10] "dead after last mention" "const" "temp"
                (1173685 'move' tmp[1173683](1173687 'deref' call_tmp[1173330]))
                (1173340 'move' call_tmp[1173338] tmp[1173683])
                if call_tmp[1173338]
                {
                  (1173704 call =[224154] ret[1172923] EILSEQ[224465])
                  (1880663 call chpl__autoDestroy[1562275] local_x[1173324])
                  gotoReturn _end__write_text_internal[1173653] _end__write_text_internal[1173653]
                }
                const-val call_tmp[1173355]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (1173357 'move' call_tmp[1173355](1173363 call c_str[32935] local_x[1173324]))
                const-val call_tmp[1173364]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (1173366 'move' call_tmp[1173364](1173369 call numBytes[32810] local_x[1173324]))
                const-val call_tmp[1173372]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (1173374 'move' call_tmp[1173372] call_tmp[1173364])
                const-val call_tmp[1173380]:syserr[223605] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1173692]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1173698 'move' coerce_tmp[1173692](1173694 'cast' int(32)[95] 0))
                (1173382 'move' call_tmp[1173380](1173385 call qio_channel_print_string[234858] coerce_tmp[1173692] _channel_internal[1172907] call_tmp[1173355] call_tmp[1173372]))
                (1173711 'move' ret[1172923] call_tmp[1173380])
                (1880666 call chpl__autoDestroy[1562275] local_x[1173324])
                gotoReturn _end__write_text_internal[1173653] _end__write_text_internal[1173653]
              }
            }
          }
        }
      }
    }
    label _end__write_text_internal[1173653]
    (1173655 return ret[1172923])
  }
  function _write_binary_internal[1073859](const in arg _channel_internal[1073861]:qio_channel_ptr_t[231486], const in arg x[1073865]:int(64)[13]) : syserr[223605] "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1073879]:syserr[223605] "dead after last mention" "RVV" "initialized later" "temp"
    val call_tmp[1073891]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1073999]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1074021]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1074083]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[1074089]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          {
            val call_tmp[1074139]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            val call_tmp[1074145]:uint(16)[105] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            {
              val call_tmp[1074195]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              val call_tmp[1074201]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              {
                val call_tmp[1074251]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                val call_tmp[1074257]:uint(32)[110] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                {
                  val call_tmp[1074307]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  val call_tmp[1074313]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  {
                    const-val call_tmp[1074345]:syserr[223605] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1075664]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1075670 'move' coerce_tmp[1075664](1075666 'cast' int(32)[95] 0))
                    (1074347 'move' call_tmp[1074345](1074350 call qio_channel_write_int64[234071] coerce_tmp[1075664] 2 _channel_internal[1073861] x[1073865]))
                    (1075674 'move' ret[1073879] call_tmp[1074345])
                    gotoReturn _end__write_binary_internal[1075363] _end__write_binary_internal[1075363]
                  }
                }
              }
            }
          }
        }
      }
    }
    label _end__write_binary_internal[1075363]
    (1075365 return ret[1073879])
  }
  function _write_binary_internal[1075687](const in arg _channel_internal[1075689]:qio_channel_ptr_t[231486], const in arg x[1075693]:int(64)[13]) : syserr[223605] "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1075707]:syserr[223605] "dead after last mention" "RVV" "initialized later" "temp"
    val call_tmp[1075719]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1075827]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1075849]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1075911]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[1075917]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          {
            val call_tmp[1075967]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            val call_tmp[1075973]:uint(16)[105] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            {
              val call_tmp[1076023]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              val call_tmp[1076029]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              {
                val call_tmp[1076079]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                val call_tmp[1076085]:uint(32)[110] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                {
                  val call_tmp[1076135]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  val call_tmp[1076141]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  {
                    const-val call_tmp[1076173]:syserr[223605] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1077233]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1077239 'move' coerce_tmp[1077233](1077235 'cast' int(32)[95] 0))
                    (1076175 'move' call_tmp[1076173](1076178 call qio_channel_write_int64[234071] coerce_tmp[1077233] 3 _channel_internal[1075689] x[1075693]))
                    (1077243 'move' ret[1075707] call_tmp[1076173])
                    gotoReturn _end__write_binary_internal[1077191] _end__write_binary_internal[1077191]
                  }
                }
              }
            }
          }
        }
      }
    }
    label _end__write_binary_internal[1077191]
    (1077193 return ret[1075707])
  }
  function _write_binary_internal[1077255](const in arg _channel_internal[1077257]:qio_channel_ptr_t[231486], const in arg x[1077261]:int(64)[13]) : syserr[223605] "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1077275]:syserr[223605] "dead after last mention" "RVV" "initialized later" "temp"
    val call_tmp[1077287]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1077395]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1077417]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1077479]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[1077485]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          {
            val call_tmp[1077535]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            val call_tmp[1077541]:uint(16)[105] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            {
              val call_tmp[1077591]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              val call_tmp[1077597]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              {
                val call_tmp[1077647]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                val call_tmp[1077653]:uint(32)[110] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                {
                  val call_tmp[1077703]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  val call_tmp[1077709]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  {
                    const-val call_tmp[1077741]:syserr[223605] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1078799]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1078805 'move' coerce_tmp[1078799](1078801 'cast' int(32)[95] 0))
                    (1077743 'move' call_tmp[1077741](1077746 call qio_channel_write_int64[234071] coerce_tmp[1078799] 1 _channel_internal[1077257] x[1077261]))
                    (1078809 'move' ret[1077275] call_tmp[1077741])
                    gotoReturn _end__write_binary_internal[1078759] _end__write_binary_internal[1078759]
                  }
                }
              }
            }
          }
        }
      }
    }
    label _end__write_binary_internal[1078759]
    (1078761 return ret[1077275])
  }
  function _write_binary_internal[1168186](const in arg _channel_internal[1168188]:qio_channel_ptr_t[231486], const  ref arg x[1168192]:string[26]) : syserr[223605] "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1168206]:syserr[223605] "dead after last mention" "RVV" "initialized later" "temp"
    val call_tmp[1168218]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1168326]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1168772]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1169069]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          {
            val call_tmp[1169358]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            {
              const-val call_tmp[1169381]:string[26] "dead at end of block" "maybe param" "temp"
              const-val ret_tmp[1863082]:string[26] "temp"
              (1169389 call localize[32889] x[1168192] ret_tmp[1863082])
              (1863085 'move' call_tmp[1169381] ret_tmp[1863082])
              val local_x[1169390]:string[26] "dead at end of block" "insert auto destroy"
              (1169392 'move' local_x[1169390] call_tmp[1169381])
              ref call_tmp[1169396]:_ref(bool)[937260] "dead after last mention" "maybe param" "temp"
              (1169398 'move' call_tmp[1169396](1169401 call hasEscapes[758077] local_x[1169390]))
              const-val call_tmp[1169404]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val tmp[1169716]:bool[10] "dead after last mention" "const" "temp"
              (1169718 'move' tmp[1169716](1169720 'deref' call_tmp[1169396]))
              (1169406 'move' call_tmp[1169404] tmp[1169716])
              if call_tmp[1169404]
              {
                (1169741 call =[224154] ret[1168206] EILSEQ[224465])
                (1880645 call chpl__autoDestroy[1562275] local_x[1169390])
                gotoReturn _end__write_binary_internal[1169690] _end__write_binary_internal[1169690]
              }
              const-val call_tmp[1169429]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1169431 'move' call_tmp[1169429](1169434 call qio_channel_str_style[233108] _channel_internal[1168188]))
              const-val call_tmp[1169436]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (1169438 'move' call_tmp[1169436](1169444 call c_str[32935] local_x[1169390]))
              const-val call_tmp[1169445]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1169447 'move' call_tmp[1169445](1169450 call numBytes[32810] local_x[1169390]))
              const-val call_tmp[1169453]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1169455 'move' call_tmp[1169453] call_tmp[1169445])
              const-val call_tmp[1169461]:syserr[223605] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1169729]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1169735 'move' coerce_tmp[1169729](1169731 'cast' int(32)[95] 0))
              (1169463 'move' call_tmp[1169461](1169466 call qio_channel_write_string[234410] coerce_tmp[1169729] 2 call_tmp[1169429] _channel_internal[1168188] call_tmp[1169436] call_tmp[1169453]))
              (1169748 'move' ret[1168206] call_tmp[1169461])
              (1880648 call chpl__autoDestroy[1562275] local_x[1169390])
              gotoReturn _end__write_binary_internal[1169690] _end__write_binary_internal[1169690]
            }
          }
        }
      }
    }
    label _end__write_binary_internal[1169690]
    (1169692 return ret[1168206])
  }
  function _write_binary_internal[1169761](const in arg _channel_internal[1169763]:qio_channel_ptr_t[231486], const  ref arg x[1169767]:string[26]) : syserr[223605] "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1169781]:syserr[223605] "dead after last mention" "RVV" "initialized later" "temp"
    val call_tmp[1169793]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1169901]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1170347]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1170644]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          {
            val call_tmp[1170933]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            {
              const-val call_tmp[1170956]:string[26] "dead at end of block" "maybe param" "temp"
              const-val ret_tmp[1863088]:string[26] "temp"
              (1170964 call localize[32889] x[1169767] ret_tmp[1863088])
              (1863091 'move' call_tmp[1170956] ret_tmp[1863088])
              val local_x[1170965]:string[26] "dead at end of block" "insert auto destroy"
              (1170967 'move' local_x[1170965] call_tmp[1170956])
              ref call_tmp[1170971]:_ref(bool)[937260] "dead after last mention" "maybe param" "temp"
              (1170973 'move' call_tmp[1170971](1170976 call hasEscapes[758077] local_x[1170965]))
              const-val call_tmp[1170979]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val tmp[1171291]:bool[10] "dead after last mention" "const" "temp"
              (1171293 'move' tmp[1171291](1171295 'deref' call_tmp[1170971]))
              (1170981 'move' call_tmp[1170979] tmp[1171291])
              if call_tmp[1170979]
              {
                (1171314 call =[224154] ret[1169781] EILSEQ[224465])
                (1880651 call chpl__autoDestroy[1562275] local_x[1170965])
                gotoReturn _end__write_binary_internal[1171265] _end__write_binary_internal[1171265]
              }
              const-val call_tmp[1171004]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1171006 'move' call_tmp[1171004](1171009 call qio_channel_str_style[233108] _channel_internal[1169763]))
              const-val call_tmp[1171011]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (1171013 'move' call_tmp[1171011](1171019 call c_str[32935] local_x[1170965]))
              const-val call_tmp[1171020]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1171022 'move' call_tmp[1171020](1171025 call numBytes[32810] local_x[1170965]))
              const-val call_tmp[1171028]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1171030 'move' call_tmp[1171028] call_tmp[1171020])
              const-val call_tmp[1171036]:syserr[223605] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1171302]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1171308 'move' coerce_tmp[1171302](1171304 'cast' int(32)[95] 0))
              (1171038 'move' call_tmp[1171036](1171041 call qio_channel_write_string[234410] coerce_tmp[1171302] 3 call_tmp[1171004] _channel_internal[1169763] call_tmp[1171011] call_tmp[1171028]))
              (1171321 'move' ret[1169781] call_tmp[1171036])
              (1880654 call chpl__autoDestroy[1562275] local_x[1170965])
              gotoReturn _end__write_binary_internal[1171265] _end__write_binary_internal[1171265]
            }
          }
        }
      }
    }
    label _end__write_binary_internal[1171265]
    (1171267 return ret[1169781])
  }
  function _write_binary_internal[1171333](const in arg _channel_internal[1171335]:qio_channel_ptr_t[231486], const  ref arg x[1171339]:string[26]) : syserr[223605] "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1171353]:syserr[223605] "dead after last mention" "RVV" "initialized later" "temp"
    val call_tmp[1171365]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1171473]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1171919]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1172216]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          {
            val call_tmp[1172505]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            {
              const-val call_tmp[1172528]:string[26] "dead at end of block" "maybe param" "temp"
              const-val ret_tmp[1863094]:string[26] "temp"
              (1172536 call localize[32889] x[1171339] ret_tmp[1863094])
              (1863097 'move' call_tmp[1172528] ret_tmp[1863094])
              val local_x[1172537]:string[26] "dead at end of block" "insert auto destroy"
              (1172539 'move' local_x[1172537] call_tmp[1172528])
              ref call_tmp[1172543]:_ref(bool)[937260] "dead after last mention" "maybe param" "temp"
              (1172545 'move' call_tmp[1172543](1172548 call hasEscapes[758077] local_x[1172537]))
              const-val call_tmp[1172551]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val tmp[1172863]:bool[10] "dead after last mention" "const" "temp"
              (1172865 'move' tmp[1172863](1172867 'deref' call_tmp[1172543]))
              (1172553 'move' call_tmp[1172551] tmp[1172863])
              if call_tmp[1172551]
              {
                (1172886 call =[224154] ret[1171353] EILSEQ[224465])
                (1880657 call chpl__autoDestroy[1562275] local_x[1172537])
                gotoReturn _end__write_binary_internal[1172837] _end__write_binary_internal[1172837]
              }
              const-val call_tmp[1172576]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1172578 'move' call_tmp[1172576](1172581 call qio_channel_str_style[233108] _channel_internal[1171335]))
              const-val call_tmp[1172583]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (1172585 'move' call_tmp[1172583](1172591 call c_str[32935] local_x[1172537]))
              const-val call_tmp[1172592]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1172594 'move' call_tmp[1172592](1172597 call numBytes[32810] local_x[1172537]))
              const-val call_tmp[1172600]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1172602 'move' call_tmp[1172600] call_tmp[1172592])
              const-val call_tmp[1172608]:syserr[223605] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1172874]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1172880 'move' coerce_tmp[1172874](1172876 'cast' int(32)[95] 0))
              (1172610 'move' call_tmp[1172608](1172613 call qio_channel_write_string[234410] coerce_tmp[1172874] 1 call_tmp[1172576] _channel_internal[1171335] call_tmp[1172583] call_tmp[1172600]))
              (1172893 'move' ret[1171353] call_tmp[1172608])
              (1880660 call chpl__autoDestroy[1562275] local_x[1172537])
              gotoReturn _end__write_binary_internal[1172837] _end__write_binary_internal[1172837]
            }
          }
        }
      }
    }
    label _end__write_binary_internal[1172837]
    (1172839 return ret[1171353])
  }
  function _ref(channel(true,dynamic,false))[1061017]._constructIoErrorMsg[1079673](const  ref arg this[1079679]:_ref(channel(true,dynamic,false))[1061017], const in arg x[1079683]:int(64)[13], ref arg _retArg[1867044]:_ref(string)[938000]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1079687]:string[26] "dead after last mention" "RVV" "temp"
    val result[1079699]:string[26] "dead at end of block" "insert auto destroy"
    (1079701 'move' result[1079699](1867048 call chpl__initCopy[981409] "while "))
    (1079738 call +=[38800] result[1079699] "writing ")
    val call_tmp[1079743]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1079758 call +=[38800] result[1079699] "int(64)")
    {
      val tmp[1079764]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
      }
    }
    (1079892 'move' ret[1079687] result[1079699])
    gotoReturn _end__constructIoErrorMsg[1079868] _end__constructIoErrorMsg[1079868]
    label _end__constructIoErrorMsg[1079868]
    (1867046 '=' _retArg[1867044] ret[1079687])
    (1867050 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1061017]._constructIoErrorMsg[1079966](const  ref arg this[1079972]:_ref(channel(true,dynamic,false))[1061017], const  ref arg x[1079976]:byteIndex[28173], ref arg _retArg[1867058]:_ref(string)[938000]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1079980]:string[26] "dead after last mention" "RVV" "temp"
    val result[1079992]:string[26] "dead at end of block" "insert auto destroy"
    (1079994 'move' result[1079992](1867062 call chpl__initCopy[981409] "while "))
    (1080031 call +=[38800] result[1079992] "writing ")
    val call_tmp[1080036]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1080051 call +=[38800] result[1079992] "byteIndex")
    {
      val tmp[1080057]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
      }
    }
    (1080199 'move' ret[1079980] result[1079992])
    gotoReturn _end__constructIoErrorMsg[1080161] _end__constructIoErrorMsg[1080161]
    label _end__constructIoErrorMsg[1080161]
    (1867060 '=' _retArg[1867058] ret[1079980])
    (1867064 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1061017]._constructIoErrorMsg[1173740](const  ref arg this[1173746]:_ref(channel(true,dynamic,false))[1061017], const  ref arg x[1173750]:string[26], ref arg _retArg[1868296]:_ref(string)[938000]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1173754]:string[26] "dead after last mention" "RVV" "temp"
    val result[1173766]:string[26] "dead at end of block" "insert auto destroy"
    (1173768 'move' result[1173766](1868300 call chpl__initCopy[981409] "while "))
    (1173805 call +=[38800] result[1173766] "writing ")
    val call_tmp[1173810]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1173825 call +=[38800] result[1173766] "string")
    {
      val tmp[1173831]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
      }
    }
    (1173959 'move' ret[1173754] result[1173766])
    gotoReturn _end__constructIoErrorMsg[1173935] _end__constructIoErrorMsg[1173935]
    label _end__constructIoErrorMsg[1173935]
    (1868298 '=' _retArg[1868296] ret[1173754])
    (1868302 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1061017]._constructIoErrorMsg[1175458](const  ref arg this[1175464]:_ref(channel(true,dynamic,false))[1061017], const  ref arg x[1175468]:codepointIndex[28277], ref arg _retArg[1868310]:_ref(string)[938000]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1175472]:string[26] "dead after last mention" "RVV" "temp"
    val result[1175484]:string[26] "dead at end of block" "insert auto destroy"
    (1175486 'move' result[1175484](1868314 call chpl__initCopy[981409] "while "))
    (1175523 call +=[38800] result[1175484] "writing ")
    val call_tmp[1175528]:codepointIndex[28277] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1175543 call +=[38800] result[1175484] "codepointIndex")
    {
      val tmp[1175549]:codepointIndex[28277] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
      }
    }
    (1175693 'move' ret[1175472] result[1175484])
    gotoReturn _end__constructIoErrorMsg[1175653] _end__constructIoErrorMsg[1175653]
    label _end__constructIoErrorMsg[1175653]
    (1868312 '=' _retArg[1868310] ret[1175472])
    (1868316 return _void[55])
  }
  function _ref(channel(true,dynamic,true))[1021895]._constructIoErrorMsg[1544955](const  ref arg this[1544961]:_ref(channel(true,dynamic,true))[1021895], const  ref arg x[1544965]:string[26], ref arg _retArg[1874385]:_ref(string)[938000]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1544969]:string[26] "dead after last mention" "RVV" "temp"
    val result[1544981]:string[26] "dead at end of block" "insert auto destroy"
    (1544983 'move' result[1544981](1874389 call chpl__initCopy[981409] "while "))
    (1545020 call +=[38800] result[1544981] "writing ")
    val call_tmp[1545025]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1545040 call +=[38800] result[1544981] "string")
    {
      val tmp[1545046]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
      }
    }
    (1545174 'move' ret[1544969] result[1544981])
    gotoReturn _end__constructIoErrorMsg[1545150] _end__constructIoErrorMsg[1545150]
    label _end__constructIoErrorMsg[1545150]
    (1874387 '=' _retArg[1874385] ret[1544969])
    (1874391 return _void[55])
  }
  function _ref(channel(true,dynamic,true))[1021895]._constructIoErrorMsg[1548117](const  ref arg this[1548123]:_ref(channel(true,dynamic,true))[1021895], const  ref arg x[1548127]:ioNewline[238722], ref arg _retArg[1874399]:_ref(string)[938000]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1548131]:string[26] "dead after last mention" "RVV" "temp"
    val result[1548143]:string[26] "dead at end of block" "insert auto destroy"
    (1548145 'move' result[1548143](1874403 call chpl__initCopy[981409] "while "))
    (1548182 call +=[38800] result[1548143] "writing ")
    val call_tmp[1548187]:ioNewline[238722] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1548202 call +=[38800] result[1548143] "ioNewline")
    {
      val tmp[1548208]:ioNewline[238722] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        (1548240 call +=[38800] result[1548143] " newline")
      }
    }
    (1548397 'move' ret[1548131] result[1548143])
    gotoReturn _end__constructIoErrorMsg[1548312] _end__constructIoErrorMsg[1548312]
    label _end__constructIoErrorMsg[1548312]
    (1874401 '=' _retArg[1874399] ret[1548131])
    (1874405 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1061017]._writeOne[1067073](const  ref arg this[1067079]:_ref(channel(true,dynamic,false))[1061017], const  ref arg x[1067083]:byteIndex[28173], const  ref arg loc[1067085]:locale[28], ref arg error_out[1844547]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[1067095]:_ref(qio_channel_ptr_t)[936945] "dead at end of block" "maybe param" "temp"
    (1067097 'move' call_tmp[1067095](1067100 call _channel_internal[1061850] this[1067079]))
    const-val call_tmp[1067103]:syserr[223605] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1068422]:qio_channel_ptr_t[231486] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1068426 'move' coerce_tmp[1068422](1068424 'deref' call_tmp[1067095]))
    val error[1844552]:Error[167984] "error variable" "temp"
    (1844554 'move' error[1844552] nil[44])
    (1067105 'move' call_tmp[1067103](1067108 call _write_one_internal[1067996] coerce_tmp[1068422] x[1067083] loc[1067085] error[1844552]))
    val errorExists[2170836]:bool[10] "temp"
    (2170841 'move' errorExists[2170836](2170838 '!=' error[1844552] nil[44]))
    if errorExists[2170836]
    {
      (1844558 '=' error_out[1844547] error[1844552])
      gotoErrorHandlingReturn _end_writeOne[1844549] _end_writeOne[1844549]
    }
    const-val err[1067113]:syserr[223605] "dead at end of block" "insert auto destroy"
    (1067115 'move' err[1067113](1079961 call chpl__initCopy[964546] call_tmp[1067103]))
    const-val call_tmp[1067119]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (1067121 'move' call_tmp[1067119](1067124 call ENOERR[223675]))
    const-val call_tmp[1067125]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1067127 'move' call_tmp[1067125](1067130 call !=[223875] err[1067113] call_tmp[1067119]))
    const-val call_tmp[1067133]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1067135 'move' call_tmp[1067133] call_tmp[1067125])
    if call_tmp[1067133]
    {
      const-val call_tmp[1067142]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1867052]:string[26] "temp"
      (1067150 call _constructIoErrorMsg[1079966] this[1067079] x[1067083] ret_tmp[1867052])
      (1867055 'move' call_tmp[1067142] ret_tmp[1867052])
      val msg[1067153]:string[26] "dead at end of block" "insert auto destroy"
      (1067155 'move' msg[1067153] call_tmp[1067142])
      const-val call_tmp[1067159]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1067161 'move' call_tmp[1067159](1067164 call ==[223720] err[1067113] EILSEQ[224465]))
      const-val call_tmp[1067167]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1067169 'move' call_tmp[1067167] call_tmp[1067159])
      if call_tmp[1067167]
      {
        const-val call_tmp[1067184]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1863556]:string[26] "temp"
        (1067189 call +[38345] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1067153] ret_tmp[1863556])
        (1863559 'move' call_tmp[1067184] ret_tmp[1863556])
        (1067193 call =[38272] msg[1067153] call_tmp[1067184])
        (1878867 call chpl__autoDestroy[1562275] call_tmp[1067184])
      }
      {
        val error[1844566]:Error[167984] "error variable" "temp"
        (1844575 'move' error[1844566] nil[44])
        (1067205 call _ch_ioerror[1062926] this[1067079] err[1067113] msg[1067153] error[1844566])
        val errorExists[2170844]:bool[10] "temp"
        (2170849 'move' errorExists[2170844](2170846 '!=' error[1844566] nil[44]))
        if errorExists[2170844]
        {
          gotoErrorHandling handler[1844567] handler[1844567]
        }
        label handler[1844567]
        const-val shouldHandleError[1844586]:bool[10] "temp"
        val errorExists[2170852]:bool[10] "temp"
        (2170857 'move' errorExists[2170852](2170854 '!=' error[1844566] nil[44]))
        (1844590 'move' shouldHandleError[1844586] errorExists[2170852])
        if shouldHandleError[1844586]
        {
          (1844582 '=' error_out[1844547] error[1844566])
          (1878870 call chpl__autoDestroy[1562275] msg[1067153])
          gotoErrorHandlingReturn _end_writeOne[1844549] _end_writeOne[1844549]
        }
      }
      (1878874 call chpl__autoDestroy[1562275] msg[1067153])
    }
    label _end_writeOne[1844549]
    (1067213 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1061017]._writeOne[1068998](const  ref arg this[1069004]:_ref(channel(true,dynamic,false))[1061017], const in arg x[1069008]:int(64)[13], const  ref arg loc[1069010]:locale[28], ref arg error_out[1844784]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[1069020]:_ref(qio_channel_ptr_t)[936945] "dead at end of block" "maybe param" "temp"
    (1069022 'move' call_tmp[1069020](1069025 call _channel_internal[1061850] this[1069004]))
    const-val call_tmp[1069028]:syserr[223605] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1070266]:qio_channel_ptr_t[231486] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1070270 'move' coerce_tmp[1070266](1070268 'deref' call_tmp[1069020]))
    val error[1844789]:Error[167984] "error variable" "temp"
    (1844791 'move' error[1844789] nil[44])
    (1069030 'move' call_tmp[1069028](1069033 call _write_one_internal[1069142] coerce_tmp[1070266] x[1069008] loc[1069010] error[1844789]))
    val errorExists[2170956]:bool[10] "temp"
    (2170961 'move' errorExists[2170956](2170958 '!=' error[1844789] nil[44]))
    if errorExists[2170956]
    {
      (1844795 '=' error_out[1844784] error[1844789])
      gotoErrorHandlingReturn _end_writeOne[1844786] _end_writeOne[1844786]
    }
    const-val err[1069038]:syserr[223605] "dead at end of block" "insert auto destroy"
    (1069040 'move' err[1069038](1079666 call chpl__initCopy[964546] call_tmp[1069028]))
    const-val call_tmp[1069044]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (1069046 'move' call_tmp[1069044](1069049 call ENOERR[223675]))
    const-val call_tmp[1069050]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1069052 'move' call_tmp[1069050](1069055 call !=[223875] err[1069038] call_tmp[1069044]))
    const-val call_tmp[1069058]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1069060 'move' call_tmp[1069058] call_tmp[1069050])
    if call_tmp[1069058]
    {
      const-val call_tmp[1069067]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1867038]:string[26] "temp"
      (1069075 call _constructIoErrorMsg[1079673] this[1069004] x[1069008] ret_tmp[1867038])
      (1867041 'move' call_tmp[1069067] ret_tmp[1867038])
      val msg[1069078]:string[26] "dead at end of block" "insert auto destroy"
      (1069080 'move' msg[1069078] call_tmp[1069067])
      const-val call_tmp[1069084]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1069086 'move' call_tmp[1069084](1069089 call ==[223720] err[1069038] EILSEQ[224465]))
      const-val call_tmp[1069092]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1069094 'move' call_tmp[1069092] call_tmp[1069084])
      if call_tmp[1069092]
      {
        const-val call_tmp[1069109]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1863562]:string[26] "temp"
        (1069114 call +[38345] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1069078] ret_tmp[1863562])
        (1863565 'move' call_tmp[1069109] ret_tmp[1863562])
        (1069118 call =[38272] msg[1069078] call_tmp[1069109])
        (1878933 call chpl__autoDestroy[1562275] call_tmp[1069109])
      }
      {
        val error[1844803]:Error[167984] "error variable" "temp"
        (1844812 'move' error[1844803] nil[44])
        (1069130 call _ch_ioerror[1062926] this[1069004] err[1069038] msg[1069078] error[1844803])
        val errorExists[2170964]:bool[10] "temp"
        (2170969 'move' errorExists[2170964](2170966 '!=' error[1844803] nil[44]))
        if errorExists[2170964]
        {
          gotoErrorHandling handler[1844804] handler[1844804]
        }
        label handler[1844804]
        const-val shouldHandleError[1844823]:bool[10] "temp"
        val errorExists[2170972]:bool[10] "temp"
        (2170977 'move' errorExists[2170972](2170974 '!=' error[1844803] nil[44]))
        (1844827 'move' shouldHandleError[1844823] errorExists[2170972])
        if shouldHandleError[1844823]
        {
          (1844819 '=' error_out[1844784] error[1844803])
          (1878936 call chpl__autoDestroy[1562275] msg[1069078])
          gotoErrorHandlingReturn _end_writeOne[1844786] _end_writeOne[1844786]
        }
      }
      (1878940 call chpl__autoDestroy[1562275] msg[1069078])
    }
    label _end_writeOne[1844786]
    (1069138 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1061017]._writeOne[1165221](const  ref arg this[1165227]:_ref(channel(true,dynamic,false))[1061017], const  ref arg x[1165231]:string[26], const  ref arg loc[1165233]:locale[28], ref arg error_out[1845582]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[1165243]:_ref(qio_channel_ptr_t)[936945] "dead at end of block" "maybe param" "temp"
    (1165245 'move' call_tmp[1165243](1165248 call _channel_internal[1061850] this[1165227]))
    const-val call_tmp[1165251]:syserr[223605] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1168091]:qio_channel_ptr_t[231486] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1168095 'move' coerce_tmp[1168091](1168093 'deref' call_tmp[1165243]))
    val error[1845587]:Error[167984] "error variable" "temp"
    (1845589 'move' error[1845587] nil[44])
    (1165253 'move' call_tmp[1165251](1165256 call _write_one_internal[1165365] coerce_tmp[1168091] x[1165231] loc[1165233] error[1845587]))
    val errorExists[2171348]:bool[10] "temp"
    (2171353 'move' errorExists[2171348](2171350 '!=' error[1845587] nil[44]))
    if errorExists[2171348]
    {
      (1845593 '=' error_out[1845582] error[1845587])
      gotoErrorHandlingReturn _end_writeOne[1845584] _end_writeOne[1845584]
    }
    const-val err[1165261]:syserr[223605] "dead at end of block" "insert auto destroy"
    (1165263 'move' err[1165261](1173735 call chpl__initCopy[964546] call_tmp[1165251]))
    const-val call_tmp[1165267]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (1165269 'move' call_tmp[1165267](1165272 call ENOERR[223675]))
    const-val call_tmp[1165273]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1165275 'move' call_tmp[1165273](1165278 call !=[223875] err[1165261] call_tmp[1165267]))
    const-val call_tmp[1165281]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1165283 'move' call_tmp[1165281] call_tmp[1165273])
    if call_tmp[1165281]
    {
      const-val call_tmp[1165290]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1868290]:string[26] "temp"
      (1165298 call _constructIoErrorMsg[1173740] this[1165227] x[1165231] ret_tmp[1868290])
      (1868293 'move' call_tmp[1165290] ret_tmp[1868290])
      val msg[1165301]:string[26] "dead at end of block" "insert auto destroy"
      (1165303 'move' msg[1165301] call_tmp[1165290])
      const-val call_tmp[1165307]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1165309 'move' call_tmp[1165307](1165312 call ==[223720] err[1165261] EILSEQ[224465]))
      const-val call_tmp[1165315]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1165317 'move' call_tmp[1165315] call_tmp[1165307])
      if call_tmp[1165315]
      {
        const-val call_tmp[1165332]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1863646]:string[26] "temp"
        (1165337 call +[38345] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1165301] ret_tmp[1863646])
        (1863649 'move' call_tmp[1165332] ret_tmp[1863646])
        (1165341 call =[38272] msg[1165301] call_tmp[1165332])
        (1880635 call chpl__autoDestroy[1562275] call_tmp[1165332])
      }
      {
        val error[1845601]:Error[167984] "error variable" "temp"
        (1845610 'move' error[1845601] nil[44])
        (1165353 call _ch_ioerror[1062926] this[1165227] err[1165261] msg[1165301] error[1845601])
        val errorExists[2171356]:bool[10] "temp"
        (2171361 'move' errorExists[2171356](2171358 '!=' error[1845601] nil[44]))
        if errorExists[2171356]
        {
          gotoErrorHandling handler[1845602] handler[1845602]
        }
        label handler[1845602]
        const-val shouldHandleError[1845621]:bool[10] "temp"
        val errorExists[2171364]:bool[10] "temp"
        (2171369 'move' errorExists[2171364](2171366 '!=' error[1845601] nil[44]))
        (1845625 'move' shouldHandleError[1845621] errorExists[2171364])
        if shouldHandleError[1845621]
        {
          (1845617 '=' error_out[1845582] error[1845601])
          (1880638 call chpl__autoDestroy[1562275] msg[1165301])
          gotoErrorHandlingReturn _end_writeOne[1845584] _end_writeOne[1845584]
        }
      }
      (1880642 call chpl__autoDestroy[1562275] msg[1165301])
    }
    label _end_writeOne[1845584]
    (1165361 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1061017]._writeOne[1173974](const  ref arg this[1173980]:_ref(channel(true,dynamic,false))[1061017], const  ref arg x[1173984]:codepointIndex[28277], const  ref arg loc[1173986]:locale[28], ref arg error_out[1845646]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[1173996]:_ref(qio_channel_ptr_t)[936945] "dead at end of block" "maybe param" "temp"
    (1173998 'move' call_tmp[1173996](1174001 call _channel_internal[1061850] this[1173980]))
    const-val call_tmp[1174004]:syserr[223605] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1175271]:qio_channel_ptr_t[231486] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1175275 'move' coerce_tmp[1175271](1175273 'deref' call_tmp[1173996]))
    val error[1845651]:Error[167984] "error variable" "temp"
    (1845653 'move' error[1845651] nil[44])
    (1174006 'move' call_tmp[1174004](1174009 call _write_one_internal[1174845] coerce_tmp[1175271] x[1173984] loc[1173986] error[1845651]))
    val errorExists[2171380]:bool[10] "temp"
    (2171385 'move' errorExists[2171380](2171382 '!=' error[1845651] nil[44]))
    if errorExists[2171380]
    {
      (1845657 '=' error_out[1845646] error[1845651])
      gotoErrorHandlingReturn _end_writeOne[1845648] _end_writeOne[1845648]
    }
    const-val err[1174014]:syserr[223605] "dead at end of block" "insert auto destroy"
    (1174016 'move' err[1174014](1175453 call chpl__initCopy[964546] call_tmp[1174004]))
    const-val call_tmp[1174020]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (1174022 'move' call_tmp[1174020](1174025 call ENOERR[223675]))
    const-val call_tmp[1174026]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1174028 'move' call_tmp[1174026](1174031 call !=[223875] err[1174014] call_tmp[1174020]))
    const-val call_tmp[1174034]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1174036 'move' call_tmp[1174034] call_tmp[1174026])
    if call_tmp[1174034]
    {
      const-val call_tmp[1174043]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1868304]:string[26] "temp"
      (1174051 call _constructIoErrorMsg[1175458] this[1173980] x[1173984] ret_tmp[1868304])
      (1868307 'move' call_tmp[1174043] ret_tmp[1868304])
      val msg[1174054]:string[26] "dead at end of block" "insert auto destroy"
      (1174056 'move' msg[1174054] call_tmp[1174043])
      const-val call_tmp[1174060]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1174062 'move' call_tmp[1174060](1174065 call ==[223720] err[1174014] EILSEQ[224465]))
      const-val call_tmp[1174068]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1174070 'move' call_tmp[1174068] call_tmp[1174060])
      if call_tmp[1174068]
      {
        const-val call_tmp[1174085]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1863652]:string[26] "temp"
        (1174090 call +[38345] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1174054] ret_tmp[1863652])
        (1863655 'move' call_tmp[1174085] ret_tmp[1863652])
        (1174094 call =[38272] msg[1174054] call_tmp[1174085])
        (1880670 call chpl__autoDestroy[1562275] call_tmp[1174085])
      }
      {
        val error[1845665]:Error[167984] "error variable" "temp"
        (1845674 'move' error[1845665] nil[44])
        (1174106 call _ch_ioerror[1062926] this[1173980] err[1174014] msg[1174054] error[1845665])
        val errorExists[2171388]:bool[10] "temp"
        (2171393 'move' errorExists[2171388](2171390 '!=' error[1845665] nil[44]))
        if errorExists[2171388]
        {
          gotoErrorHandling handler[1845666] handler[1845666]
        }
        label handler[1845666]
        const-val shouldHandleError[1845685]:bool[10] "temp"
        val errorExists[2171396]:bool[10] "temp"
        (2171401 'move' errorExists[2171396](2171398 '!=' error[1845665] nil[44]))
        (1845689 'move' shouldHandleError[1845685] errorExists[2171396])
        if shouldHandleError[1845685]
        {
          (1845681 '=' error_out[1845646] error[1845665])
          (1880673 call chpl__autoDestroy[1562275] msg[1174054])
          gotoErrorHandlingReturn _end_writeOne[1845648] _end_writeOne[1845648]
        }
      }
      (1880677 call chpl__autoDestroy[1562275] msg[1174054])
    }
    label _end_writeOne[1845648]
    (1174114 return _void[55])
  }
  function _ref(channel(true,dynamic,true))[1021895]._writeOne[1544799](const  ref arg this[1544805]:_ref(channel(true,dynamic,true))[1021895], const  ref arg x[1544809]:string[26], const  ref arg loc[1544811]:locale[28], ref arg error_out[1847105]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[1544821]:_ref(qio_channel_ptr_t)[936945] "dead at end of block" "maybe param" "temp"
    (1544823 'move' call_tmp[1544821](1544826 call _channel_internal[1023137] this[1544805]))
    const-val call_tmp[1544829]:syserr[223605] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1544943]:qio_channel_ptr_t[231486] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1544947 'move' coerce_tmp[1544943](1544945 'deref' call_tmp[1544821]))
    val error[1847110]:Error[167984] "error variable" "temp"
    (1847112 'move' error[1847110] nil[44])
    (1544831 'move' call_tmp[1544829](1544834 call _write_one_internal[1165365] coerce_tmp[1544943] x[1544809] loc[1544811] error[1847110]))
    val errorExists[2172116]:bool[10] "temp"
    (2172121 'move' errorExists[2172116](2172118 '!=' error[1847110] nil[44]))
    if errorExists[2172116]
    {
      (1847116 '=' error_out[1847105] error[1847110])
      gotoErrorHandlingReturn _end_writeOne[1847107] _end_writeOne[1847107]
    }
    const-val err[1544839]:syserr[223605] "dead at end of block" "insert auto destroy"
    (1544841 'move' err[1544839](1544950 call chpl__initCopy[964546] call_tmp[1544829]))
    const-val call_tmp[1544845]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (1544847 'move' call_tmp[1544845](1544850 call ENOERR[223675]))
    const-val call_tmp[1544851]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1544853 'move' call_tmp[1544851](1544856 call !=[223875] err[1544839] call_tmp[1544845]))
    const-val call_tmp[1544859]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1544861 'move' call_tmp[1544859] call_tmp[1544851])
    if call_tmp[1544859]
    {
      const-val call_tmp[1544868]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1874379]:string[26] "temp"
      (1544876 call _constructIoErrorMsg[1544955] this[1544805] x[1544809] ret_tmp[1874379])
      (1874382 'move' call_tmp[1544868] ret_tmp[1874379])
      val msg[1544879]:string[26] "dead at end of block" "insert auto destroy"
      (1544881 'move' msg[1544879] call_tmp[1544868])
      const-val call_tmp[1544885]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1544887 'move' call_tmp[1544885](1544890 call ==[223720] err[1544839] EILSEQ[224465]))
      const-val call_tmp[1544893]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1544895 'move' call_tmp[1544893] call_tmp[1544885])
      if call_tmp[1544893]
      {
        const-val call_tmp[1544910]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1863868]:string[26] "temp"
        (1544915 call +[38345] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1544879] ret_tmp[1863868])
        (1863871 'move' call_tmp[1544910] ret_tmp[1863868])
        (1544919 call =[38272] msg[1544879] call_tmp[1544910])
        (1884610 call chpl__autoDestroy[1562275] call_tmp[1544910])
      }
      {
        val error[1847124]:Error[167984] "error variable" "temp"
        (1847133 'move' error[1847124] nil[44])
        (1544931 call _ch_ioerror[1544272] this[1544805] err[1544839] msg[1544879] error[1847124])
        val errorExists[2172124]:bool[10] "temp"
        (2172129 'move' errorExists[2172124](2172126 '!=' error[1847124] nil[44]))
        if errorExists[2172124]
        {
          gotoErrorHandling handler[1847125] handler[1847125]
        }
        label handler[1847125]
        const-val shouldHandleError[1847144]:bool[10] "temp"
        val errorExists[2172132]:bool[10] "temp"
        (2172137 'move' errorExists[2172132](2172134 '!=' error[1847124] nil[44]))
        (1847148 'move' shouldHandleError[1847144] errorExists[2172132])
        if shouldHandleError[1847144]
        {
          (1847140 '=' error_out[1847105] error[1847124])
          (1884613 call chpl__autoDestroy[1562275] msg[1544879])
          gotoErrorHandlingReturn _end_writeOne[1847107] _end_writeOne[1847107]
        }
      }
      (1884617 call chpl__autoDestroy[1562275] msg[1544879])
    }
    label _end_writeOne[1847107]
    (1544939 return _void[55])
  }
  function _ref(channel(true,dynamic,true))[1021895]._writeOne[1545189](const  ref arg this[1545195]:_ref(channel(true,dynamic,true))[1021895], const  ref arg x[1545199]:ioNewline[238722], const  ref arg loc[1545201]:locale[28], ref arg error_out[1847152]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[1545211]:_ref(qio_channel_ptr_t)[936945] "dead at end of block" "maybe param" "temp"
    (1545213 'move' call_tmp[1545211](1545216 call _channel_internal[1023137] this[1545195]))
    const-val call_tmp[1545219]:syserr[223605] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1548061]:qio_channel_ptr_t[231486] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1548065 'move' coerce_tmp[1548061](1548063 'deref' call_tmp[1545211]))
    val error[1847157]:Error[167984] "error variable" "temp"
    (1847159 'move' error[1847157] nil[44])
    (1545221 'move' call_tmp[1545219](1545224 call _write_one_internal[1545333] coerce_tmp[1548061] x[1545199] loc[1545201] error[1847157]))
    val errorExists[2172140]:bool[10] "temp"
    (2172145 'move' errorExists[2172140](2172142 '!=' error[1847157] nil[44]))
    if errorExists[2172140]
    {
      (1847163 '=' error_out[1847152] error[1847157])
      gotoErrorHandlingReturn _end_writeOne[1847154] _end_writeOne[1847154]
    }
    const-val err[1545229]:syserr[223605] "dead at end of block" "insert auto destroy"
    (1545231 'move' err[1545229](1548112 call chpl__initCopy[964546] call_tmp[1545219]))
    const-val call_tmp[1545235]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (1545237 'move' call_tmp[1545235](1545240 call ENOERR[223675]))
    const-val call_tmp[1545241]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1545243 'move' call_tmp[1545241](1545246 call !=[223875] err[1545229] call_tmp[1545235]))
    const-val call_tmp[1545249]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1545251 'move' call_tmp[1545249] call_tmp[1545241])
    if call_tmp[1545249]
    {
      const-val call_tmp[1545258]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1874393]:string[26] "temp"
      (1545266 call _constructIoErrorMsg[1548117] this[1545195] x[1545199] ret_tmp[1874393])
      (1874396 'move' call_tmp[1545258] ret_tmp[1874393])
      val msg[1545269]:string[26] "dead at end of block" "insert auto destroy"
      (1545271 'move' msg[1545269] call_tmp[1545258])
      const-val call_tmp[1545275]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1545277 'move' call_tmp[1545275](1545280 call ==[223720] err[1545229] EILSEQ[224465]))
      const-val call_tmp[1545283]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1545285 'move' call_tmp[1545283] call_tmp[1545275])
      if call_tmp[1545283]
      {
        const-val call_tmp[1545300]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1863874]:string[26] "temp"
        (1545305 call +[38345] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1545269] ret_tmp[1863874])
        (1863877 'move' call_tmp[1545300] ret_tmp[1863874])
        (1545309 call =[38272] msg[1545269] call_tmp[1545300])
        (1884621 call chpl__autoDestroy[1562275] call_tmp[1545300])
      }
      {
        val error[1847171]:Error[167984] "error variable" "temp"
        (1847180 'move' error[1847171] nil[44])
        (1545321 call _ch_ioerror[1544272] this[1545195] err[1545229] msg[1545269] error[1847171])
        val errorExists[2172148]:bool[10] "temp"
        (2172153 'move' errorExists[2172148](2172150 '!=' error[1847171] nil[44]))
        if errorExists[2172148]
        {
          gotoErrorHandling handler[1847172] handler[1847172]
        }
        label handler[1847172]
        const-val shouldHandleError[1847191]:bool[10] "temp"
        val errorExists[2172156]:bool[10] "temp"
        (2172161 'move' errorExists[2172156](2172158 '!=' error[1847171] nil[44]))
        (1847195 'move' shouldHandleError[1847191] errorExists[2172156])
        if shouldHandleError[1847191]
        {
          (1847187 '=' error_out[1847152] error[1847171])
          (1884624 call chpl__autoDestroy[1562275] msg[1545269])
          gotoErrorHandlingReturn _end_writeOne[1847154] _end_writeOne[1847154]
        }
      }
      (1884628 call chpl__autoDestroy[1562275] msg[1545269])
    }
    label _end_writeOne[1847154]
    (1545329 return _void[55])
  }
  function _write_one_internal[1069142](const in arg _channel_internal[1069144]:qio_channel_ptr_t[231486], const in arg x[1069148]:int(64)[13], const  ref arg loc[1069150]:locale[28], ref arg error_out[1844831]:Error[167984]) : syserr[223605] throws "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1069164]:syserr[223605] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1069808]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1069810 'move' call_tmp[1069808](1069813 call ENOERR[223675]))
    val e[1069814]:syserr[223605] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1070274]:syserr[223605] "dead at end of block" "initialized later" "temp"
    (1079657 call =[224154] init_coerce_tmp[1070274] call_tmp[1069808])
    (1069816 'move' e[1069814] init_coerce_tmp[1070274])
    val call_tmp[1069821]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1069860]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1069908]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1069999]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          {
            {
              const-val call_tmp[1070073]:uint(8)[100] "dead at end of block" "maybe param" "temp"
              (1070075 'move' call_tmp[1070073](1070078 call qio_channel_binary[233078] _channel_internal[1069144]))
              val call_tmp[1070080]:uint(8)[100] "dead after last mention" "maybe param" "temp" "type variable"
              const-val binary[1070087]:uint(8)[100] "dead at end of block" "insert auto destroy"
              (1070089 'move' binary[1070087] call_tmp[1070073])
              const-val call_tmp[1070094]:uint(8)[100] "dead at end of block" "maybe param" "temp"
              (1070096 'move' call_tmp[1070094](1070099 call qio_channel_byteorder[233093] _channel_internal[1069144]))
              val call_tmp[1070101]:uint(8)[100] "dead after last mention" "maybe param" "temp" "type variable"
              const-val byteorder[1070108]:uint(8)[100] "dead at end of block" "insert auto destroy"
              (1070110 'move' byteorder[1070108] call_tmp[1070094])
              const-val call_tmp[1070115]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1070359]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1070365 'move' coerce_tmp[1070359](1070361 'cast' int(64)[13] binary[1070087]))
              (1070117 'move' call_tmp[1070115](1070120 call _cond_test[9912] coerce_tmp[1070359]))
              if call_tmp[1070115]
              {
                {
                  const-val tmp[1070125]:iokind[230952] "dead after last mention" "expr temp" "maybe param" "temp"
                  val error[1844834]:Error[167984] "error variable" "temp"
                  (1844836 'move' error[1844834] nil[44])
                  (1070127 'move' tmp[1070125](1070130 call _cast[1070369] byteorder[1070108] error[1844834]))
                  val errorExists[2170980]:bool[10] "temp"
                  (2170985 'move' errorExists[2170980](2170982 '!=' error[1844834] nil[44]))
                  if errorExists[2170980]
                  {
                    (1844840 '=' error_out[1844831] error[1844834])
                    gotoErrorHandlingReturn _end__write_one_internal[1070262] _end__write_one_internal[1070262]
                  }
                  const-val call_tmp[1070133]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1070135 'move' call_tmp[1070133](1070138 call ==[1018334] tmp[1070125] big[230947]))
                  const-val call_tmp[1070141]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1070143 'move' call_tmp[1070141] call_tmp[1070133])
                  if call_tmp[1070141]
                  {
                    const-val call_tmp[1070150]:syserr[223605] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1070152 'move' call_tmp[1070150](1070155 call _write_binary_internal[1073859] _channel_internal[1069144] x[1069148]))
                    (1070160 call =[224133] e[1069814] call_tmp[1070150])
                  }
                  {
                    const-val call_tmp[1070166]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1070168 'move' call_tmp[1070166](1070171 call ==[1018334] tmp[1070125] little[230950]))
                    const-val call_tmp[1070174]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1070176 'move' call_tmp[1070174] call_tmp[1070166])
                    if call_tmp[1070174]
                    {
                      const-val call_tmp[1070183]:syserr[223605] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1070185 'move' call_tmp[1070183](1070188 call _write_binary_internal[1075687] _channel_internal[1069144] x[1069148]))
                      (1070193 call =[224133] e[1069814] call_tmp[1070183])
                    }
                    {
                      const-val call_tmp[1070199]:syserr[223605] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1070201 'move' call_tmp[1070199](1070204 call _write_binary_internal[1077255] _channel_internal[1069144] x[1069148]))
                      (1070209 call =[224133] e[1069814] call_tmp[1070199])
                    }
                  }
                }
              }
              {
                const-val call_tmp[1070217]:syserr[223605] "dead after last mention" "expr temp" "maybe param" "temp"
                (1070219 'move' call_tmp[1070217](1070222 call _write_text_internal[1078821] _channel_internal[1069144] x[1069148]))
                (1070226 call =[224133] e[1069814] call_tmp[1070217])
              }
            }
          }
        }
      }
    }
    (1079664 'move' ret[1069164] e[1069814])
    gotoReturn _end__write_one_internal[1070262] _end__write_one_internal[1070262]
    label _end__write_one_internal[1070262]
    (1070264 return ret[1069164])
  }
  function _write_one_internal[1165365](const in arg _channel_internal[1165367]:qio_channel_ptr_t[231486], const  ref arg x[1165371]:string[26], const  ref arg loc[1165373]:locale[28], ref arg error_out[1845629]:Error[167984]) : syserr[223605] throws "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1165387]:syserr[223605] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1167633]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1167635 'move' call_tmp[1167633](1167638 call ENOERR[223675]))
    val e[1167639]:syserr[223605] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1168099]:syserr[223605] "dead at end of block" "initialized later" "temp"
    (1173726 call =[224154] init_coerce_tmp[1168099] call_tmp[1167633])
    (1167641 'move' e[1167639] init_coerce_tmp[1168099])
    val call_tmp[1167646]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1167685]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1167733]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1167824]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          {
            {
              const-val call_tmp[1167898]:uint(8)[100] "dead at end of block" "maybe param" "temp"
              (1167900 'move' call_tmp[1167898](1167903 call qio_channel_binary[233078] _channel_internal[1165367]))
              val call_tmp[1167905]:uint(8)[100] "dead after last mention" "maybe param" "temp" "type variable"
              const-val binary[1167912]:uint(8)[100] "dead at end of block" "insert auto destroy"
              (1167914 'move' binary[1167912] call_tmp[1167898])
              const-val call_tmp[1167919]:uint(8)[100] "dead at end of block" "maybe param" "temp"
              (1167921 'move' call_tmp[1167919](1167924 call qio_channel_byteorder[233093] _channel_internal[1165367]))
              val call_tmp[1167926]:uint(8)[100] "dead after last mention" "maybe param" "temp" "type variable"
              const-val byteorder[1167933]:uint(8)[100] "dead at end of block" "insert auto destroy"
              (1167935 'move' byteorder[1167933] call_tmp[1167919])
              const-val call_tmp[1167940]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1168175]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1168181 'move' coerce_tmp[1168175](1168177 'cast' int(64)[13] binary[1167912]))
              (1167942 'move' call_tmp[1167940](1167945 call _cond_test[9912] coerce_tmp[1168175]))
              if call_tmp[1167940]
              {
                {
                  const-val tmp[1167950]:iokind[230952] "dead after last mention" "expr temp" "maybe param" "temp"
                  val error[1845632]:Error[167984] "error variable" "temp"
                  (1845634 'move' error[1845632] nil[44])
                  (1167952 'move' tmp[1167950](1167955 call _cast[1070369] byteorder[1167933] error[1845632]))
                  val errorExists[2171372]:bool[10] "temp"
                  (2171377 'move' errorExists[2171372](2171374 '!=' error[1845632] nil[44]))
                  if errorExists[2171372]
                  {
                    (1845638 '=' error_out[1845629] error[1845632])
                    gotoErrorHandlingReturn _end__write_one_internal[1168087] _end__write_one_internal[1168087]
                  }
                  const-val call_tmp[1167958]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1167960 'move' call_tmp[1167958](1167963 call ==[1018334] tmp[1167950] big[230947]))
                  const-val call_tmp[1167966]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1167968 'move' call_tmp[1167966] call_tmp[1167958])
                  if call_tmp[1167966]
                  {
                    const-val call_tmp[1167975]:syserr[223605] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1167977 'move' call_tmp[1167975](1167980 call _write_binary_internal[1168186] _channel_internal[1165367] x[1165371]))
                    (1167985 call =[224133] e[1167639] call_tmp[1167975])
                  }
                  {
                    const-val call_tmp[1167991]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1167993 'move' call_tmp[1167991](1167996 call ==[1018334] tmp[1167950] little[230950]))
                    const-val call_tmp[1167999]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1168001 'move' call_tmp[1167999] call_tmp[1167991])
                    if call_tmp[1167999]
                    {
                      const-val call_tmp[1168008]:syserr[223605] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1168010 'move' call_tmp[1168008](1168013 call _write_binary_internal[1169761] _channel_internal[1165367] x[1165371]))
                      (1168018 call =[224133] e[1167639] call_tmp[1168008])
                    }
                    {
                      const-val call_tmp[1168024]:syserr[223605] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1168026 'move' call_tmp[1168024](1168029 call _write_binary_internal[1171333] _channel_internal[1165367] x[1165371]))
                      (1168034 call =[224133] e[1167639] call_tmp[1168024])
                    }
                  }
                }
              }
              {
                const-val call_tmp[1168042]:syserr[223605] "dead after last mention" "expr temp" "maybe param" "temp"
                (1168044 'move' call_tmp[1168042](1168047 call _write_text_internal[1172905] _channel_internal[1165367] x[1165371]))
                (1168051 call =[224133] e[1167639] call_tmp[1168042])
              }
            }
          }
        }
      }
    }
    (1173733 'move' ret[1165387] e[1167639])
    gotoReturn _end__write_one_internal[1168087] _end__write_one_internal[1168087]
    label _end__write_one_internal[1168087]
    (1168089 return ret[1165387])
  }
  function _write_one_internal[1545333](const in arg _channel_internal[1545335]:qio_channel_ptr_t[231486], const  ref arg x[1545339]:ioNewline[238722], const  ref arg loc[1545341]:locale[28], ref arg error_out[1847199]:Error[167984]) : syserr[223605] throws "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1545355]:syserr[223605] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1547603]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1547605 'move' call_tmp[1547603](1547608 call ENOERR[223675]))
    const-val e[1547609]:syserr[223605] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1548069]:syserr[223605] "dead at end of block" "initialized later" "temp"
    (1548100 call =[224154] init_coerce_tmp[1548069] call_tmp[1547603])
    (1547611 'move' e[1547609] init_coerce_tmp[1548069])
    val call_tmp[1547616]:ioNewline[238722] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      const-val call_tmp[1547639]:syserr[223605] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1548088]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1548094 'move' coerce_tmp[1548088](1548090 'cast' int(32)[95] 0))
      (1547641 'move' call_tmp[1547639](1547644 call qio_channel_write_newline[234756] coerce_tmp[1548088] _channel_internal[1545335]))
      (1548107 'move' ret[1545355] call_tmp[1547639])
      gotoReturn _end__write_one_internal[1548057] _end__write_one_internal[1548057]
    }
    label _end__write_one_internal[1548057]
    (1548059 return ret[1545355])
  }
  function _write_one_internal[1067996](const in arg _channel_internal[1067998]:qio_channel_ptr_t[231486], const  ref arg x[1068002]:byteIndex[28173], const  ref arg loc[1068004]:locale[28], ref arg error_out[1844594]:Error[167984]) : syserr[223605] throws "inline" "instantiated generic" "invisible fn" "private" "resolved" "suppress lvalue error"
  {
    val ret[1068008]:syserr[223605] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1068018]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1864060]:locale[28] "temp"
    (1068023 call here[90438] ret_tmp[1864060])
    (1864063 'move' call_tmp[1068018] ret_tmp[1864060])
    const-val call_tmp[1068024]:channel(true,dynamic,false)[1061008] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1068431]:channel(true,dynamic,false)[1061008] "dead at end of block" "delay instantiation" "temp"
    (1068434 call init[1068449] initTemp[1068431] call_tmp[1068018] _channel_internal[1067998] loc[1068004])
    (1068026 'move' call_tmp[1068024] initTemp[1068431])
    val writer[1068041]:channel(true,dynamic,false)[1061008] "dead at end of block" "delay instantiation" "insert auto destroy"
    (1068043 'move' writer[1068041] call_tmp[1068024])
    const-val call_tmp[1068063]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1068065 'move' call_tmp[1068063](1068068 call ENOERR[223675]))
    const-val err[1068069]:syserr[223605] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1068585]:syserr[223605] "dead at end of block" "initialized later" "temp"
    (1079952 call =[224154] init_coerce_tmp[1068585] call_tmp[1068063])
    (1068071 'move' err[1068069] init_coerce_tmp[1068585])
    val call_tmp[1068080]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1068130]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1068196]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      {
        val error[1844596]:Error[167984] "error variable" "temp"
        (1844605 'move' error[1844596] nil[44])
        (1068403 call writeThis[1068681] x[1068002] writer[1068041] error[1844596])
        val errorExists[2170860]:bool[10] "temp"
        (2170865 'move' errorExists[2170860](2170862 '!=' error[1844596] nil[44]))
        if errorExists[2170860]
        {
          gotoErrorHandling handler[1844597] handler[1844597]
        }
        label handler[1844597]
        const-val shouldHandleError[1844616]:bool[10] "temp"
        val errorExists[2170868]:bool[10] "temp"
        (2170873 'move' errorExists[2170868](2170870 '!=' error[1844596] nil[44]))
        (1844620 'move' shouldHandleError[1844616] errorExists[2170868])
        if shouldHandleError[1844616]
        {
          (1844612 '=' error_out[1844594] error[1844596])
          ref call_tmp[1878878]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "temp"
          (1878880 'move' call_tmp[1878878](1878883 call _channel_internal[1061850] writer[1068041]))
          (1878886 call =[861541] call_tmp[1878878] QIO_CHANNEL_PTR_NULL[231489])
          (1878891 call chpl__autoDestroy[1637077] writer[1068041])
          (1878894 call chpl__autoDestroy[1562339] call_tmp[1068018])
          gotoErrorHandlingReturn _end__write_one_internal[1068418] _end__write_one_internal[1068418]
        }
      }
    }
    (1079959 'move' ret[1068008] err[1068069])
    ref call_tmp[1878898]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "temp"
    (1878900 'move' call_tmp[1878898](1878903 call _channel_internal[1061850] writer[1068041]))
    (1878906 call =[861541] call_tmp[1878898] QIO_CHANNEL_PTR_NULL[231489])
    (1878911 call chpl__autoDestroy[1637077] writer[1068041])
    (1878914 call chpl__autoDestroy[1562339] call_tmp[1068018])
    gotoReturn _end__write_one_internal[1068418] _end__write_one_internal[1068418]
    label _end__write_one_internal[1068418]
    (1068420 return ret[1068008])
  }
  function _write_one_internal[1174845](const in arg _channel_internal[1174847]:qio_channel_ptr_t[231486], const  ref arg x[1174851]:codepointIndex[28277], const  ref arg loc[1174853]:locale[28], ref arg error_out[1845693]:Error[167984]) : syserr[223605] throws "inline" "instantiated generic" "invisible fn" "private" "resolved" "suppress lvalue error"
  {
    val ret[1174857]:syserr[223605] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1174867]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1864078]:locale[28] "temp"
    (1174872 call here[90438] ret_tmp[1864078])
    (1864081 'move' call_tmp[1174867] ret_tmp[1864078])
    const-val call_tmp[1174873]:channel(true,dynamic,false)[1061008] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1175280]:channel(true,dynamic,false)[1061008] "dead at end of block" "delay instantiation" "temp"
    (1175283 call init[1068449] initTemp[1175280] call_tmp[1174867] _channel_internal[1174847] loc[1174853])
    (1174875 'move' call_tmp[1174873] initTemp[1175280])
    val writer[1174890]:channel(true,dynamic,false)[1061008] "dead at end of block" "delay instantiation" "insert auto destroy"
    (1174892 'move' writer[1174890] call_tmp[1174873])
    const-val call_tmp[1174912]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1174914 'move' call_tmp[1174912](1174917 call ENOERR[223675]))
    const-val err[1174918]:syserr[223605] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1175310]:syserr[223605] "dead at end of block" "initialized later" "temp"
    (1175444 call =[224154] init_coerce_tmp[1175310] call_tmp[1174912])
    (1174920 'move' err[1174918] init_coerce_tmp[1175310])
    val call_tmp[1174929]:codepointIndex[28277] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1174979]:codepointIndex[28277] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1175045]:codepointIndex[28277] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      {
        val error[1845695]:Error[167984] "error variable" "temp"
        (1845704 'move' error[1845695] nil[44])
        (1175252 call writeThis[1175406] x[1174851] writer[1174890] error[1845695])
        val errorExists[2171404]:bool[10] "temp"
        (2171409 'move' errorExists[2171404](2171406 '!=' error[1845695] nil[44]))
        if errorExists[2171404]
        {
          gotoErrorHandling handler[1845696] handler[1845696]
        }
        label handler[1845696]
        const-val shouldHandleError[1845715]:bool[10] "temp"
        val errorExists[2171412]:bool[10] "temp"
        (2171417 'move' errorExists[2171412](2171414 '!=' error[1845695] nil[44]))
        (1845719 'move' shouldHandleError[1845715] errorExists[2171412])
        if shouldHandleError[1845715]
        {
          (1845711 '=' error_out[1845693] error[1845695])
          ref call_tmp[1880681]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "temp"
          (1880683 'move' call_tmp[1880681](1880686 call _channel_internal[1061850] writer[1174890]))
          (1880689 call =[861541] call_tmp[1880681] QIO_CHANNEL_PTR_NULL[231489])
          (1880694 call chpl__autoDestroy[1637077] writer[1174890])
          (1880697 call chpl__autoDestroy[1562339] call_tmp[1174867])
          gotoErrorHandlingReturn _end__write_one_internal[1175267] _end__write_one_internal[1175267]
        }
      }
    }
    (1175451 'move' ret[1174857] err[1174918])
    ref call_tmp[1880701]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "temp"
    (1880703 'move' call_tmp[1880701](1880706 call _channel_internal[1061850] writer[1174890]))
    (1880709 call =[861541] call_tmp[1880701] QIO_CHANNEL_PTR_NULL[231489])
    (1880714 call chpl__autoDestroy[1637077] writer[1174890])
    (1880717 call chpl__autoDestroy[1562339] call_tmp[1174867])
    gotoReturn _end__write_one_internal[1175267] _end__write_one_internal[1175267]
    label _end__write_one_internal[1175267]
    (1175269 return ret[1174857])
  }
  function _ref(channel(true,dynamic,false))[1061017].writeIt[1068847](const  ref arg this[1068853]:_ref(channel(true,dynamic,false))[1061017], const in arg x[1068855]:int(64)[13], ref arg error_out[1844707]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1068891]:locale[28] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1866988]:locale[28] "temp"
    (1068899 call getLocaleOfIoRequest[1066272] this[1068853] ret_tmp[1866988])
    (1866991 'move' call_tmp[1068891] ret_tmp[1866988])
    const-val origLocale[1068900]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (1068902 'move' origLocale[1068900] call_tmp[1068891])
    const-val tmp[1068906]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1068908]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (1068910 'move' call_tmp[1068908](1068913 call home[1061816] this[1068853]))
    const-val call_tmp[1068916]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1068984]:BaseLocale[91204] "dead after last mention" "temp"
    (1068989 'move' _locale_tmp_[1068984](1068986 call _value[89984] call_tmp[1068908]))
    (1068918 'move' call_tmp[1068916](1068920 '_wide_get_locale' _locale_tmp_[1068984]))
    (1068922 'move' tmp[1068906] call_tmp[1068916])
    val error[1844712]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1844714 'move' error[1844712] nil[44])
    val rvfDerefTmp[2145618]:locale[28] "temp"
    (2145621 'move' rvfDerefTmp[2145618] origLocale[1068900])
    val isdirect[2151706]:bool[10] "temp"
    (2151711 'move' isdirect[2151706](2151708 call chpl_doDirectExecuteOn[187469] tmp[1068906]))
    if isdirect[2151706]
    {
      (2151715 call on_fn[1068929] this[1068853] x[1068855] rvfDerefTmp[2145618] error[1844712])
    }
    {
      val _args_foron_fn[2151739]:_class_localson_fn[2151725] "temp"
      (2151743 'move' _args_foron_fn[2151739](2151741 'stack allocate class' _class_localson_fn[2151725]))
      (2151745 '.=' _args_foron_fn[2151739] _0_tmp[2151728] tmp[1068906])
      ref tmp[2151749]:channel(true,dynamic,false)[1061008] "temp"
      (2151753 'move' tmp[2151749](2151751 'set reference' this[1068853]))
      (2151755 '.=' _args_foron_fn[2151739] _1_this[2151730] tmp[2151749])
      (2151759 '.=' _args_foron_fn[2151739] _2_x[2151732] x[1068855])
      (2151763 '.=' _args_foron_fn[2151739] _3_rvfDerefTmp[2151734] rvfDerefTmp[2145618])
      ref tmp[2151767]:Error[167984] "temp"
      (2151771 'move' tmp[2151767](2151769 'set reference' error[1844712]))
      (2151773 '.=' _args_foron_fn[2151739] _4_error[2151736] tmp[2151767])
      val _args_vforon_fn[2151777]:c_void_ptr[149] "temp"
      (2151781 'move' _args_vforon_fn[2151777](2151779 'cast_to_void_star' _args_foron_fn[2151739]))
      val _args_sizeon_fn[2151783]:int(64)[13] "temp"
      (2151787 'move' _args_sizeon_fn[2151783](2151785 'sizeof_bundle' _class_localson_fn[2151725]))
      on(2151843 call wrapon_fn[2151789] tmp[1068906] _args_vforon_fn[2151777] _args_sizeon_fn[2151783] _args_foron_fn[2151739])
    }
    val errorExists[2170916]:bool[10] "temp"
    (2170921 'move' errorExists[2170916](2170918 '!=' error[1844712] nil[44]))
    if errorExists[2170916]
    {
      (1844718 '=' error_out[1844707] error[1844712])
      (1878917 call chpl__autoDestroy[1562339] origLocale[1068900])
      gotoErrorHandlingReturn _endwriteIt[1844709] _endwriteIt[1844709]
    }
    {
    }
    (1878920 call chpl__autoDestroy[1562339] origLocale[1068900])
    label _endwriteIt[1844709]
    (1068973 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1061017].readwrite[1068782](const  ref arg this[1068788]:_ref(channel(true,dynamic,false))[1061017], const in arg x[1068790]:int(64)[13], ref arg error_out[1844675]:Error[167984]) : void[4] throws "inline" "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    {
      val error[1844679]:Error[167984] "error variable" "temp"
      (1844688 'move' error[1844679] nil[44])
      (1068841 call writeIt[1068847] this[1068788] x[1068790] error[1844679])
      val errorExists[2170900]:bool[10] "temp"
      (2170905 'move' errorExists[2170900](2170902 '!=' error[1844679] nil[44]))
      if errorExists[2170900]
      {
        gotoErrorHandling handler[1844680] handler[1844680]
      }
      label handler[1844680]
      const-val shouldHandleError[1844699]:bool[10] "temp"
      val errorExists[2170908]:bool[10] "temp"
      (2170913 'move' errorExists[2170908](2170910 '!=' error[1844679] nil[44]))
      (1844703 'move' shouldHandleError[1844699] errorExists[2170908])
      if shouldHandleError[1844699]
      {
        (1844695 '=' error_out[1844675] error[1844679])
        gotoErrorHandlingReturn _endreadwrite[1844677] _endreadwrite[1844677]
      }
    }
    label _endreadwrite[1844677]
    (1068844 return _void[55])
  }
  function <~>[1068709](const  ref arg ch[1068711]:_ref(channel(true,dynamic,false))[1061017], const in arg x[1068713]:int(64)[13], ref arg error_out[1844643]:Error[167984]) const ref : _ref(channel(true,dynamic,false))[1061017] throws "inline" "instantiated generic" "invisible fn" "resolved"
  {
    ref ret[1068720]:_ref(channel(true,dynamic,false))[1061017] "dead after last mention" "RVV" "temp"
    {
      val error[1844647]:Error[167984] "error variable" "temp"
      (1844656 'move' error[1844647] nil[44])
      (1068766 call readwrite[1068782] ch[1068711] x[1068713] error[1844647])
      val errorExists[2170884]:bool[10] "temp"
      (2170889 'move' errorExists[2170884](2170886 '!=' error[1844647] nil[44]))
      if errorExists[2170884]
      {
        gotoErrorHandling handler[1844648] handler[1844648]
      }
      label handler[1844648]
      const-val shouldHandleError[1844667]:bool[10] "temp"
      val errorExists[2170892]:bool[10] "temp"
      (2170897 'move' errorExists[2170892](2170894 '!=' error[1844647] nil[44]))
      (1844671 'move' shouldHandleError[1844667] errorExists[2170892])
      if shouldHandleError[1844667]
      {
        (1844663 '=' error_out[1844643] error[1844647])
        gotoErrorHandlingReturn _end<~>[1844645] _end<~>[1844645]
      }
    }
    (1068769 'move' ret[1068720] ch[1068711])
    label _end<~>[1844645]
    (1068773 return ret[1068720])
  }
  function stringify[958848](const in arg _e0_args[958850]:c_string[19], ref arg _retArg[1865664]:_ref(string)[938000]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[958860]:1*c_string[959523] "insert auto destroy"
    const-val ret_tmp[1865672]:1*c_string[959523] "temp"
    (958865 call chpl__init_tuple[959541] _e0_args[958850] ret_tmp[1865672])
    (1865675 'move' args[958860] ret_tmp[1865672])
    const-val ret[958854]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[958886]:string[26] "dead at end of block" "insert auto destroy"
      (958888 'move' str[958886](1865668 call chpl__initCopy[981409] ""))
      {
        const-val i[958893]:int(64)[13] "dead at end of block" "insert auto destroy"
        (958895 'move' i[958893] 0)
        {
          {
            {
              {
                {
                  val error[1843546]:Error[167984] "error variable" "temp"
                  (1843562 'move' error[1843546] nil[44])
                  ref call_tmp[963765]:_ref(c_string)[937288] "dead after last mention" "maybe param" "temp"
                  (963767 'move' call_tmp[963765](964082 '.' args[958860] x0[959521]))
                  const-val call_tmp[963772]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  const-val coerce_tmp[964100]:c_string[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (964104 'move' coerce_tmp[964100](964102 'deref' call_tmp[963765]))
                  const-val default_arg_length[964131]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  (964136 'move' default_arg_length[964131](964133 call createStringWithNewBuffer_default_length[964107] coerce_tmp[964100] error[1843546]))
                  val errorExists[2170372]:bool[10] "temp"
                  (2170377 'move' errorExists[2170372](2170374 '!=' error[1843546] nil[44]))
                  if errorExists[2170372]
                  {
                    gotoErrorHandling handler[1843547] handler[1843547]
                  }
                  const-val ret_tmp[1862612]:string[26] "temp"
                  (963777 call createStringWithNewBuffer[30413] coerce_tmp[964100] default_arg_length[964131] replace[173694] error[1843546] ret_tmp[1862612])
                  (1862615 'move' call_tmp[963772] ret_tmp[1862612])
                  val errorExists[2170380]:bool[10] "temp"
                  (2170385 'move' errorExists[2170380](2170382 '!=' error[1843546] nil[44]))
                  if errorExists[2170380]
                  {
                    gotoErrorHandling handler[1843547] handler[1843547]
                  }
                  (963782 call +=[38800] str[958886] call_tmp[963772])
                  (1877424 call chpl__autoDestroy[1562275] call_tmp[963772])
                  label handler[1843547]
                  const-val shouldHandleError[1843571]:bool[10] "temp"
                  val errorExists[2170388]:bool[10] "temp"
                  (2170393 'move' errorExists[2170388](2170390 '!=' error[1843546] nil[44]))
                  (1843575 'move' shouldHandleError[1843571] errorExists[2170388])
                  if shouldHandleError[1843571]
                  {
                    (1843568 call chpl_uncaught_error[170289] error[1843546])
                  }
                }
              }
            }
          }
        }
        label _continueLabel0[963683]
        label _unused_continueLabel[959284]
        label _breakLabel[959286]
      }
      (980921 'move' ret[958854] str[958886])
      (1877427 call chpl__autoDestroy[1566012] args[958860])
      gotoReturn _end_stringify[959511] _end_stringify[959511]
    }
    (1877430 call chpl__autoDestroy[1566012] args[958860])
    label _end_stringify[959511]
    (1865666 '=' _retArg[1865664] ret[958854])
    (1865670 return _void[55])
  }
  function stringify[1056467](const  ref arg _e0_args[1056469]:byteIndex[28173], ref arg _retArg[1866652]:_ref(string)[938000]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1056479]:1*byteIndex[1057142] "insert auto destroy"
    const-val ret_tmp[1866658]:1*byteIndex[1057142] "temp"
    (1056484 call chpl__init_tuple[1057160] _e0_args[1056469] ret_tmp[1866658])
    (1866661 'move' args[1056479] ret_tmp[1866658])
    const-val ret[1056473]:string[26] "dead after last mention" "RVV" "temp"
    {
      {
        val error[1843951]:Error[167984] "error variable" "temp"
        (1844136 'move' error[1843951] nil[44])
        const-val call_tmp[1056918]:file[235601] "dead at end of block" "maybe param" "temp"
        const-val default_arg_style[1060640]:iostyle[231865] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        (1060644 'move' default_arg_style[1060640](1060642 call openmem_default_style[1060620] error[1843951]))
        val errorExists[2170540]:bool[10] "temp"
        (2170545 'move' errorExists[2170540](2170542 '!=' error[1843951] nil[44]))
        if errorExists[2170540]
        {
          gotoErrorHandling handler[1843952] handler[1843952]
        }
        const-val ret_tmp[1865064]:file[235601] "temp"
        (1056923 call openmem[237646] default_arg_style[1060640] error[1843951] ret_tmp[1865064])
        (1865067 'move' call_tmp[1056918] ret_tmp[1865064])
        val errorExists[2170548]:bool[10] "temp"
        (2170553 'move' errorExists[2170548](2170550 '!=' error[1843951] nil[44]))
        if errorExists[2170548]
        {
          gotoErrorHandling handler[1843952] handler[1843952]
        }
        const-val f[1056924]:file[235601] "dead at end of block" "insert auto destroy"
        (1056926 'move' f[1056924] call_tmp[1056918])
        const-val call_tmp[1056941]:channel(true,dynamic,false)[1061008] "dead at end of block" "maybe param" "temp"
        const-val default_arg_start[1061250]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1061256 'move' default_arg_start[1061250](1061252 call writer_default_start[1061214] f[1056924] error[1843951]))
        val errorExists[2170556]:bool[10] "temp"
        (2170561 'move' errorExists[2170556](2170558 '!=' error[1843951] nil[44]))
        if errorExists[2170556]
        {
          {
            val error[1877866]:Error[167984] "error variable" "temp"
            (1877868 'move' error[1877866] nil[44])
            (1877872 call close[236045] f[1056924] error[1877866])
            val errorExists[2172212]:bool[10] "temp"
            (2172217 'move' errorExists[2172212](2172214 '!=' error[1877866] nil[44]))
            if errorExists[2172212]
            {
              gotoErrorHandling handler[1877883] handler[1877883]
            }
            label handler[1877883]
            const-val shouldHandleError[1877885]:bool[10] "temp"
            val errorExists[2172220]:bool[10] "temp"
            (2172225 'move' errorExists[2172220](2172222 '!=' error[1877866] nil[44]))
            (1877887 'move' shouldHandleError[1877885] errorExists[2172220])
            if shouldHandleError[1877885]
            {
              (1877894 call chpl_uncaught_error[170289] error[1877866])
            }
          }
          (1877897 call chpl__autoDestroy[1564124] f[1056924])
          gotoErrorHandling handler[1843952] handler[1843952]
        }
        const-val default_arg_end[1061313]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1061319 'move' default_arg_end[1061313](1061315 call writer_default_end[1061260] f[1056924] error[1843951]))
        val errorExists[2170564]:bool[10] "temp"
        (2170569 'move' errorExists[2170564](2170566 '!=' error[1843951] nil[44]))
        if errorExists[2170564]
        {
          {
            val error[1877902]:Error[167984] "error variable" "temp"
            (1877904 'move' error[1877902] nil[44])
            (1877908 call close[236045] f[1056924] error[1877902])
            val errorExists[2172228]:bool[10] "temp"
            (2172233 'move' errorExists[2172228](2172230 '!=' error[1877902] nil[44]))
            if errorExists[2172228]
            {
              gotoErrorHandling handler[1877919] handler[1877919]
            }
            label handler[1877919]
            const-val shouldHandleError[1877921]:bool[10] "temp"
            val errorExists[2172236]:bool[10] "temp"
            (2172241 'move' errorExists[2172236](2172238 '!=' error[1877902] nil[44]))
            (1877923 'move' shouldHandleError[1877921] errorExists[2172236])
            if shouldHandleError[1877921]
            {
              (1877930 call chpl_uncaught_error[170289] error[1877902])
            }
          }
          (1877933 call chpl__autoDestroy[1564124] f[1056924])
          gotoErrorHandling handler[1843952] handler[1843952]
        }
        const-val default_arg_hints[1061363]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1061369 'move' default_arg_hints[1061363](1061365 call writer_default_hints[1061323] f[1056924] error[1843951]))
        val errorExists[2170572]:bool[10] "temp"
        (2170577 'move' errorExists[2170572](2170574 '!=' error[1843951] nil[44]))
        if errorExists[2170572]
        {
          {
            val error[1877938]:Error[167984] "error variable" "temp"
            (1877940 'move' error[1877938] nil[44])
            (1877944 call close[236045] f[1056924] error[1877938])
            val errorExists[2172244]:bool[10] "temp"
            (2172249 'move' errorExists[2172244](2172246 '!=' error[1877938] nil[44]))
            if errorExists[2172244]
            {
              gotoErrorHandling handler[1877955] handler[1877955]
            }
            label handler[1877955]
            const-val shouldHandleError[1877957]:bool[10] "temp"
            val errorExists[2172252]:bool[10] "temp"
            (2172257 'move' errorExists[2172252](2172254 '!=' error[1877938] nil[44]))
            (1877959 'move' shouldHandleError[1877957] errorExists[2172252])
            if shouldHandleError[1877957]
            {
              (1877966 call chpl_uncaught_error[170289] error[1877938])
            }
          }
          (1877969 call chpl__autoDestroy[1564124] f[1056924])
          gotoErrorHandling handler[1843952] handler[1843952]
        }
        const-val default_arg_style[1061399]:iostyle[231865] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        (1061405 'move' default_arg_style[1061399](1061401 call writer_default_style[1061373] f[1056924] error[1843951]))
        val errorExists[2170580]:bool[10] "temp"
        (2170585 'move' errorExists[2170580](2170582 '!=' error[1843951] nil[44]))
        if errorExists[2170580]
        {
          {
            val error[1877974]:Error[167984] "error variable" "temp"
            (1877976 'move' error[1877974] nil[44])
            (1877980 call close[236045] f[1056924] error[1877974])
            val errorExists[2172260]:bool[10] "temp"
            (2172265 'move' errorExists[2172260](2172262 '!=' error[1877974] nil[44]))
            if errorExists[2172260]
            {
              gotoErrorHandling handler[1877991] handler[1877991]
            }
            label handler[1877991]
            const-val shouldHandleError[1877993]:bool[10] "temp"
            val errorExists[2172268]:bool[10] "temp"
            (2172273 'move' errorExists[2172268](2172270 '!=' error[1877974] nil[44]))
            (1877995 'move' shouldHandleError[1877993] errorExists[2172268])
            if shouldHandleError[1877993]
            {
              (1878002 call chpl_uncaught_error[170289] error[1877974])
            }
          }
          (1878005 call chpl__autoDestroy[1564124] f[1056924])
          gotoErrorHandling handler[1843952] handler[1843952]
        }
        const-val ret_tmp[1866676]:channel(true,dynamic,false)[1061008] "temp"
        (1056949 call writer[1060914] f[1056924] default_arg_start[1061250] default_arg_end[1061313] default_arg_hints[1061363] default_arg_style[1061399] error[1843951] ret_tmp[1866676])
        (1866679 'move' call_tmp[1056941] ret_tmp[1866676])
        val errorExists[2170588]:bool[10] "temp"
        (2170593 'move' errorExists[2170588](2170590 '!=' error[1843951] nil[44]))
        if errorExists[2170588]
        {
          {
            val error[1878010]:Error[167984] "error variable" "temp"
            (1878012 'move' error[1878010] nil[44])
            (1878016 call close[236045] f[1056924] error[1878010])
            val errorExists[2172276]:bool[10] "temp"
            (2172281 'move' errorExists[2172276](2172278 '!=' error[1878010] nil[44]))
            if errorExists[2172276]
            {
              gotoErrorHandling handler[1878027] handler[1878027]
            }
            label handler[1878027]
            const-val shouldHandleError[1878029]:bool[10] "temp"
            val errorExists[2172284]:bool[10] "temp"
            (2172289 'move' errorExists[2172284](2172286 '!=' error[1878010] nil[44]))
            (1878031 'move' shouldHandleError[1878029] errorExists[2172284])
            if shouldHandleError[1878029]
            {
              (1878038 call chpl_uncaught_error[170289] error[1878010])
            }
          }
          (1878041 call chpl__autoDestroy[1564124] f[1056924])
          gotoErrorHandling handler[1843952] handler[1843952]
        }
        const-val w[1056952]:channel(true,dynamic,false)[1061008] "dead at end of block" "insert auto destroy"
        (1056954 'move' w[1056952] call_tmp[1056941])
        ref _tuple_expand_tmp_0[1065791]:_ref(byteIndex)[948820] "dead after last mention" "temp"
        (1065797 'move' _tuple_expand_tmp_0[1065791](1065801 '.v' args[1056479] x0[1057140]))
        const-val _return_tmp_[1834662]:bool[10] "dead after last mention" "temp"
        (1834664 'move' _return_tmp_[1834662](1056973 call write[1066017] w[1056952] _tuple_expand_tmp_0[1065791] error[1843951]))
        val errorExists[2170596]:bool[10] "temp"
        (2170601 'move' errorExists[2170596](2170598 '!=' error[1843951] nil[44]))
        if errorExists[2170596]
        {
          {
            val error[1878046]:Error[167984] "error variable" "temp"
            (1878048 'move' error[1878046] nil[44])
            (1878052 call close[1062423] w[1056952] error[1878046])
            val errorExists[2172292]:bool[10] "temp"
            (2172297 'move' errorExists[2172292](2172294 '!=' error[1878046] nil[44]))
            if errorExists[2172292]
            {
              gotoErrorHandling handler[1878063] handler[1878063]
            }
            label handler[1878063]
            const-val shouldHandleError[1878065]:bool[10] "temp"
            val errorExists[2172300]:bool[10] "temp"
            (2172305 'move' errorExists[2172300](2172302 '!=' error[1878046] nil[44]))
            (1878067 'move' shouldHandleError[1878065] errorExists[2172300])
            if shouldHandleError[1878065]
            {
              (1878074 call chpl_uncaught_error[170289] error[1878046])
            }
          }
          (1878077 call chpl__autoDestroy[1637077] w[1056952])
          {
            val error[1878082]:Error[167984] "error variable" "temp"
            (1878084 'move' error[1878082] nil[44])
            (1878088 call close[236045] f[1056924] error[1878082])
            val errorExists[2172308]:bool[10] "temp"
            (2172313 'move' errorExists[2172308](2172310 '!=' error[1878082] nil[44]))
            if errorExists[2172308]
            {
              gotoErrorHandling handler[1878099] handler[1878099]
            }
            label handler[1878099]
            const-val shouldHandleError[1878101]:bool[10] "temp"
            val errorExists[2172316]:bool[10] "temp"
            (2172321 'move' errorExists[2172316](2172318 '!=' error[1878082] nil[44]))
            (1878103 'move' shouldHandleError[1878101] errorExists[2172316])
            if shouldHandleError[1878101]
            {
              (1878110 call chpl_uncaught_error[170289] error[1878082])
            }
          }
          (1878113 call chpl__autoDestroy[1564124] f[1056924])
          gotoErrorHandling handler[1843952] handler[1843952]
        }
        const-val call_tmp[1056978]:int(64)[13] "dead at end of block" "maybe param" "temp"
        (1056980 'move' call_tmp[1056978](1056986 call offset[1080209] w[1056952]))
        const-val offset[1056987]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1056989 'move' offset[1056987] call_tmp[1056978])
        val call_tmp[1056993]:uint(8)[100] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1057000]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1057002 'move' call_tmp[1057000](1057005 call +[949727] offset[1056987]))
        val call_tmp[1057008]:c_ptr(uint(8))[937484] "dead at end of block" "maybe param" "temp"
        (1057010 'move' call_tmp[1057008](1057013 call c_malloc[1080364] call_tmp[1057000]))
        val buf[1057016]:c_ptr(uint(8))[937484] "dead at end of block" "insert auto destroy"
        (1057018 'move' buf[1057016](1080646 call chpl__initCopy[954091] call_tmp[1057008]))
        const-val call_tmp[1057022]:channel(false,dynamic,false)[1080743] "dead at end of block" "maybe param" "temp"
        const-val default_arg_start[1080985]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1080991 'move' default_arg_start[1080985](1080987 call reader_default_start[1080949] f[1056924] error[1843951]))
        val errorExists[2170604]:bool[10] "temp"
        (2170609 'move' errorExists[2170604](2170606 '!=' error[1843951] nil[44]))
        if errorExists[2170604]
        {
          {
            val error[1878118]:Error[167984] "error variable" "temp"
            (1878120 'move' error[1878118] nil[44])
            (1878124 call close[1062423] w[1056952] error[1878118])
            val errorExists[2172324]:bool[10] "temp"
            (2172329 'move' errorExists[2172324](2172326 '!=' error[1878118] nil[44]))
            if errorExists[2172324]
            {
              gotoErrorHandling handler[1878135] handler[1878135]
            }
            label handler[1878135]
            const-val shouldHandleError[1878137]:bool[10] "temp"
            val errorExists[2172332]:bool[10] "temp"
            (2172337 'move' errorExists[2172332](2172334 '!=' error[1878118] nil[44]))
            (1878139 'move' shouldHandleError[1878137] errorExists[2172332])
            if shouldHandleError[1878137]
            {
              (1878146 call chpl_uncaught_error[170289] error[1878118])
            }
          }
          (1878149 call chpl__autoDestroy[1637077] w[1056952])
          {
            val error[1878154]:Error[167984] "error variable" "temp"
            (1878156 'move' error[1878154] nil[44])
            (1878160 call close[236045] f[1056924] error[1878154])
            val errorExists[2172340]:bool[10] "temp"
            (2172345 'move' errorExists[2172340](2172342 '!=' error[1878154] nil[44]))
            if errorExists[2172340]
            {
              gotoErrorHandling handler[1878171] handler[1878171]
            }
            label handler[1878171]
            const-val shouldHandleError[1878173]:bool[10] "temp"
            val errorExists[2172348]:bool[10] "temp"
            (2172353 'move' errorExists[2172348](2172350 '!=' error[1878154] nil[44]))
            (1878175 'move' shouldHandleError[1878173] errorExists[2172348])
            if shouldHandleError[1878173]
            {
              (1878182 call chpl_uncaught_error[170289] error[1878154])
            }
          }
          (1878185 call chpl__autoDestroy[1564124] f[1056924])
          gotoErrorHandling handler[1843952] handler[1843952]
        }
        const-val default_arg_end[1081048]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1081054 'move' default_arg_end[1081048](1081050 call reader_default_end[1080995] f[1056924] error[1843951]))
        val errorExists[2170612]:bool[10] "temp"
        (2170617 'move' errorExists[2170612](2170614 '!=' error[1843951] nil[44]))
        if errorExists[2170612]
        {
          {
            val error[1878190]:Error[167984] "error variable" "temp"
            (1878192 'move' error[1878190] nil[44])
            (1878196 call close[1062423] w[1056952] error[1878190])
            val errorExists[2172356]:bool[10] "temp"
            (2172361 'move' errorExists[2172356](2172358 '!=' error[1878190] nil[44]))
            if errorExists[2172356]
            {
              gotoErrorHandling handler[1878207] handler[1878207]
            }
            label handler[1878207]
            const-val shouldHandleError[1878209]:bool[10] "temp"
            val errorExists[2172364]:bool[10] "temp"
            (2172369 'move' errorExists[2172364](2172366 '!=' error[1878190] nil[44]))
            (1878211 'move' shouldHandleError[1878209] errorExists[2172364])
            if shouldHandleError[1878209]
            {
              (1878218 call chpl_uncaught_error[170289] error[1878190])
            }
          }
          (1878221 call chpl__autoDestroy[1637077] w[1056952])
          {
            val error[1878226]:Error[167984] "error variable" "temp"
            (1878228 'move' error[1878226] nil[44])
            (1878232 call close[236045] f[1056924] error[1878226])
            val errorExists[2172372]:bool[10] "temp"
            (2172377 'move' errorExists[2172372](2172374 '!=' error[1878226] nil[44]))
            if errorExists[2172372]
            {
              gotoErrorHandling handler[1878243] handler[1878243]
            }
            label handler[1878243]
            const-val shouldHandleError[1878245]:bool[10] "temp"
            val errorExists[2172380]:bool[10] "temp"
            (2172385 'move' errorExists[2172380](2172382 '!=' error[1878226] nil[44]))
            (1878247 'move' shouldHandleError[1878245] errorExists[2172380])
            if shouldHandleError[1878245]
            {
              (1878254 call chpl_uncaught_error[170289] error[1878226])
            }
          }
          (1878257 call chpl__autoDestroy[1564124] f[1056924])
          gotoErrorHandling handler[1843952] handler[1843952]
        }
        const-val default_arg_hints[1081095]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1081101 'move' default_arg_hints[1081095](1081097 call reader_default_hints[1081058] f[1056924] error[1843951]))
        val errorExists[2170620]:bool[10] "temp"
        (2170625 'move' errorExists[2170620](2170622 '!=' error[1843951] nil[44]))
        if errorExists[2170620]
        {
          {
            val error[1878262]:Error[167984] "error variable" "temp"
            (1878264 'move' error[1878262] nil[44])
            (1878268 call close[1062423] w[1056952] error[1878262])
            val errorExists[2172388]:bool[10] "temp"
            (2172393 'move' errorExists[2172388](2172390 '!=' error[1878262] nil[44]))
            if errorExists[2172388]
            {
              gotoErrorHandling handler[1878279] handler[1878279]
            }
            label handler[1878279]
            const-val shouldHandleError[1878281]:bool[10] "temp"
            val errorExists[2172396]:bool[10] "temp"
            (2172401 'move' errorExists[2172396](2172398 '!=' error[1878262] nil[44]))
            (1878283 'move' shouldHandleError[1878281] errorExists[2172396])
            if shouldHandleError[1878281]
            {
              (1878290 call chpl_uncaught_error[170289] error[1878262])
            }
          }
          (1878293 call chpl__autoDestroy[1637077] w[1056952])
          {
            val error[1878298]:Error[167984] "error variable" "temp"
            (1878300 'move' error[1878298] nil[44])
            (1878304 call close[236045] f[1056924] error[1878298])
            val errorExists[2172404]:bool[10] "temp"
            (2172409 'move' errorExists[2172404](2172406 '!=' error[1878298] nil[44]))
            if errorExists[2172404]
            {
              gotoErrorHandling handler[1878315] handler[1878315]
            }
            label handler[1878315]
            const-val shouldHandleError[1878317]:bool[10] "temp"
            val errorExists[2172412]:bool[10] "temp"
            (2172417 'move' errorExists[2172412](2172414 '!=' error[1878298] nil[44]))
            (1878319 'move' shouldHandleError[1878317] errorExists[2172412])
            if shouldHandleError[1878317]
            {
              (1878326 call chpl_uncaught_error[170289] error[1878298])
            }
          }
          (1878329 call chpl__autoDestroy[1564124] f[1056924])
          gotoErrorHandling handler[1843952] handler[1843952]
        }
        const-val default_arg_style[1081131]:iostyle[231865] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        (1081137 'move' default_arg_style[1081131](1081133 call reader_default_style[1081105] f[1056924] error[1843951]))
        val errorExists[2170628]:bool[10] "temp"
        (2170633 'move' errorExists[2170628](2170630 '!=' error[1843951] nil[44]))
        if errorExists[2170628]
        {
          {
            val error[1878334]:Error[167984] "error variable" "temp"
            (1878336 'move' error[1878334] nil[44])
            (1878340 call close[1062423] w[1056952] error[1878334])
            val errorExists[2172420]:bool[10] "temp"
            (2172425 'move' errorExists[2172420](2172422 '!=' error[1878334] nil[44]))
            if errorExists[2172420]
            {
              gotoErrorHandling handler[1878351] handler[1878351]
            }
            label handler[1878351]
            const-val shouldHandleError[1878353]:bool[10] "temp"
            val errorExists[2172428]:bool[10] "temp"
            (2172433 'move' errorExists[2172428](2172430 '!=' error[1878334] nil[44]))
            (1878355 'move' shouldHandleError[1878353] errorExists[2172428])
            if shouldHandleError[1878353]
            {
              (1878362 call chpl_uncaught_error[170289] error[1878334])
            }
          }
          (1878365 call chpl__autoDestroy[1637077] w[1056952])
          {
            val error[1878370]:Error[167984] "error variable" "temp"
            (1878372 'move' error[1878370] nil[44])
            (1878376 call close[236045] f[1056924] error[1878370])
            val errorExists[2172436]:bool[10] "temp"
            (2172441 'move' errorExists[2172436](2172438 '!=' error[1878370] nil[44]))
            if errorExists[2172436]
            {
              gotoErrorHandling handler[1878387] handler[1878387]
            }
            label handler[1878387]
            const-val shouldHandleError[1878389]:bool[10] "temp"
            val errorExists[2172444]:bool[10] "temp"
            (2172449 'move' errorExists[2172444](2172446 '!=' error[1878370] nil[44]))
            (1878391 'move' shouldHandleError[1878389] errorExists[2172444])
            if shouldHandleError[1878389]
            {
              (1878398 call chpl_uncaught_error[170289] error[1878370])
            }
          }
          (1878401 call chpl__autoDestroy[1564124] f[1056924])
          gotoErrorHandling handler[1843952] handler[1843952]
        }
        const-val ret_tmp[1867066]:channel(false,dynamic,false)[1080743] "temp"
        (1057030 call reader[1080649] f[1056924] default_arg_start[1080985] default_arg_end[1081048] default_arg_hints[1081095] default_arg_style[1081131] error[1843951] ret_tmp[1867066])
        (1867069 'move' call_tmp[1057022] ret_tmp[1867066])
        val errorExists[2170636]:bool[10] "temp"
        (2170641 'move' errorExists[2170636](2170638 '!=' error[1843951] nil[44]))
        if errorExists[2170636]
        {
          {
            val error[1878406]:Error[167984] "error variable" "temp"
            (1878408 'move' error[1878406] nil[44])
            (1878412 call close[1062423] w[1056952] error[1878406])
            val errorExists[2172452]:bool[10] "temp"
            (2172457 'move' errorExists[2172452](2172454 '!=' error[1878406] nil[44]))
            if errorExists[2172452]
            {
              gotoErrorHandling handler[1878423] handler[1878423]
            }
            label handler[1878423]
            const-val shouldHandleError[1878425]:bool[10] "temp"
            val errorExists[2172460]:bool[10] "temp"
            (2172465 'move' errorExists[2172460](2172462 '!=' error[1878406] nil[44]))
            (1878427 'move' shouldHandleError[1878425] errorExists[2172460])
            if shouldHandleError[1878425]
            {
              (1878434 call chpl_uncaught_error[170289] error[1878406])
            }
          }
          (1878437 call chpl__autoDestroy[1637077] w[1056952])
          {
            val error[1878442]:Error[167984] "error variable" "temp"
            (1878444 'move' error[1878442] nil[44])
            (1878448 call close[236045] f[1056924] error[1878442])
            val errorExists[2172468]:bool[10] "temp"
            (2172473 'move' errorExists[2172468](2172470 '!=' error[1878442] nil[44]))
            if errorExists[2172468]
            {
              gotoErrorHandling handler[1878459] handler[1878459]
            }
            label handler[1878459]
            const-val shouldHandleError[1878461]:bool[10] "temp"
            val errorExists[2172476]:bool[10] "temp"
            (2172481 'move' errorExists[2172476](2172478 '!=' error[1878442] nil[44]))
            (1878463 'move' shouldHandleError[1878461] errorExists[2172476])
            if shouldHandleError[1878461]
            {
              (1878470 call chpl_uncaught_error[170289] error[1878442])
            }
          }
          (1878473 call chpl__autoDestroy[1564124] f[1056924])
          gotoErrorHandling handler[1843952] handler[1843952]
        }
        const-val r[1057033]:channel(false,dynamic,false)[1080743] "dead at end of block" "insert auto destroy"
        (1057035 'move' r[1057033] call_tmp[1057022])
        const-val call_tmp[1057050]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1057052 'move' call_tmp[1057050] offset[1056987])
        (1057062 call readBytes[1082900] r[1057033] buf[1057016] call_tmp[1057050] error[1843951])
        val errorExists[2170644]:bool[10] "temp"
        (2170649 'move' errorExists[2170644](2170646 '!=' error[1843951] nil[44]))
        if errorExists[2170644]
        {
          {
            val error[1878478]:Error[167984] "error variable" "temp"
            (1878480 'move' error[1878478] nil[44])
            (1878484 call close[1082155] r[1057033] error[1878478])
            val errorExists[2172484]:bool[10] "temp"
            (2172489 'move' errorExists[2172484](2172486 '!=' error[1878478] nil[44]))
            if errorExists[2172484]
            {
              gotoErrorHandling handler[1878495] handler[1878495]
            }
            label handler[1878495]
            const-val shouldHandleError[1878497]:bool[10] "temp"
            val errorExists[2172492]:bool[10] "temp"
            (2172497 'move' errorExists[2172492](2172494 '!=' error[1878478] nil[44]))
            (1878499 'move' shouldHandleError[1878497] errorExists[2172492])
            if shouldHandleError[1878497]
            {
              (1878506 call chpl_uncaught_error[170289] error[1878478])
            }
          }
          (1878509 call chpl__autoDestroy[1641331] r[1057033])
          {
            val error[1878514]:Error[167984] "error variable" "temp"
            (1878516 'move' error[1878514] nil[44])
            (1878520 call close[1062423] w[1056952] error[1878514])
            val errorExists[2172500]:bool[10] "temp"
            (2172505 'move' errorExists[2172500](2172502 '!=' error[1878514] nil[44]))
            if errorExists[2172500]
            {
              gotoErrorHandling handler[1878531] handler[1878531]
            }
            label handler[1878531]
            const-val shouldHandleError[1878533]:bool[10] "temp"
            val errorExists[2172508]:bool[10] "temp"
            (2172513 'move' errorExists[2172508](2172510 '!=' error[1878514] nil[44]))
            (1878535 'move' shouldHandleError[1878533] errorExists[2172508])
            if shouldHandleError[1878533]
            {
              (1878542 call chpl_uncaught_error[170289] error[1878514])
            }
          }
          (1878545 call chpl__autoDestroy[1637077] w[1056952])
          {
            val error[1878550]:Error[167984] "error variable" "temp"
            (1878552 'move' error[1878550] nil[44])
            (1878556 call close[236045] f[1056924] error[1878550])
            val errorExists[2172516]:bool[10] "temp"
            (2172521 'move' errorExists[2172516](2172518 '!=' error[1878550] nil[44]))
            if errorExists[2172516]
            {
              gotoErrorHandling handler[1878567] handler[1878567]
            }
            label handler[1878567]
            const-val shouldHandleError[1878569]:bool[10] "temp"
            val errorExists[2172524]:bool[10] "temp"
            (2172529 'move' errorExists[2172524](2172526 '!=' error[1878550] nil[44]))
            (1878571 'move' shouldHandleError[1878569] errorExists[2172524])
            if shouldHandleError[1878569]
            {
              (1878578 call chpl_uncaught_error[170289] error[1878550])
            }
          }
          (1878581 call chpl__autoDestroy[1564124] f[1056924])
          gotoErrorHandling handler[1843952] handler[1843952]
        }
        ref call_tmp[1057069]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
        (1057071 'move' call_tmp[1057069](1057074 call this[954152] buf[1057016] offset[1056987]))
        const-val coerce_tmp[1083393]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1083399 'move' coerce_tmp[1083393](1083395 'cast' uint(8)[100] 0))
        (1057077 call =[435391] call_tmp[1057069] coerce_tmp[1083393])
        const-val call_tmp[1057083]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1057085 'move' call_tmp[1057083](1057088 call +[949727] offset[1056987]))
        const-val call_tmp[1057091]:string[26] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1862672]:string[26] "temp"
        (1057096 call createStringWithNewBuffer[30493] buf[1057016] offset[1056987] call_tmp[1057083] replace[173694] error[1843951] ret_tmp[1862672])
        (1862675 'move' call_tmp[1057091] ret_tmp[1862672])
        val errorExists[2170652]:bool[10] "temp"
        (2170657 'move' errorExists[2170652](2170654 '!=' error[1843951] nil[44]))
        if errorExists[2170652]
        {
          {
            val error[1878586]:Error[167984] "error variable" "temp"
            (1878588 'move' error[1878586] nil[44])
            (1878592 call close[1082155] r[1057033] error[1878586])
            val errorExists[2172532]:bool[10] "temp"
            (2172537 'move' errorExists[2172532](2172534 '!=' error[1878586] nil[44]))
            if errorExists[2172532]
            {
              gotoErrorHandling handler[1878603] handler[1878603]
            }
            label handler[1878603]
            const-val shouldHandleError[1878605]:bool[10] "temp"
            val errorExists[2172540]:bool[10] "temp"
            (2172545 'move' errorExists[2172540](2172542 '!=' error[1878586] nil[44]))
            (1878607 'move' shouldHandleError[1878605] errorExists[2172540])
            if shouldHandleError[1878605]
            {
              (1878614 call chpl_uncaught_error[170289] error[1878586])
            }
          }
          (1878617 call chpl__autoDestroy[1641331] r[1057033])
          {
            val error[1878622]:Error[167984] "error variable" "temp"
            (1878624 'move' error[1878622] nil[44])
            (1878628 call close[1062423] w[1056952] error[1878622])
            val errorExists[2172548]:bool[10] "temp"
            (2172553 'move' errorExists[2172548](2172550 '!=' error[1878622] nil[44]))
            if errorExists[2172548]
            {
              gotoErrorHandling handler[1878639] handler[1878639]
            }
            label handler[1878639]
            const-val shouldHandleError[1878641]:bool[10] "temp"
            val errorExists[2172556]:bool[10] "temp"
            (2172561 'move' errorExists[2172556](2172558 '!=' error[1878622] nil[44]))
            (1878643 'move' shouldHandleError[1878641] errorExists[2172556])
            if shouldHandleError[1878641]
            {
              (1878650 call chpl_uncaught_error[170289] error[1878622])
            }
          }
          (1878653 call chpl__autoDestroy[1637077] w[1056952])
          {
            val error[1878658]:Error[167984] "error variable" "temp"
            (1878660 'move' error[1878658] nil[44])
            (1878664 call close[236045] f[1056924] error[1878658])
            val errorExists[2172564]:bool[10] "temp"
            (2172569 'move' errorExists[2172564](2172566 '!=' error[1878658] nil[44]))
            if errorExists[2172564]
            {
              gotoErrorHandling handler[1878675] handler[1878675]
            }
            label handler[1878675]
            const-val shouldHandleError[1878677]:bool[10] "temp"
            val errorExists[2172572]:bool[10] "temp"
            (2172577 'move' errorExists[2172572](2172574 '!=' error[1878658] nil[44]))
            (1878679 'move' shouldHandleError[1878677] errorExists[2172572])
            if shouldHandleError[1878677]
            {
              (1878686 call chpl_uncaught_error[170289] error[1878658])
            }
          }
          (1878689 call chpl__autoDestroy[1564124] f[1056924])
          gotoErrorHandling handler[1843952] handler[1843952]
        }
        const-val ret[1057101]:string[26] "dead at end of block" "const" "insert auto destroy"
        (1057103 'move' ret[1057101] call_tmp[1057091])
        const-val coerce_tmp[1083404]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1083410 'move' coerce_tmp[1083404](1083406 'cast' c_void_ptr[149] buf[1057016]))
        (1057115 call c_free[207907] coerce_tmp[1083404])
        (1083415 'move' ret[1056473] ret[1057101])
        {
          val error[1878694]:Error[167984] "error variable" "temp"
          (1878696 'move' error[1878694] nil[44])
          (1878700 call close[1082155] r[1057033] error[1878694])
          val errorExists[2172580]:bool[10] "temp"
          (2172585 'move' errorExists[2172580](2172582 '!=' error[1878694] nil[44]))
          if errorExists[2172580]
          {
            gotoErrorHandling handler[1878711] handler[1878711]
          }
          label handler[1878711]
          const-val shouldHandleError[1878713]:bool[10] "temp"
          val errorExists[2172588]:bool[10] "temp"
          (2172593 'move' errorExists[2172588](2172590 '!=' error[1878694] nil[44]))
          (1878715 'move' shouldHandleError[1878713] errorExists[2172588])
          if shouldHandleError[1878713]
          {
            (1878722 call chpl_uncaught_error[170289] error[1878694])
          }
        }
        (1878725 call chpl__autoDestroy[1641331] r[1057033])
        {
          val error[1878730]:Error[167984] "error variable" "temp"
          (1878732 'move' error[1878730] nil[44])
          (1878736 call close[1062423] w[1056952] error[1878730])
          val errorExists[2172596]:bool[10] "temp"
          (2172601 'move' errorExists[2172596](2172598 '!=' error[1878730] nil[44]))
          if errorExists[2172596]
          {
            gotoErrorHandling handler[1878747] handler[1878747]
          }
          label handler[1878747]
          const-val shouldHandleError[1878749]:bool[10] "temp"
          val errorExists[2172604]:bool[10] "temp"
          (2172609 'move' errorExists[2172604](2172606 '!=' error[1878730] nil[44]))
          (1878751 'move' shouldHandleError[1878749] errorExists[2172604])
          if shouldHandleError[1878749]
          {
            (1878758 call chpl_uncaught_error[170289] error[1878730])
          }
        }
        (1878761 call chpl__autoDestroy[1637077] w[1056952])
        {
          val error[1878766]:Error[167984] "error variable" "temp"
          (1878768 'move' error[1878766] nil[44])
          (1878772 call close[236045] f[1056924] error[1878766])
          val errorExists[2172612]:bool[10] "temp"
          (2172617 'move' errorExists[2172612](2172614 '!=' error[1878766] nil[44]))
          if errorExists[2172612]
          {
            gotoErrorHandling handler[1878783] handler[1878783]
          }
          label handler[1878783]
          const-val shouldHandleError[1878785]:bool[10] "temp"
          val errorExists[2172620]:bool[10] "temp"
          (2172625 'move' errorExists[2172620](2172622 '!=' error[1878766] nil[44]))
          (1878787 'move' shouldHandleError[1878785] errorExists[2172620])
          if shouldHandleError[1878785]
          {
            (1878794 call chpl_uncaught_error[170289] error[1878766])
          }
        }
        (1878797 call chpl__autoDestroy[1564124] f[1056924])
        (1878800 call chpl__autoDestroy[1636015] args[1056479])
        gotoReturn _end_stringify[1057130] _end_stringify[1057130]
        label handler[1843952]
        const-val shouldHandleError[1844145]:bool[10] "temp"
        val errorExists[2170660]:bool[10] "temp"
        (2170665 'move' errorExists[2170660](2170662 '!=' error[1843951] nil[44]))
        (1844149 'move' shouldHandleError[1844145] errorExists[2170660])
        if shouldHandleError[1844145]
        {
          (1844142 call chpl_uncaught_error[170289] error[1843951])
        }
      }
    }
    (1878803 call chpl__autoDestroy[1636015] args[1056479])
    label _end_stringify[1057130]
    (1866654 '=' _retArg[1866652] ret[1056473])
    (1866656 return _void[55])
  }
  function stringify[1430810](const  ref arg _e0_args[1430812]:string[26], ref arg _retArg[1872599]:_ref(string)[938000]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1430822]:1*string[1431485] "insert auto destroy"
    const-val ret_tmp[1872607]:1*string[1431485] "temp"
    (1430827 call chpl__init_tuple[1431503] _e0_args[1430812] ret_tmp[1872607])
    (1872610 'move' args[1430822] ret_tmp[1872607])
    const-val ret[1430816]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1430848]:string[26] "dead at end of block" "insert auto destroy"
      (1430850 'move' str[1430848](1872603 call chpl__initCopy[981409] ""))
      {
        const-val i[1430855]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1430857 'move' i[1430855] 0)
        {
          {
            {
              ref call_tmp[1434407]:_ref(string)[938000] "dead after last mention" "maybe param" "temp"
              (1434409 'move' call_tmp[1434407](1434747 '.v' args[1430822] x0[1431483]))
              (1434415 call +=[38800] str[1430848] call_tmp[1434407])
            }
          }
        }
        label _continueLabel0[1434372]
        label _unused_continueLabel[1431246]
        label _breakLabel[1431248]
      }
      (1434752 'move' ret[1430816] str[1430848])
      (1883635 call chpl__autoDestroy[1751834] args[1430822])
      gotoReturn _end_stringify[1431473] _end_stringify[1431473]
    }
    (1883638 call chpl__autoDestroy[1751834] args[1430822])
    label _end_stringify[1431473]
    (1872601 '=' _retArg[1872599] ret[1430816])
    (1872605 return _void[55])
  }
  function stringify[1043763](const  ref arg _e0_args[1043765]:string[26], const in arg _e1_args[1043767]:range(byteIndex,bounded,false)[1025853], const  ref arg _e2_args[1043769]:string[26], const in arg _e3_args[1043771]:int(64)[13], ref arg _retArg[1866570]:_ref(string)[938000]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1043787]:(string,range(byteIndex,bounded,false),string,int(64))[1044462] "insert auto destroy"
    const-val ret_tmp[1866580]:(string,range(byteIndex,bounded,false),string,int(64))[1044462] "temp"
    (1043792 call chpl__init_tuple[1044477] _e0_args[1043765] _e1_args[1043767] _e2_args[1043769] _e3_args[1043771] ret_tmp[1866580])
    (1866583 'move' args[1043787] ret_tmp[1866580])
    const-val ret[1043775]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1043816]:string[26] "dead at end of block" "insert auto destroy"
      (1043818 'move' str[1043816](1866576 call chpl__initCopy[981409] ""))
      {
        const-val i[1043823]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1043825 'move' i[1043823] 0)
        {
          {
            {
              ref call_tmp[1052941]:_ref(string)[938000] "dead after last mention" "maybe param" "temp"
              (1052943 'move' call_tmp[1052941](1054316 '.v' args[1043787] x0[1044454]))
              (1052949 call +=[38800] str[1043816] call_tmp[1052941])
            }
          }
        }
        label _continueLabel0[1052906]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1053517]:_ref(range(byteIndex,bounded,false))[1025862] "dead after last mention" "maybe param" "temp"
                    (1053519 'move' call_tmp[1053517](1054416 '.' args[1043787] x1[1044456]))
                    const-val call_tmp[1053524]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1054687]:range(byteIndex,bounded,false)[1025853] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1054691 'move' coerce_tmp[1054687](1866574 call chpl__initCopy[1044571] call_tmp[1053517]))
                    const-val ret_tmp[1866604]:string[26] "temp"
                    (1053529 call _cast[1054419] coerce_tmp[1054687] ret_tmp[1866604])
                    (1866607 'move' call_tmp[1053524] ret_tmp[1866604])
                    (1053533 call +=[38800] str[1043816] call_tmp[1053524])
                    (1877819 call chpl__autoDestroy[1562275] call_tmp[1053524])
                    (1877822 call chpl__autoDestroy[1635105] coerce_tmp[1054687])
                  }
                }
              }
            }
          }
        }
        label _continueLabel1[1053251]
        {
          {
            {
              ref call_tmp[1053631]:_ref(string)[938000] "dead after last mention" "maybe param" "temp"
              (1053633 'move' call_tmp[1053631](1084805 '.v' args[1043787] x2[1044458]))
              (1053639 call +=[38800] str[1043816] call_tmp[1053631])
            }
          }
        }
        label _continueLabel2[1053596]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1054207]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                    (1054209 'move' call_tmp[1054207](1084912 '.' args[1043787] x3[1044460]))
                    const-val call_tmp[1054214]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1084915]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1084919 'move' coerce_tmp[1084915](1084917 'deref' call_tmp[1054207]))
                    const-val ret_tmp[1866730]:string[26] "temp"
                    (1054219 call _cast[1063214] coerce_tmp[1084915] ret_tmp[1866730])
                    (1866733 'move' call_tmp[1054214] ret_tmp[1866730])
                    (1054223 call +=[38800] str[1043816] call_tmp[1054214])
                    (1877826 call chpl__autoDestroy[1562275] call_tmp[1054214])
                  }
                }
              }
            }
          }
        }
        label _continueLabel3[1053941]
        label _unused_continueLabel[1044214]
        label _breakLabel[1044216]
      }
      (1084924 'move' ret[1043775] str[1043816])
      (1877829 call chpl__autoDestroy[1635600] args[1043787])
      gotoReturn _end_stringify[1044441] _end_stringify[1044441]
    }
    (1877832 call chpl__autoDestroy[1635600] args[1043787])
    label _end_stringify[1044441]
    (1866572 '=' _retArg[1866570] ret[1043775])
    (1866578 return _void[55])
  }
  function stringify[1113581](const  ref arg _e0_args[1113583]:string[26], const in arg _e1_args[1113585]:range(int(64),bounded,false)[1026875], const  ref arg _e2_args[1113587]:string[26], const in arg _e3_args[1113589]:int(64)[13], ref arg _retArg[1867650]:_ref(string)[938000]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1113605]:(string,range(int(64),bounded,false),string,int(64))[1114280] "insert auto destroy"
    const-val ret_tmp[1867660]:(string,range(int(64),bounded,false),string,int(64))[1114280] "temp"
    (1113610 call chpl__init_tuple[1114295] _e0_args[1113583] _e1_args[1113585] _e2_args[1113587] _e3_args[1113589] ret_tmp[1867660])
    (1867663 'move' args[1113605] ret_tmp[1867660])
    const-val ret[1113593]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1113634]:string[26] "dead at end of block" "insert auto destroy"
      (1113636 'move' str[1113634](1867656 call chpl__initCopy[981409] ""))
      {
        const-val i[1113641]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1113643 'move' i[1113641] 0)
        {
          {
            {
              ref call_tmp[1118020]:_ref(string)[938000] "dead after last mention" "maybe param" "temp"
              (1118022 'move' call_tmp[1118020](1119395 '.v' args[1113605] x0[1114272]))
              (1118028 call +=[38800] str[1113634] call_tmp[1118020])
            }
          }
        }
        label _continueLabel0[1117985]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1118596]:_ref(range(int(64),bounded,false))[1026919] "dead after last mention" "maybe param" "temp"
                    (1118598 'move' call_tmp[1118596](1119495 '.' args[1113605] x1[1114274]))
                    const-val call_tmp[1118603]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1119766]:range(int(64),bounded,false)[1026875] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1119770 'move' coerce_tmp[1119766](1867654 call chpl__initCopy[1085067] call_tmp[1118596]))
                    const-val ret_tmp[1867672]:string[26] "temp"
                    (1118608 call _cast[1119498] coerce_tmp[1119766] ret_tmp[1867672])
                    (1867675 'move' call_tmp[1118603] ret_tmp[1867672])
                    (1118612 call +=[38800] str[1113634] call_tmp[1118603])
                    (1879282 call chpl__autoDestroy[1562275] call_tmp[1118603])
                    (1879285 call chpl__autoDestroy[1383553] coerce_tmp[1119766])
                  }
                }
              }
            }
          }
        }
        label _continueLabel1[1118330]
        {
          {
            {
              ref call_tmp[1118710]:_ref(string)[938000] "dead after last mention" "maybe param" "temp"
              (1118712 'move' call_tmp[1118710](1120841 '.v' args[1113605] x2[1114276]))
              (1118718 call +=[38800] str[1113634] call_tmp[1118710])
            }
          }
        }
        label _continueLabel2[1118675]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1119286]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                    (1119288 'move' call_tmp[1119286](1120948 '.' args[1113605] x3[1114278]))
                    const-val call_tmp[1119293]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1120951]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1120955 'move' coerce_tmp[1120951](1120953 'deref' call_tmp[1119286]))
                    const-val ret_tmp[1866754]:string[26] "temp"
                    (1119298 call _cast[1063214] coerce_tmp[1120951] ret_tmp[1866754])
                    (1866757 'move' call_tmp[1119293] ret_tmp[1866754])
                    (1119302 call +=[38800] str[1113634] call_tmp[1119293])
                    (1879289 call chpl__autoDestroy[1562275] call_tmp[1119293])
                  }
                }
              }
            }
          }
        }
        label _continueLabel3[1119020]
        label _unused_continueLabel[1114032]
        label _breakLabel[1114034]
      }
      (1120960 'move' ret[1113593] str[1113634])
      (1879292 call chpl__autoDestroy[1642572] args[1113605])
      gotoReturn _end_stringify[1114259] _end_stringify[1114259]
    }
    (1879295 call chpl__autoDestroy[1642572] args[1113605])
    label _end_stringify[1114259]
    (1867652 '=' _retArg[1867650] ret[1113593])
    (1867658 return _void[55])
  }
  function stringify[1128405](const  ref arg _e0_args[1128407]:string[26], const in arg _e1_args[1128409]:range(int(64),boundedLow,false)[1087626], const  ref arg _e2_args[1128411]:string[26], const in arg _e3_args[1128413]:int(64)[13], ref arg _retArg[1867944]:_ref(string)[938000]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1128429]:(string,range(int(64),boundedLow,false),string,int(64))[1129104] "insert auto destroy"
    const-val ret_tmp[1867954]:(string,range(int(64),boundedLow,false),string,int(64))[1129104] "temp"
    (1128434 call chpl__init_tuple[1129119] _e0_args[1128407] _e1_args[1128409] _e2_args[1128411] _e3_args[1128413] ret_tmp[1867954])
    (1867957 'move' args[1128429] ret_tmp[1867954])
    const-val ret[1128417]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1128458]:string[26] "dead at end of block" "insert auto destroy"
      (1128460 'move' str[1128458](1867950 call chpl__initCopy[981409] ""))
      {
        const-val i[1128465]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1128467 'move' i[1128465] 0)
        {
          {
            {
              ref call_tmp[1134543]:_ref(string)[938000] "dead after last mention" "maybe param" "temp"
              (1134545 'move' call_tmp[1134543](1135918 '.v' args[1128429] x0[1129096]))
              (1134551 call +=[38800] str[1128458] call_tmp[1134543])
            }
          }
        }
        label _continueLabel0[1134508]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1135119]:_ref(range(int(64),boundedLow,false))[1087670] "dead after last mention" "maybe param" "temp"
                    (1135121 'move' call_tmp[1135119](1136018 '.' args[1128429] x1[1129098]))
                    const-val call_tmp[1135126]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1136289]:range(int(64),boundedLow,false)[1087626] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1136293 'move' coerce_tmp[1136289](1867948 call chpl__initCopy[1129213] call_tmp[1135119]))
                    const-val ret_tmp[1867966]:string[26] "temp"
                    (1135131 call _cast[1136021] coerce_tmp[1136289] ret_tmp[1867966])
                    (1867969 'move' call_tmp[1135126] ret_tmp[1867966])
                    (1135135 call +=[38800] str[1128458] call_tmp[1135126])
                    (1879490 call chpl__autoDestroy[1562275] call_tmp[1135126])
                    (1879493 call chpl__autoDestroy[1641507] coerce_tmp[1136289])
                  }
                }
              }
            }
          }
        }
        label _continueLabel1[1134853]
        {
          {
            {
              ref call_tmp[1135233]:_ref(string)[938000] "dead after last mention" "maybe param" "temp"
              (1135235 'move' call_tmp[1135233](1138895 '.v' args[1128429] x2[1129100]))
              (1135241 call +=[38800] str[1128458] call_tmp[1135233])
            }
          }
        }
        label _continueLabel2[1135198]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1135809]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                    (1135811 'move' call_tmp[1135809](1139002 '.' args[1128429] x3[1129102]))
                    const-val call_tmp[1135816]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1139005]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1139009 'move' coerce_tmp[1139005](1139007 'deref' call_tmp[1135809]))
                    const-val ret_tmp[1866772]:string[26] "temp"
                    (1135821 call _cast[1063214] coerce_tmp[1139005] ret_tmp[1866772])
                    (1866775 'move' call_tmp[1135816] ret_tmp[1866772])
                    (1135825 call +=[38800] str[1128458] call_tmp[1135816])
                    (1879497 call chpl__autoDestroy[1562275] call_tmp[1135816])
                  }
                }
              }
            }
          }
        }
        label _continueLabel3[1135543]
        label _unused_continueLabel[1128856]
        label _breakLabel[1128858]
      }
      (1139014 'move' ret[1128417] str[1128458])
      (1879500 call chpl__autoDestroy[1643355] args[1128429])
      gotoReturn _end_stringify[1129083] _end_stringify[1129083]
    }
    (1879503 call chpl__autoDestroy[1643355] args[1128429])
    label _end_stringify[1129083]
    (1867946 '=' _retArg[1867944] ret[1128417])
    (1867952 return _void[55])
  }
  function stringify[1146576](const  ref arg _e0_args[1146578]:string[26], const in arg _e1_args[1146580]:range(byteIndex,boundedLow,false)[1143464], const  ref arg _e2_args[1146582]:string[26], const in arg _e3_args[1146584]:int(64)[13], ref arg _retArg[1868208]:_ref(string)[938000]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1146600]:(string,range(byteIndex,boundedLow,false),string,int(64))[1147275] "insert auto destroy"
    const-val ret_tmp[1868218]:(string,range(byteIndex,boundedLow,false),string,int(64))[1147275] "temp"
    (1146605 call chpl__init_tuple[1147290] _e0_args[1146578] _e1_args[1146580] _e2_args[1146582] _e3_args[1146584] ret_tmp[1868218])
    (1868221 'move' args[1146600] ret_tmp[1868218])
    const-val ret[1146588]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1146629]:string[26] "dead at end of block" "insert auto destroy"
      (1146631 'move' str[1146629](1868214 call chpl__initCopy[981409] ""))
      {
        const-val i[1146636]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1146638 'move' i[1146636] 0)
        {
          {
            {
              ref call_tmp[1153007]:_ref(string)[938000] "dead after last mention" "maybe param" "temp"
              (1153009 'move' call_tmp[1153007](1154382 '.v' args[1146600] x0[1147267]))
              (1153015 call +=[38800] str[1146629] call_tmp[1153007])
            }
          }
        }
        label _continueLabel0[1152972]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1153583]:_ref(range(byteIndex,boundedLow,false))[1143508] "dead after last mention" "maybe param" "temp"
                    (1153585 'move' call_tmp[1153583](1154482 '.' args[1146600] x1[1147269]))
                    const-val call_tmp[1153590]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1154753]:range(byteIndex,boundedLow,false)[1143464] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1154757 'move' coerce_tmp[1154753](1868212 call chpl__initCopy[1147384] call_tmp[1153583]))
                    const-val ret_tmp[1868248]:string[26] "temp"
                    (1153595 call _cast[1154485] coerce_tmp[1154753] ret_tmp[1868248])
                    (1868251 'move' call_tmp[1153590] ret_tmp[1868248])
                    (1153599 call +=[38800] str[1146629] call_tmp[1153590])
                    (1879609 call chpl__autoDestroy[1562275] call_tmp[1153590])
                    (1879612 call chpl__autoDestroy[1643589] coerce_tmp[1154753])
                  }
                }
              }
            }
          }
        }
        label _continueLabel1[1153317]
        {
          {
            {
              ref call_tmp[1153697]:_ref(string)[938000] "dead after last mention" "maybe param" "temp"
              (1153699 'move' call_tmp[1153697](1156216 '.v' args[1146600] x2[1147271]))
              (1153705 call +=[38800] str[1146629] call_tmp[1153697])
            }
          }
        }
        label _continueLabel2[1153662]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1154273]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                    (1154275 'move' call_tmp[1154273](1156323 '.' args[1146600] x3[1147273]))
                    const-val call_tmp[1154280]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1156326]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1156330 'move' coerce_tmp[1156326](1156328 'deref' call_tmp[1154273]))
                    const-val ret_tmp[1866790]:string[26] "temp"
                    (1154285 call _cast[1063214] coerce_tmp[1156326] ret_tmp[1866790])
                    (1866793 'move' call_tmp[1154280] ret_tmp[1866790])
                    (1154289 call +=[38800] str[1146629] call_tmp[1154280])
                    (1879616 call chpl__autoDestroy[1562275] call_tmp[1154280])
                  }
                }
              }
            }
          }
        }
        label _continueLabel3[1154007]
        label _unused_continueLabel[1147027]
        label _breakLabel[1147029]
      }
      (1156335 'move' ret[1146588] str[1146629])
      (1879619 call chpl__autoDestroy[1643754] args[1146600])
      gotoReturn _end_stringify[1147254] _end_stringify[1147254]
    }
    (1879622 call chpl__autoDestroy[1643754] args[1146600])
    label _end_stringify[1147254]
    (1868210 '=' _retArg[1868208] ret[1146588])
    (1868216 return _void[55])
  }
  function stringify[1175882](const  ref arg _e0_args[1175884]:string[26], const  ref arg _e1_args[1175886]:codepointIndex[28277], const  ref arg _e2_args[1175888]:string[26], const in arg _e3_args[1175890]:int(64)[13], ref arg _retArg[1868324]:_ref(string)[938000]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1175906]:(string,codepointIndex,string,int(64))[1176581] "insert auto destroy"
    const-val ret_tmp[1868330]:(string,codepointIndex,string,int(64))[1176581] "temp"
    (1175911 call chpl__init_tuple[1176596] _e0_args[1175884] _e1_args[1175886] _e2_args[1175888] _e3_args[1175890] ret_tmp[1868330])
    (1868333 'move' args[1175906] ret_tmp[1868330])
    const-val ret[1175894]:string[26] "dead after last mention" "RVV" "temp"
    {
      {
        val error[1845742]:Error[167984] "error variable" "temp"
        (1845927 'move' error[1845742] nil[44])
        const-val call_tmp[1176348]:file[235601] "dead at end of block" "maybe param" "temp"
        const-val default_arg_style[1179686]:iostyle[231865] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        (1179690 'move' default_arg_style[1179686](1179688 call openmem_default_style[1060620] error[1845742]))
        val errorExists[2171428]:bool[10] "temp"
        (2171433 'move' errorExists[2171428](2171430 '!=' error[1845742] nil[44]))
        if errorExists[2171428]
        {
          gotoErrorHandling handler[1845743] handler[1845743]
        }
        const-val ret_tmp[1865076]:file[235601] "temp"
        (1176353 call openmem[237646] default_arg_style[1179686] error[1845742] ret_tmp[1865076])
        (1865079 'move' call_tmp[1176348] ret_tmp[1865076])
        val errorExists[2171436]:bool[10] "temp"
        (2171441 'move' errorExists[2171436](2171438 '!=' error[1845742] nil[44]))
        if errorExists[2171436]
        {
          gotoErrorHandling handler[1845743] handler[1845743]
        }
        const-val f[1176354]:file[235601] "dead at end of block" "insert auto destroy"
        (1176356 'move' f[1176354] call_tmp[1176348])
        const-val call_tmp[1176371]:channel(true,dynamic,false)[1061008] "dead at end of block" "maybe param" "temp"
        const-val default_arg_start[1179715]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1179721 'move' default_arg_start[1179715](1179717 call writer_default_start[1061214] f[1176354] error[1845742]))
        val errorExists[2171444]:bool[10] "temp"
        (2171449 'move' errorExists[2171444](2171446 '!=' error[1845742] nil[44]))
        if errorExists[2171444]
        {
          {
            val error[1880728]:Error[167984] "error variable" "temp"
            (1880730 'move' error[1880728] nil[44])
            (1880734 call close[236045] f[1176354] error[1880728])
            val errorExists[2173044]:bool[10] "temp"
            (2173049 'move' errorExists[2173044](2173046 '!=' error[1880728] nil[44]))
            if errorExists[2173044]
            {
              gotoErrorHandling handler[1880745] handler[1880745]
            }
            label handler[1880745]
            const-val shouldHandleError[1880747]:bool[10] "temp"
            val errorExists[2173052]:bool[10] "temp"
            (2173057 'move' errorExists[2173052](2173054 '!=' error[1880728] nil[44]))
            (1880749 'move' shouldHandleError[1880747] errorExists[2173052])
            if shouldHandleError[1880747]
            {
              (1880756 call chpl_uncaught_error[170289] error[1880728])
            }
          }
          (1880759 call chpl__autoDestroy[1564124] f[1176354])
          gotoErrorHandling handler[1845743] handler[1845743]
        }
        const-val default_arg_end[1179725]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1179731 'move' default_arg_end[1179725](1179727 call writer_default_end[1061260] f[1176354] error[1845742]))
        val errorExists[2171452]:bool[10] "temp"
        (2171457 'move' errorExists[2171452](2171454 '!=' error[1845742] nil[44]))
        if errorExists[2171452]
        {
          {
            val error[1880764]:Error[167984] "error variable" "temp"
            (1880766 'move' error[1880764] nil[44])
            (1880770 call close[236045] f[1176354] error[1880764])
            val errorExists[2173060]:bool[10] "temp"
            (2173065 'move' errorExists[2173060](2173062 '!=' error[1880764] nil[44]))
            if errorExists[2173060]
            {
              gotoErrorHandling handler[1880781] handler[1880781]
            }
            label handler[1880781]
            const-val shouldHandleError[1880783]:bool[10] "temp"
            val errorExists[2173068]:bool[10] "temp"
            (2173073 'move' errorExists[2173068](2173070 '!=' error[1880764] nil[44]))
            (1880785 'move' shouldHandleError[1880783] errorExists[2173068])
            if shouldHandleError[1880783]
            {
              (1880792 call chpl_uncaught_error[170289] error[1880764])
            }
          }
          (1880795 call chpl__autoDestroy[1564124] f[1176354])
          gotoErrorHandling handler[1845743] handler[1845743]
        }
        const-val default_arg_hints[1179735]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1179741 'move' default_arg_hints[1179735](1179737 call writer_default_hints[1061323] f[1176354] error[1845742]))
        val errorExists[2171460]:bool[10] "temp"
        (2171465 'move' errorExists[2171460](2171462 '!=' error[1845742] nil[44]))
        if errorExists[2171460]
        {
          {
            val error[1880800]:Error[167984] "error variable" "temp"
            (1880802 'move' error[1880800] nil[44])
            (1880806 call close[236045] f[1176354] error[1880800])
            val errorExists[2173076]:bool[10] "temp"
            (2173081 'move' errorExists[2173076](2173078 '!=' error[1880800] nil[44]))
            if errorExists[2173076]
            {
              gotoErrorHandling handler[1880817] handler[1880817]
            }
            label handler[1880817]
            const-val shouldHandleError[1880819]:bool[10] "temp"
            val errorExists[2173084]:bool[10] "temp"
            (2173089 'move' errorExists[2173084](2173086 '!=' error[1880800] nil[44]))
            (1880821 'move' shouldHandleError[1880819] errorExists[2173084])
            if shouldHandleError[1880819]
            {
              (1880828 call chpl_uncaught_error[170289] error[1880800])
            }
          }
          (1880831 call chpl__autoDestroy[1564124] f[1176354])
          gotoErrorHandling handler[1845743] handler[1845743]
        }
        const-val default_arg_style[1179745]:iostyle[231865] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        (1179751 'move' default_arg_style[1179745](1179747 call writer_default_style[1061373] f[1176354] error[1845742]))
        val errorExists[2171468]:bool[10] "temp"
        (2171473 'move' errorExists[2171468](2171470 '!=' error[1845742] nil[44]))
        if errorExists[2171468]
        {
          {
            val error[1880836]:Error[167984] "error variable" "temp"
            (1880838 'move' error[1880836] nil[44])
            (1880842 call close[236045] f[1176354] error[1880836])
            val errorExists[2173092]:bool[10] "temp"
            (2173097 'move' errorExists[2173092](2173094 '!=' error[1880836] nil[44]))
            if errorExists[2173092]
            {
              gotoErrorHandling handler[1880853] handler[1880853]
            }
            label handler[1880853]
            const-val shouldHandleError[1880855]:bool[10] "temp"
            val errorExists[2173100]:bool[10] "temp"
            (2173105 'move' errorExists[2173100](2173102 '!=' error[1880836] nil[44]))
            (1880857 'move' shouldHandleError[1880855] errorExists[2173100])
            if shouldHandleError[1880855]
            {
              (1880864 call chpl_uncaught_error[170289] error[1880836])
            }
          }
          (1880867 call chpl__autoDestroy[1564124] f[1176354])
          gotoErrorHandling handler[1845743] handler[1845743]
        }
        const-val ret_tmp[1866688]:channel(true,dynamic,false)[1061008] "temp"
        (1176379 call writer[1060914] f[1176354] default_arg_start[1179715] default_arg_end[1179725] default_arg_hints[1179735] default_arg_style[1179745] error[1845742] ret_tmp[1866688])
        (1866691 'move' call_tmp[1176371] ret_tmp[1866688])
        val errorExists[2171476]:bool[10] "temp"
        (2171481 'move' errorExists[2171476](2171478 '!=' error[1845742] nil[44]))
        if errorExists[2171476]
        {
          {
            val error[1880872]:Error[167984] "error variable" "temp"
            (1880874 'move' error[1880872] nil[44])
            (1880878 call close[236045] f[1176354] error[1880872])
            val errorExists[2173108]:bool[10] "temp"
            (2173113 'move' errorExists[2173108](2173110 '!=' error[1880872] nil[44]))
            if errorExists[2173108]
            {
              gotoErrorHandling handler[1880889] handler[1880889]
            }
            label handler[1880889]
            const-val shouldHandleError[1880891]:bool[10] "temp"
            val errorExists[2173116]:bool[10] "temp"
            (2173121 'move' errorExists[2173116](2173118 '!=' error[1880872] nil[44]))
            (1880893 'move' shouldHandleError[1880891] errorExists[2173116])
            if shouldHandleError[1880891]
            {
              (1880900 call chpl_uncaught_error[170289] error[1880872])
            }
          }
          (1880903 call chpl__autoDestroy[1564124] f[1176354])
          gotoErrorHandling handler[1845743] handler[1845743]
        }
        const-val w[1176382]:channel(true,dynamic,false)[1061008] "dead at end of block" "insert auto destroy"
        (1176384 'move' w[1176382] call_tmp[1176371])
        ref _tuple_expand_tmp_0[1179757]:_ref(string)[938000] "dead after last mention" "temp"
        (1179763 'move' _tuple_expand_tmp_0[1179757](1179791 '.v' args[1175906] x0[1176573]))
        ref _tuple_expand_tmp_1[1179765]:_ref(codepointIndex)[948830] "dead after last mention" "temp"
        (1179771 'move' _tuple_expand_tmp_1[1179765](1179796 '.v' args[1175906] x1[1176575]))
        ref _tuple_expand_tmp_2[1179773]:_ref(string)[938000] "dead after last mention" "temp"
        (1179779 'move' _tuple_expand_tmp_2[1179773](1179801 '.v' args[1175906] x2[1176577]))
        ref _tuple_expand_tmp_3[1179781]:_ref(int(64))[936633] "dead after last mention" "temp"
        (1179787 'move' _tuple_expand_tmp_3[1179781](1179806 '.' args[1175906] x3[1176579]))
        const-val coerce_tmp[1180561]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1180565 'move' coerce_tmp[1180561](1180563 'deref' _tuple_expand_tmp_3[1179781]))
        const-val _return_tmp_[1834686]:bool[10] "dead after last mention" "temp"
        (1834688 'move' _return_tmp_[1834686](1176403 call write[1180036] w[1176382] _tuple_expand_tmp_0[1179757] _tuple_expand_tmp_1[1179765] _tuple_expand_tmp_2[1179773] coerce_tmp[1180561] error[1845742]))
        val errorExists[2171484]:bool[10] "temp"
        (2171489 'move' errorExists[2171484](2171486 '!=' error[1845742] nil[44]))
        if errorExists[2171484]
        {
          {
            val error[1880908]:Error[167984] "error variable" "temp"
            (1880910 'move' error[1880908] nil[44])
            (1880914 call close[1062423] w[1176382] error[1880908])
            val errorExists[2173124]:bool[10] "temp"
            (2173129 'move' errorExists[2173124](2173126 '!=' error[1880908] nil[44]))
            if errorExists[2173124]
            {
              gotoErrorHandling handler[1880925] handler[1880925]
            }
            label handler[1880925]
            const-val shouldHandleError[1880927]:bool[10] "temp"
            val errorExists[2173132]:bool[10] "temp"
            (2173137 'move' errorExists[2173132](2173134 '!=' error[1880908] nil[44]))
            (1880929 'move' shouldHandleError[1880927] errorExists[2173132])
            if shouldHandleError[1880927]
            {
              (1880936 call chpl_uncaught_error[170289] error[1880908])
            }
          }
          (1880939 call chpl__autoDestroy[1637077] w[1176382])
          {
            val error[1880944]:Error[167984] "error variable" "temp"
            (1880946 'move' error[1880944] nil[44])
            (1880950 call close[236045] f[1176354] error[1880944])
            val errorExists[2173140]:bool[10] "temp"
            (2173145 'move' errorExists[2173140](2173142 '!=' error[1880944] nil[44]))
            if errorExists[2173140]
            {
              gotoErrorHandling handler[1880961] handler[1880961]
            }
            label handler[1880961]
            const-val shouldHandleError[1880963]:bool[10] "temp"
            val errorExists[2173148]:bool[10] "temp"
            (2173153 'move' errorExists[2173148](2173150 '!=' error[1880944] nil[44]))
            (1880965 'move' shouldHandleError[1880963] errorExists[2173148])
            if shouldHandleError[1880963]
            {
              (1880972 call chpl_uncaught_error[170289] error[1880944])
            }
          }
          (1880975 call chpl__autoDestroy[1564124] f[1176354])
          gotoErrorHandling handler[1845743] handler[1845743]
        }
        const-val call_tmp[1176408]:int(64)[13] "dead at end of block" "maybe param" "temp"
        (1176410 'move' call_tmp[1176408](1176416 call offset[1080209] w[1176382]))
        const-val offset[1176417]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1176419 'move' offset[1176417] call_tmp[1176408])
        val call_tmp[1176423]:uint(8)[100] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1176430]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1176432 'move' call_tmp[1176430](1176435 call +[949727] offset[1176417]))
        val call_tmp[1176438]:c_ptr(uint(8))[937484] "dead at end of block" "maybe param" "temp"
        (1176440 'move' call_tmp[1176438](1176443 call c_malloc[1080364] call_tmp[1176430]))
        val buf[1176446]:c_ptr(uint(8))[937484] "dead at end of block" "insert auto destroy"
        (1176448 'move' buf[1176446](1180775 call chpl__initCopy[954091] call_tmp[1176438]))
        const-val call_tmp[1176452]:channel(false,dynamic,false)[1080743] "dead at end of block" "maybe param" "temp"
        const-val default_arg_start[1180798]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1180804 'move' default_arg_start[1180798](1180800 call reader_default_start[1080949] f[1176354] error[1845742]))
        val errorExists[2171492]:bool[10] "temp"
        (2171497 'move' errorExists[2171492](2171494 '!=' error[1845742] nil[44]))
        if errorExists[2171492]
        {
          {
            val error[1880980]:Error[167984] "error variable" "temp"
            (1880982 'move' error[1880980] nil[44])
            (1880986 call close[1062423] w[1176382] error[1880980])
            val errorExists[2173156]:bool[10] "temp"
            (2173161 'move' errorExists[2173156](2173158 '!=' error[1880980] nil[44]))
            if errorExists[2173156]
            {
              gotoErrorHandling handler[1880997] handler[1880997]
            }
            label handler[1880997]
            const-val shouldHandleError[1880999]:bool[10] "temp"
            val errorExists[2173164]:bool[10] "temp"
            (2173169 'move' errorExists[2173164](2173166 '!=' error[1880980] nil[44]))
            (1881001 'move' shouldHandleError[1880999] errorExists[2173164])
            if shouldHandleError[1880999]
            {
              (1881008 call chpl_uncaught_error[170289] error[1880980])
            }
          }
          (1881011 call chpl__autoDestroy[1637077] w[1176382])
          {
            val error[1881016]:Error[167984] "error variable" "temp"
            (1881018 'move' error[1881016] nil[44])
            (1881022 call close[236045] f[1176354] error[1881016])
            val errorExists[2173172]:bool[10] "temp"
            (2173177 'move' errorExists[2173172](2173174 '!=' error[1881016] nil[44]))
            if errorExists[2173172]
            {
              gotoErrorHandling handler[1881033] handler[1881033]
            }
            label handler[1881033]
            const-val shouldHandleError[1881035]:bool[10] "temp"
            val errorExists[2173180]:bool[10] "temp"
            (2173185 'move' errorExists[2173180](2173182 '!=' error[1881016] nil[44]))
            (1881037 'move' shouldHandleError[1881035] errorExists[2173180])
            if shouldHandleError[1881035]
            {
              (1881044 call chpl_uncaught_error[170289] error[1881016])
            }
          }
          (1881047 call chpl__autoDestroy[1564124] f[1176354])
          gotoErrorHandling handler[1845743] handler[1845743]
        }
        const-val default_arg_end[1180808]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1180814 'move' default_arg_end[1180808](1180810 call reader_default_end[1080995] f[1176354] error[1845742]))
        val errorExists[2171500]:bool[10] "temp"
        (2171505 'move' errorExists[2171500](2171502 '!=' error[1845742] nil[44]))
        if errorExists[2171500]
        {
          {
            val error[1881052]:Error[167984] "error variable" "temp"
            (1881054 'move' error[1881052] nil[44])
            (1881058 call close[1062423] w[1176382] error[1881052])
            val errorExists[2173188]:bool[10] "temp"
            (2173193 'move' errorExists[2173188](2173190 '!=' error[1881052] nil[44]))
            if errorExists[2173188]
            {
              gotoErrorHandling handler[1881069] handler[1881069]
            }
            label handler[1881069]
            const-val shouldHandleError[1881071]:bool[10] "temp"
            val errorExists[2173196]:bool[10] "temp"
            (2173201 'move' errorExists[2173196](2173198 '!=' error[1881052] nil[44]))
            (1881073 'move' shouldHandleError[1881071] errorExists[2173196])
            if shouldHandleError[1881071]
            {
              (1881080 call chpl_uncaught_error[170289] error[1881052])
            }
          }
          (1881083 call chpl__autoDestroy[1637077] w[1176382])
          {
            val error[1881088]:Error[167984] "error variable" "temp"
            (1881090 'move' error[1881088] nil[44])
            (1881094 call close[236045] f[1176354] error[1881088])
            val errorExists[2173204]:bool[10] "temp"
            (2173209 'move' errorExists[2173204](2173206 '!=' error[1881088] nil[44]))
            if errorExists[2173204]
            {
              gotoErrorHandling handler[1881105] handler[1881105]
            }
            label handler[1881105]
            const-val shouldHandleError[1881107]:bool[10] "temp"
            val errorExists[2173212]:bool[10] "temp"
            (2173217 'move' errorExists[2173212](2173214 '!=' error[1881088] nil[44]))
            (1881109 'move' shouldHandleError[1881107] errorExists[2173212])
            if shouldHandleError[1881107]
            {
              (1881116 call chpl_uncaught_error[170289] error[1881088])
            }
          }
          (1881119 call chpl__autoDestroy[1564124] f[1176354])
          gotoErrorHandling handler[1845743] handler[1845743]
        }
        const-val default_arg_hints[1180818]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1180824 'move' default_arg_hints[1180818](1180820 call reader_default_hints[1081058] f[1176354] error[1845742]))
        val errorExists[2171508]:bool[10] "temp"
        (2171513 'move' errorExists[2171508](2171510 '!=' error[1845742] nil[44]))
        if errorExists[2171508]
        {
          {
            val error[1881124]:Error[167984] "error variable" "temp"
            (1881126 'move' error[1881124] nil[44])
            (1881130 call close[1062423] w[1176382] error[1881124])
            val errorExists[2173220]:bool[10] "temp"
            (2173225 'move' errorExists[2173220](2173222 '!=' error[1881124] nil[44]))
            if errorExists[2173220]
            {
              gotoErrorHandling handler[1881141] handler[1881141]
            }
            label handler[1881141]
            const-val shouldHandleError[1881143]:bool[10] "temp"
            val errorExists[2173228]:bool[10] "temp"
            (2173233 'move' errorExists[2173228](2173230 '!=' error[1881124] nil[44]))
            (1881145 'move' shouldHandleError[1881143] errorExists[2173228])
            if shouldHandleError[1881143]
            {
              (1881152 call chpl_uncaught_error[170289] error[1881124])
            }
          }
          (1881155 call chpl__autoDestroy[1637077] w[1176382])
          {
            val error[1881160]:Error[167984] "error variable" "temp"
            (1881162 'move' error[1881160] nil[44])
            (1881166 call close[236045] f[1176354] error[1881160])
            val errorExists[2173236]:bool[10] "temp"
            (2173241 'move' errorExists[2173236](2173238 '!=' error[1881160] nil[44]))
            if errorExists[2173236]
            {
              gotoErrorHandling handler[1881177] handler[1881177]
            }
            label handler[1881177]
            const-val shouldHandleError[1881179]:bool[10] "temp"
            val errorExists[2173244]:bool[10] "temp"
            (2173249 'move' errorExists[2173244](2173246 '!=' error[1881160] nil[44]))
            (1881181 'move' shouldHandleError[1881179] errorExists[2173244])
            if shouldHandleError[1881179]
            {
              (1881188 call chpl_uncaught_error[170289] error[1881160])
            }
          }
          (1881191 call chpl__autoDestroy[1564124] f[1176354])
          gotoErrorHandling handler[1845743] handler[1845743]
        }
        const-val default_arg_style[1180828]:iostyle[231865] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        (1180834 'move' default_arg_style[1180828](1180830 call reader_default_style[1081105] f[1176354] error[1845742]))
        val errorExists[2171516]:bool[10] "temp"
        (2171521 'move' errorExists[2171516](2171518 '!=' error[1845742] nil[44]))
        if errorExists[2171516]
        {
          {
            val error[1881196]:Error[167984] "error variable" "temp"
            (1881198 'move' error[1881196] nil[44])
            (1881202 call close[1062423] w[1176382] error[1881196])
            val errorExists[2173252]:bool[10] "temp"
            (2173257 'move' errorExists[2173252](2173254 '!=' error[1881196] nil[44]))
            if errorExists[2173252]
            {
              gotoErrorHandling handler[1881213] handler[1881213]
            }
            label handler[1881213]
            const-val shouldHandleError[1881215]:bool[10] "temp"
            val errorExists[2173260]:bool[10] "temp"
            (2173265 'move' errorExists[2173260](2173262 '!=' error[1881196] nil[44]))
            (1881217 'move' shouldHandleError[1881215] errorExists[2173260])
            if shouldHandleError[1881215]
            {
              (1881224 call chpl_uncaught_error[170289] error[1881196])
            }
          }
          (1881227 call chpl__autoDestroy[1637077] w[1176382])
          {
            val error[1881232]:Error[167984] "error variable" "temp"
            (1881234 'move' error[1881232] nil[44])
            (1881238 call close[236045] f[1176354] error[1881232])
            val errorExists[2173268]:bool[10] "temp"
            (2173273 'move' errorExists[2173268](2173270 '!=' error[1881232] nil[44]))
            if errorExists[2173268]
            {
              gotoErrorHandling handler[1881249] handler[1881249]
            }
            label handler[1881249]
            const-val shouldHandleError[1881251]:bool[10] "temp"
            val errorExists[2173276]:bool[10] "temp"
            (2173281 'move' errorExists[2173276](2173278 '!=' error[1881232] nil[44]))
            (1881253 'move' shouldHandleError[1881251] errorExists[2173276])
            if shouldHandleError[1881251]
            {
              (1881260 call chpl_uncaught_error[170289] error[1881232])
            }
          }
          (1881263 call chpl__autoDestroy[1564124] f[1176354])
          gotoErrorHandling handler[1845743] handler[1845743]
        }
        const-val ret_tmp[1867078]:channel(false,dynamic,false)[1080743] "temp"
        (1176460 call reader[1080649] f[1176354] default_arg_start[1180798] default_arg_end[1180808] default_arg_hints[1180818] default_arg_style[1180828] error[1845742] ret_tmp[1867078])
        (1867081 'move' call_tmp[1176452] ret_tmp[1867078])
        val errorExists[2171524]:bool[10] "temp"
        (2171529 'move' errorExists[2171524](2171526 '!=' error[1845742] nil[44]))
        if errorExists[2171524]
        {
          {
            val error[1881268]:Error[167984] "error variable" "temp"
            (1881270 'move' error[1881268] nil[44])
            (1881274 call close[1062423] w[1176382] error[1881268])
            val errorExists[2173284]:bool[10] "temp"
            (2173289 'move' errorExists[2173284](2173286 '!=' error[1881268] nil[44]))
            if errorExists[2173284]
            {
              gotoErrorHandling handler[1881285] handler[1881285]
            }
            label handler[1881285]
            const-val shouldHandleError[1881287]:bool[10] "temp"
            val errorExists[2173292]:bool[10] "temp"
            (2173297 'move' errorExists[2173292](2173294 '!=' error[1881268] nil[44]))
            (1881289 'move' shouldHandleError[1881287] errorExists[2173292])
            if shouldHandleError[1881287]
            {
              (1881296 call chpl_uncaught_error[170289] error[1881268])
            }
          }
          (1881299 call chpl__autoDestroy[1637077] w[1176382])
          {
            val error[1881304]:Error[167984] "error variable" "temp"
            (1881306 'move' error[1881304] nil[44])
            (1881310 call close[236045] f[1176354] error[1881304])
            val errorExists[2173300]:bool[10] "temp"
            (2173305 'move' errorExists[2173300](2173302 '!=' error[1881304] nil[44]))
            if errorExists[2173300]
            {
              gotoErrorHandling handler[1881321] handler[1881321]
            }
            label handler[1881321]
            const-val shouldHandleError[1881323]:bool[10] "temp"
            val errorExists[2173308]:bool[10] "temp"
            (2173313 'move' errorExists[2173308](2173310 '!=' error[1881304] nil[44]))
            (1881325 'move' shouldHandleError[1881323] errorExists[2173308])
            if shouldHandleError[1881323]
            {
              (1881332 call chpl_uncaught_error[170289] error[1881304])
            }
          }
          (1881335 call chpl__autoDestroy[1564124] f[1176354])
          gotoErrorHandling handler[1845743] handler[1845743]
        }
        const-val r[1176463]:channel(false,dynamic,false)[1080743] "dead at end of block" "insert auto destroy"
        (1176465 'move' r[1176463] call_tmp[1176452])
        const-val call_tmp[1176480]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1176482 'move' call_tmp[1176480] offset[1176417])
        (1176492 call readBytes[1082900] r[1176463] buf[1176446] call_tmp[1176480] error[1845742])
        val errorExists[2171532]:bool[10] "temp"
        (2171537 'move' errorExists[2171532](2171534 '!=' error[1845742] nil[44]))
        if errorExists[2171532]
        {
          {
            val error[1881340]:Error[167984] "error variable" "temp"
            (1881342 'move' error[1881340] nil[44])
            (1881346 call close[1082155] r[1176463] error[1881340])
            val errorExists[2173316]:bool[10] "temp"
            (2173321 'move' errorExists[2173316](2173318 '!=' error[1881340] nil[44]))
            if errorExists[2173316]
            {
              gotoErrorHandling handler[1881357] handler[1881357]
            }
            label handler[1881357]
            const-val shouldHandleError[1881359]:bool[10] "temp"
            val errorExists[2173324]:bool[10] "temp"
            (2173329 'move' errorExists[2173324](2173326 '!=' error[1881340] nil[44]))
            (1881361 'move' shouldHandleError[1881359] errorExists[2173324])
            if shouldHandleError[1881359]
            {
              (1881368 call chpl_uncaught_error[170289] error[1881340])
            }
          }
          (1881371 call chpl__autoDestroy[1641331] r[1176463])
          {
            val error[1881376]:Error[167984] "error variable" "temp"
            (1881378 'move' error[1881376] nil[44])
            (1881382 call close[1062423] w[1176382] error[1881376])
            val errorExists[2173332]:bool[10] "temp"
            (2173337 'move' errorExists[2173332](2173334 '!=' error[1881376] nil[44]))
            if errorExists[2173332]
            {
              gotoErrorHandling handler[1881393] handler[1881393]
            }
            label handler[1881393]
            const-val shouldHandleError[1881395]:bool[10] "temp"
            val errorExists[2173340]:bool[10] "temp"
            (2173345 'move' errorExists[2173340](2173342 '!=' error[1881376] nil[44]))
            (1881397 'move' shouldHandleError[1881395] errorExists[2173340])
            if shouldHandleError[1881395]
            {
              (1881404 call chpl_uncaught_error[170289] error[1881376])
            }
          }
          (1881407 call chpl__autoDestroy[1637077] w[1176382])
          {
            val error[1881412]:Error[167984] "error variable" "temp"
            (1881414 'move' error[1881412] nil[44])
            (1881418 call close[236045] f[1176354] error[1881412])
            val errorExists[2173348]:bool[10] "temp"
            (2173353 'move' errorExists[2173348](2173350 '!=' error[1881412] nil[44]))
            if errorExists[2173348]
            {
              gotoErrorHandling handler[1881429] handler[1881429]
            }
            label handler[1881429]
            const-val shouldHandleError[1881431]:bool[10] "temp"
            val errorExists[2173356]:bool[10] "temp"
            (2173361 'move' errorExists[2173356](2173358 '!=' error[1881412] nil[44]))
            (1881433 'move' shouldHandleError[1881431] errorExists[2173356])
            if shouldHandleError[1881431]
            {
              (1881440 call chpl_uncaught_error[170289] error[1881412])
            }
          }
          (1881443 call chpl__autoDestroy[1564124] f[1176354])
          gotoErrorHandling handler[1845743] handler[1845743]
        }
        ref call_tmp[1176499]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
        (1176501 'move' call_tmp[1176499](1176504 call this[954152] buf[1176446] offset[1176417]))
        const-val coerce_tmp[1180844]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1180850 'move' coerce_tmp[1180844](1180846 'cast' uint(8)[100] 0))
        (1176507 call =[435391] call_tmp[1176499] coerce_tmp[1180844])
        const-val call_tmp[1176513]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1176515 'move' call_tmp[1176513](1176518 call +[949727] offset[1176417]))
        const-val call_tmp[1176521]:string[26] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1862684]:string[26] "temp"
        (1176526 call createStringWithNewBuffer[30493] buf[1176446] offset[1176417] call_tmp[1176513] replace[173694] error[1845742] ret_tmp[1862684])
        (1862687 'move' call_tmp[1176521] ret_tmp[1862684])
        val errorExists[2171540]:bool[10] "temp"
        (2171545 'move' errorExists[2171540](2171542 '!=' error[1845742] nil[44]))
        if errorExists[2171540]
        {
          {
            val error[1881448]:Error[167984] "error variable" "temp"
            (1881450 'move' error[1881448] nil[44])
            (1881454 call close[1082155] r[1176463] error[1881448])
            val errorExists[2173364]:bool[10] "temp"
            (2173369 'move' errorExists[2173364](2173366 '!=' error[1881448] nil[44]))
            if errorExists[2173364]
            {
              gotoErrorHandling handler[1881465] handler[1881465]
            }
            label handler[1881465]
            const-val shouldHandleError[1881467]:bool[10] "temp"
            val errorExists[2173372]:bool[10] "temp"
            (2173377 'move' errorExists[2173372](2173374 '!=' error[1881448] nil[44]))
            (1881469 'move' shouldHandleError[1881467] errorExists[2173372])
            if shouldHandleError[1881467]
            {
              (1881476 call chpl_uncaught_error[170289] error[1881448])
            }
          }
          (1881479 call chpl__autoDestroy[1641331] r[1176463])
          {
            val error[1881484]:Error[167984] "error variable" "temp"
            (1881486 'move' error[1881484] nil[44])
            (1881490 call close[1062423] w[1176382] error[1881484])
            val errorExists[2173380]:bool[10] "temp"
            (2173385 'move' errorExists[2173380](2173382 '!=' error[1881484] nil[44]))
            if errorExists[2173380]
            {
              gotoErrorHandling handler[1881501] handler[1881501]
            }
            label handler[1881501]
            const-val shouldHandleError[1881503]:bool[10] "temp"
            val errorExists[2173388]:bool[10] "temp"
            (2173393 'move' errorExists[2173388](2173390 '!=' error[1881484] nil[44]))
            (1881505 'move' shouldHandleError[1881503] errorExists[2173388])
            if shouldHandleError[1881503]
            {
              (1881512 call chpl_uncaught_error[170289] error[1881484])
            }
          }
          (1881515 call chpl__autoDestroy[1637077] w[1176382])
          {
            val error[1881520]:Error[167984] "error variable" "temp"
            (1881522 'move' error[1881520] nil[44])
            (1881526 call close[236045] f[1176354] error[1881520])
            val errorExists[2173396]:bool[10] "temp"
            (2173401 'move' errorExists[2173396](2173398 '!=' error[1881520] nil[44]))
            if errorExists[2173396]
            {
              gotoErrorHandling handler[1881537] handler[1881537]
            }
            label handler[1881537]
            const-val shouldHandleError[1881539]:bool[10] "temp"
            val errorExists[2173404]:bool[10] "temp"
            (2173409 'move' errorExists[2173404](2173406 '!=' error[1881520] nil[44]))
            (1881541 'move' shouldHandleError[1881539] errorExists[2173404])
            if shouldHandleError[1881539]
            {
              (1881548 call chpl_uncaught_error[170289] error[1881520])
            }
          }
          (1881551 call chpl__autoDestroy[1564124] f[1176354])
          gotoErrorHandling handler[1845743] handler[1845743]
        }
        const-val ret[1176531]:string[26] "dead at end of block" "const" "insert auto destroy"
        (1176533 'move' ret[1176531] call_tmp[1176521])
        const-val coerce_tmp[1180855]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1180861 'move' coerce_tmp[1180855](1180857 'cast' c_void_ptr[149] buf[1176446]))
        (1176545 call c_free[207907] coerce_tmp[1180855])
        (1180865 'move' ret[1175894] ret[1176531])
        {
          val error[1881556]:Error[167984] "error variable" "temp"
          (1881558 'move' error[1881556] nil[44])
          (1881562 call close[1082155] r[1176463] error[1881556])
          val errorExists[2173412]:bool[10] "temp"
          (2173417 'move' errorExists[2173412](2173414 '!=' error[1881556] nil[44]))
          if errorExists[2173412]
          {
            gotoErrorHandling handler[1881573] handler[1881573]
          }
          label handler[1881573]
          const-val shouldHandleError[1881575]:bool[10] "temp"
          val errorExists[2173420]:bool[10] "temp"
          (2173425 'move' errorExists[2173420](2173422 '!=' error[1881556] nil[44]))
          (1881577 'move' shouldHandleError[1881575] errorExists[2173420])
          if shouldHandleError[1881575]
          {
            (1881584 call chpl_uncaught_error[170289] error[1881556])
          }
        }
        (1881587 call chpl__autoDestroy[1641331] r[1176463])
        {
          val error[1881592]:Error[167984] "error variable" "temp"
          (1881594 'move' error[1881592] nil[44])
          (1881598 call close[1062423] w[1176382] error[1881592])
          val errorExists[2173428]:bool[10] "temp"
          (2173433 'move' errorExists[2173428](2173430 '!=' error[1881592] nil[44]))
          if errorExists[2173428]
          {
            gotoErrorHandling handler[1881609] handler[1881609]
          }
          label handler[1881609]
          const-val shouldHandleError[1881611]:bool[10] "temp"
          val errorExists[2173436]:bool[10] "temp"
          (2173441 'move' errorExists[2173436](2173438 '!=' error[1881592] nil[44]))
          (1881613 'move' shouldHandleError[1881611] errorExists[2173436])
          if shouldHandleError[1881611]
          {
            (1881620 call chpl_uncaught_error[170289] error[1881592])
          }
        }
        (1881623 call chpl__autoDestroy[1637077] w[1176382])
        {
          val error[1881628]:Error[167984] "error variable" "temp"
          (1881630 'move' error[1881628] nil[44])
          (1881634 call close[236045] f[1176354] error[1881628])
          val errorExists[2173444]:bool[10] "temp"
          (2173449 'move' errorExists[2173444](2173446 '!=' error[1881628] nil[44]))
          if errorExists[2173444]
          {
            gotoErrorHandling handler[1881645] handler[1881645]
          }
          label handler[1881645]
          const-val shouldHandleError[1881647]:bool[10] "temp"
          val errorExists[2173452]:bool[10] "temp"
          (2173457 'move' errorExists[2173452](2173454 '!=' error[1881628] nil[44]))
          (1881649 'move' shouldHandleError[1881647] errorExists[2173452])
          if shouldHandleError[1881647]
          {
            (1881656 call chpl_uncaught_error[170289] error[1881628])
          }
        }
        (1881659 call chpl__autoDestroy[1564124] f[1176354])
        (1881662 call chpl__autoDestroy[1644418] args[1175906])
        gotoReturn _end_stringify[1176560] _end_stringify[1176560]
        label handler[1845743]
        const-val shouldHandleError[1845936]:bool[10] "temp"
        val errorExists[2171548]:bool[10] "temp"
        (2171553 'move' errorExists[2171548](2171550 '!=' error[1845742] nil[44]))
        (1845940 'move' shouldHandleError[1845936] errorExists[2171548])
        if shouldHandleError[1845936]
        {
          (1845933 call chpl_uncaught_error[170289] error[1845742])
        }
      }
    }
    (1881665 call chpl__autoDestroy[1644418] args[1175906])
    label _end_stringify[1176560]
    (1868326 '=' _retArg[1868324] ret[1175894])
    (1868328 return _void[55])
  }
  function stringify[1190781](const  ref arg _e0_args[1190783]:string[26], const in arg _e1_args[1190785]:range(byteIndex,boundedHigh,false)[1184980], const  ref arg _e2_args[1190787]:string[26], const in arg _e3_args[1190789]:int(64)[13], ref arg _retArg[1868530]:_ref(string)[938000]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1190805]:(string,range(byteIndex,boundedHigh,false),string,int(64))[1191480] "insert auto destroy"
    const-val ret_tmp[1868540]:(string,range(byteIndex,boundedHigh,false),string,int(64))[1191480] "temp"
    (1190810 call chpl__init_tuple[1191495] _e0_args[1190783] _e1_args[1190785] _e2_args[1190787] _e3_args[1190789] ret_tmp[1868540])
    (1868543 'move' args[1190805] ret_tmp[1868540])
    const-val ret[1190793]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1190834]:string[26] "dead at end of block" "insert auto destroy"
      (1190836 'move' str[1190834](1868536 call chpl__initCopy[981409] ""))
      {
        const-val i[1190841]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1190843 'move' i[1190841] 0)
        {
          {
            {
              ref call_tmp[1197214]:_ref(string)[938000] "dead after last mention" "maybe param" "temp"
              (1197216 'move' call_tmp[1197214](1198589 '.v' args[1190805] x0[1191472]))
              (1197222 call +=[38800] str[1190834] call_tmp[1197214])
            }
          }
        }
        label _continueLabel0[1197179]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1197790]:_ref(range(byteIndex,boundedHigh,false))[1185024] "dead after last mention" "maybe param" "temp"
                    (1197792 'move' call_tmp[1197790](1198689 '.' args[1190805] x1[1191474]))
                    const-val call_tmp[1197797]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1198960]:range(byteIndex,boundedHigh,false)[1184980] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1198964 'move' coerce_tmp[1198960](1868534 call chpl__initCopy[1191589] call_tmp[1197790]))
                    const-val ret_tmp[1868570]:string[26] "temp"
                    (1197802 call _cast[1198692] coerce_tmp[1198960] ret_tmp[1868570])
                    (1868573 'move' call_tmp[1197797] ret_tmp[1868570])
                    (1197806 call +=[38800] str[1190834] call_tmp[1197797])
                    (1881881 call chpl__autoDestroy[1562275] call_tmp[1197797])
                    (1881884 call chpl__autoDestroy[1644646] coerce_tmp[1198960])
                  }
                }
              }
            }
          }
        }
        label _continueLabel1[1197524]
        {
          {
            {
              ref call_tmp[1197904]:_ref(string)[938000] "dead after last mention" "maybe param" "temp"
              (1197906 'move' call_tmp[1197904](1200275 '.v' args[1190805] x2[1191476]))
              (1197912 call +=[38800] str[1190834] call_tmp[1197904])
            }
          }
        }
        label _continueLabel2[1197869]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1198480]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                    (1198482 'move' call_tmp[1198480](1200382 '.' args[1190805] x3[1191478]))
                    const-val call_tmp[1198487]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1200385]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1200389 'move' coerce_tmp[1200385](1200387 'deref' call_tmp[1198480]))
                    const-val ret_tmp[1866802]:string[26] "temp"
                    (1198492 call _cast[1063214] coerce_tmp[1200385] ret_tmp[1866802])
                    (1866805 'move' call_tmp[1198487] ret_tmp[1866802])
                    (1198496 call +=[38800] str[1190834] call_tmp[1198487])
                    (1881888 call chpl__autoDestroy[1562275] call_tmp[1198487])
                  }
                }
              }
            }
          }
        }
        label _continueLabel3[1198214]
        label _unused_continueLabel[1191232]
        label _breakLabel[1191234]
      }
      (1200394 'move' ret[1190793] str[1190834])
      (1881891 call chpl__autoDestroy[1646328] args[1190805])
      gotoReturn _end_stringify[1191459] _end_stringify[1191459]
    }
    (1881894 call chpl__autoDestroy[1646328] args[1190805])
    label _end_stringify[1191459]
    (1868532 '=' _retArg[1868530] ret[1190793])
    (1868538 return _void[55])
  }
  function stringify[1291199](const  ref arg _e0_args[1291201]:string[26], const  ref arg _e1_args[1291203]:string[26], const  ref arg _e2_args[1291205]:string[26], const  ref arg _e3_args[1291207]:string[26], ref arg _retArg[1870928]:_ref(string)[938000]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1291223]:4*string[1291898] "insert auto destroy"
    const-val ret_tmp[1870936]:4*string[1291898] "temp"
    (1291228 call chpl__init_tuple[1291922] _e0_args[1291201] _e1_args[1291203] _e2_args[1291205] _e3_args[1291207] ret_tmp[1870936])
    (1870939 'move' args[1291223] ret_tmp[1870936])
    const-val ret[1291211]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1291252]:string[26] "dead at end of block" "insert auto destroy"
      (1291254 'move' str[1291252](1870932 call chpl__initCopy[981409] ""))
      {
        const-val i[1291259]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1291261 'move' i[1291259] 0)
        {
          {
            {
              ref call_tmp[1295060]:_ref(string)[938000] "dead after last mention" "maybe param" "temp"
              (1295062 'move' call_tmp[1295060](1296435 '.v' args[1291223] x0[1291890]))
              (1295068 call +=[38800] str[1291252] call_tmp[1295060])
            }
          }
        }
        label _continueLabel0[1295025]
        {
          {
            {
              ref call_tmp[1295405]:_ref(string)[938000] "dead after last mention" "maybe param" "temp"
              (1295407 'move' call_tmp[1295405](1296469 '.v' args[1291223] x1[1291892]))
              (1295413 call +=[38800] str[1291252] call_tmp[1295405])
            }
          }
        }
        label _continueLabel1[1295370]
        {
          {
            {
              ref call_tmp[1295750]:_ref(string)[938000] "dead after last mention" "maybe param" "temp"
              (1295752 'move' call_tmp[1295750](1296503 '.v' args[1291223] x2[1291894]))
              (1295758 call +=[38800] str[1291252] call_tmp[1295750])
            }
          }
        }
        label _continueLabel2[1295715]
        {
          {
            {
              ref call_tmp[1296095]:_ref(string)[938000] "dead after last mention" "maybe param" "temp"
              (1296097 'move' call_tmp[1296095](1296537 '.v' args[1291223] x3[1291896]))
              (1296103 call +=[38800] str[1291252] call_tmp[1296095])
            }
          }
        }
        label _continueLabel3[1296060]
        label _unused_continueLabel[1291650]
        label _breakLabel[1291652]
      }
      (1296542 'move' ret[1291211] str[1291252])
      (1882404 call chpl__autoDestroy[1688181] args[1291223])
      gotoReturn _end_stringify[1291877] _end_stringify[1291877]
    }
    (1882407 call chpl__autoDestroy[1688181] args[1291223])
    label _end_stringify[1291877]
    (1870930 '=' _retArg[1870928] ret[1291211])
    (1870934 return _void[55])
  }
  function stringify[1454373](const  ref arg _e0_args[1454375]:string[26], const in arg _e1_args[1454377]:uint(64)[115], const  ref arg _e2_args[1454379]:string[26], const in arg _e3_args[1454381]:int(64)[13], ref arg _retArg[1872818]:_ref(string)[938000]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1454397]:(string,uint(64),string,int(64))[1455072] "insert auto destroy"
    const-val ret_tmp[1872826]:(string,uint(64),string,int(64))[1455072] "temp"
    (1454402 call chpl__init_tuple[1455087] _e0_args[1454375] _e1_args[1454377] _e2_args[1454379] _e3_args[1454381] ret_tmp[1872826])
    (1872829 'move' args[1454397] ret_tmp[1872826])
    const-val ret[1454385]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1454426]:string[26] "dead at end of block" "insert auto destroy"
      (1454428 'move' str[1454426](1872822 call chpl__initCopy[981409] ""))
      {
        const-val i[1454433]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1454435 'move' i[1454433] 0)
        {
          {
            {
              ref call_tmp[1459251]:_ref(string)[938000] "dead after last mention" "maybe param" "temp"
              (1459253 'move' call_tmp[1459251](1460626 '.v' args[1454397] x0[1455064]))
              (1459259 call +=[38800] str[1454426] call_tmp[1459251])
            }
          }
        }
        label _continueLabel0[1459216]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1459827]:_ref(uint(64))[936662] "dead after last mention" "maybe param" "temp"
                    (1459829 'move' call_tmp[1459827](1460733 '.' args[1454397] x1[1455066]))
                    const-val call_tmp[1459834]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1460736]:uint(64)[115] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1460740 'move' coerce_tmp[1460736](1460738 'deref' call_tmp[1459827]))
                    const-val ret_tmp[1870682]:string[26] "temp"
                    (1459839 call _cast[1268526] coerce_tmp[1460736] ret_tmp[1870682])
                    (1870685 'move' call_tmp[1459834] ret_tmp[1870682])
                    (1459843 call +=[38800] str[1454426] call_tmp[1459834])
                    (1883759 call chpl__autoDestroy[1562275] call_tmp[1459834])
                  }
                }
              }
            }
          }
        }
        label _continueLabel1[1459561]
        {
          {
            {
              ref call_tmp[1459941]:_ref(string)[938000] "dead after last mention" "maybe param" "temp"
              (1459943 'move' call_tmp[1459941](1460774 '.v' args[1454397] x2[1455068]))
              (1459949 call +=[38800] str[1454426] call_tmp[1459941])
            }
          }
        }
        label _continueLabel2[1459906]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1460517]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                    (1460519 'move' call_tmp[1460517](1460881 '.' args[1454397] x3[1455070]))
                    const-val call_tmp[1460524]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1460884]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1460888 'move' coerce_tmp[1460884](1460886 'deref' call_tmp[1460517]))
                    const-val ret_tmp[1866886]:string[26] "temp"
                    (1460529 call _cast[1063214] coerce_tmp[1460884] ret_tmp[1866886])
                    (1866889 'move' call_tmp[1460524] ret_tmp[1866886])
                    (1460533 call +=[38800] str[1454426] call_tmp[1460524])
                    (1883763 call chpl__autoDestroy[1562275] call_tmp[1460524])
                  }
                }
              }
            }
          }
        }
        label _continueLabel3[1460251]
        label _unused_continueLabel[1454824]
        label _breakLabel[1454826]
      }
      (1460893 'move' ret[1454385] str[1454426])
      (1883766 call chpl__autoDestroy[1781397] args[1454397])
      gotoReturn _end_stringify[1455051] _end_stringify[1455051]
    }
    (1883769 call chpl__autoDestroy[1781397] args[1454397])
    label _end_stringify[1455051]
    (1872820 '=' _retArg[1872818] ret[1454385])
    (1872824 return _void[55])
  }
  function stringify[1157925](const  ref arg _e0_args[1157927]:string[26], const  ref arg _e1_args[1157929]:codepointIndex[28277], const  ref arg _e2_args[1157931]:string[26], ref arg _retArg[1868266]:_ref(string)[938000]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1157945]:(string,codepointIndex,string)[1158616] "insert auto destroy"
    const-val ret_tmp[1868272]:(string,codepointIndex,string)[1158616] "temp"
    (1157950 call chpl__init_tuple[1158629] _e0_args[1157927] _e1_args[1157929] _e2_args[1157931] ret_tmp[1868272])
    (1868275 'move' args[1157945] ret_tmp[1868272])
    const-val ret[1157935]:string[26] "dead after last mention" "RVV" "temp"
    {
      {
        val error[1845245]:Error[167984] "error variable" "temp"
        (1845430 'move' error[1845245] nil[44])
        const-val call_tmp[1158386]:file[235601] "dead at end of block" "maybe param" "temp"
        const-val default_arg_style[1164240]:iostyle[231865] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        (1164244 'move' default_arg_style[1164240](1164242 call openmem_default_style[1060620] error[1845245]))
        val errorExists[2171148]:bool[10] "temp"
        (2171153 'move' errorExists[2171148](2171150 '!=' error[1845245] nil[44]))
        if errorExists[2171148]
        {
          gotoErrorHandling handler[1845246] handler[1845246]
        }
        const-val ret_tmp[1865070]:file[235601] "temp"
        (1158391 call openmem[237646] default_arg_style[1164240] error[1845245] ret_tmp[1865070])
        (1865073 'move' call_tmp[1158386] ret_tmp[1865070])
        val errorExists[2171156]:bool[10] "temp"
        (2171161 'move' errorExists[2171156](2171158 '!=' error[1845245] nil[44]))
        if errorExists[2171156]
        {
          gotoErrorHandling handler[1845246] handler[1845246]
        }
        const-val f[1158392]:file[235601] "dead at end of block" "insert auto destroy"
        (1158394 'move' f[1158392] call_tmp[1158386])
        const-val call_tmp[1158409]:channel(true,dynamic,false)[1061008] "dead at end of block" "maybe param" "temp"
        const-val default_arg_start[1164269]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1164275 'move' default_arg_start[1164269](1164271 call writer_default_start[1061214] f[1158392] error[1845245]))
        val errorExists[2171164]:bool[10] "temp"
        (2171169 'move' errorExists[2171164](2171166 '!=' error[1845245] nil[44]))
        if errorExists[2171164]
        {
          {
            val error[1879665]:Error[167984] "error variable" "temp"
            (1879667 'move' error[1879665] nil[44])
            (1879671 call close[236045] f[1158392] error[1879665])
            val errorExists[2172628]:bool[10] "temp"
            (2172633 'move' errorExists[2172628](2172630 '!=' error[1879665] nil[44]))
            if errorExists[2172628]
            {
              gotoErrorHandling handler[1879682] handler[1879682]
            }
            label handler[1879682]
            const-val shouldHandleError[1879684]:bool[10] "temp"
            val errorExists[2172636]:bool[10] "temp"
            (2172641 'move' errorExists[2172636](2172638 '!=' error[1879665] nil[44]))
            (1879686 'move' shouldHandleError[1879684] errorExists[2172636])
            if shouldHandleError[1879684]
            {
              (1879693 call chpl_uncaught_error[170289] error[1879665])
            }
          }
          (1879696 call chpl__autoDestroy[1564124] f[1158392])
          gotoErrorHandling handler[1845246] handler[1845246]
        }
        const-val default_arg_end[1164279]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1164285 'move' default_arg_end[1164279](1164281 call writer_default_end[1061260] f[1158392] error[1845245]))
        val errorExists[2171172]:bool[10] "temp"
        (2171177 'move' errorExists[2171172](2171174 '!=' error[1845245] nil[44]))
        if errorExists[2171172]
        {
          {
            val error[1879701]:Error[167984] "error variable" "temp"
            (1879703 'move' error[1879701] nil[44])
            (1879707 call close[236045] f[1158392] error[1879701])
            val errorExists[2172644]:bool[10] "temp"
            (2172649 'move' errorExists[2172644](2172646 '!=' error[1879701] nil[44]))
            if errorExists[2172644]
            {
              gotoErrorHandling handler[1879718] handler[1879718]
            }
            label handler[1879718]
            const-val shouldHandleError[1879720]:bool[10] "temp"
            val errorExists[2172652]:bool[10] "temp"
            (2172657 'move' errorExists[2172652](2172654 '!=' error[1879701] nil[44]))
            (1879722 'move' shouldHandleError[1879720] errorExists[2172652])
            if shouldHandleError[1879720]
            {
              (1879729 call chpl_uncaught_error[170289] error[1879701])
            }
          }
          (1879732 call chpl__autoDestroy[1564124] f[1158392])
          gotoErrorHandling handler[1845246] handler[1845246]
        }
        const-val default_arg_hints[1164289]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1164295 'move' default_arg_hints[1164289](1164291 call writer_default_hints[1061323] f[1158392] error[1845245]))
        val errorExists[2171180]:bool[10] "temp"
        (2171185 'move' errorExists[2171180](2171182 '!=' error[1845245] nil[44]))
        if errorExists[2171180]
        {
          {
            val error[1879737]:Error[167984] "error variable" "temp"
            (1879739 'move' error[1879737] nil[44])
            (1879743 call close[236045] f[1158392] error[1879737])
            val errorExists[2172660]:bool[10] "temp"
            (2172665 'move' errorExists[2172660](2172662 '!=' error[1879737] nil[44]))
            if errorExists[2172660]
            {
              gotoErrorHandling handler[1879754] handler[1879754]
            }
            label handler[1879754]
            const-val shouldHandleError[1879756]:bool[10] "temp"
            val errorExists[2172668]:bool[10] "temp"
            (2172673 'move' errorExists[2172668](2172670 '!=' error[1879737] nil[44]))
            (1879758 'move' shouldHandleError[1879756] errorExists[2172668])
            if shouldHandleError[1879756]
            {
              (1879765 call chpl_uncaught_error[170289] error[1879737])
            }
          }
          (1879768 call chpl__autoDestroy[1564124] f[1158392])
          gotoErrorHandling handler[1845246] handler[1845246]
        }
        const-val default_arg_style[1164299]:iostyle[231865] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        (1164305 'move' default_arg_style[1164299](1164301 call writer_default_style[1061373] f[1158392] error[1845245]))
        val errorExists[2171188]:bool[10] "temp"
        (2171193 'move' errorExists[2171188](2171190 '!=' error[1845245] nil[44]))
        if errorExists[2171188]
        {
          {
            val error[1879773]:Error[167984] "error variable" "temp"
            (1879775 'move' error[1879773] nil[44])
            (1879779 call close[236045] f[1158392] error[1879773])
            val errorExists[2172676]:bool[10] "temp"
            (2172681 'move' errorExists[2172676](2172678 '!=' error[1879773] nil[44]))
            if errorExists[2172676]
            {
              gotoErrorHandling handler[1879790] handler[1879790]
            }
            label handler[1879790]
            const-val shouldHandleError[1879792]:bool[10] "temp"
            val errorExists[2172684]:bool[10] "temp"
            (2172689 'move' errorExists[2172684](2172686 '!=' error[1879773] nil[44]))
            (1879794 'move' shouldHandleError[1879792] errorExists[2172684])
            if shouldHandleError[1879792]
            {
              (1879801 call chpl_uncaught_error[170289] error[1879773])
            }
          }
          (1879804 call chpl__autoDestroy[1564124] f[1158392])
          gotoErrorHandling handler[1845246] handler[1845246]
        }
        const-val ret_tmp[1866682]:channel(true,dynamic,false)[1061008] "temp"
        (1158417 call writer[1060914] f[1158392] default_arg_start[1164269] default_arg_end[1164279] default_arg_hints[1164289] default_arg_style[1164299] error[1845245] ret_tmp[1866682])
        (1866685 'move' call_tmp[1158409] ret_tmp[1866682])
        val errorExists[2171196]:bool[10] "temp"
        (2171201 'move' errorExists[2171196](2171198 '!=' error[1845245] nil[44]))
        if errorExists[2171196]
        {
          {
            val error[1879809]:Error[167984] "error variable" "temp"
            (1879811 'move' error[1879809] nil[44])
            (1879815 call close[236045] f[1158392] error[1879809])
            val errorExists[2172692]:bool[10] "temp"
            (2172697 'move' errorExists[2172692](2172694 '!=' error[1879809] nil[44]))
            if errorExists[2172692]
            {
              gotoErrorHandling handler[1879826] handler[1879826]
            }
            label handler[1879826]
            const-val shouldHandleError[1879828]:bool[10] "temp"
            val errorExists[2172700]:bool[10] "temp"
            (2172705 'move' errorExists[2172700](2172702 '!=' error[1879809] nil[44]))
            (1879830 'move' shouldHandleError[1879828] errorExists[2172700])
            if shouldHandleError[1879828]
            {
              (1879837 call chpl_uncaught_error[170289] error[1879809])
            }
          }
          (1879840 call chpl__autoDestroy[1564124] f[1158392])
          gotoErrorHandling handler[1845246] handler[1845246]
        }
        const-val w[1158420]:channel(true,dynamic,false)[1061008] "dead at end of block" "insert auto destroy"
        (1158422 'move' w[1158420] call_tmp[1158409])
        ref _tuple_expand_tmp_0[1164311]:_ref(string)[938000] "dead after last mention" "temp"
        (1164317 'move' _tuple_expand_tmp_0[1164311](1164337 '.v' args[1157945] x0[1158610]))
        ref _tuple_expand_tmp_1[1164319]:_ref(codepointIndex)[948830] "dead after last mention" "temp"
        (1164325 'move' _tuple_expand_tmp_1[1164319](1164342 '.v' args[1157945] x1[1158612]))
        ref _tuple_expand_tmp_2[1164327]:_ref(string)[938000] "dead after last mention" "temp"
        (1164333 'move' _tuple_expand_tmp_2[1164327](1164347 '.v' args[1157945] x2[1158614]))
        const-val _return_tmp_[1834678]:bool[10] "dead after last mention" "temp"
        (1834680 'move' _return_tmp_[1834678](1158441 call write[1164572] w[1158420] _tuple_expand_tmp_0[1164311] _tuple_expand_tmp_1[1164319] _tuple_expand_tmp_2[1164327] error[1845245]))
        val errorExists[2171204]:bool[10] "temp"
        (2171209 'move' errorExists[2171204](2171206 '!=' error[1845245] nil[44]))
        if errorExists[2171204]
        {
          {
            val error[1879845]:Error[167984] "error variable" "temp"
            (1879847 'move' error[1879845] nil[44])
            (1879851 call close[1062423] w[1158420] error[1879845])
            val errorExists[2172708]:bool[10] "temp"
            (2172713 'move' errorExists[2172708](2172710 '!=' error[1879845] nil[44]))
            if errorExists[2172708]
            {
              gotoErrorHandling handler[1879862] handler[1879862]
            }
            label handler[1879862]
            const-val shouldHandleError[1879864]:bool[10] "temp"
            val errorExists[2172716]:bool[10] "temp"
            (2172721 'move' errorExists[2172716](2172718 '!=' error[1879845] nil[44]))
            (1879866 'move' shouldHandleError[1879864] errorExists[2172716])
            if shouldHandleError[1879864]
            {
              (1879873 call chpl_uncaught_error[170289] error[1879845])
            }
          }
          (1879876 call chpl__autoDestroy[1637077] w[1158420])
          {
            val error[1879881]:Error[167984] "error variable" "temp"
            (1879883 'move' error[1879881] nil[44])
            (1879887 call close[236045] f[1158392] error[1879881])
            val errorExists[2172724]:bool[10] "temp"
            (2172729 'move' errorExists[2172724](2172726 '!=' error[1879881] nil[44]))
            if errorExists[2172724]
            {
              gotoErrorHandling handler[1879898] handler[1879898]
            }
            label handler[1879898]
            const-val shouldHandleError[1879900]:bool[10] "temp"
            val errorExists[2172732]:bool[10] "temp"
            (2172737 'move' errorExists[2172732](2172734 '!=' error[1879881] nil[44]))
            (1879902 'move' shouldHandleError[1879900] errorExists[2172732])
            if shouldHandleError[1879900]
            {
              (1879909 call chpl_uncaught_error[170289] error[1879881])
            }
          }
          (1879912 call chpl__autoDestroy[1564124] f[1158392])
          gotoErrorHandling handler[1845246] handler[1845246]
        }
        const-val call_tmp[1158446]:int(64)[13] "dead at end of block" "maybe param" "temp"
        (1158448 'move' call_tmp[1158446](1158454 call offset[1080209] w[1158420]))
        const-val offset[1158455]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1158457 'move' offset[1158455] call_tmp[1158446])
        val call_tmp[1158461]:uint(8)[100] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1158468]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1158470 'move' call_tmp[1158468](1158473 call +[949727] offset[1158455]))
        val call_tmp[1158476]:c_ptr(uint(8))[937484] "dead at end of block" "maybe param" "temp"
        (1158478 'move' call_tmp[1158476](1158481 call c_malloc[1080364] call_tmp[1158468]))
        val buf[1158484]:c_ptr(uint(8))[937484] "dead at end of block" "insert auto destroy"
        (1158486 'move' buf[1158484](1175715 call chpl__initCopy[954091] call_tmp[1158476]))
        const-val call_tmp[1158490]:channel(false,dynamic,false)[1080743] "dead at end of block" "maybe param" "temp"
        const-val default_arg_start[1175738]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1175744 'move' default_arg_start[1175738](1175740 call reader_default_start[1080949] f[1158392] error[1845245]))
        val errorExists[2171212]:bool[10] "temp"
        (2171217 'move' errorExists[2171212](2171214 '!=' error[1845245] nil[44]))
        if errorExists[2171212]
        {
          {
            val error[1879917]:Error[167984] "error variable" "temp"
            (1879919 'move' error[1879917] nil[44])
            (1879923 call close[1062423] w[1158420] error[1879917])
            val errorExists[2172740]:bool[10] "temp"
            (2172745 'move' errorExists[2172740](2172742 '!=' error[1879917] nil[44]))
            if errorExists[2172740]
            {
              gotoErrorHandling handler[1879934] handler[1879934]
            }
            label handler[1879934]
            const-val shouldHandleError[1879936]:bool[10] "temp"
            val errorExists[2172748]:bool[10] "temp"
            (2172753 'move' errorExists[2172748](2172750 '!=' error[1879917] nil[44]))
            (1879938 'move' shouldHandleError[1879936] errorExists[2172748])
            if shouldHandleError[1879936]
            {
              (1879945 call chpl_uncaught_error[170289] error[1879917])
            }
          }
          (1879948 call chpl__autoDestroy[1637077] w[1158420])
          {
            val error[1879953]:Error[167984] "error variable" "temp"
            (1879955 'move' error[1879953] nil[44])
            (1879959 call close[236045] f[1158392] error[1879953])
            val errorExists[2172756]:bool[10] "temp"
            (2172761 'move' errorExists[2172756](2172758 '!=' error[1879953] nil[44]))
            if errorExists[2172756]
            {
              gotoErrorHandling handler[1879970] handler[1879970]
            }
            label handler[1879970]
            const-val shouldHandleError[1879972]:bool[10] "temp"
            val errorExists[2172764]:bool[10] "temp"
            (2172769 'move' errorExists[2172764](2172766 '!=' error[1879953] nil[44]))
            (1879974 'move' shouldHandleError[1879972] errorExists[2172764])
            if shouldHandleError[1879972]
            {
              (1879981 call chpl_uncaught_error[170289] error[1879953])
            }
          }
          (1879984 call chpl__autoDestroy[1564124] f[1158392])
          gotoErrorHandling handler[1845246] handler[1845246]
        }
        const-val default_arg_end[1175748]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1175754 'move' default_arg_end[1175748](1175750 call reader_default_end[1080995] f[1158392] error[1845245]))
        val errorExists[2171220]:bool[10] "temp"
        (2171225 'move' errorExists[2171220](2171222 '!=' error[1845245] nil[44]))
        if errorExists[2171220]
        {
          {
            val error[1879989]:Error[167984] "error variable" "temp"
            (1879991 'move' error[1879989] nil[44])
            (1879995 call close[1062423] w[1158420] error[1879989])
            val errorExists[2172772]:bool[10] "temp"
            (2172777 'move' errorExists[2172772](2172774 '!=' error[1879989] nil[44]))
            if errorExists[2172772]
            {
              gotoErrorHandling handler[1880006] handler[1880006]
            }
            label handler[1880006]
            const-val shouldHandleError[1880008]:bool[10] "temp"
            val errorExists[2172780]:bool[10] "temp"
            (2172785 'move' errorExists[2172780](2172782 '!=' error[1879989] nil[44]))
            (1880010 'move' shouldHandleError[1880008] errorExists[2172780])
            if shouldHandleError[1880008]
            {
              (1880017 call chpl_uncaught_error[170289] error[1879989])
            }
          }
          (1880020 call chpl__autoDestroy[1637077] w[1158420])
          {
            val error[1880025]:Error[167984] "error variable" "temp"
            (1880027 'move' error[1880025] nil[44])
            (1880031 call close[236045] f[1158392] error[1880025])
            val errorExists[2172788]:bool[10] "temp"
            (2172793 'move' errorExists[2172788](2172790 '!=' error[1880025] nil[44]))
            if errorExists[2172788]
            {
              gotoErrorHandling handler[1880042] handler[1880042]
            }
            label handler[1880042]
            const-val shouldHandleError[1880044]:bool[10] "temp"
            val errorExists[2172796]:bool[10] "temp"
            (2172801 'move' errorExists[2172796](2172798 '!=' error[1880025] nil[44]))
            (1880046 'move' shouldHandleError[1880044] errorExists[2172796])
            if shouldHandleError[1880044]
            {
              (1880053 call chpl_uncaught_error[170289] error[1880025])
            }
          }
          (1880056 call chpl__autoDestroy[1564124] f[1158392])
          gotoErrorHandling handler[1845246] handler[1845246]
        }
        const-val default_arg_hints[1175758]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1175764 'move' default_arg_hints[1175758](1175760 call reader_default_hints[1081058] f[1158392] error[1845245]))
        val errorExists[2171228]:bool[10] "temp"
        (2171233 'move' errorExists[2171228](2171230 '!=' error[1845245] nil[44]))
        if errorExists[2171228]
        {
          {
            val error[1880061]:Error[167984] "error variable" "temp"
            (1880063 'move' error[1880061] nil[44])
            (1880067 call close[1062423] w[1158420] error[1880061])
            val errorExists[2172804]:bool[10] "temp"
            (2172809 'move' errorExists[2172804](2172806 '!=' error[1880061] nil[44]))
            if errorExists[2172804]
            {
              gotoErrorHandling handler[1880078] handler[1880078]
            }
            label handler[1880078]
            const-val shouldHandleError[1880080]:bool[10] "temp"
            val errorExists[2172812]:bool[10] "temp"
            (2172817 'move' errorExists[2172812](2172814 '!=' error[1880061] nil[44]))
            (1880082 'move' shouldHandleError[1880080] errorExists[2172812])
            if shouldHandleError[1880080]
            {
              (1880089 call chpl_uncaught_error[170289] error[1880061])
            }
          }
          (1880092 call chpl__autoDestroy[1637077] w[1158420])
          {
            val error[1880097]:Error[167984] "error variable" "temp"
            (1880099 'move' error[1880097] nil[44])
            (1880103 call close[236045] f[1158392] error[1880097])
            val errorExists[2172820]:bool[10] "temp"
            (2172825 'move' errorExists[2172820](2172822 '!=' error[1880097] nil[44]))
            if errorExists[2172820]
            {
              gotoErrorHandling handler[1880114] handler[1880114]
            }
            label handler[1880114]
            const-val shouldHandleError[1880116]:bool[10] "temp"
            val errorExists[2172828]:bool[10] "temp"
            (2172833 'move' errorExists[2172828](2172830 '!=' error[1880097] nil[44]))
            (1880118 'move' shouldHandleError[1880116] errorExists[2172828])
            if shouldHandleError[1880116]
            {
              (1880125 call chpl_uncaught_error[170289] error[1880097])
            }
          }
          (1880128 call chpl__autoDestroy[1564124] f[1158392])
          gotoErrorHandling handler[1845246] handler[1845246]
        }
        const-val default_arg_style[1175768]:iostyle[231865] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        (1175774 'move' default_arg_style[1175768](1175770 call reader_default_style[1081105] f[1158392] error[1845245]))
        val errorExists[2171236]:bool[10] "temp"
        (2171241 'move' errorExists[2171236](2171238 '!=' error[1845245] nil[44]))
        if errorExists[2171236]
        {
          {
            val error[1880133]:Error[167984] "error variable" "temp"
            (1880135 'move' error[1880133] nil[44])
            (1880139 call close[1062423] w[1158420] error[1880133])
            val errorExists[2172836]:bool[10] "temp"
            (2172841 'move' errorExists[2172836](2172838 '!=' error[1880133] nil[44]))
            if errorExists[2172836]
            {
              gotoErrorHandling handler[1880150] handler[1880150]
            }
            label handler[1880150]
            const-val shouldHandleError[1880152]:bool[10] "temp"
            val errorExists[2172844]:bool[10] "temp"
            (2172849 'move' errorExists[2172844](2172846 '!=' error[1880133] nil[44]))
            (1880154 'move' shouldHandleError[1880152] errorExists[2172844])
            if shouldHandleError[1880152]
            {
              (1880161 call chpl_uncaught_error[170289] error[1880133])
            }
          }
          (1880164 call chpl__autoDestroy[1637077] w[1158420])
          {
            val error[1880169]:Error[167984] "error variable" "temp"
            (1880171 'move' error[1880169] nil[44])
            (1880175 call close[236045] f[1158392] error[1880169])
            val errorExists[2172852]:bool[10] "temp"
            (2172857 'move' errorExists[2172852](2172854 '!=' error[1880169] nil[44]))
            if errorExists[2172852]
            {
              gotoErrorHandling handler[1880186] handler[1880186]
            }
            label handler[1880186]
            const-val shouldHandleError[1880188]:bool[10] "temp"
            val errorExists[2172860]:bool[10] "temp"
            (2172865 'move' errorExists[2172860](2172862 '!=' error[1880169] nil[44]))
            (1880190 'move' shouldHandleError[1880188] errorExists[2172860])
            if shouldHandleError[1880188]
            {
              (1880197 call chpl_uncaught_error[170289] error[1880169])
            }
          }
          (1880200 call chpl__autoDestroy[1564124] f[1158392])
          gotoErrorHandling handler[1845246] handler[1845246]
        }
        const-val ret_tmp[1867072]:channel(false,dynamic,false)[1080743] "temp"
        (1158498 call reader[1080649] f[1158392] default_arg_start[1175738] default_arg_end[1175748] default_arg_hints[1175758] default_arg_style[1175768] error[1845245] ret_tmp[1867072])
        (1867075 'move' call_tmp[1158490] ret_tmp[1867072])
        val errorExists[2171244]:bool[10] "temp"
        (2171249 'move' errorExists[2171244](2171246 '!=' error[1845245] nil[44]))
        if errorExists[2171244]
        {
          {
            val error[1880205]:Error[167984] "error variable" "temp"
            (1880207 'move' error[1880205] nil[44])
            (1880211 call close[1062423] w[1158420] error[1880205])
            val errorExists[2172868]:bool[10] "temp"
            (2172873 'move' errorExists[2172868](2172870 '!=' error[1880205] nil[44]))
            if errorExists[2172868]
            {
              gotoErrorHandling handler[1880222] handler[1880222]
            }
            label handler[1880222]
            const-val shouldHandleError[1880224]:bool[10] "temp"
            val errorExists[2172876]:bool[10] "temp"
            (2172881 'move' errorExists[2172876](2172878 '!=' error[1880205] nil[44]))
            (1880226 'move' shouldHandleError[1880224] errorExists[2172876])
            if shouldHandleError[1880224]
            {
              (1880233 call chpl_uncaught_error[170289] error[1880205])
            }
          }
          (1880236 call chpl__autoDestroy[1637077] w[1158420])
          {
            val error[1880241]:Error[167984] "error variable" "temp"
            (1880243 'move' error[1880241] nil[44])
            (1880247 call close[236045] f[1158392] error[1880241])
            val errorExists[2172884]:bool[10] "temp"
            (2172889 'move' errorExists[2172884](2172886 '!=' error[1880241] nil[44]))
            if errorExists[2172884]
            {
              gotoErrorHandling handler[1880258] handler[1880258]
            }
            label handler[1880258]
            const-val shouldHandleError[1880260]:bool[10] "temp"
            val errorExists[2172892]:bool[10] "temp"
            (2172897 'move' errorExists[2172892](2172894 '!=' error[1880241] nil[44]))
            (1880262 'move' shouldHandleError[1880260] errorExists[2172892])
            if shouldHandleError[1880260]
            {
              (1880269 call chpl_uncaught_error[170289] error[1880241])
            }
          }
          (1880272 call chpl__autoDestroy[1564124] f[1158392])
          gotoErrorHandling handler[1845246] handler[1845246]
        }
        const-val r[1158501]:channel(false,dynamic,false)[1080743] "dead at end of block" "insert auto destroy"
        (1158503 'move' r[1158501] call_tmp[1158490])
        const-val call_tmp[1158518]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1158520 'move' call_tmp[1158518] offset[1158455])
        (1158530 call readBytes[1082900] r[1158501] buf[1158484] call_tmp[1158518] error[1845245])
        val errorExists[2171252]:bool[10] "temp"
        (2171257 'move' errorExists[2171252](2171254 '!=' error[1845245] nil[44]))
        if errorExists[2171252]
        {
          {
            val error[1880277]:Error[167984] "error variable" "temp"
            (1880279 'move' error[1880277] nil[44])
            (1880283 call close[1082155] r[1158501] error[1880277])
            val errorExists[2172900]:bool[10] "temp"
            (2172905 'move' errorExists[2172900](2172902 '!=' error[1880277] nil[44]))
            if errorExists[2172900]
            {
              gotoErrorHandling handler[1880294] handler[1880294]
            }
            label handler[1880294]
            const-val shouldHandleError[1880296]:bool[10] "temp"
            val errorExists[2172908]:bool[10] "temp"
            (2172913 'move' errorExists[2172908](2172910 '!=' error[1880277] nil[44]))
            (1880298 'move' shouldHandleError[1880296] errorExists[2172908])
            if shouldHandleError[1880296]
            {
              (1880305 call chpl_uncaught_error[170289] error[1880277])
            }
          }
          (1880308 call chpl__autoDestroy[1641331] r[1158501])
          {
            val error[1880313]:Error[167984] "error variable" "temp"
            (1880315 'move' error[1880313] nil[44])
            (1880319 call close[1062423] w[1158420] error[1880313])
            val errorExists[2172916]:bool[10] "temp"
            (2172921 'move' errorExists[2172916](2172918 '!=' error[1880313] nil[44]))
            if errorExists[2172916]
            {
              gotoErrorHandling handler[1880330] handler[1880330]
            }
            label handler[1880330]
            const-val shouldHandleError[1880332]:bool[10] "temp"
            val errorExists[2172924]:bool[10] "temp"
            (2172929 'move' errorExists[2172924](2172926 '!=' error[1880313] nil[44]))
            (1880334 'move' shouldHandleError[1880332] errorExists[2172924])
            if shouldHandleError[1880332]
            {
              (1880341 call chpl_uncaught_error[170289] error[1880313])
            }
          }
          (1880344 call chpl__autoDestroy[1637077] w[1158420])
          {
            val error[1880349]:Error[167984] "error variable" "temp"
            (1880351 'move' error[1880349] nil[44])
            (1880355 call close[236045] f[1158392] error[1880349])
            val errorExists[2172932]:bool[10] "temp"
            (2172937 'move' errorExists[2172932](2172934 '!=' error[1880349] nil[44]))
            if errorExists[2172932]
            {
              gotoErrorHandling handler[1880366] handler[1880366]
            }
            label handler[1880366]
            const-val shouldHandleError[1880368]:bool[10] "temp"
            val errorExists[2172940]:bool[10] "temp"
            (2172945 'move' errorExists[2172940](2172942 '!=' error[1880349] nil[44]))
            (1880370 'move' shouldHandleError[1880368] errorExists[2172940])
            if shouldHandleError[1880368]
            {
              (1880377 call chpl_uncaught_error[170289] error[1880349])
            }
          }
          (1880380 call chpl__autoDestroy[1564124] f[1158392])
          gotoErrorHandling handler[1845246] handler[1845246]
        }
        ref call_tmp[1158537]:_ref(uint(8))[936969] "dead after last mention" "maybe param" "temp"
        (1158539 'move' call_tmp[1158537](1158542 call this[954152] buf[1158484] offset[1158455]))
        const-val coerce_tmp[1175784]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1175790 'move' coerce_tmp[1175784](1175786 'cast' uint(8)[100] 0))
        (1158545 call =[435391] call_tmp[1158537] coerce_tmp[1175784])
        const-val call_tmp[1158551]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1158553 'move' call_tmp[1158551](1158556 call +[949727] offset[1158455]))
        const-val call_tmp[1158559]:string[26] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1862678]:string[26] "temp"
        (1158564 call createStringWithNewBuffer[30493] buf[1158484] offset[1158455] call_tmp[1158551] replace[173694] error[1845245] ret_tmp[1862678])
        (1862681 'move' call_tmp[1158559] ret_tmp[1862678])
        val errorExists[2171260]:bool[10] "temp"
        (2171265 'move' errorExists[2171260](2171262 '!=' error[1845245] nil[44]))
        if errorExists[2171260]
        {
          {
            val error[1880385]:Error[167984] "error variable" "temp"
            (1880387 'move' error[1880385] nil[44])
            (1880391 call close[1082155] r[1158501] error[1880385])
            val errorExists[2172948]:bool[10] "temp"
            (2172953 'move' errorExists[2172948](2172950 '!=' error[1880385] nil[44]))
            if errorExists[2172948]
            {
              gotoErrorHandling handler[1880402] handler[1880402]
            }
            label handler[1880402]
            const-val shouldHandleError[1880404]:bool[10] "temp"
            val errorExists[2172956]:bool[10] "temp"
            (2172961 'move' errorExists[2172956](2172958 '!=' error[1880385] nil[44]))
            (1880406 'move' shouldHandleError[1880404] errorExists[2172956])
            if shouldHandleError[1880404]
            {
              (1880413 call chpl_uncaught_error[170289] error[1880385])
            }
          }
          (1880416 call chpl__autoDestroy[1641331] r[1158501])
          {
            val error[1880421]:Error[167984] "error variable" "temp"
            (1880423 'move' error[1880421] nil[44])
            (1880427 call close[1062423] w[1158420] error[1880421])
            val errorExists[2172964]:bool[10] "temp"
            (2172969 'move' errorExists[2172964](2172966 '!=' error[1880421] nil[44]))
            if errorExists[2172964]
            {
              gotoErrorHandling handler[1880438] handler[1880438]
            }
            label handler[1880438]
            const-val shouldHandleError[1880440]:bool[10] "temp"
            val errorExists[2172972]:bool[10] "temp"
            (2172977 'move' errorExists[2172972](2172974 '!=' error[1880421] nil[44]))
            (1880442 'move' shouldHandleError[1880440] errorExists[2172972])
            if shouldHandleError[1880440]
            {
              (1880449 call chpl_uncaught_error[170289] error[1880421])
            }
          }
          (1880452 call chpl__autoDestroy[1637077] w[1158420])
          {
            val error[1880457]:Error[167984] "error variable" "temp"
            (1880459 'move' error[1880457] nil[44])
            (1880463 call close[236045] f[1158392] error[1880457])
            val errorExists[2172980]:bool[10] "temp"
            (2172985 'move' errorExists[2172980](2172982 '!=' error[1880457] nil[44]))
            if errorExists[2172980]
            {
              gotoErrorHandling handler[1880474] handler[1880474]
            }
            label handler[1880474]
            const-val shouldHandleError[1880476]:bool[10] "temp"
            val errorExists[2172988]:bool[10] "temp"
            (2172993 'move' errorExists[2172988](2172990 '!=' error[1880457] nil[44]))
            (1880478 'move' shouldHandleError[1880476] errorExists[2172988])
            if shouldHandleError[1880476]
            {
              (1880485 call chpl_uncaught_error[170289] error[1880457])
            }
          }
          (1880488 call chpl__autoDestroy[1564124] f[1158392])
          gotoErrorHandling handler[1845246] handler[1845246]
        }
        const-val ret[1158569]:string[26] "dead at end of block" "const" "insert auto destroy"
        (1158571 'move' ret[1158569] call_tmp[1158559])
        const-val coerce_tmp[1175795]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1175801 'move' coerce_tmp[1175795](1175797 'cast' c_void_ptr[149] buf[1158484]))
        (1158583 call c_free[207907] coerce_tmp[1175795])
        (1175805 'move' ret[1157935] ret[1158569])
        {
          val error[1880493]:Error[167984] "error variable" "temp"
          (1880495 'move' error[1880493] nil[44])
          (1880499 call close[1082155] r[1158501] error[1880493])
          val errorExists[2172996]:bool[10] "temp"
          (2173001 'move' errorExists[2172996](2172998 '!=' error[1880493] nil[44]))
          if errorExists[2172996]
          {
            gotoErrorHandling handler[1880510] handler[1880510]
          }
          label handler[1880510]
          const-val shouldHandleError[1880512]:bool[10] "temp"
          val errorExists[2173004]:bool[10] "temp"
          (2173009 'move' errorExists[2173004](2173006 '!=' error[1880493] nil[44]))
          (1880514 'move' shouldHandleError[1880512] errorExists[2173004])
          if shouldHandleError[1880512]
          {
            (1880521 call chpl_uncaught_error[170289] error[1880493])
          }
        }
        (1880524 call chpl__autoDestroy[1641331] r[1158501])
        {
          val error[1880529]:Error[167984] "error variable" "temp"
          (1880531 'move' error[1880529] nil[44])
          (1880535 call close[1062423] w[1158420] error[1880529])
          val errorExists[2173012]:bool[10] "temp"
          (2173017 'move' errorExists[2173012](2173014 '!=' error[1880529] nil[44]))
          if errorExists[2173012]
          {
            gotoErrorHandling handler[1880546] handler[1880546]
          }
          label handler[1880546]
          const-val shouldHandleError[1880548]:bool[10] "temp"
          val errorExists[2173020]:bool[10] "temp"
          (2173025 'move' errorExists[2173020](2173022 '!=' error[1880529] nil[44]))
          (1880550 'move' shouldHandleError[1880548] errorExists[2173020])
          if shouldHandleError[1880548]
          {
            (1880557 call chpl_uncaught_error[170289] error[1880529])
          }
        }
        (1880560 call chpl__autoDestroy[1637077] w[1158420])
        {
          val error[1880565]:Error[167984] "error variable" "temp"
          (1880567 'move' error[1880565] nil[44])
          (1880571 call close[236045] f[1158392] error[1880565])
          val errorExists[2173028]:bool[10] "temp"
          (2173033 'move' errorExists[2173028](2173030 '!=' error[1880565] nil[44]))
          if errorExists[2173028]
          {
            gotoErrorHandling handler[1880582] handler[1880582]
          }
          label handler[1880582]
          const-val shouldHandleError[1880584]:bool[10] "temp"
          val errorExists[2173036]:bool[10] "temp"
          (2173041 'move' errorExists[2173036](2173038 '!=' error[1880565] nil[44]))
          (1880586 'move' shouldHandleError[1880584] errorExists[2173036])
          if shouldHandleError[1880584]
          {
            (1880593 call chpl_uncaught_error[170289] error[1880565])
          }
        }
        (1880596 call chpl__autoDestroy[1564124] f[1158392])
        (1880599 call chpl__autoDestroy[1644097] args[1157945])
        gotoReturn _end_stringify[1158598] _end_stringify[1158598]
        label handler[1845246]
        const-val shouldHandleError[1845439]:bool[10] "temp"
        val errorExists[2171268]:bool[10] "temp"
        (2171273 'move' errorExists[2171268](2171270 '!=' error[1845245] nil[44]))
        (1845443 'move' shouldHandleError[1845439] errorExists[2171268])
        if shouldHandleError[1845439]
        {
          (1845436 call chpl_uncaught_error[170289] error[1845245])
        }
      }
    }
    (1880602 call chpl__autoDestroy[1644097] args[1157945])
    label _end_stringify[1158598]
    (1868268 '=' _retArg[1868266] ret[1157935])
    (1868270 return _void[55])
  }
  function stringify[1272554](const  ref arg _e0_args[1272556]:string[26], const in arg _e1_args[1272558]:int(64)[13], const  ref arg _e2_args[1272560]:string[26], ref arg _retArg[1870772]:_ref(string)[938000]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1272574]:(string,int(64),string)[1273245] "insert auto destroy"
    const-val ret_tmp[1870780]:(string,int(64),string)[1273245] "temp"
    (1272579 call chpl__init_tuple[1273258] _e0_args[1272556] _e1_args[1272558] _e2_args[1272560] ret_tmp[1870780])
    (1870783 'move' args[1272574] ret_tmp[1870780])
    const-val ret[1272564]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1272602]:string[26] "dead at end of block" "insert auto destroy"
      (1272604 'move' str[1272602](1870776 call chpl__initCopy[981409] ""))
      {
        const-val i[1272609]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1272611 'move' i[1272609] 0)
        {
          {
            {
              ref call_tmp[1276317]:_ref(string)[938000] "dead after last mention" "maybe param" "temp"
              (1276319 'move' call_tmp[1276317](1277347 '.v' args[1272574] x0[1273239]))
              (1276325 call +=[38800] str[1272602] call_tmp[1276317])
            }
          }
        }
        label _continueLabel0[1276282]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1276893]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                    (1276895 'move' call_tmp[1276893](1277454 '.' args[1272574] x1[1273241]))
                    const-val call_tmp[1276900]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1277457]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1277461 'move' coerce_tmp[1277457](1277459 'deref' call_tmp[1276893]))
                    const-val ret_tmp[1866844]:string[26] "temp"
                    (1276905 call _cast[1063214] coerce_tmp[1277457] ret_tmp[1866844])
                    (1866847 'move' call_tmp[1276900] ret_tmp[1866844])
                    (1276909 call +=[38800] str[1272602] call_tmp[1276900])
                    (1882315 call chpl__autoDestroy[1562275] call_tmp[1276900])
                  }
                }
              }
            }
          }
        }
        label _continueLabel1[1276627]
        {
          {
            {
              ref call_tmp[1277007]:_ref(string)[938000] "dead after last mention" "maybe param" "temp"
              (1277009 'move' call_tmp[1277007](1277495 '.v' args[1272574] x2[1273243]))
              (1277015 call +=[38800] str[1272602] call_tmp[1277007])
            }
          }
        }
        label _continueLabel2[1276972]
        label _unused_continueLabel[1273000]
        label _breakLabel[1273002]
      }
      (1277500 'move' ret[1272564] str[1272602])
      (1882318 call chpl__autoDestroy[1658230] args[1272574])
      gotoReturn _end_stringify[1273227] _end_stringify[1273227]
    }
    (1882321 call chpl__autoDestroy[1658230] args[1272574])
    label _end_stringify[1273227]
    (1870774 '=' _retArg[1870772] ret[1272564])
    (1870778 return _void[55])
  }
  function stringify[1213039](const  ref arg _e0_args[1213041]:string[26], const in arg _e1_args[1213043]:int(64)[13], ref arg _retArg[1868654]:_ref(string)[938000]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1213055]:(string,int(64))[1213722] "insert auto destroy"
    const-val ret_tmp[1868662]:(string,int(64))[1213722] "temp"
    (1213060 call chpl__init_tuple[1213733] _e0_args[1213041] _e1_args[1213043] ret_tmp[1868662])
    (1868665 'move' args[1213055] ret_tmp[1868662])
    const-val ret[1213047]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1213082]:string[26] "dead at end of block" "insert auto destroy"
      (1213084 'move' str[1213082](1868658 call chpl__initCopy[981409] ""))
      {
        const-val i[1213089]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1213091 'move' i[1213089] 0)
        {
          {
            {
              ref call_tmp[1216714]:_ref(string)[938000] "dead after last mention" "maybe param" "temp"
              (1216716 'move' call_tmp[1216714](1217399 '.v' args[1213055] x0[1213718]))
              (1216722 call +=[38800] str[1213082] call_tmp[1216714])
            }
          }
        }
        label _continueLabel0[1216679]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1217290]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                    (1217292 'move' call_tmp[1217290](1217506 '.' args[1213055] x1[1213720]))
                    const-val call_tmp[1217297]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1217509]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1217513 'move' coerce_tmp[1217509](1217511 'deref' call_tmp[1217290]))
                    const-val ret_tmp[1866814]:string[26] "temp"
                    (1217302 call _cast[1063214] coerce_tmp[1217509] ret_tmp[1866814])
                    (1866817 'move' call_tmp[1217297] ret_tmp[1866814])
                    (1217306 call +=[38800] str[1213082] call_tmp[1217297])
                    (1882000 call chpl__autoDestroy[1562275] call_tmp[1217297])
                  }
                }
              }
            }
          }
        }
        label _continueLabel1[1217024]
        label _unused_continueLabel[1213480]
        label _breakLabel[1213482]
      }
      (1217518 'move' ret[1213047] str[1213082])
      (1882003 call chpl__autoDestroy[1653009] args[1213055])
      gotoReturn _end_stringify[1213707] _end_stringify[1213707]
    }
    (1882006 call chpl__autoDestroy[1653009] args[1213055])
    label _end_stringify[1213707]
    (1868656 '=' _retArg[1868654] ret[1213047])
    (1868660 return _void[55])
  }
  function stringify[1279051](const  ref arg _e0_args[1279053]:string[26], const in arg _e1_args[1279055]:int(64)[13], const  ref arg _e2_args[1279057]:string[26], const in arg _e3_args[1279059]:int(64)[13], const  ref arg _e4_args[1279061]:string[26], ref arg _retArg[1870798]:_ref(string)[938000]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1279079]:(string,int(64),string,int(64),string)[1279758] "insert auto destroy"
    const-val ret_tmp[1870806]:(string,int(64),string,int(64),string)[1279758] "temp"
    (1279084 call chpl__init_tuple[1279775] _e0_args[1279053] _e1_args[1279055] _e2_args[1279057] _e3_args[1279059] _e4_args[1279061] ret_tmp[1870806])
    (1870809 'move' args[1279079] ret_tmp[1870806])
    const-val ret[1279065]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1279109]:string[26] "dead at end of block" "insert auto destroy"
      (1279111 'move' str[1279109](1870802 call chpl__initCopy[981409] ""))
      {
        const-val i[1279116]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1279118 'move' i[1279116] 0)
        {
          {
            {
              ref call_tmp[1283632]:_ref(string)[938000] "dead after last mention" "maybe param" "temp"
              (1283634 'move' call_tmp[1283632](1285352 '.v' args[1279079] x0[1279748]))
              (1283640 call +=[38800] str[1279109] call_tmp[1283632])
            }
          }
        }
        label _continueLabel0[1283597]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1284208]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                    (1284210 'move' call_tmp[1284208](1285459 '.' args[1279079] x1[1279750]))
                    const-val call_tmp[1284215]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1285462]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1285466 'move' coerce_tmp[1285462](1285464 'deref' call_tmp[1284208]))
                    const-val ret_tmp[1866850]:string[26] "temp"
                    (1284220 call _cast[1063214] coerce_tmp[1285462] ret_tmp[1866850])
                    (1866853 'move' call_tmp[1284215] ret_tmp[1866850])
                    (1284224 call +=[38800] str[1279109] call_tmp[1284215])
                    (1882331 call chpl__autoDestroy[1562275] call_tmp[1284215])
                  }
                }
              }
            }
          }
        }
        label _continueLabel1[1283942]
        {
          {
            {
              ref call_tmp[1284322]:_ref(string)[938000] "dead after last mention" "maybe param" "temp"
              (1284324 'move' call_tmp[1284322](1285500 '.v' args[1279079] x2[1279752]))
              (1284330 call +=[38800] str[1279109] call_tmp[1284322])
            }
          }
        }
        label _continueLabel2[1284287]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1284898]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                    (1284900 'move' call_tmp[1284898](1285607 '.' args[1279079] x3[1279754]))
                    const-val call_tmp[1284905]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1285610]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1285614 'move' coerce_tmp[1285610](1285612 'deref' call_tmp[1284898]))
                    const-val ret_tmp[1866856]:string[26] "temp"
                    (1284910 call _cast[1063214] coerce_tmp[1285610] ret_tmp[1866856])
                    (1866859 'move' call_tmp[1284905] ret_tmp[1866856])
                    (1284914 call +=[38800] str[1279109] call_tmp[1284905])
                    (1882335 call chpl__autoDestroy[1562275] call_tmp[1284905])
                  }
                }
              }
            }
          }
        }
        label _continueLabel3[1284632]
        {
          {
            {
              ref call_tmp[1285012]:_ref(string)[938000] "dead after last mention" "maybe param" "temp"
              (1285014 'move' call_tmp[1285012](1285648 '.v' args[1279079] x4[1279756]))
              (1285020 call +=[38800] str[1279109] call_tmp[1285012])
            }
          }
        }
        label _continueLabel4[1284977]
        label _unused_continueLabel[1279507]
        label _breakLabel[1279509]
      }
      (1285653 'move' ret[1279065] str[1279109])
      (1882338 call chpl__autoDestroy[1658566] args[1279079])
      gotoReturn _end_stringify[1279734] _end_stringify[1279734]
    }
    (1882341 call chpl__autoDestroy[1658566] args[1279079])
    label _end_stringify[1279734]
    (1870800 '=' _retArg[1870798] ret[1279065])
    (1870804 return _void[55])
  }
  function stringify[1337849](const  ref arg _e0_args[1337851]:string[26], const  ref arg _e1_args[1337853]:string[26], const in arg _e2_args[1337855]:int(64)[13], const  ref arg _e3_args[1337857]:string[26], const in arg _e4_args[1337859]:range(int(64),bounded,false)[1026875], ref arg _retArg[1871518]:_ref(string)[938000]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1337877]:(string,string,int(64),string,range(int(64),bounded,false))[1338556] "insert auto destroy"
    const-val ret_tmp[1871528]:(string,string,int(64),string,range(int(64),bounded,false))[1338556] "temp"
    (1337882 call chpl__init_tuple[1338573] _e0_args[1337851] _e1_args[1337853] _e2_args[1337855] _e3_args[1337857] _e4_args[1337859] ret_tmp[1871528])
    (1871531 'move' args[1337877] ret_tmp[1871528])
    const-val ret[1337863]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1337907]:string[26] "dead at end of block" "insert auto destroy"
      (1337909 'move' str[1337907](1871524 call chpl__initCopy[981409] ""))
      {
        const-val i[1337914]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1337916 'move' i[1337914] 0)
        {
          {
            {
              ref call_tmp[1341796]:_ref(string)[938000] "dead after last mention" "maybe param" "temp"
              (1341798 'move' call_tmp[1341796](1343516 '.v' args[1337877] x0[1338546]))
              (1341804 call +=[38800] str[1337907] call_tmp[1341796])
            }
          }
        }
        label _continueLabel0[1341761]
        {
          {
            {
              ref call_tmp[1342141]:_ref(string)[938000] "dead after last mention" "maybe param" "temp"
              (1342143 'move' call_tmp[1342141](1343550 '.v' args[1337877] x1[1338548]))
              (1342149 call +=[38800] str[1337907] call_tmp[1342141])
            }
          }
        }
        label _continueLabel1[1342106]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1342717]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                    (1342719 'move' call_tmp[1342717](1343657 '.' args[1337877] x2[1338550]))
                    const-val call_tmp[1342724]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1343660]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1343664 'move' coerce_tmp[1343660](1343662 'deref' call_tmp[1342717]))
                    const-val ret_tmp[1866862]:string[26] "temp"
                    (1342729 call _cast[1063214] coerce_tmp[1343660] ret_tmp[1866862])
                    (1866865 'move' call_tmp[1342724] ret_tmp[1866862])
                    (1342733 call +=[38800] str[1337907] call_tmp[1342724])
                    (1882829 call chpl__autoDestroy[1562275] call_tmp[1342724])
                  }
                }
              }
            }
          }
        }
        label _continueLabel2[1342451]
        {
          {
            {
              ref call_tmp[1342831]:_ref(string)[938000] "dead after last mention" "maybe param" "temp"
              (1342833 'move' call_tmp[1342831](1343698 '.v' args[1337877] x3[1338552]))
              (1342839 call +=[38800] str[1337907] call_tmp[1342831])
            }
          }
        }
        label _continueLabel3[1342796]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1343407]:_ref(range(int(64),bounded,false))[1026919] "dead after last mention" "maybe param" "temp"
                    (1343409 'move' call_tmp[1343407](1343798 '.' args[1337877] x4[1338554]))
                    const-val call_tmp[1343414]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1343801]:range(int(64),bounded,false)[1026875] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1343805 'move' coerce_tmp[1343801](1871522 call chpl__initCopy[1085067] call_tmp[1343407]))
                    const-val ret_tmp[1867678]:string[26] "temp"
                    (1343419 call _cast[1119498] coerce_tmp[1343801] ret_tmp[1867678])
                    (1867681 'move' call_tmp[1343414] ret_tmp[1867678])
                    (1343423 call +=[38800] str[1337907] call_tmp[1343414])
                    (1882833 call chpl__autoDestroy[1562275] call_tmp[1343414])
                    (1882836 call chpl__autoDestroy[1383553] coerce_tmp[1343801])
                  }
                }
              }
            }
          }
        }
        label _continueLabel4[1343141]
        label _unused_continueLabel[1338305]
        label _breakLabel[1338307]
      }
      (1343810 'move' ret[1337863] str[1337907])
      (1882839 call chpl__autoDestroy[1716560] args[1337877])
      gotoReturn _end_stringify[1338532] _end_stringify[1338532]
    }
    (1882842 call chpl__autoDestroy[1716560] args[1337877])
    label _end_stringify[1338532]
    (1871520 '=' _retArg[1871518] ret[1337863])
    (1871526 return _void[55])
  }
  function stringify[1399053](const  ref arg _e0_args[1399055]:string[26], const in arg _e1_args[1399057]:int(64)[13], const  ref arg _e2_args[1399059]:string[26], const in arg _e3_args[1399061]:int(64)[13], const  ref arg _e4_args[1399063]:string[26], const in arg _e5_args[1399065]:int(64)[13], ref arg _retArg[1872435]:_ref(string)[938000]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1399085]:(string,int(64),string,int(64),string,int(64))[1399768] "insert auto destroy"
    const-val ret_tmp[1872443]:(string,int(64),string,int(64),string,int(64))[1399768] "temp"
    (1399090 call chpl__init_tuple[1399787] _e0_args[1399055] _e1_args[1399057] _e2_args[1399059] _e3_args[1399061] _e4_args[1399063] _e5_args[1399065] ret_tmp[1872443])
    (1872446 'move' args[1399085] ret_tmp[1872443])
    const-val ret[1399069]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1399116]:string[26] "dead at end of block" "insert auto destroy"
      (1399118 'move' str[1399116](1872439 call chpl__initCopy[981409] ""))
      {
        const-val i[1399123]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1399125 'move' i[1399123] 0)
        {
          {
            {
              ref call_tmp[1403730]:_ref(string)[938000] "dead after last mention" "maybe param" "temp"
              (1403732 'move' call_tmp[1403730](1405795 '.v' args[1399085] x0[1399756]))
              (1403738 call +=[38800] str[1399116] call_tmp[1403730])
            }
          }
        }
        label _continueLabel0[1403695]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1404306]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                    (1404308 'move' call_tmp[1404306](1405902 '.' args[1399085] x1[1399758]))
                    const-val call_tmp[1404313]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1405905]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1405909 'move' coerce_tmp[1405905](1405907 'deref' call_tmp[1404306]))
                    const-val ret_tmp[1866868]:string[26] "temp"
                    (1404318 call _cast[1063214] coerce_tmp[1405905] ret_tmp[1866868])
                    (1866871 'move' call_tmp[1404313] ret_tmp[1866868])
                    (1404322 call +=[38800] str[1399116] call_tmp[1404313])
                    (1883325 call chpl__autoDestroy[1562275] call_tmp[1404313])
                  }
                }
              }
            }
          }
        }
        label _continueLabel1[1404040]
        {
          {
            {
              ref call_tmp[1404420]:_ref(string)[938000] "dead after last mention" "maybe param" "temp"
              (1404422 'move' call_tmp[1404420](1405943 '.v' args[1399085] x2[1399760]))
              (1404428 call +=[38800] str[1399116] call_tmp[1404420])
            }
          }
        }
        label _continueLabel2[1404385]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1404996]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                    (1404998 'move' call_tmp[1404996](1406050 '.' args[1399085] x3[1399762]))
                    const-val call_tmp[1405003]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1406053]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1406057 'move' coerce_tmp[1406053](1406055 'deref' call_tmp[1404996]))
                    const-val ret_tmp[1866874]:string[26] "temp"
                    (1405008 call _cast[1063214] coerce_tmp[1406053] ret_tmp[1866874])
                    (1866877 'move' call_tmp[1405003] ret_tmp[1866874])
                    (1405012 call +=[38800] str[1399116] call_tmp[1405003])
                    (1883329 call chpl__autoDestroy[1562275] call_tmp[1405003])
                  }
                }
              }
            }
          }
        }
        label _continueLabel3[1404730]
        {
          {
            {
              ref call_tmp[1405110]:_ref(string)[938000] "dead after last mention" "maybe param" "temp"
              (1405112 'move' call_tmp[1405110](1406091 '.v' args[1399085] x4[1399764]))
              (1405118 call +=[38800] str[1399116] call_tmp[1405110])
            }
          }
        }
        label _continueLabel4[1405075]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1405686]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
                    (1405688 'move' call_tmp[1405686](1406198 '.' args[1399085] x5[1399766]))
                    const-val call_tmp[1405693]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1406201]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1406205 'move' coerce_tmp[1406201](1406203 'deref' call_tmp[1405686]))
                    const-val ret_tmp[1866880]:string[26] "temp"
                    (1405698 call _cast[1063214] coerce_tmp[1406201] ret_tmp[1866880])
                    (1866883 'move' call_tmp[1405693] ret_tmp[1866880])
                    (1405702 call +=[38800] str[1399116] call_tmp[1405693])
                    (1883333 call chpl__autoDestroy[1562275] call_tmp[1405693])
                  }
                }
              }
            }
          }
        }
        label _continueLabel5[1405420]
        label _unused_continueLabel[1399514]
        label _breakLabel[1399516]
      }
      (1406210 'move' ret[1399069] str[1399116])
      (1883336 call chpl__autoDestroy[1718161] args[1399085])
      gotoReturn _end_stringify[1399741] _end_stringify[1399741]
    }
    (1883339 call chpl__autoDestroy[1718161] args[1399085])
    label _end_stringify[1399741]
    (1872437 '=' _retArg[1872435] ret[1399069])
    (1872441 return _void[55])
  }
  val _arg_to_proto_names[246582]:heap__tuple_6_star_string[2147108] "dead at end of block" "insert auto destroy" "private"
  function _ref(channel(true,dynamic,false))[1061017].write[1066017](const  ref arg this[1066023]:_ref(channel(true,dynamic,false))[1061017], const  ref arg _e0_args[1066025]:byteIndex[28173], ref arg error_out[1844423]:Error[167984]) : bool[10] throws "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val args[1066074]:1*byteIndex[1057142] "insert auto destroy"
    const-val ret_tmp[1866664]:1*byteIndex[1057142] "temp"
    (1066079 call chpl__init_tuple[1057160] _e0_args[1066025] ret_tmp[1866664])
    (1866667 'move' args[1066074] ret_tmp[1866664])
    val ret[1066029]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1066112]:locale[28] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1866982]:locale[28] "temp"
    (1066120 call getLocaleOfIoRequest[1066272] this[1066023] ret_tmp[1866982])
    (1866985 'move' call_tmp[1066112] ret_tmp[1866982])
    const-val origLocale[1066121]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (1066123 'move' origLocale[1066121] call_tmp[1066112])
    const-val tmp[1066127]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1066129]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (1066131 'move' call_tmp[1066129](1066134 call home[1061816] this[1066023]))
    const-val call_tmp[1066137]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1066479]:BaseLocale[91204] "dead after last mention" "temp"
    (1066484 'move' _locale_tmp_[1066479](1066481 call _value[89984] call_tmp[1066129]))
    (1066139 'move' call_tmp[1066137](1066141 '_wide_get_locale' _locale_tmp_[1066479]))
    (1066143 'move' tmp[1066127] call_tmp[1066137])
    val error[1844428]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1844430 'move' error[1844428] nil[44])
    val rvfDerefTmp[2145571]:channel(true,dynamic,false)[1061008] "temp"
    (2145575 'move' rvfDerefTmp[2145571](2145573 'deref' this[1066023]))
    val rvfDerefTmp[2145606]:locale[28] "temp"
    (2145609 'move' rvfDerefTmp[2145606] origLocale[1066121])
    val isdirect[2151564]:bool[10] "temp"
    (2151569 'move' isdirect[2151564](2151566 call chpl_doDirectExecuteOn[187469] tmp[1066127]))
    if isdirect[2151564]
    {
      (2151573 call on_fn[1066150] rvfDerefTmp[2145571] args[1066074] rvfDerefTmp[2145606] error[1844428])
    }
    {
      val _args_foron_fn[2151597]:_class_localson_fn[2151583] "temp"
      (2151601 'move' _args_foron_fn[2151597](2151599 'stack allocate class' _class_localson_fn[2151583]))
      (2151603 '.=' _args_foron_fn[2151597] _0_tmp[2151586] tmp[1066127])
      (2151607 '.=' _args_foron_fn[2151597] _1_rvfDerefTmp[2151588] rvfDerefTmp[2145571])
      ref tmp[2151611]:1*byteIndex[1057142] "temp"
      (2151615 'move' tmp[2151611](2151613 'set reference' args[1066074]))
      (2151617 '.=' _args_foron_fn[2151597] _2_args[2151590] tmp[2151611])
      (2151621 '.=' _args_foron_fn[2151597] _3_rvfDerefTmp[2151592] rvfDerefTmp[2145606])
      ref tmp[2151625]:Error[167984] "temp"
      (2151629 'move' tmp[2151625](2151627 'set reference' error[1844428]))
      (2151631 '.=' _args_foron_fn[2151597] _4_error[2151594] tmp[2151625])
      val _args_vforon_fn[2151635]:c_void_ptr[149] "temp"
      (2151639 'move' _args_vforon_fn[2151635](2151637 'cast_to_void_star' _args_foron_fn[2151597]))
      val _args_sizeon_fn[2151641]:int(64)[13] "temp"
      (2151645 'move' _args_sizeon_fn[2151641](2151643 'sizeof_bundle' _class_localson_fn[2151583]))
      on(2151701 call wrapon_fn[2151647] tmp[1066127] _args_vforon_fn[2151635] _args_sizeon_fn[2151641] _args_foron_fn[2151597])
    }
    val errorExists[2170780]:bool[10] "temp"
    (2170785 'move' errorExists[2170780](2170782 '!=' error[1844428] nil[44]))
    if errorExists[2170780]
    {
      (1844434 '=' error_out[1844423] error[1844428])
      (1878841 call chpl__autoDestroy[1562339] origLocale[1066121])
      (1878844 call chpl__autoDestroy[1636015] args[1066074])
      gotoErrorHandlingReturn _endwrite[1844425] _endwrite[1844425]
    }
    {
    }
    (1066257 'move' ret[1066029] 1)
    (1878847 call chpl__autoDestroy[1562339] origLocale[1066121])
    (1878850 call chpl__autoDestroy[1636015] args[1066074])
    label _endwrite[1844425]
    (1066262 return ret[1066029])
  }
  function _ref(channel(true,dynamic,false))[1061017].write[1164572](const  ref arg this[1164578]:_ref(channel(true,dynamic,false))[1061017], const  ref arg _e0_args[1164580]:string[26], const  ref arg _e1_args[1164582]:codepointIndex[28277], const  ref arg _e2_args[1164584]:string[26], ref arg error_out[1845447]:Error[167984]) : bool[10] throws "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val args[1164890]:(string,codepointIndex,string)[1158616] "insert auto destroy"
    const-val ret_tmp[1868278]:(string,codepointIndex,string)[1158616] "temp"
    (1164895 call chpl__init_tuple[1158629] _e0_args[1164580] _e1_args[1164582] _e2_args[1164584] ret_tmp[1868278])
    (1868281 'move' args[1164890] ret_tmp[1868278])
    val ret[1164588]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1164930]:locale[28] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1866994]:locale[28] "temp"
    (1164938 call getLocaleOfIoRequest[1066272] this[1164578] ret_tmp[1866994])
    (1866997 'move' call_tmp[1164930] ret_tmp[1866994])
    const-val origLocale[1164939]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (1164941 'move' origLocale[1164939] call_tmp[1164930])
    const-val tmp[1164945]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1164947]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (1164949 'move' call_tmp[1164947](1164952 call home[1061816] this[1164578]))
    const-val call_tmp[1164955]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1165092]:BaseLocale[91204] "dead after last mention" "temp"
    (1165097 'move' _locale_tmp_[1165092](1165094 call _value[89984] call_tmp[1164947]))
    (1164957 'move' call_tmp[1164955](1164959 '_wide_get_locale' _locale_tmp_[1165092]))
    (1164961 'move' tmp[1164945] call_tmp[1164955])
    val error[1845452]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1845454 'move' error[1845452] nil[44])
    val rvfDerefTmp[2145794]:channel(true,dynamic,false)[1061008] "temp"
    (2145798 'move' rvfDerefTmp[2145794](2145796 'deref' this[1164578]))
    val rvfDerefTmp[2145857]:locale[28] "temp"
    (2145860 'move' rvfDerefTmp[2145857] origLocale[1164939])
    val isdirect[2152921]:bool[10] "temp"
    (2152926 'move' isdirect[2152921](2152923 call chpl_doDirectExecuteOn[187469] tmp[1164945]))
    if isdirect[2152921]
    {
      (2152930 call on_fn[1164968] rvfDerefTmp[2145794] args[1164890] rvfDerefTmp[2145857] error[1845452])
    }
    {
      val _args_foron_fn[2152954]:_class_localson_fn[2152940] "temp"
      (2152958 'move' _args_foron_fn[2152954](2152956 'stack allocate class' _class_localson_fn[2152940]))
      (2152960 '.=' _args_foron_fn[2152954] _0_tmp[2152943] tmp[1164945])
      (2152964 '.=' _args_foron_fn[2152954] _1_rvfDerefTmp[2152945] rvfDerefTmp[2145794])
      ref tmp[2152968]:(string,codepointIndex,string)[1158616] "temp"
      (2152972 'move' tmp[2152968](2152970 'set reference' args[1164890]))
      (2152974 '.=' _args_foron_fn[2152954] _2_args[2152947] tmp[2152968])
      (2152978 '.=' _args_foron_fn[2152954] _3_rvfDerefTmp[2152949] rvfDerefTmp[2145857])
      ref tmp[2152982]:Error[167984] "temp"
      (2152986 'move' tmp[2152982](2152984 'set reference' error[1845452]))
      (2152988 '.=' _args_foron_fn[2152954] _4_error[2152951] tmp[2152982])
      val _args_vforon_fn[2152992]:c_void_ptr[149] "temp"
      (2152996 'move' _args_vforon_fn[2152992](2152994 'cast_to_void_star' _args_foron_fn[2152954]))
      val _args_sizeon_fn[2152998]:int(64)[13] "temp"
      (2153002 'move' _args_sizeon_fn[2152998](2153000 'sizeof_bundle' _class_localson_fn[2152940]))
      on(2153058 call wrapon_fn[2153004] tmp[1164945] _args_vforon_fn[2152992] _args_sizeon_fn[2152998] _args_foron_fn[2152954])
    }
    val errorExists[2171276]:bool[10] "temp"
    (2171281 'move' errorExists[2171276](2171278 '!=' error[1845452] nil[44]))
    if errorExists[2171276]
    {
      (1845458 '=' error_out[1845447] error[1845452])
      (1880605 call chpl__autoDestroy[1562339] origLocale[1164939])
      (1880608 call chpl__autoDestroy[1644097] args[1164890])
      gotoErrorHandlingReturn _endwrite[1845449] _endwrite[1845449]
    }
    {
    }
    (1165075 'move' ret[1164588] 1)
    (1880611 call chpl__autoDestroy[1562339] origLocale[1164939])
    (1880614 call chpl__autoDestroy[1644097] args[1164890])
    label _endwrite[1845449]
    (1165080 return ret[1164588])
  }
  function _ref(channel(true,dynamic,false))[1061017].write[1180036](const  ref arg this[1180042]:_ref(channel(true,dynamic,false))[1061017], const  ref arg _e0_args[1180044]:string[26], const  ref arg _e1_args[1180046]:codepointIndex[28277], const  ref arg _e2_args[1180048]:string[26], const in arg _e3_args[1180050]:int(64)[13], ref arg error_out[1845944]:Error[167984]) : bool[10] throws "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val args[1180368]:(string,codepointIndex,string,int(64))[1176581] "insert auto destroy"
    const-val ret_tmp[1868336]:(string,codepointIndex,string,int(64))[1176581] "temp"
    (1180373 call chpl__init_tuple[1176596] _e0_args[1180044] _e1_args[1180046] _e2_args[1180048] _e3_args[1180050] ret_tmp[1868336])
    (1868339 'move' args[1180368] ret_tmp[1868336])
    val ret[1180054]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1180409]:locale[28] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1867000]:locale[28] "temp"
    (1180417 call getLocaleOfIoRequest[1066272] this[1180042] ret_tmp[1867000])
    (1867003 'move' call_tmp[1180409] ret_tmp[1867000])
    const-val origLocale[1180418]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (1180420 'move' origLocale[1180418] call_tmp[1180409])
    const-val tmp[1180424]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1180426]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (1180428 'move' call_tmp[1180426](1180431 call home[1061816] this[1180042]))
    const-val call_tmp[1180434]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1180577]:BaseLocale[91204] "dead after last mention" "temp"
    (1180582 'move' _locale_tmp_[1180577](1180579 call _value[89984] call_tmp[1180426]))
    (1180436 'move' call_tmp[1180434](1180438 '_wide_get_locale' _locale_tmp_[1180577]))
    (1180440 'move' tmp[1180424] call_tmp[1180434])
    val error[1845949]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1845951 'move' error[1845949] nil[44])
    val rvfDerefTmp[2145881]:channel(true,dynamic,false)[1061008] "temp"
    (2145885 'move' rvfDerefTmp[2145881](2145883 'deref' this[1180042]))
    val rvfDerefTmp[2145958]:locale[28] "temp"
    (2145961 'move' rvfDerefTmp[2145958] origLocale[1180418])
    val isdirect[2153063]:bool[10] "temp"
    (2153068 'move' isdirect[2153063](2153065 call chpl_doDirectExecuteOn[187469] tmp[1180424]))
    if isdirect[2153063]
    {
      (2153072 call on_fn[1180447] rvfDerefTmp[2145881] args[1180368] rvfDerefTmp[2145958] error[1845949])
    }
    {
      val _args_foron_fn[2153096]:_class_localson_fn[2153082] "temp"
      (2153100 'move' _args_foron_fn[2153096](2153098 'stack allocate class' _class_localson_fn[2153082]))
      (2153102 '.=' _args_foron_fn[2153096] _0_tmp[2153085] tmp[1180424])
      (2153106 '.=' _args_foron_fn[2153096] _1_rvfDerefTmp[2153087] rvfDerefTmp[2145881])
      ref tmp[2153110]:(string,codepointIndex,string,int(64))[1176581] "temp"
      (2153114 'move' tmp[2153110](2153112 'set reference' args[1180368]))
      (2153116 '.=' _args_foron_fn[2153096] _2_args[2153089] tmp[2153110])
      (2153120 '.=' _args_foron_fn[2153096] _3_rvfDerefTmp[2153091] rvfDerefTmp[2145958])
      ref tmp[2153124]:Error[167984] "temp"
      (2153128 'move' tmp[2153124](2153126 'set reference' error[1845949]))
      (2153130 '.=' _args_foron_fn[2153096] _4_error[2153093] tmp[2153124])
      val _args_vforon_fn[2153134]:c_void_ptr[149] "temp"
      (2153138 'move' _args_vforon_fn[2153134](2153136 'cast_to_void_star' _args_foron_fn[2153096]))
      val _args_sizeon_fn[2153140]:int(64)[13] "temp"
      (2153144 'move' _args_sizeon_fn[2153140](2153142 'sizeof_bundle' _class_localson_fn[2153082]))
      on(2153200 call wrapon_fn[2153146] tmp[1180424] _args_vforon_fn[2153134] _args_sizeon_fn[2153140] _args_foron_fn[2153096])
    }
    val errorExists[2171556]:bool[10] "temp"
    (2171561 'move' errorExists[2171556](2171558 '!=' error[1845949] nil[44]))
    if errorExists[2171556]
    {
      (1845955 '=' error_out[1845944] error[1845949])
      (1881668 call chpl__autoDestroy[1562339] origLocale[1180418])
      (1881671 call chpl__autoDestroy[1644418] args[1180368])
      gotoErrorHandlingReturn _endwrite[1845946] _endwrite[1845946]
    }
    {
    }
    (1180554 'move' ret[1180054] 1)
    (1881674 call chpl__autoDestroy[1562339] origLocale[1180418])
    (1881677 call chpl__autoDestroy[1644418] args[1180368])
    label _endwrite[1845946]
    (1180559 return ret[1180054])
  }
  function _ref(channel(true,dynamic,true))[1021895].write[1543379](const  ref arg this[1543385]:_ref(channel(true,dynamic,true))[1021895], const  ref arg _e0_args[1543387]:string[26], const  ref arg _e1_args[1543389]:ioNewline[238722], ref arg error_out[1846872]:Error[167984]) : bool[10] throws "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val args[1543403]:(string,ioNewline)[1543605] "insert auto destroy"
    const-val ret_tmp[1874341]:(string,ioNewline)[1543605] "temp"
    (1543408 call chpl__init_tuple[1543616] _e0_args[1543387] _e1_args[1543389] ret_tmp[1874341])
    (1874344 'move' args[1543403] ret_tmp[1874341])
    val ret[1543393]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1543442]:locale[28] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1874353]:locale[28] "temp"
    (1543450 call getLocaleOfIoRequest[1543665] this[1543385] ret_tmp[1874353])
    (1874356 'move' call_tmp[1543442] ret_tmp[1874353])
    const-val origLocale[1543451]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (1543453 'move' origLocale[1543451] call_tmp[1543442])
    const-val tmp[1543457]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1543459]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (1543461 'move' call_tmp[1543459](1543464 call home[1023103] this[1543385]))
    const-val call_tmp[1543467]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1543802]:BaseLocale[91204] "dead after last mention" "temp"
    (1543807 'move' _locale_tmp_[1543802](1543804 call _value[89984] call_tmp[1543459]))
    (1543469 'move' call_tmp[1543467](1543471 '_wide_get_locale' _locale_tmp_[1543802]))
    (1543473 'move' tmp[1543457] call_tmp[1543467])
    val error[1846877]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1846879 'move' error[1846877] nil[44])
    val rvfDerefTmp[2146233]:channel(true,dynamic,true)[1021886] "temp"
    (2146237 'move' rvfDerefTmp[2146233](2146235 'deref' this[1543385]))
    val rvfDerefTmp[2146282]:locale[28] "temp"
    (2146285 'move' rvfDerefTmp[2146282] origLocale[1543451])
    val isdirect[2157786]:bool[10] "temp"
    (2157791 'move' isdirect[2157786](2157788 call chpl_doDirectExecuteOn[187469] tmp[1543457]))
    if isdirect[2157786]
    {
      (2157795 call on_fn[1543480] rvfDerefTmp[2146233] args[1543403] rvfDerefTmp[2146282] error[1846877])
    }
    {
      val _args_foron_fn[2157819]:_class_localson_fn[2157805] "temp"
      (2157823 'move' _args_foron_fn[2157819](2157821 'stack allocate class' _class_localson_fn[2157805]))
      (2157825 '.=' _args_foron_fn[2157819] _0_tmp[2157808] tmp[1543457])
      (2157829 '.=' _args_foron_fn[2157819] _1_rvfDerefTmp[2157810] rvfDerefTmp[2146233])
      ref tmp[2157833]:(string,ioNewline)[1543605] "temp"
      (2157837 'move' tmp[2157833](2157835 'set reference' args[1543403]))
      (2157839 '.=' _args_foron_fn[2157819] _2_args[2157812] tmp[2157833])
      (2157843 '.=' _args_foron_fn[2157819] _3_rvfDerefTmp[2157814] rvfDerefTmp[2146282])
      ref tmp[2157847]:Error[167984] "temp"
      (2157851 'move' tmp[2157847](2157849 'set reference' error[1846877]))
      (2157853 '.=' _args_foron_fn[2157819] _4_error[2157816] tmp[2157847])
      val _args_vforon_fn[2157857]:c_void_ptr[149] "temp"
      (2157861 'move' _args_vforon_fn[2157857](2157859 'cast_to_void_star' _args_foron_fn[2157819]))
      val _args_sizeon_fn[2157863]:int(64)[13] "temp"
      (2157867 'move' _args_sizeon_fn[2157863](2157865 'sizeof_bundle' _class_localson_fn[2157805]))
      on(2157923 call wrapon_fn[2157869] tmp[1543457] _args_vforon_fn[2157857] _args_sizeon_fn[2157863] _args_foron_fn[2157819])
    }
    val errorExists[2172004]:bool[10] "temp"
    (2172009 'move' errorExists[2172004](2172006 '!=' error[1846877] nil[44]))
    if errorExists[2172004]
    {
      (1846883 '=' error_out[1846872] error[1846877])
      (1884567 call chpl__autoDestroy[1562339] origLocale[1543451])
      (1884570 call chpl__autoDestroy[1784257] args[1543403])
      gotoErrorHandlingReturn _endwrite[1846874] _endwrite[1846874]
    }
    {
    }
    (1543587 'move' ret[1543393] 1)
    (1884573 call chpl__autoDestroy[1562339] origLocale[1543451])
    (1884576 call chpl__autoDestroy[1784257] args[1543403])
    label _endwrite[1846874]
    (1543592 return ret[1543393])
  }
  function _ref(channel(true,dynamic,true))[1021895].writeln[1543234](const  ref arg this[1543240]:_ref(channel(true,dynamic,true))[1021895], const  ref arg _e0_args[1543242]:string[26], ref arg error_out[1846853]:Error[167984]) : bool[10] throws "expanded varargs" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    val ret[1543246]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1543293]:ioNewline[238722] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1543319]:ioNewline[238722] "dead after last mention" "temp"
    const-val default_arg_skipWhitespaceOnly[1543371]:bool[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    (1543375 'move' default_arg_skipWhitespaceOnly[1543371](1543373 call init_default_skipWhitespaceOnly[1543339]))
    (1543322 call init[893730] initTemp[1543319] default_arg_skipWhitespaceOnly[1543371])
    (1543295 'move' call_tmp[1543293] initTemp[1543319])
    const-val call_tmp[1543299]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val error[1846858]:Error[167984] "error variable" "temp"
    (1846860 'move' error[1846858] nil[44])
    (1543301 'move' call_tmp[1543299](1543307 call write[1543379] this[1543240] _e0_args[1543242] call_tmp[1543293] error[1846858]))
    val errorExists[2171996]:bool[10] "temp"
    (2172001 'move' errorExists[2171996](2171998 '!=' error[1846858] nil[44]))
    if errorExists[2171996]
    {
      (1846864 '=' error_out[1846853] error[1846858])
      (1884561 call chpl__autoDestroy[1564268] call_tmp[1543293])
      gotoErrorHandlingReturn _endwriteln[1846855] _endwriteln[1846855]
    }
    (1548408 'move' ret[1543246] call_tmp[1543299])
    (1884564 call chpl__autoDestroy[1564268] call_tmp[1543293])
    label _endwriteln[1846855]
    (1543315 return ret[1543246])
  }
  function _ref(channel(true,dynamic,false))[1061017].close[1062423](const  ref arg this[1062429]:_ref(channel(true,dynamic,false))[1061017], ref arg error_out[1844265]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    const-val call_tmp[1062435]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1062437 'move' call_tmp[1062435](1062440 call ENOERR[223675]))
    val err[1062441]:syserr[223605] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1062581]:syserr[223605] "dead at end of block" "initialized later" "temp"
    (1065784 call =[224154] init_coerce_tmp[1062581] call_tmp[1062435])
    (1062443 'move' err[1062441] init_coerce_tmp[1062581])
    ref call_tmp[1062448]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "temp"
    (1062450 'move' call_tmp[1062448](1062453 call _channel_internal[1061850] this[1062429]))
    const-val call_tmp[1062456]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1062630]:qio_channel_ptr_t[231486] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1062634 'move' coerce_tmp[1062630](1062632 'deref' call_tmp[1062448]))
    (1062458 'move' call_tmp[1062456](1062461 call is_c_nil[1062588] coerce_tmp[1062630]))
    const-val call_tmp[1062463]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1062465 'move' call_tmp[1062463] call_tmp[1062456])
    if call_tmp[1062463]
    {
      const-val call_tmp[1062472]:owned SystemError[1000299] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1062645]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1062651 'move' coerce_tmp[1062645](1062647 'cast' int(64)[13] EINVAL[224480]))
      const-val ret_tmp[1866168]:owned SystemError[1000299] "temp"
      (1062480 call fromSyserr[1017174] coerce_tmp[1062645] "cannot close invalid channel" ret_tmp[1866168])
      (1866171 'move' call_tmp[1062472] ret_tmp[1866168])
      val call_tmp[1062483]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1062654]:owned Error[966519] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1866102]:owned Error[966519] "temp"
      (1062656 call _cast[1015808] call_tmp[1062472] ret_tmp[1866102])
      (1866105 'move' coerce_tmp[1062654] ret_tmp[1866102])
      const-val _formal_tmp_in_err[1062833]:owned Error[966519] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1062837 'move' _formal_tmp_in_err[1062833] coerce_tmp[1062654])
      (1062485 'move' call_tmp[1062483](1062488 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1062833]))
      {
        val castedError[1844270]:Error[167984] "temp"
        (1844276 'move' castedError[1844270] call_tmp[1062483])
        (1844278 '=' error_out[1844265] castedError[1844270])
        gotoErrorHandlingReturn _endclose[1844267] _endclose[1844267]
      }
    }
    const-val tmp[1062493]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1062495]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (1062497 'move' call_tmp[1062495](1062500 call home[1061816] this[1062429]))
    const-val call_tmp[1062503]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1062843]:BaseLocale[91204] "dead after last mention" "temp"
    (1062848 'move' _locale_tmp_[1062843](1062845 call _value[89984] call_tmp[1062495]))
    (1062505 'move' call_tmp[1062503](1062507 '_wide_get_locale' _locale_tmp_[1062843]))
    (1062509 'move' tmp[1062493] call_tmp[1062503])
    val rvfDerefTmp[2145557]:channel(true,dynamic,false)[1061008] "temp"
    (2145561 'move' rvfDerefTmp[2145557](2145559 'deref' this[1062429]))
    val isdirect[2151304]:bool[10] "temp"
    (2151309 'move' isdirect[2151304](2151306 call chpl_doDirectExecuteOn[187469] tmp[1062493]))
    if isdirect[2151304]
    {
      (2151313 call on_fn[1062516] rvfDerefTmp[2145557] err[1062441])
    }
    {
      val _args_foron_fn[2151331]:_class_localson_fn[2151321] "temp"
      (2151335 'move' _args_foron_fn[2151331](2151333 'stack allocate class' _class_localson_fn[2151321]))
      (2151337 '.=' _args_foron_fn[2151331] _0_tmp[2151324] tmp[1062493])
      (2151341 '.=' _args_foron_fn[2151331] _1_rvfDerefTmp[2151326] rvfDerefTmp[2145557])
      ref tmp[2151345]:syserr[223605] "temp"
      (2151349 'move' tmp[2151345](2151347 'set reference' err[1062441]))
      (2151351 '.=' _args_foron_fn[2151331] _2_err[2151328] tmp[2151345])
      val _args_vforon_fn[2151355]:c_void_ptr[149] "temp"
      (2151359 'move' _args_vforon_fn[2151355](2151357 'cast_to_void_star' _args_foron_fn[2151331]))
      val _args_sizeon_fn[2151361]:int(64)[13] "temp"
      (2151365 'move' _args_sizeon_fn[2151361](2151363 'sizeof_bundle' _class_localson_fn[2151321]))
      on(2151405 call wrapon_fn[2151367] tmp[1062493] _args_vforon_fn[2151355] _args_sizeon_fn[2151361] _args_foron_fn[2151331])
    }
    {
    }
    const-val call_tmp[1062556]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1062558 'move' call_tmp[1062556](1062561 call _cond_test[224002] err[1062441]))
    if call_tmp[1062556]
    {
      {
        val error[1844282]:Error[167984] "error variable" "temp"
        (1844291 'move' error[1844282] nil[44])
        (1062570 call _ch_ioerror[1062926] this[1062429] err[1062441] "in channel.close" error[1844282])
        val errorExists[2170716]:bool[10] "temp"
        (2170721 'move' errorExists[2170716](2170718 '!=' error[1844282] nil[44]))
        if errorExists[2170716]
        {
          gotoErrorHandling handler[1844283] handler[1844283]
        }
        label handler[1844283]
        const-val shouldHandleError[1844302]:bool[10] "temp"
        val errorExists[2170724]:bool[10] "temp"
        (2170729 'move' errorExists[2170724](2170726 '!=' error[1844282] nil[44]))
        (1844306 'move' shouldHandleError[1844302] errorExists[2170724])
        if shouldHandleError[1844302]
        {
          (1844298 '=' error_out[1844265] error[1844282])
          gotoErrorHandlingReturn _endclose[1844267] _endclose[1844267]
        }
      }
    }
    label _endclose[1844267]
    (1062577 return _void[55])
  }
  function _ref(channel(false,dynamic,false))[1080752].close[1082155](const  ref arg this[1082161]:_ref(channel(false,dynamic,false))[1080752], ref arg error_out[1845061]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    const-val call_tmp[1082167]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1082169 'move' call_tmp[1082167](1082172 call ENOERR[223675]))
    val err[1082173]:syserr[223605] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1082313]:syserr[223605] "dead at end of block" "initialized later" "temp"
    (1082893 call =[224154] init_coerce_tmp[1082313] call_tmp[1082167])
    (1082175 'move' err[1082173] init_coerce_tmp[1082313])
    ref call_tmp[1082180]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "temp"
    (1082182 'move' call_tmp[1082180](1082185 call _channel_internal[1081582] this[1082161]))
    const-val call_tmp[1082188]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1082320]:qio_channel_ptr_t[231486] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1082324 'move' coerce_tmp[1082320](1082322 'deref' call_tmp[1082180]))
    (1082190 'move' call_tmp[1082188](1082193 call is_c_nil[1062588] coerce_tmp[1082320]))
    const-val call_tmp[1082195]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1082197 'move' call_tmp[1082195] call_tmp[1082188])
    if call_tmp[1082195]
    {
      const-val call_tmp[1082204]:owned SystemError[1000299] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1082329]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1082335 'move' coerce_tmp[1082329](1082331 'cast' int(64)[13] EINVAL[224480]))
      const-val ret_tmp[1866180]:owned SystemError[1000299] "temp"
      (1082212 call fromSyserr[1017174] coerce_tmp[1082329] "cannot close invalid channel" ret_tmp[1866180])
      (1866183 'move' call_tmp[1082204] ret_tmp[1866180])
      val call_tmp[1082215]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1082338]:owned Error[966519] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1866120]:owned Error[966519] "temp"
      (1082340 call _cast[1015808] call_tmp[1082204] ret_tmp[1866120])
      (1866123 'move' coerce_tmp[1082338] ret_tmp[1866120])
      const-val _formal_tmp_in_err[1082517]:owned Error[966519] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1082521 'move' _formal_tmp_in_err[1082517] coerce_tmp[1082338])
      (1082217 'move' call_tmp[1082215](1082220 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1082517]))
      {
        val castedError[1845066]:Error[167984] "temp"
        (1845072 'move' castedError[1845066] call_tmp[1082215])
        (1845074 '=' error_out[1845061] castedError[1845066])
        gotoErrorHandlingReturn _endclose[1845063] _endclose[1845063]
      }
    }
    const-val tmp[1082225]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1082227]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (1082229 'move' call_tmp[1082227](1082232 call home[1081548] this[1082161]))
    const-val call_tmp[1082235]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1082527]:BaseLocale[91204] "dead after last mention" "temp"
    (1082532 'move' _locale_tmp_[1082527](1082529 call _value[89984] call_tmp[1082227]))
    (1082237 'move' call_tmp[1082235](1082239 '_wide_get_locale' _locale_tmp_[1082527]))
    (1082241 'move' tmp[1082225] call_tmp[1082235])
    val rvfDerefTmp[2145735]:channel(false,dynamic,false)[1080743] "temp"
    (2145739 'move' rvfDerefTmp[2145735](2145737 'deref' this[1082161]))
    val isdirect[2152525]:bool[10] "temp"
    (2152530 'move' isdirect[2152525](2152527 call chpl_doDirectExecuteOn[187469] tmp[1082225]))
    if isdirect[2152525]
    {
      (2152534 call on_fn[1082248] rvfDerefTmp[2145735] err[1082173])
    }
    {
      val _args_foron_fn[2152552]:_class_localson_fn[2152542] "temp"
      (2152556 'move' _args_foron_fn[2152552](2152554 'stack allocate class' _class_localson_fn[2152542]))
      (2152558 '.=' _args_foron_fn[2152552] _0_tmp[2152545] tmp[1082225])
      (2152562 '.=' _args_foron_fn[2152552] _1_rvfDerefTmp[2152547] rvfDerefTmp[2145735])
      ref tmp[2152566]:syserr[223605] "temp"
      (2152570 'move' tmp[2152566](2152568 'set reference' err[1082173]))
      (2152572 '.=' _args_foron_fn[2152552] _2_err[2152549] tmp[2152566])
      val _args_vforon_fn[2152576]:c_void_ptr[149] "temp"
      (2152580 'move' _args_vforon_fn[2152576](2152578 'cast_to_void_star' _args_foron_fn[2152552]))
      val _args_sizeon_fn[2152582]:int(64)[13] "temp"
      (2152586 'move' _args_sizeon_fn[2152582](2152584 'sizeof_bundle' _class_localson_fn[2152542]))
      on(2152626 call wrapon_fn[2152588] tmp[1082225] _args_vforon_fn[2152576] _args_sizeon_fn[2152582] _args_foron_fn[2152552])
    }
    {
    }
    const-val call_tmp[1082288]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1082290 'move' call_tmp[1082288](1082293 call _cond_test[224002] err[1082173]))
    if call_tmp[1082288]
    {
      {
        val error[1845078]:Error[167984] "error variable" "temp"
        (1845087 'move' error[1845078] nil[44])
        (1082302 call _ch_ioerror[1082610] this[1082161] err[1082173] "in channel.close" error[1845078])
        val errorExists[2171076]:bool[10] "temp"
        (2171081 'move' errorExists[2171076](2171078 '!=' error[1845078] nil[44]))
        if errorExists[2171076]
        {
          gotoErrorHandling handler[1845079] handler[1845079]
        }
        label handler[1845079]
        const-val shouldHandleError[1845098]:bool[10] "temp"
        val errorExists[2171084]:bool[10] "temp"
        (2171089 'move' errorExists[2171084](2171086 '!=' error[1845078] nil[44]))
        (1845102 'move' shouldHandleError[1845098] errorExists[2171084])
        if shouldHandleError[1845098]
        {
          (1845094 '=' error_out[1845061] error[1845078])
          gotoErrorHandlingReturn _endclose[1845063] _endclose[1845063]
        }
      }
    }
    label _endclose[1845063]
    (1082309 return _void[55])
  }
  function _ref(channel(false,dynamic,false))[1080752].readBytes[1082900](const  ref arg this[1082906]:_ref(channel(false,dynamic,false))[1080752], const in arg x[1082908]:c_ptr(uint(8))[937484], const in arg len[1082912]:int(64)[13], ref arg error_out[1845187]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1082920]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1864072]:locale[28] "temp"
    (1082925 call here[90438] ret_tmp[1864072])
    (1864075 'move' call_tmp[1082920] ret_tmp[1864072])
    ref call_tmp[1082926]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
    (1082928 'move' call_tmp[1082926](1082931 call home[1081548] this[1082906]))
    const-val call_tmp[1082934]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1082936 'move' call_tmp[1082934](1082939 call !=[782971] call_tmp[1082920] call_tmp[1082926]))
    const-val call_tmp[1082942]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1082944 'move' call_tmp[1082942] call_tmp[1082934])
    if call_tmp[1082942]
    {
      const-val call_tmp[1082951]:owned IllegalArgumentError[1064619] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      val new_temp[1083108]:IllegalArgumentError[168246] "dead after last mention" "temp"
      (1083110 'move' new_temp[1083108](1083095 call _new[1064168] "bad remote channel.readBytes"))
      const-val initTemp[1083117]:owned IllegalArgumentError[1064619] "dead after last mention" "delay instantiation" "temp"
      (1083120 call init[1064270] initTemp[1083117] new_temp[1083108])
      (1082953 'move' call_tmp[1082951] initTemp[1083117])
      val call_tmp[1082960]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1083134]:owned Error[966519] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1866916]:owned Error[966519] "temp"
      (1083136 call _cast[1064791] call_tmp[1082951] ret_tmp[1866916])
      (1866919 'move' coerce_tmp[1083134] ret_tmp[1866916])
      const-val _formal_tmp_in_err[1083313]:owned Error[966519] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1083317 'move' _formal_tmp_in_err[1083313] coerce_tmp[1083134])
      (1082962 'move' call_tmp[1082960](1082965 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1083313]))
      {
        val castedError[1845192]:Error[167984] "temp"
        (1845198 'move' castedError[1845192] call_tmp[1082960])
        (1845200 '=' error_out[1845187] castedError[1845192])
        (1878999 call chpl__autoDestroy[1562339] call_tmp[1082920])
        gotoErrorHandlingReturn _endreadBytes[1845189] _endreadBytes[1845189]
      }
    }
    (1879002 call chpl__autoDestroy[1562339] call_tmp[1082920])
    ref call_tmp[1082970]:_ref(qio_channel_ptr_t)[936945] "dead at end of block" "maybe param" "temp"
    (1082972 'move' call_tmp[1082970](1082975 call _channel_internal[1081582] this[1082906]))
    const-val call_tmp[1082978]:syserr[223605] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1083370]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1083376 'move' coerce_tmp[1083370](1083372 'cast' int(32)[95] 0))
    const-val coerce_tmp[1083378]:qio_channel_ptr_t[231486] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1083382 'move' coerce_tmp[1083378](1083380 'deref' call_tmp[1082970]))
    (1082980 'move' call_tmp[1082978](1082983 call qio_channel_read_amt[1083344] coerce_tmp[1083370] coerce_tmp[1083378] x[1082908] len[1082912]))
    const-val err[1082988]:syserr[223605] "dead at end of block" "insert auto destroy"
    (1082990 'move' err[1082988](1083385 call chpl__initCopy[964546] call_tmp[1082978]))
    const-val call_tmp[1082994]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1082996 'move' call_tmp[1082994](1082999 call _cond_test[224002] err[1082988]))
    if call_tmp[1082994]
    {
      {
        val error[1845204]:Error[167984] "error variable" "temp"
        (1845213 'move' error[1845204] nil[44])
        (1083008 call _ch_ioerror[1082610] this[1082906] err[1082988] "in channel.readBytes" error[1845204])
        val errorExists[2171132]:bool[10] "temp"
        (2171137 'move' errorExists[2171132](2171134 '!=' error[1845204] nil[44]))
        if errorExists[2171132]
        {
          gotoErrorHandling handler[1845205] handler[1845205]
        }
        label handler[1845205]
        const-val shouldHandleError[1845224]:bool[10] "temp"
        val errorExists[2171140]:bool[10] "temp"
        (2171145 'move' errorExists[2171140](2171142 '!=' error[1845204] nil[44]))
        (1845228 'move' shouldHandleError[1845224] errorExists[2171140])
        if shouldHandleError[1845224]
        {
          (1845220 '=' error_out[1845187] error[1845204])
          gotoErrorHandlingReturn _endreadBytes[1845189] _endreadBytes[1845189]
        }
      }
    }
    label _endreadBytes[1845189]
    (1083015 return _void[55])
  }
  const-val stdin[250229]:channel(false,dynamic,true)[985688] "dead at end of block" "const" "insert auto destroy" "split inited"
  const-val stdout[250256]:channel(true,dynamic,true)[1021886] "dead at end of block" "const" "insert auto destroy" "split inited"
  const-val stderr[250285]:channel(true,dynamic,true)[1021886] "dead at end of block" "const" "insert auto destroy" "split inited"
  const FTYPE_NONE[250515]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const FTYPE_LUSTRE[250520]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const-val call_tmp[721926]:6*string[985112] "dead at end of block" "maybe param" "temp"
  const-val call_tmp[724057]:file[235601] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
  const-val call_tmp[724064]:channel(false,dynamic,true)[985688] "dead at end of block" "maybe param" "temp"
  const-val default_arg_start[1016958]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_end[1017022]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_hints[1017070]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_style[1017648]:iostyle[231865] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
  const-val call_tmp[724069]:_file[155] "dead at end of block" "expr temp" "maybe param" "temp"
  const-val call_tmp[724074]:file[235601] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
  const-val call_tmp[724081]:channel(true,dynamic,true)[1021886] "dead at end of block" "maybe param" "temp"
  const-val default_arg_start[1022533]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_end[1022597]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_hints[1022648]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_style[1022685]:iostyle[231865] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
  const-val call_tmp[724086]:_file[155] "dead at end of block" "expr temp" "maybe param" "temp"
  const-val call_tmp[724091]:file[235601] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
  const-val call_tmp[724098]:channel(true,dynamic,true)[1021886] "dead at end of block" "maybe param" "temp"
  const-val default_arg_start[1023969]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_end[1023980]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_hints[1023991]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_style[1024002]:iostyle[231865] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
  function on_fn[935658](ref arg this[1841210]:_ref(file)[948795]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[715648]:_ref(qio_file_ptr_t)[936934] "dead after last mention" "maybe param" "temp"
      (715651 'move' call_tmp[715648](396435 call _file_internal[887036] this[1841210]))
      const-val coerce_tmp[985743]:qio_file_ptr_t[231460] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (985747 'move' coerce_tmp[985743](985745 'deref' call_tmp[715648]))
      (235926 call qio_file_release[232659] coerce_tmp[985743])
      ref call_tmp[715655]:_ref(qio_file_ptr_t)[936934] "dead after last mention" "maybe param" "temp"
      (715658 'move' call_tmp[715655](235930 call _file_internal[887036] this[1841210]))
      (235934 call =[859833] call_tmp[715655] QIO_FILE_PTR_NULL[231463])
    }
    (935665 return _void[55])
  }
  function on_fn[935667](const in arg this[1841212]:file[235601], ref arg ret[1841214]:_ref(iostyle)[967611], ref arg error_out[1843452]:Error[167984]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1843456]:Error[167984] "error variable" "temp"
        (1843465 'move' error[1843456] nil[44])
        ref rvfRerefTmp[2145246]:_ref(file)[948795] "temp"
        (2145250 'move' rvfRerefTmp[2145246](2145247 'set reference' this[1841212]))
        (236004 call checkAssumingLocal[235789] rvfRerefTmp[2145246] error[1843456])
        val errorExists[2170324]:bool[10] "temp"
        (2170329 'move' errorExists[2170324](2170326 '!=' error[1843456] nil[44]))
        if errorExists[2170324]
        {
          gotoErrorHandling handler[1843457] handler[1843457]
        }
        label handler[1843457]
        const-val shouldHandleError[1843476]:bool[10] "temp"
        val errorExists[2170332]:bool[10] "temp"
        (2170337 'move' errorExists[2170332](2170334 '!=' error[1843456] nil[44]))
        (1843480 'move' shouldHandleError[1843476] errorExists[2170332])
        if shouldHandleError[1843476]
        {
          (1843472 '=' error_out[1843452] error[1843456])
          gotoErrorHandlingReturn _endon_fn[1843454] _endon_fn[1843454]
        }
      }
      val local_style[236010]:iostyle[231865] "dead at end of block" "insert auto destroy"
      ref call_tmp[715688]:_ref(qio_file_ptr_t)[936934] "dead after last mention" "maybe param" "temp"
      ref rvfRerefTmp[2145239]:_ref(file)[948795] "temp"
      (2145243 'move' rvfRerefTmp[2145239](2145240 'set reference' this[1841212]))
      (715691 'move' call_tmp[715688](396445 call _file_internal[887036] rvfRerefTmp[2145239]))
      const-val coerce_tmp[1017632]:qio_file_ptr_t[231460] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1017636 'move' coerce_tmp[1017632](1017634 'deref' call_tmp[715688]))
      (236018 call qio_file_get_style[232842] coerce_tmp[1017632] local_style[236010])
      (236022 call =[879150] ret[1841214] local_style[236010])
    }
    label _endon_fn[1843454]
    (935674 return _void[55])
  }
  function on_fn[935676](const in arg this[1841216]:file[235601], ref arg err[1841218]:_ref(syserr)[948893]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[715741]:_ref(qio_file_ptr_t)[936934] "dead after last mention" "maybe param" "temp"
      ref rvfRerefTmp[2145260]:_ref(file)[948795] "temp"
      (2145264 'move' rvfRerefTmp[2145260](2145261 'set reference' this[1841216]))
      (715744 'move' call_tmp[715741](396464 call _file_internal[887036] rvfRerefTmp[2145260]))
      const-val call_tmp[715746]:syserr[223605] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1060894]:qio_file_ptr_t[231460] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1060898 'move' coerce_tmp[1060894](1060896 'deref' call_tmp[715741]))
      (715749 'move' call_tmp[715746](236086 call qio_file_close[232769] coerce_tmp[1060894]))
      (236087 call =[224133] err[1841218] call_tmp[715746])
    }
    (935683 return _void[55])
  }
  function on_fn[935694](const in arg this[1841220]:file[235601], ref arg err[1841222]:_ref(syserr)[948893], ref arg ret[1841224]:_ref(string)[938000], ref arg error_out[1843484]:Error[167984]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1843488]:Error[167984] "error variable" "temp"
        (1843497 'move' error[1843488] nil[44])
        ref rvfRerefTmp[2145288]:_ref(file)[948795] "temp"
        (2145292 'move' rvfRerefTmp[2145288](2145289 'set reference' this[1841220]))
        (236262 call checkAssumingLocal[235789] rvfRerefTmp[2145288] error[1843488])
        val errorExists[2170340]:bool[10] "temp"
        (2170345 'move' errorExists[2170340](2170342 '!=' error[1843488] nil[44]))
        if errorExists[2170340]
        {
          gotoErrorHandling handler[1843489] handler[1843489]
        }
        label handler[1843489]
        const-val shouldHandleError[1843508]:bool[10] "temp"
        val errorExists[2170348]:bool[10] "temp"
        (2170353 'move' errorExists[2170348](2170350 '!=' error[1843488] nil[44]))
        (1843512 'move' shouldHandleError[1843508] errorExists[2170348])
        if shouldHandleError[1843508]
        {
          (1843504 '=' error_out[1843484] error[1843488])
          gotoErrorHandlingReturn _endon_fn[1843486] _endon_fn[1843486]
        }
      }
      val tmp[236268]:c_string[19] "dead at end of block" "insert auto destroy"
      (1021528 'move' tmp[236268](1021526 'cast' c_string[19] nil[44]))
      val tmp2[236273]:c_string[19] "dead at end of block" "insert auto destroy"
      (1021533 'move' tmp2[236273](1021531 'cast' c_string[19] nil[44]))
      ref call_tmp[715827]:_ref(qio_file_ptr_t)[936934] "dead after last mention" "maybe param" "temp"
      ref rvfRerefTmp[2145274]:_ref(file)[948795] "temp"
      (2145278 'move' rvfRerefTmp[2145274](2145275 'set reference' this[1841220]))
      (715830 'move' call_tmp[715827](396488 call _file_internal[887036] rvfRerefTmp[2145274]))
      const-val call_tmp[715832]:syserr[223605] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1019180]:qio_file_ptr_t[231460] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1019184 'move' coerce_tmp[1019180](1019182 'deref' call_tmp[715827]))
      (715835 'move' call_tmp[715832](236282 call qio_file_path[233700] coerce_tmp[1019180] tmp[236268]))
      (236283 call =[224133] err[1841222] call_tmp[715832])
      const-val call_tmp[715837]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val tmp[1841960]:syserr[223605] "temp"
      (1841963 'move' tmp[1841960](1841961 'deref' err[1841222]))
      (715840 'move' call_tmp[715837](236287 call ![223979] tmp[1841960]))
      const-val call_tmp[715842]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (715845 'move' call_tmp[715842] call_tmp[715837])
      if call_tmp[715842]
      {
        ref call_tmp[715849]:_ref(qio_file_ptr_t)[936934] "dead after last mention" "maybe param" "temp"
        ref rvfRerefTmp[2145281]:_ref(file)[948795] "temp"
        (2145285 'move' rvfRerefTmp[2145281](2145282 'set reference' this[1841220]))
        (715852 'move' call_tmp[715849](396496 call _file_internal[887036] rvfRerefTmp[2145281]))
        const-val call_tmp[715854]:syserr[223605] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1019193]:qio_file_ptr_t[231460] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1019197 'move' coerce_tmp[1019193](1019195 'deref' call_tmp[715849]))
        (715857 'move' call_tmp[715854](236295 call qio_shortest_path[233716] coerce_tmp[1019193] tmp2[236273] tmp[236268]))
        (236296 call =[224133] err[1841222] call_tmp[715854])
      }
      (236307 call chpl_free_c_string[22709] tmp[236268])
      const-val call_tmp[715859]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val tmp[1841966]:syserr[223605] "temp"
      (1841969 'move' tmp[1841966](1841967 'deref' err[1841222]))
      (715862 'move' call_tmp[715859](236310 call ![223979] tmp[1841966]))
      const-val call_tmp[715864]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (715867 'move' call_tmp[715864] call_tmp[715859])
      if call_tmp[715864]
      {
        const-val call_tmp[715869]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val default_arg_length[1019219]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        val error[1843517]:Error[167984] "error variable" "temp"
        (1843519 'move' error[1843517] nil[44])
        (1019224 'move' default_arg_length[1019219](1019221 call createStringWithNewBuffer_default_length[964107] tmp2[236273] error[1843517]))
        val errorExists[2170356]:bool[10] "temp"
        (2170361 'move' errorExists[2170356](2170358 '!=' error[1843517] nil[44]))
        if errorExists[2170356]
        {
          (1843523 '=' error_out[1843484] error[1843517])
          gotoErrorHandlingReturn _endon_fn[1843486] _endon_fn[1843486]
        }
        val error[1843532]:Error[167984] "error variable" "temp"
        (1843534 'move' error[1843532] nil[44])
        const-val ret_tmp[1862594]:string[26] "temp"
        (236321 call createStringWithNewBuffer[30413] tmp2[236273] default_arg_length[1019219] escape[173698] error[1843532] ret_tmp[1862594])
        (1862597 'move' call_tmp[715869] ret_tmp[1862594])
        val errorExists[2170364]:bool[10] "temp"
        (2170369 'move' errorExists[2170364](2170366 '!=' error[1843532] nil[44]))
        if errorExists[2170364]
        {
          (1843538 '=' error_out[1843484] error[1843532])
          gotoErrorHandlingReturn _endon_fn[1843486] _endon_fn[1843486]
        }
        (236322 call =[38272] ret[1841224] call_tmp[715869])
        (1877405 call chpl__autoDestroy[1562275] call_tmp[715869])
      }
      (236333 call chpl_free_c_string[22709] tmp2[236273])
    }
    label _endon_fn[1843486]
    (935701 return _void[55])
  }
  function on_fn[1016756](const in arg style[1841232]:iostyle[231865], const in arg end[1841234]:int(64)[13], const in arg this[1841236]:file[235601], ref arg ret[1841238]:_ref(channel(false,dynamic,true))[985697], const in arg hints[1841240]:int(32)[95], ref arg err[1841242]:_ref(syserr)[948893], const in arg start[1841244]:int(64)[13], ref arg error_out[1843655]:Error[167984]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1843659]:Error[167984] "error variable" "temp"
        (1843668 'move' error[1843659] nil[44])
        ref rvfRerefTmp[2145317]:_ref(file)[948795] "temp"
        (2145321 'move' rvfRerefTmp[2145317](2145318 'set reference' this[1841236]))
        (1016767 call checkAssumingLocal[235789] rvfRerefTmp[2145317] error[1843659])
        val errorExists[2170420]:bool[10] "temp"
        (2170425 'move' errorExists[2170420](2170422 '!=' error[1843659] nil[44]))
        if errorExists[2170420]
        {
          gotoErrorHandling handler[1843660] handler[1843660]
        }
        label handler[1843660]
        const-val shouldHandleError[1843679]:bool[10] "temp"
        val errorExists[2170428]:bool[10] "temp"
        (2170433 'move' errorExists[2170428](2170430 '!=' error[1843659] nil[44]))
        (1843683 'move' shouldHandleError[1843679] errorExists[2170428])
        if shouldHandleError[1843679]
        {
          (1843675 '=' error_out[1843655] error[1843659])
          gotoErrorHandlingReturn _endon_fn[1843657] _endon_fn[1843657]
        }
      }
      const-val call_tmp[1016769]:channel(false,dynamic,true)[985688] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[1017692]:channel(false,dynamic,true)[985688] "dead after last mention" "delay instantiation" "temp"
      val _formal_tmp_out_error[1018491]:syserr[223605] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
      const-val tmp[1841972]:iostyle[231865] "temp"
      (1841975 'move' tmp[1841972] style[1841232])
      ref rvfRerefTmp[2145310]:_ref(file)[948795] "temp"
      (2145314 'move' rvfRerefTmp[2145310](2145311 'set reference' this[1841236]))
      (1017695 call init[1017708] initTemp[1017692] rvfRerefTmp[2145310] _formal_tmp_out_error[1018491] hints[1841240] start[1841244] end[1841234] tmp[1841972])
      (1018493 call =[224133] err[1841242] _formal_tmp_out_error[1018491])
      (1016771 'move' call_tmp[1016769] initTemp[1017692])
      (1016785 call =[1018500] ret[1841238] call_tmp[1016769])
      (1877571 call chpl__autoDestroy[1571934] call_tmp[1016769])
    }
    label _endon_fn[1843657]
    (1016791 return _void[55])
  }
  function on_fn[1017786](const in arg start[1841246]:int(64)[13], const in arg f[1841248]:file[235601], ref arg _formal_tmp_error[1841250]:_ref(syserr)[948893], const in arg end[1841252]:int(64)[13], const in arg hints[1841254]:int(32)[95], const in arg local_style[1841256]:iostyle[231865], ref arg this[1841258]:_ref(channel(false,dynamic,true))[985697]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1017792]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
      (1017794 'move' call_tmp[1017792](1017797 call home[1018085] this[1841258]))
      ref call_tmp[1017800]:_ref(locale)[948905] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2145331]:_ref(file)[948795] "temp"
      (2145335 'move' rvfRerefTmp[2145331](2145332 'set reference' f[1841248]))
      (1017802 'move' call_tmp[1017800](1017805 call home[887010] rvfRerefTmp[2145331]))
      (1017809 call =[90634] call_tmp[1017792] call_tmp[1017800])
      ref call_tmp[1017871]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "temp"
      (1017873 'move' call_tmp[1017871](1017876 call _channel_internal[1018427] this[1841258]))
      ref call_tmp[1017879]:_ref(qio_file_ptr_t)[936934] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2145338]:_ref(file)[948795] "temp"
      (2145342 'move' rvfRerefTmp[2145338](2145339 'set reference' f[1841248]))
      (1017881 'move' call_tmp[1017879](1017884 call _file_internal[887036] rvfRerefTmp[2145338]))
      const-val call_tmp[1017894]:syserr[223605] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1018460]:qio_file_ptr_t[231460] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1018464 'move' coerce_tmp[1018460](1018462 'deref' call_tmp[1017879]))
      const-val coerce_tmp[1018466]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1018472 'move' coerce_tmp[1018466](1018468 'cast' int(32)[95] 1))
      const-val coerce_tmp[1018474]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1018480 'move' coerce_tmp[1018474](1018476 'cast' int(32)[95] 0))
      ref rvfRerefTmp[2145351]:_ref(iostyle)[967611] "temp"
      (2145355 'move' rvfRerefTmp[2145351](2145352 'set reference' local_style[1841256]))
      (1017896 'move' call_tmp[1017894](1017899 call qio_channel_create[232899] call_tmp[1017871] coerce_tmp[1018460] hints[1841254] coerce_tmp[1018466] coerce_tmp[1018474] start[1841246] end[1841252] rvfRerefTmp[2145351]))
      (1017909 call =[224133] _formal_tmp_error[1841250] call_tmp[1017894])
    }
    (1017912 return _void[55])
  }
  function on_fn[1018726](const in arg rhs[1841260]:channel(false,dynamic,true)[985688]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1018732]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2145365]:_ref(channel(false,dynamic,true))[985697] "temp"
      (2145369 'move' rvfRerefTmp[2145365](2145366 'set reference' rhs[1841260]))
      (1018734 'move' call_tmp[1018732](1018737 call _channel_internal[1018427] rvfRerefTmp[2145365]))
      const-val coerce_tmp[1019116]:qio_channel_ptr_t[231486] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1019120 'move' coerce_tmp[1019116](1019118 'deref' call_tmp[1018732]))
      (1018741 call qio_channel_retain[232972] coerce_tmp[1019116])
    }
    (1018743 return _void[55])
  }
  function on_fn[1018770](const  ref arg lhs[1841262]:_ref(channel(false,dynamic,true))[985697]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1018776]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "temp"
      (1018778 'move' call_tmp[1018776](1018781 call _channel_internal[1018427] lhs[1841262]))
      const-val coerce_tmp[1019135]:qio_channel_ptr_t[231486] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1019139 'move' coerce_tmp[1019135](1019137 'deref' call_tmp[1018776]))
      (1018785 call qio_channel_release[232982] coerce_tmp[1019135])
    }
    (1018787 return _void[55])
  }
  function on_fn[1022331](const in arg this[1841268]:file[235601], ref arg ret[1841270]:_ref(channel(true,dynamic,true))[1021895], const in arg hints[1841272]:int(32)[95], ref arg err[1841274]:_ref(syserr)[948893], const in arg start[1841276]:int(64)[13], const in arg end[1841278]:int(64)[13], const in arg style[1841280]:iostyle[231865], ref arg error_out[1843771]:Error[167984]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1843775]:Error[167984] "error variable" "temp"
        (1843784 'move' error[1843775] nil[44])
        ref rvfRerefTmp[2145386]:_ref(file)[948795] "temp"
        (2145390 'move' rvfRerefTmp[2145386](2145387 'set reference' this[1841268]))
        (1022342 call checkAssumingLocal[235789] rvfRerefTmp[2145386] error[1843775])
        val errorExists[2170468]:bool[10] "temp"
        (2170473 'move' errorExists[2170468](2170470 '!=' error[1843775] nil[44]))
        if errorExists[2170468]
        {
          gotoErrorHandling handler[1843776] handler[1843776]
        }
        label handler[1843776]
        const-val shouldHandleError[1843795]:bool[10] "temp"
        val errorExists[2170476]:bool[10] "temp"
        (2170481 'move' errorExists[2170476](2170478 '!=' error[1843775] nil[44]))
        (1843799 'move' shouldHandleError[1843795] errorExists[2170476])
        if shouldHandleError[1843795]
        {
          (1843791 '=' error_out[1843771] error[1843775])
          gotoErrorHandlingReturn _endon_fn[1843773] _endon_fn[1843773]
        }
      }
      const-val call_tmp[1022344]:channel(true,dynamic,true)[1021886] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[1022728]:channel(true,dynamic,true)[1021886] "dead after last mention" "delay instantiation" "temp"
      val _formal_tmp_out_error[1023199]:syserr[223605] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
      const-val tmp[1841978]:iostyle[231865] "temp"
      (1841981 'move' tmp[1841978] style[1841280])
      ref rvfRerefTmp[2145379]:_ref(file)[948795] "temp"
      (2145383 'move' rvfRerefTmp[2145379](2145380 'set reference' this[1841268]))
      (1022731 call init[1022744] initTemp[1022728] rvfRerefTmp[2145379] _formal_tmp_out_error[1023199] hints[1841272] start[1841276] end[1841278] tmp[1841978])
      (1023201 call =[224133] err[1841274] _formal_tmp_out_error[1023199])
      (1022346 'move' call_tmp[1022344] initTemp[1022728])
      (1022360 call =[1023208] ret[1841270] call_tmp[1022344])
      (1877594 call chpl__autoDestroy[1634913] call_tmp[1022344])
    }
    label _endon_fn[1843773]
    (1022366 return _void[55])
  }
  function on_fn[1022822](ref arg this[1841282]:_ref(channel(true,dynamic,true))[1021895], const in arg hints[1841284]:int(32)[95], const in arg local_style[1841286]:iostyle[231865], const in arg end[1841288]:int(64)[13], const in arg start[1841290]:int(64)[13], const in arg f[1841292]:file[235601], ref arg _formal_tmp_error[1841294]:_ref(syserr)[948893]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1022828]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
      (1022830 'move' call_tmp[1022828](1022833 call home[1023103] this[1841282]))
      ref call_tmp[1022836]:_ref(locale)[948905] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2145421]:_ref(file)[948795] "temp"
      (2145425 'move' rvfRerefTmp[2145421](2145422 'set reference' f[1841292]))
      (1022838 'move' call_tmp[1022836](1022841 call home[887010] rvfRerefTmp[2145421]))
      (1022845 call =[90634] call_tmp[1022828] call_tmp[1022836])
      ref call_tmp[1022907]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "temp"
      (1022909 'move' call_tmp[1022907](1022912 call _channel_internal[1023137] this[1841282]))
      ref call_tmp[1022915]:_ref(qio_file_ptr_t)[936934] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2145428]:_ref(file)[948795] "temp"
      (2145432 'move' rvfRerefTmp[2145428](2145429 'set reference' f[1841292]))
      (1022917 'move' call_tmp[1022915](1022920 call _file_internal[887036] rvfRerefTmp[2145428]))
      const-val call_tmp[1022930]:syserr[223605] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1023168]:qio_file_ptr_t[231460] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1023172 'move' coerce_tmp[1023168](1023170 'deref' call_tmp[1022915]))
      const-val coerce_tmp[1023174]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1023180 'move' coerce_tmp[1023174](1023176 'cast' int(32)[95] 0))
      const-val coerce_tmp[1023182]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1023188 'move' coerce_tmp[1023182](1023184 'cast' int(32)[95] 1))
      ref rvfRerefTmp[2145407]:_ref(iostyle)[967611] "temp"
      (2145411 'move' rvfRerefTmp[2145407](2145408 'set reference' local_style[1841286]))
      (1022932 'move' call_tmp[1022930](1022935 call qio_channel_create[232899] call_tmp[1022907] coerce_tmp[1023168] hints[1841284] coerce_tmp[1023174] coerce_tmp[1023182] start[1841290] end[1841288] rvfRerefTmp[2145407]))
      (1022945 call =[224133] _formal_tmp_error[1841294] call_tmp[1022930])
    }
    (1022948 return _void[55])
  }
  function on_fn[1023434](const in arg rhs[1841296]:channel(true,dynamic,true)[1021886]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1023440]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2145442]:_ref(channel(true,dynamic,true))[1021895] "temp"
      (2145446 'move' rvfRerefTmp[2145442](2145443 'set reference' rhs[1841296]))
      (1023442 'move' call_tmp[1023440](1023445 call _channel_internal[1023137] rvfRerefTmp[2145442]))
      const-val coerce_tmp[1023824]:qio_channel_ptr_t[231486] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1023828 'move' coerce_tmp[1023824](1023826 'deref' call_tmp[1023440]))
      (1023449 call qio_channel_retain[232972] coerce_tmp[1023824])
    }
    (1023451 return _void[55])
  }
  function on_fn[1023478](const  ref arg lhs[1841298]:_ref(channel(true,dynamic,true))[1021895]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1023484]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "temp"
      (1023486 'move' call_tmp[1023484](1023489 call _channel_internal[1023137] lhs[1841298]))
      const-val coerce_tmp[1023843]:qio_channel_ptr_t[231486] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1023847 'move' coerce_tmp[1023843](1023845 'deref' call_tmp[1023484]))
      (1023493 call qio_channel_release[232982] coerce_tmp[1023843])
    }
    (1023495 return _void[55])
  }
  function on_fn[1061083](const in arg end[1841312]:int(64)[13], const in arg style[1841314]:iostyle[231865], const in arg this[1841316]:file[235601], ref arg err[1841318]:_ref(syserr)[948893], const in arg hints[1841320]:int(32)[95], const in arg start[1841322]:int(64)[13], ref arg ret[1841324]:_ref(channel(true,dynamic,false))[1061017], ref arg error_out[1844202]:Error[167984]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1844206]:Error[167984] "error variable" "temp"
        (1844215 'move' error[1844206] nil[44])
        ref rvfRerefTmp[2145502]:_ref(file)[948795] "temp"
        (2145506 'move' rvfRerefTmp[2145502](2145503 'set reference' this[1841316]))
        (1061094 call checkAssumingLocal[235789] rvfRerefTmp[2145502] error[1844206])
        val errorExists[2170692]:bool[10] "temp"
        (2170697 'move' errorExists[2170692](2170694 '!=' error[1844206] nil[44]))
        if errorExists[2170692]
        {
          gotoErrorHandling handler[1844207] handler[1844207]
        }
        label handler[1844207]
        const-val shouldHandleError[1844226]:bool[10] "temp"
        val errorExists[2170700]:bool[10] "temp"
        (2170705 'move' errorExists[2170700](2170702 '!=' error[1844206] nil[44]))
        (1844230 'move' shouldHandleError[1844226] errorExists[2170700])
        if shouldHandleError[1844226]
        {
          (1844222 '=' error_out[1844202] error[1844206])
          gotoErrorHandlingReturn _endon_fn[1844204] _endon_fn[1844204]
        }
      }
      const-val call_tmp[1061096]:channel(true,dynamic,false)[1061008] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[1061441]:channel(true,dynamic,false)[1061008] "dead after last mention" "delay instantiation" "temp"
      val _formal_tmp_out_error[1061912]:syserr[223605] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
      const-val tmp[1841984]:iostyle[231865] "temp"
      (1841987 'move' tmp[1841984] style[1841314])
      ref rvfRerefTmp[2145495]:_ref(file)[948795] "temp"
      (2145499 'move' rvfRerefTmp[2145495](2145496 'set reference' this[1841316]))
      (1061444 call init[1061457] initTemp[1061441] rvfRerefTmp[2145495] _formal_tmp_out_error[1061912] hints[1841320] start[1841322] end[1841312] tmp[1841984])
      (1061914 call =[224133] err[1841318] _formal_tmp_out_error[1061912])
      (1061098 'move' call_tmp[1061096] initTemp[1061441])
      (1061112 call =[1061921] ret[1841324] call_tmp[1061096])
      (1878819 call chpl__autoDestroy[1637077] call_tmp[1061096])
    }
    label _endon_fn[1844204]
    (1061118 return _void[55])
  }
  function on_fn[1061535](const in arg end[1841326]:int(64)[13], const in arg hints[1841328]:int(32)[95], const in arg local_style[1841330]:iostyle[231865], ref arg this[1841332]:_ref(channel(true,dynamic,false))[1061017], const in arg start[1841334]:int(64)[13], const in arg f[1841336]:file[235601], ref arg _formal_tmp_error[1841338]:_ref(syserr)[948893]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1061541]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
      (1061543 'move' call_tmp[1061541](1061546 call home[1061816] this[1841332]))
      ref call_tmp[1061549]:_ref(locale)[948905] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2145529]:_ref(file)[948795] "temp"
      (2145533 'move' rvfRerefTmp[2145529](2145530 'set reference' f[1841336]))
      (1061551 'move' call_tmp[1061549](1061554 call home[887010] rvfRerefTmp[2145529]))
      (1061558 call =[90634] call_tmp[1061541] call_tmp[1061549])
      ref call_tmp[1061620]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "temp"
      (1061622 'move' call_tmp[1061620](1061625 call _channel_internal[1061850] this[1841332]))
      ref call_tmp[1061628]:_ref(qio_file_ptr_t)[936934] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2145536]:_ref(file)[948795] "temp"
      (2145540 'move' rvfRerefTmp[2145536](2145537 'set reference' f[1841336]))
      (1061630 'move' call_tmp[1061628](1061633 call _file_internal[887036] rvfRerefTmp[2145536]))
      const-val call_tmp[1061643]:syserr[223605] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1061881]:qio_file_ptr_t[231460] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1061885 'move' coerce_tmp[1061881](1061883 'deref' call_tmp[1061628]))
      const-val coerce_tmp[1061887]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1061893 'move' coerce_tmp[1061887](1061889 'cast' int(32)[95] 0))
      const-val coerce_tmp[1061895]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1061901 'move' coerce_tmp[1061895](1061897 'cast' int(32)[95] 1))
      ref rvfRerefTmp[2145515]:_ref(iostyle)[967611] "temp"
      (2145519 'move' rvfRerefTmp[2145515](2145516 'set reference' local_style[1841330]))
      (1061645 'move' call_tmp[1061643](1061648 call qio_channel_create[232899] call_tmp[1061620] coerce_tmp[1061881] hints[1841328] coerce_tmp[1061887] coerce_tmp[1061895] start[1841334] end[1841326] rvfRerefTmp[2145515]))
      (1061658 call =[224133] _formal_tmp_error[1841338] call_tmp[1061643])
    }
    (1061661 return _void[55])
  }
  function on_fn[1062147](const in arg rhs[1841340]:channel(true,dynamic,false)[1061008]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1062153]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2145550]:_ref(channel(true,dynamic,false))[1061017] "temp"
      (2145554 'move' rvfRerefTmp[2145550](2145551 'set reference' rhs[1841340]))
      (1062155 'move' call_tmp[1062153](1062158 call _channel_internal[1061850] rvfRerefTmp[2145550]))
      const-val coerce_tmp[1062346]:qio_channel_ptr_t[231486] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1062350 'move' coerce_tmp[1062346](1062348 'deref' call_tmp[1062153]))
      (1062162 call qio_channel_retain[232972] coerce_tmp[1062346])
    }
    (1062164 return _void[55])
  }
  function on_fn[1062191](const  ref arg lhs[1841342]:_ref(channel(true,dynamic,false))[1061017]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1062197]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "temp"
      (1062199 'move' call_tmp[1062197](1062202 call _channel_internal[1061850] lhs[1841342]))
      const-val coerce_tmp[1062365]:qio_channel_ptr_t[231486] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1062369 'move' coerce_tmp[1062365](1062367 'deref' call_tmp[1062197]))
      (1062206 call qio_channel_release[232982] coerce_tmp[1062365])
    }
    (1062208 return _void[55])
  }
  function on_fn[1062516](const in arg this[1841344]:channel(true,dynamic,false)[1061008], ref arg err[1841346]:_ref(syserr)[948893]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1062530]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "temp"
      ref rvfRerefTmp[2145564]:_ref(channel(true,dynamic,false))[1061017] "temp"
      (2145568 'move' rvfRerefTmp[2145564](2145565 'set reference' this[1841344]))
      (1062532 'move' call_tmp[1062530](1062535 call _channel_internal[1061850] rvfRerefTmp[2145564]))
      const-val call_tmp[1062538]:syserr[223605] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1062909]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1062915 'move' coerce_tmp[1062909](1062911 'cast' int(32)[95] 0))
      const-val coerce_tmp[1062917]:qio_channel_ptr_t[231486] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1062921 'move' coerce_tmp[1062917](1062919 'deref' call_tmp[1062530]))
      (1062540 'move' call_tmp[1062538](1062543 call qio_channel_close[233161] coerce_tmp[1062909] coerce_tmp[1062917]))
      (1062547 call =[224133] err[1841346] call_tmp[1062538])
    }
    (1062552 return _void[55])
  }
  function on_fn[1062993](const  ref arg this[1841348]:_ref(channel(true,dynamic,false))[1061017], ref arg path[1841350]:_ref(string)[938000], ref arg offset[1841352]:_ref(int(64))[936633], ref arg error_out[1844357]:Error[167984]) : void[4] throws "on" "resolved"
  {
    {
      val tmp_path[1062999]:c_string[19] "dead at end of block" "insert auto destroy"
      (1063201 'move' tmp_path[1062999](1063199 'cast' c_string[19] nil[44]))
      val tmp_offset[1063005]:int(64)[13] "dead at end of block" "insert auto destroy"
      val call_tmp[1063007]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1063204 'move' tmp_offset[1063005] 0)
      const-val call_tmp[1063018]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
      (1063020 'move' call_tmp[1063018](1063023 call ENOERR[223675]))
      val err[1063024]:syserr[223605] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1063146]:syserr[223605] "dead at end of block" "initialized later" "temp"
      (1063192 call =[224154] init_coerce_tmp[1063146] call_tmp[1063018])
      (1063026 'move' err[1063024] init_coerce_tmp[1063146])
      ref call_tmp[1063039]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "temp"
      (1063041 'move' call_tmp[1063039](1063044 call _channel_internal[1061850] this[1841348]))
      const-val call_tmp[1063047]:syserr[223605] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1063156]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1063162 'move' coerce_tmp[1063156](1063158 'cast' int(32)[95] 0))
      const-val coerce_tmp[1063164]:qio_channel_ptr_t[231486] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1063168 'move' coerce_tmp[1063164](1063166 'deref' call_tmp[1063039]))
      (1063049 'move' call_tmp[1063047](1063052 call qio_channel_path_offset[232945] coerce_tmp[1063156] coerce_tmp[1063164] tmp_path[1062999] tmp_offset[1063005]))
      (1063058 call =[224133] err[1063024] call_tmp[1063047])
      const-val call_tmp[1063065]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1063067 'move' call_tmp[1063065](1063070 call ![223979] err[1063024]))
      const-val call_tmp[1063072]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1063074 'move' call_tmp[1063072] call_tmp[1063065])
      if call_tmp[1063072]
      {
        const-val call_tmp[1063081]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val default_arg_length[1063177]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        val error[1844362]:Error[167984] "error variable" "temp"
        (1844364 'move' error[1844362] nil[44])
        (1063182 'move' default_arg_length[1063177](1063179 call createStringWithNewBuffer_default_length[964107] tmp_path[1062999] error[1844362]))
        val errorExists[2170756]:bool[10] "temp"
        (2170761 'move' errorExists[2170756](2170758 '!=' error[1844362] nil[44]))
        if errorExists[2170756]
        {
          (1844368 '=' error_out[1844357] error[1844362])
          gotoErrorHandlingReturn _endon_fn[1844359] _endon_fn[1844359]
        }
        val error[1844377]:Error[167984] "error variable" "temp"
        (1844379 'move' error[1844377] nil[44])
        const-val ret_tmp[1862624]:string[26] "temp"
        (1063086 call createStringWithNewBuffer[30413] tmp_path[1062999] default_arg_length[1063177] replace[173694] error[1844377] ret_tmp[1862624])
        (1862627 'move' call_tmp[1063081] ret_tmp[1862624])
        val errorExists[2170764]:bool[10] "temp"
        (2170769 'move' errorExists[2170764](2170766 '!=' error[1844377] nil[44]))
        if errorExists[2170764]
        {
          (1844383 '=' error_out[1844357] error[1844377])
          gotoErrorHandlingReturn _endon_fn[1844359] _endon_fn[1844359]
        }
        (1063091 call =[38272] path[1841350] call_tmp[1063081])
        (1878834 call chpl__autoDestroy[1562275] call_tmp[1063081])
        (1063098 call chpl_free_c_string[22709] tmp_path[1062999])
        (1063103 call =[435370] offset[1841352] tmp_offset[1063005])
      }
    }
    label _endon_fn[1844359]
    (1063110 return _void[55])
  }
  function on_fn[1066150](const in arg this[1841354]:channel(true,dynamic,false)[1061008], const  ref arg args[1841356]:_ref(1*byteIndex)[1057192], const in arg origLocale[1841358]:locale[28], ref arg error_out[1844442]:Error[167984]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1844446]:Error[167984] "error variable" "temp"
        (1844455 'move' error[1844446] nil[44])
        ref rvfRerefTmp[2145578]:_ref(channel(true,dynamic,false))[1061017] "temp"
        (2145582 'move' rvfRerefTmp[2145578](2145579 'set reference' this[1841354]))
        (1066161 call lock[1066489] rvfRerefTmp[2145578] error[1844446])
        val errorExists[2170788]:bool[10] "temp"
        (2170793 'move' errorExists[2170788](2170790 '!=' error[1844446] nil[44]))
        if errorExists[2170788]
        {
          gotoErrorHandling handler[1844447] handler[1844447]
        }
        label handler[1844447]
        const-val shouldHandleError[1844466]:bool[10] "temp"
        val errorExists[2170796]:bool[10] "temp"
        (2170801 'move' errorExists[2170796](2170798 '!=' error[1844446] nil[44]))
        (1844470 'move' shouldHandleError[1844466] errorExists[2170796])
        if shouldHandleError[1844466]
        {
          (1844462 '=' error_out[1844442] error[1844446])
          gotoErrorHandlingReturn _endon_fn[1844444] _endon_fn[1844444]
        }
      }
      {
        const-val i[1066171]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1066173 'move' i[1066171] 0)
        {
          {
            {
              val error[1844474]:Error[167984] "error variable" "temp"
              (1844483 'move' error[1844474] nil[44])
              ref call_tmp[1066994]:_ref(byteIndex)[948820] "dead after last mention" "maybe param" "temp"
              (1066996 'move' call_tmp[1066994](1067070 '.v' args[1841356] x0[1057140]))
              ref rvfRerefTmp[2145585]:_ref(channel(true,dynamic,false))[1061017] "temp"
              (2145589 'move' rvfRerefTmp[2145585](2145586 'set reference' this[1841354]))
              val rvfRerefTmp[2145612]:locale[28] "temp"
              (2145615 'move' rvfRerefTmp[2145612] origLocale[1841358])
              (1067005 call _writeOne[1067073] rvfRerefTmp[2145585] call_tmp[1066994] rvfRerefTmp[2145612] error[1844474])
              val errorExists[2170804]:bool[10] "temp"
              (2170809 'move' errorExists[2170804](2170806 '!=' error[1844474] nil[44]))
              if errorExists[2170804]
              {
                gotoErrorHandling handler[1844475] handler[1844475]
              }
              label handler[1844475]
              const-val shouldHandleError[1844494]:bool[10] "temp"
              val errorExists[2170812]:bool[10] "temp"
              (2170817 'move' errorExists[2170812](2170814 '!=' error[1844474] nil[44]))
              (1844498 'move' shouldHandleError[1844494] errorExists[2170812])
              if shouldHandleError[1844494]
              {
                (1844490 '=' error_out[1844442] error[1844474])
                ref rvfRerefTmp[2145592]:_ref(channel(true,dynamic,false))[1061017] "temp"
                (2145596 'move' rvfRerefTmp[2145592](2145593 'set reference' this[1841354]))
                (1878855 call unlock[1066886] rvfRerefTmp[2145592])
                gotoErrorHandlingReturn _endon_fn[1844444] _endon_fn[1844444]
              }
            }
          }
        }
        label _continueLabel0[1066981]
        label _unused_continueLabel[1066249]
        label _breakLabel[1066251]
      }
      ref rvfRerefTmp[2145599]:_ref(channel(true,dynamic,false))[1061017] "temp"
      (2145603 'move' rvfRerefTmp[2145599](2145600 'set reference' this[1841354]))
      (1878860 call unlock[1066886] rvfRerefTmp[2145599])
    }
    label _endon_fn[1844444]
    (1066253 return _void[55])
  }
  function on_fn[1068929](const  ref arg this[1841360]:_ref(channel(true,dynamic,false))[1061017], const in arg x[1841362]:int(64)[13], const in arg origLocale[1841364]:locale[28], ref arg error_out[1844726]:Error[167984]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1844730]:Error[167984] "error variable" "temp"
        (1844739 'move' error[1844730] nil[44])
        (1068940 call lock[1066489] this[1841360] error[1844730])
        val errorExists[2170924]:bool[10] "temp"
        (2170929 'move' errorExists[2170924](2170926 '!=' error[1844730] nil[44]))
        if errorExists[2170924]
        {
          gotoErrorHandling handler[1844731] handler[1844731]
        }
        label handler[1844731]
        const-val shouldHandleError[1844748]:bool[10] "temp"
        val errorExists[2170932]:bool[10] "temp"
        (2170937 'move' errorExists[2170932](2170934 '!=' error[1844730] nil[44]))
        (1844752 'move' shouldHandleError[1844748] errorExists[2170932])
        if shouldHandleError[1844748]
        {
          (1844745 call chpl_uncaught_error[170289] error[1844730])
        }
      }
      {
        val error[1844756]:Error[167984] "error variable" "temp"
        (1844765 'move' error[1844756] nil[44])
        val rvfRerefTmp[2145624]:locale[28] "temp"
        (2145627 'move' rvfRerefTmp[2145624] origLocale[1841364])
        (1068962 call _writeOne[1068998] this[1841360] x[1841362] rvfRerefTmp[2145624] error[1844756])
        val errorExists[2170940]:bool[10] "temp"
        (2170945 'move' errorExists[2170940](2170942 '!=' error[1844756] nil[44]))
        if errorExists[2170940]
        {
          gotoErrorHandling handler[1844757] handler[1844757]
        }
        label handler[1844757]
        const-val shouldHandleError[1844776]:bool[10] "temp"
        val errorExists[2170948]:bool[10] "temp"
        (2170953 'move' errorExists[2170948](2170950 '!=' error[1844756] nil[44]))
        (1844780 'move' shouldHandleError[1844776] errorExists[2170948])
        if shouldHandleError[1844776]
        {
          (1844772 '=' error_out[1844726] error[1844756])
          (1878925 call unlock[1066886] this[1841360])
          gotoErrorHandlingReturn _endon_fn[1844728] _endon_fn[1844728]
        }
      }
      (1878930 call unlock[1066886] this[1841360])
    }
    label _endon_fn[1844728]
    (1068969 return _void[55])
  }
  function on_fn[1080266](const in arg this[1841366]:channel(true,dynamic,false)[1061008], ref arg ret[1841368]:_ref(int(64))[936633]) : void[4] "on" "resolved"
  {
    {
      {
        val error[1844927]:Error[167984] "error variable" "temp"
        (1844936 'move' error[1844927] nil[44])
        ref rvfRerefTmp[2145651]:_ref(channel(true,dynamic,false))[1061017] "temp"
        (2145655 'move' rvfRerefTmp[2145651](2145652 'set reference' this[1841366]))
        (1080277 call lock[1066489] rvfRerefTmp[2145651] error[1844927])
        val errorExists[2171012]:bool[10] "temp"
        (2171017 'move' errorExists[2171012](2171014 '!=' error[1844927] nil[44]))
        if errorExists[2171012]
        {
          gotoErrorHandling handler[1844928] handler[1844928]
        }
        label handler[1844928]
        const-val shouldHandleError[1844945]:bool[10] "temp"
        val errorExists[2171020]:bool[10] "temp"
        (2171025 'move' errorExists[2171020](2171022 '!=' error[1844927] nil[44]))
        (1844949 'move' shouldHandleError[1844945] errorExists[2171020])
        if shouldHandleError[1844945]
        {
          (1844942 call chpl_uncaught_error[170289] error[1844927])
        }
      }
      ref call_tmp[1080279]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "temp"
      ref rvfRerefTmp[2145637]:_ref(channel(true,dynamic,false))[1061017] "temp"
      (2145641 'move' rvfRerefTmp[2145637](2145638 'set reference' this[1841366]))
      (1080281 'move' call_tmp[1080279](1080284 call _channel_internal[1061850] rvfRerefTmp[2145637]))
      const-val call_tmp[1080287]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1080346]:qio_channel_ptr_t[231486] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1080350 'move' coerce_tmp[1080346](1080348 'deref' call_tmp[1080279]))
      (1080289 'move' call_tmp[1080287](1080292 call qio_channel_offset_unlocked[233403] coerce_tmp[1080346]))
      (1080295 call =[435370] ret[1841368] call_tmp[1080287])
      ref rvfRerefTmp[2145644]:_ref(channel(true,dynamic,false))[1061017] "temp"
      (2145648 'move' rvfRerefTmp[2145644](2145645 'set reference' this[1841366]))
      (1080304 call unlock[1066886] rvfRerefTmp[2145644])
    }
    (1080305 return _void[55])
  }
  function on_fn[1080818](const in arg end[1841370]:int(64)[13], const in arg style[1841372]:iostyle[231865], const in arg this[1841374]:file[235601], ref arg err[1841376]:_ref(syserr)[948893], const in arg hints[1841378]:int(32)[95], const in arg start[1841380]:int(64)[13], ref arg ret[1841382]:_ref(channel(false,dynamic,false))[1080752], ref arg error_out[1844998]:Error[167984]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1845002]:Error[167984] "error variable" "temp"
        (1845011 'move' error[1845002] nil[44])
        ref rvfRerefTmp[2145680]:_ref(file)[948795] "temp"
        (2145684 'move' rvfRerefTmp[2145680](2145681 'set reference' this[1841374]))
        (1080829 call checkAssumingLocal[235789] rvfRerefTmp[2145680] error[1845002])
        val errorExists[2171052]:bool[10] "temp"
        (2171057 'move' errorExists[2171052](2171054 '!=' error[1845002] nil[44]))
        if errorExists[2171052]
        {
          gotoErrorHandling handler[1845003] handler[1845003]
        }
        label handler[1845003]
        const-val shouldHandleError[1845022]:bool[10] "temp"
        val errorExists[2171060]:bool[10] "temp"
        (2171065 'move' errorExists[2171060](2171062 '!=' error[1845002] nil[44]))
        (1845026 'move' shouldHandleError[1845022] errorExists[2171060])
        if shouldHandleError[1845022]
        {
          (1845018 '=' error_out[1844998] error[1845002])
          gotoErrorHandlingReturn _endon_fn[1845000] _endon_fn[1845000]
        }
      }
      const-val call_tmp[1080831]:channel(false,dynamic,false)[1080743] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[1081173]:channel(false,dynamic,false)[1080743] "dead after last mention" "delay instantiation" "temp"
      val _formal_tmp_out_error[1081644]:syserr[223605] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
      const-val tmp[1841990]:iostyle[231865] "temp"
      (1841993 'move' tmp[1841990] style[1841372])
      ref rvfRerefTmp[2145673]:_ref(file)[948795] "temp"
      (2145677 'move' rvfRerefTmp[2145673](2145674 'set reference' this[1841374]))
      (1081176 call init[1081189] initTemp[1081173] rvfRerefTmp[2145673] _formal_tmp_out_error[1081644] hints[1841378] start[1841380] end[1841370] tmp[1841990])
      (1081646 call =[224133] err[1841376] _formal_tmp_out_error[1081644])
      (1080833 'move' call_tmp[1080831] initTemp[1081173])
      (1080847 call =[1081653] ret[1841382] call_tmp[1080831])
      (1878980 call chpl__autoDestroy[1641331] call_tmp[1080831])
    }
    label _endon_fn[1845000]
    (1080853 return _void[55])
  }
  function on_fn[1081267](const in arg hints[1841384]:int(32)[95], const in arg local_style[1841386]:iostyle[231865], const in arg start[1841388]:int(64)[13], const in arg f[1841390]:file[235601], ref arg _formal_tmp_error[1841392]:_ref(syserr)[948893], const in arg end[1841394]:int(64)[13], ref arg this[1841396]:_ref(channel(false,dynamic,false))[1080752]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1081273]:_ref(locale)[948905] "dead after last mention" "maybe param" "temp"
      (1081275 'move' call_tmp[1081273](1081278 call home[1081548] this[1841396]))
      ref call_tmp[1081281]:_ref(locale)[948905] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2145707]:_ref(file)[948795] "temp"
      (2145711 'move' rvfRerefTmp[2145707](2145708 'set reference' f[1841390]))
      (1081283 'move' call_tmp[1081281](1081286 call home[887010] rvfRerefTmp[2145707]))
      (1081290 call =[90634] call_tmp[1081273] call_tmp[1081281])
      ref call_tmp[1081352]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "temp"
      (1081354 'move' call_tmp[1081352](1081357 call _channel_internal[1081582] this[1841396]))
      ref call_tmp[1081360]:_ref(qio_file_ptr_t)[936934] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2145714]:_ref(file)[948795] "temp"
      (2145718 'move' rvfRerefTmp[2145714](2145715 'set reference' f[1841390]))
      (1081362 'move' call_tmp[1081360](1081365 call _file_internal[887036] rvfRerefTmp[2145714]))
      const-val call_tmp[1081375]:syserr[223605] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1081613]:qio_file_ptr_t[231460] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1081617 'move' coerce_tmp[1081613](1081615 'deref' call_tmp[1081360]))
      const-val coerce_tmp[1081619]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1081625 'move' coerce_tmp[1081619](1081621 'cast' int(32)[95] 1))
      const-val coerce_tmp[1081627]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1081633 'move' coerce_tmp[1081627](1081629 'cast' int(32)[95] 0))
      ref rvfRerefTmp[2145693]:_ref(iostyle)[967611] "temp"
      (2145697 'move' rvfRerefTmp[2145693](2145694 'set reference' local_style[1841386]))
      (1081377 'move' call_tmp[1081375](1081380 call qio_channel_create[232899] call_tmp[1081352] coerce_tmp[1081613] hints[1841384] coerce_tmp[1081619] coerce_tmp[1081627] start[1841388] end[1841394] rvfRerefTmp[2145693]))
      (1081390 call =[224133] _formal_tmp_error[1841392] call_tmp[1081375])
    }
    (1081393 return _void[55])
  }
  function on_fn[1081879](const in arg rhs[1841398]:channel(false,dynamic,false)[1080743]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1081885]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2145728]:_ref(channel(false,dynamic,false))[1080752] "temp"
      (2145732 'move' rvfRerefTmp[2145728](2145729 'set reference' rhs[1841398]))
      (1081887 'move' call_tmp[1081885](1081890 call _channel_internal[1081582] rvfRerefTmp[2145728]))
      const-val coerce_tmp[1082078]:qio_channel_ptr_t[231486] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1082082 'move' coerce_tmp[1082078](1082080 'deref' call_tmp[1081885]))
      (1081894 call qio_channel_retain[232972] coerce_tmp[1082078])
    }
    (1081896 return _void[55])
  }
  function on_fn[1081923](const  ref arg lhs[1841400]:_ref(channel(false,dynamic,false))[1080752]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1081929]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "temp"
      (1081931 'move' call_tmp[1081929](1081934 call _channel_internal[1081582] lhs[1841400]))
      const-val coerce_tmp[1082097]:qio_channel_ptr_t[231486] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1082101 'move' coerce_tmp[1082097](1082099 'deref' call_tmp[1081929]))
      (1081938 call qio_channel_release[232982] coerce_tmp[1082097])
    }
    (1081940 return _void[55])
  }
  function on_fn[1082248](const in arg this[1841402]:channel(false,dynamic,false)[1080743], ref arg err[1841404]:_ref(syserr)[948893]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1082262]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "temp"
      ref rvfRerefTmp[2145742]:_ref(channel(false,dynamic,false))[1080752] "temp"
      (2145746 'move' rvfRerefTmp[2145742](2145743 'set reference' this[1841402]))
      (1082264 'move' call_tmp[1082262](1082267 call _channel_internal[1081582] rvfRerefTmp[2145742]))
      const-val call_tmp[1082270]:syserr[223605] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1082593]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1082599 'move' coerce_tmp[1082593](1082595 'cast' int(32)[95] 0))
      const-val coerce_tmp[1082601]:qio_channel_ptr_t[231486] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1082605 'move' coerce_tmp[1082601](1082603 'deref' call_tmp[1082262]))
      (1082272 'move' call_tmp[1082270](1082275 call qio_channel_close[233161] coerce_tmp[1082593] coerce_tmp[1082601]))
      (1082279 call =[224133] err[1841404] call_tmp[1082270])
    }
    (1082284 return _void[55])
  }
  function on_fn[1082677](const in arg this[1841406]:channel(false,dynamic,false)[1080743], ref arg path[1841408]:_ref(string)[938000], ref arg offset[1841410]:_ref(int(64))[936633], ref arg error_out[1845153]:Error[167984]) : void[4] throws "on" "resolved"
  {
    {
      val tmp_path[1082683]:c_string[19] "dead at end of block" "insert auto destroy"
      (1082884 'move' tmp_path[1082683](1082882 'cast' c_string[19] nil[44]))
      val tmp_offset[1082689]:int(64)[13] "dead at end of block" "insert auto destroy"
      val call_tmp[1082691]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1082887 'move' tmp_offset[1082689] 0)
      const-val call_tmp[1082702]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
      (1082704 'move' call_tmp[1082702](1082707 call ENOERR[223675]))
      val err[1082708]:syserr[223605] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1082830]:syserr[223605] "dead at end of block" "initialized later" "temp"
      (1082875 call =[224154] init_coerce_tmp[1082830] call_tmp[1082702])
      (1082710 'move' err[1082708] init_coerce_tmp[1082830])
      ref call_tmp[1082723]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "temp"
      ref rvfRerefTmp[2145756]:_ref(channel(false,dynamic,false))[1080752] "temp"
      (2145760 'move' rvfRerefTmp[2145756](2145757 'set reference' this[1841406]))
      (1082725 'move' call_tmp[1082723](1082728 call _channel_internal[1081582] rvfRerefTmp[2145756]))
      const-val call_tmp[1082731]:syserr[223605] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1082839]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1082845 'move' coerce_tmp[1082839](1082841 'cast' int(32)[95] 0))
      const-val coerce_tmp[1082847]:qio_channel_ptr_t[231486] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1082851 'move' coerce_tmp[1082847](1082849 'deref' call_tmp[1082723]))
      (1082733 'move' call_tmp[1082731](1082736 call qio_channel_path_offset[232945] coerce_tmp[1082839] coerce_tmp[1082847] tmp_path[1082683] tmp_offset[1082689]))
      (1082742 call =[224133] err[1082708] call_tmp[1082731])
      const-val call_tmp[1082749]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1082751 'move' call_tmp[1082749](1082754 call ![223979] err[1082708]))
      const-val call_tmp[1082756]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1082758 'move' call_tmp[1082756] call_tmp[1082749])
      if call_tmp[1082756]
      {
        const-val call_tmp[1082765]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val default_arg_length[1082860]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        val error[1845158]:Error[167984] "error variable" "temp"
        (1845160 'move' error[1845158] nil[44])
        (1082865 'move' default_arg_length[1082860](1082862 call createStringWithNewBuffer_default_length[964107] tmp_path[1082683] error[1845158]))
        val errorExists[2171116]:bool[10] "temp"
        (2171121 'move' errorExists[2171116](2171118 '!=' error[1845158] nil[44]))
        if errorExists[2171116]
        {
          (1845164 '=' error_out[1845153] error[1845158])
          gotoErrorHandlingReturn _endon_fn[1845155] _endon_fn[1845155]
        }
        val error[1845173]:Error[167984] "error variable" "temp"
        (1845175 'move' error[1845173] nil[44])
        const-val ret_tmp[1862630]:string[26] "temp"
        (1082770 call createStringWithNewBuffer[30413] tmp_path[1082683] default_arg_length[1082860] replace[173694] error[1845173] ret_tmp[1862630])
        (1862633 'move' call_tmp[1082765] ret_tmp[1862630])
        val errorExists[2171124]:bool[10] "temp"
        (2171129 'move' errorExists[2171124](2171126 '!=' error[1845173] nil[44]))
        if errorExists[2171124]
        {
          (1845179 '=' error_out[1845153] error[1845173])
          gotoErrorHandlingReturn _endon_fn[1845155] _endon_fn[1845155]
        }
        (1082775 call =[38272] path[1841408] call_tmp[1082765])
        (1878995 call chpl__autoDestroy[1562275] call_tmp[1082765])
        (1082782 call chpl_free_c_string[22709] tmp_path[1082683])
        (1082787 call =[435370] offset[1841410] tmp_offset[1082689])
      }
    }
    label _endon_fn[1845155]
    (1082794 return _void[55])
  }
  function on_fn[1164968](const in arg this[1841438]:channel(true,dynamic,false)[1061008], const  ref arg args[1841440]:_ref((string,codepointIndex,string))[1158673], const in arg origLocale[1841442]:locale[28], ref arg error_out[1845466]:Error[167984]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1845470]:Error[167984] "error variable" "temp"
        (1845479 'move' error[1845470] nil[44])
        ref rvfRerefTmp[2145801]:_ref(channel(true,dynamic,false))[1061017] "temp"
        (2145805 'move' rvfRerefTmp[2145801](2145802 'set reference' this[1841438]))
        (1164979 call lock[1066489] rvfRerefTmp[2145801] error[1845470])
        val errorExists[2171284]:bool[10] "temp"
        (2171289 'move' errorExists[2171284](2171286 '!=' error[1845470] nil[44]))
        if errorExists[2171284]
        {
          gotoErrorHandling handler[1845471] handler[1845471]
        }
        label handler[1845471]
        const-val shouldHandleError[1845490]:bool[10] "temp"
        val errorExists[2171292]:bool[10] "temp"
        (2171297 'move' errorExists[2171292](2171294 '!=' error[1845470] nil[44]))
        (1845494 'move' shouldHandleError[1845490] errorExists[2171292])
        if shouldHandleError[1845490]
        {
          (1845486 '=' error_out[1845466] error[1845470])
          gotoErrorHandlingReturn _endon_fn[1845468] _endon_fn[1845468]
        }
      }
      {
        const-val i[1164989]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1164991 'move' i[1164989] 0)
        {
          {
            {
              val error[1845498]:Error[167984] "error variable" "temp"
              (1845507 'move' error[1845498] nil[44])
              ref call_tmp[1165131]:_ref(string)[938000] "dead after last mention" "maybe param" "temp"
              (1165133 'move' call_tmp[1165131](1165218 '.v' args[1841440] x0[1158610]))
              ref rvfRerefTmp[2145808]:_ref(channel(true,dynamic,false))[1061017] "temp"
              (2145812 'move' rvfRerefTmp[2145808](2145809 'set reference' this[1841438]))
              val rvfRerefTmp[2145863]:locale[28] "temp"
              (2145866 'move' rvfRerefTmp[2145863] origLocale[1841442])
              (1165142 call _writeOne[1165221] rvfRerefTmp[2145808] call_tmp[1165131] rvfRerefTmp[2145863] error[1845498])
              val errorExists[2171300]:bool[10] "temp"
              (2171305 'move' errorExists[2171300](2171302 '!=' error[1845498] nil[44]))
              if errorExists[2171300]
              {
                gotoErrorHandling handler[1845499] handler[1845499]
              }
              label handler[1845499]
              const-val shouldHandleError[1845518]:bool[10] "temp"
              val errorExists[2171308]:bool[10] "temp"
              (2171313 'move' errorExists[2171308](2171310 '!=' error[1845498] nil[44]))
              (1845522 'move' shouldHandleError[1845518] errorExists[2171308])
              if shouldHandleError[1845518]
              {
                (1845514 '=' error_out[1845466] error[1845498])
                ref rvfRerefTmp[2145829]:_ref(channel(true,dynamic,false))[1061017] "temp"
                (2145833 'move' rvfRerefTmp[2145829](2145830 'set reference' this[1841438]))
                (1880619 call unlock[1066886] rvfRerefTmp[2145829])
                gotoErrorHandlingReturn _endon_fn[1845468] _endon_fn[1845468]
              }
            }
          }
        }
        label _continueLabel0[1165118]
        {
          {
            {
              val error[1845526]:Error[167984] "error variable" "temp"
              (1845535 'move' error[1845526] nil[44])
              ref call_tmp[1165163]:_ref(codepointIndex)[948830] "dead after last mention" "maybe param" "temp"
              (1165165 'move' call_tmp[1165163](1173971 '.v' args[1841440] x1[1158612]))
              ref rvfRerefTmp[2145815]:_ref(channel(true,dynamic,false))[1061017] "temp"
              (2145819 'move' rvfRerefTmp[2145815](2145816 'set reference' this[1841438]))
              val rvfRerefTmp[2145869]:locale[28] "temp"
              (2145872 'move' rvfRerefTmp[2145869] origLocale[1841442])
              (1165174 call _writeOne[1173974] rvfRerefTmp[2145815] call_tmp[1165163] rvfRerefTmp[2145869] error[1845526])
              val errorExists[2171316]:bool[10] "temp"
              (2171321 'move' errorExists[2171316](2171318 '!=' error[1845526] nil[44]))
              if errorExists[2171316]
              {
                gotoErrorHandling handler[1845527] handler[1845527]
              }
              label handler[1845527]
              const-val shouldHandleError[1845546]:bool[10] "temp"
              val errorExists[2171324]:bool[10] "temp"
              (2171329 'move' errorExists[2171324](2171326 '!=' error[1845526] nil[44]))
              (1845550 'move' shouldHandleError[1845546] errorExists[2171324])
              if shouldHandleError[1845546]
              {
                (1845542 '=' error_out[1845466] error[1845526])
                ref rvfRerefTmp[2145836]:_ref(channel(true,dynamic,false))[1061017] "temp"
                (2145840 'move' rvfRerefTmp[2145836](2145837 'set reference' this[1841438]))
                (1880623 call unlock[1066886] rvfRerefTmp[2145836])
                gotoErrorHandlingReturn _endon_fn[1845468] _endon_fn[1845468]
              }
            }
          }
        }
        label _continueLabel1[1165150]
        {
          {
            {
              val error[1845554]:Error[167984] "error variable" "temp"
              (1845563 'move' error[1845554] nil[44])
              ref call_tmp[1165195]:_ref(string)[938000] "dead after last mention" "maybe param" "temp"
              (1165197 'move' call_tmp[1165195](1175705 '.v' args[1841440] x2[1158614]))
              ref rvfRerefTmp[2145822]:_ref(channel(true,dynamic,false))[1061017] "temp"
              (2145826 'move' rvfRerefTmp[2145822](2145823 'set reference' this[1841438]))
              val rvfRerefTmp[2145875]:locale[28] "temp"
              (2145878 'move' rvfRerefTmp[2145875] origLocale[1841442])
              (1165206 call _writeOne[1165221] rvfRerefTmp[2145822] call_tmp[1165195] rvfRerefTmp[2145875] error[1845554])
              val errorExists[2171332]:bool[10] "temp"
              (2171337 'move' errorExists[2171332](2171334 '!=' error[1845554] nil[44]))
              if errorExists[2171332]
              {
                gotoErrorHandling handler[1845555] handler[1845555]
              }
              label handler[1845555]
              const-val shouldHandleError[1845574]:bool[10] "temp"
              val errorExists[2171340]:bool[10] "temp"
              (2171345 'move' errorExists[2171340](2171342 '!=' error[1845554] nil[44]))
              (1845578 'move' shouldHandleError[1845574] errorExists[2171340])
              if shouldHandleError[1845574]
              {
                (1845570 '=' error_out[1845466] error[1845554])
                ref rvfRerefTmp[2145843]:_ref(channel(true,dynamic,false))[1061017] "temp"
                (2145847 'move' rvfRerefTmp[2145843](2145844 'set reference' this[1841438]))
                (1880627 call unlock[1066886] rvfRerefTmp[2145843])
                gotoErrorHandlingReturn _endon_fn[1845468] _endon_fn[1845468]
              }
            }
          }
        }
        label _continueLabel2[1165182]
        label _unused_continueLabel[1165067]
        label _breakLabel[1165069]
      }
      ref rvfRerefTmp[2145850]:_ref(channel(true,dynamic,false))[1061017] "temp"
      (2145854 'move' rvfRerefTmp[2145850](2145851 'set reference' this[1841438]))
      (1880632 call unlock[1066886] rvfRerefTmp[2145850])
    }
    label _endon_fn[1845468]
    (1165071 return _void[55])
  }
  function on_fn[1180447](const in arg this[1841444]:channel(true,dynamic,false)[1061008], const  ref arg args[1841446]:_ref((string,codepointIndex,string,int(64)))[1176653], const in arg origLocale[1841448]:locale[28], ref arg error_out[1845963]:Error[167984]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1845967]:Error[167984] "error variable" "temp"
        (1845976 'move' error[1845967] nil[44])
        ref rvfRerefTmp[2145888]:_ref(channel(true,dynamic,false))[1061017] "temp"
        (2145892 'move' rvfRerefTmp[2145888](2145889 'set reference' this[1841444]))
        (1180458 call lock[1066489] rvfRerefTmp[2145888] error[1845967])
        val errorExists[2171564]:bool[10] "temp"
        (2171569 'move' errorExists[2171564](2171566 '!=' error[1845967] nil[44]))
        if errorExists[2171564]
        {
          gotoErrorHandling handler[1845968] handler[1845968]
        }
        label handler[1845968]
        const-val shouldHandleError[1845987]:bool[10] "temp"
        val errorExists[2171572]:bool[10] "temp"
        (2171577 'move' errorExists[2171572](2171574 '!=' error[1845967] nil[44]))
        (1845991 'move' shouldHandleError[1845987] errorExists[2171572])
        if shouldHandleError[1845987]
        {
          (1845983 '=' error_out[1845963] error[1845967])
          gotoErrorHandlingReturn _endon_fn[1845965] _endon_fn[1845965]
        }
      }
      {
        const-val i[1180468]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1180470 'move' i[1180468] 0)
        {
          {
            {
              val error[1845995]:Error[167984] "error variable" "temp"
              (1846004 'move' error[1845995] nil[44])
              ref call_tmp[1180616]:_ref(string)[938000] "dead after last mention" "maybe param" "temp"
              (1180618 'move' call_tmp[1180616](1180735 '.v' args[1841446] x0[1176573]))
              ref rvfRerefTmp[2145895]:_ref(channel(true,dynamic,false))[1061017] "temp"
              (2145899 'move' rvfRerefTmp[2145895](2145896 'set reference' this[1841444]))
              val rvfRerefTmp[2145964]:locale[28] "temp"
              (2145967 'move' rvfRerefTmp[2145964] origLocale[1841448])
              (1180627 call _writeOne[1165221] rvfRerefTmp[2145895] call_tmp[1180616] rvfRerefTmp[2145964] error[1845995])
              val errorExists[2171580]:bool[10] "temp"
              (2171585 'move' errorExists[2171580](2171582 '!=' error[1845995] nil[44]))
              if errorExists[2171580]
              {
                gotoErrorHandling handler[1845996] handler[1845996]
              }
              label handler[1845996]
              const-val shouldHandleError[1846015]:bool[10] "temp"
              val errorExists[2171588]:bool[10] "temp"
              (2171593 'move' errorExists[2171588](2171590 '!=' error[1845995] nil[44]))
              (1846019 'move' shouldHandleError[1846015] errorExists[2171588])
              if shouldHandleError[1846015]
              {
                (1846011 '=' error_out[1845963] error[1845995])
                ref rvfRerefTmp[2145923]:_ref(channel(true,dynamic,false))[1061017] "temp"
                (2145927 'move' rvfRerefTmp[2145923](2145924 'set reference' this[1841444]))
                (1881682 call unlock[1066886] rvfRerefTmp[2145923])
                gotoErrorHandlingReturn _endon_fn[1845965] _endon_fn[1845965]
              }
            }
          }
        }
        label _continueLabel0[1180603]
        {
          {
            {
              val error[1846023]:Error[167984] "error variable" "temp"
              (1846032 'move' error[1846023] nil[44])
              ref call_tmp[1180648]:_ref(codepointIndex)[948830] "dead after last mention" "maybe param" "temp"
              (1180650 'move' call_tmp[1180648](1180743 '.v' args[1841446] x1[1176575]))
              ref rvfRerefTmp[2145902]:_ref(channel(true,dynamic,false))[1061017] "temp"
              (2145906 'move' rvfRerefTmp[2145902](2145903 'set reference' this[1841444]))
              val rvfRerefTmp[2145970]:locale[28] "temp"
              (2145973 'move' rvfRerefTmp[2145970] origLocale[1841448])
              (1180659 call _writeOne[1173974] rvfRerefTmp[2145902] call_tmp[1180648] rvfRerefTmp[2145970] error[1846023])
              val errorExists[2171596]:bool[10] "temp"
              (2171601 'move' errorExists[2171596](2171598 '!=' error[1846023] nil[44]))
              if errorExists[2171596]
              {
                gotoErrorHandling handler[1846024] handler[1846024]
              }
              label handler[1846024]
              const-val shouldHandleError[1846043]:bool[10] "temp"
              val errorExists[2171604]:bool[10] "temp"
              (2171609 'move' errorExists[2171604](2171606 '!=' error[1846023] nil[44]))
              (1846047 'move' shouldHandleError[1846043] errorExists[2171604])
              if shouldHandleError[1846043]
              {
                (1846039 '=' error_out[1845963] error[1846023])
                ref rvfRerefTmp[2145930]:_ref(channel(true,dynamic,false))[1061017] "temp"
                (2145934 'move' rvfRerefTmp[2145930](2145931 'set reference' this[1841444]))
                (1881686 call unlock[1066886] rvfRerefTmp[2145930])
                gotoErrorHandlingReturn _endon_fn[1845965] _endon_fn[1845965]
              }
            }
          }
        }
        label _continueLabel1[1180635]
        {
          {
            {
              val error[1846051]:Error[167984] "error variable" "temp"
              (1846060 'move' error[1846051] nil[44])
              ref call_tmp[1180680]:_ref(string)[938000] "dead after last mention" "maybe param" "temp"
              (1180682 'move' call_tmp[1180680](1180751 '.v' args[1841446] x2[1176577]))
              ref rvfRerefTmp[2145909]:_ref(channel(true,dynamic,false))[1061017] "temp"
              (2145913 'move' rvfRerefTmp[2145909](2145910 'set reference' this[1841444]))
              val rvfRerefTmp[2145976]:locale[28] "temp"
              (2145979 'move' rvfRerefTmp[2145976] origLocale[1841448])
              (1180691 call _writeOne[1165221] rvfRerefTmp[2145909] call_tmp[1180680] rvfRerefTmp[2145976] error[1846051])
              val errorExists[2171612]:bool[10] "temp"
              (2171617 'move' errorExists[2171612](2171614 '!=' error[1846051] nil[44]))
              if errorExists[2171612]
              {
                gotoErrorHandling handler[1846052] handler[1846052]
              }
              label handler[1846052]
              const-val shouldHandleError[1846071]:bool[10] "temp"
              val errorExists[2171620]:bool[10] "temp"
              (2171625 'move' errorExists[2171620](2171622 '!=' error[1846051] nil[44]))
              (1846075 'move' shouldHandleError[1846071] errorExists[2171620])
              if shouldHandleError[1846071]
              {
                (1846067 '=' error_out[1845963] error[1846051])
                ref rvfRerefTmp[2145937]:_ref(channel(true,dynamic,false))[1061017] "temp"
                (2145941 'move' rvfRerefTmp[2145937](2145938 'set reference' this[1841444]))
                (1881690 call unlock[1066886] rvfRerefTmp[2145937])
                gotoErrorHandlingReturn _endon_fn[1845965] _endon_fn[1845965]
              }
            }
          }
        }
        label _continueLabel2[1180667]
        {
          {
            {
              val error[1846079]:Error[167984] "error variable" "temp"
              (1846088 'move' error[1846079] nil[44])
              ref call_tmp[1180712]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
              (1180714 'move' call_tmp[1180712](1180759 '.' args[1841446] x3[1176579]))
              const-val coerce_tmp[1180762]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1180766 'move' coerce_tmp[1180762](1180764 'deref' call_tmp[1180712]))
              ref rvfRerefTmp[2145916]:_ref(channel(true,dynamic,false))[1061017] "temp"
              (2145920 'move' rvfRerefTmp[2145916](2145917 'set reference' this[1841444]))
              val rvfRerefTmp[2145982]:locale[28] "temp"
              (2145985 'move' rvfRerefTmp[2145982] origLocale[1841448])
              (1180723 call _writeOne[1068998] rvfRerefTmp[2145916] coerce_tmp[1180762] rvfRerefTmp[2145982] error[1846079])
              val errorExists[2171628]:bool[10] "temp"
              (2171633 'move' errorExists[2171628](2171630 '!=' error[1846079] nil[44]))
              if errorExists[2171628]
              {
                gotoErrorHandling handler[1846080] handler[1846080]
              }
              label handler[1846080]
              const-val shouldHandleError[1846099]:bool[10] "temp"
              val errorExists[2171636]:bool[10] "temp"
              (2171641 'move' errorExists[2171636](2171638 '!=' error[1846079] nil[44]))
              (1846103 'move' shouldHandleError[1846099] errorExists[2171636])
              if shouldHandleError[1846099]
              {
                (1846095 '=' error_out[1845963] error[1846079])
                ref rvfRerefTmp[2145944]:_ref(channel(true,dynamic,false))[1061017] "temp"
                (2145948 'move' rvfRerefTmp[2145944](2145945 'set reference' this[1841444]))
                (1881694 call unlock[1066886] rvfRerefTmp[2145944])
                gotoErrorHandlingReturn _endon_fn[1845965] _endon_fn[1845965]
              }
            }
          }
        }
        label _continueLabel3[1180699]
        label _unused_continueLabel[1180546]
        label _breakLabel[1180548]
      }
      ref rvfRerefTmp[2145951]:_ref(channel(true,dynamic,false))[1061017] "temp"
      (2145955 'move' rvfRerefTmp[2145951](2145952 'set reference' this[1841444]))
      (1881699 call unlock[1066886] rvfRerefTmp[2145951])
    }
    label _endon_fn[1845965]
    (1180550 return _void[55])
  }
  function on_fn[1543480](const in arg this[1841726]:channel(true,dynamic,true)[1021886], const  ref arg args[1841728]:_ref((string,ioNewline))[1543654], const in arg origLocale[1841730]:locale[28], ref arg error_out[1846891]:Error[167984]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1846895]:Error[167984] "error variable" "temp"
        (1846904 'move' error[1846895] nil[44])
        ref rvfRerefTmp[2146240]:_ref(channel(true,dynamic,true))[1021895] "temp"
        (2146244 'move' rvfRerefTmp[2146240](2146241 'set reference' this[1841726]))
        (1543491 call lock[1543812] rvfRerefTmp[2146240] error[1846895])
        val errorExists[2172012]:bool[10] "temp"
        (2172017 'move' errorExists[2172012](2172014 '!=' error[1846895] nil[44]))
        if errorExists[2172012]
        {
          gotoErrorHandling handler[1846896] handler[1846896]
        }
        label handler[1846896]
        const-val shouldHandleError[1846915]:bool[10] "temp"
        val errorExists[2172020]:bool[10] "temp"
        (2172025 'move' errorExists[2172020](2172022 '!=' error[1846895] nil[44]))
        (1846919 'move' shouldHandleError[1846915] errorExists[2172020])
        if shouldHandleError[1846915]
        {
          (1846911 '=' error_out[1846891] error[1846895])
          gotoErrorHandlingReturn _endon_fn[1846893] _endon_fn[1846893]
        }
      }
      {
        const-val i[1543501]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1543503 'move' i[1543501] 0)
        {
          {
            {
              val error[1846923]:Error[167984] "error variable" "temp"
              (1846932 'move' error[1846923] nil[44])
              ref call_tmp[1544688]:_ref(string)[938000] "dead after last mention" "maybe param" "temp"
              (1544690 'move' call_tmp[1544688](1544796 '.v' args[1841728] x0[1543601]))
              ref rvfRerefTmp[2146247]:_ref(channel(true,dynamic,true))[1021895] "temp"
              (2146251 'move' rvfRerefTmp[2146247](2146248 'set reference' this[1841726]))
              val rvfRerefTmp[2146288]:locale[28] "temp"
              (2146291 'move' rvfRerefTmp[2146288] origLocale[1841730])
              (1544699 call _writeOne[1544799] rvfRerefTmp[2146247] call_tmp[1544688] rvfRerefTmp[2146288] error[1846923])
              val errorExists[2172028]:bool[10] "temp"
              (2172033 'move' errorExists[2172028](2172030 '!=' error[1846923] nil[44]))
              if errorExists[2172028]
              {
                gotoErrorHandling handler[1846924] handler[1846924]
              }
              label handler[1846924]
              const-val shouldHandleError[1846943]:bool[10] "temp"
              val errorExists[2172036]:bool[10] "temp"
              (2172041 'move' errorExists[2172036](2172038 '!=' error[1846923] nil[44]))
              (1846947 'move' shouldHandleError[1846943] errorExists[2172036])
              if shouldHandleError[1846943]
              {
                (1846939 '=' error_out[1846891] error[1846923])
                ref rvfRerefTmp[2146261]:_ref(channel(true,dynamic,true))[1021895] "temp"
                (2146265 'move' rvfRerefTmp[2146261](2146262 'set reference' this[1841726]))
                (1884581 call unlock[1544561] rvfRerefTmp[2146261])
                gotoErrorHandlingReturn _endon_fn[1846893] _endon_fn[1846893]
              }
            }
          }
        }
        label _continueLabel0[1544675]
        {
          {
            {
              val error[1846951]:Error[167984] "error variable" "temp"
              (1846960 'move' error[1846951] nil[44])
              ref call_tmp[1544720]:_ref(ioNewline)[967641] "dead after last mention" "maybe param" "temp"
              (1544722 'move' call_tmp[1544720](1545186 '.v' args[1841728] x1[1543603]))
              ref rvfRerefTmp[2146254]:_ref(channel(true,dynamic,true))[1021895] "temp"
              (2146258 'move' rvfRerefTmp[2146254](2146255 'set reference' this[1841726]))
              val rvfRerefTmp[2146294]:locale[28] "temp"
              (2146297 'move' rvfRerefTmp[2146294] origLocale[1841730])
              (1544731 call _writeOne[1545189] rvfRerefTmp[2146254] call_tmp[1544720] rvfRerefTmp[2146294] error[1846951])
              val errorExists[2172044]:bool[10] "temp"
              (2172049 'move' errorExists[2172044](2172046 '!=' error[1846951] nil[44]))
              if errorExists[2172044]
              {
                gotoErrorHandling handler[1846952] handler[1846952]
              }
              label handler[1846952]
              const-val shouldHandleError[1846971]:bool[10] "temp"
              val errorExists[2172052]:bool[10] "temp"
              (2172057 'move' errorExists[2172052](2172054 '!=' error[1846951] nil[44]))
              (1846975 'move' shouldHandleError[1846971] errorExists[2172052])
              if shouldHandleError[1846971]
              {
                (1846967 '=' error_out[1846891] error[1846951])
                ref rvfRerefTmp[2146268]:_ref(channel(true,dynamic,true))[1021895] "temp"
                (2146272 'move' rvfRerefTmp[2146268](2146269 'set reference' this[1841726]))
                (1884585 call unlock[1544561] rvfRerefTmp[2146268])
                gotoErrorHandlingReturn _endon_fn[1846893] _endon_fn[1846893]
              }
            }
          }
        }
        label _continueLabel1[1544707]
        label _unused_continueLabel[1543579]
        label _breakLabel[1543581]
      }
      ref rvfRerefTmp[2146275]:_ref(channel(true,dynamic,true))[1021895] "temp"
      (2146279 'move' rvfRerefTmp[2146275](2146276 'set reference' this[1841726]))
      (1884590 call unlock[1544561] rvfRerefTmp[2146275])
    }
    label _endon_fn[1846893]
    (1543583 return _void[55])
  }
  function on_fn[1543922](const in arg this[1841732]:channel(true,dynamic,true)[1021886], ref arg err[1841734]:_ref(syserr)[948893]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1543928]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "temp"
      ref rvfRerefTmp[2146307]:_ref(channel(true,dynamic,true))[1021895] "temp"
      (2146311 'move' rvfRerefTmp[2146307](2146308 'set reference' this[1841732]))
      (1543930 'move' call_tmp[1543928](1543933 call _channel_internal[1023137] rvfRerefTmp[2146307]))
      const-val call_tmp[1543936]:syserr[223605] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1544263]:qio_channel_ptr_t[231486] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1544267 'move' coerce_tmp[1544263](1544265 'deref' call_tmp[1543928]))
      (1543938 'move' call_tmp[1543936](1543941 call qio_channel_lock[233028] coerce_tmp[1544263]))
      (1543944 call =[224133] err[1841734] call_tmp[1543936])
    }
    (1543949 return _void[55])
  }
  function on_fn[1544339](const in arg this[1841736]:channel(true,dynamic,true)[1021886], ref arg path[1841738]:_ref(string)[938000], ref arg offset[1841740]:_ref(int(64))[936633], ref arg error_out[1847071]:Error[167984]) : void[4] throws "on" "resolved"
  {
    {
      val tmp_path[1544345]:c_string[19] "dead at end of block" "insert auto destroy"
      (1544546 'move' tmp_path[1544345](1544544 'cast' c_string[19] nil[44]))
      val tmp_offset[1544351]:int(64)[13] "dead at end of block" "insert auto destroy"
      val call_tmp[1544353]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1544549 'move' tmp_offset[1544351] 0)
      const-val call_tmp[1544364]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
      (1544366 'move' call_tmp[1544364](1544369 call ENOERR[223675]))
      val err[1544370]:syserr[223605] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1544492]:syserr[223605] "dead at end of block" "initialized later" "temp"
      (1544537 call =[224154] init_coerce_tmp[1544492] call_tmp[1544364])
      (1544372 'move' err[1544370] init_coerce_tmp[1544492])
      ref call_tmp[1544385]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "temp"
      ref rvfRerefTmp[2146321]:_ref(channel(true,dynamic,true))[1021895] "temp"
      (2146325 'move' rvfRerefTmp[2146321](2146322 'set reference' this[1841736]))
      (1544387 'move' call_tmp[1544385](1544390 call _channel_internal[1023137] rvfRerefTmp[2146321]))
      const-val call_tmp[1544393]:syserr[223605] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1544501]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1544507 'move' coerce_tmp[1544501](1544503 'cast' int(32)[95] 1))
      const-val coerce_tmp[1544509]:qio_channel_ptr_t[231486] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1544513 'move' coerce_tmp[1544509](1544511 'deref' call_tmp[1544385]))
      (1544395 'move' call_tmp[1544393](1544398 call qio_channel_path_offset[232945] coerce_tmp[1544501] coerce_tmp[1544509] tmp_path[1544345] tmp_offset[1544351]))
      (1544404 call =[224133] err[1544370] call_tmp[1544393])
      const-val call_tmp[1544411]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1544413 'move' call_tmp[1544411](1544416 call ![223979] err[1544370]))
      const-val call_tmp[1544418]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1544420 'move' call_tmp[1544418] call_tmp[1544411])
      if call_tmp[1544418]
      {
        const-val call_tmp[1544427]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val default_arg_length[1544522]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        val error[1847076]:Error[167984] "error variable" "temp"
        (1847078 'move' error[1847076] nil[44])
        (1544527 'move' default_arg_length[1544522](1544524 call createStringWithNewBuffer_default_length[964107] tmp_path[1544345] error[1847076]))
        val errorExists[2172100]:bool[10] "temp"
        (2172105 'move' errorExists[2172100](2172102 '!=' error[1847076] nil[44]))
        if errorExists[2172100]
        {
          (1847082 '=' error_out[1847071] error[1847076])
          gotoErrorHandlingReturn _endon_fn[1847073] _endon_fn[1847073]
        }
        val error[1847091]:Error[167984] "error variable" "temp"
        (1847093 'move' error[1847091] nil[44])
        const-val ret_tmp[1862654]:string[26] "temp"
        (1544432 call createStringWithNewBuffer[30413] tmp_path[1544345] default_arg_length[1544522] replace[173694] error[1847091] ret_tmp[1862654])
        (1862657 'move' call_tmp[1544427] ret_tmp[1862654])
        val errorExists[2172108]:bool[10] "temp"
        (2172113 'move' errorExists[2172108](2172110 '!=' error[1847091] nil[44]))
        if errorExists[2172108]
        {
          (1847097 '=' error_out[1847071] error[1847091])
          gotoErrorHandlingReturn _endon_fn[1847073] _endon_fn[1847073]
        }
        (1544437 call =[38272] path[1841738] call_tmp[1544427])
        (1884605 call chpl__autoDestroy[1562275] call_tmp[1544427])
        (1544444 call chpl_free_c_string[22709] tmp_path[1544345])
        (1544449 call =[435370] offset[1841740] tmp_offset[1544351])
      }
    }
    label _endon_fn[1847073]
    (1544456 return _void[55])
  }
  function on_fn[1544613](const in arg this[1841742]:channel(true,dynamic,true)[1021886]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1544619]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "temp"
      ref rvfRerefTmp[2146335]:_ref(channel(true,dynamic,true))[1021895] "temp"
      (2146339 'move' rvfRerefTmp[2146335](2146336 'set reference' this[1841742]))
      (1544621 'move' call_tmp[1544619](1544624 call _channel_internal[1023137] rvfRerefTmp[2146335]))
      const-val coerce_tmp[1544654]:qio_channel_ptr_t[231486] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1544658 'move' coerce_tmp[1544654](1544656 'deref' call_tmp[1544619]))
      (1544628 call qio_channel_unlock[233040] coerce_tmp[1544654])
    }
    (1544630 return _void[55])
  }
  function on_fn[1571870](ref arg this[1841768]:_ref(channel(false,dynamic,true))[985697]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1571876]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "temp"
      (1571878 'move' call_tmp[1571876](1571881 call _channel_internal[1018427] this[1841768]))
      const-val coerce_tmp[1571919]:qio_channel_ptr_t[231486] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1571923 'move' coerce_tmp[1571919](1571921 'deref' call_tmp[1571876]))
      (1571885 call qio_channel_release[232982] coerce_tmp[1571919])
      ref call_tmp[1571888]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "temp"
      (1571890 'move' call_tmp[1571888](1571893 call _channel_internal[1018427] this[1841768]))
      (1571897 call =[861541] call_tmp[1571888] QIO_CHANNEL_PTR_NULL[231489])
    }
    (1571900 return _void[55])
  }
  function on_fn[1634849](ref arg this[1841810]:_ref(channel(true,dynamic,true))[1021895]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1634855]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "temp"
      (1634857 'move' call_tmp[1634855](1634860 call _channel_internal[1023137] this[1841810]))
      const-val coerce_tmp[1634898]:qio_channel_ptr_t[231486] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1634902 'move' coerce_tmp[1634898](1634900 'deref' call_tmp[1634855]))
      (1634864 call qio_channel_release[232982] coerce_tmp[1634898])
      ref call_tmp[1634867]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "temp"
      (1634869 'move' call_tmp[1634867](1634872 call _channel_internal[1023137] this[1841810]))
      (1634876 call =[861541] call_tmp[1634867] QIO_CHANNEL_PTR_NULL[231489])
    }
    (1634879 return _void[55])
  }
  function on_fn[1637013](ref arg this[1841814]:_ref(channel(true,dynamic,false))[1061017]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1637019]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "temp"
      (1637021 'move' call_tmp[1637019](1637024 call _channel_internal[1061850] this[1841814]))
      const-val coerce_tmp[1637062]:qio_channel_ptr_t[231486] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1637066 'move' coerce_tmp[1637062](1637064 'deref' call_tmp[1637019]))
      (1637028 call qio_channel_release[232982] coerce_tmp[1637062])
      ref call_tmp[1637031]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "temp"
      (1637033 'move' call_tmp[1637031](1637036 call _channel_internal[1061850] this[1841814]))
      (1637040 call =[861541] call_tmp[1637031] QIO_CHANNEL_PTR_NULL[231489])
    }
    (1637043 return _void[55])
  }
  function on_fn[1641267](ref arg this[1841820]:_ref(channel(false,dynamic,false))[1080752]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1641273]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "temp"
      (1641275 'move' call_tmp[1641273](1641278 call _channel_internal[1081582] this[1841820]))
      const-val coerce_tmp[1641316]:qio_channel_ptr_t[231486] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1641320 'move' coerce_tmp[1641316](1641318 'deref' call_tmp[1641273]))
      (1641282 call qio_channel_release[232982] coerce_tmp[1641316])
      ref call_tmp[1641285]:_ref(qio_channel_ptr_t)[936945] "dead after last mention" "maybe param" "temp"
      (1641287 'move' call_tmp[1641285](1641290 call _channel_internal[1081582] this[1841820]))
      (1641294 call =[861541] call_tmp[1641285] QIO_CHANNEL_PTR_NULL[231489])
    }
    (1641297 return _void[55])
  }
  function chpl__deinit_IO[1887249]() : void[4] "resolved"
  {
    label _endchpl__deinit_IO[1887255]
    (1887275 call chpl__autoDestroy[1564124] call_tmp[724091])
    (1887272 call chpl__autoDestroy[1564124] call_tmp[724074])
    (1887269 call chpl__autoDestroy[1564124] call_tmp[724057])
    (1887266 call chpl__autoDestroy[1634913] stderr[250285])
    (1887263 call chpl__autoDestroy[1634913] stdout[250256])
    (1887260 call chpl__autoDestroy[1571934] stdin[250229])
    ref tmp[2147120]:6*string[985278] "temp"
    (2147125 'move' tmp[2147120](2147122 '.' _arg_to_proto_names[246582] value[2147110]))
    (1887257 call chpl__autoDestroy[1570961] tmp[2147120])
    (1887252 return _void[55])
  }
  function wrapon_fn[2148724](const in arg dummy_locale_arg[2148726]:chpl_localeID_t[209352], in arg buf[2148728]:c_void_ptr[149], in arg buf_size[2148730]:int(64)[13], in arg c[2148732]:_class_localson_fn[2148684]) : void[4] "on block"
  {
    val _0_tmp[2148737]:chpl_localeID_t[209352] "temp"
    (2148742 'move' _0_tmp[2148737](2148739 '.v' c[2148732] _0_tmp[2148687]))
    ref _1_this[2148744]:file[235601] "temp"
    (2148749 'move' _1_this[2148744](2148746 '.v' c[2148732] _1_this[2148689]))
    (2148735 call on_fn[935658] _1_this[2148744])
    (2148752 return _void[55])
  }
  function wrapon_fn[2148835](const in arg dummy_locale_arg[2148837]:chpl_localeID_t[209352], in arg buf[2148839]:c_void_ptr[149], in arg buf_size[2148841]:int(64)[13], in arg c[2148843]:_class_localson_fn[2148777]) : void[4] "on block"
  {
    val _0_tmp[2148848]:chpl_localeID_t[209352] "temp"
    (2148853 'move' _0_tmp[2148848](2148850 '.v' c[2148843] _0_tmp[2148780]))
    val _1_rvfDerefTmp[2148855]:file[235601] "temp"
    (2148860 'move' _1_rvfDerefTmp[2148855](2148857 '.v' c[2148843] _1_rvfDerefTmp[2148782]))
    ref _2_ret[2148863]:iostyle[231865] "temp"
    (2148868 'move' _2_ret[2148863](2148865 '.v' c[2148843] _2_ret[2148784]))
    ref _3_error[2148871]:Error[167984] "temp"
    (2148876 'move' _3_error[2148871](2148873 '.v' c[2148843] _3_error[2148786]))
    (2148846 call on_fn[935667] _1_rvfDerefTmp[2148855] _2_ret[2148863] _3_error[2148871])
    (2148879 return _void[55])
  }
  function wrapon_fn[2148949](const in arg dummy_locale_arg[2148951]:chpl_localeID_t[209352], in arg buf[2148953]:c_void_ptr[149], in arg buf_size[2148955]:int(64)[13], in arg c[2148957]:_class_localson_fn[2148903]) : void[4] "on block"
  {
    val _0_tmp[2148962]:chpl_localeID_t[209352] "temp"
    (2148967 'move' _0_tmp[2148962](2148964 '.v' c[2148957] _0_tmp[2148906]))
    val _1_rvfDerefTmp[2148969]:file[235601] "temp"
    (2148974 'move' _1_rvfDerefTmp[2148969](2148971 '.v' c[2148957] _1_rvfDerefTmp[2148908]))
    ref _2_err[2148977]:syserr[223605] "temp"
    (2148982 'move' _2_err[2148977](2148979 '.v' c[2148957] _2_err[2148910]))
    (2148960 call on_fn[935676] _1_rvfDerefTmp[2148969] _2_err[2148977])
    (2148985 return _void[55])
  }
  function wrapon_fn[2149081](const in arg dummy_locale_arg[2149083]:chpl_localeID_t[209352], in arg buf[2149085]:c_void_ptr[149], in arg buf_size[2149087]:int(64)[13], in arg c[2149089]:_class_localson_fn[2149011]) : void[4] "on block"
  {
    val _0_tmp[2149094]:chpl_localeID_t[209352] "temp"
    (2149099 'move' _0_tmp[2149094](2149096 '.v' c[2149089] _0_tmp[2149014]))
    val _1_rvfDerefTmp[2149101]:file[235601] "temp"
    (2149106 'move' _1_rvfDerefTmp[2149101](2149103 '.v' c[2149089] _1_rvfDerefTmp[2149016]))
    ref _2_err[2149109]:syserr[223605] "temp"
    (2149114 'move' _2_err[2149109](2149111 '.v' c[2149089] _2_err[2149018]))
    ref _3_ret[2149117]:string[26] "temp"
    (2149122 'move' _3_ret[2149117](2149119 '.v' c[2149089] _3_ret[2149020]))
    ref _4_error[2149125]:Error[167984] "temp"
    (2149130 'move' _4_error[2149125](2149127 '.v' c[2149089] _4_error[2149022]))
    (2149092 call on_fn[935694] _1_rvfDerefTmp[2149101] _2_err[2149109] _3_ret[2149117] _4_error[2149125])
    (2149133 return _void[55])
  }
  function wrapon_fn[2149454](const in arg dummy_locale_arg[2149456]:chpl_localeID_t[209352], in arg buf[2149458]:c_void_ptr[149], in arg buf_size[2149460]:int(64)[13], in arg c[2149462]:_class_localson_fn[2149360]) : void[4] "on block"
  {
    val _0_tmp[2149467]:chpl_localeID_t[209352] "temp"
    (2149472 'move' _0_tmp[2149467](2149469 '.v' c[2149462] _0_tmp[2149363]))
    val _1_rvfDerefTmp[2149474]:iostyle[231865] "temp"
    (2149479 'move' _1_rvfDerefTmp[2149474](2149476 '.v' c[2149462] _1_rvfDerefTmp[2149365]))
    val _2_end[2149482]:int(64)[13] "temp"
    (2149487 'move' _2_end[2149482](2149484 '.v' c[2149462] _2_end[2149367]))
    val _3_rvfDerefTmp[2149490]:file[235601] "temp"
    (2149495 'move' _3_rvfDerefTmp[2149490](2149492 '.v' c[2149462] _3_rvfDerefTmp[2149369]))
    ref _4_ret[2149498]:channel(false,dynamic,true)[985688] "temp"
    (2149503 'move' _4_ret[2149498](2149500 '.v' c[2149462] _4_ret[2149371]))
    val _5_hints[2149506]:int(32)[95] "temp"
    (2149511 'move' _5_hints[2149506](2149508 '.v' c[2149462] _5_hints[2149373]))
    ref _6_err[2149514]:syserr[223605] "temp"
    (2149519 'move' _6_err[2149514](2149516 '.v' c[2149462] _6_err[2149375]))
    val _7_start[2149522]:int(64)[13] "temp"
    (2149527 'move' _7_start[2149522](2149524 '.v' c[2149462] _7_start[2149377]))
    ref _8_error[2149530]:Error[167984] "temp"
    (2149535 'move' _8_error[2149530](2149532 '.v' c[2149462] _8_error[2149379]))
    (2149465 call on_fn[1016756] _1_rvfDerefTmp[2149474] _2_end[2149482] _3_rvfDerefTmp[2149490] _4_ret[2149498] _5_hints[2149506] _6_err[2149514] _7_start[2149522] _8_error[2149530])
    (2149538 return _void[55])
  }
  function wrapon_fn[2149649](const in arg dummy_locale_arg[2149651]:chpl_localeID_t[209352], in arg buf[2149653]:c_void_ptr[149], in arg buf_size[2149655]:int(64)[13], in arg c[2149657]:_class_localson_fn[2149567]) : void[4] "on block"
  {
    val _0_tmp[2149662]:chpl_localeID_t[209352] "temp"
    (2149667 'move' _0_tmp[2149662](2149664 '.v' c[2149657] _0_tmp[2149570]))
    val _1_start[2149669]:int(64)[13] "temp"
    (2149674 'move' _1_start[2149669](2149671 '.v' c[2149657] _1_start[2149572]))
    val _2_rvfDerefTmp[2149677]:file[235601] "temp"
    (2149682 'move' _2_rvfDerefTmp[2149677](2149679 '.v' c[2149657] _2_rvfDerefTmp[2149574]))
    ref _3__formal_tmp_error[2149685]:syserr[223605] "temp"
    (2149690 'move' _3__formal_tmp_error[2149685](2149687 '.v' c[2149657] _3__formal_tmp_error[2149576]))
    val _4_end[2149693]:int(64)[13] "temp"
    (2149698 'move' _4_end[2149693](2149695 '.v' c[2149657] _4_end[2149578]))
    val _5_hints[2149701]:int(32)[95] "temp"
    (2149706 'move' _5_hints[2149701](2149703 '.v' c[2149657] _5_hints[2149580]))
    val _6_rvfDerefTmp[2149709]:iostyle[231865] "temp"
    (2149714 'move' _6_rvfDerefTmp[2149709](2149711 '.v' c[2149657] _6_rvfDerefTmp[2149582]))
    ref _7_this[2149717]:channel(false,dynamic,true)[985688] "temp"
    (2149722 'move' _7_this[2149717](2149719 '.v' c[2149657] _7_this[2149584]))
    (2149660 call on_fn[1017786] _1_start[2149669] _2_rvfDerefTmp[2149677] _3__formal_tmp_error[2149685] _4_end[2149693] _5_hints[2149701] _6_rvfDerefTmp[2149709] _7_this[2149717])
    (2149725 return _void[55])
  }
  function wrapon_fn[2149782](const in arg dummy_locale_arg[2149784]:chpl_localeID_t[209352], in arg buf[2149786]:c_void_ptr[149], in arg buf_size[2149788]:int(64)[13], in arg c[2149790]:_class_localson_fn[2149748]) : void[4] "on block"
  {
    val _0_tmp[2149795]:chpl_localeID_t[209352] "temp"
    (2149800 'move' _0_tmp[2149795](2149797 '.v' c[2149790] _0_tmp[2149751]))
    val _1_rvfDerefTmp[2149802]:channel(false,dynamic,true)[985688] "temp"
    (2149807 'move' _1_rvfDerefTmp[2149802](2149804 '.v' c[2149790] _1_rvfDerefTmp[2149753]))
    (2149793 call on_fn[1018726] _1_rvfDerefTmp[2149802])
    (2149810 return _void[55])
  }
  function wrapon_fn[2149873](const in arg dummy_locale_arg[2149875]:chpl_localeID_t[209352], in arg buf[2149877]:c_void_ptr[149], in arg buf_size[2149879]:int(64)[13], in arg c[2149881]:_class_localson_fn[2149833]) : void[4] "on block"
  {
    val _0_tmp[2149886]:chpl_localeID_t[209352] "temp"
    (2149891 'move' _0_tmp[2149886](2149888 '.v' c[2149881] _0_tmp[2149836]))
    ref _1_lhs[2149893]:channel(false,dynamic,true)[985688] "temp"
    (2149898 'move' _1_lhs[2149893](2149895 '.v' c[2149881] _1_lhs[2149838]))
    (2149884 call on_fn[1018770] _1_lhs[2149893])
    (2149901 return _void[55])
  }
  function wrapon_fn[2150137](const in arg dummy_locale_arg[2150139]:chpl_localeID_t[209352], in arg buf[2150141]:c_void_ptr[149], in arg buf_size[2150143]:int(64)[13], in arg c[2150145]:_class_localson_fn[2150043]) : void[4] "on block"
  {
    val _0_tmp[2150150]:chpl_localeID_t[209352] "temp"
    (2150155 'move' _0_tmp[2150150](2150152 '.v' c[2150145] _0_tmp[2150046]))
    val _1_rvfDerefTmp[2150157]:file[235601] "temp"
    (2150162 'move' _1_rvfDerefTmp[2150157](2150159 '.v' c[2150145] _1_rvfDerefTmp[2150048]))
    ref _2_ret[2150165]:channel(true,dynamic,true)[1021886] "temp"
    (2150170 'move' _2_ret[2150165](2150167 '.v' c[2150145] _2_ret[2150050]))
    val _3_hints[2150173]:int(32)[95] "temp"
    (2150178 'move' _3_hints[2150173](2150175 '.v' c[2150145] _3_hints[2150052]))
    ref _4_err[2150181]:syserr[223605] "temp"
    (2150186 'move' _4_err[2150181](2150183 '.v' c[2150145] _4_err[2150054]))
    val _5_start[2150189]:int(64)[13] "temp"
    (2150194 'move' _5_start[2150189](2150191 '.v' c[2150145] _5_start[2150056]))
    val _6_end[2150197]:int(64)[13] "temp"
    (2150202 'move' _6_end[2150197](2150199 '.v' c[2150145] _6_end[2150058]))
    val _7_rvfDerefTmp[2150205]:iostyle[231865] "temp"
    (2150210 'move' _7_rvfDerefTmp[2150205](2150207 '.v' c[2150145] _7_rvfDerefTmp[2150060]))
    ref _8_error[2150213]:Error[167984] "temp"
    (2150218 'move' _8_error[2150213](2150215 '.v' c[2150145] _8_error[2150062]))
    (2150148 call on_fn[1022331] _1_rvfDerefTmp[2150157] _2_ret[2150165] _3_hints[2150173] _4_err[2150181] _5_start[2150189] _6_end[2150197] _7_rvfDerefTmp[2150205] _8_error[2150213])
    (2150221 return _void[55])
  }
  function wrapon_fn[2150332](const in arg dummy_locale_arg[2150334]:chpl_localeID_t[209352], in arg buf[2150336]:c_void_ptr[149], in arg buf_size[2150338]:int(64)[13], in arg c[2150340]:_class_localson_fn[2150250]) : void[4] "on block"
  {
    val _0_tmp[2150345]:chpl_localeID_t[209352] "temp"
    (2150350 'move' _0_tmp[2150345](2150347 '.v' c[2150340] _0_tmp[2150253]))
    ref _1_this[2150352]:channel(true,dynamic,true)[1021886] "temp"
    (2150357 'move' _1_this[2150352](2150354 '.v' c[2150340] _1_this[2150255]))
    val _2_hints[2150360]:int(32)[95] "temp"
    (2150365 'move' _2_hints[2150360](2150362 '.v' c[2150340] _2_hints[2150257]))
    val _3_rvfDerefTmp[2150368]:iostyle[231865] "temp"
    (2150373 'move' _3_rvfDerefTmp[2150368](2150370 '.v' c[2150340] _3_rvfDerefTmp[2150259]))
    val _4_end[2150376]:int(64)[13] "temp"
    (2150381 'move' _4_end[2150376](2150378 '.v' c[2150340] _4_end[2150261]))
    val _5_start[2150384]:int(64)[13] "temp"
    (2150389 'move' _5_start[2150384](2150386 '.v' c[2150340] _5_start[2150263]))
    val _6_rvfDerefTmp[2150392]:file[235601] "temp"
    (2150397 'move' _6_rvfDerefTmp[2150392](2150394 '.v' c[2150340] _6_rvfDerefTmp[2150265]))
    ref _7__formal_tmp_error[2150400]:syserr[223605] "temp"
    (2150405 'move' _7__formal_tmp_error[2150400](2150402 '.v' c[2150340] _7__formal_tmp_error[2150267]))
    (2150343 call on_fn[1022822] _1_this[2150352] _2_hints[2150360] _3_rvfDerefTmp[2150368] _4_end[2150376] _5_start[2150384] _6_rvfDerefTmp[2150392] _7__formal_tmp_error[2150400])
    (2150408 return _void[55])
  }
  function wrapon_fn[2150465](const in arg dummy_locale_arg[2150467]:chpl_localeID_t[209352], in arg buf[2150469]:c_void_ptr[149], in arg buf_size[2150471]:int(64)[13], in arg c[2150473]:_class_localson_fn[2150431]) : void[4] "on block"
  {
    val _0_tmp[2150478]:chpl_localeID_t[209352] "temp"
    (2150483 'move' _0_tmp[2150478](2150480 '.v' c[2150473] _0_tmp[2150434]))
    val _1_rvfDerefTmp[2150485]:channel(true,dynamic,true)[1021886] "temp"
    (2150490 'move' _1_rvfDerefTmp[2150485](2150487 '.v' c[2150473] _1_rvfDerefTmp[2150436]))
    (2150476 call on_fn[1023434] _1_rvfDerefTmp[2150485])
    (2150493 return _void[55])
  }
  function wrapon_fn[2150556](const in arg dummy_locale_arg[2150558]:chpl_localeID_t[209352], in arg buf[2150560]:c_void_ptr[149], in arg buf_size[2150562]:int(64)[13], in arg c[2150564]:_class_localson_fn[2150516]) : void[4] "on block"
  {
    val _0_tmp[2150569]:chpl_localeID_t[209352] "temp"
    (2150574 'move' _0_tmp[2150569](2150571 '.v' c[2150564] _0_tmp[2150519]))
    ref _1_lhs[2150576]:channel(true,dynamic,true)[1021886] "temp"
    (2150581 'move' _1_lhs[2150576](2150578 '.v' c[2150564] _1_lhs[2150521]))
    (2150567 call on_fn[1023478] _1_lhs[2150576])
    (2150584 return _void[55])
  }
  function wrapon_fn[2150850](const in arg dummy_locale_arg[2150852]:chpl_localeID_t[209352], in arg buf[2150854]:c_void_ptr[149], in arg buf_size[2150856]:int(64)[13], in arg c[2150858]:_class_localson_fn[2150756]) : void[4] "on block"
  {
    val _0_tmp[2150863]:chpl_localeID_t[209352] "temp"
    (2150868 'move' _0_tmp[2150863](2150865 '.v' c[2150858] _0_tmp[2150759]))
    val _1_end[2150870]:int(64)[13] "temp"
    (2150875 'move' _1_end[2150870](2150872 '.v' c[2150858] _1_end[2150761]))
    val _2_rvfDerefTmp[2150878]:iostyle[231865] "temp"
    (2150883 'move' _2_rvfDerefTmp[2150878](2150880 '.v' c[2150858] _2_rvfDerefTmp[2150763]))
    val _3_rvfDerefTmp[2150886]:file[235601] "temp"
    (2150891 'move' _3_rvfDerefTmp[2150886](2150888 '.v' c[2150858] _3_rvfDerefTmp[2150765]))
    ref _4_err[2150894]:syserr[223605] "temp"
    (2150899 'move' _4_err[2150894](2150896 '.v' c[2150858] _4_err[2150767]))
    val _5_hints[2150902]:int(32)[95] "temp"
    (2150907 'move' _5_hints[2150902](2150904 '.v' c[2150858] _5_hints[2150769]))
    val _6_start[2150910]:int(64)[13] "temp"
    (2150915 'move' _6_start[2150910](2150912 '.v' c[2150858] _6_start[2150771]))
    ref _7_ret[2150918]:channel(true,dynamic,false)[1061008] "temp"
    (2150923 'move' _7_ret[2150918](2150920 '.v' c[2150858] _7_ret[2150773]))
    ref _8_error[2150926]:Error[167984] "temp"
    (2150931 'move' _8_error[2150926](2150928 '.v' c[2150858] _8_error[2150775]))
    (2150861 call on_fn[1061083] _1_end[2150870] _2_rvfDerefTmp[2150878] _3_rvfDerefTmp[2150886] _4_err[2150894] _5_hints[2150902] _6_start[2150910] _7_ret[2150918] _8_error[2150926])
    (2150934 return _void[55])
  }
  function wrapon_fn[2151045](const in arg dummy_locale_arg[2151047]:chpl_localeID_t[209352], in arg buf[2151049]:c_void_ptr[149], in arg buf_size[2151051]:int(64)[13], in arg c[2151053]:_class_localson_fn[2150963]) : void[4] "on block"
  {
    val _0_tmp[2151058]:chpl_localeID_t[209352] "temp"
    (2151063 'move' _0_tmp[2151058](2151060 '.v' c[2151053] _0_tmp[2150966]))
    val _1_end[2151065]:int(64)[13] "temp"
    (2151070 'move' _1_end[2151065](2151067 '.v' c[2151053] _1_end[2150968]))
    val _2_hints[2151073]:int(32)[95] "temp"
    (2151078 'move' _2_hints[2151073](2151075 '.v' c[2151053] _2_hints[2150970]))
    val _3_rvfDerefTmp[2151081]:iostyle[231865] "temp"
    (2151086 'move' _3_rvfDerefTmp[2151081](2151083 '.v' c[2151053] _3_rvfDerefTmp[2150972]))
    ref _4_this[2151089]:channel(true,dynamic,false)[1061008] "temp"
    (2151094 'move' _4_this[2151089](2151091 '.v' c[2151053] _4_this[2150974]))
    val _5_start[2151097]:int(64)[13] "temp"
    (2151102 'move' _5_start[2151097](2151099 '.v' c[2151053] _5_start[2150976]))
    val _6_rvfDerefTmp[2151105]:file[235601] "temp"
    (2151110 'move' _6_rvfDerefTmp[2151105](2151107 '.v' c[2151053] _6_rvfDerefTmp[2150978]))
    ref _7__formal_tmp_error[2151113]:syserr[223605] "temp"
    (2151118 'move' _7__formal_tmp_error[2151113](2151115 '.v' c[2151053] _7__formal_tmp_error[2150980]))
    (2151056 call on_fn[1061535] _1_end[2151065] _2_hints[2151073] _3_rvfDerefTmp[2151081] _4_this[2151089] _5_start[2151097] _6_rvfDerefTmp[2151105] _7__formal_tmp_error[2151113])
    (2151121 return _void[55])
  }
  function wrapon_fn[2151178](const in arg dummy_locale_arg[2151180]:chpl_localeID_t[209352], in arg buf[2151182]:c_void_ptr[149], in arg buf_size[2151184]:int(64)[13], in arg c[2151186]:_class_localson_fn[2151144]) : void[4] "on block"
  {
    val _0_tmp[2151191]:chpl_localeID_t[209352] "temp"
    (2151196 'move' _0_tmp[2151191](2151193 '.v' c[2151186] _0_tmp[2151147]))
    val _1_rvfDerefTmp[2151198]:channel(true,dynamic,false)[1061008] "temp"
    (2151203 'move' _1_rvfDerefTmp[2151198](2151200 '.v' c[2151186] _1_rvfDerefTmp[2151149]))
    (2151189 call on_fn[1062147] _1_rvfDerefTmp[2151198])
    (2151206 return _void[55])
  }
  function wrapon_fn[2151269](const in arg dummy_locale_arg[2151271]:chpl_localeID_t[209352], in arg buf[2151273]:c_void_ptr[149], in arg buf_size[2151275]:int(64)[13], in arg c[2151277]:_class_localson_fn[2151229]) : void[4] "on block"
  {
    val _0_tmp[2151282]:chpl_localeID_t[209352] "temp"
    (2151287 'move' _0_tmp[2151282](2151284 '.v' c[2151277] _0_tmp[2151232]))
    ref _1_lhs[2151289]:channel(true,dynamic,false)[1061008] "temp"
    (2151294 'move' _1_lhs[2151289](2151291 '.v' c[2151277] _1_lhs[2151234]))
    (2151280 call on_fn[1062191] _1_lhs[2151289])
    (2151297 return _void[55])
  }
  function wrapon_fn[2151367](const in arg dummy_locale_arg[2151369]:chpl_localeID_t[209352], in arg buf[2151371]:c_void_ptr[149], in arg buf_size[2151373]:int(64)[13], in arg c[2151375]:_class_localson_fn[2151321]) : void[4] "on block"
  {
    val _0_tmp[2151380]:chpl_localeID_t[209352] "temp"
    (2151385 'move' _0_tmp[2151380](2151382 '.v' c[2151375] _0_tmp[2151324]))
    val _1_rvfDerefTmp[2151387]:channel(true,dynamic,false)[1061008] "temp"
    (2151392 'move' _1_rvfDerefTmp[2151387](2151389 '.v' c[2151375] _1_rvfDerefTmp[2151326]))
    ref _2_err[2151395]:syserr[223605] "temp"
    (2151400 'move' _2_err[2151395](2151397 '.v' c[2151375] _2_err[2151328]))
    (2151378 call on_fn[1062516] _1_rvfDerefTmp[2151387] _2_err[2151395])
    (2151403 return _void[55])
  }
  function wrapon_fn[2151505](const in arg dummy_locale_arg[2151507]:chpl_localeID_t[209352], in arg buf[2151509]:c_void_ptr[149], in arg buf_size[2151511]:int(64)[13], in arg c[2151513]:_class_localson_fn[2151429]) : void[4] "on block"
  {
    val _0_tmp[2151518]:chpl_localeID_t[209352] "temp"
    (2151523 'move' _0_tmp[2151518](2151520 '.v' c[2151513] _0_tmp[2151432]))
    ref _1_this[2151525]:channel(true,dynamic,false)[1061008] "temp"
    (2151530 'move' _1_this[2151525](2151527 '.v' c[2151513] _1_this[2151434]))
    ref _2_path[2151533]:string[26] "temp"
    (2151538 'move' _2_path[2151533](2151535 '.v' c[2151513] _2_path[2151436]))
    ref _3_offset[2151541]:int(64)[13] "temp"
    (2151546 'move' _3_offset[2151541](2151543 '.v' c[2151513] _3_offset[2151438]))
    ref _4_error[2151549]:Error[167984] "temp"
    (2151554 'move' _4_error[2151549](2151551 '.v' c[2151513] _4_error[2151440]))
    (2151516 call on_fn[1062993] _1_this[2151525] _2_path[2151533] _3_offset[2151541] _4_error[2151549])
    (2151557 return _void[55])
  }
  function wrapon_fn[2151647](const in arg dummy_locale_arg[2151649]:chpl_localeID_t[209352], in arg buf[2151651]:c_void_ptr[149], in arg buf_size[2151653]:int(64)[13], in arg c[2151655]:_class_localson_fn[2151583]) : void[4] "on block"
  {
    val _0_tmp[2151660]:chpl_localeID_t[209352] "temp"
    (2151665 'move' _0_tmp[2151660](2151662 '.v' c[2151655] _0_tmp[2151586]))
    val _1_rvfDerefTmp[2151667]:channel(true,dynamic,false)[1061008] "temp"
    (2151672 'move' _1_rvfDerefTmp[2151667](2151669 '.v' c[2151655] _1_rvfDerefTmp[2151588]))
    ref _2_args[2151675]:1*byteIndex[1057142] "temp"
    (2151680 'move' _2_args[2151675](2151677 '.v' c[2151655] _2_args[2151590]))
    val _3_rvfDerefTmp[2151683]:locale[28] "temp"
    (2151688 'move' _3_rvfDerefTmp[2151683](2151685 '.v' c[2151655] _3_rvfDerefTmp[2151592]))
    ref _4_error[2151691]:Error[167984] "temp"
    (2151696 'move' _4_error[2151691](2151693 '.v' c[2151655] _4_error[2151594]))
    (2151658 call on_fn[1066150] _1_rvfDerefTmp[2151667] _2_args[2151675] _3_rvfDerefTmp[2151683] _4_error[2151691])
    (2151699 return _void[55])
  }
  function wrapon_fn[2151789](const in arg dummy_locale_arg[2151791]:chpl_localeID_t[209352], in arg buf[2151793]:c_void_ptr[149], in arg buf_size[2151795]:int(64)[13], in arg c[2151797]:_class_localson_fn[2151725]) : void[4] "on block"
  {
    val _0_tmp[2151802]:chpl_localeID_t[209352] "temp"
    (2151807 'move' _0_tmp[2151802](2151804 '.v' c[2151797] _0_tmp[2151728]))
    ref _1_this[2151809]:channel(true,dynamic,false)[1061008] "temp"
    (2151814 'move' _1_this[2151809](2151811 '.v' c[2151797] _1_this[2151730]))
    val _2_x[2151817]:int(64)[13] "temp"
    (2151822 'move' _2_x[2151817](2151819 '.v' c[2151797] _2_x[2151732]))
    val _3_rvfDerefTmp[2151825]:locale[28] "temp"
    (2151830 'move' _3_rvfDerefTmp[2151825](2151827 '.v' c[2151797] _3_rvfDerefTmp[2151734]))
    ref _4_error[2151833]:Error[167984] "temp"
    (2151838 'move' _4_error[2151833](2151835 '.v' c[2151797] _4_error[2151736]))
    (2151800 call on_fn[1068929] _1_this[2151809] _2_x[2151817] _3_rvfDerefTmp[2151825] _4_error[2151833])
    (2151841 return _void[55])
  }
  function wrapon_fn[2151911](const in arg dummy_locale_arg[2151913]:chpl_localeID_t[209352], in arg buf[2151915]:c_void_ptr[149], in arg buf_size[2151917]:int(64)[13], in arg c[2151919]:_class_localson_fn[2151865]) : void[4] "on block"
  {
    val _0_tmp[2151924]:chpl_localeID_t[209352] "temp"
    (2151929 'move' _0_tmp[2151924](2151926 '.v' c[2151919] _0_tmp[2151868]))
    val _1_rvfDerefTmp[2151931]:channel(true,dynamic,false)[1061008] "temp"
    (2151936 'move' _1_rvfDerefTmp[2151931](2151933 '.v' c[2151919] _1_rvfDerefTmp[2151870]))
    ref _2_ret[2151939]:int(64)[13] "temp"
    (2151944 'move' _2_ret[2151939](2151941 '.v' c[2151919] _2_ret[2151872]))
    (2151922 call on_fn[1080266] _1_rvfDerefTmp[2151931] _2_ret[2151939])
    (2151947 return _void[55])
  }
  function wrapon_fn[2152071](const in arg dummy_locale_arg[2152073]:chpl_localeID_t[209352], in arg buf[2152075]:c_void_ptr[149], in arg buf_size[2152077]:int(64)[13], in arg c[2152079]:_class_localson_fn[2151977]) : void[4] "on block"
  {
    val _0_tmp[2152084]:chpl_localeID_t[209352] "temp"
    (2152089 'move' _0_tmp[2152084](2152086 '.v' c[2152079] _0_tmp[2151980]))
    val _1_end[2152091]:int(64)[13] "temp"
    (2152096 'move' _1_end[2152091](2152093 '.v' c[2152079] _1_end[2151982]))
    val _2_rvfDerefTmp[2152099]:iostyle[231865] "temp"
    (2152104 'move' _2_rvfDerefTmp[2152099](2152101 '.v' c[2152079] _2_rvfDerefTmp[2151984]))
    val _3_rvfDerefTmp[2152107]:file[235601] "temp"
    (2152112 'move' _3_rvfDerefTmp[2152107](2152109 '.v' c[2152079] _3_rvfDerefTmp[2151986]))
    ref _4_err[2152115]:syserr[223605] "temp"
    (2152120 'move' _4_err[2152115](2152117 '.v' c[2152079] _4_err[2151988]))
    val _5_hints[2152123]:int(32)[95] "temp"
    (2152128 'move' _5_hints[2152123](2152125 '.v' c[2152079] _5_hints[2151990]))
    val _6_start[2152131]:int(64)[13] "temp"
    (2152136 'move' _6_start[2152131](2152133 '.v' c[2152079] _6_start[2151992]))
    ref _7_ret[2152139]:channel(false,dynamic,false)[1080743] "temp"
    (2152144 'move' _7_ret[2152139](2152141 '.v' c[2152079] _7_ret[2151994]))
    ref _8_error[2152147]:Error[167984] "temp"
    (2152152 'move' _8_error[2152147](2152149 '.v' c[2152079] _8_error[2151996]))
    (2152082 call on_fn[1080818] _1_end[2152091] _2_rvfDerefTmp[2152099] _3_rvfDerefTmp[2152107] _4_err[2152115] _5_hints[2152123] _6_start[2152131] _7_ret[2152139] _8_error[2152147])
    (2152155 return _void[55])
  }
  function wrapon_fn[2152266](const in arg dummy_locale_arg[2152268]:chpl_localeID_t[209352], in arg buf[2152270]:c_void_ptr[149], in arg buf_size[2152272]:int(64)[13], in arg c[2152274]:_class_localson_fn[2152184]) : void[4] "on block"
  {
    val _0_tmp[2152279]:chpl_localeID_t[209352] "temp"
    (2152284 'move' _0_tmp[2152279](2152281 '.v' c[2152274] _0_tmp[2152187]))
    val _1_hints[2152286]:int(32)[95] "temp"
    (2152291 'move' _1_hints[2152286](2152288 '.v' c[2152274] _1_hints[2152189]))
    val _2_rvfDerefTmp[2152294]:iostyle[231865] "temp"
    (2152299 'move' _2_rvfDerefTmp[2152294](2152296 '.v' c[2152274] _2_rvfDerefTmp[2152191]))
    val _3_start[2152302]:int(64)[13] "temp"
    (2152307 'move' _3_start[2152302](2152304 '.v' c[2152274] _3_start[2152193]))
    val _4_rvfDerefTmp[2152310]:file[235601] "temp"
    (2152315 'move' _4_rvfDerefTmp[2152310](2152312 '.v' c[2152274] _4_rvfDerefTmp[2152195]))
    ref _5__formal_tmp_error[2152318]:syserr[223605] "temp"
    (2152323 'move' _5__formal_tmp_error[2152318](2152320 '.v' c[2152274] _5__formal_tmp_error[2152197]))
    val _6_end[2152326]:int(64)[13] "temp"
    (2152331 'move' _6_end[2152326](2152328 '.v' c[2152274] _6_end[2152199]))
    ref _7_this[2152334]:channel(false,dynamic,false)[1080743] "temp"
    (2152339 'move' _7_this[2152334](2152336 '.v' c[2152274] _7_this[2152201]))
    (2152277 call on_fn[1081267] _1_hints[2152286] _2_rvfDerefTmp[2152294] _3_start[2152302] _4_rvfDerefTmp[2152310] _5__formal_tmp_error[2152318] _6_end[2152326] _7_this[2152334])
    (2152342 return _void[55])
  }
  function wrapon_fn[2152399](const in arg dummy_locale_arg[2152401]:chpl_localeID_t[209352], in arg buf[2152403]:c_void_ptr[149], in arg buf_size[2152405]:int(64)[13], in arg c[2152407]:_class_localson_fn[2152365]) : void[4] "on block"
  {
    val _0_tmp[2152412]:chpl_localeID_t[209352] "temp"
    (2152417 'move' _0_tmp[2152412](2152414 '.v' c[2152407] _0_tmp[2152368]))
    val _1_rvfDerefTmp[2152419]:channel(false,dynamic,false)[1080743] "temp"
    (2152424 'move' _1_rvfDerefTmp[2152419](2152421 '.v' c[2152407] _1_rvfDerefTmp[2152370]))
    (2152410 call on_fn[1081879] _1_rvfDerefTmp[2152419])
    (2152427 return _void[55])
  }
  function wrapon_fn[2152490](const in arg dummy_locale_arg[2152492]:chpl_localeID_t[209352], in arg buf[2152494]:c_void_ptr[149], in arg buf_size[2152496]:int(64)[13], in arg c[2152498]:_class_localson_fn[2152450]) : void[4] "on block"
  {
    val _0_tmp[2152503]:chpl_localeID_t[209352] "temp"
    (2152508 'move' _0_tmp[2152503](2152505 '.v' c[2152498] _0_tmp[2152453]))
    ref _1_lhs[2152510]:channel(false,dynamic,false)[1080743] "temp"
    (2152515 'move' _1_lhs[2152510](2152512 '.v' c[2152498] _1_lhs[2152455]))
    (2152501 call on_fn[1081923] _1_lhs[2152510])
    (2152518 return _void[55])
  }
  function wrapon_fn[2152588](const in arg dummy_locale_arg[2152590]:chpl_localeID_t[209352], in arg buf[2152592]:c_void_ptr[149], in arg buf_size[2152594]:int(64)[13], in arg c[2152596]:_class_localson_fn[2152542]) : void[4] "on block"
  {
    val _0_tmp[2152601]:chpl_localeID_t[209352] "temp"
    (2152606 'move' _0_tmp[2152601](2152603 '.v' c[2152596] _0_tmp[2152545]))
    val _1_rvfDerefTmp[2152608]:channel(false,dynamic,false)[1080743] "temp"
    (2152613 'move' _1_rvfDerefTmp[2152608](2152610 '.v' c[2152596] _1_rvfDerefTmp[2152547]))
    ref _2_err[2152616]:syserr[223605] "temp"
    (2152621 'move' _2_err[2152616](2152618 '.v' c[2152596] _2_err[2152549]))
    (2152599 call on_fn[1082248] _1_rvfDerefTmp[2152608] _2_err[2152616])
    (2152624 return _void[55])
  }
  function wrapon_fn[2152720](const in arg dummy_locale_arg[2152722]:chpl_localeID_t[209352], in arg buf[2152724]:c_void_ptr[149], in arg buf_size[2152726]:int(64)[13], in arg c[2152728]:_class_localson_fn[2152650]) : void[4] "on block"
  {
    val _0_tmp[2152733]:chpl_localeID_t[209352] "temp"
    (2152738 'move' _0_tmp[2152733](2152735 '.v' c[2152728] _0_tmp[2152653]))
    val _1_rvfDerefTmp[2152740]:channel(false,dynamic,false)[1080743] "temp"
    (2152745 'move' _1_rvfDerefTmp[2152740](2152742 '.v' c[2152728] _1_rvfDerefTmp[2152655]))
    ref _2_path[2152748]:string[26] "temp"
    (2152753 'move' _2_path[2152748](2152750 '.v' c[2152728] _2_path[2152657]))
    ref _3_offset[2152756]:int(64)[13] "temp"
    (2152761 'move' _3_offset[2152756](2152758 '.v' c[2152728] _3_offset[2152659]))
    ref _4_error[2152764]:Error[167984] "temp"
    (2152769 'move' _4_error[2152764](2152766 '.v' c[2152728] _4_error[2152661]))
    (2152731 call on_fn[1082677] _1_rvfDerefTmp[2152740] _2_path[2152748] _3_offset[2152756] _4_error[2152764])
    (2152772 return _void[55])
  }
  function wrapon_fn[2153004](const in arg dummy_locale_arg[2153006]:chpl_localeID_t[209352], in arg buf[2153008]:c_void_ptr[149], in arg buf_size[2153010]:int(64)[13], in arg c[2153012]:_class_localson_fn[2152940]) : void[4] "on block"
  {
    val _0_tmp[2153017]:chpl_localeID_t[209352] "temp"
    (2153022 'move' _0_tmp[2153017](2153019 '.v' c[2153012] _0_tmp[2152943]))
    val _1_rvfDerefTmp[2153024]:channel(true,dynamic,false)[1061008] "temp"
    (2153029 'move' _1_rvfDerefTmp[2153024](2153026 '.v' c[2153012] _1_rvfDerefTmp[2152945]))
    ref _2_args[2153032]:(string,codepointIndex,string)[1158616] "temp"
    (2153037 'move' _2_args[2153032](2153034 '.v' c[2153012] _2_args[2152947]))
    val _3_rvfDerefTmp[2153040]:locale[28] "temp"
    (2153045 'move' _3_rvfDerefTmp[2153040](2153042 '.v' c[2153012] _3_rvfDerefTmp[2152949]))
    ref _4_error[2153048]:Error[167984] "temp"
    (2153053 'move' _4_error[2153048](2153050 '.v' c[2153012] _4_error[2152951]))
    (2153015 call on_fn[1164968] _1_rvfDerefTmp[2153024] _2_args[2153032] _3_rvfDerefTmp[2153040] _4_error[2153048])
    (2153056 return _void[55])
  }
  function wrapon_fn[2153146](const in arg dummy_locale_arg[2153148]:chpl_localeID_t[209352], in arg buf[2153150]:c_void_ptr[149], in arg buf_size[2153152]:int(64)[13], in arg c[2153154]:_class_localson_fn[2153082]) : void[4] "on block"
  {
    val _0_tmp[2153159]:chpl_localeID_t[209352] "temp"
    (2153164 'move' _0_tmp[2153159](2153161 '.v' c[2153154] _0_tmp[2153085]))
    val _1_rvfDerefTmp[2153166]:channel(true,dynamic,false)[1061008] "temp"
    (2153171 'move' _1_rvfDerefTmp[2153166](2153168 '.v' c[2153154] _1_rvfDerefTmp[2153087]))
    ref _2_args[2153174]:(string,codepointIndex,string,int(64))[1176581] "temp"
    (2153179 'move' _2_args[2153174](2153176 '.v' c[2153154] _2_args[2153089]))
    val _3_rvfDerefTmp[2153182]:locale[28] "temp"
    (2153187 'move' _3_rvfDerefTmp[2153182](2153184 '.v' c[2153154] _3_rvfDerefTmp[2153091]))
    ref _4_error[2153190]:Error[167984] "temp"
    (2153195 'move' _4_error[2153190](2153192 '.v' c[2153154] _4_error[2153093]))
    (2153157 call on_fn[1180447] _1_rvfDerefTmp[2153166] _2_args[2153174] _3_rvfDerefTmp[2153182] _4_error[2153190])
    (2153198 return _void[55])
  }
  function wrapon_fn[2157869](const in arg dummy_locale_arg[2157871]:chpl_localeID_t[209352], in arg buf[2157873]:c_void_ptr[149], in arg buf_size[2157875]:int(64)[13], in arg c[2157877]:_class_localson_fn[2157805]) : void[4] "on block"
  {
    val _0_tmp[2157882]:chpl_localeID_t[209352] "temp"
    (2157887 'move' _0_tmp[2157882](2157884 '.v' c[2157877] _0_tmp[2157808]))
    val _1_rvfDerefTmp[2157889]:channel(true,dynamic,true)[1021886] "temp"
    (2157894 'move' _1_rvfDerefTmp[2157889](2157891 '.v' c[2157877] _1_rvfDerefTmp[2157810]))
    ref _2_args[2157897]:(string,ioNewline)[1543605] "temp"
    (2157902 'move' _2_args[2157897](2157899 '.v' c[2157877] _2_args[2157812]))
    val _3_rvfDerefTmp[2157905]:locale[28] "temp"
    (2157910 'move' _3_rvfDerefTmp[2157905](2157907 '.v' c[2157877] _3_rvfDerefTmp[2157814]))
    ref _4_error[2157913]:Error[167984] "temp"
    (2157918 'move' _4_error[2157913](2157915 '.v' c[2157877] _4_error[2157816]))
    (2157880 call on_fn[1543480] _1_rvfDerefTmp[2157889] _2_args[2157897] _3_rvfDerefTmp[2157905] _4_error[2157913])
    (2157921 return _void[55])
  }
  function wrapon_fn[2157991](const in arg dummy_locale_arg[2157993]:chpl_localeID_t[209352], in arg buf[2157995]:c_void_ptr[149], in arg buf_size[2157997]:int(64)[13], in arg c[2157999]:_class_localson_fn[2157945]) : void[4] "on block"
  {
    val _0_tmp[2158004]:chpl_localeID_t[209352] "temp"
    (2158009 'move' _0_tmp[2158004](2158006 '.v' c[2157999] _0_tmp[2157948]))
    val _1_rvfDerefTmp[2158011]:channel(true,dynamic,true)[1021886] "temp"
    (2158016 'move' _1_rvfDerefTmp[2158011](2158013 '.v' c[2157999] _1_rvfDerefTmp[2157950]))
    ref _2_err[2158019]:syserr[223605] "temp"
    (2158024 'move' _2_err[2158019](2158021 '.v' c[2157999] _2_err[2157952]))
    (2158002 call on_fn[1543922] _1_rvfDerefTmp[2158011] _2_err[2158019])
    (2158027 return _void[55])
  }
  function wrapon_fn[2158123](const in arg dummy_locale_arg[2158125]:chpl_localeID_t[209352], in arg buf[2158127]:c_void_ptr[149], in arg buf_size[2158129]:int(64)[13], in arg c[2158131]:_class_localson_fn[2158053]) : void[4] "on block"
  {
    val _0_tmp[2158136]:chpl_localeID_t[209352] "temp"
    (2158141 'move' _0_tmp[2158136](2158138 '.v' c[2158131] _0_tmp[2158056]))
    val _1_rvfDerefTmp[2158143]:channel(true,dynamic,true)[1021886] "temp"
    (2158148 'move' _1_rvfDerefTmp[2158143](2158145 '.v' c[2158131] _1_rvfDerefTmp[2158058]))
    ref _2_path[2158151]:string[26] "temp"
    (2158156 'move' _2_path[2158151](2158153 '.v' c[2158131] _2_path[2158060]))
    ref _3_offset[2158159]:int(64)[13] "temp"
    (2158164 'move' _3_offset[2158159](2158161 '.v' c[2158131] _3_offset[2158062]))
    ref _4_error[2158167]:Error[167984] "temp"
    (2158172 'move' _4_error[2158167](2158169 '.v' c[2158131] _4_error[2158064]))
    (2158134 call on_fn[1544339] _1_rvfDerefTmp[2158143] _2_path[2158151] _3_offset[2158159] _4_error[2158167])
    (2158175 return _void[55])
  }
  function wrapon_fn[2158232](const in arg dummy_locale_arg[2158234]:chpl_localeID_t[209352], in arg buf[2158236]:c_void_ptr[149], in arg buf_size[2158238]:int(64)[13], in arg c[2158240]:_class_localson_fn[2158198]) : void[4] "on block"
  {
    val _0_tmp[2158245]:chpl_localeID_t[209352] "temp"
    (2158250 'move' _0_tmp[2158245](2158247 '.v' c[2158240] _0_tmp[2158201]))
    val _1_rvfDerefTmp[2158252]:channel(true,dynamic,true)[1021886] "temp"
    (2158257 'move' _1_rvfDerefTmp[2158252](2158254 '.v' c[2158240] _1_rvfDerefTmp[2158203]))
    (2158243 call on_fn[1544613] _1_rvfDerefTmp[2158252])
    (2158260 return _void[55])
  }
  function wrapon_fn[2159227](const in arg dummy_locale_arg[2159229]:chpl_localeID_t[209352], in arg buf[2159231]:c_void_ptr[149], in arg buf_size[2159233]:int(64)[13], in arg c[2159235]:_class_localson_fn[2159187]) : void[4] "on block"
  {
    val _0_tmp[2159240]:chpl_localeID_t[209352] "temp"
    (2159245 'move' _0_tmp[2159240](2159242 '.v' c[2159235] _0_tmp[2159190]))
    ref _1_this[2159247]:channel(false,dynamic,true)[985688] "temp"
    (2159252 'move' _1_this[2159247](2159249 '.v' c[2159235] _1_this[2159192]))
    (2159238 call on_fn[1571870] _1_this[2159247])
    (2159255 return _void[55])
  }
  function wrapon_fn[2161018](const in arg dummy_locale_arg[2161020]:chpl_localeID_t[209352], in arg buf[2161022]:c_void_ptr[149], in arg buf_size[2161024]:int(64)[13], in arg c[2161026]:_class_localson_fn[2160978]) : void[4] "on block"
  {
    val _0_tmp[2161031]:chpl_localeID_t[209352] "temp"
    (2161036 'move' _0_tmp[2161031](2161033 '.v' c[2161026] _0_tmp[2160981]))
    ref _1_this[2161038]:channel(true,dynamic,true)[1021886] "temp"
    (2161043 'move' _1_this[2161038](2161040 '.v' c[2161026] _1_this[2160983]))
    (2161029 call on_fn[1634849] _1_this[2161038])
    (2161046 return _void[55])
  }
  function wrapon_fn[2161194](const in arg dummy_locale_arg[2161196]:chpl_localeID_t[209352], in arg buf[2161198]:c_void_ptr[149], in arg buf_size[2161200]:int(64)[13], in arg c[2161202]:_class_localson_fn[2161154]) : void[4] "on block"
  {
    val _0_tmp[2161207]:chpl_localeID_t[209352] "temp"
    (2161212 'move' _0_tmp[2161207](2161209 '.v' c[2161202] _0_tmp[2161157]))
    ref _1_this[2161214]:channel(true,dynamic,false)[1061008] "temp"
    (2161219 'move' _1_this[2161214](2161216 '.v' c[2161202] _1_this[2161159]))
    (2161205 call on_fn[1637013] _1_this[2161214])
    (2161222 return _void[55])
  }
  function wrapon_fn[2161455](const in arg dummy_locale_arg[2161457]:chpl_localeID_t[209352], in arg buf[2161459]:c_void_ptr[149], in arg buf_size[2161461]:int(64)[13], in arg c[2161463]:_class_localson_fn[2161415]) : void[4] "on block"
  {
    val _0_tmp[2161468]:chpl_localeID_t[209352] "temp"
    (2161473 'move' _0_tmp[2161468](2161470 '.v' c[2161463] _0_tmp[2161418]))
    ref _1_this[2161475]:channel(false,dynamic,false)[1080743] "temp"
    (2161480 'move' _1_this[2161475](2161477 '.v' c[2161463] _1_this[2161420]))
    (2161466 call on_fn[1641267] _1_this[2161475])
    (2161483 return _void[55])
  }
}