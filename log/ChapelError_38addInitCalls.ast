AST dump for ChapelError after pass addInitCalls.
Module use list: ChapelStandard ChapelLocks 

{
  type _class_localson_fn[2198738] val _runtime_hdr[2198739]:chpl_comm_on_bundle_t[209359] val _0_tmp[2198741]:chpl_localeID_t[209352] wide-ref _1_this[2198743]:chpl_TaskErrors[168348] val _2_err[2198745]:__wide_Error[2581418]
  function chpl__init_ChapelError[416133]() : void[4] "fast on" "insert line file info" "local fn" "module init" "resolved"
  {
    if chpl__init_ChapelError_p[2656154]
    {
      goto _exit_chpl__init_ChapelError[2656191] _exit_chpl__init_ChapelError[2656191]
    }
    val modFormatStr[2656162]:c_string[19] "temp"
    val modStr[2656163]:c_string[19] "temp"
    ref refIndentLevel[2656177]:int(32)[95] "temp"
    (2656170 'move' modFormatStr[2656162] c"%*s\n")
    (2656172 'move' modStr[2656163] c"ChapelError")
    (2656175 call printModuleInit[20429] modFormatStr[2656162] modStr[2656163] 11)
    (2656181 'move' refIndentLevel[2656177](2656180 'addr of' moduleInitLevel[20419]))
    (2656184 '+=' refIndentLevel[2656177] 1)
    (2656160 'move' chpl__init_ChapelError_p[2656154] 1)
    {
      (2654608 call chpl__init_ChapelLocks[416163])
    }
    (2656187 '-=' refIndentLevel[2656177] 1)
    label _endchpl__init_ChapelError[2656193]
    label _exit_chpl__init_ChapelError[2656191]
    (522461 return _void[55])
  }
  function __wide_Error[2581418].message[167975](const in arg this[167994]:__wide_Error[2581418], wide-ref arg _retArg[1906918]:string[26]) : void[4] "fn returns via _retArg" "method" "primary method" "resolved" "virtual"
  {
    wide-ref call_tmp[2338163]:string[26] "dead after last mention" "maybe param" "temp"
    (2338165 'move' call_tmp[2338163](2338167 '.' this[167994] _msg[167930]))
    val ret[2325916]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2325918]:string[26] "dead after last mention" "temp"
    (2325921 call init=[30774] tmp[2325918] call_tmp[2338163])
    (2325924 'move' ret[2325916] tmp[2325918])
    (1906920 '=' _retArg[1906918] ret[2325916])
    (1906924 return _void[55])
  }
  function __wide_Error[2581418].deinit[811935](const in arg this[811939]:__wide_Error[2581418]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[1890426]
    wide-ref _field_destructor_tmp_[1890424]:string[26] "temp"
    (1890431 'move' _field_destructor_tmp_[1890424](1890428 '.' this[811939] _msg[167930]))
    (1890433 call deinit[30834] _field_destructor_tmp_[1890424])
    (811947 return _void[55])
  }
  type Error[167984] val super[355807]:object[22] "super class" val _next[167912]:__wide_Error[2581418] "no doc" val thrownLine[167917]:int(64)[13] "no doc" val thrownFileId[167925]:int(32)[95] "no doc" val _msg[167930]:string[26] "no doc" val _hasThrowInfo[167936]:bool[10] "no doc"
  function __wide_NilThrownError[2581425].message[168004](const in arg this[168031]:__wide_NilThrownError[2581425], wide-ref arg _retArg[1918932]:string[26]) : void[4] "fn returns via _retArg" "method" "primary method" "no doc" "method overrides" "resolved" "virtual"
  {
    const-val local__str_literal_2207[2576781]:string[26] "temp"
    (2576782 'move' "thrown error was nil" "thrown error was nil")
    val inlineImm[2326682]:string[26] "temp"
    (2326685 'move' inlineImm[2326682] "thrown error was nil")
    ref i_x[2326687]:string[26] "temp"
    (2326691 'move' i_x[2326687](2326689 'set reference' inlineImm[2326682]))
    val ret[2326694]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2326696]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2632375]:string[26] "temp"
    (2632378 'move' tmp[2632375] i_x[2326687])
    (2326699 call init=[30774] tmp[2326696] tmp[2632375])
    (2326702 'move' ret[2326694] tmp[2326696])
    (1918934 '=' _retArg[1918932] ret[2326694])
    (1918938 return _void[55])
  }
  function __wide_NilThrownError[2581425].deinit[812039](const in arg this[812043]:__wide_NilThrownError[2581425]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[1890451]
    val _parent_destructor_tmp_[1890446]:__wide_Error[2581418] "temp"
    (1890453 'move' _parent_destructor_tmp_[1890446](1890447 'cast' Error[167984] this[812043]))
    wide-ref _field_destructor_tmp_[2338214]:string[26] "temp"
    (2338216 'move' _field_destructor_tmp_[2338214](2338218 '.' _parent_destructor_tmp_[1890446] _msg[167930]))
    (2338222 call deinit[30834] _field_destructor_tmp_[2338214])
    (812051 return _void[55])
  }
  function _local__new[2612781]() : NilThrownError[168029] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "local fn" "_new wrapper" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val initTemp[2612784]:NilThrownError[168029] "dead after last mention" "temp"
    const-val call_tmp[2612786]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2612788 'move' call_tmp[2612786](2612790 'sizeof_bundle' NilThrownError[168029]))
    const-val cast_tmp[2612792]:c_void_ptr[149] "dead after last mention" "temp"
    (2612794 'move' cast_tmp[2612792](2612797 call _local_chpl_here_alloc[2597816] call_tmp[2612786] 2))
    (2612800 'move' initTemp[2612784](2612802 'cast' NilThrownError[168029] cast_tmp[2612792]))
    (2612805 'setcid' initTemp[2612784])
    val super_tmp[2612807]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    val tmp[2652771]:Error[167984] "temp"
    (2612809 'move' tmp[2652771](2612811 '.v' initTemp[2612784] super[355809]))
    (2652774 'move' super_tmp[2612807] tmp[2652771])
    val super_tmp[2612814]:object[22] "dead after last mention" "temporary of super field" "temp"
    val tmp[2652777]:object[22] "temp"
    (2612816 'move' tmp[2652777](2612818 '.v' super_tmp[2612807] super[355807]))
    (2652780 'move' super_tmp[2612814] tmp[2652777])
    (2612821 'setcid' super_tmp[2612814])
    val call_tmp[2612823]:object[22] "dead at end of block" "maybe param" "temp"
    (2612825 'move' call_tmp[2612823](2612827 'cast' object[22] super_tmp[2612807]))
    (2612830 'setcid' call_tmp[2612823])
    val init_coerce_tmp[2612832]:Error[167984] "dead after last mention" "temp"
    (2612834 'move' init_coerce_tmp[2612832](2612836 'cast' Error[167984] nil[44]))
    val tmp[2652783]:__wide_Error[2581418] "temp"
    (2652786 'move' tmp[2652783] init_coerce_tmp[2612832])
    (2612839 '.=' super_tmp[2612807] _next[167912] tmp[2652783])
    (2612843 '.=' super_tmp[2612807] thrownLine[167917] 0)
    (2612847 '.=' super_tmp[2612807] thrownFileId[167925] 0)
    val tmp[2612851]:string[26] "dead after last mention" "temp"
    (2612854 call _local_init[2591327] tmp[2612851])
    (2612856 '.=' super_tmp[2612807] _msg[167930] tmp[2612851])
    (2612860 '.=' super_tmp[2612807] _hasThrowInfo[167936] 0)
    (2612864 'setcid' super_tmp[2612807])
    val call_tmp[2612866]:Error[167984] "dead at end of block" "maybe param" "temp"
    (2612868 'move' call_tmp[2612866](2612870 'cast' Error[167984] initTemp[2612784]))
    (2612873 'setcid' call_tmp[2612866])
    (2612875 'setcid' initTemp[2612784])
    (2612877 return initTemp[2612784])
  }
  function _new[969738]() : NilThrownError[168029] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val initTemp[969740]:NilThrownError[168029] "dead after last mention" "temp"
    const-val call_tmp[969784]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (969787 'move' call_tmp[969784](969796 'sizeof_bundle' NilThrownError[168029]))
    const-val cast_tmp[969799]:c_void_ptr[149] "dead after last mention" "temp"
    (969801 'move' cast_tmp[969799](969752 call chpl_here_alloc[187788] call_tmp[969784] 2))
    (969755 'move' initTemp[969740](969803 'cast' NilThrownError[168029] cast_tmp[969799]))
    (969757 'setcid' initTemp[969740])
    val super_tmp[2338272]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    val tmp[2633128]:Error[167984] "temp"
    (2338274 'move' tmp[2633128](2338276 '.v' initTemp[969740] super[355809]))
    (2633131 'move' super_tmp[2338272] tmp[2633128])
    val super_tmp[2338279]:object[22] "dead after last mention" "temporary of super field" "temp"
    val tmp[2633134]:object[22] "temp"
    (2338281 'move' tmp[2633134](2338283 '.v' super_tmp[2338272] super[355807]))
    (2633137 'move' super_tmp[2338279] tmp[2633134])
    (2338286 'setcid' super_tmp[2338279])
    val call_tmp[2338288]:object[22] "dead at end of block" "maybe param" "temp"
    (2338290 'move' call_tmp[2338288](2338292 'cast' object[22] super_tmp[2338272]))
    (2338295 'setcid' call_tmp[2338288])
    val init_coerce_tmp[2338297]:Error[167984] "dead after last mention" "temp"
    (2338299 'move' init_coerce_tmp[2338297](2338301 'cast' Error[167984] nil[44]))
    val tmp[2633140]:__wide_Error[2581418] "temp"
    (2633143 'move' tmp[2633140] init_coerce_tmp[2338297])
    (2338304 '.=' super_tmp[2338272] _next[167912] tmp[2633140])
    (2338308 '.=' super_tmp[2338272] thrownLine[167917] 0)
    (2338312 '.=' super_tmp[2338272] thrownFileId[167925] 0)
    val tmp[2338316]:string[26] "dead after last mention" "temp"
    (2338319 call init[30763] tmp[2338316])
    (2338321 '.=' super_tmp[2338272] _msg[167930] tmp[2338316])
    (2338325 '.=' super_tmp[2338272] _hasThrowInfo[167936] 0)
    (2338329 'setcid' super_tmp[2338272])
    val call_tmp[2338331]:Error[167984] "dead at end of block" "maybe param" "temp"
    (2338333 'move' call_tmp[2338331](2338335 'cast' Error[167984] initTemp[969740]))
    (2338338 'setcid' call_tmp[2338331])
    (2338340 'setcid' initTemp[969740])
    (969779 return initTemp[969740])
  }
  type NilThrownError[168029] val super[355809]:Error[167984] "super class"
  function __wide_DecodeError[2581432].message[168115](const in arg this[168142]:__wide_DecodeError[2581432], wide-ref arg _retArg[1918962]:string[26]) : void[4] "fn returns via _retArg" "method" "primary method" "no doc" "method overrides" "resolved" "virtual"
  {
    const-val local__str_literal_2213[2576787]:string[26] "temp"
    (2576788 'move' "Invalid UTF-8 character encountered." "Invalid UTF-8 character encountered.")
    val inlineImm[2326707]:string[26] "temp"
    (2326710 'move' inlineImm[2326707] "Invalid UTF-8 character encountered.")
    ref i_x[2326712]:string[26] "temp"
    (2326716 'move' i_x[2326712](2326714 'set reference' inlineImm[2326707]))
    val ret[2326719]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2326721]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2632381]:string[26] "temp"
    (2632384 'move' tmp[2632381] i_x[2326712])
    (2326724 call init=[30774] tmp[2326721] tmp[2632381])
    (2326727 'move' ret[2326719] tmp[2326721])
    (1918964 '=' _retArg[1918962] ret[2326719])
    (1918968 return _void[55])
  }
  function __wide_DecodeError[2581432].deinit[812351](const in arg this[812355]:__wide_DecodeError[2581432]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[1890463]
    val _parent_destructor_tmp_[1890458]:__wide_Error[2581418] "temp"
    (1890465 'move' _parent_destructor_tmp_[1890458](1890459 'cast' Error[167984] this[812355]))
    wide-ref _field_destructor_tmp_[2338229]:string[26] "temp"
    (2338231 'move' _field_destructor_tmp_[2338229](2338233 '.' _parent_destructor_tmp_[1890458] _msg[167930]))
    (2338237 call deinit[30834] _field_destructor_tmp_[2338229])
    (812363 return _void[55])
  }
  function _local__new[2605592]() : DecodeError[168140] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "local fn" "_new wrapper" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val initTemp[2605595]:DecodeError[168140] "dead after last mention" "temp"
    const-val call_tmp[2605597]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2605599 'move' call_tmp[2605597](2605601 'sizeof_bundle' DecodeError[168140]))
    const-val cast_tmp[2605603]:c_void_ptr[149] "dead after last mention" "temp"
    (2605605 'move' cast_tmp[2605603](2605608 call _local_chpl_here_alloc[2597816] call_tmp[2605597] 1))
    (2605611 'move' initTemp[2605595](2605613 'cast' DecodeError[168140] cast_tmp[2605603]))
    (2605616 'setcid' initTemp[2605595])
    val super_tmp[2605618]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    val tmp[2651936]:Error[167984] "temp"
    (2605620 'move' tmp[2651936](2605622 '.v' initTemp[2605595] super[355815]))
    (2651939 'move' super_tmp[2605618] tmp[2651936])
    val super_tmp[2605625]:object[22] "dead after last mention" "temporary of super field" "temp"
    val tmp[2651942]:object[22] "temp"
    (2605627 'move' tmp[2651942](2605629 '.v' super_tmp[2605618] super[355807]))
    (2651945 'move' super_tmp[2605625] tmp[2651942])
    (2605632 'setcid' super_tmp[2605625])
    val call_tmp[2605634]:object[22] "dead at end of block" "maybe param" "temp"
    (2605636 'move' call_tmp[2605634](2605638 'cast' object[22] super_tmp[2605618]))
    (2605641 'setcid' call_tmp[2605634])
    val init_coerce_tmp[2605643]:Error[167984] "dead after last mention" "temp"
    (2605645 'move' init_coerce_tmp[2605643](2605647 'cast' Error[167984] nil[44]))
    val tmp[2651948]:__wide_Error[2581418] "temp"
    (2651951 'move' tmp[2651948] init_coerce_tmp[2605643])
    (2605650 '.=' super_tmp[2605618] _next[167912] tmp[2651948])
    (2605654 '.=' super_tmp[2605618] thrownLine[167917] 0)
    (2605658 '.=' super_tmp[2605618] thrownFileId[167925] 0)
    val tmp[2605662]:string[26] "dead after last mention" "temp"
    (2605665 call _local_init[2591327] tmp[2605662])
    (2605667 '.=' super_tmp[2605618] _msg[167930] tmp[2605662])
    (2605671 '.=' super_tmp[2605618] _hasThrowInfo[167936] 0)
    (2605675 'setcid' super_tmp[2605618])
    val call_tmp[2605677]:Error[167984] "dead at end of block" "maybe param" "temp"
    (2605679 'move' call_tmp[2605677](2605681 'cast' Error[167984] initTemp[2605595]))
    (2605684 'setcid' call_tmp[2605677])
    (2605686 'setcid' initTemp[2605595])
    (2605688 return initTemp[2605595])
  }
  function _new[965831]() : DecodeError[168140] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val initTemp[965833]:DecodeError[168140] "dead after last mention" "temp"
    const-val call_tmp[965874]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (965877 'move' call_tmp[965874](965888 'sizeof_bundle' DecodeError[168140]))
    const-val cast_tmp[965891]:c_void_ptr[149] "dead after last mention" "temp"
    (965893 'move' cast_tmp[965891](965845 call chpl_here_alloc[187788] call_tmp[965874] 1))
    (965848 'move' initTemp[965833](965895 'cast' DecodeError[168140] cast_tmp[965891]))
    (965850 'setcid' initTemp[965833])
    val super_tmp[2338345]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    val tmp[2633146]:Error[167984] "temp"
    (2338347 'move' tmp[2633146](2338349 '.v' initTemp[965833] super[355815]))
    (2633149 'move' super_tmp[2338345] tmp[2633146])
    val super_tmp[2338352]:object[22] "dead after last mention" "temporary of super field" "temp"
    val tmp[2633152]:object[22] "temp"
    (2338354 'move' tmp[2633152](2338356 '.v' super_tmp[2338345] super[355807]))
    (2633155 'move' super_tmp[2338352] tmp[2633152])
    (2338359 'setcid' super_tmp[2338352])
    val call_tmp[2338361]:object[22] "dead at end of block" "maybe param" "temp"
    (2338363 'move' call_tmp[2338361](2338365 'cast' object[22] super_tmp[2338345]))
    (2338368 'setcid' call_tmp[2338361])
    val init_coerce_tmp[2338370]:Error[167984] "dead after last mention" "temp"
    (2338372 'move' init_coerce_tmp[2338370](2338374 'cast' Error[167984] nil[44]))
    val tmp[2633158]:__wide_Error[2581418] "temp"
    (2633161 'move' tmp[2633158] init_coerce_tmp[2338370])
    (2338377 '.=' super_tmp[2338345] _next[167912] tmp[2633158])
    (2338381 '.=' super_tmp[2338345] thrownLine[167917] 0)
    (2338385 '.=' super_tmp[2338345] thrownFileId[167925] 0)
    val tmp[2338389]:string[26] "dead after last mention" "temp"
    (2338392 call init[30763] tmp[2338389])
    (2338394 '.=' super_tmp[2338345] _msg[167930] tmp[2338389])
    (2338398 '.=' super_tmp[2338345] _hasThrowInfo[167936] 0)
    (2338402 'setcid' super_tmp[2338345])
    val call_tmp[2338404]:Error[167984] "dead at end of block" "maybe param" "temp"
    (2338406 'move' call_tmp[2338404](2338408 'cast' Error[167984] initTemp[965833]))
    (2338411 'setcid' call_tmp[2338404])
    (2338413 'setcid' initTemp[965833])
    (965869 return initTemp[965833])
  }
  type DecodeError[168140] val super[355815]:Error[167984] "super class"
  function __wide_IllegalArgumentError[2581439].deinit[812391](const in arg this[812395]:__wide_IllegalArgumentError[2581439]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[1890475]
    val _parent_destructor_tmp_[1890470]:__wide_Error[2581418] "temp"
    (1890477 'move' _parent_destructor_tmp_[1890470](1890471 'cast' Error[167984] this[812395]))
    wide-ref _field_destructor_tmp_[2338244]:string[26] "temp"
    (2338246 'move' _field_destructor_tmp_[2338244](2338248 '.' _parent_destructor_tmp_[1890470] _msg[167930]))
    (2338252 call deinit[30834] _field_destructor_tmp_[2338244])
    (812403 return _void[55])
  }
  function _local__new[2605268](const  ref arg info[2605270]:string[26]) : IllegalArgumentError[168246] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "local fn" "_new wrapper" "resolved" "fn synchronization free"
  {
    val initTemp[2605273]:IllegalArgumentError[168246] "dead after last mention" "temp"
    const-val call_tmp[2605275]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2605277 'move' call_tmp[2605275](2605279 'sizeof_bundle' IllegalArgumentError[168246]))
    const-val cast_tmp[2605281]:c_void_ptr[149] "dead after last mention" "temp"
    (2605283 'move' cast_tmp[2605281](2605286 call _local_chpl_here_alloc[2597816] call_tmp[2605275] 26))
    (2605289 'move' initTemp[2605273](2605291 'cast' IllegalArgumentError[168246] cast_tmp[2605281]))
    (2605294 'setcid' initTemp[2605273])
    val super_tmp[2605296]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    val tmp[2651912]:Error[167984] "temp"
    (2605298 'move' tmp[2651912](2605300 '.v' initTemp[2605273] super[355817]))
    (2651915 'move' super_tmp[2605296] tmp[2651912])
    val super_tmp[2605303]:object[22] "dead after last mention" "temporary of super field" "temp"
    val tmp[2651918]:object[22] "temp"
    (2605305 'move' tmp[2651918](2605307 '.v' super_tmp[2605296] super[355807]))
    (2651921 'move' super_tmp[2605303] tmp[2651918])
    (2605310 'setcid' super_tmp[2605303])
    val call_tmp[2605312]:object[22] "dead at end of block" "maybe param" "temp"
    (2605314 'move' call_tmp[2605312](2605316 'cast' object[22] super_tmp[2605296]))
    (2605319 'setcid' call_tmp[2605312])
    val init_coerce_tmp[2605321]:Error[167984] "dead after last mention" "temp"
    (2605323 'move' init_coerce_tmp[2605321](2605325 'cast' Error[167984] nil[44]))
    val tmp[2651924]:__wide_Error[2581418] "temp"
    (2651927 'move' tmp[2651924] init_coerce_tmp[2605321])
    (2605328 '.=' super_tmp[2605296] _next[167912] tmp[2651924])
    (2605332 '.=' super_tmp[2605296] thrownLine[167917] 0)
    (2605336 '.=' super_tmp[2605296] thrownFileId[167925] 0)
    val tmp[2605340]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2651930]:string[26] "temp"
    (2651933 'move' tmp[2651930] info[2605270])
    (2605343 call _local_init=[2591534] tmp[2605340] tmp[2651930])
    (2605346 '.=' super_tmp[2605296] _msg[167930] tmp[2605340])
    (2605350 '.=' super_tmp[2605296] _hasThrowInfo[167936] 0)
    (2605354 'setcid' super_tmp[2605296])
    val call_tmp[2605356]:Error[167984] "dead at end of block" "maybe param" "temp"
    (2605358 'move' call_tmp[2605356](2605360 'cast' Error[167984] initTemp[2605273]))
    (2605363 'setcid' call_tmp[2605356])
    (2605365 'setcid' initTemp[2605273])
    (2605367 return initTemp[2605273])
  }
  function _new[1064296](const  ref arg info[1064305]:string[26]) : IllegalArgumentError[168246] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "fn synchronization free"
  {
    val initTemp[1064298]:IllegalArgumentError[168246] "dead after last mention" "temp"
    const-val call_tmp[1064342]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1064345 'move' call_tmp[1064342](1064356 'sizeof_bundle' IllegalArgumentError[168246]))
    const-val cast_tmp[1064359]:c_void_ptr[149] "dead after last mention" "temp"
    (1064361 'move' cast_tmp[1064359](1064313 call chpl_here_alloc[187788] call_tmp[1064342] 26))
    (1064316 'move' initTemp[1064298](1064363 'cast' IllegalArgumentError[168246] cast_tmp[1064359]))
    (1064318 'setcid' initTemp[1064298])
    val super_tmp[2294647]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    val tmp[2631798]:Error[167984] "temp"
    (2294649 'move' tmp[2631798](2294651 '.v' initTemp[1064298] super[355817]))
    (2631801 'move' super_tmp[2294647] tmp[2631798])
    val super_tmp[2294654]:object[22] "dead after last mention" "temporary of super field" "temp"
    val tmp[2631804]:object[22] "temp"
    (2294656 'move' tmp[2631804](2294658 '.v' super_tmp[2294647] super[355807]))
    (2631807 'move' super_tmp[2294654] tmp[2631804])
    (2294661 'setcid' super_tmp[2294654])
    val call_tmp[2294663]:object[22] "dead at end of block" "maybe param" "temp"
    (2294665 'move' call_tmp[2294663](2294667 'cast' object[22] super_tmp[2294647]))
    (2294670 'setcid' call_tmp[2294663])
    val init_coerce_tmp[2294672]:Error[167984] "dead after last mention" "temp"
    (2294674 'move' init_coerce_tmp[2294672](2294676 'cast' Error[167984] nil[44]))
    val tmp[2631810]:__wide_Error[2581418] "temp"
    (2631813 'move' tmp[2631810] init_coerce_tmp[2294672])
    (2294679 '.=' super_tmp[2294647] _next[167912] tmp[2631810])
    (2294683 '.=' super_tmp[2294647] thrownLine[167917] 0)
    (2294687 '.=' super_tmp[2294647] thrownFileId[167925] 0)
    val tmp[2294691]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2631816]:string[26] "temp"
    (2631819 'move' tmp[2631816] info[1064305])
    (2294694 call init=[30774] tmp[2294691] tmp[2631816])
    (2294697 '.=' super_tmp[2294647] _msg[167930] tmp[2294691])
    (2294701 '.=' super_tmp[2294647] _hasThrowInfo[167936] 0)
    (2294705 'setcid' super_tmp[2294647])
    val call_tmp[2294707]:Error[167984] "dead at end of block" "maybe param" "temp"
    (2294709 'move' call_tmp[2294707](2294711 'cast' Error[167984] initTemp[1064298]))
    (2294714 'setcid' call_tmp[2294707])
    (2294716 'setcid' initTemp[1064298])
    (1064337 return initTemp[1064298])
  }
  function _new[1073691](const  ref arg formal[1073700]:string[26], const  ref arg info[1073703]:string[26]) : IllegalArgumentError[168246] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_2217[2577870]:string[26] "temp"
    (2577871 'move' "': " "': ")
    const-val local__str_literal_2215[2577864]:string[26] "temp"
    (2577865 'move' "illegal argument '" "illegal argument '")
    val initTemp[1073693]:IllegalArgumentError[168246] "dead after last mention" "temp"
    const-val call_tmp[1073738]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1073741 'move' call_tmp[1073738](1073752 'sizeof_bundle' IllegalArgumentError[168246]))
    const-val cast_tmp[1073755]:c_void_ptr[149] "dead after last mention" "temp"
    (1073757 'move' cast_tmp[1073755](1073709 call chpl_here_alloc[187788] call_tmp[1073738] 26))
    (1073712 'move' initTemp[1073693](1073759 'cast' IllegalArgumentError[168246] cast_tmp[1073755]))
    (1073714 'setcid' initTemp[1073693])
    const-val call_tmp[2294721]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2294723]:string[26] "temp"
    wide-ref tmp[2631822]:string[26] "temp"
    (2631825 'move' tmp[2631822] formal[1073700])
    (2294726 call +[38345] "illegal argument '" tmp[2631822] ret_tmp[2294723])
    (2294730 'move' call_tmp[2294721] ret_tmp[2294723])
    const-val call_tmp[2294733]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2294735]:string[26] "temp"
    wide-ref tmp[2631828]:string[26] "temp"
    (2631832 'move' tmp[2631828](2631830 'set reference' "': "))
    (2294738 call +[38345] call_tmp[2294721] tmp[2631828] ret_tmp[2294735])
    (2294742 'move' call_tmp[2294733] ret_tmp[2294735])
    const-val call_tmp[2294745]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[2294747]:string[26] "temp"
    wide-ref tmp[2631835]:string[26] "temp"
    (2631838 'move' tmp[2631835] info[1073703])
    (2294750 call +[38345] call_tmp[2294733] tmp[2631835] ret_tmp[2294747])
    (2294754 'move' call_tmp[2294745] ret_tmp[2294747])
    const-val msg[2294757]:string[26] "dead at end of block" "insert auto destroy"
    (2294759 'move' msg[2294757] call_tmp[2294745])
    val super_tmp[2294762]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    val tmp[2631841]:Error[167984] "temp"
    (2294764 'move' tmp[2631841](2294766 '.v' initTemp[1073693] super[355817]))
    (2631844 'move' super_tmp[2294762] tmp[2631841])
    ref i_msg[2294769]:string[26] "temp"
    (2294771 'move' i_msg[2294769](2294773 'set reference' msg[2294757]))
    val super_tmp[2294775]:object[22] "dead after last mention" "temporary of super field" "temp"
    val tmp[2631847]:object[22] "temp"
    (2294777 'move' tmp[2631847](2294779 '.v' super_tmp[2294762] super[355807]))
    (2631850 'move' super_tmp[2294775] tmp[2631847])
    (2294782 'setcid' super_tmp[2294775])
    val call_tmp[2294784]:object[22] "dead at end of block" "maybe param" "temp"
    (2294786 'move' call_tmp[2294784](2294788 'cast' object[22] super_tmp[2294762]))
    (2294791 'setcid' call_tmp[2294784])
    val init_coerce_tmp[2294793]:Error[167984] "dead after last mention" "temp"
    (2294795 'move' init_coerce_tmp[2294793](2294797 'cast' Error[167984] nil[44]))
    val tmp[2631853]:__wide_Error[2581418] "temp"
    (2631856 'move' tmp[2631853] init_coerce_tmp[2294793])
    (2294800 '.=' super_tmp[2294762] _next[167912] tmp[2631853])
    (2294804 '.=' super_tmp[2294762] thrownLine[167917] 0)
    (2294808 '.=' super_tmp[2294762] thrownFileId[167925] 0)
    val tmp[2294812]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2631859]:string[26] "temp"
    (2631862 'move' tmp[2631859] i_msg[2294769])
    (2294815 call init=[30774] tmp[2294812] tmp[2631859])
    (2294818 '.=' super_tmp[2294762] _msg[167930] tmp[2294812])
    (2294822 '.=' super_tmp[2294762] _hasThrowInfo[167936] 0)
    (2294826 'setcid' super_tmp[2294762])
    val call_tmp[2294828]:Error[167984] "dead at end of block" "maybe param" "temp"
    (2294830 'move' call_tmp[2294828](2294832 'cast' Error[167984] initTemp[1073693]))
    (2294835 'setcid' call_tmp[2294828])
    (2294837 'setcid' initTemp[1073693])
    ref i_x[2294839]:string[26] "temp"
    (2294841 'move' i_x[2294839](2294843 'set reference' msg[2294757]))
    wide-ref tmp[2631865]:string[26] "temp"
    (2631868 'move' tmp[2631865] i_x[2294839])
    (2294846 call deinit[30834] tmp[2631865])
    ref i_x[2294848]:string[26] "temp"
    (2294850 'move' i_x[2294848](2294852 'set reference' call_tmp[2294733]))
    wide-ref tmp[2631871]:string[26] "temp"
    (2631874 'move' tmp[2631871] i_x[2294848])
    (2294855 call deinit[30834] tmp[2631871])
    ref i_x[2294857]:string[26] "temp"
    (2294859 'move' i_x[2294857](2294861 'set reference' call_tmp[2294721]))
    wide-ref tmp[2631877]:string[26] "temp"
    (2631880 'move' tmp[2631877] i_x[2294857])
    (2294864 call deinit[30834] tmp[2631877])
    (1073733 return initTemp[1073693])
  }
  type IllegalArgumentError[168246] val super[355817]:Error[167984] "super class"
  function chpl_TaskErrors[168348]._local_append[2613695](wide-ref arg this[2613697]:chpl_TaskErrors[168348], const in arg err[2613699]:Error[167984]) : void[4] "local fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-val call_tmp[2613702]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (2613704 'move' call_tmp[2613702](2613706 '_wide_get_locale' this[2613697]))
    val isdirect[2613708]:bool[10] "temp"
    (2613710 'move' isdirect[2613708](2613713 call _local_chpl_doDirectExecuteOn[2585146] call_tmp[2613702]))
    if isdirect[2613708]
    {
      const-val tmp[2652801]:__wide_Error[2581418] "temp"
      (2652804 'move' tmp[2652801] err[2613699])
      (2613718 call _local_on_fn[2614207] this[2613697] tmp[2652801])
    }
    {
      val _args_foron_fn[2613722]:_class_localson_fn[2198738] "temp"
      (2613724 'move' _args_foron_fn[2613722](2613726 'stack allocate class' _class_localson_fn[2198738]))
      (2613728 '.=' _args_foron_fn[2613722] _0_tmp[2198741] call_tmp[2613702])
      wide-ref tmp[2613732]:chpl_TaskErrors[168348] "temp"
      (2613734 'move' tmp[2613732](2613736 'set reference' this[2613697]))
      (2613738 '.=' _args_foron_fn[2613722] _1_this[2198743] tmp[2613732])
      val tmp[2652807]:__wide_Error[2581418] "temp"
      (2652810 'move' tmp[2652807] err[2613699])
      (2613742 '.=' _args_foron_fn[2613722] _2_err[2198745] tmp[2652807])
      val _args_vforon_fn[2613746]:c_void_ptr[149] "temp"
      (2613748 'move' _args_vforon_fn[2613746](2613750 'cast_to_void_star' _args_foron_fn[2613722]))
      val _args_sizeon_fn[2613752]:int(64)[13] "temp"
      (2613754 'move' _args_sizeon_fn[2613752](2613756 'sizeof_bundle' _class_localson_fn[2198738]))
      (2654294 call chpl_taskRunningCntDec[93219])
      on(2613759 call _local_wrapon_fn[2614381] call_tmp[2613702] _args_vforon_fn[2613746] _args_sizeon_fn[2613752] _args_foron_fn[2613722])
      (2654296 call chpl_taskRunningCntInc[93198])
    }
    (2613765 return _void[55])
  }
  function chpl_TaskErrors[168348].append[168282](wide-ref arg this[168350]:chpl_TaskErrors[168348], const in arg err[168279]:Error[167984]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    const-val call_tmp[679609]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (679612 'move' call_tmp[679609](168320 '_wide_get_locale' this[168350]))
    val isdirect[2198721]:bool[10] "temp"
    (2198726 'move' isdirect[2198721](2198723 call chpl_doDirectExecuteOn[187469] call_tmp[679609]))
    if isdirect[2198721]
    {
      const-val tmp[2623678]:__wide_Error[2581418] "temp"
      (2623681 'move' tmp[2623678] err[168279])
      (2198730 call on_fn[935527] this[168350] tmp[2623678])
    }
    {
      val _args_foron_fn[2198748]:_class_localson_fn[2198738] "temp"
      (2198752 'move' _args_foron_fn[2198748](2198750 'stack allocate class' _class_localson_fn[2198738]))
      (2198754 '.=' _args_foron_fn[2198748] _0_tmp[2198741] call_tmp[679609])
      wide-ref tmp[2198758]:chpl_TaskErrors[168348] "temp"
      (2198762 'move' tmp[2198758](2198760 'set reference' this[168350]))
      (2198764 '.=' _args_foron_fn[2198748] _1_this[2198743] tmp[2198758])
      val tmp[2623684]:__wide_Error[2581418] "temp"
      (2623687 'move' tmp[2623684] err[168279])
      (2198768 '.=' _args_foron_fn[2198748] _2_err[2198745] tmp[2623684])
      val _args_vforon_fn[2198772]:c_void_ptr[149] "temp"
      (2198776 'move' _args_vforon_fn[2198772](2198774 'cast_to_void_star' _args_foron_fn[2198748]))
      val _args_sizeon_fn[2198778]:int(64)[13] "temp"
      (2198782 'move' _args_sizeon_fn[2198778](2198780 'sizeof_bundle' _class_localson_fn[2198738]))
      (2652938 call chpl_taskRunningCntDec[93219])
      on(2198822 call wrapon_fn[2198784] call_tmp[679609] _args_vforon_fn[2198772] _args_sizeon_fn[2198778] _args_foron_fn[2198748])
      (2652940 call chpl_taskRunningCntInc[93198])
    }
    (522265 return _void[55])
  }
  function chpl_TaskErrors[168348]._local_empty[2607947](const  ref arg this[2607949]:chpl_TaskErrors[168348]) : bool[10] "fast on" "local fn" "method" "primary method" "resolved"
  {
    val coerce_tmp[2607952]:__wide_Error[2581418] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2607954 'move' coerce_tmp[2607952](2607956 '.v' this[2607949] _head[168266]))
    val coerce_tmp[2607959]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2607961 'move' coerce_tmp[2607959](2607963 'cast' object[22] coerce_tmp[2607952]))
    const-val call_tmp[2607966]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2652203]:__wide_object[2581313] "temp"
    (2652206 'move' tmp[2652203] nil[44])
    (2607968 'move' call_tmp[2607966](2607970 'ptr_eq' coerce_tmp[2607959] tmp[2652203]))
    (2607973 return call_tmp[2607966])
  }
  function chpl_TaskErrors[168348].empty[168336](const  ref arg this[168354]:chpl_TaskErrors[168348]) : bool[10] "fast on" "local fn" "method" "primary method" "resolved"
  {
    val coerce_tmp[1235747]:__wide_Error[2581418] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1235751 'move' coerce_tmp[1235747](2564167 '.v' this[168354] _head[168266]))
    val coerce_tmp[1235753]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1235758 'move' coerce_tmp[1235753](1235755 'cast' object[22] coerce_tmp[1235747]))
    const-val call_tmp[2226547]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2626417]:__wide_object[2581313] "temp"
    (2626420 'move' tmp[2626417] nil[44])
    (2226549 'move' call_tmp[2226547](2226551 'ptr_eq' coerce_tmp[1235753] tmp[2626417]))
    (522271 return call_tmp[2226547])
  }
  function chpl_TaskErrors[168348]._local_init[2611412](ref arg this[2611414]:chpl_TaskErrors[168348], in arg _head[2611416]:Error[167984], const  ref arg _errorsLock[2611418]:chpl_LocalSpinlock[187432]) : void[4] "compiler generated" "fast on" "last resort" "local fn" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_tmp__errorsLock[2611421]:chpl_LocalSpinlock[187432] "dead at end of block" "no auto destroy" "no copy" "temp"
    (2611423 'move' _formal_tmp__errorsLock[2611421] _errorsLock[2611418])
    val tmp[2652681]:__wide_Error[2581418] "temp"
    (2652684 'move' tmp[2652681] _head[2611416])
    (2611426 '.=' this[2611414] _head[168266] tmp[2652681])
    (2611430 '.=' this[2611414] _errorsLock[168271] _formal_tmp__errorsLock[2611421])
    (2611434 return _void[55])
  }
  function chpl_TaskErrors[168348].init[812457](ref arg this[812460]:chpl_TaskErrors[168348], in arg _head[812463]:Error[167984], const  ref arg _errorsLock[812478]:chpl_LocalSpinlock[187432]) : void[4] "compiler generated" "fast on" "last resort" "local fn" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_tmp__errorsLock[945365]:chpl_LocalSpinlock[187432] "dead at end of block" "no auto destroy" "no copy" "temp"
    (945368 'move' _formal_tmp__errorsLock[945365] _errorsLock[812478])
    val tmp[2615086]:__wide_Error[2581418] "temp"
    (2615089 'move' tmp[2615086] _head[812463])
    (812492 '.=' this[812460] _head[168266] tmp[2615086])
    (812495 '.=' this[812460] _errorsLock[168271] _formal_tmp__errorsLock[945365])
    (812499 return _void[55])
  }
  type chpl_TaskErrors[168348] val _head[168266]:__wide_Error[2581418] val _errorsLock[168271]:chpl_LocalSpinlock[187432]
  function __wide_TaskErrors[2581446]._local_deinit[2612339](const in arg this[2612341]:__wide_TaskErrors[2581446]) : void[4] "destructor" "local fn" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    const-val local__str_literal_978[2612344]:string[26] "temp"
    (2612346 'move' local__str_literal_978[2612344] "With a negative count, the range must have a last index.")
    val coerce_tmp[2612349]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2613995 'local_check' this[2612341] c"cannot access remote data in local block")
    const-val local_this[2613992]:TaskErrors[169702] "temp"
    (2613998 'move' local_this[2613992] this[2612341])
    val tmp[2652717]:c_ptr(owned Error?)[1235804] "temp"
    (2612351 'move' tmp[2652717](2612353 '.v' local_this[2613992] errorsArray[168374]))
    (2652720 'move' coerce_tmp[2612349] tmp[2652717])
    const-val call_tmp[2612356]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2612358 'move' call_tmp[2612356](2612360 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2612363]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2612365 'move' call_tmp[2612363](2612367 'ptr_neq' coerce_tmp[2612349] call_tmp[2612356]))
    if call_tmp[2612363]
    {
      const-val coerce_tmp[2612372]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2614004 'local_check' this[2612341] c"cannot access remote data in local block")
      const-val local_this[2614001]:TaskErrors[169702] "temp"
      (2614007 'move' local_this[2614001] this[2612341])
      val tmp[2652723]:int(64)[13] "temp"
      (2612374 'move' tmp[2652723](2612376 '.v' local_this[2614001] nErrors[168363]))
      (2652726 'move' coerce_tmp[2612372] tmp[2652723])
      const-val call_tmp[2612379]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2612381 'move' call_tmp[2612379](2612383 '<' coerce_tmp[2612372] 0))
      if call_tmp[2612379]
      {
        (2612389 call _local_boundsCheckHalt[2591315] local__str_literal_978[2612344])
      }
      val tmp_x0[2612392]:int(64)[13] "temp"
      val tmp_x1[2612394]:int(64)[13] "temp"
      const-val call_tmp[2612396]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2612398 'move' call_tmp[2612396](2612400 '==' coerce_tmp[2612372] 0))
      if call_tmp[2612396]
      {
        const-val call_tmp[2612405]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (2612407 'move' call_tmp[2612405](2612409 'cast' uint(64)[115] 0))
        const-val call_tmp[2612412]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (2612414 'move' call_tmp[2612412](2612416 '-' call_tmp[2612405] 1))
        const-val call_tmp[2612419]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2612421 'move' call_tmp[2612419](2612423 'cast' int(64)[13] call_tmp[2612412]))
        (2612426 'move' tmp_x0[2612392] 0)
        (2612429 'move' tmp_x1[2612394] call_tmp[2612419])
      }
      {
        const-val call_tmp[2612433]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2612435 'move' call_tmp[2612433](2612437 '-' coerce_tmp[2612372] 1))
        const-val call_tmp[2612440]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2612442 'move' call_tmp[2612440](2612444 '+' 0 call_tmp[2612433]))
        (2612447 'move' tmp_x0[2612392] 0)
        (2612450 'move' tmp_x1[2612394] call_tmp[2612440])
      }
      (2612454 'noop')
      (2612455 'noop')
      (2612456 'noop')
      const-val _ic__F1_high[2612457]:int(64)[13] "temp"
      (2612459 'move' _ic__F1_high[2612457] tmp_x1[2612394])
      val i[2612462]:int(64)[13] "dead at end of block" "insert auto destroy"
      (2612464 'move' i[2612462] 0)
      (2612468 call _local_chpl_checkIfRangeIterWillOverflow[2588968] tmp_x0[2612392] tmp_x1[2612394] 1 tmp_x0[2612392] tmp_x1[2612394] 1)
      val coerce_tmp[2612475]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2614015 'local_check' this[2612341] c"cannot access remote data in local block")
      const-val local_this[2614012]:TaskErrors[169702] "temp"
      (2614018 'move' local_this[2614012] this[2612341])
      val tmp[2652729]:c_ptr(owned Error?)[1235804] "temp"
      (2612477 'move' tmp[2652729](2612479 '.v' local_this[2614012] errorsArray[168374]))
      (2652732 'move' coerce_tmp[2612475] tmp[2652729])
      CForLoop[2612482]
      {
        ref call_tmp[2612495]:owned Error?[966602] "dead after last mention" "maybe param" "temp"
        (2612497 'move' call_tmp[2612495](2612499 'array_get' coerce_tmp[2612475] i[2612462]))
        (2612503 call _local_clear[2614021] call_tmp[2612495])
        {
          (2612484 '=' i[2612462] tmp_x0[2612392])
        }
        {
          (2612488 '<=' i[2612462] _ic__F1_high[2612457])
        }
        {
          (2612492 '+=' i[2612462] 1)
        }
      }
      label _endchpl_direct_param_stride_range_iter[2612505]
      label _endchpl_direct_counted_range_iter_helper[2612507]
      label _endchpl_direct_counted_range_iter[2612509]
      val coerce_tmp[2612511]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2614154 'local_check' this[2612341] c"cannot access remote data in local block")
      const-val local_this[2614151]:TaskErrors[169702] "temp"
      (2614157 'move' local_this[2614151] this[2612341])
      val tmp[2652735]:c_ptr(owned Error?)[1235804] "temp"
      (2612513 'move' tmp[2652735](2612515 '.v' local_this[2614151] errorsArray[168374]))
      (2652738 'move' coerce_tmp[2612511] tmp[2652735])
      const-val coerce_tmp[2612518]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2612520 'move' coerce_tmp[2612518](2612522 'cast' c_void_ptr[149] coerce_tmp[2612511]))
      (2612526 call _local_chpl_here_free[2603328] coerce_tmp[2612518])
    }
    label _enddeinit[2612529]
    val _parent_destructor_tmp_[2612531]:__wide_Error[2581418] "temp"
    (2612533 'move' _parent_destructor_tmp_[2612531](2612535 'cast' Error[167984] this[2612341]))
    wide-ref _field_destructor_tmp_[2612538]:string[26] "temp"
    (2614164 'local_check' _parent_destructor_tmp_[2612531] c"cannot access remote data in local block")
    val local__parent_destructor_tmp_[2614161]:Error[167984] "temp"
    (2614167 'move' local__parent_destructor_tmp_[2614161] _parent_destructor_tmp_[2612531])
    (2612540 'move' _field_destructor_tmp_[2612538](2612542 '.' local__parent_destructor_tmp_[2614161] _msg[167930]))
    (2612546 call _local_deinit[2591961] _field_destructor_tmp_[2612538])
    (2612548 return _void[55])
  }
  function __wide_TaskErrors[2581446].deinit[168832](const in arg this[169716]:__wide_TaskErrors[2581446]) : void[4] "destructor" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    const-val local__str_literal_978[2576793]:string[26] "temp"
    (2576794 'move' "With a negative count, the range must have a last index." "With a negative count, the range must have a last index.")
    val coerce_tmp[1235887]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2616730]:c_ptr(owned Error?)[1235804] "temp"
    (1235891 'move' tmp[2616730](2564178 '.v' this[169716] errorsArray[168374]))
    (2616733 'move' coerce_tmp[1235887] tmp[2616730])
    const-val call_tmp[2410487]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2410489 'move' call_tmp[2410487](2410491 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2410494]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2410496 'move' call_tmp[2410494](2410498 'ptr_neq' coerce_tmp[1235887] call_tmp[2410487]))
    if call_tmp[2410494]
    {
      const-val coerce_tmp[1235924]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      val tmp[2616736]:int(64)[13] "temp"
      (1235928 'move' tmp[2616736](2564184 '.v' this[169716] nErrors[168363]))
      (2616739 'move' coerce_tmp[1235924] tmp[2616736])
      const-val call_tmp[2230848]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2230850 'move' call_tmp[2230848](2230852 '<' coerce_tmp[1235924] 0))
      if call_tmp[2230848]
      {
        (2059142 call boundsCheckHalt[210254] "With a negative count, the range must have a last index.")
      }
      val tmp_x0[2549799]:int(64)[13] "temp"
      val tmp_x1[2549801]:int(64)[13] "temp"
      const-val call_tmp[2235011]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2235013 'move' call_tmp[2235011](2235015 '==' coerce_tmp[1235924] 0))
      if call_tmp[2235011]
      {
        const-val call_tmp[2231788]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (2231790 'move' call_tmp[2231788](2231792 'cast' uint(64)[115] 0))
        const-val call_tmp[2302374]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (2302376 'move' call_tmp[2302374](2302378 '-' call_tmp[2231788] 1))
        const-val call_tmp[2302804]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2302806 'move' call_tmp[2302804](2302808 'cast' int(64)[13] call_tmp[2302374]))
        (2549807 'move' tmp_x0[2549799] 0)
        (2549812 'move' tmp_x1[2549801] call_tmp[2302804])
      }
      {
        const-val call_tmp[2261794]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2261796 'move' call_tmp[2261794](2261798 '-' coerce_tmp[1235924] 1))
        const-val call_tmp[2242526]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2242528 'move' call_tmp[2242526](2242530 '+' 0 call_tmp[2261794]))
        (2549817 'move' tmp_x0[2549799] 0)
        (2549822 'move' tmp_x1[2549801] call_tmp[2242526])
      }
      (2059251 'noop')
      (2059271 'noop')
      (2059290 'noop')
      const-val _ic__F1_high[2543468]:int(64)[13] "temp"
      (2308138 'move' _ic__F1_high[2543468] tmp_x1[2549801])
      val i[2059319]:int(64)[13] "dead at end of block" "insert auto destroy"
      (2059323 'move' i[2059319] 0)
      (2059375 call chpl_checkIfRangeIterWillOverflow[1096265] tmp_x0[2549799] tmp_x1[2549801] 1 tmp_x0[2549799] tmp_x1[2549801] 1)
      val coerce_tmp[2059490]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      val tmp[2623109]:c_ptr(owned Error?)[1235804] "temp"
      (2059492 'move' tmp[2623109](2564192 '.v' this[169716] errorsArray[168374]))
      (2623112 'move' coerce_tmp[2059490] tmp[2623109])
      CForLoop[2059382] hazard
      {
        ref call_tmp[2310199]:owned Error?[966602] "dead after last mention" "maybe param" "temp"
        (2310201 'move' call_tmp[2310199](2310203 'array_get' coerce_tmp[2059490] i[2059319]))
        (2059503 call clear[1236236] call_tmp[2310199])
        {
          (2059391 '=' i[2059319] tmp_x0[2549799])
        }
        {
          (2059402 '<=' i[2059319] _ic__F1_high[2543468])
        }
        {
          (2059408 '+=' i[2059319] 1)
        }
      }
      label _endchpl_direct_param_stride_range_iter[2059445]
      label _endchpl_direct_counted_range_iter_helper[2059453]
      label _endchpl_direct_counted_range_iter[1989018]
      val coerce_tmp[1237357]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      val tmp[2616742]:c_ptr(owned Error?)[1235804] "temp"
      (1237361 'move' tmp[2616742](2564198 '.v' this[169716] errorsArray[168374]))
      (2616745 'move' coerce_tmp[1237357] tmp[2616742])
      const-val coerce_tmp[1237363]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1237369 'move' coerce_tmp[1237363](1237365 'cast' c_void_ptr[149] coerce_tmp[1237357]))
      (2325146 call chpl_here_free[188127] coerce_tmp[1237363])
    }
    label _enddeinit[1890179]
    val _parent_destructor_tmp_[1890174]:__wide_Error[2581418] "temp"
    (1890181 'move' _parent_destructor_tmp_[1890174](1890175 'cast' Error[167984] this[169716]))
    wide-ref _field_destructor_tmp_[2338199]:string[26] "temp"
    (2338201 'move' _field_destructor_tmp_[2338199](2338203 '.' _parent_destructor_tmp_[1890174] _msg[167930]))
    (2338207 call deinit[30834] _field_destructor_tmp_[2338199])
    (522282 return _void[55])
  }
  function __wide_TaskErrors[2581446].message[169077](const in arg this[169728]:__wide_TaskErrors[2581446], wide-ref arg _retArg[1918970]:string[26]) : void[4] "fn returns via _retArg" "method" "primary method" "method overrides" "resolved" "virtual"
  {
    const-val local__str_literal_2228[2576851]:string[26] "temp"
    (2576852 'move' " ... " " ... ")
    const-val local__str_literal_2226[2576844]:string[26] "temp"
    (2576845 'move' " errors: " " errors: ")
    const-val local__str_literal_2224[2576826]:string[26] "temp"
    (2576827 'move' "" "")
    const-val local__str_literal_4780[2576817]:string[26] "temp"
    (2576818 'move' "casting int(64) less than 0 to uint(64)" "casting int(64) less than 0 to uint(64)")
    const-val local__str_literal_2221[2576811]:string[26] "temp"
    (2576812 'move' "" "")
    const-val local__str_literal_129[2576805]:string[26] "temp"
    (2576806 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local__str_literal_978[2576799]:string[26] "temp"
    (2576800 'move' "With a negative count, the range must have a last index." "With a negative count, the range must have a last index.")
    const-val ret[522310]:string[26] "dead after last mention" "RVV" "temp"
    val n[169081]:int(64)[13] "dead at end of block" "insert auto destroy"
    (544746 'move' n[169081] 0)
    val minMsg[169087]:string[26] "dead at end of block" "insert auto destroy"
    (1841140 call init[30763] minMsg[169087])
    val maxMsg[169092]:string[26] "dead at end of block" "insert auto destroy"
    (1841145 call init[30763] maxMsg[169092])
    val first[169099]:__wide_Error[2581418] "dead at end of block" "insert auto destroy"
    val tmp[2585006]:Error[167984] "temp"
    (2585009 'move' tmp[2585006](1841151 'cast' Error[167984] nil[44]))
    (1841153 'move' first[169099] tmp[2585006])
    val last[169106]:__wide_Error[2581418] "dead at end of block" "insert auto destroy"
    val tmp[2585011]:Error[167984] "temp"
    (2585014 'move' tmp[2585011](1841156 'cast' Error[167984] nil[44]))
    (1841158 'move' last[169106] tmp[2585011])
    const-val _ic__F0_this[2535425]:__wide_TaskErrors[2581446] "temp"
    (2296923 'move' _ic__F0_this[2535425] this[169728])
    const-val this[1989666]:__wide_TaskErrors[2581446] "temp"
    (1989671 'move' this[1989666] this[169728])
    const-val coerce_tmp[1989258]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val tmp[2622004]:int(64)[13] "temp"
    (1989260 'move' tmp[2622004](2564228 '.v' this[1989666] nErrors[168363]))
    (2622007 'move' coerce_tmp[1989258] tmp[2622004])
    const-val call_tmp[2230858]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2230860 'move' call_tmp[2230858](2230862 '<' coerce_tmp[1989258] 0))
    if call_tmp[2230858]
    {
      (2060120 call boundsCheckHalt[210254] "With a negative count, the range must have a last index.")
    }
    val tmp_x0[2549907]:int(64)[13] "temp"
    val tmp_x1[2549909]:int(64)[13] "temp"
    const-val call_tmp[2235026]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2235028 'move' call_tmp[2235026](2235030 '==' coerce_tmp[1989258] 0))
    if call_tmp[2235026]
    {
      const-val call_tmp[2231798]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2231800 'move' call_tmp[2231798](2231802 'cast' uint(64)[115] 0))
      const-val call_tmp[2302384]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2302386 'move' call_tmp[2302384](2302388 '-' call_tmp[2231798] 1))
      const-val call_tmp[2302814]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2302816 'move' call_tmp[2302814](2302818 'cast' int(64)[13] call_tmp[2302384]))
      (2549915 'move' tmp_x0[2549907] 0)
      (2549920 'move' tmp_x1[2549909] call_tmp[2302814])
    }
    {
      const-val call_tmp[2261804]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2261806 'move' call_tmp[2261804](2261808 '-' coerce_tmp[1989258] 1))
      const-val call_tmp[2242536]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2242538 'move' call_tmp[2242536](2242540 '+' 0 call_tmp[2261804]))
      (2549925 'move' tmp_x0[2549907] 0)
      (2549930 'move' tmp_x1[2549909] call_tmp[2242536])
    }
    (2060229 'noop')
    (2060249 'noop')
    (2060268 'noop')
    const-val _ic__F1_high[2543487]:int(64)[13] "temp"
    (2308201 'move' _ic__F1_high[2543487] tmp_x1[2549909])
    val i[2060297]:int(64)[13] "dead at end of block" "insert auto destroy"
    (2060301 'move' i[2060297] 0)
    (2060353 call chpl_checkIfRangeIterWillOverflow[1096265] tmp_x0[2549907] tmp_x1[2549909] 1 tmp_x0[2549907] tmp_x1[2549909] 1)
    const-val this[2060462]:__wide_TaskErrors[2581446] "temp"
    (2060464 'move' this[2060462] _ic__F0_this[2535425])
    val coerce_tmp[2060474]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2623115]:c_ptr(owned Error?)[1235804] "temp"
    (2060476 'move' tmp[2623115](2564236 '.v' this[2060462] errorsArray[168374]))
    (2623118 'move' coerce_tmp[2060474] tmp[2623115])
    CForLoop[2060360] hazard
    {
      ref call_tmp[2310209]:owned Error?[966602] "dead after last mention" "maybe param" "temp"
      (2310211 'move' call_tmp[2310209](2310213 'array_get' coerce_tmp[2060474] i[2060297]))
      val coerce_tmp[2060488]:__wide_Error[2581418] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2060490 'move' coerce_tmp[2060488](2060493 call borrow[1236017] call_tmp[2310209]))
      val coerce_tmp[2060495]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2060497 'move' coerce_tmp[2060495](2060499 'cast' object[22] coerce_tmp[2060488]))
      const-val call_tmp[2228157]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2626777]:__wide_object[2581313] "temp"
      (2626780 'move' tmp[2626777] nil[44])
      (2228159 'move' call_tmp[2228157](2228161 'ptr_neq' coerce_tmp[2060495] tmp[2626777]))
      if call_tmp[2228157]
      {
        const-val this[2060521]:__wide_TaskErrors[2581446] "temp"
        (2060523 'move' this[2060521] _ic__F0_this[2535425])
        val coerce_tmp[2060533]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        val tmp[2623121]:c_ptr(owned Error?)[1235804] "temp"
        (2060535 'move' tmp[2623121](2564242 '.v' this[2060521] errorsArray[168374]))
        (2623124 'move' coerce_tmp[2060533] tmp[2623121])
        ref call_tmp[2310219]:owned Error?[966602] "dead after last mention" "maybe param" "temp"
        (2310221 'move' call_tmp[2310219](2310223 'array_get' coerce_tmp[2060533] i[2060297]))
        val coerce_tmp[2521186]:__wide_Error[2581418] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2521188 'move' coerce_tmp[2521186](2521190 '.v' call_tmp[2310219] chpl_p[966597]))
        val coerce_tmp[2521193]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2521195 'move' coerce_tmp[2521193](2521197 'cast' object[22] coerce_tmp[2521186]))
        const-val call_tmp[2521200]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        val tmp[2647102]:__wide_object[2581313] "temp"
        (2647105 'move' tmp[2647102] nil[44])
        (2521202 'move' call_tmp[2521200](2521204 'ptr_eq' coerce_tmp[2521193] tmp[2647102]))
        if call_tmp[2521200]
        {
          (2521210 call nilCheckHalt[210238] "argument to ! is nil")
        }
        val coerce_tmp[2521213]:__wide_Error[2581418] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2521215 'move' coerce_tmp[2521213](2521217 '.v' call_tmp[2310219] chpl_p[966597]))
        const-val tmp[2060571]:bool[10] "dead after last mention" "maybe param" "temp"
        (2060573 'move' tmp[2060571](2060576 call ==[38823] minMsg[169087] ""))
        val tmp[2060579]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        if tmp[2060571]
        {
          (2060593 'move' tmp[2060579] 1)
        }
        {
          const-val call_tmp[2060599]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val _virtual_method_tmp_[2060601]:int(32)[95] "temp"
          (2060603 'move' _virtual_method_tmp_[2060601](2060605 'getcid' coerce_tmp[2521213]))
          val ret_tmp[2060607]:string[26] "temp"
          ref tmp[2623127]:string[26] "temp"
          (2623131 'move' tmp[2623127](2623130 'set reference' ret_tmp[2060607]))
          wide-ref tmp[2623134]:string[26] "temp"
          (2623137 'move' tmp[2623134] tmp[2623127])
          (2060609 'virtual method call' message[167975] _virtual_method_tmp_[2060601] coerce_tmp[2521213] tmp[2623134])
          (2060614 'move' call_tmp[2060599] ret_tmp[2060607])
          val coerce_tmp[2278151]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2630547]:c_ptr(uint(8))[937612] "temp"
          (2278153 'move' tmp[2630547](2278155 '.v' call_tmp[2060599] buff[30740]))
          (2630550 'move' coerce_tmp[2278151] tmp[2630547])
          const-val coerce_tmp[2278158]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2630553]:int(64)[13] "temp"
          (2278160 'move' tmp[2630553](2278162 '.v' call_tmp[2060599] buffLen[30722]))
          (2630556 'move' coerce_tmp[2278158] tmp[2630553])
          const-val coerce_tmp[2278165]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2630559]:int(32)[95] "temp"
          (2278167 'move' tmp[2630559](2278169 '.v' call_tmp[2060599] locale_id[30757]))
          (2630562 'move' coerce_tmp[2278165] tmp[2630559])
          val coerce_tmp[2278172]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2630565]:c_ptr(uint(8))[937612] "temp"
          (2278174 'move' tmp[2630565](2278176 '.v' minMsg[169087] buff[30740]))
          (2630568 'move' coerce_tmp[2278172] tmp[2630565])
          const-val coerce_tmp[2278179]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2630571]:int(64)[13] "temp"
          (2278181 'move' tmp[2630571](2278183 '.v' minMsg[169087] buffLen[30722]))
          (2630574 'move' coerce_tmp[2278179] tmp[2630571])
          const-val coerce_tmp[2278186]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2630577]:int(32)[95] "temp"
          (2278188 'move' tmp[2630577](2278190 '.v' minMsg[169087] locale_id[30757]))
          (2630580 'move' coerce_tmp[2278186] tmp[2630577])
          val ret[2278193]:int(64)[13] "dead after last mention" "RVV" "temp"
          const-val call_tmp[2278195]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2278197 'move' call_tmp[2278195](2278199 '==' coerce_tmp[2278165] chpl_nodeID[208207]))
          val tmp[2278202]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
          if call_tmp[2278195]
          {
            const-val call_tmp[2278206]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2278208 'move' call_tmp[2278206](2278210 '==' coerce_tmp[2278186] chpl_nodeID[208207]))
            (2278213 'move' tmp[2278202] call_tmp[2278206])
          }
          {
            (2278217 'move' tmp[2278202] 0)
          }
          if tmp[2278202]
          {
            val ret[2278223]:int(64)[13] "dead after last mention" "RVV" "temp"
            val tmp[2278225]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            const-val call_tmp[2278227]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2278229 'move' call_tmp[2278227](2278231 '<' coerce_tmp[2278158] coerce_tmp[2278179]))
            if call_tmp[2278227]
            {
              (2278236 'move' tmp[2278225] coerce_tmp[2278158])
            }
            {
              (2278240 'move' tmp[2278225] coerce_tmp[2278179])
            }
            const-val coerce_tmp[2278249]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (2278251 'move' coerce_tmp[2278249](2278253 'cast' c_void_ptr[149] coerce_tmp[2278151]))
            const-val coerce_tmp[2278256]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (2278258 'move' coerce_tmp[2278256](2278260 'cast' c_void_ptr[149] coerce_tmp[2278172]))
            const-val call_tmp[2278263]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2278265 'move' call_tmp[2278263](2278267 '<' tmp[2278225] 0))
            if call_tmp[2278263]
            {
              (2278273 call safeCastCheckHalt[210302] "casting int(64) less than 0 to uint(64)")
            }
            const-val call_tmp[2278276]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
            (2278278 'move' call_tmp[2278276](2278280 'cast' uint(64)[115] tmp[2278225]))
            const-val call_tmp[2278283]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
            (2278285 'move' call_tmp[2278283](2278288 call memcmp[1206651] coerce_tmp[2278249] coerce_tmp[2278256] call_tmp[2278276]))
            const-val call_tmp[2278292]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2278294 'move' call_tmp[2278292](2278296 'cast' int(64)[13] call_tmp[2278283]))
            const-val call_tmp[2278304]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2278306 'move' call_tmp[2278304](2278308 '==' call_tmp[2278292] 0))
            if call_tmp[2278304]
            {
              const-val call_tmp[2278313]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2278315 'move' call_tmp[2278313](2278317 '<' tmp[2278225] coerce_tmp[2278158]))
              if call_tmp[2278313]
              {
                (2278322 'move' ret[2278223] 1)
                gotoReturn _end__strcmp_local[2278347] _end__strcmp_local[2278347]
              }
              const-val call_tmp[2278328]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2278330 'move' call_tmp[2278328](2278332 '<' tmp[2278225] coerce_tmp[2278179]))
              if call_tmp[2278328]
              {
                (2278337 'move' ret[2278223] -1)
                gotoReturn _end__strcmp_local[2278347] _end__strcmp_local[2278347]
              }
            }
            (2278344 'move' ret[2278223] call_tmp[2278292])
            label _end__strcmp_local[2278347]
            (2278349 'move' ret[2278193] ret[2278223])
            gotoReturn _end__strcmp[2278933] _end__strcmp[2278933]
          }
          {
            const-val call_tmp[2278355]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2278357 'move' call_tmp[2278355](2278359 '!=' coerce_tmp[2278165] chpl_nodeID[208207]))
            val tmp[2278362]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            if call_tmp[2278355]
            {
              const-val call_tmp[2278366]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2278368 'move' call_tmp[2278366](2278370 '==' coerce_tmp[2278186] chpl_nodeID[208207]))
              (2278373 'move' tmp[2278362] call_tmp[2278366])
            }
            {
              (2278377 'move' tmp[2278362] 0)
            }
            if tmp[2278362]
            {
              val call_tmp[2278383]:c_ptr(uint(8))[937612] "dead at end of block" "maybe param" "temp"
              const-val coerce_tmp[2278385]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2278387 'move' coerce_tmp[2278385](2278389 'cast' int(64)[13] coerce_tmp[2278165]))
              (2278392 'move' call_tmp[2278383](2278395 call bufferCopyRemote[172830] coerce_tmp[2278385] coerce_tmp[2278151] coerce_tmp[2278158]))
              val ret[2278404]:int(64)[13] "dead after last mention" "RVV" "temp"
              val tmp[2278406]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              const-val call_tmp[2278408]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2278410 'move' call_tmp[2278408](2278412 '<' coerce_tmp[2278158] coerce_tmp[2278179]))
              if call_tmp[2278408]
              {
                (2278417 'move' tmp[2278406] coerce_tmp[2278158])
              }
              {
                (2278421 'move' tmp[2278406] coerce_tmp[2278179])
              }
              const-val coerce_tmp[2278430]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2278432 'move' coerce_tmp[2278430](2278434 'cast' c_void_ptr[149] call_tmp[2278383]))
              const-val coerce_tmp[2278437]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2278439 'move' coerce_tmp[2278437](2278441 'cast' c_void_ptr[149] coerce_tmp[2278172]))
              const-val call_tmp[2278444]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2278446 'move' call_tmp[2278444](2278448 '<' tmp[2278406] 0))
              if call_tmp[2278444]
              {
                (2278454 call safeCastCheckHalt[210302] "casting int(64) less than 0 to uint(64)")
              }
              const-val call_tmp[2278457]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
              (2278459 'move' call_tmp[2278457](2278461 'cast' uint(64)[115] tmp[2278406]))
              const-val call_tmp[2278464]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
              (2278466 'move' call_tmp[2278464](2278469 call memcmp[1206651] coerce_tmp[2278430] coerce_tmp[2278437] call_tmp[2278457]))
              const-val call_tmp[2278473]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (2278475 'move' call_tmp[2278473](2278477 'cast' int(64)[13] call_tmp[2278464]))
              const-val call_tmp[2278485]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2278487 'move' call_tmp[2278485](2278489 '==' call_tmp[2278473] 0))
              if call_tmp[2278485]
              {
                const-val call_tmp[2278494]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2278496 'move' call_tmp[2278494](2278498 '<' tmp[2278406] coerce_tmp[2278158]))
                if call_tmp[2278494]
                {
                  (2278503 'move' ret[2278404] 1)
                  gotoReturn _end__strcmp_local[2278528] _end__strcmp_local[2278528]
                }
                const-val call_tmp[2278509]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2278511 'move' call_tmp[2278509](2278513 '<' tmp[2278406] coerce_tmp[2278179]))
                if call_tmp[2278509]
                {
                  (2278518 'move' ret[2278404] -1)
                  gotoReturn _end__strcmp_local[2278528] _end__strcmp_local[2278528]
                }
              }
              (2278525 'move' ret[2278404] call_tmp[2278473])
              label _end__strcmp_local[2278528]
              const-val coerce_tmp[2278530]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2278532 'move' coerce_tmp[2278530](2278534 'cast' c_void_ptr[149] call_tmp[2278383]))
              (2278538 call chpl_here_free[188127] coerce_tmp[2278530])
              (2278540 'move' ret[2278193] ret[2278404])
              gotoReturn _end__strcmp[2278933] _end__strcmp[2278933]
            }
            {
              const-val call_tmp[2278546]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2278548 'move' call_tmp[2278546](2278550 '==' coerce_tmp[2278165] chpl_nodeID[208207]))
              val tmp[2278553]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              if call_tmp[2278546]
              {
                const-val call_tmp[2278557]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2278559 'move' call_tmp[2278557](2278561 '!=' coerce_tmp[2278186] chpl_nodeID[208207]))
                (2278564 'move' tmp[2278553] call_tmp[2278557])
              }
              {
                (2278568 'move' tmp[2278553] 0)
              }
              if tmp[2278553]
              {
                val call_tmp[2278574]:c_ptr(uint(8))[937612] "dead at end of block" "maybe param" "temp"
                const-val coerce_tmp[2278576]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2278578 'move' coerce_tmp[2278576](2278580 'cast' int(64)[13] coerce_tmp[2278186]))
                (2278583 'move' call_tmp[2278574](2278586 call bufferCopyRemote[172830] coerce_tmp[2278576] coerce_tmp[2278172] coerce_tmp[2278179]))
                val ret[2278595]:int(64)[13] "dead after last mention" "RVV" "temp"
                val tmp[2278597]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val call_tmp[2278599]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2278601 'move' call_tmp[2278599](2278603 '<' coerce_tmp[2278158] coerce_tmp[2278179]))
                if call_tmp[2278599]
                {
                  (2278608 'move' tmp[2278597] coerce_tmp[2278158])
                }
                {
                  (2278612 'move' tmp[2278597] coerce_tmp[2278179])
                }
                const-val coerce_tmp[2278621]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2278623 'move' coerce_tmp[2278621](2278625 'cast' c_void_ptr[149] coerce_tmp[2278151]))
                const-val coerce_tmp[2278628]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2278630 'move' coerce_tmp[2278628](2278632 'cast' c_void_ptr[149] call_tmp[2278574]))
                const-val call_tmp[2278635]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2278637 'move' call_tmp[2278635](2278639 '<' tmp[2278597] 0))
                if call_tmp[2278635]
                {
                  (2278645 call safeCastCheckHalt[210302] "casting int(64) less than 0 to uint(64)")
                }
                const-val call_tmp[2278648]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
                (2278650 'move' call_tmp[2278648](2278652 'cast' uint(64)[115] tmp[2278597]))
                const-val call_tmp[2278655]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (2278657 'move' call_tmp[2278655](2278660 call memcmp[1206651] coerce_tmp[2278621] coerce_tmp[2278628] call_tmp[2278648]))
                const-val call_tmp[2278664]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (2278666 'move' call_tmp[2278664](2278668 'cast' int(64)[13] call_tmp[2278655]))
                const-val call_tmp[2278676]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2278678 'move' call_tmp[2278676](2278680 '==' call_tmp[2278664] 0))
                if call_tmp[2278676]
                {
                  const-val call_tmp[2278685]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2278687 'move' call_tmp[2278685](2278689 '<' tmp[2278597] coerce_tmp[2278158]))
                  if call_tmp[2278685]
                  {
                    (2278694 'move' ret[2278595] 1)
                    gotoReturn _end__strcmp_local[2278719] _end__strcmp_local[2278719]
                  }
                  const-val call_tmp[2278700]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2278702 'move' call_tmp[2278700](2278704 '<' tmp[2278597] coerce_tmp[2278179]))
                  if call_tmp[2278700]
                  {
                    (2278709 'move' ret[2278595] -1)
                    gotoReturn _end__strcmp_local[2278719] _end__strcmp_local[2278719]
                  }
                }
                (2278716 'move' ret[2278595] call_tmp[2278664])
                label _end__strcmp_local[2278719]
                const-val coerce_tmp[2278721]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (2278723 'move' coerce_tmp[2278721](2278725 'cast' c_void_ptr[149] call_tmp[2278574]))
                (2278729 call chpl_here_free[188127] coerce_tmp[2278721])
                (2278731 'move' ret[2278193] ret[2278595])
                gotoReturn _end__strcmp[2278933] _end__strcmp[2278933]
              }
              {
                val call_tmp[2278737]:c_ptr(uint(8))[937612] "dead at end of block" "maybe param" "temp"
                const-val coerce_tmp[2278739]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2278741 'move' coerce_tmp[2278739](2278743 'cast' int(64)[13] coerce_tmp[2278165]))
                (2278746 'move' call_tmp[2278737](2278749 call bufferCopyRemote[172830] coerce_tmp[2278739] coerce_tmp[2278151] coerce_tmp[2278158]))
                val call_tmp[2278758]:c_ptr(uint(8))[937612] "dead at end of block" "maybe param" "temp"
                const-val coerce_tmp[2278760]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2278762 'move' coerce_tmp[2278760](2278764 'cast' int(64)[13] coerce_tmp[2278186]))
                (2278767 'move' call_tmp[2278758](2278770 call bufferCopyRemote[172830] coerce_tmp[2278760] coerce_tmp[2278172] coerce_tmp[2278179]))
                val ret[2278779]:int(64)[13] "dead after last mention" "RVV" "temp"
                val tmp[2278781]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val call_tmp[2278783]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2278785 'move' call_tmp[2278783](2278787 '<' coerce_tmp[2278158] coerce_tmp[2278179]))
                if call_tmp[2278783]
                {
                  (2278792 'move' tmp[2278781] coerce_tmp[2278158])
                }
                {
                  (2278796 'move' tmp[2278781] coerce_tmp[2278179])
                }
                const-val coerce_tmp[2278805]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2278807 'move' coerce_tmp[2278805](2278809 'cast' c_void_ptr[149] call_tmp[2278737]))
                const-val coerce_tmp[2278812]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2278814 'move' coerce_tmp[2278812](2278816 'cast' c_void_ptr[149] call_tmp[2278758]))
                const-val call_tmp[2278819]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2278821 'move' call_tmp[2278819](2278823 '<' tmp[2278781] 0))
                if call_tmp[2278819]
                {
                  (2278829 call safeCastCheckHalt[210302] "casting int(64) less than 0 to uint(64)")
                }
                const-val call_tmp[2278832]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
                (2278834 'move' call_tmp[2278832](2278836 'cast' uint(64)[115] tmp[2278781]))
                const-val call_tmp[2278839]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (2278841 'move' call_tmp[2278839](2278844 call memcmp[1206651] coerce_tmp[2278805] coerce_tmp[2278812] call_tmp[2278832]))
                const-val call_tmp[2278848]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (2278850 'move' call_tmp[2278848](2278852 'cast' int(64)[13] call_tmp[2278839]))
                const-val call_tmp[2278860]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2278862 'move' call_tmp[2278860](2278864 '==' call_tmp[2278848] 0))
                if call_tmp[2278860]
                {
                  const-val call_tmp[2278869]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2278871 'move' call_tmp[2278869](2278873 '<' tmp[2278781] coerce_tmp[2278158]))
                  if call_tmp[2278869]
                  {
                    (2278878 'move' ret[2278779] 1)
                    gotoReturn _end__strcmp_local[2278903] _end__strcmp_local[2278903]
                  }
                  const-val call_tmp[2278884]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2278886 'move' call_tmp[2278884](2278888 '<' tmp[2278781] coerce_tmp[2278179]))
                  if call_tmp[2278884]
                  {
                    (2278893 'move' ret[2278779] -1)
                    gotoReturn _end__strcmp_local[2278903] _end__strcmp_local[2278903]
                  }
                }
                (2278900 'move' ret[2278779] call_tmp[2278848])
                label _end__strcmp_local[2278903]
                const-val coerce_tmp[2278905]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (2278907 'move' coerce_tmp[2278905](2278909 'cast' c_void_ptr[149] call_tmp[2278737]))
                (2278913 call chpl_here_free[188127] coerce_tmp[2278905])
                const-val coerce_tmp[2278915]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (2278917 'move' coerce_tmp[2278915](2278919 'cast' c_void_ptr[149] call_tmp[2278758]))
                (2278923 call chpl_here_free[188127] coerce_tmp[2278915])
                (2278925 'move' ret[2278193] ret[2278779])
                gotoReturn _end__strcmp[2278933] _end__strcmp[2278933]
              }
            }
          }
          label _end__strcmp[2278933]
          const-val call_tmp[2278935]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2278937 'move' call_tmp[2278935](2278939 '<' ret[2278193] 0))
          (2060628 'move' tmp[2060579] call_tmp[2278935])
          ref i_x[2250677]:string[26] "temp"
          (2250681 'move' i_x[2250677](2250679 'set reference' call_tmp[2060599]))
          wide-ref tmp[2628553]:string[26] "temp"
          (2628556 'move' tmp[2628553] i_x[2250677])
          (2250685 call deinit[30834] tmp[2628553])
        }
        if tmp[2060579]
        {
          const-val call_tmp[2060642]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val _virtual_method_tmp_[2060644]:int(32)[95] "temp"
          (2060646 'move' _virtual_method_tmp_[2060644](2060648 'getcid' coerce_tmp[2521213]))
          val ret_tmp[2060650]:string[26] "temp"
          ref tmp[2623140]:string[26] "temp"
          (2623144 'move' tmp[2623140](2623143 'set reference' ret_tmp[2060650]))
          wide-ref tmp[2623147]:string[26] "temp"
          (2623150 'move' tmp[2623147] tmp[2623140])
          (2060652 'virtual method call' message[167975] _virtual_method_tmp_[2060644] coerce_tmp[2521213] tmp[2623147])
          (2060657 'move' call_tmp[2060642] ret_tmp[2060650])
          wide-ref tmp[2623153]:string[26] "temp"
          (2623157 'move' tmp[2623153](2623155 'set reference' minMsg[169087]))
          (2060661 call =[38272] tmp[2623153] call_tmp[2060642])
          ref i_x[2250689]:string[26] "temp"
          (2250693 'move' i_x[2250689](2250691 'set reference' call_tmp[2060642]))
          wide-ref tmp[2628559]:string[26] "temp"
          (2628562 'move' tmp[2628559] i_x[2250689])
          (2250697 call deinit[30834] tmp[2628559])
        }
        const-val tmp[2060668]:bool[10] "dead after last mention" "maybe param" "temp"
        (2060670 'move' tmp[2060668](2060673 call ==[38823] maxMsg[169092] ""))
        val tmp[2060676]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        if tmp[2060668]
        {
          (2060690 'move' tmp[2060676] 1)
        }
        {
          const-val call_tmp[2060696]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val _virtual_method_tmp_[2060698]:int(32)[95] "temp"
          (2060700 'move' _virtual_method_tmp_[2060698](2060702 'getcid' coerce_tmp[2521213]))
          val ret_tmp[2060704]:string[26] "temp"
          ref tmp[2623160]:string[26] "temp"
          (2623164 'move' tmp[2623160](2623163 'set reference' ret_tmp[2060704]))
          wide-ref tmp[2623167]:string[26] "temp"
          (2623170 'move' tmp[2623167] tmp[2623160])
          (2060706 'virtual method call' message[167975] _virtual_method_tmp_[2060698] coerce_tmp[2521213] tmp[2623167])
          (2060711 'move' call_tmp[2060696] ret_tmp[2060704])
          val coerce_tmp[2279793]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2630583]:c_ptr(uint(8))[937612] "temp"
          (2279795 'move' tmp[2630583](2279797 '.v' call_tmp[2060696] buff[30740]))
          (2630586 'move' coerce_tmp[2279793] tmp[2630583])
          const-val coerce_tmp[2279800]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2630589]:int(64)[13] "temp"
          (2279802 'move' tmp[2630589](2279804 '.v' call_tmp[2060696] buffLen[30722]))
          (2630592 'move' coerce_tmp[2279800] tmp[2630589])
          const-val coerce_tmp[2279807]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2630595]:int(32)[95] "temp"
          (2279809 'move' tmp[2630595](2279811 '.v' call_tmp[2060696] locale_id[30757]))
          (2630598 'move' coerce_tmp[2279807] tmp[2630595])
          val coerce_tmp[2279814]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2630601]:c_ptr(uint(8))[937612] "temp"
          (2279816 'move' tmp[2630601](2279818 '.v' maxMsg[169092] buff[30740]))
          (2630604 'move' coerce_tmp[2279814] tmp[2630601])
          const-val coerce_tmp[2279821]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2630607]:int(64)[13] "temp"
          (2279823 'move' tmp[2630607](2279825 '.v' maxMsg[169092] buffLen[30722]))
          (2630610 'move' coerce_tmp[2279821] tmp[2630607])
          const-val coerce_tmp[2279828]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2630613]:int(32)[95] "temp"
          (2279830 'move' tmp[2630613](2279832 '.v' maxMsg[169092] locale_id[30757]))
          (2630616 'move' coerce_tmp[2279828] tmp[2630613])
          val ret[2279835]:int(64)[13] "dead after last mention" "RVV" "temp"
          const-val call_tmp[2279837]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2279839 'move' call_tmp[2279837](2279841 '==' coerce_tmp[2279807] chpl_nodeID[208207]))
          val tmp[2279844]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
          if call_tmp[2279837]
          {
            const-val call_tmp[2279848]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2279850 'move' call_tmp[2279848](2279852 '==' coerce_tmp[2279828] chpl_nodeID[208207]))
            (2279855 'move' tmp[2279844] call_tmp[2279848])
          }
          {
            (2279859 'move' tmp[2279844] 0)
          }
          if tmp[2279844]
          {
            val ret[2279865]:int(64)[13] "dead after last mention" "RVV" "temp"
            val tmp[2279867]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            const-val call_tmp[2279869]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2279871 'move' call_tmp[2279869](2279873 '<' coerce_tmp[2279800] coerce_tmp[2279821]))
            if call_tmp[2279869]
            {
              (2279878 'move' tmp[2279867] coerce_tmp[2279800])
            }
            {
              (2279882 'move' tmp[2279867] coerce_tmp[2279821])
            }
            const-val coerce_tmp[2279891]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (2279893 'move' coerce_tmp[2279891](2279895 'cast' c_void_ptr[149] coerce_tmp[2279793]))
            const-val coerce_tmp[2279898]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (2279900 'move' coerce_tmp[2279898](2279902 'cast' c_void_ptr[149] coerce_tmp[2279814]))
            const-val call_tmp[2279905]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2279907 'move' call_tmp[2279905](2279909 '<' tmp[2279867] 0))
            if call_tmp[2279905]
            {
              (2279915 call safeCastCheckHalt[210302] "casting int(64) less than 0 to uint(64)")
            }
            const-val call_tmp[2279918]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
            (2279920 'move' call_tmp[2279918](2279922 'cast' uint(64)[115] tmp[2279867]))
            const-val call_tmp[2279925]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
            (2279927 'move' call_tmp[2279925](2279930 call memcmp[1206651] coerce_tmp[2279891] coerce_tmp[2279898] call_tmp[2279918]))
            const-val call_tmp[2279934]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2279936 'move' call_tmp[2279934](2279938 'cast' int(64)[13] call_tmp[2279925]))
            const-val call_tmp[2279946]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2279948 'move' call_tmp[2279946](2279950 '==' call_tmp[2279934] 0))
            if call_tmp[2279946]
            {
              const-val call_tmp[2279955]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2279957 'move' call_tmp[2279955](2279959 '<' tmp[2279867] coerce_tmp[2279800]))
              if call_tmp[2279955]
              {
                (2279964 'move' ret[2279865] 1)
                gotoReturn _end__strcmp_local[2279989] _end__strcmp_local[2279989]
              }
              const-val call_tmp[2279970]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2279972 'move' call_tmp[2279970](2279974 '<' tmp[2279867] coerce_tmp[2279821]))
              if call_tmp[2279970]
              {
                (2279979 'move' ret[2279865] -1)
                gotoReturn _end__strcmp_local[2279989] _end__strcmp_local[2279989]
              }
            }
            (2279986 'move' ret[2279865] call_tmp[2279934])
            label _end__strcmp_local[2279989]
            (2279991 'move' ret[2279835] ret[2279865])
            gotoReturn _end__strcmp[2280575] _end__strcmp[2280575]
          }
          {
            const-val call_tmp[2279997]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2279999 'move' call_tmp[2279997](2280001 '!=' coerce_tmp[2279807] chpl_nodeID[208207]))
            val tmp[2280004]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            if call_tmp[2279997]
            {
              const-val call_tmp[2280008]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2280010 'move' call_tmp[2280008](2280012 '==' coerce_tmp[2279828] chpl_nodeID[208207]))
              (2280015 'move' tmp[2280004] call_tmp[2280008])
            }
            {
              (2280019 'move' tmp[2280004] 0)
            }
            if tmp[2280004]
            {
              val call_tmp[2280025]:c_ptr(uint(8))[937612] "dead at end of block" "maybe param" "temp"
              const-val coerce_tmp[2280027]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2280029 'move' coerce_tmp[2280027](2280031 'cast' int(64)[13] coerce_tmp[2279807]))
              (2280034 'move' call_tmp[2280025](2280037 call bufferCopyRemote[172830] coerce_tmp[2280027] coerce_tmp[2279793] coerce_tmp[2279800]))
              val ret[2280046]:int(64)[13] "dead after last mention" "RVV" "temp"
              val tmp[2280048]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              const-val call_tmp[2280050]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2280052 'move' call_tmp[2280050](2280054 '<' coerce_tmp[2279800] coerce_tmp[2279821]))
              if call_tmp[2280050]
              {
                (2280059 'move' tmp[2280048] coerce_tmp[2279800])
              }
              {
                (2280063 'move' tmp[2280048] coerce_tmp[2279821])
              }
              const-val coerce_tmp[2280072]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2280074 'move' coerce_tmp[2280072](2280076 'cast' c_void_ptr[149] call_tmp[2280025]))
              const-val coerce_tmp[2280079]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2280081 'move' coerce_tmp[2280079](2280083 'cast' c_void_ptr[149] coerce_tmp[2279814]))
              const-val call_tmp[2280086]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2280088 'move' call_tmp[2280086](2280090 '<' tmp[2280048] 0))
              if call_tmp[2280086]
              {
                (2280096 call safeCastCheckHalt[210302] "casting int(64) less than 0 to uint(64)")
              }
              const-val call_tmp[2280099]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
              (2280101 'move' call_tmp[2280099](2280103 'cast' uint(64)[115] tmp[2280048]))
              const-val call_tmp[2280106]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
              (2280108 'move' call_tmp[2280106](2280111 call memcmp[1206651] coerce_tmp[2280072] coerce_tmp[2280079] call_tmp[2280099]))
              const-val call_tmp[2280115]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (2280117 'move' call_tmp[2280115](2280119 'cast' int(64)[13] call_tmp[2280106]))
              const-val call_tmp[2280127]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2280129 'move' call_tmp[2280127](2280131 '==' call_tmp[2280115] 0))
              if call_tmp[2280127]
              {
                const-val call_tmp[2280136]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2280138 'move' call_tmp[2280136](2280140 '<' tmp[2280048] coerce_tmp[2279800]))
                if call_tmp[2280136]
                {
                  (2280145 'move' ret[2280046] 1)
                  gotoReturn _end__strcmp_local[2280170] _end__strcmp_local[2280170]
                }
                const-val call_tmp[2280151]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2280153 'move' call_tmp[2280151](2280155 '<' tmp[2280048] coerce_tmp[2279821]))
                if call_tmp[2280151]
                {
                  (2280160 'move' ret[2280046] -1)
                  gotoReturn _end__strcmp_local[2280170] _end__strcmp_local[2280170]
                }
              }
              (2280167 'move' ret[2280046] call_tmp[2280115])
              label _end__strcmp_local[2280170]
              const-val coerce_tmp[2280172]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2280174 'move' coerce_tmp[2280172](2280176 'cast' c_void_ptr[149] call_tmp[2280025]))
              (2280180 call chpl_here_free[188127] coerce_tmp[2280172])
              (2280182 'move' ret[2279835] ret[2280046])
              gotoReturn _end__strcmp[2280575] _end__strcmp[2280575]
            }
            {
              const-val call_tmp[2280188]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2280190 'move' call_tmp[2280188](2280192 '==' coerce_tmp[2279807] chpl_nodeID[208207]))
              val tmp[2280195]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              if call_tmp[2280188]
              {
                const-val call_tmp[2280199]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2280201 'move' call_tmp[2280199](2280203 '!=' coerce_tmp[2279828] chpl_nodeID[208207]))
                (2280206 'move' tmp[2280195] call_tmp[2280199])
              }
              {
                (2280210 'move' tmp[2280195] 0)
              }
              if tmp[2280195]
              {
                val call_tmp[2280216]:c_ptr(uint(8))[937612] "dead at end of block" "maybe param" "temp"
                const-val coerce_tmp[2280218]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2280220 'move' coerce_tmp[2280218](2280222 'cast' int(64)[13] coerce_tmp[2279828]))
                (2280225 'move' call_tmp[2280216](2280228 call bufferCopyRemote[172830] coerce_tmp[2280218] coerce_tmp[2279814] coerce_tmp[2279821]))
                val ret[2280237]:int(64)[13] "dead after last mention" "RVV" "temp"
                val tmp[2280239]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val call_tmp[2280241]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2280243 'move' call_tmp[2280241](2280245 '<' coerce_tmp[2279800] coerce_tmp[2279821]))
                if call_tmp[2280241]
                {
                  (2280250 'move' tmp[2280239] coerce_tmp[2279800])
                }
                {
                  (2280254 'move' tmp[2280239] coerce_tmp[2279821])
                }
                const-val coerce_tmp[2280263]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2280265 'move' coerce_tmp[2280263](2280267 'cast' c_void_ptr[149] coerce_tmp[2279793]))
                const-val coerce_tmp[2280270]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2280272 'move' coerce_tmp[2280270](2280274 'cast' c_void_ptr[149] call_tmp[2280216]))
                const-val call_tmp[2280277]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2280279 'move' call_tmp[2280277](2280281 '<' tmp[2280239] 0))
                if call_tmp[2280277]
                {
                  (2280287 call safeCastCheckHalt[210302] "casting int(64) less than 0 to uint(64)")
                }
                const-val call_tmp[2280290]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
                (2280292 'move' call_tmp[2280290](2280294 'cast' uint(64)[115] tmp[2280239]))
                const-val call_tmp[2280297]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (2280299 'move' call_tmp[2280297](2280302 call memcmp[1206651] coerce_tmp[2280263] coerce_tmp[2280270] call_tmp[2280290]))
                const-val call_tmp[2280306]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (2280308 'move' call_tmp[2280306](2280310 'cast' int(64)[13] call_tmp[2280297]))
                const-val call_tmp[2280318]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2280320 'move' call_tmp[2280318](2280322 '==' call_tmp[2280306] 0))
                if call_tmp[2280318]
                {
                  const-val call_tmp[2280327]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2280329 'move' call_tmp[2280327](2280331 '<' tmp[2280239] coerce_tmp[2279800]))
                  if call_tmp[2280327]
                  {
                    (2280336 'move' ret[2280237] 1)
                    gotoReturn _end__strcmp_local[2280361] _end__strcmp_local[2280361]
                  }
                  const-val call_tmp[2280342]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2280344 'move' call_tmp[2280342](2280346 '<' tmp[2280239] coerce_tmp[2279821]))
                  if call_tmp[2280342]
                  {
                    (2280351 'move' ret[2280237] -1)
                    gotoReturn _end__strcmp_local[2280361] _end__strcmp_local[2280361]
                  }
                }
                (2280358 'move' ret[2280237] call_tmp[2280306])
                label _end__strcmp_local[2280361]
                const-val coerce_tmp[2280363]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (2280365 'move' coerce_tmp[2280363](2280367 'cast' c_void_ptr[149] call_tmp[2280216]))
                (2280371 call chpl_here_free[188127] coerce_tmp[2280363])
                (2280373 'move' ret[2279835] ret[2280237])
                gotoReturn _end__strcmp[2280575] _end__strcmp[2280575]
              }
              {
                val call_tmp[2280379]:c_ptr(uint(8))[937612] "dead at end of block" "maybe param" "temp"
                const-val coerce_tmp[2280381]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2280383 'move' coerce_tmp[2280381](2280385 'cast' int(64)[13] coerce_tmp[2279807]))
                (2280388 'move' call_tmp[2280379](2280391 call bufferCopyRemote[172830] coerce_tmp[2280381] coerce_tmp[2279793] coerce_tmp[2279800]))
                val call_tmp[2280400]:c_ptr(uint(8))[937612] "dead at end of block" "maybe param" "temp"
                const-val coerce_tmp[2280402]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2280404 'move' coerce_tmp[2280402](2280406 'cast' int(64)[13] coerce_tmp[2279828]))
                (2280409 'move' call_tmp[2280400](2280412 call bufferCopyRemote[172830] coerce_tmp[2280402] coerce_tmp[2279814] coerce_tmp[2279821]))
                val ret[2280421]:int(64)[13] "dead after last mention" "RVV" "temp"
                val tmp[2280423]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val call_tmp[2280425]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2280427 'move' call_tmp[2280425](2280429 '<' coerce_tmp[2279800] coerce_tmp[2279821]))
                if call_tmp[2280425]
                {
                  (2280434 'move' tmp[2280423] coerce_tmp[2279800])
                }
                {
                  (2280438 'move' tmp[2280423] coerce_tmp[2279821])
                }
                const-val coerce_tmp[2280447]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2280449 'move' coerce_tmp[2280447](2280451 'cast' c_void_ptr[149] call_tmp[2280379]))
                const-val coerce_tmp[2280454]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2280456 'move' coerce_tmp[2280454](2280458 'cast' c_void_ptr[149] call_tmp[2280400]))
                const-val call_tmp[2280461]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2280463 'move' call_tmp[2280461](2280465 '<' tmp[2280423] 0))
                if call_tmp[2280461]
                {
                  (2280471 call safeCastCheckHalt[210302] "casting int(64) less than 0 to uint(64)")
                }
                const-val call_tmp[2280474]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
                (2280476 'move' call_tmp[2280474](2280478 'cast' uint(64)[115] tmp[2280423]))
                const-val call_tmp[2280481]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (2280483 'move' call_tmp[2280481](2280486 call memcmp[1206651] coerce_tmp[2280447] coerce_tmp[2280454] call_tmp[2280474]))
                const-val call_tmp[2280490]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (2280492 'move' call_tmp[2280490](2280494 'cast' int(64)[13] call_tmp[2280481]))
                const-val call_tmp[2280502]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2280504 'move' call_tmp[2280502](2280506 '==' call_tmp[2280490] 0))
                if call_tmp[2280502]
                {
                  const-val call_tmp[2280511]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2280513 'move' call_tmp[2280511](2280515 '<' tmp[2280423] coerce_tmp[2279800]))
                  if call_tmp[2280511]
                  {
                    (2280520 'move' ret[2280421] 1)
                    gotoReturn _end__strcmp_local[2280545] _end__strcmp_local[2280545]
                  }
                  const-val call_tmp[2280526]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2280528 'move' call_tmp[2280526](2280530 '<' tmp[2280423] coerce_tmp[2279821]))
                  if call_tmp[2280526]
                  {
                    (2280535 'move' ret[2280421] -1)
                    gotoReturn _end__strcmp_local[2280545] _end__strcmp_local[2280545]
                  }
                }
                (2280542 'move' ret[2280421] call_tmp[2280490])
                label _end__strcmp_local[2280545]
                const-val coerce_tmp[2280547]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (2280549 'move' coerce_tmp[2280547](2280551 'cast' c_void_ptr[149] call_tmp[2280379]))
                (2280555 call chpl_here_free[188127] coerce_tmp[2280547])
                const-val coerce_tmp[2280557]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (2280559 'move' coerce_tmp[2280557](2280561 'cast' c_void_ptr[149] call_tmp[2280400]))
                (2280565 call chpl_here_free[188127] coerce_tmp[2280557])
                (2280567 'move' ret[2279835] ret[2280421])
                gotoReturn _end__strcmp[2280575] _end__strcmp[2280575]
              }
            }
          }
          label _end__strcmp[2280575]
          const-val call_tmp[2280577]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2280579 'move' call_tmp[2280577](2280581 '>' ret[2279835] 0))
          (2060725 'move' tmp[2060676] call_tmp[2280577])
          ref i_x[2250701]:string[26] "temp"
          (2250705 'move' i_x[2250701](2250703 'set reference' call_tmp[2060696]))
          wide-ref tmp[2628565]:string[26] "temp"
          (2628568 'move' tmp[2628565] i_x[2250701])
          (2250709 call deinit[30834] tmp[2628565])
        }
        if tmp[2060676]
        {
          const-val call_tmp[2060739]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val _virtual_method_tmp_[2060741]:int(32)[95] "temp"
          (2060743 'move' _virtual_method_tmp_[2060741](2060745 'getcid' coerce_tmp[2521213]))
          val ret_tmp[2060747]:string[26] "temp"
          ref tmp[2623173]:string[26] "temp"
          (2623177 'move' tmp[2623173](2623176 'set reference' ret_tmp[2060747]))
          wide-ref tmp[2623180]:string[26] "temp"
          (2623183 'move' tmp[2623180] tmp[2623173])
          (2060749 'virtual method call' message[167975] _virtual_method_tmp_[2060741] coerce_tmp[2521213] tmp[2623180])
          (2060754 'move' call_tmp[2060739] ret_tmp[2060747])
          wide-ref tmp[2623186]:string[26] "temp"
          (2623190 'move' tmp[2623186](2623188 'set reference' maxMsg[169092]))
          (2060758 call =[38272] tmp[2623186] call_tmp[2060739])
          ref i_x[2250713]:string[26] "temp"
          (2250717 'move' i_x[2250713](2250715 'set reference' call_tmp[2060739]))
          wide-ref tmp[2628571]:string[26] "temp"
          (2628574 'move' tmp[2628571] i_x[2250713])
          (2250721 call deinit[30834] tmp[2628571])
        }
        ref i_lhs[2296496]:int(64)[13] "temp"
        (2296500 'move' i_lhs[2296496](2296498 'set reference' n[169081]))
        (2296508 '+=' i_lhs[2296496] 1)
      }
      {
        (2060369 '=' i[2060297] tmp_x0[2549907])
      }
      {
        (2060380 '<=' i[2060297] _ic__F1_high[2543487])
      }
      {
        (2060386 '+=' i[2060297] 1)
      }
    }
    label _endchpl_direct_param_stride_range_iter[2060423]
    label _endchpl_direct_counted_range_iter_helper[2060431]
    label _endchpl_direct_counted_range_iter[1989434]
    label _endthese[1989439]
    const-val _ic__F0_this[2535448]:__wide_TaskErrors[2581446] "temp"
    (2296975 'move' _ic__F0_this[2535448] this[169728])
    const-val this[1989991]:__wide_TaskErrors[2581446] "temp"
    (1989996 'move' this[1989991] this[169728])
    const-val coerce_tmp[1989703]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val tmp[2622010]:int(64)[13] "temp"
    (1989705 'move' tmp[2622010](2564260 '.v' this[1989991] nErrors[168363]))
    (2622013 'move' coerce_tmp[1989703] tmp[2622010])
    const-val call_tmp[2230868]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2230870 'move' call_tmp[2230868](2230872 '<' coerce_tmp[1989703] 0))
    if call_tmp[2230868]
    {
      (2060861 call boundsCheckHalt[210254] "With a negative count, the range must have a last index.")
    }
    val tmp_x0[2550015]:int(64)[13] "temp"
    val tmp_x1[2550017]:int(64)[13] "temp"
    const-val call_tmp[2235041]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2235043 'move' call_tmp[2235041](2235045 '==' coerce_tmp[1989703] 0))
    if call_tmp[2235041]
    {
      const-val call_tmp[2231808]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2231810 'move' call_tmp[2231808](2231812 'cast' uint(64)[115] 0))
      const-val call_tmp[2302394]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2302396 'move' call_tmp[2302394](2302398 '-' call_tmp[2231808] 1))
      const-val call_tmp[2302824]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2302826 'move' call_tmp[2302824](2302828 'cast' int(64)[13] call_tmp[2302394]))
      (2550023 'move' tmp_x0[2550015] 0)
      (2550028 'move' tmp_x1[2550017] call_tmp[2302824])
    }
    {
      const-val call_tmp[2261814]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2261816 'move' call_tmp[2261814](2261818 '-' coerce_tmp[1989703] 1))
      const-val call_tmp[2242546]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2242548 'move' call_tmp[2242546](2242550 '+' 0 call_tmp[2261814]))
      (2550033 'move' tmp_x0[2550015] 0)
      (2550038 'move' tmp_x1[2550017] call_tmp[2242546])
    }
    (2060970 'noop')
    (2060990 'noop')
    (2061009 'noop')
    const-val _ic__F1_high[2543506]:int(64)[13] "temp"
    (2308264 'move' _ic__F1_high[2543506] tmp_x1[2550017])
    val i[2061038]:int(64)[13] "dead at end of block" "insert auto destroy"
    (2061042 'move' i[2061038] 0)
    (2061094 call chpl_checkIfRangeIterWillOverflow[1096265] tmp_x0[2550015] tmp_x1[2550017] 1 tmp_x0[2550015] tmp_x1[2550017] 1)
    const-val this[2061203]:__wide_TaskErrors[2581446] "temp"
    (2061205 'move' this[2061203] _ic__F0_this[2535448])
    val coerce_tmp[2061215]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2623193]:c_ptr(owned Error?)[1235804] "temp"
    (2061217 'move' tmp[2623193](2564268 '.v' this[2061203] errorsArray[168374]))
    (2623196 'move' coerce_tmp[2061215] tmp[2623193])
    CForLoop[2061101] hazard
    {
      ref call_tmp[2310229]:owned Error?[966602] "dead after last mention" "maybe param" "temp"
      (2310231 'move' call_tmp[2310229](2310233 'array_get' coerce_tmp[2061215] i[2061038]))
      val coerce_tmp[2061229]:__wide_Error[2581418] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2061231 'move' coerce_tmp[2061229](2061234 call borrow[1236017] call_tmp[2310229]))
      val coerce_tmp[2061236]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2061238 'move' coerce_tmp[2061236](2061240 'cast' object[22] coerce_tmp[2061229]))
      const-val call_tmp[2228167]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2626783]:__wide_object[2581313] "temp"
      (2626786 'move' tmp[2626783] nil[44])
      (2228169 'move' call_tmp[2228167](2228171 'ptr_neq' coerce_tmp[2061236] tmp[2626783]))
      if call_tmp[2228167]
      {
        const-val this[2061262]:__wide_TaskErrors[2581446] "temp"
        (2061264 'move' this[2061262] _ic__F0_this[2535448])
        val coerce_tmp[2061274]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        val tmp[2623199]:c_ptr(owned Error?)[1235804] "temp"
        (2061276 'move' tmp[2623199](2564274 '.v' this[2061262] errorsArray[168374]))
        (2623202 'move' coerce_tmp[2061274] tmp[2623199])
        ref call_tmp[2310239]:owned Error?[966602] "dead after last mention" "maybe param" "temp"
        (2310241 'move' call_tmp[2310239](2310243 'array_get' coerce_tmp[2061274] i[2061038]))
        val coerce_tmp[2521223]:__wide_Error[2581418] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2521225 'move' coerce_tmp[2521223](2521227 '.v' call_tmp[2310239] chpl_p[966597]))
        val coerce_tmp[2521230]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2521232 'move' coerce_tmp[2521230](2521234 'cast' object[22] coerce_tmp[2521223]))
        const-val call_tmp[2521237]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        val tmp[2647108]:__wide_object[2581313] "temp"
        (2647111 'move' tmp[2647108] nil[44])
        (2521239 'move' call_tmp[2521237](2521241 'ptr_eq' coerce_tmp[2521230] tmp[2647108]))
        if call_tmp[2521237]
        {
          (2521247 call nilCheckHalt[210238] "argument to ! is nil")
        }
        val coerce_tmp[2521250]:__wide_Error[2581418] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2521252 'move' coerce_tmp[2521250](2521254 '.v' call_tmp[2310239] chpl_p[966597]))
        const-val call_tmp[2061312]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        val _virtual_method_tmp_[2061314]:int(32)[95] "temp"
        (2061316 'move' _virtual_method_tmp_[2061314](2061318 'getcid' coerce_tmp[2521250]))
        val ret_tmp[2061320]:string[26] "temp"
        ref tmp[2623205]:string[26] "temp"
        (2623209 'move' tmp[2623205](2623208 'set reference' ret_tmp[2061320]))
        wide-ref tmp[2623212]:string[26] "temp"
        (2623215 'move' tmp[2623212] tmp[2623205])
        (2061322 'virtual method call' message[167975] _virtual_method_tmp_[2061314] coerce_tmp[2521250] tmp[2623212])
        (2061327 'move' call_tmp[2061312] ret_tmp[2061320])
        const-val call_tmp[2061330]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2061332 'move' call_tmp[2061330](2061335 call ==[38823] call_tmp[2061312] minMsg[169087]))
        if call_tmp[2061330]
        {
          val coerce_tmp[2061347]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2061349 'move' coerce_tmp[2061347](2061351 'cast' object[22] first[169099]))
          const-val call_tmp[2226807]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val tmp[2626441]:__wide_object[2581313] "temp"
          (2626444 'move' tmp[2626441] nil[44])
          (2226809 'move' call_tmp[2226807](2226811 'ptr_eq' coerce_tmp[2061347] tmp[2626441]))
          if call_tmp[2226807]
          {
            (2406751 '=' first[169099] coerce_tmp[2521250])
          }
          (2406763 '=' last[169106] coerce_tmp[2521250])
        }
        ref i_x[2250725]:string[26] "temp"
        (2250729 'move' i_x[2250725](2250727 'set reference' call_tmp[2061312]))
        wide-ref tmp[2628577]:string[26] "temp"
        (2628580 'move' tmp[2628577] i_x[2250725])
        (2250733 call deinit[30834] tmp[2628577])
      }
      {
        (2061110 '=' i[2061038] tmp_x0[2550015])
      }
      {
        (2061121 '<=' i[2061038] _ic__F1_high[2543506])
      }
      {
        (2061127 '+=' i[2061038] 1)
      }
    }
    label _endchpl_direct_param_stride_range_iter[2061164]
    label _endchpl_direct_counted_range_iter_helper[2061172]
    label _endchpl_direct_counted_range_iter[1989879]
    label _endthese[1989884]
    val coerce_tmp[2276503]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2630511]:c_ptr(uint(8))[937612] "temp"
    (2276505 'move' tmp[2630511](2276507 '.v' minMsg[169087] buff[30740]))
    (2630514 'move' coerce_tmp[2276503] tmp[2630511])
    const-val coerce_tmp[2276510]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2630517]:int(64)[13] "temp"
    (2276512 'move' tmp[2630517](2276514 '.v' minMsg[169087] buffLen[30722]))
    (2630520 'move' coerce_tmp[2276510] tmp[2630517])
    const-val coerce_tmp[2276517]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2630523]:int(32)[95] "temp"
    (2276519 'move' tmp[2630523](2276521 '.v' minMsg[169087] locale_id[30757]))
    (2630526 'move' coerce_tmp[2276517] tmp[2630523])
    val coerce_tmp[2276524]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2630529]:c_ptr(uint(8))[937612] "temp"
    (2276526 'move' tmp[2630529](2276528 '.v' maxMsg[169092] buff[30740]))
    (2630532 'move' coerce_tmp[2276524] tmp[2630529])
    const-val coerce_tmp[2276531]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2630535]:int(64)[13] "temp"
    (2276533 'move' tmp[2630535](2276535 '.v' maxMsg[169092] buffLen[30722]))
    (2630538 'move' coerce_tmp[2276531] tmp[2630535])
    const-val coerce_tmp[2276538]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2630541]:int(32)[95] "temp"
    (2276540 'move' tmp[2630541](2276542 '.v' maxMsg[169092] locale_id[30757]))
    (2630544 'move' coerce_tmp[2276538] tmp[2630541])
    val ret[2276545]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2276547]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2276549 'move' call_tmp[2276547](2276551 '==' coerce_tmp[2276517] chpl_nodeID[208207]))
    val tmp[2276554]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2276547]
    {
      const-val call_tmp[2276558]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2276560 'move' call_tmp[2276558](2276562 '==' coerce_tmp[2276538] chpl_nodeID[208207]))
      (2276565 'move' tmp[2276554] call_tmp[2276558])
    }
    {
      (2276569 'move' tmp[2276554] 0)
    }
    if tmp[2276554]
    {
      val ret[2276575]:int(64)[13] "dead after last mention" "RVV" "temp"
      val tmp[2276577]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val call_tmp[2276579]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2276581 'move' call_tmp[2276579](2276583 '<' coerce_tmp[2276510] coerce_tmp[2276531]))
      if call_tmp[2276579]
      {
        (2276588 'move' tmp[2276577] coerce_tmp[2276510])
      }
      {
        (2276592 'move' tmp[2276577] coerce_tmp[2276531])
      }
      const-val coerce_tmp[2276601]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2276603 'move' coerce_tmp[2276601](2276605 'cast' c_void_ptr[149] coerce_tmp[2276503]))
      const-val coerce_tmp[2276608]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2276610 'move' coerce_tmp[2276608](2276612 'cast' c_void_ptr[149] coerce_tmp[2276524]))
      const-val call_tmp[2276615]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2276617 'move' call_tmp[2276615](2276619 '<' tmp[2276577] 0))
      if call_tmp[2276615]
      {
        (2276625 call safeCastCheckHalt[210302] "casting int(64) less than 0 to uint(64)")
      }
      const-val call_tmp[2276628]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2276630 'move' call_tmp[2276628](2276632 'cast' uint(64)[115] tmp[2276577]))
      const-val call_tmp[2276635]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2276637 'move' call_tmp[2276635](2276640 call memcmp[1206651] coerce_tmp[2276601] coerce_tmp[2276608] call_tmp[2276628]))
      const-val call_tmp[2276644]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2276646 'move' call_tmp[2276644](2276648 'cast' int(64)[13] call_tmp[2276635]))
      const-val call_tmp[2276656]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2276658 'move' call_tmp[2276656](2276660 '==' call_tmp[2276644] 0))
      if call_tmp[2276656]
      {
        const-val call_tmp[2276665]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2276667 'move' call_tmp[2276665](2276669 '<' tmp[2276577] coerce_tmp[2276510]))
        if call_tmp[2276665]
        {
          (2276674 'move' ret[2276575] 1)
          gotoReturn _end__strcmp_local[2276699] _end__strcmp_local[2276699]
        }
        const-val call_tmp[2276680]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2276682 'move' call_tmp[2276680](2276684 '<' tmp[2276577] coerce_tmp[2276531]))
        if call_tmp[2276680]
        {
          (2276689 'move' ret[2276575] -1)
          gotoReturn _end__strcmp_local[2276699] _end__strcmp_local[2276699]
        }
      }
      (2276696 'move' ret[2276575] call_tmp[2276644])
      label _end__strcmp_local[2276699]
      (2276701 'move' ret[2276545] ret[2276575])
      gotoReturn _end__strcmp[2277285] _end__strcmp[2277285]
    }
    {
      const-val call_tmp[2276707]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2276709 'move' call_tmp[2276707](2276711 '!=' coerce_tmp[2276517] chpl_nodeID[208207]))
      val tmp[2276714]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if call_tmp[2276707]
      {
        const-val call_tmp[2276718]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2276720 'move' call_tmp[2276718](2276722 '==' coerce_tmp[2276538] chpl_nodeID[208207]))
        (2276725 'move' tmp[2276714] call_tmp[2276718])
      }
      {
        (2276729 'move' tmp[2276714] 0)
      }
      if tmp[2276714]
      {
        val call_tmp[2276735]:c_ptr(uint(8))[937612] "dead at end of block" "maybe param" "temp"
        const-val coerce_tmp[2276737]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (2276739 'move' coerce_tmp[2276737](2276741 'cast' int(64)[13] coerce_tmp[2276517]))
        (2276744 'move' call_tmp[2276735](2276747 call bufferCopyRemote[172830] coerce_tmp[2276737] coerce_tmp[2276503] coerce_tmp[2276510]))
        val ret[2276756]:int(64)[13] "dead after last mention" "RVV" "temp"
        val tmp[2276758]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        const-val call_tmp[2276760]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2276762 'move' call_tmp[2276760](2276764 '<' coerce_tmp[2276510] coerce_tmp[2276531]))
        if call_tmp[2276760]
        {
          (2276769 'move' tmp[2276758] coerce_tmp[2276510])
        }
        {
          (2276773 'move' tmp[2276758] coerce_tmp[2276531])
        }
        const-val coerce_tmp[2276782]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (2276784 'move' coerce_tmp[2276782](2276786 'cast' c_void_ptr[149] call_tmp[2276735]))
        const-val coerce_tmp[2276789]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (2276791 'move' coerce_tmp[2276789](2276793 'cast' c_void_ptr[149] coerce_tmp[2276524]))
        const-val call_tmp[2276796]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2276798 'move' call_tmp[2276796](2276800 '<' tmp[2276758] 0))
        if call_tmp[2276796]
        {
          (2276806 call safeCastCheckHalt[210302] "casting int(64) less than 0 to uint(64)")
        }
        const-val call_tmp[2276809]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (2276811 'move' call_tmp[2276809](2276813 'cast' uint(64)[115] tmp[2276758]))
        const-val call_tmp[2276816]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
        (2276818 'move' call_tmp[2276816](2276821 call memcmp[1206651] coerce_tmp[2276782] coerce_tmp[2276789] call_tmp[2276809]))
        const-val call_tmp[2276825]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2276827 'move' call_tmp[2276825](2276829 'cast' int(64)[13] call_tmp[2276816]))
        const-val call_tmp[2276837]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2276839 'move' call_tmp[2276837](2276841 '==' call_tmp[2276825] 0))
        if call_tmp[2276837]
        {
          const-val call_tmp[2276846]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2276848 'move' call_tmp[2276846](2276850 '<' tmp[2276758] coerce_tmp[2276510]))
          if call_tmp[2276846]
          {
            (2276855 'move' ret[2276756] 1)
            gotoReturn _end__strcmp_local[2276880] _end__strcmp_local[2276880]
          }
          const-val call_tmp[2276861]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2276863 'move' call_tmp[2276861](2276865 '<' tmp[2276758] coerce_tmp[2276531]))
          if call_tmp[2276861]
          {
            (2276870 'move' ret[2276756] -1)
            gotoReturn _end__strcmp_local[2276880] _end__strcmp_local[2276880]
          }
        }
        (2276877 'move' ret[2276756] call_tmp[2276825])
        label _end__strcmp_local[2276880]
        const-val coerce_tmp[2276882]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2276884 'move' coerce_tmp[2276882](2276886 'cast' c_void_ptr[149] call_tmp[2276735]))
        (2276890 call chpl_here_free[188127] coerce_tmp[2276882])
        (2276892 'move' ret[2276545] ret[2276756])
        gotoReturn _end__strcmp[2277285] _end__strcmp[2277285]
      }
      {
        const-val call_tmp[2276898]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2276900 'move' call_tmp[2276898](2276902 '==' coerce_tmp[2276517] chpl_nodeID[208207]))
        val tmp[2276905]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        if call_tmp[2276898]
        {
          const-val call_tmp[2276909]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2276911 'move' call_tmp[2276909](2276913 '!=' coerce_tmp[2276538] chpl_nodeID[208207]))
          (2276916 'move' tmp[2276905] call_tmp[2276909])
        }
        {
          (2276920 'move' tmp[2276905] 0)
        }
        if tmp[2276905]
        {
          val call_tmp[2276926]:c_ptr(uint(8))[937612] "dead at end of block" "maybe param" "temp"
          const-val coerce_tmp[2276928]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2276930 'move' coerce_tmp[2276928](2276932 'cast' int(64)[13] coerce_tmp[2276538]))
          (2276935 'move' call_tmp[2276926](2276938 call bufferCopyRemote[172830] coerce_tmp[2276928] coerce_tmp[2276524] coerce_tmp[2276531]))
          val ret[2276947]:int(64)[13] "dead after last mention" "RVV" "temp"
          val tmp[2276949]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
          const-val call_tmp[2276951]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2276953 'move' call_tmp[2276951](2276955 '<' coerce_tmp[2276510] coerce_tmp[2276531]))
          if call_tmp[2276951]
          {
            (2276960 'move' tmp[2276949] coerce_tmp[2276510])
          }
          {
            (2276964 'move' tmp[2276949] coerce_tmp[2276531])
          }
          const-val coerce_tmp[2276973]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2276975 'move' coerce_tmp[2276973](2276977 'cast' c_void_ptr[149] coerce_tmp[2276503]))
          const-val coerce_tmp[2276980]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2276982 'move' coerce_tmp[2276980](2276984 'cast' c_void_ptr[149] call_tmp[2276926]))
          const-val call_tmp[2276987]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2276989 'move' call_tmp[2276987](2276991 '<' tmp[2276949] 0))
          if call_tmp[2276987]
          {
            (2276997 call safeCastCheckHalt[210302] "casting int(64) less than 0 to uint(64)")
          }
          const-val call_tmp[2277000]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2277002 'move' call_tmp[2277000](2277004 'cast' uint(64)[115] tmp[2276949]))
          const-val call_tmp[2277007]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
          (2277009 'move' call_tmp[2277007](2277012 call memcmp[1206651] coerce_tmp[2276973] coerce_tmp[2276980] call_tmp[2277000]))
          const-val call_tmp[2277016]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2277018 'move' call_tmp[2277016](2277020 'cast' int(64)[13] call_tmp[2277007]))
          const-val call_tmp[2277028]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2277030 'move' call_tmp[2277028](2277032 '==' call_tmp[2277016] 0))
          if call_tmp[2277028]
          {
            const-val call_tmp[2277037]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2277039 'move' call_tmp[2277037](2277041 '<' tmp[2276949] coerce_tmp[2276510]))
            if call_tmp[2277037]
            {
              (2277046 'move' ret[2276947] 1)
              gotoReturn _end__strcmp_local[2277071] _end__strcmp_local[2277071]
            }
            const-val call_tmp[2277052]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2277054 'move' call_tmp[2277052](2277056 '<' tmp[2276949] coerce_tmp[2276531]))
            if call_tmp[2277052]
            {
              (2277061 'move' ret[2276947] -1)
              gotoReturn _end__strcmp_local[2277071] _end__strcmp_local[2277071]
            }
          }
          (2277068 'move' ret[2276947] call_tmp[2277016])
          label _end__strcmp_local[2277071]
          const-val coerce_tmp[2277073]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2277075 'move' coerce_tmp[2277073](2277077 'cast' c_void_ptr[149] call_tmp[2276926]))
          (2277081 call chpl_here_free[188127] coerce_tmp[2277073])
          (2277083 'move' ret[2276545] ret[2276947])
          gotoReturn _end__strcmp[2277285] _end__strcmp[2277285]
        }
        {
          val call_tmp[2277089]:c_ptr(uint(8))[937612] "dead at end of block" "maybe param" "temp"
          const-val coerce_tmp[2277091]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2277093 'move' coerce_tmp[2277091](2277095 'cast' int(64)[13] coerce_tmp[2276517]))
          (2277098 'move' call_tmp[2277089](2277101 call bufferCopyRemote[172830] coerce_tmp[2277091] coerce_tmp[2276503] coerce_tmp[2276510]))
          val call_tmp[2277110]:c_ptr(uint(8))[937612] "dead at end of block" "maybe param" "temp"
          const-val coerce_tmp[2277112]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2277114 'move' coerce_tmp[2277112](2277116 'cast' int(64)[13] coerce_tmp[2276538]))
          (2277119 'move' call_tmp[2277110](2277122 call bufferCopyRemote[172830] coerce_tmp[2277112] coerce_tmp[2276524] coerce_tmp[2276531]))
          val ret[2277131]:int(64)[13] "dead after last mention" "RVV" "temp"
          val tmp[2277133]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
          const-val call_tmp[2277135]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2277137 'move' call_tmp[2277135](2277139 '<' coerce_tmp[2276510] coerce_tmp[2276531]))
          if call_tmp[2277135]
          {
            (2277144 'move' tmp[2277133] coerce_tmp[2276510])
          }
          {
            (2277148 'move' tmp[2277133] coerce_tmp[2276531])
          }
          const-val coerce_tmp[2277157]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2277159 'move' coerce_tmp[2277157](2277161 'cast' c_void_ptr[149] call_tmp[2277089]))
          const-val coerce_tmp[2277164]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2277166 'move' coerce_tmp[2277164](2277168 'cast' c_void_ptr[149] call_tmp[2277110]))
          const-val call_tmp[2277171]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2277173 'move' call_tmp[2277171](2277175 '<' tmp[2277133] 0))
          if call_tmp[2277171]
          {
            (2277181 call safeCastCheckHalt[210302] "casting int(64) less than 0 to uint(64)")
          }
          const-val call_tmp[2277184]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2277186 'move' call_tmp[2277184](2277188 'cast' uint(64)[115] tmp[2277133]))
          const-val call_tmp[2277191]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
          (2277193 'move' call_tmp[2277191](2277196 call memcmp[1206651] coerce_tmp[2277157] coerce_tmp[2277164] call_tmp[2277184]))
          const-val call_tmp[2277200]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2277202 'move' call_tmp[2277200](2277204 'cast' int(64)[13] call_tmp[2277191]))
          const-val call_tmp[2277212]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2277214 'move' call_tmp[2277212](2277216 '==' call_tmp[2277200] 0))
          if call_tmp[2277212]
          {
            const-val call_tmp[2277221]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2277223 'move' call_tmp[2277221](2277225 '<' tmp[2277133] coerce_tmp[2276510]))
            if call_tmp[2277221]
            {
              (2277230 'move' ret[2277131] 1)
              gotoReturn _end__strcmp_local[2277255] _end__strcmp_local[2277255]
            }
            const-val call_tmp[2277236]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2277238 'move' call_tmp[2277236](2277240 '<' tmp[2277133] coerce_tmp[2276531]))
            if call_tmp[2277236]
            {
              (2277245 'move' ret[2277131] -1)
              gotoReturn _end__strcmp_local[2277255] _end__strcmp_local[2277255]
            }
          }
          (2277252 'move' ret[2277131] call_tmp[2277200])
          label _end__strcmp_local[2277255]
          const-val coerce_tmp[2277257]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2277259 'move' coerce_tmp[2277257](2277261 'cast' c_void_ptr[149] call_tmp[2277089]))
          (2277265 call chpl_here_free[188127] coerce_tmp[2277257])
          const-val coerce_tmp[2277267]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2277269 'move' coerce_tmp[2277267](2277271 'cast' c_void_ptr[149] call_tmp[2277110]))
          (2277275 call chpl_here_free[188127] coerce_tmp[2277267])
          (2277277 'move' ret[2276545] ret[2277131])
          gotoReturn _end__strcmp[2277285] _end__strcmp[2277285]
        }
      }
    }
    label _end__strcmp[2277285]
    const-val call_tmp[2277287]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2277289 'move' call_tmp[2277287](2277291 '==' ret[2276545] 0))
    const-val call_tmp[2277294]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2277296 'move' call_tmp[2277294](2277298 '!' call_tmp[2277287]))
    if call_tmp[2277294]
    {
      const-val _ic__F0_this[2535471]:__wide_TaskErrors[2581446] "temp"
      (2297027 'move' _ic__F0_this[2535471] this[169728])
      const-val this[1990284]:__wide_TaskErrors[2581446] "temp"
      (1990289 'move' this[1990284] this[169728])
      const-val coerce_tmp[1990028]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      val tmp[2622016]:int(64)[13] "temp"
      (1990030 'move' tmp[2622016](2564288 '.v' this[1990284] nErrors[168363]))
      (2622019 'move' coerce_tmp[1990028] tmp[2622016])
      const-val call_tmp[2230878]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2230880 'move' call_tmp[2230878](2230882 '<' coerce_tmp[1990028] 0))
      if call_tmp[2230878]
      {
        (2061482 call boundsCheckHalt[210254] "With a negative count, the range must have a last index.")
      }
      val tmp_x0[2550123]:int(64)[13] "temp"
      val tmp_x1[2550125]:int(64)[13] "temp"
      const-val call_tmp[2235056]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2235058 'move' call_tmp[2235056](2235060 '==' coerce_tmp[1990028] 0))
      if call_tmp[2235056]
      {
        const-val call_tmp[2231818]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (2231820 'move' call_tmp[2231818](2231822 'cast' uint(64)[115] 0))
        const-val call_tmp[2302404]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (2302406 'move' call_tmp[2302404](2302408 '-' call_tmp[2231818] 1))
        const-val call_tmp[2302834]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2302836 'move' call_tmp[2302834](2302838 'cast' int(64)[13] call_tmp[2302404]))
        (2550131 'move' tmp_x0[2550123] 0)
        (2550136 'move' tmp_x1[2550125] call_tmp[2302834])
      }
      {
        const-val call_tmp[2261824]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2261826 'move' call_tmp[2261824](2261828 '-' coerce_tmp[1990028] 1))
        const-val call_tmp[2242556]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2242558 'move' call_tmp[2242556](2242560 '+' 0 call_tmp[2261824]))
        (2550141 'move' tmp_x0[2550123] 0)
        (2550146 'move' tmp_x1[2550125] call_tmp[2242556])
      }
      (2061591 'noop')
      (2061611 'noop')
      (2061630 'noop')
      const-val _ic__F1_high[2543525]:int(64)[13] "temp"
      (2308327 'move' _ic__F1_high[2543525] tmp_x1[2550125])
      val i[2061659]:int(64)[13] "dead at end of block" "insert auto destroy"
      (2061663 'move' i[2061659] 0)
      (2061715 call chpl_checkIfRangeIterWillOverflow[1096265] tmp_x0[2550123] tmp_x1[2550125] 1 tmp_x0[2550123] tmp_x1[2550125] 1)
      const-val this[2061824]:__wide_TaskErrors[2581446] "temp"
      (2061826 'move' this[2061824] _ic__F0_this[2535471])
      val coerce_tmp[2061836]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      val tmp[2623218]:c_ptr(owned Error?)[1235804] "temp"
      (2061838 'move' tmp[2623218](2564296 '.v' this[2061824] errorsArray[168374]))
      (2623221 'move' coerce_tmp[2061836] tmp[2623218])
      CForLoop[2061722] hazard
      {
        ref call_tmp[2310249]:owned Error?[966602] "dead after last mention" "maybe param" "temp"
        (2310251 'move' call_tmp[2310249](2310253 'array_get' coerce_tmp[2061836] i[2061659]))
        val coerce_tmp[2061850]:__wide_Error[2581418] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2061852 'move' coerce_tmp[2061850](2061855 call borrow[1236017] call_tmp[2310249]))
        val coerce_tmp[2061857]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2061859 'move' coerce_tmp[2061857](2061861 'cast' object[22] coerce_tmp[2061850]))
        const-val call_tmp[2228177]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        val tmp[2626789]:__wide_object[2581313] "temp"
        (2626792 'move' tmp[2626789] nil[44])
        (2228179 'move' call_tmp[2228177](2228181 'ptr_neq' coerce_tmp[2061857] tmp[2626789]))
        if call_tmp[2228177]
        {
          const-val this[2061883]:__wide_TaskErrors[2581446] "temp"
          (2061885 'move' this[2061883] _ic__F0_this[2535471])
          val coerce_tmp[2061895]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2623224]:c_ptr(owned Error?)[1235804] "temp"
          (2061897 'move' tmp[2623224](2564302 '.v' this[2061883] errorsArray[168374]))
          (2623227 'move' coerce_tmp[2061895] tmp[2623224])
          ref call_tmp[2310259]:owned Error?[966602] "dead after last mention" "maybe param" "temp"
          (2310261 'move' call_tmp[2310259](2310263 'array_get' coerce_tmp[2061895] i[2061659]))
          val coerce_tmp[2521260]:__wide_Error[2581418] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2521262 'move' coerce_tmp[2521260](2521264 '.v' call_tmp[2310259] chpl_p[966597]))
          val coerce_tmp[2521267]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2521269 'move' coerce_tmp[2521267](2521271 'cast' object[22] coerce_tmp[2521260]))
          const-val call_tmp[2521274]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val tmp[2647114]:__wide_object[2581313] "temp"
          (2647117 'move' tmp[2647114] nil[44])
          (2521276 'move' call_tmp[2521274](2521278 'ptr_eq' coerce_tmp[2521267] tmp[2647114]))
          if call_tmp[2521274]
          {
            (2521284 call nilCheckHalt[210238] "argument to ! is nil")
          }
          val coerce_tmp[2521287]:__wide_Error[2581418] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2521289 'move' coerce_tmp[2521287](2521291 '.v' call_tmp[2310259] chpl_p[966597]))
          const-val call_tmp[2061933]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val _virtual_method_tmp_[2061935]:int(32)[95] "temp"
          (2061937 'move' _virtual_method_tmp_[2061935](2061939 'getcid' coerce_tmp[2521287]))
          val ret_tmp[2061941]:string[26] "temp"
          ref tmp[2623230]:string[26] "temp"
          (2623234 'move' tmp[2623230](2623233 'set reference' ret_tmp[2061941]))
          wide-ref tmp[2623237]:string[26] "temp"
          (2623240 'move' tmp[2623237] tmp[2623230])
          (2061943 'virtual method call' message[167975] _virtual_method_tmp_[2061935] coerce_tmp[2521287] tmp[2623237])
          (2061948 'move' call_tmp[2061933] ret_tmp[2061941])
          const-val call_tmp[2061951]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2061953 'move' call_tmp[2061951](2061956 call ==[38823] call_tmp[2061933] maxMsg[169092]))
          if call_tmp[2061951]
          {
            (2406775 '=' last[169106] coerce_tmp[2521287])
          }
          ref i_x[2250737]:string[26] "temp"
          (2250741 'move' i_x[2250737](2250739 'set reference' call_tmp[2061933]))
          wide-ref tmp[2628583]:string[26] "temp"
          (2628586 'move' tmp[2628583] i_x[2250737])
          (2250745 call deinit[30834] tmp[2628583])
        }
        {
          (2061731 '=' i[2061659] tmp_x0[2550123])
        }
        {
          (2061742 '<=' i[2061659] _ic__F1_high[2543525])
        }
        {
          (2061748 '+=' i[2061659] 1)
        }
      }
      label _endchpl_direct_param_stride_range_iter[2061785]
      label _endchpl_direct_counted_range_iter_helper[2061793]
      label _endchpl_direct_counted_range_iter[1990204]
      label _endthese[1990209]
    }
    const-val call_tmp[680203]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1908982]:string[26] "temp"
    (169411 call _cast[1063342] n[169081] ret_tmp[1908982])
    (1908985 'move' call_tmp[680203] ret_tmp[1908982])
    const-val call_tmp[680208]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1905566]:string[26] "temp"
    wide-ref tmp[2614720]:string[26] "temp"
    (2614724 'move' tmp[2614720](2614722 'set reference' " errors: "))
    (169430 call +[38345] call_tmp[680203] tmp[2614720] ret_tmp[1905566])
    (1905569 'move' call_tmp[680208] ret_tmp[1905566])
    val ret[169432]:string[26] "dead at end of block" "insert auto destroy"
    (544762 'move' ret[169432] call_tmp[680208])
    val coerce_tmp[1841077]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1841083 'move' coerce_tmp[1841077](1841079 'cast' object[22] first[169099]))
    const-val call_tmp[2227637]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2626507]:__wide_object[2581313] "temp"
    (2626510 'move' tmp[2626507] nil[44])
    (2227639 'move' call_tmp[2227637](2227641 'ptr_neq' coerce_tmp[1841077] tmp[2626507]))
    val tmp[570622]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2227637]
    {
      val coerce_tmp[1841089]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1841095 'move' coerce_tmp[1841089](1841091 'cast' object[22] last[169106]))
      const-val call_tmp[2227647]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2626513]:__wide_object[2581313] "temp"
      (2626516 'move' tmp[2626513] nil[44])
      (2227649 'move' call_tmp[2227647](2227651 'ptr_neq' coerce_tmp[1841089] tmp[2626513]))
      (570637 'move' tmp[570622] call_tmp[2227647])
    }
    {
      (570642 'move' tmp[570622] 0)
    }
    val tmp[570649]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[570622]
    {
      val coerce_tmp[1841101]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1841107 'move' coerce_tmp[1841101](1841103 'cast' object[22] first[169099]))
      val coerce_tmp[1841109]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1841115 'move' coerce_tmp[1841109](1841111 'cast' object[22] last[169106]))
      const-val call_tmp[2227657]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2227659 'move' call_tmp[2227657](2227661 'ptr_neq' coerce_tmp[1841101] coerce_tmp[1841109]))
      (570664 'move' tmp[570649] call_tmp[2227657])
    }
    {
      (570669 'move' tmp[570649] 0)
    }
    if tmp[570649]
    {
      val coerce_tmp[2342136]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2342138 'move' coerce_tmp[2342136](2342140 'cast' object[22] first[169099]))
      const-val call_tmp[2342143]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2633248]:__wide_object[2581313] "temp"
      (2633251 'move' tmp[2633248] nil[44])
      (2342145 'move' call_tmp[2342143](2342147 'ptr_eq' coerce_tmp[2342136] tmp[2633248]))
      if call_tmp[2342143]
      {
        (2342153 call nilCheckHalt[210238] "argument to ! is nil")
      }
      const-val call_tmp[680253]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1906972]:string[26] "temp"
      (169458 call chpl_describe_error[169835] first[169099] ret_tmp[1906972])
      (1906975 'move' call_tmp[680253] ret_tmp[1906972])
      const-val call_tmp[680258]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1905572]:string[26] "temp"
      wide-ref tmp[2614727]:string[26] "temp"
      (2614731 'move' tmp[2614727](2614729 'set reference' " ... "))
      (169476 call +[38345] call_tmp[680253] tmp[2614727] ret_tmp[1905572])
      (1905575 'move' call_tmp[680258] ret_tmp[1905572])
      val coerce_tmp[2342159]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2342161 'move' coerce_tmp[2342159](2342163 'cast' object[22] last[169106]))
      const-val call_tmp[2342166]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2633254]:__wide_object[2581313] "temp"
      (2633257 'move' tmp[2633254] nil[44])
      (2342168 'move' call_tmp[2342166](2342170 'ptr_eq' coerce_tmp[2342159] tmp[2633254]))
      if call_tmp[2342166]
      {
        (2342176 call nilCheckHalt[210238] "argument to ! is nil")
      }
      const-val call_tmp[680268]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1906978]:string[26] "temp"
      (169483 call chpl_describe_error[169835] last[169106] ret_tmp[1906978])
      (1906981 'move' call_tmp[680268] ret_tmp[1906978])
      const-val call_tmp[680273]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1905578]:string[26] "temp"
      wide-ref tmp[2614734]:string[26] "temp"
      (2614738 'move' tmp[2614734](2614736 'set reference' call_tmp[680268]))
      (169484 call +[38345] call_tmp[680258] tmp[2614734] ret_tmp[1905578])
      (1905581 'move' call_tmp[680273] ret_tmp[1905578])
      (169486 call +=[38800] ret[169432] call_tmp[680273])
      ref i_x[2246045]:string[26] "temp"
      (2246049 'move' i_x[2246045](2246047 'set reference' call_tmp[680273]))
      wide-ref tmp[2627083]:string[26] "temp"
      (2627086 'move' tmp[2627083] i_x[2246045])
      (2246053 call deinit[30834] tmp[2627083])
      ref i_x[2246057]:string[26] "temp"
      (2246061 'move' i_x[2246057](2246059 'set reference' call_tmp[680268]))
      wide-ref tmp[2627089]:string[26] "temp"
      (2627092 'move' tmp[2627089] i_x[2246057])
      (2246065 call deinit[30834] tmp[2627089])
      ref i_x[2246069]:string[26] "temp"
      (2246073 'move' i_x[2246069](2246071 'set reference' call_tmp[680258]))
      wide-ref tmp[2627095]:string[26] "temp"
      (2627098 'move' tmp[2627095] i_x[2246069])
      (2246077 call deinit[30834] tmp[2627095])
      ref i_x[2246081]:string[26] "temp"
      (2246085 'move' i_x[2246081](2246083 'set reference' call_tmp[680253]))
      wide-ref tmp[2627101]:string[26] "temp"
      (2627104 'move' tmp[2627101] i_x[2246081])
      (2246089 call deinit[30834] tmp[2627101])
    }
    {
      val coerce_tmp[1841125]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1841131 'move' coerce_tmp[1841125](1841127 'cast' object[22] first[169099]))
      const-val call_tmp[2227667]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2626519]:__wide_object[2581313] "temp"
      (2626522 'move' tmp[2626519] nil[44])
      (2227669 'move' call_tmp[2227667](2227671 'ptr_neq' coerce_tmp[1841125] tmp[2626519]))
      if call_tmp[2227667]
      {
        const-val call_tmp[680293]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1906984]:string[26] "temp"
        (169499 call chpl_describe_error[169835] first[169099] ret_tmp[1906984])
        (1906987 'move' call_tmp[680293] ret_tmp[1906984])
        (169500 call +=[38800] ret[169432] call_tmp[680293])
        ref i_x[2246093]:string[26] "temp"
        (2246097 'move' i_x[2246093](2246095 'set reference' call_tmp[680293]))
        wide-ref tmp[2627107]:string[26] "temp"
        (2627110 'move' tmp[2627107] i_x[2246093])
        (2246101 call deinit[30834] tmp[2627107])
      }
    }
    (1841138 'move' ret[522310] ret[169432])
    ref i_x[2246105]:string[26] "temp"
    (2246109 'move' i_x[2246105](2246107 'set reference' call_tmp[680203]))
    wide-ref tmp[2627113]:string[26] "temp"
    (2627116 'move' tmp[2627113] i_x[2246105])
    (2246113 call deinit[30834] tmp[2627113])
    ref i_x[2246117]:string[26] "temp"
    (2246121 'move' i_x[2246117](2246119 'set reference' maxMsg[169092]))
    wide-ref tmp[2627119]:string[26] "temp"
    (2627122 'move' tmp[2627119] i_x[2246117])
    (2246125 call deinit[30834] tmp[2627119])
    ref i_x[2246129]:string[26] "temp"
    (2246133 'move' i_x[2246129](2246131 'set reference' minMsg[169087]))
    wide-ref tmp[2627125]:string[26] "temp"
    (2627128 'move' tmp[2627125] i_x[2246129])
    (2246137 call deinit[30834] tmp[2627125])
    label _end_message[522308]
    (1918972 '=' _retArg[1918970] ret[522310])
    (1918974 return _void[55])
  }
  function _local__new[2607977](ref arg group[2607979]:chpl_TaskErrors[168348]) : TaskErrors[169702] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "local fn" "_new wrapper" "resolved"
  {
    const-val local__str_literal_4780[2607982]:string[26] "temp"
    (2607984 'move' local__str_literal_4780[2607982] "casting int(64) less than 0 to uint(64)")
    const-val local__str_literal_978[2607987]:string[26] "temp"
    (2607989 'move' local__str_literal_978[2607987] "With a negative count, the range must have a last index.")
    const-val local__str_literal_129[2607992]:string[26] "temp"
    (2607994 'move' local__str_literal_129[2607992] "argument to ! is nil")
    val initTemp[2607997]:TaskErrors[169702] "dead after last mention" "temp"
    const-val call_tmp[2607999]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2608001 'move' call_tmp[2607999](2608003 'sizeof_bundle' TaskErrors[169702]))
    const-val cast_tmp[2608005]:c_void_ptr[149] "dead after last mention" "temp"
    (2608007 'move' cast_tmp[2608005](2608010 call _local_chpl_here_alloc[2597816] call_tmp[2607999] 41))
    (2608013 'move' initTemp[2607997](2608015 'cast' TaskErrors[169702] cast_tmp[2608005]))
    (2608018 'setcid' initTemp[2607997])
    val super_tmp[2608020]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    val tmp[2652209]:Error[167984] "temp"
    (2608022 'move' tmp[2652209](2608024 '.v' initTemp[2607997] super[355819]))
    (2652212 'move' super_tmp[2608020] tmp[2652209])
    val super_tmp[2608027]:object[22] "dead after last mention" "temporary of super field" "temp"
    val tmp[2652215]:object[22] "temp"
    (2608029 'move' tmp[2652215](2608031 '.v' super_tmp[2608020] super[355807]))
    (2652218 'move' super_tmp[2608027] tmp[2652215])
    (2608034 'setcid' super_tmp[2608027])
    val call_tmp[2608036]:object[22] "dead at end of block" "maybe param" "temp"
    (2608038 'move' call_tmp[2608036](2608040 'cast' object[22] super_tmp[2608020]))
    (2608043 'setcid' call_tmp[2608036])
    val init_coerce_tmp[2608045]:Error[167984] "dead after last mention" "temp"
    (2608047 'move' init_coerce_tmp[2608045](2608049 'cast' Error[167984] nil[44]))
    val tmp[2652221]:__wide_Error[2581418] "temp"
    (2652224 'move' tmp[2652221] init_coerce_tmp[2608045])
    (2608052 '.=' super_tmp[2608020] _next[167912] tmp[2652221])
    (2608056 '.=' super_tmp[2608020] thrownLine[167917] 0)
    (2608060 '.=' super_tmp[2608020] thrownFileId[167925] 0)
    val tmp[2608064]:string[26] "dead after last mention" "temp"
    (2608067 call _local_init[2591327] tmp[2608064])
    (2608069 '.=' super_tmp[2608020] _msg[167930] tmp[2608064])
    (2608073 '.=' super_tmp[2608020] _hasThrowInfo[167936] 0)
    (2608077 'setcid' super_tmp[2608020])
    val call_tmp[2608079]:Error[167984] "dead at end of block" "maybe param" "temp"
    (2608081 'move' call_tmp[2608079](2608083 'cast' Error[167984] initTemp[2607997]))
    (2608086 'setcid' call_tmp[2608079])
    val head[2608088]:__wide_Error[2581418] "dead at end of block" "insert auto destroy"
    val coerce_tmp[2608090]:__wide_Error[2581418] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2608092 'move' coerce_tmp[2608090](2608094 '.v' group[2607979] _head[168266]))
    (2608097 '=' head[2608088] coerce_tmp[2608090])
    (2608100 'noop')
    val tmp[2608101]:Error[167984] "temp"
    (2608103 'move' tmp[2608101](2608105 'cast' Error[167984] nil[44]))
    val tmp[2652227]:__wide_Error[2581418] "temp"
    (2652230 'move' tmp[2652227] tmp[2608101])
    (2608108 '.=' group[2607979] _head[168266] tmp[2652227])
    (2608112 '.=' initTemp[2607997] nErrors[168363] 0)
    val tmp[2608116]:c_ptr(owned Error?)[1235804] "dead after last mention" "temp"
    (2608118 'move' tmp[2608116](2608120 'cast' c_ptr(owned Error?)[1235804] nil[44]))
    (2608123 '.=' initTemp[2607997] errorsArray[168374] tmp[2608116])
    (2608127 'setcid' initTemp[2607997])
    val cur[2608129]:__wide_Error[2581418] "dead at end of block" "insert auto destroy" "split inited"
    val n[2608131]:int(64)[13] "dead at end of block" "insert auto destroy"
    (2608133 'move' n[2608131] 0)
    (2608136 'move' cur[2608129] coerce_tmp[2608090])
    val tmp[2608139]:bool[10] "dead after last mention" "temp"
    val coerce_tmp[2608141]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2608143 'move' coerce_tmp[2608141](2608145 'cast' object[22] coerce_tmp[2608090]))
    const-val call_tmp[2608148]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2652233]:__wide_object[2581313] "temp"
    (2652236 'move' tmp[2652233] nil[44])
    (2608150 'move' call_tmp[2608148](2608152 'ptr_neq' coerce_tmp[2608141] tmp[2652233]))
    (2608155 'move' tmp[2608139] call_tmp[2608148])
    WhileDo[2608158]
    {
      val coerce_tmp[2608160]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2608162 'move' coerce_tmp[2608160](2608164 'cast' object[22] cur[2608129]))
      const-val call_tmp[2608167]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2652239]:__wide_object[2581313] "temp"
      (2652242 'move' tmp[2652239] nil[44])
      (2608169 'move' call_tmp[2608167](2608171 'ptr_eq' coerce_tmp[2608160] tmp[2652239]))
      if call_tmp[2608167]
      {
        (2608177 call _local_nilCheckHalt[2592346] local__str_literal_129[2607992])
      }
      val coerce_tmp[2608180]:__wide_Error[2581418] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2608182 'move' coerce_tmp[2608180] cur[2608129])
      val curnext[2608185]:__wide_Error[2581418] "dead at end of block" "insert auto destroy"
      val coerce_tmp[2608187]:__wide_Error[2581418] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (2611928 'local_check' coerce_tmp[2608180] c"cannot access remote data in local block")
      val local_coerce_tmp[2611925]:Error[167984] "temp"
      (2611931 'move' local_coerce_tmp[2611925] coerce_tmp[2608180])
      (2608189 'move' coerce_tmp[2608187](2608191 '.v' local_coerce_tmp[2611925] _next[167912]))
      (2608194 '=' curnext[2608185] coerce_tmp[2608187])
      (2608197 'noop')
      val _formal_type_tmp_[2608198]:TaskErrors[169702] "temp"
      val ret[2608200]:__wide_TaskErrors[2581446] "dead after last mention" "RVV" "temp"
      val coerce_tmp[2608202]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2608204 'move' coerce_tmp[2608202](2608206 'cast' object[22] cur[2608129]))
      const-val call_tmp[2608209]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2652245]:__wide_object[2581313] "temp"
      (2652248 'move' tmp[2652245] nil[44])
      (2608211 'move' call_tmp[2608209](2608213 'ptr_eq' coerce_tmp[2608202] tmp[2652245]))
      if call_tmp[2608209]
      {
        val tmp[2608218]:TaskErrors[169702] "temp"
        (2608220 'move' tmp[2608218](2608222 'cast' TaskErrors[169702] nil[44]))
        (2608225 'move' ret[2608200] tmp[2608218])
        gotoReturn _end__cast[2608241] _end__cast[2608241]
      }
      val call_tmp[2608231]:__wide_TaskErrors[2581446] "dead at end of block" "maybe param" "temp"
      (2611937 'local_check' cur[2608129] c"cannot access remote data in local block")
      val local_cur[2611934]:Error[167984] "temp"
      (2611940 'move' local_cur[2611934] cur[2608129])
      (2608233 'move' call_tmp[2608231](2608235 'dynamic_cast' _formal_type_tmp_[2608198] local_cur[2611934]))
      (2608238 'move' ret[2608200] call_tmp[2608231])
      label _end__cast[2608241]
      val coerce_tmp[2608243]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2608245 'move' coerce_tmp[2608243](2608247 'cast' object[22] ret[2608200]))
      const-val call_tmp[2608250]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2652251]:__wide_object[2581313] "temp"
      (2652254 'move' tmp[2652251] nil[44])
      (2608252 'move' call_tmp[2608250](2608254 'ptr_eq' coerce_tmp[2608243] tmp[2652251]))
      if call_tmp[2608250]
      {
        ref i_lhs[2608259]:int(64)[13] "temp"
        (2608261 'move' i_lhs[2608259](2608263 'set reference' n[2608131]))
        (2608265 '+=' i_lhs[2608259] 1)
      }
      {
        const-val _ic__F0_this[2608269]:__wide_TaskErrors[2581446] "temp"
        (2608271 'move' _ic__F0_this[2608269] ret[2608200])
        const-val this[2608274]:__wide_TaskErrors[2581446] "temp"
        (2608276 'move' this[2608274] ret[2608200])
        const-val coerce_tmp[2608279]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (2611946 'local_check' this[2608274] c"cannot access remote data in local block")
        const-val local_this[2611943]:TaskErrors[169702] "temp"
        (2611949 'move' local_this[2611943] this[2608274])
        val tmp[2652257]:int(64)[13] "temp"
        (2608281 'move' tmp[2652257](2608283 '.v' local_this[2611943] nErrors[168363]))
        (2652260 'move' coerce_tmp[2608279] tmp[2652257])
        const-val call_tmp[2608286]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2608288 'move' call_tmp[2608286](2608290 '<' coerce_tmp[2608279] 0))
        if call_tmp[2608286]
        {
          (2608296 call _local_boundsCheckHalt[2591315] local__str_literal_978[2607987])
        }
        val tmp_x0[2608299]:int(64)[13] "temp"
        val tmp_x1[2608301]:int(64)[13] "temp"
        const-val call_tmp[2608303]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2608305 'move' call_tmp[2608303](2608307 '==' coerce_tmp[2608279] 0))
        if call_tmp[2608303]
        {
          const-val call_tmp[2608312]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2608314 'move' call_tmp[2608312](2608316 'cast' uint(64)[115] 0))
          const-val call_tmp[2608319]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2608321 'move' call_tmp[2608319](2608323 '-' call_tmp[2608312] 1))
          const-val call_tmp[2608326]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2608328 'move' call_tmp[2608326](2608330 'cast' int(64)[13] call_tmp[2608319]))
          (2608333 'move' tmp_x0[2608299] 0)
          (2608336 'move' tmp_x1[2608301] call_tmp[2608326])
        }
        {
          const-val call_tmp[2608340]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2608342 'move' call_tmp[2608340](2608344 '-' coerce_tmp[2608279] 1))
          const-val call_tmp[2608347]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2608349 'move' call_tmp[2608347](2608351 '+' 0 call_tmp[2608340]))
          (2608354 'move' tmp_x0[2608299] 0)
          (2608357 'move' tmp_x1[2608301] call_tmp[2608347])
        }
        (2608361 'noop')
        (2608362 'noop')
        (2608363 'noop')
        const-val _ic__F1_high[2608364]:int(64)[13] "temp"
        (2608366 'move' _ic__F1_high[2608364] tmp_x1[2608301])
        val i[2608369]:int(64)[13] "dead at end of block" "insert auto destroy"
        (2608371 'move' i[2608369] 0)
        (2608375 call _local_chpl_checkIfRangeIterWillOverflow[2588968] tmp_x0[2608299] tmp_x1[2608301] 1 tmp_x0[2608299] tmp_x1[2608301] 1)
        const-val this[2608382]:__wide_TaskErrors[2581446] "temp"
        (2608384 'move' this[2608382] _ic__F0_this[2608269])
        val coerce_tmp[2608387]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2611957 'local_check' this[2608382] c"cannot access remote data in local block")
        const-val local_this[2611954]:TaskErrors[169702] "temp"
        (2611960 'move' local_this[2611954] this[2608382])
        val tmp[2652263]:c_ptr(owned Error?)[1235804] "temp"
        (2608389 'move' tmp[2652263](2608391 '.v' local_this[2611954] errorsArray[168374]))
        (2652266 'move' coerce_tmp[2608387] tmp[2652263])
        CForLoop[2608394]
        {
          ref call_tmp[2608407]:owned Error?[966602] "dead after last mention" "maybe param" "temp"
          (2608409 'move' call_tmp[2608407](2608411 'array_get' coerce_tmp[2608387] i[2608369]))
          val coerce_tmp[2608414]:__wide_Error[2581418] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2608416 'move' coerce_tmp[2608414](2608419 call _local_borrow[2611963] call_tmp[2608407]))
          val coerce_tmp[2608421]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2608423 'move' coerce_tmp[2608421](2608425 'cast' object[22] coerce_tmp[2608414]))
          const-val call_tmp[2608428]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val tmp[2652269]:__wide_object[2581313] "temp"
          (2652272 'move' tmp[2652269] nil[44])
          (2608430 'move' call_tmp[2608428](2608432 'ptr_neq' coerce_tmp[2608421] tmp[2652269]))
          if call_tmp[2608428]
          {
            const-val this[2608437]:__wide_TaskErrors[2581446] "temp"
            (2608439 'move' this[2608437] _ic__F0_this[2608269])
            val coerce_tmp[2608442]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2611984 'local_check' this[2608437] c"cannot access remote data in local block")
            const-val local_this[2611981]:TaskErrors[169702] "temp"
            (2611987 'move' local_this[2611981] this[2608437])
            val tmp[2652275]:c_ptr(owned Error?)[1235804] "temp"
            (2608444 'move' tmp[2652275](2608446 '.v' local_this[2611981] errorsArray[168374]))
            (2652278 'move' coerce_tmp[2608442] tmp[2652275])
            ref call_tmp[2608449]:owned Error?[966602] "dead after last mention" "maybe param" "temp"
            (2608451 'move' call_tmp[2608449](2608453 'array_get' coerce_tmp[2608442] i[2608369]))
            val coerce_tmp[2608456]:__wide_Error[2581418] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2608458 'move' coerce_tmp[2608456](2608461 call _local_borrow[2611963] call_tmp[2608449]))
            val coerce_tmp[2608463]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2608465 'move' coerce_tmp[2608463](2608467 'cast' object[22] coerce_tmp[2608456]))
            const-val call_tmp[2608470]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            val tmp[2652281]:__wide_object[2581313] "temp"
            (2652284 'move' tmp[2652281] nil[44])
            (2608472 'move' call_tmp[2608470](2608474 'ptr_neq' coerce_tmp[2608463] tmp[2652281]))
            if call_tmp[2608470]
            {
              ref i_lhs[2608479]:int(64)[13] "temp"
              (2608481 'move' i_lhs[2608479](2608483 'set reference' n[2608131]))
              (2608485 '+=' i_lhs[2608479] 1)
            }
          }
          {
            (2608396 '=' i[2608369] tmp_x0[2608299])
          }
          {
            (2608400 '<=' i[2608369] _ic__F1_high[2608364])
          }
          {
            (2608404 '+=' i[2608369] 1)
          }
        }
        label _endchpl_direct_param_stride_range_iter[2608490]
        label _endchpl_direct_counted_range_iter_helper[2608492]
        label _endchpl_direct_counted_range_iter[2608494]
        label _endthese[2608496]
      }
      (2608499 '=' cur[2608129] curnext[2608185])
      val coerce_tmp[2608502]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2608504 'move' coerce_tmp[2608502](2608506 'cast' object[22] curnext[2608185]))
      const-val call_tmp[2608509]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2652287]:__wide_object[2581313] "temp"
      (2652290 'move' tmp[2652287] nil[44])
      (2608511 'move' call_tmp[2608509](2608513 'ptr_neq' coerce_tmp[2608502] tmp[2652287]))
      (2608516 'move' tmp[2608139] call_tmp[2608509])
      tmp[2608139]
    }
    (2608519 '.=' initTemp[2607997] nErrors[168363] n[2608131])
    const-val call_tmp[2608523]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2608525 'move' call_tmp[2608523](2608527 '<' n[2608131] 0))
    if call_tmp[2608523]
    {
      (2608533 call _local_safeCastCheckHalt[2600981] local__str_literal_4780[2607982])
    }
    const-val call_tmp[2608536]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2608538 'move' call_tmp[2608536](2608540 'cast' uint(64)[115] n[2608131]))
    const-val call_tmp[2608543]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2608545 'move' call_tmp[2608543](2608548 call sizeof[1238678] owned Error?[966602]))
    const-val call_tmp[2608550]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2608552 'move' call_tmp[2608550](2608554 '*' call_tmp[2608536] call_tmp[2608543]))
    const-val call_tmp[2608557]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2608559 'move' call_tmp[2608557](2608562 call _local_offset_ARRAY_ELEMENTS[2611992]))
    const-val call_tmp[2608563]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2608565 'move' call_tmp[2608563](2608568 call _local_chpl_here_calloc[2612016] call_tmp[2608550] 1 call_tmp[2608557]))
    val call_tmp[2608572]:c_ptr(owned Error?)[1235804] "dead after last mention" "expr temp" "maybe param" "temp"
    (2608574 'move' call_tmp[2608572](2608576 'cast' c_ptr(owned Error?)[1235804] call_tmp[2608563]))
    (2608579 '.=' initTemp[2607997] errorsArray[168374] call_tmp[2608572])
    val idx[2608583]:int(64)[13] "dead at end of block" "insert auto destroy"
    (2608585 'move' idx[2608583] 0)
    (2608588 '=' cur[2608129] head[2608088])
    val tmp[2608591]:bool[10] "dead after last mention" "temp"
    val coerce_tmp[2608593]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2608595 'move' coerce_tmp[2608593](2608597 'cast' object[22] head[2608088]))
    const-val call_tmp[2608600]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2652293]:__wide_object[2581313] "temp"
    (2652296 'move' tmp[2652293] nil[44])
    (2608602 'move' call_tmp[2608600](2608604 'ptr_neq' coerce_tmp[2608593] tmp[2652293]))
    (2608607 'move' tmp[2608591] call_tmp[2608600])
    WhileDo[2608610]
    {
      val coerce_tmp[2608612]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2608614 'move' coerce_tmp[2608612](2608616 'cast' object[22] cur[2608129]))
      const-val call_tmp[2608619]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2652299]:__wide_object[2581313] "temp"
      (2652302 'move' tmp[2652299] nil[44])
      (2608621 'move' call_tmp[2608619](2608623 'ptr_eq' coerce_tmp[2608612] tmp[2652299]))
      if call_tmp[2608619]
      {
        (2608629 call _local_nilCheckHalt[2592346] local__str_literal_129[2607992])
      }
      val coerce_tmp[2608632]:__wide_Error[2581418] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2608634 'move' coerce_tmp[2608632] cur[2608129])
      val curnext[2608637]:__wide_Error[2581418] "dead at end of block" "insert auto destroy"
      val coerce_tmp[2608639]:__wide_Error[2581418] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (2612080 'local_check' coerce_tmp[2608632] c"cannot access remote data in local block")
      val local_coerce_tmp[2612077]:Error[167984] "temp"
      (2612083 'move' local_coerce_tmp[2612077] coerce_tmp[2608632])
      (2608641 'move' coerce_tmp[2608639](2608643 '.v' local_coerce_tmp[2612077] _next[167912]))
      (2608646 '=' curnext[2608637] coerce_tmp[2608639])
      (2608649 'noop')
      val coerce_tmp[2608650]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2608652 'move' coerce_tmp[2608650](2608654 'cast' object[22] cur[2608129]))
      const-val call_tmp[2608657]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2652305]:__wide_object[2581313] "temp"
      (2652308 'move' tmp[2652305] nil[44])
      (2608659 'move' call_tmp[2608657](2608661 'ptr_eq' coerce_tmp[2608650] tmp[2652305]))
      if call_tmp[2608657]
      {
        (2608667 call _local_nilCheckHalt[2592346] local__str_literal_129[2607992])
      }
      val coerce_tmp[2608670]:__wide_Error[2581418] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2608672 'move' coerce_tmp[2608670] cur[2608129])
      val tmp[2608675]:Error[167984] "temp"
      (2608677 'move' tmp[2608675](2608679 'cast' Error[167984] nil[44]))
      (2612090 'local_check' coerce_tmp[2608670] c"cannot access remote data in local block")
      val local_coerce_tmp[2612087]:Error[167984] "temp"
      (2612093 'move' local_coerce_tmp[2612087] coerce_tmp[2608670])
      val tmp[2652311]:__wide_Error[2581418] "temp"
      (2652314 'move' tmp[2652311] tmp[2608675])
      (2608682 '.=' local_coerce_tmp[2612087] _next[167912] tmp[2652311])
      val _formal_type_tmp_[2608686]:TaskErrors[169702] "temp"
      val ret[2608688]:__wide_TaskErrors[2581446] "dead after last mention" "RVV" "temp"
      val coerce_tmp[2608690]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2608692 'move' coerce_tmp[2608690](2608694 'cast' object[22] cur[2608129]))
      const-val call_tmp[2608697]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2652317]:__wide_object[2581313] "temp"
      (2652320 'move' tmp[2652317] nil[44])
      (2608699 'move' call_tmp[2608697](2608701 'ptr_eq' coerce_tmp[2608690] tmp[2652317]))
      if call_tmp[2608697]
      {
        val tmp[2608706]:TaskErrors[169702] "temp"
        (2608708 'move' tmp[2608706](2608710 'cast' TaskErrors[169702] nil[44]))
        (2608713 'move' ret[2608688] tmp[2608706])
        gotoReturn _end__cast[2608729] _end__cast[2608729]
      }
      val call_tmp[2608719]:__wide_TaskErrors[2581446] "dead at end of block" "maybe param" "temp"
      (2612099 'local_check' cur[2608129] c"cannot access remote data in local block")
      val local_cur[2612096]:Error[167984] "temp"
      (2612102 'move' local_cur[2612096] cur[2608129])
      (2608721 'move' call_tmp[2608719](2608723 'dynamic_cast' _formal_type_tmp_[2608686] local_cur[2612096]))
      (2608726 'move' ret[2608688] call_tmp[2608719])
      label _end__cast[2608729]
      val asTaskErr[2608731]:__wide_TaskErrors[2581446] "dead at end of block" "insert auto destroy"
      (2608733 'move' asTaskErr[2608731] ret[2608688])
      val coerce_tmp[2608736]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2608738 'move' coerce_tmp[2608736](2608740 'cast' object[22] ret[2608688]))
      const-val call_tmp[2608743]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2652323]:__wide_object[2581313] "temp"
      (2652326 'move' tmp[2652323] nil[44])
      (2608745 'move' call_tmp[2608743](2608747 'ptr_eq' coerce_tmp[2608736] tmp[2652323]))
      if call_tmp[2608743]
      {
        val coerce_tmp[2608752]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        val tmp[2652329]:c_ptr(owned Error?)[1235804] "temp"
        (2608754 'move' tmp[2652329](2608756 '.v' initTemp[2607997] errorsArray[168374]))
        (2652332 'move' coerce_tmp[2608752] tmp[2652329])
        ref call_tmp[2608759]:owned Error?[966602] "dead after last mention" "maybe param" "temp"
        (2608761 'move' call_tmp[2608759](2608763 'array_get' coerce_tmp[2608752] idx[2608583]))
        val coerce_tmp[2608766]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2608768 'move' coerce_tmp[2608766](2608770 'cast' object[22] cur[2608129]))
        const-val call_tmp[2608773]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        val tmp[2652335]:__wide_object[2581313] "temp"
        (2652338 'move' tmp[2652335] nil[44])
        (2608775 'move' call_tmp[2608773](2608777 'ptr_eq' coerce_tmp[2608766] tmp[2652335]))
        if call_tmp[2608773]
        {
          (2608783 call _local_nilCheckHalt[2592346] local__str_literal_129[2607992])
        }
        (2608787 call _local_retain[2612106] call_tmp[2608759] cur[2608129])
        ref i_lhs[2608790]:int(64)[13] "temp"
        (2608792 'move' i_lhs[2608790](2608794 'set reference' idx[2608583]))
        (2608796 '+=' i_lhs[2608790] 1)
      }
      {
        const-val _ic__F0_this[2608800]:__wide_TaskErrors[2581446] "temp"
        (2608802 'move' _ic__F0_this[2608800] ret[2608688])
        const-val this[2608805]:__wide_TaskErrors[2581446] "temp"
        (2608807 'move' this[2608805] ret[2608688])
        const-val coerce_tmp[2608810]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (2612228 'local_check' this[2608805] c"cannot access remote data in local block")
        const-val local_this[2612225]:TaskErrors[169702] "temp"
        (2612231 'move' local_this[2612225] this[2608805])
        val tmp[2652341]:int(64)[13] "temp"
        (2608812 'move' tmp[2652341](2608814 '.v' local_this[2612225] nErrors[168363]))
        (2652344 'move' coerce_tmp[2608810] tmp[2652341])
        const-val call_tmp[2608817]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2608819 'move' call_tmp[2608817](2608821 '<' coerce_tmp[2608810] 0))
        if call_tmp[2608817]
        {
          (2608827 call _local_boundsCheckHalt[2591315] local__str_literal_978[2607987])
        }
        val tmp_x0[2608830]:int(64)[13] "temp"
        val tmp_x1[2608832]:int(64)[13] "temp"
        const-val call_tmp[2608834]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2608836 'move' call_tmp[2608834](2608838 '==' coerce_tmp[2608810] 0))
        if call_tmp[2608834]
        {
          const-val call_tmp[2608843]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2608845 'move' call_tmp[2608843](2608847 'cast' uint(64)[115] 0))
          const-val call_tmp[2608850]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2608852 'move' call_tmp[2608850](2608854 '-' call_tmp[2608843] 1))
          const-val call_tmp[2608857]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2608859 'move' call_tmp[2608857](2608861 'cast' int(64)[13] call_tmp[2608850]))
          (2608864 'move' tmp_x0[2608830] 0)
          (2608867 'move' tmp_x1[2608832] call_tmp[2608857])
        }
        {
          const-val call_tmp[2608871]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2608873 'move' call_tmp[2608871](2608875 '-' coerce_tmp[2608810] 1))
          const-val call_tmp[2608878]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2608880 'move' call_tmp[2608878](2608882 '+' 0 call_tmp[2608871]))
          (2608885 'move' tmp_x0[2608830] 0)
          (2608888 'move' tmp_x1[2608832] call_tmp[2608878])
        }
        (2608892 'noop')
        (2608893 'noop')
        (2608894 'noop')
        const-val _ic__F1_high[2608895]:int(64)[13] "temp"
        (2608897 'move' _ic__F1_high[2608895] tmp_x1[2608832])
        val i[2608900]:int(64)[13] "dead at end of block" "insert auto destroy"
        (2608902 'move' i[2608900] 0)
        (2608906 call _local_chpl_checkIfRangeIterWillOverflow[2588968] tmp_x0[2608830] tmp_x1[2608832] 1 tmp_x0[2608830] tmp_x1[2608832] 1)
        const-val this[2608913]:__wide_TaskErrors[2581446] "temp"
        (2608915 'move' this[2608913] _ic__F0_this[2608800])
        val coerce_tmp[2608918]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2612239 'local_check' this[2608913] c"cannot access remote data in local block")
        const-val local_this[2612236]:TaskErrors[169702] "temp"
        (2612242 'move' local_this[2612236] this[2608913])
        val tmp[2652347]:c_ptr(owned Error?)[1235804] "temp"
        (2608920 'move' tmp[2652347](2608922 '.v' local_this[2612236] errorsArray[168374]))
        (2652350 'move' coerce_tmp[2608918] tmp[2652347])
        CForLoop[2608925]
        {
          ref call_tmp[2608938]:owned Error?[966602] "dead after last mention" "maybe param" "temp"
          (2608940 'move' call_tmp[2608938](2608942 'array_get' coerce_tmp[2608918] i[2608900]))
          val coerce_tmp[2608945]:__wide_Error[2581418] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2608947 'move' coerce_tmp[2608945](2608950 call _local_borrow[2611963] call_tmp[2608938]))
          val coerce_tmp[2608952]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2608954 'move' coerce_tmp[2608952](2608956 'cast' object[22] coerce_tmp[2608945]))
          const-val call_tmp[2608959]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val tmp[2652353]:__wide_object[2581313] "temp"
          (2652356 'move' tmp[2652353] nil[44])
          (2608961 'move' call_tmp[2608959](2608963 'ptr_neq' coerce_tmp[2608952] tmp[2652353]))
          if call_tmp[2608959]
          {
            const-val this[2608968]:__wide_TaskErrors[2581446] "temp"
            (2608970 'move' this[2608968] _ic__F0_this[2608800])
            val coerce_tmp[2608973]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2612249 'local_check' this[2608968] c"cannot access remote data in local block")
            const-val local_this[2612246]:TaskErrors[169702] "temp"
            (2612252 'move' local_this[2612246] this[2608968])
            val tmp[2652359]:c_ptr(owned Error?)[1235804] "temp"
            (2608975 'move' tmp[2652359](2608977 '.v' local_this[2612246] errorsArray[168374]))
            (2652362 'move' coerce_tmp[2608973] tmp[2652359])
            ref call_tmp[2608980]:owned Error?[966602] "dead after last mention" "maybe param" "temp"
            (2608982 'move' call_tmp[2608980](2608984 'array_get' coerce_tmp[2608973] i[2608900]))
            val coerce_tmp[2608987]:__wide_Error[2581418] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2608989 'move' coerce_tmp[2608987](2608992 call _local_borrow[2611963] call_tmp[2608980]))
            val coerce_tmp[2608994]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2608996 'move' coerce_tmp[2608994](2608998 'cast' object[22] coerce_tmp[2608987]))
            const-val call_tmp[2609001]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            val tmp[2652365]:__wide_object[2581313] "temp"
            (2652368 'move' tmp[2652365] nil[44])
            (2609003 'move' call_tmp[2609001](2609005 'ptr_neq' coerce_tmp[2608994] tmp[2652365]))
            if call_tmp[2609001]
            {
              val coerce_tmp[2609010]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              val tmp[2652371]:c_ptr(owned Error?)[1235804] "temp"
              (2609012 'move' tmp[2652371](2609014 '.v' initTemp[2607997] errorsArray[168374]))
              (2652374 'move' coerce_tmp[2609010] tmp[2652371])
              ref call_tmp[2609017]:owned Error?[966602] "dead after last mention" "maybe param" "temp"
              (2609019 'move' call_tmp[2609017](2609021 'array_get' coerce_tmp[2609010] idx[2608583]))
              (2609025 call _local_=[2612256] call_tmp[2609017] call_tmp[2608980])
              ref i_lhs[2609028]:int(64)[13] "temp"
              (2609030 'move' i_lhs[2609028](2609032 'set reference' idx[2608583]))
              (2609034 '+=' i_lhs[2609028] 1)
            }
          }
          {
            (2608927 '=' i[2608900] tmp_x0[2608830])
          }
          {
            (2608931 '<=' i[2608900] _ic__F1_high[2608895])
          }
          {
            (2608935 '+=' i[2608900] 1)
          }
        }
        label _endchpl_direct_param_stride_range_iter[2609039]
        label _endchpl_direct_counted_range_iter_helper[2609041]
        label _endchpl_direct_counted_range_iter[2609043]
        label _endthese[2609045]
        val coerce_tmp[2609047]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2609049 'move' coerce_tmp[2609047](2609051 'cast' object[22] asTaskErr[2608731]))
        const-val call_tmp[2609054]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        val tmp[2652377]:__wide_object[2581313] "temp"
        (2652380 'move' tmp[2652377] nil[44])
        (2609056 'move' call_tmp[2609054](2609058 'ptr_neq' coerce_tmp[2609047] tmp[2652377]))
        if call_tmp[2609054]
        {
          (2609064 call _local_deinit[2612339] asTaskErr[2608731])
          const-val call_tmp[2609066]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
          (2609068 'move' call_tmp[2609066](2609070 '_wide_get_locale' asTaskErr[2608731]))
          val isdirect[2609072]:bool[10] "temp"
          (2609074 'move' isdirect[2609072](2609077 call _local_chpl_doDirectExecuteOn[2585146] call_tmp[2609066]))
          if isdirect[2609072]
          {
            (2609082 call _local_on_fn[2612553] asTaskErr[2608731])
          }
          {
            val _args_foron_fn[2609085]:_class_localson_fn[2205215] "temp"
            (2609087 'move' _args_foron_fn[2609085](2609089 'stack allocate class' _class_localson_fn[2205215]))
            (2609091 '.=' _args_foron_fn[2609085] _0_tmp[2205218] call_tmp[2609066])
            (2609095 '.=' _args_foron_fn[2609085] _1_arg[2205220] asTaskErr[2608731])
            val _args_vforon_fn[2609099]:c_void_ptr[149] "temp"
            (2609101 'move' _args_vforon_fn[2609099](2609103 'cast_to_void_star' _args_foron_fn[2609085]))
            val _args_sizeon_fn[2609105]:int(64)[13] "temp"
            (2609107 'move' _args_sizeon_fn[2609105](2609109 'sizeof_bundle' _class_localson_fn[2205215]))
            (2654254 call chpl_taskRunningCntDec[93219])
            on(2609112 call _local_wrapon_fn[2612571] call_tmp[2609066] _args_vforon_fn[2609099] _args_sizeon_fn[2609105] _args_foron_fn[2609085])
            (2654256 call chpl_taskRunningCntInc[93198])
          }
        }
      }
      (2609120 '=' cur[2608129] curnext[2608637])
      val coerce_tmp[2609123]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2609125 'move' coerce_tmp[2609123](2609127 'cast' object[22] curnext[2608637]))
      const-val call_tmp[2609130]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2652383]:__wide_object[2581313] "temp"
      (2652386 'move' tmp[2652383] nil[44])
      (2609132 'move' call_tmp[2609130](2609134 'ptr_neq' coerce_tmp[2609123] tmp[2652383]))
      (2609137 'move' tmp[2608591] call_tmp[2609130])
      tmp[2608591]
    }
    (2609140 return initTemp[2607997])
  }
  function _new[1241169](ref arg group[1241178]:chpl_TaskErrors[168348]) : TaskErrors[169702] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    const-val local__str_literal_4780[2578626]:string[26] "temp"
    (2578627 'move' "casting int(64) less than 0 to uint(64)" "casting int(64) less than 0 to uint(64)")
    const-val local__str_literal_978[2578620]:string[26] "temp"
    (2578621 'move' "With a negative count, the range must have a last index." "With a negative count, the range must have a last index.")
    const-val local__str_literal_129[2578614]:string[26] "temp"
    (2578615 'move' "argument to ! is nil" "argument to ! is nil")
    val initTemp[1241171]:TaskErrors[169702] "dead after last mention" "temp"
    const-val call_tmp[1241215]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1241218 'move' call_tmp[1241215](1241229 'sizeof_bundle' TaskErrors[169702]))
    const-val cast_tmp[1241232]:c_void_ptr[149] "dead after last mention" "temp"
    (1241234 'move' cast_tmp[1241232](1241186 call chpl_here_alloc[187788] call_tmp[1241215] 41))
    (1241189 'move' initTemp[1241171](1241236 'cast' TaskErrors[169702] cast_tmp[1241232]))
    (1241191 'setcid' initTemp[1241171])
    val super_tmp[2313487]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    val tmp[2631925]:Error[167984] "temp"
    (2313489 'move' tmp[2631925](2313491 '.v' initTemp[1241171] super[355819]))
    (2631928 'move' super_tmp[2313487] tmp[2631925])
    val super_tmp[2313494]:object[22] "dead after last mention" "temporary of super field" "temp"
    val tmp[2631931]:object[22] "temp"
    (2313496 'move' tmp[2631931](2313498 '.v' super_tmp[2313487] super[355807]))
    (2631934 'move' super_tmp[2313494] tmp[2631931])
    (2313501 'setcid' super_tmp[2313494])
    val call_tmp[2313503]:object[22] "dead at end of block" "maybe param" "temp"
    (2313505 'move' call_tmp[2313503](2313507 'cast' object[22] super_tmp[2313487]))
    (2313510 'setcid' call_tmp[2313503])
    val init_coerce_tmp[2313512]:Error[167984] "dead after last mention" "temp"
    (2313514 'move' init_coerce_tmp[2313512](2313516 'cast' Error[167984] nil[44]))
    val tmp[2631937]:__wide_Error[2581418] "temp"
    (2631940 'move' tmp[2631937] init_coerce_tmp[2313512])
    (2313519 '.=' super_tmp[2313487] _next[167912] tmp[2631937])
    (2313523 '.=' super_tmp[2313487] thrownLine[167917] 0)
    (2313527 '.=' super_tmp[2313487] thrownFileId[167925] 0)
    val tmp[2313531]:string[26] "dead after last mention" "temp"
    (2313534 call init[30763] tmp[2313531])
    (2313536 '.=' super_tmp[2313487] _msg[167930] tmp[2313531])
    (2313540 '.=' super_tmp[2313487] _hasThrowInfo[167936] 0)
    (2313544 'setcid' super_tmp[2313487])
    val call_tmp[2313546]:Error[167984] "dead at end of block" "maybe param" "temp"
    (2313548 'move' call_tmp[2313546](2313550 'cast' Error[167984] initTemp[1241171]))
    (2313553 'setcid' call_tmp[2313546])
    val head[2313555]:__wide_Error[2581418] "dead at end of block" "insert auto destroy"
    val coerce_tmp[2313557]:__wide_Error[2581418] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2313559 'move' coerce_tmp[2313557](2313561 '.v' group[1241178] _head[168266]))
    (2313564 '=' head[2313555] coerce_tmp[2313557])
    (2313567 'noop')
    val tmp[2313568]:Error[167984] "temp"
    (2313570 'move' tmp[2313568](2313572 'cast' Error[167984] nil[44]))
    val tmp[2631943]:__wide_Error[2581418] "temp"
    (2631946 'move' tmp[2631943] tmp[2313568])
    (2313575 '.=' group[1241178] _head[168266] tmp[2631943])
    (2313579 '.=' initTemp[1241171] nErrors[168363] 0)
    val tmp[2313583]:c_ptr(owned Error?)[1235804] "dead after last mention" "temp"
    (2313585 'move' tmp[2313583](2313587 'cast' c_ptr(owned Error?)[1235804] nil[44]))
    (2313590 '.=' initTemp[1241171] errorsArray[168374] tmp[2313583])
    (2313594 'setcid' initTemp[1241171])
    val cur[2313596]:__wide_Error[2581418] "dead at end of block" "insert auto destroy" "split inited"
    val n[2313598]:int(64)[13] "dead at end of block" "insert auto destroy"
    (2313600 'move' n[2313598] 0)
    (2313603 'move' cur[2313596] coerce_tmp[2313557])
    val tmp[2313606]:bool[10] "dead after last mention" "temp"
    val coerce_tmp[2313608]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2313610 'move' coerce_tmp[2313608](2313612 'cast' object[22] coerce_tmp[2313557]))
    const-val call_tmp[2313615]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2631949]:__wide_object[2581313] "temp"
    (2631952 'move' tmp[2631949] nil[44])
    (2313617 'move' call_tmp[2313615](2313619 'ptr_neq' coerce_tmp[2313608] tmp[2631949]))
    (2313622 'move' tmp[2313606] call_tmp[2313615])
    WhileDo[2313625]
    {
      val coerce_tmp[2313627]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2313629 'move' coerce_tmp[2313627](2313631 'cast' object[22] cur[2313596]))
      const-val call_tmp[2313634]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2631955]:__wide_object[2581313] "temp"
      (2631958 'move' tmp[2631955] nil[44])
      (2313636 'move' call_tmp[2313634](2313638 'ptr_eq' coerce_tmp[2313627] tmp[2631955]))
      if call_tmp[2313634]
      {
        (2313644 call nilCheckHalt[210238] "argument to ! is nil")
      }
      val coerce_tmp[2313647]:__wide_Error[2581418] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2313649 'move' coerce_tmp[2313647] cur[2313596])
      val curnext[2313652]:__wide_Error[2581418] "dead at end of block" "insert auto destroy"
      val coerce_tmp[2313654]:__wide_Error[2581418] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (2313656 'move' coerce_tmp[2313654](2313658 '.v' coerce_tmp[2313647] _next[167912]))
      (2313661 '=' curnext[2313652] coerce_tmp[2313654])
      (2313664 'noop')
      val _formal_type_tmp_[2313670]:TaskErrors[169702] "temp"
      val ret[2313672]:__wide_TaskErrors[2581446] "dead after last mention" "RVV" "temp"
      val coerce_tmp[2313674]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2313676 'move' coerce_tmp[2313674](2313678 'cast' object[22] cur[2313596]))
      const-val call_tmp[2313681]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2631961]:__wide_object[2581313] "temp"
      (2631964 'move' tmp[2631961] nil[44])
      (2313683 'move' call_tmp[2313681](2313685 'ptr_eq' coerce_tmp[2313674] tmp[2631961]))
      if call_tmp[2313681]
      {
        val tmp[2585041]:TaskErrors[169702] "temp"
        (2585044 'move' tmp[2585041](2313692 'cast' TaskErrors[169702] nil[44]))
        (2313690 'move' ret[2313672] tmp[2585041])
        gotoReturn _end__cast[2313708] _end__cast[2313708]
      }
      val call_tmp[2313698]:__wide_TaskErrors[2581446] "dead at end of block" "maybe param" "temp"
      (2313700 'move' call_tmp[2313698](2313702 'dynamic_cast' _formal_type_tmp_[2313670] cur[2313596]))
      (2313705 'move' ret[2313672] call_tmp[2313698])
      label _end__cast[2313708]
      val coerce_tmp[2313715]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2313717 'move' coerce_tmp[2313715](2313719 'cast' object[22] ret[2313672]))
      const-val call_tmp[2313722]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2631967]:__wide_object[2581313] "temp"
      (2631970 'move' tmp[2631967] nil[44])
      (2313724 'move' call_tmp[2313722](2313726 'ptr_eq' coerce_tmp[2313715] tmp[2631967]))
      if call_tmp[2313722]
      {
        ref i_lhs[2313731]:int(64)[13] "temp"
        (2313733 'move' i_lhs[2313731](2313735 'set reference' n[2313598]))
        (2313737 '+=' i_lhs[2313731] 1)
      }
      {
        const-val _ic__F0_this[2535494]:__wide_TaskErrors[2581446] "temp"
        (2313793 'move' _ic__F0_this[2535494] ret[2313672])
        const-val this[2313802]:__wide_TaskErrors[2581446] "temp"
        (2313804 'move' this[2313802] ret[2313672])
        const-val coerce_tmp[2313811]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        val tmp[2631973]:int(64)[13] "temp"
        (2313813 'move' tmp[2631973](2313815 '.v' this[2313802] nErrors[168363]))
        (2631976 'move' coerce_tmp[2313811] tmp[2631973])
        const-val call_tmp[2313983]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2313985 'move' call_tmp[2313983](2313987 '<' coerce_tmp[2313811] 0))
        if call_tmp[2313983]
        {
          (2313993 call boundsCheckHalt[210254] "With a negative count, the range must have a last index.")
        }
        val tmp_x0[2552427]:int(64)[13] "temp"
        val tmp_x1[2552429]:int(64)[13] "temp"
        const-val call_tmp[2314007]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2314009 'move' call_tmp[2314007](2314011 '==' coerce_tmp[2313811] 0))
        if call_tmp[2314007]
        {
          const-val call_tmp[2314023]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2314025 'move' call_tmp[2314023](2314027 'cast' uint(64)[115] 0))
          const-val call_tmp[2314030]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2314032 'move' call_tmp[2314030](2314034 '-' call_tmp[2314023] 1))
          const-val call_tmp[2314037]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2314039 'move' call_tmp[2314037](2314041 'cast' int(64)[13] call_tmp[2314030]))
          (2552435 'move' tmp_x0[2552427] 0)
          (2552440 'move' tmp_x1[2552429] call_tmp[2314037])
        }
        {
          const-val call_tmp[2314072]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2314074 'move' call_tmp[2314072](2314076 '-' coerce_tmp[2313811] 1))
          const-val call_tmp[2314086]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2314088 'move' call_tmp[2314086](2314090 '+' 0 call_tmp[2314072]))
          (2552445 'move' tmp_x0[2552427] 0)
          (2552450 'move' tmp_x1[2552429] call_tmp[2314086])
        }
        (2314117 'noop')
        (2314125 'noop')
        (2314133 'noop')
        const-val _ic__F1_high[2543848]:int(64)[13] "temp"
        (2314201 'move' _ic__F1_high[2543848] tmp_x1[2552429])
        val i[2314208]:int(64)[13] "dead at end of block" "insert auto destroy"
        (2314210 'move' i[2314208] 0)
        (2314242 call chpl_checkIfRangeIterWillOverflow[1096265] tmp_x0[2552427] tmp_x1[2552429] 1 tmp_x0[2552427] tmp_x1[2552429] 1)
        const-val this[2314281]:__wide_TaskErrors[2581446] "temp"
        (2314283 'move' this[2314281] _ic__F0_this[2535494])
        val coerce_tmp[2314288]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        val tmp[2631979]:c_ptr(owned Error?)[1235804] "temp"
        (2314290 'move' tmp[2631979](2314292 '.v' this[2314281] errorsArray[168374]))
        (2631982 'move' coerce_tmp[2314288] tmp[2631979])
        CForLoop[2314249]
        {
          ref call_tmp[2314295]:owned Error?[966602] "dead after last mention" "maybe param" "temp"
          (2314297 'move' call_tmp[2314295](2314299 'array_get' coerce_tmp[2314288] i[2314208]))
          val coerce_tmp[2314302]:__wide_Error[2581418] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2314304 'move' coerce_tmp[2314302](2314307 call borrow[1236017] call_tmp[2314295]))
          val coerce_tmp[2314309]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2314311 'move' coerce_tmp[2314309](2314313 'cast' object[22] coerce_tmp[2314302]))
          const-val call_tmp[2314316]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val tmp[2631985]:__wide_object[2581313] "temp"
          (2631988 'move' tmp[2631985] nil[44])
          (2314318 'move' call_tmp[2314316](2314320 'ptr_neq' coerce_tmp[2314309] tmp[2631985]))
          if call_tmp[2314316]
          {
            const-val this[2314325]:__wide_TaskErrors[2581446] "temp"
            (2314327 'move' this[2314325] _ic__F0_this[2535494])
            val coerce_tmp[2314332]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            val tmp[2631991]:c_ptr(owned Error?)[1235804] "temp"
            (2314334 'move' tmp[2631991](2314336 '.v' this[2314325] errorsArray[168374]))
            (2631994 'move' coerce_tmp[2314332] tmp[2631991])
            ref call_tmp[2314339]:owned Error?[966602] "dead after last mention" "maybe param" "temp"
            (2314341 'move' call_tmp[2314339](2314343 'array_get' coerce_tmp[2314332] i[2314208]))
            val coerce_tmp[2314346]:__wide_Error[2581418] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2314348 'move' coerce_tmp[2314346](2314351 call borrow[1236017] call_tmp[2314339]))
            val coerce_tmp[2314353]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2314355 'move' coerce_tmp[2314353](2314357 'cast' object[22] coerce_tmp[2314346]))
            const-val call_tmp[2314360]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            val tmp[2631997]:__wide_object[2581313] "temp"
            (2632000 'move' tmp[2631997] nil[44])
            (2314362 'move' call_tmp[2314360](2314364 'ptr_neq' coerce_tmp[2314353] tmp[2631997]))
            if call_tmp[2314360]
            {
              ref i_lhs[2314369]:int(64)[13] "temp"
              (2314371 'move' i_lhs[2314369](2314373 'set reference' n[2313598]))
              (2314375 '+=' i_lhs[2314369] 1)
            }
          }
          {
            (2314258 '=' i[2314208] tmp_x0[2552427])
          }
          {
            (2314269 '<=' i[2314208] _ic__F1_high[2543848])
          }
          {
            (2314273 '+=' i[2314208] 1)
          }
        }
        label _endchpl_direct_param_stride_range_iter[2314380]
        label _endchpl_direct_counted_range_iter_helper[2314391]
        label _endchpl_direct_counted_range_iter[2314402]
        label _endthese[2314413]
      }
      (2314425 '=' cur[2313596] curnext[2313652])
      val coerce_tmp[2314428]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2314430 'move' coerce_tmp[2314428](2314432 'cast' object[22] curnext[2313652]))
      const-val call_tmp[2314435]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2632003]:__wide_object[2581313] "temp"
      (2632006 'move' tmp[2632003] nil[44])
      (2314437 'move' call_tmp[2314435](2314439 'ptr_neq' coerce_tmp[2314428] tmp[2632003]))
      (2314442 'move' tmp[2313606] call_tmp[2314435])
      tmp[2313606]
    }
    (2314445 '.=' initTemp[1241171] nErrors[168363] n[2313598])
    const-val call_tmp[2314449]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2314451 'move' call_tmp[2314449](2314453 '<' n[2313598] 0))
    if call_tmp[2314449]
    {
      (2314459 call safeCastCheckHalt[210302] "casting int(64) less than 0 to uint(64)")
    }
    const-val call_tmp[2314462]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2314464 'move' call_tmp[2314462](2314466 'cast' uint(64)[115] n[2313598]))
    const-val call_tmp[2314469]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2314471 'move' call_tmp[2314469](2314474 call sizeof[1238678] owned Error?[966602]))
    const-val call_tmp[2314476]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2314478 'move' call_tmp[2314476](2314480 '*' call_tmp[2314462] call_tmp[2314469]))
    const-val call_tmp[2314483]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2314485 'move' call_tmp[2314483](2314488 call offset_ARRAY_ELEMENTS[207445]))
    const-val call_tmp[2314489]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2314491 'move' call_tmp[2314489](2314494 call chpl_here_calloc[1238708] call_tmp[2314476] 1 call_tmp[2314483]))
    val call_tmp[2314498]:c_ptr(owned Error?)[1235804] "dead after last mention" "expr temp" "maybe param" "temp"
    (2314500 'move' call_tmp[2314498](2314502 'cast' c_ptr(owned Error?)[1235804] call_tmp[2314489]))
    (2314505 '.=' initTemp[1241171] errorsArray[168374] call_tmp[2314498])
    val idx[2314509]:int(64)[13] "dead at end of block" "insert auto destroy"
    (2314511 'move' idx[2314509] 0)
    (2314514 '=' cur[2313596] head[2313555])
    val tmp[2314517]:bool[10] "dead after last mention" "temp"
    val coerce_tmp[2314519]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2314521 'move' coerce_tmp[2314519](2314523 'cast' object[22] head[2313555]))
    const-val call_tmp[2314526]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2632009]:__wide_object[2581313] "temp"
    (2632012 'move' tmp[2632009] nil[44])
    (2314528 'move' call_tmp[2314526](2314530 'ptr_neq' coerce_tmp[2314519] tmp[2632009]))
    (2314533 'move' tmp[2314517] call_tmp[2314526])
    WhileDo[2314536]
    {
      val coerce_tmp[2314538]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2314540 'move' coerce_tmp[2314538](2314542 'cast' object[22] cur[2313596]))
      const-val call_tmp[2314545]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2632015]:__wide_object[2581313] "temp"
      (2632018 'move' tmp[2632015] nil[44])
      (2314547 'move' call_tmp[2314545](2314549 'ptr_eq' coerce_tmp[2314538] tmp[2632015]))
      if call_tmp[2314545]
      {
        (2314555 call nilCheckHalt[210238] "argument to ! is nil")
      }
      val coerce_tmp[2314558]:__wide_Error[2581418] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2314560 'move' coerce_tmp[2314558] cur[2313596])
      val curnext[2314563]:__wide_Error[2581418] "dead at end of block" "insert auto destroy"
      val coerce_tmp[2314565]:__wide_Error[2581418] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (2314567 'move' coerce_tmp[2314565](2314569 '.v' coerce_tmp[2314558] _next[167912]))
      (2314572 '=' curnext[2314563] coerce_tmp[2314565])
      (2314575 'noop')
      val coerce_tmp[2314576]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2314578 'move' coerce_tmp[2314576](2314580 'cast' object[22] cur[2313596]))
      const-val call_tmp[2314583]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2632021]:__wide_object[2581313] "temp"
      (2632024 'move' tmp[2632021] nil[44])
      (2314585 'move' call_tmp[2314583](2314587 'ptr_eq' coerce_tmp[2314576] tmp[2632021]))
      if call_tmp[2314583]
      {
        (2314593 call nilCheckHalt[210238] "argument to ! is nil")
      }
      val coerce_tmp[2314596]:__wide_Error[2581418] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2314598 'move' coerce_tmp[2314596] cur[2313596])
      val tmp[2314601]:Error[167984] "temp"
      (2314603 'move' tmp[2314601](2314605 'cast' Error[167984] nil[44]))
      val tmp[2632027]:__wide_Error[2581418] "temp"
      (2632030 'move' tmp[2632027] tmp[2314601])
      (2314608 '.=' coerce_tmp[2314596] _next[167912] tmp[2632027])
      val _formal_type_tmp_[2314617]:TaskErrors[169702] "temp"
      val ret[2314619]:__wide_TaskErrors[2581446] "dead after last mention" "RVV" "temp"
      val coerce_tmp[2314621]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2314623 'move' coerce_tmp[2314621](2314625 'cast' object[22] cur[2313596]))
      const-val call_tmp[2314628]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2632033]:__wide_object[2581313] "temp"
      (2632036 'move' tmp[2632033] nil[44])
      (2314630 'move' call_tmp[2314628](2314632 'ptr_eq' coerce_tmp[2314621] tmp[2632033]))
      if call_tmp[2314628]
      {
        val tmp[2585046]:TaskErrors[169702] "temp"
        (2585049 'move' tmp[2585046](2314639 'cast' TaskErrors[169702] nil[44]))
        (2314637 'move' ret[2314619] tmp[2585046])
        gotoReturn _end__cast[2314655] _end__cast[2314655]
      }
      val call_tmp[2314645]:__wide_TaskErrors[2581446] "dead at end of block" "maybe param" "temp"
      (2314647 'move' call_tmp[2314645](2314649 'dynamic_cast' _formal_type_tmp_[2314617] cur[2313596]))
      (2314652 'move' ret[2314619] call_tmp[2314645])
      label _end__cast[2314655]
      val asTaskErr[2314657]:__wide_TaskErrors[2581446] "dead at end of block" "insert auto destroy"
      (2314659 'move' asTaskErr[2314657] ret[2314619])
      val coerce_tmp[2314662]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2314664 'move' coerce_tmp[2314662](2314666 'cast' object[22] ret[2314619]))
      const-val call_tmp[2314669]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2632039]:__wide_object[2581313] "temp"
      (2632042 'move' tmp[2632039] nil[44])
      (2314671 'move' call_tmp[2314669](2314673 'ptr_eq' coerce_tmp[2314662] tmp[2632039]))
      if call_tmp[2314669]
      {
        val coerce_tmp[2314678]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        val tmp[2632045]:c_ptr(owned Error?)[1235804] "temp"
        (2314680 'move' tmp[2632045](2314682 '.v' initTemp[1241171] errorsArray[168374]))
        (2632048 'move' coerce_tmp[2314678] tmp[2632045])
        ref call_tmp[2314685]:owned Error?[966602] "dead after last mention" "maybe param" "temp"
        (2314687 'move' call_tmp[2314685](2314689 'array_get' coerce_tmp[2314678] idx[2314509]))
        val coerce_tmp[2314692]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2314694 'move' coerce_tmp[2314692](2314696 'cast' object[22] cur[2313596]))
        const-val call_tmp[2314699]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        val tmp[2632051]:__wide_object[2581313] "temp"
        (2632054 'move' tmp[2632051] nil[44])
        (2314701 'move' call_tmp[2314699](2314703 'ptr_eq' coerce_tmp[2314692] tmp[2632051]))
        if call_tmp[2314699]
        {
          (2314709 call nilCheckHalt[210238] "argument to ! is nil")
        }
        (2314713 call retain[1238964] call_tmp[2314685] cur[2313596])
        ref i_lhs[2314716]:int(64)[13] "temp"
        (2314718 'move' i_lhs[2314716](2314720 'set reference' idx[2314509]))
        (2314722 '+=' i_lhs[2314716] 1)
      }
      {
        const-val _ic__F0_this[2535517]:__wide_TaskErrors[2581446] "temp"
        (2314778 'move' _ic__F0_this[2535517] ret[2314619])
        const-val this[2314787]:__wide_TaskErrors[2581446] "temp"
        (2314789 'move' this[2314787] ret[2314619])
        const-val coerce_tmp[2314796]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        val tmp[2632057]:int(64)[13] "temp"
        (2314798 'move' tmp[2632057](2314800 '.v' this[2314787] nErrors[168363]))
        (2632060 'move' coerce_tmp[2314796] tmp[2632057])
        const-val call_tmp[2314968]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2314970 'move' call_tmp[2314968](2314972 '<' coerce_tmp[2314796] 0))
        if call_tmp[2314968]
        {
          (2314978 call boundsCheckHalt[210254] "With a negative count, the range must have a last index.")
        }
        val tmp_x0[2552485]:int(64)[13] "temp"
        val tmp_x1[2552487]:int(64)[13] "temp"
        const-val call_tmp[2314992]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2314994 'move' call_tmp[2314992](2314996 '==' coerce_tmp[2314796] 0))
        if call_tmp[2314992]
        {
          const-val call_tmp[2315008]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2315010 'move' call_tmp[2315008](2315012 'cast' uint(64)[115] 0))
          const-val call_tmp[2315015]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2315017 'move' call_tmp[2315015](2315019 '-' call_tmp[2315008] 1))
          const-val call_tmp[2315022]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2315024 'move' call_tmp[2315022](2315026 'cast' int(64)[13] call_tmp[2315015]))
          (2552493 'move' tmp_x0[2552485] 0)
          (2552498 'move' tmp_x1[2552487] call_tmp[2315022])
        }
        {
          const-val call_tmp[2315057]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2315059 'move' call_tmp[2315057](2315061 '-' coerce_tmp[2314796] 1))
          const-val call_tmp[2315071]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2315073 'move' call_tmp[2315071](2315075 '+' 0 call_tmp[2315057]))
          (2552503 'move' tmp_x0[2552485] 0)
          (2552508 'move' tmp_x1[2552487] call_tmp[2315071])
        }
        (2315102 'noop')
        (2315110 'noop')
        (2315118 'noop')
        const-val _ic__F1_high[2543867]:int(64)[13] "temp"
        (2315186 'move' _ic__F1_high[2543867] tmp_x1[2552487])
        val i[2315193]:int(64)[13] "dead at end of block" "insert auto destroy"
        (2315195 'move' i[2315193] 0)
        (2315227 call chpl_checkIfRangeIterWillOverflow[1096265] tmp_x0[2552485] tmp_x1[2552487] 1 tmp_x0[2552485] tmp_x1[2552487] 1)
        const-val this[2315266]:__wide_TaskErrors[2581446] "temp"
        (2315268 'move' this[2315266] _ic__F0_this[2535517])
        val coerce_tmp[2315273]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        val tmp[2632063]:c_ptr(owned Error?)[1235804] "temp"
        (2315275 'move' tmp[2632063](2315277 '.v' this[2315266] errorsArray[168374]))
        (2632066 'move' coerce_tmp[2315273] tmp[2632063])
        CForLoop[2315234]
        {
          ref call_tmp[2315280]:owned Error?[966602] "dead after last mention" "maybe param" "temp"
          (2315282 'move' call_tmp[2315280](2315284 'array_get' coerce_tmp[2315273] i[2315193]))
          val coerce_tmp[2315287]:__wide_Error[2581418] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2315289 'move' coerce_tmp[2315287](2315292 call borrow[1236017] call_tmp[2315280]))
          val coerce_tmp[2315294]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2315296 'move' coerce_tmp[2315294](2315298 'cast' object[22] coerce_tmp[2315287]))
          const-val call_tmp[2315301]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val tmp[2632069]:__wide_object[2581313] "temp"
          (2632072 'move' tmp[2632069] nil[44])
          (2315303 'move' call_tmp[2315301](2315305 'ptr_neq' coerce_tmp[2315294] tmp[2632069]))
          if call_tmp[2315301]
          {
            const-val this[2315310]:__wide_TaskErrors[2581446] "temp"
            (2315312 'move' this[2315310] _ic__F0_this[2535517])
            val coerce_tmp[2315317]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            val tmp[2632075]:c_ptr(owned Error?)[1235804] "temp"
            (2315319 'move' tmp[2632075](2315321 '.v' this[2315310] errorsArray[168374]))
            (2632078 'move' coerce_tmp[2315317] tmp[2632075])
            ref call_tmp[2315324]:owned Error?[966602] "dead after last mention" "maybe param" "temp"
            (2315326 'move' call_tmp[2315324](2315328 'array_get' coerce_tmp[2315317] i[2315193]))
            val coerce_tmp[2315331]:__wide_Error[2581418] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2315333 'move' coerce_tmp[2315331](2315336 call borrow[1236017] call_tmp[2315324]))
            val coerce_tmp[2315338]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2315340 'move' coerce_tmp[2315338](2315342 'cast' object[22] coerce_tmp[2315331]))
            const-val call_tmp[2315345]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            val tmp[2632081]:__wide_object[2581313] "temp"
            (2632084 'move' tmp[2632081] nil[44])
            (2315347 'move' call_tmp[2315345](2315349 'ptr_neq' coerce_tmp[2315338] tmp[2632081]))
            if call_tmp[2315345]
            {
              val coerce_tmp[2315354]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              val tmp[2632087]:c_ptr(owned Error?)[1235804] "temp"
              (2315356 'move' tmp[2632087](2315358 '.v' initTemp[1241171] errorsArray[168374]))
              (2632090 'move' coerce_tmp[2315354] tmp[2632087])
              ref call_tmp[2315361]:owned Error?[966602] "dead after last mention" "maybe param" "temp"
              (2315363 'move' call_tmp[2315361](2315365 'array_get' coerce_tmp[2315354] idx[2314509]))
              (2315369 call =[1239246] call_tmp[2315361] call_tmp[2315324])
              ref i_lhs[2315372]:int(64)[13] "temp"
              (2315374 'move' i_lhs[2315372](2315376 'set reference' idx[2314509]))
              (2315378 '+=' i_lhs[2315372] 1)
            }
          }
          {
            (2315243 '=' i[2315193] tmp_x0[2552485])
          }
          {
            (2315254 '<=' i[2315193] _ic__F1_high[2543867])
          }
          {
            (2315258 '+=' i[2315193] 1)
          }
        }
        label _endchpl_direct_param_stride_range_iter[2315383]
        label _endchpl_direct_counted_range_iter_helper[2315394]
        label _endchpl_direct_counted_range_iter[2315405]
        label _endthese[2315416]
        val coerce_tmp[2315427]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2315429 'move' coerce_tmp[2315427](2315431 'cast' object[22] asTaskErr[2314657]))
        const-val call_tmp[2315434]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        val tmp[2632093]:__wide_object[2581313] "temp"
        (2632096 'move' tmp[2632093] nil[44])
        (2315436 'move' call_tmp[2315434](2315438 'ptr_neq' coerce_tmp[2315427] tmp[2632093]))
        if call_tmp[2315434]
        {
          (2315444 call deinit[168832] asTaskErr[2314657])
          const-val call_tmp[2315448]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
          (2315450 'move' call_tmp[2315448](2315452 '_wide_get_locale' asTaskErr[2314657]))
          val isdirect[2315457]:bool[10] "temp"
          (2315459 'move' isdirect[2315457](2315462 call chpl_doDirectExecuteOn[187469] call_tmp[2315448]))
          if isdirect[2315457]
          {
            (2315467 call on_fn[1240423] asTaskErr[2314657])
          }
          {
            val _args_foron_fn[2315470]:_class_localson_fn[2205215] "temp"
            (2315472 'move' _args_foron_fn[2315470](2315474 'stack allocate class' _class_localson_fn[2205215]))
            (2315476 '.=' _args_foron_fn[2315470] _0_tmp[2205218] call_tmp[2315448])
            (2315480 '.=' _args_foron_fn[2315470] _1_arg[2205220] asTaskErr[2314657])
            val _args_vforon_fn[2315484]:c_void_ptr[149] "temp"
            (2315486 'move' _args_vforon_fn[2315484](2315488 'cast_to_void_star' _args_foron_fn[2315470]))
            val _args_sizeon_fn[2315490]:int(64)[13] "temp"
            (2315492 'move' _args_sizeon_fn[2315490](2315494 'sizeof_bundle' _class_localson_fn[2205215]))
            (2653402 call chpl_taskRunningCntDec[93219])
            on(2315497 call wrapon_fn[2205249] call_tmp[2315448] _args_vforon_fn[2315484] _args_sizeon_fn[2315490] _args_foron_fn[2315470])
            (2653404 call chpl_taskRunningCntInc[93198])
          }
        }
      }
      (2315505 '=' cur[2313596] curnext[2314563])
      val coerce_tmp[2315508]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2315510 'move' coerce_tmp[2315508](2315512 'cast' object[22] curnext[2314563]))
      const-val call_tmp[2315515]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2632099]:__wide_object[2581313] "temp"
      (2632102 'move' tmp[2632099] nil[44])
      (2315517 'move' call_tmp[2315515](2315519 'ptr_neq' coerce_tmp[2315508] tmp[2632099]))
      (2315522 'move' tmp[2314517] call_tmp[2315515])
      tmp[2314517]
    }
    (1241210 return initTemp[1241171])
  }
  function _new[1830141](const in arg err[1830150]:Error[167984]) : TaskErrors[169702] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    const-val local__str_literal_4780[2580128]:string[26] "temp"
    (2580129 'move' "casting int(64) less than 0 to uint(64)" "casting int(64) less than 0 to uint(64)")
    val initTemp[1830143]:TaskErrors[169702] "dead after last mention" "temp"
    const-val call_tmp[1830185]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1830188 'move' call_tmp[1830185](1830197 'sizeof_bundle' TaskErrors[169702]))
    const-val cast_tmp[1830200]:c_void_ptr[149] "dead after last mention" "temp"
    (1830202 'move' cast_tmp[1830200](1830156 call chpl_here_alloc[187788] call_tmp[1830185] 41))
    (1830159 'move' initTemp[1830143](1830204 'cast' TaskErrors[169702] cast_tmp[1830200]))
    (1830161 'setcid' initTemp[1830143])
    val super_tmp[2315548]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    val tmp[2632105]:Error[167984] "temp"
    (2315550 'move' tmp[2632105](2315552 '.v' initTemp[1830143] super[355819]))
    (2632108 'move' super_tmp[2315548] tmp[2632105])
    val super_tmp[2315555]:object[22] "dead after last mention" "temporary of super field" "temp"
    val tmp[2632111]:object[22] "temp"
    (2315557 'move' tmp[2632111](2315559 '.v' super_tmp[2315548] super[355807]))
    (2632114 'move' super_tmp[2315555] tmp[2632111])
    (2315562 'setcid' super_tmp[2315555])
    val call_tmp[2315564]:object[22] "dead at end of block" "maybe param" "temp"
    (2315566 'move' call_tmp[2315564](2315568 'cast' object[22] super_tmp[2315548]))
    (2315571 'setcid' call_tmp[2315564])
    val init_coerce_tmp[2315573]:Error[167984] "dead after last mention" "temp"
    (2315575 'move' init_coerce_tmp[2315573](2315577 'cast' Error[167984] nil[44]))
    val tmp[2632117]:__wide_Error[2581418] "temp"
    (2632120 'move' tmp[2632117] init_coerce_tmp[2315573])
    (2315580 '.=' super_tmp[2315548] _next[167912] tmp[2632117])
    (2315584 '.=' super_tmp[2315548] thrownLine[167917] 0)
    (2315588 '.=' super_tmp[2315548] thrownFileId[167925] 0)
    val tmp[2315592]:string[26] "dead after last mention" "temp"
    (2315595 call init[30763] tmp[2315592])
    (2315597 '.=' super_tmp[2315548] _msg[167930] tmp[2315592])
    (2315601 '.=' super_tmp[2315548] _hasThrowInfo[167936] 0)
    (2315605 'setcid' super_tmp[2315548])
    val call_tmp[2315607]:Error[167984] "dead at end of block" "maybe param" "temp"
    (2315609 'move' call_tmp[2315607](2315611 'cast' Error[167984] initTemp[1830143]))
    (2315614 'setcid' call_tmp[2315607])
    (2315616 '.=' initTemp[1830143] nErrors[168363] 1)
    const-val call_tmp[2315625]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2315627 'move' call_tmp[2315625](2315629 '<' 1 0))
    if call_tmp[2315625]
    {
      (2315635 call safeCastCheckHalt[210302] "casting int(64) less than 0 to uint(64)")
    }
    const-val call_tmp[2315638]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2315640 'move' call_tmp[2315638](2315642 'cast' uint(64)[115] 1))
    const-val call_tmp[2315645]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2315647 'move' call_tmp[2315645](2315650 call sizeof[1238678] owned Error?[966602]))
    const-val call_tmp[2315652]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2315654 'move' call_tmp[2315652](2315656 '*' call_tmp[2315638] call_tmp[2315645]))
    const-val call_tmp[2315659]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2315661 'move' call_tmp[2315659](2315664 call offset_ARRAY_ELEMENTS[207445]))
    const-val call_tmp[2315665]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2315667 'move' call_tmp[2315665](2315670 call chpl_here_calloc[1238708] call_tmp[2315652] 1 call_tmp[2315659]))
    val call_tmp[2315674]:c_ptr(owned Error?)[1235804] "dead after last mention" "expr temp" "maybe param" "temp"
    (2315676 'move' call_tmp[2315674](2315678 'cast' c_ptr(owned Error?)[1235804] call_tmp[2315665]))
    (2315681 '.=' initTemp[1830143] errorsArray[168374] call_tmp[2315674])
    (2315685 'setcid' initTemp[1830143])
    val coerce_tmp[2315687]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2315689 'move' coerce_tmp[2315687] err[1830150])
    val tmp[2315692]:Error[167984] "temp"
    (2315694 'move' tmp[2315692](2315696 'cast' Error[167984] nil[44]))
    val tmp[2632123]:__wide_Error[2581418] "temp"
    (2632126 'move' tmp[2632123] tmp[2315692])
    (2315699 '.=' coerce_tmp[2315687] _next[167912] tmp[2632123])
    val coerce_tmp[2315703]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2632129]:c_ptr(owned Error?)[1235804] "temp"
    (2315705 'move' tmp[2632129](2315707 '.v' initTemp[1830143] errorsArray[168374]))
    (2632132 'move' coerce_tmp[2315703] tmp[2632129])
    ref call_tmp[2315710]:owned Error?[966602] "dead after last mention" "maybe param" "temp"
    (2315712 'move' call_tmp[2315710](2315714 'array_get' coerce_tmp[2315703] 0))
    const-val tmp[2632135]:__wide_Error[2581418] "temp"
    (2632138 'move' tmp[2632135] err[1830150])
    (2315718 call retain[1238964] call_tmp[2315710] tmp[2632135])
    (1830180 return initTemp[1830143])
  }
  type TaskErrors[169702] val super[355819]:Error[167984] "super class" val nErrors[168363]:int(64)[13] "no doc" val errorsArray[168374]:c_ptr(owned Error?)[1235804] "no doc"
  function _local_chpl_error_type_name[2610620](const in arg err[2610622]:__wide_Error[2581418], ref arg _retArg[2610624]:string[26]) : void[4] "fn returns via _retArg" "local fn" "no doc" "resolved"
  {
    const-val call_tmp[2610627]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (2613497 'local_check' err[2610622] c"cannot access remote data in local block")
    const-val local_err[2613494]:Error[167984] "temp"
    (2613500 'move' local_err[2613494] err[2610622])
    (2610629 'move' call_tmp[2610627](2610631 'getcid' local_err[2613494]))
    const-val call_tmp[2610633]:c_string[19] "dead at end of block" "maybe param" "temp"
    (2610635 'move' call_tmp[2610633](2610637 'class name by id' call_tmp[2610627]))
    const-val nameS[2610639]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val error[2610641]:__wide_Error[2581418] "error variable" "temp"
    (2610643 'move' error[2610641] nil[44])
    const-val call_tmp[2610646]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2610648 'move' call_tmp[2610646](2610650 'string_length_bytes' call_tmp[2610633]))
    val errorExists[2610652]:bool[10] "temp"
    (2610654 'move' errorExists[2610652](2610656 '!=' error[2610641] nil[44]))
    if errorExists[2610652]
    {
      gotoErrorHandling handler[2610754] handler[2610754]
    }
    const-val ret[2610664]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[2610666]:c_ptr(uint(8))[937612] "dead after last mention" "expr temp" "maybe param" "temp"
    (2610668 'move' call_tmp[2610666](2610670 'cast' c_ptr(uint(8))[937612] call_tmp[2610633]))
    val error[2610673]:__wide_Error[2581418] "error variable" "temp"
    (2610675 'move' error[2610673] nil[44])
    const-val ret[2610678]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2610680]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2610682]:__wide_Error[2581418] "error variable" "temp"
    (2610684 'move' error[2610682] nil[44])
    const-val ret_tmp[2610687]:string[26] "temp"
    ref tmp[2652623]:__wide_Error[2581418] "temp"
    (2652627 'move' tmp[2652623](2652625 'set reference' error[2610682]))
    (2610690 call _local_decodeByteBuffer[2600997] call_tmp[2610666] call_tmp[2610646] strict[173692] tmp[2652623] ret_tmp[2610687])
    (2610696 'move' call_tmp[2610680] ret_tmp[2610687])
    val errorExists[2610699]:bool[10] "temp"
    (2610701 'move' errorExists[2610699](2610703 '!=' error[2610682] nil[44]))
    if errorExists[2610699]
    {
      (2610708 '=' error[2610673] error[2610682])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2610717] _endcreateStringWithNewBuffer[2610717]
    }
    (2610714 'move' ret[2610678] call_tmp[2610680])
    label _endcreateStringWithNewBuffer[2610717]
    val errorExists[2610719]:bool[10] "temp"
    (2610721 'move' errorExists[2610719](2610723 '!=' error[2610673] nil[44]))
    if errorExists[2610719]
    {
      (2610728 '=' error[2610641] error[2610673])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2610737] _endcreateStringWithNewBuffer[2610737]
    }
    (2610734 'move' ret[2610664] ret[2610678])
    label _endcreateStringWithNewBuffer[2610737]
    val errorExists[2610739]:bool[10] "temp"
    (2610741 'move' errorExists[2610739](2610743 '!=' error[2610641] nil[44]))
    if errorExists[2610739]
    {
      gotoErrorHandling handler[2610754] handler[2610754]
    }
    (2610751 'move' nameS[2610639] ret[2610664])
    label handler[2610754]
    val errorExists[2610756]:bool[10] "temp"
    (2610758 'move' errorExists[2610756](2610760 '!=' error[2610641] nil[44]))
    if errorExists[2610756]
    {
      (2610766 call _local_chpl_uncaught_error[2602078] error[2610641])
    }
    label _end_chpl_error_type_name[2610769]
    (2610771 '=' _retArg[2610624] nameS[2610639])
    (2610774 return _void[55])
  }
  function chpl_error_type_name[169752](const in arg err[169749]:__wide_Error[2581418], ref arg _retArg[1906966]:string[26]) : void[4] "fn returns via _retArg" "no doc" "resolved"
  {
    const-val call_tmp[680344]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (680347 'move' call_tmp[680344](169774 'getcid' err[169749]))
    const-val call_tmp[680349]:c_string[19] "dead at end of block" "maybe param" "temp"
    (680352 'move' call_tmp[680349](169800 'class name by id' call_tmp[680344]))
    const-val nameS[169806]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val error[1883568]:__wide_Error[2581418] "error variable" "temp"
    (1883584 'move' error[1883568] nil[44])
    const-val call_tmp[2325389]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2325391 'move' call_tmp[2325389](2325393 'string_length_bytes' call_tmp[680349]))
    val errorExists[2221760]:bool[10] "temp"
    (2221765 'move' errorExists[2221760](2221762 '!=' error[1883568] nil[44]))
    if errorExists[2221760]
    {
      gotoErrorHandling handler[1883569] handler[1883569]
    }
    const-val ret[2257541]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[2257543]:c_ptr(uint(8))[937612] "dead after last mention" "expr temp" "maybe param" "temp"
    (2257545 'move' call_tmp[2257543](2257547 'cast' c_ptr(uint(8))[937612] call_tmp[680349]))
    val error[2257552]:__wide_Error[2581418] "error variable" "temp"
    (2257554 'move' error[2257552] nil[44])
    const-val ret[2257557]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2257559]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2257561]:__wide_Error[2581418] "error variable" "temp"
    (2257563 'move' error[2257561] nil[44])
    const-val ret_tmp[2257566]:string[26] "temp"
    ref tmp[2628709]:__wide_Error[2581418] "temp"
    (2628713 'move' tmp[2628709](2628711 'set reference' error[2257561]))
    (2257569 call decodeByteBuffer[173938] call_tmp[2257543] call_tmp[2325389] strict[173692] tmp[2628709] ret_tmp[2257566])
    (2257575 'move' call_tmp[2257559] ret_tmp[2257566])
    val errorExists[2257578]:bool[10] "temp"
    (2257580 'move' errorExists[2257578](2257582 '!=' error[2257561] nil[44]))
    if errorExists[2257578]
    {
      (2257587 '=' error[2257552] error[2257561])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2257596] _endcreateStringWithNewBuffer[2257596]
    }
    (2257593 'move' ret[2257557] call_tmp[2257559])
    label _endcreateStringWithNewBuffer[2257596]
    val errorExists[2257601]:bool[10] "temp"
    (2257603 'move' errorExists[2257601](2257605 '!=' error[2257552] nil[44]))
    if errorExists[2257601]
    {
      (2257610 '=' error[1883568] error[2257552])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2257619] _endcreateStringWithNewBuffer[2257619]
    }
    (2257616 'move' ret[2257541] ret[2257557])
    label _endcreateStringWithNewBuffer[2257619]
    val errorExists[2221768]:bool[10] "temp"
    (2221773 'move' errorExists[2221768](2221770 '!=' error[1883568] nil[44]))
    if errorExists[2221768]
    {
      gotoErrorHandling handler[1883569] handler[1883569]
    }
    (544781 'move' nameS[169806] ret[2257541])
    label handler[1883569]
    val errorExists[2221776]:bool[10] "temp"
    (2221781 'move' errorExists[2221776](2221778 '!=' error[1883568] nil[44]))
    if errorExists[2221776]
    {
      (1883590 call chpl_uncaught_error[170289] error[1883568])
    }
    label _end_chpl_error_type_name[522353]
    (1906968 '=' _retArg[1906966] nameS[169806])
    (1906970 return _void[55])
  }
  function _local_chpl_describe_error[2606130](const in arg err[2606132]:__wide_Error[2581418], ref arg _retArg[2606134]:string[26]) : void[4] "fn returns via _retArg" "local fn" "no doc" "resolved"
  {
    const-val local__str_literal_1782[2606137]:string[26] "temp"
    (2606139 'move' local__str_literal_1782[2606137] ": ")
    const-val call_tmp[2606142]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[2606144]:string[26] "temp"
    (2606147 call _local_chpl_error_type_name[2610620] err[2606132] ret_tmp[2606144])
    (2606150 'move' call_tmp[2606142] ret_tmp[2606144])
    const-val nameS[2606153]:string[26] "dead at end of block" "insert auto destroy"
    (2606155 'move' nameS[2606153] call_tmp[2606142])
    const-val call_tmp[2606158]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2606160]:string[26] "temp"
    wide-ref tmp[2651990]:string[26] "temp"
    (2651994 'move' tmp[2651990](2651992 'set reference' local__str_literal_1782[2606137]))
    (2606163 call _local_+[2598071] nameS[2606153] tmp[2651990] ret_tmp[2606160])
    (2606167 'move' call_tmp[2606158] ret_tmp[2606160])
    const-val call_tmp[2606170]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    val _virtual_method_tmp_[2606172]:int(32)[95] "temp"
    (2610782 'local_check' err[2606132] c"cannot access remote data in local block")
    const-val local_err[2610779]:Error[167984] "temp"
    (2610785 'move' local_err[2610779] err[2606132])
    (2606174 'move' _virtual_method_tmp_[2606172](2606176 'getcid' local_err[2610779]))
    val ret_tmp[2606178]:string[26] "temp"
    ref tmp[2651997]:string[26] "temp"
    (2652001 'move' tmp[2651997](2652000 'set reference' ret_tmp[2606178]))
    wide-ref tmp[2652004]:string[26] "temp"
    (2652007 'move' tmp[2652004] tmp[2651997])
    (2606180 'virtual method call' message[167975] _virtual_method_tmp_[2606172] err[2606132] tmp[2652004])
    (2606185 'move' call_tmp[2606170] ret_tmp[2606178])
    const-val call_tmp[2606188]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[2606190]:string[26] "temp"
    wide-ref tmp[2652010]:string[26] "temp"
    (2652014 'move' tmp[2652010](2652012 'set reference' call_tmp[2606170]))
    (2606193 call _local_+[2598071] call_tmp[2606158] tmp[2652010] ret_tmp[2606190])
    (2606197 'move' call_tmp[2606188] ret_tmp[2606190])
    ref i_x[2606200]:string[26] "temp"
    (2606202 'move' i_x[2606200](2606204 'set reference' call_tmp[2606170]))
    wide-ref tmp[2652017]:string[26] "temp"
    (2652020 'move' tmp[2652017] i_x[2606200])
    (2606207 call _local_deinit[2591961] tmp[2652017])
    ref i_x[2606209]:string[26] "temp"
    (2606211 'move' i_x[2606209](2606213 'set reference' call_tmp[2606158]))
    wide-ref tmp[2652023]:string[26] "temp"
    (2652026 'move' tmp[2652023] i_x[2606209])
    (2606216 call _local_deinit[2591961] tmp[2652023])
    ref i_x[2606218]:string[26] "temp"
    (2606220 'move' i_x[2606218](2606222 'set reference' nameS[2606153]))
    wide-ref tmp[2652029]:string[26] "temp"
    (2652032 'move' tmp[2652029] i_x[2606218])
    (2606225 call _local_deinit[2591961] tmp[2652029])
    label _end_chpl_describe_error[2606227]
    (2606229 '=' _retArg[2606134] call_tmp[2606188])
    (2606232 return _void[55])
  }
  function chpl_describe_error[169835](const in arg err[169832]:__wide_Error[2581418], ref arg _retArg[1906996]:string[26]) : void[4] "fn returns via _retArg" "no doc" "resolved"
  {
    const-val local__str_literal_1782[2576858]:string[26] "temp"
    (2576859 'move' ": " ": ")
    const-val call_tmp[680359]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1906960]:string[26] "temp"
    (169841 call chpl_error_type_name[169752] err[169832] ret_tmp[1906960])
    (1906963 'move' call_tmp[680359] ret_tmp[1906960])
    const-val nameS[169842]:string[26] "dead at end of block" "insert auto destroy"
    (544784 'move' nameS[169842] call_tmp[680359])
    const-val call_tmp[680364]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905584]:string[26] "temp"
    wide-ref tmp[2614741]:string[26] "temp"
    (2614745 'move' tmp[2614741](2614743 'set reference' ": "))
    (169849 call +[38345] nameS[169842] tmp[2614741] ret_tmp[1905584])
    (1905587 'move' call_tmp[680364] ret_tmp[1905584])
    const-val call_tmp[680371]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    val _virtual_method_tmp_[1875787]:int(32)[95] "temp"
    (1875791 'move' _virtual_method_tmp_[1875787](1875789 'getcid' err[169832]))
    val ret_tmp[1906912]:string[26] "temp"
    ref tmp[2614748]:string[26] "temp"
    (2614752 'move' tmp[2614748](2614751 'set reference' ret_tmp[1906912]))
    wide-ref tmp[2614755]:string[26] "temp"
    (2614758 'move' tmp[2614755] tmp[2614748])
    (169856 'virtual method call' message[167975] _virtual_method_tmp_[1875787] err[169832] tmp[2614755])
    (1906915 'move' call_tmp[680371] ret_tmp[1906912])
    const-val call_tmp[680376]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1905590]:string[26] "temp"
    wide-ref tmp[2614761]:string[26] "temp"
    (2614765 'move' tmp[2614761](2614763 'set reference' call_tmp[680371]))
    (169857 call +[38345] call_tmp[680364] tmp[2614761] ret_tmp[1905590])
    (1905593 'move' call_tmp[680376] ret_tmp[1905590])
    ref i_x[2246141]:string[26] "temp"
    (2246145 'move' i_x[2246141](2246143 'set reference' call_tmp[680371]))
    wide-ref tmp[2627131]:string[26] "temp"
    (2627134 'move' tmp[2627131] i_x[2246141])
    (2246149 call deinit[30834] tmp[2627131])
    ref i_x[2246153]:string[26] "temp"
    (2246157 'move' i_x[2246153](2246155 'set reference' call_tmp[680364]))
    wide-ref tmp[2627137]:string[26] "temp"
    (2627140 'move' tmp[2627137] i_x[2246153])
    (2246161 call deinit[30834] tmp[2627137])
    ref i_x[2246165]:string[26] "temp"
    (2246169 'move' i_x[2246165](2246167 'set reference' nameS[169842]))
    wide-ref tmp[2627143]:string[26] "temp"
    (2627146 'move' tmp[2627143] i_x[2246165])
    (2246173 call deinit[30834] tmp[2627143])
    label _end_chpl_describe_error[522365]
    (1906998 '=' _retArg[1906996] call_tmp[680376])
    (1907000 return _void[55])
  }
  function _local_chpl_do_fix_thrown_error[2609608](const in arg err[2609610]:__wide_Error[2581418]) : __wide_Error[2581418] "always propagate line file info" "insert line file info" "local fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_129[2609613]:string[26] "temp"
    (2609615 'move' local__str_literal_129[2609613] "argument to ! is nil")
    val fixErr[2609618]:__wide_Error[2581418] "dead at end of block" "insert auto destroy"
    (2609620 'move' fixErr[2609618] err[2609610])
    val coerce_tmp[2609623]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2609625 'move' coerce_tmp[2609623](2609627 'cast' object[22] err[2609610]))
    const-val call_tmp[2609630]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2652431]:__wide_object[2581313] "temp"
    (2652434 'move' tmp[2652431] nil[44])
    (2609632 'move' call_tmp[2609630](2609634 'ptr_eq' coerce_tmp[2609623] tmp[2652431]))
    if call_tmp[2609630]
    {
      val new_temp[2609639]:NilThrownError[168029] "dead after last mention" "temp"
      (2609641 'move' new_temp[2609639](2609644 call _local__new[2612781]))
      val tmp[2609645]:Error[167984] "temp"
      (2609647 'move' tmp[2609645](2609649 'cast' Error[167984] new_temp[2609639]))
      (2609652 '=' fixErr[2609618] tmp[2609645])
    }
    const-val call_tmp[2609656]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (2609658 'move' call_tmp[2609656](2609660 '_get_user_line'))
    const-val call_tmp[2609661]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (2609663 'move' call_tmp[2609661](2609665 '_get_user_file'))
    val coerce_tmp[2609666]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2609668 'move' coerce_tmp[2609666](2609670 'cast' object[22] fixErr[2609618]))
    const-val call_tmp[2609673]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2652437]:__wide_object[2581313] "temp"
    (2652440 'move' tmp[2652437] nil[44])
    (2609675 'move' call_tmp[2609673](2609677 'ptr_eq' coerce_tmp[2609666] tmp[2652437]))
    if call_tmp[2609673]
    {
      (2609683 call _local_nilCheckHalt[2592346] local__str_literal_129[2609613])
    }
    val coerce_tmp[2609686]:__wide_Error[2581418] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2609688 'move' coerce_tmp[2609686] fixErr[2609618])
    const-val coerce_tmp[2609691]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2612885 'local_check' coerce_tmp[2609686] c"cannot access remote data in local block")
    val local_coerce_tmp[2612882]:Error[167984] "temp"
    (2612888 'move' local_coerce_tmp[2612882] coerce_tmp[2609686])
    val tmp[2652443]:bool[10] "temp"
    (2609693 'move' tmp[2652443](2609695 '.v' local_coerce_tmp[2612882] _hasThrowInfo[167936]))
    (2652446 'move' coerce_tmp[2609691] tmp[2652443])
    const-val call_tmp[2609698]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2609700 'move' call_tmp[2609698](2609702 '!' coerce_tmp[2609691]))
    if call_tmp[2609698]
    {
      val coerce_tmp[2609706]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2609708 'move' coerce_tmp[2609706](2609710 'cast' object[22] fixErr[2609618]))
      const-val call_tmp[2609713]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2652449]:__wide_object[2581313] "temp"
      (2652452 'move' tmp[2652449] nil[44])
      (2609715 'move' call_tmp[2609713](2609717 'ptr_eq' coerce_tmp[2609706] tmp[2652449]))
      if call_tmp[2609713]
      {
        (2609723 call _local_nilCheckHalt[2592346] local__str_literal_129[2609613])
      }
      val coerce_tmp[2609726]:__wide_Error[2581418] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2609728 'move' coerce_tmp[2609726] fixErr[2609618])
      (2612895 'local_check' coerce_tmp[2609726] c"cannot access remote data in local block")
      val local_coerce_tmp[2612892]:Error[167984] "temp"
      (2612898 'move' local_coerce_tmp[2612892] coerce_tmp[2609726])
      (2609731 '.=' local_coerce_tmp[2612892] _hasThrowInfo[167936] 1)
      val coerce_tmp[2609735]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2609737 'move' coerce_tmp[2609735](2609739 'cast' object[22] fixErr[2609618]))
      const-val call_tmp[2609742]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2652455]:__wide_object[2581313] "temp"
      (2652458 'move' tmp[2652455] nil[44])
      (2609744 'move' call_tmp[2609742](2609746 'ptr_eq' coerce_tmp[2609735] tmp[2652455]))
      if call_tmp[2609742]
      {
        (2609752 call _local_nilCheckHalt[2592346] local__str_literal_129[2609613])
      }
      val coerce_tmp[2609755]:__wide_Error[2581418] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2609757 'move' coerce_tmp[2609755] fixErr[2609618])
      (2612905 'local_check' coerce_tmp[2609755] c"cannot access remote data in local block")
      val local_coerce_tmp[2612902]:Error[167984] "temp"
      (2612908 'move' local_coerce_tmp[2612902] coerce_tmp[2609755])
      (2609760 '.=' local_coerce_tmp[2612902] thrownLine[167917] call_tmp[2609656])
      val coerce_tmp[2609764]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2609766 'move' coerce_tmp[2609764](2609768 'cast' object[22] fixErr[2609618]))
      const-val call_tmp[2609771]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2652461]:__wide_object[2581313] "temp"
      (2652464 'move' tmp[2652461] nil[44])
      (2609773 'move' call_tmp[2609771](2609775 'ptr_eq' coerce_tmp[2609764] tmp[2652461]))
      if call_tmp[2609771]
      {
        (2609781 call _local_nilCheckHalt[2592346] local__str_literal_129[2609613])
      }
      val coerce_tmp[2609784]:__wide_Error[2581418] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2609786 'move' coerce_tmp[2609784] fixErr[2609618])
      (2612915 'local_check' coerce_tmp[2609784] c"cannot access remote data in local block")
      val local_coerce_tmp[2612912]:Error[167984] "temp"
      (2612918 'move' local_coerce_tmp[2612912] coerce_tmp[2609784])
      (2609789 '.=' local_coerce_tmp[2612912] thrownFileId[167925] call_tmp[2609661])
    }
    label _end_chpl_do_fix_thrown_error[2609794]
    (2609796 return fixErr[2609618])
  }
  function chpl_do_fix_thrown_error[169877](const in arg err[169874]:__wide_Error[2581418]) : __wide_Error[2581418] "always propagate line file info" "insert line file info" "no doc" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_129[2576864]:string[26] "temp"
    (2576865 'move' "argument to ! is nil" "argument to ! is nil")
    val fixErr[169885]:__wide_Error[2581418] "dead at end of block" "insert auto destroy"
    (544788 'move' fixErr[169885] err[169874])
    val coerce_tmp[969675]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (969680 'move' coerce_tmp[969675](969677 'cast' object[22] err[169874]))
    const-val call_tmp[2226487]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2626405]:__wide_object[2581313] "temp"
    (2626408 'move' tmp[2626405] nil[44])
    (2226489 'move' call_tmp[2226487](2226491 'ptr_eq' coerce_tmp[969675] tmp[2626405]))
    if call_tmp[2226487]
    {
      val new_temp[969790]:NilThrownError[168029] "dead after last mention" "temp"
      (969792 'move' new_temp[969790](969722 call _new[969738]))
      val tmp[2585051]:Error[167984] "temp"
      (2585054 'move' tmp[2585051](2342288 'cast' Error[167984] new_temp[969790]))
      (2342286 '=' fixErr[169885] tmp[2585051])
    }
    const-val call_tmp[680396]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (680399 'move' call_tmp[680396](169927 '_get_user_line'))
    const-val call_tmp[680401]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (680404 'move' call_tmp[680401](169950 '_get_user_file'))
    val coerce_tmp[2295046]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2295048 'move' coerce_tmp[2295046](2295050 'cast' object[22] fixErr[169885]))
    const-val call_tmp[2295053]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2631883]:__wide_object[2581313] "temp"
    (2631886 'move' tmp[2631883] nil[44])
    (2295055 'move' call_tmp[2295053](2295057 'ptr_eq' coerce_tmp[2295046] tmp[2631883]))
    if call_tmp[2295053]
    {
      (2295063 call nilCheckHalt[210238] "argument to ! is nil")
    }
    val coerce_tmp[969914]:__wide_Error[2581418] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (969919 'move' coerce_tmp[969914] fixErr[169885])
    const-val coerce_tmp[969922]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2615184]:bool[10] "temp"
    (969926 'move' tmp[2615184](2564316 '.v' coerce_tmp[969914] _hasThrowInfo[167936]))
    (2615187 'move' coerce_tmp[969922] tmp[2615184])
    const-val call_tmp[2228265]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228267 'move' call_tmp[2228265](2228269 '!' coerce_tmp[969922]))
    if call_tmp[2228265]
    {
      val coerce_tmp[2295069]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2295071 'move' coerce_tmp[2295069](2295073 'cast' object[22] fixErr[169885]))
      const-val call_tmp[2295076]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2631889]:__wide_object[2581313] "temp"
      (2631892 'move' tmp[2631889] nil[44])
      (2295078 'move' call_tmp[2295076](2295080 'ptr_eq' coerce_tmp[2295069] tmp[2631889]))
      if call_tmp[2295076]
      {
        (2295086 call nilCheckHalt[210238] "argument to ! is nil")
      }
      val coerce_tmp[969930]:__wide_Error[2581418] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (969935 'move' coerce_tmp[969930] fixErr[169885])
      (2564322 '.=' coerce_tmp[969930] _hasThrowInfo[167936] 1)
      val coerce_tmp[2295092]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2295094 'move' coerce_tmp[2295092](2295096 'cast' object[22] fixErr[169885]))
      const-val call_tmp[2295099]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2631895]:__wide_object[2581313] "temp"
      (2631898 'move' tmp[2631895] nil[44])
      (2295101 'move' call_tmp[2295099](2295103 'ptr_eq' coerce_tmp[2295092] tmp[2631895]))
      if call_tmp[2295099]
      {
        (2295109 call nilCheckHalt[210238] "argument to ! is nil")
      }
      val coerce_tmp[969940]:__wide_Error[2581418] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (969945 'move' coerce_tmp[969940] fixErr[169885])
      (2564328 '.=' coerce_tmp[969940] thrownLine[167917] call_tmp[680396])
      val coerce_tmp[2295115]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2295117 'move' coerce_tmp[2295115](2295119 'cast' object[22] fixErr[169885]))
      const-val call_tmp[2295122]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2631901]:__wide_object[2581313] "temp"
      (2631904 'move' tmp[2631901] nil[44])
      (2295124 'move' call_tmp[2295122](2295126 'ptr_eq' coerce_tmp[2295115] tmp[2631901]))
      if call_tmp[2295122]
      {
        (2295132 call nilCheckHalt[210238] "argument to ! is nil")
      }
      val coerce_tmp[969950]:__wide_Error[2581418] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (969955 'move' coerce_tmp[969950] fixErr[169885])
      (2564334 '.=' coerce_tmp[969950] thrownFileId[167925] call_tmp[680401])
    }
    label _end_chpl_do_fix_thrown_error[522377]
    (522381 return fixErr[169885])
  }
  function _local_chpl_fix_thrown_error[2605420](const  ref arg err[2605422]:owned Error[966647]) : __wide_Error[2581418] "always propagate line file info" "ignore in global analysis" "insert line file info" "local fn" "no doc" "resolved" "ignore transfer errors"
  {
    val _formal_tmp_err[2605425]:owned Error[966647] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (2605427 'move' _formal_tmp_err[2605425] err[2605422])
    val call_tmp[2605430]:__wide_Error[2581418] "dead after last mention" "expr temp" "maybe param" "temp"
    (2605432 'move' call_tmp[2605430](2605435 call _local_release[2609553] _formal_tmp_err[2605425]))
    val call_tmp[2605437]:__wide_Error[2581418] "dead after last mention" "expr temp" "maybe param" "temp"
    (2605439 'move' call_tmp[2605437](2605442 call _local_chpl_do_fix_thrown_error[2609608] call_tmp[2605430]))
    (2605445 call _local_chpl__autoDestroy[2609800] _formal_tmp_err[2605425])
    (2605447 return call_tmp[2605437])
  }
  function chpl_fix_thrown_error[170049](const  ref arg err[170046]:owned Error[966647]) : __wide_Error[2581418] "always propagate line file info" "ignore in global analysis" "insert line file info" "no doc" "resolved" "ignore transfer errors"
  {
    val _formal_tmp_err[969642]:owned Error[966647] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (969645 'move' _formal_tmp_err[969642] err[170046])
    val call_tmp[680483]:__wide_Error[2581418] "dead after last mention" "expr temp" "maybe param" "temp"
    (680486 'move' call_tmp[680483](170059 call release[969387] _formal_tmp_err[969642]))
    val call_tmp[680488]:__wide_Error[2581418] "dead after last mention" "expr temp" "maybe param" "temp"
    (680491 'move' call_tmp[680488](170061 call chpl_do_fix_thrown_error[169877] call_tmp[680483]))
    (1919639 call chpl__autoDestroy[1608774] _formal_tmp_err[969642])
    (522403 return call_tmp[680488])
  }
  function chpl_delete_error[170263](const in arg err[170260]:Error[167984]) : void[4] "no doc" "resolved" "no return value for void"
  {
    val coerce_tmp[1829593]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1829598 'move' coerce_tmp[1829593](1829595 'cast' object[22] err[170260]))
    const-val call_tmp[2227627]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2227629 'move' call_tmp[2227627](2227631 'ptr_neq' coerce_tmp[1829593] nil[44]))
    if call_tmp[2227627]
    {
      val coerce_tmp[2411066]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2411068 'move' coerce_tmp[2411066](2411070 'cast' object[22] err[170260]))
      const-val call_tmp[2411073]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2411075 'move' call_tmp[2411073](2411077 'ptr_neq' coerce_tmp[2411066] nil[44]))
      if call_tmp[2411073]
      {
        val _virtual_method_tmp_[2411087]:int(32)[95] "temp"
        (2411089 'move' _virtual_method_tmp_[2411087](2411091 'getcid' err[170260]))
        val tmp[2638831]:__wide_Error[2581418] "temp"
        (2638834 'move' tmp[2638831] err[170260])
        (2411093 'virtual method call' deinit[811935] _virtual_method_tmp_[2411087] tmp[2638831])
        const-val call_tmp[2411099]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
        (2411101 'move' call_tmp[2411099](2411103 '_wide_get_locale' err[170260]))
        val isdirect[2411108]:bool[10] "temp"
        (2411110 'move' isdirect[2411108](2411113 call chpl_doDirectExecuteOn[187469] call_tmp[2411099]))
        if isdirect[2411108]
        {
          const-val tmp[2638837]:__wide_Error[2581418] "temp"
          (2638840 'move' tmp[2638837] err[170260])
          (2411118 call on_fn[1236631] tmp[2638837])
        }
        {
          val _args_foron_fn[2411121]:_class_localson_fn[2205130] "temp"
          (2411123 'move' _args_foron_fn[2411121](2411125 'stack allocate class' _class_localson_fn[2205130]))
          (2411127 '.=' _args_foron_fn[2411121] _0_tmp[2205133] call_tmp[2411099])
          val tmp[2638843]:__wide_Error[2581418] "temp"
          (2638846 'move' tmp[2638843] err[170260])
          (2411131 '.=' _args_foron_fn[2411121] _1_arg[2205135] tmp[2638843])
          val _args_vforon_fn[2411135]:c_void_ptr[149] "temp"
          (2411137 'move' _args_vforon_fn[2411135](2411139 'cast_to_void_star' _args_foron_fn[2411121]))
          val _args_sizeon_fn[2411141]:int(64)[13] "temp"
          (2411143 'move' _args_sizeon_fn[2411141](2411145 'sizeof_bundle' _class_localson_fn[2205130]))
          (2653654 call chpl_taskRunningCntDec[93219])
          on(2411148 call wrapon_fn[2205164] call_tmp[2411099] _args_vforon_fn[2411135] _args_sizeon_fn[2411141] _args_foron_fn[2411121])
          (2653656 call chpl_taskRunningCntInc[93198])
        }
      }
    }
    (522422 return _void[55])
  }
  function _local_chpl_uncaught_error[2602078](const in arg err[2602080]:__wide_Error[2581418]) : void[4] "always propagate line file info" "function terminates program" "insert line file info" "local fn" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val local__str_literal_4797[2602083]:string[26] "temp"
    (2602085 'move' local__str_literal_4797[2602083] "Cannot call .c_str() on a remote string")
    const-val local__str_literal_2261[2602088]:string[26] "temp"
    (2602090 'move' local__str_literal_2261[2602088] ": uncaught here")
    const-val local__str_literal_2259[2602093]:string[26] "temp"
    (2602095 'move' local__str_literal_2259[2602093] ": thrown here")
    const-val local__str_literal_2033[2602098]:string[26] "temp"
    (2602100 'move' local__str_literal_2033[2602098] ":")
    const-val local__str_literal_2257[2602103]:string[26] "temp"
    (2602105 'move' local__str_literal_2257[2602103] "\n  ")
    const-val local__str_literal_2255[2602108]:string[26] "temp"
    (2602110 'move' local__str_literal_2255[2602108] "uncaught ")
    const-val call_tmp[2602113]:int(32)[95] "dead at end of block" "expr temp" "maybe param" "temp"
    (2602115 'move' call_tmp[2602113](2602117 '_get_user_file'))
    const-val call_tmp[2602118]:c_string[19] "dead at end of block" "maybe param" "temp"
    (2602120 'move' call_tmp[2602118](2602122 'chpl_lookupFilename' call_tmp[2602113]))
    const-val myFileS[2602124]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val error[2602126]:__wide_Error[2581418] "error variable" "temp"
    (2602128 'move' error[2602126] nil[44])
    const-val call_tmp[2602131]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2602133 'move' call_tmp[2602131](2602135 'string_length_bytes' call_tmp[2602118]))
    val errorExists[2602137]:bool[10] "temp"
    (2602139 'move' errorExists[2602137](2602141 '!=' error[2602126] nil[44]))
    if errorExists[2602137]
    {
      gotoErrorHandling handler[2602239] handler[2602239]
    }
    const-val ret[2602149]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[2602151]:c_ptr(uint(8))[937612] "dead after last mention" "expr temp" "maybe param" "temp"
    (2602153 'move' call_tmp[2602151](2602155 'cast' c_ptr(uint(8))[937612] call_tmp[2602118]))
    val error[2602158]:__wide_Error[2581418] "error variable" "temp"
    (2602160 'move' error[2602158] nil[44])
    const-val ret[2602163]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2602165]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2602167]:__wide_Error[2581418] "error variable" "temp"
    (2602169 'move' error[2602167] nil[44])
    const-val ret_tmp[2602172]:string[26] "temp"
    ref tmp[2651385]:__wide_Error[2581418] "temp"
    (2651389 'move' tmp[2651385](2651387 'set reference' error[2602167]))
    (2602175 call _local_decodeByteBuffer[2600997] call_tmp[2602151] call_tmp[2602131] strict[173692] tmp[2651385] ret_tmp[2602172])
    (2602181 'move' call_tmp[2602165] ret_tmp[2602172])
    val errorExists[2602184]:bool[10] "temp"
    (2602186 'move' errorExists[2602184](2602188 '!=' error[2602167] nil[44]))
    if errorExists[2602184]
    {
      (2602193 '=' error[2602158] error[2602167])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2602202] _endcreateStringWithNewBuffer[2602202]
    }
    (2602199 'move' ret[2602163] call_tmp[2602165])
    label _endcreateStringWithNewBuffer[2602202]
    val errorExists[2602204]:bool[10] "temp"
    (2602206 'move' errorExists[2602204](2602208 '!=' error[2602158] nil[44]))
    if errorExists[2602204]
    {
      (2602213 '=' error[2602126] error[2602158])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2602222] _endcreateStringWithNewBuffer[2602222]
    }
    (2602219 'move' ret[2602149] ret[2602163])
    label _endcreateStringWithNewBuffer[2602222]
    val errorExists[2602224]:bool[10] "temp"
    (2602226 'move' errorExists[2602224](2602228 '!=' error[2602126] nil[44]))
    if errorExists[2602224]
    {
      gotoErrorHandling handler[2602239] handler[2602239]
    }
    (2602236 'move' myFileS[2602124] ret[2602149])
    label handler[2602239]
    val errorExists[2602241]:bool[10] "temp"
    (2602243 'move' errorExists[2602241](2602245 '!=' error[2602126] nil[44]))
    if errorExists[2602241]
    {
      (2602251 call _local_chpl_uncaught_error[2602078] error[2602126])
    }
    const-val call_tmp[2602254]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (2602256 'move' call_tmp[2602254](2602258 '_get_user_line'))
    val coerce_tmp[2602259]:__wide_Error[2581418] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (2602261 'move' coerce_tmp[2602259] err[2602080])
    wide-ref call_tmp[2602264]:int(32)[95] "dead after last mention" "maybe param" "temp"
    (2606113 'local_check' coerce_tmp[2602259] c"cannot access remote data in local block")
    val local_coerce_tmp[2606110]:Error[167984] "temp"
    (2606116 'move' local_coerce_tmp[2606110] coerce_tmp[2602259])
    (2602266 'move' call_tmp[2602264](2602268 '.' local_coerce_tmp[2606110] thrownFileId[167925]))
    const-val call_tmp[2602271]:c_string[19] "dead at end of block" "maybe param" "temp"
    (2602273 'move' call_tmp[2602271](2602275 'chpl_lookupFilename' call_tmp[2602264]))
    const-val thrownFileS[2602277]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val error[2602279]:__wide_Error[2581418] "error variable" "temp"
    (2602281 'move' error[2602279] nil[44])
    const-val call_tmp[2602284]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2602286 'move' call_tmp[2602284](2602288 'string_length_bytes' call_tmp[2602271]))
    val errorExists[2602290]:bool[10] "temp"
    (2602292 'move' errorExists[2602290](2602294 '!=' error[2602279] nil[44]))
    if errorExists[2602290]
    {
      gotoErrorHandling handler[2602392] handler[2602392]
    }
    const-val ret[2602302]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[2602304]:c_ptr(uint(8))[937612] "dead after last mention" "expr temp" "maybe param" "temp"
    (2602306 'move' call_tmp[2602304](2602308 'cast' c_ptr(uint(8))[937612] call_tmp[2602271]))
    val error[2602311]:__wide_Error[2581418] "error variable" "temp"
    (2602313 'move' error[2602311] nil[44])
    const-val ret[2602316]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2602318]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2602320]:__wide_Error[2581418] "error variable" "temp"
    (2602322 'move' error[2602320] nil[44])
    const-val ret_tmp[2602325]:string[26] "temp"
    ref tmp[2651392]:__wide_Error[2581418] "temp"
    (2651396 'move' tmp[2651392](2651394 'set reference' error[2602320]))
    (2602328 call _local_decodeByteBuffer[2600997] call_tmp[2602304] call_tmp[2602284] strict[173692] tmp[2651392] ret_tmp[2602325])
    (2602334 'move' call_tmp[2602318] ret_tmp[2602325])
    val errorExists[2602337]:bool[10] "temp"
    (2602339 'move' errorExists[2602337](2602341 '!=' error[2602320] nil[44]))
    if errorExists[2602337]
    {
      (2602346 '=' error[2602311] error[2602320])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2602355] _endcreateStringWithNewBuffer[2602355]
    }
    (2602352 'move' ret[2602316] call_tmp[2602318])
    label _endcreateStringWithNewBuffer[2602355]
    val errorExists[2602357]:bool[10] "temp"
    (2602359 'move' errorExists[2602357](2602361 '!=' error[2602311] nil[44]))
    if errorExists[2602357]
    {
      (2602366 '=' error[2602279] error[2602311])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2602375] _endcreateStringWithNewBuffer[2602375]
    }
    (2602372 'move' ret[2602302] ret[2602316])
    label _endcreateStringWithNewBuffer[2602375]
    val errorExists[2602377]:bool[10] "temp"
    (2602379 'move' errorExists[2602377](2602381 '!=' error[2602279] nil[44]))
    if errorExists[2602377]
    {
      gotoErrorHandling handler[2602392] handler[2602392]
    }
    (2602389 'move' thrownFileS[2602277] ret[2602302])
    label handler[2602392]
    val errorExists[2602394]:bool[10] "temp"
    (2602396 'move' errorExists[2602394](2602398 '!=' error[2602279] nil[44]))
    if errorExists[2602394]
    {
      (2602404 call _local_chpl_uncaught_error[2602078] error[2602279])
    }
    val coerce_tmp[2602407]:__wide_Error[2581418] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (2602409 'move' coerce_tmp[2602407] err[2602080])
    const-val coerce_tmp[2602412]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2606124 'local_check' coerce_tmp[2602407] c"cannot access remote data in local block")
    val local_coerce_tmp[2606121]:Error[167984] "temp"
    (2606127 'move' local_coerce_tmp[2606121] coerce_tmp[2602407])
    val tmp[2651399]:int(64)[13] "temp"
    (2602414 'move' tmp[2651399](2602416 '.v' local_coerce_tmp[2606121] thrownLine[167917]))
    (2651402 'move' coerce_tmp[2602412] tmp[2651399])
    (2602419 'noop')
    const-val call_tmp[2602420]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2602422]:string[26] "temp"
    (2602425 call _local_chpl_describe_error[2606130] err[2602080] ret_tmp[2602422])
    (2602428 'move' call_tmp[2602420] ret_tmp[2602422])
    const-val call_tmp[2602431]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2602433]:string[26] "temp"
    wide-ref tmp[2651405]:string[26] "temp"
    (2651409 'move' tmp[2651405](2651407 'set reference' call_tmp[2602420]))
    (2602436 call _local_+[2598071] local__str_literal_2255[2602108] tmp[2651405] ret_tmp[2602433])
    (2602440 'move' call_tmp[2602431] ret_tmp[2602433])
    const-val call_tmp[2602443]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2602445]:string[26] "temp"
    wide-ref tmp[2651412]:string[26] "temp"
    (2651416 'move' tmp[2651412](2651414 'set reference' local__str_literal_2257[2602103]))
    (2602448 call _local_+[2598071] call_tmp[2602431] tmp[2651412] ret_tmp[2602445])
    (2602452 'move' call_tmp[2602443] ret_tmp[2602445])
    const-val call_tmp[2602455]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2602457]:string[26] "temp"
    wide-ref tmp[2651419]:string[26] "temp"
    (2651423 'move' tmp[2651419](2651421 'set reference' thrownFileS[2602277]))
    (2602460 call _local_+[2598071] call_tmp[2602443] tmp[2651419] ret_tmp[2602457])
    (2602464 'move' call_tmp[2602455] ret_tmp[2602457])
    const-val call_tmp[2602467]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2602469]:string[26] "temp"
    wide-ref tmp[2651426]:string[26] "temp"
    (2651430 'move' tmp[2651426](2651428 'set reference' local__str_literal_2033[2602098]))
    (2602472 call _local_+[2598071] call_tmp[2602455] tmp[2651426] ret_tmp[2602469])
    (2602476 'move' call_tmp[2602467] ret_tmp[2602469])
    const-val call_tmp[2602479]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2602481]:string[26] "temp"
    (2602484 call _local__cast[2600315] coerce_tmp[2602412] ret_tmp[2602481])
    (2602487 'move' call_tmp[2602479] ret_tmp[2602481])
    const-val call_tmp[2602490]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2602492]:string[26] "temp"
    wide-ref tmp[2651433]:string[26] "temp"
    (2651437 'move' tmp[2651433](2651435 'set reference' call_tmp[2602479]))
    (2602495 call _local_+[2598071] call_tmp[2602467] tmp[2651433] ret_tmp[2602492])
    (2602499 'move' call_tmp[2602490] ret_tmp[2602492])
    const-val call_tmp[2602502]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2602504]:string[26] "temp"
    wide-ref tmp[2651440]:string[26] "temp"
    (2651444 'move' tmp[2651440](2651442 'set reference' local__str_literal_2259[2602093]))
    (2602507 call _local_+[2598071] call_tmp[2602490] tmp[2651440] ret_tmp[2602504])
    (2602511 'move' call_tmp[2602502] ret_tmp[2602504])
    const-val call_tmp[2602514]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2602516]:string[26] "temp"
    wide-ref tmp[2651447]:string[26] "temp"
    (2651451 'move' tmp[2651447](2651449 'set reference' local__str_literal_2257[2602103]))
    (2602519 call _local_+[2598071] call_tmp[2602502] tmp[2651447] ret_tmp[2602516])
    (2602523 'move' call_tmp[2602514] ret_tmp[2602516])
    const-val call_tmp[2602526]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2602528]:string[26] "temp"
    wide-ref tmp[2651454]:string[26] "temp"
    (2651458 'move' tmp[2651454](2651456 'set reference' myFileS[2602124]))
    (2602531 call _local_+[2598071] call_tmp[2602514] tmp[2651454] ret_tmp[2602528])
    (2602535 'move' call_tmp[2602526] ret_tmp[2602528])
    const-val call_tmp[2602538]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2602540]:string[26] "temp"
    wide-ref tmp[2651461]:string[26] "temp"
    (2651465 'move' tmp[2651461](2651463 'set reference' local__str_literal_2033[2602098]))
    (2602543 call _local_+[2598071] call_tmp[2602526] tmp[2651461] ret_tmp[2602540])
    (2602547 'move' call_tmp[2602538] ret_tmp[2602540])
    const-val call_tmp[2602550]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2602552]:string[26] "temp"
    (2602555 call _local__cast[2600315] call_tmp[2602254] ret_tmp[2602552])
    (2602558 'move' call_tmp[2602550] ret_tmp[2602552])
    const-val call_tmp[2602561]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2602563]:string[26] "temp"
    wide-ref tmp[2651468]:string[26] "temp"
    (2651472 'move' tmp[2651468](2651470 'set reference' call_tmp[2602550]))
    (2602566 call _local_+[2598071] call_tmp[2602538] tmp[2651468] ret_tmp[2602563])
    (2602570 'move' call_tmp[2602561] ret_tmp[2602563])
    const-val call_tmp[2602573]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[2602575]:string[26] "temp"
    wide-ref tmp[2651475]:string[26] "temp"
    (2651479 'move' tmp[2651475](2651477 'set reference' local__str_literal_2261[2602088]))
    (2602578 call _local_+[2598071] call_tmp[2602561] tmp[2651475] ret_tmp[2602575])
    (2602582 'move' call_tmp[2602573] ret_tmp[2602575])
    const-val s[2602585]:string[26] "dead at end of block" "insert auto destroy"
    (2602587 'move' s[2602585] call_tmp[2602573])
    const-val coerce_tmp[2602590]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2651482]:int(32)[95] "temp"
    (2602592 'move' tmp[2651482](2602594 '.v' s[2602585] locale_id[30757]))
    (2651485 'move' coerce_tmp[2602590] tmp[2651482])
    const-val call_tmp[2602597]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2602599 'move' call_tmp[2602597](2602601 '!=' coerce_tmp[2602590] chpl_nodeID[208207]))
    if call_tmp[2602597]
    {
      (2602607 call _local_halt[2589136] local__str_literal_4797[2602083])
    }
    val coerce_tmp[2602610]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2651488]:c_ptr(uint(8))[937612] "temp"
    (2602612 'move' tmp[2651488](2602614 '.v' s[2602585] buff[30740]))
    (2651491 'move' coerce_tmp[2602610] tmp[2651488])
    const-val call_tmp[2602617]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (2602619 'move' call_tmp[2602617](2602621 'cast' c_string[19] coerce_tmp[2602610]))
    (2602625 call chpl_error_preformatted[1829762] call_tmp[2602617])
    ref i_x[2602627]:string[26] "temp"
    (2602629 'move' i_x[2602627](2602631 'set reference' s[2602585]))
    wide-ref tmp[2651494]:string[26] "temp"
    (2651497 'move' tmp[2651494] i_x[2602627])
    (2602634 call _local_deinit[2591961] tmp[2651494])
    ref i_x[2602636]:string[26] "temp"
    (2602638 'move' i_x[2602636](2602640 'set reference' call_tmp[2602561]))
    wide-ref tmp[2651500]:string[26] "temp"
    (2651503 'move' tmp[2651500] i_x[2602636])
    (2602643 call _local_deinit[2591961] tmp[2651500])
    ref i_x[2602645]:string[26] "temp"
    (2602647 'move' i_x[2602645](2602649 'set reference' call_tmp[2602550]))
    wide-ref tmp[2651506]:string[26] "temp"
    (2651509 'move' tmp[2651506] i_x[2602645])
    (2602652 call _local_deinit[2591961] tmp[2651506])
    ref i_x[2602654]:string[26] "temp"
    (2602656 'move' i_x[2602654](2602658 'set reference' call_tmp[2602538]))
    wide-ref tmp[2651512]:string[26] "temp"
    (2651515 'move' tmp[2651512] i_x[2602654])
    (2602661 call _local_deinit[2591961] tmp[2651512])
    ref i_x[2602663]:string[26] "temp"
    (2602665 'move' i_x[2602663](2602667 'set reference' call_tmp[2602526]))
    wide-ref tmp[2651518]:string[26] "temp"
    (2651521 'move' tmp[2651518] i_x[2602663])
    (2602670 call _local_deinit[2591961] tmp[2651518])
    ref i_x[2602672]:string[26] "temp"
    (2602674 'move' i_x[2602672](2602676 'set reference' call_tmp[2602514]))
    wide-ref tmp[2651524]:string[26] "temp"
    (2651527 'move' tmp[2651524] i_x[2602672])
    (2602679 call _local_deinit[2591961] tmp[2651524])
    ref i_x[2602681]:string[26] "temp"
    (2602683 'move' i_x[2602681](2602685 'set reference' call_tmp[2602502]))
    wide-ref tmp[2651530]:string[26] "temp"
    (2651533 'move' tmp[2651530] i_x[2602681])
    (2602688 call _local_deinit[2591961] tmp[2651530])
    ref i_x[2602690]:string[26] "temp"
    (2602692 'move' i_x[2602690](2602694 'set reference' call_tmp[2602490]))
    wide-ref tmp[2651536]:string[26] "temp"
    (2651539 'move' tmp[2651536] i_x[2602690])
    (2602697 call _local_deinit[2591961] tmp[2651536])
    ref i_x[2602699]:string[26] "temp"
    (2602701 'move' i_x[2602699](2602703 'set reference' call_tmp[2602479]))
    wide-ref tmp[2651542]:string[26] "temp"
    (2651545 'move' tmp[2651542] i_x[2602699])
    (2602706 call _local_deinit[2591961] tmp[2651542])
    ref i_x[2602708]:string[26] "temp"
    (2602710 'move' i_x[2602708](2602712 'set reference' call_tmp[2602467]))
    wide-ref tmp[2651548]:string[26] "temp"
    (2651551 'move' tmp[2651548] i_x[2602708])
    (2602715 call _local_deinit[2591961] tmp[2651548])
    ref i_x[2602717]:string[26] "temp"
    (2602719 'move' i_x[2602717](2602721 'set reference' call_tmp[2602455]))
    wide-ref tmp[2651554]:string[26] "temp"
    (2651557 'move' tmp[2651554] i_x[2602717])
    (2602724 call _local_deinit[2591961] tmp[2651554])
    ref i_x[2602726]:string[26] "temp"
    (2602728 'move' i_x[2602726](2602730 'set reference' call_tmp[2602443]))
    wide-ref tmp[2651560]:string[26] "temp"
    (2651563 'move' tmp[2651560] i_x[2602726])
    (2602733 call _local_deinit[2591961] tmp[2651560])
    ref i_x[2602735]:string[26] "temp"
    (2602737 'move' i_x[2602735](2602739 'set reference' call_tmp[2602431]))
    wide-ref tmp[2651566]:string[26] "temp"
    (2651569 'move' tmp[2651566] i_x[2602735])
    (2602742 call _local_deinit[2591961] tmp[2651566])
    ref i_x[2602744]:string[26] "temp"
    (2602746 'move' i_x[2602744](2602748 'set reference' call_tmp[2602420]))
    wide-ref tmp[2651572]:string[26] "temp"
    (2651575 'move' tmp[2651572] i_x[2602744])
    (2602751 call _local_deinit[2591961] tmp[2651572])
    ref i_x[2602753]:string[26] "temp"
    (2602755 'move' i_x[2602753](2602757 'set reference' thrownFileS[2602277]))
    wide-ref tmp[2651578]:string[26] "temp"
    (2651581 'move' tmp[2651578] i_x[2602753])
    (2602760 call _local_deinit[2591961] tmp[2651578])
    ref i_x[2602762]:string[26] "temp"
    (2602764 'move' i_x[2602762](2602766 'set reference' myFileS[2602124]))
    wide-ref tmp[2651584]:string[26] "temp"
    (2651587 'move' tmp[2651584] i_x[2602762])
    (2602769 call _local_deinit[2591961] tmp[2651584])
    (2602771 return _void[55])
  }
  function chpl_uncaught_error[170289](const in arg err[170286]:__wide_Error[2581418]) : void[4] "always propagate line file info" "function terminates program" "insert line file info" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val local__str_literal_4797[2576905]:string[26] "temp"
    (2576906 'move' "Cannot call .c_str() on a remote string" "Cannot call .c_str() on a remote string")
    const-val local__str_literal_2261[2576899]:string[26] "temp"
    (2576900 'move' ": uncaught here" ": uncaught here")
    const-val local__str_literal_2259[2576891]:string[26] "temp"
    (2576892 'move' ": thrown here" ": thrown here")
    const-val local__str_literal_2033[2576885]:string[26] "temp"
    (2576886 'move' ":" ":")
    const-val local__str_literal_2257[2576879]:string[26] "temp"
    (2576880 'move' "\n  " "\n  ")
    const-val local__str_literal_2255[2576873]:string[26] "temp"
    (2576874 'move' "uncaught " "uncaught ")
    const-val call_tmp[680553]:int(32)[95] "dead at end of block" "expr temp" "maybe param" "temp"
    (680556 'move' call_tmp[680553](170321 '_get_user_file'))
    const-val call_tmp[680558]:c_string[19] "dead at end of block" "maybe param" "temp"
    (680561 'move' call_tmp[680558](170322 'chpl_lookupFilename' call_tmp[680553]))
    const-val myFileS[170328]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val error[1883601]:__wide_Error[2581418] "error variable" "temp"
    (1883617 'move' error[1883601] nil[44])
    const-val call_tmp[2325411]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2325413 'move' call_tmp[2325411](2325415 'string_length_bytes' call_tmp[680558]))
    val errorExists[2221784]:bool[10] "temp"
    (2221789 'move' errorExists[2221784](2221786 '!=' error[1883601] nil[44]))
    if errorExists[2221784]
    {
      gotoErrorHandling handler[1883602] handler[1883602]
    }
    const-val ret[2257639]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[2257641]:c_ptr(uint(8))[937612] "dead after last mention" "expr temp" "maybe param" "temp"
    (2257643 'move' call_tmp[2257641](2257645 'cast' c_ptr(uint(8))[937612] call_tmp[680558]))
    val error[2257650]:__wide_Error[2581418] "error variable" "temp"
    (2257652 'move' error[2257650] nil[44])
    const-val ret[2257655]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2257657]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2257659]:__wide_Error[2581418] "error variable" "temp"
    (2257661 'move' error[2257659] nil[44])
    const-val ret_tmp[2257664]:string[26] "temp"
    ref tmp[2628716]:__wide_Error[2581418] "temp"
    (2628720 'move' tmp[2628716](2628718 'set reference' error[2257659]))
    (2257667 call decodeByteBuffer[173938] call_tmp[2257641] call_tmp[2325411] strict[173692] tmp[2628716] ret_tmp[2257664])
    (2257673 'move' call_tmp[2257657] ret_tmp[2257664])
    val errorExists[2257676]:bool[10] "temp"
    (2257678 'move' errorExists[2257676](2257680 '!=' error[2257659] nil[44]))
    if errorExists[2257676]
    {
      (2257685 '=' error[2257650] error[2257659])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2257694] _endcreateStringWithNewBuffer[2257694]
    }
    (2257691 'move' ret[2257655] call_tmp[2257657])
    label _endcreateStringWithNewBuffer[2257694]
    val errorExists[2257699]:bool[10] "temp"
    (2257701 'move' errorExists[2257699](2257703 '!=' error[2257650] nil[44]))
    if errorExists[2257699]
    {
      (2257708 '=' error[1883601] error[2257650])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2257717] _endcreateStringWithNewBuffer[2257717]
    }
    (2257714 'move' ret[2257639] ret[2257655])
    label _endcreateStringWithNewBuffer[2257717]
    val errorExists[2221792]:bool[10] "temp"
    (2221797 'move' errorExists[2221792](2221794 '!=' error[1883601] nil[44]))
    if errorExists[2221792]
    {
      gotoErrorHandling handler[1883602] handler[1883602]
    }
    (544811 'move' myFileS[170328] ret[2257639])
    label handler[1883602]
    val errorExists[2221800]:bool[10] "temp"
    (2221805 'move' errorExists[2221800](2221802 '!=' error[1883601] nil[44]))
    if errorExists[2221800]
    {
      (1883623 call chpl_uncaught_error[170289] error[1883601])
    }
    const-val call_tmp[680568]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (680571 'move' call_tmp[680568](170346 '_get_user_line'))
    val coerce_tmp[1829636]:__wide_Error[2581418] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1829641 'move' coerce_tmp[1829636] err[170286])
    wide-ref call_tmp[2338149]:int(32)[95] "dead after last mention" "maybe param" "temp"
    (2338151 'move' call_tmp[2338149](2338153 '.' coerce_tmp[1829636] thrownFileId[167925]))
    const-val call_tmp[680580]:c_string[19] "dead at end of block" "maybe param" "temp"
    (680583 'move' call_tmp[680580](170358 'chpl_lookupFilename' call_tmp[2338149]))
    const-val thrownFileS[170364]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val error[1883634]:__wide_Error[2581418] "error variable" "temp"
    (1883650 'move' error[1883634] nil[44])
    const-val call_tmp[2325433]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2325435 'move' call_tmp[2325433](2325437 'string_length_bytes' call_tmp[680580]))
    val errorExists[2221808]:bool[10] "temp"
    (2221813 'move' errorExists[2221808](2221810 '!=' error[1883634] nil[44]))
    if errorExists[2221808]
    {
      gotoErrorHandling handler[1883635] handler[1883635]
    }
    const-val ret[2257737]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[2257739]:c_ptr(uint(8))[937612] "dead after last mention" "expr temp" "maybe param" "temp"
    (2257741 'move' call_tmp[2257739](2257743 'cast' c_ptr(uint(8))[937612] call_tmp[680580]))
    val error[2257748]:__wide_Error[2581418] "error variable" "temp"
    (2257750 'move' error[2257748] nil[44])
    const-val ret[2257753]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2257755]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2257757]:__wide_Error[2581418] "error variable" "temp"
    (2257759 'move' error[2257757] nil[44])
    const-val ret_tmp[2257762]:string[26] "temp"
    ref tmp[2628723]:__wide_Error[2581418] "temp"
    (2628727 'move' tmp[2628723](2628725 'set reference' error[2257757]))
    (2257765 call decodeByteBuffer[173938] call_tmp[2257739] call_tmp[2325433] strict[173692] tmp[2628723] ret_tmp[2257762])
    (2257771 'move' call_tmp[2257755] ret_tmp[2257762])
    val errorExists[2257774]:bool[10] "temp"
    (2257776 'move' errorExists[2257774](2257778 '!=' error[2257757] nil[44]))
    if errorExists[2257774]
    {
      (2257783 '=' error[2257748] error[2257757])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2257792] _endcreateStringWithNewBuffer[2257792]
    }
    (2257789 'move' ret[2257753] call_tmp[2257755])
    label _endcreateStringWithNewBuffer[2257792]
    val errorExists[2257797]:bool[10] "temp"
    (2257799 'move' errorExists[2257797](2257801 '!=' error[2257748] nil[44]))
    if errorExists[2257797]
    {
      (2257806 '=' error[1883634] error[2257748])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2257815] _endcreateStringWithNewBuffer[2257815]
    }
    (2257812 'move' ret[2257737] ret[2257753])
    label _endcreateStringWithNewBuffer[2257815]
    val errorExists[2221816]:bool[10] "temp"
    (2221821 'move' errorExists[2221816](2221818 '!=' error[1883634] nil[44]))
    if errorExists[2221816]
    {
      gotoErrorHandling handler[1883635] handler[1883635]
    }
    (544829 'move' thrownFileS[170364] ret[2257737])
    label handler[1883635]
    val errorExists[2221824]:bool[10] "temp"
    (2221829 'move' errorExists[2221824](2221826 '!=' error[1883634] nil[44]))
    if errorExists[2221824]
    {
      (1883656 call chpl_uncaught_error[170289] error[1883634])
    }
    val coerce_tmp[1829678]:__wide_Error[2581418] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1829683 'move' coerce_tmp[1829678] err[170286])
    const-val coerce_tmp[1829688]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val tmp[2619176]:int(64)[13] "temp"
    (1829692 'move' tmp[2619176](2564349 '.v' coerce_tmp[1829678] thrownLine[167917]))
    (2619179 'move' coerce_tmp[1829688] tmp[2619176])
    (544832 'noop')
    const-val call_tmp[680597]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1906990]:string[26] "temp"
    (170408 call chpl_describe_error[169835] err[170286] ret_tmp[1906990])
    (1906993 'move' call_tmp[680597] ret_tmp[1906990])
    const-val call_tmp[680602]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905596]:string[26] "temp"
    wide-ref tmp[2614768]:string[26] "temp"
    (2614772 'move' tmp[2614768](2614770 'set reference' call_tmp[680597]))
    (170409 call +[38345] "uncaught " tmp[2614768] ret_tmp[1905596])
    (1905599 'move' call_tmp[680602] ret_tmp[1905596])
    const-val call_tmp[680607]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905602]:string[26] "temp"
    wide-ref tmp[2614775]:string[26] "temp"
    (2614779 'move' tmp[2614775](2614777 'set reference' "\n  "))
    (170428 call +[38345] call_tmp[680602] tmp[2614775] ret_tmp[1905602])
    (1905605 'move' call_tmp[680607] ret_tmp[1905602])
    const-val call_tmp[680612]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905608]:string[26] "temp"
    wide-ref tmp[2614782]:string[26] "temp"
    (2614786 'move' tmp[2614782](2614784 'set reference' thrownFileS[170364]))
    (170431 call +[38345] call_tmp[680607] tmp[2614782] ret_tmp[1905608])
    (1905611 'move' call_tmp[680612] ret_tmp[1905608])
    const-val call_tmp[680617]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905614]:string[26] "temp"
    wide-ref tmp[2614789]:string[26] "temp"
    (2614793 'move' tmp[2614789](2614791 'set reference' ":"))
    (170434 call +[38345] call_tmp[680612] tmp[2614789] ret_tmp[1905614])
    (1905617 'move' call_tmp[680617] ret_tmp[1905614])
    const-val call_tmp[680622]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1908988]:string[26] "temp"
    (170438 call _cast[1063342] coerce_tmp[1829688] ret_tmp[1908988])
    (1908991 'move' call_tmp[680622] ret_tmp[1908988])
    const-val call_tmp[680627]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905620]:string[26] "temp"
    wide-ref tmp[2614796]:string[26] "temp"
    (2614800 'move' tmp[2614796](2614798 'set reference' call_tmp[680622]))
    (170440 call +[38345] call_tmp[680617] tmp[2614796] ret_tmp[1905620])
    (1905623 'move' call_tmp[680627] ret_tmp[1905620])
    const-val call_tmp[680632]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905626]:string[26] "temp"
    wide-ref tmp[2614803]:string[26] "temp"
    (2614807 'move' tmp[2614803](2614805 'set reference' ": thrown here"))
    (170459 call +[38345] call_tmp[680627] tmp[2614803] ret_tmp[1905626])
    (1905629 'move' call_tmp[680632] ret_tmp[1905626])
    const-val call_tmp[680637]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905632]:string[26] "temp"
    wide-ref tmp[2614810]:string[26] "temp"
    (2614814 'move' tmp[2614810](2614812 'set reference' "\n  "))
    (170462 call +[38345] call_tmp[680632] tmp[2614810] ret_tmp[1905632])
    (1905635 'move' call_tmp[680637] ret_tmp[1905632])
    const-val call_tmp[680642]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905638]:string[26] "temp"
    wide-ref tmp[2614817]:string[26] "temp"
    (2614821 'move' tmp[2614817](2614819 'set reference' myFileS[170328]))
    (170465 call +[38345] call_tmp[680637] tmp[2614817] ret_tmp[1905638])
    (1905641 'move' call_tmp[680642] ret_tmp[1905638])
    const-val call_tmp[680647]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905644]:string[26] "temp"
    wide-ref tmp[2614824]:string[26] "temp"
    (2614828 'move' tmp[2614824](2614826 'set reference' ":"))
    (170468 call +[38345] call_tmp[680642] tmp[2614824] ret_tmp[1905644])
    (1905647 'move' call_tmp[680647] ret_tmp[1905644])
    const-val call_tmp[680652]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1908994]:string[26] "temp"
    (170472 call _cast[1063342] call_tmp[680568] ret_tmp[1908994])
    (1908997 'move' call_tmp[680652] ret_tmp[1908994])
    const-val call_tmp[680657]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905650]:string[26] "temp"
    wide-ref tmp[2614831]:string[26] "temp"
    (2614835 'move' tmp[2614831](2614833 'set reference' call_tmp[680652]))
    (170474 call +[38345] call_tmp[680647] tmp[2614831] ret_tmp[1905650])
    (1905653 'move' call_tmp[680657] ret_tmp[1905650])
    const-val call_tmp[680662]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1905656]:string[26] "temp"
    wide-ref tmp[2614838]:string[26] "temp"
    (2614842 'move' tmp[2614838](2614840 'set reference' ": uncaught here"))
    (170493 call +[38345] call_tmp[680657] tmp[2614838] ret_tmp[1905656])
    (1905659 'move' call_tmp[680662] ret_tmp[1905656])
    const-val s[170495]:string[26] "dead at end of block" "insert auto destroy"
    (544834 'move' s[170495] call_tmp[680662])
    const-val coerce_tmp[2269397]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2630349]:int(32)[95] "temp"
    (2269399 'move' tmp[2630349](2269401 '.v' s[170495] locale_id[30757]))
    (2630352 'move' coerce_tmp[2269397] tmp[2630349])
    const-val call_tmp[2269404]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269406 'move' call_tmp[2269404](2269408 '!=' coerce_tmp[2269397] chpl_nodeID[208207]))
    if call_tmp[2269404]
    {
      (2269414 call halt[154111] "Cannot call .c_str() on a remote string")
    }
    val coerce_tmp[2269417]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2630355]:c_ptr(uint(8))[937612] "temp"
    (2269419 'move' tmp[2630355](2269421 '.v' s[170495] buff[30740]))
    (2630358 'move' coerce_tmp[2269417] tmp[2630355])
    const-val call_tmp[2269424]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269426 'move' call_tmp[2269424](2269428 'cast' c_string[19] coerce_tmp[2269417]))
    (170507 call chpl_error_preformatted[1829762] call_tmp[2269424])
    ref i_x[2246177]:string[26] "temp"
    (2246181 'move' i_x[2246177](2246179 'set reference' s[170495]))
    wide-ref tmp[2627149]:string[26] "temp"
    (2627152 'move' tmp[2627149] i_x[2246177])
    (2246185 call deinit[30834] tmp[2627149])
    ref i_x[2246189]:string[26] "temp"
    (2246193 'move' i_x[2246189](2246191 'set reference' call_tmp[680657]))
    wide-ref tmp[2627155]:string[26] "temp"
    (2627158 'move' tmp[2627155] i_x[2246189])
    (2246197 call deinit[30834] tmp[2627155])
    ref i_x[2246201]:string[26] "temp"
    (2246205 'move' i_x[2246201](2246203 'set reference' call_tmp[680652]))
    wide-ref tmp[2627161]:string[26] "temp"
    (2627164 'move' tmp[2627161] i_x[2246201])
    (2246209 call deinit[30834] tmp[2627161])
    ref i_x[2246213]:string[26] "temp"
    (2246217 'move' i_x[2246213](2246215 'set reference' call_tmp[680647]))
    wide-ref tmp[2627167]:string[26] "temp"
    (2627170 'move' tmp[2627167] i_x[2246213])
    (2246221 call deinit[30834] tmp[2627167])
    ref i_x[2246225]:string[26] "temp"
    (2246229 'move' i_x[2246225](2246227 'set reference' call_tmp[680642]))
    wide-ref tmp[2627173]:string[26] "temp"
    (2627176 'move' tmp[2627173] i_x[2246225])
    (2246233 call deinit[30834] tmp[2627173])
    ref i_x[2246237]:string[26] "temp"
    (2246241 'move' i_x[2246237](2246239 'set reference' call_tmp[680637]))
    wide-ref tmp[2627179]:string[26] "temp"
    (2627182 'move' tmp[2627179] i_x[2246237])
    (2246245 call deinit[30834] tmp[2627179])
    ref i_x[2246249]:string[26] "temp"
    (2246253 'move' i_x[2246249](2246251 'set reference' call_tmp[680632]))
    wide-ref tmp[2627185]:string[26] "temp"
    (2627188 'move' tmp[2627185] i_x[2246249])
    (2246257 call deinit[30834] tmp[2627185])
    ref i_x[2246261]:string[26] "temp"
    (2246265 'move' i_x[2246261](2246263 'set reference' call_tmp[680627]))
    wide-ref tmp[2627191]:string[26] "temp"
    (2627194 'move' tmp[2627191] i_x[2246261])
    (2246269 call deinit[30834] tmp[2627191])
    ref i_x[2246273]:string[26] "temp"
    (2246277 'move' i_x[2246273](2246275 'set reference' call_tmp[680622]))
    wide-ref tmp[2627197]:string[26] "temp"
    (2627200 'move' tmp[2627197] i_x[2246273])
    (2246281 call deinit[30834] tmp[2627197])
    ref i_x[2246285]:string[26] "temp"
    (2246289 'move' i_x[2246285](2246287 'set reference' call_tmp[680617]))
    wide-ref tmp[2627203]:string[26] "temp"
    (2627206 'move' tmp[2627203] i_x[2246285])
    (2246293 call deinit[30834] tmp[2627203])
    ref i_x[2246297]:string[26] "temp"
    (2246301 'move' i_x[2246297](2246299 'set reference' call_tmp[680612]))
    wide-ref tmp[2627209]:string[26] "temp"
    (2627212 'move' tmp[2627209] i_x[2246297])
    (2246305 call deinit[30834] tmp[2627209])
    ref i_x[2246309]:string[26] "temp"
    (2246313 'move' i_x[2246309](2246311 'set reference' call_tmp[680607]))
    wide-ref tmp[2627215]:string[26] "temp"
    (2627218 'move' tmp[2627215] i_x[2246309])
    (2246317 call deinit[30834] tmp[2627215])
    ref i_x[2246321]:string[26] "temp"
    (2246325 'move' i_x[2246321](2246323 'set reference' call_tmp[680602]))
    wide-ref tmp[2627221]:string[26] "temp"
    (2627224 'move' tmp[2627221] i_x[2246321])
    (2246329 call deinit[30834] tmp[2627221])
    ref i_x[2246333]:string[26] "temp"
    (2246337 'move' i_x[2246333](2246335 'set reference' call_tmp[680597]))
    wide-ref tmp[2627227]:string[26] "temp"
    (2627230 'move' tmp[2627227] i_x[2246333])
    (2246341 call deinit[30834] tmp[2627227])
    ref i_x[2246345]:string[26] "temp"
    (2246349 'move' i_x[2246345](2246347 'set reference' thrownFileS[170364]))
    wide-ref tmp[2627233]:string[26] "temp"
    (2627236 'move' tmp[2627233] i_x[2246345])
    (2246353 call deinit[30834] tmp[2627233])
    ref i_x[2246357]:string[26] "temp"
    (2246361 'move' i_x[2246357](2246359 'set reference' myFileS[170328]))
    wide-ref tmp[2627239]:string[26] "temp"
    (2627242 'move' tmp[2627239] i_x[2246357])
    (2246365 call deinit[30834] tmp[2627239])
    (522426 return _void[55])
  }
  function _local_chpl_propagate_error[2604788](const in arg err[2604790]:__wide_Error[2581418]) : void[4] "always propagate line file info" "insert line file info" "local fn" "no doc" "resolved" "no return value for void"
  {
    (2604794 call _local_chpl_uncaught_error[2602078] err[2604790])
    (2604796 return _void[55])
  }
  function chpl_propagate_error[170518](const in arg err[170515]:__wide_Error[2581418]) : void[4] "always propagate line file info" "insert line file info" "no doc" "resolved" "no return value for void"
  {
    (170523 call chpl_uncaught_error[170289] err[170515])
    (522428 return _void[55])
  }
  function chpl_forall_error[170535](const in arg err[170532]:Error[167984]) : Error[167984] "no doc" "resolved"
  {
    val ret[522432]:Error[167984] "dead after last mention" "RVV" "temp"
    val _formal_type_tmp_[2520457]:TaskErrors[169702] "temp"
    val ret[2520459]:TaskErrors[169702] "dead after last mention" "RVV" "temp"
    val coerce_tmp[2520461]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2520463 'move' coerce_tmp[2520461](2520465 'cast' object[22] err[170532]))
    const-val call_tmp[2520468]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2520470 'move' call_tmp[2520468](2520472 'ptr_eq' coerce_tmp[2520461] nil[44]))
    if call_tmp[2520468]
    {
      (2520477 'move' ret[2520459](2520479 'cast' TaskErrors[169702] nil[44]))
      gotoReturn _end__cast[2520495] _end__cast[2520495]
    }
    val call_tmp[2520485]:TaskErrors[169702] "dead at end of block" "maybe param" "temp"
    (2520487 'move' call_tmp[2520485](2520489 'dynamic_cast' _formal_type_tmp_[2520457] err[170532]))
    (2520492 'move' ret[2520459] call_tmp[2520485])
    label _end__cast[2520495]
    val coerce_tmp[1830025]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1830030 'move' coerce_tmp[1830025](1830027 'cast' object[22] ret[2520459]))
    const-val call_tmp[2229611]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2229613 'move' call_tmp[2229611](2229615 'ptr_neq' coerce_tmp[1830025] nil[44]))
    if call_tmp[2229611]
    {
      (1830210 'move' ret[522432] err[170532])
      gotoReturn _end_chpl_forall_error[522430] _end_chpl_forall_error[522430]
    }
    val new_temp[1830191]:TaskErrors[169702] "dead after last mention" "temp"
    (1830193 'move' new_temp[1830191](1830037 call _new[1830141] err[170532]))
    (522444 'move' ret[522432](1830212 'cast' Error[167984] new_temp[1830191]))
    label _end_chpl_forall_error[522430]
    (522434 return ret[522432])
  }
  function chpl_enum_cast_error[1072044](const in arg casted[1072046]:uint(8)[100], const  ref arg enumName[1072048]:string[26], ref arg error_out[1885908]:__wide_Error[2581418]) : void[4] throws "always propagate line file info" "insert line file info" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_129[2577840]:string[26] "temp"
    (2577841 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local__str_literal_1107[2577834]:string[26] "temp"
    (2577835 'move' "'" "'")
    const-val local__str_literal_2267[2577828]:string[26] "temp"
    (2577829 'move' "' to enum '" "' to enum '")
    const-val local__str_literal_2269[2577822]:string[26] "temp"
    (2577823 'move' "bad cast from int '" "bad cast from int '")
    const-val call_tmp[1072054]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1909320]:string[26] "temp"
    (1072059 call _cast[1072108] casted[1072046] ret_tmp[1909320])
    (1909323 'move' call_tmp[1072054] ret_tmp[1909320])
    const-val call_tmp[1072062]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905788]:string[26] "temp"
    wide-ref tmp[2615941]:string[26] "temp"
    (2615945 'move' tmp[2615941](2615943 'set reference' call_tmp[1072054]))
    (1072067 call +[38345] "bad cast from int '" tmp[2615941] ret_tmp[1905788])
    (1905791 'move' call_tmp[1072062] ret_tmp[1905788])
    const-val call_tmp[1072070]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905794]:string[26] "temp"
    wide-ref tmp[2615948]:string[26] "temp"
    (2615952 'move' tmp[2615948](2615950 'set reference' "' to enum '"))
    (1072075 call +[38345] call_tmp[1072062] tmp[2615948] ret_tmp[1905794])
    (1905797 'move' call_tmp[1072070] ret_tmp[1905794])
    const-val call_tmp[1072078]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905800]:string[26] "temp"
    wide-ref tmp[2615955]:string[26] "temp"
    (2615958 'move' tmp[2615955] enumName[1072048])
    (1072083 call +[38345] call_tmp[1072070] tmp[2615955] ret_tmp[1905800])
    (1905803 'move' call_tmp[1072078] ret_tmp[1905800])
    const-val call_tmp[1072086]:owned IllegalArgumentError[1064747] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
    val new_temp[1073744]:IllegalArgumentError[168246] "dead after last mention" "temp"
    (1073746 'move' new_temp[1073744](1073670 call _new[1073691] call_tmp[1072078] "'"))
    const-val initTemp[1073765]:owned IllegalArgumentError[1064747] "dead after last mention" "delay instantiation" "temp"
    (1073768 call init[1064398] initTemp[1073765] new_temp[1073744])
    (1072088 'move' call_tmp[1072086] initTemp[1073765])
    val call_tmp[1072096]:__wide_Error[2581418] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1073782]:owned Error[966647] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
    const-val ret_tmp[1909192]:owned Error[966647] "temp"
    ref i_x[2376638]:owned IllegalArgumentError[1064747] "temp"
    (2376642 'move' i_x[2376638](2376640 'set reference' call_tmp[1072086]))
    ref i__retArg[2376644]:owned Error[966647] "temp"
    (2376648 'move' i__retArg[2376644](2376646 'set reference' ret_tmp[1909192]))
    val _formal_tmp_x[2376651]:owned IllegalArgumentError[1064747] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (2376653 'move' _formal_tmp_x[2376651] i_x[2376638])
    const-val ret[2376656]:owned Error[966647] "dead after last mention" "RVV" "temp"
    ref i_this[2376658]:owned IllegalArgumentError[1064747] "temp"
    (2376660 'move' i_this[2376658](2376662 'set reference' _formal_tmp_x[2376651]))
    val coerce_tmp[2376664]:IllegalArgumentError[168246] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val tmp[2634541]:IllegalArgumentError[168246] "temp"
    (2376666 'move' tmp[2634541](2376668 '.v' i_this[2376658] chpl_p[1064742]))
    (2634544 'move' coerce_tmp[2376664] tmp[2634541])
    val call_tmp[2376671]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
    (2376673 'move' call_tmp[2376671](2376675 'cast' Error[167984] coerce_tmp[2376664]))
    ref i_this[2376683]:owned IllegalArgumentError[1064747] "temp"
    (2376685 'move' i_this[2376683](2376687 'set reference' _formal_tmp_x[2376651]))
    val tmp[2376689]:IllegalArgumentError[168246] "temp"
    (2376691 'move' tmp[2376689](2376693 'cast' IllegalArgumentError[168246] nil[44]))
    (2376696 '.=' i_this[2376683] chpl_p[1064742] tmp[2376689])
    val coerce_tmp[2376700]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2376702 'move' coerce_tmp[2376700](2376704 'cast' object[22] call_tmp[2376671]))
    const-val call_tmp[2376707]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2376709 'move' call_tmp[2376707](2376711 'ptr_eq' coerce_tmp[2376700] nil[44]))
    if call_tmp[2376707]
    {
      (2376717 call nilCheckHalt[210238] "argument to ! is nil")
    }
    const-val call_tmp[2376720]:owned Error[966647] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[2376722]:owned Error[966647] "dead after last mention" "delay instantiation" "temp"
    const-val tmp[2634547]:__wide_Error[2581418] "temp"
    (2634550 'move' tmp[2634547] call_tmp[2376671])
    (2376725 call init[968283] initTemp[2376722] tmp[2634547])
    (2376728 'move' call_tmp[2376720] initTemp[2376722])
    (2376731 'move' ret[2376656] call_tmp[2376720])
    (2376735 call chpl__autoDestroy[1678826] _formal_tmp_x[2376651])
    (2376739 '=' i__retArg[2376644] ret[2376656])
    (1909195 'move' coerce_tmp[1073782] ret_tmp[1909192])
    const-val _formal_tmp_in_err[1073961]:owned Error[966647] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (1073965 'move' _formal_tmp_in_err[1073961] coerce_tmp[1073782])
    (1072098 'move' call_tmp[1072096](1072101 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1073961]))
    (1885921 '=' error_out[1885908] call_tmp[1072096])
    ref i_x[2247389]:string[26] "temp"
    (2247393 'move' i_x[2247389](2247391 'set reference' call_tmp[1072078]))
    wide-ref tmp[2627551]:string[26] "temp"
    (2627554 'move' tmp[2627551] i_x[2247389])
    (2247397 call deinit[30834] tmp[2627551])
    ref i_x[2247401]:string[26] "temp"
    (2247405 'move' i_x[2247401](2247403 'set reference' call_tmp[1072070]))
    wide-ref tmp[2627557]:string[26] "temp"
    (2627560 'move' tmp[2627557] i_x[2247401])
    (2247409 call deinit[30834] tmp[2627557])
    ref i_x[2247413]:string[26] "temp"
    (2247417 'move' i_x[2247413](2247415 'set reference' call_tmp[1072062]))
    wide-ref tmp[2627563]:string[26] "temp"
    (2627566 'move' tmp[2627563] i_x[2247413])
    (2247421 call deinit[30834] tmp[2627563])
    ref i_x[2247425]:string[26] "temp"
    (2247429 'move' i_x[2247425](2247427 'set reference' call_tmp[1072054]))
    wide-ref tmp[2627569]:string[26] "temp"
    (2627572 'move' tmp[2627569] i_x[2247425])
    (2247433 call deinit[30834] tmp[2627569])
    gotoErrorHandlingReturn _endchpl_enum_cast_error[1885910] _endchpl_enum_cast_error[1885910]
    label _endchpl_enum_cast_error[1885910]
    (1072105 return _void[55])
  }
  function _local_on_fn[2614207](wide-ref arg this[2614209]:chpl_TaskErrors[168348], const in arg err[2614211]:__wide_Error[2581418]) : void[4] "local fn" "on" "resolved"
  {
    wide-ref call_tmp[2614214]:chpl_LocalSpinlock[187432] "dead after last mention" "maybe param" "temp"
    (2614443 'local_check' this[2614209] c"cannot access remote data in local block")
    ref local_this[2614440]:chpl_TaskErrors[168348] "temp"
    (2614446 'move' local_this[2614440] this[2614209])
    (2614216 'move' call_tmp[2614214](2614218 '.' local_this[2614440] _errorsLock[168271]))
    const-val call_tmp[2614221]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (2614223 'move' call_tmp[2614221](2614225 '_wide_get_locale' call_tmp[2614214]))
    val isdirect[2614227]:bool[10] "temp"
    (2614229 'move' isdirect[2614227](2614232 call _local_chpl_doDirectExecuteOn[2585146] call_tmp[2614221]))
    if isdirect[2614227]
    {
      (2614237 call _local_on_fn[2585171] call_tmp[2614214])
    }
    {
      val _args_foron_fn[2614240]:_class_localson_fn[2198955] "temp"
      (2614242 'move' _args_foron_fn[2614240](2614244 'stack allocate class' _class_localson_fn[2198955]))
      (2614246 '.=' _args_foron_fn[2614240] _0_tmp[2198958] call_tmp[2614221])
      wide-ref tmp[2614250]:chpl_LocalSpinlock[187432] "temp"
      (2614252 'move' tmp[2614250](2614254 'set reference' call_tmp[2614214]))
      (2614256 '.=' _args_foron_fn[2614240] _1_this[2198960] tmp[2614250])
      val _args_vforon_fn[2614260]:c_void_ptr[149] "temp"
      (2614262 'move' _args_vforon_fn[2614260](2614264 'cast_to_void_star' _args_foron_fn[2614240]))
      val _args_sizeon_fn[2614266]:int(64)[13] "temp"
      (2614268 'move' _args_sizeon_fn[2614266](2614270 'sizeof_bundle' _class_localson_fn[2198955]))
      (2654306 call chpl_taskRunningCntDec[93219])
      on(2614273 call _local_wrapon_fn[2585570] call_tmp[2614221] _args_vforon_fn[2614260] _args_sizeon_fn[2614266] _args_foron_fn[2614240])
      (2654308 call chpl_taskRunningCntInc[93198])
    }
    val coerce_tmp[2614279]:__wide_Error[2581418] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2614455 'local_check' this[2614209] c"cannot access remote data in local block")
    ref local_this[2614452]:chpl_TaskErrors[168348] "temp"
    (2614458 'move' local_this[2614452] this[2614209])
    (2614281 'move' coerce_tmp[2614279](2614283 '.v' local_this[2614452] _head[168266]))
    (2614286 'noop')
    val coerce_tmp[2614287]:__wide_Error[2581418] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2614289 'move' coerce_tmp[2614287] err[2614211])
    (2614464 'local_check' coerce_tmp[2614287] c"cannot access remote data in local block")
    val local_coerce_tmp[2614461]:Error[167984] "temp"
    (2614467 'move' local_coerce_tmp[2614461] coerce_tmp[2614287])
    (2614292 '.=' local_coerce_tmp[2614461] _next[167912] coerce_tmp[2614279])
    (2614473 'local_check' this[2614209] c"cannot access remote data in local block")
    ref local_this[2614470]:chpl_TaskErrors[168348] "temp"
    (2614476 'move' local_this[2614470] this[2614209])
    (2614296 '.=' local_this[2614470] _head[168266] err[2614211])
    wide-ref call_tmp[2614300]:chpl_LocalSpinlock[187432] "dead after last mention" "maybe param" "temp"
    (2614482 'local_check' this[2614209] c"cannot access remote data in local block")
    ref local_this[2614479]:chpl_TaskErrors[168348] "temp"
    (2614485 'move' local_this[2614479] this[2614209])
    (2614302 'move' call_tmp[2614300](2614304 '.' local_this[2614479] _errorsLock[168271]))
    wide-ref call_tmp[2614307]:AtomicBool[45877] "dead after last mention" "maybe param" "temp"
    (2614491 'local_check' call_tmp[2614300] c"cannot access remote data in local block")
    ref local_call_tmp[2614488]:chpl_LocalSpinlock[187432] "temp"
    (2614494 'move' local_call_tmp[2614488] call_tmp[2614300])
    (2614309 'move' call_tmp[2614307](2614311 '.' local_call_tmp[2614488] l[187317]))
    const-val call_tmp[2614314]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (2614316 'move' call_tmp[2614314](2614318 '_wide_get_locale' call_tmp[2614307]))
    val isdirect[2614320]:bool[10] "temp"
    (2614322 'move' isdirect[2614320](2614325 call _local_chpl_doDirectExecuteOn[2585146] call_tmp[2614314]))
    if isdirect[2614320]
    {
      (2614330 call _local_on_fn[2585650] call_tmp[2614307] 0)
    }
    {
      val _args_foron_fn[2614334]:_class_localson_fn[2204622] "temp"
      (2614336 'move' _args_foron_fn[2614334](2614338 'stack allocate class' _class_localson_fn[2204622]))
      (2614340 '.=' _args_foron_fn[2614334] _0_tmp[2204625] call_tmp[2614314])
      wide-ref tmp[2614344]:AtomicBool[45877] "temp"
      (2614346 'move' tmp[2614344](2614348 'set reference' call_tmp[2614307]))
      (2614350 '.=' _args_foron_fn[2614334] _1_this[2204627] tmp[2614344])
      (2614354 '.=' _args_foron_fn[2614334] _2_value[2204629] 0)
      val _args_vforon_fn[2614358]:c_void_ptr[149] "temp"
      (2614360 'move' _args_vforon_fn[2614358](2614362 'cast_to_void_star' _args_foron_fn[2614334]))
      val _args_sizeon_fn[2614364]:int(64)[13] "temp"
      (2614366 'move' _args_sizeon_fn[2614364](2614368 'sizeof_bundle' _class_localson_fn[2204622]))
      on(2614371 call _local_wrapon_fn[2585689] call_tmp[2614314] _args_vforon_fn[2614358] _args_sizeon_fn[2614364] _args_foron_fn[2614334])
    }
    (2614377 return _void[55])
  }
  function on_fn[935527](wide-ref arg this[1882168]:chpl_TaskErrors[168348], const in arg err[1882170]:__wide_Error[2581418]) : void[4] "on" "resolved"
  {
    wide-ref call_tmp[2338466]:chpl_LocalSpinlock[187432] "dead after last mention" "maybe param" "temp"
    (2338468 'move' call_tmp[2338466](2338470 '.' this[1882168] _errorsLock[168271]))
    const-val call_tmp[2321755]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (2321757 'move' call_tmp[2321755](2321759 '_wide_get_locale' call_tmp[2338466]))
    val isdirect[2321764]:bool[10] "temp"
    (2321766 'move' isdirect[2321764](2321769 call chpl_doDirectExecuteOn[187469] call_tmp[2321755]))
    if isdirect[2321764]
    {
      (2321774 call on_fn[935662] call_tmp[2338466])
    }
    {
      val _args_foron_fn[2321777]:_class_localson_fn[2198955] "temp"
      (2321779 'move' _args_foron_fn[2321777](2321781 'stack allocate class' _class_localson_fn[2198955]))
      (2321783 '.=' _args_foron_fn[2321777] _0_tmp[2198958] call_tmp[2321755])
      wide-ref tmp[2321787]:chpl_LocalSpinlock[187432] "temp"
      (2321789 'move' tmp[2321787](2321791 'set reference' call_tmp[2338466]))
      (2321793 '.=' _args_foron_fn[2321777] _1_this[2198960] tmp[2321787])
      val _args_vforon_fn[2321797]:c_void_ptr[149] "temp"
      (2321799 'move' _args_vforon_fn[2321797](2321801 'cast_to_void_star' _args_foron_fn[2321777]))
      val _args_sizeon_fn[2321803]:int(64)[13] "temp"
      (2321805 'move' _args_sizeon_fn[2321803](2321807 'sizeof_bundle' _class_localson_fn[2198955]))
      (2653426 call chpl_taskRunningCntDec[93219])
      on(2321810 call wrapon_fn[2198995] call_tmp[2321755] _args_vforon_fn[2321797] _args_sizeon_fn[2321803] _args_foron_fn[2321777])
      (2653428 call chpl_taskRunningCntInc[93198])
    }
    val coerce_tmp[1232592]:__wide_Error[2581418] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1232596 'move' coerce_tmp[1232592](2564994 '.v' this[1882168] _head[168266]))
    (544708 'noop')
    val coerce_tmp[1232599]:__wide_Error[2581418] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1232604 'move' coerce_tmp[1232599] err[1882170])
    (2565000 '.=' coerce_tmp[1232599] _next[167912] coerce_tmp[1232592])
    (2565006 '.=' this[1882168] _head[168266] err[1882170])
    wide-ref call_tmp[2338476]:chpl_LocalSpinlock[187432] "dead after last mention" "maybe param" "temp"
    (2338478 'move' call_tmp[2338476](2338480 '.' this[1882168] _errorsLock[168271]))
    wide-ref call_tmp[2322482]:AtomicBool[45877] "dead after last mention" "maybe param" "temp"
    (2322484 'move' call_tmp[2322482](2322486 '.' call_tmp[2338476] l[187317]))
    const-val call_tmp[2322496]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (2322498 'move' call_tmp[2322496](2322500 '_wide_get_locale' call_tmp[2322482]))
    val isdirect[2322505]:bool[10] "temp"
    (2322507 'move' isdirect[2322505](2322510 call chpl_doDirectExecuteOn[187469] call_tmp[2322496]))
    if isdirect[2322505]
    {
      (2322515 call on_fn[1233271] call_tmp[2322482] 0)
    }
    {
      val _args_foron_fn[2322519]:_class_localson_fn[2204622] "temp"
      (2322521 'move' _args_foron_fn[2322519](2322523 'stack allocate class' _class_localson_fn[2204622]))
      (2322525 '.=' _args_foron_fn[2322519] _0_tmp[2204625] call_tmp[2322496])
      wide-ref tmp[2322529]:AtomicBool[45877] "temp"
      (2322531 'move' tmp[2322529](2322533 'set reference' call_tmp[2322482]))
      (2322535 '.=' _args_foron_fn[2322519] _1_this[2204627] tmp[2322529])
      (2322539 '.=' _args_foron_fn[2322519] _2_value[2204629] 0)
      val _args_vforon_fn[2322543]:c_void_ptr[149] "temp"
      (2322545 'move' _args_vforon_fn[2322543](2322547 'cast_to_void_star' _args_foron_fn[2322519]))
      val _args_sizeon_fn[2322549]:int(64)[13] "temp"
      (2322551 'move' _args_sizeon_fn[2322549](2322553 'sizeof_bundle' _class_localson_fn[2204622]))
      on(2322556 call wrapon_fn[2204668] call_tmp[2322496] _args_vforon_fn[2322543] _args_sizeon_fn[2322549] _args_foron_fn[2322519])
    }
    (935534 return _void[55])
  }
  function chpl_error_preformatted[1829762](const in arg c_string[1829764]:c_string[19]) : void[4] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "resolved" "no return value for void"
  {
    (1829770 return _void[55])
  }
  function _local_wrapon_fn[2614381](const in arg dummy_locale_arg[2614383]:chpl_localeID_t[209352], in arg buf[2614385]:c_void_ptr[149], in arg buf_size[2614387]:int(64)[13], in arg c[2614389]:_class_localson_fn[2198738]) : void[4] "local fn" "on block"
  {
    wide-ref _1_this[2614392]:chpl_TaskErrors[168348] "temp"
    (2614394 'move' _1_this[2614392](2614396 '.v' c[2614389] _1_this[2198743]))
    val _2_err[2614399]:__wide_Error[2581418] "temp"
    (2614401 'move' _2_err[2614399](2614403 '.v' c[2614389] _2_err[2198745]))
    (2654290 call chpl_taskRunningCntInc[93198])
    (2614407 call _local_on_fn[2614207] _1_this[2614392] _2_err[2614399])
    (2654292 call chpl_taskRunningCntDec[93219])
    (2614410 return _void[55])
  }
  function wrapon_fn[2198784](const in arg dummy_locale_arg[2198786]:chpl_localeID_t[209352], in arg buf[2198788]:c_void_ptr[149], in arg buf_size[2198790]:int(64)[13], in arg c[2198792]:_class_localson_fn[2198738]) : void[4] "on block"
  {
    wide-ref _1_this[2198804]:chpl_TaskErrors[168348] "temp"
    (2198809 'move' _1_this[2198804](2198806 '.v' c[2198792] _1_this[2198743]))
    val _2_err[2198812]:__wide_Error[2581418] "temp"
    (2198817 'move' _2_err[2198812](2198814 '.v' c[2198792] _2_err[2198745]))
    (2652934 call chpl_taskRunningCntInc[93198])
    (2198795 call on_fn[935527] _1_this[2198804] _2_err[2198812])
    (2652936 call chpl_taskRunningCntDec[93219])
    (2198820 return _void[55])
  }
}