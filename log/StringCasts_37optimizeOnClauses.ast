AST dump for StringCasts after pass optimizeOnClauses.
Module use list: ChapelStandard SysCTypes NVStringFactory 

{
  function chpl__init_StringCasts[416099]() : void[4] "fast on" "insert line file info" "local fn" "module init" "resolved"
  {
    (523966 return _void[55])
  }
  function _cast[1202650](const  ref arg x[1202654]:string[26], ref arg error_out[1765587]:Error[167942]) : bool[10] throws "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_2390[2279048]:string[26] "temp"
    (2279049 'move' "' to bool" "' to bool")
    const-val local__str_literal_2265[2279042]:string[26] "temp"
    (2279043 'move' "bad cast from string '" "bad cast from string '")
    const-val local__str_literal_2428[2279036]:string[26] "temp"
    (2279037 'move' "false" "false")
    const-val local__str_literal_787[2279030]:string[26] "temp"
    (2279031 'move' "true" "true")
    const-val local__str_literal_129[2279024]:string[26] "temp"
    (2279025 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local__str_literal_2430[2279018]:string[26] "temp"
    (2279019 'move' "bad cast from empty string to bool" "bad cast from empty string to bool")
    const-val local__str_literal_532[2279012]:string[26] "temp"
    (2279013 'move' " \t\r\n" " \t\r\n")
    val ret[1202656]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1202664]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1782330]:string[26] "temp"
    (1202672 call strip[36092] x[1202654] " \t\r\n" 1 1 ret_tmp[1782330])
    (1782333 'move' call_tmp[1202664] ret_tmp[1782330])
    const-val str[1202673]:string[26] "dead at end of block" "insert auto destroy"
    (1202675 'move' str[1202673] call_tmp[1202664])
    const-val coerce_tmp[2069348]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2069350 'move' coerce_tmp[2069348](2069352 '.v' str[1202673] buffLen[30719]))
    const-val call_tmp[2069355]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2069357 'move' call_tmp[2069355](2069359 '==' coerce_tmp[2069348] 0))
    if call_tmp[2069355]
    {
      const-val call_tmp[1202697]:owned IllegalArgumentError[1061625] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      val new_temp[1202867]:IllegalArgumentError[168204] "dead after last mention" "temp"
      (1202869 'move' new_temp[1202867](1202854 call _new[1061174] "bad cast from empty string to bool"))
      const-val initTemp[1202876]:owned IllegalArgumentError[1061625] "dead after last mention" "delay instantiation" "temp"
      (1202879 call init[1061276] initTemp[1202876] new_temp[1202867])
      (1202699 'move' call_tmp[1202697] initTemp[1202876])
      val call_tmp[1202706]:Error[167942] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1202893]:owned Error[962257] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1785778]:owned Error[962257] "temp"
      ref i_x[2166320]:owned IllegalArgumentError[1061625] "temp"
      (2166324 'move' i_x[2166320](2166322 'set reference' call_tmp[1202697]))
      ref i__retArg[2166326]:owned Error[962257] "temp"
      (2166330 'move' i__retArg[2166326](2166328 'set reference' ret_tmp[1785778]))
      val _formal_tmp_x[2166333]:owned IllegalArgumentError[1061625] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2166335 'move' _formal_tmp_x[2166333] i_x[2166320])
      const-val ret[2166338]:owned Error[962257] "dead after last mention" "RVV" "temp"
      ref i_this[2166340]:owned IllegalArgumentError[1061625] "temp"
      (2166342 'move' i_this[2166340](2166344 'set reference' _formal_tmp_x[2166333]))
      val coerce_tmp[2166346]:IllegalArgumentError[168204] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2166348 'move' coerce_tmp[2166346](2166350 '.v' i_this[2166340] chpl_p[1061620]))
      val call_tmp[2166353]:Error[167942] "dead after last mention" "expr temp" "maybe param" "temp"
      (2166355 'move' call_tmp[2166353](2166357 'cast' Error[167942] coerce_tmp[2166346]))
      ref i_this[2166365]:owned IllegalArgumentError[1061625] "temp"
      (2166367 'move' i_this[2166365](2166369 'set reference' _formal_tmp_x[2166333]))
      val tmp[2166371]:IllegalArgumentError[168204] "temp"
      (2166373 'move' tmp[2166371](2166375 'cast' IllegalArgumentError[168204] nil[44]))
      (2166378 '.=' i_this[2166365] chpl_p[1061620] tmp[2166371])
      val coerce_tmp[2166382]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2166384 'move' coerce_tmp[2166382](2166386 'cast' object[22] call_tmp[2166353]))
      const-val call_tmp[2166389]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2166391 'move' call_tmp[2166389](2166393 'ptr_eq' coerce_tmp[2166382] nil[44]))
      if call_tmp[2166389]
      {
        (2166399 call nilCheckHalt[210068] "argument to ! is nil")
      }
      const-val call_tmp[2166402]:owned Error[962257] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2166404]:owned Error[962257] "dead after last mention" "delay instantiation" "temp"
      (2166407 call init[963893] initTemp[2166404] call_tmp[2166353])
      (2166410 'move' call_tmp[2166402] initTemp[2166404])
      (2166413 'move' ret[2166338] call_tmp[2166402])
      (2166417 call chpl__autoDestroy[1476602] _formal_tmp_x[2166333])
      (2166421 '=' i__retArg[2166326] ret[2166338])
      (1785781 'move' coerce_tmp[1202893] ret_tmp[1785778])
      const-val _formal_tmp_in_err[1203072]:owned Error[962257] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1203076 'move' _formal_tmp_in_err[1203072] coerce_tmp[1202893])
      (1202708 'move' call_tmp[1202706](1202711 call chpl_fix_thrown_error[170007] _formal_tmp_in_err[1203072]))
      (1765598 '=' error_out[1765587] call_tmp[1202706])
      ref i_x[2051620]:string[26] "temp"
      (2051624 'move' i_x[2051620](2051622 'set reference' str[1202673]))
      (2051628 call deinit[30831] i_x[2051620])
      gotoErrorHandlingReturn _end__cast[1202805] _end__cast[1202805]
    }
    {
      const-val call_tmp[1202716]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1202718 'move' call_tmp[1202716](1202721 call ==[38820] str[1202673] "true"))
      if call_tmp[1202716]
      {
        (1202733 'move' ret[1202656] 1)
        ref i_x[2051632]:string[26] "temp"
        (2051636 'move' i_x[2051632](2051634 'set reference' str[1202673]))
        (2051640 call deinit[30831] i_x[2051632])
        gotoReturn _end__cast[1202805] _end__cast[1202805]
      }
      {
        const-val call_tmp[1202740]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1202742 'move' call_tmp[1202740](1202745 call ==[38820] str[1202673] "false"))
        if call_tmp[1202740]
        {
          (1202757 'move' ret[1202656] 0)
          ref i_x[2051644]:string[26] "temp"
          (2051648 'move' i_x[2051644](2051646 'set reference' str[1202673]))
          (2051652 call deinit[30831] i_x[2051644])
          gotoReturn _end__cast[1202805] _end__cast[1202805]
        }
        {
          const-val call_tmp[1202764]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1782710]:string[26] "temp"
          (1202769 call +[38342] "bad cast from string '" x[1202654] ret_tmp[1782710])
          (1782713 'move' call_tmp[1202764] ret_tmp[1782710])
          const-val call_tmp[1202772]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1782716]:string[26] "temp"
          (1202777 call +[38342] call_tmp[1202764] "' to bool" ret_tmp[1782716])
          (1782719 'move' call_tmp[1202772] ret_tmp[1782716])
          const-val call_tmp[1202780]:owned IllegalArgumentError[1061625] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
          val new_temp[1204865]:IllegalArgumentError[168204] "dead after last mention" "temp"
          (1204867 'move' new_temp[1204865](1204852 call _new[1061174] call_tmp[1202772]))
          const-val initTemp[1204874]:owned IllegalArgumentError[1061625] "dead after last mention" "delay instantiation" "temp"
          (1204877 call init[1061276] initTemp[1204874] new_temp[1204865])
          (1202782 'move' call_tmp[1202780] initTemp[1204874])
          val call_tmp[1202789]:Error[167942] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1204891]:owned Error[962257] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
          const-val ret_tmp[1785784]:owned Error[962257] "temp"
          ref i_x[2166426]:owned IllegalArgumentError[1061625] "temp"
          (2166430 'move' i_x[2166426](2166428 'set reference' call_tmp[1202780]))
          ref i__retArg[2166432]:owned Error[962257] "temp"
          (2166436 'move' i__retArg[2166432](2166434 'set reference' ret_tmp[1785784]))
          val _formal_tmp_x[2166439]:owned IllegalArgumentError[1061625] "dead at end of block" "insert auto destroy" "no copy" "temp"
          (2166441 'move' _formal_tmp_x[2166439] i_x[2166426])
          const-val ret[2166444]:owned Error[962257] "dead after last mention" "RVV" "temp"
          ref i_this[2166446]:owned IllegalArgumentError[1061625] "temp"
          (2166448 'move' i_this[2166446](2166450 'set reference' _formal_tmp_x[2166439]))
          val coerce_tmp[2166452]:IllegalArgumentError[168204] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2166454 'move' coerce_tmp[2166452](2166456 '.v' i_this[2166446] chpl_p[1061620]))
          val call_tmp[2166459]:Error[167942] "dead after last mention" "expr temp" "maybe param" "temp"
          (2166461 'move' call_tmp[2166459](2166463 'cast' Error[167942] coerce_tmp[2166452]))
          ref i_this[2166471]:owned IllegalArgumentError[1061625] "temp"
          (2166473 'move' i_this[2166471](2166475 'set reference' _formal_tmp_x[2166439]))
          val tmp[2166477]:IllegalArgumentError[168204] "temp"
          (2166479 'move' tmp[2166477](2166481 'cast' IllegalArgumentError[168204] nil[44]))
          (2166484 '.=' i_this[2166471] chpl_p[1061620] tmp[2166477])
          val coerce_tmp[2166488]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2166490 'move' coerce_tmp[2166488](2166492 'cast' object[22] call_tmp[2166459]))
          const-val call_tmp[2166495]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2166497 'move' call_tmp[2166495](2166499 'ptr_eq' coerce_tmp[2166488] nil[44]))
          if call_tmp[2166495]
          {
            (2166505 call nilCheckHalt[210068] "argument to ! is nil")
          }
          const-val call_tmp[2166508]:owned Error[962257] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
          const-val initTemp[2166510]:owned Error[962257] "dead after last mention" "delay instantiation" "temp"
          (2166513 call init[963893] initTemp[2166510] call_tmp[2166459])
          (2166516 'move' call_tmp[2166508] initTemp[2166510])
          (2166519 'move' ret[2166444] call_tmp[2166508])
          (2166523 call chpl__autoDestroy[1476602] _formal_tmp_x[2166439])
          (2166527 '=' i__retArg[2166432] ret[2166444])
          (1785787 'move' coerce_tmp[1204891] ret_tmp[1785784])
          const-val _formal_tmp_in_err[1205070]:owned Error[962257] "dead after last mention" "expr temp" "no auto destroy" "temp"
          (1205074 'move' _formal_tmp_in_err[1205070] coerce_tmp[1204891])
          (1202791 'move' call_tmp[1202789](1202794 call chpl_fix_thrown_error[170007] _formal_tmp_in_err[1205070]))
          (1765611 '=' error_out[1765587] call_tmp[1202789])
          ref i_x[2051656]:string[26] "temp"
          (2051660 'move' i_x[2051656](2051658 'set reference' call_tmp[1202772]))
          (2051664 call deinit[30831] i_x[2051656])
          ref i_x[2051668]:string[26] "temp"
          (2051672 'move' i_x[2051668](2051670 'set reference' call_tmp[1202764]))
          (2051676 call deinit[30831] i_x[2051668])
          ref i_x[2051680]:string[26] "temp"
          (2051684 'move' i_x[2051680](2051682 'set reference' str[1202673]))
          (2051688 call deinit[30831] i_x[2051680])
          gotoErrorHandlingReturn _end__cast[1202805] _end__cast[1202805]
        }
      }
    }
    label _end__cast[1202805]
    (1202807 return ret[1202656])
  }
  function _cast[1060220](const in arg x[1060224]:int(64)[13], ref arg _retArg[1785730]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_4783[2278372]:string[26] "temp"
    (2278373 'move' "casting uint(64) with a value greater than the maximum of int(64) to int(64)" "casting uint(64) with a value greater than the maximum of int(64) to int(64)")
    const-val local__str_literal_129[2278366]:string[26] "temp"
    (2278367 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local__str_literal_2392[2278360]:string[26] "temp"
    (2278361 'move' "Unexpected case in integral_to_c_string" "Unexpected case in integral_to_c_string")
    val isErr[1060272]:bool[10] "dead at end of block" "insert auto destroy"
    (1062593 'move' isErr[1060272] 0)
    const-val call_tmp[1060319]:c_string[19] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1061068]:uint(32)[110] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1061074 'move' coerce_tmp[1061068](1061070 'cast' uint(32)[110] 8))
    (1060321 'move' call_tmp[1060319](1060324 call integral_to_c_string[1060234] x[1060224] coerce_tmp[1061068] 1 isErr[1060272]))
    const-val call_tmp[1060335]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1060337 'move' call_tmp[1060335] isErr[1060272])
    if call_tmp[1060335]
    {
      const-val call_tmp[1060345]:owned IllegalArgumentError[1061625] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      val new_temp[1061226]:IllegalArgumentError[168204] "dead after last mention" "temp"
      (1061228 'move' new_temp[1061226](1061119 call _new[1061174] "Unexpected case in integral_to_c_string"))
      const-val initTemp[1061257]:owned IllegalArgumentError[1061625] "dead after last mention" "delay instantiation" "temp"
      (1061260 call init[1061276] initTemp[1061257] new_temp[1061226])
      (1060347 'move' call_tmp[1060345] initTemp[1061257])
      val call_tmp[1060354]:Error[167942] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1061739]:owned Error[962257] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1785736]:owned Error[962257] "temp"
      ref i_x[2165578]:owned IllegalArgumentError[1061625] "temp"
      (2165582 'move' i_x[2165578](2165580 'set reference' call_tmp[1060345]))
      ref i__retArg[2165584]:owned Error[962257] "temp"
      (2165588 'move' i__retArg[2165584](2165586 'set reference' ret_tmp[1785736]))
      val _formal_tmp_x[2165591]:owned IllegalArgumentError[1061625] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2165593 'move' _formal_tmp_x[2165591] i_x[2165578])
      const-val ret[2165596]:owned Error[962257] "dead after last mention" "RVV" "temp"
      ref i_this[2165598]:owned IllegalArgumentError[1061625] "temp"
      (2165600 'move' i_this[2165598](2165602 'set reference' _formal_tmp_x[2165591]))
      val coerce_tmp[2165604]:IllegalArgumentError[168204] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2165606 'move' coerce_tmp[2165604](2165608 '.v' i_this[2165598] chpl_p[1061620]))
      val call_tmp[2165611]:Error[167942] "dead after last mention" "expr temp" "maybe param" "temp"
      (2165613 'move' call_tmp[2165611](2165615 'cast' Error[167942] coerce_tmp[2165604]))
      ref i_this[2165623]:owned IllegalArgumentError[1061625] "temp"
      (2165625 'move' i_this[2165623](2165627 'set reference' _formal_tmp_x[2165591]))
      val tmp[2165629]:IllegalArgumentError[168204] "temp"
      (2165631 'move' tmp[2165629](2165633 'cast' IllegalArgumentError[168204] nil[44]))
      (2165636 '.=' i_this[2165623] chpl_p[1061620] tmp[2165629])
      val coerce_tmp[2165640]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2165642 'move' coerce_tmp[2165640](2165644 'cast' object[22] call_tmp[2165611]))
      const-val call_tmp[2165647]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2165649 'move' call_tmp[2165647](2165651 'ptr_eq' coerce_tmp[2165640] nil[44]))
      if call_tmp[2165647]
      {
        (2165657 call nilCheckHalt[210068] "argument to ! is nil")
      }
      const-val call_tmp[2165660]:owned Error[962257] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2165662]:owned Error[962257] "dead after last mention" "delay instantiation" "temp"
      (2165665 call init[963893] initTemp[2165662] call_tmp[2165611])
      (2165668 'move' call_tmp[2165660] initTemp[2165662])
      (2165671 'move' ret[2165596] call_tmp[2165660])
      (2165675 call chpl__autoDestroy[1476602] _formal_tmp_x[2165591])
      (2165679 '=' i__retArg[2165584] ret[2165596])
      (1785739 'move' coerce_tmp[1061739] ret_tmp[1785736])
      const-val _formal_tmp_in_err[1062569]:owned Error[962257] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1062573 'move' _formal_tmp_in_err[1062569] coerce_tmp[1061739])
      (1060356 'move' call_tmp[1060354](1060359 call chpl_fix_thrown_error[170007] _formal_tmp_in_err[1062569]))
      val errorExists[2030071]:bool[10] "temp"
      (2030076 'move' errorExists[2030071](2030073 '!=' call_tmp[1060354] nil[44]))
      if errorExists[2030071]
      {
        (1763930 call chpl_uncaught_error[170247] call_tmp[1060354])
      }
    }
    const-val call_tmp[1060365]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    (1060367 'move' call_tmp[1060365](1060370 call strlen[1060260] call_tmp[1060319]))
    const-val call_tmp[2131126]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2131128 'move' call_tmp[2131126](2131130 '>' call_tmp[1060365] 9223372036854775807))
    if call_tmp[2131126]
    {
      (2131136 call safeCastCheckHalt[210132] "casting uint(64) with a value greater than the maximum of int(64) to int(64)")
    }
    const-val call_tmp[2131139]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2131141 'move' call_tmp[2131139](2131143 'cast' int(64)[13] call_tmp[1060365]))
    val call_tmp[2038324]:c_ptr(uint(8))[935386] "dead after last mention" "expr temp" "maybe param" "temp"
    (2038326 'move' call_tmp[2038324](2038328 'cast' c_ptr(uint(8))[935386] call_tmp[1060319]))
    const-val call_tmp[2038494]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2038496 'move' call_tmp[2038494](2038498 '+' call_tmp[2131139] 1))
    const-val ret[2061583]:string[26] "dead after last mention" "RVV" "temp"
    val ret[2061585]:string[26] "dead at end of block" "insert auto destroy"
    (2061588 call init[30760] ret[2061585])
    ref i_x[2061590]:string[26] "temp"
    (2061592 'move' i_x[2061590](2061594 'set reference' ret[2061585]))
    (2061596 '.=' i_x[2061590] isOwned[30743] 1)
    (2061600 '.=' i_x[2061590] buff[30737] call_tmp[2038324])
    (2061604 '.=' i_x[2061590] buffSize[30725] call_tmp[2038494])
    (2061608 '.=' i_x[2061590] buffLen[30719] call_tmp[2131139])
    (2061612 '.=' ret[2061585] cachedNumCodepoints[30731] call_tmp[2131139])
    (2061616 'move' ret[2061583] ret[2061585])
    label _end__cast[1060445]
    (1785732 '=' _retArg[1785730] ret[2061583])
    (1785734 return _void[55])
  }
  function _cast[1068961](const in arg x[1068965]:uint(8)[100], ref arg _retArg[1785870]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_4783[2278457]:string[26] "temp"
    (2278458 'move' "casting uint(64) with a value greater than the maximum of int(64) to int(64)" "casting uint(64) with a value greater than the maximum of int(64) to int(64)")
    const-val local__str_literal_129[2278451]:string[26] "temp"
    (2278452 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local__str_literal_2392[2278445]:string[26] "temp"
    (2278446 'move' "Unexpected case in integral_to_c_string" "Unexpected case in integral_to_c_string")
    val isErr[1069013]:bool[10] "dead at end of block" "insert auto destroy"
    (1070514 'move' isErr[1069013] 0)
    const-val call_tmp[1069026]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1069028 'move' call_tmp[1069026](1069031 'cast' int(64)[13] x[1068965]))
    const-val call_tmp[1069060]:c_string[19] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1070256]:uint(32)[110] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1070262 'move' coerce_tmp[1070256](1070258 'cast' uint(32)[110] 1))
    (1069062 'move' call_tmp[1069060](1069065 call integral_to_c_string[1068975] call_tmp[1069026] coerce_tmp[1070256] 0 isErr[1069013]))
    const-val call_tmp[1069076]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1069078 'move' call_tmp[1069076] isErr[1069013])
    if call_tmp[1069076]
    {
      const-val call_tmp[1069086]:owned IllegalArgumentError[1061625] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      val new_temp[1070285]:IllegalArgumentError[168204] "dead after last mention" "temp"
      (1070287 'move' new_temp[1070285](1070272 call _new[1061174] "Unexpected case in integral_to_c_string"))
      const-val initTemp[1070294]:owned IllegalArgumentError[1061625] "dead after last mention" "delay instantiation" "temp"
      (1070297 call init[1061276] initTemp[1070294] new_temp[1070285])
      (1069088 'move' call_tmp[1069086] initTemp[1070294])
      val call_tmp[1069095]:Error[167942] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1070311]:owned Error[962257] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1785742]:owned Error[962257] "temp"
      ref i_x[2165684]:owned IllegalArgumentError[1061625] "temp"
      (2165688 'move' i_x[2165684](2165686 'set reference' call_tmp[1069086]))
      ref i__retArg[2165690]:owned Error[962257] "temp"
      (2165694 'move' i__retArg[2165690](2165692 'set reference' ret_tmp[1785742]))
      val _formal_tmp_x[2165697]:owned IllegalArgumentError[1061625] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2165699 'move' _formal_tmp_x[2165697] i_x[2165684])
      const-val ret[2165702]:owned Error[962257] "dead after last mention" "RVV" "temp"
      ref i_this[2165704]:owned IllegalArgumentError[1061625] "temp"
      (2165706 'move' i_this[2165704](2165708 'set reference' _formal_tmp_x[2165697]))
      val coerce_tmp[2165710]:IllegalArgumentError[168204] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2165712 'move' coerce_tmp[2165710](2165714 '.v' i_this[2165704] chpl_p[1061620]))
      val call_tmp[2165717]:Error[167942] "dead after last mention" "expr temp" "maybe param" "temp"
      (2165719 'move' call_tmp[2165717](2165721 'cast' Error[167942] coerce_tmp[2165710]))
      ref i_this[2165729]:owned IllegalArgumentError[1061625] "temp"
      (2165731 'move' i_this[2165729](2165733 'set reference' _formal_tmp_x[2165697]))
      val tmp[2165735]:IllegalArgumentError[168204] "temp"
      (2165737 'move' tmp[2165735](2165739 'cast' IllegalArgumentError[168204] nil[44]))
      (2165742 '.=' i_this[2165729] chpl_p[1061620] tmp[2165735])
      val coerce_tmp[2165746]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2165748 'move' coerce_tmp[2165746](2165750 'cast' object[22] call_tmp[2165717]))
      const-val call_tmp[2165753]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2165755 'move' call_tmp[2165753](2165757 'ptr_eq' coerce_tmp[2165746] nil[44]))
      if call_tmp[2165753]
      {
        (2165763 call nilCheckHalt[210068] "argument to ! is nil")
      }
      const-val call_tmp[2165766]:owned Error[962257] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2165768]:owned Error[962257] "dead after last mention" "delay instantiation" "temp"
      (2165771 call init[963893] initTemp[2165768] call_tmp[2165717])
      (2165774 'move' call_tmp[2165766] initTemp[2165768])
      (2165777 'move' ret[2165702] call_tmp[2165766])
      (2165781 call chpl__autoDestroy[1476602] _formal_tmp_x[2165697])
      (2165785 '=' i__retArg[2165690] ret[2165702])
      (1785745 'move' coerce_tmp[1070311] ret_tmp[1785742])
      const-val _formal_tmp_in_err[1070490]:owned Error[962257] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1070494 'move' _formal_tmp_in_err[1070490] coerce_tmp[1070311])
      (1069097 'move' call_tmp[1069095](1069100 call chpl_fix_thrown_error[170007] _formal_tmp_in_err[1070490]))
      val errorExists[2030287]:bool[10] "temp"
      (2030292 'move' errorExists[2030287](2030289 '!=' call_tmp[1069095] nil[44]))
      if errorExists[2030287]
      {
        (1764396 call chpl_uncaught_error[170247] call_tmp[1069095])
      }
    }
    const-val call_tmp[1069106]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    (1069108 'move' call_tmp[1069106](1069111 call strlen[1069001] call_tmp[1069060]))
    const-val call_tmp[2131149]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2131151 'move' call_tmp[2131149](2131153 '>' call_tmp[1069106] 9223372036854775807))
    if call_tmp[2131149]
    {
      (2131159 call safeCastCheckHalt[210132] "casting uint(64) with a value greater than the maximum of int(64) to int(64)")
    }
    const-val call_tmp[2131162]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2131164 'move' call_tmp[2131162](2131166 'cast' int(64)[13] call_tmp[1069106]))
    val call_tmp[2038334]:c_ptr(uint(8))[935386] "dead after last mention" "expr temp" "maybe param" "temp"
    (2038336 'move' call_tmp[2038334](2038338 'cast' c_ptr(uint(8))[935386] call_tmp[1069060]))
    const-val call_tmp[2038504]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2038506 'move' call_tmp[2038504](2038508 '+' call_tmp[2131162] 1))
    const-val ret[2061633]:string[26] "dead after last mention" "RVV" "temp"
    val ret[2061635]:string[26] "dead at end of block" "insert auto destroy"
    (2061638 call init[30760] ret[2061635])
    ref i_x[2061640]:string[26] "temp"
    (2061642 'move' i_x[2061640](2061644 'set reference' ret[2061635]))
    (2061646 '.=' i_x[2061640] isOwned[30743] 1)
    (2061650 '.=' i_x[2061640] buff[30737] call_tmp[2038334])
    (2061654 '.=' i_x[2061640] buffSize[30725] call_tmp[2038504])
    (2061658 '.=' i_x[2061640] buffLen[30719] call_tmp[2131162])
    (2061662 '.=' ret[2061635] cachedNumCodepoints[30731] call_tmp[2131162])
    (2061666 'move' ret[2061633] ret[2061635])
    label _end__cast[1069186]
    (1785872 '=' _retArg[1785870] ret[2061633])
    (1785874 return _void[55])
  }
  function _cast[1264954](const in arg x[1264958]:uint(64)[115], ref arg _retArg[1789181]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_4783[2279302]:string[26] "temp"
    (2279303 'move' "casting uint(64) with a value greater than the maximum of int(64) to int(64)" "casting uint(64) with a value greater than the maximum of int(64) to int(64)")
    const-val local__str_literal_129[2279296]:string[26] "temp"
    (2279297 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local__str_literal_2392[2279290]:string[26] "temp"
    (2279291 'move' "Unexpected case in integral_to_c_string" "Unexpected case in integral_to_c_string")
    val isErr[1265006]:bool[10] "dead at end of block" "insert auto destroy"
    (1265926 'move' isErr[1265006] 0)
    const-val call_tmp[2099067]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2099069 'move' call_tmp[2099067](2099071 'cast' int(64)[13] x[1264958]))
    const-val call_tmp[1265053]:c_string[19] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1265668]:uint(32)[110] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1265674 'move' coerce_tmp[1265668](1265670 'cast' uint(32)[110] 8))
    (1265055 'move' call_tmp[1265053](1265058 call integral_to_c_string[1264968] call_tmp[2099067] coerce_tmp[1265668] 0 isErr[1265006]))
    const-val call_tmp[1265069]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1265071 'move' call_tmp[1265069] isErr[1265006])
    if call_tmp[1265069]
    {
      const-val call_tmp[1265079]:owned IllegalArgumentError[1061625] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      val new_temp[1265697]:IllegalArgumentError[168204] "dead after last mention" "temp"
      (1265699 'move' new_temp[1265697](1265684 call _new[1061174] "Unexpected case in integral_to_c_string"))
      const-val initTemp[1265706]:owned IllegalArgumentError[1061625] "dead after last mention" "delay instantiation" "temp"
      (1265709 call init[1061276] initTemp[1265706] new_temp[1265697])
      (1265081 'move' call_tmp[1265079] initTemp[1265706])
      val call_tmp[1265088]:Error[167942] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1265723]:owned Error[962257] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1785790]:owned Error[962257] "temp"
      ref i_x[2166532]:owned IllegalArgumentError[1061625] "temp"
      (2166536 'move' i_x[2166532](2166534 'set reference' call_tmp[1265079]))
      ref i__retArg[2166538]:owned Error[962257] "temp"
      (2166542 'move' i__retArg[2166538](2166540 'set reference' ret_tmp[1785790]))
      val _formal_tmp_x[2166545]:owned IllegalArgumentError[1061625] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2166547 'move' _formal_tmp_x[2166545] i_x[2166532])
      const-val ret[2166550]:owned Error[962257] "dead after last mention" "RVV" "temp"
      ref i_this[2166552]:owned IllegalArgumentError[1061625] "temp"
      (2166554 'move' i_this[2166552](2166556 'set reference' _formal_tmp_x[2166545]))
      val coerce_tmp[2166558]:IllegalArgumentError[168204] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2166560 'move' coerce_tmp[2166558](2166562 '.v' i_this[2166552] chpl_p[1061620]))
      val call_tmp[2166565]:Error[167942] "dead after last mention" "expr temp" "maybe param" "temp"
      (2166567 'move' call_tmp[2166565](2166569 'cast' Error[167942] coerce_tmp[2166558]))
      ref i_this[2166577]:owned IllegalArgumentError[1061625] "temp"
      (2166579 'move' i_this[2166577](2166581 'set reference' _formal_tmp_x[2166545]))
      val tmp[2166583]:IllegalArgumentError[168204] "temp"
      (2166585 'move' tmp[2166583](2166587 'cast' IllegalArgumentError[168204] nil[44]))
      (2166590 '.=' i_this[2166577] chpl_p[1061620] tmp[2166583])
      val coerce_tmp[2166594]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2166596 'move' coerce_tmp[2166594](2166598 'cast' object[22] call_tmp[2166565]))
      const-val call_tmp[2166601]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2166603 'move' call_tmp[2166601](2166605 'ptr_eq' coerce_tmp[2166594] nil[44]))
      if call_tmp[2166601]
      {
        (2166611 call nilCheckHalt[210068] "argument to ! is nil")
      }
      const-val call_tmp[2166614]:owned Error[962257] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2166616]:owned Error[962257] "dead after last mention" "delay instantiation" "temp"
      (2166619 call init[963893] initTemp[2166616] call_tmp[2166565])
      (2166622 'move' call_tmp[2166614] initTemp[2166616])
      (2166625 'move' ret[2166550] call_tmp[2166614])
      (2166629 call chpl__autoDestroy[1476602] _formal_tmp_x[2166545])
      (2166633 '=' i__retArg[2166538] ret[2166550])
      (1785793 'move' coerce_tmp[1265723] ret_tmp[1785790])
      const-val _formal_tmp_in_err[1265902]:owned Error[962257] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1265906 'move' _formal_tmp_in_err[1265902] coerce_tmp[1265723])
      (1265090 'move' call_tmp[1265088](1265093 call chpl_fix_thrown_error[170007] _formal_tmp_in_err[1265902]))
      val errorExists[2030975]:bool[10] "temp"
      (2030980 'move' errorExists[2030975](2030977 '!=' call_tmp[1265088] nil[44]))
      if errorExists[2030975]
      {
        (1765718 call chpl_uncaught_error[170247] call_tmp[1265088])
      }
    }
    const-val call_tmp[1265099]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    (1265101 'move' call_tmp[1265099](1265104 call strlen[1264994] call_tmp[1265053]))
    const-val call_tmp[2131241]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2131243 'move' call_tmp[2131241](2131245 '>' call_tmp[1265099] 9223372036854775807))
    if call_tmp[2131241]
    {
      (2131251 call safeCastCheckHalt[210132] "casting uint(64) with a value greater than the maximum of int(64) to int(64)")
    }
    const-val call_tmp[2131254]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2131256 'move' call_tmp[2131254](2131258 'cast' int(64)[13] call_tmp[1265099]))
    val call_tmp[2038344]:c_ptr(uint(8))[935386] "dead after last mention" "expr temp" "maybe param" "temp"
    (2038346 'move' call_tmp[2038344](2038348 'cast' c_ptr(uint(8))[935386] call_tmp[1265053]))
    const-val call_tmp[2038654]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2038656 'move' call_tmp[2038654](2038658 '+' call_tmp[2131254] 1))
    const-val ret[2061933]:string[26] "dead after last mention" "RVV" "temp"
    val ret[2061935]:string[26] "dead at end of block" "insert auto destroy"
    (2061938 call init[30760] ret[2061935])
    ref i_x[2061940]:string[26] "temp"
    (2061942 'move' i_x[2061940](2061944 'set reference' ret[2061935]))
    (2061946 '.=' i_x[2061940] isOwned[30743] 1)
    (2061950 '.=' i_x[2061940] buff[30737] call_tmp[2038344])
    (2061954 '.=' i_x[2061940] buffSize[30725] call_tmp[2038654])
    (2061958 '.=' i_x[2061940] buffLen[30719] call_tmp[2131254])
    (2061962 '.=' ret[2061935] cachedNumCodepoints[30731] call_tmp[2131254])
    (2061966 'move' ret[2061933] ret[2061935])
    label _end__cast[1265179]
    (1789183 '=' _retArg[1789181] ret[2061933])
    (1789185 return _void[55])
  }
  function c_string_to_int64_t[1021763](const in arg x[1021765]:c_string[19], ref arg err[1021767]:bool[10]) : int(64)[13] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1021770]:int(64)[13] "RVV" "temp"
    (1021772 return ret[1021770])
  }
  function integral_to_c_string[1060234](const in arg x[1060240]:int(64)[13], const in arg size[1060246]:uint(32)[110], const in arg isSigned[1060248]:bool[10], ref arg err[1060250]:bool[10]) : c_string[19] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1060253]:c_string[19] "RVV" "temp"
    (1060255 return ret[1060253])
  }
  function strlen[1060260](const in arg str[1060262]:c_string[19]) : uint(64)[115] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1060265]:uint(64)[115] "RVV" "temp"
    (1060267 return ret[1060265])
  }
  function integral_to_c_string[1068975](const in arg x[1068981]:int(64)[13], const in arg size[1068987]:uint(32)[110], const in arg isSigned[1068989]:bool[10], ref arg err[1068991]:bool[10]) : c_string[19] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1068994]:c_string[19] "RVV" "temp"
    (1068996 return ret[1068994])
  }
  function strlen[1069001](const in arg str[1069003]:c_string[19]) : uint(64)[115] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1069006]:uint(64)[115] "RVV" "temp"
    (1069008 return ret[1069006])
  }
  function integral_to_c_string[1264968](const in arg x[1264974]:int(64)[13], const in arg size[1264980]:uint(32)[110], const in arg isSigned[1264982]:bool[10], ref arg err[1264984]:bool[10]) : c_string[19] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1264987]:c_string[19] "RVV" "temp"
    (1264989 return ret[1264987])
  }
  function strlen[1264994](const in arg str[1264996]:c_string[19]) : uint(64)[115] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1264999]:uint(64)[115] "RVV" "temp"
    (1265001 return ret[1264999])
  }
  function c_string_to_uint64_t[1350124](const in arg x[1350126]:c_string[19], ref arg err[1350128]:bool[10]) : uint(64)[115] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1350131]:uint(64)[115] "RVV" "temp"
    (1350133 return ret[1350131])
  }
}