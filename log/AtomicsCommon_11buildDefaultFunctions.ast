AST dump for AtomicsCommon after pass buildDefaultFunctions.
Module use list: ChapelStandard 

{
  function chpl__init_AtomicsCommon[415939]() : void[4] "insert line file info" "module init"
  {
    (506858 return _void[55])
  }
  function atomic_refcnt[52099].inc[51959](arg _mt[52103]:_MT[238], arg this[52101]:atomic_refcnt[52099], arg cnt[51956] :
  1 =
  1) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[609172] "expr temp" "maybe param" "maybe type" "temp"
    (609175 'move' call_tmp[609172](51983 call _cond_test CHPL_CACHE_REMOTE[367]))
    if call_tmp[609172]
    {
      unknown call_tmp[609179] "expr temp" "maybe param" "maybe type" "temp"
      (609182 'move' call_tmp[609179](357196 call _cnt _mt[243] this[52101]))
      (51973 call(51963 call (partial) add _mt[243] call_tmp[609179]) cnt[51956](order = relaxed[186964]))
    }
    {
      unknown call_tmp[609188] "expr temp" "maybe param" "maybe type" "temp"
      (609191 'move' call_tmp[609188](357202 call _cnt _mt[243] this[52101]))
      (51981 call(51976 call (partial) add _mt[243] call_tmp[609188]) cnt[51956])
    }
    (506814 return _void[55])
  }
  function atomic_refcnt[52099].dec[51994](arg _mt[52107]:_MT[238], arg this[52105]:atomic_refcnt[52099]) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ret[506818] "RVV" "temp"
    unknown got[52004] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[540701] "maybe param" "maybe type" "temp"
    (540709 'move' type_tmp[540701](540707 call int(64)[13] 64))
    (540703 'init var split decl' got[52004] type_tmp[540701])
    (52007 'end of statement')
    unknown call_tmp[609195] "expr temp" "maybe param" "maybe type" "temp"
    (609198 'move' call_tmp[609195](52071 call _cond_test CHPL_CACHE_REMOTE[367]))
    if call_tmp[609195]
    {
      unknown call_tmp[609202] "expr temp" "maybe param" "maybe type" "temp"
      (609205 'move' call_tmp[609202](357207 call _cnt _mt[243] this[52105]))
      unknown call_tmp[609209] "maybe param" "maybe type" "temp"
      (609212 'move' call_tmp[609209](52022 call(52012 call (partial) fetchSub _mt[243] call_tmp[609202]) 1(order = release[186960])))
      (540711 'init var split init' got[52004] call_tmp[609209] type_tmp[540701])
      (474533 'end of statement' got[52004])
      unknown call_tmp[609214] "expr temp" "maybe param" "maybe type" "temp"
      (609217 'move' call_tmp[609214](52029 call == got[52004] 1))
      unknown call_tmp[609219] "expr temp" "maybe param" "maybe type" "temp"
      (609222 'move' call_tmp[609219](52043 call _cond_test call_tmp[609214]))
      if call_tmp[609219]
      {
        (52037 call atomicFence acquire[186962])
        (474535 'end of statement')
        unknown call_tmp[609224] "expr temp" "maybe param" "maybe type" "temp"
        (609227 'move' call_tmp[609224](506823 call int(64)[13] 64))
        (506826 'move' ret[506818](506825 'coerce' 0 call_tmp[609224]))
        gotoReturn _end_dec[506816] _end_dec[506816]
      }
      unknown call_tmp[609229] "expr temp" "maybe param" "maybe type" "temp"
      (609232 'move' call_tmp[609229](52049 call - got[52004] 1))
      unknown call_tmp[609234] "expr temp" "maybe param" "maybe type" "temp"
      (609237 'move' call_tmp[609234](506831 call int(64)[13] 64))
      (506834 'move' ret[506818](506833 'coerce' call_tmp[609229] call_tmp[609234]))
      gotoReturn _end_dec[506816] _end_dec[506816]
      (474537 'end of statement' got[52004])
    }
    {
      unknown call_tmp[609241] "expr temp" "maybe param" "maybe type" "temp"
      (609244 'move' call_tmp[609241](357214 call _cnt _mt[243] this[52105]))
      unknown call_tmp[609248] "maybe param" "maybe type" "temp"
      (609251 'move' call_tmp[609248](52060 call(52055 call (partial) fetchSub _mt[243] call_tmp[609241]) 1))
      (540714 'init var split init' got[52004] call_tmp[609248] type_tmp[540701])
      (474539 'end of statement' got[52004])
      unknown call_tmp[609253] "expr temp" "maybe param" "maybe type" "temp"
      (609256 'move' call_tmp[609253](52067 call - got[52004] 1))
      unknown call_tmp[609258] "expr temp" "maybe param" "maybe type" "temp"
      (609261 'move' call_tmp[609258](506839 call int(64)[13] 64))
      (506842 'move' ret[506818](506841 'coerce' call_tmp[609253] call_tmp[609258]))
      gotoReturn _end_dec[506816] _end_dec[506816]
      (474541 'end of statement' got[52004])
    }
    label _end_dec[506816]
    (506820 return ret[506818])
  }
  { scopeless type
    (51999 call int(64)[13] 64)
  }
  function atomic_refcnt[52099].read[52080](arg _mt[52111]:_MT[238], arg this[52109]:atomic_refcnt[52099]) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ret[506848] "RVV" "temp"
    unknown call_tmp[609265] "expr temp" "maybe param" "maybe type" "temp"
    (609268 'move' call_tmp[609265](357219 call _cnt _mt[243] this[52109]))
    unknown call_tmp[609272] "expr temp" "maybe param" "maybe type" "temp"
    (609275 'move' call_tmp[609272](52091 call(52087 call (partial) read _mt[243] call_tmp[609265])))
    unknown call_tmp[609277] "expr temp" "maybe param" "maybe type" "temp"
    (609280 'move' call_tmp[609277](506853 call int(64)[13] 64))
    (506856 'move' ret[506848](506855 'coerce' call_tmp[609272] call_tmp[609277]))
    (506850 return ret[506848])
  }
  { scopeless type
    (52085 call int(64)[13] 64)
  }
  function atomic_refcnt[52099]._cnt[765375](arg _mt[765377]:_MT[238], ref arg this[765379]:atomic_refcnt[52099]) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[765389] "RVV" "temp"
    unknown call_tmp[765396] "expr temp" "maybe param" "maybe type" "temp"
    (765399 'move' call_tmp[765396](765383 '.' this[765379] c"_cnt"))
    (765394 'move' ret[765389](765393 'addr of' call_tmp[765396]))
    (765391 return ret[765389])
  }
  function atomic_refcnt[52099].init[765401](arg _mt[765403]:_MT[238], ref arg this[765404]:atomic_refcnt[52099], in arg _cnt[765407] :
  (765410 call chpl__processorAtomicType int(64)[13]) =
  _typeDefaultT[250]) : void[4] "compiler generated" "last resort" "method" "primary method" "suppress lvalue error"
  {
    (765423 'init field' this[765404] c"_cnt" _cnt[765407])
    (765427 return _void[55])
  }
  function atomic_refcnt[52099].init=[765429](arg _mt[765432]:_MT[238], ref arg this[765433]:atomic_refcnt[52099], arg other[765434]:atomic_refcnt[52099]) : void[4] "compiler generated" "copy initializer" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown call_tmp[765464] "maybe param" "maybe type" "temp"
    (765467 'move' call_tmp[765464](765442 call _cnt _mt[243] other[765434]))
    unknown call_tmp[765469] "maybe param" "maybe type" "temp"
    (765472 'move' call_tmp[765469](765451 call chpl__processorAtomicType int(64)[13]))
    unknown tmp[765448] "temp"
    (765453 'init var' tmp[765448] call_tmp[765464] call_tmp[765469])
    (765455 'init field' this[765433] c"_cnt" tmp[765448])
    (765459 'end of statement')
    (765460 return _void[55])
  }
  function atomic_refcnt[52099].deinit[765474](arg _mt[765476]:_MT[238], arg this[765478]:atomic_refcnt[52099]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (765486 return _void[55])
  }
  function atomic_refcnt[52099].writeThis[765488](arg _mt[765492]:_MT[238], arg this[765490]:atomic_refcnt[52099], arg f[765491]:_any[178](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (765497 call writeThisDefaultImpl f[765491] this[765490])
    (765502 return _void[55])
  }
  function atomic_refcnt[52099].readThis[765504](arg _mt[765508]:_MT[238], arg this[765506]:atomic_refcnt[52099], arg f[765507]:_any[178](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (765512 call readThisDefaultImpl f[765507] this[765506])
    (765518 return _void[55])
  }
  function chpl_fields_are_comparable[765532](arg _arg1[765534]:atomic_refcnt[52099], arg _arg2[765535]:atomic_refcnt[52099]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[765553]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[765560] "expr temp" "maybe param" "maybe type" "temp"
    (765563 'move' call_tmp[765560](765538 call _cnt _mt[243] _arg1[765534]))
    unknown call_tmp[765565] "expr temp" "maybe param" "maybe type" "temp"
    (765568 'move' call_tmp[765565](765542 call _cnt _mt[243] _arg2[765535]))
    unknown call_tmp[765570] "expr temp" "maybe param" "maybe type" "temp"
    (765573 'move' call_tmp[765570](765546 'call resolves' c"==" call_tmp[765560] call_tmp[765565]))
    (765558 'move' ret[765553](765557 'deref' call_tmp[765570]))
    (765555 return ret[765553])
  }
  function ==[765520](arg _arg1[765522]:atomic_refcnt[52099], arg _arg2[765523]:atomic_refcnt[52099]) : bool[10] "compiler generated" "last resort"
  {
    val ret[765602]:bool[10] "RVV" "temp"
    unknown call_tmp[765614] "expr temp" "maybe param" "maybe type" "temp"
    (765617 'move' call_tmp[765614](765581 call _cnt _mt[243] _arg1[765522]))
    unknown call_tmp[765619] "expr temp" "maybe param" "maybe type" "temp"
    (765622 'move' call_tmp[765619](765585 call _cnt _mt[243] _arg2[765523]))
    unknown call_tmp[765624] "expr temp" "maybe param" "maybe type" "temp"
    (765627 'move' call_tmp[765624](765589 call != call_tmp[765614] call_tmp[765619]))
    if call_tmp[765624]
    {
      (765607 'move' ret[765602](765606 'deref' 0))
      gotoReturn _end_==[765600] _end_==[765600]
    }
    (765612 'move' ret[765602](765611 'deref' 1))
    label _end_==[765600]
    (765604 return ret[765602])
  }
  where {
    unknown call_tmp[765629] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (765632 'move' call_tmp[765629](765526 'typeof' _arg1[765522]))
    unknown call_tmp[765634] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (765637 'move' call_tmp[765634](765528 'typeof' _arg2[765523]))
    unknown call_tmp[765639] "expr temp" "maybe param" "maybe type" "temp"
    (765642 'move' call_tmp[765639](765530 call == call_tmp[765629] call_tmp[765634]))
    unknown call_tmp[765644] "expr temp" "maybe param" "maybe type" "temp"
    (765647 'move' call_tmp[765644](765575 call chpl_fields_are_comparable[765532] _arg1[765522] _arg2[765523]))
    (765579 '&' call_tmp[765639] call_tmp[765644])
  }
  function chpl_fields_are_comparable[765661](arg _arg1[765663]:atomic_refcnt[52099], arg _arg2[765664]:atomic_refcnt[52099]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[765682]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[765689] "expr temp" "maybe param" "maybe type" "temp"
    (765692 'move' call_tmp[765689](765667 call _cnt _mt[243] _arg1[765663]))
    unknown call_tmp[765694] "expr temp" "maybe param" "maybe type" "temp"
    (765697 'move' call_tmp[765694](765671 call _cnt _mt[243] _arg2[765664]))
    unknown call_tmp[765699] "expr temp" "maybe param" "maybe type" "temp"
    (765702 'move' call_tmp[765699](765675 'call resolves' c"!=" call_tmp[765689] call_tmp[765694]))
    (765687 'move' ret[765682](765686 'deref' call_tmp[765699]))
    (765684 return ret[765682])
  }
  function !=[765649](arg _arg1[765651]:atomic_refcnt[52099], arg _arg2[765652]:atomic_refcnt[52099]) : bool[10] "compiler generated" "last resort"
  {
    val ret[765731]:bool[10] "RVV" "temp"
    unknown call_tmp[765743] "expr temp" "maybe param" "maybe type" "temp"
    (765746 'move' call_tmp[765743](765710 call _cnt _mt[243] _arg1[765651]))
    unknown call_tmp[765748] "expr temp" "maybe param" "maybe type" "temp"
    (765751 'move' call_tmp[765748](765714 call _cnt _mt[243] _arg2[765652]))
    unknown call_tmp[765753] "expr temp" "maybe param" "maybe type" "temp"
    (765756 'move' call_tmp[765753](765718 call != call_tmp[765743] call_tmp[765748]))
    if call_tmp[765753]
    {
      (765736 'move' ret[765731](765735 'deref' 1))
      gotoReturn _end_!=[765729] _end_!=[765729]
    }
    (765741 'move' ret[765731](765740 'deref' 0))
    label _end_!=[765729]
    (765733 return ret[765731])
  }
  where {
    unknown call_tmp[765758] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (765761 'move' call_tmp[765758](765655 'typeof' _arg1[765651]))
    unknown call_tmp[765763] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (765766 'move' call_tmp[765763](765657 'typeof' _arg2[765652]))
    unknown call_tmp[765768] "expr temp" "maybe param" "maybe type" "temp"
    (765771 'move' call_tmp[765768](765659 call == call_tmp[765758] call_tmp[765763]))
    unknown call_tmp[765773] "expr temp" "maybe param" "maybe type" "temp"
    (765776 'move' call_tmp[765773](765704 call chpl_fields_are_comparable[765661] _arg1[765651] _arg2[765652]))
    (765708 '&' call_tmp[765768] call_tmp[765773])
  }
  function chpl_fields_are_comparable[765790](arg _arg1[765792]:atomic_refcnt[52099], arg _arg2[765793]:atomic_refcnt[52099]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[765811]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[765818] "expr temp" "maybe param" "maybe type" "temp"
    (765821 'move' call_tmp[765818](765796 call _cnt _mt[243] _arg1[765792]))
    unknown call_tmp[765823] "expr temp" "maybe param" "maybe type" "temp"
    (765826 'move' call_tmp[765823](765800 call _cnt _mt[243] _arg2[765793]))
    unknown call_tmp[765828] "expr temp" "maybe param" "maybe type" "temp"
    (765831 'move' call_tmp[765828](765804 'call resolves' c"<" call_tmp[765818] call_tmp[765823]))
    (765816 'move' ret[765811](765815 'deref' call_tmp[765828]))
    (765813 return ret[765811])
  }
  function <[765778](arg _arg1[765780]:atomic_refcnt[52099], arg _arg2[765781]:atomic_refcnt[52099]) : bool[10] "compiler generated" "last resort"
  {
    val ret[765875]:bool[10] "RVV" "temp"
    unknown call_tmp[765892] "expr temp" "maybe param" "maybe type" "temp"
    (765895 'move' call_tmp[765892](765839 call _cnt _mt[243] _arg1[765780]))
    unknown call_tmp[765897] "expr temp" "maybe param" "maybe type" "temp"
    (765900 'move' call_tmp[765897](765843 call _cnt _mt[243] _arg2[765781]))
    unknown call_tmp[765902] "expr temp" "maybe param" "maybe type" "temp"
    (765905 'move' call_tmp[765902](765847 call < call_tmp[765892] call_tmp[765897]))
    if call_tmp[765902]
    {
      (765880 'move' ret[765875](765879 'deref' 1))
      gotoReturn _end_<[765873] _end_<[765873]
    }
    unknown call_tmp[765907] "expr temp" "maybe param" "maybe type" "temp"
    (765910 'move' call_tmp[765907](765853 call _cnt _mt[243] _arg1[765780]))
    unknown call_tmp[765912] "expr temp" "maybe param" "maybe type" "temp"
    (765915 'move' call_tmp[765912](765857 call _cnt _mt[243] _arg2[765781]))
    unknown call_tmp[765917] "expr temp" "maybe param" "maybe type" "temp"
    (765920 'move' call_tmp[765917](765861 call > call_tmp[765907] call_tmp[765912]))
    if call_tmp[765917]
    {
      (765885 'move' ret[765875](765884 'deref' 0))
      gotoReturn _end_<[765873] _end_<[765873]
    }
    (765890 'move' ret[765875](765889 'deref' 0))
    label _end_<[765873]
    (765877 return ret[765875])
  }
  where {
    unknown call_tmp[765922] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (765925 'move' call_tmp[765922](765784 'typeof' _arg1[765780]))
    unknown call_tmp[765927] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (765930 'move' call_tmp[765927](765786 'typeof' _arg2[765781]))
    unknown call_tmp[765932] "expr temp" "maybe param" "maybe type" "temp"
    (765935 'move' call_tmp[765932](765788 call == call_tmp[765922] call_tmp[765927]))
    unknown call_tmp[765937] "expr temp" "maybe param" "maybe type" "temp"
    (765940 'move' call_tmp[765937](765833 call chpl_fields_are_comparable[765790] _arg1[765780] _arg2[765781]))
    (765837 '&' call_tmp[765932] call_tmp[765937])
  }
  function chpl_fields_are_comparable[765954](arg _arg1[765956]:atomic_refcnt[52099], arg _arg2[765957]:atomic_refcnt[52099]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[765975]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[765982] "expr temp" "maybe param" "maybe type" "temp"
    (765985 'move' call_tmp[765982](765960 call _cnt _mt[243] _arg1[765956]))
    unknown call_tmp[765987] "expr temp" "maybe param" "maybe type" "temp"
    (765990 'move' call_tmp[765987](765964 call _cnt _mt[243] _arg2[765957]))
    unknown call_tmp[765992] "expr temp" "maybe param" "maybe type" "temp"
    (765995 'move' call_tmp[765992](765968 'call resolves' c"<=" call_tmp[765982] call_tmp[765987]))
    (765980 'move' ret[765975](765979 'deref' call_tmp[765992]))
    (765977 return ret[765975])
  }
  function <=[765942](arg _arg1[765944]:atomic_refcnt[52099], arg _arg2[765945]:atomic_refcnt[52099]) : bool[10] "compiler generated" "last resort"
  {
    val ret[766039]:bool[10] "RVV" "temp"
    unknown call_tmp[766056] "expr temp" "maybe param" "maybe type" "temp"
    (766059 'move' call_tmp[766056](766003 call _cnt _mt[243] _arg1[765944]))
    unknown call_tmp[766061] "expr temp" "maybe param" "maybe type" "temp"
    (766064 'move' call_tmp[766061](766007 call _cnt _mt[243] _arg2[765945]))
    unknown call_tmp[766066] "expr temp" "maybe param" "maybe type" "temp"
    (766069 'move' call_tmp[766066](766011 call < call_tmp[766056] call_tmp[766061]))
    if call_tmp[766066]
    {
      (766044 'move' ret[766039](766043 'deref' 1))
      gotoReturn _end_<=[766037] _end_<=[766037]
    }
    unknown call_tmp[766071] "expr temp" "maybe param" "maybe type" "temp"
    (766074 'move' call_tmp[766071](766017 call _cnt _mt[243] _arg1[765944]))
    unknown call_tmp[766076] "expr temp" "maybe param" "maybe type" "temp"
    (766079 'move' call_tmp[766076](766021 call _cnt _mt[243] _arg2[765945]))
    unknown call_tmp[766081] "expr temp" "maybe param" "maybe type" "temp"
    (766084 'move' call_tmp[766081](766025 call > call_tmp[766071] call_tmp[766076]))
    if call_tmp[766081]
    {
      (766049 'move' ret[766039](766048 'deref' 0))
      gotoReturn _end_<=[766037] _end_<=[766037]
    }
    (766054 'move' ret[766039](766053 'deref' 1))
    label _end_<=[766037]
    (766041 return ret[766039])
  }
  where {
    unknown call_tmp[766086] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (766089 'move' call_tmp[766086](765948 'typeof' _arg1[765944]))
    unknown call_tmp[766091] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (766094 'move' call_tmp[766091](765950 'typeof' _arg2[765945]))
    unknown call_tmp[766096] "expr temp" "maybe param" "maybe type" "temp"
    (766099 'move' call_tmp[766096](765952 call == call_tmp[766086] call_tmp[766091]))
    unknown call_tmp[766101] "expr temp" "maybe param" "maybe type" "temp"
    (766104 'move' call_tmp[766101](765997 call chpl_fields_are_comparable[765954] _arg1[765944] _arg2[765945]))
    (766001 '&' call_tmp[766096] call_tmp[766101])
  }
  function chpl_fields_are_comparable[766118](arg _arg1[766120]:atomic_refcnt[52099], arg _arg2[766121]:atomic_refcnt[52099]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[766139]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[766146] "expr temp" "maybe param" "maybe type" "temp"
    (766149 'move' call_tmp[766146](766124 call _cnt _mt[243] _arg1[766120]))
    unknown call_tmp[766151] "expr temp" "maybe param" "maybe type" "temp"
    (766154 'move' call_tmp[766151](766128 call _cnt _mt[243] _arg2[766121]))
    unknown call_tmp[766156] "expr temp" "maybe param" "maybe type" "temp"
    (766159 'move' call_tmp[766156](766132 'call resolves' c">" call_tmp[766146] call_tmp[766151]))
    (766144 'move' ret[766139](766143 'deref' call_tmp[766156]))
    (766141 return ret[766139])
  }
  function >[766106](arg _arg1[766108]:atomic_refcnt[52099], arg _arg2[766109]:atomic_refcnt[52099]) : bool[10] "compiler generated" "last resort"
  {
    val ret[766203]:bool[10] "RVV" "temp"
    unknown call_tmp[766220] "expr temp" "maybe param" "maybe type" "temp"
    (766223 'move' call_tmp[766220](766167 call _cnt _mt[243] _arg1[766108]))
    unknown call_tmp[766225] "expr temp" "maybe param" "maybe type" "temp"
    (766228 'move' call_tmp[766225](766171 call _cnt _mt[243] _arg2[766109]))
    unknown call_tmp[766230] "expr temp" "maybe param" "maybe type" "temp"
    (766233 'move' call_tmp[766230](766175 call > call_tmp[766220] call_tmp[766225]))
    if call_tmp[766230]
    {
      (766208 'move' ret[766203](766207 'deref' 1))
      gotoReturn _end_>[766201] _end_>[766201]
    }
    unknown call_tmp[766235] "expr temp" "maybe param" "maybe type" "temp"
    (766238 'move' call_tmp[766235](766181 call _cnt _mt[243] _arg1[766108]))
    unknown call_tmp[766240] "expr temp" "maybe param" "maybe type" "temp"
    (766243 'move' call_tmp[766240](766185 call _cnt _mt[243] _arg2[766109]))
    unknown call_tmp[766245] "expr temp" "maybe param" "maybe type" "temp"
    (766248 'move' call_tmp[766245](766189 call < call_tmp[766235] call_tmp[766240]))
    if call_tmp[766245]
    {
      (766213 'move' ret[766203](766212 'deref' 0))
      gotoReturn _end_>[766201] _end_>[766201]
    }
    (766218 'move' ret[766203](766217 'deref' 0))
    label _end_>[766201]
    (766205 return ret[766203])
  }
  where {
    unknown call_tmp[766250] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (766253 'move' call_tmp[766250](766112 'typeof' _arg1[766108]))
    unknown call_tmp[766255] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (766258 'move' call_tmp[766255](766114 'typeof' _arg2[766109]))
    unknown call_tmp[766260] "expr temp" "maybe param" "maybe type" "temp"
    (766263 'move' call_tmp[766260](766116 call == call_tmp[766250] call_tmp[766255]))
    unknown call_tmp[766265] "expr temp" "maybe param" "maybe type" "temp"
    (766268 'move' call_tmp[766265](766161 call chpl_fields_are_comparable[766118] _arg1[766108] _arg2[766109]))
    (766165 '&' call_tmp[766260] call_tmp[766265])
  }
  function chpl_fields_are_comparable[766282](arg _arg1[766284]:atomic_refcnt[52099], arg _arg2[766285]:atomic_refcnt[52099]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[766303]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[766310] "expr temp" "maybe param" "maybe type" "temp"
    (766313 'move' call_tmp[766310](766288 call _cnt _mt[243] _arg1[766284]))
    unknown call_tmp[766315] "expr temp" "maybe param" "maybe type" "temp"
    (766318 'move' call_tmp[766315](766292 call _cnt _mt[243] _arg2[766285]))
    unknown call_tmp[766320] "expr temp" "maybe param" "maybe type" "temp"
    (766323 'move' call_tmp[766320](766296 'call resolves' c">=" call_tmp[766310] call_tmp[766315]))
    (766308 'move' ret[766303](766307 'deref' call_tmp[766320]))
    (766305 return ret[766303])
  }
  function >=[766270](arg _arg1[766272]:atomic_refcnt[52099], arg _arg2[766273]:atomic_refcnt[52099]) : bool[10] "compiler generated" "last resort"
  {
    val ret[766367]:bool[10] "RVV" "temp"
    unknown call_tmp[766384] "expr temp" "maybe param" "maybe type" "temp"
    (766387 'move' call_tmp[766384](766331 call _cnt _mt[243] _arg1[766272]))
    unknown call_tmp[766389] "expr temp" "maybe param" "maybe type" "temp"
    (766392 'move' call_tmp[766389](766335 call _cnt _mt[243] _arg2[766273]))
    unknown call_tmp[766394] "expr temp" "maybe param" "maybe type" "temp"
    (766397 'move' call_tmp[766394](766339 call > call_tmp[766384] call_tmp[766389]))
    if call_tmp[766394]
    {
      (766372 'move' ret[766367](766371 'deref' 1))
      gotoReturn _end_>=[766365] _end_>=[766365]
    }
    unknown call_tmp[766399] "expr temp" "maybe param" "maybe type" "temp"
    (766402 'move' call_tmp[766399](766345 call _cnt _mt[243] _arg1[766272]))
    unknown call_tmp[766404] "expr temp" "maybe param" "maybe type" "temp"
    (766407 'move' call_tmp[766404](766349 call _cnt _mt[243] _arg2[766273]))
    unknown call_tmp[766409] "expr temp" "maybe param" "maybe type" "temp"
    (766412 'move' call_tmp[766409](766353 call < call_tmp[766399] call_tmp[766404]))
    if call_tmp[766409]
    {
      (766377 'move' ret[766367](766376 'deref' 0))
      gotoReturn _end_>=[766365] _end_>=[766365]
    }
    (766382 'move' ret[766367](766381 'deref' 1))
    label _end_>=[766365]
    (766369 return ret[766367])
  }
  where {
    unknown call_tmp[766414] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (766417 'move' call_tmp[766414](766276 'typeof' _arg1[766272]))
    unknown call_tmp[766419] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (766422 'move' call_tmp[766419](766278 'typeof' _arg2[766273]))
    unknown call_tmp[766424] "expr temp" "maybe param" "maybe type" "temp"
    (766427 'move' call_tmp[766424](766280 call == call_tmp[766414] call_tmp[766419]))
    unknown call_tmp[766429] "expr temp" "maybe param" "maybe type" "temp"
    (766432 'move' call_tmp[766429](766325 call chpl_fields_are_comparable[766282] _arg1[766272] _arg2[766273]))
    (766329 '&' call_tmp[766424] call_tmp[766429])
  }
  function =[766434](ref arg _arg1[766436]:atomic_refcnt[52099], const?  ref arg _arg2[766437]:atomic_refcnt[52099]) : void[4] "assignop" "compiler generated" "last resort"
  {
    unknown call_tmp[766463] "expr temp" "maybe param" "maybe type" "temp"
    (766466 'move' call_tmp[766463](766447 call _cnt _mt[243] _arg1[766436]))
    unknown call_tmp[766470] "expr temp" "maybe param" "maybe type" "temp"
    (766473 'move' call_tmp[766470](766451 call _cnt _mt[243] _arg2[766437]))
    (766455 call = call_tmp[766463] call_tmp[766470])
    (766459 return _void[55])
  }
  where {
    unknown call_tmp[766475] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (766478 'move' call_tmp[766475](766440 'typeof' _arg1[766436]))
    unknown call_tmp[766480] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (766483 'move' call_tmp[766480](766442 'typeof' _arg2[766437]))
    (766444 call == call_tmp[766475] call_tmp[766480])
  }
  function chpl__defaultHash[766485](arg r[766487]:atomic_refcnt[52099]) : _unknown[51] "compiler generated" "last resort"
  {
    unknown ret[766500] "RVV" "temp"
    unknown call_tmp[766507] "expr temp" "maybe param" "maybe type" "temp"
    (766510 'move' call_tmp[766507](766489 call _cnt _mt[243] r[766487]))
    unknown call_tmp[766512] "expr temp" "maybe param" "maybe type" "temp"
    (766515 'move' call_tmp[766512](766493 call chpl__defaultHash call_tmp[766507]))
    (766505 'move' ret[766500](766504 'deref' call_tmp[766512]))
    (766502 return ret[766500])
  }
  type atomic_refcnt[52099] unknown _cnt[51949](51948 call chpl__processorAtomicType int(64)[13])
  (355041 'used modules list'(51941 'use' ChapelStandard[20264]))
}