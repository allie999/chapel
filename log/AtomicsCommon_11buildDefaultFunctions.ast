AST dump for AtomicsCommon after pass buildDefaultFunctions.
Module use list: ChapelStandard 

{
  function chpl__init_AtomicsCommon[415977]() : void[4] "insert line file info" "module init"
  {
    (506899 return _void[55])
  }
  function atomic_refcnt[52102].inc[51962](arg _mt[52106]:_MT[238], arg this[52104]:atomic_refcnt[52102], arg cnt[51959] :
  1 =
  1) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[609211] "expr temp" "maybe param" "maybe type" "temp"
    (609214 'move' call_tmp[609211](51986 call _cond_test CHPL_CACHE_REMOTE[367]))
    if call_tmp[609211]
    {
      unknown call_tmp[609218] "expr temp" "maybe param" "maybe type" "temp"
      (609221 'move' call_tmp[609218](357236 call _cnt _mt[243] this[52104]))
      (51976 call(51966 call (partial) add _mt[243] call_tmp[609218]) cnt[51959](order = relaxed[187010]))
    }
    {
      unknown call_tmp[609227] "expr temp" "maybe param" "maybe type" "temp"
      (609230 'move' call_tmp[609227](357242 call _cnt _mt[243] this[52104]))
      (51984 call(51979 call (partial) add _mt[243] call_tmp[609227]) cnt[51959])
    }
    (506855 return _void[55])
  }
  function atomic_refcnt[52102].dec[51997](arg _mt[52110]:_MT[238], arg this[52108]:atomic_refcnt[52102]) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ret[506859] "RVV" "temp"
    unknown got[52007] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[540742] "maybe param" "maybe type" "temp"
    (540750 'move' type_tmp[540742](540748 call int(64)[13] 64))
    (540744 'init var split decl' got[52007] type_tmp[540742])
    (52010 'end of statement')
    unknown call_tmp[609234] "expr temp" "maybe param" "maybe type" "temp"
    (609237 'move' call_tmp[609234](52074 call _cond_test CHPL_CACHE_REMOTE[367]))
    if call_tmp[609234]
    {
      unknown call_tmp[609241] "expr temp" "maybe param" "maybe type" "temp"
      (609244 'move' call_tmp[609241](357247 call _cnt _mt[243] this[52108]))
      unknown call_tmp[609248] "maybe param" "maybe type" "temp"
      (609251 'move' call_tmp[609248](52025 call(52015 call (partial) fetchSub _mt[243] call_tmp[609241]) 1(order = release[187006])))
      (540752 'init var split init' got[52007] call_tmp[609248] type_tmp[540742])
      (474575 'end of statement' got[52007])
      unknown call_tmp[609253] "expr temp" "maybe param" "maybe type" "temp"
      (609256 'move' call_tmp[609253](52032 call == got[52007] 1))
      unknown call_tmp[609258] "expr temp" "maybe param" "maybe type" "temp"
      (609261 'move' call_tmp[609258](52046 call _cond_test call_tmp[609253]))
      if call_tmp[609258]
      {
        (52040 call atomicFence acquire[187008])
        (474577 'end of statement')
        unknown call_tmp[609263] "expr temp" "maybe param" "maybe type" "temp"
        (609266 'move' call_tmp[609263](506864 call int(64)[13] 64))
        (506867 'move' ret[506859](506866 'coerce' 0 call_tmp[609263]))
        gotoReturn _end_dec[506857] _end_dec[506857]
      }
      unknown call_tmp[609268] "expr temp" "maybe param" "maybe type" "temp"
      (609271 'move' call_tmp[609268](52052 call - got[52007] 1))
      unknown call_tmp[609273] "expr temp" "maybe param" "maybe type" "temp"
      (609276 'move' call_tmp[609273](506872 call int(64)[13] 64))
      (506875 'move' ret[506859](506874 'coerce' call_tmp[609268] call_tmp[609273]))
      gotoReturn _end_dec[506857] _end_dec[506857]
      (474579 'end of statement' got[52007])
    }
    {
      unknown call_tmp[609280] "expr temp" "maybe param" "maybe type" "temp"
      (609283 'move' call_tmp[609280](357254 call _cnt _mt[243] this[52108]))
      unknown call_tmp[609287] "maybe param" "maybe type" "temp"
      (609290 'move' call_tmp[609287](52063 call(52058 call (partial) fetchSub _mt[243] call_tmp[609280]) 1))
      (540755 'init var split init' got[52007] call_tmp[609287] type_tmp[540742])
      (474581 'end of statement' got[52007])
      unknown call_tmp[609292] "expr temp" "maybe param" "maybe type" "temp"
      (609295 'move' call_tmp[609292](52070 call - got[52007] 1))
      unknown call_tmp[609297] "expr temp" "maybe param" "maybe type" "temp"
      (609300 'move' call_tmp[609297](506880 call int(64)[13] 64))
      (506883 'move' ret[506859](506882 'coerce' call_tmp[609292] call_tmp[609297]))
      gotoReturn _end_dec[506857] _end_dec[506857]
      (474583 'end of statement' got[52007])
    }
    label _end_dec[506857]
    (506861 return ret[506859])
  }
  { scopeless type
    (52002 call int(64)[13] 64)
  }
  function atomic_refcnt[52102].read[52083](arg _mt[52114]:_MT[238], arg this[52112]:atomic_refcnt[52102]) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ret[506889] "RVV" "temp"
    unknown call_tmp[609304] "expr temp" "maybe param" "maybe type" "temp"
    (609307 'move' call_tmp[609304](357259 call _cnt _mt[243] this[52112]))
    unknown call_tmp[609311] "expr temp" "maybe param" "maybe type" "temp"
    (609314 'move' call_tmp[609311](52094 call(52090 call (partial) read _mt[243] call_tmp[609304])))
    unknown call_tmp[609316] "expr temp" "maybe param" "maybe type" "temp"
    (609319 'move' call_tmp[609316](506894 call int(64)[13] 64))
    (506897 'move' ret[506889](506896 'coerce' call_tmp[609311] call_tmp[609316]))
    (506891 return ret[506889])
  }
  { scopeless type
    (52088 call int(64)[13] 64)
  }
  function atomic_refcnt[52102]._cnt[765394](arg _mt[765396]:_MT[238], ref arg this[765398]:atomic_refcnt[52102]) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[765408] "RVV" "temp"
    unknown call_tmp[765415] "expr temp" "maybe param" "maybe type" "temp"
    (765418 'move' call_tmp[765415](765402 '.' this[765398] c"_cnt"))
    (765413 'move' ret[765408](765412 'addr of' call_tmp[765415]))
    (765410 return ret[765408])
  }
  function atomic_refcnt[52102].init[765420](arg _mt[765422]:_MT[238], ref arg this[765423]:atomic_refcnt[52102], in arg _cnt[765426] :
  (765429 call chpl__processorAtomicType int(64)[13]) =
  _typeDefaultT[250]) : void[4] "compiler generated" "last resort" "method" "primary method" "suppress lvalue error"
  {
    (765442 'init field' this[765423] c"_cnt" _cnt[765426])
    (765446 return _void[55])
  }
  function atomic_refcnt[52102].init=[765448](arg _mt[765451]:_MT[238], ref arg this[765452]:atomic_refcnt[52102], arg other[765453]:atomic_refcnt[52102]) : void[4] "compiler generated" "copy initializer" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown call_tmp[765483] "maybe param" "maybe type" "temp"
    (765486 'move' call_tmp[765483](765461 call _cnt _mt[243] other[765453]))
    unknown call_tmp[765488] "maybe param" "maybe type" "temp"
    (765491 'move' call_tmp[765488](765470 call chpl__processorAtomicType int(64)[13]))
    unknown tmp[765467] "temp"
    (765472 'init var' tmp[765467] call_tmp[765483] call_tmp[765488])
    (765474 'init field' this[765452] c"_cnt" tmp[765467])
    (765478 'end of statement')
    (765479 return _void[55])
  }
  function atomic_refcnt[52102].deinit[765493](arg _mt[765495]:_MT[238], arg this[765497]:atomic_refcnt[52102]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (765505 return _void[55])
  }
  function atomic_refcnt[52102].writeThis[765507](arg _mt[765511]:_MT[238], arg this[765509]:atomic_refcnt[52102], arg f[765510]:_any[178](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (765516 call writeThisDefaultImpl f[765510] this[765509])
    (765521 return _void[55])
  }
  function atomic_refcnt[52102].readThis[765523](arg _mt[765527]:_MT[238], arg this[765525]:atomic_refcnt[52102], arg f[765526]:_any[178](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (765531 call readThisDefaultImpl f[765526] this[765525])
    (765537 return _void[55])
  }
  function chpl_fields_are_comparable[765551](arg _arg1[765553]:atomic_refcnt[52102], arg _arg2[765554]:atomic_refcnt[52102]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[765572]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[765579] "expr temp" "maybe param" "maybe type" "temp"
    (765582 'move' call_tmp[765579](765557 call _cnt _mt[243] _arg1[765553]))
    unknown call_tmp[765584] "expr temp" "maybe param" "maybe type" "temp"
    (765587 'move' call_tmp[765584](765561 call _cnt _mt[243] _arg2[765554]))
    unknown call_tmp[765589] "expr temp" "maybe param" "maybe type" "temp"
    (765592 'move' call_tmp[765589](765565 'call resolves' c"==" call_tmp[765579] call_tmp[765584]))
    (765577 'move' ret[765572](765576 'deref' call_tmp[765589]))
    (765574 return ret[765572])
  }
  function ==[765539](arg _arg1[765541]:atomic_refcnt[52102], arg _arg2[765542]:atomic_refcnt[52102]) : bool[10] "compiler generated" "last resort"
  {
    val ret[765621]:bool[10] "RVV" "temp"
    unknown call_tmp[765633] "expr temp" "maybe param" "maybe type" "temp"
    (765636 'move' call_tmp[765633](765600 call _cnt _mt[243] _arg1[765541]))
    unknown call_tmp[765638] "expr temp" "maybe param" "maybe type" "temp"
    (765641 'move' call_tmp[765638](765604 call _cnt _mt[243] _arg2[765542]))
    unknown call_tmp[765643] "expr temp" "maybe param" "maybe type" "temp"
    (765646 'move' call_tmp[765643](765608 call != call_tmp[765633] call_tmp[765638]))
    if call_tmp[765643]
    {
      (765626 'move' ret[765621](765625 'deref' 0))
      gotoReturn _end_==[765619] _end_==[765619]
    }
    (765631 'move' ret[765621](765630 'deref' 1))
    label _end_==[765619]
    (765623 return ret[765621])
  }
  where {
    unknown call_tmp[765648] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (765651 'move' call_tmp[765648](765545 'typeof' _arg1[765541]))
    unknown call_tmp[765653] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (765656 'move' call_tmp[765653](765547 'typeof' _arg2[765542]))
    unknown call_tmp[765658] "expr temp" "maybe param" "maybe type" "temp"
    (765661 'move' call_tmp[765658](765549 call == call_tmp[765648] call_tmp[765653]))
    unknown call_tmp[765663] "expr temp" "maybe param" "maybe type" "temp"
    (765666 'move' call_tmp[765663](765594 call chpl_fields_are_comparable[765551] _arg1[765541] _arg2[765542]))
    (765598 '&' call_tmp[765658] call_tmp[765663])
  }
  function chpl_fields_are_comparable[765680](arg _arg1[765682]:atomic_refcnt[52102], arg _arg2[765683]:atomic_refcnt[52102]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[765701]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[765708] "expr temp" "maybe param" "maybe type" "temp"
    (765711 'move' call_tmp[765708](765686 call _cnt _mt[243] _arg1[765682]))
    unknown call_tmp[765713] "expr temp" "maybe param" "maybe type" "temp"
    (765716 'move' call_tmp[765713](765690 call _cnt _mt[243] _arg2[765683]))
    unknown call_tmp[765718] "expr temp" "maybe param" "maybe type" "temp"
    (765721 'move' call_tmp[765718](765694 'call resolves' c"!=" call_tmp[765708] call_tmp[765713]))
    (765706 'move' ret[765701](765705 'deref' call_tmp[765718]))
    (765703 return ret[765701])
  }
  function !=[765668](arg _arg1[765670]:atomic_refcnt[52102], arg _arg2[765671]:atomic_refcnt[52102]) : bool[10] "compiler generated" "last resort"
  {
    val ret[765750]:bool[10] "RVV" "temp"
    unknown call_tmp[765762] "expr temp" "maybe param" "maybe type" "temp"
    (765765 'move' call_tmp[765762](765729 call _cnt _mt[243] _arg1[765670]))
    unknown call_tmp[765767] "expr temp" "maybe param" "maybe type" "temp"
    (765770 'move' call_tmp[765767](765733 call _cnt _mt[243] _arg2[765671]))
    unknown call_tmp[765772] "expr temp" "maybe param" "maybe type" "temp"
    (765775 'move' call_tmp[765772](765737 call != call_tmp[765762] call_tmp[765767]))
    if call_tmp[765772]
    {
      (765755 'move' ret[765750](765754 'deref' 1))
      gotoReturn _end_!=[765748] _end_!=[765748]
    }
    (765760 'move' ret[765750](765759 'deref' 0))
    label _end_!=[765748]
    (765752 return ret[765750])
  }
  where {
    unknown call_tmp[765777] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (765780 'move' call_tmp[765777](765674 'typeof' _arg1[765670]))
    unknown call_tmp[765782] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (765785 'move' call_tmp[765782](765676 'typeof' _arg2[765671]))
    unknown call_tmp[765787] "expr temp" "maybe param" "maybe type" "temp"
    (765790 'move' call_tmp[765787](765678 call == call_tmp[765777] call_tmp[765782]))
    unknown call_tmp[765792] "expr temp" "maybe param" "maybe type" "temp"
    (765795 'move' call_tmp[765792](765723 call chpl_fields_are_comparable[765680] _arg1[765670] _arg2[765671]))
    (765727 '&' call_tmp[765787] call_tmp[765792])
  }
  function chpl_fields_are_comparable[765809](arg _arg1[765811]:atomic_refcnt[52102], arg _arg2[765812]:atomic_refcnt[52102]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[765830]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[765837] "expr temp" "maybe param" "maybe type" "temp"
    (765840 'move' call_tmp[765837](765815 call _cnt _mt[243] _arg1[765811]))
    unknown call_tmp[765842] "expr temp" "maybe param" "maybe type" "temp"
    (765845 'move' call_tmp[765842](765819 call _cnt _mt[243] _arg2[765812]))
    unknown call_tmp[765847] "expr temp" "maybe param" "maybe type" "temp"
    (765850 'move' call_tmp[765847](765823 'call resolves' c"<" call_tmp[765837] call_tmp[765842]))
    (765835 'move' ret[765830](765834 'deref' call_tmp[765847]))
    (765832 return ret[765830])
  }
  function <[765797](arg _arg1[765799]:atomic_refcnt[52102], arg _arg2[765800]:atomic_refcnt[52102]) : bool[10] "compiler generated" "last resort"
  {
    val ret[765894]:bool[10] "RVV" "temp"
    unknown call_tmp[765911] "expr temp" "maybe param" "maybe type" "temp"
    (765914 'move' call_tmp[765911](765858 call _cnt _mt[243] _arg1[765799]))
    unknown call_tmp[765916] "expr temp" "maybe param" "maybe type" "temp"
    (765919 'move' call_tmp[765916](765862 call _cnt _mt[243] _arg2[765800]))
    unknown call_tmp[765921] "expr temp" "maybe param" "maybe type" "temp"
    (765924 'move' call_tmp[765921](765866 call < call_tmp[765911] call_tmp[765916]))
    if call_tmp[765921]
    {
      (765899 'move' ret[765894](765898 'deref' 1))
      gotoReturn _end_<[765892] _end_<[765892]
    }
    unknown call_tmp[765926] "expr temp" "maybe param" "maybe type" "temp"
    (765929 'move' call_tmp[765926](765872 call _cnt _mt[243] _arg1[765799]))
    unknown call_tmp[765931] "expr temp" "maybe param" "maybe type" "temp"
    (765934 'move' call_tmp[765931](765876 call _cnt _mt[243] _arg2[765800]))
    unknown call_tmp[765936] "expr temp" "maybe param" "maybe type" "temp"
    (765939 'move' call_tmp[765936](765880 call > call_tmp[765926] call_tmp[765931]))
    if call_tmp[765936]
    {
      (765904 'move' ret[765894](765903 'deref' 0))
      gotoReturn _end_<[765892] _end_<[765892]
    }
    (765909 'move' ret[765894](765908 'deref' 0))
    label _end_<[765892]
    (765896 return ret[765894])
  }
  where {
    unknown call_tmp[765941] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (765944 'move' call_tmp[765941](765803 'typeof' _arg1[765799]))
    unknown call_tmp[765946] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (765949 'move' call_tmp[765946](765805 'typeof' _arg2[765800]))
    unknown call_tmp[765951] "expr temp" "maybe param" "maybe type" "temp"
    (765954 'move' call_tmp[765951](765807 call == call_tmp[765941] call_tmp[765946]))
    unknown call_tmp[765956] "expr temp" "maybe param" "maybe type" "temp"
    (765959 'move' call_tmp[765956](765852 call chpl_fields_are_comparable[765809] _arg1[765799] _arg2[765800]))
    (765856 '&' call_tmp[765951] call_tmp[765956])
  }
  function chpl_fields_are_comparable[765973](arg _arg1[765975]:atomic_refcnt[52102], arg _arg2[765976]:atomic_refcnt[52102]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[765994]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[766001] "expr temp" "maybe param" "maybe type" "temp"
    (766004 'move' call_tmp[766001](765979 call _cnt _mt[243] _arg1[765975]))
    unknown call_tmp[766006] "expr temp" "maybe param" "maybe type" "temp"
    (766009 'move' call_tmp[766006](765983 call _cnt _mt[243] _arg2[765976]))
    unknown call_tmp[766011] "expr temp" "maybe param" "maybe type" "temp"
    (766014 'move' call_tmp[766011](765987 'call resolves' c"<=" call_tmp[766001] call_tmp[766006]))
    (765999 'move' ret[765994](765998 'deref' call_tmp[766011]))
    (765996 return ret[765994])
  }
  function <=[765961](arg _arg1[765963]:atomic_refcnt[52102], arg _arg2[765964]:atomic_refcnt[52102]) : bool[10] "compiler generated" "last resort"
  {
    val ret[766058]:bool[10] "RVV" "temp"
    unknown call_tmp[766075] "expr temp" "maybe param" "maybe type" "temp"
    (766078 'move' call_tmp[766075](766022 call _cnt _mt[243] _arg1[765963]))
    unknown call_tmp[766080] "expr temp" "maybe param" "maybe type" "temp"
    (766083 'move' call_tmp[766080](766026 call _cnt _mt[243] _arg2[765964]))
    unknown call_tmp[766085] "expr temp" "maybe param" "maybe type" "temp"
    (766088 'move' call_tmp[766085](766030 call < call_tmp[766075] call_tmp[766080]))
    if call_tmp[766085]
    {
      (766063 'move' ret[766058](766062 'deref' 1))
      gotoReturn _end_<=[766056] _end_<=[766056]
    }
    unknown call_tmp[766090] "expr temp" "maybe param" "maybe type" "temp"
    (766093 'move' call_tmp[766090](766036 call _cnt _mt[243] _arg1[765963]))
    unknown call_tmp[766095] "expr temp" "maybe param" "maybe type" "temp"
    (766098 'move' call_tmp[766095](766040 call _cnt _mt[243] _arg2[765964]))
    unknown call_tmp[766100] "expr temp" "maybe param" "maybe type" "temp"
    (766103 'move' call_tmp[766100](766044 call > call_tmp[766090] call_tmp[766095]))
    if call_tmp[766100]
    {
      (766068 'move' ret[766058](766067 'deref' 0))
      gotoReturn _end_<=[766056] _end_<=[766056]
    }
    (766073 'move' ret[766058](766072 'deref' 1))
    label _end_<=[766056]
    (766060 return ret[766058])
  }
  where {
    unknown call_tmp[766105] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (766108 'move' call_tmp[766105](765967 'typeof' _arg1[765963]))
    unknown call_tmp[766110] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (766113 'move' call_tmp[766110](765969 'typeof' _arg2[765964]))
    unknown call_tmp[766115] "expr temp" "maybe param" "maybe type" "temp"
    (766118 'move' call_tmp[766115](765971 call == call_tmp[766105] call_tmp[766110]))
    unknown call_tmp[766120] "expr temp" "maybe param" "maybe type" "temp"
    (766123 'move' call_tmp[766120](766016 call chpl_fields_are_comparable[765973] _arg1[765963] _arg2[765964]))
    (766020 '&' call_tmp[766115] call_tmp[766120])
  }
  function chpl_fields_are_comparable[766137](arg _arg1[766139]:atomic_refcnt[52102], arg _arg2[766140]:atomic_refcnt[52102]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[766158]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[766165] "expr temp" "maybe param" "maybe type" "temp"
    (766168 'move' call_tmp[766165](766143 call _cnt _mt[243] _arg1[766139]))
    unknown call_tmp[766170] "expr temp" "maybe param" "maybe type" "temp"
    (766173 'move' call_tmp[766170](766147 call _cnt _mt[243] _arg2[766140]))
    unknown call_tmp[766175] "expr temp" "maybe param" "maybe type" "temp"
    (766178 'move' call_tmp[766175](766151 'call resolves' c">" call_tmp[766165] call_tmp[766170]))
    (766163 'move' ret[766158](766162 'deref' call_tmp[766175]))
    (766160 return ret[766158])
  }
  function >[766125](arg _arg1[766127]:atomic_refcnt[52102], arg _arg2[766128]:atomic_refcnt[52102]) : bool[10] "compiler generated" "last resort"
  {
    val ret[766222]:bool[10] "RVV" "temp"
    unknown call_tmp[766239] "expr temp" "maybe param" "maybe type" "temp"
    (766242 'move' call_tmp[766239](766186 call _cnt _mt[243] _arg1[766127]))
    unknown call_tmp[766244] "expr temp" "maybe param" "maybe type" "temp"
    (766247 'move' call_tmp[766244](766190 call _cnt _mt[243] _arg2[766128]))
    unknown call_tmp[766249] "expr temp" "maybe param" "maybe type" "temp"
    (766252 'move' call_tmp[766249](766194 call > call_tmp[766239] call_tmp[766244]))
    if call_tmp[766249]
    {
      (766227 'move' ret[766222](766226 'deref' 1))
      gotoReturn _end_>[766220] _end_>[766220]
    }
    unknown call_tmp[766254] "expr temp" "maybe param" "maybe type" "temp"
    (766257 'move' call_tmp[766254](766200 call _cnt _mt[243] _arg1[766127]))
    unknown call_tmp[766259] "expr temp" "maybe param" "maybe type" "temp"
    (766262 'move' call_tmp[766259](766204 call _cnt _mt[243] _arg2[766128]))
    unknown call_tmp[766264] "expr temp" "maybe param" "maybe type" "temp"
    (766267 'move' call_tmp[766264](766208 call < call_tmp[766254] call_tmp[766259]))
    if call_tmp[766264]
    {
      (766232 'move' ret[766222](766231 'deref' 0))
      gotoReturn _end_>[766220] _end_>[766220]
    }
    (766237 'move' ret[766222](766236 'deref' 0))
    label _end_>[766220]
    (766224 return ret[766222])
  }
  where {
    unknown call_tmp[766269] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (766272 'move' call_tmp[766269](766131 'typeof' _arg1[766127]))
    unknown call_tmp[766274] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (766277 'move' call_tmp[766274](766133 'typeof' _arg2[766128]))
    unknown call_tmp[766279] "expr temp" "maybe param" "maybe type" "temp"
    (766282 'move' call_tmp[766279](766135 call == call_tmp[766269] call_tmp[766274]))
    unknown call_tmp[766284] "expr temp" "maybe param" "maybe type" "temp"
    (766287 'move' call_tmp[766284](766180 call chpl_fields_are_comparable[766137] _arg1[766127] _arg2[766128]))
    (766184 '&' call_tmp[766279] call_tmp[766284])
  }
  function chpl_fields_are_comparable[766301](arg _arg1[766303]:atomic_refcnt[52102], arg _arg2[766304]:atomic_refcnt[52102]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[766322]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[766329] "expr temp" "maybe param" "maybe type" "temp"
    (766332 'move' call_tmp[766329](766307 call _cnt _mt[243] _arg1[766303]))
    unknown call_tmp[766334] "expr temp" "maybe param" "maybe type" "temp"
    (766337 'move' call_tmp[766334](766311 call _cnt _mt[243] _arg2[766304]))
    unknown call_tmp[766339] "expr temp" "maybe param" "maybe type" "temp"
    (766342 'move' call_tmp[766339](766315 'call resolves' c">=" call_tmp[766329] call_tmp[766334]))
    (766327 'move' ret[766322](766326 'deref' call_tmp[766339]))
    (766324 return ret[766322])
  }
  function >=[766289](arg _arg1[766291]:atomic_refcnt[52102], arg _arg2[766292]:atomic_refcnt[52102]) : bool[10] "compiler generated" "last resort"
  {
    val ret[766386]:bool[10] "RVV" "temp"
    unknown call_tmp[766403] "expr temp" "maybe param" "maybe type" "temp"
    (766406 'move' call_tmp[766403](766350 call _cnt _mt[243] _arg1[766291]))
    unknown call_tmp[766408] "expr temp" "maybe param" "maybe type" "temp"
    (766411 'move' call_tmp[766408](766354 call _cnt _mt[243] _arg2[766292]))
    unknown call_tmp[766413] "expr temp" "maybe param" "maybe type" "temp"
    (766416 'move' call_tmp[766413](766358 call > call_tmp[766403] call_tmp[766408]))
    if call_tmp[766413]
    {
      (766391 'move' ret[766386](766390 'deref' 1))
      gotoReturn _end_>=[766384] _end_>=[766384]
    }
    unknown call_tmp[766418] "expr temp" "maybe param" "maybe type" "temp"
    (766421 'move' call_tmp[766418](766364 call _cnt _mt[243] _arg1[766291]))
    unknown call_tmp[766423] "expr temp" "maybe param" "maybe type" "temp"
    (766426 'move' call_tmp[766423](766368 call _cnt _mt[243] _arg2[766292]))
    unknown call_tmp[766428] "expr temp" "maybe param" "maybe type" "temp"
    (766431 'move' call_tmp[766428](766372 call < call_tmp[766418] call_tmp[766423]))
    if call_tmp[766428]
    {
      (766396 'move' ret[766386](766395 'deref' 0))
      gotoReturn _end_>=[766384] _end_>=[766384]
    }
    (766401 'move' ret[766386](766400 'deref' 1))
    label _end_>=[766384]
    (766388 return ret[766386])
  }
  where {
    unknown call_tmp[766433] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (766436 'move' call_tmp[766433](766295 'typeof' _arg1[766291]))
    unknown call_tmp[766438] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (766441 'move' call_tmp[766438](766297 'typeof' _arg2[766292]))
    unknown call_tmp[766443] "expr temp" "maybe param" "maybe type" "temp"
    (766446 'move' call_tmp[766443](766299 call == call_tmp[766433] call_tmp[766438]))
    unknown call_tmp[766448] "expr temp" "maybe param" "maybe type" "temp"
    (766451 'move' call_tmp[766448](766344 call chpl_fields_are_comparable[766301] _arg1[766291] _arg2[766292]))
    (766348 '&' call_tmp[766443] call_tmp[766448])
  }
  function =[766453](ref arg _arg1[766455]:atomic_refcnt[52102], const?  ref arg _arg2[766456]:atomic_refcnt[52102]) : void[4] "assignop" "compiler generated" "last resort"
  {
    unknown call_tmp[766482] "expr temp" "maybe param" "maybe type" "temp"
    (766485 'move' call_tmp[766482](766466 call _cnt _mt[243] _arg1[766455]))
    unknown call_tmp[766489] "expr temp" "maybe param" "maybe type" "temp"
    (766492 'move' call_tmp[766489](766470 call _cnt _mt[243] _arg2[766456]))
    (766474 call = call_tmp[766482] call_tmp[766489])
    (766478 return _void[55])
  }
  where {
    unknown call_tmp[766494] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (766497 'move' call_tmp[766494](766459 'typeof' _arg1[766455]))
    unknown call_tmp[766499] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (766502 'move' call_tmp[766499](766461 'typeof' _arg2[766456]))
    (766463 call == call_tmp[766494] call_tmp[766499])
  }
  function chpl__defaultHash[766504](arg r[766506]:atomic_refcnt[52102]) : _unknown[51] "compiler generated" "last resort"
  {
    unknown ret[766519] "RVV" "temp"
    unknown call_tmp[766526] "expr temp" "maybe param" "maybe type" "temp"
    (766529 'move' call_tmp[766526](766508 call _cnt _mt[243] r[766506]))
    unknown call_tmp[766531] "expr temp" "maybe param" "maybe type" "temp"
    (766534 'move' call_tmp[766531](766512 call chpl__defaultHash call_tmp[766526]))
    (766524 'move' ret[766519](766523 'deref' call_tmp[766531]))
    (766521 return ret[766519])
  }
  type atomic_refcnt[52102] unknown _cnt[51952](51951 call chpl__processorAtomicType int(64)[13])
  (355081 'used modules list'(51944 'use' ChapelStandard[20267]))
}