AST dump for ExternalArray after pass replaceArrayAccessesWithRefTemps.
Module use list: ChapelStandard HaltWrappers 

{
  function chpl__init_ExternalArray[415970]() : void[4] "insert line file info" "module init" "resolved"
  {
    (524245 return _void[55])
  }
  function _ref(chpl_opaque_array)[967551]._instance[821374](ref arg this[821378]:_ref(chpl_opaque_array)[967551]) ref : _ref(c_void_ptr)[938033] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[821388]:_ref(c_void_ptr)[938033] "dead after last mention" "RVV" "temp"
    ref call_tmp[821395]:_ref(c_void_ptr)[938033] "dead after last mention" "maybe param" "temp"
    (821398 'move' call_tmp[821395](821382 '.' this[821378] _instance[188565]))
    (821393 'move' ret[821388] call_tmp[821395])
    (821390 return ret[821388])
  }
  function _ref(chpl_opaque_array)[967551]._unowned[821400](ref arg this[821404]:_ref(chpl_opaque_array)[967551]) ref : _ref(bool)[937110] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[821414]:_ref(bool)[937110] "dead after last mention" "RVV" "temp"
    ref call_tmp[821421]:_ref(bool)[937110] "dead after last mention" "maybe param" "temp"
    (821424 'move' call_tmp[821421](821408 '.' this[821404] _unowned[188570]))
    (821419 'move' ret[821414] call_tmp[821421])
    (821416 return ret[821414])
  }
  function _ref(chpl_opaque_array)[967551].deinit[821500](const?  ref arg this[821504]:_ref(chpl_opaque_array)[967551]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved"
  {
    (821512 return _void[55])
  }
  type chpl_opaque_array[188575] val _pid[188560]:int(64)[13] val _instance[188565]:c_void_ptr[149] val _unowned[188570]:bool[10]
  function _ref(chpl_external_array)[967561].deinit[823758](const?  ref arg this[823762]:_ref(chpl_external_array)[967561]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved"
  {
    (823770 return _void[55])
  }
  type chpl_external_array[188595] val elts[188580]:c_void_ptr[149] val num_elts[188585]:uint(64)[115] val freer[188590]:c_void_ptr[149]
  function chpl_call_free_func[188662](const in arg func[188659]:c_void_ptr[149], const in arg elts[188665]:c_void_ptr[149]) : void[4] "extern" "local args" "no fn body" "resolved" "no return value for void"
  {
    (524108 return _void[55])
  }
  function cleanupOpaqueArray[189647](const  ref arg arr[189644]:_ref(chpl_opaque_array)[967551]) : void[4] "export" "local args" "resolved" "no return value for void"
  {
    ref call_tmp[691563]:_ref(c_void_ptr)[938033] "dead at end of block" "maybe param" "reference to a const" "temp"
    (691566 'move' call_tmp[691563](189650 call _instance[821374] arr[189644]))
    val call_tmp[691568]:unmanaged BaseArr?[415397] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1487217]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1487221 'move' coerce_tmp[1487217](1487219 'deref' call_tmp[691563]))
    (691571 'move' call_tmp[691568](189656 call _cast[1487190] coerce_tmp[1487217]))
    val cleanup[189658]:unmanaged BaseArr?[415397] "dead at end of block" "insert auto destroy"
    (545455 'move' cleanup[189658](1487225 call chpl__initCopy[1487227] call_tmp[691568]))
    (189661 'end of statement')
    val call_tmp[691573]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1487253]:borrowed object?[415248] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1487258 'move' coerce_tmp[1487253](1487255 'cast' borrowed object?[415248] cleanup[189658]))
    (691576 'move' call_tmp[691573](189675 call _cond_test[9881] coerce_tmp[1487253]))
    if call_tmp[691573]
    {
      ref call_tmp[691580]:_ref(bool)[937110] "dead after last mention" "maybe param" "reference to a const" "temp"
      (691583 'move' call_tmp[691580](189666 call _unowned[821400] arr[189644]))
      val call_tmp[691585]:unmanaged BaseArr[415364] "dead after last mention" "expr temp" "maybe param" "temp"
      (691588 'move' call_tmp[691585](189671 call postfix![1476142] cleanup[189658]))
      val coerce_tmp[1488115]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1488119 'move' coerce_tmp[1488115](1488117 'deref' call_tmp[691580]))
      (189673 call _do_destroy_arr[1487515] coerce_tmp[1488115] call_tmp[691585] 1)
      (484536 'end of statement' cleanup[189658])
    }
    (524243 return _void[55])
  }
}