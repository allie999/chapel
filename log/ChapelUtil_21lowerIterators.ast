AST dump for ChapelUtil after pass lowerIterators.
Module use list: ChapelStandard 

{
  function chpl__init_ChapelUtil[415925]() : void[4] "insert line file info" "module init" "resolved"
  {
    (521993 return _void[55])
  }
  function safeAdd[979640](const in arg a[979642]:int(64)[13], const in arg b[979647]:int(64)[13]) : bool[10] "instantiated generic" "invisible fn" "resolved"
  {
    val ret[979649]:bool[10] "dead after last mention" "RVV" "temp"
    val call_tmp[979657]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[979690]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (979692 'move' call_tmp[979690](979695 call <[948309] a[979642]))
    val call_tmp[979698]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (979700 'move' call_tmp[979698] call_tmp[979690])
    if call_tmp[979698]
    {
      val call_tmp[979707]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (979709 'move' call_tmp[979707](979712 call >=[979887] b[979647]))
      val call_tmp[979715]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (979717 'move' call_tmp[979715] call_tmp[979707])
      if call_tmp[979715]
      {
        (979724 'move' ret[979649] 1)
        gotoReturn _end_safeAdd[979863] _end_safeAdd[979863]
      }
      {
        val call_tmp[979731]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[979744]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (979746 'move' call_tmp[979744](979749 call -[980111] a[979642]))
        val call_tmp[979752]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (979754 'move' call_tmp[979752](979757 call <[437363] b[979647] call_tmp[979744]))
        val call_tmp[979760]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (979762 'move' call_tmp[979760] call_tmp[979752])
        if call_tmp[979760]
        {
          (979769 'move' ret[979649] 0)
          gotoReturn _end_safeAdd[979863] _end_safeAdd[979863]
        }
        {
          (979776 'move' ret[979649] 1)
          gotoReturn _end_safeAdd[979863] _end_safeAdd[979863]
        }
      }
    }
    {
      val call_tmp[979785]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (979787 'move' call_tmp[979785](979790 call <=[436923] b[979647] 0))
      val call_tmp[979793]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (979795 'move' call_tmp[979793] call_tmp[979785])
      if call_tmp[979793]
      {
        (979802 'move' ret[979649] 1)
        gotoReturn _end_safeAdd[979863] _end_safeAdd[979863]
      }
      {
        val call_tmp[979809]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[979822]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (979824 'move' call_tmp[979822](979827 call -[980259] a[979642]))
        val call_tmp[979830]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (979832 'move' call_tmp[979830](979835 call >[437583] b[979647] call_tmp[979822]))
        val call_tmp[979838]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (979840 'move' call_tmp[979838] call_tmp[979830])
        if call_tmp[979838]
        {
          (979847 'move' ret[979649] 0)
          gotoReturn _end_safeAdd[979863] _end_safeAdd[979863]
        }
        {
          (979854 'move' ret[979649] 1)
          gotoReturn _end_safeAdd[979863] _end_safeAdd[979863]
        }
      }
    }
    label _end_safeAdd[979863]
    (979865 return ret[979649])
  }
  function _ref(chpl_main_argument)[1492420].deinit[811487](const  ref arg this[811491]:_ref(chpl_main_argument)[1492420]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved"
  {
    (811499 return _void[55])
  }
  type chpl_main_argument[167370] val argc[167357]:int(64)[13] val return_value[167365]:int(32)[95]
  function chpl_rt_preUserCodeHook[167668]() : void[4] "extern" "local args" "no fn body" "resolved" "no return value for void"
  {
    (521979 return _void[55])
  }
  function chpl_rt_postUserCodeHook[167674]() : void[4] "extern" "local args" "no fn body" "resolved" "no return value for void"
  {
    (521981 return _void[55])
  }
  function chpl_addModule[167689](const in arg moduleName[167686]:c_string[19], const in arg deinitFun[167692]:c_fn_ptr[152]) : void[4] "resolved" "no return value for void"
  {
    val call_tmp[679266]:chpl_ModuleDeinit[19824] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
    val new_temp[1485993]:chpl_ModuleDeinit[19824] "dead after last mention" "temp"
    (1485995 'move' new_temp[1485993](1485864 call _new[1485929] moduleName[167686] deinitFun[167692] chpl_moduleDeinitFuns[19837]))
    (679269 'move' call_tmp[679266] new_temp[1485993])
    val coerce_tmp[1486011]:chpl_ModuleDeinit[19824] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1486017 'move' coerce_tmp[1486011] call_tmp[679266])
    (167705 call =[1484674] chpl_moduleDeinitFuns[19837] coerce_tmp[1486011])
    (521983 return _void[55])
  }
  function chpl_deinitModules[167713]() : void[4] "export" "local args" "resolved" "no return value for void"
  {
    val prev[167764]:chpl_ModuleDeinit[19824] "dead at end of block" "insert auto destroy"
    (544459 'move' prev[167764](1484283 call chpl__initCopy[981797] chpl_moduleDeinitFuns[19837]))
    {
      val tmp[167821]:bool[10] "dead after last mention" "temp"
      val coerce_tmp[1484293]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1484298 'move' coerce_tmp[1484293](1484295 'cast' object[22] prev[167764]))
      (167839 'move' tmp[167821](167837 call _cond_test[9881] coerce_tmp[1484293]))
      WhileDo[167826] hazard
      {
        {
          val call_tmp[679276]:chpl_ModuleDeinit[19824] "dead at end of block" "maybe param" "temp"
          (679279 'move' call_tmp[679276](167770 call postfix![1484301] prev[167764]))
          const curr[167772]:chpl_ModuleDeinit[19824] "dead at end of block" "const" "insert auto destroy"
          (544461 'move' curr[167772](1484616 call chpl__initCopy[1484597] call_tmp[679276]))
          ref call_tmp[679295]:_ref(c_fn_ptr)[948775] "dead after last mention" "maybe param" "reference to a const" "temp"
          val coerce_tmp[1484623]:chpl_ModuleDeinit[19824] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1484628 'move' coerce_tmp[1484623] curr[167772])
          (679298 'move' call_tmp[679295](167800 call deinitFun[752539] coerce_tmp[1484623]))
          val coerce_tmp[1484631]:c_fn_ptr[152] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1484635 'move' coerce_tmp[1484631](1484633 'deref' call_tmp[679295]))
          (167804 call chpl_execute_module_deinit[167746] coerce_tmp[1484631])
          ref call_tmp[679302]:_ref(chpl_ModuleDeinit)[981778] "dead after last mention" "maybe param" "reference to a const" "temp"
          val coerce_tmp[1484638]:chpl_ModuleDeinit[19824] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1484643 'move' coerce_tmp[1484638] curr[167772])
          (679305 'move' call_tmp[679302](167810 call prevModule[752565] coerce_tmp[1484638]))
          val coerce_tmp[1484709]:chpl_ModuleDeinit[19824] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1484713 'move' coerce_tmp[1484709](1484711 'deref' call_tmp[679302]))
          (167813 call =[1484674] prev[167764] coerce_tmp[1484709])
          (167818 call chpl__delete[1484716] curr[167772])
        }
        label _continueLabel[167824]
        val coerce_tmp[1485775]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1485780 'move' coerce_tmp[1485775](1485777 'cast' object[22] prev[167764]))
        (167832 'move' tmp[167821](167830 call _cond_test[9881] coerce_tmp[1485775]))
        tmp[167821]
      }
      label _breakLabel[167825]
    }
    (167844 call =[1485811] chpl_moduleDeinitFuns[19837] nil[44])
    (521991 return _void[55])
  }
  function chpl_execute_module_deinit[167746](const in arg deinitFun[167743]:c_fn_ptr[152]) : void[4] "extern" "local args" "no fn body" "resolved" "no return value for void"
  {
    (521989 return _void[55])
  }
}