AST dump for ChapelUtil after pass lowerIterators.
Module use list: ChapelStandard 

{
  function chpl__init_ChapelUtil[416014]() : void[4] "insert line file info" "module init" "resolved"
  {
    (522084 return _void[55])
  }
  function safeAdd[979729](const in arg a[979731]:int(64)[13], const in arg b[979736]:int(64)[13]) : bool[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[979738]:bool[10] "dead after last mention" "RVV" "temp"
    val call_tmp[979746]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[979779]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (979781 'move' call_tmp[979779](979784 call <[948398] a[979731]))
    val call_tmp[979787]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (979789 'move' call_tmp[979787] call_tmp[979779])
    if call_tmp[979787]
    {
      val call_tmp[979796]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (979798 'move' call_tmp[979796](979801 call >=[979976] b[979736]))
      val call_tmp[979804]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (979806 'move' call_tmp[979804] call_tmp[979796])
      if call_tmp[979804]
      {
        (979813 'move' ret[979738] 1)
        gotoReturn _end_safeAdd[979952] _end_safeAdd[979952]
      }
      {
        val call_tmp[979820]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[979833]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (979835 'move' call_tmp[979833](979838 call -[980200] a[979731]))
        val call_tmp[979841]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (979843 'move' call_tmp[979841](979846 call <[437452] b[979736] call_tmp[979833]))
        val call_tmp[979849]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (979851 'move' call_tmp[979849] call_tmp[979841])
        if call_tmp[979849]
        {
          (979858 'move' ret[979738] 0)
          gotoReturn _end_safeAdd[979952] _end_safeAdd[979952]
        }
        {
          (979865 'move' ret[979738] 1)
          gotoReturn _end_safeAdd[979952] _end_safeAdd[979952]
        }
      }
    }
    {
      val call_tmp[979874]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (979876 'move' call_tmp[979874](979879 call <=[437012] b[979736] 0))
      val call_tmp[979882]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (979884 'move' call_tmp[979882] call_tmp[979874])
      if call_tmp[979882]
      {
        (979891 'move' ret[979738] 1)
        gotoReturn _end_safeAdd[979952] _end_safeAdd[979952]
      }
      {
        val call_tmp[979898]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[979911]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (979913 'move' call_tmp[979911](979916 call -[980348] a[979731]))
        val call_tmp[979919]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (979921 'move' call_tmp[979919](979924 call >[437672] b[979736] call_tmp[979911]))
        val call_tmp[979927]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (979929 'move' call_tmp[979927] call_tmp[979919])
        if call_tmp[979927]
        {
          (979936 'move' ret[979738] 0)
          gotoReturn _end_safeAdd[979952] _end_safeAdd[979952]
        }
        {
          (979943 'move' ret[979738] 1)
          gotoReturn _end_safeAdd[979952] _end_safeAdd[979952]
        }
      }
    }
    label _end_safeAdd[979952]
    (979954 return ret[979738])
  }
  function _ref(chpl_main_argument)[1459537].deinit[811576](const  ref arg this[811580]:_ref(chpl_main_argument)[1459537]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved"
  {
    (811588 return _void[55])
  }
  type chpl_main_argument[167370] val argc[167357]:int(64)[13] val return_value[167365]:int(32)[95]
  function chpl_rt_preUserCodeHook[167668]() : void[4] "extern" "local args" "no fn body" "resolved" "no return value for void"
  {
    (522070 return _void[55])
  }
  function chpl_rt_postUserCodeHook[167674]() : void[4] "extern" "local args" "no fn body" "resolved" "no return value for void"
  {
    (522072 return _void[55])
  }
  function chpl_addModule[167689](const in arg moduleName[167686]:c_string[19], const in arg deinitFun[167692]:c_fn_ptr[152]) : void[4] "resolved" "no return value for void"
  {
    val call_tmp[679340]:chpl_ModuleDeinit[19824] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
    val new_temp[1440366]:chpl_ModuleDeinit[19824] "dead after last mention" "temp"
    (1440368 'move' new_temp[1440366](1440237 call _new[1440302] moduleName[167686] deinitFun[167692] chpl_moduleDeinitFuns[19837]))
    (679343 'move' call_tmp[679340] new_temp[1440366])
    val coerce_tmp[1440384]:chpl_ModuleDeinit[19824] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1440390 'move' coerce_tmp[1440384] call_tmp[679340])
    (167705 call =[1439047] chpl_moduleDeinitFuns[19837] coerce_tmp[1440384])
    (522074 return _void[55])
  }
  function chpl_deinitModules[167713]() : void[4] "export" "local args" "resolved" "no return value for void"
  {
    val prev[167764]:chpl_ModuleDeinit[19824] "dead at end of block" "insert auto destroy"
    (544550 'move' prev[167764](1438656 call chpl__initCopy[981886] chpl_moduleDeinitFuns[19837]))
    {
      val tmp[167821]:bool[10] "dead after last mention" "temp"
      val coerce_tmp[1438666]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1438671 'move' coerce_tmp[1438666](1438668 'cast' object[22] prev[167764]))
      (167839 'move' tmp[167821](167837 call _cond_test[9881] coerce_tmp[1438666]))
      WhileDo[167826] hazard
      {
        {
          val call_tmp[679350]:chpl_ModuleDeinit[19824] "dead at end of block" "maybe param" "temp"
          (679353 'move' call_tmp[679350](167770 call postfix![1438674] prev[167764]))
          const curr[167772]:chpl_ModuleDeinit[19824] "dead at end of block" "const" "insert auto destroy"
          (544552 'move' curr[167772](1438989 call chpl__initCopy[1438970] call_tmp[679350]))
          ref call_tmp[679369]:_ref(c_fn_ptr)[948864] "dead after last mention" "maybe param" "reference to a const" "temp"
          val coerce_tmp[1438996]:chpl_ModuleDeinit[19824] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1439001 'move' coerce_tmp[1438996] curr[167772])
          (679372 'move' call_tmp[679369](167800 call deinitFun[752628] coerce_tmp[1438996]))
          val coerce_tmp[1439004]:c_fn_ptr[152] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1439008 'move' coerce_tmp[1439004](1439006 'deref' call_tmp[679369]))
          (167804 call chpl_execute_module_deinit[167746] coerce_tmp[1439004])
          ref call_tmp[679376]:_ref(chpl_ModuleDeinit)[981867] "dead after last mention" "maybe param" "reference to a const" "temp"
          val coerce_tmp[1439011]:chpl_ModuleDeinit[19824] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1439016 'move' coerce_tmp[1439011] curr[167772])
          (679379 'move' call_tmp[679376](167810 call prevModule[752654] coerce_tmp[1439011]))
          val coerce_tmp[1439082]:chpl_ModuleDeinit[19824] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1439086 'move' coerce_tmp[1439082](1439084 'deref' call_tmp[679376]))
          (167813 call =[1439047] prev[167764] coerce_tmp[1439082])
          (167818 call chpl__delete[1439089] curr[167772])
        }
        label _continueLabel[167824]
        val coerce_tmp[1440148]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1440153 'move' coerce_tmp[1440148](1440150 'cast' object[22] prev[167764]))
        (167832 'move' tmp[167821](167830 call _cond_test[9881] coerce_tmp[1440148]))
        tmp[167821]
      }
      label _breakLabel[167825]
    }
    (167844 call =[1440184] chpl_moduleDeinitFuns[19837] nil[44])
    (522082 return _void[55])
  }
  function chpl_execute_module_deinit[167746](const in arg deinitFun[167743]:c_fn_ptr[152]) : void[4] "extern" "local args" "no fn body" "resolved" "no return value for void"
  {
    (522080 return _void[55])
  }
}