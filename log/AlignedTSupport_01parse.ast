AST dump for AlignedTSupport after pass parse.
Module use list: 

{
  type aligned_t[88359]
  function castableToAlignedT[88366](arg t[88364]:_any[178](?)) param : _unknown[51]
  {
    (88378 return(88376 call ||(88371 call isIntegralType t)(88375 call isBoolType t)))
  }
  function _cast[88389](arg t[88386] :
  aligned_t, arg x[88392] :
  integral) : _unknown[51] "inline"
  {
    (88400 return(88399 'cast' t x))
  }
  function _cast[88411](arg t[88408] :
  aligned_t, arg x[88414] :
  bool[10]) : _unknown[51] "inline"
  {
    (88422 return(88421 'cast' t x))
  }
  function _cast[88433](arg t[88430] :
  chpl_anybool, arg x[88436] :
  aligned_t) : _unknown[51] "inline"
  {
    (88444 return(88443 'cast' t x))
  }
  function _cast[88455](arg t[88452] :
  integral, arg x[88458] :
  aligned_t) : _unknown[51] "inline"
  {
    (88466 return(88465 'cast' t x))
  }
  function defaultOfAlignedT[88475](arg t[88473]:_any[178](?)) : _unknown[51] "inline"
  {
    { scopeless
      const defaultValue[88478] "const" t
      (88481 'end of statement')
    }
    (88487 return(88485 call _cast aligned_t defaultValue))
  }
  function _unknown[51].writeThis[88496](arg _mt[88501]:_MT[238], arg this[88498] :
  aligned_t, arg f[88494]:_any[178](?)) : _unknown[51] throws "method"
  {
    { scopeless
      unknown tmp[88514](88512 call _cast(88511 call uint[115] 64) this)(88506 call uint[115] 64)
      (88517 'end of statement')
    }
    (88521 call <~> f tmp)
  }
  function _unknown[51].readThis[88531](arg _mt[88536]:_MT[238], arg this[88533] :
  aligned_t, arg f[88529]:_any[178](?)) : _unknown[51] throws "method"
  {
    { scopeless
      unknown tmp[88542](88541 call uint[115] 64)
      (88545 'end of statement')
    }
    (88549 call <~> f tmp)
    (88557 call = this(88555 call _cast aligned_t tmp))
  }
}