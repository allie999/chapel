AST dump for PCGRandomLib after pass parse.
Module use list: 

{
  (353177 'use' ChapelStandard)
  { scopeless
    unknown PCG_DEFAULT_MULTIPLIER_8[311870] "param" "private" 141
    (311873 'end of statement')
  }
  { scopeless
    unknown PCG_DEFAULT_MULTIPLIER_16[311878] "param" "private" 12829
    (311881 'end of statement')
  }
  { scopeless
    unknown PCG_DEFAULT_MULTIPLIER_32[311885] "param" "private" 747796405
    (311888 'end of statement')
  }
  { scopeless
    unknown PCG_DEFAULT_MULTIPLIER_64[311892] "param" "private" 6364136223846793005
    (311895 'end of statement')
  }
  function pcg_setseq_8_step_r[311905](ref arg state[311902] :
  (311901 call uint[115] 8), arg inc[311911] :
  (311910 call uint[115] 8)) : _unknown[51] "inline" "private"
  {
    (311922 call = state(311920 call +(311917 call * state PCG_DEFAULT_MULTIPLIER_8) inc))
  }
  function pcg_setseq_16_step_r[311937](ref arg state[311934] :
  (311933 call uint[115] 16), arg inc[311943] :
  (311942 call uint[115] 16)) : _unknown[51] "inline" "private"
  {
    (311954 call = state(311952 call +(311949 call * state PCG_DEFAULT_MULTIPLIER_16) inc))
  }
  function pcg_setseq_32_step_r[311969](ref arg state[311966] :
  (311965 call uint[115] 32), arg inc[311975] :
  (311974 call uint[115] 32)) : _unknown[51] "inline" "private"
  {
    (311986 call = state(311984 call +(311981 call * state PCG_DEFAULT_MULTIPLIER_32) inc))
  }
  function pcg_setseq_64_step_r[312001](ref arg state[311998] :
  (311997 call uint[115] 64), arg inc[312007] :
  (312006 call uint[115] 64)) : _unknown[51] "inline" "private"
  {
    (312018 call = state(312016 call +(312013 call * state PCG_DEFAULT_MULTIPLIER_64) inc))
  }
  function pcg_rotr_32[312033](arg value[312030] :
  (312029 call uint[115] 32), arg rot[312039] :
  (312038 call uint[115] 32)) : _unknown[51] "inline" "private"
  {
    function chpl_bitops_rotr_32[312055](arg x[312052] :
    (312051 call uint[115] 32), arg n[312061] :
    (312060 call uint[115] 32)) : _unknown[51] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      (312067 call uint[115] 32)
    }
    { scopeless
      unknown ret[312077](312076 call chpl_bitops_rotr_32 value rot)
      (312080 'end of statement')
    }
    (312082 return ret)
  }
  { scopeless type
    (312045 call uint[115] 32)
  }
  function pcg_output_xsh_rr_64_32[312096](arg state[312093] :
  (312092 call uint[115] 64)) : _unknown[51] "inline" "private"
  {
    { scopeless
      const xorshifted[312122] "const"(312120 call _cast(312119 call uint[115] 32)(312114 call >>(312111 call ^(312108 call >> state 18) state) 27))(312105 call uint[115] 32)
      (312125 'end of statement')
    }
    { scopeless
      const rot[312141] "const"(312139 call _cast(312138 call uint[115] 32)(312133 call >> state 59))(312130 call uint[115] 32)
      (312144 'end of statement')
    }
    { scopeless
      const ret[312150] "const"(312149 call pcg_rotr_32 xorshifted rot)
      (312153 'end of statement')
    }
    (312155 return ret)
  }
  { scopeless type
    (312101 call uint[115] 32)
  }
  function pcg_output_rxs_m_xs_8_8[312169](arg state[312166] :
  (312165 call uint[115] 8)) : _unknown[51] "inline" "private"
  {
    { scopeless
      const word[312197] "const"(312195 call *(312190 call ^(312187 call >> state(312185 call +(312182 call >> state 6) 2)) state) 217)(312178 call uint[115] 8)
      (312200 'end of statement')
    }
    (312209 return(312207 call ^(312204 call >> word 6) word))
  }
  { scopeless type
    (312174 call uint[115] 8)
  }
  function pcg_output_rxs_m_xs_16_16[312223](arg state[312220] :
  (312219 call uint[115] 16)) : _unknown[51] "inline" "private"
  {
    { scopeless
      const word[312251] "const"(312249 call *(312244 call ^(312241 call >> state(312239 call +(312236 call >> state 13) 3)) state) 62169)(312232 call uint[115] 16)
      (312254 'end of statement')
    }
    (312263 return(312261 call ^(312258 call >> word 11) word))
  }
  { scopeless type
    (312228 call uint[115] 16)
  }
  function pcg_output_rxs_m_xs_32_32[312277](arg state[312274] :
  (312273 call uint[115] 32)) : _unknown[51] "inline" "private"
  {
    { scopeless
      const word[312305] "const"(312303 call *(312298 call ^(312295 call >> state(312293 call +(312290 call >> state 28) 4)) state) 277803737)(312286 call uint[115] 32)
      (312308 'end of statement')
    }
    (312317 return(312315 call ^(312312 call >> word 22) word))
  }
  { scopeless type
    (312282 call uint[115] 32)
  }
  function pcg_output_rxs_m_xs_64_64[312331](arg state[312328] :
  (312327 call uint[115] 64)) : _unknown[51] "inline" "private"
  {
    { scopeless
      const word[312359] "const"(312357 call *(312352 call ^(312349 call >> state(312347 call +(312344 call >> state 59) 5)) state) 12605985483714917081)(312340 call uint[115] 64)
      (312362 'end of statement')
    }
    (312371 return(312369 call ^(312366 call >> word 43) word))
  }
  { scopeless type
    (312336 call uint[115] 64)
  }
  type pcg_setseq_64_xsh_rr_32_rng[312856] unknown state[312381](312380 call uint[115] 64) function pcg_setseq_64_xsh_rr_32_rng[312856].srandom[312394](arg _mt[312860]:_MT[238], arg this[312858]:pcg_setseq_64_xsh_rr_32_rng[312856], arg seed[312391] :
  (312390 call uint[115] 64), arg inc[312400] :
  (312399 call uint[115] 64)) : _unknown[51] "inline" "method" "primary method"
  {
    (312408 call = state(312406 call + inc seed))
    (312416 call pcg_setseq_64_step_r state inc)
  } function pcg_setseq_64_xsh_rr_32_rng[312856].random[312429](arg _mt[312864]:_MT[238], arg this[312862]:pcg_setseq_64_xsh_rr_32_rng[312856], arg inc[312426] :
  (312425 call uint[115] 64)) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      const oldstate[312440] "const" state(312438 call uint[115] 64)
      (312443 'end of statement')
    }
    (312449 call pcg_setseq_64_step_r state inc)
    (312455 return(312454 call pcg_output_xsh_rr_64_32 oldstate))
  }
  { scopeless type
    (312434 call uint[115] 32)
  } function pcg_setseq_64_xsh_rr_32_rng[312856].bounded_random[312469](arg _mt[312868]:_MT[238], arg this[312866]:pcg_setseq_64_xsh_rr_32_rng[312856], arg inc[312466] :
  (312465 call uint[115] 64), arg bound[312475] :
  (312474 call uint[115] 32)) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      const negbound[312497] "const"(312495 call _cast(312494 call uint[115] 32)(312489 call -(312487 call _cast(312486 call int[13] 32) bound)))(312481 call uint[115] 32)
      (312500 'end of statement')
    }
    { scopeless
      const threshold[312510] "const"(312508 call % negbound bound)(312505 call uint[115] 32)
      (312513 'end of statement')
    }
    { scopeless
      unknown tmprng[312515] pcg_setseq_64_xsh_rr_32_rng
      (312518 'end of statement')
    }
    { scopeless
      unknown tmpinc[312523](312522 call uint[115] 64)
      (312526 'end of statement')
    }
    { scopeless
      unknown r[312531](312530 call uint[115] 32)
      (312534 'end of statement')
    }
    {
      unknown tmp[312560] "temp"
      (312578 'move' tmp[312560](312576 call _cond_test 1))
      WhileDo[312565]
      {
        {
          (312541 call = r(312540 call random inc))
          if(312555 call _cond_test(312547 call >= r threshold))
          {
            { scopeless
              (312553 return(312551 call % r bound))
            }
          }
        }
        label _continueLabel[312563]
        (312571 'move' tmp[312560](312569 call _cond_test 1))
        tmp[312560]
      }
      label _breakLabel[312564]
    }
    (312582 return 0)
  } function pcg_setseq_64_xsh_rr_32_rng[312856].bounded_random_vary_inc[312595](arg _mt[312872]:_MT[238], arg this[312870]:pcg_setseq_64_xsh_rr_32_rng[312856], arg inc[312592] :
  (312591 call uint[115] 64), arg bound[312601] :
  (312600 call uint[115] 32), arg seed[312608] :
  (312607 call uint[115] 64), arg skip[312615] :
  (312614 call uint[115] 64), arg next_inc[312622] :
  (312621 call uint[115] 64), arg inc_increment[312629] :
  (312628 call uint[115] 64)) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      const negbound[312651] "const"(312649 call _cast(312648 call uint[115] 32)(312643 call -(312641 call _cast(312640 call int[13] 32) bound)))(312635 call uint[115] 32)
      (312654 'end of statement')
    }
    { scopeless
      const threshold[312664] "const"(312662 call % negbound bound)(312659 call uint[115] 32)
      (312667 'end of statement')
    }
    { scopeless
      unknown r[312672](312671 call uint[115] 32)
      (312675 'end of statement')
    }
    (312681 call = r(312680 call random inc))
    if(312694 call _cond_test(312686 call >= r threshold))
    {
      { scopeless
        (312692 return(312690 call % r bound))
      }
    }
    { scopeless
      unknown newinc[312703](312702 call uint[115] 64)
      (312706 'end of statement')
    }
    {
      unknown _indexOfInterest[312780] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[312781] "expr temp" "temp"
      (312790 'move' _iterator[312781](312788 call _getIterator(312712 call chpl_by(312709 call chpl_build_low_bounded_range next_inc) inc_increment)))
      Defer
      {
        {
          (312810 call _freeIterator _iterator[312781])
        }
      }
      { scopeless type
        (312799 'move' _indexOfInterest[312780](312796 call iteratorIndex _iterator[312781]))
      }
      ForLoop[312782]
      {
        unknown newinc[312803] "index var" "insert auto destroy"
        (312805 'move' newinc[312803] _indexOfInterest[312780])
        {
          { scopeless
            unknown tmprng[312715] pcg_setseq_64_xsh_rr_32_rng
            (312718 'end of statement')
          }
          { scopeless
            unknown tmpinc[312724](312723 call uint[115] 64)
            (312727 'end of statement')
          }
          (312733 call = tmpinc(312732 call pcg_getvalid_inc newinc))
          (312743 call(312737 call . tmprng c"srandom") seed tmpinc)
          (312752 call(312746 call . tmprng c"advance") tmpinc skip)
          (312762 call = r(312761 call(312756 call . tmprng c"random") tmpinc))
          if(312775 call _cond_test(312767 call >= r threshold))
          {
            { scopeless
              (312773 return(312771 call % r bound))
            }
          }
        }
        label _continueLabel[312785]
        _indexOfInterest[312780]
        _iterator[312781]
      }
      label _breakLabel[312786]
    }
    (312818 return 0)
  } function pcg_setseq_64_xsh_rr_32_rng[312856].advance[312831](arg _mt[312876]:_MT[238], arg this[312874]:pcg_setseq_64_xsh_rr_32_rng[312856], arg inc[312828] :
  (312827 call uint[115] 64), arg delta[312837] :
  (312836 call uint[115] 64)) : _unknown[51] "inline" "method" "primary method"
  {
    (312849 call = state(312848 call pcg_advance_lcg 64 state delta PCG_DEFAULT_MULTIPLIER_64 inc))
  }
  type pcg_setseq_64_rxs_m_xs_64_rng[312997] unknown state[312884](312883 call uint[115] 64) function pcg_setseq_64_rxs_m_xs_64_rng[312997].srandom[312897](arg _mt[313001]:_MT[238], arg this[312999]:pcg_setseq_64_rxs_m_xs_64_rng[312997], arg seed[312894] :
  (312893 call uint[115] 64), arg inc[312903] :
  (312902 call uint[115] 64)) : _unknown[51] "inline" "method" "primary method"
  {
    (312911 call = state(312909 call + inc seed))
    (312919 call pcg_setseq_64_step_r state inc)
  } function pcg_setseq_64_rxs_m_xs_64_rng[312997].random[312932](arg _mt[313005]:_MT[238], arg this[313003]:pcg_setseq_64_rxs_m_xs_64_rng[312997], arg inc[312929] :
  (312928 call uint[115] 64)) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      const oldstate[312943] "const" state(312941 call uint[115] 64)
      (312946 'end of statement')
    }
    (312952 call pcg_setseq_64_step_r state inc)
    (312958 return(312957 call pcg_output_rxs_m_xs_64_64 oldstate))
  }
  { scopeless type
    (312937 call uint[115] 64)
  } function pcg_setseq_64_rxs_m_xs_64_rng[312997].advance[312972](arg _mt[313009]:_MT[238], arg this[313007]:pcg_setseq_64_rxs_m_xs_64_rng[312997], arg inc[312969] :
  (312968 call uint[115] 64), arg delta[312978] :
  (312977 call uint[115] 64)) : _unknown[51] "inline" "method" "primary method"
  {
    (312990 call = state(312989 call pcg_advance_lcg 64 state delta PCG_DEFAULT_MULTIPLIER_64 inc))
  }
  type pcg_setseq_32_rxs_m_xs_32_rng[313130] unknown state[313017](313016 call uint[115] 32) function pcg_setseq_32_rxs_m_xs_32_rng[313130].srandom[313030](arg _mt[313134]:_MT[238], arg this[313132]:pcg_setseq_32_rxs_m_xs_32_rng[313130], arg seed[313027] :
  (313026 call uint[115] 32), arg inc[313036] :
  (313035 call uint[115] 32)) : _unknown[51] "inline" "method" "primary method"
  {
    (313044 call = state(313042 call + inc seed))
    (313052 call pcg_setseq_32_step_r state inc)
  } function pcg_setseq_32_rxs_m_xs_32_rng[313130].random[313065](arg _mt[313138]:_MT[238], arg this[313136]:pcg_setseq_32_rxs_m_xs_32_rng[313130], arg inc[313062] :
  (313061 call uint[115] 32)) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      const oldstate[313076] "const" state(313074 call uint[115] 32)
      (313079 'end of statement')
    }
    (313085 call pcg_setseq_32_step_r state inc)
    (313091 return(313090 call pcg_output_rxs_m_xs_32_32 oldstate))
  }
  { scopeless type
    (313070 call uint[115] 32)
  } function pcg_setseq_32_rxs_m_xs_32_rng[313130].advance[313105](arg _mt[313142]:_MT[238], arg this[313140]:pcg_setseq_32_rxs_m_xs_32_rng[313130], arg inc[313102] :
  (313101 call uint[115] 32), arg delta[313111] :
  (313110 call uint[115] 32)) : _unknown[51] "inline" "method" "primary method"
  {
    (313123 call = state(313122 call pcg_advance_lcg 32 state delta PCG_DEFAULT_MULTIPLIER_32 inc))
  }
  type pcg_setseq_16_rxs_m_xs_16_rng[313263] unknown state[313150](313149 call uint[115] 16) function pcg_setseq_16_rxs_m_xs_16_rng[313263].srandom[313163](arg _mt[313267]:_MT[238], arg this[313265]:pcg_setseq_16_rxs_m_xs_16_rng[313263], arg seed[313160] :
  (313159 call uint[115] 16), arg inc[313169] :
  (313168 call uint[115] 16)) : _unknown[51] "inline" "method" "primary method"
  {
    (313177 call = state(313175 call + inc seed))
    (313185 call pcg_setseq_16_step_r state inc)
  } function pcg_setseq_16_rxs_m_xs_16_rng[313263].random[313198](arg _mt[313271]:_MT[238], arg this[313269]:pcg_setseq_16_rxs_m_xs_16_rng[313263], arg inc[313195] :
  (313194 call uint[115] 16)) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      const oldstate[313209] "const" state(313207 call uint[115] 16)
      (313212 'end of statement')
    }
    (313218 call pcg_setseq_16_step_r state inc)
    (313224 return(313223 call pcg_output_rxs_m_xs_16_16 oldstate))
  }
  { scopeless type
    (313203 call uint[115] 16)
  } function pcg_setseq_16_rxs_m_xs_16_rng[313263].advance[313238](arg _mt[313275]:_MT[238], arg this[313273]:pcg_setseq_16_rxs_m_xs_16_rng[313263], arg inc[313235] :
  (313234 call uint[115] 16), arg delta[313244] :
  (313243 call uint[115] 16)) : _unknown[51] "inline" "method" "primary method"
  {
    (313256 call = state(313255 call pcg_advance_lcg 16 state delta PCG_DEFAULT_MULTIPLIER_16 inc))
  }
  type pcg_setseq_8_rxs_m_xs_8_rng[313396] unknown state[313283](313282 call uint[115] 8) function pcg_setseq_8_rxs_m_xs_8_rng[313396].srandom[313296](arg _mt[313400]:_MT[238], arg this[313398]:pcg_setseq_8_rxs_m_xs_8_rng[313396], arg seed[313293] :
  (313292 call uint[115] 8), arg inc[313302] :
  (313301 call uint[115] 8)) : _unknown[51] "inline" "method" "primary method"
  {
    (313310 call = state(313308 call + inc seed))
    (313318 call pcg_setseq_8_step_r state inc)
  } function pcg_setseq_8_rxs_m_xs_8_rng[313396].random[313331](arg _mt[313404]:_MT[238], arg this[313402]:pcg_setseq_8_rxs_m_xs_8_rng[313396], arg inc[313328] :
  (313327 call uint[115] 8)) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      const oldstate[313342] "const" state(313340 call uint[115] 8)
      (313345 'end of statement')
    }
    (313351 call pcg_setseq_8_step_r state inc)
    (313357 return(313356 call pcg_output_rxs_m_xs_8_8 oldstate))
  }
  { scopeless type
    (313336 call uint[115] 8)
  } function pcg_setseq_8_rxs_m_xs_8_rng[313396].advance[313371](arg _mt[313408]:_MT[238], arg this[313406]:pcg_setseq_8_rxs_m_xs_8_rng[313396], arg inc[313368] :
  (313367 call uint[115] 8), arg delta[313377] :
  (313376 call uint[115] 8)) : _unknown[51] "inline" "method" "primary method"
  {
    (313389 call = state(313388 call pcg_advance_lcg 8 state delta PCG_DEFAULT_MULTIPLIER_8 inc))
  }
  function uint_with_bits[313415](param arg nbits[313413]:_any[178](?)) type : _unknown[51] "private"
  {
    if(313465 call _cond_test(313419 call <= nbits 8))
    {
      { scopeless
        (313425 return(313424 call uint[115] 8))
      }
    }
    {
      { scopeless
        if(313459 call _cond_test(313429 call <= nbits 16))
        {
          { scopeless
            (313435 return(313434 call uint[115] 16))
          }
        }
        {
          { scopeless
            if(313453 call _cond_test(313439 call <= nbits 32))
            {
              { scopeless
                (313445 return(313444 call uint[115] 32))
              }
            }
            {
              { scopeless
                (313451 return(313450 call uint[115] 64))
              }
            }
          }
        }
      }
    }
  }
  function normalize[313480](arg nbits[313477] :
  int[13], arg x[313483] :
  uint[115]) : _unknown[51] "inline" "private"
  {
    { scopeless
      unknown oldx[313487] x
      (313490 'end of statement')
    }
    { scopeless
      unknown shiftamt[313496](313494 call - 64 nbits)
      (313499 'end of statement')
    }
    (313502 call <<= oldx shiftamt)
    (313509 return(313507 call >> oldx shiftamt))
  }
  function pcg_output_rxs_m_xs_N_mine[313519](arg nbits[313516] :
  int[13], arg state_in[313521]:_any[178](?)) : _unknown[51] "private"
  {
    if(313530 call _cond_test(313525 call < nbits 8))
    {
      { scopeless
        (313528 return state_in)
      }
    }
    if(313552 call _cond_test(313538 call == nbits 8))
    {
      { scopeless
        (313550 return(313549 call pcg_output_rxs_m_xs_8_8(313546 call _cast(313545 call uint[115] 8) state_in)))
      }
    }
    if(313573 call _cond_test(313559 call == nbits 16))
    {
      { scopeless
        (313571 return(313570 call pcg_output_rxs_m_xs_16_16(313567 call _cast(313566 call uint[115] 16) state_in)))
      }
    }
    if(313594 call _cond_test(313580 call == nbits 32))
    {
      { scopeless
        (313592 return(313591 call pcg_output_rxs_m_xs_32_32(313588 call _cast(313587 call uint[115] 32) state_in)))
      }
    }
    if(313615 call _cond_test(313601 call == nbits 64))
    {
      { scopeless
        (313613 return(313612 call pcg_output_rxs_m_xs_64_64(313609 call _cast(313608 call uint[115] 64) state_in)))
      }
    }
    {
      { scopeless
        unknown shiftamt[313624](313622 call - nbits 4)
        (313627 'end of statement')
      }
      { scopeless
        unknown state[313633](313631 call _cast uint[115] state_in)
        (313636 'end of statement')
      }
      { scopeless
        unknown word[313654](313652 call *(313649 call ^(313646 call >> state(313644 call +(313641 call >> state shiftamt) 2)) state) 217) uint[115]
        (313657 'end of statement')
      }
      (313664 call = word(313663 call normalize nbits word))
      (313674 return(313672 call ^(313669 call >> word shiftamt) word))
    }
  }
  type pcg_setseq_N_rxs_m_xs_N_rng[314258](?) const N[313679] "const" unknown state[313684] uint[115] function pcg_setseq_N_rxs_m_xs_N_rng[314258](?).mask_state[313690](arg _mt[314262]:_MT[238], arg this[314260]:pcg_setseq_N_rxs_m_xs_N_rng[314258](?)) : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    (313698 call = state(313697 call normalize N state))
  } function pcg_setseq_N_rxs_m_xs_N_rng[314258](?).srandom[313710](arg _mt[314266]:_MT[238], arg this[314264]:pcg_setseq_N_rxs_m_xs_N_rng[314258](?), arg seed[313707] :
  uint[115], arg inc[313713] :
  uint[115]) : _unknown[51] "inline" "method" "primary method"
  {
    (313721 call = state(313719 call + inc seed))
    if(313849 call _cond_test(313727 call <= N 8))
    {
      { scopeless
        unknown tmpstate[313736](313734 call _cast(313733 call uint[115] 8) state)
        (313739 'end of statement')
      }
      (313751 call pcg_setseq_8_step_r tmpstate(313749 call _cast(313748 call uint[115] 8) inc))
      (313755 call = state tmpstate)
    }
    {
      { scopeless
        if(313844 call _cond_test(313760 call <= N 16))
        {
          { scopeless
            unknown tmpstate[313769](313767 call _cast(313766 call uint[115] 16) state)
            (313772 'end of statement')
          }
          (313784 call pcg_setseq_16_step_r tmpstate(313782 call _cast(313781 call uint[115] 16) inc))
          (313788 call = state tmpstate)
        }
        {
          { scopeless
            if(313839 call _cond_test(313793 call <= N 32))
            {
              { scopeless
                unknown tmpstate[313802](313800 call _cast(313799 call uint[115] 32) state)
                (313805 'end of statement')
              }
              (313817 call pcg_setseq_32_step_r tmpstate(313815 call _cast(313814 call uint[115] 32) inc))
              (313821 call = state tmpstate)
            }
            {
              { scopeless
                if(313835 call _cond_test(313826 call <= N 64))
                {
                  (313832 call pcg_setseq_64_step_r state inc)
                }
              }
            }
          }
        }
      }
    }
    (313856 call mask_state)
  } function pcg_setseq_N_rxs_m_xs_N_rng[314258](?).random[313866](arg _mt[314270]:_MT[238], arg this[314268]:pcg_setseq_N_rxs_m_xs_N_rng[314258](?), arg inc[313863] :
  uint[115]) : _unknown[51] "inline" "method" "primary method"
  {
    if(314073 call _cond_test(313871 call <= N 8))
    {
      { scopeless
        unknown tmpstate[313880](313878 call _cast(313877 call uint[115] 8) state)
        (313883 'end of statement')
      }
      { scopeless
        unknown oldstate[313886] tmpstate
        (313889 'end of statement')
      }
      (313900 call pcg_setseq_8_step_r tmpstate(313898 call _cast(313897 call uint[115] 8) inc))
      (313904 call = state tmpstate)
      (313909 call mask_state)
      (313920 return(313919 call normalize N(313918 call pcg_output_rxs_m_xs_N_mine N oldstate)))
    }
    {
      { scopeless
        if(314068 call _cond_test(313924 call <= N 16))
        {
          { scopeless
            unknown tmpstate[313933](313931 call _cast(313930 call uint[115] 16) state)
            (313936 'end of statement')
          }
          { scopeless
            unknown oldstate[313939] tmpstate
            (313942 'end of statement')
          }
          (313953 call pcg_setseq_16_step_r tmpstate(313951 call _cast(313950 call uint[115] 16) inc))
          (313957 call = state tmpstate)
          (313962 call mask_state)
          (313973 return(313972 call normalize N(313971 call pcg_output_rxs_m_xs_N_mine N oldstate)))
        }
        {
          { scopeless
            if(314063 call _cond_test(313977 call <= N 32))
            {
              { scopeless
                unknown tmpstate[313986](313984 call _cast(313983 call uint[115] 32) state)
                (313989 'end of statement')
              }
              { scopeless
                unknown oldstate[313992] tmpstate
                (313995 'end of statement')
              }
              (314006 call pcg_setseq_32_step_r tmpstate(314004 call _cast(314003 call uint[115] 32) inc))
              (314010 call = state tmpstate)
              (314015 call mask_state)
              (314026 return(314025 call normalize N(314024 call pcg_output_rxs_m_xs_N_mine N oldstate)))
            }
            {
              { scopeless
                if(314059 call _cond_test(314030 call <= N 64))
                {
                  { scopeless
                    unknown oldstate[314033] state
                    (314036 'end of statement')
                  }
                  (314042 call pcg_setseq_64_step_r state inc)
                  (314046 call mask_state)
                  (314057 return(314056 call normalize N(314055 call pcg_output_rxs_m_xs_N_mine N oldstate)))
                }
              }
            }
          }
        }
      }
    }
    (314080 return 0)
  }
  { scopeless type
    uint[115]
  } function pcg_setseq_N_rxs_m_xs_N_rng[314258](?).advance[314091](arg _mt[314274]:_MT[238], arg this[314272]:pcg_setseq_N_rxs_m_xs_N_rng[314258](?), arg inc[314088] :
  uint[115], arg delta[314094] :
  uint[115]) : _unknown[51] "inline" "method" "primary method"
  {
    if(314249 call _cond_test(314099 call <= N 8))
    {
      (314128 call = state(314127 call pcg_advance_lcg 8(314110 call _cast(314109 call uint[115] 8) state)(314117 call _cast(314116 call uint[115] 8) delta) PCG_DEFAULT_MULTIPLIER_8(314125 call _cast(314124 call uint[115] 8) inc)))
      (314134 call mask_state)
    }
    {
      { scopeless
        if(314244 call _cond_test(314138 call <= N 16))
        {
          (314167 call = state(314166 call pcg_advance_lcg 16(314149 call _cast(314148 call uint[115] 16) state)(314156 call _cast(314155 call uint[115] 16) delta) PCG_DEFAULT_MULTIPLIER_16(314164 call _cast(314163 call uint[115] 16) inc)))
          (314173 call mask_state)
        }
        {
          { scopeless
            if(314239 call _cond_test(314177 call <= N 32))
            {
              (314206 call = state(314205 call pcg_advance_lcg 32(314188 call _cast(314187 call uint[115] 32) state)(314195 call _cast(314194 call uint[115] 32) delta) PCG_DEFAULT_MULTIPLIER_32(314203 call _cast(314202 call uint[115] 32) inc)))
              (314212 call mask_state)
            }
            {
              { scopeless
                if(314235 call _cond_test(314216 call <= N 64))
                {
                  (314227 call = state(314226 call pcg_advance_lcg 64 state delta PCG_DEFAULT_MULTIPLIER_64 inc))
                  (314233 call mask_state)
                }
              }
            }
          }
        }
      }
    }
  }
  function pcg_getvalid_inc[314286](arg initseq[314283] :
  (314282 call uint[115] 64)) : _unknown[51] "inline"
  {
    { scopeless
      (314299 return(314297 call |(314294 call << initseq 1) 1))
    }
  }
  { scopeless type
    (314291 call uint[115] 64)
  }
  function pcg_getvalid_inc[314314](param arg initseq[314311] :
  (314310 call uint[115] 64)) param : _unknown[51] "inline" "no doc"
  {
    { scopeless
      (314323 return(314321 call |(314318 call << initseq 1) 1))
    }
  }
  function pcg_advance_lcg[314332](param arg bits[314330]:_any[178](?), arg state[314338] :
  (314337 call uint_with_bits bits), in arg delta[314345] :
  (314344 call uint_with_bits bits), in arg cur_mult[314352] :
  (314351 call uint_with_bits bits), in arg cur_plus[314359] :
  (314358 call uint_with_bits bits)) : _unknown[51] "private"
  {
    { scopeless
      unknown acc_mult[314371] 1(314369 call uint_with_bits bits)
      (314374 'end of statement')
    }
    { scopeless
      unknown acc_plus[314381] 0(314379 call uint_with_bits bits)
      (314384 'end of statement')
    }
    {
      unknown tmp[314439] "temp"
      (314463 'move' tmp[314439](314458 call _cond_test(314460 call > delta 0)))
      WhileDo[314444]
      {
        {
          if(314413 call _cond_test(314394 call !=(314391 call & delta 1) 0))
          {
            (314398 call *= acc_mult cur_mult)
            (314410 call = acc_plus(314408 call +(314405 call * acc_plus cur_mult) cur_plus))
          }
          (314426 call = cur_plus(314424 call *(314421 call + cur_mult 1) cur_plus))
          (314431 call *= cur_mult cur_mult)
          (314436 call /= delta 2)
        }
        label _continueLabel[314442]
        (314453 'move' tmp[314439](314448 call _cond_test(314450 call > delta 0)))
        tmp[314439]
      }
      label _breakLabel[314443]
    }
    (314473 return(314471 call +(314468 call * acc_mult state) acc_plus))
  }
  { scopeless type
    (314365 call uint_with_bits bits)
  }
}