AST dump for PCGRandomLib after pass parse.
Module use list: 

{
  (353110 'use' ChapelStandard)
  { scopeless
    unknown PCG_DEFAULT_MULTIPLIER_8[311803] "param" "private" 141
    (311806 'end of statement')
  }
  { scopeless
    unknown PCG_DEFAULT_MULTIPLIER_16[311811] "param" "private" 12829
    (311814 'end of statement')
  }
  { scopeless
    unknown PCG_DEFAULT_MULTIPLIER_32[311818] "param" "private" 747796405
    (311821 'end of statement')
  }
  { scopeless
    unknown PCG_DEFAULT_MULTIPLIER_64[311825] "param" "private" 6364136223846793005
    (311828 'end of statement')
  }
  function pcg_setseq_8_step_r[311838](ref arg state[311835] :
  (311834 call uint[115] 8), arg inc[311844] :
  (311843 call uint[115] 8)) : _unknown[51] "inline" "private"
  {
    (311855 call = state(311853 call +(311850 call * state PCG_DEFAULT_MULTIPLIER_8) inc))
  }
  function pcg_setseq_16_step_r[311870](ref arg state[311867] :
  (311866 call uint[115] 16), arg inc[311876] :
  (311875 call uint[115] 16)) : _unknown[51] "inline" "private"
  {
    (311887 call = state(311885 call +(311882 call * state PCG_DEFAULT_MULTIPLIER_16) inc))
  }
  function pcg_setseq_32_step_r[311902](ref arg state[311899] :
  (311898 call uint[115] 32), arg inc[311908] :
  (311907 call uint[115] 32)) : _unknown[51] "inline" "private"
  {
    (311919 call = state(311917 call +(311914 call * state PCG_DEFAULT_MULTIPLIER_32) inc))
  }
  function pcg_setseq_64_step_r[311934](ref arg state[311931] :
  (311930 call uint[115] 64), arg inc[311940] :
  (311939 call uint[115] 64)) : _unknown[51] "inline" "private"
  {
    (311951 call = state(311949 call +(311946 call * state PCG_DEFAULT_MULTIPLIER_64) inc))
  }
  function pcg_rotr_32[311966](arg value[311963] :
  (311962 call uint[115] 32), arg rot[311972] :
  (311971 call uint[115] 32)) : _unknown[51] "inline" "private"
  {
    function chpl_bitops_rotr_32[311988](arg x[311985] :
    (311984 call uint[115] 32), arg n[311994] :
    (311993 call uint[115] 32)) : _unknown[51] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      (312000 call uint[115] 32)
    }
    { scopeless
      unknown ret[312010](312009 call chpl_bitops_rotr_32 value rot)
      (312013 'end of statement')
    }
    (312015 return ret)
  }
  { scopeless type
    (311978 call uint[115] 32)
  }
  function pcg_output_xsh_rr_64_32[312029](arg state[312026] :
  (312025 call uint[115] 64)) : _unknown[51] "inline" "private"
  {
    { scopeless
      const xorshifted[312055] "const"(312053 call _cast(312052 call uint[115] 32)(312047 call >>(312044 call ^(312041 call >> state 18) state) 27))(312038 call uint[115] 32)
      (312058 'end of statement')
    }
    { scopeless
      const rot[312074] "const"(312072 call _cast(312071 call uint[115] 32)(312066 call >> state 59))(312063 call uint[115] 32)
      (312077 'end of statement')
    }
    { scopeless
      const ret[312083] "const"(312082 call pcg_rotr_32 xorshifted rot)
      (312086 'end of statement')
    }
    (312088 return ret)
  }
  { scopeless type
    (312034 call uint[115] 32)
  }
  function pcg_output_rxs_m_xs_8_8[312102](arg state[312099] :
  (312098 call uint[115] 8)) : _unknown[51] "inline" "private"
  {
    { scopeless
      const word[312130] "const"(312128 call *(312123 call ^(312120 call >> state(312118 call +(312115 call >> state 6) 2)) state) 217)(312111 call uint[115] 8)
      (312133 'end of statement')
    }
    (312142 return(312140 call ^(312137 call >> word 6) word))
  }
  { scopeless type
    (312107 call uint[115] 8)
  }
  function pcg_output_rxs_m_xs_16_16[312156](arg state[312153] :
  (312152 call uint[115] 16)) : _unknown[51] "inline" "private"
  {
    { scopeless
      const word[312184] "const"(312182 call *(312177 call ^(312174 call >> state(312172 call +(312169 call >> state 13) 3)) state) 62169)(312165 call uint[115] 16)
      (312187 'end of statement')
    }
    (312196 return(312194 call ^(312191 call >> word 11) word))
  }
  { scopeless type
    (312161 call uint[115] 16)
  }
  function pcg_output_rxs_m_xs_32_32[312210](arg state[312207] :
  (312206 call uint[115] 32)) : _unknown[51] "inline" "private"
  {
    { scopeless
      const word[312238] "const"(312236 call *(312231 call ^(312228 call >> state(312226 call +(312223 call >> state 28) 4)) state) 277803737)(312219 call uint[115] 32)
      (312241 'end of statement')
    }
    (312250 return(312248 call ^(312245 call >> word 22) word))
  }
  { scopeless type
    (312215 call uint[115] 32)
  }
  function pcg_output_rxs_m_xs_64_64[312264](arg state[312261] :
  (312260 call uint[115] 64)) : _unknown[51] "inline" "private"
  {
    { scopeless
      const word[312292] "const"(312290 call *(312285 call ^(312282 call >> state(312280 call +(312277 call >> state 59) 5)) state) 12605985483714917081)(312273 call uint[115] 64)
      (312295 'end of statement')
    }
    (312304 return(312302 call ^(312299 call >> word 43) word))
  }
  { scopeless type
    (312269 call uint[115] 64)
  }
  type pcg_setseq_64_xsh_rr_32_rng[312789] unknown state[312314](312313 call uint[115] 64) function pcg_setseq_64_xsh_rr_32_rng[312789].srandom[312327](arg _mt[312793]:_MT[238], arg this[312791]:pcg_setseq_64_xsh_rr_32_rng[312789], arg seed[312324] :
  (312323 call uint[115] 64), arg inc[312333] :
  (312332 call uint[115] 64)) : _unknown[51] "inline" "method" "primary method"
  {
    (312341 call = state(312339 call + inc seed))
    (312349 call pcg_setseq_64_step_r state inc)
  } function pcg_setseq_64_xsh_rr_32_rng[312789].random[312362](arg _mt[312797]:_MT[238], arg this[312795]:pcg_setseq_64_xsh_rr_32_rng[312789], arg inc[312359] :
  (312358 call uint[115] 64)) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      const oldstate[312373] "const" state(312371 call uint[115] 64)
      (312376 'end of statement')
    }
    (312382 call pcg_setseq_64_step_r state inc)
    (312388 return(312387 call pcg_output_xsh_rr_64_32 oldstate))
  }
  { scopeless type
    (312367 call uint[115] 32)
  } function pcg_setseq_64_xsh_rr_32_rng[312789].bounded_random[312402](arg _mt[312801]:_MT[238], arg this[312799]:pcg_setseq_64_xsh_rr_32_rng[312789], arg inc[312399] :
  (312398 call uint[115] 64), arg bound[312408] :
  (312407 call uint[115] 32)) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      const negbound[312430] "const"(312428 call _cast(312427 call uint[115] 32)(312422 call -(312420 call _cast(312419 call int[13] 32) bound)))(312414 call uint[115] 32)
      (312433 'end of statement')
    }
    { scopeless
      const threshold[312443] "const"(312441 call % negbound bound)(312438 call uint[115] 32)
      (312446 'end of statement')
    }
    { scopeless
      unknown tmprng[312448] pcg_setseq_64_xsh_rr_32_rng
      (312451 'end of statement')
    }
    { scopeless
      unknown tmpinc[312456](312455 call uint[115] 64)
      (312459 'end of statement')
    }
    { scopeless
      unknown r[312464](312463 call uint[115] 32)
      (312467 'end of statement')
    }
    {
      unknown tmp[312493] "temp"
      (312511 'move' tmp[312493](312509 call _cond_test 1))
      WhileDo[312498]
      {
        {
          (312474 call = r(312473 call random inc))
          if(312488 call _cond_test(312480 call >= r threshold))
          {
            { scopeless
              (312486 return(312484 call % r bound))
            }
          }
        }
        label _continueLabel[312496]
        (312504 'move' tmp[312493](312502 call _cond_test 1))
        tmp[312493]
      }
      label _breakLabel[312497]
    }
    (312515 return 0)
  } function pcg_setseq_64_xsh_rr_32_rng[312789].bounded_random_vary_inc[312528](arg _mt[312805]:_MT[238], arg this[312803]:pcg_setseq_64_xsh_rr_32_rng[312789], arg inc[312525] :
  (312524 call uint[115] 64), arg bound[312534] :
  (312533 call uint[115] 32), arg seed[312541] :
  (312540 call uint[115] 64), arg skip[312548] :
  (312547 call uint[115] 64), arg next_inc[312555] :
  (312554 call uint[115] 64), arg inc_increment[312562] :
  (312561 call uint[115] 64)) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      const negbound[312584] "const"(312582 call _cast(312581 call uint[115] 32)(312576 call -(312574 call _cast(312573 call int[13] 32) bound)))(312568 call uint[115] 32)
      (312587 'end of statement')
    }
    { scopeless
      const threshold[312597] "const"(312595 call % negbound bound)(312592 call uint[115] 32)
      (312600 'end of statement')
    }
    { scopeless
      unknown r[312605](312604 call uint[115] 32)
      (312608 'end of statement')
    }
    (312614 call = r(312613 call random inc))
    if(312627 call _cond_test(312619 call >= r threshold))
    {
      { scopeless
        (312625 return(312623 call % r bound))
      }
    }
    { scopeless
      unknown newinc[312636](312635 call uint[115] 64)
      (312639 'end of statement')
    }
    {
      unknown _indexOfInterest[312713] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[312714] "expr temp" "temp"
      (312723 'move' _iterator[312714](312721 call _getIterator(312645 call chpl_by(312642 call chpl_build_low_bounded_range next_inc) inc_increment)))
      Defer
      {
        {
          (312743 call _freeIterator _iterator[312714])
        }
      }
      { scopeless type
        (312732 'move' _indexOfInterest[312713](312729 call iteratorIndex _iterator[312714]))
      }
      ForLoop[312715]
      {
        unknown newinc[312736] "index var" "insert auto destroy"
        (312738 'move' newinc[312736] _indexOfInterest[312713])
        {
          { scopeless
            unknown tmprng[312648] pcg_setseq_64_xsh_rr_32_rng
            (312651 'end of statement')
          }
          { scopeless
            unknown tmpinc[312657](312656 call uint[115] 64)
            (312660 'end of statement')
          }
          (312666 call = tmpinc(312665 call pcg_getvalid_inc newinc))
          (312676 call(312670 call . tmprng c"srandom") seed tmpinc)
          (312685 call(312679 call . tmprng c"advance") tmpinc skip)
          (312695 call = r(312694 call(312689 call . tmprng c"random") tmpinc))
          if(312708 call _cond_test(312700 call >= r threshold))
          {
            { scopeless
              (312706 return(312704 call % r bound))
            }
          }
        }
        label _continueLabel[312718]
        _indexOfInterest[312713]
        _iterator[312714]
      }
      label _breakLabel[312719]
    }
    (312751 return 0)
  } function pcg_setseq_64_xsh_rr_32_rng[312789].advance[312764](arg _mt[312809]:_MT[238], arg this[312807]:pcg_setseq_64_xsh_rr_32_rng[312789], arg inc[312761] :
  (312760 call uint[115] 64), arg delta[312770] :
  (312769 call uint[115] 64)) : _unknown[51] "inline" "method" "primary method"
  {
    (312782 call = state(312781 call pcg_advance_lcg 64 state delta PCG_DEFAULT_MULTIPLIER_64 inc))
  }
  type pcg_setseq_64_rxs_m_xs_64_rng[312930] unknown state[312817](312816 call uint[115] 64) function pcg_setseq_64_rxs_m_xs_64_rng[312930].srandom[312830](arg _mt[312934]:_MT[238], arg this[312932]:pcg_setseq_64_rxs_m_xs_64_rng[312930], arg seed[312827] :
  (312826 call uint[115] 64), arg inc[312836] :
  (312835 call uint[115] 64)) : _unknown[51] "inline" "method" "primary method"
  {
    (312844 call = state(312842 call + inc seed))
    (312852 call pcg_setseq_64_step_r state inc)
  } function pcg_setseq_64_rxs_m_xs_64_rng[312930].random[312865](arg _mt[312938]:_MT[238], arg this[312936]:pcg_setseq_64_rxs_m_xs_64_rng[312930], arg inc[312862] :
  (312861 call uint[115] 64)) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      const oldstate[312876] "const" state(312874 call uint[115] 64)
      (312879 'end of statement')
    }
    (312885 call pcg_setseq_64_step_r state inc)
    (312891 return(312890 call pcg_output_rxs_m_xs_64_64 oldstate))
  }
  { scopeless type
    (312870 call uint[115] 64)
  } function pcg_setseq_64_rxs_m_xs_64_rng[312930].advance[312905](arg _mt[312942]:_MT[238], arg this[312940]:pcg_setseq_64_rxs_m_xs_64_rng[312930], arg inc[312902] :
  (312901 call uint[115] 64), arg delta[312911] :
  (312910 call uint[115] 64)) : _unknown[51] "inline" "method" "primary method"
  {
    (312923 call = state(312922 call pcg_advance_lcg 64 state delta PCG_DEFAULT_MULTIPLIER_64 inc))
  }
  type pcg_setseq_32_rxs_m_xs_32_rng[313063] unknown state[312950](312949 call uint[115] 32) function pcg_setseq_32_rxs_m_xs_32_rng[313063].srandom[312963](arg _mt[313067]:_MT[238], arg this[313065]:pcg_setseq_32_rxs_m_xs_32_rng[313063], arg seed[312960] :
  (312959 call uint[115] 32), arg inc[312969] :
  (312968 call uint[115] 32)) : _unknown[51] "inline" "method" "primary method"
  {
    (312977 call = state(312975 call + inc seed))
    (312985 call pcg_setseq_32_step_r state inc)
  } function pcg_setseq_32_rxs_m_xs_32_rng[313063].random[312998](arg _mt[313071]:_MT[238], arg this[313069]:pcg_setseq_32_rxs_m_xs_32_rng[313063], arg inc[312995] :
  (312994 call uint[115] 32)) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      const oldstate[313009] "const" state(313007 call uint[115] 32)
      (313012 'end of statement')
    }
    (313018 call pcg_setseq_32_step_r state inc)
    (313024 return(313023 call pcg_output_rxs_m_xs_32_32 oldstate))
  }
  { scopeless type
    (313003 call uint[115] 32)
  } function pcg_setseq_32_rxs_m_xs_32_rng[313063].advance[313038](arg _mt[313075]:_MT[238], arg this[313073]:pcg_setseq_32_rxs_m_xs_32_rng[313063], arg inc[313035] :
  (313034 call uint[115] 32), arg delta[313044] :
  (313043 call uint[115] 32)) : _unknown[51] "inline" "method" "primary method"
  {
    (313056 call = state(313055 call pcg_advance_lcg 32 state delta PCG_DEFAULT_MULTIPLIER_32 inc))
  }
  type pcg_setseq_16_rxs_m_xs_16_rng[313196] unknown state[313083](313082 call uint[115] 16) function pcg_setseq_16_rxs_m_xs_16_rng[313196].srandom[313096](arg _mt[313200]:_MT[238], arg this[313198]:pcg_setseq_16_rxs_m_xs_16_rng[313196], arg seed[313093] :
  (313092 call uint[115] 16), arg inc[313102] :
  (313101 call uint[115] 16)) : _unknown[51] "inline" "method" "primary method"
  {
    (313110 call = state(313108 call + inc seed))
    (313118 call pcg_setseq_16_step_r state inc)
  } function pcg_setseq_16_rxs_m_xs_16_rng[313196].random[313131](arg _mt[313204]:_MT[238], arg this[313202]:pcg_setseq_16_rxs_m_xs_16_rng[313196], arg inc[313128] :
  (313127 call uint[115] 16)) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      const oldstate[313142] "const" state(313140 call uint[115] 16)
      (313145 'end of statement')
    }
    (313151 call pcg_setseq_16_step_r state inc)
    (313157 return(313156 call pcg_output_rxs_m_xs_16_16 oldstate))
  }
  { scopeless type
    (313136 call uint[115] 16)
  } function pcg_setseq_16_rxs_m_xs_16_rng[313196].advance[313171](arg _mt[313208]:_MT[238], arg this[313206]:pcg_setseq_16_rxs_m_xs_16_rng[313196], arg inc[313168] :
  (313167 call uint[115] 16), arg delta[313177] :
  (313176 call uint[115] 16)) : _unknown[51] "inline" "method" "primary method"
  {
    (313189 call = state(313188 call pcg_advance_lcg 16 state delta PCG_DEFAULT_MULTIPLIER_16 inc))
  }
  type pcg_setseq_8_rxs_m_xs_8_rng[313329] unknown state[313216](313215 call uint[115] 8) function pcg_setseq_8_rxs_m_xs_8_rng[313329].srandom[313229](arg _mt[313333]:_MT[238], arg this[313331]:pcg_setseq_8_rxs_m_xs_8_rng[313329], arg seed[313226] :
  (313225 call uint[115] 8), arg inc[313235] :
  (313234 call uint[115] 8)) : _unknown[51] "inline" "method" "primary method"
  {
    (313243 call = state(313241 call + inc seed))
    (313251 call pcg_setseq_8_step_r state inc)
  } function pcg_setseq_8_rxs_m_xs_8_rng[313329].random[313264](arg _mt[313337]:_MT[238], arg this[313335]:pcg_setseq_8_rxs_m_xs_8_rng[313329], arg inc[313261] :
  (313260 call uint[115] 8)) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      const oldstate[313275] "const" state(313273 call uint[115] 8)
      (313278 'end of statement')
    }
    (313284 call pcg_setseq_8_step_r state inc)
    (313290 return(313289 call pcg_output_rxs_m_xs_8_8 oldstate))
  }
  { scopeless type
    (313269 call uint[115] 8)
  } function pcg_setseq_8_rxs_m_xs_8_rng[313329].advance[313304](arg _mt[313341]:_MT[238], arg this[313339]:pcg_setseq_8_rxs_m_xs_8_rng[313329], arg inc[313301] :
  (313300 call uint[115] 8), arg delta[313310] :
  (313309 call uint[115] 8)) : _unknown[51] "inline" "method" "primary method"
  {
    (313322 call = state(313321 call pcg_advance_lcg 8 state delta PCG_DEFAULT_MULTIPLIER_8 inc))
  }
  function uint_with_bits[313348](param arg nbits[313346]:_any[178](?)) type : _unknown[51] "private"
  {
    if(313398 call _cond_test(313352 call <= nbits 8))
    {
      { scopeless
        (313358 return(313357 call uint[115] 8))
      }
    }
    {
      { scopeless
        if(313392 call _cond_test(313362 call <= nbits 16))
        {
          { scopeless
            (313368 return(313367 call uint[115] 16))
          }
        }
        {
          { scopeless
            if(313386 call _cond_test(313372 call <= nbits 32))
            {
              { scopeless
                (313378 return(313377 call uint[115] 32))
              }
            }
            {
              { scopeless
                (313384 return(313383 call uint[115] 64))
              }
            }
          }
        }
      }
    }
  }
  function normalize[313413](arg nbits[313410] :
  int[13], arg x[313416] :
  uint[115]) : _unknown[51] "inline" "private"
  {
    { scopeless
      unknown oldx[313420] x
      (313423 'end of statement')
    }
    { scopeless
      unknown shiftamt[313429](313427 call - 64 nbits)
      (313432 'end of statement')
    }
    (313435 call <<= oldx shiftamt)
    (313442 return(313440 call >> oldx shiftamt))
  }
  function pcg_output_rxs_m_xs_N_mine[313452](arg nbits[313449] :
  int[13], arg state_in[313454]:_any[178](?)) : _unknown[51] "private"
  {
    if(313463 call _cond_test(313458 call < nbits 8))
    {
      { scopeless
        (313461 return state_in)
      }
    }
    if(313485 call _cond_test(313471 call == nbits 8))
    {
      { scopeless
        (313483 return(313482 call pcg_output_rxs_m_xs_8_8(313479 call _cast(313478 call uint[115] 8) state_in)))
      }
    }
    if(313506 call _cond_test(313492 call == nbits 16))
    {
      { scopeless
        (313504 return(313503 call pcg_output_rxs_m_xs_16_16(313500 call _cast(313499 call uint[115] 16) state_in)))
      }
    }
    if(313527 call _cond_test(313513 call == nbits 32))
    {
      { scopeless
        (313525 return(313524 call pcg_output_rxs_m_xs_32_32(313521 call _cast(313520 call uint[115] 32) state_in)))
      }
    }
    if(313548 call _cond_test(313534 call == nbits 64))
    {
      { scopeless
        (313546 return(313545 call pcg_output_rxs_m_xs_64_64(313542 call _cast(313541 call uint[115] 64) state_in)))
      }
    }
    {
      { scopeless
        unknown shiftamt[313557](313555 call - nbits 4)
        (313560 'end of statement')
      }
      { scopeless
        unknown state[313566](313564 call _cast uint[115] state_in)
        (313569 'end of statement')
      }
      { scopeless
        unknown word[313587](313585 call *(313582 call ^(313579 call >> state(313577 call +(313574 call >> state shiftamt) 2)) state) 217) uint[115]
        (313590 'end of statement')
      }
      (313597 call = word(313596 call normalize nbits word))
      (313607 return(313605 call ^(313602 call >> word shiftamt) word))
    }
  }
  type pcg_setseq_N_rxs_m_xs_N_rng[314191](?) const N[313612] "const" unknown state[313617] uint[115] function pcg_setseq_N_rxs_m_xs_N_rng[314191](?).mask_state[313623](arg _mt[314195]:_MT[238], arg this[314193]:pcg_setseq_N_rxs_m_xs_N_rng[314191](?)) : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    (313631 call = state(313630 call normalize N state))
  } function pcg_setseq_N_rxs_m_xs_N_rng[314191](?).srandom[313643](arg _mt[314199]:_MT[238], arg this[314197]:pcg_setseq_N_rxs_m_xs_N_rng[314191](?), arg seed[313640] :
  uint[115], arg inc[313646] :
  uint[115]) : _unknown[51] "inline" "method" "primary method"
  {
    (313654 call = state(313652 call + inc seed))
    if(313782 call _cond_test(313660 call <= N 8))
    {
      { scopeless
        unknown tmpstate[313669](313667 call _cast(313666 call uint[115] 8) state)
        (313672 'end of statement')
      }
      (313684 call pcg_setseq_8_step_r tmpstate(313682 call _cast(313681 call uint[115] 8) inc))
      (313688 call = state tmpstate)
    }
    {
      { scopeless
        if(313777 call _cond_test(313693 call <= N 16))
        {
          { scopeless
            unknown tmpstate[313702](313700 call _cast(313699 call uint[115] 16) state)
            (313705 'end of statement')
          }
          (313717 call pcg_setseq_16_step_r tmpstate(313715 call _cast(313714 call uint[115] 16) inc))
          (313721 call = state tmpstate)
        }
        {
          { scopeless
            if(313772 call _cond_test(313726 call <= N 32))
            {
              { scopeless
                unknown tmpstate[313735](313733 call _cast(313732 call uint[115] 32) state)
                (313738 'end of statement')
              }
              (313750 call pcg_setseq_32_step_r tmpstate(313748 call _cast(313747 call uint[115] 32) inc))
              (313754 call = state tmpstate)
            }
            {
              { scopeless
                if(313768 call _cond_test(313759 call <= N 64))
                {
                  (313765 call pcg_setseq_64_step_r state inc)
                }
              }
            }
          }
        }
      }
    }
    (313789 call mask_state)
  } function pcg_setseq_N_rxs_m_xs_N_rng[314191](?).random[313799](arg _mt[314203]:_MT[238], arg this[314201]:pcg_setseq_N_rxs_m_xs_N_rng[314191](?), arg inc[313796] :
  uint[115]) : _unknown[51] "inline" "method" "primary method"
  {
    if(314006 call _cond_test(313804 call <= N 8))
    {
      { scopeless
        unknown tmpstate[313813](313811 call _cast(313810 call uint[115] 8) state)
        (313816 'end of statement')
      }
      { scopeless
        unknown oldstate[313819] tmpstate
        (313822 'end of statement')
      }
      (313833 call pcg_setseq_8_step_r tmpstate(313831 call _cast(313830 call uint[115] 8) inc))
      (313837 call = state tmpstate)
      (313842 call mask_state)
      (313853 return(313852 call normalize N(313851 call pcg_output_rxs_m_xs_N_mine N oldstate)))
    }
    {
      { scopeless
        if(314001 call _cond_test(313857 call <= N 16))
        {
          { scopeless
            unknown tmpstate[313866](313864 call _cast(313863 call uint[115] 16) state)
            (313869 'end of statement')
          }
          { scopeless
            unknown oldstate[313872] tmpstate
            (313875 'end of statement')
          }
          (313886 call pcg_setseq_16_step_r tmpstate(313884 call _cast(313883 call uint[115] 16) inc))
          (313890 call = state tmpstate)
          (313895 call mask_state)
          (313906 return(313905 call normalize N(313904 call pcg_output_rxs_m_xs_N_mine N oldstate)))
        }
        {
          { scopeless
            if(313996 call _cond_test(313910 call <= N 32))
            {
              { scopeless
                unknown tmpstate[313919](313917 call _cast(313916 call uint[115] 32) state)
                (313922 'end of statement')
              }
              { scopeless
                unknown oldstate[313925] tmpstate
                (313928 'end of statement')
              }
              (313939 call pcg_setseq_32_step_r tmpstate(313937 call _cast(313936 call uint[115] 32) inc))
              (313943 call = state tmpstate)
              (313948 call mask_state)
              (313959 return(313958 call normalize N(313957 call pcg_output_rxs_m_xs_N_mine N oldstate)))
            }
            {
              { scopeless
                if(313992 call _cond_test(313963 call <= N 64))
                {
                  { scopeless
                    unknown oldstate[313966] state
                    (313969 'end of statement')
                  }
                  (313975 call pcg_setseq_64_step_r state inc)
                  (313979 call mask_state)
                  (313990 return(313989 call normalize N(313988 call pcg_output_rxs_m_xs_N_mine N oldstate)))
                }
              }
            }
          }
        }
      }
    }
    (314013 return 0)
  }
  { scopeless type
    uint[115]
  } function pcg_setseq_N_rxs_m_xs_N_rng[314191](?).advance[314024](arg _mt[314207]:_MT[238], arg this[314205]:pcg_setseq_N_rxs_m_xs_N_rng[314191](?), arg inc[314021] :
  uint[115], arg delta[314027] :
  uint[115]) : _unknown[51] "inline" "method" "primary method"
  {
    if(314182 call _cond_test(314032 call <= N 8))
    {
      (314061 call = state(314060 call pcg_advance_lcg 8(314043 call _cast(314042 call uint[115] 8) state)(314050 call _cast(314049 call uint[115] 8) delta) PCG_DEFAULT_MULTIPLIER_8(314058 call _cast(314057 call uint[115] 8) inc)))
      (314067 call mask_state)
    }
    {
      { scopeless
        if(314177 call _cond_test(314071 call <= N 16))
        {
          (314100 call = state(314099 call pcg_advance_lcg 16(314082 call _cast(314081 call uint[115] 16) state)(314089 call _cast(314088 call uint[115] 16) delta) PCG_DEFAULT_MULTIPLIER_16(314097 call _cast(314096 call uint[115] 16) inc)))
          (314106 call mask_state)
        }
        {
          { scopeless
            if(314172 call _cond_test(314110 call <= N 32))
            {
              (314139 call = state(314138 call pcg_advance_lcg 32(314121 call _cast(314120 call uint[115] 32) state)(314128 call _cast(314127 call uint[115] 32) delta) PCG_DEFAULT_MULTIPLIER_32(314136 call _cast(314135 call uint[115] 32) inc)))
              (314145 call mask_state)
            }
            {
              { scopeless
                if(314168 call _cond_test(314149 call <= N 64))
                {
                  (314160 call = state(314159 call pcg_advance_lcg 64 state delta PCG_DEFAULT_MULTIPLIER_64 inc))
                  (314166 call mask_state)
                }
              }
            }
          }
        }
      }
    }
  }
  function pcg_getvalid_inc[314219](arg initseq[314216] :
  (314215 call uint[115] 64)) : _unknown[51] "inline"
  {
    { scopeless
      (314232 return(314230 call |(314227 call << initseq 1) 1))
    }
  }
  { scopeless type
    (314224 call uint[115] 64)
  }
  function pcg_getvalid_inc[314247](param arg initseq[314244] :
  (314243 call uint[115] 64)) param : _unknown[51] "inline" "no doc"
  {
    { scopeless
      (314256 return(314254 call |(314251 call << initseq 1) 1))
    }
  }
  function pcg_advance_lcg[314265](param arg bits[314263]:_any[178](?), arg state[314271] :
  (314270 call uint_with_bits bits), in arg delta[314278] :
  (314277 call uint_with_bits bits), in arg cur_mult[314285] :
  (314284 call uint_with_bits bits), in arg cur_plus[314292] :
  (314291 call uint_with_bits bits)) : _unknown[51] "private"
  {
    { scopeless
      unknown acc_mult[314304] 1(314302 call uint_with_bits bits)
      (314307 'end of statement')
    }
    { scopeless
      unknown acc_plus[314314] 0(314312 call uint_with_bits bits)
      (314317 'end of statement')
    }
    {
      unknown tmp[314372] "temp"
      (314396 'move' tmp[314372](314391 call _cond_test(314393 call > delta 0)))
      WhileDo[314377]
      {
        {
          if(314346 call _cond_test(314327 call !=(314324 call & delta 1) 0))
          {
            (314331 call *= acc_mult cur_mult)
            (314343 call = acc_plus(314341 call +(314338 call * acc_plus cur_mult) cur_plus))
          }
          (314359 call = cur_plus(314357 call *(314354 call + cur_mult 1) cur_plus))
          (314364 call *= cur_mult cur_mult)
          (314369 call /= delta 2)
        }
        label _continueLabel[314375]
        (314386 'move' tmp[314372](314381 call _cond_test(314383 call > delta 0)))
        tmp[314372]
      }
      label _breakLabel[314376]
    }
    (314406 return(314404 call +(314401 call * acc_mult state) acc_plus))
  }
  { scopeless type
    (314298 call uint_with_bits bits)
  }
}