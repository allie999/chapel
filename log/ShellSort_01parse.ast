AST dump for ShellSort after pass parse.
Module use list: 

{
  (352946 'use' ChapelStandard)
  (273434 'use' Sort)
  function shellSort[273449](arg Data[273446] :
  (273444 call chpl__buildArrayRuntimeType unknown Dom[273439] unknown eltType[273442]), arg comparator[273454] :
  unknown rec[273451] =
  defaultComparator, arg start[273462] =
  (273459 call . Dom c"alignedLow"), arg end[273469] =
  (273466 call . Dom c"alignedHigh")) : _unknown[51]
  {
    (273476 call chpl_check_comparator comparator eltType)
    if(273507 call _cond_test(273484 call !=(273480 call . Dom c"rank") 1))
    {
      { scopeless
        (273505 call compilerError "shellSort() requires 1-D array")
      }
    }
    if(273537 call _cond_test(273513 call . Dom c"stridable"))
    {
      { scopeless
        (273535 call compilerError "shellSort() requires an array over a non-stridable domain")
      }
    }
    { scopeless
      unknown n[273549](273547 call -(273544 call + 1 end) start)
      (273552 'end of statement')
    }
    { scopeless
      unknown js[273553] int[13]
      unknown hs[273557](273561 'typeof' js)
      (273562 'end of statement')
    }
    { scopeless
      unknown v[273563](273567 call . Data c"eltType")
      unknown tmp[273570](273574 'typeof' v)
      (273575 'end of statement')
    }
    { scopeless
      const incs[273593] "const"(273591 call _build_tuple 701 301 132 57 23 10 4 1)
      (273596 'end of statement')
    }
    {
      unknown _indexOfInterest[273771] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[273772] "expr temp" "temp"
      (273781 'move' _iterator[273772](273779 call _getIterator incs))
      Defer
      {
        {
          (273797 call _freeIterator _iterator[273772])
        }
      }
      { scopeless type
        (273786 'move' _indexOfInterest[273771](273783 call iteratorIndex _iterator[273772]))
      }
      ForLoop[273773]
      {
        unknown h[273790] "index var" "insert auto destroy"
        (273792 'move' h[273790] _indexOfInterest[273771])
        {
          (273604 call = hs(273602 call + h start))
          {
            unknown _indexOfInterest[273733] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[273734] "expr temp" "temp"
            (273743 'move' _iterator[273734](273741 call _getIterator(273748 call chpl_direct_range_iter hs end 1)))
            Defer
            {
              {
                (273764 call _freeIterator _iterator[273734])
              }
            }
            { scopeless type
              (273753 'move' _indexOfInterest[273733](273750 call iteratorIndex _iterator[273734]))
            }
            ForLoop[273735]
            {
              unknown is[273757] "index var" "insert auto destroy"
              (273759 'move' is[273757] _indexOfInterest[273733])
              {
                (273618 call = v(273617 call Data is))
                (273624 call = js is)
                {
                  unknown tmp[273668] "temp"
                  (273722 'move' tmp[273668](273702 call _cond_test(273704 call &&(273706 call >= js hs)(273710 call <(273712 call chpl_compare v(273715 call Data(273717 call - js h)) comparator) 0))))
                  WhileDo[273673]
                  {
                    {
                      (273659 call =(273651 call Data js)(273658 call Data(273655 call - js h)))
                      (273665 call -= js h)
                    }
                    label _continueLabel[273671]
                    (273697 'move' tmp[273668](273677 call _cond_test(273679 call &&(273681 call >= js hs)(273685 call <(273687 call chpl_compare v(273690 call Data(273692 call - js h)) comparator) 0))))
                    tmp[273668]
                  }
                  label _breakLabel[273672]
                }
                (273730 call =(273728 call Data js) v)
              }
              label _continueLabel[273738]
              _indexOfInterest[273733]
              _iterator[273734]
            }
            label _breakLabel[273739]
          }
        }
        label _continueLabel[273776]
        _indexOfInterest[273771]
        _iterator[273772]
      }
      label _breakLabel[273777]
    }
  }
}