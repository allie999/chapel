AST dump for ChapelDistribution after pass createTaskFunctions.
Module use list: ChapelArray ChapelRange ChapelLocks ChapelHashtable Sort 

{
  function chpl__init_ChapelDistribution[416042]() : void[4] "insert line file info" "module init"
  {
    (520463 return _void[55])
  }
  function BaseDist[145934].deinit[145468](arg _mt[145938]:_MT[238], arg this[145936]:BaseDist[145934]) : _unknown[51] "destructor" "method" "primary method" "no return value for void"
  {
    (519739 return _void[55])
  }
  function BaseDist[145934].remove[145475](arg _mt[145942]:_MT[238], arg this[145940]:BaseDist[145934]) : _unknown[51] "dont disable remote value forwarding" "method" "primary method"
  {
    unknown ret[519743] "RVV" "temp"
    unknown free_dist[145481] "dead at end of block" "insert auto destroy"
    (543581 'init var' free_dist[145481] 0)
    (145484 'end of statement')
    unknown call_tmp[667465] "expr temp" "maybe param" "maybe type" "temp"
    (667468 'move' call_tmp[667465](145488 call(385429 call (partial) dsiTrackDomains _mt[243] this[145940])))
    unknown call_tmp[667470] "expr temp" "maybe param" "maybe type" "temp"
    (667473 'move' call_tmp[667470](145559 call _cond_test call_tmp[667465]))
    if call_tmp[667470]
    {
      {
        const tmp[145544] "const" "temp"
        unknown call_tmp[667475] "expr temp" "maybe param" "maybe type" "temp"
        (667478 'move' call_tmp[667475](145541 '_wide_get_locale' this[145940]))
        (145545 'move' tmp[145544](145542 'deref' call_tmp[667475]))
        {
          unknown call_tmp[667480] "maybe param" "maybe type" "temp"
          (667483 'move' call_tmp[667480](145491 call - 1))
          unknown dom_count[145493] "dead at end of block" "insert auto destroy"
          (543583 'init var' dom_count[145493] call_tmp[667480])
          (145496 'end of statement')
          {
            unknown call_tmp[667487] "expr temp" "maybe param" "maybe type" "temp"
            (667490 'move' call_tmp[667487](360506 call _domsLock _mt[243] this[145940]))
            (145503 call(145499 call (partial) lock _mt[243] call_tmp[667487]))
            (481387 'end of statement')
            unknown call_tmp[667496] "expr temp" "maybe param" "maybe type" "temp"
            (667499 'move' call_tmp[667496](385437 call _free_when_no_doms _mt[243] this[145940]))
            (145508 call = call_tmp[667496] 1)
            (481388 'end of statement')
            unknown call_tmp[667503] "expr temp" "maybe param" "maybe type" "temp"
            (667506 'move' call_tmp[667503](360511 call _doms _mt[243] this[145940]))
            unknown call_tmp[667510] "expr temp" "maybe param" "maybe type" "temp"
            (667513 'move' call_tmp[667510](145513 call size _mt[243] call_tmp[667503]))
            (145516 call = dom_count[145493] call_tmp[667510])
            (481389 'end of statement' dom_count[145493])
            unknown call_tmp[667517] "expr temp" "maybe param" "maybe type" "temp"
            (667520 'move' call_tmp[667517](360516 call _domsLock _mt[243] this[145940]))
            (145524 call(145520 call (partial) unlock _mt[243] call_tmp[667517]))
          }
          unknown call_tmp[667524] "expr temp" "maybe param" "maybe type" "temp"
          (667527 'move' call_tmp[667524](145529 call == dom_count[145493] 0))
          unknown call_tmp[667529] "expr temp" "maybe param" "maybe type" "temp"
          (667532 'move' call_tmp[667529](145536 call _cond_test call_tmp[667524]))
          if call_tmp[667529]
          {
            (145533 call = free_dist[145481] 1)
            (481392 'end of statement' free_dist[145481])
          }
        }
        (145548 'elided on block' 0 tmp[145544])
      }
    }
    {
      (145555 call = free_dist[145481] 1)
      (481394 'end of statement' free_dist[145481])
    }
    unknown call_tmp[667534] "expr temp" "maybe param" "maybe type" "temp"
    (667537 'move' call_tmp[667534](145573 call _cond_test free_dist[145481]))
    if call_tmp[667534]
    {
      unknown call_tmp[667539] "expr temp" "maybe param" "maybe type" "temp"
      (667542 'move' call_tmp[667539](145567 call _to_unmanaged this[145940]))
      (519749 'move' ret[519743](519748 'coerce' call_tmp[667539] unmanaged BaseDist?[415517]))
      gotoReturn _end_remove[519741] _end_remove[519741]
    }
    {
      (519755 'move' ret[519743](519754 'coerce' nil[44] unmanaged BaseDist?[415517]))
      gotoReturn _end_remove[519741] _end_remove[519741]
    }
    label _end_remove[519741]
    (519745 return ret[519743])
  }
  { scopeless type
    unmanaged BaseDist?[415517]
  }
  function BaseDist[145934].remove_dom[145589](arg _mt[145946]:_MT[238], arg this[145944]:BaseDist[145934], arg x[145586]:unmanaged BaseDom[415463]) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ret[519761] "RVV" "temp"
    unknown call_tmp[667544] "maybe param" "maybe type" "temp"
    (667547 'move' call_tmp[667544](145593 call - 1))
    unknown count[145595] "dead at end of block" "insert auto destroy"
    (543585 'init var' count[145595] call_tmp[667544])
    (145598 'end of statement')
    {
      const tmp[145662] "const" "temp"
      unknown call_tmp[667549] "expr temp" "maybe param" "maybe type" "temp"
      (667552 'move' call_tmp[667549](145659 '_wide_get_locale' this[145944]))
      (145663 'move' tmp[145662](145660 'deref' call_tmp[667549]))
      {
        unknown call_tmp[667554] "maybe param" "maybe type" "temp"
        (667557 'move' call_tmp[667554](145602 call - 1))
        unknown cnt[145604] "dead at end of block" "insert auto destroy"
        (543587 'init var' cnt[145604] call_tmp[667554])
        (145607 'end of statement')
        {
          unknown call_tmp[667561] "expr temp" "maybe param" "maybe type" "temp"
          (667564 'move' call_tmp[667561](360521 call _domsLock _mt[243] this[145944]))
          (145614 call(145610 call (partial) lock _mt[243] call_tmp[667561]))
          (481398 'end of statement')
          unknown call_tmp[667570] "expr temp" "maybe param" "maybe type" "temp"
          (667573 'move' call_tmp[667570](360526 call _doms _mt[243] this[145944]))
          (145623 call(145618 call (partial) remove _mt[243] call_tmp[667570]) x[145586])
          (481399 'end of statement')
          unknown call_tmp[667579] "expr temp" "maybe param" "maybe type" "temp"
          (667582 'move' call_tmp[667579](360531 call _doms _mt[243] this[145944]))
          unknown call_tmp[667586] "expr temp" "maybe param" "maybe type" "temp"
          (667589 'move' call_tmp[667586](145627 call size _mt[243] call_tmp[667579]))
          (145630 call = cnt[145604] call_tmp[667586])
          (481400 'end of statement' cnt[145604])
          unknown call_tmp[667593] "expr temp" "maybe param" "maybe type" "temp"
          (667596 'move' call_tmp[667593](385452 call _free_when_no_doms _mt[243] this[145944]))
          unknown call_tmp[667598] "expr temp" "maybe param" "maybe type" "temp"
          (667601 'move' call_tmp[667598](145634 call ! call_tmp[667593]))
          unknown call_tmp[667603] "expr temp" "maybe param" "maybe type" "temp"
          (667606 'move' call_tmp[667603](145641 call _cond_test call_tmp[667598]))
          if call_tmp[667603]
          {
            (145638 call += cnt[145604] 1)
            (481402 'end of statement' cnt[145604])
          }
          unknown call_tmp[667610] "expr temp" "maybe param" "maybe type" "temp"
          (667613 'move' call_tmp[667610](360536 call _domsLock _mt[243] this[145944]))
          (145651 call(145647 call (partial) unlock _mt[243] call_tmp[667610]))
        }
        (145656 call = count[145595] cnt[145604])
        (481405 'end of statement' count[145595] cnt[145604])
      }
      (145666 'elided on block' 0 tmp[145662])
    }
    unknown call_tmp[667617] "expr temp" "maybe param" "maybe type" "temp"
    (667620 'move' call_tmp[667617](145672 call == count[145595] 0))
    (519767 'move' ret[519761](519766 'coerce' call_tmp[667617] bool[10]))
    gotoReturn _end_remove_dom[519759] _end_remove_dom[519759]
    (481408 'end of statement' count[145595])
    label _end_remove_dom[519759]
    (519763 return ret[519761])
  }
  { scopeless type
    bool[10]
  }
  function BaseDist[145934].add_dom[145686](arg _mt[145950]:_MT[238], arg this[145948]:BaseDist[145934], arg x[145683]:unmanaged BaseDom[415463]) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {
    {
      const tmp[145715] "const" "temp"
      unknown call_tmp[667622] "expr temp" "maybe param" "maybe type" "temp"
      (667625 'move' call_tmp[667622](145712 '_wide_get_locale' this[145948]))
      (145716 'move' tmp[145715](145713 'deref' call_tmp[667622]))
      {
        unknown call_tmp[667629] "expr temp" "maybe param" "maybe type" "temp"
        (667632 'move' call_tmp[667629](360541 call _domsLock _mt[243] this[145948]))
        (145694 call(145690 call (partial) lock _mt[243] call_tmp[667629]))
        (481410 'end of statement')
        unknown call_tmp[667638] "expr temp" "maybe param" "maybe type" "temp"
        (667641 'move' call_tmp[667638](360546 call _doms _mt[243] this[145948]))
        (145703 call(145698 call (partial) add _mt[243] call_tmp[667638]) x[145683])
        (481411 'end of statement')
        unknown call_tmp[667647] "expr temp" "maybe param" "maybe type" "temp"
        (667650 'move' call_tmp[667647](360551 call _domsLock _mt[243] this[145948]))
        (145710 call(145706 call (partial) unlock _mt[243] call_tmp[667647]))
      }
      (145719 'elided on block' 0 tmp[145715])
    }
    (519771 return _void[55])
  }
  function BaseDist[145934].dsiNewRectangularDom[145732](arg _mt[145954]:_MT[238], arg this[145952]:BaseDist[145934], param arg rank[145729]:int(64)[13], arg idxType[145734]:_any[178](?), param arg stridable[145737]:bool[10], arg inds[145740]:_any[178](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (145761 call compilerError "rectangular domains not supported by this distribution")
    (519773 return _void[55])
  }
  function BaseDist[145934].dsiNewAssociativeDom[145770](arg _mt[145958]:_MT[238], arg this[145956]:BaseDist[145934], arg idxType[145768]:_any[178](?), param arg parSafe[145773]:bool[10]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (145795 call compilerError "associative domains not supported by this distribution")
    (519775 return _void[55])
  }
  function BaseDist[145934].dsiNewSparseDom[145806](arg _mt[145962]:_MT[238], arg this[145960]:BaseDist[145934], param arg rank[145803]:int(64)[13], arg idxType[145808]:_any[178](?), arg dom[145811]:_domain[125914](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (145833 call compilerError "sparse domains not supported by this distribution")
    (519777 return _void[55])
  }
  function BaseDist[145934].dsiSupportsPrivatization[145840](arg _mt[145966]:_MT[238], arg this[145964]:BaseDist[145934]) param : _unknown[51] "method" "primary method"
  {
    unknown ret[519781] "RVV" "param" "temp"
    (519786 'move' ret[519781](519785 'deref' 0))
    (519783 return ret[519781])
  }
  function BaseDist[145934].dsiRequiresPrivatization[145850](arg _mt[145970]:_MT[238], arg this[145968]:BaseDist[145934]) param : _unknown[51] "method" "primary method"
  {
    unknown ret[519790] "RVV" "param" "temp"
    (519795 'move' ret[519790](519794 'deref' 0))
    (519792 return ret[519790])
  }
  function BaseDist[145934].dsiDestroyDist[145860](arg _mt[145974]:_MT[238], arg this[145972]:BaseDist[145934]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (519797 return _void[55])
  }
  function BaseDist[145934].dsiDisplayRepresentation[145867](arg _mt[145978]:_MT[238], arg this[145976]:BaseDist[145934]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (145888 call writeln "<no way to display representation>")
    (519799 return _void[55])
  }
  function BaseDist[145934].trackDomains[145895](arg _mt[145982]:_MT[238], arg this[145980]:BaseDist[145934]) param : _unknown[51] "method" "primary method"
  {
    unknown ret[519803] "RVV" "param" "temp"
    (519808 'move' ret[519803](519807 'deref' 1))
    (519805 return ret[519803])
  }
  function BaseDist[145934].dsiTrackDomains[145905](arg _mt[145986]:_MT[238], arg this[145984]:BaseDist[145934]) : _unknown[51] "method" "primary method"
  {
    unknown ret[519812] "RVV" "temp"
    (519817 'move' ret[519812](519816 'deref' 1))
    (519814 return ret[519812])
  }
  function BaseDist[145934].singleton[145915](arg _mt[145990]:_MT[238], arg this[145988]:BaseDist[145934]) param : _unknown[51] "method" "primary method"
  {
    unknown ret[519821] "RVV" "param" "temp"
    (519826 'move' ret[519821](519825 'deref' 0))
    (519823 return ret[519821])
  }
  function BaseDist[145934].dsiIsLayout[145925](arg _mt[145994]:_MT[238], arg this[145992]:BaseDist[145934]) param : _unknown[51] "method" "primary method"
  {
    unknown ret[519830] "RVV" "param" "temp"
    (519835 'move' ret[519830](519834 'deref' 0))
    (519832 return ret[519830])
  }
  function BaseDist[145934].init[786828](arg _mt[786830]:_MT[238], arg this[786831]:BaseDist[145934], in arg _doms[786842] :
  (786845 call chpl__simpleSet[204919](?) unmanaged BaseDom[415463]) =
  _typeDefaultT[250], in arg _domsLock[786857]:chpl_LocalSpinlock[187398] =
  _typeDefaultT[250], in arg _free_when_no_doms[786870]:bool[10] =
  _typeDefaultT[250], in arg pid[786883]:int(64)[13] :
  int(64)[13] =
  nullPid[113724]) : void[4] "compiler generated" "inline" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown super_tmp[786900] "temporary of super field" "temp"
    (786902 'move' super_tmp[786900](786899 '.v' this[786831] c"super"))
    (786841 call(786839 call (partial) init _mt[243] super_tmp[786900]))
    (786935 'end of statement')
    unknown tmp[786905] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[786940] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[786952] "expr temp" "maybe param" "maybe type" "temp"
      (786955 'move' call_tmp[786952](786907 '.v' this[786831] c"super"))
      (786944 'move' call_type_tmp[786940](786910 'typeof' call_tmp[786952]))
    }
    (786911 'move' tmp[786905] call_type_tmp[786940])
    unknown call_tmp[786957] "maybe param" "maybe type" "temp"
    (786960 'move' call_tmp[786957](786916 'cast' tmp[786905] this[786831]))
    unknown chpl__thisAsParent[786913] "dead at end of block" "insert auto destroy" "temp"
    (786948 'init var' chpl__thisAsParent[786913] call_tmp[786957] tmp[786905])
    (786919 'setcid' chpl__thisAsParent[786913])
    (786921 'init field' this[786831] c"_doms" _doms[786842])
    (786936 'end of statement')
    (786924 'init field' this[786831] c"_domsLock" _domsLock[786857])
    (786927 'init field' this[786831] c"_free_when_no_doms" _free_when_no_doms[786870])
    (786937 'end of statement')
    (786930 'init field' this[786831] c"pid" pid[786883])
    (786938 'end of statement')
    (786933 'setcid' this[786831])
    (786946 return _void[55])
  }
  function BaseDist[145934].super[801240](arg _mt[801242]:_MT[238], arg this[801244]:BaseDist[145934]) : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[801254] "RVV" "temp"
    unknown call_tmp[801261] "expr temp" "maybe param" "maybe type" "temp"
    (801264 'move' call_tmp[801261](801248 '.v' this[801244] c"super"))
    (801259 'move' ret[801254](801258 'deref' call_tmp[801261]))
    (801256 return ret[801254])
  }
  function BaseDist[145934]._doms[801266](arg _mt[801268]:_MT[238], arg this[801270]:BaseDist[145934]) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[801280] "RVV" "temp"
    unknown call_tmp[801287] "expr temp" "maybe param" "maybe type" "temp"
    (801290 'move' call_tmp[801287](801274 '.' this[801270] c"_doms"))
    (801285 'move' ret[801280](801284 'addr of' call_tmp[801287]))
    (801282 return ret[801280])
  }
  function BaseDist[145934]._domsLock[801292](arg _mt[801294]:_MT[238], arg this[801296]:BaseDist[145934]) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[801306] "RVV" "temp"
    unknown call_tmp[801313] "expr temp" "maybe param" "maybe type" "temp"
    (801316 'move' call_tmp[801313](801300 '.' this[801296] c"_domsLock"))
    (801311 'move' ret[801306](801310 'addr of' call_tmp[801313]))
    (801308 return ret[801306])
  }
  function BaseDist[145934]._free_when_no_doms[801318](arg _mt[801320]:_MT[238], arg this[801322]:BaseDist[145934]) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[801332] "RVV" "temp"
    unknown call_tmp[801339] "expr temp" "maybe param" "maybe type" "temp"
    (801342 'move' call_tmp[801339](801326 '.' this[801322] c"_free_when_no_doms"))
    (801337 'move' ret[801332](801336 'addr of' call_tmp[801339]))
    (801334 return ret[801332])
  }
  function BaseDist[145934].pid[801344](arg _mt[801346]:_MT[238], arg this[801348]:BaseDist[145934]) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[801358] "RVV" "temp"
    unknown call_tmp[801365] "expr temp" "maybe param" "maybe type" "temp"
    (801368 'move' call_tmp[801365](801352 '.' this[801348] c"pid"))
    (801363 'move' ret[801358](801362 'addr of' call_tmp[801365]))
    (801360 return ret[801358])
  }
  function BaseDist[145934].writeThis[801370](arg _mt[801374]:_MT[238], arg this[801372]:BaseDist[145934], arg f[801373]:_any[178](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (801379 call writeThisDefaultImpl f[801373] this[801372])
    (801384 return _void[55])
  }
  function BaseDist[145934].readThis[801386](arg _mt[801390]:_MT[238], arg this[801388]:BaseDist[145934], arg f[801389]:_any[178](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (801394 call readThisDefaultImpl f[801389] this[801388])
    (801400 return _void[55])
  }
  type BaseDist[145934] val super[355709]:object[22] "super class" unknown _doms[145446](145445 call chpl__simpleSet[204919](?) unmanaged BaseDom[415463]) val _domsLock[145451]:chpl_LocalSpinlock[187398] chpl_LocalSpinlock[187398] val _free_when_no_doms[145456]:bool[10] bool[10] val pid[145462]:int(64)[13] nullPid[113724] int(64)[13]
  type unmanaged BaseDist[415526]
  type unmanaged BaseDist?[415517]
  type BaseDist?[415514](?)
  type BaseDist[382395](?)
  function BaseDom[146729].init[146030](arg _mt[146733]:_MT[238], arg this[146731]:BaseDom[146729]) : void[4] "inline" "method" "primary method" "no return value for void"
  {
    unknown super_tmp[461745] "temporary of super field" "temp"
    (461753 'move' super_tmp[461745](461746 '.v' this[146731] c"super"))
    (461749 call init _mt[243] super_tmp[461745])
    (481423 'end of statement')
    unknown tmp[461680] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[492379] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[667654] "expr temp" "maybe param" "maybe type" "temp"
      (667657 'move' call_tmp[667654](461682 '.v' this[146731] c"super"))
      (492383 'move' call_type_tmp[492379](461685 'typeof' call_tmp[667654]))
    }
    (461686 'move' tmp[461680] call_type_tmp[492379])
    unknown call_tmp[667659] "maybe param" "maybe type" "temp"
    (667662 'move' call_tmp[667659](461691 'cast' tmp[461680] this[146731]))
    unknown chpl__thisAsParent[461688] "dead at end of block" "insert auto destroy" "temp"
    (543589 'init var' chpl__thisAsParent[461688] call_tmp[667659] tmp[461680])
    (461694 'setcid' chpl__thisAsParent[461688])
    (481424 'end of statement')
    unknown tmp[461697] "temp"
    unknown call_tmp[667664] "expr temp" "maybe param" "maybe type" "temp"
    (667667 'move' call_tmp[667664](461700 call chpl__simpleSet[204919](?) unmanaged BaseArr[415511]))
    (461702 'default init var' tmp[461697] call_tmp[667664])
    (461704 '.=' this[146731] c"_arrs" tmp[461697])
    (481425 'end of statement')
    val tmp[461708]:int(64)[13] "temp"
    (461711 'default init var' tmp[461708] int(64)[13])
    (461713 '.=' this[146731] c"_arrs_containing_dom" tmp[461708])
    (481426 'end of statement')
    val tmp[461717]:chpl_LocalSpinlock[187398] "temp"
    (461720 'default init var' tmp[461717] chpl_LocalSpinlock[187398])
    (461722 '.=' this[146731] c"_arrsLock" tmp[461717])
    (481427 'end of statement')
    val tmp[461726]:bool[10] "temp"
    (461729 'default init var' tmp[461726] bool[10])
    (461731 '.=' this[146731] c"_free_when_no_arrs" tmp[461726])
    (481428 'end of statement')
    unknown tmp[461736] "temp"
    (461739 'init var' tmp[461736] nullPid[113724] int(64)[13])
    (461741 'init field' this[146731] c"pid" tmp[461736])
    (481429 'end of statement')
    (461756 'setcid' this[146731])
    (519837 return _void[55])
  }
  function BaseDom[146729].deinit[146037](arg _mt[146737]:_MT[238], arg this[146735]:BaseDom[146729]) : _unknown[51] "destructor" "method" "primary method" "no return value for void"
  {
    (519839 return _void[55])
  }
  function BaseDom[146729].dsiMyDist[146044](arg _mt[146741]:_MT[238], arg this[146739]:BaseDom[146729]) : _unknown[51] "method" "primary method"
  {
    unknown ret[519843] "RVV" "temp"
    (146067 call halt "internal error: dsiMyDist is not implemented")
    (481431 'end of statement')
    unknown ret[146072] "dead at end of block" "insert auto destroy" "unsafe"
    (543591 'default init var' ret[146072] unmanaged BaseDist[415526])
    (146075 'end of statement')
    (519849 'move' ret[519843](519848 'coerce' ret[146072] unmanaged BaseDist[415526]))
    gotoReturn _end_dsiMyDist[519841] _end_dsiMyDist[519841]
    (481432 'end of statement' ret[146072])
    label _end_dsiMyDist[519841]
    (519845 return ret[519843])
  }
  { scopeless type
    unmanaged BaseDist[415526]
  }
  function BaseDom[146729].remove[146084](arg _mt[146745]:_MT[238], arg this[146743]:BaseDom[146729]) : _unknown[51] "dont disable remote value forwarding" "method" "primary method"
  {
    unknown ret[519855] "RVV" "temp"
    unknown call_tmp[667671] "expr temp" "maybe param" "maybe type" "temp"
    (667674 'move' call_tmp[667671](146098 call(385475 call (partial) dsiMyDist _mt[243] this[146743])))
    unknown call_tmp[667678] "expr temp" "maybe param" "maybe type" "temp"
    (667681 'move' call_tmp[667678](146105 call(146101 call (partial) dsiTrackDomains _mt[243] call_tmp[667671])))
    unknown call_tmp[667685] "expr temp" "maybe param" "maybe type" "temp"
    (667688 'move' call_tmp[667685](146108 call(385481 call (partial) dsiLinksDistribution _mt[243] this[146743])))
    unknown call_tmp[667690] "expr temp" "maybe param" "maybe type" "temp"
    (667693 'move' call_tmp[667690](146109 call == call_tmp[667678] call_tmp[667685]))
    (146112 call assert call_tmp[667690])
    (481434 'end of statement')
    unknown ret_dom[146119] "dead at end of block" "insert auto destroy"
    (543593 'init var' ret_dom[146119] nil[44] unmanaged BaseDom?[415523])
    (146122 'end of statement')
    unknown ret_dist[146127] "dead at end of block" "insert auto destroy"
    (543595 'init var' ret_dist[146127] nil[44] unmanaged BaseDist?[415517])
    (146130 'end of statement')
    unknown call_tmp[667697] "maybe param" "maybe type" "temp"
    (667700 'move' call_tmp[667697](146133 call(385487 call (partial) dsiMyDist _mt[243] this[146743])))
    unknown dist[146134] "dead at end of block" "insert auto destroy"
    (543597 'init var' dist[146134] call_tmp[667697])
    (146137 'end of statement')
    unknown free_dom[146139] "dead at end of block" "insert auto destroy"
    (543599 'init var' free_dom[146139] 0)
    (146142 'end of statement')
    unknown remove_dist[146144] "dead at end of block" "insert auto destroy"
    (543601 'init var' remove_dist[146144] 0)
    (146147 'end of statement')
    {
      const tmp[146230] "const" "temp"
      unknown call_tmp[667702] "expr temp" "maybe param" "maybe type" "temp"
      (667705 'move' call_tmp[667702](146227 '_wide_get_locale' this[146743]))
      (146231 'move' tmp[146230](146228 'deref' call_tmp[667702]))
      {
        unknown arr_count[146150] "dead at end of block" "insert auto destroy"
        (543603 'init var' arr_count[146150] 0)
        (146153 'end of statement')
        {
          unknown call_tmp[667709] "expr temp" "maybe param" "maybe type" "temp"
          (667712 'move' call_tmp[667709](360558 call _arrsLock _mt[243] this[146743]))
          (146160 call(146156 call (partial) lock _mt[243] call_tmp[667709]))
          (481435 'end of statement')
          unknown call_tmp[667718] "expr temp" "maybe param" "maybe type" "temp"
          (667721 'move' call_tmp[667718](360563 call _arrs _mt[243] this[146743]))
          unknown call_tmp[667725] "expr temp" "maybe param" "maybe type" "temp"
          (667728 'move' call_tmp[667725](146165 call size _mt[243] call_tmp[667718]))
          (146168 call = arr_count[146150] call_tmp[667725])
          (481436 'end of statement' arr_count[146150])
          unknown call_tmp[667732] "expr temp" "maybe param" "maybe type" "temp"
          (667735 'move' call_tmp[667732](385497 call _arrs_containing_dom _mt[243] this[146743]))
          (146173 call += arr_count[146150] call_tmp[667732])
          (481438 'end of statement' arr_count[146150])
          unknown call_tmp[667739] "expr temp" "maybe param" "maybe type" "temp"
          (667742 'move' call_tmp[667739](385502 call _free_when_no_arrs _mt[243] this[146743]))
          (146178 call = call_tmp[667739] 1)
          (481440 'end of statement')
          unknown call_tmp[667746] "expr temp" "maybe param" "maybe type" "temp"
          (667749 'move' call_tmp[667746](360568 call _arrsLock _mt[243] this[146743]))
          (146186 call(146182 call (partial) unlock _mt[243] call_tmp[667746]))
        }
        unknown call_tmp[667753] "expr temp" "maybe param" "maybe type" "temp"
        (667756 'move' call_tmp[667753](146191 call == arr_count[146150] 0))
        unknown call_tmp[667758] "expr temp" "maybe param" "maybe type" "temp"
        (667761 'move' call_tmp[667758](146223 call _cond_test call_tmp[667753]))
        if call_tmp[667758]
        {
          (146195 call = free_dom[146139] 1)
          (481442 'end of statement' free_dom[146139])
          unknown call_tmp[667765] "expr temp" "maybe param" "maybe type" "temp"
          (667768 'move' call_tmp[667765](146201 call(385508 call (partial) dsiLinksDistribution _mt[243] this[146743])))
          unknown call_tmp[667770] "expr temp" "maybe param" "maybe type" "temp"
          (667773 'move' call_tmp[667770](146219 call _cond_test call_tmp[667765]))
          if call_tmp[667770]
          {
            unknown call_tmp[667777] "expr temp" "maybe param" "maybe type" "temp"
            (667780 'move' call_tmp[667777](146212 call _to_unmanaged this[146743]))
            unknown call_tmp[667782] "expr temp" "maybe param" "maybe type" "temp"
            (667785 'move' call_tmp[667782](146214 call(146206 call (partial) remove_dom _mt[243] dist[146134]) call_tmp[667777]))
            (146215 call = remove_dist[146144] call_tmp[667782])
            (481444 'end of statement' remove_dist[146144] dist[146134])
          }
        }
      }
      (146234 'elided on block' 0 tmp[146230])
    }
    unknown call_tmp[667787] "expr temp" "maybe param" "maybe type" "temp"
    (667790 'move' call_tmp[667787](146247 call _cond_test free_dom[146139]))
    if call_tmp[667787]
    {
      unknown call_tmp[667792] "expr temp" "maybe param" "maybe type" "temp"
      (667795 'move' call_tmp[667792](146243 call _to_unmanaged this[146743]))
      (146244 call = ret_dom[146119] call_tmp[667792])
      (481447 'end of statement' ret_dom[146119])
    }
    unknown call_tmp[667797] "expr temp" "maybe param" "maybe type" "temp"
    (667800 'move' call_tmp[667797](146258 call _cond_test remove_dist[146144]))
    if call_tmp[667797]
    {
      (146255 call = ret_dist[146127] dist[146134])
      (481449 'end of statement' ret_dist[146127] dist[146134])
    }
    unknown call_tmp[667802] "expr temp" "maybe param" "maybe type" "temp"
    (667805 'move' call_tmp[667802](146266 call _build_tuple ret_dom[146119] ret_dist[146127]))
    unknown call_tmp[667807] "expr temp" "maybe param" "maybe type" "temp"
    (667810 'move' call_tmp[667807](519860 call _build_tuple unmanaged BaseDom?[415523] unmanaged BaseDist?[415517]))
    (519864 'move' ret[519855](519863 'coerce' call_tmp[667802] call_tmp[667807]))
    gotoReturn _end_remove[519853] _end_remove[519853]
    (481452 'end of statement' ret_dom[146119] ret_dist[146127])
    label _end_remove[519853]
    (519857 return ret[519855])
  }
  { scopeless type
    (146093 call _build_tuple unmanaged BaseDom?[415523] unmanaged BaseDist?[415517])
  }
  function BaseDom[146729].remove_arr[146280](arg _mt[146749]:_MT[238], arg this[146747]:BaseDom[146729], arg x[146277]:unmanaged BaseArr[415511], param arg rmFromList[146283] :
  1 =
  1) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ret[519870] "RVV" "temp"
    unknown call_tmp[667812] "maybe param" "maybe type" "temp"
    (667815 'move' call_tmp[667812](146288 call - 1))
    unknown count[146290] "dead at end of block" "insert auto destroy"
    (543605 'init var' count[146290] call_tmp[667812])
    (146293 'end of statement')
    {
      const tmp[146374] "const" "temp"
      unknown call_tmp[667817] "expr temp" "maybe param" "maybe type" "temp"
      (667820 'move' call_tmp[667817](146371 '_wide_get_locale' this[146747]))
      (146375 'move' tmp[146374](146372 'deref' call_tmp[667817]))
      {
        unknown call_tmp[667822] "maybe param" "maybe type" "temp"
        (667825 'move' call_tmp[667822](146297 call - 1))
        unknown cnt[146299] "dead at end of block" "insert auto destroy"
        (543607 'init var' cnt[146299] call_tmp[667822])
        (146302 'end of statement')
        {
          unknown call_tmp[667829] "expr temp" "maybe param" "maybe type" "temp"
          (667832 'move' call_tmp[667829](360574 call _arrsLock _mt[243] this[146747]))
          (146309 call(146305 call (partial) lock _mt[243] call_tmp[667829]))
          (481455 'end of statement')
          unknown call_tmp[667836] "expr temp" "maybe param" "maybe type" "temp"
          (667839 'move' call_tmp[667836](146326 call _cond_test rmFromList[146283]))
          if call_tmp[667836]
          {
            unknown call_tmp[667843] "expr temp" "maybe param" "maybe type" "temp"
            (667846 'move' call_tmp[667843](360579 call _arrs _mt[243] this[146747]))
            (146319 call(146314 call (partial) remove _mt[243] call_tmp[667843]) x[146277])
          }
          {
            unknown call_tmp[667852] "expr temp" "maybe param" "maybe type" "temp"
            (667855 'move' call_tmp[667852](385527 call _arrs_containing_dom _mt[243] this[146747]))
            (146323 call -= call_tmp[667852] 1)
          }
          unknown call_tmp[667859] "expr temp" "maybe param" "maybe type" "temp"
          (667862 'move' call_tmp[667859](360584 call _arrs _mt[243] this[146747]))
          unknown call_tmp[667866] "expr temp" "maybe param" "maybe type" "temp"
          (667869 'move' call_tmp[667866](146334 call size _mt[243] call_tmp[667859]))
          (146337 call = cnt[146299] call_tmp[667866])
          (481458 'end of statement' cnt[146299])
          unknown call_tmp[667873] "expr temp" "maybe param" "maybe type" "temp"
          (667876 'move' call_tmp[667873](385534 call _arrs_containing_dom _mt[243] this[146747]))
          (146342 call += cnt[146299] call_tmp[667873])
          (481460 'end of statement' cnt[146299])
          unknown call_tmp[667880] "expr temp" "maybe param" "maybe type" "temp"
          (667883 'move' call_tmp[667880](385539 call _free_when_no_arrs _mt[243] this[146747]))
          unknown call_tmp[667885] "expr temp" "maybe param" "maybe type" "temp"
          (667888 'move' call_tmp[667885](146346 call ! call_tmp[667880]))
          unknown call_tmp[667890] "expr temp" "maybe param" "maybe type" "temp"
          (667893 'move' call_tmp[667890](146353 call _cond_test call_tmp[667885]))
          if call_tmp[667890]
          {
            (146350 call += cnt[146299] 1)
            (481462 'end of statement' cnt[146299])
          }
          unknown call_tmp[667897] "expr temp" "maybe param" "maybe type" "temp"
          (667900 'move' call_tmp[667897](360589 call _arrsLock _mt[243] this[146747]))
          (146363 call(146359 call (partial) unlock _mt[243] call_tmp[667897]))
        }
        (146368 call = count[146290] cnt[146299])
        (481465 'end of statement' count[146290] cnt[146299])
      }
      (146378 'elided on block' 0 tmp[146374])
    }
    unknown call_tmp[667904] "expr temp" "maybe param" "maybe type" "temp"
    (667907 'move' call_tmp[667904](146384 call == count[146290] 0))
    (519876 'move' ret[519870](519875 'coerce' call_tmp[667904] bool[10]))
    gotoReturn _end_remove_arr[519868] _end_remove_arr[519868]
    (481468 'end of statement' count[146290])
    label _end_remove_arr[519868]
    (519872 return ret[519870])
  }
  { scopeless type
    bool[10]
  }
  function BaseDom[146729].add_arr[146398](arg _mt[146753]:_MT[238], arg this[146751]:BaseDom[146729], arg x[146395]:unmanaged BaseArr[415511], param arg locking[146401] :
  1 =
  1, param arg addToList[146405] :
  1 =
  1) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {
    {
      const tmp[146459] "const" "temp"
      unknown call_tmp[667909] "expr temp" "maybe param" "maybe type" "temp"
      (667912 'move' call_tmp[667909](146456 '_wide_get_locale' this[146751]))
      (146460 'move' tmp[146459](146457 'deref' call_tmp[667909]))
      {
        unknown call_tmp[667914] "expr temp" "maybe param" "maybe type" "temp"
        (667917 'move' call_tmp[667914](146417 call _cond_test locking[146401]))
        if call_tmp[667914]
        {
          unknown call_tmp[667921] "expr temp" "maybe param" "maybe type" "temp"
          (667924 'move' call_tmp[667921](360594 call _arrsLock _mt[243] this[146751]))
          (146415 call(146411 call (partial) lock _mt[243] call_tmp[667921]))
        }
        unknown call_tmp[667928] "expr temp" "maybe param" "maybe type" "temp"
        (667931 'move' call_tmp[667928](146437 call _cond_test addToList[146405]))
        if call_tmp[667928]
        {
          unknown call_tmp[667935] "expr temp" "maybe param" "maybe type" "temp"
          (667938 'move' call_tmp[667935](360599 call _arrs _mt[243] this[146751]))
          (146430 call(146425 call (partial) add _mt[243] call_tmp[667935]) x[146395])
        }
        {
          unknown call_tmp[667944] "expr temp" "maybe param" "maybe type" "temp"
          (667947 'move' call_tmp[667944](385553 call _arrs_containing_dom _mt[243] this[146751]))
          (146434 call += call_tmp[667944] 1)
        }
        unknown call_tmp[667949] "expr temp" "maybe param" "maybe type" "temp"
        (667952 'move' call_tmp[667949](146451 call _cond_test locking[146401]))
        if call_tmp[667949]
        {
          unknown call_tmp[667956] "expr temp" "maybe param" "maybe type" "temp"
          (667959 'move' call_tmp[667956](360604 call _arrsLock _mt[243] this[146751]))
          (146449 call(146445 call (partial) unlock _mt[243] call_tmp[667956]))
        }
      }
      (146463 'elided on block' 0 tmp[146459])
    }
    (519880 return _void[55])
  }
  function BaseDom[146729].remove_containing_arr[146477](arg _mt[146757]:_MT[238], arg this[146755]:BaseDom[146729], arg x[146474]:unmanaged BaseArr[415511]) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ret[519884] "RVV" "temp"
    unknown call_tmp[667963] "maybe param" "maybe type" "temp"
    (667966 'move' call_tmp[667963](146480 call - 1))
    unknown count[146482] "dead at end of block" "insert auto destroy"
    (543609 'init var' count[146482] call_tmp[667963])
    (146485 'end of statement')
    {
      const tmp[146549] "const" "temp"
      unknown call_tmp[667968] "expr temp" "maybe param" "maybe type" "temp"
      (667971 'move' call_tmp[667968](146546 '_wide_get_locale' this[146755]))
      (146550 'move' tmp[146549](146547 'deref' call_tmp[667968]))
      {
        unknown call_tmp[667973] "maybe param" "maybe type" "temp"
        (667976 'move' call_tmp[667973](146489 call - 1))
        unknown cnt[146491] "dead at end of block" "insert auto destroy"
        (543611 'init var' cnt[146491] call_tmp[667973])
        (146494 'end of statement')
        unknown call_tmp[667980] "expr temp" "maybe param" "maybe type" "temp"
        (667983 'move' call_tmp[667980](360609 call _arrsLock _mt[243] this[146755]))
        (146501 call(146497 call (partial) lock _mt[243] call_tmp[667980]))
        (481474 'end of statement')
        unknown call_tmp[667989] "expr temp" "maybe param" "maybe type" "temp"
        (667992 'move' call_tmp[667989](385561 call _arrs_containing_dom _mt[243] this[146755]))
        (146505 call -= call_tmp[667989] 1)
        (481475 'end of statement')
        unknown call_tmp[667996] "expr temp" "maybe param" "maybe type" "temp"
        (667999 'move' call_tmp[667996](360614 call _arrs _mt[243] this[146755]))
        unknown call_tmp[668003] "expr temp" "maybe param" "maybe type" "temp"
        (668006 'move' call_tmp[668003](146510 call size _mt[243] call_tmp[667996]))
        (146513 call = cnt[146491] call_tmp[668003])
        (481476 'end of statement' cnt[146491])
        unknown call_tmp[668010] "expr temp" "maybe param" "maybe type" "temp"
        (668013 'move' call_tmp[668010](385568 call _arrs_containing_dom _mt[243] this[146755]))
        (146518 call += cnt[146491] call_tmp[668010])
        (481478 'end of statement' cnt[146491])
        unknown call_tmp[668017] "expr temp" "maybe param" "maybe type" "temp"
        (668020 'move' call_tmp[668017](385573 call _free_when_no_arrs _mt[243] this[146755]))
        unknown call_tmp[668022] "expr temp" "maybe param" "maybe type" "temp"
        (668025 'move' call_tmp[668022](146522 call ! call_tmp[668017]))
        unknown call_tmp[668027] "expr temp" "maybe param" "maybe type" "temp"
        (668030 'move' call_tmp[668027](146529 call _cond_test call_tmp[668022]))
        if call_tmp[668027]
        {
          (146526 call += cnt[146491] 1)
          (481480 'end of statement' cnt[146491])
        }
        unknown call_tmp[668034] "expr temp" "maybe param" "maybe type" "temp"
        (668037 'move' call_tmp[668034](360619 call _arrsLock _mt[243] this[146755]))
        (146539 call(146535 call (partial) unlock _mt[243] call_tmp[668034]))
        (481482 'end of statement')
        (146543 call = count[146482] cnt[146491])
        (481483 'end of statement' count[146482] cnt[146491])
      }
      (146553 'elided on block' 0 tmp[146549])
    }
    unknown call_tmp[668041] "expr temp" "maybe param" "maybe type" "temp"
    (668044 'move' call_tmp[668041](146559 call == count[146482] 0))
    (519889 'move' ret[519884](519888 'deref' call_tmp[668041]))
    gotoReturn _end_remove_containing_arr[519882] _end_remove_containing_arr[519882]
    (481486 'end of statement' count[146482])
    label _end_remove_containing_arr[519882]
    (519886 return ret[519884])
  }
  function BaseDom[146729].add_containing_arr[146572](arg _mt[146761]:_MT[238], arg this[146759]:BaseDom[146729], arg x[146569]:unmanaged BaseArr[415511]) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {
    {
      const tmp[146598] "const" "temp"
      unknown call_tmp[668046] "expr temp" "maybe param" "maybe type" "temp"
      (668049 'move' call_tmp[668046](146595 '_wide_get_locale' this[146759]))
      (146599 'move' tmp[146598](146596 'deref' call_tmp[668046]))
      {
        unknown call_tmp[668053] "expr temp" "maybe param" "maybe type" "temp"
        (668056 'move' call_tmp[668053](360624 call _arrsLock _mt[243] this[146759]))
        (146580 call(146576 call (partial) lock _mt[243] call_tmp[668053]))
        (481488 'end of statement')
        unknown call_tmp[668062] "expr temp" "maybe param" "maybe type" "temp"
        (668065 'move' call_tmp[668062](385584 call _arrs_containing_dom _mt[243] this[146759]))
        (146585 call += call_tmp[668062] 1)
        (481489 'end of statement')
        unknown call_tmp[668069] "expr temp" "maybe param" "maybe type" "temp"
        (668072 'move' call_tmp[668069](360629 call _arrsLock _mt[243] this[146759]))
        (146593 call(146589 call (partial) unlock _mt[243] call_tmp[668069]))
      }
      (146602 'elided on block' 0 tmp[146598])
    }
    (519893 return _void[55])
  }
  function BaseDom[146729].dsiSupportsPrivatization[146611](arg _mt[146765]:_MT[238], arg this[146763]:BaseDom[146729]) param : _unknown[51] "method" "primary method"
  {
    unknown ret[519897] "RVV" "param" "temp"
    (519902 'move' ret[519897](519901 'deref' 0))
    (519899 return ret[519897])
  }
  function BaseDom[146729].dsiRequiresPrivatization[146621](arg _mt[146769]:_MT[238], arg this[146767]:BaseDom[146729]) param : _unknown[51] "method" "primary method"
  {
    unknown ret[519906] "RVV" "param" "temp"
    (519911 'move' ret[519906](519910 'deref' 0))
    (519908 return ret[519906])
  }
  function BaseDom[146729].linksDistribution[146631](arg _mt[146773]:_MT[238], arg this[146771]:BaseDom[146729]) param : _unknown[51] "method" "primary method"
  {
    unknown ret[519915] "RVV" "param" "temp"
    (519920 'move' ret[519915](519919 'deref' 1))
    (519917 return ret[519915])
  }
  function BaseDom[146729].dsiLinksDistribution[146641](arg _mt[146777]:_MT[238], arg this[146775]:BaseDom[146729]) : _unknown[51] "method" "primary method"
  {
    unknown ret[519924] "RVV" "temp"
    (519929 'move' ret[519924](519928 'deref' 1))
    (519926 return ret[519924])
  }
  function BaseDom[146729].dsiDestroyDom[146651](arg _mt[146781]:_MT[238], arg this[146779]:BaseDom[146729]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (519931 return _void[55])
  }
  function BaseDom[146729].dsiDisplayRepresentation[146658](arg _mt[146785]:_MT[238], arg this[146783]:BaseDom[146729]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (146663 call writeln "<no way to display representation>")
    (519933 return _void[55])
  }
  function BaseDom[146729].dsiSupportsAutoLocalAccess[146670](arg _mt[146789]:_MT[238], arg this[146787]:BaseDom[146729]) param : _unknown[51] "method" "primary method"
  {
    unknown ret[519937] "RVV" "param" "temp"
    (519942 'move' ret[519937](519941 'deref' 0))
    (519939 return ret[519937])
  }
  function BaseDom[415358](?).isDefaultRectangular[146680](arg _mt[146793]:_MT[238], arg this[146791]:BaseDom[415358](?)) param : _unknown[51] "method" "primary method"
  {
    unknown ret[519946] "RVV" "param" "temp"
    (519951 'move' ret[519946](519950 'deref' 0))
    (519948 return ret[519946])
  }
  function BaseDom[146729].isDefaultRectangular[146690](arg _mt[146797]:_MT[238], arg this[146795]:BaseDom[146729]) param : _unknown[51] "method" "primary method"
  {
    unknown ret[519955] "RVV" "param" "temp"
    (519960 'move' ret[519955](519959 'deref' 0))
    (519957 return ret[519955])
  }
  function BaseDom[146729].isSliceDomainView[146700](arg _mt[146801]:_MT[238], arg this[146799]:BaseDom[146729]) param : _unknown[51] "method" "primary method"
  {
    unknown ret[519964] "RVV" "param" "temp"
    (519969 'move' ret[519964](519968 'deref' 0))
    (519966 return ret[519964])
  }
  function BaseDom[146729].isRankChangeDomainView[146710](arg _mt[146805]:_MT[238], arg this[146803]:BaseDom[146729]) param : _unknown[51] "method" "primary method"
  {
    unknown ret[519973] "RVV" "param" "temp"
    (519978 'move' ret[519973](519977 'deref' 0))
    (519975 return ret[519973])
  }
  function BaseDom[146729].isReindexDomainView[146720](arg _mt[146809]:_MT[238], arg this[146807]:BaseDom[146729]) param : _unknown[51] "method" "primary method"
  {
    unknown ret[519982] "RVV" "param" "temp"
    (519987 'move' ret[519982](519986 'deref' 0))
    (519984 return ret[519982])
  }
  function BaseDom[146729].super[801402](arg _mt[801404]:_MT[238], arg this[801406]:BaseDom[146729]) : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[801416] "RVV" "temp"
    unknown call_tmp[801423] "expr temp" "maybe param" "maybe type" "temp"
    (801426 'move' call_tmp[801423](801410 '.v' this[801406] c"super"))
    (801421 'move' ret[801416](801420 'deref' call_tmp[801423]))
    (801418 return ret[801416])
  }
  function BaseDom[146729]._arrs[801428](arg _mt[801430]:_MT[238], arg this[801432]:BaseDom[146729]) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[801442] "RVV" "temp"
    unknown call_tmp[801449] "expr temp" "maybe param" "maybe type" "temp"
    (801452 'move' call_tmp[801449](801436 '.' this[801432] c"_arrs"))
    (801447 'move' ret[801442](801446 'addr of' call_tmp[801449]))
    (801444 return ret[801442])
  }
  function BaseDom[146729]._arrs_containing_dom[801454](arg _mt[801456]:_MT[238], arg this[801458]:BaseDom[146729]) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[801468] "RVV" "temp"
    unknown call_tmp[801475] "expr temp" "maybe param" "maybe type" "temp"
    (801478 'move' call_tmp[801475](801462 '.' this[801458] c"_arrs_containing_dom"))
    (801473 'move' ret[801468](801472 'addr of' call_tmp[801475]))
    (801470 return ret[801468])
  }
  function BaseDom[146729]._arrsLock[801480](arg _mt[801482]:_MT[238], arg this[801484]:BaseDom[146729]) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[801494] "RVV" "temp"
    unknown call_tmp[801501] "expr temp" "maybe param" "maybe type" "temp"
    (801504 'move' call_tmp[801501](801488 '.' this[801484] c"_arrsLock"))
    (801499 'move' ret[801494](801498 'addr of' call_tmp[801501]))
    (801496 return ret[801494])
  }
  function BaseDom[146729]._free_when_no_arrs[801506](arg _mt[801508]:_MT[238], arg this[801510]:BaseDom[146729]) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[801520] "RVV" "temp"
    unknown call_tmp[801527] "expr temp" "maybe param" "maybe type" "temp"
    (801530 'move' call_tmp[801527](801514 '.' this[801510] c"_free_when_no_arrs"))
    (801525 'move' ret[801520](801524 'addr of' call_tmp[801527]))
    (801522 return ret[801520])
  }
  function BaseDom[146729].pid[801532](arg _mt[801534]:_MT[238], arg this[801536]:BaseDom[146729]) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[801546] "RVV" "temp"
    unknown call_tmp[801553] "expr temp" "maybe param" "maybe type" "temp"
    (801556 'move' call_tmp[801553](801540 '.' this[801536] c"pid"))
    (801551 'move' ret[801546](801550 'addr of' call_tmp[801553]))
    (801548 return ret[801546])
  }
  function BaseDom[146729].writeThis[801558](arg _mt[801562]:_MT[238], arg this[801560]:BaseDom[146729], arg f[801561]:_any[178](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (801567 call writeThisDefaultImpl f[801561] this[801560])
    (801572 return _void[55])
  }
  function BaseDom[146729].readThis[801574](arg _mt[801578]:_MT[238], arg this[801576]:BaseDom[146729], arg f[801577]:_any[178](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (801582 call readThisDefaultImpl f[801577] this[801576])
    (801588 return _void[55])
  }
  type BaseDom[146729] val super[355713]:object[22] "super class" unknown _arrs[146003](146002 call chpl__simpleSet[204919](?) unmanaged BaseArr[415511]) val _arrs_containing_dom[146008]:int(64)[13] int(64)[13] val _arrsLock[146013]:chpl_LocalSpinlock[187398] chpl_LocalSpinlock[187398] val _free_when_no_arrs[146018]:bool[10] bool[10] val pid[146024]:int(64)[13] nullPid[113724] int(64)[13]
  type unmanaged BaseDom?[415523]
  type BaseDom?[415520](?)
  type unmanaged BaseDom[415463]
  type BaseDom[415358](?)
  type BaseDom[372800](?)
  function BaseRectangularDom[146897](?).getBaseArrType[146830](arg _mt[146901]:_MT[238], arg this[146899]:BaseRectangularDom[146897](?)) type : _unknown[51] "method" "primary method"
  {
    unknown ret[519991] "RVV" "temp" "type variable"
    unknown call_tmp[668078] "expr temp" "maybe param" "maybe type" "temp"
    (668081 'move' call_tmp[668078](385593 call rank _mt[243] this[146899]))
    unknown call_tmp[668085] "expr temp" "maybe param" "maybe type" "temp"
    (668088 'move' call_tmp[668085](385598 call idxType _mt[243] this[146899]))
    unknown call_tmp[668092] "expr temp" "maybe param" "maybe type" "temp"
    (668095 'move' call_tmp[668092](385603 call stridable _mt[243] this[146899]))
    unknown call_tmp[668097] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (668100 'move' call_tmp[668097](747932 'new' BaseArrOverRectangularDom[385588](?)(rank = call_tmp[668078])(idxType = call_tmp[668085])(stridable = call_tmp[668092])(_chpl_manager = unmanaged[220](?))))
    unknown tmp[146844] "dead at end of block" "insert auto destroy"
    (543613 'init var' tmp[146844] call_tmp[668097])
    (146847 'end of statement')
    unknown call_tmp[668102] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (668105 'move' call_tmp[668102](146850 'typeof' tmp[146844]))
    (519996 'move' ret[519991](519995 'deref' call_tmp[668102]))
    gotoReturn _end_getBaseArrType[519989] _end_getBaseArrType[519989]
    (481502 'end of statement' tmp[146844])
    label _end_getBaseArrType[519989]
    (519993 return ret[519991])
  }
  function BaseRectangularDom[146897](?).deinit[146857](arg _mt[146905]:_MT[238], arg this[146903]:BaseRectangularDom[146897](?)) : _unknown[51] "destructor" "method" "primary method" "no return value for void"
  {
    (520000 return _void[55])
  }
  function BaseRectangularDom[146897](?).dsiAdd[146866](arg _mt[146909]:_MT[238], arg this[146907]:BaseRectangularDom[146897](?), in arg x[146864]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[520004] "RVV" "temp"
    (146871 call compilerError "Cannot add indices to a rectangular domain")
    (481504 'end of statement')
    (520009 'move' ret[520004](520008 'deref' 0))
    (520006 return ret[520004])
  }
  function BaseRectangularDom[146897](?).dsiRemove[146883](arg _mt[146913]:_MT[238], arg this[146911]:BaseRectangularDom[146897](?), arg x[146881]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[520013] "RVV" "temp"
    (146888 call compilerError "Cannot remove indices from a rectangular domain")
    (481506 'end of statement')
    (520018 'move' ret[520013](520017 'deref' 0))
    (520015 return ret[520013])
  }
  function BaseRectangularDom[146897](?).super[801590](arg _mt[801592]:_MT[238], arg this[801594]:BaseRectangularDom[146897](?)) : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[801604] "RVV" "temp"
    unknown call_tmp[801611] "expr temp" "maybe param" "maybe type" "temp"
    (801614 'move' call_tmp[801611](801598 '.v' this[801594] c"super"))
    (801609 'move' ret[801604](801608 'deref' call_tmp[801611]))
    (801606 return ret[801604])
  }
  function BaseRectangularDom[801621](?).rank[801616](arg _mt[801618]:_MT[238], arg this[801623]:BaseRectangularDom[801621](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[801654] "RVV" "param" "temp"
    unknown borrowOfThis[801625]
    (801646 'end of statement')
    (801627 'move' borrowOfThis[801625](801630 call _cast _borrowedNonNilable[214](?) this[801623]))
    (801647 'end of statement' borrowOfThis[801625])
    unknown call_tmp[801668] "expr temp" "maybe param" "maybe type" "temp"
    (801671 'move' call_tmp[801668](801636 'is bound' borrowOfThis[801625] c"rank"))
    if call_tmp[801668]
    {
      unknown call_tmp[801673] "expr temp" "maybe param" "maybe type" "temp"
      (801676 'move' call_tmp[801673](801635 '.' borrowOfThis[801625] c"rank"))
      (801659 'move' ret[801654](801658 'deref' call_tmp[801673]))
      gotoReturn _end_rank[801652] _end_rank[801652]
      (801649 'end of statement' borrowOfThis[801625])
    }
    {
      (801664 'move' ret[801654](801663 'deref' ?[260]))
      gotoReturn _end_rank[801652] _end_rank[801652]
    }
    label _end_rank[801652]
    (801656 return ret[801654])
  }
  function BaseRectangularDom[801621](?).rank[801678](arg _mt[801680]:_MT[238], arg this[801682]:BaseRectangularDom[801621](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[801713] "RVV" "param" "temp"
    unknown borrowOfThis[801684] "type variable"
    (801705 'end of statement')
    (801686 'move' borrowOfThis[801684](801689 call _cast _borrowedNonNilable[214](?) this[801682]))
    (801706 'end of statement' borrowOfThis[801684])
    unknown call_tmp[801727] "expr temp" "maybe param" "maybe type" "temp"
    (801730 'move' call_tmp[801727](801695 'is bound' borrowOfThis[801684] c"rank"))
    if call_tmp[801727]
    {
      unknown call_tmp[801732] "expr temp" "maybe param" "maybe type" "temp"
      (801735 'move' call_tmp[801732](801694 '.' borrowOfThis[801684] c"rank"))
      (801718 'move' ret[801713](801717 'deref' call_tmp[801732]))
      gotoReturn _end_rank[801711] _end_rank[801711]
      (801708 'end of statement' borrowOfThis[801684])
    }
    {
      (801723 'move' ret[801713](801722 'deref' ?[260]))
      gotoReturn _end_rank[801711] _end_rank[801711]
    }
    label _end_rank[801711]
    (801715 return ret[801713])
  }
  function BaseRectangularDom[801621](?).idxType[801737](arg _mt[801739]:_MT[238], arg this[801741]:BaseRectangularDom[801621](?)) type : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[801776] "RVV" "temp" "type variable"
    unknown borrowOfThis[801743]
    (801768 'end of statement')
    (801745 'move' borrowOfThis[801743](801748 call _cast _borrowedNonNilable[214](?) this[801741]))
    (801769 'end of statement' borrowOfThis[801743])
    unknown call_tmp[801790] "expr temp" "maybe param" "maybe type" "temp"
    (801793 'move' call_tmp[801790](801758 'is bound' borrowOfThis[801743] c"idxType"))
    if call_tmp[801790]
    {
      unknown call_tmp[801795] "expr temp" "maybe param" "maybe type" "temp"
      (801798 'move' call_tmp[801795](801753 '.v' borrowOfThis[801743] c"idxType"))
      unknown call_tmp[801800] "expr temp" "maybe param" "maybe type" "temp"
      (801803 'move' call_tmp[801800](801754 call chpl_checkLegalTypeFieldAccessor this[801741] call_tmp[801795] "idxType"))
      (801781 'move' ret[801776](801780 'deref' call_tmp[801800]))
      gotoReturn _end_idxType[801774] _end_idxType[801774]
      (801771 'end of statement' borrowOfThis[801743])
    }
    {
      (801786 'move' ret[801776](801785 'deref' _uninstantiated[258]))
      gotoReturn _end_idxType[801774] _end_idxType[801774]
    }
    label _end_idxType[801774]
    (801778 return ret[801776])
  }
  function BaseRectangularDom[801621](?).idxType[801805](arg _mt[801807]:_MT[238], arg this[801809]:BaseRectangularDom[801621](?)) type : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[801844] "RVV" "temp" "type variable"
    unknown borrowOfThis[801811] "type variable"
    (801836 'end of statement')
    (801813 'move' borrowOfThis[801811](801816 call _cast _borrowedNonNilable[214](?) this[801809]))
    (801837 'end of statement' borrowOfThis[801811])
    unknown call_tmp[801858] "expr temp" "maybe param" "maybe type" "temp"
    (801861 'move' call_tmp[801858](801826 'is bound' borrowOfThis[801811] c"idxType"))
    if call_tmp[801858]
    {
      unknown call_tmp[801863] "expr temp" "maybe param" "maybe type" "temp"
      (801866 'move' call_tmp[801863](801821 '.v' borrowOfThis[801811] c"idxType"))
      unknown call_tmp[801868] "expr temp" "maybe param" "maybe type" "temp"
      (801871 'move' call_tmp[801868](801822 call chpl_checkLegalTypeFieldAccessor this[801809] call_tmp[801863] "idxType"))
      (801849 'move' ret[801844](801848 'deref' call_tmp[801868]))
      gotoReturn _end_idxType[801842] _end_idxType[801842]
      (801839 'end of statement' borrowOfThis[801811])
    }
    {
      (801854 'move' ret[801844](801853 'deref' _uninstantiated[258]))
      gotoReturn _end_idxType[801842] _end_idxType[801842]
    }
    label _end_idxType[801842]
    (801846 return ret[801844])
  }
  function BaseRectangularDom[801621](?).stridable[801873](arg _mt[801875]:_MT[238], arg this[801877]:BaseRectangularDom[801621](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[801908] "RVV" "param" "temp"
    unknown borrowOfThis[801879]
    (801900 'end of statement')
    (801881 'move' borrowOfThis[801879](801884 call _cast _borrowedNonNilable[214](?) this[801877]))
    (801901 'end of statement' borrowOfThis[801879])
    unknown call_tmp[801922] "expr temp" "maybe param" "maybe type" "temp"
    (801925 'move' call_tmp[801922](801890 'is bound' borrowOfThis[801879] c"stridable"))
    if call_tmp[801922]
    {
      unknown call_tmp[801927] "expr temp" "maybe param" "maybe type" "temp"
      (801930 'move' call_tmp[801927](801889 '.' borrowOfThis[801879] c"stridable"))
      (801913 'move' ret[801908](801912 'deref' call_tmp[801927]))
      gotoReturn _end_stridable[801906] _end_stridable[801906]
      (801903 'end of statement' borrowOfThis[801879])
    }
    {
      (801918 'move' ret[801908](801917 'deref' ?[260]))
      gotoReturn _end_stridable[801906] _end_stridable[801906]
    }
    label _end_stridable[801906]
    (801910 return ret[801908])
  }
  function BaseRectangularDom[801621](?).stridable[801932](arg _mt[801934]:_MT[238], arg this[801936]:BaseRectangularDom[801621](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[801967] "RVV" "param" "temp"
    unknown borrowOfThis[801938] "type variable"
    (801959 'end of statement')
    (801940 'move' borrowOfThis[801938](801943 call _cast _borrowedNonNilable[214](?) this[801936]))
    (801960 'end of statement' borrowOfThis[801938])
    unknown call_tmp[801981] "expr temp" "maybe param" "maybe type" "temp"
    (801984 'move' call_tmp[801981](801949 'is bound' borrowOfThis[801938] c"stridable"))
    if call_tmp[801981]
    {
      unknown call_tmp[801986] "expr temp" "maybe param" "maybe type" "temp"
      (801989 'move' call_tmp[801986](801948 '.' borrowOfThis[801938] c"stridable"))
      (801972 'move' ret[801967](801971 'deref' call_tmp[801986]))
      gotoReturn _end_stridable[801965] _end_stridable[801965]
      (801962 'end of statement' borrowOfThis[801938])
    }
    {
      (801977 'move' ret[801967](801976 'deref' ?[260]))
      gotoReturn _end_stridable[801965] _end_stridable[801965]
    }
    label _end_stridable[801965]
    (801969 return ret[801967])
  }
  function BaseRectangularDom[146897](?).init[801991](arg _mt[801993]:_MT[238], arg this[801994]:BaseRectangularDom[146897](?), param arg rank[802005]:int(64)[13], arg idxType[802017]:_any[178](?), param arg stridable[802026]:bool[10]) : void[4] "compiler generated" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown super_tmp[802040] "temporary of super field" "temp"
    (802042 'move' super_tmp[802040](802039 '.v' this[801994] c"super"))
    (802004 call(802002 call (partial) init _mt[243] super_tmp[802040]))
    (802078 'end of statement')
    unknown tmp[802045] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[802082] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[802094] "expr temp" "maybe param" "maybe type" "temp"
      (802097 'move' call_tmp[802094](802047 '.v' this[801994] c"super"))
      (802086 'move' call_type_tmp[802082](802050 'typeof' call_tmp[802094]))
    }
    (802051 'move' tmp[802045] call_type_tmp[802082])
    unknown call_tmp[802099] "maybe param" "maybe type" "temp"
    (802102 'move' call_tmp[802099](802056 'cast' tmp[802045] this[801994]))
    unknown chpl__thisAsParent[802053] "dead at end of block" "insert auto destroy" "temp"
    (802090 'init var' chpl__thisAsParent[802053] call_tmp[802099] tmp[802045])
    (802059 'setcid' chpl__thisAsParent[802053])
    unknown call_tmp[802104] "expr temp" "maybe param" "maybe type" "temp"
    (802107 'move' call_tmp[802104](802062 call _cast int(64)[13] rank[802005]))
    (802064 'init field' this[801994] c"rank" call_tmp[802104])
    (802079 'end of statement')
    (802067 'init field' this[801994] c"idxType" idxType[802017])
    unknown call_tmp[802109] "expr temp" "maybe param" "maybe type" "temp"
    (802112 'move' call_tmp[802109](802071 call _cast bool[10] stridable[802026]))
    (802073 'init field' this[801994] c"stridable" call_tmp[802109])
    (802080 'end of statement')
    (802076 'setcid' this[801994])
    (802088 return _void[55])
  }
  function BaseRectangularDom[146897](?).writeThis[802114](arg _mt[802118]:_MT[238], arg this[802116]:BaseRectangularDom[146897](?), arg f[802117]:_any[178](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (802123 call writeThisDefaultImpl f[802117] this[802116])
    (802128 return _void[55])
  }
  function BaseRectangularDom[146897](?).readThis[802130](arg _mt[802134]:_MT[238], arg this[802132]:BaseRectangularDom[146897](?), arg f[802133]:_any[178](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (802138 call readThisDefaultImpl f[802133] this[802132])
    (802144 return _void[55])
  }
  type BaseRectangularDom[146897](?) val super[355715]:BaseDom[146729] "super class" unknown rank[146816] "param" int(64)[13] unknown idxType[146820] "type variable" unknown stridable[146824] "param" bool[10]
  type BaseRectangularDom[801621](?)
  type BaseRectangularDom[382300](?)
  function BaseSparseDomImpl[147965](?).deinit[146932](arg _mt[147969]:_MT[238], arg this[147967]:BaseSparseDomImpl[147965](?)) : _unknown[51] "destructor" "method" "primary method" "no return value for void"
  {
    (520020 return _void[55])
  }
  function BaseSparseDomImpl[147965](?).dsiBulkAdd[146950](arg _mt[147973]:_MT[238], arg this[147971]:BaseSparseDomImpl[147965](?), arg inds[146947]:_array[133600](?), arg dataSorted[146953] :
  0 =
  0, arg isUnique[146957] :
  0 =
  0, arg preserveInds[146961] :
  1 =
  1, arg addOn[146965] :
  nilLocale[89943] =
  nilLocale[89943]) : _unknown[51] "compiler added where" "method" "primary method" "method overrides"
  {
    unknown ret[520024] "RVV" "temp"
    unknown tmp[427147] "maybe param" "temp"
    (427158 'move' tmp[427147](146969 call ! dataSorted[146953]))
    unknown call_tmp[668107] "expr temp" "maybe param" "maybe type" "temp"
    (668110 'move' call_tmp[668107](427160 call _cond_invalid tmp[427147]))
    if call_tmp[668107]
    {
      (427163 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[568561] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[568562] "maybe param" "temp"
    unknown call_tmp[668112] "expr temp" "maybe param" "maybe type" "temp"
    (668115 'move' call_tmp[668112](427148 call isTrue tmp[427147]))
    (568567 'move' tmp[568562](568565 call _cond_test call_tmp[668112]))
    if tmp[568562]
    {
      unknown tmp[568569] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (568571 'move' tmp[568569](427151 call isTrue preserveInds[146961]))
      (568576 'move' tmp[568561](568573 '_paramFoldLogical' tmp[568562] tmp[568569]))
    }
    {
      (568581 'move' tmp[568561](568578 '_paramFoldLogical' tmp[568562] 0))
    }
    unknown call_tmp[668117] "expr temp" "maybe param" "maybe type" "temp"
    (668120 'move' call_tmp[668117](146999 call _cond_test tmp[568561]))
    if call_tmp[668117]
    {
      unknown _inds[146975] "dead at end of block" "insert auto destroy"
      (543615 'init var' _inds[146975] inds[146947])
      (146978 'end of statement')
      unknown call_tmp[668124] "expr temp" "maybe param" "maybe type" "temp"
      (668127 'move' call_tmp[668124](146986 call(385624 call (partial) bulkAdd_help _mt[243] this[147971]) _inds[146975] dataSorted[146953] isUnique[146957] addOn[146965]))
      (520029 'move' ret[520024](520028 'deref' call_tmp[668124]))
      gotoReturn _end_dsiBulkAdd[520022] _end_dsiBulkAdd[520022]
      (481509 'end of statement' _inds[146975])
    }
    {
      unknown call_tmp[668131] "expr temp" "maybe param" "maybe type" "temp"
      (668134 'move' call_tmp[668131](146995 call(385632 call (partial) bulkAdd_help _mt[243] this[147971]) inds[146947] dataSorted[146953] isUnique[146957] addOn[146965]))
      (520034 'move' ret[520024](520033 'deref' call_tmp[668131]))
      gotoReturn _end_dsiBulkAdd[520022] _end_dsiBulkAdd[520022]
    }
    label _end_dsiBulkAdd[520022]
    (520026 return ret[520024])
  }
  where {
    unknown call_tmp[668138] "expr temp" "maybe param" "maybe type" "temp"
    (668141 'move' call_tmp[668138](385609 call rank _mt[243] this[147971]))
    unknown call_tmp[668145] "expr temp" "maybe param" "maybe type" "temp"
    (668148 'move' call_tmp[668145](385614 call idxType _mt[243] this[147971]))
    unknown call_tmp[668150] "expr temp" "maybe param" "maybe type" "temp"
    (668153 'move' call_tmp[668150](146942 call chpl__buildIndexType call_tmp[668138] call_tmp[668145]))
    unknown call_tmp[668157] "expr temp" "maybe param" "maybe type" "temp"
    (668160 'move' call_tmp[668157](461764 call eltType _mt[243] inds[146947]))
    unknown call_tmp[668162] "expr temp" "maybe param" "maybe type" "temp"
    (668165 'move' call_tmp[668162](461768 call == call_tmp[668150] call_tmp[668157]))
    (461762 call & 1 call_tmp[668162])
  }
  function BaseSparseDomImpl[147965](?).bulkAdd_help[147021](arg _mt[147977]:_MT[238], arg this[147975]:BaseSparseDomImpl[147965](?), arg inds[147018]:_array[133600](?), arg dataSorted[147024] :
  0 =
  0, arg isUnique[147028] :
  0 =
  0, arg addOn[147032] :
  nilLocale[89943] =
  nilLocale[89943]) : _unknown[51] "compiler added where" "method" "primary method"
  {
    unknown ret[520040] "RVV" "temp"
    (147054 call halt "Helper function called on the BaseSparseDomImpl")
    (481512 'end of statement')
    unknown call_tmp[668167] "expr temp" "maybe param" "maybe type" "temp"
    (668170 'move' call_tmp[668167](147058 call - 1))
    (520045 'move' ret[520040](520044 'deref' call_tmp[668167]))
    (520042 return ret[520040])
  }
  where {
    unknown call_tmp[668174] "expr temp" "maybe param" "maybe type" "temp"
    (668177 'move' call_tmp[668174](385641 call rank _mt[243] this[147975]))
    unknown call_tmp[668181] "expr temp" "maybe param" "maybe type" "temp"
    (668184 'move' call_tmp[668181](385646 call idxType _mt[243] this[147975]))
    unknown call_tmp[668186] "expr temp" "maybe param" "maybe type" "temp"
    (668189 'move' call_tmp[668186](147014 call chpl__buildIndexType call_tmp[668174] call_tmp[668181]))
    unknown call_tmp[668193] "expr temp" "maybe param" "maybe type" "temp"
    (668196 'move' call_tmp[668193](461776 call eltType _mt[243] inds[147018]))
    unknown call_tmp[668198] "expr temp" "maybe param" "maybe type" "temp"
    (668201 'move' call_tmp[668198](461780 call == call_tmp[668186] call_tmp[668193]))
    (461774 call & 1 call_tmp[668198])
  }
  function BaseSparseDomImpl[147965](?)._grow[147070](arg _mt[147981]:_MT[238], arg this[147979]:BaseSparseDomImpl[147965](?), arg size[147067]:int(64)[13], arg factor[147073] :
  arrayAsVecGrowthFactor[113761] =
  arrayAsVecGrowthFactor[113761]) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[668205] "expr temp" "maybe param" "maybe type" "temp"
    (668208 'move' call_tmp[668205](360634 call nnzDom _mt[243] this[147979]))
    unknown call_tmp[668212] "maybe param" "maybe type" "temp"
    (668215 'move' call_tmp[668212](147077 call size _mt[243] call_tmp[668205]))
    const oldNNZDomSize[147080] "dead at end of block" "const" "insert auto destroy"
    (543617 'init var' oldNNZDomSize[147080] call_tmp[668212])
    (147083 'end of statement')
    unknown call_tmp[668217] "expr temp" "maybe param" "maybe type" "temp"
    (668220 'move' call_tmp[668217](147087 call > size[147067] oldNNZDomSize[147080]))
    unknown call_tmp[668222] "expr temp" "maybe param" "maybe type" "temp"
    (668225 'move' call_tmp[668222](147122 call _cond_test call_tmp[668217]))
    if call_tmp[668222]
    {
      const _newNNZDomSize[147104] "dead at end of block" "const" "insert auto destroy"
      unknown tmp[568588] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[568589] "maybe param" "temp"
      (568594 'move' tmp[568589](568592 call _cond_test oldNNZDomSize[147080]))
      if tmp[568589]
      {
        unknown tmp[568596] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[668227] "expr temp" "maybe param" "maybe type" "temp"
        (668230 'move' call_tmp[668227](147093 call * factor[147073] oldNNZDomSize[147080]))
        unknown call_tmp[668232] "expr temp" "maybe param" "maybe type" "temp"
        (668235 'move' call_tmp[668232](147096 call ceil call_tmp[668227]))
        (568598 'move' tmp[568596](147098 call _cast int(64)[13] call_tmp[668232]))
        (568603 'move' tmp[568588](568600 '_paramFoldLogical' tmp[568589] tmp[568596]))
      }
      {
        (568608 'move' tmp[568588](568605 '_paramFoldLogical' tmp[568589] 1))
      }
      (543619 'init var' _newNNZDomSize[147104] tmp[568588])
      (147107 'end of statement' oldNNZDomSize[147080] oldNNZDomSize[147080])
      unknown call_tmp[668239] "expr temp" "maybe param" "maybe type" "temp"
      (668242 'move' call_tmp[668239](385658 call nnzDom _mt[243] this[147979]))
      unknown call_tmp[668244] "expr temp" "maybe param" "maybe type" "temp"
      (668247 'move' call_tmp[668244](147111 call chpl_build_low_bounded_range 1))
      unknown call_tmp[668249] "expr temp" "maybe param" "maybe type" "temp"
      (668252 'move' call_tmp[668249](147114 call # call_tmp[668244] _newNNZDomSize[147104]))
      unknown call_tmp[668254] "expr temp" "maybe param" "maybe type" "temp"
      (668257 'move' call_tmp[668254](147117 call chpl__buildDomainExpr call_tmp[668249]))
      (147119 call = call_tmp[668239] call_tmp[668254])
      (481516 'end of statement' _newNNZDomSize[147104])
    }
    (520047 return _void[55])
  }
  function BaseSparseDomImpl[147965](?)._shrink[147134](arg _mt[147985]:_MT[238], arg this[147983]:BaseSparseDomImpl[147965](?), arg size[147131]:int(64)[13], arg factor[147137] :
  arrayAsVecGrowthFactor[113761] =
  arrayAsVecGrowthFactor[113761]) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[668259] "expr temp" "maybe param" "maybe type" "temp"
    (668262 'move' call_tmp[668259](147142 call == size[147131] 0))
    unknown call_tmp[668264] "expr temp" "maybe param" "maybe type" "temp"
    (668267 'move' call_tmp[668264](147208 call _cond_test call_tmp[668259]))
    if call_tmp[668264]
    {
      unknown call_tmp[668271] "expr temp" "maybe param" "maybe type" "temp"
      (668274 'move' call_tmp[668271](385666 call nnzDom _mt[243] this[147983]))
      unknown call_tmp[668276] "expr temp" "maybe param" "maybe type" "temp"
      (668279 'move' call_tmp[668276](147147 call chpl_build_bounded_range 1 0))
      unknown call_tmp[668281] "expr temp" "maybe param" "maybe type" "temp"
      (668284 'move' call_tmp[668281](147150 call chpl__buildDomainExpr call_tmp[668276]))
      (147152 call = call_tmp[668271] call_tmp[668281])
    }
    {
      unknown call_tmp[668288] "expr temp" "maybe param" "maybe type" "temp"
      (668291 'move' call_tmp[668288](360639 call nnzDom _mt[243] this[147983]))
      unknown call_tmp[668295] "expr temp" "maybe param" "maybe type" "temp"
      (668298 'move' call_tmp[668295](147157 call size _mt[243] call_tmp[668288]))
      unknown call_tmp[668300] "expr temp" "maybe param" "maybe type" "temp"
      (668303 'move' call_tmp[668300](147162 call ** factor[147137] 2))
      unknown call_tmp[668305] "expr temp" "maybe param" "maybe type" "temp"
      (668308 'move' call_tmp[668305](147164 call / call_tmp[668295] call_tmp[668300]))
      unknown call_tmp[668310] "maybe param" "maybe type" "temp"
      (668313 'move' call_tmp[668310](147167 call _cast int(64)[13] call_tmp[668305]))
      const shrinkThreshold[147169] "dead at end of block" "const" "insert auto destroy"
      (543621 'init var' shrinkThreshold[147169] call_tmp[668310])
      (147172 'end of statement')
      unknown call_tmp[668315] "expr temp" "maybe param" "maybe type" "temp"
      (668318 'move' call_tmp[668315](147176 call < size[147131] shrinkThreshold[147169]))
      unknown call_tmp[668320] "expr temp" "maybe param" "maybe type" "temp"
      (668323 'move' call_tmp[668320](147204 call _cond_test call_tmp[668315]))
      if call_tmp[668320]
      {
        unknown call_tmp[668327] "expr temp" "maybe param" "maybe type" "temp"
        (668330 'move' call_tmp[668327](360644 call nnzDom _mt[243] this[147983]))
        unknown call_tmp[668334] "expr temp" "maybe param" "maybe type" "temp"
        (668337 'move' call_tmp[668334](147179 call size _mt[243] call_tmp[668327]))
        unknown call_tmp[668339] "expr temp" "maybe param" "maybe type" "temp"
        (668342 'move' call_tmp[668339](147183 call / call_tmp[668334] factor[147137]))
        unknown call_tmp[668344] "maybe param" "maybe type" "temp"
        (668347 'move' call_tmp[668344](147186 call _cast int(64)[13] call_tmp[668339]))
        const _newNNZDomSize[147188] "dead at end of block" "const" "insert auto destroy"
        (543623 'init var' _newNNZDomSize[147188] call_tmp[668344])
        (147191 'end of statement')
        unknown call_tmp[668351] "expr temp" "maybe param" "maybe type" "temp"
        (668354 'move' call_tmp[668351](385675 call nnzDom _mt[243] this[147983]))
        unknown call_tmp[668356] "expr temp" "maybe param" "maybe type" "temp"
        (668359 'move' call_tmp[668356](147196 call chpl_build_bounded_range 1 _newNNZDomSize[147188]))
        unknown call_tmp[668361] "expr temp" "maybe param" "maybe type" "temp"
        (668364 'move' call_tmp[668361](147199 call chpl__buildDomainExpr call_tmp[668356]))
        (147201 call = call_tmp[668351] call_tmp[668361])
        (481519 'end of statement' _newNNZDomSize[147188])
      }
    }
    (520049 return _void[55])
  }
  function BaseSparseDomImpl[147965](?)._bulkGrow[147217](arg _mt[147989]:_MT[238], arg this[147987]:BaseSparseDomImpl[147965](?)) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[668368] "maybe param" "maybe type" "temp"
    (668371 'move' call_tmp[668368](147221 call(385682 call (partial) getNNZ _mt[243] this[147987])))
    const nnz[147222] "dead at end of block" "const" "insert auto destroy"
    (543625 'init var' nnz[147222] call_tmp[668368])
    (147225 'end of statement')
    unknown call_tmp[668375] "expr temp" "maybe param" "maybe type" "temp"
    (668378 'move' call_tmp[668375](360649 call nnzDom _mt[243] this[147987]))
    unknown call_tmp[668382] "expr temp" "maybe param" "maybe type" "temp"
    (668385 'move' call_tmp[668382](147229 call size _mt[243] call_tmp[668375]))
    unknown call_tmp[668387] "expr temp" "maybe param" "maybe type" "temp"
    (668390 'move' call_tmp[668387](147232 call > nnz[147222] call_tmp[668382]))
    unknown call_tmp[668392] "expr temp" "maybe param" "maybe type" "temp"
    (668395 'move' call_tmp[668392](147265 call _cond_test call_tmp[668387]))
    if call_tmp[668392]
    {
      unknown call_tmp[668397] "expr temp" "maybe param" "maybe type" "temp"
      (668400 'move' call_tmp[668397](147238 call log2 nnz[147222]))
      unknown call_tmp[668402] "expr temp" "maybe param" "maybe type" "temp"
      (668405 'move' call_tmp[668402](147242 call + call_tmp[668397] 1.0))
      unknown call_tmp[668407] "expr temp" "maybe param" "maybe type" "temp"
      (668410 'move' call_tmp[668407](147245 call exp2 call_tmp[668402]))
      unknown call_tmp[668412] "maybe param" "maybe type" "temp"
      (668415 'move' call_tmp[668412](147247 call _cast int(64)[13] call_tmp[668407]))
      const _newNNZDomSize[147249] "dead at end of block" "const" "insert auto destroy"
      (543627 'init var' _newNNZDomSize[147249] call_tmp[668412])
      (147252 'end of statement' nnz[147222])
      unknown call_tmp[668419] "expr temp" "maybe param" "maybe type" "temp"
      (668422 'move' call_tmp[668419](385689 call nnzDom _mt[243] this[147987]))
      unknown call_tmp[668424] "expr temp" "maybe param" "maybe type" "temp"
      (668427 'move' call_tmp[668424](147257 call chpl_build_bounded_range 1 _newNNZDomSize[147249]))
      unknown call_tmp[668429] "expr temp" "maybe param" "maybe type" "temp"
      (668432 'move' call_tmp[668429](147260 call chpl__buildDomainExpr call_tmp[668424]))
      (147262 call = call_tmp[668419] call_tmp[668429])
      (481522 'end of statement' _newNNZDomSize[147249])
    }
    (520051 return _void[55])
  }
  function BaseSparseDomImpl[147965](?)._countDuplicates[147275](arg _mt[147993]:_MT[238], arg this[147991]:BaseSparseDomImpl[147965](?), arg arr[147273]:_any[178](?)) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ret[520055] "RVV" "temp"
    unknown call_tmp[668434] "maybe param" "maybe type" "temp"
    (668437 'move' call_tmp[668434](147282 call - 1))
    unknown dupCount[147284] "dead at end of block" "insert auto destroy"
    (543629 'init var' dupCount[147284] call_tmp[668434])
    (147287 'end of statement')
    unknown call_tmp[668441] "expr temp" "maybe param" "maybe type" "temp"
    (668444 'move' call_tmp[668441](147291 call _dom _mt[243] arr[147273]))
    unknown call_tmp[668448] "expr temp" "maybe param" "maybe type" "temp"
    (668451 'move' call_tmp[668448](147294 call low _mt[243] call_tmp[668441]))
    unknown call_tmp[668453] "maybe param" "maybe type" "temp"
    (668456 'move' call_tmp[668453](147298 call arr[147273] call_tmp[668448]))
    unknown prev[147299] "dead at end of block" "insert auto destroy"
    (543631 'init var' prev[147299] call_tmp[668453])
    (147302 'end of statement')
    {
      unknown _indexOfInterest[147328] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[147329] "expr temp" "temp"
      (147338 'move' _iterator[147329](147336 call _getIterator arr[147273]))
      Defer
      {
        {
          (147354 call _freeIterator _iterator[147329])
        }
      }
      { scopeless type
        (147343 'move' _indexOfInterest[147328](147340 call iteratorIndex _iterator[147329]))
      }
      ForLoop[147330]
      {
        unknown a[147347] "index var" "insert auto destroy"
        (481525 'end of statement')
        (147349 'move' a[147347] _indexOfInterest[147328])
        (481526 'end of statement' a[147347])
        {
          unknown call_tmp[668458] "expr temp" "maybe param" "maybe type" "temp"
          (668461 'move' call_tmp[668458](147307 call == a[147347] prev[147299]))
          unknown call_tmp[668463] "expr temp" "maybe param" "maybe type" "temp"
          (668466 'move' call_tmp[668463](147319 call _cond_test call_tmp[668458]))
          if call_tmp[668463]
          {
            (147311 call += dupCount[147284] 1)
            (481528 'end of statement' dupCount[147284])
          }
          {
            (147316 call = prev[147299] a[147347])
            (481530 'end of statement' prev[147299] a[147347])
          }
          {
          }
        }
        label _continueLabel[147333]
        _indexOfInterest[147328]
        _iterator[147329]
      }
      label _breakLabel[147334]
    }
    (520060 'move' ret[520055](520059 'deref' dupCount[147284]))
    gotoReturn _end__countDuplicates[520053] _end__countDuplicates[520053]
    (481533 'end of statement' dupCount[147284])
    label _end__countDuplicates[520053]
    (520057 return ret[520055])
  }
  where {
    (147280 call isArray arr[147273])
  }
  function BaseSparseDomImpl[147965](?).bulkAdd_prepareInds[147371](arg _mt[147997]:_MT[238], arg this[147995]:BaseSparseDomImpl[147965](?), arg inds[147369]:_any[178](?), arg dataSorted[147373]:_any[178](?), arg isUnique[147375]:_any[178](?), arg cmp[147377]:_any[178](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[668468] "expr temp" "maybe param" "maybe type" "temp"
    (668471 'move' call_tmp[668468](147384 call ! dataSorted[147373]))
    unknown call_tmp[668473] "expr temp" "maybe param" "maybe type" "temp"
    (668476 'move' call_tmp[668473](147393 call _cond_test call_tmp[668468]))
    if call_tmp[668473]
    {
      (147391 call sort inds[147369](comparator = cmp[147377]))
    }
    unknown call_tmp[668478] "expr temp" "maybe param" "maybe type" "temp"
    (668481 'move' call_tmp[668478](147607 call _cond_test 1))
    if call_tmp[668478]
    {
      unknown tmp[427168] "maybe param" "temp"
      (427179 'move' tmp[427168] dataSorted[147373])
      unknown call_tmp[668483] "expr temp" "maybe param" "maybe type" "temp"
      (668486 'move' call_tmp[668483](427181 call _cond_invalid tmp[427168]))
      if call_tmp[668483]
      {
        (427184 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[568615] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[568616] "maybe param" "temp"
      unknown call_tmp[668488] "expr temp" "maybe param" "maybe type" "temp"
      (668491 'move' call_tmp[668488](427169 call isTrue tmp[427168]))
      (568621 'move' tmp[568616](568619 call _cond_test call_tmp[668488]))
      if tmp[568616]
      {
        unknown tmp[568623] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[668493] "expr temp" "maybe param" "maybe type" "temp"
        (668496 'move' call_tmp[668493](147405 call isSorted inds[147369](comparator = cmp[147377])))
        unknown call_tmp[668498] "expr temp" "maybe param" "maybe type" "temp"
        (668501 'move' call_tmp[668498](147406 call ! call_tmp[668493]))
        (568625 'move' tmp[568623](427172 call isTrue call_tmp[668498]))
        (568630 'move' tmp[568615](568627 '_paramFoldLogical' tmp[568616] tmp[568623]))
      }
      {
        (568635 'move' tmp[568615](568632 '_paramFoldLogical' tmp[568616] 0))
      }
      unknown call_tmp[668503] "expr temp" "maybe param" "maybe type" "temp"
      (668506 'move' call_tmp[668503](147433 call _cond_test tmp[568615]))
      if call_tmp[668503]
      {
        (147431 call halt "bulkAdd: Data not sorted, call the function with \n              dataSorted=false")
      }
      unknown call_tmp[668508] "expr temp" "maybe param" "maybe type" "temp"
      (668511 'move' call_tmp[668508](147563 call _cond_test isUnique[147375]))
      if call_tmp[668508]
      {
        unknown call_tmp[668515] "expr temp" "maybe param" "maybe type" "temp"
        (668518 'move' call_tmp[668515](147441 call _dom _mt[243] inds[147369]))
        unknown call_tmp[668522] "maybe param" "maybe type" "temp"
        (668525 'move' call_tmp[668522](147444 call low _mt[243] call_tmp[668515]))
        const indsStart[147447] "dead at end of block" "const" "insert auto destroy"
        (543633 'init var' indsStart[147447] call_tmp[668522])
        (147450 'end of statement')
        unknown call_tmp[668529] "expr temp" "maybe param" "maybe type" "temp"
        (668532 'move' call_tmp[668529](147453 call _dom _mt[243] inds[147369]))
        unknown call_tmp[668536] "maybe param" "maybe type" "temp"
        (668539 'move' call_tmp[668536](147456 call high _mt[243] call_tmp[668529]))
        const indsEnd[147459] "dead at end of block" "const" "insert auto destroy"
        (543635 'init var' indsEnd[147459] call_tmp[668536])
        (147462 'end of statement')
        unknown call_tmp[668541] "maybe param" "maybe type" "temp"
        (668544 'move' call_tmp[668541](147466 call inds[147369] indsStart[147447]))
        unknown lastInd[147467] "dead at end of block" "insert auto destroy"
        (543637 'init var' lastInd[147467] call_tmp[668541])
        (147470 'end of statement' indsStart[147447])
        {
          unknown _indexOfInterest[147522] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[147523] "expr temp" "temp"
          unknown call_tmp[668546] "expr temp" "maybe param" "maybe type" "temp"
          (668549 'move' call_tmp[668546](147536 call + indsStart[147447] 1))
          unknown call_tmp[668551] "expr temp" "maybe param" "maybe type" "temp"
          (668554 'move' call_tmp[668551](147540 call chpl_direct_range_iter call_tmp[668546] indsEnd[147459] 1))
          (147532 'move' _iterator[147523](147530 call _getIterator call_tmp[668551]))
          Defer
          {
            {
              (147556 call _freeIterator _iterator[147523])
            }
          }
          { scopeless type
            (147545 'move' _indexOfInterest[147522](147542 call iteratorIndex _iterator[147523]))
          }
          ForLoop[147524]
          {
            unknown i[147549] "index var" "insert auto destroy"
            (481540 'end of statement')
            (147551 'move' i[147549] _indexOfInterest[147522])
            (481541 'end of statement' i[147549])
            {
              unknown call_tmp[668556] "expr temp" "maybe param" "maybe type" "temp"
              (668559 'move' call_tmp[668556](147482 call inds[147369] i[147549]))
              unknown call_tmp[668561] "expr temp" "maybe param" "maybe type" "temp"
              (668564 'move' call_tmp[668561](147484 call == call_tmp[668556] lastInd[147467]))
              unknown call_tmp[668566] "expr temp" "maybe param" "maybe type" "temp"
              (668569 'move' call_tmp[668566](147515 call _cond_test call_tmp[668561]))
              if call_tmp[668566]
              {
                (147505 call halt "bulkAdd: There are duplicates, call the function \n                  with isUnique=false")
              }
              {
                unknown call_tmp[668571] "expr temp" "maybe param" "maybe type" "temp"
                (668574 'move' call_tmp[668571](147511 call inds[147369] i[147549]))
                (147512 call = lastInd[147467] call_tmp[668571])
                (481544 'end of statement' lastInd[147467] i[147549])
              }
            }
            label _continueLabel[147527]
            _indexOfInterest[147522]
            _iterator[147523]
          }
          label _breakLabel[147528]
        }
      }
      {
        unknown _indexOfInterest[147574] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[147575] "expr temp" "temp"
        (147584 'move' _iterator[147575](147582 call _getIterator inds[147369]))
        Defer
        {
          {
            (147600 call _freeIterator _iterator[147575])
          }
        }
        { scopeless type
          (147589 'move' _indexOfInterest[147574](147586 call iteratorIndex _iterator[147575]))
        }
        ForLoop[147576]
        {
          unknown i[147593] "index var" "insert auto destroy"
          (481548 'end of statement')
          (147595 'move' i[147593] _indexOfInterest[147574])
          (481549 'end of statement' i[147593])
          (147572 call(385722 call (partial) boundsCheck _mt[243] this[147995]) i[147593])
          (481551 'end of statement' i[147593])
          label _continueLabel[147579]
          _indexOfInterest[147574]
          _iterator[147575]
        }
        label _breakLabel[147580]
      }
    }
    (520064 return _void[55])
    (355188 'used modules list'(147380 'use' Sort[267885]))
  }
  function BaseSparseDomImpl[147965](?).__getActualInsertPts[147617](arg _mt[148001]:_MT[238], arg this[147999]:BaseSparseDomImpl[147965](?), arg d[147615]:_any[178](?), arg inds[147619]:_any[178](?), arg isUnique[147621]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[520068] "RVV" "temp"
    unknown indivInsertPts[147633] "dead at end of block" "insert auto destroy"
    unknown call_tmp[668580] "expr temp" "maybe param" "maybe type" "temp"
    (668583 'move' call_tmp[668580](147624 call _dom _mt[243] inds[147619]))
    unknown call_tmp[668585] "expr temp" "maybe param" "maybe type" "temp"
    (668588 'move' call_tmp[668585](147629 call chpl__ensureDomainExpr call_tmp[668580]))
    unknown call_tmp[668590] "expr temp" "maybe param" "maybe type" "temp"
    (668593 'move' call_tmp[668590](147631 call chpl__buildArrayRuntimeType call_tmp[668585] int(64)[13]))
    (543639 'default init var' indivInsertPts[147633] call_tmp[668590])
    (147636 'end of statement')
    unknown actualInsertPts[147648] "dead at end of block" "insert auto destroy"
    unknown call_tmp[668597] "expr temp" "maybe param" "maybe type" "temp"
    (668600 'move' call_tmp[668597](147639 call _dom _mt[243] inds[147619]))
    unknown call_tmp[668602] "expr temp" "maybe param" "maybe type" "temp"
    (668605 'move' call_tmp[668602](147644 call chpl__ensureDomainExpr call_tmp[668597]))
    unknown call_tmp[668607] "expr temp" "maybe param" "maybe type" "temp"
    (668610 'move' call_tmp[668607](147646 call chpl__buildArrayRuntimeType call_tmp[668602] int(64)[13]))
    (543641 'default init var' actualInsertPts[147648] call_tmp[668607])
    (147651 'end of statement')
    unknown call_tmp[668612] "expr temp" "maybe param" "maybe type" "temp"
    (668615 'move' call_tmp[668612](147653 call ! isUnique[147621]))
    unknown call_tmp[668617] "expr temp" "maybe param" "maybe type" "temp"
    (668620 'move' call_tmp[668617](147757 call _cond_test call_tmp[668612]))
    if call_tmp[668617]
    {
      unknown call_tmp[668624] "expr temp" "maybe param" "maybe type" "temp"
      (668627 'move' call_tmp[668624](147657 call _dom _mt[243] inds[147619]))
      unknown call_tmp[668631] "expr temp" "maybe param" "maybe type" "temp"
      (668634 'move' call_tmp[668631](147660 call low _mt[243] call_tmp[668624]))
      unknown call_tmp[668636] "expr temp" "maybe param" "maybe type" "temp"
      (668639 'move' call_tmp[668636](147664 call inds[147619] call_tmp[668631]))
      unknown call_tmp[668641] "maybe param" "maybe type" "temp"
      (668644 'move' call_tmp[668641](147666 call + call_tmp[668636] 1))
      unknown lastInd[147668] "dead at end of block" "insert auto destroy"
      (543643 'init var' lastInd[147668] call_tmp[668641])
      (147671 'end of statement')
      {
        unknown _indexOfInterest[147705] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[147706] "expr temp" "temp"
        unknown call_tmp[668646] "expr temp" "maybe param" "maybe type" "temp"
        (668649 'move' call_tmp[668646](147715 call _getIterator inds[147619]))
        unknown call_tmp[668651] "expr temp" "maybe param" "maybe type" "temp"
        (668654 'move' call_tmp[668651](147718 call _getIterator indivInsertPts[147633]))
        (147720 'move' _iterator[147706](147681 call _build_tuple call_tmp[668646] call_tmp[668651]))
        Defer
        {
          {
            (147750 call _freeIterator _iterator[147706])
          }
        }
        { scopeless type
          (147725 'move' _indexOfInterest[147705](147722 call iteratorIndex _iterator[147706]))
        }
        ForLoop[147707]
        {
          (147730 call _check_tuple_var_decl _indexOfInterest[147705] 2)
          (481554 'end of statement')
          unknown i[147736] "index var" "insert auto destroy"
          (481555 'end of statement')
          (147738 'move' i[147736](147734 call _indexOfInterest[147705] 0))
          (481556 'end of statement' i[147736])
          unknown p[147743] "index var" "insert auto destroy"
          (481558 'end of statement')
          (147745 'move' p[147743](147741 call _indexOfInterest[147705] 1))
          (481559 'end of statement' p[147743])
          {
            unknown call_tmp[668656] "expr temp" "maybe param" "maybe type" "temp"
            (668659 'move' call_tmp[668656](147684 call == i[147736] lastInd[147668]))
            unknown call_tmp[668661] "expr temp" "maybe param" "maybe type" "temp"
            (668664 'move' call_tmp[668661](147698 call _cond_test call_tmp[668656]))
            if call_tmp[668661]
            {
              unknown call_tmp[668666] "expr temp" "maybe param" "maybe type" "temp"
              (668669 'move' call_tmp[668666](147688 call - 1))
              (147690 call = p[147743] call_tmp[668666])
              (481561 'end of statement' p[147743])
            }
            {
              (147695 call = lastInd[147668] i[147736])
              (481563 'end of statement' lastInd[147668] i[147736])
            }
          }
          label _continueLabel[147710]
          _indexOfInterest[147705]
          _iterator[147706]
        }
        label _breakLabel[147711]
      }
    }
    Forall {
      induction variables:
        
        unknown i[147825] "index var" "insert auto destroy"
        
        unknown p[147827] "index var" "insert auto destroy"
      iterated expressions:
        inds[147619]
        indivInsertPts[147633]
      shadow variables:
      other variables
        forall body
      {
        unknown tmp[427189] "maybe param" "temp"
        (427200 'move' tmp[427189] isUnique[147621])
        unknown call_tmp[668671] "expr temp" "maybe param" "maybe type" "temp"
        (668674 'move' call_tmp[668671](427202 call _cond_invalid tmp[427189]))
        if call_tmp[668671]
        {
          (427205 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[568642] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[568643] "maybe param" "temp"
        unknown call_tmp[668676] "expr temp" "maybe param" "maybe type" "temp"
        (668679 'move' call_tmp[668676](427190 call isTrue tmp[427189]))
        (568648 'move' tmp[568643](568646 call _cond_test call_tmp[668676]))
        if tmp[568643]
        {
          (568653 'move' tmp[568642](568650 '_paramFoldLogical' tmp[568643] 1))
        }
        {
          unknown tmp[568655] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[668681] "expr temp" "maybe param" "maybe type" "temp"
          (668684 'move' call_tmp[668681](147773 call - 1))
          unknown call_tmp[668686] "expr temp" "maybe param" "maybe type" "temp"
          (668689 'move' call_tmp[668686](147775 call != p[147827] call_tmp[668681]))
          (568657 'move' tmp[568655](427194 call isTrue call_tmp[668686]))
          (568662 'move' tmp[568642](568659 '_paramFoldLogical' tmp[568643] tmp[568655]))
        }
        unknown call_tmp[668691] "expr temp" "maybe param" "maybe type" "temp"
        (668694 'move' call_tmp[668691](147819 call _cond_test tmp[568642]))
        if call_tmp[668691]
        {
          unknown call_tmp[668698] "maybe param" "maybe type" "temp"
          (668701 'move' call_tmp[668698](147792 call(147787 call (partial) find _mt[243] d[147615]) i[147825]))
          const tmp[147793] "dead at end of block" "const" "insert auto destroy" "temp"
          (543645 'init var' tmp[147793] call_tmp[668698])
          (147800 call _check_tuple_var_decl tmp[147793] 2)
          (481567 'end of statement')
          unknown call_tmp[668703] "maybe param" "maybe type" "temp"
          (668706 'move' call_tmp[668703](147794 call tmp[147793] 0))
          const found[147779] "dead at end of block" "const" "insert auto destroy"
          (543647 'init var' found[147779] call_tmp[668703])
          unknown call_tmp[668708] "maybe param" "maybe type" "temp"
          (668711 'move' call_tmp[668708](147797 call tmp[147793] 1))
          const insertPt[147781] "dead at end of block" "const" "insert auto destroy"
          (543649 'init var' insertPt[147781] call_tmp[668708])
          (147805 'end of statement')
          unknown tmp[568669] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[568670] "maybe param" "temp"
          (568675 'move' tmp[568670](568673 call _cond_test found[147779]))
          if tmp[568670]
          {
            unknown tmp[568677] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            (568679 'move' tmp[568677](147810 call - 1))
            (568684 'move' tmp[568669](568681 '_paramFoldLogical' tmp[568670] tmp[568677]))
          }
          {
            (568689 'move' tmp[568669](568686 '_paramFoldLogical' tmp[568670] insertPt[147781]))
          }
          (147816 call = p[147827] tmp[568669])
          (481568 'end of statement' p[147827] found[147779] insertPt[147781])
        }
      }
    }
    unknown actualAddCnt[147831] "dead at end of block" "insert auto destroy"
    (543651 'init var' actualAddCnt[147831] 0)
    (147834 'end of statement')
    {
      unknown _indexOfInterest[147875] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[147876] "expr temp" "temp"
      unknown call_tmp[668713] "expr temp" "maybe param" "maybe type" "temp"
      (668716 'move' call_tmp[668713](147885 call _getIterator indivInsertPts[147633]))
      unknown call_tmp[668718] "expr temp" "maybe param" "maybe type" "temp"
      (668721 'move' call_tmp[668718](147888 call _getIterator actualInsertPts[147648]))
      (147890 'move' _iterator[147876](147843 call _build_tuple call_tmp[668713] call_tmp[668718]))
      Defer
      {
        {
          (147920 call _freeIterator _iterator[147876])
        }
      }
      { scopeless type
        (147895 'move' _indexOfInterest[147875](147892 call iteratorIndex _iterator[147876]))
      }
      ForLoop[147877]
      {
        (147900 call _check_tuple_var_decl _indexOfInterest[147875] 2)
        (481573 'end of statement')
        unknown ip[147906] "index var" "insert auto destroy"
        (481574 'end of statement')
        (147908 'move' ip[147906](147904 call _indexOfInterest[147875] 0))
        (481575 'end of statement' ip[147906])
        unknown ap[147913] "index var" "insert auto destroy"
        (481577 'end of statement')
        (147915 'move' ap[147913](147911 call _indexOfInterest[147875] 1))
        (481578 'end of statement' ap[147913])
        {
          unknown call_tmp[668723] "expr temp" "maybe param" "maybe type" "temp"
          (668726 'move' call_tmp[668723](147846 call - 1))
          unknown call_tmp[668728] "expr temp" "maybe param" "maybe type" "temp"
          (668731 'move' call_tmp[668728](147848 call != ip[147906] call_tmp[668723]))
          unknown call_tmp[668733] "expr temp" "maybe param" "maybe type" "temp"
          (668736 'move' call_tmp[668733](147869 call _cond_test call_tmp[668728]))
          if call_tmp[668733]
          {
            unknown call_tmp[668738] "expr temp" "maybe param" "maybe type" "temp"
            (668741 'move' call_tmp[668738](147853 call + ip[147906] actualAddCnt[147831]))
            (147855 call = ap[147913] call_tmp[668738])
            (481580 'end of statement' ap[147913] ip[147906] actualAddCnt[147831])
            (147861 call += actualAddCnt[147831] 1)
            (481584 'end of statement' actualAddCnt[147831])
          }
          {
            (147866 call = ap[147913] ip[147906])
            (481586 'end of statement' ap[147913] ip[147906])
          }
        }
        label _continueLabel[147880]
        _indexOfInterest[147875]
        _iterator[147876]
      }
      label _breakLabel[147881]
    }
    unknown call_tmp[668743] "expr temp" "maybe param" "maybe type" "temp"
    (668746 'move' call_tmp[668743](147930 call _build_tuple actualInsertPts[147648] actualAddCnt[147831]))
    (520073 'move' ret[520068](520072 'deref' call_tmp[668743]))
    gotoReturn _end___getActualInsertPts[520066] _end___getActualInsertPts[520066]
    (481589 'end of statement' actualInsertPts[147648] actualAddCnt[147831])
    label _end___getActualInsertPts[520066]
    (520070 return ret[520068])
  }
  function BaseSparseDomImpl[147965](?).dsiClear[147938](arg _mt[148005]:_MT[238], arg this[148003]:BaseSparseDomImpl[147965](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (147959 call halt "not implemented")
    (520077 return _void[55])
  }
  function BaseSparseDomImpl[147965](?).super[802146](arg _mt[802148]:_MT[238], arg this[802150]:BaseSparseDomImpl[147965](?)) : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[802160] "RVV" "temp"
    unknown call_tmp[802167] "expr temp" "maybe param" "maybe type" "temp"
    (802170 'move' call_tmp[802167](802154 '.v' this[802150] c"super"))
    (802165 'move' ret[802160](802164 'deref' call_tmp[802167]))
    (802162 return ret[802160])
  }
  function BaseSparseDomImpl[147965](?).nnzDom[802172](arg _mt[802174]:_MT[238], arg this[802176]:BaseSparseDomImpl[147965](?)) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[802186] "RVV" "temp"
    unknown call_tmp[802193] "expr temp" "maybe param" "maybe type" "temp"
    (802196 'move' call_tmp[802193](802180 '.' this[802176] c"nnzDom"))
    (802191 'move' ret[802186](802190 'addr of' call_tmp[802193]))
    (802188 return ret[802186])
  }
  function BaseSparseDomImpl[147965](?).init[802198](arg _mt[802200]:_MT[238], arg this[802201]:BaseSparseDomImpl[147965](?), param arg rank[802324]:int(64)[13], arg idxType[802327]:_any[178](?), in arg parentDom[802330]:_any[178](?), in arg nnzDom[802333] :
  unknown call_tmp[802397] "expr temp" "maybe param" "maybe type" "temp" =
  unknown call_tmp[802402] "expr temp" "maybe param" "maybe type" "temp") : void[4] "compiler generated" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown super_tmp[802358] "temporary of super field" "temp"
    (802360 'move' super_tmp[802358](802357 '.v' this[802201] c"super"))
    (802211 call(802209 call (partial) init _mt[243] super_tmp[802358]) rank[802324] idxType[802327] parentDom[802330])
    (802384 'end of statement')
    unknown tmp[802363] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[802387] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[802409] "expr temp" "maybe param" "maybe type" "temp"
      (802412 'move' call_tmp[802409](802365 '.v' this[802201] c"super"))
      (802391 'move' call_type_tmp[802387](802368 'typeof' call_tmp[802409]))
    }
    (802369 'move' tmp[802363] call_type_tmp[802387])
    unknown call_tmp[802414] "maybe param" "maybe type" "temp"
    (802417 'move' call_tmp[802414](802374 'cast' tmp[802363] this[802201]))
    unknown chpl__thisAsParent[802371] "dead at end of block" "insert auto destroy" "temp"
    (802395 'init var' chpl__thisAsParent[802371] call_tmp[802414] tmp[802363])
    (802377 'setcid' chpl__thisAsParent[802371])
    (802379 '.=' this[802201] c"nnzDom" nnzDom[802333])
    (802385 'end of statement')
    (802382 'setcid' this[802201])
    (802393 return _void[55])
  }
  function BaseSparseDomImpl[147965](?).writeThis[802419](arg _mt[802423]:_MT[238], arg this[802421]:BaseSparseDomImpl[147965](?), arg f[802422]:_any[178](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (802428 call writeThisDefaultImpl f[802422] this[802421])
    (802433 return _void[55])
  }
  function BaseSparseDomImpl[147965](?).readThis[802435](arg _mt[802439]:_MT[238], arg this[802437]:BaseSparseDomImpl[147965](?), arg f[802438]:_any[178](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (802443 call readThisDefaultImpl f[802438] this[802437])
    (802449 return _void[55])
  }
  type BaseSparseDomImpl[147965](?) val super[355731]:BaseSparseDom[148669](?) "delay instantiation" "super class" unknown nnzDom[146926](146924 call chpl__buildDomainExpr(146921 call chpl_build_bounded_range 1 0))
  function SparseIndexBuffer[148192](?).init[148063](arg _mt[148196]:_MT[238], ref arg this[148194]:SparseIndexBuffer[148192](?), arg size[148061]:_any[178](?), param arg rank[148066]:int(64)[13], arg obj[148069]:_any[178](?)) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[668748] "expr temp" "maybe param" "maybe type" "temp"
    (668751 'move' call_tmp[668748](461783 call _cast int(64)[13] rank[148066]))
    (461785 'init field' this[148194] c"rank" call_tmp[668748])
    (481593 'end of statement')
    unknown tmp[461788] "temp"
    (461791 'init var' tmp[461788] obj[148069] BaseSparseDom[382310](?))
    (461793 'init field' this[148194] c"obj" tmp[461788])
    (481594 'end of statement')
    unknown tmp[461809] "temp" "type variable"
    unknown tmp[568696] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[568697] "maybe param" "temp"
    unknown call_tmp[668753] "expr temp" "maybe param" "maybe type" "temp"
    (668756 'move' call_tmp[668753](461817 '.v' this[148194] c"rank"))
    unknown call_tmp[668758] "expr temp" "maybe param" "maybe type" "temp"
    (668761 'move' call_tmp[668758](461798 call == call_tmp[668753] 1))
    (568702 'move' tmp[568697](568700 call _cond_test call_tmp[668758]))
    if tmp[568697]
    {
      (568707 'move' tmp[568696](568704 '_paramFoldLogical' tmp[568697] int(64)[13]))
    }
    {
      unknown tmp[568709] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[668763] "expr temp" "maybe param" "maybe type" "temp"
      (668766 'move' call_tmp[668763](461820 '.v' this[148194] c"rank"))
      (568711 'move' tmp[568709](461805 call * call_tmp[668763] int(64)[13]))
      (568716 'move' tmp[568696](568713 '_paramFoldLogical' tmp[568697] tmp[568709]))
    }
    (461811 'move' tmp[461809] tmp[568696])
    (461813 'init field' this[148194] c"idxType" tmp[461809])
    (481595 'end of statement')
    unknown call_tmp[668768] "expr temp" "maybe param" "maybe type" "temp"
    (668771 'move' call_tmp[668768](148090 call chpl_build_low_bounded_range 0))
    unknown call_tmp[668773] "expr temp" "maybe param" "maybe type" "temp"
    (668776 'move' call_tmp[668773](148093 call # call_tmp[668768] size[148061]))
    unknown call_tmp[668778] "maybe param" "maybe type" "temp"
    (668781 'move' call_tmp[668778](148096 call chpl__buildDomainExpr call_tmp[668773]))
    unknown tmp[461823] "temp"
    (461825 'init var' tmp[461823] call_tmp[668778])
    (461827 '.=' this[148194] c"bufDom" tmp[461823])
    (481596 'end of statement')
    unknown tmp[461832] "temp"
    unknown call_tmp[668783] "expr temp" "maybe param" "maybe type" "temp"
    (668786 'move' call_tmp[668783](461846 '.' this[148194] c"bufDom"))
    unknown call_tmp[668788] "expr temp" "maybe param" "maybe type" "temp"
    (668791 'move' call_tmp[668788](461837 call chpl__ensureDomainExpr call_tmp[668783]))
    unknown call_tmp[668793] "expr temp" "maybe param" "maybe type" "temp"
    (668796 'move' call_tmp[668793](461849 '.v' this[148194] c"idxType"))
    unknown call_tmp[668798] "expr temp" "maybe param" "maybe type" "temp"
    (668801 'move' call_tmp[668798](461835 call chpl__buildArrayRuntimeType call_tmp[668788] call_tmp[668793]))
    (461840 'default init var' tmp[461832] call_tmp[668798])
    (461842 '.=' this[148194] c"buf" tmp[461832])
    (481597 'end of statement')
    unknown tmp[461853] "temp"
    (461855 'init var' tmp[461853] 0)
    (461857 '.=' this[148194] c"cur" tmp[461853])
    (481598 'end of statement')
    (520079 return _void[55])
  }
  function SparseIndexBuffer[148192](?).deinit[148105](arg _mt[148200]:_MT[238], arg this[148198]:SparseIndexBuffer[148192](?)) : _unknown[51] "destructor" "method" "primary method" "no return value for void"
  {
    (148109 call(385773 call (partial) commit _mt[243] this[148198]))
    (520081 return _void[55])
  }
  function SparseIndexBuffer[148192](?).add[148120](arg _mt[148204]:_MT[238], arg this[148202]:SparseIndexBuffer[148192](?), arg idx[148117] :
  (385778 call idxType _mt[243] this[148202])) : _unknown[51] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[668811] "expr temp" "maybe param" "maybe type" "temp"
    (668814 'move' call_tmp[668811](385790 call cur _mt[243] this[148202]))
    unknown call_tmp[668816] "expr temp" "maybe param" "maybe type" "temp"
    (668819 'move' call_tmp[668816](148125 call(385783 call (partial) buf _mt[243] this[148202]) call_tmp[668811]))
    (148127 call = call_tmp[668816] idx[148117])
    (481600 'end of statement')
    unknown call_tmp[668823] "expr temp" "maybe param" "maybe type" "temp"
    (668826 'move' call_tmp[668823](385796 call cur _mt[243] this[148202]))
    (148133 call += call_tmp[668823] 1)
    (481601 'end of statement')
    unknown call_tmp[668830] "expr temp" "maybe param" "maybe type" "temp"
    (668833 'move' call_tmp[668830](385801 call cur _mt[243] this[148202]))
    unknown call_tmp[668837] "expr temp" "maybe param" "maybe type" "temp"
    (668840 'move' call_tmp[668837](360665 call buf _mt[243] this[148202]))
    unknown call_tmp[668844] "expr temp" "maybe param" "maybe type" "temp"
    (668847 'move' call_tmp[668844](148138 call size _mt[243] call_tmp[668837]))
    unknown call_tmp[668849] "expr temp" "maybe param" "maybe type" "temp"
    (668852 'move' call_tmp[668849](148141 call == call_tmp[668830] call_tmp[668844]))
    unknown call_tmp[668854] "expr temp" "maybe param" "maybe type" "temp"
    (668857 'move' call_tmp[668854](148147 call _cond_test call_tmp[668849]))
    if call_tmp[668854]
    {
      (148145 call(385805 call (partial) commit _mt[243] this[148202]))
    }
    (520083 return _void[55])
  }
  function SparseIndexBuffer[148192](?).commit[148156](arg _mt[148208]:_MT[238], arg this[148206]:SparseIndexBuffer[148192](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[668863] "expr temp" "maybe param" "maybe type" "temp"
    (668866 'move' call_tmp[668863](385810 call cur _mt[243] this[148206]))
    unknown call_tmp[668868] "expr temp" "maybe param" "maybe type" "temp"
    (668871 'move' call_tmp[668868](148160 call >= call_tmp[668863] 1))
    unknown call_tmp[668873] "expr temp" "maybe param" "maybe type" "temp"
    (668876 'move' call_tmp[668873](148178 call _cond_test call_tmp[668868]))
    if call_tmp[668873]
    {
      unknown call_tmp[668880] "expr temp" "maybe param" "maybe type" "temp"
      (668883 'move' call_tmp[668880](360670 call obj _mt[243] this[148206]))
      unknown call_tmp[668891] "expr temp" "maybe param" "maybe type" "temp"
      (668894 'move' call_tmp[668891](385820 call cur _mt[243] this[148206]))
      unknown call_tmp[668896] "expr temp" "maybe param" "maybe type" "temp"
      (668899 'move' call_tmp[668896](148169 call - call_tmp[668891] 1))
      unknown call_tmp[668901] "expr temp" "maybe param" "maybe type" "temp"
      (668904 'move' call_tmp[668901](148171 call chpl_build_high_bounded_range call_tmp[668896]))
      unknown call_tmp[668906] "expr temp" "maybe param" "maybe type" "temp"
      (668909 'move' call_tmp[668906](148174 call(385815 call (partial) buf _mt[243] this[148206]) call_tmp[668901]))
      (148176 call(148163 call (partial) dsiBulkAdd _mt[243] call_tmp[668880]) call_tmp[668906])
    }
    unknown call_tmp[668913] "expr temp" "maybe param" "maybe type" "temp"
    (668916 'move' call_tmp[668913](385825 call cur _mt[243] this[148206]))
    (148186 call = call_tmp[668913] 0)
    (520085 return _void[55])
  }
  function SparseIndexBuffer[148192](?).rank[802451](arg _mt[802453]:_MT[238], arg this[802455]:SparseIndexBuffer[148192](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[802474] "RVV" "param" "temp"
    unknown call_tmp[802488] "expr temp" "maybe param" "maybe type" "temp"
    (802491 'move' call_tmp[802488](802460 'is bound' this[802455] c"rank"))
    if call_tmp[802488]
    {
      unknown call_tmp[802493] "expr temp" "maybe param" "maybe type" "temp"
      (802496 'move' call_tmp[802493](802459 '.' this[802455] c"rank"))
      (802479 'move' ret[802474](802478 'deref' call_tmp[802493]))
      gotoReturn _end_rank[802472] _end_rank[802472]
    }
    {
      (802484 'move' ret[802474](802483 'deref' ?[260]))
      gotoReturn _end_rank[802472] _end_rank[802472]
    }
    label _end_rank[802472]
    (802476 return ret[802474])
  }
  function SparseIndexBuffer[148192](?).rank[802498](arg _mt[802500]:_MT[238], arg this[802502]:SparseIndexBuffer[148192](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[802521] "RVV" "param" "temp"
    unknown call_tmp[802535] "expr temp" "maybe param" "maybe type" "temp"
    (802538 'move' call_tmp[802535](802507 'is bound' this[802502] c"rank"))
    if call_tmp[802535]
    {
      unknown call_tmp[802540] "expr temp" "maybe param" "maybe type" "temp"
      (802543 'move' call_tmp[802540](802506 '.' this[802502] c"rank"))
      (802526 'move' ret[802521](802525 'deref' call_tmp[802540]))
      gotoReturn _end_rank[802519] _end_rank[802519]
    }
    {
      (802531 'move' ret[802521](802530 'deref' ?[260]))
      gotoReturn _end_rank[802519] _end_rank[802519]
    }
    label _end_rank[802519]
    (802523 return ret[802521])
  }
  function SparseIndexBuffer[148192](?).obj[802545](arg _mt[802547]:_MT[238], ref arg this[802549]:SparseIndexBuffer[148192](?)) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[802559] "RVV" "temp"
    unknown call_tmp[802566] "expr temp" "maybe param" "maybe type" "temp"
    (802569 'move' call_tmp[802566](802553 '.' this[802549] c"obj"))
    (802564 'move' ret[802559](802563 'addr of' call_tmp[802566]))
    (802561 return ret[802559])
  }
  function SparseIndexBuffer[148192](?).idxType[802571](arg _mt[802573]:_MT[238], arg this[802575]:SparseIndexBuffer[148192](?)) type : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[802594] "RVV" "temp" "type variable"
    unknown call_tmp[802608] "expr temp" "maybe param" "maybe type" "temp"
    (802611 'move' call_tmp[802608](802580 'is bound' this[802575] c"idxType"))
    if call_tmp[802608]
    {
      unknown call_tmp[802613] "expr temp" "maybe param" "maybe type" "temp"
      (802616 'move' call_tmp[802613](802579 '.v' this[802575] c"idxType"))
      (802599 'move' ret[802594](802598 'deref' call_tmp[802613]))
      gotoReturn _end_idxType[802592] _end_idxType[802592]
    }
    {
      (802604 'move' ret[802594](802603 'deref' _uninstantiated[258]))
      gotoReturn _end_idxType[802592] _end_idxType[802592]
    }
    label _end_idxType[802592]
    (802596 return ret[802594])
  }
  function SparseIndexBuffer[148192](?).idxType[802618](arg _mt[802620]:_MT[238], arg this[802622]:SparseIndexBuffer[148192](?)) type : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[802641] "RVV" "temp" "type variable"
    unknown call_tmp[802655] "expr temp" "maybe param" "maybe type" "temp"
    (802658 'move' call_tmp[802655](802627 'is bound' this[802622] c"idxType"))
    if call_tmp[802655]
    {
      unknown call_tmp[802660] "expr temp" "maybe param" "maybe type" "temp"
      (802663 'move' call_tmp[802660](802626 '.v' this[802622] c"idxType"))
      (802646 'move' ret[802641](802645 'deref' call_tmp[802660]))
      gotoReturn _end_idxType[802639] _end_idxType[802639]
    }
    {
      (802651 'move' ret[802641](802650 'deref' _uninstantiated[258]))
      gotoReturn _end_idxType[802639] _end_idxType[802639]
    }
    label _end_idxType[802639]
    (802643 return ret[802641])
  }
  function SparseIndexBuffer[148192](?).bufDom[802665](arg _mt[802667]:_MT[238], ref arg this[802669]:SparseIndexBuffer[148192](?)) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[802679] "RVV" "temp"
    unknown call_tmp[802686] "expr temp" "maybe param" "maybe type" "temp"
    (802689 'move' call_tmp[802686](802673 '.' this[802669] c"bufDom"))
    (802684 'move' ret[802679](802683 'addr of' call_tmp[802686]))
    (802681 return ret[802679])
  }
  function SparseIndexBuffer[148192](?).buf[802691](arg _mt[802693]:_MT[238], ref arg this[802695]:SparseIndexBuffer[148192](?)) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[802705] "RVV" "temp"
    unknown call_tmp[802712] "expr temp" "maybe param" "maybe type" "temp"
    (802715 'move' call_tmp[802712](802699 '.' this[802695] c"buf"))
    (802710 'move' ret[802705](802709 'addr of' call_tmp[802712]))
    (802707 return ret[802705])
  }
  function SparseIndexBuffer[148192](?).cur[802717](arg _mt[802719]:_MT[238], ref arg this[802721]:SparseIndexBuffer[148192](?)) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[802731] "RVV" "temp"
    unknown call_tmp[802738] "expr temp" "maybe param" "maybe type" "temp"
    (802741 'move' call_tmp[802738](802725 '.' this[802721] c"cur"))
    (802736 'move' ret[802731](802735 'addr of' call_tmp[802738]))
    (802733 return ret[802731])
  }
  function SparseIndexBuffer[148192](?).init=[802743](arg _mt[802746]:_MT[238], ref arg this[802747]:SparseIndexBuffer[148192](?), arg other[802750] :
  (802749 'typeof' this[802747])) : void[4] "compiler generated" "copy initializer" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown call_tmp[802884] "expr temp" "maybe param" "maybe type" "temp"
    (802887 'move' call_tmp[802884](802759 call rank _mt[243] other[802750]))
    unknown call_tmp[802889] "expr temp" "maybe param" "maybe type" "temp"
    (802892 'move' call_tmp[802889](802816 call _cast int(64)[13] call_tmp[802884]))
    (802818 'init field' this[802747] c"rank" call_tmp[802889])
    (802874 'end of statement')
    unknown call_tmp[802896] "maybe param" "maybe type" "temp"
    (802899 'move' call_tmp[802896](802769 call obj _mt[243] other[802750]))
    unknown tmp[802821] "temp"
    (802824 'init var' tmp[802821] call_tmp[802896] BaseSparseDom[382310](?))
    (802826 'init field' this[802747] c"obj" tmp[802821])
    (802875 'end of statement')
    unknown tmp[802830] "temp" "type variable"
    (802832 'move' tmp[802830](802779 call idxType _mt[243] other[802750]))
    (802834 'init field' this[802747] c"idxType" tmp[802830])
    (802876 'end of statement')
    unknown call_tmp[802905] "maybe param" "maybe type" "temp"
    (802908 'move' call_tmp[802905](802789 call bufDom _mt[243] other[802750]))
    unknown tmp[802838] "temp"
    (802840 'init var' tmp[802838] call_tmp[802905])
    (802842 '.=' this[802747] c"bufDom" tmp[802838])
    (802877 'end of statement')
    unknown call_tmp[802912] "maybe param" "maybe type" "temp"
    (802915 'move' call_tmp[802912](802799 call buf _mt[243] other[802750]))
    unknown call_tmp[802917] "expr temp" "maybe param" "maybe type" "temp"
    (802920 'move' call_tmp[802917](802860 '.' this[802747] c"bufDom"))
    unknown call_tmp[802922] "expr temp" "maybe param" "maybe type" "temp"
    (802925 'move' call_tmp[802922](802851 call chpl__ensureDomainExpr call_tmp[802917]))
    unknown call_tmp[802927] "expr temp" "maybe param" "maybe type" "temp"
    (802930 'move' call_tmp[802927](802863 '.v' this[802747] c"idxType"))
    unknown call_tmp[802932] "maybe param" "maybe type" "temp"
    (802935 'move' call_tmp[802932](802849 call chpl__buildArrayRuntimeType call_tmp[802922] call_tmp[802927]))
    unknown tmp[802846] "temp"
    (802854 'init var' tmp[802846] call_tmp[802912] call_tmp[802932])
    (802856 'init field' this[802747] c"buf" tmp[802846])
    (802878 'end of statement')
    unknown call_tmp[802939] "maybe param" "maybe type" "temp"
    (802942 'move' call_tmp[802939](802809 call cur _mt[243] other[802750]))
    unknown tmp[802866] "temp"
    (802868 'init var' tmp[802866] call_tmp[802939])
    (802870 '.=' this[802747] c"cur" tmp[802866])
    (802879 'end of statement')
    (802880 return _void[55])
  }
  function SparseIndexBuffer[148192](?).writeThis[802944](arg _mt[802948]:_MT[238], arg this[802946]:SparseIndexBuffer[148192](?), arg f[802947]:_any[178](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (802953 call writeThisDefaultImpl f[802947] this[802946])
    (802958 return _void[55])
  }
  function SparseIndexBuffer[148192](?).readThis[802960](arg _mt[802964]:_MT[238], arg this[802962]:SparseIndexBuffer[148192](?), arg f[802963]:_any[178](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (802968 call readThisDefaultImpl f[802963] this[802962])
    (802974 return _void[55])
  }
  function chpl_fields_are_comparable[802988](arg _arg1[802990]:SparseIndexBuffer[148192](?), arg _arg2[802991]:SparseIndexBuffer[148192](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[803050]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[803057] "expr temp" "maybe param" "maybe type" "temp"
    (803060 'move' call_tmp[803057](802994 call rank _mt[243] _arg1[802990]))
    unknown call_tmp[803062] "expr temp" "maybe param" "maybe type" "temp"
    (803065 'move' call_tmp[803062](802998 call rank _mt[243] _arg2[802991]))
    unknown call_tmp[803067] "expr temp" "maybe param" "maybe type" "temp"
    (803070 'move' call_tmp[803067](803002 'call resolves' c"==" call_tmp[803057] call_tmp[803062]))
    unknown call_tmp[803072] "expr temp" "maybe param" "maybe type" "temp"
    (803075 'move' call_tmp[803072](803004 call obj _mt[243] _arg1[802990]))
    unknown call_tmp[803077] "expr temp" "maybe param" "maybe type" "temp"
    (803080 'move' call_tmp[803077](803008 call obj _mt[243] _arg2[802991]))
    unknown call_tmp[803082] "expr temp" "maybe param" "maybe type" "temp"
    (803085 'move' call_tmp[803082](803012 'call resolves' c"==" call_tmp[803072] call_tmp[803077]))
    unknown call_tmp[803087] "expr temp" "maybe param" "maybe type" "temp"
    (803090 'move' call_tmp[803087](803014 call bufDom _mt[243] _arg1[802990]))
    unknown call_tmp[803092] "expr temp" "maybe param" "maybe type" "temp"
    (803095 'move' call_tmp[803092](803018 call bufDom _mt[243] _arg2[802991]))
    unknown call_tmp[803097] "expr temp" "maybe param" "maybe type" "temp"
    (803100 'move' call_tmp[803097](803022 'call resolves' c"==" call_tmp[803087] call_tmp[803092]))
    unknown call_tmp[803102] "expr temp" "maybe param" "maybe type" "temp"
    (803105 'move' call_tmp[803102](803024 call buf _mt[243] _arg1[802990]))
    unknown call_tmp[803107] "expr temp" "maybe param" "maybe type" "temp"
    (803110 'move' call_tmp[803107](803028 call buf _mt[243] _arg2[802991]))
    unknown call_tmp[803112] "expr temp" "maybe param" "maybe type" "temp"
    (803115 'move' call_tmp[803112](803032 'call resolves' c"==" call_tmp[803102] call_tmp[803107]))
    unknown call_tmp[803117] "expr temp" "maybe param" "maybe type" "temp"
    (803120 'move' call_tmp[803117](803034 call cur _mt[243] _arg1[802990]))
    unknown call_tmp[803122] "expr temp" "maybe param" "maybe type" "temp"
    (803125 'move' call_tmp[803122](803038 call cur _mt[243] _arg2[802991]))
    unknown call_tmp[803127] "expr temp" "maybe param" "maybe type" "temp"
    (803130 'move' call_tmp[803127](803042 'call resolves' c"==" call_tmp[803117] call_tmp[803122]))
    unknown call_tmp[803132] "expr temp" "maybe param" "maybe type" "temp"
    (803135 'move' call_tmp[803132](803044 '&' call_tmp[803067] call_tmp[803082] call_tmp[803097] call_tmp[803112] call_tmp[803127]))
    (803055 'move' ret[803050](803054 'deref' call_tmp[803132]))
    (803052 return ret[803050])
  }
  function ==[802976](arg _arg1[802978]:SparseIndexBuffer[148192](?), arg _arg2[802979]:SparseIndexBuffer[148192](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[803224]:bool[10] "RVV" "temp"
    unknown call_tmp[803256] "expr temp" "maybe param" "maybe type" "temp"
    (803259 'move' call_tmp[803256](803143 call rank _mt[243] _arg1[802978]))
    unknown call_tmp[803261] "expr temp" "maybe param" "maybe type" "temp"
    (803264 'move' call_tmp[803261](803147 call rank _mt[243] _arg2[802979]))
    unknown call_tmp[803266] "expr temp" "maybe param" "maybe type" "temp"
    (803269 'move' call_tmp[803266](803151 call != call_tmp[803256] call_tmp[803261]))
    if call_tmp[803266]
    {
      (803229 'move' ret[803224](803228 'deref' 0))
      gotoReturn _end_==[803222] _end_==[803222]
    }
    unknown call_tmp[803271] "expr temp" "maybe param" "maybe type" "temp"
    (803274 'move' call_tmp[803271](803157 call obj _mt[243] _arg1[802978]))
    unknown call_tmp[803276] "expr temp" "maybe param" "maybe type" "temp"
    (803279 'move' call_tmp[803276](803161 call obj _mt[243] _arg2[802979]))
    unknown call_tmp[803281] "expr temp" "maybe param" "maybe type" "temp"
    (803284 'move' call_tmp[803281](803165 call != call_tmp[803271] call_tmp[803276]))
    if call_tmp[803281]
    {
      (803234 'move' ret[803224](803233 'deref' 0))
      gotoReturn _end_==[803222] _end_==[803222]
    }
    unknown call_tmp[803286] "expr temp" "maybe param" "maybe type" "temp"
    (803289 'move' call_tmp[803286](803171 call bufDom _mt[243] _arg1[802978]))
    unknown call_tmp[803291] "expr temp" "maybe param" "maybe type" "temp"
    (803294 'move' call_tmp[803291](803175 call bufDom _mt[243] _arg2[802979]))
    unknown call_tmp[803296] "expr temp" "maybe param" "maybe type" "temp"
    (803299 'move' call_tmp[803296](803179 call != call_tmp[803286] call_tmp[803291]))
    if call_tmp[803296]
    {
      (803239 'move' ret[803224](803238 'deref' 0))
      gotoReturn _end_==[803222] _end_==[803222]
    }
    unknown call_tmp[803301] "expr temp" "maybe param" "maybe type" "temp"
    (803304 'move' call_tmp[803301](803185 call buf _mt[243] _arg1[802978]))
    unknown call_tmp[803306] "expr temp" "maybe param" "maybe type" "temp"
    (803309 'move' call_tmp[803306](803189 call buf _mt[243] _arg2[802979]))
    unknown call_tmp[803311] "expr temp" "maybe param" "maybe type" "temp"
    (803314 'move' call_tmp[803311](803193 call != call_tmp[803301] call_tmp[803306]))
    if call_tmp[803311]
    {
      (803244 'move' ret[803224](803243 'deref' 0))
      gotoReturn _end_==[803222] _end_==[803222]
    }
    unknown call_tmp[803316] "expr temp" "maybe param" "maybe type" "temp"
    (803319 'move' call_tmp[803316](803199 call cur _mt[243] _arg1[802978]))
    unknown call_tmp[803321] "expr temp" "maybe param" "maybe type" "temp"
    (803324 'move' call_tmp[803321](803203 call cur _mt[243] _arg2[802979]))
    unknown call_tmp[803326] "expr temp" "maybe param" "maybe type" "temp"
    (803329 'move' call_tmp[803326](803207 call != call_tmp[803316] call_tmp[803321]))
    if call_tmp[803326]
    {
      (803249 'move' ret[803224](803248 'deref' 0))
      gotoReturn _end_==[803222] _end_==[803222]
    }
    (803254 'move' ret[803224](803253 'deref' 1))
    label _end_==[803222]
    (803226 return ret[803224])
  }
  where {
    unknown call_tmp[803331] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (803334 'move' call_tmp[803331](802982 'typeof' _arg1[802978]))
    unknown call_tmp[803336] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (803339 'move' call_tmp[803336](802984 'typeof' _arg2[802979]))
    unknown call_tmp[803341] "expr temp" "maybe param" "maybe type" "temp"
    (803344 'move' call_tmp[803341](802986 call == call_tmp[803331] call_tmp[803336]))
    unknown call_tmp[803346] "expr temp" "maybe param" "maybe type" "temp"
    (803349 'move' call_tmp[803346](803137 call chpl_fields_are_comparable[802988] _arg1[802978] _arg2[802979]))
    (803141 '&' call_tmp[803341] call_tmp[803346])
  }
  function chpl_fields_are_comparable[803363](arg _arg1[803365]:SparseIndexBuffer[148192](?), arg _arg2[803366]:SparseIndexBuffer[148192](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[803425]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[803432] "expr temp" "maybe param" "maybe type" "temp"
    (803435 'move' call_tmp[803432](803369 call rank _mt[243] _arg1[803365]))
    unknown call_tmp[803437] "expr temp" "maybe param" "maybe type" "temp"
    (803440 'move' call_tmp[803437](803373 call rank _mt[243] _arg2[803366]))
    unknown call_tmp[803442] "expr temp" "maybe param" "maybe type" "temp"
    (803445 'move' call_tmp[803442](803377 'call resolves' c"!=" call_tmp[803432] call_tmp[803437]))
    unknown call_tmp[803447] "expr temp" "maybe param" "maybe type" "temp"
    (803450 'move' call_tmp[803447](803379 call obj _mt[243] _arg1[803365]))
    unknown call_tmp[803452] "expr temp" "maybe param" "maybe type" "temp"
    (803455 'move' call_tmp[803452](803383 call obj _mt[243] _arg2[803366]))
    unknown call_tmp[803457] "expr temp" "maybe param" "maybe type" "temp"
    (803460 'move' call_tmp[803457](803387 'call resolves' c"!=" call_tmp[803447] call_tmp[803452]))
    unknown call_tmp[803462] "expr temp" "maybe param" "maybe type" "temp"
    (803465 'move' call_tmp[803462](803389 call bufDom _mt[243] _arg1[803365]))
    unknown call_tmp[803467] "expr temp" "maybe param" "maybe type" "temp"
    (803470 'move' call_tmp[803467](803393 call bufDom _mt[243] _arg2[803366]))
    unknown call_tmp[803472] "expr temp" "maybe param" "maybe type" "temp"
    (803475 'move' call_tmp[803472](803397 'call resolves' c"!=" call_tmp[803462] call_tmp[803467]))
    unknown call_tmp[803477] "expr temp" "maybe param" "maybe type" "temp"
    (803480 'move' call_tmp[803477](803399 call buf _mt[243] _arg1[803365]))
    unknown call_tmp[803482] "expr temp" "maybe param" "maybe type" "temp"
    (803485 'move' call_tmp[803482](803403 call buf _mt[243] _arg2[803366]))
    unknown call_tmp[803487] "expr temp" "maybe param" "maybe type" "temp"
    (803490 'move' call_tmp[803487](803407 'call resolves' c"!=" call_tmp[803477] call_tmp[803482]))
    unknown call_tmp[803492] "expr temp" "maybe param" "maybe type" "temp"
    (803495 'move' call_tmp[803492](803409 call cur _mt[243] _arg1[803365]))
    unknown call_tmp[803497] "expr temp" "maybe param" "maybe type" "temp"
    (803500 'move' call_tmp[803497](803413 call cur _mt[243] _arg2[803366]))
    unknown call_tmp[803502] "expr temp" "maybe param" "maybe type" "temp"
    (803505 'move' call_tmp[803502](803417 'call resolves' c"!=" call_tmp[803492] call_tmp[803497]))
    unknown call_tmp[803507] "expr temp" "maybe param" "maybe type" "temp"
    (803510 'move' call_tmp[803507](803419 '&' call_tmp[803442] call_tmp[803457] call_tmp[803472] call_tmp[803487] call_tmp[803502]))
    (803430 'move' ret[803425](803429 'deref' call_tmp[803507]))
    (803427 return ret[803425])
  }
  function !=[803351](arg _arg1[803353]:SparseIndexBuffer[148192](?), arg _arg2[803354]:SparseIndexBuffer[148192](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[803599]:bool[10] "RVV" "temp"
    unknown call_tmp[803631] "expr temp" "maybe param" "maybe type" "temp"
    (803634 'move' call_tmp[803631](803518 call rank _mt[243] _arg1[803353]))
    unknown call_tmp[803636] "expr temp" "maybe param" "maybe type" "temp"
    (803639 'move' call_tmp[803636](803522 call rank _mt[243] _arg2[803354]))
    unknown call_tmp[803641] "expr temp" "maybe param" "maybe type" "temp"
    (803644 'move' call_tmp[803641](803526 call != call_tmp[803631] call_tmp[803636]))
    if call_tmp[803641]
    {
      (803604 'move' ret[803599](803603 'deref' 1))
      gotoReturn _end_!=[803597] _end_!=[803597]
    }
    unknown call_tmp[803646] "expr temp" "maybe param" "maybe type" "temp"
    (803649 'move' call_tmp[803646](803532 call obj _mt[243] _arg1[803353]))
    unknown call_tmp[803651] "expr temp" "maybe param" "maybe type" "temp"
    (803654 'move' call_tmp[803651](803536 call obj _mt[243] _arg2[803354]))
    unknown call_tmp[803656] "expr temp" "maybe param" "maybe type" "temp"
    (803659 'move' call_tmp[803656](803540 call != call_tmp[803646] call_tmp[803651]))
    if call_tmp[803656]
    {
      (803609 'move' ret[803599](803608 'deref' 1))
      gotoReturn _end_!=[803597] _end_!=[803597]
    }
    unknown call_tmp[803661] "expr temp" "maybe param" "maybe type" "temp"
    (803664 'move' call_tmp[803661](803546 call bufDom _mt[243] _arg1[803353]))
    unknown call_tmp[803666] "expr temp" "maybe param" "maybe type" "temp"
    (803669 'move' call_tmp[803666](803550 call bufDom _mt[243] _arg2[803354]))
    unknown call_tmp[803671] "expr temp" "maybe param" "maybe type" "temp"
    (803674 'move' call_tmp[803671](803554 call != call_tmp[803661] call_tmp[803666]))
    if call_tmp[803671]
    {
      (803614 'move' ret[803599](803613 'deref' 1))
      gotoReturn _end_!=[803597] _end_!=[803597]
    }
    unknown call_tmp[803676] "expr temp" "maybe param" "maybe type" "temp"
    (803679 'move' call_tmp[803676](803560 call buf _mt[243] _arg1[803353]))
    unknown call_tmp[803681] "expr temp" "maybe param" "maybe type" "temp"
    (803684 'move' call_tmp[803681](803564 call buf _mt[243] _arg2[803354]))
    unknown call_tmp[803686] "expr temp" "maybe param" "maybe type" "temp"
    (803689 'move' call_tmp[803686](803568 call != call_tmp[803676] call_tmp[803681]))
    if call_tmp[803686]
    {
      (803619 'move' ret[803599](803618 'deref' 1))
      gotoReturn _end_!=[803597] _end_!=[803597]
    }
    unknown call_tmp[803691] "expr temp" "maybe param" "maybe type" "temp"
    (803694 'move' call_tmp[803691](803574 call cur _mt[243] _arg1[803353]))
    unknown call_tmp[803696] "expr temp" "maybe param" "maybe type" "temp"
    (803699 'move' call_tmp[803696](803578 call cur _mt[243] _arg2[803354]))
    unknown call_tmp[803701] "expr temp" "maybe param" "maybe type" "temp"
    (803704 'move' call_tmp[803701](803582 call != call_tmp[803691] call_tmp[803696]))
    if call_tmp[803701]
    {
      (803624 'move' ret[803599](803623 'deref' 1))
      gotoReturn _end_!=[803597] _end_!=[803597]
    }
    (803629 'move' ret[803599](803628 'deref' 0))
    label _end_!=[803597]
    (803601 return ret[803599])
  }
  where {
    unknown call_tmp[803706] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (803709 'move' call_tmp[803706](803357 'typeof' _arg1[803353]))
    unknown call_tmp[803711] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (803714 'move' call_tmp[803711](803359 'typeof' _arg2[803354]))
    unknown call_tmp[803716] "expr temp" "maybe param" "maybe type" "temp"
    (803719 'move' call_tmp[803716](803361 call == call_tmp[803706] call_tmp[803711]))
    unknown call_tmp[803721] "expr temp" "maybe param" "maybe type" "temp"
    (803724 'move' call_tmp[803721](803512 call chpl_fields_are_comparable[803363] _arg1[803353] _arg2[803354]))
    (803516 '&' call_tmp[803716] call_tmp[803721])
  }
  function chpl_fields_are_comparable[803738](arg _arg1[803740]:SparseIndexBuffer[148192](?), arg _arg2[803741]:SparseIndexBuffer[148192](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[803800]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[803807] "expr temp" "maybe param" "maybe type" "temp"
    (803810 'move' call_tmp[803807](803744 call rank _mt[243] _arg1[803740]))
    unknown call_tmp[803812] "expr temp" "maybe param" "maybe type" "temp"
    (803815 'move' call_tmp[803812](803748 call rank _mt[243] _arg2[803741]))
    unknown call_tmp[803817] "expr temp" "maybe param" "maybe type" "temp"
    (803820 'move' call_tmp[803817](803752 'call resolves' c"<" call_tmp[803807] call_tmp[803812]))
    unknown call_tmp[803822] "expr temp" "maybe param" "maybe type" "temp"
    (803825 'move' call_tmp[803822](803754 call obj _mt[243] _arg1[803740]))
    unknown call_tmp[803827] "expr temp" "maybe param" "maybe type" "temp"
    (803830 'move' call_tmp[803827](803758 call obj _mt[243] _arg2[803741]))
    unknown call_tmp[803832] "expr temp" "maybe param" "maybe type" "temp"
    (803835 'move' call_tmp[803832](803762 'call resolves' c"<" call_tmp[803822] call_tmp[803827]))
    unknown call_tmp[803837] "expr temp" "maybe param" "maybe type" "temp"
    (803840 'move' call_tmp[803837](803764 call bufDom _mt[243] _arg1[803740]))
    unknown call_tmp[803842] "expr temp" "maybe param" "maybe type" "temp"
    (803845 'move' call_tmp[803842](803768 call bufDom _mt[243] _arg2[803741]))
    unknown call_tmp[803847] "expr temp" "maybe param" "maybe type" "temp"
    (803850 'move' call_tmp[803847](803772 'call resolves' c"<" call_tmp[803837] call_tmp[803842]))
    unknown call_tmp[803852] "expr temp" "maybe param" "maybe type" "temp"
    (803855 'move' call_tmp[803852](803774 call buf _mt[243] _arg1[803740]))
    unknown call_tmp[803857] "expr temp" "maybe param" "maybe type" "temp"
    (803860 'move' call_tmp[803857](803778 call buf _mt[243] _arg2[803741]))
    unknown call_tmp[803862] "expr temp" "maybe param" "maybe type" "temp"
    (803865 'move' call_tmp[803862](803782 'call resolves' c"<" call_tmp[803852] call_tmp[803857]))
    unknown call_tmp[803867] "expr temp" "maybe param" "maybe type" "temp"
    (803870 'move' call_tmp[803867](803784 call cur _mt[243] _arg1[803740]))
    unknown call_tmp[803872] "expr temp" "maybe param" "maybe type" "temp"
    (803875 'move' call_tmp[803872](803788 call cur _mt[243] _arg2[803741]))
    unknown call_tmp[803877] "expr temp" "maybe param" "maybe type" "temp"
    (803880 'move' call_tmp[803877](803792 'call resolves' c"<" call_tmp[803867] call_tmp[803872]))
    unknown call_tmp[803882] "expr temp" "maybe param" "maybe type" "temp"
    (803885 'move' call_tmp[803882](803794 '&' call_tmp[803817] call_tmp[803832] call_tmp[803847] call_tmp[803862] call_tmp[803877]))
    (803805 'move' ret[803800](803804 'deref' call_tmp[803882]))
    (803802 return ret[803800])
  }
  function <[803726](arg _arg1[803728]:SparseIndexBuffer[148192](?), arg _arg2[803729]:SparseIndexBuffer[148192](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[804049]:bool[10] "RVV" "temp"
    unknown call_tmp[804106] "expr temp" "maybe param" "maybe type" "temp"
    (804109 'move' call_tmp[804106](803893 call rank _mt[243] _arg1[803728]))
    unknown call_tmp[804111] "expr temp" "maybe param" "maybe type" "temp"
    (804114 'move' call_tmp[804111](803897 call rank _mt[243] _arg2[803729]))
    unknown call_tmp[804116] "expr temp" "maybe param" "maybe type" "temp"
    (804119 'move' call_tmp[804116](803901 call < call_tmp[804106] call_tmp[804111]))
    if call_tmp[804116]
    {
      (804054 'move' ret[804049](804053 'deref' 1))
      gotoReturn _end_<[804047] _end_<[804047]
    }
    unknown call_tmp[804121] "expr temp" "maybe param" "maybe type" "temp"
    (804124 'move' call_tmp[804121](803907 call rank _mt[243] _arg1[803728]))
    unknown call_tmp[804126] "expr temp" "maybe param" "maybe type" "temp"
    (804129 'move' call_tmp[804126](803911 call rank _mt[243] _arg2[803729]))
    unknown call_tmp[804131] "expr temp" "maybe param" "maybe type" "temp"
    (804134 'move' call_tmp[804131](803915 call > call_tmp[804121] call_tmp[804126]))
    if call_tmp[804131]
    {
      (804059 'move' ret[804049](804058 'deref' 0))
      gotoReturn _end_<[804047] _end_<[804047]
    }
    unknown call_tmp[804136] "expr temp" "maybe param" "maybe type" "temp"
    (804139 'move' call_tmp[804136](803921 call obj _mt[243] _arg1[803728]))
    unknown call_tmp[804141] "expr temp" "maybe param" "maybe type" "temp"
    (804144 'move' call_tmp[804141](803925 call obj _mt[243] _arg2[803729]))
    unknown call_tmp[804146] "expr temp" "maybe param" "maybe type" "temp"
    (804149 'move' call_tmp[804146](803929 call < call_tmp[804136] call_tmp[804141]))
    if call_tmp[804146]
    {
      (804064 'move' ret[804049](804063 'deref' 1))
      gotoReturn _end_<[804047] _end_<[804047]
    }
    unknown call_tmp[804151] "expr temp" "maybe param" "maybe type" "temp"
    (804154 'move' call_tmp[804151](803935 call obj _mt[243] _arg1[803728]))
    unknown call_tmp[804156] "expr temp" "maybe param" "maybe type" "temp"
    (804159 'move' call_tmp[804156](803939 call obj _mt[243] _arg2[803729]))
    unknown call_tmp[804161] "expr temp" "maybe param" "maybe type" "temp"
    (804164 'move' call_tmp[804161](803943 call > call_tmp[804151] call_tmp[804156]))
    if call_tmp[804161]
    {
      (804069 'move' ret[804049](804068 'deref' 0))
      gotoReturn _end_<[804047] _end_<[804047]
    }
    unknown call_tmp[804166] "expr temp" "maybe param" "maybe type" "temp"
    (804169 'move' call_tmp[804166](803949 call bufDom _mt[243] _arg1[803728]))
    unknown call_tmp[804171] "expr temp" "maybe param" "maybe type" "temp"
    (804174 'move' call_tmp[804171](803953 call bufDom _mt[243] _arg2[803729]))
    unknown call_tmp[804176] "expr temp" "maybe param" "maybe type" "temp"
    (804179 'move' call_tmp[804176](803957 call < call_tmp[804166] call_tmp[804171]))
    if call_tmp[804176]
    {
      (804074 'move' ret[804049](804073 'deref' 1))
      gotoReturn _end_<[804047] _end_<[804047]
    }
    unknown call_tmp[804181] "expr temp" "maybe param" "maybe type" "temp"
    (804184 'move' call_tmp[804181](803963 call bufDom _mt[243] _arg1[803728]))
    unknown call_tmp[804186] "expr temp" "maybe param" "maybe type" "temp"
    (804189 'move' call_tmp[804186](803967 call bufDom _mt[243] _arg2[803729]))
    unknown call_tmp[804191] "expr temp" "maybe param" "maybe type" "temp"
    (804194 'move' call_tmp[804191](803971 call > call_tmp[804181] call_tmp[804186]))
    if call_tmp[804191]
    {
      (804079 'move' ret[804049](804078 'deref' 0))
      gotoReturn _end_<[804047] _end_<[804047]
    }
    unknown call_tmp[804196] "expr temp" "maybe param" "maybe type" "temp"
    (804199 'move' call_tmp[804196](803977 call buf _mt[243] _arg1[803728]))
    unknown call_tmp[804201] "expr temp" "maybe param" "maybe type" "temp"
    (804204 'move' call_tmp[804201](803981 call buf _mt[243] _arg2[803729]))
    unknown call_tmp[804206] "expr temp" "maybe param" "maybe type" "temp"
    (804209 'move' call_tmp[804206](803985 call < call_tmp[804196] call_tmp[804201]))
    if call_tmp[804206]
    {
      (804084 'move' ret[804049](804083 'deref' 1))
      gotoReturn _end_<[804047] _end_<[804047]
    }
    unknown call_tmp[804211] "expr temp" "maybe param" "maybe type" "temp"
    (804214 'move' call_tmp[804211](803991 call buf _mt[243] _arg1[803728]))
    unknown call_tmp[804216] "expr temp" "maybe param" "maybe type" "temp"
    (804219 'move' call_tmp[804216](803995 call buf _mt[243] _arg2[803729]))
    unknown call_tmp[804221] "expr temp" "maybe param" "maybe type" "temp"
    (804224 'move' call_tmp[804221](803999 call > call_tmp[804211] call_tmp[804216]))
    if call_tmp[804221]
    {
      (804089 'move' ret[804049](804088 'deref' 0))
      gotoReturn _end_<[804047] _end_<[804047]
    }
    unknown call_tmp[804226] "expr temp" "maybe param" "maybe type" "temp"
    (804229 'move' call_tmp[804226](804005 call cur _mt[243] _arg1[803728]))
    unknown call_tmp[804231] "expr temp" "maybe param" "maybe type" "temp"
    (804234 'move' call_tmp[804231](804009 call cur _mt[243] _arg2[803729]))
    unknown call_tmp[804236] "expr temp" "maybe param" "maybe type" "temp"
    (804239 'move' call_tmp[804236](804013 call < call_tmp[804226] call_tmp[804231]))
    if call_tmp[804236]
    {
      (804094 'move' ret[804049](804093 'deref' 1))
      gotoReturn _end_<[804047] _end_<[804047]
    }
    unknown call_tmp[804241] "expr temp" "maybe param" "maybe type" "temp"
    (804244 'move' call_tmp[804241](804019 call cur _mt[243] _arg1[803728]))
    unknown call_tmp[804246] "expr temp" "maybe param" "maybe type" "temp"
    (804249 'move' call_tmp[804246](804023 call cur _mt[243] _arg2[803729]))
    unknown call_tmp[804251] "expr temp" "maybe param" "maybe type" "temp"
    (804254 'move' call_tmp[804251](804027 call > call_tmp[804241] call_tmp[804246]))
    if call_tmp[804251]
    {
      (804099 'move' ret[804049](804098 'deref' 0))
      gotoReturn _end_<[804047] _end_<[804047]
    }
    (804104 'move' ret[804049](804103 'deref' 0))
    label _end_<[804047]
    (804051 return ret[804049])
  }
  where {
    unknown call_tmp[804256] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (804259 'move' call_tmp[804256](803732 'typeof' _arg1[803728]))
    unknown call_tmp[804261] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (804264 'move' call_tmp[804261](803734 'typeof' _arg2[803729]))
    unknown call_tmp[804266] "expr temp" "maybe param" "maybe type" "temp"
    (804269 'move' call_tmp[804266](803736 call == call_tmp[804256] call_tmp[804261]))
    unknown call_tmp[804271] "expr temp" "maybe param" "maybe type" "temp"
    (804274 'move' call_tmp[804271](803887 call chpl_fields_are_comparable[803738] _arg1[803728] _arg2[803729]))
    (803891 '&' call_tmp[804266] call_tmp[804271])
  }
  function chpl_fields_are_comparable[804288](arg _arg1[804290]:SparseIndexBuffer[148192](?), arg _arg2[804291]:SparseIndexBuffer[148192](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[804350]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[804357] "expr temp" "maybe param" "maybe type" "temp"
    (804360 'move' call_tmp[804357](804294 call rank _mt[243] _arg1[804290]))
    unknown call_tmp[804362] "expr temp" "maybe param" "maybe type" "temp"
    (804365 'move' call_tmp[804362](804298 call rank _mt[243] _arg2[804291]))
    unknown call_tmp[804367] "expr temp" "maybe param" "maybe type" "temp"
    (804370 'move' call_tmp[804367](804302 'call resolves' c"<=" call_tmp[804357] call_tmp[804362]))
    unknown call_tmp[804372] "expr temp" "maybe param" "maybe type" "temp"
    (804375 'move' call_tmp[804372](804304 call obj _mt[243] _arg1[804290]))
    unknown call_tmp[804377] "expr temp" "maybe param" "maybe type" "temp"
    (804380 'move' call_tmp[804377](804308 call obj _mt[243] _arg2[804291]))
    unknown call_tmp[804382] "expr temp" "maybe param" "maybe type" "temp"
    (804385 'move' call_tmp[804382](804312 'call resolves' c"<=" call_tmp[804372] call_tmp[804377]))
    unknown call_tmp[804387] "expr temp" "maybe param" "maybe type" "temp"
    (804390 'move' call_tmp[804387](804314 call bufDom _mt[243] _arg1[804290]))
    unknown call_tmp[804392] "expr temp" "maybe param" "maybe type" "temp"
    (804395 'move' call_tmp[804392](804318 call bufDom _mt[243] _arg2[804291]))
    unknown call_tmp[804397] "expr temp" "maybe param" "maybe type" "temp"
    (804400 'move' call_tmp[804397](804322 'call resolves' c"<=" call_tmp[804387] call_tmp[804392]))
    unknown call_tmp[804402] "expr temp" "maybe param" "maybe type" "temp"
    (804405 'move' call_tmp[804402](804324 call buf _mt[243] _arg1[804290]))
    unknown call_tmp[804407] "expr temp" "maybe param" "maybe type" "temp"
    (804410 'move' call_tmp[804407](804328 call buf _mt[243] _arg2[804291]))
    unknown call_tmp[804412] "expr temp" "maybe param" "maybe type" "temp"
    (804415 'move' call_tmp[804412](804332 'call resolves' c"<=" call_tmp[804402] call_tmp[804407]))
    unknown call_tmp[804417] "expr temp" "maybe param" "maybe type" "temp"
    (804420 'move' call_tmp[804417](804334 call cur _mt[243] _arg1[804290]))
    unknown call_tmp[804422] "expr temp" "maybe param" "maybe type" "temp"
    (804425 'move' call_tmp[804422](804338 call cur _mt[243] _arg2[804291]))
    unknown call_tmp[804427] "expr temp" "maybe param" "maybe type" "temp"
    (804430 'move' call_tmp[804427](804342 'call resolves' c"<=" call_tmp[804417] call_tmp[804422]))
    unknown call_tmp[804432] "expr temp" "maybe param" "maybe type" "temp"
    (804435 'move' call_tmp[804432](804344 '&' call_tmp[804367] call_tmp[804382] call_tmp[804397] call_tmp[804412] call_tmp[804427]))
    (804355 'move' ret[804350](804354 'deref' call_tmp[804432]))
    (804352 return ret[804350])
  }
  function <=[804276](arg _arg1[804278]:SparseIndexBuffer[148192](?), arg _arg2[804279]:SparseIndexBuffer[148192](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[804599]:bool[10] "RVV" "temp"
    unknown call_tmp[804656] "expr temp" "maybe param" "maybe type" "temp"
    (804659 'move' call_tmp[804656](804443 call rank _mt[243] _arg1[804278]))
    unknown call_tmp[804661] "expr temp" "maybe param" "maybe type" "temp"
    (804664 'move' call_tmp[804661](804447 call rank _mt[243] _arg2[804279]))
    unknown call_tmp[804666] "expr temp" "maybe param" "maybe type" "temp"
    (804669 'move' call_tmp[804666](804451 call < call_tmp[804656] call_tmp[804661]))
    if call_tmp[804666]
    {
      (804604 'move' ret[804599](804603 'deref' 1))
      gotoReturn _end_<=[804597] _end_<=[804597]
    }
    unknown call_tmp[804671] "expr temp" "maybe param" "maybe type" "temp"
    (804674 'move' call_tmp[804671](804457 call rank _mt[243] _arg1[804278]))
    unknown call_tmp[804676] "expr temp" "maybe param" "maybe type" "temp"
    (804679 'move' call_tmp[804676](804461 call rank _mt[243] _arg2[804279]))
    unknown call_tmp[804681] "expr temp" "maybe param" "maybe type" "temp"
    (804684 'move' call_tmp[804681](804465 call > call_tmp[804671] call_tmp[804676]))
    if call_tmp[804681]
    {
      (804609 'move' ret[804599](804608 'deref' 0))
      gotoReturn _end_<=[804597] _end_<=[804597]
    }
    unknown call_tmp[804686] "expr temp" "maybe param" "maybe type" "temp"
    (804689 'move' call_tmp[804686](804471 call obj _mt[243] _arg1[804278]))
    unknown call_tmp[804691] "expr temp" "maybe param" "maybe type" "temp"
    (804694 'move' call_tmp[804691](804475 call obj _mt[243] _arg2[804279]))
    unknown call_tmp[804696] "expr temp" "maybe param" "maybe type" "temp"
    (804699 'move' call_tmp[804696](804479 call < call_tmp[804686] call_tmp[804691]))
    if call_tmp[804696]
    {
      (804614 'move' ret[804599](804613 'deref' 1))
      gotoReturn _end_<=[804597] _end_<=[804597]
    }
    unknown call_tmp[804701] "expr temp" "maybe param" "maybe type" "temp"
    (804704 'move' call_tmp[804701](804485 call obj _mt[243] _arg1[804278]))
    unknown call_tmp[804706] "expr temp" "maybe param" "maybe type" "temp"
    (804709 'move' call_tmp[804706](804489 call obj _mt[243] _arg2[804279]))
    unknown call_tmp[804711] "expr temp" "maybe param" "maybe type" "temp"
    (804714 'move' call_tmp[804711](804493 call > call_tmp[804701] call_tmp[804706]))
    if call_tmp[804711]
    {
      (804619 'move' ret[804599](804618 'deref' 0))
      gotoReturn _end_<=[804597] _end_<=[804597]
    }
    unknown call_tmp[804716] "expr temp" "maybe param" "maybe type" "temp"
    (804719 'move' call_tmp[804716](804499 call bufDom _mt[243] _arg1[804278]))
    unknown call_tmp[804721] "expr temp" "maybe param" "maybe type" "temp"
    (804724 'move' call_tmp[804721](804503 call bufDom _mt[243] _arg2[804279]))
    unknown call_tmp[804726] "expr temp" "maybe param" "maybe type" "temp"
    (804729 'move' call_tmp[804726](804507 call < call_tmp[804716] call_tmp[804721]))
    if call_tmp[804726]
    {
      (804624 'move' ret[804599](804623 'deref' 1))
      gotoReturn _end_<=[804597] _end_<=[804597]
    }
    unknown call_tmp[804731] "expr temp" "maybe param" "maybe type" "temp"
    (804734 'move' call_tmp[804731](804513 call bufDom _mt[243] _arg1[804278]))
    unknown call_tmp[804736] "expr temp" "maybe param" "maybe type" "temp"
    (804739 'move' call_tmp[804736](804517 call bufDom _mt[243] _arg2[804279]))
    unknown call_tmp[804741] "expr temp" "maybe param" "maybe type" "temp"
    (804744 'move' call_tmp[804741](804521 call > call_tmp[804731] call_tmp[804736]))
    if call_tmp[804741]
    {
      (804629 'move' ret[804599](804628 'deref' 0))
      gotoReturn _end_<=[804597] _end_<=[804597]
    }
    unknown call_tmp[804746] "expr temp" "maybe param" "maybe type" "temp"
    (804749 'move' call_tmp[804746](804527 call buf _mt[243] _arg1[804278]))
    unknown call_tmp[804751] "expr temp" "maybe param" "maybe type" "temp"
    (804754 'move' call_tmp[804751](804531 call buf _mt[243] _arg2[804279]))
    unknown call_tmp[804756] "expr temp" "maybe param" "maybe type" "temp"
    (804759 'move' call_tmp[804756](804535 call < call_tmp[804746] call_tmp[804751]))
    if call_tmp[804756]
    {
      (804634 'move' ret[804599](804633 'deref' 1))
      gotoReturn _end_<=[804597] _end_<=[804597]
    }
    unknown call_tmp[804761] "expr temp" "maybe param" "maybe type" "temp"
    (804764 'move' call_tmp[804761](804541 call buf _mt[243] _arg1[804278]))
    unknown call_tmp[804766] "expr temp" "maybe param" "maybe type" "temp"
    (804769 'move' call_tmp[804766](804545 call buf _mt[243] _arg2[804279]))
    unknown call_tmp[804771] "expr temp" "maybe param" "maybe type" "temp"
    (804774 'move' call_tmp[804771](804549 call > call_tmp[804761] call_tmp[804766]))
    if call_tmp[804771]
    {
      (804639 'move' ret[804599](804638 'deref' 0))
      gotoReturn _end_<=[804597] _end_<=[804597]
    }
    unknown call_tmp[804776] "expr temp" "maybe param" "maybe type" "temp"
    (804779 'move' call_tmp[804776](804555 call cur _mt[243] _arg1[804278]))
    unknown call_tmp[804781] "expr temp" "maybe param" "maybe type" "temp"
    (804784 'move' call_tmp[804781](804559 call cur _mt[243] _arg2[804279]))
    unknown call_tmp[804786] "expr temp" "maybe param" "maybe type" "temp"
    (804789 'move' call_tmp[804786](804563 call < call_tmp[804776] call_tmp[804781]))
    if call_tmp[804786]
    {
      (804644 'move' ret[804599](804643 'deref' 1))
      gotoReturn _end_<=[804597] _end_<=[804597]
    }
    unknown call_tmp[804791] "expr temp" "maybe param" "maybe type" "temp"
    (804794 'move' call_tmp[804791](804569 call cur _mt[243] _arg1[804278]))
    unknown call_tmp[804796] "expr temp" "maybe param" "maybe type" "temp"
    (804799 'move' call_tmp[804796](804573 call cur _mt[243] _arg2[804279]))
    unknown call_tmp[804801] "expr temp" "maybe param" "maybe type" "temp"
    (804804 'move' call_tmp[804801](804577 call > call_tmp[804791] call_tmp[804796]))
    if call_tmp[804801]
    {
      (804649 'move' ret[804599](804648 'deref' 0))
      gotoReturn _end_<=[804597] _end_<=[804597]
    }
    (804654 'move' ret[804599](804653 'deref' 1))
    label _end_<=[804597]
    (804601 return ret[804599])
  }
  where {
    unknown call_tmp[804806] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (804809 'move' call_tmp[804806](804282 'typeof' _arg1[804278]))
    unknown call_tmp[804811] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (804814 'move' call_tmp[804811](804284 'typeof' _arg2[804279]))
    unknown call_tmp[804816] "expr temp" "maybe param" "maybe type" "temp"
    (804819 'move' call_tmp[804816](804286 call == call_tmp[804806] call_tmp[804811]))
    unknown call_tmp[804821] "expr temp" "maybe param" "maybe type" "temp"
    (804824 'move' call_tmp[804821](804437 call chpl_fields_are_comparable[804288] _arg1[804278] _arg2[804279]))
    (804441 '&' call_tmp[804816] call_tmp[804821])
  }
  function chpl_fields_are_comparable[804838](arg _arg1[804840]:SparseIndexBuffer[148192](?), arg _arg2[804841]:SparseIndexBuffer[148192](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[804900]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[804907] "expr temp" "maybe param" "maybe type" "temp"
    (804910 'move' call_tmp[804907](804844 call rank _mt[243] _arg1[804840]))
    unknown call_tmp[804912] "expr temp" "maybe param" "maybe type" "temp"
    (804915 'move' call_tmp[804912](804848 call rank _mt[243] _arg2[804841]))
    unknown call_tmp[804917] "expr temp" "maybe param" "maybe type" "temp"
    (804920 'move' call_tmp[804917](804852 'call resolves' c">" call_tmp[804907] call_tmp[804912]))
    unknown call_tmp[804922] "expr temp" "maybe param" "maybe type" "temp"
    (804925 'move' call_tmp[804922](804854 call obj _mt[243] _arg1[804840]))
    unknown call_tmp[804927] "expr temp" "maybe param" "maybe type" "temp"
    (804930 'move' call_tmp[804927](804858 call obj _mt[243] _arg2[804841]))
    unknown call_tmp[804932] "expr temp" "maybe param" "maybe type" "temp"
    (804935 'move' call_tmp[804932](804862 'call resolves' c">" call_tmp[804922] call_tmp[804927]))
    unknown call_tmp[804937] "expr temp" "maybe param" "maybe type" "temp"
    (804940 'move' call_tmp[804937](804864 call bufDom _mt[243] _arg1[804840]))
    unknown call_tmp[804942] "expr temp" "maybe param" "maybe type" "temp"
    (804945 'move' call_tmp[804942](804868 call bufDom _mt[243] _arg2[804841]))
    unknown call_tmp[804947] "expr temp" "maybe param" "maybe type" "temp"
    (804950 'move' call_tmp[804947](804872 'call resolves' c">" call_tmp[804937] call_tmp[804942]))
    unknown call_tmp[804952] "expr temp" "maybe param" "maybe type" "temp"
    (804955 'move' call_tmp[804952](804874 call buf _mt[243] _arg1[804840]))
    unknown call_tmp[804957] "expr temp" "maybe param" "maybe type" "temp"
    (804960 'move' call_tmp[804957](804878 call buf _mt[243] _arg2[804841]))
    unknown call_tmp[804962] "expr temp" "maybe param" "maybe type" "temp"
    (804965 'move' call_tmp[804962](804882 'call resolves' c">" call_tmp[804952] call_tmp[804957]))
    unknown call_tmp[804967] "expr temp" "maybe param" "maybe type" "temp"
    (804970 'move' call_tmp[804967](804884 call cur _mt[243] _arg1[804840]))
    unknown call_tmp[804972] "expr temp" "maybe param" "maybe type" "temp"
    (804975 'move' call_tmp[804972](804888 call cur _mt[243] _arg2[804841]))
    unknown call_tmp[804977] "expr temp" "maybe param" "maybe type" "temp"
    (804980 'move' call_tmp[804977](804892 'call resolves' c">" call_tmp[804967] call_tmp[804972]))
    unknown call_tmp[804982] "expr temp" "maybe param" "maybe type" "temp"
    (804985 'move' call_tmp[804982](804894 '&' call_tmp[804917] call_tmp[804932] call_tmp[804947] call_tmp[804962] call_tmp[804977]))
    (804905 'move' ret[804900](804904 'deref' call_tmp[804982]))
    (804902 return ret[804900])
  }
  function >[804826](arg _arg1[804828]:SparseIndexBuffer[148192](?), arg _arg2[804829]:SparseIndexBuffer[148192](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[805149]:bool[10] "RVV" "temp"
    unknown call_tmp[805206] "expr temp" "maybe param" "maybe type" "temp"
    (805209 'move' call_tmp[805206](804993 call rank _mt[243] _arg1[804828]))
    unknown call_tmp[805211] "expr temp" "maybe param" "maybe type" "temp"
    (805214 'move' call_tmp[805211](804997 call rank _mt[243] _arg2[804829]))
    unknown call_tmp[805216] "expr temp" "maybe param" "maybe type" "temp"
    (805219 'move' call_tmp[805216](805001 call > call_tmp[805206] call_tmp[805211]))
    if call_tmp[805216]
    {
      (805154 'move' ret[805149](805153 'deref' 1))
      gotoReturn _end_>[805147] _end_>[805147]
    }
    unknown call_tmp[805221] "expr temp" "maybe param" "maybe type" "temp"
    (805224 'move' call_tmp[805221](805007 call rank _mt[243] _arg1[804828]))
    unknown call_tmp[805226] "expr temp" "maybe param" "maybe type" "temp"
    (805229 'move' call_tmp[805226](805011 call rank _mt[243] _arg2[804829]))
    unknown call_tmp[805231] "expr temp" "maybe param" "maybe type" "temp"
    (805234 'move' call_tmp[805231](805015 call < call_tmp[805221] call_tmp[805226]))
    if call_tmp[805231]
    {
      (805159 'move' ret[805149](805158 'deref' 0))
      gotoReturn _end_>[805147] _end_>[805147]
    }
    unknown call_tmp[805236] "expr temp" "maybe param" "maybe type" "temp"
    (805239 'move' call_tmp[805236](805021 call obj _mt[243] _arg1[804828]))
    unknown call_tmp[805241] "expr temp" "maybe param" "maybe type" "temp"
    (805244 'move' call_tmp[805241](805025 call obj _mt[243] _arg2[804829]))
    unknown call_tmp[805246] "expr temp" "maybe param" "maybe type" "temp"
    (805249 'move' call_tmp[805246](805029 call > call_tmp[805236] call_tmp[805241]))
    if call_tmp[805246]
    {
      (805164 'move' ret[805149](805163 'deref' 1))
      gotoReturn _end_>[805147] _end_>[805147]
    }
    unknown call_tmp[805251] "expr temp" "maybe param" "maybe type" "temp"
    (805254 'move' call_tmp[805251](805035 call obj _mt[243] _arg1[804828]))
    unknown call_tmp[805256] "expr temp" "maybe param" "maybe type" "temp"
    (805259 'move' call_tmp[805256](805039 call obj _mt[243] _arg2[804829]))
    unknown call_tmp[805261] "expr temp" "maybe param" "maybe type" "temp"
    (805264 'move' call_tmp[805261](805043 call < call_tmp[805251] call_tmp[805256]))
    if call_tmp[805261]
    {
      (805169 'move' ret[805149](805168 'deref' 0))
      gotoReturn _end_>[805147] _end_>[805147]
    }
    unknown call_tmp[805266] "expr temp" "maybe param" "maybe type" "temp"
    (805269 'move' call_tmp[805266](805049 call bufDom _mt[243] _arg1[804828]))
    unknown call_tmp[805271] "expr temp" "maybe param" "maybe type" "temp"
    (805274 'move' call_tmp[805271](805053 call bufDom _mt[243] _arg2[804829]))
    unknown call_tmp[805276] "expr temp" "maybe param" "maybe type" "temp"
    (805279 'move' call_tmp[805276](805057 call > call_tmp[805266] call_tmp[805271]))
    if call_tmp[805276]
    {
      (805174 'move' ret[805149](805173 'deref' 1))
      gotoReturn _end_>[805147] _end_>[805147]
    }
    unknown call_tmp[805281] "expr temp" "maybe param" "maybe type" "temp"
    (805284 'move' call_tmp[805281](805063 call bufDom _mt[243] _arg1[804828]))
    unknown call_tmp[805286] "expr temp" "maybe param" "maybe type" "temp"
    (805289 'move' call_tmp[805286](805067 call bufDom _mt[243] _arg2[804829]))
    unknown call_tmp[805291] "expr temp" "maybe param" "maybe type" "temp"
    (805294 'move' call_tmp[805291](805071 call < call_tmp[805281] call_tmp[805286]))
    if call_tmp[805291]
    {
      (805179 'move' ret[805149](805178 'deref' 0))
      gotoReturn _end_>[805147] _end_>[805147]
    }
    unknown call_tmp[805296] "expr temp" "maybe param" "maybe type" "temp"
    (805299 'move' call_tmp[805296](805077 call buf _mt[243] _arg1[804828]))
    unknown call_tmp[805301] "expr temp" "maybe param" "maybe type" "temp"
    (805304 'move' call_tmp[805301](805081 call buf _mt[243] _arg2[804829]))
    unknown call_tmp[805306] "expr temp" "maybe param" "maybe type" "temp"
    (805309 'move' call_tmp[805306](805085 call > call_tmp[805296] call_tmp[805301]))
    if call_tmp[805306]
    {
      (805184 'move' ret[805149](805183 'deref' 1))
      gotoReturn _end_>[805147] _end_>[805147]
    }
    unknown call_tmp[805311] "expr temp" "maybe param" "maybe type" "temp"
    (805314 'move' call_tmp[805311](805091 call buf _mt[243] _arg1[804828]))
    unknown call_tmp[805316] "expr temp" "maybe param" "maybe type" "temp"
    (805319 'move' call_tmp[805316](805095 call buf _mt[243] _arg2[804829]))
    unknown call_tmp[805321] "expr temp" "maybe param" "maybe type" "temp"
    (805324 'move' call_tmp[805321](805099 call < call_tmp[805311] call_tmp[805316]))
    if call_tmp[805321]
    {
      (805189 'move' ret[805149](805188 'deref' 0))
      gotoReturn _end_>[805147] _end_>[805147]
    }
    unknown call_tmp[805326] "expr temp" "maybe param" "maybe type" "temp"
    (805329 'move' call_tmp[805326](805105 call cur _mt[243] _arg1[804828]))
    unknown call_tmp[805331] "expr temp" "maybe param" "maybe type" "temp"
    (805334 'move' call_tmp[805331](805109 call cur _mt[243] _arg2[804829]))
    unknown call_tmp[805336] "expr temp" "maybe param" "maybe type" "temp"
    (805339 'move' call_tmp[805336](805113 call > call_tmp[805326] call_tmp[805331]))
    if call_tmp[805336]
    {
      (805194 'move' ret[805149](805193 'deref' 1))
      gotoReturn _end_>[805147] _end_>[805147]
    }
    unknown call_tmp[805341] "expr temp" "maybe param" "maybe type" "temp"
    (805344 'move' call_tmp[805341](805119 call cur _mt[243] _arg1[804828]))
    unknown call_tmp[805346] "expr temp" "maybe param" "maybe type" "temp"
    (805349 'move' call_tmp[805346](805123 call cur _mt[243] _arg2[804829]))
    unknown call_tmp[805351] "expr temp" "maybe param" "maybe type" "temp"
    (805354 'move' call_tmp[805351](805127 call < call_tmp[805341] call_tmp[805346]))
    if call_tmp[805351]
    {
      (805199 'move' ret[805149](805198 'deref' 0))
      gotoReturn _end_>[805147] _end_>[805147]
    }
    (805204 'move' ret[805149](805203 'deref' 0))
    label _end_>[805147]
    (805151 return ret[805149])
  }
  where {
    unknown call_tmp[805356] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (805359 'move' call_tmp[805356](804832 'typeof' _arg1[804828]))
    unknown call_tmp[805361] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (805364 'move' call_tmp[805361](804834 'typeof' _arg2[804829]))
    unknown call_tmp[805366] "expr temp" "maybe param" "maybe type" "temp"
    (805369 'move' call_tmp[805366](804836 call == call_tmp[805356] call_tmp[805361]))
    unknown call_tmp[805371] "expr temp" "maybe param" "maybe type" "temp"
    (805374 'move' call_tmp[805371](804987 call chpl_fields_are_comparable[804838] _arg1[804828] _arg2[804829]))
    (804991 '&' call_tmp[805366] call_tmp[805371])
  }
  function chpl_fields_are_comparable[805388](arg _arg1[805390]:SparseIndexBuffer[148192](?), arg _arg2[805391]:SparseIndexBuffer[148192](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[805450]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[805457] "expr temp" "maybe param" "maybe type" "temp"
    (805460 'move' call_tmp[805457](805394 call rank _mt[243] _arg1[805390]))
    unknown call_tmp[805462] "expr temp" "maybe param" "maybe type" "temp"
    (805465 'move' call_tmp[805462](805398 call rank _mt[243] _arg2[805391]))
    unknown call_tmp[805467] "expr temp" "maybe param" "maybe type" "temp"
    (805470 'move' call_tmp[805467](805402 'call resolves' c">=" call_tmp[805457] call_tmp[805462]))
    unknown call_tmp[805472] "expr temp" "maybe param" "maybe type" "temp"
    (805475 'move' call_tmp[805472](805404 call obj _mt[243] _arg1[805390]))
    unknown call_tmp[805477] "expr temp" "maybe param" "maybe type" "temp"
    (805480 'move' call_tmp[805477](805408 call obj _mt[243] _arg2[805391]))
    unknown call_tmp[805482] "expr temp" "maybe param" "maybe type" "temp"
    (805485 'move' call_tmp[805482](805412 'call resolves' c">=" call_tmp[805472] call_tmp[805477]))
    unknown call_tmp[805487] "expr temp" "maybe param" "maybe type" "temp"
    (805490 'move' call_tmp[805487](805414 call bufDom _mt[243] _arg1[805390]))
    unknown call_tmp[805492] "expr temp" "maybe param" "maybe type" "temp"
    (805495 'move' call_tmp[805492](805418 call bufDom _mt[243] _arg2[805391]))
    unknown call_tmp[805497] "expr temp" "maybe param" "maybe type" "temp"
    (805500 'move' call_tmp[805497](805422 'call resolves' c">=" call_tmp[805487] call_tmp[805492]))
    unknown call_tmp[805502] "expr temp" "maybe param" "maybe type" "temp"
    (805505 'move' call_tmp[805502](805424 call buf _mt[243] _arg1[805390]))
    unknown call_tmp[805507] "expr temp" "maybe param" "maybe type" "temp"
    (805510 'move' call_tmp[805507](805428 call buf _mt[243] _arg2[805391]))
    unknown call_tmp[805512] "expr temp" "maybe param" "maybe type" "temp"
    (805515 'move' call_tmp[805512](805432 'call resolves' c">=" call_tmp[805502] call_tmp[805507]))
    unknown call_tmp[805517] "expr temp" "maybe param" "maybe type" "temp"
    (805520 'move' call_tmp[805517](805434 call cur _mt[243] _arg1[805390]))
    unknown call_tmp[805522] "expr temp" "maybe param" "maybe type" "temp"
    (805525 'move' call_tmp[805522](805438 call cur _mt[243] _arg2[805391]))
    unknown call_tmp[805527] "expr temp" "maybe param" "maybe type" "temp"
    (805530 'move' call_tmp[805527](805442 'call resolves' c">=" call_tmp[805517] call_tmp[805522]))
    unknown call_tmp[805532] "expr temp" "maybe param" "maybe type" "temp"
    (805535 'move' call_tmp[805532](805444 '&' call_tmp[805467] call_tmp[805482] call_tmp[805497] call_tmp[805512] call_tmp[805527]))
    (805455 'move' ret[805450](805454 'deref' call_tmp[805532]))
    (805452 return ret[805450])
  }
  function >=[805376](arg _arg1[805378]:SparseIndexBuffer[148192](?), arg _arg2[805379]:SparseIndexBuffer[148192](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[805699]:bool[10] "RVV" "temp"
    unknown call_tmp[805756] "expr temp" "maybe param" "maybe type" "temp"
    (805759 'move' call_tmp[805756](805543 call rank _mt[243] _arg1[805378]))
    unknown call_tmp[805761] "expr temp" "maybe param" "maybe type" "temp"
    (805764 'move' call_tmp[805761](805547 call rank _mt[243] _arg2[805379]))
    unknown call_tmp[805766] "expr temp" "maybe param" "maybe type" "temp"
    (805769 'move' call_tmp[805766](805551 call > call_tmp[805756] call_tmp[805761]))
    if call_tmp[805766]
    {
      (805704 'move' ret[805699](805703 'deref' 1))
      gotoReturn _end_>=[805697] _end_>=[805697]
    }
    unknown call_tmp[805771] "expr temp" "maybe param" "maybe type" "temp"
    (805774 'move' call_tmp[805771](805557 call rank _mt[243] _arg1[805378]))
    unknown call_tmp[805776] "expr temp" "maybe param" "maybe type" "temp"
    (805779 'move' call_tmp[805776](805561 call rank _mt[243] _arg2[805379]))
    unknown call_tmp[805781] "expr temp" "maybe param" "maybe type" "temp"
    (805784 'move' call_tmp[805781](805565 call < call_tmp[805771] call_tmp[805776]))
    if call_tmp[805781]
    {
      (805709 'move' ret[805699](805708 'deref' 0))
      gotoReturn _end_>=[805697] _end_>=[805697]
    }
    unknown call_tmp[805786] "expr temp" "maybe param" "maybe type" "temp"
    (805789 'move' call_tmp[805786](805571 call obj _mt[243] _arg1[805378]))
    unknown call_tmp[805791] "expr temp" "maybe param" "maybe type" "temp"
    (805794 'move' call_tmp[805791](805575 call obj _mt[243] _arg2[805379]))
    unknown call_tmp[805796] "expr temp" "maybe param" "maybe type" "temp"
    (805799 'move' call_tmp[805796](805579 call > call_tmp[805786] call_tmp[805791]))
    if call_tmp[805796]
    {
      (805714 'move' ret[805699](805713 'deref' 1))
      gotoReturn _end_>=[805697] _end_>=[805697]
    }
    unknown call_tmp[805801] "expr temp" "maybe param" "maybe type" "temp"
    (805804 'move' call_tmp[805801](805585 call obj _mt[243] _arg1[805378]))
    unknown call_tmp[805806] "expr temp" "maybe param" "maybe type" "temp"
    (805809 'move' call_tmp[805806](805589 call obj _mt[243] _arg2[805379]))
    unknown call_tmp[805811] "expr temp" "maybe param" "maybe type" "temp"
    (805814 'move' call_tmp[805811](805593 call < call_tmp[805801] call_tmp[805806]))
    if call_tmp[805811]
    {
      (805719 'move' ret[805699](805718 'deref' 0))
      gotoReturn _end_>=[805697] _end_>=[805697]
    }
    unknown call_tmp[805816] "expr temp" "maybe param" "maybe type" "temp"
    (805819 'move' call_tmp[805816](805599 call bufDom _mt[243] _arg1[805378]))
    unknown call_tmp[805821] "expr temp" "maybe param" "maybe type" "temp"
    (805824 'move' call_tmp[805821](805603 call bufDom _mt[243] _arg2[805379]))
    unknown call_tmp[805826] "expr temp" "maybe param" "maybe type" "temp"
    (805829 'move' call_tmp[805826](805607 call > call_tmp[805816] call_tmp[805821]))
    if call_tmp[805826]
    {
      (805724 'move' ret[805699](805723 'deref' 1))
      gotoReturn _end_>=[805697] _end_>=[805697]
    }
    unknown call_tmp[805831] "expr temp" "maybe param" "maybe type" "temp"
    (805834 'move' call_tmp[805831](805613 call bufDom _mt[243] _arg1[805378]))
    unknown call_tmp[805836] "expr temp" "maybe param" "maybe type" "temp"
    (805839 'move' call_tmp[805836](805617 call bufDom _mt[243] _arg2[805379]))
    unknown call_tmp[805841] "expr temp" "maybe param" "maybe type" "temp"
    (805844 'move' call_tmp[805841](805621 call < call_tmp[805831] call_tmp[805836]))
    if call_tmp[805841]
    {
      (805729 'move' ret[805699](805728 'deref' 0))
      gotoReturn _end_>=[805697] _end_>=[805697]
    }
    unknown call_tmp[805846] "expr temp" "maybe param" "maybe type" "temp"
    (805849 'move' call_tmp[805846](805627 call buf _mt[243] _arg1[805378]))
    unknown call_tmp[805851] "expr temp" "maybe param" "maybe type" "temp"
    (805854 'move' call_tmp[805851](805631 call buf _mt[243] _arg2[805379]))
    unknown call_tmp[805856] "expr temp" "maybe param" "maybe type" "temp"
    (805859 'move' call_tmp[805856](805635 call > call_tmp[805846] call_tmp[805851]))
    if call_tmp[805856]
    {
      (805734 'move' ret[805699](805733 'deref' 1))
      gotoReturn _end_>=[805697] _end_>=[805697]
    }
    unknown call_tmp[805861] "expr temp" "maybe param" "maybe type" "temp"
    (805864 'move' call_tmp[805861](805641 call buf _mt[243] _arg1[805378]))
    unknown call_tmp[805866] "expr temp" "maybe param" "maybe type" "temp"
    (805869 'move' call_tmp[805866](805645 call buf _mt[243] _arg2[805379]))
    unknown call_tmp[805871] "expr temp" "maybe param" "maybe type" "temp"
    (805874 'move' call_tmp[805871](805649 call < call_tmp[805861] call_tmp[805866]))
    if call_tmp[805871]
    {
      (805739 'move' ret[805699](805738 'deref' 0))
      gotoReturn _end_>=[805697] _end_>=[805697]
    }
    unknown call_tmp[805876] "expr temp" "maybe param" "maybe type" "temp"
    (805879 'move' call_tmp[805876](805655 call cur _mt[243] _arg1[805378]))
    unknown call_tmp[805881] "expr temp" "maybe param" "maybe type" "temp"
    (805884 'move' call_tmp[805881](805659 call cur _mt[243] _arg2[805379]))
    unknown call_tmp[805886] "expr temp" "maybe param" "maybe type" "temp"
    (805889 'move' call_tmp[805886](805663 call > call_tmp[805876] call_tmp[805881]))
    if call_tmp[805886]
    {
      (805744 'move' ret[805699](805743 'deref' 1))
      gotoReturn _end_>=[805697] _end_>=[805697]
    }
    unknown call_tmp[805891] "expr temp" "maybe param" "maybe type" "temp"
    (805894 'move' call_tmp[805891](805669 call cur _mt[243] _arg1[805378]))
    unknown call_tmp[805896] "expr temp" "maybe param" "maybe type" "temp"
    (805899 'move' call_tmp[805896](805673 call cur _mt[243] _arg2[805379]))
    unknown call_tmp[805901] "expr temp" "maybe param" "maybe type" "temp"
    (805904 'move' call_tmp[805901](805677 call < call_tmp[805891] call_tmp[805896]))
    if call_tmp[805901]
    {
      (805749 'move' ret[805699](805748 'deref' 0))
      gotoReturn _end_>=[805697] _end_>=[805697]
    }
    (805754 'move' ret[805699](805753 'deref' 1))
    label _end_>=[805697]
    (805701 return ret[805699])
  }
  where {
    unknown call_tmp[805906] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (805909 'move' call_tmp[805906](805382 'typeof' _arg1[805378]))
    unknown call_tmp[805911] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (805914 'move' call_tmp[805911](805384 'typeof' _arg2[805379]))
    unknown call_tmp[805916] "expr temp" "maybe param" "maybe type" "temp"
    (805919 'move' call_tmp[805916](805386 call == call_tmp[805906] call_tmp[805911]))
    unknown call_tmp[805921] "expr temp" "maybe param" "maybe type" "temp"
    (805924 'move' call_tmp[805921](805537 call chpl_fields_are_comparable[805388] _arg1[805378] _arg2[805379]))
    (805541 '&' call_tmp[805916] call_tmp[805921])
  }
  function =[805926](ref arg _arg1[805928]:SparseIndexBuffer[148192](?), const?  ref arg _arg2[805929]:SparseIndexBuffer[148192](?)) : void[4] "assignop" "compiler generated" "last resort"
  {
    unknown call_tmp[805988] "expr temp" "maybe param" "maybe type" "temp"
    (805991 'move' call_tmp[805988](805939 call obj _mt[243] _arg1[805928]))
    unknown call_tmp[805995] "expr temp" "maybe param" "maybe type" "temp"
    (805998 'move' call_tmp[805995](805943 call obj _mt[243] _arg2[805929]))
    (805947 call = call_tmp[805988] call_tmp[805995])
    (805980 'end of statement')
    unknown call_tmp[806002] "expr temp" "maybe param" "maybe type" "temp"
    (806005 'move' call_tmp[806002](805949 call bufDom _mt[243] _arg1[805928]))
    unknown call_tmp[806009] "expr temp" "maybe param" "maybe type" "temp"
    (806012 'move' call_tmp[806009](805953 call bufDom _mt[243] _arg2[805929]))
    (805957 call = call_tmp[806002] call_tmp[806009])
    (805981 'end of statement')
    unknown call_tmp[806016] "expr temp" "maybe param" "maybe type" "temp"
    (806019 'move' call_tmp[806016](805959 call buf _mt[243] _arg1[805928]))
    unknown call_tmp[806023] "expr temp" "maybe param" "maybe type" "temp"
    (806026 'move' call_tmp[806023](805963 call buf _mt[243] _arg2[805929]))
    (805967 call = call_tmp[806016] call_tmp[806023])
    (805982 'end of statement')
    unknown call_tmp[806030] "expr temp" "maybe param" "maybe type" "temp"
    (806033 'move' call_tmp[806030](805969 call cur _mt[243] _arg1[805928]))
    unknown call_tmp[806037] "expr temp" "maybe param" "maybe type" "temp"
    (806040 'move' call_tmp[806037](805973 call cur _mt[243] _arg2[805929]))
    (805977 call = call_tmp[806030] call_tmp[806037])
    (805984 return _void[55])
  }
  where {
    unknown call_tmp[806042] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (806045 'move' call_tmp[806042](805932 'typeof' _arg1[805928]))
    unknown call_tmp[806047] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (806050 'move' call_tmp[806047](805934 'typeof' _arg2[805929]))
    (805936 call == call_tmp[806042] call_tmp[806047])
  }
  function chpl__defaultHash[806052](arg r[806054]:SparseIndexBuffer[148192](?)) : _unknown[51] "compiler generated" "last resort"
  {
    unknown ret[806112] "RVV" "temp"
    unknown call_tmp[806119] "expr temp" "maybe param" "maybe type" "temp"
    (806122 'move' call_tmp[806119](806098 call cur _mt[243] r[806054]))
    unknown call_tmp[806124] "expr temp" "maybe param" "maybe type" "temp"
    (806127 'move' call_tmp[806124](806102 call chpl__defaultHash call_tmp[806119]))
    unknown call_tmp[806129] "expr temp" "maybe param" "maybe type" "temp"
    (806132 'move' call_tmp[806129](806089 call buf _mt[243] r[806054]))
    unknown call_tmp[806134] "expr temp" "maybe param" "maybe type" "temp"
    (806137 'move' call_tmp[806134](806093 call chpl__defaultHash call_tmp[806129]))
    unknown call_tmp[806139] "expr temp" "maybe param" "maybe type" "temp"
    (806142 'move' call_tmp[806139](806080 call bufDom _mt[243] r[806054]))
    unknown call_tmp[806144] "expr temp" "maybe param" "maybe type" "temp"
    (806147 'move' call_tmp[806144](806084 call chpl__defaultHash call_tmp[806139]))
    unknown call_tmp[806149] "expr temp" "maybe param" "maybe type" "temp"
    (806152 'move' call_tmp[806149](806071 call idxType _mt[243] r[806054]))
    unknown call_tmp[806154] "expr temp" "maybe param" "maybe type" "temp"
    (806157 'move' call_tmp[806154](806075 call chpl__defaultHash call_tmp[806149]))
    unknown call_tmp[806159] "expr temp" "maybe param" "maybe type" "temp"
    (806162 'move' call_tmp[806159](806062 call obj _mt[243] r[806054]))
    unknown call_tmp[806164] "expr temp" "maybe param" "maybe type" "temp"
    (806167 'move' call_tmp[806164](806066 call chpl__defaultHash call_tmp[806159]))
    unknown call_tmp[806169] "expr temp" "maybe param" "maybe type" "temp"
    (806172 'move' call_tmp[806169](806056 call rank _mt[243] r[806054]))
    unknown call_tmp[806174] "expr temp" "maybe param" "maybe type" "temp"
    (806177 'move' call_tmp[806174](806060 call chpl__defaultHash call_tmp[806169]))
    unknown call_tmp[806179] "expr temp" "maybe param" "maybe type" "temp"
    (806182 'move' call_tmp[806179](806068 call chpl__defaultHashCombine call_tmp[806164] call_tmp[806174] 2))
    unknown call_tmp[806184] "expr temp" "maybe param" "maybe type" "temp"
    (806187 'move' call_tmp[806184](806077 call chpl__defaultHashCombine call_tmp[806154] call_tmp[806179] 3))
    unknown call_tmp[806189] "expr temp" "maybe param" "maybe type" "temp"
    (806192 'move' call_tmp[806189](806086 call chpl__defaultHashCombine call_tmp[806144] call_tmp[806184] 4))
    unknown call_tmp[806194] "expr temp" "maybe param" "maybe type" "temp"
    (806197 'move' call_tmp[806194](806095 call chpl__defaultHashCombine call_tmp[806134] call_tmp[806189] 5))
    unknown call_tmp[806199] "expr temp" "maybe param" "maybe type" "temp"
    (806202 'move' call_tmp[806199](806104 call chpl__defaultHashCombine call_tmp[806124] call_tmp[806194] 6))
    (806117 'move' ret[806112](806116 'deref' call_tmp[806199]))
    (806114 return ret[806112])
  }
  type SparseIndexBuffer[148192](?) unknown rank[148010] "param" int(64)[13] val obj[148015]:BaseSparseDom[382310](?) BaseSparseDom[382310](?) unknown idxType[148031] "type variable"(148028 IfExpr (148021 call == rank[148010] 1) then
  { scopeless
    int(64)[13]
  } else
  { scopeless
    (148026 call * rank[148010] int(64)[13])
  } ) unknown bufDom[148039](148037 call chpl__buildDomainRuntimeType defaultDist[94058] 1) unknown buf[148050](148048 call chpl__buildArrayRuntimeType(148046 call chpl__ensureDomainExpr bufDom[148039]) idxType[148031]) val cur[148055]:int(64)[13] 0
  function BaseSparseDom[148669](?).getNNZ[148228](arg _mt[148673]:_MT[238], arg this[148671]:BaseSparseDom[148669](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    unknown ret[520089] "RVV" "temp"
    (148250 call halt "nnz queried on base class")
    (520091 return ret[520089])
  }
  { scopeless type
    int(64)[13]
  }
  function BaseSparseDom[148669](?).deinit[148258](arg _mt[148677]:_MT[238], arg this[148675]:BaseSparseDom[148669](?)) : _unknown[51] "destructor" "method" "primary method" "no return value for void"
  {
    (520093 return _void[55])
  }
  function BaseSparseDom[148669](?).dsiClear[148265](arg _mt[148681]:_MT[238], arg this[148679]:BaseSparseDom[148669](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (148286 call halt "clear not implemented for this distribution - BaseSparseDom")
    (520095 return _void[55])
  }
  function BaseSparseDom[148669](?).dsiBulkAdd[148304](arg _mt[148685]:_MT[238], arg this[148683]:BaseSparseDom[148669](?), arg inds[148301]:_array[133600](?), arg dataSorted[148307] :
  0 =
  0, arg isUnique[148311] :
  0 =
  0, arg preserveInds[148315] :
  1 =
  1, arg addOn[148319] :
  nilLocale[89943] =
  nilLocale[89943]) : _unknown[51] "compiler added where" "method" "primary method"
  {
    unknown ret[520099] "RVV" "temp"
    (148342 call halt "Bulk addition is not supported by this sparse domain")
    (481607 'end of statement')
    (520105 'move' ret[520099](520104 'coerce' 0 int(64)[13]))
    (520101 return ret[520099])
  }
  where {
    unknown call_tmp[668920] "expr temp" "maybe param" "maybe type" "temp"
    (668923 'move' call_tmp[668920](385830 call rank _mt[243] this[148683]))
    unknown call_tmp[668927] "expr temp" "maybe param" "maybe type" "temp"
    (668930 'move' call_tmp[668927](385835 call idxType _mt[243] this[148683]))
    unknown call_tmp[668932] "expr temp" "maybe param" "maybe type" "temp"
    (668935 'move' call_tmp[668932](148296 call chpl__buildIndexType call_tmp[668920] call_tmp[668927]))
    unknown call_tmp[668939] "expr temp" "maybe param" "maybe type" "temp"
    (668942 'move' call_tmp[668939](461867 call eltType _mt[243] inds[148301]))
    unknown call_tmp[668944] "expr temp" "maybe param" "maybe type" "temp"
    (668947 'move' call_tmp[668944](461871 call == call_tmp[668932] call_tmp[668939]))
    (461865 call & 1 call_tmp[668944])
  }
  { scopeless type
    int(64)[13]
  }
  function BaseSparseDom[148669](?).boundsCheck[148361](arg _mt[148689]:_MT[238], arg this[148687]:BaseSparseDom[148669](?), arg ind[148358] :
  unknown call_tmp[668951] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "method" "primary method" "no return value for void"
  {
    unknown ret[520109] "RVV" "temp"
    unknown call_tmp[668963] "expr temp" "maybe param" "maybe type" "temp"
    (668966 'move' call_tmp[668963](148420 call _cond_test 1))
    if call_tmp[668963]
    {
      unknown call_tmp[668970] "expr temp" "maybe param" "maybe type" "temp"
      (668973 'move' call_tmp[668970](360675 call parentDom _mt[243] this[148687]))
      unknown call_tmp[668977] "expr temp" "maybe param" "maybe type" "temp"
      (668980 'move' call_tmp[668977](148371 call(148366 call (partial) contains _mt[243] call_tmp[668970]) ind[148358]))
      unknown call_tmp[668982] "expr temp" "maybe param" "maybe type" "temp"
      (668985 'move' call_tmp[668982](148372 call ! call_tmp[668977]))
      unknown call_tmp[668987] "expr temp" "maybe param" "maybe type" "temp"
      (668990 'move' call_tmp[668987](148415 call _cond_test call_tmp[668982]))
      if call_tmp[668987]
      {
        unknown call_tmp[668994] "expr temp" "maybe param" "maybe type" "temp"
        (668997 'move' call_tmp[668994](385854 call parentDom _mt[243] this[148687]))
        (148413 call halt "Sparse domain/array index out of bounds: " ind[148358] " (expected to be within " call_tmp[668994] ")")
      }
    }
    (520111 return ret[520109])
  }
  { scopeless type
    void[4]
  }
  function BaseSparseDom[148669](?).dsiDim[148435](arg _mt[148693]:_MT[238], arg this[148691]:BaseSparseDom[148669](?), arg d[148432]:int(64)[13]) : _unknown[51] "method" "primary method"
  {
    unknown ret[520115] "RVV" "temp"
    unknown call_tmp[669001] "expr temp" "maybe param" "maybe type" "temp"
    (669004 'move' call_tmp[669001](360680 call parentDom _mt[243] this[148691]))
    unknown call_tmp[669008] "expr temp" "maybe param" "maybe type" "temp"
    (669011 'move' call_tmp[669008](148443 call(148438 call (partial) dim _mt[243] call_tmp[669001]) d[148432]))
    (520120 'move' ret[520115](520119 'deref' call_tmp[669008]))
    (520117 return ret[520115])
  }
  function BaseSparseDom[148669](?).dsiDims[148451](arg _mt[148697]:_MT[238], arg this[148695]:BaseSparseDom[148669](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[520124] "RVV" "temp"
    unknown call_tmp[669015] "expr temp" "maybe param" "maybe type" "temp"
    (669018 'move' call_tmp[669015](360685 call parentDom _mt[243] this[148695]))
    unknown call_tmp[669022] "expr temp" "maybe param" "maybe type" "temp"
    (669025 'move' call_tmp[669022](148458 call(148454 call (partial) dims _mt[243] call_tmp[669015])))
    (520129 'move' ret[520124](520128 'deref' call_tmp[669022]))
    (520126 return ret[520124])
  }
  function BaseSparseDom[148669](?).dsiNumIndices[148466](arg _mt[148701]:_MT[238], arg this[148699]:BaseSparseDom[148669](?)) : _unknown[51] "method" "primary method" "no parens"
  {
    unknown ret[520133] "RVV" "temp"
    unknown call_tmp[669029] "expr temp" "maybe param" "maybe type" "temp"
    (669032 'move' call_tmp[669029](148470 call(385859 call (partial) getNNZ _mt[243] this[148699])))
    (520138 'move' ret[520133](520137 'deref' call_tmp[669029]))
    (520135 return ret[520133])
  }
  function BaseSparseDom[148669](?).dsiSize[148478](arg _mt[148705]:_MT[238], arg this[148703]:BaseSparseDom[148669](?)) : _unknown[51] "method" "primary method" "no parens"
  {
    unknown ret[520142] "RVV" "temp"
    unknown call_tmp[669036] "expr temp" "maybe param" "maybe type" "temp"
    (669039 'move' call_tmp[669036](148482 call(385863 call (partial) getNNZ _mt[243] this[148703])))
    (520147 'move' ret[520142](520146 'deref' call_tmp[669036]))
    (520144 return ret[520142])
  }
  function BaseSparseDom[148669](?).dsiLow[148490](arg _mt[148709]:_MT[238], arg this[148707]:BaseSparseDom[148669](?)) : _unknown[51] "method" "primary method" "no parens"
  {
    unknown ret[520151] "RVV" "temp"
    unknown call_tmp[669043] "expr temp" "maybe param" "maybe type" "temp"
    (669046 'move' call_tmp[669043](360690 call parentDom _mt[243] this[148707]))
    unknown call_tmp[669050] "expr temp" "maybe param" "maybe type" "temp"
    (669053 'move' call_tmp[669050](148493 call low _mt[243] call_tmp[669043]))
    (520156 'move' ret[520151](520155 'deref' call_tmp[669050]))
    (520153 return ret[520151])
  }
  function BaseSparseDom[148669](?).dsiHigh[148503](arg _mt[148713]:_MT[238], arg this[148711]:BaseSparseDom[148669](?)) : _unknown[51] "method" "primary method" "no parens"
  {
    unknown ret[520160] "RVV" "temp"
    unknown call_tmp[669057] "expr temp" "maybe param" "maybe type" "temp"
    (669060 'move' call_tmp[669057](360695 call parentDom _mt[243] this[148711]))
    unknown call_tmp[669064] "expr temp" "maybe param" "maybe type" "temp"
    (669067 'move' call_tmp[669064](148506 call high _mt[243] call_tmp[669057]))
    (520165 'move' ret[520160](520164 'deref' call_tmp[669064]))
    (520162 return ret[520160])
  }
  function BaseSparseDom[148669](?).dsiStride[148516](arg _mt[148717]:_MT[238], arg this[148715]:BaseSparseDom[148669](?)) : _unknown[51] "method" "primary method" "no parens"
  {
    unknown ret[520169] "RVV" "temp"
    unknown call_tmp[669071] "expr temp" "maybe param" "maybe type" "temp"
    (669074 'move' call_tmp[669071](360700 call parentDom _mt[243] this[148715]))
    unknown call_tmp[669078] "expr temp" "maybe param" "maybe type" "temp"
    (669081 'move' call_tmp[669078](148519 call stride _mt[243] call_tmp[669071]))
    (520174 'move' ret[520169](520173 'deref' call_tmp[669078]))
    (520171 return ret[520169])
  }
  function BaseSparseDom[148669](?).dsiAlignment[148529](arg _mt[148721]:_MT[238], arg this[148719]:BaseSparseDom[148669](?)) : _unknown[51] "method" "primary method" "no parens"
  {
    unknown ret[520178] "RVV" "temp"
    unknown call_tmp[669085] "expr temp" "maybe param" "maybe type" "temp"
    (669088 'move' call_tmp[669085](360705 call parentDom _mt[243] this[148719]))
    unknown call_tmp[669092] "expr temp" "maybe param" "maybe type" "temp"
    (669095 'move' call_tmp[669092](148532 call alignment _mt[243] call_tmp[669085]))
    (520183 'move' ret[520178](520182 'deref' call_tmp[669092]))
    (520180 return ret[520178])
  }
  function BaseSparseDom[148669](?).dsiFirst[148542](arg _mt[148725]:_MT[238], arg this[148723]:BaseSparseDom[148669](?)) : _unknown[51] "method" "primary method" "no parens"
  {
    unknown ret[520187] "RVV" "temp"
    (148563 call halt "dsiFirst is not implemented")
    (481618 'end of statement')
    const _tmp[148570] "dead at end of block" "const" "insert auto destroy"
    unknown call_tmp[669099] "expr temp" "maybe param" "maybe type" "temp"
    (669102 'move' call_tmp[669099](385868 call rank _mt[243] this[148723]))
    unknown call_tmp[669106] "expr temp" "maybe param" "maybe type" "temp"
    (669109 'move' call_tmp[669106](385873 call idxType _mt[243] this[148723]))
    unknown call_tmp[669111] "expr temp" "maybe param" "maybe type" "temp"
    (669114 'move' call_tmp[669111](148568 call * call_tmp[669099] call_tmp[669106]))
    (543653 'default init var' _tmp[148570] call_tmp[669111])
    (148573 'end of statement')
    (520192 'move' ret[520187](520191 'deref' _tmp[148570]))
    gotoReturn _end_dsiFirst[520185] _end_dsiFirst[520185]
    (481619 'end of statement' _tmp[148570])
    label _end_dsiFirst[520185]
    (520189 return ret[520187])
  }
  function BaseSparseDom[148669](?).dsiLast[148581](arg _mt[148729]:_MT[238], arg this[148727]:BaseSparseDom[148669](?)) : _unknown[51] "method" "primary method" "no parens"
  {
    unknown ret[520198] "RVV" "temp"
    (148602 call halt "dsiLast not implemented")
    (481621 'end of statement')
    const _tmp[148609] "dead at end of block" "const" "insert auto destroy"
    unknown call_tmp[669118] "expr temp" "maybe param" "maybe type" "temp"
    (669121 'move' call_tmp[669118](385879 call rank _mt[243] this[148727]))
    unknown call_tmp[669125] "expr temp" "maybe param" "maybe type" "temp"
    (669128 'move' call_tmp[669125](385884 call idxType _mt[243] this[148727]))
    unknown call_tmp[669130] "expr temp" "maybe param" "maybe type" "temp"
    (669133 'move' call_tmp[669130](148607 call * call_tmp[669118] call_tmp[669125]))
    (543655 'default init var' _tmp[148609] call_tmp[669130])
    (148612 'end of statement')
    (520203 'move' ret[520198](520202 'deref' _tmp[148609]))
    gotoReturn _end_dsiLast[520196] _end_dsiLast[520196]
    (481622 'end of statement' _tmp[148609])
    label _end_dsiLast[520196]
    (520200 return ret[520198])
  }
  function BaseSparseDom[148669](?).dsiAlignedLow[148620](arg _mt[148733]:_MT[238], arg this[148731]:BaseSparseDom[148669](?)) : _unknown[51] "method" "primary method" "no parens"
  {
    unknown ret[520209] "RVV" "temp"
    unknown call_tmp[669137] "expr temp" "maybe param" "maybe type" "temp"
    (669140 'move' call_tmp[669137](360710 call parentDom _mt[243] this[148731]))
    unknown call_tmp[669144] "expr temp" "maybe param" "maybe type" "temp"
    (669147 'move' call_tmp[669144](148623 call alignedLow _mt[243] call_tmp[669137]))
    (520214 'move' ret[520209](520213 'deref' call_tmp[669144]))
    (520211 return ret[520209])
  }
  function BaseSparseDom[148669](?).dsiAlignedHigh[148633](arg _mt[148737]:_MT[238], arg this[148735]:BaseSparseDom[148669](?)) : _unknown[51] "method" "primary method" "no parens"
  {
    unknown ret[520218] "RVV" "temp"
    unknown call_tmp[669151] "expr temp" "maybe param" "maybe type" "temp"
    (669154 'move' call_tmp[669151](360715 call parentDom _mt[243] this[148735]))
    unknown call_tmp[669158] "expr temp" "maybe param" "maybe type" "temp"
    (669161 'move' call_tmp[669158](148636 call alignedHigh _mt[243] call_tmp[669151]))
    (520223 'move' ret[520218](520222 'deref' call_tmp[669158]))
    (520220 return ret[520218])
  }
  function BaseSparseDom[148669](?).dsiMakeIndexBuffer[148648](arg _mt[148741]:_MT[238], arg this[148739]:BaseSparseDom[148669](?), arg size[148646]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[520227] "RVV" "temp"
    unknown call_tmp[669165] "expr temp" "maybe param" "maybe type" "temp"
    (669168 'move' call_tmp[669165](148653 call rank _mt[243] this[148739]))
    unknown call_tmp[669170] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (669173 'move' call_tmp[669170](747933 'new' SparseIndexBuffer[148192](?)(rank = call_tmp[669165])(obj = this[148739])(size = size[148646])))
    (520232 'move' ret[520227](520231 'deref' call_tmp[669170]))
    (520229 return ret[520227])
  }
  function BaseSparseDom[148669](?).init[802212](arg _mt[802214]:_MT[238], arg this[802215]:BaseSparseDom[148669](?), param arg rank[802226]:int(64)[13], arg idxType[802238]:_any[178](?), in arg parentDom[802247]:_any[178](?)) : void[4] "compiler generated" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown super_tmp[802258] "temporary of super field" "temp"
    (802260 'move' super_tmp[802258](802257 '.v' this[802215] c"super"))
    (802225 call(802223 call (partial) init _mt[243] super_tmp[802258]))
    (802293 'end of statement')
    unknown tmp[802263] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[802297] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[802309] "expr temp" "maybe param" "maybe type" "temp"
      (802312 'move' call_tmp[802309](802265 '.v' this[802215] c"super"))
      (802301 'move' call_type_tmp[802297](802268 'typeof' call_tmp[802309]))
    }
    (802269 'move' tmp[802263] call_type_tmp[802297])
    unknown call_tmp[802314] "maybe param" "maybe type" "temp"
    (802317 'move' call_tmp[802314](802274 'cast' tmp[802263] this[802215]))
    unknown chpl__thisAsParent[802271] "dead at end of block" "insert auto destroy" "temp"
    (802305 'init var' chpl__thisAsParent[802271] call_tmp[802314] tmp[802263])
    (802277 'setcid' chpl__thisAsParent[802271])
    unknown call_tmp[802319] "expr temp" "maybe param" "maybe type" "temp"
    (802322 'move' call_tmp[802319](802280 call _cast int(64)[13] rank[802226]))
    (802282 'init field' this[802215] c"rank" call_tmp[802319])
    (802294 'end of statement')
    (802285 'init field' this[802215] c"idxType" idxType[802238])
    (802288 'init field' this[802215] c"parentDom" parentDom[802247])
    (802295 'end of statement')
    (802291 'setcid' this[802215])
    (802303 return _void[55])
  }
  function BaseSparseDom[148669](?).super[806204](arg _mt[806206]:_MT[238], arg this[806208]:BaseSparseDom[148669](?)) : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[806218] "RVV" "temp"
    unknown call_tmp[806225] "expr temp" "maybe param" "maybe type" "temp"
    (806228 'move' call_tmp[806225](806212 '.v' this[806208] c"super"))
    (806223 'move' ret[806218](806222 'deref' call_tmp[806225]))
    (806220 return ret[806218])
  }
  function BaseSparseDom[806235](?).rank[806230](arg _mt[806232]:_MT[238], arg this[806237]:BaseSparseDom[806235](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[806268] "RVV" "param" "temp"
    unknown borrowOfThis[806239]
    (806260 'end of statement')
    (806241 'move' borrowOfThis[806239](806244 call _cast _borrowedNonNilable[214](?) this[806237]))
    (806261 'end of statement' borrowOfThis[806239])
    unknown call_tmp[806282] "expr temp" "maybe param" "maybe type" "temp"
    (806285 'move' call_tmp[806282](806250 'is bound' borrowOfThis[806239] c"rank"))
    if call_tmp[806282]
    {
      unknown call_tmp[806287] "expr temp" "maybe param" "maybe type" "temp"
      (806290 'move' call_tmp[806287](806249 '.' borrowOfThis[806239] c"rank"))
      (806273 'move' ret[806268](806272 'deref' call_tmp[806287]))
      gotoReturn _end_rank[806266] _end_rank[806266]
      (806263 'end of statement' borrowOfThis[806239])
    }
    {
      (806278 'move' ret[806268](806277 'deref' ?[260]))
      gotoReturn _end_rank[806266] _end_rank[806266]
    }
    label _end_rank[806266]
    (806270 return ret[806268])
  }
  function BaseSparseDom[806235](?).rank[806292](arg _mt[806294]:_MT[238], arg this[806296]:BaseSparseDom[806235](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[806327] "RVV" "param" "temp"
    unknown borrowOfThis[806298] "type variable"
    (806319 'end of statement')
    (806300 'move' borrowOfThis[806298](806303 call _cast _borrowedNonNilable[214](?) this[806296]))
    (806320 'end of statement' borrowOfThis[806298])
    unknown call_tmp[806341] "expr temp" "maybe param" "maybe type" "temp"
    (806344 'move' call_tmp[806341](806309 'is bound' borrowOfThis[806298] c"rank"))
    if call_tmp[806341]
    {
      unknown call_tmp[806346] "expr temp" "maybe param" "maybe type" "temp"
      (806349 'move' call_tmp[806346](806308 '.' borrowOfThis[806298] c"rank"))
      (806332 'move' ret[806327](806331 'deref' call_tmp[806346]))
      gotoReturn _end_rank[806325] _end_rank[806325]
      (806322 'end of statement' borrowOfThis[806298])
    }
    {
      (806337 'move' ret[806327](806336 'deref' ?[260]))
      gotoReturn _end_rank[806325] _end_rank[806325]
    }
    label _end_rank[806325]
    (806329 return ret[806327])
  }
  function BaseSparseDom[806235](?).idxType[806351](arg _mt[806353]:_MT[238], arg this[806355]:BaseSparseDom[806235](?)) type : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[806390] "RVV" "temp" "type variable"
    unknown borrowOfThis[806357]
    (806382 'end of statement')
    (806359 'move' borrowOfThis[806357](806362 call _cast _borrowedNonNilable[214](?) this[806355]))
    (806383 'end of statement' borrowOfThis[806357])
    unknown call_tmp[806404] "expr temp" "maybe param" "maybe type" "temp"
    (806407 'move' call_tmp[806404](806372 'is bound' borrowOfThis[806357] c"idxType"))
    if call_tmp[806404]
    {
      unknown call_tmp[806409] "expr temp" "maybe param" "maybe type" "temp"
      (806412 'move' call_tmp[806409](806367 '.v' borrowOfThis[806357] c"idxType"))
      unknown call_tmp[806414] "expr temp" "maybe param" "maybe type" "temp"
      (806417 'move' call_tmp[806414](806368 call chpl_checkLegalTypeFieldAccessor this[806355] call_tmp[806409] "idxType"))
      (806395 'move' ret[806390](806394 'deref' call_tmp[806414]))
      gotoReturn _end_idxType[806388] _end_idxType[806388]
      (806385 'end of statement' borrowOfThis[806357])
    }
    {
      (806400 'move' ret[806390](806399 'deref' _uninstantiated[258]))
      gotoReturn _end_idxType[806388] _end_idxType[806388]
    }
    label _end_idxType[806388]
    (806392 return ret[806390])
  }
  function BaseSparseDom[806235](?).idxType[806419](arg _mt[806421]:_MT[238], arg this[806423]:BaseSparseDom[806235](?)) type : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[806458] "RVV" "temp" "type variable"
    unknown borrowOfThis[806425] "type variable"
    (806450 'end of statement')
    (806427 'move' borrowOfThis[806425](806430 call _cast _borrowedNonNilable[214](?) this[806423]))
    (806451 'end of statement' borrowOfThis[806425])
    unknown call_tmp[806472] "expr temp" "maybe param" "maybe type" "temp"
    (806475 'move' call_tmp[806472](806440 'is bound' borrowOfThis[806425] c"idxType"))
    if call_tmp[806472]
    {
      unknown call_tmp[806477] "expr temp" "maybe param" "maybe type" "temp"
      (806480 'move' call_tmp[806477](806435 '.v' borrowOfThis[806425] c"idxType"))
      unknown call_tmp[806482] "expr temp" "maybe param" "maybe type" "temp"
      (806485 'move' call_tmp[806482](806436 call chpl_checkLegalTypeFieldAccessor this[806423] call_tmp[806477] "idxType"))
      (806463 'move' ret[806458](806462 'deref' call_tmp[806482]))
      gotoReturn _end_idxType[806456] _end_idxType[806456]
      (806453 'end of statement' borrowOfThis[806425])
    }
    {
      (806468 'move' ret[806458](806467 'deref' _uninstantiated[258]))
      gotoReturn _end_idxType[806456] _end_idxType[806456]
    }
    label _end_idxType[806456]
    (806460 return ret[806458])
  }
  function BaseSparseDom[148669](?).parentDom[806487](arg _mt[806489]:_MT[238], arg this[806491]:BaseSparseDom[148669](?)) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[806501] "RVV" "temp"
    unknown call_tmp[806508] "expr temp" "maybe param" "maybe type" "temp"
    (806511 'move' call_tmp[806508](806495 '.' this[806491] c"parentDom"))
    (806506 'move' ret[806501](806505 'addr of' call_tmp[806508]))
    (806503 return ret[806501])
  }
  function BaseSparseDom[148669](?).writeThis[806513](arg _mt[806517]:_MT[238], arg this[806515]:BaseSparseDom[148669](?), arg f[806516]:_any[178](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (806522 call writeThisDefaultImpl f[806516] this[806515])
    (806527 return _void[55])
  }
  function BaseSparseDom[148669](?).readThis[806529](arg _mt[806533]:_MT[238], arg this[806531]:BaseSparseDom[148669](?), arg f[806532]:_any[178](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (806537 call readThisDefaultImpl f[806532] this[806531])
    (806543 return _void[55])
  }
  type BaseSparseDom[148669](?) val super[355729]:BaseDom[146729] "super class" unknown rank[148215] "param" int(64)[13] unknown idxType[148219] "type variable" unknown parentDom[148222]
  type BaseSparseDom[806235](?)
  type BaseSparseDom[382310](?)
  function BaseAssociativeDom[148816].deinit[148749](arg _mt[148820]:_MT[238], arg this[148818]:BaseAssociativeDom[148816]) : _unknown[51] "destructor" "method" "primary method" "no return value for void"
  {
    (520234 return _void[55])
  }
  function BaseAssociativeDom[148816].dsiClear[148756](arg _mt[148824]:_MT[238], arg this[148822]:BaseAssociativeDom[148816]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (148777 call halt "clear not implemented for this distribution")
    (520236 return _void[55])
  }
  function BaseAssociativeDom[148816].dsiAdd[148786](arg _mt[148828]:_MT[238], arg this[148826]:BaseAssociativeDom[148816], in arg idx[148784]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[520240] "RVV" "temp"
    (148807 call compilerError "Index addition is not supported by this domain")
    (481628 'end of statement')
    (520245 'move' ret[520240](520244 'deref' 0))
    (520242 return ret[520240])
  }
  function BaseAssociativeDom[148816].super[806545](arg _mt[806547]:_MT[238], arg this[806549]:BaseAssociativeDom[148816]) : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[806559] "RVV" "temp"
    unknown call_tmp[806566] "expr temp" "maybe param" "maybe type" "temp"
    (806569 'move' call_tmp[806566](806553 '.v' this[806549] c"super"))
    (806564 'move' ret[806559](806563 'deref' call_tmp[806566]))
    (806561 return ret[806559])
  }
  function BaseAssociativeDom[148816].init[806571](arg _mt[806573]:_MT[238], arg this[806574]:BaseAssociativeDom[148816]) : void[4] "compiler generated" "inline" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown super_tmp[806587] "temporary of super field" "temp"
    (806589 'move' super_tmp[806587](806586 '.v' this[806574] c"super"))
    (806584 call(806582 call (partial) init _mt[243] super_tmp[806587]))
    (806610 'end of statement')
    unknown tmp[806592] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[806613] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[806625] "expr temp" "maybe param" "maybe type" "temp"
      (806628 'move' call_tmp[806625](806594 '.v' this[806574] c"super"))
      (806617 'move' call_type_tmp[806613](806597 'typeof' call_tmp[806625]))
    }
    (806598 'move' tmp[806592] call_type_tmp[806613])
    unknown call_tmp[806630] "maybe param" "maybe type" "temp"
    (806633 'move' call_tmp[806630](806603 'cast' tmp[806592] this[806574]))
    unknown chpl__thisAsParent[806600] "dead at end of block" "insert auto destroy" "temp"
    (806621 'init var' chpl__thisAsParent[806600] call_tmp[806630] tmp[806592])
    (806606 'setcid' chpl__thisAsParent[806600])
    (806611 'end of statement')
    (806608 'setcid' this[806574])
    (806619 return _void[55])
  }
  function BaseAssociativeDom[148816].writeThis[806635](arg _mt[806639]:_MT[238], arg this[806637]:BaseAssociativeDom[148816], arg f[806638]:_any[178](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (806644 call writeThisDefaultImpl f[806638] this[806637])
    (806649 return _void[55])
  }
  function BaseAssociativeDom[148816].readThis[806651](arg _mt[806655]:_MT[238], arg this[806653]:BaseAssociativeDom[148816], arg f[806654]:_any[178](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (806659 call readThisDefaultImpl f[806654] this[806653])
    (806665 return _void[55])
  }
  type BaseAssociativeDom[148816] val super[355733]:BaseDom[146729] "super class"
  type BaseAssociativeDom[382305](?)
  function BaseArr[149545].chpl__rvfMe[148846](arg _mt[149549]:_MT[238], arg this[149547]:BaseArr[149545]) param : _unknown[51] "method" "primary method"
  {
    unknown ret[520249] "RVV" "param" "temp"
    (520254 'move' ret[520249](520253 'deref' 0))
    (520251 return ret[520249])
  }
  function BaseArr[149545].isSliceArrayView[148856](arg _mt[149553]:_MT[238], arg this[149551]:BaseArr[149545]) param : _unknown[51] "method" "primary method"
  {
    unknown ret[520258] "RVV" "param" "temp"
    (520263 'move' ret[520258](520262 'deref' 0))
    (520260 return ret[520258])
  }
  function BaseArr[149545].isRankChangeArrayView[148866](arg _mt[149557]:_MT[238], arg this[149555]:BaseArr[149545]) param : _unknown[51] "method" "primary method"
  {
    unknown ret[520267] "RVV" "param" "temp"
    (520272 'move' ret[520267](520271 'deref' 0))
    (520269 return ret[520267])
  }
  function BaseArr[149545].isReindexArrayView[148876](arg _mt[149561]:_MT[238], arg this[149559]:BaseArr[149545]) param : _unknown[51] "method" "primary method"
  {
    unknown ret[520276] "RVV" "param" "temp"
    (520281 'move' ret[520276](520280 'deref' 0))
    (520278 return ret[520276])
  }
  function BaseArr[149545].deinit[148886](arg _mt[149565]:_MT[238], arg this[149563]:BaseArr[149545]) : _unknown[51] "destructor" "method" "primary method" "no return value for void"
  {
    (520283 return _void[55])
  }
  function BaseArr[149545].dsiStaticFastFollowCheck[148895](arg _mt[149569]:_MT[238], arg this[149567]:BaseArr[149545], arg leadType[148893]:_any[178](?)) param : _unknown[51] "method" "primary method"
  {
    unknown ret[520287] "RVV" "param" "temp"
    (520292 'move' ret[520287](520291 'deref' 0))
    (520289 return ret[520287])
  }
  function BaseArr[149545].dsiGetBaseDom[148905](arg _mt[149573]:_MT[238], arg this[149571]:BaseArr[149545]) : _unknown[51] "method" "primary method"
  {
    unknown ret[520296] "RVV" "temp"
    (148928 call halt "internal error: dsiGetBaseDom is not implemented")
    (481635 'end of statement')
    unknown ret[148933] "dead at end of block" "insert auto destroy" "unsafe"
    (543657 'default init var' ret[148933] unmanaged BaseDom[415463])
    (148936 'end of statement')
    (520302 'move' ret[520296](520301 'coerce' ret[148933] unmanaged BaseDom[415463]))
    gotoReturn _end_dsiGetBaseDom[520294] _end_dsiGetBaseDom[520294]
    (481636 'end of statement' ret[148933])
    label _end_dsiGetBaseDom[520294]
    (520298 return ret[520296])
  }
  { scopeless type
    unmanaged BaseDom[415463]
  }
  function BaseArr[149545].remove[148949](arg _mt[149577]:_MT[238], arg this[149575]:BaseArr[149545], param arg rmFromList[148946]:bool[10]) : _unknown[51] "dont disable remote value forwarding" "method" "primary method"
  {
    unknown ret[520308] "RVV" "temp"
    unknown ret_arr[148952] "dead at end of block" "insert auto destroy"
    (543659 'init var' ret_arr[148952] this[149575])
    (148955 'end of statement')
    unknown ret_dom[148961] "dead at end of block" "insert auto destroy"
    (543661 'init var' ret_dom[148961] nil[44] unmanaged BaseDom?[415523])
    (148964 'end of statement')
    unknown rm_dom[148966] "dead at end of block" "insert auto destroy"
    (543663 'init var' rm_dom[148966] 0)
    (148969 'end of statement')
    unknown call_tmp[669177] "maybe param" "maybe type" "temp"
    (669180 'move' call_tmp[669177](148972 call(385900 call (partial) dsiGetBaseDom _mt[243] this[149575])))
    unknown dom[148973] "dead at end of block" "insert auto destroy"
    (543665 'init var' dom[148973] call_tmp[669177])
    (148976 'end of statement')
    unknown call_tmp[669184] "expr temp" "maybe param" "maybe type" "temp"
    (669187 'move' call_tmp[669184](148987 call _to_unmanaged this[149575]))
    unknown call_tmp[669189] "expr temp" "maybe param" "maybe type" "temp"
    (669192 'move' call_tmp[669189](148990 call(148981 call (partial) remove_arr _mt[243] dom[148973]) call_tmp[669184] rmFromList[148946]))
    (148991 call = rm_dom[148966] call_tmp[669189])
    (481638 'end of statement' rm_dom[148966] dom[148973])
    unknown call_tmp[669194] "expr temp" "maybe param" "maybe type" "temp"
    (669197 'move' call_tmp[669194](149000 call _cond_test rm_dom[148966]))
    if call_tmp[669194]
    {
      (148997 call = ret_dom[148961] dom[148973])
      (481641 'end of statement' ret_dom[148961] dom[148973])
    }
    unknown call_tmp[669199] "expr temp" "maybe param" "maybe type" "temp"
    (669202 'move' call_tmp[669199](149008 call _build_tuple ret_arr[148952] ret_dom[148961]))
    (520313 'move' ret[520308](520312 'deref' call_tmp[669199]))
    gotoReturn _end_remove[520306] _end_remove[520306]
    (481644 'end of statement' ret_arr[148952] ret_dom[148961])
    label _end_remove[520306]
    (520310 return ret[520308])
  }
  function BaseArr[149545].dsiElementInitializationComplete[149016](arg _mt[149581]:_MT[238], arg this[149579]:BaseArr[149545]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (149037 call halt "dsiElementInitializationComplete must be defined")
    (520317 return _void[55])
  }
  function BaseArr[149545].dsiElementDeinitializationComplete[149044](arg _mt[149585]:_MT[238], arg this[149583]:BaseArr[149545]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (149065 call halt "dsiElementDeinitializationComplete must be defined")
    (520319 return _void[55])
  }
  function BaseArr[149545].dsiDestroyArr[149076](arg _mt[149589]:_MT[238], arg this[149587]:BaseArr[149545], arg deinitElts[149073]:bool[10]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (149097 call halt "dsiDestroyArr must be defined")
    (520321 return _void[55])
  }
  function BaseArr[149545].dsiReallocate[149108](arg _mt[149593]:_MT[238], arg this[149591]:BaseArr[149545], arg d[149105]:_domain[125914](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (149129 call halt "reallocating not supported for this array type")
    (520323 return _void[55])
  }
  function BaseArr[149545].dsiPostReallocate[149136](arg _mt[149597]:_MT[238], arg this[149595]:BaseArr[149545]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (520325 return _void[55])
  }
  function BaseArr[149545]._purge[149147](arg _mt[149601]:_MT[238], arg this[149599]:BaseArr[149545], arg ind[149144]:int(64)[13]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (149168 call halt "purging not supported for this array type")
    (520327 return _void[55])
  }
  function BaseArr[149545]._resize[149179](arg _mt[149605]:_MT[238], arg this[149603]:BaseArr[149545], arg length[149176]:int(64)[13], arg old_map[149181]:_any[178](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (149202 call halt "resizing not supported for this array type")
    (520329 return _void[55])
  }
  function BaseArr[149545].sparseShiftArray[149211](arg _mt[149609]:_MT[238], arg this[149607]:BaseArr[149545], arg shiftrange[149209]:_any[178](?), arg initrange[149213]:_any[178](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (149234 call halt "sparseGrowDomain not supported for non-sparse arrays")
    (520331 return _void[55])
  }
  function BaseArr[149545].sparseShiftArrayBack[149243](arg _mt[149613]:_MT[238], arg this[149611]:BaseArr[149545], arg shiftrange[149241]:_any[178](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (149264 call halt "sparseShiftArrayBack not supported for non-sparse arrays")
    (520333 return _void[55])
  }
  function BaseArr[149545].sparseBulkShiftArray[149273](arg _mt[149617]:_MT[238], arg this[149615]:BaseArr[149545], arg shiftMap[149271]:_any[178](?), arg oldnnz[149275]:_any[178](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (149296 call halt "sparseBulkShiftArray not supported for non-sparse arrays")
    (520335 return _void[55])
  }
  function BaseArr[149545]._defaultInitSlot[149307](arg _mt[149621]:_MT[238], arg this[149619]:BaseArr[149545], arg slot[149304]:int(64)[13]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (149328 call halt "_defaultInitSlot() not supported for non-associative arrays")
    (520337 return _void[55])
  }
  function BaseArr[149545]._deinitSlot[149339](arg _mt[149625]:_MT[238], arg this[149623]:BaseArr[149545], arg slot[149336]:int(64)[13]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (149360 call halt "_deinitSlot() not supported for non-associative arrays")
    (520339 return _void[55])
  }
  function BaseArr[149545]._startRehash[149371](arg _mt[149629]:_MT[238], arg this[149627]:BaseArr[149545], arg newSize[149368]:int(64)[13]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (149392 call halt "_startRehash() not supported for non-associative arrays")
    (520341 return _void[55])
  }
  function BaseArr[149545]._finishRehash[149403](arg _mt[149633]:_MT[238], arg this[149631]:BaseArr[149545], arg oldSize[149400]:int(64)[13]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (149424 call halt "_finishRehash() not supported for non-associative arrays")
    (520343 return _void[55])
  }
  function BaseArr[149545]._moveElementDuringRehash[149435](arg _mt[149637]:_MT[238], arg this[149635]:BaseArr[149545], arg oldslot[149432]:int(64)[13], arg newslot[149438]:int(64)[13]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (149460 call halt "_moveElementDuringRehash() not supported for non-associative arrays")
    (520345 return _void[55])
  }
  function BaseArr[149545].dsiSupportsAlignedFollower[149467](arg _mt[149641]:_MT[238], arg this[149639]:BaseArr[149545]) param : _unknown[51] "method" "primary method"
  {
    unknown ret[520349] "RVV" "param" "temp"
    (520354 'move' ret[520349](520353 'deref' 0))
    (520351 return ret[520349])
  }
  function BaseArr[149545].dsiSupportsPrivatization[149477](arg _mt[149645]:_MT[238], arg this[149643]:BaseArr[149545]) param : _unknown[51] "method" "primary method"
  {
    unknown ret[520358] "RVV" "param" "temp"
    (520363 'move' ret[520358](520362 'deref' 0))
    (520360 return ret[520358])
  }
  function BaseArr[149545].dsiRequiresPrivatization[149487](arg _mt[149649]:_MT[238], arg this[149647]:BaseArr[149545]) param : _unknown[51] "method" "primary method"
  {
    unknown ret[520367] "RVV" "param" "temp"
    (520372 'move' ret[520367](520371 'deref' 0))
    (520369 return ret[520367])
  }
  function BaseArr[149545].dsiDisplayRepresentation[149497](arg _mt[149653]:_MT[238], arg this[149651]:BaseArr[149545]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (149502 call writeln "<no way to display representation>")
    (520374 return _void[55])
  }
  function BaseArr[415361](?).isDefaultRectangular[149509](arg _mt[149657]:_MT[238], arg this[149655]:BaseArr[415361](?)) param : _unknown[51] "method" "primary method"
  {
    unknown ret[520378] "RVV" "param" "temp"
    (520383 'move' ret[520378](520382 'deref' 0))
    (520380 return ret[520378])
  }
  function BaseArr[149545].isDefaultRectangular[149519](arg _mt[149661]:_MT[238], arg this[149659]:BaseArr[149545]) param : _unknown[51] "method" "primary method"
  {
    unknown ret[520387] "RVV" "param" "temp"
    (520392 'move' ret[520387](520391 'deref' 0))
    (520389 return ret[520387])
  }
  function BaseArr[149545].doiCanBulkTransferRankChange[149529](arg _mt[149665]:_MT[238], arg this[149663]:BaseArr[149545]) param : _unknown[51] "method" "primary method"
  {
    unknown ret[520396] "RVV" "param" "temp"
    (520401 'move' ret[520396](520400 'deref' 0))
    (520398 return ret[520396])
  }
  function BaseArr[149545].decEltCountsIfNeeded[149539](arg _mt[149669]:_MT[238], arg this[149667]:BaseArr[149545]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (520403 return _void[55])
  }
  function BaseArr[149545].super[806667](arg _mt[806669]:_MT[238], arg this[806671]:BaseArr[149545]) : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[806681] "RVV" "temp"
    unknown call_tmp[806688] "expr temp" "maybe param" "maybe type" "temp"
    (806691 'move' call_tmp[806688](806675 '.v' this[806671] c"super"))
    (806686 'move' ret[806681](806685 'deref' call_tmp[806688]))
    (806683 return ret[806681])
  }
  function BaseArr[149545].pid[806693](arg _mt[806695]:_MT[238], arg this[806697]:BaseArr[149545]) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[806707] "RVV" "temp"
    unknown call_tmp[806714] "expr temp" "maybe param" "maybe type" "temp"
    (806717 'move' call_tmp[806714](806701 '.' this[806697] c"pid"))
    (806712 'move' ret[806707](806711 'addr of' call_tmp[806714]))
    (806709 return ret[806707])
  }
  function BaseArr[149545]._decEltRefCounts[806719](arg _mt[806721]:_MT[238], arg this[806723]:BaseArr[149545]) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[806733] "RVV" "temp"
    unknown call_tmp[806740] "expr temp" "maybe param" "maybe type" "temp"
    (806743 'move' call_tmp[806740](806727 '.' this[806723] c"_decEltRefCounts"))
    (806738 'move' ret[806733](806737 'addr of' call_tmp[806740]))
    (806735 return ret[806733])
  }
  function BaseArr[149545].init[806745](arg _mt[806747]:_MT[238], arg this[806748]:BaseArr[149545], in arg pid[806759]:int(64)[13] :
  int(64)[13] =
  nullPid[113724], in arg _decEltRefCounts[806774]:bool[10] :
  bool[10] =
  0) : void[4] "compiler generated" "inline" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown super_tmp[806791] "temporary of super field" "temp"
    (806793 'move' super_tmp[806791](806790 '.v' this[806748] c"super"))
    (806758 call(806756 call (partial) init _mt[243] super_tmp[806791]))
    (806820 'end of statement')
    unknown tmp[806796] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[806824] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[806836] "expr temp" "maybe param" "maybe type" "temp"
      (806839 'move' call_tmp[806836](806798 '.v' this[806748] c"super"))
      (806828 'move' call_type_tmp[806824](806801 'typeof' call_tmp[806836]))
    }
    (806802 'move' tmp[806796] call_type_tmp[806824])
    unknown call_tmp[806841] "maybe param" "maybe type" "temp"
    (806844 'move' call_tmp[806841](806807 'cast' tmp[806796] this[806748]))
    unknown chpl__thisAsParent[806804] "dead at end of block" "insert auto destroy" "temp"
    (806832 'init var' chpl__thisAsParent[806804] call_tmp[806841] tmp[806796])
    (806810 'setcid' chpl__thisAsParent[806804])
    (806812 'init field' this[806748] c"pid" pid[806759])
    (806821 'end of statement')
    (806815 'init field' this[806748] c"_decEltRefCounts" _decEltRefCounts[806774])
    (806822 'end of statement')
    (806818 'setcid' this[806748])
    (806830 return _void[55])
  }
  type BaseArr[149545] val super[355721]:object[22] "super class" val pid[148834]:int(64)[13] nullPid[113724] int(64)[13] val _decEltRefCounts[148840]:bool[10] 0 bool[10]
  type unmanaged BaseArr?[415544]
  type BaseArr?[415541](?)
  type unmanaged BaseArr[415511]
  type BaseArr[415361](?)
  type BaseArr[382377](?)
  function AbsBaseArr[149701](?).decEltCountsIfNeeded[149680](arg _mt[149705]:_MT[238], arg this[149703]:AbsBaseArr[149701](?)) : _unknown[51] "method" "primary method" "method overrides" "no return value for void"
  {
    unknown call_tmp[669206] "expr temp" "maybe param" "maybe type" "temp"
    (669209 'move' call_tmp[669206](385914 call _decEltRefCounts _mt[243] this[149703]))
    unknown call_tmp[669211] "expr temp" "maybe param" "maybe type" "temp"
    (669214 'move' call_tmp[669211](149693 call _cond_test call_tmp[669206]))
    if call_tmp[669211]
    {
      unknown call_tmp[669216] "expr temp" "maybe param" "maybe type" "temp"
      (669219 'move' call_tmp[669216](149687 call _to_unmanaged this[149703]))
      unknown call_tmp[669223] "expr temp" "maybe param" "maybe type" "temp"
      (669226 'move' call_tmp[669223](385920 call eltType _mt[243] this[149703]))
      (149690 call chpl_decRefCountsForDomainsInArrayEltTypes call_tmp[669216] call_tmp[669223])
    }
    (520405 return _void[55])
  }
  function AbsBaseArr[149701](?).super[806846](arg _mt[806848]:_MT[238], arg this[806850]:AbsBaseArr[149701](?)) : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[806860] "RVV" "temp"
    unknown call_tmp[806867] "expr temp" "maybe param" "maybe type" "temp"
    (806870 'move' call_tmp[806867](806854 '.v' this[806850] c"super"))
    (806865 'move' ret[806860](806864 'deref' call_tmp[806867]))
    (806862 return ret[806860])
  }
  function AbsBaseArr[806877](?).eltType[806872](arg _mt[806874]:_MT[238], arg this[806879]:AbsBaseArr[806877](?)) type : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[806914] "RVV" "temp" "type variable"
    unknown borrowOfThis[806881]
    (806906 'end of statement')
    (806883 'move' borrowOfThis[806881](806886 call _cast _borrowedNonNilable[214](?) this[806879]))
    (806907 'end of statement' borrowOfThis[806881])
    unknown call_tmp[806928] "expr temp" "maybe param" "maybe type" "temp"
    (806931 'move' call_tmp[806928](806896 'is bound' borrowOfThis[806881] c"eltType"))
    if call_tmp[806928]
    {
      unknown call_tmp[806933] "expr temp" "maybe param" "maybe type" "temp"
      (806936 'move' call_tmp[806933](806891 '.v' borrowOfThis[806881] c"eltType"))
      unknown call_tmp[806938] "expr temp" "maybe param" "maybe type" "temp"
      (806941 'move' call_tmp[806938](806892 call chpl_checkLegalTypeFieldAccessor this[806879] call_tmp[806933] "eltType"))
      (806919 'move' ret[806914](806918 'deref' call_tmp[806938]))
      gotoReturn _end_eltType[806912] _end_eltType[806912]
      (806909 'end of statement' borrowOfThis[806881])
    }
    {
      (806924 'move' ret[806914](806923 'deref' _uninstantiated[258]))
      gotoReturn _end_eltType[806912] _end_eltType[806912]
    }
    label _end_eltType[806912]
    (806916 return ret[806914])
  }
  function AbsBaseArr[806877](?).eltType[806943](arg _mt[806945]:_MT[238], arg this[806947]:AbsBaseArr[806877](?)) type : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[806982] "RVV" "temp" "type variable"
    unknown borrowOfThis[806949] "type variable"
    (806974 'end of statement')
    (806951 'move' borrowOfThis[806949](806954 call _cast _borrowedNonNilable[214](?) this[806947]))
    (806975 'end of statement' borrowOfThis[806949])
    unknown call_tmp[806996] "expr temp" "maybe param" "maybe type" "temp"
    (806999 'move' call_tmp[806996](806964 'is bound' borrowOfThis[806949] c"eltType"))
    if call_tmp[806996]
    {
      unknown call_tmp[807001] "expr temp" "maybe param" "maybe type" "temp"
      (807004 'move' call_tmp[807001](806959 '.v' borrowOfThis[806949] c"eltType"))
      unknown call_tmp[807006] "expr temp" "maybe param" "maybe type" "temp"
      (807009 'move' call_tmp[807006](806960 call chpl_checkLegalTypeFieldAccessor this[806947] call_tmp[807001] "eltType"))
      (806987 'move' ret[806982](806986 'deref' call_tmp[807006]))
      gotoReturn _end_eltType[806980] _end_eltType[806980]
      (806977 'end of statement' borrowOfThis[806949])
    }
    {
      (806992 'move' ret[806982](806991 'deref' _uninstantiated[258]))
      gotoReturn _end_eltType[806980] _end_eltType[806980]
    }
    label _end_eltType[806980]
    (806984 return ret[806982])
  }
  function AbsBaseArr[149701](?).init[807011](arg _mt[807013]:_MT[238], arg this[807014]:AbsBaseArr[149701](?), in arg pid[807029]:int(64)[13] :
  int(64)[13] =
  nullPid[113724], in arg _decEltRefCounts[807036]:bool[10] :
  bool[10] =
  0, arg eltType[807039]:_any[178](?)) : void[4] "compiler generated" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown super_tmp[807050] "temporary of super field" "temp"
    (807052 'move' super_tmp[807050](807049 '.v' this[807014] c"super"))
    (807024 call(807022 call (partial) init _mt[243] super_tmp[807050]) pid[807029] _decEltRefCounts[807036])
    (807076 'end of statement')
    unknown tmp[807055] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[807079] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[807091] "expr temp" "maybe param" "maybe type" "temp"
      (807094 'move' call_tmp[807091](807057 '.v' this[807014] c"super"))
      (807083 'move' call_type_tmp[807079](807060 'typeof' call_tmp[807091]))
    }
    (807061 'move' tmp[807055] call_type_tmp[807079])
    unknown call_tmp[807096] "maybe param" "maybe type" "temp"
    (807099 'move' call_tmp[807096](807066 'cast' tmp[807055] this[807014]))
    unknown chpl__thisAsParent[807063] "dead at end of block" "insert auto destroy" "temp"
    (807087 'init var' chpl__thisAsParent[807063] call_tmp[807096] tmp[807055])
    (807069 'setcid' chpl__thisAsParent[807063])
    (807071 'init field' this[807014] c"eltType" eltType[807039])
    (807077 'end of statement')
    (807074 'setcid' this[807014])
    (807085 return _void[55])
  }
  function AbsBaseArr[149701](?).deinit[807101](arg _mt[807103]:_MT[238], arg this[807105]:AbsBaseArr[149701](?)) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (807113 return _void[55])
  }
  type AbsBaseArr[149701](?) val super[355735]:BaseArr[149545] "super class" unknown eltType[149675] "type variable"
  type AbsBaseArr[806877](?)
  function BaseArrOverRectangularDom[149766](?).dsiReallocate[149741](arg _mt[149770]:_MT[238], arg this[149768]:BaseArrOverRectangularDom[149766](?), arg bounds[149738] :
  unknown call_tmp[669230] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "method" "primary method" "no return value for void"
  {
    (149746 call halt "reallocating not supported for this array type")
    (520407 return _void[55])
  }
  function BaseArrOverRectangularDom[149766](?).dsiPostReallocate[149753](arg _mt[149774]:_MT[238], arg this[149772]:BaseArrOverRectangularDom[149766](?)) : _unknown[51] "method" "primary method" "method overrides" "no return value for void"
  {
    (520409 return _void[55])
  }
  function BaseArrOverRectangularDom[149766](?).deinit[149760](arg _mt[149778]:_MT[238], arg this[149776]:BaseArrOverRectangularDom[149766](?)) : _unknown[51] "destructor" "method" "primary method" "no return value for void"
  {
    (520411 return _void[55])
  }
  function BaseArrOverRectangularDom[149766](?).super[807115](arg _mt[807117]:_MT[238], arg this[807119]:BaseArrOverRectangularDom[149766](?)) : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[807129] "RVV" "temp"
    unknown call_tmp[807136] "expr temp" "maybe param" "maybe type" "temp"
    (807139 'move' call_tmp[807136](807123 '.v' this[807119] c"super"))
    (807134 'move' ret[807129](807133 'deref' call_tmp[807136]))
    (807131 return ret[807129])
  }
  function BaseArrOverRectangularDom[807146](?).rank[807141](arg _mt[807143]:_MT[238], arg this[807148]:BaseArrOverRectangularDom[807146](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[807179] "RVV" "param" "temp"
    unknown borrowOfThis[807150]
    (807171 'end of statement')
    (807152 'move' borrowOfThis[807150](807155 call _cast _borrowedNonNilable[214](?) this[807148]))
    (807172 'end of statement' borrowOfThis[807150])
    unknown call_tmp[807193] "expr temp" "maybe param" "maybe type" "temp"
    (807196 'move' call_tmp[807193](807161 'is bound' borrowOfThis[807150] c"rank"))
    if call_tmp[807193]
    {
      unknown call_tmp[807198] "expr temp" "maybe param" "maybe type" "temp"
      (807201 'move' call_tmp[807198](807160 '.' borrowOfThis[807150] c"rank"))
      (807184 'move' ret[807179](807183 'deref' call_tmp[807198]))
      gotoReturn _end_rank[807177] _end_rank[807177]
      (807174 'end of statement' borrowOfThis[807150])
    }
    {
      (807189 'move' ret[807179](807188 'deref' ?[260]))
      gotoReturn _end_rank[807177] _end_rank[807177]
    }
    label _end_rank[807177]
    (807181 return ret[807179])
  }
  function BaseArrOverRectangularDom[807146](?).rank[807203](arg _mt[807205]:_MT[238], arg this[807207]:BaseArrOverRectangularDom[807146](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[807238] "RVV" "param" "temp"
    unknown borrowOfThis[807209] "type variable"
    (807230 'end of statement')
    (807211 'move' borrowOfThis[807209](807214 call _cast _borrowedNonNilable[214](?) this[807207]))
    (807231 'end of statement' borrowOfThis[807209])
    unknown call_tmp[807252] "expr temp" "maybe param" "maybe type" "temp"
    (807255 'move' call_tmp[807252](807220 'is bound' borrowOfThis[807209] c"rank"))
    if call_tmp[807252]
    {
      unknown call_tmp[807257] "expr temp" "maybe param" "maybe type" "temp"
      (807260 'move' call_tmp[807257](807219 '.' borrowOfThis[807209] c"rank"))
      (807243 'move' ret[807238](807242 'deref' call_tmp[807257]))
      gotoReturn _end_rank[807236] _end_rank[807236]
      (807233 'end of statement' borrowOfThis[807209])
    }
    {
      (807248 'move' ret[807238](807247 'deref' ?[260]))
      gotoReturn _end_rank[807236] _end_rank[807236]
    }
    label _end_rank[807236]
    (807240 return ret[807238])
  }
  function BaseArrOverRectangularDom[807146](?).idxType[807262](arg _mt[807264]:_MT[238], arg this[807266]:BaseArrOverRectangularDom[807146](?)) type : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[807301] "RVV" "temp" "type variable"
    unknown borrowOfThis[807268]
    (807293 'end of statement')
    (807270 'move' borrowOfThis[807268](807273 call _cast _borrowedNonNilable[214](?) this[807266]))
    (807294 'end of statement' borrowOfThis[807268])
    unknown call_tmp[807315] "expr temp" "maybe param" "maybe type" "temp"
    (807318 'move' call_tmp[807315](807283 'is bound' borrowOfThis[807268] c"idxType"))
    if call_tmp[807315]
    {
      unknown call_tmp[807320] "expr temp" "maybe param" "maybe type" "temp"
      (807323 'move' call_tmp[807320](807278 '.v' borrowOfThis[807268] c"idxType"))
      unknown call_tmp[807325] "expr temp" "maybe param" "maybe type" "temp"
      (807328 'move' call_tmp[807325](807279 call chpl_checkLegalTypeFieldAccessor this[807266] call_tmp[807320] "idxType"))
      (807306 'move' ret[807301](807305 'deref' call_tmp[807325]))
      gotoReturn _end_idxType[807299] _end_idxType[807299]
      (807296 'end of statement' borrowOfThis[807268])
    }
    {
      (807311 'move' ret[807301](807310 'deref' _uninstantiated[258]))
      gotoReturn _end_idxType[807299] _end_idxType[807299]
    }
    label _end_idxType[807299]
    (807303 return ret[807301])
  }
  function BaseArrOverRectangularDom[807146](?).idxType[807330](arg _mt[807332]:_MT[238], arg this[807334]:BaseArrOverRectangularDom[807146](?)) type : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[807369] "RVV" "temp" "type variable"
    unknown borrowOfThis[807336] "type variable"
    (807361 'end of statement')
    (807338 'move' borrowOfThis[807336](807341 call _cast _borrowedNonNilable[214](?) this[807334]))
    (807362 'end of statement' borrowOfThis[807336])
    unknown call_tmp[807383] "expr temp" "maybe param" "maybe type" "temp"
    (807386 'move' call_tmp[807383](807351 'is bound' borrowOfThis[807336] c"idxType"))
    if call_tmp[807383]
    {
      unknown call_tmp[807388] "expr temp" "maybe param" "maybe type" "temp"
      (807391 'move' call_tmp[807388](807346 '.v' borrowOfThis[807336] c"idxType"))
      unknown call_tmp[807393] "expr temp" "maybe param" "maybe type" "temp"
      (807396 'move' call_tmp[807393](807347 call chpl_checkLegalTypeFieldAccessor this[807334] call_tmp[807388] "idxType"))
      (807374 'move' ret[807369](807373 'deref' call_tmp[807393]))
      gotoReturn _end_idxType[807367] _end_idxType[807367]
      (807364 'end of statement' borrowOfThis[807336])
    }
    {
      (807379 'move' ret[807369](807378 'deref' _uninstantiated[258]))
      gotoReturn _end_idxType[807367] _end_idxType[807367]
    }
    label _end_idxType[807367]
    (807371 return ret[807369])
  }
  function BaseArrOverRectangularDom[807146](?).stridable[807398](arg _mt[807400]:_MT[238], arg this[807402]:BaseArrOverRectangularDom[807146](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[807433] "RVV" "param" "temp"
    unknown borrowOfThis[807404]
    (807425 'end of statement')
    (807406 'move' borrowOfThis[807404](807409 call _cast _borrowedNonNilable[214](?) this[807402]))
    (807426 'end of statement' borrowOfThis[807404])
    unknown call_tmp[807447] "expr temp" "maybe param" "maybe type" "temp"
    (807450 'move' call_tmp[807447](807415 'is bound' borrowOfThis[807404] c"stridable"))
    if call_tmp[807447]
    {
      unknown call_tmp[807452] "expr temp" "maybe param" "maybe type" "temp"
      (807455 'move' call_tmp[807452](807414 '.' borrowOfThis[807404] c"stridable"))
      (807438 'move' ret[807433](807437 'deref' call_tmp[807452]))
      gotoReturn _end_stridable[807431] _end_stridable[807431]
      (807428 'end of statement' borrowOfThis[807404])
    }
    {
      (807443 'move' ret[807433](807442 'deref' ?[260]))
      gotoReturn _end_stridable[807431] _end_stridable[807431]
    }
    label _end_stridable[807431]
    (807435 return ret[807433])
  }
  function BaseArrOverRectangularDom[807146](?).stridable[807457](arg _mt[807459]:_MT[238], arg this[807461]:BaseArrOverRectangularDom[807146](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[807492] "RVV" "param" "temp"
    unknown borrowOfThis[807463] "type variable"
    (807484 'end of statement')
    (807465 'move' borrowOfThis[807463](807468 call _cast _borrowedNonNilable[214](?) this[807461]))
    (807485 'end of statement' borrowOfThis[807463])
    unknown call_tmp[807506] "expr temp" "maybe param" "maybe type" "temp"
    (807509 'move' call_tmp[807506](807474 'is bound' borrowOfThis[807463] c"stridable"))
    if call_tmp[807506]
    {
      unknown call_tmp[807511] "expr temp" "maybe param" "maybe type" "temp"
      (807514 'move' call_tmp[807511](807473 '.' borrowOfThis[807463] c"stridable"))
      (807497 'move' ret[807492](807496 'deref' call_tmp[807511]))
      gotoReturn _end_stridable[807490] _end_stridable[807490]
      (807487 'end of statement' borrowOfThis[807463])
    }
    {
      (807502 'move' ret[807492](807501 'deref' ?[260]))
      gotoReturn _end_stridable[807490] _end_stridable[807490]
    }
    label _end_stridable[807490]
    (807494 return ret[807492])
  }
  function BaseArrOverRectangularDom[149766](?).init[807516](arg _mt[807518]:_MT[238], arg this[807519]:BaseArrOverRectangularDom[149766](?), in arg pid[807534]:int(64)[13] :
  int(64)[13] =
  nullPid[113724], in arg _decEltRefCounts[807541]:bool[10] :
  bool[10] =
  0, param arg rank[807544]:int(64)[13], arg idxType[807556]:_any[178](?), param arg stridable[807565]:bool[10]) : void[4] "compiler generated" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown super_tmp[807579] "temporary of super field" "temp"
    (807581 'move' super_tmp[807579](807578 '.v' this[807519] c"super"))
    (807529 call(807527 call (partial) init _mt[243] super_tmp[807579]) pid[807534] _decEltRefCounts[807541])
    (807617 'end of statement')
    unknown tmp[807584] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[807621] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[807633] "expr temp" "maybe param" "maybe type" "temp"
      (807636 'move' call_tmp[807633](807586 '.v' this[807519] c"super"))
      (807625 'move' call_type_tmp[807621](807589 'typeof' call_tmp[807633]))
    }
    (807590 'move' tmp[807584] call_type_tmp[807621])
    unknown call_tmp[807638] "maybe param" "maybe type" "temp"
    (807641 'move' call_tmp[807638](807595 'cast' tmp[807584] this[807519]))
    unknown chpl__thisAsParent[807592] "dead at end of block" "insert auto destroy" "temp"
    (807629 'init var' chpl__thisAsParent[807592] call_tmp[807638] tmp[807584])
    (807598 'setcid' chpl__thisAsParent[807592])
    unknown call_tmp[807643] "expr temp" "maybe param" "maybe type" "temp"
    (807646 'move' call_tmp[807643](807601 call _cast int(64)[13] rank[807544]))
    (807603 'init field' this[807519] c"rank" call_tmp[807643])
    (807618 'end of statement')
    (807606 'init field' this[807519] c"idxType" idxType[807556])
    unknown call_tmp[807648] "expr temp" "maybe param" "maybe type" "temp"
    (807651 'move' call_tmp[807648](807610 call _cast bool[10] stridable[807565]))
    (807612 'init field' this[807519] c"stridable" call_tmp[807648])
    (807619 'end of statement')
    (807615 'setcid' this[807519])
    (807627 return _void[55])
  }
  type BaseArrOverRectangularDom[149766](?) val super[355723]:BaseArr[149545] "super class" unknown rank[149712] "param" int(64)[13] unknown idxType[149716] "type variable" unknown stridable[149720] "param" bool[10]
  type BaseArrOverRectangularDom[807146](?)
  type BaseArrOverRectangularDom[385588](?)
  function BaseRectangularArr[149817](?).deinit[149789](arg _mt[149821]:_MT[238], arg this[149819]:BaseRectangularArr[149817](?)) : _unknown[51] "destructor" "method" "primary method" "no return value for void"
  {
    (520413 return _void[55])
  }
  function BaseRectangularArr[149817](?).decEltCountsIfNeeded[149796](arg _mt[149825]:_MT[238], arg this[149823]:BaseRectangularArr[149817](?)) : _unknown[51] "method" "primary method" "method overrides" "no return value for void"
  {
    unknown call_tmp[669256] "expr temp" "maybe param" "maybe type" "temp"
    (669259 'move' call_tmp[669256](385941 call _decEltRefCounts _mt[243] this[149823]))
    unknown call_tmp[669261] "expr temp" "maybe param" "maybe type" "temp"
    (669264 'move' call_tmp[669261](149809 call _cond_test call_tmp[669256]))
    if call_tmp[669261]
    {
      unknown call_tmp[669266] "expr temp" "maybe param" "maybe type" "temp"
      (669269 'move' call_tmp[669266](149803 call _to_unmanaged this[149823]))
      unknown call_tmp[669273] "expr temp" "maybe param" "maybe type" "temp"
      (669276 'move' call_tmp[669273](385947 call eltType _mt[243] this[149823]))
      (149806 call chpl_decRefCountsForDomainsInArrayEltTypes call_tmp[669266] call_tmp[669273])
    }
    (520415 return _void[55])
  }
  function BaseRectangularArr[149817](?).super[807653](arg _mt[807655]:_MT[238], arg this[807657]:BaseRectangularArr[149817](?)) : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[807667] "RVV" "temp"
    unknown call_tmp[807674] "expr temp" "maybe param" "maybe type" "temp"
    (807677 'move' call_tmp[807674](807661 '.v' this[807657] c"super"))
    (807672 'move' ret[807667](807671 'deref' call_tmp[807674]))
    (807669 return ret[807667])
  }
  function BaseRectangularArr[807684](?).eltType[807679](arg _mt[807681]:_MT[238], arg this[807686]:BaseRectangularArr[807684](?)) type : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[807721] "RVV" "temp" "type variable"
    unknown borrowOfThis[807688]
    (807713 'end of statement')
    (807690 'move' borrowOfThis[807688](807693 call _cast _borrowedNonNilable[214](?) this[807686]))
    (807714 'end of statement' borrowOfThis[807688])
    unknown call_tmp[807735] "expr temp" "maybe param" "maybe type" "temp"
    (807738 'move' call_tmp[807735](807703 'is bound' borrowOfThis[807688] c"eltType"))
    if call_tmp[807735]
    {
      unknown call_tmp[807740] "expr temp" "maybe param" "maybe type" "temp"
      (807743 'move' call_tmp[807740](807698 '.v' borrowOfThis[807688] c"eltType"))
      unknown call_tmp[807745] "expr temp" "maybe param" "maybe type" "temp"
      (807748 'move' call_tmp[807745](807699 call chpl_checkLegalTypeFieldAccessor this[807686] call_tmp[807740] "eltType"))
      (807726 'move' ret[807721](807725 'deref' call_tmp[807745]))
      gotoReturn _end_eltType[807719] _end_eltType[807719]
      (807716 'end of statement' borrowOfThis[807688])
    }
    {
      (807731 'move' ret[807721](807730 'deref' _uninstantiated[258]))
      gotoReturn _end_eltType[807719] _end_eltType[807719]
    }
    label _end_eltType[807719]
    (807723 return ret[807721])
  }
  function BaseRectangularArr[807684](?).eltType[807750](arg _mt[807752]:_MT[238], arg this[807754]:BaseRectangularArr[807684](?)) type : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[807789] "RVV" "temp" "type variable"
    unknown borrowOfThis[807756] "type variable"
    (807781 'end of statement')
    (807758 'move' borrowOfThis[807756](807761 call _cast _borrowedNonNilable[214](?) this[807754]))
    (807782 'end of statement' borrowOfThis[807756])
    unknown call_tmp[807803] "expr temp" "maybe param" "maybe type" "temp"
    (807806 'move' call_tmp[807803](807771 'is bound' borrowOfThis[807756] c"eltType"))
    if call_tmp[807803]
    {
      unknown call_tmp[807808] "expr temp" "maybe param" "maybe type" "temp"
      (807811 'move' call_tmp[807808](807766 '.v' borrowOfThis[807756] c"eltType"))
      unknown call_tmp[807813] "expr temp" "maybe param" "maybe type" "temp"
      (807816 'move' call_tmp[807813](807767 call chpl_checkLegalTypeFieldAccessor this[807754] call_tmp[807808] "eltType"))
      (807794 'move' ret[807789](807793 'deref' call_tmp[807813]))
      gotoReturn _end_eltType[807787] _end_eltType[807787]
      (807784 'end of statement' borrowOfThis[807756])
    }
    {
      (807799 'move' ret[807789](807798 'deref' _uninstantiated[258]))
      gotoReturn _end_eltType[807787] _end_eltType[807787]
    }
    label _end_eltType[807787]
    (807791 return ret[807789])
  }
  function BaseRectangularArr[149817](?).init[807818](arg _mt[807820]:_MT[238], arg this[807821]:BaseRectangularArr[149817](?), in arg pid[807836]:int(64)[13] :
  int(64)[13] =
  nullPid[113724], in arg _decEltRefCounts[807843]:bool[10] :
  bool[10] =
  0, param arg rank[807846]:int(64)[13], arg idxType[807849]:_any[178](?), param arg stridable[807852]:bool[10], arg eltType[807855]:_any[178](?)) : void[4] "compiler generated" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown super_tmp[807866] "temporary of super field" "temp"
    (807868 'move' super_tmp[807866](807865 '.v' this[807821] c"super"))
    (807831 call(807829 call (partial) init _mt[243] super_tmp[807866]) pid[807836] _decEltRefCounts[807843] rank[807846] idxType[807849] stridable[807852])
    (807892 'end of statement')
    unknown tmp[807871] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[807895] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[807907] "expr temp" "maybe param" "maybe type" "temp"
      (807910 'move' call_tmp[807907](807873 '.v' this[807821] c"super"))
      (807899 'move' call_type_tmp[807895](807876 'typeof' call_tmp[807907]))
    }
    (807877 'move' tmp[807871] call_type_tmp[807895])
    unknown call_tmp[807912] "maybe param" "maybe type" "temp"
    (807915 'move' call_tmp[807912](807882 'cast' tmp[807871] this[807821]))
    unknown chpl__thisAsParent[807879] "dead at end of block" "insert auto destroy" "temp"
    (807903 'init var' chpl__thisAsParent[807879] call_tmp[807912] tmp[807871])
    (807885 'setcid' chpl__thisAsParent[807879])
    (807887 'init field' this[807821] c"eltType" eltType[807855])
    (807893 'end of statement')
    (807890 'setcid' this[807821])
    (807901 return _void[55])
  }
  type BaseRectangularArr[149817](?) val super[355725]:BaseArrOverRectangularDom[149766](?) "delay instantiation" "super class" unknown eltType[149784] "type variable"
  type BaseRectangularArr[807684](?)
  function BaseSparseArr[149861](?).dsiGetBaseDom[149845](arg _mt[149865]:_MT[238], arg this[149863]:BaseSparseArr[149861](?)) : _unknown[51] "method" "primary method" "method overrides"
  {
    unknown ret[520419] "RVV" "temp"
    unknown call_tmp[669280] "expr temp" "maybe param" "maybe type" "temp"
    (669283 'move' call_tmp[669280](385952 call dom _mt[243] this[149863]))
    (520424 'move' ret[520419](520423 'deref' call_tmp[669280]))
    (520421 return ret[520419])
  }
  function BaseSparseArr[149861](?).deinit[149855](arg _mt[149869]:_MT[238], arg this[149867]:BaseSparseArr[149861](?)) : _unknown[51] "destructor" "method" "primary method" "no return value for void"
  {
    (520426 return _void[55])
  }
  function BaseSparseArr[149861](?).super[807917](arg _mt[807919]:_MT[238], arg this[807921]:BaseSparseArr[149861](?)) : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[807931] "RVV" "temp"
    unknown call_tmp[807938] "expr temp" "maybe param" "maybe type" "temp"
    (807941 'move' call_tmp[807938](807925 '.v' this[807921] c"super"))
    (807936 'move' ret[807931](807935 'deref' call_tmp[807938]))
    (807933 return ret[807931])
  }
  function BaseSparseArr[807948](?).rank[807943](arg _mt[807945]:_MT[238], arg this[807950]:BaseSparseArr[807948](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[807981] "RVV" "param" "temp"
    unknown borrowOfThis[807952]
    (807973 'end of statement')
    (807954 'move' borrowOfThis[807952](807957 call _cast _borrowedNonNilable[214](?) this[807950]))
    (807974 'end of statement' borrowOfThis[807952])
    unknown call_tmp[807995] "expr temp" "maybe param" "maybe type" "temp"
    (807998 'move' call_tmp[807995](807963 'is bound' borrowOfThis[807952] c"rank"))
    if call_tmp[807995]
    {
      unknown call_tmp[808000] "expr temp" "maybe param" "maybe type" "temp"
      (808003 'move' call_tmp[808000](807962 '.' borrowOfThis[807952] c"rank"))
      (807986 'move' ret[807981](807985 'deref' call_tmp[808000]))
      gotoReturn _end_rank[807979] _end_rank[807979]
      (807976 'end of statement' borrowOfThis[807952])
    }
    {
      (807991 'move' ret[807981](807990 'deref' ?[260]))
      gotoReturn _end_rank[807979] _end_rank[807979]
    }
    label _end_rank[807979]
    (807983 return ret[807981])
  }
  function BaseSparseArr[807948](?).rank[808005](arg _mt[808007]:_MT[238], arg this[808009]:BaseSparseArr[807948](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[808040] "RVV" "param" "temp"
    unknown borrowOfThis[808011] "type variable"
    (808032 'end of statement')
    (808013 'move' borrowOfThis[808011](808016 call _cast _borrowedNonNilable[214](?) this[808009]))
    (808033 'end of statement' borrowOfThis[808011])
    unknown call_tmp[808054] "expr temp" "maybe param" "maybe type" "temp"
    (808057 'move' call_tmp[808054](808022 'is bound' borrowOfThis[808011] c"rank"))
    if call_tmp[808054]
    {
      unknown call_tmp[808059] "expr temp" "maybe param" "maybe type" "temp"
      (808062 'move' call_tmp[808059](808021 '.' borrowOfThis[808011] c"rank"))
      (808045 'move' ret[808040](808044 'deref' call_tmp[808059]))
      gotoReturn _end_rank[808038] _end_rank[808038]
      (808035 'end of statement' borrowOfThis[808011])
    }
    {
      (808050 'move' ret[808040](808049 'deref' ?[260]))
      gotoReturn _end_rank[808038] _end_rank[808038]
    }
    label _end_rank[808038]
    (808042 return ret[808040])
  }
  function BaseSparseArr[807948](?).idxType[808064](arg _mt[808066]:_MT[238], arg this[808068]:BaseSparseArr[807948](?)) type : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[808103] "RVV" "temp" "type variable"
    unknown borrowOfThis[808070]
    (808095 'end of statement')
    (808072 'move' borrowOfThis[808070](808075 call _cast _borrowedNonNilable[214](?) this[808068]))
    (808096 'end of statement' borrowOfThis[808070])
    unknown call_tmp[808117] "expr temp" "maybe param" "maybe type" "temp"
    (808120 'move' call_tmp[808117](808085 'is bound' borrowOfThis[808070] c"idxType"))
    if call_tmp[808117]
    {
      unknown call_tmp[808122] "expr temp" "maybe param" "maybe type" "temp"
      (808125 'move' call_tmp[808122](808080 '.v' borrowOfThis[808070] c"idxType"))
      unknown call_tmp[808127] "expr temp" "maybe param" "maybe type" "temp"
      (808130 'move' call_tmp[808127](808081 call chpl_checkLegalTypeFieldAccessor this[808068] call_tmp[808122] "idxType"))
      (808108 'move' ret[808103](808107 'deref' call_tmp[808127]))
      gotoReturn _end_idxType[808101] _end_idxType[808101]
      (808098 'end of statement' borrowOfThis[808070])
    }
    {
      (808113 'move' ret[808103](808112 'deref' _uninstantiated[258]))
      gotoReturn _end_idxType[808101] _end_idxType[808101]
    }
    label _end_idxType[808101]
    (808105 return ret[808103])
  }
  function BaseSparseArr[807948](?).idxType[808132](arg _mt[808134]:_MT[238], arg this[808136]:BaseSparseArr[807948](?)) type : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[808171] "RVV" "temp" "type variable"
    unknown borrowOfThis[808138] "type variable"
    (808163 'end of statement')
    (808140 'move' borrowOfThis[808138](808143 call _cast _borrowedNonNilable[214](?) this[808136]))
    (808164 'end of statement' borrowOfThis[808138])
    unknown call_tmp[808185] "expr temp" "maybe param" "maybe type" "temp"
    (808188 'move' call_tmp[808185](808153 'is bound' borrowOfThis[808138] c"idxType"))
    if call_tmp[808185]
    {
      unknown call_tmp[808190] "expr temp" "maybe param" "maybe type" "temp"
      (808193 'move' call_tmp[808190](808148 '.v' borrowOfThis[808138] c"idxType"))
      unknown call_tmp[808195] "expr temp" "maybe param" "maybe type" "temp"
      (808198 'move' call_tmp[808195](808149 call chpl_checkLegalTypeFieldAccessor this[808136] call_tmp[808190] "idxType"))
      (808176 'move' ret[808171](808175 'deref' call_tmp[808195]))
      gotoReturn _end_idxType[808169] _end_idxType[808169]
      (808166 'end of statement' borrowOfThis[808138])
    }
    {
      (808181 'move' ret[808171](808180 'deref' _uninstantiated[258]))
      gotoReturn _end_idxType[808169] _end_idxType[808169]
    }
    label _end_idxType[808169]
    (808173 return ret[808171])
  }
  function BaseSparseArr[149861](?).dom[808200](arg _mt[808202]:_MT[238], arg this[808204]:BaseSparseArr[149861](?)) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[808214] "RVV" "temp"
    unknown call_tmp[808221] "expr temp" "maybe param" "maybe type" "temp"
    (808224 'move' call_tmp[808221](808208 '.' this[808204] c"dom"))
    (808219 'move' ret[808214](808218 'addr of' call_tmp[808221]))
    (808216 return ret[808214])
  }
  function BaseSparseArr[149861](?).init[808226](arg _mt[808228]:_MT[238], arg this[808229]:BaseSparseArr[149861](?), in arg pid[808244]:int(64)[13] :
  int(64)[13] =
  nullPid[113724], in arg _decEltRefCounts[808251]:bool[10] :
  bool[10] =
  0, arg eltType[808254]:_any[178](?), param arg rank[808257]:int(64)[13], arg idxType[808269]:_any[178](?), in arg dom[808278]:_any[178](?)) : void[4] "compiler generated" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown super_tmp[808289] "temporary of super field" "temp"
    (808291 'move' super_tmp[808289](808288 '.v' this[808229] c"super"))
    (808239 call(808237 call (partial) init _mt[243] super_tmp[808289]) pid[808244] _decEltRefCounts[808251] eltType[808254])
    (808324 'end of statement')
    unknown tmp[808294] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[808328] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[808340] "expr temp" "maybe param" "maybe type" "temp"
      (808343 'move' call_tmp[808340](808296 '.v' this[808229] c"super"))
      (808332 'move' call_type_tmp[808328](808299 'typeof' call_tmp[808340]))
    }
    (808300 'move' tmp[808294] call_type_tmp[808328])
    unknown call_tmp[808345] "maybe param" "maybe type" "temp"
    (808348 'move' call_tmp[808345](808305 'cast' tmp[808294] this[808229]))
    unknown chpl__thisAsParent[808302] "dead at end of block" "insert auto destroy" "temp"
    (808336 'init var' chpl__thisAsParent[808302] call_tmp[808345] tmp[808294])
    (808308 'setcid' chpl__thisAsParent[808302])
    unknown call_tmp[808350] "expr temp" "maybe param" "maybe type" "temp"
    (808353 'move' call_tmp[808350](808311 call _cast int(64)[13] rank[808257]))
    (808313 'init field' this[808229] c"rank" call_tmp[808350])
    (808325 'end of statement')
    (808316 'init field' this[808229] c"idxType" idxType[808269])
    (808319 'init field' this[808229] c"dom" dom[808278])
    (808326 'end of statement')
    (808322 'setcid' this[808229])
    (808334 return _void[55])
  }
  type BaseSparseArr[149861](?) val super[355737]:AbsBaseArr[149701](?) "delay instantiation" "super class" unknown rank[149832] "param" int(64)[13] unknown idxType[149836] "type variable" unknown dom[149839]
  type BaseSparseArr[807948](?)
  function BaseSparseArrImpl[150531](?).init[149895](arg _mt[150535]:_MT[238], arg this[150533]:BaseSparseArrImpl[150531](?), arg eltType[149893]:_any[178](?), param arg rank[149898]:int(64)[13], arg idxType[149901]:_any[178](?), arg dom[149903]:_any[178](?), param arg initElts[149906]:bool[10]) : void[4] "method" "primary method" "no return value for void"
  {
    unknown super_tmp[461874] "temporary of super field" "temp"
    (461876 'move' super_tmp[461874](461873 '.v' this[150533] c"super"))
    (149922 call(149910 call (partial) init _mt[243] super_tmp[461874])(eltType = eltType[149893])(rank = rank[149898])(idxType = idxType[149901])(dom = dom[149903]))
    (481672 'end of statement')
    unknown tmp[461879] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[492385] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[669287] "expr temp" "maybe param" "maybe type" "temp"
      (669290 'move' call_tmp[669287](461881 '.v' this[150533] c"super"))
      (492389 'move' call_type_tmp[492385](461884 'typeof' call_tmp[669287]))
    }
    (461885 'move' tmp[461879] call_type_tmp[492385])
    unknown call_tmp[669292] "maybe param" "maybe type" "temp"
    (669295 'move' call_tmp[669292](461890 'cast' tmp[461879] this[150533]))
    unknown chpl__thisAsParent[461887] "dead at end of block" "insert auto destroy" "temp"
    (543667 'init var' chpl__thisAsParent[461887] call_tmp[669292] tmp[461879])
    (461893 'setcid' chpl__thisAsParent[461887])
    (481673 'end of statement')
    unknown call_tmp[669297] "expr temp" "maybe param" "maybe type" "temp"
    (669300 'move' call_tmp[669297](149930 '.' this[150533] c"dom"))
    unknown call_tmp[669304] "expr temp" "maybe param" "maybe type" "temp"
    (669307 'move' call_tmp[669304](149933 call nnzDom _mt[243] call_tmp[669297]))
    unknown call_tmp[669311] "maybe param" "maybe type" "temp"
    (669314 'move' call_tmp[669311](149943 call(149936 call (partial) buildArray _mt[243] call_tmp[669304]) eltType[149893](initElts = initElts[149906])))
    unknown call_tmp[669316] "expr temp" "maybe param" "maybe type" "temp"
    (669319 'move' call_tmp[669316](461912 '.' this[150533] c"dom"))
    unknown call_tmp[669323] "expr temp" "maybe param" "maybe type" "temp"
    (669326 'move' call_tmp[669323](461902 call nnzDom _mt[243] call_tmp[669316]))
    unknown call_tmp[669328] "expr temp" "maybe param" "maybe type" "temp"
    (669331 'move' call_tmp[669328](461900 call chpl__ensureDomainExpr call_tmp[669323]))
    unknown call_tmp[669333] "expr temp" "maybe param" "maybe type" "temp"
    (669336 'move' call_tmp[669333](461915 '.v' this[150533] c"eltType"))
    unknown call_tmp[669338] "maybe param" "maybe type" "temp"
    (669341 'move' call_tmp[669338](461898 call chpl__buildArrayRuntimeType call_tmp[669328] call_tmp[669333]))
    unknown tmp[461895] "temp"
    (461906 'init var' tmp[461895] call_tmp[669311] call_tmp[669338])
    (461908 'init field' this[150533] c"data" tmp[461895])
    (481674 'end of statement')
    unknown tmp[461919] "temp"
    unknown call_tmp[669343] "expr temp" "maybe param" "maybe type" "temp"
    (669346 'move' call_tmp[669343](461928 '.v' this[150533] c"eltType"))
    (461922 'default init var' tmp[461919] call_tmp[669343])
    (461924 '.=' this[150533] c"irv" tmp[461919])
    (481675 'end of statement')
    (461931 'setcid' this[150533])
    (520428 return _void[55])
  }
  function BaseSparseArrImpl[150531](?).deinit[149951](arg _mt[150539]:_MT[238], arg this[150537]:BaseSparseArrImpl[150531](?)) : _unknown[51] "destructor" "method" "primary method" "no return value for void"
  {
    (520430 return _void[55])
  }
  function BaseSparseArrImpl[150531](?).dsiElementInitializationComplete[149958](arg _mt[150543]:_MT[238], arg this[150541]:BaseSparseArrImpl[150531](?)) : _unknown[51] "method" "primary method" "method overrides" "no return value for void"
  {
    unknown call_tmp[669350] "expr temp" "maybe param" "maybe type" "temp"
    (669353 'move' call_tmp[669350](360731 call data _mt[243] this[150541]))
    (149965 call(149961 call (partial) dsiElementInitializationComplete _mt[243] call_tmp[669350]))
    (520432 return _void[55])
  }
  function BaseSparseArrImpl[150531](?).dsiElementDeinitializationComplete[149972](arg _mt[150547]:_MT[238], arg this[150545]:BaseSparseArrImpl[150531](?)) : _unknown[51] "method" "primary method" "method overrides" "no return value for void"
  {
    unknown call_tmp[669359] "expr temp" "maybe param" "maybe type" "temp"
    (669362 'move' call_tmp[669359](360736 call data _mt[243] this[150545]))
    (149979 call(149975 call (partial) dsiElementDeinitializationComplete _mt[243] call_tmp[669359]))
    (520434 return _void[55])
  }
  function BaseSparseArrImpl[150531](?).dsiDestroyArr[149990](arg _mt[150551]:_MT[238], arg this[150549]:BaseSparseArrImpl[150531](?), arg deinitElts[149987]:bool[10]) : _unknown[51] "method" "primary method" "method overrides" "no return value for void"
  {
    unknown call_tmp[669366] "expr temp" "maybe param" "maybe type" "temp"
    (669369 'move' call_tmp[669366](149998 call _cond_test deinitElts[149987]))
    if call_tmp[669366]
    {
      unknown call_tmp[669373] "expr temp" "maybe param" "maybe type" "temp"
      (669376 'move' call_tmp[669373](385965 call data _mt[243] this[150549]))
      (149996 call _deinitElements call_tmp[669373])
    }
    (520436 return _void[55])
  }
  function BaseSparseArrImpl[150531](?).IRV[150013](arg _mt[150555]:_MT[238], arg this[150553]:BaseSparseArrImpl[150531](?)) ref : _unknown[51] "method" "primary method" "no parens"
  {
    unknown ret[520440] "RVV" "temp"
    unknown call_tmp[669380] "expr temp" "maybe param" "maybe type" "temp"
    (669383 'move' call_tmp[669380](385973 call irv _mt[243] this[150553]))
    (520445 'move' ret[520440](520444 'addr of' call_tmp[669380]))
    (520442 return ret[520440])
  }
  function BaseSparseArrImpl[150531](?).sparseBulkShiftArray[150025](arg _mt[150559]:_MT[238], arg this[150557]:BaseSparseArrImpl[150531](?), arg shiftMap[150023]:_any[178](?), arg oldnnz[150027]:_any[178](?)) : _unknown[51] "method" "primary method" "method overrides" "no return value for void"
  {
    unknown newIdx[150030] "dead at end of block" "insert auto destroy"
    (543669 'default init var' newIdx[150030] int(64)[13])
    (150033 'end of statement')
    unknown prevNewIdx[150036] "dead at end of block" "insert auto destroy"
    (543671 'init var' prevNewIdx[150036] 1)
    (150039 'end of statement')
    unknown call_tmp[669387] "expr temp" "maybe param" "maybe type" "temp"
    (669390 'move' call_tmp[669387](150042 call _dom _mt[243] shiftMap[150023]))
    unknown call_tmp[669394] "expr temp" "maybe param" "maybe type" "temp"
    (669397 'move' call_tmp[669394](150045 call high _mt[243] call_tmp[669387]))
    unknown call_tmp[669399] "expr temp" "maybe param" "maybe type" "temp"
    (669402 'move' call_tmp[669399](150049 call + call_tmp[669394] 1))
    unknown call_tmp[669406] "expr temp" "maybe param" "maybe type" "temp"
    (669409 'move' call_tmp[669406](360742 call dom _mt[243] this[150557]))
    unknown call_tmp[669413] "expr temp" "maybe param" "maybe type" "temp"
    (669416 'move' call_tmp[669413](150052 call nnzDom _mt[243] call_tmp[669406]))
    unknown call_tmp[669420] "expr temp" "maybe param" "maybe type" "temp"
    (669423 'move' call_tmp[669420](150055 call high _mt[243] call_tmp[669413]))
    unknown call_tmp[669425] "expr temp" "maybe param" "maybe type" "temp"
    (669428 'move' call_tmp[669425](150058 call chpl_build_bounded_range call_tmp[669399] call_tmp[669420]))
    Forall {
      induction variables:
        
        unknown i[150069] "index var" "insert auto destroy"
      iterated expressions:
        call_tmp[669425]
      shadow variables:
      other variables
        forall body
      {
        unknown call_tmp[669432] "expr temp" "maybe param" "maybe type" "temp"
        (669435 'move' call_tmp[669432](150063 call(385978 call (partial) data _mt[243] this[150557]) i[150069]))
        unknown call_tmp[669439] "expr temp" "maybe param" "maybe type" "temp"
        (669442 'move' call_tmp[669439](385984 call irv _mt[243] this[150557]))
        (150065 call = call_tmp[669432] call_tmp[669439])
        (481681 'end of statement' i[150069])
      }
    }
    {
      unknown _indexOfInterest[150191] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[150192] "expr temp" "temp"
      unknown call_tmp[669444] "expr temp" "maybe param" "maybe type" "temp"
      (669447 'move' call_tmp[669444](150216 call - 1))
      unknown call_tmp[669449] "expr temp" "maybe param" "maybe type" "temp"
      (669452 'move' call_tmp[669449](150220 call chpl_direct_range_iter 1 oldnnz[150027] call_tmp[669444]))
      unknown call_tmp[669454] "expr temp" "maybe param" "maybe type" "temp"
      (669457 'move' call_tmp[669454](150209 call _getIterator call_tmp[669449]))
      unknown call_tmp[669461] "expr temp" "maybe param" "maybe type" "temp"
      (669464 'move' call_tmp[669461](150227 call _dom _mt[243] shiftMap[150023]))
      unknown call_tmp[669468] "expr temp" "maybe param" "maybe type" "temp"
      (669471 'move' call_tmp[669468](150231 call(150225 call (partial) dim _mt[243] call_tmp[669461]) 0))
      unknown call_tmp[669473] "expr temp" "maybe param" "maybe type" "temp"
      (669476 'move' call_tmp[669473](150234 call - 1))
      unknown call_tmp[669478] "expr temp" "maybe param" "maybe type" "temp"
      (669481 'move' call_tmp[669478](150223 call chpl_by call_tmp[669468] call_tmp[669473]))
      unknown call_tmp[669483] "expr temp" "maybe param" "maybe type" "temp"
      (669486 'move' call_tmp[669483](150236 call _getIterator call_tmp[669478]))
      (150250 'move' _iterator[150192](150102 call _build_tuple call_tmp[669454] call_tmp[669483]))
      Defer
      {
        {
          (150280 call _freeIterator _iterator[150192])
        }
      }
      { scopeless type
        (150255 'move' _indexOfInterest[150191](150252 call iteratorIndex _iterator[150192]))
      }
      ForLoop[150193]
      {
        (150260 call _check_tuple_var_decl _indexOfInterest[150191] 2)
        (481684 'end of statement')
        unknown i[150266] "index var" "insert auto destroy"
        (481685 'end of statement')
        (150268 'move' i[150266](150264 call _indexOfInterest[150191] 0))
        (481686 'end of statement' i[150266])
        unknown _newIdx[150273] "index var" "insert auto destroy"
        (481688 'end of statement')
        (150275 'move' _newIdx[150273](150271 call _indexOfInterest[150191] 1))
        (481689 'end of statement' _newIdx[150273])
        {
          unknown call_tmp[669488] "expr temp" "maybe param" "maybe type" "temp"
          (669491 'move' call_tmp[669488](150107 call shiftMap[150023] _newIdx[150273]))
          (150108 call = newIdx[150030] call_tmp[669488])
          (481691 'end of statement' newIdx[150030] _newIdx[150273])
          unknown call_tmp[669495] "expr temp" "maybe param" "maybe type" "temp"
          (669498 'move' call_tmp[669495](150115 call(385992 call (partial) data _mt[243] this[150557]) newIdx[150030]))
          unknown call_tmp[669502] "expr temp" "maybe param" "maybe type" "temp"
          (669505 'move' call_tmp[669502](150119 call(385998 call (partial) data _mt[243] this[150557]) i[150266]))
          (150120 call = call_tmp[669495] call_tmp[669502])
          (481694 'end of statement' newIdx[150030] i[150266])
          {
            unknown _indexOfInterest[150142] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[150143] "expr temp" "temp"
            unknown call_tmp[669507] "expr temp" "maybe param" "maybe type" "temp"
            (669510 'move' call_tmp[669507](150156 call + newIdx[150030] 1))
            unknown call_tmp[669512] "expr temp" "maybe param" "maybe type" "temp"
            (669515 'move' call_tmp[669512](150160 call - prevNewIdx[150036] 1))
            unknown call_tmp[669517] "expr temp" "maybe param" "maybe type" "temp"
            (669520 'move' call_tmp[669517](150163 call chpl_direct_range_iter call_tmp[669507] call_tmp[669512] 1))
            (150152 'move' _iterator[150143](150150 call _getIterator call_tmp[669517]))
            Defer
            {
              {
                (150179 call _freeIterator _iterator[150143])
              }
            }
            { scopeless type
              (150168 'move' _indexOfInterest[150142](150165 call iteratorIndex _iterator[150143]))
            }
            ForLoop[150144]
            {
              unknown emptyIndex[150172] "index var" "insert auto destroy"
              (481698 'end of statement')
              (150174 'move' emptyIndex[150172] _indexOfInterest[150142])
              (481699 'end of statement' emptyIndex[150172])
              unknown call_tmp[669524] "expr temp" "maybe param" "maybe type" "temp"
              (669527 'move' call_tmp[669524](150137 call(386004 call (partial) data _mt[243] this[150557]) emptyIndex[150172]))
              unknown call_tmp[669531] "expr temp" "maybe param" "maybe type" "temp"
              (669534 'move' call_tmp[669531](386010 call irv _mt[243] this[150557]))
              (150139 call = call_tmp[669524] call_tmp[669531])
              (481701 'end of statement' emptyIndex[150172])
              label _continueLabel[150147]
              _indexOfInterest[150142]
              _iterator[150143]
            }
            label _breakLabel[150148]
          }
          (150188 call = prevNewIdx[150036] newIdx[150030])
          (481703 'end of statement' prevNewIdx[150036] newIdx[150030])
        }
        label _continueLabel[150196]
        _indexOfInterest[150191]
        _iterator[150192]
      }
      label _breakLabel[150197]
    }
    {
      unknown _indexOfInterest[150303] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[150304] "expr temp" "temp"
      unknown call_tmp[669536] "expr temp" "maybe param" "maybe type" "temp"
      (669539 'move' call_tmp[669536](150318 call - prevNewIdx[150036] 1))
      unknown call_tmp[669541] "expr temp" "maybe param" "maybe type" "temp"
      (669544 'move' call_tmp[669541](150321 call chpl_direct_range_iter 1 call_tmp[669536] 1))
      (150313 'move' _iterator[150304](150311 call _getIterator call_tmp[669541]))
      Defer
      {
        {
          (150337 call _freeIterator _iterator[150304])
        }
      }
      { scopeless type
        (150326 'move' _indexOfInterest[150303](150323 call iteratorIndex _iterator[150304]))
      }
      ForLoop[150305]
      {
        unknown i[150330] "index var" "insert auto destroy"
        (481707 'end of statement')
        (150332 'move' i[150330] _indexOfInterest[150303])
        (481708 'end of statement' i[150330])
        unknown call_tmp[669548] "expr temp" "maybe param" "maybe type" "temp"
        (669551 'move' call_tmp[669548](150298 call(386020 call (partial) data _mt[243] this[150557]) i[150330]))
        unknown call_tmp[669555] "expr temp" "maybe param" "maybe type" "temp"
        (669558 'move' call_tmp[669555](386026 call irv _mt[243] this[150557]))
        (150300 call = call_tmp[669548] call_tmp[669555])
        (481710 'end of statement' i[150330])
        label _continueLabel[150308]
        _indexOfInterest[150303]
        _iterator[150304]
      }
      label _breakLabel[150309]
    }
    (520447 return _void[55])
  }
  function BaseSparseArrImpl[150531](?).sparseShiftArray[150350](arg _mt[150563]:_MT[238], arg this[150561]:BaseSparseArrImpl[150531](?), arg shiftrange[150348]:_any[178](?), arg initrange[150352]:_any[178](?)) : _unknown[51] "method" "primary method" "method overrides" "no return value for void"
  {
    {
      unknown _indexOfInterest[150365] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[150366] "expr temp" "temp"
      (150375 'move' _iterator[150366](150373 call _getIterator initrange[150352]))
      Defer
      {
        {
          (150391 call _freeIterator _iterator[150366])
        }
      }
      { scopeless type
        (150380 'move' _indexOfInterest[150365](150377 call iteratorIndex _iterator[150366]))
      }
      ForLoop[150367]
      {
        unknown i[150384] "index var" "insert auto destroy"
        (481713 'end of statement')
        (150386 'move' i[150384] _indexOfInterest[150365])
        (481714 'end of statement' i[150384])
        {
          unknown call_tmp[669562] "expr temp" "maybe param" "maybe type" "temp"
          (669565 'move' call_tmp[669562](150359 call(386033 call (partial) data _mt[243] this[150561]) i[150384]))
          unknown call_tmp[669569] "expr temp" "maybe param" "maybe type" "temp"
          (669572 'move' call_tmp[669569](386039 call irv _mt[243] this[150561]))
          (150361 call = call_tmp[669562] call_tmp[669569])
          (481716 'end of statement' i[150384])
        }
        label _continueLabel[150370]
        _indexOfInterest[150365]
        _iterator[150366]
      }
      label _breakLabel[150371]
    }
    {
      unknown _indexOfInterest[150421] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[150422] "expr temp" "temp"
      unknown call_tmp[669574] "expr temp" "maybe param" "maybe type" "temp"
      (669577 'move' call_tmp[669574](150402 call - 1))
      unknown call_tmp[669579] "expr temp" "maybe param" "maybe type" "temp"
      (669582 'move' call_tmp[669579](150404 call chpl_by shiftrange[150348] call_tmp[669574]))
      (150431 'move' _iterator[150422](150429 call _getIterator call_tmp[669579]))
      Defer
      {
        {
          (150451 call _freeIterator _iterator[150422])
        }
      }
      { scopeless type
        (150440 'move' _indexOfInterest[150421](150437 call iteratorIndex _iterator[150422]))
      }
      ForLoop[150423]
      {
        unknown i[150444] "index var" "insert auto destroy"
        (481719 'end of statement')
        (150446 'move' i[150444] _indexOfInterest[150421])
        (481720 'end of statement' i[150444])
        {
          unknown call_tmp[669586] "expr temp" "maybe param" "maybe type" "temp"
          (669589 'move' call_tmp[669586](150409 call + i[150444] 1))
          unknown call_tmp[669591] "expr temp" "maybe param" "maybe type" "temp"
          (669594 'move' call_tmp[669591](150412 call(386045 call (partial) data _mt[243] this[150561]) call_tmp[669586]))
          unknown call_tmp[669598] "expr temp" "maybe param" "maybe type" "temp"
          (669601 'move' call_tmp[669598](150416 call(386051 call (partial) data _mt[243] this[150561]) i[150444]))
          (150417 call = call_tmp[669591] call_tmp[669598])
          (481722 'end of statement' i[150444] i[150444])
        }
        label _continueLabel[150426]
        _indexOfInterest[150421]
        _iterator[150422]
      }
      label _breakLabel[150427]
    }
    unknown call_tmp[669607] "expr temp" "maybe param" "maybe type" "temp"
    (669610 'move' call_tmp[669607](150460 call low _mt[243] shiftrange[150348]))
    unknown call_tmp[669612] "expr temp" "maybe param" "maybe type" "temp"
    (669615 'move' call_tmp[669612](150464 call(386057 call (partial) data _mt[243] this[150561]) call_tmp[669607]))
    unknown call_tmp[669619] "expr temp" "maybe param" "maybe type" "temp"
    (669622 'move' call_tmp[669619](386062 call irv _mt[243] this[150561]))
    (150466 call = call_tmp[669612] call_tmp[669619])
    (520449 return _void[55])
  }
  function BaseSparseArrImpl[150531](?).sparseShiftArrayBack[150475](arg _mt[150567]:_MT[238], arg this[150565]:BaseSparseArrImpl[150531](?), arg shiftrange[150473]:_any[178](?)) : _unknown[51] "method" "primary method" "method overrides" "no return value for void"
  {
    {
      unknown _indexOfInterest[150494] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[150495] "expr temp" "temp"
      (150504 'move' _iterator[150495](150502 call _getIterator shiftrange[150473]))
      Defer
      {
        {
          (150520 call _freeIterator _iterator[150495])
        }
      }
      { scopeless type
        (150509 'move' _indexOfInterest[150494](150506 call iteratorIndex _iterator[150495]))
      }
      ForLoop[150496]
      {
        unknown i[150513] "index var" "insert auto destroy"
        (481727 'end of statement')
        (150515 'move' i[150513] _indexOfInterest[150494])
        (481728 'end of statement' i[150513])
        {
          unknown call_tmp[669626] "expr temp" "maybe param" "maybe type" "temp"
          (669629 'move' call_tmp[669626](150482 call(386068 call (partial) data _mt[243] this[150565]) i[150513]))
          unknown call_tmp[669633] "expr temp" "maybe param" "maybe type" "temp"
          (669636 'move' call_tmp[669633](150486 call + i[150513] 1))
          unknown call_tmp[669638] "expr temp" "maybe param" "maybe type" "temp"
          (669641 'move' call_tmp[669638](150489 call(386074 call (partial) data _mt[243] this[150565]) call_tmp[669633]))
          (150490 call = call_tmp[669626] call_tmp[669638])
          (481730 'end of statement' i[150513] i[150513])
        }
        label _continueLabel[150499]
        _indexOfInterest[150494]
        _iterator[150495]
      }
      label _breakLabel[150500]
    }
    (520451 return _void[55])
  }
  function BaseSparseArrImpl[150531](?).super[808355](arg _mt[808357]:_MT[238], arg this[808359]:BaseSparseArrImpl[150531](?)) : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[808369] "RVV" "temp"
    unknown call_tmp[808376] "expr temp" "maybe param" "maybe type" "temp"
    (808379 'move' call_tmp[808376](808363 '.v' this[808359] c"super"))
    (808374 'move' ret[808369](808373 'deref' call_tmp[808376]))
    (808371 return ret[808369])
  }
  function BaseSparseArrImpl[150531](?).data[808381](arg _mt[808383]:_MT[238], arg this[808385]:BaseSparseArrImpl[150531](?)) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[808395] "RVV" "temp"
    unknown call_tmp[808402] "expr temp" "maybe param" "maybe type" "temp"
    (808405 'move' call_tmp[808402](808389 '.' this[808385] c"data"))
    (808400 'move' ret[808395](808399 'addr of' call_tmp[808402]))
    (808397 return ret[808395])
  }
  function BaseSparseArrImpl[150531](?).irv[808407](arg _mt[808409]:_MT[238], arg this[808411]:BaseSparseArrImpl[150531](?)) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[808421] "RVV" "temp"
    unknown call_tmp[808428] "expr temp" "maybe param" "maybe type" "temp"
    (808431 'move' call_tmp[808428](808415 '.' this[808411] c"irv"))
    (808426 'move' ret[808421](808425 'addr of' call_tmp[808428]))
    (808423 return ret[808421])
  }
  type BaseSparseArrImpl[150531](?) val super[355739]:BaseSparseArr[149861](?) "delay instantiation" "super class" unknown data[149887] "local field" "unsafe"(149885 call chpl__buildArrayRuntimeType(149883 call chpl__ensureDomainExpr(149878 call nnzDom _mt[243] dom[149839])) eltType[149675]) unknown irv[150007] eltType[149675]
  function _delete_dist[150577](arg dist[150574]:unmanaged BaseDist[415526], arg privatized[150580]:bool[10]) : _unknown[51] "no return value for void"
  {
    (150590 call(150586 call (partial) dsiDestroyDist _mt[243] dist[150574]))
    (481733 'end of statement')
    unknown tmp[427210] "maybe param" "temp"
    (427221 'move' tmp[427210] 0)
    unknown call_tmp[669647] "expr temp" "maybe param" "maybe type" "temp"
    (669650 'move' call_tmp[669647](427223 call _cond_invalid tmp[427210]))
    if call_tmp[669647]
    {
      (427226 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[568723] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[568724] "maybe param" "temp"
    unknown call_tmp[669652] "expr temp" "maybe param" "maybe type" "temp"
    (669655 'move' call_tmp[669652](427211 call isTrue tmp[427210]))
    (568729 'move' tmp[568724](568727 call _cond_test call_tmp[669652]))
    if tmp[568724]
    {
      unknown tmp[568731] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (568733 'move' tmp[568731](427214 call isTrue privatized[150580]))
      (568738 'move' tmp[568723](568735 '_paramFoldLogical' tmp[568724] tmp[568731]))
    }
    {
      (568743 'move' tmp[568723](568740 '_paramFoldLogical' tmp[568724] 0))
    }
    unknown call_tmp[669657] "expr temp" "maybe param" "maybe type" "temp"
    (669660 'move' call_tmp[669657](150607 call _cond_test tmp[568723]))
    if call_tmp[669657]
    {
      unknown call_tmp[669664] "expr temp" "maybe param" "maybe type" "temp"
      (669667 'move' call_tmp[669664](150599 call pid _mt[243] dist[150574]))
      (150604 call _freePrivatizedClass call_tmp[669664] dist[150574])
    }
    (150613 call chpl__delete dist[150574])
    (520453 return _void[55])
  }
  function _delete_dom[150622](arg dom[150620]:_any[178](?), arg privatized[150625]:bool[10]) : _unknown[51] "no return value for void"
  {
    (150635 call(150631 call (partial) dsiDestroyDom _mt[243] dom[150620]))
    (481737 'end of statement')
    unknown tmp[427231] "maybe param" "temp"
    (427242 'move' tmp[427231] 0)
    unknown call_tmp[669671] "expr temp" "maybe param" "maybe type" "temp"
    (669674 'move' call_tmp[669671](427244 call _cond_invalid tmp[427231]))
    if call_tmp[669671]
    {
      (427247 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[568750] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[568751] "maybe param" "temp"
    unknown call_tmp[669676] "expr temp" "maybe param" "maybe type" "temp"
    (669679 'move' call_tmp[669676](427232 call isTrue tmp[427231]))
    (568756 'move' tmp[568751](568754 call _cond_test call_tmp[669676]))
    if tmp[568751]
    {
      unknown tmp[568758] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (568760 'move' tmp[568758](427235 call isTrue privatized[150625]))
      (568765 'move' tmp[568750](568762 '_paramFoldLogical' tmp[568751] tmp[568758]))
    }
    {
      (568770 'move' tmp[568750](568767 '_paramFoldLogical' tmp[568751] 0))
    }
    unknown call_tmp[669681] "expr temp" "maybe param" "maybe type" "temp"
    (669684 'move' call_tmp[669681](150652 call _cond_test tmp[568750]))
    if call_tmp[669681]
    {
      unknown call_tmp[669688] "expr temp" "maybe param" "maybe type" "temp"
      (669691 'move' call_tmp[669688](150644 call pid _mt[243] dom[150620]))
      (150649 call _freePrivatizedClass call_tmp[669688] dom[150620])
    }
    (150658 call chpl__delete dom[150620])
    (520455 return _void[55])
  }
  function _delete_arr[150670](arg arr[150667]:unmanaged BaseArr[415511], param arg privatized[150673]:bool[10], arg deinitElts[150677] :
  1 =
  1) : _unknown[51] "no return value for void"
  {
    (150689 call(150683 call (partial) dsiDestroyArr _mt[243] arr[150667])(deinitElts = deinitElts[150677]))
    (481741 'end of statement')
    (150699 call(150695 call (partial) decEltCountsIfNeeded _mt[243] arr[150667]))
    (481742 'end of statement')
    unknown tmp[427252] "maybe param" "temp"
    (427263 'move' tmp[427252] 0)
    unknown call_tmp[669697] "expr temp" "maybe param" "maybe type" "temp"
    (669700 'move' call_tmp[669697](427265 call _cond_invalid tmp[427252]))
    if call_tmp[669697]
    {
      (427268 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[568777] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[568778] "maybe param" "temp"
    unknown call_tmp[669702] "expr temp" "maybe param" "maybe type" "temp"
    (669705 'move' call_tmp[669702](427253 call isTrue tmp[427252]))
    (568783 'move' tmp[568778](568781 call _cond_test call_tmp[669702]))
    if tmp[568778]
    {
      unknown tmp[568785] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (568787 'move' tmp[568785](427256 call isTrue privatized[150673]))
      (568792 'move' tmp[568777](568789 '_paramFoldLogical' tmp[568778] tmp[568785]))
    }
    {
      (568797 'move' tmp[568777](568794 '_paramFoldLogical' tmp[568778] 0))
    }
    unknown call_tmp[669707] "expr temp" "maybe param" "maybe type" "temp"
    (669710 'move' call_tmp[669707](150715 call _cond_test tmp[568777]))
    if call_tmp[669707]
    {
      unknown call_tmp[669714] "expr temp" "maybe param" "maybe type" "temp"
      (669717 'move' call_tmp[669714](150707 call pid _mt[243] arr[150667]))
      (150712 call _freePrivatizedClass call_tmp[669714] arr[150667])
    }
    (150721 call chpl__delete arr[150667])
    (520457 return _void[55])
  }
  function chpl_assignDomainWithGetSetIndices[150733](arg lhs[150730]:_any[178](?), arg rhs[150736]:_domain[125914](?)) : _unknown[51] "no return value for void"
  {
    unknown arrType[150755] "dead at end of block" "insert auto destroy" "type variable"(150754 call(150750 call (partial) getBaseArrType _mt[243] lhs[150730]))
    (543678 'move' arrType[150755](543677 call(543674 call (partial) getBaseArrType _mt[243] lhs[150730])))
    unknown call_tmp[669725] "maybe param" "maybe type" "temp"
    (669728 'move' call_tmp[669725](150760 call rank _mt[243] lhs[150730]))
    unknown rank[150763] "dead at end of block" "param"
    (543680 'init var' rank[150763] call_tmp[669725])
    (150766 'end of statement')
    unknown idxType[150771] "dead at end of block" "insert auto destroy" "type variable"(150768 call idxType _mt[243] lhs[150730])
    (543686 'move' idxType[150771](543683 call idxType _mt[243] lhs[150730]))
    unknown call_tmp[669736] "maybe param" "maybe type" "temp"
    (669739 'move' call_tmp[669736](150775 call stridable _mt[243] lhs[150730]))
    unknown stridable[150778] "dead at end of block" "param"
    (543688 'init var' stridable[150778] call_tmp[669736])
    (150781 'end of statement')
    {
      unknown _indexOfInterest[150981] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[150982] "expr temp" "temp"
      unknown call_tmp[669743] "expr temp" "maybe param" "maybe type" "temp"
      (669746 'move' call_tmp[669743](150784 call _arrs _mt[243] lhs[150730]))
      (150991 'move' _iterator[150982](150989 call _getIterator call_tmp[669743]))
      Defer
      {
        {
          (151008 call _freeIterator _iterator[150982])
        }
      }
      { scopeless type
        (150997 'move' _indexOfInterest[150981](150994 call iteratorIndex _iterator[150982]))
      }
      ForLoop[150983]
      {
        unknown e[151001] "index var" "insert auto destroy"
        (481747 'end of statement')
        (151003 'move' e[151001] _indexOfInterest[150981])
        (481748 'end of statement' e[151001])
        {
          {
            const tmp[150972] "const" "temp"
            unknown call_tmp[669748] "expr temp" "maybe param" "maybe type" "temp"
            (669751 'move' call_tmp[669748](150969 '_wide_get_locale' e[151001]))
            (150973 'move' tmp[150972](150970 'deref' call_tmp[669748]))
            {
              unknown call_tmp[669753] "expr temp" "maybe param" "maybe type" "temp"
              (669756 'move' call_tmp[669753](150790 'to nilable class from type' arrType[150755]))
              unknown call_tmp[669758] "maybe param" "maybe type" "temp"
              (669761 'move' call_tmp[669758](150791 call _cast call_tmp[669753] e[151001]))
              unknown eCastQ[150793] "dead at end of block" "insert auto destroy"
              (543690 'init var' eCastQ[150793] call_tmp[669758])
              (150796 'end of statement')
              unknown call_tmp[669763] "expr temp" "maybe param" "maybe type" "temp"
              (669766 'move' call_tmp[669763](150800 call == eCastQ[150793] nil[44]))
              unknown call_tmp[669768] "expr temp" "maybe param" "maybe type" "temp"
              (669771 'move' call_tmp[669768](150848 call _cond_test call_tmp[669763]))
              if call_tmp[669768]
              {
                unknown call_tmp[669773] "expr temp" "maybe param" "maybe type" "temp" "type variable"
                (669776 'move' call_tmp[669773](461933 'typeof' lhs[150730]))
                unknown call_tmp[669778] "expr temp" "maybe param" "maybe type" "temp"
                (669781 'move' call_tmp[669778](150823 call _cast string[26] call_tmp[669773]))
                unknown call_tmp[669783] "expr temp" "maybe param" "maybe type" "temp"
                (669786 'move' call_tmp[669783](150844 call _cast string[26] arrType[150755]))
                (150846 call halt "internal error: " call_tmp[669778] " contains an bad array type " call_tmp[669783])
                (481752 'end of statement' arrType[150755])
              }
              unknown call_tmp[669788] "maybe param" "maybe type" "temp"
              (669791 'move' call_tmp[669788](150854 call postfix! eCastQ[150793]))
              unknown eCast[150856] "dead at end of block" "insert auto destroy"
              (543692 'init var' eCast[150856] call_tmp[669788])
              (150859 'end of statement')
              unknown call_tmp[669795] "maybe param" "maybe type" "temp"
              (669798 'move' call_tmp[669795](150865 call(150861 call (partial) getIndices _mt[243] rhs[150736])))
              unknown inds[150866] "dead at end of block" "insert auto destroy"
              (543694 'init var' inds[150866] call_tmp[669795])
              (150869 'end of statement')
              unknown tmp[150882] "dead at end of block" "insert auto destroy"
              unknown call_tmp[669800] "expr temp" "maybe param" "maybe type" "temp"
              (669803 'move' call_tmp[669800](150879 call range[64316](?) idxType[150771] bounded[64205] stridable[150778]))
              unknown call_tmp[669805] "expr temp" "maybe param" "maybe type" "temp"
              (669808 'move' call_tmp[669805](150880 call * rank[150763] call_tmp[669800]))
              (543696 'default init var' tmp[150882] call_tmp[669805])
              (150885 'end of statement' arrType[150755] e[151001] eCastQ[150793] idxType[150771])
              {
                unknown i[150924] "dead at end of block" "insert auto destroy"
                (543698 'init var' i[150924] 0)
                (481756 'end of statement')
                unknown tmp[150925] "maybe param" "temp"
                unknown call_tmp[669810] "expr temp" "maybe param" "maybe type" "temp"
                (669813 'move' call_tmp[669810](150889 call - rank[150763] 1))
                (150937 'move' tmp[150925](150935 call chpl_compute_low_param_loop_bound 0 call_tmp[669810]))
                unknown tmp[150926] "maybe param" "temp"
                unknown call_tmp[669815] "expr temp" "maybe param" "maybe type" "temp"
                (669818 'move' call_tmp[669815](150942 call - rank[150763] 1))
                (150947 'move' tmp[150926](150945 call chpl_compute_high_param_loop_bound 0 call_tmp[669815]))
                unknown tmp[150927] "maybe param" "temp"
                (150950 'move' tmp[150927] 1)
                ParamForLoop[150952]
                { i[150924] tmp[150925] tmp[150926] tmp[150927]
                  {
                    unknown call_tmp[669820] "maybe param" "maybe type" "temp"
                    (669823 'move' call_tmp[669820](150896 call inds[150866] i[150924]))
                    unknown from[150897] "dead at end of block" "insert auto destroy"
                    (543700 'init var' from[150897] call_tmp[669820])
                    (150900 'end of statement' inds[150866] i[150924])
                    unknown call_tmp[669825] "expr temp" "maybe param" "maybe type" "temp"
                    (669828 'move' call_tmp[669825](150905 call tmp[150882] i[150924]))
                    unknown call_tmp[669832] "expr temp" "maybe param" "maybe type" "temp"
                    (669835 'move' call_tmp[669832](150918 call range[64316](?) idxType[150771] bounded[64205] stridable[150778]))
                    unknown call_tmp[669837] "expr temp" "maybe param" "maybe type" "temp"
                    (669840 'move' call_tmp[669837](150920 call(150907 call (partial) safeCast _mt[243] from[150897]) call_tmp[669832]))
                    (150921 call = call_tmp[669825] call_tmp[669837])
                    (481759 'end of statement' tmp[150882] i[150924] from[150897] idxType[150771])
                  }
                }
                label _unused_continueLabel[150929]
                label _breakLabel[150928]
              }
              (150967 call(150962 call (partial) dsiReallocate _mt[243] eCast[150856]) tmp[150882])
              (481764 'end of statement' eCast[150856] tmp[150882])
            }
            (150976 'elided on block' 0 tmp[150972])
          }
        }
        label _continueLabel[150986]
        _indexOfInterest[150981]
        _iterator[150982]
      }
      label _breakLabel[150987]
    }
    unknown call_tmp[669848] "expr temp" "maybe param" "maybe type" "temp"
    (669851 'move' call_tmp[669848](151024 call(151020 call (partial) getIndices _mt[243] rhs[150736])))
    (151026 call(151016 call (partial) dsiSetIndices _mt[243] lhs[150730]) call_tmp[669848])
    (481767 'end of statement')
    {
      unknown _indexOfInterest[151069] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[151070] "expr temp" "temp"
      unknown call_tmp[669855] "expr temp" "maybe param" "maybe type" "temp"
      (669858 'move' call_tmp[669855](151030 call _arrs _mt[243] lhs[150730]))
      (151079 'move' _iterator[151070](151077 call _getIterator call_tmp[669855]))
      Defer
      {
        {
          (151096 call _freeIterator _iterator[151070])
        }
      }
      { scopeless type
        (151085 'move' _indexOfInterest[151069](151082 call iteratorIndex _iterator[151070]))
      }
      ForLoop[151071]
      {
        unknown e[151089] "index var" "insert auto destroy"
        (481769 'end of statement')
        (151091 'move' e[151089] _indexOfInterest[151069])
        (481770 'end of statement' e[151089])
        {
          unknown call_tmp[669860] "expr temp" "maybe param" "maybe type" "temp"
          (669863 'move' call_tmp[669860](151035 'to nilable class from type' arrType[150755]))
          unknown call_tmp[669865] "maybe param" "maybe type" "temp"
          (669868 'move' call_tmp[669865](151036 call _cast call_tmp[669860] e[151089]))
          unknown eCastQ[151038] "dead at end of block" "insert auto destroy"
          (543702 'init var' eCastQ[151038] call_tmp[669865])
          (151041 'end of statement')
          unknown call_tmp[669870] "maybe param" "maybe type" "temp"
          (669873 'move' call_tmp[669870](151044 call postfix! eCastQ[151038]))
          unknown eCast[151046] "dead at end of block" "insert auto destroy"
          (543704 'init var' eCast[151046] call_tmp[669870])
          (151049 'end of statement' arrType[150755] e[151089] eCastQ[151038])
          {
            const tmp[151061] "const" "temp"
            unknown call_tmp[669875] "expr temp" "maybe param" "maybe type" "temp"
            (669878 'move' call_tmp[669875](151058 '_wide_get_locale' e[151089]))
            (151062 'move' tmp[151061](151059 'deref' call_tmp[669875]))
            (151056 call(151052 call (partial) dsiPostReallocate _mt[243] eCast[151046]))
            (481775 'end of statement' eCast[151046])
            (151065 'elided on block' 0 tmp[151061])
          }
        }
        label _continueLabel[151074]
        _indexOfInterest[151069]
        _iterator[151070]
      }
      label _breakLabel[151075]
    }
    unknown call_tmp[669884] "expr temp" "maybe param" "maybe type" "temp"
    (669887 'move' call_tmp[669884](151108 call(151104 call (partial) dsiSupportsPrivatization _mt[243] lhs[150730])))
    unknown call_tmp[669889] "expr temp" "maybe param" "maybe type" "temp"
    (669892 'move' call_tmp[669889](151115 call _cond_test call_tmp[669884]))
    if call_tmp[669889]
    {
      (151112 call _reprivatize lhs[150730])
    }
    (520459 return _void[55])
  }
  where {
    unknown call_tmp[669894] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (669897 'move' call_tmp[669894](461935 'typeof' lhs[150730]))
    unknown call_tmp[669899] "expr temp" "maybe param" "maybe type" "temp"
    (669902 'move' call_tmp[669899](150743 call _to_borrowed call_tmp[669894]))
    (354388 'is_subtype' BaseRectangularDom[382300](?) call_tmp[669899])
  }
  function chpl_assignDomainWithIndsIterSafeForRemoving[151129](arg lhs[151126]:_any[178](?), arg rhs[151132]:_domain[125914](?)) : _unknown[51] "no return value for void"
  {
    {
      unknown _indexOfInterest[151185] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[151186] "expr temp" "temp"
      unknown call_tmp[669906] "expr temp" "maybe param" "maybe type" "temp"
      (669909 'move' call_tmp[669906](151161 call(151157 call (partial) dsiIndsIterSafeForRemoving _mt[243] lhs[151126])))
      (151195 'move' _iterator[151186](151193 call _getIterator call_tmp[669906]))
      Defer
      {
        {
          (151212 call _freeIterator _iterator[151186])
        }
      }
      { scopeless type
        (151201 'move' _indexOfInterest[151185](151198 call iteratorIndex _iterator[151186]))
      }
      ForLoop[151187]
      {
        unknown i[151205] "index var" "insert auto destroy"
        (481779 'end of statement')
        (151207 'move' i[151205] _indexOfInterest[151185])
        (481780 'end of statement' i[151205])
        {
          unknown call_tmp[669913] "expr temp" "maybe param" "maybe type" "temp"
          (669916 'move' call_tmp[669913](151168 call(151163 call (partial) contains _mt[243] rhs[151132]) i[151205]))
          unknown call_tmp[669918] "expr temp" "maybe param" "maybe type" "temp"
          (669921 'move' call_tmp[669918](151169 call ! call_tmp[669913]))
          unknown call_tmp[669923] "expr temp" "maybe param" "maybe type" "temp"
          (669926 'move' call_tmp[669923](151180 call _cond_test call_tmp[669918]))
          if call_tmp[669923]
          {
            (151177 call(151172 call (partial) dsiRemove _mt[243] lhs[151126]) i[151205])
            (481782 'end of statement' i[151205])
          }
        }
        label _continueLabel[151190]
        _indexOfInterest[151185]
        _iterator[151186]
      }
      label _breakLabel[151191]
    }
    {
      unknown _indexOfInterest[151245] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[151246] "expr temp" "temp"
      (151255 'move' _iterator[151246](151253 call _getIterator rhs[151132]))
      Defer
      {
        {
          (151271 call _freeIterator _iterator[151246])
        }
      }
      { scopeless type
        (151260 'move' _indexOfInterest[151245](151257 call iteratorIndex _iterator[151246]))
      }
      ForLoop[151247]
      {
        unknown i[151264] "index var" "insert auto destroy"
        (481785 'end of statement')
        (151266 'move' i[151264] _indexOfInterest[151245])
        (481786 'end of statement' i[151264])
        {
          unknown call_tmp[669932] "expr temp" "maybe param" "maybe type" "temp"
          (669935 'move' call_tmp[669932](151228 call(151223 call (partial) dsiMember _mt[243] lhs[151126]) i[151264]))
          unknown call_tmp[669937] "expr temp" "maybe param" "maybe type" "temp"
          (669940 'move' call_tmp[669937](151229 call ! call_tmp[669932]))
          unknown call_tmp[669942] "expr temp" "maybe param" "maybe type" "temp"
          (669945 'move' call_tmp[669942](151240 call _cond_test call_tmp[669937]))
          if call_tmp[669942]
          {
            (151237 call(151232 call (partial) dsiAdd _mt[243] lhs[151126]) i[151264])
            (481788 'end of statement' i[151264])
          }
        }
        label _continueLabel[151250]
        _indexOfInterest[151245]
        _iterator[151246]
      }
      label _breakLabel[151251]
    }
    (520461 return _void[55])
  }
  where {
    unknown tmp[427273] "maybe param" "temp"
    unknown call_tmp[669949] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (669952 'move' call_tmp[669949](461937 'typeof' lhs[151126]))
    unknown call_tmp[669954] "expr temp" "maybe param" "maybe type" "temp"
    (669957 'move' call_tmp[669954](151139 call _to_borrowed call_tmp[669949]))
    (427284 'move' tmp[427273](354389 'is_subtype' BaseSparseDom[382310](?) call_tmp[669954]))
    unknown call_tmp[669959] "expr temp" "maybe param" "maybe type" "temp"
    (669962 'move' call_tmp[669959](427286 call _cond_invalid tmp[427273]))
    if call_tmp[669959]
    {
      (427289 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[568804] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[568805] "maybe param" "temp"
    unknown call_tmp[669964] "expr temp" "maybe param" "maybe type" "temp"
    (669967 'move' call_tmp[669964](427274 call isTrue tmp[427273]))
    (568810 'move' tmp[568805](568808 call _cond_test call_tmp[669964]))
    if tmp[568805]
    {
      (568815 'move' tmp[568804](568812 '_paramFoldLogical' tmp[568805] 1))
    }
    {
      unknown tmp[568817] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[669969] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (669972 'move' call_tmp[669969](461939 'typeof' lhs[151126]))
      unknown call_tmp[669974] "expr temp" "maybe param" "maybe type" "temp"
      (669977 'move' call_tmp[669974](151147 call _to_borrowed call_tmp[669969]))
      unknown call_tmp[669979] "expr temp" "maybe param" "maybe type" "temp"
      (669982 'move' call_tmp[669979](354390 'is_subtype' BaseAssociativeDom[382305](?) call_tmp[669974]))
      (568819 'move' tmp[568817](427278 call isTrue call_tmp[669979]))
      (568824 'move' tmp[568804](568821 '_paramFoldLogical' tmp[568805] tmp[568817]))
    }
    (748371 call chpl_statementLevelSymbol tmp[568804])
  }
  (355183 'used modules list'(145430 'use' ChapelArray[113684])(145432 'use' ChapelRange[64180])(145435 'use' ChapelLocks[187268])(145438 'use' ChapelHashtable[200405]))
}