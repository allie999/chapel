AST dump for DSIUtil after pass prune2.
Module use list: ChapelStandard 

{
  function chpl__init_DSIUtil[416148]() : void[4] "insert line file info" "module init" "resolved"
  {
    (533643 return _void[55])
  }
  function createTuple[1306224](const in arg val[1306230]:int(64)[13], ref arg _retArg[1810536]:1*int(64)[1256544]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val ret[1306232]:1*int(64)[1256544] "dead after last mention" "RVV" "temp"
    (2309283 '.=' ret[1306232] x0[1256542] val[1306230])
    label _end_createTuple[1306334]
    (1810538 '=' _retArg[1810536] ret[1306232])
    (1810540 return _void[55])
  }
  function _computeChunkStuff[1380982](const in arg maxTasks[1380984]:int(64)[13], const in arg ignoreRunning[1380986]:bool[10], const in arg minSize[1380988]:int(64)[13], const  ref arg ranges[1380990]:1*range(int(64),bounded,false)[1244715], ref arg _retArg[1811472]:2*int(64)[1040075]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1381003]:2*int(64)[1040075] "dead after last mention" "RVV" "temp"
    val numElems[1381047]:uint(64)[115] "dead at end of block" "insert auto destroy"
    (1381049 'move' numElems[1381047] 1)
    const-val call_tmp[1381629]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1381658]:range(int(64),bounded,false)[1026833] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1381662 'move' coerce_tmp[1381658](2325735 '.v' ranges[1380990] x0[1244713]))
    (1381631 'move' call_tmp[1381629](1381634 call size[1035808] coerce_tmp[1381658]))
    const-val call_tmp[2080586]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2080588 'move' call_tmp[2080586](2080590 'cast' uint(64)[115] call_tmp[1381629]))
    ref i_lhs[2174922]:uint(64)[115] "temp"
    (2174926 'move' i_lhs[2174922](2174924 'set reference' numElems[1381047]))
    (2174929 '*=' i_lhs[2174922] call_tmp[2080586])
    const-val call_tmp[1381139]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1381141 'move' call_tmp[1381139](1381144 call _computeNumChunks[1381678] maxTasks[1380984] ignoreRunning[1380986] minSize[1380988] numElems[1381047]))
    val numChunks[1381149]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1381151 'move' numChunks[1381149] call_tmp[1381139])
    const-val call_tmp[2082252]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2082254 'move' call_tmp[2082252](2082256 '==' call_tmp[1381139] 0))
    if call_tmp[2082252]
    {
      const-val ret_tmp[1806216]:2*int(64)[1040075] "temp"
      (2314769 '.=' ret_tmp[1806216] x0[1040071] 0)
      (2314773 '.=' ret_tmp[1806216] x1[1040073] -1)
      (1382948 'move' ret[1381003] ret_tmp[1806216])
      gotoReturn _end__computeChunkStuff[1381564] _end__computeChunkStuff[1381564]
    }
    const-val call_tmp[2088306]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2088308 'move' call_tmp[2088306](2088310 '>' call_tmp[1381139] 0))
    (1381212 call assert[210363] call_tmp[2088306])
    val parDim[1381223]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1381225 'move' parDim[1381223] -1)
    val maxDim[1381236]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1381238 'move' maxDim[1381236] -1)
    val maxElems[1381249]:uint(64)[115] "dead at end of block" "insert auto destroy"
    (1381251 'move' maxElems[1381249] 0)
    const-val _ic__F1_high[2302430]:int(64)[13] "temp"
    (2147830 'move' _ic__F1_high[2302430] 0)
    val i[1893132]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1893136 'move' i[1893132] 0)
    (1893188 call chpl_checkIfRangeIterWillOverflow[1096095] 0 0 1 0 0 1)
    CForLoop[1893195]
    {
      const-ref call_tmp[1893272]:range(int(64),bounded,false)[1026833] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1893274 'move' call_tmp[1893272](1893277 call this[1382675] ranges[1380990] i[1893132]))
      const-val call_tmp[1893280]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1893282]:range(int(64),bounded,false)[1026833] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1893284 'move' coerce_tmp[1893282] call_tmp[1893272])
      (1893289 'move' call_tmp[1893280](1893292 call size[1035808] coerce_tmp[1893282]))
      const-val call_tmp[2080746]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2080748 'move' call_tmp[2080746](2080750 'cast' uint(64)[115] call_tmp[1893280]))
      const-val call_tmp[2080756]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2080758 'move' call_tmp[2080756](2080760 'cast' uint(64)[115] numChunks[1381149]))
      const-val call_tmp[2173737]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2173739 'move' call_tmp[2173737](2173741 '>=' call_tmp[2080746] call_tmp[2080756]))
      if call_tmp[2173737]
      {
        (2086132 '=' parDim[1381223] i[1893132])
        break _breakLabel[1381408] _breakLabel[1381408]
      }
      const-val call_tmp[2173872]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2173874 'move' call_tmp[2173872](2173876 '>' call_tmp[2080746] maxElems[1381249]))
      if call_tmp[2173872]
      {
        (2173635 '=' maxElems[1381249] call_tmp[2080746])
        (2086144 '=' maxDim[1381236] i[1893132])
      }
      {
        (1893204 '=' i[1893132] 0)
      }
      {
        (1893215 '<=' i[1893132] _ic__F1_high[2302430])
      }
      {
        (1893221 '+=' i[1893132] 1)
      }
    }
    label _endchpl_direct_param_stride_range_iter[1893255]
    label _endchpl_direct_range_iter[1893260]
    label _breakLabel[1381408]
    const-val call_tmp[2082267]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2082269 'move' call_tmp[2082267](2082271 '==' parDim[1381223] -1))
    if call_tmp[2082267]
    {
      (2085425 '=' parDim[1381223] maxDim[1381236])
      const-val call_tmp[2080636]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2080638 'move' call_tmp[2080636](2080640 'cast' uint(64)[115] numChunks[1381149]))
      const-val call_tmp[2173807]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2173809 'move' call_tmp[2173807](2173811 '<' maxElems[1381249] call_tmp[2080636]))
      if call_tmp[2173807]
      {
        const-val call_tmp[2144566]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2144568 'move' call_tmp[2144566](2144570 'cast' int(64)[13] maxElems[1381249]))
        (2085437 '=' numChunks[1381149] call_tmp[2144566])
      }
    }
    const-val ret_tmp[1806222]:2*int(64)[1040075] "temp"
    (2314783 '.=' ret_tmp[1806222] x0[1040071] numChunks[1381149])
    (2314787 '.=' ret_tmp[1806222] x1[1040073] parDim[1381223])
    (1382951 'move' ret[1381003] ret_tmp[1806222])
    label _end__computeChunkStuff[1381564]
    (1811474 '=' _retArg[1811472] ret[1381003])
    (1811480 return _void[55])
  }
  function _computeNumChunks[1225974](const in arg maxTasks[1225976]:int(64)[13], const in arg ignoreRunning[1225978]:bool[10], const in arg minSize[1225980]:int(64)[13], const in arg numElems[1225982]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1225986]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2133543]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2133545 'move' call_tmp[2133543](2133547 '<=' numElems[1225982] 0))
    if call_tmp[2133543]
    {
      (1226017 'move' ret[1225986] 0)
      gotoReturn _end__computeNumChunks[1226418] _end__computeNumChunks[1226418]
    }
    const-val call_tmp[2080276]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2080278 'move' call_tmp[2080276](2080280 'cast' uint(64)[115] numElems[1225982]))
    const-val unumElems[1226039]:uint(64)[115] "dead at end of block" "const" "insert auto destroy"
    (1226041 'move' unumElems[1226039] call_tmp[2080276])
    val numChunks[1226053]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1226055 'move' numChunks[1226053] maxTasks[1225976])
    const-val call_tmp[2078209]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2078211 'move' call_tmp[2078209](2078213 '!' ignoreRunning[1225978]))
    if call_tmp[2078209]
    {
      const-val call_tmp[1226076]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2130725]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2130727]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2130729 'move' call_tmp[2130727](2130732 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
      (2130735 'move' call_tmp[2130725] call_tmp[2130727])
      const-val call_tmp[2130738]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2130740]:locale[28] "temp"
      (2130743 call chpl_localeID_to_locale[92852] call_tmp[2130725] ret_tmp[2130740])
      (2130746 'move' call_tmp[2130738] ret_tmp[2130740])
      (1803935 'move' call_tmp[1226076] call_tmp[2130738])
      const-val call_tmp[1226082]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1226084 'move' call_tmp[1226082](1226090 call runningTasks[93125] call_tmp[1226076]))
      const-val call_tmp[2107645]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2107647 'move' call_tmp[2107645](2107649 '-' call_tmp[1226082] 1))
      val tmp[1226105]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val call_tmp[2091876]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2091878 'move' call_tmp[2091876](2091880 '<' call_tmp[2107645] maxTasks[1225976]))
      if call_tmp[2091876]
      {
        const-val call_tmp[2090795]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2090797 'move' call_tmp[2090795](2090799 '-' maxTasks[1225976] call_tmp[2107645]))
        (1226140 'move' tmp[1226105] call_tmp[2090795])
      }
      {
        (1226146 'move' tmp[1226105] 1)
      }
      (2085006 '=' numChunks[1226053] tmp[1226105])
      ref i_x[2225037]:locale[28] "temp"
      (2225041 'move' i_x[2225037](2225039 'set reference' call_tmp[1226076]))
      (2225045 call deinit[90188] i_x[2225037])
    }
    const-val call_tmp[2087991]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2087993 'move' call_tmp[2087991](2087995 '>' minSize[1225980] 0))
    if call_tmp[2087991]
    {
      val tmp[1226178]:bool[10] "dead after last mention" "temp"
      const-val call_tmp[2174186]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2174188 'move' call_tmp[2174186](2174190 '*' minSize[1225980] numChunks[1226053]))
      const-val call_tmp[2080286]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2080288 'move' call_tmp[2080286](2080290 'cast' uint(64)[115] call_tmp[2174186]))
      const-val call_tmp[2173767]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2173769 'move' call_tmp[2173767](2173771 '<' call_tmp[2080276] call_tmp[2080286]))
      val tmp[1226217]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if call_tmp[2173767]
      {
        const-val call_tmp[2088006]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2088008 'move' call_tmp[2088006](2088010 '>' numChunks[1226053] 1))
        (1226250 'move' tmp[1226217] call_tmp[2088006])
      }
      {
        (1226256 'move' tmp[1226217] 0)
      }
      (1226262 'move' tmp[1226178] tmp[1226217])
      WhileDo[1226267]
      {
        ref i_lhs[2174843]:int(64)[13] "temp"
        (2174847 'move' i_lhs[2174843](2174845 'set reference' numChunks[1226053]))
        (2174855 '-=' i_lhs[2174843] 1)
        const-val call_tmp[2174196]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2174198 'move' call_tmp[2174196](2174200 '*' minSize[1225980] numChunks[1226053]))
        const-val call_tmp[2080296]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (2080298 'move' call_tmp[2080296](2080300 'cast' uint(64)[115] call_tmp[2174196]))
        const-val call_tmp[2173777]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2173779 'move' call_tmp[2173777](2173781 '<' unumElems[1226039] call_tmp[2080296]))
        val tmp[1226315]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        if call_tmp[2173777]
        {
          const-val call_tmp[2088021]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2088023 'move' call_tmp[2088021](2088025 '>' numChunks[1226053] 1))
          (1226348 'move' tmp[1226315] call_tmp[2088021])
        }
        {
          (1226354 'move' tmp[1226315] 0)
        }
        (1226360 'move' tmp[1226178] tmp[1226315])
        tmp[1226178]
      }
    }
    const-val call_tmp[2080306]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2080308 'move' call_tmp[2080306](2080310 'cast' uint(64)[115] numChunks[1226053]))
    const-val call_tmp[2173852]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2173854 'move' call_tmp[2173852](2173856 '>' call_tmp[2080306] unumElems[1226039]))
    if call_tmp[2173852]
    {
      const-val call_tmp[2144506]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2144508 'move' call_tmp[2144506](2144510 'cast' int(64)[13] unumElems[1226039]))
      (2085018 '=' numChunks[1226053] call_tmp[2144506])
    }
    (1227913 'move' ret[1225986] numChunks[1226053])
    label _end__computeNumChunks[1226418]
    (1226420 return ret[1225986])
  }
  function _computeNumChunks[1381678](const in arg maxTasks[1381680]:int(64)[13], const in arg ignoreRunning[1381682]:bool[10], const in arg minSize[1381684]:int(64)[13], const in arg numElems[1381686]:uint(64)[115]) : int(64)[13] "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1381690]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2081385]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2081387 'move' call_tmp[2081385](2081389 '<' 0 0))
    const-val call_tmp[2081392]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2081394 'move' call_tmp[2081392](2081396 '!' call_tmp[2081385]))
    val tmp[2081398]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2081392]
    {
      const-val call_tmp[2081402]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2081404 'move' call_tmp[2081402](2081406 'cast' uint(64)[115] 0))
      const-val call_tmp[2081409]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2081411 'move' call_tmp[2081409](2081413 '<=' numElems[1381686] call_tmp[2081402]))
      (2081416 'move' tmp[2081398] call_tmp[2081409])
    }
    {
      (2081420 'move' tmp[2081398] 0)
    }
    if tmp[2081398]
    {
      (1381721 'move' ret[1381690] 0)
      gotoReturn _end__computeNumChunks[1382122] _end__computeNumChunks[1382122]
    }
    const-val unumElems[1381743]:uint(64)[115] "dead at end of block" "const" "insert auto destroy"
    (1381745 'move' unumElems[1381743] numElems[1381686])
    val numChunks[1381757]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1381759 'move' numChunks[1381757] maxTasks[1381680])
    const-val call_tmp[2078434]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2078436 'move' call_tmp[2078434](2078438 '!' ignoreRunning[1381682]))
    if call_tmp[2078434]
    {
      const-val call_tmp[1381780]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2130977]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2130979]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2130981 'move' call_tmp[2130979](2130984 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
      (2130987 'move' call_tmp[2130977] call_tmp[2130979])
      const-val call_tmp[2130990]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2130992]:locale[28] "temp"
      (2130995 call chpl_localeID_to_locale[92852] call_tmp[2130977] ret_tmp[2130992])
      (2130998 'move' call_tmp[2130990] ret_tmp[2130992])
      (1803995 'move' call_tmp[1381780] call_tmp[2130990])
      const-val call_tmp[1381786]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1381788 'move' call_tmp[1381786](1381794 call runningTasks[93125] call_tmp[1381780]))
      const-val call_tmp[2107795]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2107797 'move' call_tmp[2107795](2107799 '-' call_tmp[1381786] 1))
      val tmp[1381809]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val call_tmp[2091896]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2091898 'move' call_tmp[2091896](2091900 '<' call_tmp[2107795] maxTasks[1381680]))
      if call_tmp[2091896]
      {
        const-val call_tmp[2090805]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2090807 'move' call_tmp[2090805](2090809 '-' maxTasks[1381680] call_tmp[2107795]))
        (1381844 'move' tmp[1381809] call_tmp[2090805])
      }
      {
        (1381850 'move' tmp[1381809] 1)
      }
      (2085401 '=' numChunks[1381757] tmp[1381809])
      ref i_x[2225121]:locale[28] "temp"
      (2225125 'move' i_x[2225121](2225123 'set reference' call_tmp[1381780]))
      (2225129 call deinit[90188] i_x[2225121])
    }
    const-val call_tmp[2088261]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2088263 'move' call_tmp[2088261](2088265 '>' minSize[1381684] 0))
    if call_tmp[2088261]
    {
      val tmp[1381882]:bool[10] "dead after last mention" "temp"
      const-val call_tmp[2174376]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2174378 'move' call_tmp[2174376](2174380 '*' minSize[1381684] numChunks[1381757]))
      const-val call_tmp[2080606]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2080608 'move' call_tmp[2080606](2080610 'cast' uint(64)[115] call_tmp[2174376]))
      const-val call_tmp[2173787]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2173789 'move' call_tmp[2173787](2173791 '<' numElems[1381686] call_tmp[2080606]))
      val tmp[1381921]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if call_tmp[2173787]
      {
        const-val call_tmp[2088276]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2088278 'move' call_tmp[2088276](2088280 '>' numChunks[1381757] 1))
        (1381954 'move' tmp[1381921] call_tmp[2088276])
      }
      {
        (1381960 'move' tmp[1381921] 0)
      }
      (1381966 'move' tmp[1381882] tmp[1381921])
      WhileDo[1381971]
      {
        ref i_lhs[2174871]:int(64)[13] "temp"
        (2174875 'move' i_lhs[2174871](2174873 'set reference' numChunks[1381757]))
        (2174883 '-=' i_lhs[2174871] 1)
        const-val call_tmp[2174386]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2174388 'move' call_tmp[2174386](2174390 '*' minSize[1381684] numChunks[1381757]))
        const-val call_tmp[2080616]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (2080618 'move' call_tmp[2080616](2080620 'cast' uint(64)[115] call_tmp[2174386]))
        const-val call_tmp[2173797]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2173799 'move' call_tmp[2173797](2173801 '<' unumElems[1381743] call_tmp[2080616]))
        val tmp[1382019]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        if call_tmp[2173797]
        {
          const-val call_tmp[2088291]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2088293 'move' call_tmp[2088291](2088295 '>' numChunks[1381757] 1))
          (1382052 'move' tmp[1382019] call_tmp[2088291])
        }
        {
          (1382058 'move' tmp[1382019] 0)
        }
        (1382064 'move' tmp[1381882] tmp[1382019])
        tmp[1381882]
      }
    }
    const-val call_tmp[2080626]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2080628 'move' call_tmp[2080626](2080630 'cast' uint(64)[115] numChunks[1381757]))
    const-val call_tmp[2173862]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2173864 'move' call_tmp[2173862](2173866 '>' call_tmp[2080626] unumElems[1381743]))
    if call_tmp[2173862]
    {
      const-val call_tmp[2144556]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2144558 'move' call_tmp[2144556](2144560 'cast' int(64)[13] unumElems[1381743]))
      (2085413 '=' numChunks[1381757] call_tmp[2144556])
    }
    (1382183 'move' ret[1381690] numChunks[1381757])
    label _end__computeNumChunks[1382122]
    (1382124 return ret[1381690])
  }
  function _computeNumChunks[1262341](const in arg numElems[1262343]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "resolved"
  {
    const-val local_dataParMinGranularity[2331714]:int(64)[13] "temp"
    (2331715 'move' local_dataParMinGranularity[2331714] dataParMinGranularity[93296])
    const-val local_dataParIgnoreRunningTasks[2331708]:bool[10] "temp"
    (2331709 'move' local_dataParIgnoreRunningTasks[2331708] dataParIgnoreRunningTasks[93290])
    const-val local__str_literal_129[2331701]:string[26] "temp"
    (2331702 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local_dataParTasksPerLocale[2331695]:int(64)[13] "temp"
    (2331696 'move' local_dataParTasksPerLocale[2331695] dataParTasksPerLocale[93284])
    val tmp[1262357]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2082122]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2082124 'move' call_tmp[2082122](2082126 '==' local_dataParTasksPerLocale[2331695] 0))
    if call_tmp[2082122]
    {
      const-val call_tmp[1262378]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2130869]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2130871]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2130873 'move' call_tmp[2130871](2130876 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
      (2130879 'move' call_tmp[2130869] call_tmp[2130871])
      const-val call_tmp[2130882]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2130884]:locale[28] "temp"
      (2130887 call chpl_localeID_to_locale[92852] call_tmp[2130869] ret_tmp[2130884])
      (2130890 'move' call_tmp[2130882] ret_tmp[2130884])
      (1803959 'move' call_tmp[1262378] call_tmp[2130882])
      val ret[2131733]:int(64)[13] "dead after last mention" "RVV" "temp"
      val coerce_tmp[2131735]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2131737 'move' coerce_tmp[2131735](2131739 '.v' call_tmp[1262378] _instance[89978]))
      val coerce_tmp[2131742]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2131744 'move' coerce_tmp[2131742](2131746 'cast' object[22] coerce_tmp[2131735]))
      const-val call_tmp[2131749]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2131751 'move' call_tmp[2131749](2131753 'ptr_eq' coerce_tmp[2131742] nil[44]))
      if call_tmp[2131749]
      {
        (2131759 call nilCheckHalt[210169] "argument to ! is nil")
      }
      val coerce_tmp[2131762]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2131764 'move' coerce_tmp[2131762] coerce_tmp[2131735])
      (2131767 'move' ret[2131733](2131769 '.v' coerce_tmp[2131762] maxTaskPar[90746]))
      (1262390 'move' tmp[1262357] ret[2131733])
      ref i_x[2225085]:locale[28] "temp"
      (2225089 'move' i_x[2225085](2225087 'set reference' call_tmp[1262378]))
      (2225093 call deinit[90188] i_x[2225085])
    }
    {
      (1262396 'move' tmp[1262357] local_dataParTasksPerLocale[2331695])
    }
    const-val ignoreRunning[1262406]:bool[10] "dead at end of block" "insert auto destroy"
    (1262408 'move' ignoreRunning[1262406] local_dataParIgnoreRunningTasks[2331708])
    const-val minIndicesPerTask[1262412]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1262414 'move' minIndicesPerTask[1262412] local_dataParMinGranularity[2331714])
    const-val call_tmp[1262418]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1262420 'move' call_tmp[1262418](1262423 call _computeNumChunks[1225974] tmp[1262357] ignoreRunning[1262406] minIndicesPerTask[1262412] numElems[1262343]))
    label _end__computeNumChunks[1262446]
    (1262448 return call_tmp[1262418])
  }
  function intCeilXDivByY[1229828](const in arg x[1229830]:uint(64)[115], const in arg y[1229832]:uint(64)[115]) : uint(64)[115] "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_71[2331617]:string[26] "temp"
    (2331618 'move' "Attempt to divide by zero" "Attempt to divide by zero")
    const-val call_tmp[2144196]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2144198 'move' call_tmp[2144196](2144200 '-' x[1229830] 1))
    const-val call_tmp[2174539]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2174541 'move' call_tmp[2174539](2174543 '<' 0 0))
    const-val call_tmp[2174546]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2174548 'move' call_tmp[2174546](2174550 '!' call_tmp[2174539]))
    val tmp[2174552]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2174546]
    {
      const-val call_tmp[2174556]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2174558 'move' call_tmp[2174556](2174560 'cast' uint(64)[115] 0))
      const-val call_tmp[2174563]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2174565 'move' call_tmp[2174563](2174567 '==' y[1229832] call_tmp[2174556]))
      (2174570 'move' tmp[2174552] call_tmp[2174563])
    }
    {
      (2174574 'move' tmp[2174552] 0)
    }
    if tmp[2174552]
    {
      (2174581 call halt[154111] "Attempt to divide by zero")
    }
    const-val call_tmp[2174584]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2174586 'move' call_tmp[2174584](2174588 '/' call_tmp[2144196] y[1229832]))
    const-val call_tmp[2228663]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228665 'move' call_tmp[2228663](2228667 '+' 1 call_tmp[2174584]))
    (1229872 return call_tmp[2228663])
  }
  function _computeBlock[1229355](const in arg numelems[1229357]:int(64)[13], const in arg numblocks[1229359]:int(64)[13], const in arg blocknum[1229361]:int(64)[13], const in arg wayhi[1229363]:int(64)[13], const in arg waylo[1229387]:int(64)[13], const in arg lo[1229411]:int(64)[13], ref arg _retArg[1808367]:2*int(64)[1040075]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1229413]:2*int(64)[1040075] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2082022]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2082024 'move' call_tmp[2082022](2082026 '==' numelems[1229357] 0))
    if call_tmp[2082022]
    {
      const-val ret_tmp[1806192]:2*int(64)[1040075] "temp"
      (2314741 '.=' ret_tmp[1806192] x0[1040071] 1)
      (2314745 '.=' ret_tmp[1806192] x1[1040073] 0)
      (1229482 'move' ret[1229413] ret_tmp[1806192])
      gotoReturn _end__computeBlock[1229728] _end__computeBlock[1229728]
    }
    val tmp[1229491]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2082037]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2082039 'move' call_tmp[2082037](2082041 '==' blocknum[1229361] 0))
    if call_tmp[2082037]
    {
      (1229510 'move' tmp[1229491] waylo[1229387])
    }
    {
      const-val call_tmp[2080316]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2080318 'move' call_tmp[2080316](2080320 'cast' uint(64)[115] numelems[1229357]))
      const-val call_tmp[2080326]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2080328 'move' call_tmp[2080326](2080330 'cast' uint(64)[115] blocknum[1229361]))
      const-val call_tmp[2153386]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2153388 'move' call_tmp[2153386](2153390 '*' call_tmp[2080316] call_tmp[2080326]))
      const-val call_tmp[2080336]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2080338 'move' call_tmp[2080336](2080340 'cast' uint(64)[115] numblocks[1229359]))
      const-val call_tmp[1229556]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      (1229558 'move' call_tmp[1229556](1229561 call intCeilXDivByY[1229828] call_tmp[2153386] call_tmp[2080336]))
      const-val call_tmp[2144516]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2144518 'move' call_tmp[2144516](2144520 'cast' int(64)[13] call_tmp[1229556]))
      const-val call_tmp[2089494]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2089496 'move' call_tmp[2089494](2089498 '+' lo[1229411] call_tmp[2144516]))
      (1229578 'move' tmp[1229491] call_tmp[2089494])
    }
    val tmp[1229590]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2107665]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2107667 'move' call_tmp[2107665](2107669 '-' numblocks[1229359] 1))
    const-val call_tmp[2082047]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2082049 'move' call_tmp[2082047](2082051 '==' blocknum[1229361] call_tmp[2107665]))
    if call_tmp[2082047]
    {
      (1229617 'move' tmp[1229590] wayhi[1229363])
    }
    {
      const-val call_tmp[2080356]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2080358 'move' call_tmp[2080356](2080360 'cast' uint(64)[115] numelems[1229357]))
      const-val call_tmp[2084216]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2084218 'move' call_tmp[2084216](2084220 '+' blocknum[1229361] 1))
      const-val call_tmp[2080366]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2080368 'move' call_tmp[2080366](2080370 'cast' uint(64)[115] call_tmp[2084216]))
      const-val call_tmp[2153396]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2153398 'move' call_tmp[2153396](2153400 '*' call_tmp[2080356] call_tmp[2080366]))
      const-val call_tmp[2080376]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2080378 'move' call_tmp[2080376](2080380 'cast' uint(64)[115] numblocks[1229359]))
      const-val call_tmp[1229671]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      (1229673 'move' call_tmp[1229671](1229676 call intCeilXDivByY[1229828] call_tmp[2153396] call_tmp[2080376]))
      const-val call_tmp[2144526]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2144528 'move' call_tmp[2144526](2144530 'cast' int(64)[13] call_tmp[1229671]))
      const-val call_tmp[2089504]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2089506 'move' call_tmp[2089504](2089508 '+' lo[1229411] call_tmp[2144526]))
      const-val call_tmp[2107675]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2107677 'move' call_tmp[2107675](2107679 '-' call_tmp[2089504] 1))
      (1229701 'move' tmp[1229590] call_tmp[2107675])
    }
    const-val ret_tmp[1806198]:2*int(64)[1040075] "temp"
    (2314755 '.=' ret_tmp[1806198] x0[1040071] tmp[1229491])
    (2314759 '.=' ret_tmp[1806198] x1[1040073] tmp[1229590])
    (1229719 'move' ret[1229413] ret_tmp[1806198])
    label _end__computeBlock[1229728]
    (1808369 '=' _retArg[1808367] ret[1229413])
    (1808371 return _void[55])
  }
}