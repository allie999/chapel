AST dump for DefaultRectangular after pass prune.
Module use list: DSIUtil ChapelArray ChapelDistribution ChapelRange SysBasic SysError SysCTypes ChapelDebugPrint ChapelLocks OwnedObject IO DefaultSparse DefaultAssociative ExternalArray RangeChunk 

{
  type _class_localscoforall_fn[2221552] val _runtime_hdr[2221553]:chpl_task_bundle_t[209366] val _0_parDim[2221555]:int(64)[13] val _1_numChunks[2221557]:int(64)[13] val _2_coerce_tmp[2221559]:domain(1,int(64),false)[1251123] val _3_chunk[2221561]:int(64)[13] val _4__coforallCount[2221563]:_EndCount(AtomicT(int(64)),int(64))[945532] val _5_copy[2221565]:[domain(1,int(64),false)] locale[1256675] val _6_this[2221567]:[domain(1,int(64),false)] locale[1256675]
  type _class_localscoforall_fn[2219688] val _runtime_hdr[2219689]:chpl_task_bundle_t[209366] val _0_parDim[2219691]:int(64)[13] val _1_numChunks[2219693]:int(64)[13] val _2_coerce_tmp[2219695]:domain(1,int(64),false)[1251123] val _3_chunk[2219697]:int(64)[13] val _4__coforallCount[2219699]:_EndCount(AtomicT(int(64)),int(64))[945532] ref _6_default_arg_offset[2219703]:1*int(64)[1256714] val _7_copy[2219705]:[domain(1,int(64),false)] uint(64)[1450261] val _8_this[2219707]:[domain(1,int(64),false)] uint(64)[1450261]
  type _class_localscoforall_fn[2219494] val _runtime_hdr[2219495]:chpl_task_bundle_t[209366] val _0_parDim[2219497]:int(64)[13] val _1_numChunks[2219499]:int(64)[13] val _2_coerce_tmp[2219501]:domain(1,int(64),false)[1251123] val _3_chunk[2219503]:int(64)[13] val _4__coforallCount[2219505]:_EndCount(AtomicT(int(64)),int(64))[945532] ref _6_default_arg_offset[2219509]:1*int(64)[1256714] val _7_copy[2219511]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] val _8_this[2219513]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224]
  type _class_localscoforall_fn[2219300] val _runtime_hdr[2219301]:chpl_task_bundle_t[209366] val _0_parDim[2219303]:int(64)[13] val _1_numChunks[2219305]:int(64)[13] val _2_coerce_tmp[2219307]:domain(1,int(64),false)[1251123] val _3_chunk[2219309]:int(64)[13] val _4__coforallCount[2219311]:_EndCount(AtomicT(int(64)),int(64))[945532] ref _6_default_arg_offset[2219315]:1*int(64)[1256714] val _7_copy[2219317]:[domain(1,int(64),false)] int(64)[1368867] val _8_this[2219319]:[domain(1,int(64),false)] int(64)[1368867]
  type _class_localscoforall_fn[2219106] val _runtime_hdr[2219107]:chpl_task_bundle_t[209366] val _0_parDim[2219109]:int(64)[13] val _1_numChunks[2219111]:int(64)[13] val _2_coerce_tmp[2219113]:domain(1,int(64),false)[1251123] val _3_chunk[2219115]:int(64)[13] val _4__coforallCount[2219117]:_EndCount(AtomicT(int(64)),int(64))[945532] ref _6_default_arg_offset[2219121]:1*int(64)[1256714] val _7_copy[2219123]:[domain(1,int(64),false)] real(64)[1358944] val _8_this[2219125]:[domain(1,int(64),false)] real(64)[1358944]
  type _class_localscoforall_fn[2218912] val _runtime_hdr[2218913]:chpl_task_bundle_t[209366] val _0_parDim[2218915]:int(64)[13] val _1_numChunks[2218917]:int(64)[13] val _2_coerce_tmp[2218919]:domain(1,int(64),false)[1251123] val _3_chunk[2218921]:int(64)[13] val _4__coforallCount[2218923]:_EndCount(AtomicT(int(64)),int(64))[945532] ref _6_default_arg_offset[2218927]:1*int(64)[1256714] val _7_copy[2218929]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] val _8_this[2218931]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401]
  type _class_localscoforall_fn[2208370] val _runtime_hdr[2208371]:chpl_task_bundle_t[209366] val _0_op[2208373]:SumReduceScanOp(real(64))[1396784] val _1_tid[2208375]:int(64)[13] val _2__coforallCount[2208377]:_EndCount(AtomicT(int(64)),int(64))[945532] val _3_res[2208379]:[domain(1,int(64),false)] real(64)[1366029] val _4_state[2208381]:[domain(1,int(64),false)] real(64)[1366029] val _5_rngs[2208383]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950]
  type _class_localson_fn[2208158] val _runtime_hdr[2208159]:chpl_comm_on_bundle_t[209359] val _0_tmp[2208161]:chpl_localeID_t[209352] val _1_A[2208163]:[domain(1,int(64),false)] real(64)[1358944] val _2_aView_data[2208165]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1871345] val _3_B[2208167]:[domain(1,int(64),false)] real(64)[1358944] val _4_bView_data[2208169]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1871345]
  type _class_localson_fn[2208042] val _runtime_hdr[2208043]:chpl_comm_on_bundle_t[209359] val _0_tmp[2208045]:chpl_localeID_t[209352] val _1_Adata[2208047]:_ddata(real(64))[1358105] val _2_Bdata[2208049]:_ddata(real(64))[1358105] val _3_len[2208051]:uint(64)[115]
  type _class_localson_fn[2206741] val _runtime_hdr[2206742]:chpl_comm_on_bundle_t[209359] val _0_tmp[2206744]:chpl_localeID_t[209352] val _1_A[2206746]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] val _2_aView_data[2206748]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1871345] val _3_B[2206750]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] val _4_bView_data[2206752]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1871345]
  type _class_localson_fn[2206625] val _runtime_hdr[2206626]:chpl_comm_on_bundle_t[209359] val _0_tmp[2206628]:chpl_localeID_t[209352] val _1_Adata[2206630]:_ddata(range(int(64),bounded,false))[1406042] val _2_Bdata[2206632]:_ddata(range(int(64),bounded,false))[1406042] val _3_len[2206634]:uint(64)[115]
  type _class_localscoforall_fn[2206439] val _runtime_hdr[2206440]:chpl_task_bundle_t[209366] val _0__coforallCount[2206442]:_EndCount(AtomicT(int(64)),int(64))[945532] val _1_op[2206444]:SumReduceScanOp(real(64))[1396784] val _2_this[2206446]:[domain(1,int(64),false)] real(64)[1358944] val _3_rngs[2206448]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950] val _4_res[2206450]:[domain(1,int(64),false)] real(64)[1366029] val _5_state[2206452]:[domain(1,int(64),false)] real(64)[1366029] val _6_tid[2206454]:int(64)[13]
  function chpl__init_DefaultRectangular[416091]() : void[4] "insert line file info" "module init" "resolved"
  {
    const-val call_tmp[633701]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (633704 'move' call_tmp[633701](541887 call chpl_config_has_value[334] c"dataParTasksPerLocale" c"Built-in"))
    const-val call_tmp[633706]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (633709 'move' call_tmp[633706](541890 call ![7494] call_tmp[633701]))
    if call_tmp[633706]
    {
      (541906 'move' tmp[541880] 0)
    }
    {
      val call_tmp[633711]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[633716]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (633719 'move' call_tmp[633716](541897 call chpl_config_get_value[350] c"dataParTasksPerLocale" c"Built-in"))
      (541902 'move' tmp[541880](541900 call _command_line_cast[1024464] call_tmp[633716]))
    }
    (541882 'move' dataParTasksPerLocale[93284] tmp[541880])
    (2197340 '_private_broadcast' dataParTasksPerLocale[93284])
    const-val call_tmp[633721]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (633724 'move' call_tmp[633721](541915 call chpl_config_has_value[334] c"dataParIgnoreRunningTasks" c"Built-in"))
    const-val call_tmp[633726]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (633729 'move' call_tmp[633726](541918 call ![7494] call_tmp[633721]))
    if call_tmp[633726]
    {
      (541934 'move' tmp[541908] 0)
    }
    {
      val call_tmp[633731]:bool[10] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[633736]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (633739 'move' call_tmp[633736](541925 call chpl_config_get_value[350] c"dataParIgnoreRunningTasks" c"Built-in"))
      (541930 'move' tmp[541908](541928 call _command_line_cast[1205671] call_tmp[633736]))
    }
    (541910 'move' dataParIgnoreRunningTasks[93290] tmp[541908])
    (2197342 '_private_broadcast' dataParIgnoreRunningTasks[93290])
    const-val call_tmp[633741]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (633744 'move' call_tmp[633741](541943 call chpl_config_has_value[334] c"dataParMinGranularity" c"Built-in"))
    const-val call_tmp[633746]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (633749 'move' call_tmp[633746](541946 call ![7494] call_tmp[633741]))
    if call_tmp[633746]
    {
      (541962 'move' tmp[541936] 1)
    }
    {
      val call_tmp[633751]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[633756]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (633759 'move' call_tmp[633756](541953 call chpl_config_get_value[350] c"dataParMinGranularity" c"Built-in"))
      (541958 'move' tmp[541936](541956 call _command_line_cast[1208405] call_tmp[633756]))
    }
    (541938 'move' dataParMinGranularity[93296] tmp[541936])
    (2197344 '_private_broadcast' dataParMinGranularity[93296])
    const-val call_tmp[633761]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (633764 'move' call_tmp[633761](93302 call <[948587] dataParTasksPerLocale[93284]))
    const-val call_tmp[633766]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (633769 'move' call_tmp[633766] call_tmp[633761])
    if call_tmp[633766]
    {
      (93323 call halt[154111] "dataParTasksPerLocale must be >= 0")
    }
    const-val call_tmp[633771]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (633774 'move' call_tmp[633771](93332 call <=[437128] dataParMinGranularity[93296] 0))
    const-val call_tmp[633776]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (633779 'move' call_tmp[633776] call_tmp[633771])
    if call_tmp[633776]
    {
      (93353 call halt[154111] "dataParMinGranularity must be > 0")
    }
    val new_temp[1209275]:DefaultDist[93992] "dead at end of block" "temp"
    const-val default_arg__doms[1243358]:chpl__simpleSet(unmanaged BaseDom)[1208831] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[1910900]:chpl__simpleSet(unmanaged BaseDom)[1208831] "temp"
    (1243360 call _new_default__doms[1209286] ret_tmp[1910900])
    (1910903 'move' default_arg__doms[1243358] ret_tmp[1910900])
    const-val default_arg__domsLock[1243400]:chpl_LocalSpinlock[187432] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[1911194]:chpl_LocalSpinlock[187432] "temp"
    (1243402 call _new_default__domsLock[1243366] ret_tmp[1911194])
    (1911197 'move' default_arg__domsLock[1243400] ret_tmp[1911194])
    const-val default_arg_pid[1243469]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    (1243473 'move' default_arg_pid[1243469](1243471 call _new_default_pid[1243437]))
    (1209277 'move' new_temp[1209275](1209083 call _new[1209202] default_arg__doms[1243358] default_arg__domsLock[1243400] 0 default_arg_pid[1243469]))
    (633998 'move' call_tmp[633995] new_temp[1209275])
    const-val ret_tmp[1911212]:DefaultDist[1244085] "temp"
    (94052 call chpl__buildDistValue[1243510] call_tmp[633995] ret_tmp[1911212])
    (1911215 'move' call_tmp[634000] ret_tmp[1911212])
    (542016 'move' defaultDist[94053] call_tmp[634000])
    (515795 return _void[55])
  }
  const-val dataParTasksPerLocale[93284]:int(64)[13] "config" "const" "insert auto destroy"
  const-val dataParIgnoreRunningTasks[93290]:bool[10] "config" "const" "insert auto destroy"
  const-val dataParMinGranularity[93296]:int(64)[13] "config" "const" "insert auto destroy"
  type ArrayStorageOrder[93454] def RMO[93450]:ArrayStorageOrder[93454] def CMO[93452]:ArrayStorageOrder[93454]
  function DefaultDist[93992].dsiNewRectangularDom[1247221](const in arg this[1247225]:DefaultDist[93992], const  ref arg inds[1247233]:1*range(int(64),bounded,false)[1244885]) : domain(1,int(64),false)[1251123] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved"
  {
    val _formal_type_tmp_[1879875]:int(64)[13] "temp"
    val ret[1247235]:domain(1,int(64),false)[1251123] "dead after last mention" "RVV" "temp"
    val call_tmp[1247272]:DefaultDist[93992] "dead at end of block" "expr temp" "maybe param" "temp"
    (1247274 'move' call_tmp[1247272](1247277 call _to_unmanaged[1247325] this[1247225]))
    val call_tmp[1247279]:domain(1,int(64),false)[1251123] "dead at end of block" "insert auto destroy for explicit new" "maybe copy elided" "maybe param" "temp"
    val new_temp[1251448]:domain(1,int(64),false)[1251123] "dead at end of block" "temp"
    (1251450 'move' new_temp[1251448](1247372 call _new[1251376] call_tmp[1247272]))
    (1247281 'move' call_tmp[1247279] new_temp[1251448])
    const dom[1247291]:domain(1,int(64),false)[1251123] "dead at end of block" "const" "insert auto destroy"
    (1924701 '=' dom[1247291] call_tmp[1247279])
    (1247293 'noop')
    val coerce_tmp[1251525]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1251530 'move' coerce_tmp[1251525] dom[1247291])
    (1247301 call dsiSetIndices[1251497] coerce_tmp[1251525] inds[1247233])
    (1247305 'move' ret[1247235] dom[1247291])
    gotoReturn _end_dsiNewRectangularDom[1247313] _end_dsiNewRectangularDom[1247313]
    label _end_dsiNewRectangularDom[1247313]
    (1247315 return ret[1247235])
  }
  function DefaultDist[93992].dsiClone[93900](const in arg this[94010]:DefaultDist[93992]) : DefaultDist[93992] "method" "primary method" "resolved"
  {
    val ret[514409]:DefaultDist[93992] "dead after last mention" "RVV" "temp"
    val call_tmp[633985]:DefaultDist[93992] "dead after last mention" "expr temp" "maybe param" "temp"
    (633988 'move' call_tmp[633985](93905 call _to_unmanaged[1247325] this[94010]))
    (514414 'move' ret[514409] call_tmp[633985])
    (514411 return ret[514409])
  }
  function DefaultDist[93992].dsiTrackDomains[93963](const in arg this[94030]:DefaultDist[93992]) : bool[10] "method" "primary method" "method overrides" "resolved" "virtual"
  {
    val ret[514447]:bool[10] "dead after last mention" "RVV" "temp"
    (514452 'move' ret[514447] 0)
    (514449 return ret[514447])
  }
  function DefaultDist[93992].init[786964](const in arg this[786967]:DefaultDist[93992], const  ref arg _doms[787118]:chpl__simpleSet(unmanaged BaseDom)[1208831], const  ref arg _domsLock[787123]:chpl_LocalSpinlock[187432], const in arg _free_when_no_doms[787128]:bool[10], const in arg pid[787135]:int(64)[13]) : void[4] "compiler generated" "inline" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    const-val _formal_tmp__doms[1209096]:chpl__simpleSet(unmanaged BaseDom)[1208831] "dead at end of block" "no auto destroy" "no copy" "temp"
    (1209102 'move' _formal_tmp__doms[1209096] _doms[787118])
    const-val _formal_tmp__domsLock[1209097]:chpl_LocalSpinlock[187432] "dead at end of block" "no auto destroy" "no copy" "temp"
    (1209106 'move' _formal_tmp__domsLock[1209097] _domsLock[787123])
    const-val _formal_tmp__free_when_no_doms[1209098]:bool[10] "dead at end of block" "insert auto destroy" "temp"
    (1209113 'move' _formal_tmp__free_when_no_doms[1209098](1209110 call chpl__initCopy[1035073] _free_when_no_doms[787128]))
    const-val _formal_tmp_pid[1209099]:int(64)[13] "dead at end of block" "insert auto destroy" "temp"
    (1209119 'move' _formal_tmp_pid[1209099](1209116 call chpl__initCopy[955521] pid[787135]))
    val super_tmp[787140]:BaseDist[145968] "dead after last mention" "temporary of super field" "temp"
    (787142 'move' super_tmp[787140](787139 '.v' this[786967] super[355765]))
    (786977 call init[786978] super_tmp[787140] _formal_tmp__doms[1209096] _formal_tmp__domsLock[1209097] _formal_tmp__free_when_no_doms[1209098] _formal_tmp_pid[1209099])
    val tmp[787145]:BaseDist[145968] "dead after last mention" "temp" "type variable"
    val call_tmp[787183]:BaseDist[145968] "dead at end of block" "maybe param" "temp"
    (787186 'move' call_tmp[787183](787156 'cast' BaseDist[145968] this[786967]))
    val chpl__thisAsParent[787153]:BaseDist[145968] "dead at end of block" "insert auto destroy" "temp"
    (787174 'move' chpl__thisAsParent[787153](1209175 call chpl__initCopy[1209177] call_tmp[787183]))
    (787159 'setcid' chpl__thisAsParent[787153])
    (787161 'setcid' this[786967])
    (787172 return _void[55])
  }
  function DefaultDist[93992].deinit[787188](const in arg this[787192]:DefaultDist[93992]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[1890395]
    val _parent_destructor_tmp_[1890390]:BaseDist[145968] "temp"
    (1890397 'move' _parent_destructor_tmp_[1890390](1890391 'cast' BaseDist[145968] this[787192]))
    (1890399 call deinit[145498] _parent_destructor_tmp_[1890390])
    (787200 return _void[55])
  }
  function _new[1209202](const  ref arg _doms[1209215]:chpl__simpleSet(unmanaged BaseDom)[1208831], const  ref arg _domsLock[1209220]:chpl_LocalSpinlock[187432], const in arg _free_when_no_doms[1209225]:bool[10], const in arg pid[1209232]:int(64)[13]) : DefaultDist[93992] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "suppress lvalue error"
  {
    val _formal_type_tmp_[1879821]:DefaultDist[93992] "temp"
    const-val _formal_tmp__doms[1243477]:chpl__simpleSet(unmanaged BaseDom)[1208831] "dead at end of block" "no auto destroy" "no copy" "temp"
    (1243481 'move' _formal_tmp__doms[1243477] _doms[1209215])
    const-val _formal_tmp__domsLock[1243478]:chpl_LocalSpinlock[187432] "dead at end of block" "no auto destroy" "no copy" "temp"
    (1243485 'move' _formal_tmp__domsLock[1243478] _domsLock[1209220])
    val ret[1209262]:DefaultDist[93992] "dead after last mention" "RVV" "temp"
    val initTemp[1209204]:DefaultDist[93992] "dead after last mention" "temp"
    const-val call_tmp[1209269]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1209272 'move' call_tmp[1209269](1243488 'sizeof_bundle' DefaultDist[93992]))
    const-val cast_tmp[1243491]:c_void_ptr[149] "dead after last mention" "temp"
    (1243493 'move' cast_tmp[1243491](1209240 call chpl_here_alloc[187788] call_tmp[1209269] 37))
    (1209243 'move' initTemp[1209204](1243495 'cast' DefaultDist[93992] cast_tmp[1243491]))
    (1209245 'setcid' initTemp[1209204])
    (1209205 call init[786964] initTemp[1209204] _formal_tmp__doms[1243477] _formal_tmp__domsLock[1243478] _free_when_no_doms[1209225] pid[1209232])
    val tmp[1209247]:DefaultDist[93992] "dead after last mention" "temp"
    (1209251 'move' tmp[1209247] initTemp[1209204])
    (1209267 'move' ret[1209262] tmp[1209247])
    (1209264 return ret[1209262])
  }
  function _new_default_pid[1243437]() : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "resolved" "was compiler generated"
  {
    val ret[1243439]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val pid[1243444]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1243448]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1243450]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1243458 'move' tmp[1243448] -1)
    (1243461 'move' pid[1243444] tmp[1243448])
    (1243466 'move' ret[1243439] pid[1243444])
    (1243442 return ret[1243439])
  }
  function _new_default__domsLock[1243366](ref arg _retArg[1911206]:_ref(chpl_LocalSpinlock)[941260]) : void[4] "compiler generated" "default actual function" "fn returns via _retArg" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "resolved" "was compiler generated"
  {
    const-val ret[1243368]:chpl_LocalSpinlock[187432] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _domsLock[1243373]:chpl_LocalSpinlock[187432] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val default_arg_l[1243392]:AtomicBool[45877] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[1907826]:AtomicBool[45877] "temp"
    (1243394 call init_default_l[945017] ret_tmp[1907826])
    (1907829 'move' default_arg_l[1243392] ret_tmp[1907826])
    (1243384 call init[820510] _domsLock[1243373] default_arg_l[1243392])
    (1243380 'move' ret[1243368] _domsLock[1243373])
    (1911208 '=' _retArg[1911206] ret[1243368])
    (1911210 return _void[55])
  }
  function _new_default__doms[1209286](ref arg _retArg[1910912]:_ref(chpl__simpleSet(unmanaged BaseDom))[1208840]) : void[4] "compiler generated" "default actual function" "fn returns via _retArg" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "resolved" "was compiler generated"
  {
    const-val ret[1209288]:chpl__simpleSet(unmanaged BaseDom)[1208831] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _doms[1209293]:chpl__simpleSet(unmanaged BaseDom)[1208831] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val _formal_type[1209295]:chpl__simpleSet(unmanaged BaseDom)[1208831] "dead after last mention" "temp" "type variable"
    const-val default_arg_table[1243350]:chpl__hashtable(unmanaged BaseDom,nothing)[1208917] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[1910918]:chpl__hashtable(unmanaged BaseDom,nothing)[1208917] "temp"
    (1243352 call init_default_table[1209377] ret_tmp[1910918])
    (1910921 'move' default_arg_table[1243350] ret_tmp[1910918])
    (1209312 call init[1209317] _doms[1209293] default_arg_table[1243350])
    (1209306 'move' ret[1209288] _doms[1209293])
    (1910914 '=' _retArg[1910912] ret[1209288])
    (1910916 return _void[55])
  }
  type DefaultDist[93992] val super[355765]:BaseDist[145968] "super class"
  val defaultDist[94053]:DefaultDist[1244085] "dead at end of block" "insert auto destroy" "locale private"
  function chpl_defaultDistInitPrivate[94059]() : void[4] "resolved" "no return value for void"
  {
    val call_tmp[634007]:DefaultDist[93992] "dead after last mention" "expr temp" "maybe param" "temp"
    (634010 'move' call_tmp[634007](94062 call _value[1246607] defaultDist[94053]))
    const-val call_tmp[634012]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1325715]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1325720 'move' coerce_tmp[1325715](1325717 'cast' object[22] call_tmp[634007]))
    (634015 'move' call_tmp[634012](94066 call ==[1146] coerce_tmp[1325715] nil[44]))
    const-val call_tmp[634017]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (634020 'move' call_tmp[634017] call_tmp[634012])
    if call_tmp[634017]
    {
      val call_tmp[634022]:DefaultDist[93992] "dead at end of block" "insert auto destroy for explicit new" "maybe param" "temp"
      val new_temp[1325739]:DefaultDist[93992] "dead at end of block" "temp"
      const-val default_arg__doms[1325750]:chpl__simpleSet(unmanaged BaseDom)[1208831] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
      const-val ret_tmp[1910906]:chpl__simpleSet(unmanaged BaseDom)[1208831] "temp"
      (1325752 call _new_default__doms[1209286] ret_tmp[1910906])
      (1910909 'move' default_arg__doms[1325750] ret_tmp[1910906])
      const-val default_arg__domsLock[1325758]:chpl_LocalSpinlock[187432] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
      const-val ret_tmp[1911200]:chpl_LocalSpinlock[187432] "temp"
      (1325760 call _new_default__domsLock[1243366] ret_tmp[1911200])
      (1911203 'move' default_arg__domsLock[1325758] ret_tmp[1911200])
      const-val default_arg_pid[1325775]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
      (1325779 'move' default_arg_pid[1325775](1325777 call _new_default_pid[1243437]))
      (1325741 'move' new_temp[1325739](1325727 call _new[1209202] default_arg__doms[1325750] default_arg__domsLock[1325758] 0 default_arg_pid[1325775]))
      (634025 'move' call_tmp[634022] new_temp[1325739])
      const-val call_tmp[634027]:DefaultDist[1244085] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1911218]:DefaultDist[1244085] "temp"
      (94077 call chpl__buildDistValue[1243510] call_tmp[634022] ret_tmp[1911218])
      (1911221 'move' call_tmp[634027] ret_tmp[1911218])
      const-val nd[94078]:DefaultDist[1244085] "dead at end of block" "const" "insert auto destroy"
      (542018 'move' nd[94078] call_tmp[634027])
      const-val call_tmp[634034]:DefaultDist[1244085] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1913718]:DefaultDist[1244085] "temp"
      (94094 call clone[1325798] nd[94078] ret_tmp[1913718])
      (1913721 'move' call_tmp[634034] ret_tmp[1913718])
      (94097 'move' defaultDist[94053] call_tmp[634034])
      (1919479 call chpl__autoDestroy[1695019] call_tmp[634034])
      (1919482 call chpl__autoDestroy[1695019] nd[94078])
    }
    (514472 return _void[55])
  }
  function domain(1,int(64),false)[1251123].dsiLinksDistribution[1831963](const in arg this[1831967]:domain(1,int(64),false)[1251123]) : bool[10] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual"
  {
    val ret[1831969]:bool[10] "dead after last mention" "RVV" "temp"
    (1831977 'move' ret[1831969] 0)
    (1831981 return ret[1831969])
  }
  function domain(1,int(64),false)[1251123].init[1247380](const in arg this[1247384]:domain(1,int(64),false)[1251123], const in arg dist[1247392]:DefaultDist[93992]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[1879877]:int(64)[13] "temp"
    val super_tmp[1247404]:BaseRectangularDom(1,int(64),false)[1251088] "dead after last mention" "temporary of super field" "temp"
    (1247406 'move' super_tmp[1247404](1247408 '.v' this[1247384] super[1251108]))
    (1247415 call init[1247519] super_tmp[1247404])
    val tmp[1247420]:BaseRectangularDom(1,int(64),false)[1251088] "dead after last mention" "temp" "type variable"
    val call_tmp[1247439]:BaseRectangularDom(1,int(64),false)[1251088] "dead at end of block" "maybe param" "temp"
    (1247441 'move' call_tmp[1247439](1247443 'cast' BaseRectangularDom(1,int(64),false)[1251088] this[1247384]))
    val chpl__thisAsParent[1247446]:BaseRectangularDom(1,int(64),false)[1251088] "dead at end of block" "insert auto destroy" "temp"
    (1247448 'move' chpl__thisAsParent[1247446](1251142 call chpl__initCopy[1251144] call_tmp[1247439]))
    (1247452 'setcid' chpl__thisAsParent[1247446])
    val tmp[1247455]:DefaultDist[93992] "dead after last mention" "temp"
    (1247457 'move' tmp[1247455](1251163 call chpl__initCopy[1243995] dist[1247392]))
    (1247461 '.=' this[1247384] dist[1251110] tmp[1247455])
    val tmp[1247466]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "temp"
    val call_tmp[1247475]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1247489]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1247498]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1911642]:1*range(int(64),bounded,false)[1244885] "temp"
    (1251249 call _defaultOf[1251254] ret_tmp[1911642])
    (1911645 'move' tmp[1247466] ret_tmp[1911642])
    (1247509 '.=' this[1247384] ranges[1251113] tmp[1247466])
    (1247514 'setcid' this[1247384])
    (1247516 return _void[55])
  }
  function domain(1,int(64),false)[1251123].dsiMyDist[1831934](const in arg this[1831938]:domain(1,int(64),false)[1251123]) : DefaultDist[93992] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual"
  {
    val ret[1831940]:DefaultDist[93992] "dead after last mention" "RVV" "temp"
    ref call_tmp[1831948]:_ref(DefaultDist)[1209063] "dead after last mention" "maybe param" "temp"
    (1831950 'move' call_tmp[1831948](1831953 call dist[1287689] this[1831938]))
    (1831956 'move' ret[1831940](1831958 'deref' call_tmp[1831948]))
    (1831960 return ret[1831940])
  }
  function domain(1,int(64),false)[1251123].chpl__serialize[1871119](const in arg this[1871123]:domain(1,int(64),false)[1251123], ref arg _retArg[1918908]:_ref(_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true))[1871368]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    const-val ret[1871125]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1871345] "dead after last mention" "RVV" "temp"
    val call_tmp[1871141]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val coerce_tmp[1871193]:BaseRectangularDom(1,int(64),false)[1251088] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (1871199 'move' coerce_tmp[1871193](1871195 'cast' BaseRectangularDom(1,int(64),false)[1251088] this[1871123]))
    const-val call_tmp[1871157]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
    const-val ret_tmp[1914275]:1*range(int(64),bounded,false)[1244885] "temp"
    (1871165 call dsiDims[1353398] this[1871123] ret_tmp[1914275])
    (1914278 'move' call_tmp[1871157] ret_tmp[1914275])
    const-val call_tmp[1871166]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1871345] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1871207]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1871345] "dead after last mention" "delay instantiation" "temp"
    (1871210 call init[1871219] initTemp[1871207] call_tmp[1871157])
    (1871168 'move' call_tmp[1871166] initTemp[1871207])
    (1871177 'move' ret[1871125] call_tmp[1871166])
    (1918910 '=' _retArg[1918908] ret[1871125])
    (1918912 return _void[55])
  }
  function chpl__deserialize[1871949](const  ref arg data[1871955]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1871345]) : domain(1,int(64),false)[1251123] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val _formal_type_tmp_[1880392]:domain(1,int(64),false)[1251123] "temp"
    val ret[1871957]:domain(1,int(64),false)[1251123] "dead after last mention" "RVV" "temp"
    val call_tmp[1871975]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[1871991]:_ref(1*range(int(64),bounded,false))[1244943] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1871993 'move' call_tmp[1871991](1871996 call dims[1871673] data[1871955]))
    val call_tmp[1871999]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
    (1872001 'move' call_tmp[1871999](1872007 call newRectangularDom[1247097] defaultDist[94053] call_tmp[1871991]))
    (1872012 'move' ret[1871957] call_tmp[1871999])
    (1872016 return ret[1871957])
  }
  function domain(1,int(64),false)[1251123].dsiGetIndices[1297001](const in arg this[1297005]:domain(1,int(64),false)[1251123], ref arg _retArg[1913344]:_ref(1*range(int(64),bounded,false))[1244943]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    const-val ret[1297007]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "RVV" "temp"
    ref call_tmp[1297015]:_ref(1*range(int(64),bounded,false))[1244943] "dead after last mention" "maybe param" "temp"
    (1297017 'move' call_tmp[1297015](1297020 call ranges[1251533] this[1297005]))
    (1297023 'move' ret[1297007](1913348 call chpl__autoCopy[1695069] call_tmp[1297015]))
    (1913346 '=' _retArg[1913344] ret[1297007])
    (1913350 return _void[55])
  }
  function domain(1,int(64),false)[1251123].dsiSetIndices[1251497](const in arg this[1251501]:domain(1,int(64),false)[1251123], const  ref arg x[1251503]:1*range(int(64),bounded,false)[1244885]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[1251511]:_ref(1*range(int(64),bounded,false))[1244943] "dead after last mention" "maybe param" "temp"
    (1251513 'move' call_tmp[1251511](1251516 call ranges[1251533] this[1251501]))
    (1251520 call =[1251561] call_tmp[1251511] x[1251503])
    (1251523 return _void[55])
  }
  function domain(1,int(64),false)[1251123].dsiAssignDomain[1288605](const in arg this[1288609]:domain(1,int(64),false)[1251123], const  ref arg rhs[1288611]:domain(1,int(64),false)[1252786], const in arg lhsPrivate[1288613]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    (1288622 call chpl_assignDomainWithGetSetIndices[1288641] this[1288609] rhs[1288611])
    (1288625 return _void[55])
  }
  function domain(1,int(64),false)[1251123].these_help[1383178](const in arg this[1383182]:domain(1,int(64),false)[1251123], ref arg _retArg[1914561]:_ref(_ir_these_help_DefaultRectangularDom_1_int64_t_F)[1383712]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _ir[2135396]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1383601] "temp"
    (2135398 '.=' _ir[2135396] F0_this[2134556] this[1383182])
    (2135402 '=' _retArg[1914561] _ir[2135396])
    (2135405 return _void[55])
  }
  type _ic_these_help_DefaultRectangularDom_1_int64_t_F[1383595] val super[1383596]:object[22] "super class" val more[1383598]:int(64)[13] const-val F0_this[2134554]:domain(1,int(64),false)[1251123] val F1__iterator[2134558]:_ic_these_range_int64_t_bounded_F[1096892] val F2_i[2134560]:int(64)[13] const F3_end[2134562]:int(64)[13] val F4_coerce_tmp[2134564]:int(64)[13] val value[2134566]:int(64)[13]
  type _ir_these_help_DefaultRectangularDom_1_int64_t_F[1383601] const-val F0_this[2134556]:domain(1,int(64),false)[1251123]
  function _getIterator[1383610](const  ref arg ir[1383612]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1383601]) : _ic_these_help_DefaultRectangularDom_1_int64_t_F[1383595] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[1383719]:_ic_these_help_DefaultRectangularDom_1_int64_t_F[1383595] "dead after last mention" "RVV" "temp"
    val _ic_[1383602]:_ic_these_help_DefaultRectangularDom_1_int64_t_F[1383595] "dead after last mention" "temp"
    const-val call_tmp[1383726]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1383729 'move' call_tmp[1383726](1383741 'sizeof_bundle' _ic_these_help_DefaultRectangularDom_1_int64_t_F[1383595]))
    const-val cast_tmp[1383744]:c_void_ptr[149] "dead after last mention" "temp"
    (1383746 'move' cast_tmp[1383744](1383607 call chpl_here_alloc[187788] call_tmp[1383726] 67))
    (1383615 'move' _ic_[1383602](1383748 'cast' _ic_these_help_DefaultRectangularDom_1_int64_t_F[1383595] cast_tmp[1383744]))
    (1383617 'setcid' _ic_[1383602])
    (1383724 'move' ret[1383719] _ic_[1383602])
    (2135408 '.=' ret[1383719] more[1383598] 1)
    const-val tmp[2135412]:domain(1,int(64),false)[1251123] "temp"
    (2135417 'move' tmp[2135412](2135413 '.v' ir[1383612] F0_this[2134556]))
    (2135419 '.=' ret[1383719] F0_this[2134554] tmp[2135412])
    (1383721 return ret[1383719])
  }
  function domain(1,int(64),false)[1251123].these_help[1384021](const in arg this[1384025]:domain(1,int(64),false)[1251123], const  ref arg block[1384029]:1*range(int(64),bounded,false)[1244885], ref arg _retArg[1914571]:_ref(_ir_these_help_DefaultRectangularDom_1_int64_t_F)[1384546]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _ir[2136256]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1384435] "temp"
    (2136258 '.=' _ir[2136256] F0_this[2135425] this[1384025])
    (2136262 '.=' _ir[2136256] F1_block[2135429] block[1384029])
    (2136266 '=' _retArg[1914571] _ir[2136256])
    (2136269 return _void[55])
  }
  type _ic_these_help_DefaultRectangularDom_1_int64_t_F[1384429] val super[1384430]:object[22] "super class" val more[1384432]:int(64)[13] const-val F0_this[2135423]:domain(1,int(64),false)[1251123] ref F1_block[2135427]:_ref(1*range(int(64),bounded,false))[1244943] val F2__iterator[2135431]:_ic_these_range_int64_t_bounded_F[1096892] val F3_i[2135433]:int(64)[13] const F4_end[2135435]:int(64)[13] val F5_coerce_tmp[2135437]:int(64)[13] val value[2135439]:int(64)[13]
  type _ir_these_help_DefaultRectangularDom_1_int64_t_F[1384435] const-val F0_this[2135425]:domain(1,int(64),false)[1251123] ref F1_block[2135429]:_ref(1*range(int(64),bounded,false))[1244943]
  function _getIterator[1384444](const  ref arg ir[1384446]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1384435]) : _ic_these_help_DefaultRectangularDom_1_int64_t_F[1384429] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[1384553]:_ic_these_help_DefaultRectangularDom_1_int64_t_F[1384429] "dead after last mention" "RVV" "temp"
    val _ic_[1384436]:_ic_these_help_DefaultRectangularDom_1_int64_t_F[1384429] "dead after last mention" "temp"
    const-val call_tmp[1384560]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1384563 'move' call_tmp[1384560](1384575 'sizeof_bundle' _ic_these_help_DefaultRectangularDom_1_int64_t_F[1384429]))
    const-val cast_tmp[1384578]:c_void_ptr[149] "dead after last mention" "temp"
    (1384580 'move' cast_tmp[1384578](1384441 call chpl_here_alloc[187788] call_tmp[1384560] 68))
    (1384449 'move' _ic_[1384436](1384582 'cast' _ic_these_help_DefaultRectangularDom_1_int64_t_F[1384429] cast_tmp[1384578]))
    (1384451 'setcid' _ic_[1384436])
    (1384558 'move' ret[1384553] _ic_[1384436])
    (2136272 '.=' ret[1384553] more[1384432] 1)
    const-val tmp[2136276]:domain(1,int(64),false)[1251123] "temp"
    (2136281 'move' tmp[2136276](2136277 '.v' ir[1384446] F0_this[2135425]))
    (2136283 '.=' ret[1384553] F0_this[2135423] tmp[2136276])
    ref tmp[2136287]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    (2136292 'move' tmp[2136287](2136288 '.v' ir[1384446] F1_block[2135429]))
    (2136294 '.=' ret[1384553] F1_block[2135427] tmp[2136287])
    (1384555 return ret[1384553])
  }
  function domain(1,int(64),false)[1251123].these[1306280](const in arg this[1306284]:domain(1,int(64),false)[1251123], const in arg tasksPerLocale[1306290]:int(64)[13], const in arg ignoreRunning[1306296]:bool[10], const in arg minIndicesPerTask[1306302]:int(64)[13], const  ref arg offset[1306380]:1*int(64)[1256714], ref arg _retArg[1913501]:_ref(_ir_these_DefaultRectangularDom_1_int64_t_F)[1307020]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _ir[2128918]:_ir_these_DefaultRectangularDom_1_int64_t_F[1306909] "temp"
    (2128920 '.=' _ir[2128918] F0_this[2128062] this[1306284])
    (2128924 '.=' _ir[2128918] F1_tasksPerLocale[2128066] tasksPerLocale[1306290])
    (2128928 '.=' _ir[2128918] F2_ignoreRunning[2128070] ignoreRunning[1306296])
    (2128932 '.=' _ir[2128918] F3_minIndicesPerTask[2128074] minIndicesPerTask[1306302])
    (2128936 '.=' _ir[2128918] F4_offset[2128078] offset[1306380])
    (2128940 '=' _retArg[1913501] _ir[2128918])
    (2128943 return _void[55])
  }
  type _ic_these_DefaultRectangularDom_1_int64_t_F[1306903] val super[1306904]:object[22] "super class" val more[1306906]:int(64)[13] const-val F0_this[2128060]:domain(1,int(64),false)[1251123] const-val F1_tasksPerLocale[2128064]:int(64)[13] const-val F2_ignoreRunning[2128068]:bool[10] const-val F3_minIndicesPerTask[2128072]:int(64)[13] ref F4_offset[2128076]:_ref(1*int(64))[1256784] val F5__iterator[2128080]:_ic_these_range_int64_t_bounded_F[1096892] val F6_i[2128082]:int(64)[13] const F7_end[2128084]:int(64)[13] val F8_coerce_tmp[2128086]:int(64)[13] val value[2128088]:int(64)[13]
  type _ir_these_DefaultRectangularDom_1_int64_t_F[1306909] const-val F0_this[2128062]:domain(1,int(64),false)[1251123] const-val F1_tasksPerLocale[2128066]:int(64)[13] const-val F2_ignoreRunning[2128070]:bool[10] const-val F3_minIndicesPerTask[2128074]:int(64)[13] ref F4_offset[2128078]:_ref(1*int(64))[1256784]
  function _getIterator[1306918](const  ref arg ir[1306920]:_ir_these_DefaultRectangularDom_1_int64_t_F[1306909]) : _ic_these_DefaultRectangularDom_1_int64_t_F[1306903] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[1307027]:_ic_these_DefaultRectangularDom_1_int64_t_F[1306903] "dead after last mention" "RVV" "temp"
    val _ic_[1306910]:_ic_these_DefaultRectangularDom_1_int64_t_F[1306903] "dead after last mention" "temp"
    const-val call_tmp[1307034]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1307037 'move' call_tmp[1307034](1307049 'sizeof_bundle' _ic_these_DefaultRectangularDom_1_int64_t_F[1306903]))
    const-val cast_tmp[1307052]:c_void_ptr[149] "dead after last mention" "temp"
    (1307054 'move' cast_tmp[1307052](1306915 call chpl_here_alloc[187788] call_tmp[1307034] 55))
    (1306923 'move' _ic_[1306910](1307056 'cast' _ic_these_DefaultRectangularDom_1_int64_t_F[1306903] cast_tmp[1307052]))
    (1306925 'setcid' _ic_[1306910])
    (1307032 'move' ret[1307027] _ic_[1306910])
    (2128946 '.=' ret[1307027] more[1306906] 1)
    const-val tmp[2128950]:domain(1,int(64),false)[1251123] "temp"
    (2128955 'move' tmp[2128950](2128951 '.v' ir[1306920] F0_this[2128062]))
    (2128957 '.=' ret[1307027] F0_this[2128060] tmp[2128950])
    const-val tmp[2128961]:int(64)[13] "temp"
    (2128966 'move' tmp[2128961](2128962 '.v' ir[1306920] F1_tasksPerLocale[2128066]))
    (2128968 '.=' ret[1307027] F1_tasksPerLocale[2128064] tmp[2128961])
    const-val tmp[2128972]:bool[10] "temp"
    (2128977 'move' tmp[2128972](2128973 '.v' ir[1306920] F2_ignoreRunning[2128070]))
    (2128979 '.=' ret[1307027] F2_ignoreRunning[2128068] tmp[2128972])
    const-val tmp[2128983]:int(64)[13] "temp"
    (2128988 'move' tmp[2128983](2128984 '.v' ir[1306920] F3_minIndicesPerTask[2128074]))
    (2128990 '.=' ret[1307027] F3_minIndicesPerTask[2128072] tmp[2128983])
    ref tmp[2128994]:_ref(1*int(64))[1256784] "temp"
    (2128999 'move' tmp[2128994](2128995 '.v' ir[1306920] F4_offset[2128078]))
    (2129001 '.=' ret[1307027] F4_offset[2128076] tmp[2128994])
    (1307029 return ret[1307027])
  }
  function domain(1,int(64),false)[1251123].these_default_offset[1306806](const in arg this[1306809]:domain(1,int(64),false)[1251123], ref arg _retArg[1913547]:_ref(1*int(64))[1256784]) : void[4] "compiler generated" "default actual function" "fn returns via _retArg" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved"
  {
    const-val ret[1306812]:1*int(64)[1256714] "dead after last mention" "RVV" "maybe param" "temp"
    const-val offset[1306817]:1*int(64)[1256714] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val call_tmp[1306828]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1306836]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1913505]:1*int(64)[1256714] "temp"
    (1306853 call createTuple[1306394] 0 ret_tmp[1913505])
    (1913508 'move' offset[1306817] ret_tmp[1913505])
    (1306868 'move' ret[1306812] offset[1306817])
    (1913549 '=' _retArg[1913547] ret[1306812])
    (1913551 return _void[55])
  }
  function domain(1,int(64),false)[1251123].these_default_minIndicesPerTask[1306775](const in arg this[1306778]:domain(1,int(64),false)[1251123]) : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved"
  {
    val ret[1306781]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val minIndicesPerTask[1306786]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1306790 'move' minIndicesPerTask[1306786] dataParMinGranularity[93296])
    (1306793 'move' ret[1306781] minIndicesPerTask[1306786])
    (1306784 return ret[1306781])
  }
  function domain(1,int(64),false)[1251123].these_default_ignoreRunning[1306744](const in arg this[1306747]:domain(1,int(64),false)[1251123]) : bool[10] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved"
  {
    val ret[1306750]:bool[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val ignoreRunning[1306755]:bool[10] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1306759 'move' ignoreRunning[1306755] dataParIgnoreRunningTasks[93290])
    (1306762 'move' ret[1306750] ignoreRunning[1306755])
    (1306753 return ret[1306750])
  }
  function domain(1,int(64),false)[1251123].these_default_tasksPerLocale[1306713](const in arg this[1306716]:domain(1,int(64),false)[1251123]) : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved"
  {
    val ret[1306719]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val tasksPerLocale[1306724]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1306728 'move' tasksPerLocale[1306724] dataParTasksPerLocale[93284])
    (1306731 'move' ret[1306719] tasksPerLocale[1306724])
    (1306722 return ret[1306719])
  }
  function domain(1,int(64),false)[1251123].these_default_offset[1315351](const in arg this[1315354]:domain(1,int(64),false)[1251123], ref arg _retArg[1913611]:_ref(1*int(64))[1256784]) : void[4] "compiler generated" "default actual function" "fn returns via _retArg" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved"
  {
    const-val ret[1315357]:1*int(64)[1256714] "dead after last mention" "RVV" "maybe param" "temp"
    const-val offset[1315362]:1*int(64)[1256714] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val call_tmp[1315373]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1315381]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1913511]:1*int(64)[1256714] "temp"
    (1315398 call createTuple[1306394] 0 ret_tmp[1913511])
    (1913514 'move' offset[1315362] ret_tmp[1913511])
    (1315413 'move' ret[1315357] offset[1315362])
    (1913613 '=' _retArg[1913611] ret[1315357])
    (1913615 return _void[55])
  }
  function domain(1,int(64),false)[1251123].these_default_minIndicesPerTask[1315320](const in arg this[1315323]:domain(1,int(64),false)[1251123]) : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved"
  {
    val ret[1315326]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val minIndicesPerTask[1315331]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1315335 'move' minIndicesPerTask[1315331] dataParMinGranularity[93296])
    (1315338 'move' ret[1315326] minIndicesPerTask[1315331])
    (1315329 return ret[1315326])
  }
  function domain(1,int(64),false)[1251123].these_default_ignoreRunning[1315289](const in arg this[1315292]:domain(1,int(64),false)[1251123]) : bool[10] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved"
  {
    val ret[1315295]:bool[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val ignoreRunning[1315300]:bool[10] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1315304 'move' ignoreRunning[1315300] dataParIgnoreRunningTasks[93290])
    (1315307 'move' ret[1315295] ignoreRunning[1315300])
    (1315298 return ret[1315295])
  }
  function domain(1,int(64),false)[1251123].these_default_tasksPerLocale[1315258](const in arg this[1315261]:domain(1,int(64),false)[1251123]) : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved"
  {
    val ret[1315264]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val tasksPerLocale[1315269]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1315273 'move' tasksPerLocale[1315269] dataParTasksPerLocale[93284])
    (1315276 'move' ret[1315264] tasksPerLocale[1315269])
    (1315267 return ret[1315264])
  }
  function domain(1,int(64),false)[1251123].these_default_offset[1478388](const in arg this[1478391]:domain(1,int(64),false)[1251123], ref arg _retArg[1915549]:_ref(1*int(64))[1256784]) : void[4] "compiler generated" "default actual function" "fn returns via _retArg" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved"
  {
    const-val ret[1478394]:1*int(64)[1256714] "dead after last mention" "RVV" "maybe param" "temp"
    const-val offset[1478399]:1*int(64)[1256714] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val call_tmp[1478410]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1478418]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1913517]:1*int(64)[1256714] "temp"
    (1478435 call createTuple[1306394] 0 ret_tmp[1913517])
    (1913520 'move' offset[1478399] ret_tmp[1913517])
    (1478450 'move' ret[1478394] offset[1478399])
    (1915551 '=' _retArg[1915549] ret[1478394])
    (1915553 return _void[55])
  }
  function domain(1,int(64),false)[1251123].these[1485740](const in arg this[1485744]:domain(1,int(64),false)[1251123], const  ref arg followThis[1485748]:1*range(int(64),bounded,false)[1244885], const in arg tasksPerLocale[1485754]:int(64)[13], const in arg ignoreRunning[1485760]:bool[10], const in arg minIndicesPerTask[1485766]:int(64)[13], const  ref arg offset[1485844]:1*int(64)[1256714], ref arg _retArg[1915755]:_ref(_ir_these_DefaultRectangularDom_1_int64_t_F)[1488162]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    val _ir[2162801]:_ir_these_DefaultRectangularDom_1_int64_t_F[1488051] "temp"
    (2162803 '.=' _ir[2162801] F0_this[2161442] this[1485744])
    (2162807 '.=' _ir[2162801] F1_followThis[2161446] followThis[1485748])
    (2162811 '.=' _ir[2162801] F2_tasksPerLocale[2161450] tasksPerLocale[1485754])
    (2162815 '.=' _ir[2162801] F3_ignoreRunning[2161454] ignoreRunning[1485760])
    (2162819 '.=' _ir[2162801] F4_minIndicesPerTask[2161458] minIndicesPerTask[1485766])
    (2162823 '.=' _ir[2162801] F5_offset[2161462] offset[1485844])
    (2162827 '=' _retArg[1915755] _ir[2162801])
    (2162830 return _void[55])
  }
  type _ic_these_DefaultRectangularDom_1_int64_t_F[1488045] val super[1488046]:object[22] "super class" val more[1488048]:int(64)[13] const-val F0_this[2161440]:domain(1,int(64),false)[1251123] ref F1_followThis[2161444]:_ref(1*range(int(64),bounded,false))[1244943] const-val F2_tasksPerLocale[2161448]:int(64)[13] const-val F3_ignoreRunning[2161452]:bool[10] const-val F4_minIndicesPerTask[2161456]:int(64)[13] ref F5_offset[2161460]:_ref(1*int(64))[1256784] val F6_block[2161464]:1*range(int(64),bounded,false)[1244885] val F7__iterator[2161466]:_ic_these_range_int64_t_bounded_F[1096892] val F8_i[2161468]:int(64)[13] const F9_end[2161470]:int(64)[13] val F10_coerce_tmp[2161472]:int(64)[13] val value[2161474]:int(64)[13]
  type _ir_these_DefaultRectangularDom_1_int64_t_F[1488051] const-val F0_this[2161442]:domain(1,int(64),false)[1251123] ref F1_followThis[2161446]:_ref(1*range(int(64),bounded,false))[1244943] const-val F2_tasksPerLocale[2161450]:int(64)[13] const-val F3_ignoreRunning[2161454]:bool[10] const-val F4_minIndicesPerTask[2161458]:int(64)[13] ref F5_offset[2161462]:_ref(1*int(64))[1256784]
  function _getIterator[1488060](const  ref arg ir[1488062]:_ir_these_DefaultRectangularDom_1_int64_t_F[1488051]) : _ic_these_DefaultRectangularDom_1_int64_t_F[1488045] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1488169]:_ic_these_DefaultRectangularDom_1_int64_t_F[1488045] "dead after last mention" "RVV" "temp"
    val _ic_[1488052]:_ic_these_DefaultRectangularDom_1_int64_t_F[1488045] "dead after last mention" "temp"
    const-val call_tmp[1488176]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1488179 'move' call_tmp[1488176](1488191 'sizeof_bundle' _ic_these_DefaultRectangularDom_1_int64_t_F[1488045]))
    const-val cast_tmp[1488194]:c_void_ptr[149] "dead after last mention" "temp"
    (1488196 'move' cast_tmp[1488194](1488057 call chpl_here_alloc[187788] call_tmp[1488176] 96))
    (1488065 'move' _ic_[1488052](1488198 'cast' _ic_these_DefaultRectangularDom_1_int64_t_F[1488045] cast_tmp[1488194]))
    (1488067 'setcid' _ic_[1488052])
    (1488174 'move' ret[1488169] _ic_[1488052])
    (2162833 '.=' ret[1488169] more[1488048] 1)
    const-val tmp[2162837]:domain(1,int(64),false)[1251123] "temp"
    (2162842 'move' tmp[2162837](2162838 '.v' ir[1488062] F0_this[2161442]))
    (2162844 '.=' ret[1488169] F0_this[2161440] tmp[2162837])
    ref tmp[2162848]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    (2162853 'move' tmp[2162848](2162849 '.v' ir[1488062] F1_followThis[2161446]))
    (2162855 '.=' ret[1488169] F1_followThis[2161444] tmp[2162848])
    const-val tmp[2162859]:int(64)[13] "temp"
    (2162864 'move' tmp[2162859](2162860 '.v' ir[1488062] F2_tasksPerLocale[2161450]))
    (2162866 '.=' ret[1488169] F2_tasksPerLocale[2161448] tmp[2162859])
    const-val tmp[2162870]:bool[10] "temp"
    (2162875 'move' tmp[2162870](2162871 '.v' ir[1488062] F3_ignoreRunning[2161454]))
    (2162877 '.=' ret[1488169] F3_ignoreRunning[2161452] tmp[2162870])
    const-val tmp[2162881]:int(64)[13] "temp"
    (2162886 'move' tmp[2162881](2162882 '.v' ir[1488062] F4_minIndicesPerTask[2161458]))
    (2162888 '.=' ret[1488169] F4_minIndicesPerTask[2161456] tmp[2162881])
    ref tmp[2162892]:_ref(1*int(64))[1256784] "temp"
    (2162897 'move' tmp[2162892](2162893 '.v' ir[1488062] F5_offset[2161462]))
    (2162899 '.=' ret[1488169] F5_offset[2161460] tmp[2162892])
    (1488171 return ret[1488169])
  }
  function domain(1,int(64),false)[1251123].these_default_offset[1487155](const in arg this[1487158]:domain(1,int(64),false)[1251123], ref arg _retArg[1915799]:_ref(1*int(64))[1256784]) : void[4] "compiler generated" "default actual function" "fn returns via _retArg" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "fn synchronization free"
  {
    const-val ret[1487161]:1*int(64)[1256714] "dead after last mention" "RVV" "maybe param" "temp"
    const-val offset[1487166]:1*int(64)[1256714] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val call_tmp[1487177]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1487185]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1913523]:1*int(64)[1256714] "temp"
    (1487202 call createTuple[1306394] 0 ret_tmp[1913523])
    (1913526 'move' offset[1487166] ret_tmp[1913523])
    (1487217 'move' ret[1487161] offset[1487166])
    (1915801 '=' _retArg[1915799] ret[1487161])
    (1915803 return _void[55])
  }
  function domain(1,int(64),false)[1251123].dsiMember[1337295](const in arg this[1337299]:domain(1,int(64),false)[1251123], const  ref arg ind[1337322]:1*int(64)[1256714]) : bool[10] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[1337324]:bool[10] "dead after last mention" "RVV" "temp"
    {
      const-val i[1337347]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1337349 'move' i[1337347] 0)
      {
        ref call_tmp[1337509]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
        ref _this_tmp_[1337560]:_ref(1*range(int(64),bounded,false))[1244943] "dead after last mention" "temp"
        (1337562 'move' _this_tmp_[1337560](1337514 call ranges[1251533] this[1337299]))
        (1337511 'move' call_tmp[1337509](1337567 '.' _this_tmp_[1337560] x0[1244883]))
        ref call_tmp[1337519]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        (1337521 'move' call_tmp[1337519](1337572 '.' ind[1337322] x0[1256712]))
        const-val call_tmp[1337526]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1337822]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1337826 'move' coerce_tmp[1337822](1337824 'deref' call_tmp[1337509]))
        const-val coerce_tmp[1337828]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1337832 'move' coerce_tmp[1337828](1337830 'deref' call_tmp[1337519]))
        (1337528 'move' call_tmp[1337526](1337534 call contains[1037162] coerce_tmp[1337822] coerce_tmp[1337828]))
        const-val call_tmp[1337536]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1337538 'move' call_tmp[1337536](1337541 call ![7494] call_tmp[1337526]))
        const-val call_tmp[1337543]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1337545 'move' call_tmp[1337543] call_tmp[1337536])
        if call_tmp[1337543]
        {
          (1337552 'move' ret[1337324] 0)
          (1925403 call chpl__autoDestroy[1407763] coerce_tmp[1337822])
          gotoReturn _end_dsiMember[1337470] _end_dsiMember[1337470]
        }
        (1925407 call chpl__autoDestroy[1407763] coerce_tmp[1337822])
      }
      label _continueLabel0[1337506]
      label _unused_continueLabel[1337462]
      label _breakLabel[1337464]
    }
    (1337466 'move' ret[1337324] 1)
    label _end_dsiMember[1337470]
    (1337472 return ret[1337324])
  }
  function domain(1,int(64),false)[1251123].dsiDims[1353398](const in arg this[1353402]:domain(1,int(64),false)[1251123], ref arg _retArg[1914281]:_ref(1*range(int(64),bounded,false))[1244943]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    const-val ret[1353404]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "RVV" "temp"
    ref call_tmp[1353412]:_ref(1*range(int(64),bounded,false))[1244943] "dead after last mention" "maybe param" "temp"
    (1353414 'move' call_tmp[1353412](1353417 call ranges[1251533] this[1353402]))
    (1353420 'move' ret[1353404](1914285 call chpl__autoCopy[1695069] call_tmp[1353412]))
    (1914283 '=' _retArg[1914281] ret[1353404])
    (1914287 return _void[55])
  }
  function domain(1,int(64),false)[1251123].dsiDim[1258236](const in arg this[1258240]:domain(1,int(64),false)[1251123], const in arg d[1258242]:int(64)[13], ref arg _retArg[1912110]:_ref(range(int(64),bounded,false))[1027047]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    const-val ret[1258244]:range(int(64),bounded,false)[1027003] "dead after last mention" "RVV" "temp"
    ref call_tmp[1448081]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1448112]:_ref(1*range(int(64),bounded,false))[1244943] "dead after last mention" "temp"
    (1448114 'move' _this_tmp_[1448112](1448086 call ranges[1251533] this[1258240]))
    (1448083 'move' call_tmp[1448081](1448089 call this[1382848] _this_tmp_[1448112] d[1258242]))
    (1448091 'move' ret[1258244](1912114 call chpl__initCopy[1085195] call_tmp[1448081]))
    (1912112 '=' _retArg[1912110] ret[1258244])
    (1912116 return _void[55])
  }
  function domain(1,int(64),false)[1251123].dsiDim[1258249](const in arg this[1258253]:domain(1,int(64),false)[1251123], ref arg _retArg[1912454]:_ref(range(int(64),bounded,false))[1027047]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    const-val ret[1258257]:range(int(64),bounded,false)[1027003] "dead after last mention" "RVV" "temp"
    ref call_tmp[1258267]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1258298]:_ref(1*range(int(64),bounded,false))[1244943] "dead after last mention" "temp"
    (1258300 'move' _this_tmp_[1258298](1258272 call ranges[1251533] this[1258253]))
    (1258269 'move' call_tmp[1258267](1258305 '.' _this_tmp_[1258298] x0[1244883]))
    (1258277 'move' ret[1258257](1912458 call chpl__initCopy[1085195] call_tmp[1258267]))
    (1912456 '=' _retArg[1912454] ret[1258257])
    (1912460 return _void[55])
  }
  function domain(1,int(64),false)[1251123].dsiNumIndices[1263823](const in arg this[1263827]:domain(1,int(64),false)[1251123]) : int(64)[13] "instantiated generic" "invisible fn" "method" "primary method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[1263829]:int(64)[13] "dead after last mention" "RVV" "temp"
    val call_tmp[1263837]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val sum[1263853]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1263855 'move' sum[1263853] 1)
    {
      const-val i[1263860]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1263862 'move' i[1263860] 0)
      {
        ref call_tmp[1264051]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
        ref _this_tmp_[1264077]:_ref(1*range(int(64),bounded,false))[1244943] "dead after last mention" "temp"
        (1264079 'move' _this_tmp_[1264077](1264056 call ranges[1251533] this[1263827]))
        (1264053 'move' call_tmp[1264051](1264084 '.' _this_tmp_[1264077] x0[1244883]))
        const-val call_tmp[1264061]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1264087]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1264091 'move' coerce_tmp[1264087](1264089 'deref' call_tmp[1264051]))
        (1264063 'move' call_tmp[1264061](1264066 call size[1035978] coerce_tmp[1264087]))
        (1264070 call *=[451935] sum[1263853] call_tmp[1264061])
        (1924752 call chpl__autoDestroy[1407763] coerce_tmp[1264087])
      }
      label _continueLabel0[1264048]
      label _unused_continueLabel[1263950]
      label _breakLabel[1263952]
    }
    (1263954 'move' ret[1263829] sum[1263853])
    gotoReturn _end_dsiNumIndices[1263962] _end_dsiNumIndices[1263962]
    label _end_dsiNumIndices[1263962]
    (1263964 return ret[1263829])
  }
  function domain(1,int(64),false)[1251123].dsiLow[1300625](const in arg this[1300629]:domain(1,int(64),false)[1251123]) : int(64)[13] "instantiated generic" "invisible fn" "method" "primary method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[1300631]:int(64)[13] "dead after last mention" "RVV" "temp"
    {
      ref call_tmp[1300664]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
      ref _this_tmp_[1300850]:_ref(1*range(int(64),bounded,false))[1244943] "dead after last mention" "temp"
      (1300852 'move' _this_tmp_[1300850](1300669 call ranges[1251533] this[1300629]))
      (1300666 'move' call_tmp[1300664](1300857 '.' _this_tmp_[1300850] x0[1244883]))
      const-val call_tmp[1300674]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1300860]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1300864 'move' coerce_tmp[1300860](1300862 'deref' call_tmp[1300664]))
      (1300676 'move' call_tmp[1300674](1300679 call low[1028600] coerce_tmp[1300860]))
      (1300682 'move' ret[1300631] call_tmp[1300674])
      (1925031 call chpl__autoDestroy[1407763] coerce_tmp[1300860])
      gotoReturn _end_dsiLow[1300831] _end_dsiLow[1300831]
    }
    label _end_dsiLow[1300831]
    (1300833 return ret[1300631])
  }
  function domain(1,int(64),false)[1251123].dsiStride[1842972](const in arg this[1842976]:domain(1,int(64),false)[1251123]) : int(64)[13] "instantiated generic" "invisible fn" "method" "primary method" "no parens" "resolved"
  {
    val ret[1842978]:int(64)[13] "dead after last mention" "RVV" "temp"
    {
      ref call_tmp[1843011]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
      ref _this_tmp_[1843204]:_ref(1*range(int(64),bounded,false))[1244943] "dead after last mention" "temp"
      (1843206 'move' _this_tmp_[1843204](1843016 call ranges[1251533] this[1842976]))
      (1843013 'move' call_tmp[1843011](1843211 '.' _this_tmp_[1843204] x0[1244883]))
      (1843029 'move' ret[1842978] 1)
      gotoReturn _end_dsiStride[1843185] _end_dsiStride[1843185]
    }
    label _end_dsiStride[1843185]
    (1843187 return ret[1842978])
  }
  function domain(1,int(64),false)[1251123].dsiBuildArray[1254927](const in arg this[1254931]:domain(1,int(64),false)[1251123]) : [domain(1,int(64),false)] locale[1256675] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val _formal_type_tmp_[1879914]:locale[28] "temp"
    val ret[1254937]:[domain(1,int(64),false)] locale[1256675] "dead after last mention" "RVV" "temp"
    val call_tmp[1254957]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val coerce_tmp[1255155]:BaseRectangularDom(1,int(64),false)[1251088] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (1255161 'move' coerce_tmp[1255155](1255157 'cast' BaseRectangularDom(1,int(64),false)[1251088] this[1254931]))
    val call_tmp[1254973]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
    (1254975 'move' call_tmp[1254973](1254978 call _to_unmanaged[1255449] this[1254931]))
    val call_tmp[1254980]:[domain(1,int(64),false)] locale[1256675] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
    val new_temp[1264748]:[domain(1,int(64),false)] locale[1256675] "dead after last mention" "temp"
    val default_arg_data[1264799]:_ddata(locale)[1255583] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1264803 'move' default_arg_data[1264799](1264801 call _new_default_data[1264765]))
    const-val default_arg_externFreeFunc[1264878]:nil[42] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1264882 'move' default_arg_externFreeFunc[1264878](1264880 call _new_default_externFreeFunc[1264861]))
    (1264750 'move' new_temp[1264748](1255496 call _new[1264638] call_tmp[1254973] default_arg_data[1264799] 0 0 default_arg_externFreeFunc[1264878]))
    (1254982 'move' call_tmp[1254980] new_temp[1264748])
    (1255000 'move' ret[1254937] call_tmp[1254980])
    (1255004 return ret[1254937])
  }
  function domain(1,int(64),false)[1251123].dsiBuildArray[1317369](const in arg this[1317373]:domain(1,int(64),false)[1251123]) : [domain(1,int(64),false)] unmanaged localesSignal?[1318401] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val _formal_type_tmp_[1879975]:localesSignal[92278] "temp"
    val ret[1317379]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] "dead after last mention" "RVV" "temp"
    val call_tmp[1317399]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val coerce_tmp[1317458]:BaseRectangularDom(1,int(64),false)[1251088] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (1317464 'move' coerce_tmp[1317458](1317460 'cast' BaseRectangularDom(1,int(64),false)[1251088] this[1317373]))
    val call_tmp[1317415]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
    (1317417 'move' call_tmp[1317415](1317420 call _to_unmanaged[1255449] this[1317373]))
    val call_tmp[1317422]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
    val new_temp[1324157]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] "dead after last mention" "temp"
    val default_arg_data[1324208]:_ddata(unmanaged localesSignal?)[1317562] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1324212 'move' default_arg_data[1324208](1324210 call _new_default_data[1324174]))
    const-val default_arg_externFreeFunc[1324287]:nil[42] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1324291 'move' default_arg_externFreeFunc[1324287](1324289 call _new_default_externFreeFunc[1324270]))
    (1324159 'move' new_temp[1324157](1317475 call _new[1324047] call_tmp[1317415] default_arg_data[1324208] 0 0 default_arg_externFreeFunc[1324287]))
    (1317424 'move' call_tmp[1317422] new_temp[1324157])
    (1317442 'move' ret[1317379] call_tmp[1317422])
    (1317446 return ret[1317379])
  }
  function domain(1,int(64),false)[1251123].dsiBuildArray[1357912](const in arg this[1357916]:domain(1,int(64),false)[1251123]) : [domain(1,int(64),false)] real(64)[1358944] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val _formal_type_tmp_[1880062]:real(64)[16] "temp"
    val ret[1357922]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "RVV" "temp"
    val call_tmp[1357942]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val coerce_tmp[1358001]:BaseRectangularDom(1,int(64),false)[1251088] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (1358007 'move' coerce_tmp[1358001](1358003 'cast' BaseRectangularDom(1,int(64),false)[1251088] this[1357916]))
    val call_tmp[1357958]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
    (1357960 'move' call_tmp[1357958](1357963 call _to_unmanaged[1255449] this[1357916]))
    val call_tmp[1357965]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
    val new_temp[1364891]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "temp"
    val default_arg_data[1364942]:_ddata(real(64))[1358105] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1364946 'move' default_arg_data[1364942](1364944 call _new_default_data[1364908]))
    const-val default_arg_externFreeFunc[1365021]:nil[42] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1365025 'move' default_arg_externFreeFunc[1365021](1365023 call _new_default_externFreeFunc[1365004]))
    (1364893 'move' new_temp[1364891](1358018 call _new[1364781] call_tmp[1357958] default_arg_data[1364942] 0 0 default_arg_externFreeFunc[1365021]))
    (1357967 'move' call_tmp[1357965] new_temp[1364891])
    (1357985 'move' ret[1357922] call_tmp[1357965])
    (1357989 return ret[1357922])
  }
  function domain(1,int(64),false)[1251123].dsiBuildArray[1367835](const in arg this[1367839]:domain(1,int(64),false)[1251123]) : [domain(1,int(64),false)] int(64)[1368867] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val _formal_type_tmp_[1880098]:int(64)[13] "temp"
    val ret[1367845]:[domain(1,int(64),false)] int(64)[1368867] "dead after last mention" "RVV" "temp"
    val call_tmp[1367865]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val coerce_tmp[1367924]:BaseRectangularDom(1,int(64),false)[1251088] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (1367930 'move' coerce_tmp[1367924](1367926 'cast' BaseRectangularDom(1,int(64),false)[1251088] this[1367839]))
    val call_tmp[1367881]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
    (1367883 'move' call_tmp[1367881](1367886 call _to_unmanaged[1255449] this[1367839]))
    val call_tmp[1367888]:[domain(1,int(64),false)] int(64)[1368867] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
    val new_temp[1373366]:[domain(1,int(64),false)] int(64)[1368867] "dead after last mention" "temp"
    val default_arg_data[1373417]:_ddata(int(64))[1368028] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1373421 'move' default_arg_data[1373417](1373419 call _new_default_data[1373383]))
    const-val default_arg_externFreeFunc[1373496]:nil[42] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1373500 'move' default_arg_externFreeFunc[1373496](1373498 call _new_default_externFreeFunc[1373479]))
    (1373368 'move' new_temp[1373366](1367941 call _new[1373256] call_tmp[1367881] default_arg_data[1373417] 0 0 default_arg_externFreeFunc[1373496]))
    (1367890 'move' call_tmp[1367888] new_temp[1373366])
    (1367908 'move' ret[1367845] call_tmp[1367888])
    (1367912 return ret[1367845])
  }
  function domain(1,int(64),false)[1251123].dsiBuildArray[1419127](const in arg this[1419131]:domain(1,int(64),false)[1251123]) : [domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val _formal_type_tmp_[1880193]:range(int(64),bounded,false)[1027003] "temp"
    val ret[1419137]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "RVV" "temp"
    val call_tmp[1419157]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val coerce_tmp[1419216]:BaseRectangularDom(1,int(64),false)[1251088] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (1419222 'move' coerce_tmp[1419216](1419218 'cast' BaseRectangularDom(1,int(64),false)[1251088] this[1419131]))
    val call_tmp[1419173]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
    (1419175 'move' call_tmp[1419173](1419178 call _to_unmanaged[1255449] this[1419131]))
    val call_tmp[1419180]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
    val new_temp[1421435]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "temp"
    val default_arg_data[1421486]:_ddata(range(int(64),bounded,false))[1406042] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1421490 'move' default_arg_data[1421486](1421488 call _new_default_data[1421452]))
    const-val default_arg_externFreeFunc[1421565]:nil[42] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1421569 'move' default_arg_externFreeFunc[1421565](1421567 call _new_default_externFreeFunc[1421548]))
    (1421437 'move' new_temp[1421435](1419233 call _new[1421330] call_tmp[1419173] default_arg_data[1421486] 0 0 default_arg_externFreeFunc[1421565]))
    (1419182 'move' call_tmp[1419180] new_temp[1421435])
    (1419200 'move' ret[1419137] call_tmp[1419180])
    (1419204 return ret[1419137])
  }
  function domain(1,int(64),false)[1251123].dsiBuildArray[1449229](const in arg this[1449233]:domain(1,int(64),false)[1251123]) : [domain(1,int(64),false)] uint(64)[1450261] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val _formal_type_tmp_[1880211]:uint(64)[115] "temp"
    val ret[1449239]:[domain(1,int(64),false)] uint(64)[1450261] "dead after last mention" "RVV" "temp"
    val call_tmp[1449259]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val coerce_tmp[1449318]:BaseRectangularDom(1,int(64),false)[1251088] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (1449324 'move' coerce_tmp[1449318](1449320 'cast' BaseRectangularDom(1,int(64),false)[1251088] this[1449233]))
    val call_tmp[1449275]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
    (1449277 'move' call_tmp[1449275](1449280 call _to_unmanaged[1255449] this[1449233]))
    val call_tmp[1449282]:[domain(1,int(64),false)] uint(64)[1450261] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
    val new_temp[1455009]:[domain(1,int(64),false)] uint(64)[1450261] "dead after last mention" "temp"
    val default_arg_data[1455060]:_ddata(uint(64))[1449422] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1455064 'move' default_arg_data[1455060](1455062 call _new_default_data[1455026]))
    const-val default_arg_externFreeFunc[1455139]:nil[42] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1455143 'move' default_arg_externFreeFunc[1455139](1455141 call _new_default_externFreeFunc[1455122]))
    (1455011 'move' new_temp[1455009](1449335 call _new[1454899] call_tmp[1449275] default_arg_data[1455060] 0 0 default_arg_externFreeFunc[1455139]))
    (1449284 'move' call_tmp[1449282] new_temp[1455009])
    (1449302 'move' ret[1449239] call_tmp[1449282])
    (1449306 return ret[1449239])
  }
  function domain(1,int(64),false)[1251123].dsiBuildArray[1519523](const in arg this[1519527]:domain(1,int(64),false)[1251123]) : [domain(1,int(64),false)] real(64)[1358944] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val _formal_type_tmp_[1880253]:real(64)[16] "temp"
    val ret[1519533]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "RVV" "temp"
    val call_tmp[1519553]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val coerce_tmp[1519612]:BaseRectangularDom(1,int(64),false)[1251088] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (1519618 'move' coerce_tmp[1519612](1519614 'cast' BaseRectangularDom(1,int(64),false)[1251088] this[1519527]))
    val call_tmp[1519569]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
    (1519571 'move' call_tmp[1519569](1519574 call _to_unmanaged[1255449] this[1519527]))
    val call_tmp[1519576]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
    val new_temp[1521831]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "temp"
    val default_arg_data[1521882]:_ddata(real(64))[1358105] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1521886 'move' default_arg_data[1521882](1521884 call _new_default_data[1521848]))
    const-val default_arg_externFreeFunc[1521961]:nil[42] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1521965 'move' default_arg_externFreeFunc[1521961](1521963 call _new_default_externFreeFunc[1521944]))
    (1521833 'move' new_temp[1521831](1519629 call _new[1521726] call_tmp[1519569] default_arg_data[1521882] 0 0 default_arg_externFreeFunc[1521961]))
    (1519578 'move' call_tmp[1519576] new_temp[1521831])
    (1519596 'move' ret[1519533] call_tmp[1519576])
    (1519600 return ret[1519533])
  }
  function domain(1,int(64),false)[1251123].dsiBuildArrayWith[1408100](const in arg this[1408104]:domain(1,int(64),false)[1251123], const in arg data[1408112]:_ddata(range(int(64),bounded,false))[1406042], const in arg allocSize[1408114]:int(64)[13]) : [domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val _formal_type_tmp_[1880156]:range(int(64),bounded,false)[1027003] "temp"
    val ret[1408116]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "RVV" "temp"
    ref call_tmp[1408134]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
    ref _this_tmp_[1408257]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "temp"
    (1408259 'move' _this_tmp_[1408257](1408139 call ranges[1251533] this[1408104]))
    (1408136 'move' call_tmp[1408134](1408264 '.' _this_tmp_[1408257] x0[1244883]))
    const-val call_tmp[1408144]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1408267]:range(int(64),bounded,false)[1027003] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1408271 'move' coerce_tmp[1408267](1408269 'deref' call_tmp[1408134]))
    (1408146 'move' call_tmp[1408144](1408149 call low[1028600] coerce_tmp[1408267]))
    const-val call_tmp[1408152]:range(int(64),boundedLow,false)[1087754] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1909564]:range(int(64),boundedLow,false)[1087754] "temp"
    (1408157 call chpl_build_low_bounded_range[1087147] call_tmp[1408144] ret_tmp[1909564])
    (1909567 'move' call_tmp[1408152] ret_tmp[1909564])
    const-val call_tmp[1408159]:range(int(64),bounded,false)[1027003] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1909666]:range(int(64),bounded,false)[1027003] "temp"
    (1408164 call #[1088114] call_tmp[1408152] allocSize[1408114] ret_tmp[1909666])
    (1909669 'move' call_tmp[1408159] ret_tmp[1909666])
    val call_tmp[1408167]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val coerce_tmp[1408276]:BaseRectangularDom(1,int(64),false)[1251088] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (1408282 'move' coerce_tmp[1408276](1408278 'cast' BaseRectangularDom(1,int(64),false)[1251088] this[1408104]))
    val call_tmp[1408175]:range(int(64),bounded,false)[1027003] "dead after last mention" "maybe param" "temp" "type variable"
    const-val allocRange[1408182]:range(int(64),bounded,false)[1027003] "dead at end of block" "insert auto destroy"
    (1408184 'move' allocRange[1408182] call_tmp[1408159])
    val call_tmp[1408197]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val coerce_tmp[1408294]:BaseRectangularDom(1,int(64),false)[1251088] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (1408300 'move' coerce_tmp[1408294](1408296 'cast' BaseRectangularDom(1,int(64),false)[1251088] this[1408104]))
    val call_tmp[1408213]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
    (1408215 'move' call_tmp[1408213](1408218 call _to_unmanaged[1255449] this[1408104]))
    val call_tmp[1408220]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
    val new_temp[1414854]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "temp"
    const-val default_arg_externFreeFunc[1414942]:nil[42] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    (1414946 'move' default_arg_externFreeFunc[1414942](1414944 call _new_default_externFreeFunc[1414925]))
    (1414856 'move' new_temp[1414854](1408311 call _new[1414744] call_tmp[1408213] data[1408112] 0 0 default_arg_externFreeFunc[1414942]))
    (1408222 'move' call_tmp[1408220] new_temp[1414854])
    (1408242 'move' ret[1408116] call_tmp[1408220])
    (1925939 call chpl__autoDestroy[1407763] allocRange[1408182])
    (1925942 call chpl__autoDestroy[1680875] call_tmp[1408152])
    (1925945 call chpl__autoDestroy[1407763] coerce_tmp[1408267])
    (1408246 return ret[1408116])
  }
  function domain(1,int(64),false)[1251123].chpl_intToIdx[1302054](const in arg this[1302058]:domain(1,int(64),false)[1251123], const in arg i[1302060]:int(64)[13]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[1302062]:int(64)[13] "dead after last mention" "RVV" "temp"
    val call_tmp[1302072]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val coerce_tmp[1302102]:BaseRectangularDom(1,int(64),false)[1251088] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (1302108 'move' coerce_tmp[1302102](1302104 'cast' BaseRectangularDom(1,int(64),false)[1251088] this[1302058]))
    const-val call_tmp[1302080]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1302082 'move' call_tmp[1302080](1302085 call chpl__intToIdx[1027588] i[1302060]))
    (1302088 'move' ret[1302062] call_tmp[1302080])
    (1302092 return ret[1302062])
  }
  function domain(1,int(64),false)[1251123].dist[1287689](const in arg this[1287693]:domain(1,int(64),false)[1251123]) ref : _ref(DefaultDist)[1209063] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1287695]:_ref(DefaultDist)[1209063] "dead after last mention" "RVV" "temp"
    ref call_tmp[1287703]:_ref(DefaultDist)[1209063] "dead after last mention" "maybe param" "temp"
    (1287705 'move' call_tmp[1287703](1287707 '.' this[1287693] dist[1251110]))
    (1287710 'move' ret[1287695] call_tmp[1287703])
    (1287714 return ret[1287695])
  }
  function domain(1,int(64),false)[1251123].ranges[1251533](const in arg this[1251537]:domain(1,int(64),false)[1251123]) ref : _ref(1*range(int(64),bounded,false))[1244943] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[1251539]:_ref(1*range(int(64),bounded,false))[1244943] "dead after last mention" "RVV" "temp"
    ref call_tmp[1251547]:_ref(1*range(int(64),bounded,false))[1244943] "dead after last mention" "maybe param" "temp"
    (1251549 'move' call_tmp[1251547](1251551 '.' this[1251537] ranges[1251113]))
    (1251554 'move' ret[1251539] call_tmp[1251547])
    (1251558 return ret[1251539])
  }
  function domain(1,int(64),false)[1251123].deinit[1696960](const in arg this[1696964]:domain(1,int(64),false)[1251123]) : void[4] "compiler generated" "destructor" "inline" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[1891842]
    ref _field_destructor_tmp_[1891840]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    (1891847 'move' _field_destructor_tmp_[1891840](1891844 '.' this[1696964] ranges[1251113]))
    (1891849 call deinit[1244925] _field_destructor_tmp_[1891840])
    val _parent_destructor_tmp_[1891852]:BaseRectangularDom(1,int(64),false)[1251088] "temp"
    (1891857 'move' _parent_destructor_tmp_[1891852](1891853 'cast' BaseRectangularDom(1,int(64),false)[1251088] this[1696964]))
    (1891859 call deinit[1831922] _parent_destructor_tmp_[1891852])
    (1696970 return _void[55])
  }
  function _new[1251376](const in arg dist[1251402]:DefaultDist[93992]) : domain(1,int(64),false)[1251123] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val _formal_type_tmp_[1879906]:int(64)[13] "temp"
    val _formal_type_tmp_[1879904]:domain(1,int(64),false)[1251123] "temp"
    val ret[1251435]:domain(1,int(64),false)[1251123] "dead after last mention" "RVV" "temp"
    val initTemp[1251378]:domain(1,int(64),false)[1251123] "dead after last mention" "temp"
    const-val call_tmp[1251442]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1251445 'move' call_tmp[1251442](1251454 'sizeof_bundle' domain(1,int(64),false)[1251123]))
    const-val cast_tmp[1251457]:c_void_ptr[149] "dead after last mention" "temp"
    (1251459 'move' cast_tmp[1251457](1251410 call chpl_here_alloc[187788] call_tmp[1251442] 43))
    (1251413 'move' initTemp[1251378](1251461 'cast' domain(1,int(64),false)[1251123] cast_tmp[1251457]))
    (1251415 'setcid' initTemp[1251378])
    (1251379 call init[1247380] initTemp[1251378] dist[1251402])
    val tmp[1251417]:domain(1,int(64),false)[1251123] "dead after last mention" "temp"
    (1251424 'move' tmp[1251417] initTemp[1251378])
    (1251440 'move' ret[1251435] tmp[1251417])
    (1251437 return ret[1251435])
  }
  type domain(1,int(64),false)[1251123] val super[1251108]:BaseRectangularDom(1,int(64),false)[1251088] "super class" val dist[1251110]:DefaultDist[93992] val ranges[1251113]:1*range(int(64),bounded,false)[1244885]
  function [domain(1,int(64),false)] locale[1256675].init[1255512](const in arg this[1255516]:[domain(1,int(64),false)] locale[1256675], const in arg dom[1255535]:domain(1,int(64),false)[1251123], const in arg data[1255549]:_ddata(locale)[1255583], const in arg externArr[1255555]:bool[10], const in arg _borrowed[1255561]:bool[10], const in arg externFreeFunc[1255565]:c_void_ptr[149]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[1879918]:int(64)[13] "temp"
    val _formal_type_tmp_[1879916]:locale[28] "temp"
    val super_tmp[1255604]:BaseRectangularArr(1,int(64),false,locale)[1256461] "dead after last mention" "temporary of super field" "temp"
    (1255606 'move' super_tmp[1255604](1255608 '.v' this[1255516] super[1256593]))
    const-val default_arg_pid[1256150]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    (1256154 'move' default_arg_pid[1256150](1256152 call init_default_pid[1256118]))
    const-val default_arg__decEltRefCounts[1256190]:bool[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    (1256194 'move' default_arg__decEltRefCounts[1256190](1256192 call init_default__decEltRefCounts[1256158]))
    (1255615 call init[1256012] super_tmp[1255604] default_arg_pid[1256150] default_arg__decEltRefCounts[1256190])
    val tmp[1255625]:BaseRectangularArr(1,int(64),false,locale)[1256461] "dead after last mention" "temp" "type variable"
    val call_tmp[1255644]:BaseRectangularArr(1,int(64),false,locale)[1256461] "dead at end of block" "maybe param" "temp"
    (1255646 'move' call_tmp[1255644](1255648 'cast' BaseRectangularArr(1,int(64),false,locale)[1256461] this[1255516]))
    val chpl__thisAsParent[1255651]:BaseRectangularArr(1,int(64),false,locale)[1256461] "dead at end of block" "insert auto destroy" "temp"
    (1255653 'move' chpl__thisAsParent[1255651](1256566 call chpl__initCopy[1256568] call_tmp[1255644]))
    (1255657 'setcid' chpl__thisAsParent[1255651])
    val tmp[1255660]:int(64)[13] "dead after last mention" "temp" "type variable"
    val call_tmp[1255662]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1255669]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1255693]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1255707]:domain(1,int(64),false)[1251123] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1255719]:domain(1,int(64),false)[1251123] "dead after last mention" "temp"
    (1255721 'move' tmp[1255719](1256701 call chpl__initCopy[1251478] dom[1255535]))
    (1255725 '.=' this[1255516] dom[1256602] tmp[1255719])
    val tmp[1255730]:1*int(64)[1256714] "dead after last mention" "temp"
    val call_tmp[1255739]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1255746]:1*int(64)[1256714] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1912462]:1*int(64)[1256714] "temp"
    (1264549 call _defaultOf[1264554] ret_tmp[1912462])
    (1912465 'move' tmp[1255730] ret_tmp[1912462])
    (1255757 '.=' this[1255516] off[1256612] tmp[1255730])
    val tmp[1255762]:1*int(64)[1256714] "dead after last mention" "temp"
    val call_tmp[1255771]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1255778]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1255785]:1*int(64)[1256714] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1912468]:1*int(64)[1256714] "temp"
    (1264606 call _defaultOf[1264554] ret_tmp[1912468])
    (1912471 'move' tmp[1255762] ret_tmp[1912468])
    (1255796 '.=' this[1255516] blk[1256618] tmp[1255762])
    val tmp[1255801]:1*int(64)[1256714] "dead after last mention" "temp"
    val call_tmp[1255810]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1255817]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1255824]:1*int(64)[1256714] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1912474]:1*int(64)[1256714] "temp"
    (1264612 call _defaultOf[1264554] ret_tmp[1912474])
    (1912477 'move' tmp[1255801] ret_tmp[1912474])
    (1255835 '.=' this[1255516] sizesPerDim[1256626] tmp[1255801])
    val tmp[1255840]:1*int(64)[1256714] "dead after last mention" "temp"
    val call_tmp[1255849]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1255856]:1*int(64)[1256714] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1912480]:1*int(64)[1256714] "temp"
    (1264618 call _defaultOf[1264554] ret_tmp[1912480])
    (1912483 'move' tmp[1255840] ret_tmp[1912480])
    (1255867 '.=' this[1255516] str[1256634] tmp[1255840])
    val tmp[1255872]:int(64)[13] "dead after last mention" "temp"
    val call_tmp[1255874]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1255881]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1264625 'move' tmp[1255872] 0)
    (1255891 '.=' this[1255516] factoredOffs[1256640] tmp[1255872])
    val call_tmp[1255896]:locale[28] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1255903]:_ddata(locale)[1255583] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1255910]:_ddata(locale)[1255583] "dead after last mention" "temp"
    (1255912 'move' tmp[1255910](1256826 call chpl__initCopy[1256828] data[1255549]))
    (1255916 '.=' this[1255516] data[1256645] tmp[1255910])
    val tmp[1255921]:_ddata(locale)[1255583] "dead after last mention" "temp"
    val call_tmp[1255923]:locale[28] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1255930]:_ddata(locale)[1255583] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1264630 'move' tmp[1255921](1264628 'cast' _ddata(locale)[1255583] nil[44]))
    (1255940 '.=' this[1255516] shiftedData[1256651] tmp[1255921])
    val tmp[1255945]:c_void_ptr[149] "dead after last mention" "temp"
    (1255947 'move' tmp[1255945](1256859 call chpl__initCopy[945431] externFreeFunc[1255565]))
    (1255951 '.=' this[1255516] externFreeFunc[1256656] tmp[1255945])
    val tmp[1255956]:bool[10] "dead after last mention" "temp"
    (1255958 'move' tmp[1255956] externArr[1255555])
    (1255962 '.=' this[1255516] externArr[1256659] tmp[1255956])
    val tmp[1255967]:bool[10] "dead after last mention" "temp"
    (1255969 'move' tmp[1255967] _borrowed[1255561])
    (1255973 '.=' this[1255516] _borrowed[1256663] tmp[1255967])
    val tmp[1255978]:bool[10] "dead after last mention" "temp"
    (1255980 'move' tmp[1255978] 0)
    (1255984 '.=' this[1255516] callPostAlloc[1256667] tmp[1255978])
    val tmp[1255989]:bool[10] "dead after last mention" "temp"
    (1255991 'move' tmp[1255989] 1)
    (1255995 '.=' this[1255516] deinitElts[1256671] tmp[1255989])
    (1256000 'setcid' this[1255516])
    (1256007 call setupFieldsAndAllocate[1256867] this[1255516])
    (1256009 return _void[55])
  }
  function [domain(1,int(64),false)] unmanaged localesSignal?[1318401].init[1317491](const in arg this[1317495]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401], const in arg dom[1317514]:domain(1,int(64),false)[1251123], const in arg data[1317528]:_ddata(unmanaged localesSignal?)[1317562], const in arg externArr[1317534]:bool[10], const in arg _borrowed[1317540]:bool[10], const in arg externFreeFunc[1317544]:c_void_ptr[149]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[1879979]:int(64)[13] "temp"
    val _formal_type_tmp_[1879977]:localesSignal[92278] "temp"
    val super_tmp[1317583]:BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318187] "dead after last mention" "temporary of super field" "temp"
    (1317585 'move' super_tmp[1317583](1317587 '.v' this[1317495] super[1318319]))
    const-val default_arg_pid[1318129]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    (1318133 'move' default_arg_pid[1318129](1318131 call init_default_pid[1318097]))
    const-val default_arg__decEltRefCounts[1318169]:bool[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    (1318173 'move' default_arg__decEltRefCounts[1318169](1318171 call init_default__decEltRefCounts[1318137]))
    (1317594 call init[1317991] super_tmp[1317583] default_arg_pid[1318129] default_arg__decEltRefCounts[1318169])
    val tmp[1317604]:BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318187] "dead after last mention" "temp" "type variable"
    val call_tmp[1317623]:BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318187] "dead at end of block" "maybe param" "temp"
    (1317625 'move' call_tmp[1317623](1317627 'cast' BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318187] this[1317495]))
    val chpl__thisAsParent[1317630]:BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318187] "dead at end of block" "insert auto destroy" "temp"
    (1317632 'move' chpl__thisAsParent[1317630](1318292 call chpl__initCopy[1318294] call_tmp[1317623]))
    (1317636 'setcid' chpl__thisAsParent[1317630])
    val tmp[1317639]:int(64)[13] "dead after last mention" "temp" "type variable"
    val call_tmp[1317641]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1317648]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1317672]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1317686]:domain(1,int(64),false)[1251123] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1317698]:domain(1,int(64),false)[1251123] "dead after last mention" "temp"
    (1317700 'move' tmp[1317698](1318427 call chpl__initCopy[1251478] dom[1317514]))
    (1317704 '.=' this[1317495] dom[1318328] tmp[1317698])
    val tmp[1317709]:1*int(64)[1256714] "dead after last mention" "temp"
    val call_tmp[1317718]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1317725]:1*int(64)[1256714] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1912492]:1*int(64)[1256714] "temp"
    (1324009 call _defaultOf[1264554] ret_tmp[1912492])
    (1912495 'move' tmp[1317709] ret_tmp[1912492])
    (1317736 '.=' this[1317495] off[1318338] tmp[1317709])
    val tmp[1317741]:1*int(64)[1256714] "dead after last mention" "temp"
    val call_tmp[1317750]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1317757]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1317764]:1*int(64)[1256714] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1912498]:1*int(64)[1256714] "temp"
    (1324015 call _defaultOf[1264554] ret_tmp[1912498])
    (1912501 'move' tmp[1317741] ret_tmp[1912498])
    (1317775 '.=' this[1317495] blk[1318344] tmp[1317741])
    val tmp[1317780]:1*int(64)[1256714] "dead after last mention" "temp"
    val call_tmp[1317789]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1317796]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1317803]:1*int(64)[1256714] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1912504]:1*int(64)[1256714] "temp"
    (1324021 call _defaultOf[1264554] ret_tmp[1912504])
    (1912507 'move' tmp[1317780] ret_tmp[1912504])
    (1317814 '.=' this[1317495] sizesPerDim[1318352] tmp[1317780])
    val tmp[1317819]:1*int(64)[1256714] "dead after last mention" "temp"
    val call_tmp[1317828]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1317835]:1*int(64)[1256714] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1912510]:1*int(64)[1256714] "temp"
    (1324027 call _defaultOf[1264554] ret_tmp[1912510])
    (1912513 'move' tmp[1317819] ret_tmp[1912510])
    (1317846 '.=' this[1317495] str[1318360] tmp[1317819])
    val tmp[1317851]:int(64)[13] "dead after last mention" "temp"
    val call_tmp[1317853]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1317860]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1324034 'move' tmp[1317851] 0)
    (1317870 '.=' this[1317495] factoredOffs[1318366] tmp[1317851])
    val call_tmp[1317875]:localesSignal[92278] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1317882]:_ddata(unmanaged localesSignal?)[1317562] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1317889]:_ddata(unmanaged localesSignal?)[1317562] "dead after last mention" "temp"
    (1317891 'move' tmp[1317889](1318473 call chpl__initCopy[1318475] data[1317528]))
    (1317895 '.=' this[1317495] data[1318371] tmp[1317889])
    val tmp[1317900]:_ddata(unmanaged localesSignal?)[1317562] "dead after last mention" "temp"
    val call_tmp[1317902]:localesSignal[92278] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1317909]:_ddata(unmanaged localesSignal?)[1317562] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1324039 'move' tmp[1317900](1324037 'cast' _ddata(unmanaged localesSignal?)[1317562] nil[44]))
    (1317919 '.=' this[1317495] shiftedData[1318377] tmp[1317900])
    val tmp[1317924]:c_void_ptr[149] "dead after last mention" "temp"
    (1317926 'move' tmp[1317924](1318506 call chpl__initCopy[945431] externFreeFunc[1317544]))
    (1317930 '.=' this[1317495] externFreeFunc[1318382] tmp[1317924])
    val tmp[1317935]:bool[10] "dead after last mention" "temp"
    (1317937 'move' tmp[1317935] externArr[1317534])
    (1317941 '.=' this[1317495] externArr[1318385] tmp[1317935])
    val tmp[1317946]:bool[10] "dead after last mention" "temp"
    (1317948 'move' tmp[1317946] _borrowed[1317540])
    (1317952 '.=' this[1317495] _borrowed[1318389] tmp[1317946])
    val tmp[1317957]:bool[10] "dead after last mention" "temp"
    (1317959 'move' tmp[1317957] 0)
    (1317963 '.=' this[1317495] callPostAlloc[1318393] tmp[1317957])
    val tmp[1317968]:bool[10] "dead after last mention" "temp"
    (1317970 'move' tmp[1317968] 1)
    (1317974 '.=' this[1317495] deinitElts[1318397] tmp[1317968])
    (1317979 'setcid' this[1317495])
    (1317986 call setupFieldsAndAllocate[1318514] this[1317495])
    (1317988 return _void[55])
  }
  function [domain(1,int(64),false)] real(64)[1358944].init[1358034](const in arg this[1358038]:[domain(1,int(64),false)] real(64)[1358944], const in arg dom[1358057]:domain(1,int(64),false)[1251123], const in arg data[1358071]:_ddata(real(64))[1358105], const in arg externArr[1358077]:bool[10], const in arg _borrowed[1358083]:bool[10], const in arg externFreeFunc[1358087]:c_void_ptr[149]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[1880066]:int(64)[13] "temp"
    val _formal_type_tmp_[1880064]:real(64)[16] "temp"
    val super_tmp[1358126]:BaseRectangularArr(1,int(64),false,real(64))[1358730] "dead after last mention" "temporary of super field" "temp"
    (1358128 'move' super_tmp[1358126](1358130 '.v' this[1358038] super[1358862]))
    const-val default_arg_pid[1358672]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    (1358676 'move' default_arg_pid[1358672](1358674 call init_default_pid[1358640]))
    const-val default_arg__decEltRefCounts[1358712]:bool[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    (1358716 'move' default_arg__decEltRefCounts[1358712](1358714 call init_default__decEltRefCounts[1358680]))
    (1358137 call init[1358534] super_tmp[1358126] default_arg_pid[1358672] default_arg__decEltRefCounts[1358712])
    val tmp[1358147]:BaseRectangularArr(1,int(64),false,real(64))[1358730] "dead after last mention" "temp" "type variable"
    val call_tmp[1358166]:BaseRectangularArr(1,int(64),false,real(64))[1358730] "dead at end of block" "maybe param" "temp"
    (1358168 'move' call_tmp[1358166](1358170 'cast' BaseRectangularArr(1,int(64),false,real(64))[1358730] this[1358038]))
    val chpl__thisAsParent[1358173]:BaseRectangularArr(1,int(64),false,real(64))[1358730] "dead at end of block" "insert auto destroy" "temp"
    (1358175 'move' chpl__thisAsParent[1358173](1358835 call chpl__initCopy[1358837] call_tmp[1358166]))
    (1358179 'setcid' chpl__thisAsParent[1358173])
    val tmp[1358182]:int(64)[13] "dead after last mention" "temp" "type variable"
    val call_tmp[1358184]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1358191]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1358215]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1358229]:domain(1,int(64),false)[1251123] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1358241]:domain(1,int(64),false)[1251123] "dead after last mention" "temp"
    (1358243 'move' tmp[1358241](1358970 call chpl__initCopy[1251478] dom[1358057]))
    (1358247 '.=' this[1358038] dom[1358871] tmp[1358241])
    val tmp[1358252]:1*int(64)[1256714] "dead after last mention" "temp"
    val call_tmp[1358261]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1358268]:1*int(64)[1256714] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1912516]:1*int(64)[1256714] "temp"
    (1364743 call _defaultOf[1264554] ret_tmp[1912516])
    (1912519 'move' tmp[1358252] ret_tmp[1912516])
    (1358279 '.=' this[1358038] off[1358881] tmp[1358252])
    val tmp[1358284]:1*int(64)[1256714] "dead after last mention" "temp"
    val call_tmp[1358293]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1358300]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1358307]:1*int(64)[1256714] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1912522]:1*int(64)[1256714] "temp"
    (1364749 call _defaultOf[1264554] ret_tmp[1912522])
    (1912525 'move' tmp[1358284] ret_tmp[1912522])
    (1358318 '.=' this[1358038] blk[1358887] tmp[1358284])
    val tmp[1358323]:1*int(64)[1256714] "dead after last mention" "temp"
    val call_tmp[1358332]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1358339]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1358346]:1*int(64)[1256714] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1912528]:1*int(64)[1256714] "temp"
    (1364755 call _defaultOf[1264554] ret_tmp[1912528])
    (1912531 'move' tmp[1358323] ret_tmp[1912528])
    (1358357 '.=' this[1358038] sizesPerDim[1358895] tmp[1358323])
    val tmp[1358362]:1*int(64)[1256714] "dead after last mention" "temp"
    val call_tmp[1358371]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1358378]:1*int(64)[1256714] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1912534]:1*int(64)[1256714] "temp"
    (1364761 call _defaultOf[1264554] ret_tmp[1912534])
    (1912537 'move' tmp[1358362] ret_tmp[1912534])
    (1358389 '.=' this[1358038] str[1358903] tmp[1358362])
    val tmp[1358394]:int(64)[13] "dead after last mention" "temp"
    val call_tmp[1358396]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1358403]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1364768 'move' tmp[1358394] 0)
    (1358413 '.=' this[1358038] factoredOffs[1358909] tmp[1358394])
    val call_tmp[1358418]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1358425]:_ddata(real(64))[1358105] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1358432]:_ddata(real(64))[1358105] "dead after last mention" "temp"
    (1358434 'move' tmp[1358432](1359016 call chpl__initCopy[1359018] data[1358071]))
    (1358438 '.=' this[1358038] data[1358914] tmp[1358432])
    val tmp[1358443]:_ddata(real(64))[1358105] "dead after last mention" "temp"
    val call_tmp[1358445]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1358452]:_ddata(real(64))[1358105] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1364773 'move' tmp[1358443](1364771 'cast' _ddata(real(64))[1358105] nil[44]))
    (1358462 '.=' this[1358038] shiftedData[1358920] tmp[1358443])
    val tmp[1358467]:c_void_ptr[149] "dead after last mention" "temp"
    (1358469 'move' tmp[1358467](1359049 call chpl__initCopy[945431] externFreeFunc[1358087]))
    (1358473 '.=' this[1358038] externFreeFunc[1358925] tmp[1358467])
    val tmp[1358478]:bool[10] "dead after last mention" "temp"
    (1358480 'move' tmp[1358478] externArr[1358077])
    (1358484 '.=' this[1358038] externArr[1358928] tmp[1358478])
    val tmp[1358489]:bool[10] "dead after last mention" "temp"
    (1358491 'move' tmp[1358489] _borrowed[1358083])
    (1358495 '.=' this[1358038] _borrowed[1358932] tmp[1358489])
    val tmp[1358500]:bool[10] "dead after last mention" "temp"
    (1358502 'move' tmp[1358500] 0)
    (1358506 '.=' this[1358038] callPostAlloc[1358936] tmp[1358500])
    val tmp[1358511]:bool[10] "dead after last mention" "temp"
    (1358513 'move' tmp[1358511] 1)
    (1358517 '.=' this[1358038] deinitElts[1358940] tmp[1358511])
    (1358522 'setcid' this[1358038])
    (1358529 call setupFieldsAndAllocate[1359057] this[1358038])
    (1358531 return _void[55])
  }
  function [domain(1,int(64),false)] int(64)[1368867].init[1367957](const in arg this[1367961]:[domain(1,int(64),false)] int(64)[1368867], const in arg dom[1367980]:domain(1,int(64),false)[1251123], const in arg data[1367994]:_ddata(int(64))[1368028], const in arg externArr[1368000]:bool[10], const in arg _borrowed[1368006]:bool[10], const in arg externFreeFunc[1368010]:c_void_ptr[149]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[1880102]:int(64)[13] "temp"
    val _formal_type_tmp_[1880100]:int(64)[13] "temp"
    val super_tmp[1368049]:BaseRectangularArr(1,int(64),false,int(64))[1368653] "dead after last mention" "temporary of super field" "temp"
    (1368051 'move' super_tmp[1368049](1368053 '.v' this[1367961] super[1368785]))
    const-val default_arg_pid[1368595]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    (1368599 'move' default_arg_pid[1368595](1368597 call init_default_pid[1368563]))
    const-val default_arg__decEltRefCounts[1368635]:bool[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    (1368639 'move' default_arg__decEltRefCounts[1368635](1368637 call init_default__decEltRefCounts[1368603]))
    (1368060 call init[1368457] super_tmp[1368049] default_arg_pid[1368595] default_arg__decEltRefCounts[1368635])
    val tmp[1368070]:BaseRectangularArr(1,int(64),false,int(64))[1368653] "dead after last mention" "temp" "type variable"
    val call_tmp[1368089]:BaseRectangularArr(1,int(64),false,int(64))[1368653] "dead at end of block" "maybe param" "temp"
    (1368091 'move' call_tmp[1368089](1368093 'cast' BaseRectangularArr(1,int(64),false,int(64))[1368653] this[1367961]))
    val chpl__thisAsParent[1368096]:BaseRectangularArr(1,int(64),false,int(64))[1368653] "dead at end of block" "insert auto destroy" "temp"
    (1368098 'move' chpl__thisAsParent[1368096](1368758 call chpl__initCopy[1368760] call_tmp[1368089]))
    (1368102 'setcid' chpl__thisAsParent[1368096])
    val tmp[1368105]:int(64)[13] "dead after last mention" "temp" "type variable"
    val call_tmp[1368107]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1368114]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1368138]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1368152]:domain(1,int(64),false)[1251123] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1368164]:domain(1,int(64),false)[1251123] "dead after last mention" "temp"
    (1368166 'move' tmp[1368164](1368893 call chpl__initCopy[1251478] dom[1367980]))
    (1368170 '.=' this[1367961] dom[1368794] tmp[1368164])
    val tmp[1368175]:1*int(64)[1256714] "dead after last mention" "temp"
    val call_tmp[1368184]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1368191]:1*int(64)[1256714] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1912540]:1*int(64)[1256714] "temp"
    (1373218 call _defaultOf[1264554] ret_tmp[1912540])
    (1912543 'move' tmp[1368175] ret_tmp[1912540])
    (1368202 '.=' this[1367961] off[1368804] tmp[1368175])
    val tmp[1368207]:1*int(64)[1256714] "dead after last mention" "temp"
    val call_tmp[1368216]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1368223]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1368230]:1*int(64)[1256714] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1912546]:1*int(64)[1256714] "temp"
    (1373224 call _defaultOf[1264554] ret_tmp[1912546])
    (1912549 'move' tmp[1368207] ret_tmp[1912546])
    (1368241 '.=' this[1367961] blk[1368810] tmp[1368207])
    val tmp[1368246]:1*int(64)[1256714] "dead after last mention" "temp"
    val call_tmp[1368255]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1368262]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1368269]:1*int(64)[1256714] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1912552]:1*int(64)[1256714] "temp"
    (1373230 call _defaultOf[1264554] ret_tmp[1912552])
    (1912555 'move' tmp[1368246] ret_tmp[1912552])
    (1368280 '.=' this[1367961] sizesPerDim[1368818] tmp[1368246])
    val tmp[1368285]:1*int(64)[1256714] "dead after last mention" "temp"
    val call_tmp[1368294]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1368301]:1*int(64)[1256714] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1912558]:1*int(64)[1256714] "temp"
    (1373236 call _defaultOf[1264554] ret_tmp[1912558])
    (1912561 'move' tmp[1368285] ret_tmp[1912558])
    (1368312 '.=' this[1367961] str[1368826] tmp[1368285])
    val tmp[1368317]:int(64)[13] "dead after last mention" "temp"
    val call_tmp[1368319]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1368326]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1373243 'move' tmp[1368317] 0)
    (1368336 '.=' this[1367961] factoredOffs[1368832] tmp[1368317])
    val call_tmp[1368341]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1368348]:_ddata(int(64))[1368028] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1368355]:_ddata(int(64))[1368028] "dead after last mention" "temp"
    (1368357 'move' tmp[1368355](1368939 call chpl__initCopy[1368941] data[1367994]))
    (1368361 '.=' this[1367961] data[1368837] tmp[1368355])
    val tmp[1368366]:_ddata(int(64))[1368028] "dead after last mention" "temp"
    val call_tmp[1368368]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1368375]:_ddata(int(64))[1368028] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1373248 'move' tmp[1368366](1373246 'cast' _ddata(int(64))[1368028] nil[44]))
    (1368385 '.=' this[1367961] shiftedData[1368843] tmp[1368366])
    val tmp[1368390]:c_void_ptr[149] "dead after last mention" "temp"
    (1368392 'move' tmp[1368390](1368972 call chpl__initCopy[945431] externFreeFunc[1368010]))
    (1368396 '.=' this[1367961] externFreeFunc[1368848] tmp[1368390])
    val tmp[1368401]:bool[10] "dead after last mention" "temp"
    (1368403 'move' tmp[1368401] externArr[1368000])
    (1368407 '.=' this[1367961] externArr[1368851] tmp[1368401])
    val tmp[1368412]:bool[10] "dead after last mention" "temp"
    (1368414 'move' tmp[1368412] _borrowed[1368006])
    (1368418 '.=' this[1367961] _borrowed[1368855] tmp[1368412])
    val tmp[1368423]:bool[10] "dead after last mention" "temp"
    (1368425 'move' tmp[1368423] 0)
    (1368429 '.=' this[1367961] callPostAlloc[1368859] tmp[1368423])
    val tmp[1368434]:bool[10] "dead after last mention" "temp"
    (1368436 'move' tmp[1368434] 1)
    (1368440 '.=' this[1367961] deinitElts[1368863] tmp[1368434])
    (1368445 'setcid' this[1367961])
    (1368452 call setupFieldsAndAllocate[1368980] this[1367961])
    (1368454 return _void[55])
  }
  function [domain(1,int(64),false)] range(int(64),bounded,false)[1409224].init[1408329](const in arg this[1408333]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224], const in arg dom[1408352]:domain(1,int(64),false)[1251123], const in arg data[1408366]:_ddata(range(int(64),bounded,false))[1406042], const in arg externArr[1408372]:bool[10], const in arg _borrowed[1408378]:bool[10], const in arg externFreeFunc[1408382]:c_void_ptr[149]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[1880160]:int(64)[13] "temp"
    val _formal_type_tmp_[1880158]:range(int(64),bounded,false)[1027003] "temp"
    val super_tmp[1408406]:BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1409010] "dead after last mention" "temporary of super field" "temp"
    (1408408 'move' super_tmp[1408406](1408410 '.v' this[1408333] super[1409142]))
    const-val default_arg_pid[1408952]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    (1408956 'move' default_arg_pid[1408952](1408954 call init_default_pid[1408920]))
    const-val default_arg__decEltRefCounts[1408992]:bool[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    (1408996 'move' default_arg__decEltRefCounts[1408992](1408994 call init_default__decEltRefCounts[1408960]))
    (1408417 call init[1408814] super_tmp[1408406] default_arg_pid[1408952] default_arg__decEltRefCounts[1408992])
    val tmp[1408427]:BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1409010] "dead after last mention" "temp" "type variable"
    val call_tmp[1408446]:BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1409010] "dead at end of block" "maybe param" "temp"
    (1408448 'move' call_tmp[1408446](1408450 'cast' BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1409010] this[1408333]))
    val chpl__thisAsParent[1408453]:BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1409010] "dead at end of block" "insert auto destroy" "temp"
    (1408455 'move' chpl__thisAsParent[1408453](1409115 call chpl__initCopy[1409117] call_tmp[1408446]))
    (1408459 'setcid' chpl__thisAsParent[1408453])
    val tmp[1408462]:int(64)[13] "dead after last mention" "temp" "type variable"
    val call_tmp[1408464]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1408471]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1408495]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1408509]:domain(1,int(64),false)[1251123] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1408521]:domain(1,int(64),false)[1251123] "dead after last mention" "temp"
    (1408523 'move' tmp[1408521](1409250 call chpl__initCopy[1251478] dom[1408352]))
    (1408527 '.=' this[1408333] dom[1409151] tmp[1408521])
    val tmp[1408532]:1*int(64)[1256714] "dead after last mention" "temp"
    val call_tmp[1408541]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1408548]:1*int(64)[1256714] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1912564]:1*int(64)[1256714] "temp"
    (1414706 call _defaultOf[1264554] ret_tmp[1912564])
    (1912567 'move' tmp[1408532] ret_tmp[1912564])
    (1408559 '.=' this[1408333] off[1409161] tmp[1408532])
    val tmp[1408564]:1*int(64)[1256714] "dead after last mention" "temp"
    val call_tmp[1408573]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1408580]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1408587]:1*int(64)[1256714] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1912570]:1*int(64)[1256714] "temp"
    (1414712 call _defaultOf[1264554] ret_tmp[1912570])
    (1912573 'move' tmp[1408564] ret_tmp[1912570])
    (1408598 '.=' this[1408333] blk[1409167] tmp[1408564])
    val tmp[1408603]:1*int(64)[1256714] "dead after last mention" "temp"
    val call_tmp[1408612]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1408619]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1408626]:1*int(64)[1256714] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1912576]:1*int(64)[1256714] "temp"
    (1414718 call _defaultOf[1264554] ret_tmp[1912576])
    (1912579 'move' tmp[1408603] ret_tmp[1912576])
    (1408637 '.=' this[1408333] sizesPerDim[1409175] tmp[1408603])
    val tmp[1408642]:1*int(64)[1256714] "dead after last mention" "temp"
    val call_tmp[1408651]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1408658]:1*int(64)[1256714] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1912582]:1*int(64)[1256714] "temp"
    (1414724 call _defaultOf[1264554] ret_tmp[1912582])
    (1912585 'move' tmp[1408642] ret_tmp[1912582])
    (1408669 '.=' this[1408333] str[1409183] tmp[1408642])
    val tmp[1408674]:int(64)[13] "dead after last mention" "temp"
    val call_tmp[1408676]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1408683]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1414731 'move' tmp[1408674] 0)
    (1408693 '.=' this[1408333] factoredOffs[1409189] tmp[1408674])
    val call_tmp[1408698]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1408705]:_ddata(range(int(64),bounded,false))[1406042] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1408712]:_ddata(range(int(64),bounded,false))[1406042] "dead after last mention" "temp"
    (1408714 'move' tmp[1408712](1409296 call chpl__initCopy[1406560] data[1408366]))
    (1408718 '.=' this[1408333] data[1409194] tmp[1408712])
    val tmp[1408723]:_ddata(range(int(64),bounded,false))[1406042] "dead after last mention" "temp"
    val call_tmp[1408725]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1408732]:_ddata(range(int(64),bounded,false))[1406042] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1414736 'move' tmp[1408723](1414734 'cast' _ddata(range(int(64),bounded,false))[1406042] nil[44]))
    (1408742 '.=' this[1408333] shiftedData[1409200] tmp[1408723])
    val tmp[1408747]:c_void_ptr[149] "dead after last mention" "temp"
    (1408749 'move' tmp[1408747](1409311 call chpl__initCopy[945431] externFreeFunc[1408382]))
    (1408753 '.=' this[1408333] externFreeFunc[1409205] tmp[1408747])
    val tmp[1408758]:bool[10] "dead after last mention" "temp"
    (1408760 'move' tmp[1408758] externArr[1408372])
    (1408764 '.=' this[1408333] externArr[1409208] tmp[1408758])
    val tmp[1408769]:bool[10] "dead after last mention" "temp"
    (1408771 'move' tmp[1408769] _borrowed[1408378])
    (1408775 '.=' this[1408333] _borrowed[1409212] tmp[1408769])
    val tmp[1408780]:bool[10] "dead after last mention" "temp"
    (1408782 'move' tmp[1408780] 0)
    (1408786 '.=' this[1408333] callPostAlloc[1409216] tmp[1408780])
    val tmp[1408791]:bool[10] "dead after last mention" "temp"
    (1408793 'move' tmp[1408791] 1)
    (1408797 '.=' this[1408333] deinitElts[1409220] tmp[1408791])
    (1408802 'setcid' this[1408333])
    (1408809 call setupFieldsAndAllocate[1409319] this[1408333])
    (1408811 return _void[55])
  }
  function [domain(1,int(64),false)] range(int(64),bounded,false)[1409224].init[1419249](const in arg this[1419253]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224], const in arg dom[1419272]:domain(1,int(64),false)[1251123], const in arg data[1419286]:_ddata(range(int(64),bounded,false))[1406042], const in arg externArr[1419292]:bool[10], const in arg _borrowed[1419298]:bool[10], const in arg externFreeFunc[1419302]:c_void_ptr[149]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[1880197]:int(64)[13] "temp"
    val _formal_type_tmp_[1880195]:range(int(64),bounded,false)[1027003] "temp"
    val super_tmp[1419326]:BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1409010] "dead after last mention" "temporary of super field" "temp"
    (1419328 'move' super_tmp[1419326](1419330 '.v' this[1419253] super[1409142]))
    const-val default_arg_pid[1419743]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    (1419747 'move' default_arg_pid[1419743](1419745 call init_default_pid[1408920]))
    const-val default_arg__decEltRefCounts[1419751]:bool[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    (1419755 'move' default_arg__decEltRefCounts[1419751](1419753 call init_default__decEltRefCounts[1408960]))
    (1419337 call init[1408814] super_tmp[1419326] default_arg_pid[1419743] default_arg__decEltRefCounts[1419751])
    val tmp[1419347]:BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1409010] "dead after last mention" "temp" "type variable"
    val call_tmp[1419366]:BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1409010] "dead at end of block" "maybe param" "temp"
    (1419368 'move' call_tmp[1419366](1419370 'cast' BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1409010] this[1419253]))
    val chpl__thisAsParent[1419373]:BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1409010] "dead at end of block" "insert auto destroy" "temp"
    (1419375 'move' chpl__thisAsParent[1419373](1419760 call chpl__initCopy[1409117] call_tmp[1419366]))
    (1419379 'setcid' chpl__thisAsParent[1419373])
    val tmp[1419382]:int(64)[13] "dead after last mention" "temp" "type variable"
    val call_tmp[1419384]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1419391]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1419415]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1419429]:domain(1,int(64),false)[1251123] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1419441]:domain(1,int(64),false)[1251123] "dead after last mention" "temp"
    (1419443 'move' tmp[1419441](1419782 call chpl__initCopy[1251478] dom[1419272]))
    (1419447 '.=' this[1419253] dom[1409151] tmp[1419441])
    val tmp[1419452]:1*int(64)[1256714] "dead after last mention" "temp"
    val call_tmp[1419461]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1419468]:1*int(64)[1256714] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1912588]:1*int(64)[1256714] "temp"
    (1421292 call _defaultOf[1264554] ret_tmp[1912588])
    (1912591 'move' tmp[1419452] ret_tmp[1912588])
    (1419479 '.=' this[1419253] off[1409161] tmp[1419452])
    val tmp[1419484]:1*int(64)[1256714] "dead after last mention" "temp"
    val call_tmp[1419493]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1419500]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1419507]:1*int(64)[1256714] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1912594]:1*int(64)[1256714] "temp"
    (1421298 call _defaultOf[1264554] ret_tmp[1912594])
    (1912597 'move' tmp[1419484] ret_tmp[1912594])
    (1419518 '.=' this[1419253] blk[1409167] tmp[1419484])
    val tmp[1419523]:1*int(64)[1256714] "dead after last mention" "temp"
    val call_tmp[1419532]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1419539]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1419546]:1*int(64)[1256714] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1912600]:1*int(64)[1256714] "temp"
    (1421304 call _defaultOf[1264554] ret_tmp[1912600])
    (1912603 'move' tmp[1419523] ret_tmp[1912600])
    (1419557 '.=' this[1419253] sizesPerDim[1409175] tmp[1419523])
    val tmp[1419562]:1*int(64)[1256714] "dead after last mention" "temp"
    val call_tmp[1419571]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1419578]:1*int(64)[1256714] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1912606]:1*int(64)[1256714] "temp"
    (1421310 call _defaultOf[1264554] ret_tmp[1912606])
    (1912609 'move' tmp[1419562] ret_tmp[1912606])
    (1419589 '.=' this[1419253] str[1409183] tmp[1419562])
    val tmp[1419594]:int(64)[13] "dead after last mention" "temp"
    val call_tmp[1419596]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1419603]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1421317 'move' tmp[1419594] 0)
    (1419613 '.=' this[1419253] factoredOffs[1409189] tmp[1419594])
    val call_tmp[1419618]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1419625]:_ddata(range(int(64),bounded,false))[1406042] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1419632]:_ddata(range(int(64),bounded,false))[1406042] "dead after last mention" "temp"
    (1419634 'move' tmp[1419632](1419828 call chpl__initCopy[1406560] data[1419286]))
    (1419638 '.=' this[1419253] data[1409194] tmp[1419632])
    val tmp[1419643]:_ddata(range(int(64),bounded,false))[1406042] "dead after last mention" "temp"
    val call_tmp[1419645]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1419652]:_ddata(range(int(64),bounded,false))[1406042] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1421322 'move' tmp[1419643](1421320 'cast' _ddata(range(int(64),bounded,false))[1406042] nil[44]))
    (1419662 '.=' this[1419253] shiftedData[1409200] tmp[1419643])
    val tmp[1419667]:c_void_ptr[149] "dead after last mention" "temp"
    (1419669 'move' tmp[1419667](1419843 call chpl__initCopy[945431] externFreeFunc[1419302]))
    (1419673 '.=' this[1419253] externFreeFunc[1409205] tmp[1419667])
    val tmp[1419678]:bool[10] "dead after last mention" "temp"
    (1419680 'move' tmp[1419678] externArr[1419292])
    (1419684 '.=' this[1419253] externArr[1409208] tmp[1419678])
    val tmp[1419689]:bool[10] "dead after last mention" "temp"
    (1419691 'move' tmp[1419689] _borrowed[1419298])
    (1419695 '.=' this[1419253] _borrowed[1409212] tmp[1419689])
    val tmp[1419700]:bool[10] "dead after last mention" "temp"
    (1419702 'move' tmp[1419700] 0)
    (1419706 '.=' this[1419253] callPostAlloc[1409216] tmp[1419700])
    val tmp[1419711]:bool[10] "dead after last mention" "temp"
    (1419713 'move' tmp[1419711] 0)
    (1419717 '.=' this[1419253] deinitElts[1409220] tmp[1419711])
    (1419722 'setcid' this[1419253])
    (1419729 call setupFieldsAndAllocate[1419851] this[1419253])
    (1419731 return _void[55])
  }
  function [domain(1,int(64),false)] uint(64)[1450261].init[1449351](const in arg this[1449355]:[domain(1,int(64),false)] uint(64)[1450261], const in arg dom[1449374]:domain(1,int(64),false)[1251123], const in arg data[1449388]:_ddata(uint(64))[1449422], const in arg externArr[1449394]:bool[10], const in arg _borrowed[1449400]:bool[10], const in arg externFreeFunc[1449404]:c_void_ptr[149]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[1880215]:int(64)[13] "temp"
    val _formal_type_tmp_[1880213]:uint(64)[115] "temp"
    val super_tmp[1449443]:BaseRectangularArr(1,int(64),false,uint(64))[1450047] "dead after last mention" "temporary of super field" "temp"
    (1449445 'move' super_tmp[1449443](1449447 '.v' this[1449355] super[1450179]))
    const-val default_arg_pid[1449989]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    (1449993 'move' default_arg_pid[1449989](1449991 call init_default_pid[1449957]))
    const-val default_arg__decEltRefCounts[1450029]:bool[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    (1450033 'move' default_arg__decEltRefCounts[1450029](1450031 call init_default__decEltRefCounts[1449997]))
    (1449454 call init[1449851] super_tmp[1449443] default_arg_pid[1449989] default_arg__decEltRefCounts[1450029])
    val tmp[1449464]:BaseRectangularArr(1,int(64),false,uint(64))[1450047] "dead after last mention" "temp" "type variable"
    val call_tmp[1449483]:BaseRectangularArr(1,int(64),false,uint(64))[1450047] "dead at end of block" "maybe param" "temp"
    (1449485 'move' call_tmp[1449483](1449487 'cast' BaseRectangularArr(1,int(64),false,uint(64))[1450047] this[1449355]))
    val chpl__thisAsParent[1449490]:BaseRectangularArr(1,int(64),false,uint(64))[1450047] "dead at end of block" "insert auto destroy" "temp"
    (1449492 'move' chpl__thisAsParent[1449490](1450152 call chpl__initCopy[1450154] call_tmp[1449483]))
    (1449496 'setcid' chpl__thisAsParent[1449490])
    val tmp[1449499]:int(64)[13] "dead after last mention" "temp" "type variable"
    val call_tmp[1449501]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1449508]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1449532]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1449546]:domain(1,int(64),false)[1251123] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1449558]:domain(1,int(64),false)[1251123] "dead after last mention" "temp"
    (1449560 'move' tmp[1449558](1450287 call chpl__initCopy[1251478] dom[1449374]))
    (1449564 '.=' this[1449355] dom[1450188] tmp[1449558])
    val tmp[1449569]:1*int(64)[1256714] "dead after last mention" "temp"
    val call_tmp[1449578]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1449585]:1*int(64)[1256714] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1912636]:1*int(64)[1256714] "temp"
    (1454861 call _defaultOf[1264554] ret_tmp[1912636])
    (1912639 'move' tmp[1449569] ret_tmp[1912636])
    (1449596 '.=' this[1449355] off[1450198] tmp[1449569])
    val tmp[1449601]:1*int(64)[1256714] "dead after last mention" "temp"
    val call_tmp[1449610]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1449617]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1449624]:1*int(64)[1256714] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1912642]:1*int(64)[1256714] "temp"
    (1454867 call _defaultOf[1264554] ret_tmp[1912642])
    (1912645 'move' tmp[1449601] ret_tmp[1912642])
    (1449635 '.=' this[1449355] blk[1450204] tmp[1449601])
    val tmp[1449640]:1*int(64)[1256714] "dead after last mention" "temp"
    val call_tmp[1449649]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1449656]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1449663]:1*int(64)[1256714] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1912648]:1*int(64)[1256714] "temp"
    (1454873 call _defaultOf[1264554] ret_tmp[1912648])
    (1912651 'move' tmp[1449640] ret_tmp[1912648])
    (1449674 '.=' this[1449355] sizesPerDim[1450212] tmp[1449640])
    val tmp[1449679]:1*int(64)[1256714] "dead after last mention" "temp"
    val call_tmp[1449688]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1449695]:1*int(64)[1256714] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1912654]:1*int(64)[1256714] "temp"
    (1454879 call _defaultOf[1264554] ret_tmp[1912654])
    (1912657 'move' tmp[1449679] ret_tmp[1912654])
    (1449706 '.=' this[1449355] str[1450220] tmp[1449679])
    val tmp[1449711]:int(64)[13] "dead after last mention" "temp"
    val call_tmp[1449713]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1449720]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1454886 'move' tmp[1449711] 0)
    (1449730 '.=' this[1449355] factoredOffs[1450226] tmp[1449711])
    val call_tmp[1449735]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1449742]:_ddata(uint(64))[1449422] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1449749]:_ddata(uint(64))[1449422] "dead after last mention" "temp"
    (1449751 'move' tmp[1449749](1450333 call chpl__initCopy[1450335] data[1449388]))
    (1449755 '.=' this[1449355] data[1450231] tmp[1449749])
    val tmp[1449760]:_ddata(uint(64))[1449422] "dead after last mention" "temp"
    val call_tmp[1449762]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1449769]:_ddata(uint(64))[1449422] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1454891 'move' tmp[1449760](1454889 'cast' _ddata(uint(64))[1449422] nil[44]))
    (1449779 '.=' this[1449355] shiftedData[1450237] tmp[1449760])
    val tmp[1449784]:c_void_ptr[149] "dead after last mention" "temp"
    (1449786 'move' tmp[1449784](1450366 call chpl__initCopy[945431] externFreeFunc[1449404]))
    (1449790 '.=' this[1449355] externFreeFunc[1450242] tmp[1449784])
    val tmp[1449795]:bool[10] "dead after last mention" "temp"
    (1449797 'move' tmp[1449795] externArr[1449394])
    (1449801 '.=' this[1449355] externArr[1450245] tmp[1449795])
    val tmp[1449806]:bool[10] "dead after last mention" "temp"
    (1449808 'move' tmp[1449806] _borrowed[1449400])
    (1449812 '.=' this[1449355] _borrowed[1450249] tmp[1449806])
    val tmp[1449817]:bool[10] "dead after last mention" "temp"
    (1449819 'move' tmp[1449817] 0)
    (1449823 '.=' this[1449355] callPostAlloc[1450253] tmp[1449817])
    val tmp[1449828]:bool[10] "dead after last mention" "temp"
    (1449830 'move' tmp[1449828] 1)
    (1449834 '.=' this[1449355] deinitElts[1450257] tmp[1449828])
    (1449839 'setcid' this[1449355])
    (1449846 call setupFieldsAndAllocate[1450374] this[1449355])
    (1449848 return _void[55])
  }
  function [domain(1,int(64),false)] real(64)[1358944].init[1519645](const in arg this[1519649]:[domain(1,int(64),false)] real(64)[1358944], const in arg dom[1519668]:domain(1,int(64),false)[1251123], const in arg data[1519682]:_ddata(real(64))[1358105], const in arg externArr[1519688]:bool[10], const in arg _borrowed[1519694]:bool[10], const in arg externFreeFunc[1519698]:c_void_ptr[149]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[1880257]:int(64)[13] "temp"
    val _formal_type_tmp_[1880255]:real(64)[16] "temp"
    val super_tmp[1519722]:BaseRectangularArr(1,int(64),false,real(64))[1358730] "dead after last mention" "temporary of super field" "temp"
    (1519724 'move' super_tmp[1519722](1519726 '.v' this[1519649] super[1358862]))
    const-val default_arg_pid[1520139]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    (1520143 'move' default_arg_pid[1520139](1520141 call init_default_pid[1358640]))
    const-val default_arg__decEltRefCounts[1520147]:bool[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    (1520151 'move' default_arg__decEltRefCounts[1520147](1520149 call init_default__decEltRefCounts[1358680]))
    (1519733 call init[1358534] super_tmp[1519722] default_arg_pid[1520139] default_arg__decEltRefCounts[1520147])
    val tmp[1519743]:BaseRectangularArr(1,int(64),false,real(64))[1358730] "dead after last mention" "temp" "type variable"
    val call_tmp[1519762]:BaseRectangularArr(1,int(64),false,real(64))[1358730] "dead at end of block" "maybe param" "temp"
    (1519764 'move' call_tmp[1519762](1519766 'cast' BaseRectangularArr(1,int(64),false,real(64))[1358730] this[1519649]))
    val chpl__thisAsParent[1519769]:BaseRectangularArr(1,int(64),false,real(64))[1358730] "dead at end of block" "insert auto destroy" "temp"
    (1519771 'move' chpl__thisAsParent[1519769](1520156 call chpl__initCopy[1358837] call_tmp[1519762]))
    (1519775 'setcid' chpl__thisAsParent[1519769])
    val tmp[1519778]:int(64)[13] "dead after last mention" "temp" "type variable"
    val call_tmp[1519780]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1519787]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1519811]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1519825]:domain(1,int(64),false)[1251123] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1519837]:domain(1,int(64),false)[1251123] "dead after last mention" "temp"
    (1519839 'move' tmp[1519837](1520178 call chpl__initCopy[1251478] dom[1519668]))
    (1519843 '.=' this[1519649] dom[1358871] tmp[1519837])
    val tmp[1519848]:1*int(64)[1256714] "dead after last mention" "temp"
    val call_tmp[1519857]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1519864]:1*int(64)[1256714] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1912678]:1*int(64)[1256714] "temp"
    (1521688 call _defaultOf[1264554] ret_tmp[1912678])
    (1912681 'move' tmp[1519848] ret_tmp[1912678])
    (1519875 '.=' this[1519649] off[1358881] tmp[1519848])
    val tmp[1519880]:1*int(64)[1256714] "dead after last mention" "temp"
    val call_tmp[1519889]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1519896]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1519903]:1*int(64)[1256714] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1912684]:1*int(64)[1256714] "temp"
    (1521694 call _defaultOf[1264554] ret_tmp[1912684])
    (1912687 'move' tmp[1519880] ret_tmp[1912684])
    (1519914 '.=' this[1519649] blk[1358887] tmp[1519880])
    val tmp[1519919]:1*int(64)[1256714] "dead after last mention" "temp"
    val call_tmp[1519928]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1519935]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1519942]:1*int(64)[1256714] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1912690]:1*int(64)[1256714] "temp"
    (1521700 call _defaultOf[1264554] ret_tmp[1912690])
    (1912693 'move' tmp[1519919] ret_tmp[1912690])
    (1519953 '.=' this[1519649] sizesPerDim[1358895] tmp[1519919])
    val tmp[1519958]:1*int(64)[1256714] "dead after last mention" "temp"
    val call_tmp[1519967]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1519974]:1*int(64)[1256714] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1912696]:1*int(64)[1256714] "temp"
    (1521706 call _defaultOf[1264554] ret_tmp[1912696])
    (1912699 'move' tmp[1519958] ret_tmp[1912696])
    (1519985 '.=' this[1519649] str[1358903] tmp[1519958])
    val tmp[1519990]:int(64)[13] "dead after last mention" "temp"
    val call_tmp[1519992]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1519999]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1521713 'move' tmp[1519990] 0)
    (1520009 '.=' this[1519649] factoredOffs[1358909] tmp[1519990])
    val call_tmp[1520014]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1520021]:_ddata(real(64))[1358105] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1520028]:_ddata(real(64))[1358105] "dead after last mention" "temp"
    (1520030 'move' tmp[1520028](1520224 call chpl__initCopy[1359018] data[1519682]))
    (1520034 '.=' this[1519649] data[1358914] tmp[1520028])
    val tmp[1520039]:_ddata(real(64))[1358105] "dead after last mention" "temp"
    val call_tmp[1520041]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1520048]:_ddata(real(64))[1358105] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1521718 'move' tmp[1520039](1521716 'cast' _ddata(real(64))[1358105] nil[44]))
    (1520058 '.=' this[1519649] shiftedData[1358920] tmp[1520039])
    val tmp[1520063]:c_void_ptr[149] "dead after last mention" "temp"
    (1520065 'move' tmp[1520063](1520239 call chpl__initCopy[945431] externFreeFunc[1519698]))
    (1520069 '.=' this[1519649] externFreeFunc[1358925] tmp[1520063])
    val tmp[1520074]:bool[10] "dead after last mention" "temp"
    (1520076 'move' tmp[1520074] externArr[1519688])
    (1520080 '.=' this[1519649] externArr[1358928] tmp[1520074])
    val tmp[1520085]:bool[10] "dead after last mention" "temp"
    (1520087 'move' tmp[1520085] _borrowed[1519694])
    (1520091 '.=' this[1519649] _borrowed[1358932] tmp[1520085])
    val tmp[1520096]:bool[10] "dead after last mention" "temp"
    (1520098 'move' tmp[1520096] 0)
    (1520102 '.=' this[1519649] callPostAlloc[1358936] tmp[1520096])
    val tmp[1520107]:bool[10] "dead after last mention" "temp"
    (1520109 'move' tmp[1520107] 0)
    (1520113 '.=' this[1519649] deinitElts[1358940] tmp[1520107])
    (1520118 'setcid' this[1519649])
    (1520125 call setupFieldsAndAllocate[1520247] this[1519649])
    (1520127 return _void[55])
  }
  function [domain(1,int(64),false)] locale[1256675].dsiGetBaseDom[1832139](const in arg this[1832143]:[domain(1,int(64),false)] locale[1256675]) : domain(1,int(64),false)[1251123] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual"
  {
    val ret[1832145]:domain(1,int(64),false)[1251123] "dead after last mention" "RVV" "temp"
    ref call_tmp[1832153]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
    (1832155 'move' call_tmp[1832153](1832158 call dom[1258208] this[1832143]))
    (1832161 'move' ret[1832145](1832163 'deref' call_tmp[1832153]))
    (1832165 return ret[1832145])
  }
  function [domain(1,int(64),false)] unmanaged localesSignal?[1318401].dsiGetBaseDom[1832168](const in arg this[1832172]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401]) : domain(1,int(64),false)[1251123] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual"
  {
    val ret[1832174]:domain(1,int(64),false)[1251123] "dead after last mention" "RVV" "temp"
    ref call_tmp[1832182]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
    (1832184 'move' call_tmp[1832182](1832187 call dom[1319786] this[1832172]))
    (1832190 'move' ret[1832174](1832192 'deref' call_tmp[1832182]))
    (1832194 return ret[1832174])
  }
  function [domain(1,int(64),false)] real(64)[1358944].dsiGetBaseDom[1832197](const in arg this[1832201]:[domain(1,int(64),false)] real(64)[1358944]) : domain(1,int(64),false)[1251123] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual"
  {
    val ret[1832203]:domain(1,int(64),false)[1251123] "dead after last mention" "RVV" "temp"
    ref call_tmp[1832211]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
    (1832213 'move' call_tmp[1832211](1832216 call dom[1360329] this[1832201]))
    (1832219 'move' ret[1832203](1832221 'deref' call_tmp[1832211]))
    (1832223 return ret[1832203])
  }
  function [domain(1,int(64),false)] int(64)[1368867].dsiGetBaseDom[1832226](const in arg this[1832230]:[domain(1,int(64),false)] int(64)[1368867]) : domain(1,int(64),false)[1251123] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual"
  {
    val ret[1832232]:domain(1,int(64),false)[1251123] "dead after last mention" "RVV" "temp"
    ref call_tmp[1832240]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
    (1832242 'move' call_tmp[1832240](1832245 call dom[1370252] this[1832230]))
    (1832248 'move' ret[1832232](1832250 'deref' call_tmp[1832240]))
    (1832252 return ret[1832232])
  }
  function [domain(1,int(64),false)] range(int(64),bounded,false)[1409224].dsiGetBaseDom[1832255](const in arg this[1832259]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224]) : domain(1,int(64),false)[1251123] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual"
  {
    val ret[1832261]:domain(1,int(64),false)[1251123] "dead after last mention" "RVV" "temp"
    ref call_tmp[1832269]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
    (1832271 'move' call_tmp[1832269](1832274 call dom[1410591] this[1832259]))
    (1832277 'move' ret[1832261](1832279 'deref' call_tmp[1832269]))
    (1832281 return ret[1832261])
  }
  function [domain(1,int(64),false)] uint(64)[1450261].dsiGetBaseDom[1832284](const in arg this[1832288]:[domain(1,int(64),false)] uint(64)[1450261]) : domain(1,int(64),false)[1251123] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual"
  {
    val ret[1832290]:domain(1,int(64),false)[1251123] "dead after last mention" "RVV" "temp"
    ref call_tmp[1832298]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
    (1832300 'move' call_tmp[1832298](1832303 call dom[1451646] this[1832288]))
    (1832306 'move' ret[1832290](1832308 'deref' call_tmp[1832298]))
    (1832310 return ret[1832290])
  }
  function [domain(1,int(64),false)] locale[1256675].dsiElementInitializationComplete[1263015](const in arg this[1263019]:[domain(1,int(64),false)] locale[1256675]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "no return value for void"
  {
    const-val size[1263025]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val tmp[1263027]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1263046]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
    ref call_tmp[1263048]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
    ref _this_tmp_[1263279]:_ref(1*int(64))[1256784] "dead at end of block" "temp"
    (1263281 'move' _this_tmp_[1263279](1263053 call blk[1258464] this[1263019]))
    (1263050 'move' call_tmp[1263048](1263286 '.' _this_tmp_[1263279] x0[1256712]))
    ref call_tmp[1263058]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
    (1263060 'move' call_tmp[1263058](1263063 call dom[1258208] this[1263019]))
    const-val call_tmp[1263066]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    val coerce_tmp[1263290]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1263294 'move' coerce_tmp[1263290](1263292 'deref' call_tmp[1263058]))
    val coerce_tmp[1263296]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1263301 'move' coerce_tmp[1263296] coerce_tmp[1263290])
    const-val ret_tmp[1912136]:range(int(64),bounded,false)[1027003] "temp"
    (1263074 call dsiDim[1258249] coerce_tmp[1263296] ret_tmp[1912136])
    (1912139 'move' call_tmp[1263066] ret_tmp[1912136])
    const-val call_tmp[1263076]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1263078 'move' call_tmp[1263076](1263081 call size[1035978] call_tmp[1263066]))
    const-val coerce_tmp[1263305]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1263309 'move' coerce_tmp[1263305](1263307 'deref' call_tmp[1263048]))
    (1263084 'move' tmp[1263046](1263087 call *[441944] coerce_tmp[1263305] call_tmp[1263076]))
    (1263090 'move' tmp[1263027] tmp[1263046])
    (1263178 'move' size[1263025] tmp[1263027])
    ref call_tmp[1263216]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1263218 'move' call_tmp[1263216](1263221 call callPostAlloc[1260229] this[1263019]))
    const-val call_tmp[1263224]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1263317]:bool[10] "dead after last mention" "const" "temp"
    (1263319 'move' tmp[1263317](1263321 'deref' call_tmp[1263216]))
    (1263226 'move' call_tmp[1263224] tmp[1263317])
    if call_tmp[1263224]
    {
      ref call_tmp[1263233]:_ref(_ddata(locale))[1255592] "dead after last mention" "maybe param" "temp"
      (1263235 'move' call_tmp[1263233](1263238 call data[1259861] this[1263019]))
      val coerce_tmp[1263382]:_ddata(locale)[1255583] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1263386 'move' coerce_tmp[1263382](1263384 'deref' call_tmp[1263233]))
      (1263242 call _ddata_allocate_postalloc[1263324] coerce_tmp[1263382] size[1263025])
      ref call_tmp[1263247]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
      (1263249 'move' call_tmp[1263247](1263252 call callPostAlloc[1260229] this[1263019]))
      (1263256 call =[435290] call_tmp[1263247] 0)
    }
    ref call_tmp[1263260]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1263262 'move' call_tmp[1263260](1263265 call deinitElts[1263423] this[1263019]))
    (1263269 call =[435290] call_tmp[1263260] 1)
    (1924748 call chpl__autoDestroy[1407763] call_tmp[1263066])
    (1263272 return _void[55])
  }
  function [domain(1,int(64),false)] unmanaged localesSignal?[1318401].dsiElementInitializationComplete[1323101](const in arg this[1323105]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "no return value for void"
  {
    const-val size[1323111]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val tmp[1323113]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1323132]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
    ref call_tmp[1323134]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
    ref _this_tmp_[1323365]:_ref(1*int(64))[1256784] "dead at end of block" "temp"
    (1323367 'move' _this_tmp_[1323365](1323139 call blk[1319894] this[1323105]))
    (1323136 'move' call_tmp[1323134](1323372 '.' _this_tmp_[1323365] x0[1256712]))
    ref call_tmp[1323144]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
    (1323146 'move' call_tmp[1323144](1323149 call dom[1319786] this[1323105]))
    const-val call_tmp[1323152]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    val coerce_tmp[1323376]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1323380 'move' coerce_tmp[1323376](1323378 'deref' call_tmp[1323144]))
    val coerce_tmp[1323382]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1323387 'move' coerce_tmp[1323382] coerce_tmp[1323376])
    const-val ret_tmp[1912160]:range(int(64),bounded,false)[1027003] "temp"
    (1323160 call dsiDim[1258249] coerce_tmp[1323382] ret_tmp[1912160])
    (1912163 'move' call_tmp[1323152] ret_tmp[1912160])
    const-val call_tmp[1323162]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1323164 'move' call_tmp[1323162](1323167 call size[1035978] call_tmp[1323152]))
    const-val coerce_tmp[1323391]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1323395 'move' coerce_tmp[1323391](1323393 'deref' call_tmp[1323134]))
    (1323170 'move' tmp[1323132](1323173 call *[441944] coerce_tmp[1323391] call_tmp[1323162]))
    (1323176 'move' tmp[1323113] tmp[1323132])
    (1323264 'move' size[1323111] tmp[1323113])
    ref call_tmp[1323302]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1323304 'move' call_tmp[1323302](1323307 call callPostAlloc[1320763] this[1323105]))
    const-val call_tmp[1323310]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1323403]:bool[10] "dead after last mention" "const" "temp"
    (1323405 'move' tmp[1323403](1323407 'deref' call_tmp[1323302]))
    (1323312 'move' call_tmp[1323310] tmp[1323403])
    if call_tmp[1323310]
    {
      ref call_tmp[1323319]:_ref(_ddata(unmanaged localesSignal?))[1317571] "dead after last mention" "maybe param" "temp"
      (1323321 'move' call_tmp[1323319](1323324 call data[1320395] this[1323105]))
      val coerce_tmp[1323468]:_ddata(unmanaged localesSignal?)[1317562] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1323472 'move' coerce_tmp[1323468](1323470 'deref' call_tmp[1323319]))
      (1323328 call _ddata_allocate_postalloc[1323410] coerce_tmp[1323468] size[1323111])
      ref call_tmp[1323333]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
      (1323335 'move' call_tmp[1323333](1323338 call callPostAlloc[1320763] this[1323105]))
      (1323342 call =[435290] call_tmp[1323333] 0)
    }
    ref call_tmp[1323346]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1323348 'move' call_tmp[1323346](1323351 call deinitElts[1323509] this[1323105]))
    (1323355 call =[435290] call_tmp[1323346] 1)
    (1925325 call chpl__autoDestroy[1407763] call_tmp[1323152])
    (1323358 return _void[55])
  }
  function [domain(1,int(64),false)] real(64)[1358944].dsiElementInitializationComplete[1363835](const in arg this[1363839]:[domain(1,int(64),false)] real(64)[1358944]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "no return value for void"
  {
    const-val size[1363845]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val tmp[1363847]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1363866]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
    ref call_tmp[1363868]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
    ref _this_tmp_[1364099]:_ref(1*int(64))[1256784] "dead at end of block" "temp"
    (1364101 'move' _this_tmp_[1364099](1363873 call blk[1360437] this[1363839]))
    (1363870 'move' call_tmp[1363868](1364106 '.' _this_tmp_[1364099] x0[1256712]))
    ref call_tmp[1363878]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
    (1363880 'move' call_tmp[1363878](1363883 call dom[1360329] this[1363839]))
    const-val call_tmp[1363886]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    val coerce_tmp[1364110]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1364114 'move' coerce_tmp[1364110](1364112 'deref' call_tmp[1363878]))
    val coerce_tmp[1364116]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1364121 'move' coerce_tmp[1364116] coerce_tmp[1364110])
    const-val ret_tmp[1912196]:range(int(64),bounded,false)[1027003] "temp"
    (1363894 call dsiDim[1258249] coerce_tmp[1364116] ret_tmp[1912196])
    (1912199 'move' call_tmp[1363886] ret_tmp[1912196])
    const-val call_tmp[1363896]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1363898 'move' call_tmp[1363896](1363901 call size[1035978] call_tmp[1363886]))
    const-val coerce_tmp[1364125]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1364129 'move' coerce_tmp[1364125](1364127 'deref' call_tmp[1363868]))
    (1363904 'move' tmp[1363866](1363907 call *[441944] coerce_tmp[1364125] call_tmp[1363896]))
    (1363910 'move' tmp[1363847] tmp[1363866])
    (1363998 'move' size[1363845] tmp[1363847])
    ref call_tmp[1364036]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1364038 'move' call_tmp[1364036](1364041 call callPostAlloc[1361306] this[1363839]))
    const-val call_tmp[1364044]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1364137]:bool[10] "dead after last mention" "const" "temp"
    (1364139 'move' tmp[1364137](1364141 'deref' call_tmp[1364036]))
    (1364046 'move' call_tmp[1364044] tmp[1364137])
    if call_tmp[1364044]
    {
      ref call_tmp[1364053]:_ref(_ddata(real(64)))[1358114] "dead after last mention" "maybe param" "temp"
      (1364055 'move' call_tmp[1364053](1364058 call data[1360938] this[1363839]))
      val coerce_tmp[1364202]:_ddata(real(64))[1358105] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1364206 'move' coerce_tmp[1364202](1364204 'deref' call_tmp[1364053]))
      (1364062 call _ddata_allocate_postalloc[1364144] coerce_tmp[1364202] size[1363845])
      ref call_tmp[1364067]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
      (1364069 'move' call_tmp[1364067](1364072 call callPostAlloc[1361306] this[1363839]))
      (1364076 call =[435290] call_tmp[1364067] 0)
    }
    ref call_tmp[1364080]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1364082 'move' call_tmp[1364080](1364085 call deinitElts[1364243] this[1363839]))
    (1364089 call =[435290] call_tmp[1364080] 1)
    (1925608 call chpl__autoDestroy[1407763] call_tmp[1363886])
    (1364092 return _void[55])
  }
  function [domain(1,int(64),false)] int(64)[1368867].dsiElementInitializationComplete[1372310](const in arg this[1372314]:[domain(1,int(64),false)] int(64)[1368867]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "no return value for void"
  {
    const-val size[1372320]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val tmp[1372322]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1372341]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
    ref call_tmp[1372343]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
    ref _this_tmp_[1372574]:_ref(1*int(64))[1256784] "dead at end of block" "temp"
    (1372576 'move' _this_tmp_[1372574](1372348 call blk[1370360] this[1372314]))
    (1372345 'move' call_tmp[1372343](1372581 '.' _this_tmp_[1372574] x0[1256712]))
    ref call_tmp[1372353]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
    (1372355 'move' call_tmp[1372353](1372358 call dom[1370252] this[1372314]))
    const-val call_tmp[1372361]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    val coerce_tmp[1372585]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1372589 'move' coerce_tmp[1372585](1372587 'deref' call_tmp[1372353]))
    val coerce_tmp[1372591]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1372596 'move' coerce_tmp[1372591] coerce_tmp[1372585])
    const-val ret_tmp[1912220]:range(int(64),bounded,false)[1027003] "temp"
    (1372369 call dsiDim[1258249] coerce_tmp[1372591] ret_tmp[1912220])
    (1912223 'move' call_tmp[1372361] ret_tmp[1912220])
    const-val call_tmp[1372371]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1372373 'move' call_tmp[1372371](1372376 call size[1035978] call_tmp[1372361]))
    const-val coerce_tmp[1372600]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1372604 'move' coerce_tmp[1372600](1372602 'deref' call_tmp[1372343]))
    (1372379 'move' tmp[1372341](1372382 call *[441944] coerce_tmp[1372600] call_tmp[1372371]))
    (1372385 'move' tmp[1372322] tmp[1372341])
    (1372473 'move' size[1372320] tmp[1372322])
    ref call_tmp[1372511]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1372513 'move' call_tmp[1372511](1372516 call callPostAlloc[1371229] this[1372314]))
    const-val call_tmp[1372519]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1372612]:bool[10] "dead after last mention" "const" "temp"
    (1372614 'move' tmp[1372612](1372616 'deref' call_tmp[1372511]))
    (1372521 'move' call_tmp[1372519] tmp[1372612])
    if call_tmp[1372519]
    {
      ref call_tmp[1372528]:_ref(_ddata(int(64)))[1368037] "dead after last mention" "maybe param" "temp"
      (1372530 'move' call_tmp[1372528](1372533 call data[1370861] this[1372314]))
      val coerce_tmp[1372677]:_ddata(int(64))[1368028] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1372681 'move' coerce_tmp[1372677](1372679 'deref' call_tmp[1372528]))
      (1372537 call _ddata_allocate_postalloc[1372619] coerce_tmp[1372677] size[1372320])
      ref call_tmp[1372542]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
      (1372544 'move' call_tmp[1372542](1372547 call callPostAlloc[1371229] this[1372314]))
      (1372551 call =[435290] call_tmp[1372542] 0)
    }
    ref call_tmp[1372555]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1372557 'move' call_tmp[1372555](1372560 call deinitElts[1372718] this[1372314]))
    (1372564 call =[435290] call_tmp[1372555] 1)
    (1925645 call chpl__autoDestroy[1407763] call_tmp[1372361])
    (1372567 return _void[55])
  }
  function [domain(1,int(64),false)] range(int(64),bounded,false)[1409224].dsiElementInitializationComplete[1413826](const in arg this[1413830]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "no return value for void"
  {
    const-val size[1413836]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val tmp[1413838]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1413857]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
    ref call_tmp[1413859]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
    ref _this_tmp_[1414090]:_ref(1*int(64))[1256784] "dead at end of block" "temp"
    (1414092 'move' _this_tmp_[1414090](1413864 call blk[1410699] this[1413830]))
    (1413861 'move' call_tmp[1413859](1414097 '.' _this_tmp_[1414090] x0[1256712]))
    ref call_tmp[1413869]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
    (1413871 'move' call_tmp[1413869](1413874 call dom[1410591] this[1413830]))
    const-val call_tmp[1413877]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    val coerce_tmp[1414101]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1414105 'move' coerce_tmp[1414101](1414103 'deref' call_tmp[1413869]))
    val coerce_tmp[1414107]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1414112 'move' coerce_tmp[1414107] coerce_tmp[1414101])
    const-val ret_tmp[1912256]:range(int(64),bounded,false)[1027003] "temp"
    (1413885 call dsiDim[1258249] coerce_tmp[1414107] ret_tmp[1912256])
    (1912259 'move' call_tmp[1413877] ret_tmp[1912256])
    const-val call_tmp[1413887]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1413889 'move' call_tmp[1413887](1413892 call size[1035978] call_tmp[1413877]))
    const-val coerce_tmp[1414116]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1414120 'move' coerce_tmp[1414116](1414118 'deref' call_tmp[1413859]))
    (1413895 'move' tmp[1413857](1413898 call *[441944] coerce_tmp[1414116] call_tmp[1413887]))
    (1413901 'move' tmp[1413838] tmp[1413857])
    (1413989 'move' size[1413836] tmp[1413838])
    ref call_tmp[1414027]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1414029 'move' call_tmp[1414027](1414032 call callPostAlloc[1411568] this[1413830]))
    const-val call_tmp[1414035]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1414128]:bool[10] "dead after last mention" "const" "temp"
    (1414130 'move' tmp[1414128](1414132 'deref' call_tmp[1414027]))
    (1414037 'move' call_tmp[1414035] tmp[1414128])
    if call_tmp[1414035]
    {
      ref call_tmp[1414044]:_ref(_ddata(range(int(64),bounded,false)))[1406051] "dead after last mention" "maybe param" "temp"
      (1414046 'move' call_tmp[1414044](1414049 call data[1411200] this[1413830]))
      val coerce_tmp[1414193]:_ddata(range(int(64),bounded,false))[1406042] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1414197 'move' coerce_tmp[1414193](1414195 'deref' call_tmp[1414044]))
      (1414053 call _ddata_allocate_postalloc[1414135] coerce_tmp[1414193] size[1413836])
      ref call_tmp[1414058]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
      (1414060 'move' call_tmp[1414058](1414063 call callPostAlloc[1411568] this[1413830]))
      (1414067 call =[435290] call_tmp[1414058] 0)
    }
    ref call_tmp[1414071]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1414073 'move' call_tmp[1414071](1414076 call deinitElts[1414206] this[1413830]))
    (1414080 call =[435290] call_tmp[1414071] 1)
    (1925970 call chpl__autoDestroy[1407763] call_tmp[1413877])
    (1414083 return _void[55])
  }
  function [domain(1,int(64),false)] uint(64)[1450261].dsiElementInitializationComplete[1453953](const in arg this[1453957]:[domain(1,int(64),false)] uint(64)[1450261]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "no return value for void"
  {
    const-val size[1453963]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val tmp[1453965]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1453984]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
    ref call_tmp[1453986]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
    ref _this_tmp_[1454217]:_ref(1*int(64))[1256784] "dead at end of block" "temp"
    (1454219 'move' _this_tmp_[1454217](1453991 call blk[1451754] this[1453957]))
    (1453988 'move' call_tmp[1453986](1454224 '.' _this_tmp_[1454217] x0[1256712]))
    ref call_tmp[1453996]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
    (1453998 'move' call_tmp[1453996](1454001 call dom[1451646] this[1453957]))
    const-val call_tmp[1454004]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    val coerce_tmp[1454228]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1454232 'move' coerce_tmp[1454228](1454230 'deref' call_tmp[1453996]))
    val coerce_tmp[1454234]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1454239 'move' coerce_tmp[1454234] coerce_tmp[1454228])
    const-val ret_tmp[1912298]:range(int(64),bounded,false)[1027003] "temp"
    (1454012 call dsiDim[1258249] coerce_tmp[1454234] ret_tmp[1912298])
    (1912301 'move' call_tmp[1454004] ret_tmp[1912298])
    const-val call_tmp[1454014]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1454016 'move' call_tmp[1454014](1454019 call size[1035978] call_tmp[1454004]))
    const-val coerce_tmp[1454243]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1454247 'move' coerce_tmp[1454243](1454245 'deref' call_tmp[1453986]))
    (1454022 'move' tmp[1453984](1454025 call *[441944] coerce_tmp[1454243] call_tmp[1454014]))
    (1454028 'move' tmp[1453965] tmp[1453984])
    (1454116 'move' size[1453963] tmp[1453965])
    ref call_tmp[1454154]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1454156 'move' call_tmp[1454154](1454159 call callPostAlloc[1452623] this[1453957]))
    const-val call_tmp[1454162]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1454255]:bool[10] "dead after last mention" "const" "temp"
    (1454257 'move' tmp[1454255](1454259 'deref' call_tmp[1454154]))
    (1454164 'move' call_tmp[1454162] tmp[1454255])
    if call_tmp[1454162]
    {
      ref call_tmp[1454171]:_ref(_ddata(uint(64)))[1449431] "dead after last mention" "maybe param" "temp"
      (1454173 'move' call_tmp[1454171](1454176 call data[1452255] this[1453957]))
      val coerce_tmp[1454320]:_ddata(uint(64))[1449422] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1454324 'move' coerce_tmp[1454320](1454322 'deref' call_tmp[1454171]))
      (1454180 call _ddata_allocate_postalloc[1454262] coerce_tmp[1454320] size[1453963])
      ref call_tmp[1454185]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
      (1454187 'move' call_tmp[1454185](1454190 call callPostAlloc[1452623] this[1453957]))
      (1454194 call =[435290] call_tmp[1454185] 0)
    }
    ref call_tmp[1454198]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1454200 'move' call_tmp[1454198](1454203 call deinitElts[1454361] this[1453957]))
    (1454207 call =[435290] call_tmp[1454198] 1)
    (1926326 call chpl__autoDestroy[1407763] call_tmp[1454004])
    (1454210 return _void[55])
  }
  function [domain(1,int(64),false)] locale[1256675].dsiDestroyArr[1832313](const in arg this[1832317]:[domain(1,int(64),false)] locale[1256675], const in arg deinitElts[1832319]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual" "no return value for void"
  {
    ref call_tmp[1832355]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1832357 'move' call_tmp[1832355](1832360 call externArr[1832777] this[1832317]))
    const-val call_tmp[1832363]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1832805]:bool[10] "dead after last mention" "const" "temp"
    (1832807 'move' tmp[1832805](1832809 'deref' call_tmp[1832355]))
    (1832365 'move' call_tmp[1832363] tmp[1832805])
    if call_tmp[1832363]
    {
      ref call_tmp[1832372]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
      (1832374 'move' call_tmp[1832372](1832377 call _borrowed[1832811] this[1832317]))
      const-val call_tmp[1832380]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1832839]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1832843 'move' coerce_tmp[1832839](1832841 'deref' call_tmp[1832372]))
      (1832382 'move' call_tmp[1832380](1832385 call ![7494] coerce_tmp[1832839]))
      const-val call_tmp[1832387]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1832389 'move' call_tmp[1832387] call_tmp[1832380])
      if call_tmp[1832387]
      {
        ref call_tmp[1832396]:_ref(c_void_ptr)[938311] "dead after last mention" "maybe param" "temp"
        (1832398 'move' call_tmp[1832396](1832401 call externFreeFunc[1832846] this[1832317]))
        ref call_tmp[1832404]:_ref(_ddata(locale))[1255592] "dead after last mention" "maybe param" "temp"
        (1832406 'move' call_tmp[1832404](1832409 call data[1259861] this[1832317]))
        val call_tmp[1832412]:c_ptr(_ddata(locale))[1832897] "dead after last mention" "expr temp" "maybe param" "temp"
        (1832414 'move' call_tmp[1832412](1832417 call c_ptrTo[1832875] call_tmp[1832404]))
        const-val coerce_tmp[1833108]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1833112 'move' coerce_tmp[1833108](1833110 'deref' call_tmp[1832396]))
        const-val coerce_tmp[1833114]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1833120 'move' coerce_tmp[1833114](1833116 'cast' c_void_ptr[149] call_tmp[1832412]))
        (1832420 call chpl_call_free_func[188708] coerce_tmp[1833108] coerce_tmp[1833114])
      }
    }
    {
      ref call_tmp[1832425]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
      (1832427 'move' call_tmp[1832425](1832430 call dom[1258208] this[1832317]))
      const-val call_tmp[1832433]:int(64)[13] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1833124]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1833128 'move' coerce_tmp[1833124](1833126 'deref' call_tmp[1832425]))
      val coerce_tmp[1833130]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1833135 'move' coerce_tmp[1833130] coerce_tmp[1833124])
      (1832435 'move' call_tmp[1832433](1832438 call dsiNumIndices[1263823] coerce_tmp[1833130]))
      const-val numInd[1832441]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1832443 'move' numInd[1832441] call_tmp[1832433])
      val call_tmp[1832447]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
      const-val numElts[1832455]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1832457 'move' numElts[1832455] numInd[1832441])
      const-val tmp[1832463]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val tmp[1832465]:bool[10] "dead after last mention" "maybe param" "temp"
      (1832467 'move' tmp[1832465] deinitElts[1832319])
      val tmp[1832483]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1832485]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1832487]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1832489 'move' call_tmp[1832487] tmp[1832465])
      (1832494 'move' tmp[1832485] call_tmp[1832487])
      if tmp[1832485]
      {
        const-val tmp[1832501]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        ref call_tmp[1832503]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
        (1832505 'move' call_tmp[1832503](1832508 call deinitElts[1263423] this[1832317]))
        const-val tmp[1833144]:bool[10] "dead after last mention" "const" "temp"
        (1833146 'move' tmp[1833144](1833148 'deref' call_tmp[1832503]))
        (1832511 'move' tmp[1832501] tmp[1833144])
        (1832516 'move' tmp[1832483] tmp[1832501])
      }
      {
        (1832522 'move' tmp[1832483] 0)
      }
      (1832528 'move' tmp[1832463] tmp[1832483])
      val tmp[1832544]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1832546]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1832548]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1832550 'move' call_tmp[1832548] tmp[1832463])
      (1832555 'move' tmp[1832546] call_tmp[1832548])
      if tmp[1832546]
      {
        const-val tmp[1832562]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1832564]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1832566 'move' call_tmp[1832564](1832569 call >[437788] numInd[1832441] 0))
        (1832572 'move' tmp[1832562] call_tmp[1832564])
        (1832577 'move' tmp[1832544] tmp[1832562])
      }
      {
        (1832583 'move' tmp[1832544] 0)
      }
      const-val call_tmp[1832589]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1832591 'move' call_tmp[1832589] tmp[1832544])
      if call_tmp[1832589]
      {
        ref call_tmp[1832598]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
        ref _this_tmp_[1833155]:_ref(_ddata(locale))[1255592] "dead after last mention" "temp"
        (1833157 'move' _this_tmp_[1833155](1832603 call data[1259861] this[1832317]))
        val coerce_tmp[1833162]:_ddata(locale)[1255583] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1833166 'move' coerce_tmp[1833162](1833164 'deref' _this_tmp_[1833155]))
        (1832600 'move' call_tmp[1832598](1832606 call this[1303586] coerce_tmp[1833162] 0))
        const-val call_tmp[1832608]:locale[28] "dead after last mention" "expr temp" "maybe param" "temp"
        (1832610 'move' call_tmp[1832608](1832612 'deref' call_tmp[1832598]))
        {
          val call_tmp[1832635]:locale[28] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val coerce_tmp[1833174]:BaseRectangularArr(1,int(64),false,locale)[1256461] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
          (1833180 'move' coerce_tmp[1833174](1833176 'cast' BaseRectangularArr(1,int(64),false,locale)[1256461] this[1832317]))
          {
            {
              val _indexOfInterest[1832696]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[1832698]:_ic_chpl_direct_counted_range_iter[1103979] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[1832700]:_ir_chpl_direct_counted_range_iter[1103985] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[1907776]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
              (1832705 call chpl_direct_counted_range_iter[458112] 0 numElts[1832455] ret_tmp[1907776])
              (1907779 'move' call_tmp[1832700] ret_tmp[1907776])
              (1832708 'move' _iterator[1832698](1832711 call _getIterator[1103994] call_tmp[1832700]))
              {
                val ret[2027487]:_ir_chpl_direct_counted_range_iter[1103985] "dead after last mention" "RVV" "temp"
                val _indexOfInterest[2027489]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[2027491]:_ic_chpl_direct_counted_range_iter_helper[1103729] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[2027493]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[2027495]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
                const-val low[2027863]:int(64)[13] "temp"
                (2027868 'move' low[2027863](2027865 '.v' _iterator[1832698] F0_low[2107536]))
                const-val count[2027870]:int(64)[13] "temp"
                (2027875 'move' count[2027870](2027872 '.v' _iterator[1832698] F1_count[2107540]))
                (2027498 call chpl_direct_counted_range_iter_helper[1102287] low[2027863] count[2027870] ret_tmp[2027495])
                (2027502 'move' call_tmp[2027493] ret_tmp[2027495])
                (2027505 'move' _iterator[2027491](2027508 call _getIterator[1103744] call_tmp[2027493]))
                {
                  val ret[2027511]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead after last mention" "RVV" "temp"
                  val call_tmp[2027513]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val tmp[2027515]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  const-val tmp[2027517]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  const-val call_tmp[2027519]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val count[2027521]:int(64)[13] "temp"
                  (2027523 'move' count[2027521](2027525 '.v' _iterator[2027491] F1_count[2113698]))
                  (2027528 'move' call_tmp[2027519](2027531 call <[948587] count[2027521]))
                  (2027533 'move' tmp[2027517] call_tmp[2027519])
                  (2027536 'move' tmp[2027515] call_tmp[2027519])
                  const-val call_tmp[2027539]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2027541 'move' call_tmp[2027539] call_tmp[2027519])
                  if call_tmp[2027519]
                  {
                    (2027547 call boundsCheckHalt[210254] "With a negative count, the range must have a last index.")
                  }
                  const-val tmp[2027550]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
                  val tmp[2027552]:2*int(64)[1040245] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                  const-val tmp[2027554]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[2027556]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val count[2027558]:int(64)[13] "temp"
                  (2027560 'move' count[2027558](2027562 '.v' _iterator[2027491] F1_count[2113698]))
                  (2027565 'move' call_tmp[2027556](2027568 call ==[435744] count[2027558] 0))
                  (2027571 'move' tmp[2027554] call_tmp[2027556])
                  if call_tmp[2027556]
                  {
                    const-val tmp[2027576]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                    val call_tmp[2027578]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                    const-val call_tmp[2027580]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val low[2027582]:int(64)[13] "temp"
                    (2027584 'move' low[2027582](2027586 '.v' _iterator[2027491] F0_low[2113694]))
                    (2027589 'move' call_tmp[2027580](2027592 call _cast[956223] low[2027582]))
                    const-val call_tmp[2027594]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[2027596]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (2027598 'move' coerce_tmp[2027596](2027600 'cast' uint(64)[115] 1))
                    (2027603 'move' call_tmp[2027594](2027606 call -[962382] call_tmp[2027580]))
                    const-val call_tmp[2027608]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                    (2027610 'move' call_tmp[2027608](2027613 call _cast[953732] call_tmp[2027594]))
                    const-val ret_tmp[2027615]:2*int(64)[1040245] "temp"
                    const-val low[2027617]:int(64)[13] "temp"
                    (2027619 'move' low[2027617](2027621 '.v' _iterator[2027491] F0_low[2113694]))
                    (2027625 call _build_tuple[1040203] low[2027617] call_tmp[2027608] ret_tmp[2027615])
                    (2027629 'move' tmp[2027576] ret_tmp[2027615])
                    (2027632 'move' tmp[2027552] tmp[2027576])
                  }
                  {
                    const-val tmp[2027636]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                    val call_tmp[2027638]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    const-val call_tmp[2027640]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val count[2027642]:int(64)[13] "temp"
                    (2027644 'move' count[2027642](2027646 '.v' _iterator[2027491] F1_count[2113698]))
                    (2027649 'move' call_tmp[2027640] count[2027642])
                    const-val call_tmp[2027652]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val count[2027654]:int(64)[13] "temp"
                    (2027656 'move' count[2027654](2027658 '.v' _iterator[2027491] F1_count[2113698]))
                    (2027661 'move' call_tmp[2027652](2027664 call -[962415] count[2027654]))
                    const-val call_tmp[2027666]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val low[2027668]:int(64)[13] "temp"
                    (2027670 'move' low[2027668](2027672 '.v' _iterator[2027491] F0_low[2113694]))
                    (2027675 'move' call_tmp[2027666](2027678 call +[439752] low[2027668] call_tmp[2027652]))
                    const-val ret_tmp[2027681]:2*int(64)[1040245] "temp"
                    const-val low[2027683]:int(64)[13] "temp"
                    (2027685 'move' low[2027683](2027687 '.v' _iterator[2027491] F0_low[2113694]))
                    (2027691 call _build_tuple[1040203] low[2027683] call_tmp[2027666] ret_tmp[2027681])
                    (2027695 'move' tmp[2027636] ret_tmp[2027681])
                    (2027698 'move' tmp[2027552] tmp[2027636])
                  }
                  (2027702 '=' tmp[2027550] tmp[2027552])
                  (2027705 'noop')
                  1
                  ref call_tmp[2027707]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                  (2027709 'move' call_tmp[2027707](2027711 '.' tmp[2027550] x0[1040241]))
                  const-val start[2027714]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                  const-val coerce_tmp[2027716]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                  (2027718 'move' coerce_tmp[2027716](2027720 'deref' call_tmp[2027707]))
                  (2027722 '=' start[2027714] coerce_tmp[2027716])
                  (2027725 'noop')
                  ref call_tmp[2027726]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                  (2027728 'move' call_tmp[2027726](2027730 '.' tmp[2027550] x1[1040243]))
                  const-val end[2027733]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                  const-val coerce_tmp[2027735]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                  (2027737 'move' coerce_tmp[2027735](2027739 'deref' call_tmp[2027726]))
                  (2027741 '=' end[2027733] coerce_tmp[2027735])
                  (2027744 'noop')
                  val _indexOfInterest[2027745]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                  val _iterator[2027747]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead at end of block" "expr temp" "temp"
                  const-val call_tmp[2027749]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val ret_tmp[2027751]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
                  (2027754 call chpl_direct_param_stride_range_iter[1102713] coerce_tmp[2027716] coerce_tmp[2027735] ret_tmp[2027751])
                  (2027758 'move' call_tmp[2027749] ret_tmp[2027751])
                  (2027761 'move' _iterator[2027747](2027764 call _getIterator[1103490] call_tmp[2027749]))
                  {
                    val ret[2088205]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead after last mention" "RVV" "temp"
                    val call_tmp[2088207]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    (2088210 call chpl_range_check_stride[1103033])
                    val i[2088211]:int(64)[13] "dead at end of block" "insert auto destroy"
                    val call_tmp[2088213]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    (2088215 'move' i[2088211] 0)
                    val call_tmp[2088218]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    const-val default_arg_first[2088220]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                    const-val low[2088346]:int(64)[13] "temp"
                    (2088351 'move' low[2088346](2088348 '.v' _iterator[2027747] F0_low[2115192]))
                    (2088222 'move' default_arg_first[2088220](2088225 call chpl_checkIfRangeIterWillOverflow_default_first[1103387] low[2088346]))
                    const-val default_arg_last[2088227]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                    const-val high[2088353]:int(64)[13] "temp"
                    (2088358 'move' high[2088353](2088355 '.v' _iterator[2027747] F1_high[2115196]))
                    (2088229 'move' default_arg_last[2088227](2088232 call chpl_checkIfRangeIterWillOverflow_default_last[1103415] high[2088353]))
                    const-val _return_tmp_[2088234]:bool[10] "dead after last mention" "temp"
                    const-val low[2088360]:int(64)[13] "temp"
                    (2088365 'move' low[2088360](2088362 '.v' _iterator[2027747] F0_low[2115192]))
                    const-val high[2088367]:int(64)[13] "temp"
                    (2088372 'move' high[2088367](2088369 '.v' _iterator[2027747] F1_high[2115196]))
                    (2088236 'move' _return_tmp_[2088234](2088239 call chpl_checkIfRangeIterWillOverflow[1096265] low[2088360] high[2088367] 1 default_arg_first[2088220] default_arg_last[2088227] 1))
                    CForLoop[2088246]
                    {
                      const-val yret[2088261]:int(64)[13] "dead after last mention" "YVV" "temp"
                      (2088263 'move' yret[2088261] i[2088211])
                      const-val _yieldedIndex[2088277]:int(64)[13] "temp"
                      (2088344 'move' _yieldedIndex[2088277] i[2088211])
                      {
                        const-val i[2088279]:int(64)[13] "const" "index var" "insert auto destroy"
                        (2088281 'move' i[2088279] _yieldedIndex[2088277])
                        const-val yret[2088284]:int(64)[13] "dead after last mention" "YVV" "temp"
                        (2088286 'move' yret[2088284] _yieldedIndex[2088277])
                        const-val _yieldedIndex[2088289]:int(64)[13] "temp"
                        (2088291 'move' _yieldedIndex[2088289] _yieldedIndex[2088277])
                        {
                          const-val i[2088295]:int(64)[13] "const" "index var" "insert auto destroy"
                          (2088297 'move' i[2088295] _yieldedIndex[2088289])
                          const-val yret[2088300]:int(64)[13] "dead after last mention" "YVV" "temp"
                          (2088302 'move' yret[2088300] _yieldedIndex[2088289])
                          const-val _yieldedIndex[2088305]:int(64)[13] "temp"
                          (2088307 'move' _yieldedIndex[2088305] _yieldedIndex[2088289])
                          {
                            const-val i[2088311]:int(64)[13] "const" "index var" "insert auto destroy"
                            (2088313 'move' i[2088311] _yieldedIndex[2088305])
                            {
                              ref call_tmp[2088317]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
                              ref _this_tmp_[2088319]:_ref(_ddata(locale))[1255592] "dead after last mention" "temp"
                              (2088321 'move' _this_tmp_[2088319](2088324 call data[1259861] this[1832317]))
                              val coerce_tmp[2088326]:_ddata(locale)[1255583] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                              (2088328 'move' coerce_tmp[2088326](2088330 'deref' _this_tmp_[2088319]))
                              (2088332 'move' call_tmp[2088317](2088335 call this[1303586] coerce_tmp[2088326] i[2088311]))
                              (2088339 call chpl__autoDestroy[1601737] call_tmp[2088317])
                            }
                            label _continueLabel[2088341]
                          }
                        }
                      }
                      {
                        const-val low[2088374]:int(64)[13] "temp"
                        (2088379 'move' low[2088374](2088376 '.v' _iterator[2027747] F0_low[2115192]))
                        (2088248 '=' i[2088211] low[2088374])
                      }
                      {
                        const-val high[2088381]:int(64)[13] "temp"
                        (2088386 'move' high[2088381](2088383 '.v' _iterator[2027747] F1_high[2115196]))
                        (2088252 '<=' i[2088211] high[2088381])
                      }
                      {
                        val call_tmp[2088256]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                        (2088258 '+=' i[2088211] 1)
                      }
                    }
                    label _endchpl_direct_param_stride_range_iter[2088273]
                  }
                  (2027812 call _freeIterator[1103663] _iterator[2027747])
                  (2027815 call chpl__autoDestroy[1674803] tmp[2027550])
                  label _endchpl_direct_counted_range_iter_helper[2027817]
                }
                (2027820 call _freeIterator[1103913] _iterator[2027491])
                label _endchpl_direct_counted_range_iter[2027822]
              }
              label _breakLabel[1832753]
              (1929776 call _freeIterator[1104163] _iterator[1832698])
            }
          }
        }
      }
      ref call_tmp[1832758]:_ref(_ddata(locale))[1255592] "dead after last mention" "maybe param" "temp"
      (1832760 'move' call_tmp[1832758](1832763 call data[1259861] this[1832317]))
      val coerce_tmp[1833288]:_ddata(locale)[1255583] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1833292 'move' coerce_tmp[1833288](1833290 'deref' call_tmp[1832758]))
      (1832767 call _ddata_free[1833230] coerce_tmp[1833288] numInd[1832441])
    }
    (1832773 return _void[55])
  }
  function [domain(1,int(64),false)] unmanaged localesSignal?[1318401].dsiDestroyArr[1833299](const in arg this[1833303]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401], const in arg deinitElts[1833305]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual" "no return value for void"
  {
    ref call_tmp[1833341]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1833343 'move' call_tmp[1833341](1833346 call externArr[1833763] this[1833303]))
    const-val call_tmp[1833349]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1833791]:bool[10] "dead after last mention" "const" "temp"
    (1833793 'move' tmp[1833791](1833795 'deref' call_tmp[1833341]))
    (1833351 'move' call_tmp[1833349] tmp[1833791])
    if call_tmp[1833349]
    {
      ref call_tmp[1833358]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
      (1833360 'move' call_tmp[1833358](1833363 call _borrowed[1833797] this[1833303]))
      const-val call_tmp[1833366]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1833825]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1833829 'move' coerce_tmp[1833825](1833827 'deref' call_tmp[1833358]))
      (1833368 'move' call_tmp[1833366](1833371 call ![7494] coerce_tmp[1833825]))
      const-val call_tmp[1833373]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1833375 'move' call_tmp[1833373] call_tmp[1833366])
      if call_tmp[1833373]
      {
        ref call_tmp[1833382]:_ref(c_void_ptr)[938311] "dead after last mention" "maybe param" "temp"
        (1833384 'move' call_tmp[1833382](1833387 call externFreeFunc[1833832] this[1833303]))
        ref call_tmp[1833390]:_ref(_ddata(unmanaged localesSignal?))[1317571] "dead after last mention" "maybe param" "temp"
        (1833392 'move' call_tmp[1833390](1833395 call data[1320395] this[1833303]))
        val call_tmp[1833398]:c_ptr(_ddata(unmanaged localesSignal?))[1833883] "dead after last mention" "expr temp" "maybe param" "temp"
        (1833400 'move' call_tmp[1833398](1833403 call c_ptrTo[1833861] call_tmp[1833390]))
        const-val coerce_tmp[1834094]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1834098 'move' coerce_tmp[1834094](1834096 'deref' call_tmp[1833382]))
        const-val coerce_tmp[1834100]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1834106 'move' coerce_tmp[1834100](1834102 'cast' c_void_ptr[149] call_tmp[1833398]))
        (1833406 call chpl_call_free_func[188708] coerce_tmp[1834094] coerce_tmp[1834100])
      }
    }
    {
      ref call_tmp[1833411]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
      (1833413 'move' call_tmp[1833411](1833416 call dom[1319786] this[1833303]))
      const-val call_tmp[1833419]:int(64)[13] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1834110]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1834114 'move' coerce_tmp[1834110](1834112 'deref' call_tmp[1833411]))
      val coerce_tmp[1834116]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1834121 'move' coerce_tmp[1834116] coerce_tmp[1834110])
      (1833421 'move' call_tmp[1833419](1833424 call dsiNumIndices[1263823] coerce_tmp[1834116]))
      const-val numInd[1833427]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1833429 'move' numInd[1833427] call_tmp[1833419])
      val call_tmp[1833433]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
      const-val numElts[1833441]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1833443 'move' numElts[1833441] numInd[1833427])
      const-val tmp[1833449]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val tmp[1833451]:bool[10] "dead after last mention" "maybe param" "temp"
      (1833453 'move' tmp[1833451] deinitElts[1833305])
      val tmp[1833469]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1833471]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1833473]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1833475 'move' call_tmp[1833473] tmp[1833451])
      (1833480 'move' tmp[1833471] call_tmp[1833473])
      if tmp[1833471]
      {
        const-val tmp[1833487]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        ref call_tmp[1833489]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
        (1833491 'move' call_tmp[1833489](1833494 call deinitElts[1323509] this[1833303]))
        const-val tmp[1834130]:bool[10] "dead after last mention" "const" "temp"
        (1834132 'move' tmp[1834130](1834134 'deref' call_tmp[1833489]))
        (1833497 'move' tmp[1833487] tmp[1834130])
        (1833502 'move' tmp[1833469] tmp[1833487])
      }
      {
        (1833508 'move' tmp[1833469] 0)
      }
      (1833514 'move' tmp[1833449] tmp[1833469])
      val tmp[1833530]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1833532]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1833534]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1833536 'move' call_tmp[1833534] tmp[1833449])
      (1833541 'move' tmp[1833532] call_tmp[1833534])
      if tmp[1833532]
      {
        const-val tmp[1833548]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1833550]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1833552 'move' call_tmp[1833550](1833555 call >[437788] numInd[1833427] 0))
        (1833558 'move' tmp[1833548] call_tmp[1833550])
        (1833563 'move' tmp[1833530] tmp[1833548])
      }
      {
        (1833569 'move' tmp[1833530] 0)
      }
      const-val call_tmp[1833575]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1833577 'move' call_tmp[1833575] tmp[1833530])
      if call_tmp[1833575]
      {
        ref call_tmp[1833584]:_ref(localesSignal)[1316692] "dead after last mention" "maybe param" "temp"
        ref _this_tmp_[1834141]:_ref(_ddata(unmanaged localesSignal?))[1317571] "dead after last mention" "temp"
        (1834143 'move' _this_tmp_[1834141](1833589 call data[1320395] this[1833303]))
        val coerce_tmp[1834148]:_ddata(unmanaged localesSignal?)[1317562] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1834152 'move' coerce_tmp[1834148](1834150 'deref' _this_tmp_[1834141]))
        (1833586 'move' call_tmp[1833584](1833592 call this[1330107] coerce_tmp[1834148] 0))
        val call_tmp[1833594]:localesSignal[92278] "dead after last mention" "expr temp" "maybe param" "temp"
        (1833596 'move' call_tmp[1833594](1833598 'deref' call_tmp[1833584]))
      }
      ref call_tmp[1833744]:_ref(_ddata(unmanaged localesSignal?))[1317571] "dead after last mention" "maybe param" "temp"
      (1833746 'move' call_tmp[1833744](1833749 call data[1320395] this[1833303]))
      val coerce_tmp[1834219]:_ddata(unmanaged localesSignal?)[1317562] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1834223 'move' coerce_tmp[1834219](1834221 'deref' call_tmp[1833744]))
      (1833753 call _ddata_free[1834161] coerce_tmp[1834219] numInd[1833427])
    }
    (1833759 return _void[55])
  }
  function [domain(1,int(64),false)] real(64)[1358944].dsiDestroyArr[1834230](const in arg this[1834234]:[domain(1,int(64),false)] real(64)[1358944], const in arg deinitElts[1834236]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual" "no return value for void"
  {
    ref call_tmp[1834272]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1834274 'move' call_tmp[1834272](1834277 call externArr[1834694] this[1834234]))
    const-val call_tmp[1834280]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1834722]:bool[10] "dead after last mention" "const" "temp"
    (1834724 'move' tmp[1834722](1834726 'deref' call_tmp[1834272]))
    (1834282 'move' call_tmp[1834280] tmp[1834722])
    if call_tmp[1834280]
    {
      ref call_tmp[1834289]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
      (1834291 'move' call_tmp[1834289](1834294 call _borrowed[1834728] this[1834234]))
      const-val call_tmp[1834297]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1834756]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1834760 'move' coerce_tmp[1834756](1834758 'deref' call_tmp[1834289]))
      (1834299 'move' call_tmp[1834297](1834302 call ![7494] coerce_tmp[1834756]))
      const-val call_tmp[1834304]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1834306 'move' call_tmp[1834304] call_tmp[1834297])
      if call_tmp[1834304]
      {
        ref call_tmp[1834313]:_ref(c_void_ptr)[938311] "dead after last mention" "maybe param" "temp"
        (1834315 'move' call_tmp[1834313](1834318 call externFreeFunc[1834763] this[1834234]))
        ref call_tmp[1834321]:_ref(_ddata(real(64)))[1358114] "dead after last mention" "maybe param" "temp"
        (1834323 'move' call_tmp[1834321](1834326 call data[1360938] this[1834234]))
        val call_tmp[1834329]:c_ptr(_ddata(real(64)))[1834814] "dead after last mention" "expr temp" "maybe param" "temp"
        (1834331 'move' call_tmp[1834329](1834334 call c_ptrTo[1834792] call_tmp[1834321]))
        const-val coerce_tmp[1835025]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1835029 'move' coerce_tmp[1835025](1835027 'deref' call_tmp[1834313]))
        const-val coerce_tmp[1835031]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1835037 'move' coerce_tmp[1835031](1835033 'cast' c_void_ptr[149] call_tmp[1834329]))
        (1834337 call chpl_call_free_func[188708] coerce_tmp[1835025] coerce_tmp[1835031])
      }
    }
    {
      ref call_tmp[1834342]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
      (1834344 'move' call_tmp[1834342](1834347 call dom[1360329] this[1834234]))
      const-val call_tmp[1834350]:int(64)[13] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1835041]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1835045 'move' coerce_tmp[1835041](1835043 'deref' call_tmp[1834342]))
      val coerce_tmp[1835047]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1835052 'move' coerce_tmp[1835047] coerce_tmp[1835041])
      (1834352 'move' call_tmp[1834350](1834355 call dsiNumIndices[1263823] coerce_tmp[1835047]))
      const-val numInd[1834358]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1834360 'move' numInd[1834358] call_tmp[1834350])
      val call_tmp[1834364]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
      const-val numElts[1834372]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1834374 'move' numElts[1834372] numInd[1834358])
      const-val tmp[1834380]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val tmp[1834382]:bool[10] "dead after last mention" "maybe param" "temp"
      (1834384 'move' tmp[1834382] deinitElts[1834236])
      val tmp[1834400]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1834402]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1834404]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1834406 'move' call_tmp[1834404] tmp[1834382])
      (1834411 'move' tmp[1834402] call_tmp[1834404])
      if tmp[1834402]
      {
        const-val tmp[1834418]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        ref call_tmp[1834420]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
        (1834422 'move' call_tmp[1834420](1834425 call deinitElts[1364243] this[1834234]))
        const-val tmp[1835061]:bool[10] "dead after last mention" "const" "temp"
        (1835063 'move' tmp[1835061](1835065 'deref' call_tmp[1834420]))
        (1834428 'move' tmp[1834418] tmp[1835061])
        (1834433 'move' tmp[1834400] tmp[1834418])
      }
      {
        (1834439 'move' tmp[1834400] 0)
      }
      (1834445 'move' tmp[1834380] tmp[1834400])
      val tmp[1834461]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1834463]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1834465]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1834467 'move' call_tmp[1834465] tmp[1834380])
      (1834472 'move' tmp[1834463] call_tmp[1834465])
      if tmp[1834463]
      {
        const-val tmp[1834479]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1834481]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1834483 'move' call_tmp[1834481](1834486 call >[437788] numInd[1834358] 0))
        (1834489 'move' tmp[1834479] call_tmp[1834481])
        (1834494 'move' tmp[1834461] tmp[1834479])
      }
      {
        (1834500 'move' tmp[1834461] 0)
      }
      const-val call_tmp[1834506]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1834508 'move' call_tmp[1834506] tmp[1834461])
      if call_tmp[1834506]
      {
        ref call_tmp[1834515]:_ref(real(64))[936906] "dead after last mention" "maybe param" "temp"
        ref _this_tmp_[1835072]:_ref(_ddata(real(64)))[1358114] "dead after last mention" "temp"
        (1835074 'move' _this_tmp_[1835072](1834520 call data[1360938] this[1834234]))
        val coerce_tmp[1835079]:_ddata(real(64))[1358105] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1835083 'move' coerce_tmp[1835079](1835081 'deref' _this_tmp_[1835072]))
        (1834517 'move' call_tmp[1834515](1834523 call this[1391523] coerce_tmp[1835079] 0))
        const-val call_tmp[1834525]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp"
        (1834527 'move' call_tmp[1834525](1834529 'deref' call_tmp[1834515]))
      }
      ref call_tmp[1834675]:_ref(_ddata(real(64)))[1358114] "dead after last mention" "maybe param" "temp"
      (1834677 'move' call_tmp[1834675](1834680 call data[1360938] this[1834234]))
      val coerce_tmp[1835150]:_ddata(real(64))[1358105] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1835154 'move' coerce_tmp[1835150](1835152 'deref' call_tmp[1834675]))
      (1834684 call _ddata_free[1835092] coerce_tmp[1835150] numInd[1834358])
    }
    (1834690 return _void[55])
  }
  function [domain(1,int(64),false)] int(64)[1368867].dsiDestroyArr[1835161](const in arg this[1835165]:[domain(1,int(64),false)] int(64)[1368867], const in arg deinitElts[1835167]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual" "no return value for void"
  {
    ref call_tmp[1835203]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1835205 'move' call_tmp[1835203](1835208 call externArr[1835625] this[1835165]))
    const-val call_tmp[1835211]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1835653]:bool[10] "dead after last mention" "const" "temp"
    (1835655 'move' tmp[1835653](1835657 'deref' call_tmp[1835203]))
    (1835213 'move' call_tmp[1835211] tmp[1835653])
    if call_tmp[1835211]
    {
      ref call_tmp[1835220]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
      (1835222 'move' call_tmp[1835220](1835225 call _borrowed[1835659] this[1835165]))
      const-val call_tmp[1835228]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1835687]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1835691 'move' coerce_tmp[1835687](1835689 'deref' call_tmp[1835220]))
      (1835230 'move' call_tmp[1835228](1835233 call ![7494] coerce_tmp[1835687]))
      const-val call_tmp[1835235]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1835237 'move' call_tmp[1835235] call_tmp[1835228])
      if call_tmp[1835235]
      {
        ref call_tmp[1835244]:_ref(c_void_ptr)[938311] "dead after last mention" "maybe param" "temp"
        (1835246 'move' call_tmp[1835244](1835249 call externFreeFunc[1835694] this[1835165]))
        ref call_tmp[1835252]:_ref(_ddata(int(64)))[1368037] "dead after last mention" "maybe param" "temp"
        (1835254 'move' call_tmp[1835252](1835257 call data[1370861] this[1835165]))
        val call_tmp[1835260]:c_ptr(_ddata(int(64)))[1835745] "dead after last mention" "expr temp" "maybe param" "temp"
        (1835262 'move' call_tmp[1835260](1835265 call c_ptrTo[1835723] call_tmp[1835252]))
        const-val coerce_tmp[1835956]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1835960 'move' coerce_tmp[1835956](1835958 'deref' call_tmp[1835244]))
        const-val coerce_tmp[1835962]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1835968 'move' coerce_tmp[1835962](1835964 'cast' c_void_ptr[149] call_tmp[1835260]))
        (1835268 call chpl_call_free_func[188708] coerce_tmp[1835956] coerce_tmp[1835962])
      }
    }
    {
      ref call_tmp[1835273]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
      (1835275 'move' call_tmp[1835273](1835278 call dom[1370252] this[1835165]))
      const-val call_tmp[1835281]:int(64)[13] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1835972]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1835976 'move' coerce_tmp[1835972](1835974 'deref' call_tmp[1835273]))
      val coerce_tmp[1835978]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1835983 'move' coerce_tmp[1835978] coerce_tmp[1835972])
      (1835283 'move' call_tmp[1835281](1835286 call dsiNumIndices[1263823] coerce_tmp[1835978]))
      const-val numInd[1835289]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1835291 'move' numInd[1835289] call_tmp[1835281])
      val call_tmp[1835295]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
      const-val numElts[1835303]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1835305 'move' numElts[1835303] numInd[1835289])
      const-val tmp[1835311]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val tmp[1835313]:bool[10] "dead after last mention" "maybe param" "temp"
      (1835315 'move' tmp[1835313] deinitElts[1835167])
      val tmp[1835331]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1835333]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1835335]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1835337 'move' call_tmp[1835335] tmp[1835313])
      (1835342 'move' tmp[1835333] call_tmp[1835335])
      if tmp[1835333]
      {
        const-val tmp[1835349]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        ref call_tmp[1835351]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
        (1835353 'move' call_tmp[1835351](1835356 call deinitElts[1372718] this[1835165]))
        const-val tmp[1835992]:bool[10] "dead after last mention" "const" "temp"
        (1835994 'move' tmp[1835992](1835996 'deref' call_tmp[1835351]))
        (1835359 'move' tmp[1835349] tmp[1835992])
        (1835364 'move' tmp[1835331] tmp[1835349])
      }
      {
        (1835370 'move' tmp[1835331] 0)
      }
      (1835376 'move' tmp[1835311] tmp[1835331])
      val tmp[1835392]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1835394]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1835396]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1835398 'move' call_tmp[1835396] tmp[1835311])
      (1835403 'move' tmp[1835394] call_tmp[1835396])
      if tmp[1835394]
      {
        const-val tmp[1835410]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1835412]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1835414 'move' call_tmp[1835412](1835417 call >[437788] numInd[1835289] 0))
        (1835420 'move' tmp[1835410] call_tmp[1835412])
        (1835425 'move' tmp[1835392] tmp[1835410])
      }
      {
        (1835431 'move' tmp[1835392] 0)
      }
      const-val call_tmp[1835437]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1835439 'move' call_tmp[1835437] tmp[1835392])
      if call_tmp[1835437]
      {
        ref call_tmp[1835446]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        ref _this_tmp_[1836003]:_ref(_ddata(int(64)))[1368037] "dead after last mention" "temp"
        (1836005 'move' _this_tmp_[1836003](1835451 call data[1370861] this[1835165]))
        val coerce_tmp[1836010]:_ddata(int(64))[1368028] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1836014 'move' coerce_tmp[1836010](1836012 'deref' _this_tmp_[1836003]))
        (1835448 'move' call_tmp[1835446](1835454 call this[1379396] coerce_tmp[1836010] 0))
        const-val call_tmp[1835456]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1835458 'move' call_tmp[1835456](1835460 'deref' call_tmp[1835446]))
      }
      ref call_tmp[1835606]:_ref(_ddata(int(64)))[1368037] "dead after last mention" "maybe param" "temp"
      (1835608 'move' call_tmp[1835606](1835611 call data[1370861] this[1835165]))
      val coerce_tmp[1836081]:_ddata(int(64))[1368028] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1836085 'move' coerce_tmp[1836081](1836083 'deref' call_tmp[1835606]))
      (1835615 call _ddata_free[1836023] coerce_tmp[1836081] numInd[1835289])
    }
    (1835621 return _void[55])
  }
  function [domain(1,int(64),false)] range(int(64),bounded,false)[1409224].dsiDestroyArr[1836092](const in arg this[1836096]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224], const in arg deinitElts[1836098]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual" "no return value for void"
  {
    ref call_tmp[1836134]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1836136 'move' call_tmp[1836134](1836139 call externArr[1836556] this[1836096]))
    const-val call_tmp[1836142]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1836584]:bool[10] "dead after last mention" "const" "temp"
    (1836586 'move' tmp[1836584](1836588 'deref' call_tmp[1836134]))
    (1836144 'move' call_tmp[1836142] tmp[1836584])
    if call_tmp[1836142]
    {
      ref call_tmp[1836151]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
      (1836153 'move' call_tmp[1836151](1836156 call _borrowed[1836590] this[1836096]))
      const-val call_tmp[1836159]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1836618]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1836622 'move' coerce_tmp[1836618](1836620 'deref' call_tmp[1836151]))
      (1836161 'move' call_tmp[1836159](1836164 call ![7494] coerce_tmp[1836618]))
      const-val call_tmp[1836166]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1836168 'move' call_tmp[1836166] call_tmp[1836159])
      if call_tmp[1836166]
      {
        ref call_tmp[1836175]:_ref(c_void_ptr)[938311] "dead after last mention" "maybe param" "temp"
        (1836177 'move' call_tmp[1836175](1836180 call externFreeFunc[1836625] this[1836096]))
        ref call_tmp[1836183]:_ref(_ddata(range(int(64),bounded,false)))[1406051] "dead after last mention" "maybe param" "temp"
        (1836185 'move' call_tmp[1836183](1836188 call data[1411200] this[1836096]))
        val call_tmp[1836191]:c_ptr(_ddata(range(int(64),bounded,false)))[1836676] "dead after last mention" "expr temp" "maybe param" "temp"
        (1836193 'move' call_tmp[1836191](1836196 call c_ptrTo[1836654] call_tmp[1836183]))
        const-val coerce_tmp[1836887]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1836891 'move' coerce_tmp[1836887](1836889 'deref' call_tmp[1836175]))
        const-val coerce_tmp[1836893]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1836899 'move' coerce_tmp[1836893](1836895 'cast' c_void_ptr[149] call_tmp[1836191]))
        (1836199 call chpl_call_free_func[188708] coerce_tmp[1836887] coerce_tmp[1836893])
      }
    }
    {
      ref call_tmp[1836204]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
      (1836206 'move' call_tmp[1836204](1836209 call dom[1410591] this[1836096]))
      const-val call_tmp[1836212]:int(64)[13] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1836903]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1836907 'move' coerce_tmp[1836903](1836905 'deref' call_tmp[1836204]))
      val coerce_tmp[1836909]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1836914 'move' coerce_tmp[1836909] coerce_tmp[1836903])
      (1836214 'move' call_tmp[1836212](1836217 call dsiNumIndices[1263823] coerce_tmp[1836909]))
      const-val numInd[1836220]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1836222 'move' numInd[1836220] call_tmp[1836212])
      val call_tmp[1836226]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
      const-val numElts[1836234]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1836236 'move' numElts[1836234] numInd[1836220])
      const-val tmp[1836242]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val tmp[1836244]:bool[10] "dead after last mention" "maybe param" "temp"
      (1836246 'move' tmp[1836244] deinitElts[1836098])
      val tmp[1836262]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1836264]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1836266]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1836268 'move' call_tmp[1836266] tmp[1836244])
      (1836273 'move' tmp[1836264] call_tmp[1836266])
      if tmp[1836264]
      {
        const-val tmp[1836280]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        ref call_tmp[1836282]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
        (1836284 'move' call_tmp[1836282](1836287 call deinitElts[1414206] this[1836096]))
        const-val tmp[1836923]:bool[10] "dead after last mention" "const" "temp"
        (1836925 'move' tmp[1836923](1836927 'deref' call_tmp[1836282]))
        (1836290 'move' tmp[1836280] tmp[1836923])
        (1836295 'move' tmp[1836262] tmp[1836280])
      }
      {
        (1836301 'move' tmp[1836262] 0)
      }
      (1836307 'move' tmp[1836242] tmp[1836262])
      val tmp[1836323]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1836325]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1836327]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1836329 'move' call_tmp[1836327] tmp[1836242])
      (1836334 'move' tmp[1836325] call_tmp[1836327])
      if tmp[1836325]
      {
        const-val tmp[1836341]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1836343]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1836345 'move' call_tmp[1836343](1836348 call >[437788] numInd[1836220] 0))
        (1836351 'move' tmp[1836341] call_tmp[1836343])
        (1836356 'move' tmp[1836323] tmp[1836341])
      }
      {
        (1836362 'move' tmp[1836323] 0)
      }
      const-val call_tmp[1836368]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1836370 'move' call_tmp[1836368] tmp[1836323])
      if call_tmp[1836368]
      {
        ref call_tmp[1836377]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
        ref _this_tmp_[1836934]:_ref(_ddata(range(int(64),bounded,false)))[1406051] "dead after last mention" "temp"
        (1836936 'move' _this_tmp_[1836934](1836382 call data[1411200] this[1836096]))
        val coerce_tmp[1836941]:_ddata(range(int(64),bounded,false))[1406042] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1836945 'move' coerce_tmp[1836941](1836943 'deref' _this_tmp_[1836934]))
        (1836379 'move' call_tmp[1836377](1836385 call this[1407601] coerce_tmp[1836941] 0))
        const-val call_tmp[1836387]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp"
        (1836389 'move' call_tmp[1836387](1836391 'deref' call_tmp[1836377]))
      }
      ref call_tmp[1836537]:_ref(_ddata(range(int(64),bounded,false)))[1406051] "dead after last mention" "maybe param" "temp"
      (1836539 'move' call_tmp[1836537](1836542 call data[1411200] this[1836096]))
      val coerce_tmp[1837012]:_ddata(range(int(64),bounded,false))[1406042] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1837016 'move' coerce_tmp[1837012](1837014 'deref' call_tmp[1836537]))
      (1836546 call _ddata_free[1836954] coerce_tmp[1837012] numInd[1836220])
    }
    (1836552 return _void[55])
  }
  function [domain(1,int(64),false)] uint(64)[1450261].dsiDestroyArr[1837023](const in arg this[1837027]:[domain(1,int(64),false)] uint(64)[1450261], const in arg deinitElts[1837029]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual" "no return value for void"
  {
    ref call_tmp[1837065]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1837067 'move' call_tmp[1837065](1837070 call externArr[1837487] this[1837027]))
    const-val call_tmp[1837073]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1837515]:bool[10] "dead after last mention" "const" "temp"
    (1837517 'move' tmp[1837515](1837519 'deref' call_tmp[1837065]))
    (1837075 'move' call_tmp[1837073] tmp[1837515])
    if call_tmp[1837073]
    {
      ref call_tmp[1837082]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
      (1837084 'move' call_tmp[1837082](1837087 call _borrowed[1837521] this[1837027]))
      const-val call_tmp[1837090]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1837549]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1837553 'move' coerce_tmp[1837549](1837551 'deref' call_tmp[1837082]))
      (1837092 'move' call_tmp[1837090](1837095 call ![7494] coerce_tmp[1837549]))
      const-val call_tmp[1837097]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1837099 'move' call_tmp[1837097] call_tmp[1837090])
      if call_tmp[1837097]
      {
        ref call_tmp[1837106]:_ref(c_void_ptr)[938311] "dead after last mention" "maybe param" "temp"
        (1837108 'move' call_tmp[1837106](1837111 call externFreeFunc[1837556] this[1837027]))
        ref call_tmp[1837114]:_ref(_ddata(uint(64)))[1449431] "dead after last mention" "maybe param" "temp"
        (1837116 'move' call_tmp[1837114](1837119 call data[1452255] this[1837027]))
        val call_tmp[1837122]:c_ptr(_ddata(uint(64)))[1837607] "dead after last mention" "expr temp" "maybe param" "temp"
        (1837124 'move' call_tmp[1837122](1837127 call c_ptrTo[1837585] call_tmp[1837114]))
        const-val coerce_tmp[1837818]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1837822 'move' coerce_tmp[1837818](1837820 'deref' call_tmp[1837106]))
        const-val coerce_tmp[1837824]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1837830 'move' coerce_tmp[1837824](1837826 'cast' c_void_ptr[149] call_tmp[1837122]))
        (1837130 call chpl_call_free_func[188708] coerce_tmp[1837818] coerce_tmp[1837824])
      }
    }
    {
      ref call_tmp[1837135]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
      (1837137 'move' call_tmp[1837135](1837140 call dom[1451646] this[1837027]))
      const-val call_tmp[1837143]:int(64)[13] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1837834]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1837838 'move' coerce_tmp[1837834](1837836 'deref' call_tmp[1837135]))
      val coerce_tmp[1837840]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1837845 'move' coerce_tmp[1837840] coerce_tmp[1837834])
      (1837145 'move' call_tmp[1837143](1837148 call dsiNumIndices[1263823] coerce_tmp[1837840]))
      const-val numInd[1837151]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1837153 'move' numInd[1837151] call_tmp[1837143])
      val call_tmp[1837157]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
      const-val numElts[1837165]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1837167 'move' numElts[1837165] numInd[1837151])
      const-val tmp[1837173]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val tmp[1837175]:bool[10] "dead after last mention" "maybe param" "temp"
      (1837177 'move' tmp[1837175] deinitElts[1837029])
      val tmp[1837193]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1837195]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1837197]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1837199 'move' call_tmp[1837197] tmp[1837175])
      (1837204 'move' tmp[1837195] call_tmp[1837197])
      if tmp[1837195]
      {
        const-val tmp[1837211]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        ref call_tmp[1837213]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
        (1837215 'move' call_tmp[1837213](1837218 call deinitElts[1454361] this[1837027]))
        const-val tmp[1837854]:bool[10] "dead after last mention" "const" "temp"
        (1837856 'move' tmp[1837854](1837858 'deref' call_tmp[1837213]))
        (1837221 'move' tmp[1837211] tmp[1837854])
        (1837226 'move' tmp[1837193] tmp[1837211])
      }
      {
        (1837232 'move' tmp[1837193] 0)
      }
      (1837238 'move' tmp[1837173] tmp[1837193])
      val tmp[1837254]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1837256]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1837258]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1837260 'move' call_tmp[1837258] tmp[1837173])
      (1837265 'move' tmp[1837256] call_tmp[1837258])
      if tmp[1837256]
      {
        const-val tmp[1837272]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1837274]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1837276 'move' call_tmp[1837274](1837279 call >[437788] numInd[1837151] 0))
        (1837282 'move' tmp[1837272] call_tmp[1837274])
        (1837287 'move' tmp[1837254] tmp[1837272])
      }
      {
        (1837293 'move' tmp[1837254] 0)
      }
      const-val call_tmp[1837299]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1837301 'move' call_tmp[1837299] tmp[1837254])
      if call_tmp[1837299]
      {
        ref call_tmp[1837308]:_ref(uint(64))[936790] "dead after last mention" "maybe param" "temp"
        ref _this_tmp_[1837865]:_ref(_ddata(uint(64)))[1449431] "dead after last mention" "temp"
        (1837867 'move' _this_tmp_[1837865](1837313 call data[1452255] this[1837027]))
        val coerce_tmp[1837872]:_ddata(uint(64))[1449422] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1837876 'move' coerce_tmp[1837872](1837874 'deref' _this_tmp_[1837865]))
        (1837310 'move' call_tmp[1837308](1837316 call this[1460086] coerce_tmp[1837872] 0))
        const-val call_tmp[1837318]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (1837320 'move' call_tmp[1837318](1837322 'deref' call_tmp[1837308]))
      }
      ref call_tmp[1837468]:_ref(_ddata(uint(64)))[1449431] "dead after last mention" "maybe param" "temp"
      (1837470 'move' call_tmp[1837468](1837473 call data[1452255] this[1837027]))
      val coerce_tmp[1837943]:_ddata(uint(64))[1449422] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1837947 'move' coerce_tmp[1837943](1837945 'deref' call_tmp[1837468]))
      (1837477 call _ddata_free[1837885] coerce_tmp[1837943] numInd[1837151])
    }
    (1837483 return _void[55])
  }
  function [domain(1,int(64),false)] locale[1256675].theData[1303439](const in arg this[1303443]:[domain(1,int(64),false)] locale[1256675]) ref : _ref(_ddata(locale))[1255592] "inline" "instantiated generic" "invisible fn" "method" "primary method" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[1303445]:_ref(_ddata(locale))[1255592] "dead after last mention" "RVV" "temp"
    {
      ref call_tmp[1303532]:_ref(_ddata(locale))[1255592] "dead after last mention" "maybe param" "temp"
      (1303534 'move' call_tmp[1303532](1303537 call shiftedData[1264427] this[1303443]))
      (1303540 'move' ret[1303445] call_tmp[1303532])
      gotoReturn _end_theData[1303562] _end_theData[1303562]
    }
    label _end_theData[1303562]
    (1303564 return ret[1303445])
  }
  function [domain(1,int(64),false)] unmanaged localesSignal?[1318401].theData[1329960](const in arg this[1329964]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401]) ref : _ref(_ddata(unmanaged localesSignal?))[1317571] "inline" "instantiated generic" "invisible fn" "method" "primary method" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[1329966]:_ref(_ddata(unmanaged localesSignal?))[1317571] "dead after last mention" "RVV" "temp"
    {
      ref call_tmp[1330053]:_ref(_ddata(unmanaged localesSignal?))[1317571] "dead after last mention" "maybe param" "temp"
      (1330055 'move' call_tmp[1330053](1330058 call shiftedData[1323887] this[1329964]))
      (1330061 'move' ret[1329966] call_tmp[1330053])
      gotoReturn _end_theData[1330083] _end_theData[1330083]
    }
    label _end_theData[1330083]
    (1330085 return ret[1329966])
  }
  function [domain(1,int(64),false)] int(64)[1368867].theData[1379249](const in arg this[1379253]:[domain(1,int(64),false)] int(64)[1368867]) ref : _ref(_ddata(int(64)))[1368037] "inline" "instantiated generic" "invisible fn" "method" "primary method" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[1379255]:_ref(_ddata(int(64)))[1368037] "dead after last mention" "RVV" "temp"
    {
      ref call_tmp[1379342]:_ref(_ddata(int(64)))[1368037] "dead after last mention" "maybe param" "temp"
      (1379344 'move' call_tmp[1379342](1379347 call shiftedData[1373096] this[1379253]))
      (1379350 'move' ret[1379255] call_tmp[1379342])
      gotoReturn _end_theData[1379372] _end_theData[1379372]
    }
    label _end_theData[1379372]
    (1379374 return ret[1379255])
  }
  function [domain(1,int(64),false)] real(64)[1358944].theData[1391376](const in arg this[1391380]:[domain(1,int(64),false)] real(64)[1358944]) ref : _ref(_ddata(real(64)))[1358114] "inline" "instantiated generic" "invisible fn" "method" "primary method" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[1391382]:_ref(_ddata(real(64)))[1358114] "dead after last mention" "RVV" "temp"
    {
      ref call_tmp[1391469]:_ref(_ddata(real(64)))[1358114] "dead after last mention" "maybe param" "temp"
      (1391471 'move' call_tmp[1391469](1391474 call shiftedData[1364621] this[1391380]))
      (1391477 'move' ret[1391382] call_tmp[1391469])
      gotoReturn _end_theData[1391499] _end_theData[1391499]
    }
    label _end_theData[1391499]
    (1391501 return ret[1391382])
  }
  function [domain(1,int(64),false)] range(int(64),bounded,false)[1409224].theData[1436813](const in arg this[1436817]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224]) ref : _ref(_ddata(range(int(64),bounded,false)))[1406051] "inline" "instantiated generic" "invisible fn" "method" "primary method" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[1436819]:_ref(_ddata(range(int(64),bounded,false)))[1406051] "dead after last mention" "RVV" "temp"
    {
      ref call_tmp[1436906]:_ref(_ddata(range(int(64),bounded,false)))[1406051] "dead after last mention" "maybe param" "temp"
      (1436908 'move' call_tmp[1436906](1436911 call shiftedData[1414584] this[1436817]))
      (1436914 'move' ret[1436819] call_tmp[1436906])
      gotoReturn _end_theData[1436936] _end_theData[1436936]
    }
    label _end_theData[1436936]
    (1436938 return ret[1436819])
  }
  function [domain(1,int(64),false)] uint(64)[1450261].theData[1459939](const in arg this[1459943]:[domain(1,int(64),false)] uint(64)[1450261]) ref : _ref(_ddata(uint(64)))[1449431] "inline" "instantiated generic" "invisible fn" "method" "primary method" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[1459945]:_ref(_ddata(uint(64)))[1449431] "dead after last mention" "RVV" "temp"
    {
      ref call_tmp[1460032]:_ref(_ddata(uint(64)))[1449431] "dead after last mention" "maybe param" "temp"
      (1460034 'move' call_tmp[1460032](1460037 call shiftedData[1454739] this[1459943]))
      (1460040 'move' ret[1459945] call_tmp[1460032])
      gotoReturn _end_theData[1460062] _end_theData[1460062]
    }
    label _end_theData[1460062]
    (1460064 return ret[1459945])
  }
  function [domain(1,int(64),false)] locale[1256675].these[1298452](const in arg this[1298456]:[domain(1,int(64),false)] locale[1256675], const in arg tasksPerLocale[1298460]:int(64)[13], const in arg ignoreRunning[1298464]:bool[10], const in arg minIndicesPerTask[1298468]:int(64)[13], ref arg _retArg[1913404]:_ref(_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t)[1303992]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[2124612]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303881] "temp"
    (2124614 '.=' _ir[2124612] F0_this[2122781] this[1298456])
    (2124618 '.=' _ir[2124612] F1_tasksPerLocale[2122785] tasksPerLocale[1298460])
    (2124622 '.=' _ir[2124612] F2_ignoreRunning[2122789] ignoreRunning[1298464])
    (2124626 '.=' _ir[2124612] F3_minIndicesPerTask[2122793] minIndicesPerTask[1298468])
    (2124630 '=' _retArg[1913404] _ir[2124612])
    (2124633 return _void[55])
  }
  type _ic_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303875] val super[1303876]:object[22] "super class" val more[1303878]:int(64)[13] const-val F0_this[2122779]:[domain(1,int(64),false)] locale[1256675] const-val F1_tasksPerLocale[2122783]:int(64)[13] const-val F2_ignoreRunning[2122787]:bool[10] const-val F3_minIndicesPerTask[2122791]:int(64)[13] val F4__iterator[2122795]:_ic_chpl__serialViewIter[1303625] val F5_info[2122797]:[domain(1,int(64),false)] locale[1256675] val F6__iterator[2122799]:_ic_chpl_direct_pos_stride_range_iter[1303186] val F7_i[2122801]:int(64)[13] const-val F8_low[2122803]:int(64)[13] ref value[2122805]:_ref(locale)[949033]
  type _ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303881] const-val F0_this[2122781]:[domain(1,int(64),false)] locale[1256675] const-val F1_tasksPerLocale[2122785]:int(64)[13] const-val F2_ignoreRunning[2122789]:bool[10] const-val F3_minIndicesPerTask[2122793]:int(64)[13]
  function _getIterator[1303890](const  ref arg ir[1303892]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303881]) : _ic_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303875] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1303999]:_ic_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303875] "dead after last mention" "RVV" "temp"
    val _ic_[1303882]:_ic_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303875] "dead after last mention" "temp"
    const-val call_tmp[1304006]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1304009 'move' call_tmp[1304006](1304021 'sizeof_bundle' _ic_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303875]))
    const-val cast_tmp[1304024]:c_void_ptr[149] "dead after last mention" "temp"
    (1304026 'move' cast_tmp[1304024](1303887 call chpl_here_alloc[187788] call_tmp[1304006] 52))
    (1303895 'move' _ic_[1303882](1304028 'cast' _ic_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303875] cast_tmp[1304024]))
    (1303897 'setcid' _ic_[1303882])
    (1304004 'move' ret[1303999] _ic_[1303882])
    (2124636 '.=' ret[1303999] more[1303878] 1)
    const-val tmp[2124640]:[domain(1,int(64),false)] locale[1256675] "temp"
    (2124645 'move' tmp[2124640](2124641 '.v' ir[1303892] F0_this[2122781]))
    (2124647 '.=' ret[1303999] F0_this[2122779] tmp[2124640])
    const-val tmp[2124651]:int(64)[13] "temp"
    (2124656 'move' tmp[2124651](2124652 '.v' ir[1303892] F1_tasksPerLocale[2122785]))
    (2124658 '.=' ret[1303999] F1_tasksPerLocale[2122783] tmp[2124651])
    const-val tmp[2124662]:bool[10] "temp"
    (2124667 'move' tmp[2124662](2124663 '.v' ir[1303892] F2_ignoreRunning[2122789]))
    (2124669 '.=' ret[1303999] F2_ignoreRunning[2122787] tmp[2124662])
    const-val tmp[2124673]:int(64)[13] "temp"
    (2124678 'move' tmp[2124673](2124674 '.v' ir[1303892] F3_minIndicesPerTask[2122793]))
    (2124680 '.=' ret[1303999] F3_minIndicesPerTask[2122791] tmp[2124673])
    (1304001 return ret[1303999])
  }
  function [domain(1,int(64),false)] locale[1256675].these_default_minIndicesPerTask[1298630](const in arg this[1298633]:[domain(1,int(64),false)] locale[1256675]) : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[1298636]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val minIndicesPerTask[1298641]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1298645 'move' minIndicesPerTask[1298641] dataParMinGranularity[93296])
    (1298648 'move' ret[1298636] minIndicesPerTask[1298641])
    (1298639 return ret[1298636])
  }
  function [domain(1,int(64),false)] locale[1256675].these_default_ignoreRunning[1298599](const in arg this[1298602]:[domain(1,int(64),false)] locale[1256675]) : bool[10] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[1298605]:bool[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val ignoreRunning[1298610]:bool[10] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1298614 'move' ignoreRunning[1298610] dataParIgnoreRunningTasks[93290])
    (1298617 'move' ret[1298605] ignoreRunning[1298610])
    (1298608 return ret[1298605])
  }
  function [domain(1,int(64),false)] locale[1256675].these_default_tasksPerLocale[1298568](const in arg this[1298571]:[domain(1,int(64),false)] locale[1256675]) : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[1298574]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val tasksPerLocale[1298579]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1298583 'move' tasksPerLocale[1298579] dataParTasksPerLocale[93284])
    (1298586 'move' ret[1298574] tasksPerLocale[1298579])
    (1298577 return ret[1298574])
  }
  function [domain(1,int(64),false)] unmanaged localesSignal?[1318401].these[1326571](const in arg this[1326575]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401], const in arg tasksPerLocale[1326579]:int(64)[13], const in arg ignoreRunning[1326583]:bool[10], const in arg minIndicesPerTask[1326587]:int(64)[13], ref arg _retArg[1913752]:_ref(_ir_these_DefaultRectangularArr_1_int64_t_F_localesSignal_int64_t)[1330513]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[2132946]:_ir_these_DefaultRectangularArr_1_int64_t_F_localesSignal_int64_t[1330402] "temp"
    (2132948 '.=' _ir[2132946] F0_this[2131115] this[1326575])
    (2132952 '.=' _ir[2132946] F1_tasksPerLocale[2131119] tasksPerLocale[1326579])
    (2132956 '.=' _ir[2132946] F2_ignoreRunning[2131123] ignoreRunning[1326583])
    (2132960 '.=' _ir[2132946] F3_minIndicesPerTask[2131127] minIndicesPerTask[1326587])
    (2132964 '=' _retArg[1913752] _ir[2132946])
    (2132967 return _void[55])
  }
  type _ic_these_DefaultRectangularArr_1_int64_t_F_localesSignal_int64_t[1330396] val super[1330397]:object[22] "super class" val more[1330399]:int(64)[13] const-val F0_this[2131113]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] const-val F1_tasksPerLocale[2131117]:int(64)[13] const-val F2_ignoreRunning[2131121]:bool[10] const-val F3_minIndicesPerTask[2131125]:int(64)[13] val F4__iterator[2131129]:_ic_chpl__serialViewIter[1330146] val F5_info[2131131]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] val F6__iterator[2131133]:_ic_chpl_direct_pos_stride_range_iter[1303186] val F7_i[2131135]:int(64)[13] const-val F8_low[2131137]:int(64)[13] ref value[2131139]:_ref(localesSignal)[1316692]
  type _ir_these_DefaultRectangularArr_1_int64_t_F_localesSignal_int64_t[1330402] const-val F0_this[2131115]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] const-val F1_tasksPerLocale[2131119]:int(64)[13] const-val F2_ignoreRunning[2131123]:bool[10] const-val F3_minIndicesPerTask[2131127]:int(64)[13]
  function _getIterator[1330411](const  ref arg ir[1330413]:_ir_these_DefaultRectangularArr_1_int64_t_F_localesSignal_int64_t[1330402]) : _ic_these_DefaultRectangularArr_1_int64_t_F_localesSignal_int64_t[1330396] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1330520]:_ic_these_DefaultRectangularArr_1_int64_t_F_localesSignal_int64_t[1330396] "dead after last mention" "RVV" "temp"
    val _ic_[1330403]:_ic_these_DefaultRectangularArr_1_int64_t_F_localesSignal_int64_t[1330396] "dead after last mention" "temp"
    const-val call_tmp[1330527]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1330530 'move' call_tmp[1330527](1330542 'sizeof_bundle' _ic_these_DefaultRectangularArr_1_int64_t_F_localesSignal_int64_t[1330396]))
    const-val cast_tmp[1330545]:c_void_ptr[149] "dead after last mention" "temp"
    (1330547 'move' cast_tmp[1330545](1330408 call chpl_here_alloc[187788] call_tmp[1330527] 60))
    (1330416 'move' _ic_[1330403](1330549 'cast' _ic_these_DefaultRectangularArr_1_int64_t_F_localesSignal_int64_t[1330396] cast_tmp[1330545]))
    (1330418 'setcid' _ic_[1330403])
    (1330525 'move' ret[1330520] _ic_[1330403])
    (2132970 '.=' ret[1330520] more[1330399] 1)
    const-val tmp[2132974]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] "temp"
    (2132979 'move' tmp[2132974](2132975 '.v' ir[1330413] F0_this[2131115]))
    (2132981 '.=' ret[1330520] F0_this[2131113] tmp[2132974])
    const-val tmp[2132985]:int(64)[13] "temp"
    (2132990 'move' tmp[2132985](2132986 '.v' ir[1330413] F1_tasksPerLocale[2131119]))
    (2132992 '.=' ret[1330520] F1_tasksPerLocale[2131117] tmp[2132985])
    const-val tmp[2132996]:bool[10] "temp"
    (2133001 'move' tmp[2132996](2132997 '.v' ir[1330413] F2_ignoreRunning[2131123]))
    (2133003 '.=' ret[1330520] F2_ignoreRunning[2131121] tmp[2132996])
    const-val tmp[2133007]:int(64)[13] "temp"
    (2133012 'move' tmp[2133007](2133008 '.v' ir[1330413] F3_minIndicesPerTask[2131127]))
    (2133014 '.=' ret[1330520] F3_minIndicesPerTask[2131125] tmp[2133007])
    (1330522 return ret[1330520])
  }
  function [domain(1,int(64),false)] unmanaged localesSignal?[1318401].these_default_minIndicesPerTask[1326749](const in arg this[1326752]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401]) : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[1326755]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val minIndicesPerTask[1326760]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1326764 'move' minIndicesPerTask[1326760] dataParMinGranularity[93296])
    (1326767 'move' ret[1326755] minIndicesPerTask[1326760])
    (1326758 return ret[1326755])
  }
  function [domain(1,int(64),false)] unmanaged localesSignal?[1318401].these_default_ignoreRunning[1326718](const in arg this[1326721]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401]) : bool[10] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[1326724]:bool[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val ignoreRunning[1326729]:bool[10] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1326733 'move' ignoreRunning[1326729] dataParIgnoreRunningTasks[93290])
    (1326736 'move' ret[1326724] ignoreRunning[1326729])
    (1326727 return ret[1326724])
  }
  function [domain(1,int(64),false)] unmanaged localesSignal?[1318401].these_default_tasksPerLocale[1326687](const in arg this[1326690]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401]) : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[1326693]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val tasksPerLocale[1326698]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1326702 'move' tasksPerLocale[1326698] dataParTasksPerLocale[93284])
    (1326705 'move' ret[1326693] tasksPerLocale[1326698])
    (1326696 return ret[1326693])
  }
  type _ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1394974] val super[1394975]:object[22] "super class" val more[1394977]:int(64)[13] const-val F0_this[2138406]:[domain(1,int(64),false)] real(64)[1358944] const-val F1_tasksPerLocale[2138410]:int(64)[13] const-val F2_ignoreRunning[2138414]:bool[10] const-val F3_minIndicesPerTask[2138418]:int(64)[13] val F4__iterator[2138422]:_ic_chpl__serialViewIter[1394724] val F5_info[2138424]:[domain(1,int(64),false)] real(64)[1358944] val F6__iterator[2138426]:_ic_chpl_direct_pos_stride_range_iter[1303186] val F7_i[2138428]:int(64)[13] const-val F8_low[2138430]:int(64)[13] ref value[2138432]:_ref(real(64))[936906]
  function [domain(1,int(64),false)] uint(64)[1450261].these[1456550](const in arg this[1456554]:[domain(1,int(64),false)] uint(64)[1450261], const in arg tasksPerLocale[1456558]:int(64)[13], const in arg ignoreRunning[1456562]:bool[10], const in arg minIndicesPerTask[1456566]:int(64)[13], ref arg _retArg[1915285]:_ref(_ir_these_DefaultRectangularArr_1_int64_t_F_uint64_t_int64_t)[1460492]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[2150142]:_ir_these_DefaultRectangularArr_1_int64_t_F_uint64_t_int64_t[1460381] "temp"
    (2150144 '.=' _ir[2150142] F0_this[2148311] this[1456554])
    (2150148 '.=' _ir[2150142] F1_tasksPerLocale[2148315] tasksPerLocale[1456558])
    (2150152 '.=' _ir[2150142] F2_ignoreRunning[2148319] ignoreRunning[1456562])
    (2150156 '.=' _ir[2150142] F3_minIndicesPerTask[2148323] minIndicesPerTask[1456566])
    (2150160 '=' _retArg[1915285] _ir[2150142])
    (2150163 return _void[55])
  }
  type _ic_these_DefaultRectangularArr_1_int64_t_F_uint64_t_int64_t[1460375] val super[1460376]:object[22] "super class" val more[1460378]:int(64)[13] const-val F0_this[2148309]:[domain(1,int(64),false)] uint(64)[1450261] const-val F1_tasksPerLocale[2148313]:int(64)[13] const-val F2_ignoreRunning[2148317]:bool[10] const-val F3_minIndicesPerTask[2148321]:int(64)[13] val F4__iterator[2148325]:_ic_chpl__serialViewIter[1460125] val F5_info[2148327]:[domain(1,int(64),false)] uint(64)[1450261] val F6__iterator[2148329]:_ic_chpl_direct_pos_stride_range_iter[1303186] val F7_i[2148331]:int(64)[13] const-val F8_low[2148333]:int(64)[13] ref value[2148335]:_ref(uint(64))[936790]
  type _ir_these_DefaultRectangularArr_1_int64_t_F_uint64_t_int64_t[1460381] const-val F0_this[2148311]:[domain(1,int(64),false)] uint(64)[1450261] const-val F1_tasksPerLocale[2148315]:int(64)[13] const-val F2_ignoreRunning[2148319]:bool[10] const-val F3_minIndicesPerTask[2148323]:int(64)[13]
  function _getIterator[1460390](const  ref arg ir[1460392]:_ir_these_DefaultRectangularArr_1_int64_t_F_uint64_t_int64_t[1460381]) : _ic_these_DefaultRectangularArr_1_int64_t_F_uint64_t_int64_t[1460375] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1460499]:_ic_these_DefaultRectangularArr_1_int64_t_F_uint64_t_int64_t[1460375] "dead after last mention" "RVV" "temp"
    val _ic_[1460382]:_ic_these_DefaultRectangularArr_1_int64_t_F_uint64_t_int64_t[1460375] "dead after last mention" "temp"
    const-val call_tmp[1460506]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1460509 'move' call_tmp[1460506](1460521 'sizeof_bundle' _ic_these_DefaultRectangularArr_1_int64_t_F_uint64_t_int64_t[1460375]))
    const-val cast_tmp[1460524]:c_void_ptr[149] "dead after last mention" "temp"
    (1460526 'move' cast_tmp[1460524](1460387 call chpl_here_alloc[187788] call_tmp[1460506] 88))
    (1460395 'move' _ic_[1460382](1460528 'cast' _ic_these_DefaultRectangularArr_1_int64_t_F_uint64_t_int64_t[1460375] cast_tmp[1460524]))
    (1460397 'setcid' _ic_[1460382])
    (1460504 'move' ret[1460499] _ic_[1460382])
    (2150166 '.=' ret[1460499] more[1460378] 1)
    const-val tmp[2150170]:[domain(1,int(64),false)] uint(64)[1450261] "temp"
    (2150175 'move' tmp[2150170](2150171 '.v' ir[1460392] F0_this[2148311]))
    (2150177 '.=' ret[1460499] F0_this[2148309] tmp[2150170])
    const-val tmp[2150181]:int(64)[13] "temp"
    (2150186 'move' tmp[2150181](2150182 '.v' ir[1460392] F1_tasksPerLocale[2148315]))
    (2150188 '.=' ret[1460499] F1_tasksPerLocale[2148313] tmp[2150181])
    const-val tmp[2150192]:bool[10] "temp"
    (2150197 'move' tmp[2150192](2150193 '.v' ir[1460392] F2_ignoreRunning[2148319]))
    (2150199 '.=' ret[1460499] F2_ignoreRunning[2148317] tmp[2150192])
    const-val tmp[2150203]:int(64)[13] "temp"
    (2150208 'move' tmp[2150203](2150204 '.v' ir[1460392] F3_minIndicesPerTask[2148323]))
    (2150210 '.=' ret[1460499] F3_minIndicesPerTask[2148321] tmp[2150203])
    (1460501 return ret[1460499])
  }
  function [domain(1,int(64),false)] uint(64)[1450261].these_default_minIndicesPerTask[1456728](const in arg this[1456731]:[domain(1,int(64),false)] uint(64)[1450261]) : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[1456734]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val minIndicesPerTask[1456739]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1456743 'move' minIndicesPerTask[1456739] dataParMinGranularity[93296])
    (1456746 'move' ret[1456734] minIndicesPerTask[1456739])
    (1456737 return ret[1456734])
  }
  function [domain(1,int(64),false)] uint(64)[1450261].these_default_ignoreRunning[1456697](const in arg this[1456700]:[domain(1,int(64),false)] uint(64)[1450261]) : bool[10] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[1456703]:bool[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val ignoreRunning[1456708]:bool[10] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1456712 'move' ignoreRunning[1456708] dataParIgnoreRunningTasks[93290])
    (1456715 'move' ret[1456703] ignoreRunning[1456708])
    (1456706 return ret[1456703])
  }
  function [domain(1,int(64),false)] uint(64)[1450261].these_default_tasksPerLocale[1456666](const in arg this[1456669]:[domain(1,int(64),false)] uint(64)[1450261]) : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[1456672]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val tasksPerLocale[1456677]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1456681 'move' tasksPerLocale[1456677] dataParTasksPerLocale[93284])
    (1456684 'move' ret[1456672] tasksPerLocale[1456677])
    (1456675 return ret[1456672])
  }
  type _ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1484063] val super[1484064]:object[22] "super class" val more[1484066]:int(64)[13] const-val F0_this[2156083]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] const-val F1_tasksPerLocale[2156087]:int(64)[13] const-val F2_ignoreRunning[2156091]:bool[10] const-val F3_minIndicesPerTask[2156095]:int(64)[13] val F4__iterator[2156099]:_ic_chpl__serialViewIter[1483813] val F5_info[2156101]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] val F6__iterator[2156103]:_ic_chpl_direct_pos_stride_range_iter[1303186] val F7_i[2156105]:int(64)[13] const-val F8_low[2156107]:int(64)[13] ref value[2156109]:_ref(range(int(64),bounded,false))[1027047]
  function [domain(1,int(64),false)] int(64)[1368867].these_default_minIndicesPerTask[1380804](const in arg this[1380807]:[domain(1,int(64),false)] int(64)[1368867]) : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved"
  {
    val ret[1380810]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val minIndicesPerTask[1380815]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1380819 'move' minIndicesPerTask[1380815] dataParMinGranularity[93296])
    (1380822 'move' ret[1380810] minIndicesPerTask[1380815])
    (1380813 return ret[1380810])
  }
  function [domain(1,int(64),false)] int(64)[1368867].these_default_ignoreRunning[1380773](const in arg this[1380776]:[domain(1,int(64),false)] int(64)[1368867]) : bool[10] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved"
  {
    val ret[1380779]:bool[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val ignoreRunning[1380784]:bool[10] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1380788 'move' ignoreRunning[1380784] dataParIgnoreRunningTasks[93290])
    (1380791 'move' ret[1380779] ignoreRunning[1380784])
    (1380782 return ret[1380779])
  }
  function [domain(1,int(64),false)] int(64)[1368867].these_default_tasksPerLocale[1380742](const in arg this[1380745]:[domain(1,int(64),false)] int(64)[1368867]) : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved"
  {
    val ret[1380748]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val tasksPerLocale[1380753]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1380757 'move' tasksPerLocale[1380753] dataParTasksPerLocale[93284])
    (1380760 'move' ret[1380748] tasksPerLocale[1380753])
    (1380751 return ret[1380748])
  }
  function [domain(1,int(64),false)] real(64)[1358944].these_default_minIndicesPerTask[1389188](const in arg this[1389191]:[domain(1,int(64),false)] real(64)[1358944]) : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved"
  {
    val ret[1389194]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val minIndicesPerTask[1389199]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1389203 'move' minIndicesPerTask[1389199] dataParMinGranularity[93296])
    (1389206 'move' ret[1389194] minIndicesPerTask[1389199])
    (1389197 return ret[1389194])
  }
  function [domain(1,int(64),false)] real(64)[1358944].these_default_ignoreRunning[1389157](const in arg this[1389160]:[domain(1,int(64),false)] real(64)[1358944]) : bool[10] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved"
  {
    val ret[1389163]:bool[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val ignoreRunning[1389168]:bool[10] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1389172 'move' ignoreRunning[1389168] dataParIgnoreRunningTasks[93290])
    (1389175 'move' ret[1389163] ignoreRunning[1389168])
    (1389166 return ret[1389163])
  }
  function [domain(1,int(64),false)] real(64)[1358944].these_default_tasksPerLocale[1389126](const in arg this[1389129]:[domain(1,int(64),false)] real(64)[1358944]) : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved"
  {
    val ret[1389132]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val tasksPerLocale[1389137]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1389141 'move' tasksPerLocale[1389137] dataParTasksPerLocale[93284])
    (1389144 'move' ret[1389132] tasksPerLocale[1389137])
    (1389135 return ret[1389132])
  }
  function [domain(1,int(64),false)] real(64)[1358944].these_default_minIndicesPerTask[1536605](const in arg this[1536608]:[domain(1,int(64),false)] real(64)[1358944]) : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved"
  {
    val ret[1536611]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val minIndicesPerTask[1536616]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1536620 'move' minIndicesPerTask[1536616] dataParMinGranularity[93296])
    (1536623 'move' ret[1536611] minIndicesPerTask[1536616])
    (1536614 return ret[1536611])
  }
  function [domain(1,int(64),false)] real(64)[1358944].these_default_ignoreRunning[1536574](const in arg this[1536577]:[domain(1,int(64),false)] real(64)[1358944]) : bool[10] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved"
  {
    val ret[1536580]:bool[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val ignoreRunning[1536585]:bool[10] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1536589 'move' ignoreRunning[1536585] dataParIgnoreRunningTasks[93290])
    (1536592 'move' ret[1536580] ignoreRunning[1536585])
    (1536583 return ret[1536580])
  }
  function [domain(1,int(64),false)] real(64)[1358944].these_default_tasksPerLocale[1536543](const in arg this[1536546]:[domain(1,int(64),false)] real(64)[1358944]) : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved"
  {
    val ret[1536549]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val tasksPerLocale[1536554]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1536558 'move' tasksPerLocale[1536554] dataParTasksPerLocale[93284])
    (1536561 'move' ret[1536549] tasksPerLocale[1536554])
    (1536552 return ret[1536549])
  }
  function [domain(1,int(64),false)] range(int(64),bounded,false)[1409224].these_default_minIndicesPerTask[1478205](const in arg this[1478208]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224]) : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved"
  {
    val ret[1478211]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val minIndicesPerTask[1478216]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1478220 'move' minIndicesPerTask[1478216] dataParMinGranularity[93296])
    (1478223 'move' ret[1478211] minIndicesPerTask[1478216])
    (1478214 return ret[1478211])
  }
  function [domain(1,int(64),false)] range(int(64),bounded,false)[1409224].these_default_ignoreRunning[1478174](const in arg this[1478177]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224]) : bool[10] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved"
  {
    val ret[1478180]:bool[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val ignoreRunning[1478185]:bool[10] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1478189 'move' ignoreRunning[1478185] dataParIgnoreRunningTasks[93290])
    (1478192 'move' ret[1478180] ignoreRunning[1478185])
    (1478183 return ret[1478180])
  }
  function [domain(1,int(64),false)] range(int(64),bounded,false)[1409224].these_default_tasksPerLocale[1478143](const in arg this[1478146]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224]) : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved"
  {
    val ret[1478149]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val tasksPerLocale[1478154]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1478158 'move' tasksPerLocale[1478154] dataParTasksPerLocale[93284])
    (1478161 'move' ret[1478149] tasksPerLocale[1478154])
    (1478152 return ret[1478149])
  }
  function [domain(1,int(64),false)] range(int(64),bounded,false)[1409224].these[1485239](const in arg this[1485243]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224], const  ref arg followThis[1485247]:1*range(int(64),bounded,false)[1244885], const in arg tasksPerLocale[1485253]:int(64)[13], const in arg ignoreRunning[1485259]:bool[10], const in arg minIndicesPerTask[1485265]:int(64)[13], ref arg _retArg[1915715]:_ref(_ir_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t)[1489767]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[2161353]:_ir_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1489656] "temp"
    (2161355 '.=' _ir[2161353] F0_this[2159526] this[1485243])
    (2161359 '.=' _ir[2161353] F1_followThis[2159530] followThis[1485247])
    (2161363 '.=' _ir[2161353] F2_tasksPerLocale[2159534] tasksPerLocale[1485253])
    (2161367 '.=' _ir[2161353] F3_ignoreRunning[2159538] ignoreRunning[1485259])
    (2161371 '.=' _ir[2161353] F4_minIndicesPerTask[2159542] minIndicesPerTask[1485265])
    (2161375 '=' _retArg[1915715] _ir[2161353])
    (2161378 return _void[55])
  }
  type _ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1489650] val super[1489651]:object[22] "super class" val more[1489653]:int(64)[13] const-val F0_this[2159524]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] ref F1_followThis[2159528]:_ref(1*range(int(64),bounded,false))[1244943] const-val F2_tasksPerLocale[2159532]:int(64)[13] const-val F3_ignoreRunning[2159536]:bool[10] const-val F4_minIndicesPerTask[2159540]:int(64)[13] val F5__iterator[2159544]:_ic_these_DefaultRectangularDom_1_int64_t_F[1488045] val F6_default_arg_offset[2159546]:1*int(64)[1256714] val F7_block[2159548]:1*range(int(64),bounded,false)[1244885] val F8__iterator[2159550]:_ic_these_range_int64_t_bounded_F[1096892] val F9_i[2159552]:int(64)[13] const F10_end[2159554]:int(64)[13] val F11_coerce_tmp[2159556]:int(64)[13] ref value[2159558]:_ref(range(int(64),bounded,false))[1027047]
  type _ir_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1489656] const-val F0_this[2159526]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] ref F1_followThis[2159530]:_ref(1*range(int(64),bounded,false))[1244943] const-val F2_tasksPerLocale[2159534]:int(64)[13] const-val F3_ignoreRunning[2159538]:bool[10] const-val F4_minIndicesPerTask[2159542]:int(64)[13]
  function _getIterator[1489665](const  ref arg ir[1489667]:_ir_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1489656]) : _ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1489650] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1489774]:_ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1489650] "dead after last mention" "RVV" "temp"
    val _ic_[1489657]:_ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1489650] "dead after last mention" "temp"
    const-val call_tmp[1489781]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1489784 'move' call_tmp[1489781](1489796 'sizeof_bundle' _ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1489650]))
    const-val cast_tmp[1489799]:c_void_ptr[149] "dead after last mention" "temp"
    (1489801 'move' cast_tmp[1489799](1489662 call chpl_here_alloc[187788] call_tmp[1489781] 97))
    (1489670 'move' _ic_[1489657](1489803 'cast' _ic_these_DefaultRectangularArr_1_int64_t_F_range_int64_t_bounded_F_int64_t[1489650] cast_tmp[1489799]))
    (1489672 'setcid' _ic_[1489657])
    (1489779 'move' ret[1489774] _ic_[1489657])
    (2161381 '.=' ret[1489774] more[1489653] 1)
    const-val tmp[2161385]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "temp"
    (2161390 'move' tmp[2161385](2161386 '.v' ir[1489667] F0_this[2159526]))
    (2161392 '.=' ret[1489774] F0_this[2159524] tmp[2161385])
    ref tmp[2161396]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    (2161401 'move' tmp[2161396](2161397 '.v' ir[1489667] F1_followThis[2159530]))
    (2161403 '.=' ret[1489774] F1_followThis[2159528] tmp[2161396])
    const-val tmp[2161407]:int(64)[13] "temp"
    (2161412 'move' tmp[2161407](2161408 '.v' ir[1489667] F2_tasksPerLocale[2159534]))
    (2161414 '.=' ret[1489774] F2_tasksPerLocale[2159532] tmp[2161407])
    const-val tmp[2161418]:bool[10] "temp"
    (2161423 'move' tmp[2161418](2161419 '.v' ir[1489667] F3_ignoreRunning[2159538]))
    (2161425 '.=' ret[1489774] F3_ignoreRunning[2159536] tmp[2161418])
    const-val tmp[2161429]:int(64)[13] "temp"
    (2161434 'move' tmp[2161429](2161430 '.v' ir[1489667] F4_minIndicesPerTask[2159542]))
    (2161436 '.=' ret[1489774] F4_minIndicesPerTask[2159540] tmp[2161429])
    (1489776 return ret[1489774])
  }
  function [domain(1,int(64),false)] range(int(64),bounded,false)[1409224].these_default_minIndicesPerTask[1485458](const in arg this[1485461]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224]) : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[1485464]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val minIndicesPerTask[1485469]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1485473 'move' minIndicesPerTask[1485469] dataParMinGranularity[93296])
    (1485476 'move' ret[1485464] minIndicesPerTask[1485469])
    (1485467 return ret[1485464])
  }
  function [domain(1,int(64),false)] range(int(64),bounded,false)[1409224].these_default_ignoreRunning[1485427](const in arg this[1485430]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224]) : bool[10] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[1485433]:bool[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val ignoreRunning[1485438]:bool[10] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1485442 'move' ignoreRunning[1485438] dataParIgnoreRunningTasks[93290])
    (1485445 'move' ret[1485433] ignoreRunning[1485438])
    (1485436 return ret[1485433])
  }
  function [domain(1,int(64),false)] range(int(64),bounded,false)[1409224].these_default_tasksPerLocale[1485396](const in arg this[1485399]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224]) : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[1485402]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val tasksPerLocale[1485407]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1485411 'move' tasksPerLocale[1485407] dataParTasksPerLocale[93284])
    (1485414 'move' ret[1485402] tasksPerLocale[1485407])
    (1485405 return ret[1485402])
  }
  function [domain(1,int(64),false)] real(64)[1358944].these[1539042](const in arg this[1539046]:[domain(1,int(64),false)] real(64)[1358944], const  ref arg followThis[1539050]:1*range(int(64),bounded,false)[1244885], const in arg tasksPerLocale[1539056]:int(64)[13], const in arg ignoreRunning[1539062]:bool[10], const in arg minIndicesPerTask[1539068]:int(64)[13], ref arg _retArg[1916549]:_ref(_ir_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t)[1539462]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[2167312]:_ir_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539351] "temp"
    (2167314 '.=' _ir[2167312] F0_this[2165485] this[1539046])
    (2167318 '.=' _ir[2167312] F1_followThis[2165489] followThis[1539050])
    (2167322 '.=' _ir[2167312] F2_tasksPerLocale[2165493] tasksPerLocale[1539056])
    (2167326 '.=' _ir[2167312] F3_ignoreRunning[2165497] ignoreRunning[1539062])
    (2167330 '.=' _ir[2167312] F4_minIndicesPerTask[2165501] minIndicesPerTask[1539068])
    (2167334 '=' _retArg[1916549] _ir[2167312])
    (2167337 return _void[55])
  }
  type _ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539345] val super[1539346]:object[22] "super class" val more[1539348]:int(64)[13] const-val F0_this[2165483]:[domain(1,int(64),false)] real(64)[1358944] ref F1_followThis[2165487]:_ref(1*range(int(64),bounded,false))[1244943] const-val F2_tasksPerLocale[2165491]:int(64)[13] const-val F3_ignoreRunning[2165495]:bool[10] const-val F4_minIndicesPerTask[2165499]:int(64)[13] val F5__iterator[2165503]:_ic_these_DefaultRectangularDom_1_int64_t_F[1488045] val F6_default_arg_offset[2165505]:1*int(64)[1256714] val F7_block[2165507]:1*range(int(64),bounded,false)[1244885] val F8__iterator[2165509]:_ic_these_range_int64_t_bounded_F[1096892] val F9_i[2165511]:int(64)[13] const F10_end[2165513]:int(64)[13] val F11_coerce_tmp[2165515]:int(64)[13] ref value[2165517]:_ref(real(64))[936906]
  type _ir_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539351] const-val F0_this[2165485]:[domain(1,int(64),false)] real(64)[1358944] ref F1_followThis[2165489]:_ref(1*range(int(64),bounded,false))[1244943] const-val F2_tasksPerLocale[2165493]:int(64)[13] const-val F3_ignoreRunning[2165497]:bool[10] const-val F4_minIndicesPerTask[2165501]:int(64)[13]
  function _getIterator[1539360](const  ref arg ir[1539362]:_ir_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539351]) : _ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539345] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1539469]:_ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539345] "dead after last mention" "RVV" "temp"
    val _ic_[1539352]:_ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539345] "dead after last mention" "temp"
    const-val call_tmp[1539476]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1539479 'move' call_tmp[1539476](1539491 'sizeof_bundle' _ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539345]))
    const-val cast_tmp[1539494]:c_void_ptr[149] "dead after last mention" "temp"
    (1539496 'move' cast_tmp[1539494](1539357 call chpl_here_alloc[187788] call_tmp[1539476] 102))
    (1539365 'move' _ic_[1539352](1539498 'cast' _ic_these_DefaultRectangularArr_1_int64_t_F__real64_int64_t[1539345] cast_tmp[1539494]))
    (1539367 'setcid' _ic_[1539352])
    (1539474 'move' ret[1539469] _ic_[1539352])
    (2167340 '.=' ret[1539469] more[1539348] 1)
    const-val tmp[2167344]:[domain(1,int(64),false)] real(64)[1358944] "temp"
    (2167349 'move' tmp[2167344](2167345 '.v' ir[1539362] F0_this[2165485]))
    (2167351 '.=' ret[1539469] F0_this[2165483] tmp[2167344])
    ref tmp[2167355]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    (2167360 'move' tmp[2167355](2167356 '.v' ir[1539362] F1_followThis[2165489]))
    (2167362 '.=' ret[1539469] F1_followThis[2165487] tmp[2167355])
    const-val tmp[2167366]:int(64)[13] "temp"
    (2167371 'move' tmp[2167366](2167367 '.v' ir[1539362] F2_tasksPerLocale[2165493]))
    (2167373 '.=' ret[1539469] F2_tasksPerLocale[2165491] tmp[2167366])
    const-val tmp[2167377]:bool[10] "temp"
    (2167382 'move' tmp[2167377](2167378 '.v' ir[1539362] F3_ignoreRunning[2165497]))
    (2167384 '.=' ret[1539469] F3_ignoreRunning[2165495] tmp[2167377])
    const-val tmp[2167388]:int(64)[13] "temp"
    (2167393 'move' tmp[2167388](2167389 '.v' ir[1539362] F4_minIndicesPerTask[2165501]))
    (2167395 '.=' ret[1539469] F4_minIndicesPerTask[2165499] tmp[2167388])
    (1539471 return ret[1539469])
  }
  function [domain(1,int(64),false)] real(64)[1358944].these_default_minIndicesPerTask[1539261](const in arg this[1539264]:[domain(1,int(64),false)] real(64)[1358944]) : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[1539267]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val minIndicesPerTask[1539272]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1539276 'move' minIndicesPerTask[1539272] dataParMinGranularity[93296])
    (1539279 'move' ret[1539267] minIndicesPerTask[1539272])
    (1539270 return ret[1539267])
  }
  function [domain(1,int(64),false)] real(64)[1358944].these_default_ignoreRunning[1539230](const in arg this[1539233]:[domain(1,int(64),false)] real(64)[1358944]) : bool[10] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[1539236]:bool[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val ignoreRunning[1539241]:bool[10] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1539245 'move' ignoreRunning[1539241] dataParIgnoreRunningTasks[93290])
    (1539248 'move' ret[1539236] ignoreRunning[1539241])
    (1539239 return ret[1539236])
  }
  function [domain(1,int(64),false)] real(64)[1358944].these_default_tasksPerLocale[1539199](const in arg this[1539202]:[domain(1,int(64),false)] real(64)[1358944]) : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[1539205]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val tasksPerLocale[1539210]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1539214 'move' tasksPerLocale[1539210] dataParTasksPerLocale[93284])
    (1539217 'move' ret[1539205] tasksPerLocale[1539210])
    (1539208 return ret[1539205])
  }
  function [domain(1,int(64),false)] locale[1256675].computeFactoredOffs[1259477](const in arg this[1259481]:[domain(1,int(64),false)] locale[1256675]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[1259487]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (1259489 'move' call_tmp[1259487](1259492 call factoredOffs[1259656] this[1259481]))
    val call_tmp[1259495]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1259512 call =[435443] call_tmp[1259487] 0)
    {
      const-val i[1259517]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1259519 'move' i[1259517] 0)
      {
        {
          ref call_tmp[1259710]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          (1259712 'move' call_tmp[1259710](1259715 call factoredOffs[1259656] this[1259481]))
          ref call_tmp[1259718]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          (1259720 'move' call_tmp[1259718](1259723 call factoredOffs[1259656] this[1259481]))
          ref call_tmp[1259726]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          ref _this_tmp_[1259779]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
          (1259781 'move' _this_tmp_[1259779](1259731 call blk[1258464] this[1259481]))
          (1259728 'move' call_tmp[1259726](1259786 '.' _this_tmp_[1259779] x0[1256712]))
          ref call_tmp[1259736]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          ref _this_tmp_[1259790]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
          (1259792 'move' _this_tmp_[1259790](1259741 call off[1258170] this[1259481]))
          (1259738 'move' call_tmp[1259736](1259797 '.' _this_tmp_[1259790] x0[1256712]))
          const-val call_tmp[1259746]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1259800]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1259804 'move' coerce_tmp[1259800](1259802 'deref' call_tmp[1259736]))
          (1259748 'move' call_tmp[1259746](1259751 call chpl__idxToInt[1027105] coerce_tmp[1259800]))
          const-val call_tmp[1259753]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1259807]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1259811 'move' coerce_tmp[1259807](1259809 'deref' call_tmp[1259726]))
          (1259755 'move' call_tmp[1259753](1259758 call *[441944] coerce_tmp[1259807] call_tmp[1259746]))
          const-val call_tmp[1259761]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1259814]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1259818 'move' coerce_tmp[1259814](1259816 'deref' call_tmp[1259718]))
          (1259763 'move' call_tmp[1259761](1259766 call +[439752] coerce_tmp[1259814] call_tmp[1259753]))
          (1259770 call =[435443] call_tmp[1259710] call_tmp[1259761])
        }
      }
      label _continueLabel0[1259706]
      label _unused_continueLabel[1259649]
      label _breakLabel[1259651]
    }
    (1259653 return _void[55])
  }
  function [domain(1,int(64),false)] unmanaged localesSignal?[1318401].computeFactoredOffs[1320011](const in arg this[1320015]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[1320021]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (1320023 'move' call_tmp[1320021](1320026 call factoredOffs[1320190] this[1320015]))
    val call_tmp[1320029]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1320046 call =[435443] call_tmp[1320021] 0)
    {
      const-val i[1320051]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1320053 'move' i[1320051] 0)
      {
        {
          ref call_tmp[1320244]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          (1320246 'move' call_tmp[1320244](1320249 call factoredOffs[1320190] this[1320015]))
          ref call_tmp[1320252]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          (1320254 'move' call_tmp[1320252](1320257 call factoredOffs[1320190] this[1320015]))
          ref call_tmp[1320260]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          ref _this_tmp_[1320313]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
          (1320315 'move' _this_tmp_[1320313](1320265 call blk[1319894] this[1320015]))
          (1320262 'move' call_tmp[1320260](1320320 '.' _this_tmp_[1320313] x0[1256712]))
          ref call_tmp[1320270]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          ref _this_tmp_[1320324]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
          (1320326 'move' _this_tmp_[1320324](1320275 call off[1319748] this[1320015]))
          (1320272 'move' call_tmp[1320270](1320331 '.' _this_tmp_[1320324] x0[1256712]))
          const-val call_tmp[1320280]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1320334]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1320338 'move' coerce_tmp[1320334](1320336 'deref' call_tmp[1320270]))
          (1320282 'move' call_tmp[1320280](1320285 call chpl__idxToInt[1027105] coerce_tmp[1320334]))
          const-val call_tmp[1320287]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1320341]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1320345 'move' coerce_tmp[1320341](1320343 'deref' call_tmp[1320260]))
          (1320289 'move' call_tmp[1320287](1320292 call *[441944] coerce_tmp[1320341] call_tmp[1320280]))
          const-val call_tmp[1320295]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1320348]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1320352 'move' coerce_tmp[1320348](1320350 'deref' call_tmp[1320252]))
          (1320297 'move' call_tmp[1320295](1320300 call +[439752] coerce_tmp[1320348] call_tmp[1320287]))
          (1320304 call =[435443] call_tmp[1320244] call_tmp[1320295])
        }
      }
      label _continueLabel0[1320240]
      label _unused_continueLabel[1320183]
      label _breakLabel[1320185]
    }
    (1320187 return _void[55])
  }
  function [domain(1,int(64),false)] real(64)[1358944].computeFactoredOffs[1360554](const in arg this[1360558]:[domain(1,int(64),false)] real(64)[1358944]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[1360564]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (1360566 'move' call_tmp[1360564](1360569 call factoredOffs[1360733] this[1360558]))
    val call_tmp[1360572]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1360589 call =[435443] call_tmp[1360564] 0)
    {
      const-val i[1360594]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1360596 'move' i[1360594] 0)
      {
        {
          ref call_tmp[1360787]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          (1360789 'move' call_tmp[1360787](1360792 call factoredOffs[1360733] this[1360558]))
          ref call_tmp[1360795]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          (1360797 'move' call_tmp[1360795](1360800 call factoredOffs[1360733] this[1360558]))
          ref call_tmp[1360803]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          ref _this_tmp_[1360856]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
          (1360858 'move' _this_tmp_[1360856](1360808 call blk[1360437] this[1360558]))
          (1360805 'move' call_tmp[1360803](1360863 '.' _this_tmp_[1360856] x0[1256712]))
          ref call_tmp[1360813]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          ref _this_tmp_[1360867]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
          (1360869 'move' _this_tmp_[1360867](1360818 call off[1360291] this[1360558]))
          (1360815 'move' call_tmp[1360813](1360874 '.' _this_tmp_[1360867] x0[1256712]))
          const-val call_tmp[1360823]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1360877]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1360881 'move' coerce_tmp[1360877](1360879 'deref' call_tmp[1360813]))
          (1360825 'move' call_tmp[1360823](1360828 call chpl__idxToInt[1027105] coerce_tmp[1360877]))
          const-val call_tmp[1360830]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1360884]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1360888 'move' coerce_tmp[1360884](1360886 'deref' call_tmp[1360803]))
          (1360832 'move' call_tmp[1360830](1360835 call *[441944] coerce_tmp[1360884] call_tmp[1360823]))
          const-val call_tmp[1360838]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1360891]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1360895 'move' coerce_tmp[1360891](1360893 'deref' call_tmp[1360795]))
          (1360840 'move' call_tmp[1360838](1360843 call +[439752] coerce_tmp[1360891] call_tmp[1360830]))
          (1360847 call =[435443] call_tmp[1360787] call_tmp[1360838])
        }
      }
      label _continueLabel0[1360783]
      label _unused_continueLabel[1360726]
      label _breakLabel[1360728]
    }
    (1360730 return _void[55])
  }
  function [domain(1,int(64),false)] int(64)[1368867].computeFactoredOffs[1370477](const in arg this[1370481]:[domain(1,int(64),false)] int(64)[1368867]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[1370487]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (1370489 'move' call_tmp[1370487](1370492 call factoredOffs[1370656] this[1370481]))
    val call_tmp[1370495]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1370512 call =[435443] call_tmp[1370487] 0)
    {
      const-val i[1370517]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1370519 'move' i[1370517] 0)
      {
        {
          ref call_tmp[1370710]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          (1370712 'move' call_tmp[1370710](1370715 call factoredOffs[1370656] this[1370481]))
          ref call_tmp[1370718]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          (1370720 'move' call_tmp[1370718](1370723 call factoredOffs[1370656] this[1370481]))
          ref call_tmp[1370726]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          ref _this_tmp_[1370779]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
          (1370781 'move' _this_tmp_[1370779](1370731 call blk[1370360] this[1370481]))
          (1370728 'move' call_tmp[1370726](1370786 '.' _this_tmp_[1370779] x0[1256712]))
          ref call_tmp[1370736]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          ref _this_tmp_[1370790]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
          (1370792 'move' _this_tmp_[1370790](1370741 call off[1370214] this[1370481]))
          (1370738 'move' call_tmp[1370736](1370797 '.' _this_tmp_[1370790] x0[1256712]))
          const-val call_tmp[1370746]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1370800]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1370804 'move' coerce_tmp[1370800](1370802 'deref' call_tmp[1370736]))
          (1370748 'move' call_tmp[1370746](1370751 call chpl__idxToInt[1027105] coerce_tmp[1370800]))
          const-val call_tmp[1370753]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1370807]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1370811 'move' coerce_tmp[1370807](1370809 'deref' call_tmp[1370726]))
          (1370755 'move' call_tmp[1370753](1370758 call *[441944] coerce_tmp[1370807] call_tmp[1370746]))
          const-val call_tmp[1370761]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1370814]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1370818 'move' coerce_tmp[1370814](1370816 'deref' call_tmp[1370718]))
          (1370763 'move' call_tmp[1370761](1370766 call +[439752] coerce_tmp[1370814] call_tmp[1370753]))
          (1370770 call =[435443] call_tmp[1370710] call_tmp[1370761])
        }
      }
      label _continueLabel0[1370706]
      label _unused_continueLabel[1370649]
      label _breakLabel[1370651]
    }
    (1370653 return _void[55])
  }
  function [domain(1,int(64),false)] range(int(64),bounded,false)[1409224].computeFactoredOffs[1410816](const in arg this[1410820]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[1410826]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (1410828 'move' call_tmp[1410826](1410831 call factoredOffs[1410995] this[1410820]))
    val call_tmp[1410834]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1410851 call =[435443] call_tmp[1410826] 0)
    {
      const-val i[1410856]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1410858 'move' i[1410856] 0)
      {
        {
          ref call_tmp[1411049]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          (1411051 'move' call_tmp[1411049](1411054 call factoredOffs[1410995] this[1410820]))
          ref call_tmp[1411057]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          (1411059 'move' call_tmp[1411057](1411062 call factoredOffs[1410995] this[1410820]))
          ref call_tmp[1411065]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          ref _this_tmp_[1411118]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
          (1411120 'move' _this_tmp_[1411118](1411070 call blk[1410699] this[1410820]))
          (1411067 'move' call_tmp[1411065](1411125 '.' _this_tmp_[1411118] x0[1256712]))
          ref call_tmp[1411075]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          ref _this_tmp_[1411129]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
          (1411131 'move' _this_tmp_[1411129](1411080 call off[1410553] this[1410820]))
          (1411077 'move' call_tmp[1411075](1411136 '.' _this_tmp_[1411129] x0[1256712]))
          const-val call_tmp[1411085]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1411139]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1411143 'move' coerce_tmp[1411139](1411141 'deref' call_tmp[1411075]))
          (1411087 'move' call_tmp[1411085](1411090 call chpl__idxToInt[1027105] coerce_tmp[1411139]))
          const-val call_tmp[1411092]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1411146]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1411150 'move' coerce_tmp[1411146](1411148 'deref' call_tmp[1411065]))
          (1411094 'move' call_tmp[1411092](1411097 call *[441944] coerce_tmp[1411146] call_tmp[1411085]))
          const-val call_tmp[1411100]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1411153]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1411157 'move' coerce_tmp[1411153](1411155 'deref' call_tmp[1411057]))
          (1411102 'move' call_tmp[1411100](1411105 call +[439752] coerce_tmp[1411153] call_tmp[1411092]))
          (1411109 call =[435443] call_tmp[1411049] call_tmp[1411100])
        }
      }
      label _continueLabel0[1411045]
      label _unused_continueLabel[1410988]
      label _breakLabel[1410990]
    }
    (1410992 return _void[55])
  }
  function [domain(1,int(64),false)] uint(64)[1450261].computeFactoredOffs[1451871](const in arg this[1451875]:[domain(1,int(64),false)] uint(64)[1450261]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[1451881]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (1451883 'move' call_tmp[1451881](1451886 call factoredOffs[1452050] this[1451875]))
    val call_tmp[1451889]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1451906 call =[435443] call_tmp[1451881] 0)
    {
      const-val i[1451911]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1451913 'move' i[1451911] 0)
      {
        {
          ref call_tmp[1452104]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          (1452106 'move' call_tmp[1452104](1452109 call factoredOffs[1452050] this[1451875]))
          ref call_tmp[1452112]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          (1452114 'move' call_tmp[1452112](1452117 call factoredOffs[1452050] this[1451875]))
          ref call_tmp[1452120]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          ref _this_tmp_[1452173]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
          (1452175 'move' _this_tmp_[1452173](1452125 call blk[1451754] this[1451875]))
          (1452122 'move' call_tmp[1452120](1452180 '.' _this_tmp_[1452173] x0[1256712]))
          ref call_tmp[1452130]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          ref _this_tmp_[1452184]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
          (1452186 'move' _this_tmp_[1452184](1452135 call off[1451608] this[1451875]))
          (1452132 'move' call_tmp[1452130](1452191 '.' _this_tmp_[1452184] x0[1256712]))
          const-val call_tmp[1452140]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1452194]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1452198 'move' coerce_tmp[1452194](1452196 'deref' call_tmp[1452130]))
          (1452142 'move' call_tmp[1452140](1452145 call chpl__idxToInt[1027105] coerce_tmp[1452194]))
          const-val call_tmp[1452147]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1452201]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1452205 'move' coerce_tmp[1452201](1452203 'deref' call_tmp[1452120]))
          (1452149 'move' call_tmp[1452147](1452152 call *[441944] coerce_tmp[1452201] call_tmp[1452140]))
          const-val call_tmp[1452155]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1452208]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1452212 'move' coerce_tmp[1452208](1452210 'deref' call_tmp[1452112]))
          (1452157 'move' call_tmp[1452155](1452160 call +[439752] coerce_tmp[1452208] call_tmp[1452147]))
          (1452164 call =[435443] call_tmp[1452104] call_tmp[1452155])
        }
      }
      label _continueLabel0[1452100]
      label _unused_continueLabel[1452043]
      label _breakLabel[1452045]
    }
    (1452047 return _void[55])
  }
  function [domain(1,int(64),false)] locale[1256675].initShiftedData[1263452](const in arg this[1263456]:[domain(1,int(64),false)] locale[1256675]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    {
      ref call_tmp[1263541]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
      (1263543 'move' call_tmp[1263541](1263546 call dom[1258208] this[1263456]))
      const-val call_tmp[1263549]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1263966]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1263970 'move' coerce_tmp[1263966](1263968 'deref' call_tmp[1263541]))
      val coerce_tmp[1263972]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1263977 'move' coerce_tmp[1263972] coerce_tmp[1263966])
      (1263551 'move' call_tmp[1263549](1263554 call dsiNumIndices[1263823] coerce_tmp[1263972]))
      const-val call_tmp[1263557]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1263559 'move' call_tmp[1263557](1263562 call >[437788] call_tmp[1263549] 0))
      const-val call_tmp[1263565]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1263567 'move' call_tmp[1263565] call_tmp[1263557])
      if call_tmp[1263565]
      {
        const-val shiftDist[1263574]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val tmp[1263576]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        val call_tmp[1263580]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1264127]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1264133 'move' coerce_tmp[1264127](1264129 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256408] this[1263456]))
        const-val tmp[1263602]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
        val call_tmp[1263604]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1264140]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1264146 'move' coerce_tmp[1264140](1264142 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256408] this[1263456]))
        ref call_tmp[1263620]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
        (1263622 'move' call_tmp[1263620](1263625 call factoredOffs[1259656] this[1263456]))
        const-val coerce_tmp[1264420]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1264424 'move' coerce_tmp[1264420](1264422 'deref' call_tmp[1263620]))
        (1263628 'move' tmp[1263602](1263631 call -[1264170] coerce_tmp[1264420]))
        (1263634 'move' tmp[1263576] tmp[1263602])
        (1263694 'move' shiftDist[1263574] tmp[1263576])
        ref call_tmp[1263698]:_ref(_ddata(locale))[1255592] "dead after last mention" "maybe param" "temp"
        (1263700 'move' call_tmp[1263698](1263703 call shiftedData[1264427] this[1263456]))
        val call_tmp[1263706]:locale[28] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1264455]:BaseRectangularArr(1,int(64),false,locale)[1256461] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1264461 'move' coerce_tmp[1264455](1264457 'cast' BaseRectangularArr(1,int(64),false,locale)[1256461] this[1263456]))
        ref call_tmp[1263714]:_ref(_ddata(locale))[1255592] "dead after last mention" "maybe param" "temp"
        (1263716 'move' call_tmp[1263714](1263719 call data[1259861] this[1263456]))
        val call_tmp[1263722]:_ddata(locale)[1255583] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1264527]:_ddata(locale)[1255583] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1264531 'move' coerce_tmp[1264527](1264529 'deref' call_tmp[1263714]))
        (1263724 'move' call_tmp[1263722](1263727 call _ddata_shift[1264466] coerce_tmp[1264527] shiftDist[1263574]))
        (1263732 call =[1260545] call_tmp[1263698] call_tmp[1263722])
      }
    }
    (1263739 return _void[55])
  }
  function [domain(1,int(64),false)] unmanaged localesSignal?[1318401].initShiftedData[1323538](const in arg this[1323542]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    {
      ref call_tmp[1323627]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
      (1323629 'move' call_tmp[1323627](1323632 call dom[1319786] this[1323542]))
      const-val call_tmp[1323635]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1323840]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1323844 'move' coerce_tmp[1323840](1323842 'deref' call_tmp[1323627]))
      val coerce_tmp[1323846]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1323851 'move' coerce_tmp[1323846] coerce_tmp[1323840])
      (1323637 'move' call_tmp[1323635](1323640 call dsiNumIndices[1263823] coerce_tmp[1323846]))
      const-val call_tmp[1323643]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1323645 'move' call_tmp[1323643](1323648 call >[437788] call_tmp[1323635] 0))
      const-val call_tmp[1323651]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1323653 'move' call_tmp[1323651] call_tmp[1323643])
      if call_tmp[1323651]
      {
        const-val shiftDist[1323660]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val tmp[1323662]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        val call_tmp[1323666]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1323855]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1323861 'move' coerce_tmp[1323855](1323857 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256408] this[1323542]))
        const-val tmp[1323688]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
        val call_tmp[1323690]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1323868]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1323874 'move' coerce_tmp[1323868](1323870 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256408] this[1323542]))
        ref call_tmp[1323706]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
        (1323708 'move' call_tmp[1323706](1323711 call factoredOffs[1320190] this[1323542]))
        const-val coerce_tmp[1323880]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1323884 'move' coerce_tmp[1323880](1323882 'deref' call_tmp[1323706]))
        (1323714 'move' tmp[1323688](1323717 call -[1264170] coerce_tmp[1323880]))
        (1323720 'move' tmp[1323662] tmp[1323688])
        (1323780 'move' shiftDist[1323660] tmp[1323662])
        ref call_tmp[1323784]:_ref(_ddata(unmanaged localesSignal?))[1317571] "dead after last mention" "maybe param" "temp"
        (1323786 'move' call_tmp[1323784](1323789 call shiftedData[1323887] this[1323542]))
        val call_tmp[1323792]:localesSignal[92278] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1323915]:BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318187] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1323921 'move' coerce_tmp[1323915](1323917 'cast' BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318187] this[1323542]))
        ref call_tmp[1323800]:_ref(_ddata(unmanaged localesSignal?))[1317571] "dead after last mention" "maybe param" "temp"
        (1323802 'move' call_tmp[1323800](1323805 call data[1320395] this[1323542]))
        val call_tmp[1323808]:_ddata(unmanaged localesSignal?)[1317562] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1323987]:_ddata(unmanaged localesSignal?)[1317562] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1323991 'move' coerce_tmp[1323987](1323989 'deref' call_tmp[1323800]))
        (1323810 'move' call_tmp[1323808](1323813 call _ddata_shift[1323926] coerce_tmp[1323987] shiftDist[1323660]))
        (1323818 call =[1321079] call_tmp[1323784] call_tmp[1323808])
      }
    }
    (1323825 return _void[55])
  }
  function [domain(1,int(64),false)] real(64)[1358944].initShiftedData[1364272](const in arg this[1364276]:[domain(1,int(64),false)] real(64)[1358944]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    {
      ref call_tmp[1364361]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
      (1364363 'move' call_tmp[1364361](1364366 call dom[1360329] this[1364276]))
      const-val call_tmp[1364369]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1364574]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1364578 'move' coerce_tmp[1364574](1364576 'deref' call_tmp[1364361]))
      val coerce_tmp[1364580]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1364585 'move' coerce_tmp[1364580] coerce_tmp[1364574])
      (1364371 'move' call_tmp[1364369](1364374 call dsiNumIndices[1263823] coerce_tmp[1364580]))
      const-val call_tmp[1364377]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1364379 'move' call_tmp[1364377](1364382 call >[437788] call_tmp[1364369] 0))
      const-val call_tmp[1364385]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1364387 'move' call_tmp[1364385] call_tmp[1364377])
      if call_tmp[1364385]
      {
        const-val shiftDist[1364394]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val tmp[1364396]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        val call_tmp[1364400]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1364589]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1364595 'move' coerce_tmp[1364589](1364591 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256408] this[1364276]))
        const-val tmp[1364422]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
        val call_tmp[1364424]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1364602]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1364608 'move' coerce_tmp[1364602](1364604 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256408] this[1364276]))
        ref call_tmp[1364440]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
        (1364442 'move' call_tmp[1364440](1364445 call factoredOffs[1360733] this[1364276]))
        const-val coerce_tmp[1364614]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1364618 'move' coerce_tmp[1364614](1364616 'deref' call_tmp[1364440]))
        (1364448 'move' tmp[1364422](1364451 call -[1264170] coerce_tmp[1364614]))
        (1364454 'move' tmp[1364396] tmp[1364422])
        (1364514 'move' shiftDist[1364394] tmp[1364396])
        ref call_tmp[1364518]:_ref(_ddata(real(64)))[1358114] "dead after last mention" "maybe param" "temp"
        (1364520 'move' call_tmp[1364518](1364523 call shiftedData[1364621] this[1364276]))
        val call_tmp[1364526]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1364649]:BaseRectangularArr(1,int(64),false,real(64))[1358730] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1364655 'move' coerce_tmp[1364649](1364651 'cast' BaseRectangularArr(1,int(64),false,real(64))[1358730] this[1364276]))
        ref call_tmp[1364534]:_ref(_ddata(real(64)))[1358114] "dead after last mention" "maybe param" "temp"
        (1364536 'move' call_tmp[1364534](1364539 call data[1360938] this[1364276]))
        val call_tmp[1364542]:_ddata(real(64))[1358105] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1364721]:_ddata(real(64))[1358105] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1364725 'move' coerce_tmp[1364721](1364723 'deref' call_tmp[1364534]))
        (1364544 'move' call_tmp[1364542](1364547 call _ddata_shift[1364660] coerce_tmp[1364721] shiftDist[1364394]))
        (1364552 call =[1361622] call_tmp[1364518] call_tmp[1364542])
      }
    }
    (1364559 return _void[55])
  }
  function [domain(1,int(64),false)] int(64)[1368867].initShiftedData[1372747](const in arg this[1372751]:[domain(1,int(64),false)] int(64)[1368867]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    {
      ref call_tmp[1372836]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
      (1372838 'move' call_tmp[1372836](1372841 call dom[1370252] this[1372751]))
      const-val call_tmp[1372844]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1373049]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1373053 'move' coerce_tmp[1373049](1373051 'deref' call_tmp[1372836]))
      val coerce_tmp[1373055]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1373060 'move' coerce_tmp[1373055] coerce_tmp[1373049])
      (1372846 'move' call_tmp[1372844](1372849 call dsiNumIndices[1263823] coerce_tmp[1373055]))
      const-val call_tmp[1372852]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1372854 'move' call_tmp[1372852](1372857 call >[437788] call_tmp[1372844] 0))
      const-val call_tmp[1372860]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1372862 'move' call_tmp[1372860] call_tmp[1372852])
      if call_tmp[1372860]
      {
        const-val shiftDist[1372869]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val tmp[1372871]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        val call_tmp[1372875]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1373064]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1373070 'move' coerce_tmp[1373064](1373066 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256408] this[1372751]))
        const-val tmp[1372897]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
        val call_tmp[1372899]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1373077]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1373083 'move' coerce_tmp[1373077](1373079 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256408] this[1372751]))
        ref call_tmp[1372915]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
        (1372917 'move' call_tmp[1372915](1372920 call factoredOffs[1370656] this[1372751]))
        const-val coerce_tmp[1373089]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1373093 'move' coerce_tmp[1373089](1373091 'deref' call_tmp[1372915]))
        (1372923 'move' tmp[1372897](1372926 call -[1264170] coerce_tmp[1373089]))
        (1372929 'move' tmp[1372871] tmp[1372897])
        (1372989 'move' shiftDist[1372869] tmp[1372871])
        ref call_tmp[1372993]:_ref(_ddata(int(64)))[1368037] "dead after last mention" "maybe param" "temp"
        (1372995 'move' call_tmp[1372993](1372998 call shiftedData[1373096] this[1372751]))
        val call_tmp[1373001]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1373124]:BaseRectangularArr(1,int(64),false,int(64))[1368653] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1373130 'move' coerce_tmp[1373124](1373126 'cast' BaseRectangularArr(1,int(64),false,int(64))[1368653] this[1372751]))
        ref call_tmp[1373009]:_ref(_ddata(int(64)))[1368037] "dead after last mention" "maybe param" "temp"
        (1373011 'move' call_tmp[1373009](1373014 call data[1370861] this[1372751]))
        val call_tmp[1373017]:_ddata(int(64))[1368028] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1373196]:_ddata(int(64))[1368028] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1373200 'move' coerce_tmp[1373196](1373198 'deref' call_tmp[1373009]))
        (1373019 'move' call_tmp[1373017](1373022 call _ddata_shift[1373135] coerce_tmp[1373196] shiftDist[1372869]))
        (1373027 call =[1371545] call_tmp[1372993] call_tmp[1373017])
      }
    }
    (1373034 return _void[55])
  }
  function [domain(1,int(64),false)] range(int(64),bounded,false)[1409224].initShiftedData[1414235](const in arg this[1414239]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    {
      ref call_tmp[1414324]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
      (1414326 'move' call_tmp[1414324](1414329 call dom[1410591] this[1414239]))
      const-val call_tmp[1414332]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1414537]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1414541 'move' coerce_tmp[1414537](1414539 'deref' call_tmp[1414324]))
      val coerce_tmp[1414543]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1414548 'move' coerce_tmp[1414543] coerce_tmp[1414537])
      (1414334 'move' call_tmp[1414332](1414337 call dsiNumIndices[1263823] coerce_tmp[1414543]))
      const-val call_tmp[1414340]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1414342 'move' call_tmp[1414340](1414345 call >[437788] call_tmp[1414332] 0))
      const-val call_tmp[1414348]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1414350 'move' call_tmp[1414348] call_tmp[1414340])
      if call_tmp[1414348]
      {
        const-val shiftDist[1414357]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val tmp[1414359]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        val call_tmp[1414363]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1414552]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1414558 'move' coerce_tmp[1414552](1414554 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256408] this[1414239]))
        const-val tmp[1414385]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
        val call_tmp[1414387]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1414565]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1414571 'move' coerce_tmp[1414565](1414567 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256408] this[1414239]))
        ref call_tmp[1414403]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
        (1414405 'move' call_tmp[1414403](1414408 call factoredOffs[1410995] this[1414239]))
        const-val coerce_tmp[1414577]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1414581 'move' coerce_tmp[1414577](1414579 'deref' call_tmp[1414403]))
        (1414411 'move' tmp[1414385](1414414 call -[1264170] coerce_tmp[1414577]))
        (1414417 'move' tmp[1414359] tmp[1414385])
        (1414477 'move' shiftDist[1414357] tmp[1414359])
        ref call_tmp[1414481]:_ref(_ddata(range(int(64),bounded,false)))[1406051] "dead after last mention" "maybe param" "temp"
        (1414483 'move' call_tmp[1414481](1414486 call shiftedData[1414584] this[1414239]))
        val call_tmp[1414489]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1414612]:BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1409010] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1414618 'move' coerce_tmp[1414612](1414614 'cast' BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1409010] this[1414239]))
        ref call_tmp[1414497]:_ref(_ddata(range(int(64),bounded,false)))[1406051] "dead after last mention" "maybe param" "temp"
        (1414499 'move' call_tmp[1414497](1414502 call data[1411200] this[1414239]))
        val call_tmp[1414505]:_ddata(range(int(64),bounded,false))[1406042] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1414684]:_ddata(range(int(64),bounded,false))[1406042] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1414688 'move' coerce_tmp[1414684](1414686 'deref' call_tmp[1414497]))
        (1414507 'move' call_tmp[1414505](1414510 call _ddata_shift[1414623] coerce_tmp[1414684] shiftDist[1414357]))
        (1414515 call =[1406365] call_tmp[1414481] call_tmp[1414505])
      }
    }
    (1414522 return _void[55])
  }
  function [domain(1,int(64),false)] uint(64)[1450261].initShiftedData[1454390](const in arg this[1454394]:[domain(1,int(64),false)] uint(64)[1450261]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    {
      ref call_tmp[1454479]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
      (1454481 'move' call_tmp[1454479](1454484 call dom[1451646] this[1454394]))
      const-val call_tmp[1454487]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1454692]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1454696 'move' coerce_tmp[1454692](1454694 'deref' call_tmp[1454479]))
      val coerce_tmp[1454698]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1454703 'move' coerce_tmp[1454698] coerce_tmp[1454692])
      (1454489 'move' call_tmp[1454487](1454492 call dsiNumIndices[1263823] coerce_tmp[1454698]))
      const-val call_tmp[1454495]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1454497 'move' call_tmp[1454495](1454500 call >[437788] call_tmp[1454487] 0))
      const-val call_tmp[1454503]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1454505 'move' call_tmp[1454503] call_tmp[1454495])
      if call_tmp[1454503]
      {
        const-val shiftDist[1454512]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val tmp[1454514]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        val call_tmp[1454518]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1454707]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1454713 'move' coerce_tmp[1454707](1454709 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256408] this[1454394]))
        const-val tmp[1454540]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
        val call_tmp[1454542]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1454720]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1454726 'move' coerce_tmp[1454720](1454722 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256408] this[1454394]))
        ref call_tmp[1454558]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
        (1454560 'move' call_tmp[1454558](1454563 call factoredOffs[1452050] this[1454394]))
        const-val coerce_tmp[1454732]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1454736 'move' coerce_tmp[1454732](1454734 'deref' call_tmp[1454558]))
        (1454566 'move' tmp[1454540](1454569 call -[1264170] coerce_tmp[1454732]))
        (1454572 'move' tmp[1454514] tmp[1454540])
        (1454632 'move' shiftDist[1454512] tmp[1454514])
        ref call_tmp[1454636]:_ref(_ddata(uint(64)))[1449431] "dead after last mention" "maybe param" "temp"
        (1454638 'move' call_tmp[1454636](1454641 call shiftedData[1454739] this[1454394]))
        val call_tmp[1454644]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1454767]:BaseRectangularArr(1,int(64),false,uint(64))[1450047] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1454773 'move' coerce_tmp[1454767](1454769 'cast' BaseRectangularArr(1,int(64),false,uint(64))[1450047] this[1454394]))
        ref call_tmp[1454652]:_ref(_ddata(uint(64)))[1449431] "dead after last mention" "maybe param" "temp"
        (1454654 'move' call_tmp[1454652](1454657 call data[1452255] this[1454394]))
        val call_tmp[1454660]:_ddata(uint(64))[1449422] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1454839]:_ddata(uint(64))[1449422] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1454843 'move' coerce_tmp[1454839](1454841 'deref' call_tmp[1454652]))
        (1454662 'move' call_tmp[1454660](1454665 call _ddata_shift[1454778] coerce_tmp[1454839] shiftDist[1454512]))
        (1454670 call =[1452939] call_tmp[1454636] call_tmp[1454660])
      }
    }
    (1454677 return _void[55])
  }
  function [domain(1,int(64),false)] locale[1256675].setupFieldsAndAllocate[1256867](const in arg this[1256871]:[domain(1,int(64),false)] locale[1256675]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    {
      const-val dim[1256882]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1256884 'move' dim[1256882] 0)
      {
        {
          ref call_tmp[1258084]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          ref _this_tmp_[1258198]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
          (1258200 'move' _this_tmp_[1258198](1258089 call off[1258170] this[1256871]))
          (1258086 'move' call_tmp[1258084](1258205 '.' _this_tmp_[1258198] x0[1256712]))
          ref call_tmp[1258094]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
          (1258096 'move' call_tmp[1258094](1258099 call dom[1258208] this[1256871]))
          const-val call_tmp[1258102]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val coerce_tmp[1258283]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1258287 'move' coerce_tmp[1258283](1258285 'deref' call_tmp[1258094]))
          val coerce_tmp[1258289]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1258294 'move' coerce_tmp[1258289] coerce_tmp[1258283])
          const-val ret_tmp[1912124]:range(int(64),bounded,false)[1027003] "temp"
          (1258110 call dsiDim[1258249] coerce_tmp[1258289] ret_tmp[1912124])
          (1912127 'move' call_tmp[1258102] ret_tmp[1912124])
          const-val call_tmp[1258112]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (1258114 'move' call_tmp[1258112](1258117 call alignedLow[1105050] call_tmp[1258102]))
          (1258121 call =[435443] call_tmp[1258084] call_tmp[1258112])
          (1924722 call chpl__autoDestroy[1407763] call_tmp[1258102])
          ref call_tmp[1258127]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          ref _this_tmp_[1258338]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
          (1258340 'move' _this_tmp_[1258338](1258132 call str[1258310] this[1256871]))
          (1258129 'move' call_tmp[1258127](1258345 '.' _this_tmp_[1258338] x0[1256712]))
          ref call_tmp[1258137]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
          (1258139 'move' call_tmp[1258137](1258142 call dom[1258208] this[1256871]))
          const-val call_tmp[1258145]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val coerce_tmp[1258349]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1258353 'move' coerce_tmp[1258349](1258351 'deref' call_tmp[1258137]))
          val coerce_tmp[1258355]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1258360 'move' coerce_tmp[1258355] coerce_tmp[1258349])
          const-val ret_tmp[1912130]:range(int(64),bounded,false)[1027003] "temp"
          (1258153 call dsiDim[1258249] coerce_tmp[1258355] ret_tmp[1912130])
          (1912133 'move' call_tmp[1258145] ret_tmp[1912130])
          (1258164 call =[435443] call_tmp[1258127] 1)
          (1924726 call chpl__autoDestroy[1407763] call_tmp[1258145])
        }
      }
      label _continueLabel0[1258080]
      label _unused_continueLabel[1257034]
      label _breakLabel[1257036]
    }
    {
      ref call_tmp[1257071]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
      ref _this_tmp_[1258492]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
      (1258494 'move' _this_tmp_[1258492](1257076 call blk[1258464] this[1256871]))
      (1257073 'move' call_tmp[1257071](1258499 '.' _this_tmp_[1258492] x0[1256712]))
      val call_tmp[1257081]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1257098 call =[435443] call_tmp[1257071] 1)
      {
        const-val dim[1257103]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1257105 'move' dim[1257103] 0)
        label _unused_continueLabel[1257248]
        label _breakLabel[1257250]
      }
    }
    (1257460 call computeFactoredOffs[1259477] this[1256871])
    const-val size[1257462]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val tmp[1257464]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1257483]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
    ref call_tmp[1257485]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
    ref _this_tmp_[1259826]:_ref(1*int(64))[1256784] "dead at end of block" "temp"
    (1259828 'move' _this_tmp_[1259826](1257490 call blk[1258464] this[1256871]))
    (1257487 'move' call_tmp[1257485](1259833 '.' _this_tmp_[1259826] x0[1256712]))
    ref call_tmp[1257495]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
    (1257497 'move' call_tmp[1257495](1257500 call dom[1258208] this[1256871]))
    const-val call_tmp[1257503]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    val coerce_tmp[1259837]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1259841 'move' coerce_tmp[1259837](1259839 'deref' call_tmp[1257495]))
    val coerce_tmp[1259843]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1259848 'move' coerce_tmp[1259843] coerce_tmp[1259837])
    const-val ret_tmp[1912118]:range(int(64),bounded,false)[1027003] "temp"
    (1257511 call dsiDim[1258249] coerce_tmp[1259843] ret_tmp[1912118])
    (1912121 'move' call_tmp[1257503] ret_tmp[1912118])
    const-val call_tmp[1257513]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1257515 'move' call_tmp[1257513](1257518 call size[1035978] call_tmp[1257503]))
    const-val coerce_tmp[1259852]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1259856 'move' coerce_tmp[1259852](1259854 'deref' call_tmp[1257485]))
    (1257521 'move' tmp[1257483](1257524 call *[441944] coerce_tmp[1259852] call_tmp[1257513]))
    (1257527 'move' tmp[1257464] tmp[1257483])
    (1257615 'move' size[1257462] tmp[1257464])
    ref call_tmp[1257743]:_ref(_ddata(locale))[1255592] "dead after last mention" "maybe param" "temp"
    (1257745 'move' call_tmp[1257743](1257748 call data[1259861] this[1256871]))
    const-val call_tmp[1257751]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1259916]:_ddata(locale)[1255583] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1259920 'move' coerce_tmp[1259916](1259918 'deref' call_tmp[1257743]))
    (1257753 'move' call_tmp[1257751](1257756 call ==[1259889] coerce_tmp[1259916] nil[44]))
    const-val call_tmp[1257759]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1257761 'move' call_tmp[1257759] call_tmp[1257751])
    if call_tmp[1257759]
    {
      {
        ref call_tmp[1257818]:_ref(_ddata(locale))[1255592] "dead after last mention" "maybe param" "temp"
        (1257820 'move' call_tmp[1257818](1257823 call data[1259861] this[1256871]))
        val call_tmp[1257826]:locale[28] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1260006]:BaseRectangularArr(1,int(64),false,locale)[1256461] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1260012 'move' coerce_tmp[1260006](1260008 'cast' BaseRectangularArr(1,int(64),false,locale)[1256461] this[1256871]))
        ref call_tmp[1257834]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
        (1257836 'move' call_tmp[1257834](1257839 call callPostAlloc[1260229] this[1256871]))
        val call_tmp[1257842]:_ddata(locale)[1255583] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val default_arg_subloc[1260399]:int(32)[95] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1260403 'move' default_arg_subloc[1260399](1260401 call _ddata_allocate_noinit_default_subloc[1260382]))
        val _formal_tmp_out_callPostAlloc[1260406]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
        (1257844 'move' call_tmp[1257842](1257847 call _ddata_allocate_noinit[1260257] size[1257462] _formal_tmp_out_callPostAlloc[1260406] default_arg_subloc[1260399]))
        (1260408 call =[435290] call_tmp[1257834] _formal_tmp_out_callPostAlloc[1260406])
        (1257852 call =[1260545] call_tmp[1257818] call_tmp[1257842])
      }
      {
        ref call_tmp[1257955]:_ref(_ddata(locale))[1255592] "dead after last mention" "maybe param" "temp"
        (1257957 'move' call_tmp[1257955](1257960 call data[1259861] this[1256871]))
        val call_tmp[1257963]:locale[28] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1260658]:BaseRectangularArr(1,int(64),false,locale)[1256461] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1260664 'move' coerce_tmp[1260658](1260660 'cast' BaseRectangularArr(1,int(64),false,locale)[1256461] this[1256871]))
        val coerce_tmp[1260902]:_ddata(locale)[1255583] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1260906 'move' coerce_tmp[1260902](1260904 'deref' call_tmp[1257955]))
        (1257972 call init_elts[1260668] coerce_tmp[1260902] size[1257462] 0)
        (1257982 call dsiElementInitializationComplete[1263015] this[1256871])
      }
    }
    (1257989 call initShiftedData[1263452] this[1256871])
    (1924729 call chpl__autoDestroy[1407763] call_tmp[1257503])
    (1257990 return _void[55])
  }
  function [domain(1,int(64),false)] unmanaged localesSignal?[1318401].setupFieldsAndAllocate[1318514](const in arg this[1318518]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    {
      const-val dim[1318529]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1318531 'move' dim[1318529] 0)
      {
        {
          ref call_tmp[1319662]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          ref _this_tmp_[1319776]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
          (1319778 'move' _this_tmp_[1319776](1319667 call off[1319748] this[1318518]))
          (1319664 'move' call_tmp[1319662](1319783 '.' _this_tmp_[1319776] x0[1256712]))
          ref call_tmp[1319672]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
          (1319674 'move' call_tmp[1319672](1319677 call dom[1319786] this[1318518]))
          const-val call_tmp[1319680]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val coerce_tmp[1319814]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1319818 'move' coerce_tmp[1319814](1319816 'deref' call_tmp[1319672]))
          val coerce_tmp[1319820]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1319825 'move' coerce_tmp[1319820] coerce_tmp[1319814])
          const-val ret_tmp[1912148]:range(int(64),bounded,false)[1027003] "temp"
          (1319688 call dsiDim[1258249] coerce_tmp[1319820] ret_tmp[1912148])
          (1912151 'move' call_tmp[1319680] ret_tmp[1912148])
          const-val call_tmp[1319690]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (1319692 'move' call_tmp[1319690](1319695 call alignedLow[1105050] call_tmp[1319680]))
          (1319699 call =[435443] call_tmp[1319662] call_tmp[1319690])
          (1925303 call chpl__autoDestroy[1407763] call_tmp[1319680])
          ref call_tmp[1319705]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          ref _this_tmp_[1319858]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
          (1319860 'move' _this_tmp_[1319858](1319710 call str[1319830] this[1318518]))
          (1319707 'move' call_tmp[1319705](1319865 '.' _this_tmp_[1319858] x0[1256712]))
          ref call_tmp[1319715]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
          (1319717 'move' call_tmp[1319715](1319720 call dom[1319786] this[1318518]))
          const-val call_tmp[1319723]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val coerce_tmp[1319869]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1319873 'move' coerce_tmp[1319869](1319871 'deref' call_tmp[1319715]))
          val coerce_tmp[1319875]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1319880 'move' coerce_tmp[1319875] coerce_tmp[1319869])
          const-val ret_tmp[1912154]:range(int(64),bounded,false)[1027003] "temp"
          (1319731 call dsiDim[1258249] coerce_tmp[1319875] ret_tmp[1912154])
          (1912157 'move' call_tmp[1319723] ret_tmp[1912154])
          (1319742 call =[435443] call_tmp[1319705] 1)
          (1925307 call chpl__autoDestroy[1407763] call_tmp[1319723])
        }
      }
      label _continueLabel0[1319658]
      label _unused_continueLabel[1318681]
      label _breakLabel[1318683]
    }
    {
      ref call_tmp[1318718]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
      ref _this_tmp_[1319922]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
      (1319924 'move' _this_tmp_[1319922](1318723 call blk[1319894] this[1318518]))
      (1318720 'move' call_tmp[1318718](1319929 '.' _this_tmp_[1319922] x0[1256712]))
      val call_tmp[1318728]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1318745 call =[435443] call_tmp[1318718] 1)
      {
        const-val dim[1318750]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1318752 'move' dim[1318750] 0)
        label _unused_continueLabel[1318895]
        label _breakLabel[1318897]
      }
    }
    (1319107 call computeFactoredOffs[1320011] this[1318518])
    const-val size[1319109]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val tmp[1319111]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1319130]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
    ref call_tmp[1319132]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
    ref _this_tmp_[1320360]:_ref(1*int(64))[1256784] "dead at end of block" "temp"
    (1320362 'move' _this_tmp_[1320360](1319137 call blk[1319894] this[1318518]))
    (1319134 'move' call_tmp[1319132](1320367 '.' _this_tmp_[1320360] x0[1256712]))
    ref call_tmp[1319142]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
    (1319144 'move' call_tmp[1319142](1319147 call dom[1319786] this[1318518]))
    const-val call_tmp[1319150]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    val coerce_tmp[1320371]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1320375 'move' coerce_tmp[1320371](1320373 'deref' call_tmp[1319142]))
    val coerce_tmp[1320377]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1320382 'move' coerce_tmp[1320377] coerce_tmp[1320371])
    const-val ret_tmp[1912142]:range(int(64),bounded,false)[1027003] "temp"
    (1319158 call dsiDim[1258249] coerce_tmp[1320377] ret_tmp[1912142])
    (1912145 'move' call_tmp[1319150] ret_tmp[1912142])
    const-val call_tmp[1319160]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1319162 'move' call_tmp[1319160](1319165 call size[1035978] call_tmp[1319150]))
    const-val coerce_tmp[1320386]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1320390 'move' coerce_tmp[1320386](1320388 'deref' call_tmp[1319132]))
    (1319168 'move' tmp[1319130](1319171 call *[441944] coerce_tmp[1320386] call_tmp[1319160]))
    (1319174 'move' tmp[1319111] tmp[1319130])
    (1319262 'move' size[1319109] tmp[1319111])
    ref call_tmp[1319390]:_ref(_ddata(unmanaged localesSignal?))[1317571] "dead after last mention" "maybe param" "temp"
    (1319392 'move' call_tmp[1319390](1319395 call data[1320395] this[1318518]))
    const-val call_tmp[1319398]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1320450]:_ddata(unmanaged localesSignal?)[1317562] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1320454 'move' coerce_tmp[1320450](1320452 'deref' call_tmp[1319390]))
    (1319400 'move' call_tmp[1319398](1319403 call ==[1320423] coerce_tmp[1320450] nil[44]))
    const-val call_tmp[1319406]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1319408 'move' call_tmp[1319406] call_tmp[1319398])
    if call_tmp[1319406]
    {
      {
        ref call_tmp[1319465]:_ref(_ddata(unmanaged localesSignal?))[1317571] "dead after last mention" "maybe param" "temp"
        (1319467 'move' call_tmp[1319465](1319470 call data[1320395] this[1318518]))
        val call_tmp[1319473]:localesSignal[92278] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1320540]:BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318187] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1320546 'move' coerce_tmp[1320540](1320542 'cast' BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318187] this[1318518]))
        ref call_tmp[1319481]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
        (1319483 'move' call_tmp[1319481](1319486 call callPostAlloc[1320763] this[1318518]))
        val call_tmp[1319489]:_ddata(unmanaged localesSignal?)[1317562] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val default_arg_subloc[1320933]:int(32)[95] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1320937 'move' default_arg_subloc[1320933](1320935 call _ddata_allocate_noinit_default_subloc[1320916]))
        val _formal_tmp_out_callPostAlloc[1320940]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
        (1319491 'move' call_tmp[1319489](1319494 call _ddata_allocate_noinit[1320791] size[1319109] _formal_tmp_out_callPostAlloc[1320940] default_arg_subloc[1320933]))
        (1320942 call =[435290] call_tmp[1319481] _formal_tmp_out_callPostAlloc[1320940])
        (1319499 call =[1321079] call_tmp[1319465] call_tmp[1319489])
      }
      {
        ref call_tmp[1319602]:_ref(_ddata(unmanaged localesSignal?))[1317571] "dead after last mention" "maybe param" "temp"
        (1319604 'move' call_tmp[1319602](1319607 call data[1320395] this[1318518]))
        val call_tmp[1319610]:localesSignal[92278] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1321192]:BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318187] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1321198 'move' coerce_tmp[1321192](1321194 'cast' BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318187] this[1318518]))
        val coerce_tmp[1321436]:_ddata(unmanaged localesSignal?)[1317562] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1321440 'move' coerce_tmp[1321436](1321438 'deref' call_tmp[1319602]))
        (1319619 call init_elts[1321202] coerce_tmp[1321436] size[1319109] 0)
        (1319629 call dsiElementInitializationComplete[1323101] this[1318518])
      }
    }
    (1319636 call initShiftedData[1323538] this[1318518])
    (1925310 call chpl__autoDestroy[1407763] call_tmp[1319150])
    (1319637 return _void[55])
  }
  function [domain(1,int(64),false)] real(64)[1358944].setupFieldsAndAllocate[1359057](const in arg this[1359061]:[domain(1,int(64),false)] real(64)[1358944]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    {
      const-val dim[1359072]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1359074 'move' dim[1359072] 0)
      {
        {
          ref call_tmp[1360205]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          ref _this_tmp_[1360319]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
          (1360321 'move' _this_tmp_[1360319](1360210 call off[1360291] this[1359061]))
          (1360207 'move' call_tmp[1360205](1360326 '.' _this_tmp_[1360319] x0[1256712]))
          ref call_tmp[1360215]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
          (1360217 'move' call_tmp[1360215](1360220 call dom[1360329] this[1359061]))
          const-val call_tmp[1360223]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val coerce_tmp[1360357]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1360361 'move' coerce_tmp[1360357](1360359 'deref' call_tmp[1360215]))
          val coerce_tmp[1360363]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1360368 'move' coerce_tmp[1360363] coerce_tmp[1360357])
          const-val ret_tmp[1912184]:range(int(64),bounded,false)[1027003] "temp"
          (1360231 call dsiDim[1258249] coerce_tmp[1360363] ret_tmp[1912184])
          (1912187 'move' call_tmp[1360223] ret_tmp[1912184])
          const-val call_tmp[1360233]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (1360235 'move' call_tmp[1360233](1360238 call alignedLow[1105050] call_tmp[1360223]))
          (1360242 call =[435443] call_tmp[1360205] call_tmp[1360233])
          (1925586 call chpl__autoDestroy[1407763] call_tmp[1360223])
          ref call_tmp[1360248]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          ref _this_tmp_[1360401]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
          (1360403 'move' _this_tmp_[1360401](1360253 call str[1360373] this[1359061]))
          (1360250 'move' call_tmp[1360248](1360408 '.' _this_tmp_[1360401] x0[1256712]))
          ref call_tmp[1360258]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
          (1360260 'move' call_tmp[1360258](1360263 call dom[1360329] this[1359061]))
          const-val call_tmp[1360266]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val coerce_tmp[1360412]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1360416 'move' coerce_tmp[1360412](1360414 'deref' call_tmp[1360258]))
          val coerce_tmp[1360418]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1360423 'move' coerce_tmp[1360418] coerce_tmp[1360412])
          const-val ret_tmp[1912190]:range(int(64),bounded,false)[1027003] "temp"
          (1360274 call dsiDim[1258249] coerce_tmp[1360418] ret_tmp[1912190])
          (1912193 'move' call_tmp[1360266] ret_tmp[1912190])
          (1360285 call =[435443] call_tmp[1360248] 1)
          (1925590 call chpl__autoDestroy[1407763] call_tmp[1360266])
        }
      }
      label _continueLabel0[1360201]
      label _unused_continueLabel[1359224]
      label _breakLabel[1359226]
    }
    {
      ref call_tmp[1359261]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
      ref _this_tmp_[1360465]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
      (1360467 'move' _this_tmp_[1360465](1359266 call blk[1360437] this[1359061]))
      (1359263 'move' call_tmp[1359261](1360472 '.' _this_tmp_[1360465] x0[1256712]))
      val call_tmp[1359271]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1359288 call =[435443] call_tmp[1359261] 1)
      {
        const-val dim[1359293]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1359295 'move' dim[1359293] 0)
        label _unused_continueLabel[1359438]
        label _breakLabel[1359440]
      }
    }
    (1359650 call computeFactoredOffs[1360554] this[1359061])
    const-val size[1359652]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val tmp[1359654]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1359673]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
    ref call_tmp[1359675]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
    ref _this_tmp_[1360903]:_ref(1*int(64))[1256784] "dead at end of block" "temp"
    (1360905 'move' _this_tmp_[1360903](1359680 call blk[1360437] this[1359061]))
    (1359677 'move' call_tmp[1359675](1360910 '.' _this_tmp_[1360903] x0[1256712]))
    ref call_tmp[1359685]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
    (1359687 'move' call_tmp[1359685](1359690 call dom[1360329] this[1359061]))
    const-val call_tmp[1359693]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    val coerce_tmp[1360914]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1360918 'move' coerce_tmp[1360914](1360916 'deref' call_tmp[1359685]))
    val coerce_tmp[1360920]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1360925 'move' coerce_tmp[1360920] coerce_tmp[1360914])
    const-val ret_tmp[1912178]:range(int(64),bounded,false)[1027003] "temp"
    (1359701 call dsiDim[1258249] coerce_tmp[1360920] ret_tmp[1912178])
    (1912181 'move' call_tmp[1359693] ret_tmp[1912178])
    const-val call_tmp[1359703]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1359705 'move' call_tmp[1359703](1359708 call size[1035978] call_tmp[1359693]))
    const-val coerce_tmp[1360929]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1360933 'move' coerce_tmp[1360929](1360931 'deref' call_tmp[1359675]))
    (1359711 'move' tmp[1359673](1359714 call *[441944] coerce_tmp[1360929] call_tmp[1359703]))
    (1359717 'move' tmp[1359654] tmp[1359673])
    (1359805 'move' size[1359652] tmp[1359654])
    ref call_tmp[1359933]:_ref(_ddata(real(64)))[1358114] "dead after last mention" "maybe param" "temp"
    (1359935 'move' call_tmp[1359933](1359938 call data[1360938] this[1359061]))
    const-val call_tmp[1359941]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1360993]:_ddata(real(64))[1358105] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1360997 'move' coerce_tmp[1360993](1360995 'deref' call_tmp[1359933]))
    (1359943 'move' call_tmp[1359941](1359946 call ==[1360966] coerce_tmp[1360993] nil[44]))
    const-val call_tmp[1359949]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1359951 'move' call_tmp[1359949] call_tmp[1359941])
    if call_tmp[1359949]
    {
      {
        ref call_tmp[1360008]:_ref(_ddata(real(64)))[1358114] "dead after last mention" "maybe param" "temp"
        (1360010 'move' call_tmp[1360008](1360013 call data[1360938] this[1359061]))
        val call_tmp[1360016]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1361083]:BaseRectangularArr(1,int(64),false,real(64))[1358730] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1361089 'move' coerce_tmp[1361083](1361085 'cast' BaseRectangularArr(1,int(64),false,real(64))[1358730] this[1359061]))
        ref call_tmp[1360024]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
        (1360026 'move' call_tmp[1360024](1360029 call callPostAlloc[1361306] this[1359061]))
        val call_tmp[1360032]:_ddata(real(64))[1358105] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val default_arg_subloc[1361476]:int(32)[95] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1361480 'move' default_arg_subloc[1361476](1361478 call _ddata_allocate_noinit_default_subloc[1361459]))
        val _formal_tmp_out_callPostAlloc[1361483]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
        (1360034 'move' call_tmp[1360032](1360037 call _ddata_allocate_noinit[1361334] size[1359652] _formal_tmp_out_callPostAlloc[1361483] default_arg_subloc[1361476]))
        (1361485 call =[435290] call_tmp[1360024] _formal_tmp_out_callPostAlloc[1361483])
        (1360042 call =[1361622] call_tmp[1360008] call_tmp[1360032])
      }
      {
        ref call_tmp[1360145]:_ref(_ddata(real(64)))[1358114] "dead after last mention" "maybe param" "temp"
        (1360147 'move' call_tmp[1360145](1360150 call data[1360938] this[1359061]))
        val call_tmp[1360153]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1361735]:BaseRectangularArr(1,int(64),false,real(64))[1358730] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1361741 'move' coerce_tmp[1361735](1361737 'cast' BaseRectangularArr(1,int(64),false,real(64))[1358730] this[1359061]))
        val coerce_tmp[1361979]:_ddata(real(64))[1358105] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1361983 'move' coerce_tmp[1361979](1361981 'deref' call_tmp[1360145]))
        (1360162 call init_elts[1361745] coerce_tmp[1361979] size[1359652] 0)
        (1360172 call dsiElementInitializationComplete[1363835] this[1359061])
      }
    }
    (1360179 call initShiftedData[1364272] this[1359061])
    (1925593 call chpl__autoDestroy[1407763] call_tmp[1359693])
    (1360180 return _void[55])
  }
  function [domain(1,int(64),false)] int(64)[1368867].setupFieldsAndAllocate[1368980](const in arg this[1368984]:[domain(1,int(64),false)] int(64)[1368867]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    {
      const-val dim[1368995]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1368997 'move' dim[1368995] 0)
      {
        {
          ref call_tmp[1370128]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          ref _this_tmp_[1370242]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
          (1370244 'move' _this_tmp_[1370242](1370133 call off[1370214] this[1368984]))
          (1370130 'move' call_tmp[1370128](1370249 '.' _this_tmp_[1370242] x0[1256712]))
          ref call_tmp[1370138]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
          (1370140 'move' call_tmp[1370138](1370143 call dom[1370252] this[1368984]))
          const-val call_tmp[1370146]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val coerce_tmp[1370280]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1370284 'move' coerce_tmp[1370280](1370282 'deref' call_tmp[1370138]))
          val coerce_tmp[1370286]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1370291 'move' coerce_tmp[1370286] coerce_tmp[1370280])
          const-val ret_tmp[1912208]:range(int(64),bounded,false)[1027003] "temp"
          (1370154 call dsiDim[1258249] coerce_tmp[1370286] ret_tmp[1912208])
          (1912211 'move' call_tmp[1370146] ret_tmp[1912208])
          const-val call_tmp[1370156]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (1370158 'move' call_tmp[1370156](1370161 call alignedLow[1105050] call_tmp[1370146]))
          (1370165 call =[435443] call_tmp[1370128] call_tmp[1370156])
          (1925623 call chpl__autoDestroy[1407763] call_tmp[1370146])
          ref call_tmp[1370171]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          ref _this_tmp_[1370324]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
          (1370326 'move' _this_tmp_[1370324](1370176 call str[1370296] this[1368984]))
          (1370173 'move' call_tmp[1370171](1370331 '.' _this_tmp_[1370324] x0[1256712]))
          ref call_tmp[1370181]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
          (1370183 'move' call_tmp[1370181](1370186 call dom[1370252] this[1368984]))
          const-val call_tmp[1370189]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val coerce_tmp[1370335]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1370339 'move' coerce_tmp[1370335](1370337 'deref' call_tmp[1370181]))
          val coerce_tmp[1370341]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1370346 'move' coerce_tmp[1370341] coerce_tmp[1370335])
          const-val ret_tmp[1912214]:range(int(64),bounded,false)[1027003] "temp"
          (1370197 call dsiDim[1258249] coerce_tmp[1370341] ret_tmp[1912214])
          (1912217 'move' call_tmp[1370189] ret_tmp[1912214])
          (1370208 call =[435443] call_tmp[1370171] 1)
          (1925627 call chpl__autoDestroy[1407763] call_tmp[1370189])
        }
      }
      label _continueLabel0[1370124]
      label _unused_continueLabel[1369147]
      label _breakLabel[1369149]
    }
    {
      ref call_tmp[1369184]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
      ref _this_tmp_[1370388]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
      (1370390 'move' _this_tmp_[1370388](1369189 call blk[1370360] this[1368984]))
      (1369186 'move' call_tmp[1369184](1370395 '.' _this_tmp_[1370388] x0[1256712]))
      val call_tmp[1369194]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1369211 call =[435443] call_tmp[1369184] 1)
      {
        const-val dim[1369216]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1369218 'move' dim[1369216] 0)
        label _unused_continueLabel[1369361]
        label _breakLabel[1369363]
      }
    }
    (1369573 call computeFactoredOffs[1370477] this[1368984])
    const-val size[1369575]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val tmp[1369577]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1369596]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
    ref call_tmp[1369598]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
    ref _this_tmp_[1370826]:_ref(1*int(64))[1256784] "dead at end of block" "temp"
    (1370828 'move' _this_tmp_[1370826](1369603 call blk[1370360] this[1368984]))
    (1369600 'move' call_tmp[1369598](1370833 '.' _this_tmp_[1370826] x0[1256712]))
    ref call_tmp[1369608]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
    (1369610 'move' call_tmp[1369608](1369613 call dom[1370252] this[1368984]))
    const-val call_tmp[1369616]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    val coerce_tmp[1370837]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1370841 'move' coerce_tmp[1370837](1370839 'deref' call_tmp[1369608]))
    val coerce_tmp[1370843]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1370848 'move' coerce_tmp[1370843] coerce_tmp[1370837])
    const-val ret_tmp[1912202]:range(int(64),bounded,false)[1027003] "temp"
    (1369624 call dsiDim[1258249] coerce_tmp[1370843] ret_tmp[1912202])
    (1912205 'move' call_tmp[1369616] ret_tmp[1912202])
    const-val call_tmp[1369626]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1369628 'move' call_tmp[1369626](1369631 call size[1035978] call_tmp[1369616]))
    const-val coerce_tmp[1370852]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1370856 'move' coerce_tmp[1370852](1370854 'deref' call_tmp[1369598]))
    (1369634 'move' tmp[1369596](1369637 call *[441944] coerce_tmp[1370852] call_tmp[1369626]))
    (1369640 'move' tmp[1369577] tmp[1369596])
    (1369728 'move' size[1369575] tmp[1369577])
    ref call_tmp[1369856]:_ref(_ddata(int(64)))[1368037] "dead after last mention" "maybe param" "temp"
    (1369858 'move' call_tmp[1369856](1369861 call data[1370861] this[1368984]))
    const-val call_tmp[1369864]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1370916]:_ddata(int(64))[1368028] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1370920 'move' coerce_tmp[1370916](1370918 'deref' call_tmp[1369856]))
    (1369866 'move' call_tmp[1369864](1369869 call ==[1370889] coerce_tmp[1370916] nil[44]))
    const-val call_tmp[1369872]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1369874 'move' call_tmp[1369872] call_tmp[1369864])
    if call_tmp[1369872]
    {
      {
        ref call_tmp[1369931]:_ref(_ddata(int(64)))[1368037] "dead after last mention" "maybe param" "temp"
        (1369933 'move' call_tmp[1369931](1369936 call data[1370861] this[1368984]))
        val call_tmp[1369939]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1371006]:BaseRectangularArr(1,int(64),false,int(64))[1368653] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1371012 'move' coerce_tmp[1371006](1371008 'cast' BaseRectangularArr(1,int(64),false,int(64))[1368653] this[1368984]))
        ref call_tmp[1369947]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
        (1369949 'move' call_tmp[1369947](1369952 call callPostAlloc[1371229] this[1368984]))
        val call_tmp[1369955]:_ddata(int(64))[1368028] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val default_arg_subloc[1371399]:int(32)[95] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1371403 'move' default_arg_subloc[1371399](1371401 call _ddata_allocate_noinit_default_subloc[1371382]))
        val _formal_tmp_out_callPostAlloc[1371406]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
        (1369957 'move' call_tmp[1369955](1369960 call _ddata_allocate_noinit[1371257] size[1369575] _formal_tmp_out_callPostAlloc[1371406] default_arg_subloc[1371399]))
        (1371408 call =[435290] call_tmp[1369947] _formal_tmp_out_callPostAlloc[1371406])
        (1369965 call =[1371545] call_tmp[1369931] call_tmp[1369955])
      }
      {
        ref call_tmp[1370068]:_ref(_ddata(int(64)))[1368037] "dead after last mention" "maybe param" "temp"
        (1370070 'move' call_tmp[1370068](1370073 call data[1370861] this[1368984]))
        val call_tmp[1370076]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1371658]:BaseRectangularArr(1,int(64),false,int(64))[1368653] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1371664 'move' coerce_tmp[1371658](1371660 'cast' BaseRectangularArr(1,int(64),false,int(64))[1368653] this[1368984]))
        val coerce_tmp[1371902]:_ddata(int(64))[1368028] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1371906 'move' coerce_tmp[1371902](1371904 'deref' call_tmp[1370068]))
        (1370085 call init_elts[1371668] coerce_tmp[1371902] size[1369575] 0)
        (1370095 call dsiElementInitializationComplete[1372310] this[1368984])
      }
    }
    (1370102 call initShiftedData[1372747] this[1368984])
    (1925630 call chpl__autoDestroy[1407763] call_tmp[1369616])
    (1370103 return _void[55])
  }
  function [domain(1,int(64),false)] range(int(64),bounded,false)[1409224].setupFieldsAndAllocate[1409319](const in arg this[1409323]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    {
      const-val dim[1409334]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1409336 'move' dim[1409334] 0)
      {
        {
          ref call_tmp[1410467]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          ref _this_tmp_[1410581]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
          (1410583 'move' _this_tmp_[1410581](1410472 call off[1410553] this[1409323]))
          (1410469 'move' call_tmp[1410467](1410588 '.' _this_tmp_[1410581] x0[1256712]))
          ref call_tmp[1410477]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
          (1410479 'move' call_tmp[1410477](1410482 call dom[1410591] this[1409323]))
          const-val call_tmp[1410485]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val coerce_tmp[1410619]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1410623 'move' coerce_tmp[1410619](1410621 'deref' call_tmp[1410477]))
          val coerce_tmp[1410625]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1410630 'move' coerce_tmp[1410625] coerce_tmp[1410619])
          const-val ret_tmp[1912244]:range(int(64),bounded,false)[1027003] "temp"
          (1410493 call dsiDim[1258249] coerce_tmp[1410625] ret_tmp[1912244])
          (1912247 'move' call_tmp[1410485] ret_tmp[1912244])
          const-val call_tmp[1410495]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (1410497 'move' call_tmp[1410495](1410500 call alignedLow[1105050] call_tmp[1410485]))
          (1410504 call =[435443] call_tmp[1410467] call_tmp[1410495])
          (1925948 call chpl__autoDestroy[1407763] call_tmp[1410485])
          ref call_tmp[1410510]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          ref _this_tmp_[1410663]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
          (1410665 'move' _this_tmp_[1410663](1410515 call str[1410635] this[1409323]))
          (1410512 'move' call_tmp[1410510](1410670 '.' _this_tmp_[1410663] x0[1256712]))
          ref call_tmp[1410520]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
          (1410522 'move' call_tmp[1410520](1410525 call dom[1410591] this[1409323]))
          const-val call_tmp[1410528]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val coerce_tmp[1410674]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1410678 'move' coerce_tmp[1410674](1410676 'deref' call_tmp[1410520]))
          val coerce_tmp[1410680]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1410685 'move' coerce_tmp[1410680] coerce_tmp[1410674])
          const-val ret_tmp[1912250]:range(int(64),bounded,false)[1027003] "temp"
          (1410536 call dsiDim[1258249] coerce_tmp[1410680] ret_tmp[1912250])
          (1912253 'move' call_tmp[1410528] ret_tmp[1912250])
          (1410547 call =[435443] call_tmp[1410510] 1)
          (1925952 call chpl__autoDestroy[1407763] call_tmp[1410528])
        }
      }
      label _continueLabel0[1410463]
      label _unused_continueLabel[1409486]
      label _breakLabel[1409488]
    }
    {
      ref call_tmp[1409523]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
      ref _this_tmp_[1410727]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
      (1410729 'move' _this_tmp_[1410727](1409528 call blk[1410699] this[1409323]))
      (1409525 'move' call_tmp[1409523](1410734 '.' _this_tmp_[1410727] x0[1256712]))
      val call_tmp[1409533]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1409550 call =[435443] call_tmp[1409523] 1)
      {
        const-val dim[1409555]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1409557 'move' dim[1409555] 0)
        label _unused_continueLabel[1409700]
        label _breakLabel[1409702]
      }
    }
    (1409912 call computeFactoredOffs[1410816] this[1409323])
    const-val size[1409914]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val tmp[1409916]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1409935]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
    ref call_tmp[1409937]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
    ref _this_tmp_[1411165]:_ref(1*int(64))[1256784] "dead at end of block" "temp"
    (1411167 'move' _this_tmp_[1411165](1409942 call blk[1410699] this[1409323]))
    (1409939 'move' call_tmp[1409937](1411172 '.' _this_tmp_[1411165] x0[1256712]))
    ref call_tmp[1409947]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
    (1409949 'move' call_tmp[1409947](1409952 call dom[1410591] this[1409323]))
    const-val call_tmp[1409955]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    val coerce_tmp[1411176]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1411180 'move' coerce_tmp[1411176](1411178 'deref' call_tmp[1409947]))
    val coerce_tmp[1411182]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1411187 'move' coerce_tmp[1411182] coerce_tmp[1411176])
    const-val ret_tmp[1912238]:range(int(64),bounded,false)[1027003] "temp"
    (1409963 call dsiDim[1258249] coerce_tmp[1411182] ret_tmp[1912238])
    (1912241 'move' call_tmp[1409955] ret_tmp[1912238])
    const-val call_tmp[1409965]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1409967 'move' call_tmp[1409965](1409970 call size[1035978] call_tmp[1409955]))
    const-val coerce_tmp[1411191]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1411195 'move' coerce_tmp[1411191](1411193 'deref' call_tmp[1409937]))
    (1409973 'move' tmp[1409935](1409976 call *[441944] coerce_tmp[1411191] call_tmp[1409965]))
    (1409979 'move' tmp[1409916] tmp[1409935])
    (1410067 'move' size[1409914] tmp[1409916])
    ref call_tmp[1410195]:_ref(_ddata(range(int(64),bounded,false)))[1406051] "dead after last mention" "maybe param" "temp"
    (1410197 'move' call_tmp[1410195](1410200 call data[1411200] this[1409323]))
    const-val call_tmp[1410203]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1411255]:_ddata(range(int(64),bounded,false))[1406042] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1411259 'move' coerce_tmp[1411255](1411257 'deref' call_tmp[1410195]))
    (1410205 'move' call_tmp[1410203](1410208 call ==[1411228] coerce_tmp[1411255] nil[44]))
    const-val call_tmp[1410211]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1410213 'move' call_tmp[1410211] call_tmp[1410203])
    if call_tmp[1410211]
    {
      {
        ref call_tmp[1410270]:_ref(_ddata(range(int(64),bounded,false)))[1406051] "dead after last mention" "maybe param" "temp"
        (1410272 'move' call_tmp[1410270](1410275 call data[1411200] this[1409323]))
        val call_tmp[1410278]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1411345]:BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1409010] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1411351 'move' coerce_tmp[1411345](1411347 'cast' BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1409010] this[1409323]))
        ref call_tmp[1410286]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
        (1410288 'move' call_tmp[1410286](1410291 call callPostAlloc[1411568] this[1409323]))
        val call_tmp[1410294]:_ddata(range(int(64),bounded,false))[1406042] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val default_arg_subloc[1411738]:int(32)[95] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1411742 'move' default_arg_subloc[1411738](1411740 call _ddata_allocate_noinit_default_subloc[1411721]))
        val _formal_tmp_out_callPostAlloc[1411745]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
        (1410296 'move' call_tmp[1410294](1410299 call _ddata_allocate_noinit[1411596] size[1409914] _formal_tmp_out_callPostAlloc[1411745] default_arg_subloc[1411738]))
        (1411747 call =[435290] call_tmp[1410286] _formal_tmp_out_callPostAlloc[1411745])
        (1410304 call =[1406365] call_tmp[1410270] call_tmp[1410294])
      }
      {
        ref call_tmp[1410407]:_ref(_ddata(range(int(64),bounded,false)))[1406051] "dead after last mention" "maybe param" "temp"
        (1410409 'move' call_tmp[1410407](1410412 call data[1411200] this[1409323]))
        val call_tmp[1410415]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1411793]:BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1409010] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1411799 'move' coerce_tmp[1411793](1411795 'cast' BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1409010] this[1409323]))
        val coerce_tmp[1412037]:_ddata(range(int(64),bounded,false))[1406042] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1412041 'move' coerce_tmp[1412037](1412039 'deref' call_tmp[1410407]))
        (1410424 call init_elts[1411803] coerce_tmp[1412037] size[1409914] 0)
        (1410434 call dsiElementInitializationComplete[1413826] this[1409323])
      }
    }
    (1410441 call initShiftedData[1414235] this[1409323])
    (1925955 call chpl__autoDestroy[1407763] call_tmp[1409955])
    (1410442 return _void[55])
  }
  function [domain(1,int(64),false)] range(int(64),bounded,false)[1409224].setupFieldsAndAllocate[1419851](const in arg this[1419855]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    {
      const-val dim[1419866]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1419868 'move' dim[1419866] 0)
      {
        {
          ref call_tmp[1420999]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          ref _this_tmp_[1421086]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
          (1421088 'move' _this_tmp_[1421086](1421004 call off[1410553] this[1419855]))
          (1421001 'move' call_tmp[1420999](1421093 '.' _this_tmp_[1421086] x0[1256712]))
          ref call_tmp[1421009]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
          (1421011 'move' call_tmp[1421009](1421014 call dom[1410591] this[1419855]))
          const-val call_tmp[1421017]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val coerce_tmp[1421097]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1421101 'move' coerce_tmp[1421097](1421099 'deref' call_tmp[1421009]))
          val coerce_tmp[1421103]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1421108 'move' coerce_tmp[1421103] coerce_tmp[1421097])
          const-val ret_tmp[1912268]:range(int(64),bounded,false)[1027003] "temp"
          (1421025 call dsiDim[1258249] coerce_tmp[1421103] ret_tmp[1912268])
          (1912271 'move' call_tmp[1421017] ret_tmp[1912268])
          const-val call_tmp[1421027]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (1421029 'move' call_tmp[1421027](1421032 call alignedLow[1105050] call_tmp[1421017]))
          (1421036 call =[435443] call_tmp[1420999] call_tmp[1421027])
          (1925991 call chpl__autoDestroy[1407763] call_tmp[1421017])
          ref call_tmp[1421042]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          ref _this_tmp_[1421114]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
          (1421116 'move' _this_tmp_[1421114](1421047 call str[1410635] this[1419855]))
          (1421044 'move' call_tmp[1421042](1421121 '.' _this_tmp_[1421114] x0[1256712]))
          ref call_tmp[1421052]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
          (1421054 'move' call_tmp[1421052](1421057 call dom[1410591] this[1419855]))
          const-val call_tmp[1421060]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val coerce_tmp[1421125]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1421129 'move' coerce_tmp[1421125](1421127 'deref' call_tmp[1421052]))
          val coerce_tmp[1421131]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1421136 'move' coerce_tmp[1421131] coerce_tmp[1421125])
          const-val ret_tmp[1912274]:range(int(64),bounded,false)[1027003] "temp"
          (1421068 call dsiDim[1258249] coerce_tmp[1421131] ret_tmp[1912274])
          (1912277 'move' call_tmp[1421060] ret_tmp[1912274])
          (1421079 call =[435443] call_tmp[1421042] 1)
          (1925995 call chpl__autoDestroy[1407763] call_tmp[1421060])
        }
      }
      label _continueLabel0[1420995]
      label _unused_continueLabel[1420018]
      label _breakLabel[1420020]
    }
    {
      ref call_tmp[1420055]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
      ref _this_tmp_[1421151]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
      (1421153 'move' _this_tmp_[1421151](1420060 call blk[1410699] this[1419855]))
      (1420057 'move' call_tmp[1420055](1421158 '.' _this_tmp_[1421151] x0[1256712]))
      val call_tmp[1420065]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1420082 call =[435443] call_tmp[1420055] 1)
      {
        const-val dim[1420087]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1420089 'move' dim[1420087] 0)
        label _unused_continueLabel[1420232]
        label _breakLabel[1420234]
      }
    }
    (1420444 call computeFactoredOffs[1410816] this[1419855])
    const-val size[1420446]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val tmp[1420448]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1420467]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
    ref call_tmp[1420469]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
    ref _this_tmp_[1421198]:_ref(1*int(64))[1256784] "dead at end of block" "temp"
    (1421200 'move' _this_tmp_[1421198](1420474 call blk[1410699] this[1419855]))
    (1420471 'move' call_tmp[1420469](1421205 '.' _this_tmp_[1421198] x0[1256712]))
    ref call_tmp[1420479]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
    (1420481 'move' call_tmp[1420479](1420484 call dom[1410591] this[1419855]))
    const-val call_tmp[1420487]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    val coerce_tmp[1421209]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1421213 'move' coerce_tmp[1421209](1421211 'deref' call_tmp[1420479]))
    val coerce_tmp[1421215]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1421220 'move' coerce_tmp[1421215] coerce_tmp[1421209])
    const-val ret_tmp[1912262]:range(int(64),bounded,false)[1027003] "temp"
    (1420495 call dsiDim[1258249] coerce_tmp[1421215] ret_tmp[1912262])
    (1912265 'move' call_tmp[1420487] ret_tmp[1912262])
    const-val call_tmp[1420497]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1420499 'move' call_tmp[1420497](1420502 call size[1035978] call_tmp[1420487]))
    const-val coerce_tmp[1421224]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1421228 'move' coerce_tmp[1421224](1421226 'deref' call_tmp[1420469]))
    (1420505 'move' tmp[1420467](1420508 call *[441944] coerce_tmp[1421224] call_tmp[1420497]))
    (1420511 'move' tmp[1420448] tmp[1420467])
    (1420599 'move' size[1420446] tmp[1420448])
    ref call_tmp[1420727]:_ref(_ddata(range(int(64),bounded,false)))[1406051] "dead after last mention" "maybe param" "temp"
    (1420729 'move' call_tmp[1420727](1420732 call data[1411200] this[1419855]))
    const-val call_tmp[1420735]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1421234]:_ddata(range(int(64),bounded,false))[1406042] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1421238 'move' coerce_tmp[1421234](1421236 'deref' call_tmp[1420727]))
    (1420737 'move' call_tmp[1420735](1420740 call ==[1411228] coerce_tmp[1421234] nil[44]))
    const-val call_tmp[1420743]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1420745 'move' call_tmp[1420743] call_tmp[1420735])
    if call_tmp[1420743]
    {
      {
        ref call_tmp[1420802]:_ref(_ddata(range(int(64),bounded,false)))[1406051] "dead after last mention" "maybe param" "temp"
        (1420804 'move' call_tmp[1420802](1420807 call data[1411200] this[1419855]))
        val call_tmp[1420810]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1421254]:BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1409010] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1421260 'move' coerce_tmp[1421254](1421256 'cast' BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1409010] this[1419855]))
        ref call_tmp[1420818]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
        (1420820 'move' call_tmp[1420818](1420823 call callPostAlloc[1411568] this[1419855]))
        val call_tmp[1420826]:_ddata(range(int(64),bounded,false))[1406042] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val default_arg_subloc[1421270]:int(32)[95] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1421274 'move' default_arg_subloc[1421270](1421272 call _ddata_allocate_noinit_default_subloc[1411721]))
        val _formal_tmp_out_callPostAlloc[1421277]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
        (1420828 'move' call_tmp[1420826](1420831 call _ddata_allocate_noinit[1411596] size[1420446] _formal_tmp_out_callPostAlloc[1421277] default_arg_subloc[1421270]))
        (1421279 call =[435290] call_tmp[1420818] _formal_tmp_out_callPostAlloc[1421277])
        (1420836 call =[1406365] call_tmp[1420802] call_tmp[1420826])
      }
    }
    (1420973 call initShiftedData[1414235] this[1419855])
    (1925998 call chpl__autoDestroy[1407763] call_tmp[1420487])
    (1420974 return _void[55])
  }
  function [domain(1,int(64),false)] uint(64)[1450261].setupFieldsAndAllocate[1450374](const in arg this[1450378]:[domain(1,int(64),false)] uint(64)[1450261]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    {
      const-val dim[1450389]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1450391 'move' dim[1450389] 0)
      {
        {
          ref call_tmp[1451522]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          ref _this_tmp_[1451636]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
          (1451638 'move' _this_tmp_[1451636](1451527 call off[1451608] this[1450378]))
          (1451524 'move' call_tmp[1451522](1451643 '.' _this_tmp_[1451636] x0[1256712]))
          ref call_tmp[1451532]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
          (1451534 'move' call_tmp[1451532](1451537 call dom[1451646] this[1450378]))
          const-val call_tmp[1451540]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val coerce_tmp[1451674]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1451678 'move' coerce_tmp[1451674](1451676 'deref' call_tmp[1451532]))
          val coerce_tmp[1451680]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1451685 'move' coerce_tmp[1451680] coerce_tmp[1451674])
          const-val ret_tmp[1912286]:range(int(64),bounded,false)[1027003] "temp"
          (1451548 call dsiDim[1258249] coerce_tmp[1451680] ret_tmp[1912286])
          (1912289 'move' call_tmp[1451540] ret_tmp[1912286])
          const-val call_tmp[1451550]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (1451552 'move' call_tmp[1451550](1451555 call alignedLow[1105050] call_tmp[1451540]))
          (1451559 call =[435443] call_tmp[1451522] call_tmp[1451550])
          (1926304 call chpl__autoDestroy[1407763] call_tmp[1451540])
          ref call_tmp[1451565]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          ref _this_tmp_[1451718]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
          (1451720 'move' _this_tmp_[1451718](1451570 call str[1451690] this[1450378]))
          (1451567 'move' call_tmp[1451565](1451725 '.' _this_tmp_[1451718] x0[1256712]))
          ref call_tmp[1451575]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
          (1451577 'move' call_tmp[1451575](1451580 call dom[1451646] this[1450378]))
          const-val call_tmp[1451583]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val coerce_tmp[1451729]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1451733 'move' coerce_tmp[1451729](1451731 'deref' call_tmp[1451575]))
          val coerce_tmp[1451735]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1451740 'move' coerce_tmp[1451735] coerce_tmp[1451729])
          const-val ret_tmp[1912292]:range(int(64),bounded,false)[1027003] "temp"
          (1451591 call dsiDim[1258249] coerce_tmp[1451735] ret_tmp[1912292])
          (1912295 'move' call_tmp[1451583] ret_tmp[1912292])
          (1451602 call =[435443] call_tmp[1451565] 1)
          (1926308 call chpl__autoDestroy[1407763] call_tmp[1451583])
        }
      }
      label _continueLabel0[1451518]
      label _unused_continueLabel[1450541]
      label _breakLabel[1450543]
    }
    {
      ref call_tmp[1450578]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
      ref _this_tmp_[1451782]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
      (1451784 'move' _this_tmp_[1451782](1450583 call blk[1451754] this[1450378]))
      (1450580 'move' call_tmp[1450578](1451789 '.' _this_tmp_[1451782] x0[1256712]))
      val call_tmp[1450588]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1450605 call =[435443] call_tmp[1450578] 1)
      {
        const-val dim[1450610]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1450612 'move' dim[1450610] 0)
        label _unused_continueLabel[1450755]
        label _breakLabel[1450757]
      }
    }
    (1450967 call computeFactoredOffs[1451871] this[1450378])
    const-val size[1450969]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val tmp[1450971]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1450990]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
    ref call_tmp[1450992]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
    ref _this_tmp_[1452220]:_ref(1*int(64))[1256784] "dead at end of block" "temp"
    (1452222 'move' _this_tmp_[1452220](1450997 call blk[1451754] this[1450378]))
    (1450994 'move' call_tmp[1450992](1452227 '.' _this_tmp_[1452220] x0[1256712]))
    ref call_tmp[1451002]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
    (1451004 'move' call_tmp[1451002](1451007 call dom[1451646] this[1450378]))
    const-val call_tmp[1451010]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    val coerce_tmp[1452231]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1452235 'move' coerce_tmp[1452231](1452233 'deref' call_tmp[1451002]))
    val coerce_tmp[1452237]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1452242 'move' coerce_tmp[1452237] coerce_tmp[1452231])
    const-val ret_tmp[1912280]:range(int(64),bounded,false)[1027003] "temp"
    (1451018 call dsiDim[1258249] coerce_tmp[1452237] ret_tmp[1912280])
    (1912283 'move' call_tmp[1451010] ret_tmp[1912280])
    const-val call_tmp[1451020]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1451022 'move' call_tmp[1451020](1451025 call size[1035978] call_tmp[1451010]))
    const-val coerce_tmp[1452246]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1452250 'move' coerce_tmp[1452246](1452248 'deref' call_tmp[1450992]))
    (1451028 'move' tmp[1450990](1451031 call *[441944] coerce_tmp[1452246] call_tmp[1451020]))
    (1451034 'move' tmp[1450971] tmp[1450990])
    (1451122 'move' size[1450969] tmp[1450971])
    ref call_tmp[1451250]:_ref(_ddata(uint(64)))[1449431] "dead after last mention" "maybe param" "temp"
    (1451252 'move' call_tmp[1451250](1451255 call data[1452255] this[1450378]))
    const-val call_tmp[1451258]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1452310]:_ddata(uint(64))[1449422] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1452314 'move' coerce_tmp[1452310](1452312 'deref' call_tmp[1451250]))
    (1451260 'move' call_tmp[1451258](1451263 call ==[1452283] coerce_tmp[1452310] nil[44]))
    const-val call_tmp[1451266]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1451268 'move' call_tmp[1451266] call_tmp[1451258])
    if call_tmp[1451266]
    {
      {
        ref call_tmp[1451325]:_ref(_ddata(uint(64)))[1449431] "dead after last mention" "maybe param" "temp"
        (1451327 'move' call_tmp[1451325](1451330 call data[1452255] this[1450378]))
        val call_tmp[1451333]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1452400]:BaseRectangularArr(1,int(64),false,uint(64))[1450047] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1452406 'move' coerce_tmp[1452400](1452402 'cast' BaseRectangularArr(1,int(64),false,uint(64))[1450047] this[1450378]))
        ref call_tmp[1451341]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
        (1451343 'move' call_tmp[1451341](1451346 call callPostAlloc[1452623] this[1450378]))
        val call_tmp[1451349]:_ddata(uint(64))[1449422] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val default_arg_subloc[1452793]:int(32)[95] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1452797 'move' default_arg_subloc[1452793](1452795 call _ddata_allocate_noinit_default_subloc[1452776]))
        val _formal_tmp_out_callPostAlloc[1452800]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
        (1451351 'move' call_tmp[1451349](1451354 call _ddata_allocate_noinit[1452651] size[1450969] _formal_tmp_out_callPostAlloc[1452800] default_arg_subloc[1452793]))
        (1452802 call =[435290] call_tmp[1451341] _formal_tmp_out_callPostAlloc[1452800])
        (1451359 call =[1452939] call_tmp[1451325] call_tmp[1451349])
      }
      {
        ref call_tmp[1451462]:_ref(_ddata(uint(64)))[1449431] "dead after last mention" "maybe param" "temp"
        (1451464 'move' call_tmp[1451462](1451467 call data[1452255] this[1450378]))
        val call_tmp[1451470]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1453052]:BaseRectangularArr(1,int(64),false,uint(64))[1450047] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1453058 'move' coerce_tmp[1453052](1453054 'cast' BaseRectangularArr(1,int(64),false,uint(64))[1450047] this[1450378]))
        val coerce_tmp[1453296]:_ddata(uint(64))[1449422] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1453300 'move' coerce_tmp[1453296](1453298 'deref' call_tmp[1451462]))
        (1451479 call init_elts[1453062] coerce_tmp[1453296] size[1450969] 0)
        (1451489 call dsiElementInitializationComplete[1453953] this[1450378])
      }
    }
    (1451496 call initShiftedData[1454390] this[1450378])
    (1926311 call chpl__autoDestroy[1407763] call_tmp[1451010])
    (1451497 return _void[55])
  }
  function [domain(1,int(64),false)] real(64)[1358944].setupFieldsAndAllocate[1520247](const in arg this[1520251]:[domain(1,int(64),false)] real(64)[1358944]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    {
      const-val dim[1520262]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1520264 'move' dim[1520262] 0)
      {
        {
          ref call_tmp[1521395]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          ref _this_tmp_[1521482]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
          (1521484 'move' _this_tmp_[1521482](1521400 call off[1360291] this[1520251]))
          (1521397 'move' call_tmp[1521395](1521489 '.' _this_tmp_[1521482] x0[1256712]))
          ref call_tmp[1521405]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
          (1521407 'move' call_tmp[1521405](1521410 call dom[1360329] this[1520251]))
          const-val call_tmp[1521413]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val coerce_tmp[1521493]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1521497 'move' coerce_tmp[1521493](1521495 'deref' call_tmp[1521405]))
          val coerce_tmp[1521499]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1521504 'move' coerce_tmp[1521499] coerce_tmp[1521493])
          const-val ret_tmp[1912328]:range(int(64),bounded,false)[1027003] "temp"
          (1521421 call dsiDim[1258249] coerce_tmp[1521499] ret_tmp[1912328])
          (1912331 'move' call_tmp[1521413] ret_tmp[1912328])
          const-val call_tmp[1521423]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (1521425 'move' call_tmp[1521423](1521428 call alignedLow[1105050] call_tmp[1521413]))
          (1521432 call =[435443] call_tmp[1521395] call_tmp[1521423])
          (1926817 call chpl__autoDestroy[1407763] call_tmp[1521413])
          ref call_tmp[1521438]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          ref _this_tmp_[1521510]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
          (1521512 'move' _this_tmp_[1521510](1521443 call str[1360373] this[1520251]))
          (1521440 'move' call_tmp[1521438](1521517 '.' _this_tmp_[1521510] x0[1256712]))
          ref call_tmp[1521448]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
          (1521450 'move' call_tmp[1521448](1521453 call dom[1360329] this[1520251]))
          const-val call_tmp[1521456]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val coerce_tmp[1521521]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1521525 'move' coerce_tmp[1521521](1521523 'deref' call_tmp[1521448]))
          val coerce_tmp[1521527]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1521532 'move' coerce_tmp[1521527] coerce_tmp[1521521])
          const-val ret_tmp[1912334]:range(int(64),bounded,false)[1027003] "temp"
          (1521464 call dsiDim[1258249] coerce_tmp[1521527] ret_tmp[1912334])
          (1912337 'move' call_tmp[1521456] ret_tmp[1912334])
          (1521475 call =[435443] call_tmp[1521438] 1)
          (1926821 call chpl__autoDestroy[1407763] call_tmp[1521456])
        }
      }
      label _continueLabel0[1521391]
      label _unused_continueLabel[1520414]
      label _breakLabel[1520416]
    }
    {
      ref call_tmp[1520451]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
      ref _this_tmp_[1521547]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
      (1521549 'move' _this_tmp_[1521547](1520456 call blk[1360437] this[1520251]))
      (1520453 'move' call_tmp[1520451](1521554 '.' _this_tmp_[1521547] x0[1256712]))
      val call_tmp[1520461]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1520478 call =[435443] call_tmp[1520451] 1)
      {
        const-val dim[1520483]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1520485 'move' dim[1520483] 0)
        label _unused_continueLabel[1520628]
        label _breakLabel[1520630]
      }
    }
    (1520840 call computeFactoredOffs[1360554] this[1520251])
    const-val size[1520842]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val tmp[1520844]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1520863]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
    ref call_tmp[1520865]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
    ref _this_tmp_[1521594]:_ref(1*int(64))[1256784] "dead at end of block" "temp"
    (1521596 'move' _this_tmp_[1521594](1520870 call blk[1360437] this[1520251]))
    (1520867 'move' call_tmp[1520865](1521601 '.' _this_tmp_[1521594] x0[1256712]))
    ref call_tmp[1520875]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
    (1520877 'move' call_tmp[1520875](1520880 call dom[1360329] this[1520251]))
    const-val call_tmp[1520883]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    val coerce_tmp[1521605]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1521609 'move' coerce_tmp[1521605](1521607 'deref' call_tmp[1520875]))
    val coerce_tmp[1521611]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1521616 'move' coerce_tmp[1521611] coerce_tmp[1521605])
    const-val ret_tmp[1912322]:range(int(64),bounded,false)[1027003] "temp"
    (1520891 call dsiDim[1258249] coerce_tmp[1521611] ret_tmp[1912322])
    (1912325 'move' call_tmp[1520883] ret_tmp[1912322])
    const-val call_tmp[1520893]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1520895 'move' call_tmp[1520893](1520898 call size[1035978] call_tmp[1520883]))
    const-val coerce_tmp[1521620]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1521624 'move' coerce_tmp[1521620](1521622 'deref' call_tmp[1520865]))
    (1520901 'move' tmp[1520863](1520904 call *[441944] coerce_tmp[1521620] call_tmp[1520893]))
    (1520907 'move' tmp[1520844] tmp[1520863])
    (1520995 'move' size[1520842] tmp[1520844])
    ref call_tmp[1521123]:_ref(_ddata(real(64)))[1358114] "dead after last mention" "maybe param" "temp"
    (1521125 'move' call_tmp[1521123](1521128 call data[1360938] this[1520251]))
    const-val call_tmp[1521131]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1521630]:_ddata(real(64))[1358105] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1521634 'move' coerce_tmp[1521630](1521632 'deref' call_tmp[1521123]))
    (1521133 'move' call_tmp[1521131](1521136 call ==[1360966] coerce_tmp[1521630] nil[44]))
    const-val call_tmp[1521139]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1521141 'move' call_tmp[1521139] call_tmp[1521131])
    if call_tmp[1521139]
    {
      {
        ref call_tmp[1521198]:_ref(_ddata(real(64)))[1358114] "dead after last mention" "maybe param" "temp"
        (1521200 'move' call_tmp[1521198](1521203 call data[1360938] this[1520251]))
        val call_tmp[1521206]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1521650]:BaseRectangularArr(1,int(64),false,real(64))[1358730] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1521656 'move' coerce_tmp[1521650](1521652 'cast' BaseRectangularArr(1,int(64),false,real(64))[1358730] this[1520251]))
        ref call_tmp[1521214]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
        (1521216 'move' call_tmp[1521214](1521219 call callPostAlloc[1361306] this[1520251]))
        val call_tmp[1521222]:_ddata(real(64))[1358105] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val default_arg_subloc[1521666]:int(32)[95] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1521670 'move' default_arg_subloc[1521666](1521668 call _ddata_allocate_noinit_default_subloc[1361459]))
        val _formal_tmp_out_callPostAlloc[1521673]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
        (1521224 'move' call_tmp[1521222](1521227 call _ddata_allocate_noinit[1361334] size[1520842] _formal_tmp_out_callPostAlloc[1521673] default_arg_subloc[1521666]))
        (1521675 call =[435290] call_tmp[1521214] _formal_tmp_out_callPostAlloc[1521673])
        (1521232 call =[1361622] call_tmp[1521198] call_tmp[1521222])
      }
    }
    (1521369 call initShiftedData[1364272] this[1520251])
    (1926824 call chpl__autoDestroy[1407763] call_tmp[1520883])
    (1521370 return _void[55])
  }
  function [domain(1,int(64),false)] locale[1256675].getDataIndex[1300884](const in arg this[1300888]:[domain(1,int(64),false)] locale[1256675], const in arg _e0_ind[1300895]:int(64)[13]) : int(64)[13] "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    const-val ind[1300990]:1*int(64)[1256714] "insert auto destroy"
    const-val ret_tmp[1911714]:1*int(64)[1256714] "temp"
    (1300995 call chpl__init_tuple[1256732] _e0_ind[1300895] ret_tmp[1911714])
    (1911717 'move' ind[1300990] ret_tmp[1911714])
    val ret[1300916]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1301000]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1301002 'move' call_tmp[1301000](1301008 call getDataIndex[1300935] this[1300888] ind[1300990]))
    (1301012 'move' ret[1300916] call_tmp[1301000])
    (1925034 call chpl__autoDestroy[1697253] ind[1300990])
    (1301016 return ret[1300916])
  }
  function [domain(1,int(64),false)] unmanaged localesSignal?[1318401].getDataIndex[1328752](const in arg this[1328756]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401], const in arg _e0_ind[1328763]:int(64)[13]) : int(64)[13] "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    const-val ind[1328858]:1*int(64)[1256714] "insert auto destroy"
    const-val ret_tmp[1911720]:1*int(64)[1256714] "temp"
    (1328863 call chpl__init_tuple[1256732] _e0_ind[1328763] ret_tmp[1911720])
    (1911723 'move' ind[1328858] ret_tmp[1911720])
    val ret[1328784]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1328868]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1328870 'move' call_tmp[1328868](1328876 call getDataIndex[1328803] this[1328756] ind[1328858]))
    (1328880 'move' ret[1328784] call_tmp[1328868])
    (1925372 call chpl__autoDestroy[1697253] ind[1328858])
    (1328884 return ret[1328784])
  }
  function [domain(1,int(64),false)] real(64)[1358944].getDataIndex[1390253](const in arg this[1390257]:[domain(1,int(64),false)] real(64)[1358944], const in arg _e0_ind[1390264]:int(64)[13]) : int(64)[13] "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    const-val ind[1394590]:1*int(64)[1256714] "insert auto destroy"
    const-val ret_tmp[1911816]:1*int(64)[1256714] "temp"
    (1394595 call chpl__init_tuple[1256732] _e0_ind[1390264] ret_tmp[1911816])
    (1911819 'move' ind[1394590] ret_tmp[1911816])
    val ret[1390285]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1394600]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1394602 'move' call_tmp[1394600](1394608 call getDataIndex[1390300] this[1390257] ind[1394590]))
    (1394612 'move' ret[1390285] call_tmp[1394600])
    (1925734 call chpl__autoDestroy[1697253] ind[1394590])
    (1394616 return ret[1390285])
  }
  function [domain(1,int(64),false)] uint(64)[1450261].getDataIndex[1458731](const in arg this[1458735]:[domain(1,int(64),false)] uint(64)[1450261], const in arg _e0_ind[1458742]:int(64)[13]) : int(64)[13] "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    const-val ind[1458837]:1*int(64)[1256714] "insert auto destroy"
    const-val ret_tmp[1911822]:1*int(64)[1256714] "temp"
    (1458842 call chpl__init_tuple[1256732] _e0_ind[1458742] ret_tmp[1911822])
    (1911825 'move' ind[1458837] ret_tmp[1911822])
    val ret[1458763]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1458847]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1458849 'move' call_tmp[1458847](1458855 call getDataIndex[1458782] this[1458735] ind[1458837]))
    (1458859 'move' ret[1458763] call_tmp[1458847])
    (1926359 call chpl__autoDestroy[1697253] ind[1458837])
    (1458863 return ret[1458763])
  }
  function [domain(1,int(64),false)] locale[1256675].getDataIndex[1300935](const in arg this[1300939]:[domain(1,int(64),false)] locale[1256675], const  ref arg ind[1300962]:1*int(64)[1256714]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[1300970]:int(64)[13] "dead after last mention" "RVV" "temp"
    {
      {
        ref call_tmp[1301424]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        (1301426 'move' call_tmp[1301424](1302034 '.' ind[1300962] x0[1256712]))
        const-val call_tmp[1301431]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1302037]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1302041 'move' coerce_tmp[1302037](1302039 'deref' call_tmp[1301424]))
        (1301433 'move' call_tmp[1301431](1301436 call chpl__idxToInt[1027105] coerce_tmp[1302037]))
        (1301438 'move' ret[1300970] call_tmp[1301431])
        gotoReturn _end_getDataIndex[1302008] _end_getDataIndex[1302008]
      }
    }
    label _end_getDataIndex[1302008]
    (1302010 return ret[1300970])
  }
  function [domain(1,int(64),false)] unmanaged localesSignal?[1318401].getDataIndex[1328803](const in arg this[1328807]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401], const  ref arg ind[1328830]:1*int(64)[1256714]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[1328838]:int(64)[13] "dead after last mention" "RVV" "temp"
    {
      {
        ref call_tmp[1329290]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        (1329292 'move' call_tmp[1329290](1329900 '.' ind[1328830] x0[1256712]))
        const-val call_tmp[1329297]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1329903]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1329907 'move' coerce_tmp[1329903](1329905 'deref' call_tmp[1329290]))
        (1329299 'move' call_tmp[1329297](1329302 call chpl__idxToInt[1027105] coerce_tmp[1329903]))
        (1329304 'move' ret[1328838] call_tmp[1329297])
        gotoReturn _end_getDataIndex[1329874] _end_getDataIndex[1329874]
      }
    }
    label _end_getDataIndex[1329874]
    (1329876 return ret[1328838])
  }
  function [domain(1,int(64),false)] int(64)[1368867].getDataIndex[1378173](const in arg this[1378177]:[domain(1,int(64),false)] int(64)[1368867], const  ref arg ind[1378200]:1*int(64)[1256714]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[1378208]:int(64)[13] "dead after last mention" "RVV" "temp"
    {
      {
        ref call_tmp[1378592]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        (1378594 'move' call_tmp[1378592](1379239 '.' ind[1378200] x0[1256712]))
        const-val call_tmp[1378599]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1379242]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1379246 'move' coerce_tmp[1379242](1379244 'deref' call_tmp[1378592]))
        (1378601 'move' call_tmp[1378599](1378604 call chpl__idxToInt[1027105] coerce_tmp[1379242]))
        (1378606 'move' ret[1378208] call_tmp[1378599])
        gotoReturn _end_getDataIndex[1379176] _end_getDataIndex[1379176]
      }
    }
    label _end_getDataIndex[1379176]
    (1379178 return ret[1378208])
  }
  function [domain(1,int(64),false)] real(64)[1358944].getDataIndex[1390300](const in arg this[1390304]:[domain(1,int(64),false)] real(64)[1358944], const  ref arg ind[1390327]:1*int(64)[1256714]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[1390335]:int(64)[13] "dead after last mention" "RVV" "temp"
    {
      {
        ref call_tmp[1390719]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        (1390721 'move' call_tmp[1390719](1391366 '.' ind[1390327] x0[1256712]))
        const-val call_tmp[1390726]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1391369]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1391373 'move' coerce_tmp[1391369](1391371 'deref' call_tmp[1390719]))
        (1390728 'move' call_tmp[1390726](1390731 call chpl__idxToInt[1027105] coerce_tmp[1391369]))
        (1390733 'move' ret[1390335] call_tmp[1390726])
        gotoReturn _end_getDataIndex[1391303] _end_getDataIndex[1391303]
      }
    }
    label _end_getDataIndex[1391303]
    (1391305 return ret[1390335])
  }
  function [domain(1,int(64),false)] range(int(64),bounded,false)[1409224].getDataIndex[1435727](const in arg this[1435731]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224], const  ref arg ind[1435754]:1*int(64)[1256714]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[1435762]:int(64)[13] "dead after last mention" "RVV" "temp"
    {
      {
        ref call_tmp[1436146]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        (1436148 'move' call_tmp[1436146](1436793 '.' ind[1435754] x0[1256712]))
        const-val call_tmp[1436153]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1436796]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1436800 'move' coerce_tmp[1436796](1436798 'deref' call_tmp[1436146]))
        (1436155 'move' call_tmp[1436153](1436158 call chpl__idxToInt[1027105] coerce_tmp[1436796]))
        (1436160 'move' ret[1435762] call_tmp[1436153])
        gotoReturn _end_getDataIndex[1436730] _end_getDataIndex[1436730]
      }
    }
    label _end_getDataIndex[1436730]
    (1436732 return ret[1435762])
  }
  function [domain(1,int(64),false)] uint(64)[1450261].getDataIndex[1458782](const in arg this[1458786]:[domain(1,int(64),false)] uint(64)[1450261], const  ref arg ind[1458809]:1*int(64)[1256714]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[1458817]:int(64)[13] "dead after last mention" "RVV" "temp"
    {
      {
        ref call_tmp[1459269]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        (1459271 'move' call_tmp[1459269](1459879 '.' ind[1458809] x0[1256712]))
        const-val call_tmp[1459276]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1459882]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1459886 'move' coerce_tmp[1459882](1459884 'deref' call_tmp[1459269]))
        (1459278 'move' call_tmp[1459276](1459281 call chpl__idxToInt[1027105] coerce_tmp[1459882]))
        (1459283 'move' ret[1458817] call_tmp[1459276])
        gotoReturn _end_getDataIndex[1459853] _end_getDataIndex[1459853]
      }
    }
    label _end_getDataIndex[1459853]
    (1459855 return ret[1458817])
  }
  function [domain(1,int(64),false)] range(int(64),bounded,false)[1409224].getDataIndex[1473559](const in arg this[1473563]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224], const  ref arg ind[1473586]:1*int(64)[1256714]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[1473594]:int(64)[13] "dead after last mention" "RVV" "temp"
    {
      {
        val call_tmp[1473999]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val sum[1474015]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1474017 'move' sum[1474015] 0)
        const-val useInd[1474021]:1*int(64)[1256714] "dead at end of block" "insert auto destroy"
        (1474023 'move' useInd[1474021](1474589 call chpl__initCopy[1441632] ind[1473586]))
        const-val useOffset[1474027]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1474029 'move' useOffset[1474027] 0)
        ref call_tmp[1474034]:_ref(1*int(64))[1256784] "dead at end of block" "maybe param" "temp"
        (1474036 'move' call_tmp[1474034](1474039 call sizesPerDim[1474592] this[1473563]))
        const-val useSizesPerDim[1474042]:1*int(64)[1256714] "dead at end of block" "insert auto destroy"
        (1474044 'move' useSizesPerDim[1474042](1474620 call chpl__initCopy[1441632] call_tmp[1474034]))
        {
          {
            {
              const-val i[1474241]:int(64)[13] "dead at end of block" "insert auto destroy"
              (1474243 'move' i[1474241] 0)
              label _unused_continueLabel[1474347]
              label _breakLabel[1474349]
            }
            ref call_tmp[1474367]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
            (1474369 'move' call_tmp[1474367](1474691 '.' ind[1473586] x0[1256712]))
            const-val call_tmp[1474374]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[1474694]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1474698 'move' coerce_tmp[1474694](1474696 'deref' call_tmp[1474367]))
            (1474376 'move' call_tmp[1474374](1474379 call chpl__idxToInt[1027105] coerce_tmp[1474694]))
            (1474382 call +=[451431] sum[1474015] call_tmp[1474374])
          }
          {
            ref call_tmp[1474536]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
            (1474538 'move' call_tmp[1474536](1474541 call factoredOffs[1410995] this[1473563]))
            const-val coerce_tmp[1474709]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1474713 'move' coerce_tmp[1474709](1474711 'deref' call_tmp[1474536]))
            (1474545 call -=[451683] sum[1474015] coerce_tmp[1474709])
          }
          (1474551 'move' ret[1473594] sum[1474015])
          (1926451 call chpl__autoDestroy[1697253] useSizesPerDim[1474042])
          (1926454 call chpl__autoDestroy[1697253] useInd[1474021])
          gotoReturn _end_getDataIndex[1474562] _end_getDataIndex[1474562]
        }
        (1926458 call chpl__autoDestroy[1697253] useSizesPerDim[1474042])
        (1926461 call chpl__autoDestroy[1697253] useInd[1474021])
      }
    }
    label _end_getDataIndex[1474562]
    (1474564 return ret[1473594])
  }
  function [domain(1,int(64),false)] real(64)[1358944].getDataIndex[1531439](const in arg this[1531443]:[domain(1,int(64),false)] real(64)[1358944], const  ref arg ind[1531466]:1*int(64)[1256714]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[1531474]:int(64)[13] "dead after last mention" "RVV" "temp"
    {
      {
        val call_tmp[1531879]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val sum[1531895]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1531897 'move' sum[1531895] 0)
        const-val useInd[1531901]:1*int(64)[1256714] "dead at end of block" "insert auto destroy"
        (1531903 'move' useInd[1531901](1532469 call chpl__initCopy[1441632] ind[1531466]))
        const-val useOffset[1531907]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1531909 'move' useOffset[1531907] 0)
        ref call_tmp[1531914]:_ref(1*int(64))[1256784] "dead at end of block" "maybe param" "temp"
        (1531916 'move' call_tmp[1531914](1531919 call sizesPerDim[1532472] this[1531443]))
        const-val useSizesPerDim[1531922]:1*int(64)[1256714] "dead at end of block" "insert auto destroy"
        (1531924 'move' useSizesPerDim[1531922](1532500 call chpl__initCopy[1441632] call_tmp[1531914]))
        {
          {
            {
              const-val i[1532121]:int(64)[13] "dead at end of block" "insert auto destroy"
              (1532123 'move' i[1532121] 0)
              label _unused_continueLabel[1532227]
              label _breakLabel[1532229]
            }
            ref call_tmp[1532247]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
            (1532249 'move' call_tmp[1532247](1532571 '.' ind[1531466] x0[1256712]))
            const-val call_tmp[1532254]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[1532574]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1532578 'move' coerce_tmp[1532574](1532576 'deref' call_tmp[1532247]))
            (1532256 'move' call_tmp[1532254](1532259 call chpl__idxToInt[1027105] coerce_tmp[1532574]))
            (1532262 call +=[451431] sum[1531895] call_tmp[1532254])
          }
          {
            ref call_tmp[1532416]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
            (1532418 'move' call_tmp[1532416](1532421 call factoredOffs[1360733] this[1531443]))
            const-val coerce_tmp[1532589]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1532593 'move' coerce_tmp[1532589](1532591 'deref' call_tmp[1532416]))
            (1532425 call -=[451683] sum[1531895] coerce_tmp[1532589])
          }
          (1532431 'move' ret[1531474] sum[1531895])
          (1927041 call chpl__autoDestroy[1697253] useSizesPerDim[1531922])
          (1927044 call chpl__autoDestroy[1697253] useInd[1531901])
          gotoReturn _end_getDataIndex[1532442] _end_getDataIndex[1532442]
        }
        (1927048 call chpl__autoDestroy[1697253] useSizesPerDim[1531922])
        (1927051 call chpl__autoDestroy[1697253] useInd[1531901])
      }
    }
    label _end_getDataIndex[1532442]
    (1532444 return ret[1531474])
  }
  function [domain(1,int(64),false)] unmanaged localesSignal?[1318401].dsiAccess[1343972](const in arg this[1343976]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401], const in arg _e0_ind[1343983]:int(64)[13]) ref : _ref(localesSignal)[1316692] "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    const-val ind[1747832]:1*int(64)[1256714] "insert auto destroy"
    const-val ret_tmp[1911918]:1*int(64)[1256714] "temp"
    (1747837 call chpl__init_tuple[1256732] _e0_ind[1343983] ret_tmp[1911918])
    (1911921 'move' ind[1747832] ret_tmp[1911918])
    ref ret[1343998]:_ref(localesSignal)[1316692] "dead after last mention" "RVV" "temp"
    ref call_tmp[1747842]:_ref(localesSignal)[1316692] "dead after last mention" "maybe param" "temp"
    (1747844 'move' call_tmp[1747842](1747850 call dsiAccess[1344273] this[1343976] ind[1747832]))
    (1747852 'move' ret[1343998] call_tmp[1747842])
    (1925433 call chpl__autoDestroy[1697253] ind[1747832])
    (1747856 return ret[1343998])
  }
  function [domain(1,int(64),false)] locale[1256675].dsiAccess[1349194](const in arg this[1349198]:[domain(1,int(64),false)] locale[1256675], const in arg _e0_ind[1349205]:int(64)[13]) ref : _ref(locale)[949033] "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    const-val ind[1718905]:1*int(64)[1256714] "insert auto destroy"
    const-val ret_tmp[1911906]:1*int(64)[1256714] "temp"
    (1718910 call chpl__init_tuple[1256732] _e0_ind[1349205] ret_tmp[1911906])
    (1911909 'move' ind[1718905] ret_tmp[1911906])
    ref ret[1349220]:_ref(locale)[949033] "dead after last mention" "RVV" "temp"
    ref call_tmp[1718915]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1718917 'move' call_tmp[1718915](1718923 call dsiAccess[1349461] this[1349198] ind[1718905]))
    (1718925 'move' ret[1349220] call_tmp[1718915])
    (1925452 call chpl__autoDestroy[1697253] ind[1718905])
    (1718929 return ret[1349220])
  }
  function [domain(1,int(64),false)] int(64)[1368867].dsiAccess[1377509](const in arg this[1377513]:[domain(1,int(64),false)] int(64)[1368867], const in arg _e0_ind[1377520]:int(64)[13]) ref : _ref(int(64))[936761] "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    const-val ind[1384964]:1*int(64)[1256714] "insert auto destroy"
    const-val ret_tmp[1911780]:1*int(64)[1256714] "temp"
    (1384969 call chpl__init_tuple[1256732] _e0_ind[1377520] ret_tmp[1911780])
    (1911783 'move' ind[1384964] ret_tmp[1911780])
    ref ret[1377535]:_ref(int(64))[936761] "dead after last mention" "RVV" "temp"
    ref call_tmp[1384974]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (1384976 'move' call_tmp[1384974](1384982 call dsiAccess[1377776] this[1377513] ind[1384964]))
    (1384984 'move' ret[1377535] call_tmp[1384974])
    (1925661 call chpl__autoDestroy[1697253] ind[1384964])
    (1384988 return ret[1377535])
  }
  function [domain(1,int(64),false)] real(64)[1358944].dsiAccess[1389399](const in arg this[1389403]:[domain(1,int(64),false)] real(64)[1358944], const in arg _e0_ind[1389410]:int(64)[13]) ref : _ref(real(64))[936906] "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    const-val ind[1389997]:1*int(64)[1256714] "insert auto destroy"
    const-val ret_tmp[1911798]:1*int(64)[1256714] "temp"
    (1390002 call chpl__init_tuple[1256732] _e0_ind[1389410] ret_tmp[1911798])
    (1911801 'move' ind[1389997] ret_tmp[1911798])
    ref ret[1389425]:_ref(real(64))[936906] "dead after last mention" "RVV" "temp"
    ref call_tmp[1390007]:_ref(real(64))[936906] "dead after last mention" "maybe param" "temp"
    (1390009 'move' call_tmp[1390007](1390015 call dsiAccess[1389828] this[1389403] ind[1389997]))
    (1390017 'move' ret[1389425] call_tmp[1390007])
    (1925725 call chpl__autoDestroy[1697253] ind[1389997])
    (1390021 return ret[1389425])
  }
  function [domain(1,int(64),false)] uint(64)[1450261].dsiAccess[1464422](const in arg this[1464426]:[domain(1,int(64),false)] uint(64)[1450261], const in arg _e0_ind[1464433]:int(64)[13]) ref : _ref(uint(64))[936790] "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    const-val ind[1812370]:1*int(64)[1256714] "insert auto destroy"
    const-val ret_tmp[1911942]:1*int(64)[1256714] "temp"
    (1812375 call chpl__init_tuple[1256732] _e0_ind[1464433] ret_tmp[1911942])
    (1911945 'move' ind[1812370] ret_tmp[1911942])
    ref ret[1464448]:_ref(uint(64))[936790] "dead after last mention" "RVV" "temp"
    ref call_tmp[1812380]:_ref(uint(64))[936790] "dead after last mention" "maybe param" "temp"
    (1812382 'move' call_tmp[1812380](1812388 call dsiAccess[1464689] this[1464426] ind[1812370]))
    (1812390 'move' ret[1464448] call_tmp[1812380])
    (1926393 call chpl__autoDestroy[1697253] ind[1812370])
    (1812394 return ret[1464448])
  }
  function [domain(1,int(64),false)] range(int(64),bounded,false)[1409224].dsiAccess[1488672](const in arg this[1488676]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224], const in arg _e0_ind[1488683]:int(64)[13]) ref : _ref(range(int(64),bounded,false))[1027047] "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    const-val ind[1489270]:1*int(64)[1256714] "insert auto destroy"
    const-val ret_tmp[1911852]:1*int(64)[1256714] "temp"
    (1489275 call chpl__init_tuple[1256732] _e0_ind[1488683] ret_tmp[1911852])
    (1911855 'move' ind[1489270] ret_tmp[1911852])
    ref ret[1488698]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "RVV" "temp"
    ref call_tmp[1489280]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    (1489282 'move' call_tmp[1489280](1489288 call dsiAccess[1489101] this[1488676] ind[1489270]))
    (1489290 'move' ret[1488698] call_tmp[1489280])
    (1926580 call chpl__autoDestroy[1697253] ind[1489270])
    (1489294 return ret[1488698])
  }
  function [domain(1,int(64),false)] unmanaged localesSignal?[1318401].dsiAccess[1344160](const in arg this[1344164]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401], const in arg _e0_ind[1344171]:int(64)[13]) const ref : _ref(localesSignal)[1316692] "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    const-val ind[1747896]:1*int(64)[1256714] "insert auto destroy"
    const-val ret_tmp[1911930]:1*int(64)[1256714] "temp"
    (1747901 call chpl__init_tuple[1256732] _e0_ind[1344171] ret_tmp[1911930])
    (1911933 'move' ind[1747896] ret_tmp[1911930])
    ref ret[1344258]:_ref(localesSignal)[1316692] "dead after last mention" "RVV" "temp"
    ref call_tmp[1747906]:_ref(localesSignal)[1316692] "dead after last mention" "maybe param" "temp"
    (1747908 'move' call_tmp[1747906](1747948 call dsiAccess[1344393] this[1344164] ind[1747896]))
    (1747916 'move' ret[1344258] call_tmp[1747906])
    (1925439 call chpl__autoDestroy[1697253] ind[1747896])
    (1747920 return ret[1344258])
  }
  function [domain(1,int(64),false)] locale[1256675].dsiAccess[1349348](const in arg this[1349352]:[domain(1,int(64),false)] locale[1256675], const in arg _e0_ind[1349359]:int(64)[13]) const ref : _ref(locale)[949033] "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    const-val ind[1718937]:1*int(64)[1256714] "insert auto destroy"
    const-val ret_tmp[1911912]:1*int(64)[1256714] "temp"
    (1718942 call chpl__init_tuple[1256732] _e0_ind[1349359] ret_tmp[1911912])
    (1911915 'move' ind[1718937] ret_tmp[1911912])
    ref ret[1349446]:_ref(locale)[949033] "dead after last mention" "RVV" "temp"
    ref call_tmp[1718947]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1718949 'move' call_tmp[1718947](1718968 call dsiAccess[1349581] this[1349352] ind[1718937]))
    (1718957 'move' ret[1349446] call_tmp[1718947])
    (1925455 call chpl__autoDestroy[1697253] ind[1718937])
    (1718961 return ret[1349446])
  }
  function [domain(1,int(64),false)] int(64)[1368867].dsiAccess[1377663](const in arg this[1377667]:[domain(1,int(64),false)] int(64)[1368867], const in arg _e0_ind[1377674]:int(64)[13]) const ref : _ref(int(64))[936761] "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    const-val ind[1385028]:1*int(64)[1256714] "insert auto destroy"
    const-val ret_tmp[1911792]:1*int(64)[1256714] "temp"
    (1385033 call chpl__init_tuple[1256732] _e0_ind[1377674] ret_tmp[1911792])
    (1911795 'move' ind[1385028] ret_tmp[1911792])
    ref ret[1377761]:_ref(int(64))[936761] "dead after last mention" "RVV" "temp"
    ref call_tmp[1385038]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (1385040 'move' call_tmp[1385038](1385080 call dsiAccess[1377896] this[1377667] ind[1385028]))
    (1385048 'move' ret[1377761] call_tmp[1385038])
    (1925667 call chpl__autoDestroy[1697253] ind[1385028])
    (1385052 return ret[1377761])
  }
  function [domain(1,int(64),false)] real(64)[1358944].dsiAccess[1389677](const in arg this[1389681]:[domain(1,int(64),false)] real(64)[1358944], const in arg _e0_ind[1389688]:int(64)[13]) const ref : _ref(real(64))[936906] "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    const-val ind[1390061]:1*int(64)[1256714] "insert auto destroy"
    const-val ret_tmp[1911810]:1*int(64)[1256714] "temp"
    (1390066 call chpl__init_tuple[1256732] _e0_ind[1389688] ret_tmp[1911810])
    (1911813 'move' ind[1390061] ret_tmp[1911810])
    ref ret[1389775]:_ref(real(64))[936906] "dead after last mention" "RVV" "temp"
    ref call_tmp[1390071]:_ref(real(64))[936906] "dead after last mention" "maybe param" "temp"
    (1390073 'move' call_tmp[1390071](1391630 call dsiAccess[1389936] this[1389681] ind[1390061]))
    (1390081 'move' ret[1389775] call_tmp[1390071])
    (1925731 call chpl__autoDestroy[1697253] ind[1390061])
    (1390085 return ret[1389775])
  }
  function [domain(1,int(64),false)] uint(64)[1450261].dsiAccess[1464576](const in arg this[1464580]:[domain(1,int(64),false)] uint(64)[1450261], const in arg _e0_ind[1464587]:int(64)[13]) const ref : _ref(uint(64))[936790] "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    const-val ind[1812434]:1*int(64)[1256714] "insert auto destroy"
    const-val ret_tmp[1911954]:1*int(64)[1256714] "temp"
    (1812439 call chpl__init_tuple[1256732] _e0_ind[1464587] ret_tmp[1911954])
    (1911957 'move' ind[1812434] ret_tmp[1911954])
    ref ret[1464674]:_ref(uint(64))[936790] "dead after last mention" "RVV" "temp"
    ref call_tmp[1812444]:_ref(uint(64))[936790] "dead after last mention" "maybe param" "temp"
    (1812446 'move' call_tmp[1812444](1812486 call dsiAccess[1464809] this[1464580] ind[1812434]))
    (1812454 'move' ret[1464674] call_tmp[1812444])
    (1926399 call chpl__autoDestroy[1697253] ind[1812434])
    (1812458 return ret[1464674])
  }
  function [domain(1,int(64),false)] range(int(64),bounded,false)[1409224].dsiAccess[1488950](const in arg this[1488954]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224], const in arg _e0_ind[1488961]:int(64)[13]) const ref : _ref(range(int(64),bounded,false))[1027047] "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    const-val ind[1489334]:1*int(64)[1256714] "insert auto destroy"
    const-val ret_tmp[1911864]:1*int(64)[1256714] "temp"
    (1489339 call chpl__init_tuple[1256732] _e0_ind[1488961] ret_tmp[1911864])
    (1911867 'move' ind[1489334] ret_tmp[1911864])
    ref ret[1489048]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "RVV" "temp"
    ref call_tmp[1489344]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    (1489346 'move' call_tmp[1489344](1489626 call dsiAccess[1489209] this[1488954] ind[1489334]))
    (1489354 'move' ret[1489048] call_tmp[1489344])
    (1926589 call chpl__autoDestroy[1697253] ind[1489334])
    (1489358 return ret[1489048])
  }
  function [domain(1,int(64),false)] unmanaged localesSignal?[1318401].dsiAccess[1344273](const in arg this[1344277]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401], const  ref arg ind[1344300]:1*int(64)[1256714]) ref : _ref(localesSignal)[1316692] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    ref ret[1344302]:_ref(localesSignal)[1316692] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1344468]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1344470 'move' call_tmp[1344468](1344476 call getDataIndex[1328803] this[1344277] ind[1344300]))
    const-val dataInd[1344478]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1344480 'move' dataInd[1344478] call_tmp[1344468])
    ref call_tmp[1344484]:_ref(localesSignal)[1316692] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1344724]:_ref(_ddata(unmanaged localesSignal?))[1317571] "dead after last mention" "temp"
    (1344726 'move' _this_tmp_[1344724](1344489 call theData[1329960] this[1344277]))
    val coerce_tmp[1344731]:_ddata(unmanaged localesSignal?)[1317562] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1344735 'move' coerce_tmp[1344731](1344733 'deref' _this_tmp_[1344724]))
    (1344486 'move' call_tmp[1344484](1344492 call this[1330107] coerce_tmp[1344731] dataInd[1344478]))
    (1344494 'move' ret[1344302] call_tmp[1344484])
    gotoReturn _end_dsiAccess[1344502] _end_dsiAccess[1344502]
    label _end_dsiAccess[1344502]
    (1344504 return ret[1344302])
  }
  function [domain(1,int(64),false)] locale[1256675].dsiAccess[1349461](const in arg this[1349465]:[domain(1,int(64),false)] locale[1256675], const  ref arg ind[1349488]:1*int(64)[1256714]) ref : _ref(locale)[949033] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    ref ret[1349490]:_ref(locale)[949033] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1349656]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1349658 'move' call_tmp[1349656](1349664 call getDataIndex[1300935] this[1349465] ind[1349488]))
    const-val dataInd[1349666]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1349668 'move' dataInd[1349666] call_tmp[1349656])
    ref call_tmp[1349672]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1349827]:_ref(_ddata(locale))[1255592] "dead after last mention" "temp"
    (1349829 'move' _this_tmp_[1349827](1349677 call theData[1303439] this[1349465]))
    val coerce_tmp[1349834]:_ddata(locale)[1255583] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1349838 'move' coerce_tmp[1349834](1349836 'deref' _this_tmp_[1349827]))
    (1349674 'move' call_tmp[1349672](1349680 call this[1303586] coerce_tmp[1349834] dataInd[1349666]))
    (1349682 'move' ret[1349490] call_tmp[1349672])
    gotoReturn _end_dsiAccess[1349690] _end_dsiAccess[1349690]
    label _end_dsiAccess[1349690]
    (1349692 return ret[1349490])
  }
  function [domain(1,int(64),false)] int(64)[1368867].dsiAccess[1377776](const in arg this[1377780]:[domain(1,int(64),false)] int(64)[1368867], const  ref arg ind[1377803]:1*int(64)[1256714]) ref : _ref(int(64))[936761] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    ref ret[1377805]:_ref(int(64))[936761] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1377971]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1377973 'move' call_tmp[1377971](1377979 call getDataIndex[1378173] this[1377780] ind[1377803]))
    const-val dataInd[1377981]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1377983 'move' dataInd[1377981] call_tmp[1377971])
    ref call_tmp[1377987]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1379482]:_ref(_ddata(int(64)))[1368037] "dead after last mention" "temp"
    (1379484 'move' _this_tmp_[1379482](1377992 call theData[1379249] this[1377780]))
    val coerce_tmp[1379489]:_ddata(int(64))[1368028] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1379493 'move' coerce_tmp[1379489](1379491 'deref' _this_tmp_[1379482]))
    (1377989 'move' call_tmp[1377987](1377995 call this[1379396] coerce_tmp[1379489] dataInd[1377981]))
    (1377997 'move' ret[1377805] call_tmp[1377987])
    gotoReturn _end_dsiAccess[1378005] _end_dsiAccess[1378005]
    label _end_dsiAccess[1378005]
    (1378007 return ret[1377805])
  }
  function [domain(1,int(64),false)] real(64)[1358944].dsiAccess[1389828](const in arg this[1389832]:[domain(1,int(64),false)] real(64)[1358944], const  ref arg ind[1389855]:1*int(64)[1256714]) ref : _ref(real(64))[936906] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    ref ret[1389857]:_ref(real(64))[936906] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1390119]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1390121 'move' call_tmp[1390119](1390127 call getDataIndex[1390300] this[1389832] ind[1389855]))
    const-val dataInd[1390129]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1390131 'move' dataInd[1390129] call_tmp[1390119])
    ref call_tmp[1390135]:_ref(real(64))[936906] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1391609]:_ref(_ddata(real(64)))[1358114] "dead after last mention" "temp"
    (1391611 'move' _this_tmp_[1391609](1390140 call theData[1391376] this[1389832]))
    val coerce_tmp[1391616]:_ddata(real(64))[1358105] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1391620 'move' coerce_tmp[1391616](1391618 'deref' _this_tmp_[1391609]))
    (1390137 'move' call_tmp[1390135](1390143 call this[1391523] coerce_tmp[1391616] dataInd[1390129]))
    (1390145 'move' ret[1389857] call_tmp[1390135])
    gotoReturn _end_dsiAccess[1390153] _end_dsiAccess[1390153]
    label _end_dsiAccess[1390153]
    (1390155 return ret[1389857])
  }
  function [domain(1,int(64),false)] uint(64)[1450261].dsiAccess[1464689](const in arg this[1464693]:[domain(1,int(64),false)] uint(64)[1450261], const  ref arg ind[1464716]:1*int(64)[1256714]) ref : _ref(uint(64))[936790] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    ref ret[1464718]:_ref(uint(64))[936790] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1464884]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1464886 'move' call_tmp[1464884](1464892 call getDataIndex[1458782] this[1464693] ind[1464716]))
    const-val dataInd[1464894]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1464896 'move' dataInd[1464894] call_tmp[1464884])
    ref call_tmp[1464900]:_ref(uint(64))[936790] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1465140]:_ref(_ddata(uint(64)))[1449431] "dead after last mention" "temp"
    (1465142 'move' _this_tmp_[1465140](1464905 call theData[1459939] this[1464693]))
    val coerce_tmp[1465147]:_ddata(uint(64))[1449422] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1465151 'move' coerce_tmp[1465147](1465149 'deref' _this_tmp_[1465140]))
    (1464902 'move' call_tmp[1464900](1464908 call this[1460086] coerce_tmp[1465147] dataInd[1464894]))
    (1464910 'move' ret[1464718] call_tmp[1464900])
    gotoReturn _end_dsiAccess[1464918] _end_dsiAccess[1464918]
    label _end_dsiAccess[1464918]
    (1464920 return ret[1464718])
  }
  function [domain(1,int(64),false)] range(int(64),bounded,false)[1409224].dsiAccess[1489101](const in arg this[1489105]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224], const  ref arg ind[1489128]:1*int(64)[1256714]) ref : _ref(range(int(64),bounded,false))[1027047] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    ref ret[1489130]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1489392]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1489394 'move' call_tmp[1489392](1489400 call getDataIndex[1435727] this[1489105] ind[1489128]))
    const-val dataInd[1489402]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1489404 'move' dataInd[1489402] call_tmp[1489392])
    ref call_tmp[1489408]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1489605]:_ref(_ddata(range(int(64),bounded,false)))[1406051] "dead after last mention" "temp"
    (1489607 'move' _this_tmp_[1489605](1489413 call theData[1436813] this[1489105]))
    val coerce_tmp[1489612]:_ddata(range(int(64),bounded,false))[1406042] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1489616 'move' coerce_tmp[1489612](1489614 'deref' _this_tmp_[1489605]))
    (1489410 'move' call_tmp[1489408](1489416 call this[1407601] coerce_tmp[1489612] dataInd[1489402]))
    (1489418 'move' ret[1489130] call_tmp[1489408])
    gotoReturn _end_dsiAccess[1489426] _end_dsiAccess[1489426]
    label _end_dsiAccess[1489426]
    (1489428 return ret[1489130])
  }
  function [domain(1,int(64),false)] int(64)[1368867].dsiAccess[1377824](const in arg this[1377828]:[domain(1,int(64),false)] int(64)[1368867], const  ref arg ind[1377851]:1*int(64)[1256714]) : int(64)[13] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[1377865]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1378017]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1378019 'move' call_tmp[1378017](1378025 call getDataIndex[1378173] this[1377828] ind[1377851]))
    const-val dataInd[1378027]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1378029 'move' dataInd[1378027] call_tmp[1378017])
    ref call_tmp[1378033]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1379389]:_ref(_ddata(int(64)))[1368037] "dead after last mention" "temp"
    (1379391 'move' _this_tmp_[1379389](1378038 call theData[1379249] this[1377828]))
    val coerce_tmp[1379427]:_ddata(int(64))[1368028] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1379431 'move' coerce_tmp[1379427](1379429 'deref' _this_tmp_[1379389]))
    (1378035 'move' call_tmp[1378033](1378041 call this[1379396] coerce_tmp[1379427] dataInd[1378027]))
    (1378043 'move' ret[1377865](1378045 'deref' call_tmp[1378033]))
    gotoReturn _end_dsiAccess[1378051] _end_dsiAccess[1378051]
    label _end_dsiAccess[1378051]
    (1378053 return ret[1377865])
  }
  function [domain(1,int(64),false)] real(64)[1358944].dsiAccess[1389876](const in arg this[1389880]:[domain(1,int(64),false)] real(64)[1358944], const  ref arg ind[1389903]:1*int(64)[1256714]) : real(64)[16] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[1389917]:real(64)[16] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1390165]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1390167 'move' call_tmp[1390165](1390173 call getDataIndex[1390300] this[1389880] ind[1389903]))
    const-val dataInd[1390175]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1390177 'move' dataInd[1390175] call_tmp[1390165])
    ref call_tmp[1390181]:_ref(real(64))[936906] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1391516]:_ref(_ddata(real(64)))[1358114] "dead after last mention" "temp"
    (1391518 'move' _this_tmp_[1391516](1390186 call theData[1391376] this[1389880]))
    val coerce_tmp[1391554]:_ddata(real(64))[1358105] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1391558 'move' coerce_tmp[1391554](1391556 'deref' _this_tmp_[1391516]))
    (1390183 'move' call_tmp[1390181](1390189 call this[1391523] coerce_tmp[1391554] dataInd[1390175]))
    (1390191 'move' ret[1389917](1390193 'deref' call_tmp[1390181]))
    gotoReturn _end_dsiAccess[1390199] _end_dsiAccess[1390199]
    label _end_dsiAccess[1390199]
    (1390201 return ret[1389917])
  }
  function [domain(1,int(64),false)] uint(64)[1450261].dsiAccess[1464737](const in arg this[1464741]:[domain(1,int(64),false)] uint(64)[1450261], const  ref arg ind[1464764]:1*int(64)[1256714]) : uint(64)[115] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[1464778]:uint(64)[115] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1464930]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1464932 'move' call_tmp[1464930](1464938 call getDataIndex[1458782] this[1464741] ind[1464764]))
    const-val dataInd[1464940]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1464942 'move' dataInd[1464940] call_tmp[1464930])
    ref call_tmp[1464946]:_ref(uint(64))[936790] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1465078]:_ref(_ddata(uint(64)))[1449431] "dead after last mention" "temp"
    (1465080 'move' _this_tmp_[1465078](1464951 call theData[1459939] this[1464741]))
    val coerce_tmp[1465085]:_ddata(uint(64))[1449422] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1465089 'move' coerce_tmp[1465085](1465087 'deref' _this_tmp_[1465078]))
    (1464948 'move' call_tmp[1464946](1464954 call this[1460086] coerce_tmp[1465085] dataInd[1464940]))
    (1464956 'move' ret[1464778](1464958 'deref' call_tmp[1464946]))
    gotoReturn _end_dsiAccess[1464964] _end_dsiAccess[1464964]
    label _end_dsiAccess[1464964]
    (1464966 return ret[1464778])
  }
  function [domain(1,int(64),false)] range(int(64),bounded,false)[1409224].dsiAccess[1489149](const in arg this[1489153]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224], const  ref arg ind[1489176]:1*int(64)[1256714], ref arg _retArg[1915817]:_ref(range(int(64),bounded,false))[1027047]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    const-val ret[1489190]:range(int(64),bounded,false)[1027003] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1489438]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1489440 'move' call_tmp[1489438](1489446 call getDataIndex[1435727] this[1489153] ind[1489176]))
    const-val dataInd[1489448]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1489450 'move' dataInd[1489448] call_tmp[1489438])
    ref call_tmp[1489454]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1489543]:_ref(_ddata(range(int(64),bounded,false)))[1406051] "dead after last mention" "temp"
    (1489545 'move' _this_tmp_[1489543](1489459 call theData[1436813] this[1489153]))
    val coerce_tmp[1489550]:_ddata(range(int(64),bounded,false))[1406042] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1489554 'move' coerce_tmp[1489550](1489552 'deref' _this_tmp_[1489543]))
    (1489456 'move' call_tmp[1489454](1489462 call this[1407601] coerce_tmp[1489550] dataInd[1489448]))
    (1489464 'move' ret[1489190](1915821 call chpl__initCopy[1085195] call_tmp[1489454]))
    gotoReturn _end_dsiAccess[1489472] _end_dsiAccess[1489472]
    label _end_dsiAccess[1489472]
    (1915819 '=' _retArg[1915817] ret[1489190])
    (1915823 return _void[55])
  }
  function [domain(1,int(64),false)] unmanaged localesSignal?[1318401].dsiAccess[1344393](const in arg this[1344397]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401], const  ref arg ind[1344420]:1*int(64)[1256714]) const ref : _ref(localesSignal)[1316692] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    ref ret[1344434]:_ref(localesSignal)[1316692] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1344560]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1344562 'move' call_tmp[1344560](1344568 call getDataIndex[1328803] this[1344397] ind[1344420]))
    const-val dataInd[1344570]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1344572 'move' dataInd[1344570] call_tmp[1344560])
    ref call_tmp[1344576]:_ref(localesSignal)[1316692] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1344693]:_ref(_ddata(unmanaged localesSignal?))[1317571] "dead after last mention" "temp"
    (1344695 'move' _this_tmp_[1344693](1344581 call theData[1329960] this[1344397]))
    val coerce_tmp[1344700]:_ddata(unmanaged localesSignal?)[1317562] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1344704 'move' coerce_tmp[1344700](1344702 'deref' _this_tmp_[1344693]))
    (1344578 'move' call_tmp[1344576](1344584 call this[1330107] coerce_tmp[1344700] dataInd[1344570]))
    (1344586 'move' ret[1344434] call_tmp[1344576])
    gotoReturn _end_dsiAccess[1344594] _end_dsiAccess[1344594]
    label _end_dsiAccess[1344594]
    (1344596 return ret[1344434])
  }
  function [domain(1,int(64),false)] locale[1256675].dsiAccess[1349581](const in arg this[1349585]:[domain(1,int(64),false)] locale[1256675], const  ref arg ind[1349608]:1*int(64)[1256714]) const ref : _ref(locale)[949033] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    ref ret[1349622]:_ref(locale)[949033] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1349702]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1349704 'move' call_tmp[1349702](1349710 call getDataIndex[1300935] this[1349585] ind[1349608]))
    const-val dataInd[1349712]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1349714 'move' dataInd[1349712] call_tmp[1349702])
    ref call_tmp[1349718]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1349796]:_ref(_ddata(locale))[1255592] "dead after last mention" "temp"
    (1349798 'move' _this_tmp_[1349796](1349723 call theData[1303439] this[1349585]))
    val coerce_tmp[1349803]:_ddata(locale)[1255583] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1349807 'move' coerce_tmp[1349803](1349805 'deref' _this_tmp_[1349796]))
    (1349720 'move' call_tmp[1349718](1349726 call this[1303586] coerce_tmp[1349803] dataInd[1349712]))
    (1349728 'move' ret[1349622] call_tmp[1349718])
    gotoReturn _end_dsiAccess[1349736] _end_dsiAccess[1349736]
    label _end_dsiAccess[1349736]
    (1349738 return ret[1349622])
  }
  function [domain(1,int(64),false)] int(64)[1368867].dsiAccess[1377896](const in arg this[1377900]:[domain(1,int(64),false)] int(64)[1368867], const  ref arg ind[1377923]:1*int(64)[1256714]) const ref : _ref(int(64))[936761] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    ref ret[1377937]:_ref(int(64))[936761] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1378063]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1378065 'move' call_tmp[1378063](1378071 call getDataIndex[1378173] this[1377900] ind[1377923]))
    const-val dataInd[1378073]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1378075 'move' dataInd[1378073] call_tmp[1378063])
    ref call_tmp[1378079]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1379451]:_ref(_ddata(int(64)))[1368037] "dead after last mention" "temp"
    (1379453 'move' _this_tmp_[1379451](1378084 call theData[1379249] this[1377900]))
    val coerce_tmp[1379458]:_ddata(int(64))[1368028] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1379462 'move' coerce_tmp[1379458](1379460 'deref' _this_tmp_[1379451]))
    (1378081 'move' call_tmp[1378079](1378087 call this[1379396] coerce_tmp[1379458] dataInd[1378073]))
    (1378089 'move' ret[1377937] call_tmp[1378079])
    gotoReturn _end_dsiAccess[1378097] _end_dsiAccess[1378097]
    label _end_dsiAccess[1378097]
    (1378099 return ret[1377937])
  }
  function [domain(1,int(64),false)] real(64)[1358944].dsiAccess[1389936](const in arg this[1389940]:[domain(1,int(64),false)] real(64)[1358944], const  ref arg ind[1389963]:1*int(64)[1256714]) const ref : _ref(real(64))[936906] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    ref ret[1389977]:_ref(real(64))[936906] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1390211]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1390213 'move' call_tmp[1390211](1390219 call getDataIndex[1390300] this[1389940] ind[1389963]))
    const-val dataInd[1390221]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1390223 'move' dataInd[1390221] call_tmp[1390211])
    ref call_tmp[1390227]:_ref(real(64))[936906] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1391578]:_ref(_ddata(real(64)))[1358114] "dead after last mention" "temp"
    (1391580 'move' _this_tmp_[1391578](1390232 call theData[1391376] this[1389940]))
    val coerce_tmp[1391585]:_ddata(real(64))[1358105] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1391589 'move' coerce_tmp[1391585](1391587 'deref' _this_tmp_[1391578]))
    (1390229 'move' call_tmp[1390227](1390235 call this[1391523] coerce_tmp[1391585] dataInd[1390221]))
    (1390237 'move' ret[1389977] call_tmp[1390227])
    gotoReturn _end_dsiAccess[1390245] _end_dsiAccess[1390245]
    label _end_dsiAccess[1390245]
    (1390247 return ret[1389977])
  }
  function [domain(1,int(64),false)] uint(64)[1450261].dsiAccess[1464809](const in arg this[1464813]:[domain(1,int(64),false)] uint(64)[1450261], const  ref arg ind[1464836]:1*int(64)[1256714]) const ref : _ref(uint(64))[936790] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    ref ret[1464850]:_ref(uint(64))[936790] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1464976]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1464978 'move' call_tmp[1464976](1464984 call getDataIndex[1458782] this[1464813] ind[1464836]))
    const-val dataInd[1464986]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1464988 'move' dataInd[1464986] call_tmp[1464976])
    ref call_tmp[1464992]:_ref(uint(64))[936790] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1465109]:_ref(_ddata(uint(64)))[1449431] "dead after last mention" "temp"
    (1465111 'move' _this_tmp_[1465109](1464997 call theData[1459939] this[1464813]))
    val coerce_tmp[1465116]:_ddata(uint(64))[1449422] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1465120 'move' coerce_tmp[1465116](1465118 'deref' _this_tmp_[1465109]))
    (1464994 'move' call_tmp[1464992](1465000 call this[1460086] coerce_tmp[1465116] dataInd[1464986]))
    (1465002 'move' ret[1464850] call_tmp[1464992])
    gotoReturn _end_dsiAccess[1465010] _end_dsiAccess[1465010]
    label _end_dsiAccess[1465010]
    (1465012 return ret[1464850])
  }
  function [domain(1,int(64),false)] range(int(64),bounded,false)[1409224].dsiAccess[1489209](const in arg this[1489213]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224], const  ref arg ind[1489236]:1*int(64)[1256714]) const ref : _ref(range(int(64),bounded,false))[1027047] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    ref ret[1489250]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1489484]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1489486 'move' call_tmp[1489484](1489492 call getDataIndex[1435727] this[1489213] ind[1489236]))
    const-val dataInd[1489494]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1489496 'move' dataInd[1489494] call_tmp[1489484])
    ref call_tmp[1489500]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1489574]:_ref(_ddata(range(int(64),bounded,false)))[1406051] "dead after last mention" "temp"
    (1489576 'move' _this_tmp_[1489574](1489505 call theData[1436813] this[1489213]))
    val coerce_tmp[1489581]:_ddata(range(int(64),bounded,false))[1406042] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1489585 'move' coerce_tmp[1489581](1489583 'deref' _this_tmp_[1489574]))
    (1489502 'move' call_tmp[1489500](1489508 call this[1407601] coerce_tmp[1489581] dataInd[1489494]))
    (1489510 'move' ret[1489250] call_tmp[1489500])
    gotoReturn _end_dsiAccess[1489518] _end_dsiAccess[1489518]
    label _end_dsiAccess[1489518]
    (1489520 return ret[1489250])
  }
  function [domain(1,int(64),false)] unmanaged localesSignal?[1318401].dsiBoundsCheck[1337244](const in arg this[1337248]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401], const  ref arg i[1337250]:1*int(64)[1256714]) : bool[10] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[1337252]:bool[10] "dead after last mention" "RVV" "temp"
    ref call_tmp[1337262]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
    (1337264 'move' call_tmp[1337262](1337267 call dom[1319786] this[1337248]))
    const-val call_tmp[1337270]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1337474]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1337478 'move' coerce_tmp[1337474](1337476 'deref' call_tmp[1337262]))
    val coerce_tmp[1337480]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1337485 'move' coerce_tmp[1337480] coerce_tmp[1337474])
    (1337272 'move' call_tmp[1337270](1337278 call dsiMember[1337295] coerce_tmp[1337480] i[1337250]))
    (1337280 'move' ret[1337252] call_tmp[1337270])
    (1337284 return ret[1337252])
  }
  function [domain(1,int(64),false)] locale[1256675].dsiBoundsCheck[1349075](const in arg this[1349079]:[domain(1,int(64),false)] locale[1256675], const  ref arg i[1349081]:1*int(64)[1256714]) : bool[10] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[1349083]:bool[10] "dead after last mention" "RVV" "temp"
    ref call_tmp[1349093]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
    (1349095 'move' call_tmp[1349093](1349098 call dom[1258208] this[1349079]))
    const-val call_tmp[1349101]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1349126]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1349130 'move' coerce_tmp[1349126](1349128 'deref' call_tmp[1349093]))
    val coerce_tmp[1349132]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1349137 'move' coerce_tmp[1349132] coerce_tmp[1349126])
    (1349103 'move' call_tmp[1349101](1349109 call dsiMember[1337295] coerce_tmp[1349132] i[1349081]))
    (1349111 'move' ret[1349083] call_tmp[1349101])
    (1349115 return ret[1349083])
  }
  function [domain(1,int(64),false)] int(64)[1368867].dsiBoundsCheck[1377390](const in arg this[1377394]:[domain(1,int(64),false)] int(64)[1368867], const  ref arg i[1377396]:1*int(64)[1256714]) : bool[10] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[1377398]:bool[10] "dead after last mention" "RVV" "temp"
    ref call_tmp[1377408]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
    (1377410 'move' call_tmp[1377408](1377413 call dom[1370252] this[1377394]))
    const-val call_tmp[1377416]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1377441]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1377445 'move' coerce_tmp[1377441](1377443 'deref' call_tmp[1377408]))
    val coerce_tmp[1377447]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1377452 'move' coerce_tmp[1377447] coerce_tmp[1377441])
    (1377418 'move' call_tmp[1377416](1377424 call dsiMember[1337295] coerce_tmp[1377447] i[1377396]))
    (1377426 'move' ret[1377398] call_tmp[1377416])
    (1377430 return ret[1377398])
  }
  function [domain(1,int(64),false)] uint(64)[1450261].dsiBoundsCheck[1464303](const in arg this[1464307]:[domain(1,int(64),false)] uint(64)[1450261], const  ref arg i[1464309]:1*int(64)[1256714]) : bool[10] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[1464311]:bool[10] "dead after last mention" "RVV" "temp"
    ref call_tmp[1464321]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
    (1464323 'move' call_tmp[1464321](1464326 call dom[1451646] this[1464307]))
    const-val call_tmp[1464329]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1464354]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1464358 'move' coerce_tmp[1464354](1464356 'deref' call_tmp[1464321]))
    val coerce_tmp[1464360]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1464365 'move' coerce_tmp[1464360] coerce_tmp[1464354])
    (1464331 'move' call_tmp[1464329](1464337 call dsiMember[1337295] coerce_tmp[1464360] i[1464309]))
    (1464339 'move' ret[1464311] call_tmp[1464329])
    (1464343 return ret[1464311])
  }
  function [domain(1,int(64),false)] range(int(64),bounded,false)[1409224].dsiBoundsCheck[1513004](const in arg this[1513008]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224], const  ref arg i[1513010]:1*int(64)[1256714]) : bool[10] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[1513012]:bool[10] "dead after last mention" "RVV" "temp"
    ref call_tmp[1513022]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
    (1513024 'move' call_tmp[1513022](1513027 call dom[1410591] this[1513008]))
    const-val call_tmp[1513030]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1513055]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1513059 'move' coerce_tmp[1513055](1513057 'deref' call_tmp[1513022]))
    val coerce_tmp[1513061]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1513066 'move' coerce_tmp[1513061] coerce_tmp[1513055])
    (1513032 'move' call_tmp[1513030](1513038 call dsiMember[1337295] coerce_tmp[1513061] i[1513010]))
    (1513040 'move' ret[1513012] call_tmp[1513030])
    (1513044 return ret[1513012])
  }
  function [domain(1,int(64),false)] real(64)[1358944].dsiBoundsCheck[1515651](const in arg this[1515655]:[domain(1,int(64),false)] real(64)[1358944], const  ref arg i[1515657]:1*int(64)[1256714]) : bool[10] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    val ret[1515659]:bool[10] "dead after last mention" "RVV" "temp"
    ref call_tmp[1515669]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
    (1515671 'move' call_tmp[1515669](1515674 call dom[1360329] this[1515655]))
    const-val call_tmp[1515677]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1515702]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1515706 'move' coerce_tmp[1515702](1515704 'deref' call_tmp[1515669]))
    val coerce_tmp[1515708]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1515713 'move' coerce_tmp[1515708] coerce_tmp[1515702])
    (1515679 'move' call_tmp[1515677](1515685 call dsiMember[1337295] coerce_tmp[1515708] i[1515657]))
    (1515687 'move' ret[1515659] call_tmp[1515677])
    (1515691 return ret[1515659])
  }
  function [domain(1,int(64),false)] locale[1256675].dsiReallocate[1841208](const in arg this[1841212]:[domain(1,int(64),false)] locale[1256675], const  ref arg bounds[1841252]:1*range(int(64),bounded,false)[1244885]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "ignore transfer errors" "virtual" "no return value for void"
  {
    val actuallyResizing[1841278]:bool[10] "dead at end of block" "insert auto destroy"
    (1841280 'move' actuallyResizing[1841278] 0)
    {
      val _indexOfInterest[1841285]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[1841287]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
      const-val call_tmp[1841289]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1918730]:range(int(64),bounded,false)[1027003] "temp"
      (1841294 call indices[1842671] bounds[1841252] ret_tmp[1918730])
      (1918733 'move' call_tmp[1841289] ret_tmp[1918730])
      (1841297 'move' _iterator[1841287](1841300 call _getIterator[1095509] call_tmp[1841289]))
      {
        val ret[2027878]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
        const-val _return_tmp_[2027880]:bool[10] "dead after last mention" "temp"
        const-val this[2028064]:range(int(64),bounded,false)[1027003] "temp"
        (2028069 'move' this[2028064](2028066 '.v' _iterator[1841287] F0_this[2113071]))
        (2027882 'move' _return_tmp_[2027880](2027885 call checkIfIterWillOverflow[1096003] this[2028064] 1))
        val i[2027888]:int(64)[13] "dead at end of block" "insert auto destroy"
        val call_tmp[2027890]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        (2027892 'move' i[2027888] 0)
        ref call_tmp[2027895]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
        const-val this[2028071]:range(int(64),bounded,false)[1027003] "temp"
        (2028076 'move' this[2028071](2028073 '.v' _iterator[1841287] F0_this[2113071]))
        (2027897 'move' call_tmp[2027895](2027900 call _low[1028641] this[2028071]))
        const-val start[2027902]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[2027904]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (2027906 'move' coerce_tmp[2027904](2027908 'deref' call_tmp[2027895]))
        (2027910 '=' start[2027902] coerce_tmp[2027904])
        (2027913 'noop')
        ref call_tmp[2027914]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
        const-val this[2028078]:range(int(64),bounded,false)[1027003] "temp"
        (2028083 'move' this[2028078](2028080 '.v' _iterator[1841287] F0_this[2113071]))
        (2027916 'move' call_tmp[2027914](2027919 call _high[1028849] this[2028078]))
        const end[2027921]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[2027923]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (2027925 'move' coerce_tmp[2027923](2027927 'deref' call_tmp[2027914]))
        (2027929 '=' end[2027921] coerce_tmp[2027923])
        (2027932 'noop')
        CForLoop[2027933]
        {
          const-val yret[2027948]:int(64)[13] "dead after last mention" "YVV" "temp"
          const-val call_tmp[2027950]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val this[2028085]:range(int(64),bounded,false)[1027003] "temp"
          (2028090 'move' this[2028085](2028087 '.v' _iterator[1841287] F0_this[2113071]))
          (2027952 'move' call_tmp[2027950](2027955 call chpl_intToIdx[1028669] this[2028085] i[2027888]))
          (2027958 'move' yret[2027948] call_tmp[2027950])
          const-val _yieldedIndex[2027972]:int(64)[13] "temp"
          (2028062 'move' _yieldedIndex[2027972] call_tmp[2027950])
          {
            const-val i[2027974]:int(64)[13] "const" "index var" "insert auto destroy"
            (2027976 'move' i[2027974] _yieldedIndex[2027972])
            {
              ref call_tmp[2027980]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "reference to a const" "temp"
              (2027982 'move' call_tmp[2027980](2027985 call this[1382848] bounds[1841252] i[2027974]))
              ref call_tmp[2027988]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
              (2027990 'move' call_tmp[2027988](2027993 call dom[1258208] this[1841212]))
              const-val call_tmp[2027995]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              val coerce_tmp[2027997]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2027999 'move' coerce_tmp[2027997](2028001 'deref' call_tmp[2027988]))
              val coerce_tmp[2028003]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2028005 'move' coerce_tmp[2028003] coerce_tmp[2027997])
              const-val ret_tmp[2028008]:range(int(64),bounded,false)[1027003] "temp"
              (2028011 call dsiDim[1258236] coerce_tmp[2028003] i[2027974] ret_tmp[2028008])
              (2028015 'move' call_tmp[2027995] ret_tmp[2028008])
              const-val call_tmp[2028018]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[2028020]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2028022 'move' coerce_tmp[2028020](2028024 'deref' call_tmp[2027980]))
              (2028026 'move' call_tmp[2028018](2028029 call !=[1842744] coerce_tmp[2028020] call_tmp[2027995]))
              const-val call_tmp[2028032]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2028034 'move' call_tmp[2028032] call_tmp[2028018])
              if call_tmp[2028032]
              {
                (2028040 call =[435290] actuallyResizing[1841278] 1)
                (2028044 call chpl__autoDestroy[1407763] coerce_tmp[2028020])
                (2028047 call chpl__autoDestroy[1407763] call_tmp[2027995])
                break _breakLabel[1841378] _breakLabel[1841378]
              }
              (2028053 call chpl__autoDestroy[1407763] coerce_tmp[2028020])
              (2028056 call chpl__autoDestroy[1407763] call_tmp[2027995])
            }
            label _continueLabel[2028058]
          }
          {
            (2027935 '=' i[2027888] coerce_tmp[2027904])
          }
          {
            (2027939 '<=' i[2027888] end[2027921])
          }
          {
            val call_tmp[2027943]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (2027945 '+=' i[2027888] 1)
          }
        }
        label _endthese[2027968]
      }
      label _breakLabel[1841378]
      (1929794 call _freeIterator[1102195] _iterator[1841287])
      (1929796 call chpl__autoDestroy[1407763] call_tmp[1841289])
    }
    const-val call_tmp[1841380]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1841382 'move' call_tmp[1841380](1841385 call ![7494] actuallyResizing[1841278]))
    const-val call_tmp[1841387]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1841389 'move' call_tmp[1841387] call_tmp[1841380])
    if call_tmp[1841387]
    {
      gotoReturn _end_dsiReallocate[1842667] _end_dsiReallocate[1842667]
    }
    val call_tmp[1841399]:locale[28] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val coerce_tmp[1842792]:BaseRectangularArr(1,int(64),false,locale)[1256461] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (1842798 'move' coerce_tmp[1842792](1842794 'cast' BaseRectangularArr(1,int(64),false,locale)[1256461] this[1841212]))
    const-val call_tmp[1841434]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (1841436 'move' call_tmp[1841434](1841438 '_wide_get_locale' this[1841212]))
    const-val call_tmp[1841440]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1906778]:locale[28] "temp"
    (1841445 call chpl_localeID_to_locale[92852] call_tmp[1841434] ret_tmp[1906778])
    (1906781 'move' call_tmp[1841440] ret_tmp[1906778])
    const-val call_tmp[1841447]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1906610]:locale[28] "temp"
    (1841452 call here[90438] ret_tmp[1906610])
    (1906613 'move' call_tmp[1841447] ret_tmp[1906610])
    const-val call_tmp[1841453]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1841455 'move' call_tmp[1841453](1841458 call !=[783099] call_tmp[1841440] call_tmp[1841447]))
    const-val call_tmp[1841461]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1841463 'move' call_tmp[1841461] call_tmp[1841453])
    if call_tmp[1841461]
    {
      (1841471 call halt[154111] "internal error: dsiReallocate() can only be called from an array's home locale")
    }
    (1929802 call chpl__autoDestroy[1601737] call_tmp[1841447])
    (1929799 call chpl__autoDestroy[1601737] call_tmp[1841440])
    {
      const-val call_tmp[1841475]:domain(1,int(64),false)[1252786] "dead at end of block" "maybe param" "temp"
      ref _tuple_expand_tmp_0[1842874]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "temp"
      (1842880 'move' _tuple_expand_tmp_0[1842874](1842884 '.' bounds[1841252] x0[1244883]))
      const-val coerce_tmp[1842887]:range(int(64),bounded,false)[1027003] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1842891 'move' coerce_tmp[1842887](1842889 'deref' _tuple_expand_tmp_0[1842874]))
      const-val ret_tmp[1911502]:domain(1,int(64),false)[1252786] "temp"
      (1841480 call chpl__buildDomainExpr[1244857] coerce_tmp[1842887] ret_tmp[1911502])
      (1911505 'move' call_tmp[1841475] ret_tmp[1911502])
      const-val reallocD[1841483]:domain(1,int(64),false)[1252786] "dead at end of block" "const" "insert auto destroy"
      const-val unaliasTemp[1911508]:domain(1,int(64),false)[1252786] "temp"
      (1911513 'move' unaliasTemp[1911508](1911509 call chpl__unalias[1697031] ret_tmp[1911502]))
      (1841485 'move' reallocD[1841483] unaliasTemp[1911508])
      const-val tmp[1841489]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val tmp[1841491]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val tmp[1841493]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val tmp[1841586]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val tmp[1841604]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1841606]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1841608 'move' call_tmp[1841606](1841611 call low[1510489] reallocD[1841483]))
      ref call_tmp[1841614]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
      (1841616 'move' call_tmp[1841614](1841619 call dom[1258208] this[1841212]))
      const-val call_tmp[1841622]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1842916]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1842920 'move' coerce_tmp[1842916](1842918 'deref' call_tmp[1841614]))
      val coerce_tmp[1842922]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1842927 'move' coerce_tmp[1842922] coerce_tmp[1842916])
      (1841624 'move' call_tmp[1841622](1841627 call dsiLow[1300625] coerce_tmp[1842922]))
      const-val call_tmp[1841630]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1841632 'move' call_tmp[1841630](1841635 call ==[435744] call_tmp[1841606] call_tmp[1841622]))
      (1841638 'move' tmp[1841604] call_tmp[1841630])
      (1841643 'move' tmp[1841586] tmp[1841604])
      (1841655 'move' tmp[1841493] tmp[1841586])
      val tmp[1841671]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1841673]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1841675]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1841677 'move' call_tmp[1841675] tmp[1841493])
      (1841682 'move' tmp[1841673] call_tmp[1841675])
      if tmp[1841673]
      {
        const-val tmp[1841689]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1841691]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1841693 'move' call_tmp[1841691](1841696 call stride[1842934] reallocD[1841483]))
        ref call_tmp[1841699]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
        (1841701 'move' call_tmp[1841699](1841704 call dom[1258208] this[1841212]))
        const-val call_tmp[1841707]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1843217]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1843221 'move' coerce_tmp[1843217](1843219 'deref' call_tmp[1841699]))
        val coerce_tmp[1843223]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1843228 'move' coerce_tmp[1843223] coerce_tmp[1843217])
        (1841709 'move' call_tmp[1841707](1841712 call dsiStride[1842972] coerce_tmp[1843223]))
        const-val call_tmp[1841715]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1841717 'move' call_tmp[1841715](1841720 call ==[435744] call_tmp[1841691] call_tmp[1841707]))
        (1841723 'move' tmp[1841689] call_tmp[1841715])
        (1841728 'move' tmp[1841671] tmp[1841689])
      }
      {
        (1841734 'move' tmp[1841671] 0)
      }
      (1841740 'move' tmp[1841491] tmp[1841671])
      val tmp[1841756]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1841758]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1841760]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1841762 'move' call_tmp[1841760] tmp[1841491])
      (1841767 'move' tmp[1841758] call_tmp[1841760])
      if tmp[1841758]
      {
        const-val tmp[1841774]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        ref call_tmp[1841776]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
        (1841778 'move' call_tmp[1841776](1841781 call dom[1258208] this[1841212]))
        const-val call_tmp[1841784]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1843236]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1843240 'move' coerce_tmp[1843236](1843238 'deref' call_tmp[1841776]))
        val coerce_tmp[1843242]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1843247 'move' coerce_tmp[1843242] coerce_tmp[1843236])
        (1841786 'move' call_tmp[1841784](1841789 call dsiNumIndices[1263823] coerce_tmp[1843242]))
        const-val call_tmp[1841792]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1841794 'move' call_tmp[1841792](1841797 call >[437788] call_tmp[1841784] 0))
        (1841800 'move' tmp[1841774] call_tmp[1841792])
        (1841805 'move' tmp[1841756] tmp[1841774])
      }
      {
        (1841811 'move' tmp[1841756] 0)
      }
      (1841817 'move' tmp[1841489] tmp[1841756])
      val tmp[1841833]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1841835]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1841837]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1841839 'move' call_tmp[1841837] tmp[1841489])
      (1841844 'move' tmp[1841835] call_tmp[1841837])
      if tmp[1841835]
      {
        const-val tmp[1841851]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1841853]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1841855 'move' call_tmp[1841853](1841858 call size[1435624] reallocD[1841483]))
        const-val call_tmp[1841861]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1841863 'move' call_tmp[1841861](1841866 call >[437788] call_tmp[1841853] 0))
        (1841869 'move' tmp[1841851] call_tmp[1841861])
        (1841874 'move' tmp[1841833] tmp[1841851])
      }
      {
        (1841880 'move' tmp[1841833] 0)
      }
      const-val call_tmp[1841886]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1841888 'move' call_tmp[1841886] tmp[1841833])
      if call_tmp[1841886]
      {
        ref call_tmp[1841908]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        ref _this_tmp_[1843259]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
        (1843261 'move' _this_tmp_[1843259](1841913 call sizesPerDim[1713293] this[1841212]))
        (1841910 'move' call_tmp[1841908](1843266 '.' _this_tmp_[1843259] x0[1256712]))
        const-val call_tmp[1841918]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const _chpl_forward_tgt[1843289]:domain(1,int(64),false)[1251123] "dead after last mention" "const" "maybe ref" "maybe type" "temp"
        (1843295 'move' _chpl_forward_tgt[1843289](1843292 call chpl_forwarding_expr5__value[1253895] reallocD[1841483]))
        val coerce_tmp[1843298]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1843303 'move' coerce_tmp[1843298] _chpl_forward_tgt[1843289])
        const-val ret_tmp[1912412]:range(int(64),bounded,false)[1027003] "temp"
        (1841926 call dsiDim[1258249] coerce_tmp[1843298] ret_tmp[1912412])
        (1912415 'move' call_tmp[1841918] ret_tmp[1912412])
        const-val call_tmp[1841928]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1841930 'move' call_tmp[1841928](1841933 call size[1035978] call_tmp[1841918]))
        (1841937 call =[435443] call_tmp[1841908] call_tmp[1841928])
        (1929805 call chpl__autoDestroy[1407763] call_tmp[1841918])
        ref call_tmp[1841942]:_ref(_ddata(locale))[1255592] "dead after last mention" "maybe param" "temp"
        (1841944 'move' call_tmp[1841942](1841947 call data[1259861] this[1841212]))
        ref call_tmp[1841950]:_ref(_ddata(locale))[1255592] "dead after last mention" "maybe param" "temp"
        (1841952 'move' call_tmp[1841950](1841955 call data[1259861] this[1841212]))
        val call_tmp[1841958]:locale[28] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1843310]:BaseRectangularArr(1,int(64),false,locale)[1256461] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1843316 'move' coerce_tmp[1843310](1843312 'cast' BaseRectangularArr(1,int(64),false,locale)[1256461] this[1841212]))
        ref call_tmp[1841966]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
        (1841968 'move' call_tmp[1841966](1841971 call dom[1258208] this[1841212]))
        const-val call_tmp[1841974]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1843321]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1843325 'move' coerce_tmp[1843321](1843323 'deref' call_tmp[1841966]))
        val coerce_tmp[1843327]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1843332 'move' coerce_tmp[1843327] coerce_tmp[1843321])
        (1841976 'move' call_tmp[1841974](1841979 call dsiNumIndices[1263823] coerce_tmp[1843327]))
        const-val call_tmp[1841982]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1841984 'move' call_tmp[1841982](1841987 call size[1435624] reallocD[1841483]))
        val call_tmp[1841990]:_ddata(locale)[1255583] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1843794]:_ddata(locale)[1255583] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1843798 'move' coerce_tmp[1843794](1843796 'deref' call_tmp[1841950]))
        const-val default_arg_subloc[1843818]:int(32)[95] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1843822 'move' default_arg_subloc[1843818](1843820 call _ddata_reallocate_default_subloc[1843801]))
        (1841992 'move' call_tmp[1841990](1841995 call _ddata_reallocate[1843336] coerce_tmp[1843794] call_tmp[1841974] call_tmp[1841982] default_arg_subloc[1843818]))
        (1842003 call =[1260545] call_tmp[1841942] call_tmp[1841990])
        (1842012 call initShiftedData[1263452] this[1841212])
      }
      {
        val call_tmp[1842014]:locale[28] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1843870]:BaseRectangularArr(1,int(64),false,locale)[1256461] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1843876 'move' coerce_tmp[1843870](1843872 'cast' BaseRectangularArr(1,int(64),false,locale)[1256461] this[1841212]))
        val call_tmp[1842030]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1843882]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1843888 'move' coerce_tmp[1843882](1843884 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256408] this[1841212]))
        val call_tmp[1842038]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
        (1842040 'move' call_tmp[1842038](1842043 call _value[1253027] reallocD[1841483]))
        val call_tmp[1842054]:domain(1,int(64),false)[1251123] "dead at end of block" "expr temp" "maybe param" "temp"
        (1842056 'move' call_tmp[1842054](1842059 call _value[1253027] reallocD[1841483]))
        val call_tmp[1842062]:[domain(1,int(64),false)] locale[1256675] "dead at end of block" "insert auto destroy for explicit new" "maybe param" "temp"
        val new_temp[1843922]:[domain(1,int(64),false)] locale[1256675] "dead at end of block" "temp"
        val default_arg_data[1843966]:_ddata(locale)[1255583] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1843970 'move' default_arg_data[1843966](1843968 call _new_default_data[1264765]))
        const-val default_arg_externFreeFunc[1843992]:nil[42] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1843996 'move' default_arg_externFreeFunc[1843992](1843994 call _new_default_externFreeFunc[1264861]))
        (1843924 'move' new_temp[1843922](1843900 call _new[1264638] call_tmp[1842054] default_arg_data[1843966] 0 0 default_arg_externFreeFunc[1843992]))
        (1842064 'move' call_tmp[1842062] new_temp[1843922])
        val copy[1842080]:[domain(1,int(64),false)] locale[1256675] "dead at end of block" "insert auto destroy"
        (1842082 'move' copy[1842080](1844000 call chpl__initCopy[1264910] call_tmp[1842062]))
        ref call_tmp[1842086]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
        (1842088 'move' call_tmp[1842086](1842091 call dom[1258208] this[1841212]))
        ref call_tmp[1842094]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "maybe param" "temp"
        val coerce_tmp[1844004]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1844008 'move' coerce_tmp[1844004](1844006 'deref' call_tmp[1842086]))
        val coerce_tmp[1844010]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1844015 'move' coerce_tmp[1844010] coerce_tmp[1844004])
        (1842096 'move' call_tmp[1842094](1842099 call ranges[1251533] coerce_tmp[1844010]))
        const-val call_tmp[1842102]:domain(1,int(64),false)[1252786] "dead at end of block" "maybe param" "temp"
        ref _tuple_expand_tmp_0[1844019]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "temp"
        (1844025 'move' _tuple_expand_tmp_0[1844019](1844029 '.' call_tmp[1842094] x0[1244883]))
        const-val coerce_tmp[1845716]:range(int(64),bounded,false)[1027003] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1845720 'move' coerce_tmp[1845716](1845718 'deref' _tuple_expand_tmp_0[1844019]))
        const-val ret_tmp[1918772]:domain(1,int(64),false)[1252786] "temp"
        (1842107 call this[1844078] reallocD[1841483] coerce_tmp[1845716] ret_tmp[1918772])
        (1918775 'move' call_tmp[1842102] ret_tmp[1918772])
        const-val keep[1842110]:domain(1,int(64),false)[1252786] "dead at end of block" "insert auto destroy"
        const-val unaliasTemp[1918778]:domain(1,int(64),false)[1252786] "temp"
        (1918783 'move' unaliasTemp[1918778](1918779 call chpl__unalias[1697031] ret_tmp[1918772]))
        (1842112 'move' keep[1842110] unaliasTemp[1918778])
        {
          ref i_this[1960622]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812] "ref to immutable" "temp"
          (1960626 'move' i_this[1960622](1960624 'set reference' keep[1842110]))
          const-val copy[1960731]:[domain(1,int(64),false)] locale[1256675] "const"
          (1960734 'move' copy[1960731](1960737 call chpl__initCopy[1264910] copy[1842080]))
          const-val this[1960750]:[domain(1,int(64),false)] locale[1256675] "const"
          (1960753 'move' this[1960750](1960756 call chpl__initCopy[1299384] this[1841212]))
          {
            val ret[1960629]:nothing[7] "dead after last mention" "RVV" "temp"
            {
              val call_tmp[1960632]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
              (1960634 'move' call_tmp[1960632](1960637 call _value[1253027] i_this[1960622]))
              val coerce_tmp[1960639]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "concurrently accessed" "insert auto destroy" "temp"
              (1960641 'move' coerce_tmp[1960639] call_tmp[1960632])
              const-val default_arg_tasksPerLocale[1960644]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              (1960646 'move' default_arg_tasksPerLocale[1960644](1960649 call these_default_tasksPerLocale[1315258] coerce_tmp[1960639]))
              const-val default_arg_ignoreRunning[1960651]:bool[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              (1960653 'move' default_arg_ignoreRunning[1960651](1960656 call these_default_ignoreRunning[1315289] coerce_tmp[1960639]))
              const-val default_arg_minIndicesPerTask[1960658]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              (1960660 'move' default_arg_minIndicesPerTask[1960658](1960663 call these_default_minIndicesPerTask[1315320] coerce_tmp[1960639]))
              val default_arg_offset[1960665]:1*int(64)[1256714] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
              const-val ret_tmp[1960667]:1*int(64)[1256714] "temp"
              (1960670 call these_default_offset[1315351] coerce_tmp[1960639] ret_tmp[1960667])
              (1960673 'move' default_arg_offset[1960665] ret_tmp[1960667])
              {
                const-ref i_offset[1975793]:1*int(64)[1256714] "temp"
                (1975797 'move' i_offset[1975793](1975795 'set reference' default_arg_offset[1960665]))
                const-val copy[1976134]:[domain(1,int(64),false)] locale[1256675] "concurrently accessed" "const"
                (1976137 'move' copy[1976134](1976140 call chpl__initCopy[1264910] copy[1960731]))
                const-val this[1976153]:[domain(1,int(64),false)] locale[1256675] "concurrently accessed" "const"
                (1976156 'move' this[1976153](1976159 call chpl__initCopy[1299384] this[1960750]))
                {
                  val ret[1975800]:nothing[7] "dead after last mention" "RVV" "temp"
                  const-val numTasks[1975802]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                  val tmp[1975804]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
                  const-val tmp[1975806]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[1975808]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1975810 'move' call_tmp[1975808](1975813 call ==[435744] default_arg_tasksPerLocale[1960644] 0))
                  (1975816 'move' tmp[1975806] call_tmp[1975808])
                  if tmp[1975806]
                  {
                    const-val tmp[1975821]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
                    const-val call_tmp[1975823]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1975825]:locale[28] "temp"
                    (1975828 call here[90438] ret_tmp[1975825])
                    (1975830 'move' call_tmp[1975823] ret_tmp[1975825])
                    (1975833 'move' tmp[1975821](1975836 call maxTaskPar[90545] call_tmp[1975823]))
                    (1975838 'move' tmp[1975804] tmp[1975821])
                    (1975842 call chpl__autoDestroy[1601737] call_tmp[1975823])
                  }
                  {
                    (1975845 'move' tmp[1975804] default_arg_tasksPerLocale[1960644])
                  }
                  (1975849 'move' numTasks[1975802] tmp[1975804])
                  const-val tmp[1975852]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
                  val tmp[1975854]:2*int(64)[1040245] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                  const-val tmp[1975856]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[1975858]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1975860 'move' call_tmp[1975858](1975862 'task_get_serial'))
                  (1975863 'move' tmp[1975856] call_tmp[1975858])
                  if tmp[1975856]
                  {
                    const-val tmp[1975868]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                    const-val ret_tmp[1975870]:2*int(64)[1040245] "temp"
                    (1975873 call _build_tuple[1040203] 1 -1 ret_tmp[1975870])
                    (1975877 'move' tmp[1975868] ret_tmp[1975870])
                    (1975880 'move' tmp[1975854] tmp[1975868])
                  }
                  {
                    const-val tmp[1975884]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                    ref call_tmp[1975886]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "maybe param" "temp"
                    (1975888 'move' call_tmp[1975886](1975891 call ranges[1251533] coerce_tmp[1960639]))
                    const-val ret_tmp[1975893]:2*int(64)[1040245] "temp"
                    (1975896 call _computeChunkStuff[1381155] numTasks[1975802] default_arg_ignoreRunning[1960651] default_arg_minIndicesPerTask[1960658] call_tmp[1975886] ret_tmp[1975893])
                    (1975902 'move' tmp[1975884] ret_tmp[1975893])
                    (1975905 'move' tmp[1975854] tmp[1975884])
                  }
                  (1975909 '=' tmp[1975852] tmp[1975854])
                  (1975912 'noop')
                  1
                  ref call_tmp[1975914]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                  (1975916 'move' call_tmp[1975914](1975918 '.' tmp[1975852] x0[1040241]))
                  const-val numChunks[1975921]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                  const-val coerce_tmp[1975923]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                  (1975925 'move' coerce_tmp[1975923](1975927 'deref' call_tmp[1975914]))
                  (1975929 '=' numChunks[1975921] coerce_tmp[1975923])
                  (1975932 'noop')
                  ref call_tmp[1975933]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                  (1975935 'move' call_tmp[1975933](1975937 '.' tmp[1975852] x1[1040243]))
                  const-val parDim[1975940]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                  const-val coerce_tmp[1975942]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                  (1975944 'move' coerce_tmp[1975942](1975946 'deref' call_tmp[1975933]))
                  (1975948 '=' parDim[1975940] coerce_tmp[1975942])
                  (1975951 'noop')
                  const-val call_tmp[1975952]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1975954 'move' call_tmp[1975952](1975957 call <=[437128] numChunks[1975921] 1))
                  const-val call_tmp[1975960]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1975962 'move' call_tmp[1975960] call_tmp[1975952])
                  if call_tmp[1975960]
                  {
                    {
                      val _indexOfInterest[1975968]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1975970]:_ic_these_help_DefaultRectangularDom_1_int64_t_F[1383595] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1975972]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1383601] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1975974]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1383601] "temp"
                      (1975977 call these_help[1383178] coerce_tmp[1960639] ret_tmp[1975974])
                      (1975980 'move' call_tmp[1975972] ret_tmp[1975974])
                      (1975983 'move' _iterator[1975970](1975986 call _getIterator[1383610] call_tmp[1975972]))
                      {
                        val ret[2051372]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1383601] "dead after last mention" "RVV" "temp"
                        val _indexOfInterest[2051374]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[2051376]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
                        ref call_tmp[2051378]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
                        ref _this_tmp_[2051380]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "temp"
                        const-val this[2051629]:domain(1,int(64),false)[1251123] "temp"
                        (2051634 'move' this[2051629](2051631 '.v' _iterator[1975970] F0_this[2134554]))
                        (2051382 'move' _this_tmp_[2051380](2051385 call ranges[1251533] this[2051629]))
                        (2051387 'move' call_tmp[2051378](2051389 '.' _this_tmp_[2051380] x0[1244883]))
                        (2051392 'move' _iterator[2051376](2051395 call _getIterator[1095509] call_tmp[2051378]))
                        {
                          val ret[2051398]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
                          const-val _return_tmp_[2051400]:bool[10] "dead after last mention" "temp"
                          const-val this[2051402]:range(int(64),bounded,false)[1027003] "temp"
                          (2051404 'move' this[2051402](2051406 '.v' _iterator[2051376] F0_this[2113071]))
                          (2051409 'move' _return_tmp_[2051400](2051412 call checkIfIterWillOverflow[1096003] this[2051402] 1))
                          val i[2051415]:int(64)[13] "dead at end of block" "insert auto destroy"
                          val call_tmp[2051417]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (2051419 'move' i[2051415] 0)
                          ref call_tmp[2051422]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
                          const-val this[2051424]:range(int(64),bounded,false)[1027003] "temp"
                          (2051426 'move' this[2051424](2051428 '.v' _iterator[2051376] F0_this[2113071]))
                          (2051431 'move' call_tmp[2051422](2051434 call _low[1028641] this[2051424]))
                          const-val start[2051436]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                          const-val coerce_tmp[2051438]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                          (2051440 'move' coerce_tmp[2051438](2051442 'deref' call_tmp[2051422]))
                          (2051444 '=' start[2051436] coerce_tmp[2051438])
                          (2051447 'noop')
                          ref call_tmp[2051448]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
                          const-val this[2051450]:range(int(64),bounded,false)[1027003] "temp"
                          (2051452 'move' this[2051450](2051454 '.v' _iterator[2051376] F0_this[2113071]))
                          (2051457 'move' call_tmp[2051448](2051460 call _high[1028849] this[2051450]))
                          const end[2051462]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                          const-val coerce_tmp[2051464]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                          (2051466 'move' coerce_tmp[2051464](2051468 'deref' call_tmp[2051448]))
                          (2051470 '=' end[2051462] coerce_tmp[2051464])
                          (2051473 'noop')
                          CForLoop[2051474] order-independent
                          {
                            const-val yret[2051489]:int(64)[13] "dead after last mention" "YVV" "temp"
                            const-val call_tmp[2051491]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val this[2051493]:range(int(64),bounded,false)[1027003] "temp"
                            (2051495 'move' this[2051493](2051497 '.v' _iterator[2051376] F0_this[2113071]))
                            (2051500 'move' call_tmp[2051491](2051503 call chpl_intToIdx[1028669] this[2051493] i[2051415]))
                            (2051506 'move' yret[2051489] call_tmp[2051491])
                            const-val _yieldedIndex[2051509]:int(64)[13] "temp"
                            (2051511 'move' _yieldedIndex[2051509] call_tmp[2051491])
                            {
                              const-val i[2051515]:int(64)[13] "const" "index var" "insert auto destroy"
                              (2051517 'move' i[2051515] _yieldedIndex[2051509])
                              const-val yret[2051520]:int(64)[13] "dead after last mention" "YVV" "temp"
                              (2051522 'move' yret[2051520] _yieldedIndex[2051509])
                              const-val _yieldedIndex[2051544]:int(64)[13] "temp"
                              (2051627 'move' _yieldedIndex[2051544] _yieldedIndex[2051509])
                              {
                                const-val i[2051546]:int(64)[13] "const" "index var" "insert auto destroy"
                                (2051548 'move' i[2051546] _yieldedIndex[2051544])
                                {
                                  const-val yret[2051552]:int(64)[13] "dead after last mention" "YVV" "temp"
                                  (2051554 'move' yret[2051552] i[2051546])
                                  const-val _indexOfInterest[2051557]:int(64)[13] "dead at end of block" "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                  (2051559 'move' _indexOfInterest[2051557] yret[2051552])
                                  {
                                    const-val i[2051563]:int(64)[13] "const" "index var" "insert auto destroy"
                                    (2051565 'move' i[2051563] _indexOfInterest[2051557])
                                    const-val yret[2051568]:int(64)[13] "dead after last mention" "YVV" "temp"
                                    (2051570 'move' yret[2051568] i[2051563])
                                    const-val i[2051573]:int(64)[13] "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy"
                                    (2051575 'move' i[2051573] yret[2051568])
                                    {
                                      ref dst[2051579]:_ref(locale)[949033] "dead at end of block" "ref var"
                                      ref call_tmp[2051581]:_ref(locale)[949033] "dead at end of block" "maybe param" "temp"
                                      val coerce_tmp[2051583]:[domain(1,int(64),false)] locale[1256675] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                      (2051585 'move' coerce_tmp[2051583] copy[1976134])
                                      val coerce_tmp[2051588]:[domain(1,int(64),false)] locale[1256675] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                      (2051590 'move' coerce_tmp[2051588] copy[1976134])
                                      (2051593 'move' call_tmp[2051581](2051596 call dsiAccess[1349194] coerce_tmp[2051583] i[2051573]))
                                      (2051599 'move' dst[2051579] call_tmp[2051581])
                                      ref src[2051602]:_ref(locale)[949033] "dead at end of block" "const" "ref var"
                                      ref call_tmp[2051604]:_ref(locale)[949033] "dead at end of block" "maybe param" "temp"
                                      (2051606 'move' call_tmp[2051604](2051609 call dsiAccess[1349348] this[1976153] i[2051573]))
                                      (2051612 'move' src[2051602] call_tmp[2051604])
                                      (2051615 '=' dst[2051579] src[2051602])
                                      val optinfo[2051618]:int(64)[13] "no codegen" "temp" "forall no task private"
                                      (2051620 'optimization info' optinfo[2051618])
                                    }
                                    label _continueLabel[2051622]
                                  }
                                }
                                label _continueLabel[2051624]
                              }
                            }
                            {
                              (2051476 '=' i[2051415] coerce_tmp[2051438])
                            }
                            {
                              (2051480 '<=' i[2051415] end[2051462])
                            }
                            {
                              val call_tmp[2051484]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              (2051486 '+=' i[2051415] 1)
                            }
                          }
                          label _endthese[2051535]
                        }
                        (2051538 call _freeIterator[1102195] _iterator[2051376])
                        label _endthese_help[2051540]
                      }
                      label _breakLabel[1976017]
                      (1976020 call _freeIterator[1383783] _iterator[1975970])
                    }
                  }
                  {
                    {
                      const-val tmpIter[1976024]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe ref" "no copy" "temp"
                      const-val call_tmp[1976026]:range(int(64),boundedLow,false)[1087754] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
                      const-val ret_tmp[1976028]:range(int(64),boundedLow,false)[1087754] "temp"
                      (1976031 call chpl_build_low_bounded_range[1087147] 0 ret_tmp[1976028])
                      (1976034 'move' call_tmp[1976026] ret_tmp[1976028])
                      const-val ret_tmp[1976037]:range(int(64),bounded,false)[1027003] "temp"
                      (1976040 call #[1088114] call_tmp[1976026] numChunks[1975921] ret_tmp[1976037])
                      (1976044 'move' tmpIter[1976024] ret_tmp[1976037])
                      {
                        const _coforallCount[1976048]:_EndCount(AtomicT(int(64)),int(64))[945532] "dead after last mention" "concurrently accessed" "const" "end count" "temp"
                        (1976050 'move' _coforallCount[1976048](1976053 call _endCountAlloc[1228107]))
                        const-val numTasks[1976054]:int(64)[13] "dead at end of block" "temp"
                        (1976056 'move' numTasks[1976054](1976059 call size[1035978] tmpIter[1976024]))
                        (1976062 call _upEndCount[1228350] _coforallCount[1976048] numTasks[1976054])
                        (1976066 call chpl_resetTaskSpawn[1229432] numTasks[1976054])
                        val _indexOfInterest[1976068]:int(64)[13] "dead at end of block" "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[1976070]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
                        (1976072 'move' _iterator[1976070](1976075 call _getIterator[1095509] tmpIter[1976024]))
                        {
                          val ret[2051637]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
                          const-val _return_tmp_[2051639]:bool[10] "dead after last mention" "temp"
                          const-val this[2051753]:range(int(64),bounded,false)[1027003] "temp"
                          (2051758 'move' this[2051753](2051755 '.v' _iterator[1976070] F0_this[2113071]))
                          (2051641 'move' _return_tmp_[2051639](2051644 call checkIfIterWillOverflow[1096003] this[2051753] 1))
                          val i[2051647]:int(64)[13] "dead at end of block" "insert auto destroy"
                          val call_tmp[2051649]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (2051651 'move' i[2051647] 0)
                          ref call_tmp[2051654]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
                          const-val this[2051760]:range(int(64),bounded,false)[1027003] "temp"
                          (2051765 'move' this[2051760](2051762 '.v' _iterator[1976070] F0_this[2113071]))
                          (2051656 'move' call_tmp[2051654](2051659 call _low[1028641] this[2051760]))
                          const-val start[2051661]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                          const-val coerce_tmp[2051663]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                          (2051665 'move' coerce_tmp[2051663](2051667 'deref' call_tmp[2051654]))
                          (2051669 '=' start[2051661] coerce_tmp[2051663])
                          (2051672 'noop')
                          ref call_tmp[2051673]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
                          const-val this[2051767]:range(int(64),bounded,false)[1027003] "temp"
                          (2051772 'move' this[2051767](2051769 '.v' _iterator[1976070] F0_this[2113071]))
                          (2051675 'move' call_tmp[2051673](2051678 call _high[1028849] this[2051767]))
                          const end[2051680]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                          const-val coerce_tmp[2051682]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                          (2051684 'move' coerce_tmp[2051682](2051686 'deref' call_tmp[2051673]))
                          (2051688 '=' end[2051680] coerce_tmp[2051682])
                          (2051691 'noop')
                          CForLoop[2051692]
                          {
                            const-val yret[2051707]:int(64)[13] "dead after last mention" "YVV" "temp"
                            const-val call_tmp[2051709]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val this[2051774]:range(int(64),bounded,false)[1027003] "temp"
                            (2051779 'move' this[2051774](2051776 '.v' _iterator[1976070] F0_this[2113071]))
                            (2051711 'move' call_tmp[2051709](2051714 call chpl_intToIdx[1028669] this[2051774] i[2051647]))
                            (2051717 'move' yret[2051707] call_tmp[2051709])
                            const-val _yieldedIndex[2051731]:int(64)[13] "coforall index var" "temp"
                            (2051751 'move' _yieldedIndex[2051731] call_tmp[2051709])
                            {
                              const-val chunk[2051733]:int(64)[13] "coforall index var" "const" "index var" "insert auto destroy"
                              (2051735 'move' chunk[2051733] _yieldedIndex[2051731])
                              val _args_forcoforall_fn[2221570]:_class_localscoforall_fn[2221552] "temp"
                              (2221574 'move' _args_forcoforall_fn[2221570](2221572 'stack allocate class' _class_localscoforall_fn[2221552]))
                              (2221576 '.=' _args_forcoforall_fn[2221570] _0_parDim[2221555] parDim[1975940])
                              (2221580 '.=' _args_forcoforall_fn[2221570] _1_numChunks[2221557] numChunks[1975921])
                              (2221584 '.=' _args_forcoforall_fn[2221570] _2_coerce_tmp[2221559] coerce_tmp[1960639])
                              (2221588 '.=' _args_forcoforall_fn[2221570] _3_chunk[2221561] chunk[2051733])
                              (2221592 '.=' _args_forcoforall_fn[2221570] _4__coforallCount[2221563] _coforallCount[1976048])
                              (2221596 '.=' _args_forcoforall_fn[2221570] _5_copy[2221565] copy[1976134])
                              (2221600 '.=' _args_forcoforall_fn[2221570] _6_this[2221567] this[1976153])
                              val _args_vforcoforall_fn[2221604]:c_void_ptr[149] "temp"
                              (2221608 'move' _args_vforcoforall_fn[2221604](2221606 'cast_to_void_star' _args_forcoforall_fn[2221570]))
                              val _args_sizecoforall_fn[2221610]:int(64)[13] "temp"
                              (2221614 'move' _args_sizecoforall_fn[2221610](2221612 'sizeof_bundle' _class_localscoforall_fn[2221552]))
                              ref _taskListcoforall_fn[2221616]:c_void_ptr[149] "temp"
                              (2221621 'move' _taskListcoforall_fn[2221616](2221618 '.' _coforallCount[1976048] taskList[12712]))
                              val _taskListNodecoforall_fn[2221623]:int(64)[13] "temp"
                              (2221627 'move' _taskListNodecoforall_fn[2221623](2221625 '_wide_get_node' _coforallCount[1976048]))
                              (2221715 call wrapcoforall_fn[2221629] _taskListcoforall_fn[2221616] _taskListNodecoforall_fn[2221623] _args_vforcoforall_fn[2221604] _args_sizecoforall_fn[2221610] _args_forcoforall_fn[2221570])
                              {
                              }
                              label _continueLabel[2051748]
                            }
                            {
                              (2051694 '=' i[2051647] coerce_tmp[2051663])
                            }
                            {
                              (2051698 '<=' i[2051647] end[2051680])
                            }
                            {
                              val call_tmp[2051702]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              (2051704 '+=' i[2051647] 1)
                            }
                          }
                          label _endthese[2051727]
                        }
                        label _breakLabel[1976095]
                        val error[1976097]:Error[167984] "error variable" "temp"
                        (1976099 'move' error[1976097] nil[44])
                        (1976103 call _waitEndCount[1235226] _coforallCount[1976048] numTasks[1976054] error[1976097])
                        val errorExists[2226144]:bool[10] "temp"
                        (2226149 'move' errorExists[2226144](2226146 '!=' error[1976097] nil[44]))
                        if errorExists[2226144]
                        {
                          (1976111 call chpl_propagate_error[170518] error[1976097])
                        }
                        (1976115 call _endCountFree[1234049] _coforallCount[1976048])
                        (1976118 call _freeIterator[1102195] _iterator[1976070])
                      }
                      (1976121 call chpl__autoDestroy[1407763] tmpIter[1976024])
                      (1976124 call chpl__autoDestroy[1680875] call_tmp[1976026])
                    }
                  }
                  (1976128 call chpl__autoDestroy[1674803] tmp[1975852])
                  label _endthese[1976130]
                }
                val coerce_tmp[1976162]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1976164 'move' coerce_tmp[1976162](1976166 'cast' object[22] this[1976153]))
                (1976170 call chpl__autoDestroy[1351354] coerce_tmp[1976162])
                val coerce_tmp[1976143]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1976145 'move' coerce_tmp[1976143](1976147 'cast' object[22] copy[1976134]))
                (1976151 call chpl__autoDestroy[1846254] coerce_tmp[1976143])
              }
              (1960721 call chpl_after_forall_fence[13071])
              (1960723 call chpl__autoDestroy[1697253] default_arg_offset[1960665])
              label _breakLabel[1960725]
            }
            label _endthese[1960727]
          }
          val coerce_tmp[1960759]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1960761 'move' coerce_tmp[1960759](1960763 'cast' object[22] this[1960750]))
          (1960767 call chpl__autoDestroy[1351354] coerce_tmp[1960759])
          val coerce_tmp[1960740]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1960742 'move' coerce_tmp[1960740](1960744 'cast' object[22] copy[1960731]))
          (1960748 call chpl__autoDestroy[1846254] coerce_tmp[1960740])
        }
        (1930699 call chpl_after_forall_fence[13071])
        val call_tmp[1842164]:locale[28] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1846403]:BaseRectangularArr(1,int(64),false,locale)[1256461] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1846409 'move' coerce_tmp[1846403](1846405 'cast' BaseRectangularArr(1,int(64),false,locale)[1256461] this[1841212]))
        {
          const-val call_tmp[1842196]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (1842198 'move' call_tmp[1842196](1842201 call size[1435624] reallocD[1841483]))
          ref call_tmp[1842204]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
          (1842206 'move' call_tmp[1842204](1842209 call dom[1258208] this[1841212]))
          const-val call_tmp[1842212]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          val coerce_tmp[1846421]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1846425 'move' coerce_tmp[1846421](1846423 'deref' call_tmp[1842204]))
          val coerce_tmp[1846427]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1846432 'move' coerce_tmp[1846427] coerce_tmp[1846421])
          (1842214 'move' call_tmp[1842212](1842217 call dsiNumIndices[1263823] coerce_tmp[1846427]))
          const-val call_tmp[1842220]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1842222 'move' call_tmp[1842220](1842225 call <[437568] call_tmp[1842196] call_tmp[1842212]))
          const-val call_tmp[1842228]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1842230 'move' call_tmp[1842228] call_tmp[1842220])
          if call_tmp[1842228]
          {
            val call_tmp[1842237]:locale[28] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            val coerce_tmp[1846436]:BaseRectangularArr(1,int(64),false,locale)[1256461] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
            (1846442 'move' coerce_tmp[1846436](1846438 'cast' BaseRectangularArr(1,int(64),false,locale)[1256461] this[1841212]))
            {
              {
                val _indexOfInterest[1842318]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1842320]:_ic_these_DefaultRectangularDom_1_int64_t_F[1306903] "dead at end of block" "expr temp" "temp"
                ref call_tmp[1842322]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
                (1842324 'move' call_tmp[1842322](1842327 call dom[1258208] this[1841212]))
                (1842330 'move' _iterator[1842320](1842333 call _getIterator[1846453] call_tmp[1842322]))
                {
                  val ret[2028093]:_ir_these_DefaultRectangularDom_1_int64_t_F[1306909] "dead after last mention" "RVV" "temp"
                  val _indexOfInterest[2028095]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                  val _iterator[2028097]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
                  ref call_tmp[2028099]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
                  ref _this_tmp_[2028101]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "temp"
                  const-val this[2028312]:domain(1,int(64),false)[1251123] "temp"
                  (2028317 'move' this[2028312](2028314 '.v' _iterator[1842320] F0_this[2128060]))
                  (2028103 'move' _this_tmp_[2028101](2028106 call ranges[1251533] this[2028312]))
                  (2028108 'move' call_tmp[2028099](2028110 '.' _this_tmp_[2028101] x0[1244883]))
                  (2028113 'move' _iterator[2028097](2028116 call _getIterator[1095509] call_tmp[2028099]))
                  {
                    val ret[2028119]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
                    const-val _return_tmp_[2028121]:bool[10] "dead after last mention" "temp"
                    const-val this[2028123]:range(int(64),bounded,false)[1027003] "temp"
                    (2028125 'move' this[2028123](2028127 '.v' _iterator[2028097] F0_this[2113071]))
                    (2028130 'move' _return_tmp_[2028121](2028133 call checkIfIterWillOverflow[1096003] this[2028123] 1))
                    val i[2028136]:int(64)[13] "dead at end of block" "insert auto destroy"
                    val call_tmp[2028138]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    (2028140 'move' i[2028136] 0)
                    ref call_tmp[2028143]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
                    const-val this[2028145]:range(int(64),bounded,false)[1027003] "temp"
                    (2028147 'move' this[2028145](2028149 '.v' _iterator[2028097] F0_this[2113071]))
                    (2028152 'move' call_tmp[2028143](2028155 call _low[1028641] this[2028145]))
                    const-val start[2028157]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[2028159]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (2028161 'move' coerce_tmp[2028159](2028163 'deref' call_tmp[2028143]))
                    (2028165 '=' start[2028157] coerce_tmp[2028159])
                    (2028168 'noop')
                    ref call_tmp[2028169]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
                    const-val this[2028171]:range(int(64),bounded,false)[1027003] "temp"
                    (2028173 'move' this[2028171](2028175 '.v' _iterator[2028097] F0_this[2113071]))
                    (2028178 'move' call_tmp[2028169](2028181 call _high[1028849] this[2028171]))
                    const end[2028183]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[2028185]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (2028187 'move' coerce_tmp[2028185](2028189 'deref' call_tmp[2028169]))
                    (2028191 '=' end[2028183] coerce_tmp[2028185])
                    (2028194 'noop')
                    CForLoop[2028195]
                    {
                      const-val yret[2028210]:int(64)[13] "dead after last mention" "YVV" "temp"
                      const-val call_tmp[2028212]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      const-val this[2028214]:range(int(64),bounded,false)[1027003] "temp"
                      (2028216 'move' this[2028214](2028218 '.v' _iterator[2028097] F0_this[2113071]))
                      (2028221 'move' call_tmp[2028212](2028224 call chpl_intToIdx[1028669] this[2028214] i[2028136]))
                      (2028227 'move' yret[2028210] call_tmp[2028212])
                      const-val _yieldedIndex[2028230]:int(64)[13] "temp"
                      (2028232 'move' _yieldedIndex[2028230] call_tmp[2028212])
                      {
                        const-val i[2028236]:int(64)[13] "const" "index var" "insert auto destroy"
                        (2028238 'move' i[2028236] _yieldedIndex[2028230])
                        const-val yret[2028241]:int(64)[13] "dead after last mention" "YVV" "temp"
                        (2028243 'move' yret[2028241] _yieldedIndex[2028230])
                        const-val _yieldedIndex[2028265]:int(64)[13] "temp"
                        (2028310 'move' _yieldedIndex[2028265] _yieldedIndex[2028230])
                        {
                          const-val i[2028267]:int(64)[13] "const" "index var" "insert auto destroy"
                          (2028269 'move' i[2028267] _yieldedIndex[2028265])
                          {
                            const-val call_tmp[2028273]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (2028275 'move' call_tmp[2028273](2028278 call contains[1846622] keep[1842110] i[2028267]))
                            const-val call_tmp[2028281]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (2028283 'move' call_tmp[2028281](2028286 call ![7494] call_tmp[2028273]))
                            const-val call_tmp[2028288]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (2028290 'move' call_tmp[2028288] call_tmp[2028281])
                            if call_tmp[2028288]
                            {
                              ref call_tmp[2028295]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
                              (2028297 'move' call_tmp[2028295](2028300 call dsiAccess[1349348] this[1841212] i[2028267]))
                              (2028304 call chpl__autoDestroy[1601737] call_tmp[2028295])
                            }
                          }
                          label _continueLabel[2028307]
                        }
                      }
                      {
                        (2028197 '=' i[2028136] coerce_tmp[2028159])
                      }
                      {
                        (2028201 '<=' i[2028136] end[2028183])
                      }
                      {
                        val call_tmp[2028205]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                        (2028207 '+=' i[2028136] 1)
                      }
                    }
                    label _endthese[2028256]
                  }
                  (2028259 call _freeIterator[1102195] _iterator[2028097])
                  label _endthese[2028261]
                }
                label _breakLabel[1842402]
                (1929812 call _freeIterator[1314906] _iterator[1842320])
              }
            }
          }
        }
        ref call_tmp[1842407]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
        (1842409 'move' call_tmp[1842407](1842412 call off[1258170] this[1841212]))
        ref call_tmp[1842415]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1847021]:[domain(1,int(64),false)] locale[1256675] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1847026 'move' coerce_tmp[1847021] copy[1842080])
        (1842417 'move' call_tmp[1842415](1842420 call off[1258170] coerce_tmp[1847021]))
        (1842424 call =[1847029] call_tmp[1842407] call_tmp[1842415])
        ref call_tmp[1842429]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
        (1842431 'move' call_tmp[1842429](1842434 call blk[1258464] this[1841212]))
        ref call_tmp[1842437]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1847215]:[domain(1,int(64),false)] locale[1256675] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1847220 'move' coerce_tmp[1847215] copy[1842080])
        (1842439 'move' call_tmp[1842437](1842442 call blk[1258464] coerce_tmp[1847215]))
        (1842446 call =[1847029] call_tmp[1842429] call_tmp[1842437])
        ref call_tmp[1842451]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
        (1842453 'move' call_tmp[1842451](1842456 call str[1258310] this[1841212]))
        ref call_tmp[1842459]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1847225]:[domain(1,int(64),false)] locale[1256675] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1847230 'move' coerce_tmp[1847225] copy[1842080])
        (1842461 'move' call_tmp[1842459](1842464 call str[1258310] coerce_tmp[1847225]))
        (1842468 call =[1847029] call_tmp[1842451] call_tmp[1842459])
        ref call_tmp[1842473]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        (1842475 'move' call_tmp[1842473](1842478 call factoredOffs[1259656] this[1841212]))
        ref call_tmp[1842481]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1847235]:[domain(1,int(64),false)] locale[1256675] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1847240 'move' coerce_tmp[1847235] copy[1842080])
        (1842483 'move' call_tmp[1842481](1842486 call factoredOffs[1259656] coerce_tmp[1847235]))
        const-val coerce_tmp[1847243]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1847247 'move' coerce_tmp[1847243](1847245 'deref' call_tmp[1842481]))
        (1842490 call =[435443] call_tmp[1842473] coerce_tmp[1847243])
        (1842499 call dsiDestroyArr[1832313] this[1841212] 0)
        ref call_tmp[1842503]:_ref(_ddata(locale))[1255592] "dead after last mention" "maybe param" "temp"
        (1842505 'move' call_tmp[1842503](1842508 call data[1259861] this[1841212]))
        ref call_tmp[1842511]:_ref(_ddata(locale))[1255592] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1847252]:[domain(1,int(64),false)] locale[1256675] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1847257 'move' coerce_tmp[1847252] copy[1842080])
        (1842513 'move' call_tmp[1842511](1842516 call data[1259861] coerce_tmp[1847252]))
        val coerce_tmp[1847260]:_ddata(locale)[1255583] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1847264 'move' coerce_tmp[1847260](1847262 'deref' call_tmp[1842511]))
        (1842520 call =[1260545] call_tmp[1842503] coerce_tmp[1847260])
        val call_tmp[1842563]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
        (1842565 'move' call_tmp[1842563](1842568 call _value[1253027] reallocD[1841483]))
        {
          const-val call_tmp[1842612]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (1842614 'move' call_tmp[1842612](1842617 call size[1435624] reallocD[1841483]))
          const-val call_tmp[1842620]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1842622 'move' call_tmp[1842620](1842625 call >[437788] call_tmp[1842612] 0))
          const-val call_tmp[1842628]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1842630 'move' call_tmp[1842628] call_tmp[1842620])
          if call_tmp[1842628]
          {
            ref call_tmp[1842637]:_ref(_ddata(locale))[1255592] "dead after last mention" "maybe param" "temp"
            (1842639 'move' call_tmp[1842637](1842642 call shiftedData[1264427] this[1841212]))
            ref call_tmp[1842645]:_ref(_ddata(locale))[1255592] "dead after last mention" "maybe param" "temp"
            val coerce_tmp[1847285]:[domain(1,int(64),false)] locale[1256675] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1847290 'move' coerce_tmp[1847285] copy[1842080])
            (1842647 'move' call_tmp[1842645](1842650 call shiftedData[1264427] coerce_tmp[1847285]))
            val coerce_tmp[1847293]:_ddata(locale)[1255583] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1847297 'move' coerce_tmp[1847293](1847295 'deref' call_tmp[1842645]))
            (1842654 call =[1260545] call_tmp[1842637] coerce_tmp[1847293])
          }
        }
        (1842662 call chpl__delete[1847300] copy[1842080])
        (1929815 call chpl__autoDestroy[1697012] keep[1842110])
        (1929818 call chpl__autoDestroy[1407763] coerce_tmp[1845716])
      }
      (1929822 call chpl__autoDestroy[1697012] reallocD[1841483])
      (1929825 call chpl__autoDestroy[1407763] coerce_tmp[1842887])
    }
    label _end_dsiReallocate[1842667]
    (1842669 return _void[55])
  }
  function [domain(1,int(64),false)] unmanaged localesSignal?[1318401].dsiReallocate[1848282](const in arg this[1848286]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401], const  ref arg bounds[1848326]:1*range(int(64),bounded,false)[1244885]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "ignore transfer errors" "virtual" "no return value for void"
  {
    val actuallyResizing[1848352]:bool[10] "dead at end of block" "insert auto destroy"
    (1848354 'move' actuallyResizing[1848352] 0)
    {
      val _indexOfInterest[1848359]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[1848361]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
      const-val call_tmp[1848363]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1918736]:range(int(64),bounded,false)[1027003] "temp"
      (1848368 call indices[1842671] bounds[1848326] ret_tmp[1918736])
      (1918739 'move' call_tmp[1848363] ret_tmp[1918736])
      (1848371 'move' _iterator[1848361](1848374 call _getIterator[1095509] call_tmp[1848363]))
      {
        val ret[2028520]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
        const-val _return_tmp_[2028522]:bool[10] "dead after last mention" "temp"
        const-val this[2028706]:range(int(64),bounded,false)[1027003] "temp"
        (2028711 'move' this[2028706](2028708 '.v' _iterator[1848361] F0_this[2113071]))
        (2028524 'move' _return_tmp_[2028522](2028527 call checkIfIterWillOverflow[1096003] this[2028706] 1))
        val i[2028530]:int(64)[13] "dead at end of block" "insert auto destroy"
        val call_tmp[2028532]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        (2028534 'move' i[2028530] 0)
        ref call_tmp[2028537]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
        const-val this[2028713]:range(int(64),bounded,false)[1027003] "temp"
        (2028718 'move' this[2028713](2028715 '.v' _iterator[1848361] F0_this[2113071]))
        (2028539 'move' call_tmp[2028537](2028542 call _low[1028641] this[2028713]))
        const-val start[2028544]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[2028546]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (2028548 'move' coerce_tmp[2028546](2028550 'deref' call_tmp[2028537]))
        (2028552 '=' start[2028544] coerce_tmp[2028546])
        (2028555 'noop')
        ref call_tmp[2028556]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
        const-val this[2028720]:range(int(64),bounded,false)[1027003] "temp"
        (2028725 'move' this[2028720](2028722 '.v' _iterator[1848361] F0_this[2113071]))
        (2028558 'move' call_tmp[2028556](2028561 call _high[1028849] this[2028720]))
        const end[2028563]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[2028565]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (2028567 'move' coerce_tmp[2028565](2028569 'deref' call_tmp[2028556]))
        (2028571 '=' end[2028563] coerce_tmp[2028565])
        (2028574 'noop')
        CForLoop[2028575]
        {
          const-val yret[2028590]:int(64)[13] "dead after last mention" "YVV" "temp"
          const-val call_tmp[2028592]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val this[2028727]:range(int(64),bounded,false)[1027003] "temp"
          (2028732 'move' this[2028727](2028729 '.v' _iterator[1848361] F0_this[2113071]))
          (2028594 'move' call_tmp[2028592](2028597 call chpl_intToIdx[1028669] this[2028727] i[2028530]))
          (2028600 'move' yret[2028590] call_tmp[2028592])
          const-val _yieldedIndex[2028614]:int(64)[13] "temp"
          (2028704 'move' _yieldedIndex[2028614] call_tmp[2028592])
          {
            const-val i[2028616]:int(64)[13] "const" "index var" "insert auto destroy"
            (2028618 'move' i[2028616] _yieldedIndex[2028614])
            {
              ref call_tmp[2028622]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "reference to a const" "temp"
              (2028624 'move' call_tmp[2028622](2028627 call this[1382848] bounds[1848326] i[2028616]))
              ref call_tmp[2028630]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
              (2028632 'move' call_tmp[2028630](2028635 call dom[1319786] this[1848286]))
              const-val call_tmp[2028637]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              val coerce_tmp[2028639]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2028641 'move' coerce_tmp[2028639](2028643 'deref' call_tmp[2028630]))
              val coerce_tmp[2028645]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2028647 'move' coerce_tmp[2028645] coerce_tmp[2028639])
              const-val ret_tmp[2028650]:range(int(64),bounded,false)[1027003] "temp"
              (2028653 call dsiDim[1258236] coerce_tmp[2028645] i[2028616] ret_tmp[2028650])
              (2028657 'move' call_tmp[2028637] ret_tmp[2028650])
              const-val call_tmp[2028660]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[2028662]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2028664 'move' coerce_tmp[2028662](2028666 'deref' call_tmp[2028622]))
              (2028668 'move' call_tmp[2028660](2028671 call !=[1842744] coerce_tmp[2028662] call_tmp[2028637]))
              const-val call_tmp[2028674]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2028676 'move' call_tmp[2028674] call_tmp[2028660])
              if call_tmp[2028674]
              {
                (2028682 call =[435290] actuallyResizing[1848352] 1)
                (2028686 call chpl__autoDestroy[1407763] coerce_tmp[2028662])
                (2028689 call chpl__autoDestroy[1407763] call_tmp[2028637])
                break _breakLabel[1848452] _breakLabel[1848452]
              }
              (2028695 call chpl__autoDestroy[1407763] coerce_tmp[2028662])
              (2028698 call chpl__autoDestroy[1407763] call_tmp[2028637])
            }
            label _continueLabel[2028700]
          }
          {
            (2028577 '=' i[2028530] coerce_tmp[2028546])
          }
          {
            (2028581 '<=' i[2028530] end[2028563])
          }
          {
            val call_tmp[2028585]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (2028587 '+=' i[2028530] 1)
          }
        }
        label _endthese[2028610]
      }
      label _breakLabel[1848452]
      (1929877 call _freeIterator[1102195] _iterator[1848361])
      (1929879 call chpl__autoDestroy[1407763] call_tmp[1848363])
    }
    const-val call_tmp[1848454]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1848456 'move' call_tmp[1848454](1848459 call ![7494] actuallyResizing[1848352]))
    const-val call_tmp[1848461]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1848463 'move' call_tmp[1848461] call_tmp[1848454])
    if call_tmp[1848461]
    {
      gotoReturn _end_dsiReallocate[1849741] _end_dsiReallocate[1849741]
    }
    val call_tmp[1848473]:localesSignal[92278] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val coerce_tmp[1849776]:BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318187] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (1849782 'move' coerce_tmp[1849776](1849778 'cast' BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318187] this[1848286]))
    const-val call_tmp[1848508]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (1848510 'move' call_tmp[1848508](1848512 '_wide_get_locale' this[1848286]))
    const-val call_tmp[1848514]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1906784]:locale[28] "temp"
    (1848519 call chpl_localeID_to_locale[92852] call_tmp[1848508] ret_tmp[1906784])
    (1906787 'move' call_tmp[1848514] ret_tmp[1906784])
    const-val call_tmp[1848521]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1906616]:locale[28] "temp"
    (1848526 call here[90438] ret_tmp[1906616])
    (1906619 'move' call_tmp[1848521] ret_tmp[1906616])
    const-val call_tmp[1848527]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1848529 'move' call_tmp[1848527](1848532 call !=[783099] call_tmp[1848514] call_tmp[1848521]))
    const-val call_tmp[1848535]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1848537 'move' call_tmp[1848535] call_tmp[1848527])
    if call_tmp[1848535]
    {
      (1848545 call halt[154111] "internal error: dsiReallocate() can only be called from an array's home locale")
    }
    (1929885 call chpl__autoDestroy[1601737] call_tmp[1848521])
    (1929882 call chpl__autoDestroy[1601737] call_tmp[1848514])
    {
      const-val call_tmp[1848549]:domain(1,int(64),false)[1252786] "dead at end of block" "maybe param" "temp"
      ref _tuple_expand_tmp_0[1849851]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "temp"
      (1849857 'move' _tuple_expand_tmp_0[1849851](1849861 '.' bounds[1848326] x0[1244883]))
      const-val coerce_tmp[1849864]:range(int(64),bounded,false)[1027003] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1849868 'move' coerce_tmp[1849864](1849866 'deref' _tuple_expand_tmp_0[1849851]))
      const-val ret_tmp[1911516]:domain(1,int(64),false)[1252786] "temp"
      (1848554 call chpl__buildDomainExpr[1244857] coerce_tmp[1849864] ret_tmp[1911516])
      (1911519 'move' call_tmp[1848549] ret_tmp[1911516])
      const-val reallocD[1848557]:domain(1,int(64),false)[1252786] "dead at end of block" "const" "insert auto destroy"
      const-val unaliasTemp[1911522]:domain(1,int(64),false)[1252786] "temp"
      (1911527 'move' unaliasTemp[1911522](1911523 call chpl__unalias[1697031] ret_tmp[1911516]))
      (1848559 'move' reallocD[1848557] unaliasTemp[1911522])
      const-val tmp[1848563]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val tmp[1848565]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val tmp[1848567]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val tmp[1848660]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val tmp[1848678]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1848680]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1848682 'move' call_tmp[1848680](1848685 call low[1510489] reallocD[1848557]))
      ref call_tmp[1848688]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
      (1848690 'move' call_tmp[1848688](1848693 call dom[1319786] this[1848286]))
      const-val call_tmp[1848696]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1849893]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1849897 'move' coerce_tmp[1849893](1849895 'deref' call_tmp[1848688]))
      val coerce_tmp[1849899]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1849904 'move' coerce_tmp[1849899] coerce_tmp[1849893])
      (1848698 'move' call_tmp[1848696](1848701 call dsiLow[1300625] coerce_tmp[1849899]))
      const-val call_tmp[1848704]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1848706 'move' call_tmp[1848704](1848709 call ==[435744] call_tmp[1848680] call_tmp[1848696]))
      (1848712 'move' tmp[1848678] call_tmp[1848704])
      (1848717 'move' tmp[1848660] tmp[1848678])
      (1848729 'move' tmp[1848567] tmp[1848660])
      val tmp[1848745]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1848747]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1848749]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1848751 'move' call_tmp[1848749] tmp[1848567])
      (1848756 'move' tmp[1848747] call_tmp[1848749])
      if tmp[1848747]
      {
        const-val tmp[1848763]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1848765]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1848767 'move' call_tmp[1848765](1848770 call stride[1842934] reallocD[1848557]))
        ref call_tmp[1848773]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
        (1848775 'move' call_tmp[1848773](1848778 call dom[1319786] this[1848286]))
        const-val call_tmp[1848781]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1849913]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1849917 'move' coerce_tmp[1849913](1849915 'deref' call_tmp[1848773]))
        val coerce_tmp[1849919]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1849924 'move' coerce_tmp[1849919] coerce_tmp[1849913])
        (1848783 'move' call_tmp[1848781](1848786 call dsiStride[1842972] coerce_tmp[1849919]))
        const-val call_tmp[1848789]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1848791 'move' call_tmp[1848789](1848794 call ==[435744] call_tmp[1848765] call_tmp[1848781]))
        (1848797 'move' tmp[1848763] call_tmp[1848789])
        (1848802 'move' tmp[1848745] tmp[1848763])
      }
      {
        (1848808 'move' tmp[1848745] 0)
      }
      (1848814 'move' tmp[1848565] tmp[1848745])
      val tmp[1848830]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1848832]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1848834]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1848836 'move' call_tmp[1848834] tmp[1848565])
      (1848841 'move' tmp[1848832] call_tmp[1848834])
      if tmp[1848832]
      {
        const-val tmp[1848848]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        ref call_tmp[1848850]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
        (1848852 'move' call_tmp[1848850](1848855 call dom[1319786] this[1848286]))
        const-val call_tmp[1848858]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1849932]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1849936 'move' coerce_tmp[1849932](1849934 'deref' call_tmp[1848850]))
        val coerce_tmp[1849938]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1849943 'move' coerce_tmp[1849938] coerce_tmp[1849932])
        (1848860 'move' call_tmp[1848858](1848863 call dsiNumIndices[1263823] coerce_tmp[1849938]))
        const-val call_tmp[1848866]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1848868 'move' call_tmp[1848866](1848871 call >[437788] call_tmp[1848858] 0))
        (1848874 'move' tmp[1848848] call_tmp[1848866])
        (1848879 'move' tmp[1848830] tmp[1848848])
      }
      {
        (1848885 'move' tmp[1848830] 0)
      }
      (1848891 'move' tmp[1848563] tmp[1848830])
      val tmp[1848907]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1848909]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1848911]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1848913 'move' call_tmp[1848911] tmp[1848563])
      (1848918 'move' tmp[1848909] call_tmp[1848911])
      if tmp[1848909]
      {
        const-val tmp[1848925]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1848927]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1848929 'move' call_tmp[1848927](1848932 call size[1435624] reallocD[1848557]))
        const-val call_tmp[1848935]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1848937 'move' call_tmp[1848935](1848940 call >[437788] call_tmp[1848927] 0))
        (1848943 'move' tmp[1848925] call_tmp[1848935])
        (1848948 'move' tmp[1848907] tmp[1848925])
      }
      {
        (1848954 'move' tmp[1848907] 0)
      }
      const-val call_tmp[1848960]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1848962 'move' call_tmp[1848960] tmp[1848907])
      if call_tmp[1848960]
      {
        ref call_tmp[1848982]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        ref _this_tmp_[1849955]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
        (1849957 'move' _this_tmp_[1849955](1848987 call sizesPerDim[1742220] this[1848286]))
        (1848984 'move' call_tmp[1848982](1849962 '.' _this_tmp_[1849955] x0[1256712]))
        const-val call_tmp[1848992]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const _chpl_forward_tgt[1849985]:domain(1,int(64),false)[1251123] "dead after last mention" "const" "maybe ref" "maybe type" "temp"
        (1849991 'move' _chpl_forward_tgt[1849985](1849988 call chpl_forwarding_expr5__value[1253895] reallocD[1848557]))
        val coerce_tmp[1849994]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1849999 'move' coerce_tmp[1849994] _chpl_forward_tgt[1849985])
        const-val ret_tmp[1912424]:range(int(64),bounded,false)[1027003] "temp"
        (1849000 call dsiDim[1258249] coerce_tmp[1849994] ret_tmp[1912424])
        (1912427 'move' call_tmp[1848992] ret_tmp[1912424])
        const-val call_tmp[1849002]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1849004 'move' call_tmp[1849002](1849007 call size[1035978] call_tmp[1848992]))
        (1849011 call =[435443] call_tmp[1848982] call_tmp[1849002])
        (1929888 call chpl__autoDestroy[1407763] call_tmp[1848992])
        ref call_tmp[1849016]:_ref(_ddata(unmanaged localesSignal?))[1317571] "dead after last mention" "maybe param" "temp"
        (1849018 'move' call_tmp[1849016](1849021 call data[1320395] this[1848286]))
        ref call_tmp[1849024]:_ref(_ddata(unmanaged localesSignal?))[1317571] "dead after last mention" "maybe param" "temp"
        (1849026 'move' call_tmp[1849024](1849029 call data[1320395] this[1848286]))
        val call_tmp[1849032]:localesSignal[92278] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1850006]:BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318187] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1850012 'move' coerce_tmp[1850006](1850008 'cast' BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318187] this[1848286]))
        ref call_tmp[1849040]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
        (1849042 'move' call_tmp[1849040](1849045 call dom[1319786] this[1848286]))
        const-val call_tmp[1849048]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1850017]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1850021 'move' coerce_tmp[1850017](1850019 'deref' call_tmp[1849040]))
        val coerce_tmp[1850023]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1850028 'move' coerce_tmp[1850023] coerce_tmp[1850017])
        (1849050 'move' call_tmp[1849048](1849053 call dsiNumIndices[1263823] coerce_tmp[1850023]))
        const-val call_tmp[1849056]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1849058 'move' call_tmp[1849056](1849061 call size[1435624] reallocD[1848557]))
        val call_tmp[1849064]:_ddata(unmanaged localesSignal?)[1317562] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1850490]:_ddata(unmanaged localesSignal?)[1317562] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1850494 'move' coerce_tmp[1850490](1850492 'deref' call_tmp[1849024]))
        const-val default_arg_subloc[1850514]:int(32)[95] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1850518 'move' default_arg_subloc[1850514](1850516 call _ddata_reallocate_default_subloc[1850497]))
        (1849066 'move' call_tmp[1849064](1849069 call _ddata_reallocate[1850032] coerce_tmp[1850490] call_tmp[1849048] call_tmp[1849056] default_arg_subloc[1850514]))
        (1849077 call =[1321079] call_tmp[1849016] call_tmp[1849064])
        (1849086 call initShiftedData[1323538] this[1848286])
      }
      {
        val call_tmp[1849088]:localesSignal[92278] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1850554]:BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318187] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1850560 'move' coerce_tmp[1850554](1850556 'cast' BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318187] this[1848286]))
        val call_tmp[1849104]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1850566]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1850572 'move' coerce_tmp[1850566](1850568 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256408] this[1848286]))
        val call_tmp[1849112]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
        (1849114 'move' call_tmp[1849112](1849117 call _value[1253027] reallocD[1848557]))
        val call_tmp[1849128]:domain(1,int(64),false)[1251123] "dead at end of block" "expr temp" "maybe param" "temp"
        (1849130 'move' call_tmp[1849128](1849133 call _value[1253027] reallocD[1848557]))
        val call_tmp[1849136]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] "dead at end of block" "insert auto destroy for explicit new" "maybe param" "temp"
        val new_temp[1850606]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] "dead at end of block" "temp"
        val default_arg_data[1850650]:_ddata(unmanaged localesSignal?)[1317562] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1850654 'move' default_arg_data[1850650](1850652 call _new_default_data[1324174]))
        const-val default_arg_externFreeFunc[1850676]:nil[42] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1850680 'move' default_arg_externFreeFunc[1850676](1850678 call _new_default_externFreeFunc[1324270]))
        (1850608 'move' new_temp[1850606](1850584 call _new[1324047] call_tmp[1849128] default_arg_data[1850650] 0 0 default_arg_externFreeFunc[1850676]))
        (1849138 'move' call_tmp[1849136] new_temp[1850606])
        val copy[1849154]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] "dead at end of block" "insert auto destroy"
        (1849156 'move' copy[1849154](1850684 call chpl__initCopy[1324319] call_tmp[1849136]))
        ref call_tmp[1849160]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
        (1849162 'move' call_tmp[1849160](1849165 call dom[1319786] this[1848286]))
        ref call_tmp[1849168]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "maybe param" "temp"
        val coerce_tmp[1850688]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1850692 'move' coerce_tmp[1850688](1850690 'deref' call_tmp[1849160]))
        val coerce_tmp[1850694]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1850699 'move' coerce_tmp[1850694] coerce_tmp[1850688])
        (1849170 'move' call_tmp[1849168](1849173 call ranges[1251533] coerce_tmp[1850694]))
        const-val call_tmp[1849176]:domain(1,int(64),false)[1252786] "dead at end of block" "maybe param" "temp"
        ref _tuple_expand_tmp_0[1850703]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "temp"
        (1850709 'move' _tuple_expand_tmp_0[1850703](1850713 '.' call_tmp[1849168] x0[1244883]))
        const-val coerce_tmp[1850718]:range(int(64),bounded,false)[1027003] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1850722 'move' coerce_tmp[1850718](1850720 'deref' _tuple_expand_tmp_0[1850703]))
        const-val ret_tmp[1918786]:domain(1,int(64),false)[1252786] "temp"
        (1849181 call this[1844078] reallocD[1848557] coerce_tmp[1850718] ret_tmp[1918786])
        (1918789 'move' call_tmp[1849176] ret_tmp[1918786])
        const-val keep[1849184]:domain(1,int(64),false)[1252786] "dead at end of block" "insert auto destroy"
        const-val unaliasTemp[1918792]:domain(1,int(64),false)[1252786] "temp"
        (1918797 'move' unaliasTemp[1918792](1918793 call chpl__unalias[1697031] ret_tmp[1918786]))
        (1849186 'move' keep[1849184] unaliasTemp[1918792])
        {
          ref i_this[1961662]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812] "ref to immutable" "temp"
          (1961666 'move' i_this[1961662](1961664 'set reference' keep[1849184]))
          const-val copy[1962092]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] "concurrently accessed" "const"
          (1962095 'move' copy[1962092](1962098 call chpl__initCopy[1324319] copy[1849154]))
          const-val this[1962111]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] "concurrently accessed" "const"
          (1962114 'move' this[1962111](1962117 call chpl__initCopy[1327503] this[1848286]))
          {
            val ret[1961669]:nothing[7] "dead after last mention" "RVV" "temp"
            {
              val call_tmp[1961672]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
              (1961674 'move' call_tmp[1961672](1961677 call _value[1253027] i_this[1961662]))
              val coerce_tmp[1961679]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "concurrently accessed" "insert auto destroy" "temp"
              (1961681 'move' coerce_tmp[1961679] call_tmp[1961672])
              const-val default_arg_tasksPerLocale[1961684]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              (1961686 'move' default_arg_tasksPerLocale[1961684](1961689 call these_default_tasksPerLocale[1315258] coerce_tmp[1961679]))
              const-val default_arg_ignoreRunning[1961691]:bool[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              (1961693 'move' default_arg_ignoreRunning[1961691](1961696 call these_default_ignoreRunning[1315289] coerce_tmp[1961679]))
              const-val default_arg_minIndicesPerTask[1961698]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              (1961700 'move' default_arg_minIndicesPerTask[1961698](1961703 call these_default_minIndicesPerTask[1315320] coerce_tmp[1961679]))
              val default_arg_offset[1961705]:1*int(64)[1256714] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
              const-val ret_tmp[1961707]:1*int(64)[1256714] "temp"
              (1961710 call these_default_offset[1315351] coerce_tmp[1961679] ret_tmp[1961707])
              (1961713 'move' default_arg_offset[1961705] ret_tmp[1961707])
              {
                const-ref i_offset[1961717]:1*int(64)[1256714] "temp"
                (1961719 'move' i_offset[1961717](1961721 'set reference' default_arg_offset[1961705]))
                {
                  val ret[1961724]:nothing[7] "dead after last mention" "RVV" "temp"
                  const-val numTasks[1961726]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                  val tmp[1961728]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
                  const-val tmp[1961730]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[1961732]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1961734 'move' call_tmp[1961732](1961737 call ==[435744] default_arg_tasksPerLocale[1961684] 0))
                  (1961740 'move' tmp[1961730] call_tmp[1961732])
                  if tmp[1961730]
                  {
                    const-val tmp[1961745]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
                    const-val call_tmp[1961747]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1961749]:locale[28] "temp"
                    (1961752 call here[90438] ret_tmp[1961749])
                    (1961754 'move' call_tmp[1961747] ret_tmp[1961749])
                    (1961757 'move' tmp[1961745](1961760 call maxTaskPar[90545] call_tmp[1961747]))
                    (1961762 'move' tmp[1961728] tmp[1961745])
                    (1961766 call chpl__autoDestroy[1601737] call_tmp[1961747])
                  }
                  {
                    (1961769 'move' tmp[1961728] default_arg_tasksPerLocale[1961684])
                  }
                  (1961773 'move' numTasks[1961726] tmp[1961728])
                  const-val tmp[1961776]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
                  val tmp[1961778]:2*int(64)[1040245] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                  const-val tmp[1961780]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[1961782]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1961784 'move' call_tmp[1961782](1961786 'task_get_serial'))
                  (1961787 'move' tmp[1961780] call_tmp[1961782])
                  if tmp[1961780]
                  {
                    const-val tmp[1961792]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                    const-val ret_tmp[1961794]:2*int(64)[1040245] "temp"
                    (1961797 call _build_tuple[1040203] 1 -1 ret_tmp[1961794])
                    (1961801 'move' tmp[1961792] ret_tmp[1961794])
                    (1961804 'move' tmp[1961778] tmp[1961792])
                  }
                  {
                    const-val tmp[1961808]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                    ref call_tmp[1961810]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "maybe param" "temp"
                    (1961812 'move' call_tmp[1961810](1961815 call ranges[1251533] coerce_tmp[1961679]))
                    const-val ret_tmp[1961817]:2*int(64)[1040245] "temp"
                    (1961820 call _computeChunkStuff[1381155] numTasks[1961726] default_arg_ignoreRunning[1961691] default_arg_minIndicesPerTask[1961698] call_tmp[1961810] ret_tmp[1961817])
                    (1961826 'move' tmp[1961808] ret_tmp[1961817])
                    (1961829 'move' tmp[1961778] tmp[1961808])
                  }
                  (1961833 '=' tmp[1961776] tmp[1961778])
                  (1961836 'noop')
                  1
                  ref call_tmp[1961838]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                  (1961840 'move' call_tmp[1961838](1961842 '.' tmp[1961776] x0[1040241]))
                  const-val numChunks[1961845]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                  const-val coerce_tmp[1961847]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                  (1961849 'move' coerce_tmp[1961847](1961851 'deref' call_tmp[1961838]))
                  (1961853 '=' numChunks[1961845] coerce_tmp[1961847])
                  (1961856 'noop')
                  ref call_tmp[1961857]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                  (1961859 'move' call_tmp[1961857](1961861 '.' tmp[1961776] x1[1040243]))
                  const-val parDim[1961864]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                  const-val coerce_tmp[1961866]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                  (1961868 'move' coerce_tmp[1961866](1961870 'deref' call_tmp[1961857]))
                  (1961872 '=' parDim[1961864] coerce_tmp[1961866])
                  (1961875 'noop')
                  const-val call_tmp[1961876]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1961878 'move' call_tmp[1961876](1961881 call <=[437128] numChunks[1961845] 1))
                  const-val call_tmp[1961884]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1961886 'move' call_tmp[1961884] call_tmp[1961876])
                  if call_tmp[1961884]
                  {
                    {
                      val _indexOfInterest[1961892]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1961894]:_ic_these_help_DefaultRectangularDom_1_int64_t_F[1383595] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1961896]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1383601] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1961898]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1383601] "temp"
                      (1961901 call these_help[1383178] coerce_tmp[1961679] ret_tmp[1961898])
                      (1961904 'move' call_tmp[1961896] ret_tmp[1961898])
                      (1961907 'move' _iterator[1961894](1961910 call _getIterator[1383610] call_tmp[1961896]))
                      {
                        val ret[2041672]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1383601] "dead after last mention" "RVV" "temp"
                        val _indexOfInterest[2041674]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[2041676]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
                        ref call_tmp[2041678]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
                        ref _this_tmp_[2041680]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "temp"
                        const-val this[2041934]:domain(1,int(64),false)[1251123] "temp"
                        (2041939 'move' this[2041934](2041936 '.v' _iterator[1961894] F0_this[2134554]))
                        (2041682 'move' _this_tmp_[2041680](2041685 call ranges[1251533] this[2041934]))
                        (2041687 'move' call_tmp[2041678](2041689 '.' _this_tmp_[2041680] x0[1244883]))
                        (2041692 'move' _iterator[2041676](2041695 call _getIterator[1095509] call_tmp[2041678]))
                        {
                          val ret[2041698]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
                          const-val _return_tmp_[2041700]:bool[10] "dead after last mention" "temp"
                          const-val this[2041702]:range(int(64),bounded,false)[1027003] "temp"
                          (2041704 'move' this[2041702](2041706 '.v' _iterator[2041676] F0_this[2113071]))
                          (2041709 'move' _return_tmp_[2041700](2041712 call checkIfIterWillOverflow[1096003] this[2041702] 1))
                          val i[2041715]:int(64)[13] "dead at end of block" "insert auto destroy"
                          val call_tmp[2041717]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (2041719 'move' i[2041715] 0)
                          ref call_tmp[2041722]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
                          const-val this[2041724]:range(int(64),bounded,false)[1027003] "temp"
                          (2041726 'move' this[2041724](2041728 '.v' _iterator[2041676] F0_this[2113071]))
                          (2041731 'move' call_tmp[2041722](2041734 call _low[1028641] this[2041724]))
                          const-val start[2041736]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                          const-val coerce_tmp[2041738]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                          (2041740 'move' coerce_tmp[2041738](2041742 'deref' call_tmp[2041722]))
                          (2041744 '=' start[2041736] coerce_tmp[2041738])
                          (2041747 'noop')
                          ref call_tmp[2041748]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
                          const-val this[2041750]:range(int(64),bounded,false)[1027003] "temp"
                          (2041752 'move' this[2041750](2041754 '.v' _iterator[2041676] F0_this[2113071]))
                          (2041757 'move' call_tmp[2041748](2041760 call _high[1028849] this[2041750]))
                          const end[2041762]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                          const-val coerce_tmp[2041764]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                          (2041766 'move' coerce_tmp[2041764](2041768 'deref' call_tmp[2041748]))
                          (2041770 '=' end[2041762] coerce_tmp[2041764])
                          (2041773 'noop')
                          CForLoop[2041774] order-independent
                          {
                            const-val yret[2041789]:int(64)[13] "dead after last mention" "YVV" "temp"
                            const-val call_tmp[2041791]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val this[2041793]:range(int(64),bounded,false)[1027003] "temp"
                            (2041795 'move' this[2041793](2041797 '.v' _iterator[2041676] F0_this[2113071]))
                            (2041800 'move' call_tmp[2041791](2041803 call chpl_intToIdx[1028669] this[2041793] i[2041715]))
                            (2041806 'move' yret[2041789] call_tmp[2041791])
                            const-val _yieldedIndex[2041809]:int(64)[13] "temp"
                            (2041811 'move' _yieldedIndex[2041809] call_tmp[2041791])
                            {
                              const-val i[2041815]:int(64)[13] "const" "index var" "insert auto destroy"
                              (2041817 'move' i[2041815] _yieldedIndex[2041809])
                              const-val yret[2041820]:int(64)[13] "dead after last mention" "YVV" "temp"
                              (2041822 'move' yret[2041820] _yieldedIndex[2041809])
                              const-val _yieldedIndex[2041844]:int(64)[13] "temp"
                              (2041932 'move' _yieldedIndex[2041844] _yieldedIndex[2041809])
                              {
                                const-val i[2041846]:int(64)[13] "const" "index var" "insert auto destroy"
                                (2041848 'move' i[2041846] _yieldedIndex[2041844])
                                {
                                  const-val yret[2041852]:int(64)[13] "dead after last mention" "YVV" "temp"
                                  (2041854 'move' yret[2041852] i[2041846])
                                  const-val _indexOfInterest[2041857]:int(64)[13] "dead at end of block" "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                  (2041859 'move' _indexOfInterest[2041857] yret[2041852])
                                  {
                                    const-val i[2041863]:int(64)[13] "const" "index var" "insert auto destroy"
                                    (2041865 'move' i[2041863] _indexOfInterest[2041857])
                                    const-val yret[2041868]:int(64)[13] "dead after last mention" "YVV" "temp"
                                    (2041870 'move' yret[2041868] i[2041863])
                                    const-val i[2041873]:int(64)[13] "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy"
                                    (2041875 'move' i[2041873] yret[2041868])
                                    {
                                      ref dst[2041879]:_ref(localesSignal)[1316692] "dead at end of block" "ref var"
                                      ref call_tmp[2041881]:_ref(localesSignal)[1316692] "dead at end of block" "maybe param" "temp"
                                      val coerce_tmp[2041883]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                      (2041885 'move' coerce_tmp[2041883] copy[1962092])
                                      val coerce_tmp[2041888]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                      (2041890 'move' coerce_tmp[2041888] copy[1962092])
                                      val coerce_tmp[2041893]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                      (2041895 'move' coerce_tmp[2041893] copy[1962092])
                                      (2041898 'move' call_tmp[2041881](2041901 call dsiAccess[1343972] coerce_tmp[2041883] i[2041873]))
                                      (2041904 'move' dst[2041879] call_tmp[2041881])
                                      ref src[2041907]:_ref(localesSignal)[1316692] "dead at end of block" "const" "ref var"
                                      ref call_tmp[2041909]:_ref(localesSignal)[1316692] "dead at end of block" "maybe param" "temp"
                                      (2041911 'move' call_tmp[2041909](2041914 call dsiAccess[1344160] this[1962111] i[2041873]))
                                      (2041917 'move' src[2041907] call_tmp[2041909])
                                      (2041920 '=' dst[2041879] src[2041907])
                                      val optinfo[2041923]:int(64)[13] "no codegen" "temp" "forall no task private"
                                      (2041925 'optimization info' optinfo[2041923])
                                    }
                                    label _continueLabel[2041927]
                                  }
                                }
                                label _continueLabel[2041929]
                              }
                            }
                            {
                              (2041776 '=' i[2041715] coerce_tmp[2041738])
                            }
                            {
                              (2041780 '<=' i[2041715] end[2041762])
                            }
                            {
                              val call_tmp[2041784]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              (2041786 '+=' i[2041715] 1)
                            }
                          }
                          label _endthese[2041835]
                        }
                        (2041838 call _freeIterator[1102195] _iterator[2041676])
                        label _endthese_help[2041840]
                      }
                      label _breakLabel[1961962]
                      (1961965 call _freeIterator[1383783] _iterator[1961894])
                    }
                  }
                  {
                    {
                      const-val tmpIter[1961969]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe ref" "no copy" "temp"
                      const-val call_tmp[1961971]:range(int(64),boundedLow,false)[1087754] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
                      const-val ret_tmp[1961973]:range(int(64),boundedLow,false)[1087754] "temp"
                      (1961976 call chpl_build_low_bounded_range[1087147] 0 ret_tmp[1961973])
                      (1961979 'move' call_tmp[1961971] ret_tmp[1961973])
                      const-val ret_tmp[1961982]:range(int(64),bounded,false)[1027003] "temp"
                      (1961985 call #[1088114] call_tmp[1961971] numChunks[1961845] ret_tmp[1961982])
                      (1961989 'move' tmpIter[1961969] ret_tmp[1961982])
                      {
                        const _coforallCount[1961993]:_EndCount(AtomicT(int(64)),int(64))[945532] "dead after last mention" "concurrently accessed" "const" "end count" "temp"
                        (1961995 'move' _coforallCount[1961993](1961998 call _endCountAlloc[1228107]))
                        const-val numTasks[1961999]:int(64)[13] "dead at end of block" "temp"
                        (1962001 'move' numTasks[1961999](1962004 call size[1035978] tmpIter[1961969]))
                        (1962007 call _upEndCount[1228350] _coforallCount[1961993] numTasks[1961999])
                        (1962011 call chpl_resetTaskSpawn[1229432] numTasks[1961999])
                        val _indexOfInterest[1962013]:int(64)[13] "dead at end of block" "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[1962015]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
                        (1962017 'move' _iterator[1962015](1962020 call _getIterator[1095509] tmpIter[1961969]))
                        {
                          val ret[2041942]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
                          const-val _return_tmp_[2041944]:bool[10] "dead after last mention" "temp"
                          const-val this[2042062]:range(int(64),bounded,false)[1027003] "temp"
                          (2042067 'move' this[2042062](2042064 '.v' _iterator[1962015] F0_this[2113071]))
                          (2041946 'move' _return_tmp_[2041944](2041949 call checkIfIterWillOverflow[1096003] this[2042062] 1))
                          val i[2041952]:int(64)[13] "dead at end of block" "insert auto destroy"
                          val call_tmp[2041954]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (2041956 'move' i[2041952] 0)
                          ref call_tmp[2041959]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
                          const-val this[2042069]:range(int(64),bounded,false)[1027003] "temp"
                          (2042074 'move' this[2042069](2042071 '.v' _iterator[1962015] F0_this[2113071]))
                          (2041961 'move' call_tmp[2041959](2041964 call _low[1028641] this[2042069]))
                          const-val start[2041966]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                          const-val coerce_tmp[2041968]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                          (2041970 'move' coerce_tmp[2041968](2041972 'deref' call_tmp[2041959]))
                          (2041974 '=' start[2041966] coerce_tmp[2041968])
                          (2041977 'noop')
                          ref call_tmp[2041978]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
                          const-val this[2042076]:range(int(64),bounded,false)[1027003] "temp"
                          (2042081 'move' this[2042076](2042078 '.v' _iterator[1962015] F0_this[2113071]))
                          (2041980 'move' call_tmp[2041978](2041983 call _high[1028849] this[2042076]))
                          const end[2041985]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                          const-val coerce_tmp[2041987]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                          (2041989 'move' coerce_tmp[2041987](2041991 'deref' call_tmp[2041978]))
                          (2041993 '=' end[2041985] coerce_tmp[2041987])
                          (2041996 'noop')
                          CForLoop[2041997]
                          {
                            const-val yret[2042012]:int(64)[13] "dead after last mention" "YVV" "temp"
                            const-val call_tmp[2042014]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val this[2042083]:range(int(64),bounded,false)[1027003] "temp"
                            (2042088 'move' this[2042083](2042085 '.v' _iterator[1962015] F0_this[2113071]))
                            (2042016 'move' call_tmp[2042014](2042019 call chpl_intToIdx[1028669] this[2042083] i[2041952]))
                            (2042022 'move' yret[2042012] call_tmp[2042014])
                            const-val _yieldedIndex[2042036]:int(64)[13] "coforall index var" "temp"
                            (2042060 'move' _yieldedIndex[2042036] call_tmp[2042014])
                            {
                              const-val chunk[2042038]:int(64)[13] "coforall index var" "const" "index var" "insert auto destroy"
                              (2042040 'move' chunk[2042038] _yieldedIndex[2042036])
                              val dummy_error[2042043]:Error[167984] "concurrently accessed" "error variable" "temp"
                              val _args_forcoforall_fn[2218934]:_class_localscoforall_fn[2218912] "temp"
                              (2218938 'move' _args_forcoforall_fn[2218934](2218936 'stack allocate class' _class_localscoforall_fn[2218912]))
                              (2218940 '.=' _args_forcoforall_fn[2218934] _0_parDim[2218915] parDim[1961864])
                              (2218944 '.=' _args_forcoforall_fn[2218934] _1_numChunks[2218917] numChunks[1961845])
                              (2218948 '.=' _args_forcoforall_fn[2218934] _2_coerce_tmp[2218919] coerce_tmp[1961679])
                              (2218952 '.=' _args_forcoforall_fn[2218934] _3_chunk[2218921] chunk[2042038])
                              (2218956 '.=' _args_forcoforall_fn[2218934] _4__coforallCount[2218923] _coforallCount[1961993])
                              ref tmp[2218960]:1*int(64)[1256714] "temp"
                              (2218964 'move' tmp[2218960](2218962 'set reference' default_arg_offset[1961705]))
                              (2218966 '.=' _args_forcoforall_fn[2218934] _6_default_arg_offset[2218927] tmp[2218960])
                              (2218970 '.=' _args_forcoforall_fn[2218934] _7_copy[2218929] copy[1962092])
                              (2218974 '.=' _args_forcoforall_fn[2218934] _8_this[2218931] this[1962111])
                              val _args_vforcoforall_fn[2218978]:c_void_ptr[149] "temp"
                              (2218982 'move' _args_vforcoforall_fn[2218978](2218980 'cast_to_void_star' _args_forcoforall_fn[2218934]))
                              val _args_sizecoforall_fn[2218984]:int(64)[13] "temp"
                              (2218988 'move' _args_sizecoforall_fn[2218984](2218986 'sizeof_bundle' _class_localscoforall_fn[2218912]))
                              ref _taskListcoforall_fn[2218990]:c_void_ptr[149] "temp"
                              (2218995 'move' _taskListcoforall_fn[2218990](2218992 '.' _coforallCount[1961993] taskList[12712]))
                              val _taskListNodecoforall_fn[2218997]:int(64)[13] "temp"
                              (2219001 'move' _taskListNodecoforall_fn[2218997](2218999 '_wide_get_node' _coforallCount[1961993]))
                              (2219100 call wrapcoforall_fn[2219003] _taskListcoforall_fn[2218990] _taskListNodecoforall_fn[2218997] _args_vforcoforall_fn[2218978] _args_sizecoforall_fn[2218984] _args_forcoforall_fn[2218934])
                              {
                              }
                              label _continueLabel[2042057]
                            }
                            {
                              (2041999 '=' i[2041952] coerce_tmp[2041968])
                            }
                            {
                              (2042003 '<=' i[2041952] end[2041985])
                            }
                            {
                              val call_tmp[2042007]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              (2042009 '+=' i[2041952] 1)
                            }
                          }
                          label _endthese[2042032]
                        }
                        label _breakLabel[1962044]
                        val error[1962046]:Error[167984] "error variable" "temp"
                        (1962048 'move' error[1962046] nil[44])
                        (1962052 call _waitEndCount[1235226] _coforallCount[1961993] numTasks[1961999] error[1962046])
                        val errorExists[2226032]:bool[10] "temp"
                        (2226037 'move' errorExists[2226032](2226034 '!=' error[1962046] nil[44]))
                        if errorExists[2226032]
                        {
                          (1962060 call chpl_propagate_error[170518] error[1962046])
                        }
                        (1962064 call _endCountFree[1234049] _coforallCount[1961993])
                        (1962067 call _freeIterator[1102195] _iterator[1962015])
                      }
                      (1962070 call chpl__autoDestroy[1407763] tmpIter[1961969])
                      (1962073 call chpl__autoDestroy[1680875] call_tmp[1961971])
                    }
                  }
                  (1962077 call chpl__autoDestroy[1674803] tmp[1961776])
                  label _endthese[1962079]
                }
              }
              (1962082 call chpl_after_forall_fence[13071])
              (1962084 call chpl__autoDestroy[1697253] default_arg_offset[1961705])
              label _breakLabel[1962086]
            }
            label _endthese[1962088]
          }
          val coerce_tmp[1962120]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1962122 'move' coerce_tmp[1962120](1962124 'cast' object[22] this[1962111]))
          (1962128 call chpl__autoDestroy[1351354] coerce_tmp[1962120])
          val coerce_tmp[1962101]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1962103 'move' coerce_tmp[1962101](1962105 'cast' object[22] copy[1962092]))
          (1962109 call chpl__autoDestroy[1846254] coerce_tmp[1962101])
        }
        (1930708 call chpl_after_forall_fence[13071])
        val call_tmp[1849238]:localesSignal[92278] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1850887]:BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318187] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1850893 'move' coerce_tmp[1850887](1850889 'cast' BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318187] this[1848286]))
        ref call_tmp[1849481]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
        (1849483 'move' call_tmp[1849481](1849486 call off[1319748] this[1848286]))
        ref call_tmp[1849489]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1850904]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1850909 'move' coerce_tmp[1850904] copy[1849154])
        (1849491 'move' call_tmp[1849489](1849494 call off[1319748] coerce_tmp[1850904]))
        (1849498 call =[1847029] call_tmp[1849481] call_tmp[1849489])
        ref call_tmp[1849503]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
        (1849505 'move' call_tmp[1849503](1849508 call blk[1319894] this[1848286]))
        ref call_tmp[1849511]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1850914]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1850919 'move' coerce_tmp[1850914] copy[1849154])
        (1849513 'move' call_tmp[1849511](1849516 call blk[1319894] coerce_tmp[1850914]))
        (1849520 call =[1847029] call_tmp[1849503] call_tmp[1849511])
        ref call_tmp[1849525]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
        (1849527 'move' call_tmp[1849525](1849530 call str[1319830] this[1848286]))
        ref call_tmp[1849533]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1850924]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1850929 'move' coerce_tmp[1850924] copy[1849154])
        (1849535 'move' call_tmp[1849533](1849538 call str[1319830] coerce_tmp[1850924]))
        (1849542 call =[1847029] call_tmp[1849525] call_tmp[1849533])
        ref call_tmp[1849547]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        (1849549 'move' call_tmp[1849547](1849552 call factoredOffs[1320190] this[1848286]))
        ref call_tmp[1849555]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1850934]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1850939 'move' coerce_tmp[1850934] copy[1849154])
        (1849557 'move' call_tmp[1849555](1849560 call factoredOffs[1320190] coerce_tmp[1850934]))
        const-val coerce_tmp[1850942]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1850946 'move' coerce_tmp[1850942](1850944 'deref' call_tmp[1849555]))
        (1849564 call =[435443] call_tmp[1849547] coerce_tmp[1850942])
        (1849573 call dsiDestroyArr[1833299] this[1848286] 0)
        ref call_tmp[1849577]:_ref(_ddata(unmanaged localesSignal?))[1317571] "dead after last mention" "maybe param" "temp"
        (1849579 'move' call_tmp[1849577](1849582 call data[1320395] this[1848286]))
        ref call_tmp[1849585]:_ref(_ddata(unmanaged localesSignal?))[1317571] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1850951]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1850956 'move' coerce_tmp[1850951] copy[1849154])
        (1849587 'move' call_tmp[1849585](1849590 call data[1320395] coerce_tmp[1850951]))
        val coerce_tmp[1850959]:_ddata(unmanaged localesSignal?)[1317562] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1850963 'move' coerce_tmp[1850959](1850961 'deref' call_tmp[1849585]))
        (1849594 call =[1321079] call_tmp[1849577] coerce_tmp[1850959])
        val call_tmp[1849637]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
        (1849639 'move' call_tmp[1849637](1849642 call _value[1253027] reallocD[1848557]))
        {
          const-val call_tmp[1849686]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (1849688 'move' call_tmp[1849686](1849691 call size[1435624] reallocD[1848557]))
          const-val call_tmp[1849694]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1849696 'move' call_tmp[1849694](1849699 call >[437788] call_tmp[1849686] 0))
          const-val call_tmp[1849702]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1849704 'move' call_tmp[1849702] call_tmp[1849694])
          if call_tmp[1849702]
          {
            ref call_tmp[1849711]:_ref(_ddata(unmanaged localesSignal?))[1317571] "dead after last mention" "maybe param" "temp"
            (1849713 'move' call_tmp[1849711](1849716 call shiftedData[1323887] this[1848286]))
            ref call_tmp[1849719]:_ref(_ddata(unmanaged localesSignal?))[1317571] "dead after last mention" "maybe param" "temp"
            val coerce_tmp[1850984]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1850989 'move' coerce_tmp[1850984] copy[1849154])
            (1849721 'move' call_tmp[1849719](1849724 call shiftedData[1323887] coerce_tmp[1850984]))
            val coerce_tmp[1850992]:_ddata(unmanaged localesSignal?)[1317562] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1850996 'move' coerce_tmp[1850992](1850994 'deref' call_tmp[1849719]))
            (1849728 call =[1321079] call_tmp[1849711] coerce_tmp[1850992])
          }
        }
        (1849736 call chpl__delete[1850999] copy[1849154])
        (1929893 call chpl__autoDestroy[1697012] keep[1849184])
        (1929896 call chpl__autoDestroy[1407763] coerce_tmp[1850718])
      }
      (1929900 call chpl__autoDestroy[1697012] reallocD[1848557])
      (1929903 call chpl__autoDestroy[1407763] coerce_tmp[1849864])
    }
    label _end_dsiReallocate[1849741]
    (1849743 return _void[55])
  }
  function [domain(1,int(64),false)] real(64)[1358944].dsiReallocate[1851981](const in arg this[1851985]:[domain(1,int(64),false)] real(64)[1358944], const  ref arg bounds[1852025]:1*range(int(64),bounded,false)[1244885]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "ignore transfer errors" "virtual" "no return value for void"
  {
    val actuallyResizing[1852051]:bool[10] "dead at end of block" "insert auto destroy"
    (1852053 'move' actuallyResizing[1852051] 0)
    {
      val _indexOfInterest[1852058]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[1852060]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
      const-val call_tmp[1852062]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1918742]:range(int(64),bounded,false)[1027003] "temp"
      (1852067 call indices[1842671] bounds[1852025] ret_tmp[1918742])
      (1918745 'move' call_tmp[1852062] ret_tmp[1918742])
      (1852070 'move' _iterator[1852060](1852073 call _getIterator[1095509] call_tmp[1852062]))
      {
        val ret[2028735]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
        const-val _return_tmp_[2028737]:bool[10] "dead after last mention" "temp"
        const-val this[2028921]:range(int(64),bounded,false)[1027003] "temp"
        (2028926 'move' this[2028921](2028923 '.v' _iterator[1852060] F0_this[2113071]))
        (2028739 'move' _return_tmp_[2028737](2028742 call checkIfIterWillOverflow[1096003] this[2028921] 1))
        val i[2028745]:int(64)[13] "dead at end of block" "insert auto destroy"
        val call_tmp[2028747]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        (2028749 'move' i[2028745] 0)
        ref call_tmp[2028752]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
        const-val this[2028928]:range(int(64),bounded,false)[1027003] "temp"
        (2028933 'move' this[2028928](2028930 '.v' _iterator[1852060] F0_this[2113071]))
        (2028754 'move' call_tmp[2028752](2028757 call _low[1028641] this[2028928]))
        const-val start[2028759]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[2028761]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (2028763 'move' coerce_tmp[2028761](2028765 'deref' call_tmp[2028752]))
        (2028767 '=' start[2028759] coerce_tmp[2028761])
        (2028770 'noop')
        ref call_tmp[2028771]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
        const-val this[2028935]:range(int(64),bounded,false)[1027003] "temp"
        (2028940 'move' this[2028935](2028937 '.v' _iterator[1852060] F0_this[2113071]))
        (2028773 'move' call_tmp[2028771](2028776 call _high[1028849] this[2028935]))
        const end[2028778]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[2028780]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (2028782 'move' coerce_tmp[2028780](2028784 'deref' call_tmp[2028771]))
        (2028786 '=' end[2028778] coerce_tmp[2028780])
        (2028789 'noop')
        CForLoop[2028790]
        {
          const-val yret[2028805]:int(64)[13] "dead after last mention" "YVV" "temp"
          const-val call_tmp[2028807]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val this[2028942]:range(int(64),bounded,false)[1027003] "temp"
          (2028947 'move' this[2028942](2028944 '.v' _iterator[1852060] F0_this[2113071]))
          (2028809 'move' call_tmp[2028807](2028812 call chpl_intToIdx[1028669] this[2028942] i[2028745]))
          (2028815 'move' yret[2028805] call_tmp[2028807])
          const-val _yieldedIndex[2028829]:int(64)[13] "temp"
          (2028919 'move' _yieldedIndex[2028829] call_tmp[2028807])
          {
            const-val i[2028831]:int(64)[13] "const" "index var" "insert auto destroy"
            (2028833 'move' i[2028831] _yieldedIndex[2028829])
            {
              ref call_tmp[2028837]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "reference to a const" "temp"
              (2028839 'move' call_tmp[2028837](2028842 call this[1382848] bounds[1852025] i[2028831]))
              ref call_tmp[2028845]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
              (2028847 'move' call_tmp[2028845](2028850 call dom[1360329] this[1851985]))
              const-val call_tmp[2028852]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              val coerce_tmp[2028854]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2028856 'move' coerce_tmp[2028854](2028858 'deref' call_tmp[2028845]))
              val coerce_tmp[2028860]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2028862 'move' coerce_tmp[2028860] coerce_tmp[2028854])
              const-val ret_tmp[2028865]:range(int(64),bounded,false)[1027003] "temp"
              (2028868 call dsiDim[1258236] coerce_tmp[2028860] i[2028831] ret_tmp[2028865])
              (2028872 'move' call_tmp[2028852] ret_tmp[2028865])
              const-val call_tmp[2028875]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[2028877]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2028879 'move' coerce_tmp[2028877](2028881 'deref' call_tmp[2028837]))
              (2028883 'move' call_tmp[2028875](2028886 call !=[1842744] coerce_tmp[2028877] call_tmp[2028852]))
              const-val call_tmp[2028889]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2028891 'move' call_tmp[2028889] call_tmp[2028875])
              if call_tmp[2028889]
              {
                (2028897 call =[435290] actuallyResizing[1852051] 1)
                (2028901 call chpl__autoDestroy[1407763] coerce_tmp[2028877])
                (2028904 call chpl__autoDestroy[1407763] call_tmp[2028852])
                break _breakLabel[1852151] _breakLabel[1852151]
              }
              (2028910 call chpl__autoDestroy[1407763] coerce_tmp[2028877])
              (2028913 call chpl__autoDestroy[1407763] call_tmp[2028852])
            }
            label _continueLabel[2028915]
          }
          {
            (2028792 '=' i[2028745] coerce_tmp[2028761])
          }
          {
            (2028796 '<=' i[2028745] end[2028778])
          }
          {
            val call_tmp[2028800]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (2028802 '+=' i[2028745] 1)
          }
        }
        label _endthese[2028825]
      }
      label _breakLabel[1852151]
      (1929922 call _freeIterator[1102195] _iterator[1852060])
      (1929924 call chpl__autoDestroy[1407763] call_tmp[1852062])
    }
    const-val call_tmp[1852153]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1852155 'move' call_tmp[1852153](1852158 call ![7494] actuallyResizing[1852051]))
    const-val call_tmp[1852160]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1852162 'move' call_tmp[1852160] call_tmp[1852153])
    if call_tmp[1852160]
    {
      gotoReturn _end_dsiReallocate[1853440] _end_dsiReallocate[1853440]
    }
    val call_tmp[1852172]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val coerce_tmp[1853475]:BaseRectangularArr(1,int(64),false,real(64))[1358730] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (1853481 'move' coerce_tmp[1853475](1853477 'cast' BaseRectangularArr(1,int(64),false,real(64))[1358730] this[1851985]))
    const-val call_tmp[1852207]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (1852209 'move' call_tmp[1852207](1852211 '_wide_get_locale' this[1851985]))
    const-val call_tmp[1852213]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1906790]:locale[28] "temp"
    (1852218 call chpl_localeID_to_locale[92852] call_tmp[1852207] ret_tmp[1906790])
    (1906793 'move' call_tmp[1852213] ret_tmp[1906790])
    const-val call_tmp[1852220]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1906622]:locale[28] "temp"
    (1852225 call here[90438] ret_tmp[1906622])
    (1906625 'move' call_tmp[1852220] ret_tmp[1906622])
    const-val call_tmp[1852226]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1852228 'move' call_tmp[1852226](1852231 call !=[783099] call_tmp[1852213] call_tmp[1852220]))
    const-val call_tmp[1852234]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1852236 'move' call_tmp[1852234] call_tmp[1852226])
    if call_tmp[1852234]
    {
      (1852244 call halt[154111] "internal error: dsiReallocate() can only be called from an array's home locale")
    }
    (1929930 call chpl__autoDestroy[1601737] call_tmp[1852220])
    (1929927 call chpl__autoDestroy[1601737] call_tmp[1852213])
    {
      const-val call_tmp[1852248]:domain(1,int(64),false)[1252786] "dead at end of block" "maybe param" "temp"
      ref _tuple_expand_tmp_0[1853550]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "temp"
      (1853556 'move' _tuple_expand_tmp_0[1853550](1853560 '.' bounds[1852025] x0[1244883]))
      const-val coerce_tmp[1853563]:range(int(64),bounded,false)[1027003] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1853567 'move' coerce_tmp[1853563](1853565 'deref' _tuple_expand_tmp_0[1853550]))
      const-val ret_tmp[1911530]:domain(1,int(64),false)[1252786] "temp"
      (1852253 call chpl__buildDomainExpr[1244857] coerce_tmp[1853563] ret_tmp[1911530])
      (1911533 'move' call_tmp[1852248] ret_tmp[1911530])
      const-val reallocD[1852256]:domain(1,int(64),false)[1252786] "dead at end of block" "const" "insert auto destroy"
      const-val unaliasTemp[1911536]:domain(1,int(64),false)[1252786] "temp"
      (1911541 'move' unaliasTemp[1911536](1911537 call chpl__unalias[1697031] ret_tmp[1911530]))
      (1852258 'move' reallocD[1852256] unaliasTemp[1911536])
      const-val tmp[1852262]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val tmp[1852264]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val tmp[1852266]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val tmp[1852359]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val tmp[1852377]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1852379]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1852381 'move' call_tmp[1852379](1852384 call low[1510489] reallocD[1852256]))
      ref call_tmp[1852387]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
      (1852389 'move' call_tmp[1852387](1852392 call dom[1360329] this[1851985]))
      const-val call_tmp[1852395]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1853592]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1853596 'move' coerce_tmp[1853592](1853594 'deref' call_tmp[1852387]))
      val coerce_tmp[1853598]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1853603 'move' coerce_tmp[1853598] coerce_tmp[1853592])
      (1852397 'move' call_tmp[1852395](1852400 call dsiLow[1300625] coerce_tmp[1853598]))
      const-val call_tmp[1852403]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1852405 'move' call_tmp[1852403](1852408 call ==[435744] call_tmp[1852379] call_tmp[1852395]))
      (1852411 'move' tmp[1852377] call_tmp[1852403])
      (1852416 'move' tmp[1852359] tmp[1852377])
      (1852428 'move' tmp[1852266] tmp[1852359])
      val tmp[1852444]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1852446]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1852448]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1852450 'move' call_tmp[1852448] tmp[1852266])
      (1852455 'move' tmp[1852446] call_tmp[1852448])
      if tmp[1852446]
      {
        const-val tmp[1852462]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1852464]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1852466 'move' call_tmp[1852464](1852469 call stride[1842934] reallocD[1852256]))
        ref call_tmp[1852472]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
        (1852474 'move' call_tmp[1852472](1852477 call dom[1360329] this[1851985]))
        const-val call_tmp[1852480]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1853612]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1853616 'move' coerce_tmp[1853612](1853614 'deref' call_tmp[1852472]))
        val coerce_tmp[1853618]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1853623 'move' coerce_tmp[1853618] coerce_tmp[1853612])
        (1852482 'move' call_tmp[1852480](1852485 call dsiStride[1842972] coerce_tmp[1853618]))
        const-val call_tmp[1852488]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1852490 'move' call_tmp[1852488](1852493 call ==[435744] call_tmp[1852464] call_tmp[1852480]))
        (1852496 'move' tmp[1852462] call_tmp[1852488])
        (1852501 'move' tmp[1852444] tmp[1852462])
      }
      {
        (1852507 'move' tmp[1852444] 0)
      }
      (1852513 'move' tmp[1852264] tmp[1852444])
      val tmp[1852529]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1852531]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1852533]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1852535 'move' call_tmp[1852533] tmp[1852264])
      (1852540 'move' tmp[1852531] call_tmp[1852533])
      if tmp[1852531]
      {
        const-val tmp[1852547]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        ref call_tmp[1852549]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
        (1852551 'move' call_tmp[1852549](1852554 call dom[1360329] this[1851985]))
        const-val call_tmp[1852557]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1853631]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1853635 'move' coerce_tmp[1853631](1853633 'deref' call_tmp[1852549]))
        val coerce_tmp[1853637]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1853642 'move' coerce_tmp[1853637] coerce_tmp[1853631])
        (1852559 'move' call_tmp[1852557](1852562 call dsiNumIndices[1263823] coerce_tmp[1853637]))
        const-val call_tmp[1852565]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1852567 'move' call_tmp[1852565](1852570 call >[437788] call_tmp[1852557] 0))
        (1852573 'move' tmp[1852547] call_tmp[1852565])
        (1852578 'move' tmp[1852529] tmp[1852547])
      }
      {
        (1852584 'move' tmp[1852529] 0)
      }
      (1852590 'move' tmp[1852262] tmp[1852529])
      val tmp[1852606]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1852608]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1852610]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1852612 'move' call_tmp[1852610] tmp[1852262])
      (1852617 'move' tmp[1852608] call_tmp[1852610])
      if tmp[1852608]
      {
        const-val tmp[1852624]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1852626]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1852628 'move' call_tmp[1852626](1852631 call size[1435624] reallocD[1852256]))
        const-val call_tmp[1852634]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1852636 'move' call_tmp[1852634](1852639 call >[437788] call_tmp[1852626] 0))
        (1852642 'move' tmp[1852624] call_tmp[1852634])
        (1852647 'move' tmp[1852606] tmp[1852624])
      }
      {
        (1852653 'move' tmp[1852606] 0)
      }
      const-val call_tmp[1852659]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1852661 'move' call_tmp[1852659] tmp[1852606])
      if call_tmp[1852659]
      {
        ref call_tmp[1852681]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        ref _this_tmp_[1853654]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
        (1853656 'move' _this_tmp_[1853654](1852686 call sizesPerDim[1532472] this[1851985]))
        (1852683 'move' call_tmp[1852681](1853661 '.' _this_tmp_[1853654] x0[1256712]))
        const-val call_tmp[1852691]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const _chpl_forward_tgt[1853684]:domain(1,int(64),false)[1251123] "dead after last mention" "const" "maybe ref" "maybe type" "temp"
        (1853690 'move' _chpl_forward_tgt[1853684](1853687 call chpl_forwarding_expr5__value[1253895] reallocD[1852256]))
        val coerce_tmp[1853693]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1853698 'move' coerce_tmp[1853693] _chpl_forward_tgt[1853684])
        const-val ret_tmp[1912430]:range(int(64),bounded,false)[1027003] "temp"
        (1852699 call dsiDim[1258249] coerce_tmp[1853693] ret_tmp[1912430])
        (1912433 'move' call_tmp[1852691] ret_tmp[1912430])
        const-val call_tmp[1852701]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1852703 'move' call_tmp[1852701](1852706 call size[1035978] call_tmp[1852691]))
        (1852710 call =[435443] call_tmp[1852681] call_tmp[1852701])
        (1929933 call chpl__autoDestroy[1407763] call_tmp[1852691])
        ref call_tmp[1852715]:_ref(_ddata(real(64)))[1358114] "dead after last mention" "maybe param" "temp"
        (1852717 'move' call_tmp[1852715](1852720 call data[1360938] this[1851985]))
        ref call_tmp[1852723]:_ref(_ddata(real(64)))[1358114] "dead after last mention" "maybe param" "temp"
        (1852725 'move' call_tmp[1852723](1852728 call data[1360938] this[1851985]))
        val call_tmp[1852731]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1853705]:BaseRectangularArr(1,int(64),false,real(64))[1358730] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1853711 'move' coerce_tmp[1853705](1853707 'cast' BaseRectangularArr(1,int(64),false,real(64))[1358730] this[1851985]))
        ref call_tmp[1852739]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
        (1852741 'move' call_tmp[1852739](1852744 call dom[1360329] this[1851985]))
        const-val call_tmp[1852747]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1853716]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1853720 'move' coerce_tmp[1853716](1853718 'deref' call_tmp[1852739]))
        val coerce_tmp[1853722]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1853727 'move' coerce_tmp[1853722] coerce_tmp[1853716])
        (1852749 'move' call_tmp[1852747](1852752 call dsiNumIndices[1263823] coerce_tmp[1853722]))
        const-val call_tmp[1852755]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1852757 'move' call_tmp[1852755](1852760 call size[1435624] reallocD[1852256]))
        val call_tmp[1852763]:_ddata(real(64))[1358105] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1854189]:_ddata(real(64))[1358105] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1854193 'move' coerce_tmp[1854189](1854191 'deref' call_tmp[1852723]))
        const-val default_arg_subloc[1854213]:int(32)[95] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1854217 'move' default_arg_subloc[1854213](1854215 call _ddata_reallocate_default_subloc[1854196]))
        (1852765 'move' call_tmp[1852763](1852768 call _ddata_reallocate[1853731] coerce_tmp[1854189] call_tmp[1852747] call_tmp[1852755] default_arg_subloc[1854213]))
        (1852776 call =[1361622] call_tmp[1852715] call_tmp[1852763])
        (1852785 call initShiftedData[1364272] this[1851985])
      }
      {
        val call_tmp[1852787]:real(64)[16] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1854253]:BaseRectangularArr(1,int(64),false,real(64))[1358730] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1854259 'move' coerce_tmp[1854253](1854255 'cast' BaseRectangularArr(1,int(64),false,real(64))[1358730] this[1851985]))
        val call_tmp[1852803]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1854265]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1854271 'move' coerce_tmp[1854265](1854267 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256408] this[1851985]))
        val call_tmp[1852811]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
        (1852813 'move' call_tmp[1852811](1852816 call _value[1253027] reallocD[1852256]))
        val call_tmp[1852827]:domain(1,int(64),false)[1251123] "dead at end of block" "expr temp" "maybe param" "temp"
        (1852829 'move' call_tmp[1852827](1852832 call _value[1253027] reallocD[1852256]))
        val call_tmp[1852835]:[domain(1,int(64),false)] real(64)[1358944] "dead at end of block" "insert auto destroy for explicit new" "maybe param" "temp"
        val new_temp[1854305]:[domain(1,int(64),false)] real(64)[1358944] "dead at end of block" "temp"
        val default_arg_data[1854349]:_ddata(real(64))[1358105] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1854353 'move' default_arg_data[1854349](1854351 call _new_default_data[1364908]))
        const-val default_arg_externFreeFunc[1854375]:nil[42] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1854379 'move' default_arg_externFreeFunc[1854375](1854377 call _new_default_externFreeFunc[1365004]))
        (1854307 'move' new_temp[1854305](1854283 call _new[1364781] call_tmp[1852827] default_arg_data[1854349] 0 0 default_arg_externFreeFunc[1854375]))
        (1852837 'move' call_tmp[1852835] new_temp[1854305])
        val copy[1852853]:[domain(1,int(64),false)] real(64)[1358944] "dead at end of block" "insert auto destroy"
        (1852855 'move' copy[1852853](1854383 call chpl__initCopy[1365053] call_tmp[1852835]))
        ref call_tmp[1852859]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
        (1852861 'move' call_tmp[1852859](1852864 call dom[1360329] this[1851985]))
        ref call_tmp[1852867]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "maybe param" "temp"
        val coerce_tmp[1854387]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1854391 'move' coerce_tmp[1854387](1854389 'deref' call_tmp[1852859]))
        val coerce_tmp[1854393]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1854398 'move' coerce_tmp[1854393] coerce_tmp[1854387])
        (1852869 'move' call_tmp[1852867](1852872 call ranges[1251533] coerce_tmp[1854393]))
        const-val call_tmp[1852875]:domain(1,int(64),false)[1252786] "dead at end of block" "maybe param" "temp"
        ref _tuple_expand_tmp_0[1854402]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "temp"
        (1854408 'move' _tuple_expand_tmp_0[1854402](1854412 '.' call_tmp[1852867] x0[1244883]))
        const-val coerce_tmp[1854417]:range(int(64),bounded,false)[1027003] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1854421 'move' coerce_tmp[1854417](1854419 'deref' _tuple_expand_tmp_0[1854402]))
        const-val ret_tmp[1918800]:domain(1,int(64),false)[1252786] "temp"
        (1852880 call this[1844078] reallocD[1852256] coerce_tmp[1854417] ret_tmp[1918800])
        (1918803 'move' call_tmp[1852875] ret_tmp[1918800])
        const-val keep[1852883]:domain(1,int(64),false)[1252786] "dead at end of block" "insert auto destroy"
        const-val unaliasTemp[1918806]:domain(1,int(64),false)[1252786] "temp"
        (1918811 'move' unaliasTemp[1918806](1918807 call chpl__unalias[1697031] ret_tmp[1918800]))
        (1852885 'move' keep[1852883] unaliasTemp[1918806])
        {
          ref i_this[1962638]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812] "ref to immutable" "temp"
          (1962642 'move' i_this[1962638](1962640 'set reference' keep[1852883]))
          const-val copy[1963068]:[domain(1,int(64),false)] real(64)[1358944] "concurrently accessed" "const"
          (1963071 'move' copy[1963068](1963074 call chpl__initCopy[1365053] copy[1852853]))
          const-val this[1963087]:[domain(1,int(64),false)] real(64)[1358944] "concurrently accessed" "const"
          (1963090 'move' this[1963087](1963093 call chpl__initCopy[1393336] this[1851985]))
          {
            val ret[1962645]:nothing[7] "dead after last mention" "RVV" "temp"
            {
              val call_tmp[1962648]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
              (1962650 'move' call_tmp[1962648](1962653 call _value[1253027] i_this[1962638]))
              val coerce_tmp[1962655]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "concurrently accessed" "insert auto destroy" "temp"
              (1962657 'move' coerce_tmp[1962655] call_tmp[1962648])
              const-val default_arg_tasksPerLocale[1962660]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              (1962662 'move' default_arg_tasksPerLocale[1962660](1962665 call these_default_tasksPerLocale[1315258] coerce_tmp[1962655]))
              const-val default_arg_ignoreRunning[1962667]:bool[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              (1962669 'move' default_arg_ignoreRunning[1962667](1962672 call these_default_ignoreRunning[1315289] coerce_tmp[1962655]))
              const-val default_arg_minIndicesPerTask[1962674]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              (1962676 'move' default_arg_minIndicesPerTask[1962674](1962679 call these_default_minIndicesPerTask[1315320] coerce_tmp[1962655]))
              val default_arg_offset[1962681]:1*int(64)[1256714] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
              const-val ret_tmp[1962683]:1*int(64)[1256714] "temp"
              (1962686 call these_default_offset[1315351] coerce_tmp[1962655] ret_tmp[1962683])
              (1962689 'move' default_arg_offset[1962681] ret_tmp[1962683])
              {
                const-ref i_offset[1962693]:1*int(64)[1256714] "temp"
                (1962695 'move' i_offset[1962693](1962697 'set reference' default_arg_offset[1962681]))
                {
                  val ret[1962700]:nothing[7] "dead after last mention" "RVV" "temp"
                  const-val numTasks[1962702]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                  val tmp[1962704]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
                  const-val tmp[1962706]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[1962708]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1962710 'move' call_tmp[1962708](1962713 call ==[435744] default_arg_tasksPerLocale[1962660] 0))
                  (1962716 'move' tmp[1962706] call_tmp[1962708])
                  if tmp[1962706]
                  {
                    const-val tmp[1962721]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
                    const-val call_tmp[1962723]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1962725]:locale[28] "temp"
                    (1962728 call here[90438] ret_tmp[1962725])
                    (1962730 'move' call_tmp[1962723] ret_tmp[1962725])
                    (1962733 'move' tmp[1962721](1962736 call maxTaskPar[90545] call_tmp[1962723]))
                    (1962738 'move' tmp[1962704] tmp[1962721])
                    (1962742 call chpl__autoDestroy[1601737] call_tmp[1962723])
                  }
                  {
                    (1962745 'move' tmp[1962704] default_arg_tasksPerLocale[1962660])
                  }
                  (1962749 'move' numTasks[1962702] tmp[1962704])
                  const-val tmp[1962752]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
                  val tmp[1962754]:2*int(64)[1040245] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                  const-val tmp[1962756]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[1962758]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1962760 'move' call_tmp[1962758](1962762 'task_get_serial'))
                  (1962763 'move' tmp[1962756] call_tmp[1962758])
                  if tmp[1962756]
                  {
                    const-val tmp[1962768]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                    const-val ret_tmp[1962770]:2*int(64)[1040245] "temp"
                    (1962773 call _build_tuple[1040203] 1 -1 ret_tmp[1962770])
                    (1962777 'move' tmp[1962768] ret_tmp[1962770])
                    (1962780 'move' tmp[1962754] tmp[1962768])
                  }
                  {
                    const-val tmp[1962784]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                    ref call_tmp[1962786]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "maybe param" "temp"
                    (1962788 'move' call_tmp[1962786](1962791 call ranges[1251533] coerce_tmp[1962655]))
                    const-val ret_tmp[1962793]:2*int(64)[1040245] "temp"
                    (1962796 call _computeChunkStuff[1381155] numTasks[1962702] default_arg_ignoreRunning[1962667] default_arg_minIndicesPerTask[1962674] call_tmp[1962786] ret_tmp[1962793])
                    (1962802 'move' tmp[1962784] ret_tmp[1962793])
                    (1962805 'move' tmp[1962754] tmp[1962784])
                  }
                  (1962809 '=' tmp[1962752] tmp[1962754])
                  (1962812 'noop')
                  1
                  ref call_tmp[1962814]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                  (1962816 'move' call_tmp[1962814](1962818 '.' tmp[1962752] x0[1040241]))
                  const-val numChunks[1962821]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                  const-val coerce_tmp[1962823]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                  (1962825 'move' coerce_tmp[1962823](1962827 'deref' call_tmp[1962814]))
                  (1962829 '=' numChunks[1962821] coerce_tmp[1962823])
                  (1962832 'noop')
                  ref call_tmp[1962833]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                  (1962835 'move' call_tmp[1962833](1962837 '.' tmp[1962752] x1[1040243]))
                  const-val parDim[1962840]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                  const-val coerce_tmp[1962842]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                  (1962844 'move' coerce_tmp[1962842](1962846 'deref' call_tmp[1962833]))
                  (1962848 '=' parDim[1962840] coerce_tmp[1962842])
                  (1962851 'noop')
                  const-val call_tmp[1962852]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1962854 'move' call_tmp[1962852](1962857 call <=[437128] numChunks[1962821] 1))
                  const-val call_tmp[1962860]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1962862 'move' call_tmp[1962860] call_tmp[1962852])
                  if call_tmp[1962860]
                  {
                    {
                      val _indexOfInterest[1962868]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1962870]:_ic_these_help_DefaultRectangularDom_1_int64_t_F[1383595] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1962872]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1383601] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1962874]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1383601] "temp"
                      (1962877 call these_help[1383178] coerce_tmp[1962655] ret_tmp[1962874])
                      (1962880 'move' call_tmp[1962872] ret_tmp[1962874])
                      (1962883 'move' _iterator[1962870](1962886 call _getIterator[1383610] call_tmp[1962872]))
                      {
                        val ret[2042354]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1383601] "dead after last mention" "RVV" "temp"
                        val _indexOfInterest[2042356]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[2042358]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
                        ref call_tmp[2042360]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
                        ref _this_tmp_[2042362]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "temp"
                        const-val this[2042616]:domain(1,int(64),false)[1251123] "temp"
                        (2042621 'move' this[2042616](2042618 '.v' _iterator[1962870] F0_this[2134554]))
                        (2042364 'move' _this_tmp_[2042362](2042367 call ranges[1251533] this[2042616]))
                        (2042369 'move' call_tmp[2042360](2042371 '.' _this_tmp_[2042362] x0[1244883]))
                        (2042374 'move' _iterator[2042358](2042377 call _getIterator[1095509] call_tmp[2042360]))
                        {
                          val ret[2042380]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
                          const-val _return_tmp_[2042382]:bool[10] "dead after last mention" "temp"
                          const-val this[2042384]:range(int(64),bounded,false)[1027003] "temp"
                          (2042386 'move' this[2042384](2042388 '.v' _iterator[2042358] F0_this[2113071]))
                          (2042391 'move' _return_tmp_[2042382](2042394 call checkIfIterWillOverflow[1096003] this[2042384] 1))
                          val i[2042397]:int(64)[13] "dead at end of block" "insert auto destroy"
                          val call_tmp[2042399]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (2042401 'move' i[2042397] 0)
                          ref call_tmp[2042404]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
                          const-val this[2042406]:range(int(64),bounded,false)[1027003] "temp"
                          (2042408 'move' this[2042406](2042410 '.v' _iterator[2042358] F0_this[2113071]))
                          (2042413 'move' call_tmp[2042404](2042416 call _low[1028641] this[2042406]))
                          const-val start[2042418]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                          const-val coerce_tmp[2042420]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                          (2042422 'move' coerce_tmp[2042420](2042424 'deref' call_tmp[2042404]))
                          (2042426 '=' start[2042418] coerce_tmp[2042420])
                          (2042429 'noop')
                          ref call_tmp[2042430]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
                          const-val this[2042432]:range(int(64),bounded,false)[1027003] "temp"
                          (2042434 'move' this[2042432](2042436 '.v' _iterator[2042358] F0_this[2113071]))
                          (2042439 'move' call_tmp[2042430](2042442 call _high[1028849] this[2042432]))
                          const end[2042444]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                          const-val coerce_tmp[2042446]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                          (2042448 'move' coerce_tmp[2042446](2042450 'deref' call_tmp[2042430]))
                          (2042452 '=' end[2042444] coerce_tmp[2042446])
                          (2042455 'noop')
                          CForLoop[2042456] order-independent
                          {
                            const-val yret[2042471]:int(64)[13] "dead after last mention" "YVV" "temp"
                            const-val call_tmp[2042473]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val this[2042475]:range(int(64),bounded,false)[1027003] "temp"
                            (2042477 'move' this[2042475](2042479 '.v' _iterator[2042358] F0_this[2113071]))
                            (2042482 'move' call_tmp[2042473](2042485 call chpl_intToIdx[1028669] this[2042475] i[2042397]))
                            (2042488 'move' yret[2042471] call_tmp[2042473])
                            const-val _yieldedIndex[2042491]:int(64)[13] "temp"
                            (2042493 'move' _yieldedIndex[2042491] call_tmp[2042473])
                            {
                              const-val i[2042497]:int(64)[13] "const" "index var" "insert auto destroy"
                              (2042499 'move' i[2042497] _yieldedIndex[2042491])
                              const-val yret[2042502]:int(64)[13] "dead after last mention" "YVV" "temp"
                              (2042504 'move' yret[2042502] _yieldedIndex[2042491])
                              const-val _yieldedIndex[2042526]:int(64)[13] "temp"
                              (2042614 'move' _yieldedIndex[2042526] _yieldedIndex[2042491])
                              {
                                const-val i[2042528]:int(64)[13] "const" "index var" "insert auto destroy"
                                (2042530 'move' i[2042528] _yieldedIndex[2042526])
                                {
                                  const-val yret[2042534]:int(64)[13] "dead after last mention" "YVV" "temp"
                                  (2042536 'move' yret[2042534] i[2042528])
                                  const-val _indexOfInterest[2042539]:int(64)[13] "dead at end of block" "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                  (2042541 'move' _indexOfInterest[2042539] yret[2042534])
                                  {
                                    const-val i[2042545]:int(64)[13] "const" "index var" "insert auto destroy"
                                    (2042547 'move' i[2042545] _indexOfInterest[2042539])
                                    const-val yret[2042550]:int(64)[13] "dead after last mention" "YVV" "temp"
                                    (2042552 'move' yret[2042550] i[2042545])
                                    const-val i[2042555]:int(64)[13] "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy"
                                    (2042557 'move' i[2042555] yret[2042550])
                                    {
                                      ref dst[2042561]:_ref(real(64))[936906] "dead at end of block" "ref var"
                                      ref call_tmp[2042563]:_ref(real(64))[936906] "dead at end of block" "maybe param" "temp"
                                      val coerce_tmp[2042565]:[domain(1,int(64),false)] real(64)[1358944] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                      (2042567 'move' coerce_tmp[2042565] copy[1963068])
                                      val coerce_tmp[2042570]:[domain(1,int(64),false)] real(64)[1358944] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                      (2042572 'move' coerce_tmp[2042570] copy[1963068])
                                      val coerce_tmp[2042575]:[domain(1,int(64),false)] real(64)[1358944] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                      (2042577 'move' coerce_tmp[2042575] copy[1963068])
                                      (2042580 'move' call_tmp[2042563](2042583 call dsiAccess[1389399] coerce_tmp[2042565] i[2042555]))
                                      (2042586 'move' dst[2042561] call_tmp[2042563])
                                      ref src[2042589]:_ref(real(64))[936906] "dead at end of block" "const" "ref var"
                                      ref call_tmp[2042591]:_ref(real(64))[936906] "dead at end of block" "maybe param" "temp"
                                      (2042593 'move' call_tmp[2042591](2042596 call dsiAccess[1389677] this[1963087] i[2042555]))
                                      (2042599 'move' src[2042589] call_tmp[2042591])
                                      (2042602 '=' dst[2042561] src[2042589])
                                      val optinfo[2042605]:int(64)[13] "no codegen" "temp" "forall no task private"
                                      (2042607 'optimization info' optinfo[2042605])
                                    }
                                    label _continueLabel[2042609]
                                  }
                                }
                                label _continueLabel[2042611]
                              }
                            }
                            {
                              (2042458 '=' i[2042397] coerce_tmp[2042420])
                            }
                            {
                              (2042462 '<=' i[2042397] end[2042444])
                            }
                            {
                              val call_tmp[2042466]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              (2042468 '+=' i[2042397] 1)
                            }
                          }
                          label _endthese[2042517]
                        }
                        (2042520 call _freeIterator[1102195] _iterator[2042358])
                        label _endthese_help[2042522]
                      }
                      label _breakLabel[1962938]
                      (1962941 call _freeIterator[1383783] _iterator[1962870])
                    }
                  }
                  {
                    {
                      const-val tmpIter[1962945]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe ref" "no copy" "temp"
                      const-val call_tmp[1962947]:range(int(64),boundedLow,false)[1087754] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
                      const-val ret_tmp[1962949]:range(int(64),boundedLow,false)[1087754] "temp"
                      (1962952 call chpl_build_low_bounded_range[1087147] 0 ret_tmp[1962949])
                      (1962955 'move' call_tmp[1962947] ret_tmp[1962949])
                      const-val ret_tmp[1962958]:range(int(64),bounded,false)[1027003] "temp"
                      (1962961 call #[1088114] call_tmp[1962947] numChunks[1962821] ret_tmp[1962958])
                      (1962965 'move' tmpIter[1962945] ret_tmp[1962958])
                      {
                        const _coforallCount[1962969]:_EndCount(AtomicT(int(64)),int(64))[945532] "dead after last mention" "concurrently accessed" "const" "end count" "temp"
                        (1962971 'move' _coforallCount[1962969](1962974 call _endCountAlloc[1228107]))
                        const-val numTasks[1962975]:int(64)[13] "dead at end of block" "temp"
                        (1962977 'move' numTasks[1962975](1962980 call size[1035978] tmpIter[1962945]))
                        (1962983 call _upEndCount[1228350] _coforallCount[1962969] numTasks[1962975])
                        (1962987 call chpl_resetTaskSpawn[1229432] numTasks[1962975])
                        val _indexOfInterest[1962989]:int(64)[13] "dead at end of block" "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[1962991]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
                        (1962993 'move' _iterator[1962991](1962996 call _getIterator[1095509] tmpIter[1962945]))
                        {
                          val ret[2042624]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
                          const-val _return_tmp_[2042626]:bool[10] "dead after last mention" "temp"
                          const-val this[2042744]:range(int(64),bounded,false)[1027003] "temp"
                          (2042749 'move' this[2042744](2042746 '.v' _iterator[1962991] F0_this[2113071]))
                          (2042628 'move' _return_tmp_[2042626](2042631 call checkIfIterWillOverflow[1096003] this[2042744] 1))
                          val i[2042634]:int(64)[13] "dead at end of block" "insert auto destroy"
                          val call_tmp[2042636]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (2042638 'move' i[2042634] 0)
                          ref call_tmp[2042641]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
                          const-val this[2042751]:range(int(64),bounded,false)[1027003] "temp"
                          (2042756 'move' this[2042751](2042753 '.v' _iterator[1962991] F0_this[2113071]))
                          (2042643 'move' call_tmp[2042641](2042646 call _low[1028641] this[2042751]))
                          const-val start[2042648]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                          const-val coerce_tmp[2042650]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                          (2042652 'move' coerce_tmp[2042650](2042654 'deref' call_tmp[2042641]))
                          (2042656 '=' start[2042648] coerce_tmp[2042650])
                          (2042659 'noop')
                          ref call_tmp[2042660]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
                          const-val this[2042758]:range(int(64),bounded,false)[1027003] "temp"
                          (2042763 'move' this[2042758](2042760 '.v' _iterator[1962991] F0_this[2113071]))
                          (2042662 'move' call_tmp[2042660](2042665 call _high[1028849] this[2042758]))
                          const end[2042667]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                          const-val coerce_tmp[2042669]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                          (2042671 'move' coerce_tmp[2042669](2042673 'deref' call_tmp[2042660]))
                          (2042675 '=' end[2042667] coerce_tmp[2042669])
                          (2042678 'noop')
                          CForLoop[2042679]
                          {
                            const-val yret[2042694]:int(64)[13] "dead after last mention" "YVV" "temp"
                            const-val call_tmp[2042696]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val this[2042765]:range(int(64),bounded,false)[1027003] "temp"
                            (2042770 'move' this[2042765](2042767 '.v' _iterator[1962991] F0_this[2113071]))
                            (2042698 'move' call_tmp[2042696](2042701 call chpl_intToIdx[1028669] this[2042765] i[2042634]))
                            (2042704 'move' yret[2042694] call_tmp[2042696])
                            const-val _yieldedIndex[2042718]:int(64)[13] "coforall index var" "temp"
                            (2042742 'move' _yieldedIndex[2042718] call_tmp[2042696])
                            {
                              const-val chunk[2042720]:int(64)[13] "coforall index var" "const" "index var" "insert auto destroy"
                              (2042722 'move' chunk[2042720] _yieldedIndex[2042718])
                              val dummy_error[2042725]:Error[167984] "concurrently accessed" "error variable" "temp"
                              val _args_forcoforall_fn[2219128]:_class_localscoforall_fn[2219106] "temp"
                              (2219132 'move' _args_forcoforall_fn[2219128](2219130 'stack allocate class' _class_localscoforall_fn[2219106]))
                              (2219134 '.=' _args_forcoforall_fn[2219128] _0_parDim[2219109] parDim[1962840])
                              (2219138 '.=' _args_forcoforall_fn[2219128] _1_numChunks[2219111] numChunks[1962821])
                              (2219142 '.=' _args_forcoforall_fn[2219128] _2_coerce_tmp[2219113] coerce_tmp[1962655])
                              (2219146 '.=' _args_forcoforall_fn[2219128] _3_chunk[2219115] chunk[2042720])
                              (2219150 '.=' _args_forcoforall_fn[2219128] _4__coforallCount[2219117] _coforallCount[1962969])
                              ref tmp[2219154]:1*int(64)[1256714] "temp"
                              (2219158 'move' tmp[2219154](2219156 'set reference' default_arg_offset[1962681]))
                              (2219160 '.=' _args_forcoforall_fn[2219128] _6_default_arg_offset[2219121] tmp[2219154])
                              (2219164 '.=' _args_forcoforall_fn[2219128] _7_copy[2219123] copy[1963068])
                              (2219168 '.=' _args_forcoforall_fn[2219128] _8_this[2219125] this[1963087])
                              val _args_vforcoforall_fn[2219172]:c_void_ptr[149] "temp"
                              (2219176 'move' _args_vforcoforall_fn[2219172](2219174 'cast_to_void_star' _args_forcoforall_fn[2219128]))
                              val _args_sizecoforall_fn[2219178]:int(64)[13] "temp"
                              (2219182 'move' _args_sizecoforall_fn[2219178](2219180 'sizeof_bundle' _class_localscoforall_fn[2219106]))
                              ref _taskListcoforall_fn[2219184]:c_void_ptr[149] "temp"
                              (2219189 'move' _taskListcoforall_fn[2219184](2219186 '.' _coforallCount[1962969] taskList[12712]))
                              val _taskListNodecoforall_fn[2219191]:int(64)[13] "temp"
                              (2219195 'move' _taskListNodecoforall_fn[2219191](2219193 '_wide_get_node' _coforallCount[1962969]))
                              (2219294 call wrapcoforall_fn[2219197] _taskListcoforall_fn[2219184] _taskListNodecoforall_fn[2219191] _args_vforcoforall_fn[2219172] _args_sizecoforall_fn[2219178] _args_forcoforall_fn[2219128])
                              {
                              }
                              label _continueLabel[2042739]
                            }
                            {
                              (2042681 '=' i[2042634] coerce_tmp[2042650])
                            }
                            {
                              (2042685 '<=' i[2042634] end[2042667])
                            }
                            {
                              val call_tmp[2042689]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              (2042691 '+=' i[2042634] 1)
                            }
                          }
                          label _endthese[2042714]
                        }
                        label _breakLabel[1963020]
                        val error[1963022]:Error[167984] "error variable" "temp"
                        (1963024 'move' error[1963022] nil[44])
                        (1963028 call _waitEndCount[1235226] _coforallCount[1962969] numTasks[1962975] error[1963022])
                        val errorExists[2226040]:bool[10] "temp"
                        (2226045 'move' errorExists[2226040](2226042 '!=' error[1963022] nil[44]))
                        if errorExists[2226040]
                        {
                          (1963036 call chpl_propagate_error[170518] error[1963022])
                        }
                        (1963040 call _endCountFree[1234049] _coforallCount[1962969])
                        (1963043 call _freeIterator[1102195] _iterator[1962991])
                      }
                      (1963046 call chpl__autoDestroy[1407763] tmpIter[1962945])
                      (1963049 call chpl__autoDestroy[1680875] call_tmp[1962947])
                    }
                  }
                  (1963053 call chpl__autoDestroy[1674803] tmp[1962752])
                  label _endthese[1963055]
                }
              }
              (1963058 call chpl_after_forall_fence[13071])
              (1963060 call chpl__autoDestroy[1697253] default_arg_offset[1962681])
              label _breakLabel[1963062]
            }
            label _endthese[1963064]
          }
          val coerce_tmp[1963096]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1963098 'move' coerce_tmp[1963096](1963100 'cast' object[22] this[1963087]))
          (1963104 call chpl__autoDestroy[1351354] coerce_tmp[1963096])
          val coerce_tmp[1963077]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1963079 'move' coerce_tmp[1963077](1963081 'cast' object[22] copy[1963068]))
          (1963085 call chpl__autoDestroy[1846254] coerce_tmp[1963077])
        }
        (1930717 call chpl_after_forall_fence[13071])
        val call_tmp[1852937]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1854586]:BaseRectangularArr(1,int(64),false,real(64))[1358730] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1854592 'move' coerce_tmp[1854586](1854588 'cast' BaseRectangularArr(1,int(64),false,real(64))[1358730] this[1851985]))
        ref call_tmp[1853180]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
        (1853182 'move' call_tmp[1853180](1853185 call off[1360291] this[1851985]))
        ref call_tmp[1853188]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1854603]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1854608 'move' coerce_tmp[1854603] copy[1852853])
        (1853190 'move' call_tmp[1853188](1853193 call off[1360291] coerce_tmp[1854603]))
        (1853197 call =[1847029] call_tmp[1853180] call_tmp[1853188])
        ref call_tmp[1853202]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
        (1853204 'move' call_tmp[1853202](1853207 call blk[1360437] this[1851985]))
        ref call_tmp[1853210]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1854613]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1854618 'move' coerce_tmp[1854613] copy[1852853])
        (1853212 'move' call_tmp[1853210](1853215 call blk[1360437] coerce_tmp[1854613]))
        (1853219 call =[1847029] call_tmp[1853202] call_tmp[1853210])
        ref call_tmp[1853224]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
        (1853226 'move' call_tmp[1853224](1853229 call str[1360373] this[1851985]))
        ref call_tmp[1853232]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1854623]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1854628 'move' coerce_tmp[1854623] copy[1852853])
        (1853234 'move' call_tmp[1853232](1853237 call str[1360373] coerce_tmp[1854623]))
        (1853241 call =[1847029] call_tmp[1853224] call_tmp[1853232])
        ref call_tmp[1853246]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        (1853248 'move' call_tmp[1853246](1853251 call factoredOffs[1360733] this[1851985]))
        ref call_tmp[1853254]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1854633]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1854638 'move' coerce_tmp[1854633] copy[1852853])
        (1853256 'move' call_tmp[1853254](1853259 call factoredOffs[1360733] coerce_tmp[1854633]))
        const-val coerce_tmp[1854641]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1854645 'move' coerce_tmp[1854641](1854643 'deref' call_tmp[1853254]))
        (1853263 call =[435443] call_tmp[1853246] coerce_tmp[1854641])
        (1853272 call dsiDestroyArr[1834230] this[1851985] 0)
        ref call_tmp[1853276]:_ref(_ddata(real(64)))[1358114] "dead after last mention" "maybe param" "temp"
        (1853278 'move' call_tmp[1853276](1853281 call data[1360938] this[1851985]))
        ref call_tmp[1853284]:_ref(_ddata(real(64)))[1358114] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1854650]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1854655 'move' coerce_tmp[1854650] copy[1852853])
        (1853286 'move' call_tmp[1853284](1853289 call data[1360938] coerce_tmp[1854650]))
        val coerce_tmp[1854658]:_ddata(real(64))[1358105] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1854662 'move' coerce_tmp[1854658](1854660 'deref' call_tmp[1853284]))
        (1853293 call =[1361622] call_tmp[1853276] coerce_tmp[1854658])
        val call_tmp[1853336]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
        (1853338 'move' call_tmp[1853336](1853341 call _value[1253027] reallocD[1852256]))
        {
          const-val call_tmp[1853385]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (1853387 'move' call_tmp[1853385](1853390 call size[1435624] reallocD[1852256]))
          const-val call_tmp[1853393]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1853395 'move' call_tmp[1853393](1853398 call >[437788] call_tmp[1853385] 0))
          const-val call_tmp[1853401]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1853403 'move' call_tmp[1853401] call_tmp[1853393])
          if call_tmp[1853401]
          {
            ref call_tmp[1853410]:_ref(_ddata(real(64)))[1358114] "dead after last mention" "maybe param" "temp"
            (1853412 'move' call_tmp[1853410](1853415 call shiftedData[1364621] this[1851985]))
            ref call_tmp[1853418]:_ref(_ddata(real(64)))[1358114] "dead after last mention" "maybe param" "temp"
            val coerce_tmp[1854683]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1854688 'move' coerce_tmp[1854683] copy[1852853])
            (1853420 'move' call_tmp[1853418](1853423 call shiftedData[1364621] coerce_tmp[1854683]))
            val coerce_tmp[1854691]:_ddata(real(64))[1358105] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1854695 'move' coerce_tmp[1854691](1854693 'deref' call_tmp[1853418]))
            (1853427 call =[1361622] call_tmp[1853410] coerce_tmp[1854691])
          }
        }
        (1853435 call chpl__delete[1854698] copy[1852853])
        (1929938 call chpl__autoDestroy[1697012] keep[1852883])
        (1929941 call chpl__autoDestroy[1407763] coerce_tmp[1854417])
      }
      (1929945 call chpl__autoDestroy[1697012] reallocD[1852256])
      (1929948 call chpl__autoDestroy[1407763] coerce_tmp[1853563])
    }
    label _end_dsiReallocate[1853440]
    (1853442 return _void[55])
  }
  function [domain(1,int(64),false)] int(64)[1368867].dsiReallocate[1855680](const in arg this[1855684]:[domain(1,int(64),false)] int(64)[1368867], const  ref arg bounds[1855724]:1*range(int(64),bounded,false)[1244885]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "ignore transfer errors" "virtual" "no return value for void"
  {
    val actuallyResizing[1855750]:bool[10] "dead at end of block" "insert auto destroy"
    (1855752 'move' actuallyResizing[1855750] 0)
    {
      val _indexOfInterest[1855757]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[1855759]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
      const-val call_tmp[1855761]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1918748]:range(int(64),bounded,false)[1027003] "temp"
      (1855766 call indices[1842671] bounds[1855724] ret_tmp[1918748])
      (1918751 'move' call_tmp[1855761] ret_tmp[1918748])
      (1855769 'move' _iterator[1855759](1855772 call _getIterator[1095509] call_tmp[1855761]))
      {
        val ret[2028950]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
        const-val _return_tmp_[2028952]:bool[10] "dead after last mention" "temp"
        const-val this[2029136]:range(int(64),bounded,false)[1027003] "temp"
        (2029141 'move' this[2029136](2029138 '.v' _iterator[1855759] F0_this[2113071]))
        (2028954 'move' _return_tmp_[2028952](2028957 call checkIfIterWillOverflow[1096003] this[2029136] 1))
        val i[2028960]:int(64)[13] "dead at end of block" "insert auto destroy"
        val call_tmp[2028962]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        (2028964 'move' i[2028960] 0)
        ref call_tmp[2028967]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
        const-val this[2029143]:range(int(64),bounded,false)[1027003] "temp"
        (2029148 'move' this[2029143](2029145 '.v' _iterator[1855759] F0_this[2113071]))
        (2028969 'move' call_tmp[2028967](2028972 call _low[1028641] this[2029143]))
        const-val start[2028974]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[2028976]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (2028978 'move' coerce_tmp[2028976](2028980 'deref' call_tmp[2028967]))
        (2028982 '=' start[2028974] coerce_tmp[2028976])
        (2028985 'noop')
        ref call_tmp[2028986]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
        const-val this[2029150]:range(int(64),bounded,false)[1027003] "temp"
        (2029155 'move' this[2029150](2029152 '.v' _iterator[1855759] F0_this[2113071]))
        (2028988 'move' call_tmp[2028986](2028991 call _high[1028849] this[2029150]))
        const end[2028993]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[2028995]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (2028997 'move' coerce_tmp[2028995](2028999 'deref' call_tmp[2028986]))
        (2029001 '=' end[2028993] coerce_tmp[2028995])
        (2029004 'noop')
        CForLoop[2029005]
        {
          const-val yret[2029020]:int(64)[13] "dead after last mention" "YVV" "temp"
          const-val call_tmp[2029022]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val this[2029157]:range(int(64),bounded,false)[1027003] "temp"
          (2029162 'move' this[2029157](2029159 '.v' _iterator[1855759] F0_this[2113071]))
          (2029024 'move' call_tmp[2029022](2029027 call chpl_intToIdx[1028669] this[2029157] i[2028960]))
          (2029030 'move' yret[2029020] call_tmp[2029022])
          const-val _yieldedIndex[2029044]:int(64)[13] "temp"
          (2029134 'move' _yieldedIndex[2029044] call_tmp[2029022])
          {
            const-val i[2029046]:int(64)[13] "const" "index var" "insert auto destroy"
            (2029048 'move' i[2029046] _yieldedIndex[2029044])
            {
              ref call_tmp[2029052]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "reference to a const" "temp"
              (2029054 'move' call_tmp[2029052](2029057 call this[1382848] bounds[1855724] i[2029046]))
              ref call_tmp[2029060]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
              (2029062 'move' call_tmp[2029060](2029065 call dom[1370252] this[1855684]))
              const-val call_tmp[2029067]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              val coerce_tmp[2029069]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2029071 'move' coerce_tmp[2029069](2029073 'deref' call_tmp[2029060]))
              val coerce_tmp[2029075]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2029077 'move' coerce_tmp[2029075] coerce_tmp[2029069])
              const-val ret_tmp[2029080]:range(int(64),bounded,false)[1027003] "temp"
              (2029083 call dsiDim[1258236] coerce_tmp[2029075] i[2029046] ret_tmp[2029080])
              (2029087 'move' call_tmp[2029067] ret_tmp[2029080])
              const-val call_tmp[2029090]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[2029092]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2029094 'move' coerce_tmp[2029092](2029096 'deref' call_tmp[2029052]))
              (2029098 'move' call_tmp[2029090](2029101 call !=[1842744] coerce_tmp[2029092] call_tmp[2029067]))
              const-val call_tmp[2029104]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2029106 'move' call_tmp[2029104] call_tmp[2029090])
              if call_tmp[2029104]
              {
                (2029112 call =[435290] actuallyResizing[1855750] 1)
                (2029116 call chpl__autoDestroy[1407763] coerce_tmp[2029092])
                (2029119 call chpl__autoDestroy[1407763] call_tmp[2029067])
                break _breakLabel[1855850] _breakLabel[1855850]
              }
              (2029125 call chpl__autoDestroy[1407763] coerce_tmp[2029092])
              (2029128 call chpl__autoDestroy[1407763] call_tmp[2029067])
            }
            label _continueLabel[2029130]
          }
          {
            (2029007 '=' i[2028960] coerce_tmp[2028976])
          }
          {
            (2029011 '<=' i[2028960] end[2028993])
          }
          {
            val call_tmp[2029015]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (2029017 '+=' i[2028960] 1)
          }
        }
        label _endthese[2029040]
      }
      label _breakLabel[1855850]
      (1929967 call _freeIterator[1102195] _iterator[1855759])
      (1929969 call chpl__autoDestroy[1407763] call_tmp[1855761])
    }
    const-val call_tmp[1855852]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1855854 'move' call_tmp[1855852](1855857 call ![7494] actuallyResizing[1855750]))
    const-val call_tmp[1855859]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1855861 'move' call_tmp[1855859] call_tmp[1855852])
    if call_tmp[1855859]
    {
      gotoReturn _end_dsiReallocate[1857139] _end_dsiReallocate[1857139]
    }
    val call_tmp[1855871]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val coerce_tmp[1857174]:BaseRectangularArr(1,int(64),false,int(64))[1368653] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (1857180 'move' coerce_tmp[1857174](1857176 'cast' BaseRectangularArr(1,int(64),false,int(64))[1368653] this[1855684]))
    const-val call_tmp[1855906]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (1855908 'move' call_tmp[1855906](1855910 '_wide_get_locale' this[1855684]))
    const-val call_tmp[1855912]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1906796]:locale[28] "temp"
    (1855917 call chpl_localeID_to_locale[92852] call_tmp[1855906] ret_tmp[1906796])
    (1906799 'move' call_tmp[1855912] ret_tmp[1906796])
    const-val call_tmp[1855919]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1906628]:locale[28] "temp"
    (1855924 call here[90438] ret_tmp[1906628])
    (1906631 'move' call_tmp[1855919] ret_tmp[1906628])
    const-val call_tmp[1855925]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1855927 'move' call_tmp[1855925](1855930 call !=[783099] call_tmp[1855912] call_tmp[1855919]))
    const-val call_tmp[1855933]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1855935 'move' call_tmp[1855933] call_tmp[1855925])
    if call_tmp[1855933]
    {
      (1855943 call halt[154111] "internal error: dsiReallocate() can only be called from an array's home locale")
    }
    (1929975 call chpl__autoDestroy[1601737] call_tmp[1855919])
    (1929972 call chpl__autoDestroy[1601737] call_tmp[1855912])
    {
      const-val call_tmp[1855947]:domain(1,int(64),false)[1252786] "dead at end of block" "maybe param" "temp"
      ref _tuple_expand_tmp_0[1857249]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "temp"
      (1857255 'move' _tuple_expand_tmp_0[1857249](1857259 '.' bounds[1855724] x0[1244883]))
      const-val coerce_tmp[1857262]:range(int(64),bounded,false)[1027003] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1857266 'move' coerce_tmp[1857262](1857264 'deref' _tuple_expand_tmp_0[1857249]))
      const-val ret_tmp[1911544]:domain(1,int(64),false)[1252786] "temp"
      (1855952 call chpl__buildDomainExpr[1244857] coerce_tmp[1857262] ret_tmp[1911544])
      (1911547 'move' call_tmp[1855947] ret_tmp[1911544])
      const-val reallocD[1855955]:domain(1,int(64),false)[1252786] "dead at end of block" "const" "insert auto destroy"
      const-val unaliasTemp[1911550]:domain(1,int(64),false)[1252786] "temp"
      (1911555 'move' unaliasTemp[1911550](1911551 call chpl__unalias[1697031] ret_tmp[1911544]))
      (1855957 'move' reallocD[1855955] unaliasTemp[1911550])
      const-val tmp[1855961]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val tmp[1855963]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val tmp[1855965]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val tmp[1856058]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val tmp[1856076]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1856078]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1856080 'move' call_tmp[1856078](1856083 call low[1510489] reallocD[1855955]))
      ref call_tmp[1856086]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
      (1856088 'move' call_tmp[1856086](1856091 call dom[1370252] this[1855684]))
      const-val call_tmp[1856094]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1857291]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1857295 'move' coerce_tmp[1857291](1857293 'deref' call_tmp[1856086]))
      val coerce_tmp[1857297]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1857302 'move' coerce_tmp[1857297] coerce_tmp[1857291])
      (1856096 'move' call_tmp[1856094](1856099 call dsiLow[1300625] coerce_tmp[1857297]))
      const-val call_tmp[1856102]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1856104 'move' call_tmp[1856102](1856107 call ==[435744] call_tmp[1856078] call_tmp[1856094]))
      (1856110 'move' tmp[1856076] call_tmp[1856102])
      (1856115 'move' tmp[1856058] tmp[1856076])
      (1856127 'move' tmp[1855965] tmp[1856058])
      val tmp[1856143]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1856145]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1856147]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1856149 'move' call_tmp[1856147] tmp[1855965])
      (1856154 'move' tmp[1856145] call_tmp[1856147])
      if tmp[1856145]
      {
        const-val tmp[1856161]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1856163]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1856165 'move' call_tmp[1856163](1856168 call stride[1842934] reallocD[1855955]))
        ref call_tmp[1856171]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
        (1856173 'move' call_tmp[1856171](1856176 call dom[1370252] this[1855684]))
        const-val call_tmp[1856179]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1857311]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1857315 'move' coerce_tmp[1857311](1857313 'deref' call_tmp[1856171]))
        val coerce_tmp[1857317]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1857322 'move' coerce_tmp[1857317] coerce_tmp[1857311])
        (1856181 'move' call_tmp[1856179](1856184 call dsiStride[1842972] coerce_tmp[1857317]))
        const-val call_tmp[1856187]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1856189 'move' call_tmp[1856187](1856192 call ==[435744] call_tmp[1856163] call_tmp[1856179]))
        (1856195 'move' tmp[1856161] call_tmp[1856187])
        (1856200 'move' tmp[1856143] tmp[1856161])
      }
      {
        (1856206 'move' tmp[1856143] 0)
      }
      (1856212 'move' tmp[1855963] tmp[1856143])
      val tmp[1856228]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1856230]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1856232]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1856234 'move' call_tmp[1856232] tmp[1855963])
      (1856239 'move' tmp[1856230] call_tmp[1856232])
      if tmp[1856230]
      {
        const-val tmp[1856246]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        ref call_tmp[1856248]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
        (1856250 'move' call_tmp[1856248](1856253 call dom[1370252] this[1855684]))
        const-val call_tmp[1856256]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1857330]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1857334 'move' coerce_tmp[1857330](1857332 'deref' call_tmp[1856248]))
        val coerce_tmp[1857336]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1857341 'move' coerce_tmp[1857336] coerce_tmp[1857330])
        (1856258 'move' call_tmp[1856256](1856261 call dsiNumIndices[1263823] coerce_tmp[1857336]))
        const-val call_tmp[1856264]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1856266 'move' call_tmp[1856264](1856269 call >[437788] call_tmp[1856256] 0))
        (1856272 'move' tmp[1856246] call_tmp[1856264])
        (1856277 'move' tmp[1856228] tmp[1856246])
      }
      {
        (1856283 'move' tmp[1856228] 0)
      }
      (1856289 'move' tmp[1855961] tmp[1856228])
      val tmp[1856305]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1856307]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1856309]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1856311 'move' call_tmp[1856309] tmp[1855961])
      (1856316 'move' tmp[1856307] call_tmp[1856309])
      if tmp[1856307]
      {
        const-val tmp[1856323]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1856325]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1856327 'move' call_tmp[1856325](1856330 call size[1435624] reallocD[1855955]))
        const-val call_tmp[1856333]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1856335 'move' call_tmp[1856333](1856338 call >[437788] call_tmp[1856325] 0))
        (1856341 'move' tmp[1856323] call_tmp[1856333])
        (1856346 'move' tmp[1856305] tmp[1856323])
      }
      {
        (1856352 'move' tmp[1856305] 0)
      }
      const-val call_tmp[1856358]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1856360 'move' call_tmp[1856358] tmp[1856305])
      if call_tmp[1856358]
      {
        ref call_tmp[1856380]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        ref _this_tmp_[1857353]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
        (1857355 'move' _this_tmp_[1857353](1856385 call sizesPerDim[1771388] this[1855684]))
        (1856382 'move' call_tmp[1856380](1857360 '.' _this_tmp_[1857353] x0[1256712]))
        const-val call_tmp[1856390]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const _chpl_forward_tgt[1857383]:domain(1,int(64),false)[1251123] "dead after last mention" "const" "maybe ref" "maybe type" "temp"
        (1857389 'move' _chpl_forward_tgt[1857383](1857386 call chpl_forwarding_expr5__value[1253895] reallocD[1855955]))
        val coerce_tmp[1857392]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1857397 'move' coerce_tmp[1857392] _chpl_forward_tgt[1857383])
        const-val ret_tmp[1912436]:range(int(64),bounded,false)[1027003] "temp"
        (1856398 call dsiDim[1258249] coerce_tmp[1857392] ret_tmp[1912436])
        (1912439 'move' call_tmp[1856390] ret_tmp[1912436])
        const-val call_tmp[1856400]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1856402 'move' call_tmp[1856400](1856405 call size[1035978] call_tmp[1856390]))
        (1856409 call =[435443] call_tmp[1856380] call_tmp[1856400])
        (1929978 call chpl__autoDestroy[1407763] call_tmp[1856390])
        ref call_tmp[1856414]:_ref(_ddata(int(64)))[1368037] "dead after last mention" "maybe param" "temp"
        (1856416 'move' call_tmp[1856414](1856419 call data[1370861] this[1855684]))
        ref call_tmp[1856422]:_ref(_ddata(int(64)))[1368037] "dead after last mention" "maybe param" "temp"
        (1856424 'move' call_tmp[1856422](1856427 call data[1370861] this[1855684]))
        val call_tmp[1856430]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1857404]:BaseRectangularArr(1,int(64),false,int(64))[1368653] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1857410 'move' coerce_tmp[1857404](1857406 'cast' BaseRectangularArr(1,int(64),false,int(64))[1368653] this[1855684]))
        ref call_tmp[1856438]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
        (1856440 'move' call_tmp[1856438](1856443 call dom[1370252] this[1855684]))
        const-val call_tmp[1856446]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1857415]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1857419 'move' coerce_tmp[1857415](1857417 'deref' call_tmp[1856438]))
        val coerce_tmp[1857421]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1857426 'move' coerce_tmp[1857421] coerce_tmp[1857415])
        (1856448 'move' call_tmp[1856446](1856451 call dsiNumIndices[1263823] coerce_tmp[1857421]))
        const-val call_tmp[1856454]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1856456 'move' call_tmp[1856454](1856459 call size[1435624] reallocD[1855955]))
        val call_tmp[1856462]:_ddata(int(64))[1368028] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1857888]:_ddata(int(64))[1368028] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1857892 'move' coerce_tmp[1857888](1857890 'deref' call_tmp[1856422]))
        const-val default_arg_subloc[1857912]:int(32)[95] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1857916 'move' default_arg_subloc[1857912](1857914 call _ddata_reallocate_default_subloc[1857895]))
        (1856464 'move' call_tmp[1856462](1856467 call _ddata_reallocate[1857430] coerce_tmp[1857888] call_tmp[1856446] call_tmp[1856454] default_arg_subloc[1857912]))
        (1856475 call =[1371545] call_tmp[1856414] call_tmp[1856462])
        (1856484 call initShiftedData[1372747] this[1855684])
      }
      {
        val call_tmp[1856486]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1857952]:BaseRectangularArr(1,int(64),false,int(64))[1368653] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1857958 'move' coerce_tmp[1857952](1857954 'cast' BaseRectangularArr(1,int(64),false,int(64))[1368653] this[1855684]))
        val call_tmp[1856502]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1857964]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1857970 'move' coerce_tmp[1857964](1857966 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256408] this[1855684]))
        val call_tmp[1856510]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
        (1856512 'move' call_tmp[1856510](1856515 call _value[1253027] reallocD[1855955]))
        val call_tmp[1856526]:domain(1,int(64),false)[1251123] "dead at end of block" "expr temp" "maybe param" "temp"
        (1856528 'move' call_tmp[1856526](1856531 call _value[1253027] reallocD[1855955]))
        val call_tmp[1856534]:[domain(1,int(64),false)] int(64)[1368867] "dead at end of block" "insert auto destroy for explicit new" "maybe param" "temp"
        val new_temp[1858004]:[domain(1,int(64),false)] int(64)[1368867] "dead at end of block" "temp"
        val default_arg_data[1858048]:_ddata(int(64))[1368028] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1858052 'move' default_arg_data[1858048](1858050 call _new_default_data[1373383]))
        const-val default_arg_externFreeFunc[1858074]:nil[42] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1858078 'move' default_arg_externFreeFunc[1858074](1858076 call _new_default_externFreeFunc[1373479]))
        (1858006 'move' new_temp[1858004](1857982 call _new[1373256] call_tmp[1856526] default_arg_data[1858048] 0 0 default_arg_externFreeFunc[1858074]))
        (1856536 'move' call_tmp[1856534] new_temp[1858004])
        val copy[1856552]:[domain(1,int(64),false)] int(64)[1368867] "dead at end of block" "insert auto destroy"
        (1856554 'move' copy[1856552](1858082 call chpl__initCopy[1373528] call_tmp[1856534]))
        ref call_tmp[1856558]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
        (1856560 'move' call_tmp[1856558](1856563 call dom[1370252] this[1855684]))
        ref call_tmp[1856566]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "maybe param" "temp"
        val coerce_tmp[1858086]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1858090 'move' coerce_tmp[1858086](1858088 'deref' call_tmp[1856558]))
        val coerce_tmp[1858092]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1858097 'move' coerce_tmp[1858092] coerce_tmp[1858086])
        (1856568 'move' call_tmp[1856566](1856571 call ranges[1251533] coerce_tmp[1858092]))
        const-val call_tmp[1856574]:domain(1,int(64),false)[1252786] "dead at end of block" "maybe param" "temp"
        ref _tuple_expand_tmp_0[1858101]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "temp"
        (1858107 'move' _tuple_expand_tmp_0[1858101](1858111 '.' call_tmp[1856566] x0[1244883]))
        const-val coerce_tmp[1858116]:range(int(64),bounded,false)[1027003] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1858120 'move' coerce_tmp[1858116](1858118 'deref' _tuple_expand_tmp_0[1858101]))
        const-val ret_tmp[1918814]:domain(1,int(64),false)[1252786] "temp"
        (1856579 call this[1844078] reallocD[1855955] coerce_tmp[1858116] ret_tmp[1918814])
        (1918817 'move' call_tmp[1856574] ret_tmp[1918814])
        const-val keep[1856582]:domain(1,int(64),false)[1252786] "dead at end of block" "insert auto destroy"
        const-val unaliasTemp[1918820]:domain(1,int(64),false)[1252786] "temp"
        (1918825 'move' unaliasTemp[1918820](1918821 call chpl__unalias[1697031] ret_tmp[1918814]))
        (1856584 'move' keep[1856582] unaliasTemp[1918820])
        {
          ref i_this[1963614]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812] "ref to immutable" "temp"
          (1963618 'move' i_this[1963614](1963616 'set reference' keep[1856582]))
          const-val copy[1964044]:[domain(1,int(64),false)] int(64)[1368867] "concurrently accessed" "const"
          (1964047 'move' copy[1964044](1964050 call chpl__initCopy[1373528] copy[1856552]))
          const-val this[1964063]:[domain(1,int(64),false)] int(64)[1368867] "concurrently accessed" "const"
          (1964066 'move' this[1964063](1964069 call chpl__initCopy[1778751] this[1855684]))
          {
            val ret[1963621]:nothing[7] "dead after last mention" "RVV" "temp"
            {
              val call_tmp[1963624]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
              (1963626 'move' call_tmp[1963624](1963629 call _value[1253027] i_this[1963614]))
              val coerce_tmp[1963631]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "concurrently accessed" "insert auto destroy" "temp"
              (1963633 'move' coerce_tmp[1963631] call_tmp[1963624])
              const-val default_arg_tasksPerLocale[1963636]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              (1963638 'move' default_arg_tasksPerLocale[1963636](1963641 call these_default_tasksPerLocale[1315258] coerce_tmp[1963631]))
              const-val default_arg_ignoreRunning[1963643]:bool[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              (1963645 'move' default_arg_ignoreRunning[1963643](1963648 call these_default_ignoreRunning[1315289] coerce_tmp[1963631]))
              const-val default_arg_minIndicesPerTask[1963650]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              (1963652 'move' default_arg_minIndicesPerTask[1963650](1963655 call these_default_minIndicesPerTask[1315320] coerce_tmp[1963631]))
              val default_arg_offset[1963657]:1*int(64)[1256714] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
              const-val ret_tmp[1963659]:1*int(64)[1256714] "temp"
              (1963662 call these_default_offset[1315351] coerce_tmp[1963631] ret_tmp[1963659])
              (1963665 'move' default_arg_offset[1963657] ret_tmp[1963659])
              {
                const-ref i_offset[1963669]:1*int(64)[1256714] "temp"
                (1963671 'move' i_offset[1963669](1963673 'set reference' default_arg_offset[1963657]))
                {
                  val ret[1963676]:nothing[7] "dead after last mention" "RVV" "temp"
                  const-val numTasks[1963678]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                  val tmp[1963680]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
                  const-val tmp[1963682]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[1963684]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1963686 'move' call_tmp[1963684](1963689 call ==[435744] default_arg_tasksPerLocale[1963636] 0))
                  (1963692 'move' tmp[1963682] call_tmp[1963684])
                  if tmp[1963682]
                  {
                    const-val tmp[1963697]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
                    const-val call_tmp[1963699]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1963701]:locale[28] "temp"
                    (1963704 call here[90438] ret_tmp[1963701])
                    (1963706 'move' call_tmp[1963699] ret_tmp[1963701])
                    (1963709 'move' tmp[1963697](1963712 call maxTaskPar[90545] call_tmp[1963699]))
                    (1963714 'move' tmp[1963680] tmp[1963697])
                    (1963718 call chpl__autoDestroy[1601737] call_tmp[1963699])
                  }
                  {
                    (1963721 'move' tmp[1963680] default_arg_tasksPerLocale[1963636])
                  }
                  (1963725 'move' numTasks[1963678] tmp[1963680])
                  const-val tmp[1963728]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
                  val tmp[1963730]:2*int(64)[1040245] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                  const-val tmp[1963732]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[1963734]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1963736 'move' call_tmp[1963734](1963738 'task_get_serial'))
                  (1963739 'move' tmp[1963732] call_tmp[1963734])
                  if tmp[1963732]
                  {
                    const-val tmp[1963744]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                    const-val ret_tmp[1963746]:2*int(64)[1040245] "temp"
                    (1963749 call _build_tuple[1040203] 1 -1 ret_tmp[1963746])
                    (1963753 'move' tmp[1963744] ret_tmp[1963746])
                    (1963756 'move' tmp[1963730] tmp[1963744])
                  }
                  {
                    const-val tmp[1963760]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                    ref call_tmp[1963762]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "maybe param" "temp"
                    (1963764 'move' call_tmp[1963762](1963767 call ranges[1251533] coerce_tmp[1963631]))
                    const-val ret_tmp[1963769]:2*int(64)[1040245] "temp"
                    (1963772 call _computeChunkStuff[1381155] numTasks[1963678] default_arg_ignoreRunning[1963643] default_arg_minIndicesPerTask[1963650] call_tmp[1963762] ret_tmp[1963769])
                    (1963778 'move' tmp[1963760] ret_tmp[1963769])
                    (1963781 'move' tmp[1963730] tmp[1963760])
                  }
                  (1963785 '=' tmp[1963728] tmp[1963730])
                  (1963788 'noop')
                  1
                  ref call_tmp[1963790]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                  (1963792 'move' call_tmp[1963790](1963794 '.' tmp[1963728] x0[1040241]))
                  const-val numChunks[1963797]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                  const-val coerce_tmp[1963799]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                  (1963801 'move' coerce_tmp[1963799](1963803 'deref' call_tmp[1963790]))
                  (1963805 '=' numChunks[1963797] coerce_tmp[1963799])
                  (1963808 'noop')
                  ref call_tmp[1963809]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                  (1963811 'move' call_tmp[1963809](1963813 '.' tmp[1963728] x1[1040243]))
                  const-val parDim[1963816]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                  const-val coerce_tmp[1963818]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                  (1963820 'move' coerce_tmp[1963818](1963822 'deref' call_tmp[1963809]))
                  (1963824 '=' parDim[1963816] coerce_tmp[1963818])
                  (1963827 'noop')
                  const-val call_tmp[1963828]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1963830 'move' call_tmp[1963828](1963833 call <=[437128] numChunks[1963797] 1))
                  const-val call_tmp[1963836]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1963838 'move' call_tmp[1963836] call_tmp[1963828])
                  if call_tmp[1963836]
                  {
                    {
                      val _indexOfInterest[1963844]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1963846]:_ic_these_help_DefaultRectangularDom_1_int64_t_F[1383595] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1963848]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1383601] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1963850]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1383601] "temp"
                      (1963853 call these_help[1383178] coerce_tmp[1963631] ret_tmp[1963850])
                      (1963856 'move' call_tmp[1963848] ret_tmp[1963850])
                      (1963859 'move' _iterator[1963846](1963862 call _getIterator[1383610] call_tmp[1963848]))
                      {
                        val ret[2043036]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1383601] "dead after last mention" "RVV" "temp"
                        val _indexOfInterest[2043038]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[2043040]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
                        ref call_tmp[2043042]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
                        ref _this_tmp_[2043044]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "temp"
                        const-val this[2043298]:domain(1,int(64),false)[1251123] "temp"
                        (2043303 'move' this[2043298](2043300 '.v' _iterator[1963846] F0_this[2134554]))
                        (2043046 'move' _this_tmp_[2043044](2043049 call ranges[1251533] this[2043298]))
                        (2043051 'move' call_tmp[2043042](2043053 '.' _this_tmp_[2043044] x0[1244883]))
                        (2043056 'move' _iterator[2043040](2043059 call _getIterator[1095509] call_tmp[2043042]))
                        {
                          val ret[2043062]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
                          const-val _return_tmp_[2043064]:bool[10] "dead after last mention" "temp"
                          const-val this[2043066]:range(int(64),bounded,false)[1027003] "temp"
                          (2043068 'move' this[2043066](2043070 '.v' _iterator[2043040] F0_this[2113071]))
                          (2043073 'move' _return_tmp_[2043064](2043076 call checkIfIterWillOverflow[1096003] this[2043066] 1))
                          val i[2043079]:int(64)[13] "dead at end of block" "insert auto destroy"
                          val call_tmp[2043081]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (2043083 'move' i[2043079] 0)
                          ref call_tmp[2043086]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
                          const-val this[2043088]:range(int(64),bounded,false)[1027003] "temp"
                          (2043090 'move' this[2043088](2043092 '.v' _iterator[2043040] F0_this[2113071]))
                          (2043095 'move' call_tmp[2043086](2043098 call _low[1028641] this[2043088]))
                          const-val start[2043100]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                          const-val coerce_tmp[2043102]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                          (2043104 'move' coerce_tmp[2043102](2043106 'deref' call_tmp[2043086]))
                          (2043108 '=' start[2043100] coerce_tmp[2043102])
                          (2043111 'noop')
                          ref call_tmp[2043112]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
                          const-val this[2043114]:range(int(64),bounded,false)[1027003] "temp"
                          (2043116 'move' this[2043114](2043118 '.v' _iterator[2043040] F0_this[2113071]))
                          (2043121 'move' call_tmp[2043112](2043124 call _high[1028849] this[2043114]))
                          const end[2043126]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                          const-val coerce_tmp[2043128]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                          (2043130 'move' coerce_tmp[2043128](2043132 'deref' call_tmp[2043112]))
                          (2043134 '=' end[2043126] coerce_tmp[2043128])
                          (2043137 'noop')
                          CForLoop[2043138] order-independent
                          {
                            const-val yret[2043153]:int(64)[13] "dead after last mention" "YVV" "temp"
                            const-val call_tmp[2043155]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val this[2043157]:range(int(64),bounded,false)[1027003] "temp"
                            (2043159 'move' this[2043157](2043161 '.v' _iterator[2043040] F0_this[2113071]))
                            (2043164 'move' call_tmp[2043155](2043167 call chpl_intToIdx[1028669] this[2043157] i[2043079]))
                            (2043170 'move' yret[2043153] call_tmp[2043155])
                            const-val _yieldedIndex[2043173]:int(64)[13] "temp"
                            (2043175 'move' _yieldedIndex[2043173] call_tmp[2043155])
                            {
                              const-val i[2043179]:int(64)[13] "const" "index var" "insert auto destroy"
                              (2043181 'move' i[2043179] _yieldedIndex[2043173])
                              const-val yret[2043184]:int(64)[13] "dead after last mention" "YVV" "temp"
                              (2043186 'move' yret[2043184] _yieldedIndex[2043173])
                              const-val _yieldedIndex[2043208]:int(64)[13] "temp"
                              (2043296 'move' _yieldedIndex[2043208] _yieldedIndex[2043173])
                              {
                                const-val i[2043210]:int(64)[13] "const" "index var" "insert auto destroy"
                                (2043212 'move' i[2043210] _yieldedIndex[2043208])
                                {
                                  const-val yret[2043216]:int(64)[13] "dead after last mention" "YVV" "temp"
                                  (2043218 'move' yret[2043216] i[2043210])
                                  const-val _indexOfInterest[2043221]:int(64)[13] "dead at end of block" "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                  (2043223 'move' _indexOfInterest[2043221] yret[2043216])
                                  {
                                    const-val i[2043227]:int(64)[13] "const" "index var" "insert auto destroy"
                                    (2043229 'move' i[2043227] _indexOfInterest[2043221])
                                    const-val yret[2043232]:int(64)[13] "dead after last mention" "YVV" "temp"
                                    (2043234 'move' yret[2043232] i[2043227])
                                    const-val i[2043237]:int(64)[13] "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy"
                                    (2043239 'move' i[2043237] yret[2043232])
                                    {
                                      ref dst[2043243]:_ref(int(64))[936761] "dead at end of block" "ref var"
                                      ref call_tmp[2043245]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
                                      val coerce_tmp[2043247]:[domain(1,int(64),false)] int(64)[1368867] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                      (2043249 'move' coerce_tmp[2043247] copy[1964044])
                                      val coerce_tmp[2043252]:[domain(1,int(64),false)] int(64)[1368867] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                      (2043254 'move' coerce_tmp[2043252] copy[1964044])
                                      val coerce_tmp[2043257]:[domain(1,int(64),false)] int(64)[1368867] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                      (2043259 'move' coerce_tmp[2043257] copy[1964044])
                                      (2043262 'move' call_tmp[2043245](2043265 call dsiAccess[1377509] coerce_tmp[2043247] i[2043237]))
                                      (2043268 'move' dst[2043243] call_tmp[2043245])
                                      ref src[2043271]:_ref(int(64))[936761] "dead at end of block" "const" "ref var"
                                      ref call_tmp[2043273]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
                                      (2043275 'move' call_tmp[2043273](2043278 call dsiAccess[1377663] this[1964063] i[2043237]))
                                      (2043281 'move' src[2043271] call_tmp[2043273])
                                      (2043284 '=' dst[2043243] src[2043271])
                                      val optinfo[2043287]:int(64)[13] "no codegen" "temp" "forall no task private"
                                      (2043289 'optimization info' optinfo[2043287])
                                    }
                                    label _continueLabel[2043291]
                                  }
                                }
                                label _continueLabel[2043293]
                              }
                            }
                            {
                              (2043140 '=' i[2043079] coerce_tmp[2043102])
                            }
                            {
                              (2043144 '<=' i[2043079] end[2043126])
                            }
                            {
                              val call_tmp[2043148]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              (2043150 '+=' i[2043079] 1)
                            }
                          }
                          label _endthese[2043199]
                        }
                        (2043202 call _freeIterator[1102195] _iterator[2043040])
                        label _endthese_help[2043204]
                      }
                      label _breakLabel[1963914]
                      (1963917 call _freeIterator[1383783] _iterator[1963846])
                    }
                  }
                  {
                    {
                      const-val tmpIter[1963921]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe ref" "no copy" "temp"
                      const-val call_tmp[1963923]:range(int(64),boundedLow,false)[1087754] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
                      const-val ret_tmp[1963925]:range(int(64),boundedLow,false)[1087754] "temp"
                      (1963928 call chpl_build_low_bounded_range[1087147] 0 ret_tmp[1963925])
                      (1963931 'move' call_tmp[1963923] ret_tmp[1963925])
                      const-val ret_tmp[1963934]:range(int(64),bounded,false)[1027003] "temp"
                      (1963937 call #[1088114] call_tmp[1963923] numChunks[1963797] ret_tmp[1963934])
                      (1963941 'move' tmpIter[1963921] ret_tmp[1963934])
                      {
                        const _coforallCount[1963945]:_EndCount(AtomicT(int(64)),int(64))[945532] "dead after last mention" "concurrently accessed" "const" "end count" "temp"
                        (1963947 'move' _coforallCount[1963945](1963950 call _endCountAlloc[1228107]))
                        const-val numTasks[1963951]:int(64)[13] "dead at end of block" "temp"
                        (1963953 'move' numTasks[1963951](1963956 call size[1035978] tmpIter[1963921]))
                        (1963959 call _upEndCount[1228350] _coforallCount[1963945] numTasks[1963951])
                        (1963963 call chpl_resetTaskSpawn[1229432] numTasks[1963951])
                        val _indexOfInterest[1963965]:int(64)[13] "dead at end of block" "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[1963967]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
                        (1963969 'move' _iterator[1963967](1963972 call _getIterator[1095509] tmpIter[1963921]))
                        {
                          val ret[2043306]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
                          const-val _return_tmp_[2043308]:bool[10] "dead after last mention" "temp"
                          const-val this[2043426]:range(int(64),bounded,false)[1027003] "temp"
                          (2043431 'move' this[2043426](2043428 '.v' _iterator[1963967] F0_this[2113071]))
                          (2043310 'move' _return_tmp_[2043308](2043313 call checkIfIterWillOverflow[1096003] this[2043426] 1))
                          val i[2043316]:int(64)[13] "dead at end of block" "insert auto destroy"
                          val call_tmp[2043318]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (2043320 'move' i[2043316] 0)
                          ref call_tmp[2043323]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
                          const-val this[2043433]:range(int(64),bounded,false)[1027003] "temp"
                          (2043438 'move' this[2043433](2043435 '.v' _iterator[1963967] F0_this[2113071]))
                          (2043325 'move' call_tmp[2043323](2043328 call _low[1028641] this[2043433]))
                          const-val start[2043330]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                          const-val coerce_tmp[2043332]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                          (2043334 'move' coerce_tmp[2043332](2043336 'deref' call_tmp[2043323]))
                          (2043338 '=' start[2043330] coerce_tmp[2043332])
                          (2043341 'noop')
                          ref call_tmp[2043342]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
                          const-val this[2043440]:range(int(64),bounded,false)[1027003] "temp"
                          (2043445 'move' this[2043440](2043442 '.v' _iterator[1963967] F0_this[2113071]))
                          (2043344 'move' call_tmp[2043342](2043347 call _high[1028849] this[2043440]))
                          const end[2043349]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                          const-val coerce_tmp[2043351]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                          (2043353 'move' coerce_tmp[2043351](2043355 'deref' call_tmp[2043342]))
                          (2043357 '=' end[2043349] coerce_tmp[2043351])
                          (2043360 'noop')
                          CForLoop[2043361]
                          {
                            const-val yret[2043376]:int(64)[13] "dead after last mention" "YVV" "temp"
                            const-val call_tmp[2043378]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val this[2043447]:range(int(64),bounded,false)[1027003] "temp"
                            (2043452 'move' this[2043447](2043449 '.v' _iterator[1963967] F0_this[2113071]))
                            (2043380 'move' call_tmp[2043378](2043383 call chpl_intToIdx[1028669] this[2043447] i[2043316]))
                            (2043386 'move' yret[2043376] call_tmp[2043378])
                            const-val _yieldedIndex[2043400]:int(64)[13] "coforall index var" "temp"
                            (2043424 'move' _yieldedIndex[2043400] call_tmp[2043378])
                            {
                              const-val chunk[2043402]:int(64)[13] "coforall index var" "const" "index var" "insert auto destroy"
                              (2043404 'move' chunk[2043402] _yieldedIndex[2043400])
                              val dummy_error[2043407]:Error[167984] "concurrently accessed" "error variable" "temp"
                              val _args_forcoforall_fn[2219322]:_class_localscoforall_fn[2219300] "temp"
                              (2219326 'move' _args_forcoforall_fn[2219322](2219324 'stack allocate class' _class_localscoforall_fn[2219300]))
                              (2219328 '.=' _args_forcoforall_fn[2219322] _0_parDim[2219303] parDim[1963816])
                              (2219332 '.=' _args_forcoforall_fn[2219322] _1_numChunks[2219305] numChunks[1963797])
                              (2219336 '.=' _args_forcoforall_fn[2219322] _2_coerce_tmp[2219307] coerce_tmp[1963631])
                              (2219340 '.=' _args_forcoforall_fn[2219322] _3_chunk[2219309] chunk[2043402])
                              (2219344 '.=' _args_forcoforall_fn[2219322] _4__coforallCount[2219311] _coforallCount[1963945])
                              ref tmp[2219348]:1*int(64)[1256714] "temp"
                              (2219352 'move' tmp[2219348](2219350 'set reference' default_arg_offset[1963657]))
                              (2219354 '.=' _args_forcoforall_fn[2219322] _6_default_arg_offset[2219315] tmp[2219348])
                              (2219358 '.=' _args_forcoforall_fn[2219322] _7_copy[2219317] copy[1964044])
                              (2219362 '.=' _args_forcoforall_fn[2219322] _8_this[2219319] this[1964063])
                              val _args_vforcoforall_fn[2219366]:c_void_ptr[149] "temp"
                              (2219370 'move' _args_vforcoforall_fn[2219366](2219368 'cast_to_void_star' _args_forcoforall_fn[2219322]))
                              val _args_sizecoforall_fn[2219372]:int(64)[13] "temp"
                              (2219376 'move' _args_sizecoforall_fn[2219372](2219374 'sizeof_bundle' _class_localscoforall_fn[2219300]))
                              ref _taskListcoforall_fn[2219378]:c_void_ptr[149] "temp"
                              (2219383 'move' _taskListcoforall_fn[2219378](2219380 '.' _coforallCount[1963945] taskList[12712]))
                              val _taskListNodecoforall_fn[2219385]:int(64)[13] "temp"
                              (2219389 'move' _taskListNodecoforall_fn[2219385](2219387 '_wide_get_node' _coforallCount[1963945]))
                              (2219488 call wrapcoforall_fn[2219391] _taskListcoforall_fn[2219378] _taskListNodecoforall_fn[2219385] _args_vforcoforall_fn[2219366] _args_sizecoforall_fn[2219372] _args_forcoforall_fn[2219322])
                              {
                              }
                              label _continueLabel[2043421]
                            }
                            {
                              (2043363 '=' i[2043316] coerce_tmp[2043332])
                            }
                            {
                              (2043367 '<=' i[2043316] end[2043349])
                            }
                            {
                              val call_tmp[2043371]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              (2043373 '+=' i[2043316] 1)
                            }
                          }
                          label _endthese[2043396]
                        }
                        label _breakLabel[1963996]
                        val error[1963998]:Error[167984] "error variable" "temp"
                        (1964000 'move' error[1963998] nil[44])
                        (1964004 call _waitEndCount[1235226] _coforallCount[1963945] numTasks[1963951] error[1963998])
                        val errorExists[2226048]:bool[10] "temp"
                        (2226053 'move' errorExists[2226048](2226050 '!=' error[1963998] nil[44]))
                        if errorExists[2226048]
                        {
                          (1964012 call chpl_propagate_error[170518] error[1963998])
                        }
                        (1964016 call _endCountFree[1234049] _coforallCount[1963945])
                        (1964019 call _freeIterator[1102195] _iterator[1963967])
                      }
                      (1964022 call chpl__autoDestroy[1407763] tmpIter[1963921])
                      (1964025 call chpl__autoDestroy[1680875] call_tmp[1963923])
                    }
                  }
                  (1964029 call chpl__autoDestroy[1674803] tmp[1963728])
                  label _endthese[1964031]
                }
              }
              (1964034 call chpl_after_forall_fence[13071])
              (1964036 call chpl__autoDestroy[1697253] default_arg_offset[1963657])
              label _breakLabel[1964038]
            }
            label _endthese[1964040]
          }
          val coerce_tmp[1964072]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1964074 'move' coerce_tmp[1964072](1964076 'cast' object[22] this[1964063]))
          (1964080 call chpl__autoDestroy[1351354] coerce_tmp[1964072])
          val coerce_tmp[1964053]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1964055 'move' coerce_tmp[1964053](1964057 'cast' object[22] copy[1964044]))
          (1964061 call chpl__autoDestroy[1846254] coerce_tmp[1964053])
        }
        (1930726 call chpl_after_forall_fence[13071])
        val call_tmp[1856636]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1858285]:BaseRectangularArr(1,int(64),false,int(64))[1368653] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1858291 'move' coerce_tmp[1858285](1858287 'cast' BaseRectangularArr(1,int(64),false,int(64))[1368653] this[1855684]))
        ref call_tmp[1856879]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
        (1856881 'move' call_tmp[1856879](1856884 call off[1370214] this[1855684]))
        ref call_tmp[1856887]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1858302]:[domain(1,int(64),false)] int(64)[1368867] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1858307 'move' coerce_tmp[1858302] copy[1856552])
        (1856889 'move' call_tmp[1856887](1856892 call off[1370214] coerce_tmp[1858302]))
        (1856896 call =[1847029] call_tmp[1856879] call_tmp[1856887])
        ref call_tmp[1856901]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
        (1856903 'move' call_tmp[1856901](1856906 call blk[1370360] this[1855684]))
        ref call_tmp[1856909]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1858312]:[domain(1,int(64),false)] int(64)[1368867] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1858317 'move' coerce_tmp[1858312] copy[1856552])
        (1856911 'move' call_tmp[1856909](1856914 call blk[1370360] coerce_tmp[1858312]))
        (1856918 call =[1847029] call_tmp[1856901] call_tmp[1856909])
        ref call_tmp[1856923]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
        (1856925 'move' call_tmp[1856923](1856928 call str[1370296] this[1855684]))
        ref call_tmp[1856931]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1858322]:[domain(1,int(64),false)] int(64)[1368867] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1858327 'move' coerce_tmp[1858322] copy[1856552])
        (1856933 'move' call_tmp[1856931](1856936 call str[1370296] coerce_tmp[1858322]))
        (1856940 call =[1847029] call_tmp[1856923] call_tmp[1856931])
        ref call_tmp[1856945]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        (1856947 'move' call_tmp[1856945](1856950 call factoredOffs[1370656] this[1855684]))
        ref call_tmp[1856953]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1858332]:[domain(1,int(64),false)] int(64)[1368867] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1858337 'move' coerce_tmp[1858332] copy[1856552])
        (1856955 'move' call_tmp[1856953](1856958 call factoredOffs[1370656] coerce_tmp[1858332]))
        const-val coerce_tmp[1858340]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1858344 'move' coerce_tmp[1858340](1858342 'deref' call_tmp[1856953]))
        (1856962 call =[435443] call_tmp[1856945] coerce_tmp[1858340])
        (1856971 call dsiDestroyArr[1835161] this[1855684] 0)
        ref call_tmp[1856975]:_ref(_ddata(int(64)))[1368037] "dead after last mention" "maybe param" "temp"
        (1856977 'move' call_tmp[1856975](1856980 call data[1370861] this[1855684]))
        ref call_tmp[1856983]:_ref(_ddata(int(64)))[1368037] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1858349]:[domain(1,int(64),false)] int(64)[1368867] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1858354 'move' coerce_tmp[1858349] copy[1856552])
        (1856985 'move' call_tmp[1856983](1856988 call data[1370861] coerce_tmp[1858349]))
        val coerce_tmp[1858357]:_ddata(int(64))[1368028] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1858361 'move' coerce_tmp[1858357](1858359 'deref' call_tmp[1856983]))
        (1856992 call =[1371545] call_tmp[1856975] coerce_tmp[1858357])
        val call_tmp[1857035]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
        (1857037 'move' call_tmp[1857035](1857040 call _value[1253027] reallocD[1855955]))
        {
          const-val call_tmp[1857084]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (1857086 'move' call_tmp[1857084](1857089 call size[1435624] reallocD[1855955]))
          const-val call_tmp[1857092]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1857094 'move' call_tmp[1857092](1857097 call >[437788] call_tmp[1857084] 0))
          const-val call_tmp[1857100]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1857102 'move' call_tmp[1857100] call_tmp[1857092])
          if call_tmp[1857100]
          {
            ref call_tmp[1857109]:_ref(_ddata(int(64)))[1368037] "dead after last mention" "maybe param" "temp"
            (1857111 'move' call_tmp[1857109](1857114 call shiftedData[1373096] this[1855684]))
            ref call_tmp[1857117]:_ref(_ddata(int(64)))[1368037] "dead after last mention" "maybe param" "temp"
            val coerce_tmp[1858382]:[domain(1,int(64),false)] int(64)[1368867] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1858387 'move' coerce_tmp[1858382] copy[1856552])
            (1857119 'move' call_tmp[1857117](1857122 call shiftedData[1373096] coerce_tmp[1858382]))
            val coerce_tmp[1858390]:_ddata(int(64))[1368028] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1858394 'move' coerce_tmp[1858390](1858392 'deref' call_tmp[1857117]))
            (1857126 call =[1371545] call_tmp[1857109] coerce_tmp[1858390])
          }
        }
        (1857134 call chpl__delete[1858397] copy[1856552])
        (1929983 call chpl__autoDestroy[1697012] keep[1856582])
        (1929986 call chpl__autoDestroy[1407763] coerce_tmp[1858116])
      }
      (1929990 call chpl__autoDestroy[1697012] reallocD[1855955])
      (1929993 call chpl__autoDestroy[1407763] coerce_tmp[1857262])
    }
    label _end_dsiReallocate[1857139]
    (1857141 return _void[55])
  }
  function [domain(1,int(64),false)] range(int(64),bounded,false)[1409224].dsiReallocate[1859379](const in arg this[1859383]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224], const  ref arg bounds[1859423]:1*range(int(64),bounded,false)[1244885]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "ignore transfer errors" "virtual" "no return value for void"
  {
    val actuallyResizing[1859449]:bool[10] "dead at end of block" "insert auto destroy"
    (1859451 'move' actuallyResizing[1859449] 0)
    {
      val _indexOfInterest[1859456]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[1859458]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
      const-val call_tmp[1859460]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1918754]:range(int(64),bounded,false)[1027003] "temp"
      (1859465 call indices[1842671] bounds[1859423] ret_tmp[1918754])
      (1918757 'move' call_tmp[1859460] ret_tmp[1918754])
      (1859468 'move' _iterator[1859458](1859471 call _getIterator[1095509] call_tmp[1859460]))
      {
        val ret[2029165]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
        const-val _return_tmp_[2029167]:bool[10] "dead after last mention" "temp"
        const-val this[2029351]:range(int(64),bounded,false)[1027003] "temp"
        (2029356 'move' this[2029351](2029353 '.v' _iterator[1859458] F0_this[2113071]))
        (2029169 'move' _return_tmp_[2029167](2029172 call checkIfIterWillOverflow[1096003] this[2029351] 1))
        val i[2029175]:int(64)[13] "dead at end of block" "insert auto destroy"
        val call_tmp[2029177]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        (2029179 'move' i[2029175] 0)
        ref call_tmp[2029182]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
        const-val this[2029358]:range(int(64),bounded,false)[1027003] "temp"
        (2029363 'move' this[2029358](2029360 '.v' _iterator[1859458] F0_this[2113071]))
        (2029184 'move' call_tmp[2029182](2029187 call _low[1028641] this[2029358]))
        const-val start[2029189]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[2029191]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (2029193 'move' coerce_tmp[2029191](2029195 'deref' call_tmp[2029182]))
        (2029197 '=' start[2029189] coerce_tmp[2029191])
        (2029200 'noop')
        ref call_tmp[2029201]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
        const-val this[2029365]:range(int(64),bounded,false)[1027003] "temp"
        (2029370 'move' this[2029365](2029367 '.v' _iterator[1859458] F0_this[2113071]))
        (2029203 'move' call_tmp[2029201](2029206 call _high[1028849] this[2029365]))
        const end[2029208]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[2029210]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (2029212 'move' coerce_tmp[2029210](2029214 'deref' call_tmp[2029201]))
        (2029216 '=' end[2029208] coerce_tmp[2029210])
        (2029219 'noop')
        CForLoop[2029220]
        {
          const-val yret[2029235]:int(64)[13] "dead after last mention" "YVV" "temp"
          const-val call_tmp[2029237]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val this[2029372]:range(int(64),bounded,false)[1027003] "temp"
          (2029377 'move' this[2029372](2029374 '.v' _iterator[1859458] F0_this[2113071]))
          (2029239 'move' call_tmp[2029237](2029242 call chpl_intToIdx[1028669] this[2029372] i[2029175]))
          (2029245 'move' yret[2029235] call_tmp[2029237])
          const-val _yieldedIndex[2029259]:int(64)[13] "temp"
          (2029349 'move' _yieldedIndex[2029259] call_tmp[2029237])
          {
            const-val i[2029261]:int(64)[13] "const" "index var" "insert auto destroy"
            (2029263 'move' i[2029261] _yieldedIndex[2029259])
            {
              ref call_tmp[2029267]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "reference to a const" "temp"
              (2029269 'move' call_tmp[2029267](2029272 call this[1382848] bounds[1859423] i[2029261]))
              ref call_tmp[2029275]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
              (2029277 'move' call_tmp[2029275](2029280 call dom[1410591] this[1859383]))
              const-val call_tmp[2029282]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              val coerce_tmp[2029284]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2029286 'move' coerce_tmp[2029284](2029288 'deref' call_tmp[2029275]))
              val coerce_tmp[2029290]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2029292 'move' coerce_tmp[2029290] coerce_tmp[2029284])
              const-val ret_tmp[2029295]:range(int(64),bounded,false)[1027003] "temp"
              (2029298 call dsiDim[1258236] coerce_tmp[2029290] i[2029261] ret_tmp[2029295])
              (2029302 'move' call_tmp[2029282] ret_tmp[2029295])
              const-val call_tmp[2029305]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[2029307]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2029309 'move' coerce_tmp[2029307](2029311 'deref' call_tmp[2029267]))
              (2029313 'move' call_tmp[2029305](2029316 call !=[1842744] coerce_tmp[2029307] call_tmp[2029282]))
              const-val call_tmp[2029319]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2029321 'move' call_tmp[2029319] call_tmp[2029305])
              if call_tmp[2029319]
              {
                (2029327 call =[435290] actuallyResizing[1859449] 1)
                (2029331 call chpl__autoDestroy[1407763] coerce_tmp[2029307])
                (2029334 call chpl__autoDestroy[1407763] call_tmp[2029282])
                break _breakLabel[1859549] _breakLabel[1859549]
              }
              (2029340 call chpl__autoDestroy[1407763] coerce_tmp[2029307])
              (2029343 call chpl__autoDestroy[1407763] call_tmp[2029282])
            }
            label _continueLabel[2029345]
          }
          {
            (2029222 '=' i[2029175] coerce_tmp[2029191])
          }
          {
            (2029226 '<=' i[2029175] end[2029208])
          }
          {
            val call_tmp[2029230]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (2029232 '+=' i[2029175] 1)
          }
        }
        label _endthese[2029255]
      }
      label _breakLabel[1859549]
      (1930012 call _freeIterator[1102195] _iterator[1859458])
      (1930014 call chpl__autoDestroy[1407763] call_tmp[1859460])
    }
    const-val call_tmp[1859551]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1859553 'move' call_tmp[1859551](1859556 call ![7494] actuallyResizing[1859449]))
    const-val call_tmp[1859558]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1859560 'move' call_tmp[1859558] call_tmp[1859551])
    if call_tmp[1859558]
    {
      gotoReturn _end_dsiReallocate[1860838] _end_dsiReallocate[1860838]
    }
    val call_tmp[1859570]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val coerce_tmp[1860873]:BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1409010] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (1860879 'move' coerce_tmp[1860873](1860875 'cast' BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1409010] this[1859383]))
    const-val call_tmp[1859605]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (1859607 'move' call_tmp[1859605](1859609 '_wide_get_locale' this[1859383]))
    const-val call_tmp[1859611]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1906802]:locale[28] "temp"
    (1859616 call chpl_localeID_to_locale[92852] call_tmp[1859605] ret_tmp[1906802])
    (1906805 'move' call_tmp[1859611] ret_tmp[1906802])
    const-val call_tmp[1859618]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1906634]:locale[28] "temp"
    (1859623 call here[90438] ret_tmp[1906634])
    (1906637 'move' call_tmp[1859618] ret_tmp[1906634])
    const-val call_tmp[1859624]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1859626 'move' call_tmp[1859624](1859629 call !=[783099] call_tmp[1859611] call_tmp[1859618]))
    const-val call_tmp[1859632]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1859634 'move' call_tmp[1859632] call_tmp[1859624])
    if call_tmp[1859632]
    {
      (1859642 call halt[154111] "internal error: dsiReallocate() can only be called from an array's home locale")
    }
    (1930020 call chpl__autoDestroy[1601737] call_tmp[1859618])
    (1930017 call chpl__autoDestroy[1601737] call_tmp[1859611])
    {
      const-val call_tmp[1859646]:domain(1,int(64),false)[1252786] "dead at end of block" "maybe param" "temp"
      ref _tuple_expand_tmp_0[1860948]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "temp"
      (1860954 'move' _tuple_expand_tmp_0[1860948](1860958 '.' bounds[1859423] x0[1244883]))
      const-val coerce_tmp[1860961]:range(int(64),bounded,false)[1027003] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1860965 'move' coerce_tmp[1860961](1860963 'deref' _tuple_expand_tmp_0[1860948]))
      const-val ret_tmp[1911558]:domain(1,int(64),false)[1252786] "temp"
      (1859651 call chpl__buildDomainExpr[1244857] coerce_tmp[1860961] ret_tmp[1911558])
      (1911561 'move' call_tmp[1859646] ret_tmp[1911558])
      const-val reallocD[1859654]:domain(1,int(64),false)[1252786] "dead at end of block" "const" "insert auto destroy"
      const-val unaliasTemp[1911564]:domain(1,int(64),false)[1252786] "temp"
      (1911569 'move' unaliasTemp[1911564](1911565 call chpl__unalias[1697031] ret_tmp[1911558]))
      (1859656 'move' reallocD[1859654] unaliasTemp[1911564])
      const-val tmp[1859660]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val tmp[1859662]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val tmp[1859664]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val tmp[1859757]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val tmp[1859775]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1859777]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1859779 'move' call_tmp[1859777](1859782 call low[1510489] reallocD[1859654]))
      ref call_tmp[1859785]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
      (1859787 'move' call_tmp[1859785](1859790 call dom[1410591] this[1859383]))
      const-val call_tmp[1859793]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1860990]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1860994 'move' coerce_tmp[1860990](1860992 'deref' call_tmp[1859785]))
      val coerce_tmp[1860996]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1861001 'move' coerce_tmp[1860996] coerce_tmp[1860990])
      (1859795 'move' call_tmp[1859793](1859798 call dsiLow[1300625] coerce_tmp[1860996]))
      const-val call_tmp[1859801]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1859803 'move' call_tmp[1859801](1859806 call ==[435744] call_tmp[1859777] call_tmp[1859793]))
      (1859809 'move' tmp[1859775] call_tmp[1859801])
      (1859814 'move' tmp[1859757] tmp[1859775])
      (1859826 'move' tmp[1859664] tmp[1859757])
      val tmp[1859842]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1859844]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1859846]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1859848 'move' call_tmp[1859846] tmp[1859664])
      (1859853 'move' tmp[1859844] call_tmp[1859846])
      if tmp[1859844]
      {
        const-val tmp[1859860]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1859862]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1859864 'move' call_tmp[1859862](1859867 call stride[1842934] reallocD[1859654]))
        ref call_tmp[1859870]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
        (1859872 'move' call_tmp[1859870](1859875 call dom[1410591] this[1859383]))
        const-val call_tmp[1859878]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1861010]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1861014 'move' coerce_tmp[1861010](1861012 'deref' call_tmp[1859870]))
        val coerce_tmp[1861016]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1861021 'move' coerce_tmp[1861016] coerce_tmp[1861010])
        (1859880 'move' call_tmp[1859878](1859883 call dsiStride[1842972] coerce_tmp[1861016]))
        const-val call_tmp[1859886]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1859888 'move' call_tmp[1859886](1859891 call ==[435744] call_tmp[1859862] call_tmp[1859878]))
        (1859894 'move' tmp[1859860] call_tmp[1859886])
        (1859899 'move' tmp[1859842] tmp[1859860])
      }
      {
        (1859905 'move' tmp[1859842] 0)
      }
      (1859911 'move' tmp[1859662] tmp[1859842])
      val tmp[1859927]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1859929]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1859931]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1859933 'move' call_tmp[1859931] tmp[1859662])
      (1859938 'move' tmp[1859929] call_tmp[1859931])
      if tmp[1859929]
      {
        const-val tmp[1859945]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        ref call_tmp[1859947]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
        (1859949 'move' call_tmp[1859947](1859952 call dom[1410591] this[1859383]))
        const-val call_tmp[1859955]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1861029]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1861033 'move' coerce_tmp[1861029](1861031 'deref' call_tmp[1859947]))
        val coerce_tmp[1861035]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1861040 'move' coerce_tmp[1861035] coerce_tmp[1861029])
        (1859957 'move' call_tmp[1859955](1859960 call dsiNumIndices[1263823] coerce_tmp[1861035]))
        const-val call_tmp[1859963]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1859965 'move' call_tmp[1859963](1859968 call >[437788] call_tmp[1859955] 0))
        (1859971 'move' tmp[1859945] call_tmp[1859963])
        (1859976 'move' tmp[1859927] tmp[1859945])
      }
      {
        (1859982 'move' tmp[1859927] 0)
      }
      (1859988 'move' tmp[1859660] tmp[1859927])
      val tmp[1860004]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1860006]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1860008]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1860010 'move' call_tmp[1860008] tmp[1859660])
      (1860015 'move' tmp[1860006] call_tmp[1860008])
      if tmp[1860006]
      {
        const-val tmp[1860022]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1860024]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1860026 'move' call_tmp[1860024](1860029 call size[1435624] reallocD[1859654]))
        const-val call_tmp[1860032]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1860034 'move' call_tmp[1860032](1860037 call >[437788] call_tmp[1860024] 0))
        (1860040 'move' tmp[1860022] call_tmp[1860032])
        (1860045 'move' tmp[1860004] tmp[1860022])
      }
      {
        (1860051 'move' tmp[1860004] 0)
      }
      const-val call_tmp[1860057]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1860059 'move' call_tmp[1860057] tmp[1860004])
      if call_tmp[1860057]
      {
        ref call_tmp[1860079]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        ref _this_tmp_[1861052]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
        (1861054 'move' _this_tmp_[1861052](1860084 call sizesPerDim[1474592] this[1859383]))
        (1860081 'move' call_tmp[1860079](1861059 '.' _this_tmp_[1861052] x0[1256712]))
        const-val call_tmp[1860089]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const _chpl_forward_tgt[1861082]:domain(1,int(64),false)[1251123] "dead after last mention" "const" "maybe ref" "maybe type" "temp"
        (1861088 'move' _chpl_forward_tgt[1861082](1861085 call chpl_forwarding_expr5__value[1253895] reallocD[1859654]))
        val coerce_tmp[1861091]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1861096 'move' coerce_tmp[1861091] _chpl_forward_tgt[1861082])
        const-val ret_tmp[1912442]:range(int(64),bounded,false)[1027003] "temp"
        (1860097 call dsiDim[1258249] coerce_tmp[1861091] ret_tmp[1912442])
        (1912445 'move' call_tmp[1860089] ret_tmp[1912442])
        const-val call_tmp[1860099]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1860101 'move' call_tmp[1860099](1860104 call size[1035978] call_tmp[1860089]))
        (1860108 call =[435443] call_tmp[1860079] call_tmp[1860099])
        (1930023 call chpl__autoDestroy[1407763] call_tmp[1860089])
        ref call_tmp[1860113]:_ref(_ddata(range(int(64),bounded,false)))[1406051] "dead after last mention" "maybe param" "temp"
        (1860115 'move' call_tmp[1860113](1860118 call data[1411200] this[1859383]))
        ref call_tmp[1860121]:_ref(_ddata(range(int(64),bounded,false)))[1406051] "dead after last mention" "maybe param" "temp"
        (1860123 'move' call_tmp[1860121](1860126 call data[1411200] this[1859383]))
        val call_tmp[1860129]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1861103]:BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1409010] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1861109 'move' coerce_tmp[1861103](1861105 'cast' BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1409010] this[1859383]))
        ref call_tmp[1860137]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
        (1860139 'move' call_tmp[1860137](1860142 call dom[1410591] this[1859383]))
        const-val call_tmp[1860145]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1861114]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1861118 'move' coerce_tmp[1861114](1861116 'deref' call_tmp[1860137]))
        val coerce_tmp[1861120]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1861125 'move' coerce_tmp[1861120] coerce_tmp[1861114])
        (1860147 'move' call_tmp[1860145](1860150 call dsiNumIndices[1263823] coerce_tmp[1861120]))
        const-val call_tmp[1860153]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1860155 'move' call_tmp[1860153](1860158 call size[1435624] reallocD[1859654]))
        val call_tmp[1860161]:_ddata(range(int(64),bounded,false))[1406042] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1861587]:_ddata(range(int(64),bounded,false))[1406042] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1861591 'move' coerce_tmp[1861587](1861589 'deref' call_tmp[1860121]))
        const-val default_arg_subloc[1861611]:int(32)[95] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1861615 'move' default_arg_subloc[1861611](1861613 call _ddata_reallocate_default_subloc[1861594]))
        (1860163 'move' call_tmp[1860161](1860166 call _ddata_reallocate[1861129] coerce_tmp[1861587] call_tmp[1860145] call_tmp[1860153] default_arg_subloc[1861611]))
        (1860174 call =[1406365] call_tmp[1860113] call_tmp[1860161])
        (1860183 call initShiftedData[1414235] this[1859383])
      }
      {
        val call_tmp[1860185]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1861651]:BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1409010] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1861657 'move' coerce_tmp[1861651](1861653 'cast' BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1409010] this[1859383]))
        val call_tmp[1860201]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1861663]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1861669 'move' coerce_tmp[1861663](1861665 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256408] this[1859383]))
        val call_tmp[1860209]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
        (1860211 'move' call_tmp[1860209](1860214 call _value[1253027] reallocD[1859654]))
        val call_tmp[1860225]:domain(1,int(64),false)[1251123] "dead at end of block" "expr temp" "maybe param" "temp"
        (1860227 'move' call_tmp[1860225](1860230 call _value[1253027] reallocD[1859654]))
        val call_tmp[1860233]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead at end of block" "insert auto destroy for explicit new" "maybe param" "temp"
        val new_temp[1861703]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead at end of block" "temp"
        val default_arg_data[1861747]:_ddata(range(int(64),bounded,false))[1406042] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1861751 'move' default_arg_data[1861747](1861749 call _new_default_data[1417191]))
        const-val default_arg_externFreeFunc[1861773]:nil[42] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1861777 'move' default_arg_externFreeFunc[1861773](1861775 call _new_default_externFreeFunc[1414925]))
        (1861705 'move' new_temp[1861703](1861681 call _new[1414744] call_tmp[1860225] default_arg_data[1861747] 0 0 default_arg_externFreeFunc[1861773]))
        (1860235 'move' call_tmp[1860233] new_temp[1861703])
        val copy[1860251]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead at end of block" "insert auto destroy"
        (1860253 'move' copy[1860251](1861781 call chpl__initCopy[1414974] call_tmp[1860233]))
        ref call_tmp[1860257]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
        (1860259 'move' call_tmp[1860257](1860262 call dom[1410591] this[1859383]))
        ref call_tmp[1860265]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "maybe param" "temp"
        val coerce_tmp[1861785]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1861789 'move' coerce_tmp[1861785](1861787 'deref' call_tmp[1860257]))
        val coerce_tmp[1861791]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1861796 'move' coerce_tmp[1861791] coerce_tmp[1861785])
        (1860267 'move' call_tmp[1860265](1860270 call ranges[1251533] coerce_tmp[1861791]))
        const-val call_tmp[1860273]:domain(1,int(64),false)[1252786] "dead at end of block" "maybe param" "temp"
        ref _tuple_expand_tmp_0[1861800]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "temp"
        (1861806 'move' _tuple_expand_tmp_0[1861800](1861810 '.' call_tmp[1860265] x0[1244883]))
        const-val coerce_tmp[1861815]:range(int(64),bounded,false)[1027003] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1861819 'move' coerce_tmp[1861815](1861817 'deref' _tuple_expand_tmp_0[1861800]))
        const-val ret_tmp[1918828]:domain(1,int(64),false)[1252786] "temp"
        (1860278 call this[1844078] reallocD[1859654] coerce_tmp[1861815] ret_tmp[1918828])
        (1918831 'move' call_tmp[1860273] ret_tmp[1918828])
        const-val keep[1860281]:domain(1,int(64),false)[1252786] "dead at end of block" "insert auto destroy"
        const-val unaliasTemp[1918834]:domain(1,int(64),false)[1252786] "temp"
        (1918839 'move' unaliasTemp[1918834](1918835 call chpl__unalias[1697031] ret_tmp[1918828]))
        (1860283 'move' keep[1860281] unaliasTemp[1918834])
        {
          ref i_this[1964590]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812] "ref to immutable" "temp"
          (1964594 'move' i_this[1964590](1964592 'set reference' keep[1860281]))
          const-val copy[1965020]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "concurrently accessed" "const"
          (1965023 'move' copy[1965020](1965026 call chpl__initCopy[1414974] copy[1860251]))
          const-val this[1965039]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "concurrently accessed" "const"
          (1965042 'move' this[1965039](1965045 call chpl__initCopy[1482425] this[1859383]))
          {
            val ret[1964597]:nothing[7] "dead after last mention" "RVV" "temp"
            {
              val call_tmp[1964600]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
              (1964602 'move' call_tmp[1964600](1964605 call _value[1253027] i_this[1964590]))
              val coerce_tmp[1964607]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "concurrently accessed" "insert auto destroy" "temp"
              (1964609 'move' coerce_tmp[1964607] call_tmp[1964600])
              const-val default_arg_tasksPerLocale[1964612]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              (1964614 'move' default_arg_tasksPerLocale[1964612](1964617 call these_default_tasksPerLocale[1315258] coerce_tmp[1964607]))
              const-val default_arg_ignoreRunning[1964619]:bool[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              (1964621 'move' default_arg_ignoreRunning[1964619](1964624 call these_default_ignoreRunning[1315289] coerce_tmp[1964607]))
              const-val default_arg_minIndicesPerTask[1964626]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              (1964628 'move' default_arg_minIndicesPerTask[1964626](1964631 call these_default_minIndicesPerTask[1315320] coerce_tmp[1964607]))
              val default_arg_offset[1964633]:1*int(64)[1256714] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
              const-val ret_tmp[1964635]:1*int(64)[1256714] "temp"
              (1964638 call these_default_offset[1315351] coerce_tmp[1964607] ret_tmp[1964635])
              (1964641 'move' default_arg_offset[1964633] ret_tmp[1964635])
              {
                const-ref i_offset[1964645]:1*int(64)[1256714] "temp"
                (1964647 'move' i_offset[1964645](1964649 'set reference' default_arg_offset[1964633]))
                {
                  val ret[1964652]:nothing[7] "dead after last mention" "RVV" "temp"
                  const-val numTasks[1964654]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                  val tmp[1964656]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
                  const-val tmp[1964658]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[1964660]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1964662 'move' call_tmp[1964660](1964665 call ==[435744] default_arg_tasksPerLocale[1964612] 0))
                  (1964668 'move' tmp[1964658] call_tmp[1964660])
                  if tmp[1964658]
                  {
                    const-val tmp[1964673]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
                    const-val call_tmp[1964675]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1964677]:locale[28] "temp"
                    (1964680 call here[90438] ret_tmp[1964677])
                    (1964682 'move' call_tmp[1964675] ret_tmp[1964677])
                    (1964685 'move' tmp[1964673](1964688 call maxTaskPar[90545] call_tmp[1964675]))
                    (1964690 'move' tmp[1964656] tmp[1964673])
                    (1964694 call chpl__autoDestroy[1601737] call_tmp[1964675])
                  }
                  {
                    (1964697 'move' tmp[1964656] default_arg_tasksPerLocale[1964612])
                  }
                  (1964701 'move' numTasks[1964654] tmp[1964656])
                  const-val tmp[1964704]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
                  val tmp[1964706]:2*int(64)[1040245] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                  const-val tmp[1964708]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[1964710]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1964712 'move' call_tmp[1964710](1964714 'task_get_serial'))
                  (1964715 'move' tmp[1964708] call_tmp[1964710])
                  if tmp[1964708]
                  {
                    const-val tmp[1964720]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                    const-val ret_tmp[1964722]:2*int(64)[1040245] "temp"
                    (1964725 call _build_tuple[1040203] 1 -1 ret_tmp[1964722])
                    (1964729 'move' tmp[1964720] ret_tmp[1964722])
                    (1964732 'move' tmp[1964706] tmp[1964720])
                  }
                  {
                    const-val tmp[1964736]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                    ref call_tmp[1964738]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "maybe param" "temp"
                    (1964740 'move' call_tmp[1964738](1964743 call ranges[1251533] coerce_tmp[1964607]))
                    const-val ret_tmp[1964745]:2*int(64)[1040245] "temp"
                    (1964748 call _computeChunkStuff[1381155] numTasks[1964654] default_arg_ignoreRunning[1964619] default_arg_minIndicesPerTask[1964626] call_tmp[1964738] ret_tmp[1964745])
                    (1964754 'move' tmp[1964736] ret_tmp[1964745])
                    (1964757 'move' tmp[1964706] tmp[1964736])
                  }
                  (1964761 '=' tmp[1964704] tmp[1964706])
                  (1964764 'noop')
                  1
                  ref call_tmp[1964766]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                  (1964768 'move' call_tmp[1964766](1964770 '.' tmp[1964704] x0[1040241]))
                  const-val numChunks[1964773]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                  const-val coerce_tmp[1964775]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                  (1964777 'move' coerce_tmp[1964775](1964779 'deref' call_tmp[1964766]))
                  (1964781 '=' numChunks[1964773] coerce_tmp[1964775])
                  (1964784 'noop')
                  ref call_tmp[1964785]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                  (1964787 'move' call_tmp[1964785](1964789 '.' tmp[1964704] x1[1040243]))
                  const-val parDim[1964792]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                  const-val coerce_tmp[1964794]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                  (1964796 'move' coerce_tmp[1964794](1964798 'deref' call_tmp[1964785]))
                  (1964800 '=' parDim[1964792] coerce_tmp[1964794])
                  (1964803 'noop')
                  const-val call_tmp[1964804]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1964806 'move' call_tmp[1964804](1964809 call <=[437128] numChunks[1964773] 1))
                  const-val call_tmp[1964812]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1964814 'move' call_tmp[1964812] call_tmp[1964804])
                  if call_tmp[1964812]
                  {
                    {
                      val _indexOfInterest[1964820]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1964822]:_ic_these_help_DefaultRectangularDom_1_int64_t_F[1383595] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1964824]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1383601] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1964826]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1383601] "temp"
                      (1964829 call these_help[1383178] coerce_tmp[1964607] ret_tmp[1964826])
                      (1964832 'move' call_tmp[1964824] ret_tmp[1964826])
                      (1964835 'move' _iterator[1964822](1964838 call _getIterator[1383610] call_tmp[1964824]))
                      {
                        val ret[2043718]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1383601] "dead after last mention" "RVV" "temp"
                        val _indexOfInterest[2043720]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[2043722]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
                        ref call_tmp[2043724]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
                        ref _this_tmp_[2043726]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "temp"
                        const-val this[2043980]:domain(1,int(64),false)[1251123] "temp"
                        (2043985 'move' this[2043980](2043982 '.v' _iterator[1964822] F0_this[2134554]))
                        (2043728 'move' _this_tmp_[2043726](2043731 call ranges[1251533] this[2043980]))
                        (2043733 'move' call_tmp[2043724](2043735 '.' _this_tmp_[2043726] x0[1244883]))
                        (2043738 'move' _iterator[2043722](2043741 call _getIterator[1095509] call_tmp[2043724]))
                        {
                          val ret[2043744]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
                          const-val _return_tmp_[2043746]:bool[10] "dead after last mention" "temp"
                          const-val this[2043748]:range(int(64),bounded,false)[1027003] "temp"
                          (2043750 'move' this[2043748](2043752 '.v' _iterator[2043722] F0_this[2113071]))
                          (2043755 'move' _return_tmp_[2043746](2043758 call checkIfIterWillOverflow[1096003] this[2043748] 1))
                          val i[2043761]:int(64)[13] "dead at end of block" "insert auto destroy"
                          val call_tmp[2043763]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (2043765 'move' i[2043761] 0)
                          ref call_tmp[2043768]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
                          const-val this[2043770]:range(int(64),bounded,false)[1027003] "temp"
                          (2043772 'move' this[2043770](2043774 '.v' _iterator[2043722] F0_this[2113071]))
                          (2043777 'move' call_tmp[2043768](2043780 call _low[1028641] this[2043770]))
                          const-val start[2043782]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                          const-val coerce_tmp[2043784]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                          (2043786 'move' coerce_tmp[2043784](2043788 'deref' call_tmp[2043768]))
                          (2043790 '=' start[2043782] coerce_tmp[2043784])
                          (2043793 'noop')
                          ref call_tmp[2043794]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
                          const-val this[2043796]:range(int(64),bounded,false)[1027003] "temp"
                          (2043798 'move' this[2043796](2043800 '.v' _iterator[2043722] F0_this[2113071]))
                          (2043803 'move' call_tmp[2043794](2043806 call _high[1028849] this[2043796]))
                          const end[2043808]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                          const-val coerce_tmp[2043810]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                          (2043812 'move' coerce_tmp[2043810](2043814 'deref' call_tmp[2043794]))
                          (2043816 '=' end[2043808] coerce_tmp[2043810])
                          (2043819 'noop')
                          CForLoop[2043820] order-independent
                          {
                            const-val yret[2043835]:int(64)[13] "dead after last mention" "YVV" "temp"
                            const-val call_tmp[2043837]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val this[2043839]:range(int(64),bounded,false)[1027003] "temp"
                            (2043841 'move' this[2043839](2043843 '.v' _iterator[2043722] F0_this[2113071]))
                            (2043846 'move' call_tmp[2043837](2043849 call chpl_intToIdx[1028669] this[2043839] i[2043761]))
                            (2043852 'move' yret[2043835] call_tmp[2043837])
                            const-val _yieldedIndex[2043855]:int(64)[13] "temp"
                            (2043857 'move' _yieldedIndex[2043855] call_tmp[2043837])
                            {
                              const-val i[2043861]:int(64)[13] "const" "index var" "insert auto destroy"
                              (2043863 'move' i[2043861] _yieldedIndex[2043855])
                              const-val yret[2043866]:int(64)[13] "dead after last mention" "YVV" "temp"
                              (2043868 'move' yret[2043866] _yieldedIndex[2043855])
                              const-val _yieldedIndex[2043890]:int(64)[13] "temp"
                              (2043978 'move' _yieldedIndex[2043890] _yieldedIndex[2043855])
                              {
                                const-val i[2043892]:int(64)[13] "const" "index var" "insert auto destroy"
                                (2043894 'move' i[2043892] _yieldedIndex[2043890])
                                {
                                  const-val yret[2043898]:int(64)[13] "dead after last mention" "YVV" "temp"
                                  (2043900 'move' yret[2043898] i[2043892])
                                  const-val _indexOfInterest[2043903]:int(64)[13] "dead at end of block" "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                  (2043905 'move' _indexOfInterest[2043903] yret[2043898])
                                  {
                                    const-val i[2043909]:int(64)[13] "const" "index var" "insert auto destroy"
                                    (2043911 'move' i[2043909] _indexOfInterest[2043903])
                                    const-val yret[2043914]:int(64)[13] "dead after last mention" "YVV" "temp"
                                    (2043916 'move' yret[2043914] i[2043909])
                                    const-val i[2043919]:int(64)[13] "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy"
                                    (2043921 'move' i[2043919] yret[2043914])
                                    {
                                      ref dst[2043925]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "ref var"
                                      ref call_tmp[2043927]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
                                      val coerce_tmp[2043929]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                      (2043931 'move' coerce_tmp[2043929] copy[1965020])
                                      val coerce_tmp[2043934]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                      (2043936 'move' coerce_tmp[2043934] copy[1965020])
                                      val coerce_tmp[2043939]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                      (2043941 'move' coerce_tmp[2043939] copy[1965020])
                                      (2043944 'move' call_tmp[2043927](2043947 call dsiAccess[1488672] coerce_tmp[2043929] i[2043919]))
                                      (2043950 'move' dst[2043925] call_tmp[2043927])
                                      ref src[2043953]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "const" "ref var"
                                      ref call_tmp[2043955]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
                                      (2043957 'move' call_tmp[2043955](2043960 call dsiAccess[1488950] this[1965039] i[2043919]))
                                      (2043963 'move' src[2043953] call_tmp[2043955])
                                      (2043966 '=' dst[2043925] src[2043953])
                                      val optinfo[2043969]:int(64)[13] "no codegen" "temp" "forall no task private"
                                      (2043971 'optimization info' optinfo[2043969])
                                    }
                                    label _continueLabel[2043973]
                                  }
                                }
                                label _continueLabel[2043975]
                              }
                            }
                            {
                              (2043822 '=' i[2043761] coerce_tmp[2043784])
                            }
                            {
                              (2043826 '<=' i[2043761] end[2043808])
                            }
                            {
                              val call_tmp[2043830]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              (2043832 '+=' i[2043761] 1)
                            }
                          }
                          label _endthese[2043881]
                        }
                        (2043884 call _freeIterator[1102195] _iterator[2043722])
                        label _endthese_help[2043886]
                      }
                      label _breakLabel[1964890]
                      (1964893 call _freeIterator[1383783] _iterator[1964822])
                    }
                  }
                  {
                    {
                      const-val tmpIter[1964897]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe ref" "no copy" "temp"
                      const-val call_tmp[1964899]:range(int(64),boundedLow,false)[1087754] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
                      const-val ret_tmp[1964901]:range(int(64),boundedLow,false)[1087754] "temp"
                      (1964904 call chpl_build_low_bounded_range[1087147] 0 ret_tmp[1964901])
                      (1964907 'move' call_tmp[1964899] ret_tmp[1964901])
                      const-val ret_tmp[1964910]:range(int(64),bounded,false)[1027003] "temp"
                      (1964913 call #[1088114] call_tmp[1964899] numChunks[1964773] ret_tmp[1964910])
                      (1964917 'move' tmpIter[1964897] ret_tmp[1964910])
                      {
                        const _coforallCount[1964921]:_EndCount(AtomicT(int(64)),int(64))[945532] "dead after last mention" "concurrently accessed" "const" "end count" "temp"
                        (1964923 'move' _coforallCount[1964921](1964926 call _endCountAlloc[1228107]))
                        const-val numTasks[1964927]:int(64)[13] "dead at end of block" "temp"
                        (1964929 'move' numTasks[1964927](1964932 call size[1035978] tmpIter[1964897]))
                        (1964935 call _upEndCount[1228350] _coforallCount[1964921] numTasks[1964927])
                        (1964939 call chpl_resetTaskSpawn[1229432] numTasks[1964927])
                        val _indexOfInterest[1964941]:int(64)[13] "dead at end of block" "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[1964943]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
                        (1964945 'move' _iterator[1964943](1964948 call _getIterator[1095509] tmpIter[1964897]))
                        {
                          val ret[2043988]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
                          const-val _return_tmp_[2043990]:bool[10] "dead after last mention" "temp"
                          const-val this[2044108]:range(int(64),bounded,false)[1027003] "temp"
                          (2044113 'move' this[2044108](2044110 '.v' _iterator[1964943] F0_this[2113071]))
                          (2043992 'move' _return_tmp_[2043990](2043995 call checkIfIterWillOverflow[1096003] this[2044108] 1))
                          val i[2043998]:int(64)[13] "dead at end of block" "insert auto destroy"
                          val call_tmp[2044000]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (2044002 'move' i[2043998] 0)
                          ref call_tmp[2044005]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
                          const-val this[2044115]:range(int(64),bounded,false)[1027003] "temp"
                          (2044120 'move' this[2044115](2044117 '.v' _iterator[1964943] F0_this[2113071]))
                          (2044007 'move' call_tmp[2044005](2044010 call _low[1028641] this[2044115]))
                          const-val start[2044012]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                          const-val coerce_tmp[2044014]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                          (2044016 'move' coerce_tmp[2044014](2044018 'deref' call_tmp[2044005]))
                          (2044020 '=' start[2044012] coerce_tmp[2044014])
                          (2044023 'noop')
                          ref call_tmp[2044024]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
                          const-val this[2044122]:range(int(64),bounded,false)[1027003] "temp"
                          (2044127 'move' this[2044122](2044124 '.v' _iterator[1964943] F0_this[2113071]))
                          (2044026 'move' call_tmp[2044024](2044029 call _high[1028849] this[2044122]))
                          const end[2044031]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                          const-val coerce_tmp[2044033]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                          (2044035 'move' coerce_tmp[2044033](2044037 'deref' call_tmp[2044024]))
                          (2044039 '=' end[2044031] coerce_tmp[2044033])
                          (2044042 'noop')
                          CForLoop[2044043]
                          {
                            const-val yret[2044058]:int(64)[13] "dead after last mention" "YVV" "temp"
                            const-val call_tmp[2044060]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val this[2044129]:range(int(64),bounded,false)[1027003] "temp"
                            (2044134 'move' this[2044129](2044131 '.v' _iterator[1964943] F0_this[2113071]))
                            (2044062 'move' call_tmp[2044060](2044065 call chpl_intToIdx[1028669] this[2044129] i[2043998]))
                            (2044068 'move' yret[2044058] call_tmp[2044060])
                            const-val _yieldedIndex[2044082]:int(64)[13] "coforall index var" "temp"
                            (2044106 'move' _yieldedIndex[2044082] call_tmp[2044060])
                            {
                              const-val chunk[2044084]:int(64)[13] "coforall index var" "const" "index var" "insert auto destroy"
                              (2044086 'move' chunk[2044084] _yieldedIndex[2044082])
                              val dummy_error[2044089]:Error[167984] "concurrently accessed" "error variable" "temp"
                              val _args_forcoforall_fn[2219516]:_class_localscoforall_fn[2219494] "temp"
                              (2219520 'move' _args_forcoforall_fn[2219516](2219518 'stack allocate class' _class_localscoforall_fn[2219494]))
                              (2219522 '.=' _args_forcoforall_fn[2219516] _0_parDim[2219497] parDim[1964792])
                              (2219526 '.=' _args_forcoforall_fn[2219516] _1_numChunks[2219499] numChunks[1964773])
                              (2219530 '.=' _args_forcoforall_fn[2219516] _2_coerce_tmp[2219501] coerce_tmp[1964607])
                              (2219534 '.=' _args_forcoforall_fn[2219516] _3_chunk[2219503] chunk[2044084])
                              (2219538 '.=' _args_forcoforall_fn[2219516] _4__coforallCount[2219505] _coforallCount[1964921])
                              ref tmp[2219542]:1*int(64)[1256714] "temp"
                              (2219546 'move' tmp[2219542](2219544 'set reference' default_arg_offset[1964633]))
                              (2219548 '.=' _args_forcoforall_fn[2219516] _6_default_arg_offset[2219509] tmp[2219542])
                              (2219552 '.=' _args_forcoforall_fn[2219516] _7_copy[2219511] copy[1965020])
                              (2219556 '.=' _args_forcoforall_fn[2219516] _8_this[2219513] this[1965039])
                              val _args_vforcoforall_fn[2219560]:c_void_ptr[149] "temp"
                              (2219564 'move' _args_vforcoforall_fn[2219560](2219562 'cast_to_void_star' _args_forcoforall_fn[2219516]))
                              val _args_sizecoforall_fn[2219566]:int(64)[13] "temp"
                              (2219570 'move' _args_sizecoforall_fn[2219566](2219568 'sizeof_bundle' _class_localscoforall_fn[2219494]))
                              ref _taskListcoforall_fn[2219572]:c_void_ptr[149] "temp"
                              (2219577 'move' _taskListcoforall_fn[2219572](2219574 '.' _coforallCount[1964921] taskList[12712]))
                              val _taskListNodecoforall_fn[2219579]:int(64)[13] "temp"
                              (2219583 'move' _taskListNodecoforall_fn[2219579](2219581 '_wide_get_node' _coforallCount[1964921]))
                              (2219682 call wrapcoforall_fn[2219585] _taskListcoforall_fn[2219572] _taskListNodecoforall_fn[2219579] _args_vforcoforall_fn[2219560] _args_sizecoforall_fn[2219566] _args_forcoforall_fn[2219516])
                              {
                              }
                              label _continueLabel[2044103]
                            }
                            {
                              (2044045 '=' i[2043998] coerce_tmp[2044014])
                            }
                            {
                              (2044049 '<=' i[2043998] end[2044031])
                            }
                            {
                              val call_tmp[2044053]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              (2044055 '+=' i[2043998] 1)
                            }
                          }
                          label _endthese[2044078]
                        }
                        label _breakLabel[1964972]
                        val error[1964974]:Error[167984] "error variable" "temp"
                        (1964976 'move' error[1964974] nil[44])
                        (1964980 call _waitEndCount[1235226] _coforallCount[1964921] numTasks[1964927] error[1964974])
                        val errorExists[2226056]:bool[10] "temp"
                        (2226061 'move' errorExists[2226056](2226058 '!=' error[1964974] nil[44]))
                        if errorExists[2226056]
                        {
                          (1964988 call chpl_propagate_error[170518] error[1964974])
                        }
                        (1964992 call _endCountFree[1234049] _coforallCount[1964921])
                        (1964995 call _freeIterator[1102195] _iterator[1964943])
                      }
                      (1964998 call chpl__autoDestroy[1407763] tmpIter[1964897])
                      (1965001 call chpl__autoDestroy[1680875] call_tmp[1964899])
                    }
                  }
                  (1965005 call chpl__autoDestroy[1674803] tmp[1964704])
                  label _endthese[1965007]
                }
              }
              (1965010 call chpl_after_forall_fence[13071])
              (1965012 call chpl__autoDestroy[1697253] default_arg_offset[1964633])
              label _breakLabel[1965014]
            }
            label _endthese[1965016]
          }
          val coerce_tmp[1965048]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1965050 'move' coerce_tmp[1965048](1965052 'cast' object[22] this[1965039]))
          (1965056 call chpl__autoDestroy[1351354] coerce_tmp[1965048])
          val coerce_tmp[1965029]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1965031 'move' coerce_tmp[1965029](1965033 'cast' object[22] copy[1965020]))
          (1965037 call chpl__autoDestroy[1846254] coerce_tmp[1965029])
        }
        (1930735 call chpl_after_forall_fence[13071])
        val call_tmp[1860335]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1861984]:BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1409010] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1861990 'move' coerce_tmp[1861984](1861986 'cast' BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1409010] this[1859383]))
        ref call_tmp[1860578]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
        (1860580 'move' call_tmp[1860578](1860583 call off[1410553] this[1859383]))
        ref call_tmp[1860586]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1862001]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1862006 'move' coerce_tmp[1862001] copy[1860251])
        (1860588 'move' call_tmp[1860586](1860591 call off[1410553] coerce_tmp[1862001]))
        (1860595 call =[1847029] call_tmp[1860578] call_tmp[1860586])
        ref call_tmp[1860600]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
        (1860602 'move' call_tmp[1860600](1860605 call blk[1410699] this[1859383]))
        ref call_tmp[1860608]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1862011]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1862016 'move' coerce_tmp[1862011] copy[1860251])
        (1860610 'move' call_tmp[1860608](1860613 call blk[1410699] coerce_tmp[1862011]))
        (1860617 call =[1847029] call_tmp[1860600] call_tmp[1860608])
        ref call_tmp[1860622]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
        (1860624 'move' call_tmp[1860622](1860627 call str[1410635] this[1859383]))
        ref call_tmp[1860630]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1862021]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1862026 'move' coerce_tmp[1862021] copy[1860251])
        (1860632 'move' call_tmp[1860630](1860635 call str[1410635] coerce_tmp[1862021]))
        (1860639 call =[1847029] call_tmp[1860622] call_tmp[1860630])
        ref call_tmp[1860644]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        (1860646 'move' call_tmp[1860644](1860649 call factoredOffs[1410995] this[1859383]))
        ref call_tmp[1860652]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1862031]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1862036 'move' coerce_tmp[1862031] copy[1860251])
        (1860654 'move' call_tmp[1860652](1860657 call factoredOffs[1410995] coerce_tmp[1862031]))
        const-val coerce_tmp[1862039]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1862043 'move' coerce_tmp[1862039](1862041 'deref' call_tmp[1860652]))
        (1860661 call =[435443] call_tmp[1860644] coerce_tmp[1862039])
        (1860670 call dsiDestroyArr[1836092] this[1859383] 0)
        ref call_tmp[1860674]:_ref(_ddata(range(int(64),bounded,false)))[1406051] "dead after last mention" "maybe param" "temp"
        (1860676 'move' call_tmp[1860674](1860679 call data[1411200] this[1859383]))
        ref call_tmp[1860682]:_ref(_ddata(range(int(64),bounded,false)))[1406051] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1862048]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1862053 'move' coerce_tmp[1862048] copy[1860251])
        (1860684 'move' call_tmp[1860682](1860687 call data[1411200] coerce_tmp[1862048]))
        val coerce_tmp[1862056]:_ddata(range(int(64),bounded,false))[1406042] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1862060 'move' coerce_tmp[1862056](1862058 'deref' call_tmp[1860682]))
        (1860691 call =[1406365] call_tmp[1860674] coerce_tmp[1862056])
        val call_tmp[1860734]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
        (1860736 'move' call_tmp[1860734](1860739 call _value[1253027] reallocD[1859654]))
        {
          const-val call_tmp[1860783]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (1860785 'move' call_tmp[1860783](1860788 call size[1435624] reallocD[1859654]))
          const-val call_tmp[1860791]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1860793 'move' call_tmp[1860791](1860796 call >[437788] call_tmp[1860783] 0))
          const-val call_tmp[1860799]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1860801 'move' call_tmp[1860799] call_tmp[1860791])
          if call_tmp[1860799]
          {
            ref call_tmp[1860808]:_ref(_ddata(range(int(64),bounded,false)))[1406051] "dead after last mention" "maybe param" "temp"
            (1860810 'move' call_tmp[1860808](1860813 call shiftedData[1414584] this[1859383]))
            ref call_tmp[1860816]:_ref(_ddata(range(int(64),bounded,false)))[1406051] "dead after last mention" "maybe param" "temp"
            val coerce_tmp[1862081]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1862086 'move' coerce_tmp[1862081] copy[1860251])
            (1860818 'move' call_tmp[1860816](1860821 call shiftedData[1414584] coerce_tmp[1862081]))
            val coerce_tmp[1862089]:_ddata(range(int(64),bounded,false))[1406042] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1862093 'move' coerce_tmp[1862089](1862091 'deref' call_tmp[1860816]))
            (1860825 call =[1406365] call_tmp[1860808] coerce_tmp[1862089])
          }
        }
        (1860833 call chpl__delete[1862096] copy[1860251])
        (1930028 call chpl__autoDestroy[1697012] keep[1860281])
        (1930031 call chpl__autoDestroy[1407763] coerce_tmp[1861815])
      }
      (1930035 call chpl__autoDestroy[1697012] reallocD[1859654])
      (1930038 call chpl__autoDestroy[1407763] coerce_tmp[1860961])
    }
    label _end_dsiReallocate[1860838]
    (1860840 return _void[55])
  }
  function [domain(1,int(64),false)] uint(64)[1450261].dsiReallocate[1863078](const in arg this[1863082]:[domain(1,int(64),false)] uint(64)[1450261], const  ref arg bounds[1863122]:1*range(int(64),bounded,false)[1244885]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "ignore transfer errors" "virtual" "no return value for void"
  {
    val actuallyResizing[1863148]:bool[10] "dead at end of block" "insert auto destroy"
    (1863150 'move' actuallyResizing[1863148] 0)
    {
      val _indexOfInterest[1863155]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[1863157]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
      const-val call_tmp[1863159]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1918760]:range(int(64),bounded,false)[1027003] "temp"
      (1863164 call indices[1842671] bounds[1863122] ret_tmp[1918760])
      (1918763 'move' call_tmp[1863159] ret_tmp[1918760])
      (1863167 'move' _iterator[1863157](1863170 call _getIterator[1095509] call_tmp[1863159]))
      {
        val ret[2029380]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
        const-val _return_tmp_[2029382]:bool[10] "dead after last mention" "temp"
        const-val this[2029566]:range(int(64),bounded,false)[1027003] "temp"
        (2029571 'move' this[2029566](2029568 '.v' _iterator[1863157] F0_this[2113071]))
        (2029384 'move' _return_tmp_[2029382](2029387 call checkIfIterWillOverflow[1096003] this[2029566] 1))
        val i[2029390]:int(64)[13] "dead at end of block" "insert auto destroy"
        val call_tmp[2029392]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        (2029394 'move' i[2029390] 0)
        ref call_tmp[2029397]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
        const-val this[2029573]:range(int(64),bounded,false)[1027003] "temp"
        (2029578 'move' this[2029573](2029575 '.v' _iterator[1863157] F0_this[2113071]))
        (2029399 'move' call_tmp[2029397](2029402 call _low[1028641] this[2029573]))
        const-val start[2029404]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[2029406]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (2029408 'move' coerce_tmp[2029406](2029410 'deref' call_tmp[2029397]))
        (2029412 '=' start[2029404] coerce_tmp[2029406])
        (2029415 'noop')
        ref call_tmp[2029416]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
        const-val this[2029580]:range(int(64),bounded,false)[1027003] "temp"
        (2029585 'move' this[2029580](2029582 '.v' _iterator[1863157] F0_this[2113071]))
        (2029418 'move' call_tmp[2029416](2029421 call _high[1028849] this[2029580]))
        const end[2029423]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[2029425]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (2029427 'move' coerce_tmp[2029425](2029429 'deref' call_tmp[2029416]))
        (2029431 '=' end[2029423] coerce_tmp[2029425])
        (2029434 'noop')
        CForLoop[2029435]
        {
          const-val yret[2029450]:int(64)[13] "dead after last mention" "YVV" "temp"
          const-val call_tmp[2029452]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val this[2029587]:range(int(64),bounded,false)[1027003] "temp"
          (2029592 'move' this[2029587](2029589 '.v' _iterator[1863157] F0_this[2113071]))
          (2029454 'move' call_tmp[2029452](2029457 call chpl_intToIdx[1028669] this[2029587] i[2029390]))
          (2029460 'move' yret[2029450] call_tmp[2029452])
          const-val _yieldedIndex[2029474]:int(64)[13] "temp"
          (2029564 'move' _yieldedIndex[2029474] call_tmp[2029452])
          {
            const-val i[2029476]:int(64)[13] "const" "index var" "insert auto destroy"
            (2029478 'move' i[2029476] _yieldedIndex[2029474])
            {
              ref call_tmp[2029482]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "reference to a const" "temp"
              (2029484 'move' call_tmp[2029482](2029487 call this[1382848] bounds[1863122] i[2029476]))
              ref call_tmp[2029490]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
              (2029492 'move' call_tmp[2029490](2029495 call dom[1451646] this[1863082]))
              const-val call_tmp[2029497]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              val coerce_tmp[2029499]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2029501 'move' coerce_tmp[2029499](2029503 'deref' call_tmp[2029490]))
              val coerce_tmp[2029505]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2029507 'move' coerce_tmp[2029505] coerce_tmp[2029499])
              const-val ret_tmp[2029510]:range(int(64),bounded,false)[1027003] "temp"
              (2029513 call dsiDim[1258236] coerce_tmp[2029505] i[2029476] ret_tmp[2029510])
              (2029517 'move' call_tmp[2029497] ret_tmp[2029510])
              const-val call_tmp[2029520]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[2029522]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2029524 'move' coerce_tmp[2029522](2029526 'deref' call_tmp[2029482]))
              (2029528 'move' call_tmp[2029520](2029531 call !=[1842744] coerce_tmp[2029522] call_tmp[2029497]))
              const-val call_tmp[2029534]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2029536 'move' call_tmp[2029534] call_tmp[2029520])
              if call_tmp[2029534]
              {
                (2029542 call =[435290] actuallyResizing[1863148] 1)
                (2029546 call chpl__autoDestroy[1407763] coerce_tmp[2029522])
                (2029549 call chpl__autoDestroy[1407763] call_tmp[2029497])
                break _breakLabel[1863248] _breakLabel[1863248]
              }
              (2029555 call chpl__autoDestroy[1407763] coerce_tmp[2029522])
              (2029558 call chpl__autoDestroy[1407763] call_tmp[2029497])
            }
            label _continueLabel[2029560]
          }
          {
            (2029437 '=' i[2029390] coerce_tmp[2029406])
          }
          {
            (2029441 '<=' i[2029390] end[2029423])
          }
          {
            val call_tmp[2029445]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (2029447 '+=' i[2029390] 1)
          }
        }
        label _endthese[2029470]
      }
      label _breakLabel[1863248]
      (1930057 call _freeIterator[1102195] _iterator[1863157])
      (1930059 call chpl__autoDestroy[1407763] call_tmp[1863159])
    }
    const-val call_tmp[1863250]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1863252 'move' call_tmp[1863250](1863255 call ![7494] actuallyResizing[1863148]))
    const-val call_tmp[1863257]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1863259 'move' call_tmp[1863257] call_tmp[1863250])
    if call_tmp[1863257]
    {
      gotoReturn _end_dsiReallocate[1864537] _end_dsiReallocate[1864537]
    }
    val call_tmp[1863269]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val coerce_tmp[1864572]:BaseRectangularArr(1,int(64),false,uint(64))[1450047] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (1864578 'move' coerce_tmp[1864572](1864574 'cast' BaseRectangularArr(1,int(64),false,uint(64))[1450047] this[1863082]))
    const-val call_tmp[1863304]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (1863306 'move' call_tmp[1863304](1863308 '_wide_get_locale' this[1863082]))
    const-val call_tmp[1863310]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1906808]:locale[28] "temp"
    (1863315 call chpl_localeID_to_locale[92852] call_tmp[1863304] ret_tmp[1906808])
    (1906811 'move' call_tmp[1863310] ret_tmp[1906808])
    const-val call_tmp[1863317]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1906640]:locale[28] "temp"
    (1863322 call here[90438] ret_tmp[1906640])
    (1906643 'move' call_tmp[1863317] ret_tmp[1906640])
    const-val call_tmp[1863323]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1863325 'move' call_tmp[1863323](1863328 call !=[783099] call_tmp[1863310] call_tmp[1863317]))
    const-val call_tmp[1863331]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1863333 'move' call_tmp[1863331] call_tmp[1863323])
    if call_tmp[1863331]
    {
      (1863341 call halt[154111] "internal error: dsiReallocate() can only be called from an array's home locale")
    }
    (1930065 call chpl__autoDestroy[1601737] call_tmp[1863317])
    (1930062 call chpl__autoDestroy[1601737] call_tmp[1863310])
    {
      const-val call_tmp[1863345]:domain(1,int(64),false)[1252786] "dead at end of block" "maybe param" "temp"
      ref _tuple_expand_tmp_0[1864647]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "temp"
      (1864653 'move' _tuple_expand_tmp_0[1864647](1864657 '.' bounds[1863122] x0[1244883]))
      const-val coerce_tmp[1864660]:range(int(64),bounded,false)[1027003] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1864664 'move' coerce_tmp[1864660](1864662 'deref' _tuple_expand_tmp_0[1864647]))
      const-val ret_tmp[1911572]:domain(1,int(64),false)[1252786] "temp"
      (1863350 call chpl__buildDomainExpr[1244857] coerce_tmp[1864660] ret_tmp[1911572])
      (1911575 'move' call_tmp[1863345] ret_tmp[1911572])
      const-val reallocD[1863353]:domain(1,int(64),false)[1252786] "dead at end of block" "const" "insert auto destroy"
      const-val unaliasTemp[1911578]:domain(1,int(64),false)[1252786] "temp"
      (1911583 'move' unaliasTemp[1911578](1911579 call chpl__unalias[1697031] ret_tmp[1911572]))
      (1863355 'move' reallocD[1863353] unaliasTemp[1911578])
      const-val tmp[1863359]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val tmp[1863361]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val tmp[1863363]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val tmp[1863456]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val tmp[1863474]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1863476]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1863478 'move' call_tmp[1863476](1863481 call low[1510489] reallocD[1863353]))
      ref call_tmp[1863484]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
      (1863486 'move' call_tmp[1863484](1863489 call dom[1451646] this[1863082]))
      const-val call_tmp[1863492]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1864689]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1864693 'move' coerce_tmp[1864689](1864691 'deref' call_tmp[1863484]))
      val coerce_tmp[1864695]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1864700 'move' coerce_tmp[1864695] coerce_tmp[1864689])
      (1863494 'move' call_tmp[1863492](1863497 call dsiLow[1300625] coerce_tmp[1864695]))
      const-val call_tmp[1863500]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1863502 'move' call_tmp[1863500](1863505 call ==[435744] call_tmp[1863476] call_tmp[1863492]))
      (1863508 'move' tmp[1863474] call_tmp[1863500])
      (1863513 'move' tmp[1863456] tmp[1863474])
      (1863525 'move' tmp[1863363] tmp[1863456])
      val tmp[1863541]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1863543]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1863545]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1863547 'move' call_tmp[1863545] tmp[1863363])
      (1863552 'move' tmp[1863543] call_tmp[1863545])
      if tmp[1863543]
      {
        const-val tmp[1863559]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1863561]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1863563 'move' call_tmp[1863561](1863566 call stride[1842934] reallocD[1863353]))
        ref call_tmp[1863569]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
        (1863571 'move' call_tmp[1863569](1863574 call dom[1451646] this[1863082]))
        const-val call_tmp[1863577]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1864709]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1864713 'move' coerce_tmp[1864709](1864711 'deref' call_tmp[1863569]))
        val coerce_tmp[1864715]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1864720 'move' coerce_tmp[1864715] coerce_tmp[1864709])
        (1863579 'move' call_tmp[1863577](1863582 call dsiStride[1842972] coerce_tmp[1864715]))
        const-val call_tmp[1863585]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1863587 'move' call_tmp[1863585](1863590 call ==[435744] call_tmp[1863561] call_tmp[1863577]))
        (1863593 'move' tmp[1863559] call_tmp[1863585])
        (1863598 'move' tmp[1863541] tmp[1863559])
      }
      {
        (1863604 'move' tmp[1863541] 0)
      }
      (1863610 'move' tmp[1863361] tmp[1863541])
      val tmp[1863626]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1863628]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1863630]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1863632 'move' call_tmp[1863630] tmp[1863361])
      (1863637 'move' tmp[1863628] call_tmp[1863630])
      if tmp[1863628]
      {
        const-val tmp[1863644]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        ref call_tmp[1863646]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
        (1863648 'move' call_tmp[1863646](1863651 call dom[1451646] this[1863082]))
        const-val call_tmp[1863654]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1864728]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1864732 'move' coerce_tmp[1864728](1864730 'deref' call_tmp[1863646]))
        val coerce_tmp[1864734]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1864739 'move' coerce_tmp[1864734] coerce_tmp[1864728])
        (1863656 'move' call_tmp[1863654](1863659 call dsiNumIndices[1263823] coerce_tmp[1864734]))
        const-val call_tmp[1863662]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1863664 'move' call_tmp[1863662](1863667 call >[437788] call_tmp[1863654] 0))
        (1863670 'move' tmp[1863644] call_tmp[1863662])
        (1863675 'move' tmp[1863626] tmp[1863644])
      }
      {
        (1863681 'move' tmp[1863626] 0)
      }
      (1863687 'move' tmp[1863359] tmp[1863626])
      val tmp[1863703]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1863705]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1863707]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1863709 'move' call_tmp[1863707] tmp[1863359])
      (1863714 'move' tmp[1863705] call_tmp[1863707])
      if tmp[1863705]
      {
        const-val tmp[1863721]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1863723]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1863725 'move' call_tmp[1863723](1863728 call size[1435624] reallocD[1863353]))
        const-val call_tmp[1863731]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1863733 'move' call_tmp[1863731](1863736 call >[437788] call_tmp[1863723] 0))
        (1863739 'move' tmp[1863721] call_tmp[1863731])
        (1863744 'move' tmp[1863703] tmp[1863721])
      }
      {
        (1863750 'move' tmp[1863703] 0)
      }
      const-val call_tmp[1863756]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1863758 'move' call_tmp[1863756] tmp[1863703])
      if call_tmp[1863756]
      {
        ref call_tmp[1863778]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        ref _this_tmp_[1864751]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
        (1864753 'move' _this_tmp_[1864751](1863783 call sizesPerDim[1805802] this[1863082]))
        (1863780 'move' call_tmp[1863778](1864758 '.' _this_tmp_[1864751] x0[1256712]))
        const-val call_tmp[1863788]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const _chpl_forward_tgt[1864781]:domain(1,int(64),false)[1251123] "dead after last mention" "const" "maybe ref" "maybe type" "temp"
        (1864787 'move' _chpl_forward_tgt[1864781](1864784 call chpl_forwarding_expr5__value[1253895] reallocD[1863353]))
        val coerce_tmp[1864790]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1864795 'move' coerce_tmp[1864790] _chpl_forward_tgt[1864781])
        const-val ret_tmp[1912448]:range(int(64),bounded,false)[1027003] "temp"
        (1863796 call dsiDim[1258249] coerce_tmp[1864790] ret_tmp[1912448])
        (1912451 'move' call_tmp[1863788] ret_tmp[1912448])
        const-val call_tmp[1863798]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1863800 'move' call_tmp[1863798](1863803 call size[1035978] call_tmp[1863788]))
        (1863807 call =[435443] call_tmp[1863778] call_tmp[1863798])
        (1930068 call chpl__autoDestroy[1407763] call_tmp[1863788])
        ref call_tmp[1863812]:_ref(_ddata(uint(64)))[1449431] "dead after last mention" "maybe param" "temp"
        (1863814 'move' call_tmp[1863812](1863817 call data[1452255] this[1863082]))
        ref call_tmp[1863820]:_ref(_ddata(uint(64)))[1449431] "dead after last mention" "maybe param" "temp"
        (1863822 'move' call_tmp[1863820](1863825 call data[1452255] this[1863082]))
        val call_tmp[1863828]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1864802]:BaseRectangularArr(1,int(64),false,uint(64))[1450047] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1864808 'move' coerce_tmp[1864802](1864804 'cast' BaseRectangularArr(1,int(64),false,uint(64))[1450047] this[1863082]))
        ref call_tmp[1863836]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
        (1863838 'move' call_tmp[1863836](1863841 call dom[1451646] this[1863082]))
        const-val call_tmp[1863844]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1864813]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1864817 'move' coerce_tmp[1864813](1864815 'deref' call_tmp[1863836]))
        val coerce_tmp[1864819]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1864824 'move' coerce_tmp[1864819] coerce_tmp[1864813])
        (1863846 'move' call_tmp[1863844](1863849 call dsiNumIndices[1263823] coerce_tmp[1864819]))
        const-val call_tmp[1863852]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1863854 'move' call_tmp[1863852](1863857 call size[1435624] reallocD[1863353]))
        val call_tmp[1863860]:_ddata(uint(64))[1449422] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1865286]:_ddata(uint(64))[1449422] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1865290 'move' coerce_tmp[1865286](1865288 'deref' call_tmp[1863820]))
        const-val default_arg_subloc[1865310]:int(32)[95] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1865314 'move' default_arg_subloc[1865310](1865312 call _ddata_reallocate_default_subloc[1865293]))
        (1863862 'move' call_tmp[1863860](1863865 call _ddata_reallocate[1864828] coerce_tmp[1865286] call_tmp[1863844] call_tmp[1863852] default_arg_subloc[1865310]))
        (1863873 call =[1452939] call_tmp[1863812] call_tmp[1863860])
        (1863882 call initShiftedData[1454390] this[1863082])
      }
      {
        val call_tmp[1863884]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1865350]:BaseRectangularArr(1,int(64),false,uint(64))[1450047] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1865356 'move' coerce_tmp[1865350](1865352 'cast' BaseRectangularArr(1,int(64),false,uint(64))[1450047] this[1863082]))
        val call_tmp[1863900]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1865362]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1865368 'move' coerce_tmp[1865362](1865364 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256408] this[1863082]))
        val call_tmp[1863908]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
        (1863910 'move' call_tmp[1863908](1863913 call _value[1253027] reallocD[1863353]))
        val call_tmp[1863924]:domain(1,int(64),false)[1251123] "dead at end of block" "expr temp" "maybe param" "temp"
        (1863926 'move' call_tmp[1863924](1863929 call _value[1253027] reallocD[1863353]))
        val call_tmp[1863932]:[domain(1,int(64),false)] uint(64)[1450261] "dead at end of block" "insert auto destroy for explicit new" "maybe param" "temp"
        val new_temp[1865402]:[domain(1,int(64),false)] uint(64)[1450261] "dead at end of block" "temp"
        val default_arg_data[1865446]:_ddata(uint(64))[1449422] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1865450 'move' default_arg_data[1865446](1865448 call _new_default_data[1455026]))
        const-val default_arg_externFreeFunc[1865472]:nil[42] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1865476 'move' default_arg_externFreeFunc[1865472](1865474 call _new_default_externFreeFunc[1455122]))
        (1865404 'move' new_temp[1865402](1865380 call _new[1454899] call_tmp[1863924] default_arg_data[1865446] 0 0 default_arg_externFreeFunc[1865472]))
        (1863934 'move' call_tmp[1863932] new_temp[1865402])
        val copy[1863950]:[domain(1,int(64),false)] uint(64)[1450261] "dead at end of block" "insert auto destroy"
        (1863952 'move' copy[1863950](1865480 call chpl__initCopy[1455171] call_tmp[1863932]))
        ref call_tmp[1863956]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
        (1863958 'move' call_tmp[1863956](1863961 call dom[1451646] this[1863082]))
        ref call_tmp[1863964]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "maybe param" "temp"
        val coerce_tmp[1865484]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1865488 'move' coerce_tmp[1865484](1865486 'deref' call_tmp[1863956]))
        val coerce_tmp[1865490]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1865495 'move' coerce_tmp[1865490] coerce_tmp[1865484])
        (1863966 'move' call_tmp[1863964](1863969 call ranges[1251533] coerce_tmp[1865490]))
        const-val call_tmp[1863972]:domain(1,int(64),false)[1252786] "dead at end of block" "maybe param" "temp"
        ref _tuple_expand_tmp_0[1865499]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "temp"
        (1865505 'move' _tuple_expand_tmp_0[1865499](1865509 '.' call_tmp[1863964] x0[1244883]))
        const-val coerce_tmp[1865514]:range(int(64),bounded,false)[1027003] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1865518 'move' coerce_tmp[1865514](1865516 'deref' _tuple_expand_tmp_0[1865499]))
        const-val ret_tmp[1918842]:domain(1,int(64),false)[1252786] "temp"
        (1863977 call this[1844078] reallocD[1863353] coerce_tmp[1865514] ret_tmp[1918842])
        (1918845 'move' call_tmp[1863972] ret_tmp[1918842])
        const-val keep[1863980]:domain(1,int(64),false)[1252786] "dead at end of block" "insert auto destroy"
        const-val unaliasTemp[1918848]:domain(1,int(64),false)[1252786] "temp"
        (1918853 'move' unaliasTemp[1918848](1918849 call chpl__unalias[1697031] ret_tmp[1918842]))
        (1863982 'move' keep[1863980] unaliasTemp[1918848])
        {
          ref i_this[1965566]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812] "ref to immutable" "temp"
          (1965570 'move' i_this[1965566](1965568 'set reference' keep[1863980]))
          const-val copy[1965996]:[domain(1,int(64),false)] uint(64)[1450261] "concurrently accessed" "const"
          (1965999 'move' copy[1965996](1966002 call chpl__initCopy[1455171] copy[1863950]))
          const-val this[1966015]:[domain(1,int(64),false)] uint(64)[1450261] "concurrently accessed" "const"
          (1966018 'move' this[1966015](1966021 call chpl__initCopy[1457482] this[1863082]))
          {
            val ret[1965573]:nothing[7] "dead after last mention" "RVV" "temp"
            {
              val call_tmp[1965576]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
              (1965578 'move' call_tmp[1965576](1965581 call _value[1253027] i_this[1965566]))
              val coerce_tmp[1965583]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "concurrently accessed" "insert auto destroy" "temp"
              (1965585 'move' coerce_tmp[1965583] call_tmp[1965576])
              const-val default_arg_tasksPerLocale[1965588]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              (1965590 'move' default_arg_tasksPerLocale[1965588](1965593 call these_default_tasksPerLocale[1315258] coerce_tmp[1965583]))
              const-val default_arg_ignoreRunning[1965595]:bool[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              (1965597 'move' default_arg_ignoreRunning[1965595](1965600 call these_default_ignoreRunning[1315289] coerce_tmp[1965583]))
              const-val default_arg_minIndicesPerTask[1965602]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              (1965604 'move' default_arg_minIndicesPerTask[1965602](1965607 call these_default_minIndicesPerTask[1315320] coerce_tmp[1965583]))
              val default_arg_offset[1965609]:1*int(64)[1256714] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
              const-val ret_tmp[1965611]:1*int(64)[1256714] "temp"
              (1965614 call these_default_offset[1315351] coerce_tmp[1965583] ret_tmp[1965611])
              (1965617 'move' default_arg_offset[1965609] ret_tmp[1965611])
              {
                const-ref i_offset[1965621]:1*int(64)[1256714] "temp"
                (1965623 'move' i_offset[1965621](1965625 'set reference' default_arg_offset[1965609]))
                {
                  val ret[1965628]:nothing[7] "dead after last mention" "RVV" "temp"
                  const-val numTasks[1965630]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                  val tmp[1965632]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
                  const-val tmp[1965634]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[1965636]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1965638 'move' call_tmp[1965636](1965641 call ==[435744] default_arg_tasksPerLocale[1965588] 0))
                  (1965644 'move' tmp[1965634] call_tmp[1965636])
                  if tmp[1965634]
                  {
                    const-val tmp[1965649]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
                    const-val call_tmp[1965651]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[1965653]:locale[28] "temp"
                    (1965656 call here[90438] ret_tmp[1965653])
                    (1965658 'move' call_tmp[1965651] ret_tmp[1965653])
                    (1965661 'move' tmp[1965649](1965664 call maxTaskPar[90545] call_tmp[1965651]))
                    (1965666 'move' tmp[1965632] tmp[1965649])
                    (1965670 call chpl__autoDestroy[1601737] call_tmp[1965651])
                  }
                  {
                    (1965673 'move' tmp[1965632] default_arg_tasksPerLocale[1965588])
                  }
                  (1965677 'move' numTasks[1965630] tmp[1965632])
                  const-val tmp[1965680]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
                  val tmp[1965682]:2*int(64)[1040245] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                  const-val tmp[1965684]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[1965686]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1965688 'move' call_tmp[1965686](1965690 'task_get_serial'))
                  (1965691 'move' tmp[1965684] call_tmp[1965686])
                  if tmp[1965684]
                  {
                    const-val tmp[1965696]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                    const-val ret_tmp[1965698]:2*int(64)[1040245] "temp"
                    (1965701 call _build_tuple[1040203] 1 -1 ret_tmp[1965698])
                    (1965705 'move' tmp[1965696] ret_tmp[1965698])
                    (1965708 'move' tmp[1965682] tmp[1965696])
                  }
                  {
                    const-val tmp[1965712]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                    ref call_tmp[1965714]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "maybe param" "temp"
                    (1965716 'move' call_tmp[1965714](1965719 call ranges[1251533] coerce_tmp[1965583]))
                    const-val ret_tmp[1965721]:2*int(64)[1040245] "temp"
                    (1965724 call _computeChunkStuff[1381155] numTasks[1965630] default_arg_ignoreRunning[1965595] default_arg_minIndicesPerTask[1965602] call_tmp[1965714] ret_tmp[1965721])
                    (1965730 'move' tmp[1965712] ret_tmp[1965721])
                    (1965733 'move' tmp[1965682] tmp[1965712])
                  }
                  (1965737 '=' tmp[1965680] tmp[1965682])
                  (1965740 'noop')
                  1
                  ref call_tmp[1965742]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                  (1965744 'move' call_tmp[1965742](1965746 '.' tmp[1965680] x0[1040241]))
                  const-val numChunks[1965749]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                  const-val coerce_tmp[1965751]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                  (1965753 'move' coerce_tmp[1965751](1965755 'deref' call_tmp[1965742]))
                  (1965757 '=' numChunks[1965749] coerce_tmp[1965751])
                  (1965760 'noop')
                  ref call_tmp[1965761]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                  (1965763 'move' call_tmp[1965761](1965765 '.' tmp[1965680] x1[1040243]))
                  const-val parDim[1965768]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                  const-val coerce_tmp[1965770]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                  (1965772 'move' coerce_tmp[1965770](1965774 'deref' call_tmp[1965761]))
                  (1965776 '=' parDim[1965768] coerce_tmp[1965770])
                  (1965779 'noop')
                  const-val call_tmp[1965780]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1965782 'move' call_tmp[1965780](1965785 call <=[437128] numChunks[1965749] 1))
                  const-val call_tmp[1965788]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1965790 'move' call_tmp[1965788] call_tmp[1965780])
                  if call_tmp[1965788]
                  {
                    {
                      val _indexOfInterest[1965796]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1965798]:_ic_these_help_DefaultRectangularDom_1_int64_t_F[1383595] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1965800]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1383601] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1965802]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1383601] "temp"
                      (1965805 call these_help[1383178] coerce_tmp[1965583] ret_tmp[1965802])
                      (1965808 'move' call_tmp[1965800] ret_tmp[1965802])
                      (1965811 'move' _iterator[1965798](1965814 call _getIterator[1383610] call_tmp[1965800]))
                      {
                        val ret[2044400]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1383601] "dead after last mention" "RVV" "temp"
                        val _indexOfInterest[2044402]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[2044404]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
                        ref call_tmp[2044406]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
                        ref _this_tmp_[2044408]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "temp"
                        const-val this[2044662]:domain(1,int(64),false)[1251123] "temp"
                        (2044667 'move' this[2044662](2044664 '.v' _iterator[1965798] F0_this[2134554]))
                        (2044410 'move' _this_tmp_[2044408](2044413 call ranges[1251533] this[2044662]))
                        (2044415 'move' call_tmp[2044406](2044417 '.' _this_tmp_[2044408] x0[1244883]))
                        (2044420 'move' _iterator[2044404](2044423 call _getIterator[1095509] call_tmp[2044406]))
                        {
                          val ret[2044426]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
                          const-val _return_tmp_[2044428]:bool[10] "dead after last mention" "temp"
                          const-val this[2044430]:range(int(64),bounded,false)[1027003] "temp"
                          (2044432 'move' this[2044430](2044434 '.v' _iterator[2044404] F0_this[2113071]))
                          (2044437 'move' _return_tmp_[2044428](2044440 call checkIfIterWillOverflow[1096003] this[2044430] 1))
                          val i[2044443]:int(64)[13] "dead at end of block" "insert auto destroy"
                          val call_tmp[2044445]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (2044447 'move' i[2044443] 0)
                          ref call_tmp[2044450]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
                          const-val this[2044452]:range(int(64),bounded,false)[1027003] "temp"
                          (2044454 'move' this[2044452](2044456 '.v' _iterator[2044404] F0_this[2113071]))
                          (2044459 'move' call_tmp[2044450](2044462 call _low[1028641] this[2044452]))
                          const-val start[2044464]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                          const-val coerce_tmp[2044466]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                          (2044468 'move' coerce_tmp[2044466](2044470 'deref' call_tmp[2044450]))
                          (2044472 '=' start[2044464] coerce_tmp[2044466])
                          (2044475 'noop')
                          ref call_tmp[2044476]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
                          const-val this[2044478]:range(int(64),bounded,false)[1027003] "temp"
                          (2044480 'move' this[2044478](2044482 '.v' _iterator[2044404] F0_this[2113071]))
                          (2044485 'move' call_tmp[2044476](2044488 call _high[1028849] this[2044478]))
                          const end[2044490]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                          const-val coerce_tmp[2044492]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                          (2044494 'move' coerce_tmp[2044492](2044496 'deref' call_tmp[2044476]))
                          (2044498 '=' end[2044490] coerce_tmp[2044492])
                          (2044501 'noop')
                          CForLoop[2044502] order-independent
                          {
                            const-val yret[2044517]:int(64)[13] "dead after last mention" "YVV" "temp"
                            const-val call_tmp[2044519]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val this[2044521]:range(int(64),bounded,false)[1027003] "temp"
                            (2044523 'move' this[2044521](2044525 '.v' _iterator[2044404] F0_this[2113071]))
                            (2044528 'move' call_tmp[2044519](2044531 call chpl_intToIdx[1028669] this[2044521] i[2044443]))
                            (2044534 'move' yret[2044517] call_tmp[2044519])
                            const-val _yieldedIndex[2044537]:int(64)[13] "temp"
                            (2044539 'move' _yieldedIndex[2044537] call_tmp[2044519])
                            {
                              const-val i[2044543]:int(64)[13] "const" "index var" "insert auto destroy"
                              (2044545 'move' i[2044543] _yieldedIndex[2044537])
                              const-val yret[2044548]:int(64)[13] "dead after last mention" "YVV" "temp"
                              (2044550 'move' yret[2044548] _yieldedIndex[2044537])
                              const-val _yieldedIndex[2044572]:int(64)[13] "temp"
                              (2044660 'move' _yieldedIndex[2044572] _yieldedIndex[2044537])
                              {
                                const-val i[2044574]:int(64)[13] "const" "index var" "insert auto destroy"
                                (2044576 'move' i[2044574] _yieldedIndex[2044572])
                                {
                                  const-val yret[2044580]:int(64)[13] "dead after last mention" "YVV" "temp"
                                  (2044582 'move' yret[2044580] i[2044574])
                                  const-val _indexOfInterest[2044585]:int(64)[13] "dead at end of block" "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                  (2044587 'move' _indexOfInterest[2044585] yret[2044580])
                                  {
                                    const-val i[2044591]:int(64)[13] "const" "index var" "insert auto destroy"
                                    (2044593 'move' i[2044591] _indexOfInterest[2044585])
                                    const-val yret[2044596]:int(64)[13] "dead after last mention" "YVV" "temp"
                                    (2044598 'move' yret[2044596] i[2044591])
                                    const-val i[2044601]:int(64)[13] "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy"
                                    (2044603 'move' i[2044601] yret[2044596])
                                    {
                                      ref dst[2044607]:_ref(uint(64))[936790] "dead at end of block" "ref var"
                                      ref call_tmp[2044609]:_ref(uint(64))[936790] "dead at end of block" "maybe param" "temp"
                                      val coerce_tmp[2044611]:[domain(1,int(64),false)] uint(64)[1450261] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                      (2044613 'move' coerce_tmp[2044611] copy[1965996])
                                      val coerce_tmp[2044616]:[domain(1,int(64),false)] uint(64)[1450261] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                      (2044618 'move' coerce_tmp[2044616] copy[1965996])
                                      val coerce_tmp[2044621]:[domain(1,int(64),false)] uint(64)[1450261] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                      (2044623 'move' coerce_tmp[2044621] copy[1965996])
                                      (2044626 'move' call_tmp[2044609](2044629 call dsiAccess[1464422] coerce_tmp[2044611] i[2044601]))
                                      (2044632 'move' dst[2044607] call_tmp[2044609])
                                      ref src[2044635]:_ref(uint(64))[936790] "dead at end of block" "const" "ref var"
                                      ref call_tmp[2044637]:_ref(uint(64))[936790] "dead at end of block" "maybe param" "temp"
                                      (2044639 'move' call_tmp[2044637](2044642 call dsiAccess[1464576] this[1966015] i[2044601]))
                                      (2044645 'move' src[2044635] call_tmp[2044637])
                                      (2044648 '=' dst[2044607] src[2044635])
                                      val optinfo[2044651]:int(64)[13] "no codegen" "temp" "forall no task private"
                                      (2044653 'optimization info' optinfo[2044651])
                                    }
                                    label _continueLabel[2044655]
                                  }
                                }
                                label _continueLabel[2044657]
                              }
                            }
                            {
                              (2044504 '=' i[2044443] coerce_tmp[2044466])
                            }
                            {
                              (2044508 '<=' i[2044443] end[2044490])
                            }
                            {
                              val call_tmp[2044512]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              (2044514 '+=' i[2044443] 1)
                            }
                          }
                          label _endthese[2044563]
                        }
                        (2044566 call _freeIterator[1102195] _iterator[2044404])
                        label _endthese_help[2044568]
                      }
                      label _breakLabel[1965866]
                      (1965869 call _freeIterator[1383783] _iterator[1965798])
                    }
                  }
                  {
                    {
                      const-val tmpIter[1965873]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe ref" "no copy" "temp"
                      const-val call_tmp[1965875]:range(int(64),boundedLow,false)[1087754] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
                      const-val ret_tmp[1965877]:range(int(64),boundedLow,false)[1087754] "temp"
                      (1965880 call chpl_build_low_bounded_range[1087147] 0 ret_tmp[1965877])
                      (1965883 'move' call_tmp[1965875] ret_tmp[1965877])
                      const-val ret_tmp[1965886]:range(int(64),bounded,false)[1027003] "temp"
                      (1965889 call #[1088114] call_tmp[1965875] numChunks[1965749] ret_tmp[1965886])
                      (1965893 'move' tmpIter[1965873] ret_tmp[1965886])
                      {
                        const _coforallCount[1965897]:_EndCount(AtomicT(int(64)),int(64))[945532] "dead after last mention" "concurrently accessed" "const" "end count" "temp"
                        (1965899 'move' _coforallCount[1965897](1965902 call _endCountAlloc[1228107]))
                        const-val numTasks[1965903]:int(64)[13] "dead at end of block" "temp"
                        (1965905 'move' numTasks[1965903](1965908 call size[1035978] tmpIter[1965873]))
                        (1965911 call _upEndCount[1228350] _coforallCount[1965897] numTasks[1965903])
                        (1965915 call chpl_resetTaskSpawn[1229432] numTasks[1965903])
                        val _indexOfInterest[1965917]:int(64)[13] "dead at end of block" "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[1965919]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
                        (1965921 'move' _iterator[1965919](1965924 call _getIterator[1095509] tmpIter[1965873]))
                        {
                          val ret[2044670]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
                          const-val _return_tmp_[2044672]:bool[10] "dead after last mention" "temp"
                          const-val this[2044790]:range(int(64),bounded,false)[1027003] "temp"
                          (2044795 'move' this[2044790](2044792 '.v' _iterator[1965919] F0_this[2113071]))
                          (2044674 'move' _return_tmp_[2044672](2044677 call checkIfIterWillOverflow[1096003] this[2044790] 1))
                          val i[2044680]:int(64)[13] "dead at end of block" "insert auto destroy"
                          val call_tmp[2044682]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (2044684 'move' i[2044680] 0)
                          ref call_tmp[2044687]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
                          const-val this[2044797]:range(int(64),bounded,false)[1027003] "temp"
                          (2044802 'move' this[2044797](2044799 '.v' _iterator[1965919] F0_this[2113071]))
                          (2044689 'move' call_tmp[2044687](2044692 call _low[1028641] this[2044797]))
                          const-val start[2044694]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                          const-val coerce_tmp[2044696]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                          (2044698 'move' coerce_tmp[2044696](2044700 'deref' call_tmp[2044687]))
                          (2044702 '=' start[2044694] coerce_tmp[2044696])
                          (2044705 'noop')
                          ref call_tmp[2044706]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
                          const-val this[2044804]:range(int(64),bounded,false)[1027003] "temp"
                          (2044809 'move' this[2044804](2044806 '.v' _iterator[1965919] F0_this[2113071]))
                          (2044708 'move' call_tmp[2044706](2044711 call _high[1028849] this[2044804]))
                          const end[2044713]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                          const-val coerce_tmp[2044715]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                          (2044717 'move' coerce_tmp[2044715](2044719 'deref' call_tmp[2044706]))
                          (2044721 '=' end[2044713] coerce_tmp[2044715])
                          (2044724 'noop')
                          CForLoop[2044725]
                          {
                            const-val yret[2044740]:int(64)[13] "dead after last mention" "YVV" "temp"
                            const-val call_tmp[2044742]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                            const-val this[2044811]:range(int(64),bounded,false)[1027003] "temp"
                            (2044816 'move' this[2044811](2044813 '.v' _iterator[1965919] F0_this[2113071]))
                            (2044744 'move' call_tmp[2044742](2044747 call chpl_intToIdx[1028669] this[2044811] i[2044680]))
                            (2044750 'move' yret[2044740] call_tmp[2044742])
                            const-val _yieldedIndex[2044764]:int(64)[13] "coforall index var" "temp"
                            (2044788 'move' _yieldedIndex[2044764] call_tmp[2044742])
                            {
                              const-val chunk[2044766]:int(64)[13] "coforall index var" "const" "index var" "insert auto destroy"
                              (2044768 'move' chunk[2044766] _yieldedIndex[2044764])
                              val dummy_error[2044771]:Error[167984] "concurrently accessed" "error variable" "temp"
                              val _args_forcoforall_fn[2219710]:_class_localscoforall_fn[2219688] "temp"
                              (2219714 'move' _args_forcoforall_fn[2219710](2219712 'stack allocate class' _class_localscoforall_fn[2219688]))
                              (2219716 '.=' _args_forcoforall_fn[2219710] _0_parDim[2219691] parDim[1965768])
                              (2219720 '.=' _args_forcoforall_fn[2219710] _1_numChunks[2219693] numChunks[1965749])
                              (2219724 '.=' _args_forcoforall_fn[2219710] _2_coerce_tmp[2219695] coerce_tmp[1965583])
                              (2219728 '.=' _args_forcoforall_fn[2219710] _3_chunk[2219697] chunk[2044766])
                              (2219732 '.=' _args_forcoforall_fn[2219710] _4__coforallCount[2219699] _coforallCount[1965897])
                              ref tmp[2219736]:1*int(64)[1256714] "temp"
                              (2219740 'move' tmp[2219736](2219738 'set reference' default_arg_offset[1965609]))
                              (2219742 '.=' _args_forcoforall_fn[2219710] _6_default_arg_offset[2219703] tmp[2219736])
                              (2219746 '.=' _args_forcoforall_fn[2219710] _7_copy[2219705] copy[1965996])
                              (2219750 '.=' _args_forcoforall_fn[2219710] _8_this[2219707] this[1966015])
                              val _args_vforcoforall_fn[2219754]:c_void_ptr[149] "temp"
                              (2219758 'move' _args_vforcoforall_fn[2219754](2219756 'cast_to_void_star' _args_forcoforall_fn[2219710]))
                              val _args_sizecoforall_fn[2219760]:int(64)[13] "temp"
                              (2219764 'move' _args_sizecoforall_fn[2219760](2219762 'sizeof_bundle' _class_localscoforall_fn[2219688]))
                              ref _taskListcoforall_fn[2219766]:c_void_ptr[149] "temp"
                              (2219771 'move' _taskListcoforall_fn[2219766](2219768 '.' _coforallCount[1965897] taskList[12712]))
                              val _taskListNodecoforall_fn[2219773]:int(64)[13] "temp"
                              (2219777 'move' _taskListNodecoforall_fn[2219773](2219775 '_wide_get_node' _coforallCount[1965897]))
                              (2219876 call wrapcoforall_fn[2219779] _taskListcoforall_fn[2219766] _taskListNodecoforall_fn[2219773] _args_vforcoforall_fn[2219754] _args_sizecoforall_fn[2219760] _args_forcoforall_fn[2219710])
                              {
                              }
                              label _continueLabel[2044785]
                            }
                            {
                              (2044727 '=' i[2044680] coerce_tmp[2044696])
                            }
                            {
                              (2044731 '<=' i[2044680] end[2044713])
                            }
                            {
                              val call_tmp[2044735]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              (2044737 '+=' i[2044680] 1)
                            }
                          }
                          label _endthese[2044760]
                        }
                        label _breakLabel[1965948]
                        val error[1965950]:Error[167984] "error variable" "temp"
                        (1965952 'move' error[1965950] nil[44])
                        (1965956 call _waitEndCount[1235226] _coforallCount[1965897] numTasks[1965903] error[1965950])
                        val errorExists[2226064]:bool[10] "temp"
                        (2226069 'move' errorExists[2226064](2226066 '!=' error[1965950] nil[44]))
                        if errorExists[2226064]
                        {
                          (1965964 call chpl_propagate_error[170518] error[1965950])
                        }
                        (1965968 call _endCountFree[1234049] _coforallCount[1965897])
                        (1965971 call _freeIterator[1102195] _iterator[1965919])
                      }
                      (1965974 call chpl__autoDestroy[1407763] tmpIter[1965873])
                      (1965977 call chpl__autoDestroy[1680875] call_tmp[1965875])
                    }
                  }
                  (1965981 call chpl__autoDestroy[1674803] tmp[1965680])
                  label _endthese[1965983]
                }
              }
              (1965986 call chpl_after_forall_fence[13071])
              (1965988 call chpl__autoDestroy[1697253] default_arg_offset[1965609])
              label _breakLabel[1965990]
            }
            label _endthese[1965992]
          }
          val coerce_tmp[1966024]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1966026 'move' coerce_tmp[1966024](1966028 'cast' object[22] this[1966015]))
          (1966032 call chpl__autoDestroy[1351354] coerce_tmp[1966024])
          val coerce_tmp[1966005]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1966007 'move' coerce_tmp[1966005](1966009 'cast' object[22] copy[1965996]))
          (1966013 call chpl__autoDestroy[1846254] coerce_tmp[1966005])
        }
        (1930744 call chpl_after_forall_fence[13071])
        val call_tmp[1864034]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1865683]:BaseRectangularArr(1,int(64),false,uint(64))[1450047] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
        (1865689 'move' coerce_tmp[1865683](1865685 'cast' BaseRectangularArr(1,int(64),false,uint(64))[1450047] this[1863082]))
        ref call_tmp[1864277]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
        (1864279 'move' call_tmp[1864277](1864282 call off[1451608] this[1863082]))
        ref call_tmp[1864285]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1865700]:[domain(1,int(64),false)] uint(64)[1450261] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1865705 'move' coerce_tmp[1865700] copy[1863950])
        (1864287 'move' call_tmp[1864285](1864290 call off[1451608] coerce_tmp[1865700]))
        (1864294 call =[1847029] call_tmp[1864277] call_tmp[1864285])
        ref call_tmp[1864299]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
        (1864301 'move' call_tmp[1864299](1864304 call blk[1451754] this[1863082]))
        ref call_tmp[1864307]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1865710]:[domain(1,int(64),false)] uint(64)[1450261] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1865715 'move' coerce_tmp[1865710] copy[1863950])
        (1864309 'move' call_tmp[1864307](1864312 call blk[1451754] coerce_tmp[1865710]))
        (1864316 call =[1847029] call_tmp[1864299] call_tmp[1864307])
        ref call_tmp[1864321]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
        (1864323 'move' call_tmp[1864321](1864326 call str[1451690] this[1863082]))
        ref call_tmp[1864329]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1865720]:[domain(1,int(64),false)] uint(64)[1450261] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1865725 'move' coerce_tmp[1865720] copy[1863950])
        (1864331 'move' call_tmp[1864329](1864334 call str[1451690] coerce_tmp[1865720]))
        (1864338 call =[1847029] call_tmp[1864321] call_tmp[1864329])
        ref call_tmp[1864343]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        (1864345 'move' call_tmp[1864343](1864348 call factoredOffs[1452050] this[1863082]))
        ref call_tmp[1864351]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1865730]:[domain(1,int(64),false)] uint(64)[1450261] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1865735 'move' coerce_tmp[1865730] copy[1863950])
        (1864353 'move' call_tmp[1864351](1864356 call factoredOffs[1452050] coerce_tmp[1865730]))
        const-val coerce_tmp[1865738]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1865742 'move' coerce_tmp[1865738](1865740 'deref' call_tmp[1864351]))
        (1864360 call =[435443] call_tmp[1864343] coerce_tmp[1865738])
        (1864369 call dsiDestroyArr[1837023] this[1863082] 0)
        ref call_tmp[1864373]:_ref(_ddata(uint(64)))[1449431] "dead after last mention" "maybe param" "temp"
        (1864375 'move' call_tmp[1864373](1864378 call data[1452255] this[1863082]))
        ref call_tmp[1864381]:_ref(_ddata(uint(64)))[1449431] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1865747]:[domain(1,int(64),false)] uint(64)[1450261] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1865752 'move' coerce_tmp[1865747] copy[1863950])
        (1864383 'move' call_tmp[1864381](1864386 call data[1452255] coerce_tmp[1865747]))
        val coerce_tmp[1865755]:_ddata(uint(64))[1449422] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1865759 'move' coerce_tmp[1865755](1865757 'deref' call_tmp[1864381]))
        (1864390 call =[1452939] call_tmp[1864373] coerce_tmp[1865755])
        val call_tmp[1864433]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
        (1864435 'move' call_tmp[1864433](1864438 call _value[1253027] reallocD[1863353]))
        {
          const-val call_tmp[1864482]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (1864484 'move' call_tmp[1864482](1864487 call size[1435624] reallocD[1863353]))
          const-val call_tmp[1864490]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1864492 'move' call_tmp[1864490](1864495 call >[437788] call_tmp[1864482] 0))
          const-val call_tmp[1864498]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1864500 'move' call_tmp[1864498] call_tmp[1864490])
          if call_tmp[1864498]
          {
            ref call_tmp[1864507]:_ref(_ddata(uint(64)))[1449431] "dead after last mention" "maybe param" "temp"
            (1864509 'move' call_tmp[1864507](1864512 call shiftedData[1454739] this[1863082]))
            ref call_tmp[1864515]:_ref(_ddata(uint(64)))[1449431] "dead after last mention" "maybe param" "temp"
            val coerce_tmp[1865780]:[domain(1,int(64),false)] uint(64)[1450261] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1865785 'move' coerce_tmp[1865780] copy[1863950])
            (1864517 'move' call_tmp[1864515](1864520 call shiftedData[1454739] coerce_tmp[1865780]))
            val coerce_tmp[1865788]:_ddata(uint(64))[1449422] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1865792 'move' coerce_tmp[1865788](1865790 'deref' call_tmp[1864515]))
            (1864524 call =[1452939] call_tmp[1864507] coerce_tmp[1865788])
          }
        }
        (1864532 call chpl__delete[1865795] copy[1863950])
        (1930073 call chpl__autoDestroy[1697012] keep[1863980])
        (1930076 call chpl__autoDestroy[1407763] coerce_tmp[1865514])
      }
      (1930080 call chpl__autoDestroy[1697012] reallocD[1863353])
      (1930083 call chpl__autoDestroy[1407763] coerce_tmp[1864660])
    }
    label _end_dsiReallocate[1864537]
    (1864539 return _void[55])
  }
  function [domain(1,int(64),false)] locale[1256675].dsiPostReallocate[1866777](const in arg this[1866781]:[domain(1,int(64),false)] locale[1256675]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual" "no return value for void"
  {
    (1866787 return _void[55])
  }
  function [domain(1,int(64),false)] unmanaged localesSignal?[1318401].dsiPostReallocate[1866789](const in arg this[1866793]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual" "no return value for void"
  {
    (1866799 return _void[55])
  }
  function [domain(1,int(64),false)] real(64)[1358944].dsiPostReallocate[1866801](const in arg this[1866805]:[domain(1,int(64),false)] real(64)[1358944]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual" "no return value for void"
  {
    (1866811 return _void[55])
  }
  function [domain(1,int(64),false)] int(64)[1368867].dsiPostReallocate[1866813](const in arg this[1866817]:[domain(1,int(64),false)] int(64)[1368867]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual" "no return value for void"
  {
    (1866823 return _void[55])
  }
  function [domain(1,int(64),false)] range(int(64),bounded,false)[1409224].dsiPostReallocate[1866825](const in arg this[1866829]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual" "no return value for void"
  {
    (1866835 return _void[55])
  }
  function [domain(1,int(64),false)] uint(64)[1450261].dsiPostReallocate[1866837](const in arg this[1866841]:[domain(1,int(64),false)] uint(64)[1450261]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual" "no return value for void"
  {
    (1866847 return _void[55])
  }
  function [domain(1,int(64),false)] locale[1256675].dom[1258208](const in arg this[1258212]:[domain(1,int(64),false)] locale[1256675]) ref : _ref(domain(1,int(64),false))[1251138] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[1258214]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "RVV" "temp"
    ref call_tmp[1258222]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
    (1258224 'move' call_tmp[1258222](1258226 '.' this[1258212] dom[1256602]))
    (1258229 'move' ret[1258214] call_tmp[1258222])
    (1258233 return ret[1258214])
  }
  function [domain(1,int(64),false)] unmanaged localesSignal?[1318401].dom[1319786](const in arg this[1319790]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401]) ref : _ref(domain(1,int(64),false))[1251138] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[1319792]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "RVV" "temp"
    ref call_tmp[1319800]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
    (1319802 'move' call_tmp[1319800](1319804 '.' this[1319790] dom[1318328]))
    (1319807 'move' ret[1319792] call_tmp[1319800])
    (1319811 return ret[1319792])
  }
  function [domain(1,int(64),false)] real(64)[1358944].dom[1360329](const in arg this[1360333]:[domain(1,int(64),false)] real(64)[1358944]) ref : _ref(domain(1,int(64),false))[1251138] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[1360335]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "RVV" "temp"
    ref call_tmp[1360343]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
    (1360345 'move' call_tmp[1360343](1360347 '.' this[1360333] dom[1358871]))
    (1360350 'move' ret[1360335] call_tmp[1360343])
    (1360354 return ret[1360335])
  }
  function [domain(1,int(64),false)] int(64)[1368867].dom[1370252](const in arg this[1370256]:[domain(1,int(64),false)] int(64)[1368867]) ref : _ref(domain(1,int(64),false))[1251138] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[1370258]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "RVV" "temp"
    ref call_tmp[1370266]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
    (1370268 'move' call_tmp[1370266](1370270 '.' this[1370256] dom[1368794]))
    (1370273 'move' ret[1370258] call_tmp[1370266])
    (1370277 return ret[1370258])
  }
  function [domain(1,int(64),false)] range(int(64),bounded,false)[1409224].dom[1410591](const in arg this[1410595]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224]) ref : _ref(domain(1,int(64),false))[1251138] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[1410597]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "RVV" "temp"
    ref call_tmp[1410605]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
    (1410607 'move' call_tmp[1410605](1410609 '.' this[1410595] dom[1409151]))
    (1410612 'move' ret[1410597] call_tmp[1410605])
    (1410616 return ret[1410597])
  }
  function [domain(1,int(64),false)] uint(64)[1450261].dom[1451646](const in arg this[1451650]:[domain(1,int(64),false)] uint(64)[1450261]) ref : _ref(domain(1,int(64),false))[1251138] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[1451652]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "RVV" "temp"
    ref call_tmp[1451660]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
    (1451662 'move' call_tmp[1451660](1451664 '.' this[1451650] dom[1450188]))
    (1451667 'move' ret[1451652] call_tmp[1451660])
    (1451671 return ret[1451652])
  }
  function [domain(1,int(64),false)] locale[1256675].off[1258170](const in arg this[1258174]:[domain(1,int(64),false)] locale[1256675]) ref : _ref(1*int(64))[1256784] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1258176]:_ref(1*int(64))[1256784] "dead after last mention" "RVV" "temp"
    ref call_tmp[1258184]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
    (1258186 'move' call_tmp[1258184](1258188 '.' this[1258174] off[1256612]))
    (1258191 'move' ret[1258176] call_tmp[1258184])
    (1258195 return ret[1258176])
  }
  function [domain(1,int(64),false)] unmanaged localesSignal?[1318401].off[1319748](const in arg this[1319752]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401]) ref : _ref(1*int(64))[1256784] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1319754]:_ref(1*int(64))[1256784] "dead after last mention" "RVV" "temp"
    ref call_tmp[1319762]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
    (1319764 'move' call_tmp[1319762](1319766 '.' this[1319752] off[1318338]))
    (1319769 'move' ret[1319754] call_tmp[1319762])
    (1319773 return ret[1319754])
  }
  function [domain(1,int(64),false)] real(64)[1358944].off[1360291](const in arg this[1360295]:[domain(1,int(64),false)] real(64)[1358944]) ref : _ref(1*int(64))[1256784] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1360297]:_ref(1*int(64))[1256784] "dead after last mention" "RVV" "temp"
    ref call_tmp[1360305]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
    (1360307 'move' call_tmp[1360305](1360309 '.' this[1360295] off[1358881]))
    (1360312 'move' ret[1360297] call_tmp[1360305])
    (1360316 return ret[1360297])
  }
  function [domain(1,int(64),false)] int(64)[1368867].off[1370214](const in arg this[1370218]:[domain(1,int(64),false)] int(64)[1368867]) ref : _ref(1*int(64))[1256784] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1370220]:_ref(1*int(64))[1256784] "dead after last mention" "RVV" "temp"
    ref call_tmp[1370228]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
    (1370230 'move' call_tmp[1370228](1370232 '.' this[1370218] off[1368804]))
    (1370235 'move' ret[1370220] call_tmp[1370228])
    (1370239 return ret[1370220])
  }
  function [domain(1,int(64),false)] range(int(64),bounded,false)[1409224].off[1410553](const in arg this[1410557]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224]) ref : _ref(1*int(64))[1256784] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1410559]:_ref(1*int(64))[1256784] "dead after last mention" "RVV" "temp"
    ref call_tmp[1410567]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
    (1410569 'move' call_tmp[1410567](1410571 '.' this[1410557] off[1409161]))
    (1410574 'move' ret[1410559] call_tmp[1410567])
    (1410578 return ret[1410559])
  }
  function [domain(1,int(64),false)] uint(64)[1450261].off[1451608](const in arg this[1451612]:[domain(1,int(64),false)] uint(64)[1450261]) ref : _ref(1*int(64))[1256784] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1451614]:_ref(1*int(64))[1256784] "dead after last mention" "RVV" "temp"
    ref call_tmp[1451622]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
    (1451624 'move' call_tmp[1451622](1451626 '.' this[1451612] off[1450198]))
    (1451629 'move' ret[1451614] call_tmp[1451622])
    (1451633 return ret[1451614])
  }
  function [domain(1,int(64),false)] locale[1256675].blk[1258464](const in arg this[1258468]:[domain(1,int(64),false)] locale[1256675]) ref : _ref(1*int(64))[1256784] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[1258470]:_ref(1*int(64))[1256784] "dead after last mention" "RVV" "temp"
    ref call_tmp[1258478]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
    (1258480 'move' call_tmp[1258478](1258482 '.' this[1258468] blk[1256618]))
    (1258485 'move' ret[1258470] call_tmp[1258478])
    (1258489 return ret[1258470])
  }
  function [domain(1,int(64),false)] unmanaged localesSignal?[1318401].blk[1319894](const in arg this[1319898]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401]) ref : _ref(1*int(64))[1256784] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[1319900]:_ref(1*int(64))[1256784] "dead after last mention" "RVV" "temp"
    ref call_tmp[1319908]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
    (1319910 'move' call_tmp[1319908](1319912 '.' this[1319898] blk[1318344]))
    (1319915 'move' ret[1319900] call_tmp[1319908])
    (1319919 return ret[1319900])
  }
  function [domain(1,int(64),false)] real(64)[1358944].blk[1360437](const in arg this[1360441]:[domain(1,int(64),false)] real(64)[1358944]) ref : _ref(1*int(64))[1256784] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[1360443]:_ref(1*int(64))[1256784] "dead after last mention" "RVV" "temp"
    ref call_tmp[1360451]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
    (1360453 'move' call_tmp[1360451](1360455 '.' this[1360441] blk[1358887]))
    (1360458 'move' ret[1360443] call_tmp[1360451])
    (1360462 return ret[1360443])
  }
  function [domain(1,int(64),false)] int(64)[1368867].blk[1370360](const in arg this[1370364]:[domain(1,int(64),false)] int(64)[1368867]) ref : _ref(1*int(64))[1256784] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[1370366]:_ref(1*int(64))[1256784] "dead after last mention" "RVV" "temp"
    ref call_tmp[1370374]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
    (1370376 'move' call_tmp[1370374](1370378 '.' this[1370364] blk[1368810]))
    (1370381 'move' ret[1370366] call_tmp[1370374])
    (1370385 return ret[1370366])
  }
  function [domain(1,int(64),false)] range(int(64),bounded,false)[1409224].blk[1410699](const in arg this[1410703]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224]) ref : _ref(1*int(64))[1256784] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[1410705]:_ref(1*int(64))[1256784] "dead after last mention" "RVV" "temp"
    ref call_tmp[1410713]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
    (1410715 'move' call_tmp[1410713](1410717 '.' this[1410703] blk[1409167]))
    (1410720 'move' ret[1410705] call_tmp[1410713])
    (1410724 return ret[1410705])
  }
  function [domain(1,int(64),false)] uint(64)[1450261].blk[1451754](const in arg this[1451758]:[domain(1,int(64),false)] uint(64)[1450261]) ref : _ref(1*int(64))[1256784] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[1451760]:_ref(1*int(64))[1256784] "dead after last mention" "RVV" "temp"
    ref call_tmp[1451768]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
    (1451770 'move' call_tmp[1451768](1451772 '.' this[1451758] blk[1450204]))
    (1451775 'move' ret[1451760] call_tmp[1451768])
    (1451779 return ret[1451760])
  }
  function [domain(1,int(64),false)] range(int(64),bounded,false)[1409224].sizesPerDim[1474592](const in arg this[1474596]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224]) ref : _ref(1*int(64))[1256784] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1474598]:_ref(1*int(64))[1256784] "dead after last mention" "RVV" "temp"
    ref call_tmp[1474606]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
    (1474608 'move' call_tmp[1474606](1474610 '.' this[1474596] sizesPerDim[1409175]))
    (1474613 'move' ret[1474598] call_tmp[1474606])
    (1474617 return ret[1474598])
  }
  function [domain(1,int(64),false)] real(64)[1358944].sizesPerDim[1532472](const in arg this[1532476]:[domain(1,int(64),false)] real(64)[1358944]) ref : _ref(1*int(64))[1256784] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1532478]:_ref(1*int(64))[1256784] "dead after last mention" "RVV" "temp"
    ref call_tmp[1532486]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
    (1532488 'move' call_tmp[1532486](1532490 '.' this[1532476] sizesPerDim[1358895]))
    (1532493 'move' ret[1532478] call_tmp[1532486])
    (1532497 return ret[1532478])
  }
  function [domain(1,int(64),false)] locale[1256675].sizesPerDim[1713293](const in arg this[1713297]:[domain(1,int(64),false)] locale[1256675]) ref : _ref(1*int(64))[1256784] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1713299]:_ref(1*int(64))[1256784] "dead after last mention" "RVV" "temp"
    ref call_tmp[1713307]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
    (1713309 'move' call_tmp[1713307](1713311 '.' this[1713297] sizesPerDim[1256626]))
    (1713314 'move' ret[1713299] call_tmp[1713307])
    (1713318 return ret[1713299])
  }
  function [domain(1,int(64),false)] unmanaged localesSignal?[1318401].sizesPerDim[1742220](const in arg this[1742224]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401]) ref : _ref(1*int(64))[1256784] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1742226]:_ref(1*int(64))[1256784] "dead after last mention" "RVV" "temp"
    ref call_tmp[1742234]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
    (1742236 'move' call_tmp[1742234](1742238 '.' this[1742224] sizesPerDim[1318352]))
    (1742241 'move' ret[1742226] call_tmp[1742234])
    (1742245 return ret[1742226])
  }
  function [domain(1,int(64),false)] int(64)[1368867].sizesPerDim[1771388](const in arg this[1771392]:[domain(1,int(64),false)] int(64)[1368867]) ref : _ref(1*int(64))[1256784] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1771394]:_ref(1*int(64))[1256784] "dead after last mention" "RVV" "temp"
    ref call_tmp[1771402]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
    (1771404 'move' call_tmp[1771402](1771406 '.' this[1771392] sizesPerDim[1368818]))
    (1771409 'move' ret[1771394] call_tmp[1771402])
    (1771413 return ret[1771394])
  }
  function [domain(1,int(64),false)] uint(64)[1450261].sizesPerDim[1805802](const in arg this[1805806]:[domain(1,int(64),false)] uint(64)[1450261]) ref : _ref(1*int(64))[1256784] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1805808]:_ref(1*int(64))[1256784] "dead after last mention" "RVV" "temp"
    ref call_tmp[1805816]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
    (1805818 'move' call_tmp[1805816](1805820 '.' this[1805806] sizesPerDim[1450212]))
    (1805823 'move' ret[1805808] call_tmp[1805816])
    (1805827 return ret[1805808])
  }
  function [domain(1,int(64),false)] locale[1256675].str[1258310](const in arg this[1258314]:[domain(1,int(64),false)] locale[1256675]) ref : _ref(1*int(64))[1256784] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1258316]:_ref(1*int(64))[1256784] "dead after last mention" "RVV" "temp"
    ref call_tmp[1258324]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
    (1258326 'move' call_tmp[1258324](1258328 '.' this[1258314] str[1256634]))
    (1258331 'move' ret[1258316] call_tmp[1258324])
    (1258335 return ret[1258316])
  }
  function [domain(1,int(64),false)] unmanaged localesSignal?[1318401].str[1319830](const in arg this[1319834]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401]) ref : _ref(1*int(64))[1256784] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1319836]:_ref(1*int(64))[1256784] "dead after last mention" "RVV" "temp"
    ref call_tmp[1319844]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
    (1319846 'move' call_tmp[1319844](1319848 '.' this[1319834] str[1318360]))
    (1319851 'move' ret[1319836] call_tmp[1319844])
    (1319855 return ret[1319836])
  }
  function [domain(1,int(64),false)] real(64)[1358944].str[1360373](const in arg this[1360377]:[domain(1,int(64),false)] real(64)[1358944]) ref : _ref(1*int(64))[1256784] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1360379]:_ref(1*int(64))[1256784] "dead after last mention" "RVV" "temp"
    ref call_tmp[1360387]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
    (1360389 'move' call_tmp[1360387](1360391 '.' this[1360377] str[1358903]))
    (1360394 'move' ret[1360379] call_tmp[1360387])
    (1360398 return ret[1360379])
  }
  function [domain(1,int(64),false)] int(64)[1368867].str[1370296](const in arg this[1370300]:[domain(1,int(64),false)] int(64)[1368867]) ref : _ref(1*int(64))[1256784] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1370302]:_ref(1*int(64))[1256784] "dead after last mention" "RVV" "temp"
    ref call_tmp[1370310]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
    (1370312 'move' call_tmp[1370310](1370314 '.' this[1370300] str[1368826]))
    (1370317 'move' ret[1370302] call_tmp[1370310])
    (1370321 return ret[1370302])
  }
  function [domain(1,int(64),false)] range(int(64),bounded,false)[1409224].str[1410635](const in arg this[1410639]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224]) ref : _ref(1*int(64))[1256784] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1410641]:_ref(1*int(64))[1256784] "dead after last mention" "RVV" "temp"
    ref call_tmp[1410649]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
    (1410651 'move' call_tmp[1410649](1410653 '.' this[1410639] str[1409183]))
    (1410656 'move' ret[1410641] call_tmp[1410649])
    (1410660 return ret[1410641])
  }
  function [domain(1,int(64),false)] uint(64)[1450261].str[1451690](const in arg this[1451694]:[domain(1,int(64),false)] uint(64)[1450261]) ref : _ref(1*int(64))[1256784] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1451696]:_ref(1*int(64))[1256784] "dead after last mention" "RVV" "temp"
    ref call_tmp[1451704]:_ref(1*int(64))[1256784] "dead after last mention" "maybe param" "temp"
    (1451706 'move' call_tmp[1451704](1451708 '.' this[1451694] str[1450220]))
    (1451711 'move' ret[1451696] call_tmp[1451704])
    (1451715 return ret[1451696])
  }
  function [domain(1,int(64),false)] locale[1256675].factoredOffs[1259656](const in arg this[1259660]:[domain(1,int(64),false)] locale[1256675]) ref : _ref(int(64))[936761] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1259662]:_ref(int(64))[936761] "dead after last mention" "RVV" "temp"
    ref call_tmp[1259670]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (1259672 'move' call_tmp[1259670](1259674 '.' this[1259660] factoredOffs[1256640]))
    (1259677 'move' ret[1259662] call_tmp[1259670])
    (1259681 return ret[1259662])
  }
  function [domain(1,int(64),false)] unmanaged localesSignal?[1318401].factoredOffs[1320190](const in arg this[1320194]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401]) ref : _ref(int(64))[936761] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1320196]:_ref(int(64))[936761] "dead after last mention" "RVV" "temp"
    ref call_tmp[1320204]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (1320206 'move' call_tmp[1320204](1320208 '.' this[1320194] factoredOffs[1318366]))
    (1320211 'move' ret[1320196] call_tmp[1320204])
    (1320215 return ret[1320196])
  }
  function [domain(1,int(64),false)] real(64)[1358944].factoredOffs[1360733](const in arg this[1360737]:[domain(1,int(64),false)] real(64)[1358944]) ref : _ref(int(64))[936761] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1360739]:_ref(int(64))[936761] "dead after last mention" "RVV" "temp"
    ref call_tmp[1360747]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (1360749 'move' call_tmp[1360747](1360751 '.' this[1360737] factoredOffs[1358909]))
    (1360754 'move' ret[1360739] call_tmp[1360747])
    (1360758 return ret[1360739])
  }
  function [domain(1,int(64),false)] int(64)[1368867].factoredOffs[1370656](const in arg this[1370660]:[domain(1,int(64),false)] int(64)[1368867]) ref : _ref(int(64))[936761] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1370662]:_ref(int(64))[936761] "dead after last mention" "RVV" "temp"
    ref call_tmp[1370670]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (1370672 'move' call_tmp[1370670](1370674 '.' this[1370660] factoredOffs[1368832]))
    (1370677 'move' ret[1370662] call_tmp[1370670])
    (1370681 return ret[1370662])
  }
  function [domain(1,int(64),false)] range(int(64),bounded,false)[1409224].factoredOffs[1410995](const in arg this[1410999]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224]) ref : _ref(int(64))[936761] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1411001]:_ref(int(64))[936761] "dead after last mention" "RVV" "temp"
    ref call_tmp[1411009]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (1411011 'move' call_tmp[1411009](1411013 '.' this[1410999] factoredOffs[1409189]))
    (1411016 'move' ret[1411001] call_tmp[1411009])
    (1411020 return ret[1411001])
  }
  function [domain(1,int(64),false)] uint(64)[1450261].factoredOffs[1452050](const in arg this[1452054]:[domain(1,int(64),false)] uint(64)[1450261]) ref : _ref(int(64))[936761] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1452056]:_ref(int(64))[936761] "dead after last mention" "RVV" "temp"
    ref call_tmp[1452064]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (1452066 'move' call_tmp[1452064](1452068 '.' this[1452054] factoredOffs[1450226]))
    (1452071 'move' ret[1452056] call_tmp[1452064])
    (1452075 return ret[1452056])
  }
  function [domain(1,int(64),false)] locale[1256675].data[1259861](const in arg this[1259865]:[domain(1,int(64),false)] locale[1256675]) ref : _ref(_ddata(locale))[1255592] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[1259867]:_ref(_ddata(locale))[1255592] "dead after last mention" "RVV" "temp"
    ref call_tmp[1259875]:_ref(_ddata(locale))[1255592] "dead after last mention" "maybe param" "temp"
    (1259877 'move' call_tmp[1259875](1259879 '.' this[1259865] data[1256645]))
    (1259882 'move' ret[1259867] call_tmp[1259875])
    (1259886 return ret[1259867])
  }
  function [domain(1,int(64),false)] unmanaged localesSignal?[1318401].data[1320395](const in arg this[1320399]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401]) ref : _ref(_ddata(unmanaged localesSignal?))[1317571] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1320401]:_ref(_ddata(unmanaged localesSignal?))[1317571] "dead after last mention" "RVV" "temp"
    ref call_tmp[1320409]:_ref(_ddata(unmanaged localesSignal?))[1317571] "dead after last mention" "maybe param" "temp"
    (1320411 'move' call_tmp[1320409](1320413 '.' this[1320399] data[1318371]))
    (1320416 'move' ret[1320401] call_tmp[1320409])
    (1320420 return ret[1320401])
  }
  function [domain(1,int(64),false)] real(64)[1358944].data[1360938](const in arg this[1360942]:[domain(1,int(64),false)] real(64)[1358944]) ref : _ref(_ddata(real(64)))[1358114] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1360944]:_ref(_ddata(real(64)))[1358114] "dead after last mention" "RVV" "temp"
    ref call_tmp[1360952]:_ref(_ddata(real(64)))[1358114] "dead after last mention" "maybe param" "temp"
    (1360954 'move' call_tmp[1360952](1360956 '.' this[1360942] data[1358914]))
    (1360959 'move' ret[1360944] call_tmp[1360952])
    (1360963 return ret[1360944])
  }
  function [domain(1,int(64),false)] int(64)[1368867].data[1370861](const in arg this[1370865]:[domain(1,int(64),false)] int(64)[1368867]) ref : _ref(_ddata(int(64)))[1368037] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1370867]:_ref(_ddata(int(64)))[1368037] "dead after last mention" "RVV" "temp"
    ref call_tmp[1370875]:_ref(_ddata(int(64)))[1368037] "dead after last mention" "maybe param" "temp"
    (1370877 'move' call_tmp[1370875](1370879 '.' this[1370865] data[1368837]))
    (1370882 'move' ret[1370867] call_tmp[1370875])
    (1370886 return ret[1370867])
  }
  function [domain(1,int(64),false)] range(int(64),bounded,false)[1409224].data[1411200](const in arg this[1411204]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224]) ref : _ref(_ddata(range(int(64),bounded,false)))[1406051] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1411206]:_ref(_ddata(range(int(64),bounded,false)))[1406051] "dead after last mention" "RVV" "temp"
    ref call_tmp[1411214]:_ref(_ddata(range(int(64),bounded,false)))[1406051] "dead after last mention" "maybe param" "temp"
    (1411216 'move' call_tmp[1411214](1411218 '.' this[1411204] data[1409194]))
    (1411221 'move' ret[1411206] call_tmp[1411214])
    (1411225 return ret[1411206])
  }
  function [domain(1,int(64),false)] uint(64)[1450261].data[1452255](const in arg this[1452259]:[domain(1,int(64),false)] uint(64)[1450261]) ref : _ref(_ddata(uint(64)))[1449431] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1452261]:_ref(_ddata(uint(64)))[1449431] "dead after last mention" "RVV" "temp"
    ref call_tmp[1452269]:_ref(_ddata(uint(64)))[1449431] "dead after last mention" "maybe param" "temp"
    (1452271 'move' call_tmp[1452269](1452273 '.' this[1452259] data[1450231]))
    (1452276 'move' ret[1452261] call_tmp[1452269])
    (1452280 return ret[1452261])
  }
  function [domain(1,int(64),false)] locale[1256675].shiftedData[1264427](const in arg this[1264431]:[domain(1,int(64),false)] locale[1256675]) ref : _ref(_ddata(locale))[1255592] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[1264433]:_ref(_ddata(locale))[1255592] "dead after last mention" "RVV" "temp"
    ref call_tmp[1264441]:_ref(_ddata(locale))[1255592] "dead after last mention" "maybe param" "temp"
    (1264443 'move' call_tmp[1264441](1264445 '.' this[1264431] shiftedData[1256651]))
    (1264448 'move' ret[1264433] call_tmp[1264441])
    (1264452 return ret[1264433])
  }
  function [domain(1,int(64),false)] unmanaged localesSignal?[1318401].shiftedData[1323887](const in arg this[1323891]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401]) ref : _ref(_ddata(unmanaged localesSignal?))[1317571] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[1323893]:_ref(_ddata(unmanaged localesSignal?))[1317571] "dead after last mention" "RVV" "temp"
    ref call_tmp[1323901]:_ref(_ddata(unmanaged localesSignal?))[1317571] "dead after last mention" "maybe param" "temp"
    (1323903 'move' call_tmp[1323901](1323905 '.' this[1323891] shiftedData[1318377]))
    (1323908 'move' ret[1323893] call_tmp[1323901])
    (1323912 return ret[1323893])
  }
  function [domain(1,int(64),false)] real(64)[1358944].shiftedData[1364621](const in arg this[1364625]:[domain(1,int(64),false)] real(64)[1358944]) ref : _ref(_ddata(real(64)))[1358114] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[1364627]:_ref(_ddata(real(64)))[1358114] "dead after last mention" "RVV" "temp"
    ref call_tmp[1364635]:_ref(_ddata(real(64)))[1358114] "dead after last mention" "maybe param" "temp"
    (1364637 'move' call_tmp[1364635](1364639 '.' this[1364625] shiftedData[1358920]))
    (1364642 'move' ret[1364627] call_tmp[1364635])
    (1364646 return ret[1364627])
  }
  function [domain(1,int(64),false)] int(64)[1368867].shiftedData[1373096](const in arg this[1373100]:[domain(1,int(64),false)] int(64)[1368867]) ref : _ref(_ddata(int(64)))[1368037] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[1373102]:_ref(_ddata(int(64)))[1368037] "dead after last mention" "RVV" "temp"
    ref call_tmp[1373110]:_ref(_ddata(int(64)))[1368037] "dead after last mention" "maybe param" "temp"
    (1373112 'move' call_tmp[1373110](1373114 '.' this[1373100] shiftedData[1368843]))
    (1373117 'move' ret[1373102] call_tmp[1373110])
    (1373121 return ret[1373102])
  }
  function [domain(1,int(64),false)] range(int(64),bounded,false)[1409224].shiftedData[1414584](const in arg this[1414588]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224]) ref : _ref(_ddata(range(int(64),bounded,false)))[1406051] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[1414590]:_ref(_ddata(range(int(64),bounded,false)))[1406051] "dead after last mention" "RVV" "temp"
    ref call_tmp[1414598]:_ref(_ddata(range(int(64),bounded,false)))[1406051] "dead after last mention" "maybe param" "temp"
    (1414600 'move' call_tmp[1414598](1414602 '.' this[1414588] shiftedData[1409200]))
    (1414605 'move' ret[1414590] call_tmp[1414598])
    (1414609 return ret[1414590])
  }
  function [domain(1,int(64),false)] uint(64)[1450261].shiftedData[1454739](const in arg this[1454743]:[domain(1,int(64),false)] uint(64)[1450261]) ref : _ref(_ddata(uint(64)))[1449431] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[1454745]:_ref(_ddata(uint(64)))[1449431] "dead after last mention" "RVV" "temp"
    ref call_tmp[1454753]:_ref(_ddata(uint(64)))[1449431] "dead after last mention" "maybe param" "temp"
    (1454755 'move' call_tmp[1454753](1454757 '.' this[1454743] shiftedData[1450237]))
    (1454760 'move' ret[1454745] call_tmp[1454753])
    (1454764 return ret[1454745])
  }
  function [domain(1,int(64),false)] locale[1256675].externFreeFunc[1832846](const in arg this[1832850]:[domain(1,int(64),false)] locale[1256675]) ref : _ref(c_void_ptr)[938311] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1832852]:_ref(c_void_ptr)[938311] "dead after last mention" "RVV" "temp"
    ref call_tmp[1832860]:_ref(c_void_ptr)[938311] "dead after last mention" "maybe param" "temp"
    (1832862 'move' call_tmp[1832860](1832864 '.' this[1832850] externFreeFunc[1256656]))
    (1832867 'move' ret[1832852] call_tmp[1832860])
    (1832871 return ret[1832852])
  }
  function [domain(1,int(64),false)] unmanaged localesSignal?[1318401].externFreeFunc[1833832](const in arg this[1833836]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401]) ref : _ref(c_void_ptr)[938311] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1833838]:_ref(c_void_ptr)[938311] "dead after last mention" "RVV" "temp"
    ref call_tmp[1833846]:_ref(c_void_ptr)[938311] "dead after last mention" "maybe param" "temp"
    (1833848 'move' call_tmp[1833846](1833850 '.' this[1833836] externFreeFunc[1318382]))
    (1833853 'move' ret[1833838] call_tmp[1833846])
    (1833857 return ret[1833838])
  }
  function [domain(1,int(64),false)] real(64)[1358944].externFreeFunc[1834763](const in arg this[1834767]:[domain(1,int(64),false)] real(64)[1358944]) ref : _ref(c_void_ptr)[938311] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1834769]:_ref(c_void_ptr)[938311] "dead after last mention" "RVV" "temp"
    ref call_tmp[1834777]:_ref(c_void_ptr)[938311] "dead after last mention" "maybe param" "temp"
    (1834779 'move' call_tmp[1834777](1834781 '.' this[1834767] externFreeFunc[1358925]))
    (1834784 'move' ret[1834769] call_tmp[1834777])
    (1834788 return ret[1834769])
  }
  function [domain(1,int(64),false)] int(64)[1368867].externFreeFunc[1835694](const in arg this[1835698]:[domain(1,int(64),false)] int(64)[1368867]) ref : _ref(c_void_ptr)[938311] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1835700]:_ref(c_void_ptr)[938311] "dead after last mention" "RVV" "temp"
    ref call_tmp[1835708]:_ref(c_void_ptr)[938311] "dead after last mention" "maybe param" "temp"
    (1835710 'move' call_tmp[1835708](1835712 '.' this[1835698] externFreeFunc[1368848]))
    (1835715 'move' ret[1835700] call_tmp[1835708])
    (1835719 return ret[1835700])
  }
  function [domain(1,int(64),false)] range(int(64),bounded,false)[1409224].externFreeFunc[1836625](const in arg this[1836629]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224]) ref : _ref(c_void_ptr)[938311] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1836631]:_ref(c_void_ptr)[938311] "dead after last mention" "RVV" "temp"
    ref call_tmp[1836639]:_ref(c_void_ptr)[938311] "dead after last mention" "maybe param" "temp"
    (1836641 'move' call_tmp[1836639](1836643 '.' this[1836629] externFreeFunc[1409205]))
    (1836646 'move' ret[1836631] call_tmp[1836639])
    (1836650 return ret[1836631])
  }
  function [domain(1,int(64),false)] uint(64)[1450261].externFreeFunc[1837556](const in arg this[1837560]:[domain(1,int(64),false)] uint(64)[1450261]) ref : _ref(c_void_ptr)[938311] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1837562]:_ref(c_void_ptr)[938311] "dead after last mention" "RVV" "temp"
    ref call_tmp[1837570]:_ref(c_void_ptr)[938311] "dead after last mention" "maybe param" "temp"
    (1837572 'move' call_tmp[1837570](1837574 '.' this[1837560] externFreeFunc[1450242]))
    (1837577 'move' ret[1837562] call_tmp[1837570])
    (1837581 return ret[1837562])
  }
  function [domain(1,int(64),false)] locale[1256675].externArr[1832777](const in arg this[1832781]:[domain(1,int(64),false)] locale[1256675]) ref : _ref(bool)[937388] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1832783]:_ref(bool)[937388] "dead after last mention" "RVV" "temp"
    ref call_tmp[1832791]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1832793 'move' call_tmp[1832791](1832795 '.' this[1832781] externArr[1256659]))
    (1832798 'move' ret[1832783] call_tmp[1832791])
    (1832802 return ret[1832783])
  }
  function [domain(1,int(64),false)] unmanaged localesSignal?[1318401].externArr[1833763](const in arg this[1833767]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401]) ref : _ref(bool)[937388] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1833769]:_ref(bool)[937388] "dead after last mention" "RVV" "temp"
    ref call_tmp[1833777]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1833779 'move' call_tmp[1833777](1833781 '.' this[1833767] externArr[1318385]))
    (1833784 'move' ret[1833769] call_tmp[1833777])
    (1833788 return ret[1833769])
  }
  function [domain(1,int(64),false)] real(64)[1358944].externArr[1834694](const in arg this[1834698]:[domain(1,int(64),false)] real(64)[1358944]) ref : _ref(bool)[937388] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1834700]:_ref(bool)[937388] "dead after last mention" "RVV" "temp"
    ref call_tmp[1834708]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1834710 'move' call_tmp[1834708](1834712 '.' this[1834698] externArr[1358928]))
    (1834715 'move' ret[1834700] call_tmp[1834708])
    (1834719 return ret[1834700])
  }
  function [domain(1,int(64),false)] int(64)[1368867].externArr[1835625](const in arg this[1835629]:[domain(1,int(64),false)] int(64)[1368867]) ref : _ref(bool)[937388] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1835631]:_ref(bool)[937388] "dead after last mention" "RVV" "temp"
    ref call_tmp[1835639]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1835641 'move' call_tmp[1835639](1835643 '.' this[1835629] externArr[1368851]))
    (1835646 'move' ret[1835631] call_tmp[1835639])
    (1835650 return ret[1835631])
  }
  function [domain(1,int(64),false)] range(int(64),bounded,false)[1409224].externArr[1836556](const in arg this[1836560]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224]) ref : _ref(bool)[937388] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1836562]:_ref(bool)[937388] "dead after last mention" "RVV" "temp"
    ref call_tmp[1836570]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1836572 'move' call_tmp[1836570](1836574 '.' this[1836560] externArr[1409208]))
    (1836577 'move' ret[1836562] call_tmp[1836570])
    (1836581 return ret[1836562])
  }
  function [domain(1,int(64),false)] uint(64)[1450261].externArr[1837487](const in arg this[1837491]:[domain(1,int(64),false)] uint(64)[1450261]) ref : _ref(bool)[937388] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1837493]:_ref(bool)[937388] "dead after last mention" "RVV" "temp"
    ref call_tmp[1837501]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1837503 'move' call_tmp[1837501](1837505 '.' this[1837491] externArr[1450245]))
    (1837508 'move' ret[1837493] call_tmp[1837501])
    (1837512 return ret[1837493])
  }
  function [domain(1,int(64),false)] locale[1256675]._borrowed[1832811](const in arg this[1832815]:[domain(1,int(64),false)] locale[1256675]) ref : _ref(bool)[937388] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1832817]:_ref(bool)[937388] "dead after last mention" "RVV" "temp"
    ref call_tmp[1832825]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1832827 'move' call_tmp[1832825](1832829 '.' this[1832815] _borrowed[1256663]))
    (1832832 'move' ret[1832817] call_tmp[1832825])
    (1832836 return ret[1832817])
  }
  function [domain(1,int(64),false)] unmanaged localesSignal?[1318401]._borrowed[1833797](const in arg this[1833801]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401]) ref : _ref(bool)[937388] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1833803]:_ref(bool)[937388] "dead after last mention" "RVV" "temp"
    ref call_tmp[1833811]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1833813 'move' call_tmp[1833811](1833815 '.' this[1833801] _borrowed[1318389]))
    (1833818 'move' ret[1833803] call_tmp[1833811])
    (1833822 return ret[1833803])
  }
  function [domain(1,int(64),false)] real(64)[1358944]._borrowed[1834728](const in arg this[1834732]:[domain(1,int(64),false)] real(64)[1358944]) ref : _ref(bool)[937388] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1834734]:_ref(bool)[937388] "dead after last mention" "RVV" "temp"
    ref call_tmp[1834742]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1834744 'move' call_tmp[1834742](1834746 '.' this[1834732] _borrowed[1358932]))
    (1834749 'move' ret[1834734] call_tmp[1834742])
    (1834753 return ret[1834734])
  }
  function [domain(1,int(64),false)] int(64)[1368867]._borrowed[1835659](const in arg this[1835663]:[domain(1,int(64),false)] int(64)[1368867]) ref : _ref(bool)[937388] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1835665]:_ref(bool)[937388] "dead after last mention" "RVV" "temp"
    ref call_tmp[1835673]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1835675 'move' call_tmp[1835673](1835677 '.' this[1835663] _borrowed[1368855]))
    (1835680 'move' ret[1835665] call_tmp[1835673])
    (1835684 return ret[1835665])
  }
  function [domain(1,int(64),false)] range(int(64),bounded,false)[1409224]._borrowed[1836590](const in arg this[1836594]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224]) ref : _ref(bool)[937388] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1836596]:_ref(bool)[937388] "dead after last mention" "RVV" "temp"
    ref call_tmp[1836604]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1836606 'move' call_tmp[1836604](1836608 '.' this[1836594] _borrowed[1409212]))
    (1836611 'move' ret[1836596] call_tmp[1836604])
    (1836615 return ret[1836596])
  }
  function [domain(1,int(64),false)] uint(64)[1450261]._borrowed[1837521](const in arg this[1837525]:[domain(1,int(64),false)] uint(64)[1450261]) ref : _ref(bool)[937388] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1837527]:_ref(bool)[937388] "dead after last mention" "RVV" "temp"
    ref call_tmp[1837535]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1837537 'move' call_tmp[1837535](1837539 '.' this[1837525] _borrowed[1450249]))
    (1837542 'move' ret[1837527] call_tmp[1837535])
    (1837546 return ret[1837527])
  }
  function [domain(1,int(64),false)] locale[1256675].callPostAlloc[1260229](const in arg this[1260233]:[domain(1,int(64),false)] locale[1256675]) ref : _ref(bool)[937388] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1260235]:_ref(bool)[937388] "dead after last mention" "RVV" "temp"
    ref call_tmp[1260243]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1260245 'move' call_tmp[1260243](1260247 '.' this[1260233] callPostAlloc[1256667]))
    (1260250 'move' ret[1260235] call_tmp[1260243])
    (1260254 return ret[1260235])
  }
  function [domain(1,int(64),false)] unmanaged localesSignal?[1318401].callPostAlloc[1320763](const in arg this[1320767]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401]) ref : _ref(bool)[937388] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1320769]:_ref(bool)[937388] "dead after last mention" "RVV" "temp"
    ref call_tmp[1320777]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1320779 'move' call_tmp[1320777](1320781 '.' this[1320767] callPostAlloc[1318393]))
    (1320784 'move' ret[1320769] call_tmp[1320777])
    (1320788 return ret[1320769])
  }
  function [domain(1,int(64),false)] real(64)[1358944].callPostAlloc[1361306](const in arg this[1361310]:[domain(1,int(64),false)] real(64)[1358944]) ref : _ref(bool)[937388] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1361312]:_ref(bool)[937388] "dead after last mention" "RVV" "temp"
    ref call_tmp[1361320]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1361322 'move' call_tmp[1361320](1361324 '.' this[1361310] callPostAlloc[1358936]))
    (1361327 'move' ret[1361312] call_tmp[1361320])
    (1361331 return ret[1361312])
  }
  function [domain(1,int(64),false)] int(64)[1368867].callPostAlloc[1371229](const in arg this[1371233]:[domain(1,int(64),false)] int(64)[1368867]) ref : _ref(bool)[937388] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1371235]:_ref(bool)[937388] "dead after last mention" "RVV" "temp"
    ref call_tmp[1371243]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1371245 'move' call_tmp[1371243](1371247 '.' this[1371233] callPostAlloc[1368859]))
    (1371250 'move' ret[1371235] call_tmp[1371243])
    (1371254 return ret[1371235])
  }
  function [domain(1,int(64),false)] range(int(64),bounded,false)[1409224].callPostAlloc[1411568](const in arg this[1411572]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224]) ref : _ref(bool)[937388] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1411574]:_ref(bool)[937388] "dead after last mention" "RVV" "temp"
    ref call_tmp[1411582]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1411584 'move' call_tmp[1411582](1411586 '.' this[1411572] callPostAlloc[1409216]))
    (1411589 'move' ret[1411574] call_tmp[1411582])
    (1411593 return ret[1411574])
  }
  function [domain(1,int(64),false)] uint(64)[1450261].callPostAlloc[1452623](const in arg this[1452627]:[domain(1,int(64),false)] uint(64)[1450261]) ref : _ref(bool)[937388] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1452629]:_ref(bool)[937388] "dead after last mention" "RVV" "temp"
    ref call_tmp[1452637]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1452639 'move' call_tmp[1452637](1452641 '.' this[1452627] callPostAlloc[1450253]))
    (1452644 'move' ret[1452629] call_tmp[1452637])
    (1452648 return ret[1452629])
  }
  function [domain(1,int(64),false)] locale[1256675].deinitElts[1263423](const in arg this[1263427]:[domain(1,int(64),false)] locale[1256675]) ref : _ref(bool)[937388] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1263429]:_ref(bool)[937388] "dead after last mention" "RVV" "temp"
    ref call_tmp[1263437]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1263439 'move' call_tmp[1263437](1263441 '.' this[1263427] deinitElts[1256671]))
    (1263444 'move' ret[1263429] call_tmp[1263437])
    (1263448 return ret[1263429])
  }
  function [domain(1,int(64),false)] unmanaged localesSignal?[1318401].deinitElts[1323509](const in arg this[1323513]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401]) ref : _ref(bool)[937388] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1323515]:_ref(bool)[937388] "dead after last mention" "RVV" "temp"
    ref call_tmp[1323523]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1323525 'move' call_tmp[1323523](1323527 '.' this[1323513] deinitElts[1318397]))
    (1323530 'move' ret[1323515] call_tmp[1323523])
    (1323534 return ret[1323515])
  }
  function [domain(1,int(64),false)] real(64)[1358944].deinitElts[1364243](const in arg this[1364247]:[domain(1,int(64),false)] real(64)[1358944]) ref : _ref(bool)[937388] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1364249]:_ref(bool)[937388] "dead after last mention" "RVV" "temp"
    ref call_tmp[1364257]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1364259 'move' call_tmp[1364257](1364261 '.' this[1364247] deinitElts[1358940]))
    (1364264 'move' ret[1364249] call_tmp[1364257])
    (1364268 return ret[1364249])
  }
  function [domain(1,int(64),false)] int(64)[1368867].deinitElts[1372718](const in arg this[1372722]:[domain(1,int(64),false)] int(64)[1368867]) ref : _ref(bool)[937388] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1372724]:_ref(bool)[937388] "dead after last mention" "RVV" "temp"
    ref call_tmp[1372732]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1372734 'move' call_tmp[1372732](1372736 '.' this[1372722] deinitElts[1368863]))
    (1372739 'move' ret[1372724] call_tmp[1372732])
    (1372743 return ret[1372724])
  }
  function [domain(1,int(64),false)] range(int(64),bounded,false)[1409224].deinitElts[1414206](const in arg this[1414210]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224]) ref : _ref(bool)[937388] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1414212]:_ref(bool)[937388] "dead after last mention" "RVV" "temp"
    ref call_tmp[1414220]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1414222 'move' call_tmp[1414220](1414224 '.' this[1414210] deinitElts[1409220]))
    (1414227 'move' ret[1414212] call_tmp[1414220])
    (1414231 return ret[1414212])
  }
  function [domain(1,int(64),false)] uint(64)[1450261].deinitElts[1454361](const in arg this[1454365]:[domain(1,int(64),false)] uint(64)[1450261]) ref : _ref(bool)[937388] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[1454367]:_ref(bool)[937388] "dead after last mention" "RVV" "temp"
    ref call_tmp[1454375]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (1454377 'move' call_tmp[1454375](1454379 '.' this[1454365] deinitElts[1450257]))
    (1454382 'move' ret[1454367] call_tmp[1454375])
    (1454386 return ret[1454367])
  }
  function [domain(1,int(64),false)] locale[1256675].deinit[1832007](const in arg this[1832011]:[domain(1,int(64),false)] locale[1256675]) : void[4] "compiler generated" "destructor" "inline" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[1892036]
    ref _field_destructor_tmp_[1892034]:_ref(1*int(64))[1256784] "temp"
    (1892041 'move' _field_destructor_tmp_[1892034](1892038 '.' this[1832011] str[1256634]))
    (1892043 call deinit[1256754] _field_destructor_tmp_[1892034])
    ref _field_destructor_tmp_[1892046]:_ref(1*int(64))[1256784] "temp"
    (1892051 'move' _field_destructor_tmp_[1892046](1892048 '.' this[1832011] sizesPerDim[1256626]))
    (1892053 call deinit[1256754] _field_destructor_tmp_[1892046])
    ref _field_destructor_tmp_[1892056]:_ref(1*int(64))[1256784] "temp"
    (1892061 'move' _field_destructor_tmp_[1892056](1892058 '.' this[1832011] blk[1256618]))
    (1892063 call deinit[1256754] _field_destructor_tmp_[1892056])
    ref _field_destructor_tmp_[1892066]:_ref(1*int(64))[1256784] "temp"
    (1892071 'move' _field_destructor_tmp_[1892066](1892068 '.' this[1832011] off[1256612]))
    (1892073 call deinit[1256754] _field_destructor_tmp_[1892066])
    val _parent_destructor_tmp_[1892076]:BaseRectangularArr(1,int(64),false,locale)[1256461] "temp"
    (1892081 'move' _parent_destructor_tmp_[1892076](1892077 'cast' BaseRectangularArr(1,int(64),false,locale)[1256461] this[1832011]))
    (1892083 call deinit[1831995] _parent_destructor_tmp_[1892076])
    (1832017 return _void[55])
  }
  function [domain(1,int(64),false)] unmanaged localesSignal?[1318401].deinit[1832031](const in arg this[1832035]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401]) : void[4] "compiler generated" "destructor" "inline" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[1892100]
    ref _field_destructor_tmp_[1892098]:_ref(1*int(64))[1256784] "temp"
    (1892105 'move' _field_destructor_tmp_[1892098](1892102 '.' this[1832035] str[1318360]))
    (1892107 call deinit[1256754] _field_destructor_tmp_[1892098])
    ref _field_destructor_tmp_[1892110]:_ref(1*int(64))[1256784] "temp"
    (1892115 'move' _field_destructor_tmp_[1892110](1892112 '.' this[1832035] sizesPerDim[1318352]))
    (1892117 call deinit[1256754] _field_destructor_tmp_[1892110])
    ref _field_destructor_tmp_[1892120]:_ref(1*int(64))[1256784] "temp"
    (1892125 'move' _field_destructor_tmp_[1892120](1892122 '.' this[1832035] blk[1318344]))
    (1892127 call deinit[1256754] _field_destructor_tmp_[1892120])
    ref _field_destructor_tmp_[1892130]:_ref(1*int(64))[1256784] "temp"
    (1892135 'move' _field_destructor_tmp_[1892130](1892132 '.' this[1832035] off[1318338]))
    (1892137 call deinit[1256754] _field_destructor_tmp_[1892130])
    val _parent_destructor_tmp_[1892140]:BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318187] "temp"
    (1892145 'move' _parent_destructor_tmp_[1892140](1892141 'cast' BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318187] this[1832035]))
    (1892147 call deinit[1832019] _parent_destructor_tmp_[1892140])
    (1832041 return _void[55])
  }
  function [domain(1,int(64),false)] real(64)[1358944].deinit[1832055](const in arg this[1832059]:[domain(1,int(64),false)] real(64)[1358944]) : void[4] "compiler generated" "destructor" "inline" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[1892164]
    ref _field_destructor_tmp_[1892162]:_ref(1*int(64))[1256784] "temp"
    (1892169 'move' _field_destructor_tmp_[1892162](1892166 '.' this[1832059] str[1358903]))
    (1892171 call deinit[1256754] _field_destructor_tmp_[1892162])
    ref _field_destructor_tmp_[1892174]:_ref(1*int(64))[1256784] "temp"
    (1892179 'move' _field_destructor_tmp_[1892174](1892176 '.' this[1832059] sizesPerDim[1358895]))
    (1892181 call deinit[1256754] _field_destructor_tmp_[1892174])
    ref _field_destructor_tmp_[1892184]:_ref(1*int(64))[1256784] "temp"
    (1892189 'move' _field_destructor_tmp_[1892184](1892186 '.' this[1832059] blk[1358887]))
    (1892191 call deinit[1256754] _field_destructor_tmp_[1892184])
    ref _field_destructor_tmp_[1892194]:_ref(1*int(64))[1256784] "temp"
    (1892199 'move' _field_destructor_tmp_[1892194](1892196 '.' this[1832059] off[1358881]))
    (1892201 call deinit[1256754] _field_destructor_tmp_[1892194])
    val _parent_destructor_tmp_[1892204]:BaseRectangularArr(1,int(64),false,real(64))[1358730] "temp"
    (1892209 'move' _parent_destructor_tmp_[1892204](1892205 'cast' BaseRectangularArr(1,int(64),false,real(64))[1358730] this[1832059]))
    (1892211 call deinit[1832043] _parent_destructor_tmp_[1892204])
    (1832065 return _void[55])
  }
  function [domain(1,int(64),false)] int(64)[1368867].deinit[1832079](const in arg this[1832083]:[domain(1,int(64),false)] int(64)[1368867]) : void[4] "compiler generated" "destructor" "inline" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[1892228]
    ref _field_destructor_tmp_[1892226]:_ref(1*int(64))[1256784] "temp"
    (1892233 'move' _field_destructor_tmp_[1892226](1892230 '.' this[1832083] str[1368826]))
    (1892235 call deinit[1256754] _field_destructor_tmp_[1892226])
    ref _field_destructor_tmp_[1892238]:_ref(1*int(64))[1256784] "temp"
    (1892243 'move' _field_destructor_tmp_[1892238](1892240 '.' this[1832083] sizesPerDim[1368818]))
    (1892245 call deinit[1256754] _field_destructor_tmp_[1892238])
    ref _field_destructor_tmp_[1892248]:_ref(1*int(64))[1256784] "temp"
    (1892253 'move' _field_destructor_tmp_[1892248](1892250 '.' this[1832083] blk[1368810]))
    (1892255 call deinit[1256754] _field_destructor_tmp_[1892248])
    ref _field_destructor_tmp_[1892258]:_ref(1*int(64))[1256784] "temp"
    (1892263 'move' _field_destructor_tmp_[1892258](1892260 '.' this[1832083] off[1368804]))
    (1892265 call deinit[1256754] _field_destructor_tmp_[1892258])
    val _parent_destructor_tmp_[1892268]:BaseRectangularArr(1,int(64),false,int(64))[1368653] "temp"
    (1892273 'move' _parent_destructor_tmp_[1892268](1892269 'cast' BaseRectangularArr(1,int(64),false,int(64))[1368653] this[1832083]))
    (1892275 call deinit[1832067] _parent_destructor_tmp_[1892268])
    (1832089 return _void[55])
  }
  function [domain(1,int(64),false)] range(int(64),bounded,false)[1409224].deinit[1832103](const in arg this[1832107]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224]) : void[4] "compiler generated" "destructor" "inline" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[1892292]
    ref _field_destructor_tmp_[1892290]:_ref(1*int(64))[1256784] "temp"
    (1892297 'move' _field_destructor_tmp_[1892290](1892294 '.' this[1832107] str[1409183]))
    (1892299 call deinit[1256754] _field_destructor_tmp_[1892290])
    ref _field_destructor_tmp_[1892302]:_ref(1*int(64))[1256784] "temp"
    (1892307 'move' _field_destructor_tmp_[1892302](1892304 '.' this[1832107] sizesPerDim[1409175]))
    (1892309 call deinit[1256754] _field_destructor_tmp_[1892302])
    ref _field_destructor_tmp_[1892312]:_ref(1*int(64))[1256784] "temp"
    (1892317 'move' _field_destructor_tmp_[1892312](1892314 '.' this[1832107] blk[1409167]))
    (1892319 call deinit[1256754] _field_destructor_tmp_[1892312])
    ref _field_destructor_tmp_[1892322]:_ref(1*int(64))[1256784] "temp"
    (1892327 'move' _field_destructor_tmp_[1892322](1892324 '.' this[1832107] off[1409161]))
    (1892329 call deinit[1256754] _field_destructor_tmp_[1892322])
    val _parent_destructor_tmp_[1892332]:BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1409010] "temp"
    (1892337 'move' _parent_destructor_tmp_[1892332](1892333 'cast' BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1409010] this[1832107]))
    (1892339 call deinit[1832091] _parent_destructor_tmp_[1892332])
    (1832113 return _void[55])
  }
  function [domain(1,int(64),false)] uint(64)[1450261].deinit[1832127](const in arg this[1832131]:[domain(1,int(64),false)] uint(64)[1450261]) : void[4] "compiler generated" "destructor" "inline" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[1892356]
    ref _field_destructor_tmp_[1892354]:_ref(1*int(64))[1256784] "temp"
    (1892361 'move' _field_destructor_tmp_[1892354](1892358 '.' this[1832131] str[1450220]))
    (1892363 call deinit[1256754] _field_destructor_tmp_[1892354])
    ref _field_destructor_tmp_[1892366]:_ref(1*int(64))[1256784] "temp"
    (1892371 'move' _field_destructor_tmp_[1892366](1892368 '.' this[1832131] sizesPerDim[1450212]))
    (1892373 call deinit[1256754] _field_destructor_tmp_[1892366])
    ref _field_destructor_tmp_[1892376]:_ref(1*int(64))[1256784] "temp"
    (1892381 'move' _field_destructor_tmp_[1892376](1892378 '.' this[1832131] blk[1450204]))
    (1892383 call deinit[1256754] _field_destructor_tmp_[1892376])
    ref _field_destructor_tmp_[1892386]:_ref(1*int(64))[1256784] "temp"
    (1892391 'move' _field_destructor_tmp_[1892386](1892388 '.' this[1832131] off[1450198]))
    (1892393 call deinit[1256754] _field_destructor_tmp_[1892386])
    val _parent_destructor_tmp_[1892396]:BaseRectangularArr(1,int(64),false,uint(64))[1450047] "temp"
    (1892401 'move' _parent_destructor_tmp_[1892396](1892397 'cast' BaseRectangularArr(1,int(64),false,uint(64))[1450047] this[1832131]))
    (1892403 call deinit[1832115] _parent_destructor_tmp_[1892396])
    (1832137 return _void[55])
  }
  function _new[1264638](const in arg dom[1264669]:domain(1,int(64),false)[1251123], const in arg data[1264683]:_ddata(locale)[1255583], const in arg externArr[1264690]:bool[10], const in arg _borrowed[1264697]:bool[10], const in arg externFreeFunc[1264702]:c_void_ptr[149]) : [domain(1,int(64),false)] locale[1256675] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val _formal_type_tmp_[1879949]:int(64)[13] "temp"
    val _formal_type_tmp_[1879947]:locale[28] "temp"
    val _formal_type_tmp_[1879945]:[domain(1,int(64),false)] locale[1256675] "temp"
    val ret[1264735]:[domain(1,int(64),false)] locale[1256675] "dead after last mention" "RVV" "temp"
    val initTemp[1264640]:[domain(1,int(64),false)] locale[1256675] "dead after last mention" "temp"
    const-val call_tmp[1264742]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1264745 'move' call_tmp[1264742](1264886 'sizeof_bundle' [domain(1,int(64),false)] locale[1256675]))
    const-val cast_tmp[1264889]:c_void_ptr[149] "dead after last mention" "temp"
    (1264891 'move' cast_tmp[1264889](1264710 call chpl_here_alloc[187788] call_tmp[1264742] 45))
    (1264713 'move' initTemp[1264640](1264893 'cast' [domain(1,int(64),false)] locale[1256675] cast_tmp[1264889]))
    (1264715 'setcid' initTemp[1264640])
    (1264641 call init[1255512] initTemp[1264640] dom[1264669] data[1264683] externArr[1264690] _borrowed[1264697] externFreeFunc[1264702])
    val tmp[1264717]:[domain(1,int(64),false)] locale[1256675] "dead after last mention" "temp"
    (1264724 'move' tmp[1264717] initTemp[1264640])
    (1264740 'move' ret[1264735] tmp[1264717])
    (1264737 return ret[1264735])
  }
  function _new_default_externFreeFunc[1264861]() : nil[42] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "resolved" "was compiler generated"
  {
    val ret[1264863]:nil[42] "dead after last mention" "RVV" "maybe param" "temp"
    const-val externFreeFunc[1264868]:nil[42] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1264872 'move' externFreeFunc[1264868] nil[44])
    (1264875 'move' ret[1264863] externFreeFunc[1264868])
    (1264866 return ret[1264863])
  }
  function _new_default_data[1264765]() : _ddata(locale)[1255583] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "resolved" "was compiler generated"
  {
    val ret[1264767]:_ddata(locale)[1255583] "dead after last mention" "RVV" "maybe param" "temp"
    val data[1264772]:_ddata(locale)[1255583] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val tmp[1264776]:_ddata(locale)[1255583] "dead after last mention" "temp"
    val _formal_type[1264778]:_ddata(locale)[1255583] "dead after last mention" "temp" "type variable"
    (1264786 'move' tmp[1264776](1264795 'cast' _ddata(locale)[1255583] nil[44]))
    (1264789 'move' data[1264772] tmp[1264776])
    (1264792 'move' ret[1264767] data[1264772])
    (1264770 return ret[1264767])
  }
  type [domain(1,int(64),false)] locale[1256675] val super[1256593]:BaseRectangularArr(1,int(64),false,locale)[1256461] "super class" val dom[1256602]:domain(1,int(64),false)[1251123] val off[1256612]:1*int(64)[1256714] val blk[1256618]:1*int(64)[1256714] val sizesPerDim[1256626]:1*int(64)[1256714] val str[1256634]:1*int(64)[1256714] val factoredOffs[1256640]:int(64)[13] val data[1256645]:_ddata(locale)[1255583] "alias scope from this" "local field" val shiftedData[1256651]:_ddata(locale)[1255583] "alias scope from this" "local field" val externFreeFunc[1256656]:c_void_ptr[149] val externArr[1256659]:bool[10] val _borrowed[1256663]:bool[10] val callPostAlloc[1256667]:bool[10] val deinitElts[1256671]:bool[10]
  function _new[1324047](const in arg dom[1324078]:domain(1,int(64),false)[1251123], const in arg data[1324092]:_ddata(unmanaged localesSignal?)[1317562], const in arg externArr[1324099]:bool[10], const in arg _borrowed[1324106]:bool[10], const in arg externFreeFunc[1324111]:c_void_ptr[149]) : [domain(1,int(64),false)] unmanaged localesSignal?[1318401] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val _formal_type_tmp_[1880006]:int(64)[13] "temp"
    val _formal_type_tmp_[1880004]:localesSignal[92278] "temp"
    val _formal_type_tmp_[1880002]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] "temp"
    val ret[1324144]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] "dead after last mention" "RVV" "temp"
    val initTemp[1324049]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] "dead after last mention" "temp"
    const-val call_tmp[1324151]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1324154 'move' call_tmp[1324151](1324295 'sizeof_bundle' [domain(1,int(64),false)] unmanaged localesSignal?[1318401]))
    const-val cast_tmp[1324298]:c_void_ptr[149] "dead after last mention" "temp"
    (1324300 'move' cast_tmp[1324298](1324119 call chpl_here_alloc[187788] call_tmp[1324151] 58))
    (1324122 'move' initTemp[1324049](1324302 'cast' [domain(1,int(64),false)] unmanaged localesSignal?[1318401] cast_tmp[1324298]))
    (1324124 'setcid' initTemp[1324049])
    (1324050 call init[1317491] initTemp[1324049] dom[1324078] data[1324092] externArr[1324099] _borrowed[1324106] externFreeFunc[1324111])
    val tmp[1324126]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] "dead after last mention" "temp"
    (1324133 'move' tmp[1324126] initTemp[1324049])
    (1324149 'move' ret[1324144] tmp[1324126])
    (1324146 return ret[1324144])
  }
  function _new_default_externFreeFunc[1324270]() : nil[42] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "resolved" "was compiler generated"
  {
    val ret[1324272]:nil[42] "dead after last mention" "RVV" "maybe param" "temp"
    const-val externFreeFunc[1324277]:nil[42] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1324281 'move' externFreeFunc[1324277] nil[44])
    (1324284 'move' ret[1324272] externFreeFunc[1324277])
    (1324275 return ret[1324272])
  }
  function _new_default_data[1324174]() : _ddata(unmanaged localesSignal?)[1317562] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "resolved" "was compiler generated"
  {
    val ret[1324176]:_ddata(unmanaged localesSignal?)[1317562] "dead after last mention" "RVV" "maybe param" "temp"
    val data[1324181]:_ddata(unmanaged localesSignal?)[1317562] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val tmp[1324185]:_ddata(unmanaged localesSignal?)[1317562] "dead after last mention" "temp"
    val _formal_type[1324187]:_ddata(unmanaged localesSignal?)[1317562] "dead after last mention" "temp" "type variable"
    (1324195 'move' tmp[1324185](1324204 'cast' _ddata(unmanaged localesSignal?)[1317562] nil[44]))
    (1324198 'move' data[1324181] tmp[1324185])
    (1324201 'move' ret[1324176] data[1324181])
    (1324179 return ret[1324176])
  }
  type [domain(1,int(64),false)] unmanaged localesSignal?[1318401] val super[1318319]:BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318187] "super class" val dom[1318328]:domain(1,int(64),false)[1251123] val off[1318338]:1*int(64)[1256714] val blk[1318344]:1*int(64)[1256714] val sizesPerDim[1318352]:1*int(64)[1256714] val str[1318360]:1*int(64)[1256714] val factoredOffs[1318366]:int(64)[13] val data[1318371]:_ddata(unmanaged localesSignal?)[1317562] "alias scope from this" "local field" val shiftedData[1318377]:_ddata(unmanaged localesSignal?)[1317562] "alias scope from this" "local field" val externFreeFunc[1318382]:c_void_ptr[149] val externArr[1318385]:bool[10] val _borrowed[1318389]:bool[10] val callPostAlloc[1318393]:bool[10] val deinitElts[1318397]:bool[10]
  function _new[1364781](const in arg dom[1364812]:domain(1,int(64),false)[1251123], const in arg data[1364826]:_ddata(real(64))[1358105], const in arg externArr[1364833]:bool[10], const in arg _borrowed[1364840]:bool[10], const in arg externFreeFunc[1364845]:c_void_ptr[149]) : [domain(1,int(64),false)] real(64)[1358944] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val _formal_type_tmp_[1880090]:int(64)[13] "temp"
    val _formal_type_tmp_[1880088]:real(64)[16] "temp"
    val _formal_type_tmp_[1880086]:[domain(1,int(64),false)] real(64)[1358944] "temp"
    val ret[1364878]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "RVV" "temp"
    val initTemp[1364783]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "temp"
    const-val call_tmp[1364885]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1364888 'move' call_tmp[1364885](1365029 'sizeof_bundle' [domain(1,int(64),false)] real(64)[1358944]))
    const-val cast_tmp[1365032]:c_void_ptr[149] "dead after last mention" "temp"
    (1365034 'move' cast_tmp[1365032](1364853 call chpl_here_alloc[187788] call_tmp[1364885] 65))
    (1364856 'move' initTemp[1364783](1365036 'cast' [domain(1,int(64),false)] real(64)[1358944] cast_tmp[1365032]))
    (1364858 'setcid' initTemp[1364783])
    (1364784 call init[1358034] initTemp[1364783] dom[1364812] data[1364826] externArr[1364833] _borrowed[1364840] externFreeFunc[1364845])
    val tmp[1364860]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "temp"
    (1364867 'move' tmp[1364860] initTemp[1364783])
    (1364883 'move' ret[1364878] tmp[1364860])
    (1364880 return ret[1364878])
  }
  function _new_default_externFreeFunc[1365004]() : nil[42] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "resolved" "was compiler generated"
  {
    val ret[1365006]:nil[42] "dead after last mention" "RVV" "maybe param" "temp"
    const-val externFreeFunc[1365011]:nil[42] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1365015 'move' externFreeFunc[1365011] nil[44])
    (1365018 'move' ret[1365006] externFreeFunc[1365011])
    (1365009 return ret[1365006])
  }
  function _new_default_data[1364908]() : _ddata(real(64))[1358105] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "resolved" "was compiler generated"
  {
    val ret[1364910]:_ddata(real(64))[1358105] "dead after last mention" "RVV" "maybe param" "temp"
    val data[1364915]:_ddata(real(64))[1358105] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val tmp[1364919]:_ddata(real(64))[1358105] "dead after last mention" "temp"
    val _formal_type[1364921]:_ddata(real(64))[1358105] "dead after last mention" "temp" "type variable"
    (1364929 'move' tmp[1364919](1364938 'cast' _ddata(real(64))[1358105] nil[44]))
    (1364932 'move' data[1364915] tmp[1364919])
    (1364935 'move' ret[1364910] data[1364915])
    (1364913 return ret[1364910])
  }
  function _new[1521726](const in arg dom[1521757]:domain(1,int(64),false)[1251123], const in arg data[1521771]:_ddata(real(64))[1358105], const in arg externArr[1521778]:bool[10], const in arg _borrowed[1521785]:bool[10], const in arg externFreeFunc[1521790]:c_void_ptr[149]) : [domain(1,int(64),false)] real(64)[1358944] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val _formal_type_tmp_[1880263]:int(64)[13] "temp"
    val _formal_type_tmp_[1880261]:real(64)[16] "temp"
    val _formal_type_tmp_[1880259]:[domain(1,int(64),false)] real(64)[1358944] "temp"
    val ret[1521818]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "RVV" "temp"
    val initTemp[1521728]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "temp"
    const-val call_tmp[1521825]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1521828 'move' call_tmp[1521825](1521969 'sizeof_bundle' [domain(1,int(64),false)] real(64)[1358944]))
    const-val cast_tmp[1521972]:c_void_ptr[149] "dead after last mention" "temp"
    (1521974 'move' cast_tmp[1521972](1521796 call chpl_here_alloc[187788] call_tmp[1521825] 65))
    (1521799 'move' initTemp[1521728](1521976 'cast' [domain(1,int(64),false)] real(64)[1358944] cast_tmp[1521972]))
    (1521801 'setcid' initTemp[1521728])
    (1521729 call init[1519645] initTemp[1521728] dom[1521757] data[1521771] externArr[1521778] _borrowed[1521785] externFreeFunc[1521790])
    val tmp[1521803]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "temp"
    (1521807 'move' tmp[1521803] initTemp[1521728])
    (1521823 'move' ret[1521818] tmp[1521803])
    (1521820 return ret[1521818])
  }
  function _new_default_externFreeFunc[1521944]() : nil[42] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "resolved" "was compiler generated"
  {
    val ret[1521946]:nil[42] "dead after last mention" "RVV" "maybe param" "temp"
    const-val externFreeFunc[1521951]:nil[42] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1521955 'move' externFreeFunc[1521951] nil[44])
    (1521958 'move' ret[1521946] externFreeFunc[1521951])
    (1521949 return ret[1521946])
  }
  function _new_default_data[1521848]() : _ddata(real(64))[1358105] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "resolved" "was compiler generated"
  {
    val ret[1521850]:_ddata(real(64))[1358105] "dead after last mention" "RVV" "maybe param" "temp"
    val data[1521855]:_ddata(real(64))[1358105] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val tmp[1521859]:_ddata(real(64))[1358105] "dead after last mention" "temp"
    val _formal_type[1521861]:_ddata(real(64))[1358105] "dead after last mention" "temp" "type variable"
    (1521869 'move' tmp[1521859](1521878 'cast' _ddata(real(64))[1358105] nil[44]))
    (1521872 'move' data[1521855] tmp[1521859])
    (1521875 'move' ret[1521850] data[1521855])
    (1521853 return ret[1521850])
  }
  type [domain(1,int(64),false)] real(64)[1358944] val super[1358862]:BaseRectangularArr(1,int(64),false,real(64))[1358730] "super class" val dom[1358871]:domain(1,int(64),false)[1251123] val off[1358881]:1*int(64)[1256714] val blk[1358887]:1*int(64)[1256714] val sizesPerDim[1358895]:1*int(64)[1256714] val str[1358903]:1*int(64)[1256714] val factoredOffs[1358909]:int(64)[13] val data[1358914]:_ddata(real(64))[1358105] "alias scope from this" "local field" val shiftedData[1358920]:_ddata(real(64))[1358105] "alias scope from this" "local field" val externFreeFunc[1358925]:c_void_ptr[149] val externArr[1358928]:bool[10] val _borrowed[1358932]:bool[10] val callPostAlloc[1358936]:bool[10] val deinitElts[1358940]:bool[10]
  function _new[1373256](const in arg dom[1373287]:domain(1,int(64),false)[1251123], const in arg data[1373301]:_ddata(int(64))[1368028], const in arg externArr[1373308]:bool[10], const in arg _borrowed[1373315]:bool[10], const in arg externFreeFunc[1373320]:c_void_ptr[149]) : [domain(1,int(64),false)] int(64)[1368867] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val _formal_type_tmp_[1880126]:int(64)[13] "temp"
    val _formal_type_tmp_[1880124]:int(64)[13] "temp"
    val _formal_type_tmp_[1880122]:[domain(1,int(64),false)] int(64)[1368867] "temp"
    val ret[1373353]:[domain(1,int(64),false)] int(64)[1368867] "dead after last mention" "RVV" "temp"
    val initTemp[1373258]:[domain(1,int(64),false)] int(64)[1368867] "dead after last mention" "temp"
    const-val call_tmp[1373360]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1373363 'move' call_tmp[1373360](1373504 'sizeof_bundle' [domain(1,int(64),false)] int(64)[1368867]))
    const-val cast_tmp[1373507]:c_void_ptr[149] "dead after last mention" "temp"
    (1373509 'move' cast_tmp[1373507](1373328 call chpl_here_alloc[187788] call_tmp[1373360] 66))
    (1373331 'move' initTemp[1373258](1373511 'cast' [domain(1,int(64),false)] int(64)[1368867] cast_tmp[1373507]))
    (1373333 'setcid' initTemp[1373258])
    (1373259 call init[1367957] initTemp[1373258] dom[1373287] data[1373301] externArr[1373308] _borrowed[1373315] externFreeFunc[1373320])
    val tmp[1373335]:[domain(1,int(64),false)] int(64)[1368867] "dead after last mention" "temp"
    (1373342 'move' tmp[1373335] initTemp[1373258])
    (1373358 'move' ret[1373353] tmp[1373335])
    (1373355 return ret[1373353])
  }
  function _new_default_externFreeFunc[1373479]() : nil[42] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "resolved" "was compiler generated"
  {
    val ret[1373481]:nil[42] "dead after last mention" "RVV" "maybe param" "temp"
    const-val externFreeFunc[1373486]:nil[42] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1373490 'move' externFreeFunc[1373486] nil[44])
    (1373493 'move' ret[1373481] externFreeFunc[1373486])
    (1373484 return ret[1373481])
  }
  function _new_default_data[1373383]() : _ddata(int(64))[1368028] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "resolved" "was compiler generated"
  {
    val ret[1373385]:_ddata(int(64))[1368028] "dead after last mention" "RVV" "maybe param" "temp"
    val data[1373390]:_ddata(int(64))[1368028] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val tmp[1373394]:_ddata(int(64))[1368028] "dead after last mention" "temp"
    val _formal_type[1373396]:_ddata(int(64))[1368028] "dead after last mention" "temp" "type variable"
    (1373404 'move' tmp[1373394](1373413 'cast' _ddata(int(64))[1368028] nil[44]))
    (1373407 'move' data[1373390] tmp[1373394])
    (1373410 'move' ret[1373385] data[1373390])
    (1373388 return ret[1373385])
  }
  type [domain(1,int(64),false)] int(64)[1368867] val super[1368785]:BaseRectangularArr(1,int(64),false,int(64))[1368653] "super class" val dom[1368794]:domain(1,int(64),false)[1251123] val off[1368804]:1*int(64)[1256714] val blk[1368810]:1*int(64)[1256714] val sizesPerDim[1368818]:1*int(64)[1256714] val str[1368826]:1*int(64)[1256714] val factoredOffs[1368832]:int(64)[13] val data[1368837]:_ddata(int(64))[1368028] "alias scope from this" "local field" val shiftedData[1368843]:_ddata(int(64))[1368028] "alias scope from this" "local field" val externFreeFunc[1368848]:c_void_ptr[149] val externArr[1368851]:bool[10] val _borrowed[1368855]:bool[10] val callPostAlloc[1368859]:bool[10] val deinitElts[1368863]:bool[10]
  function _new[1414744](const in arg dom[1414775]:domain(1,int(64),false)[1251123], const in arg data[1414789]:_ddata(range(int(64),bounded,false))[1406042], const in arg externArr[1414796]:bool[10], const in arg _borrowed[1414803]:bool[10], const in arg externFreeFunc[1414808]:c_void_ptr[149]) : [domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val _formal_type_tmp_[1880181]:int(64)[13] "temp"
    val _formal_type_tmp_[1880179]:range(int(64),bounded,false)[1027003] "temp"
    val _formal_type_tmp_[1880177]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "temp"
    val ret[1414841]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "RVV" "temp"
    val initTemp[1414746]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "temp"
    const-val call_tmp[1414848]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1414851 'move' call_tmp[1414848](1414950 'sizeof_bundle' [domain(1,int(64),false)] range(int(64),bounded,false)[1409224]))
    const-val cast_tmp[1414953]:c_void_ptr[149] "dead after last mention" "temp"
    (1414955 'move' cast_tmp[1414953](1414816 call chpl_here_alloc[187788] call_tmp[1414848] 83))
    (1414819 'move' initTemp[1414746](1414957 'cast' [domain(1,int(64),false)] range(int(64),bounded,false)[1409224] cast_tmp[1414953]))
    (1414821 'setcid' initTemp[1414746])
    (1414747 call init[1408329] initTemp[1414746] dom[1414775] data[1414789] externArr[1414796] _borrowed[1414803] externFreeFunc[1414808])
    val tmp[1414823]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "temp"
    (1414830 'move' tmp[1414823] initTemp[1414746])
    (1414846 'move' ret[1414841] tmp[1414823])
    (1414843 return ret[1414841])
  }
  function _new_default_data[1417191]() : _ddata(range(int(64),bounded,false))[1406042] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "resolved" "was compiler generated"
  {
    val ret[1417193]:_ddata(range(int(64),bounded,false))[1406042] "dead after last mention" "RVV" "maybe param" "temp"
    val data[1417198]:_ddata(range(int(64),bounded,false))[1406042] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val tmp[1417202]:_ddata(range(int(64),bounded,false))[1406042] "dead after last mention" "temp"
    val _formal_type[1417204]:_ddata(range(int(64),bounded,false))[1406042] "dead after last mention" "temp" "type variable"
    (1417212 'move' tmp[1417202](1417221 'cast' _ddata(range(int(64),bounded,false))[1406042] nil[44]))
    (1417215 'move' data[1417198] tmp[1417202])
    (1417218 'move' ret[1417193] data[1417198])
    (1417196 return ret[1417193])
  }
  function _new_default_externFreeFunc[1414925]() : nil[42] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "resolved" "was compiler generated"
  {
    val ret[1414927]:nil[42] "dead after last mention" "RVV" "maybe param" "temp"
    const-val externFreeFunc[1414932]:nil[42] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1414936 'move' externFreeFunc[1414932] nil[44])
    (1414939 'move' ret[1414927] externFreeFunc[1414932])
    (1414930 return ret[1414927])
  }
  function _new[1421330](const in arg dom[1421361]:domain(1,int(64),false)[1251123], const in arg data[1421375]:_ddata(range(int(64),bounded,false))[1406042], const in arg externArr[1421382]:bool[10], const in arg _borrowed[1421389]:bool[10], const in arg externFreeFunc[1421394]:c_void_ptr[149]) : [domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val _formal_type_tmp_[1880203]:int(64)[13] "temp"
    val _formal_type_tmp_[1880201]:range(int(64),bounded,false)[1027003] "temp"
    val _formal_type_tmp_[1880199]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "temp"
    val ret[1421422]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "RVV" "temp"
    val initTemp[1421332]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "temp"
    const-val call_tmp[1421429]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1421432 'move' call_tmp[1421429](1421573 'sizeof_bundle' [domain(1,int(64),false)] range(int(64),bounded,false)[1409224]))
    const-val cast_tmp[1421576]:c_void_ptr[149] "dead after last mention" "temp"
    (1421578 'move' cast_tmp[1421576](1421400 call chpl_here_alloc[187788] call_tmp[1421429] 83))
    (1421403 'move' initTemp[1421332](1421580 'cast' [domain(1,int(64),false)] range(int(64),bounded,false)[1409224] cast_tmp[1421576]))
    (1421405 'setcid' initTemp[1421332])
    (1421333 call init[1419249] initTemp[1421332] dom[1421361] data[1421375] externArr[1421382] _borrowed[1421389] externFreeFunc[1421394])
    val tmp[1421407]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "temp"
    (1421411 'move' tmp[1421407] initTemp[1421332])
    (1421427 'move' ret[1421422] tmp[1421407])
    (1421424 return ret[1421422])
  }
  function _new_default_externFreeFunc[1421548]() : nil[42] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "resolved" "was compiler generated"
  {
    val ret[1421550]:nil[42] "dead after last mention" "RVV" "maybe param" "temp"
    const-val externFreeFunc[1421555]:nil[42] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1421559 'move' externFreeFunc[1421555] nil[44])
    (1421562 'move' ret[1421550] externFreeFunc[1421555])
    (1421553 return ret[1421550])
  }
  function _new_default_data[1421452]() : _ddata(range(int(64),bounded,false))[1406042] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "resolved" "was compiler generated"
  {
    val ret[1421454]:_ddata(range(int(64),bounded,false))[1406042] "dead after last mention" "RVV" "maybe param" "temp"
    val data[1421459]:_ddata(range(int(64),bounded,false))[1406042] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val tmp[1421463]:_ddata(range(int(64),bounded,false))[1406042] "dead after last mention" "temp"
    val _formal_type[1421465]:_ddata(range(int(64),bounded,false))[1406042] "dead after last mention" "temp" "type variable"
    (1421473 'move' tmp[1421463](1421482 'cast' _ddata(range(int(64),bounded,false))[1406042] nil[44]))
    (1421476 'move' data[1421459] tmp[1421463])
    (1421479 'move' ret[1421454] data[1421459])
    (1421457 return ret[1421454])
  }
  type [domain(1,int(64),false)] range(int(64),bounded,false)[1409224] val super[1409142]:BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1409010] "super class" val dom[1409151]:domain(1,int(64),false)[1251123] val off[1409161]:1*int(64)[1256714] val blk[1409167]:1*int(64)[1256714] val sizesPerDim[1409175]:1*int(64)[1256714] val str[1409183]:1*int(64)[1256714] val factoredOffs[1409189]:int(64)[13] val data[1409194]:_ddata(range(int(64),bounded,false))[1406042] "alias scope from this" "local field" val shiftedData[1409200]:_ddata(range(int(64),bounded,false))[1406042] "alias scope from this" "local field" val externFreeFunc[1409205]:c_void_ptr[149] val externArr[1409208]:bool[10] val _borrowed[1409212]:bool[10] val callPostAlloc[1409216]:bool[10] val deinitElts[1409220]:bool[10]
  function _new[1454899](const in arg dom[1454930]:domain(1,int(64),false)[1251123], const in arg data[1454944]:_ddata(uint(64))[1449422], const in arg externArr[1454951]:bool[10], const in arg _borrowed[1454958]:bool[10], const in arg externFreeFunc[1454963]:c_void_ptr[149]) : [domain(1,int(64),false)] uint(64)[1450261] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val _formal_type_tmp_[1880239]:int(64)[13] "temp"
    val _formal_type_tmp_[1880237]:uint(64)[115] "temp"
    val _formal_type_tmp_[1880235]:[domain(1,int(64),false)] uint(64)[1450261] "temp"
    val ret[1454996]:[domain(1,int(64),false)] uint(64)[1450261] "dead after last mention" "RVV" "temp"
    val initTemp[1454901]:[domain(1,int(64),false)] uint(64)[1450261] "dead after last mention" "temp"
    const-val call_tmp[1455003]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1455006 'move' call_tmp[1455003](1455147 'sizeof_bundle' [domain(1,int(64),false)] uint(64)[1450261]))
    const-val cast_tmp[1455150]:c_void_ptr[149] "dead after last mention" "temp"
    (1455152 'move' cast_tmp[1455150](1454971 call chpl_here_alloc[187788] call_tmp[1455003] 86))
    (1454974 'move' initTemp[1454901](1455154 'cast' [domain(1,int(64),false)] uint(64)[1450261] cast_tmp[1455150]))
    (1454976 'setcid' initTemp[1454901])
    (1454902 call init[1449351] initTemp[1454901] dom[1454930] data[1454944] externArr[1454951] _borrowed[1454958] externFreeFunc[1454963])
    val tmp[1454978]:[domain(1,int(64),false)] uint(64)[1450261] "dead after last mention" "temp"
    (1454985 'move' tmp[1454978] initTemp[1454901])
    (1455001 'move' ret[1454996] tmp[1454978])
    (1454998 return ret[1454996])
  }
  function _new_default_externFreeFunc[1455122]() : nil[42] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "resolved" "was compiler generated"
  {
    val ret[1455124]:nil[42] "dead after last mention" "RVV" "maybe param" "temp"
    const-val externFreeFunc[1455129]:nil[42] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1455133 'move' externFreeFunc[1455129] nil[44])
    (1455136 'move' ret[1455124] externFreeFunc[1455129])
    (1455127 return ret[1455124])
  }
  function _new_default_data[1455026]() : _ddata(uint(64))[1449422] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "resolved" "was compiler generated"
  {
    val ret[1455028]:_ddata(uint(64))[1449422] "dead after last mention" "RVV" "maybe param" "temp"
    val data[1455033]:_ddata(uint(64))[1449422] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val tmp[1455037]:_ddata(uint(64))[1449422] "dead after last mention" "temp"
    val _formal_type[1455039]:_ddata(uint(64))[1449422] "dead after last mention" "temp" "type variable"
    (1455047 'move' tmp[1455037](1455056 'cast' _ddata(uint(64))[1449422] nil[44]))
    (1455050 'move' data[1455033] tmp[1455037])
    (1455053 'move' ret[1455028] data[1455033])
    (1455031 return ret[1455028])
  }
  type [domain(1,int(64),false)] uint(64)[1450261] val super[1450179]:BaseRectangularArr(1,int(64),false,uint(64))[1450047] "super class" val dom[1450188]:domain(1,int(64),false)[1251123] val off[1450198]:1*int(64)[1256714] val blk[1450204]:1*int(64)[1256714] val sizesPerDim[1450212]:1*int(64)[1256714] val str[1450220]:1*int(64)[1256714] val factoredOffs[1450226]:int(64)[13] val data[1450231]:_ddata(uint(64))[1449422] "alias scope from this" "local field" val shiftedData[1450237]:_ddata(uint(64))[1449422] "alias scope from this" "local field" val externFreeFunc[1450242]:c_void_ptr[149] val externArr[1450245]:bool[10] val _borrowed[1450249]:bool[10] val callPostAlloc[1450253]:bool[10] val deinitElts[1450257]:bool[10]
  function chpl__serialViewIter[1298664](const in arg arr[1298666]:[domain(1,int(64),false)] locale[1256675], const in arg viewDom[1298668]:domain(1,int(64),false)[1251123], ref arg _retArg[1913414]:_ref(_ir_chpl__serialViewIter)[1303742]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[2126178]:_ir_chpl__serialViewIter[1303631] "temp"
    (2126180 '.=' _ir[2126178] F0_arr[2124686] arr[1298666])
    (2126184 '.=' _ir[2126178] F1_viewDom[2124690] viewDom[1298668])
    (2126188 '=' _retArg[1913414] _ir[2126178])
    (2126191 return _void[55])
  }
  type _ic_chpl__serialViewIter[1303625] val super[1303626]:object[22] "super class" val more[1303628]:int(64)[13] const-val F0_arr[2124684]:[domain(1,int(64),false)] locale[1256675] const-val F1_viewDom[2124688]:domain(1,int(64),false)[1251123] val F2_info[2124692]:[domain(1,int(64),false)] locale[1256675] val F3__iterator[2124694]:_ic_chpl_direct_pos_stride_range_iter[1303186] val F4_i[2124696]:int(64)[13] const-val F5_low[2124698]:int(64)[13] ref value[2124700]:_ref(locale)[949033]
  type _ir_chpl__serialViewIter[1303631] const-val F0_arr[2124686]:[domain(1,int(64),false)] locale[1256675] const-val F1_viewDom[2124690]:domain(1,int(64),false)[1251123]
  function _getIterator[1303640](const  ref arg ir[1303642]:_ir_chpl__serialViewIter[1303631]) : _ic_chpl__serialViewIter[1303625] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1303749]:_ic_chpl__serialViewIter[1303625] "dead after last mention" "RVV" "temp"
    val _ic_[1303632]:_ic_chpl__serialViewIter[1303625] "dead after last mention" "temp"
    const-val call_tmp[1303756]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1303759 'move' call_tmp[1303756](1303771 'sizeof_bundle' _ic_chpl__serialViewIter[1303625]))
    const-val cast_tmp[1303774]:c_void_ptr[149] "dead after last mention" "temp"
    (1303776 'move' cast_tmp[1303774](1303637 call chpl_here_alloc[187788] call_tmp[1303756] 51))
    (1303645 'move' _ic_[1303632](1303778 'cast' _ic_chpl__serialViewIter[1303625] cast_tmp[1303774]))
    (1303647 'setcid' _ic_[1303632])
    (1303754 'move' ret[1303749] _ic_[1303632])
    (2126194 '.=' ret[1303749] more[1303628] 1)
    const-val tmp[2126198]:[domain(1,int(64),false)] locale[1256675] "temp"
    (2126203 'move' tmp[2126198](2126199 '.v' ir[1303642] F0_arr[2124686]))
    (2126205 '.=' ret[1303749] F0_arr[2124684] tmp[2126198])
    const-val tmp[2126209]:domain(1,int(64),false)[1251123] "temp"
    (2126214 'move' tmp[2126209](2126210 '.v' ir[1303642] F1_viewDom[2124690]))
    (2126216 '.=' ret[1303749] F1_viewDom[2124688] tmp[2126209])
    (1303751 return ret[1303749])
  }
  function chpl__serialViewIter[1326783](const in arg arr[1326785]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401], const in arg viewDom[1326787]:domain(1,int(64),false)[1251123], ref arg _retArg[1913762]:_ref(_ir_chpl__serialViewIter)[1330263]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[2134512]:_ir_chpl__serialViewIter[1330152] "temp"
    (2134514 '.=' _ir[2134512] F0_arr[2133020] arr[1326785])
    (2134518 '.=' _ir[2134512] F1_viewDom[2133024] viewDom[1326787])
    (2134522 '=' _retArg[1913762] _ir[2134512])
    (2134525 return _void[55])
  }
  type _ic_chpl__serialViewIter[1330146] val super[1330147]:object[22] "super class" val more[1330149]:int(64)[13] const-val F0_arr[2133018]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] const-val F1_viewDom[2133022]:domain(1,int(64),false)[1251123] val F2_info[2133026]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] val F3__iterator[2133028]:_ic_chpl_direct_pos_stride_range_iter[1303186] val F4_i[2133030]:int(64)[13] const-val F5_low[2133032]:int(64)[13] ref value[2133034]:_ref(localesSignal)[1316692]
  type _ir_chpl__serialViewIter[1330152] const-val F0_arr[2133020]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] const-val F1_viewDom[2133024]:domain(1,int(64),false)[1251123]
  function _getIterator[1330161](const  ref arg ir[1330163]:_ir_chpl__serialViewIter[1330152]) : _ic_chpl__serialViewIter[1330146] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1330270]:_ic_chpl__serialViewIter[1330146] "dead after last mention" "RVV" "temp"
    val _ic_[1330153]:_ic_chpl__serialViewIter[1330146] "dead after last mention" "temp"
    const-val call_tmp[1330277]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1330280 'move' call_tmp[1330277](1330292 'sizeof_bundle' _ic_chpl__serialViewIter[1330146]))
    const-val cast_tmp[1330295]:c_void_ptr[149] "dead after last mention" "temp"
    (1330297 'move' cast_tmp[1330295](1330158 call chpl_here_alloc[187788] call_tmp[1330277] 59))
    (1330166 'move' _ic_[1330153](1330299 'cast' _ic_chpl__serialViewIter[1330146] cast_tmp[1330295]))
    (1330168 'setcid' _ic_[1330153])
    (1330275 'move' ret[1330270] _ic_[1330153])
    (2134528 '.=' ret[1330270] more[1330149] 1)
    const-val tmp[2134532]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] "temp"
    (2134537 'move' tmp[2134532](2134533 '.v' ir[1330163] F0_arr[2133020]))
    (2134539 '.=' ret[1330270] F0_arr[2133018] tmp[2134532])
    const-val tmp[2134543]:domain(1,int(64),false)[1251123] "temp"
    (2134548 'move' tmp[2134543](2134544 '.v' ir[1330163] F1_viewDom[2133024]))
    (2134550 '.=' ret[1330270] F1_viewDom[2133022] tmp[2134543])
    (1330272 return ret[1330270])
  }
  type _ic_chpl__serialViewIter[1394724] val super[1394725]:object[22] "super class" val more[1394727]:int(64)[13] const-val F0_arr[2140311]:[domain(1,int(64),false)] real(64)[1358944] const-val F1_viewDom[2140315]:domain(1,int(64),false)[1251123] val F2_info[2140319]:[domain(1,int(64),false)] real(64)[1358944] val F3__iterator[2140321]:_ic_chpl_direct_pos_stride_range_iter[1303186] val F4_i[2140323]:int(64)[13] const-val F5_low[2140325]:int(64)[13] ref value[2140327]:_ref(real(64))[936906]
  function chpl__serialViewIter[1456762](const in arg arr[1456764]:[domain(1,int(64),false)] uint(64)[1450261], const in arg viewDom[1456766]:domain(1,int(64),false)[1251123], ref arg _retArg[1915295]:_ref(_ir_chpl__serialViewIter)[1460242]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[2151708]:_ir_chpl__serialViewIter[1460131] "temp"
    (2151710 '.=' _ir[2151708] F0_arr[2150216] arr[1456764])
    (2151714 '.=' _ir[2151708] F1_viewDom[2150220] viewDom[1456766])
    (2151718 '=' _retArg[1915295] _ir[2151708])
    (2151721 return _void[55])
  }
  type _ic_chpl__serialViewIter[1460125] val super[1460126]:object[22] "super class" val more[1460128]:int(64)[13] const-val F0_arr[2150214]:[domain(1,int(64),false)] uint(64)[1450261] const-val F1_viewDom[2150218]:domain(1,int(64),false)[1251123] val F2_info[2150222]:[domain(1,int(64),false)] uint(64)[1450261] val F3__iterator[2150224]:_ic_chpl_direct_pos_stride_range_iter[1303186] val F4_i[2150226]:int(64)[13] const-val F5_low[2150228]:int(64)[13] ref value[2150230]:_ref(uint(64))[936790]
  type _ir_chpl__serialViewIter[1460131] const-val F0_arr[2150216]:[domain(1,int(64),false)] uint(64)[1450261] const-val F1_viewDom[2150220]:domain(1,int(64),false)[1251123]
  function _getIterator[1460140](const  ref arg ir[1460142]:_ir_chpl__serialViewIter[1460131]) : _ic_chpl__serialViewIter[1460125] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1460249]:_ic_chpl__serialViewIter[1460125] "dead after last mention" "RVV" "temp"
    val _ic_[1460132]:_ic_chpl__serialViewIter[1460125] "dead after last mention" "temp"
    const-val call_tmp[1460256]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1460259 'move' call_tmp[1460256](1460271 'sizeof_bundle' _ic_chpl__serialViewIter[1460125]))
    const-val cast_tmp[1460274]:c_void_ptr[149] "dead after last mention" "temp"
    (1460276 'move' cast_tmp[1460274](1460137 call chpl_here_alloc[187788] call_tmp[1460256] 87))
    (1460145 'move' _ic_[1460132](1460278 'cast' _ic_chpl__serialViewIter[1460125] cast_tmp[1460274]))
    (1460147 'setcid' _ic_[1460132])
    (1460254 'move' ret[1460249] _ic_[1460132])
    (2151724 '.=' ret[1460249] more[1460128] 1)
    const-val tmp[2151728]:[domain(1,int(64),false)] uint(64)[1450261] "temp"
    (2151733 'move' tmp[2151728](2151729 '.v' ir[1460142] F0_arr[2150216]))
    (2151735 '.=' ret[1460249] F0_arr[2150214] tmp[2151728])
    const-val tmp[2151739]:domain(1,int(64),false)[1251123] "temp"
    (2151744 'move' tmp[2151739](2151740 '.v' ir[1460142] F1_viewDom[2150220]))
    (2151746 '.=' ret[1460249] F1_viewDom[2150218] tmp[2151739])
    (1460251 return ret[1460249])
  }
  type _ic_chpl__serialViewIter[1483813] val super[1483814]:object[22] "super class" val more[1483816]:int(64)[13] const-val F0_arr[2157988]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] const-val F1_viewDom[2157992]:domain(1,int(64),false)[1251123] val F2_info[2157996]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] val F3__iterator[2157998]:_ic_chpl_direct_pos_stride_range_iter[1303186] val F4_i[2158000]:int(64)[13] const-val F5_low[2158002]:int(64)[13] ref value[2158004]:_ref(range(int(64),bounded,false))[1027047]
  function [domain(1,int(64),false)] real(64)[1358944].dsiSerialReadWrite[1555466](const in arg this[1555472]:[domain(1,int(64),false)] real(64)[1358944], const  ref arg f[1555474]:channel(true,dynamic,false)[1061136], ref arg error_out[1888250]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    val error[1888255]:Error[167984] "error variable" "temp"
    (1888257 'move' error[1888255] nil[44])
    (1555483 call chpl_serialReadWriteRectangular[1555489] f[1555474] this[1555472] error[1888255])
    val errorExists[2224112]:bool[10] "temp"
    (2224117 'move' errorExists[2224112](2224114 '!=' error[1888255] nil[44]))
    if errorExists[2224112]
    {
      (1888261 '=' error_out[1888250] error[1888255])
      gotoErrorHandlingReturn _enddsiSerialReadWrite[1888252] _enddsiSerialReadWrite[1888252]
    }
    label _enddsiSerialReadWrite[1888252]
    (1555486 return _void[55])
  }
  function chpl_serialReadWriteRectangular[1555489](const  ref arg f[1555491]:channel(true,dynamic,false)[1061136], const in arg arr[1555493]:[domain(1,int(64),false)] real(64)[1358944], ref arg error_out[1888269]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    ref call_tmp[1555501]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
    (1555503 'move' call_tmp[1555501](1555506 call dom[1360329] arr[1555493]))
    val coerce_tmp[1555541]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1555545 'move' coerce_tmp[1555541](1555543 'deref' call_tmp[1555501]))
    val error[1888274]:Error[167984] "error variable" "temp"
    (1888276 'move' error[1888274] nil[44])
    (1555510 call chpl_serialReadWriteRectangular[1555518] f[1555491] arr[1555493] coerce_tmp[1555541] error[1888274])
    val errorExists[2224120]:bool[10] "temp"
    (2224125 'move' errorExists[2224120](2224122 '!=' error[1888274] nil[44]))
    if errorExists[2224120]
    {
      (1888280 '=' error_out[1888269] error[1888274])
      gotoErrorHandlingReturn _endchpl_serialReadWriteRectangular[1888271] _endchpl_serialReadWriteRectangular[1888271]
    }
    label _endchpl_serialReadWriteRectangular[1888271]
    (1555514 return _void[55])
  }
  function chpl_serialReadWriteRectangular[1555518](const  ref arg f[1555520]:channel(true,dynamic,false)[1061136], const in arg arr[1555522]:[domain(1,int(64),false)] real(64)[1358944], const in arg dom[1555524]:domain(1,int(64),false)[1251123], ref arg error_out[1888288]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "last resort" "resolved" "no return value for void"
  {
    val error[1888293]:Error[167984] "error variable" "temp"
    (1888295 'move' error[1888293] nil[44])
    (1555535 call chpl_serialReadWriteRectangularHelper[1555548] f[1555520] arr[1555522] dom[1555524] error[1888293])
    val errorExists[2224128]:bool[10] "temp"
    (2224133 'move' errorExists[2224128](2224130 '!=' error[1888293] nil[44]))
    if errorExists[2224128]
    {
      (1888299 '=' error_out[1888288] error[1888293])
      gotoErrorHandlingReturn _endchpl_serialReadWriteRectangular[1888290] _endchpl_serialReadWriteRectangular[1888290]
    }
    label _endchpl_serialReadWriteRectangular[1888290]
    (1555539 return _void[55])
  }
  function chpl_serialReadWriteRectangularHelper[1555548](const  ref arg f[1555550]:channel(true,dynamic,false)[1061136], const in arg arr[1555552]:[domain(1,int(64),false)] real(64)[1358944], const in arg dom[1555554]:domain(1,int(64),false)[1251123], ref arg error_out[1888307]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val idxType[1555578]:int(64)[13] "dead at end of block" "insert auto destroy" "type variable"
    val coerce_tmp[1559227]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1559233 'move' coerce_tmp[1559227](1559229 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256408] arr[1555552]))
    val call_tmp[1555590]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val idxSignedType[1555597]:int(64)[13] "dead at end of block" "insert auto destroy" "type variable"
    val call_tmp[1555602]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1555614]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1555616 'move' call_tmp[1555614](1555622 call styleElement[1559243] f[1555550] QIO_STYLE_ELEMENT_IS_NATIVE_BYTE_ORDER[19685]))
    const-val call_tmp[1555624]:bool[10] "dead at end of block" "maybe param" "temp"
    (1555626 'move' call_tmp[1555624](1555629 call _cast[1559364] call_tmp[1555614]))
    const-val isNative[1555632]:bool[10] "dead at end of block" "const" "insert auto destroy"
    (1555634 'move' isNative[1555632] call_tmp[1555624])
    {
      const-val tmp[1558526]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val tmp[1558528]:bool[10] "dead after last mention" "maybe param" "temp"
      val call_tmp[1558643]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val coerce_tmp[1559441]:BaseRectangularArr(1,int(64),false,real(64))[1358730] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1559447 'move' coerce_tmp[1559441](1559443 'cast' BaseRectangularArr(1,int(64),false,real(64))[1358730] arr[1555552]))
      const-val tmp[1558691]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val tmp[1558709]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1558711]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1558713 'move' call_tmp[1558711](1558719 call binary[1559617] f[1555550]))
      (1558720 'move' tmp[1558709] call_tmp[1558711])
      (1558725 'move' tmp[1558691] tmp[1558709])
      (1558737 'move' tmp[1558528] tmp[1558691])
      val tmp[1558753]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1558755]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1558757]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1558759 'move' call_tmp[1558757] tmp[1558528])
      (1558764 'move' tmp[1558755] call_tmp[1558757])
      if tmp[1558755]
      {
        const-val tmp[1558771]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        (1558773 'move' tmp[1558771] isNative[1555632])
        (1558778 'move' tmp[1558753] tmp[1558771])
      }
      {
        (1558784 'move' tmp[1558753] 0)
      }
      (1558790 'move' tmp[1558526] tmp[1558753])
      val tmp[1558806]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1558808]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1558810]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1558812 'move' call_tmp[1558810] tmp[1558526])
      (1558817 'move' tmp[1558808] call_tmp[1558810])
      if tmp[1558808]
      {
        const-val tmp[1558824]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1558826]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1558828 'move' call_tmp[1558826](1558834 call isDataContiguous[1525971] arr[1555552] dom[1555554]))
        (1558836 'move' tmp[1558824] call_tmp[1558826])
        (1558841 'move' tmp[1558806] tmp[1558824])
      }
      {
        (1558847 'move' tmp[1558806] 0)
      }
      const-val call_tmp[1558853]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1558855 'move' call_tmp[1558853] tmp[1558806])
      if call_tmp[1558853]
      {
        val call_tmp[1558862]:real(64)[16] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        val coerce_tmp[1559768]:BaseRectangularArr(1,int(64),false,real(64))[1358730] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1559774 'move' coerce_tmp[1559768](1559770 'cast' BaseRectangularArr(1,int(64),false,real(64))[1358730] arr[1555552]))
        const-val call_tmp[1558870]:uint(64)[115] "dead at end of block" "maybe param" "temp"
        (1558872 'move' call_tmp[1558870](1558875 call c_sizeof[1559778]))
        const-val elemSize[1558877]:uint(64)[115] "dead at end of block" "const" "insert auto destroy"
        (1558879 'move' elemSize[1558877] call_tmp[1558870])
        {
          const-val rw[1558892]:string[26] "dead at end of block" "insert auto destroy"
          (1558925 'move' rw[1558892] "write")
          const-val call_tmp[1558929]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          val coerce_tmp[1559846]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1559851 'move' coerce_tmp[1559846] dom[1555554])
          (1558931 'move' call_tmp[1558929](1558934 call dsiNumIndices[1263823] coerce_tmp[1559846]))
          const-val call_tmp[1558937]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (1558939 'move' call_tmp[1558937](1558942 call _cast[956223] call_tmp[1558929]))
          const-val call_tmp[1558945]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (1558947 'move' call_tmp[1558945] elemSize[1558877])
          const-val call_tmp[1558953]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (1558955 'move' call_tmp[1558953](1558958 call *[442032] call_tmp[1558937] call_tmp[1558945]))
          const-val call_tmp[1558976]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1558978 'move' call_tmp[1558976](1558981 call <=[437216] call_tmp[1558953] 9223372036854775807))
          (1558985 call assert[1559946] call_tmp[1558976] "length of array to " rw[1558892] " is greater than ssize_t can hold")
          (1927289 call chpl__autoDestroy[1601673] rw[1558892])
        }
        const-val call_tmp[1558994]:int(64)[13] "dead at end of block" "maybe param" "temp"
        val coerce_tmp[1564904]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1564909 'move' coerce_tmp[1564904] dom[1555554])
        (1558996 'move' call_tmp[1558994](1558999 call dsiNumIndices[1263823] coerce_tmp[1564904]))
        const-val len[1559002]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        (1559004 'move' len[1559002] call_tmp[1558994])
        ref call_tmp[1559008]:_ref(_ddata(real(64)))[1358114] "dead at end of block" "maybe param" "temp"
        (1559010 'move' call_tmp[1559008](1559013 call theData[1391376] arr[1555552]))
        const src[1559016]:_ddata(real(64))[1358105] "dead at end of block" "const" "insert auto destroy"
        val coerce_tmp[1564915]:_ddata(real(64))[1358105] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1564919 'move' coerce_tmp[1564915](1564917 'deref' call_tmp[1559008]))
        (1559018 'move' src[1559016](1564913 call chpl__initCopy[1359018] coerce_tmp[1564915]))
        const-val call_tmp[1559022]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        val coerce_tmp[1564922]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1564927 'move' coerce_tmp[1564922] dom[1555554])
        (1559024 'move' call_tmp[1559022](1559027 call dsiLow[1300625] coerce_tmp[1564922]))
        const-val call_tmp[1559030]:int(64)[13] "dead at end of block" "maybe param" "temp"
        (1559032 'move' call_tmp[1559030](1559038 call getDataIndex[1390253] arr[1555552] call_tmp[1559022]))
        const-val idx[1559040]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        (1559042 'move' idx[1559040] call_tmp[1559030])
        const-val call_tmp[1559046]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1559048 'move' call_tmp[1559046] len[1559002])
        const-val call_tmp[1559054]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1559056 'move' call_tmp[1559054](1559059 call _cast[953732] elemSize[1558877]))
        const-val call_tmp[1559062]:int(64)[13] "dead at end of block" "maybe param" "temp"
        (1559064 'move' call_tmp[1559062](1559067 call *[441944] call_tmp[1559046] call_tmp[1559054]))
        const-val size[1559070]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        (1559072 'move' size[1559070] call_tmp[1559062])
        {
          val error[1888311]:Error[167984] "error variable" "temp"
          (1888320 'move' error[1888311] nil[44])
          {
            val call_tmp[1559096]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            val coerce_tmp[1564965]:BaseRectangularArr(1,int(64),false,real(64))[1358730] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1564971 'move' coerce_tmp[1564965](1564967 'cast' BaseRectangularArr(1,int(64),false,real(64))[1358730] arr[1555552]))
            val call_tmp[1559104]:_ddata(real(64))[1358105] "dead after last mention" "expr temp" "maybe param" "temp"
            (1559106 'move' call_tmp[1559104](1559109 call _ddata_shift[1364660] src[1559016] idx[1559040]))
            const-val _return_tmp_[1875656]:bool[10] "dead after last mention" "temp"
            (1875658 'move' _return_tmp_[1875656](1559117 call writeBytes[1564976] f[1555550] call_tmp[1559104] size[1559070] error[1888311]))
            val errorExists[2224136]:bool[10] "temp"
            (2224141 'move' errorExists[2224136](2224138 '!=' error[1888311] nil[44]))
            if errorExists[2224136]
            {
              gotoErrorHandling handler[1888312] handler[1888312]
            }
          }
          label handler[1888312]
          const-val shouldHandleError[1888340]:bool[10] "temp"
          val errorExists[2224144]:bool[10] "temp"
          (2224149 'move' errorExists[2224144](2224146 '!=' error[1888311] nil[44]))
          (1888344 'move' shouldHandleError[1888340] errorExists[2224144])
          if shouldHandleError[1888340]
          {
            {
              val call_tmp[1559157]:Error[167984] "dead at end of block" "maybe param" "temp"
              (1559159 'move' call_tmp[1559157] error[1888311])
              val tmp[1559162]:Error[167984] "dead at end of block" "insert auto destroy" "temp"
              (1559164 'move' tmp[1559162](1565212 call chpl__initCopy[968244] call_tmp[1559157]))
              val call_tmp[1559167]:Error[167984] "dead at end of block" "expr temp" "maybe param" "temp"
              (1559169 'move' call_tmp[1559167] tmp[1559162])
              const-val call_tmp[1559173]:owned Error[966647] "dead at end of block" "delay instantiation" "maybe param" "temp"
              const-val initTemp[1565219]:owned Error[966647] "dead at end of block" "delay instantiation" "temp"
              (1565222 call init[968283] initTemp[1565219] call_tmp[1559167])
              (1559175 'move' call_tmp[1559173] initTemp[1565219])
              const-val err[1559180]:owned Error[966647] "dead at end of block" "delay instantiation" "insert auto destroy" "maybe copy elided"
              (1559182 'move' err[1559180] call_tmp[1559173])
              {
                val call_tmp[1559187]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val _formal_tmp_in_err[1565236]:owned Error[966647] "dead after last mention" "expr temp" "no auto destroy" "temp"
                (1927285 '=' _formal_tmp_in_err[1565236] err[1559180])
                (1565240 'noop')
                (1559189 'move' call_tmp[1559187](1559192 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1565236]))
                {
                  val castedError[1888327]:Error[167984] "temp"
                  (1888333 'move' castedError[1888327] call_tmp[1559187])
                  (1888335 '=' error_out[1888307] castedError[1888327])
                  gotoErrorHandlingReturn _endchpl_serialReadWriteRectangularHelper[1888309] _endchpl_serialReadWriteRectangularHelper[1888309]
                }
              }
            }
          }
        }
      }
      {
        const-val zeroTup[1559200]:1*int(64)[1256714] "dead at end of block" "const" "insert auto destroy"
        val call_tmp[1559202]:1*int(64)[1256714] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val ret_tmp[1912732]:1*int(64)[1256714] "temp"
        (1586006 call _defaultOf[1264554] ret_tmp[1912732])
        (1912735 'move' zeroTup[1559200] ret_tmp[1912732])
        const-val _formal_tmp_in_idx[1565253]:1*int(64)[1256714] "dead after last mention" "expr temp" "no auto destroy" "temp"
        (1565257 'move' _formal_tmp_in_idx[1565253](1565254 call chpl__initCopy[1441632] zeroTup[1559200]))
        val error[1888349]:Error[167984] "error variable" "temp"
        (1888351 'move' error[1888349] nil[44])
        (1559216 call recursiveArrayWriter[1555704] _formal_tmp_in_idx[1565253] 0 0 f[1555550] dom[1555554] arr[1555552] error[1888349])
        val errorExists[2224152]:bool[10] "temp"
        (2224157 'move' errorExists[2224152](2224154 '!=' error[1888349] nil[44]))
        if errorExists[2224152]
        {
          (1888355 '=' error_out[1888307] error[1888349])
          (1927293 call chpl__autoDestroy[1697253] zeroTup[1559200])
          gotoErrorHandlingReturn _endchpl_serialReadWriteRectangularHelper[1888309] _endchpl_serialReadWriteRectangularHelper[1888309]
        }
        (1927297 call chpl__autoDestroy[1697253] zeroTup[1559200])
      }
    }
    label _endchpl_serialReadWriteRectangularHelper[1888309]
    (1559222 return _void[55])
  }
  function [domain(1,int(64),false)] real(64)[1358944].dsiSerialWrite[1555434](const in arg this[1555440]:[domain(1,int(64),false)] real(64)[1358944], const  ref arg f[1555442]:channel(true,dynamic,false)[1061136], ref arg error_out[1888231]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    val error[1888236]:Error[167984] "error variable" "temp"
    (1888238 'move' error[1888236] nil[44])
    (1555454 call dsiSerialReadWrite[1555466] this[1555440] f[1555442] error[1888236])
    val errorExists[2224104]:bool[10] "temp"
    (2224109 'move' errorExists[2224104](2224106 '!=' error[1888236] nil[44]))
    if errorExists[2224104]
    {
      (1888242 '=' error_out[1888231] error[1888236])
      gotoErrorHandlingReturn _enddsiSerialWrite[1888233] _enddsiSerialWrite[1888233]
    }
    label _enddsiSerialWrite[1888233]
    (1555456 return _void[55])
  }
  function [domain(1,int(64),false)] range(int(64),bounded,false)[1409224].isDataContiguous[1434006](const in arg this[1434012]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224], const in arg dom[1434014]:domain(1,int(64),false)[1251123]) : bool[10] "instantiated generic" "invisible fn" "method" "resolved"
  {
    val ret[1434016]:bool[10] "dead after last mention" "RVV" "temp"
    ref call_tmp[1434074]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1434333]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
    (1434335 'move' _this_tmp_[1434333](1434079 call blk[1410699] this[1434012]))
    (1434076 'move' call_tmp[1434074](1434340 '.' _this_tmp_[1434333] x0[1256712]))
    const-val call_tmp[1434084]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1434343]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1434347 'move' coerce_tmp[1434343](1434345 'deref' call_tmp[1434074]))
    (1434086 'move' call_tmp[1434084](1434089 call !=[436128] coerce_tmp[1434343] 1))
    const-val call_tmp[1434092]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1434094 'move' call_tmp[1434092] call_tmp[1434084])
    if call_tmp[1434092]
    {
      (1434101 'move' ret[1434016] 0)
      gotoReturn _end_isDataContiguous[1434321] _end_isDataContiguous[1434321]
    }
    (1434317 'move' ret[1434016] 1)
    label _end_isDataContiguous[1434321]
    (1434323 return ret[1434016])
  }
  function [domain(1,int(64),false)] real(64)[1358944].isDataContiguous[1525971](const in arg this[1525977]:[domain(1,int(64),false)] real(64)[1358944], const in arg dom[1525979]:domain(1,int(64),false)[1251123]) : bool[10] "instantiated generic" "invisible fn" "method" "resolved"
  {
    val ret[1525981]:bool[10] "dead after last mention" "RVV" "temp"
    ref call_tmp[1526039]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1526298]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
    (1526300 'move' _this_tmp_[1526298](1526044 call blk[1360437] this[1525977]))
    (1526041 'move' call_tmp[1526039](1526305 '.' _this_tmp_[1526298] x0[1256712]))
    const-val call_tmp[1526049]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1526308]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1526312 'move' coerce_tmp[1526308](1526310 'deref' call_tmp[1526039]))
    (1526051 'move' call_tmp[1526049](1526054 call !=[436128] coerce_tmp[1526308] 1))
    const-val call_tmp[1526057]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1526059 'move' call_tmp[1526057] call_tmp[1526049])
    if call_tmp[1526057]
    {
      (1526066 'move' ret[1525981] 0)
      gotoReturn _end_isDataContiguous[1526286] _end_isDataContiguous[1526286]
    }
    (1526282 'move' ret[1525981] 1)
    label _end_isDataContiguous[1526286]
    (1526288 return ret[1525981])
  }
  function _canDoSimpleTransfer[1433843](const in arg A[1433845]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224], const  ref arg aView[1433847]:domain(1,int(64),false)[1252786], const in arg B[1433849]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224], const  ref arg bView[1433851]:domain(1,int(64),false)[1252786]) : bool[10] "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1433853]:bool[10] "dead after last mention" "RVV" "temp"
    const-val tmp[1433867]:bool[10] "dead after last mention" "maybe param" "temp"
    val call_tmp[1433869]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
    (1433871 'move' call_tmp[1433869](1433874 call _value[1253027] aView[1433847]))
    const-val call_tmp[1433877]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1433879 'move' call_tmp[1433877](1433885 call isDataContiguous[1434006] A[1433845] call_tmp[1433869]))
    (1433887 'move' tmp[1433867](1433890 call ![7494] call_tmp[1433877]))
    val tmp[1433905]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1433907]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1433909]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1433911 'move' call_tmp[1433909] tmp[1433867])
    (1433916 'move' tmp[1433907] call_tmp[1433909])
    if tmp[1433907]
    {
      (1433923 'move' tmp[1433905] 1)
    }
    {
      const-val tmp[1433929]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      val call_tmp[1433931]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
      (1433933 'move' call_tmp[1433931](1433936 call _value[1253027] bView[1433851]))
      const-val call_tmp[1433939]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1434623]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1434628 'move' coerce_tmp[1434623] B[1433849])
      (1433941 'move' call_tmp[1433939](1433947 call isDataContiguous[1434006] coerce_tmp[1434623] call_tmp[1433931]))
      const-val call_tmp[1433949]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1433951 'move' call_tmp[1433949](1433954 call ![7494] call_tmp[1433939]))
      (1433956 'move' tmp[1433929] call_tmp[1433949])
      (1433961 'move' tmp[1433905] tmp[1433929])
    }
    const-val call_tmp[1433967]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1433969 'move' call_tmp[1433967] tmp[1433905])
    if call_tmp[1433967]
    {
      (1433989 'move' ret[1433853] 0)
      gotoReturn _end__canDoSimpleTransfer[1434000] _end__canDoSimpleTransfer[1434000]
    }
    (1433996 'move' ret[1433853] 1)
    label _end__canDoSimpleTransfer[1434000]
    (1434002 return ret[1433853])
  }
  function _canDoSimpleTransfer[1525808](const in arg A[1525810]:[domain(1,int(64),false)] real(64)[1358944], const  ref arg aView[1525812]:domain(1,int(64),false)[1252786], const in arg B[1525814]:[domain(1,int(64),false)] real(64)[1358944], const  ref arg bView[1525816]:domain(1,int(64),false)[1252786]) : bool[10] "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1525818]:bool[10] "dead after last mention" "RVV" "temp"
    const-val tmp[1525832]:bool[10] "dead after last mention" "maybe param" "temp"
    val call_tmp[1525834]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
    (1525836 'move' call_tmp[1525834](1525839 call _value[1253027] aView[1525812]))
    const-val call_tmp[1525842]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1525844 'move' call_tmp[1525842](1525850 call isDataContiguous[1525971] A[1525810] call_tmp[1525834]))
    (1525852 'move' tmp[1525832](1525855 call ![7494] call_tmp[1525842]))
    val tmp[1525870]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1525872]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1525874]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1525876 'move' call_tmp[1525874] tmp[1525832])
    (1525881 'move' tmp[1525872] call_tmp[1525874])
    if tmp[1525872]
    {
      (1525888 'move' tmp[1525870] 1)
    }
    {
      const-val tmp[1525894]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      val call_tmp[1525896]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp"
      (1525898 'move' call_tmp[1525896](1525901 call _value[1253027] bView[1525816]))
      const-val call_tmp[1525904]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1526328]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1526333 'move' coerce_tmp[1526328] B[1525814])
      (1525906 'move' call_tmp[1525904](1525912 call isDataContiguous[1525971] coerce_tmp[1526328] call_tmp[1525896]))
      const-val call_tmp[1525914]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1525916 'move' call_tmp[1525914](1525919 call ![7494] call_tmp[1525904]))
      (1525921 'move' tmp[1525894] call_tmp[1525914])
      (1525926 'move' tmp[1525870] tmp[1525894])
    }
    const-val call_tmp[1525932]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1525934 'move' call_tmp[1525932] tmp[1525870])
    if call_tmp[1525932]
    {
      (1525954 'move' ret[1525818] 0)
      gotoReturn _end__canDoSimpleTransfer[1525965] _end__canDoSimpleTransfer[1525965]
    }
    (1525961 'move' ret[1525818] 1)
    label _end__canDoSimpleTransfer[1525965]
    (1525967 return ret[1525818])
  }
  function _canDoComplexTransfer[1437522](const in arg A[1437524]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224], const  ref arg aView[1437526]:domain(1,int(64),false)[1252786], const in arg B[1437528]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224], const  ref arg bView[1437530]:domain(1,int(64),false)[1252786]) : bool[10] "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1437532]:bool[10] "dead after last mention" "RVV" "temp"
    (1437546 'move' ret[1437532] 1)
    (1437550 return ret[1437532])
  }
  function _canDoComplexTransfer[1527638](const in arg A[1527640]:[domain(1,int(64),false)] real(64)[1358944], const  ref arg aView[1527642]:domain(1,int(64),false)[1252786], const in arg B[1527644]:[domain(1,int(64),false)] real(64)[1358944], const  ref arg bView[1527646]:domain(1,int(64),false)[1252786]) : bool[10] "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1527648]:bool[10] "dead after last mention" "RVV" "temp"
    (1527662 'move' ret[1527648] 1)
    (1527666 return ret[1527648])
  }
  function [domain(1,int(64),false)] range(int(64),bounded,false)[1409224].doiBulkTransferFromKnown[1433357](const in arg this[1433363]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224], const  ref arg destDom[1433365]:domain(1,int(64),false)[1252786], const in arg srcClass[1433367]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224], const  ref arg srcDom[1433369]:domain(1,int(64),false)[1252786]) : bool[10] "instantiated generic" "invisible fn" "method" "resolved"
  {
    val ret[1433373]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1433387]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1433389 'move' call_tmp[1433387](1433392 call transferHelper[1433412] this[1433363] destDom[1433365] srcClass[1433367] srcDom[1433369]))
    (1475356 'move' ret[1433373] call_tmp[1433387])
    (1433402 return ret[1433373])
  }
  function [domain(1,int(64),false)] real(64)[1358944].doiBulkTransferFromKnown[1525391](const in arg this[1525397]:[domain(1,int(64),false)] real(64)[1358944], const  ref arg destDom[1525399]:domain(1,int(64),false)[1252786], const in arg srcClass[1525401]:[domain(1,int(64),false)] real(64)[1358944], const  ref arg srcDom[1525403]:domain(1,int(64),false)[1252786]) : bool[10] "instantiated generic" "invisible fn" "method" "resolved"
  {
    val ret[1525407]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1525421]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1525423 'move' call_tmp[1525421](1525426 call transferHelper[1525446] this[1525397] destDom[1525399] srcClass[1525401] srcDom[1525403]))
    (1532822 'move' ret[1525407] call_tmp[1525421])
    (1525436 return ret[1525407])
  }
  function transferHelper[1433412](const in arg A[1433414]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224], const  ref arg aView[1433416]:domain(1,int(64),false)[1252786], const in arg B[1433418]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224], const  ref arg bView[1433420]:domain(1,int(64),false)[1252786]) : bool[10] "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1433424]:bool[10] "dead after last mention" "RVV" "temp"
    const-val tmp[1433612]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1433630]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    const-val call_tmp[1433632]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1433634 'move' call_tmp[1433632](1433637 call _canDoSimpleTransfer[1433843] A[1433414] aView[1433416] B[1433418] bView[1433420]))
    (1433642 'move' tmp[1433630] call_tmp[1433632])
    (1433647 'move' tmp[1433612] tmp[1433630])
    const-val call_tmp[1433659]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1433661 'move' call_tmp[1433659] tmp[1433612])
    if call_tmp[1433659]
    {
      (1433682 call _simpleTransfer[1434636] A[1433414] aView[1433416] B[1433418] bView[1433420])
    }
    {
      const-val call_tmp[1433688]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1433690 'move' call_tmp[1433688](1433693 call _canDoComplexTransfer[1437522] A[1433414] aView[1433416] B[1433418] bView[1433420]))
      const-val call_tmp[1433698]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1433700 'move' call_tmp[1433698] call_tmp[1433688])
      if call_tmp[1433698]
      {
        (1433721 call complexTransfer[1437555] A[1433414] aView[1433416] B[1433418] bView[1433420])
      }
      {
        (1433727 'move' ret[1433424] 0)
        gotoReturn _end_transferHelper[1433741] _end_transferHelper[1433741]
      }
    }
    (1433736 'move' ret[1433424] 1)
    label _end_transferHelper[1433741]
    (1433743 return ret[1433424])
  }
  function transferHelper[1525446](const in arg A[1525448]:[domain(1,int(64),false)] real(64)[1358944], const  ref arg aView[1525450]:domain(1,int(64),false)[1252786], const in arg B[1525452]:[domain(1,int(64),false)] real(64)[1358944], const  ref arg bView[1525454]:domain(1,int(64),false)[1252786]) : bool[10] "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1525458]:bool[10] "dead after last mention" "RVV" "temp"
    const-val tmp[1525646]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1525664]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    const-val call_tmp[1525666]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1525668 'move' call_tmp[1525666](1525671 call _canDoSimpleTransfer[1525808] A[1525448] aView[1525450] B[1525452] bView[1525454]))
    (1525676 'move' tmp[1525664] call_tmp[1525666])
    (1525681 'move' tmp[1525646] tmp[1525664])
    const-val call_tmp[1525693]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1525695 'move' call_tmp[1525693] tmp[1525646])
    if call_tmp[1525693]
    {
      (1525716 call _simpleTransfer[1526341] A[1525448] aView[1525450] B[1525452] bView[1525454])
    }
    {
      const-val call_tmp[1525722]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1525724 'move' call_tmp[1525722](1525727 call _canDoComplexTransfer[1527638] A[1525448] aView[1525450] B[1525452] bView[1525454]))
      const-val call_tmp[1525732]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1525734 'move' call_tmp[1525732] call_tmp[1525722])
      if call_tmp[1525732]
      {
        (1525755 call complexTransfer[1527671] A[1525448] aView[1525450] B[1525452] bView[1525454])
      }
      {
        (1525761 'move' ret[1525458] 0)
        gotoReturn _end_transferHelper[1525775] _end_transferHelper[1525775]
      }
    }
    (1525770 'move' ret[1525458] 1)
    label _end_transferHelper[1525775]
    (1525777 return ret[1525458])
  }
  function _simpleTransfer[1434636](const in arg A[1434638]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224], const  ref arg aView[1434640]:domain(1,int(64),false)[1252786], const in arg B[1434642]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224], const  ref arg bView[1434644]:domain(1,int(64),false)[1252786]) : void[4] "instantiated generic" "invisible fn" "private" "resolved" "no return value for void"
  {
    val idxType[1434670]:int(64)[13] "dead at end of block" "insert auto destroy" "type variable"
    val coerce_tmp[1435145]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1435151 'move' coerce_tmp[1435145](1435147 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256408] A[1434638]))
    const-val call_tmp[1434682]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1914047]:1*range(int(64),bounded,false)[1244885] "temp"
    (1434690 call dims[1353359] aView[1434640] ret_tmp[1914047])
    (1914050 'move' call_tmp[1434682] ret_tmp[1914047])
    const-val Adims[1434691]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "const" "insert auto destroy"
    (1434693 'move' Adims[1434691] call_tmp[1434682])
    const-val Alo[1434697]:1*int(64)[1256714] "dead at end of block" "insert auto destroy"
    val call_tmp[1434699]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1434707]:1*int(64)[1256714] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1912612]:1*int(64)[1256714] "temp"
    (1437510 call _defaultOf[1264554] ret_tmp[1912612])
    (1912615 'move' Alo[1434697] ret_tmp[1912612])
    {
      const-val i[1434720]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1434722 'move' i[1434720] 0)
      {
        ref call_tmp[1435195]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        (1435197 'move' call_tmp[1435195](1435228 '.' Alo[1434697] x0[1256712]))
        ref call_tmp[1435202]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1435204 'move' call_tmp[1435202](1435233 '.' Adims[1434691] x0[1244883]))
        const-val call_tmp[1435209]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1435236]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1435240 'move' coerce_tmp[1435236](1435238 'deref' call_tmp[1435202]))
        (1435211 'move' call_tmp[1435209](1435214 call first[1042820] coerce_tmp[1435236]))
        (1435218 call =[435443] call_tmp[1435195] call_tmp[1435209])
        (1926053 call chpl__autoDestroy[1407763] coerce_tmp[1435236])
      }
      label _continueLabel0[1435192]
      label _unused_continueLabel[1434800]
      label _breakLabel[1434802]
    }
    const-val call_tmp[1434804]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1914053]:1*range(int(64),bounded,false)[1244885] "temp"
    (1434812 call dims[1353359] bView[1434644] ret_tmp[1914053])
    (1914056 'move' call_tmp[1434804] ret_tmp[1914053])
    const-val Bdims[1434813]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "const" "insert auto destroy"
    (1434815 'move' Bdims[1434813] call_tmp[1434804])
    const-val Blo[1434819]:1*int(64)[1256714] "dead at end of block" "insert auto destroy"
    val call_tmp[1434821]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val coerce_tmp[1435332]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1435338 'move' coerce_tmp[1435332](1435334 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256408] B[1434642]))
    val call_tmp[1434829]:1*int(64)[1256714] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1912618]:1*int(64)[1256714] "temp"
    (1437516 call _defaultOf[1264554] ret_tmp[1912618])
    (1912621 'move' Blo[1434819] ret_tmp[1912618])
    {
      const-val i[1434842]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1434844 'move' i[1434842] 0)
      {
        ref call_tmp[1435575]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        (1435577 'move' call_tmp[1435575](1435608 '.' Blo[1434819] x0[1256712]))
        ref call_tmp[1435582]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1435584 'move' call_tmp[1435582](1435613 '.' Bdims[1434813] x0[1244883]))
        const-val call_tmp[1435589]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1435616]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1435620 'move' coerce_tmp[1435616](1435618 'deref' call_tmp[1435582]))
        (1435591 'move' call_tmp[1435589](1435594 call first[1042820] coerce_tmp[1435616]))
        (1435598 call =[435443] call_tmp[1435575] call_tmp[1435589])
        (1926057 call chpl__autoDestroy[1407763] coerce_tmp[1435616])
      }
      label _continueLabel0[1435572]
      label _unused_continueLabel[1434922]
      label _breakLabel[1434924]
    }
    const-val call_tmp[1434926]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1434928 'move' call_tmp[1434926](1434931 call size[1435624] aView[1434640]))
    const-val call_tmp[1434934]:uint(64)[115] "dead at end of block" "maybe param" "temp"
    (1434936 'move' call_tmp[1434934](1434942 call safeCast[947330] call_tmp[1434926]))
    const-val len[1434944]:uint(64)[115] "dead at end of block" "const" "insert auto destroy"
    (1434946 'move' len[1434944] call_tmp[1434934])
    const-val call_tmp[1434950]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1434952 'move' call_tmp[1434950](1434955 call ==[18446] len[1434944] 0))
    const-val call_tmp[1434958]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1434960 'move' call_tmp[1434958] call_tmp[1434950])
    if call_tmp[1434958]
    {
      (1926060 call chpl__autoDestroy[1697253] Blo[1434819])
      (1926063 call chpl__autoDestroy[1695146] Bdims[1434813])
      (1926066 call chpl__autoDestroy[1697253] Alo[1434697])
      (1926069 call chpl__autoDestroy[1695146] Adims[1434691])
      gotoReturn _end__simpleTransfer[1435138] _end__simpleTransfer[1435138]
    }
    const-val call_tmp[1435029]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1435031 'move' call_tmp[1435029](1435037 call getDataIndex[1435727] A[1434638] Alo[1434697]))
    const-val Aidx[1435039]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1435041 'move' Aidx[1435039] call_tmp[1435029])
    val call_tmp[1435045]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    val coerce_tmp[1436803]:BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1409010] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1436809 'move' coerce_tmp[1436803](1436805 'cast' BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1409010] A[1434638]))
    ref call_tmp[1435053]:_ref(_ddata(range(int(64),bounded,false)))[1406051] "dead at end of block" "maybe param" "temp"
    (1435055 'move' call_tmp[1435053](1435058 call theData[1436813] A[1434638]))
    val call_tmp[1435061]:_ddata(range(int(64),bounded,false))[1406042] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1436953]:_ddata(range(int(64),bounded,false))[1406042] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1436957 'move' coerce_tmp[1436953](1436955 'deref' call_tmp[1435053]))
    (1435063 'move' call_tmp[1435061](1435066 call _ddata_shift[1414623] coerce_tmp[1436953] Aidx[1435039]))
    const Adata[1435070]:_ddata(range(int(64),bounded,false))[1406042] "dead at end of block" "const" "insert auto destroy"
    (1435072 'move' Adata[1435070](1436960 call chpl__initCopy[1406560] call_tmp[1435061]))
    const-val call_tmp[1435076]:int(64)[13] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1436967]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1436972 'move' coerce_tmp[1436967] B[1434642])
    (1435078 'move' call_tmp[1435076](1435084 call getDataIndex[1435727] coerce_tmp[1436967] Blo[1434819]))
    const-val Bidx[1435086]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1435088 'move' Bidx[1435086] call_tmp[1435076])
    val call_tmp[1435092]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    val coerce_tmp[1436986]:BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1409010] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1436992 'move' coerce_tmp[1436986](1436988 'cast' BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1409010] B[1434642]))
    ref call_tmp[1435100]:_ref(_ddata(range(int(64),bounded,false)))[1406051] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1436996]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1437001 'move' coerce_tmp[1436996] B[1434642])
    (1435102 'move' call_tmp[1435100](1435105 call theData[1436813] coerce_tmp[1436996]))
    val call_tmp[1435108]:_ddata(range(int(64),bounded,false))[1406042] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1437004]:_ddata(range(int(64),bounded,false))[1406042] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1437008 'move' coerce_tmp[1437004](1437006 'deref' call_tmp[1435100]))
    (1435110 'move' call_tmp[1435108](1435113 call _ddata_shift[1414623] coerce_tmp[1437004] Bidx[1435086]))
    const Bdata[1435117]:_ddata(range(int(64),bounded,false))[1406042] "dead at end of block" "const" "insert auto destroy"
    (1435119 'move' Bdata[1435117](1437011 call chpl__initCopy[1406560] call_tmp[1435108]))
    (1435128 call _simpleTransferHelper[1437014] A[1434638] B[1434642] Adata[1435070] Bdata[1435117] len[1434944])
    (1926072 call chpl__autoDestroy[1697253] Blo[1434819])
    (1926075 call chpl__autoDestroy[1695146] Bdims[1434813])
    (1926078 call chpl__autoDestroy[1697253] Alo[1434697])
    (1926081 call chpl__autoDestroy[1695146] Adims[1434691])
    label _end__simpleTransfer[1435138]
    (1435140 return _void[55])
  }
  function _simpleTransfer[1526341](const in arg A[1526343]:[domain(1,int(64),false)] real(64)[1358944], const  ref arg aView[1526345]:domain(1,int(64),false)[1252786], const in arg B[1526347]:[domain(1,int(64),false)] real(64)[1358944], const  ref arg bView[1526349]:domain(1,int(64),false)[1252786]) : void[4] "instantiated generic" "invisible fn" "private" "resolved" "no return value for void"
  {
    val idxType[1526375]:int(64)[13] "dead at end of block" "insert auto destroy" "type variable"
    val coerce_tmp[1526850]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1526856 'move' coerce_tmp[1526850](1526852 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256408] A[1526343]))
    const-val call_tmp[1526387]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1914071]:1*range(int(64),bounded,false)[1244885] "temp"
    (1526395 call dims[1353359] aView[1526345] ret_tmp[1914071])
    (1914074 'move' call_tmp[1526387] ret_tmp[1914071])
    const-val Adims[1526396]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "const" "insert auto destroy"
    (1526398 'move' Adims[1526396] call_tmp[1526387])
    const-val Alo[1526402]:1*int(64)[1256714] "dead at end of block" "insert auto destroy"
    val call_tmp[1526404]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1526412]:1*int(64)[1256714] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1912702]:1*int(64)[1256714] "temp"
    (1527626 call _defaultOf[1264554] ret_tmp[1912702])
    (1912705 'move' Alo[1526402] ret_tmp[1912702])
    {
      const-val i[1526425]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1526427 'move' i[1526425] 0)
      {
        ref call_tmp[1526900]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        (1526902 'move' call_tmp[1526900](1526933 '.' Alo[1526402] x0[1256712]))
        ref call_tmp[1526907]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1526909 'move' call_tmp[1526907](1526938 '.' Adims[1526396] x0[1244883]))
        const-val call_tmp[1526914]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1526941]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1526945 'move' coerce_tmp[1526941](1526943 'deref' call_tmp[1526907]))
        (1526916 'move' call_tmp[1526914](1526919 call first[1042820] coerce_tmp[1526941]))
        (1526923 call =[435443] call_tmp[1526900] call_tmp[1526914])
        (1926855 call chpl__autoDestroy[1407763] coerce_tmp[1526941])
      }
      label _continueLabel0[1526897]
      label _unused_continueLabel[1526505]
      label _breakLabel[1526507]
    }
    const-val call_tmp[1526509]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1914077]:1*range(int(64),bounded,false)[1244885] "temp"
    (1526517 call dims[1353359] bView[1526349] ret_tmp[1914077])
    (1914080 'move' call_tmp[1526509] ret_tmp[1914077])
    const-val Bdims[1526518]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "const" "insert auto destroy"
    (1526520 'move' Bdims[1526518] call_tmp[1526509])
    const-val Blo[1526524]:1*int(64)[1256714] "dead at end of block" "insert auto destroy"
    val call_tmp[1526526]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val coerce_tmp[1526967]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1526973 'move' coerce_tmp[1526967](1526969 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256408] B[1526347]))
    val call_tmp[1526534]:1*int(64)[1256714] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1912708]:1*int(64)[1256714] "temp"
    (1527632 call _defaultOf[1264554] ret_tmp[1912708])
    (1912711 'move' Blo[1526524] ret_tmp[1912708])
    {
      const-val i[1526547]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1526549 'move' i[1526547] 0)
      {
        ref call_tmp[1526997]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        (1526999 'move' call_tmp[1526997](1527030 '.' Blo[1526524] x0[1256712]))
        ref call_tmp[1527004]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1527006 'move' call_tmp[1527004](1527035 '.' Bdims[1526518] x0[1244883]))
        const-val call_tmp[1527011]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1527038]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1527042 'move' coerce_tmp[1527038](1527040 'deref' call_tmp[1527004]))
        (1527013 'move' call_tmp[1527011](1527016 call first[1042820] coerce_tmp[1527038]))
        (1527020 call =[435443] call_tmp[1526997] call_tmp[1527011])
        (1926859 call chpl__autoDestroy[1407763] coerce_tmp[1527038])
      }
      label _continueLabel0[1526994]
      label _unused_continueLabel[1526627]
      label _breakLabel[1526629]
    }
    const-val call_tmp[1526631]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1526633 'move' call_tmp[1526631](1526636 call size[1435624] aView[1526345]))
    const-val call_tmp[1526639]:uint(64)[115] "dead at end of block" "maybe param" "temp"
    (1526641 'move' call_tmp[1526639](1526647 call safeCast[947330] call_tmp[1526631]))
    const-val len[1526649]:uint(64)[115] "dead at end of block" "const" "insert auto destroy"
    (1526651 'move' len[1526649] call_tmp[1526639])
    const-val call_tmp[1526655]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1526657 'move' call_tmp[1526655](1526660 call ==[18446] len[1526649] 0))
    const-val call_tmp[1526663]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1526665 'move' call_tmp[1526663] call_tmp[1526655])
    if call_tmp[1526663]
    {
      (1926862 call chpl__autoDestroy[1697253] Blo[1526524])
      (1926865 call chpl__autoDestroy[1695146] Bdims[1526518])
      (1926868 call chpl__autoDestroy[1697253] Alo[1526402])
      (1926871 call chpl__autoDestroy[1695146] Adims[1526396])
      gotoReturn _end__simpleTransfer[1526843] _end__simpleTransfer[1526843]
    }
    const-val call_tmp[1526734]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1526736 'move' call_tmp[1526734](1526742 call getDataIndex[1390300] A[1526343] Alo[1526402]))
    const-val Aidx[1526744]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1526746 'move' Aidx[1526744] call_tmp[1526734])
    val call_tmp[1526750]:real(64)[16] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    val coerce_tmp[1527073]:BaseRectangularArr(1,int(64),false,real(64))[1358730] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1527079 'move' coerce_tmp[1527073](1527075 'cast' BaseRectangularArr(1,int(64),false,real(64))[1358730] A[1526343]))
    ref call_tmp[1526758]:_ref(_ddata(real(64)))[1358114] "dead at end of block" "maybe param" "temp"
    (1526760 'move' call_tmp[1526758](1526763 call theData[1391376] A[1526343]))
    val call_tmp[1526766]:_ddata(real(64))[1358105] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1527084]:_ddata(real(64))[1358105] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1527088 'move' coerce_tmp[1527084](1527086 'deref' call_tmp[1526758]))
    (1526768 'move' call_tmp[1526766](1526771 call _ddata_shift[1364660] coerce_tmp[1527084] Aidx[1526744]))
    const Adata[1526775]:_ddata(real(64))[1358105] "dead at end of block" "const" "insert auto destroy"
    (1526777 'move' Adata[1526775](1527091 call chpl__initCopy[1359018] call_tmp[1526766]))
    const-val call_tmp[1526781]:int(64)[13] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1527098]:[domain(1,int(64),false)] real(64)[1358944] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1527103 'move' coerce_tmp[1527098] B[1526347])
    (1526783 'move' call_tmp[1526781](1526789 call getDataIndex[1390300] coerce_tmp[1527098] Blo[1526524]))
    const-val Bidx[1526791]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1526793 'move' Bidx[1526791] call_tmp[1526781])
    val call_tmp[1526797]:real(64)[16] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    val coerce_tmp[1527117]:BaseRectangularArr(1,int(64),false,real(64))[1358730] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1527123 'move' coerce_tmp[1527117](1527119 'cast' BaseRectangularArr(1,int(64),false,real(64))[1358730] B[1526347]))
    ref call_tmp[1526805]:_ref(_ddata(real(64)))[1358114] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1527127]:[domain(1,int(64),false)] real(64)[1358944] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1527132 'move' coerce_tmp[1527127] B[1526347])
    (1526807 'move' call_tmp[1526805](1526810 call theData[1391376] coerce_tmp[1527127]))
    val call_tmp[1526813]:_ddata(real(64))[1358105] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1527135]:_ddata(real(64))[1358105] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1527139 'move' coerce_tmp[1527135](1527137 'deref' call_tmp[1526805]))
    (1526815 'move' call_tmp[1526813](1526818 call _ddata_shift[1364660] coerce_tmp[1527135] Bidx[1526791]))
    const Bdata[1526822]:_ddata(real(64))[1358105] "dead at end of block" "const" "insert auto destroy"
    (1526824 'move' Bdata[1526822](1527142 call chpl__initCopy[1359018] call_tmp[1526813]))
    (1526833 call _simpleTransferHelper[1527145] A[1526343] B[1526347] Adata[1526775] Bdata[1526822] len[1526649])
    (1926874 call chpl__autoDestroy[1697253] Blo[1526524])
    (1926877 call chpl__autoDestroy[1695146] Bdims[1526518])
    (1926880 call chpl__autoDestroy[1697253] Alo[1526402])
    (1926883 call chpl__autoDestroy[1695146] Adims[1526396])
    label _end__simpleTransfer[1526843]
    (1526845 return _void[55])
  }
  function _simpleTransferHelper[1437014](const in arg A[1437016]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224], const in arg B[1437018]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224], const in arg Adata[1437020]:_ddata(range(int(64),bounded,false))[1406042], const in arg Bdata[1437022]:_ddata(range(int(64),bounded,false))[1406042], const in arg len[1437024]:uint(64)[115]) : void[4] "instantiated generic" "invisible fn" "private" "resolved" "no return value for void"
  {
    const-val call_tmp[1437038]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1437040 'move' call_tmp[1437038](1437043 call ==[1437330] Adata[1437020] Bdata[1437022]))
    const-val call_tmp[1437046]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1437048 'move' call_tmp[1437046] call_tmp[1437038])
    if call_tmp[1437046]
    {
      gotoReturn _end__simpleTransferHelper[1437325] _end__simpleTransferHelper[1437325]
    }
    const-val call_tmp[1437058]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (1437060 'move' call_tmp[1437058](1437062 '_wide_get_node' Adata[1437020]))
    const-val call_tmp[1437064]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1906406]:locale[28] "temp"
    (1437069 call here[90438] ret_tmp[1906406])
    (1906409 'move' call_tmp[1437064] ret_tmp[1906406])
    const-val call_tmp[1437070]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1437072 'move' call_tmp[1437070](1437075 call id[90521] call_tmp[1437064]))
    const-val call_tmp[1437078]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1437455]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1437461 'move' coerce_tmp[1437455](1437457 'cast' int(64)[13] call_tmp[1437058]))
    (1437080 'move' call_tmp[1437078](1437083 call ==[435744] coerce_tmp[1437455] call_tmp[1437070]))
    const-val call_tmp[1437086]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1437088 'move' call_tmp[1437086] call_tmp[1437078])
    if call_tmp[1437086]
    {
      ref call_tmp[1437115]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
      (1437117 'move' call_tmp[1437115](1437120 call this[1407601] Adata[1437020] 0))
      val call_tmp[1437122]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (1437124 'move' call_tmp[1437122](1437126 '_wide_get_node' Bdata[1437022]))
      ref call_tmp[1437128]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
      (1437130 'move' call_tmp[1437128](1437133 call this[1407601] Bdata[1437022] 0))
      (1437135 'chpl_comm_array_get' call_tmp[1437115] call_tmp[1437122] call_tmp[1437128] len[1437024])
    }
    {
      const-val call_tmp[1437141]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (1437143 'move' call_tmp[1437141](1437145 '_wide_get_node' Bdata[1437022]))
      const-val call_tmp[1437147]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1906412]:locale[28] "temp"
      (1437152 call here[90438] ret_tmp[1906412])
      (1906415 'move' call_tmp[1437147] ret_tmp[1906412])
      const-val call_tmp[1437153]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1437155 'move' call_tmp[1437153](1437158 call id[90521] call_tmp[1437147]))
      const-val call_tmp[1437161]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1437474]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1437480 'move' coerce_tmp[1437474](1437476 'cast' int(64)[13] call_tmp[1437141]))
      (1437163 'move' call_tmp[1437161](1437166 call ==[435744] coerce_tmp[1437474] call_tmp[1437153]))
      const-val call_tmp[1437169]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1437171 'move' call_tmp[1437169] call_tmp[1437161])
      if call_tmp[1437169]
      {
        ref call_tmp[1437198]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
        (1437200 'move' call_tmp[1437198](1437203 call this[1407601] Bdata[1437022] 0))
        val call_tmp[1437205]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
        (1437207 'move' call_tmp[1437205](1437209 '_wide_get_node' Adata[1437020]))
        ref call_tmp[1437211]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
        (1437213 'move' call_tmp[1437211](1437216 call this[1407601] Adata[1437020] 0))
        (1437218 'chpl_comm_array_put' call_tmp[1437198] call_tmp[1437205] call_tmp[1437211] len[1437024])
      }
      {
        const-val tmp[1437224]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
        const-val call_tmp[1437226]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
        (1437228 'move' call_tmp[1437226](1437230 '_wide_get_locale' Adata[1437020]))
        const-val call_tmp[1437232]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1906742]:locale[28] "temp"
        (1437237 call chpl_localeID_to_locale[92852] call_tmp[1437226] ret_tmp[1906742])
        (1906745 'move' call_tmp[1437232] ret_tmp[1906742])
        const-val call_tmp[1437239]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
        val _locale_tmp_[1437492]:BaseLocale[91204] "dead after last mention" "temp"
        (1437497 'move' _locale_tmp_[1437492](1437494 call _value[89984] call_tmp[1437232]))
        (1437241 'move' call_tmp[1437239](1437243 '_wide_get_locale' _locale_tmp_[1437492]))
        (1437245 'move' tmp[1437224] call_tmp[1437239])
        val isdirect[2206607]:bool[10] "temp"
        (2206612 'move' isdirect[2206607](2206609 call chpl_doDirectExecuteOn[187469] tmp[1437224]))
        if isdirect[2206607]
        {
          (2206616 call on_fn[1437252] Adata[1437020] Bdata[1437022] len[1437024])
        }
        {
          val _args_foron_fn[2206637]:_class_localson_fn[2206625] "temp"
          (2206641 'move' _args_foron_fn[2206637](2206639 'stack allocate class' _class_localson_fn[2206625]))
          (2206643 '.=' _args_foron_fn[2206637] _0_tmp[2206628] tmp[1437224])
          (2206647 '.=' _args_foron_fn[2206637] _1_Adata[2206630] Adata[1437020])
          (2206651 '.=' _args_foron_fn[2206637] _2_Bdata[2206632] Bdata[1437022])
          (2206655 '.=' _args_foron_fn[2206637] _3_len[2206634] len[1437024])
          val _args_vforon_fn[2206659]:c_void_ptr[149] "temp"
          (2206663 'move' _args_vforon_fn[2206659](2206661 'cast_to_void_star' _args_foron_fn[2206637]))
          val _args_sizeon_fn[2206665]:int(64)[13] "temp"
          (2206669 'move' _args_sizeon_fn[2206665](2206667 'sizeof_bundle' _class_localson_fn[2206625]))
          on(2206717 call wrapon_fn[2206671] tmp[1437224] _args_vforon_fn[2206659] _args_sizeon_fn[2206665] _args_foron_fn[2206637])
        }
        (1926087 call chpl__autoDestroy[1601737] call_tmp[1437232])
        {
        }
      }
      (1926092 call chpl__autoDestroy[1601737] call_tmp[1437147])
    }
    (1926095 call chpl__autoDestroy[1601737] call_tmp[1437064])
    label _end__simpleTransferHelper[1437325]
    (1437327 return _void[55])
  }
  function _simpleTransferHelper[1527145](const in arg A[1527147]:[domain(1,int(64),false)] real(64)[1358944], const in arg B[1527149]:[domain(1,int(64),false)] real(64)[1358944], const in arg Adata[1527151]:_ddata(real(64))[1358105], const in arg Bdata[1527153]:_ddata(real(64))[1358105], const in arg len[1527155]:uint(64)[115]) : void[4] "instantiated generic" "invisible fn" "private" "resolved" "no return value for void"
  {
    const-val call_tmp[1527169]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1527171 'move' call_tmp[1527169](1527174 call ==[1527461] Adata[1527151] Bdata[1527153]))
    const-val call_tmp[1527177]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1527179 'move' call_tmp[1527177] call_tmp[1527169])
    if call_tmp[1527177]
    {
      gotoReturn _end__simpleTransferHelper[1527456] _end__simpleTransferHelper[1527456]
    }
    const-val call_tmp[1527189]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (1527191 'move' call_tmp[1527189](1527193 '_wide_get_node' Adata[1527151]))
    const-val call_tmp[1527195]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1906436]:locale[28] "temp"
    (1527200 call here[90438] ret_tmp[1906436])
    (1906439 'move' call_tmp[1527195] ret_tmp[1906436])
    const-val call_tmp[1527201]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1527203 'move' call_tmp[1527201](1527206 call id[90521] call_tmp[1527195]))
    const-val call_tmp[1527209]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1527571]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1527577 'move' coerce_tmp[1527571](1527573 'cast' int(64)[13] call_tmp[1527189]))
    (1527211 'move' call_tmp[1527209](1527214 call ==[435744] coerce_tmp[1527571] call_tmp[1527201]))
    const-val call_tmp[1527217]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1527219 'move' call_tmp[1527217] call_tmp[1527209])
    if call_tmp[1527217]
    {
      ref call_tmp[1527246]:_ref(real(64))[936906] "dead after last mention" "maybe param" "temp"
      (1527248 'move' call_tmp[1527246](1527251 call this[1391523] Adata[1527151] 0))
      val call_tmp[1527253]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (1527255 'move' call_tmp[1527253](1527257 '_wide_get_node' Bdata[1527153]))
      ref call_tmp[1527259]:_ref(real(64))[936906] "dead after last mention" "maybe param" "temp"
      (1527261 'move' call_tmp[1527259](1527264 call this[1391523] Bdata[1527153] 0))
      (1527266 'chpl_comm_array_get' call_tmp[1527246] call_tmp[1527253] call_tmp[1527259] len[1527155])
    }
    {
      const-val call_tmp[1527272]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (1527274 'move' call_tmp[1527272](1527276 '_wide_get_node' Bdata[1527153]))
      const-val call_tmp[1527278]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1906442]:locale[28] "temp"
      (1527283 call here[90438] ret_tmp[1906442])
      (1906445 'move' call_tmp[1527278] ret_tmp[1906442])
      const-val call_tmp[1527284]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1527286 'move' call_tmp[1527284](1527289 call id[90521] call_tmp[1527278]))
      const-val call_tmp[1527292]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1527590]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1527596 'move' coerce_tmp[1527590](1527592 'cast' int(64)[13] call_tmp[1527272]))
      (1527294 'move' call_tmp[1527292](1527297 call ==[435744] coerce_tmp[1527590] call_tmp[1527284]))
      const-val call_tmp[1527300]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1527302 'move' call_tmp[1527300] call_tmp[1527292])
      if call_tmp[1527300]
      {
        ref call_tmp[1527329]:_ref(real(64))[936906] "dead after last mention" "maybe param" "temp"
        (1527331 'move' call_tmp[1527329](1527334 call this[1391523] Bdata[1527153] 0))
        val call_tmp[1527336]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
        (1527338 'move' call_tmp[1527336](1527340 '_wide_get_node' Adata[1527151]))
        ref call_tmp[1527342]:_ref(real(64))[936906] "dead after last mention" "maybe param" "temp"
        (1527344 'move' call_tmp[1527342](1527347 call this[1391523] Adata[1527151] 0))
        (1527349 'chpl_comm_array_put' call_tmp[1527329] call_tmp[1527336] call_tmp[1527342] len[1527155])
      }
      {
        const-val tmp[1527355]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
        const-val call_tmp[1527357]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
        (1527359 'move' call_tmp[1527357](1527361 '_wide_get_locale' Adata[1527151]))
        const-val call_tmp[1527363]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1906748]:locale[28] "temp"
        (1527368 call chpl_localeID_to_locale[92852] call_tmp[1527357] ret_tmp[1906748])
        (1906751 'move' call_tmp[1527363] ret_tmp[1906748])
        const-val call_tmp[1527370]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
        val _locale_tmp_[1527608]:BaseLocale[91204] "dead after last mention" "temp"
        (1527613 'move' _locale_tmp_[1527608](1527610 call _value[89984] call_tmp[1527363]))
        (1527372 'move' call_tmp[1527370](1527374 '_wide_get_locale' _locale_tmp_[1527608]))
        (1527376 'move' tmp[1527355] call_tmp[1527370])
        val isdirect[2208024]:bool[10] "temp"
        (2208029 'move' isdirect[2208024](2208026 call chpl_doDirectExecuteOn[187469] tmp[1527355]))
        if isdirect[2208024]
        {
          (2208033 call on_fn[1527383] Adata[1527151] Bdata[1527153] len[1527155])
        }
        {
          val _args_foron_fn[2208054]:_class_localson_fn[2208042] "temp"
          (2208058 'move' _args_foron_fn[2208054](2208056 'stack allocate class' _class_localson_fn[2208042]))
          (2208060 '.=' _args_foron_fn[2208054] _0_tmp[2208045] tmp[1527355])
          (2208064 '.=' _args_foron_fn[2208054] _1_Adata[2208047] Adata[1527151])
          (2208068 '.=' _args_foron_fn[2208054] _2_Bdata[2208049] Bdata[1527153])
          (2208072 '.=' _args_foron_fn[2208054] _3_len[2208051] len[1527155])
          val _args_vforon_fn[2208076]:c_void_ptr[149] "temp"
          (2208080 'move' _args_vforon_fn[2208076](2208078 'cast_to_void_star' _args_foron_fn[2208054]))
          val _args_sizeon_fn[2208082]:int(64)[13] "temp"
          (2208086 'move' _args_sizeon_fn[2208082](2208084 'sizeof_bundle' _class_localson_fn[2208042]))
          on(2208134 call wrapon_fn[2208088] tmp[1527355] _args_vforon_fn[2208076] _args_sizeon_fn[2208082] _args_foron_fn[2208054])
        }
        (1926886 call chpl__autoDestroy[1601737] call_tmp[1527363])
        {
        }
      }
      (1926891 call chpl__autoDestroy[1601737] call_tmp[1527278])
    }
    (1926894 call chpl__autoDestroy[1601737] call_tmp[1527195])
    label _end__simpleTransferHelper[1527456]
    (1527458 return _void[55])
  }
  function complexTransfer[1437555](const in arg A[1437557]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224], const  ref arg aView[1437559]:domain(1,int(64),false)[1252786], const in arg B[1437561]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224], const  ref arg bView[1437563]:domain(1,int(64),false)[1252786]) : void[4] "instantiated generic" "invisible fn" "private" "resolved" "no return value for void"
  {
    const-val tmp[1437575]:bool[10] "dead after last mention" "maybe param" "temp"
    ref call_tmp[1437577]:_ref(_ddata(range(int(64),bounded,false)))[1406051] "dead after last mention" "maybe param" "temp"
    (1437579 'move' call_tmp[1437577](1437582 call data[1411200] A[1437557]))
    const-val call_tmp[1437585]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (1437587 'move' call_tmp[1437585](1437589 '_wide_get_node' call_tmp[1437577]))
    const-val call_tmp[1437591]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1906418]:locale[28] "temp"
    (1437596 call here[90438] ret_tmp[1906418])
    (1906421 'move' call_tmp[1437591] ret_tmp[1906418])
    const-val call_tmp[1437597]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1437599 'move' call_tmp[1437597](1437602 call id[90521] call_tmp[1437591]))
    const-val coerce_tmp[1437786]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1437792 'move' coerce_tmp[1437786](1437788 'cast' int(64)[13] call_tmp[1437585]))
    (1437605 'move' tmp[1437575](1437608 call !=[436128] coerce_tmp[1437786] call_tmp[1437597]))
    (1926098 call chpl__autoDestroy[1601737] call_tmp[1437591])
    val tmp[1437624]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1437626]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1437628]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1437630 'move' call_tmp[1437628] tmp[1437575])
    (1437635 'move' tmp[1437626] call_tmp[1437628])
    if tmp[1437626]
    {
      const-val tmp[1437642]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      ref call_tmp[1437644]:_ref(_ddata(range(int(64),bounded,false)))[1406051] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[1437798]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1437803 'move' coerce_tmp[1437798] B[1437561])
      (1437646 'move' call_tmp[1437644](1437649 call data[1411200] coerce_tmp[1437798]))
      const-val call_tmp[1437652]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (1437654 'move' call_tmp[1437652](1437656 '_wide_get_node' call_tmp[1437644]))
      const-val call_tmp[1437658]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1906424]:locale[28] "temp"
      (1437663 call here[90438] ret_tmp[1906424])
      (1906427 'move' call_tmp[1437658] ret_tmp[1906424])
      const-val call_tmp[1437664]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1437666 'move' call_tmp[1437664](1437669 call id[90521] call_tmp[1437658]))
      const-val call_tmp[1437672]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1437808]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1437814 'move' coerce_tmp[1437808](1437810 'cast' int(64)[13] call_tmp[1437652]))
      (1437674 'move' call_tmp[1437672](1437677 call !=[436128] coerce_tmp[1437808] call_tmp[1437664]))
      (1437680 'move' tmp[1437642] call_tmp[1437672])
      (1437685 'move' tmp[1437624] tmp[1437642])
      (1926102 call chpl__autoDestroy[1601737] call_tmp[1437658])
    }
    {
      (1437691 'move' tmp[1437624] 0)
    }
    const-val call_tmp[1437697]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1437699 'move' call_tmp[1437697] tmp[1437624])
    if call_tmp[1437697]
    {
      const-val tmp[1437734]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
      ref call_tmp[1437736]:_ref(_ddata(range(int(64),bounded,false)))[1406051] "dead after last mention" "maybe param" "temp"
      (1437738 'move' call_tmp[1437736](1437741 call data[1411200] A[1437557]))
      const-val call_tmp[1437744]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      (1437746 'move' call_tmp[1437744](1437748 '_wide_get_locale' call_tmp[1437736]))
      (1437750 'move' tmp[1437734] call_tmp[1437744])
      val aView_data[2196537]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1871345] "temp"
      (2196539 call chpl__serialize[1871042] aView[1437559] aView_data[2196537])
      val bView_data[2196571]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1871345] "temp"
      (2196573 call chpl__serialize[1871042] bView[1437563] bView_data[2196571])
      val isdirect[2206722]:bool[10] "temp"
      (2206727 'move' isdirect[2206722](2206724 call chpl_doDirectExecuteOn[187469] tmp[1437734]))
      if isdirect[2206722]
      {
        (2206731 call on_fn[1437757] A[1437557] aView_data[2196537] B[1437561] bView_data[2196571])
      }
      {
        val _args_foron_fn[2206755]:_class_localson_fn[2206741] "temp"
        (2206759 'move' _args_foron_fn[2206755](2206757 'stack allocate class' _class_localson_fn[2206741]))
        (2206761 '.=' _args_foron_fn[2206755] _0_tmp[2206744] tmp[1437734])
        (2206765 '.=' _args_foron_fn[2206755] _1_A[2206746] A[1437557])
        (2206769 '.=' _args_foron_fn[2206755] _2_aView_data[2206748] aView_data[2196537])
        (2206773 '.=' _args_foron_fn[2206755] _3_B[2206750] B[1437561])
        (2206777 '.=' _args_foron_fn[2206755] _4_bView_data[2206752] bView_data[2196571])
        val _args_vforon_fn[2206781]:c_void_ptr[149] "temp"
        (2206785 'move' _args_vforon_fn[2206781](2206783 'cast_to_void_star' _args_foron_fn[2206755]))
        val _args_sizeon_fn[2206787]:int(64)[13] "temp"
        (2206791 'move' _args_sizeon_fn[2206787](2206789 'sizeof_bundle' _class_localson_fn[2206741]))
        on(2206847 call wrapon_fn[2206793] tmp[1437734] _args_vforon_fn[2206781] _args_sizeon_fn[2206787] _args_foron_fn[2206755])
      }
      {
      }
    }
    {
      (1437774 call complexTransferCore[1437821] A[1437557] aView[1437559] B[1437561] bView[1437563])
    }
    (1437780 return _void[55])
  }
  function complexTransfer[1527671](const in arg A[1527673]:[domain(1,int(64),false)] real(64)[1358944], const  ref arg aView[1527675]:domain(1,int(64),false)[1252786], const in arg B[1527677]:[domain(1,int(64),false)] real(64)[1358944], const  ref arg bView[1527679]:domain(1,int(64),false)[1252786]) : void[4] "instantiated generic" "invisible fn" "private" "resolved" "no return value for void"
  {
    const-val tmp[1527691]:bool[10] "dead after last mention" "maybe param" "temp"
    ref call_tmp[1527693]:_ref(_ddata(real(64)))[1358114] "dead after last mention" "maybe param" "temp"
    (1527695 'move' call_tmp[1527693](1527698 call data[1360938] A[1527673]))
    const-val call_tmp[1527701]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (1527703 'move' call_tmp[1527701](1527705 '_wide_get_node' call_tmp[1527693]))
    const-val call_tmp[1527707]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1906448]:locale[28] "temp"
    (1527712 call here[90438] ret_tmp[1906448])
    (1906451 'move' call_tmp[1527707] ret_tmp[1906448])
    const-val call_tmp[1527713]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1527715 'move' call_tmp[1527713](1527718 call id[90521] call_tmp[1527707]))
    const-val coerce_tmp[1527902]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1527908 'move' coerce_tmp[1527902](1527904 'cast' int(64)[13] call_tmp[1527701]))
    (1527721 'move' tmp[1527691](1527724 call !=[436128] coerce_tmp[1527902] call_tmp[1527713]))
    (1926897 call chpl__autoDestroy[1601737] call_tmp[1527707])
    val tmp[1527740]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1527742]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1527744]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1527746 'move' call_tmp[1527744] tmp[1527691])
    (1527751 'move' tmp[1527742] call_tmp[1527744])
    if tmp[1527742]
    {
      const-val tmp[1527758]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      ref call_tmp[1527760]:_ref(_ddata(real(64)))[1358114] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[1527914]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1527919 'move' coerce_tmp[1527914] B[1527677])
      (1527762 'move' call_tmp[1527760](1527765 call data[1360938] coerce_tmp[1527914]))
      const-val call_tmp[1527768]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (1527770 'move' call_tmp[1527768](1527772 '_wide_get_node' call_tmp[1527760]))
      const-val call_tmp[1527774]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1906454]:locale[28] "temp"
      (1527779 call here[90438] ret_tmp[1906454])
      (1906457 'move' call_tmp[1527774] ret_tmp[1906454])
      const-val call_tmp[1527780]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1527782 'move' call_tmp[1527780](1527785 call id[90521] call_tmp[1527774]))
      const-val call_tmp[1527788]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1527924]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1527930 'move' coerce_tmp[1527924](1527926 'cast' int(64)[13] call_tmp[1527768]))
      (1527790 'move' call_tmp[1527788](1527793 call !=[436128] coerce_tmp[1527924] call_tmp[1527780]))
      (1527796 'move' tmp[1527758] call_tmp[1527788])
      (1527801 'move' tmp[1527740] tmp[1527758])
      (1926901 call chpl__autoDestroy[1601737] call_tmp[1527774])
    }
    {
      (1527807 'move' tmp[1527740] 0)
    }
    const-val call_tmp[1527813]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1527815 'move' call_tmp[1527813] tmp[1527740])
    if call_tmp[1527813]
    {
      const-val tmp[1527850]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
      ref call_tmp[1527852]:_ref(_ddata(real(64)))[1358114] "dead after last mention" "maybe param" "temp"
      (1527854 'move' call_tmp[1527852](1527857 call data[1360938] A[1527673]))
      const-val call_tmp[1527860]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      (1527862 'move' call_tmp[1527860](1527864 '_wide_get_locale' call_tmp[1527852]))
      (1527866 'move' tmp[1527850] call_tmp[1527860])
      val aView_data[2196605]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1871345] "temp"
      (2196607 call chpl__serialize[1871042] aView[1527675] aView_data[2196605])
      val bView_data[2196639]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1871345] "temp"
      (2196641 call chpl__serialize[1871042] bView[1527679] bView_data[2196639])
      val isdirect[2208139]:bool[10] "temp"
      (2208144 'move' isdirect[2208139](2208141 call chpl_doDirectExecuteOn[187469] tmp[1527850]))
      if isdirect[2208139]
      {
        (2208148 call on_fn[1527873] A[1527673] aView_data[2196605] B[1527677] bView_data[2196639])
      }
      {
        val _args_foron_fn[2208172]:_class_localson_fn[2208158] "temp"
        (2208176 'move' _args_foron_fn[2208172](2208174 'stack allocate class' _class_localson_fn[2208158]))
        (2208178 '.=' _args_foron_fn[2208172] _0_tmp[2208161] tmp[1527850])
        (2208182 '.=' _args_foron_fn[2208172] _1_A[2208163] A[1527673])
        (2208186 '.=' _args_foron_fn[2208172] _2_aView_data[2208165] aView_data[2196605])
        (2208190 '.=' _args_foron_fn[2208172] _3_B[2208167] B[1527677])
        (2208194 '.=' _args_foron_fn[2208172] _4_bView_data[2208169] bView_data[2196639])
        val _args_vforon_fn[2208198]:c_void_ptr[149] "temp"
        (2208202 'move' _args_vforon_fn[2208198](2208200 'cast_to_void_star' _args_foron_fn[2208172]))
        val _args_sizeon_fn[2208204]:int(64)[13] "temp"
        (2208208 'move' _args_sizeon_fn[2208204](2208206 'sizeof_bundle' _class_localson_fn[2208158]))
        on(2208264 call wrapon_fn[2208210] tmp[1527850] _args_vforon_fn[2208198] _args_sizeon_fn[2208204] _args_foron_fn[2208172])
      }
      {
      }
    }
    {
      (1527890 call complexTransferCore[1527937] A[1527673] aView[1527675] B[1527677] bView[1527679])
    }
    (1527896 return _void[55])
  }
  function complexTransferCore[1437821](const in arg LHS[1437823]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224], const  ref arg LViewDom[1437825]:domain(1,int(64),false)[1252786], const in arg RHS[1437827]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224], const  ref arg RViewDom[1437829]:domain(1,int(64),false)[1252786]) : void[4] "instantiated generic" "invisible fn" "private" "resolved"
  {
    val idxType[1437871]:int(64)[13] "dead at end of block" "insert auto destroy" "type variable"
    val coerce_tmp[1440201]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1440207 'move' coerce_tmp[1440201](1440203 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256408] LHS[1437823]))
    val intIdxType[1437883]:int(64)[13] "dead at end of block" "insert auto destroy" "type variable"
    const-val call_tmp[1437952]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1914059]:1*range(int(64),bounded,false)[1244885] "temp"
    (1437960 call dims[1353359] LViewDom[1437825] ret_tmp[1914059])
    (1914062 'move' call_tmp[1437952] ret_tmp[1914059])
    const LeftDims[1437961]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "const" "insert auto destroy"
    (1437963 'move' LeftDims[1437961] call_tmp[1437952])
    const-val call_tmp[1437967]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1914065]:1*range(int(64),bounded,false)[1244885] "temp"
    (1437975 call dims[1353359] RViewDom[1437829] ret_tmp[1914065])
    (1914068 'move' call_tmp[1437967] ret_tmp[1914065])
    const RightDims[1437976]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "const" "insert auto destroy"
    (1437978 'move' RightDims[1437976] call_tmp[1437967])
    const-val call_tmp[1437982]:(1*int(64),1*int(64),int(64))[1441721] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1915043]:(1*int(64),1*int(64),int(64))[1441721] "temp"
    (1437987 call bulkCommComputeActiveDims[1440251] LeftDims[1437961] RightDims[1437976] ret_tmp[1915043])
    (1915046 'move' call_tmp[1437982] ret_tmp[1915043])
    const-val tmp[1437990]:(1*int(64),1*int(64),int(64))[1441721] "dead at end of block" "const" "insert auto destroy" "temp"
    (1437992 'move' tmp[1437990] call_tmp[1437982])
    1
    ref call_tmp[1438000]:_ref(1*int(64))[1256784] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1438002 'move' call_tmp[1438000](1442245 '.' tmp[1437990] x0[1441715]))
    const LeftActives[1438007]:1*int(64)[1256714] "dead at end of block" "const" "insert auto destroy"
    (1438009 'move' LeftActives[1438007](1442248 call chpl__initCopy[1441632] call_tmp[1438000]))
    ref call_tmp[1438012]:_ref(1*int(64))[1256784] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1438014 'move' call_tmp[1438012](1442253 '.' tmp[1437990] x1[1441717]))
    const RightActives[1438019]:1*int(64)[1256714] "dead at end of block" "const" "insert auto destroy"
    (1438021 'move' RightActives[1438019](1442256 call chpl__initCopy[1441632] call_tmp[1438012]))
    ref call_tmp[1438024]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1438026 'move' call_tmp[1438024](1442261 '.' tmp[1437990] x2[1441719]))
    const-val inferredRank[1438031]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1442266]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1442270 'move' coerce_tmp[1442266](1442268 'deref' call_tmp[1438024]))
    (1926105 '=' inferredRank[1438031] coerce_tmp[1442266])
    (1438033 'noop')
    const-val DimSizes[1438059]:[domain(1,int(64),false)] int(64)[1374504] "dead at end of block" "insert auto destroy"
    const-val call_tmp[1438061]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1907502]:range(int(64),bounded,false)[1027003] "temp"
    (1438066 call chpl_build_bounded_range[455253] 1 inferredRank[1438031] ret_tmp[1907502])
    (1907505 'move' call_tmp[1438061] ret_tmp[1907502])
    const-val call_tmp[1438069]:domain(1,int(64),false)[1252786] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1913646]:domain(1,int(64),false)[1252786] "temp"
    (1438074 call chpl__ensureDomainExpr[1316567] call_tmp[1438061] ret_tmp[1913646])
    (1913649 'move' call_tmp[1438069] ret_tmp[1913646])
    const-val call_tmp[1438076]:_RuntimeTypeInfo[1374737] "dead at end of block" "expr temp" "maybe param" "temp"
    (1438078 'move' call_tmp[1438076](1438081 call chpl__buildArrayRuntimeType[1367174] call_tmp[1438069]))
    const-val _runtime_type_tmp_[1474866]:domain(1,int(64),false)[1252786] "dead at end of block" "temp"
    (1474871 'move' _runtime_type_tmp_[1474866](1878685 '.v' call_tmp[1438076] dom[1374738]))
    const-val ret_tmp[1914481]:[domain(1,int(64),false)] int(64)[1374504] "temp"
    (1474864 call chpl__convertRuntimeTypeToValue[1380051] _runtime_type_tmp_[1474866] ret_tmp[1914481])
    (1914484 'move' DimSizes[1438059] ret_tmp[1914481])
    {
      val _indexOfInterest[1438089]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[1438091]:_ic_chpl_direct_range_iter[1230573] "dead at end of block" "expr temp" "temp"
      const-val call_tmp[1438093]:_ir_chpl_direct_range_iter[1230579] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val ret_tmp[1911076]:_ir_chpl_direct_range_iter[1230579] "temp"
      (1438098 call chpl_direct_range_iter[1230419] 1 inferredRank[1438031] ret_tmp[1911076])
      (1911079 'move' call_tmp[1438093] ret_tmp[1911076])
      (1438102 'move' _iterator[1438091](1438105 call _getIterator[1230588] call_tmp[1438093]))
      {
        val ret[2011493]:_ir_chpl_direct_range_iter[1230579] "dead after last mention" "RVV" "temp"
        val _indexOfInterest[2011495]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[2011497]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[2011499]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[2011501]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
        const-val low[2011731]:int(64)[13] "temp"
        (2011736 'move' low[2011731](2011733 '.v' _iterator[1438091] F0_low[2116764]))
        const-val high[2011738]:int(64)[13] "temp"
        (2011743 'move' high[2011738](2011740 '.v' _iterator[1438091] F1_high[2116768]))
        (2011504 call chpl_direct_param_stride_range_iter[1102713] low[2011731] high[2011738] ret_tmp[2011501])
        (2011508 'move' call_tmp[2011499] ret_tmp[2011501])
        (2011511 'move' _iterator[2011497](2011514 call _getIterator[1103490] call_tmp[2011499]))
        {
          val ret[2011517]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead after last mention" "RVV" "temp"
          val call_tmp[2011519]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          (2011522 call chpl_range_check_stride[1103033])
          val i[2011523]:int(64)[13] "dead at end of block" "insert auto destroy"
          val call_tmp[2011525]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          (2011527 'move' i[2011523] 0)
          val call_tmp[2011530]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          const-val default_arg_first[2011532]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
          const-val low[2011534]:int(64)[13] "temp"
          (2011536 'move' low[2011534](2011538 '.v' _iterator[2011497] F0_low[2115192]))
          (2011541 'move' default_arg_first[2011532](2011544 call chpl_checkIfRangeIterWillOverflow_default_first[1103387] low[2011534]))
          const-val default_arg_last[2011546]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
          const-val high[2011548]:int(64)[13] "temp"
          (2011550 'move' high[2011548](2011552 '.v' _iterator[2011497] F1_high[2115196]))
          (2011555 'move' default_arg_last[2011546](2011558 call chpl_checkIfRangeIterWillOverflow_default_last[1103415] high[2011548]))
          const-val _return_tmp_[2011560]:bool[10] "dead after last mention" "temp"
          const-val low[2011562]:int(64)[13] "temp"
          (2011564 'move' low[2011562](2011566 '.v' _iterator[2011497] F0_low[2115192]))
          const-val high[2011569]:int(64)[13] "temp"
          (2011571 'move' high[2011569](2011573 '.v' _iterator[2011497] F1_high[2115196]))
          (2011576 'move' _return_tmp_[2011560](2011579 call chpl_checkIfRangeIterWillOverflow[1096265] low[2011562] high[2011569] 1 default_arg_first[2011532] default_arg_last[2011546] 1))
          CForLoop[2011586]
          {
            const-val yret[2011615]:int(64)[13] "dead after last mention" "YVV" "temp"
            (2011617 'move' yret[2011615] i[2011523])
            const-val _yieldedIndex[2011620]:int(64)[13] "temp"
            (2011622 'move' _yieldedIndex[2011620] i[2011523])
            {
              const-val i[2011626]:int(64)[13] "const" "index var" "insert auto destroy"
              (2011628 'move' i[2011626] _yieldedIndex[2011620])
              const-val yret[2011631]:int(64)[13] "dead after last mention" "YVV" "temp"
              (2011633 'move' yret[2011631] _yieldedIndex[2011620])
              const-val _yieldedIndex[2011655]:int(64)[13] "temp"
              (2011729 'move' _yieldedIndex[2011655] _yieldedIndex[2011620])
              {
                const-val i[2011657]:int(64)[13] "const" "index var" "insert auto destroy"
                (2011659 'move' i[2011657] _yieldedIndex[2011655])
                {
                  const-val call_tmp[2011663]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  (2011665 'move' call_tmp[2011663](2011668 call -[962415] i[2011657]))
                  ref call_tmp[2011670]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                  (2011672 'move' call_tmp[2011670](2011675 call this[1441225] LeftActives[1438007] call_tmp[2011663]))
                  const-val dimIdx[2011678]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                  const-val coerce_tmp[2011680]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                  (2011682 'move' coerce_tmp[2011680](2011684 'deref' call_tmp[2011670]))
                  (2011686 '=' dimIdx[2011678] coerce_tmp[2011680])
                  (2011689 'noop')
                  ref call_tmp[2011690]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                  (2011692 'move' call_tmp[2011690](2011695 call this[1375310] DimSizes[1438059] i[2011657]))
                  ref call_tmp[2011698]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "reference to a const" "temp"
                  (2011700 'move' call_tmp[2011698](2011703 call this[1382848] LeftDims[1437961] dimIdx[2011678]))
                  const-val call_tmp[2011706]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[2011708]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (2011710 'move' coerce_tmp[2011708](2011712 'deref' call_tmp[2011698]))
                  (2011714 'move' call_tmp[2011706](2011717 call size[1035978] coerce_tmp[2011708]))
                  (2011720 call =[435443] call_tmp[2011690] call_tmp[2011706])
                  (2011724 call chpl__autoDestroy[1407763] coerce_tmp[2011708])
                }
                label _continueLabel[2011726]
              }
            }
            {
              const-val low[2011588]:int(64)[13] "temp"
              (2011590 'move' low[2011588](2011592 '.v' _iterator[2011497] F0_low[2115192]))
              (2011595 '=' i[2011523] low[2011588])
            }
            {
              const-val high[2011599]:int(64)[13] "temp"
              (2011601 'move' high[2011599](2011603 '.v' _iterator[2011497] F1_high[2115196]))
              (2011606 '<=' i[2011523] high[2011599])
            }
            {
              val call_tmp[2011610]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (2011612 '+=' i[2011523] 1)
            }
          }
          label _endchpl_direct_param_stride_range_iter[2011646]
        }
        (2011649 call _freeIterator[1103663] _iterator[2011497])
        label _endchpl_direct_range_iter[2011651]
      }
      label _breakLabel[1438186]
      (1926124 call _freeIterator[1230761] _iterator[1438091])
    }
    const-val call_tmp[1438204]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1438206 'move' call_tmp[1438204](1438209 call <=[437128] inferredRank[1438031] 1))
    (1438213 call assert[1442412] call_tmp[1438204] "complex DR transfer: computed rank greater than minimum rank!")
    val LBlk[1438218]:1*int(64)[1256714] "dead at end of block" "insert auto destroy"
    val call_tmp[1438220]:1*int(64)[1256714] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1912666]:1*int(64)[1256714] "temp"
    (1474879 call _defaultOf[1264554] ret_tmp[1912666])
    (1912669 'move' LBlk[1438218] ret_tmp[1912666])
    val RBlk[1438231]:1*int(64)[1256714] "dead at end of block" "insert auto destroy"
    val call_tmp[1438233]:1*int(64)[1256714] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1912672]:1*int(64)[1256714] "temp"
    (1474885 call _defaultOf[1264554] ret_tmp[1912672])
    (1912675 'move' RBlk[1438231] ret_tmp[1912672])
    {
      {
        val _indexOfInterest[1438245]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1438247]:_ic_chpl_direct_range_iter[1447793] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[1438256]:_ir_chpl_direct_range_iter[1447799] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1915147]:_ir_chpl_direct_range_iter[1447799] "temp"
        (1438261 call chpl_direct_range_iter[1446433] 1 inferredRank[1438031] ret_tmp[1915147])
        (1915150 'move' call_tmp[1438256] ret_tmp[1915147])
        (1438265 'move' _iterator[1438247](1438268 call _getIterator[1447808] call_tmp[1438256]))
        {
          val ret[2011746]:_ir_chpl_direct_range_iter[1447799] "dead after last mention" "RVV" "temp"
          val _indexOfInterest[2011748]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[2011750]:_ic_chpl_direct_param_stride_range_iter[1447539] "dead at end of block" "expr temp" "temp"
          const-val call_tmp[2011752]:_ir_chpl_direct_param_stride_range_iter[1447545] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val ret_tmp[2011754]:_ir_chpl_direct_param_stride_range_iter[1447545] "temp"
          const-val low[2012052]:int(64)[13] "temp"
          (2012057 'move' low[2012052](2012054 '.v' _iterator[1438247] F0_low[2144853]))
          const-val high[2012059]:int(64)[13] "temp"
          (2012064 'move' high[2012059](2012061 '.v' _iterator[1438247] F1_high[2144857]))
          (2011757 call chpl_direct_param_stride_range_iter[1446513] low[2012052] high[2012059] ret_tmp[2011754])
          (2011761 'move' call_tmp[2011752] ret_tmp[2011754])
          (2011764 'move' _iterator[2011750](2011767 call _getIterator[1447554] call_tmp[2011752]))
          {
            val ret[2078374]:_ir_chpl_direct_param_stride_range_iter[1447545] "dead after last mention" "RVV" "temp"
            val call_tmp[2078376]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (2078379 call chpl_range_check_stride[1446822])
            val i[2078380]:int(64)[13] "dead at end of block" "insert auto destroy"
            val call_tmp[2078382]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (2078384 'move' i[2078380] 0)
            val call_tmp[2078387]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            const-val _return_tmp_[2078389]:bool[10] "dead after last mention" "temp"
            const-val low[2078701]:int(64)[13] "temp"
            (2078706 'move' low[2078701](2078703 '.v' _iterator[2011750] F0_low[2145725]))
            const-val high[2078708]:int(64)[13] "temp"
            (2078713 'move' high[2078708](2078710 '.v' _iterator[2011750] F1_high[2145729]))
            const-val high[2078715]:int(64)[13] "temp"
            (2078720 'move' high[2078715](2078717 '.v' _iterator[2011750] F1_high[2145729]))
            const-val low[2078722]:int(64)[13] "temp"
            (2078727 'move' low[2078722](2078724 '.v' _iterator[2011750] F0_low[2145725]))
            (2078391 'move' _return_tmp_[2078389](2078394 call chpl_checkIfRangeIterWillOverflow[1096265] low[2078701] high[2078708] -1 high[2078715] low[2078722] 1))
            CForLoop[2078401]
            {
              const-val yret[2078416]:int(64)[13] "dead after last mention" "YVV" "temp"
              (2078418 'move' yret[2078416] i[2078380])
              const-val _yieldedIndex[2078432]:int(64)[13] "temp"
              (2078699 'move' _yieldedIndex[2078432] i[2078380])
              {
                const-val i[2078434]:int(64)[13] "const" "index var" "insert auto destroy"
                (2078436 'move' i[2078434] _yieldedIndex[2078432])
                const-val yret[2078439]:int(64)[13] "dead after last mention" "YVV" "temp"
                (2078441 'move' yret[2078439] _yieldedIndex[2078432])
                const-val _yieldedIndex[2078444]:int(64)[13] "temp"
                (2078446 'move' _yieldedIndex[2078444] _yieldedIndex[2078432])
                {
                  const-val idx[2078450]:int(64)[13] "const" "index var" "insert auto destroy"
                  (2078452 'move' idx[2078450] _yieldedIndex[2078444])
                  {
                    const-val call_tmp[2078456]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                    (2078458 'move' call_tmp[2078456](2078461 call -[962415] idx[2078450]))
                    ref call_tmp[2078463]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (2078465 'move' call_tmp[2078463](2078468 call this[1441225] LeftActives[1438007] call_tmp[2078456]))
                    const-val li[2078471]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[2078473]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (2078475 'move' coerce_tmp[2078473](2078477 'deref' call_tmp[2078463]))
                    (2078479 '=' li[2078471] coerce_tmp[2078473])
                    (2078482 'noop')
                    const-val call_tmp[2078483]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2078485 'move' call_tmp[2078483](2078488 call -[962415] idx[2078450]))
                    ref call_tmp[2078490]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                    (2078492 'move' call_tmp[2078490](2078495 call this[1441225] LBlk[1438218] call_tmp[2078483]))
                    ref call_tmp[2078498]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                    ref _this_tmp_[2078500]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
                    (2078502 'move' _this_tmp_[2078500](2078505 call blk[1410699] LHS[1437823]))
                    (2078507 'move' call_tmp[2078498](2078510 call this[1441225] _this_tmp_[2078500] li[2078471]))
                    ref call_tmp[2078513]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "reference to a const" "temp"
                    (2078515 'move' call_tmp[2078513](2078518 call this[1382848] LeftDims[1437961] li[2078471]))
                    ref call_tmp[2078521]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
                    (2078523 'move' call_tmp[2078521](2078526 call dom[1410591] LHS[1437823]))
                    const-val call_tmp[2078528]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    val coerce_tmp[2078530]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (2078532 'move' coerce_tmp[2078530](2078534 'deref' call_tmp[2078521]))
                    val coerce_tmp[2078536]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (2078538 'move' coerce_tmp[2078536] coerce_tmp[2078530])
                    const-val ret_tmp[2078541]:range(int(64),bounded,false)[1027003] "temp"
                    (2078544 call dsiDim[1258236] coerce_tmp[2078536] li[2078471] ret_tmp[2078541])
                    (2078548 'move' call_tmp[2078528] ret_tmp[2078541])
                    const-val call_tmp[2078551]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[2078553]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (2078555 'move' coerce_tmp[2078553](2078557 'deref' call_tmp[2078498]))
                    (2078559 'move' call_tmp[2078551](2078562 call *[1093496] coerce_tmp[2078553]))
                    (2078565 call =[435443] call_tmp[2078490] call_tmp[2078551])
                    (2078569 call chpl__autoDestroy[1407763] call_tmp[2078528])
                    const-val call_tmp[2078571]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                    (2078573 'move' call_tmp[2078571](2078576 call -[962415] idx[2078450]))
                    ref call_tmp[2078578]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (2078580 'move' call_tmp[2078578](2078583 call this[1441225] RightActives[1438019] call_tmp[2078571]))
                    const-val ri[2078586]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[2078588]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (2078590 'move' coerce_tmp[2078588](2078592 'deref' call_tmp[2078578]))
                    (2078594 '=' ri[2078586] coerce_tmp[2078588])
                    (2078597 'noop')
                    const-val call_tmp[2078598]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2078600 'move' call_tmp[2078598](2078603 call -[962415] idx[2078450]))
                    ref call_tmp[2078605]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                    (2078607 'move' call_tmp[2078605](2078610 call this[1441225] RBlk[1438231] call_tmp[2078598]))
                    ref call_tmp[2078613]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                    val coerce_tmp[2078615]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (2078617 'move' coerce_tmp[2078615] RHS[1437827])
                    ref _this_tmp_[2078620]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
                    (2078622 'move' _this_tmp_[2078620](2078625 call blk[1410699] coerce_tmp[2078615]))
                    (2078627 'move' call_tmp[2078613](2078630 call this[1441225] _this_tmp_[2078620] ri[2078586]))
                    ref call_tmp[2078633]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "reference to a const" "temp"
                    (2078635 'move' call_tmp[2078633](2078638 call this[1382848] RightDims[1437976] ri[2078586]))
                    ref call_tmp[2078641]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
                    val coerce_tmp[2078643]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (2078645 'move' coerce_tmp[2078643] RHS[1437827])
                    (2078648 'move' call_tmp[2078641](2078651 call dom[1410591] coerce_tmp[2078643]))
                    const-val call_tmp[2078653]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    val coerce_tmp[2078655]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (2078657 'move' coerce_tmp[2078655](2078659 'deref' call_tmp[2078641]))
                    val coerce_tmp[2078661]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (2078663 'move' coerce_tmp[2078661] coerce_tmp[2078655])
                    const-val ret_tmp[2078666]:range(int(64),bounded,false)[1027003] "temp"
                    (2078669 call dsiDim[1258236] coerce_tmp[2078661] ri[2078586] ret_tmp[2078666])
                    (2078673 'move' call_tmp[2078653] ret_tmp[2078666])
                    const-val call_tmp[2078676]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[2078678]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (2078680 'move' coerce_tmp[2078678](2078682 'deref' call_tmp[2078613]))
                    (2078684 'move' call_tmp[2078676](2078687 call *[1093496] coerce_tmp[2078678]))
                    (2078690 call =[435443] call_tmp[2078605] call_tmp[2078676])
                    (2078694 call chpl__autoDestroy[1407763] call_tmp[2078653])
                  }
                  label _continueLabel[2078696]
                }
              }
              {
                const-val high[2078729]:int(64)[13] "temp"
                (2078734 'move' high[2078729](2078731 '.v' _iterator[2011750] F1_high[2145729]))
                (2078403 '=' i[2078380] high[2078729])
              }
              {
                const-val low[2078736]:int(64)[13] "temp"
                (2078741 'move' low[2078736](2078738 '.v' _iterator[2011750] F0_low[2145725]))
                (2078407 '>=' i[2078380] low[2078736])
              }
              {
                val call_tmp[2078411]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (2078413 '+=' i[2078380] -1)
              }
            }
            label _endchpl_direct_param_stride_range_iter[2078428]
          }
          (2011793 call _freeIterator[1447727] _iterator[2011750])
          label _endchpl_direct_range_iter[2011795]
        }
        label _breakLabel[1438545]
        (1926136 call _freeIterator[1447981] _iterator[1438247])
      }
    }
    val stridelevels[1438569]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1438571 'move' stridelevels[1438569] 0)
    const-val call_tmp[1438575]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1438577 'move' call_tmp[1438575](1438580 call +[949855] inferredRank[1438031]))
    const-val call_tmp[1438583]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1907508]:range(int(64),bounded,false)[1027003] "temp"
    (1438588 call chpl_build_bounded_range[455253] 1 call_tmp[1438575] ret_tmp[1907508])
    (1907511 'move' call_tmp[1438583] ret_tmp[1907508])
    const-val call_tmp[1438591]:domain(1,int(64),false)[1252786] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1911262]:domain(1,int(64),false)[1252786] "temp"
    (1438596 call chpl__buildDomainExpr[1244857] call_tmp[1438583] ret_tmp[1911262])
    (1911265 'move' call_tmp[1438591] ret_tmp[1911262])
    val countDom[1438598]:domain(1,int(64),false)[1252786] "dead at end of block" "insert auto destroy"
    const-val unaliasTemp[1911268]:domain(1,int(64),false)[1252786] "temp"
    (1911273 'move' unaliasTemp[1911268](1911269 call chpl__unalias[1697031] ret_tmp[1911262]))
    (1438600 'move' countDom[1438598] unaliasTemp[1911268])
    const-val count[1438604]:[domain(1,int(64),false)] uint(64)[1456147] "dead at end of block" "insert auto destroy"
    ref call_tmp[1438606]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1438608 'move' call_tmp[1438606](1438611 call chpl__ensureDomainExpr[1254163] countDom[1438598]))
    const-val call_tmp[1438613]:_RuntimeTypeInfo[1456380] "dead at end of block" "expr temp" "maybe param" "temp"
    (1438615 'move' call_tmp[1438613](1438618 call chpl__buildArrayRuntimeType[1448568] call_tmp[1438606]))
    const-val _runtime_type_tmp_[1474893]:domain(1,int(64),false)[1252786] "dead at end of block" "temp"
    (1474898 'move' _runtime_type_tmp_[1474893](1878687 '.v' call_tmp[1438613] dom[1456381]))
    const-val ret_tmp[1915388]:[domain(1,int(64),false)] uint(64)[1456147] "temp"
    (1474891 call chpl__convertRuntimeTypeToValue[1474905] _runtime_type_tmp_[1474893] ret_tmp[1915388])
    (1915391 'move' count[1438604] ret_tmp[1915388])
    {
      ref _indexOfInterest[1438626]:_ref(uint(64))[936790] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[1438628]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_uint64_t_int64_t[1460980] "dead at end of block" "expr temp" "temp"
      (1438630 'move' _iterator[1438628](1438633 call _getIterator[1456396] count[1438604]))
      {
        val ret[2012067]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_uint64_t_int64_t[1460986] "dead after last mention" "RVV" "temp"
        ref _indexOfInterest[2012069]:_ref(uint(64))[936790] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[2012071]:_ic_these_DefaultRectangularArr_1_int64_t_F_uint64_t_int64_t[1460375] "dead at end of block" "expr temp" "temp"
        val call_tmp[2012073]:[domain(1,int(64),false)] uint(64)[1450261] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val this[2012176]:[domain(1,int(64),false)] uint(64)[1456147] "temp"
        (2012181 'move' this[2012176](2012178 '.v' _iterator[1438628] F0_this[2146201]))
        (2012075 'move' call_tmp[2012073](2012078 call _value[1456202] this[2012176]))
        const-val call_tmp[2012080]:_ir_these_DefaultRectangularArr_1_int64_t_F_uint64_t_int64_t[1460381] "dead at end of block" "maybe param" "temp"
        val coerce_tmp[2012082]:[domain(1,int(64),false)] uint(64)[1450261] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (2012084 'move' coerce_tmp[2012082] call_tmp[2012073])
        const-val default_arg_tasksPerLocale[2012087]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (2012089 'move' default_arg_tasksPerLocale[2012087](2012092 call these_default_tasksPerLocale[1456666] call_tmp[2012073]))
        const-val default_arg_ignoreRunning[2012094]:bool[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (2012096 'move' default_arg_ignoreRunning[2012094](2012099 call these_default_ignoreRunning[1456697] coerce_tmp[2012082]))
        const-val default_arg_minIndicesPerTask[2012101]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (2012103 'move' default_arg_minIndicesPerTask[2012101](2012106 call these_default_minIndicesPerTask[1456728] coerce_tmp[2012082]))
        const-val ret_tmp[2012108]:_ir_these_DefaultRectangularArr_1_int64_t_F_uint64_t_int64_t[1460381] "temp"
        (2012111 call these[1456550] coerce_tmp[2012082] default_arg_tasksPerLocale[2012087] default_arg_ignoreRunning[2012094] default_arg_minIndicesPerTask[2012101] ret_tmp[2012108])
        (2012117 'move' call_tmp[2012080] ret_tmp[2012108])
        (2012120 'move' _iterator[2012071](2012123 call _getIterator[1460390] call_tmp[2012080]))
        {
          val ret[2078744]:_ir_these_DefaultRectangularArr_1_int64_t_F_uint64_t_int64_t[1460381] "dead after last mention" "RVV" "temp"
          ref _indexOfInterest[2078746]:_ref(uint(64))[936790] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[2078748]:_ic_chpl__serialViewIter[1460125] "dead at end of block" "expr temp" "temp"
          ref call_tmp[2078750]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
          const-val this[2079120]:[domain(1,int(64),false)] uint(64)[1450261] "temp"
          (2079125 'move' this[2079120](2079122 '.v' _iterator[2012071] F0_this[2148309]))
          (2078752 'move' call_tmp[2078750](2078755 call dom[1451646] this[2079120]))
          const-val call_tmp[2078757]:_ir_chpl__serialViewIter[1460131] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[2078759]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2078761 'move' coerce_tmp[2078759](2078763 'deref' call_tmp[2078750]))
          const-val ret_tmp[2078765]:_ir_chpl__serialViewIter[1460131] "temp"
          const-val this[2079127]:[domain(1,int(64),false)] uint(64)[1450261] "temp"
          (2079132 'move' this[2079127](2079129 '.v' _iterator[2012071] F0_this[2148309]))
          (2078768 call chpl__serialViewIter[1456762] this[2079127] coerce_tmp[2078759] ret_tmp[2078765])
          (2078772 'move' call_tmp[2078757] ret_tmp[2078765])
          (2078775 'move' _iterator[2078748](2078778 call _getIterator[1460140] call_tmp[2078757]))
          {
            val ret[2078781]:_ir_chpl__serialViewIter[1460131] "dead after last mention" "RVV" "temp"
            val info[2078783]:[domain(1,int(64),false)] uint(64)[1450261] "dead at end of block" "insert auto destroy"
            val tmp[2078785]:[domain(1,int(64),false)] uint(64)[1450261] "dead at end of block" "expr temp" "insert auto destroy" "maybe copy elided" "maybe param" "temp"
            val tmp[2078787]:[domain(1,int(64),false)] uint(64)[1450261] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val arr[2078789]:[domain(1,int(64),false)] uint(64)[1450261] "temp"
            (2078791 'move' arr[2078789](2078793 '.v' _iterator[2078748] F0_arr[2150214]))
            (2078796 'move' tmp[2078787] arr[2078789])
            const-val arr[2078799]:[domain(1,int(64),false)] uint(64)[1450261] "temp"
            (2078801 'move' arr[2078799](2078803 '.v' _iterator[2078748] F0_arr[2150214]))
            (2078806 'move' tmp[2078785] arr[2078799])
            const-val arr[2078809]:[domain(1,int(64),false)] uint(64)[1450261] "temp"
            (2078811 'move' arr[2078809](2078813 '.v' _iterator[2078748] F0_arr[2150214]))
            (2078816 '=' info[2078783] arr[2078809])
            (2078819 'noop')
            const-val call_tmp[2078820]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            val coerce_tmp[2078822]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            const-val viewDom[2078824]:domain(1,int(64),false)[1251123] "temp"
            (2078826 'move' viewDom[2078824](2078828 '.v' _iterator[2078748] F1_viewDom[2150218]))
            (2078831 'move' coerce_tmp[2078822] viewDom[2078824])
            const-val viewDom[2078834]:domain(1,int(64),false)[1251123] "temp"
            (2078836 'move' viewDom[2078834](2078838 '.v' _iterator[2078748] F1_viewDom[2150218]))
            (2078841 'move' call_tmp[2078820](2078844 call dsiLow[1300625] viewDom[2078834]))
            const-val call_tmp[2078846]:int(64)[13] "dead at end of block" "maybe param" "temp"
            const-val arr[2078848]:[domain(1,int(64),false)] uint(64)[1450261] "temp"
            (2078850 'move' arr[2078848](2078852 '.v' _iterator[2078748] F0_arr[2150214]))
            (2078855 'move' call_tmp[2078846](2078858 call getDataIndex[1458731] arr[2078848] call_tmp[2078820]))
            const-val first[2078861]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            (2078863 'move' first[2078861] call_tmp[2078846])
            const-val call_tmp[2078866]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            val coerce_tmp[2078868]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            const-val viewDom[2078870]:domain(1,int(64),false)[1251123] "temp"
            (2078872 'move' viewDom[2078870](2078874 '.v' _iterator[2078748] F1_viewDom[2150218]))
            (2078877 'move' coerce_tmp[2078868] viewDom[2078870])
            (2078880 'move' call_tmp[2078866](2078883 call dsiLow[1300625] coerce_tmp[2078868]))
            const-val call_tmp[2078885]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            (2078887 'move' call_tmp[2078885](2078890 call chpl__idxToInt[1027105] call_tmp[2078866]))
            const-val call_tmp[2078892]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            (2078894 'move' call_tmp[2078892](2078897 call +[949855] call_tmp[2078885]))
            const-val call_tmp[2078899]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            val coerce_tmp[2078901]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            const-val viewDom[2078903]:domain(1,int(64),false)[1251123] "temp"
            (2078905 'move' viewDom[2078903](2078907 '.v' _iterator[2078748] F1_viewDom[2150218]))
            (2078910 'move' coerce_tmp[2078901] viewDom[2078903])
            (2078913 'move' call_tmp[2078899](2078916 call chpl_intToIdx[1302054] coerce_tmp[2078901] call_tmp[2078892]))
            const-val call_tmp[2078919]:int(64)[13] "dead at end of block" "maybe param" "temp"
            (2078921 'move' call_tmp[2078919](2078924 call getDataIndex[1458731] info[2078783] call_tmp[2078899]))
            const-val second[2078927]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            (2078929 'move' second[2078927] call_tmp[2078919])
            const-val call_tmp[2078932]:int(64)[13] "dead at end of block" "maybe param" "temp"
            (2078934 'move' call_tmp[2078932](2078937 call -[440532] call_tmp[2078919] call_tmp[2078846]))
            const-val step[2078940]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            (2078942 'move' step[2078940] call_tmp[2078932])
            const-val call_tmp[2078945]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            val coerce_tmp[2078947]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            const-val viewDom[2078949]:domain(1,int(64),false)[1251123] "temp"
            (2078951 'move' viewDom[2078949](2078953 '.v' _iterator[2078748] F1_viewDom[2150218]))
            (2078956 'move' coerce_tmp[2078947] viewDom[2078949])
            (2078959 'move' call_tmp[2078945](2078962 call dsiNumIndices[1263823] coerce_tmp[2078947]))
            const-val call_tmp[2078964]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            (2078966 'move' call_tmp[2078964](2078969 call -[962415] call_tmp[2078945]))
            const-val call_tmp[2078971]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            (2078973 'move' call_tmp[2078971](2078976 call *[441944] call_tmp[2078964] call_tmp[2078932]))
            const-val call_tmp[2078979]:int(64)[13] "dead at end of block" "maybe param" "temp"
            (2078981 'move' call_tmp[2078979](2078984 call +[439752] call_tmp[2078846] call_tmp[2078971]))
            const-val last[2078987]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            (2078989 'move' last[2078987] call_tmp[2078979])
            val _indexOfInterest[2078992]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[2078994]:_ic_chpl_direct_pos_stride_range_iter[1303186] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[2078996]:_ir_chpl_direct_pos_stride_range_iter[1303192] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[2078998]:_ir_chpl_direct_pos_stride_range_iter[1303192] "temp"
            (2079001 call chpl_direct_pos_stride_range_iter[1302141] call_tmp[2078846] call_tmp[2078979] call_tmp[2078932] ret_tmp[2078998])
            (2079006 'move' call_tmp[2078996] ret_tmp[2078998])
            (2079009 'move' _iterator[2078994](2079012 call _getIterator[1303201] call_tmp[2078996]))
            {
              val ret[2093975]:_ir_chpl_direct_pos_stride_range_iter[1303192] "dead after last mention" "RVV" "temp"
              val call_tmp[2093977]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val stride[2094136]:int(64)[13] "temp"
              (2094141 'move' stride[2094136](2094138 '.v' _iterator[2078994] F2_stride[2126228]))
              (2093980 call chpl_range_check_stride[1103022] stride[2094136])
              val call_tmp[2093982]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val default_arg_first[2093984]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val low[2094143]:int(64)[13] "temp"
              (2094148 'move' low[2094143](2094145 '.v' _iterator[2078994] F0_low[2126220]))
              (2093986 'move' default_arg_first[2093984](2093989 call chpl_checkIfRangeIterWillOverflow_default_first[1103387] low[2094143]))
              const-val default_arg_last[2093991]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val high[2094150]:int(64)[13] "temp"
              (2094155 'move' high[2094150](2094152 '.v' _iterator[2078994] F1_high[2126224]))
              (2093993 'move' default_arg_last[2093991](2093996 call chpl_checkIfRangeIterWillOverflow_default_last[1103415] high[2094150]))
              const-val _return_tmp_[2093998]:bool[10] "dead after last mention" "temp"
              const-val low[2094157]:int(64)[13] "temp"
              (2094162 'move' low[2094157](2094159 '.v' _iterator[2078994] F0_low[2126220]))
              const-val high[2094164]:int(64)[13] "temp"
              (2094169 'move' high[2094164](2094166 '.v' _iterator[2078994] F1_high[2126224]))
              const-val stride[2094171]:int(64)[13] "temp"
              (2094176 'move' stride[2094171](2094173 '.v' _iterator[2078994] F2_stride[2126228]))
              (2094000 'move' _return_tmp_[2093998](2094003 call chpl_checkIfRangeIterWillOverflow[1096265] low[2094157] high[2094164] stride[2094171] default_arg_first[2093984] default_arg_last[2093991] 1))
              val i[2094010]:int(64)[13] "dead at end of block" "insert auto destroy"
              val call_tmp[2094012]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (2094014 'move' i[2094010] 0)
              CForLoop[2094017]
              {
                const-val yret[2094037]:int(64)[13] "dead after last mention" "YVV" "temp"
                (2094039 'move' yret[2094037] i[2094010])
                const-val _yieldedIndex[2094053]:int(64)[13] "temp"
                (2094134 'move' _yieldedIndex[2094053] i[2094010])
                {
                  const-val i[2094055]:int(64)[13] "const" "index var" "insert auto destroy"
                  (2094057 'move' i[2094055] _yieldedIndex[2094053])
                  ref yret[2094060]:_ref(uint(64))[936790] "dead after last mention" "YVV" "temp"
                  ref call_tmp[2094062]:_ref(uint(64))[936790] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[2094064]:_ref(_ddata(uint(64)))[1449431] "dead after last mention" "temp"
                  (2094066 'move' _this_tmp_[2094064](2094069 call theData[1459939] info[2078783]))
                  val coerce_tmp[2094071]:_ddata(uint(64))[1449422] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (2094073 'move' coerce_tmp[2094071](2094075 'deref' _this_tmp_[2094064]))
                  (2094077 'move' call_tmp[2094062](2094080 call this[1460086] coerce_tmp[2094071] _yieldedIndex[2094053]))
                  ref _yieldedIndex[2094083]:_ref(uint(64))[936790] "temp"
                  (2094085 'move' _yieldedIndex[2094083] call_tmp[2094062])
                  {
                    ref elem[2094089]:_ref(uint(64))[936790] "index var" "insert auto destroy"
                    (2094091 'move' elem[2094089] _yieldedIndex[2094083])
                    ref yret[2094094]:_ref(uint(64))[936790] "dead after last mention" "YVV" "temp"
                    ref _yieldedIndex[2094096]:_ref(uint(64))[936790] "temp"
                    (2094098 'move' _yieldedIndex[2094096] elem[2094089])
                    {
                      ref i[2094102]:_ref(uint(64))[936790] "index var" "insert auto destroy"
                      (2094104 'move' i[2094102] _yieldedIndex[2094096])
                      ref yret[2094107]:_ref(uint(64))[936790] "dead after last mention" "YVV" "temp"
                      ref _yieldedIndex[2094109]:_ref(uint(64))[936790] "temp"
                      (2094111 'move' _yieldedIndex[2094109] i[2094102])
                      {
                        ref c[2094115]:_ref(uint(64))[936790] "index var" "insert auto destroy"
                        (2094117 'move' c[2094115] _yieldedIndex[2094109])
                        const-val coerce_tmp[2094120]:uint(64)[115] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (2094122 'move' coerce_tmp[2094120](2094124 'cast' uint(64)[115] 1))
                        (2094128 call =[435527] c[2094115] coerce_tmp[2094120])
                        label _continueLabel[2094131]
                      }
                    }
                  }
                }
                {
                  const-val low[2094178]:int(64)[13] "temp"
                  (2094183 'move' low[2094178](2094180 '.v' _iterator[2078994] F0_low[2126220]))
                  (2094019 '=' i[2094010] low[2094178])
                }
                {
                  const-val high[2094185]:int(64)[13] "temp"
                  (2094190 'move' high[2094185](2094187 '.v' _iterator[2078994] F1_high[2126224]))
                  (2094023 '<=' i[2094010] high[2094185])
                }
                {
                  val call_tmp[2094027]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[2094029]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val stride[2094192]:int(64)[13] "temp"
                  (2094197 'move' stride[2094192](2094194 '.v' _iterator[2078994] F2_stride[2126228]))
                  (2094031 'move' call_tmp[2094029] stride[2094192])
                  const-val stride[2094199]:int(64)[13] "temp"
                  (2094204 'move' stride[2094199](2094201 '.v' _iterator[2078994] F2_stride[2126228]))
                  (2094034 '+=' i[2094010] stride[2094199])
                }
              }
              label _endchpl_direct_pos_stride_range_iter[2094049]
            }
            (2079075 call _freeIterator[1303374] _iterator[2078994])
            label _endchpl__serialViewIter[2079077]
          }
          (2079080 call _freeIterator[1460309] _iterator[2078748])
          label _endthese[2079082]
        }
        (2012149 call _freeIterator[1460914] _iterator[2012071])
        label _endthese[2012151]
      }
      label _breakLabel[1438665]
      (1926141 call _freeIterator[1461665] _iterator[1438628])
    }
    const-val call_tmp[1438667]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1907514]:range(int(64),bounded,false)[1027003] "temp"
    (1438672 call chpl_build_bounded_range[455253] 1 inferredRank[1438031] ret_tmp[1907514])
    (1907517 'move' call_tmp[1438667] ret_tmp[1907514])
    const-val call_tmp[1438675]:domain(1,int(64),false)[1252786] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1911276]:domain(1,int(64),false)[1252786] "temp"
    (1438680 call chpl__buildDomainExpr[1244857] call_tmp[1438667] ret_tmp[1911276])
    (1911279 'move' call_tmp[1438675] ret_tmp[1911276])
    val strideDom[1438682]:domain(1,int(64),false)[1252786] "dead at end of block" "insert auto destroy"
    const-val unaliasTemp[1911282]:domain(1,int(64),false)[1252786] "temp"
    (1911287 'move' unaliasTemp[1911282](1911283 call chpl__unalias[1697031] ret_tmp[1911276]))
    (1438684 'move' strideDom[1438682] unaliasTemp[1911282])
    const-val dstStride[1438688]:[domain(1,int(64),false)] uint(64)[1456147] "dead at end of block" "insert auto destroy"
    ref call_tmp[1438690]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1438692 'move' call_tmp[1438690](1438695 call chpl__ensureDomainExpr[1254163] strideDom[1438682]))
    const-val call_tmp[1438697]:_RuntimeTypeInfo[1456380] "dead at end of block" "expr temp" "maybe param" "temp"
    (1438699 'move' call_tmp[1438697](1438702 call chpl__buildArrayRuntimeType[1448568] call_tmp[1438690]))
    const-val _runtime_type_tmp_[1475322]:domain(1,int(64),false)[1252786] "dead at end of block" "temp"
    (1475327 'move' _runtime_type_tmp_[1475322](1878689 '.v' call_tmp[1438697] dom[1456381]))
    const-val ret_tmp[1915394]:[domain(1,int(64),false)] uint(64)[1456147] "temp"
    (1475320 call chpl__convertRuntimeTypeToValue[1474905] _runtime_type_tmp_[1475322] ret_tmp[1915394])
    (1915397 'move' dstStride[1438688] ret_tmp[1915394])
    const-val srcStride[1438708]:[domain(1,int(64),false)] uint(64)[1456147] "dead at end of block" "insert auto destroy"
    const-val call_tmp[1438710]:_RuntimeTypeInfo[1456380] "dead at end of block" "expr temp" "maybe param" "temp"
    (1438712 'move' call_tmp[1438710](1461746 call chpl__convertValueToRuntimeType[1461748] dstStride[1438688]))
    const-val _runtime_type_tmp_[1475337]:domain(1,int(64),false)[1252786] "dead at end of block" "temp"
    (1475342 'move' _runtime_type_tmp_[1475337](1878691 '.v' call_tmp[1438710] dom[1456381]))
    const-val ret_tmp[1915400]:[domain(1,int(64),false)] uint(64)[1456147] "temp"
    (1475335 call chpl__convertRuntimeTypeToValue[1474905] _runtime_type_tmp_[1475337] ret_tmp[1915400])
    (1915403 'move' srcStride[1438708] ret_tmp[1915400])
    const-val tmp[1438720]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1438722]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1438724 'move' call_tmp[1438722](1438727 call -[962415] inferredRank[1438031]))
    ref call_tmp[1438730]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (1438732 'move' call_tmp[1438730](1438735 call this[1441225] LBlk[1438218] call_tmp[1438722]))
    const-val coerce_tmp[1461905]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1461909 'move' coerce_tmp[1461905](1461907 'deref' call_tmp[1438730]))
    (1438737 'move' tmp[1438720](1438740 call >[437788] coerce_tmp[1461905] 1))
    val tmp[1438756]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1438758]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1438760]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1438762 'move' call_tmp[1438760] tmp[1438720])
    (1438767 'move' tmp[1438758] call_tmp[1438760])
    if tmp[1438758]
    {
      (1438774 'move' tmp[1438756] 1)
    }
    {
      const-val tmp[1438780]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1438782]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1438784 'move' call_tmp[1438782](1438787 call -[962415] inferredRank[1438031]))
      ref call_tmp[1438790]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
      (1438792 'move' call_tmp[1438790](1438795 call this[1441225] RBlk[1438231] call_tmp[1438782]))
      const-val call_tmp[1438797]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1461919]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1461923 'move' coerce_tmp[1461919](1461921 'deref' call_tmp[1438790]))
      (1438799 'move' call_tmp[1438797](1438802 call >[437788] coerce_tmp[1461919] 1))
      (1438805 'move' tmp[1438780] call_tmp[1438797])
      (1438810 'move' tmp[1438756] tmp[1438780])
    }
    const-val call_tmp[1438816]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1438818 'move' call_tmp[1438816] tmp[1438756])
    if call_tmp[1438816]
    {
      (1438826 call +=[451431] stridelevels[1438569] 1)
      ref call_tmp[1438831]:_ref(uint(64))[936790] "dead after last mention" "maybe param" "temp"
      (1438833 'move' call_tmp[1438831](1438836 call this[1462246] count[1438604] stridelevels[1438569]))
      const-val coerce_tmp[1465330]:uint(64)[115] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1465336 'move' coerce_tmp[1465330](1465332 'cast' uint(64)[115] 1))
      (1438839 call =[435527] call_tmp[1438831] coerce_tmp[1465330])
      ref call_tmp[1438845]:_ref(uint(64))[936790] "dead after last mention" "maybe param" "temp"
      (1438847 'move' call_tmp[1438845](1438850 call this[1462246] dstStride[1438688] stridelevels[1438569]))
      const-val call_tmp[1438852]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1438854 'move' call_tmp[1438852](1438857 call -[962415] inferredRank[1438031]))
      ref call_tmp[1438860]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
      (1438862 'move' call_tmp[1438860](1438865 call this[1441225] LBlk[1438218] call_tmp[1438852]))
      const-val call_tmp[1438867]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1465359]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1465363 'move' coerce_tmp[1465359](1465361 'deref' call_tmp[1438860]))
      (1438869 'move' call_tmp[1438867](1438875 call safeCast[947330] coerce_tmp[1465359]))
      (1438878 call =[435527] call_tmp[1438845] call_tmp[1438867])
      ref call_tmp[1438886]:_ref(uint(64))[936790] "dead after last mention" "maybe param" "temp"
      (1438888 'move' call_tmp[1438886](1438891 call this[1462246] srcStride[1438708] stridelevels[1438569]))
      const-val call_tmp[1438893]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1438895 'move' call_tmp[1438893](1438898 call -[962415] inferredRank[1438031]))
      ref call_tmp[1438901]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
      (1438903 'move' call_tmp[1438901](1438906 call this[1441225] RBlk[1438231] call_tmp[1438893]))
      const-val call_tmp[1438908]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1465387]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1465391 'move' coerce_tmp[1465387](1465389 'deref' call_tmp[1438901]))
      (1438910 'move' call_tmp[1438908](1438916 call safeCast[947330] coerce_tmp[1465387]))
      (1438919 call =[435527] call_tmp[1438886] call_tmp[1438908])
    }
    {
      val _indexOfInterest[1438929]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[1438931]:_ic_chpl_direct_range_iter[1447793] "dead at end of block" "expr temp" "temp"
      const-val call_tmp[1438940]:_ir_chpl_direct_range_iter[1447799] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val ret_tmp[1915153]:_ir_chpl_direct_range_iter[1447799] "temp"
      (1438945 call chpl_direct_range_iter[1446433] 2 inferredRank[1438031] ret_tmp[1915153])
      (1915156 'move' call_tmp[1438940] ret_tmp[1915153])
      (1438949 'move' _iterator[1438931](1438952 call _getIterator[1447808] call_tmp[1438940]))
      {
        val ret[2012184]:_ir_chpl_direct_range_iter[1447799] "dead after last mention" "RVV" "temp"
        val _indexOfInterest[2012186]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[2012188]:_ic_chpl_direct_param_stride_range_iter[1447539] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[2012190]:_ir_chpl_direct_param_stride_range_iter[1447545] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[2012192]:_ir_chpl_direct_param_stride_range_iter[1447545] "temp"
        const-val low[2012449]:int(64)[13] "temp"
        (2012454 'move' low[2012449](2012451 '.v' _iterator[1438931] F0_low[2144853]))
        const-val high[2012456]:int(64)[13] "temp"
        (2012461 'move' high[2012456](2012458 '.v' _iterator[1438931] F1_high[2144857]))
        (2012195 call chpl_direct_param_stride_range_iter[1446513] low[2012449] high[2012456] ret_tmp[2012192])
        (2012199 'move' call_tmp[2012190] ret_tmp[2012192])
        (2012202 'move' _iterator[2012188](2012205 call _getIterator[1447554] call_tmp[2012190]))
        {
          val ret[2079135]:_ir_chpl_direct_param_stride_range_iter[1447545] "dead after last mention" "RVV" "temp"
          val call_tmp[2079137]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          (2079140 call chpl_range_check_stride[1446822])
          val i[2079141]:int(64)[13] "dead at end of block" "insert auto destroy"
          val call_tmp[2079143]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          (2079145 'move' i[2079141] 0)
          val call_tmp[2079148]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          const-val _return_tmp_[2079150]:bool[10] "dead after last mention" "temp"
          const-val low[2079421]:int(64)[13] "temp"
          (2079426 'move' low[2079421](2079423 '.v' _iterator[2012188] F0_low[2145725]))
          const-val high[2079428]:int(64)[13] "temp"
          (2079433 'move' high[2079428](2079430 '.v' _iterator[2012188] F1_high[2145729]))
          const-val high[2079435]:int(64)[13] "temp"
          (2079440 'move' high[2079435](2079437 '.v' _iterator[2012188] F1_high[2145729]))
          const-val low[2079442]:int(64)[13] "temp"
          (2079447 'move' low[2079442](2079444 '.v' _iterator[2012188] F0_low[2145725]))
          (2079152 'move' _return_tmp_[2079150](2079155 call chpl_checkIfRangeIterWillOverflow[1096265] low[2079421] high[2079428] -1 high[2079435] low[2079442] 1))
          CForLoop[2079162]
          {
            const-val yret[2079177]:int(64)[13] "dead after last mention" "YVV" "temp"
            (2079179 'move' yret[2079177] i[2079141])
            const-val _yieldedIndex[2079193]:int(64)[13] "temp"
            (2079419 'move' _yieldedIndex[2079193] i[2079141])
            {
              const-val i[2079195]:int(64)[13] "const" "index var" "insert auto destroy"
              (2079197 'move' i[2079195] _yieldedIndex[2079193])
              const-val yret[2079200]:int(64)[13] "dead after last mention" "YVV" "temp"
              (2079202 'move' yret[2079200] _yieldedIndex[2079193])
              const-val _yieldedIndex[2079205]:int(64)[13] "temp"
              (2079207 'move' _yieldedIndex[2079205] _yieldedIndex[2079193])
              {
                const-val i[2079211]:int(64)[13] "const" "index var" "insert auto destroy"
                (2079213 'move' i[2079211] _yieldedIndex[2079205])
                {
                  const-val call_tmp[2079217]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2079219 'move' call_tmp[2079217](2079222 call +[949855] stridelevels[1438569]))
                  ref call_tmp[2079224]:_ref(uint(64))[936790] "dead after last mention" "maybe param" "temp"
                  (2079226 'move' call_tmp[2079224](2079229 call this[1462246] count[1438604] call_tmp[2079217]))
                  ref call_tmp[2079232]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                  val tmp[2079234]:int(64)[13] "temp"
                  (2079236 'move' tmp[2079234](2079239 call this[1375426] DimSizes[1438059] i[2079211]))
                  (2079242 'move' call_tmp[2079232](2079244 'addr of' tmp[2079234]))
                  const-val call_tmp[2079246]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[2079248]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (2079250 'move' coerce_tmp[2079248](2079252 'deref' call_tmp[2079232]))
                  (2079254 'move' call_tmp[2079246](2079257 call safeCast[947330] coerce_tmp[2079248]))
                  (2079260 call *=[452019] call_tmp[2079224] call_tmp[2079246])
                  const-val tmp[2079263]:bool[10] "dead after last mention" "maybe param" "temp"
                  (2079265 'move' tmp[2079263](2079268 call canReuseStride[1465442] LBlk[1438218] i[2079211] stridelevels[1438569] count[1438604] dstStride[1438688]))
                  const-val bothReuse[2079274]:bool[10] "dead at end of block" "const" "insert auto destroy"
                  val tmp[2079276]:bool[10] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
                  const-val tmp[2079278]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[2079280]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2079282 'move' call_tmp[2079280] tmp[2079263])
                  (2079285 'move' tmp[2079278] call_tmp[2079280])
                  if tmp[2079278]
                  {
                    const-val tmp[2079290]:bool[10] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
                    const-val call_tmp[2079292]:bool[10] "dead at end of block" "expr temp" "maybe param" "temp"
                    (2079294 'move' call_tmp[2079292](2079297 call canReuseStride[1465442] RBlk[1438231] i[2079211] stridelevels[1438569] count[1438604] srcStride[1438708]))
                    (2079303 'move' tmp[2079290] call_tmp[2079292])
                    (2079306 'move' tmp[2079276] tmp[2079290])
                  }
                  {
                    (2079310 'move' tmp[2079276] 0)
                  }
                  (2079314 'move' bothReuse[2079274] tmp[2079276])
                  const-val call_tmp[2079317]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2079319 'move' call_tmp[2079317](2079322 call ![7494] bothReuse[2079274]))
                  const-val call_tmp[2079324]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2079326 'move' call_tmp[2079324] call_tmp[2079317])
                  if call_tmp[2079324]
                  {
                    (2079332 call +=[451431] stridelevels[1438569] 1)
                    ref call_tmp[2079335]:_ref(uint(64))[936790] "dead after last mention" "maybe param" "temp"
                    (2079337 'move' call_tmp[2079335](2079340 call this[1462246] dstStride[1438688] stridelevels[1438569]))
                    const-val call_tmp[2079343]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2079345 'move' call_tmp[2079343](2079348 call -[1125627] i[2079211]))
                    ref call_tmp[2079350]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                    (2079352 'move' call_tmp[2079350](2079355 call this[1441225] LBlk[1438218] call_tmp[2079343]))
                    const-val call_tmp[2079358]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[2079360]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (2079362 'move' coerce_tmp[2079360](2079364 'deref' call_tmp[2079350]))
                    (2079366 'move' call_tmp[2079358](2079369 call safeCast[947330] coerce_tmp[2079360]))
                    (2079372 call =[435527] call_tmp[2079335] call_tmp[2079358])
                    ref call_tmp[2079375]:_ref(uint(64))[936790] "dead after last mention" "maybe param" "temp"
                    (2079377 'move' call_tmp[2079375](2079380 call this[1462246] srcStride[1438708] stridelevels[1438569]))
                    const-val call_tmp[2079383]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2079385 'move' call_tmp[2079383](2079388 call -[1125627] i[2079211]))
                    ref call_tmp[2079390]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                    (2079392 'move' call_tmp[2079390](2079395 call this[1441225] RBlk[1438231] call_tmp[2079383]))
                    const-val call_tmp[2079398]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[2079400]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (2079402 'move' coerce_tmp[2079400](2079404 'deref' call_tmp[2079390]))
                    (2079406 'move' call_tmp[2079398](2079409 call safeCast[947330] coerce_tmp[2079400]))
                    (2079412 call =[435527] call_tmp[2079375] call_tmp[2079398])
                  }
                }
                label _continueLabel[2079416]
              }
            }
            {
              const-val high[2079449]:int(64)[13] "temp"
              (2079454 'move' high[2079449](2079451 '.v' _iterator[2012188] F1_high[2145729]))
              (2079164 '=' i[2079141] high[2079449])
            }
            {
              const-val low[2079456]:int(64)[13] "temp"
              (2079461 'move' low[2079456](2079458 '.v' _iterator[2012188] F0_low[2145725]))
              (2079168 '>=' i[2079141] low[2079456])
            }
            {
              val call_tmp[2079172]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (2079174 '+=' i[2079141] -1)
            }
          }
          label _endchpl_direct_param_stride_range_iter[2079189]
        }
        (2012231 call _freeIterator[1447727] _iterator[2012188])
        label _endchpl_direct_range_iter[2012233]
      }
      label _breakLabel[1439208]
      (1926146 call _freeIterator[1447981] _iterator[1438931])
    }
    const-val call_tmp[1439210]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1439212 'move' call_tmp[1439210](1439215 call +[949855] stridelevels[1438569]))
    ref call_tmp[1439218]:_ref(uint(64))[936790] "dead after last mention" "maybe param" "temp"
    (1439220 'move' call_tmp[1439218](1439223 call this[1462246] count[1438604] call_tmp[1439210]))
    ref call_tmp[1439225]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    val tmp[1883254]:int(64)[13] "temp"
    (1439227 'move' tmp[1883254](1465788 call this[1375426] DimSizes[1438059] 1))
    (1883258 'move' call_tmp[1439225](1883256 'addr of' tmp[1883254]))
    const-val call_tmp[1439232]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1465801]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1465805 'move' coerce_tmp[1465801](1465803 'deref' call_tmp[1439225]))
    (1439234 'move' call_tmp[1439232](1439240 call safeCast[947330] coerce_tmp[1465801]))
    (1439243 call *=[452019] call_tmp[1439218] call_tmp[1439232])
    const-val call_tmp[1439250]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1439252 'move' call_tmp[1439250](1439255 call <=[437128] stridelevels[1438569] inferredRank[1438031]))
    (1439259 call assert[1442412] call_tmp[1439250] "BulkTransferStride: stride levels greater than rank.")
    const-val call_tmp[1439265]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1439267 'move' call_tmp[1439265](1439270 call ==[435744] stridelevels[1438569] 0))
    const-val call_tmp[1439273]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1439275 'move' call_tmp[1439273] call_tmp[1439265])
    if call_tmp[1439273]
    {
      ref call_tmp[1439282]:_ref(uint(64))[936790] "dead after last mention" "maybe param" "temp"
      val tmp[1883260]:uint(64)[115] "temp"
      (1439284 'move' tmp[1883260](1465815 call this[1462362] count[1438604] 1))
      (1883264 'move' call_tmp[1439282](1883262 'addr of' tmp[1883260]))
      const-val call_tmp[1439289]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1439291 'move' call_tmp[1439289](1439294 call size[1435624] LViewDom[1437825]))
      const-val call_tmp[1439297]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1465829]:uint(64)[115] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1465833 'move' coerce_tmp[1465829](1465831 'deref' call_tmp[1439282]))
      (1439299 'move' call_tmp[1439297](1439302 call ==[18446] coerce_tmp[1465829] call_tmp[1439289]))
      ref call_tmp[1439305]:_ref(uint(64))[936790] "dead after last mention" "maybe param" "temp"
      val tmp[1883266]:uint(64)[115] "temp"
      (1439307 'move' tmp[1883266](1465839 call this[1462362] count[1438604] 1))
      (1883270 'move' call_tmp[1439305](1883268 'addr of' tmp[1883266]))
      const-val call_tmp[1439312]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1439314 'move' call_tmp[1439312](1439317 call size[1435624] LViewDom[1437825]))
      const-val coerce_tmp[1466024]:uint(64)[115] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1466028 'move' coerce_tmp[1466024](1466026 'deref' call_tmp[1439305]))
      (1439321 call assert[1465943] call_tmp[1439297] "BulkTransferStride: bulk-count incorrect for stride level of 0: " coerce_tmp[1466024] " != " call_tmp[1439312])
    }
    const-val call_tmp[1439331]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1439333 'move' call_tmp[1439331](1439336 call +[949855] stridelevels[1438569]))
    const-val call_tmp[1439339]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1907520]:range(int(64),bounded,false)[1027003] "temp"
    (1439344 call chpl_build_bounded_range[455253] 1 call_tmp[1439331] ret_tmp[1907520])
    (1907523 'move' call_tmp[1439339] ret_tmp[1907520])
    const-val call_tmp[1439347]:domain(1,int(64),false)[1252786] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1911290]:domain(1,int(64),false)[1252786] "temp"
    (1439352 call chpl__buildDomainExpr[1244857] call_tmp[1439339] ret_tmp[1911290])
    (1911293 'move' call_tmp[1439347] ret_tmp[1911290])
    (1439355 call =[1287907] countDom[1438598] call_tmp[1439347])
    (1926151 call chpl__autoDestroy[1697012] call_tmp[1439347])
    (1926148 call chpl__autoDestroy[1407763] call_tmp[1439339])
    const-val call_tmp[1439361]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1907526]:range(int(64),bounded,false)[1027003] "temp"
    (1439366 call chpl_build_bounded_range[455253] 1 stridelevels[1438569] ret_tmp[1907526])
    (1907529 'move' call_tmp[1439361] ret_tmp[1907526])
    const-val call_tmp[1439369]:domain(1,int(64),false)[1252786] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1911296]:domain(1,int(64),false)[1252786] "temp"
    (1439374 call chpl__buildDomainExpr[1244857] call_tmp[1439361] ret_tmp[1911296])
    (1911299 'move' call_tmp[1439369] ret_tmp[1911296])
    (1439377 call =[1287907] strideDom[1438682] call_tmp[1439369])
    (1926157 call chpl__autoDestroy[1697012] call_tmp[1439369])
    (1926154 call chpl__autoDestroy[1407763] call_tmp[1439361])
    const-val call_tmp[1439603]:1*int(64)[1256714] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1915366]:1*int(64)[1256714] "temp"
    (1439608 call getFirstIdx[1472563] LeftDims[1437961] ret_tmp[1915366])
    (1915369 'move' call_tmp[1439603] ret_tmp[1915366])
    const-val LFirst[1439610]:1*int(64)[1256714] "dead at end of block" "const" "insert auto destroy"
    (1439612 'move' LFirst[1439610] call_tmp[1439603])
    const-val call_tmp[1439616]:1*int(64)[1256714] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1915372]:1*int(64)[1256714] "temp"
    (1439621 call getFirstIdx[1472563] RightDims[1437976] ret_tmp[1915372])
    (1915375 'move' call_tmp[1439616] ret_tmp[1915372])
    const-val RFirst[1439623]:1*int(64)[1256714] "dead at end of block" "const" "insert auto destroy"
    (1439625 'move' RFirst[1439623] call_tmp[1439616])
    val call_tmp[1439640]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1439647]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (1439649 'move' call_tmp[1439647](1439652 call _cast[964574] stridelevels[1438569]))
    (1439656 call complexTransferComm[1472963] LHS[1437823] RHS[1437827] call_tmp[1439647] dstStride[1438688] srcStride[1438708] count[1438604] LFirst[1439610] RFirst[1439623])
    (1926160 call chpl__autoDestroy[1697253] RFirst[1439623])
    (1926163 call chpl__autoDestroy[1697253] LFirst[1439610])
    (1926166 call chpl__autoDestroy[1819812] srcStride[1438708])
    (1926169 call chpl__autoDestroy[1819812] dstStride[1438688])
    (1926172 call chpl__autoDestroy[1697012] strideDom[1438682])
    (1926175 call chpl__autoDestroy[1407763] call_tmp[1438667])
    (1926178 call chpl__autoDestroy[1819812] count[1438604])
    (1926181 call chpl__autoDestroy[1697012] countDom[1438598])
    (1926184 call chpl__autoDestroy[1407763] call_tmp[1438583])
    (1926187 call chpl__autoDestroy[1697253] RBlk[1438231])
    (1926190 call chpl__autoDestroy[1697253] LBlk[1438218])
    (1926193 call chpl__autoDestroy[1788705] DimSizes[1438059])
    (1926196 call chpl__autoDestroy[1697012] call_tmp[1438069])
    (1926199 call chpl__autoDestroy[1407763] call_tmp[1438061])
    (1926202 call chpl__autoDestroy[1697253] RightActives[1438019])
    (1926205 call chpl__autoDestroy[1697253] LeftActives[1438007])
    (1926208 call chpl__autoDestroy[1790709] tmp[1437990])
    (1926211 call chpl__autoDestroy[1695146] RightDims[1437976])
    (1926214 call chpl__autoDestroy[1695146] LeftDims[1437961])
    (1439672 return _void[55])
  }
  function complexTransferCore[1527937](const in arg LHS[1527939]:[domain(1,int(64),false)] real(64)[1358944], const  ref arg LViewDom[1527941]:domain(1,int(64),false)[1252786], const in arg RHS[1527943]:[domain(1,int(64),false)] real(64)[1358944], const  ref arg RViewDom[1527945]:domain(1,int(64),false)[1252786]) : void[4] "instantiated generic" "invisible fn" "private" "resolved"
  {
    val idxType[1527987]:int(64)[13] "dead at end of block" "insert auto destroy" "type variable"
    val coerce_tmp[1529797]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1529803 'move' coerce_tmp[1529797](1529799 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256408] LHS[1527939]))
    val intIdxType[1527999]:int(64)[13] "dead at end of block" "insert auto destroy" "type variable"
    const-val call_tmp[1528068]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1914083]:1*range(int(64),bounded,false)[1244885] "temp"
    (1528076 call dims[1353359] LViewDom[1527941] ret_tmp[1914083])
    (1914086 'move' call_tmp[1528068] ret_tmp[1914083])
    const LeftDims[1528077]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "const" "insert auto destroy"
    (1528079 'move' LeftDims[1528077] call_tmp[1528068])
    const-val call_tmp[1528083]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1914089]:1*range(int(64),bounded,false)[1244885] "temp"
    (1528091 call dims[1353359] RViewDom[1527945] ret_tmp[1914089])
    (1914092 'move' call_tmp[1528083] ret_tmp[1914089])
    const RightDims[1528092]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "const" "insert auto destroy"
    (1528094 'move' RightDims[1528092] call_tmp[1528083])
    const-val call_tmp[1528098]:(1*int(64),1*int(64),int(64))[1441721] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1915049]:(1*int(64),1*int(64),int(64))[1441721] "temp"
    (1528103 call bulkCommComputeActiveDims[1440251] LeftDims[1528077] RightDims[1528092] ret_tmp[1915049])
    (1915052 'move' call_tmp[1528098] ret_tmp[1915049])
    const-val tmp[1528106]:(1*int(64),1*int(64),int(64))[1441721] "dead at end of block" "const" "insert auto destroy" "temp"
    (1528108 'move' tmp[1528106] call_tmp[1528098])
    1
    ref call_tmp[1528116]:_ref(1*int(64))[1256784] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1528118 'move' call_tmp[1528116](1529855 '.' tmp[1528106] x0[1441715]))
    const LeftActives[1528123]:1*int(64)[1256714] "dead at end of block" "const" "insert auto destroy"
    (1528125 'move' LeftActives[1528123](1529858 call chpl__initCopy[1441632] call_tmp[1528116]))
    ref call_tmp[1528128]:_ref(1*int(64))[1256784] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1528130 'move' call_tmp[1528128](1529863 '.' tmp[1528106] x1[1441717]))
    const RightActives[1528135]:1*int(64)[1256714] "dead at end of block" "const" "insert auto destroy"
    (1528137 'move' RightActives[1528135](1529866 call chpl__initCopy[1441632] call_tmp[1528128]))
    ref call_tmp[1528140]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1528142 'move' call_tmp[1528140](1529871 '.' tmp[1528106] x2[1441719]))
    const-val inferredRank[1528147]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1529876]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1529880 'move' coerce_tmp[1529876](1529878 'deref' call_tmp[1528140]))
    (1926904 '=' inferredRank[1528147] coerce_tmp[1529876])
    (1528149 'noop')
    const-val DimSizes[1528175]:[domain(1,int(64),false)] int(64)[1374504] "dead at end of block" "insert auto destroy"
    const-val call_tmp[1528177]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1907544]:range(int(64),bounded,false)[1027003] "temp"
    (1528182 call chpl_build_bounded_range[455253] 1 inferredRank[1528147] ret_tmp[1907544])
    (1907547 'move' call_tmp[1528177] ret_tmp[1907544])
    const-val call_tmp[1528185]:domain(1,int(64),false)[1252786] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1913652]:domain(1,int(64),false)[1252786] "temp"
    (1528190 call chpl__ensureDomainExpr[1316567] call_tmp[1528177] ret_tmp[1913652])
    (1913655 'move' call_tmp[1528185] ret_tmp[1913652])
    const-val call_tmp[1528192]:_RuntimeTypeInfo[1374737] "dead at end of block" "expr temp" "maybe param" "temp"
    (1528194 'move' call_tmp[1528192](1528197 call chpl__buildArrayRuntimeType[1367174] call_tmp[1528185]))
    const-val _runtime_type_tmp_[1532746]:domain(1,int(64),false)[1252786] "dead at end of block" "temp"
    (1532751 'move' _runtime_type_tmp_[1532746](1878780 '.v' call_tmp[1528192] dom[1374738]))
    const-val ret_tmp[1914487]:[domain(1,int(64),false)] int(64)[1374504] "temp"
    (1532744 call chpl__convertRuntimeTypeToValue[1380051] _runtime_type_tmp_[1532746] ret_tmp[1914487])
    (1914490 'move' DimSizes[1528175] ret_tmp[1914487])
    {
      val _indexOfInterest[1528205]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[1528207]:_ic_chpl_direct_range_iter[1230573] "dead at end of block" "expr temp" "temp"
      const-val call_tmp[1528209]:_ir_chpl_direct_range_iter[1230579] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val ret_tmp[1911094]:_ir_chpl_direct_range_iter[1230579] "temp"
      (1528214 call chpl_direct_range_iter[1230419] 1 inferredRank[1528147] ret_tmp[1911094])
      (1911097 'move' call_tmp[1528209] ret_tmp[1911094])
      (1528218 'move' _iterator[1528207](1528221 call _getIterator[1230588] call_tmp[1528209]))
      {
        val ret[2015958]:_ir_chpl_direct_range_iter[1230579] "dead after last mention" "RVV" "temp"
        val _indexOfInterest[2015960]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[2015962]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[2015964]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[2015966]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
        const-val low[2016196]:int(64)[13] "temp"
        (2016201 'move' low[2016196](2016198 '.v' _iterator[1528207] F0_low[2116764]))
        const-val high[2016203]:int(64)[13] "temp"
        (2016208 'move' high[2016203](2016205 '.v' _iterator[1528207] F1_high[2116768]))
        (2015969 call chpl_direct_param_stride_range_iter[1102713] low[2016196] high[2016203] ret_tmp[2015966])
        (2015973 'move' call_tmp[2015964] ret_tmp[2015966])
        (2015976 'move' _iterator[2015962](2015979 call _getIterator[1103490] call_tmp[2015964]))
        {
          val ret[2015982]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead after last mention" "RVV" "temp"
          val call_tmp[2015984]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          (2015987 call chpl_range_check_stride[1103033])
          val i[2015988]:int(64)[13] "dead at end of block" "insert auto destroy"
          val call_tmp[2015990]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          (2015992 'move' i[2015988] 0)
          val call_tmp[2015995]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          const-val default_arg_first[2015997]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
          const-val low[2015999]:int(64)[13] "temp"
          (2016001 'move' low[2015999](2016003 '.v' _iterator[2015962] F0_low[2115192]))
          (2016006 'move' default_arg_first[2015997](2016009 call chpl_checkIfRangeIterWillOverflow_default_first[1103387] low[2015999]))
          const-val default_arg_last[2016011]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
          const-val high[2016013]:int(64)[13] "temp"
          (2016015 'move' high[2016013](2016017 '.v' _iterator[2015962] F1_high[2115196]))
          (2016020 'move' default_arg_last[2016011](2016023 call chpl_checkIfRangeIterWillOverflow_default_last[1103415] high[2016013]))
          const-val _return_tmp_[2016025]:bool[10] "dead after last mention" "temp"
          const-val low[2016027]:int(64)[13] "temp"
          (2016029 'move' low[2016027](2016031 '.v' _iterator[2015962] F0_low[2115192]))
          const-val high[2016034]:int(64)[13] "temp"
          (2016036 'move' high[2016034](2016038 '.v' _iterator[2015962] F1_high[2115196]))
          (2016041 'move' _return_tmp_[2016025](2016044 call chpl_checkIfRangeIterWillOverflow[1096265] low[2016027] high[2016034] 1 default_arg_first[2015997] default_arg_last[2016011] 1))
          CForLoop[2016051]
          {
            const-val yret[2016080]:int(64)[13] "dead after last mention" "YVV" "temp"
            (2016082 'move' yret[2016080] i[2015988])
            const-val _yieldedIndex[2016085]:int(64)[13] "temp"
            (2016087 'move' _yieldedIndex[2016085] i[2015988])
            {
              const-val i[2016091]:int(64)[13] "const" "index var" "insert auto destroy"
              (2016093 'move' i[2016091] _yieldedIndex[2016085])
              const-val yret[2016096]:int(64)[13] "dead after last mention" "YVV" "temp"
              (2016098 'move' yret[2016096] _yieldedIndex[2016085])
              const-val _yieldedIndex[2016120]:int(64)[13] "temp"
              (2016194 'move' _yieldedIndex[2016120] _yieldedIndex[2016085])
              {
                const-val i[2016122]:int(64)[13] "const" "index var" "insert auto destroy"
                (2016124 'move' i[2016122] _yieldedIndex[2016120])
                {
                  const-val call_tmp[2016128]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  (2016130 'move' call_tmp[2016128](2016133 call -[962415] i[2016122]))
                  ref call_tmp[2016135]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                  (2016137 'move' call_tmp[2016135](2016140 call this[1441225] LeftActives[1528123] call_tmp[2016128]))
                  const-val dimIdx[2016143]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                  const-val coerce_tmp[2016145]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                  (2016147 'move' coerce_tmp[2016145](2016149 'deref' call_tmp[2016135]))
                  (2016151 '=' dimIdx[2016143] coerce_tmp[2016145])
                  (2016154 'noop')
                  ref call_tmp[2016155]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                  (2016157 'move' call_tmp[2016155](2016160 call this[1375310] DimSizes[1528175] i[2016122]))
                  ref call_tmp[2016163]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "reference to a const" "temp"
                  (2016165 'move' call_tmp[2016163](2016168 call this[1382848] LeftDims[1528077] dimIdx[2016143]))
                  const-val call_tmp[2016171]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[2016173]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (2016175 'move' coerce_tmp[2016173](2016177 'deref' call_tmp[2016163]))
                  (2016179 'move' call_tmp[2016171](2016182 call size[1035978] coerce_tmp[2016173]))
                  (2016185 call =[435443] call_tmp[2016155] call_tmp[2016171])
                  (2016189 call chpl__autoDestroy[1407763] coerce_tmp[2016173])
                }
                label _continueLabel[2016191]
              }
            }
            {
              const-val low[2016053]:int(64)[13] "temp"
              (2016055 'move' low[2016053](2016057 '.v' _iterator[2015962] F0_low[2115192]))
              (2016060 '=' i[2015988] low[2016053])
            }
            {
              const-val high[2016064]:int(64)[13] "temp"
              (2016066 'move' high[2016064](2016068 '.v' _iterator[2015962] F1_high[2115196]))
              (2016071 '<=' i[2015988] high[2016064])
            }
            {
              val call_tmp[2016075]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (2016077 '+=' i[2015988] 1)
            }
          }
          label _endchpl_direct_param_stride_range_iter[2016111]
        }
        (2016114 call _freeIterator[1103663] _iterator[2015962])
        label _endchpl_direct_range_iter[2016116]
      }
      label _breakLabel[1528302]
      (1926923 call _freeIterator[1230761] _iterator[1528207])
    }
    const-val call_tmp[1528320]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1528322 'move' call_tmp[1528320](1528325 call <=[437128] inferredRank[1528147] 1))
    (1528329 call assert[1442412] call_tmp[1528320] "complex DR transfer: computed rank greater than minimum rank!")
    val LBlk[1528334]:1*int(64)[1256714] "dead at end of block" "insert auto destroy"
    val call_tmp[1528336]:1*int(64)[1256714] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1912720]:1*int(64)[1256714] "temp"
    (1532759 call _defaultOf[1264554] ret_tmp[1912720])
    (1912723 'move' LBlk[1528334] ret_tmp[1912720])
    val RBlk[1528347]:1*int(64)[1256714] "dead at end of block" "insert auto destroy"
    val call_tmp[1528349]:1*int(64)[1256714] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1912726]:1*int(64)[1256714] "temp"
    (1532765 call _defaultOf[1264554] ret_tmp[1912726])
    (1912729 'move' RBlk[1528347] ret_tmp[1912726])
    {
      {
        val _indexOfInterest[1528361]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1528363]:_ic_chpl_direct_range_iter[1447793] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[1528372]:_ir_chpl_direct_range_iter[1447799] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1915159]:_ir_chpl_direct_range_iter[1447799] "temp"
        (1528377 call chpl_direct_range_iter[1446433] 1 inferredRank[1528147] ret_tmp[1915159])
        (1915162 'move' call_tmp[1528372] ret_tmp[1915159])
        (1528381 'move' _iterator[1528363](1528384 call _getIterator[1447808] call_tmp[1528372]))
        {
          val ret[2016211]:_ir_chpl_direct_range_iter[1447799] "dead after last mention" "RVV" "temp"
          val _indexOfInterest[2016213]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[2016215]:_ic_chpl_direct_param_stride_range_iter[1447539] "dead at end of block" "expr temp" "temp"
          const-val call_tmp[2016217]:_ir_chpl_direct_param_stride_range_iter[1447545] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val ret_tmp[2016219]:_ir_chpl_direct_param_stride_range_iter[1447545] "temp"
          const-val low[2016612]:int(64)[13] "temp"
          (2016617 'move' low[2016612](2016614 '.v' _iterator[1528363] F0_low[2144853]))
          const-val high[2016619]:int(64)[13] "temp"
          (2016624 'move' high[2016619](2016621 '.v' _iterator[1528363] F1_high[2144857]))
          (2016222 call chpl_direct_param_stride_range_iter[1446513] low[2016612] high[2016619] ret_tmp[2016219])
          (2016226 'move' call_tmp[2016217] ret_tmp[2016219])
          (2016229 'move' _iterator[2016215](2016232 call _getIterator[1447554] call_tmp[2016217]))
          {
            val ret[2016235]:_ir_chpl_direct_param_stride_range_iter[1447545] "dead after last mention" "RVV" "temp"
            val call_tmp[2016237]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (2016240 call chpl_range_check_stride[1446822])
            val i[2016241]:int(64)[13] "dead at end of block" "insert auto destroy"
            val call_tmp[2016243]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (2016245 'move' i[2016241] 0)
            val call_tmp[2016248]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            const-val _return_tmp_[2016250]:bool[10] "dead after last mention" "temp"
            const-val low[2016252]:int(64)[13] "temp"
            (2016254 'move' low[2016252](2016256 '.v' _iterator[2016215] F0_low[2145725]))
            const-val high[2016259]:int(64)[13] "temp"
            (2016261 'move' high[2016259](2016263 '.v' _iterator[2016215] F1_high[2145729]))
            const-val high[2016266]:int(64)[13] "temp"
            (2016268 'move' high[2016266](2016270 '.v' _iterator[2016215] F1_high[2145729]))
            const-val low[2016273]:int(64)[13] "temp"
            (2016275 'move' low[2016273](2016277 '.v' _iterator[2016215] F0_low[2145725]))
            (2016280 'move' _return_tmp_[2016250](2016283 call chpl_checkIfRangeIterWillOverflow[1096265] low[2016252] high[2016259] -1 high[2016266] low[2016273] 1))
            CForLoop[2016290]
            {
              const-val yret[2016319]:int(64)[13] "dead after last mention" "YVV" "temp"
              (2016321 'move' yret[2016319] i[2016241])
              const-val _yieldedIndex[2016324]:int(64)[13] "temp"
              (2016326 'move' _yieldedIndex[2016324] i[2016241])
              {
                const-val i[2016330]:int(64)[13] "const" "index var" "insert auto destroy"
                (2016332 'move' i[2016330] _yieldedIndex[2016324])
                const-val yret[2016335]:int(64)[13] "dead after last mention" "YVV" "temp"
                (2016337 'move' yret[2016335] _yieldedIndex[2016324])
                const-val _yieldedIndex[2016359]:int(64)[13] "temp"
                (2016610 'move' _yieldedIndex[2016359] _yieldedIndex[2016324])
                {
                  const-val idx[2016361]:int(64)[13] "const" "index var" "insert auto destroy"
                  (2016363 'move' idx[2016361] _yieldedIndex[2016359])
                  {
                    const-val call_tmp[2016367]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                    (2016369 'move' call_tmp[2016367](2016372 call -[962415] idx[2016361]))
                    ref call_tmp[2016374]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (2016376 'move' call_tmp[2016374](2016379 call this[1441225] LeftActives[1528123] call_tmp[2016367]))
                    const-val li[2016382]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[2016384]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (2016386 'move' coerce_tmp[2016384](2016388 'deref' call_tmp[2016374]))
                    (2016390 '=' li[2016382] coerce_tmp[2016384])
                    (2016393 'noop')
                    const-val call_tmp[2016394]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2016396 'move' call_tmp[2016394](2016399 call -[962415] idx[2016361]))
                    ref call_tmp[2016401]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                    (2016403 'move' call_tmp[2016401](2016406 call this[1441225] LBlk[1528334] call_tmp[2016394]))
                    ref call_tmp[2016409]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                    ref _this_tmp_[2016411]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
                    (2016413 'move' _this_tmp_[2016411](2016416 call blk[1360437] LHS[1527939]))
                    (2016418 'move' call_tmp[2016409](2016421 call this[1441225] _this_tmp_[2016411] li[2016382]))
                    ref call_tmp[2016424]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "reference to a const" "temp"
                    (2016426 'move' call_tmp[2016424](2016429 call this[1382848] LeftDims[1528077] li[2016382]))
                    ref call_tmp[2016432]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
                    (2016434 'move' call_tmp[2016432](2016437 call dom[1360329] LHS[1527939]))
                    const-val call_tmp[2016439]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    val coerce_tmp[2016441]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (2016443 'move' coerce_tmp[2016441](2016445 'deref' call_tmp[2016432]))
                    val coerce_tmp[2016447]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (2016449 'move' coerce_tmp[2016447] coerce_tmp[2016441])
                    const-val ret_tmp[2016452]:range(int(64),bounded,false)[1027003] "temp"
                    (2016455 call dsiDim[1258236] coerce_tmp[2016447] li[2016382] ret_tmp[2016452])
                    (2016459 'move' call_tmp[2016439] ret_tmp[2016452])
                    const-val call_tmp[2016462]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[2016464]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (2016466 'move' coerce_tmp[2016464](2016468 'deref' call_tmp[2016409]))
                    (2016470 'move' call_tmp[2016462](2016473 call *[1093496] coerce_tmp[2016464]))
                    (2016476 call =[435443] call_tmp[2016401] call_tmp[2016462])
                    (2016480 call chpl__autoDestroy[1407763] call_tmp[2016439])
                    const-val call_tmp[2016482]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                    (2016484 'move' call_tmp[2016482](2016487 call -[962415] idx[2016361]))
                    ref call_tmp[2016489]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (2016491 'move' call_tmp[2016489](2016494 call this[1441225] RightActives[1528135] call_tmp[2016482]))
                    const-val ri[2016497]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[2016499]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (2016501 'move' coerce_tmp[2016499](2016503 'deref' call_tmp[2016489]))
                    (2016505 '=' ri[2016497] coerce_tmp[2016499])
                    (2016508 'noop')
                    const-val call_tmp[2016509]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2016511 'move' call_tmp[2016509](2016514 call -[962415] idx[2016361]))
                    ref call_tmp[2016516]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                    (2016518 'move' call_tmp[2016516](2016521 call this[1441225] RBlk[1528347] call_tmp[2016509]))
                    ref call_tmp[2016524]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                    val coerce_tmp[2016526]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (2016528 'move' coerce_tmp[2016526] RHS[1527943])
                    ref _this_tmp_[2016531]:_ref(1*int(64))[1256784] "dead after last mention" "temp"
                    (2016533 'move' _this_tmp_[2016531](2016536 call blk[1360437] coerce_tmp[2016526]))
                    (2016538 'move' call_tmp[2016524](2016541 call this[1441225] _this_tmp_[2016531] ri[2016497]))
                    ref call_tmp[2016544]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "reference to a const" "temp"
                    (2016546 'move' call_tmp[2016544](2016549 call this[1382848] RightDims[1528092] ri[2016497]))
                    ref call_tmp[2016552]:_ref(domain(1,int(64),false))[1251138] "dead after last mention" "maybe param" "temp"
                    val coerce_tmp[2016554]:[domain(1,int(64),false)] real(64)[1358944] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (2016556 'move' coerce_tmp[2016554] RHS[1527943])
                    (2016559 'move' call_tmp[2016552](2016562 call dom[1360329] coerce_tmp[2016554]))
                    const-val call_tmp[2016564]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    val coerce_tmp[2016566]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (2016568 'move' coerce_tmp[2016566](2016570 'deref' call_tmp[2016552]))
                    val coerce_tmp[2016572]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (2016574 'move' coerce_tmp[2016572] coerce_tmp[2016566])
                    const-val ret_tmp[2016577]:range(int(64),bounded,false)[1027003] "temp"
                    (2016580 call dsiDim[1258236] coerce_tmp[2016572] ri[2016497] ret_tmp[2016577])
                    (2016584 'move' call_tmp[2016564] ret_tmp[2016577])
                    const-val call_tmp[2016587]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[2016589]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (2016591 'move' coerce_tmp[2016589](2016593 'deref' call_tmp[2016524]))
                    (2016595 'move' call_tmp[2016587](2016598 call *[1093496] coerce_tmp[2016589]))
                    (2016601 call =[435443] call_tmp[2016516] call_tmp[2016587])
                    (2016605 call chpl__autoDestroy[1407763] call_tmp[2016564])
                  }
                  label _continueLabel[2016607]
                }
              }
              {
                const-val high[2016292]:int(64)[13] "temp"
                (2016294 'move' high[2016292](2016296 '.v' _iterator[2016215] F1_high[2145729]))
                (2016299 '=' i[2016241] high[2016292])
              }
              {
                const-val low[2016303]:int(64)[13] "temp"
                (2016305 'move' low[2016303](2016307 '.v' _iterator[2016215] F0_low[2145725]))
                (2016310 '>=' i[2016241] low[2016303])
              }
              {
                val call_tmp[2016314]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (2016316 '+=' i[2016241] -1)
              }
            }
            label _endchpl_direct_param_stride_range_iter[2016350]
          }
          (2016353 call _freeIterator[1447727] _iterator[2016215])
          label _endchpl_direct_range_iter[2016355]
        }
        label _breakLabel[1528661]
        (1926935 call _freeIterator[1447981] _iterator[1528363])
      }
    }
    val stridelevels[1528685]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1528687 'move' stridelevels[1528685] 0)
    const-val call_tmp[1528691]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1528693 'move' call_tmp[1528691](1528696 call +[949855] inferredRank[1528147]))
    const-val call_tmp[1528699]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1907550]:range(int(64),bounded,false)[1027003] "temp"
    (1528704 call chpl_build_bounded_range[455253] 1 call_tmp[1528691] ret_tmp[1907550])
    (1907553 'move' call_tmp[1528699] ret_tmp[1907550])
    const-val call_tmp[1528707]:domain(1,int(64),false)[1252786] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1911302]:domain(1,int(64),false)[1252786] "temp"
    (1528712 call chpl__buildDomainExpr[1244857] call_tmp[1528699] ret_tmp[1911302])
    (1911305 'move' call_tmp[1528707] ret_tmp[1911302])
    val countDom[1528714]:domain(1,int(64),false)[1252786] "dead at end of block" "insert auto destroy"
    const-val unaliasTemp[1911308]:domain(1,int(64),false)[1252786] "temp"
    (1911313 'move' unaliasTemp[1911308](1911309 call chpl__unalias[1697031] ret_tmp[1911302]))
    (1528716 'move' countDom[1528714] unaliasTemp[1911308])
    const-val count[1528720]:[domain(1,int(64),false)] uint(64)[1456147] "dead at end of block" "insert auto destroy"
    ref call_tmp[1528722]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1528724 'move' call_tmp[1528722](1528727 call chpl__ensureDomainExpr[1254163] countDom[1528714]))
    const-val call_tmp[1528729]:_RuntimeTypeInfo[1456380] "dead at end of block" "expr temp" "maybe param" "temp"
    (1528731 'move' call_tmp[1528729](1528734 call chpl__buildArrayRuntimeType[1448568] call_tmp[1528722]))
    const-val _runtime_type_tmp_[1532773]:domain(1,int(64),false)[1252786] "dead at end of block" "temp"
    (1532778 'move' _runtime_type_tmp_[1532773](1878782 '.v' call_tmp[1528729] dom[1456381]))
    const-val ret_tmp[1915406]:[domain(1,int(64),false)] uint(64)[1456147] "temp"
    (1532771 call chpl__convertRuntimeTypeToValue[1474905] _runtime_type_tmp_[1532773] ret_tmp[1915406])
    (1915409 'move' count[1528720] ret_tmp[1915406])
    {
      ref _indexOfInterest[1528742]:_ref(uint(64))[936790] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[1528744]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_uint64_t_int64_t[1460980] "dead at end of block" "expr temp" "temp"
      (1528746 'move' _iterator[1528744](1528749 call _getIterator[1456396] count[1528720]))
      {
        val ret[2016627]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_uint64_t_int64_t[1460986] "dead after last mention" "RVV" "temp"
        ref _indexOfInterest[2016629]:_ref(uint(64))[936790] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[2016631]:_ic_these_DefaultRectangularArr_1_int64_t_F_uint64_t_int64_t[1460375] "dead at end of block" "expr temp" "temp"
        val call_tmp[2016633]:[domain(1,int(64),false)] uint(64)[1450261] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val this[2016808]:[domain(1,int(64),false)] uint(64)[1456147] "temp"
        (2016813 'move' this[2016808](2016810 '.v' _iterator[1528744] F0_this[2146201]))
        (2016635 'move' call_tmp[2016633](2016638 call _value[1456202] this[2016808]))
        const-val call_tmp[2016640]:_ir_these_DefaultRectangularArr_1_int64_t_F_uint64_t_int64_t[1460381] "dead at end of block" "maybe param" "temp"
        val coerce_tmp[2016642]:[domain(1,int(64),false)] uint(64)[1450261] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (2016644 'move' coerce_tmp[2016642] call_tmp[2016633])
        const-val default_arg_tasksPerLocale[2016647]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (2016649 'move' default_arg_tasksPerLocale[2016647](2016652 call these_default_tasksPerLocale[1456666] call_tmp[2016633]))
        const-val default_arg_ignoreRunning[2016654]:bool[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (2016656 'move' default_arg_ignoreRunning[2016654](2016659 call these_default_ignoreRunning[1456697] coerce_tmp[2016642]))
        const-val default_arg_minIndicesPerTask[2016661]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (2016663 'move' default_arg_minIndicesPerTask[2016661](2016666 call these_default_minIndicesPerTask[1456728] coerce_tmp[2016642]))
        const-val ret_tmp[2016668]:_ir_these_DefaultRectangularArr_1_int64_t_F_uint64_t_int64_t[1460381] "temp"
        (2016671 call these[1456550] coerce_tmp[2016642] default_arg_tasksPerLocale[2016647] default_arg_ignoreRunning[2016654] default_arg_minIndicesPerTask[2016661] ret_tmp[2016668])
        (2016677 'move' call_tmp[2016640] ret_tmp[2016668])
        (2016680 'move' _iterator[2016631](2016683 call _getIterator[1460390] call_tmp[2016640]))
        {
          val ret[2016686]:_ir_these_DefaultRectangularArr_1_int64_t_F_uint64_t_int64_t[1460381] "dead after last mention" "RVV" "temp"
          ref _indexOfInterest[2016688]:_ref(uint(64))[936790] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[2016690]:_ic_chpl__serialViewIter[1460125] "dead at end of block" "expr temp" "temp"
          ref call_tmp[2016692]:_ref(domain(1,int(64),false))[1251138] "dead at end of block" "maybe param" "temp"
          const-val this[2016694]:[domain(1,int(64),false)] uint(64)[1450261] "temp"
          (2016696 'move' this[2016694](2016698 '.v' _iterator[2016631] F0_this[2148309]))
          (2016701 'move' call_tmp[2016692](2016704 call dom[1451646] this[2016694]))
          const-val call_tmp[2016706]:_ir_chpl__serialViewIter[1460131] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[2016708]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2016710 'move' coerce_tmp[2016708](2016712 'deref' call_tmp[2016692]))
          const-val ret_tmp[2016714]:_ir_chpl__serialViewIter[1460131] "temp"
          const-val this[2016716]:[domain(1,int(64),false)] uint(64)[1450261] "temp"
          (2016718 'move' this[2016716](2016720 '.v' _iterator[2016631] F0_this[2148309]))
          (2016724 call chpl__serialViewIter[1456762] this[2016716] coerce_tmp[2016708] ret_tmp[2016714])
          (2016728 'move' call_tmp[2016706] ret_tmp[2016714])
          (2016731 'move' _iterator[2016690](2016734 call _getIterator[1460140] call_tmp[2016706]))
          {
            val ret[2082711]:_ir_chpl__serialViewIter[1460131] "dead after last mention" "RVV" "temp"
            val info[2082713]:[domain(1,int(64),false)] uint(64)[1450261] "dead at end of block" "insert auto destroy"
            val tmp[2082715]:[domain(1,int(64),false)] uint(64)[1450261] "dead at end of block" "expr temp" "insert auto destroy" "maybe copy elided" "maybe param" "temp"
            val tmp[2082717]:[domain(1,int(64),false)] uint(64)[1450261] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val arr[2083122]:[domain(1,int(64),false)] uint(64)[1450261] "temp"
            (2083127 'move' arr[2083122](2083124 '.v' _iterator[2016690] F0_arr[2150214]))
            (2082719 'move' tmp[2082717] arr[2083122])
            const-val arr[2083129]:[domain(1,int(64),false)] uint(64)[1450261] "temp"
            (2083134 'move' arr[2083129](2083131 '.v' _iterator[2016690] F0_arr[2150214]))
            (2082722 'move' tmp[2082715] arr[2083129])
            const-val arr[2083136]:[domain(1,int(64),false)] uint(64)[1450261] "temp"
            (2083141 'move' arr[2083136](2083138 '.v' _iterator[2016690] F0_arr[2150214]))
            (2082725 '=' info[2082713] arr[2083136])
            (2082728 'noop')
            const-val call_tmp[2082729]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            val coerce_tmp[2082731]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            const-val viewDom[2083143]:domain(1,int(64),false)[1251123] "temp"
            (2083148 'move' viewDom[2083143](2083145 '.v' _iterator[2016690] F1_viewDom[2150218]))
            (2082733 'move' coerce_tmp[2082731] viewDom[2083143])
            const-val viewDom[2083150]:domain(1,int(64),false)[1251123] "temp"
            (2083155 'move' viewDom[2083150](2083152 '.v' _iterator[2016690] F1_viewDom[2150218]))
            (2082736 'move' call_tmp[2082729](2082739 call dsiLow[1300625] viewDom[2083150]))
            const-val call_tmp[2082741]:int(64)[13] "dead at end of block" "maybe param" "temp"
            const-val arr[2083157]:[domain(1,int(64),false)] uint(64)[1450261] "temp"
            (2083162 'move' arr[2083157](2083159 '.v' _iterator[2016690] F0_arr[2150214]))
            (2082743 'move' call_tmp[2082741](2082746 call getDataIndex[1458731] arr[2083157] call_tmp[2082729]))
            const-val first[2082749]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            (2082751 'move' first[2082749] call_tmp[2082741])
            const-val call_tmp[2082754]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            val coerce_tmp[2082756]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            const-val viewDom[2083164]:domain(1,int(64),false)[1251123] "temp"
            (2083169 'move' viewDom[2083164](2083166 '.v' _iterator[2016690] F1_viewDom[2150218]))
            (2082758 'move' coerce_tmp[2082756] viewDom[2083164])
            (2082761 'move' call_tmp[2082754](2082764 call dsiLow[1300625] coerce_tmp[2082756]))
            const-val call_tmp[2082766]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            (2082768 'move' call_tmp[2082766](2082771 call chpl__idxToInt[1027105] call_tmp[2082754]))
            const-val call_tmp[2082773]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            (2082775 'move' call_tmp[2082773](2082778 call +[949855] call_tmp[2082766]))
            const-val call_tmp[2082780]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            val coerce_tmp[2082782]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            const-val viewDom[2083171]:domain(1,int(64),false)[1251123] "temp"
            (2083176 'move' viewDom[2083171](2083173 '.v' _iterator[2016690] F1_viewDom[2150218]))
            (2082784 'move' coerce_tmp[2082782] viewDom[2083171])
            (2082787 'move' call_tmp[2082780](2082790 call chpl_intToIdx[1302054] coerce_tmp[2082782] call_tmp[2082773]))
            const-val call_tmp[2082793]:int(64)[13] "dead at end of block" "maybe param" "temp"
            (2082795 'move' call_tmp[2082793](2082798 call getDataIndex[1458731] info[2082713] call_tmp[2082780]))
            const-val second[2082801]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            (2082803 'move' second[2082801] call_tmp[2082793])
            const-val call_tmp[2082806]:int(64)[13] "dead at end of block" "maybe param" "temp"
            (2082808 'move' call_tmp[2082806](2082811 call -[440532] call_tmp[2082793] call_tmp[2082741]))
            const-val step[2082814]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            (2082816 'move' step[2082814] call_tmp[2082806])
            const-val call_tmp[2082819]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            val coerce_tmp[2082821]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            const-val viewDom[2083178]:domain(1,int(64),false)[1251123] "temp"
            (2083183 'move' viewDom[2083178](2083180 '.v' _iterator[2016690] F1_viewDom[2150218]))
            (2082823 'move' coerce_tmp[2082821] viewDom[2083178])
            (2082826 'move' call_tmp[2082819](2082829 call dsiNumIndices[1263823] coerce_tmp[2082821]))
            const-val call_tmp[2082831]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            (2082833 'move' call_tmp[2082831](2082836 call -[962415] call_tmp[2082819]))
            const-val call_tmp[2082838]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            (2082840 'move' call_tmp[2082838](2082843 call *[441944] call_tmp[2082831] call_tmp[2082806]))
            const-val call_tmp[2082846]:int(64)[13] "dead at end of block" "maybe param" "temp"
            (2082848 'move' call_tmp[2082846](2082851 call +[439752] call_tmp[2082741] call_tmp[2082838]))
            const-val last[2082854]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            (2082856 'move' last[2082854] call_tmp[2082846])
            val _indexOfInterest[2082859]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[2082861]:_ic_chpl_direct_pos_stride_range_iter[1303186] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[2082863]:_ir_chpl_direct_pos_stride_range_iter[1303192] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[2082865]:_ir_chpl_direct_pos_stride_range_iter[1303192] "temp"
            (2082868 call chpl_direct_pos_stride_range_iter[1302141] call_tmp[2082741] call_tmp[2082846] call_tmp[2082806] ret_tmp[2082865])
            (2082873 'move' call_tmp[2082863] ret_tmp[2082865])
            (2082876 'move' _iterator[2082861](2082879 call _getIterator[1303201] call_tmp[2082863]))
            {
              val ret[2082882]:_ir_chpl_direct_pos_stride_range_iter[1303192] "dead after last mention" "RVV" "temp"
              val call_tmp[2082884]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val stride[2082886]:int(64)[13] "temp"
              (2082888 'move' stride[2082886](2082890 '.v' _iterator[2082861] F2_stride[2126228]))
              (2082894 call chpl_range_check_stride[1103022] stride[2082886])
              val call_tmp[2082896]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val default_arg_first[2082898]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val low[2082900]:int(64)[13] "temp"
              (2082902 'move' low[2082900](2082904 '.v' _iterator[2082861] F0_low[2126220]))
              (2082907 'move' default_arg_first[2082898](2082910 call chpl_checkIfRangeIterWillOverflow_default_first[1103387] low[2082900]))
              const-val default_arg_last[2082912]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val high[2082914]:int(64)[13] "temp"
              (2082916 'move' high[2082914](2082918 '.v' _iterator[2082861] F1_high[2126224]))
              (2082921 'move' default_arg_last[2082912](2082924 call chpl_checkIfRangeIterWillOverflow_default_last[1103415] high[2082914]))
              const-val _return_tmp_[2082926]:bool[10] "dead after last mention" "temp"
              const-val low[2082928]:int(64)[13] "temp"
              (2082930 'move' low[2082928](2082932 '.v' _iterator[2082861] F0_low[2126220]))
              const-val high[2082935]:int(64)[13] "temp"
              (2082937 'move' high[2082935](2082939 '.v' _iterator[2082861] F1_high[2126224]))
              const-val stride[2082942]:int(64)[13] "temp"
              (2082944 'move' stride[2082942](2082946 '.v' _iterator[2082861] F2_stride[2126228]))
              (2082949 'move' _return_tmp_[2082926](2082952 call chpl_checkIfRangeIterWillOverflow[1096265] low[2082928] high[2082935] stride[2082942] default_arg_first[2082898] default_arg_last[2082912] 1))
              val i[2082959]:int(64)[13] "dead at end of block" "insert auto destroy"
              val call_tmp[2082961]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (2082963 'move' i[2082959] 0)
              CForLoop[2082966]
              {
                const-val yret[2083014]:int(64)[13] "dead after last mention" "YVV" "temp"
                (2083016 'move' yret[2083014] i[2082959])
                const-val _yieldedIndex[2083019]:int(64)[13] "temp"
                (2083021 'move' _yieldedIndex[2083019] i[2082959])
                {
                  const-val i[2083025]:int(64)[13] "const" "index var" "insert auto destroy"
                  (2083027 'move' i[2083025] _yieldedIndex[2083019])
                  ref yret[2083030]:_ref(uint(64))[936790] "dead after last mention" "YVV" "temp"
                  ref call_tmp[2083032]:_ref(uint(64))[936790] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[2083034]:_ref(_ddata(uint(64)))[1449431] "dead after last mention" "temp"
                  (2083036 'move' _this_tmp_[2083034](2083039 call theData[1459939] info[2082713]))
                  val coerce_tmp[2083041]:_ddata(uint(64))[1449422] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (2083043 'move' coerce_tmp[2083041](2083045 'deref' _this_tmp_[2083034]))
                  (2083047 'move' call_tmp[2083032](2083050 call this[1460086] coerce_tmp[2083041] _yieldedIndex[2083019]))
                  ref _yieldedIndex[2083075]:_ref(uint(64))[936790] "temp"
                  (2083053 'move' _yieldedIndex[2083075] call_tmp[2083032])
                  {
                    ref elem[2083077]:_ref(uint(64))[936790] "index var" "insert auto destroy"
                    (2083079 'move' elem[2083077] _yieldedIndex[2083075])
                    ref yret[2083082]:_ref(uint(64))[936790] "dead after last mention" "YVV" "temp"
                    ref _yieldedIndex[2083084]:_ref(uint(64))[936790] "temp"
                    (2083086 'move' _yieldedIndex[2083084] elem[2083077])
                    {
                      ref i[2083090]:_ref(uint(64))[936790] "index var" "insert auto destroy"
                      (2083092 'move' i[2083090] _yieldedIndex[2083084])
                      ref yret[2083095]:_ref(uint(64))[936790] "dead after last mention" "YVV" "temp"
                      ref _yieldedIndex[2083097]:_ref(uint(64))[936790] "temp"
                      (2083099 'move' _yieldedIndex[2083097] i[2083090])
                      {
                        ref c[2083103]:_ref(uint(64))[936790] "index var" "insert auto destroy"
                        (2083105 'move' c[2083103] _yieldedIndex[2083097])
                        const-val coerce_tmp[2083108]:uint(64)[115] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (2083110 'move' coerce_tmp[2083108](2083112 'cast' uint(64)[115] 1))
                        (2083116 call =[435527] c[2083103] coerce_tmp[2083108])
                        label _continueLabel[2083119]
                      }
                    }
                  }
                }
                {
                  const-val low[2082968]:int(64)[13] "temp"
                  (2082970 'move' low[2082968](2082972 '.v' _iterator[2082861] F0_low[2126220]))
                  (2082975 '=' i[2082959] low[2082968])
                }
                {
                  const-val high[2082979]:int(64)[13] "temp"
                  (2082981 'move' high[2082979](2082983 '.v' _iterator[2082861] F1_high[2126224]))
                  (2082986 '<=' i[2082959] high[2082979])
                }
                {
                  val call_tmp[2082990]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[2082992]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val stride[2082994]:int(64)[13] "temp"
                  (2082996 'move' stride[2082994](2082998 '.v' _iterator[2082861] F2_stride[2126228]))
                  (2083001 'move' call_tmp[2082992] stride[2082994])
                  const-val stride[2083004]:int(64)[13] "temp"
                  (2083006 'move' stride[2083004](2083008 '.v' _iterator[2082861] F2_stride[2126228]))
                  (2083011 '+=' i[2082959] stride[2083004])
                }
              }
              label _endchpl_direct_pos_stride_range_iter[2083066]
            }
            (2083069 call _freeIterator[1303374] _iterator[2082861])
            label _endchpl__serialViewIter[2083071]
          }
          (2016776 call _freeIterator[1460309] _iterator[2016690])
          label _endthese[2016778]
        }
        (2016781 call _freeIterator[1460914] _iterator[2016631])
        label _endthese[2016783]
      }
      label _breakLabel[1528781]
      (1926940 call _freeIterator[1461665] _iterator[1528744])
    }
    const-val call_tmp[1528783]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1907556]:range(int(64),bounded,false)[1027003] "temp"
    (1528788 call chpl_build_bounded_range[455253] 1 inferredRank[1528147] ret_tmp[1907556])
    (1907559 'move' call_tmp[1528783] ret_tmp[1907556])
    const-val call_tmp[1528791]:domain(1,int(64),false)[1252786] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1911316]:domain(1,int(64),false)[1252786] "temp"
    (1528796 call chpl__buildDomainExpr[1244857] call_tmp[1528783] ret_tmp[1911316])
    (1911319 'move' call_tmp[1528791] ret_tmp[1911316])
    val strideDom[1528798]:domain(1,int(64),false)[1252786] "dead at end of block" "insert auto destroy"
    const-val unaliasTemp[1911322]:domain(1,int(64),false)[1252786] "temp"
    (1911327 'move' unaliasTemp[1911322](1911323 call chpl__unalias[1697031] ret_tmp[1911316]))
    (1528800 'move' strideDom[1528798] unaliasTemp[1911322])
    const-val dstStride[1528804]:[domain(1,int(64),false)] uint(64)[1456147] "dead at end of block" "insert auto destroy"
    ref call_tmp[1528806]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1528808 'move' call_tmp[1528806](1528811 call chpl__ensureDomainExpr[1254163] strideDom[1528798]))
    const-val call_tmp[1528813]:_RuntimeTypeInfo[1456380] "dead at end of block" "expr temp" "maybe param" "temp"
    (1528815 'move' call_tmp[1528813](1528818 call chpl__buildArrayRuntimeType[1448568] call_tmp[1528806]))
    const-val _runtime_type_tmp_[1532788]:domain(1,int(64),false)[1252786] "dead at end of block" "temp"
    (1532793 'move' _runtime_type_tmp_[1532788](1878784 '.v' call_tmp[1528813] dom[1456381]))
    const-val ret_tmp[1915412]:[domain(1,int(64),false)] uint(64)[1456147] "temp"
    (1532786 call chpl__convertRuntimeTypeToValue[1474905] _runtime_type_tmp_[1532788] ret_tmp[1915412])
    (1915415 'move' dstStride[1528804] ret_tmp[1915412])
    const-val srcStride[1528824]:[domain(1,int(64),false)] uint(64)[1456147] "dead at end of block" "insert auto destroy"
    const-val call_tmp[1528826]:_RuntimeTypeInfo[1456380] "dead at end of block" "expr temp" "maybe param" "temp"
    (1528828 'move' call_tmp[1528826](1530124 call chpl__convertValueToRuntimeType[1461748] dstStride[1528804]))
    const-val _runtime_type_tmp_[1532803]:domain(1,int(64),false)[1252786] "dead at end of block" "temp"
    (1532808 'move' _runtime_type_tmp_[1532803](1878786 '.v' call_tmp[1528826] dom[1456381]))
    const-val ret_tmp[1915418]:[domain(1,int(64),false)] uint(64)[1456147] "temp"
    (1532801 call chpl__convertRuntimeTypeToValue[1474905] _runtime_type_tmp_[1532803] ret_tmp[1915418])
    (1915421 'move' srcStride[1528824] ret_tmp[1915418])
    const-val tmp[1528836]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1528838]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1528840 'move' call_tmp[1528838](1528843 call -[962415] inferredRank[1528147]))
    ref call_tmp[1528846]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (1528848 'move' call_tmp[1528846](1528851 call this[1441225] LBlk[1528334] call_tmp[1528838]))
    const-val coerce_tmp[1530131]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1530135 'move' coerce_tmp[1530131](1530133 'deref' call_tmp[1528846]))
    (1528853 'move' tmp[1528836](1528856 call >[437788] coerce_tmp[1530131] 1))
    val tmp[1528872]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1528874]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1528876]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1528878 'move' call_tmp[1528876] tmp[1528836])
    (1528883 'move' tmp[1528874] call_tmp[1528876])
    if tmp[1528874]
    {
      (1528890 'move' tmp[1528872] 1)
    }
    {
      const-val tmp[1528896]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1528898]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1528900 'move' call_tmp[1528898](1528903 call -[962415] inferredRank[1528147]))
      ref call_tmp[1528906]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
      (1528908 'move' call_tmp[1528906](1528911 call this[1441225] RBlk[1528347] call_tmp[1528898]))
      const-val call_tmp[1528913]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1530145]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1530149 'move' coerce_tmp[1530145](1530147 'deref' call_tmp[1528906]))
      (1528915 'move' call_tmp[1528913](1528918 call >[437788] coerce_tmp[1530145] 1))
      (1528921 'move' tmp[1528896] call_tmp[1528913])
      (1528926 'move' tmp[1528872] tmp[1528896])
    }
    const-val call_tmp[1528932]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1528934 'move' call_tmp[1528932] tmp[1528872])
    if call_tmp[1528932]
    {
      (1528942 call +=[451431] stridelevels[1528685] 1)
      ref call_tmp[1528947]:_ref(uint(64))[936790] "dead after last mention" "maybe param" "temp"
      (1528949 'move' call_tmp[1528947](1528952 call this[1462246] count[1528720] stridelevels[1528685]))
      const-val coerce_tmp[1530169]:uint(64)[115] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1530175 'move' coerce_tmp[1530169](1530171 'cast' uint(64)[115] 1))
      (1528955 call =[435527] call_tmp[1528947] coerce_tmp[1530169])
      ref call_tmp[1528961]:_ref(uint(64))[936790] "dead after last mention" "maybe param" "temp"
      (1528963 'move' call_tmp[1528961](1528966 call this[1462246] dstStride[1528804] stridelevels[1528685]))
      const-val call_tmp[1528968]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1528970 'move' call_tmp[1528968](1528973 call -[962415] inferredRank[1528147]))
      ref call_tmp[1528976]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
      (1528978 'move' call_tmp[1528976](1528981 call this[1441225] LBlk[1528334] call_tmp[1528968]))
      const-val call_tmp[1528983]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1530198]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1530202 'move' coerce_tmp[1530198](1530200 'deref' call_tmp[1528976]))
      (1528985 'move' call_tmp[1528983](1528991 call safeCast[947330] coerce_tmp[1530198]))
      (1528994 call =[435527] call_tmp[1528961] call_tmp[1528983])
      ref call_tmp[1529002]:_ref(uint(64))[936790] "dead after last mention" "maybe param" "temp"
      (1529004 'move' call_tmp[1529002](1529007 call this[1462246] srcStride[1528824] stridelevels[1528685]))
      const-val call_tmp[1529009]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1529011 'move' call_tmp[1529009](1529014 call -[962415] inferredRank[1528147]))
      ref call_tmp[1529017]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
      (1529019 'move' call_tmp[1529017](1529022 call this[1441225] RBlk[1528347] call_tmp[1529009]))
      const-val call_tmp[1529024]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1530226]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1530230 'move' coerce_tmp[1530226](1530228 'deref' call_tmp[1529017]))
      (1529026 'move' call_tmp[1529024](1529032 call safeCast[947330] coerce_tmp[1530226]))
      (1529035 call =[435527] call_tmp[1529002] call_tmp[1529024])
    }
    {
      val _indexOfInterest[1529045]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[1529047]:_ic_chpl_direct_range_iter[1447793] "dead at end of block" "expr temp" "temp"
      const-val call_tmp[1529056]:_ir_chpl_direct_range_iter[1447799] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val ret_tmp[1915165]:_ir_chpl_direct_range_iter[1447799] "temp"
      (1529061 call chpl_direct_range_iter[1446433] 2 inferredRank[1528147] ret_tmp[1915165])
      (1915168 'move' call_tmp[1529056] ret_tmp[1915165])
      (1529065 'move' _iterator[1529047](1529068 call _getIterator[1447808] call_tmp[1529056]))
      {
        val ret[2016816]:_ir_chpl_direct_range_iter[1447799] "dead after last mention" "RVV" "temp"
        val _indexOfInterest[2016818]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[2016820]:_ic_chpl_direct_param_stride_range_iter[1447539] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[2016822]:_ir_chpl_direct_param_stride_range_iter[1447545] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[2016824]:_ir_chpl_direct_param_stride_range_iter[1447545] "temp"
        const-val low[2017176]:int(64)[13] "temp"
        (2017181 'move' low[2017176](2017178 '.v' _iterator[1529047] F0_low[2144853]))
        const-val high[2017183]:int(64)[13] "temp"
        (2017188 'move' high[2017183](2017185 '.v' _iterator[1529047] F1_high[2144857]))
        (2016827 call chpl_direct_param_stride_range_iter[1446513] low[2017176] high[2017183] ret_tmp[2016824])
        (2016831 'move' call_tmp[2016822] ret_tmp[2016824])
        (2016834 'move' _iterator[2016820](2016837 call _getIterator[1447554] call_tmp[2016822]))
        {
          val ret[2016840]:_ir_chpl_direct_param_stride_range_iter[1447545] "dead after last mention" "RVV" "temp"
          val call_tmp[2016842]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          (2016845 call chpl_range_check_stride[1446822])
          val i[2016846]:int(64)[13] "dead at end of block" "insert auto destroy"
          val call_tmp[2016848]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          (2016850 'move' i[2016846] 0)
          val call_tmp[2016853]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          const-val _return_tmp_[2016855]:bool[10] "dead after last mention" "temp"
          const-val low[2016857]:int(64)[13] "temp"
          (2016859 'move' low[2016857](2016861 '.v' _iterator[2016820] F0_low[2145725]))
          const-val high[2016864]:int(64)[13] "temp"
          (2016866 'move' high[2016864](2016868 '.v' _iterator[2016820] F1_high[2145729]))
          const-val high[2016871]:int(64)[13] "temp"
          (2016873 'move' high[2016871](2016875 '.v' _iterator[2016820] F1_high[2145729]))
          const-val low[2016878]:int(64)[13] "temp"
          (2016880 'move' low[2016878](2016882 '.v' _iterator[2016820] F0_low[2145725]))
          (2016885 'move' _return_tmp_[2016855](2016888 call chpl_checkIfRangeIterWillOverflow[1096265] low[2016857] high[2016864] -1 high[2016871] low[2016878] 1))
          CForLoop[2016895]
          {
            const-val yret[2016924]:int(64)[13] "dead after last mention" "YVV" "temp"
            (2016926 'move' yret[2016924] i[2016846])
            const-val _yieldedIndex[2016929]:int(64)[13] "temp"
            (2016931 'move' _yieldedIndex[2016929] i[2016846])
            {
              const-val i[2016935]:int(64)[13] "const" "index var" "insert auto destroy"
              (2016937 'move' i[2016935] _yieldedIndex[2016929])
              const-val yret[2016940]:int(64)[13] "dead after last mention" "YVV" "temp"
              (2016942 'move' yret[2016940] _yieldedIndex[2016929])
              const-val _yieldedIndex[2016964]:int(64)[13] "temp"
              (2017174 'move' _yieldedIndex[2016964] _yieldedIndex[2016929])
              {
                const-val i[2016966]:int(64)[13] "const" "index var" "insert auto destroy"
                (2016968 'move' i[2016966] _yieldedIndex[2016964])
                {
                  const-val call_tmp[2016972]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2016974 'move' call_tmp[2016972](2016977 call +[949855] stridelevels[1528685]))
                  ref call_tmp[2016979]:_ref(uint(64))[936790] "dead after last mention" "maybe param" "temp"
                  (2016981 'move' call_tmp[2016979](2016984 call this[1462246] count[1528720] call_tmp[2016972]))
                  ref call_tmp[2016987]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                  val tmp[2016989]:int(64)[13] "temp"
                  (2016991 'move' tmp[2016989](2016994 call this[1375426] DimSizes[1528175] i[2016966]))
                  (2016997 'move' call_tmp[2016987](2016999 'addr of' tmp[2016989]))
                  const-val call_tmp[2017001]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[2017003]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (2017005 'move' coerce_tmp[2017003](2017007 'deref' call_tmp[2016987]))
                  (2017009 'move' call_tmp[2017001](2017012 call safeCast[947330] coerce_tmp[2017003]))
                  (2017015 call *=[452019] call_tmp[2016979] call_tmp[2017001])
                  const-val tmp[2017018]:bool[10] "dead after last mention" "maybe param" "temp"
                  (2017020 'move' tmp[2017018](2017023 call canReuseStride[1465442] LBlk[1528334] i[2016966] stridelevels[1528685] count[1528720] dstStride[1528804]))
                  const-val bothReuse[2017029]:bool[10] "dead at end of block" "const" "insert auto destroy"
                  val tmp[2017031]:bool[10] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
                  const-val tmp[2017033]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[2017035]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2017037 'move' call_tmp[2017035] tmp[2017018])
                  (2017040 'move' tmp[2017033] call_tmp[2017035])
                  if tmp[2017033]
                  {
                    const-val tmp[2017045]:bool[10] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
                    const-val call_tmp[2017047]:bool[10] "dead at end of block" "expr temp" "maybe param" "temp"
                    (2017049 'move' call_tmp[2017047](2017052 call canReuseStride[1465442] RBlk[1528347] i[2016966] stridelevels[1528685] count[1528720] srcStride[1528824]))
                    (2017058 'move' tmp[2017045] call_tmp[2017047])
                    (2017061 'move' tmp[2017031] tmp[2017045])
                  }
                  {
                    (2017065 'move' tmp[2017031] 0)
                  }
                  (2017069 'move' bothReuse[2017029] tmp[2017031])
                  const-val call_tmp[2017072]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2017074 'move' call_tmp[2017072](2017077 call ![7494] bothReuse[2017029]))
                  const-val call_tmp[2017079]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2017081 'move' call_tmp[2017079] call_tmp[2017072])
                  if call_tmp[2017079]
                  {
                    (2017087 call +=[451431] stridelevels[1528685] 1)
                    ref call_tmp[2017090]:_ref(uint(64))[936790] "dead after last mention" "maybe param" "temp"
                    (2017092 'move' call_tmp[2017090](2017095 call this[1462246] dstStride[1528804] stridelevels[1528685]))
                    const-val call_tmp[2017098]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2017100 'move' call_tmp[2017098](2017103 call -[1125627] i[2016966]))
                    ref call_tmp[2017105]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                    (2017107 'move' call_tmp[2017105](2017110 call this[1441225] LBlk[1528334] call_tmp[2017098]))
                    const-val call_tmp[2017113]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[2017115]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (2017117 'move' coerce_tmp[2017115](2017119 'deref' call_tmp[2017105]))
                    (2017121 'move' call_tmp[2017113](2017124 call safeCast[947330] coerce_tmp[2017115]))
                    (2017127 call =[435527] call_tmp[2017090] call_tmp[2017113])
                    ref call_tmp[2017130]:_ref(uint(64))[936790] "dead after last mention" "maybe param" "temp"
                    (2017132 'move' call_tmp[2017130](2017135 call this[1462246] srcStride[1528824] stridelevels[1528685]))
                    const-val call_tmp[2017138]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2017140 'move' call_tmp[2017138](2017143 call -[1125627] i[2016966]))
                    ref call_tmp[2017145]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                    (2017147 'move' call_tmp[2017145](2017150 call this[1441225] RBlk[1528347] call_tmp[2017138]))
                    const-val call_tmp[2017153]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[2017155]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (2017157 'move' coerce_tmp[2017155](2017159 'deref' call_tmp[2017145]))
                    (2017161 'move' call_tmp[2017153](2017164 call safeCast[947330] coerce_tmp[2017155]))
                    (2017167 call =[435527] call_tmp[2017130] call_tmp[2017153])
                  }
                }
                label _continueLabel[2017171]
              }
            }
            {
              const-val high[2016897]:int(64)[13] "temp"
              (2016899 'move' high[2016897](2016901 '.v' _iterator[2016820] F1_high[2145729]))
              (2016904 '=' i[2016846] high[2016897])
            }
            {
              const-val low[2016908]:int(64)[13] "temp"
              (2016910 'move' low[2016908](2016912 '.v' _iterator[2016820] F0_low[2145725]))
              (2016915 '>=' i[2016846] low[2016908])
            }
            {
              val call_tmp[2016919]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (2016921 '+=' i[2016846] -1)
            }
          }
          label _endchpl_direct_param_stride_range_iter[2016955]
        }
        (2016958 call _freeIterator[1447727] _iterator[2016820])
        label _endchpl_direct_range_iter[2016960]
      }
      label _breakLabel[1529324]
      (1926945 call _freeIterator[1447981] _iterator[1529047])
    }
    const-val call_tmp[1529326]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1529328 'move' call_tmp[1529326](1529331 call +[949855] stridelevels[1528685]))
    ref call_tmp[1529334]:_ref(uint(64))[936790] "dead after last mention" "maybe param" "temp"
    (1529336 'move' call_tmp[1529334](1529339 call this[1462246] count[1528720] call_tmp[1529326]))
    ref call_tmp[1529341]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    val tmp[1883326]:int(64)[13] "temp"
    (1529343 'move' tmp[1883326](1530364 call this[1375426] DimSizes[1528175] 1))
    (1883330 'move' call_tmp[1529341](1883328 'addr of' tmp[1883326]))
    const-val call_tmp[1529348]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1530377]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1530381 'move' coerce_tmp[1530377](1530379 'deref' call_tmp[1529341]))
    (1529350 'move' call_tmp[1529348](1529356 call safeCast[947330] coerce_tmp[1530377]))
    (1529359 call *=[452019] call_tmp[1529334] call_tmp[1529348])
    const-val call_tmp[1529366]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1529368 'move' call_tmp[1529366](1529371 call <=[437128] stridelevels[1528685] inferredRank[1528147]))
    (1529375 call assert[1442412] call_tmp[1529366] "BulkTransferStride: stride levels greater than rank.")
    const-val call_tmp[1529381]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1529383 'move' call_tmp[1529381](1529386 call ==[435744] stridelevels[1528685] 0))
    const-val call_tmp[1529389]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1529391 'move' call_tmp[1529389] call_tmp[1529381])
    if call_tmp[1529389]
    {
      ref call_tmp[1529398]:_ref(uint(64))[936790] "dead after last mention" "maybe param" "temp"
      val tmp[1883332]:uint(64)[115] "temp"
      (1529400 'move' tmp[1883332](1530391 call this[1462362] count[1528720] 1))
      (1883336 'move' call_tmp[1529398](1883334 'addr of' tmp[1883332]))
      const-val call_tmp[1529405]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1529407 'move' call_tmp[1529405](1529410 call size[1435624] LViewDom[1527941]))
      const-val call_tmp[1529413]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1530405]:uint(64)[115] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1530409 'move' coerce_tmp[1530405](1530407 'deref' call_tmp[1529398]))
      (1529415 'move' call_tmp[1529413](1529418 call ==[18446] coerce_tmp[1530405] call_tmp[1529405]))
      ref call_tmp[1529421]:_ref(uint(64))[936790] "dead after last mention" "maybe param" "temp"
      val tmp[1883338]:uint(64)[115] "temp"
      (1529423 'move' tmp[1883338](1530415 call this[1462362] count[1528720] 1))
      (1883342 'move' call_tmp[1529421](1883340 'addr of' tmp[1883338]))
      const-val call_tmp[1529428]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1529430 'move' call_tmp[1529428](1529433 call size[1435624] LViewDom[1527941]))
      const-val coerce_tmp[1530429]:uint(64)[115] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1530433 'move' coerce_tmp[1530429](1530431 'deref' call_tmp[1529421]))
      (1529437 call assert[1465943] call_tmp[1529413] "BulkTransferStride: bulk-count incorrect for stride level of 0: " coerce_tmp[1530429] " != " call_tmp[1529428])
    }
    const-val call_tmp[1529447]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1529449 'move' call_tmp[1529447](1529452 call +[949855] stridelevels[1528685]))
    const-val call_tmp[1529455]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1907562]:range(int(64),bounded,false)[1027003] "temp"
    (1529460 call chpl_build_bounded_range[455253] 1 call_tmp[1529447] ret_tmp[1907562])
    (1907565 'move' call_tmp[1529455] ret_tmp[1907562])
    const-val call_tmp[1529463]:domain(1,int(64),false)[1252786] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1911330]:domain(1,int(64),false)[1252786] "temp"
    (1529468 call chpl__buildDomainExpr[1244857] call_tmp[1529455] ret_tmp[1911330])
    (1911333 'move' call_tmp[1529463] ret_tmp[1911330])
    (1529471 call =[1287907] countDom[1528714] call_tmp[1529463])
    (1926950 call chpl__autoDestroy[1697012] call_tmp[1529463])
    (1926947 call chpl__autoDestroy[1407763] call_tmp[1529455])
    const-val call_tmp[1529477]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1907568]:range(int(64),bounded,false)[1027003] "temp"
    (1529482 call chpl_build_bounded_range[455253] 1 stridelevels[1528685] ret_tmp[1907568])
    (1907571 'move' call_tmp[1529477] ret_tmp[1907568])
    const-val call_tmp[1529485]:domain(1,int(64),false)[1252786] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1911336]:domain(1,int(64),false)[1252786] "temp"
    (1529490 call chpl__buildDomainExpr[1244857] call_tmp[1529477] ret_tmp[1911336])
    (1911339 'move' call_tmp[1529485] ret_tmp[1911336])
    (1529493 call =[1287907] strideDom[1528798] call_tmp[1529485])
    (1926956 call chpl__autoDestroy[1697012] call_tmp[1529485])
    (1926953 call chpl__autoDestroy[1407763] call_tmp[1529477])
    const-val call_tmp[1529719]:1*int(64)[1256714] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1916397]:1*int(64)[1256714] "temp"
    (1529724 call getFirstIdx[1530443] LeftDims[1528077] ret_tmp[1916397])
    (1916400 'move' call_tmp[1529719] ret_tmp[1916397])
    const-val LFirst[1529726]:1*int(64)[1256714] "dead at end of block" "const" "insert auto destroy"
    (1529728 'move' LFirst[1529726] call_tmp[1529719])
    const-val call_tmp[1529732]:1*int(64)[1256714] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1916403]:1*int(64)[1256714] "temp"
    (1529737 call getFirstIdx[1530443] RightDims[1528092] ret_tmp[1916403])
    (1916406 'move' call_tmp[1529732] ret_tmp[1916403])
    const-val RFirst[1529739]:1*int(64)[1256714] "dead at end of block" "const" "insert auto destroy"
    (1529741 'move' RFirst[1529739] call_tmp[1529732])
    val call_tmp[1529756]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1529763]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (1529765 'move' call_tmp[1529763](1529768 call _cast[964574] stridelevels[1528685]))
    (1529772 call complexTransferComm[1530843] LHS[1527939] RHS[1527943] call_tmp[1529763] dstStride[1528804] srcStride[1528824] count[1528720] LFirst[1529726] RFirst[1529739])
    (1926959 call chpl__autoDestroy[1697253] RFirst[1529739])
    (1926962 call chpl__autoDestroy[1697253] LFirst[1529726])
    (1926965 call chpl__autoDestroy[1819812] srcStride[1528824])
    (1926968 call chpl__autoDestroy[1819812] dstStride[1528804])
    (1926971 call chpl__autoDestroy[1697012] strideDom[1528798])
    (1926974 call chpl__autoDestroy[1407763] call_tmp[1528783])
    (1926977 call chpl__autoDestroy[1819812] count[1528720])
    (1926980 call chpl__autoDestroy[1697012] countDom[1528714])
    (1926983 call chpl__autoDestroy[1407763] call_tmp[1528699])
    (1926986 call chpl__autoDestroy[1697253] RBlk[1528347])
    (1926989 call chpl__autoDestroy[1697253] LBlk[1528334])
    (1926992 call chpl__autoDestroy[1788705] DimSizes[1528175])
    (1926995 call chpl__autoDestroy[1697012] call_tmp[1528185])
    (1926998 call chpl__autoDestroy[1407763] call_tmp[1528177])
    (1927001 call chpl__autoDestroy[1697253] RightActives[1528135])
    (1927004 call chpl__autoDestroy[1697253] LeftActives[1528123])
    (1927007 call chpl__autoDestroy[1790709] tmp[1528106])
    (1927010 call chpl__autoDestroy[1695146] RightDims[1528092])
    (1927013 call chpl__autoDestroy[1695146] LeftDims[1528077])
    (1529788 return _void[55])
  }
  function complexTransferComm[1472963](const in arg A[1472965]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224], const in arg B[1472967]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224], const in arg stridelevels[1472973]:int(32)[95], const  ref arg dstStride[1472975]:[domain(1,int(64),false)] uint(64)[1456147], const  ref arg srcStride[1472977]:[domain(1,int(64),false)] uint(64)[1456147], const  ref arg count[1472979]:[domain(1,int(64),false)] uint(64)[1456147], const  ref arg AFirst[1472981]:1*int(64)[1256714], const  ref arg BFirst[1472983]:1*int(64)[1256714]) : void[4] "instantiated generic" "invisible fn" "private" "resolved" "no return value for void"
  {
    const-val call_tmp[1473078]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1473080 'move' call_tmp[1473078](1473086 call getDataIndex[1473559] A[1472965] AFirst[1472981]))
    const-val AO[1473090]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1473092 'move' AO[1473090] call_tmp[1473078])
    const-val call_tmp[1473096]:int(64)[13] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1474716]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1474721 'move' coerce_tmp[1474716] B[1472967])
    (1473098 'move' call_tmp[1473096](1473104 call getDataIndex[1473559] coerce_tmp[1474716] BFirst[1472983]))
    const-val BO[1473108]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1473110 'move' BO[1473108] call_tmp[1473096])
    ref call_tmp[1473114]:_ref(_ddata(range(int(64),bounded,false)))[1406051] "dead at end of block" "maybe param" "temp"
    (1473116 'move' call_tmp[1473114](1473119 call data[1411200] A[1472965]))
    const dest[1473122]:_ddata(range(int(64),bounded,false))[1406042] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[1474727]:_ddata(range(int(64),bounded,false))[1406042] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1474731 'move' coerce_tmp[1474727](1474729 'deref' call_tmp[1473114]))
    (1926433 '=' dest[1473122] coerce_tmp[1474727])
    (1473124 'noop')
    ref call_tmp[1473128]:_ref(_ddata(range(int(64),bounded,false)))[1406051] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1474734]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1474739 'move' coerce_tmp[1474734] B[1472967])
    (1473130 'move' call_tmp[1473128](1473133 call data[1411200] coerce_tmp[1474734]))
    const src[1473136]:_ddata(range(int(64),bounded,false))[1406042] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[1474744]:_ddata(range(int(64),bounded,false))[1406042] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1474748 'move' coerce_tmp[1474744](1474746 'deref' call_tmp[1473128]))
    (1926436 '=' src[1473136] coerce_tmp[1474744])
    (1473138 'noop')
    val call_tmp[1473142]:[domain(1,int(64),false)] uint(64)[1450261] "dead at end of block" "expr temp" "maybe param" "temp"
    (1473144 'move' call_tmp[1473142](1473147 call _value[1456202] dstStride[1472975]))
    ref call_tmp[1473150]:_ref(_ddata(uint(64)))[1449431] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1474752]:[domain(1,int(64),false)] uint(64)[1450261] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1474757 'move' coerce_tmp[1474752] call_tmp[1473142])
    (1473152 'move' call_tmp[1473150](1473155 call data[1452255] coerce_tmp[1474752]))
    const dststr[1473158]:_ddata(uint(64))[1449422] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[1474762]:_ddata(uint(64))[1449422] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1474766 'move' coerce_tmp[1474762](1474764 'deref' call_tmp[1473150]))
    (1926439 '=' dststr[1473158] coerce_tmp[1474762])
    (1473160 'noop')
    val call_tmp[1473164]:[domain(1,int(64),false)] uint(64)[1450261] "dead at end of block" "expr temp" "maybe param" "temp"
    (1473166 'move' call_tmp[1473164](1473169 call _value[1456202] srcStride[1472977]))
    ref call_tmp[1473172]:_ref(_ddata(uint(64)))[1449431] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1474770]:[domain(1,int(64),false)] uint(64)[1450261] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1474775 'move' coerce_tmp[1474770] call_tmp[1473164])
    (1473174 'move' call_tmp[1473172](1473177 call data[1452255] coerce_tmp[1474770]))
    const srcstr[1473180]:_ddata(uint(64))[1449422] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[1474780]:_ddata(uint(64))[1449422] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1474784 'move' coerce_tmp[1474780](1474782 'deref' call_tmp[1473172]))
    (1926442 '=' srcstr[1473180] coerce_tmp[1474780])
    (1473182 'noop')
    val call_tmp[1473186]:[domain(1,int(64),false)] uint(64)[1450261] "dead at end of block" "expr temp" "maybe param" "temp"
    (1473188 'move' call_tmp[1473186](1473191 call _value[1456202] count[1472979]))
    ref call_tmp[1473194]:_ref(_ddata(uint(64)))[1449431] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1474788]:[domain(1,int(64),false)] uint(64)[1450261] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1474793 'move' coerce_tmp[1474788] call_tmp[1473186])
    (1473196 'move' call_tmp[1473194](1473199 call data[1452255] coerce_tmp[1474788]))
    const cnt[1473202]:_ddata(uint(64))[1449422] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[1474798]:_ddata(uint(64))[1449422] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1474802 'move' coerce_tmp[1474798](1474800 'deref' call_tmp[1473194]))
    (1926445 '=' cnt[1473202] coerce_tmp[1474798])
    (1473204 'noop')
    const-val call_tmp[1473208]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (1473210 'move' call_tmp[1473208](1473212 '_wide_get_node' dest[1473122]))
    const-val call_tmp[1473214]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1906430]:locale[28] "temp"
    (1473219 call here[90438] ret_tmp[1906430])
    (1906433 'move' call_tmp[1473214] ret_tmp[1906430])
    const-val call_tmp[1473220]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1473222 'move' call_tmp[1473220](1473225 call id[90521] call_tmp[1473214]))
    const-val call_tmp[1473228]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1474807]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1474813 'move' coerce_tmp[1474807](1474809 'cast' int(64)[13] call_tmp[1473208]))
    (1473230 'move' call_tmp[1473228](1473233 call ==[435744] coerce_tmp[1474807] call_tmp[1473220]))
    const-val call_tmp[1473236]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1473238 'move' call_tmp[1473236] call_tmp[1473228])
    if call_tmp[1473236]
    {
      val call_tmp[1473245]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[1473252]:int(32)[95] "dead at end of block" "expr temp" "maybe param" "temp"
      (1473254 'move' call_tmp[1473252](1473256 '_wide_get_node' src[1473136]))
      const-val call_tmp[1473258]:int(32)[95] "dead at end of block" "maybe param" "temp"
      (1473260 'move' call_tmp[1473258] call_tmp[1473252])
      const srclocale[1473266]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
      (1473268 'move' srclocale[1473266] call_tmp[1473258])
      ref call_tmp[1473289]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
      (1473291 'move' call_tmp[1473289](1473294 call this[1407601] dest[1473122] AO[1473090]))
      ref call_tmp[1473296]:_ref(uint(64))[936790] "dead after last mention" "maybe param" "temp"
      (1473298 'move' call_tmp[1473296](1473301 call this[1460086] dststr[1473158] 0))
      ref call_tmp[1473303]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
      (1473305 'move' call_tmp[1473303](1473308 call this[1407601] src[1473136] BO[1473108]))
      ref call_tmp[1473310]:_ref(uint(64))[936790] "dead after last mention" "maybe param" "temp"
      (1473312 'move' call_tmp[1473310](1473315 call this[1460086] srcstr[1473180] 0))
      ref call_tmp[1473317]:_ref(uint(64))[936790] "dead after last mention" "maybe param" "temp"
      (1473319 'move' call_tmp[1473317](1473322 call this[1460086] cnt[1473202] 0))
      (1473324 'chpl_comm_get_strd' call_tmp[1473289] call_tmp[1473296] srclocale[1473266] call_tmp[1473303] call_tmp[1473310] call_tmp[1473317] stridelevels[1472973])
    }
    {
      val call_tmp[1473342]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[1473349]:int(32)[95] "dead at end of block" "expr temp" "maybe param" "temp"
      (1473351 'move' call_tmp[1473349](1473353 '_wide_get_node' dest[1473122]))
      const-val call_tmp[1473355]:int(32)[95] "dead at end of block" "maybe param" "temp"
      (1473357 'move' call_tmp[1473355] call_tmp[1473349])
      const destlocale[1473363]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
      (1473365 'move' destlocale[1473363] call_tmp[1473355])
      ref call_tmp[1473454]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
      (1473456 'move' call_tmp[1473454](1473459 call this[1407601] dest[1473122] AO[1473090]))
      ref call_tmp[1473461]:_ref(uint(64))[936790] "dead after last mention" "maybe param" "temp"
      (1473463 'move' call_tmp[1473461](1473466 call this[1460086] dststr[1473158] 0))
      ref call_tmp[1473468]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
      (1473470 'move' call_tmp[1473468](1473473 call this[1407601] src[1473136] BO[1473108]))
      ref call_tmp[1473475]:_ref(uint(64))[936790] "dead after last mention" "maybe param" "temp"
      (1473477 'move' call_tmp[1473475](1473480 call this[1460086] srcstr[1473180] 0))
      ref call_tmp[1473482]:_ref(uint(64))[936790] "dead after last mention" "maybe param" "temp"
      (1473484 'move' call_tmp[1473482](1473487 call this[1460086] cnt[1473202] 0))
      (1473489 'chpl_comm_put_strd' call_tmp[1473454] call_tmp[1473461] destlocale[1473363] call_tmp[1473468] call_tmp[1473475] call_tmp[1473482] stridelevels[1472973])
    }
    (1926448 call chpl__autoDestroy[1601737] call_tmp[1473214])
    (1473507 return _void[55])
  }
  function complexTransferComm[1530843](const in arg A[1530845]:[domain(1,int(64),false)] real(64)[1358944], const in arg B[1530847]:[domain(1,int(64),false)] real(64)[1358944], const in arg stridelevels[1530853]:int(32)[95], const  ref arg dstStride[1530855]:[domain(1,int(64),false)] uint(64)[1456147], const  ref arg srcStride[1530857]:[domain(1,int(64),false)] uint(64)[1456147], const  ref arg count[1530859]:[domain(1,int(64),false)] uint(64)[1456147], const  ref arg AFirst[1530861]:1*int(64)[1256714], const  ref arg BFirst[1530863]:1*int(64)[1256714]) : void[4] "instantiated generic" "invisible fn" "private" "resolved" "no return value for void"
  {
    const-val call_tmp[1530958]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1530960 'move' call_tmp[1530958](1530966 call getDataIndex[1531439] A[1530845] AFirst[1530861]))
    const-val AO[1530970]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1530972 'move' AO[1530970] call_tmp[1530958])
    const-val call_tmp[1530976]:int(64)[13] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1532596]:[domain(1,int(64),false)] real(64)[1358944] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1532601 'move' coerce_tmp[1532596] B[1530847])
    (1530978 'move' call_tmp[1530976](1530984 call getDataIndex[1531439] coerce_tmp[1532596] BFirst[1530863]))
    const-val BO[1530988]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1530990 'move' BO[1530988] call_tmp[1530976])
    ref call_tmp[1530994]:_ref(_ddata(real(64)))[1358114] "dead at end of block" "maybe param" "temp"
    (1530996 'move' call_tmp[1530994](1530999 call data[1360938] A[1530845]))
    const dest[1531002]:_ddata(real(64))[1358105] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[1532607]:_ddata(real(64))[1358105] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1532611 'move' coerce_tmp[1532607](1532609 'deref' call_tmp[1530994]))
    (1927023 '=' dest[1531002] coerce_tmp[1532607])
    (1531004 'noop')
    ref call_tmp[1531008]:_ref(_ddata(real(64)))[1358114] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1532614]:[domain(1,int(64),false)] real(64)[1358944] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1532619 'move' coerce_tmp[1532614] B[1530847])
    (1531010 'move' call_tmp[1531008](1531013 call data[1360938] coerce_tmp[1532614]))
    const src[1531016]:_ddata(real(64))[1358105] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[1532624]:_ddata(real(64))[1358105] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1532628 'move' coerce_tmp[1532624](1532626 'deref' call_tmp[1531008]))
    (1927026 '=' src[1531016] coerce_tmp[1532624])
    (1531018 'noop')
    val call_tmp[1531022]:[domain(1,int(64),false)] uint(64)[1450261] "dead at end of block" "expr temp" "maybe param" "temp"
    (1531024 'move' call_tmp[1531022](1531027 call _value[1456202] dstStride[1530855]))
    ref call_tmp[1531030]:_ref(_ddata(uint(64)))[1449431] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1532632]:[domain(1,int(64),false)] uint(64)[1450261] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1532637 'move' coerce_tmp[1532632] call_tmp[1531022])
    (1531032 'move' call_tmp[1531030](1531035 call data[1452255] coerce_tmp[1532632]))
    const dststr[1531038]:_ddata(uint(64))[1449422] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[1532642]:_ddata(uint(64))[1449422] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1532646 'move' coerce_tmp[1532642](1532644 'deref' call_tmp[1531030]))
    (1927029 '=' dststr[1531038] coerce_tmp[1532642])
    (1531040 'noop')
    val call_tmp[1531044]:[domain(1,int(64),false)] uint(64)[1450261] "dead at end of block" "expr temp" "maybe param" "temp"
    (1531046 'move' call_tmp[1531044](1531049 call _value[1456202] srcStride[1530857]))
    ref call_tmp[1531052]:_ref(_ddata(uint(64)))[1449431] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1532650]:[domain(1,int(64),false)] uint(64)[1450261] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1532655 'move' coerce_tmp[1532650] call_tmp[1531044])
    (1531054 'move' call_tmp[1531052](1531057 call data[1452255] coerce_tmp[1532650]))
    const srcstr[1531060]:_ddata(uint(64))[1449422] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[1532660]:_ddata(uint(64))[1449422] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1532664 'move' coerce_tmp[1532660](1532662 'deref' call_tmp[1531052]))
    (1927032 '=' srcstr[1531060] coerce_tmp[1532660])
    (1531062 'noop')
    val call_tmp[1531066]:[domain(1,int(64),false)] uint(64)[1450261] "dead at end of block" "expr temp" "maybe param" "temp"
    (1531068 'move' call_tmp[1531066](1531071 call _value[1456202] count[1530859]))
    ref call_tmp[1531074]:_ref(_ddata(uint(64)))[1449431] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1532668]:[domain(1,int(64),false)] uint(64)[1450261] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1532673 'move' coerce_tmp[1532668] call_tmp[1531066])
    (1531076 'move' call_tmp[1531074](1531079 call data[1452255] coerce_tmp[1532668]))
    const cnt[1531082]:_ddata(uint(64))[1449422] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[1532678]:_ddata(uint(64))[1449422] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1532682 'move' coerce_tmp[1532678](1532680 'deref' call_tmp[1531074]))
    (1927035 '=' cnt[1531082] coerce_tmp[1532678])
    (1531084 'noop')
    const-val call_tmp[1531088]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (1531090 'move' call_tmp[1531088](1531092 '_wide_get_node' dest[1531002]))
    const-val call_tmp[1531094]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1906460]:locale[28] "temp"
    (1531099 call here[90438] ret_tmp[1906460])
    (1906463 'move' call_tmp[1531094] ret_tmp[1906460])
    const-val call_tmp[1531100]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1531102 'move' call_tmp[1531100](1531105 call id[90521] call_tmp[1531094]))
    const-val call_tmp[1531108]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1532687]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1532693 'move' coerce_tmp[1532687](1532689 'cast' int(64)[13] call_tmp[1531088]))
    (1531110 'move' call_tmp[1531108](1531113 call ==[435744] coerce_tmp[1532687] call_tmp[1531100]))
    const-val call_tmp[1531116]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1531118 'move' call_tmp[1531116] call_tmp[1531108])
    if call_tmp[1531116]
    {
      val call_tmp[1531125]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[1531132]:int(32)[95] "dead at end of block" "expr temp" "maybe param" "temp"
      (1531134 'move' call_tmp[1531132](1531136 '_wide_get_node' src[1531016]))
      const-val call_tmp[1531138]:int(32)[95] "dead at end of block" "maybe param" "temp"
      (1531140 'move' call_tmp[1531138] call_tmp[1531132])
      const srclocale[1531146]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
      (1531148 'move' srclocale[1531146] call_tmp[1531138])
      ref call_tmp[1531169]:_ref(real(64))[936906] "dead after last mention" "maybe param" "temp"
      (1531171 'move' call_tmp[1531169](1531174 call this[1391523] dest[1531002] AO[1530970]))
      ref call_tmp[1531176]:_ref(uint(64))[936790] "dead after last mention" "maybe param" "temp"
      (1531178 'move' call_tmp[1531176](1531181 call this[1460086] dststr[1531038] 0))
      ref call_tmp[1531183]:_ref(real(64))[936906] "dead after last mention" "maybe param" "temp"
      (1531185 'move' call_tmp[1531183](1531188 call this[1391523] src[1531016] BO[1530988]))
      ref call_tmp[1531190]:_ref(uint(64))[936790] "dead after last mention" "maybe param" "temp"
      (1531192 'move' call_tmp[1531190](1531195 call this[1460086] srcstr[1531060] 0))
      ref call_tmp[1531197]:_ref(uint(64))[936790] "dead after last mention" "maybe param" "temp"
      (1531199 'move' call_tmp[1531197](1531202 call this[1460086] cnt[1531082] 0))
      (1531204 'chpl_comm_get_strd' call_tmp[1531169] call_tmp[1531176] srclocale[1531146] call_tmp[1531183] call_tmp[1531190] call_tmp[1531197] stridelevels[1530853])
    }
    {
      val call_tmp[1531222]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[1531229]:int(32)[95] "dead at end of block" "expr temp" "maybe param" "temp"
      (1531231 'move' call_tmp[1531229](1531233 '_wide_get_node' dest[1531002]))
      const-val call_tmp[1531235]:int(32)[95] "dead at end of block" "maybe param" "temp"
      (1531237 'move' call_tmp[1531235] call_tmp[1531229])
      const destlocale[1531243]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
      (1531245 'move' destlocale[1531243] call_tmp[1531235])
      ref call_tmp[1531334]:_ref(real(64))[936906] "dead after last mention" "maybe param" "temp"
      (1531336 'move' call_tmp[1531334](1531339 call this[1391523] dest[1531002] AO[1530970]))
      ref call_tmp[1531341]:_ref(uint(64))[936790] "dead after last mention" "maybe param" "temp"
      (1531343 'move' call_tmp[1531341](1531346 call this[1460086] dststr[1531038] 0))
      ref call_tmp[1531348]:_ref(real(64))[936906] "dead after last mention" "maybe param" "temp"
      (1531350 'move' call_tmp[1531348](1531353 call this[1391523] src[1531016] BO[1530988]))
      ref call_tmp[1531355]:_ref(uint(64))[936790] "dead after last mention" "maybe param" "temp"
      (1531357 'move' call_tmp[1531355](1531360 call this[1460086] srcstr[1531060] 0))
      ref call_tmp[1531362]:_ref(uint(64))[936790] "dead after last mention" "maybe param" "temp"
      (1531364 'move' call_tmp[1531362](1531367 call this[1460086] cnt[1531082] 0))
      (1531369 'chpl_comm_put_strd' call_tmp[1531334] call_tmp[1531341] destlocale[1531243] call_tmp[1531348] call_tmp[1531355] call_tmp[1531362] stridelevels[1530853])
    }
    (1927038 call chpl__autoDestroy[1601737] call_tmp[1531094])
    (1531387 return _void[55])
  }
  function [domain(1,int(64),false)] real(64)[1358944].doiScan[1397586](const in arg this[1397592]:[domain(1,int(64),false)] real(64)[1358944], const in arg op[1397594]:SumReduceScanOp(real(64))[1396784], const  ref arg dom[1397596]:domain(1,int(64),false)[1252786], ref arg _retArg[1914761]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val ret[1397675]:[domain(1,int(64),false)] real(64)[1366029] "dead after last mention" "RVV" "temp"
    val resType[1398205]:real(64)[16] "dead at end of block" "insert auto destroy" "type variable"
    const-val res[1398211]:[domain(1,int(64),false)] real(64)[1366029] "dead at end of block" "insert auto destroy"
    ref call_tmp[1398213]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1398215 'move' call_tmp[1398213](1398218 call chpl__ensureDomainExpr[1254163] dom[1397596]))
    const-val call_tmp[1398220]:_RuntimeTypeInfo[1366262] "dead at end of block" "expr temp" "maybe param" "temp"
    (1398222 'move' call_tmp[1398220](1398225 call chpl__buildArrayRuntimeType[1357251] call_tmp[1398213]))
    const-val _runtime_type_tmp_[1548537]:domain(1,int(64),false)[1252786] "dead at end of block" "temp"
    (1548542 'move' _runtime_type_tmp_[1548537](1878823 '.v' call_tmp[1398220] dom[1366263]))
    const-val ret_tmp[1916787]:[domain(1,int(64),false)] real(64)[1366029] "temp"
    (1548535 call chpl__convertRuntimeTypeToValue[1547084] _runtime_type_tmp_[1548537] ret_tmp[1916787])
    (1916790 'move' res[1398211] ret_tmp[1916787])
    const-val call_tmp[1398232]:(int(64),[domain(1,int(64),false)] range(int(64),bounded,false),[domain(1,int(64),false)] real(64),real(64))[1546863] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1914767]:(int(64),[domain(1,int(64),false)] range(int(64),bounded,false),[domain(1,int(64),false)] real(64),real(64))[1546863] "temp"
    (1398240 call chpl__preScan[1398341] this[1397592] op[1397594] res[1398211] dom[1397596] ret_tmp[1914767])
    (1914770 'move' call_tmp[1398232] ret_tmp[1914767])
    const-val tmp[1398244]:(int(64),[domain(1,int(64),false)] range(int(64),bounded,false),[domain(1,int(64),false)] real(64),real(64))[1546863] "dead at end of block" "insert auto destroy" "temp"
    (1398246 'move' tmp[1398244] call_tmp[1398232])
    1
    ref call_tmp[1398254]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
    (1398256 'move' call_tmp[1398254](1547839 '.' tmp[1398244] x0[1546855]))
    const-val numTasks[1398261]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[1547844]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1547848 'move' coerce_tmp[1547844](1547846 'deref' call_tmp[1398254]))
    (1925785 '=' numTasks[1398261] coerce_tmp[1547844])
    (1398263 'noop')
    ref call_tmp[1398266]:_ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976] "dead at end of block" "maybe param" "temp"
    (1398268 'move' call_tmp[1398266](1547853 '.' tmp[1398244] x1[1546857]))
    const-val rngs[1398273]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950] "dead at end of block" "insert auto destroy"
    (1398275 'move' rngs[1398273](1547856 call chpl__initCopy[1416184] call_tmp[1398266]))
    ref call_tmp[1398278]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055] "dead at end of block" "maybe param" "temp"
    (1398280 'move' call_tmp[1398278](1547861 '.' tmp[1398244] x2[1546859]))
    const-val state[1398285]:[domain(1,int(64),false)] real(64)[1366029] "dead at end of block" "insert auto destroy"
    (1398287 'move' state[1398285](1547864 call chpl__initCopy[1517672] call_tmp[1398278]))
    (1398296 call chpl__postScan[1547867] this[1397592] op[1397594] res[1398211] numTasks[1398261] rngs[1398273] state[1398285])
    (1398308 call chpl__delete[1516052] op[1397594])
    (1398311 'move' ret[1397675] res[1398211])
    (1925788 call chpl__autoDestroy[1756356] state[1398285])
    (1925791 call chpl__autoDestroy[1789708] rngs[1398273])
    (1925794 call chpl__autoDestroy[1823115] tmp[1398244])
    gotoReturn _end_doiScan[1398319] _end_doiScan[1398319]
    label _end_doiScan[1398319]
    (1914763 '=' _retArg[1914761] ret[1397675])
    (1914765 return _void[55])
  }
  function [domain(1,int(64),false)] real(64)[1358944].chpl__preScan[1398341](const in arg this[1398347]:[domain(1,int(64),false)] real(64)[1358944], const in arg op[1398349]:SumReduceScanOp(real(64))[1396784], const  ref arg res[1398351]:[domain(1,int(64),false)] real(64)[1366029], const  ref arg dom[1398353]:domain(1,int(64),false)[1252786], ref arg _retArg[1914773]:_ref((int(64),[domain(1,int(64),false)] range(int(64),bounded,false),[domain(1,int(64),false)] real(64),real(64)))[1547061]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val ret[1398355]:(int(64),[domain(1,int(64),false)] range(int(64),bounded,false),[domain(1,int(64),false)] real(64),real(64))[1546863] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1398374]:range(int(64),bounded,false)[1027003] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1914779]:range(int(64),bounded,false)[1027003] "temp"
    (1398382 call dim[1399245] dom[1398353] ret_tmp[1914779])
    (1914782 'move' call_tmp[1398374] ret_tmp[1914779])
    const-val rng[1398384]:range(int(64),bounded,false)[1027003] "dead at end of block" "const" "insert auto destroy"
    (1398386 'move' rng[1398384] call_tmp[1398374])
    const-val numTasks[1398390]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val tmp[1398392]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1398394]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1398396]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1398398 'move' call_tmp[1398396](1398400 'task_get_serial'))
    (1398401 'move' tmp[1398394] call_tmp[1398396])
    if tmp[1398394]
    {
      (1398408 'move' tmp[1398392] 1)
    }
    {
      const-val tmp[1398414]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1398416]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1398418 'move' call_tmp[1398416](1398421 call size[1035978] rng[1398384]))
      (1398424 'move' tmp[1398414](1398427 call _computeNumChunks[1262511] call_tmp[1398416]))
      (1398429 'move' tmp[1398392] tmp[1398414])
    }
    (1398435 'move' numTasks[1398390] tmp[1398392])
    const-val call_tmp[1398439]:_ir_chunks[1400366] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1914791]:_ir_chunks[1400366] "temp"
    (1398444 call chunks[1399928] rng[1398384] numTasks[1398390] Thru[266548] ret_tmp[1914791])
    (1914794 'move' call_tmp[1398439] ret_tmp[1914791])
    const rngs[1398449]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950] "dead at end of block" "const" "insert auto destroy"
    val error[1887772]:Error[167984] "error variable" "temp"
    (1887774 'move' error[1887772] nil[44])
    (1398451 'move' rngs[1398449](1403031 call chpl__initCopy[1404942] call_tmp[1398439] error[1887772]))
    val errorExists[2223872]:bool[10] "temp"
    (2223877 'move' errorExists[2223872](2223874 '!=' error[1887772] nil[44]))
    if errorExists[2223872]
    {
      (1887777 call chpl_propagate_error[170518] error[1887772])
    }
    val state[1398478]:[domain(1,int(64),false)] real(64)[1366029] "dead at end of block" "insert auto destroy"
    const-val call_tmp[1398480]:domain(1,int(64),false)[1252786] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1916195]:domain(1,int(64),false)[1252786] "temp"
    (1398485 call indices[1510406] rngs[1398449] ret_tmp[1916195])
    (1916198 'move' call_tmp[1398480] ret_tmp[1916195])
    ref call_tmp[1398488]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1398490 'move' call_tmp[1398488](1398493 call chpl__ensureDomainExpr[1254163] call_tmp[1398480]))
    val call_tmp[1398495]:real(64)[16] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1398503]:_RuntimeTypeInfo[1366262] "dead at end of block" "expr temp" "maybe param" "temp"
    (1398505 'move' call_tmp[1398503](1398508 call chpl__buildArrayRuntimeType[1357251] call_tmp[1398488]))
    const-val _runtime_type_tmp_[1547072]:domain(1,int(64),false)[1252786] "dead at end of block" "temp"
    (1547077 'move' _runtime_type_tmp_[1547072](1878814 '.v' call_tmp[1398503] dom[1366263]))
    const-val ret_tmp[1916781]:[domain(1,int(64),false)] real(64)[1366029] "temp"
    (1547070 call chpl__convertRuntimeTypeToValue[1547084] _runtime_type_tmp_[1547072] ret_tmp[1916781])
    (1916784 'move' state[1398478] ret_tmp[1916781])
    const-val call_tmp[1398515]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1398517 'move' call_tmp[1398515](1398520 call ==[435744] numTasks[1398390] 1))
    const-val call_tmp[1398523]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1398525 'move' call_tmp[1398523] call_tmp[1398515])
    if call_tmp[1398523]
    {
      const-val call_tmp[1398532]:domain(1,int(64),false)[1252786] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1916201]:domain(1,int(64),false)[1252786] "temp"
      (1398537 call indices[1510406] rngs[1398449] ret_tmp[1916201])
      (1916204 'move' call_tmp[1398532] ret_tmp[1916201])
      const-val call_tmp[1398540]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1398542 'move' call_tmp[1398540](1398545 call low[1510489] call_tmp[1398532]))
      (1398549 call preScanChunk[1510535] call_tmp[1398540] op[1398349] rngs[1398449] res[1398351] state[1398478] this[1398347])
      (1925798 call chpl__autoDestroy[1697012] call_tmp[1398532])
    }
    {
      {
        const-val tmpIter[1398555]:domain(1,int(64),false)[1252786] "dead at end of block" "expr temp" "insert auto destroy" "maybe ref" "no copy" "temp"
        const-val ret_tmp[1916207]:domain(1,int(64),false)[1252786] "temp"
        (1398560 call indices[1510406] rngs[1398449] ret_tmp[1916207])
        (1916210 'move' tmpIter[1398555] ret_tmp[1916207])
        {
          const _coforallCount[1398691]:_EndCount(AtomicT(int(64)),int(64))[945532] "dead after last mention" "concurrently accessed" "const" "end count" "temp"
          (1398693 'move' _coforallCount[1398691](1398696 call _endCountAlloc[1228107]))
          const-val numTasks[1398698]:int(64)[13] "dead at end of block" "temp"
          (1398700 'move' numTasks[1398698](1398703 call size[1435624] tmpIter[1398555]))
          (1398707 call _upEndCount[1228350] _coforallCount[1398691] numTasks[1398698])
          (1398713 call chpl_resetTaskSpawn[1229432] numTasks[1398698])
          val _indexOfInterest[1398716]:int(64)[13] "dead at end of block" "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1398718]:_ic_these__ref__domain_DefaultRectangularDom_1_int64_t_F[1314972] "dead at end of block" "expr temp" "temp"
          (1398720 'move' _iterator[1398718](1398723 call _getIterator[1306149] tmpIter[1398555]))
          {
            val ret[2008566]:_ir_these__ref__domain_DefaultRectangularDom_1_int64_t_F[1314978] "dead after last mention" "RVV" "temp"
            val _indexOfInterest[2008568]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[2008570]:_ic_these_DefaultRectangularDom_1_int64_t_F[1306903] "dead at end of block" "expr temp" "temp"
            val call_tmp[2008572]:domain(1,int(64),false)[1251123] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val this[2008751]:domain(1,int(64),false)[1252786] "temp"
            (2008756 'move' this[2008751](2008753 '.v' _iterator[1398718] F0_this[2126839]))
            (2008574 'move' call_tmp[2008572](2008577 call _value[1253027] this[2008751]))
            const-val call_tmp[2008579]:_ir_these_DefaultRectangularDom_1_int64_t_F[1306909] "dead at end of block" "expr temp" "maybe param" "temp"
            val coerce_tmp[2008581]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (2008583 'move' coerce_tmp[2008581] call_tmp[2008572])
            const-val default_arg_tasksPerLocale[2008586]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
            (2008588 'move' default_arg_tasksPerLocale[2008586](2008591 call these_default_tasksPerLocale[1306713] call_tmp[2008572]))
            const-val default_arg_ignoreRunning[2008593]:bool[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
            (2008595 'move' default_arg_ignoreRunning[2008593](2008598 call these_default_ignoreRunning[1306744] coerce_tmp[2008581]))
            const-val default_arg_minIndicesPerTask[2008600]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
            (2008602 'move' default_arg_minIndicesPerTask[2008600](2008605 call these_default_minIndicesPerTask[1306775] coerce_tmp[2008581]))
            const-val default_arg_offset[2008607]:1*int(64)[1256714] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
            const-val ret_tmp[2008609]:1*int(64)[1256714] "temp"
            (2008612 call these_default_offset[1306806] coerce_tmp[2008581] ret_tmp[2008609])
            (2008615 'move' default_arg_offset[2008607] ret_tmp[2008609])
            const-val ret_tmp[2008618]:_ir_these_DefaultRectangularDom_1_int64_t_F[1306909] "temp"
            (2008621 call these[1306280] coerce_tmp[2008581] default_arg_tasksPerLocale[2008586] default_arg_ignoreRunning[2008593] default_arg_minIndicesPerTask[2008600] default_arg_offset[2008607] ret_tmp[2008618])
            (2008628 'move' call_tmp[2008579] ret_tmp[2008618])
            (2008631 'move' _iterator[2008570](2008634 call _getIterator[1306918] call_tmp[2008579]))
            {
              val ret[2008637]:_ir_these_DefaultRectangularDom_1_int64_t_F[1306909] "dead after last mention" "RVV" "temp"
              val _indexOfInterest[2008639]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[2008641]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
              ref call_tmp[2008643]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
              ref _this_tmp_[2008645]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "temp"
              const-val this[2008647]:domain(1,int(64),false)[1251123] "temp"
              (2008649 'move' this[2008647](2008651 '.v' _iterator[2008570] F0_this[2128060]))
              (2008654 'move' _this_tmp_[2008645](2008657 call ranges[1251533] this[2008647]))
              (2008659 'move' call_tmp[2008643](2008661 '.' _this_tmp_[2008645] x0[1244883]))
              (2008664 'move' _iterator[2008641](2008667 call _getIterator[1095509] call_tmp[2008643]))
              {
                val ret[2076003]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
                const-val _return_tmp_[2076005]:bool[10] "dead after last mention" "temp"
                const-val this[2076151]:range(int(64),bounded,false)[1027003] "temp"
                (2076156 'move' this[2076151](2076153 '.v' _iterator[2008641] F0_this[2113071]))
                (2076007 'move' _return_tmp_[2076005](2076010 call checkIfIterWillOverflow[1096003] this[2076151] 1))
                val i[2076013]:int(64)[13] "dead at end of block" "insert auto destroy"
                val call_tmp[2076015]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (2076017 'move' i[2076013] 0)
                ref call_tmp[2076020]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
                const-val this[2076158]:range(int(64),bounded,false)[1027003] "temp"
                (2076163 'move' this[2076158](2076160 '.v' _iterator[2008641] F0_this[2113071]))
                (2076022 'move' call_tmp[2076020](2076025 call _low[1028641] this[2076158]))
                const-val start[2076027]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[2076029]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (2076031 'move' coerce_tmp[2076029](2076033 'deref' call_tmp[2076020]))
                (2076035 '=' start[2076027] coerce_tmp[2076029])
                (2076038 'noop')
                ref call_tmp[2076039]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
                const-val this[2076165]:range(int(64),bounded,false)[1027003] "temp"
                (2076170 'move' this[2076165](2076167 '.v' _iterator[2008641] F0_this[2113071]))
                (2076041 'move' call_tmp[2076039](2076044 call _high[1028849] this[2076165]))
                const end[2076046]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[2076048]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (2076050 'move' coerce_tmp[2076048](2076052 'deref' call_tmp[2076039]))
                (2076054 '=' end[2076046] coerce_tmp[2076048])
                (2076057 'noop')
                CForLoop[2076058] hazard
                {
                  const-val yret[2076073]:int(64)[13] "dead after last mention" "YVV" "temp"
                  const-val call_tmp[2076075]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val this[2076172]:range(int(64),bounded,false)[1027003] "temp"
                  (2076177 'move' this[2076172](2076174 '.v' _iterator[2008641] F0_this[2113071]))
                  (2076077 'move' call_tmp[2076075](2076080 call chpl_intToIdx[1028669] this[2076172] i[2076013]))
                  (2076083 'move' yret[2076073] call_tmp[2076075])
                  const-val _yieldedIndex[2076097]:int(64)[13] "temp"
                  (2076149 'move' _yieldedIndex[2076097] call_tmp[2076075])
                  {
                    const-val i[2076099]:int(64)[13] "const" "index var" "insert auto destroy"
                    (2076101 'move' i[2076099] _yieldedIndex[2076097])
                    const-val yret[2076104]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (2076106 'move' yret[2076104] _yieldedIndex[2076097])
                    const-val _yieldedIndex[2076109]:int(64)[13] "temp"
                    (2076111 'move' _yieldedIndex[2076109] _yieldedIndex[2076097])
                    {
                      const-val i[2076115]:int(64)[13] "const" "index var" "insert auto destroy"
                      (2076117 'move' i[2076115] _yieldedIndex[2076109])
                      const-val yret[2076120]:int(64)[13] "dead after last mention" "YVV" "temp"
                      (2076122 'move' yret[2076120] _yieldedIndex[2076109])
                      const-val _yieldedIndex[2076125]:int(64)[13] "coforall index var" "temp"
                      (2076127 'move' _yieldedIndex[2076125] _yieldedIndex[2076109])
                      {
                        const-val tid[2076131]:int(64)[13] "coforall index var" "const" "index var" "insert auto destroy"
                        (2076133 'move' tid[2076131] _yieldedIndex[2076125])
                        val _args_forcoforall_fn[2206457]:_class_localscoforall_fn[2206439] "temp"
                        (2206461 'move' _args_forcoforall_fn[2206457](2206459 'stack allocate class' _class_localscoforall_fn[2206439]))
                        (2206463 '.=' _args_forcoforall_fn[2206457] _0__coforallCount[2206442] _coforallCount[1398691])
                        (2206467 '.=' _args_forcoforall_fn[2206457] _1_op[2206444] op[1398349])
                        (2206471 '.=' _args_forcoforall_fn[2206457] _2_this[2206446] this[1398347])
                        (2206475 '.=' _args_forcoforall_fn[2206457] _3_rngs[2206448] rngs[1398449])
                        (2206479 '.=' _args_forcoforall_fn[2206457] _4_res[2206450] res[1398351])
                        (2206483 '.=' _args_forcoforall_fn[2206457] _5_state[2206452] state[1398478])
                        (2206487 '.=' _args_forcoforall_fn[2206457] _6_tid[2206454] tid[2076131])
                        val _args_vforcoforall_fn[2206491]:c_void_ptr[149] "temp"
                        (2206495 'move' _args_vforcoforall_fn[2206491](2206493 'cast_to_void_star' _args_forcoforall_fn[2206457]))
                        val _args_sizecoforall_fn[2206497]:int(64)[13] "temp"
                        (2206501 'move' _args_sizecoforall_fn[2206497](2206499 'sizeof_bundle' _class_localscoforall_fn[2206439]))
                        ref _taskListcoforall_fn[2206503]:c_void_ptr[149] "temp"
                        (2206508 'move' _taskListcoforall_fn[2206503](2206505 '.' _coforallCount[1398691] taskList[12712]))
                        val _taskListNodecoforall_fn[2206510]:int(64)[13] "temp"
                        (2206514 'move' _taskListNodecoforall_fn[2206510](2206512 '_wide_get_node' _coforallCount[1398691]))
                        (2206602 call wrapcoforall_fn[2206516] _taskListcoforall_fn[2206503] _taskListNodecoforall_fn[2206510] _args_vforcoforall_fn[2206491] _args_sizecoforall_fn[2206497] _args_forcoforall_fn[2206457])
                        {
                        }
                        label _continueLabel[2076146]
                      }
                    }
                  }
                  {
                    (2076060 '=' i[2076013] coerce_tmp[2076029])
                  }
                  {
                    (2076064 '<=' i[2076013] end[2076046])
                  }
                  {
                    val call_tmp[2076068]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    (2076070 '+=' i[2076013] 1)
                  }
                }
                label _endthese[2076093]
              }
              (2008715 call _freeIterator[1102195] _iterator[2008641])
              label _endthese[2008717]
            }
            (2008720 call _freeIterator[1314906] _iterator[2008570])
            (2008723 call chpl__autoDestroy[1697253] default_arg_offset[2008607])
            label _endthese[2008725]
          }
          label _breakLabel[1398768]
          val error[1887785]:Error[167984] "error variable" "temp"
          (1887787 'move' error[1887785] nil[44])
          (1398776 call _waitEndCount[1235226] _coforallCount[1398691] numTasks[1398698] error[1887785])
          val errorExists[2223880]:bool[10] "temp"
          (2223885 'move' errorExists[2223880](2223882 '!=' error[1887785] nil[44]))
          if errorExists[2223880]
          {
            (1887790 call chpl_propagate_error[170518] error[1887785])
          }
          (1925804 call _endCountFree[1234049] _coforallCount[1398691])
          (1925808 call _freeIterator[1315735] _iterator[1398718])
        }
        (1925811 call chpl__autoDestroy[1697012] tmpIter[1398555])
      }
    }
    val call_tmp[1399049]:SumReduceScanOp(real(64))[1396784] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1517257]:SumReduceScanOp(real(64))[1396784] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1517262 'move' coerce_tmp[1517257] op[1398349])
    (1399051 'move' call_tmp[1399049](1399057 call clone[1510711] coerce_tmp[1517257]))
    const metaop[1399058]:SumReduceScanOp(real(64))[1396784] "dead at end of block" "const" "insert auto destroy"
    (1399060 'move' metaop[1399058](1517265 call chpl__initCopy[1510806] call_tmp[1399049]))
    const-val call_tmp[1399064]:real(64)[16] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1517268]:SumReduceScanOp(real(64))[1396784] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1517273 'move' coerce_tmp[1517268] metaop[1399058])
    (1399066 'move' call_tmp[1399064](1399069 call identity[1397834] coerce_tmp[1517268]))
    val call_tmp[1399072]:real(64)[16] "dead after last mention" "maybe param" "temp" "type variable"
    val next[1399080]:real(64)[16] "dead at end of block" "insert auto destroy"
    (1399082 'move' next[1399080] call_tmp[1399064])
    {
      val _indexOfInterest[1399093]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[1399095]:_ic_these__ref__domain_DefaultRectangularDom_1_int64_t_F[1314972] "dead at end of block" "expr temp" "temp"
      const-val call_tmp[1399097]:domain(1,int(64),false)[1252786] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1916213]:domain(1,int(64),false)[1252786] "temp"
      (1399102 call indices[1510406] rngs[1398449] ret_tmp[1916213])
      (1916216 'move' call_tmp[1399097] ret_tmp[1916213])
      (1399105 'move' _iterator[1399095](1399108 call _getIterator[1306149] call_tmp[1399097]))
      {
        val ret[2008759]:_ir_these__ref__domain_DefaultRectangularDom_1_int64_t_F[1314978] "dead after last mention" "RVV" "temp"
        val _indexOfInterest[2008761]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[2008763]:_ic_these_DefaultRectangularDom_1_int64_t_F[1306903] "dead at end of block" "expr temp" "temp"
        val call_tmp[2008765]:domain(1,int(64),false)[1251123] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val this[2008977]:domain(1,int(64),false)[1252786] "temp"
        (2008982 'move' this[2008977](2008979 '.v' _iterator[1399095] F0_this[2126839]))
        (2008767 'move' call_tmp[2008765](2008770 call _value[1253027] this[2008977]))
        const-val call_tmp[2008772]:_ir_these_DefaultRectangularDom_1_int64_t_F[1306909] "dead at end of block" "expr temp" "maybe param" "temp"
        val coerce_tmp[2008774]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (2008776 'move' coerce_tmp[2008774] call_tmp[2008765])
        const-val default_arg_tasksPerLocale[2008779]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (2008781 'move' default_arg_tasksPerLocale[2008779](2008784 call these_default_tasksPerLocale[1306713] call_tmp[2008765]))
        const-val default_arg_ignoreRunning[2008786]:bool[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (2008788 'move' default_arg_ignoreRunning[2008786](2008791 call these_default_ignoreRunning[1306744] coerce_tmp[2008774]))
        const-val default_arg_minIndicesPerTask[2008793]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (2008795 'move' default_arg_minIndicesPerTask[2008793](2008798 call these_default_minIndicesPerTask[1306775] coerce_tmp[2008774]))
        const-val default_arg_offset[2008800]:1*int(64)[1256714] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        const-val ret_tmp[2008802]:1*int(64)[1256714] "temp"
        (2008805 call these_default_offset[1306806] coerce_tmp[2008774] ret_tmp[2008802])
        (2008808 'move' default_arg_offset[2008800] ret_tmp[2008802])
        const-val ret_tmp[2008811]:_ir_these_DefaultRectangularDom_1_int64_t_F[1306909] "temp"
        (2008814 call these[1306280] coerce_tmp[2008774] default_arg_tasksPerLocale[2008779] default_arg_ignoreRunning[2008786] default_arg_minIndicesPerTask[2008793] default_arg_offset[2008800] ret_tmp[2008811])
        (2008821 'move' call_tmp[2008772] ret_tmp[2008811])
        (2008824 'move' _iterator[2008763](2008827 call _getIterator[1306918] call_tmp[2008772]))
        {
          val ret[2008830]:_ir_these_DefaultRectangularDom_1_int64_t_F[1306909] "dead after last mention" "RVV" "temp"
          val _indexOfInterest[2008832]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[2008834]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
          ref call_tmp[2008836]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
          ref _this_tmp_[2008838]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "temp"
          const-val this[2008840]:domain(1,int(64),false)[1251123] "temp"
          (2008842 'move' this[2008840](2008844 '.v' _iterator[2008763] F0_this[2128060]))
          (2008847 'move' _this_tmp_[2008838](2008850 call ranges[1251533] this[2008840]))
          (2008852 'move' call_tmp[2008836](2008854 '.' _this_tmp_[2008838] x0[1244883]))
          (2008857 'move' _iterator[2008834](2008860 call _getIterator[1095509] call_tmp[2008836]))
          {
            val ret[2076180]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
            const-val _return_tmp_[2076182]:bool[10] "dead after last mention" "temp"
            const-val this[2076361]:range(int(64),bounded,false)[1027003] "temp"
            (2076366 'move' this[2076361](2076363 '.v' _iterator[2008834] F0_this[2113071]))
            (2076184 'move' _return_tmp_[2076182](2076187 call checkIfIterWillOverflow[1096003] this[2076361] 1))
            val i[2076190]:int(64)[13] "dead at end of block" "insert auto destroy"
            val call_tmp[2076192]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (2076194 'move' i[2076190] 0)
            ref call_tmp[2076197]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[2076368]:range(int(64),bounded,false)[1027003] "temp"
            (2076373 'move' this[2076368](2076370 '.v' _iterator[2008834] F0_this[2113071]))
            (2076199 'move' call_tmp[2076197](2076202 call _low[1028641] this[2076368]))
            const-val start[2076204]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[2076206]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (2076208 'move' coerce_tmp[2076206](2076210 'deref' call_tmp[2076197]))
            (2076212 '=' start[2076204] coerce_tmp[2076206])
            (2076215 'noop')
            ref call_tmp[2076216]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[2076375]:range(int(64),bounded,false)[1027003] "temp"
            (2076380 'move' this[2076375](2076377 '.v' _iterator[2008834] F0_this[2113071]))
            (2076218 'move' call_tmp[2076216](2076221 call _high[1028849] this[2076375]))
            const end[2076223]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[2076225]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (2076227 'move' coerce_tmp[2076225](2076229 'deref' call_tmp[2076216]))
            (2076231 '=' end[2076223] coerce_tmp[2076225])
            (2076234 'noop')
            CForLoop[2076235]
            {
              const-val yret[2076250]:int(64)[13] "dead after last mention" "YVV" "temp"
              const-val call_tmp[2076252]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val this[2076382]:range(int(64),bounded,false)[1027003] "temp"
              (2076387 'move' this[2076382](2076384 '.v' _iterator[2008834] F0_this[2113071]))
              (2076254 'move' call_tmp[2076252](2076257 call chpl_intToIdx[1028669] this[2076382] i[2076190]))
              (2076260 'move' yret[2076250] call_tmp[2076252])
              const-val _yieldedIndex[2076274]:int(64)[13] "temp"
              (2076359 'move' _yieldedIndex[2076274] call_tmp[2076252])
              {
                const-val i[2076276]:int(64)[13] "const" "index var" "insert auto destroy"
                (2076278 'move' i[2076276] _yieldedIndex[2076274])
                const-val yret[2076281]:int(64)[13] "dead after last mention" "YVV" "temp"
                (2076283 'move' yret[2076281] _yieldedIndex[2076274])
                const-val _yieldedIndex[2076286]:int(64)[13] "temp"
                (2076288 'move' _yieldedIndex[2076286] _yieldedIndex[2076274])
                {
                  const-val i[2076292]:int(64)[13] "const" "index var" "insert auto destroy"
                  (2076294 'move' i[2076292] _yieldedIndex[2076286])
                  const-val yret[2076297]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (2076299 'move' yret[2076297] _yieldedIndex[2076286])
                  const-val _yieldedIndex[2076302]:int(64)[13] "temp"
                  (2076304 'move' _yieldedIndex[2076302] _yieldedIndex[2076286])
                  {
                    const-val i[2076308]:int(64)[13] "const" "index var" "insert auto destroy"
                    (2076310 'move' i[2076308] _yieldedIndex[2076302])
                    {
                      ref call_tmp[2076314]:_ref(real(64))[936906] "dead after last mention" "maybe param" "temp"
                      (2076316 'move' call_tmp[2076314](2076319 call this[1513714] state[1398478] i[2076308]))
                      (2076323 call <=>[1517298] call_tmp[2076314] next[1399080])
                      ref call_tmp[2076326]:_ref(real(64))[936906] "dead after last mention" "maybe param" "temp"
                      val tmp[2076328]:real(64)[16] "temp"
                      (2076330 'move' tmp[2076328](2076333 call this[1513830] state[1398478] i[2076308]))
                      (2076336 'move' call_tmp[2076326](2076338 'addr of' tmp[2076328]))
                      val coerce_tmp[2076340]:SumReduceScanOp(real(64))[1396784] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (2076342 'move' coerce_tmp[2076340] metaop[1399058])
                      const-val coerce_tmp[2076345]:real(64)[16] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (2076347 'move' coerce_tmp[2076345](2076349 'deref' call_tmp[2076326]))
                      (2076352 call accumulateOntoState[1517363] coerce_tmp[2076340] next[1399080] coerce_tmp[2076345])
                    }
                    label _continueLabel[2076356]
                  }
                }
              }
              {
                (2076237 '=' i[2076190] coerce_tmp[2076206])
              }
              {
                (2076241 '<=' i[2076190] end[2076223])
              }
              {
                val call_tmp[2076245]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (2076247 '+=' i[2076190] 1)
              }
            }
            label _endthese[2076270]
          }
          (2008908 call _freeIterator[1102195] _iterator[2008834])
          label _endthese[2008910]
        }
        (2008913 call _freeIterator[1314906] _iterator[2008763])
        (2008916 call chpl__autoDestroy[1697253] default_arg_offset[2008800])
        label _endthese[2008918]
      }
      label _breakLabel[1399169]
      (1925817 call _freeIterator[1315735] _iterator[1399095])
      (1925819 call chpl__autoDestroy[1697012] call_tmp[1399097])
    }
    (1399172 call chpl__delete[1516052] metaop[1399058])
    const-val call_tmp[1399192]:(int(64),[domain(1,int(64),false)] range(int(64),bounded,false),[domain(1,int(64),false)] real(64),real(64))[1517535] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1916265]:(int(64),[domain(1,int(64),false)] range(int(64),bounded,false),[domain(1,int(64),false)] real(64),real(64))[1517535] "temp"
    (1399197 call _build_tuple[1517477] numTasks[1398390] rngs[1398449] state[1398478] next[1399080] ret_tmp[1916265])
    (1916268 'move' call_tmp[1399192] ret_tmp[1916265])
    val array_unref_ret_tmp[1517649]:(int(64),[domain(1,int(64),false)] range(int(64),bounded,false),[domain(1,int(64),false)] real(64),real(64))[1517535] "dead after last mention" "no copy" "temp"
    (1517650 'move' array_unref_ret_tmp[1517649] call_tmp[1399192])
    const-val ret_tmp[1916289]:(int(64),[domain(1,int(64),false)] range(int(64),bounded,false),[domain(1,int(64),false)] real(64),real(64))[1546863] "temp"
    (1517652 call chpl__unref[1517656] array_unref_ret_tmp[1517649] ret_tmp[1916289])
    (1916292 'move' ret[1398355] ret_tmp[1916289])
    (1925822 call chpl__autoDestroy[1822072] call_tmp[1399192])
    (1925825 call chpl__autoDestroy[1756356] state[1398478])
    (1925828 call chpl__autoDestroy[1697012] call_tmp[1398480])
    (1925831 call chpl__autoDestroy[1789708] rngs[1398449])
    (1925834 call chpl__autoDestroy[1407763] rng[1398384])
    gotoReturn _end_chpl__preScan[1399213] _end_chpl__preScan[1399213]
    label _end_chpl__preScan[1399213]
    (1914775 '=' _retArg[1914773] ret[1398355])
    (1914777 return _void[55])
  }
  function [domain(1,int(64),false)] real(64)[1358944].chpl__postScan[1547867](const in arg this[1547873]:[domain(1,int(64),false)] real(64)[1358944], const in arg op[1547875]:SumReduceScanOp(real(64))[1396784], const  ref arg res[1547877]:[domain(1,int(64),false)] real(64)[1366029], const in arg numTasks[1547879]:int(64)[13], const  ref arg rngs[1547881]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950], const  ref arg state[1547883]:[domain(1,int(64),false)] real(64)[1366029]) : void[4] "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    const-val call_tmp[1547899]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1547901 'move' call_tmp[1547899](1547904 call ==[435744] numTasks[1547879] 1))
    const-val call_tmp[1547907]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1547909 'move' call_tmp[1547907] call_tmp[1547899])
    if call_tmp[1547907]
    {
      const-val call_tmp[1547916]:domain(1,int(64),false)[1252786] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1916219]:domain(1,int(64),false)[1252786] "temp"
      (1547921 call indices[1510406] rngs[1547881] ret_tmp[1916219])
      (1916222 'move' call_tmp[1547916] ret_tmp[1916219])
      const-val call_tmp[1547924]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1547926 'move' call_tmp[1547924](1547929 call low[1510489] call_tmp[1547916]))
      (1547933 call postScanChunk[1548342] call_tmp[1547924] state[1547883] rngs[1547881] res[1547877] op[1547875])
      (1927146 call chpl__autoDestroy[1697012] call_tmp[1547916])
    }
    {
      {
        const-val tmpIter[1547937]:domain(1,int(64),false)[1252786] "dead at end of block" "expr temp" "insert auto destroy" "maybe ref" "no copy" "temp"
        const-val ret_tmp[1916225]:domain(1,int(64),false)[1252786] "temp"
        (1547942 call indices[1510406] rngs[1547881] ret_tmp[1916225])
        (1916228 'move' tmpIter[1547937] ret_tmp[1916225])
        {
          const _coforallCount[1548073]:_EndCount(AtomicT(int(64)),int(64))[945532] "dead after last mention" "concurrently accessed" "const" "end count" "temp"
          (1548075 'move' _coforallCount[1548073](1548078 call _endCountAlloc[1228107]))
          const-val numTasks[1548080]:int(64)[13] "dead at end of block" "temp"
          (1548082 'move' numTasks[1548080](1548085 call size[1435624] tmpIter[1547937]))
          (1548089 call _upEndCount[1228350] _coforallCount[1548073] numTasks[1548080])
          (1548095 call chpl_resetTaskSpawn[1229432] numTasks[1548080])
          val _indexOfInterest[1548098]:int(64)[13] "dead at end of block" "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1548100]:_ic_these__ref__domain_DefaultRectangularDom_1_int64_t_F[1314972] "dead at end of block" "expr temp" "temp"
          (1548102 'move' _iterator[1548100](1548105 call _getIterator[1306149] tmpIter[1547937]))
          {
            val ret[2017794]:_ir_these__ref__domain_DefaultRectangularDom_1_int64_t_F[1314978] "dead after last mention" "RVV" "temp"
            val _indexOfInterest[2017796]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[2017798]:_ic_these_DefaultRectangularDom_1_int64_t_F[1306903] "dead at end of block" "expr temp" "temp"
            val call_tmp[2017800]:domain(1,int(64),false)[1251123] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val this[2017978]:domain(1,int(64),false)[1252786] "temp"
            (2017983 'move' this[2017978](2017980 '.v' _iterator[1548100] F0_this[2126839]))
            (2017802 'move' call_tmp[2017800](2017805 call _value[1253027] this[2017978]))
            const-val call_tmp[2017807]:_ir_these_DefaultRectangularDom_1_int64_t_F[1306909] "dead at end of block" "expr temp" "maybe param" "temp"
            val coerce_tmp[2017809]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (2017811 'move' coerce_tmp[2017809] call_tmp[2017800])
            const-val default_arg_tasksPerLocale[2017814]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
            (2017816 'move' default_arg_tasksPerLocale[2017814](2017819 call these_default_tasksPerLocale[1306713] call_tmp[2017800]))
            const-val default_arg_ignoreRunning[2017821]:bool[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
            (2017823 'move' default_arg_ignoreRunning[2017821](2017826 call these_default_ignoreRunning[1306744] coerce_tmp[2017809]))
            const-val default_arg_minIndicesPerTask[2017828]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
            (2017830 'move' default_arg_minIndicesPerTask[2017828](2017833 call these_default_minIndicesPerTask[1306775] coerce_tmp[2017809]))
            const-val default_arg_offset[2017835]:1*int(64)[1256714] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
            const-val ret_tmp[2017837]:1*int(64)[1256714] "temp"
            (2017840 call these_default_offset[1306806] coerce_tmp[2017809] ret_tmp[2017837])
            (2017843 'move' default_arg_offset[2017835] ret_tmp[2017837])
            const-val ret_tmp[2017846]:_ir_these_DefaultRectangularDom_1_int64_t_F[1306909] "temp"
            (2017849 call these[1306280] coerce_tmp[2017809] default_arg_tasksPerLocale[2017814] default_arg_ignoreRunning[2017821] default_arg_minIndicesPerTask[2017828] default_arg_offset[2017835] ret_tmp[2017846])
            (2017856 'move' call_tmp[2017807] ret_tmp[2017846])
            (2017859 'move' _iterator[2017798](2017862 call _getIterator[1306918] call_tmp[2017807]))
            {
              val ret[2017865]:_ir_these_DefaultRectangularDom_1_int64_t_F[1306909] "dead after last mention" "RVV" "temp"
              val _indexOfInterest[2017867]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[2017869]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
              ref call_tmp[2017871]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
              ref _this_tmp_[2017873]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "temp"
              const-val this[2017875]:domain(1,int(64),false)[1251123] "temp"
              (2017877 'move' this[2017875](2017879 '.v' _iterator[2017798] F0_this[2128060]))
              (2017882 'move' _this_tmp_[2017873](2017885 call ranges[1251533] this[2017875]))
              (2017887 'move' call_tmp[2017871](2017889 '.' _this_tmp_[2017873] x0[1244883]))
              (2017892 'move' _iterator[2017869](2017895 call _getIterator[1095509] call_tmp[2017871]))
              {
                val ret[2083638]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
                const-val _return_tmp_[2083640]:bool[10] "dead after last mention" "temp"
                const-val this[2083785]:range(int(64),bounded,false)[1027003] "temp"
                (2083790 'move' this[2083785](2083787 '.v' _iterator[2017869] F0_this[2113071]))
                (2083642 'move' _return_tmp_[2083640](2083645 call checkIfIterWillOverflow[1096003] this[2083785] 1))
                val i[2083648]:int(64)[13] "dead at end of block" "insert auto destroy"
                val call_tmp[2083650]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (2083652 'move' i[2083648] 0)
                ref call_tmp[2083655]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
                const-val this[2083792]:range(int(64),bounded,false)[1027003] "temp"
                (2083797 'move' this[2083792](2083794 '.v' _iterator[2017869] F0_this[2113071]))
                (2083657 'move' call_tmp[2083655](2083660 call _low[1028641] this[2083792]))
                const-val start[2083662]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[2083664]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (2083666 'move' coerce_tmp[2083664](2083668 'deref' call_tmp[2083655]))
                (2083670 '=' start[2083662] coerce_tmp[2083664])
                (2083673 'noop')
                ref call_tmp[2083674]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
                const-val this[2083799]:range(int(64),bounded,false)[1027003] "temp"
                (2083804 'move' this[2083799](2083801 '.v' _iterator[2017869] F0_this[2113071]))
                (2083676 'move' call_tmp[2083674](2083679 call _high[1028849] this[2083799]))
                const end[2083681]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[2083683]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (2083685 'move' coerce_tmp[2083683](2083687 'deref' call_tmp[2083674]))
                (2083689 '=' end[2083681] coerce_tmp[2083683])
                (2083692 'noop')
                CForLoop[2083693] hazard
                {
                  const-val yret[2083708]:int(64)[13] "dead after last mention" "YVV" "temp"
                  const-val call_tmp[2083710]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val this[2083806]:range(int(64),bounded,false)[1027003] "temp"
                  (2083811 'move' this[2083806](2083808 '.v' _iterator[2017869] F0_this[2113071]))
                  (2083712 'move' call_tmp[2083710](2083715 call chpl_intToIdx[1028669] this[2083806] i[2083648]))
                  (2083718 'move' yret[2083708] call_tmp[2083710])
                  const-val _yieldedIndex[2083732]:int(64)[13] "temp"
                  (2083783 'move' _yieldedIndex[2083732] call_tmp[2083710])
                  {
                    const-val i[2083734]:int(64)[13] "const" "index var" "insert auto destroy"
                    (2083736 'move' i[2083734] _yieldedIndex[2083732])
                    const-val yret[2083739]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (2083741 'move' yret[2083739] _yieldedIndex[2083732])
                    const-val _yieldedIndex[2083744]:int(64)[13] "temp"
                    (2083746 'move' _yieldedIndex[2083744] _yieldedIndex[2083732])
                    {
                      const-val i[2083750]:int(64)[13] "const" "index var" "insert auto destroy"
                      (2083752 'move' i[2083750] _yieldedIndex[2083744])
                      const-val yret[2083755]:int(64)[13] "dead after last mention" "YVV" "temp"
                      (2083757 'move' yret[2083755] _yieldedIndex[2083744])
                      const-val _yieldedIndex[2083760]:int(64)[13] "coforall index var" "temp"
                      (2083762 'move' _yieldedIndex[2083760] _yieldedIndex[2083744])
                      {
                        const-val tid[2083766]:int(64)[13] "coforall index var" "const" "index var" "insert auto destroy"
                        (2083768 'move' tid[2083766] _yieldedIndex[2083760])
                        val _args_forcoforall_fn[2208386]:_class_localscoforall_fn[2208370] "temp"
                        (2208390 'move' _args_forcoforall_fn[2208386](2208388 'stack allocate class' _class_localscoforall_fn[2208370]))
                        (2208392 '.=' _args_forcoforall_fn[2208386] _0_op[2208373] op[1547875])
                        (2208396 '.=' _args_forcoforall_fn[2208386] _1_tid[2208375] tid[2083766])
                        (2208400 '.=' _args_forcoforall_fn[2208386] _2__coforallCount[2208377] _coforallCount[1548073])
                        (2208404 '.=' _args_forcoforall_fn[2208386] _3_res[2208379] res[1547877])
                        (2208408 '.=' _args_forcoforall_fn[2208386] _4_state[2208381] state[1547883])
                        (2208412 '.=' _args_forcoforall_fn[2208386] _5_rngs[2208383] rngs[1547881])
                        val _args_vforcoforall_fn[2208416]:c_void_ptr[149] "temp"
                        (2208420 'move' _args_vforcoforall_fn[2208416](2208418 'cast_to_void_star' _args_forcoforall_fn[2208386]))
                        val _args_sizecoforall_fn[2208422]:int(64)[13] "temp"
                        (2208426 'move' _args_sizecoforall_fn[2208422](2208424 'sizeof_bundle' _class_localscoforall_fn[2208370]))
                        ref _taskListcoforall_fn[2208428]:c_void_ptr[149] "temp"
                        (2208433 'move' _taskListcoforall_fn[2208428](2208430 '.' _coforallCount[1548073] taskList[12712]))
                        val _taskListNodecoforall_fn[2208435]:int(64)[13] "temp"
                        (2208439 'move' _taskListNodecoforall_fn[2208435](2208437 '_wide_get_node' _coforallCount[1548073]))
                        (2208519 call wrapcoforall_fn[2208441] _taskListcoforall_fn[2208428] _taskListNodecoforall_fn[2208435] _args_vforcoforall_fn[2208416] _args_sizecoforall_fn[2208422] _args_forcoforall_fn[2208386])
                        {
                        }
                        label _continueLabel[2083780]
                      }
                    }
                  }
                  {
                    (2083695 '=' i[2083648] coerce_tmp[2083664])
                  }
                  {
                    (2083699 '<=' i[2083648] end[2083681])
                  }
                  {
                    val call_tmp[2083703]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    (2083705 '+=' i[2083648] 1)
                  }
                }
                label _endthese[2083728]
              }
              (2017943 call _freeIterator[1102195] _iterator[2017869])
              label _endthese[2017945]
            }
            (2017948 call _freeIterator[1314906] _iterator[2017798])
            (2017951 call chpl__autoDestroy[1697253] default_arg_offset[2017835])
            label _endthese[2017953]
          }
          label _breakLabel[1548150]
          val error[1887845]:Error[167984] "error variable" "temp"
          (1887847 'move' error[1887845] nil[44])
          (1548158 call _waitEndCount[1235226] _coforallCount[1548073] numTasks[1548080] error[1887845])
          val errorExists[2223912]:bool[10] "temp"
          (2223917 'move' errorExists[2223912](2223914 '!=' error[1887845] nil[44]))
          if errorExists[2223912]
          {
            (1887850 call chpl_propagate_error[170518] error[1887845])
          }
          (1927152 call _endCountFree[1234049] _coforallCount[1548073])
          (1927156 call _freeIterator[1315735] _iterator[1548100])
        }
        (1927159 call chpl__autoDestroy[1697012] tmpIter[1547937])
      }
    }
    (1548336 return _void[55])
  }
  function canReuseStride[1465442](const  ref arg blk[1465444]:1*int(64)[1256714], const in arg curDim[1465446]:int(64)[13], const in arg levels[1465448]:int(64)[13], const  ref arg count[1465450]:[domain(1,int(64),false)] uint(64)[1456147], const  ref arg stride[1465452]:[domain(1,int(64),false)] uint(64)[1456147]) : bool[10] "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free"
  {
    val ret[1465454]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1465468]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1465470 'move' call_tmp[1465468](1465473 call +[949855] levels[1465448]))
    ref call_tmp[1465476]:_ref(uint(64))[936790] "dead at end of block" "maybe param" "temp"
    val tmp[1883242]:uint(64)[115] "temp"
    (1465478 'move' tmp[1883242](1465613 call this[1462362] count[1465450] call_tmp[1465468]))
    (1883246 'move' call_tmp[1465476](1883244 'addr of' tmp[1883242]))
    const-val lastCount[1465483]:uint(64)[115] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1465646]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1465650 'move' coerce_tmp[1465646](1465648 'deref' call_tmp[1465476]))
    (1926402 '=' lastCount[1465483] coerce_tmp[1465646])
    (1465485 'noop')
    const-val curStride[1465489]:uint(64)[115] "dead at end of block" "const" "insert auto destroy"
    val tmp[1465491]:uint(64)[115] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1465493]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1465495]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1465497 'move' call_tmp[1465495](1465500 call <[1439962] levels[1465448]))
    (1465503 'move' tmp[1465493] call_tmp[1465495])
    if tmp[1465493]
    {
      (1465510 'move' tmp[1465491](1465700 'cast' uint(64)[115] 1))
    }
    {
      ref tmp[1465516]:_ref(uint(64))[936790] "dead at end of block" "maybe param" "no auto destroy" "temp"
      val tmp[1883248]:uint(64)[115] "temp"
      (1465518 'move' tmp[1883248](1465657 call this[1462362] stride[1465452] levels[1465448]))
      (1883252 'move' tmp[1465516](1883250 'addr of' tmp[1883248]))
      (1465705 'move' tmp[1465491](1465704 'deref' tmp[1465516]))
    }
    (1465529 'move' curStride[1465489] tmp[1465491])
    const-val call_tmp[1465533]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1465670]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1465676 'move' coerce_tmp[1465670](1465672 'cast' uint(64)[115] 1))
    (1465535 'move' call_tmp[1465533](1465538 call -[962382] lastCount[1465483]))
    const-val call_tmp[1465541]:uint(64)[115] "dead at end of block" "maybe param" "temp"
    (1465543 'move' call_tmp[1465541](1465546 call *[442032] call_tmp[1465533] curStride[1465489]))
    const-val lastIndex[1465549]:uint(64)[115] "dead at end of block" "const" "insert auto destroy"
    (1465551 'move' lastIndex[1465549] call_tmp[1465541])
    const-val call_tmp[1465555]:uint(64)[115] "dead at end of block" "maybe param" "temp"
    (1465557 'move' call_tmp[1465555](1465560 call +[439840] lastIndex[1465549] curStride[1465489]))
    const-val nextIndex[1465563]:uint(64)[115] "dead at end of block" "const" "insert auto destroy"
    (1465565 'move' nextIndex[1465563] call_tmp[1465555])
    const-val call_tmp[1465573]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1465575 'move' call_tmp[1465573](1465578 call -[1125627] curDim[1465446]))
    ref call_tmp[1465581]:_ref(int(64))[936761] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1465583 'move' call_tmp[1465581](1465586 call this[1441225] blk[1465444] call_tmp[1465573]))
    const-val call_tmp[1465588]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1465685]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1465689 'move' coerce_tmp[1465685](1465687 'deref' call_tmp[1465581]))
    (1465590 'move' call_tmp[1465588](1465593 call ==[18487] coerce_tmp[1465685] nextIndex[1465563]))
    (1465596 'move' ret[1465454] call_tmp[1465588])
    gotoReturn _end_canReuseStride[1465604] _end_canReuseStride[1465604]
    label _end_canReuseStride[1465604]
    (1465606 return ret[1465454])
  }
  function _ref(_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true))[1871368].dims[1871673](ref arg this[1871677]:_ref(_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true))[1871368]) ref : _ref(1*range(int(64),bounded,false))[1244943] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1871679]:_ref(1*range(int(64),bounded,false))[1244943] "dead after last mention" "RVV" "temp"
    ref call_tmp[1871687]:_ref(1*range(int(64),bounded,false))[1244943] "dead after last mention" "maybe param" "temp"
    (1871689 'move' call_tmp[1871687](1871691 '.' this[1871677] dims[1871341]))
    (1871694 'move' ret[1871679] call_tmp[1871687])
    (1871698 return ret[1871679])
  }
  function _serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1871345].init[1871219](ref arg this[1871223]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1871345], const  ref arg dims[1871231]:1*range(int(64),bounded,false)[1244885]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_type_tmp_[1880390]:int(64)[13] "temp"
    val _formal_tmp_dims[1871272]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "no auto destroy" "no copy" "temp"
    (1871275 'move' _formal_tmp_dims[1871272] dims[1871231])
    (1871260 '.=' this[1871223] dims[1871341] _formal_tmp_dims[1871272])
    (1871269 return _void[55])
  }
  function _ref(_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true))[1871368].deinit[1871780](const  ref arg this[1871784]:_ref(_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true))[1871368]) : void[4] "compiler generated" "destructor" "inline" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved"
  {
    label _enddeinit[1892408]
    ref _field_destructor_tmp_[1892406]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
    (1892413 'move' _field_destructor_tmp_[1892406](1892410 '.' this[1871784] dims[1871341]))
    (1892415 call deinit[1244925] _field_destructor_tmp_[1892406])
    (1871790 return _void[55])
  }
  type _serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1871345] val dims[1871341]:1*range(int(64),bounded,false)[1244885]
  val tmp[541880]:int(64)[13] "dead at end of block" "temp"
  val tmp[541908]:bool[10] "dead at end of block" "temp"
  val tmp[541936]:int(64)[13] "dead at end of block" "temp"
  val call_tmp[633995]:DefaultDist[93992] "dead at end of block" "insert auto destroy for explicit new" "maybe param" "temp"
  const-val call_tmp[634000]:DefaultDist[1244085] "dead at end of block" "maybe param" "temp"
  function coforall_fn[1398749](const in arg _coforallCount[1882566]:_EndCount(AtomicT(int(64)),int(64))[945532], const in arg op[1882568]:SumReduceScanOp(real(64))[1396784], const in arg this[1882570]:[domain(1,int(64),false)] real(64)[1358944], const  ref arg rngs[1882572]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950], const  ref arg res[1882574]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055], const  ref arg state[1882576]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055], const in arg tid[1882578]:int(64)[13]) : void[4] "cobegin or coforall" "resolved"
  {
    {
      (1398754 call preScanChunk[1510535] tid[1882578] op[1882568] rngs[1882572] res[1882574] state[1882576] this[1882570])
    }
    (1398762 return _void[55])
  }
  function on_fn[1437252](const in arg Adata[1882592]:_ddata(range(int(64),bounded,false))[1406042], const in arg Bdata[1882594]:_ddata(range(int(64),bounded,false))[1406042], const in arg len[1882596]:uint(64)[115]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1437294]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
      (1437296 'move' call_tmp[1437294](1437299 call this[1407601] Adata[1882592] 0))
      val call_tmp[1437301]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (1437303 'move' call_tmp[1437301](1437305 '_wide_get_node' Bdata[1882594]))
      ref call_tmp[1437307]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
      (1437309 'move' call_tmp[1437307](1437312 call this[1407601] Bdata[1882594] 0))
      (1437314 'chpl_comm_array_get' call_tmp[1437294] call_tmp[1437301] call_tmp[1437307] len[1882596])
    }
    (1437319 return _void[55])
  }
  function on_fn[1437757](const in arg A[1882598]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224], const in arg aView[1882600]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1871345], const in arg B[1882602]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224], const in arg bView[1882604]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1871345]) : void[4] "on" "resolved"
  {
    val bView[2196578]:domain(1,int(64),false)[1252786] "temp"
    ref bView[2196579]:domain(1,int(64),false)[1252786] "temp"
    val ds_info[2196585]:_RuntimeTypeInfo[1253862]
    ref tmp[2196588]:domain(1,int(64),false)[1252786] "temp"
    (2196592 'move' tmp[2196588](2196590 'set reference' bView[2196578]))
    (2196582 call chpl__deserialize[1871880] ds_info[2196585] bView[1882604] tmp[2196588])
    (2196597 'move' bView[2196579](2196595 'set reference' bView[2196578]))
    val aView[2196544]:domain(1,int(64),false)[1252786] "temp"
    ref aView[2196545]:domain(1,int(64),false)[1252786] "temp"
    val ds_info[2196551]:_RuntimeTypeInfo[1253862]
    ref tmp[2196554]:domain(1,int(64),false)[1252786] "temp"
    (2196558 'move' tmp[2196554](2196556 'set reference' aView[2196544]))
    (2196548 call chpl__deserialize[1871880] ds_info[2196551] aView[1882600] tmp[2196554])
    (2196563 'move' aView[2196545](2196561 'set reference' aView[2196544]))
    (1437763 call complexTransferCore[1437821] A[1882598] aView[2196545] B[1882602] bView[2196579])
    (2196565 call chpl__autoDestroy[1871799] aView[1882600])
    (2196568 call chpl__autoDestroy[1697012] aView[2196544])
    (2196599 call chpl__autoDestroy[1871799] bView[1882604])
    (2196602 call chpl__autoDestroy[1697012] bView[2196578])
    (1437768 return _void[55])
  }
  function getFirstIdx[1472563](const  ref arg dims[1472565]:1*range(int(64),bounded,false)[1244885], ref arg _retArg[1915378]:_ref(1*int(64))[1256784]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1472567]:1*int(64)[1256714] "dead after last mention" "RVV" "temp"
    const-val ret[1472575]:1*int(64)[1256714] "dead at end of block" "insert auto destroy"
    ref call_tmp[1472585]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    (1472587 'move' call_tmp[1472585](1472792 '.' dims[1472565] x0[1244883]))
    val call_tmp[1472592]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val coerce_tmp[1472795]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1472799 'move' coerce_tmp[1472795](1915382 call chpl__initCopy[1085195] call_tmp[1472585]))
    val call_tmp[1472600]:1*int(64)[1256714] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1912660]:1*int(64)[1256714] "temp"
    (1472948 call _defaultOf[1264554] ret_tmp[1912660])
    (1912663 'move' ret[1472575] ret_tmp[1912660])
    (1926426 call chpl__autoDestroy[1407763] coerce_tmp[1472795])
    {
      const-val i[1472613]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1472615 'move' i[1472613] 0)
      {
        const-val tmp[1472827]:int(64)[13] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        ref call_tmp[1472831]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
        (1472833 'move' call_tmp[1472831](1472922 '.' dims[1472565] x0[1244883]))
        const-val tmp[1472882]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        ref call_tmp[1472884]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
        (1472886 'move' call_tmp[1472884](1472932 '.' dims[1472565] x0[1244883]))
        const-val coerce_tmp[1472935]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1472939 'move' coerce_tmp[1472935](1915384 call chpl__initCopy[1085195] call_tmp[1472884]))
        (1472891 'move' tmp[1472882](1472894 call first[1042820] coerce_tmp[1472935]))
        (1472897 'move' tmp[1472827] tmp[1472882])
        ref call_tmp[1472903]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        (1472905 'move' call_tmp[1472903](1472944 '.' ret[1472575] x0[1256712]))
        (1472911 call =[435443] call_tmp[1472903] tmp[1472827])
        (1926430 call chpl__autoDestroy[1407763] coerce_tmp[1472935])
      }
      label _continueLabel0[1472824]
      label _unused_continueLabel[1472771]
      label _breakLabel[1472773]
    }
    (1472775 'move' ret[1472567] ret[1472575])
    gotoReturn _end_getFirstIdx[1472783] _end_getFirstIdx[1472783]
    label _end_getFirstIdx[1472783]
    (1915380 '=' _retArg[1915378] ret[1472567])
    (1915386 return _void[55])
  }
  function preScanChunk[1510535](const in arg tid[1510537]:int(64)[13], const in arg op[1882652]:SumReduceScanOp(real(64))[1396784], const  ref arg rngs[1882654]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950], const  ref arg res[1882656]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055], const  ref arg state[1882658]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055], const in arg this[1882660]:[domain(1,int(64),false)] real(64)[1358944]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val current[1510543]:real(64)[16] "dead at end of block" "const" "insert auto destroy"
    val call_tmp[1510545]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1517148 'move' current[1510543] 0.0)
    val call_tmp[1510557]:SumReduceScanOp(real(64))[1396784] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1510749]:SumReduceScanOp(real(64))[1396784] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1510754 'move' coerce_tmp[1510749] op[1882652])
    (1510559 'move' call_tmp[1510557](1510565 call clone[1510711] coerce_tmp[1510749]))
    const myop[1510566]:SumReduceScanOp(real(64))[1396784] "dead at end of block" "const" "insert auto destroy"
    (1510568 'move' myop[1510566](1510804 call chpl__initCopy[1510806] call_tmp[1510557]))
    {
      val _indexOfInterest[1510573]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[1510575]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
      ref call_tmp[1510577]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1510579 'move' call_tmp[1510577](1511772 call this[1511369] rngs[1882654] tid[1510537]))
      (1510584 'move' _iterator[1510575](1510587 call _getIterator[1095509] call_tmp[1510577]))
      {
        val ret[2015770]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
        const-val _return_tmp_[2015772]:bool[10] "dead after last mention" "temp"
        const-val this[2015929]:range(int(64),bounded,false)[1027003] "temp"
        (2015934 'move' this[2015929](2015931 '.v' _iterator[1510575] F0_this[2113071]))
        (2015774 'move' _return_tmp_[2015772](2015777 call checkIfIterWillOverflow[1096003] this[2015929] 1))
        val i[2015780]:int(64)[13] "dead at end of block" "insert auto destroy"
        val call_tmp[2015782]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        (2015784 'move' i[2015780] 0)
        ref call_tmp[2015787]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
        const-val this[2015936]:range(int(64),bounded,false)[1027003] "temp"
        (2015941 'move' this[2015936](2015938 '.v' _iterator[1510575] F0_this[2113071]))
        (2015789 'move' call_tmp[2015787](2015792 call _low[1028641] this[2015936]))
        const-val start[2015794]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[2015796]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (2015798 'move' coerce_tmp[2015796](2015800 'deref' call_tmp[2015787]))
        (2015802 '=' start[2015794] coerce_tmp[2015796])
        (2015805 'noop')
        ref call_tmp[2015806]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
        const-val this[2015943]:range(int(64),bounded,false)[1027003] "temp"
        (2015948 'move' this[2015943](2015945 '.v' _iterator[1510575] F0_this[2113071]))
        (2015808 'move' call_tmp[2015806](2015811 call _high[1028849] this[2015943]))
        const end[2015813]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[2015815]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (2015817 'move' coerce_tmp[2015815](2015819 'deref' call_tmp[2015806]))
        (2015821 '=' end[2015813] coerce_tmp[2015815])
        (2015824 'noop')
        CForLoop[2015825]
        {
          const-val yret[2015840]:int(64)[13] "dead after last mention" "YVV" "temp"
          const-val call_tmp[2015842]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val this[2015950]:range(int(64),bounded,false)[1027003] "temp"
          (2015955 'move' this[2015950](2015952 '.v' _iterator[1510575] F0_this[2113071]))
          (2015844 'move' call_tmp[2015842](2015847 call chpl_intToIdx[1028669] this[2015950] i[2015780]))
          (2015850 'move' yret[2015840] call_tmp[2015842])
          const-val _yieldedIndex[2015864]:int(64)[13] "temp"
          (2015927 'move' _yieldedIndex[2015864] call_tmp[2015842])
          {
            const-val i[2015866]:int(64)[13] "const" "index var" "insert auto destroy"
            (2015868 'move' i[2015866] _yieldedIndex[2015864])
            {
              ref elem[2015872]:_ref(real(64))[936906] "dead at end of block" "ref var"
              ref call_tmp[2015874]:_ref(real(64))[936906] "dead at end of block" "maybe param" "temp"
              (2015876 'move' call_tmp[2015874](2015879 call dsiAccess[1389399] this[1882660] i[2015866]))
              (2015882 'move' elem[2015872] call_tmp[2015874])
              val coerce_tmp[2015885]:SumReduceScanOp(real(64))[1396784] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2015887 'move' coerce_tmp[2015885] myop[1510566])
              const-val coerce_tmp[2015890]:real(64)[16] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2015892 'move' coerce_tmp[2015890](2015894 'deref' elem[2015872]))
              (2015897 call accumulate[1513351] coerce_tmp[2015885] coerce_tmp[2015890])
              ref call_tmp[2015900]:_ref(real(64))[936906] "dead after last mention" "maybe param" "temp"
              (2015902 'move' call_tmp[2015900](2015905 call this[1513714] res[1882656] i[2015866]))
              const-val call_tmp[2015908]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp"
              val coerce_tmp[2015910]:SumReduceScanOp(real(64))[1396784] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2015912 'move' coerce_tmp[2015910] myop[1510566])
              (2015915 'move' call_tmp[2015908](2015918 call generate[1397770] coerce_tmp[2015910]))
              (2015921 call =[435569] call_tmp[2015900] call_tmp[2015908])
            }
            label _continueLabel[2015924]
          }
          {
            (2015827 '=' i[2015780] coerce_tmp[2015796])
          }
          {
            (2015831 '<=' i[2015780] end[2015813])
          }
          {
            val call_tmp[2015835]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (2015837 '+=' i[2015780] 1)
          }
        }
        label _endthese[2015860]
      }
      label _breakLabel[1510664]
      (1926750 call _freeIterator[1102195] _iterator[1510575])
    }
    ref call_tmp[1510666]:_ref(real(64))[936906] "dead after last mention" "maybe param" "temp"
    (1510668 'move' call_tmp[1510666](1510671 call this[1513714] state[1882658] tid[1510537]))
    ref call_tmp[1510673]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "reference to a const" "temp"
    val tmp[1883302]:range(int(64),bounded,false)[1027003] "insert auto destroy" "temp"
    const-val ret_tmp[1916251]:range(int(64),bounded,false)[1027003] "temp"
    (1516009 call this[1511220] rngs[1882654] tid[1510537] ret_tmp[1916251])
    (1916254 'move' tmp[1883302] ret_tmp[1916251])
    (1883306 'move' call_tmp[1510673](1883304 'addr of' tmp[1883302]))
    const-val call_tmp[1510680]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1516022]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1516026 'move' coerce_tmp[1516022](1516024 'deref' call_tmp[1510673]))
    (1510682 'move' call_tmp[1510680](1510685 call high[1028808] coerce_tmp[1516022]))
    ref call_tmp[1510688]:_ref(real(64))[936906] "dead after last mention" "maybe param" "temp"
    val tmp[1883308]:real(64)[16] "temp"
    (1510690 'move' tmp[1883308](1516032 call this[1513830] res[1882656] call_tmp[1510680]))
    (1883312 'move' call_tmp[1510688](1883310 'addr of' tmp[1883308]))
    const-val coerce_tmp[1516045]:real(64)[16] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1516049 'move' coerce_tmp[1516045](1516047 'deref' call_tmp[1510688]))
    (1510696 call =[435569] call_tmp[1510666] coerce_tmp[1516045])
    (1926752 call chpl__autoDestroy[1407763] coerce_tmp[1516022])
    (1510701 call chpl__delete[1516052] myop[1510566])
    (1926755 call chpl__autoDestroy[1407763] tmp[1883302])
    (1510705 return _void[55])
  }
  function on_fn[1527383](const in arg Adata[1882668]:_ddata(real(64))[1358105], const in arg Bdata[1882670]:_ddata(real(64))[1358105], const in arg len[1882672]:uint(64)[115]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1527425]:_ref(real(64))[936906] "dead after last mention" "maybe param" "temp"
      (1527427 'move' call_tmp[1527425](1527430 call this[1391523] Adata[1882668] 0))
      val call_tmp[1527432]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (1527434 'move' call_tmp[1527432](1527436 '_wide_get_node' Bdata[1882670]))
      ref call_tmp[1527438]:_ref(real(64))[936906] "dead after last mention" "maybe param" "temp"
      (1527440 'move' call_tmp[1527438](1527443 call this[1391523] Bdata[1882670] 0))
      (1527445 'chpl_comm_array_get' call_tmp[1527425] call_tmp[1527432] call_tmp[1527438] len[1882672])
    }
    (1527450 return _void[55])
  }
  function on_fn[1527873](const in arg A[1882674]:[domain(1,int(64),false)] real(64)[1358944], const in arg aView[1882676]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1871345], const in arg B[1882678]:[domain(1,int(64),false)] real(64)[1358944], const in arg bView[1882680]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1871345]) : void[4] "on" "resolved"
  {
    val bView[2196646]:domain(1,int(64),false)[1252786] "temp"
    ref bView[2196647]:domain(1,int(64),false)[1252786] "temp"
    val ds_info[2196653]:_RuntimeTypeInfo[1253862]
    ref tmp[2196656]:domain(1,int(64),false)[1252786] "temp"
    (2196660 'move' tmp[2196656](2196658 'set reference' bView[2196646]))
    (2196650 call chpl__deserialize[1871880] ds_info[2196653] bView[1882680] tmp[2196656])
    (2196665 'move' bView[2196647](2196663 'set reference' bView[2196646]))
    val aView[2196612]:domain(1,int(64),false)[1252786] "temp"
    ref aView[2196613]:domain(1,int(64),false)[1252786] "temp"
    val ds_info[2196619]:_RuntimeTypeInfo[1253862]
    ref tmp[2196622]:domain(1,int(64),false)[1252786] "temp"
    (2196626 'move' tmp[2196622](2196624 'set reference' aView[2196612]))
    (2196616 call chpl__deserialize[1871880] ds_info[2196619] aView[1882676] tmp[2196622])
    (2196631 'move' aView[2196613](2196629 'set reference' aView[2196612]))
    (1527879 call complexTransferCore[1527937] A[1882674] aView[2196613] B[1882678] bView[2196647])
    (2196633 call chpl__autoDestroy[1871799] aView[1882676])
    (2196636 call chpl__autoDestroy[1697012] aView[2196612])
    (2196667 call chpl__autoDestroy[1871799] bView[1882680])
    (2196670 call chpl__autoDestroy[1697012] bView[2196646])
    (1527884 return _void[55])
  }
  function getFirstIdx[1530443](const  ref arg dims[1530445]:1*range(int(64),bounded,false)[1244885], ref arg _retArg[1916409]:_ref(1*int(64))[1256784]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1530447]:1*int(64)[1256714] "dead after last mention" "RVV" "temp"
    const-val ret[1530455]:1*int(64)[1256714] "dead at end of block" "insert auto destroy"
    ref call_tmp[1530465]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
    (1530467 'move' call_tmp[1530465](1530672 '.' dims[1530445] x0[1244883]))
    val call_tmp[1530472]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val coerce_tmp[1530675]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1530679 'move' coerce_tmp[1530675](1916413 call chpl__initCopy[1085195] call_tmp[1530465]))
    val call_tmp[1530480]:1*int(64)[1256714] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1912714]:1*int(64)[1256714] "temp"
    (1530828 call _defaultOf[1264554] ret_tmp[1912714])
    (1912717 'move' ret[1530455] ret_tmp[1912714])
    (1927016 call chpl__autoDestroy[1407763] coerce_tmp[1530675])
    {
      const-val i[1530493]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1530495 'move' i[1530493] 0)
      {
        const-val tmp[1530707]:int(64)[13] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        ref call_tmp[1530711]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
        (1530713 'move' call_tmp[1530711](1530802 '.' dims[1530445] x0[1244883]))
        const-val tmp[1530762]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        ref call_tmp[1530764]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
        (1530766 'move' call_tmp[1530764](1530812 '.' dims[1530445] x0[1244883]))
        const-val coerce_tmp[1530815]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1530819 'move' coerce_tmp[1530815](1916415 call chpl__initCopy[1085195] call_tmp[1530764]))
        (1530771 'move' tmp[1530762](1530774 call first[1042820] coerce_tmp[1530815]))
        (1530777 'move' tmp[1530707] tmp[1530762])
        ref call_tmp[1530783]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
        (1530785 'move' call_tmp[1530783](1530824 '.' ret[1530455] x0[1256712]))
        (1530791 call =[435443] call_tmp[1530783] tmp[1530707])
        (1927020 call chpl__autoDestroy[1407763] coerce_tmp[1530815])
      }
      label _continueLabel0[1530704]
      label _unused_continueLabel[1530651]
      label _breakLabel[1530653]
    }
    (1530655 'move' ret[1530447] ret[1530455])
    gotoReturn _end_getFirstIdx[1530663] _end_getFirstIdx[1530663]
    label _end_getFirstIdx[1530663]
    (1916411 '=' _retArg[1916409] ret[1530447])
    (1916417 return _void[55])
  }
  function coforall_fn[1548131](const in arg op[1882686]:SumReduceScanOp(real(64))[1396784], const in arg tid[1882688]:int(64)[13], const in arg _coforallCount[1882690]:_EndCount(AtomicT(int(64)),int(64))[945532], const  ref arg res[1882692]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055], const  ref arg state[1882694]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055], const  ref arg rngs[1882696]:_ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976]) : void[4] "cobegin or coforall" "resolved"
  {
    {
      (1548136 call postScanChunk[1548342] tid[1882688] state[1882694] rngs[1882696] res[1882692] op[1882686])
    }
    (1548144 return _void[55])
  }
  function postScanChunk[1548342](const in arg tid[1548344]:int(64)[13], const  ref arg state[1882698]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055], const  ref arg rngs[1882700]:_ref(_array(unmanaged [domain(1,int(64),false)] range(int(64),bounded,false)))[1415976], const  ref arg res[1882702]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1366055], const in arg op[1882704]:SumReduceScanOp(real(64))[1396784]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    ref call_tmp[1548350]:_ref(real(64))[936906] "dead at end of block" "maybe param" "temp"
    val tmp[1883344]:real(64)[16] "temp"
    (1548352 'move' tmp[1883344](1548430 call this[1513830] state[1882698] tid[1548344]))
    (1883348 'move' call_tmp[1548350](1883346 'addr of' tmp[1883344]))
    const-val myadjust[1548357]:real(64)[16] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1548445]:real(64)[16] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1548449 'move' coerce_tmp[1548445](1548447 'deref' call_tmp[1548350]))
    (1927162 '=' myadjust[1548357] coerce_tmp[1548445])
    (1548359 'noop')
    {
      val _indexOfInterest[1548364]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[1548366]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
      ref call_tmp[1548368]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
      (1548370 'move' call_tmp[1548368](1548460 call this[1511369] rngs[1882700] tid[1548344]))
      (1548375 'move' _iterator[1548366](1548378 call _getIterator[1095509] call_tmp[1548368]))
      {
        val ret[2017986]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
        const-val _return_tmp_[2017988]:bool[10] "dead after last mention" "temp"
        const-val this[2018111]:range(int(64),bounded,false)[1027003] "temp"
        (2018116 'move' this[2018111](2018113 '.v' _iterator[1548366] F0_this[2113071]))
        (2017990 'move' _return_tmp_[2017988](2017993 call checkIfIterWillOverflow[1096003] this[2018111] 1))
        val i[2017996]:int(64)[13] "dead at end of block" "insert auto destroy"
        val call_tmp[2017998]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        (2018000 'move' i[2017996] 0)
        ref call_tmp[2018003]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
        const-val this[2018118]:range(int(64),bounded,false)[1027003] "temp"
        (2018123 'move' this[2018118](2018120 '.v' _iterator[1548366] F0_this[2113071]))
        (2018005 'move' call_tmp[2018003](2018008 call _low[1028641] this[2018118]))
        const-val start[2018010]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[2018012]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (2018014 'move' coerce_tmp[2018012](2018016 'deref' call_tmp[2018003]))
        (2018018 '=' start[2018010] coerce_tmp[2018012])
        (2018021 'noop')
        ref call_tmp[2018022]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
        const-val this[2018125]:range(int(64),bounded,false)[1027003] "temp"
        (2018130 'move' this[2018125](2018127 '.v' _iterator[1548366] F0_this[2113071]))
        (2018024 'move' call_tmp[2018022](2018027 call _high[1028849] this[2018125]))
        const end[2018029]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[2018031]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (2018033 'move' coerce_tmp[2018031](2018035 'deref' call_tmp[2018022]))
        (2018037 '=' end[2018029] coerce_tmp[2018031])
        (2018040 'noop')
        CForLoop[2018041]
        {
          const-val yret[2018056]:int(64)[13] "dead after last mention" "YVV" "temp"
          const-val call_tmp[2018058]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val this[2018132]:range(int(64),bounded,false)[1027003] "temp"
          (2018137 'move' this[2018132](2018134 '.v' _iterator[1548366] F0_this[2113071]))
          (2018060 'move' call_tmp[2018058](2018063 call chpl_intToIdx[1028669] this[2018132] i[2017996]))
          (2018066 'move' yret[2018056] call_tmp[2018058])
          const-val _yieldedIndex[2018080]:int(64)[13] "temp"
          (2018109 'move' _yieldedIndex[2018080] call_tmp[2018058])
          {
            const-val i[2018082]:int(64)[13] "const" "index var" "insert auto destroy"
            (2018084 'move' i[2018082] _yieldedIndex[2018080])
            {
              ref call_tmp[2018088]:_ref(real(64))[936906] "dead after last mention" "maybe param" "temp"
              (2018090 'move' call_tmp[2018088](2018093 call this[1513714] res[1882702] i[2018082]))
              val coerce_tmp[2018096]:SumReduceScanOp(real(64))[1396784] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2018098 'move' coerce_tmp[2018096] op[1882704])
              (2018102 call accumulateOntoState[1517363] coerce_tmp[2018096] call_tmp[2018088] myadjust[1548357])
            }
            label _continueLabel[2018106]
          }
          {
            (2018043 '=' i[2017996] coerce_tmp[2018012])
          }
          {
            (2018047 '<=' i[2017996] end[2018029])
          }
          {
            val call_tmp[2018051]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (2018053 '+=' i[2017996] 1)
          }
        }
        label _endthese[2018076]
      }
      label _breakLabel[1548422]
      (1927168 call _freeIterator[1102195] _iterator[1548366])
    }
    (1548424 return _void[55])
  }
  function writeSpaces[1555639](const in arg dim[1555641]:int(64)[13], const  ref arg f[1882724]:_ref(channel(true,dynamic,false))[1061145], ref arg error_out[1888363]:Error[167984]) : void[4] throws "resolved" "no return value for void"
  {
    {
      val _indexOfInterest[1555645]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[1555647]:_ic_chpl_direct_range_iter[1230573] "dead at end of block" "expr temp" "temp"
      const-val call_tmp[1555649]:_ir_chpl_direct_range_iter[1230579] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val ret_tmp[1911100]:_ir_chpl_direct_range_iter[1230579] "temp"
      (1555654 call chpl_direct_range_iter[1230419] 1 dim[1555641] ret_tmp[1911100])
      (1911103 'move' call_tmp[1555649] ret_tmp[1911100])
      (1555658 'move' _iterator[1555647](1555661 call _getIterator[1230588] call_tmp[1555649]))
      {
        val ret[2018140]:_ir_chpl_direct_range_iter[1230579] "dead after last mention" "RVV" "temp"
        val _indexOfInterest[2018142]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[2018144]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[2018146]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[2018148]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
        const-val low[2018376]:int(64)[13] "temp"
        (2018381 'move' low[2018376](2018378 '.v' _iterator[1555647] F0_low[2116764]))
        const-val high[2018383]:int(64)[13] "temp"
        (2018388 'move' high[2018383](2018385 '.v' _iterator[1555647] F1_high[2116768]))
        (2018151 call chpl_direct_param_stride_range_iter[1102713] low[2018376] high[2018383] ret_tmp[2018148])
        (2018155 'move' call_tmp[2018146] ret_tmp[2018148])
        (2018158 'move' _iterator[2018144](2018161 call _getIterator[1103490] call_tmp[2018146]))
        {
          val ret[2018164]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead after last mention" "RVV" "temp"
          val call_tmp[2018166]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          (2018169 call chpl_range_check_stride[1103033])
          val i[2018170]:int(64)[13] "dead at end of block" "insert auto destroy"
          val call_tmp[2018172]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          (2018174 'move' i[2018170] 0)
          val call_tmp[2018177]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          const-val default_arg_first[2018179]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
          const-val low[2018181]:int(64)[13] "temp"
          (2018183 'move' low[2018181](2018185 '.v' _iterator[2018144] F0_low[2115192]))
          (2018188 'move' default_arg_first[2018179](2018191 call chpl_checkIfRangeIterWillOverflow_default_first[1103387] low[2018181]))
          const-val default_arg_last[2018193]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
          const-val high[2018195]:int(64)[13] "temp"
          (2018197 'move' high[2018195](2018199 '.v' _iterator[2018144] F1_high[2115196]))
          (2018202 'move' default_arg_last[2018193](2018205 call chpl_checkIfRangeIterWillOverflow_default_last[1103415] high[2018195]))
          const-val _return_tmp_[2018207]:bool[10] "dead after last mention" "temp"
          const-val low[2018209]:int(64)[13] "temp"
          (2018211 'move' low[2018209](2018213 '.v' _iterator[2018144] F0_low[2115192]))
          const-val high[2018216]:int(64)[13] "temp"
          (2018218 'move' high[2018216](2018220 '.v' _iterator[2018144] F1_high[2115196]))
          (2018223 'move' _return_tmp_[2018207](2018226 call chpl_checkIfRangeIterWillOverflow[1096265] low[2018209] high[2018216] 1 default_arg_first[2018179] default_arg_last[2018193] 1))
          CForLoop[2018233] hazard
          {
            const-val yret[2018262]:int(64)[13] "dead after last mention" "YVV" "temp"
            (2018264 'move' yret[2018262] i[2018170])
            const-val _yieldedIndex[2018267]:int(64)[13] "temp"
            (2018269 'move' _yieldedIndex[2018267] i[2018170])
            {
              const-val i[2018273]:int(64)[13] "const" "index var" "insert auto destroy"
              (2018275 'move' i[2018273] _yieldedIndex[2018267])
              const-val yret[2018278]:int(64)[13] "dead after last mention" "YVV" "temp"
              (2018280 'move' yret[2018278] _yieldedIndex[2018267])
              const-val _yieldedIndex[2018302]:int(64)[13] "temp"
              (2018374 'move' _yieldedIndex[2018302] _yieldedIndex[2018267])
              {
                const-val i[2018304]:int(64)[13] "const" "index var" "insert auto destroy"
                (2018306 'move' i[2018304] _yieldedIndex[2018302])
                {
                  const-val call_tmp[2018310]:ioLiteral[238841] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
                  const-val initTemp[2018312]:ioLiteral[238841] "dead after last mention" "temp"
                  const-val _formal_tmp_in_val[2018314]:string[26] "dead after last mention" "expr temp" "no auto destroy" "temp"
                  (2018316 'move' _formal_tmp_in_val[2018314](2018319 call chpl__initCopy[981537] " "))
                  const-val default_arg_ignoreWhiteSpace[2018321]:bool[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
                  (2018323 'move' default_arg_ignoreWhiteSpace[2018321](2018326 call init_default_ignoreWhiteSpace[1565399]))
                  (2018328 call init[894987] initTemp[2018312] _formal_tmp_in_val[2018314] default_arg_ignoreWhiteSpace[2018321])
                  (2018332 'move' call_tmp[2018310] initTemp[2018312])
                  ref _return_tmp_[2018335]:_ref(channel(true,dynamic,false))[1061145] "dead after last mention" "temp"
                  val error[2018337]:Error[167984] "error variable" "temp"
                  (2018339 'move' error[2018337] nil[44])
                  (2018342 'move' _return_tmp_[2018335](2018345 call <~>[1565439] f[1882724] call_tmp[2018310] error[2018337]))
                  val errorExists[2226152]:bool[10] "temp"
                  (2226157 'move' errorExists[2226152](2226154 '!=' error[2018337] nil[44]))
                  if errorExists[2226152]
                  {
                    (2018352 '=' error_out[1888363] error[2018337])
                    (2018356 call chpl__autoDestroy[1603717] call_tmp[2018310])
                    (2018371 call _freeIterator[1103663] _iterator[2018144])
                    (2018359 call _freeIterator[1230761] _iterator[1555647])
                    gotoErrorHandlingReturn _endwriteSpaces[1888365] _endwriteSpaces[1888365]
                  }
                  (2018365 call chpl__autoDestroy[1603717] call_tmp[2018310])
                }
                label _continueLabel[2018367]
              }
            }
            {
              const-val low[2018235]:int(64)[13] "temp"
              (2018237 'move' low[2018235](2018239 '.v' _iterator[2018144] F0_low[2115192]))
              (2018242 '=' i[2018170] low[2018235])
            }
            {
              const-val high[2018246]:int(64)[13] "temp"
              (2018248 'move' high[2018246](2018250 '.v' _iterator[2018144] F1_high[2115196]))
              (2018253 '<=' i[2018170] high[2018246])
            }
            {
              val call_tmp[2018257]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (2018259 '+=' i[2018170] 1)
            }
          }
          label _endchpl_direct_param_stride_range_iter[2018293]
        }
        (2018296 call _freeIterator[1103663] _iterator[2018144])
        label _endchpl_direct_range_iter[2018298]
      }
      label _breakLabel[1555699]
      (1927314 call _freeIterator[1230761] _iterator[1555647])
    }
    label _endwriteSpaces[1888365]
    (1555701 return _void[55])
  }
  function recursiveArrayWriter[1555704](const  ref arg idx[1555711]:1*int(64)[1256714], const in arg dim[1555717]:int(64)[13], const in arg last[1555723]:bool[10], const  ref arg f[1882726]:_ref(channel(true,dynamic,false))[1061145], const in arg dom[1882728]:domain(1,int(64),false)[1251123], const in arg arr[1882730]:[domain(1,int(64),false)] real(64)[1358944], ref arg error_out[1888382]:Error[167984]) : void[4] throws "resolved" "no return value for void"
  {
    val _formal_tmp_idx[1565316]:1*int(64)[1256714] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (1565319 'move' _formal_tmp_idx[1565316] idx[1555711])
    const-val call_tmp[1555726]:bool[10] "dead at end of block" "maybe param" "temp"
    (1555728 'move' call_tmp[1555726](1555734 call binary[1559617] f[1882726]))
    const-val binary[1555735]:bool[10] "dead at end of block" "insert auto destroy"
    (1555737 'move' binary[1555735] call_tmp[1555726])
    const-val call_tmp[1555741]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1555743 'move' call_tmp[1555741](1555749 call styleElement[1559243] f[1882726] QIO_STYLE_ELEMENT_ARRAY[19665]))
    const-val arrayStyle[1555751]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1555753 'move' arrayStyle[1555751] call_tmp[1555741])
    const-val tmp[1555757]:bool[10] "dead after last mention" "maybe param" "temp"
    (1555759 'move' tmp[1555757](1555762 call ==[435744] arrayStyle[1555751] QIO_ARRAY_FORMAT_SPACE[19695]))
    const-val isspace[1555778]:bool[10] "dead at end of block" "insert auto destroy"
    val tmp[1555780]:bool[10] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1555782]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1555784]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1555786 'move' call_tmp[1555784] tmp[1555757])
    (1555791 'move' tmp[1555782] call_tmp[1555784])
    if tmp[1555782]
    {
      const-val tmp[1555798]:bool[10] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1555800]:bool[10] "dead at end of block" "expr temp" "maybe param" "temp"
      (1555802 'move' call_tmp[1555800](1555805 call ![7494] binary[1555735]))
      (1555807 'move' tmp[1555798] call_tmp[1555800])
      (1555812 'move' tmp[1555780] tmp[1555798])
    }
    {
      (1555818 'move' tmp[1555780] 0)
    }
    (1555824 'move' isspace[1555778] tmp[1555780])
    const-val tmp[1555828]:bool[10] "dead after last mention" "maybe param" "temp"
    (1555830 'move' tmp[1555828](1555833 call ==[435744] arrayStyle[1555751] QIO_ARRAY_FORMAT_JSON[19705]))
    const-val isjson[1555849]:bool[10] "dead at end of block" "insert auto destroy"
    val tmp[1555851]:bool[10] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1555853]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1555855]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1555857 'move' call_tmp[1555855] tmp[1555828])
    (1555862 'move' tmp[1555853] call_tmp[1555855])
    if tmp[1555853]
    {
      const-val tmp[1555869]:bool[10] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1555871]:bool[10] "dead at end of block" "expr temp" "maybe param" "temp"
      (1555873 'move' call_tmp[1555871](1555876 call ![7494] binary[1555735]))
      (1555878 'move' tmp[1555869] call_tmp[1555871])
      (1555883 'move' tmp[1555851] tmp[1555869])
    }
    {
      (1555889 'move' tmp[1555851] 0)
    }
    (1555895 'move' isjson[1555849] tmp[1555851])
    const-val tmp[1555899]:bool[10] "dead after last mention" "maybe param" "temp"
    (1555901 'move' tmp[1555899](1555904 call ==[435744] arrayStyle[1555751] QIO_ARRAY_FORMAT_CHPL[19700]))
    const-val ischpl[1555920]:bool[10] "dead at end of block" "insert auto destroy"
    val tmp[1555922]:bool[10] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1555924]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1555926]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1555928 'move' call_tmp[1555926] tmp[1555899])
    (1555933 'move' tmp[1555924] call_tmp[1555926])
    if tmp[1555924]
    {
      const-val tmp[1555940]:bool[10] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1555942]:bool[10] "dead at end of block" "expr temp" "maybe param" "temp"
      (1555944 'move' call_tmp[1555942](1555947 call ![7494] binary[1555735]))
      (1555949 'move' tmp[1555940] call_tmp[1555942])
      (1555954 'move' tmp[1555922] tmp[1555940])
    }
    {
      (1555960 'move' tmp[1555922] 0)
    }
    (1555966 'move' ischpl[1555920] tmp[1555922])
    val strType[1555970]:int(64)[13] "dead at end of block" "insert auto destroy" "type variable"
    const-val makeStridePositive[1555976]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val call_tmp[1555982]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val coerce_tmp[1565339]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1565344 'move' coerce_tmp[1565339] dom[1882728])
    const-val ret_tmp[1911996]:range(int(64),bounded,false)[1027003] "temp"
    (1555990 call dsiDim[1258236] coerce_tmp[1565339] dim[1555717] ret_tmp[1911996])
    (1911999 'move' call_tmp[1555982] ret_tmp[1911996])
    (1556050 'move' makeStridePositive[1555976] 1)
    (1927316 call chpl__autoDestroy[1407763] call_tmp[1555982])
    const-val tmp[1556059]:bool[10] "dead after last mention" "maybe param" "temp"
    (1556061 'move' tmp[1556059] isjson[1555849])
    val tmp[1556077]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1556079]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1556081]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1556083 'move' call_tmp[1556081] tmp[1556059])
    (1556088 'move' tmp[1556079] call_tmp[1556081])
    if tmp[1556079]
    {
      (1556095 'move' tmp[1556077] 1)
    }
    {
      const-val tmp[1556101]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (1556103 'move' tmp[1556101] ischpl[1555920])
      (1556108 'move' tmp[1556077] tmp[1556101])
    }
    const-val call_tmp[1556114]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1556116 'move' call_tmp[1556114] tmp[1556077])
    if call_tmp[1556114]
    {
      const-val call_tmp[1556131]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1556133 'move' call_tmp[1556131](1556136 call !=[436128] dim[1555717] 0))
      const-val call_tmp[1556139]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1556141 'move' call_tmp[1556139] call_tmp[1556131])
      if call_tmp[1556139]
      {
        const-val call_tmp[1556148]:ioLiteral[238841] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
        const-val initTemp[1565362]:ioLiteral[238841] "dead after last mention" "temp"
        const-val _formal_tmp_in_val[1565390]:string[26] "dead after last mention" "expr temp" "no auto destroy" "temp"
        (1565394 'move' _formal_tmp_in_val[1565390](1565391 call chpl__initCopy[981537] "[\n"))
        const-val default_arg_ignoreWhiteSpace[1565431]:bool[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
        (1565435 'move' default_arg_ignoreWhiteSpace[1565431](1565433 call init_default_ignoreWhiteSpace[1565399]))
        (1565365 call init[894987] initTemp[1565362] _formal_tmp_in_val[1565390] default_arg_ignoreWhiteSpace[1565431])
        (1556150 'move' call_tmp[1556148] initTemp[1565362])
        ref _return_tmp_[1875616]:_ref(channel(true,dynamic,false))[1061145] "dead after last mention" "temp"
        val error[1888387]:Error[167984] "error variable" "temp"
        (1888389 'move' error[1888387] nil[44])
        (1875618 'move' _return_tmp_[1875616](1556156 call <~>[1565439] f[1882726] call_tmp[1556148] error[1888387]))
        val errorExists[2224160]:bool[10] "temp"
        (2224165 'move' errorExists[2224160](2224162 '!=' error[1888387] nil[44]))
        if errorExists[2224160]
        {
          (1888393 '=' error_out[1888382] error[1888387])
          (1927319 call chpl__autoDestroy[1603717] call_tmp[1556148])
          (1927322 call chpl__autoDestroy[1697253] _formal_tmp_idx[1565316])
          gotoErrorHandlingReturn _endrecursiveArrayWriter[1888384] _endrecursiveArrayWriter[1888384]
        }
        (1927325 call chpl__autoDestroy[1603717] call_tmp[1556148])
        const-val call_tmp[1556160]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1556162 'move' call_tmp[1556160](1556165 call +[949855] dim[1555717]))
        val error[1888402]:Error[167984] "error variable" "temp"
        (1888404 'move' error[1888402] nil[44])
        (1556169 call writeSpaces[1555639] call_tmp[1556160] f[1882726] error[1888402])
        val errorExists[2224168]:bool[10] "temp"
        (2224173 'move' errorExists[2224168](2224170 '!=' error[1888402] nil[44]))
        if errorExists[2224168]
        {
          (1888408 '=' error_out[1888382] error[1888402])
          (1927328 call chpl__autoDestroy[1697253] _formal_tmp_idx[1565316])
          gotoErrorHandlingReturn _endrecursiveArrayWriter[1888384] _endrecursiveArrayWriter[1888384]
        }
      }
      {
        const-val call_tmp[1556172]:ioLiteral[238841] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
        const-val initTemp[1569053]:ioLiteral[238841] "dead after last mention" "temp"
        const-val _formal_tmp_in_val[1569073]:string[26] "dead after last mention" "expr temp" "no auto destroy" "temp"
        (1569077 'move' _formal_tmp_in_val[1569073](1569074 call chpl__initCopy[981537] "["))
        const-val default_arg_ignoreWhiteSpace[1569082]:bool[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
        (1569086 'move' default_arg_ignoreWhiteSpace[1569082](1569084 call init_default_ignoreWhiteSpace[1565399]))
        (1569056 call init[894987] initTemp[1569053] _formal_tmp_in_val[1569073] default_arg_ignoreWhiteSpace[1569082])
        (1556174 'move' call_tmp[1556172] initTemp[1569053])
        ref _return_tmp_[1875620]:_ref(channel(true,dynamic,false))[1061145] "dead after last mention" "temp"
        val error[1888417]:Error[167984] "error variable" "temp"
        (1888419 'move' error[1888417] nil[44])
        (1875622 'move' _return_tmp_[1875620](1556180 call <~>[1565439] f[1882726] call_tmp[1556172] error[1888417]))
        val errorExists[2224176]:bool[10] "temp"
        (2224181 'move' errorExists[2224176](2224178 '!=' error[1888417] nil[44]))
        if errorExists[2224176]
        {
          (1888423 '=' error_out[1888382] error[1888417])
          (1927332 call chpl__autoDestroy[1603717] call_tmp[1556172])
          (1927335 call chpl__autoDestroy[1697253] _formal_tmp_idx[1565316])
          gotoErrorHandlingReturn _endrecursiveArrayWriter[1888384] _endrecursiveArrayWriter[1888384]
        }
        (1927339 call chpl__autoDestroy[1603717] call_tmp[1556172])
      }
    }
    const-val call_tmp[1556193]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1556195 'move' call_tmp[1556193](1556198 call ==[435744] dim[1555717] 0))
    const-val call_tmp[1556201]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1556203 'move' call_tmp[1556201] call_tmp[1556193])
    if call_tmp[1556201]
    {
      val first[1556210]:bool[10] "dead at end of block" "insert auto destroy"
      (1556212 'move' first[1556210] 1)
      {
        val _indexOfInterest[1556306]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1556308]:_ic_these_range_int64_t_bounded_T[1573197] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[1556310]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        val coerce_tmp[1569101]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1569106 'move' coerce_tmp[1569101] dom[1882728])
        const-val ret_tmp[1912002]:range(int(64),bounded,false)[1027003] "temp"
        (1556318 call dsiDim[1258236] coerce_tmp[1569101] dim[1555717] ret_tmp[1912002])
        (1912005 'move' call_tmp[1556310] ret_tmp[1912002])
        const-val call_tmp[1556320]:range(int(64),bounded,true)[1570523] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1916901]:range(int(64),bounded,true)[1570523] "temp"
        (1556325 call chpl_by[1569109] call_tmp[1556310] makeStridePositive[1555976] ret_tmp[1916901])
        (1916904 'move' call_tmp[1556320] ret_tmp[1916901])
        (1556328 'move' _iterator[1556308](1556331 call _getIterator[1570763] call_tmp[1556320]))
        {
          val ret[2018391]:_ir_these_range_int64_t_bounded_T[1573203] "dead after last mention" "RVV" "temp"
          const-val _return_tmp_[2018393]:bool[10] "dead after last mention" "temp"
          const-val this[2018841]:range(int(64),bounded,true)[1570523] "temp"
          (2018846 'move' this[2018841](2018843 '.v' _iterator[1556308] F0_this[2167399]))
          (2018395 'move' _return_tmp_[2018393](2018398 call checkIfIterWillOverflow[1571479] this[2018841] 1))
          const-val call_tmp[2018401]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val this[2018848]:range(int(64),bounded,true)[1570523] "temp"
          (2018853 'move' this[2018848](2018850 '.v' _iterator[1556308] F0_this[2167399]))
          (2018403 'move' call_tmp[2018401](2018406 call isAmbiguous[1572580] this[2018848]))
          const-val call_tmp[2018408]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2018410 'move' call_tmp[2018408] call_tmp[2018401])
          if call_tmp[2018401]
          {
            (2018416 call boundsCheckHalt[210254] "these -- Attempt to iterate over a range with ambiguous alignment.")
          }
          val i[2018419]:int(64)[13] "dead at end of block" "insert auto destroy"
          val call_tmp[2018421]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          (2018423 'move' i[2018419] 0)
          const-val call_tmp[2018426]:int(64)[13] "dead at end of block" "maybe param" "temp"
          const-val this[2018855]:range(int(64),bounded,true)[1570523] "temp"
          (2018860 'move' this[2018855](2018857 '.v' _iterator[1556308] F0_this[2167399]))
          (2018428 'move' call_tmp[2018426](2018431 call firstAsInt[1571772] this[2018855]))
          const-val start[2018433]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
          (2018435 'move' start[2018433] call_tmp[2018426])
          const end[2018438]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
          val tmp[2018440]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
          const-val tmp[2018442]:bool[10] "dead after last mention" "maybe param" "temp"
          const-val call_tmp[2018444]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val this[2018862]:range(int(64),bounded,true)[1570523] "temp"
          (2018867 'move' this[2018862](2018864 '.v' _iterator[1556308] F0_this[2167399]))
          (2018446 'move' call_tmp[2018444](2018449 call low[1573036] this[2018862]))
          const-val call_tmp[2018451]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val this[2018869]:range(int(64),bounded,true)[1570523] "temp"
          (2018874 'move' this[2018869](2018871 '.v' _iterator[1556308] F0_this[2167399]))
          (2018453 'move' call_tmp[2018451](2018456 call high[1573130] this[2018869]))
          const-val call_tmp[2018458]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2018460 'move' call_tmp[2018458](2018463 call >[437788] call_tmp[2018444] call_tmp[2018451]))
          (2018466 'move' tmp[2018442] call_tmp[2018458])
          if call_tmp[2018458]
          {
            (2018471 'move' tmp[2018440] start[2018433])
          }
          {
            const-val tmp[2018475]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
            const-val call_tmp[2018477]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val this[2018876]:range(int(64),bounded,true)[1570523] "temp"
            (2018881 'move' this[2018876](2018878 '.v' _iterator[1556308] F0_this[2167399]))
            (2018479 'move' call_tmp[2018477](2018482 call lastAsInt[1572406] this[2018876]))
            val call_tmp[2018484]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            const-val call_tmp[2018486]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val this[2018883]:range(int(64),bounded,true)[1570523] "temp"
            (2018888 'move' this[2018883](2018885 '.v' _iterator[1556308] F0_this[2167399]))
            (2018488 'move' call_tmp[2018486](2018491 call stride[1571704] this[2018883]))
            const-val call_tmp[2018493]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            (2018495 'move' call_tmp[2018493] call_tmp[2018486])
            (2018498 'move' tmp[2018475](2018501 call +[439752] call_tmp[2018477] call_tmp[2018486]))
            (2018504 'move' tmp[2018440] tmp[2018475])
          }
          val call_tmp[2018508]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
          (2018510 'move' end[2018438] tmp[2018440])
          CForLoop[2018513] hazard
          {
            const-val yret[2018540]:int(64)[13] "dead after last mention" "YVV" "temp"
            const-val call_tmp[2018542]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val this[2018890]:range(int(64),bounded,true)[1570523] "temp"
            (2018895 'move' this[2018890](2018892 '.v' _iterator[1556308] F0_this[2167399]))
            (2018544 'move' call_tmp[2018542](2018547 call chpl_intToIdx[1573078] this[2018890] i[2018419]))
            (2018550 'move' yret[2018540] call_tmp[2018542])
            const-val _yieldedIndex[2018564]:int(64)[13] "temp"
            (2018839 'move' _yieldedIndex[2018564] call_tmp[2018542])
            {
              const-val j[2018566]:int(64)[13] "const" "index var" "insert auto destroy"
              (2018568 'move' j[2018566] _yieldedIndex[2018564])
              {
                const-val call_tmp[2018572]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2018574 'move' call_tmp[2018572] first[1556210])
                if call_tmp[2018572]
                {
                  (2018580 call =[435290] first[1556210] 0)
                }
                {
                  const-val call_tmp[2018584]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2018586 'move' call_tmp[2018584] isspace[1555778])
                  if call_tmp[2018584]
                  {
                    const-val call_tmp[2018591]:ioLiteral[238841] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
                    const-val initTemp[2018593]:ioLiteral[238841] "dead after last mention" "temp"
                    const-val _formal_tmp_in_val[2018595]:string[26] "dead after last mention" "expr temp" "no auto destroy" "temp"
                    (2018597 'move' _formal_tmp_in_val[2018595](2018600 call chpl__initCopy[981537] " "))
                    const-val default_arg_ignoreWhiteSpace[2018602]:bool[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
                    (2018604 'move' default_arg_ignoreWhiteSpace[2018602](2018607 call init_default_ignoreWhiteSpace[1565399]))
                    (2018609 call init[894987] initTemp[2018593] _formal_tmp_in_val[2018595] default_arg_ignoreWhiteSpace[2018602])
                    (2018613 'move' call_tmp[2018591] initTemp[2018593])
                    ref _return_tmp_[2018616]:_ref(channel(true,dynamic,false))[1061145] "dead after last mention" "temp"
                    val error[2018618]:Error[167984] "error variable" "temp"
                    (2018620 'move' error[2018618] nil[44])
                    (2018623 'move' _return_tmp_[2018616](2018626 call <~>[1565439] f[1882726] call_tmp[2018591] error[2018618]))
                    val errorExists[2226160]:bool[10] "temp"
                    (2226165 'move' errorExists[2226160](2226162 '!=' error[2018618] nil[44]))
                    if errorExists[2226160]
                    {
                      (2018633 '=' error_out[1888382] error[2018618])
                      (2018637 call chpl__autoDestroy[1603717] call_tmp[2018591])
                      (2018640 call _freeIterator[1578263] _iterator[1556308])
                      (2018643 call chpl__autoDestroy[1825161] call_tmp[1556320])
                      (2018646 call chpl__autoDestroy[1407763] call_tmp[1556310])
                      (2018649 call chpl__autoDestroy[1697253] _formal_tmp_idx[1565316])
                      gotoErrorHandlingReturn _endrecursiveArrayWriter[1888384] _endrecursiveArrayWriter[1888384]
                    }
                    (2018655 call chpl__autoDestroy[1603717] call_tmp[2018591])
                  }
                  {
                    const-val tmp[2018658]:bool[10] "dead after last mention" "maybe param" "temp"
                    (2018660 'move' tmp[2018658] isjson[1555849])
                    val tmp[2018663]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                    const-val tmp[2018665]:bool[10] "dead after last mention" "maybe param" "temp"
                    const-val call_tmp[2018667]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2018669 'move' call_tmp[2018667] tmp[2018658])
                    (2018672 'move' tmp[2018665] call_tmp[2018667])
                    if tmp[2018665]
                    {
                      (2018677 'move' tmp[2018663] 1)
                    }
                    {
                      const-val tmp[2018681]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                      (2018683 'move' tmp[2018681] ischpl[1555920])
                      (2018686 'move' tmp[2018663] tmp[2018681])
                    }
                    const-val call_tmp[2018690]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2018692 'move' call_tmp[2018690] tmp[2018663])
                    if call_tmp[2018690]
                    {
                      const-val call_tmp[2018697]:ioLiteral[238841] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
                      const-val initTemp[2018699]:ioLiteral[238841] "dead after last mention" "temp"
                      const-val _formal_tmp_in_val[2018701]:string[26] "dead after last mention" "expr temp" "no auto destroy" "temp"
                      (2018703 'move' _formal_tmp_in_val[2018701](2018706 call chpl__initCopy[981537] ", "))
                      const-val default_arg_ignoreWhiteSpace[2018708]:bool[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
                      (2018710 'move' default_arg_ignoreWhiteSpace[2018708](2018713 call init_default_ignoreWhiteSpace[1565399]))
                      (2018715 call init[894987] initTemp[2018699] _formal_tmp_in_val[2018701] default_arg_ignoreWhiteSpace[2018708])
                      (2018719 'move' call_tmp[2018697] initTemp[2018699])
                      ref _return_tmp_[2018722]:_ref(channel(true,dynamic,false))[1061145] "dead after last mention" "temp"
                      val error[2018724]:Error[167984] "error variable" "temp"
                      (2018726 'move' error[2018724] nil[44])
                      (2018729 'move' _return_tmp_[2018722](2018732 call <~>[1565439] f[1882726] call_tmp[2018697] error[2018724]))
                      val errorExists[2226168]:bool[10] "temp"
                      (2226173 'move' errorExists[2226168](2226170 '!=' error[2018724] nil[44]))
                      if errorExists[2226168]
                      {
                        (2018739 '=' error_out[1888382] error[2018724])
                        (2018743 call chpl__autoDestroy[1603717] call_tmp[2018697])
                        (2018746 call _freeIterator[1578263] _iterator[1556308])
                        (2018749 call chpl__autoDestroy[1825161] call_tmp[1556320])
                        (2018752 call chpl__autoDestroy[1407763] call_tmp[1556310])
                        (2018755 call chpl__autoDestroy[1697253] _formal_tmp_idx[1565316])
                        gotoErrorHandlingReturn _endrecursiveArrayWriter[1888384] _endrecursiveArrayWriter[1888384]
                      }
                      (2018761 call chpl__autoDestroy[1603717] call_tmp[2018697])
                    }
                  }
                }
                ref call_tmp[2018766]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                (2018768 'move' call_tmp[2018766](2018771 call this[1441225] _formal_tmp_idx[1565316] dim[1555717]))
                (2018775 call =[435443] call_tmp[2018766] j[2018566])
                ref call_tmp[2018778]:_ref(real(64))[936906] "dead after last mention" "maybe param" "temp"
                val tmp[2018780]:real(64)[16] "temp"
                (2018782 'move' tmp[2018780](2018785 call dsiAccess[1389876] arr[1882730] _formal_tmp_idx[1565316]))
                (2018788 'move' call_tmp[2018778](2018790 'addr of' tmp[2018780]))
                const-val coerce_tmp[2018792]:real(64)[16] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (2018794 'move' coerce_tmp[2018792](2018796 'deref' call_tmp[2018778]))
                ref _return_tmp_[2018798]:_ref(channel(true,dynamic,false))[1061145] "dead after last mention" "temp"
                val error[2018800]:Error[167984] "error variable" "temp"
                (2018802 'move' error[2018800] nil[44])
                (2018805 'move' _return_tmp_[2018798](2018808 call <~>[1578428] f[1882726] coerce_tmp[2018792] error[2018800]))
                val errorExists[2226176]:bool[10] "temp"
                (2226181 'move' errorExists[2226176](2226178 '!=' error[2018800] nil[44]))
                if errorExists[2226176]
                {
                  (2018815 '=' error_out[1888382] error[2018800])
                  (2018819 call _freeIterator[1578263] _iterator[1556308])
                  (2018822 call chpl__autoDestroy[1825161] call_tmp[1556320])
                  (2018825 call chpl__autoDestroy[1407763] call_tmp[1556310])
                  (2018828 call chpl__autoDestroy[1697253] _formal_tmp_idx[1565316])
                  gotoErrorHandlingReturn _endrecursiveArrayWriter[1888384] _endrecursiveArrayWriter[1888384]
                }
              }
              label _continueLabel[2018833]
            }
            {
              (2018515 '=' i[2018419] start[2018433])
            }
            {
              (2018519 '!=' i[2018419] end[2018438])
            }
            {
              val call_tmp[2018523]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              val call_tmp[2018525]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val this[2018897]:range(int(64),bounded,true)[1570523] "temp"
              (2018902 'move' this[2018897](2018899 '.v' _iterator[1556308] F0_this[2167399]))
              (2018527 'move' call_tmp[2018525](2018530 call stride[1571704] this[2018897]))
              const-val call_tmp[2018532]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (2018534 'move' call_tmp[2018532] call_tmp[2018525])
              (2018537 '+=' i[2018419] call_tmp[2018525])
            }
          }
          label _endthese[2018560]
        }
        label _breakLabel[1556500]
        (1927398 call _freeIterator[1578263] _iterator[1556308])
        (1927400 call chpl__autoDestroy[1825161] call_tmp[1556320])
        (1927403 call chpl__autoDestroy[1407763] call_tmp[1556310])
      }
    }
    {
      {
        val _indexOfInterest[1556504]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1556506]:_ic_these_range_int64_t_bounded_T[1573197] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[1556508]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        val coerce_tmp[1585699]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1585704 'move' coerce_tmp[1585699] dom[1882728])
        const-val ret_tmp[1912008]:range(int(64),bounded,false)[1027003] "temp"
        (1556516 call dsiDim[1258236] coerce_tmp[1585699] dim[1555717] ret_tmp[1912008])
        (1912011 'move' call_tmp[1556508] ret_tmp[1912008])
        const-val call_tmp[1556518]:range(int(64),bounded,true)[1570523] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1916907]:range(int(64),bounded,true)[1570523] "temp"
        (1556523 call chpl_by[1569109] call_tmp[1556508] makeStridePositive[1555976] ret_tmp[1916907])
        (1916910 'move' call_tmp[1556518] ret_tmp[1916907])
        (1556526 'move' _iterator[1556506](1556529 call _getIterator[1570763] call_tmp[1556518]))
        {
          val ret[2018905]:_ir_these_range_int64_t_bounded_T[1573203] "dead after last mention" "RVV" "temp"
          const-val _return_tmp_[2018907]:bool[10] "dead after last mention" "temp"
          const-val this[2019463]:range(int(64),bounded,true)[1570523] "temp"
          (2019468 'move' this[2019463](2019465 '.v' _iterator[1556506] F0_this[2167399]))
          (2018909 'move' _return_tmp_[2018907](2018912 call checkIfIterWillOverflow[1571479] this[2019463] 1))
          const-val call_tmp[2018915]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val this[2019470]:range(int(64),bounded,true)[1570523] "temp"
          (2019475 'move' this[2019470](2019472 '.v' _iterator[1556506] F0_this[2167399]))
          (2018917 'move' call_tmp[2018915](2018920 call isAmbiguous[1572580] this[2019470]))
          const-val call_tmp[2018922]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2018924 'move' call_tmp[2018922] call_tmp[2018915])
          if call_tmp[2018915]
          {
            (2018930 call boundsCheckHalt[210254] "these -- Attempt to iterate over a range with ambiguous alignment.")
          }
          val i[2018933]:int(64)[13] "dead at end of block" "insert auto destroy"
          val call_tmp[2018935]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          (2018937 'move' i[2018933] 0)
          const-val call_tmp[2018940]:int(64)[13] "dead at end of block" "maybe param" "temp"
          const-val this[2019477]:range(int(64),bounded,true)[1570523] "temp"
          (2019482 'move' this[2019477](2019479 '.v' _iterator[1556506] F0_this[2167399]))
          (2018942 'move' call_tmp[2018940](2018945 call firstAsInt[1571772] this[2019477]))
          const-val start[2018947]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
          (2018949 'move' start[2018947] call_tmp[2018940])
          const end[2018952]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
          val tmp[2018954]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
          const-val tmp[2018956]:bool[10] "dead after last mention" "maybe param" "temp"
          const-val call_tmp[2018958]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val this[2019484]:range(int(64),bounded,true)[1570523] "temp"
          (2019489 'move' this[2019484](2019486 '.v' _iterator[1556506] F0_this[2167399]))
          (2018960 'move' call_tmp[2018958](2018963 call low[1573036] this[2019484]))
          const-val call_tmp[2018965]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val this[2019491]:range(int(64),bounded,true)[1570523] "temp"
          (2019496 'move' this[2019491](2019493 '.v' _iterator[1556506] F0_this[2167399]))
          (2018967 'move' call_tmp[2018965](2018970 call high[1573130] this[2019491]))
          const-val call_tmp[2018972]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2018974 'move' call_tmp[2018972](2018977 call >[437788] call_tmp[2018958] call_tmp[2018965]))
          (2018980 'move' tmp[2018956] call_tmp[2018972])
          if call_tmp[2018972]
          {
            (2018985 'move' tmp[2018954] start[2018947])
          }
          {
            const-val tmp[2018989]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
            const-val call_tmp[2018991]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val this[2019498]:range(int(64),bounded,true)[1570523] "temp"
            (2019503 'move' this[2019498](2019500 '.v' _iterator[1556506] F0_this[2167399]))
            (2018993 'move' call_tmp[2018991](2018996 call lastAsInt[1572406] this[2019498]))
            val call_tmp[2018998]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            const-val call_tmp[2019000]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val this[2019505]:range(int(64),bounded,true)[1570523] "temp"
            (2019510 'move' this[2019505](2019507 '.v' _iterator[1556506] F0_this[2167399]))
            (2019002 'move' call_tmp[2019000](2019005 call stride[1571704] this[2019505]))
            const-val call_tmp[2019007]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            (2019009 'move' call_tmp[2019007] call_tmp[2019000])
            (2019012 'move' tmp[2018989](2019015 call +[439752] call_tmp[2018991] call_tmp[2019000]))
            (2019018 'move' tmp[2018954] tmp[2018989])
          }
          val call_tmp[2019022]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
          (2019024 'move' end[2018952] tmp[2018954])
          CForLoop[2019027] hazard
          {
            const-val yret[2019054]:int(64)[13] "dead after last mention" "YVV" "temp"
            const-val call_tmp[2019056]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val this[2019512]:range(int(64),bounded,true)[1570523] "temp"
            (2019517 'move' this[2019512](2019514 '.v' _iterator[1556506] F0_this[2167399]))
            (2019058 'move' call_tmp[2019056](2019061 call chpl_intToIdx[1573078] this[2019512] i[2018933]))
            (2019064 'move' yret[2019054] call_tmp[2019056])
            const-val _yieldedIndex[2019078]:int(64)[13] "temp"
            (2019461 'move' _yieldedIndex[2019078] call_tmp[2019056])
            {
              const-val j[2019080]:int(64)[13] "const" "index var" "insert auto destroy"
              (2019082 'move' j[2019080] _yieldedIndex[2019078])
              {
                const-val call_tmp[2019086]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
                val coerce_tmp[2019088]:domain(1,int(64),false)[1251123] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2019090 'move' coerce_tmp[2019088] dom[1882728])
                const-val ret_tmp[2019093]:range(int(64),bounded,false)[1027003] "temp"
                (2019096 call dsiDim[1258236] coerce_tmp[2019088] dim[1555717] ret_tmp[2019093])
                (2019100 'move' call_tmp[2019086] ret_tmp[2019093])
                const-val call_tmp[2019103]:int(64)[13] "dead at end of block" "maybe param" "temp"
                (2019105 'move' call_tmp[2019103](2019108 call last[1585719] call_tmp[2019086]))
                const-val lastIdx[2019110]:int(64)[13] "dead at end of block" "insert auto destroy"
                (2019112 'move' lastIdx[2019110] call_tmp[2019103])
                ref call_tmp[2019115]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                (2019117 'move' call_tmp[2019115](2019120 call this[1441225] _formal_tmp_idx[1565316] dim[1555717]))
                (2019124 call =[435443] call_tmp[2019115] j[2019080])
                const-val tmp[2019127]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val tmp[2019129]:bool[10] "dead after last mention" "maybe param" "temp"
                (2019131 'move' tmp[2019129] last[1555723])
                val tmp[2019134]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[2019136]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[2019138]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2019140 'move' call_tmp[2019138] tmp[2019129])
                (2019143 'move' tmp[2019136] call_tmp[2019138])
                if tmp[2019136]
                {
                  (2019148 'move' tmp[2019134] 1)
                }
                {
                  const-val tmp[2019152]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  const-val call_tmp[2019154]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2019156 'move' call_tmp[2019154](2019159 call ==[435744] dim[1555717] 0))
                  (2019162 'move' tmp[2019152] call_tmp[2019154])
                  (2019165 'move' tmp[2019134] tmp[2019152])
                }
                (2019169 'move' tmp[2019127] tmp[2019134])
                val tmp[2019172]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[2019174]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[2019176]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2019178 'move' call_tmp[2019176] tmp[2019127])
                (2019181 'move' tmp[2019174] call_tmp[2019176])
                if tmp[2019174]
                {
                  const-val tmp[2019186]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  const-val call_tmp[2019188]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  val coerce_tmp[2019190]:domain(1,int(64),false)[1251123] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (2019192 'move' coerce_tmp[2019190] dom[1882728])
                  const-val ret_tmp[2019195]:range(int(64),bounded,false)[1027003] "temp"
                  (2019198 call dsiDim[1258236] coerce_tmp[2019190] dim[1555717] ret_tmp[2019195])
                  (2019202 'move' call_tmp[2019188] ret_tmp[2019195])
                  const-val call_tmp[2019205]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2019207 'move' call_tmp[2019205](2019210 call alignedHigh[1105114] call_tmp[2019188]))
                  const-val call_tmp[2019212]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2019214 'move' call_tmp[2019212](2019217 call ==[435744] j[2019080] call_tmp[2019205]))
                  (2019220 'move' tmp[2019186] call_tmp[2019212])
                  (2019223 'move' tmp[2019172] tmp[2019186])
                  (2019227 call chpl__autoDestroy[1407763] call_tmp[2019188])
                }
                {
                  (2019230 'move' tmp[2019172] 0)
                }
                const-val call_tmp[2019234]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (2019236 'move' call_tmp[2019234](2019239 call +[949855] dim[1555717]))
                const-val _formal_tmp_in_idx[2019241]:1*int(64)[1256714] "dead after last mention" "expr temp" "no auto destroy" "temp"
                (2019243 'move' _formal_tmp_in_idx[2019241](2019246 call chpl__initCopy[1441632] _formal_tmp_idx[1565316]))
                val error[2019248]:Error[167984] "error variable" "temp"
                (2019250 'move' error[2019248] nil[44])
                (2019254 call recursiveArrayWriter[1555704] _formal_tmp_in_idx[2019241] call_tmp[2019234] tmp[2019172] f[1882726] dom[1882728] arr[1882730] error[2019248])
                val errorExists[2226184]:bool[10] "temp"
                (2226189 'move' errorExists[2226184](2226186 '!=' error[2019248] nil[44]))
                if errorExists[2226184]
                {
                  (2019265 '=' error_out[1888382] error[2019248])
                  (2019269 call chpl__autoDestroy[1407763] call_tmp[2019086])
                  (2019272 call _freeIterator[1578263] _iterator[1556506])
                  (2019275 call chpl__autoDestroy[1825161] call_tmp[1556518])
                  (2019278 call chpl__autoDestroy[1407763] call_tmp[1556508])
                  (2019281 call chpl__autoDestroy[1697253] _formal_tmp_idx[1565316])
                  gotoErrorHandlingReturn _endrecursiveArrayWriter[1888384] _endrecursiveArrayWriter[1888384]
                }
                const-val tmp[2019286]:bool[10] "dead after last mention" "maybe param" "temp"
                (2019288 'move' tmp[2019286] isjson[1555849])
                val tmp[2019291]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[2019293]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[2019295]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2019297 'move' call_tmp[2019295] tmp[2019286])
                (2019300 'move' tmp[2019293] call_tmp[2019295])
                if tmp[2019293]
                {
                  (2019305 'move' tmp[2019291] 1)
                }
                {
                  const-val tmp[2019309]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  (2019311 'move' tmp[2019309] ischpl[1555920])
                  (2019314 'move' tmp[2019291] tmp[2019309])
                }
                const-val call_tmp[2019318]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2019320 'move' call_tmp[2019318] tmp[2019291])
                if call_tmp[2019318]
                {
                  const-val call_tmp[2019325]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2019327 'move' call_tmp[2019325](2019330 call !=[436128] j[2019080] lastIdx[2019110]))
                  const-val call_tmp[2019333]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2019335 'move' call_tmp[2019333] call_tmp[2019325])
                  if call_tmp[2019333]
                  {
                    const-val call_tmp[2019340]:ioLiteral[238841] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
                    const-val initTemp[2019342]:ioLiteral[238841] "dead after last mention" "temp"
                    const-val _formal_tmp_in_val[2019344]:string[26] "dead after last mention" "expr temp" "no auto destroy" "temp"
                    (2019346 'move' _formal_tmp_in_val[2019344](2019349 call chpl__initCopy[981537] ",\n"))
                    const-val default_arg_ignoreWhiteSpace[2019351]:bool[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
                    (2019353 'move' default_arg_ignoreWhiteSpace[2019351](2019356 call init_default_ignoreWhiteSpace[1565399]))
                    (2019358 call init[894987] initTemp[2019342] _formal_tmp_in_val[2019344] default_arg_ignoreWhiteSpace[2019351])
                    (2019362 'move' call_tmp[2019340] initTemp[2019342])
                    ref _return_tmp_[2019365]:_ref(channel(true,dynamic,false))[1061145] "dead after last mention" "temp"
                    val error[2019367]:Error[167984] "error variable" "temp"
                    (2019369 'move' error[2019367] nil[44])
                    (2019372 'move' _return_tmp_[2019365](2019375 call <~>[1565439] f[1882726] call_tmp[2019340] error[2019367]))
                    val errorExists[2226192]:bool[10] "temp"
                    (2226197 'move' errorExists[2226192](2226194 '!=' error[2019367] nil[44]))
                    if errorExists[2226192]
                    {
                      (2019382 '=' error_out[1888382] error[2019367])
                      (2019386 call chpl__autoDestroy[1603717] call_tmp[2019340])
                      (2019389 call chpl__autoDestroy[1407763] call_tmp[2019086])
                      (2019392 call _freeIterator[1578263] _iterator[1556506])
                      (2019395 call chpl__autoDestroy[1825161] call_tmp[1556518])
                      (2019398 call chpl__autoDestroy[1407763] call_tmp[1556508])
                      (2019401 call chpl__autoDestroy[1697253] _formal_tmp_idx[1565316])
                      gotoErrorHandlingReturn _endrecursiveArrayWriter[1888384] _endrecursiveArrayWriter[1888384]
                    }
                    (2019407 call chpl__autoDestroy[1603717] call_tmp[2019340])
                    const-val call_tmp[2019409]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2019411 'move' call_tmp[2019409](2019414 call +[949855] dim[1555717]))
                    val error[2019416]:Error[167984] "error variable" "temp"
                    (2019418 'move' error[2019416] nil[44])
                    (2019422 call writeSpaces[1555639] call_tmp[2019409] f[1882726] error[2019416])
                    val errorExists[2226200]:bool[10] "temp"
                    (2226205 'move' errorExists[2226200](2226202 '!=' error[2019416] nil[44]))
                    if errorExists[2226200]
                    {
                      (2019429 '=' error_out[1888382] error[2019416])
                      (2019433 call chpl__autoDestroy[1407763] call_tmp[2019086])
                      (2019436 call _freeIterator[1578263] _iterator[1556506])
                      (2019439 call chpl__autoDestroy[1825161] call_tmp[1556518])
                      (2019442 call chpl__autoDestroy[1407763] call_tmp[1556508])
                      (2019445 call chpl__autoDestroy[1697253] _formal_tmp_idx[1565316])
                      gotoErrorHandlingReturn _endrecursiveArrayWriter[1888384] _endrecursiveArrayWriter[1888384]
                    }
                  }
                }
                (2019453 call chpl__autoDestroy[1407763] call_tmp[2019086])
              }
              label _continueLabel[2019455]
            }
            {
              (2019029 '=' i[2018933] start[2018947])
            }
            {
              (2019033 '!=' i[2018933] end[2018952])
            }
            {
              val call_tmp[2019037]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              val call_tmp[2019039]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val this[2019519]:range(int(64),bounded,true)[1570523] "temp"
              (2019524 'move' this[2019519](2019521 '.v' _iterator[1556506] F0_this[2167399]))
              (2019041 'move' call_tmp[2019039](2019044 call stride[1571704] this[2019519]))
              const-val call_tmp[2019046]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (2019048 'move' call_tmp[2019046] call_tmp[2019039])
              (2019051 '+=' i[2018933] call_tmp[2019039])
            }
          }
          label _endthese[2019074]
        }
        label _breakLabel[1556860]
        (1927472 call _freeIterator[1578263] _iterator[1556506])
        (1927474 call chpl__autoDestroy[1825161] call_tmp[1556518])
        (1927477 call chpl__autoDestroy[1407763] call_tmp[1556508])
      }
    }
    const-val call_tmp[1556863]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1556865 'move' call_tmp[1556863] isspace[1555778])
    if call_tmp[1556863]
    {
      const-val tmp[1556872]:bool[10] "dead after last mention" "maybe param" "temp"
      (1556874 'move' tmp[1556872](1556877 call ![7494] last[1555723]))
      val tmp[1556892]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1556894]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1556896]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1556898 'move' call_tmp[1556896] tmp[1556872])
      (1556903 'move' tmp[1556894] call_tmp[1556896])
      if tmp[1556894]
      {
        const-val tmp[1556910]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1556912]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1556914 'move' call_tmp[1556912](1556917 call !=[436128] dim[1555717] 0))
        (1556920 'move' tmp[1556910] call_tmp[1556912])
        (1556925 'move' tmp[1556892] tmp[1556910])
      }
      {
        (1556931 'move' tmp[1556892] 0)
      }
      const-val call_tmp[1556937]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1556939 'move' call_tmp[1556937] tmp[1556892])
      if call_tmp[1556937]
      {
        const-val call_tmp[1556946]:ioLiteral[238841] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
        const-val initTemp[1585844]:ioLiteral[238841] "dead after last mention" "temp"
        const-val _formal_tmp_in_val[1585864]:string[26] "dead after last mention" "expr temp" "no auto destroy" "temp"
        (1585868 'move' _formal_tmp_in_val[1585864](1585865 call chpl__initCopy[981537] "\n"))
        const-val default_arg_ignoreWhiteSpace[1585873]:bool[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
        (1585877 'move' default_arg_ignoreWhiteSpace[1585873](1585875 call init_default_ignoreWhiteSpace[1565399]))
        (1585847 call init[894987] initTemp[1585844] _formal_tmp_in_val[1585864] default_arg_ignoreWhiteSpace[1585873])
        (1556948 'move' call_tmp[1556946] initTemp[1585844])
        ref _return_tmp_[1875640]:_ref(channel(true,dynamic,false))[1061145] "dead after last mention" "temp"
        val error[1888522]:Error[167984] "error variable" "temp"
        (1888524 'move' error[1888522] nil[44])
        (1875642 'move' _return_tmp_[1875640](1556954 call <~>[1565439] f[1882726] call_tmp[1556946] error[1888522]))
        val errorExists[2224184]:bool[10] "temp"
        (2224189 'move' errorExists[2224184](2224186 '!=' error[1888522] nil[44]))
        if errorExists[2224184]
        {
          (1888528 '=' error_out[1888382] error[1888522])
          (1927480 call chpl__autoDestroy[1603717] call_tmp[1556946])
          (1927483 call chpl__autoDestroy[1697253] _formal_tmp_idx[1565316])
          gotoErrorHandlingReturn _endrecursiveArrayWriter[1888384] _endrecursiveArrayWriter[1888384]
        }
        (1927487 call chpl__autoDestroy[1603717] call_tmp[1556946])
      }
    }
    {
      const-val tmp[1556959]:bool[10] "dead after last mention" "maybe param" "temp"
      (1556961 'move' tmp[1556959] isjson[1555849])
      val tmp[1556977]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1556979]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1556981]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1556983 'move' call_tmp[1556981] tmp[1556959])
      (1556988 'move' tmp[1556979] call_tmp[1556981])
      if tmp[1556979]
      {
        (1556995 'move' tmp[1556977] 1)
      }
      {
        const-val tmp[1557001]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        (1557003 'move' tmp[1557001] ischpl[1555920])
        (1557008 'move' tmp[1556977] tmp[1557001])
      }
      const-val call_tmp[1557014]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1557016 'move' call_tmp[1557014] tmp[1556977])
      if call_tmp[1557014]
      {
        const-val call_tmp[1557031]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1557033 'move' call_tmp[1557031](1557036 call !=[436128] dim[1555717] 0))
        const-val call_tmp[1557039]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1557041 'move' call_tmp[1557039] call_tmp[1557031])
        if call_tmp[1557039]
        {
          const-val call_tmp[1557048]:ioLiteral[238841] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
          const-val initTemp[1585889]:ioLiteral[238841] "dead after last mention" "temp"
          const-val _formal_tmp_in_val[1585909]:string[26] "dead after last mention" "expr temp" "no auto destroy" "temp"
          (1585913 'move' _formal_tmp_in_val[1585909](1585910 call chpl__initCopy[981537] "\n"))
          const-val default_arg_ignoreWhiteSpace[1585918]:bool[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
          (1585922 'move' default_arg_ignoreWhiteSpace[1585918](1585920 call init_default_ignoreWhiteSpace[1565399]))
          (1585892 call init[894987] initTemp[1585889] _formal_tmp_in_val[1585909] default_arg_ignoreWhiteSpace[1585918])
          (1557050 'move' call_tmp[1557048] initTemp[1585889])
          ref _return_tmp_[1875644]:_ref(channel(true,dynamic,false))[1061145] "dead after last mention" "temp"
          val error[1888537]:Error[167984] "error variable" "temp"
          (1888539 'move' error[1888537] nil[44])
          (1875646 'move' _return_tmp_[1875644](1557056 call <~>[1565439] f[1882726] call_tmp[1557048] error[1888537]))
          val errorExists[2224192]:bool[10] "temp"
          (2224197 'move' errorExists[2224192](2224194 '!=' error[1888537] nil[44]))
          if errorExists[2224192]
          {
            (1888543 '=' error_out[1888382] error[1888537])
            (1927490 call chpl__autoDestroy[1603717] call_tmp[1557048])
            (1927493 call chpl__autoDestroy[1697253] _formal_tmp_idx[1565316])
            gotoErrorHandlingReturn _endrecursiveArrayWriter[1888384] _endrecursiveArrayWriter[1888384]
          }
          (1927496 call chpl__autoDestroy[1603717] call_tmp[1557048])
          val error[1888552]:Error[167984] "error variable" "temp"
          (1888554 'move' error[1888552] nil[44])
          (1557061 call writeSpaces[1555639] dim[1555717] f[1882726] error[1888552])
          val errorExists[2224200]:bool[10] "temp"
          (2224205 'move' errorExists[2224200](2224202 '!=' error[1888552] nil[44]))
          if errorExists[2224200]
          {
            (1888558 '=' error_out[1888382] error[1888552])
            (1927499 call chpl__autoDestroy[1697253] _formal_tmp_idx[1565316])
            gotoErrorHandlingReturn _endrecursiveArrayWriter[1888384] _endrecursiveArrayWriter[1888384]
          }
          const-val call_tmp[1557064]:ioLiteral[238841] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
          const-val initTemp[1585929]:ioLiteral[238841] "dead after last mention" "temp"
          const-val _formal_tmp_in_val[1585949]:string[26] "dead after last mention" "expr temp" "no auto destroy" "temp"
          (1585953 'move' _formal_tmp_in_val[1585949](1585950 call chpl__initCopy[981537] "]"))
          const-val default_arg_ignoreWhiteSpace[1585958]:bool[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
          (1585962 'move' default_arg_ignoreWhiteSpace[1585958](1585960 call init_default_ignoreWhiteSpace[1565399]))
          (1585932 call init[894987] initTemp[1585929] _formal_tmp_in_val[1585949] default_arg_ignoreWhiteSpace[1585958])
          (1557066 'move' call_tmp[1557064] initTemp[1585929])
          ref _return_tmp_[1875648]:_ref(channel(true,dynamic,false))[1061145] "dead after last mention" "temp"
          val error[1888567]:Error[167984] "error variable" "temp"
          (1888569 'move' error[1888567] nil[44])
          (1875650 'move' _return_tmp_[1875648](1557072 call <~>[1565439] f[1882726] call_tmp[1557064] error[1888567]))
          val errorExists[2224208]:bool[10] "temp"
          (2224213 'move' errorExists[2224208](2224210 '!=' error[1888567] nil[44]))
          if errorExists[2224208]
          {
            (1888573 '=' error_out[1888382] error[1888567])
            (1927502 call chpl__autoDestroy[1603717] call_tmp[1557064])
            (1927505 call chpl__autoDestroy[1697253] _formal_tmp_idx[1565316])
            gotoErrorHandlingReturn _endrecursiveArrayWriter[1888384] _endrecursiveArrayWriter[1888384]
          }
          (1927509 call chpl__autoDestroy[1603717] call_tmp[1557064])
        }
        {
          const-val call_tmp[1557076]:ioLiteral[238841] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
          const-val initTemp[1585968]:ioLiteral[238841] "dead after last mention" "temp"
          const-val _formal_tmp_in_val[1585988]:string[26] "dead after last mention" "expr temp" "no auto destroy" "temp"
          (1585992 'move' _formal_tmp_in_val[1585988](1585989 call chpl__initCopy[981537] "]"))
          const-val default_arg_ignoreWhiteSpace[1585997]:bool[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
          (1586001 'move' default_arg_ignoreWhiteSpace[1585997](1585999 call init_default_ignoreWhiteSpace[1565399]))
          (1585971 call init[894987] initTemp[1585968] _formal_tmp_in_val[1585988] default_arg_ignoreWhiteSpace[1585997])
          (1557078 'move' call_tmp[1557076] initTemp[1585968])
          ref _return_tmp_[1875652]:_ref(channel(true,dynamic,false))[1061145] "dead after last mention" "temp"
          val error[1888582]:Error[167984] "error variable" "temp"
          (1888584 'move' error[1888582] nil[44])
          (1875654 'move' _return_tmp_[1875652](1557084 call <~>[1565439] f[1882726] call_tmp[1557076] error[1888582]))
          val errorExists[2224216]:bool[10] "temp"
          (2224221 'move' errorExists[2224216](2224218 '!=' error[1888582] nil[44]))
          if errorExists[2224216]
          {
            (1888588 '=' error_out[1888382] error[1888582])
            (1927512 call chpl__autoDestroy[1603717] call_tmp[1557076])
            (1927515 call chpl__autoDestroy[1697253] _formal_tmp_idx[1565316])
            gotoErrorHandlingReturn _endrecursiveArrayWriter[1888384] _endrecursiveArrayWriter[1888384]
          }
          (1927519 call chpl__autoDestroy[1603717] call_tmp[1557076])
        }
      }
    }
    (1927522 call chpl__autoDestroy[1697253] _formal_tmp_idx[1565316])
    label _endrecursiveArrayWriter[1888384]
    (1557090 return _void[55])
  }
  function chpl__deinit_DefaultRectangular[1930195]() : void[4] "resolved"
  {
    label _endchpl__deinit_DefaultRectangular[1930201]
    (1930203 call chpl__autoDestroy[1695019] defaultDist[94053])
    (1930198 return _void[55])
  }
  function coforall_fn[1962183](const in arg parDim[1962185]:int(64)[13], const in arg numChunks[1962187]:int(64)[13], const in arg this[1962189]:domain(1,int(64),false)[1251123], const in arg chunk[1962191]:int(64)[13], const in arg _coforallCount[1962193]:_EndCount(AtomicT(int(64)),int(64))[945532], ref arg error_out[1962195]:Error[167984], const?  ref arg default_arg_offset[1962197]:_ref(1*int(64))[1256784], const in arg copy[1962555]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401], const in arg this[1962569]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401]) : void[4] throws "cobegin or coforall" "inlined function" "resolved" "task fn from iterator fn"
  {
    {
      ref call_tmp[1962201]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "maybe param" "temp"
      (1962203 'move' call_tmp[1962201](1962206 call ranges[1251533] this[1962189]))
      val block[1962208]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "insert auto destroy"
      (1962210 'move' block[1962208](1962213 call chpl__initCopy[1297040] call_tmp[1962201]))
      const-val len[1962215]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val tmp[1962217]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      ref call_tmp[1962219]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
      ref _this_tmp_[1962221]:_ref(1*range(int(64),bounded,false))[1244943] "dead after last mention" "temp"
      (1962223 'move' _this_tmp_[1962221](1962226 call ranges[1251533] this[1962189]))
      (1962228 'move' call_tmp[1962219](1962231 call this[1382848] _this_tmp_[1962221] parDim[1962185]))
      const-val tmp[1962234]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      ref call_tmp[1962236]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
      ref _this_tmp_[1962238]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "temp"
      (1962240 'move' _this_tmp_[1962238](1962243 call ranges[1251533] this[1962189]))
      (1962245 'move' call_tmp[1962236](1962248 call this[1382848] _this_tmp_[1962238] parDim[1962185]))
      const-val coerce_tmp[1962251]:range(int(64),bounded,false)[1027003] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1962253 'move' coerce_tmp[1962251](1962255 'deref' call_tmp[1962236]))
      (1962257 'move' tmp[1962234](1962260 call size[1035978] coerce_tmp[1962251]))
      (1962262 'move' tmp[1962217] tmp[1962234])
      (1962265 'move' len[1962215] tmp[1962217])
      ref call_tmp[1962268]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
      ref _this_tmp_[1962270]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "temp"
      (1962272 'move' _this_tmp_[1962270](1962275 call ranges[1251533] this[1962189]))
      (1962277 'move' call_tmp[1962268](1962280 call this[1382848] _this_tmp_[1962270] parDim[1962185]))
      ref call_tmp[1962283]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
      (1962285 'move' call_tmp[1962283](1962288 call _high[1028849] call_tmp[1962268]))
      ref call_tmp[1962290]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
      ref _this_tmp_[1962292]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "temp"
      (1962294 'move' _this_tmp_[1962292](1962297 call ranges[1251533] this[1962189]))
      (1962299 'move' call_tmp[1962290](1962302 call this[1382848] _this_tmp_[1962292] parDim[1962185]))
      ref call_tmp[1962305]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
      (1962307 'move' call_tmp[1962305](1962310 call _low[1028641] call_tmp[1962290]))
      ref call_tmp[1962312]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
      ref _this_tmp_[1962314]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "temp"
      (1962316 'move' _this_tmp_[1962314](1962319 call ranges[1251533] this[1962189]))
      (1962321 'move' call_tmp[1962312](1962324 call this[1382848] _this_tmp_[1962314] parDim[1962185]))
      ref call_tmp[1962327]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
      (1962329 'move' call_tmp[1962327](1962332 call _low[1028641] call_tmp[1962312]))
      const-val call_tmp[1962334]:2*int(64)[1040245] "dead at end of block" "maybe param" "temp"
      const-val coerce_tmp[1962336]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1962338 'move' coerce_tmp[1962336](1962340 'deref' call_tmp[1962283]))
      const-val coerce_tmp[1962342]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1962344 'move' coerce_tmp[1962342](1962346 'deref' call_tmp[1962305]))
      const-val coerce_tmp[1962348]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1962350 'move' coerce_tmp[1962348](1962352 'deref' call_tmp[1962327]))
      const-val ret_tmp[1962354]:2*int(64)[1040245] "temp"
      (1962357 call _computeBlock[1229525] len[1962215] numChunks[1962187] chunk[1962191] coerce_tmp[1962336] coerce_tmp[1962342] coerce_tmp[1962348] ret_tmp[1962354])
      (1962365 'move' call_tmp[1962334] ret_tmp[1962354])
      const-val tmp[1962368]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
      (1962370 'move' tmp[1962368] call_tmp[1962334])
      1
      ref call_tmp[1962374]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1962376 'move' call_tmp[1962374](1962378 '.' tmp[1962368] x0[1040241]))
      const-val lo[1962381]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1962383]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1962385 'move' coerce_tmp[1962383](1962387 'deref' call_tmp[1962374]))
      (1962389 '=' lo[1962381] coerce_tmp[1962383])
      (1962392 'noop')
      ref call_tmp[1962393]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1962395 'move' call_tmp[1962393](1962397 '.' tmp[1962368] x1[1040243]))
      const-val hi[1962400]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1962402]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1962404 'move' coerce_tmp[1962402](1962406 'deref' call_tmp[1962393]))
      (1962408 '=' hi[1962400] coerce_tmp[1962402])
      (1962411 'noop')
      ref call_tmp[1962412]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
      (1962414 'move' call_tmp[1962412](1962417 call this[1382848] block[1962208] parDim[1962185]))
      {
        ref call_tmp[1962421]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
        (1962423 'move' call_tmp[1962421](1962426 call this[1382848] block[1962208] parDim[1962185]))
        const-val call_tmp[1962429]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1962431]:range(int(64),bounded,false)[1027003] "temp"
        (1962434 call chpl_build_bounded_range[455253] lo[1962381] hi[1962400] ret_tmp[1962431])
        (1962438 'move' call_tmp[1962429] ret_tmp[1962431])
        (1962442 call =[1251739] call_tmp[1962421] call_tmp[1962429])
        (1962446 call chpl__autoDestroy[1407763] call_tmp[1962429])
      }
      {
        val _indexOfInterest[1962449]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1962451]:_ic_these_help_DefaultRectangularDom_1_int64_t_F[1384429] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[1962453]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1384435] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1962455]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1384435] "temp"
        (1962458 call these_help[1384021] this[1962189] block[1962208] ret_tmp[1962455])
        (1962462 'move' call_tmp[1962453] ret_tmp[1962455])
        (1962465 'move' _iterator[1962451](1962468 call _getIterator[1384444] call_tmp[1962453]))
        {
          val ret[2042091]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1384435] "dead after last mention" "RVV" "temp"
          val _indexOfInterest[2042093]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[2042095]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
          ref call_tmp[2042097]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
          ref block[2042346]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
          (2042351 'move' block[2042346](2042348 '.v' _iterator[1962451] F1_block[2135427]))
          (2042099 'move' call_tmp[2042097](2042101 '.' block[2042346] x0[1244883]))
          (2042104 'move' _iterator[2042095](2042107 call _getIterator[1095509] call_tmp[2042097]))
          {
            val ret[2042110]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
            const-val _return_tmp_[2042112]:bool[10] "dead after last mention" "temp"
            const-val this[2042114]:range(int(64),bounded,false)[1027003] "temp"
            (2042116 'move' this[2042114](2042118 '.v' _iterator[2042095] F0_this[2113071]))
            (2042121 'move' _return_tmp_[2042112](2042124 call checkIfIterWillOverflow[1096003] this[2042114] 1))
            val i[2042127]:int(64)[13] "dead at end of block" "insert auto destroy"
            val call_tmp[2042129]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (2042131 'move' i[2042127] 0)
            ref call_tmp[2042134]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[2042136]:range(int(64),bounded,false)[1027003] "temp"
            (2042138 'move' this[2042136](2042140 '.v' _iterator[2042095] F0_this[2113071]))
            (2042143 'move' call_tmp[2042134](2042146 call _low[1028641] this[2042136]))
            const-val start[2042148]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[2042150]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (2042152 'move' coerce_tmp[2042150](2042154 'deref' call_tmp[2042134]))
            (2042156 '=' start[2042148] coerce_tmp[2042150])
            (2042159 'noop')
            ref call_tmp[2042160]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[2042162]:range(int(64),bounded,false)[1027003] "temp"
            (2042164 'move' this[2042162](2042166 '.v' _iterator[2042095] F0_this[2113071]))
            (2042169 'move' call_tmp[2042160](2042172 call _high[1028849] this[2042162]))
            const end[2042174]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[2042176]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (2042178 'move' coerce_tmp[2042176](2042180 'deref' call_tmp[2042160]))
            (2042182 '=' end[2042174] coerce_tmp[2042176])
            (2042185 'noop')
            CForLoop[2042186] order-independent
            {
              const-val yret[2042201]:int(64)[13] "dead after last mention" "YVV" "temp"
              const-val call_tmp[2042203]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val this[2042205]:range(int(64),bounded,false)[1027003] "temp"
              (2042207 'move' this[2042205](2042209 '.v' _iterator[2042095] F0_this[2113071]))
              (2042212 'move' call_tmp[2042203](2042215 call chpl_intToIdx[1028669] this[2042205] i[2042127]))
              (2042218 'move' yret[2042201] call_tmp[2042203])
              const-val _yieldedIndex[2042221]:int(64)[13] "temp"
              (2042223 'move' _yieldedIndex[2042221] call_tmp[2042203])
              {
                const-val i[2042227]:int(64)[13] "const" "index var" "insert auto destroy"
                (2042229 'move' i[2042227] _yieldedIndex[2042221])
                const-val yret[2042232]:int(64)[13] "dead after last mention" "YVV" "temp"
                (2042234 'move' yret[2042232] _yieldedIndex[2042221])
                const-val _yieldedIndex[2042256]:int(64)[13] "temp"
                (2042344 'move' _yieldedIndex[2042256] _yieldedIndex[2042221])
                {
                  const-val i[2042258]:int(64)[13] "const" "index var" "insert auto destroy"
                  (2042260 'move' i[2042258] _yieldedIndex[2042256])
                  {
                    const-val yret[2042264]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (2042266 'move' yret[2042264] i[2042258])
                    const-val _indexOfInterest[2042269]:int(64)[13] "dead at end of block" "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    (2042271 'move' _indexOfInterest[2042269] yret[2042264])
                    {
                      const-val i[2042275]:int(64)[13] "const" "index var" "insert auto destroy"
                      (2042277 'move' i[2042275] _indexOfInterest[2042269])
                      const-val yret[2042280]:int(64)[13] "dead after last mention" "YVV" "temp"
                      (2042282 'move' yret[2042280] i[2042275])
                      const-val i[2042285]:int(64)[13] "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy"
                      (2042287 'move' i[2042285] yret[2042280])
                      {
                        ref dst[2042291]:_ref(localesSignal)[1316692] "dead at end of block" "ref var"
                        ref call_tmp[2042293]:_ref(localesSignal)[1316692] "dead at end of block" "maybe param" "temp"
                        val coerce_tmp[2042295]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                        (2042297 'move' coerce_tmp[2042295] copy[1962555])
                        val coerce_tmp[2042300]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                        (2042302 'move' coerce_tmp[2042300] copy[1962555])
                        val coerce_tmp[2042305]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                        (2042307 'move' coerce_tmp[2042305] copy[1962555])
                        (2042310 'move' call_tmp[2042293](2042313 call dsiAccess[1343972] coerce_tmp[2042295] i[2042285]))
                        (2042316 'move' dst[2042291] call_tmp[2042293])
                        ref src[2042319]:_ref(localesSignal)[1316692] "dead at end of block" "const" "ref var"
                        ref call_tmp[2042321]:_ref(localesSignal)[1316692] "dead at end of block" "maybe param" "temp"
                        (2042323 'move' call_tmp[2042321](2042326 call dsiAccess[1344160] this[1962569] i[2042285]))
                        (2042329 'move' src[2042319] call_tmp[2042321])
                        (2042332 '=' dst[2042291] src[2042319])
                        val optinfo[2042335]:int(64)[13] "no codegen" "temp" "forall no task private"
                        (2042337 'optimization info' optinfo[2042335])
                      }
                      label _continueLabel[2042339]
                    }
                  }
                  label _continueLabel[2042341]
                }
              }
              {
                (2042188 '=' i[2042127] coerce_tmp[2042150])
              }
              {
                (2042192 '<=' i[2042127] end[2042174])
              }
              {
                val call_tmp[2042196]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (2042198 '+=' i[2042127] 1)
              }
            }
            label _endthese[2042247]
          }
          (2042250 call _freeIterator[1102195] _iterator[2042095])
          label _endthese_help[2042252]
        }
        label _breakLabel[1962526]
        (1962529 call _freeIterator[1384621] _iterator[1962451])
      }
      (1962532 call chpl__autoDestroy[1674803] tmp[1962368])
      (1962535 call chpl__autoDestroy[1407763] coerce_tmp[1962251])
      (1962538 call chpl__autoDestroy[1695146] block[1962208])
    }
    label _endcoforall_fn[1962544]
    val coerce_tmp[1962572]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1962574 'move' coerce_tmp[1962572](1962576 'cast' object[22] this[1962569]))
    (1962580 call chpl__autoDestroy[1351354] coerce_tmp[1962572])
    val coerce_tmp[1962558]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1962560 'move' coerce_tmp[1962558](1962562 'cast' object[22] copy[1962555]))
    (1962566 call chpl__autoDestroy[1846254] coerce_tmp[1962558])
    (1962546 return _void[55])
  }
  function coforall_fn[1963159](const in arg parDim[1963161]:int(64)[13], const in arg numChunks[1963163]:int(64)[13], const in arg this[1963165]:domain(1,int(64),false)[1251123], const in arg chunk[1963167]:int(64)[13], const in arg _coforallCount[1963169]:_EndCount(AtomicT(int(64)),int(64))[945532], ref arg error_out[1963171]:Error[167984], const?  ref arg default_arg_offset[1963173]:_ref(1*int(64))[1256784], const in arg copy[1963531]:[domain(1,int(64),false)] real(64)[1358944], const in arg this[1963545]:[domain(1,int(64),false)] real(64)[1358944]) : void[4] throws "cobegin or coforall" "inlined function" "resolved" "task fn from iterator fn"
  {
    {
      ref call_tmp[1963177]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "maybe param" "temp"
      (1963179 'move' call_tmp[1963177](1963182 call ranges[1251533] this[1963165]))
      val block[1963184]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "insert auto destroy"
      (1963186 'move' block[1963184](1963189 call chpl__initCopy[1297040] call_tmp[1963177]))
      const-val len[1963191]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val tmp[1963193]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      ref call_tmp[1963195]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
      ref _this_tmp_[1963197]:_ref(1*range(int(64),bounded,false))[1244943] "dead after last mention" "temp"
      (1963199 'move' _this_tmp_[1963197](1963202 call ranges[1251533] this[1963165]))
      (1963204 'move' call_tmp[1963195](1963207 call this[1382848] _this_tmp_[1963197] parDim[1963161]))
      const-val tmp[1963210]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      ref call_tmp[1963212]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
      ref _this_tmp_[1963214]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "temp"
      (1963216 'move' _this_tmp_[1963214](1963219 call ranges[1251533] this[1963165]))
      (1963221 'move' call_tmp[1963212](1963224 call this[1382848] _this_tmp_[1963214] parDim[1963161]))
      const-val coerce_tmp[1963227]:range(int(64),bounded,false)[1027003] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1963229 'move' coerce_tmp[1963227](1963231 'deref' call_tmp[1963212]))
      (1963233 'move' tmp[1963210](1963236 call size[1035978] coerce_tmp[1963227]))
      (1963238 'move' tmp[1963193] tmp[1963210])
      (1963241 'move' len[1963191] tmp[1963193])
      ref call_tmp[1963244]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
      ref _this_tmp_[1963246]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "temp"
      (1963248 'move' _this_tmp_[1963246](1963251 call ranges[1251533] this[1963165]))
      (1963253 'move' call_tmp[1963244](1963256 call this[1382848] _this_tmp_[1963246] parDim[1963161]))
      ref call_tmp[1963259]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
      (1963261 'move' call_tmp[1963259](1963264 call _high[1028849] call_tmp[1963244]))
      ref call_tmp[1963266]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
      ref _this_tmp_[1963268]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "temp"
      (1963270 'move' _this_tmp_[1963268](1963273 call ranges[1251533] this[1963165]))
      (1963275 'move' call_tmp[1963266](1963278 call this[1382848] _this_tmp_[1963268] parDim[1963161]))
      ref call_tmp[1963281]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
      (1963283 'move' call_tmp[1963281](1963286 call _low[1028641] call_tmp[1963266]))
      ref call_tmp[1963288]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
      ref _this_tmp_[1963290]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "temp"
      (1963292 'move' _this_tmp_[1963290](1963295 call ranges[1251533] this[1963165]))
      (1963297 'move' call_tmp[1963288](1963300 call this[1382848] _this_tmp_[1963290] parDim[1963161]))
      ref call_tmp[1963303]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
      (1963305 'move' call_tmp[1963303](1963308 call _low[1028641] call_tmp[1963288]))
      const-val call_tmp[1963310]:2*int(64)[1040245] "dead at end of block" "maybe param" "temp"
      const-val coerce_tmp[1963312]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1963314 'move' coerce_tmp[1963312](1963316 'deref' call_tmp[1963259]))
      const-val coerce_tmp[1963318]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1963320 'move' coerce_tmp[1963318](1963322 'deref' call_tmp[1963281]))
      const-val coerce_tmp[1963324]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1963326 'move' coerce_tmp[1963324](1963328 'deref' call_tmp[1963303]))
      const-val ret_tmp[1963330]:2*int(64)[1040245] "temp"
      (1963333 call _computeBlock[1229525] len[1963191] numChunks[1963163] chunk[1963167] coerce_tmp[1963312] coerce_tmp[1963318] coerce_tmp[1963324] ret_tmp[1963330])
      (1963341 'move' call_tmp[1963310] ret_tmp[1963330])
      const-val tmp[1963344]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
      (1963346 'move' tmp[1963344] call_tmp[1963310])
      1
      ref call_tmp[1963350]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1963352 'move' call_tmp[1963350](1963354 '.' tmp[1963344] x0[1040241]))
      const-val lo[1963357]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1963359]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1963361 'move' coerce_tmp[1963359](1963363 'deref' call_tmp[1963350]))
      (1963365 '=' lo[1963357] coerce_tmp[1963359])
      (1963368 'noop')
      ref call_tmp[1963369]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1963371 'move' call_tmp[1963369](1963373 '.' tmp[1963344] x1[1040243]))
      const-val hi[1963376]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1963378]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1963380 'move' coerce_tmp[1963378](1963382 'deref' call_tmp[1963369]))
      (1963384 '=' hi[1963376] coerce_tmp[1963378])
      (1963387 'noop')
      ref call_tmp[1963388]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
      (1963390 'move' call_tmp[1963388](1963393 call this[1382848] block[1963184] parDim[1963161]))
      {
        ref call_tmp[1963397]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
        (1963399 'move' call_tmp[1963397](1963402 call this[1382848] block[1963184] parDim[1963161]))
        const-val call_tmp[1963405]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1963407]:range(int(64),bounded,false)[1027003] "temp"
        (1963410 call chpl_build_bounded_range[455253] lo[1963357] hi[1963376] ret_tmp[1963407])
        (1963414 'move' call_tmp[1963405] ret_tmp[1963407])
        (1963418 call =[1251739] call_tmp[1963397] call_tmp[1963405])
        (1963422 call chpl__autoDestroy[1407763] call_tmp[1963405])
      }
      {
        val _indexOfInterest[1963425]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1963427]:_ic_these_help_DefaultRectangularDom_1_int64_t_F[1384429] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[1963429]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1384435] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1963431]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1384435] "temp"
        (1963434 call these_help[1384021] this[1963165] block[1963184] ret_tmp[1963431])
        (1963438 'move' call_tmp[1963429] ret_tmp[1963431])
        (1963441 'move' _iterator[1963427](1963444 call _getIterator[1384444] call_tmp[1963429]))
        {
          val ret[2042773]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1384435] "dead after last mention" "RVV" "temp"
          val _indexOfInterest[2042775]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[2042777]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
          ref call_tmp[2042779]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
          ref block[2043028]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
          (2043033 'move' block[2043028](2043030 '.v' _iterator[1963427] F1_block[2135427]))
          (2042781 'move' call_tmp[2042779](2042783 '.' block[2043028] x0[1244883]))
          (2042786 'move' _iterator[2042777](2042789 call _getIterator[1095509] call_tmp[2042779]))
          {
            val ret[2042792]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
            const-val _return_tmp_[2042794]:bool[10] "dead after last mention" "temp"
            const-val this[2042796]:range(int(64),bounded,false)[1027003] "temp"
            (2042798 'move' this[2042796](2042800 '.v' _iterator[2042777] F0_this[2113071]))
            (2042803 'move' _return_tmp_[2042794](2042806 call checkIfIterWillOverflow[1096003] this[2042796] 1))
            val i[2042809]:int(64)[13] "dead at end of block" "insert auto destroy"
            val call_tmp[2042811]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (2042813 'move' i[2042809] 0)
            ref call_tmp[2042816]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[2042818]:range(int(64),bounded,false)[1027003] "temp"
            (2042820 'move' this[2042818](2042822 '.v' _iterator[2042777] F0_this[2113071]))
            (2042825 'move' call_tmp[2042816](2042828 call _low[1028641] this[2042818]))
            const-val start[2042830]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[2042832]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (2042834 'move' coerce_tmp[2042832](2042836 'deref' call_tmp[2042816]))
            (2042838 '=' start[2042830] coerce_tmp[2042832])
            (2042841 'noop')
            ref call_tmp[2042842]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[2042844]:range(int(64),bounded,false)[1027003] "temp"
            (2042846 'move' this[2042844](2042848 '.v' _iterator[2042777] F0_this[2113071]))
            (2042851 'move' call_tmp[2042842](2042854 call _high[1028849] this[2042844]))
            const end[2042856]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[2042858]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (2042860 'move' coerce_tmp[2042858](2042862 'deref' call_tmp[2042842]))
            (2042864 '=' end[2042856] coerce_tmp[2042858])
            (2042867 'noop')
            CForLoop[2042868] order-independent
            {
              const-val yret[2042883]:int(64)[13] "dead after last mention" "YVV" "temp"
              const-val call_tmp[2042885]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val this[2042887]:range(int(64),bounded,false)[1027003] "temp"
              (2042889 'move' this[2042887](2042891 '.v' _iterator[2042777] F0_this[2113071]))
              (2042894 'move' call_tmp[2042885](2042897 call chpl_intToIdx[1028669] this[2042887] i[2042809]))
              (2042900 'move' yret[2042883] call_tmp[2042885])
              const-val _yieldedIndex[2042903]:int(64)[13] "temp"
              (2042905 'move' _yieldedIndex[2042903] call_tmp[2042885])
              {
                const-val i[2042909]:int(64)[13] "const" "index var" "insert auto destroy"
                (2042911 'move' i[2042909] _yieldedIndex[2042903])
                const-val yret[2042914]:int(64)[13] "dead after last mention" "YVV" "temp"
                (2042916 'move' yret[2042914] _yieldedIndex[2042903])
                const-val _yieldedIndex[2042938]:int(64)[13] "temp"
                (2043026 'move' _yieldedIndex[2042938] _yieldedIndex[2042903])
                {
                  const-val i[2042940]:int(64)[13] "const" "index var" "insert auto destroy"
                  (2042942 'move' i[2042940] _yieldedIndex[2042938])
                  {
                    const-val yret[2042946]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (2042948 'move' yret[2042946] i[2042940])
                    const-val _indexOfInterest[2042951]:int(64)[13] "dead at end of block" "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    (2042953 'move' _indexOfInterest[2042951] yret[2042946])
                    {
                      const-val i[2042957]:int(64)[13] "const" "index var" "insert auto destroy"
                      (2042959 'move' i[2042957] _indexOfInterest[2042951])
                      const-val yret[2042962]:int(64)[13] "dead after last mention" "YVV" "temp"
                      (2042964 'move' yret[2042962] i[2042957])
                      const-val i[2042967]:int(64)[13] "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy"
                      (2042969 'move' i[2042967] yret[2042962])
                      {
                        ref dst[2042973]:_ref(real(64))[936906] "dead at end of block" "ref var"
                        ref call_tmp[2042975]:_ref(real(64))[936906] "dead at end of block" "maybe param" "temp"
                        val coerce_tmp[2042977]:[domain(1,int(64),false)] real(64)[1358944] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                        (2042979 'move' coerce_tmp[2042977] copy[1963531])
                        val coerce_tmp[2042982]:[domain(1,int(64),false)] real(64)[1358944] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                        (2042984 'move' coerce_tmp[2042982] copy[1963531])
                        val coerce_tmp[2042987]:[domain(1,int(64),false)] real(64)[1358944] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                        (2042989 'move' coerce_tmp[2042987] copy[1963531])
                        (2042992 'move' call_tmp[2042975](2042995 call dsiAccess[1389399] coerce_tmp[2042977] i[2042967]))
                        (2042998 'move' dst[2042973] call_tmp[2042975])
                        ref src[2043001]:_ref(real(64))[936906] "dead at end of block" "const" "ref var"
                        ref call_tmp[2043003]:_ref(real(64))[936906] "dead at end of block" "maybe param" "temp"
                        (2043005 'move' call_tmp[2043003](2043008 call dsiAccess[1389677] this[1963545] i[2042967]))
                        (2043011 'move' src[2043001] call_tmp[2043003])
                        (2043014 '=' dst[2042973] src[2043001])
                        val optinfo[2043017]:int(64)[13] "no codegen" "temp" "forall no task private"
                        (2043019 'optimization info' optinfo[2043017])
                      }
                      label _continueLabel[2043021]
                    }
                  }
                  label _continueLabel[2043023]
                }
              }
              {
                (2042870 '=' i[2042809] coerce_tmp[2042832])
              }
              {
                (2042874 '<=' i[2042809] end[2042856])
              }
              {
                val call_tmp[2042878]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (2042880 '+=' i[2042809] 1)
              }
            }
            label _endthese[2042929]
          }
          (2042932 call _freeIterator[1102195] _iterator[2042777])
          label _endthese_help[2042934]
        }
        label _breakLabel[1963502]
        (1963505 call _freeIterator[1384621] _iterator[1963427])
      }
      (1963508 call chpl__autoDestroy[1674803] tmp[1963344])
      (1963511 call chpl__autoDestroy[1407763] coerce_tmp[1963227])
      (1963514 call chpl__autoDestroy[1695146] block[1963184])
    }
    label _endcoforall_fn[1963520]
    val coerce_tmp[1963548]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1963550 'move' coerce_tmp[1963548](1963552 'cast' object[22] this[1963545]))
    (1963556 call chpl__autoDestroy[1351354] coerce_tmp[1963548])
    val coerce_tmp[1963534]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1963536 'move' coerce_tmp[1963534](1963538 'cast' object[22] copy[1963531]))
    (1963542 call chpl__autoDestroy[1846254] coerce_tmp[1963534])
    (1963522 return _void[55])
  }
  function coforall_fn[1964135](const in arg parDim[1964137]:int(64)[13], const in arg numChunks[1964139]:int(64)[13], const in arg this[1964141]:domain(1,int(64),false)[1251123], const in arg chunk[1964143]:int(64)[13], const in arg _coforallCount[1964145]:_EndCount(AtomicT(int(64)),int(64))[945532], ref arg error_out[1964147]:Error[167984], const?  ref arg default_arg_offset[1964149]:_ref(1*int(64))[1256784], const in arg copy[1964507]:[domain(1,int(64),false)] int(64)[1368867], const in arg this[1964521]:[domain(1,int(64),false)] int(64)[1368867]) : void[4] throws "cobegin or coforall" "inlined function" "resolved" "task fn from iterator fn"
  {
    {
      ref call_tmp[1964153]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "maybe param" "temp"
      (1964155 'move' call_tmp[1964153](1964158 call ranges[1251533] this[1964141]))
      val block[1964160]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "insert auto destroy"
      (1964162 'move' block[1964160](1964165 call chpl__initCopy[1297040] call_tmp[1964153]))
      const-val len[1964167]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val tmp[1964169]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      ref call_tmp[1964171]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
      ref _this_tmp_[1964173]:_ref(1*range(int(64),bounded,false))[1244943] "dead after last mention" "temp"
      (1964175 'move' _this_tmp_[1964173](1964178 call ranges[1251533] this[1964141]))
      (1964180 'move' call_tmp[1964171](1964183 call this[1382848] _this_tmp_[1964173] parDim[1964137]))
      const-val tmp[1964186]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      ref call_tmp[1964188]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
      ref _this_tmp_[1964190]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "temp"
      (1964192 'move' _this_tmp_[1964190](1964195 call ranges[1251533] this[1964141]))
      (1964197 'move' call_tmp[1964188](1964200 call this[1382848] _this_tmp_[1964190] parDim[1964137]))
      const-val coerce_tmp[1964203]:range(int(64),bounded,false)[1027003] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1964205 'move' coerce_tmp[1964203](1964207 'deref' call_tmp[1964188]))
      (1964209 'move' tmp[1964186](1964212 call size[1035978] coerce_tmp[1964203]))
      (1964214 'move' tmp[1964169] tmp[1964186])
      (1964217 'move' len[1964167] tmp[1964169])
      ref call_tmp[1964220]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
      ref _this_tmp_[1964222]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "temp"
      (1964224 'move' _this_tmp_[1964222](1964227 call ranges[1251533] this[1964141]))
      (1964229 'move' call_tmp[1964220](1964232 call this[1382848] _this_tmp_[1964222] parDim[1964137]))
      ref call_tmp[1964235]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
      (1964237 'move' call_tmp[1964235](1964240 call _high[1028849] call_tmp[1964220]))
      ref call_tmp[1964242]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
      ref _this_tmp_[1964244]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "temp"
      (1964246 'move' _this_tmp_[1964244](1964249 call ranges[1251533] this[1964141]))
      (1964251 'move' call_tmp[1964242](1964254 call this[1382848] _this_tmp_[1964244] parDim[1964137]))
      ref call_tmp[1964257]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
      (1964259 'move' call_tmp[1964257](1964262 call _low[1028641] call_tmp[1964242]))
      ref call_tmp[1964264]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
      ref _this_tmp_[1964266]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "temp"
      (1964268 'move' _this_tmp_[1964266](1964271 call ranges[1251533] this[1964141]))
      (1964273 'move' call_tmp[1964264](1964276 call this[1382848] _this_tmp_[1964266] parDim[1964137]))
      ref call_tmp[1964279]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
      (1964281 'move' call_tmp[1964279](1964284 call _low[1028641] call_tmp[1964264]))
      const-val call_tmp[1964286]:2*int(64)[1040245] "dead at end of block" "maybe param" "temp"
      const-val coerce_tmp[1964288]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1964290 'move' coerce_tmp[1964288](1964292 'deref' call_tmp[1964235]))
      const-val coerce_tmp[1964294]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1964296 'move' coerce_tmp[1964294](1964298 'deref' call_tmp[1964257]))
      const-val coerce_tmp[1964300]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1964302 'move' coerce_tmp[1964300](1964304 'deref' call_tmp[1964279]))
      const-val ret_tmp[1964306]:2*int(64)[1040245] "temp"
      (1964309 call _computeBlock[1229525] len[1964167] numChunks[1964139] chunk[1964143] coerce_tmp[1964288] coerce_tmp[1964294] coerce_tmp[1964300] ret_tmp[1964306])
      (1964317 'move' call_tmp[1964286] ret_tmp[1964306])
      const-val tmp[1964320]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
      (1964322 'move' tmp[1964320] call_tmp[1964286])
      1
      ref call_tmp[1964326]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1964328 'move' call_tmp[1964326](1964330 '.' tmp[1964320] x0[1040241]))
      const-val lo[1964333]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1964335]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1964337 'move' coerce_tmp[1964335](1964339 'deref' call_tmp[1964326]))
      (1964341 '=' lo[1964333] coerce_tmp[1964335])
      (1964344 'noop')
      ref call_tmp[1964345]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1964347 'move' call_tmp[1964345](1964349 '.' tmp[1964320] x1[1040243]))
      const-val hi[1964352]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1964354]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1964356 'move' coerce_tmp[1964354](1964358 'deref' call_tmp[1964345]))
      (1964360 '=' hi[1964352] coerce_tmp[1964354])
      (1964363 'noop')
      ref call_tmp[1964364]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
      (1964366 'move' call_tmp[1964364](1964369 call this[1382848] block[1964160] parDim[1964137]))
      {
        ref call_tmp[1964373]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
        (1964375 'move' call_tmp[1964373](1964378 call this[1382848] block[1964160] parDim[1964137]))
        const-val call_tmp[1964381]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1964383]:range(int(64),bounded,false)[1027003] "temp"
        (1964386 call chpl_build_bounded_range[455253] lo[1964333] hi[1964352] ret_tmp[1964383])
        (1964390 'move' call_tmp[1964381] ret_tmp[1964383])
        (1964394 call =[1251739] call_tmp[1964373] call_tmp[1964381])
        (1964398 call chpl__autoDestroy[1407763] call_tmp[1964381])
      }
      {
        val _indexOfInterest[1964401]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1964403]:_ic_these_help_DefaultRectangularDom_1_int64_t_F[1384429] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[1964405]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1384435] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1964407]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1384435] "temp"
        (1964410 call these_help[1384021] this[1964141] block[1964160] ret_tmp[1964407])
        (1964414 'move' call_tmp[1964405] ret_tmp[1964407])
        (1964417 'move' _iterator[1964403](1964420 call _getIterator[1384444] call_tmp[1964405]))
        {
          val ret[2043455]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1384435] "dead after last mention" "RVV" "temp"
          val _indexOfInterest[2043457]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[2043459]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
          ref call_tmp[2043461]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
          ref block[2043710]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
          (2043715 'move' block[2043710](2043712 '.v' _iterator[1964403] F1_block[2135427]))
          (2043463 'move' call_tmp[2043461](2043465 '.' block[2043710] x0[1244883]))
          (2043468 'move' _iterator[2043459](2043471 call _getIterator[1095509] call_tmp[2043461]))
          {
            val ret[2043474]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
            const-val _return_tmp_[2043476]:bool[10] "dead after last mention" "temp"
            const-val this[2043478]:range(int(64),bounded,false)[1027003] "temp"
            (2043480 'move' this[2043478](2043482 '.v' _iterator[2043459] F0_this[2113071]))
            (2043485 'move' _return_tmp_[2043476](2043488 call checkIfIterWillOverflow[1096003] this[2043478] 1))
            val i[2043491]:int(64)[13] "dead at end of block" "insert auto destroy"
            val call_tmp[2043493]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (2043495 'move' i[2043491] 0)
            ref call_tmp[2043498]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[2043500]:range(int(64),bounded,false)[1027003] "temp"
            (2043502 'move' this[2043500](2043504 '.v' _iterator[2043459] F0_this[2113071]))
            (2043507 'move' call_tmp[2043498](2043510 call _low[1028641] this[2043500]))
            const-val start[2043512]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[2043514]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (2043516 'move' coerce_tmp[2043514](2043518 'deref' call_tmp[2043498]))
            (2043520 '=' start[2043512] coerce_tmp[2043514])
            (2043523 'noop')
            ref call_tmp[2043524]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[2043526]:range(int(64),bounded,false)[1027003] "temp"
            (2043528 'move' this[2043526](2043530 '.v' _iterator[2043459] F0_this[2113071]))
            (2043533 'move' call_tmp[2043524](2043536 call _high[1028849] this[2043526]))
            const end[2043538]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[2043540]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (2043542 'move' coerce_tmp[2043540](2043544 'deref' call_tmp[2043524]))
            (2043546 '=' end[2043538] coerce_tmp[2043540])
            (2043549 'noop')
            CForLoop[2043550] order-independent
            {
              const-val yret[2043565]:int(64)[13] "dead after last mention" "YVV" "temp"
              const-val call_tmp[2043567]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val this[2043569]:range(int(64),bounded,false)[1027003] "temp"
              (2043571 'move' this[2043569](2043573 '.v' _iterator[2043459] F0_this[2113071]))
              (2043576 'move' call_tmp[2043567](2043579 call chpl_intToIdx[1028669] this[2043569] i[2043491]))
              (2043582 'move' yret[2043565] call_tmp[2043567])
              const-val _yieldedIndex[2043585]:int(64)[13] "temp"
              (2043587 'move' _yieldedIndex[2043585] call_tmp[2043567])
              {
                const-val i[2043591]:int(64)[13] "const" "index var" "insert auto destroy"
                (2043593 'move' i[2043591] _yieldedIndex[2043585])
                const-val yret[2043596]:int(64)[13] "dead after last mention" "YVV" "temp"
                (2043598 'move' yret[2043596] _yieldedIndex[2043585])
                const-val _yieldedIndex[2043620]:int(64)[13] "temp"
                (2043708 'move' _yieldedIndex[2043620] _yieldedIndex[2043585])
                {
                  const-val i[2043622]:int(64)[13] "const" "index var" "insert auto destroy"
                  (2043624 'move' i[2043622] _yieldedIndex[2043620])
                  {
                    const-val yret[2043628]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (2043630 'move' yret[2043628] i[2043622])
                    const-val _indexOfInterest[2043633]:int(64)[13] "dead at end of block" "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    (2043635 'move' _indexOfInterest[2043633] yret[2043628])
                    {
                      const-val i[2043639]:int(64)[13] "const" "index var" "insert auto destroy"
                      (2043641 'move' i[2043639] _indexOfInterest[2043633])
                      const-val yret[2043644]:int(64)[13] "dead after last mention" "YVV" "temp"
                      (2043646 'move' yret[2043644] i[2043639])
                      const-val i[2043649]:int(64)[13] "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy"
                      (2043651 'move' i[2043649] yret[2043644])
                      {
                        ref dst[2043655]:_ref(int(64))[936761] "dead at end of block" "ref var"
                        ref call_tmp[2043657]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
                        val coerce_tmp[2043659]:[domain(1,int(64),false)] int(64)[1368867] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                        (2043661 'move' coerce_tmp[2043659] copy[1964507])
                        val coerce_tmp[2043664]:[domain(1,int(64),false)] int(64)[1368867] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                        (2043666 'move' coerce_tmp[2043664] copy[1964507])
                        val coerce_tmp[2043669]:[domain(1,int(64),false)] int(64)[1368867] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                        (2043671 'move' coerce_tmp[2043669] copy[1964507])
                        (2043674 'move' call_tmp[2043657](2043677 call dsiAccess[1377509] coerce_tmp[2043659] i[2043649]))
                        (2043680 'move' dst[2043655] call_tmp[2043657])
                        ref src[2043683]:_ref(int(64))[936761] "dead at end of block" "const" "ref var"
                        ref call_tmp[2043685]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
                        (2043687 'move' call_tmp[2043685](2043690 call dsiAccess[1377663] this[1964521] i[2043649]))
                        (2043693 'move' src[2043683] call_tmp[2043685])
                        (2043696 '=' dst[2043655] src[2043683])
                        val optinfo[2043699]:int(64)[13] "no codegen" "temp" "forall no task private"
                        (2043701 'optimization info' optinfo[2043699])
                      }
                      label _continueLabel[2043703]
                    }
                  }
                  label _continueLabel[2043705]
                }
              }
              {
                (2043552 '=' i[2043491] coerce_tmp[2043514])
              }
              {
                (2043556 '<=' i[2043491] end[2043538])
              }
              {
                val call_tmp[2043560]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (2043562 '+=' i[2043491] 1)
              }
            }
            label _endthese[2043611]
          }
          (2043614 call _freeIterator[1102195] _iterator[2043459])
          label _endthese_help[2043616]
        }
        label _breakLabel[1964478]
        (1964481 call _freeIterator[1384621] _iterator[1964403])
      }
      (1964484 call chpl__autoDestroy[1674803] tmp[1964320])
      (1964487 call chpl__autoDestroy[1407763] coerce_tmp[1964203])
      (1964490 call chpl__autoDestroy[1695146] block[1964160])
    }
    label _endcoforall_fn[1964496]
    val coerce_tmp[1964524]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1964526 'move' coerce_tmp[1964524](1964528 'cast' object[22] this[1964521]))
    (1964532 call chpl__autoDestroy[1351354] coerce_tmp[1964524])
    val coerce_tmp[1964510]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1964512 'move' coerce_tmp[1964510](1964514 'cast' object[22] copy[1964507]))
    (1964518 call chpl__autoDestroy[1846254] coerce_tmp[1964510])
    (1964498 return _void[55])
  }
  function coforall_fn[1965111](const in arg parDim[1965113]:int(64)[13], const in arg numChunks[1965115]:int(64)[13], const in arg this[1965117]:domain(1,int(64),false)[1251123], const in arg chunk[1965119]:int(64)[13], const in arg _coforallCount[1965121]:_EndCount(AtomicT(int(64)),int(64))[945532], ref arg error_out[1965123]:Error[167984], const?  ref arg default_arg_offset[1965125]:_ref(1*int(64))[1256784], const in arg copy[1965483]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224], const in arg this[1965497]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224]) : void[4] throws "cobegin or coforall" "inlined function" "resolved" "task fn from iterator fn"
  {
    {
      ref call_tmp[1965129]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "maybe param" "temp"
      (1965131 'move' call_tmp[1965129](1965134 call ranges[1251533] this[1965117]))
      val block[1965136]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "insert auto destroy"
      (1965138 'move' block[1965136](1965141 call chpl__initCopy[1297040] call_tmp[1965129]))
      const-val len[1965143]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val tmp[1965145]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      ref call_tmp[1965147]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
      ref _this_tmp_[1965149]:_ref(1*range(int(64),bounded,false))[1244943] "dead after last mention" "temp"
      (1965151 'move' _this_tmp_[1965149](1965154 call ranges[1251533] this[1965117]))
      (1965156 'move' call_tmp[1965147](1965159 call this[1382848] _this_tmp_[1965149] parDim[1965113]))
      const-val tmp[1965162]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      ref call_tmp[1965164]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
      ref _this_tmp_[1965166]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "temp"
      (1965168 'move' _this_tmp_[1965166](1965171 call ranges[1251533] this[1965117]))
      (1965173 'move' call_tmp[1965164](1965176 call this[1382848] _this_tmp_[1965166] parDim[1965113]))
      const-val coerce_tmp[1965179]:range(int(64),bounded,false)[1027003] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1965181 'move' coerce_tmp[1965179](1965183 'deref' call_tmp[1965164]))
      (1965185 'move' tmp[1965162](1965188 call size[1035978] coerce_tmp[1965179]))
      (1965190 'move' tmp[1965145] tmp[1965162])
      (1965193 'move' len[1965143] tmp[1965145])
      ref call_tmp[1965196]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
      ref _this_tmp_[1965198]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "temp"
      (1965200 'move' _this_tmp_[1965198](1965203 call ranges[1251533] this[1965117]))
      (1965205 'move' call_tmp[1965196](1965208 call this[1382848] _this_tmp_[1965198] parDim[1965113]))
      ref call_tmp[1965211]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
      (1965213 'move' call_tmp[1965211](1965216 call _high[1028849] call_tmp[1965196]))
      ref call_tmp[1965218]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
      ref _this_tmp_[1965220]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "temp"
      (1965222 'move' _this_tmp_[1965220](1965225 call ranges[1251533] this[1965117]))
      (1965227 'move' call_tmp[1965218](1965230 call this[1382848] _this_tmp_[1965220] parDim[1965113]))
      ref call_tmp[1965233]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
      (1965235 'move' call_tmp[1965233](1965238 call _low[1028641] call_tmp[1965218]))
      ref call_tmp[1965240]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
      ref _this_tmp_[1965242]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "temp"
      (1965244 'move' _this_tmp_[1965242](1965247 call ranges[1251533] this[1965117]))
      (1965249 'move' call_tmp[1965240](1965252 call this[1382848] _this_tmp_[1965242] parDim[1965113]))
      ref call_tmp[1965255]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
      (1965257 'move' call_tmp[1965255](1965260 call _low[1028641] call_tmp[1965240]))
      const-val call_tmp[1965262]:2*int(64)[1040245] "dead at end of block" "maybe param" "temp"
      const-val coerce_tmp[1965264]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1965266 'move' coerce_tmp[1965264](1965268 'deref' call_tmp[1965211]))
      const-val coerce_tmp[1965270]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1965272 'move' coerce_tmp[1965270](1965274 'deref' call_tmp[1965233]))
      const-val coerce_tmp[1965276]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1965278 'move' coerce_tmp[1965276](1965280 'deref' call_tmp[1965255]))
      const-val ret_tmp[1965282]:2*int(64)[1040245] "temp"
      (1965285 call _computeBlock[1229525] len[1965143] numChunks[1965115] chunk[1965119] coerce_tmp[1965264] coerce_tmp[1965270] coerce_tmp[1965276] ret_tmp[1965282])
      (1965293 'move' call_tmp[1965262] ret_tmp[1965282])
      const-val tmp[1965296]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
      (1965298 'move' tmp[1965296] call_tmp[1965262])
      1
      ref call_tmp[1965302]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1965304 'move' call_tmp[1965302](1965306 '.' tmp[1965296] x0[1040241]))
      const-val lo[1965309]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1965311]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1965313 'move' coerce_tmp[1965311](1965315 'deref' call_tmp[1965302]))
      (1965317 '=' lo[1965309] coerce_tmp[1965311])
      (1965320 'noop')
      ref call_tmp[1965321]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1965323 'move' call_tmp[1965321](1965325 '.' tmp[1965296] x1[1040243]))
      const-val hi[1965328]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1965330]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1965332 'move' coerce_tmp[1965330](1965334 'deref' call_tmp[1965321]))
      (1965336 '=' hi[1965328] coerce_tmp[1965330])
      (1965339 'noop')
      ref call_tmp[1965340]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
      (1965342 'move' call_tmp[1965340](1965345 call this[1382848] block[1965136] parDim[1965113]))
      {
        ref call_tmp[1965349]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
        (1965351 'move' call_tmp[1965349](1965354 call this[1382848] block[1965136] parDim[1965113]))
        const-val call_tmp[1965357]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1965359]:range(int(64),bounded,false)[1027003] "temp"
        (1965362 call chpl_build_bounded_range[455253] lo[1965309] hi[1965328] ret_tmp[1965359])
        (1965366 'move' call_tmp[1965357] ret_tmp[1965359])
        (1965370 call =[1251739] call_tmp[1965349] call_tmp[1965357])
        (1965374 call chpl__autoDestroy[1407763] call_tmp[1965357])
      }
      {
        val _indexOfInterest[1965377]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1965379]:_ic_these_help_DefaultRectangularDom_1_int64_t_F[1384429] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[1965381]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1384435] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1965383]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1384435] "temp"
        (1965386 call these_help[1384021] this[1965117] block[1965136] ret_tmp[1965383])
        (1965390 'move' call_tmp[1965381] ret_tmp[1965383])
        (1965393 'move' _iterator[1965379](1965396 call _getIterator[1384444] call_tmp[1965381]))
        {
          val ret[2044137]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1384435] "dead after last mention" "RVV" "temp"
          val _indexOfInterest[2044139]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[2044141]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
          ref call_tmp[2044143]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
          ref block[2044392]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
          (2044397 'move' block[2044392](2044394 '.v' _iterator[1965379] F1_block[2135427]))
          (2044145 'move' call_tmp[2044143](2044147 '.' block[2044392] x0[1244883]))
          (2044150 'move' _iterator[2044141](2044153 call _getIterator[1095509] call_tmp[2044143]))
          {
            val ret[2044156]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
            const-val _return_tmp_[2044158]:bool[10] "dead after last mention" "temp"
            const-val this[2044160]:range(int(64),bounded,false)[1027003] "temp"
            (2044162 'move' this[2044160](2044164 '.v' _iterator[2044141] F0_this[2113071]))
            (2044167 'move' _return_tmp_[2044158](2044170 call checkIfIterWillOverflow[1096003] this[2044160] 1))
            val i[2044173]:int(64)[13] "dead at end of block" "insert auto destroy"
            val call_tmp[2044175]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (2044177 'move' i[2044173] 0)
            ref call_tmp[2044180]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[2044182]:range(int(64),bounded,false)[1027003] "temp"
            (2044184 'move' this[2044182](2044186 '.v' _iterator[2044141] F0_this[2113071]))
            (2044189 'move' call_tmp[2044180](2044192 call _low[1028641] this[2044182]))
            const-val start[2044194]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[2044196]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (2044198 'move' coerce_tmp[2044196](2044200 'deref' call_tmp[2044180]))
            (2044202 '=' start[2044194] coerce_tmp[2044196])
            (2044205 'noop')
            ref call_tmp[2044206]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[2044208]:range(int(64),bounded,false)[1027003] "temp"
            (2044210 'move' this[2044208](2044212 '.v' _iterator[2044141] F0_this[2113071]))
            (2044215 'move' call_tmp[2044206](2044218 call _high[1028849] this[2044208]))
            const end[2044220]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[2044222]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (2044224 'move' coerce_tmp[2044222](2044226 'deref' call_tmp[2044206]))
            (2044228 '=' end[2044220] coerce_tmp[2044222])
            (2044231 'noop')
            CForLoop[2044232] order-independent
            {
              const-val yret[2044247]:int(64)[13] "dead after last mention" "YVV" "temp"
              const-val call_tmp[2044249]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val this[2044251]:range(int(64),bounded,false)[1027003] "temp"
              (2044253 'move' this[2044251](2044255 '.v' _iterator[2044141] F0_this[2113071]))
              (2044258 'move' call_tmp[2044249](2044261 call chpl_intToIdx[1028669] this[2044251] i[2044173]))
              (2044264 'move' yret[2044247] call_tmp[2044249])
              const-val _yieldedIndex[2044267]:int(64)[13] "temp"
              (2044269 'move' _yieldedIndex[2044267] call_tmp[2044249])
              {
                const-val i[2044273]:int(64)[13] "const" "index var" "insert auto destroy"
                (2044275 'move' i[2044273] _yieldedIndex[2044267])
                const-val yret[2044278]:int(64)[13] "dead after last mention" "YVV" "temp"
                (2044280 'move' yret[2044278] _yieldedIndex[2044267])
                const-val _yieldedIndex[2044302]:int(64)[13] "temp"
                (2044390 'move' _yieldedIndex[2044302] _yieldedIndex[2044267])
                {
                  const-val i[2044304]:int(64)[13] "const" "index var" "insert auto destroy"
                  (2044306 'move' i[2044304] _yieldedIndex[2044302])
                  {
                    const-val yret[2044310]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (2044312 'move' yret[2044310] i[2044304])
                    const-val _indexOfInterest[2044315]:int(64)[13] "dead at end of block" "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    (2044317 'move' _indexOfInterest[2044315] yret[2044310])
                    {
                      const-val i[2044321]:int(64)[13] "const" "index var" "insert auto destroy"
                      (2044323 'move' i[2044321] _indexOfInterest[2044315])
                      const-val yret[2044326]:int(64)[13] "dead after last mention" "YVV" "temp"
                      (2044328 'move' yret[2044326] i[2044321])
                      const-val i[2044331]:int(64)[13] "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy"
                      (2044333 'move' i[2044331] yret[2044326])
                      {
                        ref dst[2044337]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "ref var"
                        ref call_tmp[2044339]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
                        val coerce_tmp[2044341]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                        (2044343 'move' coerce_tmp[2044341] copy[1965483])
                        val coerce_tmp[2044346]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                        (2044348 'move' coerce_tmp[2044346] copy[1965483])
                        val coerce_tmp[2044351]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                        (2044353 'move' coerce_tmp[2044351] copy[1965483])
                        (2044356 'move' call_tmp[2044339](2044359 call dsiAccess[1488672] coerce_tmp[2044341] i[2044331]))
                        (2044362 'move' dst[2044337] call_tmp[2044339])
                        ref src[2044365]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "const" "ref var"
                        ref call_tmp[2044367]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
                        (2044369 'move' call_tmp[2044367](2044372 call dsiAccess[1488950] this[1965497] i[2044331]))
                        (2044375 'move' src[2044365] call_tmp[2044367])
                        (2044378 '=' dst[2044337] src[2044365])
                        val optinfo[2044381]:int(64)[13] "no codegen" "temp" "forall no task private"
                        (2044383 'optimization info' optinfo[2044381])
                      }
                      label _continueLabel[2044385]
                    }
                  }
                  label _continueLabel[2044387]
                }
              }
              {
                (2044234 '=' i[2044173] coerce_tmp[2044196])
              }
              {
                (2044238 '<=' i[2044173] end[2044220])
              }
              {
                val call_tmp[2044242]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (2044244 '+=' i[2044173] 1)
              }
            }
            label _endthese[2044293]
          }
          (2044296 call _freeIterator[1102195] _iterator[2044141])
          label _endthese_help[2044298]
        }
        label _breakLabel[1965454]
        (1965457 call _freeIterator[1384621] _iterator[1965379])
      }
      (1965460 call chpl__autoDestroy[1674803] tmp[1965296])
      (1965463 call chpl__autoDestroy[1407763] coerce_tmp[1965179])
      (1965466 call chpl__autoDestroy[1695146] block[1965136])
    }
    label _endcoforall_fn[1965472]
    val coerce_tmp[1965500]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1965502 'move' coerce_tmp[1965500](1965504 'cast' object[22] this[1965497]))
    (1965508 call chpl__autoDestroy[1351354] coerce_tmp[1965500])
    val coerce_tmp[1965486]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1965488 'move' coerce_tmp[1965486](1965490 'cast' object[22] copy[1965483]))
    (1965494 call chpl__autoDestroy[1846254] coerce_tmp[1965486])
    (1965474 return _void[55])
  }
  function coforall_fn[1966087](const in arg parDim[1966089]:int(64)[13], const in arg numChunks[1966091]:int(64)[13], const in arg this[1966093]:domain(1,int(64),false)[1251123], const in arg chunk[1966095]:int(64)[13], const in arg _coforallCount[1966097]:_EndCount(AtomicT(int(64)),int(64))[945532], ref arg error_out[1966099]:Error[167984], const?  ref arg default_arg_offset[1966101]:_ref(1*int(64))[1256784], const in arg copy[1966459]:[domain(1,int(64),false)] uint(64)[1450261], const in arg this[1966473]:[domain(1,int(64),false)] uint(64)[1450261]) : void[4] throws "cobegin or coforall" "inlined function" "resolved" "task fn from iterator fn"
  {
    {
      ref call_tmp[1966105]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "maybe param" "temp"
      (1966107 'move' call_tmp[1966105](1966110 call ranges[1251533] this[1966093]))
      val block[1966112]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "insert auto destroy"
      (1966114 'move' block[1966112](1966117 call chpl__initCopy[1297040] call_tmp[1966105]))
      const-val len[1966119]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val tmp[1966121]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      ref call_tmp[1966123]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
      ref _this_tmp_[1966125]:_ref(1*range(int(64),bounded,false))[1244943] "dead after last mention" "temp"
      (1966127 'move' _this_tmp_[1966125](1966130 call ranges[1251533] this[1966093]))
      (1966132 'move' call_tmp[1966123](1966135 call this[1382848] _this_tmp_[1966125] parDim[1966089]))
      const-val tmp[1966138]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      ref call_tmp[1966140]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
      ref _this_tmp_[1966142]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "temp"
      (1966144 'move' _this_tmp_[1966142](1966147 call ranges[1251533] this[1966093]))
      (1966149 'move' call_tmp[1966140](1966152 call this[1382848] _this_tmp_[1966142] parDim[1966089]))
      const-val coerce_tmp[1966155]:range(int(64),bounded,false)[1027003] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1966157 'move' coerce_tmp[1966155](1966159 'deref' call_tmp[1966140]))
      (1966161 'move' tmp[1966138](1966164 call size[1035978] coerce_tmp[1966155]))
      (1966166 'move' tmp[1966121] tmp[1966138])
      (1966169 'move' len[1966119] tmp[1966121])
      ref call_tmp[1966172]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
      ref _this_tmp_[1966174]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "temp"
      (1966176 'move' _this_tmp_[1966174](1966179 call ranges[1251533] this[1966093]))
      (1966181 'move' call_tmp[1966172](1966184 call this[1382848] _this_tmp_[1966174] parDim[1966089]))
      ref call_tmp[1966187]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
      (1966189 'move' call_tmp[1966187](1966192 call _high[1028849] call_tmp[1966172]))
      ref call_tmp[1966194]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
      ref _this_tmp_[1966196]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "temp"
      (1966198 'move' _this_tmp_[1966196](1966201 call ranges[1251533] this[1966093]))
      (1966203 'move' call_tmp[1966194](1966206 call this[1382848] _this_tmp_[1966196] parDim[1966089]))
      ref call_tmp[1966209]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
      (1966211 'move' call_tmp[1966209](1966214 call _low[1028641] call_tmp[1966194]))
      ref call_tmp[1966216]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
      ref _this_tmp_[1966218]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "temp"
      (1966220 'move' _this_tmp_[1966218](1966223 call ranges[1251533] this[1966093]))
      (1966225 'move' call_tmp[1966216](1966228 call this[1382848] _this_tmp_[1966218] parDim[1966089]))
      ref call_tmp[1966231]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
      (1966233 'move' call_tmp[1966231](1966236 call _low[1028641] call_tmp[1966216]))
      const-val call_tmp[1966238]:2*int(64)[1040245] "dead at end of block" "maybe param" "temp"
      const-val coerce_tmp[1966240]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1966242 'move' coerce_tmp[1966240](1966244 'deref' call_tmp[1966187]))
      const-val coerce_tmp[1966246]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1966248 'move' coerce_tmp[1966246](1966250 'deref' call_tmp[1966209]))
      const-val coerce_tmp[1966252]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1966254 'move' coerce_tmp[1966252](1966256 'deref' call_tmp[1966231]))
      const-val ret_tmp[1966258]:2*int(64)[1040245] "temp"
      (1966261 call _computeBlock[1229525] len[1966119] numChunks[1966091] chunk[1966095] coerce_tmp[1966240] coerce_tmp[1966246] coerce_tmp[1966252] ret_tmp[1966258])
      (1966269 'move' call_tmp[1966238] ret_tmp[1966258])
      const-val tmp[1966272]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
      (1966274 'move' tmp[1966272] call_tmp[1966238])
      1
      ref call_tmp[1966278]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1966280 'move' call_tmp[1966278](1966282 '.' tmp[1966272] x0[1040241]))
      const-val lo[1966285]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1966287]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1966289 'move' coerce_tmp[1966287](1966291 'deref' call_tmp[1966278]))
      (1966293 '=' lo[1966285] coerce_tmp[1966287])
      (1966296 'noop')
      ref call_tmp[1966297]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1966299 'move' call_tmp[1966297](1966301 '.' tmp[1966272] x1[1040243]))
      const-val hi[1966304]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1966306]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1966308 'move' coerce_tmp[1966306](1966310 'deref' call_tmp[1966297]))
      (1966312 '=' hi[1966304] coerce_tmp[1966306])
      (1966315 'noop')
      ref call_tmp[1966316]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
      (1966318 'move' call_tmp[1966316](1966321 call this[1382848] block[1966112] parDim[1966089]))
      {
        ref call_tmp[1966325]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
        (1966327 'move' call_tmp[1966325](1966330 call this[1382848] block[1966112] parDim[1966089]))
        const-val call_tmp[1966333]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1966335]:range(int(64),bounded,false)[1027003] "temp"
        (1966338 call chpl_build_bounded_range[455253] lo[1966285] hi[1966304] ret_tmp[1966335])
        (1966342 'move' call_tmp[1966333] ret_tmp[1966335])
        (1966346 call =[1251739] call_tmp[1966325] call_tmp[1966333])
        (1966350 call chpl__autoDestroy[1407763] call_tmp[1966333])
      }
      {
        val _indexOfInterest[1966353]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1966355]:_ic_these_help_DefaultRectangularDom_1_int64_t_F[1384429] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[1966357]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1384435] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1966359]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1384435] "temp"
        (1966362 call these_help[1384021] this[1966093] block[1966112] ret_tmp[1966359])
        (1966366 'move' call_tmp[1966357] ret_tmp[1966359])
        (1966369 'move' _iterator[1966355](1966372 call _getIterator[1384444] call_tmp[1966357]))
        {
          val ret[2044819]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1384435] "dead after last mention" "RVV" "temp"
          val _indexOfInterest[2044821]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[2044823]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
          ref call_tmp[2044825]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
          ref block[2045074]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
          (2045079 'move' block[2045074](2045076 '.v' _iterator[1966355] F1_block[2135427]))
          (2044827 'move' call_tmp[2044825](2044829 '.' block[2045074] x0[1244883]))
          (2044832 'move' _iterator[2044823](2044835 call _getIterator[1095509] call_tmp[2044825]))
          {
            val ret[2044838]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
            const-val _return_tmp_[2044840]:bool[10] "dead after last mention" "temp"
            const-val this[2044842]:range(int(64),bounded,false)[1027003] "temp"
            (2044844 'move' this[2044842](2044846 '.v' _iterator[2044823] F0_this[2113071]))
            (2044849 'move' _return_tmp_[2044840](2044852 call checkIfIterWillOverflow[1096003] this[2044842] 1))
            val i[2044855]:int(64)[13] "dead at end of block" "insert auto destroy"
            val call_tmp[2044857]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (2044859 'move' i[2044855] 0)
            ref call_tmp[2044862]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[2044864]:range(int(64),bounded,false)[1027003] "temp"
            (2044866 'move' this[2044864](2044868 '.v' _iterator[2044823] F0_this[2113071]))
            (2044871 'move' call_tmp[2044862](2044874 call _low[1028641] this[2044864]))
            const-val start[2044876]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[2044878]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (2044880 'move' coerce_tmp[2044878](2044882 'deref' call_tmp[2044862]))
            (2044884 '=' start[2044876] coerce_tmp[2044878])
            (2044887 'noop')
            ref call_tmp[2044888]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[2044890]:range(int(64),bounded,false)[1027003] "temp"
            (2044892 'move' this[2044890](2044894 '.v' _iterator[2044823] F0_this[2113071]))
            (2044897 'move' call_tmp[2044888](2044900 call _high[1028849] this[2044890]))
            const end[2044902]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[2044904]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (2044906 'move' coerce_tmp[2044904](2044908 'deref' call_tmp[2044888]))
            (2044910 '=' end[2044902] coerce_tmp[2044904])
            (2044913 'noop')
            CForLoop[2044914] order-independent
            {
              const-val yret[2044929]:int(64)[13] "dead after last mention" "YVV" "temp"
              const-val call_tmp[2044931]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val this[2044933]:range(int(64),bounded,false)[1027003] "temp"
              (2044935 'move' this[2044933](2044937 '.v' _iterator[2044823] F0_this[2113071]))
              (2044940 'move' call_tmp[2044931](2044943 call chpl_intToIdx[1028669] this[2044933] i[2044855]))
              (2044946 'move' yret[2044929] call_tmp[2044931])
              const-val _yieldedIndex[2044949]:int(64)[13] "temp"
              (2044951 'move' _yieldedIndex[2044949] call_tmp[2044931])
              {
                const-val i[2044955]:int(64)[13] "const" "index var" "insert auto destroy"
                (2044957 'move' i[2044955] _yieldedIndex[2044949])
                const-val yret[2044960]:int(64)[13] "dead after last mention" "YVV" "temp"
                (2044962 'move' yret[2044960] _yieldedIndex[2044949])
                const-val _yieldedIndex[2044984]:int(64)[13] "temp"
                (2045072 'move' _yieldedIndex[2044984] _yieldedIndex[2044949])
                {
                  const-val i[2044986]:int(64)[13] "const" "index var" "insert auto destroy"
                  (2044988 'move' i[2044986] _yieldedIndex[2044984])
                  {
                    const-val yret[2044992]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (2044994 'move' yret[2044992] i[2044986])
                    const-val _indexOfInterest[2044997]:int(64)[13] "dead at end of block" "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    (2044999 'move' _indexOfInterest[2044997] yret[2044992])
                    {
                      const-val i[2045003]:int(64)[13] "const" "index var" "insert auto destroy"
                      (2045005 'move' i[2045003] _indexOfInterest[2044997])
                      const-val yret[2045008]:int(64)[13] "dead after last mention" "YVV" "temp"
                      (2045010 'move' yret[2045008] i[2045003])
                      const-val i[2045013]:int(64)[13] "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy"
                      (2045015 'move' i[2045013] yret[2045008])
                      {
                        ref dst[2045019]:_ref(uint(64))[936790] "dead at end of block" "ref var"
                        ref call_tmp[2045021]:_ref(uint(64))[936790] "dead at end of block" "maybe param" "temp"
                        val coerce_tmp[2045023]:[domain(1,int(64),false)] uint(64)[1450261] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                        (2045025 'move' coerce_tmp[2045023] copy[1966459])
                        val coerce_tmp[2045028]:[domain(1,int(64),false)] uint(64)[1450261] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                        (2045030 'move' coerce_tmp[2045028] copy[1966459])
                        val coerce_tmp[2045033]:[domain(1,int(64),false)] uint(64)[1450261] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                        (2045035 'move' coerce_tmp[2045033] copy[1966459])
                        (2045038 'move' call_tmp[2045021](2045041 call dsiAccess[1464422] coerce_tmp[2045023] i[2045013]))
                        (2045044 'move' dst[2045019] call_tmp[2045021])
                        ref src[2045047]:_ref(uint(64))[936790] "dead at end of block" "const" "ref var"
                        ref call_tmp[2045049]:_ref(uint(64))[936790] "dead at end of block" "maybe param" "temp"
                        (2045051 'move' call_tmp[2045049](2045054 call dsiAccess[1464576] this[1966473] i[2045013]))
                        (2045057 'move' src[2045047] call_tmp[2045049])
                        (2045060 '=' dst[2045019] src[2045047])
                        val optinfo[2045063]:int(64)[13] "no codegen" "temp" "forall no task private"
                        (2045065 'optimization info' optinfo[2045063])
                      }
                      label _continueLabel[2045067]
                    }
                  }
                  label _continueLabel[2045069]
                }
              }
              {
                (2044916 '=' i[2044855] coerce_tmp[2044878])
              }
              {
                (2044920 '<=' i[2044855] end[2044902])
              }
              {
                val call_tmp[2044924]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (2044926 '+=' i[2044855] 1)
              }
            }
            label _endthese[2044975]
          }
          (2044978 call _freeIterator[1102195] _iterator[2044823])
          label _endthese_help[2044980]
        }
        label _breakLabel[1966430]
        (1966433 call _freeIterator[1384621] _iterator[1966355])
      }
      (1966436 call chpl__autoDestroy[1674803] tmp[1966272])
      (1966439 call chpl__autoDestroy[1407763] coerce_tmp[1966155])
      (1966442 call chpl__autoDestroy[1695146] block[1966112])
    }
    label _endcoforall_fn[1966448]
    val coerce_tmp[1966476]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1966478 'move' coerce_tmp[1966476](1966480 'cast' object[22] this[1966473]))
    (1966484 call chpl__autoDestroy[1351354] coerce_tmp[1966476])
    val coerce_tmp[1966462]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1966464 'move' coerce_tmp[1966462](1966466 'cast' object[22] copy[1966459]))
    (1966470 call chpl__autoDestroy[1846254] coerce_tmp[1966462])
    (1966450 return _void[55])
  }
  function coforall_fn[1976238](const in arg parDim[1976240]:int(64)[13], const in arg numChunks[1976242]:int(64)[13], const in arg this[1976244]:domain(1,int(64),false)[1251123], const in arg chunk[1976246]:int(64)[13], const in arg _coforallCount[1976248]:_EndCount(AtomicT(int(64)),int(64))[945532], const in arg copy[1976585]:[domain(1,int(64),false)] locale[1256675], const in arg this[1976599]:[domain(1,int(64),false)] locale[1256675]) : void[4] "cobegin or coforall" "inlined function" "resolved" "task fn from iterator fn"
  {
    {
      ref call_tmp[1976252]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "maybe param" "temp"
      (1976254 'move' call_tmp[1976252](1976257 call ranges[1251533] this[1976244]))
      val block[1976259]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "insert auto destroy"
      (1976261 'move' block[1976259](1976264 call chpl__initCopy[1297040] call_tmp[1976252]))
      const-val len[1976266]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val tmp[1976268]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      ref call_tmp[1976270]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
      ref _this_tmp_[1976272]:_ref(1*range(int(64),bounded,false))[1244943] "dead after last mention" "temp"
      (1976274 'move' _this_tmp_[1976272](1976277 call ranges[1251533] this[1976244]))
      (1976279 'move' call_tmp[1976270](1976282 call this[1382848] _this_tmp_[1976272] parDim[1976240]))
      const-val tmp[1976285]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      ref call_tmp[1976287]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
      ref _this_tmp_[1976289]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "temp"
      (1976291 'move' _this_tmp_[1976289](1976294 call ranges[1251533] this[1976244]))
      (1976296 'move' call_tmp[1976287](1976299 call this[1382848] _this_tmp_[1976289] parDim[1976240]))
      const-val coerce_tmp[1976302]:range(int(64),bounded,false)[1027003] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1976304 'move' coerce_tmp[1976302](1976306 'deref' call_tmp[1976287]))
      (1976308 'move' tmp[1976285](1976311 call size[1035978] coerce_tmp[1976302]))
      (1976313 'move' tmp[1976268] tmp[1976285])
      (1976316 'move' len[1976266] tmp[1976268])
      ref call_tmp[1976319]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
      ref _this_tmp_[1976321]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "temp"
      (1976323 'move' _this_tmp_[1976321](1976326 call ranges[1251533] this[1976244]))
      (1976328 'move' call_tmp[1976319](1976331 call this[1382848] _this_tmp_[1976321] parDim[1976240]))
      ref call_tmp[1976334]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
      (1976336 'move' call_tmp[1976334](1976339 call _high[1028849] call_tmp[1976319]))
      ref call_tmp[1976341]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
      ref _this_tmp_[1976343]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "temp"
      (1976345 'move' _this_tmp_[1976343](1976348 call ranges[1251533] this[1976244]))
      (1976350 'move' call_tmp[1976341](1976353 call this[1382848] _this_tmp_[1976343] parDim[1976240]))
      ref call_tmp[1976356]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
      (1976358 'move' call_tmp[1976356](1976361 call _low[1028641] call_tmp[1976341]))
      ref call_tmp[1976363]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
      ref _this_tmp_[1976365]:_ref(1*range(int(64),bounded,false))[1244943] "dead at end of block" "temp"
      (1976367 'move' _this_tmp_[1976365](1976370 call ranges[1251533] this[1976244]))
      (1976372 'move' call_tmp[1976363](1976375 call this[1382848] _this_tmp_[1976365] parDim[1976240]))
      ref call_tmp[1976378]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
      (1976380 'move' call_tmp[1976378](1976383 call _low[1028641] call_tmp[1976363]))
      const-val call_tmp[1976385]:2*int(64)[1040245] "dead at end of block" "maybe param" "temp"
      const-val coerce_tmp[1976387]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1976389 'move' coerce_tmp[1976387](1976391 'deref' call_tmp[1976334]))
      const-val coerce_tmp[1976393]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1976395 'move' coerce_tmp[1976393](1976397 'deref' call_tmp[1976356]))
      const-val coerce_tmp[1976399]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1976401 'move' coerce_tmp[1976399](1976403 'deref' call_tmp[1976378]))
      const-val ret_tmp[1976405]:2*int(64)[1040245] "temp"
      (1976408 call _computeBlock[1229525] len[1976266] numChunks[1976242] chunk[1976246] coerce_tmp[1976387] coerce_tmp[1976393] coerce_tmp[1976399] ret_tmp[1976405])
      (1976416 'move' call_tmp[1976385] ret_tmp[1976405])
      const-val tmp[1976419]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
      (1976421 'move' tmp[1976419] call_tmp[1976385])
      1
      ref call_tmp[1976425]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1976427 'move' call_tmp[1976425](1976429 '.' tmp[1976419] x0[1040241]))
      const-val lo[1976432]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1976434]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1976436 'move' coerce_tmp[1976434](1976438 'deref' call_tmp[1976425]))
      (1976440 '=' lo[1976432] coerce_tmp[1976434])
      (1976443 'noop')
      ref call_tmp[1976444]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1976446 'move' call_tmp[1976444](1976448 '.' tmp[1976419] x1[1040243]))
      const-val hi[1976451]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1976453]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1976455 'move' coerce_tmp[1976453](1976457 'deref' call_tmp[1976444]))
      (1976459 '=' hi[1976451] coerce_tmp[1976453])
      (1976462 'noop')
      ref call_tmp[1976463]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
      (1976465 'move' call_tmp[1976463](1976468 call this[1382848] block[1976259] parDim[1976240]))
      {
        ref call_tmp[1976472]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
        (1976474 'move' call_tmp[1976472](1976477 call this[1382848] block[1976259] parDim[1976240]))
        const-val call_tmp[1976480]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1976482]:range(int(64),bounded,false)[1027003] "temp"
        (1976485 call chpl_build_bounded_range[455253] lo[1976432] hi[1976451] ret_tmp[1976482])
        (1976489 'move' call_tmp[1976480] ret_tmp[1976482])
        (1976493 call =[1251739] call_tmp[1976472] call_tmp[1976480])
        (1976497 call chpl__autoDestroy[1407763] call_tmp[1976480])
      }
      {
        val _indexOfInterest[1976500]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1976502]:_ic_these_help_DefaultRectangularDom_1_int64_t_F[1384429] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[1976504]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1384435] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1976506]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1384435] "temp"
        (1976509 call these_help[1384021] this[1976244] block[1976259] ret_tmp[1976506])
        (1976513 'move' call_tmp[1976504] ret_tmp[1976506])
        (1976516 'move' _iterator[1976502](1976519 call _getIterator[1384444] call_tmp[1976504]))
        {
          val ret[2051782]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1384435] "dead after last mention" "RVV" "temp"
          val _indexOfInterest[2051784]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[2051786]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
          ref call_tmp[2051788]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
          ref block[2052032]:_ref(1*range(int(64),bounded,false))[1244943] "temp"
          (2052037 'move' block[2052032](2052034 '.v' _iterator[1976502] F1_block[2135427]))
          (2051790 'move' call_tmp[2051788](2051792 '.' block[2052032] x0[1244883]))
          (2051795 'move' _iterator[2051786](2051798 call _getIterator[1095509] call_tmp[2051788]))
          {
            val ret[2051801]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
            const-val _return_tmp_[2051803]:bool[10] "dead after last mention" "temp"
            const-val this[2051805]:range(int(64),bounded,false)[1027003] "temp"
            (2051807 'move' this[2051805](2051809 '.v' _iterator[2051786] F0_this[2113071]))
            (2051812 'move' _return_tmp_[2051803](2051815 call checkIfIterWillOverflow[1096003] this[2051805] 1))
            val i[2051818]:int(64)[13] "dead at end of block" "insert auto destroy"
            val call_tmp[2051820]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (2051822 'move' i[2051818] 0)
            ref call_tmp[2051825]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[2051827]:range(int(64),bounded,false)[1027003] "temp"
            (2051829 'move' this[2051827](2051831 '.v' _iterator[2051786] F0_this[2113071]))
            (2051834 'move' call_tmp[2051825](2051837 call _low[1028641] this[2051827]))
            const-val start[2051839]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[2051841]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (2051843 'move' coerce_tmp[2051841](2051845 'deref' call_tmp[2051825]))
            (2051847 '=' start[2051839] coerce_tmp[2051841])
            (2051850 'noop')
            ref call_tmp[2051851]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[2051853]:range(int(64),bounded,false)[1027003] "temp"
            (2051855 'move' this[2051853](2051857 '.v' _iterator[2051786] F0_this[2113071]))
            (2051860 'move' call_tmp[2051851](2051863 call _high[1028849] this[2051853]))
            const end[2051865]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[2051867]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (2051869 'move' coerce_tmp[2051867](2051871 'deref' call_tmp[2051851]))
            (2051873 '=' end[2051865] coerce_tmp[2051867])
            (2051876 'noop')
            CForLoop[2051877] order-independent
            {
              const-val yret[2051892]:int(64)[13] "dead after last mention" "YVV" "temp"
              const-val call_tmp[2051894]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val this[2051896]:range(int(64),bounded,false)[1027003] "temp"
              (2051898 'move' this[2051896](2051900 '.v' _iterator[2051786] F0_this[2113071]))
              (2051903 'move' call_tmp[2051894](2051906 call chpl_intToIdx[1028669] this[2051896] i[2051818]))
              (2051909 'move' yret[2051892] call_tmp[2051894])
              const-val _yieldedIndex[2051912]:int(64)[13] "temp"
              (2051914 'move' _yieldedIndex[2051912] call_tmp[2051894])
              {
                const-val i[2051918]:int(64)[13] "const" "index var" "insert auto destroy"
                (2051920 'move' i[2051918] _yieldedIndex[2051912])
                const-val yret[2051923]:int(64)[13] "dead after last mention" "YVV" "temp"
                (2051925 'move' yret[2051923] _yieldedIndex[2051912])
                const-val _yieldedIndex[2051947]:int(64)[13] "temp"
                (2052030 'move' _yieldedIndex[2051947] _yieldedIndex[2051912])
                {
                  const-val i[2051949]:int(64)[13] "const" "index var" "insert auto destroy"
                  (2051951 'move' i[2051949] _yieldedIndex[2051947])
                  {
                    const-val yret[2051955]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (2051957 'move' yret[2051955] i[2051949])
                    const-val _indexOfInterest[2051960]:int(64)[13] "dead at end of block" "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    (2051962 'move' _indexOfInterest[2051960] yret[2051955])
                    {
                      const-val i[2051966]:int(64)[13] "const" "index var" "insert auto destroy"
                      (2051968 'move' i[2051966] _indexOfInterest[2051960])
                      const-val yret[2051971]:int(64)[13] "dead after last mention" "YVV" "temp"
                      (2051973 'move' yret[2051971] i[2051966])
                      const-val i[2051976]:int(64)[13] "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy"
                      (2051978 'move' i[2051976] yret[2051971])
                      {
                        ref dst[2051982]:_ref(locale)[949033] "dead at end of block" "ref var"
                        ref call_tmp[2051984]:_ref(locale)[949033] "dead at end of block" "maybe param" "temp"
                        val coerce_tmp[2051986]:[domain(1,int(64),false)] locale[1256675] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                        (2051988 'move' coerce_tmp[2051986] copy[1976585])
                        val coerce_tmp[2051991]:[domain(1,int(64),false)] locale[1256675] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                        (2051993 'move' coerce_tmp[2051991] copy[1976585])
                        (2051996 'move' call_tmp[2051984](2051999 call dsiAccess[1349194] coerce_tmp[2051986] i[2051976]))
                        (2052002 'move' dst[2051982] call_tmp[2051984])
                        ref src[2052005]:_ref(locale)[949033] "dead at end of block" "const" "ref var"
                        ref call_tmp[2052007]:_ref(locale)[949033] "dead at end of block" "maybe param" "temp"
                        (2052009 'move' call_tmp[2052007](2052012 call dsiAccess[1349348] this[1976599] i[2051976]))
                        (2052015 'move' src[2052005] call_tmp[2052007])
                        (2052018 '=' dst[2051982] src[2052005])
                        val optinfo[2052021]:int(64)[13] "no codegen" "temp" "forall no task private"
                        (2052023 'optimization info' optinfo[2052021])
                      }
                      label _continueLabel[2052025]
                    }
                  }
                  label _continueLabel[2052027]
                }
              }
              {
                (2051879 '=' i[2051818] coerce_tmp[2051841])
              }
              {
                (2051883 '<=' i[2051818] end[2051865])
              }
              {
                val call_tmp[2051887]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (2051889 '+=' i[2051818] 1)
              }
            }
            label _endthese[2051938]
          }
          (2051941 call _freeIterator[1102195] _iterator[2051786])
          label _endthese_help[2051943]
        }
        label _breakLabel[1976556]
        (1976559 call _freeIterator[1384621] _iterator[1976502])
      }
      (1976562 call chpl__autoDestroy[1674803] tmp[1976419])
      (1976565 call chpl__autoDestroy[1407763] coerce_tmp[1976302])
      (1976568 call chpl__autoDestroy[1695146] block[1976259])
    }
    label _endcoforall_fn[1976574]
    val coerce_tmp[1976602]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1976604 'move' coerce_tmp[1976602](1976606 'cast' object[22] this[1976599]))
    (1976610 call chpl__autoDestroy[1351354] coerce_tmp[1976602])
    val coerce_tmp[1976588]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1976590 'move' coerce_tmp[1976588](1976592 'cast' object[22] copy[1976585]))
    (1976596 call chpl__autoDestroy[1846254] coerce_tmp[1976588])
    (1976576 return _void[55])
  }
  function wrapcoforall_fn[2206516](in arg dummy_taskList[2206518]:_ref(c_void_ptr)[938311], in arg dummy_taskListNode[2206520]:int(64)[13], in arg buf[2206522]:c_void_ptr[149], in arg buf_size[2206524]:int(64)[13], in arg c[2206526]:_class_localscoforall_fn[2206439]) : void[4] "cobegin or coforall block"
  {
    val _0__coforallCount[2206531]:_EndCount(AtomicT(int(64)),int(64))[945532] "temp"
    (2206536 'move' _0__coforallCount[2206531](2206533 '.v' c[2206526] _0__coforallCount[2206442]))
    val _1_op[2206539]:SumReduceScanOp(real(64))[1396784] "temp"
    (2206544 'move' _1_op[2206539](2206541 '.v' c[2206526] _1_op[2206444]))
    val _2_this[2206547]:[domain(1,int(64),false)] real(64)[1358944] "temp"
    (2206552 'move' _2_this[2206547](2206549 '.v' c[2206526] _2_this[2206446]))
    val _3_rngs[2206555]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950] "temp"
    (2206560 'move' _3_rngs[2206555](2206557 '.v' c[2206526] _3_rngs[2206448]))
    val _4_res[2206563]:[domain(1,int(64),false)] real(64)[1366029] "temp"
    (2206568 'move' _4_res[2206563](2206565 '.v' c[2206526] _4_res[2206450]))
    val _5_state[2206571]:[domain(1,int(64),false)] real(64)[1366029] "temp"
    (2206576 'move' _5_state[2206571](2206573 '.v' c[2206526] _5_state[2206452]))
    val _6_tid[2206579]:int(64)[13] "temp"
    (2206584 'move' _6_tid[2206579](2206581 '.v' c[2206526] _6_tid[2206454]))
    (2206529 call coforall_fn[1398749] _0__coforallCount[2206531] _1_op[2206539] _2_this[2206547] _3_rngs[2206555] _4_res[2206563] _5_state[2206571] _6_tid[2206579])
    val endcount[2206587]:_EndCount(AtomicT(int(64)),int(64))[945532] "temp"
    (2206592 'move' endcount[2206587](2206589 '.v' c[2206526] _0__coforallCount[2206442]))
    (2206594 call _downEndCount[1230826] endcount[2206587] nil[44])
    (2206598 return _void[55])
  }
  function wrapon_fn[2206671](const in arg dummy_locale_arg[2206673]:chpl_localeID_t[209352], in arg buf[2206675]:c_void_ptr[149], in arg buf_size[2206677]:int(64)[13], in arg c[2206679]:_class_localson_fn[2206625]) : void[4] "on block"
  {
    val _0_tmp[2206684]:chpl_localeID_t[209352] "temp"
    (2206689 'move' _0_tmp[2206684](2206686 '.v' c[2206679] _0_tmp[2206628]))
    val _1_Adata[2206691]:_ddata(range(int(64),bounded,false))[1406042] "temp"
    (2206696 'move' _1_Adata[2206691](2206693 '.v' c[2206679] _1_Adata[2206630]))
    val _2_Bdata[2206699]:_ddata(range(int(64),bounded,false))[1406042] "temp"
    (2206704 'move' _2_Bdata[2206699](2206701 '.v' c[2206679] _2_Bdata[2206632]))
    val _3_len[2206707]:uint(64)[115] "temp"
    (2206712 'move' _3_len[2206707](2206709 '.v' c[2206679] _3_len[2206634]))
    (2206682 call on_fn[1437252] _1_Adata[2206691] _2_Bdata[2206699] _3_len[2206707])
    (2206715 return _void[55])
  }
  function wrapon_fn[2206793](const in arg dummy_locale_arg[2206795]:chpl_localeID_t[209352], in arg buf[2206797]:c_void_ptr[149], in arg buf_size[2206799]:int(64)[13], in arg c[2206801]:_class_localson_fn[2206741]) : void[4] "on block"
  {
    val _0_tmp[2206806]:chpl_localeID_t[209352] "temp"
    (2206811 'move' _0_tmp[2206806](2206808 '.v' c[2206801] _0_tmp[2206744]))
    val _1_A[2206813]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "temp"
    (2206818 'move' _1_A[2206813](2206815 '.v' c[2206801] _1_A[2206746]))
    val _2_aView_data[2206821]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1871345] "temp"
    (2206826 'move' _2_aView_data[2206821](2206823 '.v' c[2206801] _2_aView_data[2206748]))
    val _3_B[2206829]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "temp"
    (2206834 'move' _3_B[2206829](2206831 '.v' c[2206801] _3_B[2206750]))
    val _4_bView_data[2206837]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1871345] "temp"
    (2206842 'move' _4_bView_data[2206837](2206839 '.v' c[2206801] _4_bView_data[2206752]))
    (2206804 call on_fn[1437757] _1_A[2206813] _2_aView_data[2206821] _3_B[2206829] _4_bView_data[2206837])
    (2206845 return _void[55])
  }
  function wrapon_fn[2208088](const in arg dummy_locale_arg[2208090]:chpl_localeID_t[209352], in arg buf[2208092]:c_void_ptr[149], in arg buf_size[2208094]:int(64)[13], in arg c[2208096]:_class_localson_fn[2208042]) : void[4] "on block"
  {
    val _0_tmp[2208101]:chpl_localeID_t[209352] "temp"
    (2208106 'move' _0_tmp[2208101](2208103 '.v' c[2208096] _0_tmp[2208045]))
    val _1_Adata[2208108]:_ddata(real(64))[1358105] "temp"
    (2208113 'move' _1_Adata[2208108](2208110 '.v' c[2208096] _1_Adata[2208047]))
    val _2_Bdata[2208116]:_ddata(real(64))[1358105] "temp"
    (2208121 'move' _2_Bdata[2208116](2208118 '.v' c[2208096] _2_Bdata[2208049]))
    val _3_len[2208124]:uint(64)[115] "temp"
    (2208129 'move' _3_len[2208124](2208126 '.v' c[2208096] _3_len[2208051]))
    (2208099 call on_fn[1527383] _1_Adata[2208108] _2_Bdata[2208116] _3_len[2208124])
    (2208132 return _void[55])
  }
  function wrapon_fn[2208210](const in arg dummy_locale_arg[2208212]:chpl_localeID_t[209352], in arg buf[2208214]:c_void_ptr[149], in arg buf_size[2208216]:int(64)[13], in arg c[2208218]:_class_localson_fn[2208158]) : void[4] "on block"
  {
    val _0_tmp[2208223]:chpl_localeID_t[209352] "temp"
    (2208228 'move' _0_tmp[2208223](2208225 '.v' c[2208218] _0_tmp[2208161]))
    val _1_A[2208230]:[domain(1,int(64),false)] real(64)[1358944] "temp"
    (2208235 'move' _1_A[2208230](2208232 '.v' c[2208218] _1_A[2208163]))
    val _2_aView_data[2208238]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1871345] "temp"
    (2208243 'move' _2_aView_data[2208238](2208240 '.v' c[2208218] _2_aView_data[2208165]))
    val _3_B[2208246]:[domain(1,int(64),false)] real(64)[1358944] "temp"
    (2208251 'move' _3_B[2208246](2208248 '.v' c[2208218] _3_B[2208167]))
    val _4_bView_data[2208254]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1871345] "temp"
    (2208259 'move' _4_bView_data[2208254](2208256 '.v' c[2208218] _4_bView_data[2208169]))
    (2208221 call on_fn[1527873] _1_A[2208230] _2_aView_data[2208238] _3_B[2208246] _4_bView_data[2208254])
    (2208262 return _void[55])
  }
  function wrapcoforall_fn[2208441](in arg dummy_taskList[2208443]:_ref(c_void_ptr)[938311], in arg dummy_taskListNode[2208445]:int(64)[13], in arg buf[2208447]:c_void_ptr[149], in arg buf_size[2208449]:int(64)[13], in arg c[2208451]:_class_localscoforall_fn[2208370]) : void[4] "cobegin or coforall block"
  {
    val _0_op[2208456]:SumReduceScanOp(real(64))[1396784] "temp"
    (2208461 'move' _0_op[2208456](2208458 '.v' c[2208451] _0_op[2208373]))
    val _1_tid[2208464]:int(64)[13] "temp"
    (2208469 'move' _1_tid[2208464](2208466 '.v' c[2208451] _1_tid[2208375]))
    val _2__coforallCount[2208472]:_EndCount(AtomicT(int(64)),int(64))[945532] "temp"
    (2208477 'move' _2__coforallCount[2208472](2208474 '.v' c[2208451] _2__coforallCount[2208377]))
    val _3_res[2208480]:[domain(1,int(64),false)] real(64)[1366029] "temp"
    (2208485 'move' _3_res[2208480](2208482 '.v' c[2208451] _3_res[2208379]))
    val _4_state[2208488]:[domain(1,int(64),false)] real(64)[1366029] "temp"
    (2208493 'move' _4_state[2208488](2208490 '.v' c[2208451] _4_state[2208381]))
    val _5_rngs[2208496]:[domain(1,int(64),false)] range(int(64),bounded,false)[1415950] "temp"
    (2208501 'move' _5_rngs[2208496](2208498 '.v' c[2208451] _5_rngs[2208383]))
    (2208454 call coforall_fn[1548131] _0_op[2208456] _1_tid[2208464] _2__coforallCount[2208472] _3_res[2208480] _4_state[2208488] _5_rngs[2208496])
    val endcount[2208504]:_EndCount(AtomicT(int(64)),int(64))[945532] "temp"
    (2208509 'move' endcount[2208504](2208506 '.v' c[2208451] _2__coforallCount[2208377]))
    (2208511 call _downEndCount[1230826] endcount[2208504] nil[44])
    (2208515 return _void[55])
  }
  function wrapcoforall_fn[2219003](in arg dummy_taskList[2219007]:_ref(c_void_ptr)[938311], in arg dummy_taskListNode[2219009]:int(64)[13], in arg buf[2219011]:c_void_ptr[149], in arg buf_size[2219013]:int(64)[13], in arg c[2219015]:_class_localscoforall_fn[2218912]) : void[4] "cobegin or coforall block"
  {
    val error[2219005]:Error[167984] "temp"
    val _0_parDim[2219020]:int(64)[13] "temp"
    (2219025 'move' _0_parDim[2219020](2219022 '.v' c[2219015] _0_parDim[2218915]))
    val _1_numChunks[2219028]:int(64)[13] "temp"
    (2219033 'move' _1_numChunks[2219028](2219030 '.v' c[2219015] _1_numChunks[2218917]))
    val _2_coerce_tmp[2219036]:domain(1,int(64),false)[1251123] "temp"
    (2219041 'move' _2_coerce_tmp[2219036](2219038 '.v' c[2219015] _2_coerce_tmp[2218919]))
    val _3_chunk[2219044]:int(64)[13] "temp"
    (2219049 'move' _3_chunk[2219044](2219046 '.v' c[2219015] _3_chunk[2218921]))
    val _4__coforallCount[2219052]:_EndCount(AtomicT(int(64)),int(64))[945532] "temp"
    (2219057 'move' _4__coforallCount[2219052](2219054 '.v' c[2219015] _4__coforallCount[2218923]))
    ref _6_default_arg_offset[2219061]:1*int(64)[1256714] "temp"
    (2219066 'move' _6_default_arg_offset[2219061](2219063 '.v' c[2219015] _6_default_arg_offset[2218927]))
    val _7_copy[2219069]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] "temp"
    (2219074 'move' _7_copy[2219069](2219071 '.v' c[2219015] _7_copy[2218929]))
    val _8_this[2219077]:[domain(1,int(64),false)] unmanaged localesSignal?[1318401] "temp"
    (2219082 'move' _8_this[2219077](2219079 '.v' c[2219015] _8_this[2218931]))
    (2219018 call coforall_fn[1962183] _0_parDim[2219020] _1_numChunks[2219028] _2_coerce_tmp[2219036] _3_chunk[2219044] _4__coforallCount[2219052] error[2219005] _6_default_arg_offset[2219061] _7_copy[2219069] _8_this[2219077])
    val endcount[2219085]:_EndCount(AtomicT(int(64)),int(64))[945532] "temp"
    (2219090 'move' endcount[2219085](2219087 '.v' c[2219015] _4__coforallCount[2218923]))
    (2219092 call _downEndCount[1230826] endcount[2219085] error[2219005])
    (2219096 return _void[55])
  }
  function wrapcoforall_fn[2219197](in arg dummy_taskList[2219201]:_ref(c_void_ptr)[938311], in arg dummy_taskListNode[2219203]:int(64)[13], in arg buf[2219205]:c_void_ptr[149], in arg buf_size[2219207]:int(64)[13], in arg c[2219209]:_class_localscoforall_fn[2219106]) : void[4] "cobegin or coforall block"
  {
    val error[2219199]:Error[167984] "temp"
    val _0_parDim[2219214]:int(64)[13] "temp"
    (2219219 'move' _0_parDim[2219214](2219216 '.v' c[2219209] _0_parDim[2219109]))
    val _1_numChunks[2219222]:int(64)[13] "temp"
    (2219227 'move' _1_numChunks[2219222](2219224 '.v' c[2219209] _1_numChunks[2219111]))
    val _2_coerce_tmp[2219230]:domain(1,int(64),false)[1251123] "temp"
    (2219235 'move' _2_coerce_tmp[2219230](2219232 '.v' c[2219209] _2_coerce_tmp[2219113]))
    val _3_chunk[2219238]:int(64)[13] "temp"
    (2219243 'move' _3_chunk[2219238](2219240 '.v' c[2219209] _3_chunk[2219115]))
    val _4__coforallCount[2219246]:_EndCount(AtomicT(int(64)),int(64))[945532] "temp"
    (2219251 'move' _4__coforallCount[2219246](2219248 '.v' c[2219209] _4__coforallCount[2219117]))
    ref _6_default_arg_offset[2219255]:1*int(64)[1256714] "temp"
    (2219260 'move' _6_default_arg_offset[2219255](2219257 '.v' c[2219209] _6_default_arg_offset[2219121]))
    val _7_copy[2219263]:[domain(1,int(64),false)] real(64)[1358944] "temp"
    (2219268 'move' _7_copy[2219263](2219265 '.v' c[2219209] _7_copy[2219123]))
    val _8_this[2219271]:[domain(1,int(64),false)] real(64)[1358944] "temp"
    (2219276 'move' _8_this[2219271](2219273 '.v' c[2219209] _8_this[2219125]))
    (2219212 call coforall_fn[1963159] _0_parDim[2219214] _1_numChunks[2219222] _2_coerce_tmp[2219230] _3_chunk[2219238] _4__coforallCount[2219246] error[2219199] _6_default_arg_offset[2219255] _7_copy[2219263] _8_this[2219271])
    val endcount[2219279]:_EndCount(AtomicT(int(64)),int(64))[945532] "temp"
    (2219284 'move' endcount[2219279](2219281 '.v' c[2219209] _4__coforallCount[2219117]))
    (2219286 call _downEndCount[1230826] endcount[2219279] error[2219199])
    (2219290 return _void[55])
  }
  function wrapcoforall_fn[2219391](in arg dummy_taskList[2219395]:_ref(c_void_ptr)[938311], in arg dummy_taskListNode[2219397]:int(64)[13], in arg buf[2219399]:c_void_ptr[149], in arg buf_size[2219401]:int(64)[13], in arg c[2219403]:_class_localscoforall_fn[2219300]) : void[4] "cobegin or coforall block"
  {
    val error[2219393]:Error[167984] "temp"
    val _0_parDim[2219408]:int(64)[13] "temp"
    (2219413 'move' _0_parDim[2219408](2219410 '.v' c[2219403] _0_parDim[2219303]))
    val _1_numChunks[2219416]:int(64)[13] "temp"
    (2219421 'move' _1_numChunks[2219416](2219418 '.v' c[2219403] _1_numChunks[2219305]))
    val _2_coerce_tmp[2219424]:domain(1,int(64),false)[1251123] "temp"
    (2219429 'move' _2_coerce_tmp[2219424](2219426 '.v' c[2219403] _2_coerce_tmp[2219307]))
    val _3_chunk[2219432]:int(64)[13] "temp"
    (2219437 'move' _3_chunk[2219432](2219434 '.v' c[2219403] _3_chunk[2219309]))
    val _4__coforallCount[2219440]:_EndCount(AtomicT(int(64)),int(64))[945532] "temp"
    (2219445 'move' _4__coforallCount[2219440](2219442 '.v' c[2219403] _4__coforallCount[2219311]))
    ref _6_default_arg_offset[2219449]:1*int(64)[1256714] "temp"
    (2219454 'move' _6_default_arg_offset[2219449](2219451 '.v' c[2219403] _6_default_arg_offset[2219315]))
    val _7_copy[2219457]:[domain(1,int(64),false)] int(64)[1368867] "temp"
    (2219462 'move' _7_copy[2219457](2219459 '.v' c[2219403] _7_copy[2219317]))
    val _8_this[2219465]:[domain(1,int(64),false)] int(64)[1368867] "temp"
    (2219470 'move' _8_this[2219465](2219467 '.v' c[2219403] _8_this[2219319]))
    (2219406 call coforall_fn[1964135] _0_parDim[2219408] _1_numChunks[2219416] _2_coerce_tmp[2219424] _3_chunk[2219432] _4__coforallCount[2219440] error[2219393] _6_default_arg_offset[2219449] _7_copy[2219457] _8_this[2219465])
    val endcount[2219473]:_EndCount(AtomicT(int(64)),int(64))[945532] "temp"
    (2219478 'move' endcount[2219473](2219475 '.v' c[2219403] _4__coforallCount[2219311]))
    (2219480 call _downEndCount[1230826] endcount[2219473] error[2219393])
    (2219484 return _void[55])
  }
  function wrapcoforall_fn[2219585](in arg dummy_taskList[2219589]:_ref(c_void_ptr)[938311], in arg dummy_taskListNode[2219591]:int(64)[13], in arg buf[2219593]:c_void_ptr[149], in arg buf_size[2219595]:int(64)[13], in arg c[2219597]:_class_localscoforall_fn[2219494]) : void[4] "cobegin or coforall block"
  {
    val error[2219587]:Error[167984] "temp"
    val _0_parDim[2219602]:int(64)[13] "temp"
    (2219607 'move' _0_parDim[2219602](2219604 '.v' c[2219597] _0_parDim[2219497]))
    val _1_numChunks[2219610]:int(64)[13] "temp"
    (2219615 'move' _1_numChunks[2219610](2219612 '.v' c[2219597] _1_numChunks[2219499]))
    val _2_coerce_tmp[2219618]:domain(1,int(64),false)[1251123] "temp"
    (2219623 'move' _2_coerce_tmp[2219618](2219620 '.v' c[2219597] _2_coerce_tmp[2219501]))
    val _3_chunk[2219626]:int(64)[13] "temp"
    (2219631 'move' _3_chunk[2219626](2219628 '.v' c[2219597] _3_chunk[2219503]))
    val _4__coforallCount[2219634]:_EndCount(AtomicT(int(64)),int(64))[945532] "temp"
    (2219639 'move' _4__coforallCount[2219634](2219636 '.v' c[2219597] _4__coforallCount[2219505]))
    ref _6_default_arg_offset[2219643]:1*int(64)[1256714] "temp"
    (2219648 'move' _6_default_arg_offset[2219643](2219645 '.v' c[2219597] _6_default_arg_offset[2219509]))
    val _7_copy[2219651]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "temp"
    (2219656 'move' _7_copy[2219651](2219653 '.v' c[2219597] _7_copy[2219511]))
    val _8_this[2219659]:[domain(1,int(64),false)] range(int(64),bounded,false)[1409224] "temp"
    (2219664 'move' _8_this[2219659](2219661 '.v' c[2219597] _8_this[2219513]))
    (2219600 call coforall_fn[1965111] _0_parDim[2219602] _1_numChunks[2219610] _2_coerce_tmp[2219618] _3_chunk[2219626] _4__coforallCount[2219634] error[2219587] _6_default_arg_offset[2219643] _7_copy[2219651] _8_this[2219659])
    val endcount[2219667]:_EndCount(AtomicT(int(64)),int(64))[945532] "temp"
    (2219672 'move' endcount[2219667](2219669 '.v' c[2219597] _4__coforallCount[2219505]))
    (2219674 call _downEndCount[1230826] endcount[2219667] error[2219587])
    (2219678 return _void[55])
  }
  function wrapcoforall_fn[2219779](in arg dummy_taskList[2219783]:_ref(c_void_ptr)[938311], in arg dummy_taskListNode[2219785]:int(64)[13], in arg buf[2219787]:c_void_ptr[149], in arg buf_size[2219789]:int(64)[13], in arg c[2219791]:_class_localscoforall_fn[2219688]) : void[4] "cobegin or coforall block"
  {
    val error[2219781]:Error[167984] "temp"
    val _0_parDim[2219796]:int(64)[13] "temp"
    (2219801 'move' _0_parDim[2219796](2219798 '.v' c[2219791] _0_parDim[2219691]))
    val _1_numChunks[2219804]:int(64)[13] "temp"
    (2219809 'move' _1_numChunks[2219804](2219806 '.v' c[2219791] _1_numChunks[2219693]))
    val _2_coerce_tmp[2219812]:domain(1,int(64),false)[1251123] "temp"
    (2219817 'move' _2_coerce_tmp[2219812](2219814 '.v' c[2219791] _2_coerce_tmp[2219695]))
    val _3_chunk[2219820]:int(64)[13] "temp"
    (2219825 'move' _3_chunk[2219820](2219822 '.v' c[2219791] _3_chunk[2219697]))
    val _4__coforallCount[2219828]:_EndCount(AtomicT(int(64)),int(64))[945532] "temp"
    (2219833 'move' _4__coforallCount[2219828](2219830 '.v' c[2219791] _4__coforallCount[2219699]))
    ref _6_default_arg_offset[2219837]:1*int(64)[1256714] "temp"
    (2219842 'move' _6_default_arg_offset[2219837](2219839 '.v' c[2219791] _6_default_arg_offset[2219703]))
    val _7_copy[2219845]:[domain(1,int(64),false)] uint(64)[1450261] "temp"
    (2219850 'move' _7_copy[2219845](2219847 '.v' c[2219791] _7_copy[2219705]))
    val _8_this[2219853]:[domain(1,int(64),false)] uint(64)[1450261] "temp"
    (2219858 'move' _8_this[2219853](2219855 '.v' c[2219791] _8_this[2219707]))
    (2219794 call coforall_fn[1966087] _0_parDim[2219796] _1_numChunks[2219804] _2_coerce_tmp[2219812] _3_chunk[2219820] _4__coforallCount[2219828] error[2219781] _6_default_arg_offset[2219837] _7_copy[2219845] _8_this[2219853])
    val endcount[2219861]:_EndCount(AtomicT(int(64)),int(64))[945532] "temp"
    (2219866 'move' endcount[2219861](2219863 '.v' c[2219791] _4__coforallCount[2219699]))
    (2219868 call _downEndCount[1230826] endcount[2219861] error[2219781])
    (2219872 return _void[55])
  }
  function wrapcoforall_fn[2221629](in arg dummy_taskList[2221631]:_ref(c_void_ptr)[938311], in arg dummy_taskListNode[2221633]:int(64)[13], in arg buf[2221635]:c_void_ptr[149], in arg buf_size[2221637]:int(64)[13], in arg c[2221639]:_class_localscoforall_fn[2221552]) : void[4] "cobegin or coforall block"
  {
    val _0_parDim[2221644]:int(64)[13] "temp"
    (2221649 'move' _0_parDim[2221644](2221646 '.v' c[2221639] _0_parDim[2221555]))
    val _1_numChunks[2221652]:int(64)[13] "temp"
    (2221657 'move' _1_numChunks[2221652](2221654 '.v' c[2221639] _1_numChunks[2221557]))
    val _2_coerce_tmp[2221660]:domain(1,int(64),false)[1251123] "temp"
    (2221665 'move' _2_coerce_tmp[2221660](2221662 '.v' c[2221639] _2_coerce_tmp[2221559]))
    val _3_chunk[2221668]:int(64)[13] "temp"
    (2221673 'move' _3_chunk[2221668](2221670 '.v' c[2221639] _3_chunk[2221561]))
    val _4__coforallCount[2221676]:_EndCount(AtomicT(int(64)),int(64))[945532] "temp"
    (2221681 'move' _4__coforallCount[2221676](2221678 '.v' c[2221639] _4__coforallCount[2221563]))
    val _5_copy[2221684]:[domain(1,int(64),false)] locale[1256675] "temp"
    (2221689 'move' _5_copy[2221684](2221686 '.v' c[2221639] _5_copy[2221565]))
    val _6_this[2221692]:[domain(1,int(64),false)] locale[1256675] "temp"
    (2221697 'move' _6_this[2221692](2221694 '.v' c[2221639] _6_this[2221567]))
    (2221642 call coforall_fn[1976238] _0_parDim[2221644] _1_numChunks[2221652] _2_coerce_tmp[2221660] _3_chunk[2221668] _4__coforallCount[2221676] _5_copy[2221684] _6_this[2221692])
    val endcount[2221700]:_EndCount(AtomicT(int(64)),int(64))[945532] "temp"
    (2221705 'move' endcount[2221700](2221702 '.v' c[2221639] _4__coforallCount[2221563]))
    (2221707 call _downEndCount[1230826] endcount[2221700] nil[44])
    (2221711 return _void[55])
  }
}