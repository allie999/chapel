AST dump for MemTracking after pass scalarReplace.
Module use list: ChapelStandard SysCTypes 

{
  function chpl__init_MemTracking[416127]() : void[4] "insert line file info" "module init" "resolved"
  {
    const-val call_tmp[678569]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678572 'move' call_tmp[678569](544409 call chpl_config_has_value[334] c"memTrack" c"Built-in"))
    const-val call_tmp[678574]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2228580]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228582 'move' call_tmp[2228580](2228584 '!' call_tmp[678569]))
    (678577 'move' call_tmp[678574] call_tmp[2228580])
    if call_tmp[678574]
    {
      (544428 'move' tmp[544400] 0)
    }
    {
      val call_tmp[678579]:bool[10] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[678584]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (678587 'move' call_tmp[678584](544419 call chpl_config_get_value[350] c"memTrack" c"Built-in"))
      (544424 'move' tmp[544400](544422 call _command_line_cast[1354004] call_tmp[678584]))
    }
    (544402 'move' memTrack[166657] tmp[544400])
    (2197348 '_private_broadcast' memTrack[166657])
    const-val call_tmp[678589]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678592 'move' call_tmp[678589](544439 call chpl_config_has_value[334] c"memStats" c"Built-in"))
    const-val call_tmp[678594]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2228589]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228591 'move' call_tmp[2228589](2228593 '!' call_tmp[678589]))
    (678597 'move' call_tmp[678594] call_tmp[2228589])
    if call_tmp[678594]
    {
      (544458 'move' tmp[544430] 0)
    }
    {
      val call_tmp[678599]:bool[10] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[678604]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (678607 'move' call_tmp[678604](544449 call chpl_config_get_value[350] c"memStats" c"Built-in"))
      (544454 'move' tmp[544430](544452 call _command_line_cast[1354047] call_tmp[678604]))
    }
    (544432 'move' memStats[166662] tmp[544430])
    (2197350 '_private_broadcast' memStats[166662])
    const-val call_tmp[678609]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678612 'move' call_tmp[678609](544469 call chpl_config_has_value[334] c"memLeaksByType" c"Built-in"))
    const-val call_tmp[678614]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2228598]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228600 'move' call_tmp[2228598](2228602 '!' call_tmp[678609]))
    (678617 'move' call_tmp[678614] call_tmp[2228598])
    if call_tmp[678614]
    {
      (544488 'move' tmp[544460] 0)
    }
    {
      val call_tmp[678619]:bool[10] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[678624]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (678627 'move' call_tmp[678624](544479 call chpl_config_get_value[350] c"memLeaksByType" c"Built-in"))
      (544484 'move' tmp[544460](544482 call _command_line_cast[1354090] call_tmp[678624]))
    }
    (544462 'move' memLeaksByType[166667] tmp[544460])
    (2197352 '_private_broadcast' memLeaksByType[166667])
    const-val call_tmp[678629]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678632 'move' call_tmp[678629](544499 call chpl_config_has_value[334] c"memLeaks" c"Built-in"))
    const-val call_tmp[678634]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2228607]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228609 'move' call_tmp[2228607](2228611 '!' call_tmp[678629]))
    (678637 'move' call_tmp[678634] call_tmp[2228607])
    if call_tmp[678634]
    {
      (544518 'move' tmp[544490] 0)
    }
    {
      val call_tmp[678639]:bool[10] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[678644]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (678647 'move' call_tmp[678644](544509 call chpl_config_get_value[350] c"memLeaks" c"Built-in"))
      (544514 'move' tmp[544490](544512 call _command_line_cast[1354133] call_tmp[678644]))
    }
    (544492 'move' memLeaks[166672] tmp[544490])
    (2197354 '_private_broadcast' memLeaks[166672])
    const-val call_tmp[678649]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678652 'move' call_tmp[678649](544529 call chpl_config_has_value[334] c"memMax" c"Built-in"))
    const-val call_tmp[678654]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2228616]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228618 'move' call_tmp[2228616](2228620 '!' call_tmp[678649]))
    (678657 'move' call_tmp[678654] call_tmp[2228616])
    if call_tmp[678654]
    {
      const-val init_coerce_tmp[1354175]:uint(64)[115] "dead at end of block" "temp"
      (1354178 'move' init_coerce_tmp[1354175](1356954 'cast' uint(64)[115] 0))
      (544548 'move' tmp[544520] init_coerce_tmp[1354175])
    }
    {
      val call_tmp[678659]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[678664]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (678667 'move' call_tmp[678664](544539 call chpl_config_get_value[350] c"memMax" c"Built-in"))
      (544544 'move' tmp[544520](544542 call _command_line_cast[1354184] call_tmp[678664]))
    }
    (544522 'move' memMax[166677] tmp[544520])
    (2197356 '_private_broadcast' memMax[166677])
    const-val call_tmp[678669]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678672 'move' call_tmp[678669](544559 call chpl_config_has_value[334] c"memThreshold" c"Built-in"))
    const-val call_tmp[678674]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2228625]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228627 'move' call_tmp[2228625](2228629 '!' call_tmp[678669]))
    (678677 'move' call_tmp[678674] call_tmp[2228625])
    if call_tmp[678674]
    {
      const-val init_coerce_tmp[1356509]:uint(64)[115] "dead at end of block" "temp"
      (1356512 'move' init_coerce_tmp[1356509](1356958 'cast' uint(64)[115] 0))
      (544578 'move' tmp[544550] init_coerce_tmp[1356509])
    }
    {
      val call_tmp[678679]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[678684]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (678687 'move' call_tmp[678684](544569 call chpl_config_get_value[350] c"memThreshold" c"Built-in"))
      (544574 'move' tmp[544550](544572 call _command_line_cast[1356518] call_tmp[678684]))
    }
    (544552 'move' memThreshold[166682] tmp[544550])
    (2197358 '_private_broadcast' memThreshold[166682])
    const-val call_tmp[678689]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678692 'move' call_tmp[678689](544589 call chpl_config_has_value[334] c"memLog" c"Built-in"))
    const-val call_tmp[678694]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2228634]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228636 'move' call_tmp[2228634](2228638 '!' call_tmp[678689]))
    (678697 'move' call_tmp[678694] call_tmp[2228634])
    if call_tmp[678694]
    {
      (1356962 call init[30763] tmp[544580])
    }
    {
      val call_tmp[678699]:string[26] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[678704]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (678707 'move' call_tmp[678704](544599 call chpl_config_get_value[350] c"memLog" c"Built-in"))
      const-val ret_tmp[1914313]:string[26] "temp"
      (544602 call _command_line_cast[1356562] call_tmp[678704] ret_tmp[1914313])
      (1914316 'move' tmp[544580] ret_tmp[1914313])
    }
    (544582 'move' memLog[166686] tmp[544580])
    (2197360 '_private_broadcast' memLog[166686])
    const-val call_tmp[678709]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678712 'move' call_tmp[678709](544619 call chpl_config_has_value[334] c"memLeaksLog" c"Built-in"))
    const-val call_tmp[678714]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2228643]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228645 'move' call_tmp[2228643](2228647 '!' call_tmp[678709]))
    (678717 'move' call_tmp[678714] call_tmp[2228643])
    if call_tmp[678714]
    {
      (1356967 call init[30763] tmp[544610])
    }
    {
      val call_tmp[678719]:string[26] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[678724]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (678727 'move' call_tmp[678724](544629 call chpl_config_get_value[350] c"memLeaksLog" c"Built-in"))
      const-val ret_tmp[1914349]:string[26] "temp"
      (544632 call _command_line_cast[1356868] call_tmp[678724] ret_tmp[1914349])
      (1914352 'move' tmp[544610] ret_tmp[1914349])
    }
    (544612 'move' memLeaksLog[166691] tmp[544610])
    (2197362 '_private_broadcast' memLeaksLog[166691])
    const-val call_tmp[678729]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678732 'move' call_tmp[678729](544649 call chpl_config_has_value[334] c"memLeaksByDesc" c"Built-in"))
    const-val call_tmp[678734]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2228652]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228654 'move' call_tmp[2228652](2228656 '!' call_tmp[678729]))
    (678737 'move' call_tmp[678734] call_tmp[2228652])
    if call_tmp[678734]
    {
      (1356972 call init[30763] tmp[544640])
    }
    {
      val call_tmp[678739]:string[26] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[678744]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (678747 'move' call_tmp[678744](544659 call chpl_config_get_value[350] c"memLeaksByDesc" c"Built-in"))
      const-val ret_tmp[1914361]:string[26] "temp"
      (544662 call _command_line_cast[1356912] call_tmp[678744] ret_tmp[1914361])
      (1914364 'move' tmp[544640] ret_tmp[1914361])
    }
    (544642 'move' memLeaksByDesc[166696] tmp[544640])
    (2197364 '_private_broadcast' memLeaksByDesc[166696])
    (678754 'move' call_tmp[678751] memMax[166677])
    (544670 'move' cMemMax[166707] call_tmp[678751])
    (2197366 '_private_broadcast' cMemMax[166707])
    (678761 'move' call_tmp[678758] memThreshold[166682])
    (544672 'move' cMemThreshold[166717] call_tmp[678758])
    (2197368 '_private_broadcast' cMemThreshold[166717])
    (522042 return _void[55])
  }
  const-val memTrack[166657]:bool[10] "config" "const" "insert auto destroy"
  const-val memStats[166662]:bool[10] "config" "const" "insert auto destroy"
  const-val memLeaksByType[166667]:bool[10] "config" "const" "insert auto destroy"
  const-val memLeaks[166672]:bool[10] "config" "const" "insert auto destroy"
  const-val memMax[166677]:uint(64)[115] "config" "const" "insert auto destroy"
  const-val memThreshold[166682]:uint(64)[115] "config" "const" "insert auto destroy"
  const-val memLog[166686]:string[26] "config" "const" "insert auto destroy"
  const-val memLeaksLog[166691]:string[26] "config" "const" "insert auto destroy" "no auto destroy"
  const-val memLeaksByDesc[166696]:string[26] "config" "const" "insert auto destroy" "no auto destroy"
  const-val cMemMax[166707]:uint(64)[115] "dead at end of block" "const" "insert auto destroy"
  const-val cMemThreshold[166717]:uint(64)[115] "dead at end of block" "const" "insert auto destroy"
  function chpl_memTracking_returnConfigVals[166727](ref arg ret_memTrack[166724]:bool[10], ref arg ret_memStats[166730]:bool[10], ref arg ret_memLeaksByType[166734]:bool[10], ref arg ret_memLeaksByDesc[166738]:c_string[19], ref arg ret_memLeaks[166742]:bool[10], ref arg ret_memMax[166746]:uint(64)[115], ref arg ret_memThreshold[166750]:uint(64)[115], ref arg ret_memLog[166754]:c_string[19], ref arg ret_memLeaksLog[166758]:c_string[19]) : void[4] "export" "local args" "resolved" "no return value for void"
  {
    (2251847 '=' ret_memTrack[166724] memTrack[166657])
    (2251853 '=' ret_memStats[166730] memStats[166662])
    (2251859 '=' ret_memLeaksByType[166734] memLeaksByType[166667])
    (2251865 '=' ret_memLeaks[166742] memLeaks[166672])
    (2333908 '=' ret_memMax[166746] cMemMax[166707])
    (2333914 '=' ret_memThreshold[166750] cMemThreshold[166717])
    const-val call_tmp[678763]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1906250]:locale[28] "temp"
    ref i__retArg[2285524]:locale[28] "temp"
    (2285528 'move' i__retArg[2285524](2285526 'set reference' ret_tmp[1906250]))
    const-val call_tmp[2285531]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2285533]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2285535 'move' call_tmp[2285533](2285538 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
    (2285541 'move' call_tmp[2285531] call_tmp[2285533])
    const-val call_tmp[2285544]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2285546]:locale[28] "temp"
    (2285549 call chpl_localeID_to_locale[92852] call_tmp[2285531] ret_tmp[2285546])
    (2285552 'move' call_tmp[2285544] ret_tmp[2285546])
    (2285555 '=' i__retArg[2285524] call_tmp[2285544])
    (1906253 'move' call_tmp[678763] ret_tmp[1906250])
    const-val call_tmp[678770]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    ref i_this[2288042]:locale[28] "temp"
    (2288046 'move' i_this[2288042](2288044 'set reference' call_tmp[678763]))
    val coerce_tmp[2288049]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2288051 'move' coerce_tmp[2288049](2288053 '.v' i_this[2288042] _instance[89978]))
    val coerce_tmp[2288056]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2288058 'move' coerce_tmp[2288056](2288060 'cast' object[22] coerce_tmp[2288049]))
    const-val call_tmp[2288063]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2288065 'move' call_tmp[2288063](2288067 'ptr_eq' coerce_tmp[2288056] nil[44]))
    if call_tmp[2288063]
    {
      (2288073 call nilCheckHalt[210238] "argument to ! is nil")
    }
    const-val call_tmp[2288076]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2288078 'move' call_tmp[2288076](2288081 call id[90757] coerce_tmp[2288049]))
    (678773 'move' call_tmp[678770] call_tmp[2288076])
    const-val call_tmp[678775]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val inlineImm[2229860]:int(64)[13] "temp"
    (2229863 'move' inlineImm[2229860] 0)
    const-val call_tmp[2229866]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2229868 'move' call_tmp[2229866](2229870 '!=' call_tmp[678770] inlineImm[2229860]))
    (678778 'move' call_tmp[678775] call_tmp[2229866])
    const-val call_tmp[678780]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678783 'move' call_tmp[678780] call_tmp[678775])
    if call_tmp[678780]
    {
      const-val call_tmp[678787]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      ref i_this[2263263]:string[26] "temp"
      (2263267 'move' i_this[2263263](2263265 'set reference' memLeaksByDesc[166696]))
      const-val n[2263270]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[2263272]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (2263274 'move' coerce_tmp[2263272](2263276 '.v' i_this[2263263] cachedNumCodepoints[30734]))
      (2263279 '=' n[2263270] coerce_tmp[2263272])
      (2263282 'noop')
      const-val call_tmp[2263283]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2263285 'move' call_tmp[2263283](2263288 call countNumCodepoints[181380] i_this[2263263]))
      const-val call_tmp[2263290]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2263292 'move' call_tmp[2263290](2263294 '!=' coerce_tmp[2263272] call_tmp[2263283]))
      if call_tmp[2263290]
      {
        (2263300 call halt[154111] "Encountered corrupt string metadata")
      }
      (678790 'move' call_tmp[678787] n[2263270])
      const-val call_tmp[678792]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val inlineImm[2229875]:int(64)[13] "temp"
      (2229878 'move' inlineImm[2229875] 0)
      const-val call_tmp[2229881]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2229883 'move' call_tmp[2229881](2229885 '!=' call_tmp[678787] inlineImm[2229875]))
      (678795 'move' call_tmp[678792] call_tmp[2229881])
      const-val call_tmp[678797]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (678800 'move' call_tmp[678797] call_tmp[678792])
      if call_tmp[678797]
      {
        val local_memLeaksByDesc[166807]:string[26] "dead at end of block" "insert auto destroy"
        (544674 call init=[30774] local_memLeaksByDesc[166807] memLeaksByDesc[166696])
        ref call_tmp[678804]:bool[10] "dead after last mention" "maybe param" "temp"
        ref i_this[2251227]:string[26] "temp"
        (2251231 'move' i_this[2251227](2251229 'set reference' local_memLeaksByDesc[166807]))
        ref call_tmp[2251234]:bool[10] "dead after last mention" "maybe param" "temp"
        (2251236 'move' call_tmp[2251234](2251238 '.' i_this[2251227] isOwned[30746]))
        (678807 'move' call_tmp[678804] call_tmp[2251234])
        val inlineImm[2251870]:bool[10] "temp"
        (2251873 'move' inlineImm[2251870] 0)
        (2251876 '=' call_tmp[678804] inlineImm[2251870])
        const-val call_tmp[678811]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
        ref i_this[2269132]:string[26] "temp"
        (2269136 'move' i_this[2269132](2269134 'set reference' local_memLeaksByDesc[166807]))
        const-val coerce_tmp[2269139]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2269141 'move' coerce_tmp[2269139](2269143 '.v' i_this[2269132] locale_id[30757]))
        const-val call_tmp[2269146]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2269148 'move' call_tmp[2269146](2269150 '!=' coerce_tmp[2269139] chpl_nodeID[208207]))
        if call_tmp[2269146]
        {
          (2269156 call halt[154111] "Cannot call .c_str() on a remote string")
        }
        val coerce_tmp[2269159]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2269161 'move' coerce_tmp[2269159](2269163 '.v' i_this[2269132] buff[30740]))
        const-val call_tmp[2269166]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (2269168 'move' call_tmp[2269166](2269170 'cast' c_string[19] coerce_tmp[2269159]))
        (678814 'move' call_tmp[678811] call_tmp[2269166])
        (2235430 '=' ret_memLeaksByDesc[166738] call_tmp[678811])
        ref i_x[2245973]:string[26] "temp"
        (2245977 'move' i_x[2245973](2245975 'set reference' local_memLeaksByDesc[166807]))
        (2245981 call deinit[30834] i_x[2245973])
      }
      {
        const-val call_tmp[2235558]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
        (2235560 'move' call_tmp[2235558](2235562 'cast' c_void_ptr[149] nil[44]))
        const-val call_tmp[2235565]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (2235567 'move' call_tmp[2235565](2235569 'cast' c_string[19] call_tmp[2235558]))
        (2235572 '=' ret_memLeaksByDesc[166738] call_tmp[2235565])
      }
      const-val call_tmp[678818]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      ref i_this[2263305]:string[26] "temp"
      (2263309 'move' i_this[2263305](2263307 'set reference' memLog[166686]))
      const-val n[2263312]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[2263314]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (2263316 'move' coerce_tmp[2263314](2263318 '.v' i_this[2263305] cachedNumCodepoints[30734]))
      (2263321 '=' n[2263312] coerce_tmp[2263314])
      (2263324 'noop')
      const-val call_tmp[2263325]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2263327 'move' call_tmp[2263325](2263330 call countNumCodepoints[181380] i_this[2263305]))
      const-val call_tmp[2263332]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2263334 'move' call_tmp[2263332](2263336 '!=' coerce_tmp[2263314] call_tmp[2263325]))
      if call_tmp[2263332]
      {
        (2263342 call halt[154111] "Encountered corrupt string metadata")
      }
      (678821 'move' call_tmp[678818] n[2263312])
      const-val call_tmp[678823]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val inlineImm[2229890]:int(64)[13] "temp"
      (2229893 'move' inlineImm[2229890] 0)
      const-val call_tmp[2229896]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2229898 'move' call_tmp[2229896](2229900 '!=' call_tmp[678818] inlineImm[2229890]))
      (678826 'move' call_tmp[678823] call_tmp[2229896])
      const-val call_tmp[678828]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (678831 'move' call_tmp[678828] call_tmp[678823])
      if call_tmp[678828]
      {
        val local_memLog[166849]:string[26] "dead at end of block" "insert auto destroy"
        (544676 call init=[30774] local_memLog[166849] memLog[166686])
        ref call_tmp[678835]:bool[10] "dead after last mention" "maybe param" "temp"
        ref i_this[2251243]:string[26] "temp"
        (2251247 'move' i_this[2251243](2251245 'set reference' local_memLog[166849]))
        ref call_tmp[2251250]:bool[10] "dead after last mention" "maybe param" "temp"
        (2251252 'move' call_tmp[2251250](2251254 '.' i_this[2251243] isOwned[30746]))
        (678838 'move' call_tmp[678835] call_tmp[2251250])
        val inlineImm[2251881]:bool[10] "temp"
        (2251884 'move' inlineImm[2251881] 0)
        (2251887 '=' call_tmp[678835] inlineImm[2251881])
        const-val call_tmp[678842]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
        ref i_this[2269175]:string[26] "temp"
        (2269179 'move' i_this[2269175](2269177 'set reference' local_memLog[166849]))
        const-val coerce_tmp[2269182]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2269184 'move' coerce_tmp[2269182](2269186 '.v' i_this[2269175] locale_id[30757]))
        const-val call_tmp[2269189]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2269191 'move' call_tmp[2269189](2269193 '!=' coerce_tmp[2269182] chpl_nodeID[208207]))
        if call_tmp[2269189]
        {
          (2269199 call halt[154111] "Cannot call .c_str() on a remote string")
        }
        val coerce_tmp[2269202]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2269204 'move' coerce_tmp[2269202](2269206 '.v' i_this[2269175] buff[30740]))
        const-val call_tmp[2269209]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (2269211 'move' call_tmp[2269209](2269213 'cast' c_string[19] coerce_tmp[2269202]))
        (678845 'move' call_tmp[678842] call_tmp[2269209])
        (2235442 '=' ret_memLog[166754] call_tmp[678842])
        ref i_x[2245985]:string[26] "temp"
        (2245989 'move' i_x[2245985](2245987 'set reference' local_memLog[166849]))
        (2245993 call deinit[30834] i_x[2245985])
      }
      {
        const-val call_tmp[2235578]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
        (2235580 'move' call_tmp[2235578](2235582 'cast' c_void_ptr[149] nil[44]))
        const-val call_tmp[2235585]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (2235587 'move' call_tmp[2235585](2235589 'cast' c_string[19] call_tmp[2235578]))
        (2235592 '=' ret_memLog[166754] call_tmp[2235585])
      }
      const-val call_tmp[678849]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      ref i_this[2263347]:string[26] "temp"
      (2263351 'move' i_this[2263347](2263349 'set reference' memLeaksLog[166691]))
      const-val n[2263354]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[2263356]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (2263358 'move' coerce_tmp[2263356](2263360 '.v' i_this[2263347] cachedNumCodepoints[30734]))
      (2263363 '=' n[2263354] coerce_tmp[2263356])
      (2263366 'noop')
      const-val call_tmp[2263367]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2263369 'move' call_tmp[2263367](2263372 call countNumCodepoints[181380] i_this[2263347]))
      const-val call_tmp[2263374]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2263376 'move' call_tmp[2263374](2263378 '!=' coerce_tmp[2263356] call_tmp[2263367]))
      if call_tmp[2263374]
      {
        (2263384 call halt[154111] "Encountered corrupt string metadata")
      }
      (678852 'move' call_tmp[678849] n[2263354])
      const-val call_tmp[678854]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val inlineImm[2229905]:int(64)[13] "temp"
      (2229908 'move' inlineImm[2229905] 0)
      const-val call_tmp[2229911]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2229913 'move' call_tmp[2229911](2229915 '!=' call_tmp[678849] inlineImm[2229905]))
      (678857 'move' call_tmp[678854] call_tmp[2229911])
      const-val call_tmp[678859]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (678862 'move' call_tmp[678859] call_tmp[678854])
      if call_tmp[678859]
      {
        val local_memLeaksLog[166890]:string[26] "dead at end of block" "insert auto destroy"
        (544678 call init=[30774] local_memLeaksLog[166890] memLeaksLog[166691])
        ref call_tmp[678866]:bool[10] "dead after last mention" "maybe param" "temp"
        ref i_this[2251259]:string[26] "temp"
        (2251263 'move' i_this[2251259](2251261 'set reference' local_memLeaksLog[166890]))
        ref call_tmp[2251266]:bool[10] "dead after last mention" "maybe param" "temp"
        (2251268 'move' call_tmp[2251266](2251270 '.' i_this[2251259] isOwned[30746]))
        (678869 'move' call_tmp[678866] call_tmp[2251266])
        val inlineImm[2251892]:bool[10] "temp"
        (2251895 'move' inlineImm[2251892] 0)
        (2251898 '=' call_tmp[678866] inlineImm[2251892])
        const-val call_tmp[678873]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
        ref i_this[2269218]:string[26] "temp"
        (2269222 'move' i_this[2269218](2269220 'set reference' local_memLeaksLog[166890]))
        const-val coerce_tmp[2269225]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2269227 'move' coerce_tmp[2269225](2269229 '.v' i_this[2269218] locale_id[30757]))
        const-val call_tmp[2269232]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2269234 'move' call_tmp[2269232](2269236 '!=' coerce_tmp[2269225] chpl_nodeID[208207]))
        if call_tmp[2269232]
        {
          (2269242 call halt[154111] "Cannot call .c_str() on a remote string")
        }
        val coerce_tmp[2269245]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2269247 'move' coerce_tmp[2269245](2269249 '.v' i_this[2269218] buff[30740]))
        const-val call_tmp[2269252]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (2269254 'move' call_tmp[2269252](2269256 'cast' c_string[19] coerce_tmp[2269245]))
        (678876 'move' call_tmp[678873] call_tmp[2269252])
        (2235448 '=' ret_memLeaksLog[166758] call_tmp[678873])
        ref i_x[2245997]:string[26] "temp"
        (2246001 'move' i_x[2245997](2245999 'set reference' local_memLeaksLog[166890]))
        (2246005 call deinit[30834] i_x[2245997])
      }
      {
        const-val call_tmp[2235598]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
        (2235600 'move' call_tmp[2235598](2235602 'cast' c_void_ptr[149] nil[44]))
        const-val call_tmp[2235605]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (2235607 'move' call_tmp[2235605](2235609 'cast' c_string[19] call_tmp[2235598]))
        (2235612 '=' ret_memLeaksLog[166758] call_tmp[2235605])
      }
    }
    {
      const-val call_tmp[678880]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      ref i_this[2269261]:string[26] "temp"
      (2269265 'move' i_this[2269261](2269263 'set reference' memLeaksByDesc[166696]))
      const-val coerce_tmp[2269268]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2269270 'move' coerce_tmp[2269268](2269272 '.v' i_this[2269261] locale_id[30757]))
      const-val call_tmp[2269275]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2269277 'move' call_tmp[2269275](2269279 '!=' coerce_tmp[2269268] chpl_nodeID[208207]))
      if call_tmp[2269275]
      {
        (2269285 call halt[154111] "Cannot call .c_str() on a remote string")
      }
      val coerce_tmp[2269288]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2269290 'move' coerce_tmp[2269288](2269292 '.v' i_this[2269261] buff[30740]))
      const-val call_tmp[2269295]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (2269297 'move' call_tmp[2269295](2269299 'cast' c_string[19] coerce_tmp[2269288]))
      (678883 'move' call_tmp[678880] call_tmp[2269295])
      (2235454 '=' ret_memLeaksByDesc[166738] call_tmp[678880])
      const-val call_tmp[678887]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      ref i_this[2269304]:string[26] "temp"
      (2269308 'move' i_this[2269304](2269306 'set reference' memLog[166686]))
      const-val coerce_tmp[2269311]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2269313 'move' coerce_tmp[2269311](2269315 '.v' i_this[2269304] locale_id[30757]))
      const-val call_tmp[2269318]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2269320 'move' call_tmp[2269318](2269322 '!=' coerce_tmp[2269311] chpl_nodeID[208207]))
      if call_tmp[2269318]
      {
        (2269328 call halt[154111] "Cannot call .c_str() on a remote string")
      }
      val coerce_tmp[2269331]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2269333 'move' coerce_tmp[2269331](2269335 '.v' i_this[2269304] buff[30740]))
      const-val call_tmp[2269338]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (2269340 'move' call_tmp[2269338](2269342 'cast' c_string[19] coerce_tmp[2269331]))
      (678890 'move' call_tmp[678887] call_tmp[2269338])
      (2235460 '=' ret_memLog[166754] call_tmp[678887])
      const-val call_tmp[678894]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      ref i_this[2269347]:string[26] "temp"
      (2269351 'move' i_this[2269347](2269349 'set reference' memLeaksLog[166691]))
      const-val coerce_tmp[2269354]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2269356 'move' coerce_tmp[2269354](2269358 '.v' i_this[2269347] locale_id[30757]))
      const-val call_tmp[2269361]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2269363 'move' call_tmp[2269361](2269365 '!=' coerce_tmp[2269354] chpl_nodeID[208207]))
      if call_tmp[2269361]
      {
        (2269371 call halt[154111] "Cannot call .c_str() on a remote string")
      }
      val coerce_tmp[2269374]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2269376 'move' coerce_tmp[2269374](2269378 '.v' i_this[2269347] buff[30740]))
      const-val call_tmp[2269381]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (2269383 'move' call_tmp[2269381](2269385 'cast' c_string[19] coerce_tmp[2269374]))
      (678897 'move' call_tmp[678894] call_tmp[2269381])
      (2235466 '=' ret_memLeaksLog[166758] call_tmp[678894])
    }
    ref i_x[2388509]:locale[28] "temp"
    (2388513 'move' i_x[2388509](2388511 'set reference' call_tmp[678763]))
    (2388517 call deinit[90188] i_x[2388509])
    (522040 return _void[55])
  }
  val tmp[544400]:bool[10] "dead at end of block" "temp"
  val tmp[544430]:bool[10] "dead at end of block" "temp"
  val tmp[544460]:bool[10] "dead at end of block" "temp"
  val tmp[544490]:bool[10] "dead at end of block" "temp"
  val tmp[544520]:uint(64)[115] "dead at end of block" "temp"
  val tmp[544550]:uint(64)[115] "dead at end of block" "temp"
  val tmp[544580]:string[26] "dead at end of block" "temp"
  val tmp[544610]:string[26] "dead at end of block" "temp"
  val tmp[544640]:string[26] "dead at end of block" "temp"
  const-val call_tmp[678751]:uint(64)[115] "dead at end of block" "maybe param" "temp"
  const-val call_tmp[678758]:uint(64)[115] "dead at end of block" "maybe param" "temp"
  function chpl__deinit_MemTracking[1930239]() : void[4] "resolved"
  {
    label _endchpl__deinit_MemTracking[1930245]
    ref i_x[2249621]:string[26] "temp"
    (2249625 'move' i_x[2249621](2249623 'set reference' memLog[166686]))
    (2249629 call deinit[30834] i_x[2249621])
    (1930242 return _void[55])
  }
}