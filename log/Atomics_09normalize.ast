AST dump for Atomics after pass normalize.
Module use list: ChapelBase MemConsistency 

{
  function chpl__init_Atomics[415973]() : void[4] "insert line file info" "module init"
  {
    (506297 return _void[55])
  }
  function chpl_atomic_thread_fence[43978](arg order[43975]:memory_order[186653]) : void[4] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no doc" "no return value for void"
  {
    (505604 return _void[55])
  }
  function atomic_fence[43990](arg order[43986]:memory_order[186653] =
  memory_order_seq_cst[186997]) : _unknown[51] "no doc" "no return value for void"
  {
    (43995 call chpl_atomic_thread_fence order[43986])
    (474281 'end of statement')
    unknown call_tmp[605979] "expr temp" "maybe param" "maybe type" "temp"
    (605982 'move' call_tmp[605979](44004 call _cond_test CHPL_CACHE_REMOTE[367]))
    if call_tmp[605979]
    {
      (44002 call chpl_rmem_consist_fence order[43986])
    }
    (505606 return _void[55])
  }
  function atomicFence[44024](param arg order[44020]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "inline" "no return value for void"
  {
    unknown call_tmp[605984] "expr temp" "maybe param" "maybe type" "temp"
    (605987 'move' call_tmp[605984](44030 call c_memory_order order[44020]))
    (44032 call atomic_fence call_tmp[605984])
    (505608 return _void[55])
  }
  function isSupported[44041](arg T[44039]:_any[178](?)) param : _unknown[51] "private"
  {
    unknown ret[505612] "RVV" "param" "temp"
    unknown tmp[418438] "maybe param" "temp"
    unknown tmp[418459] "maybe param" "temp"
    unknown tmp[418480] "maybe param" "temp"
    (418491 'move' tmp[418480](44045 call == T[44039] bool[10]))
    unknown call_tmp[605989] "expr temp" "maybe param" "maybe type" "temp"
    (605992 'move' call_tmp[605989](418493 call _cond_invalid tmp[418480]))
    if call_tmp[605989]
    {
      (418496 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[554337] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554338] "maybe param" "temp"
    unknown call_tmp[605994] "expr temp" "maybe param" "maybe type" "temp"
    (605997 'move' call_tmp[605994](418481 call isTrue tmp[418480]))
    (554343 'move' tmp[554338](554341 call _cond_test call_tmp[605994]))
    if tmp[554338]
    {
      (554348 'move' tmp[554337](554345 '_paramFoldLogical' tmp[554338] 1))
    }
    {
      unknown tmp[554350] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[605999] "expr temp" "maybe param" "maybe type" "temp"
      (606002 'move' call_tmp[605999](44050 call isInt T[44039]))
      (554352 'move' tmp[554350](418485 call isTrue call_tmp[605999]))
      (554357 'move' tmp[554337](554354 '_paramFoldLogical' tmp[554338] tmp[554350]))
    }
    (418470 'move' tmp[418459] tmp[554337])
    unknown call_tmp[606004] "expr temp" "maybe param" "maybe type" "temp"
    (606007 'move' call_tmp[606004](418472 call _cond_invalid tmp[418459]))
    if call_tmp[606004]
    {
      (418475 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[554364] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554365] "maybe param" "temp"
    unknown call_tmp[606009] "expr temp" "maybe param" "maybe type" "temp"
    (606012 'move' call_tmp[606009](418460 call isTrue tmp[418459]))
    (554370 'move' tmp[554365](554368 call _cond_test call_tmp[606009]))
    if tmp[554365]
    {
      (554375 'move' tmp[554364](554372 '_paramFoldLogical' tmp[554365] 1))
    }
    {
      unknown tmp[554377] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[606014] "expr temp" "maybe param" "maybe type" "temp"
      (606017 'move' call_tmp[606014](44056 call isUint T[44039]))
      (554379 'move' tmp[554377](418464 call isTrue call_tmp[606014]))
      (554384 'move' tmp[554364](554381 '_paramFoldLogical' tmp[554365] tmp[554377]))
    }
    (418449 'move' tmp[418438] tmp[554364])
    unknown call_tmp[606019] "expr temp" "maybe param" "maybe type" "temp"
    (606022 'move' call_tmp[606019](418451 call _cond_invalid tmp[418438]))
    if call_tmp[606019]
    {
      (418454 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[554391] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554392] "maybe param" "temp"
    unknown call_tmp[606024] "expr temp" "maybe param" "maybe type" "temp"
    (606027 'move' call_tmp[606024](418439 call isTrue tmp[418438]))
    (554397 'move' tmp[554392](554395 call _cond_test call_tmp[606024]))
    if tmp[554392]
    {
      (554402 'move' tmp[554391](554399 '_paramFoldLogical' tmp[554392] 1))
    }
    {
      unknown tmp[554404] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[606029] "expr temp" "maybe param" "maybe type" "temp"
      (606032 'move' call_tmp[606029](44062 call isReal T[44039]))
      (554406 'move' tmp[554404](418443 call isTrue call_tmp[606029]))
      (554411 'move' tmp[554391](554408 '_paramFoldLogical' tmp[554392] tmp[554404]))
    }
    (505617 'move' ret[505612](505616 'deref' tmp[554391]))
    (505614 return ret[505612])
  }
  function externT[44074](arg T[44072]:_any[178](?)) type : _unknown[51] "private"
  {
    unknown ret[505621] "RVV" "temp" "type variable"
    type atomic_bool[44080]
    type atomic_int_least8_t[44087]
    type atomic_int_least16_t[44093]
    type atomic_int_least32_t[44099]
    type atomic_int_least64_t[44105]
    type atomic_uint_least8_t[44111]
    type atomic_uint_least16_t[44117]
    type atomic_uint_least32_t[44123]
    type atomic_uint_least64_t[44129]
    type atomic__real64[44135]
    type atomic__real32[44141]
    {
      unknown tmp[44264] "expr temp" "maybe param" "maybe type" "temp"
      (44266 'move' tmp[44264] T[44072])
      unknown call_tmp[606034] "expr temp" "maybe param" "maybe type" "temp"
      (606037 'move' call_tmp[606034](44268 call == tmp[44264] bool[10]))
      unknown call_tmp[606039] "expr temp" "maybe param" "maybe type" "temp"
      (606042 'move' call_tmp[606039](44271 call _cond_test call_tmp[606034]))
      if call_tmp[606039]
      {
        (505626 'move' ret[505621](505625 'deref' atomic_bool[44080]))
        gotoReturn _end_externT[505619] _end_externT[505619]
      }
      {
        unknown call_tmp[606044] "expr temp" "maybe param" "maybe type" "temp"
        (606047 'move' call_tmp[606044](44156 call int(64)[13] 8))
        unknown call_tmp[606049] "expr temp" "maybe param" "maybe type" "temp"
        (606052 'move' call_tmp[606049](44274 call == tmp[44264] call_tmp[606044]))
        unknown call_tmp[606054] "expr temp" "maybe param" "maybe type" "temp"
        (606057 'move' call_tmp[606054](44277 call _cond_test call_tmp[606049]))
        if call_tmp[606054]
        {
          (505631 'move' ret[505621](505630 'deref' atomic_int_least8_t[44087]))
          gotoReturn _end_externT[505619] _end_externT[505619]
        }
        {
          unknown call_tmp[606059] "expr temp" "maybe param" "maybe type" "temp"
          (606062 'move' call_tmp[606059](44167 call int(64)[13] 16))
          unknown call_tmp[606064] "expr temp" "maybe param" "maybe type" "temp"
          (606067 'move' call_tmp[606064](44281 call == tmp[44264] call_tmp[606059]))
          unknown call_tmp[606069] "expr temp" "maybe param" "maybe type" "temp"
          (606072 'move' call_tmp[606069](44284 call _cond_test call_tmp[606064]))
          if call_tmp[606069]
          {
            (505636 'move' ret[505621](505635 'deref' atomic_int_least16_t[44093]))
            gotoReturn _end_externT[505619] _end_externT[505619]
          }
          {
            unknown call_tmp[606074] "expr temp" "maybe param" "maybe type" "temp"
            (606077 'move' call_tmp[606074](44178 call int(64)[13] 32))
            unknown call_tmp[606079] "expr temp" "maybe param" "maybe type" "temp"
            (606082 'move' call_tmp[606079](44288 call == tmp[44264] call_tmp[606074]))
            unknown call_tmp[606084] "expr temp" "maybe param" "maybe type" "temp"
            (606087 'move' call_tmp[606084](44291 call _cond_test call_tmp[606079]))
            if call_tmp[606084]
            {
              (505641 'move' ret[505621](505640 'deref' atomic_int_least32_t[44099]))
              gotoReturn _end_externT[505619] _end_externT[505619]
            }
            {
              unknown call_tmp[606089] "expr temp" "maybe param" "maybe type" "temp"
              (606092 'move' call_tmp[606089](44189 call int(64)[13] 64))
              unknown call_tmp[606094] "expr temp" "maybe param" "maybe type" "temp"
              (606097 'move' call_tmp[606094](44295 call == tmp[44264] call_tmp[606089]))
              unknown call_tmp[606099] "expr temp" "maybe param" "maybe type" "temp"
              (606102 'move' call_tmp[606099](44298 call _cond_test call_tmp[606094]))
              if call_tmp[606099]
              {
                (505646 'move' ret[505621](505645 'deref' atomic_int_least64_t[44105]))
                gotoReturn _end_externT[505619] _end_externT[505619]
              }
              {
                unknown call_tmp[606104] "expr temp" "maybe param" "maybe type" "temp"
                (606107 'move' call_tmp[606104](44200 call uint(64)[115] 8))
                unknown call_tmp[606109] "expr temp" "maybe param" "maybe type" "temp"
                (606112 'move' call_tmp[606109](44302 call == tmp[44264] call_tmp[606104]))
                unknown call_tmp[606114] "expr temp" "maybe param" "maybe type" "temp"
                (606117 'move' call_tmp[606114](44305 call _cond_test call_tmp[606109]))
                if call_tmp[606114]
                {
                  (505651 'move' ret[505621](505650 'deref' atomic_uint_least8_t[44111]))
                  gotoReturn _end_externT[505619] _end_externT[505619]
                }
                {
                  unknown call_tmp[606119] "expr temp" "maybe param" "maybe type" "temp"
                  (606122 'move' call_tmp[606119](44211 call uint(64)[115] 16))
                  unknown call_tmp[606124] "expr temp" "maybe param" "maybe type" "temp"
                  (606127 'move' call_tmp[606124](44309 call == tmp[44264] call_tmp[606119]))
                  unknown call_tmp[606129] "expr temp" "maybe param" "maybe type" "temp"
                  (606132 'move' call_tmp[606129](44312 call _cond_test call_tmp[606124]))
                  if call_tmp[606129]
                  {
                    (505656 'move' ret[505621](505655 'deref' atomic_uint_least16_t[44117]))
                    gotoReturn _end_externT[505619] _end_externT[505619]
                  }
                  {
                    unknown call_tmp[606134] "expr temp" "maybe param" "maybe type" "temp"
                    (606137 'move' call_tmp[606134](44222 call uint(64)[115] 32))
                    unknown call_tmp[606139] "expr temp" "maybe param" "maybe type" "temp"
                    (606142 'move' call_tmp[606139](44316 call == tmp[44264] call_tmp[606134]))
                    unknown call_tmp[606144] "expr temp" "maybe param" "maybe type" "temp"
                    (606147 'move' call_tmp[606144](44319 call _cond_test call_tmp[606139]))
                    if call_tmp[606144]
                    {
                      (505661 'move' ret[505621](505660 'deref' atomic_uint_least32_t[44123]))
                      gotoReturn _end_externT[505619] _end_externT[505619]
                    }
                    {
                      unknown call_tmp[606149] "expr temp" "maybe param" "maybe type" "temp"
                      (606152 'move' call_tmp[606149](44233 call uint(64)[115] 64))
                      unknown call_tmp[606154] "expr temp" "maybe param" "maybe type" "temp"
                      (606157 'move' call_tmp[606154](44323 call == tmp[44264] call_tmp[606149]))
                      unknown call_tmp[606159] "expr temp" "maybe param" "maybe type" "temp"
                      (606162 'move' call_tmp[606159](44326 call _cond_test call_tmp[606154]))
                      if call_tmp[606159]
                      {
                        (505666 'move' ret[505621](505665 'deref' atomic_uint_least64_t[44129]))
                        gotoReturn _end_externT[505619] _end_externT[505619]
                      }
                      {
                        unknown call_tmp[606164] "expr temp" "maybe param" "maybe type" "temp"
                        (606167 'move' call_tmp[606164](44244 call real(64)[16] 32))
                        unknown call_tmp[606169] "expr temp" "maybe param" "maybe type" "temp"
                        (606172 'move' call_tmp[606169](44330 call == tmp[44264] call_tmp[606164]))
                        unknown call_tmp[606174] "expr temp" "maybe param" "maybe type" "temp"
                        (606177 'move' call_tmp[606174](44333 call _cond_test call_tmp[606169]))
                        if call_tmp[606174]
                        {
                          (505671 'move' ret[505621](505670 'deref' atomic__real32[44141]))
                          gotoReturn _end_externT[505619] _end_externT[505619]
                        }
                        {
                          unknown call_tmp[606179] "expr temp" "maybe param" "maybe type" "temp"
                          (606182 'move' call_tmp[606179](44255 call real(64)[16] 64))
                          unknown call_tmp[606184] "expr temp" "maybe param" "maybe type" "temp"
                          (606187 'move' call_tmp[606184](44337 call == tmp[44264] call_tmp[606179]))
                          unknown call_tmp[606189] "expr temp" "maybe param" "maybe type" "temp"
                          (606192 'move' call_tmp[606189](44340 call _cond_test call_tmp[606184]))
                          if call_tmp[606189]
                          {
                            (505676 'move' ret[505621](505675 'deref' atomic__real64[44135]))
                            gotoReturn _end_externT[505619] _end_externT[505619]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    label _end_externT[505619]
    (505623 return ret[505621])
  }
  function externTString[44351](arg T[44349]:_any[178](?)) param : _unknown[51] "private"
  {
    unknown ret[505682] "RVV" "param" "temp"
    unknown call_tmp[606194] "expr temp" "maybe param" "maybe type" "temp"
    (606197 'move' call_tmp[606194](44355 call == T[44349] bool[10]))
    unknown call_tmp[606199] "expr temp" "maybe param" "maybe type" "temp"
    (606202 'move' call_tmp[606199](44376 call _cond_test call_tmp[606194]))
    if call_tmp[606199]
    {
      (505687 'move' ret[505682](505686 'deref' "bool"))
      gotoReturn _end_externTString[505680] _end_externTString[505680]
    }
    unknown call_tmp[606204] "expr temp" "maybe param" "maybe type" "temp"
    (606207 'move' call_tmp[606204](44385 call isInt T[44349]))
    unknown call_tmp[606209] "expr temp" "maybe param" "maybe type" "temp"
    (606212 'move' call_tmp[606209](44433 call _cond_test call_tmp[606204]))
    if call_tmp[606209]
    {
      unknown call_tmp[606214] "expr temp" "maybe param" "maybe type" "temp"
      (606217 'move' call_tmp[606214](44406 call numBits T[44349]))
      unknown call_tmp[606219] "expr temp" "maybe param" "maybe type" "temp"
      (606222 'move' call_tmp[606219](44408 call _cast string[26] call_tmp[606214]))
      unknown call_tmp[606224] "expr temp" "maybe param" "maybe type" "temp"
      (606227 'move' call_tmp[606224](44410 call + "int_least" call_tmp[606219]))
      unknown call_tmp[606229] "expr temp" "maybe param" "maybe type" "temp"
      (606232 'move' call_tmp[606229](44429 call + call_tmp[606224] "_t"))
      (505692 'move' ret[505682](505691 'deref' call_tmp[606229]))
      gotoReturn _end_externTString[505680] _end_externTString[505680]
    }
    unknown call_tmp[606234] "expr temp" "maybe param" "maybe type" "temp"
    (606237 'move' call_tmp[606234](44441 call isUint T[44349]))
    unknown call_tmp[606239] "expr temp" "maybe param" "maybe type" "temp"
    (606242 'move' call_tmp[606239](44473 call _cond_test call_tmp[606234]))
    if call_tmp[606239]
    {
      unknown call_tmp[606244] "expr temp" "maybe param" "maybe type" "temp"
      (606247 'move' call_tmp[606244](44462 call numBits T[44349]))
      unknown call_tmp[606249] "expr temp" "maybe param" "maybe type" "temp"
      (606252 'move' call_tmp[606249](44464 call _cast string[26] call_tmp[606244]))
      unknown call_tmp[606254] "expr temp" "maybe param" "maybe type" "temp"
      (606257 'move' call_tmp[606254](44466 call + "uint_least" call_tmp[606249]))
      unknown call_tmp[606259] "expr temp" "maybe param" "maybe type" "temp"
      (606262 'move' call_tmp[606259](44469 call + call_tmp[606254] "_t"))
      (505697 'move' ret[505682](505696 'deref' call_tmp[606259]))
      gotoReturn _end_externTString[505680] _end_externTString[505680]
    }
    unknown call_tmp[606264] "expr temp" "maybe param" "maybe type" "temp"
    (606267 'move' call_tmp[606264](44481 call isReal T[44349]))
    unknown call_tmp[606269] "expr temp" "maybe param" "maybe type" "temp"
    (606272 'move' call_tmp[606269](44510 call _cond_test call_tmp[606264]))
    if call_tmp[606269]
    {
      unknown call_tmp[606274] "expr temp" "maybe param" "maybe type" "temp"
      (606277 'move' call_tmp[606274](44502 call numBits T[44349]))
      unknown call_tmp[606279] "expr temp" "maybe param" "maybe type" "temp"
      (606282 'move' call_tmp[606279](44504 call _cast string[26] call_tmp[606274]))
      unknown call_tmp[606284] "expr temp" "maybe param" "maybe type" "temp"
      (606287 'move' call_tmp[606284](44506 call + "_real" call_tmp[606279]))
      (505702 'move' ret[505682](505701 'deref' call_tmp[606284]))
      gotoReturn _end_externTString[505680] _end_externTString[505680]
    }
    label _end_externTString[505680]
    (505684 return ret[505682])
  }
  function externFunc[44523](param arg s[44520]:string[26], arg T[44525]:_any[178](?), param arg explicit[44528] :
  1 =
  1) param : _unknown[51] "private"
  {
    unknown ret[505708] "RVV" "param" "temp"
    unknown call_tmp[606289] "expr temp" "maybe param" "maybe type" "temp"
    (606292 'move' call_tmp[606289](44610 call _cond_test explicit[44528]))
    if call_tmp[606289]
    {
      unknown call_tmp[606294] "expr temp" "maybe param" "maybe type" "temp"
      (606297 'move' call_tmp[606294](44550 call + "atomic_" s[44520]))
      unknown call_tmp[606299] "expr temp" "maybe param" "maybe type" "temp"
      (606302 'move' call_tmp[606299](44569 call + call_tmp[606294] "_explicit_"))
      unknown call_tmp[606304] "expr temp" "maybe param" "maybe type" "temp"
      (606307 'move' call_tmp[606304](44574 call externTString T[44525]))
      unknown call_tmp[606309] "expr temp" "maybe param" "maybe type" "temp"
      (606312 'move' call_tmp[606309](44575 call + call_tmp[606299] call_tmp[606304]))
      (505713 'move' ret[505708](505712 'deref' call_tmp[606309]))
      gotoReturn _end_externFunc[505706] _end_externFunc[505706]
    }
    {
      unknown call_tmp[606314] "expr temp" "maybe param" "maybe type" "temp"
      (606317 'move' call_tmp[606314](44581 call + "atomic_" s[44520]))
      unknown call_tmp[606319] "expr temp" "maybe param" "maybe type" "temp"
      (606322 'move' call_tmp[606319](44600 call + call_tmp[606314] "_"))
      unknown call_tmp[606324] "expr temp" "maybe param" "maybe type" "temp"
      (606327 'move' call_tmp[606324](44605 call externTString T[44525]))
      unknown call_tmp[606329] "expr temp" "maybe param" "maybe type" "temp"
      (606332 'move' call_tmp[606329](44606 call + call_tmp[606319] call_tmp[606324]))
      (505718 'move' ret[505708](505717 'deref' call_tmp[606329]))
      gotoReturn _end_externFunc[505706] _end_externFunc[505706]
    }
    label _end_externFunc[505706]
    (505710 return ret[505708])
  }
  function chpl__processorAtomicType[44623](arg T[44621]:_any[178](?)) type : _unknown[51] "no doc"
  {
    unknown ret[505724] "RVV" "temp" "type variable"
    unknown call_tmp[606334] "expr temp" "maybe param" "maybe type" "temp"
    (606337 'move' call_tmp[606334](44627 call == T[44621] bool[10]))
    unknown call_tmp[606339] "expr temp" "maybe param" "maybe type" "temp"
    (606342 'move' call_tmp[606339](44675 call _cond_test call_tmp[606334]))
    if call_tmp[606339]
    {
      (505729 'move' ret[505724](505728 'deref' AtomicBool[45877]))
      gotoReturn _end_chpl__processorAtomicType[505722] _end_chpl__processorAtomicType[505722]
    }
    {
      unknown call_tmp[606344] "expr temp" "maybe param" "maybe type" "temp"
      (606347 'move' call_tmp[606344](44635 call isSupported T[44621]))
      unknown call_tmp[606349] "expr temp" "maybe param" "maybe type" "temp"
      (606352 'move' call_tmp[606349](44669 call _cond_test call_tmp[606344]))
      if call_tmp[606349]
      {
        unknown call_tmp[606354] "expr temp" "maybe param" "maybe type" "temp"
        (606357 'move' call_tmp[606354](44639 call AtomicT[48080](?) T[44621]))
        (505734 'move' ret[505724](505733 'deref' call_tmp[606354]))
        gotoReturn _end_chpl__processorAtomicType[505722] _end_chpl__processorAtomicType[505722]
      }
      {
        unknown call_tmp[606359] "expr temp" "maybe param" "maybe type" "temp"
        (606362 'move' call_tmp[606359](44662 call _cast string[26] T[44621]))
        unknown call_tmp[606364] "expr temp" "maybe param" "maybe type" "temp"
        (606367 'move' call_tmp[606364](44664 call + "Unsupported atomic type: " call_tmp[606359]))
        (44667 call compilerError call_tmp[606364])
      }
    }
    label _end_chpl__processorAtomicType[505722]
    (505726 return ret[505724])
  }
  function chpl__atomicType[44688](arg T[44686]:_any[178](?)) type : _unknown[51] "no doc"
  {
    unknown ret[505740] "RVV" "temp" "type variable"
    unknown call_tmp[606369] "expr temp" "maybe param" "maybe type" "temp"
    (606372 'move' call_tmp[606369](44692 call == CHPL_NETWORK_ATOMICS[21520] "none"))
    unknown call_tmp[606374] "expr temp" "maybe param" "maybe type" "temp"
    (606377 'move' call_tmp[606374](44708 call _cond_test call_tmp[606369]))
    if call_tmp[606374]
    {
      unknown call_tmp[606379] "expr temp" "maybe param" "maybe type" "temp"
      (606382 'move' call_tmp[606379](44697 call chpl__processorAtomicType T[44686]))
      (505745 'move' ret[505740](505744 'deref' call_tmp[606379]))
      gotoReturn _end_chpl__atomicType[505738] _end_chpl__atomicType[505738]
    }
    {
      unknown call_tmp[606384] "expr temp" "maybe param" "maybe type" "temp"
      (606387 'move' call_tmp[606384](44704 call chpl__networkAtomicType T[44686]))
      (505750 'move' ret[505740](505749 'deref' call_tmp[606384]))
      gotoReturn _end_chpl__atomicType[505738] _end_chpl__atomicType[505738]
    }
    label _end_chpl__atomicType[505738]
    (505742 return ret[505740])
  }
  function AtomicBool[45877].init_helper[44730](arg _mt[45881]:_MT[238], arg this[45879]:AtomicBool[45877], arg value[44727]:bool[10]) : _unknown[51] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    function atomic_init[44762](ref arg obj[44759] :
    (44758 call externT bool[10]), arg value[44765]:bool[10], arg _chpl_cname[44773]:string[26] =
    (44752 call externFunc "init" bool[10](explicit = 0))) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "fn synchronization free" "no return value for void"
    {
      unknown ret[505756] "RVV" "temp"
      (505758 return ret[505756])
    }
    { scopeless type
      void[4]
    }
    unknown call_tmp[606391] "expr temp" "maybe param" "maybe type" "temp"
    (606394 'move' call_tmp[606391](370916 call _v _mt[243] this[45879]))
    (44782 call atomic_init call_tmp[606391] value[44727])
    (505760 return _void[55])
  }
  function AtomicBool[45877].init[44788](arg _mt[45885]:_MT[238], ref arg this[45883]:AtomicBool[45877]) : void[4] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[454597] "temp"
    unknown call_tmp[606396] "expr temp" "maybe param" "maybe type" "temp"
    (606399 'move' call_tmp[606396](454600 call externT bool[10]))
    (454602 'default init var' tmp[454597] call_tmp[606396])
    (454604 '.=' this[45883] c"_v" tmp[454597])
    (474311 'end of statement')
    const default[44799] "dead at end of block" "const" "insert auto destroy"
    (540640 'default init var' default[44799] bool[10])
    (44802 'end of statement')
    (44806 call(370923 call (partial) init_helper _mt[243] this[45883]) default[44799])
    (474312 'end of statement' default[44799])
    (505762 return _void[55])
  }
  function AtomicBool[45877].init=[44816](arg _mt[45889]:_MT[238], ref arg this[45887]:AtomicBool[45877], arg other[44813]:AtomicBool[45877]) : void[4] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[454608] "temp"
    unknown call_tmp[606403] "expr temp" "maybe param" "maybe type" "temp"
    (606406 'move' call_tmp[606403](454611 call externT bool[10]))
    (454613 'default init var' tmp[454608] call_tmp[606403])
    (454615 '.=' this[45887] c"_v" tmp[454608])
    (474314 'end of statement')
    unknown call_tmp[606412] "expr temp" "maybe param" "maybe type" "temp"
    (606415 'move' call_tmp[606412](44832 call(44828 call (partial) read _mt[243] other[44813])))
    (44834 call(370929 call (partial) init_helper _mt[243] this[45887]) call_tmp[606412])
    (505764 return _void[55])
  }
  function AtomicBool[45877].init=[44844](arg _mt[45893]:_MT[238], ref arg this[45891]:AtomicBool[45877], arg other[44841]:bool[10]) : void[4] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[454619] "temp"
    unknown call_tmp[606417] "expr temp" "maybe param" "maybe type" "temp"
    (606420 'move' call_tmp[606417](454622 call externT bool[10]))
    (454624 'default init var' tmp[454619] call_tmp[606417])
    (454626 '.=' this[45891] c"_v" tmp[454619])
    (474316 'end of statement')
    (44857 call(370933 call (partial) init_helper _mt[243] this[45891]) other[44841])
    (505766 return _void[55])
  }
  function AtomicBool[45877].deinit[44863](arg _mt[45897]:_MT[238], arg this[45895]:AtomicBool[45877]) : _unknown[51] "atomic type" "destructor" "method" "primary method" "no doc" "no return value for void"
  {
    function atomic_destroy[44897](ref arg obj[44894] :
    (44893 call externT bool[10]), arg _chpl_cname[44904]:string[26] =
    (44887 call externFunc "destroy" bool[10](explicit = 0))) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "fn synchronization free" "no return value for void"
    {
      unknown ret[505770] "RVV" "temp"
      (505772 return ret[505770])
    }
    { scopeless type
      void[4]
    }
    const tmp[44918] "const" "temp"
    unknown call_tmp[606424] "expr temp" "maybe param" "maybe type" "temp"
    (606427 'move' call_tmp[606424](44915 '_wide_get_locale' this[45895]))
    (44920 'move' tmp[44918](44916 'deref' call_tmp[606424]))
    {
      unknown call_tmp[606431] "expr temp" "maybe param" "maybe type" "temp"
      (606434 'move' call_tmp[606431](370940 call _v _mt[243] this[45895]))
      (44913 call atomic_destroy call_tmp[606431])
      (44923 'on block' 0 tmp[44918])
    }
    (505774 return _void[55])
  }
  function AtomicBool[45877].read[44939](arg _mt[45901]:_MT[238], const arg this[45899]:AtomicBool[45877], param arg order[44935]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505784] "RVV" "temp"
    function atomic_load[44972](const  ref arg obj[44969] :
    (44968 call externT bool[10]), arg order[44975]:memory_order[186653], arg _chpl_cname[44983]:string[26] =
    (44962 call externFunc "load" bool[10])) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505778] "RVV" "temp"
      (505780 return ret[505778])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[44989] "dead at end of block" "insert auto destroy"
    (540642 'default init var' ret[44989] bool[10])
    (44992 'end of statement')
    const tmp[45009] "const" "temp"
    unknown call_tmp[606436] "expr temp" "maybe param" "maybe type" "temp"
    (606439 'move' call_tmp[606436](45006 '_wide_get_locale' this[45899]))
    (45011 'move' tmp[45009](45007 'deref' call_tmp[606436]))
    {
      unknown call_tmp[606443] "expr temp" "maybe param" "maybe type" "temp"
      (606446 'move' call_tmp[606443](370949 call _v _mt[243] this[45899]))
      unknown call_tmp[606448] "expr temp" "maybe param" "maybe type" "temp"
      (606451 'move' call_tmp[606448](45001 call c_memory_order order[44935]))
      unknown call_tmp[606453] "expr temp" "maybe param" "maybe type" "temp"
      (606456 'move' call_tmp[606453](45002 call atomic_load call_tmp[606443] call_tmp[606448]))
      (45003 call = ret[44989] call_tmp[606453])
      (474319 'end of statement' ret[44989])
      (45014 'on block' 0 tmp[45009])
    }
    (505790 'move' ret[505784](505789 'coerce' ret[44989] bool[10]))
    gotoReturn _end_read[505782] _end_read[505782]
    (474321 'end of statement' ret[44989])
    label _end_read[505782]
    (505786 return ret[505784])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45877].write[45029](arg _mt[45905]:_MT[238], arg this[45903]:AtomicBool[45877], arg value[45026]:bool[10], param arg order[45036]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[505802] "RVV" "temp"
    function atomic_store[45071](ref arg obj[45068] :
    (45067 call externT bool[10]), arg value[45074]:bool[10], arg order[45078]:memory_order[186653], arg _chpl_cname[45086]:string[26] =
    (45061 call externFunc "store" bool[10])) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505796] "RVV" "temp"
      (505798 return ret[505796])
    }
    { scopeless type
      void[4]
    }
    const tmp[45105] "const" "temp"
    unknown call_tmp[606458] "expr temp" "maybe param" "maybe type" "temp"
    (606461 'move' call_tmp[606458](45102 '_wide_get_locale' this[45903]))
    (45107 'move' tmp[45105](45103 'deref' call_tmp[606458]))
    {
      unknown call_tmp[606465] "expr temp" "maybe param" "maybe type" "temp"
      (606468 'move' call_tmp[606465](370959 call _v _mt[243] this[45903]))
      unknown call_tmp[606470] "expr temp" "maybe param" "maybe type" "temp"
      (606473 'move' call_tmp[606470](45099 call c_memory_order order[45036]))
      (45100 call atomic_store call_tmp[606465] value[45026] call_tmp[606470])
      (45110 'on block' 0 tmp[45105])
    }
    (505804 return ret[505802])
  }
  { scopeless type
    void[4]
  }
  function AtomicBool[45877].exchange[45122](arg _mt[45909]:_MT[238], arg this[45907]:AtomicBool[45877], arg value[45119]:bool[10], param arg order[45129]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505814] "RVV" "temp"
    function atomic_exchange[45164](ref arg obj[45161] :
    (45160 call externT bool[10]), arg value[45167]:bool[10], arg order[45171]:memory_order[186653], arg _chpl_cname[45179]:string[26] =
    (45154 call externFunc "exchange" bool[10])) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505808] "RVV" "temp"
      (505810 return ret[505808])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[45185] "dead at end of block" "insert auto destroy"
    (540644 'default init var' ret[45185] bool[10])
    (45188 'end of statement')
    const tmp[45206] "const" "temp"
    unknown call_tmp[606475] "expr temp" "maybe param" "maybe type" "temp"
    (606478 'move' call_tmp[606475](45203 '_wide_get_locale' this[45907]))
    (45208 'move' tmp[45206](45204 'deref' call_tmp[606475]))
    {
      unknown call_tmp[606482] "expr temp" "maybe param" "maybe type" "temp"
      (606485 'move' call_tmp[606482](370970 call _v _mt[243] this[45907]))
      unknown call_tmp[606487] "expr temp" "maybe param" "maybe type" "temp"
      (606490 'move' call_tmp[606487](45198 call c_memory_order order[45129]))
      unknown call_tmp[606492] "expr temp" "maybe param" "maybe type" "temp"
      (606495 'move' call_tmp[606492](45199 call atomic_exchange call_tmp[606482] value[45119] call_tmp[606487]))
      (45200 call = ret[45185] call_tmp[606492])
      (474324 'end of statement' ret[45185])
      (45211 'on block' 0 tmp[45206])
    }
    (505820 'move' ret[505814](505819 'coerce' ret[45185] bool[10]))
    gotoReturn _end_exchange[505812] _end_exchange[505812]
    (474326 'end of statement' ret[45185])
    label _end_exchange[505812]
    (505816 return ret[505814])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45877].compareExchange[45226](arg _mt[45913]:_MT[238], arg this[45911]:AtomicBool[45877], ref arg expected[45223]:bool[10], arg desired[45229]:bool[10], param arg order[45237]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505826] "RVV" "temp"
    unknown call_tmp[606499] "expr temp" "maybe param" "maybe type" "temp"
    (606502 'move' call_tmp[606499](45255 call readableOrder order[45237]))
    unknown call_tmp[606504] "expr temp" "maybe param" "maybe type" "temp"
    (606507 'move' call_tmp[606504](45256 call(45245 call (partial) compareExchange _mt[243] this[45911]) expected[45223] desired[45229] order[45237] call_tmp[606499]))
    (505832 'move' ret[505826](505831 'coerce' call_tmp[606504] bool[10]))
    (505828 return ret[505826])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45877].compareExchange[45269](arg _mt[45917]:_MT[238], arg this[45915]:AtomicBool[45877], ref arg expected[45266]:bool[10], arg desired[45272]:bool[10], param arg success[45276]:memoryOrder[187012], param arg failure[45280]:memoryOrder[187012]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505842] "RVV" "temp"
    function atomic_compare_exchange_strong[45314](ref arg obj[45311] :
    (45310 call externT bool[10]), ref arg expected[45317]:bool[10], arg desired[45321]:bool[10], arg succ[45325]:memory_order[186653], arg fail[45329]:memory_order[186653], arg _chpl_cname[45337]:string[26] =
    (45304 call externFunc "compare_exchange_strong" bool[10])) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505836] "RVV" "temp"
      (505838 return ret[505836])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[45343] "dead at end of block" "insert auto destroy"
    (540646 'default init var' ret[45343] bool[10])
    (45346 'end of statement')
    const tmp[45388] "const" "temp"
    unknown call_tmp[606509] "expr temp" "maybe param" "maybe type" "temp"
    (606512 'move' call_tmp[606509](45385 '_wide_get_locale' this[45915]))
    (45390 'move' tmp[45388](45386 'deref' call_tmp[606509]))
    {
      {
        unknown localizedExpected[45349] "dead at end of block" "insert auto destroy"
        (540648 'init var' localizedExpected[45349] expected[45266])
        (45352 'end of statement')
        unknown call_tmp[606516] "expr temp" "maybe param" "maybe type" "temp"
        (606519 'move' call_tmp[606516](370990 call _v _mt[243] this[45915]))
        unknown call_tmp[606521] "expr temp" "maybe param" "maybe type" "temp"
        (606524 'move' call_tmp[606521](45363 call c_memory_order success[45276]))
        unknown call_tmp[606526] "expr temp" "maybe param" "maybe type" "temp"
        (606529 'move' call_tmp[606526](45367 call c_memory_order failure[45280]))
        unknown call_tmp[606531] "expr temp" "maybe param" "maybe type" "temp"
        (606534 'move' call_tmp[606531](45368 call atomic_compare_exchange_strong call_tmp[606516] localizedExpected[45349] desired[45272] call_tmp[606521] call_tmp[606526]))
        (45369 call = ret[45343] call_tmp[606531])
        (474329 'end of statement' ret[45343] localizedExpected[45349])
        unknown call_tmp[606536] "expr temp" "maybe param" "maybe type" "temp"
        (606539 'move' call_tmp[606536](45373 call ! ret[45343]))
        unknown call_tmp[606541] "expr temp" "maybe param" "maybe type" "temp"
        (606544 'move' call_tmp[606541](45380 call _cond_test call_tmp[606536]))
        if call_tmp[606541]
        {
          (45377 call = expected[45266] localizedExpected[45349])
          (474332 'end of statement' localizedExpected[45349])
        }
      }
      (45393 'on block' 0 tmp[45388])
    }
    (505848 'move' ret[505842](505847 'coerce' ret[45343] bool[10]))
    gotoReturn _end_compareExchange[505840] _end_compareExchange[505840]
    (474334 'end of statement' ret[45343])
    label _end_compareExchange[505840]
    (505844 return ret[505842])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45877].compareExchangeWeak[45408](arg _mt[45921]:_MT[238], arg this[45919]:AtomicBool[45877], ref arg expected[45405]:bool[10], arg desired[45411]:bool[10], param arg order[45419]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505854] "RVV" "temp"
    unknown call_tmp[606548] "expr temp" "maybe param" "maybe type" "temp"
    (606551 'move' call_tmp[606548](45437 call readableOrder order[45419]))
    unknown call_tmp[606553] "expr temp" "maybe param" "maybe type" "temp"
    (606556 'move' call_tmp[606553](45438 call(45427 call (partial) compareExchangeWeak _mt[243] this[45919]) expected[45405] desired[45411] order[45419] call_tmp[606548]))
    (505860 'move' ret[505854](505859 'coerce' call_tmp[606553] bool[10]))
    (505856 return ret[505854])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45877].compareExchangeWeak[45451](arg _mt[45925]:_MT[238], arg this[45923]:AtomicBool[45877], ref arg expected[45448]:bool[10], arg desired[45454]:bool[10], param arg success[45458]:memoryOrder[187012], param arg failure[45462]:memoryOrder[187012]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505870] "RVV" "temp"
    function atomic_compare_exchange_weak[45495](ref arg obj[45492] :
    (45491 call externT bool[10]), ref arg expected[45498]:bool[10], arg desired[45502]:bool[10], arg succ[45506]:memory_order[186653], arg fail[45510]:memory_order[186653], arg _chpl_cname[45518]:string[26] =
    (45485 call externFunc "compare_exchange_weak" bool[10])) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505864] "RVV" "temp"
      (505866 return ret[505864])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[45524] "dead at end of block" "insert auto destroy"
    (540650 'default init var' ret[45524] bool[10])
    (45527 'end of statement')
    const tmp[45569] "const" "temp"
    unknown call_tmp[606558] "expr temp" "maybe param" "maybe type" "temp"
    (606561 'move' call_tmp[606558](45566 '_wide_get_locale' this[45923]))
    (45571 'move' tmp[45569](45567 'deref' call_tmp[606558]))
    {
      {
        unknown localizedExpected[45530] "dead at end of block" "insert auto destroy"
        (540652 'init var' localizedExpected[45530] expected[45448])
        (45533 'end of statement')
        unknown call_tmp[606565] "expr temp" "maybe param" "maybe type" "temp"
        (606568 'move' call_tmp[606565](371015 call _v _mt[243] this[45923]))
        unknown call_tmp[606570] "expr temp" "maybe param" "maybe type" "temp"
        (606573 'move' call_tmp[606570](45544 call c_memory_order success[45458]))
        unknown call_tmp[606575] "expr temp" "maybe param" "maybe type" "temp"
        (606578 'move' call_tmp[606575](45548 call c_memory_order failure[45462]))
        unknown call_tmp[606580] "expr temp" "maybe param" "maybe type" "temp"
        (606583 'move' call_tmp[606580](45549 call atomic_compare_exchange_weak call_tmp[606565] localizedExpected[45530] desired[45454] call_tmp[606570] call_tmp[606575]))
        (45550 call = ret[45524] call_tmp[606580])
        (474337 'end of statement' ret[45524] localizedExpected[45530])
        unknown call_tmp[606585] "expr temp" "maybe param" "maybe type" "temp"
        (606588 'move' call_tmp[606585](45554 call ! ret[45524]))
        unknown call_tmp[606590] "expr temp" "maybe param" "maybe type" "temp"
        (606593 'move' call_tmp[606590](45561 call _cond_test call_tmp[606585]))
        if call_tmp[606590]
        {
          (45558 call = expected[45448] localizedExpected[45530])
          (474340 'end of statement' localizedExpected[45530])
        }
      }
      (45574 'on block' 0 tmp[45569])
    }
    (505875 'move' ret[505870](505874 'deref' ret[45524]))
    gotoReturn _end_compareExchangeWeak[505868] _end_compareExchangeWeak[505868]
    (474342 'end of statement' ret[45524])
    label _end_compareExchangeWeak[505868]
    (505872 return ret[505870])
  }
  function AtomicBool[45877].compareAndSwap[45588](arg _mt[45929]:_MT[238], arg this[45927]:AtomicBool[45877], arg expected[45585]:bool[10], arg desired[45591]:bool[10], param arg order[45599]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505887] "RVV" "temp"
    function atomic_compare_exchange_strong[45618](ref arg obj[45615] :
    (45614 call externT bool[10]), ref arg expected[45621]:bool[10], arg desired[45625]:bool[10], arg succ[45629]:memory_order[186653], arg fail[45633]:memory_order[186653], arg _chpl_cname[45641]:string[26] =
    (45608 call externFunc "compare_exchange_strong" bool[10])) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505881] "RVV" "temp"
      (505883 return ret[505881])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[45647] "dead at end of block" "insert auto destroy"
    (540654 'default init var' ret[45647] bool[10])
    (45650 'end of statement')
    const tmp[45682] "const" "temp"
    unknown call_tmp[606595] "expr temp" "maybe param" "maybe type" "temp"
    (606598 'move' call_tmp[606595](45679 '_wide_get_locale' this[45927]))
    (45684 'move' tmp[45682](45680 'deref' call_tmp[606595]))
    {
      {
        unknown mutableExpected[45653] "dead at end of block" "insert auto destroy"
        (540656 'init var' mutableExpected[45653] expected[45585])
        (45656 'end of statement')
        unknown call_tmp[606602] "expr temp" "maybe param" "maybe type" "temp"
        (606605 'move' call_tmp[606602](371034 call _v _mt[243] this[45927]))
        unknown call_tmp[606607] "expr temp" "maybe param" "maybe type" "temp"
        (606610 'move' call_tmp[606607](45667 call c_memory_order order[45599]))
        unknown call_tmp[606612] "expr temp" "maybe param" "maybe type" "temp"
        (606615 'move' call_tmp[606612](45672 call readableOrder order[45599]))
        unknown call_tmp[606617] "expr temp" "maybe param" "maybe type" "temp"
        (606620 'move' call_tmp[606617](45674 call c_memory_order call_tmp[606612]))
        unknown call_tmp[606622] "expr temp" "maybe param" "maybe type" "temp"
        (606625 'move' call_tmp[606622](45675 call atomic_compare_exchange_strong call_tmp[606602] mutableExpected[45653] desired[45591] call_tmp[606607] call_tmp[606617]))
        (45676 call = ret[45647] call_tmp[606622])
        (474344 'end of statement' ret[45647] mutableExpected[45653])
      }
      (45687 'on block' 0 tmp[45682])
    }
    (505893 'move' ret[505887](505892 'coerce' ret[45647] bool[10]))
    gotoReturn _end_compareAndSwap[505885] _end_compareAndSwap[505885]
    (474347 'end of statement' ret[45647])
    label _end_compareAndSwap[505885]
    (505889 return ret[505887])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45877].testAndSet[45707](arg _mt[45933]:_MT[238], arg this[45931]:AtomicBool[45877], param arg order[45703]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505899] "RVV" "temp"
    unknown call_tmp[606629] "expr temp" "maybe param" "maybe type" "temp"
    (606632 'move' call_tmp[606629](45717 call(45711 call (partial) exchange _mt[243] this[45931]) 1 order[45703]))
    (505905 'move' ret[505899](505904 'coerce' call_tmp[606629] bool[10]))
    (505901 return ret[505899])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45877].clear[45735](arg _mt[45937]:_MT[238], arg this[45935]:AtomicBool[45877], param arg order[45731]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[505909] "RVV" "temp"
    (45745 call(45739 call (partial) write _mt[243] this[45935]) 0 order[45731])
    (505911 return ret[505909])
  }
  { scopeless type
    void[4]
  }
  function AtomicBool[45877].waitFor[45757](arg _mt[45941]:_MT[238], const arg this[45939]:AtomicBool[45877], arg value[45754]:bool[10], param arg order[45764]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[505915] "RVV" "temp"
    const tmp[45848] "const" "temp"
    unknown call_tmp[606636] "expr temp" "maybe param" "maybe type" "temp"
    (606639 'move' call_tmp[606636](45845 '_wide_get_locale' this[45939]))
    (45850 'move' tmp[45848](45846 'deref' call_tmp[606636]))
    {
      {
        {
          unknown tmp[45791] "temp"
          unknown call_tmp[606643] "expr temp" "maybe param" "maybe type" "temp"
          (606646 'move' call_tmp[606643](45826 call(45823 call (partial) read _mt[243] this[45939])(order = relaxed[187010])))
          unknown call_tmp[606648] "expr temp" "maybe param" "maybe type" "temp"
          (606651 'move' call_tmp[606648](45821 call != call_tmp[606643] value[45754]))
          (45833 'move' tmp[45791](45819 call _cond_test call_tmp[606648]))
          WhileDo[45796]
          {
            {
              (45788 call chpl_task_yield)
            }
            label _continueLabel[45794]
            unknown call_tmp[606655] "expr temp" "maybe param" "maybe type" "temp"
            (606658 'move' call_tmp[606655](45807 call(45804 call (partial) read _mt[243] this[45939])(order = relaxed[187010])))
            unknown call_tmp[606660] "expr temp" "maybe param" "maybe type" "temp"
            (606663 'move' call_tmp[606660](45802 call != call_tmp[606655] value[45754]))
            (45814 'move' tmp[45791](45800 call _cond_test call_tmp[606660]))
            tmp[45791]
          }
          label _breakLabel[45795]
        }
        unknown call_tmp[606665] "expr temp" "maybe param" "maybe type" "temp"
        (606668 'move' call_tmp[606665](45841 call c_memory_order order[45764]))
        (45843 call chpl_atomic_thread_fence call_tmp[606665])
      }
      (45853 'on block' 0 tmp[45848])
    }
    (505917 return ret[505915])
  }
  { scopeless type
    void[4]
  }
  function AtomicBool[45877].writeThis[45864](arg _mt[45945]:_MT[238], const arg this[45943]:AtomicBool[45877], arg x[45862]:_any[178](?)) : _unknown[51] throws "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[606672] "expr temp" "maybe param" "maybe type" "temp"
    (606675 'move' call_tmp[606672](45869 call(371053 call (partial) read _mt[243] this[45943])))
    (45870 call <~> x[45862] call_tmp[606672])
    (505919 return _void[55])
  }
  type AtomicBool[45877] unknown _v[44720] "no doc"(44719 call externT bool[10])
  function AtomicT[48080](?).init_helper[45966](arg _mt[48084]:_MT[238], arg this[48082]:AtomicT[48080](?), arg value[45963] :
  (371059 call T _mt[243] this[48082])) : _unknown[51] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    function atomic_init[45984](ref arg obj[45981] :
    unknown call_tmp[606681] "expr temp" "maybe param" "maybe type" "temp", arg value[45987] :
    (371074 call T _mt[243] this[48082]), arg _chpl_cname[45995]:string[26] =
    unknown call_tmp[606690] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "fn synchronization free" "no return value for void"
    {
      unknown ret[505923] "RVV" "temp"
      (505925 return ret[505923])
    }
    { scopeless type
      void[4]
    }
    unknown call_tmp[606697] "expr temp" "maybe param" "maybe type" "temp"
    (606700 'move' call_tmp[606697](371079 call _v _mt[243] this[48082]))
    (46004 call atomic_init call_tmp[606697] value[45963])
    (505927 return _void[55])
  }
  function AtomicT[48080](?).init[46012](arg _mt[48088]:_MT[238], ref arg this[48086]:AtomicT[48080](?), arg T[46010]:_any[178](?)) : void[4] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[454630] "temp" "type variable"
    (454632 'move' tmp[454630] T[46010])
    (454634 'init field' this[48086] c"T" tmp[454630])
    (474355 'end of statement')
    unknown tmp[454638] "temp"
    unknown call_tmp[606702] "expr temp" "maybe param" "maybe type" "temp"
    (606705 'move' call_tmp[606702](454649 '.v' this[48086] c"T"))
    unknown call_tmp[606707] "expr temp" "maybe param" "maybe type" "temp"
    (606710 'move' call_tmp[606707](454641 call externT call_tmp[606702]))
    (454643 'default init var' tmp[454638] call_tmp[606707])
    (454645 '.=' this[48086] c"_v" tmp[454638])
    (474356 'end of statement')
    const default[46033] "dead at end of block" "const" "insert auto destroy"
    (540658 'default init var' default[46033] T[46010])
    (46036 'end of statement')
    (46040 call(371086 call (partial) init_helper _mt[243] this[48086]) default[46033])
    (474357 'end of statement' default[46033])
    (505929 return _void[55])
  }
  function AtomicT[48080](?).init=[46051](arg _mt[48092]:_MT[238], ref arg this[48090]:AtomicT[48080](?), const  ref arg other[46048]:AtomicT[48080](?)) : void[4] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[454652] "temp" "type variable"
    (454654 'move' tmp[454652](46058 call T _mt[243] other[46048]))
    (454656 'init field' this[48090] c"T" tmp[454652])
    (474359 'end of statement')
    unknown tmp[454660] "temp"
    unknown call_tmp[606716] "expr temp" "maybe param" "maybe type" "temp"
    (606719 'move' call_tmp[606716](454671 '.v' this[48090] c"T"))
    unknown call_tmp[606721] "expr temp" "maybe param" "maybe type" "temp"
    (606724 'move' call_tmp[606721](454663 call externT call_tmp[606716]))
    (454665 'default init var' tmp[454660] call_tmp[606721])
    (454667 '.=' this[48090] c"_v" tmp[454660])
    (474360 'end of statement')
    unknown call_tmp[606730] "expr temp" "maybe param" "maybe type" "temp"
    (606733 'move' call_tmp[606730](46078 call(46074 call (partial) read _mt[243] other[46048])))
    (46080 call(371092 call (partial) init_helper _mt[243] this[48090]) call_tmp[606730])
    (505931 return _void[55])
  }
  function AtomicT[48080](?).init=[46094](arg _mt[48096]:_MT[238], ref arg this[48094]:AtomicT[48080](?), arg other[46091] :
  unknown call_tmp[606735] "expr temp" "maybe param" "maybe type" "temp" "type variable") : void[4] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[454674] "temp" "type variable"
    (454676 'move' tmp[454674](46101 'typeof' other[46091]))
    (454678 'init field' this[48094] c"T" tmp[454674])
    (474362 'end of statement')
    unknown tmp[454682] "temp"
    unknown call_tmp[606742] "expr temp" "maybe param" "maybe type" "temp"
    (606745 'move' call_tmp[606742](454693 '.v' this[48094] c"T"))
    unknown call_tmp[606747] "expr temp" "maybe param" "maybe type" "temp"
    (606750 'move' call_tmp[606747](454685 call externT call_tmp[606742]))
    (454687 'default init var' tmp[454682] call_tmp[606747])
    (454689 '.=' this[48094] c"_v" tmp[454682])
    (474363 'end of statement')
    (46116 call(371098 call (partial) init_helper _mt[243] this[48094]) other[46091])
    (505933 return _void[55])
  }
  function AtomicT[48080](?).deinit[46122](arg _mt[48100]:_MT[238], arg this[48098]:AtomicT[48080](?)) : _unknown[51] "atomic type" "destructor" "method" "primary method" "no doc" "no return value for void"
  {
    function atomic_destroy[46140](ref arg obj[46137] :
    unknown call_tmp[606756] "expr temp" "maybe param" "maybe type" "temp", arg _chpl_cname[46147]:string[26] =
    unknown call_tmp[606763] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "fn synchronization free" "no return value for void"
    {
      unknown ret[505937] "RVV" "temp"
      (505939 return ret[505937])
    }
    { scopeless type
      void[4]
    }
    const tmp[46161] "const" "temp"
    unknown call_tmp[606768] "expr temp" "maybe param" "maybe type" "temp"
    (606771 'move' call_tmp[606768](46158 '_wide_get_locale' this[48098]))
    (46163 'move' tmp[46161](46159 'deref' call_tmp[606768]))
    {
      unknown call_tmp[606775] "expr temp" "maybe param" "maybe type" "temp"
      (606778 'move' call_tmp[606775](371115 call _v _mt[243] this[48098]))
      (46156 call atomic_destroy call_tmp[606775])
      (46166 'on block' 0 tmp[46161])
    }
    (505941 return _void[55])
  }
  function AtomicT[48080](?).read[46182](arg _mt[48104]:_MT[238], const arg this[48102]:AtomicT[48080](?), param arg order[46178]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505951] "RVV" "temp"
    function atomic_load[46199](const  ref arg obj[46196] :
    unknown call_tmp[606782] "expr temp" "maybe param" "maybe type" "temp", arg order[46202]:memory_order[186653], arg _chpl_cname[46210]:string[26] =
    unknown call_tmp[606789] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505945] "RVV" "temp"
      (505947 return ret[505945])
    }
    { scopeless type
      (371137 call T _mt[243] this[48102])
    }
    unknown ret[46216] "dead at end of block" "insert auto destroy"
    unknown call_tmp[606798] "expr temp" "maybe param" "maybe type" "temp"
    (606801 'move' call_tmp[606798](371142 call T _mt[243] this[48102]))
    (540660 'default init var' ret[46216] call_tmp[606798])
    (46219 'end of statement')
    const tmp[46236] "const" "temp"
    unknown call_tmp[606803] "expr temp" "maybe param" "maybe type" "temp"
    (606806 'move' call_tmp[606803](46233 '_wide_get_locale' this[48102]))
    (46238 'move' tmp[46236](46234 'deref' call_tmp[606803]))
    {
      unknown call_tmp[606810] "expr temp" "maybe param" "maybe type" "temp"
      (606813 'move' call_tmp[606810](371149 call _v _mt[243] this[48102]))
      unknown call_tmp[606815] "expr temp" "maybe param" "maybe type" "temp"
      (606818 'move' call_tmp[606815](46228 call c_memory_order order[46178]))
      unknown call_tmp[606820] "expr temp" "maybe param" "maybe type" "temp"
      (606823 'move' call_tmp[606820](46229 call atomic_load call_tmp[606810] call_tmp[606815]))
      (46230 call = ret[46216] call_tmp[606820])
      (474366 'end of statement' ret[46216])
      (46241 'on block' 0 tmp[46236])
    }
    unknown call_tmp[606827] "expr temp" "maybe param" "maybe type" "temp"
    (606830 'move' call_tmp[606827](505956 call T _mt[243] this[48102]))
    (505960 'move' ret[505951](505959 'coerce' ret[46216] call_tmp[606827]))
    gotoReturn _end_read[505949] _end_read[505949]
    (474368 'end of statement' ret[46216])
    label _end_read[505949]
    (505953 return ret[505951])
  }
  { scopeless type
    (371121 call T _mt[243] this[48102])
  }
  function AtomicT[48080](?).write[46256](arg _mt[48108]:_MT[238], arg this[48106]:AtomicT[48080](?), arg value[46253] :
  (371156 call T _mt[243] this[48106]), param arg order[46263]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[505972] "RVV" "temp"
    function atomic_store[46282](ref arg obj[46279] :
    unknown call_tmp[606838] "expr temp" "maybe param" "maybe type" "temp", arg value[46285] :
    (371172 call T _mt[243] this[48106]), arg order[46289]:memory_order[186653], arg _chpl_cname[46297]:string[26] =
    unknown call_tmp[606847] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505966] "RVV" "temp"
      (505968 return ret[505966])
    }
    { scopeless type
      void[4]
    }
    const tmp[46316] "const" "temp"
    unknown call_tmp[606852] "expr temp" "maybe param" "maybe type" "temp"
    (606855 'move' call_tmp[606852](46313 '_wide_get_locale' this[48106]))
    (46318 'move' tmp[46316](46314 'deref' call_tmp[606852]))
    {
      unknown call_tmp[606859] "expr temp" "maybe param" "maybe type" "temp"
      (606862 'move' call_tmp[606859](371179 call _v _mt[243] this[48106]))
      unknown call_tmp[606864] "expr temp" "maybe param" "maybe type" "temp"
      (606867 'move' call_tmp[606864](46310 call c_memory_order order[46263]))
      (46311 call atomic_store call_tmp[606859] value[46253] call_tmp[606864])
      (46321 'on block' 0 tmp[46316])
    }
    (505974 return ret[505972])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48080](?).exchange[46333](arg _mt[48112]:_MT[238], arg this[48110]:AtomicT[48080](?), arg value[46330] :
  (371186 call T _mt[243] this[48110]), param arg order[46340]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505984] "RVV" "temp"
    function atomic_exchange[46359](ref arg obj[46356] :
    unknown call_tmp[606873] "expr temp" "maybe param" "maybe type" "temp", arg value[46362] :
    (371207 call T _mt[243] this[48110]), arg order[46366]:memory_order[186653], arg _chpl_cname[46374]:string[26] =
    unknown call_tmp[606882] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505978] "RVV" "temp"
      (505980 return ret[505978])
    }
    { scopeless type
      (371213 call T _mt[243] this[48110])
    }
    unknown ret[46380] "dead at end of block" "insert auto destroy"
    unknown call_tmp[606891] "expr temp" "maybe param" "maybe type" "temp"
    (606894 'move' call_tmp[606891](371218 call T _mt[243] this[48110]))
    (540662 'default init var' ret[46380] call_tmp[606891])
    (46383 'end of statement')
    const tmp[46401] "const" "temp"
    unknown call_tmp[606896] "expr temp" "maybe param" "maybe type" "temp"
    (606899 'move' call_tmp[606896](46398 '_wide_get_locale' this[48110]))
    (46403 'move' tmp[46401](46399 'deref' call_tmp[606896]))
    {
      unknown call_tmp[606903] "expr temp" "maybe param" "maybe type" "temp"
      (606906 'move' call_tmp[606903](371225 call _v _mt[243] this[48110]))
      unknown call_tmp[606908] "expr temp" "maybe param" "maybe type" "temp"
      (606911 'move' call_tmp[606908](46393 call c_memory_order order[46340]))
      unknown call_tmp[606913] "expr temp" "maybe param" "maybe type" "temp"
      (606916 'move' call_tmp[606913](46394 call atomic_exchange call_tmp[606903] value[46330] call_tmp[606908]))
      (46395 call = ret[46380] call_tmp[606913])
      (474371 'end of statement' ret[46380])
      (46406 'on block' 0 tmp[46401])
    }
    unknown call_tmp[606920] "expr temp" "maybe param" "maybe type" "temp"
    (606923 'move' call_tmp[606920](505989 call T _mt[243] this[48110]))
    (505993 'move' ret[505984](505992 'coerce' ret[46380] call_tmp[606920]))
    gotoReturn _end_exchange[505982] _end_exchange[505982]
    (474373 'end of statement' ret[46380])
    label _end_exchange[505982]
    (505986 return ret[505984])
  }
  { scopeless type
    (371192 call T _mt[243] this[48110])
  }
  function AtomicT[48080](?).compareExchange[46421](arg _mt[48116]:_MT[238], arg this[48114]:AtomicT[48080](?), ref arg expected[46418] :
  (371233 call T _mt[243] this[48114]), arg desired[46424] :
  (371238 call T _mt[243] this[48114]), param arg order[46432]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505999] "RVV" "temp"
    unknown call_tmp[606933] "expr temp" "maybe param" "maybe type" "temp"
    (606936 'move' call_tmp[606933](46448 call readableOrder order[46432]))
    unknown call_tmp[606938] "expr temp" "maybe param" "maybe type" "temp"
    (606941 'move' call_tmp[606938](46449 call(46438 call (partial) compareExchange _mt[243] this[48114]) expected[46418] desired[46424] order[46432] call_tmp[606933]))
    (506005 'move' ret[505999](506004 'coerce' call_tmp[606938] bool[10]))
    (506001 return ret[505999])
  }
  { scopeless type
    bool[10]
  }
  function AtomicT[48080](?).compareExchange[46462](arg _mt[48120]:_MT[238], arg this[48118]:AtomicT[48080](?), ref arg expected[46459] :
  (371248 call T _mt[243] this[48118]), arg desired[46465] :
  (371253 call T _mt[243] this[48118]), param arg success[46469]:memoryOrder[187012], param arg failure[46473]:memoryOrder[187012]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506015] "RVV" "temp"
    function atomic_compare_exchange_strong[46491](ref arg obj[46488] :
    unknown call_tmp[606949] "expr temp" "maybe param" "maybe type" "temp", ref arg expected[46494] :
    (371270 call T _mt[243] this[48118]), arg desired[46498] :
    (371275 call T _mt[243] this[48118]), arg succ[46502]:memory_order[186653], arg fail[46506]:memory_order[186653], arg _chpl_cname[46514]:string[26] =
    unknown call_tmp[606960] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506009] "RVV" "temp"
      (506011 return ret[506009])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[46520] "dead at end of block" "insert auto destroy"
    (540664 'default init var' ret[46520] bool[10])
    (46523 'end of statement')
    const tmp[46565] "const" "temp"
    unknown call_tmp[606965] "expr temp" "maybe param" "maybe type" "temp"
    (606968 'move' call_tmp[606965](46562 '_wide_get_locale' this[48118]))
    (46567 'move' tmp[46565](46563 'deref' call_tmp[606965]))
    {
      {
        unknown localizedExpected[46526] "dead at end of block" "insert auto destroy"
        (540666 'init var' localizedExpected[46526] expected[46459])
        (46529 'end of statement')
        unknown call_tmp[606972] "expr temp" "maybe param" "maybe type" "temp"
        (606975 'move' call_tmp[606972](371285 call _v _mt[243] this[48118]))
        unknown call_tmp[606977] "expr temp" "maybe param" "maybe type" "temp"
        (606980 'move' call_tmp[606977](46540 call c_memory_order success[46469]))
        unknown call_tmp[606982] "expr temp" "maybe param" "maybe type" "temp"
        (606985 'move' call_tmp[606982](46544 call c_memory_order failure[46473]))
        unknown call_tmp[606987] "expr temp" "maybe param" "maybe type" "temp"
        (606990 'move' call_tmp[606987](46545 call atomic_compare_exchange_strong call_tmp[606972] localizedExpected[46526] desired[46465] call_tmp[606977] call_tmp[606982]))
        (46546 call = ret[46520] call_tmp[606987])
        (474376 'end of statement' ret[46520] localizedExpected[46526])
        unknown call_tmp[606992] "expr temp" "maybe param" "maybe type" "temp"
        (606995 'move' call_tmp[606992](46550 call ! ret[46520]))
        unknown call_tmp[606997] "expr temp" "maybe param" "maybe type" "temp"
        (607000 'move' call_tmp[606997](46557 call _cond_test call_tmp[606992]))
        if call_tmp[606997]
        {
          (46554 call = expected[46459] localizedExpected[46526])
          (474379 'end of statement' localizedExpected[46526])
        }
      }
      (46570 'on block' 0 tmp[46565])
    }
    (506021 'move' ret[506015](506020 'coerce' ret[46520] bool[10]))
    gotoReturn _end_compareExchange[506013] _end_compareExchange[506013]
    (474381 'end of statement' ret[46520])
    label _end_compareExchange[506013]
    (506017 return ret[506015])
  }
  { scopeless type
    bool[10]
  }
  function AtomicT[48080](?).compareExchangeWeak[46585](arg _mt[48124]:_MT[238], arg this[48122]:AtomicT[48080](?), ref arg expected[46582] :
  (371298 call T _mt[243] this[48122]), arg desired[46588] :
  (371303 call T _mt[243] this[48122]), param arg order[46596]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506027] "RVV" "temp"
    unknown call_tmp[607008] "expr temp" "maybe param" "maybe type" "temp"
    (607011 'move' call_tmp[607008](46612 call readableOrder order[46596]))
    unknown call_tmp[607013] "expr temp" "maybe param" "maybe type" "temp"
    (607016 'move' call_tmp[607013](46613 call(46602 call (partial) compareExchangeWeak _mt[243] this[48122]) expected[46582] desired[46588] order[46596] call_tmp[607008]))
    (506033 'move' ret[506027](506032 'coerce' call_tmp[607013] bool[10]))
    (506029 return ret[506027])
  }
  { scopeless type
    bool[10]
  }
  function AtomicT[48080](?).compareExchangeWeak[46626](arg _mt[48128]:_MT[238], arg this[48126]:AtomicT[48080](?), ref arg expected[46623] :
  (371313 call T _mt[243] this[48126]), arg desired[46629] :
  (371318 call T _mt[243] this[48126]), param arg success[46633]:memoryOrder[187012], param arg failure[46637]:memoryOrder[187012]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506043] "RVV" "temp"
    function atomic_compare_exchange_weak[46655](ref arg obj[46652] :
    unknown call_tmp[607024] "expr temp" "maybe param" "maybe type" "temp", ref arg expected[46658] :
    (371335 call T _mt[243] this[48126]), arg desired[46662] :
    (371340 call T _mt[243] this[48126]), arg succ[46666]:memory_order[186653], arg fail[46670]:memory_order[186653], arg _chpl_cname[46678]:string[26] =
    unknown call_tmp[607035] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506037] "RVV" "temp"
      (506039 return ret[506037])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[46684] "dead at end of block" "insert auto destroy"
    (540668 'default init var' ret[46684] bool[10])
    (46687 'end of statement')
    const tmp[46729] "const" "temp"
    unknown call_tmp[607040] "expr temp" "maybe param" "maybe type" "temp"
    (607043 'move' call_tmp[607040](46726 '_wide_get_locale' this[48126]))
    (46731 'move' tmp[46729](46727 'deref' call_tmp[607040]))
    {
      {
        unknown localizedExpected[46690] "dead at end of block" "insert auto destroy"
        (540670 'init var' localizedExpected[46690] expected[46623])
        (46693 'end of statement')
        unknown call_tmp[607047] "expr temp" "maybe param" "maybe type" "temp"
        (607050 'move' call_tmp[607047](371350 call _v _mt[243] this[48126]))
        unknown call_tmp[607052] "expr temp" "maybe param" "maybe type" "temp"
        (607055 'move' call_tmp[607052](46704 call c_memory_order success[46633]))
        unknown call_tmp[607057] "expr temp" "maybe param" "maybe type" "temp"
        (607060 'move' call_tmp[607057](46708 call c_memory_order failure[46637]))
        unknown call_tmp[607062] "expr temp" "maybe param" "maybe type" "temp"
        (607065 'move' call_tmp[607062](46709 call atomic_compare_exchange_weak call_tmp[607047] localizedExpected[46690] desired[46629] call_tmp[607052] call_tmp[607057]))
        (46710 call = ret[46684] call_tmp[607062])
        (474384 'end of statement' ret[46684] localizedExpected[46690])
        unknown call_tmp[607067] "expr temp" "maybe param" "maybe type" "temp"
        (607070 'move' call_tmp[607067](46714 call ! ret[46684]))
        unknown call_tmp[607072] "expr temp" "maybe param" "maybe type" "temp"
        (607075 'move' call_tmp[607072](46721 call _cond_test call_tmp[607067]))
        if call_tmp[607072]
        {
          (46718 call = expected[46623] localizedExpected[46690])
          (474387 'end of statement' localizedExpected[46690])
        }
      }
      (46734 'on block' 0 tmp[46729])
    }
    (506049 'move' ret[506043](506048 'coerce' ret[46684] bool[10]))
    gotoReturn _end_compareExchangeWeak[506041] _end_compareExchangeWeak[506041]
    (474389 'end of statement' ret[46684])
    label _end_compareExchangeWeak[506041]
    (506045 return ret[506043])
  }
  { scopeless type
    bool[10]
  }
  function AtomicT[48080](?).compareAndSwap[46749](arg _mt[48132]:_MT[238], arg this[48130]:AtomicT[48080](?), arg expected[46746] :
  (371363 call T _mt[243] this[48130]), arg desired[46752] :
  (371368 call T _mt[243] this[48130]), param arg order[46760]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506061] "RVV" "temp"
    function atomic_compare_exchange_strong[46779](ref arg obj[46776] :
    unknown call_tmp[607083] "expr temp" "maybe param" "maybe type" "temp", ref arg expected[46782] :
    (371384 call T _mt[243] this[48130]), arg desired[46786] :
    (371389 call T _mt[243] this[48130]), arg succ[46790]:memory_order[186653], arg fail[46794]:memory_order[186653], arg _chpl_cname[46802]:string[26] =
    unknown call_tmp[607094] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506055] "RVV" "temp"
      (506057 return ret[506055])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[46808] "dead at end of block" "insert auto destroy"
    (540672 'default init var' ret[46808] bool[10])
    (46811 'end of statement')
    const tmp[46843] "const" "temp"
    unknown call_tmp[607099] "expr temp" "maybe param" "maybe type" "temp"
    (607102 'move' call_tmp[607099](46840 '_wide_get_locale' this[48130]))
    (46845 'move' tmp[46843](46841 'deref' call_tmp[607099]))
    {
      {
        unknown mutableExpected[46814] "dead at end of block" "insert auto destroy"
        (540674 'init var' mutableExpected[46814] expected[46746])
        (46817 'end of statement')
        unknown call_tmp[607106] "expr temp" "maybe param" "maybe type" "temp"
        (607109 'move' call_tmp[607106](371399 call _v _mt[243] this[48130]))
        unknown call_tmp[607111] "expr temp" "maybe param" "maybe type" "temp"
        (607114 'move' call_tmp[607111](46828 call c_memory_order order[46760]))
        unknown call_tmp[607116] "expr temp" "maybe param" "maybe type" "temp"
        (607119 'move' call_tmp[607116](46833 call readableOrder order[46760]))
        unknown call_tmp[607121] "expr temp" "maybe param" "maybe type" "temp"
        (607124 'move' call_tmp[607121](46835 call c_memory_order call_tmp[607116]))
        unknown call_tmp[607126] "expr temp" "maybe param" "maybe type" "temp"
        (607129 'move' call_tmp[607126](46836 call atomic_compare_exchange_strong call_tmp[607106] mutableExpected[46814] desired[46752] call_tmp[607111] call_tmp[607121]))
        (46837 call = ret[46808] call_tmp[607126])
        (474391 'end of statement' ret[46808] mutableExpected[46814])
      }
      (46848 'on block' 0 tmp[46843])
    }
    (506067 'move' ret[506061](506066 'coerce' ret[46808] bool[10]))
    gotoReturn _end_compareAndSwap[506059] _end_compareAndSwap[506059]
    (474394 'end of statement' ret[46808])
    label _end_compareAndSwap[506059]
    (506063 return ret[506061])
  }
  { scopeless type
    bool[10]
  }
  function AtomicT[48080](?).fetchAdd[46863](arg _mt[48136]:_MT[238], arg this[48134]:AtomicT[48080](?), arg value[46860] :
  (371409 call T _mt[243] this[48134]), param arg order[46870]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506079] "RVV" "temp"
    function atomic_fetch_add[46905](ref arg obj[46902] :
    unknown call_tmp[607135] "expr temp" "maybe param" "maybe type" "temp", arg operand[46908] :
    (371430 call T _mt[243] this[48134]), arg order[46912]:memory_order[186653], arg _chpl_cname[46920]:string[26] =
    unknown call_tmp[607144] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506073] "RVV" "temp"
      (506075 return ret[506073])
    }
    { scopeless type
      (371436 call T _mt[243] this[48134])
    }
    unknown ret[46926] "dead at end of block" "insert auto destroy"
    unknown call_tmp[607153] "expr temp" "maybe param" "maybe type" "temp"
    (607156 'move' call_tmp[607153](371441 call T _mt[243] this[48134]))
    (540676 'default init var' ret[46926] call_tmp[607153])
    (46929 'end of statement')
    const tmp[46947] "const" "temp"
    unknown call_tmp[607158] "expr temp" "maybe param" "maybe type" "temp"
    (607161 'move' call_tmp[607158](46944 '_wide_get_locale' this[48134]))
    (46949 'move' tmp[46947](46945 'deref' call_tmp[607158]))
    {
      unknown call_tmp[607165] "expr temp" "maybe param" "maybe type" "temp"
      (607168 'move' call_tmp[607165](371448 call _v _mt[243] this[48134]))
      unknown call_tmp[607170] "expr temp" "maybe param" "maybe type" "temp"
      (607173 'move' call_tmp[607170](46939 call c_memory_order order[46870]))
      unknown call_tmp[607175] "expr temp" "maybe param" "maybe type" "temp"
      (607178 'move' call_tmp[607175](46940 call atomic_fetch_add call_tmp[607165] value[46860] call_tmp[607170]))
      (46941 call = ret[46926] call_tmp[607175])
      (474396 'end of statement' ret[46926])
      (46952 'on block' 0 tmp[46947])
    }
    unknown call_tmp[607182] "expr temp" "maybe param" "maybe type" "temp"
    (607185 'move' call_tmp[607182](506084 call T _mt[243] this[48134]))
    (506088 'move' ret[506079](506087 'coerce' ret[46926] call_tmp[607182]))
    gotoReturn _end_fetchAdd[506077] _end_fetchAdd[506077]
    (474398 'end of statement' ret[46926])
    label _end_fetchAdd[506077]
    (506081 return ret[506079])
  }
  { scopeless type
    (371415 call T _mt[243] this[48134])
  }
  function AtomicT[48080](?).add[46967](arg _mt[48140]:_MT[238], arg this[48138]:AtomicT[48080](?), arg value[46964] :
  (371456 call T _mt[243] this[48138]), param arg order[46974]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506100] "RVV" "temp"
    function atomic_fetch_add[46993](ref arg obj[46990] :
    unknown call_tmp[607193] "expr temp" "maybe param" "maybe type" "temp", arg operand[46996] :
    (371472 call T _mt[243] this[48138]), arg order[47000]:memory_order[186653], arg _chpl_cname[47008]:string[26] =
    unknown call_tmp[607202] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506094] "RVV" "temp"
      (506096 return ret[506094])
    }
    { scopeless type
      (371478 call T _mt[243] this[48138])
    }
    const tmp[47027] "const" "temp"
    unknown call_tmp[607209] "expr temp" "maybe param" "maybe type" "temp"
    (607212 'move' call_tmp[607209](47024 '_wide_get_locale' this[48138]))
    (47029 'move' tmp[47027](47025 'deref' call_tmp[607209]))
    {
      unknown call_tmp[607216] "expr temp" "maybe param" "maybe type" "temp"
      (607219 'move' call_tmp[607216](371484 call _v _mt[243] this[48138]))
      unknown call_tmp[607221] "expr temp" "maybe param" "maybe type" "temp"
      (607224 'move' call_tmp[607221](47021 call c_memory_order order[46974]))
      (47022 call atomic_fetch_add call_tmp[607216] value[46964] call_tmp[607221])
      (47032 'on block' 0 tmp[47027])
    }
    (506102 return ret[506100])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48080](?).fetchSub[47044](arg _mt[48144]:_MT[238], arg this[48142]:AtomicT[48080](?), arg value[47041] :
  (371491 call T _mt[243] this[48142]), param arg order[47051]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506112] "RVV" "temp"
    function atomic_fetch_sub[47086](ref arg obj[47083] :
    unknown call_tmp[607230] "expr temp" "maybe param" "maybe type" "temp", arg operand[47089] :
    (371512 call T _mt[243] this[48142]), arg order[47093]:memory_order[186653], arg _chpl_cname[47101]:string[26] =
    unknown call_tmp[607239] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506106] "RVV" "temp"
      (506108 return ret[506106])
    }
    { scopeless type
      (371518 call T _mt[243] this[48142])
    }
    unknown ret[47107] "dead at end of block" "insert auto destroy"
    unknown call_tmp[607248] "expr temp" "maybe param" "maybe type" "temp"
    (607251 'move' call_tmp[607248](371523 call T _mt[243] this[48142]))
    (540678 'default init var' ret[47107] call_tmp[607248])
    (47110 'end of statement')
    const tmp[47128] "const" "temp"
    unknown call_tmp[607253] "expr temp" "maybe param" "maybe type" "temp"
    (607256 'move' call_tmp[607253](47125 '_wide_get_locale' this[48142]))
    (47130 'move' tmp[47128](47126 'deref' call_tmp[607253]))
    {
      unknown call_tmp[607260] "expr temp" "maybe param" "maybe type" "temp"
      (607263 'move' call_tmp[607260](371530 call _v _mt[243] this[48142]))
      unknown call_tmp[607265] "expr temp" "maybe param" "maybe type" "temp"
      (607268 'move' call_tmp[607265](47120 call c_memory_order order[47051]))
      unknown call_tmp[607270] "expr temp" "maybe param" "maybe type" "temp"
      (607273 'move' call_tmp[607270](47121 call atomic_fetch_sub call_tmp[607260] value[47041] call_tmp[607265]))
      (47122 call = ret[47107] call_tmp[607270])
      (474401 'end of statement' ret[47107])
      (47133 'on block' 0 tmp[47128])
    }
    unknown call_tmp[607277] "expr temp" "maybe param" "maybe type" "temp"
    (607280 'move' call_tmp[607277](506117 call T _mt[243] this[48142]))
    (506121 'move' ret[506112](506120 'coerce' ret[47107] call_tmp[607277]))
    gotoReturn _end_fetchSub[506110] _end_fetchSub[506110]
    (474403 'end of statement' ret[47107])
    label _end_fetchSub[506110]
    (506114 return ret[506112])
  }
  { scopeless type
    (371497 call T _mt[243] this[48142])
  }
  function AtomicT[48080](?).sub[47148](arg _mt[48148]:_MT[238], arg this[48146]:AtomicT[48080](?), arg value[47145] :
  (371538 call T _mt[243] this[48146]), param arg order[47155]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506133] "RVV" "temp"
    function atomic_fetch_sub[47174](ref arg obj[47171] :
    unknown call_tmp[607288] "expr temp" "maybe param" "maybe type" "temp", arg operand[47177] :
    (371554 call T _mt[243] this[48146]), arg order[47181]:memory_order[186653], arg _chpl_cname[47189]:string[26] =
    unknown call_tmp[607297] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506127] "RVV" "temp"
      (506129 return ret[506127])
    }
    { scopeless type
      (371560 call T _mt[243] this[48146])
    }
    const tmp[47208] "const" "temp"
    unknown call_tmp[607304] "expr temp" "maybe param" "maybe type" "temp"
    (607307 'move' call_tmp[607304](47205 '_wide_get_locale' this[48146]))
    (47210 'move' tmp[47208](47206 'deref' call_tmp[607304]))
    {
      unknown call_tmp[607311] "expr temp" "maybe param" "maybe type" "temp"
      (607314 'move' call_tmp[607311](371566 call _v _mt[243] this[48146]))
      unknown call_tmp[607316] "expr temp" "maybe param" "maybe type" "temp"
      (607319 'move' call_tmp[607316](47202 call c_memory_order order[47155]))
      (47203 call atomic_fetch_sub call_tmp[607311] value[47145] call_tmp[607316])
      (47213 'on block' 0 tmp[47208])
    }
    (506135 return ret[506133])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48080](?).fetchOr[47225](arg _mt[48152]:_MT[238], arg this[48150]:AtomicT[48080](?), arg value[47222] :
  (371573 call T _mt[243] this[48150]), param arg order[47232]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506145] "RVV" "temp"
    unknown call_tmp[607325] "expr temp" "maybe param" "maybe type" "temp"
    (607328 'move' call_tmp[607325](371584 call T _mt[243] this[48150]))
    unknown call_tmp[607330] "expr temp" "maybe param" "maybe type" "temp"
    (607333 'move' call_tmp[607330](47240 call isIntegral call_tmp[607325]))
    unknown call_tmp[607335] "expr temp" "maybe param" "maybe type" "temp"
    (607338 'move' call_tmp[607335](47241 call ! call_tmp[607330]))
    unknown call_tmp[607340] "expr temp" "maybe param" "maybe type" "temp"
    (607343 'move' call_tmp[607340](47264 call _cond_test call_tmp[607335]))
    if call_tmp[607340]
    {
      (47262 call compilerError "fetchOr is only defined for integer atomic types")
    }
    function atomic_fetch_or[47300](ref arg obj[47297] :
    unknown call_tmp[607347] "expr temp" "maybe param" "maybe type" "temp", arg operand[47303] :
    (371599 call T _mt[243] this[48150]), arg order[47307]:memory_order[186653], arg _chpl_cname[47315]:string[26] =
    unknown call_tmp[607356] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506139] "RVV" "temp"
      (506141 return ret[506139])
    }
    { scopeless type
      (371605 call T _mt[243] this[48150])
    }
    unknown ret[47320] "dead at end of block" "insert auto destroy"
    unknown call_tmp[607365] "expr temp" "maybe param" "maybe type" "temp"
    (607368 'move' call_tmp[607365](371610 call T _mt[243] this[48150]))
    (540680 'default init var' ret[47320] call_tmp[607365])
    (47323 'end of statement')
    const tmp[47341] "const" "temp"
    unknown call_tmp[607370] "expr temp" "maybe param" "maybe type" "temp"
    (607373 'move' call_tmp[607370](47338 '_wide_get_locale' this[48150]))
    (47343 'move' tmp[47341](47339 'deref' call_tmp[607370]))
    {
      unknown call_tmp[607377] "expr temp" "maybe param" "maybe type" "temp"
      (607380 'move' call_tmp[607377](371617 call _v _mt[243] this[48150]))
      unknown call_tmp[607382] "expr temp" "maybe param" "maybe type" "temp"
      (607385 'move' call_tmp[607382](47333 call c_memory_order order[47232]))
      unknown call_tmp[607387] "expr temp" "maybe param" "maybe type" "temp"
      (607390 'move' call_tmp[607387](47334 call atomic_fetch_or call_tmp[607377] value[47222] call_tmp[607382]))
      (47335 call = ret[47320] call_tmp[607387])
      (474407 'end of statement' ret[47320])
      (47346 'on block' 0 tmp[47341])
    }
    unknown call_tmp[607394] "expr temp" "maybe param" "maybe type" "temp"
    (607397 'move' call_tmp[607394](506150 call T _mt[243] this[48150]))
    (506154 'move' ret[506145](506153 'coerce' ret[47320] call_tmp[607394]))
    gotoReturn _end_fetchOr[506143] _end_fetchOr[506143]
    (474409 'end of statement' ret[47320])
    label _end_fetchOr[506143]
    (506147 return ret[506145])
  }
  { scopeless type
    (371579 call T _mt[243] this[48150])
  }
  function AtomicT[48080](?).or[47361](arg _mt[48156]:_MT[238], arg this[48154]:AtomicT[48080](?), arg value[47358] :
  (371625 call T _mt[243] this[48154]), param arg order[47368]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506166] "RVV" "temp"
    unknown call_tmp[607405] "expr temp" "maybe param" "maybe type" "temp"
    (607408 'move' call_tmp[607405](371631 call T _mt[243] this[48154]))
    unknown call_tmp[607410] "expr temp" "maybe param" "maybe type" "temp"
    (607413 'move' call_tmp[607410](47376 call isIntegral call_tmp[607405]))
    unknown call_tmp[607415] "expr temp" "maybe param" "maybe type" "temp"
    (607418 'move' call_tmp[607415](47377 call ! call_tmp[607410]))
    unknown call_tmp[607420] "expr temp" "maybe param" "maybe type" "temp"
    (607423 'move' call_tmp[607420](47402 call _cond_test call_tmp[607415]))
    if call_tmp[607420]
    {
      (47400 call compilerError "or is only defined for integer atomic types")
    }
    function atomic_fetch_or[47422](ref arg obj[47419] :
    unknown call_tmp[607427] "expr temp" "maybe param" "maybe type" "temp", arg operand[47425] :
    (371646 call T _mt[243] this[48154]), arg order[47429]:memory_order[186653], arg _chpl_cname[47437]:string[26] =
    unknown call_tmp[607436] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506160] "RVV" "temp"
      (506162 return ret[506160])
    }
    { scopeless type
      (371652 call T _mt[243] this[48154])
    }
    const tmp[47455] "const" "temp"
    unknown call_tmp[607443] "expr temp" "maybe param" "maybe type" "temp"
    (607446 'move' call_tmp[607443](47452 '_wide_get_locale' this[48154]))
    (47457 'move' tmp[47455](47453 'deref' call_tmp[607443]))
    {
      unknown call_tmp[607450] "expr temp" "maybe param" "maybe type" "temp"
      (607453 'move' call_tmp[607450](371658 call _v _mt[243] this[48154]))
      unknown call_tmp[607455] "expr temp" "maybe param" "maybe type" "temp"
      (607458 'move' call_tmp[607455](47449 call c_memory_order order[47368]))
      (47450 call atomic_fetch_or call_tmp[607450] value[47358] call_tmp[607455])
      (47460 'on block' 0 tmp[47455])
    }
    (506168 return ret[506166])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48080](?).fetchAnd[47472](arg _mt[48160]:_MT[238], arg this[48158]:AtomicT[48080](?), arg value[47469] :
  (371665 call T _mt[243] this[48158]), param arg order[47479]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506178] "RVV" "temp"
    unknown call_tmp[607464] "expr temp" "maybe param" "maybe type" "temp"
    (607467 'move' call_tmp[607464](371676 call T _mt[243] this[48158]))
    unknown call_tmp[607469] "expr temp" "maybe param" "maybe type" "temp"
    (607472 'move' call_tmp[607469](47487 call isIntegral call_tmp[607464]))
    unknown call_tmp[607474] "expr temp" "maybe param" "maybe type" "temp"
    (607477 'move' call_tmp[607474](47488 call ! call_tmp[607469]))
    unknown call_tmp[607479] "expr temp" "maybe param" "maybe type" "temp"
    (607482 'move' call_tmp[607479](47511 call _cond_test call_tmp[607474]))
    if call_tmp[607479]
    {
      (47509 call compilerError "fetchAnd is only defined for integer atomic types")
    }
    function atomic_fetch_and[47547](ref arg obj[47544] :
    unknown call_tmp[607486] "expr temp" "maybe param" "maybe type" "temp", arg operand[47550] :
    (371691 call T _mt[243] this[48158]), arg order[47554]:memory_order[186653], arg _chpl_cname[47562]:string[26] =
    unknown call_tmp[607495] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506172] "RVV" "temp"
      (506174 return ret[506172])
    }
    { scopeless type
      (371697 call T _mt[243] this[48158])
    }
    unknown ret[47567] "dead at end of block" "insert auto destroy"
    unknown call_tmp[607504] "expr temp" "maybe param" "maybe type" "temp"
    (607507 'move' call_tmp[607504](371702 call T _mt[243] this[48158]))
    (540682 'default init var' ret[47567] call_tmp[607504])
    (47570 'end of statement')
    const tmp[47588] "const" "temp"
    unknown call_tmp[607509] "expr temp" "maybe param" "maybe type" "temp"
    (607512 'move' call_tmp[607509](47585 '_wide_get_locale' this[48158]))
    (47590 'move' tmp[47588](47586 'deref' call_tmp[607509]))
    {
      unknown call_tmp[607516] "expr temp" "maybe param" "maybe type" "temp"
      (607519 'move' call_tmp[607516](371709 call _v _mt[243] this[48158]))
      unknown call_tmp[607521] "expr temp" "maybe param" "maybe type" "temp"
      (607524 'move' call_tmp[607521](47580 call c_memory_order order[47479]))
      unknown call_tmp[607526] "expr temp" "maybe param" "maybe type" "temp"
      (607529 'move' call_tmp[607526](47581 call atomic_fetch_and call_tmp[607516] value[47469] call_tmp[607521]))
      (47582 call = ret[47567] call_tmp[607526])
      (474414 'end of statement' ret[47567])
      (47593 'on block' 0 tmp[47588])
    }
    unknown call_tmp[607533] "expr temp" "maybe param" "maybe type" "temp"
    (607536 'move' call_tmp[607533](506183 call T _mt[243] this[48158]))
    (506187 'move' ret[506178](506186 'coerce' ret[47567] call_tmp[607533]))
    gotoReturn _end_fetchAnd[506176] _end_fetchAnd[506176]
    (474416 'end of statement' ret[47567])
    label _end_fetchAnd[506176]
    (506180 return ret[506178])
  }
  { scopeless type
    (371671 call T _mt[243] this[48158])
  }
  function AtomicT[48080](?).and[47608](arg _mt[48164]:_MT[238], arg this[48162]:AtomicT[48080](?), arg value[47605] :
  (371717 call T _mt[243] this[48162]), param arg order[47615]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506199] "RVV" "temp"
    unknown call_tmp[607544] "expr temp" "maybe param" "maybe type" "temp"
    (607547 'move' call_tmp[607544](371723 call T _mt[243] this[48162]))
    unknown call_tmp[607549] "expr temp" "maybe param" "maybe type" "temp"
    (607552 'move' call_tmp[607549](47623 call isIntegral call_tmp[607544]))
    unknown call_tmp[607554] "expr temp" "maybe param" "maybe type" "temp"
    (607557 'move' call_tmp[607554](47624 call ! call_tmp[607549]))
    unknown call_tmp[607559] "expr temp" "maybe param" "maybe type" "temp"
    (607562 'move' call_tmp[607559](47647 call _cond_test call_tmp[607554]))
    if call_tmp[607559]
    {
      (47645 call compilerError "and is only defined for integer atomic types")
    }
    function atomic_fetch_and[47667](ref arg obj[47664] :
    unknown call_tmp[607566] "expr temp" "maybe param" "maybe type" "temp", arg operand[47670] :
    (371738 call T _mt[243] this[48162]), arg order[47674]:memory_order[186653], arg _chpl_cname[47682]:string[26] =
    unknown call_tmp[607575] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506193] "RVV" "temp"
      (506195 return ret[506193])
    }
    { scopeless type
      (371744 call T _mt[243] this[48162])
    }
    const tmp[47700] "const" "temp"
    unknown call_tmp[607582] "expr temp" "maybe param" "maybe type" "temp"
    (607585 'move' call_tmp[607582](47697 '_wide_get_locale' this[48162]))
    (47702 'move' tmp[47700](47698 'deref' call_tmp[607582]))
    {
      unknown call_tmp[607589] "expr temp" "maybe param" "maybe type" "temp"
      (607592 'move' call_tmp[607589](371750 call _v _mt[243] this[48162]))
      unknown call_tmp[607594] "expr temp" "maybe param" "maybe type" "temp"
      (607597 'move' call_tmp[607594](47694 call c_memory_order order[47615]))
      (47695 call atomic_fetch_and call_tmp[607589] value[47605] call_tmp[607594])
      (47705 'on block' 0 tmp[47700])
    }
    (506201 return ret[506199])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48080](?).fetchXor[47717](arg _mt[48168]:_MT[238], arg this[48166]:AtomicT[48080](?), arg value[47714] :
  (371757 call T _mt[243] this[48166]), param arg order[47724]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506211] "RVV" "temp"
    unknown call_tmp[607603] "expr temp" "maybe param" "maybe type" "temp"
    (607606 'move' call_tmp[607603](371768 call T _mt[243] this[48166]))
    unknown call_tmp[607608] "expr temp" "maybe param" "maybe type" "temp"
    (607611 'move' call_tmp[607608](47732 call isIntegral call_tmp[607603]))
    unknown call_tmp[607613] "expr temp" "maybe param" "maybe type" "temp"
    (607616 'move' call_tmp[607613](47733 call ! call_tmp[607608]))
    unknown call_tmp[607618] "expr temp" "maybe param" "maybe type" "temp"
    (607621 'move' call_tmp[607618](47756 call _cond_test call_tmp[607613]))
    if call_tmp[607618]
    {
      (47754 call compilerError "fetchXor is only defined for integer atomic types")
    }
    function atomic_fetch_xor[47792](ref arg obj[47789] :
    unknown call_tmp[607625] "expr temp" "maybe param" "maybe type" "temp", arg operand[47795] :
    (371783 call T _mt[243] this[48166]), arg order[47799]:memory_order[186653], arg _chpl_cname[47807]:string[26] =
    unknown call_tmp[607634] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506205] "RVV" "temp"
      (506207 return ret[506205])
    }
    { scopeless type
      (371789 call T _mt[243] this[48166])
    }
    unknown ret[47812] "dead at end of block" "insert auto destroy"
    unknown call_tmp[607643] "expr temp" "maybe param" "maybe type" "temp"
    (607646 'move' call_tmp[607643](371794 call T _mt[243] this[48166]))
    (540684 'default init var' ret[47812] call_tmp[607643])
    (47815 'end of statement')
    const tmp[47833] "const" "temp"
    unknown call_tmp[607648] "expr temp" "maybe param" "maybe type" "temp"
    (607651 'move' call_tmp[607648](47830 '_wide_get_locale' this[48166]))
    (47835 'move' tmp[47833](47831 'deref' call_tmp[607648]))
    {
      unknown call_tmp[607655] "expr temp" "maybe param" "maybe type" "temp"
      (607658 'move' call_tmp[607655](371801 call _v _mt[243] this[48166]))
      unknown call_tmp[607660] "expr temp" "maybe param" "maybe type" "temp"
      (607663 'move' call_tmp[607660](47825 call c_memory_order order[47724]))
      unknown call_tmp[607665] "expr temp" "maybe param" "maybe type" "temp"
      (607668 'move' call_tmp[607665](47826 call atomic_fetch_xor call_tmp[607655] value[47714] call_tmp[607660]))
      (47827 call = ret[47812] call_tmp[607665])
      (474421 'end of statement' ret[47812])
      (47838 'on block' 0 tmp[47833])
    }
    unknown call_tmp[607672] "expr temp" "maybe param" "maybe type" "temp"
    (607675 'move' call_tmp[607672](506216 call T _mt[243] this[48166]))
    (506220 'move' ret[506211](506219 'coerce' ret[47812] call_tmp[607672]))
    gotoReturn _end_fetchXor[506209] _end_fetchXor[506209]
    (474423 'end of statement' ret[47812])
    label _end_fetchXor[506209]
    (506213 return ret[506211])
  }
  { scopeless type
    (371763 call T _mt[243] this[48166])
  }
  function AtomicT[48080](?).xor[47853](arg _mt[48172]:_MT[238], arg this[48170]:AtomicT[48080](?), arg value[47850] :
  (371809 call T _mt[243] this[48170]), param arg order[47860]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506232] "RVV" "temp"
    unknown call_tmp[607683] "expr temp" "maybe param" "maybe type" "temp"
    (607686 'move' call_tmp[607683](371815 call T _mt[243] this[48170]))
    unknown call_tmp[607688] "expr temp" "maybe param" "maybe type" "temp"
    (607691 'move' call_tmp[607688](47868 call isIntegral call_tmp[607683]))
    unknown call_tmp[607693] "expr temp" "maybe param" "maybe type" "temp"
    (607696 'move' call_tmp[607693](47869 call ! call_tmp[607688]))
    unknown call_tmp[607698] "expr temp" "maybe param" "maybe type" "temp"
    (607701 'move' call_tmp[607698](47892 call _cond_test call_tmp[607693]))
    if call_tmp[607698]
    {
      (47890 call compilerError "xor is only defined for integer atomic types")
    }
    function atomic_fetch_xor[47912](ref arg obj[47909] :
    unknown call_tmp[607705] "expr temp" "maybe param" "maybe type" "temp", arg operand[47915] :
    (371830 call T _mt[243] this[48170]), arg order[47919]:memory_order[186653], arg _chpl_cname[47927]:string[26] =
    unknown call_tmp[607714] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506226] "RVV" "temp"
      (506228 return ret[506226])
    }
    { scopeless type
      (371836 call T _mt[243] this[48170])
    }
    const tmp[47945] "const" "temp"
    unknown call_tmp[607721] "expr temp" "maybe param" "maybe type" "temp"
    (607724 'move' call_tmp[607721](47942 '_wide_get_locale' this[48170]))
    (47947 'move' tmp[47945](47943 'deref' call_tmp[607721]))
    {
      unknown call_tmp[607728] "expr temp" "maybe param" "maybe type" "temp"
      (607731 'move' call_tmp[607728](371842 call _v _mt[243] this[48170]))
      unknown call_tmp[607733] "expr temp" "maybe param" "maybe type" "temp"
      (607736 'move' call_tmp[607733](47939 call c_memory_order order[47860]))
      (47940 call atomic_fetch_xor call_tmp[607728] value[47850] call_tmp[607733])
      (47950 'on block' 0 tmp[47945])
    }
    (506234 return ret[506232])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48080](?).waitFor[47962](arg _mt[48176]:_MT[238], const arg this[48174]:AtomicT[48080](?), arg value[47959] :
  (371849 call T _mt[243] this[48174]), param arg order[47969]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506238] "RVV" "temp"
    const tmp[48051] "const" "temp"
    unknown call_tmp[607740] "expr temp" "maybe param" "maybe type" "temp"
    (607743 'move' call_tmp[607740](48048 '_wide_get_locale' this[48174]))
    (48053 'move' tmp[48051](48049 'deref' call_tmp[607740]))
    {
      {
        {
          unknown tmp[47994] "temp"
          unknown call_tmp[607747] "expr temp" "maybe param" "maybe type" "temp"
          (607750 'move' call_tmp[607747](48029 call(48026 call (partial) read _mt[243] this[48174])(order = relaxed[187010])))
          unknown call_tmp[607752] "expr temp" "maybe param" "maybe type" "temp"
          (607755 'move' call_tmp[607752](48024 call != call_tmp[607747] value[47959]))
          (48036 'move' tmp[47994](48022 call _cond_test call_tmp[607752]))
          WhileDo[47999]
          {
            {
              (47991 call chpl_task_yield)
            }
            label _continueLabel[47997]
            unknown call_tmp[607759] "expr temp" "maybe param" "maybe type" "temp"
            (607762 'move' call_tmp[607759](48010 call(48007 call (partial) read _mt[243] this[48174])(order = relaxed[187010])))
            unknown call_tmp[607764] "expr temp" "maybe param" "maybe type" "temp"
            (607767 'move' call_tmp[607764](48005 call != call_tmp[607759] value[47959]))
            (48017 'move' tmp[47994](48003 call _cond_test call_tmp[607764]))
            tmp[47994]
          }
          label _breakLabel[47998]
        }
        unknown call_tmp[607769] "expr temp" "maybe param" "maybe type" "temp"
        (607772 'move' call_tmp[607769](48044 call c_memory_order order[47969]))
        (48046 call chpl_atomic_thread_fence call_tmp[607769])
      }
      (48056 'on block' 0 tmp[48051])
    }
    (506240 return ret[506238])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48080](?).writeThis[48067](arg _mt[48180]:_MT[238], const arg this[48178]:AtomicT[48080](?), arg x[48065]:_any[178](?)) : _unknown[51] throws "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[607776] "expr temp" "maybe param" "maybe type" "temp"
    (607779 'move' call_tmp[607776](48072 call(371859 call (partial) read _mt[243] this[48178])))
    (48073 call <~> x[48065] call_tmp[607776])
    (506242 return _void[55])
  }
  type AtomicT[48080](?) unknown T[45949] "no doc" "type variable" unknown _v[45956] "no doc"(45955 call externT T[45949])
  function =[48189](ref arg a[48186]:AtomicBool[45877], const  ref arg b[48192]:AtomicBool[45877]) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    unknown call_tmp[607785] "expr temp" "maybe param" "maybe type" "temp"
    (607788 'move' call_tmp[607785](48204 call(48200 call (partial) read _mt[243] b[48192])))
    (48206 call(48196 call (partial) write _mt[243] a[48186]) call_tmp[607785])
    (506244 return _void[55])
  }
  function =[48217](ref arg a[48214]:AtomicBool[45877], arg b[48219]:_any[178](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (48242 call compilerError "Cannot directly assign atomic variables")
    (506246 return _void[55])
  }
  function =[48253](ref arg a[48250]:AtomicT[48080](?), const  ref arg b[48256]:AtomicT[48080](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    unknown call_tmp[607794] "expr temp" "maybe param" "maybe type" "temp"
    (607797 'move' call_tmp[607794](48268 call(48264 call (partial) read _mt[243] b[48256])))
    (48270 call(48260 call (partial) write _mt[243] a[48250]) call_tmp[607794])
    (506248 return _void[55])
  }
  function =[48281](ref arg a[48278]:AtomicT[48080](?), arg b[48283]:_any[178](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (48288 call compilerError "Cannot directly assign atomic variables")
    (506250 return _void[55])
  }
  function +[48299](arg a[48296]:AtomicT[48080](?), arg b[48301]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[506254] "RVV" "temp"
    (48322 call compilerError "Cannot directly add atomic variables")
    (474434 'end of statement')
    (506259 'move' ret[506254](506258 'deref' a[48296]))
    (506256 return ret[506254])
  }
  function -[48336](arg a[48333]:AtomicT[48080](?), arg b[48338]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[506263] "RVV" "temp"
    (48359 call compilerError "Cannot directly subtract atomic variables")
    (474436 'end of statement')
    (506268 'move' ret[506263](506267 'deref' a[48333]))
    (506265 return ret[506263])
  }
  function *[48373](arg a[48370]:AtomicT[48080](?), arg b[48375]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[506272] "RVV" "temp"
    (48396 call compilerError "Cannot directly multiply atomic variables")
    (474438 'end of statement')
    (506277 'move' ret[506272](506276 'deref' a[48370]))
    (506274 return ret[506272])
  }
  function /[48410](arg a[48407]:AtomicT[48080](?), arg b[48412]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[506281] "RVV" "temp"
    (48433 call compilerError "Cannot directly divide atomic variables")
    (474440 'end of statement')
    (506286 'move' ret[506281](506285 'deref' a[48407]))
    (506283 return ret[506281])
  }
  function %[48447](arg a[48444]:AtomicT[48080](?), arg b[48449]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[506290] "RVV" "temp"
    (48454 call compilerError "Cannot directly divide atomic variables")
    (474442 'end of statement')
    (506295 'move' ret[506290](506294 'deref' a[48444]))
    (506292 return ret[506290])
  }
  (355078 'used modules list'(43966 'use' ChapelBase[307])(43970 'use' MemConsistency[186648]))
}