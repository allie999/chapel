AST dump for Atomics after pass normalize.
Module use list: ChapelBase MemConsistency 

{
  function chpl__init_Atomics[415968]() : void[4] "insert line file info" "module init"
  {
    (506292 return _void[55])
  }
  function chpl_atomic_thread_fence[43978](arg order[43975]:memory_order[186653]) : void[4] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no doc" "no return value for void"
  {
    (505599 return _void[55])
  }
  function atomic_fence[43990](arg order[43986]:memory_order[186653] =
  memory_order_seq_cst[186997]) : _unknown[51] "no doc" "no return value for void"
  {
    (43995 call chpl_atomic_thread_fence order[43986])
    (474278 'end of statement')
    unknown call_tmp[605963] "expr temp" "maybe param" "maybe type" "temp"
    (605966 'move' call_tmp[605963](44004 call _cond_test CHPL_CACHE_REMOTE[367]))
    if call_tmp[605963]
    {
      (44002 call chpl_rmem_consist_fence order[43986])
    }
    (505601 return _void[55])
  }
  function atomicFence[44024](param arg order[44020]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "inline" "no return value for void"
  {
    unknown call_tmp[605968] "expr temp" "maybe param" "maybe type" "temp"
    (605971 'move' call_tmp[605968](44030 call c_memory_order order[44020]))
    (44032 call atomic_fence call_tmp[605968])
    (505603 return _void[55])
  }
  function isSupported[44041](arg T[44039]:_any[178](?)) param : _unknown[51] "private"
  {
    unknown ret[505607] "RVV" "param" "temp"
    unknown tmp[418433] "maybe param" "temp"
    unknown tmp[418454] "maybe param" "temp"
    unknown tmp[418475] "maybe param" "temp"
    (418486 'move' tmp[418475](44045 call == T[44039] bool[10]))
    unknown call_tmp[605973] "expr temp" "maybe param" "maybe type" "temp"
    (605976 'move' call_tmp[605973](418488 call _cond_invalid tmp[418475]))
    if call_tmp[605973]
    {
      (418491 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[554321] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554322] "maybe param" "temp"
    unknown call_tmp[605978] "expr temp" "maybe param" "maybe type" "temp"
    (605981 'move' call_tmp[605978](418476 call isTrue tmp[418475]))
    (554327 'move' tmp[554322](554325 call _cond_test call_tmp[605978]))
    if tmp[554322]
    {
      (554332 'move' tmp[554321](554329 '_paramFoldLogical' tmp[554322] 1))
    }
    {
      unknown tmp[554334] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[605983] "expr temp" "maybe param" "maybe type" "temp"
      (605986 'move' call_tmp[605983](44050 call isInt T[44039]))
      (554336 'move' tmp[554334](418480 call isTrue call_tmp[605983]))
      (554341 'move' tmp[554321](554338 '_paramFoldLogical' tmp[554322] tmp[554334]))
    }
    (418465 'move' tmp[418454] tmp[554321])
    unknown call_tmp[605988] "expr temp" "maybe param" "maybe type" "temp"
    (605991 'move' call_tmp[605988](418467 call _cond_invalid tmp[418454]))
    if call_tmp[605988]
    {
      (418470 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[554348] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554349] "maybe param" "temp"
    unknown call_tmp[605993] "expr temp" "maybe param" "maybe type" "temp"
    (605996 'move' call_tmp[605993](418455 call isTrue tmp[418454]))
    (554354 'move' tmp[554349](554352 call _cond_test call_tmp[605993]))
    if tmp[554349]
    {
      (554359 'move' tmp[554348](554356 '_paramFoldLogical' tmp[554349] 1))
    }
    {
      unknown tmp[554361] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[605998] "expr temp" "maybe param" "maybe type" "temp"
      (606001 'move' call_tmp[605998](44056 call isUint T[44039]))
      (554363 'move' tmp[554361](418459 call isTrue call_tmp[605998]))
      (554368 'move' tmp[554348](554365 '_paramFoldLogical' tmp[554349] tmp[554361]))
    }
    (418444 'move' tmp[418433] tmp[554348])
    unknown call_tmp[606003] "expr temp" "maybe param" "maybe type" "temp"
    (606006 'move' call_tmp[606003](418446 call _cond_invalid tmp[418433]))
    if call_tmp[606003]
    {
      (418449 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[554375] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554376] "maybe param" "temp"
    unknown call_tmp[606008] "expr temp" "maybe param" "maybe type" "temp"
    (606011 'move' call_tmp[606008](418434 call isTrue tmp[418433]))
    (554381 'move' tmp[554376](554379 call _cond_test call_tmp[606008]))
    if tmp[554376]
    {
      (554386 'move' tmp[554375](554383 '_paramFoldLogical' tmp[554376] 1))
    }
    {
      unknown tmp[554388] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[606013] "expr temp" "maybe param" "maybe type" "temp"
      (606016 'move' call_tmp[606013](44062 call isReal T[44039]))
      (554390 'move' tmp[554388](418438 call isTrue call_tmp[606013]))
      (554395 'move' tmp[554375](554392 '_paramFoldLogical' tmp[554376] tmp[554388]))
    }
    (505612 'move' ret[505607](505611 'deref' tmp[554375]))
    (505609 return ret[505607])
  }
  function externT[44074](arg T[44072]:_any[178](?)) type : _unknown[51] "private"
  {
    unknown ret[505616] "RVV" "temp" "type variable"
    type atomic_bool[44080]
    type atomic_int_least8_t[44087]
    type atomic_int_least16_t[44093]
    type atomic_int_least32_t[44099]
    type atomic_int_least64_t[44105]
    type atomic_uint_least8_t[44111]
    type atomic_uint_least16_t[44117]
    type atomic_uint_least32_t[44123]
    type atomic_uint_least64_t[44129]
    type atomic__real64[44135]
    type atomic__real32[44141]
    {
      unknown tmp[44264] "expr temp" "maybe param" "maybe type" "temp"
      (44266 'move' tmp[44264] T[44072])
      unknown call_tmp[606018] "expr temp" "maybe param" "maybe type" "temp"
      (606021 'move' call_tmp[606018](44268 call == tmp[44264] bool[10]))
      unknown call_tmp[606023] "expr temp" "maybe param" "maybe type" "temp"
      (606026 'move' call_tmp[606023](44271 call _cond_test call_tmp[606018]))
      if call_tmp[606023]
      {
        (505621 'move' ret[505616](505620 'deref' atomic_bool[44080]))
        gotoReturn _end_externT[505614] _end_externT[505614]
      }
      {
        unknown call_tmp[606028] "expr temp" "maybe param" "maybe type" "temp"
        (606031 'move' call_tmp[606028](44156 call int(64)[13] 8))
        unknown call_tmp[606033] "expr temp" "maybe param" "maybe type" "temp"
        (606036 'move' call_tmp[606033](44274 call == tmp[44264] call_tmp[606028]))
        unknown call_tmp[606038] "expr temp" "maybe param" "maybe type" "temp"
        (606041 'move' call_tmp[606038](44277 call _cond_test call_tmp[606033]))
        if call_tmp[606038]
        {
          (505626 'move' ret[505616](505625 'deref' atomic_int_least8_t[44087]))
          gotoReturn _end_externT[505614] _end_externT[505614]
        }
        {
          unknown call_tmp[606043] "expr temp" "maybe param" "maybe type" "temp"
          (606046 'move' call_tmp[606043](44167 call int(64)[13] 16))
          unknown call_tmp[606048] "expr temp" "maybe param" "maybe type" "temp"
          (606051 'move' call_tmp[606048](44281 call == tmp[44264] call_tmp[606043]))
          unknown call_tmp[606053] "expr temp" "maybe param" "maybe type" "temp"
          (606056 'move' call_tmp[606053](44284 call _cond_test call_tmp[606048]))
          if call_tmp[606053]
          {
            (505631 'move' ret[505616](505630 'deref' atomic_int_least16_t[44093]))
            gotoReturn _end_externT[505614] _end_externT[505614]
          }
          {
            unknown call_tmp[606058] "expr temp" "maybe param" "maybe type" "temp"
            (606061 'move' call_tmp[606058](44178 call int(64)[13] 32))
            unknown call_tmp[606063] "expr temp" "maybe param" "maybe type" "temp"
            (606066 'move' call_tmp[606063](44288 call == tmp[44264] call_tmp[606058]))
            unknown call_tmp[606068] "expr temp" "maybe param" "maybe type" "temp"
            (606071 'move' call_tmp[606068](44291 call _cond_test call_tmp[606063]))
            if call_tmp[606068]
            {
              (505636 'move' ret[505616](505635 'deref' atomic_int_least32_t[44099]))
              gotoReturn _end_externT[505614] _end_externT[505614]
            }
            {
              unknown call_tmp[606073] "expr temp" "maybe param" "maybe type" "temp"
              (606076 'move' call_tmp[606073](44189 call int(64)[13] 64))
              unknown call_tmp[606078] "expr temp" "maybe param" "maybe type" "temp"
              (606081 'move' call_tmp[606078](44295 call == tmp[44264] call_tmp[606073]))
              unknown call_tmp[606083] "expr temp" "maybe param" "maybe type" "temp"
              (606086 'move' call_tmp[606083](44298 call _cond_test call_tmp[606078]))
              if call_tmp[606083]
              {
                (505641 'move' ret[505616](505640 'deref' atomic_int_least64_t[44105]))
                gotoReturn _end_externT[505614] _end_externT[505614]
              }
              {
                unknown call_tmp[606088] "expr temp" "maybe param" "maybe type" "temp"
                (606091 'move' call_tmp[606088](44200 call uint(64)[115] 8))
                unknown call_tmp[606093] "expr temp" "maybe param" "maybe type" "temp"
                (606096 'move' call_tmp[606093](44302 call == tmp[44264] call_tmp[606088]))
                unknown call_tmp[606098] "expr temp" "maybe param" "maybe type" "temp"
                (606101 'move' call_tmp[606098](44305 call _cond_test call_tmp[606093]))
                if call_tmp[606098]
                {
                  (505646 'move' ret[505616](505645 'deref' atomic_uint_least8_t[44111]))
                  gotoReturn _end_externT[505614] _end_externT[505614]
                }
                {
                  unknown call_tmp[606103] "expr temp" "maybe param" "maybe type" "temp"
                  (606106 'move' call_tmp[606103](44211 call uint(64)[115] 16))
                  unknown call_tmp[606108] "expr temp" "maybe param" "maybe type" "temp"
                  (606111 'move' call_tmp[606108](44309 call == tmp[44264] call_tmp[606103]))
                  unknown call_tmp[606113] "expr temp" "maybe param" "maybe type" "temp"
                  (606116 'move' call_tmp[606113](44312 call _cond_test call_tmp[606108]))
                  if call_tmp[606113]
                  {
                    (505651 'move' ret[505616](505650 'deref' atomic_uint_least16_t[44117]))
                    gotoReturn _end_externT[505614] _end_externT[505614]
                  }
                  {
                    unknown call_tmp[606118] "expr temp" "maybe param" "maybe type" "temp"
                    (606121 'move' call_tmp[606118](44222 call uint(64)[115] 32))
                    unknown call_tmp[606123] "expr temp" "maybe param" "maybe type" "temp"
                    (606126 'move' call_tmp[606123](44316 call == tmp[44264] call_tmp[606118]))
                    unknown call_tmp[606128] "expr temp" "maybe param" "maybe type" "temp"
                    (606131 'move' call_tmp[606128](44319 call _cond_test call_tmp[606123]))
                    if call_tmp[606128]
                    {
                      (505656 'move' ret[505616](505655 'deref' atomic_uint_least32_t[44123]))
                      gotoReturn _end_externT[505614] _end_externT[505614]
                    }
                    {
                      unknown call_tmp[606133] "expr temp" "maybe param" "maybe type" "temp"
                      (606136 'move' call_tmp[606133](44233 call uint(64)[115] 64))
                      unknown call_tmp[606138] "expr temp" "maybe param" "maybe type" "temp"
                      (606141 'move' call_tmp[606138](44323 call == tmp[44264] call_tmp[606133]))
                      unknown call_tmp[606143] "expr temp" "maybe param" "maybe type" "temp"
                      (606146 'move' call_tmp[606143](44326 call _cond_test call_tmp[606138]))
                      if call_tmp[606143]
                      {
                        (505661 'move' ret[505616](505660 'deref' atomic_uint_least64_t[44129]))
                        gotoReturn _end_externT[505614] _end_externT[505614]
                      }
                      {
                        unknown call_tmp[606148] "expr temp" "maybe param" "maybe type" "temp"
                        (606151 'move' call_tmp[606148](44244 call real(64)[16] 32))
                        unknown call_tmp[606153] "expr temp" "maybe param" "maybe type" "temp"
                        (606156 'move' call_tmp[606153](44330 call == tmp[44264] call_tmp[606148]))
                        unknown call_tmp[606158] "expr temp" "maybe param" "maybe type" "temp"
                        (606161 'move' call_tmp[606158](44333 call _cond_test call_tmp[606153]))
                        if call_tmp[606158]
                        {
                          (505666 'move' ret[505616](505665 'deref' atomic__real32[44141]))
                          gotoReturn _end_externT[505614] _end_externT[505614]
                        }
                        {
                          unknown call_tmp[606163] "expr temp" "maybe param" "maybe type" "temp"
                          (606166 'move' call_tmp[606163](44255 call real(64)[16] 64))
                          unknown call_tmp[606168] "expr temp" "maybe param" "maybe type" "temp"
                          (606171 'move' call_tmp[606168](44337 call == tmp[44264] call_tmp[606163]))
                          unknown call_tmp[606173] "expr temp" "maybe param" "maybe type" "temp"
                          (606176 'move' call_tmp[606173](44340 call _cond_test call_tmp[606168]))
                          if call_tmp[606173]
                          {
                            (505671 'move' ret[505616](505670 'deref' atomic__real64[44135]))
                            gotoReturn _end_externT[505614] _end_externT[505614]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    label _end_externT[505614]
    (505618 return ret[505616])
  }
  function externTString[44351](arg T[44349]:_any[178](?)) param : _unknown[51] "private"
  {
    unknown ret[505677] "RVV" "param" "temp"
    unknown call_tmp[606178] "expr temp" "maybe param" "maybe type" "temp"
    (606181 'move' call_tmp[606178](44355 call == T[44349] bool[10]))
    unknown call_tmp[606183] "expr temp" "maybe param" "maybe type" "temp"
    (606186 'move' call_tmp[606183](44376 call _cond_test call_tmp[606178]))
    if call_tmp[606183]
    {
      (505682 'move' ret[505677](505681 'deref' "bool"))
      gotoReturn _end_externTString[505675] _end_externTString[505675]
    }
    unknown call_tmp[606188] "expr temp" "maybe param" "maybe type" "temp"
    (606191 'move' call_tmp[606188](44385 call isInt T[44349]))
    unknown call_tmp[606193] "expr temp" "maybe param" "maybe type" "temp"
    (606196 'move' call_tmp[606193](44433 call _cond_test call_tmp[606188]))
    if call_tmp[606193]
    {
      unknown call_tmp[606198] "expr temp" "maybe param" "maybe type" "temp"
      (606201 'move' call_tmp[606198](44406 call numBits T[44349]))
      unknown call_tmp[606203] "expr temp" "maybe param" "maybe type" "temp"
      (606206 'move' call_tmp[606203](44408 call _cast string[26] call_tmp[606198]))
      unknown call_tmp[606208] "expr temp" "maybe param" "maybe type" "temp"
      (606211 'move' call_tmp[606208](44410 call + "int_least" call_tmp[606203]))
      unknown call_tmp[606213] "expr temp" "maybe param" "maybe type" "temp"
      (606216 'move' call_tmp[606213](44429 call + call_tmp[606208] "_t"))
      (505687 'move' ret[505677](505686 'deref' call_tmp[606213]))
      gotoReturn _end_externTString[505675] _end_externTString[505675]
    }
    unknown call_tmp[606218] "expr temp" "maybe param" "maybe type" "temp"
    (606221 'move' call_tmp[606218](44441 call isUint T[44349]))
    unknown call_tmp[606223] "expr temp" "maybe param" "maybe type" "temp"
    (606226 'move' call_tmp[606223](44473 call _cond_test call_tmp[606218]))
    if call_tmp[606223]
    {
      unknown call_tmp[606228] "expr temp" "maybe param" "maybe type" "temp"
      (606231 'move' call_tmp[606228](44462 call numBits T[44349]))
      unknown call_tmp[606233] "expr temp" "maybe param" "maybe type" "temp"
      (606236 'move' call_tmp[606233](44464 call _cast string[26] call_tmp[606228]))
      unknown call_tmp[606238] "expr temp" "maybe param" "maybe type" "temp"
      (606241 'move' call_tmp[606238](44466 call + "uint_least" call_tmp[606233]))
      unknown call_tmp[606243] "expr temp" "maybe param" "maybe type" "temp"
      (606246 'move' call_tmp[606243](44469 call + call_tmp[606238] "_t"))
      (505692 'move' ret[505677](505691 'deref' call_tmp[606243]))
      gotoReturn _end_externTString[505675] _end_externTString[505675]
    }
    unknown call_tmp[606248] "expr temp" "maybe param" "maybe type" "temp"
    (606251 'move' call_tmp[606248](44481 call isReal T[44349]))
    unknown call_tmp[606253] "expr temp" "maybe param" "maybe type" "temp"
    (606256 'move' call_tmp[606253](44510 call _cond_test call_tmp[606248]))
    if call_tmp[606253]
    {
      unknown call_tmp[606258] "expr temp" "maybe param" "maybe type" "temp"
      (606261 'move' call_tmp[606258](44502 call numBits T[44349]))
      unknown call_tmp[606263] "expr temp" "maybe param" "maybe type" "temp"
      (606266 'move' call_tmp[606263](44504 call _cast string[26] call_tmp[606258]))
      unknown call_tmp[606268] "expr temp" "maybe param" "maybe type" "temp"
      (606271 'move' call_tmp[606268](44506 call + "_real" call_tmp[606263]))
      (505697 'move' ret[505677](505696 'deref' call_tmp[606268]))
      gotoReturn _end_externTString[505675] _end_externTString[505675]
    }
    label _end_externTString[505675]
    (505679 return ret[505677])
  }
  function externFunc[44523](param arg s[44520]:string[26], arg T[44525]:_any[178](?), param arg explicit[44528] :
  1 =
  1) param : _unknown[51] "private"
  {
    unknown ret[505703] "RVV" "param" "temp"
    unknown call_tmp[606273] "expr temp" "maybe param" "maybe type" "temp"
    (606276 'move' call_tmp[606273](44610 call _cond_test explicit[44528]))
    if call_tmp[606273]
    {
      unknown call_tmp[606278] "expr temp" "maybe param" "maybe type" "temp"
      (606281 'move' call_tmp[606278](44550 call + "atomic_" s[44520]))
      unknown call_tmp[606283] "expr temp" "maybe param" "maybe type" "temp"
      (606286 'move' call_tmp[606283](44569 call + call_tmp[606278] "_explicit_"))
      unknown call_tmp[606288] "expr temp" "maybe param" "maybe type" "temp"
      (606291 'move' call_tmp[606288](44574 call externTString T[44525]))
      unknown call_tmp[606293] "expr temp" "maybe param" "maybe type" "temp"
      (606296 'move' call_tmp[606293](44575 call + call_tmp[606283] call_tmp[606288]))
      (505708 'move' ret[505703](505707 'deref' call_tmp[606293]))
      gotoReturn _end_externFunc[505701] _end_externFunc[505701]
    }
    {
      unknown call_tmp[606298] "expr temp" "maybe param" "maybe type" "temp"
      (606301 'move' call_tmp[606298](44581 call + "atomic_" s[44520]))
      unknown call_tmp[606303] "expr temp" "maybe param" "maybe type" "temp"
      (606306 'move' call_tmp[606303](44600 call + call_tmp[606298] "_"))
      unknown call_tmp[606308] "expr temp" "maybe param" "maybe type" "temp"
      (606311 'move' call_tmp[606308](44605 call externTString T[44525]))
      unknown call_tmp[606313] "expr temp" "maybe param" "maybe type" "temp"
      (606316 'move' call_tmp[606313](44606 call + call_tmp[606303] call_tmp[606308]))
      (505713 'move' ret[505703](505712 'deref' call_tmp[606313]))
      gotoReturn _end_externFunc[505701] _end_externFunc[505701]
    }
    label _end_externFunc[505701]
    (505705 return ret[505703])
  }
  function chpl__processorAtomicType[44623](arg T[44621]:_any[178](?)) type : _unknown[51] "no doc"
  {
    unknown ret[505719] "RVV" "temp" "type variable"
    unknown call_tmp[606318] "expr temp" "maybe param" "maybe type" "temp"
    (606321 'move' call_tmp[606318](44627 call == T[44621] bool[10]))
    unknown call_tmp[606323] "expr temp" "maybe param" "maybe type" "temp"
    (606326 'move' call_tmp[606323](44675 call _cond_test call_tmp[606318]))
    if call_tmp[606323]
    {
      (505724 'move' ret[505719](505723 'deref' AtomicBool[45877]))
      gotoReturn _end_chpl__processorAtomicType[505717] _end_chpl__processorAtomicType[505717]
    }
    {
      unknown call_tmp[606328] "expr temp" "maybe param" "maybe type" "temp"
      (606331 'move' call_tmp[606328](44635 call isSupported T[44621]))
      unknown call_tmp[606333] "expr temp" "maybe param" "maybe type" "temp"
      (606336 'move' call_tmp[606333](44669 call _cond_test call_tmp[606328]))
      if call_tmp[606333]
      {
        unknown call_tmp[606338] "expr temp" "maybe param" "maybe type" "temp"
        (606341 'move' call_tmp[606338](44639 call AtomicT[48080](?) T[44621]))
        (505729 'move' ret[505719](505728 'deref' call_tmp[606338]))
        gotoReturn _end_chpl__processorAtomicType[505717] _end_chpl__processorAtomicType[505717]
      }
      {
        unknown call_tmp[606343] "expr temp" "maybe param" "maybe type" "temp"
        (606346 'move' call_tmp[606343](44662 call _cast string[26] T[44621]))
        unknown call_tmp[606348] "expr temp" "maybe param" "maybe type" "temp"
        (606351 'move' call_tmp[606348](44664 call + "Unsupported atomic type: " call_tmp[606343]))
        (44667 call compilerError call_tmp[606348])
      }
    }
    label _end_chpl__processorAtomicType[505717]
    (505721 return ret[505719])
  }
  function chpl__atomicType[44688](arg T[44686]:_any[178](?)) type : _unknown[51] "no doc"
  {
    unknown ret[505735] "RVV" "temp" "type variable"
    unknown call_tmp[606353] "expr temp" "maybe param" "maybe type" "temp"
    (606356 'move' call_tmp[606353](44692 call == CHPL_NETWORK_ATOMICS[21520] "none"))
    unknown call_tmp[606358] "expr temp" "maybe param" "maybe type" "temp"
    (606361 'move' call_tmp[606358](44708 call _cond_test call_tmp[606353]))
    if call_tmp[606358]
    {
      unknown call_tmp[606363] "expr temp" "maybe param" "maybe type" "temp"
      (606366 'move' call_tmp[606363](44697 call chpl__processorAtomicType T[44686]))
      (505740 'move' ret[505735](505739 'deref' call_tmp[606363]))
      gotoReturn _end_chpl__atomicType[505733] _end_chpl__atomicType[505733]
    }
    {
      unknown call_tmp[606368] "expr temp" "maybe param" "maybe type" "temp"
      (606371 'move' call_tmp[606368](44704 call chpl__networkAtomicType T[44686]))
      (505745 'move' ret[505735](505744 'deref' call_tmp[606368]))
      gotoReturn _end_chpl__atomicType[505733] _end_chpl__atomicType[505733]
    }
    label _end_chpl__atomicType[505733]
    (505737 return ret[505735])
  }
  function AtomicBool[45877].init_helper[44730](arg _mt[45881]:_MT[238], arg this[45879]:AtomicBool[45877], arg value[44727]:bool[10]) : _unknown[51] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    function atomic_init[44762](ref arg obj[44759] :
    (44758 call externT bool[10]), arg value[44765]:bool[10], arg _chpl_cname[44773]:string[26] =
    (44752 call externFunc "init" bool[10](explicit = 0))) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "fn synchronization free" "no return value for void"
    {
      unknown ret[505751] "RVV" "temp"
      (505753 return ret[505751])
    }
    { scopeless type
      void[4]
    }
    unknown call_tmp[606375] "expr temp" "maybe param" "maybe type" "temp"
    (606378 'move' call_tmp[606375](370913 call _v _mt[243] this[45879]))
    (44782 call atomic_init call_tmp[606375] value[44727])
    (505755 return _void[55])
  }
  function AtomicBool[45877].init[44788](arg _mt[45885]:_MT[238], ref arg this[45883]:AtomicBool[45877]) : void[4] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[454592] "temp"
    unknown call_tmp[606380] "expr temp" "maybe param" "maybe type" "temp"
    (606383 'move' call_tmp[606380](454595 call externT bool[10]))
    (454597 'default init var' tmp[454592] call_tmp[606380])
    (454599 '.=' this[45883] c"_v" tmp[454592])
    (474308 'end of statement')
    const default[44799] "dead at end of block" "const" "insert auto destroy"
    (540626 'default init var' default[44799] bool[10])
    (44802 'end of statement')
    (44806 call(370920 call (partial) init_helper _mt[243] this[45883]) default[44799])
    (474309 'end of statement' default[44799])
    (505757 return _void[55])
  }
  function AtomicBool[45877].init=[44816](arg _mt[45889]:_MT[238], ref arg this[45887]:AtomicBool[45877], arg other[44813]:AtomicBool[45877]) : void[4] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[454603] "temp"
    unknown call_tmp[606387] "expr temp" "maybe param" "maybe type" "temp"
    (606390 'move' call_tmp[606387](454606 call externT bool[10]))
    (454608 'default init var' tmp[454603] call_tmp[606387])
    (454610 '.=' this[45887] c"_v" tmp[454603])
    (474311 'end of statement')
    unknown call_tmp[606396] "expr temp" "maybe param" "maybe type" "temp"
    (606399 'move' call_tmp[606396](44832 call(44828 call (partial) read _mt[243] other[44813])))
    (44834 call(370926 call (partial) init_helper _mt[243] this[45887]) call_tmp[606396])
    (505759 return _void[55])
  }
  function AtomicBool[45877].init=[44844](arg _mt[45893]:_MT[238], ref arg this[45891]:AtomicBool[45877], arg other[44841]:bool[10]) : void[4] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[454614] "temp"
    unknown call_tmp[606401] "expr temp" "maybe param" "maybe type" "temp"
    (606404 'move' call_tmp[606401](454617 call externT bool[10]))
    (454619 'default init var' tmp[454614] call_tmp[606401])
    (454621 '.=' this[45891] c"_v" tmp[454614])
    (474313 'end of statement')
    (44857 call(370930 call (partial) init_helper _mt[243] this[45891]) other[44841])
    (505761 return _void[55])
  }
  function AtomicBool[45877].deinit[44863](arg _mt[45897]:_MT[238], arg this[45895]:AtomicBool[45877]) : _unknown[51] "atomic type" "destructor" "method" "primary method" "no doc" "no return value for void"
  {
    function atomic_destroy[44897](ref arg obj[44894] :
    (44893 call externT bool[10]), arg _chpl_cname[44904]:string[26] =
    (44887 call externFunc "destroy" bool[10](explicit = 0))) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "fn synchronization free" "no return value for void"
    {
      unknown ret[505765] "RVV" "temp"
      (505767 return ret[505765])
    }
    { scopeless type
      void[4]
    }
    const tmp[44918] "const" "temp"
    unknown call_tmp[606408] "expr temp" "maybe param" "maybe type" "temp"
    (606411 'move' call_tmp[606408](44915 '_wide_get_locale' this[45895]))
    (44920 'move' tmp[44918](44916 'deref' call_tmp[606408]))
    {
      unknown call_tmp[606415] "expr temp" "maybe param" "maybe type" "temp"
      (606418 'move' call_tmp[606415](370937 call _v _mt[243] this[45895]))
      (44913 call atomic_destroy call_tmp[606415])
      (44923 'on block' 0 tmp[44918])
    }
    (505769 return _void[55])
  }
  function AtomicBool[45877].read[44939](arg _mt[45901]:_MT[238], const arg this[45899]:AtomicBool[45877], param arg order[44935]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505779] "RVV" "temp"
    function atomic_load[44972](const  ref arg obj[44969] :
    (44968 call externT bool[10]), arg order[44975]:memory_order[186653], arg _chpl_cname[44983]:string[26] =
    (44962 call externFunc "load" bool[10])) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505773] "RVV" "temp"
      (505775 return ret[505773])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[44989] "dead at end of block" "insert auto destroy"
    (540628 'default init var' ret[44989] bool[10])
    (44992 'end of statement')
    const tmp[45009] "const" "temp"
    unknown call_tmp[606420] "expr temp" "maybe param" "maybe type" "temp"
    (606423 'move' call_tmp[606420](45006 '_wide_get_locale' this[45899]))
    (45011 'move' tmp[45009](45007 'deref' call_tmp[606420]))
    {
      unknown call_tmp[606427] "expr temp" "maybe param" "maybe type" "temp"
      (606430 'move' call_tmp[606427](370946 call _v _mt[243] this[45899]))
      unknown call_tmp[606432] "expr temp" "maybe param" "maybe type" "temp"
      (606435 'move' call_tmp[606432](45001 call c_memory_order order[44935]))
      unknown call_tmp[606437] "expr temp" "maybe param" "maybe type" "temp"
      (606440 'move' call_tmp[606437](45002 call atomic_load call_tmp[606427] call_tmp[606432]))
      (45003 call = ret[44989] call_tmp[606437])
      (474316 'end of statement' ret[44989])
      (45014 'on block' 0 tmp[45009])
    }
    (505785 'move' ret[505779](505784 'coerce' ret[44989] bool[10]))
    gotoReturn _end_read[505777] _end_read[505777]
    (474318 'end of statement' ret[44989])
    label _end_read[505777]
    (505781 return ret[505779])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45877].write[45029](arg _mt[45905]:_MT[238], arg this[45903]:AtomicBool[45877], arg value[45026]:bool[10], param arg order[45036]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[505797] "RVV" "temp"
    function atomic_store[45071](ref arg obj[45068] :
    (45067 call externT bool[10]), arg value[45074]:bool[10], arg order[45078]:memory_order[186653], arg _chpl_cname[45086]:string[26] =
    (45061 call externFunc "store" bool[10])) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505791] "RVV" "temp"
      (505793 return ret[505791])
    }
    { scopeless type
      void[4]
    }
    const tmp[45105] "const" "temp"
    unknown call_tmp[606442] "expr temp" "maybe param" "maybe type" "temp"
    (606445 'move' call_tmp[606442](45102 '_wide_get_locale' this[45903]))
    (45107 'move' tmp[45105](45103 'deref' call_tmp[606442]))
    {
      unknown call_tmp[606449] "expr temp" "maybe param" "maybe type" "temp"
      (606452 'move' call_tmp[606449](370956 call _v _mt[243] this[45903]))
      unknown call_tmp[606454] "expr temp" "maybe param" "maybe type" "temp"
      (606457 'move' call_tmp[606454](45099 call c_memory_order order[45036]))
      (45100 call atomic_store call_tmp[606449] value[45026] call_tmp[606454])
      (45110 'on block' 0 tmp[45105])
    }
    (505799 return ret[505797])
  }
  { scopeless type
    void[4]
  }
  function AtomicBool[45877].exchange[45122](arg _mt[45909]:_MT[238], arg this[45907]:AtomicBool[45877], arg value[45119]:bool[10], param arg order[45129]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505809] "RVV" "temp"
    function atomic_exchange[45164](ref arg obj[45161] :
    (45160 call externT bool[10]), arg value[45167]:bool[10], arg order[45171]:memory_order[186653], arg _chpl_cname[45179]:string[26] =
    (45154 call externFunc "exchange" bool[10])) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505803] "RVV" "temp"
      (505805 return ret[505803])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[45185] "dead at end of block" "insert auto destroy"
    (540630 'default init var' ret[45185] bool[10])
    (45188 'end of statement')
    const tmp[45206] "const" "temp"
    unknown call_tmp[606459] "expr temp" "maybe param" "maybe type" "temp"
    (606462 'move' call_tmp[606459](45203 '_wide_get_locale' this[45907]))
    (45208 'move' tmp[45206](45204 'deref' call_tmp[606459]))
    {
      unknown call_tmp[606466] "expr temp" "maybe param" "maybe type" "temp"
      (606469 'move' call_tmp[606466](370967 call _v _mt[243] this[45907]))
      unknown call_tmp[606471] "expr temp" "maybe param" "maybe type" "temp"
      (606474 'move' call_tmp[606471](45198 call c_memory_order order[45129]))
      unknown call_tmp[606476] "expr temp" "maybe param" "maybe type" "temp"
      (606479 'move' call_tmp[606476](45199 call atomic_exchange call_tmp[606466] value[45119] call_tmp[606471]))
      (45200 call = ret[45185] call_tmp[606476])
      (474321 'end of statement' ret[45185])
      (45211 'on block' 0 tmp[45206])
    }
    (505815 'move' ret[505809](505814 'coerce' ret[45185] bool[10]))
    gotoReturn _end_exchange[505807] _end_exchange[505807]
    (474323 'end of statement' ret[45185])
    label _end_exchange[505807]
    (505811 return ret[505809])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45877].compareExchange[45226](arg _mt[45913]:_MT[238], arg this[45911]:AtomicBool[45877], ref arg expected[45223]:bool[10], arg desired[45229]:bool[10], param arg order[45237]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505821] "RVV" "temp"
    unknown call_tmp[606483] "expr temp" "maybe param" "maybe type" "temp"
    (606486 'move' call_tmp[606483](45255 call readableOrder order[45237]))
    unknown call_tmp[606488] "expr temp" "maybe param" "maybe type" "temp"
    (606491 'move' call_tmp[606488](45256 call(45245 call (partial) compareExchange _mt[243] this[45911]) expected[45223] desired[45229] order[45237] call_tmp[606483]))
    (505827 'move' ret[505821](505826 'coerce' call_tmp[606488] bool[10]))
    (505823 return ret[505821])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45877].compareExchange[45269](arg _mt[45917]:_MT[238], arg this[45915]:AtomicBool[45877], ref arg expected[45266]:bool[10], arg desired[45272]:bool[10], param arg success[45276]:memoryOrder[187012], param arg failure[45280]:memoryOrder[187012]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505837] "RVV" "temp"
    function atomic_compare_exchange_strong[45314](ref arg obj[45311] :
    (45310 call externT bool[10]), ref arg expected[45317]:bool[10], arg desired[45321]:bool[10], arg succ[45325]:memory_order[186653], arg fail[45329]:memory_order[186653], arg _chpl_cname[45337]:string[26] =
    (45304 call externFunc "compare_exchange_strong" bool[10])) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505831] "RVV" "temp"
      (505833 return ret[505831])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[45343] "dead at end of block" "insert auto destroy"
    (540632 'default init var' ret[45343] bool[10])
    (45346 'end of statement')
    const tmp[45388] "const" "temp"
    unknown call_tmp[606493] "expr temp" "maybe param" "maybe type" "temp"
    (606496 'move' call_tmp[606493](45385 '_wide_get_locale' this[45915]))
    (45390 'move' tmp[45388](45386 'deref' call_tmp[606493]))
    {
      {
        unknown localizedExpected[45349] "dead at end of block" "insert auto destroy"
        (540634 'init var' localizedExpected[45349] expected[45266])
        (45352 'end of statement')
        unknown call_tmp[606500] "expr temp" "maybe param" "maybe type" "temp"
        (606503 'move' call_tmp[606500](370987 call _v _mt[243] this[45915]))
        unknown call_tmp[606505] "expr temp" "maybe param" "maybe type" "temp"
        (606508 'move' call_tmp[606505](45363 call c_memory_order success[45276]))
        unknown call_tmp[606510] "expr temp" "maybe param" "maybe type" "temp"
        (606513 'move' call_tmp[606510](45367 call c_memory_order failure[45280]))
        unknown call_tmp[606515] "expr temp" "maybe param" "maybe type" "temp"
        (606518 'move' call_tmp[606515](45368 call atomic_compare_exchange_strong call_tmp[606500] localizedExpected[45349] desired[45272] call_tmp[606505] call_tmp[606510]))
        (45369 call = ret[45343] call_tmp[606515])
        (474326 'end of statement' ret[45343] localizedExpected[45349])
        unknown call_tmp[606520] "expr temp" "maybe param" "maybe type" "temp"
        (606523 'move' call_tmp[606520](45373 call ! ret[45343]))
        unknown call_tmp[606525] "expr temp" "maybe param" "maybe type" "temp"
        (606528 'move' call_tmp[606525](45380 call _cond_test call_tmp[606520]))
        if call_tmp[606525]
        {
          (45377 call = expected[45266] localizedExpected[45349])
          (474329 'end of statement' localizedExpected[45349])
        }
      }
      (45393 'on block' 0 tmp[45388])
    }
    (505843 'move' ret[505837](505842 'coerce' ret[45343] bool[10]))
    gotoReturn _end_compareExchange[505835] _end_compareExchange[505835]
    (474331 'end of statement' ret[45343])
    label _end_compareExchange[505835]
    (505839 return ret[505837])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45877].compareExchangeWeak[45408](arg _mt[45921]:_MT[238], arg this[45919]:AtomicBool[45877], ref arg expected[45405]:bool[10], arg desired[45411]:bool[10], param arg order[45419]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505849] "RVV" "temp"
    unknown call_tmp[606532] "expr temp" "maybe param" "maybe type" "temp"
    (606535 'move' call_tmp[606532](45437 call readableOrder order[45419]))
    unknown call_tmp[606537] "expr temp" "maybe param" "maybe type" "temp"
    (606540 'move' call_tmp[606537](45438 call(45427 call (partial) compareExchangeWeak _mt[243] this[45919]) expected[45405] desired[45411] order[45419] call_tmp[606532]))
    (505855 'move' ret[505849](505854 'coerce' call_tmp[606537] bool[10]))
    (505851 return ret[505849])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45877].compareExchangeWeak[45451](arg _mt[45925]:_MT[238], arg this[45923]:AtomicBool[45877], ref arg expected[45448]:bool[10], arg desired[45454]:bool[10], param arg success[45458]:memoryOrder[187012], param arg failure[45462]:memoryOrder[187012]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505865] "RVV" "temp"
    function atomic_compare_exchange_weak[45495](ref arg obj[45492] :
    (45491 call externT bool[10]), ref arg expected[45498]:bool[10], arg desired[45502]:bool[10], arg succ[45506]:memory_order[186653], arg fail[45510]:memory_order[186653], arg _chpl_cname[45518]:string[26] =
    (45485 call externFunc "compare_exchange_weak" bool[10])) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505859] "RVV" "temp"
      (505861 return ret[505859])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[45524] "dead at end of block" "insert auto destroy"
    (540636 'default init var' ret[45524] bool[10])
    (45527 'end of statement')
    const tmp[45569] "const" "temp"
    unknown call_tmp[606542] "expr temp" "maybe param" "maybe type" "temp"
    (606545 'move' call_tmp[606542](45566 '_wide_get_locale' this[45923]))
    (45571 'move' tmp[45569](45567 'deref' call_tmp[606542]))
    {
      {
        unknown localizedExpected[45530] "dead at end of block" "insert auto destroy"
        (540638 'init var' localizedExpected[45530] expected[45448])
        (45533 'end of statement')
        unknown call_tmp[606549] "expr temp" "maybe param" "maybe type" "temp"
        (606552 'move' call_tmp[606549](371012 call _v _mt[243] this[45923]))
        unknown call_tmp[606554] "expr temp" "maybe param" "maybe type" "temp"
        (606557 'move' call_tmp[606554](45544 call c_memory_order success[45458]))
        unknown call_tmp[606559] "expr temp" "maybe param" "maybe type" "temp"
        (606562 'move' call_tmp[606559](45548 call c_memory_order failure[45462]))
        unknown call_tmp[606564] "expr temp" "maybe param" "maybe type" "temp"
        (606567 'move' call_tmp[606564](45549 call atomic_compare_exchange_weak call_tmp[606549] localizedExpected[45530] desired[45454] call_tmp[606554] call_tmp[606559]))
        (45550 call = ret[45524] call_tmp[606564])
        (474334 'end of statement' ret[45524] localizedExpected[45530])
        unknown call_tmp[606569] "expr temp" "maybe param" "maybe type" "temp"
        (606572 'move' call_tmp[606569](45554 call ! ret[45524]))
        unknown call_tmp[606574] "expr temp" "maybe param" "maybe type" "temp"
        (606577 'move' call_tmp[606574](45561 call _cond_test call_tmp[606569]))
        if call_tmp[606574]
        {
          (45558 call = expected[45448] localizedExpected[45530])
          (474337 'end of statement' localizedExpected[45530])
        }
      }
      (45574 'on block' 0 tmp[45569])
    }
    (505870 'move' ret[505865](505869 'deref' ret[45524]))
    gotoReturn _end_compareExchangeWeak[505863] _end_compareExchangeWeak[505863]
    (474339 'end of statement' ret[45524])
    label _end_compareExchangeWeak[505863]
    (505867 return ret[505865])
  }
  function AtomicBool[45877].compareAndSwap[45588](arg _mt[45929]:_MT[238], arg this[45927]:AtomicBool[45877], arg expected[45585]:bool[10], arg desired[45591]:bool[10], param arg order[45599]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505882] "RVV" "temp"
    function atomic_compare_exchange_strong[45618](ref arg obj[45615] :
    (45614 call externT bool[10]), ref arg expected[45621]:bool[10], arg desired[45625]:bool[10], arg succ[45629]:memory_order[186653], arg fail[45633]:memory_order[186653], arg _chpl_cname[45641]:string[26] =
    (45608 call externFunc "compare_exchange_strong" bool[10])) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505876] "RVV" "temp"
      (505878 return ret[505876])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[45647] "dead at end of block" "insert auto destroy"
    (540640 'default init var' ret[45647] bool[10])
    (45650 'end of statement')
    const tmp[45682] "const" "temp"
    unknown call_tmp[606579] "expr temp" "maybe param" "maybe type" "temp"
    (606582 'move' call_tmp[606579](45679 '_wide_get_locale' this[45927]))
    (45684 'move' tmp[45682](45680 'deref' call_tmp[606579]))
    {
      {
        unknown mutableExpected[45653] "dead at end of block" "insert auto destroy"
        (540642 'init var' mutableExpected[45653] expected[45585])
        (45656 'end of statement')
        unknown call_tmp[606586] "expr temp" "maybe param" "maybe type" "temp"
        (606589 'move' call_tmp[606586](371031 call _v _mt[243] this[45927]))
        unknown call_tmp[606591] "expr temp" "maybe param" "maybe type" "temp"
        (606594 'move' call_tmp[606591](45667 call c_memory_order order[45599]))
        unknown call_tmp[606596] "expr temp" "maybe param" "maybe type" "temp"
        (606599 'move' call_tmp[606596](45672 call readableOrder order[45599]))
        unknown call_tmp[606601] "expr temp" "maybe param" "maybe type" "temp"
        (606604 'move' call_tmp[606601](45674 call c_memory_order call_tmp[606596]))
        unknown call_tmp[606606] "expr temp" "maybe param" "maybe type" "temp"
        (606609 'move' call_tmp[606606](45675 call atomic_compare_exchange_strong call_tmp[606586] mutableExpected[45653] desired[45591] call_tmp[606591] call_tmp[606601]))
        (45676 call = ret[45647] call_tmp[606606])
        (474341 'end of statement' ret[45647] mutableExpected[45653])
      }
      (45687 'on block' 0 tmp[45682])
    }
    (505888 'move' ret[505882](505887 'coerce' ret[45647] bool[10]))
    gotoReturn _end_compareAndSwap[505880] _end_compareAndSwap[505880]
    (474344 'end of statement' ret[45647])
    label _end_compareAndSwap[505880]
    (505884 return ret[505882])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45877].testAndSet[45707](arg _mt[45933]:_MT[238], arg this[45931]:AtomicBool[45877], param arg order[45703]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505894] "RVV" "temp"
    unknown call_tmp[606613] "expr temp" "maybe param" "maybe type" "temp"
    (606616 'move' call_tmp[606613](45717 call(45711 call (partial) exchange _mt[243] this[45931]) 1 order[45703]))
    (505900 'move' ret[505894](505899 'coerce' call_tmp[606613] bool[10]))
    (505896 return ret[505894])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45877].clear[45735](arg _mt[45937]:_MT[238], arg this[45935]:AtomicBool[45877], param arg order[45731]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[505904] "RVV" "temp"
    (45745 call(45739 call (partial) write _mt[243] this[45935]) 0 order[45731])
    (505906 return ret[505904])
  }
  { scopeless type
    void[4]
  }
  function AtomicBool[45877].waitFor[45757](arg _mt[45941]:_MT[238], const arg this[45939]:AtomicBool[45877], arg value[45754]:bool[10], param arg order[45764]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[505910] "RVV" "temp"
    const tmp[45848] "const" "temp"
    unknown call_tmp[606620] "expr temp" "maybe param" "maybe type" "temp"
    (606623 'move' call_tmp[606620](45845 '_wide_get_locale' this[45939]))
    (45850 'move' tmp[45848](45846 'deref' call_tmp[606620]))
    {
      {
        {
          unknown tmp[45791] "temp"
          unknown call_tmp[606627] "expr temp" "maybe param" "maybe type" "temp"
          (606630 'move' call_tmp[606627](45826 call(45823 call (partial) read _mt[243] this[45939])(order = relaxed[187010])))
          unknown call_tmp[606632] "expr temp" "maybe param" "maybe type" "temp"
          (606635 'move' call_tmp[606632](45821 call != call_tmp[606627] value[45754]))
          (45833 'move' tmp[45791](45819 call _cond_test call_tmp[606632]))
          WhileDo[45796]
          {
            {
              (45788 call chpl_task_yield)
            }
            label _continueLabel[45794]
            unknown call_tmp[606639] "expr temp" "maybe param" "maybe type" "temp"
            (606642 'move' call_tmp[606639](45807 call(45804 call (partial) read _mt[243] this[45939])(order = relaxed[187010])))
            unknown call_tmp[606644] "expr temp" "maybe param" "maybe type" "temp"
            (606647 'move' call_tmp[606644](45802 call != call_tmp[606639] value[45754]))
            (45814 'move' tmp[45791](45800 call _cond_test call_tmp[606644]))
            tmp[45791]
          }
          label _breakLabel[45795]
        }
        unknown call_tmp[606649] "expr temp" "maybe param" "maybe type" "temp"
        (606652 'move' call_tmp[606649](45841 call c_memory_order order[45764]))
        (45843 call chpl_atomic_thread_fence call_tmp[606649])
      }
      (45853 'on block' 0 tmp[45848])
    }
    (505912 return ret[505910])
  }
  { scopeless type
    void[4]
  }
  function AtomicBool[45877].writeThis[45864](arg _mt[45945]:_MT[238], const arg this[45943]:AtomicBool[45877], arg x[45862]:_any[178](?)) : _unknown[51] throws "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[606656] "expr temp" "maybe param" "maybe type" "temp"
    (606659 'move' call_tmp[606656](45869 call(371050 call (partial) read _mt[243] this[45943])))
    (45870 call <~> x[45862] call_tmp[606656])
    (505914 return _void[55])
  }
  type AtomicBool[45877] unknown _v[44720] "no doc"(44719 call externT bool[10])
  function AtomicT[48080](?).init_helper[45966](arg _mt[48084]:_MT[238], arg this[48082]:AtomicT[48080](?), arg value[45963] :
  (371056 call T _mt[243] this[48082])) : _unknown[51] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    function atomic_init[45984](ref arg obj[45981] :
    unknown call_tmp[606665] "expr temp" "maybe param" "maybe type" "temp", arg value[45987] :
    (371071 call T _mt[243] this[48082]), arg _chpl_cname[45995]:string[26] =
    unknown call_tmp[606674] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "fn synchronization free" "no return value for void"
    {
      unknown ret[505918] "RVV" "temp"
      (505920 return ret[505918])
    }
    { scopeless type
      void[4]
    }
    unknown call_tmp[606681] "expr temp" "maybe param" "maybe type" "temp"
    (606684 'move' call_tmp[606681](371076 call _v _mt[243] this[48082]))
    (46004 call atomic_init call_tmp[606681] value[45963])
    (505922 return _void[55])
  }
  function AtomicT[48080](?).init[46012](arg _mt[48088]:_MT[238], ref arg this[48086]:AtomicT[48080](?), arg T[46010]:_any[178](?)) : void[4] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[454625] "temp" "type variable"
    (454627 'move' tmp[454625] T[46010])
    (454629 'init field' this[48086] c"T" tmp[454625])
    (474352 'end of statement')
    unknown tmp[454633] "temp"
    unknown call_tmp[606686] "expr temp" "maybe param" "maybe type" "temp"
    (606689 'move' call_tmp[606686](454644 '.v' this[48086] c"T"))
    unknown call_tmp[606691] "expr temp" "maybe param" "maybe type" "temp"
    (606694 'move' call_tmp[606691](454636 call externT call_tmp[606686]))
    (454638 'default init var' tmp[454633] call_tmp[606691])
    (454640 '.=' this[48086] c"_v" tmp[454633])
    (474353 'end of statement')
    const default[46033] "dead at end of block" "const" "insert auto destroy"
    (540644 'default init var' default[46033] T[46010])
    (46036 'end of statement')
    (46040 call(371083 call (partial) init_helper _mt[243] this[48086]) default[46033])
    (474354 'end of statement' default[46033])
    (505924 return _void[55])
  }
  function AtomicT[48080](?).init=[46051](arg _mt[48092]:_MT[238], ref arg this[48090]:AtomicT[48080](?), const  ref arg other[46048]:AtomicT[48080](?)) : void[4] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[454647] "temp" "type variable"
    (454649 'move' tmp[454647](46058 call T _mt[243] other[46048]))
    (454651 'init field' this[48090] c"T" tmp[454647])
    (474356 'end of statement')
    unknown tmp[454655] "temp"
    unknown call_tmp[606700] "expr temp" "maybe param" "maybe type" "temp"
    (606703 'move' call_tmp[606700](454666 '.v' this[48090] c"T"))
    unknown call_tmp[606705] "expr temp" "maybe param" "maybe type" "temp"
    (606708 'move' call_tmp[606705](454658 call externT call_tmp[606700]))
    (454660 'default init var' tmp[454655] call_tmp[606705])
    (454662 '.=' this[48090] c"_v" tmp[454655])
    (474357 'end of statement')
    unknown call_tmp[606714] "expr temp" "maybe param" "maybe type" "temp"
    (606717 'move' call_tmp[606714](46078 call(46074 call (partial) read _mt[243] other[46048])))
    (46080 call(371089 call (partial) init_helper _mt[243] this[48090]) call_tmp[606714])
    (505926 return _void[55])
  }
  function AtomicT[48080](?).init=[46094](arg _mt[48096]:_MT[238], ref arg this[48094]:AtomicT[48080](?), arg other[46091] :
  unknown call_tmp[606719] "expr temp" "maybe param" "maybe type" "temp" "type variable") : void[4] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[454669] "temp" "type variable"
    (454671 'move' tmp[454669](46101 'typeof' other[46091]))
    (454673 'init field' this[48094] c"T" tmp[454669])
    (474359 'end of statement')
    unknown tmp[454677] "temp"
    unknown call_tmp[606726] "expr temp" "maybe param" "maybe type" "temp"
    (606729 'move' call_tmp[606726](454688 '.v' this[48094] c"T"))
    unknown call_tmp[606731] "expr temp" "maybe param" "maybe type" "temp"
    (606734 'move' call_tmp[606731](454680 call externT call_tmp[606726]))
    (454682 'default init var' tmp[454677] call_tmp[606731])
    (454684 '.=' this[48094] c"_v" tmp[454677])
    (474360 'end of statement')
    (46116 call(371095 call (partial) init_helper _mt[243] this[48094]) other[46091])
    (505928 return _void[55])
  }
  function AtomicT[48080](?).deinit[46122](arg _mt[48100]:_MT[238], arg this[48098]:AtomicT[48080](?)) : _unknown[51] "atomic type" "destructor" "method" "primary method" "no doc" "no return value for void"
  {
    function atomic_destroy[46140](ref arg obj[46137] :
    unknown call_tmp[606740] "expr temp" "maybe param" "maybe type" "temp", arg _chpl_cname[46147]:string[26] =
    unknown call_tmp[606747] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "fn synchronization free" "no return value for void"
    {
      unknown ret[505932] "RVV" "temp"
      (505934 return ret[505932])
    }
    { scopeless type
      void[4]
    }
    const tmp[46161] "const" "temp"
    unknown call_tmp[606752] "expr temp" "maybe param" "maybe type" "temp"
    (606755 'move' call_tmp[606752](46158 '_wide_get_locale' this[48098]))
    (46163 'move' tmp[46161](46159 'deref' call_tmp[606752]))
    {
      unknown call_tmp[606759] "expr temp" "maybe param" "maybe type" "temp"
      (606762 'move' call_tmp[606759](371112 call _v _mt[243] this[48098]))
      (46156 call atomic_destroy call_tmp[606759])
      (46166 'on block' 0 tmp[46161])
    }
    (505936 return _void[55])
  }
  function AtomicT[48080](?).read[46182](arg _mt[48104]:_MT[238], const arg this[48102]:AtomicT[48080](?), param arg order[46178]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505946] "RVV" "temp"
    function atomic_load[46199](const  ref arg obj[46196] :
    unknown call_tmp[606766] "expr temp" "maybe param" "maybe type" "temp", arg order[46202]:memory_order[186653], arg _chpl_cname[46210]:string[26] =
    unknown call_tmp[606773] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505940] "RVV" "temp"
      (505942 return ret[505940])
    }
    { scopeless type
      (371134 call T _mt[243] this[48102])
    }
    unknown ret[46216] "dead at end of block" "insert auto destroy"
    unknown call_tmp[606782] "expr temp" "maybe param" "maybe type" "temp"
    (606785 'move' call_tmp[606782](371139 call T _mt[243] this[48102]))
    (540646 'default init var' ret[46216] call_tmp[606782])
    (46219 'end of statement')
    const tmp[46236] "const" "temp"
    unknown call_tmp[606787] "expr temp" "maybe param" "maybe type" "temp"
    (606790 'move' call_tmp[606787](46233 '_wide_get_locale' this[48102]))
    (46238 'move' tmp[46236](46234 'deref' call_tmp[606787]))
    {
      unknown call_tmp[606794] "expr temp" "maybe param" "maybe type" "temp"
      (606797 'move' call_tmp[606794](371146 call _v _mt[243] this[48102]))
      unknown call_tmp[606799] "expr temp" "maybe param" "maybe type" "temp"
      (606802 'move' call_tmp[606799](46228 call c_memory_order order[46178]))
      unknown call_tmp[606804] "expr temp" "maybe param" "maybe type" "temp"
      (606807 'move' call_tmp[606804](46229 call atomic_load call_tmp[606794] call_tmp[606799]))
      (46230 call = ret[46216] call_tmp[606804])
      (474363 'end of statement' ret[46216])
      (46241 'on block' 0 tmp[46236])
    }
    unknown call_tmp[606811] "expr temp" "maybe param" "maybe type" "temp"
    (606814 'move' call_tmp[606811](505951 call T _mt[243] this[48102]))
    (505955 'move' ret[505946](505954 'coerce' ret[46216] call_tmp[606811]))
    gotoReturn _end_read[505944] _end_read[505944]
    (474365 'end of statement' ret[46216])
    label _end_read[505944]
    (505948 return ret[505946])
  }
  { scopeless type
    (371118 call T _mt[243] this[48102])
  }
  function AtomicT[48080](?).write[46256](arg _mt[48108]:_MT[238], arg this[48106]:AtomicT[48080](?), arg value[46253] :
  (371153 call T _mt[243] this[48106]), param arg order[46263]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[505967] "RVV" "temp"
    function atomic_store[46282](ref arg obj[46279] :
    unknown call_tmp[606822] "expr temp" "maybe param" "maybe type" "temp", arg value[46285] :
    (371169 call T _mt[243] this[48106]), arg order[46289]:memory_order[186653], arg _chpl_cname[46297]:string[26] =
    unknown call_tmp[606831] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505961] "RVV" "temp"
      (505963 return ret[505961])
    }
    { scopeless type
      void[4]
    }
    const tmp[46316] "const" "temp"
    unknown call_tmp[606836] "expr temp" "maybe param" "maybe type" "temp"
    (606839 'move' call_tmp[606836](46313 '_wide_get_locale' this[48106]))
    (46318 'move' tmp[46316](46314 'deref' call_tmp[606836]))
    {
      unknown call_tmp[606843] "expr temp" "maybe param" "maybe type" "temp"
      (606846 'move' call_tmp[606843](371176 call _v _mt[243] this[48106]))
      unknown call_tmp[606848] "expr temp" "maybe param" "maybe type" "temp"
      (606851 'move' call_tmp[606848](46310 call c_memory_order order[46263]))
      (46311 call atomic_store call_tmp[606843] value[46253] call_tmp[606848])
      (46321 'on block' 0 tmp[46316])
    }
    (505969 return ret[505967])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48080](?).exchange[46333](arg _mt[48112]:_MT[238], arg this[48110]:AtomicT[48080](?), arg value[46330] :
  (371183 call T _mt[243] this[48110]), param arg order[46340]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505979] "RVV" "temp"
    function atomic_exchange[46359](ref arg obj[46356] :
    unknown call_tmp[606857] "expr temp" "maybe param" "maybe type" "temp", arg value[46362] :
    (371204 call T _mt[243] this[48110]), arg order[46366]:memory_order[186653], arg _chpl_cname[46374]:string[26] =
    unknown call_tmp[606866] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505973] "RVV" "temp"
      (505975 return ret[505973])
    }
    { scopeless type
      (371210 call T _mt[243] this[48110])
    }
    unknown ret[46380] "dead at end of block" "insert auto destroy"
    unknown call_tmp[606875] "expr temp" "maybe param" "maybe type" "temp"
    (606878 'move' call_tmp[606875](371215 call T _mt[243] this[48110]))
    (540648 'default init var' ret[46380] call_tmp[606875])
    (46383 'end of statement')
    const tmp[46401] "const" "temp"
    unknown call_tmp[606880] "expr temp" "maybe param" "maybe type" "temp"
    (606883 'move' call_tmp[606880](46398 '_wide_get_locale' this[48110]))
    (46403 'move' tmp[46401](46399 'deref' call_tmp[606880]))
    {
      unknown call_tmp[606887] "expr temp" "maybe param" "maybe type" "temp"
      (606890 'move' call_tmp[606887](371222 call _v _mt[243] this[48110]))
      unknown call_tmp[606892] "expr temp" "maybe param" "maybe type" "temp"
      (606895 'move' call_tmp[606892](46393 call c_memory_order order[46340]))
      unknown call_tmp[606897] "expr temp" "maybe param" "maybe type" "temp"
      (606900 'move' call_tmp[606897](46394 call atomic_exchange call_tmp[606887] value[46330] call_tmp[606892]))
      (46395 call = ret[46380] call_tmp[606897])
      (474368 'end of statement' ret[46380])
      (46406 'on block' 0 tmp[46401])
    }
    unknown call_tmp[606904] "expr temp" "maybe param" "maybe type" "temp"
    (606907 'move' call_tmp[606904](505984 call T _mt[243] this[48110]))
    (505988 'move' ret[505979](505987 'coerce' ret[46380] call_tmp[606904]))
    gotoReturn _end_exchange[505977] _end_exchange[505977]
    (474370 'end of statement' ret[46380])
    label _end_exchange[505977]
    (505981 return ret[505979])
  }
  { scopeless type
    (371189 call T _mt[243] this[48110])
  }
  function AtomicT[48080](?).compareExchange[46421](arg _mt[48116]:_MT[238], arg this[48114]:AtomicT[48080](?), ref arg expected[46418] :
  (371230 call T _mt[243] this[48114]), arg desired[46424] :
  (371235 call T _mt[243] this[48114]), param arg order[46432]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505994] "RVV" "temp"
    unknown call_tmp[606917] "expr temp" "maybe param" "maybe type" "temp"
    (606920 'move' call_tmp[606917](46448 call readableOrder order[46432]))
    unknown call_tmp[606922] "expr temp" "maybe param" "maybe type" "temp"
    (606925 'move' call_tmp[606922](46449 call(46438 call (partial) compareExchange _mt[243] this[48114]) expected[46418] desired[46424] order[46432] call_tmp[606917]))
    (506000 'move' ret[505994](505999 'coerce' call_tmp[606922] bool[10]))
    (505996 return ret[505994])
  }
  { scopeless type
    bool[10]
  }
  function AtomicT[48080](?).compareExchange[46462](arg _mt[48120]:_MT[238], arg this[48118]:AtomicT[48080](?), ref arg expected[46459] :
  (371245 call T _mt[243] this[48118]), arg desired[46465] :
  (371250 call T _mt[243] this[48118]), param arg success[46469]:memoryOrder[187012], param arg failure[46473]:memoryOrder[187012]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506010] "RVV" "temp"
    function atomic_compare_exchange_strong[46491](ref arg obj[46488] :
    unknown call_tmp[606933] "expr temp" "maybe param" "maybe type" "temp", ref arg expected[46494] :
    (371267 call T _mt[243] this[48118]), arg desired[46498] :
    (371272 call T _mt[243] this[48118]), arg succ[46502]:memory_order[186653], arg fail[46506]:memory_order[186653], arg _chpl_cname[46514]:string[26] =
    unknown call_tmp[606944] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506004] "RVV" "temp"
      (506006 return ret[506004])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[46520] "dead at end of block" "insert auto destroy"
    (540650 'default init var' ret[46520] bool[10])
    (46523 'end of statement')
    const tmp[46565] "const" "temp"
    unknown call_tmp[606949] "expr temp" "maybe param" "maybe type" "temp"
    (606952 'move' call_tmp[606949](46562 '_wide_get_locale' this[48118]))
    (46567 'move' tmp[46565](46563 'deref' call_tmp[606949]))
    {
      {
        unknown localizedExpected[46526] "dead at end of block" "insert auto destroy"
        (540652 'init var' localizedExpected[46526] expected[46459])
        (46529 'end of statement')
        unknown call_tmp[606956] "expr temp" "maybe param" "maybe type" "temp"
        (606959 'move' call_tmp[606956](371282 call _v _mt[243] this[48118]))
        unknown call_tmp[606961] "expr temp" "maybe param" "maybe type" "temp"
        (606964 'move' call_tmp[606961](46540 call c_memory_order success[46469]))
        unknown call_tmp[606966] "expr temp" "maybe param" "maybe type" "temp"
        (606969 'move' call_tmp[606966](46544 call c_memory_order failure[46473]))
        unknown call_tmp[606971] "expr temp" "maybe param" "maybe type" "temp"
        (606974 'move' call_tmp[606971](46545 call atomic_compare_exchange_strong call_tmp[606956] localizedExpected[46526] desired[46465] call_tmp[606961] call_tmp[606966]))
        (46546 call = ret[46520] call_tmp[606971])
        (474373 'end of statement' ret[46520] localizedExpected[46526])
        unknown call_tmp[606976] "expr temp" "maybe param" "maybe type" "temp"
        (606979 'move' call_tmp[606976](46550 call ! ret[46520]))
        unknown call_tmp[606981] "expr temp" "maybe param" "maybe type" "temp"
        (606984 'move' call_tmp[606981](46557 call _cond_test call_tmp[606976]))
        if call_tmp[606981]
        {
          (46554 call = expected[46459] localizedExpected[46526])
          (474376 'end of statement' localizedExpected[46526])
        }
      }
      (46570 'on block' 0 tmp[46565])
    }
    (506016 'move' ret[506010](506015 'coerce' ret[46520] bool[10]))
    gotoReturn _end_compareExchange[506008] _end_compareExchange[506008]
    (474378 'end of statement' ret[46520])
    label _end_compareExchange[506008]
    (506012 return ret[506010])
  }
  { scopeless type
    bool[10]
  }
  function AtomicT[48080](?).compareExchangeWeak[46585](arg _mt[48124]:_MT[238], arg this[48122]:AtomicT[48080](?), ref arg expected[46582] :
  (371295 call T _mt[243] this[48122]), arg desired[46588] :
  (371300 call T _mt[243] this[48122]), param arg order[46596]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506022] "RVV" "temp"
    unknown call_tmp[606992] "expr temp" "maybe param" "maybe type" "temp"
    (606995 'move' call_tmp[606992](46612 call readableOrder order[46596]))
    unknown call_tmp[606997] "expr temp" "maybe param" "maybe type" "temp"
    (607000 'move' call_tmp[606997](46613 call(46602 call (partial) compareExchangeWeak _mt[243] this[48122]) expected[46582] desired[46588] order[46596] call_tmp[606992]))
    (506028 'move' ret[506022](506027 'coerce' call_tmp[606997] bool[10]))
    (506024 return ret[506022])
  }
  { scopeless type
    bool[10]
  }
  function AtomicT[48080](?).compareExchangeWeak[46626](arg _mt[48128]:_MT[238], arg this[48126]:AtomicT[48080](?), ref arg expected[46623] :
  (371310 call T _mt[243] this[48126]), arg desired[46629] :
  (371315 call T _mt[243] this[48126]), param arg success[46633]:memoryOrder[187012], param arg failure[46637]:memoryOrder[187012]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506038] "RVV" "temp"
    function atomic_compare_exchange_weak[46655](ref arg obj[46652] :
    unknown call_tmp[607008] "expr temp" "maybe param" "maybe type" "temp", ref arg expected[46658] :
    (371332 call T _mt[243] this[48126]), arg desired[46662] :
    (371337 call T _mt[243] this[48126]), arg succ[46666]:memory_order[186653], arg fail[46670]:memory_order[186653], arg _chpl_cname[46678]:string[26] =
    unknown call_tmp[607019] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506032] "RVV" "temp"
      (506034 return ret[506032])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[46684] "dead at end of block" "insert auto destroy"
    (540654 'default init var' ret[46684] bool[10])
    (46687 'end of statement')
    const tmp[46729] "const" "temp"
    unknown call_tmp[607024] "expr temp" "maybe param" "maybe type" "temp"
    (607027 'move' call_tmp[607024](46726 '_wide_get_locale' this[48126]))
    (46731 'move' tmp[46729](46727 'deref' call_tmp[607024]))
    {
      {
        unknown localizedExpected[46690] "dead at end of block" "insert auto destroy"
        (540656 'init var' localizedExpected[46690] expected[46623])
        (46693 'end of statement')
        unknown call_tmp[607031] "expr temp" "maybe param" "maybe type" "temp"
        (607034 'move' call_tmp[607031](371347 call _v _mt[243] this[48126]))
        unknown call_tmp[607036] "expr temp" "maybe param" "maybe type" "temp"
        (607039 'move' call_tmp[607036](46704 call c_memory_order success[46633]))
        unknown call_tmp[607041] "expr temp" "maybe param" "maybe type" "temp"
        (607044 'move' call_tmp[607041](46708 call c_memory_order failure[46637]))
        unknown call_tmp[607046] "expr temp" "maybe param" "maybe type" "temp"
        (607049 'move' call_tmp[607046](46709 call atomic_compare_exchange_weak call_tmp[607031] localizedExpected[46690] desired[46629] call_tmp[607036] call_tmp[607041]))
        (46710 call = ret[46684] call_tmp[607046])
        (474381 'end of statement' ret[46684] localizedExpected[46690])
        unknown call_tmp[607051] "expr temp" "maybe param" "maybe type" "temp"
        (607054 'move' call_tmp[607051](46714 call ! ret[46684]))
        unknown call_tmp[607056] "expr temp" "maybe param" "maybe type" "temp"
        (607059 'move' call_tmp[607056](46721 call _cond_test call_tmp[607051]))
        if call_tmp[607056]
        {
          (46718 call = expected[46623] localizedExpected[46690])
          (474384 'end of statement' localizedExpected[46690])
        }
      }
      (46734 'on block' 0 tmp[46729])
    }
    (506044 'move' ret[506038](506043 'coerce' ret[46684] bool[10]))
    gotoReturn _end_compareExchangeWeak[506036] _end_compareExchangeWeak[506036]
    (474386 'end of statement' ret[46684])
    label _end_compareExchangeWeak[506036]
    (506040 return ret[506038])
  }
  { scopeless type
    bool[10]
  }
  function AtomicT[48080](?).compareAndSwap[46749](arg _mt[48132]:_MT[238], arg this[48130]:AtomicT[48080](?), arg expected[46746] :
  (371360 call T _mt[243] this[48130]), arg desired[46752] :
  (371365 call T _mt[243] this[48130]), param arg order[46760]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506056] "RVV" "temp"
    function atomic_compare_exchange_strong[46779](ref arg obj[46776] :
    unknown call_tmp[607067] "expr temp" "maybe param" "maybe type" "temp", ref arg expected[46782] :
    (371381 call T _mt[243] this[48130]), arg desired[46786] :
    (371386 call T _mt[243] this[48130]), arg succ[46790]:memory_order[186653], arg fail[46794]:memory_order[186653], arg _chpl_cname[46802]:string[26] =
    unknown call_tmp[607078] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506050] "RVV" "temp"
      (506052 return ret[506050])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[46808] "dead at end of block" "insert auto destroy"
    (540658 'default init var' ret[46808] bool[10])
    (46811 'end of statement')
    const tmp[46843] "const" "temp"
    unknown call_tmp[607083] "expr temp" "maybe param" "maybe type" "temp"
    (607086 'move' call_tmp[607083](46840 '_wide_get_locale' this[48130]))
    (46845 'move' tmp[46843](46841 'deref' call_tmp[607083]))
    {
      {
        unknown mutableExpected[46814] "dead at end of block" "insert auto destroy"
        (540660 'init var' mutableExpected[46814] expected[46746])
        (46817 'end of statement')
        unknown call_tmp[607090] "expr temp" "maybe param" "maybe type" "temp"
        (607093 'move' call_tmp[607090](371396 call _v _mt[243] this[48130]))
        unknown call_tmp[607095] "expr temp" "maybe param" "maybe type" "temp"
        (607098 'move' call_tmp[607095](46828 call c_memory_order order[46760]))
        unknown call_tmp[607100] "expr temp" "maybe param" "maybe type" "temp"
        (607103 'move' call_tmp[607100](46833 call readableOrder order[46760]))
        unknown call_tmp[607105] "expr temp" "maybe param" "maybe type" "temp"
        (607108 'move' call_tmp[607105](46835 call c_memory_order call_tmp[607100]))
        unknown call_tmp[607110] "expr temp" "maybe param" "maybe type" "temp"
        (607113 'move' call_tmp[607110](46836 call atomic_compare_exchange_strong call_tmp[607090] mutableExpected[46814] desired[46752] call_tmp[607095] call_tmp[607105]))
        (46837 call = ret[46808] call_tmp[607110])
        (474388 'end of statement' ret[46808] mutableExpected[46814])
      }
      (46848 'on block' 0 tmp[46843])
    }
    (506062 'move' ret[506056](506061 'coerce' ret[46808] bool[10]))
    gotoReturn _end_compareAndSwap[506054] _end_compareAndSwap[506054]
    (474391 'end of statement' ret[46808])
    label _end_compareAndSwap[506054]
    (506058 return ret[506056])
  }
  { scopeless type
    bool[10]
  }
  function AtomicT[48080](?).fetchAdd[46863](arg _mt[48136]:_MT[238], arg this[48134]:AtomicT[48080](?), arg value[46860] :
  (371406 call T _mt[243] this[48134]), param arg order[46870]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506074] "RVV" "temp"
    function atomic_fetch_add[46905](ref arg obj[46902] :
    unknown call_tmp[607119] "expr temp" "maybe param" "maybe type" "temp", arg operand[46908] :
    (371427 call T _mt[243] this[48134]), arg order[46912]:memory_order[186653], arg _chpl_cname[46920]:string[26] =
    unknown call_tmp[607128] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506068] "RVV" "temp"
      (506070 return ret[506068])
    }
    { scopeless type
      (371433 call T _mt[243] this[48134])
    }
    unknown ret[46926] "dead at end of block" "insert auto destroy"
    unknown call_tmp[607137] "expr temp" "maybe param" "maybe type" "temp"
    (607140 'move' call_tmp[607137](371438 call T _mt[243] this[48134]))
    (540662 'default init var' ret[46926] call_tmp[607137])
    (46929 'end of statement')
    const tmp[46947] "const" "temp"
    unknown call_tmp[607142] "expr temp" "maybe param" "maybe type" "temp"
    (607145 'move' call_tmp[607142](46944 '_wide_get_locale' this[48134]))
    (46949 'move' tmp[46947](46945 'deref' call_tmp[607142]))
    {
      unknown call_tmp[607149] "expr temp" "maybe param" "maybe type" "temp"
      (607152 'move' call_tmp[607149](371445 call _v _mt[243] this[48134]))
      unknown call_tmp[607154] "expr temp" "maybe param" "maybe type" "temp"
      (607157 'move' call_tmp[607154](46939 call c_memory_order order[46870]))
      unknown call_tmp[607159] "expr temp" "maybe param" "maybe type" "temp"
      (607162 'move' call_tmp[607159](46940 call atomic_fetch_add call_tmp[607149] value[46860] call_tmp[607154]))
      (46941 call = ret[46926] call_tmp[607159])
      (474393 'end of statement' ret[46926])
      (46952 'on block' 0 tmp[46947])
    }
    unknown call_tmp[607166] "expr temp" "maybe param" "maybe type" "temp"
    (607169 'move' call_tmp[607166](506079 call T _mt[243] this[48134]))
    (506083 'move' ret[506074](506082 'coerce' ret[46926] call_tmp[607166]))
    gotoReturn _end_fetchAdd[506072] _end_fetchAdd[506072]
    (474395 'end of statement' ret[46926])
    label _end_fetchAdd[506072]
    (506076 return ret[506074])
  }
  { scopeless type
    (371412 call T _mt[243] this[48134])
  }
  function AtomicT[48080](?).add[46967](arg _mt[48140]:_MT[238], arg this[48138]:AtomicT[48080](?), arg value[46964] :
  (371453 call T _mt[243] this[48138]), param arg order[46974]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506095] "RVV" "temp"
    function atomic_fetch_add[46993](ref arg obj[46990] :
    unknown call_tmp[607177] "expr temp" "maybe param" "maybe type" "temp", arg operand[46996] :
    (371469 call T _mt[243] this[48138]), arg order[47000]:memory_order[186653], arg _chpl_cname[47008]:string[26] =
    unknown call_tmp[607186] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506089] "RVV" "temp"
      (506091 return ret[506089])
    }
    { scopeless type
      (371475 call T _mt[243] this[48138])
    }
    const tmp[47027] "const" "temp"
    unknown call_tmp[607193] "expr temp" "maybe param" "maybe type" "temp"
    (607196 'move' call_tmp[607193](47024 '_wide_get_locale' this[48138]))
    (47029 'move' tmp[47027](47025 'deref' call_tmp[607193]))
    {
      unknown call_tmp[607200] "expr temp" "maybe param" "maybe type" "temp"
      (607203 'move' call_tmp[607200](371481 call _v _mt[243] this[48138]))
      unknown call_tmp[607205] "expr temp" "maybe param" "maybe type" "temp"
      (607208 'move' call_tmp[607205](47021 call c_memory_order order[46974]))
      (47022 call atomic_fetch_add call_tmp[607200] value[46964] call_tmp[607205])
      (47032 'on block' 0 tmp[47027])
    }
    (506097 return ret[506095])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48080](?).fetchSub[47044](arg _mt[48144]:_MT[238], arg this[48142]:AtomicT[48080](?), arg value[47041] :
  (371488 call T _mt[243] this[48142]), param arg order[47051]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506107] "RVV" "temp"
    function atomic_fetch_sub[47086](ref arg obj[47083] :
    unknown call_tmp[607214] "expr temp" "maybe param" "maybe type" "temp", arg operand[47089] :
    (371509 call T _mt[243] this[48142]), arg order[47093]:memory_order[186653], arg _chpl_cname[47101]:string[26] =
    unknown call_tmp[607223] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506101] "RVV" "temp"
      (506103 return ret[506101])
    }
    { scopeless type
      (371515 call T _mt[243] this[48142])
    }
    unknown ret[47107] "dead at end of block" "insert auto destroy"
    unknown call_tmp[607232] "expr temp" "maybe param" "maybe type" "temp"
    (607235 'move' call_tmp[607232](371520 call T _mt[243] this[48142]))
    (540664 'default init var' ret[47107] call_tmp[607232])
    (47110 'end of statement')
    const tmp[47128] "const" "temp"
    unknown call_tmp[607237] "expr temp" "maybe param" "maybe type" "temp"
    (607240 'move' call_tmp[607237](47125 '_wide_get_locale' this[48142]))
    (47130 'move' tmp[47128](47126 'deref' call_tmp[607237]))
    {
      unknown call_tmp[607244] "expr temp" "maybe param" "maybe type" "temp"
      (607247 'move' call_tmp[607244](371527 call _v _mt[243] this[48142]))
      unknown call_tmp[607249] "expr temp" "maybe param" "maybe type" "temp"
      (607252 'move' call_tmp[607249](47120 call c_memory_order order[47051]))
      unknown call_tmp[607254] "expr temp" "maybe param" "maybe type" "temp"
      (607257 'move' call_tmp[607254](47121 call atomic_fetch_sub call_tmp[607244] value[47041] call_tmp[607249]))
      (47122 call = ret[47107] call_tmp[607254])
      (474398 'end of statement' ret[47107])
      (47133 'on block' 0 tmp[47128])
    }
    unknown call_tmp[607261] "expr temp" "maybe param" "maybe type" "temp"
    (607264 'move' call_tmp[607261](506112 call T _mt[243] this[48142]))
    (506116 'move' ret[506107](506115 'coerce' ret[47107] call_tmp[607261]))
    gotoReturn _end_fetchSub[506105] _end_fetchSub[506105]
    (474400 'end of statement' ret[47107])
    label _end_fetchSub[506105]
    (506109 return ret[506107])
  }
  { scopeless type
    (371494 call T _mt[243] this[48142])
  }
  function AtomicT[48080](?).sub[47148](arg _mt[48148]:_MT[238], arg this[48146]:AtomicT[48080](?), arg value[47145] :
  (371535 call T _mt[243] this[48146]), param arg order[47155]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506128] "RVV" "temp"
    function atomic_fetch_sub[47174](ref arg obj[47171] :
    unknown call_tmp[607272] "expr temp" "maybe param" "maybe type" "temp", arg operand[47177] :
    (371551 call T _mt[243] this[48146]), arg order[47181]:memory_order[186653], arg _chpl_cname[47189]:string[26] =
    unknown call_tmp[607281] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506122] "RVV" "temp"
      (506124 return ret[506122])
    }
    { scopeless type
      (371557 call T _mt[243] this[48146])
    }
    const tmp[47208] "const" "temp"
    unknown call_tmp[607288] "expr temp" "maybe param" "maybe type" "temp"
    (607291 'move' call_tmp[607288](47205 '_wide_get_locale' this[48146]))
    (47210 'move' tmp[47208](47206 'deref' call_tmp[607288]))
    {
      unknown call_tmp[607295] "expr temp" "maybe param" "maybe type" "temp"
      (607298 'move' call_tmp[607295](371563 call _v _mt[243] this[48146]))
      unknown call_tmp[607300] "expr temp" "maybe param" "maybe type" "temp"
      (607303 'move' call_tmp[607300](47202 call c_memory_order order[47155]))
      (47203 call atomic_fetch_sub call_tmp[607295] value[47145] call_tmp[607300])
      (47213 'on block' 0 tmp[47208])
    }
    (506130 return ret[506128])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48080](?).fetchOr[47225](arg _mt[48152]:_MT[238], arg this[48150]:AtomicT[48080](?), arg value[47222] :
  (371570 call T _mt[243] this[48150]), param arg order[47232]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506140] "RVV" "temp"
    unknown call_tmp[607309] "expr temp" "maybe param" "maybe type" "temp"
    (607312 'move' call_tmp[607309](371581 call T _mt[243] this[48150]))
    unknown call_tmp[607314] "expr temp" "maybe param" "maybe type" "temp"
    (607317 'move' call_tmp[607314](47240 call isIntegral call_tmp[607309]))
    unknown call_tmp[607319] "expr temp" "maybe param" "maybe type" "temp"
    (607322 'move' call_tmp[607319](47241 call ! call_tmp[607314]))
    unknown call_tmp[607324] "expr temp" "maybe param" "maybe type" "temp"
    (607327 'move' call_tmp[607324](47264 call _cond_test call_tmp[607319]))
    if call_tmp[607324]
    {
      (47262 call compilerError "fetchOr is only defined for integer atomic types")
    }
    function atomic_fetch_or[47300](ref arg obj[47297] :
    unknown call_tmp[607331] "expr temp" "maybe param" "maybe type" "temp", arg operand[47303] :
    (371596 call T _mt[243] this[48150]), arg order[47307]:memory_order[186653], arg _chpl_cname[47315]:string[26] =
    unknown call_tmp[607340] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506134] "RVV" "temp"
      (506136 return ret[506134])
    }
    { scopeless type
      (371602 call T _mt[243] this[48150])
    }
    unknown ret[47320] "dead at end of block" "insert auto destroy"
    unknown call_tmp[607349] "expr temp" "maybe param" "maybe type" "temp"
    (607352 'move' call_tmp[607349](371607 call T _mt[243] this[48150]))
    (540666 'default init var' ret[47320] call_tmp[607349])
    (47323 'end of statement')
    const tmp[47341] "const" "temp"
    unknown call_tmp[607354] "expr temp" "maybe param" "maybe type" "temp"
    (607357 'move' call_tmp[607354](47338 '_wide_get_locale' this[48150]))
    (47343 'move' tmp[47341](47339 'deref' call_tmp[607354]))
    {
      unknown call_tmp[607361] "expr temp" "maybe param" "maybe type" "temp"
      (607364 'move' call_tmp[607361](371614 call _v _mt[243] this[48150]))
      unknown call_tmp[607366] "expr temp" "maybe param" "maybe type" "temp"
      (607369 'move' call_tmp[607366](47333 call c_memory_order order[47232]))
      unknown call_tmp[607371] "expr temp" "maybe param" "maybe type" "temp"
      (607374 'move' call_tmp[607371](47334 call atomic_fetch_or call_tmp[607361] value[47222] call_tmp[607366]))
      (47335 call = ret[47320] call_tmp[607371])
      (474404 'end of statement' ret[47320])
      (47346 'on block' 0 tmp[47341])
    }
    unknown call_tmp[607378] "expr temp" "maybe param" "maybe type" "temp"
    (607381 'move' call_tmp[607378](506145 call T _mt[243] this[48150]))
    (506149 'move' ret[506140](506148 'coerce' ret[47320] call_tmp[607378]))
    gotoReturn _end_fetchOr[506138] _end_fetchOr[506138]
    (474406 'end of statement' ret[47320])
    label _end_fetchOr[506138]
    (506142 return ret[506140])
  }
  { scopeless type
    (371576 call T _mt[243] this[48150])
  }
  function AtomicT[48080](?).or[47361](arg _mt[48156]:_MT[238], arg this[48154]:AtomicT[48080](?), arg value[47358] :
  (371622 call T _mt[243] this[48154]), param arg order[47368]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506161] "RVV" "temp"
    unknown call_tmp[607389] "expr temp" "maybe param" "maybe type" "temp"
    (607392 'move' call_tmp[607389](371628 call T _mt[243] this[48154]))
    unknown call_tmp[607394] "expr temp" "maybe param" "maybe type" "temp"
    (607397 'move' call_tmp[607394](47376 call isIntegral call_tmp[607389]))
    unknown call_tmp[607399] "expr temp" "maybe param" "maybe type" "temp"
    (607402 'move' call_tmp[607399](47377 call ! call_tmp[607394]))
    unknown call_tmp[607404] "expr temp" "maybe param" "maybe type" "temp"
    (607407 'move' call_tmp[607404](47402 call _cond_test call_tmp[607399]))
    if call_tmp[607404]
    {
      (47400 call compilerError "or is only defined for integer atomic types")
    }
    function atomic_fetch_or[47422](ref arg obj[47419] :
    unknown call_tmp[607411] "expr temp" "maybe param" "maybe type" "temp", arg operand[47425] :
    (371643 call T _mt[243] this[48154]), arg order[47429]:memory_order[186653], arg _chpl_cname[47437]:string[26] =
    unknown call_tmp[607420] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506155] "RVV" "temp"
      (506157 return ret[506155])
    }
    { scopeless type
      (371649 call T _mt[243] this[48154])
    }
    const tmp[47455] "const" "temp"
    unknown call_tmp[607427] "expr temp" "maybe param" "maybe type" "temp"
    (607430 'move' call_tmp[607427](47452 '_wide_get_locale' this[48154]))
    (47457 'move' tmp[47455](47453 'deref' call_tmp[607427]))
    {
      unknown call_tmp[607434] "expr temp" "maybe param" "maybe type" "temp"
      (607437 'move' call_tmp[607434](371655 call _v _mt[243] this[48154]))
      unknown call_tmp[607439] "expr temp" "maybe param" "maybe type" "temp"
      (607442 'move' call_tmp[607439](47449 call c_memory_order order[47368]))
      (47450 call atomic_fetch_or call_tmp[607434] value[47358] call_tmp[607439])
      (47460 'on block' 0 tmp[47455])
    }
    (506163 return ret[506161])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48080](?).fetchAnd[47472](arg _mt[48160]:_MT[238], arg this[48158]:AtomicT[48080](?), arg value[47469] :
  (371662 call T _mt[243] this[48158]), param arg order[47479]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506173] "RVV" "temp"
    unknown call_tmp[607448] "expr temp" "maybe param" "maybe type" "temp"
    (607451 'move' call_tmp[607448](371673 call T _mt[243] this[48158]))
    unknown call_tmp[607453] "expr temp" "maybe param" "maybe type" "temp"
    (607456 'move' call_tmp[607453](47487 call isIntegral call_tmp[607448]))
    unknown call_tmp[607458] "expr temp" "maybe param" "maybe type" "temp"
    (607461 'move' call_tmp[607458](47488 call ! call_tmp[607453]))
    unknown call_tmp[607463] "expr temp" "maybe param" "maybe type" "temp"
    (607466 'move' call_tmp[607463](47511 call _cond_test call_tmp[607458]))
    if call_tmp[607463]
    {
      (47509 call compilerError "fetchAnd is only defined for integer atomic types")
    }
    function atomic_fetch_and[47547](ref arg obj[47544] :
    unknown call_tmp[607470] "expr temp" "maybe param" "maybe type" "temp", arg operand[47550] :
    (371688 call T _mt[243] this[48158]), arg order[47554]:memory_order[186653], arg _chpl_cname[47562]:string[26] =
    unknown call_tmp[607479] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506167] "RVV" "temp"
      (506169 return ret[506167])
    }
    { scopeless type
      (371694 call T _mt[243] this[48158])
    }
    unknown ret[47567] "dead at end of block" "insert auto destroy"
    unknown call_tmp[607488] "expr temp" "maybe param" "maybe type" "temp"
    (607491 'move' call_tmp[607488](371699 call T _mt[243] this[48158]))
    (540668 'default init var' ret[47567] call_tmp[607488])
    (47570 'end of statement')
    const tmp[47588] "const" "temp"
    unknown call_tmp[607493] "expr temp" "maybe param" "maybe type" "temp"
    (607496 'move' call_tmp[607493](47585 '_wide_get_locale' this[48158]))
    (47590 'move' tmp[47588](47586 'deref' call_tmp[607493]))
    {
      unknown call_tmp[607500] "expr temp" "maybe param" "maybe type" "temp"
      (607503 'move' call_tmp[607500](371706 call _v _mt[243] this[48158]))
      unknown call_tmp[607505] "expr temp" "maybe param" "maybe type" "temp"
      (607508 'move' call_tmp[607505](47580 call c_memory_order order[47479]))
      unknown call_tmp[607510] "expr temp" "maybe param" "maybe type" "temp"
      (607513 'move' call_tmp[607510](47581 call atomic_fetch_and call_tmp[607500] value[47469] call_tmp[607505]))
      (47582 call = ret[47567] call_tmp[607510])
      (474411 'end of statement' ret[47567])
      (47593 'on block' 0 tmp[47588])
    }
    unknown call_tmp[607517] "expr temp" "maybe param" "maybe type" "temp"
    (607520 'move' call_tmp[607517](506178 call T _mt[243] this[48158]))
    (506182 'move' ret[506173](506181 'coerce' ret[47567] call_tmp[607517]))
    gotoReturn _end_fetchAnd[506171] _end_fetchAnd[506171]
    (474413 'end of statement' ret[47567])
    label _end_fetchAnd[506171]
    (506175 return ret[506173])
  }
  { scopeless type
    (371668 call T _mt[243] this[48158])
  }
  function AtomicT[48080](?).and[47608](arg _mt[48164]:_MT[238], arg this[48162]:AtomicT[48080](?), arg value[47605] :
  (371714 call T _mt[243] this[48162]), param arg order[47615]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506194] "RVV" "temp"
    unknown call_tmp[607528] "expr temp" "maybe param" "maybe type" "temp"
    (607531 'move' call_tmp[607528](371720 call T _mt[243] this[48162]))
    unknown call_tmp[607533] "expr temp" "maybe param" "maybe type" "temp"
    (607536 'move' call_tmp[607533](47623 call isIntegral call_tmp[607528]))
    unknown call_tmp[607538] "expr temp" "maybe param" "maybe type" "temp"
    (607541 'move' call_tmp[607538](47624 call ! call_tmp[607533]))
    unknown call_tmp[607543] "expr temp" "maybe param" "maybe type" "temp"
    (607546 'move' call_tmp[607543](47647 call _cond_test call_tmp[607538]))
    if call_tmp[607543]
    {
      (47645 call compilerError "and is only defined for integer atomic types")
    }
    function atomic_fetch_and[47667](ref arg obj[47664] :
    unknown call_tmp[607550] "expr temp" "maybe param" "maybe type" "temp", arg operand[47670] :
    (371735 call T _mt[243] this[48162]), arg order[47674]:memory_order[186653], arg _chpl_cname[47682]:string[26] =
    unknown call_tmp[607559] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506188] "RVV" "temp"
      (506190 return ret[506188])
    }
    { scopeless type
      (371741 call T _mt[243] this[48162])
    }
    const tmp[47700] "const" "temp"
    unknown call_tmp[607566] "expr temp" "maybe param" "maybe type" "temp"
    (607569 'move' call_tmp[607566](47697 '_wide_get_locale' this[48162]))
    (47702 'move' tmp[47700](47698 'deref' call_tmp[607566]))
    {
      unknown call_tmp[607573] "expr temp" "maybe param" "maybe type" "temp"
      (607576 'move' call_tmp[607573](371747 call _v _mt[243] this[48162]))
      unknown call_tmp[607578] "expr temp" "maybe param" "maybe type" "temp"
      (607581 'move' call_tmp[607578](47694 call c_memory_order order[47615]))
      (47695 call atomic_fetch_and call_tmp[607573] value[47605] call_tmp[607578])
      (47705 'on block' 0 tmp[47700])
    }
    (506196 return ret[506194])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48080](?).fetchXor[47717](arg _mt[48168]:_MT[238], arg this[48166]:AtomicT[48080](?), arg value[47714] :
  (371754 call T _mt[243] this[48166]), param arg order[47724]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506206] "RVV" "temp"
    unknown call_tmp[607587] "expr temp" "maybe param" "maybe type" "temp"
    (607590 'move' call_tmp[607587](371765 call T _mt[243] this[48166]))
    unknown call_tmp[607592] "expr temp" "maybe param" "maybe type" "temp"
    (607595 'move' call_tmp[607592](47732 call isIntegral call_tmp[607587]))
    unknown call_tmp[607597] "expr temp" "maybe param" "maybe type" "temp"
    (607600 'move' call_tmp[607597](47733 call ! call_tmp[607592]))
    unknown call_tmp[607602] "expr temp" "maybe param" "maybe type" "temp"
    (607605 'move' call_tmp[607602](47756 call _cond_test call_tmp[607597]))
    if call_tmp[607602]
    {
      (47754 call compilerError "fetchXor is only defined for integer atomic types")
    }
    function atomic_fetch_xor[47792](ref arg obj[47789] :
    unknown call_tmp[607609] "expr temp" "maybe param" "maybe type" "temp", arg operand[47795] :
    (371780 call T _mt[243] this[48166]), arg order[47799]:memory_order[186653], arg _chpl_cname[47807]:string[26] =
    unknown call_tmp[607618] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506200] "RVV" "temp"
      (506202 return ret[506200])
    }
    { scopeless type
      (371786 call T _mt[243] this[48166])
    }
    unknown ret[47812] "dead at end of block" "insert auto destroy"
    unknown call_tmp[607627] "expr temp" "maybe param" "maybe type" "temp"
    (607630 'move' call_tmp[607627](371791 call T _mt[243] this[48166]))
    (540670 'default init var' ret[47812] call_tmp[607627])
    (47815 'end of statement')
    const tmp[47833] "const" "temp"
    unknown call_tmp[607632] "expr temp" "maybe param" "maybe type" "temp"
    (607635 'move' call_tmp[607632](47830 '_wide_get_locale' this[48166]))
    (47835 'move' tmp[47833](47831 'deref' call_tmp[607632]))
    {
      unknown call_tmp[607639] "expr temp" "maybe param" "maybe type" "temp"
      (607642 'move' call_tmp[607639](371798 call _v _mt[243] this[48166]))
      unknown call_tmp[607644] "expr temp" "maybe param" "maybe type" "temp"
      (607647 'move' call_tmp[607644](47825 call c_memory_order order[47724]))
      unknown call_tmp[607649] "expr temp" "maybe param" "maybe type" "temp"
      (607652 'move' call_tmp[607649](47826 call atomic_fetch_xor call_tmp[607639] value[47714] call_tmp[607644]))
      (47827 call = ret[47812] call_tmp[607649])
      (474418 'end of statement' ret[47812])
      (47838 'on block' 0 tmp[47833])
    }
    unknown call_tmp[607656] "expr temp" "maybe param" "maybe type" "temp"
    (607659 'move' call_tmp[607656](506211 call T _mt[243] this[48166]))
    (506215 'move' ret[506206](506214 'coerce' ret[47812] call_tmp[607656]))
    gotoReturn _end_fetchXor[506204] _end_fetchXor[506204]
    (474420 'end of statement' ret[47812])
    label _end_fetchXor[506204]
    (506208 return ret[506206])
  }
  { scopeless type
    (371760 call T _mt[243] this[48166])
  }
  function AtomicT[48080](?).xor[47853](arg _mt[48172]:_MT[238], arg this[48170]:AtomicT[48080](?), arg value[47850] :
  (371806 call T _mt[243] this[48170]), param arg order[47860]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506227] "RVV" "temp"
    unknown call_tmp[607667] "expr temp" "maybe param" "maybe type" "temp"
    (607670 'move' call_tmp[607667](371812 call T _mt[243] this[48170]))
    unknown call_tmp[607672] "expr temp" "maybe param" "maybe type" "temp"
    (607675 'move' call_tmp[607672](47868 call isIntegral call_tmp[607667]))
    unknown call_tmp[607677] "expr temp" "maybe param" "maybe type" "temp"
    (607680 'move' call_tmp[607677](47869 call ! call_tmp[607672]))
    unknown call_tmp[607682] "expr temp" "maybe param" "maybe type" "temp"
    (607685 'move' call_tmp[607682](47892 call _cond_test call_tmp[607677]))
    if call_tmp[607682]
    {
      (47890 call compilerError "xor is only defined for integer atomic types")
    }
    function atomic_fetch_xor[47912](ref arg obj[47909] :
    unknown call_tmp[607689] "expr temp" "maybe param" "maybe type" "temp", arg operand[47915] :
    (371827 call T _mt[243] this[48170]), arg order[47919]:memory_order[186653], arg _chpl_cname[47927]:string[26] =
    unknown call_tmp[607698] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506221] "RVV" "temp"
      (506223 return ret[506221])
    }
    { scopeless type
      (371833 call T _mt[243] this[48170])
    }
    const tmp[47945] "const" "temp"
    unknown call_tmp[607705] "expr temp" "maybe param" "maybe type" "temp"
    (607708 'move' call_tmp[607705](47942 '_wide_get_locale' this[48170]))
    (47947 'move' tmp[47945](47943 'deref' call_tmp[607705]))
    {
      unknown call_tmp[607712] "expr temp" "maybe param" "maybe type" "temp"
      (607715 'move' call_tmp[607712](371839 call _v _mt[243] this[48170]))
      unknown call_tmp[607717] "expr temp" "maybe param" "maybe type" "temp"
      (607720 'move' call_tmp[607717](47939 call c_memory_order order[47860]))
      (47940 call atomic_fetch_xor call_tmp[607712] value[47850] call_tmp[607717])
      (47950 'on block' 0 tmp[47945])
    }
    (506229 return ret[506227])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48080](?).waitFor[47962](arg _mt[48176]:_MT[238], const arg this[48174]:AtomicT[48080](?), arg value[47959] :
  (371846 call T _mt[243] this[48174]), param arg order[47969]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506233] "RVV" "temp"
    const tmp[48051] "const" "temp"
    unknown call_tmp[607724] "expr temp" "maybe param" "maybe type" "temp"
    (607727 'move' call_tmp[607724](48048 '_wide_get_locale' this[48174]))
    (48053 'move' tmp[48051](48049 'deref' call_tmp[607724]))
    {
      {
        {
          unknown tmp[47994] "temp"
          unknown call_tmp[607731] "expr temp" "maybe param" "maybe type" "temp"
          (607734 'move' call_tmp[607731](48029 call(48026 call (partial) read _mt[243] this[48174])(order = relaxed[187010])))
          unknown call_tmp[607736] "expr temp" "maybe param" "maybe type" "temp"
          (607739 'move' call_tmp[607736](48024 call != call_tmp[607731] value[47959]))
          (48036 'move' tmp[47994](48022 call _cond_test call_tmp[607736]))
          WhileDo[47999]
          {
            {
              (47991 call chpl_task_yield)
            }
            label _continueLabel[47997]
            unknown call_tmp[607743] "expr temp" "maybe param" "maybe type" "temp"
            (607746 'move' call_tmp[607743](48010 call(48007 call (partial) read _mt[243] this[48174])(order = relaxed[187010])))
            unknown call_tmp[607748] "expr temp" "maybe param" "maybe type" "temp"
            (607751 'move' call_tmp[607748](48005 call != call_tmp[607743] value[47959]))
            (48017 'move' tmp[47994](48003 call _cond_test call_tmp[607748]))
            tmp[47994]
          }
          label _breakLabel[47998]
        }
        unknown call_tmp[607753] "expr temp" "maybe param" "maybe type" "temp"
        (607756 'move' call_tmp[607753](48044 call c_memory_order order[47969]))
        (48046 call chpl_atomic_thread_fence call_tmp[607753])
      }
      (48056 'on block' 0 tmp[48051])
    }
    (506235 return ret[506233])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48080](?).writeThis[48067](arg _mt[48180]:_MT[238], const arg this[48178]:AtomicT[48080](?), arg x[48065]:_any[178](?)) : _unknown[51] throws "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[607760] "expr temp" "maybe param" "maybe type" "temp"
    (607763 'move' call_tmp[607760](48072 call(371856 call (partial) read _mt[243] this[48178])))
    (48073 call <~> x[48065] call_tmp[607760])
    (506237 return _void[55])
  }
  type AtomicT[48080](?) unknown T[45949] "no doc" "type variable" unknown _v[45956] "no doc"(45955 call externT T[45949])
  function =[48189](ref arg a[48186]:AtomicBool[45877], const  ref arg b[48192]:AtomicBool[45877]) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    unknown call_tmp[607769] "expr temp" "maybe param" "maybe type" "temp"
    (607772 'move' call_tmp[607769](48204 call(48200 call (partial) read _mt[243] b[48192])))
    (48206 call(48196 call (partial) write _mt[243] a[48186]) call_tmp[607769])
    (506239 return _void[55])
  }
  function =[48217](ref arg a[48214]:AtomicBool[45877], arg b[48219]:_any[178](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (48242 call compilerError "Cannot directly assign atomic variables")
    (506241 return _void[55])
  }
  function =[48253](ref arg a[48250]:AtomicT[48080](?), const  ref arg b[48256]:AtomicT[48080](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    unknown call_tmp[607778] "expr temp" "maybe param" "maybe type" "temp"
    (607781 'move' call_tmp[607778](48268 call(48264 call (partial) read _mt[243] b[48256])))
    (48270 call(48260 call (partial) write _mt[243] a[48250]) call_tmp[607778])
    (506243 return _void[55])
  }
  function =[48281](ref arg a[48278]:AtomicT[48080](?), arg b[48283]:_any[178](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (48288 call compilerError "Cannot directly assign atomic variables")
    (506245 return _void[55])
  }
  function +[48299](arg a[48296]:AtomicT[48080](?), arg b[48301]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[506249] "RVV" "temp"
    (48322 call compilerError "Cannot directly add atomic variables")
    (474431 'end of statement')
    (506254 'move' ret[506249](506253 'deref' a[48296]))
    (506251 return ret[506249])
  }
  function -[48336](arg a[48333]:AtomicT[48080](?), arg b[48338]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[506258] "RVV" "temp"
    (48359 call compilerError "Cannot directly subtract atomic variables")
    (474433 'end of statement')
    (506263 'move' ret[506258](506262 'deref' a[48333]))
    (506260 return ret[506258])
  }
  function *[48373](arg a[48370]:AtomicT[48080](?), arg b[48375]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[506267] "RVV" "temp"
    (48396 call compilerError "Cannot directly multiply atomic variables")
    (474435 'end of statement')
    (506272 'move' ret[506267](506271 'deref' a[48370]))
    (506269 return ret[506267])
  }
  function /[48410](arg a[48407]:AtomicT[48080](?), arg b[48412]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[506276] "RVV" "temp"
    (48433 call compilerError "Cannot directly divide atomic variables")
    (474437 'end of statement')
    (506281 'move' ret[506276](506280 'deref' a[48407]))
    (506278 return ret[506276])
  }
  function %[48447](arg a[48444]:AtomicT[48080](?), arg b[48449]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[506285] "RVV" "temp"
    (48454 call compilerError "Cannot directly divide atomic variables")
    (474439 'end of statement')
    (506290 'move' ret[506285](506289 'deref' a[48444]))
    (506287 return ret[506285])
  }
  (355075 'used modules list'(43966 'use' ChapelBase[307])(43970 'use' MemConsistency[186648]))
}