AST dump for Atomics after pass normalize.
Module use list: ChapelBase MemConsistency 

{
  function chpl__init_Atomics[416046]() : void[4] "insert line file info" "module init"
  {
    (506375 return _void[55])
  }
  function chpl_atomic_thread_fence[43978](arg order[43975]:memory_order[186653]) : void[4] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no doc" "no return value for void"
  {
    (505682 return _void[55])
  }
  function atomic_fence[43990](arg order[43986]:memory_order[186653] =
  memory_order_seq_cst[186997]) : _unknown[51] "no doc" "no return value for void"
  {
    (43995 call chpl_atomic_thread_fence order[43986])
    (474354 'end of statement')
    unknown call_tmp[606066] "expr temp" "maybe param" "maybe type" "temp"
    (606069 'move' call_tmp[606066](44004 call _cond_test CHPL_CACHE_REMOTE[367]))
    if call_tmp[606066]
    {
      (44002 call chpl_rmem_consist_fence order[43986])
    }
    (505684 return _void[55])
  }
  function atomicFence[44024](param arg order[44020]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "inline" "no return value for void"
  {
    unknown call_tmp[606071] "expr temp" "maybe param" "maybe type" "temp"
    (606074 'move' call_tmp[606071](44030 call c_memory_order order[44020]))
    (44032 call atomic_fence call_tmp[606071])
    (505686 return _void[55])
  }
  function isSupported[44041](arg T[44039]:_any[178](?)) param : _unknown[51] "private"
  {
    unknown ret[505690] "RVV" "param" "temp"
    unknown tmp[418511] "maybe param" "temp"
    unknown tmp[418532] "maybe param" "temp"
    unknown tmp[418553] "maybe param" "temp"
    (418564 'move' tmp[418553](44045 call == T[44039] bool[10]))
    unknown call_tmp[606076] "expr temp" "maybe param" "maybe type" "temp"
    (606079 'move' call_tmp[606076](418566 call _cond_invalid tmp[418553]))
    if call_tmp[606076]
    {
      (418569 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[554424] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554425] "maybe param" "temp"
    unknown call_tmp[606081] "expr temp" "maybe param" "maybe type" "temp"
    (606084 'move' call_tmp[606081](418554 call isTrue tmp[418553]))
    (554430 'move' tmp[554425](554428 call _cond_test call_tmp[606081]))
    if tmp[554425]
    {
      (554435 'move' tmp[554424](554432 '_paramFoldLogical' tmp[554425] 1))
    }
    {
      unknown tmp[554437] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[606086] "expr temp" "maybe param" "maybe type" "temp"
      (606089 'move' call_tmp[606086](44050 call isInt T[44039]))
      (554439 'move' tmp[554437](418558 call isTrue call_tmp[606086]))
      (554444 'move' tmp[554424](554441 '_paramFoldLogical' tmp[554425] tmp[554437]))
    }
    (418543 'move' tmp[418532] tmp[554424])
    unknown call_tmp[606091] "expr temp" "maybe param" "maybe type" "temp"
    (606094 'move' call_tmp[606091](418545 call _cond_invalid tmp[418532]))
    if call_tmp[606091]
    {
      (418548 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[554451] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554452] "maybe param" "temp"
    unknown call_tmp[606096] "expr temp" "maybe param" "maybe type" "temp"
    (606099 'move' call_tmp[606096](418533 call isTrue tmp[418532]))
    (554457 'move' tmp[554452](554455 call _cond_test call_tmp[606096]))
    if tmp[554452]
    {
      (554462 'move' tmp[554451](554459 '_paramFoldLogical' tmp[554452] 1))
    }
    {
      unknown tmp[554464] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[606101] "expr temp" "maybe param" "maybe type" "temp"
      (606104 'move' call_tmp[606101](44056 call isUint T[44039]))
      (554466 'move' tmp[554464](418537 call isTrue call_tmp[606101]))
      (554471 'move' tmp[554451](554468 '_paramFoldLogical' tmp[554452] tmp[554464]))
    }
    (418522 'move' tmp[418511] tmp[554451])
    unknown call_tmp[606106] "expr temp" "maybe param" "maybe type" "temp"
    (606109 'move' call_tmp[606106](418524 call _cond_invalid tmp[418511]))
    if call_tmp[606106]
    {
      (418527 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[554478] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554479] "maybe param" "temp"
    unknown call_tmp[606111] "expr temp" "maybe param" "maybe type" "temp"
    (606114 'move' call_tmp[606111](418512 call isTrue tmp[418511]))
    (554484 'move' tmp[554479](554482 call _cond_test call_tmp[606111]))
    if tmp[554479]
    {
      (554489 'move' tmp[554478](554486 '_paramFoldLogical' tmp[554479] 1))
    }
    {
      unknown tmp[554491] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[606116] "expr temp" "maybe param" "maybe type" "temp"
      (606119 'move' call_tmp[606116](44062 call isReal T[44039]))
      (554493 'move' tmp[554491](418516 call isTrue call_tmp[606116]))
      (554498 'move' tmp[554478](554495 '_paramFoldLogical' tmp[554479] tmp[554491]))
    }
    (505695 'move' ret[505690](505694 'deref' tmp[554478]))
    (505692 return ret[505690])
  }
  function externT[44074](arg T[44072]:_any[178](?)) type : _unknown[51] "private"
  {
    unknown ret[505699] "RVV" "temp" "type variable"
    type atomic_bool[44080]
    type atomic_int_least8_t[44087]
    type atomic_int_least16_t[44093]
    type atomic_int_least32_t[44099]
    type atomic_int_least64_t[44105]
    type atomic_uint_least8_t[44111]
    type atomic_uint_least16_t[44117]
    type atomic_uint_least32_t[44123]
    type atomic_uint_least64_t[44129]
    type atomic__real64[44135]
    type atomic__real32[44141]
    {
      unknown tmp[44264] "expr temp" "maybe param" "maybe type" "temp"
      (44266 'move' tmp[44264] T[44072])
      unknown call_tmp[606121] "expr temp" "maybe param" "maybe type" "temp"
      (606124 'move' call_tmp[606121](44268 call == tmp[44264] bool[10]))
      unknown call_tmp[606126] "expr temp" "maybe param" "maybe type" "temp"
      (606129 'move' call_tmp[606126](44271 call _cond_test call_tmp[606121]))
      if call_tmp[606126]
      {
        (505704 'move' ret[505699](505703 'deref' atomic_bool[44080]))
        gotoReturn _end_externT[505697] _end_externT[505697]
      }
      {
        unknown call_tmp[606131] "expr temp" "maybe param" "maybe type" "temp"
        (606134 'move' call_tmp[606131](44156 call int(64)[13] 8))
        unknown call_tmp[606136] "expr temp" "maybe param" "maybe type" "temp"
        (606139 'move' call_tmp[606136](44274 call == tmp[44264] call_tmp[606131]))
        unknown call_tmp[606141] "expr temp" "maybe param" "maybe type" "temp"
        (606144 'move' call_tmp[606141](44277 call _cond_test call_tmp[606136]))
        if call_tmp[606141]
        {
          (505709 'move' ret[505699](505708 'deref' atomic_int_least8_t[44087]))
          gotoReturn _end_externT[505697] _end_externT[505697]
        }
        {
          unknown call_tmp[606146] "expr temp" "maybe param" "maybe type" "temp"
          (606149 'move' call_tmp[606146](44167 call int(64)[13] 16))
          unknown call_tmp[606151] "expr temp" "maybe param" "maybe type" "temp"
          (606154 'move' call_tmp[606151](44281 call == tmp[44264] call_tmp[606146]))
          unknown call_tmp[606156] "expr temp" "maybe param" "maybe type" "temp"
          (606159 'move' call_tmp[606156](44284 call _cond_test call_tmp[606151]))
          if call_tmp[606156]
          {
            (505714 'move' ret[505699](505713 'deref' atomic_int_least16_t[44093]))
            gotoReturn _end_externT[505697] _end_externT[505697]
          }
          {
            unknown call_tmp[606161] "expr temp" "maybe param" "maybe type" "temp"
            (606164 'move' call_tmp[606161](44178 call int(64)[13] 32))
            unknown call_tmp[606166] "expr temp" "maybe param" "maybe type" "temp"
            (606169 'move' call_tmp[606166](44288 call == tmp[44264] call_tmp[606161]))
            unknown call_tmp[606171] "expr temp" "maybe param" "maybe type" "temp"
            (606174 'move' call_tmp[606171](44291 call _cond_test call_tmp[606166]))
            if call_tmp[606171]
            {
              (505719 'move' ret[505699](505718 'deref' atomic_int_least32_t[44099]))
              gotoReturn _end_externT[505697] _end_externT[505697]
            }
            {
              unknown call_tmp[606176] "expr temp" "maybe param" "maybe type" "temp"
              (606179 'move' call_tmp[606176](44189 call int(64)[13] 64))
              unknown call_tmp[606181] "expr temp" "maybe param" "maybe type" "temp"
              (606184 'move' call_tmp[606181](44295 call == tmp[44264] call_tmp[606176]))
              unknown call_tmp[606186] "expr temp" "maybe param" "maybe type" "temp"
              (606189 'move' call_tmp[606186](44298 call _cond_test call_tmp[606181]))
              if call_tmp[606186]
              {
                (505724 'move' ret[505699](505723 'deref' atomic_int_least64_t[44105]))
                gotoReturn _end_externT[505697] _end_externT[505697]
              }
              {
                unknown call_tmp[606191] "expr temp" "maybe param" "maybe type" "temp"
                (606194 'move' call_tmp[606191](44200 call uint(64)[115] 8))
                unknown call_tmp[606196] "expr temp" "maybe param" "maybe type" "temp"
                (606199 'move' call_tmp[606196](44302 call == tmp[44264] call_tmp[606191]))
                unknown call_tmp[606201] "expr temp" "maybe param" "maybe type" "temp"
                (606204 'move' call_tmp[606201](44305 call _cond_test call_tmp[606196]))
                if call_tmp[606201]
                {
                  (505729 'move' ret[505699](505728 'deref' atomic_uint_least8_t[44111]))
                  gotoReturn _end_externT[505697] _end_externT[505697]
                }
                {
                  unknown call_tmp[606206] "expr temp" "maybe param" "maybe type" "temp"
                  (606209 'move' call_tmp[606206](44211 call uint(64)[115] 16))
                  unknown call_tmp[606211] "expr temp" "maybe param" "maybe type" "temp"
                  (606214 'move' call_tmp[606211](44309 call == tmp[44264] call_tmp[606206]))
                  unknown call_tmp[606216] "expr temp" "maybe param" "maybe type" "temp"
                  (606219 'move' call_tmp[606216](44312 call _cond_test call_tmp[606211]))
                  if call_tmp[606216]
                  {
                    (505734 'move' ret[505699](505733 'deref' atomic_uint_least16_t[44117]))
                    gotoReturn _end_externT[505697] _end_externT[505697]
                  }
                  {
                    unknown call_tmp[606221] "expr temp" "maybe param" "maybe type" "temp"
                    (606224 'move' call_tmp[606221](44222 call uint(64)[115] 32))
                    unknown call_tmp[606226] "expr temp" "maybe param" "maybe type" "temp"
                    (606229 'move' call_tmp[606226](44316 call == tmp[44264] call_tmp[606221]))
                    unknown call_tmp[606231] "expr temp" "maybe param" "maybe type" "temp"
                    (606234 'move' call_tmp[606231](44319 call _cond_test call_tmp[606226]))
                    if call_tmp[606231]
                    {
                      (505739 'move' ret[505699](505738 'deref' atomic_uint_least32_t[44123]))
                      gotoReturn _end_externT[505697] _end_externT[505697]
                    }
                    {
                      unknown call_tmp[606236] "expr temp" "maybe param" "maybe type" "temp"
                      (606239 'move' call_tmp[606236](44233 call uint(64)[115] 64))
                      unknown call_tmp[606241] "expr temp" "maybe param" "maybe type" "temp"
                      (606244 'move' call_tmp[606241](44323 call == tmp[44264] call_tmp[606236]))
                      unknown call_tmp[606246] "expr temp" "maybe param" "maybe type" "temp"
                      (606249 'move' call_tmp[606246](44326 call _cond_test call_tmp[606241]))
                      if call_tmp[606246]
                      {
                        (505744 'move' ret[505699](505743 'deref' atomic_uint_least64_t[44129]))
                        gotoReturn _end_externT[505697] _end_externT[505697]
                      }
                      {
                        unknown call_tmp[606251] "expr temp" "maybe param" "maybe type" "temp"
                        (606254 'move' call_tmp[606251](44244 call real(64)[16] 32))
                        unknown call_tmp[606256] "expr temp" "maybe param" "maybe type" "temp"
                        (606259 'move' call_tmp[606256](44330 call == tmp[44264] call_tmp[606251]))
                        unknown call_tmp[606261] "expr temp" "maybe param" "maybe type" "temp"
                        (606264 'move' call_tmp[606261](44333 call _cond_test call_tmp[606256]))
                        if call_tmp[606261]
                        {
                          (505749 'move' ret[505699](505748 'deref' atomic__real32[44141]))
                          gotoReturn _end_externT[505697] _end_externT[505697]
                        }
                        {
                          unknown call_tmp[606266] "expr temp" "maybe param" "maybe type" "temp"
                          (606269 'move' call_tmp[606266](44255 call real(64)[16] 64))
                          unknown call_tmp[606271] "expr temp" "maybe param" "maybe type" "temp"
                          (606274 'move' call_tmp[606271](44337 call == tmp[44264] call_tmp[606266]))
                          unknown call_tmp[606276] "expr temp" "maybe param" "maybe type" "temp"
                          (606279 'move' call_tmp[606276](44340 call _cond_test call_tmp[606271]))
                          if call_tmp[606276]
                          {
                            (505754 'move' ret[505699](505753 'deref' atomic__real64[44135]))
                            gotoReturn _end_externT[505697] _end_externT[505697]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    label _end_externT[505697]
    (505701 return ret[505699])
  }
  function externTString[44351](arg T[44349]:_any[178](?)) param : _unknown[51] "private"
  {
    unknown ret[505760] "RVV" "param" "temp"
    unknown call_tmp[606281] "expr temp" "maybe param" "maybe type" "temp"
    (606284 'move' call_tmp[606281](44355 call == T[44349] bool[10]))
    unknown call_tmp[606286] "expr temp" "maybe param" "maybe type" "temp"
    (606289 'move' call_tmp[606286](44376 call _cond_test call_tmp[606281]))
    if call_tmp[606286]
    {
      (505765 'move' ret[505760](505764 'deref' "bool"))
      gotoReturn _end_externTString[505758] _end_externTString[505758]
    }
    unknown call_tmp[606291] "expr temp" "maybe param" "maybe type" "temp"
    (606294 'move' call_tmp[606291](44385 call isInt T[44349]))
    unknown call_tmp[606296] "expr temp" "maybe param" "maybe type" "temp"
    (606299 'move' call_tmp[606296](44433 call _cond_test call_tmp[606291]))
    if call_tmp[606296]
    {
      unknown call_tmp[606301] "expr temp" "maybe param" "maybe type" "temp"
      (606304 'move' call_tmp[606301](44406 call numBits T[44349]))
      unknown call_tmp[606306] "expr temp" "maybe param" "maybe type" "temp"
      (606309 'move' call_tmp[606306](44408 call _cast string[26] call_tmp[606301]))
      unknown call_tmp[606311] "expr temp" "maybe param" "maybe type" "temp"
      (606314 'move' call_tmp[606311](44410 call + "int_least" call_tmp[606306]))
      unknown call_tmp[606316] "expr temp" "maybe param" "maybe type" "temp"
      (606319 'move' call_tmp[606316](44429 call + call_tmp[606311] "_t"))
      (505770 'move' ret[505760](505769 'deref' call_tmp[606316]))
      gotoReturn _end_externTString[505758] _end_externTString[505758]
    }
    unknown call_tmp[606321] "expr temp" "maybe param" "maybe type" "temp"
    (606324 'move' call_tmp[606321](44441 call isUint T[44349]))
    unknown call_tmp[606326] "expr temp" "maybe param" "maybe type" "temp"
    (606329 'move' call_tmp[606326](44473 call _cond_test call_tmp[606321]))
    if call_tmp[606326]
    {
      unknown call_tmp[606331] "expr temp" "maybe param" "maybe type" "temp"
      (606334 'move' call_tmp[606331](44462 call numBits T[44349]))
      unknown call_tmp[606336] "expr temp" "maybe param" "maybe type" "temp"
      (606339 'move' call_tmp[606336](44464 call _cast string[26] call_tmp[606331]))
      unknown call_tmp[606341] "expr temp" "maybe param" "maybe type" "temp"
      (606344 'move' call_tmp[606341](44466 call + "uint_least" call_tmp[606336]))
      unknown call_tmp[606346] "expr temp" "maybe param" "maybe type" "temp"
      (606349 'move' call_tmp[606346](44469 call + call_tmp[606341] "_t"))
      (505775 'move' ret[505760](505774 'deref' call_tmp[606346]))
      gotoReturn _end_externTString[505758] _end_externTString[505758]
    }
    unknown call_tmp[606351] "expr temp" "maybe param" "maybe type" "temp"
    (606354 'move' call_tmp[606351](44481 call isReal T[44349]))
    unknown call_tmp[606356] "expr temp" "maybe param" "maybe type" "temp"
    (606359 'move' call_tmp[606356](44510 call _cond_test call_tmp[606351]))
    if call_tmp[606356]
    {
      unknown call_tmp[606361] "expr temp" "maybe param" "maybe type" "temp"
      (606364 'move' call_tmp[606361](44502 call numBits T[44349]))
      unknown call_tmp[606366] "expr temp" "maybe param" "maybe type" "temp"
      (606369 'move' call_tmp[606366](44504 call _cast string[26] call_tmp[606361]))
      unknown call_tmp[606371] "expr temp" "maybe param" "maybe type" "temp"
      (606374 'move' call_tmp[606371](44506 call + "_real" call_tmp[606366]))
      (505780 'move' ret[505760](505779 'deref' call_tmp[606371]))
      gotoReturn _end_externTString[505758] _end_externTString[505758]
    }
    label _end_externTString[505758]
    (505762 return ret[505760])
  }
  function externFunc[44523](param arg s[44520]:string[26], arg T[44525]:_any[178](?), param arg explicit[44528] :
  1 =
  1) param : _unknown[51] "private"
  {
    unknown ret[505786] "RVV" "param" "temp"
    unknown call_tmp[606376] "expr temp" "maybe param" "maybe type" "temp"
    (606379 'move' call_tmp[606376](44610 call _cond_test explicit[44528]))
    if call_tmp[606376]
    {
      unknown call_tmp[606381] "expr temp" "maybe param" "maybe type" "temp"
      (606384 'move' call_tmp[606381](44550 call + "atomic_" s[44520]))
      unknown call_tmp[606386] "expr temp" "maybe param" "maybe type" "temp"
      (606389 'move' call_tmp[606386](44569 call + call_tmp[606381] "_explicit_"))
      unknown call_tmp[606391] "expr temp" "maybe param" "maybe type" "temp"
      (606394 'move' call_tmp[606391](44574 call externTString T[44525]))
      unknown call_tmp[606396] "expr temp" "maybe param" "maybe type" "temp"
      (606399 'move' call_tmp[606396](44575 call + call_tmp[606386] call_tmp[606391]))
      (505791 'move' ret[505786](505790 'deref' call_tmp[606396]))
      gotoReturn _end_externFunc[505784] _end_externFunc[505784]
    }
    {
      unknown call_tmp[606401] "expr temp" "maybe param" "maybe type" "temp"
      (606404 'move' call_tmp[606401](44581 call + "atomic_" s[44520]))
      unknown call_tmp[606406] "expr temp" "maybe param" "maybe type" "temp"
      (606409 'move' call_tmp[606406](44600 call + call_tmp[606401] "_"))
      unknown call_tmp[606411] "expr temp" "maybe param" "maybe type" "temp"
      (606414 'move' call_tmp[606411](44605 call externTString T[44525]))
      unknown call_tmp[606416] "expr temp" "maybe param" "maybe type" "temp"
      (606419 'move' call_tmp[606416](44606 call + call_tmp[606406] call_tmp[606411]))
      (505796 'move' ret[505786](505795 'deref' call_tmp[606416]))
      gotoReturn _end_externFunc[505784] _end_externFunc[505784]
    }
    label _end_externFunc[505784]
    (505788 return ret[505786])
  }
  function chpl__processorAtomicType[44623](arg T[44621]:_any[178](?)) type : _unknown[51] "no doc"
  {
    unknown ret[505802] "RVV" "temp" "type variable"
    unknown call_tmp[606421] "expr temp" "maybe param" "maybe type" "temp"
    (606424 'move' call_tmp[606421](44627 call == T[44621] bool[10]))
    unknown call_tmp[606426] "expr temp" "maybe param" "maybe type" "temp"
    (606429 'move' call_tmp[606426](44675 call _cond_test call_tmp[606421]))
    if call_tmp[606426]
    {
      (505807 'move' ret[505802](505806 'deref' AtomicBool[45877]))
      gotoReturn _end_chpl__processorAtomicType[505800] _end_chpl__processorAtomicType[505800]
    }
    {
      unknown call_tmp[606431] "expr temp" "maybe param" "maybe type" "temp"
      (606434 'move' call_tmp[606431](44635 call isSupported T[44621]))
      unknown call_tmp[606436] "expr temp" "maybe param" "maybe type" "temp"
      (606439 'move' call_tmp[606436](44669 call _cond_test call_tmp[606431]))
      if call_tmp[606436]
      {
        unknown call_tmp[606441] "expr temp" "maybe param" "maybe type" "temp"
        (606444 'move' call_tmp[606441](44639 call AtomicT[48080](?) T[44621]))
        (505812 'move' ret[505802](505811 'deref' call_tmp[606441]))
        gotoReturn _end_chpl__processorAtomicType[505800] _end_chpl__processorAtomicType[505800]
      }
      {
        unknown call_tmp[606446] "expr temp" "maybe param" "maybe type" "temp"
        (606449 'move' call_tmp[606446](44662 call _cast string[26] T[44621]))
        unknown call_tmp[606451] "expr temp" "maybe param" "maybe type" "temp"
        (606454 'move' call_tmp[606451](44664 call + "Unsupported atomic type: " call_tmp[606446]))
        (44667 call compilerError call_tmp[606451])
      }
    }
    label _end_chpl__processorAtomicType[505800]
    (505804 return ret[505802])
  }
  function chpl__atomicType[44688](arg T[44686]:_any[178](?)) type : _unknown[51] "no doc"
  {
    unknown ret[505818] "RVV" "temp" "type variable"
    unknown call_tmp[606456] "expr temp" "maybe param" "maybe type" "temp"
    (606459 'move' call_tmp[606456](44692 call == CHPL_NETWORK_ATOMICS[21520] "none"))
    unknown call_tmp[606461] "expr temp" "maybe param" "maybe type" "temp"
    (606464 'move' call_tmp[606461](44708 call _cond_test call_tmp[606456]))
    if call_tmp[606461]
    {
      unknown call_tmp[606466] "expr temp" "maybe param" "maybe type" "temp"
      (606469 'move' call_tmp[606466](44697 call chpl__processorAtomicType T[44686]))
      (505823 'move' ret[505818](505822 'deref' call_tmp[606466]))
      gotoReturn _end_chpl__atomicType[505816] _end_chpl__atomicType[505816]
    }
    {
      unknown call_tmp[606471] "expr temp" "maybe param" "maybe type" "temp"
      (606474 'move' call_tmp[606471](44704 call chpl__networkAtomicType T[44686]))
      (505828 'move' ret[505818](505827 'deref' call_tmp[606471]))
      gotoReturn _end_chpl__atomicType[505816] _end_chpl__atomicType[505816]
    }
    label _end_chpl__atomicType[505816]
    (505820 return ret[505818])
  }
  function AtomicBool[45877].init_helper[44730](arg _mt[45881]:_MT[238], arg this[45879]:AtomicBool[45877], arg value[44727]:bool[10]) : _unknown[51] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    function atomic_init[44762](ref arg obj[44759] :
    (44758 call externT bool[10]), arg value[44765]:bool[10], arg _chpl_cname[44773]:string[26] =
    (44752 call externFunc "init" bool[10](explicit = 0))) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "fn synchronization free" "no return value for void"
    {
      unknown ret[505834] "RVV" "temp"
      (505836 return ret[505834])
    }
    { scopeless type
      void[4]
    }
    unknown call_tmp[606478] "expr temp" "maybe param" "maybe type" "temp"
    (606481 'move' call_tmp[606478](370984 call _v _mt[243] this[45879]))
    (44782 call atomic_init call_tmp[606478] value[44727])
    (505838 return _void[55])
  }
  function AtomicBool[45877].init[44788](arg _mt[45885]:_MT[238], ref arg this[45883]:AtomicBool[45877]) : void[4] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[454670] "temp"
    unknown call_tmp[606483] "expr temp" "maybe param" "maybe type" "temp"
    (606486 'move' call_tmp[606483](454673 call externT bool[10]))
    (454675 'default init var' tmp[454670] call_tmp[606483])
    (454677 '.=' this[45883] c"_v" tmp[454670])
    (474384 'end of statement')
    const default[44799] "dead at end of block" "const" "insert auto destroy"
    (540727 'default init var' default[44799] bool[10])
    (44802 'end of statement')
    (44806 call(370991 call (partial) init_helper _mt[243] this[45883]) default[44799])
    (474385 'end of statement' default[44799])
    (505840 return _void[55])
  }
  function AtomicBool[45877].init=[44816](arg _mt[45889]:_MT[238], ref arg this[45887]:AtomicBool[45877], arg other[44813]:AtomicBool[45877]) : void[4] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[454681] "temp"
    unknown call_tmp[606490] "expr temp" "maybe param" "maybe type" "temp"
    (606493 'move' call_tmp[606490](454684 call externT bool[10]))
    (454686 'default init var' tmp[454681] call_tmp[606490])
    (454688 '.=' this[45887] c"_v" tmp[454681])
    (474387 'end of statement')
    unknown call_tmp[606499] "expr temp" "maybe param" "maybe type" "temp"
    (606502 'move' call_tmp[606499](44832 call(44828 call (partial) read _mt[243] other[44813])))
    (44834 call(370997 call (partial) init_helper _mt[243] this[45887]) call_tmp[606499])
    (505842 return _void[55])
  }
  function AtomicBool[45877].init=[44844](arg _mt[45893]:_MT[238], ref arg this[45891]:AtomicBool[45877], arg other[44841]:bool[10]) : void[4] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[454692] "temp"
    unknown call_tmp[606504] "expr temp" "maybe param" "maybe type" "temp"
    (606507 'move' call_tmp[606504](454695 call externT bool[10]))
    (454697 'default init var' tmp[454692] call_tmp[606504])
    (454699 '.=' this[45891] c"_v" tmp[454692])
    (474389 'end of statement')
    (44857 call(371001 call (partial) init_helper _mt[243] this[45891]) other[44841])
    (505844 return _void[55])
  }
  function AtomicBool[45877].deinit[44863](arg _mt[45897]:_MT[238], arg this[45895]:AtomicBool[45877]) : _unknown[51] "atomic type" "destructor" "method" "primary method" "no doc" "no return value for void"
  {
    function atomic_destroy[44897](ref arg obj[44894] :
    (44893 call externT bool[10]), arg _chpl_cname[44904]:string[26] =
    (44887 call externFunc "destroy" bool[10](explicit = 0))) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "fn synchronization free" "no return value for void"
    {
      unknown ret[505848] "RVV" "temp"
      (505850 return ret[505848])
    }
    { scopeless type
      void[4]
    }
    const tmp[44918] "const" "temp"
    unknown call_tmp[606511] "expr temp" "maybe param" "maybe type" "temp"
    (606514 'move' call_tmp[606511](44915 '_wide_get_locale' this[45895]))
    (44920 'move' tmp[44918](44916 'deref' call_tmp[606511]))
    {
      unknown call_tmp[606518] "expr temp" "maybe param" "maybe type" "temp"
      (606521 'move' call_tmp[606518](371008 call _v _mt[243] this[45895]))
      (44913 call atomic_destroy call_tmp[606518])
      (44923 'on block' 0 tmp[44918])
    }
    (505852 return _void[55])
  }
  function AtomicBool[45877].read[44939](arg _mt[45901]:_MT[238], const arg this[45899]:AtomicBool[45877], param arg order[44935]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505862] "RVV" "temp"
    function atomic_load[44972](const  ref arg obj[44969] :
    (44968 call externT bool[10]), arg order[44975]:memory_order[186653], arg _chpl_cname[44983]:string[26] =
    (44962 call externFunc "load" bool[10])) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505856] "RVV" "temp"
      (505858 return ret[505856])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[44989] "dead at end of block" "insert auto destroy"
    (540729 'default init var' ret[44989] bool[10])
    (44992 'end of statement')
    const tmp[45009] "const" "temp"
    unknown call_tmp[606523] "expr temp" "maybe param" "maybe type" "temp"
    (606526 'move' call_tmp[606523](45006 '_wide_get_locale' this[45899]))
    (45011 'move' tmp[45009](45007 'deref' call_tmp[606523]))
    {
      unknown call_tmp[606530] "expr temp" "maybe param" "maybe type" "temp"
      (606533 'move' call_tmp[606530](371017 call _v _mt[243] this[45899]))
      unknown call_tmp[606535] "expr temp" "maybe param" "maybe type" "temp"
      (606538 'move' call_tmp[606535](45001 call c_memory_order order[44935]))
      unknown call_tmp[606540] "expr temp" "maybe param" "maybe type" "temp"
      (606543 'move' call_tmp[606540](45002 call atomic_load call_tmp[606530] call_tmp[606535]))
      (45003 call = ret[44989] call_tmp[606540])
      (474392 'end of statement' ret[44989])
      (45014 'on block' 0 tmp[45009])
    }
    (505868 'move' ret[505862](505867 'coerce' ret[44989] bool[10]))
    gotoReturn _end_read[505860] _end_read[505860]
    (474394 'end of statement' ret[44989])
    label _end_read[505860]
    (505864 return ret[505862])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45877].write[45029](arg _mt[45905]:_MT[238], arg this[45903]:AtomicBool[45877], arg value[45026]:bool[10], param arg order[45036]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[505880] "RVV" "temp"
    function atomic_store[45071](ref arg obj[45068] :
    (45067 call externT bool[10]), arg value[45074]:bool[10], arg order[45078]:memory_order[186653], arg _chpl_cname[45086]:string[26] =
    (45061 call externFunc "store" bool[10])) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505874] "RVV" "temp"
      (505876 return ret[505874])
    }
    { scopeless type
      void[4]
    }
    const tmp[45105] "const" "temp"
    unknown call_tmp[606545] "expr temp" "maybe param" "maybe type" "temp"
    (606548 'move' call_tmp[606545](45102 '_wide_get_locale' this[45903]))
    (45107 'move' tmp[45105](45103 'deref' call_tmp[606545]))
    {
      unknown call_tmp[606552] "expr temp" "maybe param" "maybe type" "temp"
      (606555 'move' call_tmp[606552](371027 call _v _mt[243] this[45903]))
      unknown call_tmp[606557] "expr temp" "maybe param" "maybe type" "temp"
      (606560 'move' call_tmp[606557](45099 call c_memory_order order[45036]))
      (45100 call atomic_store call_tmp[606552] value[45026] call_tmp[606557])
      (45110 'on block' 0 tmp[45105])
    }
    (505882 return ret[505880])
  }
  { scopeless type
    void[4]
  }
  function AtomicBool[45877].exchange[45122](arg _mt[45909]:_MT[238], arg this[45907]:AtomicBool[45877], arg value[45119]:bool[10], param arg order[45129]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505892] "RVV" "temp"
    function atomic_exchange[45164](ref arg obj[45161] :
    (45160 call externT bool[10]), arg value[45167]:bool[10], arg order[45171]:memory_order[186653], arg _chpl_cname[45179]:string[26] =
    (45154 call externFunc "exchange" bool[10])) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505886] "RVV" "temp"
      (505888 return ret[505886])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[45185] "dead at end of block" "insert auto destroy"
    (540731 'default init var' ret[45185] bool[10])
    (45188 'end of statement')
    const tmp[45206] "const" "temp"
    unknown call_tmp[606562] "expr temp" "maybe param" "maybe type" "temp"
    (606565 'move' call_tmp[606562](45203 '_wide_get_locale' this[45907]))
    (45208 'move' tmp[45206](45204 'deref' call_tmp[606562]))
    {
      unknown call_tmp[606569] "expr temp" "maybe param" "maybe type" "temp"
      (606572 'move' call_tmp[606569](371038 call _v _mt[243] this[45907]))
      unknown call_tmp[606574] "expr temp" "maybe param" "maybe type" "temp"
      (606577 'move' call_tmp[606574](45198 call c_memory_order order[45129]))
      unknown call_tmp[606579] "expr temp" "maybe param" "maybe type" "temp"
      (606582 'move' call_tmp[606579](45199 call atomic_exchange call_tmp[606569] value[45119] call_tmp[606574]))
      (45200 call = ret[45185] call_tmp[606579])
      (474397 'end of statement' ret[45185])
      (45211 'on block' 0 tmp[45206])
    }
    (505898 'move' ret[505892](505897 'coerce' ret[45185] bool[10]))
    gotoReturn _end_exchange[505890] _end_exchange[505890]
    (474399 'end of statement' ret[45185])
    label _end_exchange[505890]
    (505894 return ret[505892])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45877].compareExchange[45226](arg _mt[45913]:_MT[238], arg this[45911]:AtomicBool[45877], ref arg expected[45223]:bool[10], arg desired[45229]:bool[10], param arg order[45237]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505904] "RVV" "temp"
    unknown call_tmp[606586] "expr temp" "maybe param" "maybe type" "temp"
    (606589 'move' call_tmp[606586](45255 call readableOrder order[45237]))
    unknown call_tmp[606591] "expr temp" "maybe param" "maybe type" "temp"
    (606594 'move' call_tmp[606591](45256 call(45245 call (partial) compareExchange _mt[243] this[45911]) expected[45223] desired[45229] order[45237] call_tmp[606586]))
    (505910 'move' ret[505904](505909 'coerce' call_tmp[606591] bool[10]))
    (505906 return ret[505904])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45877].compareExchange[45269](arg _mt[45917]:_MT[238], arg this[45915]:AtomicBool[45877], ref arg expected[45266]:bool[10], arg desired[45272]:bool[10], param arg success[45276]:memoryOrder[187012], param arg failure[45280]:memoryOrder[187012]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505920] "RVV" "temp"
    function atomic_compare_exchange_strong[45314](ref arg obj[45311] :
    (45310 call externT bool[10]), ref arg expected[45317]:bool[10], arg desired[45321]:bool[10], arg succ[45325]:memory_order[186653], arg fail[45329]:memory_order[186653], arg _chpl_cname[45337]:string[26] =
    (45304 call externFunc "compare_exchange_strong" bool[10])) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505914] "RVV" "temp"
      (505916 return ret[505914])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[45343] "dead at end of block" "insert auto destroy"
    (540733 'default init var' ret[45343] bool[10])
    (45346 'end of statement')
    const tmp[45388] "const" "temp"
    unknown call_tmp[606596] "expr temp" "maybe param" "maybe type" "temp"
    (606599 'move' call_tmp[606596](45385 '_wide_get_locale' this[45915]))
    (45390 'move' tmp[45388](45386 'deref' call_tmp[606596]))
    {
      {
        unknown localizedExpected[45349] "dead at end of block" "insert auto destroy"
        (540735 'init var' localizedExpected[45349] expected[45266])
        (45352 'end of statement')
        unknown call_tmp[606603] "expr temp" "maybe param" "maybe type" "temp"
        (606606 'move' call_tmp[606603](371058 call _v _mt[243] this[45915]))
        unknown call_tmp[606608] "expr temp" "maybe param" "maybe type" "temp"
        (606611 'move' call_tmp[606608](45363 call c_memory_order success[45276]))
        unknown call_tmp[606613] "expr temp" "maybe param" "maybe type" "temp"
        (606616 'move' call_tmp[606613](45367 call c_memory_order failure[45280]))
        unknown call_tmp[606618] "expr temp" "maybe param" "maybe type" "temp"
        (606621 'move' call_tmp[606618](45368 call atomic_compare_exchange_strong call_tmp[606603] localizedExpected[45349] desired[45272] call_tmp[606608] call_tmp[606613]))
        (45369 call = ret[45343] call_tmp[606618])
        (474402 'end of statement' ret[45343] localizedExpected[45349])
        unknown call_tmp[606623] "expr temp" "maybe param" "maybe type" "temp"
        (606626 'move' call_tmp[606623](45373 call ! ret[45343]))
        unknown call_tmp[606628] "expr temp" "maybe param" "maybe type" "temp"
        (606631 'move' call_tmp[606628](45380 call _cond_test call_tmp[606623]))
        if call_tmp[606628]
        {
          (45377 call = expected[45266] localizedExpected[45349])
          (474405 'end of statement' localizedExpected[45349])
        }
      }
      (45393 'on block' 0 tmp[45388])
    }
    (505926 'move' ret[505920](505925 'coerce' ret[45343] bool[10]))
    gotoReturn _end_compareExchange[505918] _end_compareExchange[505918]
    (474407 'end of statement' ret[45343])
    label _end_compareExchange[505918]
    (505922 return ret[505920])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45877].compareExchangeWeak[45408](arg _mt[45921]:_MT[238], arg this[45919]:AtomicBool[45877], ref arg expected[45405]:bool[10], arg desired[45411]:bool[10], param arg order[45419]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505932] "RVV" "temp"
    unknown call_tmp[606635] "expr temp" "maybe param" "maybe type" "temp"
    (606638 'move' call_tmp[606635](45437 call readableOrder order[45419]))
    unknown call_tmp[606640] "expr temp" "maybe param" "maybe type" "temp"
    (606643 'move' call_tmp[606640](45438 call(45427 call (partial) compareExchangeWeak _mt[243] this[45919]) expected[45405] desired[45411] order[45419] call_tmp[606635]))
    (505938 'move' ret[505932](505937 'coerce' call_tmp[606640] bool[10]))
    (505934 return ret[505932])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45877].compareExchangeWeak[45451](arg _mt[45925]:_MT[238], arg this[45923]:AtomicBool[45877], ref arg expected[45448]:bool[10], arg desired[45454]:bool[10], param arg success[45458]:memoryOrder[187012], param arg failure[45462]:memoryOrder[187012]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505948] "RVV" "temp"
    function atomic_compare_exchange_weak[45495](ref arg obj[45492] :
    (45491 call externT bool[10]), ref arg expected[45498]:bool[10], arg desired[45502]:bool[10], arg succ[45506]:memory_order[186653], arg fail[45510]:memory_order[186653], arg _chpl_cname[45518]:string[26] =
    (45485 call externFunc "compare_exchange_weak" bool[10])) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505942] "RVV" "temp"
      (505944 return ret[505942])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[45524] "dead at end of block" "insert auto destroy"
    (540737 'default init var' ret[45524] bool[10])
    (45527 'end of statement')
    const tmp[45569] "const" "temp"
    unknown call_tmp[606645] "expr temp" "maybe param" "maybe type" "temp"
    (606648 'move' call_tmp[606645](45566 '_wide_get_locale' this[45923]))
    (45571 'move' tmp[45569](45567 'deref' call_tmp[606645]))
    {
      {
        unknown localizedExpected[45530] "dead at end of block" "insert auto destroy"
        (540739 'init var' localizedExpected[45530] expected[45448])
        (45533 'end of statement')
        unknown call_tmp[606652] "expr temp" "maybe param" "maybe type" "temp"
        (606655 'move' call_tmp[606652](371083 call _v _mt[243] this[45923]))
        unknown call_tmp[606657] "expr temp" "maybe param" "maybe type" "temp"
        (606660 'move' call_tmp[606657](45544 call c_memory_order success[45458]))
        unknown call_tmp[606662] "expr temp" "maybe param" "maybe type" "temp"
        (606665 'move' call_tmp[606662](45548 call c_memory_order failure[45462]))
        unknown call_tmp[606667] "expr temp" "maybe param" "maybe type" "temp"
        (606670 'move' call_tmp[606667](45549 call atomic_compare_exchange_weak call_tmp[606652] localizedExpected[45530] desired[45454] call_tmp[606657] call_tmp[606662]))
        (45550 call = ret[45524] call_tmp[606667])
        (474410 'end of statement' ret[45524] localizedExpected[45530])
        unknown call_tmp[606672] "expr temp" "maybe param" "maybe type" "temp"
        (606675 'move' call_tmp[606672](45554 call ! ret[45524]))
        unknown call_tmp[606677] "expr temp" "maybe param" "maybe type" "temp"
        (606680 'move' call_tmp[606677](45561 call _cond_test call_tmp[606672]))
        if call_tmp[606677]
        {
          (45558 call = expected[45448] localizedExpected[45530])
          (474413 'end of statement' localizedExpected[45530])
        }
      }
      (45574 'on block' 0 tmp[45569])
    }
    (505953 'move' ret[505948](505952 'deref' ret[45524]))
    gotoReturn _end_compareExchangeWeak[505946] _end_compareExchangeWeak[505946]
    (474415 'end of statement' ret[45524])
    label _end_compareExchangeWeak[505946]
    (505950 return ret[505948])
  }
  function AtomicBool[45877].compareAndSwap[45588](arg _mt[45929]:_MT[238], arg this[45927]:AtomicBool[45877], arg expected[45585]:bool[10], arg desired[45591]:bool[10], param arg order[45599]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505965] "RVV" "temp"
    function atomic_compare_exchange_strong[45618](ref arg obj[45615] :
    (45614 call externT bool[10]), ref arg expected[45621]:bool[10], arg desired[45625]:bool[10], arg succ[45629]:memory_order[186653], arg fail[45633]:memory_order[186653], arg _chpl_cname[45641]:string[26] =
    (45608 call externFunc "compare_exchange_strong" bool[10])) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505959] "RVV" "temp"
      (505961 return ret[505959])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[45647] "dead at end of block" "insert auto destroy"
    (540741 'default init var' ret[45647] bool[10])
    (45650 'end of statement')
    const tmp[45682] "const" "temp"
    unknown call_tmp[606682] "expr temp" "maybe param" "maybe type" "temp"
    (606685 'move' call_tmp[606682](45679 '_wide_get_locale' this[45927]))
    (45684 'move' tmp[45682](45680 'deref' call_tmp[606682]))
    {
      {
        unknown mutableExpected[45653] "dead at end of block" "insert auto destroy"
        (540743 'init var' mutableExpected[45653] expected[45585])
        (45656 'end of statement')
        unknown call_tmp[606689] "expr temp" "maybe param" "maybe type" "temp"
        (606692 'move' call_tmp[606689](371102 call _v _mt[243] this[45927]))
        unknown call_tmp[606694] "expr temp" "maybe param" "maybe type" "temp"
        (606697 'move' call_tmp[606694](45667 call c_memory_order order[45599]))
        unknown call_tmp[606699] "expr temp" "maybe param" "maybe type" "temp"
        (606702 'move' call_tmp[606699](45672 call readableOrder order[45599]))
        unknown call_tmp[606704] "expr temp" "maybe param" "maybe type" "temp"
        (606707 'move' call_tmp[606704](45674 call c_memory_order call_tmp[606699]))
        unknown call_tmp[606709] "expr temp" "maybe param" "maybe type" "temp"
        (606712 'move' call_tmp[606709](45675 call atomic_compare_exchange_strong call_tmp[606689] mutableExpected[45653] desired[45591] call_tmp[606694] call_tmp[606704]))
        (45676 call = ret[45647] call_tmp[606709])
        (474417 'end of statement' ret[45647] mutableExpected[45653])
      }
      (45687 'on block' 0 tmp[45682])
    }
    (505971 'move' ret[505965](505970 'coerce' ret[45647] bool[10]))
    gotoReturn _end_compareAndSwap[505963] _end_compareAndSwap[505963]
    (474420 'end of statement' ret[45647])
    label _end_compareAndSwap[505963]
    (505967 return ret[505965])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45877].testAndSet[45707](arg _mt[45933]:_MT[238], arg this[45931]:AtomicBool[45877], param arg order[45703]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505977] "RVV" "temp"
    unknown call_tmp[606716] "expr temp" "maybe param" "maybe type" "temp"
    (606719 'move' call_tmp[606716](45717 call(45711 call (partial) exchange _mt[243] this[45931]) 1 order[45703]))
    (505983 'move' ret[505977](505982 'coerce' call_tmp[606716] bool[10]))
    (505979 return ret[505977])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45877].clear[45735](arg _mt[45937]:_MT[238], arg this[45935]:AtomicBool[45877], param arg order[45731]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[505987] "RVV" "temp"
    (45745 call(45739 call (partial) write _mt[243] this[45935]) 0 order[45731])
    (505989 return ret[505987])
  }
  { scopeless type
    void[4]
  }
  function AtomicBool[45877].waitFor[45757](arg _mt[45941]:_MT[238], const arg this[45939]:AtomicBool[45877], arg value[45754]:bool[10], param arg order[45764]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[505993] "RVV" "temp"
    const tmp[45848] "const" "temp"
    unknown call_tmp[606723] "expr temp" "maybe param" "maybe type" "temp"
    (606726 'move' call_tmp[606723](45845 '_wide_get_locale' this[45939]))
    (45850 'move' tmp[45848](45846 'deref' call_tmp[606723]))
    {
      {
        {
          unknown tmp[45791] "temp"
          unknown call_tmp[606730] "expr temp" "maybe param" "maybe type" "temp"
          (606733 'move' call_tmp[606730](45826 call(45823 call (partial) read _mt[243] this[45939])(order = relaxed[187010])))
          unknown call_tmp[606735] "expr temp" "maybe param" "maybe type" "temp"
          (606738 'move' call_tmp[606735](45821 call != call_tmp[606730] value[45754]))
          (45833 'move' tmp[45791](45819 call _cond_test call_tmp[606735]))
          WhileDo[45796]
          {
            {
              (45788 call chpl_task_yield)
            }
            label _continueLabel[45794]
            unknown call_tmp[606742] "expr temp" "maybe param" "maybe type" "temp"
            (606745 'move' call_tmp[606742](45807 call(45804 call (partial) read _mt[243] this[45939])(order = relaxed[187010])))
            unknown call_tmp[606747] "expr temp" "maybe param" "maybe type" "temp"
            (606750 'move' call_tmp[606747](45802 call != call_tmp[606742] value[45754]))
            (45814 'move' tmp[45791](45800 call _cond_test call_tmp[606747]))
            tmp[45791]
          }
          label _breakLabel[45795]
        }
        unknown call_tmp[606752] "expr temp" "maybe param" "maybe type" "temp"
        (606755 'move' call_tmp[606752](45841 call c_memory_order order[45764]))
        (45843 call chpl_atomic_thread_fence call_tmp[606752])
      }
      (45853 'on block' 0 tmp[45848])
    }
    (505995 return ret[505993])
  }
  { scopeless type
    void[4]
  }
  function AtomicBool[45877].writeThis[45864](arg _mt[45945]:_MT[238], const arg this[45943]:AtomicBool[45877], arg x[45862]:_any[178](?)) : _unknown[51] throws "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[606759] "expr temp" "maybe param" "maybe type" "temp"
    (606762 'move' call_tmp[606759](45869 call(371121 call (partial) read _mt[243] this[45943])))
    (45870 call <~> x[45862] call_tmp[606759])
    (505997 return _void[55])
  }
  type AtomicBool[45877] unknown _v[44720] "no doc"(44719 call externT bool[10])
  function AtomicT[48080](?).init_helper[45966](arg _mt[48084]:_MT[238], arg this[48082]:AtomicT[48080](?), arg value[45963] :
  (371127 call T _mt[243] this[48082])) : _unknown[51] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    function atomic_init[45984](ref arg obj[45981] :
    unknown call_tmp[606768] "expr temp" "maybe param" "maybe type" "temp", arg value[45987] :
    (371142 call T _mt[243] this[48082]), arg _chpl_cname[45995]:string[26] =
    unknown call_tmp[606777] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "fn synchronization free" "no return value for void"
    {
      unknown ret[506001] "RVV" "temp"
      (506003 return ret[506001])
    }
    { scopeless type
      void[4]
    }
    unknown call_tmp[606784] "expr temp" "maybe param" "maybe type" "temp"
    (606787 'move' call_tmp[606784](371147 call _v _mt[243] this[48082]))
    (46004 call atomic_init call_tmp[606784] value[45963])
    (506005 return _void[55])
  }
  function AtomicT[48080](?).init[46012](arg _mt[48088]:_MT[238], ref arg this[48086]:AtomicT[48080](?), arg T[46010]:_any[178](?)) : void[4] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[454703] "temp" "type variable"
    (454705 'move' tmp[454703] T[46010])
    (454707 'init field' this[48086] c"T" tmp[454703])
    (474428 'end of statement')
    unknown tmp[454711] "temp"
    unknown call_tmp[606789] "expr temp" "maybe param" "maybe type" "temp"
    (606792 'move' call_tmp[606789](454722 '.v' this[48086] c"T"))
    unknown call_tmp[606794] "expr temp" "maybe param" "maybe type" "temp"
    (606797 'move' call_tmp[606794](454714 call externT call_tmp[606789]))
    (454716 'default init var' tmp[454711] call_tmp[606794])
    (454718 '.=' this[48086] c"_v" tmp[454711])
    (474429 'end of statement')
    const default[46033] "dead at end of block" "const" "insert auto destroy"
    (540745 'default init var' default[46033] T[46010])
    (46036 'end of statement')
    (46040 call(371154 call (partial) init_helper _mt[243] this[48086]) default[46033])
    (474430 'end of statement' default[46033])
    (506007 return _void[55])
  }
  function AtomicT[48080](?).init=[46051](arg _mt[48092]:_MT[238], ref arg this[48090]:AtomicT[48080](?), const  ref arg other[46048]:AtomicT[48080](?)) : void[4] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[454725] "temp" "type variable"
    (454727 'move' tmp[454725](46058 call T _mt[243] other[46048]))
    (454729 'init field' this[48090] c"T" tmp[454725])
    (474432 'end of statement')
    unknown tmp[454733] "temp"
    unknown call_tmp[606803] "expr temp" "maybe param" "maybe type" "temp"
    (606806 'move' call_tmp[606803](454744 '.v' this[48090] c"T"))
    unknown call_tmp[606808] "expr temp" "maybe param" "maybe type" "temp"
    (606811 'move' call_tmp[606808](454736 call externT call_tmp[606803]))
    (454738 'default init var' tmp[454733] call_tmp[606808])
    (454740 '.=' this[48090] c"_v" tmp[454733])
    (474433 'end of statement')
    unknown call_tmp[606817] "expr temp" "maybe param" "maybe type" "temp"
    (606820 'move' call_tmp[606817](46078 call(46074 call (partial) read _mt[243] other[46048])))
    (46080 call(371160 call (partial) init_helper _mt[243] this[48090]) call_tmp[606817])
    (506009 return _void[55])
  }
  function AtomicT[48080](?).init=[46094](arg _mt[48096]:_MT[238], ref arg this[48094]:AtomicT[48080](?), arg other[46091] :
  unknown call_tmp[606822] "expr temp" "maybe param" "maybe type" "temp" "type variable") : void[4] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[454747] "temp" "type variable"
    (454749 'move' tmp[454747](46101 'typeof' other[46091]))
    (454751 'init field' this[48094] c"T" tmp[454747])
    (474435 'end of statement')
    unknown tmp[454755] "temp"
    unknown call_tmp[606829] "expr temp" "maybe param" "maybe type" "temp"
    (606832 'move' call_tmp[606829](454766 '.v' this[48094] c"T"))
    unknown call_tmp[606834] "expr temp" "maybe param" "maybe type" "temp"
    (606837 'move' call_tmp[606834](454758 call externT call_tmp[606829]))
    (454760 'default init var' tmp[454755] call_tmp[606834])
    (454762 '.=' this[48094] c"_v" tmp[454755])
    (474436 'end of statement')
    (46116 call(371166 call (partial) init_helper _mt[243] this[48094]) other[46091])
    (506011 return _void[55])
  }
  function AtomicT[48080](?).deinit[46122](arg _mt[48100]:_MT[238], arg this[48098]:AtomicT[48080](?)) : _unknown[51] "atomic type" "destructor" "method" "primary method" "no doc" "no return value for void"
  {
    function atomic_destroy[46140](ref arg obj[46137] :
    unknown call_tmp[606843] "expr temp" "maybe param" "maybe type" "temp", arg _chpl_cname[46147]:string[26] =
    unknown call_tmp[606850] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "fn synchronization free" "no return value for void"
    {
      unknown ret[506015] "RVV" "temp"
      (506017 return ret[506015])
    }
    { scopeless type
      void[4]
    }
    const tmp[46161] "const" "temp"
    unknown call_tmp[606855] "expr temp" "maybe param" "maybe type" "temp"
    (606858 'move' call_tmp[606855](46158 '_wide_get_locale' this[48098]))
    (46163 'move' tmp[46161](46159 'deref' call_tmp[606855]))
    {
      unknown call_tmp[606862] "expr temp" "maybe param" "maybe type" "temp"
      (606865 'move' call_tmp[606862](371183 call _v _mt[243] this[48098]))
      (46156 call atomic_destroy call_tmp[606862])
      (46166 'on block' 0 tmp[46161])
    }
    (506019 return _void[55])
  }
  function AtomicT[48080](?).read[46182](arg _mt[48104]:_MT[238], const arg this[48102]:AtomicT[48080](?), param arg order[46178]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506029] "RVV" "temp"
    function atomic_load[46199](const  ref arg obj[46196] :
    unknown call_tmp[606869] "expr temp" "maybe param" "maybe type" "temp", arg order[46202]:memory_order[186653], arg _chpl_cname[46210]:string[26] =
    unknown call_tmp[606876] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506023] "RVV" "temp"
      (506025 return ret[506023])
    }
    { scopeless type
      (371205 call T _mt[243] this[48102])
    }
    unknown ret[46216] "dead at end of block" "insert auto destroy"
    unknown call_tmp[606885] "expr temp" "maybe param" "maybe type" "temp"
    (606888 'move' call_tmp[606885](371210 call T _mt[243] this[48102]))
    (540747 'default init var' ret[46216] call_tmp[606885])
    (46219 'end of statement')
    const tmp[46236] "const" "temp"
    unknown call_tmp[606890] "expr temp" "maybe param" "maybe type" "temp"
    (606893 'move' call_tmp[606890](46233 '_wide_get_locale' this[48102]))
    (46238 'move' tmp[46236](46234 'deref' call_tmp[606890]))
    {
      unknown call_tmp[606897] "expr temp" "maybe param" "maybe type" "temp"
      (606900 'move' call_tmp[606897](371217 call _v _mt[243] this[48102]))
      unknown call_tmp[606902] "expr temp" "maybe param" "maybe type" "temp"
      (606905 'move' call_tmp[606902](46228 call c_memory_order order[46178]))
      unknown call_tmp[606907] "expr temp" "maybe param" "maybe type" "temp"
      (606910 'move' call_tmp[606907](46229 call atomic_load call_tmp[606897] call_tmp[606902]))
      (46230 call = ret[46216] call_tmp[606907])
      (474439 'end of statement' ret[46216])
      (46241 'on block' 0 tmp[46236])
    }
    unknown call_tmp[606914] "expr temp" "maybe param" "maybe type" "temp"
    (606917 'move' call_tmp[606914](506034 call T _mt[243] this[48102]))
    (506038 'move' ret[506029](506037 'coerce' ret[46216] call_tmp[606914]))
    gotoReturn _end_read[506027] _end_read[506027]
    (474441 'end of statement' ret[46216])
    label _end_read[506027]
    (506031 return ret[506029])
  }
  { scopeless type
    (371189 call T _mt[243] this[48102])
  }
  function AtomicT[48080](?).write[46256](arg _mt[48108]:_MT[238], arg this[48106]:AtomicT[48080](?), arg value[46253] :
  (371224 call T _mt[243] this[48106]), param arg order[46263]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506050] "RVV" "temp"
    function atomic_store[46282](ref arg obj[46279] :
    unknown call_tmp[606925] "expr temp" "maybe param" "maybe type" "temp", arg value[46285] :
    (371240 call T _mt[243] this[48106]), arg order[46289]:memory_order[186653], arg _chpl_cname[46297]:string[26] =
    unknown call_tmp[606934] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506044] "RVV" "temp"
      (506046 return ret[506044])
    }
    { scopeless type
      void[4]
    }
    const tmp[46316] "const" "temp"
    unknown call_tmp[606939] "expr temp" "maybe param" "maybe type" "temp"
    (606942 'move' call_tmp[606939](46313 '_wide_get_locale' this[48106]))
    (46318 'move' tmp[46316](46314 'deref' call_tmp[606939]))
    {
      unknown call_tmp[606946] "expr temp" "maybe param" "maybe type" "temp"
      (606949 'move' call_tmp[606946](371247 call _v _mt[243] this[48106]))
      unknown call_tmp[606951] "expr temp" "maybe param" "maybe type" "temp"
      (606954 'move' call_tmp[606951](46310 call c_memory_order order[46263]))
      (46311 call atomic_store call_tmp[606946] value[46253] call_tmp[606951])
      (46321 'on block' 0 tmp[46316])
    }
    (506052 return ret[506050])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48080](?).exchange[46333](arg _mt[48112]:_MT[238], arg this[48110]:AtomicT[48080](?), arg value[46330] :
  (371254 call T _mt[243] this[48110]), param arg order[46340]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506062] "RVV" "temp"
    function atomic_exchange[46359](ref arg obj[46356] :
    unknown call_tmp[606960] "expr temp" "maybe param" "maybe type" "temp", arg value[46362] :
    (371275 call T _mt[243] this[48110]), arg order[46366]:memory_order[186653], arg _chpl_cname[46374]:string[26] =
    unknown call_tmp[606969] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506056] "RVV" "temp"
      (506058 return ret[506056])
    }
    { scopeless type
      (371281 call T _mt[243] this[48110])
    }
    unknown ret[46380] "dead at end of block" "insert auto destroy"
    unknown call_tmp[606978] "expr temp" "maybe param" "maybe type" "temp"
    (606981 'move' call_tmp[606978](371286 call T _mt[243] this[48110]))
    (540749 'default init var' ret[46380] call_tmp[606978])
    (46383 'end of statement')
    const tmp[46401] "const" "temp"
    unknown call_tmp[606983] "expr temp" "maybe param" "maybe type" "temp"
    (606986 'move' call_tmp[606983](46398 '_wide_get_locale' this[48110]))
    (46403 'move' tmp[46401](46399 'deref' call_tmp[606983]))
    {
      unknown call_tmp[606990] "expr temp" "maybe param" "maybe type" "temp"
      (606993 'move' call_tmp[606990](371293 call _v _mt[243] this[48110]))
      unknown call_tmp[606995] "expr temp" "maybe param" "maybe type" "temp"
      (606998 'move' call_tmp[606995](46393 call c_memory_order order[46340]))
      unknown call_tmp[607000] "expr temp" "maybe param" "maybe type" "temp"
      (607003 'move' call_tmp[607000](46394 call atomic_exchange call_tmp[606990] value[46330] call_tmp[606995]))
      (46395 call = ret[46380] call_tmp[607000])
      (474444 'end of statement' ret[46380])
      (46406 'on block' 0 tmp[46401])
    }
    unknown call_tmp[607007] "expr temp" "maybe param" "maybe type" "temp"
    (607010 'move' call_tmp[607007](506067 call T _mt[243] this[48110]))
    (506071 'move' ret[506062](506070 'coerce' ret[46380] call_tmp[607007]))
    gotoReturn _end_exchange[506060] _end_exchange[506060]
    (474446 'end of statement' ret[46380])
    label _end_exchange[506060]
    (506064 return ret[506062])
  }
  { scopeless type
    (371260 call T _mt[243] this[48110])
  }
  function AtomicT[48080](?).compareExchange[46421](arg _mt[48116]:_MT[238], arg this[48114]:AtomicT[48080](?), ref arg expected[46418] :
  (371301 call T _mt[243] this[48114]), arg desired[46424] :
  (371306 call T _mt[243] this[48114]), param arg order[46432]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506077] "RVV" "temp"
    unknown call_tmp[607020] "expr temp" "maybe param" "maybe type" "temp"
    (607023 'move' call_tmp[607020](46448 call readableOrder order[46432]))
    unknown call_tmp[607025] "expr temp" "maybe param" "maybe type" "temp"
    (607028 'move' call_tmp[607025](46449 call(46438 call (partial) compareExchange _mt[243] this[48114]) expected[46418] desired[46424] order[46432] call_tmp[607020]))
    (506083 'move' ret[506077](506082 'coerce' call_tmp[607025] bool[10]))
    (506079 return ret[506077])
  }
  { scopeless type
    bool[10]
  }
  function AtomicT[48080](?).compareExchange[46462](arg _mt[48120]:_MT[238], arg this[48118]:AtomicT[48080](?), ref arg expected[46459] :
  (371316 call T _mt[243] this[48118]), arg desired[46465] :
  (371321 call T _mt[243] this[48118]), param arg success[46469]:memoryOrder[187012], param arg failure[46473]:memoryOrder[187012]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506093] "RVV" "temp"
    function atomic_compare_exchange_strong[46491](ref arg obj[46488] :
    unknown call_tmp[607036] "expr temp" "maybe param" "maybe type" "temp", ref arg expected[46494] :
    (371338 call T _mt[243] this[48118]), arg desired[46498] :
    (371343 call T _mt[243] this[48118]), arg succ[46502]:memory_order[186653], arg fail[46506]:memory_order[186653], arg _chpl_cname[46514]:string[26] =
    unknown call_tmp[607047] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506087] "RVV" "temp"
      (506089 return ret[506087])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[46520] "dead at end of block" "insert auto destroy"
    (540751 'default init var' ret[46520] bool[10])
    (46523 'end of statement')
    const tmp[46565] "const" "temp"
    unknown call_tmp[607052] "expr temp" "maybe param" "maybe type" "temp"
    (607055 'move' call_tmp[607052](46562 '_wide_get_locale' this[48118]))
    (46567 'move' tmp[46565](46563 'deref' call_tmp[607052]))
    {
      {
        unknown localizedExpected[46526] "dead at end of block" "insert auto destroy"
        (540753 'init var' localizedExpected[46526] expected[46459])
        (46529 'end of statement')
        unknown call_tmp[607059] "expr temp" "maybe param" "maybe type" "temp"
        (607062 'move' call_tmp[607059](371353 call _v _mt[243] this[48118]))
        unknown call_tmp[607064] "expr temp" "maybe param" "maybe type" "temp"
        (607067 'move' call_tmp[607064](46540 call c_memory_order success[46469]))
        unknown call_tmp[607069] "expr temp" "maybe param" "maybe type" "temp"
        (607072 'move' call_tmp[607069](46544 call c_memory_order failure[46473]))
        unknown call_tmp[607074] "expr temp" "maybe param" "maybe type" "temp"
        (607077 'move' call_tmp[607074](46545 call atomic_compare_exchange_strong call_tmp[607059] localizedExpected[46526] desired[46465] call_tmp[607064] call_tmp[607069]))
        (46546 call = ret[46520] call_tmp[607074])
        (474449 'end of statement' ret[46520] localizedExpected[46526])
        unknown call_tmp[607079] "expr temp" "maybe param" "maybe type" "temp"
        (607082 'move' call_tmp[607079](46550 call ! ret[46520]))
        unknown call_tmp[607084] "expr temp" "maybe param" "maybe type" "temp"
        (607087 'move' call_tmp[607084](46557 call _cond_test call_tmp[607079]))
        if call_tmp[607084]
        {
          (46554 call = expected[46459] localizedExpected[46526])
          (474452 'end of statement' localizedExpected[46526])
        }
      }
      (46570 'on block' 0 tmp[46565])
    }
    (506099 'move' ret[506093](506098 'coerce' ret[46520] bool[10]))
    gotoReturn _end_compareExchange[506091] _end_compareExchange[506091]
    (474454 'end of statement' ret[46520])
    label _end_compareExchange[506091]
    (506095 return ret[506093])
  }
  { scopeless type
    bool[10]
  }
  function AtomicT[48080](?).compareExchangeWeak[46585](arg _mt[48124]:_MT[238], arg this[48122]:AtomicT[48080](?), ref arg expected[46582] :
  (371366 call T _mt[243] this[48122]), arg desired[46588] :
  (371371 call T _mt[243] this[48122]), param arg order[46596]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506105] "RVV" "temp"
    unknown call_tmp[607095] "expr temp" "maybe param" "maybe type" "temp"
    (607098 'move' call_tmp[607095](46612 call readableOrder order[46596]))
    unknown call_tmp[607100] "expr temp" "maybe param" "maybe type" "temp"
    (607103 'move' call_tmp[607100](46613 call(46602 call (partial) compareExchangeWeak _mt[243] this[48122]) expected[46582] desired[46588] order[46596] call_tmp[607095]))
    (506111 'move' ret[506105](506110 'coerce' call_tmp[607100] bool[10]))
    (506107 return ret[506105])
  }
  { scopeless type
    bool[10]
  }
  function AtomicT[48080](?).compareExchangeWeak[46626](arg _mt[48128]:_MT[238], arg this[48126]:AtomicT[48080](?), ref arg expected[46623] :
  (371381 call T _mt[243] this[48126]), arg desired[46629] :
  (371386 call T _mt[243] this[48126]), param arg success[46633]:memoryOrder[187012], param arg failure[46637]:memoryOrder[187012]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506121] "RVV" "temp"
    function atomic_compare_exchange_weak[46655](ref arg obj[46652] :
    unknown call_tmp[607111] "expr temp" "maybe param" "maybe type" "temp", ref arg expected[46658] :
    (371403 call T _mt[243] this[48126]), arg desired[46662] :
    (371408 call T _mt[243] this[48126]), arg succ[46666]:memory_order[186653], arg fail[46670]:memory_order[186653], arg _chpl_cname[46678]:string[26] =
    unknown call_tmp[607122] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506115] "RVV" "temp"
      (506117 return ret[506115])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[46684] "dead at end of block" "insert auto destroy"
    (540755 'default init var' ret[46684] bool[10])
    (46687 'end of statement')
    const tmp[46729] "const" "temp"
    unknown call_tmp[607127] "expr temp" "maybe param" "maybe type" "temp"
    (607130 'move' call_tmp[607127](46726 '_wide_get_locale' this[48126]))
    (46731 'move' tmp[46729](46727 'deref' call_tmp[607127]))
    {
      {
        unknown localizedExpected[46690] "dead at end of block" "insert auto destroy"
        (540757 'init var' localizedExpected[46690] expected[46623])
        (46693 'end of statement')
        unknown call_tmp[607134] "expr temp" "maybe param" "maybe type" "temp"
        (607137 'move' call_tmp[607134](371418 call _v _mt[243] this[48126]))
        unknown call_tmp[607139] "expr temp" "maybe param" "maybe type" "temp"
        (607142 'move' call_tmp[607139](46704 call c_memory_order success[46633]))
        unknown call_tmp[607144] "expr temp" "maybe param" "maybe type" "temp"
        (607147 'move' call_tmp[607144](46708 call c_memory_order failure[46637]))
        unknown call_tmp[607149] "expr temp" "maybe param" "maybe type" "temp"
        (607152 'move' call_tmp[607149](46709 call atomic_compare_exchange_weak call_tmp[607134] localizedExpected[46690] desired[46629] call_tmp[607139] call_tmp[607144]))
        (46710 call = ret[46684] call_tmp[607149])
        (474457 'end of statement' ret[46684] localizedExpected[46690])
        unknown call_tmp[607154] "expr temp" "maybe param" "maybe type" "temp"
        (607157 'move' call_tmp[607154](46714 call ! ret[46684]))
        unknown call_tmp[607159] "expr temp" "maybe param" "maybe type" "temp"
        (607162 'move' call_tmp[607159](46721 call _cond_test call_tmp[607154]))
        if call_tmp[607159]
        {
          (46718 call = expected[46623] localizedExpected[46690])
          (474460 'end of statement' localizedExpected[46690])
        }
      }
      (46734 'on block' 0 tmp[46729])
    }
    (506127 'move' ret[506121](506126 'coerce' ret[46684] bool[10]))
    gotoReturn _end_compareExchangeWeak[506119] _end_compareExchangeWeak[506119]
    (474462 'end of statement' ret[46684])
    label _end_compareExchangeWeak[506119]
    (506123 return ret[506121])
  }
  { scopeless type
    bool[10]
  }
  function AtomicT[48080](?).compareAndSwap[46749](arg _mt[48132]:_MT[238], arg this[48130]:AtomicT[48080](?), arg expected[46746] :
  (371431 call T _mt[243] this[48130]), arg desired[46752] :
  (371436 call T _mt[243] this[48130]), param arg order[46760]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506139] "RVV" "temp"
    function atomic_compare_exchange_strong[46779](ref arg obj[46776] :
    unknown call_tmp[607170] "expr temp" "maybe param" "maybe type" "temp", ref arg expected[46782] :
    (371452 call T _mt[243] this[48130]), arg desired[46786] :
    (371457 call T _mt[243] this[48130]), arg succ[46790]:memory_order[186653], arg fail[46794]:memory_order[186653], arg _chpl_cname[46802]:string[26] =
    unknown call_tmp[607181] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506133] "RVV" "temp"
      (506135 return ret[506133])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[46808] "dead at end of block" "insert auto destroy"
    (540759 'default init var' ret[46808] bool[10])
    (46811 'end of statement')
    const tmp[46843] "const" "temp"
    unknown call_tmp[607186] "expr temp" "maybe param" "maybe type" "temp"
    (607189 'move' call_tmp[607186](46840 '_wide_get_locale' this[48130]))
    (46845 'move' tmp[46843](46841 'deref' call_tmp[607186]))
    {
      {
        unknown mutableExpected[46814] "dead at end of block" "insert auto destroy"
        (540761 'init var' mutableExpected[46814] expected[46746])
        (46817 'end of statement')
        unknown call_tmp[607193] "expr temp" "maybe param" "maybe type" "temp"
        (607196 'move' call_tmp[607193](371467 call _v _mt[243] this[48130]))
        unknown call_tmp[607198] "expr temp" "maybe param" "maybe type" "temp"
        (607201 'move' call_tmp[607198](46828 call c_memory_order order[46760]))
        unknown call_tmp[607203] "expr temp" "maybe param" "maybe type" "temp"
        (607206 'move' call_tmp[607203](46833 call readableOrder order[46760]))
        unknown call_tmp[607208] "expr temp" "maybe param" "maybe type" "temp"
        (607211 'move' call_tmp[607208](46835 call c_memory_order call_tmp[607203]))
        unknown call_tmp[607213] "expr temp" "maybe param" "maybe type" "temp"
        (607216 'move' call_tmp[607213](46836 call atomic_compare_exchange_strong call_tmp[607193] mutableExpected[46814] desired[46752] call_tmp[607198] call_tmp[607208]))
        (46837 call = ret[46808] call_tmp[607213])
        (474464 'end of statement' ret[46808] mutableExpected[46814])
      }
      (46848 'on block' 0 tmp[46843])
    }
    (506145 'move' ret[506139](506144 'coerce' ret[46808] bool[10]))
    gotoReturn _end_compareAndSwap[506137] _end_compareAndSwap[506137]
    (474467 'end of statement' ret[46808])
    label _end_compareAndSwap[506137]
    (506141 return ret[506139])
  }
  { scopeless type
    bool[10]
  }
  function AtomicT[48080](?).fetchAdd[46863](arg _mt[48136]:_MT[238], arg this[48134]:AtomicT[48080](?), arg value[46860] :
  (371477 call T _mt[243] this[48134]), param arg order[46870]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506157] "RVV" "temp"
    function atomic_fetch_add[46905](ref arg obj[46902] :
    unknown call_tmp[607222] "expr temp" "maybe param" "maybe type" "temp", arg operand[46908] :
    (371498 call T _mt[243] this[48134]), arg order[46912]:memory_order[186653], arg _chpl_cname[46920]:string[26] =
    unknown call_tmp[607231] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506151] "RVV" "temp"
      (506153 return ret[506151])
    }
    { scopeless type
      (371504 call T _mt[243] this[48134])
    }
    unknown ret[46926] "dead at end of block" "insert auto destroy"
    unknown call_tmp[607240] "expr temp" "maybe param" "maybe type" "temp"
    (607243 'move' call_tmp[607240](371509 call T _mt[243] this[48134]))
    (540763 'default init var' ret[46926] call_tmp[607240])
    (46929 'end of statement')
    const tmp[46947] "const" "temp"
    unknown call_tmp[607245] "expr temp" "maybe param" "maybe type" "temp"
    (607248 'move' call_tmp[607245](46944 '_wide_get_locale' this[48134]))
    (46949 'move' tmp[46947](46945 'deref' call_tmp[607245]))
    {
      unknown call_tmp[607252] "expr temp" "maybe param" "maybe type" "temp"
      (607255 'move' call_tmp[607252](371516 call _v _mt[243] this[48134]))
      unknown call_tmp[607257] "expr temp" "maybe param" "maybe type" "temp"
      (607260 'move' call_tmp[607257](46939 call c_memory_order order[46870]))
      unknown call_tmp[607262] "expr temp" "maybe param" "maybe type" "temp"
      (607265 'move' call_tmp[607262](46940 call atomic_fetch_add call_tmp[607252] value[46860] call_tmp[607257]))
      (46941 call = ret[46926] call_tmp[607262])
      (474469 'end of statement' ret[46926])
      (46952 'on block' 0 tmp[46947])
    }
    unknown call_tmp[607269] "expr temp" "maybe param" "maybe type" "temp"
    (607272 'move' call_tmp[607269](506162 call T _mt[243] this[48134]))
    (506166 'move' ret[506157](506165 'coerce' ret[46926] call_tmp[607269]))
    gotoReturn _end_fetchAdd[506155] _end_fetchAdd[506155]
    (474471 'end of statement' ret[46926])
    label _end_fetchAdd[506155]
    (506159 return ret[506157])
  }
  { scopeless type
    (371483 call T _mt[243] this[48134])
  }
  function AtomicT[48080](?).add[46967](arg _mt[48140]:_MT[238], arg this[48138]:AtomicT[48080](?), arg value[46964] :
  (371524 call T _mt[243] this[48138]), param arg order[46974]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506178] "RVV" "temp"
    function atomic_fetch_add[46993](ref arg obj[46990] :
    unknown call_tmp[607280] "expr temp" "maybe param" "maybe type" "temp", arg operand[46996] :
    (371540 call T _mt[243] this[48138]), arg order[47000]:memory_order[186653], arg _chpl_cname[47008]:string[26] =
    unknown call_tmp[607289] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506172] "RVV" "temp"
      (506174 return ret[506172])
    }
    { scopeless type
      (371546 call T _mt[243] this[48138])
    }
    const tmp[47027] "const" "temp"
    unknown call_tmp[607296] "expr temp" "maybe param" "maybe type" "temp"
    (607299 'move' call_tmp[607296](47024 '_wide_get_locale' this[48138]))
    (47029 'move' tmp[47027](47025 'deref' call_tmp[607296]))
    {
      unknown call_tmp[607303] "expr temp" "maybe param" "maybe type" "temp"
      (607306 'move' call_tmp[607303](371552 call _v _mt[243] this[48138]))
      unknown call_tmp[607308] "expr temp" "maybe param" "maybe type" "temp"
      (607311 'move' call_tmp[607308](47021 call c_memory_order order[46974]))
      (47022 call atomic_fetch_add call_tmp[607303] value[46964] call_tmp[607308])
      (47032 'on block' 0 tmp[47027])
    }
    (506180 return ret[506178])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48080](?).fetchSub[47044](arg _mt[48144]:_MT[238], arg this[48142]:AtomicT[48080](?), arg value[47041] :
  (371559 call T _mt[243] this[48142]), param arg order[47051]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506190] "RVV" "temp"
    function atomic_fetch_sub[47086](ref arg obj[47083] :
    unknown call_tmp[607317] "expr temp" "maybe param" "maybe type" "temp", arg operand[47089] :
    (371580 call T _mt[243] this[48142]), arg order[47093]:memory_order[186653], arg _chpl_cname[47101]:string[26] =
    unknown call_tmp[607326] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506184] "RVV" "temp"
      (506186 return ret[506184])
    }
    { scopeless type
      (371586 call T _mt[243] this[48142])
    }
    unknown ret[47107] "dead at end of block" "insert auto destroy"
    unknown call_tmp[607335] "expr temp" "maybe param" "maybe type" "temp"
    (607338 'move' call_tmp[607335](371591 call T _mt[243] this[48142]))
    (540765 'default init var' ret[47107] call_tmp[607335])
    (47110 'end of statement')
    const tmp[47128] "const" "temp"
    unknown call_tmp[607340] "expr temp" "maybe param" "maybe type" "temp"
    (607343 'move' call_tmp[607340](47125 '_wide_get_locale' this[48142]))
    (47130 'move' tmp[47128](47126 'deref' call_tmp[607340]))
    {
      unknown call_tmp[607347] "expr temp" "maybe param" "maybe type" "temp"
      (607350 'move' call_tmp[607347](371598 call _v _mt[243] this[48142]))
      unknown call_tmp[607352] "expr temp" "maybe param" "maybe type" "temp"
      (607355 'move' call_tmp[607352](47120 call c_memory_order order[47051]))
      unknown call_tmp[607357] "expr temp" "maybe param" "maybe type" "temp"
      (607360 'move' call_tmp[607357](47121 call atomic_fetch_sub call_tmp[607347] value[47041] call_tmp[607352]))
      (47122 call = ret[47107] call_tmp[607357])
      (474474 'end of statement' ret[47107])
      (47133 'on block' 0 tmp[47128])
    }
    unknown call_tmp[607364] "expr temp" "maybe param" "maybe type" "temp"
    (607367 'move' call_tmp[607364](506195 call T _mt[243] this[48142]))
    (506199 'move' ret[506190](506198 'coerce' ret[47107] call_tmp[607364]))
    gotoReturn _end_fetchSub[506188] _end_fetchSub[506188]
    (474476 'end of statement' ret[47107])
    label _end_fetchSub[506188]
    (506192 return ret[506190])
  }
  { scopeless type
    (371565 call T _mt[243] this[48142])
  }
  function AtomicT[48080](?).sub[47148](arg _mt[48148]:_MT[238], arg this[48146]:AtomicT[48080](?), arg value[47145] :
  (371606 call T _mt[243] this[48146]), param arg order[47155]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506211] "RVV" "temp"
    function atomic_fetch_sub[47174](ref arg obj[47171] :
    unknown call_tmp[607375] "expr temp" "maybe param" "maybe type" "temp", arg operand[47177] :
    (371622 call T _mt[243] this[48146]), arg order[47181]:memory_order[186653], arg _chpl_cname[47189]:string[26] =
    unknown call_tmp[607384] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506205] "RVV" "temp"
      (506207 return ret[506205])
    }
    { scopeless type
      (371628 call T _mt[243] this[48146])
    }
    const tmp[47208] "const" "temp"
    unknown call_tmp[607391] "expr temp" "maybe param" "maybe type" "temp"
    (607394 'move' call_tmp[607391](47205 '_wide_get_locale' this[48146]))
    (47210 'move' tmp[47208](47206 'deref' call_tmp[607391]))
    {
      unknown call_tmp[607398] "expr temp" "maybe param" "maybe type" "temp"
      (607401 'move' call_tmp[607398](371634 call _v _mt[243] this[48146]))
      unknown call_tmp[607403] "expr temp" "maybe param" "maybe type" "temp"
      (607406 'move' call_tmp[607403](47202 call c_memory_order order[47155]))
      (47203 call atomic_fetch_sub call_tmp[607398] value[47145] call_tmp[607403])
      (47213 'on block' 0 tmp[47208])
    }
    (506213 return ret[506211])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48080](?).fetchOr[47225](arg _mt[48152]:_MT[238], arg this[48150]:AtomicT[48080](?), arg value[47222] :
  (371641 call T _mt[243] this[48150]), param arg order[47232]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506223] "RVV" "temp"
    unknown call_tmp[607412] "expr temp" "maybe param" "maybe type" "temp"
    (607415 'move' call_tmp[607412](371652 call T _mt[243] this[48150]))
    unknown call_tmp[607417] "expr temp" "maybe param" "maybe type" "temp"
    (607420 'move' call_tmp[607417](47240 call isIntegral call_tmp[607412]))
    unknown call_tmp[607422] "expr temp" "maybe param" "maybe type" "temp"
    (607425 'move' call_tmp[607422](47241 call ! call_tmp[607417]))
    unknown call_tmp[607427] "expr temp" "maybe param" "maybe type" "temp"
    (607430 'move' call_tmp[607427](47264 call _cond_test call_tmp[607422]))
    if call_tmp[607427]
    {
      (47262 call compilerError "fetchOr is only defined for integer atomic types")
    }
    function atomic_fetch_or[47300](ref arg obj[47297] :
    unknown call_tmp[607434] "expr temp" "maybe param" "maybe type" "temp", arg operand[47303] :
    (371667 call T _mt[243] this[48150]), arg order[47307]:memory_order[186653], arg _chpl_cname[47315]:string[26] =
    unknown call_tmp[607443] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506217] "RVV" "temp"
      (506219 return ret[506217])
    }
    { scopeless type
      (371673 call T _mt[243] this[48150])
    }
    unknown ret[47320] "dead at end of block" "insert auto destroy"
    unknown call_tmp[607452] "expr temp" "maybe param" "maybe type" "temp"
    (607455 'move' call_tmp[607452](371678 call T _mt[243] this[48150]))
    (540767 'default init var' ret[47320] call_tmp[607452])
    (47323 'end of statement')
    const tmp[47341] "const" "temp"
    unknown call_tmp[607457] "expr temp" "maybe param" "maybe type" "temp"
    (607460 'move' call_tmp[607457](47338 '_wide_get_locale' this[48150]))
    (47343 'move' tmp[47341](47339 'deref' call_tmp[607457]))
    {
      unknown call_tmp[607464] "expr temp" "maybe param" "maybe type" "temp"
      (607467 'move' call_tmp[607464](371685 call _v _mt[243] this[48150]))
      unknown call_tmp[607469] "expr temp" "maybe param" "maybe type" "temp"
      (607472 'move' call_tmp[607469](47333 call c_memory_order order[47232]))
      unknown call_tmp[607474] "expr temp" "maybe param" "maybe type" "temp"
      (607477 'move' call_tmp[607474](47334 call atomic_fetch_or call_tmp[607464] value[47222] call_tmp[607469]))
      (47335 call = ret[47320] call_tmp[607474])
      (474480 'end of statement' ret[47320])
      (47346 'on block' 0 tmp[47341])
    }
    unknown call_tmp[607481] "expr temp" "maybe param" "maybe type" "temp"
    (607484 'move' call_tmp[607481](506228 call T _mt[243] this[48150]))
    (506232 'move' ret[506223](506231 'coerce' ret[47320] call_tmp[607481]))
    gotoReturn _end_fetchOr[506221] _end_fetchOr[506221]
    (474482 'end of statement' ret[47320])
    label _end_fetchOr[506221]
    (506225 return ret[506223])
  }
  { scopeless type
    (371647 call T _mt[243] this[48150])
  }
  function AtomicT[48080](?).or[47361](arg _mt[48156]:_MT[238], arg this[48154]:AtomicT[48080](?), arg value[47358] :
  (371693 call T _mt[243] this[48154]), param arg order[47368]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506244] "RVV" "temp"
    unknown call_tmp[607492] "expr temp" "maybe param" "maybe type" "temp"
    (607495 'move' call_tmp[607492](371699 call T _mt[243] this[48154]))
    unknown call_tmp[607497] "expr temp" "maybe param" "maybe type" "temp"
    (607500 'move' call_tmp[607497](47376 call isIntegral call_tmp[607492]))
    unknown call_tmp[607502] "expr temp" "maybe param" "maybe type" "temp"
    (607505 'move' call_tmp[607502](47377 call ! call_tmp[607497]))
    unknown call_tmp[607507] "expr temp" "maybe param" "maybe type" "temp"
    (607510 'move' call_tmp[607507](47402 call _cond_test call_tmp[607502]))
    if call_tmp[607507]
    {
      (47400 call compilerError "or is only defined for integer atomic types")
    }
    function atomic_fetch_or[47422](ref arg obj[47419] :
    unknown call_tmp[607514] "expr temp" "maybe param" "maybe type" "temp", arg operand[47425] :
    (371714 call T _mt[243] this[48154]), arg order[47429]:memory_order[186653], arg _chpl_cname[47437]:string[26] =
    unknown call_tmp[607523] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506238] "RVV" "temp"
      (506240 return ret[506238])
    }
    { scopeless type
      (371720 call T _mt[243] this[48154])
    }
    const tmp[47455] "const" "temp"
    unknown call_tmp[607530] "expr temp" "maybe param" "maybe type" "temp"
    (607533 'move' call_tmp[607530](47452 '_wide_get_locale' this[48154]))
    (47457 'move' tmp[47455](47453 'deref' call_tmp[607530]))
    {
      unknown call_tmp[607537] "expr temp" "maybe param" "maybe type" "temp"
      (607540 'move' call_tmp[607537](371726 call _v _mt[243] this[48154]))
      unknown call_tmp[607542] "expr temp" "maybe param" "maybe type" "temp"
      (607545 'move' call_tmp[607542](47449 call c_memory_order order[47368]))
      (47450 call atomic_fetch_or call_tmp[607537] value[47358] call_tmp[607542])
      (47460 'on block' 0 tmp[47455])
    }
    (506246 return ret[506244])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48080](?).fetchAnd[47472](arg _mt[48160]:_MT[238], arg this[48158]:AtomicT[48080](?), arg value[47469] :
  (371733 call T _mt[243] this[48158]), param arg order[47479]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506256] "RVV" "temp"
    unknown call_tmp[607551] "expr temp" "maybe param" "maybe type" "temp"
    (607554 'move' call_tmp[607551](371744 call T _mt[243] this[48158]))
    unknown call_tmp[607556] "expr temp" "maybe param" "maybe type" "temp"
    (607559 'move' call_tmp[607556](47487 call isIntegral call_tmp[607551]))
    unknown call_tmp[607561] "expr temp" "maybe param" "maybe type" "temp"
    (607564 'move' call_tmp[607561](47488 call ! call_tmp[607556]))
    unknown call_tmp[607566] "expr temp" "maybe param" "maybe type" "temp"
    (607569 'move' call_tmp[607566](47511 call _cond_test call_tmp[607561]))
    if call_tmp[607566]
    {
      (47509 call compilerError "fetchAnd is only defined for integer atomic types")
    }
    function atomic_fetch_and[47547](ref arg obj[47544] :
    unknown call_tmp[607573] "expr temp" "maybe param" "maybe type" "temp", arg operand[47550] :
    (371759 call T _mt[243] this[48158]), arg order[47554]:memory_order[186653], arg _chpl_cname[47562]:string[26] =
    unknown call_tmp[607582] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506250] "RVV" "temp"
      (506252 return ret[506250])
    }
    { scopeless type
      (371765 call T _mt[243] this[48158])
    }
    unknown ret[47567] "dead at end of block" "insert auto destroy"
    unknown call_tmp[607591] "expr temp" "maybe param" "maybe type" "temp"
    (607594 'move' call_tmp[607591](371770 call T _mt[243] this[48158]))
    (540769 'default init var' ret[47567] call_tmp[607591])
    (47570 'end of statement')
    const tmp[47588] "const" "temp"
    unknown call_tmp[607596] "expr temp" "maybe param" "maybe type" "temp"
    (607599 'move' call_tmp[607596](47585 '_wide_get_locale' this[48158]))
    (47590 'move' tmp[47588](47586 'deref' call_tmp[607596]))
    {
      unknown call_tmp[607603] "expr temp" "maybe param" "maybe type" "temp"
      (607606 'move' call_tmp[607603](371777 call _v _mt[243] this[48158]))
      unknown call_tmp[607608] "expr temp" "maybe param" "maybe type" "temp"
      (607611 'move' call_tmp[607608](47580 call c_memory_order order[47479]))
      unknown call_tmp[607613] "expr temp" "maybe param" "maybe type" "temp"
      (607616 'move' call_tmp[607613](47581 call atomic_fetch_and call_tmp[607603] value[47469] call_tmp[607608]))
      (47582 call = ret[47567] call_tmp[607613])
      (474487 'end of statement' ret[47567])
      (47593 'on block' 0 tmp[47588])
    }
    unknown call_tmp[607620] "expr temp" "maybe param" "maybe type" "temp"
    (607623 'move' call_tmp[607620](506261 call T _mt[243] this[48158]))
    (506265 'move' ret[506256](506264 'coerce' ret[47567] call_tmp[607620]))
    gotoReturn _end_fetchAnd[506254] _end_fetchAnd[506254]
    (474489 'end of statement' ret[47567])
    label _end_fetchAnd[506254]
    (506258 return ret[506256])
  }
  { scopeless type
    (371739 call T _mt[243] this[48158])
  }
  function AtomicT[48080](?).and[47608](arg _mt[48164]:_MT[238], arg this[48162]:AtomicT[48080](?), arg value[47605] :
  (371785 call T _mt[243] this[48162]), param arg order[47615]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506277] "RVV" "temp"
    unknown call_tmp[607631] "expr temp" "maybe param" "maybe type" "temp"
    (607634 'move' call_tmp[607631](371791 call T _mt[243] this[48162]))
    unknown call_tmp[607636] "expr temp" "maybe param" "maybe type" "temp"
    (607639 'move' call_tmp[607636](47623 call isIntegral call_tmp[607631]))
    unknown call_tmp[607641] "expr temp" "maybe param" "maybe type" "temp"
    (607644 'move' call_tmp[607641](47624 call ! call_tmp[607636]))
    unknown call_tmp[607646] "expr temp" "maybe param" "maybe type" "temp"
    (607649 'move' call_tmp[607646](47647 call _cond_test call_tmp[607641]))
    if call_tmp[607646]
    {
      (47645 call compilerError "and is only defined for integer atomic types")
    }
    function atomic_fetch_and[47667](ref arg obj[47664] :
    unknown call_tmp[607653] "expr temp" "maybe param" "maybe type" "temp", arg operand[47670] :
    (371806 call T _mt[243] this[48162]), arg order[47674]:memory_order[186653], arg _chpl_cname[47682]:string[26] =
    unknown call_tmp[607662] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506271] "RVV" "temp"
      (506273 return ret[506271])
    }
    { scopeless type
      (371812 call T _mt[243] this[48162])
    }
    const tmp[47700] "const" "temp"
    unknown call_tmp[607669] "expr temp" "maybe param" "maybe type" "temp"
    (607672 'move' call_tmp[607669](47697 '_wide_get_locale' this[48162]))
    (47702 'move' tmp[47700](47698 'deref' call_tmp[607669]))
    {
      unknown call_tmp[607676] "expr temp" "maybe param" "maybe type" "temp"
      (607679 'move' call_tmp[607676](371818 call _v _mt[243] this[48162]))
      unknown call_tmp[607681] "expr temp" "maybe param" "maybe type" "temp"
      (607684 'move' call_tmp[607681](47694 call c_memory_order order[47615]))
      (47695 call atomic_fetch_and call_tmp[607676] value[47605] call_tmp[607681])
      (47705 'on block' 0 tmp[47700])
    }
    (506279 return ret[506277])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48080](?).fetchXor[47717](arg _mt[48168]:_MT[238], arg this[48166]:AtomicT[48080](?), arg value[47714] :
  (371825 call T _mt[243] this[48166]), param arg order[47724]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506289] "RVV" "temp"
    unknown call_tmp[607690] "expr temp" "maybe param" "maybe type" "temp"
    (607693 'move' call_tmp[607690](371836 call T _mt[243] this[48166]))
    unknown call_tmp[607695] "expr temp" "maybe param" "maybe type" "temp"
    (607698 'move' call_tmp[607695](47732 call isIntegral call_tmp[607690]))
    unknown call_tmp[607700] "expr temp" "maybe param" "maybe type" "temp"
    (607703 'move' call_tmp[607700](47733 call ! call_tmp[607695]))
    unknown call_tmp[607705] "expr temp" "maybe param" "maybe type" "temp"
    (607708 'move' call_tmp[607705](47756 call _cond_test call_tmp[607700]))
    if call_tmp[607705]
    {
      (47754 call compilerError "fetchXor is only defined for integer atomic types")
    }
    function atomic_fetch_xor[47792](ref arg obj[47789] :
    unknown call_tmp[607712] "expr temp" "maybe param" "maybe type" "temp", arg operand[47795] :
    (371851 call T _mt[243] this[48166]), arg order[47799]:memory_order[186653], arg _chpl_cname[47807]:string[26] =
    unknown call_tmp[607721] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506283] "RVV" "temp"
      (506285 return ret[506283])
    }
    { scopeless type
      (371857 call T _mt[243] this[48166])
    }
    unknown ret[47812] "dead at end of block" "insert auto destroy"
    unknown call_tmp[607730] "expr temp" "maybe param" "maybe type" "temp"
    (607733 'move' call_tmp[607730](371862 call T _mt[243] this[48166]))
    (540771 'default init var' ret[47812] call_tmp[607730])
    (47815 'end of statement')
    const tmp[47833] "const" "temp"
    unknown call_tmp[607735] "expr temp" "maybe param" "maybe type" "temp"
    (607738 'move' call_tmp[607735](47830 '_wide_get_locale' this[48166]))
    (47835 'move' tmp[47833](47831 'deref' call_tmp[607735]))
    {
      unknown call_tmp[607742] "expr temp" "maybe param" "maybe type" "temp"
      (607745 'move' call_tmp[607742](371869 call _v _mt[243] this[48166]))
      unknown call_tmp[607747] "expr temp" "maybe param" "maybe type" "temp"
      (607750 'move' call_tmp[607747](47825 call c_memory_order order[47724]))
      unknown call_tmp[607752] "expr temp" "maybe param" "maybe type" "temp"
      (607755 'move' call_tmp[607752](47826 call atomic_fetch_xor call_tmp[607742] value[47714] call_tmp[607747]))
      (47827 call = ret[47812] call_tmp[607752])
      (474494 'end of statement' ret[47812])
      (47838 'on block' 0 tmp[47833])
    }
    unknown call_tmp[607759] "expr temp" "maybe param" "maybe type" "temp"
    (607762 'move' call_tmp[607759](506294 call T _mt[243] this[48166]))
    (506298 'move' ret[506289](506297 'coerce' ret[47812] call_tmp[607759]))
    gotoReturn _end_fetchXor[506287] _end_fetchXor[506287]
    (474496 'end of statement' ret[47812])
    label _end_fetchXor[506287]
    (506291 return ret[506289])
  }
  { scopeless type
    (371831 call T _mt[243] this[48166])
  }
  function AtomicT[48080](?).xor[47853](arg _mt[48172]:_MT[238], arg this[48170]:AtomicT[48080](?), arg value[47850] :
  (371877 call T _mt[243] this[48170]), param arg order[47860]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506310] "RVV" "temp"
    unknown call_tmp[607770] "expr temp" "maybe param" "maybe type" "temp"
    (607773 'move' call_tmp[607770](371883 call T _mt[243] this[48170]))
    unknown call_tmp[607775] "expr temp" "maybe param" "maybe type" "temp"
    (607778 'move' call_tmp[607775](47868 call isIntegral call_tmp[607770]))
    unknown call_tmp[607780] "expr temp" "maybe param" "maybe type" "temp"
    (607783 'move' call_tmp[607780](47869 call ! call_tmp[607775]))
    unknown call_tmp[607785] "expr temp" "maybe param" "maybe type" "temp"
    (607788 'move' call_tmp[607785](47892 call _cond_test call_tmp[607780]))
    if call_tmp[607785]
    {
      (47890 call compilerError "xor is only defined for integer atomic types")
    }
    function atomic_fetch_xor[47912](ref arg obj[47909] :
    unknown call_tmp[607792] "expr temp" "maybe param" "maybe type" "temp", arg operand[47915] :
    (371898 call T _mt[243] this[48170]), arg order[47919]:memory_order[186653], arg _chpl_cname[47927]:string[26] =
    unknown call_tmp[607801] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506304] "RVV" "temp"
      (506306 return ret[506304])
    }
    { scopeless type
      (371904 call T _mt[243] this[48170])
    }
    const tmp[47945] "const" "temp"
    unknown call_tmp[607808] "expr temp" "maybe param" "maybe type" "temp"
    (607811 'move' call_tmp[607808](47942 '_wide_get_locale' this[48170]))
    (47947 'move' tmp[47945](47943 'deref' call_tmp[607808]))
    {
      unknown call_tmp[607815] "expr temp" "maybe param" "maybe type" "temp"
      (607818 'move' call_tmp[607815](371910 call _v _mt[243] this[48170]))
      unknown call_tmp[607820] "expr temp" "maybe param" "maybe type" "temp"
      (607823 'move' call_tmp[607820](47939 call c_memory_order order[47860]))
      (47940 call atomic_fetch_xor call_tmp[607815] value[47850] call_tmp[607820])
      (47950 'on block' 0 tmp[47945])
    }
    (506312 return ret[506310])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48080](?).waitFor[47962](arg _mt[48176]:_MT[238], const arg this[48174]:AtomicT[48080](?), arg value[47959] :
  (371917 call T _mt[243] this[48174]), param arg order[47969]:memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506316] "RVV" "temp"
    const tmp[48051] "const" "temp"
    unknown call_tmp[607827] "expr temp" "maybe param" "maybe type" "temp"
    (607830 'move' call_tmp[607827](48048 '_wide_get_locale' this[48174]))
    (48053 'move' tmp[48051](48049 'deref' call_tmp[607827]))
    {
      {
        {
          unknown tmp[47994] "temp"
          unknown call_tmp[607834] "expr temp" "maybe param" "maybe type" "temp"
          (607837 'move' call_tmp[607834](48029 call(48026 call (partial) read _mt[243] this[48174])(order = relaxed[187010])))
          unknown call_tmp[607839] "expr temp" "maybe param" "maybe type" "temp"
          (607842 'move' call_tmp[607839](48024 call != call_tmp[607834] value[47959]))
          (48036 'move' tmp[47994](48022 call _cond_test call_tmp[607839]))
          WhileDo[47999]
          {
            {
              (47991 call chpl_task_yield)
            }
            label _continueLabel[47997]
            unknown call_tmp[607846] "expr temp" "maybe param" "maybe type" "temp"
            (607849 'move' call_tmp[607846](48010 call(48007 call (partial) read _mt[243] this[48174])(order = relaxed[187010])))
            unknown call_tmp[607851] "expr temp" "maybe param" "maybe type" "temp"
            (607854 'move' call_tmp[607851](48005 call != call_tmp[607846] value[47959]))
            (48017 'move' tmp[47994](48003 call _cond_test call_tmp[607851]))
            tmp[47994]
          }
          label _breakLabel[47998]
        }
        unknown call_tmp[607856] "expr temp" "maybe param" "maybe type" "temp"
        (607859 'move' call_tmp[607856](48044 call c_memory_order order[47969]))
        (48046 call chpl_atomic_thread_fence call_tmp[607856])
      }
      (48056 'on block' 0 tmp[48051])
    }
    (506318 return ret[506316])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48080](?).writeThis[48067](arg _mt[48180]:_MT[238], const arg this[48178]:AtomicT[48080](?), arg x[48065]:_any[178](?)) : _unknown[51] throws "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[607863] "expr temp" "maybe param" "maybe type" "temp"
    (607866 'move' call_tmp[607863](48072 call(371927 call (partial) read _mt[243] this[48178])))
    (48073 call <~> x[48065] call_tmp[607863])
    (506320 return _void[55])
  }
  type AtomicT[48080](?) unknown T[45949] "no doc" "type variable" unknown _v[45956] "no doc"(45955 call externT T[45949])
  function =[48189](ref arg a[48186]:AtomicBool[45877], const  ref arg b[48192]:AtomicBool[45877]) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    unknown call_tmp[607872] "expr temp" "maybe param" "maybe type" "temp"
    (607875 'move' call_tmp[607872](48204 call(48200 call (partial) read _mt[243] b[48192])))
    (48206 call(48196 call (partial) write _mt[243] a[48186]) call_tmp[607872])
    (506322 return _void[55])
  }
  function =[48217](ref arg a[48214]:AtomicBool[45877], arg b[48219]:_any[178](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (48242 call compilerError "Cannot directly assign atomic variables")
    (506324 return _void[55])
  }
  function =[48253](ref arg a[48250]:AtomicT[48080](?), const  ref arg b[48256]:AtomicT[48080](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    unknown call_tmp[607881] "expr temp" "maybe param" "maybe type" "temp"
    (607884 'move' call_tmp[607881](48268 call(48264 call (partial) read _mt[243] b[48256])))
    (48270 call(48260 call (partial) write _mt[243] a[48250]) call_tmp[607881])
    (506326 return _void[55])
  }
  function =[48281](ref arg a[48278]:AtomicT[48080](?), arg b[48283]:_any[178](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (48288 call compilerError "Cannot directly assign atomic variables")
    (506328 return _void[55])
  }
  function +[48299](arg a[48296]:AtomicT[48080](?), arg b[48301]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[506332] "RVV" "temp"
    (48322 call compilerError "Cannot directly add atomic variables")
    (474507 'end of statement')
    (506337 'move' ret[506332](506336 'deref' a[48296]))
    (506334 return ret[506332])
  }
  function -[48336](arg a[48333]:AtomicT[48080](?), arg b[48338]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[506341] "RVV" "temp"
    (48359 call compilerError "Cannot directly subtract atomic variables")
    (474509 'end of statement')
    (506346 'move' ret[506341](506345 'deref' a[48333]))
    (506343 return ret[506341])
  }
  function *[48373](arg a[48370]:AtomicT[48080](?), arg b[48375]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[506350] "RVV" "temp"
    (48396 call compilerError "Cannot directly multiply atomic variables")
    (474511 'end of statement')
    (506355 'move' ret[506350](506354 'deref' a[48370]))
    (506352 return ret[506350])
  }
  function /[48410](arg a[48407]:AtomicT[48080](?), arg b[48412]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[506359] "RVV" "temp"
    (48433 call compilerError "Cannot directly divide atomic variables")
    (474513 'end of statement')
    (506364 'move' ret[506359](506363 'deref' a[48407]))
    (506361 return ret[506359])
  }
  function %[48447](arg a[48444]:AtomicT[48080](?), arg b[48449]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[506368] "RVV" "temp"
    (48454 call compilerError "Cannot directly divide atomic variables")
    (474515 'end of statement')
    (506373 'move' ret[506368](506372 'deref' a[48444]))
    (506370 return ret[506368])
  }
  (355146 'used modules list'(43966 'use' ChapelBase[307])(43970 'use' MemConsistency[186648]))
}